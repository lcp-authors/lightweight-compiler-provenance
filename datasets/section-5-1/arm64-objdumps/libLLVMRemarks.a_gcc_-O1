In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMRemarks.a_gcc_-O1:

BitstreamRemarkParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x8
      10:	tst	w2, #0xff
      14:	b.ne	44 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE+0x44>  // b.any
      18:	bl	0 <_ZNSt3_V216generic_categoryEv>
      1c:	mov	x1, x0
      20:	mov	x8, x19
      24:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
      28:	add	x2, x2, #0x0
      2c:	mov	x0, #0x54                  	// #84
      30:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
      34:	mov	x0, x19
      38:	ldr	x19, [sp, #16]
      3c:	ldp	x29, x30, [sp], #32
      40:	ret
      44:	str	x1, [x0, #480]
      48:	mov	x0, #0x1                   	// #1
      4c:	str	x0, [x8]
      50:	b	34 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE+0x34>

0000000000000054 <_ZL13processStrTabRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalINS_9StringRefEEE>:
      54:	stp	x29, x30, [sp, #-48]!
      58:	mov	x29, sp
      5c:	stp	x19, x20, [sp, #16]
      60:	stp	x21, x22, [sp, #32]
      64:	mov	x21, x8
      68:	mov	x19, x0
      6c:	ldrb	w0, [x1, #16]
      70:	cbnz	w0, a4 <_ZL13processStrTabRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalINS_9StringRefEEE+0x50>
      74:	bl	0 <_ZNSt3_V216generic_categoryEv>
      78:	mov	x1, x0
      7c:	mov	x8, x21
      80:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
      84:	add	x2, x2, #0x0
      88:	mov	x0, #0x54                  	// #84
      8c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
      90:	mov	x0, x21
      94:	ldp	x19, x20, [sp, #16]
      98:	ldp	x21, x22, [sp, #32]
      9c:	ldp	x29, x30, [sp], #48
      a0:	ret
      a4:	mov	x20, x1
      a8:	add	x22, x19, #0x1a0
      ac:	ldrb	w0, [x19, #456]
      b0:	cbz	w0, c4 <_ZL13processStrTabRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalINS_9StringRefEEE+0x70>
      b4:	ldr	x0, [x19, #432]
      b8:	cbz	x0, c0 <_ZL13processStrTabRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalINS_9StringRefEEE+0x6c>
      bc:	bl	0 <_ZdlPv>
      c0:	strb	wzr, [x19, #456]
      c4:	ldp	x0, x1, [x20]
      c8:	mov	x2, x1
      cc:	mov	x1, x0
      d0:	mov	x0, x22
      d4:	bl	0 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE>
      d8:	mov	w0, #0x1                   	// #1
      dc:	strb	w0, [x19, #456]
      e0:	mov	x0, #0x1                   	// #1
      e4:	str	x0, [x21]
      e8:	b	90 <_ZL13processStrTabRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalINS_9StringRefEEE+0x3c>

00000000000000ec <_ZN4llvm7remarks25BitstreamMetaParserHelperC1ERNS_15BitstreamCursorERNS_18BitstreamBlockInfoE>:
      ec:	str	x1, [x0]
      f0:	str	x2, [x0, #8]
      f4:	strb	wzr, [x0, #16]
      f8:	strb	wzr, [x0, #24]
      fc:	strb	wzr, [x0, #32]
     100:	strb	wzr, [x0, #33]
     104:	strb	wzr, [x0, #40]
     108:	strb	wzr, [x0, #56]
     10c:	strb	wzr, [x0, #64]
     110:	strb	wzr, [x0, #80]
     114:	strb	wzr, [x0, #88]
     118:	strb	wzr, [x0, #96]
     11c:	ret

0000000000000120 <_ZN4llvm7remarks27BitstreamRemarkParserHelperC1ERNS_15BitstreamCursorE>:
     120:	str	x1, [x0]
     124:	strb	wzr, [x0, #8]
     128:	strb	wzr, [x0, #9]
     12c:	strb	wzr, [x0, #16]
     130:	strb	wzr, [x0, #24]
     134:	strb	wzr, [x0, #32]
     138:	strb	wzr, [x0, #40]
     13c:	strb	wzr, [x0, #48]
     140:	strb	wzr, [x0, #56]
     144:	strb	wzr, [x0, #64]
     148:	strb	wzr, [x0, #72]
     14c:	strb	wzr, [x0, #80]
     150:	strb	wzr, [x0, #84]
     154:	strb	wzr, [x0, #88]
     158:	strb	wzr, [x0, #92]
     15c:	strb	wzr, [x0, #96]
     160:	strb	wzr, [x0, #104]
     164:	strb	wzr, [x0, #112]
     168:	strb	wzr, [x0, #128]
     16c:	add	x1, x0, #0x98
     170:	str	x1, [x0, #136]
     174:	str	wzr, [x0, #144]
     178:	mov	w1, #0x8                   	// #8
     17c:	str	w1, [x0, #148]
     180:	ret

0000000000000184 <_ZN4llvm7remarks21BitstreamParserHelperC1ENS_9StringRefE>:
     184:	str	x1, [x0]
     188:	str	x2, [x0, #8]
     18c:	str	xzr, [x0, #16]
     190:	str	xzr, [x0, #24]
     194:	str	wzr, [x0, #32]
     198:	mov	w1, #0x2                   	// #2
     19c:	str	w1, [x0, #36]
     1a0:	str	xzr, [x0, #40]
     1a4:	str	xzr, [x0, #48]
     1a8:	str	xzr, [x0, #56]
     1ac:	add	x1, x0, #0x50
     1b0:	str	x1, [x0, #64]
     1b4:	str	wzr, [x0, #72]
     1b8:	mov	w1, #0x8                   	// #8
     1bc:	str	w1, [x0, #76]
     1c0:	str	xzr, [x0, #336]
     1c4:	str	xzr, [x0, #344]
     1c8:	str	xzr, [x0, #352]
     1cc:	str	xzr, [x0, #360]
     1d0:	ret

00000000000001d4 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE>:
     1d4:	stp	x29, x30, [sp, #-32]!
     1d8:	mov	x29, sp
     1dc:	str	x19, [sp, #16]
     1e0:	mov	x19, x8
     1e4:	ldrb	w2, [x1, #24]
     1e8:	cbz	w2, 228 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE+0x54>
     1ec:	ldr	x2, [x1, #16]
     1f0:	str	x2, [x0, #472]
     1f4:	ldrb	w2, [x1, #33]
     1f8:	cbz	w2, 264 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE+0x90>
     1fc:	ldrb	w1, [x1, #32]
     200:	cmp	w1, #0x2
     204:	b.ls	254 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE+0x80>  // b.plast
     208:	bl	0 <_ZNSt3_V216generic_categoryEv>
     20c:	mov	x1, x0
     210:	mov	x8, x19
     214:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     218:	add	x2, x2, #0x0
     21c:	mov	x0, #0x54                  	// #84
     220:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     224:	b	244 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE+0x70>
     228:	bl	0 <_ZNSt3_V216generic_categoryEv>
     22c:	mov	x1, x0
     230:	mov	x8, x19
     234:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     238:	add	x2, x2, #0x0
     23c:	mov	x0, #0x54                  	// #84
     240:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     244:	mov	x0, x19
     248:	ldr	x19, [sp, #16]
     24c:	ldp	x29, x30, [sp], #32
     250:	ret
     254:	str	w1, [x0, #488]
     258:	mov	x0, #0x1                   	// #1
     25c:	str	x0, [x8]
     260:	b	244 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE+0x70>
     264:	bl	0 <_ZNSt3_V216generic_categoryEv>
     268:	mov	x1, x0
     26c:	mov	x8, x19
     270:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     274:	add	x2, x2, #0x0
     278:	mov	x0, #0x54                  	// #84
     27c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     280:	b	244 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE+0x70>

0000000000000284 <_ZN4llvm7remarks21BitstreamRemarkParser21processStandaloneMetaERNS0_25BitstreamMetaParserHelperE>:
     284:	stp	x29, x30, [sp, #-96]!
     288:	mov	x29, sp
     28c:	stp	x19, x20, [sp, #16]
     290:	str	x21, [sp, #32]
     294:	mov	x20, x8
     298:	mov	x21, x0
     29c:	mov	x19, x1
     2a0:	ldp	x2, x3, [x1, #40]
     2a4:	stp	x2, x3, [sp, #48]
     2a8:	ldr	x1, [x1, #56]
     2ac:	str	x1, [sp, #64]
     2b0:	add	x8, sp, #0x58
     2b4:	add	x1, sp, #0x30
     2b8:	bl	54 <_ZL13processStrTabRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalINS_9StringRefEEE>
     2bc:	ldr	x2, [sp, #88]
     2c0:	ands	x1, x2, #0xfffffffffffffffe
     2c4:	cset	x2, ne  // ne = any
     2c8:	orr	x2, x2, x1
     2cc:	str	x2, [sp, #88]
     2d0:	ands	x0, x2, #0xfffffffffffffffe
     2d4:	b.eq	2f4 <_ZN4llvm7remarks21BitstreamRemarkParser21processStandaloneMetaERNS0_25BitstreamMetaParserHelperE+0x70>  // b.none
     2d8:	orr	x0, x0, #0x1
     2dc:	str	x0, [x20]
     2e0:	mov	x0, x20
     2e4:	ldp	x19, x20, [sp, #16]
     2e8:	ldr	x21, [sp, #32]
     2ec:	ldp	x29, x30, [sp], #96
     2f0:	ret
     2f4:	tbnz	w2, #0, 314 <_ZN4llvm7remarks21BitstreamRemarkParser21processStandaloneMetaERNS0_25BitstreamMetaParserHelperE+0x90>
     2f8:	ldp	x0, x1, [x19, #88]
     2fc:	mov	x8, x20
     300:	mov	x2, x1
     304:	mov	x1, x0
     308:	mov	x0, x21
     30c:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     310:	b	2e0 <_ZN4llvm7remarks21BitstreamRemarkParser21processStandaloneMetaERNS0_25BitstreamMetaParserHelperE+0x5c>
     314:	add	x0, sp, #0x58
     318:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000000031c <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksFileMetaERNS0_25BitstreamMetaParserHelperE>:
     31c:	stp	x29, x30, [sp, #-32]!
     320:	mov	x29, sp
     324:	str	x19, [sp, #16]
     328:	mov	x19, x8
     32c:	ldp	x2, x3, [x1, #88]
     330:	mov	x1, x2
     334:	mov	x2, x3
     338:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     33c:	mov	x0, x19
     340:	ldr	x19, [sp, #16]
     344:	ldp	x29, x30, [sp], #32
     348:	ret

000000000000034c <_ZL13unknownRecordPKcj>:
     34c:	stp	x29, x30, [sp, #-176]!
     350:	mov	x29, sp
     354:	stp	x19, x20, [sp, #16]
     358:	str	x21, [sp, #32]
     35c:	mov	x19, x8
     360:	mov	x20, x0
     364:	mov	w21, w1
     368:	bl	0 <_ZNSt3_V216generic_categoryEv>
     36c:	mov	w1, #0x54                  	// #84
     370:	str	w1, [sp, #48]
     374:	str	x0, [sp, #56]
     378:	add	x0, sp, #0x40
     37c:	add	x1, sp, #0x50
     380:	str	x1, [sp, #64]
     384:	str	xzr, [sp, #72]
     388:	strb	wzr, [sp, #80]
     38c:	mov	w1, #0x1                   	// #1
     390:	str	w1, [sp, #160]
     394:	str	xzr, [sp, #152]
     398:	str	xzr, [sp, #144]
     39c:	str	xzr, [sp, #136]
     3a0:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
     3a4:	ldr	x2, [x2]
     3a8:	add	x2, x2, #0x10
     3ac:	str	x2, [sp, #128]
     3b0:	str	x0, [sp, #168]
     3b4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     3b8:	add	x0, x0, #0x0
     3bc:	str	x0, [sp, #104]
     3c0:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     3c4:	ldr	x2, [x2]
     3c8:	add	x2, x2, #0x10
     3cc:	str	x2, [sp, #96]
     3d0:	str	w21, [sp, #112]
     3d4:	str	x20, [sp, #120]
     3d8:	add	x1, sp, #0x60
     3dc:	add	x0, sp, #0x80
     3e0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     3e4:	ldr	x1, [sp, #152]
     3e8:	ldr	x0, [sp, #136]
     3ec:	cmp	x1, x0
     3f0:	b.eq	3fc <_ZL13unknownRecordPKcj+0xb0>  // b.none
     3f4:	add	x0, sp, #0x80
     3f8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     3fc:	mov	x8, x19
     400:	add	x1, sp, #0x30
     404:	ldr	x0, [sp, #168]
     408:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     40c:	add	x0, sp, #0x80
     410:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     414:	ldr	x0, [sp, #64]
     418:	add	x1, sp, #0x50
     41c:	cmp	x0, x1
     420:	b.eq	428 <_ZL13unknownRecordPKcj+0xdc>  // b.none
     424:	bl	0 <_ZdlPv>
     428:	mov	x0, x19
     42c:	ldp	x19, x20, [sp, #16]
     430:	ldr	x21, [sp, #32]
     434:	ldp	x29, x30, [sp], #176
     438:	ret

000000000000043c <_ZL15malformedRecordPKcS0_>:
     43c:	stp	x29, x30, [sp, #-176]!
     440:	mov	x29, sp
     444:	stp	x19, x20, [sp, #16]
     448:	str	x21, [sp, #32]
     44c:	mov	x19, x8
     450:	mov	x20, x0
     454:	mov	x21, x1
     458:	bl	0 <_ZNSt3_V216generic_categoryEv>
     45c:	mov	w1, #0x54                  	// #84
     460:	str	w1, [sp, #48]
     464:	str	x0, [sp, #56]
     468:	add	x0, sp, #0x40
     46c:	add	x1, sp, #0x50
     470:	str	x1, [sp, #64]
     474:	str	xzr, [sp, #72]
     478:	strb	wzr, [sp, #80]
     47c:	mov	w1, #0x1                   	// #1
     480:	str	w1, [sp, #160]
     484:	str	xzr, [sp, #152]
     488:	str	xzr, [sp, #144]
     48c:	str	xzr, [sp, #136]
     490:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
     494:	ldr	x2, [x2]
     498:	add	x2, x2, #0x10
     49c:	str	x2, [sp, #128]
     4a0:	str	x0, [sp, #168]
     4a4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     4a8:	add	x0, x0, #0x0
     4ac:	str	x0, [sp, #104]
     4b0:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     4b4:	ldr	x2, [x2]
     4b8:	add	x2, x2, #0x10
     4bc:	str	x2, [sp, #96]
     4c0:	str	x21, [sp, #112]
     4c4:	str	x20, [sp, #120]
     4c8:	add	x1, sp, #0x60
     4cc:	add	x0, sp, #0x80
     4d0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     4d4:	ldr	x1, [sp, #152]
     4d8:	ldr	x0, [sp, #136]
     4dc:	cmp	x1, x0
     4e0:	b.eq	4ec <_ZL15malformedRecordPKcS0_+0xb0>  // b.none
     4e4:	add	x0, sp, #0x80
     4e8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     4ec:	mov	x8, x19
     4f0:	add	x1, sp, #0x30
     4f4:	ldr	x0, [sp, #168]
     4f8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     4fc:	add	x0, sp, #0x80
     500:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     504:	ldr	x0, [sp, #64]
     508:	add	x1, sp, #0x50
     50c:	cmp	x0, x1
     510:	b.eq	518 <_ZL15malformedRecordPKcS0_+0xdc>  // b.none
     514:	bl	0 <_ZdlPv>
     518:	mov	x0, x19
     51c:	ldp	x19, x20, [sp, #16]
     520:	ldr	x21, [sp, #32]
     524:	ldp	x29, x30, [sp], #176
     528:	ret

000000000000052c <_ZL19validateMagicNumberN4llvm9StringRefE>:
     52c:	stp	x29, x30, [sp, #-160]!
     530:	mov	x29, sp
     534:	stp	x19, x20, [sp, #16]
     538:	mov	x19, x8
     53c:	mov	x20, x0
     540:	cmp	x1, #0x4
     544:	b.eq	614 <_ZL19validateMagicNumberN4llvm9StringRefE+0xe8>  // b.none
     548:	bl	0 <_ZNSt3_V216generic_categoryEv>
     54c:	mov	w1, #0x16                  	// #22
     550:	str	w1, [sp, #32]
     554:	str	x0, [sp, #40]
     558:	add	x1, sp, #0x30
     55c:	add	x0, sp, #0x40
     560:	str	x0, [sp, #48]
     564:	str	xzr, [sp, #56]
     568:	strb	wzr, [sp, #64]
     56c:	mov	w0, #0x1                   	// #1
     570:	str	w0, [sp, #144]
     574:	str	xzr, [sp, #136]
     578:	str	xzr, [sp, #128]
     57c:	str	xzr, [sp, #120]
     580:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     584:	ldr	x0, [x0]
     588:	add	x0, x0, #0x10
     58c:	str	x0, [sp, #112]
     590:	str	x1, [sp, #152]
     594:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     598:	add	x0, x0, #0x0
     59c:	str	x0, [sp, #88]
     5a0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     5a4:	ldr	x0, [x0]
     5a8:	add	x0, x0, #0x10
     5ac:	str	x0, [sp, #80]
     5b0:	str	x20, [sp, #96]
     5b4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     5b8:	add	x0, x0, #0x0
     5bc:	str	x0, [sp, #104]
     5c0:	add	x1, sp, #0x50
     5c4:	add	x0, sp, #0x70
     5c8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     5cc:	ldr	x1, [sp, #136]
     5d0:	ldr	x0, [sp, #120]
     5d4:	cmp	x1, x0
     5d8:	b.eq	5e4 <_ZL19validateMagicNumberN4llvm9StringRefE+0xb8>  // b.none
     5dc:	add	x0, sp, #0x70
     5e0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     5e4:	mov	x8, x19
     5e8:	add	x1, sp, #0x20
     5ec:	ldr	x0, [sp, #152]
     5f0:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     5f4:	add	x0, sp, #0x70
     5f8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     5fc:	ldr	x0, [sp, #48]
     600:	add	x1, sp, #0x40
     604:	cmp	x0, x1
     608:	b.eq	630 <_ZL19validateMagicNumberN4llvm9StringRefE+0x104>  // b.none
     60c:	bl	0 <_ZdlPv>
     610:	b	630 <_ZL19validateMagicNumberN4llvm9StringRefE+0x104>
     614:	mov	x2, #0x4                   	// #4
     618:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     61c:	add	x1, x1, #0x0
     620:	bl	0 <memcmp>
     624:	cbnz	w0, 548 <_ZL19validateMagicNumberN4llvm9StringRefE+0x1c>
     628:	mov	x0, #0x1                   	// #1
     62c:	str	x0, [x19]
     630:	mov	x0, x19
     634:	ldp	x19, x20, [sp, #16]
     638:	ldp	x29, x30, [sp], #160
     63c:	ret

0000000000000640 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv>:
     640:	stp	x29, x30, [sp, #-272]!
     644:	mov	x29, sp
     648:	stp	x19, x20, [sp, #16]
     64c:	stp	x21, x22, [sp, #32]
     650:	stp	x23, x24, [sp, #48]
     654:	stp	x25, x26, [sp, #64]
     658:	stp	x27, x28, [sp, #80]
     65c:	mov	x21, x8
     660:	mov	x19, x0
     664:	mov	x24, #0x1                   	// #1
     668:	add	x25, sp, #0x78
     66c:	add	x26, x25, #0x10
     670:	adrp	x22, 0 <_ZTVN4llvm18raw_string_ostreamE>
     674:	ldr	x22, [x22]
     678:	add	x22, x22, #0x10
     67c:	ldr	w20, [x19, #32]
     680:	cmp	w20, #0x7
     684:	b.ls	6f0 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0xb0>  // b.plast
     688:	ldr	x0, [x19, #24]
     68c:	and	x27, x0, #0xff
     690:	lsr	x0, x0, #8
     694:	str	x0, [x19, #24]
     698:	sub	w20, w20, #0x8
     69c:	str	w20, [x19, #32]
     6a0:	add	x0, sp, #0x110
     6a4:	add	x0, x0, x24
     6a8:	sturb	w27, [x0, #-41]
     6ac:	add	x24, x24, #0x1
     6b0:	cmp	x24, #0x5
     6b4:	b.ne	67c <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x3c>  // b.any
     6b8:	ldrb	w0, [x21, #8]
     6bc:	and	w0, w0, #0xfffffffe
     6c0:	orr	w0, w0, #0x2
     6c4:	strb	w0, [x21, #8]
     6c8:	ldr	w0, [sp, #232]
     6cc:	str	w0, [x21]
     6d0:	mov	x0, x21
     6d4:	ldp	x19, x20, [sp, #16]
     6d8:	ldp	x21, x22, [sp, #32]
     6dc:	ldp	x23, x24, [sp, #48]
     6e0:	ldp	x25, x26, [sp, #64]
     6e4:	ldp	x27, x28, [sp, #80]
     6e8:	ldp	x29, x30, [sp], #272
     6ec:	ret
     6f0:	mov	x27, #0x0                   	// #0
     6f4:	cbz	w20, 6fc <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0xbc>
     6f8:	ldr	x27, [x19, #24]
     6fc:	ldr	x23, [x19, #16]
     700:	ldr	x28, [x19, #8]
     704:	cmp	x23, x28
     708:	b.cs	784 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x144>  // b.hs, b.nlast
     70c:	ldr	x0, [x19]
     710:	add	x3, x0, x23
     714:	add	x1, x23, #0x8
     718:	cmp	x28, x1
     71c:	b.cc	860 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x220>  // b.lo, b.ul, b.last
     720:	ldr	x0, [x0, x23]
     724:	str	x0, [x19, #24]
     728:	mov	w1, #0x8                   	// #8
     72c:	add	x23, x23, w1, uxtw
     730:	str	x23, [x19, #16]
     734:	lsl	w1, w1, #3
     738:	str	w1, [x19, #32]
     73c:	mov	w23, #0x8                   	// #8
     740:	sub	w23, w23, w20
     744:	ldr	w28, [x19, #32]
     748:	cmp	w23, w28
     74c:	b.hi	8b0 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x270>  // b.pmore
     750:	ldr	x1, [x19, #24]
     754:	lsr	x23, x1, x23
     758:	str	x23, [x19, #24]
     75c:	add	w28, w20, w28
     760:	sub	w28, w28, #0x8
     764:	str	w28, [x19, #32]
     768:	add	w2, w20, #0x38
     76c:	mov	x0, #0xffffffffffffffff    	// #-1
     770:	lsr	x0, x0, x2
     774:	and	x0, x0, x1
     778:	lsl	x20, x0, x20
     77c:	orr	x27, x20, x27
     780:	b	6a0 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x60>
     784:	bl	0 <_ZNSt3_V216generic_categoryEv>
     788:	mov	w1, #0x5                   	// #5
     78c:	str	w1, [sp, #104]
     790:	str	x0, [sp, #112]
     794:	str	x26, [sp, #120]
     798:	str	xzr, [sp, #128]
     79c:	strb	wzr, [sp, #136]
     7a0:	mov	w0, #0x1                   	// #1
     7a4:	str	w0, [sp, #216]
     7a8:	str	xzr, [sp, #208]
     7ac:	str	xzr, [sp, #200]
     7b0:	str	xzr, [sp, #192]
     7b4:	str	x22, [sp, #184]
     7b8:	str	x25, [sp, #224]
     7bc:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     7c0:	add	x0, x0, #0x0
     7c4:	str	x0, [sp, #160]
     7c8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     7cc:	ldr	x0, [x0]
     7d0:	add	x0, x0, #0x10
     7d4:	str	x0, [sp, #152]
     7d8:	str	x28, [sp, #168]
     7dc:	str	x23, [sp, #176]
     7e0:	add	x1, sp, #0x98
     7e4:	add	x0, sp, #0xb8
     7e8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     7ec:	ldr	x1, [sp, #208]
     7f0:	ldr	x0, [sp, #192]
     7f4:	cmp	x1, x0
     7f8:	b.eq	804 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x1c4>  // b.none
     7fc:	add	x0, sp, #0xb8
     800:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     804:	add	x8, sp, #0x98
     808:	add	x1, sp, #0x68
     80c:	ldr	x0, [sp, #224]
     810:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     814:	add	x0, sp, #0xb8
     818:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     81c:	ldr	x0, [sp, #120]
     820:	cmp	x0, x26
     824:	b.eq	82c <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x1ec>  // b.none
     828:	bl	0 <_ZdlPv>
     82c:	ldr	x1, [sp, #152]
     830:	ands	x0, x1, #0xfffffffffffffffe
     834:	cset	x1, ne  // ne = any
     838:	orr	x1, x1, x0
     83c:	str	x1, [sp, #152]
     840:	ands	x0, x1, #0xfffffffffffffffe
     844:	b.eq	8a4 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x264>  // b.none
     848:	ldrb	w1, [x21, #8]
     84c:	orr	w1, w1, #0x3
     850:	strb	w1, [x21, #8]
     854:	cbz	x0, 9ac <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x36c>
     858:	str	x0, [x21]
     85c:	b	6d0 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x90>
     860:	str	xzr, [x19, #24]
     864:	subs	w28, w28, w23
     868:	b.eq	89c <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x25c>  // b.none
     86c:	mov	x0, #0x0                   	// #0
     870:	ldrb	w1, [x3, x0]
     874:	lsl	w2, w0, #3
     878:	lsl	x2, x1, x2
     87c:	ldr	x1, [x19, #24]
     880:	orr	x1, x1, x2
     884:	str	x1, [x19, #24]
     888:	add	x0, x0, #0x1
     88c:	mov	w1, w0
     890:	cmp	w28, w0
     894:	b.ne	870 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x230>  // b.any
     898:	b	72c <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0xec>
     89c:	mov	w1, w28
     8a0:	b	72c <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0xec>
     8a4:	tbz	w1, #0, 73c <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0xfc>
     8a8:	add	x0, sp, #0x98
     8ac:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     8b0:	bl	0 <_ZNSt3_V216generic_categoryEv>
     8b4:	mov	w1, #0x5                   	// #5
     8b8:	str	w1, [sp, #120]
     8bc:	str	x0, [sp, #128]
     8c0:	add	x1, sp, #0x98
     8c4:	add	x0, sp, #0xa8
     8c8:	str	x0, [sp, #152]
     8cc:	str	xzr, [sp, #160]
     8d0:	strb	wzr, [sp, #168]
     8d4:	mov	w0, #0x1                   	// #1
     8d8:	str	w0, [sp, #216]
     8dc:	str	xzr, [sp, #208]
     8e0:	str	xzr, [sp, #200]
     8e4:	str	xzr, [sp, #192]
     8e8:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     8ec:	ldr	x0, [x0]
     8f0:	add	x0, x0, #0x10
     8f4:	str	x0, [sp, #184]
     8f8:	str	x1, [sp, #224]
     8fc:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     900:	add	x0, x0, #0x0
     904:	str	x0, [sp, #256]
     908:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     90c:	ldr	x0, [x0]
     910:	add	x0, x0, #0x10
     914:	str	x0, [sp, #248]
     918:	str	w23, [sp, #264]
     91c:	str	w28, [sp, #268]
     920:	add	x1, sp, #0xf8
     924:	add	x0, sp, #0xb8
     928:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     92c:	ldr	x1, [sp, #208]
     930:	ldr	x0, [sp, #192]
     934:	cmp	x1, x0
     938:	b.eq	944 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x304>  // b.none
     93c:	add	x0, sp, #0xb8
     940:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     944:	add	x8, sp, #0xf0
     948:	add	x1, sp, #0x78
     94c:	ldr	x0, [sp, #224]
     950:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     954:	add	x0, sp, #0xb8
     958:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     95c:	ldr	x0, [sp, #152]
     960:	add	x1, sp, #0xa8
     964:	cmp	x0, x1
     968:	b.eq	970 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x330>  // b.none
     96c:	bl	0 <_ZdlPv>
     970:	ldr	x0, [sp, #240]
     974:	ands	x1, x0, #0xfffffffffffffffe
     978:	cset	x0, ne  // ne = any
     97c:	orr	x0, x0, x1
     980:	str	x0, [sp, #240]
     984:	ands	x0, x0, #0xfffffffffffffffe
     988:	b.ne	848 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv+0x208>  // b.any
     98c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     990:	add	x3, x3, #0x0
     994:	mov	w2, #0x1ce                 	// #462
     998:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     99c:	add	x1, x1, #0x0
     9a0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     9a4:	add	x0, x0, #0x0
     9a8:	bl	0 <__assert_fail>
     9ac:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     9b0:	add	x3, x3, #0x0
     9b4:	mov	w2, #0x1ce                 	// #462
     9b8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     9bc:	add	x1, x1, #0x0
     9c0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     9c4:	add	x0, x0, #0x0
     9c8:	bl	0 <__assert_fail>

00000000000009cc <_ZL7isBlockRN4llvm15BitstreamCursorEj>:
     9cc:	stp	x29, x30, [sp, #-112]!
     9d0:	mov	x29, sp
     9d4:	stp	x19, x20, [sp, #16]
     9d8:	stp	x21, x22, [sp, #32]
     9dc:	stp	x23, x24, [sp, #48]
     9e0:	mov	x20, x8
     9e4:	mov	x19, x0
     9e8:	mov	w23, w1
     9ec:	ldr	x21, [x0, #16]
     9f0:	ldr	w24, [x0, #32]
     9f4:	add	x8, sp, #0x58
     9f8:	mov	w1, #0x0                   	// #0
     9fc:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     a00:	ldrb	w0, [sp, #96]
     a04:	and	w22, w0, #0x1
     a08:	bfi	w0, w22, #1, #1
     a0c:	strb	w0, [sp, #96]
     a10:	cbz	w22, a78 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0xac>
     a14:	and	x0, x0, #0xff
     a18:	and	w0, w0, #0xfffffffd
     a1c:	strb	w0, [sp, #96]
     a20:	ldr	x0, [sp, #88]
     a24:	str	xzr, [sp, #88]
     a28:	ldrb	w1, [x20, #8]
     a2c:	orr	w1, w1, #0x3
     a30:	strb	w1, [x20, #8]
     a34:	ands	x0, x0, #0xfffffffffffffffe
     a38:	cbz	x0, a58 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x8c>
     a3c:	str	x0, [x20]
     a40:	ldr	x0, [sp, #88]
     a44:	cbz	x0, b64 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x198>
     a48:	ldr	x1, [x0]
     a4c:	ldr	x1, [x1, #8]
     a50:	blr	x1
     a54:	b	b64 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x198>
     a58:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     a5c:	add	x3, x3, #0x0
     a60:	mov	w2, #0x1ce                 	// #462
     a64:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     a68:	add	x1, x1, #0x0
     a6c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     a70:	add	x0, x0, #0x0
     a74:	bl	0 <__assert_fail>
     a78:	ldr	w0, [sp, #88]
     a7c:	cbz	w0, b0c <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x140>
     a80:	cmp	w0, #0x2
     a84:	b.ne	a94 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0xc8>  // b.any
     a88:	ldr	w0, [sp, #92]
     a8c:	cmp	w0, w23
     a90:	cset	w22, eq  // eq = none
     a94:	lsl	x1, x21, #3
     a98:	sub	x1, x1, w24, uxtw
     a9c:	lsr	x0, x1, #3
     aa0:	and	x0, x0, #0xfffffffffffffff8
     aa4:	and	w1, w1, #0x3f
     aa8:	ldr	x2, [x19, #8]
     aac:	cmp	x0, x2
     ab0:	b.hi	b9c <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x1d0>  // b.pmore
     ab4:	str	x0, [x19, #16]
     ab8:	str	wzr, [x19, #32]
     abc:	cbz	w1, be8 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x21c>
     ac0:	add	x8, sp, #0x48
     ac4:	mov	x0, x19
     ac8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     acc:	ldrb	w0, [sp, #80]
     ad0:	tbnz	w0, #0, bbc <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x1f0>
     ad4:	mov	x0, #0x1                   	// #1
     ad8:	str	x0, [sp, #64]
     adc:	ldr	x0, [sp, #64]
     ae0:	ands	x1, x0, #0xfffffffffffffffe
     ae4:	cset	x0, ne  // ne = any
     ae8:	orr	x0, x0, x1
     aec:	str	x0, [sp, #64]
     af0:	ands	x1, x0, #0xfffffffffffffffe
     af4:	b.eq	bdc <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x210>  // b.none
     af8:	ldrb	w0, [x20, #8]
     afc:	orr	w0, w0, #0x3
     b00:	strb	w0, [x20, #8]
     b04:	str	x1, [x20]
     b08:	b	b54 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x188>
     b0c:	bl	0 <_ZNSt3_V216generic_categoryEv>
     b10:	mov	x1, x0
     b14:	add	x8, sp, #0x68
     b18:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     b1c:	add	x2, x2, #0x0
     b20:	mov	x0, #0x54                  	// #84
     b24:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     b28:	ldrb	w0, [x20, #8]
     b2c:	orr	w0, w0, #0x3
     b30:	strb	w0, [x20, #8]
     b34:	ldr	x0, [sp, #104]
     b38:	ands	x1, x0, #0xfffffffffffffffe
     b3c:	cset	x0, ne  // ne = any
     b40:	orr	x0, x0, x1
     b44:	str	x0, [sp, #104]
     b48:	ands	x0, x0, #0xfffffffffffffffe
     b4c:	b.eq	b7c <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x1b0>  // b.none
     b50:	str	x0, [x20]
     b54:	ldrb	w0, [sp, #96]
     b58:	tbnz	w0, #1, c00 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x234>
     b5c:	ldrb	w0, [sp, #96]
     b60:	tbnz	w0, #0, a40 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x74>
     b64:	mov	x0, x20
     b68:	ldp	x19, x20, [sp, #16]
     b6c:	ldp	x21, x22, [sp, #32]
     b70:	ldp	x23, x24, [sp, #48]
     b74:	ldp	x29, x30, [sp], #112
     b78:	ret
     b7c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     b80:	add	x3, x3, #0x0
     b84:	mov	w2, #0x1ce                 	// #462
     b88:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     b8c:	add	x1, x1, #0x0
     b90:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     b94:	add	x0, x0, #0x0
     b98:	bl	0 <__assert_fail>
     b9c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     ba0:	add	x3, x3, #0x0
     ba4:	mov	w2, #0x85                  	// #133
     ba8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     bac:	add	x1, x1, #0x0
     bb0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     bb4:	add	x0, x0, #0x0
     bb8:	bl	0 <__assert_fail>
     bbc:	ldrb	w0, [sp, #80]
     bc0:	and	w0, w0, #0xfffffffd
     bc4:	strb	w0, [sp, #80]
     bc8:	ldr	x0, [sp, #72]
     bcc:	str	xzr, [sp, #72]
     bd0:	orr	x0, x0, #0x1
     bd4:	str	x0, [sp, #64]
     bd8:	b	adc <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x110>
     bdc:	tbz	w0, #0, be8 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x21c>
     be0:	add	x0, sp, #0x40
     be4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     be8:	ldrb	w0, [x20, #8]
     bec:	and	w0, w0, #0xfffffffe
     bf0:	orr	w0, w0, #0x2
     bf4:	strb	w0, [x20, #8]
     bf8:	strb	w22, [x20]
     bfc:	b	b54 <_ZL7isBlockRN4llvm15BitstreamCursorEj+0x188>
     c00:	add	x0, sp, #0x58
     c04:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>

0000000000000c08 <_ZN4llvm7remarks21BitstreamParserHelper11isMetaBlockEv>:
     c08:	stp	x29, x30, [sp, #-32]!
     c0c:	mov	x29, sp
     c10:	str	x19, [sp, #16]
     c14:	mov	x19, x8
     c18:	mov	w1, #0x8                   	// #8
     c1c:	bl	9cc <_ZL7isBlockRN4llvm15BitstreamCursorEj>
     c20:	mov	x0, x19
     c24:	ldr	x19, [sp, #16]
     c28:	ldp	x29, x30, [sp], #32
     c2c:	ret

0000000000000c30 <_ZN4llvm7remarks21BitstreamParserHelper13isRemarkBlockEv>:
     c30:	stp	x29, x30, [sp, #-32]!
     c34:	mov	x29, sp
     c38:	str	x19, [sp, #16]
     c3c:	mov	x19, x8
     c40:	mov	w1, #0x8                   	// #8
     c44:	bl	9cc <_ZL7isBlockRN4llvm15BitstreamCursorEj>
     c48:	mov	x0, x19
     c4c:	ldr	x19, [sp, #16]
     c50:	ldp	x29, x30, [sp], #32
     c54:	ret

0000000000000c58 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv>:
     c58:	stp	x29, x30, [sp, #-304]!
     c5c:	mov	x29, sp
     c60:	stp	x19, x20, [sp, #16]
     c64:	stp	x21, x22, [sp, #32]
     c68:	mov	x19, x8
     c6c:	mov	x20, x0
     c70:	ldr	x21, [x0]
     c74:	add	x8, sp, #0x50
     c78:	mov	w1, #0x0                   	// #0
     c7c:	mov	x0, x21
     c80:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     c84:	ldrb	w1, [sp, #88]
     c88:	and	w0, w1, #0x1
     c8c:	bfi	w1, w0, #1, #1
     c90:	strb	w1, [sp, #88]
     c94:	cbz	w0, ccc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x74>
     c98:	and	x0, x1, #0xff
     c9c:	and	w0, w0, #0xfffffffd
     ca0:	strb	w0, [sp, #88]
     ca4:	ldr	x0, [sp, #80]
     ca8:	str	xzr, [sp, #80]
     cac:	orr	x0, x0, #0x1
     cb0:	str	x0, [x19]
     cb4:	ldr	x0, [sp, #80]
     cb8:	cbz	x0, dbc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x164>
     cbc:	ldr	x1, [x0]
     cc0:	ldr	x1, [x1, #8]
     cc4:	blr	x1
     cc8:	b	dbc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x164>
     ccc:	ldr	w0, [sp, #80]
     cd0:	cmp	w0, #0x2
     cd4:	b.ne	ce4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x8c>  // b.any
     cd8:	ldr	w0, [sp, #84]
     cdc:	cmp	w0, #0x9
     ce0:	b.eq	dd0 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x178>  // b.none
     ce4:	bl	0 <_ZNSt3_V216generic_categoryEv>
     ce8:	mov	w1, #0x54                  	// #84
     cec:	str	w1, [sp, #96]
     cf0:	str	x0, [sp, #104]
     cf4:	add	x1, sp, #0x70
     cf8:	add	x0, sp, #0x80
     cfc:	str	x0, [sp, #112]
     d00:	str	xzr, [sp, #120]
     d04:	strb	wzr, [sp, #128]
     d08:	mov	w0, #0x1                   	// #1
     d0c:	str	w0, [sp, #208]
     d10:	str	xzr, [sp, #200]
     d14:	str	xzr, [sp, #192]
     d18:	str	xzr, [sp, #184]
     d1c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     d20:	ldr	x0, [x0]
     d24:	add	x0, x0, #0x10
     d28:	str	x0, [sp, #176]
     d2c:	str	x1, [sp, #216]
     d30:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     d34:	add	x0, x0, #0x0
     d38:	str	x0, [sp, #152]
     d3c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     d40:	ldr	x0, [x0]
     d44:	add	x0, x0, #0x10
     d48:	str	x0, [sp, #144]
     d4c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     d50:	add	x0, x0, #0x0
     d54:	str	x0, [sp, #160]
     d58:	str	x0, [sp, #168]
     d5c:	add	x1, sp, #0x90
     d60:	add	x0, sp, #0xb0
     d64:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     d68:	ldr	x1, [sp, #200]
     d6c:	ldr	x0, [sp, #184]
     d70:	cmp	x1, x0
     d74:	b.eq	d80 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x128>  // b.none
     d78:	add	x0, sp, #0xb0
     d7c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     d80:	mov	x8, x19
     d84:	add	x1, sp, #0x60
     d88:	ldr	x0, [sp, #216]
     d8c:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     d90:	add	x0, sp, #0xb0
     d94:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     d98:	ldr	x0, [sp, #112]
     d9c:	add	x1, sp, #0x80
     da0:	cmp	x0, x1
     da4:	b.eq	dac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x154>  // b.none
     da8:	bl	0 <_ZdlPv>
     dac:	ldrb	w0, [sp, #88]
     db0:	tbnz	w0, #1, 18e0 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc88>
     db4:	ldrb	w0, [sp, #88]
     db8:	tbnz	w0, #0, cb4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x5c>
     dbc:	mov	x0, x19
     dc0:	ldp	x19, x20, [sp, #16]
     dc4:	ldp	x21, x22, [sp, #32]
     dc8:	ldp	x29, x30, [sp], #304
     dcc:	ret
     dd0:	stp	x23, x24, [sp, #48]
     dd4:	str	x25, [sp, #64]
     dd8:	add	x8, sp, #0xf8
     ddc:	mov	x2, #0x0                   	// #0
     de0:	mov	w1, #0x9                   	// #9
     de4:	mov	x0, x21
     de8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dec:	ldr	x0, [sp, #248]
     df0:	ands	x1, x0, #0xfffffffffffffffe
     df4:	cset	x0, ne  // ne = any
     df8:	orr	x0, x0, x1
     dfc:	str	x0, [sp, #248]
     e00:	cbnz	x0, efc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x2a4>
     e04:	add	x23, sp, #0xe8
     e08:	add	x22, sp, #0xb0
     e0c:	add	x24, x22, #0x10
     e10:	add	x25, sp, #0x70
     e14:	ldr	w0, [x21, #32]
     e18:	cbnz	w0, f04 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x2ac>
     e1c:	ldr	x1, [x21, #8]
     e20:	ldr	x0, [x21, #16]
     e24:	cmp	x1, x0
     e28:	b.hi	f04 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x2ac>  // b.pmore
     e2c:	bl	0 <_ZNSt3_V216generic_categoryEv>
     e30:	mov	w1, #0x54                  	// #84
     e34:	str	w1, [sp, #112]
     e38:	str	x0, [sp, #120]
     e3c:	add	x1, sp, #0x90
     e40:	add	x0, sp, #0xa0
     e44:	str	x0, [sp, #144]
     e48:	str	xzr, [sp, #152]
     e4c:	strb	wzr, [sp, #160]
     e50:	mov	w0, #0x1                   	// #1
     e54:	str	w0, [sp, #208]
     e58:	str	xzr, [sp, #200]
     e5c:	str	xzr, [sp, #192]
     e60:	str	xzr, [sp, #184]
     e64:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     e68:	ldr	x0, [x0]
     e6c:	add	x0, x0, #0x10
     e70:	str	x0, [sp, #176]
     e74:	str	x1, [sp, #216]
     e78:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     e7c:	add	x0, x0, #0x0
     e80:	str	x0, [sp, #264]
     e84:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     e88:	ldr	x0, [x0]
     e8c:	add	x0, x0, #0x10
     e90:	str	x0, [sp, #256]
     e94:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     e98:	add	x0, x0, #0x0
     e9c:	str	x0, [sp, #272]
     ea0:	add	x1, sp, #0x100
     ea4:	add	x0, sp, #0xb0
     ea8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     eac:	ldr	x1, [sp, #200]
     eb0:	ldr	x0, [sp, #184]
     eb4:	cmp	x1, x0
     eb8:	b.eq	ec4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x26c>  // b.none
     ebc:	add	x0, sp, #0xb0
     ec0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     ec4:	mov	x8, x19
     ec8:	add	x1, sp, #0x70
     ecc:	ldr	x0, [sp, #216]
     ed0:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     ed4:	add	x0, sp, #0xb0
     ed8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     edc:	ldr	x0, [sp, #144]
     ee0:	add	x1, sp, #0xa0
     ee4:	cmp	x0, x1
     ee8:	b.eq	18c8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc70>  // b.none
     eec:	bl	0 <_ZdlPv>
     ef0:	ldp	x23, x24, [sp, #48]
     ef4:	ldr	x25, [sp, #64]
     ef8:	b	dac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x154>
     efc:	add	x0, sp, #0xf8
     f00:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     f04:	mov	x8, x23
     f08:	mov	w1, #0x0                   	// #0
     f0c:	mov	x0, x21
     f10:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     f14:	ldrb	w0, [sp, #88]
     f18:	tbnz	w0, #1, fa0 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x348>
     f1c:	ldrb	w0, [sp, #88]
     f20:	tbz	w0, #0, f38 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x2e0>
     f24:	ldr	x0, [sp, #80]
     f28:	cbz	x0, f38 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x2e0>
     f2c:	ldr	x1, [x0]
     f30:	ldr	x1, [x1, #8]
     f34:	blr	x1
     f38:	ldrb	w0, [sp, #240]
     f3c:	and	w2, w0, #0x1
     f40:	ldrb	w1, [sp, #88]
     f44:	bfxil	w1, w2, #0, #1
     f48:	orr	w1, w1, #0x2
     f4c:	strb	w1, [sp, #88]
     f50:	and	w0, w0, #0xfffffffd
     f54:	strb	w0, [sp, #240]
     f58:	cbnz	w2, fa8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x350>
     f5c:	ldr	x0, [sp, #232]
     f60:	str	x0, [sp, #80]
     f64:	ldrb	w0, [sp, #88]
     f68:	and	w1, w0, #0x1
     f6c:	bfi	w0, w1, #1, #1
     f70:	strb	w0, [sp, #88]
     f74:	cbnz	w1, fb4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x35c>
     f78:	ldr	w0, [sp, #80]
     f7c:	cmp	w0, #0x2
     f80:	b.eq	104c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x3f4>  // b.none
     f84:	b.hi	fcc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x374>  // b.pmore
     f88:	cbz	w0, 104c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x3f4>
     f8c:	mov	x0, #0x1                   	// #1
     f90:	str	x0, [x19]
     f94:	ldp	x23, x24, [sp, #48]
     f98:	ldr	x25, [sp, #64]
     f9c:	b	dbc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x164>
     fa0:	add	x0, sp, #0x50
     fa4:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     fa8:	ldr	x0, [sp, #232]
     fac:	str	x0, [sp, #80]
     fb0:	b	f64 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x30c>
     fb4:	mov	x8, x19
     fb8:	add	x0, sp, #0x50
     fbc:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
     fc0:	ldp	x23, x24, [sp, #48]
     fc4:	ldr	x25, [sp, #64]
     fc8:	b	dac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x154>
     fcc:	cmp	w0, #0x3
     fd0:	b.ne	e14 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x1bc>  // b.any
     fd4:	str	x24, [sp, #176]
     fd8:	str	wzr, [sp, #184]
     fdc:	mov	w0, #0x5                   	// #5
     fe0:	str	w0, [sp, #188]
     fe4:	str	xzr, [sp, #112]
     fe8:	str	xzr, [sp, #120]
     fec:	add	x8, sp, #0x90
     ff0:	mov	x3, x25
     ff4:	mov	x2, x22
     ff8:	ldr	w1, [sp, #84]
     ffc:	ldr	x0, [x20]
    1000:	bl	0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    1004:	ldrb	w0, [sp, #152]
    1008:	and	w1, w0, #0x1
    100c:	bfi	w0, w1, #1, #1
    1010:	strb	w0, [sp, #152]
    1014:	cbz	w1, 111c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x4c4>
    1018:	and	x0, x0, #0xff
    101c:	and	w0, w0, #0xfffffffd
    1020:	strb	w0, [sp, #152]
    1024:	ldr	x0, [sp, #144]
    1028:	str	xzr, [sp, #144]
    102c:	orr	x0, x0, #0x1
    1030:	str	x0, [sp, #96]
    1034:	ldr	x0, [sp, #144]
    1038:	cbz	x0, 12fc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x6a4>
    103c:	ldr	x1, [x0]
    1040:	ldr	x1, [x1, #8]
    1044:	blr	x1
    1048:	b	12fc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x6a4>
    104c:	bl	0 <_ZNSt3_V216generic_categoryEv>
    1050:	mov	w1, #0x54                  	// #84
    1054:	str	w1, [sp, #112]
    1058:	str	x0, [sp, #120]
    105c:	add	x1, sp, #0x90
    1060:	add	x0, sp, #0xa0
    1064:	str	x0, [sp, #144]
    1068:	str	xzr, [sp, #152]
    106c:	strb	wzr, [sp, #160]
    1070:	mov	w0, #0x1                   	// #1
    1074:	str	w0, [sp, #208]
    1078:	str	xzr, [sp, #200]
    107c:	str	xzr, [sp, #192]
    1080:	str	xzr, [sp, #184]
    1084:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1088:	ldr	x0, [x0]
    108c:	add	x0, x0, #0x10
    1090:	str	x0, [sp, #176]
    1094:	str	x1, [sp, #216]
    1098:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    109c:	add	x0, x0, #0x0
    10a0:	str	x0, [sp, #288]
    10a4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    10a8:	ldr	x0, [x0]
    10ac:	add	x0, x0, #0x10
    10b0:	str	x0, [sp, #280]
    10b4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    10b8:	add	x0, x0, #0x0
    10bc:	str	x0, [sp, #296]
    10c0:	add	x1, sp, #0x118
    10c4:	add	x0, sp, #0xb0
    10c8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    10cc:	ldr	x1, [sp, #200]
    10d0:	ldr	x0, [sp, #184]
    10d4:	cmp	x1, x0
    10d8:	b.eq	10e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x48c>  // b.none
    10dc:	add	x0, sp, #0xb0
    10e0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    10e4:	mov	x8, x19
    10e8:	add	x1, sp, #0x70
    10ec:	ldr	x0, [sp, #216]
    10f0:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    10f4:	add	x0, sp, #0xb0
    10f8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    10fc:	ldr	x0, [sp, #144]
    1100:	add	x1, sp, #0xa0
    1104:	cmp	x0, x1
    1108:	b.eq	18d4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc7c>  // b.none
    110c:	bl	0 <_ZdlPv>
    1110:	ldp	x23, x24, [sp, #48]
    1114:	ldr	x25, [sp, #64]
    1118:	b	dac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x154>
    111c:	ldr	w1, [sp, #144]
    1120:	cmp	w1, #0x7
    1124:	b.eq	12c4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x66c>  // b.none
    1128:	b.ls	1164 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x50c>  // b.plast
    112c:	cmp	w1, #0x8
    1130:	b.eq	136c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x714>  // b.none
    1134:	cmp	w1, #0x9
    1138:	b.ne	18a0 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc48>  // b.any
    113c:	ldr	w0, [sp, #184]
    1140:	cmp	w0, #0x2
    1144:	b.eq	16dc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xa84>  // b.none
    1148:	add	x8, sp, #0x60
    114c:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1150:	add	x1, x1, #0x0
    1154:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1158:	add	x0, x0, #0x0
    115c:	bl	43c <_ZL15malformedRecordPKcS0_>
    1160:	b	12ec <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x694>
    1164:	cmp	w1, #0x5
    1168:	b.eq	11b8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x560>  // b.none
    116c:	cmp	w1, #0x6
    1170:	b.ne	18a0 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc48>  // b.any
    1174:	ldr	w0, [sp, #184]
    1178:	cmp	w0, #0x3
    117c:	b.ne	1274 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x61c>  // b.any
    1180:	ldr	x0, [sp, #176]
    1184:	ldrb	w1, [x20, #72]
    1188:	cbz	w1, 1290 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x638>
    118c:	ldr	x1, [x0]
    1190:	str	x1, [x20, #64]
    1194:	ldr	x1, [x0, #8]
    1198:	ldrb	w2, [x20, #84]
    119c:	cbz	w2, 12a4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x64c>
    11a0:	str	w1, [x20, #80]
    11a4:	ldr	x0, [x0, #16]
    11a8:	ldrb	w1, [x20, #92]
    11ac:	cbz	w1, 12b4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x65c>
    11b0:	str	w0, [x20, #88]
    11b4:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    11b8:	ldr	w0, [sp, #184]
    11bc:	cmp	w0, #0x4
    11c0:	b.ne	120c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x5b4>  // b.any
    11c4:	ldr	x0, [sp, #176]
    11c8:	ldrb	w1, [x0]
    11cc:	ldrb	w2, [x20, #9]
    11d0:	cbz	w2, 1228 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x5d0>
    11d4:	strb	w1, [x20, #8]
    11d8:	ldrb	w1, [x20, #24]
    11dc:	cbz	w1, 1238 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x5e0>
    11e0:	ldr	x1, [x0, #8]
    11e4:	str	x1, [x20, #16]
    11e8:	ldrb	w1, [x20, #40]
    11ec:	cbz	w1, 124c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x5f4>
    11f0:	ldr	x1, [x0, #16]
    11f4:	str	x1, [x20, #32]
    11f8:	ldrb	w1, [x20, #56]
    11fc:	cbz	w1, 1260 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x608>
    1200:	ldr	x0, [x0, #24]
    1204:	str	x0, [x20, #48]
    1208:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    120c:	add	x8, sp, #0x60
    1210:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1214:	add	x1, x1, #0x0
    1218:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    121c:	add	x0, x0, #0x0
    1220:	bl	43c <_ZL15malformedRecordPKcS0_>
    1224:	b	12ec <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x694>
    1228:	strb	w1, [x20, #8]
    122c:	mov	w1, #0x1                   	// #1
    1230:	strb	w1, [x20, #9]
    1234:	b	11d8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x580>
    1238:	ldr	x1, [x0, #8]
    123c:	str	x1, [x20, #16]
    1240:	mov	w1, #0x1                   	// #1
    1244:	strb	w1, [x20, #24]
    1248:	b	11e8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x590>
    124c:	ldr	x1, [x0, #16]
    1250:	str	x1, [x20, #32]
    1254:	mov	w1, #0x1                   	// #1
    1258:	strb	w1, [x20, #40]
    125c:	b	11f8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x5a0>
    1260:	ldr	x0, [x0, #24]
    1264:	str	x0, [x20, #48]
    1268:	mov	w0, #0x1                   	// #1
    126c:	strb	w0, [x20, #56]
    1270:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    1274:	add	x8, sp, #0x60
    1278:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    127c:	add	x1, x1, #0x0
    1280:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1284:	add	x0, x0, #0x0
    1288:	bl	43c <_ZL15malformedRecordPKcS0_>
    128c:	b	12ec <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x694>
    1290:	ldr	x1, [x0]
    1294:	str	x1, [x20, #64]
    1298:	mov	w1, #0x1                   	// #1
    129c:	strb	w1, [x20, #72]
    12a0:	b	1194 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x53c>
    12a4:	str	w1, [x20, #80]
    12a8:	mov	w1, #0x1                   	// #1
    12ac:	strb	w1, [x20, #84]
    12b0:	b	11a4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x54c>
    12b4:	str	w0, [x20, #88]
    12b8:	mov	w0, #0x1                   	// #1
    12bc:	strb	w0, [x20, #92]
    12c0:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    12c4:	ldr	w0, [sp, #184]
    12c8:	cmp	w0, #0x1
    12cc:	b.ne	133c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x6e4>  // b.any
    12d0:	ldr	x0, [sp, #176]
    12d4:	ldrb	w1, [x20, #104]
    12d8:	cbz	w1, 1358 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x700>
    12dc:	ldr	x0, [x0]
    12e0:	str	x0, [x20, #96]
    12e4:	mov	x0, #0x1                   	// #1
    12e8:	str	x0, [sp, #96]
    12ec:	ldrb	w0, [sp, #152]
    12f0:	tbnz	w0, #1, 18b4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc5c>
    12f4:	ldrb	w0, [sp, #152]
    12f8:	tbnz	w0, #0, 1034 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x3dc>
    12fc:	ldr	x0, [sp, #176]
    1300:	cmp	x0, x24
    1304:	b.eq	130c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x6b4>  // b.none
    1308:	bl	0 <free>
    130c:	ldr	x0, [sp, #96]
    1310:	ands	x1, x0, #0xfffffffffffffffe
    1314:	cset	x0, ne  // ne = any
    1318:	orr	x0, x0, x1
    131c:	str	x0, [sp, #96]
    1320:	ands	x1, x0, #0xfffffffffffffffe
    1324:	b.eq	18bc <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc64>  // b.none
    1328:	orr	x1, x1, #0x1
    132c:	str	x1, [x19]
    1330:	ldp	x23, x24, [sp, #48]
    1334:	ldr	x25, [sp, #64]
    1338:	b	dac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x154>
    133c:	add	x8, sp, #0x60
    1340:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1344:	add	x1, x1, #0x0
    1348:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    134c:	add	x0, x0, #0x0
    1350:	bl	43c <_ZL15malformedRecordPKcS0_>
    1354:	b	12ec <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x694>
    1358:	ldr	x0, [x0]
    135c:	str	x0, [x20, #96]
    1360:	mov	w0, #0x1                   	// #1
    1364:	strb	w0, [x20, #104]
    1368:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    136c:	ldr	w0, [sp, #184]
    1370:	cmp	w0, #0x5
    1374:	b.eq	1394 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x73c>  // b.none
    1378:	add	x8, sp, #0x60
    137c:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1380:	add	x1, x1, #0x0
    1384:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1388:	add	x0, x0, #0x0
    138c:	bl	43c <_ZL15malformedRecordPKcS0_>
    1390:	b	12ec <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x694>
    1394:	ldr	w1, [x20, #144]
    1398:	ldr	w0, [x20, #148]
    139c:	cmp	w1, w0
    13a0:	b.cs	14f4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x89c>  // b.hs, b.nlast
    13a4:	ldr	w0, [x20, #144]
    13a8:	ldr	x1, [x20, #136]
    13ac:	add	x0, x1, x0, lsl #6
    13b0:	stp	xzr, xzr, [x0]
    13b4:	stp	xzr, xzr, [x0, #16]
    13b8:	stp	xzr, xzr, [x0, #32]
    13bc:	stp	xzr, xzr, [x0, #48]
    13c0:	ldr	w0, [x20, #144]
    13c4:	mov	w1, w0
    13c8:	add	x1, x1, #0x1
    13cc:	ldr	w2, [x20, #148]
    13d0:	cmp	x1, x2
    13d4:	b.hi	150c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x8b4>  // b.pmore
    13d8:	add	w0, w0, #0x1
    13dc:	str	w0, [x20, #144]
    13e0:	cbz	w0, 152c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x8d4>
    13e4:	ubfiz	x0, x0, #6, #32
    13e8:	sub	x0, x0, #0x40
    13ec:	ldr	x1, [x20, #136]
    13f0:	add	x2, x1, x0
    13f4:	ldr	w3, [sp, #184]
    13f8:	cbz	w3, 154c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x8f4>
    13fc:	ldr	x3, [sp, #176]
    1400:	ldrb	w4, [x2, #8]
    1404:	cbz	w4, 156c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x914>
    1408:	ldr	x2, [x3]
    140c:	str	x2, [x1, x0]
    1410:	ldr	w0, [x20, #144]
    1414:	cbz	w0, 1580 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x928>
    1418:	ubfiz	x0, x0, #6, #32
    141c:	sub	x1, x0, #0x40
    1420:	ldr	x0, [x20, #136]
    1424:	add	x0, x0, x1
    1428:	ldr	w3, [sp, #184]
    142c:	cmp	w3, #0x1
    1430:	b.ls	15a0 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x948>  // b.plast
    1434:	ldr	x1, [sp, #176]
    1438:	ldrb	w2, [x0, #24]
    143c:	cbz	w2, 15c0 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x968>
    1440:	ldr	x2, [x1, #8]
    1444:	str	x2, [x0, #16]
    1448:	ldr	w0, [x20, #144]
    144c:	cbz	w0, 15d4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x97c>
    1450:	ubfiz	x0, x0, #6, #32
    1454:	sub	x2, x0, #0x40
    1458:	ldr	x0, [x20, #136]
    145c:	add	x0, x0, x2
    1460:	cmp	w3, #0x2
    1464:	b.ls	15f4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x99c>  // b.plast
    1468:	ldrb	w2, [x0, #40]
    146c:	cbz	w2, 1614 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x9bc>
    1470:	ldr	x2, [x1, #16]
    1474:	str	x2, [x0, #32]
    1478:	ldr	w0, [x20, #144]
    147c:	cbz	w0, 1628 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x9d0>
    1480:	ubfiz	x0, x0, #6, #32
    1484:	sub	x2, x0, #0x40
    1488:	ldr	x0, [x20, #136]
    148c:	add	x0, x0, x2
    1490:	cmp	w3, #0x3
    1494:	b.ls	1648 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x9f0>  // b.plast
    1498:	ldr	x2, [x1, #24]
    149c:	ldrb	w4, [x0, #52]
    14a0:	cbz	w4, 1668 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xa10>
    14a4:	str	w2, [x0, #48]
    14a8:	ldr	w0, [x20, #144]
    14ac:	cbz	w0, 1678 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xa20>
    14b0:	ubfiz	x0, x0, #6, #32
    14b4:	sub	x2, x0, #0x40
    14b8:	ldr	x0, [x20, #136]
    14bc:	add	x0, x0, x2
    14c0:	cmp	w3, #0x4
    14c4:	b.ls	1698 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xa40>  // b.plast
    14c8:	ldr	x1, [x1, #32]
    14cc:	ldrb	w2, [x0, #60]
    14d0:	cbz	w2, 16b8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xa60>
    14d4:	str	w1, [x0, #56]
    14d8:	ldr	x1, [x20, #136]
    14dc:	ldr	w0, [x20, #144]
    14e0:	ldrb	w2, [x20, #128]
    14e4:	cbz	w2, 16c8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xa70>
    14e8:	str	x1, [x20, #112]
    14ec:	str	x0, [x20, #120]
    14f0:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    14f4:	mov	x3, #0x40                  	// #64
    14f8:	mov	x2, #0x0                   	// #0
    14fc:	add	x1, x20, #0x98
    1500:	add	x0, x20, #0x88
    1504:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1508:	b	13a4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x74c>
    150c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1510:	add	x3, x3, #0x0
    1514:	mov	w2, #0x43                  	// #67
    1518:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    151c:	add	x1, x1, #0x0
    1520:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1524:	add	x0, x0, #0x0
    1528:	bl	0 <__assert_fail>
    152c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1530:	add	x3, x3, #0x0
    1534:	mov	w2, #0xa7                  	// #167
    1538:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    153c:	add	x1, x1, #0x0
    1540:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1544:	add	x0, x0, #0x0
    1548:	bl	0 <__assert_fail>
    154c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1550:	add	x3, x3, #0x0
    1554:	mov	w2, #0x95                  	// #149
    1558:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    155c:	add	x1, x1, #0x0
    1560:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1564:	add	x0, x0, #0x0
    1568:	bl	0 <__assert_fail>
    156c:	ldr	x3, [x3]
    1570:	str	x3, [x1, x0]
    1574:	mov	w0, #0x1                   	// #1
    1578:	strb	w0, [x2, #8]
    157c:	b	1410 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x7b8>
    1580:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1584:	add	x3, x3, #0x0
    1588:	mov	w2, #0xa7                  	// #167
    158c:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1590:	add	x1, x1, #0x0
    1594:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1598:	add	x0, x0, #0x0
    159c:	bl	0 <__assert_fail>
    15a0:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    15a4:	add	x3, x3, #0x0
    15a8:	mov	w2, #0x95                  	// #149
    15ac:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    15b0:	add	x1, x1, #0x0
    15b4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    15b8:	add	x0, x0, #0x0
    15bc:	bl	0 <__assert_fail>
    15c0:	ldr	x2, [x1, #8]
    15c4:	str	x2, [x0, #16]
    15c8:	mov	w2, #0x1                   	// #1
    15cc:	strb	w2, [x0, #24]
    15d0:	b	1448 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x7f0>
    15d4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    15d8:	add	x3, x3, #0x0
    15dc:	mov	w2, #0xa7                  	// #167
    15e0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    15e4:	add	x1, x1, #0x0
    15e8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    15ec:	add	x0, x0, #0x0
    15f0:	bl	0 <__assert_fail>
    15f4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    15f8:	add	x3, x3, #0x0
    15fc:	mov	w2, #0x95                  	// #149
    1600:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1604:	add	x1, x1, #0x0
    1608:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    160c:	add	x0, x0, #0x0
    1610:	bl	0 <__assert_fail>
    1614:	ldr	x2, [x1, #16]
    1618:	str	x2, [x0, #32]
    161c:	mov	w2, #0x1                   	// #1
    1620:	strb	w2, [x0, #40]
    1624:	b	1478 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x820>
    1628:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    162c:	add	x3, x3, #0x0
    1630:	mov	w2, #0xa7                  	// #167
    1634:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1638:	add	x1, x1, #0x0
    163c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1640:	add	x0, x0, #0x0
    1644:	bl	0 <__assert_fail>
    1648:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    164c:	add	x3, x3, #0x0
    1650:	mov	w2, #0x95                  	// #149
    1654:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1658:	add	x1, x1, #0x0
    165c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1660:	add	x0, x0, #0x0
    1664:	bl	0 <__assert_fail>
    1668:	str	w2, [x0, #48]
    166c:	mov	w2, #0x1                   	// #1
    1670:	strb	w2, [x0, #52]
    1674:	b	14a8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x850>
    1678:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    167c:	add	x3, x3, #0x0
    1680:	mov	w2, #0xa7                  	// #167
    1684:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1688:	add	x1, x1, #0x0
    168c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1690:	add	x0, x0, #0x0
    1694:	bl	0 <__assert_fail>
    1698:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    169c:	add	x3, x3, #0x0
    16a0:	mov	w2, #0x95                  	// #149
    16a4:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    16a8:	add	x1, x1, #0x0
    16ac:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    16b0:	add	x0, x0, #0x0
    16b4:	bl	0 <__assert_fail>
    16b8:	str	w1, [x0, #56]
    16bc:	mov	w1, #0x1                   	// #1
    16c0:	strb	w1, [x0, #60]
    16c4:	b	14d8 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x880>
    16c8:	str	x1, [x20, #112]
    16cc:	str	x0, [x20, #120]
    16d0:	mov	w0, #0x1                   	// #1
    16d4:	strb	w0, [x20, #128]
    16d8:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    16dc:	ldr	w1, [x20, #144]
    16e0:	ldr	w0, [x20, #148]
    16e4:	cmp	w1, w0
    16e8:	b.cs	17ac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xb54>  // b.hs, b.nlast
    16ec:	ldr	w0, [x20, #144]
    16f0:	ldr	x1, [x20, #136]
    16f4:	add	x0, x1, x0, lsl #6
    16f8:	stp	xzr, xzr, [x0]
    16fc:	stp	xzr, xzr, [x0, #16]
    1700:	stp	xzr, xzr, [x0, #32]
    1704:	stp	xzr, xzr, [x0, #48]
    1708:	ldr	w0, [x20, #144]
    170c:	mov	w1, w0
    1710:	add	x1, x1, #0x1
    1714:	ldr	w2, [x20, #148]
    1718:	cmp	x1, x2
    171c:	b.hi	17c4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xb6c>  // b.pmore
    1720:	add	w0, w0, #0x1
    1724:	str	w0, [x20, #144]
    1728:	cbz	w0, 17e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xb8c>
    172c:	ubfiz	x0, x0, #6, #32
    1730:	sub	x0, x0, #0x40
    1734:	ldr	x1, [x20, #136]
    1738:	add	x2, x1, x0
    173c:	ldr	w3, [sp, #184]
    1740:	cbz	w3, 1804 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xbac>
    1744:	ldr	x3, [sp, #176]
    1748:	ldrb	w4, [x2, #8]
    174c:	cbz	w4, 1824 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xbcc>
    1750:	ldr	x2, [x3]
    1754:	str	x2, [x1, x0]
    1758:	ldr	w0, [x20, #144]
    175c:	cbz	w0, 1838 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xbe0>
    1760:	ubfiz	x0, x0, #6, #32
    1764:	sub	x1, x0, #0x40
    1768:	ldr	x0, [x20, #136]
    176c:	add	x0, x0, x1
    1770:	ldr	w1, [sp, #184]
    1774:	cmp	w1, #0x1
    1778:	b.ls	1858 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc00>  // b.plast
    177c:	ldr	x1, [sp, #176]
    1780:	ldrb	w2, [x0, #24]
    1784:	cbz	w2, 1878 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc20>
    1788:	ldr	x1, [x1, #8]
    178c:	str	x1, [x0, #16]
    1790:	ldr	x1, [x20, #136]
    1794:	ldr	w0, [x20, #144]
    1798:	ldrb	w2, [x20, #128]
    179c:	cbz	w2, 188c <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xc34>
    17a0:	str	x1, [x20, #112]
    17a4:	str	x0, [x20, #120]
    17a8:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    17ac:	mov	x3, #0x40                  	// #64
    17b0:	mov	x2, #0x0                   	// #0
    17b4:	add	x1, x20, #0x98
    17b8:	add	x0, x20, #0x88
    17bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    17c0:	b	16ec <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xa94>
    17c4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    17c8:	add	x3, x3, #0x0
    17cc:	mov	w2, #0x43                  	// #67
    17d0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    17d4:	add	x1, x1, #0x0
    17d8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    17dc:	add	x0, x0, #0x0
    17e0:	bl	0 <__assert_fail>
    17e4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    17e8:	add	x3, x3, #0x0
    17ec:	mov	w2, #0xa7                  	// #167
    17f0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    17f4:	add	x1, x1, #0x0
    17f8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    17fc:	add	x0, x0, #0x0
    1800:	bl	0 <__assert_fail>
    1804:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1808:	add	x3, x3, #0x0
    180c:	mov	w2, #0x95                  	// #149
    1810:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1814:	add	x1, x1, #0x0
    1818:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    181c:	add	x0, x0, #0x0
    1820:	bl	0 <__assert_fail>
    1824:	ldr	x3, [x3]
    1828:	str	x3, [x1, x0]
    182c:	mov	w0, #0x1                   	// #1
    1830:	strb	w0, [x2, #8]
    1834:	b	1758 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xb00>
    1838:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    183c:	add	x3, x3, #0x0
    1840:	mov	w2, #0xa7                  	// #167
    1844:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1848:	add	x1, x1, #0x0
    184c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1850:	add	x0, x0, #0x0
    1854:	bl	0 <__assert_fail>
    1858:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    185c:	add	x3, x3, #0x0
    1860:	mov	w2, #0x95                  	// #149
    1864:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1868:	add	x1, x1, #0x0
    186c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1870:	add	x0, x0, #0x0
    1874:	bl	0 <__assert_fail>
    1878:	ldr	x1, [x1, #8]
    187c:	str	x1, [x0, #16]
    1880:	mov	w1, #0x1                   	// #1
    1884:	strb	w1, [x0, #24]
    1888:	b	1790 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0xb38>
    188c:	str	x1, [x20, #112]
    1890:	str	x0, [x20, #120]
    1894:	mov	w0, #0x1                   	// #1
    1898:	strb	w0, [x20, #128]
    189c:	b	12e4 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x68c>
    18a0:	add	x8, sp, #0x60
    18a4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    18a8:	add	x0, x0, #0x0
    18ac:	bl	34c <_ZL13unknownRecordPKcj>
    18b0:	b	12ec <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x694>
    18b4:	add	x0, sp, #0x90
    18b8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    18bc:	tbz	w0, #0, e14 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x1bc>
    18c0:	add	x0, sp, #0x60
    18c4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    18c8:	ldp	x23, x24, [sp, #48]
    18cc:	ldr	x25, [sp, #64]
    18d0:	b	dac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x154>
    18d4:	ldp	x23, x24, [sp, #48]
    18d8:	ldr	x25, [sp, #64]
    18dc:	b	dac <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv+0x154>
    18e0:	stp	x23, x24, [sp, #48]
    18e4:	str	x25, [sp, #64]
    18e8:	add	x0, sp, #0x50
    18ec:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>

00000000000018f0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv>:
    18f0:	stp	x29, x30, [sp, #-304]!
    18f4:	mov	x29, sp
    18f8:	stp	x19, x20, [sp, #16]
    18fc:	stp	x21, x22, [sp, #32]
    1900:	mov	x19, x8
    1904:	mov	x20, x0
    1908:	ldr	x21, [x0]
    190c:	add	x8, sp, #0x58
    1910:	mov	w1, #0x0                   	// #0
    1914:	mov	x0, x21
    1918:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    191c:	ldrb	w1, [sp, #96]
    1920:	and	w0, w1, #0x1
    1924:	bfi	w1, w0, #1, #1
    1928:	strb	w1, [sp, #96]
    192c:	cbz	w0, 1964 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x74>
    1930:	and	x0, x1, #0xff
    1934:	and	w0, w0, #0xfffffffd
    1938:	strb	w0, [sp, #96]
    193c:	ldr	x0, [sp, #88]
    1940:	str	xzr, [sp, #88]
    1944:	orr	x0, x0, #0x1
    1948:	str	x0, [x19]
    194c:	ldr	x0, [sp, #88]
    1950:	cbz	x0, 1a54 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x164>
    1954:	ldr	x1, [x0]
    1958:	ldr	x1, [x1, #8]
    195c:	blr	x1
    1960:	b	1a54 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x164>
    1964:	ldr	w0, [sp, #88]
    1968:	cmp	w0, #0x2
    196c:	b.ne	197c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x8c>  // b.any
    1970:	ldr	w0, [sp, #92]
    1974:	cmp	w0, #0x8
    1978:	b.eq	1a68 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x178>  // b.none
    197c:	bl	0 <_ZNSt3_V216generic_categoryEv>
    1980:	mov	w1, #0x54                  	// #84
    1984:	str	w1, [sp, #104]
    1988:	str	x0, [sp, #112]
    198c:	add	x1, sp, #0x78
    1990:	add	x0, sp, #0x88
    1994:	str	x0, [sp, #120]
    1998:	str	xzr, [sp, #128]
    199c:	strb	wzr, [sp, #136]
    19a0:	mov	w0, #0x1                   	// #1
    19a4:	str	w0, [sp, #216]
    19a8:	str	xzr, [sp, #208]
    19ac:	str	xzr, [sp, #200]
    19b0:	str	xzr, [sp, #192]
    19b4:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    19b8:	ldr	x0, [x0]
    19bc:	add	x0, x0, #0x10
    19c0:	str	x0, [sp, #184]
    19c4:	str	x1, [sp, #224]
    19c8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    19cc:	add	x0, x0, #0x0
    19d0:	str	x0, [sp, #160]
    19d4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    19d8:	ldr	x0, [x0]
    19dc:	add	x0, x0, #0x10
    19e0:	str	x0, [sp, #152]
    19e4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    19e8:	add	x0, x0, #0x0
    19ec:	str	x0, [sp, #168]
    19f0:	str	x0, [sp, #176]
    19f4:	add	x1, sp, #0x98
    19f8:	add	x0, sp, #0xb8
    19fc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    1a00:	ldr	x1, [sp, #208]
    1a04:	ldr	x0, [sp, #192]
    1a08:	cmp	x1, x0
    1a0c:	b.eq	1a18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x128>  // b.none
    1a10:	add	x0, sp, #0xb8
    1a14:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1a18:	mov	x8, x19
    1a1c:	add	x1, sp, #0x68
    1a20:	ldr	x0, [sp, #224]
    1a24:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1a28:	add	x0, sp, #0xb8
    1a2c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    1a30:	ldr	x0, [sp, #120]
    1a34:	add	x1, sp, #0x88
    1a38:	cmp	x0, x1
    1a3c:	b.eq	1a44 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x154>  // b.none
    1a40:	bl	0 <_ZdlPv>
    1a44:	ldrb	w0, [sp, #96]
    1a48:	tbnz	w0, #1, 1fd8 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6e8>
    1a4c:	ldrb	w0, [sp, #96]
    1a50:	tbnz	w0, #0, 194c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x5c>
    1a54:	mov	x0, x19
    1a58:	ldp	x19, x20, [sp, #16]
    1a5c:	ldp	x21, x22, [sp, #32]
    1a60:	ldp	x29, x30, [sp], #304
    1a64:	ret
    1a68:	stp	x23, x24, [sp, #48]
    1a6c:	str	x25, [sp, #64]
    1a70:	add	x8, sp, #0xf8
    1a74:	mov	x2, #0x0                   	// #0
    1a78:	mov	w1, #0x8                   	// #8
    1a7c:	mov	x0, x21
    1a80:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1a84:	ldr	x0, [sp, #248]
    1a88:	ands	x1, x0, #0xfffffffffffffffe
    1a8c:	cset	x0, ne  // ne = any
    1a90:	orr	x0, x0, x1
    1a94:	str	x0, [sp, #248]
    1a98:	cbnz	x0, 1b94 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x2a4>
    1a9c:	add	x23, sp, #0xe8
    1aa0:	add	x22, sp, #0xb8
    1aa4:	add	x24, x22, #0x10
    1aa8:	add	x25, sp, #0x78
    1aac:	ldr	w0, [x21, #32]
    1ab0:	cbnz	w0, 1b9c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x2ac>
    1ab4:	ldr	x1, [x21, #8]
    1ab8:	ldr	x0, [x21, #16]
    1abc:	cmp	x1, x0
    1ac0:	b.hi	1b9c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x2ac>  // b.pmore
    1ac4:	bl	0 <_ZNSt3_V216generic_categoryEv>
    1ac8:	mov	w1, #0x54                  	// #84
    1acc:	str	w1, [sp, #120]
    1ad0:	str	x0, [sp, #128]
    1ad4:	add	x1, sp, #0x98
    1ad8:	add	x0, sp, #0xa8
    1adc:	str	x0, [sp, #152]
    1ae0:	str	xzr, [sp, #160]
    1ae4:	strb	wzr, [sp, #168]
    1ae8:	mov	w0, #0x1                   	// #1
    1aec:	str	w0, [sp, #216]
    1af0:	str	xzr, [sp, #208]
    1af4:	str	xzr, [sp, #200]
    1af8:	str	xzr, [sp, #192]
    1afc:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1b00:	ldr	x0, [x0]
    1b04:	add	x0, x0, #0x10
    1b08:	str	x0, [sp, #184]
    1b0c:	str	x1, [sp, #224]
    1b10:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1b14:	add	x0, x0, #0x0
    1b18:	str	x0, [sp, #264]
    1b1c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1b20:	ldr	x0, [x0]
    1b24:	add	x0, x0, #0x10
    1b28:	str	x0, [sp, #256]
    1b2c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1b30:	add	x0, x0, #0x0
    1b34:	str	x0, [sp, #272]
    1b38:	add	x1, sp, #0x100
    1b3c:	add	x0, sp, #0xb8
    1b40:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    1b44:	ldr	x1, [sp, #208]
    1b48:	ldr	x0, [sp, #192]
    1b4c:	cmp	x1, x0
    1b50:	b.eq	1b5c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x26c>  // b.none
    1b54:	add	x0, sp, #0xb8
    1b58:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1b5c:	mov	x8, x19
    1b60:	add	x1, sp, #0x78
    1b64:	ldr	x0, [sp, #224]
    1b68:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1b6c:	add	x0, sp, #0xb8
    1b70:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    1b74:	ldr	x0, [sp, #152]
    1b78:	add	x1, sp, #0xa8
    1b7c:	cmp	x0, x1
    1b80:	b.eq	1fc0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6d0>  // b.none
    1b84:	bl	0 <_ZdlPv>
    1b88:	ldp	x23, x24, [sp, #48]
    1b8c:	ldr	x25, [sp, #64]
    1b90:	b	1a44 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x154>
    1b94:	add	x0, sp, #0xf8
    1b98:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1b9c:	mov	x8, x23
    1ba0:	mov	w1, #0x0                   	// #0
    1ba4:	mov	x0, x21
    1ba8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1bac:	ldrb	w0, [sp, #96]
    1bb0:	tbnz	w0, #1, 1c38 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x348>
    1bb4:	ldrb	w0, [sp, #96]
    1bb8:	tbz	w0, #0, 1bd0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x2e0>
    1bbc:	ldr	x0, [sp, #88]
    1bc0:	cbz	x0, 1bd0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x2e0>
    1bc4:	ldr	x1, [x0]
    1bc8:	ldr	x1, [x1, #8]
    1bcc:	blr	x1
    1bd0:	ldrb	w0, [sp, #240]
    1bd4:	and	w2, w0, #0x1
    1bd8:	ldrb	w1, [sp, #96]
    1bdc:	bfxil	w1, w2, #0, #1
    1be0:	orr	w1, w1, #0x2
    1be4:	strb	w1, [sp, #96]
    1be8:	and	w0, w0, #0xfffffffd
    1bec:	strb	w0, [sp, #240]
    1bf0:	cbnz	w2, 1c40 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x350>
    1bf4:	ldr	x0, [sp, #232]
    1bf8:	str	x0, [sp, #88]
    1bfc:	ldrb	w0, [sp, #96]
    1c00:	and	w1, w0, #0x1
    1c04:	bfi	w0, w1, #1, #1
    1c08:	strb	w0, [sp, #96]
    1c0c:	cbnz	w1, 1c4c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x35c>
    1c10:	ldr	w0, [sp, #88]
    1c14:	cmp	w0, #0x2
    1c18:	b.eq	1d20 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x430>  // b.none
    1c1c:	b.hi	1c64 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x374>  // b.pmore
    1c20:	cbz	w0, 1d20 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x430>
    1c24:	mov	x0, #0x1                   	// #1
    1c28:	str	x0, [x19]
    1c2c:	ldp	x23, x24, [sp, #48]
    1c30:	ldr	x25, [sp, #64]
    1c34:	b	1a54 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x164>
    1c38:	add	x0, sp, #0x58
    1c3c:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1c40:	ldr	x0, [sp, #232]
    1c44:	str	x0, [sp, #88]
    1c48:	b	1bfc <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x30c>
    1c4c:	mov	x8, x19
    1c50:	add	x0, sp, #0x58
    1c54:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1c58:	ldp	x23, x24, [sp, #48]
    1c5c:	ldr	x25, [sp, #64]
    1c60:	b	1a44 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x154>
    1c64:	cmp	w0, #0x3
    1c68:	b.ne	1aac <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x1bc>  // b.any
    1c6c:	str	x24, [sp, #184]
    1c70:	str	wzr, [sp, #192]
    1c74:	mov	w0, #0x2                   	// #2
    1c78:	str	w0, [sp, #196]
    1c7c:	str	xzr, [sp, #120]
    1c80:	str	xzr, [sp, #128]
    1c84:	add	x8, sp, #0x98
    1c88:	mov	x3, x25
    1c8c:	mov	x2, x22
    1c90:	ldr	w1, [sp, #92]
    1c94:	ldr	x0, [x20]
    1c98:	bl	0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    1c9c:	ldrb	w0, [sp, #160]
    1ca0:	and	w1, w0, #0x1
    1ca4:	bfi	w0, w1, #1, #1
    1ca8:	strb	w0, [sp, #160]
    1cac:	cbz	w1, 1df0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x500>
    1cb0:	and	x0, x0, #0xff
    1cb4:	and	w0, w0, #0xfffffffd
    1cb8:	strb	w0, [sp, #160]
    1cbc:	ldr	x0, [sp, #152]
    1cc0:	str	xzr, [sp, #152]
    1cc4:	orr	x0, x0, #0x1
    1cc8:	str	x0, [sp, #104]
    1ccc:	ldr	x0, [sp, #152]
    1cd0:	cbz	x0, 1ce0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x3f0>
    1cd4:	ldr	x1, [x0]
    1cd8:	ldr	x1, [x1, #8]
    1cdc:	blr	x1
    1ce0:	ldr	x0, [sp, #184]
    1ce4:	cmp	x0, x24
    1ce8:	b.eq	1cf0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x400>  // b.none
    1cec:	bl	0 <free>
    1cf0:	ldr	x0, [sp, #104]
    1cf4:	ands	x1, x0, #0xfffffffffffffffe
    1cf8:	cset	x0, ne  // ne = any
    1cfc:	orr	x0, x0, x1
    1d00:	str	x0, [sp, #104]
    1d04:	ands	x1, x0, #0xfffffffffffffffe
    1d08:	b.eq	1fb4 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6c4>  // b.none
    1d0c:	orr	x1, x1, #0x1
    1d10:	str	x1, [x19]
    1d14:	ldp	x23, x24, [sp, #48]
    1d18:	ldr	x25, [sp, #64]
    1d1c:	b	1a44 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x154>
    1d20:	bl	0 <_ZNSt3_V216generic_categoryEv>
    1d24:	mov	w1, #0x54                  	// #84
    1d28:	str	w1, [sp, #120]
    1d2c:	str	x0, [sp, #128]
    1d30:	add	x1, sp, #0x98
    1d34:	add	x0, sp, #0xa8
    1d38:	str	x0, [sp, #152]
    1d3c:	str	xzr, [sp, #160]
    1d40:	strb	wzr, [sp, #168]
    1d44:	mov	w0, #0x1                   	// #1
    1d48:	str	w0, [sp, #216]
    1d4c:	str	xzr, [sp, #208]
    1d50:	str	xzr, [sp, #200]
    1d54:	str	xzr, [sp, #192]
    1d58:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1d5c:	ldr	x0, [x0]
    1d60:	add	x0, x0, #0x10
    1d64:	str	x0, [sp, #184]
    1d68:	str	x1, [sp, #224]
    1d6c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1d70:	add	x0, x0, #0x0
    1d74:	str	x0, [sp, #288]
    1d78:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1d7c:	ldr	x0, [x0]
    1d80:	add	x0, x0, #0x10
    1d84:	str	x0, [sp, #280]
    1d88:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1d8c:	add	x0, x0, #0x0
    1d90:	str	x0, [sp, #296]
    1d94:	add	x1, sp, #0x118
    1d98:	add	x0, sp, #0xb8
    1d9c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    1da0:	ldr	x1, [sp, #208]
    1da4:	ldr	x0, [sp, #192]
    1da8:	cmp	x1, x0
    1dac:	b.eq	1db8 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x4c8>  // b.none
    1db0:	add	x0, sp, #0xb8
    1db4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1db8:	mov	x8, x19
    1dbc:	add	x1, sp, #0x78
    1dc0:	ldr	x0, [sp, #224]
    1dc4:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1dc8:	add	x0, sp, #0xb8
    1dcc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    1dd0:	ldr	x0, [sp, #152]
    1dd4:	add	x1, sp, #0xa8
    1dd8:	cmp	x0, x1
    1ddc:	b.eq	1fcc <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6dc>  // b.none
    1de0:	bl	0 <_ZdlPv>
    1de4:	ldp	x23, x24, [sp, #48]
    1de8:	ldr	x25, [sp, #64]
    1dec:	b	1a44 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x154>
    1df0:	ldr	w1, [sp, #152]
    1df4:	cmp	w1, #0x3
    1df8:	b.eq	1f00 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x610>  // b.none
    1dfc:	cmp	w1, #0x3
    1e00:	b.hi	1e38 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x548>  // b.pmore
    1e04:	cmp	w1, #0x1
    1e08:	b.eq	1e5c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x56c>  // b.none
    1e0c:	cmp	w1, #0x2
    1e10:	b.ne	1f88 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x698>  // b.any
    1e14:	ldr	w0, [sp, #192]
    1e18:	cmp	w0, #0x1
    1e1c:	b.ne	1ed0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x5e0>  // b.any
    1e20:	ldr	x0, [sp, #184]
    1e24:	ldrb	w1, [x20, #96]
    1e28:	cbz	w1, 1eec <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x5fc>
    1e2c:	ldr	x0, [x0]
    1e30:	str	x0, [x20, #88]
    1e34:	b	1f18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x628>
    1e38:	cmp	w1, #0x4
    1e3c:	b.ne	1f88 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x698>  // b.any
    1e40:	ldr	w0, [sp, #192]
    1e44:	cbnz	w0, 1f54 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x664>
    1e48:	ldrb	w0, [x20, #80]
    1e4c:	cbz	w0, 1f70 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x680>
    1e50:	ldp	x0, x1, [sp, #120]
    1e54:	stp	x0, x1, [x20, #64]
    1e58:	b	1f18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x628>
    1e5c:	ldr	w0, [sp, #192]
    1e60:	cmp	w0, #0x2
    1e64:	b.ne	1e90 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x5a0>  // b.any
    1e68:	ldr	x0, [sp, #184]
    1e6c:	ldrb	w1, [x20, #24]
    1e70:	cbz	w1, 1eac <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x5bc>
    1e74:	ldr	x1, [x0]
    1e78:	str	x1, [x20, #16]
    1e7c:	ldrb	w0, [x0, #8]
    1e80:	ldrb	w1, [x20, #33]
    1e84:	cbz	w1, 1ec0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x5d0>
    1e88:	strb	w0, [x20, #32]
    1e8c:	b	1f18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x628>
    1e90:	add	x8, sp, #0x68
    1e94:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1e98:	add	x1, x1, #0x0
    1e9c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1ea0:	add	x0, x0, #0x0
    1ea4:	bl	43c <_ZL15malformedRecordPKcS0_>
    1ea8:	b	1f98 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6a8>
    1eac:	ldr	x1, [x0]
    1eb0:	str	x1, [x20, #16]
    1eb4:	mov	w1, #0x1                   	// #1
    1eb8:	strb	w1, [x20, #24]
    1ebc:	b	1e7c <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x58c>
    1ec0:	strb	w0, [x20, #32]
    1ec4:	mov	w0, #0x1                   	// #1
    1ec8:	strb	w0, [x20, #33]
    1ecc:	b	1f18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x628>
    1ed0:	add	x8, sp, #0x68
    1ed4:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1ed8:	add	x1, x1, #0x0
    1edc:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1ee0:	add	x0, x0, #0x0
    1ee4:	bl	43c <_ZL15malformedRecordPKcS0_>
    1ee8:	b	1f98 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6a8>
    1eec:	ldr	x0, [x0]
    1ef0:	str	x0, [x20, #88]
    1ef4:	mov	w0, #0x1                   	// #1
    1ef8:	strb	w0, [x20, #96]
    1efc:	b	1f18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x628>
    1f00:	ldr	w0, [sp, #192]
    1f04:	cbnz	w0, 1f24 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x634>
    1f08:	ldrb	w0, [x20, #56]
    1f0c:	cbz	w0, 1f40 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x650>
    1f10:	ldp	x0, x1, [sp, #120]
    1f14:	stp	x0, x1, [x20, #40]
    1f18:	mov	x0, #0x1                   	// #1
    1f1c:	str	x0, [sp, #104]
    1f20:	b	1ce0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x3f0>
    1f24:	add	x8, sp, #0x68
    1f28:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1f2c:	add	x1, x1, #0x0
    1f30:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1f34:	add	x0, x0, #0x0
    1f38:	bl	43c <_ZL15malformedRecordPKcS0_>
    1f3c:	b	1f98 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6a8>
    1f40:	ldp	x0, x1, [sp, #120]
    1f44:	stp	x0, x1, [x20, #40]
    1f48:	mov	w0, #0x1                   	// #1
    1f4c:	strb	w0, [x20, #56]
    1f50:	b	1f18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x628>
    1f54:	add	x8, sp, #0x68
    1f58:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1f5c:	add	x1, x1, #0x0
    1f60:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1f64:	add	x0, x0, #0x0
    1f68:	bl	43c <_ZL15malformedRecordPKcS0_>
    1f6c:	b	1f98 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6a8>
    1f70:	mov	x0, x20
    1f74:	ldp	x2, x3, [sp, #120]
    1f78:	stp	x2, x3, [x0, #64]!
    1f7c:	mov	w1, #0x1                   	// #1
    1f80:	strb	w1, [x0, #16]
    1f84:	b	1f18 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x628>
    1f88:	add	x8, sp, #0x68
    1f8c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1f90:	add	x0, x0, #0x0
    1f94:	bl	34c <_ZL13unknownRecordPKcj>
    1f98:	ldrb	w0, [sp, #160]
    1f9c:	tbz	w0, #1, 1fa8 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x6b8>
    1fa0:	add	x0, sp, #0x98
    1fa4:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    1fa8:	ldrb	w0, [sp, #160]
    1fac:	tbz	w0, #0, 1ce0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x3f0>
    1fb0:	b	1ccc <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x3dc>
    1fb4:	tbz	w0, #0, 1aac <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x1bc>
    1fb8:	add	x0, sp, #0x68
    1fbc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1fc0:	ldp	x23, x24, [sp, #48]
    1fc4:	ldr	x25, [sp, #64]
    1fc8:	b	1a44 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x154>
    1fcc:	ldp	x23, x24, [sp, #48]
    1fd0:	ldr	x25, [sp, #64]
    1fd4:	b	1a44 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv+0x154>
    1fd8:	stp	x23, x24, [sp, #48]
    1fdc:	str	x25, [sp, #64]
    1fe0:	add	x0, sp, #0x58
    1fe4:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>

0000000000001fe8 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE>:
    1fe8:	sub	sp, sp, #0x210
    1fec:	stp	x29, x30, [sp]
    1ff0:	mov	x29, sp
    1ff4:	stp	x19, x20, [sp, #16]
    1ff8:	stp	x21, x22, [sp, #32]
    1ffc:	stp	x23, x24, [sp, #48]
    2000:	stp	x25, x26, [sp, #64]
    2004:	mov	x21, x8
    2008:	mov	x22, x0
    200c:	mov	x20, x1
    2010:	mov	x25, x2
    2014:	mov	x23, x3
    2018:	ldrb	w24, [x3, #16]
    201c:	add	x19, sp, #0xa0
    2020:	mov	x1, x0
    2024:	mov	x2, x20
    2028:	mov	x0, x19
    202c:	bl	184 <_ZN4llvm7remarks21BitstreamParserHelperC1ENS_9StringRefE>
    2030:	add	x8, sp, #0x90
    2034:	mov	x0, x19
    2038:	bl	640 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv>
    203c:	ldrb	w4, [sp, #152]
    2040:	and	w0, w4, #0x1
    2044:	bfi	w4, w0, #1, #1
    2048:	strb	w4, [sp, #152]
    204c:	cbz	w0, 20b8 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xd0>
    2050:	and	x0, x4, #0xff
    2054:	and	w0, w0, #0xfffffffd
    2058:	strb	w0, [sp, #152]
    205c:	ldr	x0, [sp, #144]
    2060:	str	xzr, [sp, #144]
    2064:	ldrb	w1, [x21, #8]
    2068:	orr	w1, w1, #0x3
    206c:	strb	w1, [x21, #8]
    2070:	ands	x0, x0, #0xfffffffffffffffe
    2074:	cbz	x0, 2094 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xac>
    2078:	str	x0, [x21]
    207c:	ldr	x0, [sp, #144]
    2080:	cbz	x0, 2104 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x11c>
    2084:	ldr	x1, [x0]
    2088:	ldr	x1, [x1, #8]
    208c:	blr	x1
    2090:	b	2104 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x11c>
    2094:	stp	x27, x28, [sp, #80]
    2098:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    209c:	add	x3, x3, #0x0
    20a0:	mov	w2, #0x1ce                 	// #462
    20a4:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    20a8:	add	x1, x1, #0x0
    20ac:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    20b0:	add	x0, x0, #0x0
    20b4:	bl	0 <__assert_fail>
    20b8:	add	x8, sp, #0x68
    20bc:	add	x0, sp, #0x90
    20c0:	mov	x1, #0x4                   	// #4
    20c4:	bl	52c <_ZL19validateMagicNumberN4llvm9StringRefE>
    20c8:	ldr	x0, [sp, #104]
    20cc:	ands	x1, x0, #0xfffffffffffffffe
    20d0:	cset	x0, ne  // ne = any
    20d4:	orr	x0, x0, x1
    20d8:	str	x0, [sp, #104]
    20dc:	ands	x1, x0, #0xfffffffffffffffe
    20e0:	b.eq	2124 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x13c>  // b.none
    20e4:	ldrb	w0, [x21, #8]
    20e8:	orr	w0, w0, #0x3
    20ec:	strb	w0, [x21, #8]
    20f0:	str	x1, [x21]
    20f4:	ldrb	w0, [sp, #152]
    20f8:	tbnz	w0, #1, 238c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3a4>
    20fc:	ldrb	w0, [sp, #152]
    2100:	tbnz	w0, #0, 207c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x94>
    2104:	ldr	x19, [sp, #504]
    2108:	ldr	x24, [sp, #512]
    210c:	cmp	x19, x24
    2110:	b.eq	24b0 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4c8>  // b.none
    2114:	adrp	x23, 0 <__pthread_key_create>
    2118:	ldr	x25, [x23]
    211c:	mov	x23, x25
    2120:	b	2404 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x41c>
    2124:	tbnz	w0, #0, 2294 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x2ac>
    2128:	ldrb	w0, [x25, #40]
    212c:	cbz	w0, 22a0 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x2b8>
    2130:	stp	x27, x28, [sp, #80]
    2134:	mov	x0, x25
    2138:	ldp	x2, x3, [x0], #16
    213c:	stp	x2, x3, [sp, #104]
    2140:	ldr	x28, [x25, #16]
    2144:	ldr	x27, [x0, #8]
    2148:	ldr	x26, [x0, #16]
    214c:	str	xzr, [x0, #16]
    2150:	str	xzr, [x0, #8]
    2154:	str	xzr, [x25, #16]
    2158:	mov	x0, #0x1f0                 	// #496
    215c:	bl	0 <_Znwm>
    2160:	mov	x19, x0
    2164:	mov	w0, #0x3                   	// #3
    2168:	str	w0, [x19, #8]
    216c:	add	x0, x19, #0x20
    2170:	str	x0, [x19, #16]
    2174:	str	xzr, [x19, #24]
    2178:	strb	wzr, [x19, #32]
    217c:	mov	x0, x19
    2180:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2184:	ldr	x1, [x1]
    2188:	add	x1, x1, #0x10
    218c:	str	x1, [x0], #48
    2190:	mov	x1, x22
    2194:	mov	x2, x20
    2198:	bl	184 <_ZN4llvm7remarks21BitstreamParserHelperC1ENS_9StringRefE>
    219c:	ldp	x0, x1, [sp, #104]
    21a0:	stp	x0, x1, [x19, #416]
    21a4:	str	x28, [x19, #432]
    21a8:	str	x27, [x19, #440]
    21ac:	str	x26, [x19, #448]
    21b0:	mov	w0, #0x1                   	// #1
    21b4:	strb	w0, [x19, #456]
    21b8:	str	xzr, [x19, #464]
    21bc:	str	xzr, [x19, #472]
    21c0:	str	xzr, [x19, #480]
    21c4:	mov	w0, #0x2                   	// #2
    21c8:	str	w0, [x19, #488]
    21cc:	strb	wzr, [x19, #492]
    21d0:	ldp	x27, x28, [sp, #80]
    21d4:	cbz	w24, 227c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x294>
    21d8:	ldr	x20, [x23]
    21dc:	cbz	x20, 2308 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x320>
    21e0:	ldr	x22, [x23, #8]
    21e4:	add	x0, sp, #0x78
    21e8:	str	x0, [sp, #104]
    21ec:	str	x22, [sp, #96]
    21f0:	cmp	x22, #0xf
    21f4:	b.hi	232c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x344>  // b.pmore
    21f8:	cmp	x22, #0x1
    21fc:	b.ne	2358 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x370>  // b.any
    2200:	ldrb	w0, [x20]
    2204:	strb	w0, [sp, #120]
    2208:	ldr	x0, [sp, #96]
    220c:	str	x0, [sp, #112]
    2210:	ldr	x1, [sp, #104]
    2214:	strb	wzr, [x1, x0]
    2218:	ldr	x0, [x19, #16]
    221c:	add	x2, x19, #0x20
    2220:	ldr	x1, [sp, #104]
    2224:	add	x3, sp, #0x78
    2228:	cmp	x1, x3
    222c:	b.eq	2364 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x37c>  // b.none
    2230:	cmp	x0, x2
    2234:	b.eq	269c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x6b4>  // b.none
    2238:	ldr	x3, [x19, #32]
    223c:	str	x1, [x19, #16]
    2240:	ldr	x1, [sp, #112]
    2244:	str	x1, [x19, #24]
    2248:	ldr	x1, [sp, #120]
    224c:	str	x1, [x19, #32]
    2250:	cbz	x0, 26b0 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x6c8>
    2254:	str	x0, [sp, #104]
    2258:	str	x3, [sp, #120]
    225c:	str	xzr, [sp, #112]
    2260:	ldr	x0, [sp, #104]
    2264:	strb	wzr, [x0]
    2268:	ldr	x0, [sp, #104]
    226c:	add	x1, sp, #0x78
    2270:	cmp	x0, x1
    2274:	b.eq	227c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x294>  // b.none
    2278:	bl	0 <_ZdlPv>
    227c:	ldrb	w0, [x21, #8]
    2280:	and	w0, w0, #0xfffffffe
    2284:	orr	w0, w0, #0x2
    2288:	strb	w0, [x21, #8]
    228c:	str	x19, [x21]
    2290:	b	20f4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x10c>
    2294:	stp	x27, x28, [sp, #80]
    2298:	add	x0, sp, #0x68
    229c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    22a0:	mov	x0, #0x1f0                 	// #496
    22a4:	bl	0 <_Znwm>
    22a8:	mov	x19, x0
    22ac:	mov	w0, #0x3                   	// #3
    22b0:	str	w0, [x19, #8]
    22b4:	add	x0, x19, #0x20
    22b8:	str	x0, [x19, #16]
    22bc:	str	xzr, [x19, #24]
    22c0:	strb	wzr, [x19, #32]
    22c4:	mov	x0, x19
    22c8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    22cc:	ldr	x1, [x1]
    22d0:	add	x1, x1, #0x10
    22d4:	str	x1, [x0], #48
    22d8:	mov	x1, x22
    22dc:	mov	x2, x20
    22e0:	bl	184 <_ZN4llvm7remarks21BitstreamParserHelperC1ENS_9StringRefE>
    22e4:	strb	wzr, [x19, #416]
    22e8:	strb	wzr, [x19, #456]
    22ec:	str	xzr, [x19, #464]
    22f0:	str	xzr, [x19, #472]
    22f4:	str	xzr, [x19, #480]
    22f8:	mov	w0, #0x2                   	// #2
    22fc:	str	w0, [x19, #488]
    2300:	strb	wzr, [x19, #492]
    2304:	b	21d4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x1ec>
    2308:	add	x0, sp, #0x78
    230c:	str	x0, [sp, #104]
    2310:	str	xzr, [sp, #112]
    2314:	strb	wzr, [sp, #120]
    2318:	ldr	x0, [sp, #112]
    231c:	str	x0, [x19, #24]
    2320:	ldr	x1, [x19, #16]
    2324:	strb	wzr, [x1, x0]
    2328:	b	225c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x274>
    232c:	mov	x2, #0x0                   	// #0
    2330:	add	x1, sp, #0x60
    2334:	add	x0, sp, #0x68
    2338:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    233c:	str	x0, [sp, #104]
    2340:	ldr	x1, [sp, #96]
    2344:	str	x1, [sp, #120]
    2348:	mov	x2, x22
    234c:	mov	x1, x20
    2350:	bl	0 <memcpy>
    2354:	b	2208 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x220>
    2358:	cbz	x22, 2208 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x220>
    235c:	add	x0, sp, #0x78
    2360:	b	2348 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x360>
    2364:	ldr	x2, [sp, #112]
    2368:	cbz	x2, 2318 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x330>
    236c:	cmp	x2, #0x1
    2370:	b.eq	2380 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x398>  // b.none
    2374:	add	x1, sp, #0x78
    2378:	bl	0 <memcpy>
    237c:	b	2318 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x330>
    2380:	ldrb	w1, [sp, #120]
    2384:	strb	w1, [x0]
    2388:	b	2318 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x330>
    238c:	stp	x27, x28, [sp, #80]
    2390:	add	x0, sp, #0x90
    2394:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2398:	bl	0 <_ZdlPv>
    239c:	add	x20, x20, #0x28
    23a0:	cmp	x22, x20
    23a4:	b.eq	23bc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3d4>  // b.none
    23a8:	ldr	x0, [x20, #8]
    23ac:	add	x1, x20, #0x18
    23b0:	cmp	x0, x1
    23b4:	b.ne	2398 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3b0>  // b.any
    23b8:	b	239c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3b4>
    23bc:	ldr	x0, [x19, #64]
    23c0:	cbz	x0, 23c8 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3e0>
    23c4:	bl	0 <_ZdlPv>
    23c8:	ldr	x0, [x19, #32]
    23cc:	add	x1, x19, #0x30
    23d0:	cmp	x0, x1
    23d4:	b.eq	23dc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3f4>  // b.none
    23d8:	bl	0 <_ZdlPv>
    23dc:	ldr	x22, [x19, #8]
    23e0:	ldr	x26, [x19, #16]
    23e4:	cmp	x22, x26
    23e8:	b.ne	2440 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x458>  // b.any
    23ec:	ldr	x0, [x19, #8]
    23f0:	cbz	x0, 23f8 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x410>
    23f4:	bl	0 <_ZdlPv>
    23f8:	add	x19, x19, #0x58
    23fc:	cmp	x24, x19
    2400:	b.eq	24b0 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4c8>  // b.none
    2404:	ldr	x20, [x19, #64]
    2408:	ldr	x22, [x19, #72]
    240c:	cmp	x20, x22
    2410:	b.ne	23a8 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3c0>  // b.any
    2414:	b	23bc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x3d4>
    2418:	add	x1, x20, #0x8
    241c:	ldaxr	w0, [x1]
    2420:	sub	w2, w0, #0x1
    2424:	stlxr	w3, w2, [x1]
    2428:	cbnz	w3, 241c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x434>
    242c:	cmp	w0, #0x1
    2430:	b.eq	245c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x474>  // b.none
    2434:	add	x22, x22, #0x10
    2438:	cmp	x26, x22
    243c:	b.eq	23ec <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x404>  // b.none
    2440:	ldr	x20, [x22, #8]
    2444:	cbz	x20, 2434 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x44c>
    2448:	cbnz	x25, 2418 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x430>
    244c:	ldr	w0, [x20, #8]
    2450:	sub	w1, w0, #0x1
    2454:	str	w1, [x20, #8]
    2458:	b	242c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x444>
    245c:	ldr	x0, [x20]
    2460:	ldr	x1, [x0, #16]
    2464:	mov	x0, x20
    2468:	blr	x1
    246c:	cbz	x23, 24a0 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4b8>
    2470:	add	x1, x20, #0xc
    2474:	ldaxr	w0, [x1]
    2478:	sub	w2, w0, #0x1
    247c:	stlxr	w3, w2, [x1]
    2480:	cbnz	w3, 2474 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x48c>
    2484:	cmp	w0, #0x1
    2488:	b.ne	2434 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x44c>  // b.any
    248c:	ldr	x0, [x20]
    2490:	ldr	x1, [x0, #24]
    2494:	mov	x0, x20
    2498:	blr	x1
    249c:	b	2434 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x44c>
    24a0:	ldr	w0, [x20, #12]
    24a4:	sub	w1, w0, #0x1
    24a8:	str	w1, [x20, #12]
    24ac:	b	2484 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x49c>
    24b0:	ldr	x0, [sp, #504]
    24b4:	cbz	x0, 24bc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4d4>
    24b8:	bl	0 <_ZdlPv>
    24bc:	ldr	x25, [sp, #224]
    24c0:	ldr	w20, [sp, #232]
    24c4:	add	x20, x25, x20, lsl #5
    24c8:	cmp	x25, x20
    24cc:	b.eq	25a4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5bc>  // b.none
    24d0:	adrp	x23, 0 <__pthread_key_create>
    24d4:	ldr	x26, [x23]
    24d8:	mov	x23, x26
    24dc:	b	258c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5a4>
    24e0:	add	x1, x19, #0x8
    24e4:	ldaxr	w0, [x1]
    24e8:	sub	w2, w0, #0x1
    24ec:	stlxr	w3, w2, [x1]
    24f0:	cbnz	w3, 24e4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4fc>
    24f4:	cmp	w0, #0x1
    24f8:	b.eq	2524 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x53c>  // b.none
    24fc:	add	x22, x22, #0x10
    2500:	cmp	x24, x22
    2504:	b.eq	2578 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x590>  // b.none
    2508:	ldr	x19, [x22, #8]
    250c:	cbz	x19, 24fc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x514>
    2510:	cbnz	x26, 24e0 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4f8>
    2514:	ldr	w0, [x19, #8]
    2518:	sub	w1, w0, #0x1
    251c:	str	w1, [x19, #8]
    2520:	b	24f4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x50c>
    2524:	ldr	x0, [x19]
    2528:	ldr	x1, [x0, #16]
    252c:	mov	x0, x19
    2530:	blr	x1
    2534:	cbz	x23, 2568 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x580>
    2538:	add	x1, x19, #0xc
    253c:	ldaxr	w0, [x1]
    2540:	sub	w2, w0, #0x1
    2544:	stlxr	w3, w2, [x1]
    2548:	cbnz	w3, 253c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x554>
    254c:	cmp	w0, #0x1
    2550:	b.ne	24fc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x514>  // b.any
    2554:	ldr	x0, [x19]
    2558:	ldr	x1, [x0, #24]
    255c:	mov	x0, x19
    2560:	blr	x1
    2564:	b	24fc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x514>
    2568:	ldr	w0, [x19, #12]
    256c:	sub	w1, w0, #0x1
    2570:	str	w1, [x19, #12]
    2574:	b	254c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x564>
    2578:	ldr	x0, [x20, #8]
    257c:	cbz	x0, 2584 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x59c>
    2580:	bl	0 <_ZdlPv>
    2584:	cmp	x25, x20
    2588:	b.eq	25a4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5bc>  // b.none
    258c:	sub	x20, x20, #0x20
    2590:	ldr	x22, [x20, #8]
    2594:	ldr	x24, [x20, #16]
    2598:	cmp	x22, x24
    259c:	b.ne	2508 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x520>  // b.any
    25a0:	b	2578 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x590>
    25a4:	ldr	x0, [sp, #224]
    25a8:	add	x1, sp, #0xf0
    25ac:	cmp	x0, x1
    25b0:	b.eq	25b8 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5d0>  // b.none
    25b4:	bl	0 <free>
    25b8:	ldr	x20, [sp, #200]
    25bc:	ldr	x23, [sp, #208]
    25c0:	cmp	x20, x23
    25c4:	b.eq	2670 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x688>  // b.none
    25c8:	adrp	x22, 0 <__pthread_key_create>
    25cc:	ldr	x24, [x22]
    25d0:	mov	x22, x24
    25d4:	b	2600 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x618>
    25d8:	add	x1, x19, #0x8
    25dc:	ldaxr	w0, [x1]
    25e0:	sub	w2, w0, #0x1
    25e4:	stlxr	w3, w2, [x1]
    25e8:	cbnz	w3, 25dc <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5f4>
    25ec:	cmp	w0, #0x1
    25f0:	b.eq	261c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x634>  // b.none
    25f4:	add	x20, x20, #0x10
    25f8:	cmp	x23, x20
    25fc:	b.eq	2670 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x688>  // b.none
    2600:	ldr	x19, [x20, #8]
    2604:	cbz	x19, 25f4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x60c>
    2608:	cbnz	x24, 25d8 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5f0>
    260c:	ldr	w0, [x19, #8]
    2610:	sub	w1, w0, #0x1
    2614:	str	w1, [x19, #8]
    2618:	b	25ec <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x604>
    261c:	ldr	x0, [x19]
    2620:	ldr	x1, [x0, #16]
    2624:	mov	x0, x19
    2628:	blr	x1
    262c:	cbz	x22, 2660 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x678>
    2630:	add	x1, x19, #0xc
    2634:	ldaxr	w0, [x1]
    2638:	sub	w2, w0, #0x1
    263c:	stlxr	w3, w2, [x1]
    2640:	cbnz	w3, 2634 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x64c>
    2644:	cmp	w0, #0x1
    2648:	b.ne	25f4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x60c>  // b.any
    264c:	ldr	x0, [x19]
    2650:	ldr	x1, [x0, #24]
    2654:	mov	x0, x19
    2658:	blr	x1
    265c:	b	25f4 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x60c>
    2660:	ldr	w0, [x19, #12]
    2664:	sub	w1, w0, #0x1
    2668:	str	w1, [x19, #12]
    266c:	b	2644 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x65c>
    2670:	ldr	x0, [sp, #200]
    2674:	cbz	x0, 267c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x694>
    2678:	bl	0 <_ZdlPv>
    267c:	mov	x0, x21
    2680:	ldp	x19, x20, [sp, #16]
    2684:	ldp	x21, x22, [sp, #32]
    2688:	ldp	x23, x24, [sp, #48]
    268c:	ldp	x25, x26, [sp, #64]
    2690:	ldp	x29, x30, [sp]
    2694:	add	sp, sp, #0x210
    2698:	ret
    269c:	str	x1, [x19, #16]
    26a0:	ldr	x1, [sp, #112]
    26a4:	str	x1, [x19, #24]
    26a8:	ldr	x1, [sp, #120]
    26ac:	str	x1, [x19, #32]
    26b0:	add	x0, sp, #0x78
    26b4:	str	x0, [sp, #104]
    26b8:	b	225c <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x274>

00000000000026bc <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE>:
    26bc:	stp	x29, x30, [sp, #-224]!
    26c0:	mov	x29, sp
    26c4:	stp	x19, x20, [sp, #16]
    26c8:	stp	x21, x22, [sp, #32]
    26cc:	stp	x23, x24, [sp, #48]
    26d0:	mov	x20, x8
    26d4:	mov	x21, x0
    26d8:	mov	x24, x1
    26dc:	mov	x0, #0x1b8                 	// #440
    26e0:	bl	0 <_Znwm>
    26e4:	mov	x19, x0
    26e8:	mov	x2, #0x1b8                 	// #440
    26ec:	mov	w1, #0x0                   	// #0
    26f0:	bl	0 <memset>
    26f4:	add	x22, x19, #0x78
    26f8:	str	x22, [x19, #104]
    26fc:	mov	w0, #0x5                   	// #5
    2700:	str	w0, [x19, #116]
    2704:	ldrb	w0, [x21, #456]
    2708:	cbz	w0, 27f0 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x134>
    270c:	ldrb	w0, [x24, #9]
    2710:	cbz	w0, 2894 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x1d8>
    2714:	ldrb	w0, [x24, #8]
    2718:	cmp	w0, #0x6
    271c:	b.hi	2908 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x24c>  // b.pmore
    2720:	str	w0, [x19]
    2724:	ldrb	w0, [x24, #24]
    2728:	cbz	w0, 297c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x2c0>
    272c:	add	x23, x21, #0x1a0
    2730:	add	x8, sp, #0x70
    2734:	ldr	x1, [x24, #16]
    2738:	mov	x0, x23
    273c:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    2740:	ldrb	w0, [sp, #128]
    2744:	tbnz	w0, #0, 29f0 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x334>
    2748:	ldp	x0, x1, [sp, #112]
    274c:	stp	x0, x1, [x19, #24]
    2750:	ldrb	w0, [x24, #40]
    2754:	cbz	w0, 2a48 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x38c>
    2758:	ldrb	w0, [x21, #456]
    275c:	cbz	w0, 2abc <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x400>
    2760:	add	x8, sp, #0x70
    2764:	ldr	x1, [x24, #32]
    2768:	mov	x0, x23
    276c:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    2770:	ldrb	w0, [sp, #128]
    2774:	tbnz	w0, #0, 2ae4 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x428>
    2778:	ldp	x0, x1, [sp, #112]
    277c:	stp	x0, x1, [x19, #8]
    2780:	ldrb	w0, [x24, #56]
    2784:	cbz	w0, 2b3c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x480>
    2788:	ldrb	w0, [x21, #456]
    278c:	cbz	w0, 2bb0 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x4f4>
    2790:	add	x8, sp, #0x70
    2794:	ldr	x1, [x24, #48]
    2798:	mov	x0, x23
    279c:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    27a0:	ldrb	w0, [sp, #128]
    27a4:	tbnz	w0, #0, 2bd8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x51c>
    27a8:	ldp	x0, x1, [sp, #112]
    27ac:	stp	x0, x1, [x19, #40]
    27b0:	ldrb	w0, [x24, #72]
    27b4:	cbnz	w0, 2c30 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x574>
    27b8:	ldrb	w0, [x24, #104]
    27bc:	cbz	w0, 27d0 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x114>
    27c0:	ldrb	w0, [x19, #96]
    27c4:	cbz	w0, 2d5c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x6a0>
    27c8:	ldr	x0, [x24, #96]
    27cc:	str	x0, [x19, #88]
    27d0:	ldrb	w0, [x24, #128]
    27d4:	cbnz	w0, 2d70 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x6b4>
    27d8:	ldrb	w0, [x20, #8]
    27dc:	and	w0, w0, #0xfffffffe
    27e0:	orr	w0, w0, #0x2
    27e4:	strb	w0, [x20, #8]
    27e8:	str	x19, [x20]
    27ec:	b	2854 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x198>
    27f0:	bl	0 <_ZNSt3_V216generic_categoryEv>
    27f4:	mov	x1, x0
    27f8:	add	x8, sp, #0x88
    27fc:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2800:	add	x2, x2, #0x0
    2804:	mov	x0, #0x16                  	// #22
    2808:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    280c:	ldrb	w0, [x20, #8]
    2810:	orr	w0, w0, #0x3
    2814:	strb	w0, [x20, #8]
    2818:	ldr	x0, [sp, #136]
    281c:	ands	x1, x0, #0xfffffffffffffffe
    2820:	cset	x0, ne  // ne = any
    2824:	orr	x0, x0, x1
    2828:	str	x0, [sp, #136]
    282c:	ands	x0, x0, #0xfffffffffffffffe
    2830:	b.eq	286c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x1b0>  // b.none
    2834:	str	x0, [x20]
    2838:	ldr	x0, [x19, #104]
    283c:	cmp	x22, x0
    2840:	b.eq	2848 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x18c>  // b.none
    2844:	bl	0 <free>
    2848:	mov	x1, #0x1b8                 	// #440
    284c:	mov	x0, x19
    2850:	bl	0 <_ZdlPvm>
    2854:	mov	x0, x20
    2858:	ldp	x19, x20, [sp, #16]
    285c:	ldp	x21, x22, [sp, #32]
    2860:	ldp	x23, x24, [sp, #48]
    2864:	ldp	x29, x30, [sp], #224
    2868:	ret
    286c:	stp	x25, x26, [sp, #64]
    2870:	stp	x27, x28, [sp, #80]
    2874:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2878:	add	x3, x3, #0x0
    287c:	mov	w2, #0x1ce                 	// #462
    2880:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2884:	add	x1, x1, #0x0
    2888:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    288c:	add	x0, x0, #0x0
    2890:	bl	0 <__assert_fail>
    2894:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2898:	mov	x1, x0
    289c:	add	x8, sp, #0x90
    28a0:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    28a4:	add	x2, x2, #0x0
    28a8:	mov	x0, #0x54                  	// #84
    28ac:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    28b0:	ldrb	w0, [x20, #8]
    28b4:	orr	w0, w0, #0x3
    28b8:	strb	w0, [x20, #8]
    28bc:	ldr	x0, [sp, #144]
    28c0:	ands	x1, x0, #0xfffffffffffffffe
    28c4:	cset	x0, ne  // ne = any
    28c8:	orr	x0, x0, x1
    28cc:	str	x0, [sp, #144]
    28d0:	ands	x0, x0, #0xfffffffffffffffe
    28d4:	b.eq	28e0 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x224>  // b.none
    28d8:	str	x0, [x20]
    28dc:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    28e0:	stp	x25, x26, [sp, #64]
    28e4:	stp	x27, x28, [sp, #80]
    28e8:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    28ec:	add	x3, x3, #0x0
    28f0:	mov	w2, #0x1ce                 	// #462
    28f4:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    28f8:	add	x1, x1, #0x0
    28fc:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2900:	add	x0, x0, #0x0
    2904:	bl	0 <__assert_fail>
    2908:	bl	0 <_ZNSt3_V216generic_categoryEv>
    290c:	mov	x1, x0
    2910:	add	x8, sp, #0x98
    2914:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2918:	add	x2, x2, #0x0
    291c:	mov	x0, #0x54                  	// #84
    2920:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2924:	ldrb	w0, [x20, #8]
    2928:	orr	w0, w0, #0x3
    292c:	strb	w0, [x20, #8]
    2930:	ldr	x0, [sp, #152]
    2934:	ands	x1, x0, #0xfffffffffffffffe
    2938:	cset	x0, ne  // ne = any
    293c:	orr	x0, x0, x1
    2940:	str	x0, [sp, #152]
    2944:	ands	x0, x0, #0xfffffffffffffffe
    2948:	b.eq	2954 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x298>  // b.none
    294c:	str	x0, [x20]
    2950:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2954:	stp	x25, x26, [sp, #64]
    2958:	stp	x27, x28, [sp, #80]
    295c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2960:	add	x3, x3, #0x0
    2964:	mov	w2, #0x1ce                 	// #462
    2968:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    296c:	add	x1, x1, #0x0
    2970:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2974:	add	x0, x0, #0x0
    2978:	bl	0 <__assert_fail>
    297c:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2980:	mov	x1, x0
    2984:	add	x8, sp, #0xa0
    2988:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    298c:	add	x2, x2, #0x0
    2990:	mov	x0, #0x54                  	// #84
    2994:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2998:	ldrb	w0, [x20, #8]
    299c:	orr	w0, w0, #0x3
    29a0:	strb	w0, [x20, #8]
    29a4:	ldr	x0, [sp, #160]
    29a8:	ands	x1, x0, #0xfffffffffffffffe
    29ac:	cset	x0, ne  // ne = any
    29b0:	orr	x0, x0, x1
    29b4:	str	x0, [sp, #160]
    29b8:	ands	x0, x0, #0xfffffffffffffffe
    29bc:	b.eq	29c8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x30c>  // b.none
    29c0:	str	x0, [x20]
    29c4:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    29c8:	stp	x25, x26, [sp, #64]
    29cc:	stp	x27, x28, [sp, #80]
    29d0:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    29d4:	add	x3, x3, #0x0
    29d8:	mov	w2, #0x1ce                 	// #462
    29dc:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    29e0:	add	x1, x1, #0x0
    29e4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    29e8:	add	x0, x0, #0x0
    29ec:	bl	0 <__assert_fail>
    29f0:	ldrb	w0, [sp, #128]
    29f4:	and	w0, w0, #0xfffffffd
    29f8:	strb	w0, [sp, #128]
    29fc:	ldr	x0, [sp, #112]
    2a00:	str	xzr, [sp, #112]
    2a04:	ldrb	w1, [x20, #8]
    2a08:	orr	w1, w1, #0x3
    2a0c:	strb	w1, [x20, #8]
    2a10:	ands	x0, x0, #0xfffffffffffffffe
    2a14:	cbz	x0, 2a20 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x364>
    2a18:	str	x0, [x20]
    2a1c:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2a20:	stp	x25, x26, [sp, #64]
    2a24:	stp	x27, x28, [sp, #80]
    2a28:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2a2c:	add	x3, x3, #0x0
    2a30:	mov	w2, #0x1ce                 	// #462
    2a34:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2a38:	add	x1, x1, #0x0
    2a3c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2a40:	add	x0, x0, #0x0
    2a44:	bl	0 <__assert_fail>
    2a48:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2a4c:	mov	x1, x0
    2a50:	add	x8, sp, #0xa8
    2a54:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2a58:	add	x2, x2, #0x0
    2a5c:	mov	x0, #0x54                  	// #84
    2a60:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2a64:	ldrb	w0, [x20, #8]
    2a68:	orr	w0, w0, #0x3
    2a6c:	strb	w0, [x20, #8]
    2a70:	ldr	x0, [sp, #168]
    2a74:	ands	x1, x0, #0xfffffffffffffffe
    2a78:	cset	x0, ne  // ne = any
    2a7c:	orr	x0, x0, x1
    2a80:	str	x0, [sp, #168]
    2a84:	ands	x0, x0, #0xfffffffffffffffe
    2a88:	b.eq	2a94 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x3d8>  // b.none
    2a8c:	str	x0, [x20]
    2a90:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2a94:	stp	x25, x26, [sp, #64]
    2a98:	stp	x27, x28, [sp, #80]
    2a9c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2aa0:	add	x3, x3, #0x0
    2aa4:	mov	w2, #0x1ce                 	// #462
    2aa8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2aac:	add	x1, x1, #0x0
    2ab0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ab4:	add	x0, x0, #0x0
    2ab8:	bl	0 <__assert_fail>
    2abc:	stp	x25, x26, [sp, #64]
    2ac0:	stp	x27, x28, [sp, #80]
    2ac4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ac8:	add	x3, x3, #0x0
    2acc:	mov	w2, #0x49                  	// #73
    2ad0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ad4:	add	x1, x1, #0x0
    2ad8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2adc:	add	x0, x0, #0x0
    2ae0:	bl	0 <__assert_fail>
    2ae4:	ldrb	w0, [sp, #128]
    2ae8:	and	w0, w0, #0xfffffffd
    2aec:	strb	w0, [sp, #128]
    2af0:	ldr	x0, [sp, #112]
    2af4:	str	xzr, [sp, #112]
    2af8:	ldrb	w1, [x20, #8]
    2afc:	orr	w1, w1, #0x3
    2b00:	strb	w1, [x20, #8]
    2b04:	ands	x0, x0, #0xfffffffffffffffe
    2b08:	cbz	x0, 2b14 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x458>
    2b0c:	str	x0, [x20]
    2b10:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2b14:	stp	x25, x26, [sp, #64]
    2b18:	stp	x27, x28, [sp, #80]
    2b1c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2b20:	add	x3, x3, #0x0
    2b24:	mov	w2, #0x1ce                 	// #462
    2b28:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2b2c:	add	x1, x1, #0x0
    2b30:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2b34:	add	x0, x0, #0x0
    2b38:	bl	0 <__assert_fail>
    2b3c:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2b40:	mov	x1, x0
    2b44:	add	x8, sp, #0xb0
    2b48:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2b4c:	add	x2, x2, #0x0
    2b50:	mov	x0, #0x54                  	// #84
    2b54:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2b58:	ldrb	w0, [x20, #8]
    2b5c:	orr	w0, w0, #0x3
    2b60:	strb	w0, [x20, #8]
    2b64:	ldr	x0, [sp, #176]
    2b68:	ands	x1, x0, #0xfffffffffffffffe
    2b6c:	cset	x0, ne  // ne = any
    2b70:	orr	x0, x0, x1
    2b74:	str	x0, [sp, #176]
    2b78:	ands	x0, x0, #0xfffffffffffffffe
    2b7c:	b.eq	2b88 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x4cc>  // b.none
    2b80:	str	x0, [x20]
    2b84:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2b88:	stp	x25, x26, [sp, #64]
    2b8c:	stp	x27, x28, [sp, #80]
    2b90:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2b94:	add	x3, x3, #0x0
    2b98:	mov	w2, #0x1ce                 	// #462
    2b9c:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ba0:	add	x1, x1, #0x0
    2ba4:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ba8:	add	x0, x0, #0x0
    2bac:	bl	0 <__assert_fail>
    2bb0:	stp	x25, x26, [sp, #64]
    2bb4:	stp	x27, x28, [sp, #80]
    2bb8:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2bbc:	add	x3, x3, #0x0
    2bc0:	mov	w2, #0x49                  	// #73
    2bc4:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2bc8:	add	x1, x1, #0x0
    2bcc:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2bd0:	add	x0, x0, #0x0
    2bd4:	bl	0 <__assert_fail>
    2bd8:	ldrb	w0, [sp, #128]
    2bdc:	and	w0, w0, #0xfffffffd
    2be0:	strb	w0, [sp, #128]
    2be4:	ldr	x0, [sp, #112]
    2be8:	str	xzr, [sp, #112]
    2bec:	ldrb	w1, [x20, #8]
    2bf0:	orr	w1, w1, #0x3
    2bf4:	strb	w1, [x20, #8]
    2bf8:	ands	x0, x0, #0xfffffffffffffffe
    2bfc:	cbz	x0, 2c08 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x54c>
    2c00:	str	x0, [x20]
    2c04:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2c08:	stp	x25, x26, [sp, #64]
    2c0c:	stp	x27, x28, [sp, #80]
    2c10:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2c14:	add	x3, x3, #0x0
    2c18:	mov	w2, #0x1ce                 	// #462
    2c1c:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2c20:	add	x1, x1, #0x0
    2c24:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2c28:	add	x0, x0, #0x0
    2c2c:	bl	0 <__assert_fail>
    2c30:	ldrb	w0, [x24, #84]
    2c34:	cbz	w0, 27b8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xfc>
    2c38:	ldrb	w0, [x24, #92]
    2c3c:	cbz	w0, 27b8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xfc>
    2c40:	ldrb	w0, [x21, #456]
    2c44:	cbz	w0, 2cb0 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x5f4>
    2c48:	add	x8, sp, #0x70
    2c4c:	ldr	x1, [x24, #64]
    2c50:	mov	x0, x23
    2c54:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    2c58:	ldrb	w0, [sp, #128]
    2c5c:	and	w1, w0, #0x1
    2c60:	bfi	w0, w1, #1, #1
    2c64:	strb	w0, [sp, #128]
    2c68:	cbnz	w1, 2cd8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x61c>
    2c6c:	str	wzr, [x19, #72]
    2c70:	str	wzr, [x19, #76]
    2c74:	mov	w1, #0x1                   	// #1
    2c78:	strb	w1, [x19, #80]
    2c7c:	ldp	x0, x1, [sp, #112]
    2c80:	stp	x0, x1, [x19, #56]
    2c84:	ldrb	w0, [x24, #84]
    2c88:	cbz	w0, 2d0c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x650>
    2c8c:	ldr	w0, [x24, #80]
    2c90:	str	w0, [x19, #72]
    2c94:	ldrb	w0, [x24, #92]
    2c98:	cbz	w0, 2d34 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x678>
    2c9c:	ldr	w0, [x24, #88]
    2ca0:	str	w0, [x19, #76]
    2ca4:	add	x0, sp, #0x70
    2ca8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2cac:	b	27b8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xfc>
    2cb0:	stp	x25, x26, [sp, #64]
    2cb4:	stp	x27, x28, [sp, #80]
    2cb8:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2cbc:	add	x3, x3, #0x0
    2cc0:	mov	w2, #0x49                  	// #73
    2cc4:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2cc8:	add	x1, x1, #0x0
    2ccc:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2cd0:	add	x0, x0, #0x0
    2cd4:	bl	0 <__assert_fail>
    2cd8:	add	x21, sp, #0x70
    2cdc:	add	x23, sp, #0xb8
    2ce0:	mov	x8, x23
    2ce4:	mov	x0, x21
    2ce8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2cec:	mov	x1, x23
    2cf0:	mov	x0, x20
    2cf4:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2cf8:	mov	x0, x23
    2cfc:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d00:	mov	x0, x21
    2d04:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d08:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2d0c:	stp	x25, x26, [sp, #64]
    2d10:	stp	x27, x28, [sp, #80]
    2d14:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d18:	add	x3, x3, #0x0
    2d1c:	mov	w2, #0xad                  	// #173
    2d20:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d24:	add	x1, x1, #0x0
    2d28:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d2c:	add	x0, x0, #0x0
    2d30:	bl	0 <__assert_fail>
    2d34:	stp	x25, x26, [sp, #64]
    2d38:	stp	x27, x28, [sp, #80]
    2d3c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d40:	add	x3, x3, #0x0
    2d44:	mov	w2, #0xad                  	// #173
    2d48:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d4c:	add	x1, x1, #0x0
    2d50:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2d54:	add	x0, x0, #0x0
    2d58:	bl	0 <__assert_fail>
    2d5c:	ldr	x0, [x24, #96]
    2d60:	str	x0, [x19, #88]
    2d64:	mov	w0, #0x1                   	// #1
    2d68:	strb	w0, [x19, #96]
    2d6c:	b	27d0 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x114>
    2d70:	stp	x25, x26, [sp, #64]
    2d74:	stp	x27, x28, [sp, #80]
    2d78:	ldr	x25, [x24, #112]
    2d7c:	ldr	x27, [x24, #120]
    2d80:	add	x27, x25, x27, lsl #6
    2d84:	cmp	x27, x25
    2d88:	b.eq	3428 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xd6c>  // b.none
    2d8c:	add	x0, x19, #0x68
    2d90:	str	x0, [sp, #104]
    2d94:	add	x21, x21, #0x1a0
    2d98:	add	x26, sp, #0x70
    2d9c:	mov	w28, #0x1                   	// #1
    2da0:	b	3020 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x964>
    2da4:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2da8:	mov	x1, x0
    2dac:	add	x8, sp, #0xc0
    2db0:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2db4:	add	x2, x2, #0x0
    2db8:	mov	x0, #0x54                  	// #84
    2dbc:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2dc0:	ldrb	w0, [x20, #8]
    2dc4:	orr	w0, w0, #0x3
    2dc8:	strb	w0, [x20, #8]
    2dcc:	ldr	x0, [sp, #192]
    2dd0:	ands	x1, x0, #0xfffffffffffffffe
    2dd4:	cset	x0, ne  // ne = any
    2dd8:	orr	x0, x0, x1
    2ddc:	str	x0, [sp, #192]
    2de0:	ands	x0, x0, #0xfffffffffffffffe
    2de4:	b.eq	2df8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x73c>  // b.none
    2de8:	str	x0, [x20]
    2dec:	ldp	x25, x26, [sp, #64]
    2df0:	ldp	x27, x28, [sp, #80]
    2df4:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2df8:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2dfc:	add	x3, x3, #0x0
    2e00:	mov	w2, #0x1ce                 	// #462
    2e04:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2e08:	add	x1, x1, #0x0
    2e0c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2e10:	add	x0, x0, #0x0
    2e14:	bl	0 <__assert_fail>
    2e18:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2e1c:	mov	x1, x0
    2e20:	add	x8, sp, #0xc8
    2e24:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2e28:	add	x2, x2, #0x0
    2e2c:	mov	x0, #0x54                  	// #84
    2e30:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2e34:	ldrb	w0, [x20, #8]
    2e38:	orr	w0, w0, #0x3
    2e3c:	strb	w0, [x20, #8]
    2e40:	ldr	x0, [sp, #200]
    2e44:	ands	x1, x0, #0xfffffffffffffffe
    2e48:	cset	x0, ne  // ne = any
    2e4c:	orr	x0, x0, x1
    2e50:	str	x0, [sp, #200]
    2e54:	ands	x0, x0, #0xfffffffffffffffe
    2e58:	b.eq	2e6c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x7b0>  // b.none
    2e5c:	str	x0, [x20]
    2e60:	ldp	x25, x26, [sp, #64]
    2e64:	ldp	x27, x28, [sp, #80]
    2e68:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2e6c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2e70:	add	x3, x3, #0x0
    2e74:	mov	w2, #0x1ce                 	// #462
    2e78:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2e7c:	add	x1, x1, #0x0
    2e80:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2e84:	add	x0, x0, #0x0
    2e88:	bl	0 <__assert_fail>
    2e8c:	mov	x3, #0x40                  	// #64
    2e90:	mov	x2, #0x0                   	// #0
    2e94:	mov	x1, x22
    2e98:	ldr	x0, [sp, #104]
    2e9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ea0:	b	3044 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x988>
    2ea4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ea8:	add	x3, x3, #0x0
    2eac:	mov	w2, #0x43                  	// #67
    2eb0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2eb4:	add	x1, x1, #0x0
    2eb8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ebc:	add	x0, x0, #0x0
    2ec0:	bl	0 <__assert_fail>
    2ec4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ec8:	add	x3, x3, #0x0
    2ecc:	mov	w2, #0xa7                  	// #167
    2ed0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ed4:	add	x1, x1, #0x0
    2ed8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2edc:	add	x0, x0, #0x0
    2ee0:	bl	0 <__assert_fail>
    2ee4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ee8:	add	x3, x3, #0x0
    2eec:	mov	w2, #0x49                  	// #73
    2ef0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ef4:	add	x1, x1, #0x0
    2ef8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2efc:	add	x0, x0, #0x0
    2f00:	bl	0 <__assert_fail>
    2f04:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f08:	add	x3, x3, #0x0
    2f0c:	mov	w2, #0xb1                  	// #177
    2f10:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f14:	add	x1, x1, #0x0
    2f18:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f1c:	add	x0, x0, #0x0
    2f20:	bl	0 <__assert_fail>
    2f24:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f28:	add	x3, x3, #0x0
    2f2c:	mov	w2, #0xa7                  	// #167
    2f30:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f34:	add	x1, x1, #0x0
    2f38:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f3c:	add	x0, x0, #0x0
    2f40:	bl	0 <__assert_fail>
    2f44:	add	x0, sp, #0x70
    2f48:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f4c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f50:	add	x3, x3, #0x0
    2f54:	mov	w2, #0x49                  	// #73
    2f58:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f5c:	add	x1, x1, #0x0
    2f60:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f64:	add	x0, x0, #0x0
    2f68:	bl	0 <__assert_fail>
    2f6c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f70:	add	x3, x3, #0x0
    2f74:	mov	w2, #0xb1                  	// #177
    2f78:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f7c:	add	x1, x1, #0x0
    2f80:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2f84:	add	x0, x0, #0x0
    2f88:	bl	0 <__assert_fail>
    2f8c:	ldrb	w0, [sp, #128]
    2f90:	and	w0, w0, #0xfffffffd
    2f94:	strb	w0, [sp, #128]
    2f98:	ldr	x0, [sp, #112]
    2f9c:	str	xzr, [sp, #112]
    2fa0:	ldrb	w1, [x20, #8]
    2fa4:	orr	w1, w1, #0x3
    2fa8:	strb	w1, [x20, #8]
    2fac:	ands	x0, x0, #0xfffffffffffffffe
    2fb0:	cbz	x0, 2fc4 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x908>
    2fb4:	str	x0, [x20]
    2fb8:	ldp	x25, x26, [sp, #64]
    2fbc:	ldp	x27, x28, [sp, #80]
    2fc0:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    2fc4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2fc8:	add	x3, x3, #0x0
    2fcc:	mov	w2, #0x1ce                 	// #462
    2fd0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2fd4:	add	x1, x1, #0x0
    2fd8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2fdc:	add	x0, x0, #0x0
    2fe0:	bl	0 <__assert_fail>
    2fe4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2fe8:	add	x3, x3, #0x0
    2fec:	mov	w2, #0xa7                  	// #167
    2ff0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ff4:	add	x1, x1, #0x0
    2ff8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    2ffc:	add	x0, x0, #0x0
    3000:	bl	0 <__assert_fail>
    3004:	add	x0, sp, #0x70
    3008:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    300c:	ldrb	w0, [x24, #40]
    3010:	cbnz	w0, 31b8 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xafc>
    3014:	add	x25, x25, #0x40
    3018:	cmp	x27, x25
    301c:	b.eq	3428 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xd6c>  // b.none
    3020:	mov	x24, x25
    3024:	ldrb	w0, [x25, #8]
    3028:	cbz	w0, 2da4 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x6e8>
    302c:	ldrb	w0, [x25, #24]
    3030:	cbz	w0, 2e18 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x75c>
    3034:	ldr	w1, [x19, #112]
    3038:	ldr	w0, [x19, #116]
    303c:	cmp	w1, w0
    3040:	b.cs	2e8c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x7d0>  // b.hs, b.nlast
    3044:	ldr	w1, [x19, #112]
    3048:	lsl	x1, x1, #6
    304c:	ldr	x2, [x19, #104]
    3050:	add	x0, x2, x1
    3054:	stp	xzr, xzr, [x0, #32]
    3058:	stp	xzr, xzr, [x0, #48]
    305c:	str	xzr, [x2, x1]
    3060:	str	xzr, [x0, #8]
    3064:	str	xzr, [x0, #16]
    3068:	str	xzr, [x0, #24]
    306c:	ldr	w0, [x19, #112]
    3070:	mov	w1, w0
    3074:	add	x1, x1, #0x1
    3078:	ldr	w2, [x19, #116]
    307c:	cmp	x1, x2
    3080:	b.hi	2ea4 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x7e8>  // b.pmore
    3084:	add	w0, w0, #0x1
    3088:	str	w0, [x19, #112]
    308c:	cbz	w0, 2ec4 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x808>
    3090:	ldrb	w0, [x21, #40]
    3094:	cbz	w0, 2ee4 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x828>
    3098:	ldrb	w0, [x24, #8]
    309c:	cbz	w0, 2f04 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x848>
    30a0:	mov	x8, x26
    30a4:	ldr	x1, [x24]
    30a8:	mov	x0, x23
    30ac:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    30b0:	ldrb	w0, [sp, #128]
    30b4:	and	w1, w0, #0x1
    30b8:	bfi	w0, w1, #1, #1
    30bc:	strb	w0, [sp, #128]
    30c0:	cbnz	w1, 2f8c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x8d0>
    30c4:	ldr	w0, [x19, #112]
    30c8:	cbz	w0, 2f24 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x868>
    30cc:	ldr	x1, [x19, #104]
    30d0:	ubfiz	x0, x0, #6, #32
    30d4:	add	x0, x1, x0
    30d8:	ldp	x2, x3, [sp, #112]
    30dc:	stp	x2, x3, [x0, #-64]
    30e0:	ldrb	w0, [sp, #128]
    30e4:	tbnz	w0, #1, 2f44 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x888>
    30e8:	ldrb	w0, [sp, #128]
    30ec:	tbz	w0, #0, 3104 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xa48>
    30f0:	ldr	x0, [sp, #112]
    30f4:	cbz	x0, 3104 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xa48>
    30f8:	ldr	x1, [x0]
    30fc:	ldr	x1, [x1, #8]
    3100:	blr	x1
    3104:	ldrb	w0, [x21, #40]
    3108:	cbz	w0, 2f4c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x890>
    310c:	ldrb	w0, [x24, #24]
    3110:	cbz	w0, 2f6c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x8b0>
    3114:	mov	x8, x26
    3118:	ldr	x1, [x24, #16]
    311c:	mov	x0, x23
    3120:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    3124:	ldrb	w0, [sp, #128]
    3128:	and	w1, w0, #0x1
    312c:	bfi	w0, w1, #1, #1
    3130:	strb	w0, [sp, #128]
    3134:	cbnz	w1, 317c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xac0>
    3138:	ldr	w0, [x19, #112]
    313c:	cbz	w0, 2fe4 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x928>
    3140:	ldr	x1, [x19, #104]
    3144:	ubfiz	x0, x0, #6, #32
    3148:	add	x0, x1, x0
    314c:	ldp	x2, x3, [sp, #112]
    3150:	stp	x2, x3, [x0, #-48]
    3154:	ldrb	w0, [sp, #128]
    3158:	tbnz	w0, #1, 3004 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x948>
    315c:	ldrb	w0, [sp, #128]
    3160:	tbz	w0, #0, 300c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x950>
    3164:	ldr	x0, [sp, #112]
    3168:	cbz	x0, 300c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x950>
    316c:	ldr	x1, [x0]
    3170:	ldr	x1, [x1, #8]
    3174:	blr	x1
    3178:	b	300c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x950>
    317c:	add	x21, sp, #0x70
    3180:	add	x23, sp, #0xd0
    3184:	mov	x8, x23
    3188:	mov	x0, x21
    318c:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3190:	mov	x1, x23
    3194:	mov	x0, x20
    3198:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    319c:	mov	x0, x23
    31a0:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    31a4:	mov	x0, x21
    31a8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    31ac:	ldp	x25, x26, [sp, #64]
    31b0:	ldp	x27, x28, [sp, #80]
    31b4:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    31b8:	ldrb	w0, [x24, #52]
    31bc:	cbz	w0, 3014 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x958>
    31c0:	ldrb	w0, [x24, #60]
    31c4:	cbz	w0, 3014 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x958>
    31c8:	ldrb	w0, [x21, #40]
    31cc:	cbz	w0, 32ac <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xbf0>
    31d0:	mov	x8, x26
    31d4:	ldr	x1, [x24, #32]
    31d8:	mov	x0, x23
    31dc:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    31e0:	ldrb	w0, [sp, #128]
    31e4:	and	w1, w0, #0x1
    31e8:	bfi	w0, w1, #1, #1
    31ec:	strb	w0, [sp, #128]
    31f0:	cbnz	w1, 33ec <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xd30>
    31f4:	ldr	w0, [x19, #112]
    31f8:	cbz	w0, 32cc <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xc10>
    31fc:	ubfiz	x0, x0, #6, #32
    3200:	sub	x0, x0, #0x40
    3204:	ldr	x1, [x19, #104]
    3208:	add	x1, x1, x0
    320c:	str	xzr, [x1, #32]
    3210:	str	xzr, [x1, #40]
    3214:	str	wzr, [x1, #48]
    3218:	str	wzr, [x1, #52]
    321c:	strb	w28, [x1, #56]
    3220:	ldr	w0, [x19, #112]
    3224:	cbz	w0, 32ec <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xc30>
    3228:	ubfiz	x0, x0, #6, #32
    322c:	sub	x0, x0, #0x40
    3230:	ldr	x1, [x19, #104]
    3234:	add	x0, x1, x0
    3238:	ldrb	w1, [x0, #56]
    323c:	cbz	w1, 330c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xc50>
    3240:	ldp	x2, x3, [sp, #112]
    3244:	stp	x2, x3, [x0, #32]
    3248:	ldrb	w0, [x24, #52]
    324c:	cbz	w0, 332c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xc70>
    3250:	ldr	w0, [x19, #112]
    3254:	cbz	w0, 334c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xc90>
    3258:	ubfiz	x0, x0, #6, #32
    325c:	sub	x0, x0, #0x40
    3260:	ldr	x1, [x19, #104]
    3264:	add	x0, x1, x0
    3268:	ldrb	w1, [x0, #56]
    326c:	cbz	w1, 336c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xcb0>
    3270:	ldr	w1, [x24, #48]
    3274:	str	w1, [x0, #48]
    3278:	ldrb	w0, [x24, #60]
    327c:	cbz	w0, 338c <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xcd0>
    3280:	ldr	w0, [x19, #112]
    3284:	cbz	w0, 33ac <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xcf0>
    3288:	ubfiz	x0, x0, #6, #32
    328c:	sub	x0, x0, #0x40
    3290:	ldr	x1, [x19, #104]
    3294:	add	x0, x1, x0
    3298:	ldrb	w1, [x0, #56]
    329c:	cbz	w1, 33cc <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0xd10>
    32a0:	ldr	w1, [x24, #56]
    32a4:	str	w1, [x0, #52]
    32a8:	b	3014 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x958>
    32ac:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32b0:	add	x3, x3, #0x0
    32b4:	mov	w2, #0x49                  	// #73
    32b8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32bc:	add	x1, x1, #0x0
    32c0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32c4:	add	x0, x0, #0x0
    32c8:	bl	0 <__assert_fail>
    32cc:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32d0:	add	x3, x3, #0x0
    32d4:	mov	w2, #0xa7                  	// #167
    32d8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32dc:	add	x1, x1, #0x0
    32e0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32e4:	add	x0, x0, #0x0
    32e8:	bl	0 <__assert_fail>
    32ec:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32f0:	add	x3, x3, #0x0
    32f4:	mov	w2, #0xa7                  	// #167
    32f8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    32fc:	add	x1, x1, #0x0
    3300:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3304:	add	x0, x0, #0x0
    3308:	bl	0 <__assert_fail>
    330c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3310:	add	x3, x3, #0x0
    3314:	mov	w2, #0xad                  	// #173
    3318:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    331c:	add	x1, x1, #0x0
    3320:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3324:	add	x0, x0, #0x0
    3328:	bl	0 <__assert_fail>
    332c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3330:	add	x3, x3, #0x0
    3334:	mov	w2, #0xb1                  	// #177
    3338:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    333c:	add	x1, x1, #0x0
    3340:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3344:	add	x0, x0, #0x0
    3348:	bl	0 <__assert_fail>
    334c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3350:	add	x3, x3, #0x0
    3354:	mov	w2, #0xa7                  	// #167
    3358:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    335c:	add	x1, x1, #0x0
    3360:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3364:	add	x0, x0, #0x0
    3368:	bl	0 <__assert_fail>
    336c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3370:	add	x3, x3, #0x0
    3374:	mov	w2, #0xad                  	// #173
    3378:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    337c:	add	x1, x1, #0x0
    3380:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3384:	add	x0, x0, #0x0
    3388:	bl	0 <__assert_fail>
    338c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3390:	add	x3, x3, #0x0
    3394:	mov	w2, #0xb1                  	// #177
    3398:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    339c:	add	x1, x1, #0x0
    33a0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    33a4:	add	x0, x0, #0x0
    33a8:	bl	0 <__assert_fail>
    33ac:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    33b0:	add	x3, x3, #0x0
    33b4:	mov	w2, #0xa7                  	// #167
    33b8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    33bc:	add	x1, x1, #0x0
    33c0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    33c4:	add	x0, x0, #0x0
    33c8:	bl	0 <__assert_fail>
    33cc:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    33d0:	add	x3, x3, #0x0
    33d4:	mov	w2, #0xad                  	// #173
    33d8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    33dc:	add	x1, x1, #0x0
    33e0:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    33e4:	add	x0, x0, #0x0
    33e8:	bl	0 <__assert_fail>
    33ec:	add	x21, sp, #0x70
    33f0:	add	x23, sp, #0xd8
    33f4:	mov	x8, x23
    33f8:	mov	x0, x21
    33fc:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3400:	mov	x1, x23
    3404:	mov	x0, x20
    3408:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    340c:	mov	x0, x23
    3410:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3414:	mov	x0, x21
    3418:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    341c:	ldp	x25, x26, [sp, #64]
    3420:	ldp	x27, x28, [sp, #80]
    3424:	b	2838 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x17c>
    3428:	ldrb	w0, [x20, #8]
    342c:	and	w0, w0, #0xfffffffe
    3430:	orr	w0, w0, #0x2
    3434:	strb	w0, [x20, #8]
    3438:	str	x19, [x20]
    343c:	ldp	x25, x26, [sp, #64]
    3440:	ldp	x27, x28, [sp, #80]
    3444:	b	2854 <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE+0x198>

0000000000003448 <_ZN4llvm7remarks21BitstreamRemarkParser11parseRemarkEv>:
    3448:	sub	sp, sp, #0x2d0
    344c:	stp	x29, x30, [sp]
    3450:	mov	x29, sp
    3454:	stp	x19, x20, [sp, #16]
    3458:	str	x21, [sp, #32]
    345c:	mov	x19, x8
    3460:	mov	x21, x0
    3464:	add	x20, sp, #0x38
    3468:	add	x1, x0, #0x30
    346c:	mov	x0, x20
    3470:	bl	120 <_ZN4llvm7remarks27BitstreamRemarkParserHelperC1ERNS_15BitstreamCursorE>
    3474:	add	x8, sp, #0x30
    3478:	mov	x0, x20
    347c:	bl	c58 <_ZN4llvm7remarks27BitstreamRemarkParserHelper5parseEv>
    3480:	ldr	x1, [sp, #48]
    3484:	ands	x2, x1, #0xfffffffffffffffe
    3488:	cset	x1, ne  // ne = any
    348c:	orr	x1, x1, x2
    3490:	str	x1, [sp, #48]
    3494:	ands	x2, x1, #0xfffffffffffffffe
    3498:	b.eq	34d8 <_ZN4llvm7remarks21BitstreamRemarkParser11parseRemarkEv+0x90>  // b.none
    349c:	ldrb	w0, [x19, #8]
    34a0:	orr	w0, w0, #0x3
    34a4:	strb	w0, [x19, #8]
    34a8:	str	x2, [x19]
    34ac:	ldr	x0, [sp, #192]
    34b0:	add	x1, sp, #0xd0
    34b4:	cmp	x0, x1
    34b8:	b.eq	34c0 <_ZN4llvm7remarks21BitstreamRemarkParser11parseRemarkEv+0x78>  // b.none
    34bc:	bl	0 <free>
    34c0:	mov	x0, x19
    34c4:	ldp	x19, x20, [sp, #16]
    34c8:	ldr	x21, [sp, #32]
    34cc:	ldp	x29, x30, [sp]
    34d0:	add	sp, sp, #0x2d0
    34d4:	ret
    34d8:	tbnz	w1, #0, 34f0 <_ZN4llvm7remarks21BitstreamRemarkParser11parseRemarkEv+0xa8>
    34dc:	mov	x8, x19
    34e0:	add	x1, sp, #0x38
    34e4:	mov	x0, x21
    34e8:	bl	26bc <_ZN4llvm7remarks21BitstreamRemarkParser13processRemarkERNS0_27BitstreamRemarkParserHelperE>
    34ec:	b	34ac <_ZN4llvm7remarks21BitstreamRemarkParser11parseRemarkEv+0x64>
    34f0:	add	x0, sp, #0x30
    34f4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000034f8 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv>:
    34f8:	stp	x29, x30, [sp, #-144]!
    34fc:	mov	x29, sp
    3500:	stp	x19, x20, [sp, #16]
    3504:	mov	x19, x8
    3508:	mov	x20, x0
    350c:	add	x8, sp, #0x80
    3510:	mov	w1, #0x0                   	// #0
    3514:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3518:	ldrb	w1, [sp, #136]
    351c:	and	w2, w1, #0x1
    3520:	bfi	w1, w2, #1, #1
    3524:	strb	w1, [sp, #136]
    3528:	cbz	w2, 3560 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x68>
    352c:	and	x0, x1, #0xff
    3530:	and	w0, w0, #0xfffffffd
    3534:	strb	w0, [sp, #136]
    3538:	ldr	x0, [sp, #128]
    353c:	str	xzr, [sp, #128]
    3540:	orr	x0, x0, #0x1
    3544:	str	x0, [x19]
    3548:	ldr	x0, [sp, #128]
    354c:	cbz	x0, 35a0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0xa8>
    3550:	ldr	x1, [x0]
    3554:	ldr	x1, [x1, #8]
    3558:	blr	x1
    355c:	b	35a0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0xa8>
    3560:	ldr	w0, [sp, #128]
    3564:	cmp	w0, #0x2
    3568:	b.ne	3574 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x7c>  // b.any
    356c:	ldr	w0, [sp, #132]
    3570:	cbz	w0, 35b0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0xb8>
    3574:	bl	0 <_ZNSt3_V216generic_categoryEv>
    3578:	mov	x1, x0
    357c:	mov	x8, x19
    3580:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3584:	add	x2, x2, #0x0
    3588:	mov	x0, #0x54                  	// #84
    358c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    3590:	ldrb	w0, [sp, #136]
    3594:	tbnz	w0, #1, 37f0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x2f8>
    3598:	ldrb	w0, [sp, #136]
    359c:	tbnz	w0, #0, 3548 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x50>
    35a0:	mov	x0, x19
    35a4:	ldp	x19, x20, [sp, #16]
    35a8:	ldp	x29, x30, [sp], #144
    35ac:	ret
    35b0:	add	x8, sp, #0x58
    35b4:	mov	w1, #0x0                   	// #0
    35b8:	mov	x0, x20
    35bc:	bl	0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb>
    35c0:	ldrb	w0, [sp, #120]
    35c4:	and	w1, w0, #0x1
    35c8:	bfi	w0, w1, #1, #1
    35cc:	strb	w0, [sp, #120]
    35d0:	cbz	w1, 3608 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x110>
    35d4:	and	x0, x0, #0xff
    35d8:	and	w0, w0, #0xfffffffd
    35dc:	strb	w0, [sp, #120]
    35e0:	ldr	x0, [sp, #88]
    35e4:	str	xzr, [sp, #88]
    35e8:	orr	x0, x0, #0x1
    35ec:	str	x0, [x19]
    35f0:	ldr	x0, [sp, #88]
    35f4:	cbz	x0, 3590 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x98>
    35f8:	ldr	x1, [x0]
    35fc:	ldr	x1, [x1, #8]
    3600:	blr	x1
    3604:	b	3590 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x98>
    3608:	ldrb	w0, [sp, #112]
    360c:	cbnz	w0, 3670 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x178>
    3610:	bl	0 <_ZNSt3_V216generic_categoryEv>
    3614:	mov	x1, x0
    3618:	mov	x8, x19
    361c:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3620:	add	x2, x2, #0x0
    3624:	mov	x0, #0x54                  	// #84
    3628:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    362c:	ldrb	w0, [sp, #120]
    3630:	tbnz	w0, #1, 3698 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1a0>
    3634:	ldrb	w0, [sp, #120]
    3638:	tbnz	w0, #0, 35f0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0xf8>
    363c:	ldrb	w0, [sp, #112]
    3640:	cbz	w0, 3590 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x98>
    3644:	stp	x21, x22, [sp, #32]
    3648:	stp	x25, x26, [sp, #64]
    364c:	ldr	x22, [sp, #88]
    3650:	ldr	x25, [sp, #96]
    3654:	cmp	x22, x25
    3658:	b.eq	37cc <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x2d4>  // b.none
    365c:	stp	x23, x24, [sp, #48]
    3660:	adrp	x24, 0 <__pthread_key_create>
    3664:	ldr	x23, [x24]
    3668:	mov	x24, x23
    366c:	b	3784 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x28c>
    3670:	stp	x21, x22, [sp, #32]
    3674:	add	x21, x20, #0x158
    3678:	add	x1, sp, #0x58
    367c:	mov	x0, x21
    3680:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3684:	str	x21, [x20, #336]
    3688:	mov	x0, #0x1                   	// #1
    368c:	str	x0, [x19]
    3690:	ldp	x21, x22, [sp, #32]
    3694:	b	362c <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x134>
    3698:	stp	x21, x22, [sp, #32]
    369c:	stp	x23, x24, [sp, #48]
    36a0:	stp	x25, x26, [sp, #64]
    36a4:	add	x0, sp, #0x58
    36a8:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    36ac:	add	x20, x20, #0x28
    36b0:	cmp	x21, x20
    36b4:	b.eq	3794 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x29c>  // b.none
    36b8:	ldr	x0, [x20, #8]
    36bc:	add	x1, x20, #0x18
    36c0:	cmp	x0, x1
    36c4:	b.eq	36ac <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1b4>  // b.none
    36c8:	bl	0 <_ZdlPv>
    36cc:	b	36ac <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1b4>
    36d0:	ldaxr	w0, [x1]
    36d4:	sub	w2, w0, #0x1
    36d8:	stlxr	w3, w2, [x1]
    36dc:	cbnz	w3, 36d0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1d8>
    36e0:	cmp	w0, #0x1
    36e4:	b.eq	3718 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x220>  // b.none
    36e8:	add	x20, x20, #0x10
    36ec:	cmp	x26, x20
    36f0:	b.eq	376c <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x274>  // b.none
    36f4:	ldr	x21, [x20, #8]
    36f8:	cbz	x21, 36e8 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1f0>
    36fc:	cbz	x23, 3708 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x210>
    3700:	add	x1, x21, #0x8
    3704:	b	36d0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1d8>
    3708:	ldr	w0, [x21, #8]
    370c:	sub	w1, w0, #0x1
    3710:	str	w1, [x21, #8]
    3714:	b	36e0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1e8>
    3718:	ldr	x0, [x21]
    371c:	ldr	x1, [x0, #16]
    3720:	mov	x0, x21
    3724:	blr	x1
    3728:	cbz	x24, 375c <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x264>
    372c:	add	x1, x21, #0xc
    3730:	ldaxr	w0, [x1]
    3734:	sub	w2, w0, #0x1
    3738:	stlxr	w3, w2, [x1]
    373c:	cbnz	w3, 3730 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x238>
    3740:	cmp	w0, #0x1
    3744:	b.ne	36e8 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1f0>  // b.any
    3748:	ldr	x0, [x21]
    374c:	ldr	x1, [x0, #24]
    3750:	mov	x0, x21
    3754:	blr	x1
    3758:	b	36e8 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1f0>
    375c:	ldr	w0, [x21, #12]
    3760:	sub	w1, w0, #0x1
    3764:	str	w1, [x21, #12]
    3768:	b	3740 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x248>
    376c:	ldr	x0, [x22, #8]
    3770:	cbz	x0, 3778 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x280>
    3774:	bl	0 <_ZdlPv>
    3778:	add	x22, x22, #0x58
    377c:	cmp	x25, x22
    3780:	b.eq	37c8 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x2d0>  // b.none
    3784:	ldr	x20, [x22, #64]
    3788:	ldr	x21, [x22, #72]
    378c:	cmp	x20, x21
    3790:	b.ne	36b8 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1c0>  // b.any
    3794:	ldr	x0, [x22, #64]
    3798:	cbz	x0, 37a0 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x2a8>
    379c:	bl	0 <_ZdlPv>
    37a0:	ldr	x0, [x22, #32]
    37a4:	add	x1, x22, #0x30
    37a8:	cmp	x0, x1
    37ac:	b.eq	37b4 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x2bc>  // b.none
    37b0:	bl	0 <_ZdlPv>
    37b4:	ldr	x20, [x22, #8]
    37b8:	ldr	x26, [x22, #16]
    37bc:	cmp	x20, x26
    37c0:	b.ne	36f4 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x1fc>  // b.any
    37c4:	b	376c <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x274>
    37c8:	ldp	x23, x24, [sp, #48]
    37cc:	ldr	x0, [sp, #88]
    37d0:	cbz	x0, 37e4 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x2ec>
    37d4:	bl	0 <_ZdlPv>
    37d8:	ldp	x21, x22, [sp, #32]
    37dc:	ldp	x25, x26, [sp, #64]
    37e0:	b	3590 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x98>
    37e4:	ldp	x21, x22, [sp, #32]
    37e8:	ldp	x25, x26, [sp, #64]
    37ec:	b	3590 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv+0x98>
    37f0:	stp	x21, x22, [sp, #32]
    37f4:	stp	x23, x24, [sp, #48]
    37f8:	stp	x25, x26, [sp, #64]
    37fc:	add	x0, sp, #0x80
    3800:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>

0000000000003804 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE>:
    3804:	stp	x29, x30, [sp, #-80]!
    3808:	mov	x29, sp
    380c:	stp	x19, x20, [sp, #16]
    3810:	mov	x19, x8
    3814:	mov	x20, x0
    3818:	add	x8, sp, #0x40
    381c:	bl	640 <_ZN4llvm7remarks21BitstreamParserHelper10parseMagicEv>
    3820:	ldrb	w1, [sp, #72]
    3824:	and	w2, w1, #0x1
    3828:	bfi	w1, w2, #1, #1
    382c:	strb	w1, [sp, #72]
    3830:	cbz	w2, 3868 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x64>
    3834:	and	x0, x1, #0xff
    3838:	and	w0, w0, #0xfffffffd
    383c:	strb	w0, [sp, #72]
    3840:	ldr	x0, [sp, #64]
    3844:	str	xzr, [sp, #64]
    3848:	orr	x0, x0, #0x1
    384c:	str	x0, [x19]
    3850:	ldr	x0, [sp, #64]
    3854:	cbz	x0, 38ac <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0xa8>
    3858:	ldr	x1, [x0]
    385c:	ldr	x1, [x1, #8]
    3860:	blr	x1
    3864:	b	38ac <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0xa8>
    3868:	add	x8, sp, #0x28
    386c:	add	x0, sp, #0x40
    3870:	mov	x1, #0x4                   	// #4
    3874:	bl	52c <_ZL19validateMagicNumberN4llvm9StringRefE>
    3878:	ldr	x1, [sp, #40]
    387c:	ands	x2, x1, #0xfffffffffffffffe
    3880:	cset	x1, ne  // ne = any
    3884:	orr	x1, x1, x2
    3888:	str	x1, [sp, #40]
    388c:	ands	x0, x1, #0xfffffffffffffffe
    3890:	b.eq	38bc <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0xb8>  // b.none
    3894:	orr	x0, x0, #0x1
    3898:	str	x0, [x19]
    389c:	ldrb	w0, [sp, #72]
    38a0:	tbnz	w0, #1, 39a8 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x1a4>
    38a4:	ldrb	w0, [sp, #72]
    38a8:	tbnz	w0, #0, 3850 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x4c>
    38ac:	mov	x0, x19
    38b0:	ldp	x19, x20, [sp, #16]
    38b4:	ldp	x29, x30, [sp], #80
    38b8:	ret
    38bc:	tbnz	w1, #0, 38f4 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0xf0>
    38c0:	add	x8, sp, #0x28
    38c4:	mov	x0, x20
    38c8:	bl	34f8 <_ZN4llvm7remarks21BitstreamParserHelper19parseBlockInfoBlockEv>
    38cc:	ldr	x0, [sp, #40]
    38d0:	ands	x1, x0, #0xfffffffffffffffe
    38d4:	cset	x0, ne  // ne = any
    38d8:	orr	x0, x0, x1
    38dc:	str	x0, [sp, #40]
    38e0:	ands	x1, x0, #0xfffffffffffffffe
    38e4:	b.eq	38fc <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0xf8>  // b.none
    38e8:	orr	x1, x1, #0x1
    38ec:	str	x1, [x19]
    38f0:	b	389c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x98>
    38f4:	add	x0, sp, #0x28
    38f8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    38fc:	tbnz	w0, #0, 3954 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x150>
    3900:	add	x8, sp, #0x30
    3904:	mov	x0, x20
    3908:	bl	c08 <_ZN4llvm7remarks21BitstreamParserHelper11isMetaBlockEv>
    390c:	ldrb	w0, [sp, #56]
    3910:	and	w1, w0, #0x1
    3914:	bfi	w0, w1, #1, #1
    3918:	strb	w0, [sp, #56]
    391c:	cbz	w1, 395c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x158>
    3920:	and	x0, x0, #0xff
    3924:	and	w0, w0, #0xfffffffd
    3928:	strb	w0, [sp, #56]
    392c:	ldr	x0, [sp, #48]
    3930:	str	xzr, [sp, #48]
    3934:	orr	x0, x0, #0x1
    3938:	str	x0, [x19]
    393c:	ldr	x0, [sp, #48]
    3940:	cbz	x0, 389c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x98>
    3944:	ldr	x1, [x0]
    3948:	ldr	x1, [x1, #8]
    394c:	blr	x1
    3950:	b	389c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x98>
    3954:	add	x0, sp, #0x28
    3958:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    395c:	ldrb	w0, [sp, #48]
    3960:	cbnz	w0, 3990 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x18c>
    3964:	bl	0 <_ZNSt3_V216generic_categoryEv>
    3968:	mov	x1, x0
    396c:	mov	x8, x19
    3970:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3974:	add	x2, x2, #0x0
    3978:	mov	x0, #0x54                  	// #84
    397c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    3980:	ldrb	w0, [sp, #56]
    3984:	tbz	w0, #1, 399c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x198>
    3988:	add	x0, sp, #0x30
    398c:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3990:	mov	x0, #0x1                   	// #1
    3994:	str	x0, [x19]
    3998:	b	389c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x98>
    399c:	ldrb	w0, [sp, #56]
    39a0:	tbz	w0, #0, 389c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x98>
    39a4:	b	393c <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE+0x138>
    39a8:	add	x0, sp, #0x40
    39ac:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>

00000000000039b0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE>:
    39b0:	sub	sp, sp, #0x3c0
    39b4:	stp	x29, x30, [sp]
    39b8:	mov	x29, sp
    39bc:	stp	x21, x22, [sp, #32]
    39c0:	stp	x23, x24, [sp, #48]
    39c4:	mov	x23, x8
    39c8:	mov	x21, x0
    39cc:	ldrb	w0, [x1, #16]
    39d0:	cbnz	w0, 3a08 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x58>
    39d4:	bl	0 <_ZNSt3_V216generic_categoryEv>
    39d8:	mov	x1, x0
    39dc:	mov	x8, x23
    39e0:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    39e4:	add	x2, x2, #0x0
    39e8:	mov	x0, #0x54                  	// #84
    39ec:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    39f0:	mov	x0, x23
    39f4:	ldp	x21, x22, [sp, #32]
    39f8:	ldp	x23, x24, [sp, #48]
    39fc:	ldp	x29, x30, [sp]
    3a00:	add	sp, sp, #0x3c0
    3a04:	ret
    3a08:	stp	x19, x20, [sp, #16]
    3a0c:	mov	x19, x1
    3a10:	ldr	x22, [x21, #16]
    3a14:	ldr	x20, [x21, #24]
    3a18:	add	x0, sp, #0x2c0
    3a1c:	str	x0, [sp, #688]
    3a20:	str	wzr, [sp, #696]
    3a24:	mov	w0, #0x50                  	// #80
    3a28:	str	w0, [sp, #700]
    3a2c:	cmp	x20, #0x50
    3a30:	b.hi	3a40 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x90>  // b.pmore
    3a34:	cbz	x20, 3a80 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xd0>
    3a38:	add	x0, sp, #0x2c0
    3a3c:	b	3a60 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xb0>
    3a40:	add	x0, sp, #0x2b0
    3a44:	mov	x3, #0x1                   	// #1
    3a48:	mov	x2, x20
    3a4c:	add	x1, x0, #0x10
    3a50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3a54:	ldr	w1, [sp, #696]
    3a58:	ldr	x0, [sp, #688]
    3a5c:	add	x0, x0, x1
    3a60:	mov	x2, x20
    3a64:	mov	x1, x22
    3a68:	bl	0 <memcpy>
    3a6c:	ldr	w0, [sp, #696]
    3a70:	add	x20, x20, x0
    3a74:	ldr	w0, [sp, #700]
    3a78:	cmp	x20, x0
    3a7c:	b.hi	3c08 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x258>  // b.pmore
    3a80:	str	w20, [sp, #696]
    3a84:	ldrb	w0, [x19, #16]
    3a88:	cbz	w0, 3c30 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x280>
    3a8c:	str	xzr, [sp, #792]
    3a90:	mov	w0, #0x5                   	// #5
    3a94:	strb	w0, [sp, #800]
    3a98:	mov	w20, #0x1                   	// #1
    3a9c:	strb	w20, [sp, #801]
    3aa0:	str	x19, [sp, #784]
    3aa4:	str	xzr, [sp, #808]
    3aa8:	str	xzr, [sp, #816]
    3aac:	strb	w20, [sp, #824]
    3ab0:	strb	w20, [sp, #825]
    3ab4:	str	xzr, [sp, #832]
    3ab8:	str	xzr, [sp, #840]
    3abc:	strb	w20, [sp, #848]
    3ac0:	strb	w20, [sp, #849]
    3ac4:	str	xzr, [sp, #856]
    3ac8:	str	xzr, [sp, #864]
    3acc:	strb	w20, [sp, #872]
    3ad0:	strb	w20, [sp, #873]
    3ad4:	add	x19, sp, #0x2b0
    3ad8:	add	x4, sp, #0x358
    3adc:	add	x3, sp, #0x340
    3ae0:	add	x2, sp, #0x328
    3ae4:	add	x1, sp, #0x310
    3ae8:	mov	x0, x19
    3aec:	bl	0 <_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_>
    3af0:	str	xzr, [sp, #888]
    3af4:	mov	w0, #0x6                   	// #6
    3af8:	strb	w0, [sp, #896]
    3afc:	strb	w20, [sp, #897]
    3b00:	str	x19, [sp, #880]
    3b04:	add	x8, sp, #0x298
    3b08:	mov	w3, #0x0                   	// #0
    3b0c:	mov	w2, w20
    3b10:	mov	x1, #0xffffffffffffffff    	// #-1
    3b14:	add	x0, sp, #0x370
    3b18:	bl	0 <_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb>
    3b1c:	ldrb	w0, [sp, #680]
    3b20:	tbz	w0, #0, 3c80 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x2d0>
    3b24:	ldr	w0, [sp, #664]
    3b28:	cbz	w0, 3c58 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x2a8>
    3b2c:	str	xzr, [sp, #912]
    3b30:	mov	w1, #0x6                   	// #6
    3b34:	strb	w1, [sp, #920]
    3b38:	mov	w1, #0x1                   	// #1
    3b3c:	strb	w1, [sp, #921]
    3b40:	add	x1, sp, #0x2b0
    3b44:	str	x1, [sp, #904]
    3b48:	add	x8, sp, #0x3a0
    3b4c:	mov	w0, w0
    3b50:	ldr	x1, [sp, #672]
    3b54:	bl	0 <_ZN4llvm16errorCodeToErrorESt10error_code>
    3b58:	ldr	x0, [sp, #928]
    3b5c:	orr	x0, x0, #0x1
    3b60:	str	xzr, [sp, #928]
    3b64:	str	xzr, [sp, #160]
    3b68:	str	x0, [sp, #952]
    3b6c:	str	xzr, [sp, #936]
    3b70:	add	x0, sp, #0xa0
    3b74:	str	x0, [sp, #944]
    3b78:	add	x1, sp, #0x3b0
    3b7c:	add	x0, sp, #0x3b8
    3b80:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3b84:	ldr	x0, [sp, #952]
    3b88:	cbnz	x0, 3d34 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x384>
    3b8c:	ldr	x21, [sp, #160]
    3b90:	str	xzr, [sp, #160]
    3b94:	mov	x0, #0x40                  	// #64
    3b98:	bl	0 <_Znwm>
    3b9c:	mov	x19, x0
    3ba0:	mov	x1, x0
    3ba4:	adrp	x0, 0 <_ZTVN4llvm9FileErrorE>
    3ba8:	ldr	x0, [x0]
    3bac:	add	x0, x0, #0x10
    3bb0:	str	x0, [x1], #8
    3bb4:	add	x20, x19, #0x18
    3bb8:	str	x20, [x19, #8]
    3bbc:	str	xzr, [x1, #8]
    3bc0:	strb	wzr, [x19, #24]
    3bc4:	strb	wzr, [x19, #40]
    3bc8:	strb	wzr, [x19, #48]
    3bcc:	str	xzr, [x19, #56]
    3bd0:	cbz	x21, 3d44 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x394>
    3bd4:	ldrb	w0, [sp, #920]
    3bd8:	cmp	w0, #0x1
    3bdc:	b.hi	3d6c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x3bc>  // b.pmore
    3be0:	stp	x25, x26, [sp, #64]
    3be4:	stp	x27, x28, [sp, #80]
    3be8:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3bec:	add	x3, x3, #0x0
    3bf0:	mov	w2, #0x4e0                 	// #1248
    3bf4:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3bf8:	add	x1, x1, #0x0
    3bfc:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c00:	add	x0, x0, #0x0
    3c04:	bl	0 <__assert_fail>
    3c08:	stp	x25, x26, [sp, #64]
    3c0c:	stp	x27, x28, [sp, #80]
    3c10:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c14:	add	x3, x3, #0x0
    3c18:	mov	w2, #0x43                  	// #67
    3c1c:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c20:	add	x1, x1, #0x0
    3c24:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c28:	add	x0, x0, #0x0
    3c2c:	bl	0 <__assert_fail>
    3c30:	stp	x25, x26, [sp, #64]
    3c34:	stp	x27, x28, [sp, #80]
    3c38:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c3c:	add	x3, x3, #0x0
    3c40:	mov	w2, #0xad                  	// #173
    3c44:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c48:	add	x1, x1, #0x0
    3c4c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c50:	add	x0, x0, #0x0
    3c54:	bl	0 <__assert_fail>
    3c58:	stp	x25, x26, [sp, #64]
    3c5c:	stp	x27, x28, [sp, #80]
    3c60:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c64:	add	x3, x3, #0x0
    3c68:	mov	w2, #0xf3                  	// #243
    3c6c:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c70:	add	x1, x1, #0x0
    3c74:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3c78:	add	x0, x0, #0x0
    3c7c:	bl	0 <__assert_fail>
    3c80:	ldr	x1, [sp, #664]
    3c84:	str	xzr, [sp, #664]
    3c88:	ldr	x0, [x21, #464]
    3c8c:	str	x1, [x21, #464]
    3c90:	cbz	x0, 3ca0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x2f0>
    3c94:	ldr	x1, [x0]
    3c98:	ldr	x1, [x1, #8]
    3c9c:	blr	x1
    3ca0:	ldr	x0, [x21, #464]
    3ca4:	ldr	x2, [x0, #16]
    3ca8:	ldr	x1, [x0, #8]
    3cac:	cmp	x2, x1
    3cb0:	b.eq	3e80 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4d0>  // b.none
    3cb4:	stp	x25, x26, [sp, #64]
    3cb8:	stp	x27, x28, [sp, #80]
    3cbc:	sub	x2, x2, x1
    3cc0:	add	x0, sp, #0xc0
    3cc4:	bl	184 <_ZN4llvm7remarks21BitstreamParserHelperC1ENS_9StringRefE>
    3cc8:	add	x27, x21, #0x30
    3ccc:	ldp	x0, x1, [sp, #192]
    3cd0:	stp	x0, x1, [x21, #48]
    3cd4:	ldp	x0, x1, [sp, #208]
    3cd8:	stp	x0, x1, [x27, #16]
    3cdc:	ldr	w0, [sp, #224]
    3ce0:	str	w0, [x27, #32]
    3ce4:	ldr	w0, [sp, #228]
    3ce8:	str	w0, [x27, #36]
    3cec:	ldr	x26, [x21, #88]
    3cf0:	ldr	x22, [x21, #96]
    3cf4:	ldr	x1, [sp, #232]
    3cf8:	str	x1, [x21, #88]
    3cfc:	ldr	x1, [sp, #240]
    3d00:	str	x1, [x21, #96]
    3d04:	ldr	x1, [sp, #248]
    3d08:	str	x1, [x21, #104]
    3d0c:	str	xzr, [sp, #232]
    3d10:	str	xzr, [sp, #240]
    3d14:	str	xzr, [sp, #248]
    3d18:	cmp	x26, x22
    3d1c:	b.eq	3f24 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x574>  // b.none
    3d20:	mov	x20, x26
    3d24:	adrp	x25, 0 <__pthread_key_create>
    3d28:	ldr	x24, [x25]
    3d2c:	mov	x25, x24
    3d30:	b	3eb4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x504>
    3d34:	stp	x25, x26, [sp, #64]
    3d38:	stp	x27, x28, [sp, #80]
    3d3c:	add	x0, sp, #0x3b8
    3d40:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3d44:	stp	x25, x26, [sp, #64]
    3d48:	stp	x27, x28, [sp, #80]
    3d4c:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3d50:	add	x3, x3, #0x0
    3d54:	mov	w2, #0x4df                 	// #1247
    3d58:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3d5c:	add	x1, x1, #0x0
    3d60:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3d64:	add	x0, x0, #0x0
    3d68:	bl	0 <__assert_fail>
    3d6c:	add	x22, sp, #0xc0
    3d70:	mov	x8, x22
    3d74:	add	x0, sp, #0x388
    3d78:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    3d7c:	ldr	x0, [x19, #8]
    3d80:	ldr	x1, [sp, #192]
    3d84:	add	x22, x22, #0x10
    3d88:	cmp	x1, x22
    3d8c:	b.eq	3e38 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x488>  // b.none
    3d90:	cmp	x20, x0
    3d94:	b.eq	4618 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xc68>  // b.none
    3d98:	ldr	x3, [x19, #24]
    3d9c:	str	x1, [x19, #8]
    3da0:	ldr	x1, [sp, #200]
    3da4:	str	x1, [x19, #16]
    3da8:	ldr	x1, [sp, #208]
    3dac:	str	x1, [x19, #24]
    3db0:	cbz	x0, 462c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xc7c>
    3db4:	str	x0, [sp, #192]
    3db8:	str	x3, [sp, #208]
    3dbc:	str	xzr, [sp, #200]
    3dc0:	ldr	x0, [sp, #192]
    3dc4:	strb	wzr, [x0]
    3dc8:	ldr	x0, [sp, #192]
    3dcc:	add	x1, sp, #0xd0
    3dd0:	cmp	x0, x1
    3dd4:	b.eq	3ddc <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x42c>  // b.none
    3dd8:	bl	0 <_ZdlPv>
    3ddc:	ldr	x0, [x19, #56]
    3de0:	str	x21, [x19, #56]
    3de4:	cbz	x0, 3df4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x444>
    3de8:	ldr	x1, [x0]
    3dec:	ldr	x1, [x1, #8]
    3df0:	blr	x1
    3df4:	strb	wzr, [x19, #40]
    3df8:	strb	wzr, [x19, #48]
    3dfc:	orr	x19, x19, #0x1
    3e00:	str	x19, [x23]
    3e04:	ldr	x0, [sp, #160]
    3e08:	cbz	x0, 3e18 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x468>
    3e0c:	ldr	x1, [x0]
    3e10:	ldr	x1, [x1, #8]
    3e14:	blr	x1
    3e18:	ldr	x0, [sp, #936]
    3e1c:	cbnz	x0, 3e70 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4c0>
    3e20:	ldr	x0, [sp, #928]
    3e24:	cbz	x0, 43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    3e28:	stp	x25, x26, [sp, #64]
    3e2c:	stp	x27, x28, [sp, #80]
    3e30:	add	x0, sp, #0x3a0
    3e34:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3e38:	ldr	x2, [sp, #200]
    3e3c:	cbz	x2, 3e50 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4a0>
    3e40:	cmp	x2, #0x1
    3e44:	b.eq	3e64 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4b4>  // b.none
    3e48:	add	x1, sp, #0xd0
    3e4c:	bl	0 <memcpy>
    3e50:	ldr	x0, [sp, #200]
    3e54:	str	x0, [x19, #16]
    3e58:	ldr	x1, [x19, #8]
    3e5c:	strb	wzr, [x1, x0]
    3e60:	b	3dbc <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x40c>
    3e64:	ldrb	w1, [sp, #208]
    3e68:	strb	w1, [x0]
    3e6c:	b	3e50 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4a0>
    3e70:	stp	x25, x26, [sp, #64]
    3e74:	stp	x27, x28, [sp, #80]
    3e78:	add	x0, sp, #0x3a8
    3e7c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3e80:	mov	x8, x23
    3e84:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3e88:	b	43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    3e8c:	add	x1, x19, #0x8
    3e90:	ldaxr	w0, [x1]
    3e94:	sub	w2, w0, #0x1
    3e98:	stlxr	w3, w2, [x1]
    3e9c:	cbnz	w3, 3e90 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4e0>
    3ea0:	cmp	w0, #0x1
    3ea4:	b.eq	3ed0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x520>  // b.none
    3ea8:	add	x20, x20, #0x10
    3eac:	cmp	x22, x20
    3eb0:	b.eq	3f24 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x574>  // b.none
    3eb4:	ldr	x19, [x20, #8]
    3eb8:	cbz	x19, 3ea8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4f8>
    3ebc:	cbnz	x24, 3e8c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4dc>
    3ec0:	ldr	w0, [x19, #8]
    3ec4:	sub	w1, w0, #0x1
    3ec8:	str	w1, [x19, #8]
    3ecc:	b	3ea0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4f0>
    3ed0:	ldr	x0, [x19]
    3ed4:	ldr	x1, [x0, #16]
    3ed8:	mov	x0, x19
    3edc:	blr	x1
    3ee0:	cbz	x25, 3f14 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x564>
    3ee4:	add	x1, x19, #0xc
    3ee8:	ldaxr	w0, [x1]
    3eec:	sub	w2, w0, #0x1
    3ef0:	stlxr	w3, w2, [x1]
    3ef4:	cbnz	w3, 3ee8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x538>
    3ef8:	cmp	w0, #0x1
    3efc:	b.ne	3ea8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4f8>  // b.any
    3f00:	ldr	x0, [x19]
    3f04:	ldr	x1, [x0, #24]
    3f08:	mov	x0, x19
    3f0c:	blr	x1
    3f10:	b	3ea8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x4f8>
    3f14:	ldr	w0, [x19, #12]
    3f18:	sub	w1, w0, #0x1
    3f1c:	str	w1, [x19, #12]
    3f20:	b	3ef8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x548>
    3f24:	cbz	x26, 3f30 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x580>
    3f28:	mov	x0, x26
    3f2c:	bl	0 <_ZdlPv>
    3f30:	add	x1, sp, #0x100
    3f34:	add	x0, x21, #0x70
    3f38:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    3f3c:	ldr	x0, [sp, #528]
    3f40:	str	x0, [x21, #384]
    3f44:	ldr	x2, [x21, #392]
    3f48:	str	x2, [sp, #104]
    3f4c:	ldr	x26, [x21, #400]
    3f50:	ldr	x1, [sp, #536]
    3f54:	str	x1, [x21, #392]
    3f58:	ldr	x1, [sp, #544]
    3f5c:	str	x1, [x21, #400]
    3f60:	ldr	x1, [sp, #552]
    3f64:	str	x1, [x21, #408]
    3f68:	str	xzr, [sp, #536]
    3f6c:	str	xzr, [sp, #544]
    3f70:	str	xzr, [sp, #552]
    3f74:	cmp	x2, x26
    3f78:	b.eq	40a8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x6f8>  // b.none
    3f7c:	mov	x20, x2
    3f80:	adrp	x25, 0 <__pthread_key_create>
    3f84:	ldr	x28, [x25]
    3f88:	mov	x25, x28
    3f8c:	b	3ffc <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x64c>
    3f90:	bl	0 <_ZdlPv>
    3f94:	add	x19, x19, #0x28
    3f98:	cmp	x22, x19
    3f9c:	b.eq	3fb4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x604>  // b.none
    3fa0:	ldr	x0, [x19, #8]
    3fa4:	add	x1, x19, #0x18
    3fa8:	cmp	x0, x1
    3fac:	b.ne	3f90 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x5e0>  // b.any
    3fb0:	b	3f94 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x5e4>
    3fb4:	ldr	x0, [x20, #64]
    3fb8:	cbz	x0, 3fc0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x610>
    3fbc:	bl	0 <_ZdlPv>
    3fc0:	ldr	x0, [x20, #32]
    3fc4:	add	x1, x20, #0x30
    3fc8:	cmp	x0, x1
    3fcc:	b.eq	3fd4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x624>  // b.none
    3fd0:	bl	0 <_ZdlPv>
    3fd4:	ldr	x22, [x20, #8]
    3fd8:	ldr	x24, [x20, #16]
    3fdc:	cmp	x22, x24
    3fe0:	b.ne	4038 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x688>  // b.any
    3fe4:	ldr	x0, [x20, #8]
    3fe8:	cbz	x0, 3ff0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x640>
    3fec:	bl	0 <_ZdlPv>
    3ff0:	add	x20, x20, #0x58
    3ff4:	cmp	x26, x20
    3ff8:	b.eq	40a8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x6f8>  // b.none
    3ffc:	ldr	x19, [x20, #64]
    4000:	ldr	x22, [x20, #72]
    4004:	cmp	x19, x22
    4008:	b.ne	3fa0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x5f0>  // b.any
    400c:	b	3fb4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x604>
    4010:	add	x1, x19, #0x8
    4014:	ldaxr	w0, [x1]
    4018:	sub	w2, w0, #0x1
    401c:	stlxr	w3, w2, [x1]
    4020:	cbnz	w3, 4014 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x664>
    4024:	cmp	w0, #0x1
    4028:	b.eq	4054 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x6a4>  // b.none
    402c:	add	x22, x22, #0x10
    4030:	cmp	x24, x22
    4034:	b.eq	3fe4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x634>  // b.none
    4038:	ldr	x19, [x22, #8]
    403c:	cbz	x19, 402c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x67c>
    4040:	cbnz	x28, 4010 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x660>
    4044:	ldr	w0, [x19, #8]
    4048:	sub	w1, w0, #0x1
    404c:	str	w1, [x19, #8]
    4050:	b	4024 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x674>
    4054:	ldr	x0, [x19]
    4058:	ldr	x1, [x0, #16]
    405c:	mov	x0, x19
    4060:	blr	x1
    4064:	cbz	x25, 4098 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x6e8>
    4068:	add	x1, x19, #0xc
    406c:	ldaxr	w0, [x1]
    4070:	sub	w2, w0, #0x1
    4074:	stlxr	w3, w2, [x1]
    4078:	cbnz	w3, 406c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x6bc>
    407c:	cmp	w0, #0x1
    4080:	b.ne	402c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x67c>  // b.any
    4084:	ldr	x0, [x19]
    4088:	ldr	x1, [x0, #24]
    408c:	mov	x0, x19
    4090:	blr	x1
    4094:	b	402c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x67c>
    4098:	ldr	w0, [x19, #12]
    409c:	sub	w1, w0, #0x1
    40a0:	str	w1, [x19, #12]
    40a4:	b	407c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x6cc>
    40a8:	ldr	x0, [sp, #104]
    40ac:	cbz	x0, 40b4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x704>
    40b0:	bl	0 <_ZdlPv>
    40b4:	ldr	x20, [sp, #536]
    40b8:	ldr	x25, [sp, #544]
    40bc:	cmp	x20, x25
    40c0:	b.eq	41ec <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x83c>  // b.none
    40c4:	adrp	x24, 0 <__pthread_key_create>
    40c8:	ldr	x26, [x24]
    40cc:	mov	x24, x26
    40d0:	b	41a8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x7f8>
    40d4:	bl	0 <_ZdlPv>
    40d8:	add	x19, x19, #0x28
    40dc:	cmp	x22, x19
    40e0:	b.eq	41b8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x808>  // b.none
    40e4:	ldr	x0, [x19, #8]
    40e8:	add	x1, x19, #0x18
    40ec:	cmp	x0, x1
    40f0:	b.ne	40d4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x724>  // b.any
    40f4:	b	40d8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x728>
    40f8:	add	x1, x19, #0x8
    40fc:	ldaxr	w0, [x1]
    4100:	sub	w2, w0, #0x1
    4104:	stlxr	w3, w2, [x1]
    4108:	cbnz	w3, 40fc <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x74c>
    410c:	cmp	w0, #0x1
    4110:	b.eq	413c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x78c>  // b.none
    4114:	add	x22, x22, #0x10
    4118:	cmp	x28, x22
    411c:	b.eq	4190 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x7e0>  // b.none
    4120:	ldr	x19, [x22, #8]
    4124:	cbz	x19, 4114 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x764>
    4128:	cbnz	x26, 40f8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x748>
    412c:	ldr	w0, [x19, #8]
    4130:	sub	w1, w0, #0x1
    4134:	str	w1, [x19, #8]
    4138:	b	410c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x75c>
    413c:	ldr	x0, [x19]
    4140:	ldr	x1, [x0, #16]
    4144:	mov	x0, x19
    4148:	blr	x1
    414c:	cbz	x24, 4180 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x7d0>
    4150:	add	x1, x19, #0xc
    4154:	ldaxr	w0, [x1]
    4158:	sub	w2, w0, #0x1
    415c:	stlxr	w3, w2, [x1]
    4160:	cbnz	w3, 4154 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x7a4>
    4164:	cmp	w0, #0x1
    4168:	b.ne	4114 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x764>  // b.any
    416c:	ldr	x0, [x19]
    4170:	ldr	x1, [x0, #24]
    4174:	mov	x0, x19
    4178:	blr	x1
    417c:	b	4114 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x764>
    4180:	ldr	w0, [x19, #12]
    4184:	sub	w1, w0, #0x1
    4188:	str	w1, [x19, #12]
    418c:	b	4164 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x7b4>
    4190:	ldr	x0, [x20, #8]
    4194:	cbz	x0, 419c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x7ec>
    4198:	bl	0 <_ZdlPv>
    419c:	add	x20, x20, #0x58
    41a0:	cmp	x25, x20
    41a4:	b.eq	41ec <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x83c>  // b.none
    41a8:	ldr	x19, [x20, #64]
    41ac:	ldr	x22, [x20, #72]
    41b0:	cmp	x19, x22
    41b4:	b.ne	40e4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x734>  // b.any
    41b8:	ldr	x0, [x20, #64]
    41bc:	cbz	x0, 41c4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x814>
    41c0:	bl	0 <_ZdlPv>
    41c4:	ldr	x0, [x20, #32]
    41c8:	add	x1, x20, #0x30
    41cc:	cmp	x0, x1
    41d0:	b.eq	41d8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x828>  // b.none
    41d4:	bl	0 <_ZdlPv>
    41d8:	ldr	x22, [x20, #8]
    41dc:	ldr	x28, [x20, #16]
    41e0:	cmp	x22, x28
    41e4:	b.ne	4120 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x770>  // b.any
    41e8:	b	4190 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x7e0>
    41ec:	ldr	x0, [sp, #536]
    41f0:	cbz	x0, 41f8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x848>
    41f4:	bl	0 <_ZdlPv>
    41f8:	ldr	x26, [sp, #256]
    41fc:	ldr	w20, [sp, #264]
    4200:	add	x20, x26, x20, lsl #5
    4204:	cmp	x26, x20
    4208:	b.eq	42e0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x930>  // b.none
    420c:	adrp	x25, 0 <__pthread_key_create>
    4210:	ldr	x28, [x25]
    4214:	mov	x25, x28
    4218:	b	42c8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x918>
    421c:	add	x1, x19, #0x8
    4220:	ldaxr	w0, [x1]
    4224:	sub	w2, w0, #0x1
    4228:	stlxr	w3, w2, [x1]
    422c:	cbnz	w3, 4220 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x870>
    4230:	cmp	w0, #0x1
    4234:	b.eq	4260 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x8b0>  // b.none
    4238:	add	x22, x22, #0x10
    423c:	cmp	x24, x22
    4240:	b.eq	42b4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x904>  // b.none
    4244:	ldr	x19, [x22, #8]
    4248:	cbz	x19, 4238 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x888>
    424c:	cbnz	x28, 421c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x86c>
    4250:	ldr	w0, [x19, #8]
    4254:	sub	w1, w0, #0x1
    4258:	str	w1, [x19, #8]
    425c:	b	4230 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x880>
    4260:	ldr	x0, [x19]
    4264:	ldr	x1, [x0, #16]
    4268:	mov	x0, x19
    426c:	blr	x1
    4270:	cbz	x25, 42a4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x8f4>
    4274:	add	x1, x19, #0xc
    4278:	ldaxr	w0, [x1]
    427c:	sub	w2, w0, #0x1
    4280:	stlxr	w3, w2, [x1]
    4284:	cbnz	w3, 4278 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x8c8>
    4288:	cmp	w0, #0x1
    428c:	b.ne	4238 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x888>  // b.any
    4290:	ldr	x0, [x19]
    4294:	ldr	x1, [x0, #24]
    4298:	mov	x0, x19
    429c:	blr	x1
    42a0:	b	4238 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x888>
    42a4:	ldr	w0, [x19, #12]
    42a8:	sub	w1, w0, #0x1
    42ac:	str	w1, [x19, #12]
    42b0:	b	4288 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x8d8>
    42b4:	ldr	x0, [x20, #8]
    42b8:	cbz	x0, 42c0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x910>
    42bc:	bl	0 <_ZdlPv>
    42c0:	cmp	x26, x20
    42c4:	b.eq	42e0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x930>  // b.none
    42c8:	sub	x20, x20, #0x20
    42cc:	ldr	x22, [x20, #8]
    42d0:	ldr	x24, [x20, #16]
    42d4:	cmp	x22, x24
    42d8:	b.ne	4244 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x894>  // b.any
    42dc:	b	42b4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x904>
    42e0:	ldr	x0, [sp, #256]
    42e4:	add	x1, sp, #0x110
    42e8:	cmp	x0, x1
    42ec:	b.eq	42f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x944>  // b.none
    42f0:	bl	0 <free>
    42f4:	ldr	x20, [sp, #232]
    42f8:	ldr	x22, [sp, #240]
    42fc:	cmp	x20, x22
    4300:	b.eq	43b0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa00>  // b.none
    4304:	adrp	x25, 0 <__pthread_key_create>
    4308:	ldr	x24, [x25]
    430c:	mov	x25, x24
    4310:	b	4338 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x988>
    4314:	ldaxr	w0, [x1]
    4318:	sub	w2, w0, #0x1
    431c:	stlxr	w3, w2, [x1]
    4320:	cbnz	w3, 4314 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x964>
    4324:	cmp	w0, #0x1
    4328:	b.eq	435c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x9ac>  // b.none
    432c:	add	x20, x20, #0x10
    4330:	cmp	x22, x20
    4334:	b.eq	43b0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa00>  // b.none
    4338:	ldr	x19, [x20, #8]
    433c:	cbz	x19, 432c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x97c>
    4340:	cbz	x24, 434c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x99c>
    4344:	add	x1, x19, #0x8
    4348:	b	4314 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x964>
    434c:	ldr	w0, [x19, #8]
    4350:	sub	w1, w0, #0x1
    4354:	str	w1, [x19, #8]
    4358:	b	4324 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x974>
    435c:	ldr	x0, [x19]
    4360:	ldr	x1, [x0, #16]
    4364:	mov	x0, x19
    4368:	blr	x1
    436c:	cbz	x25, 43a0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x9f0>
    4370:	add	x1, x19, #0xc
    4374:	ldaxr	w0, [x1]
    4378:	sub	w2, w0, #0x1
    437c:	stlxr	w3, w2, [x1]
    4380:	cbnz	w3, 4374 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x9c4>
    4384:	cmp	w0, #0x1
    4388:	b.ne	432c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x97c>  // b.any
    438c:	ldr	x0, [x19]
    4390:	ldr	x1, [x0, #24]
    4394:	mov	x0, x19
    4398:	blr	x1
    439c:	b	432c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x97c>
    43a0:	ldr	w0, [x19, #12]
    43a4:	sub	w1, w0, #0x1
    43a8:	str	w1, [x19, #12]
    43ac:	b	4384 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x9d4>
    43b0:	ldr	x0, [sp, #232]
    43b4:	cbz	x0, 43bc <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa0c>
    43b8:	bl	0 <_ZdlPv>
    43bc:	add	x8, sp, #0xc0
    43c0:	mov	x0, x27
    43c4:	bl	3804 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE>
    43c8:	ldr	x0, [sp, #192]
    43cc:	ands	x1, x0, #0xfffffffffffffffe
    43d0:	cset	x0, ne  // ne = any
    43d4:	orr	x0, x0, x1
    43d8:	str	x0, [sp, #192]
    43dc:	ands	x1, x0, #0xfffffffffffffffe
    43e0:	b.eq	442c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa7c>  // b.none
    43e4:	orr	x1, x1, #0x1
    43e8:	str	x1, [x23]
    43ec:	ldp	x25, x26, [sp, #64]
    43f0:	ldp	x27, x28, [sp, #80]
    43f4:	ldrb	w0, [sp, #680]
    43f8:	tbnz	w0, #0, 4410 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa60>
    43fc:	ldr	x0, [sp, #664]
    4400:	cbz	x0, 4410 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa60>
    4404:	ldr	x1, [x0]
    4408:	ldr	x1, [x1, #8]
    440c:	blr	x1
    4410:	ldr	x0, [sp, #688]
    4414:	add	x1, sp, #0x2c0
    4418:	cmp	x0, x1
    441c:	b.eq	4638 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xc88>  // b.none
    4420:	bl	0 <free>
    4424:	ldp	x19, x20, [sp, #16]
    4428:	b	39f0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x40>
    442c:	tbnz	w0, #0, 4480 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xad0>
    4430:	add	x19, sp, #0x230
    4434:	add	x2, x21, #0x188
    4438:	mov	x1, x27
    443c:	mov	x0, x19
    4440:	bl	ec <_ZN4llvm7remarks25BitstreamMetaParserHelperC1ERNS_15BitstreamCursorERNS_18BitstreamBlockInfoE>
    4444:	add	x8, sp, #0xc0
    4448:	mov	x0, x19
    444c:	bl	18f0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv>
    4450:	ldr	x0, [sp, #192]
    4454:	ands	x1, x0, #0xfffffffffffffffe
    4458:	cset	x0, ne  // ne = any
    445c:	orr	x0, x0, x1
    4460:	str	x0, [sp, #192]
    4464:	ands	x1, x0, #0xfffffffffffffffe
    4468:	b.eq	4488 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xad8>  // b.none
    446c:	orr	x1, x1, #0x1
    4470:	str	x1, [x23]
    4474:	ldp	x25, x26, [sp, #64]
    4478:	ldp	x27, x28, [sp, #80]
    447c:	b	43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    4480:	add	x0, sp, #0xc0
    4484:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    4488:	tbnz	w0, #0, 44d0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xb20>
    448c:	ldr	x19, [x21, #472]
    4490:	add	x8, sp, #0xc0
    4494:	add	x1, sp, #0x230
    4498:	mov	x0, x21
    449c:	bl	1d4 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE>
    44a0:	ldr	x0, [sp, #192]
    44a4:	ands	x1, x0, #0xfffffffffffffffe
    44a8:	cset	x0, ne  // ne = any
    44ac:	orr	x0, x0, x1
    44b0:	str	x0, [sp, #192]
    44b4:	ands	x1, x0, #0xfffffffffffffffe
    44b8:	b.eq	44d8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xb28>  // b.none
    44bc:	orr	x1, x1, #0x1
    44c0:	str	x1, [x23]
    44c4:	ldp	x25, x26, [sp, #64]
    44c8:	ldp	x27, x28, [sp, #80]
    44cc:	b	43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    44d0:	add	x0, sp, #0xc0
    44d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    44d8:	tbnz	w0, #0, 45c0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xc10>
    44dc:	ldr	w0, [x21, #488]
    44e0:	cmp	w0, #0x1
    44e4:	b.ne	45c8 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xc18>  // b.any
    44e8:	ldr	x20, [x21, #472]
    44ec:	cmp	x19, x20
    44f0:	b.eq	45f0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xc40>  // b.none
    44f4:	bl	0 <_ZNSt3_V216generic_categoryEv>
    44f8:	mov	w1, #0x54                  	// #84
    44fc:	str	w1, [sp, #112]
    4500:	str	x0, [sp, #120]
    4504:	add	x1, sp, #0x80
    4508:	add	x0, sp, #0x90
    450c:	str	x0, [sp, #128]
    4510:	str	xzr, [sp, #136]
    4514:	strb	wzr, [sp, #144]
    4518:	mov	w0, #0x1                   	// #1
    451c:	str	w0, [sp, #224]
    4520:	str	xzr, [sp, #216]
    4524:	str	xzr, [sp, #208]
    4528:	str	xzr, [sp, #200]
    452c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    4530:	ldr	x0, [x0]
    4534:	add	x0, x0, #0x10
    4538:	str	x0, [sp, #192]
    453c:	str	x1, [sp, #232]
    4540:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    4544:	add	x0, x0, #0x0
    4548:	str	x0, [sp, #168]
    454c:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    4550:	ldr	x0, [x0]
    4554:	add	x0, x0, #0x10
    4558:	str	x0, [sp, #160]
    455c:	str	x20, [sp, #176]
    4560:	str	x19, [sp, #184]
    4564:	add	x1, sp, #0xa0
    4568:	add	x0, sp, #0xc0
    456c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    4570:	ldr	x1, [sp, #216]
    4574:	ldr	x0, [sp, #200]
    4578:	cmp	x1, x0
    457c:	b.eq	4588 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xbd8>  // b.none
    4580:	add	x0, sp, #0xc0
    4584:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    4588:	mov	x8, x23
    458c:	add	x1, sp, #0x70
    4590:	ldr	x0, [sp, #232]
    4594:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    4598:	add	x0, sp, #0xc0
    459c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    45a0:	ldr	x0, [sp, #128]
    45a4:	add	x1, sp, #0x90
    45a8:	cmp	x0, x1
    45ac:	b.eq	460c <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xc5c>  // b.none
    45b0:	bl	0 <_ZdlPv>
    45b4:	ldp	x25, x26, [sp, #64]
    45b8:	ldp	x27, x28, [sp, #80]
    45bc:	b	43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    45c0:	add	x0, sp, #0xc0
    45c4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    45c8:	bl	0 <_ZNSt3_V216generic_categoryEv>
    45cc:	mov	x1, x0
    45d0:	mov	x8, x23
    45d4:	adrp	x2, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    45d8:	add	x2, x2, #0x0
    45dc:	mov	x0, #0x54                  	// #84
    45e0:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    45e4:	ldp	x25, x26, [sp, #64]
    45e8:	ldp	x27, x28, [sp, #80]
    45ec:	b	43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    45f0:	mov	x8, x23
    45f4:	add	x1, sp, #0x230
    45f8:	mov	x0, x21
    45fc:	bl	31c <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksFileMetaERNS0_25BitstreamMetaParserHelperE>
    4600:	ldp	x25, x26, [sp, #64]
    4604:	ldp	x27, x28, [sp, #80]
    4608:	b	43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    460c:	ldp	x25, x26, [sp, #64]
    4610:	ldp	x27, x28, [sp, #80]
    4614:	b	43f4 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0xa44>
    4618:	str	x1, [x19, #8]
    461c:	ldr	x1, [sp, #200]
    4620:	str	x1, [x19, #16]
    4624:	ldr	x1, [sp, #208]
    4628:	str	x1, [x19, #24]
    462c:	add	x0, sp, #0xd0
    4630:	str	x0, [sp, #192]
    4634:	b	3dbc <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x40c>
    4638:	ldp	x19, x20, [sp, #16]
    463c:	b	39f0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE+0x40>

0000000000004640 <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksMetaMetaERNS0_25BitstreamMetaParserHelperE>:
    4640:	stp	x29, x30, [sp, #-96]!
    4644:	mov	x29, sp
    4648:	stp	x19, x20, [sp, #16]
    464c:	str	x21, [sp, #32]
    4650:	mov	x20, x8
    4654:	mov	x21, x0
    4658:	mov	x19, x1
    465c:	ldp	x2, x3, [x1, #40]
    4660:	stp	x2, x3, [sp, #48]
    4664:	ldr	x1, [x1, #56]
    4668:	str	x1, [sp, #64]
    466c:	add	x8, sp, #0x58
    4670:	add	x1, sp, #0x30
    4674:	bl	54 <_ZL13processStrTabRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalINS_9StringRefEEE>
    4678:	ldr	x2, [sp, #88]
    467c:	ands	x1, x2, #0xfffffffffffffffe
    4680:	cset	x2, ne  // ne = any
    4684:	orr	x2, x2, x1
    4688:	str	x2, [sp, #88]
    468c:	ands	x0, x2, #0xfffffffffffffffe
    4690:	b.eq	46b0 <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksMetaMetaERNS0_25BitstreamMetaParserHelperE+0x70>  // b.none
    4694:	orr	x0, x0, #0x1
    4698:	str	x0, [x20]
    469c:	mov	x0, x20
    46a0:	ldp	x19, x20, [sp, #16]
    46a4:	ldr	x21, [sp, #32]
    46a8:	ldp	x29, x30, [sp], #96
    46ac:	ret
    46b0:	tbnz	w2, #0, 46d8 <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksMetaMetaERNS0_25BitstreamMetaParserHelperE+0x98>
    46b4:	ldp	x0, x1, [x19, #64]
    46b8:	stp	x0, x1, [sp, #48]
    46bc:	ldr	x0, [x19, #80]
    46c0:	str	x0, [sp, #64]
    46c4:	mov	x8, x20
    46c8:	add	x1, sp, #0x30
    46cc:	mov	x0, x21
    46d0:	bl	39b0 <_ZN4llvm7remarks21BitstreamRemarkParser23processExternalFilePathENS_8OptionalINS_9StringRefEEE>
    46d4:	b	469c <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksMetaMetaERNS0_25BitstreamMetaParserHelperE+0x5c>
    46d8:	add	x0, sp, #0x58
    46dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000046e0 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv>:
    46e0:	stp	x29, x30, [sp, #-160]!
    46e4:	mov	x29, sp
    46e8:	stp	x19, x20, [sp, #16]
    46ec:	str	x21, [sp, #32]
    46f0:	mov	x20, x8
    46f4:	mov	x19, x0
    46f8:	add	x21, x0, #0x30
    46fc:	add	x8, sp, #0x30
    4700:	mov	x0, x21
    4704:	bl	3804 <_ZL18advanceToMetaBlockRN4llvm7remarks21BitstreamParserHelperE>
    4708:	ldr	x1, [sp, #48]
    470c:	ands	x2, x1, #0xfffffffffffffffe
    4710:	cset	x1, ne  // ne = any
    4714:	orr	x1, x1, x2
    4718:	str	x1, [sp, #48]
    471c:	ands	x0, x1, #0xfffffffffffffffe
    4720:	b.eq	4740 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x60>  // b.none
    4724:	orr	x0, x0, #0x1
    4728:	str	x0, [x20]
    472c:	mov	x0, x20
    4730:	ldp	x19, x20, [sp, #16]
    4734:	ldr	x21, [sp, #32]
    4738:	ldp	x29, x30, [sp], #160
    473c:	ret
    4740:	tbnz	w1, #0, 478c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0xac>
    4744:	add	x0, sp, #0x38
    4748:	add	x2, x19, #0x188
    474c:	mov	x1, x21
    4750:	mov	x21, x0
    4754:	bl	ec <_ZN4llvm7remarks25BitstreamMetaParserHelperC1ERNS_15BitstreamCursorERNS_18BitstreamBlockInfoE>
    4758:	add	x8, sp, #0x30
    475c:	mov	x0, x21
    4760:	bl	18f0 <_ZN4llvm7remarks25BitstreamMetaParserHelper5parseEv>
    4764:	ldr	x0, [sp, #48]
    4768:	ands	x1, x0, #0xfffffffffffffffe
    476c:	cset	x0, ne  // ne = any
    4770:	orr	x0, x0, x1
    4774:	str	x0, [sp, #48]
    4778:	ands	x1, x0, #0xfffffffffffffffe
    477c:	b.eq	4794 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0xb4>  // b.none
    4780:	orr	x1, x1, #0x1
    4784:	str	x1, [x20]
    4788:	b	472c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x4c>
    478c:	add	x0, sp, #0x30
    4790:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    4794:	tbnz	w0, #0, 47d0 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0xf0>
    4798:	add	x8, sp, #0x30
    479c:	add	x1, sp, #0x38
    47a0:	mov	x0, x19
    47a4:	bl	1d4 <_ZN4llvm7remarks21BitstreamRemarkParser17processCommonMetaERNS0_25BitstreamMetaParserHelperE>
    47a8:	ldr	x0, [sp, #48]
    47ac:	ands	x1, x0, #0xfffffffffffffffe
    47b0:	cset	x0, ne  // ne = any
    47b4:	orr	x0, x0, x1
    47b8:	str	x0, [sp, #48]
    47bc:	ands	x1, x0, #0xfffffffffffffffe
    47c0:	b.eq	47d8 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0xf8>  // b.none
    47c4:	orr	x1, x1, #0x1
    47c8:	str	x1, [x20]
    47cc:	b	472c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x4c>
    47d0:	add	x0, sp, #0x30
    47d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    47d8:	tbnz	w0, #0, 480c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x12c>
    47dc:	ldr	w0, [x19, #488]
    47e0:	cmp	w0, #0x1
    47e4:	b.eq	4828 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x148>  // b.none
    47e8:	cmp	w0, #0x2
    47ec:	b.eq	4814 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x134>  // b.none
    47f0:	cbz	w0, 483c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x15c>
    47f4:	mov	w2, #0x16d                 	// #365
    47f8:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    47fc:	add	x1, x1, #0x0
    4800:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    4804:	add	x0, x0, #0x0
    4808:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    480c:	add	x0, sp, #0x30
    4810:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    4814:	mov	x8, x20
    4818:	add	x1, sp, #0x38
    481c:	mov	x0, x19
    4820:	bl	284 <_ZN4llvm7remarks21BitstreamRemarkParser21processStandaloneMetaERNS0_25BitstreamMetaParserHelperE>
    4824:	b	472c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x4c>
    4828:	mov	x8, x20
    482c:	add	x1, sp, #0x38
    4830:	mov	x0, x19
    4834:	bl	31c <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksFileMetaERNS0_25BitstreamMetaParserHelperE>
    4838:	b	472c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x4c>
    483c:	mov	x8, x20
    4840:	add	x1, sp, #0x38
    4844:	mov	x0, x19
    4848:	bl	4640 <_ZN4llvm7remarks21BitstreamRemarkParser30processSeparateRemarksMetaMetaERNS0_25BitstreamMetaParserHelperE>
    484c:	b	472c <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv+0x4c>

0000000000004850 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv>:
    4850:	stp	x29, x30, [sp, #-48]!
    4854:	mov	x29, sp
    4858:	stp	x19, x20, [sp, #16]
    485c:	mov	x20, x8
    4860:	mov	x19, x0
    4864:	ldr	w0, [x0, #80]
    4868:	cbnz	w0, 48d4 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0x84>
    486c:	ldr	x1, [x19, #56]
    4870:	ldr	x0, [x19, #64]
    4874:	cmp	x1, x0
    4878:	b.hi	48d4 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0x84>  // b.pmore
    487c:	add	x8, sp, #0x28
    4880:	bl	0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    4884:	ldrb	w0, [x20, #8]
    4888:	orr	w0, w0, #0x3
    488c:	strb	w0, [x20, #8]
    4890:	ldr	x0, [sp, #40]
    4894:	ands	x1, x0, #0xfffffffffffffffe
    4898:	cset	x0, ne  // ne = any
    489c:	orr	x0, x0, x1
    48a0:	str	x0, [sp, #40]
    48a4:	ands	x0, x0, #0xfffffffffffffffe
    48a8:	b.eq	48b4 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0x64>  // b.none
    48ac:	str	x0, [x20]
    48b0:	b	4930 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0xe0>
    48b4:	adrp	x3, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    48b8:	add	x3, x3, #0x0
    48bc:	mov	w2, #0x1ce                 	// #462
    48c0:	adrp	x1, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    48c4:	add	x1, x1, #0x0
    48c8:	adrp	x0, 0 <_ZL20processRemarkVersionRN4llvm7remarks21BitstreamRemarkParserENS_8OptionalImEE>
    48cc:	add	x0, x0, #0x0
    48d0:	bl	0 <__assert_fail>
    48d4:	ldrb	w0, [x19, #492]
    48d8:	cbnz	w0, 4924 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0xd4>
    48dc:	add	x8, sp, #0x20
    48e0:	mov	x0, x19
    48e4:	bl	46e0 <_ZN4llvm7remarks21BitstreamRemarkParser9parseMetaEv>
    48e8:	ldr	x0, [sp, #32]
    48ec:	ands	x1, x0, #0xfffffffffffffffe
    48f0:	cset	x0, ne  // ne = any
    48f4:	orr	x0, x0, x1
    48f8:	str	x0, [sp, #32]
    48fc:	ands	x1, x0, #0xfffffffffffffffe
    4900:	b.eq	4918 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0xc8>  // b.none
    4904:	ldrb	w0, [x20, #8]
    4908:	orr	w0, w0, #0x3
    490c:	strb	w0, [x20, #8]
    4910:	str	x1, [x20]
    4914:	b	4930 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0xe0>
    4918:	tbnz	w0, #0, 4940 <_ZN4llvm7remarks21BitstreamRemarkParser4nextEv+0xf0>
    491c:	mov	w0, #0x1                   	// #1
    4920:	strb	w0, [x19, #492]
    4924:	mov	x8, x20
    4928:	mov	x0, x19
    492c:	bl	3448 <_ZN4llvm7remarks21BitstreamRemarkParser11parseRemarkEv>
    4930:	mov	x0, x20
    4934:	ldp	x19, x20, [sp, #16]
    4938:	ldp	x29, x30, [sp], #48
    493c:	ret
    4940:	add	x0, sp, #0x20
    4944:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm7remarks14EndOfFileErrorD2Ev:

0000000000000000 <_ZN4llvm7remarks14EndOfFileErrorD1Ev>:
   0:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm7remarks14EndOfFileError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	adrp	x0, 0 <_ZN4llvm7remarks14EndOfFileError2IDE>
  10:	ldr	x0, [x0]
  14:	ccmp	x1, x0, #0x4, ne  // ne = any
  18:	cset	w0, eq  // eq = none
  1c:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJPKcEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJPKcEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x4, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	x3, [x4, #16]
  18:	ldr	x2, [x4, #8]
  1c:	mov	w1, w1
  20:	bl	0 <snprintf>
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJjjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjjEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	w4, [x5, #16]
  18:	ldr	w3, [x5, #20]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	x4, [x5, #16]
  18:	ldr	x3, [x5, #24]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJPKcS2_EE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJPKcS2_EE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	x4, [x5, #16]
  18:	ldr	x3, [x5, #24]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJPKcjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJPKcjEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	w4, [x5, #16]
  18:	ldr	x3, [x5, #24]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNK4llvm7remarks14EndOfFileError18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm7remarks14EndOfFileError18convertToErrorCodeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZN4llvm22inconvertibleErrorCodeEv>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZN4llvm7remarks14EndOfFileErrorD0Ev:

0000000000000000 <_ZN4llvm7remarks14EndOfFileErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x8                   	// #8
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE>:
   0:	mov	x0, x1
   4:	ldr	x2, [x1, #24]
   8:	ldr	x1, [x1, #16]
   c:	sub	x1, x1, x2
  10:	cmp	x1, #0x13
  14:	b.ls	40 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE+0x40>  // b.plast
  18:	adrp	x1, 0 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE>
  1c:	add	x1, x1, #0x0
  20:	ldp	x4, x5, [x1]
  24:	stp	x4, x5, [x2]
  28:	ldr	w1, [x1, #16]
  2c:	str	w1, [x2, #16]
  30:	ldr	x1, [x0, #24]
  34:	add	x1, x1, #0x14
  38:	str	x1, [x0, #24]
  3c:	ret
  40:	stp	x29, x30, [sp, #-16]!
  44:	mov	x29, sp
  48:	mov	x2, #0x14                  	// #20
  4c:	adrp	x1, 0 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE>
  50:	add	x1, x1, #0x0
  54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm7remarks21BitstreamRemarkParserD0Ev:

0000000000000000 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x19, x0
  1c:	adrp	x0, 0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev>
  20:	ldr	x0, [x0]
  24:	add	x0, x0, #0x10
  28:	str	x0, [x19]
  2c:	ldr	x0, [x19, #464]
  30:	cbz	x0, 40 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x40>
  34:	ldr	x1, [x0]
  38:	ldr	x1, [x1, #8]
  3c:	blr	x1
  40:	ldrb	w0, [x19, #456]
  44:	cbz	w0, 54 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x54>
  48:	ldr	x0, [x19, #432]
  4c:	cbz	x0, 54 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x54>
  50:	bl	0 <_ZdlPv>
  54:	ldr	x20, [x19, #392]
  58:	ldr	x24, [x19, #400]
  5c:	cmp	x20, x24
  60:	b.eq	18c <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x18c>  // b.none
  64:	adrp	x23, 0 <__pthread_key_create>
  68:	ldr	x25, [x23]
  6c:	mov	x23, x25
  70:	b	e0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0xe0>
  74:	bl	0 <_ZdlPv>
  78:	add	x21, x21, #0x28
  7c:	cmp	x22, x21
  80:	b.eq	98 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x98>  // b.none
  84:	ldr	x0, [x21, #8]
  88:	add	x1, x21, #0x18
  8c:	cmp	x0, x1
  90:	b.ne	74 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x74>  // b.any
  94:	b	78 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x78>
  98:	ldr	x0, [x20, #64]
  9c:	cbz	x0, a4 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0xa4>
  a0:	bl	0 <_ZdlPv>
  a4:	ldr	x0, [x20, #32]
  a8:	add	x1, x20, #0x30
  ac:	cmp	x0, x1
  b0:	b.eq	b8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0xb8>  // b.none
  b4:	bl	0 <_ZdlPv>
  b8:	ldr	x22, [x20, #8]
  bc:	ldr	x26, [x20, #16]
  c0:	cmp	x22, x26
  c4:	b.ne	11c <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x11c>  // b.any
  c8:	ldr	x0, [x20, #8]
  cc:	cbz	x0, d4 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0xd4>
  d0:	bl	0 <_ZdlPv>
  d4:	add	x20, x20, #0x58
  d8:	cmp	x24, x20
  dc:	b.eq	18c <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x18c>  // b.none
  e0:	ldr	x21, [x20, #64]
  e4:	ldr	x22, [x20, #72]
  e8:	cmp	x21, x22
  ec:	b.ne	84 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x84>  // b.any
  f0:	b	98 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x98>
  f4:	add	x1, x21, #0x8
  f8:	ldaxr	w0, [x1]
  fc:	sub	w2, w0, #0x1
 100:	stlxr	w3, w2, [x1]
 104:	cbnz	w3, f8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0xf8>
 108:	cmp	w0, #0x1
 10c:	b.eq	138 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x138>  // b.none
 110:	add	x22, x22, #0x10
 114:	cmp	x26, x22
 118:	b.eq	c8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0xc8>  // b.none
 11c:	ldr	x21, [x22, #8]
 120:	cbz	x21, 110 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x110>
 124:	cbnz	x25, f4 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0xf4>
 128:	ldr	w0, [x21, #8]
 12c:	sub	w1, w0, #0x1
 130:	str	w1, [x21, #8]
 134:	b	108 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x108>
 138:	ldr	x0, [x21]
 13c:	ldr	x1, [x0, #16]
 140:	mov	x0, x21
 144:	blr	x1
 148:	cbz	x23, 17c <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x17c>
 14c:	add	x1, x21, #0xc
 150:	ldaxr	w0, [x1]
 154:	sub	w2, w0, #0x1
 158:	stlxr	w3, w2, [x1]
 15c:	cbnz	w3, 150 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x150>
 160:	cmp	w0, #0x1
 164:	b.ne	110 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x110>  // b.any
 168:	ldr	x0, [x21]
 16c:	ldr	x1, [x0, #24]
 170:	mov	x0, x21
 174:	blr	x1
 178:	b	110 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x110>
 17c:	ldr	w0, [x21, #12]
 180:	sub	w1, w0, #0x1
 184:	str	w1, [x21, #12]
 188:	b	160 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x160>
 18c:	ldr	x0, [x19, #392]
 190:	cbz	x0, 198 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x198>
 194:	bl	0 <_ZdlPv>
 198:	ldr	x24, [x19, #112]
 19c:	ldr	w21, [x19, #120]
 1a0:	add	x21, x24, x21, lsl #5
 1a4:	cmp	x24, x21
 1a8:	b.eq	280 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x280>  // b.none
 1ac:	adrp	x23, 0 <__pthread_key_create>
 1b0:	ldr	x26, [x23]
 1b4:	mov	x23, x26
 1b8:	b	268 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x268>
 1bc:	add	x1, x20, #0x8
 1c0:	ldaxr	w0, [x1]
 1c4:	sub	w2, w0, #0x1
 1c8:	stlxr	w3, w2, [x1]
 1cc:	cbnz	w3, 1c0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x1c0>
 1d0:	cmp	w0, #0x1
 1d4:	b.eq	200 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x200>  // b.none
 1d8:	add	x22, x22, #0x10
 1dc:	cmp	x25, x22
 1e0:	b.eq	254 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x254>  // b.none
 1e4:	ldr	x20, [x22, #8]
 1e8:	cbz	x20, 1d8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x1d8>
 1ec:	cbnz	x26, 1bc <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x1bc>
 1f0:	ldr	w0, [x20, #8]
 1f4:	sub	w1, w0, #0x1
 1f8:	str	w1, [x20, #8]
 1fc:	b	1d0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x1d0>
 200:	ldr	x0, [x20]
 204:	ldr	x1, [x0, #16]
 208:	mov	x0, x20
 20c:	blr	x1
 210:	cbz	x23, 244 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x244>
 214:	add	x1, x20, #0xc
 218:	ldaxr	w0, [x1]
 21c:	sub	w2, w0, #0x1
 220:	stlxr	w3, w2, [x1]
 224:	cbnz	w3, 218 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x218>
 228:	cmp	w0, #0x1
 22c:	b.ne	1d8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x1d8>  // b.any
 230:	ldr	x0, [x20]
 234:	ldr	x1, [x0, #24]
 238:	mov	x0, x20
 23c:	blr	x1
 240:	b	1d8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x1d8>
 244:	ldr	w0, [x20, #12]
 248:	sub	w1, w0, #0x1
 24c:	str	w1, [x20, #12]
 250:	b	228 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x228>
 254:	ldr	x0, [x21, #8]
 258:	cbz	x0, 260 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x260>
 25c:	bl	0 <_ZdlPv>
 260:	cmp	x24, x21
 264:	b.eq	280 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x280>  // b.none
 268:	sub	x21, x21, #0x20
 26c:	ldr	x22, [x21, #8]
 270:	ldr	x25, [x21, #16]
 274:	cmp	x22, x25
 278:	b.ne	1e4 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x1e4>  // b.any
 27c:	b	254 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x254>
 280:	ldr	x0, [x19, #112]
 284:	add	x1, x19, #0x80
 288:	cmp	x0, x1
 28c:	b.eq	294 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x294>  // b.none
 290:	bl	0 <free>
 294:	ldr	x21, [x19, #88]
 298:	ldr	x23, [x19, #96]
 29c:	cmp	x21, x23
 2a0:	b.eq	34c <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x34c>  // b.none
 2a4:	adrp	x22, 0 <__pthread_key_create>
 2a8:	ldr	x24, [x22]
 2ac:	mov	x22, x24
 2b0:	b	2dc <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2dc>
 2b4:	add	x1, x20, #0x8
 2b8:	ldaxr	w0, [x1]
 2bc:	sub	w2, w0, #0x1
 2c0:	stlxr	w3, w2, [x1]
 2c4:	cbnz	w3, 2b8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2b8>
 2c8:	cmp	w0, #0x1
 2cc:	b.eq	2f8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2f8>  // b.none
 2d0:	add	x21, x21, #0x10
 2d4:	cmp	x23, x21
 2d8:	b.eq	34c <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x34c>  // b.none
 2dc:	ldr	x20, [x21, #8]
 2e0:	cbz	x20, 2d0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2d0>
 2e4:	cbnz	x24, 2b4 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2b4>
 2e8:	ldr	w0, [x20, #8]
 2ec:	sub	w1, w0, #0x1
 2f0:	str	w1, [x20, #8]
 2f4:	b	2c8 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2c8>
 2f8:	ldr	x0, [x20]
 2fc:	ldr	x1, [x0, #16]
 300:	mov	x0, x20
 304:	blr	x1
 308:	cbz	x22, 33c <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x33c>
 30c:	add	x1, x20, #0xc
 310:	ldaxr	w0, [x1]
 314:	sub	w2, w0, #0x1
 318:	stlxr	w3, w2, [x1]
 31c:	cbnz	w3, 310 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x310>
 320:	cmp	w0, #0x1
 324:	b.ne	2d0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2d0>  // b.any
 328:	ldr	x0, [x20]
 32c:	ldr	x1, [x0, #24]
 330:	mov	x0, x20
 334:	blr	x1
 338:	b	2d0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x2d0>
 33c:	ldr	w0, [x20, #12]
 340:	sub	w1, w0, #0x1
 344:	str	w1, [x20, #12]
 348:	b	320 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x320>
 34c:	ldr	x0, [x19, #88]
 350:	cbz	x0, 358 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x358>
 354:	bl	0 <_ZdlPv>
 358:	mov	x1, x19
 35c:	adrp	x0, 0 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev>
 360:	ldr	x0, [x0]
 364:	add	x0, x0, #0x10
 368:	str	x0, [x1], #16
 36c:	ldr	x0, [x19, #16]
 370:	add	x1, x1, #0x10
 374:	cmp	x0, x1
 378:	b.eq	380 <_ZN4llvm7remarks21BitstreamRemarkParserD0Ev+0x380>  // b.none
 37c:	bl	0 <_ZdlPv>
 380:	mov	x1, #0x1f0                 	// #496
 384:	mov	x0, x19
 388:	bl	0 <_ZdlPvm>
 38c:	ldp	x19, x20, [sp, #16]
 390:	ldp	x21, x22, [sp, #32]
 394:	ldp	x23, x24, [sp, #48]
 398:	ldp	x25, x26, [sp, #64]
 39c:	ldp	x29, x30, [sp], #80
 3a0:	ret

Disassembly of section .text._ZN4llvm7remarks21BitstreamRemarkParserD2Ev:

0000000000000000 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x19, x0
  1c:	adrp	x0, 0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev>
  20:	ldr	x0, [x0]
  24:	add	x0, x0, #0x10
  28:	str	x0, [x19]
  2c:	ldr	x0, [x19, #464]
  30:	cbz	x0, 40 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x40>
  34:	ldr	x1, [x0]
  38:	ldr	x1, [x1, #8]
  3c:	blr	x1
  40:	ldrb	w0, [x19, #456]
  44:	cbz	w0, 54 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x54>
  48:	ldr	x0, [x19, #432]
  4c:	cbz	x0, 54 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x54>
  50:	bl	0 <_ZdlPv>
  54:	ldr	x20, [x19, #392]
  58:	ldr	x24, [x19, #400]
  5c:	cmp	x20, x24
  60:	b.eq	18c <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x18c>  // b.none
  64:	adrp	x23, 0 <__pthread_key_create>
  68:	ldr	x25, [x23]
  6c:	mov	x23, x25
  70:	b	e0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0xe0>
  74:	bl	0 <_ZdlPv>
  78:	add	x21, x21, #0x28
  7c:	cmp	x22, x21
  80:	b.eq	98 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x98>  // b.none
  84:	ldr	x0, [x21, #8]
  88:	add	x1, x21, #0x18
  8c:	cmp	x0, x1
  90:	b.ne	74 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x74>  // b.any
  94:	b	78 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x78>
  98:	ldr	x0, [x20, #64]
  9c:	cbz	x0, a4 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0xa4>
  a0:	bl	0 <_ZdlPv>
  a4:	ldr	x0, [x20, #32]
  a8:	add	x1, x20, #0x30
  ac:	cmp	x0, x1
  b0:	b.eq	b8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0xb8>  // b.none
  b4:	bl	0 <_ZdlPv>
  b8:	ldr	x22, [x20, #8]
  bc:	ldr	x26, [x20, #16]
  c0:	cmp	x22, x26
  c4:	b.ne	11c <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x11c>  // b.any
  c8:	ldr	x0, [x20, #8]
  cc:	cbz	x0, d4 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0xd4>
  d0:	bl	0 <_ZdlPv>
  d4:	add	x20, x20, #0x58
  d8:	cmp	x24, x20
  dc:	b.eq	18c <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x18c>  // b.none
  e0:	ldr	x21, [x20, #64]
  e4:	ldr	x22, [x20, #72]
  e8:	cmp	x21, x22
  ec:	b.ne	84 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x84>  // b.any
  f0:	b	98 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x98>
  f4:	add	x1, x21, #0x8
  f8:	ldaxr	w0, [x1]
  fc:	sub	w2, w0, #0x1
 100:	stlxr	w3, w2, [x1]
 104:	cbnz	w3, f8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0xf8>
 108:	cmp	w0, #0x1
 10c:	b.eq	138 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x138>  // b.none
 110:	add	x22, x22, #0x10
 114:	cmp	x26, x22
 118:	b.eq	c8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0xc8>  // b.none
 11c:	ldr	x21, [x22, #8]
 120:	cbz	x21, 110 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x110>
 124:	cbnz	x25, f4 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0xf4>
 128:	ldr	w0, [x21, #8]
 12c:	sub	w1, w0, #0x1
 130:	str	w1, [x21, #8]
 134:	b	108 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x108>
 138:	ldr	x0, [x21]
 13c:	ldr	x1, [x0, #16]
 140:	mov	x0, x21
 144:	blr	x1
 148:	cbz	x23, 17c <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x17c>
 14c:	add	x1, x21, #0xc
 150:	ldaxr	w0, [x1]
 154:	sub	w2, w0, #0x1
 158:	stlxr	w3, w2, [x1]
 15c:	cbnz	w3, 150 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x150>
 160:	cmp	w0, #0x1
 164:	b.ne	110 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x110>  // b.any
 168:	ldr	x0, [x21]
 16c:	ldr	x1, [x0, #24]
 170:	mov	x0, x21
 174:	blr	x1
 178:	b	110 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x110>
 17c:	ldr	w0, [x21, #12]
 180:	sub	w1, w0, #0x1
 184:	str	w1, [x21, #12]
 188:	b	160 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x160>
 18c:	ldr	x0, [x19, #392]
 190:	cbz	x0, 198 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x198>
 194:	bl	0 <_ZdlPv>
 198:	ldr	x24, [x19, #112]
 19c:	ldr	w21, [x19, #120]
 1a0:	add	x21, x24, x21, lsl #5
 1a4:	cmp	x24, x21
 1a8:	b.eq	280 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x280>  // b.none
 1ac:	adrp	x23, 0 <__pthread_key_create>
 1b0:	ldr	x26, [x23]
 1b4:	mov	x23, x26
 1b8:	b	268 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x268>
 1bc:	add	x1, x20, #0x8
 1c0:	ldaxr	w0, [x1]
 1c4:	sub	w2, w0, #0x1
 1c8:	stlxr	w3, w2, [x1]
 1cc:	cbnz	w3, 1c0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x1c0>
 1d0:	cmp	w0, #0x1
 1d4:	b.eq	200 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x200>  // b.none
 1d8:	add	x22, x22, #0x10
 1dc:	cmp	x25, x22
 1e0:	b.eq	254 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x254>  // b.none
 1e4:	ldr	x20, [x22, #8]
 1e8:	cbz	x20, 1d8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x1d8>
 1ec:	cbnz	x26, 1bc <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x1bc>
 1f0:	ldr	w0, [x20, #8]
 1f4:	sub	w1, w0, #0x1
 1f8:	str	w1, [x20, #8]
 1fc:	b	1d0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x1d0>
 200:	ldr	x0, [x20]
 204:	ldr	x1, [x0, #16]
 208:	mov	x0, x20
 20c:	blr	x1
 210:	cbz	x23, 244 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x244>
 214:	add	x1, x20, #0xc
 218:	ldaxr	w0, [x1]
 21c:	sub	w2, w0, #0x1
 220:	stlxr	w3, w2, [x1]
 224:	cbnz	w3, 218 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x218>
 228:	cmp	w0, #0x1
 22c:	b.ne	1d8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x1d8>  // b.any
 230:	ldr	x0, [x20]
 234:	ldr	x1, [x0, #24]
 238:	mov	x0, x20
 23c:	blr	x1
 240:	b	1d8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x1d8>
 244:	ldr	w0, [x20, #12]
 248:	sub	w1, w0, #0x1
 24c:	str	w1, [x20, #12]
 250:	b	228 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x228>
 254:	ldr	x0, [x21, #8]
 258:	cbz	x0, 260 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x260>
 25c:	bl	0 <_ZdlPv>
 260:	cmp	x24, x21
 264:	b.eq	280 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x280>  // b.none
 268:	sub	x21, x21, #0x20
 26c:	ldr	x22, [x21, #8]
 270:	ldr	x25, [x21, #16]
 274:	cmp	x22, x25
 278:	b.ne	1e4 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x1e4>  // b.any
 27c:	b	254 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x254>
 280:	ldr	x0, [x19, #112]
 284:	add	x1, x19, #0x80
 288:	cmp	x0, x1
 28c:	b.eq	294 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x294>  // b.none
 290:	bl	0 <free>
 294:	ldr	x21, [x19, #88]
 298:	ldr	x23, [x19, #96]
 29c:	cmp	x21, x23
 2a0:	b.eq	34c <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x34c>  // b.none
 2a4:	adrp	x22, 0 <__pthread_key_create>
 2a8:	ldr	x24, [x22]
 2ac:	mov	x22, x24
 2b0:	b	2dc <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2dc>
 2b4:	add	x1, x20, #0x8
 2b8:	ldaxr	w0, [x1]
 2bc:	sub	w2, w0, #0x1
 2c0:	stlxr	w3, w2, [x1]
 2c4:	cbnz	w3, 2b8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2b8>
 2c8:	cmp	w0, #0x1
 2cc:	b.eq	2f8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2f8>  // b.none
 2d0:	add	x21, x21, #0x10
 2d4:	cmp	x23, x21
 2d8:	b.eq	34c <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x34c>  // b.none
 2dc:	ldr	x20, [x21, #8]
 2e0:	cbz	x20, 2d0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2d0>
 2e4:	cbnz	x24, 2b4 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2b4>
 2e8:	ldr	w0, [x20, #8]
 2ec:	sub	w1, w0, #0x1
 2f0:	str	w1, [x20, #8]
 2f4:	b	2c8 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2c8>
 2f8:	ldr	x0, [x20]
 2fc:	ldr	x1, [x0, #16]
 300:	mov	x0, x20
 304:	blr	x1
 308:	cbz	x22, 33c <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x33c>
 30c:	add	x1, x20, #0xc
 310:	ldaxr	w0, [x1]
 314:	sub	w2, w0, #0x1
 318:	stlxr	w3, w2, [x1]
 31c:	cbnz	w3, 310 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x310>
 320:	cmp	w0, #0x1
 324:	b.ne	2d0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2d0>  // b.any
 328:	ldr	x0, [x20]
 32c:	ldr	x1, [x0, #24]
 330:	mov	x0, x20
 334:	blr	x1
 338:	b	2d0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x2d0>
 33c:	ldr	w0, [x20, #12]
 340:	sub	w1, w0, #0x1
 344:	str	w1, [x20, #12]
 348:	b	320 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x320>
 34c:	ldr	x0, [x19, #88]
 350:	cbz	x0, 358 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x358>
 354:	bl	0 <_ZdlPv>
 358:	mov	x1, x19
 35c:	adrp	x0, 0 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev>
 360:	ldr	x0, [x0]
 364:	add	x0, x0, #0x10
 368:	str	x0, [x1], #16
 36c:	ldr	x0, [x19, #16]
 370:	add	x1, x1, #0x10
 374:	cmp	x0, x1
 378:	b.eq	380 <_ZN4llvm7remarks21BitstreamRemarkParserD1Ev+0x380>  // b.none
 37c:	bl	0 <_ZdlPv>
 380:	ldp	x19, x20, [sp, #16]
 384:	ldp	x21, x22, [sp, #32]
 388:	ldp	x23, x24, [sp, #48]
 38c:	ldp	x25, x26, [sp, #64]
 390:	ldp	x29, x30, [sp], #80
 394:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	ldr	x1, [x0]
   4:	cbnz	x1, c <_ZN4llvm5ErrorD1Ev+0xc>
   8:	ret
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8ExpectedINS_14BitstreamEntryEE9takeErrorEv:

0000000000000000 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE9takeErrorEv>:
   0:	ldrb	w1, [x0, #8]
   4:	and	w1, w1, #0xfffffffd
   8:	strb	w1, [x0, #8]
   c:	tbz	w1, #0, 28 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE9takeErrorEv+0x28>
  10:	ldr	x1, [x0]
  14:	str	xzr, [x0]
  18:	orr	x0, x1, #0x1
  1c:	str	x0, [x8]
  20:	mov	x0, x8
  24:	ret
  28:	mov	x0, #0x1                   	// #1
  2c:	str	x0, [x8]
  30:	b	20 <_ZN4llvm8ExpectedINS_14BitstreamEntryEE9takeErrorEv+0x20>

Disassembly of section .text._ZN4llvm10make_errorINS_7remarks14EndOfFileErrorEJEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_7remarks14EndOfFileErrorEJEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x0, #0x8                   	// #8
  14:	bl	0 <_Znwm>
  18:	adrp	x1, 0 <_ZN4llvm10make_errorINS_7remarks14EndOfFileErrorEJEEENS_5ErrorEDpOT0_>
  1c:	ldr	x1, [x1]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x0]
  28:	orr	x0, x0, #0x1
  2c:	str	x0, [x19]
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEEC1ENS_5ErrorE>:
   0:	ldrb	w2, [x0, #8]
   4:	orr	w2, w2, #0x3
   8:	strb	w2, [x0, #8]
   c:	ldr	x2, [x1]
  10:	ands	x3, x2, #0xfffffffffffffffe
  14:	cset	x2, ne  // ne = any
  18:	orr	x2, x2, x3
  1c:	str	x2, [x1]
  20:	ands	x2, x2, #0xfffffffffffffffe
  24:	b.eq	34 <_ZN4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEEC1ENS_5ErrorE+0x34>  // b.none
  28:	str	x2, [x0]
  2c:	str	xzr, [x1]
  30:	ret
  34:	stp	x29, x30, [sp, #-16]!
  38:	mov	x29, sp
  3c:	adrp	x3, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEEC1ENS_5ErrorE>
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x1ce                 	// #462
  48:	adrp	x1, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEEC1ENS_5ErrorE>
  4c:	add	x1, x1, #0x0
  50:	adrp	x0, 0 <_ZN4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEEC1ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedINS_9StringRefEE9takeErrorEv:

0000000000000000 <_ZN4llvm8ExpectedINS_9StringRefEE9takeErrorEv>:
   0:	ldrb	w1, [x0, #16]
   4:	and	w1, w1, #0xfffffffd
   8:	strb	w1, [x0, #16]
   c:	tbz	w1, #0, 28 <_ZN4llvm8ExpectedINS_9StringRefEE9takeErrorEv+0x28>
  10:	ldr	x1, [x0]
  14:	str	xzr, [x0]
  18:	orr	x0, x1, #0x1
  1c:	str	x0, [x8]
  20:	mov	x0, x8
  24:	ret
  28:	mov	x0, #0x1                   	// #1
  2c:	str	x0, [x8]
  30:	b	20 <_ZN4llvm8ExpectedINS_9StringRefEE9takeErrorEv+0x20>

Disassembly of section .text._ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x22, x23, [sp, #32]
  10:	mov	x20, x8
  14:	str	xzr, [sp, #64]
  18:	mov	w2, #0x4                   	// #4
  1c:	strb	w2, [sp, #72]
  20:	mov	w2, #0x1                   	// #1
  24:	strb	w2, [sp, #73]
  28:	str	x0, [sp, #56]
  2c:	ldp	x22, x23, [x1]
  30:	mov	x0, #0x40                  	// #64
  34:	bl	0 <_Znwm>
  38:	mov	x19, x0
  3c:	mov	x2, x22
  40:	mov	x3, x23
  44:	add	x1, sp, #0x38
  48:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
  4c:	orr	x19, x19, #0x1
  50:	str	x19, [x20]
  54:	mov	x0, x20
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x22, x23, [sp, #32]
  60:	ldp	x29, x30, [sp], #80
  64:	ret

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor4ReadEj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>:
   0:	stp	x29, x30, [sp, #-240]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	sub	w0, w1, #0x1
  14:	cmp	w0, #0x3f
  18:	b.hi	80 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x80>  // b.pmore
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x8
  24:	mov	w20, w1
  28:	ldr	w22, [x19, #32]
  2c:	cmp	w22, w1
  30:	b.cc	ac <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xac>  // b.lo, b.ul, b.last
  34:	ldr	x2, [x19, #24]
  38:	lsr	x0, x2, x1
  3c:	str	x0, [x19, #24]
  40:	sub	w22, w22, w1
  44:	str	w22, [x19, #32]
  48:	ldrb	w0, [x8, #8]
  4c:	and	w0, w0, #0xfffffffe
  50:	orr	w0, w0, #0x2
  54:	strb	w0, [x8, #8]
  58:	neg	w1, w1
  5c:	mov	x20, #0xffffffffffffffff    	// #-1
  60:	lsr	x20, x20, x1
  64:	and	x20, x20, x2
  68:	str	x20, [x8]
  6c:	mov	x0, x21
  70:	ldp	x21, x22, [sp, #32]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #240
  7c:	ret
  80:	stp	x21, x22, [sp, #32]
  84:	stp	x23, x24, [sp, #48]
  88:	str	x25, [sp, #64]
  8c:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0xc0                  	// #192
  98:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  9c:	add	x1, x1, #0x0
  a0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <__assert_fail>
  ac:	stp	x23, x24, [sp, #48]
  b0:	str	x25, [sp, #64]
  b4:	mov	x23, #0x0                   	// #0
  b8:	cbz	w22, c0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xc0>
  bc:	ldr	x23, [x19, #24]
  c0:	ldr	x24, [x19, #16]
  c4:	ldr	x25, [x19, #8]
  c8:	cmp	x24, x25
  cc:	b.cs	160 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x160>  // b.hs, b.nlast
  d0:	ldr	x0, [x19]
  d4:	add	x3, x0, x24
  d8:	add	x1, x24, #0x8
  dc:	cmp	x25, x1
  e0:	b.cc	258 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x258>  // b.lo, b.ul, b.last
  e4:	ldr	x0, [x0, x24]
  e8:	str	x0, [x19, #24]
  ec:	mov	w1, #0x8                   	// #8
  f0:	add	x24, x24, w1, uxtw
  f4:	str	x24, [x19, #16]
  f8:	lsl	w1, w1, #3
  fc:	str	w1, [x19, #32]
 100:	sub	w25, w20, w22
 104:	ldr	w24, [x19, #32]
 108:	cmp	w25, w24
 10c:	b.hi	2a8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x2a8>  // b.pmore
 110:	ldr	x1, [x19, #24]
 114:	sub	w20, w22, w20
 118:	lsr	x25, x1, x25
 11c:	str	x25, [x19, #24]
 120:	add	w24, w24, w20
 124:	str	w24, [x19, #32]
 128:	ldrb	w0, [x21, #8]
 12c:	and	w0, w0, #0xfffffffe
 130:	orr	w0, w0, #0x2
 134:	strb	w0, [x21, #8]
 138:	add	w20, w20, #0x40
 13c:	mov	x0, #0xffffffffffffffff    	// #-1
 140:	lsr	x20, x0, x20
 144:	and	x20, x20, x1
 148:	lsl	x22, x20, x22
 14c:	orr	x23, x22, x23
 150:	str	x23, [x21]
 154:	ldp	x23, x24, [sp, #48]
 158:	ldr	x25, [sp, #64]
 15c:	b	6c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x6c>
 160:	bl	0 <_ZNSt3_V216generic_categoryEv>
 164:	mov	w1, #0x5                   	// #5
 168:	str	w1, [sp, #80]
 16c:	str	x0, [sp, #88]
 170:	add	x1, sp, #0x60
 174:	add	x0, sp, #0x70
 178:	str	x0, [sp, #96]
 17c:	str	xzr, [sp, #104]
 180:	strb	wzr, [sp, #112]
 184:	mov	w0, #0x1                   	// #1
 188:	str	w0, [sp, #192]
 18c:	str	xzr, [sp, #184]
 190:	str	xzr, [sp, #176]
 194:	str	xzr, [sp, #168]
 198:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 19c:	ldr	x0, [x0]
 1a0:	add	x0, x0, #0x10
 1a4:	str	x0, [sp, #160]
 1a8:	str	x1, [sp, #200]
 1ac:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1b0:	add	x0, x0, #0x0
 1b4:	str	x0, [sp, #136]
 1b8:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1bc:	ldr	x0, [x0]
 1c0:	add	x0, x0, #0x10
 1c4:	str	x0, [sp, #128]
 1c8:	str	x25, [sp, #144]
 1cc:	str	x24, [sp, #152]
 1d0:	add	x1, sp, #0x80
 1d4:	add	x0, sp, #0xa0
 1d8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 1dc:	ldr	x1, [sp, #184]
 1e0:	ldr	x0, [sp, #168]
 1e4:	cmp	x1, x0
 1e8:	b.eq	1f4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1f4>  // b.none
 1ec:	add	x0, sp, #0xa0
 1f0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 1f4:	add	x8, sp, #0x80
 1f8:	add	x1, sp, #0x50
 1fc:	ldr	x0, [sp, #200]
 200:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 204:	add	x0, sp, #0xa0
 208:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 20c:	ldr	x0, [sp, #96]
 210:	add	x1, sp, #0x70
 214:	cmp	x0, x1
 218:	b.eq	220 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x220>  // b.none
 21c:	bl	0 <_ZdlPv>
 220:	ldr	x0, [sp, #128]
 224:	ands	x1, x0, #0xfffffffffffffffe
 228:	cset	x0, ne  // ne = any
 22c:	orr	x0, x0, x1
 230:	str	x0, [sp, #128]
 234:	ands	x1, x0, #0xfffffffffffffffe
 238:	b.eq	29c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x29c>  // b.none
 23c:	ldrb	w0, [x21, #8]
 240:	orr	w0, w0, #0x3
 244:	strb	w0, [x21, #8]
 248:	str	x1, [x21]
 24c:	ldp	x23, x24, [sp, #48]
 250:	ldr	x25, [sp, #64]
 254:	b	6c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x6c>
 258:	str	xzr, [x19, #24]
 25c:	subs	w25, w25, w24
 260:	b.eq	294 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x294>  // b.none
 264:	mov	x0, #0x0                   	// #0
 268:	ldrb	w1, [x3, x0]
 26c:	lsl	w2, w0, #3
 270:	lsl	x2, x1, x2
 274:	ldr	x1, [x19, #24]
 278:	orr	x1, x1, x2
 27c:	str	x1, [x19, #24]
 280:	add	x0, x0, #0x1
 284:	mov	w1, w0
 288:	cmp	w25, w0
 28c:	b.ne	268 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x268>  // b.any
 290:	b	f0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xf0>
 294:	mov	w1, w25
 298:	b	f0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xf0>
 29c:	tbz	w0, #0, 100 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x100>
 2a0:	add	x0, sp, #0x80
 2a4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 2a8:	bl	0 <_ZNSt3_V216generic_categoryEv>
 2ac:	mov	w1, #0x5                   	// #5
 2b0:	str	w1, [sp, #96]
 2b4:	str	x0, [sp, #104]
 2b8:	add	x1, sp, #0x80
 2bc:	add	x0, sp, #0x90
 2c0:	str	x0, [sp, #128]
 2c4:	str	xzr, [sp, #136]
 2c8:	strb	wzr, [sp, #144]
 2cc:	mov	w0, #0x1                   	// #1
 2d0:	str	w0, [sp, #192]
 2d4:	str	xzr, [sp, #184]
 2d8:	str	xzr, [sp, #176]
 2dc:	str	xzr, [sp, #168]
 2e0:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 2e4:	ldr	x0, [x0]
 2e8:	add	x0, x0, #0x10
 2ec:	str	x0, [sp, #160]
 2f0:	str	x1, [sp, #200]
 2f4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 2f8:	add	x0, x0, #0x0
 2fc:	str	x0, [sp, #224]
 300:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 304:	ldr	x0, [x0]
 308:	add	x0, x0, #0x10
 30c:	str	x0, [sp, #216]
 310:	str	w25, [sp, #232]
 314:	str	w24, [sp, #236]
 318:	add	x1, sp, #0xd8
 31c:	add	x0, sp, #0xa0
 320:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 324:	ldr	x1, [sp, #184]
 328:	ldr	x0, [sp, #168]
 32c:	cmp	x1, x0
 330:	b.eq	33c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x33c>  // b.none
 334:	add	x0, sp, #0xa0
 338:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 33c:	add	x8, sp, #0xd0
 340:	add	x1, sp, #0x60
 344:	ldr	x0, [sp, #200]
 348:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 34c:	add	x0, sp, #0xa0
 350:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 354:	ldr	x0, [sp, #128]
 358:	add	x1, sp, #0x90
 35c:	cmp	x0, x1
 360:	b.eq	368 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x368>  // b.none
 364:	bl	0 <_ZdlPv>
 368:	ldrb	w0, [x21, #8]
 36c:	orr	w0, w0, #0x3
 370:	strb	w0, [x21, #8]
 374:	ldr	x0, [sp, #208]
 378:	ands	x1, x0, #0xfffffffffffffffe
 37c:	cset	x0, ne  // ne = any
 380:	orr	x0, x0, x1
 384:	str	x0, [sp, #208]
 388:	ands	x0, x0, #0xfffffffffffffffe
 38c:	b.eq	3a0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3a0>  // b.none
 390:	str	x0, [x21]
 394:	ldp	x23, x24, [sp, #48]
 398:	ldr	x25, [sp, #64]
 39c:	b	6c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x6c>
 3a0:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3a4:	add	x3, x3, #0x0
 3a8:	mov	w2, #0x1ce                 	// #462
 3ac:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3b0:	add	x1, x1, #0x0
 3b4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3b8:	add	x0, x0, #0x0
 3bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x24, x0
  20:	mov	x19, x2
  24:	ldr	x21, [x0, #8]
  28:	ldr	x25, [x0]
  2c:	sub	x0, x21, x25
  30:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  34:	cmp	x2, x0, asr #3
  38:	b.eq	9c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.none
  3c:	mov	x22, x1
  40:	mov	x27, x1
  44:	asr	x1, x0, #3
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	150 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>  // b.hs, b.nlast
  58:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  5c:	cmp	x0, x26
  60:	csel	x26, x0, x26, ls  // ls = plast
  64:	sub	x20, x22, x25
  68:	mov	x23, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  70:	lsl	x0, x26, #3
  74:	bl	0 <_Znwm>
  78:	mov	x23, x0
  7c:	ldr	x0, [x19]
  80:	str	xzr, [x19]
  84:	str	x0, [x23, x20]
  88:	cmp	x22, x25
  8c:	b.eq	148 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>  // b.none
  90:	mov	x20, x23
  94:	mov	x19, x25
  98:	b	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  9c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <_ZSt20__throw_length_errorPKc>
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x27, x19
  b4:	b.eq	dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>  // b.none
  b8:	ldr	x0, [x19]
  bc:	str	xzr, [x19]
  c0:	str	x0, [x20]
  c4:	ldr	x0, [x19]
  c8:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  cc:	ldr	x1, [x0]
  d0:	ldr	x1, [x1, #8]
  d4:	blr	x1
  d8:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  dc:	sub	x19, x22, x25
  e0:	add	x19, x23, x19
  e4:	add	x19, x19, #0x8
  e8:	cmp	x22, x21
  ec:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.none
  f0:	mov	x2, x22
  f4:	mov	x0, x19
  f8:	ldr	x1, [x2], #8
  fc:	str	x1, [x0], #8
 100:	cmp	x2, x21
 104:	b.ne	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.any
 108:	sub	x21, x21, x22
 10c:	add	x19, x19, x21
 110:	cbz	x25, 11c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x11c>
 114:	mov	x0, x25
 118:	bl	0 <_ZdlPv>
 11c:	str	x23, [x24]
 120:	str	x19, [x24, #8]
 124:	add	x23, x23, x26, lsl #3
 128:	str	x23, [x24, #16]
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldp	x25, x26, [sp, #64]
 13c:	ldr	x27, [sp, #80]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	mov	x19, x23
 14c:	b	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>
 150:	sub	x20, x22, x25
 154:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
 158:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	30 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x30>  // b.none
  14:	ldr	x3, [x2]
  18:	str	xzr, [x2]
  1c:	str	x3, [x1]
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x8
  28:	str	x1, [x0, #8]
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>
  3c:	ldp	x29, x30, [sp], #16
  40:	ret

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x0
  18:	mov	x21, x1
  1c:	ldr	x0, [x0]
  20:	ldr	x2, [x0]
  24:	ldr	x2, [x2, #48]
  28:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  2c:	ldr	x1, [x1]
  30:	blr	x2
  34:	and	w0, w0, #0xff
  38:	cbnz	w0, 60 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0x60>
  3c:	ldr	x0, [x19]
  40:	str	xzr, [x19]
  44:	orr	x0, x0, #0x1
  48:	str	x0, [x20]
  4c:	mov	x0, x20
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ldr	x22, [x19]
  64:	str	xzr, [x19]
  68:	ldr	x0, [x22]
  6c:	ldr	x2, [x0, #48]
  70:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x1, [x1]
  78:	mov	x0, x22
  7c:	blr	x2
  80:	and	w0, w0, #0xff
  84:	cbz	w0, b0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0xb0>
  88:	ldr	x1, [x21]
  8c:	ldr	x0, [x1]
  90:	str	x22, [x1]
  94:	cbz	x0, a4 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0xa4>
  98:	ldr	x1, [x0]
  9c:	ldr	x1, [x1, #8]
  a0:	blr	x1
  a4:	mov	x0, #0x1                   	// #1
  a8:	str	x0, [x20]
  ac:	b	4c <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0x4c>
  b0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x339                 	// #825
  bc:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>
  c0:	add	x1, x1, #0x0
  c4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>
  c8:	add	x0, x0, #0x0
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x21, x1
  18:	ldr	x19, [x0]
  1c:	ands	x1, x19, #0xfffffffffffffffe
  20:	cset	x19, ne  // ne = any
  24:	orr	x19, x19, x1
  28:	str	x19, [x0]
  2c:	ands	x19, x19, #0xfffffffffffffffe
  30:	b.eq	1a4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1a4>  // b.none
  34:	str	xzr, [x0]
  38:	ldr	x0, [x19]
  3c:	ldr	x2, [x0, #48]
  40:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  44:	ldr	x1, [x1]
  48:	mov	x0, x19
  4c:	blr	x2
  50:	and	w0, w0, #0xff
  54:	cbz	w0, 4c4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4c4>
  58:	stp	x23, x24, [sp, #48]
  5c:	mov	x0, #0x1                   	// #1
  60:	str	x0, [sp, #120]
  64:	ldr	x22, [x19, #8]
  68:	ldr	x24, [x19, #16]
  6c:	cmp	x24, x22
  70:	b.eq	214 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x214>  // b.none
  74:	stp	x25, x26, [sp, #64]
  78:	stp	x27, x28, [sp, #80]
  7c:	add	x26, sp, #0x90
  80:	add	x25, sp, #0x88
  84:	adrp	x23, 0 <_ZTVN4llvm9ErrorListE>
  88:	ldr	x23, [x23]
  8c:	add	x23, x23, #0x10
  90:	ldr	x0, [sp, #120]
  94:	orr	x0, x0, #0x1
  98:	str	x0, [sp, #128]
  9c:	str	xzr, [sp, #120]
  a0:	ldr	x0, [x22]
  a4:	str	xzr, [x22]
  a8:	str	x0, [sp, #144]
  ac:	mov	x8, x25
  b0:	mov	x1, x21
  b4:	mov	x0, x26
  b8:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
  bc:	ldr	x0, [sp, #128]
  c0:	ands	x1, x0, #0xfffffffffffffffe
  c4:	cset	x0, ne  // ne = any
  c8:	orr	x0, x0, x1
  cc:	str	x0, [sp, #128]
  d0:	ands	x0, x0, #0xfffffffffffffffe
  d4:	b.eq	1c0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1c0>  // b.none
  d8:	ldr	x1, [sp, #136]
  dc:	ands	x2, x1, #0xfffffffffffffffe
  e0:	cset	x1, ne  // ne = any
  e4:	orr	x1, x1, x2
  e8:	str	x1, [sp, #136]
  ec:	tst	x1, #0xfffffffffffffffe
  f0:	b.eq	238 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x238>  // b.none
  f4:	ldr	x1, [x0]
  f8:	ldr	x2, [x1, #48]
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 100:	ldr	x1, [x1]
 104:	blr	x2
 108:	and	w0, w0, #0xff
 10c:	cbz	w0, 288 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x288>
 110:	ldr	x0, [sp, #128]
 114:	and	x0, x0, #0xfffffffffffffffe
 118:	str	x0, [sp, #96]
 11c:	ldr	x0, [sp, #136]
 120:	ands	x0, x0, #0xfffffffffffffffe
 124:	b.eq	244 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x244>  // b.none
 128:	ldr	x1, [x0]
 12c:	ldr	x2, [x1, #48]
 130:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 134:	ldr	x1, [x1]
 138:	blr	x2
 13c:	and	w0, w0, #0xff
 140:	cbz	w0, 244 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x244>
 144:	ldr	x0, [sp, #136]
 148:	and	x1, x0, #0xfffffffffffffffe
 14c:	str	x1, [sp, #104]
 150:	str	xzr, [sp, #136]
 154:	ldr	x27, [x1, #8]
 158:	ldr	x28, [x1, #16]
 15c:	cmp	x27, x28
 160:	b.eq	188 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x188>  // b.none
 164:	ldr	x0, [sp, #96]
 168:	add	x0, x0, #0x8
 16c:	str	x0, [sp, #96]
 170:	mov	x1, x27
 174:	ldr	x0, [sp, #96]
 178:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 17c:	add	x27, x27, #0x8
 180:	cmp	x28, x27
 184:	b.ne	170 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x170>  // b.any
 188:	ldr	x2, [sp, #104]
 18c:	cbz	x2, 278 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x278>
 190:	ldr	x0, [x2]
 194:	ldr	x1, [x0, #8]
 198:	mov	x0, x2
 19c:	blr	x1
 1a0:	b	278 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x278>
 1a4:	mov	x0, #0x1                   	// #1
 1a8:	str	x0, [x8]
 1ac:	mov	x0, x20
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #192
 1bc:	ret
 1c0:	ldr	x0, [sp, #136]
 1c4:	orr	x27, x0, #0x1
 1c8:	str	xzr, [sp, #136]
 1cc:	ldr	x0, [sp, #120]
 1d0:	cbnz	x0, 4ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4ac>
 1d4:	orr	x0, x27, #0x1
 1d8:	str	x0, [sp, #120]
 1dc:	ldr	x0, [sp, #136]
 1e0:	cbnz	x0, 4b4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4b4>
 1e4:	ldr	x0, [sp, #144]
 1e8:	cbz	x0, 1f8 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1f8>
 1ec:	ldr	x1, [x0]
 1f0:	ldr	x1, [x1, #8]
 1f4:	blr	x1
 1f8:	ldr	x0, [sp, #128]
 1fc:	cbnz	x0, 4bc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4bc>
 200:	add	x22, x22, #0x8
 204:	cmp	x24, x22
 208:	b.ne	90 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x90>  // b.any
 20c:	ldp	x25, x26, [sp, #64]
 210:	ldp	x27, x28, [sp, #80]
 214:	ldr	x0, [sp, #120]
 218:	orr	x0, x0, #0x1
 21c:	str	x0, [x20]
 220:	ldr	x0, [x19]
 224:	ldr	x1, [x0, #8]
 228:	mov	x0, x19
 22c:	blr	x1
 230:	ldp	x23, x24, [sp, #48]
 234:	b	1ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1ac>
 238:	orr	x27, x0, #0x1
 23c:	str	xzr, [sp, #128]
 240:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 244:	ldr	x0, [sp, #136]
 248:	and	x0, x0, #0xfffffffffffffffe
 24c:	str	x0, [sp, #184]
 250:	str	xzr, [sp, #136]
 254:	add	x1, sp, #0xb8
 258:	ldr	x0, [sp, #96]
 25c:	add	x0, x0, #0x8
 260:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 264:	ldr	x0, [sp, #184]
 268:	cbz	x0, 278 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x278>
 26c:	ldr	x1, [x0]
 270:	ldr	x1, [x1, #8]
 274:	blr	x1
 278:	ldr	x0, [sp, #128]
 27c:	orr	x27, x0, #0x1
 280:	str	xzr, [sp, #128]
 284:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 288:	ldr	x0, [sp, #136]
 28c:	ands	x0, x0, #0xfffffffffffffffe
 290:	b.eq	3c4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x3c4>  // b.none
 294:	ldr	x1, [x0]
 298:	ldr	x2, [x1, #48]
 29c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 2a0:	ldr	x1, [x1]
 2a4:	blr	x2
 2a8:	and	w0, w0, #0xff
 2ac:	cbz	w0, 3c4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x3c4>
 2b0:	ldr	x0, [sp, #136]
 2b4:	and	x0, x0, #0xfffffffffffffffe
 2b8:	mov	x1, x0
 2bc:	ldr	x4, [x1, #8]!
 2c0:	str	x4, [sp, #96]
 2c4:	ldr	x3, [sp, #128]
 2c8:	and	x3, x3, #0xfffffffffffffffe
 2cc:	str	x3, [sp, #176]
 2d0:	str	xzr, [sp, #128]
 2d4:	ldr	x2, [x1, #8]
 2d8:	ldr	x1, [x1, #16]
 2dc:	cmp	x2, x1
 2e0:	b.eq	3b0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x3b0>  // b.none
 2e4:	cmp	x4, x2
 2e8:	b.eq	344 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x344>  // b.none
 2ec:	ldur	x1, [x2, #-8]
 2f0:	stur	xzr, [x2, #-8]
 2f4:	str	x1, [x2]
 2f8:	ldr	x27, [x0, #16]
 2fc:	add	x1, x27, #0x8
 300:	str	x1, [x0, #16]
 304:	sub	x0, x27, #0x8
 308:	ldr	x1, [sp, #96]
 30c:	sub	x0, x0, x1
 310:	asr	x28, x0, #3
 314:	cmp	x0, #0x0
 318:	b.gt	388 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x388>
 31c:	ldr	x1, [sp, #176]
 320:	str	xzr, [sp, #176]
 324:	ldr	x2, [sp, #96]
 328:	ldr	x0, [x2]
 32c:	str	x1, [x2]
 330:	cbz	x0, 358 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x358>
 334:	ldr	x1, [x0]
 338:	ldr	x1, [x1, #8]
 33c:	blr	x1
 340:	b	358 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x358>
 344:	str	xzr, [sp, #176]
 348:	str	x3, [x2]
 34c:	ldr	x1, [x0, #16]
 350:	add	x1, x1, #0x8
 354:	str	x1, [x0, #16]
 358:	ldr	x0, [sp, #176]
 35c:	cbz	x0, 36c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x36c>
 360:	ldr	x1, [x0]
 364:	ldr	x1, [x1, #8]
 368:	blr	x1
 36c:	ldr	x0, [sp, #136]
 370:	orr	x27, x0, #0x1
 374:	str	xzr, [sp, #136]
 378:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 37c:	sub	x28, x28, #0x1
 380:	cmp	x28, #0x0
 384:	b.le	31c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x31c>
 388:	sub	x27, x27, #0x8
 38c:	ldur	x1, [x27, #-8]
 390:	stur	xzr, [x27, #-8]
 394:	ldr	x0, [x27]
 398:	str	x1, [x27]
 39c:	cbz	x0, 37c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x37c>
 3a0:	ldr	x1, [x0]
 3a4:	ldr	x1, [x1, #8]
 3a8:	blr	x1
 3ac:	b	37c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x37c>
 3b0:	add	x2, sp, #0xb0
 3b4:	ldr	x1, [sp, #96]
 3b8:	add	x0, x0, #0x8
 3bc:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 3c0:	b	358 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x358>
 3c4:	ldr	x0, [sp, #128]
 3c8:	and	x0, x0, #0xfffffffffffffffe
 3cc:	str	x0, [sp, #168]
 3d0:	str	xzr, [sp, #128]
 3d4:	ldr	x0, [sp, #136]
 3d8:	and	x0, x0, #0xfffffffffffffffe
 3dc:	str	x0, [sp, #160]
 3e0:	str	xzr, [sp, #136]
 3e4:	mov	x0, #0x20                  	// #32
 3e8:	bl	0 <_Znwm>
 3ec:	mov	x27, x0
 3f0:	mov	x28, x0
 3f4:	str	x23, [x28], #8
 3f8:	str	xzr, [x0, #8]
 3fc:	str	xzr, [x28, #8]
 400:	str	xzr, [x28, #16]
 404:	ldr	x0, [sp, #168]
 408:	ldr	x1, [x0]
 40c:	ldr	x2, [x1, #48]
 410:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 414:	ldr	x1, [x1]
 418:	blr	x2
 41c:	and	w0, w0, #0xff
 420:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x48c>
 424:	ldr	x0, [sp, #160]
 428:	ldr	x1, [x0]
 42c:	ldr	x2, [x1, #48]
 430:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 434:	ldr	x1, [x1]
 438:	blr	x2
 43c:	and	w0, w0, #0xff
 440:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x48c>
 444:	add	x1, sp, #0xa8
 448:	mov	x0, x28
 44c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 450:	add	x1, sp, #0xa0
 454:	mov	x0, x28
 458:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 45c:	orr	x27, x27, #0x1
 460:	ldr	x0, [sp, #160]
 464:	cbz	x0, 474 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x474>
 468:	ldr	x1, [x0]
 46c:	ldr	x1, [x1, #8]
 470:	blr	x1
 474:	ldr	x0, [sp, #168]
 478:	cbz	x0, 1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 47c:	ldr	x1, [x0]
 480:	ldr	x1, [x1, #8]
 484:	blr	x1
 488:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 48c:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 490:	add	x3, x3, #0x0
 494:	mov	w2, #0x181                 	// #385
 498:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 49c:	add	x1, x1, #0x0
 4a0:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 4a4:	add	x0, x0, #0x0
 4a8:	bl	0 <__assert_fail>
 4ac:	add	x0, sp, #0x78
 4b0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4b4:	add	x0, sp, #0x88
 4b8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4bc:	add	x0, sp, #0x80
 4c0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4c4:	str	x19, [sp, #152]
 4c8:	mov	x8, x20
 4cc:	mov	x1, x21
 4d0:	add	x0, sp, #0x98
 4d4:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 4d8:	ldr	x0, [sp, #152]
 4dc:	cbz	x0, 1ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1ac>
 4e0:	ldr	x1, [x0]
 4e4:	ldr	x1, [x1, #8]
 4e8:	blr	x1
 4ec:	b	1ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1ac>

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0]
   c:	orr	x2, x2, #0x1
  10:	str	x2, [sp, #104]
  14:	str	xzr, [x0]
  18:	add	x8, sp, #0x60
  1c:	add	x0, sp, #0x68
  20:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  24:	ldr	x0, [sp, #96]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #96]
  38:	tst	x0, #0xfffffffffffffffe
  3c:	b.ne	54 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0x54>  // b.any
  40:	tbnz	w0, #0, 110 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0x110>
  44:	ldr	x0, [sp, #104]
  48:	cbnz	x0, 118 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0x118>
  4c:	ldp	x29, x30, [sp], #112
  50:	ret
  54:	add	x1, sp, #0x10
  58:	add	x0, sp, #0x20
  5c:	str	x0, [sp, #16]
  60:	str	xzr, [sp, #24]
  64:	strb	wzr, [sp, #32]
  68:	mov	w0, #0x1                   	// #1
  6c:	str	w0, [sp, #80]
  70:	str	xzr, [sp, #72]
  74:	str	xzr, [sp, #64]
  78:	str	xzr, [sp, #56]
  7c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  80:	ldr	x0, [x0]
  84:	add	x0, x0, #0x10
  88:	str	x0, [sp, #48]
  8c:	str	x1, [sp, #88]
  90:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  94:	add	x1, x1, #0x0
  98:	add	x0, sp, #0x30
  9c:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  a0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  ac:	mov	x2, x0
  b0:	ldr	x1, [sp, #96]
  b4:	ands	x0, x1, #0xfffffffffffffffe
  b8:	b.eq	fc <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0xfc>  // b.none
  bc:	ldr	x1, [x0]
  c0:	ldr	x3, [x1, #16]
  c4:	mov	x1, x2
  c8:	blr	x3
  cc:	ldr	x1, [sp, #72]
  d0:	ldr	x0, [sp, #56]
  d4:	cmp	x1, x0
  d8:	b.eq	e4 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0xe4>  // b.none
  dc:	add	x0, sp, #0x30
  e0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  e4:	mov	w2, #0x2c9                 	// #713
  e8:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  ec:	add	x1, x1, #0x0
  f0:	ldr	x0, [sp, #88]
  f4:	ldr	x0, [x0]
  f8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  fc:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
 100:	add	x1, x1, #0x0
 104:	mov	x0, x2
 108:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
 10c:	b	cc <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0xcc>
 110:	add	x0, sp, #0x60
 114:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 118:	add	x0, sp, #0x68
 11c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm15BitstreamCursor7advanceEj:

0000000000000000 <_ZN4llvm15BitstreamCursor7advanceEj>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x20, x8
  1c:	mov	x19, x0
  20:	mov	w21, w1
  24:	mov	x22, x0
  28:	add	x23, sp, #0x80
  2c:	and	w24, w1, #0x2
  30:	add	x25, sp, #0x70
  34:	ldr	w0, [x19, #32]
  38:	cbnz	w0, 68 <_ZN4llvm15BitstreamCursor7advanceEj+0x68>
  3c:	ldr	x1, [x19, #16]
  40:	ldr	x0, [x19, #8]
  44:	cmp	x1, x0
  48:	b.cc	68 <_ZN4llvm15BitstreamCursor7advanceEj+0x68>  // b.lo, b.ul, b.last
  4c:	ldrb	w0, [x20, #8]
  50:	and	w0, w0, #0xfffffffe
  54:	orr	w0, w0, #0x2
  58:	strb	w0, [x20, #8]
  5c:	str	wzr, [x20]
  60:	str	wzr, [x20, #4]
  64:	b	108 <_ZN4llvm15BitstreamCursor7advanceEj+0x108>
  68:	mov	x26, x22
  6c:	mov	x8, x23
  70:	ldr	w1, [x19, #36]
  74:	mov	x0, x22
  78:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  7c:	ldrb	w0, [sp, #136]
  80:	and	w2, w0, #0x1
  84:	ldrb	w1, [sp, #88]
  88:	bfxil	w1, w2, #0, #1
  8c:	orr	w1, w1, #0x2
  90:	strb	w1, [sp, #88]
  94:	and	w0, w0, #0xfffffffd
  98:	strb	w0, [sp, #136]
  9c:	cbnz	w2, 124 <_ZN4llvm15BitstreamCursor7advanceEj+0x124>
  a0:	ldr	x0, [sp, #128]
  a4:	mov	w2, w0
  a8:	str	w0, [sp, #80]
  ac:	and	x1, x1, #0xff
  b0:	and	w1, w1, #0xfffffffd
  b4:	strb	w1, [sp, #88]
  b8:	cbz	w0, 174 <_ZN4llvm15BitstreamCursor7advanceEj+0x174>
  bc:	cmp	w0, #0x1
  c0:	b.eq	3f8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3f8>  // b.none
  c4:	cmp	w0, #0x2
  c8:	b.ne	634 <_ZN4llvm15BitstreamCursor7advanceEj+0x634>  // b.any
  cc:	cbnz	w24, 634 <_ZN4llvm15BitstreamCursor7advanceEj+0x634>
  d0:	mov	x8, x25
  d4:	mov	x0, x22
  d8:	bl	0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
  dc:	ldr	x0, [sp, #112]
  e0:	ands	x1, x0, #0xfffffffffffffffe
  e4:	cset	x0, ne  // ne = any
  e8:	orr	x0, x0, x1
  ec:	str	x0, [sp, #112]
  f0:	ands	x1, x0, #0xfffffffffffffffe
  f4:	b.eq	628 <_ZN4llvm15BitstreamCursor7advanceEj+0x628>  // b.none
  f8:	ldrb	w0, [x20, #8]
  fc:	orr	w0, w0, #0x3
 100:	strb	w0, [x20, #8]
 104:	str	x1, [x20]
 108:	mov	x0, x20
 10c:	ldp	x19, x20, [sp, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x25, x26, [sp, #64]
 11c:	ldp	x29, x30, [sp], #192
 120:	ret
 124:	ldr	x0, [sp, #128]
 128:	ldrb	w1, [sp, #88]
 12c:	and	w1, w1, #0xfffffffd
 130:	strb	w1, [sp, #88]
 134:	str	xzr, [sp, #80]
 138:	ldrb	w1, [x20, #8]
 13c:	orr	w1, w1, #0x3
 140:	strb	w1, [x20, #8]
 144:	ands	x0, x0, #0xfffffffffffffffe
 148:	cbz	x0, 154 <_ZN4llvm15BitstreamCursor7advanceEj+0x154>
 14c:	str	x0, [x20]
 150:	b	674 <_ZN4llvm15BitstreamCursor7advanceEj+0x674>
 154:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x1ce                 	// #462
 160:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 164:	add	x1, x1, #0x0
 168:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 16c:	add	x0, x0, #0x0
 170:	bl	0 <__assert_fail>
 174:	tbz	w21, #0, 1a4 <_ZN4llvm15BitstreamCursor7advanceEj+0x1a4>
 178:	ldrb	w0, [x20, #8]
 17c:	and	w0, w0, #0xfffffffe
 180:	orr	w0, w0, #0x2
 184:	strb	w0, [x20, #8]
 188:	mov	w0, #0x1                   	// #1
 18c:	str	w0, [x20]
 190:	str	wzr, [x20, #4]
 194:	ldrb	w0, [sp, #88]
 198:	tbz	w0, #1, 66c <_ZN4llvm15BitstreamCursor7advanceEj+0x66c>
 19c:	add	x0, sp, #0x50
 1a0:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 1a4:	ldr	w0, [x19, #72]
 1a8:	cbz	w0, 654 <_ZN4llvm15BitstreamCursor7advanceEj+0x654>
 1ac:	ldr	w1, [x19, #32]
 1b0:	cmp	w1, #0x1f
 1b4:	b.hi	21c <_ZN4llvm15BitstreamCursor7advanceEj+0x21c>  // b.pmore
 1b8:	str	wzr, [x19, #32]
 1bc:	ubfiz	x0, x0, #5, #32
 1c0:	sub	x0, x0, #0x20
 1c4:	ldr	x1, [x19, #64]
 1c8:	add	x2, x1, x0
 1cc:	ldr	w0, [x1, x0]
 1d0:	str	w0, [x19, #36]
 1d4:	ldr	x26, [x19, #40]
 1d8:	ldr	x23, [x19, #48]
 1dc:	ldr	x3, [x2, #8]
 1e0:	str	x3, [x19, #40]
 1e4:	ldr	x3, [x2, #16]
 1e8:	str	x3, [x19, #48]
 1ec:	ldr	x3, [x2, #24]
 1f0:	str	x3, [x19, #56]
 1f4:	str	xzr, [x2, #8]
 1f8:	str	xzr, [x2, #16]
 1fc:	str	xzr, [x2, #24]
 200:	cmp	x26, x23
 204:	b.eq	2d4 <_ZN4llvm15BitstreamCursor7advanceEj+0x2d4>  // b.none
 208:	mov	x21, x26
 20c:	adrp	x25, 0 <__pthread_key_create>
 210:	ldr	x24, [x25]
 214:	mov	x25, x24
 218:	b	25c <_ZN4llvm15BitstreamCursor7advanceEj+0x25c>
 21c:	sub	w1, w1, #0x20
 220:	ldr	x2, [x19, #24]
 224:	lsr	x1, x2, x1
 228:	str	x1, [x19, #24]
 22c:	mov	w1, #0x20                  	// #32
 230:	str	w1, [x19, #32]
 234:	b	1bc <_ZN4llvm15BitstreamCursor7advanceEj+0x1bc>
 238:	ldaxr	w0, [x1]
 23c:	sub	w2, w0, #0x1
 240:	stlxr	w3, w2, [x1]
 244:	cbnz	w3, 238 <_ZN4llvm15BitstreamCursor7advanceEj+0x238>
 248:	cmp	w0, #0x1
 24c:	b.eq	280 <_ZN4llvm15BitstreamCursor7advanceEj+0x280>  // b.none
 250:	add	x21, x21, #0x10
 254:	cmp	x23, x21
 258:	b.eq	2d4 <_ZN4llvm15BitstreamCursor7advanceEj+0x2d4>  // b.none
 25c:	ldr	x22, [x21, #8]
 260:	cbz	x22, 250 <_ZN4llvm15BitstreamCursor7advanceEj+0x250>
 264:	cbz	x24, 270 <_ZN4llvm15BitstreamCursor7advanceEj+0x270>
 268:	add	x1, x22, #0x8
 26c:	b	238 <_ZN4llvm15BitstreamCursor7advanceEj+0x238>
 270:	ldr	w0, [x22, #8]
 274:	sub	w1, w0, #0x1
 278:	str	w1, [x22, #8]
 27c:	b	248 <_ZN4llvm15BitstreamCursor7advanceEj+0x248>
 280:	ldr	x0, [x22]
 284:	ldr	x1, [x0, #16]
 288:	mov	x0, x22
 28c:	blr	x1
 290:	cbz	x25, 2c4 <_ZN4llvm15BitstreamCursor7advanceEj+0x2c4>
 294:	add	x1, x22, #0xc
 298:	ldaxr	w0, [x1]
 29c:	sub	w2, w0, #0x1
 2a0:	stlxr	w3, w2, [x1]
 2a4:	cbnz	w3, 298 <_ZN4llvm15BitstreamCursor7advanceEj+0x298>
 2a8:	cmp	w0, #0x1
 2ac:	b.ne	250 <_ZN4llvm15BitstreamCursor7advanceEj+0x250>  // b.any
 2b0:	ldr	x0, [x22]
 2b4:	ldr	x1, [x0, #24]
 2b8:	mov	x0, x22
 2bc:	blr	x1
 2c0:	b	250 <_ZN4llvm15BitstreamCursor7advanceEj+0x250>
 2c4:	ldr	w0, [x22, #12]
 2c8:	sub	w1, w0, #0x1
 2cc:	str	w1, [x22, #12]
 2d0:	b	2a8 <_ZN4llvm15BitstreamCursor7advanceEj+0x2a8>
 2d4:	cbz	x26, 2e0 <_ZN4llvm15BitstreamCursor7advanceEj+0x2e0>
 2d8:	mov	x0, x26
 2dc:	bl	0 <_ZdlPv>
 2e0:	ldr	w0, [x19, #72]
 2e4:	mov	w1, w0
 2e8:	sub	x1, x1, #0x1
 2ec:	ldr	w2, [x19, #76]
 2f0:	cmp	x1, x2
 2f4:	b.hi	32c <_ZN4llvm15BitstreamCursor7advanceEj+0x32c>  // b.pmore
 2f8:	sub	w0, w0, #0x1
 2fc:	str	w0, [x19, #72]
 300:	ubfiz	x0, x0, #5, #32
 304:	ldr	x23, [x19, #64]
 308:	add	x23, x23, x0
 30c:	ldr	x19, [x23, #8]
 310:	ldr	x22, [x23, #16]
 314:	cmp	x19, x22
 318:	b.eq	3e8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3e8>  // b.none
 31c:	adrp	x25, 0 <__pthread_key_create>
 320:	ldr	x24, [x25]
 324:	mov	x25, x24
 328:	b	370 <_ZN4llvm15BitstreamCursor7advanceEj+0x370>
 32c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 330:	add	x3, x3, #0x0
 334:	mov	w2, #0x43                  	// #67
 338:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 33c:	add	x1, x1, #0x0
 340:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 344:	add	x0, x0, #0x0
 348:	bl	0 <__assert_fail>
 34c:	ldaxr	w0, [x1]
 350:	sub	w2, w0, #0x1
 354:	stlxr	w3, w2, [x1]
 358:	cbnz	w3, 34c <_ZN4llvm15BitstreamCursor7advanceEj+0x34c>
 35c:	cmp	w0, #0x1
 360:	b.eq	394 <_ZN4llvm15BitstreamCursor7advanceEj+0x394>  // b.none
 364:	add	x19, x19, #0x10
 368:	cmp	x22, x19
 36c:	b.eq	3e8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3e8>  // b.none
 370:	ldr	x21, [x19, #8]
 374:	cbz	x21, 364 <_ZN4llvm15BitstreamCursor7advanceEj+0x364>
 378:	cbz	x24, 384 <_ZN4llvm15BitstreamCursor7advanceEj+0x384>
 37c:	add	x1, x21, #0x8
 380:	b	34c <_ZN4llvm15BitstreamCursor7advanceEj+0x34c>
 384:	ldr	w0, [x21, #8]
 388:	sub	w1, w0, #0x1
 38c:	str	w1, [x21, #8]
 390:	b	35c <_ZN4llvm15BitstreamCursor7advanceEj+0x35c>
 394:	ldr	x0, [x21]
 398:	ldr	x1, [x0, #16]
 39c:	mov	x0, x21
 3a0:	blr	x1
 3a4:	cbz	x25, 3d8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3d8>
 3a8:	add	x1, x21, #0xc
 3ac:	ldaxr	w0, [x1]
 3b0:	sub	w2, w0, #0x1
 3b4:	stlxr	w3, w2, [x1]
 3b8:	cbnz	w3, 3ac <_ZN4llvm15BitstreamCursor7advanceEj+0x3ac>
 3bc:	cmp	w0, #0x1
 3c0:	b.ne	364 <_ZN4llvm15BitstreamCursor7advanceEj+0x364>  // b.any
 3c4:	ldr	x0, [x21]
 3c8:	ldr	x1, [x0, #24]
 3cc:	mov	x0, x21
 3d0:	blr	x1
 3d4:	b	364 <_ZN4llvm15BitstreamCursor7advanceEj+0x364>
 3d8:	ldr	w0, [x21, #12]
 3dc:	sub	w1, w0, #0x1
 3e0:	str	w1, [x21, #12]
 3e4:	b	3bc <_ZN4llvm15BitstreamCursor7advanceEj+0x3bc>
 3e8:	ldr	x0, [x23, #8]
 3ec:	cbz	x0, 178 <_ZN4llvm15BitstreamCursor7advanceEj+0x178>
 3f0:	bl	0 <_ZdlPv>
 3f4:	b	178 <_ZN4llvm15BitstreamCursor7advanceEj+0x178>
 3f8:	add	x8, sp, #0xb0
 3fc:	mov	w1, #0x8                   	// #8
 400:	mov	x0, x22
 404:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 408:	ldrb	w0, [sp, #184]
 40c:	and	w2, w0, #0x1
 410:	ldrb	w1, [sp, #120]
 414:	bfxil	w1, w2, #0, #1
 418:	orr	w1, w1, #0x2
 41c:	strb	w1, [sp, #120]
 420:	and	w0, w0, #0xfffffffd
 424:	strb	w0, [sp, #184]
 428:	cbnz	w2, 45c <_ZN4llvm15BitstreamCursor7advanceEj+0x45c>
 42c:	ldr	x1, [sp, #176]
 430:	str	w1, [sp, #112]
 434:	ldrb	w0, [sp, #120]
 438:	and	w0, w0, #0xfffffffd
 43c:	strb	w0, [sp, #120]
 440:	tst	w1, #0x80
 444:	b.eq	4b4 <_ZN4llvm15BitstreamCursor7advanceEj+0x4b4>  // b.none
 448:	and	w19, w1, #0x7f
 44c:	mov	w22, #0x0                   	// #0
 450:	add	x24, sp, #0x90
 454:	mov	w23, #0x8                   	// #8
 458:	b	538 <_ZN4llvm15BitstreamCursor7advanceEj+0x538>
 45c:	ldrb	w0, [sp, #104]
 460:	orr	w0, w0, #0x1
 464:	strb	w0, [sp, #104]
 468:	str	xzr, [sp, #112]
 46c:	ldr	x0, [sp, #176]
 470:	str	x0, [sp, #96]
 474:	ldr	x0, [sp, #112]
 478:	cbz	x0, 488 <_ZN4llvm15BitstreamCursor7advanceEj+0x488>
 47c:	ldr	x1, [x0]
 480:	ldr	x1, [x1, #8]
 484:	blr	x1
 488:	ldrb	w0, [sp, #104]
 48c:	tbnz	w0, #0, 5e8 <_ZN4llvm15BitstreamCursor7advanceEj+0x5e8>
 490:	ldrb	w0, [x20, #8]
 494:	and	w0, w0, #0xfffffffe
 498:	orr	w0, w0, #0x2
 49c:	strb	w0, [x20, #8]
 4a0:	mov	w0, #0x2                   	// #2
 4a4:	str	w0, [x20]
 4a8:	ldr	w0, [sp, #96]
 4ac:	str	w0, [x20, #4]
 4b0:	b	108 <_ZN4llvm15BitstreamCursor7advanceEj+0x108>
 4b4:	ldrb	w0, [sp, #104]
 4b8:	and	w0, w0, #0xfffffffe
 4bc:	strb	w0, [sp, #104]
 4c0:	str	w1, [sp, #96]
 4c4:	b	488 <_ZN4llvm15BitstreamCursor7advanceEj+0x488>
 4c8:	ldrb	w0, [sp, #104]
 4cc:	and	w0, w0, #0xfffffffe
 4d0:	strb	w0, [sp, #104]
 4d4:	str	w19, [sp, #96]
 4d8:	ldrb	w0, [sp, #120]
 4dc:	tbz	w0, #0, 488 <_ZN4llvm15BitstreamCursor7advanceEj+0x488>
 4e0:	b	474 <_ZN4llvm15BitstreamCursor7advanceEj+0x474>
 4e4:	ldr	x0, [sp, #144]
 4e8:	str	xzr, [sp, #144]
 4ec:	str	x0, [sp, #160]
 4f0:	b	564 <_ZN4llvm15BitstreamCursor7advanceEj+0x564>
 4f4:	add	x0, sp, #0x70
 4f8:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 4fc:	ldr	x0, [sp, #160]
 500:	str	x0, [sp, #112]
 504:	b	5a4 <_ZN4llvm15BitstreamCursor7advanceEj+0x5a4>
 508:	add	x0, sp, #0x90
 50c:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 510:	ldrb	w0, [sp, #120]
 514:	bfi	w0, w21, #1, #1
 518:	strb	w0, [sp, #120]
 51c:	cbnz	w21, 5cc <_ZN4llvm15BitstreamCursor7advanceEj+0x5cc>
 520:	add	w22, w22, #0x7
 524:	ldr	w1, [sp, #112]
 528:	and	w0, w1, #0x7f
 52c:	lsl	w0, w0, w22
 530:	orr	w19, w19, w0
 534:	tbz	w1, #7, 4c8 <_ZN4llvm15BitstreamCursor7advanceEj+0x4c8>
 538:	mov	x8, x24
 53c:	mov	w1, w23
 540:	mov	x0, x26
 544:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 548:	ldrb	w0, [sp, #152]
 54c:	and	w1, w0, #0xfffffffd
 550:	strb	w1, [sp, #152]
 554:	and	w21, w0, #0x1
 558:	tbnz	w0, #0, 4e4 <_ZN4llvm15BitstreamCursor7advanceEj+0x4e4>
 55c:	ldr	x0, [sp, #144]
 560:	str	w0, [sp, #160]
 564:	ldrb	w0, [sp, #120]
 568:	tbnz	w0, #1, 4f4 <_ZN4llvm15BitstreamCursor7advanceEj+0x4f4>
 56c:	ldrb	w0, [sp, #120]
 570:	tbz	w0, #0, 588 <_ZN4llvm15BitstreamCursor7advanceEj+0x588>
 574:	ldr	x0, [sp, #112]
 578:	cbz	x0, 588 <_ZN4llvm15BitstreamCursor7advanceEj+0x588>
 57c:	ldr	x1, [x0]
 580:	ldr	x1, [x1, #8]
 584:	blr	x1
 588:	ldrb	w0, [sp, #120]
 58c:	bfxil	w0, w21, #0, #1
 590:	orr	w0, w0, #0x2
 594:	strb	w0, [sp, #120]
 598:	cbnz	w21, 4fc <_ZN4llvm15BitstreamCursor7advanceEj+0x4fc>
 59c:	ldr	w0, [sp, #160]
 5a0:	str	w0, [sp, #112]
 5a4:	ldrb	w0, [sp, #152]
 5a8:	tbnz	w0, #1, 508 <_ZN4llvm15BitstreamCursor7advanceEj+0x508>
 5ac:	ldrb	w0, [sp, #152]
 5b0:	tbz	w0, #0, 510 <_ZN4llvm15BitstreamCursor7advanceEj+0x510>
 5b4:	ldr	x0, [sp, #144]
 5b8:	cbz	x0, 510 <_ZN4llvm15BitstreamCursor7advanceEj+0x510>
 5bc:	ldr	x1, [x0]
 5c0:	ldr	x1, [x1, #8]
 5c4:	blr	x1
 5c8:	b	510 <_ZN4llvm15BitstreamCursor7advanceEj+0x510>
 5cc:	ldrb	w0, [sp, #104]
 5d0:	orr	w0, w0, #0x1
 5d4:	strb	w0, [sp, #104]
 5d8:	ldr	x0, [sp, #112]
 5dc:	str	xzr, [sp, #112]
 5e0:	str	x0, [sp, #96]
 5e4:	b	474 <_ZN4llvm15BitstreamCursor7advanceEj+0x474>
 5e8:	ldr	x0, [sp, #96]
 5ec:	ldrb	w1, [x20, #8]
 5f0:	orr	w1, w1, #0x3
 5f4:	strb	w1, [x20, #8]
 5f8:	ands	x0, x0, #0xfffffffffffffffe
 5fc:	cbz	x0, 608 <_ZN4llvm15BitstreamCursor7advanceEj+0x608>
 600:	str	x0, [x20]
 604:	b	108 <_ZN4llvm15BitstreamCursor7advanceEj+0x108>
 608:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 60c:	add	x3, x3, #0x0
 610:	mov	w2, #0x1ce                 	// #462
 614:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 618:	add	x1, x1, #0x0
 61c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 620:	add	x0, x0, #0x0
 624:	bl	0 <__assert_fail>
 628:	tbz	w0, #0, 34 <_ZN4llvm15BitstreamCursor7advanceEj+0x34>
 62c:	add	x0, sp, #0x70
 630:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 634:	ldrb	w0, [x20, #8]
 638:	and	w0, w0, #0xfffffffe
 63c:	orr	w0, w0, #0x2
 640:	strb	w0, [x20, #8]
 644:	mov	w0, #0x3                   	// #3
 648:	str	w0, [x20]
 64c:	str	w2, [x20, #4]
 650:	b	108 <_ZN4llvm15BitstreamCursor7advanceEj+0x108>
 654:	ldrb	w0, [x20, #8]
 658:	and	w0, w0, #0xfffffffe
 65c:	orr	w0, w0, #0x2
 660:	strb	w0, [x20, #8]
 664:	str	wzr, [x20]
 668:	str	wzr, [x20, #4]
 66c:	ldrb	w0, [sp, #88]
 670:	tbz	w0, #0, 108 <_ZN4llvm15BitstreamCursor7advanceEj+0x108>
 674:	ldr	x0, [sp, #80]
 678:	cbz	x0, 108 <_ZN4llvm15BitstreamCursor7advanceEj+0x108>
 67c:	ldr	x1, [x0]
 680:	ldr	x1, [x1, #8]
 684:	blr	x1
 688:	b	108 <_ZN4llvm15BitstreamCursor7advanceEj+0x108>

Disassembly of section .text._ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt5arrayIcLm4EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #32]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #32]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_8OptionalINS_18BitstreamBlockInfoEEEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x24, x0
  18:	str	x1, [sp, #104]
  1c:	mov	x19, x1
  20:	mov	x0, #0xffffffff            	// #4294967295
  24:	cmp	x1, x0
  28:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x118>  // b.pmore
  2c:	ldr	w0, [x24, #12]
  30:	add	x0, x0, #0x2
  34:	orr	x0, x0, x0, lsr #1
  38:	orr	x0, x0, x0, lsr #2
  3c:	orr	x0, x0, x0, lsr #4
  40:	orr	x0, x0, x0, lsr #8
  44:	orr	x1, x0, x0, lsr #16
  48:	orr	x0, x1, x0, lsr #32
  4c:	add	x0, x0, #0x1
  50:	str	x0, [sp, #112]
  54:	cmp	x19, x0
  58:	add	x0, sp, #0x70
  5c:	add	x1, sp, #0x68
  60:	csel	x0, x0, x1, ls  // ls = plast
  64:	mov	x1, #0xffffffff            	// #4294967295
  68:	str	x1, [sp, #120]
  6c:	ldr	x2, [x0]
  70:	cmp	x2, x1
  74:	add	x1, sp, #0x78
  78:	csel	x0, x1, x0, hi  // hi = pmore
  7c:	ldr	x26, [x0]
  80:	str	x26, [sp, #112]
  84:	lsl	x19, x26, #5
  88:	mov	x0, x19
  8c:	bl	0 <malloc>
  90:	mov	x25, x0
  94:	cbz	x0, 12c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x12c>
  98:	ldr	x1, [x24]
  9c:	ldr	w3, [x24, #8]
  a0:	add	x3, x1, x3, lsl #5
  a4:	cmp	x3, x1
  a8:	b.eq	220 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x220>  // b.none
  ac:	stp	x21, x22, [sp, #32]
  b0:	stp	x27, x28, [sp, #80]
  b4:	mov	x0, x25
  b8:	ldr	w2, [x1]
  bc:	str	w2, [x0]
  c0:	ldr	x2, [x1, #8]
  c4:	str	x2, [x0, #8]
  c8:	ldr	x2, [x1, #16]
  cc:	str	x2, [x0, #16]
  d0:	ldr	x2, [x1, #24]
  d4:	str	x2, [x0, #24]
  d8:	str	xzr, [x1, #24]
  dc:	str	xzr, [x1, #16]
  e0:	str	xzr, [x1, #8]
  e4:	add	x0, x0, #0x20
  e8:	add	x1, x1, #0x20
  ec:	cmp	x3, x1
  f0:	b.ne	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xb8>  // b.any
  f4:	ldr	x27, [x24]
  f8:	ldr	w21, [x24, #8]
  fc:	add	x21, x27, x21, lsl #5
 100:	cmp	x21, x27
 104:	b.eq	250 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x250>  // b.none
 108:	adrp	x23, 0 <__pthread_key_create>
 10c:	ldr	x28, [x23]
 110:	mov	x23, x28
 114:	b	200 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x200>
 118:	mov	w1, #0x1                   	// #1
 11c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	2c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x2c>
 12c:	cbnz	x19, 140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>
 130:	mov	x0, #0x1                   	// #1
 134:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
 138:	mov	x25, x0
 13c:	b	98 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x98>
 140:	mov	w1, #0x1                   	// #1
 144:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 150:	b	98 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x98>
 154:	add	x1, x19, #0x8
 158:	ldaxr	w0, [x1]
 15c:	sub	w2, w0, #0x1
 160:	stlxr	w3, w2, [x1]
 164:	cbnz	w3, 158 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x158>
 168:	cmp	w0, #0x1
 16c:	b.eq	198 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x198>  // b.none
 170:	add	x20, x20, #0x10
 174:	cmp	x22, x20
 178:	b.eq	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1ec>  // b.none
 17c:	ldr	x19, [x20, #8]
 180:	cbz	x19, 170 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x170>
 184:	cbnz	x28, 154 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x154>
 188:	ldr	w0, [x19, #8]
 18c:	sub	w1, w0, #0x1
 190:	str	w1, [x19, #8]
 194:	b	168 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x168>
 198:	ldr	x0, [x19]
 19c:	ldr	x1, [x0, #16]
 1a0:	mov	x0, x19
 1a4:	blr	x1
 1a8:	cbz	x23, 1dc <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1dc>
 1ac:	add	x1, x19, #0xc
 1b0:	ldaxr	w0, [x1]
 1b4:	sub	w2, w0, #0x1
 1b8:	stlxr	w3, w2, [x1]
 1bc:	cbnz	w3, 1b0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1b0>
 1c0:	cmp	w0, #0x1
 1c4:	b.ne	170 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x170>  // b.any
 1c8:	ldr	x0, [x19]
 1cc:	ldr	x1, [x0, #24]
 1d0:	mov	x0, x19
 1d4:	blr	x1
 1d8:	b	170 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x170>
 1dc:	ldr	w0, [x19, #12]
 1e0:	sub	w1, w0, #0x1
 1e4:	str	w1, [x19, #12]
 1e8:	b	1c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1c0>
 1ec:	ldr	x0, [x21, #8]
 1f0:	cbz	x0, 1f8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1f8>
 1f4:	bl	0 <_ZdlPv>
 1f8:	cmp	x21, x27
 1fc:	b.eq	218 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x218>  // b.none
 200:	sub	x21, x21, #0x20
 204:	ldr	x20, [x21, #8]
 208:	ldr	x22, [x21, #16]
 20c:	cmp	x20, x22
 210:	b.ne	17c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x17c>  // b.any
 214:	b	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1ec>
 218:	ldp	x21, x22, [sp, #32]
 21c:	ldp	x27, x28, [sp, #80]
 220:	mov	x1, x24
 224:	ldr	x0, [x1], #16
 228:	cmp	x0, x1
 22c:	b.eq	234 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x234>  // b.none
 230:	bl	0 <free>
 234:	str	x25, [x24]
 238:	str	w26, [x24, #12]
 23c:	ldp	x19, x20, [sp, #16]
 240:	ldp	x23, x24, [sp, #48]
 244:	ldp	x25, x26, [sp, #64]
 248:	ldp	x29, x30, [sp], #128
 24c:	ret
 250:	ldp	x21, x22, [sp, #32]
 254:	ldp	x27, x28, [sp, #80]
 258:	b	220 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x220>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x0
  10:	cmp	x0, x1
  14:	b.eq	16c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x16c>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	stp	x27, x28, [sp, #80]
  28:	mov	x23, x1
  2c:	mov	x27, x1
  30:	ldr	x21, [x27], #16
  34:	cmp	x27, x21
  38:	b.eq	17c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x17c>  // b.none
  3c:	ldr	x26, [x0]
  40:	ldr	w20, [x0, #8]
  44:	add	x20, x26, x20, lsl #5
  48:	cmp	x26, x20
  4c:	b.eq	124 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x124>  // b.none
  50:	adrp	x25, 0 <__pthread_key_create>
  54:	ldr	x28, [x25]
  58:	mov	x25, x28
  5c:	b	10c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x10c>
  60:	add	x1, x19, #0x8
  64:	ldaxr	w0, [x1]
  68:	sub	w2, w0, #0x1
  6c:	stlxr	w3, w2, [x1]
  70:	cbnz	w3, 64 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x64>
  74:	cmp	w0, #0x1
  78:	b.eq	a4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0xa4>  // b.none
  7c:	add	x21, x21, #0x10
  80:	cmp	x24, x21
  84:	b.eq	f8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0xf8>  // b.none
  88:	ldr	x19, [x21, #8]
  8c:	cbz	x19, 7c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x7c>
  90:	cbnz	x28, 60 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x60>
  94:	ldr	w0, [x19, #8]
  98:	sub	w1, w0, #0x1
  9c:	str	w1, [x19, #8]
  a0:	b	74 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x74>
  a4:	ldr	x0, [x19]
  a8:	ldr	x1, [x0, #16]
  ac:	mov	x0, x19
  b0:	blr	x1
  b4:	cbz	x25, e8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0xe8>
  b8:	add	x1, x19, #0xc
  bc:	ldaxr	w0, [x1]
  c0:	sub	w2, w0, #0x1
  c4:	stlxr	w3, w2, [x1]
  c8:	cbnz	w3, bc <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0xbc>
  cc:	cmp	w0, #0x1
  d0:	b.ne	7c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x7c>  // b.any
  d4:	ldr	x0, [x19]
  d8:	ldr	x1, [x0, #24]
  dc:	mov	x0, x19
  e0:	blr	x1
  e4:	b	7c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x7c>
  e8:	ldr	w0, [x19, #12]
  ec:	sub	w1, w0, #0x1
  f0:	str	w1, [x19, #12]
  f4:	b	cc <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0xcc>
  f8:	ldr	x0, [x20, #8]
  fc:	cbz	x0, 104 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x104>
 100:	bl	0 <_ZdlPv>
 104:	cmp	x26, x20
 108:	b.eq	124 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x124>  // b.none
 10c:	sub	x20, x20, #0x20
 110:	ldr	x21, [x20, #8]
 114:	ldr	x24, [x20, #16]
 118:	cmp	x21, x24
 11c:	b.ne	88 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x88>  // b.any
 120:	b	f8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0xf8>
 124:	mov	x1, x22
 128:	ldr	x0, [x1], #16
 12c:	cmp	x0, x1
 130:	b.eq	138 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x138>  // b.none
 134:	bl	0 <free>
 138:	ldr	x0, [x23]
 13c:	str	x0, [x22]
 140:	ldr	w0, [x23, #8]
 144:	str	w0, [x22, #8]
 148:	ldr	w0, [x23, #12]
 14c:	str	w0, [x22, #12]
 150:	str	x27, [x23]
 154:	str	wzr, [x23, #12]
 158:	str	wzr, [x23, #8]
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x23, x24, [sp, #48]
 164:	ldp	x25, x26, [sp, #64]
 168:	ldp	x27, x28, [sp, #80]
 16c:	mov	x0, x22
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x29, x30, [sp], #144
 178:	ret
 17c:	ldr	w0, [x1, #8]
 180:	str	w0, [sp, #132]
 184:	mov	w1, w0
 188:	str	x1, [sp, #112]
 18c:	ldr	w24, [x22, #8]
 190:	cmp	x24, w0, uxtw
 194:	b.cc	4e0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x4e0>  // b.lo, b.ul, b.last
 198:	ldr	x28, [x22]
 19c:	cbz	x1, 8c0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x8c0>
 1a0:	lsl	x0, x1, #5
 1a4:	str	x0, [sp, #136]
 1a8:	add	x0, x21, x0
 1ac:	str	x0, [sp, #120]
 1b0:	mov	x24, x28
 1b4:	adrp	x0, 0 <__pthread_key_create>
 1b8:	ldr	x26, [x0]
 1bc:	str	x26, [sp, #104]
 1c0:	b	280 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x280>
 1c4:	add	x1, x19, #0x8
 1c8:	ldaxr	w0, [x1]
 1cc:	sub	w2, w0, #0x1
 1d0:	stlxr	w3, w2, [x1]
 1d4:	cbnz	w3, 1c8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x1c8>
 1d8:	cmp	w0, #0x1
 1dc:	b.eq	208 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x208>  // b.none
 1e0:	add	x20, x20, #0x10
 1e4:	cmp	x25, x20
 1e8:	b.eq	260 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x260>  // b.none
 1ec:	ldr	x19, [x20, #8]
 1f0:	cbz	x19, 1e0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x1e0>
 1f4:	cbnz	x26, 1c4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x1c4>
 1f8:	ldr	w0, [x19, #8]
 1fc:	sub	w1, w0, #0x1
 200:	str	w1, [x19, #8]
 204:	b	1d8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x1d8>
 208:	ldr	x0, [x19]
 20c:	ldr	x1, [x0, #16]
 210:	mov	x0, x19
 214:	blr	x1
 218:	ldr	x0, [sp, #104]
 21c:	cbz	x0, 250 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x250>
 220:	add	x1, x19, #0xc
 224:	ldaxr	w0, [x1]
 228:	sub	w2, w0, #0x1
 22c:	stlxr	w3, w2, [x1]
 230:	cbnz	w3, 224 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x224>
 234:	cmp	w0, #0x1
 238:	b.ne	1e0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x1e0>  // b.any
 23c:	ldr	x0, [x19]
 240:	ldr	x1, [x0, #24]
 244:	mov	x0, x19
 248:	blr	x1
 24c:	b	1e0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x1e0>
 250:	ldr	w0, [x19, #12]
 254:	sub	w1, w0, #0x1
 258:	str	w1, [x19, #12]
 25c:	b	234 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x234>
 260:	cbz	x27, 26c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x26c>
 264:	mov	x0, x27
 268:	bl	0 <_ZdlPv>
 26c:	add	x21, x21, #0x20
 270:	add	x24, x24, #0x20
 274:	ldr	x0, [sp, #120]
 278:	cmp	x21, x0
 27c:	b.eq	2c4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x2c4>  // b.none
 280:	ldr	w0, [x21]
 284:	str	w0, [x24]
 288:	ldr	x27, [x24, #8]
 28c:	ldr	x25, [x24, #16]
 290:	ldr	x0, [x21, #8]
 294:	str	x0, [x24, #8]
 298:	ldr	x0, [x21, #16]
 29c:	str	x0, [x24, #16]
 2a0:	ldr	x0, [x21, #24]
 2a4:	str	x0, [x24, #24]
 2a8:	str	xzr, [x21, #8]
 2ac:	str	xzr, [x21, #16]
 2b0:	str	xzr, [x21, #24]
 2b4:	cmp	x27, x25
 2b8:	b.eq	260 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x260>  // b.none
 2bc:	mov	x20, x27
 2c0:	b	1ec <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x1ec>
 2c4:	ldr	x0, [sp, #136]
 2c8:	add	x28, x28, x0
 2cc:	ldr	w21, [x22, #8]
 2d0:	ldr	x0, [x22]
 2d4:	add	x21, x0, x21, lsl #5
 2d8:	cmp	x21, x28
 2dc:	b.ne	8cc <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x8cc>  // b.any
 2e0:	ldr	w0, [x22, #12]
 2e4:	ldr	x1, [sp, #112]
 2e8:	cmp	x1, x0
 2ec:	b.hi	3e0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x3e0>  // b.pmore
 2f0:	ldr	w0, [sp, #132]
 2f4:	str	w0, [x22, #8]
 2f8:	ldr	x27, [x23]
 2fc:	ldr	w21, [x23, #8]
 300:	add	x21, x27, x21, lsl #5
 304:	cmp	x27, x21
 308:	b.eq	4c8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x4c8>  // b.none
 30c:	adrp	x26, 0 <__pthread_key_create>
 310:	ldr	x25, [x26]
 314:	mov	x26, x25
 318:	b	4b0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x4b0>
 31c:	add	x1, x19, #0x8
 320:	ldaxr	w0, [x1]
 324:	sub	w2, w0, #0x1
 328:	stlxr	w3, w2, [x1]
 32c:	cbnz	w3, 320 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x320>
 330:	cmp	w0, #0x1
 334:	b.eq	360 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x360>  // b.none
 338:	add	x20, x20, #0x10
 33c:	cmp	x24, x20
 340:	b.eq	3b4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x3b4>  // b.none
 344:	ldr	x19, [x20, #8]
 348:	cbz	x19, 338 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x338>
 34c:	cbnz	x25, 31c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x31c>
 350:	ldr	w0, [x19, #8]
 354:	sub	w1, w0, #0x1
 358:	str	w1, [x19, #8]
 35c:	b	330 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x330>
 360:	ldr	x0, [x19]
 364:	ldr	x1, [x0, #16]
 368:	mov	x0, x19
 36c:	blr	x1
 370:	cbz	x26, 3a4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x3a4>
 374:	add	x1, x19, #0xc
 378:	ldaxr	w0, [x1]
 37c:	sub	w2, w0, #0x1
 380:	stlxr	w3, w2, [x1]
 384:	cbnz	w3, 378 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x378>
 388:	cmp	w0, #0x1
 38c:	b.ne	338 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x338>  // b.any
 390:	ldr	x0, [x19]
 394:	ldr	x1, [x0, #24]
 398:	mov	x0, x19
 39c:	blr	x1
 3a0:	b	338 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x338>
 3a4:	ldr	w0, [x19, #12]
 3a8:	sub	w1, w0, #0x1
 3ac:	str	w1, [x19, #12]
 3b0:	b	388 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x388>
 3b4:	ldr	x0, [x21, #8]
 3b8:	cbz	x0, 3c0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x3c0>
 3bc:	bl	0 <_ZdlPv>
 3c0:	cmp	x21, x28
 3c4:	b.eq	2e0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x2e0>  // b.none
 3c8:	sub	x21, x21, #0x20
 3cc:	ldr	x20, [x21, #8]
 3d0:	ldr	x24, [x21, #16]
 3d4:	cmp	x20, x24
 3d8:	b.ne	344 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x344>  // b.any
 3dc:	b	3b4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x3b4>
 3e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>
 3e4:	add	x3, x3, #0x0
 3e8:	mov	w2, #0x43                  	// #67
 3ec:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>
 3f0:	add	x1, x1, #0x0
 3f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>
 3f8:	add	x0, x0, #0x0
 3fc:	bl	0 <__assert_fail>
 400:	ldaxr	w0, [x1]
 404:	sub	w2, w0, #0x1
 408:	stlxr	w3, w2, [x1]
 40c:	cbnz	w3, 400 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x400>
 410:	cmp	w0, #0x1
 414:	b.eq	448 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x448>  // b.none
 418:	add	x20, x20, #0x10
 41c:	cmp	x24, x20
 420:	b.eq	49c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x49c>  // b.none
 424:	ldr	x19, [x20, #8]
 428:	cbz	x19, 418 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x418>
 42c:	cbz	x25, 438 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x438>
 430:	add	x1, x19, #0x8
 434:	b	400 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x400>
 438:	ldr	w0, [x19, #8]
 43c:	sub	w1, w0, #0x1
 440:	str	w1, [x19, #8]
 444:	b	410 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x410>
 448:	ldr	x0, [x19]
 44c:	ldr	x1, [x0, #16]
 450:	mov	x0, x19
 454:	blr	x1
 458:	cbz	x26, 48c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x48c>
 45c:	add	x1, x19, #0xc
 460:	ldaxr	w0, [x1]
 464:	sub	w2, w0, #0x1
 468:	stlxr	w3, w2, [x1]
 46c:	cbnz	w3, 460 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x460>
 470:	cmp	w0, #0x1
 474:	b.ne	418 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x418>  // b.any
 478:	ldr	x0, [x19]
 47c:	ldr	x1, [x0, #24]
 480:	mov	x0, x19
 484:	blr	x1
 488:	b	418 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x418>
 48c:	ldr	w0, [x19, #12]
 490:	sub	w1, w0, #0x1
 494:	str	w1, [x19, #12]
 498:	b	470 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x470>
 49c:	ldr	x0, [x21, #8]
 4a0:	cbz	x0, 4a8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x4a8>
 4a4:	bl	0 <_ZdlPv>
 4a8:	cmp	x27, x21
 4ac:	b.eq	4c8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x4c8>  // b.none
 4b0:	sub	x21, x21, #0x20
 4b4:	ldr	x20, [x21, #8]
 4b8:	ldr	x24, [x21, #16]
 4bc:	cmp	x20, x24
 4c0:	b.ne	424 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x424>  // b.any
 4c4:	b	49c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x49c>
 4c8:	str	wzr, [x23, #8]
 4cc:	ldp	x19, x20, [sp, #16]
 4d0:	ldp	x23, x24, [sp, #48]
 4d4:	ldp	x25, x26, [sp, #64]
 4d8:	ldp	x27, x28, [sp, #80]
 4dc:	b	16c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x16c>
 4e0:	ldr	w0, [x22, #12]
 4e4:	ldr	x1, [sp, #112]
 4e8:	cmp	x1, x0
 4ec:	b.ls	684 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x684>  // b.plast
 4f0:	ldr	x27, [x22]
 4f4:	add	x21, x27, x24, lsl #5
 4f8:	cmp	x21, x27
 4fc:	b.eq	5d4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x5d4>  // b.none
 500:	adrp	x26, 0 <__pthread_key_create>
 504:	ldr	x24, [x26]
 508:	mov	x26, x24
 50c:	b	5bc <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x5bc>
 510:	add	x1, x20, #0x8
 514:	ldaxr	w0, [x1]
 518:	sub	w2, w0, #0x1
 51c:	stlxr	w3, w2, [x1]
 520:	cbnz	w3, 514 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x514>
 524:	cmp	w0, #0x1
 528:	b.eq	554 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x554>  // b.none
 52c:	add	x19, x19, #0x10
 530:	cmp	x25, x19
 534:	b.eq	5a8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x5a8>  // b.none
 538:	ldr	x20, [x19, #8]
 53c:	cbz	x20, 52c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x52c>
 540:	cbnz	x24, 510 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x510>
 544:	ldr	w0, [x20, #8]
 548:	sub	w1, w0, #0x1
 54c:	str	w1, [x20, #8]
 550:	b	524 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x524>
 554:	ldr	x0, [x20]
 558:	ldr	x1, [x0, #16]
 55c:	mov	x0, x20
 560:	blr	x1
 564:	cbz	x26, 598 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x598>
 568:	add	x1, x20, #0xc
 56c:	ldaxr	w0, [x1]
 570:	sub	w2, w0, #0x1
 574:	stlxr	w3, w2, [x1]
 578:	cbnz	w3, 56c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x56c>
 57c:	cmp	w0, #0x1
 580:	b.ne	52c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x52c>  // b.any
 584:	ldr	x0, [x20]
 588:	ldr	x1, [x0, #24]
 58c:	mov	x0, x20
 590:	blr	x1
 594:	b	52c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x52c>
 598:	ldr	w0, [x20, #12]
 59c:	sub	w1, w0, #0x1
 5a0:	str	w1, [x20, #12]
 5a4:	b	57c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x57c>
 5a8:	ldr	x0, [x21, #8]
 5ac:	cbz	x0, 5b4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x5b4>
 5b0:	bl	0 <_ZdlPv>
 5b4:	cmp	x21, x27
 5b8:	b.eq	5d4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x5d4>  // b.none
 5bc:	sub	x21, x21, #0x20
 5c0:	ldr	x19, [x21, #8]
 5c4:	ldr	x25, [x21, #16]
 5c8:	cmp	x19, x25
 5cc:	b.ne	538 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x538>  // b.any
 5d0:	b	5a8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x5a8>
 5d4:	str	wzr, [x22, #8]
 5d8:	ldr	x1, [sp, #112]
 5dc:	mov	x0, x22
 5e0:	bl	0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>
 5e4:	mov	x24, #0x0                   	// #0
 5e8:	ldr	x1, [x23]
 5ec:	lsl	x21, x24, #5
 5f0:	add	x0, x1, x21
 5f4:	ldr	w3, [x23, #8]
 5f8:	add	x3, x1, x3, lsl #5
 5fc:	ldr	x1, [x22]
 600:	add	x1, x1, x21
 604:	cmp	x0, x3
 608:	b.eq	648 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x648>  // b.none
 60c:	ldr	w2, [x0]
 610:	str	w2, [x1]
 614:	ldr	x2, [x0, #8]
 618:	str	x2, [x1, #8]
 61c:	ldr	x2, [x0, #16]
 620:	str	x2, [x1, #16]
 624:	ldr	x2, [x0, #24]
 628:	str	x2, [x1, #24]
 62c:	str	xzr, [x0, #24]
 630:	str	xzr, [x0, #16]
 634:	str	xzr, [x0, #8]
 638:	add	x1, x1, #0x20
 63c:	add	x0, x0, #0x20
 640:	cmp	x3, x0
 644:	b.ne	60c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x60c>  // b.any
 648:	ldr	w0, [x22, #12]
 64c:	ldr	x1, [sp, #112]
 650:	cmp	x1, x0
 654:	b.hi	7c4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x7c4>  // b.pmore
 658:	ldr	w0, [sp, #132]
 65c:	str	w0, [x22, #8]
 660:	ldr	x27, [x23]
 664:	ldr	w21, [x23, #8]
 668:	add	x21, x27, x21, lsl #5
 66c:	cmp	x27, x21
 670:	b.eq	8a8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x8a8>  // b.none
 674:	adrp	x26, 0 <__pthread_key_create>
 678:	ldr	x25, [x26]
 67c:	mov	x26, x25
 680:	b	890 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x890>
 684:	cbnz	x24, 6a4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6a4>
 688:	ldr	x0, [x23]
 68c:	ldr	w3, [x23, #8]
 690:	add	x3, x0, x3, lsl #5
 694:	ldr	x1, [x22]
 698:	cmp	x0, x3
 69c:	b.ne	60c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x60c>  // b.any
 6a0:	b	658 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x658>
 6a4:	ldr	x26, [x22]
 6a8:	add	x0, x21, x24, lsl #5
 6ac:	str	x0, [sp, #120]
 6b0:	adrp	x0, 0 <__pthread_key_create>
 6b4:	ldr	x27, [x0]
 6b8:	str	x27, [sp, #104]
 6bc:	b	780 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x780>
 6c0:	ldaxr	w0, [x1]
 6c4:	sub	w2, w0, #0x1
 6c8:	stlxr	w3, w2, [x1]
 6cc:	cbnz	w3, 6c0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6c0>
 6d0:	cmp	w0, #0x1
 6d4:	b.eq	708 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x708>  // b.none
 6d8:	add	x19, x19, #0x10
 6dc:	cmp	x25, x19
 6e0:	b.eq	760 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x760>  // b.none
 6e4:	ldr	x20, [x19, #8]
 6e8:	cbz	x20, 6d8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6d8>
 6ec:	cbz	x27, 6f8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6f8>
 6f0:	add	x1, x20, #0x8
 6f4:	b	6c0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6c0>
 6f8:	ldr	w0, [x20, #8]
 6fc:	sub	w1, w0, #0x1
 700:	str	w1, [x20, #8]
 704:	b	6d0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6d0>
 708:	ldr	x0, [x20]
 70c:	ldr	x1, [x0, #16]
 710:	mov	x0, x20
 714:	blr	x1
 718:	ldr	x0, [sp, #104]
 71c:	cbz	x0, 750 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x750>
 720:	add	x1, x20, #0xc
 724:	ldaxr	w0, [x1]
 728:	sub	w2, w0, #0x1
 72c:	stlxr	w3, w2, [x1]
 730:	cbnz	w3, 724 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x724>
 734:	cmp	w0, #0x1
 738:	b.ne	6d8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6d8>  // b.any
 73c:	ldr	x0, [x20]
 740:	ldr	x1, [x0, #24]
 744:	mov	x0, x20
 748:	blr	x1
 74c:	b	6d8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6d8>
 750:	ldr	w0, [x20, #12]
 754:	sub	w1, w0, #0x1
 758:	str	w1, [x20, #12]
 75c:	b	734 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x734>
 760:	cbz	x28, 76c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x76c>
 764:	mov	x0, x28
 768:	bl	0 <_ZdlPv>
 76c:	add	x21, x21, #0x20
 770:	add	x26, x26, #0x20
 774:	ldr	x0, [sp, #120]
 778:	cmp	x21, x0
 77c:	b.eq	5e8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x5e8>  // b.none
 780:	ldr	w0, [x21]
 784:	str	w0, [x26]
 788:	ldr	x28, [x26, #8]
 78c:	ldr	x25, [x26, #16]
 790:	ldr	x0, [x21, #8]
 794:	str	x0, [x26, #8]
 798:	ldr	x0, [x21, #16]
 79c:	str	x0, [x26, #16]
 7a0:	ldr	x0, [x21, #24]
 7a4:	str	x0, [x26, #24]
 7a8:	str	xzr, [x21, #8]
 7ac:	str	xzr, [x21, #16]
 7b0:	str	xzr, [x21, #24]
 7b4:	cmp	x28, x25
 7b8:	b.eq	760 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x760>  // b.none
 7bc:	mov	x19, x28
 7c0:	b	6e4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x6e4>
 7c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>
 7c8:	add	x3, x3, #0x0
 7cc:	mov	w2, #0x43                  	// #67
 7d0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>
 7d4:	add	x1, x1, #0x0
 7d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_>
 7dc:	add	x0, x0, #0x0
 7e0:	bl	0 <__assert_fail>
 7e4:	add	x1, x19, #0x8
 7e8:	ldaxr	w0, [x1]
 7ec:	sub	w2, w0, #0x1
 7f0:	stlxr	w3, w2, [x1]
 7f4:	cbnz	w3, 7e8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x7e8>
 7f8:	cmp	w0, #0x1
 7fc:	b.eq	828 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x828>  // b.none
 800:	add	x20, x20, #0x10
 804:	cmp	x24, x20
 808:	b.eq	87c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x87c>  // b.none
 80c:	ldr	x19, [x20, #8]
 810:	cbz	x19, 800 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x800>
 814:	cbnz	x25, 7e4 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x7e4>
 818:	ldr	w0, [x19, #8]
 81c:	sub	w1, w0, #0x1
 820:	str	w1, [x19, #8]
 824:	b	7f8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x7f8>
 828:	ldr	x0, [x19]
 82c:	ldr	x1, [x0, #16]
 830:	mov	x0, x19
 834:	blr	x1
 838:	cbz	x26, 86c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x86c>
 83c:	add	x1, x19, #0xc
 840:	ldaxr	w0, [x1]
 844:	sub	w2, w0, #0x1
 848:	stlxr	w3, w2, [x1]
 84c:	cbnz	w3, 840 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x840>
 850:	cmp	w0, #0x1
 854:	b.ne	800 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x800>  // b.any
 858:	ldr	x0, [x19]
 85c:	ldr	x1, [x0, #24]
 860:	mov	x0, x19
 864:	blr	x1
 868:	b	800 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x800>
 86c:	ldr	w0, [x19, #12]
 870:	sub	w1, w0, #0x1
 874:	str	w1, [x19, #12]
 878:	b	850 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x850>
 87c:	ldr	x0, [x21, #8]
 880:	cbz	x0, 888 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x888>
 884:	bl	0 <_ZdlPv>
 888:	cmp	x27, x21
 88c:	b.eq	8a8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x8a8>  // b.none
 890:	sub	x21, x21, #0x20
 894:	ldr	x20, [x21, #8]
 898:	ldr	x24, [x21, #16]
 89c:	cmp	x20, x24
 8a0:	b.ne	80c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x80c>  // b.any
 8a4:	b	87c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x87c>
 8a8:	str	wzr, [x23, #8]
 8ac:	ldp	x19, x20, [sp, #16]
 8b0:	ldp	x23, x24, [sp, #48]
 8b4:	ldp	x25, x26, [sp, #64]
 8b8:	ldp	x27, x28, [sp, #80]
 8bc:	b	16c <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x16c>
 8c0:	add	x21, x28, x24, lsl #5
 8c4:	cmp	x28, x21
 8c8:	b.eq	2f0 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x2f0>  // b.none
 8cc:	adrp	x26, 0 <__pthread_key_create>
 8d0:	ldr	x25, [x26]
 8d4:	mov	x26, x25
 8d8:	b	3c8 <_ZN4llvm15SmallVectorImplINS_15BitstreamCursor5BlockEEaSEOS3_+0x3c8>

Disassembly of section .text._ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #16]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #16]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm8ExpectedINS_9StringRefEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedINS_9StringRefEED1Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w1, [x0, #16]
   c:	tbnz	w1, #1, 34 <_ZN4llvm8ExpectedINS_9StringRefEED1Ev+0x34>
  10:	ldrb	w1, [x0, #16]
  14:	tbz	w1, #0, 2c <_ZN4llvm8ExpectedINS_9StringRefEED1Ev+0x2c>
  18:	ldr	x0, [x0]
  1c:	cbz	x0, 2c <_ZN4llvm8ExpectedINS_9StringRefEED1Ev+0x2c>
  20:	ldr	x1, [x0]
  24:	ldr	x1, [x1, #8]
  28:	blr	x1
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	bl	0 <_ZN4llvm8ExpectedINS_9StringRefEED1Ev>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x8c>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	add	x2, sp, #0x50
  14:	add	x1, sp, #0x60
  18:	str	x1, [sp, #80]
  1c:	str	xzr, [sp, #88]
  20:	strb	wzr, [sp, #96]
  24:	mov	w1, #0x1                   	// #1
  28:	str	w1, [sp, #64]
  2c:	str	xzr, [sp, #56]
  30:	str	xzr, [sp, #48]
  34:	str	xzr, [sp, #40]
  38:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  3c:	ldr	x1, [x1]
  40:	add	x1, x1, #0x10
  44:	str	x1, [sp, #32]
  48:	str	x2, [sp, #72]
  4c:	ldr	x1, [x0]
  50:	ldr	x2, [x1, #16]
  54:	add	x1, sp, #0x20
  58:	blr	x2
  5c:	ldr	x1, [sp, #56]
  60:	ldr	x0, [sp, #40]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	add	x0, sp, #0x20
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x0, [sp, #72]
  78:	add	x1, x19, #0x10
  7c:	str	x1, [x19]
  80:	ldr	x1, [x0]
  84:	ldr	x2, [x0, #8]
  88:	mov	w3, #0x0                   	// #0
  8c:	add	x2, x1, x2
  90:	mov	x0, x19
  94:	bl	0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
  98:	add	x0, sp, #0x20
  9c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  a0:	ldr	x0, [sp, #80]
  a4:	add	x1, sp, #0x60
  a8:	cmp	x0, x1
  ac:	b.eq	b4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb4>  // b.none
  b0:	bl	0 <_ZdlPv>
  b4:	mov	x0, x19
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #112
  c0:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x0
  10:	cmp	x1, x0
  14:	b.eq	200 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x200>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x25, x1
  28:	ldr	x21, [x1, #8]
  2c:	ldr	x19, [x1]
  30:	sub	x26, x21, x19
  34:	asr	x23, x26, #4
  38:	ldr	x20, [x0]
  3c:	ldr	x0, [x0, #16]
  40:	sub	x0, x0, x20
  44:	cmp	x23, x0, asr #4
  48:	b.hi	84 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x84>  // b.pmore
  4c:	ldr	x0, [x22, #8]
  50:	sub	x0, x0, x20
  54:	asr	x24, x0, #4
  58:	cmp	x23, x0, asr #4
  5c:	b.hi	3c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3c8>  // b.pmore
  60:	cmp	x26, #0x0
  64:	b.le	314 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x314>
  68:	stp	x27, x28, [sp, #80]
  6c:	mov	x21, x20
  70:	adrp	x27, 0 <__pthread_key_create>
  74:	ldr	x28, [x27]
  78:	str	x28, [sp, #104]
  7c:	mov	x27, x28
  80:	b	250 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x250>
  84:	cbz	x23, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xc0>
  88:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
  8c:	cmp	x23, x0
  90:	b.hi	b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xb8>  // b.pmore
  94:	mov	x0, x26
  98:	bl	0 <_Znwm>
  9c:	mov	x20, x0
  a0:	cmp	x19, x21
  a4:	b.eq	118 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x118>  // b.none
  a8:	mov	x2, x20
  ac:	adrp	x3, 0 <__pthread_key_create>
  b0:	ldr	x3, [x3]
  b4:	b	e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xe8>
  b8:	stp	x27, x28, [sp, #80]
  bc:	bl	0 <_ZSt17__throw_bad_allocv>
  c0:	mov	x20, #0x0                   	// #0
  c4:	b	a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xa0>
  c8:	ldaxr	w0, [x1]
  cc:	add	w0, w0, #0x1
  d0:	stlxr	w4, w0, [x1]
  d4:	cbnz	w4, c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xc8>
  d8:	add	x2, x2, #0x10
  dc:	add	x19, x19, #0x10
  e0:	cmp	x21, x19
  e4:	b.eq	118 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x118>  // b.none
  e8:	ldr	x0, [x19]
  ec:	str	x0, [x2]
  f0:	ldr	x1, [x19, #8]
  f4:	str	x1, [x2, #8]
  f8:	cbz	x1, d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xd8>
  fc:	cbz	x3, 108 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x108>
 100:	add	x1, x1, #0x8
 104:	b	c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xc8>
 108:	ldr	w0, [x1, #8]
 10c:	add	w0, w0, #0x1
 110:	str	w0, [x1, #8]
 114:	b	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xd8>
 118:	ldr	x19, [x22]
 11c:	ldr	x23, [x22, #8]
 120:	cmp	x19, x23
 124:	b.eq	1d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1d0>  // b.none
 128:	adrp	x25, 0 <__pthread_key_create>
 12c:	ldr	x24, [x25]
 130:	mov	x25, x24
 134:	b	160 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x160>
 138:	add	x1, x21, #0x8
 13c:	ldaxr	w0, [x1]
 140:	sub	w2, w0, #0x1
 144:	stlxr	w3, w2, [x1]
 148:	cbnz	w3, 13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x13c>
 14c:	cmp	w0, #0x1
 150:	b.eq	17c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x17c>  // b.none
 154:	add	x19, x19, #0x10
 158:	cmp	x23, x19
 15c:	b.eq	1d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1d0>  // b.none
 160:	ldr	x21, [x19, #8]
 164:	cbz	x21, 154 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x154>
 168:	cbnz	x24, 138 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x138>
 16c:	ldr	w0, [x21, #8]
 170:	sub	w1, w0, #0x1
 174:	str	w1, [x21, #8]
 178:	b	14c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x14c>
 17c:	ldr	x0, [x21]
 180:	ldr	x1, [x0, #16]
 184:	mov	x0, x21
 188:	blr	x1
 18c:	cbz	x25, 1c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1c0>
 190:	add	x1, x21, #0xc
 194:	ldaxr	w0, [x1]
 198:	sub	w2, w0, #0x1
 19c:	stlxr	w3, w2, [x1]
 1a0:	cbnz	w3, 194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x194>
 1a4:	cmp	w0, #0x1
 1a8:	b.ne	154 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x154>  // b.any
 1ac:	ldr	x0, [x21]
 1b0:	ldr	x1, [x0, #24]
 1b4:	mov	x0, x21
 1b8:	blr	x1
 1bc:	b	154 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x154>
 1c0:	ldr	w0, [x21, #12]
 1c4:	sub	w1, w0, #0x1
 1c8:	str	w1, [x21, #12]
 1cc:	b	1a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a4>
 1d0:	ldr	x0, [x22]
 1d4:	cbz	x0, 1dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1dc>
 1d8:	bl	0 <_ZdlPv>
 1dc:	str	x20, [x22]
 1e0:	add	x20, x20, x26
 1e4:	str	x20, [x22, #16]
 1e8:	ldr	x0, [x22]
 1ec:	add	x26, x0, x26
 1f0:	str	x26, [x22, #8]
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x23, x24, [sp, #48]
 1fc:	ldp	x25, x26, [sp, #64]
 200:	mov	x0, x22
 204:	ldp	x21, x22, [sp, #32]
 208:	ldp	x29, x30, [sp], #112
 20c:	ret
 210:	ldr	w0, [x24, #8]
 214:	add	w0, w0, #0x1
 218:	str	w0, [x24, #8]
 21c:	b	284 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x284>
 220:	ldaxr	w0, [x1]
 224:	sub	w2, w0, #0x1
 228:	stlxr	w3, w2, [x1]
 22c:	cbnz	w3, 220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x220>
 230:	cmp	w0, #0x1
 234:	b.eq	2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2a8>  // b.none
 238:	str	x24, [x21, #8]
 23c:	add	x19, x19, #0x10
 240:	add	x21, x21, #0x10
 244:	sub	x23, x23, #0x1
 248:	cmp	x23, #0x0
 24c:	b.le	300 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x300>
 250:	ldr	x0, [x19]
 254:	str	x0, [x21]
 258:	ldr	x24, [x19, #8]
 25c:	ldr	x0, [x21, #8]
 260:	cmp	x24, x0
 264:	b.eq	23c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x23c>  // b.none
 268:	cbz	x24, 284 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x284>
 26c:	cbz	x27, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x210>
 270:	add	x0, x24, #0x8
 274:	ldaxr	w1, [x0]
 278:	add	w1, w1, #0x1
 27c:	stlxr	w2, w1, [x0]
 280:	cbnz	w2, 274 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x274>
 284:	ldr	x25, [x21, #8]
 288:	cbz	x25, 238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x238>
 28c:	cbz	x28, 298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x298>
 290:	add	x1, x25, #0x8
 294:	b	220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x220>
 298:	ldr	w0, [x25, #8]
 29c:	sub	w1, w0, #0x1
 2a0:	str	w1, [x25, #8]
 2a4:	b	230 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x230>
 2a8:	ldr	x0, [x25]
 2ac:	ldr	x1, [x0, #16]
 2b0:	mov	x0, x25
 2b4:	blr	x1
 2b8:	ldr	x0, [sp, #104]
 2bc:	cbz	x0, 2f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2f0>
 2c0:	add	x1, x25, #0xc
 2c4:	ldaxr	w0, [x1]
 2c8:	sub	w2, w0, #0x1
 2cc:	stlxr	w3, w2, [x1]
 2d0:	cbnz	w3, 2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2c4>
 2d4:	cmp	w0, #0x1
 2d8:	b.ne	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x238>  // b.any
 2dc:	ldr	x0, [x25]
 2e0:	ldr	x1, [x0, #24]
 2e4:	mov	x0, x25
 2e8:	blr	x1
 2ec:	b	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x238>
 2f0:	ldr	w0, [x25, #12]
 2f4:	sub	w1, w0, #0x1
 2f8:	str	w1, [x25, #12]
 2fc:	b	2d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2d4>
 300:	cmp	x26, #0x0
 304:	mov	x0, #0x10                  	// #16
 308:	csel	x0, x26, x0, gt
 30c:	add	x20, x20, x0
 310:	ldp	x27, x28, [sp, #80]
 314:	ldr	x21, [x22, #8]
 318:	cmp	x21, x20
 31c:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 320:	adrp	x24, 0 <__pthread_key_create>
 324:	ldr	x23, [x24]
 328:	mov	x24, x23
 32c:	b	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x358>
 330:	add	x1, x19, #0x8
 334:	ldaxr	w0, [x1]
 338:	sub	w2, w0, #0x1
 33c:	stlxr	w3, w2, [x1]
 340:	cbnz	w3, 334 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x334>
 344:	cmp	w0, #0x1
 348:	b.eq	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x374>  // b.none
 34c:	add	x20, x20, #0x10
 350:	cmp	x20, x21
 354:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 358:	ldr	x19, [x20, #8]
 35c:	cbz	x19, 34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x34c>
 360:	cbnz	x23, 330 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x330>
 364:	ldr	w0, [x19, #8]
 368:	sub	w1, w0, #0x1
 36c:	str	w1, [x19, #8]
 370:	b	344 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x344>
 374:	ldr	x0, [x19]
 378:	ldr	x1, [x0, #16]
 37c:	mov	x0, x19
 380:	blr	x1
 384:	cbz	x24, 3b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3b8>
 388:	add	x1, x19, #0xc
 38c:	ldaxr	w0, [x1]
 390:	sub	w2, w0, #0x1
 394:	stlxr	w3, w2, [x1]
 398:	cbnz	w3, 38c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x38c>
 39c:	cmp	w0, #0x1
 3a0:	b.ne	34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x34c>  // b.any
 3a4:	ldr	x0, [x19]
 3a8:	ldr	x1, [x0, #24]
 3ac:	mov	x0, x19
 3b0:	blr	x1
 3b4:	b	34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x34c>
 3b8:	ldr	w0, [x19, #12]
 3bc:	sub	w1, w0, #0x1
 3c0:	str	w1, [x19, #12]
 3c4:	b	39c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x39c>
 3c8:	cmp	x0, #0x0
 3cc:	b.le	4dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4dc>
 3d0:	stp	x27, x28, [sp, #80]
 3d4:	adrp	x27, 0 <__pthread_key_create>
 3d8:	ldr	x28, [x27]
 3dc:	str	x28, [sp, #104]
 3e0:	mov	x27, x28
 3e4:	b	428 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x428>
 3e8:	ldr	w0, [x21, #8]
 3ec:	add	w0, w0, #0x1
 3f0:	str	w0, [x21, #8]
 3f4:	b	45c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x45c>
 3f8:	ldaxr	w0, [x1]
 3fc:	sub	w2, w0, #0x1
 400:	stlxr	w3, w2, [x1]
 404:	cbnz	w3, 3f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3f8>
 408:	cmp	w0, #0x1
 40c:	b.eq	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x480>  // b.none
 410:	str	x21, [x20, #8]
 414:	add	x19, x19, #0x10
 418:	add	x20, x20, #0x10
 41c:	sub	x24, x24, #0x1
 420:	cmp	x24, #0x0
 424:	b.le	4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4d8>
 428:	ldr	x0, [x19]
 42c:	str	x0, [x20]
 430:	ldr	x21, [x19, #8]
 434:	ldr	x0, [x20, #8]
 438:	cmp	x21, x0
 43c:	b.eq	414 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x414>  // b.none
 440:	cbz	x21, 45c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x45c>
 444:	cbz	x27, 3e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e8>
 448:	add	x0, x21, #0x8
 44c:	ldaxr	w1, [x0]
 450:	add	w1, w1, #0x1
 454:	stlxr	w2, w1, [x0]
 458:	cbnz	w2, 44c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x44c>
 45c:	ldr	x23, [x20, #8]
 460:	cbz	x23, 410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>
 464:	cbz	x28, 470 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x470>
 468:	add	x1, x23, #0x8
 46c:	b	3f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3f8>
 470:	ldr	w0, [x23, #8]
 474:	sub	w1, w0, #0x1
 478:	str	w1, [x23, #8]
 47c:	b	408 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x408>
 480:	ldr	x0, [x23]
 484:	ldr	x1, [x0, #16]
 488:	mov	x0, x23
 48c:	blr	x1
 490:	ldr	x0, [sp, #104]
 494:	cbz	x0, 4c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4c8>
 498:	add	x1, x23, #0xc
 49c:	ldaxr	w0, [x1]
 4a0:	sub	w2, w0, #0x1
 4a4:	stlxr	w3, w2, [x1]
 4a8:	cbnz	w3, 49c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x49c>
 4ac:	cmp	w0, #0x1
 4b0:	b.ne	410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>  // b.any
 4b4:	ldr	x0, [x23]
 4b8:	ldr	x1, [x0, #24]
 4bc:	mov	x0, x23
 4c0:	blr	x1
 4c4:	b	410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>
 4c8:	ldr	w0, [x23, #12]
 4cc:	sub	w1, w0, #0x1
 4d0:	str	w1, [x23, #12]
 4d4:	b	4ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4ac>
 4d8:	ldp	x27, x28, [sp, #80]
 4dc:	ldr	x2, [x22, #8]
 4e0:	ldr	x0, [x22]
 4e4:	sub	x1, x2, x0
 4e8:	ldr	x0, [x25]
 4ec:	add	x0, x0, x1
 4f0:	ldr	x4, [x25, #8]
 4f4:	cmp	x0, x4
 4f8:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 4fc:	adrp	x5, 0 <__pthread_key_create>
 500:	ldr	x5, [x5]
 504:	b	528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x528>
 508:	ldaxr	w3, [x1]
 50c:	add	w3, w3, #0x1
 510:	stlxr	w6, w3, [x1]
 514:	cbnz	w6, 508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x508>
 518:	add	x0, x0, #0x10
 51c:	add	x2, x2, #0x10
 520:	cmp	x4, x0
 524:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 528:	ldr	x1, [x0]
 52c:	str	x1, [x2]
 530:	ldr	x1, [x0, #8]
 534:	str	x1, [x2, #8]
 538:	cbz	x1, 518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x518>
 53c:	cbz	x5, 548 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x548>
 540:	add	x1, x1, #0x8
 544:	b	508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x508>
 548:	ldr	w3, [x1, #8]
 54c:	add	w3, w3, #0x1
 550:	str	w3, [x1, #8]
 554:	b	518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x518>

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	cmp	x1, x0
  14:	b.eq	180 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x180>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	str	x25, [sp, #64]
  24:	mov	x24, x1
  28:	ldr	x25, [x1, #8]
  2c:	ldr	x20, [x1]
  30:	sub	x23, x25, x20
  34:	asr	x22, x23, #3
  38:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  3c:	movk	x1, #0xcccd
  40:	mul	x22, x22, x1
  44:	ldr	x19, [x0]
  48:	ldr	x0, [x0, #16]
  4c:	sub	x0, x0, x19
  50:	asr	x0, x0, #3
  54:	mul	x0, x0, x1
  58:	cmp	x0, x22
  5c:	b.cc	d8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0xd8>  // b.lo, b.ul, b.last
  60:	ldr	x0, [x21, #8]
  64:	sub	x0, x0, x19
  68:	asr	x25, x0, #3
  6c:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  70:	movk	x1, #0xcccd
  74:	mul	x25, x25, x1
  78:	cmp	x22, x25
  7c:	b.hi	1e4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x1e4>  // b.pmore
  80:	cmp	x23, #0x0
  84:	b.le	c8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0xc8>
  88:	add	x24, x19, #0x8
  8c:	add	x20, x20, #0x8
  90:	ldur	w0, [x20, #-8]
  94:	stur	w0, [x24, #-8]
  98:	mov	x1, x20
  9c:	mov	x0, x24
  a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  a4:	sub	x22, x22, #0x1
  a8:	add	x24, x24, #0x28
  ac:	add	x20, x20, #0x28
  b0:	cmp	x22, #0x0
  b4:	b.gt	90 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x90>
  b8:	cmp	x23, #0x0
  bc:	mov	x0, #0x28                  	// #40
  c0:	csel	x0, x23, x0, gt
  c4:	add	x19, x19, x0
  c8:	ldr	x20, [x21, #8]
  cc:	cmp	x20, x19
  d0:	b.ne	1d0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x1d0>  // b.any
  d4:	b	168 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x168>
  d8:	cbz	x22, 194 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x194>
  dc:	mov	x0, #0x3333333333333333    	// #3689348814741910323
  e0:	movk	x0, #0x333, lsl #48
  e4:	cmp	x22, x0
  e8:	b.hi	190 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x190>  // b.pmore
  ec:	mov	x0, x23
  f0:	bl	0 <_Znwm>
  f4:	mov	x22, x0
  f8:	cmp	x20, x25
  fc:	b.eq	140 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x140>  // b.none
 100:	mov	x19, x20
 104:	mov	x20, x22
 108:	ldr	w0, [x19]
 10c:	mov	x1, x20
 110:	str	w0, [x1], #24
 114:	mov	x0, x20
 118:	str	x1, [x0, #8]!
 11c:	ldr	x1, [x19, #8]
 120:	ldr	x2, [x19, #16]
 124:	mov	w3, #0x0                   	// #0
 128:	add	x2, x1, x2
 12c:	bl	0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_>
 130:	add	x20, x20, #0x28
 134:	add	x19, x19, #0x28
 138:	cmp	x25, x19
 13c:	b.ne	108 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x108>  // b.any
 140:	ldr	x19, [x21]
 144:	ldr	x20, [x21, #8]
 148:	cmp	x19, x20
 14c:	b.ne	1a8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x1a8>  // b.any
 150:	ldr	x0, [x21]
 154:	cbz	x0, 15c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x15c>
 158:	bl	0 <_ZdlPv>
 15c:	str	x22, [x21]
 160:	add	x22, x22, x23
 164:	str	x22, [x21, #16]
 168:	ldr	x0, [x21]
 16c:	add	x23, x0, x23
 170:	str	x23, [x21, #8]
 174:	ldp	x19, x20, [sp, #16]
 178:	ldp	x23, x24, [sp, #48]
 17c:	ldr	x25, [sp, #64]
 180:	mov	x0, x21
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x29, x30, [sp], #80
 18c:	ret
 190:	bl	0 <_ZSt17__throw_bad_allocv>
 194:	mov	x22, #0x0                   	// #0
 198:	b	f8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0xf8>
 19c:	add	x19, x19, #0x28
 1a0:	cmp	x20, x19
 1a4:	b.eq	150 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x150>  // b.none
 1a8:	ldr	x0, [x19, #8]
 1ac:	add	x1, x19, #0x18
 1b0:	cmp	x0, x1
 1b4:	b.eq	19c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x19c>  // b.none
 1b8:	bl	0 <_ZdlPv>
 1bc:	b	19c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x19c>
 1c0:	bl	0 <_ZdlPv>
 1c4:	add	x19, x19, #0x28
 1c8:	cmp	x19, x20
 1cc:	b.eq	168 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x168>  // b.none
 1d0:	ldr	x0, [x19, #8]
 1d4:	add	x1, x19, #0x18
 1d8:	cmp	x0, x1
 1dc:	b.ne	1c0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x1c0>  // b.any
 1e0:	b	1c4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x1c4>
 1e4:	cmp	x0, #0x0
 1e8:	b.le	21c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x21c>
 1ec:	add	x19, x19, #0x8
 1f0:	add	x20, x20, #0x8
 1f4:	ldur	w0, [x20, #-8]
 1f8:	stur	w0, [x19, #-8]
 1fc:	mov	x1, x20
 200:	mov	x0, x19
 204:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 208:	sub	x25, x25, #0x1
 20c:	add	x19, x19, #0x28
 210:	add	x20, x20, #0x28
 214:	cmp	x25, #0x0
 218:	b.gt	1f4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x1f4>
 21c:	ldr	x20, [x21, #8]
 220:	ldr	x19, [x21]
 224:	sub	x0, x20, x19
 228:	ldr	x19, [x24]
 22c:	add	x19, x19, x0
 230:	ldr	x22, [x24, #8]
 234:	cmp	x19, x22
 238:	b.eq	168 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x168>  // b.none
 23c:	ldr	w0, [x19]
 240:	mov	x1, x20
 244:	str	w0, [x1], #24
 248:	mov	x0, x20
 24c:	str	x1, [x0, #8]!
 250:	ldr	x1, [x19, #8]
 254:	ldr	x2, [x19, #16]
 258:	mov	w3, #0x0                   	// #0
 25c:	add	x2, x1, x2
 260:	bl	0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_>
 264:	add	x19, x19, #0x28
 268:	add	x20, x20, #0x28
 26c:	cmp	x22, x19
 270:	b.ne	23c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x23c>  // b.any
 274:	b	168 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EEaSERKS9_+0x168>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x24, x0
  10:	cmp	x1, x0
  14:	b.eq	86c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x86c>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x27, x28, [sp, #80]
  24:	mov	x22, x1
  28:	ldr	x27, [x1, #8]
  2c:	ldr	x19, [x1]
  30:	sub	x0, x27, x19
  34:	str	x0, [sp, #96]
  38:	asr	x23, x0, #3
  3c:	mov	x1, #0x8ba3                	// #35747
  40:	movk	x1, #0xba2e, lsl #16
  44:	movk	x1, #0xa2e8, lsl #32
  48:	movk	x1, #0x2e8b, lsl #48
  4c:	mul	x23, x23, x1
  50:	ldr	x20, [x24]
  54:	ldr	x0, [x24, #16]
  58:	sub	x0, x0, x20
  5c:	asr	x0, x0, #3
  60:	mul	x0, x0, x1
  64:	cmp	x0, x23
  68:	b.cc	114 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x114>  // b.lo, b.ul, b.last
  6c:	ldr	x0, [x24, #8]
  70:	sub	x0, x0, x20
  74:	asr	x21, x0, #3
  78:	mov	x1, #0x8ba3                	// #35747
  7c:	movk	x1, #0xba2e, lsl #16
  80:	movk	x1, #0xa2e8, lsl #32
  84:	movk	x1, #0x2e8b, lsl #48
  88:	mul	x21, x21, x1
  8c:	cmp	x23, x21
  90:	b.ls	4b4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x4b4>  // b.plast
  94:	cmp	x0, #0x0
  98:	b.le	e4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0xe4>
  9c:	add	x20, x20, #0x8
  a0:	add	x19, x19, #0x8
  a4:	ldur	w0, [x19, #-8]
  a8:	stur	w0, [x20, #-8]
  ac:	mov	x1, x19
  b0:	mov	x0, x20
  b4:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
  b8:	add	x1, x19, #0x18
  bc:	add	x0, x20, #0x18
  c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  c4:	add	x1, x19, #0x38
  c8:	add	x0, x20, #0x38
  cc:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
  d0:	sub	x21, x21, #0x1
  d4:	add	x20, x20, #0x58
  d8:	add	x19, x19, #0x58
  dc:	cmp	x21, #0x0
  e0:	b.gt	a4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0xa4>
  e4:	ldr	x19, [x24, #8]
  e8:	ldr	x21, [x24]
  ec:	sub	x0, x19, x21
  f0:	ldr	x21, [x22]
  f4:	add	x21, x21, x0
  f8:	ldr	x28, [x22, #8]
  fc:	cmp	x21, x28
 100:	b.eq	850 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x850>  // b.none
 104:	stp	x25, x26, [sp, #64]
 108:	adrp	x27, 0 <__pthread_key_create>
 10c:	ldr	x27, [x27]
 110:	b	7d4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x7d4>
 114:	stp	x25, x26, [sp, #64]
 118:	cbz	x23, 15c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x15c>
 11c:	mov	x0, #0x745d                	// #29789
 120:	movk	x0, #0x45d1, lsl #16
 124:	movk	x0, #0x5d17, lsl #32
 128:	movk	x0, #0x174, lsl #48
 12c:	cmp	x23, x0
 130:	b.hi	158 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x158>  // b.pmore
 134:	ldr	x0, [sp, #96]
 138:	bl	0 <_Znwm>
 13c:	str	x0, [sp, #104]
 140:	cmp	x19, x27
 144:	b.eq	350 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x350>  // b.none
 148:	ldr	x20, [sp, #104]
 14c:	adrp	x28, 0 <__pthread_key_create>
 150:	ldr	x28, [x28]
 154:	b	2d4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x2d4>
 158:	bl	0 <_ZSt17__throw_bad_allocv>
 15c:	str	xzr, [sp, #104]
 160:	b	140 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x140>
 164:	bl	0 <_ZSt17__throw_bad_allocv>
 168:	mov	x0, #0x0                   	// #0
 16c:	b	318 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x318>
 170:	add	x1, x1, #0x8
 174:	ldaxr	w5, [x1]
 178:	add	w5, w5, #0x1
 17c:	stlxr	w7, w5, [x1]
 180:	cbnz	w7, 174 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x174>
 184:	add	x3, x3, #0x10
 188:	add	x2, x2, #0x10
 18c:	cmp	x4, x2
 190:	b.eq	1bc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x1bc>  // b.none
 194:	ldr	x1, [x2]
 198:	str	x1, [x3]
 19c:	ldr	x1, [x2, #8]
 1a0:	str	x1, [x3, #8]
 1a4:	cbz	x1, 184 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x184>
 1a8:	cbnz	x28, 170 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x170>
 1ac:	ldr	w5, [x1, #8]
 1b0:	add	w5, w5, #0x1
 1b4:	str	w5, [x1, #8]
 1b8:	b	184 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x184>
 1bc:	sub	x4, x4, x6
 1c0:	add	x0, x0, x4
 1c4:	str	x0, [x20, #16]
 1c8:	add	x1, x20, #0x30
 1cc:	mov	x0, x20
 1d0:	str	x1, [x0, #32]!
 1d4:	ldr	x1, [x21, #32]
 1d8:	ldr	x2, [x21, #40]
 1dc:	mov	w3, #0x0                   	// #0
 1e0:	add	x2, x1, x2
 1e4:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
 1e8:	ldr	x22, [x21, #72]
 1ec:	ldr	x0, [x21, #64]
 1f0:	sub	x22, x22, x0
 1f4:	asr	x0, x22, #3
 1f8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
 1fc:	movk	x1, #0xcccd
 200:	mul	x0, x0, x1
 204:	str	xzr, [x20, #64]
 208:	str	xzr, [x20, #72]
 20c:	str	xzr, [x20, #80]
 210:	cbz	x0, 348 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x348>
 214:	mov	x1, #0x3333333333333333    	// #3689348814741910323
 218:	movk	x1, #0x333, lsl #48
 21c:	cmp	x0, x1
 220:	b.hi	344 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x344>  // b.pmore
 224:	mov	x0, x22
 228:	bl	0 <_Znwm>
 22c:	mov	x23, x0
 230:	str	x23, [x20, #64]
 234:	str	x23, [x20, #72]
 238:	add	x22, x23, x22
 23c:	str	x22, [x20, #80]
 240:	ldr	x26, [x21, #64]
 244:	ldr	x21, [x21, #72]
 248:	cmp	x26, x21
 24c:	b.eq	2c0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x2c0>  // b.none
 250:	mov	x22, x26
 254:	mov	x25, x23
 258:	ldr	w0, [x22]
 25c:	mov	x1, x25
 260:	str	w0, [x1], #24
 264:	mov	x0, x25
 268:	str	x1, [x0, #8]!
 26c:	ldr	x1, [x22, #8]
 270:	ldr	x2, [x22, #16]
 274:	mov	w3, #0x0                   	// #0
 278:	add	x2, x1, x2
 27c:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
 280:	add	x25, x25, #0x28
 284:	add	x22, x22, #0x28
 288:	cmp	x21, x22
 28c:	b.ne	258 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x258>  // b.any
 290:	sub	x0, x21, #0x28
 294:	sub	x0, x0, x26
 298:	lsr	x0, x0, #3
 29c:	mov	x1, #0xcccd                	// #52429
 2a0:	movk	x1, #0xcccc, lsl #16
 2a4:	movk	x1, #0xcccc, lsl #32
 2a8:	movk	x1, #0xccc, lsl #48
 2ac:	mul	x0, x0, x1
 2b0:	and	x0, x0, #0x1fffffffffffffff
 2b4:	add	x0, x0, #0x1
 2b8:	add	x0, x0, x0, lsl #2
 2bc:	add	x23, x23, x0, lsl #3
 2c0:	str	x23, [x20, #72]
 2c4:	add	x20, x20, #0x58
 2c8:	add	x19, x19, #0x58
 2cc:	cmp	x27, x19
 2d0:	b.eq	350 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x350>  // b.none
 2d4:	mov	x21, x19
 2d8:	ldr	w0, [x19]
 2dc:	str	w0, [x20]
 2e0:	ldr	x22, [x19, #16]
 2e4:	ldr	x0, [x19, #8]
 2e8:	sub	x22, x22, x0
 2ec:	asr	x0, x22, #4
 2f0:	str	xzr, [x20, #8]
 2f4:	str	xzr, [x20, #16]
 2f8:	str	xzr, [x20, #24]
 2fc:	cmp	xzr, x22, asr #4
 300:	b.eq	168 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x168>  // b.none
 304:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
 308:	cmp	x0, x1
 30c:	b.hi	164 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x164>  // b.pmore
 310:	mov	x0, x22
 314:	bl	0 <_Znwm>
 318:	str	x0, [x20, #8]
 31c:	str	x0, [x20, #16]
 320:	add	x22, x0, x22
 324:	str	x22, [x20, #24]
 328:	ldr	x6, [x21, #8]
 32c:	ldr	x4, [x21, #16]
 330:	cmp	x6, x4
 334:	b.eq	1c4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x1c4>  // b.none
 338:	mov	x2, x6
 33c:	mov	x3, x0
 340:	b	194 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x194>
 344:	bl	0 <_ZSt17__throw_bad_allocv>
 348:	mov	x23, #0x0                   	// #0
 34c:	b	230 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x230>
 350:	ldr	x20, [x24]
 354:	ldr	x25, [x24, #8]
 358:	cmp	x20, x25
 35c:	b.eq	48c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x48c>  // b.none
 360:	adrp	x22, 0 <__pthread_key_create>
 364:	ldr	x23, [x22]
 368:	mov	x22, x23
 36c:	b	448 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x448>
 370:	bl	0 <_ZdlPv>
 374:	add	x19, x19, #0x28
 378:	cmp	x21, x19
 37c:	b.eq	458 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x458>  // b.none
 380:	ldr	x0, [x19, #8]
 384:	add	x1, x19, #0x18
 388:	cmp	x0, x1
 38c:	b.ne	370 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x370>  // b.any
 390:	b	374 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x374>
 394:	ldaxr	w0, [x1]
 398:	sub	w2, w0, #0x1
 39c:	stlxr	w3, w2, [x1]
 3a0:	cbnz	w3, 394 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x394>
 3a4:	cmp	w0, #0x1
 3a8:	b.eq	3dc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3dc>  // b.none
 3ac:	add	x21, x21, #0x10
 3b0:	cmp	x26, x21
 3b4:	b.eq	430 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x430>  // b.none
 3b8:	ldr	x19, [x21, #8]
 3bc:	cbz	x19, 3ac <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3ac>
 3c0:	cbz	x23, 3cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3cc>
 3c4:	add	x1, x19, #0x8
 3c8:	b	394 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x394>
 3cc:	ldr	w0, [x19, #8]
 3d0:	sub	w1, w0, #0x1
 3d4:	str	w1, [x19, #8]
 3d8:	b	3a4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3a4>
 3dc:	ldr	x0, [x19]
 3e0:	ldr	x1, [x0, #16]
 3e4:	mov	x0, x19
 3e8:	blr	x1
 3ec:	cbz	x22, 420 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x420>
 3f0:	add	x1, x19, #0xc
 3f4:	ldaxr	w0, [x1]
 3f8:	sub	w2, w0, #0x1
 3fc:	stlxr	w3, w2, [x1]
 400:	cbnz	w3, 3f4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3f4>
 404:	cmp	w0, #0x1
 408:	b.ne	3ac <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3ac>  // b.any
 40c:	ldr	x0, [x19]
 410:	ldr	x1, [x0, #24]
 414:	mov	x0, x19
 418:	blr	x1
 41c:	b	3ac <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3ac>
 420:	ldr	w0, [x19, #12]
 424:	sub	w1, w0, #0x1
 428:	str	w1, [x19, #12]
 42c:	b	404 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x404>
 430:	ldr	x0, [x20, #8]
 434:	cbz	x0, 43c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x43c>
 438:	bl	0 <_ZdlPv>
 43c:	add	x20, x20, #0x58
 440:	cmp	x25, x20
 444:	b.eq	48c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x48c>  // b.none
 448:	ldr	x19, [x20, #64]
 44c:	ldr	x21, [x20, #72]
 450:	cmp	x19, x21
 454:	b.ne	380 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x380>  // b.any
 458:	ldr	x0, [x20, #64]
 45c:	cbz	x0, 464 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x464>
 460:	bl	0 <_ZdlPv>
 464:	ldr	x0, [x20, #32]
 468:	add	x1, x20, #0x30
 46c:	cmp	x0, x1
 470:	b.eq	478 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x478>  // b.none
 474:	bl	0 <_ZdlPv>
 478:	ldr	x21, [x20, #8]
 47c:	ldr	x26, [x20, #16]
 480:	cmp	x21, x26
 484:	b.ne	3b8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x3b8>  // b.any
 488:	b	430 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x430>
 48c:	ldr	x0, [x24]
 490:	cbz	x0, 498 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x498>
 494:	bl	0 <_ZdlPv>
 498:	ldr	x0, [sp, #104]
 49c:	str	x0, [x24]
 4a0:	ldr	x1, [sp, #96]
 4a4:	add	x0, x0, x1
 4a8:	str	x0, [x24, #16]
 4ac:	ldp	x25, x26, [sp, #64]
 4b0:	b	850 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x850>
 4b4:	stp	x25, x26, [sp, #64]
 4b8:	ldr	x0, [sp, #96]
 4bc:	cmp	x0, #0x0
 4c0:	b.le	520 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x520>
 4c4:	add	x21, x20, #0x8
 4c8:	add	x19, x19, #0x8
 4cc:	ldur	w0, [x19, #-8]
 4d0:	stur	w0, [x21, #-8]
 4d4:	mov	x1, x19
 4d8:	mov	x0, x21
 4dc:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
 4e0:	add	x1, x19, #0x18
 4e4:	add	x0, x21, #0x18
 4e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 4ec:	add	x1, x19, #0x38
 4f0:	add	x0, x21, #0x38
 4f4:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
 4f8:	sub	x23, x23, #0x1
 4fc:	add	x21, x21, #0x58
 500:	add	x19, x19, #0x58
 504:	cmp	x23, #0x0
 508:	b.gt	4cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x4cc>
 50c:	ldr	x1, [sp, #96]
 510:	cmp	x1, #0x0
 514:	mov	x0, #0x58                  	// #88
 518:	csel	x0, x1, x0, gt
 51c:	add	x20, x20, x0
 520:	ldr	x25, [x24, #8]
 524:	cmp	x25, x20
 528:	b.eq	87c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x87c>  // b.none
 52c:	adrp	x23, 0 <__pthread_key_create>
 530:	ldr	x22, [x23]
 534:	mov	x23, x22
 538:	b	5a8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5a8>
 53c:	bl	0 <_ZdlPv>
 540:	add	x19, x19, #0x28
 544:	cmp	x21, x19
 548:	b.eq	560 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x560>  // b.none
 54c:	ldr	x0, [x19, #8]
 550:	add	x1, x19, #0x18
 554:	cmp	x0, x1
 558:	b.ne	53c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x53c>  // b.any
 55c:	b	540 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x540>
 560:	ldr	x0, [x20, #64]
 564:	cbz	x0, 56c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x56c>
 568:	bl	0 <_ZdlPv>
 56c:	ldr	x0, [x20, #32]
 570:	add	x1, x20, #0x30
 574:	cmp	x0, x1
 578:	b.eq	580 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x580>  // b.none
 57c:	bl	0 <_ZdlPv>
 580:	ldr	x21, [x20, #8]
 584:	ldr	x26, [x20, #16]
 588:	cmp	x21, x26
 58c:	b.ne	5e0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5e0>  // b.any
 590:	ldr	x0, [x20, #8]
 594:	cbz	x0, 59c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x59c>
 598:	bl	0 <_ZdlPv>
 59c:	add	x20, x20, #0x58
 5a0:	cmp	x20, x25
 5a4:	b.eq	658 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x658>  // b.none
 5a8:	ldr	x19, [x20, #64]
 5ac:	ldr	x21, [x20, #72]
 5b0:	cmp	x19, x21
 5b4:	b.ne	54c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x54c>  // b.any
 5b8:	b	560 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x560>
 5bc:	ldaxr	w0, [x1]
 5c0:	sub	w2, w0, #0x1
 5c4:	stlxr	w3, w2, [x1]
 5c8:	cbnz	w3, 5bc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5bc>
 5cc:	cmp	w0, #0x1
 5d0:	b.eq	604 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x604>  // b.none
 5d4:	add	x21, x21, #0x10
 5d8:	cmp	x26, x21
 5dc:	b.eq	590 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x590>  // b.none
 5e0:	ldr	x19, [x21, #8]
 5e4:	cbz	x19, 5d4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5d4>
 5e8:	cbz	x22, 5f4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5f4>
 5ec:	add	x1, x19, #0x8
 5f0:	b	5bc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5bc>
 5f4:	ldr	w0, [x19, #8]
 5f8:	sub	w1, w0, #0x1
 5fc:	str	w1, [x19, #8]
 600:	b	5cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5cc>
 604:	ldr	x0, [x19]
 608:	ldr	x1, [x0, #16]
 60c:	mov	x0, x19
 610:	blr	x1
 614:	cbz	x23, 648 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x648>
 618:	add	x1, x19, #0xc
 61c:	ldaxr	w0, [x1]
 620:	sub	w2, w0, #0x1
 624:	stlxr	w3, w2, [x1]
 628:	cbnz	w3, 61c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x61c>
 62c:	cmp	w0, #0x1
 630:	b.ne	5d4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5d4>  // b.any
 634:	ldr	x0, [x19]
 638:	ldr	x1, [x0, #24]
 63c:	mov	x0, x19
 640:	blr	x1
 644:	b	5d4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x5d4>
 648:	ldr	w0, [x19, #12]
 64c:	sub	w1, w0, #0x1
 650:	str	w1, [x19, #12]
 654:	b	62c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x62c>
 658:	ldp	x25, x26, [sp, #64]
 65c:	b	850 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x850>
 660:	bl	0 <_ZSt17__throw_bad_allocv>
 664:	mov	x0, #0x0                   	// #0
 668:	b	814 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x814>
 66c:	ldaxr	w5, [x1]
 670:	add	w5, w5, #0x1
 674:	stlxr	w7, w5, [x1]
 678:	cbnz	w7, 66c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x66c>
 67c:	add	x4, x4, #0x10
 680:	add	x2, x2, #0x10
 684:	cmp	x3, x2
 688:	b.eq	6bc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x6bc>  // b.none
 68c:	ldr	x1, [x2]
 690:	str	x1, [x4]
 694:	ldr	x1, [x2, #8]
 698:	str	x1, [x4, #8]
 69c:	cbz	x1, 67c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x67c>
 6a0:	cbz	x27, 6ac <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x6ac>
 6a4:	add	x1, x1, #0x8
 6a8:	b	66c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x66c>
 6ac:	ldr	w5, [x1, #8]
 6b0:	add	w5, w5, #0x1
 6b4:	str	w5, [x1, #8]
 6b8:	b	67c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x67c>
 6bc:	sub	x3, x3, x6
 6c0:	add	x0, x0, x3
 6c4:	str	x0, [x19, #16]
 6c8:	add	x1, x19, #0x30
 6cc:	mov	x0, x19
 6d0:	str	x1, [x0, #32]!
 6d4:	ldr	x1, [x21, #32]
 6d8:	ldr	x2, [x21, #40]
 6dc:	mov	w3, #0x0                   	// #0
 6e0:	add	x2, x1, x2
 6e4:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
 6e8:	ldr	x20, [x21, #72]
 6ec:	ldr	x0, [x21, #64]
 6f0:	sub	x20, x20, x0
 6f4:	asr	x0, x20, #3
 6f8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
 6fc:	movk	x1, #0xcccd
 700:	mul	x0, x0, x1
 704:	str	xzr, [x19, #64]
 708:	str	xzr, [x19, #72]
 70c:	str	xzr, [x19, #80]
 710:	cbz	x0, 844 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x844>
 714:	mov	x1, #0x3333333333333333    	// #3689348814741910323
 718:	movk	x1, #0x333, lsl #48
 71c:	cmp	x0, x1
 720:	b.hi	840 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x840>  // b.pmore
 724:	mov	x0, x20
 728:	bl	0 <_Znwm>
 72c:	mov	x22, x0
 730:	str	x22, [x19, #64]
 734:	str	x22, [x19, #72]
 738:	add	x20, x22, x20
 73c:	str	x20, [x19, #80]
 740:	ldr	x26, [x21, #64]
 744:	ldr	x20, [x21, #72]
 748:	cmp	x26, x20
 74c:	b.eq	7c0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x7c0>  // b.none
 750:	mov	x23, x26
 754:	mov	x25, x22
 758:	ldr	w0, [x23]
 75c:	mov	x1, x25
 760:	str	w0, [x1], #24
 764:	mov	x0, x25
 768:	str	x1, [x0, #8]!
 76c:	ldr	x1, [x23, #8]
 770:	ldr	x2, [x23, #16]
 774:	mov	w3, #0x0                   	// #0
 778:	add	x2, x1, x2
 77c:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_>
 780:	add	x25, x25, #0x28
 784:	add	x23, x23, #0x28
 788:	cmp	x20, x23
 78c:	b.ne	758 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x758>  // b.any
 790:	sub	x0, x20, #0x28
 794:	sub	x0, x0, x26
 798:	lsr	x0, x0, #3
 79c:	mov	x1, #0xcccd                	// #52429
 7a0:	movk	x1, #0xcccc, lsl #16
 7a4:	movk	x1, #0xcccc, lsl #32
 7a8:	movk	x1, #0xccc, lsl #48
 7ac:	mul	x0, x0, x1
 7b0:	and	x0, x0, #0x1fffffffffffffff
 7b4:	add	x0, x0, #0x1
 7b8:	add	x0, x0, x0, lsl #2
 7bc:	add	x22, x22, x0, lsl #3
 7c0:	str	x22, [x19, #72]
 7c4:	add	x21, x21, #0x58
 7c8:	add	x19, x19, #0x58
 7cc:	cmp	x28, x21
 7d0:	b.eq	84c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x84c>  // b.none
 7d4:	ldr	w0, [x21]
 7d8:	str	w0, [x19]
 7dc:	ldr	x20, [x21, #16]
 7e0:	ldr	x0, [x21, #8]
 7e4:	sub	x20, x20, x0
 7e8:	asr	x0, x20, #4
 7ec:	str	xzr, [x19, #8]
 7f0:	str	xzr, [x19, #16]
 7f4:	str	xzr, [x19, #24]
 7f8:	cmp	xzr, x20, asr #4
 7fc:	b.eq	664 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x664>  // b.none
 800:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
 804:	cmp	x0, x1
 808:	b.hi	660 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x660>  // b.pmore
 80c:	mov	x0, x20
 810:	bl	0 <_Znwm>
 814:	str	x0, [x19, #8]
 818:	str	x0, [x19, #16]
 81c:	add	x20, x0, x20
 820:	str	x20, [x19, #24]
 824:	ldr	x6, [x21, #8]
 828:	ldr	x3, [x21, #16]
 82c:	cmp	x6, x3
 830:	b.eq	6c4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x6c4>  // b.none
 834:	mov	x2, x6
 838:	mov	x4, x0
 83c:	b	68c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x68c>
 840:	bl	0 <_ZSt17__throw_bad_allocv>
 844:	mov	x22, #0x0                   	// #0
 848:	b	730 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x730>
 84c:	ldp	x25, x26, [sp, #64]
 850:	ldr	x0, [x24]
 854:	ldr	x1, [sp, #96]
 858:	add	x0, x0, x1
 85c:	str	x0, [x24, #8]
 860:	ldp	x19, x20, [sp, #16]
 864:	ldp	x21, x22, [sp, #32]
 868:	ldp	x27, x28, [sp, #80]
 86c:	mov	x0, x24
 870:	ldp	x23, x24, [sp, #48]
 874:	ldp	x29, x30, [sp], #112
 878:	ret
 87c:	ldp	x25, x26, [sp, #64]
 880:	b	850 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EEaSERKS4_+0x850>

BitstreamRemarkSerializer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	stp	x21, x22, [sp, #32]
       c:	add	x21, x1, x2
      10:	cmp	x1, x21
      14:	b.eq	84 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE+0x84>  // b.none
      18:	stp	x19, x20, [sp, #16]
      1c:	stp	x23, x24, [sp, #48]
      20:	mov	x19, x0
      24:	mov	x20, x1
      28:	add	x23, x0, #0x10
      2c:	mov	x22, #0x8                   	// #8
      30:	ldrb	w24, [x20]
      34:	ldr	w1, [x19, #8]
      38:	ldr	w0, [x19, #12]
      3c:	cmp	w1, w0
      40:	b.cs	90 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE+0x90>  // b.hs, b.nlast
      44:	ldr	w1, [x19, #8]
      48:	ldr	x0, [x19]
      4c:	str	x24, [x0, x1, lsl #3]
      50:	ldr	w0, [x19, #8]
      54:	mov	w1, w0
      58:	add	x1, x1, #0x1
      5c:	ldr	w3, [x19, #12]
      60:	cmp	x1, x3
      64:	b.hi	a8 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE+0xa8>  // b.pmore
      68:	add	w0, w0, #0x1
      6c:	str	w0, [x19, #8]
      70:	add	x20, x20, #0x1
      74:	cmp	x21, x20
      78:	b.ne	30 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE+0x30>  // b.any
      7c:	ldp	x19, x20, [sp, #16]
      80:	ldp	x23, x24, [sp, #48]
      84:	ldp	x21, x22, [sp, #32]
      88:	ldp	x29, x30, [sp], #64
      8c:	ret
      90:	mov	x3, x22
      94:	mov	x2, #0x0                   	// #0
      98:	mov	x1, x23
      9c:	mov	x0, x19
      a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
      a4:	b	44 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE+0x44>
      a8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
      ac:	add	x3, x3, #0x0
      b0:	mov	w2, #0x43                  	// #67
      b4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
      b8:	add	x1, x1, #0x0
      bc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
      c0:	add	x0, x0, #0x0
      c4:	bl	0 <__assert_fail>

00000000000000c8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>:
      c8:	stp	x29, x30, [sp, #-112]!
      cc:	mov	x29, sp
      d0:	stp	x19, x20, [sp, #16]
      d4:	stp	x21, x22, [sp, #32]
      d8:	stp	x23, x24, [sp, #48]
      dc:	stp	x25, x26, [sp, #64]
      e0:	stp	x27, x28, [sp, #80]
      e4:	mov	x19, x1
      e8:	mov	x20, x2
      ec:	str	x3, [sp, #96]
      f0:	str	x4, [sp, #104]
      f4:	str	wzr, [x2, #8]
      f8:	mov	w21, w0
      fc:	ldr	w0, [x2, #12]
     100:	cbz	w0, 1c0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xf8>
     104:	ldr	w1, [x20, #8]
     108:	ldr	x0, [x20]
     10c:	str	x21, [x0, x1, lsl #3]
     110:	ldr	w24, [x20, #8]
     114:	mov	w25, w24
     118:	add	x1, x25, #0x1
     11c:	ldr	w0, [x20, #12]
     120:	cmp	x1, x0
     124:	b.hi	1d8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x110>  // b.pmore
     128:	add	w24, w24, #0x1
     12c:	str	w24, [x20, #8]
     130:	ldr	w22, [x19, #16]
     134:	sub	w0, w22, #0x1
     138:	cmp	w0, #0x1f
     13c:	b.hi	1f8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x130>  // b.pmore
     140:	neg	w0, w22
     144:	mov	w1, #0xffffffff            	// #-1
     148:	lsr	w0, w1, w0
     14c:	mvn	w0, w0
     150:	tst	x0, #0x3
     154:	b.ne	218 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x150>  // b.any
     158:	ldr	w0, [x19, #8]
     15c:	mov	w21, #0x3                   	// #3
     160:	lsl	w21, w21, w0
     164:	ldr	w1, [x19, #12]
     168:	orr	w21, w21, w1
     16c:	str	w21, [x19, #12]
     170:	add	w0, w22, w0
     174:	cmp	w0, #0x1f
     178:	b.hi	238 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x170>  // b.pmore
     17c:	str	w0, [x19, #8]
     180:	ldr	w0, [x19, #8]
     184:	mov	w21, #0x1                   	// #1
     188:	lsl	w21, w21, w0
     18c:	ldr	w1, [x19, #12]
     190:	orr	w21, w21, w1
     194:	str	w21, [x19, #12]
     198:	add	w0, w0, #0x6
     19c:	cmp	w0, #0x1f
     1a0:	b.hi	2e0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x218>  // b.pmore
     1a4:	str	w0, [x19, #8]
     1a8:	cmp	w24, #0x1f
     1ac:	b.ls	464 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x39c>  // b.plast
     1b0:	mov	w23, w24
     1b4:	mov	w28, #0x20                  	// #32
     1b8:	mov	x27, #0x1                   	// #1
     1bc:	b	3fc <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x334>
     1c0:	mov	x3, #0x8                   	// #8
     1c4:	mov	x2, #0x0                   	// #0
     1c8:	add	x1, x20, #0x10
     1cc:	mov	x0, x20
     1d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     1d4:	b	104 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3c>
     1d8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     1dc:	add	x3, x3, #0x0
     1e0:	mov	w2, #0x43                  	// #67
     1e4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     1e8:	add	x1, x1, #0x0
     1ec:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     1f0:	add	x0, x0, #0x0
     1f4:	bl	0 <__assert_fail>
     1f8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     1fc:	add	x3, x3, #0x0
     200:	mov	w2, #0x78                  	// #120
     204:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     208:	add	x1, x1, #0x0
     20c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     210:	add	x0, x0, #0x0
     214:	bl	0 <__assert_fail>
     218:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     21c:	add	x3, x3, #0x0
     220:	mov	w2, #0x79                  	// #121
     224:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     228:	add	x1, x1, #0x0
     22c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     230:	add	x0, x0, #0x0
     234:	bl	0 <__assert_fail>
     238:	ldr	x23, [x19]
     23c:	ldr	w2, [x23, #8]
     240:	ldr	w0, [x23, #12]
     244:	sub	x0, x0, x2
     248:	cmp	x0, #0x3
     24c:	b.ls	2a8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x1e0>  // b.plast
     250:	ldr	w0, [x23, #8]
     254:	ldr	x1, [x23]
     258:	str	w21, [x1, x0]
     25c:	ldr	w0, [x23, #8]
     260:	mov	w1, w0
     264:	add	x1, x1, #0x4
     268:	ldr	w2, [x23, #12]
     26c:	cmp	x1, x2
     270:	b.hi	2c0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x1f8>  // b.pmore
     274:	add	w0, w0, #0x4
     278:	str	w0, [x23, #8]
     27c:	ldr	w1, [x19, #8]
     280:	neg	w2, w1
     284:	mov	w0, #0x3                   	// #3
     288:	lsr	w0, w0, w2
     28c:	cmp	w1, #0x0
     290:	csel	w0, w0, w1, ne  // ne = any
     294:	str	w0, [x19, #12]
     298:	add	w22, w22, w1
     29c:	and	w22, w22, #0x1f
     2a0:	str	w22, [x19, #8]
     2a4:	b	180 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xb8>
     2a8:	mov	x3, #0x1                   	// #1
     2ac:	add	x2, x2, #0x4
     2b0:	add	x1, x23, #0x10
     2b4:	mov	x0, x23
     2b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     2bc:	b	250 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x188>
     2c0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     2c4:	add	x3, x3, #0x0
     2c8:	mov	w2, #0x43                  	// #67
     2cc:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     2d0:	add	x1, x1, #0x0
     2d4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     2d8:	add	x0, x0, #0x0
     2dc:	bl	0 <__assert_fail>
     2e0:	ldr	x22, [x19]
     2e4:	ldr	w2, [x22, #8]
     2e8:	ldr	w0, [x22, #12]
     2ec:	sub	x0, x0, x2
     2f0:	cmp	x0, #0x3
     2f4:	b.ls	350 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x288>  // b.plast
     2f8:	ldr	w0, [x22, #8]
     2fc:	ldr	x1, [x22]
     300:	str	w21, [x1, x0]
     304:	ldr	w0, [x22, #8]
     308:	mov	w1, w0
     30c:	add	x1, x1, #0x4
     310:	ldr	w2, [x22, #12]
     314:	cmp	x1, x2
     318:	b.hi	368 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x2a0>  // b.pmore
     31c:	add	w0, w0, #0x4
     320:	str	w0, [x22, #8]
     324:	ldr	w0, [x19, #8]
     328:	neg	w2, w0
     32c:	mov	w1, #0x1                   	// #1
     330:	lsr	w1, w1, w2
     334:	cmp	w0, #0x0
     338:	csel	w1, w1, w0, ne  // ne = any
     33c:	str	w1, [x19, #12]
     340:	add	w0, w0, #0x6
     344:	and	w0, w0, #0x1f
     348:	str	w0, [x19, #8]
     34c:	b	1a8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xe0>
     350:	mov	x3, #0x1                   	// #1
     354:	add	x2, x2, #0x4
     358:	add	x1, x22, #0x10
     35c:	mov	x0, x22
     360:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     364:	b	2f8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x230>
     368:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     36c:	add	x3, x3, #0x0
     370:	mov	w2, #0x43                  	// #67
     374:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     378:	add	x1, x1, #0x0
     37c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     380:	add	x0, x0, #0x0
     384:	bl	0 <__assert_fail>
     388:	ldr	x21, [x19]
     38c:	ldr	w2, [x21, #8]
     390:	ldr	w0, [x21, #12]
     394:	sub	x0, x0, x2
     398:	cmp	x0, #0x3
     39c:	b.ls	42c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x364>  // b.plast
     3a0:	ldr	w0, [x21, #8]
     3a4:	ldr	x1, [x21]
     3a8:	str	w26, [x1, x0]
     3ac:	ldr	w0, [x21, #8]
     3b0:	mov	w1, w0
     3b4:	add	x1, x1, #0x4
     3b8:	ldr	w2, [x21, #12]
     3bc:	cmp	x1, x2
     3c0:	b.hi	444 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x37c>  // b.pmore
     3c4:	add	w0, w0, #0x4
     3c8:	str	w0, [x21, #8]
     3cc:	ldr	w0, [x19, #8]
     3d0:	sub	w1, w28, w0
     3d4:	lsr	w22, w22, w1
     3d8:	cmp	w0, #0x0
     3dc:	csel	w22, w22, w0, ne  // ne = any
     3e0:	str	w22, [x19, #12]
     3e4:	add	w0, w0, #0x6
     3e8:	and	w0, w0, #0x1f
     3ec:	str	w0, [x19, #8]
     3f0:	lsr	w23, w23, #5
     3f4:	cmp	w23, #0x1f
     3f8:	b.ls	470 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3a8>  // b.plast
     3fc:	and	w22, w23, #0x1f
     400:	orr	w22, w22, #0x20
     404:	ldr	w0, [x19, #8]
     408:	lsl	w26, w22, w0
     40c:	ldr	w1, [x19, #12]
     410:	orr	w26, w26, w1
     414:	str	w26, [x19, #12]
     418:	add	w0, w0, #0x6
     41c:	cmp	w0, #0x1f
     420:	b.hi	388 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x2c0>  // b.pmore
     424:	str	w0, [x19, #8]
     428:	b	3f0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x328>
     42c:	mov	x3, x27
     430:	add	x2, x2, #0x4
     434:	add	x1, x21, #0x10
     438:	mov	x0, x21
     43c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     440:	b	3a0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x2d8>
     444:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     448:	add	x3, x3, #0x0
     44c:	mov	w2, #0x43                  	// #67
     450:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     454:	add	x1, x1, #0x0
     458:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     45c:	add	x0, x0, #0x0
     460:	bl	0 <__assert_fail>
     464:	mov	w23, w24
     468:	tst	w24, #0xffffffc0
     46c:	b.ne	4a8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3e0>  // b.any
     470:	ldr	w0, [x19, #8]
     474:	lsl	w21, w23, w0
     478:	ldr	w1, [x19, #12]
     47c:	orr	w21, w21, w1
     480:	str	w21, [x19, #12]
     484:	add	w0, w0, #0x6
     488:	cmp	w0, #0x1f
     48c:	b.hi	4c8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x400>  // b.pmore
     490:	str	w0, [x19, #8]
     494:	cbz	w24, 970 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x8a8>
     498:	mov	x23, #0x0                   	// #0
     49c:	mov	w24, #0x20                  	// #32
     4a0:	mov	x26, #0x1                   	// #1
     4a4:	b	87c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7b4>
     4a8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     4ac:	add	x3, x3, #0x0
     4b0:	mov	w2, #0x79                  	// #121
     4b4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     4b8:	add	x1, x1, #0x0
     4bc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     4c0:	add	x0, x0, #0x0
     4c4:	bl	0 <__assert_fail>
     4c8:	ldr	x22, [x19]
     4cc:	ldr	w2, [x22, #8]
     4d0:	ldr	w0, [x22, #12]
     4d4:	sub	x0, x0, x2
     4d8:	cmp	x0, #0x3
     4dc:	b.ls	534 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x46c>  // b.plast
     4e0:	ldr	w0, [x22, #8]
     4e4:	ldr	x1, [x22]
     4e8:	str	w21, [x1, x0]
     4ec:	ldr	w0, [x22, #8]
     4f0:	mov	w1, w0
     4f4:	add	x1, x1, #0x4
     4f8:	ldr	w2, [x22, #12]
     4fc:	cmp	x1, x2
     500:	b.hi	54c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x484>  // b.pmore
     504:	add	w0, w0, #0x4
     508:	str	w0, [x22, #8]
     50c:	ldr	w0, [x19, #8]
     510:	neg	w1, w0
     514:	lsr	w23, w23, w1
     518:	cmp	w0, #0x0
     51c:	csel	w23, w23, w0, ne  // ne = any
     520:	str	w23, [x19, #12]
     524:	add	w0, w0, #0x6
     528:	and	w0, w0, #0x1f
     52c:	str	w0, [x19, #8]
     530:	b	494 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3cc>
     534:	mov	x3, #0x1                   	// #1
     538:	add	x2, x2, #0x4
     53c:	add	x1, x22, #0x10
     540:	mov	x0, x22
     544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     548:	b	4e0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x418>
     54c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     550:	add	x3, x3, #0x0
     554:	mov	w2, #0x43                  	// #67
     558:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     55c:	add	x1, x1, #0x0
     560:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     564:	add	x0, x0, #0x0
     568:	bl	0 <__assert_fail>
     56c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     570:	add	x3, x3, #0x0
     574:	mov	w2, #0x99                  	// #153
     578:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     57c:	add	x1, x1, #0x0
     580:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     584:	add	x0, x0, #0x0
     588:	bl	0 <__assert_fail>
     58c:	mov	w22, w21
     590:	cmp	w21, #0x1f
     594:	b.hi	63c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x574>  // b.pmore
     598:	tst	w21, #0xffffffc0
     59c:	b.ne	6a4 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x5dc>  // b.any
     5a0:	ldr	w0, [x19, #8]
     5a4:	lsl	w27, w22, w0
     5a8:	ldr	w1, [x19, #12]
     5ac:	orr	w27, w27, w1
     5b0:	str	w27, [x19, #12]
     5b4:	add	w0, w0, #0x6
     5b8:	cmp	w0, #0x1f
     5bc:	b.hi	6c4 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x5fc>  // b.pmore
     5c0:	str	w0, [x19, #8]
     5c4:	b	86c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7a4>
     5c8:	ldr	x21, [x19]
     5cc:	ldr	w2, [x21, #8]
     5d0:	ldr	w0, [x21, #12]
     5d4:	sub	x0, x0, x2
     5d8:	cmp	x0, #0x3
     5dc:	b.ls	66c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x5a4>  // b.plast
     5e0:	ldr	w0, [x21, #8]
     5e4:	ldr	x1, [x21]
     5e8:	str	w28, [x1, x0]
     5ec:	ldr	w0, [x21, #8]
     5f0:	mov	w1, w0
     5f4:	add	x1, x1, #0x4
     5f8:	ldr	w2, [x21, #12]
     5fc:	cmp	x1, x2
     600:	b.hi	684 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x5bc>  // b.pmore
     604:	add	w0, w0, #0x4
     608:	str	w0, [x21, #8]
     60c:	ldr	w0, [x19, #8]
     610:	sub	w1, w24, w0
     614:	lsr	w27, w27, w1
     618:	cmp	w0, #0x0
     61c:	csel	w27, w27, w0, ne  // ne = any
     620:	str	w27, [x19, #12]
     624:	add	w0, w0, #0x6
     628:	and	w0, w0, #0x1f
     62c:	str	w0, [x19, #8]
     630:	lsr	w22, w22, #5
     634:	cmp	w22, #0x1f
     638:	b.ls	5a0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x4d8>  // b.plast
     63c:	and	w27, w22, #0x1f
     640:	orr	w27, w27, #0x20
     644:	ldr	w0, [x19, #8]
     648:	lsl	w28, w27, w0
     64c:	ldr	w1, [x19, #12]
     650:	orr	w28, w28, w1
     654:	str	w28, [x19, #12]
     658:	add	w0, w0, #0x6
     65c:	cmp	w0, #0x1f
     660:	b.hi	5c8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x500>  // b.pmore
     664:	str	w0, [x19, #8]
     668:	b	630 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x568>
     66c:	mov	x3, x26
     670:	add	x2, x2, #0x4
     674:	add	x1, x21, #0x10
     678:	mov	x0, x21
     67c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     680:	b	5e0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x518>
     684:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     688:	add	x3, x3, #0x0
     68c:	mov	w2, #0x43                  	// #67
     690:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     694:	add	x1, x1, #0x0
     698:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     69c:	add	x0, x0, #0x0
     6a0:	bl	0 <__assert_fail>
     6a4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     6a8:	add	x3, x3, #0x0
     6ac:	mov	w2, #0x79                  	// #121
     6b0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     6b4:	add	x1, x1, #0x0
     6b8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     6bc:	add	x0, x0, #0x0
     6c0:	bl	0 <__assert_fail>
     6c4:	ldr	x21, [x19]
     6c8:	ldr	w2, [x21, #8]
     6cc:	ldr	w0, [x21, #12]
     6d0:	sub	x0, x0, x2
     6d4:	cmp	x0, #0x3
     6d8:	b.ls	730 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x668>  // b.plast
     6dc:	ldr	w0, [x21, #8]
     6e0:	ldr	x1, [x21]
     6e4:	str	w27, [x1, x0]
     6e8:	ldr	w0, [x21, #8]
     6ec:	mov	w1, w0
     6f0:	add	x1, x1, #0x4
     6f4:	ldr	w2, [x21, #12]
     6f8:	cmp	x1, x2
     6fc:	b.hi	748 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x680>  // b.pmore
     700:	add	w0, w0, #0x4
     704:	str	w0, [x21, #8]
     708:	ldr	w0, [x19, #8]
     70c:	sub	w1, w24, w0
     710:	lsr	w22, w22, w1
     714:	cmp	w0, #0x0
     718:	csel	w22, w22, w0, ne  // ne = any
     71c:	str	w22, [x19, #12]
     720:	add	w0, w0, #0x6
     724:	and	w0, w0, #0x1f
     728:	str	w0, [x19, #8]
     72c:	b	86c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7a4>
     730:	mov	x3, x26
     734:	add	x2, x2, #0x4
     738:	add	x1, x21, #0x10
     73c:	mov	x0, x21
     740:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     744:	b	6dc <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x614>
     748:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     74c:	add	x3, x3, #0x0
     750:	mov	w2, #0x43                  	// #67
     754:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     758:	add	x1, x1, #0x0
     75c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     760:	add	x0, x0, #0x0
     764:	bl	0 <__assert_fail>
     768:	ldr	x22, [x19]
     76c:	ldr	w2, [x22, #8]
     770:	ldr	w0, [x22, #12]
     774:	sub	x0, x0, x2
     778:	cmp	x0, #0x3
     77c:	b.ls	80c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x744>  // b.plast
     780:	ldr	w0, [x22, #8]
     784:	ldr	x1, [x22]
     788:	str	w28, [x1, x0]
     78c:	ldr	w0, [x22, #8]
     790:	mov	w1, w0
     794:	add	x1, x1, #0x4
     798:	ldr	w2, [x22, #12]
     79c:	cmp	x1, x2
     7a0:	b.hi	824 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x75c>  // b.pmore
     7a4:	add	w0, w0, #0x4
     7a8:	str	w0, [x22, #8]
     7ac:	ldr	w0, [x19, #8]
     7b0:	sub	w1, w24, w0
     7b4:	lsr	w27, w27, w1
     7b8:	cmp	w0, #0x0
     7bc:	csel	w27, w27, w0, ne  // ne = any
     7c0:	str	w27, [x19, #12]
     7c4:	add	w0, w0, #0x6
     7c8:	and	w0, w0, #0x1f
     7cc:	str	w0, [x19, #8]
     7d0:	lsr	x21, x21, #5
     7d4:	cmp	x21, #0x1f
     7d8:	b.ls	844 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x77c>  // b.plast
     7dc:	and	w27, w21, #0x1f
     7e0:	orr	w27, w27, #0x20
     7e4:	ldr	w0, [x19, #8]
     7e8:	lsl	w28, w27, w0
     7ec:	ldr	w1, [x19, #12]
     7f0:	orr	w28, w28, w1
     7f4:	str	w28, [x19, #12]
     7f8:	add	w0, w0, #0x6
     7fc:	cmp	w0, #0x1f
     800:	b.hi	768 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x6a0>  // b.pmore
     804:	str	w0, [x19, #8]
     808:	b	7d0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x708>
     80c:	mov	x3, x26
     810:	add	x2, x2, #0x4
     814:	add	x1, x22, #0x10
     818:	mov	x0, x22
     81c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     820:	b	780 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x6b8>
     824:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     828:	add	x3, x3, #0x0
     82c:	mov	w2, #0x43                  	// #67
     830:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     834:	add	x1, x1, #0x0
     838:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     83c:	add	x0, x0, #0x0
     840:	bl	0 <__assert_fail>
     844:	mov	w22, w21
     848:	ldr	w0, [x19, #8]
     84c:	lsl	w27, w22, w0
     850:	ldr	w1, [x19, #12]
     854:	orr	w27, w27, w1
     858:	str	w27, [x19, #12]
     85c:	add	w0, w0, #0x6
     860:	cmp	w0, #0x1f
     864:	b.hi	8cc <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x804>  // b.pmore
     868:	str	w0, [x19, #8]
     86c:	add	x0, x23, #0x1
     870:	cmp	x25, x23
     874:	b.eq	970 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x8a8>  // b.none
     878:	mov	x23, x0
     87c:	ldr	w0, [x20, #8]
     880:	cmp	x0, x23
     884:	b.ls	56c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x4a4>  // b.plast
     888:	ldr	x0, [x20]
     88c:	ldr	x21, [x0, x23, lsl #3]
     890:	tst	x21, #0xffffffff00000000
     894:	b.eq	58c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x4c4>  // b.none
     898:	cmp	x21, #0x1f
     89c:	b.hi	7dc <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x714>  // b.pmore
     8a0:	mov	w22, w21
     8a4:	tst	w21, #0xffffffc0
     8a8:	b.eq	848 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x780>  // b.none
     8ac:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     8b0:	add	x3, x3, #0x0
     8b4:	mov	w2, #0x79                  	// #121
     8b8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     8bc:	add	x1, x1, #0x0
     8c0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     8c4:	add	x0, x0, #0x0
     8c8:	bl	0 <__assert_fail>
     8cc:	ldr	x21, [x19]
     8d0:	ldr	w2, [x21, #8]
     8d4:	ldr	w0, [x21, #12]
     8d8:	sub	x0, x0, x2
     8dc:	cmp	x0, #0x3
     8e0:	b.ls	938 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x870>  // b.plast
     8e4:	ldr	w0, [x21, #8]
     8e8:	ldr	x1, [x21]
     8ec:	str	w27, [x1, x0]
     8f0:	ldr	w0, [x21, #8]
     8f4:	mov	w1, w0
     8f8:	add	x1, x1, #0x4
     8fc:	ldr	w2, [x21, #12]
     900:	cmp	x1, x2
     904:	b.hi	950 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x888>  // b.pmore
     908:	add	w0, w0, #0x4
     90c:	str	w0, [x21, #8]
     910:	ldr	w0, [x19, #8]
     914:	sub	w1, w24, w0
     918:	lsr	w22, w22, w1
     91c:	cmp	w0, #0x0
     920:	csel	w22, w22, w0, ne  // ne = any
     924:	str	w22, [x19, #12]
     928:	add	w0, w0, #0x6
     92c:	and	w0, w0, #0x1f
     930:	str	w0, [x19, #8]
     934:	b	86c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7a4>
     938:	mov	x3, x26
     93c:	add	x2, x2, #0x4
     940:	add	x1, x21, #0x10
     944:	mov	x0, x21
     948:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     94c:	b	8e4 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x81c>
     950:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     954:	add	x3, x3, #0x0
     958:	mov	w2, #0x43                  	// #67
     95c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     960:	add	x1, x1, #0x0
     964:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     968:	add	x0, x0, #0x0
     96c:	bl	0 <__assert_fail>
     970:	str	wzr, [x20, #8]
     974:	ldr	x1, [sp, #96]
     978:	ldr	x2, [sp, #104]
     97c:	mov	x0, x20
     980:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     984:	ldr	w25, [x20, #8]
     988:	ldr	w22, [x19, #16]
     98c:	sub	w0, w22, #0x1
     990:	cmp	w0, #0x1f
     994:	b.hi	a18 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x950>  // b.pmore
     998:	neg	w0, w22
     99c:	mov	w1, #0xffffffff            	// #-1
     9a0:	lsr	w0, w1, w0
     9a4:	mvn	w0, w0
     9a8:	tst	x0, #0x3
     9ac:	b.ne	a38 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x970>  // b.any
     9b0:	ldr	w0, [x19, #8]
     9b4:	mov	w21, #0x3                   	// #3
     9b8:	lsl	w21, w21, w0
     9bc:	ldr	w1, [x19, #12]
     9c0:	orr	w21, w21, w1
     9c4:	str	w21, [x19, #12]
     9c8:	add	w0, w22, w0
     9cc:	cmp	w0, #0x1f
     9d0:	b.hi	a58 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x990>  // b.pmore
     9d4:	str	w0, [x19, #8]
     9d8:	ldr	w0, [x19, #8]
     9dc:	mov	w21, #0x2                   	// #2
     9e0:	lsl	w21, w21, w0
     9e4:	ldr	w1, [x19, #12]
     9e8:	orr	w21, w21, w1
     9ec:	str	w21, [x19, #12]
     9f0:	add	w0, w0, #0x6
     9f4:	cmp	w0, #0x1f
     9f8:	b.hi	b00 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xa38>  // b.pmore
     9fc:	str	w0, [x19, #8]
     a00:	cmp	w25, #0x1f
     a04:	b.ls	c84 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xbbc>  // b.plast
     a08:	mov	w22, w25
     a0c:	mov	w24, #0x20                  	// #32
     a10:	mov	x23, #0x1                   	// #1
     a14:	b	c1c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xb54>
     a18:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     a1c:	add	x3, x3, #0x0
     a20:	mov	w2, #0x78                  	// #120
     a24:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     a28:	add	x1, x1, #0x0
     a2c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     a30:	add	x0, x0, #0x0
     a34:	bl	0 <__assert_fail>
     a38:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     a3c:	add	x3, x3, #0x0
     a40:	mov	w2, #0x79                  	// #121
     a44:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     a48:	add	x1, x1, #0x0
     a4c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     a50:	add	x0, x0, #0x0
     a54:	bl	0 <__assert_fail>
     a58:	ldr	x23, [x19]
     a5c:	ldr	w2, [x23, #8]
     a60:	ldr	w0, [x23, #12]
     a64:	sub	x0, x0, x2
     a68:	cmp	x0, #0x3
     a6c:	b.ls	ac8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xa00>  // b.plast
     a70:	ldr	w0, [x23, #8]
     a74:	ldr	x1, [x23]
     a78:	str	w21, [x1, x0]
     a7c:	ldr	w0, [x23, #8]
     a80:	mov	w1, w0
     a84:	add	x1, x1, #0x4
     a88:	ldr	w2, [x23, #12]
     a8c:	cmp	x1, x2
     a90:	b.hi	ae0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xa18>  // b.pmore
     a94:	add	w0, w0, #0x4
     a98:	str	w0, [x23, #8]
     a9c:	ldr	w0, [x19, #8]
     aa0:	neg	w2, w0
     aa4:	mov	w1, #0x3                   	// #3
     aa8:	lsr	w1, w1, w2
     aac:	cmp	w0, #0x0
     ab0:	csel	w1, w1, w0, ne  // ne = any
     ab4:	str	w1, [x19, #12]
     ab8:	add	w0, w22, w0
     abc:	and	w0, w0, #0x1f
     ac0:	str	w0, [x19, #8]
     ac4:	b	9d8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x910>
     ac8:	mov	x3, #0x1                   	// #1
     acc:	add	x2, x2, #0x4
     ad0:	add	x1, x23, #0x10
     ad4:	mov	x0, x23
     ad8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     adc:	b	a70 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x9a8>
     ae0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ae4:	add	x3, x3, #0x0
     ae8:	mov	w2, #0x43                  	// #67
     aec:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     af0:	add	x1, x1, #0x0
     af4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     af8:	add	x0, x0, #0x0
     afc:	bl	0 <__assert_fail>
     b00:	ldr	x22, [x19]
     b04:	ldr	w2, [x22, #8]
     b08:	ldr	w0, [x22, #12]
     b0c:	sub	x0, x0, x2
     b10:	cmp	x0, #0x3
     b14:	b.ls	b70 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xaa8>  // b.plast
     b18:	ldr	w0, [x22, #8]
     b1c:	ldr	x1, [x22]
     b20:	str	w21, [x1, x0]
     b24:	ldr	w0, [x22, #8]
     b28:	mov	w1, w0
     b2c:	add	x1, x1, #0x4
     b30:	ldr	w2, [x22, #12]
     b34:	cmp	x1, x2
     b38:	b.hi	b88 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xac0>  // b.pmore
     b3c:	add	w0, w0, #0x4
     b40:	str	w0, [x22, #8]
     b44:	ldr	w0, [x19, #8]
     b48:	neg	w2, w0
     b4c:	mov	w1, #0x2                   	// #2
     b50:	lsr	w1, w1, w2
     b54:	cmp	w0, #0x0
     b58:	csel	w1, w1, w0, ne  // ne = any
     b5c:	str	w1, [x19, #12]
     b60:	add	w0, w0, #0x6
     b64:	and	w0, w0, #0x1f
     b68:	str	w0, [x19, #8]
     b6c:	b	a00 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x938>
     b70:	mov	x3, #0x1                   	// #1
     b74:	add	x2, x2, #0x4
     b78:	add	x1, x22, #0x10
     b7c:	mov	x0, x22
     b80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     b84:	b	b18 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xa50>
     b88:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     b8c:	add	x3, x3, #0x0
     b90:	mov	w2, #0x43                  	// #67
     b94:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     b98:	add	x1, x1, #0x0
     b9c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ba0:	add	x0, x0, #0x0
     ba4:	bl	0 <__assert_fail>
     ba8:	ldr	x21, [x19]
     bac:	ldr	w2, [x21, #8]
     bb0:	ldr	w0, [x21, #12]
     bb4:	sub	x0, x0, x2
     bb8:	cmp	x0, #0x3
     bbc:	b.ls	c4c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xb84>  // b.plast
     bc0:	ldr	w0, [x21, #8]
     bc4:	ldr	x1, [x21]
     bc8:	str	w27, [x1, x0]
     bcc:	ldr	w0, [x21, #8]
     bd0:	mov	w1, w0
     bd4:	add	x1, x1, #0x4
     bd8:	ldr	w2, [x21, #12]
     bdc:	cmp	x1, x2
     be0:	b.hi	c64 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xb9c>  // b.pmore
     be4:	add	w0, w0, #0x4
     be8:	str	w0, [x21, #8]
     bec:	ldr	w0, [x19, #8]
     bf0:	sub	w1, w24, w0
     bf4:	lsr	w26, w26, w1
     bf8:	cmp	w0, #0x0
     bfc:	csel	w26, w26, w0, ne  // ne = any
     c00:	str	w26, [x19, #12]
     c04:	add	w0, w0, #0x6
     c08:	and	w0, w0, #0x1f
     c0c:	str	w0, [x19, #8]
     c10:	lsr	w22, w22, #5
     c14:	cmp	w22, #0x1f
     c18:	b.ls	c90 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xbc8>  // b.plast
     c1c:	and	w26, w22, #0x1f
     c20:	orr	w26, w26, #0x20
     c24:	ldr	w0, [x19, #8]
     c28:	lsl	w27, w26, w0
     c2c:	ldr	w1, [x19, #12]
     c30:	orr	w27, w27, w1
     c34:	str	w27, [x19, #12]
     c38:	add	w0, w0, #0x6
     c3c:	cmp	w0, #0x1f
     c40:	b.hi	ba8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xae0>  // b.pmore
     c44:	str	w0, [x19, #8]
     c48:	b	c10 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xb48>
     c4c:	mov	x3, x23
     c50:	add	x2, x2, #0x4
     c54:	add	x1, x21, #0x10
     c58:	mov	x0, x21
     c5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     c60:	b	bc0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xaf8>
     c64:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     c68:	add	x3, x3, #0x0
     c6c:	mov	w2, #0x43                  	// #67
     c70:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     c74:	add	x1, x1, #0x0
     c78:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     c7c:	add	x0, x0, #0x0
     c80:	bl	0 <__assert_fail>
     c84:	mov	w22, w25
     c88:	tst	w25, #0xffffffc0
     c8c:	b.ne	cc8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xc00>  // b.any
     c90:	ldr	w0, [x19, #8]
     c94:	lsl	w21, w22, w0
     c98:	ldr	w1, [x19, #12]
     c9c:	orr	w21, w21, w1
     ca0:	str	w21, [x19, #12]
     ca4:	add	w0, w0, #0x6
     ca8:	cmp	w0, #0x1f
     cac:	b.hi	ce8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xc20>  // b.pmore
     cb0:	str	w0, [x19, #8]
     cb4:	cbz	w25, 118c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x10c4>
     cb8:	mov	x23, #0x0                   	// #0
     cbc:	mov	w24, #0x20                  	// #32
     cc0:	mov	x26, #0x1                   	// #1
     cc4:	b	1098 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xfd0>
     cc8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ccc:	add	x3, x3, #0x0
     cd0:	mov	w2, #0x79                  	// #121
     cd4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     cd8:	add	x1, x1, #0x0
     cdc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ce0:	add	x0, x0, #0x0
     ce4:	bl	0 <__assert_fail>
     ce8:	ldr	x23, [x19]
     cec:	ldr	w2, [x23, #8]
     cf0:	ldr	w0, [x23, #12]
     cf4:	sub	x0, x0, x2
     cf8:	cmp	x0, #0x3
     cfc:	b.ls	d54 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xc8c>  // b.plast
     d00:	ldr	w0, [x23, #8]
     d04:	ldr	x1, [x23]
     d08:	str	w21, [x1, x0]
     d0c:	ldr	w0, [x23, #8]
     d10:	mov	w1, w0
     d14:	add	x1, x1, #0x4
     d18:	ldr	w2, [x23, #12]
     d1c:	cmp	x1, x2
     d20:	b.hi	d6c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xca4>  // b.pmore
     d24:	add	w0, w0, #0x4
     d28:	str	w0, [x23, #8]
     d2c:	ldr	w0, [x19, #8]
     d30:	neg	w1, w0
     d34:	lsr	w22, w22, w1
     d38:	cmp	w0, #0x0
     d3c:	csel	w22, w22, w0, ne  // ne = any
     d40:	str	w22, [x19, #12]
     d44:	add	w0, w0, #0x6
     d48:	and	w0, w0, #0x1f
     d4c:	str	w0, [x19, #8]
     d50:	b	cb4 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xbec>
     d54:	mov	x3, #0x1                   	// #1
     d58:	add	x2, x2, #0x4
     d5c:	add	x1, x23, #0x10
     d60:	mov	x0, x23
     d64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     d68:	b	d00 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xc38>
     d6c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     d70:	add	x3, x3, #0x0
     d74:	mov	w2, #0x43                  	// #67
     d78:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     d7c:	add	x1, x1, #0x0
     d80:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     d84:	add	x0, x0, #0x0
     d88:	bl	0 <__assert_fail>
     d8c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     d90:	add	x3, x3, #0x0
     d94:	mov	w2, #0x99                  	// #153
     d98:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     d9c:	add	x1, x1, #0x0
     da0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     da4:	add	x0, x0, #0x0
     da8:	bl	0 <__assert_fail>
     dac:	mov	w22, w21
     db0:	cmp	w21, #0x1f
     db4:	b.hi	e5c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xd94>  // b.pmore
     db8:	tst	w21, #0xffffffc0
     dbc:	b.ne	ec4 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xdfc>  // b.any
     dc0:	ldr	w0, [x19, #8]
     dc4:	lsl	w21, w22, w0
     dc8:	ldr	w1, [x19, #12]
     dcc:	orr	w21, w21, w1
     dd0:	str	w21, [x19, #12]
     dd4:	add	w0, w0, #0x6
     dd8:	cmp	w0, #0x1f
     ddc:	b.hi	ee4 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xe1c>  // b.pmore
     de0:	str	w0, [x19, #8]
     de4:	b	108c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xfc4>
     de8:	ldr	x21, [x19]
     dec:	ldr	w2, [x21, #8]
     df0:	ldr	w0, [x21, #12]
     df4:	sub	x0, x0, x2
     df8:	cmp	x0, #0x3
     dfc:	b.ls	e8c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xdc4>  // b.plast
     e00:	ldr	w0, [x21, #8]
     e04:	ldr	x1, [x21]
     e08:	str	w28, [x1, x0]
     e0c:	ldr	w0, [x21, #8]
     e10:	mov	w1, w0
     e14:	add	x1, x1, #0x4
     e18:	ldr	w2, [x21, #12]
     e1c:	cmp	x1, x2
     e20:	b.hi	ea4 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xddc>  // b.pmore
     e24:	add	w0, w0, #0x4
     e28:	str	w0, [x21, #8]
     e2c:	ldr	w0, [x19, #8]
     e30:	sub	w1, w24, w0
     e34:	lsr	w27, w27, w1
     e38:	cmp	w0, #0x0
     e3c:	csel	w27, w27, w0, ne  // ne = any
     e40:	str	w27, [x19, #12]
     e44:	add	w0, w0, #0x6
     e48:	and	w0, w0, #0x1f
     e4c:	str	w0, [x19, #8]
     e50:	lsr	w22, w22, #5
     e54:	cmp	w22, #0x1f
     e58:	b.ls	dc0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xcf8>  // b.plast
     e5c:	and	w27, w22, #0x1f
     e60:	orr	w27, w27, #0x20
     e64:	ldr	w0, [x19, #8]
     e68:	lsl	w28, w27, w0
     e6c:	ldr	w1, [x19, #12]
     e70:	orr	w28, w28, w1
     e74:	str	w28, [x19, #12]
     e78:	add	w0, w0, #0x6
     e7c:	cmp	w0, #0x1f
     e80:	b.hi	de8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xd20>  // b.pmore
     e84:	str	w0, [x19, #8]
     e88:	b	e50 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xd88>
     e8c:	mov	x3, x26
     e90:	add	x2, x2, #0x4
     e94:	add	x1, x21, #0x10
     e98:	mov	x0, x21
     e9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ea0:	b	e00 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xd38>
     ea4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ea8:	add	x3, x3, #0x0
     eac:	mov	w2, #0x43                  	// #67
     eb0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     eb4:	add	x1, x1, #0x0
     eb8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ebc:	add	x0, x0, #0x0
     ec0:	bl	0 <__assert_fail>
     ec4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ec8:	add	x3, x3, #0x0
     ecc:	mov	w2, #0x79                  	// #121
     ed0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     ed4:	add	x1, x1, #0x0
     ed8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     edc:	add	x0, x0, #0x0
     ee0:	bl	0 <__assert_fail>
     ee4:	ldr	x27, [x19]
     ee8:	ldr	w2, [x27, #8]
     eec:	ldr	w0, [x27, #12]
     ef0:	sub	x0, x0, x2
     ef4:	cmp	x0, #0x3
     ef8:	b.ls	f50 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xe88>  // b.plast
     efc:	ldr	w0, [x27, #8]
     f00:	ldr	x1, [x27]
     f04:	str	w21, [x1, x0]
     f08:	ldr	w0, [x27, #8]
     f0c:	mov	w1, w0
     f10:	add	x1, x1, #0x4
     f14:	ldr	w2, [x27, #12]
     f18:	cmp	x1, x2
     f1c:	b.hi	f68 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xea0>  // b.pmore
     f20:	add	w0, w0, #0x4
     f24:	str	w0, [x27, #8]
     f28:	ldr	w0, [x19, #8]
     f2c:	sub	w1, w24, w0
     f30:	lsr	w22, w22, w1
     f34:	cmp	w0, #0x0
     f38:	csel	w22, w22, w0, ne  // ne = any
     f3c:	str	w22, [x19, #12]
     f40:	add	w0, w0, #0x6
     f44:	and	w0, w0, #0x1f
     f48:	str	w0, [x19, #8]
     f4c:	b	108c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xfc4>
     f50:	mov	x3, x26
     f54:	add	x2, x2, #0x4
     f58:	add	x1, x27, #0x10
     f5c:	mov	x0, x27
     f60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     f64:	b	efc <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xe34>
     f68:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     f6c:	add	x3, x3, #0x0
     f70:	mov	w2, #0x43                  	// #67
     f74:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     f78:	add	x1, x1, #0x0
     f7c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
     f80:	add	x0, x0, #0x0
     f84:	bl	0 <__assert_fail>
     f88:	ldr	x22, [x19]
     f8c:	ldr	w2, [x22, #8]
     f90:	ldr	w0, [x22, #12]
     f94:	sub	x0, x0, x2
     f98:	cmp	x0, #0x3
     f9c:	b.ls	102c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xf64>  // b.plast
     fa0:	ldr	w0, [x22, #8]
     fa4:	ldr	x1, [x22]
     fa8:	str	w28, [x1, x0]
     fac:	ldr	w0, [x22, #8]
     fb0:	mov	w1, w0
     fb4:	add	x1, x1, #0x4
     fb8:	ldr	w2, [x22, #12]
     fbc:	cmp	x1, x2
     fc0:	b.hi	1044 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xf7c>  // b.pmore
     fc4:	add	w0, w0, #0x4
     fc8:	str	w0, [x22, #8]
     fcc:	ldr	w0, [x19, #8]
     fd0:	sub	w1, w24, w0
     fd4:	lsr	w27, w27, w1
     fd8:	cmp	w0, #0x0
     fdc:	csel	w27, w27, w0, ne  // ne = any
     fe0:	str	w27, [x19, #12]
     fe4:	add	w0, w0, #0x6
     fe8:	and	w0, w0, #0x1f
     fec:	str	w0, [x19, #8]
     ff0:	lsr	x21, x21, #5
     ff4:	cmp	x21, #0x1f
     ff8:	b.ls	1064 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xf9c>  // b.plast
     ffc:	and	w27, w21, #0x1f
    1000:	orr	w27, w27, #0x20
    1004:	ldr	w0, [x19, #8]
    1008:	lsl	w28, w27, w0
    100c:	ldr	w1, [x19, #12]
    1010:	orr	w28, w28, w1
    1014:	str	w28, [x19, #12]
    1018:	add	w0, w0, #0x6
    101c:	cmp	w0, #0x1f
    1020:	b.hi	f88 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xec0>  // b.pmore
    1024:	str	w0, [x19, #8]
    1028:	b	ff0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xf28>
    102c:	mov	x3, x26
    1030:	add	x2, x2, #0x4
    1034:	add	x1, x22, #0x10
    1038:	mov	x0, x22
    103c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1040:	b	fa0 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xed8>
    1044:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1048:	add	x3, x3, #0x0
    104c:	mov	w2, #0x43                  	// #67
    1050:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1054:	add	x1, x1, #0x0
    1058:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    105c:	add	x0, x0, #0x0
    1060:	bl	0 <__assert_fail>
    1064:	mov	w22, w21
    1068:	ldr	w0, [x19, #8]
    106c:	lsl	w27, w22, w0
    1070:	ldr	w1, [x19, #12]
    1074:	orr	w27, w27, w1
    1078:	str	w27, [x19, #12]
    107c:	add	w0, w0, #0x6
    1080:	cmp	w0, #0x1f
    1084:	b.hi	10e8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x1020>  // b.pmore
    1088:	str	w0, [x19, #8]
    108c:	add	x23, x23, #0x1
    1090:	cmp	w25, w23
    1094:	b.eq	118c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x10c4>  // b.none
    1098:	ldr	w0, [x20, #8]
    109c:	cmp	x0, x23
    10a0:	b.ls	d8c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xcc4>  // b.plast
    10a4:	ldr	x0, [x20]
    10a8:	ldr	x21, [x0, x23, lsl #3]
    10ac:	tst	x21, #0xffffffff00000000
    10b0:	b.eq	dac <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xce4>  // b.none
    10b4:	cmp	x21, #0x1f
    10b8:	b.hi	ffc <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xf34>  // b.pmore
    10bc:	mov	w22, w21
    10c0:	tst	w21, #0xffffffc0
    10c4:	b.eq	1068 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xfa0>  // b.none
    10c8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    10cc:	add	x3, x3, #0x0
    10d0:	mov	w2, #0x79                  	// #121
    10d4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    10d8:	add	x1, x1, #0x0
    10dc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    10e0:	add	x0, x0, #0x0
    10e4:	bl	0 <__assert_fail>
    10e8:	ldr	x21, [x19]
    10ec:	ldr	w2, [x21, #8]
    10f0:	ldr	w0, [x21, #12]
    10f4:	sub	x0, x0, x2
    10f8:	cmp	x0, #0x3
    10fc:	b.ls	1154 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x108c>  // b.plast
    1100:	ldr	w0, [x21, #8]
    1104:	ldr	x1, [x21]
    1108:	str	w27, [x1, x0]
    110c:	ldr	w0, [x21, #8]
    1110:	mov	w1, w0
    1114:	add	x1, x1, #0x4
    1118:	ldr	w2, [x21, #12]
    111c:	cmp	x1, x2
    1120:	b.hi	116c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x10a4>  // b.pmore
    1124:	add	w0, w0, #0x4
    1128:	str	w0, [x21, #8]
    112c:	ldr	w0, [x19, #8]
    1130:	sub	w1, w24, w0
    1134:	lsr	w1, w22, w1
    1138:	cmp	w0, #0x0
    113c:	csel	w1, w1, w0, ne  // ne = any
    1140:	str	w1, [x19, #12]
    1144:	add	w0, w0, #0x6
    1148:	and	w0, w0, #0x1f
    114c:	str	w0, [x19, #8]
    1150:	b	108c <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xfc4>
    1154:	mov	x3, x26
    1158:	add	x2, x2, #0x4
    115c:	add	x1, x21, #0x10
    1160:	mov	x0, x21
    1164:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1168:	b	1100 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x1038>
    116c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1170:	add	x3, x3, #0x0
    1174:	mov	w2, #0x43                  	// #67
    1178:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    117c:	add	x1, x1, #0x0
    1180:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1184:	add	x0, x0, #0x0
    1188:	bl	0 <__assert_fail>
    118c:	ldp	x19, x20, [sp, #16]
    1190:	ldp	x21, x22, [sp, #32]
    1194:	ldp	x23, x24, [sp, #48]
    1198:	ldp	x25, x26, [sp, #64]
    119c:	ldp	x27, x28, [sp, #80]
    11a0:	ldp	x29, x30, [sp], #112
    11a4:	ret

00000000000011a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>:
    11a8:	stp	x29, x30, [sp, #-96]!
    11ac:	mov	x29, sp
    11b0:	stp	x19, x20, [sp, #16]
    11b4:	stp	x21, x22, [sp, #32]
    11b8:	stp	x23, x24, [sp, #48]
    11bc:	stp	x25, x26, [sp, #64]
    11c0:	stp	x27, x28, [sp, #80]
    11c4:	mov	x19, x1
    11c8:	mov	x20, x2
    11cc:	mov	x23, x3
    11d0:	mov	x22, x4
    11d4:	str	wzr, [x2, #8]
    11d8:	mov	w21, w0
    11dc:	ldr	w0, [x2, #12]
    11e0:	cbz	w0, 12b4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x10c>
    11e4:	ldr	w1, [x20, #8]
    11e8:	ldr	x0, [x20]
    11ec:	str	x21, [x0, x1, lsl #3]
    11f0:	ldr	w0, [x20, #8]
    11f4:	mov	w1, w0
    11f8:	add	x1, x1, #0x1
    11fc:	ldr	w2, [x20, #12]
    1200:	cmp	x1, x2
    1204:	b.hi	12cc <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x124>  // b.pmore
    1208:	add	w0, w0, #0x1
    120c:	str	w0, [x20, #8]
    1210:	mov	x1, x23
    1214:	mov	x2, x22
    1218:	mov	x0, x20
    121c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1220:	ldr	w24, [x20, #8]
    1224:	ldr	w22, [x19, #16]
    1228:	sub	w0, w22, #0x1
    122c:	cmp	w0, #0x1f
    1230:	b.hi	12ec <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x144>  // b.pmore
    1234:	neg	w0, w22
    1238:	mov	w1, #0xffffffff            	// #-1
    123c:	lsr	w0, w1, w0
    1240:	mvn	w0, w0
    1244:	tst	x0, #0x3
    1248:	b.ne	130c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x164>  // b.any
    124c:	ldr	w0, [x19, #8]
    1250:	mov	w21, #0x3                   	// #3
    1254:	lsl	w21, w21, w0
    1258:	ldr	w1, [x19, #12]
    125c:	orr	w21, w21, w1
    1260:	str	w21, [x19, #12]
    1264:	add	w0, w22, w0
    1268:	cmp	w0, #0x1f
    126c:	b.hi	132c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x184>  // b.pmore
    1270:	str	w0, [x19, #8]
    1274:	ldr	w0, [x19, #8]
    1278:	mov	w21, #0x3                   	// #3
    127c:	lsl	w21, w21, w0
    1280:	ldr	w1, [x19, #12]
    1284:	orr	w21, w21, w1
    1288:	str	w21, [x19, #12]
    128c:	add	w0, w0, #0x6
    1290:	cmp	w0, #0x1f
    1294:	b.hi	13d4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x22c>  // b.pmore
    1298:	str	w0, [x19, #8]
    129c:	cmp	w24, #0x1f
    12a0:	b.ls	1558 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3b0>  // b.plast
    12a4:	mov	w22, w24
    12a8:	mov	w25, #0x20                  	// #32
    12ac:	mov	x23, #0x1                   	// #1
    12b0:	b	14f0 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x348>
    12b4:	mov	x3, #0x8                   	// #8
    12b8:	mov	x2, #0x0                   	// #0
    12bc:	add	x1, x20, #0x10
    12c0:	mov	x0, x20
    12c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    12c8:	b	11e4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3c>
    12cc:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    12d0:	add	x3, x3, #0x0
    12d4:	mov	w2, #0x43                  	// #67
    12d8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    12dc:	add	x1, x1, #0x0
    12e0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    12e4:	add	x0, x0, #0x0
    12e8:	bl	0 <__assert_fail>
    12ec:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    12f0:	add	x3, x3, #0x0
    12f4:	mov	w2, #0x78                  	// #120
    12f8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    12fc:	add	x1, x1, #0x0
    1300:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1304:	add	x0, x0, #0x0
    1308:	bl	0 <__assert_fail>
    130c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1310:	add	x3, x3, #0x0
    1314:	mov	w2, #0x79                  	// #121
    1318:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    131c:	add	x1, x1, #0x0
    1320:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1324:	add	x0, x0, #0x0
    1328:	bl	0 <__assert_fail>
    132c:	ldr	x23, [x19]
    1330:	ldr	w2, [x23, #8]
    1334:	ldr	w0, [x23, #12]
    1338:	sub	x0, x0, x2
    133c:	cmp	x0, #0x3
    1340:	b.ls	139c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x1f4>  // b.plast
    1344:	ldr	w0, [x23, #8]
    1348:	ldr	x1, [x23]
    134c:	str	w21, [x1, x0]
    1350:	ldr	w0, [x23, #8]
    1354:	mov	w1, w0
    1358:	add	x1, x1, #0x4
    135c:	ldr	w2, [x23, #12]
    1360:	cmp	x1, x2
    1364:	b.hi	13b4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x20c>  // b.pmore
    1368:	add	w0, w0, #0x4
    136c:	str	w0, [x23, #8]
    1370:	ldr	w1, [x19, #8]
    1374:	neg	w2, w1
    1378:	mov	w0, #0x3                   	// #3
    137c:	lsr	w0, w0, w2
    1380:	cmp	w1, #0x0
    1384:	csel	w0, w0, w1, ne  // ne = any
    1388:	str	w0, [x19, #12]
    138c:	add	w22, w22, w1
    1390:	and	w22, w22, #0x1f
    1394:	str	w22, [x19, #8]
    1398:	b	1274 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xcc>
    139c:	mov	x3, #0x1                   	// #1
    13a0:	add	x2, x2, #0x4
    13a4:	add	x1, x23, #0x10
    13a8:	mov	x0, x23
    13ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13b0:	b	1344 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x19c>
    13b4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    13b8:	add	x3, x3, #0x0
    13bc:	mov	w2, #0x43                  	// #67
    13c0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    13c4:	add	x1, x1, #0x0
    13c8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    13cc:	add	x0, x0, #0x0
    13d0:	bl	0 <__assert_fail>
    13d4:	ldr	x22, [x19]
    13d8:	ldr	w2, [x22, #8]
    13dc:	ldr	w0, [x22, #12]
    13e0:	sub	x0, x0, x2
    13e4:	cmp	x0, #0x3
    13e8:	b.ls	1444 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x29c>  // b.plast
    13ec:	ldr	w0, [x22, #8]
    13f0:	ldr	x1, [x22]
    13f4:	str	w21, [x1, x0]
    13f8:	ldr	w0, [x22, #8]
    13fc:	mov	w1, w0
    1400:	add	x1, x1, #0x4
    1404:	ldr	w2, [x22, #12]
    1408:	cmp	x1, x2
    140c:	b.hi	145c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x2b4>  // b.pmore
    1410:	add	w0, w0, #0x4
    1414:	str	w0, [x22, #8]
    1418:	ldr	w0, [x19, #8]
    141c:	neg	w2, w0
    1420:	mov	w1, #0x3                   	// #3
    1424:	lsr	w1, w1, w2
    1428:	cmp	w0, #0x0
    142c:	csel	w1, w1, w0, ne  // ne = any
    1430:	str	w1, [x19, #12]
    1434:	add	w0, w0, #0x6
    1438:	and	w0, w0, #0x1f
    143c:	str	w0, [x19, #8]
    1440:	b	129c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0xf4>
    1444:	mov	x3, #0x1                   	// #1
    1448:	add	x2, x2, #0x4
    144c:	add	x1, x22, #0x10
    1450:	mov	x0, x22
    1454:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1458:	b	13ec <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x244>
    145c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1460:	add	x3, x3, #0x0
    1464:	mov	w2, #0x43                  	// #67
    1468:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    146c:	add	x1, x1, #0x0
    1470:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1474:	add	x0, x0, #0x0
    1478:	bl	0 <__assert_fail>
    147c:	ldr	x21, [x19]
    1480:	ldr	w2, [x21, #8]
    1484:	ldr	w0, [x21, #12]
    1488:	sub	x0, x0, x2
    148c:	cmp	x0, #0x3
    1490:	b.ls	1520 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x378>  // b.plast
    1494:	ldr	w0, [x21, #8]
    1498:	ldr	x1, [x21]
    149c:	str	w27, [x1, x0]
    14a0:	ldr	w0, [x21, #8]
    14a4:	mov	w1, w0
    14a8:	add	x1, x1, #0x4
    14ac:	ldr	w2, [x21, #12]
    14b0:	cmp	x1, x2
    14b4:	b.hi	1538 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x390>  // b.pmore
    14b8:	add	w0, w0, #0x4
    14bc:	str	w0, [x21, #8]
    14c0:	ldr	w0, [x19, #8]
    14c4:	sub	w1, w25, w0
    14c8:	lsr	w26, w26, w1
    14cc:	cmp	w0, #0x0
    14d0:	csel	w26, w26, w0, ne  // ne = any
    14d4:	str	w26, [x19, #12]
    14d8:	add	w0, w0, #0x6
    14dc:	and	w0, w0, #0x1f
    14e0:	str	w0, [x19, #8]
    14e4:	lsr	w22, w22, #5
    14e8:	cmp	w22, #0x1f
    14ec:	b.ls	1564 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3bc>  // b.plast
    14f0:	and	w26, w22, #0x1f
    14f4:	orr	w26, w26, #0x20
    14f8:	ldr	w0, [x19, #8]
    14fc:	lsl	w27, w26, w0
    1500:	ldr	w1, [x19, #12]
    1504:	orr	w27, w27, w1
    1508:	str	w27, [x19, #12]
    150c:	add	w0, w0, #0x6
    1510:	cmp	w0, #0x1f
    1514:	b.hi	147c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x2d4>  // b.pmore
    1518:	str	w0, [x19, #8]
    151c:	b	14e4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x33c>
    1520:	mov	x3, x23
    1524:	add	x2, x2, #0x4
    1528:	add	x1, x21, #0x10
    152c:	mov	x0, x21
    1530:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1534:	b	1494 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x2ec>
    1538:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    153c:	add	x3, x3, #0x0
    1540:	mov	w2, #0x43                  	// #67
    1544:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1548:	add	x1, x1, #0x0
    154c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1550:	add	x0, x0, #0x0
    1554:	bl	0 <__assert_fail>
    1558:	mov	w22, w24
    155c:	tst	w24, #0xffffffc0
    1560:	b.ne	159c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3f4>  // b.any
    1564:	ldr	w0, [x19, #8]
    1568:	lsl	w21, w22, w0
    156c:	ldr	w1, [x19, #12]
    1570:	orr	w21, w21, w1
    1574:	str	w21, [x19, #12]
    1578:	add	w0, w0, #0x6
    157c:	cmp	w0, #0x1f
    1580:	b.hi	15bc <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x414>  // b.pmore
    1584:	str	w0, [x19, #8]
    1588:	cbz	w24, 1a60 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x8b8>
    158c:	mov	x23, #0x0                   	// #0
    1590:	mov	w25, #0x20                  	// #32
    1594:	mov	x26, #0x1                   	// #1
    1598:	b	196c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7c4>
    159c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    15a0:	add	x3, x3, #0x0
    15a4:	mov	w2, #0x79                  	// #121
    15a8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    15ac:	add	x1, x1, #0x0
    15b0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    15b4:	add	x0, x0, #0x0
    15b8:	bl	0 <__assert_fail>
    15bc:	ldr	x23, [x19]
    15c0:	ldr	w2, [x23, #8]
    15c4:	ldr	w0, [x23, #12]
    15c8:	sub	x0, x0, x2
    15cc:	cmp	x0, #0x3
    15d0:	b.ls	1628 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x480>  // b.plast
    15d4:	ldr	w0, [x23, #8]
    15d8:	ldr	x1, [x23]
    15dc:	str	w21, [x1, x0]
    15e0:	ldr	w0, [x23, #8]
    15e4:	mov	w1, w0
    15e8:	add	x1, x1, #0x4
    15ec:	ldr	w2, [x23, #12]
    15f0:	cmp	x1, x2
    15f4:	b.hi	1640 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x498>  // b.pmore
    15f8:	add	w0, w0, #0x4
    15fc:	str	w0, [x23, #8]
    1600:	ldr	w0, [x19, #8]
    1604:	neg	w1, w0
    1608:	lsr	w22, w22, w1
    160c:	cmp	w0, #0x0
    1610:	csel	w22, w22, w0, ne  // ne = any
    1614:	str	w22, [x19, #12]
    1618:	add	w0, w0, #0x6
    161c:	and	w0, w0, #0x1f
    1620:	str	w0, [x19, #8]
    1624:	b	1588 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x3e0>
    1628:	mov	x3, #0x1                   	// #1
    162c:	add	x2, x2, #0x4
    1630:	add	x1, x23, #0x10
    1634:	mov	x0, x23
    1638:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    163c:	b	15d4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x42c>
    1640:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1644:	add	x3, x3, #0x0
    1648:	mov	w2, #0x43                  	// #67
    164c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1650:	add	x1, x1, #0x0
    1654:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1658:	add	x0, x0, #0x0
    165c:	bl	0 <__assert_fail>
    1660:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1664:	add	x3, x3, #0x0
    1668:	mov	w2, #0x99                  	// #153
    166c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1670:	add	x1, x1, #0x0
    1674:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1678:	add	x0, x0, #0x0
    167c:	bl	0 <__assert_fail>
    1680:	mov	w22, w21
    1684:	cmp	w21, #0x1f
    1688:	b.hi	1730 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x588>  // b.pmore
    168c:	tst	w21, #0xffffffc0
    1690:	b.ne	1798 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x5f0>  // b.any
    1694:	ldr	w0, [x19, #8]
    1698:	lsl	w27, w22, w0
    169c:	ldr	w1, [x19, #12]
    16a0:	orr	w27, w27, w1
    16a4:	str	w27, [x19, #12]
    16a8:	add	w0, w0, #0x6
    16ac:	cmp	w0, #0x1f
    16b0:	b.hi	17b8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x610>  // b.pmore
    16b4:	str	w0, [x19, #8]
    16b8:	b	1960 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7b8>
    16bc:	ldr	x21, [x19]
    16c0:	ldr	w2, [x21, #8]
    16c4:	ldr	w0, [x21, #12]
    16c8:	sub	x0, x0, x2
    16cc:	cmp	x0, #0x3
    16d0:	b.ls	1760 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x5b8>  // b.plast
    16d4:	ldr	w0, [x21, #8]
    16d8:	ldr	x1, [x21]
    16dc:	str	w28, [x1, x0]
    16e0:	ldr	w0, [x21, #8]
    16e4:	mov	w1, w0
    16e8:	add	x1, x1, #0x4
    16ec:	ldr	w2, [x21, #12]
    16f0:	cmp	x1, x2
    16f4:	b.hi	1778 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x5d0>  // b.pmore
    16f8:	add	w0, w0, #0x4
    16fc:	str	w0, [x21, #8]
    1700:	ldr	w0, [x19, #8]
    1704:	sub	w1, w25, w0
    1708:	lsr	w27, w27, w1
    170c:	cmp	w0, #0x0
    1710:	csel	w27, w27, w0, ne  // ne = any
    1714:	str	w27, [x19, #12]
    1718:	add	w0, w0, #0x6
    171c:	and	w0, w0, #0x1f
    1720:	str	w0, [x19, #8]
    1724:	lsr	w22, w22, #5
    1728:	cmp	w22, #0x1f
    172c:	b.ls	1694 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x4ec>  // b.plast
    1730:	and	w27, w22, #0x1f
    1734:	orr	w27, w27, #0x20
    1738:	ldr	w0, [x19, #8]
    173c:	lsl	w28, w27, w0
    1740:	ldr	w1, [x19, #12]
    1744:	orr	w28, w28, w1
    1748:	str	w28, [x19, #12]
    174c:	add	w0, w0, #0x6
    1750:	cmp	w0, #0x1f
    1754:	b.hi	16bc <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x514>  // b.pmore
    1758:	str	w0, [x19, #8]
    175c:	b	1724 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x57c>
    1760:	mov	x3, x26
    1764:	add	x2, x2, #0x4
    1768:	add	x1, x21, #0x10
    176c:	mov	x0, x21
    1770:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1774:	b	16d4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x52c>
    1778:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    177c:	add	x3, x3, #0x0
    1780:	mov	w2, #0x43                  	// #67
    1784:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1788:	add	x1, x1, #0x0
    178c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1790:	add	x0, x0, #0x0
    1794:	bl	0 <__assert_fail>
    1798:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    179c:	add	x3, x3, #0x0
    17a0:	mov	w2, #0x79                  	// #121
    17a4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    17a8:	add	x1, x1, #0x0
    17ac:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    17b0:	add	x0, x0, #0x0
    17b4:	bl	0 <__assert_fail>
    17b8:	ldr	x21, [x19]
    17bc:	ldr	w2, [x21, #8]
    17c0:	ldr	w0, [x21, #12]
    17c4:	sub	x0, x0, x2
    17c8:	cmp	x0, #0x3
    17cc:	b.ls	1824 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x67c>  // b.plast
    17d0:	ldr	w0, [x21, #8]
    17d4:	ldr	x1, [x21]
    17d8:	str	w27, [x1, x0]
    17dc:	ldr	w0, [x21, #8]
    17e0:	mov	w1, w0
    17e4:	add	x1, x1, #0x4
    17e8:	ldr	w2, [x21, #12]
    17ec:	cmp	x1, x2
    17f0:	b.hi	183c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x694>  // b.pmore
    17f4:	add	w0, w0, #0x4
    17f8:	str	w0, [x21, #8]
    17fc:	ldr	w0, [x19, #8]
    1800:	sub	w1, w25, w0
    1804:	lsr	w22, w22, w1
    1808:	cmp	w0, #0x0
    180c:	csel	w22, w22, w0, ne  // ne = any
    1810:	str	w22, [x19, #12]
    1814:	add	w0, w0, #0x6
    1818:	and	w0, w0, #0x1f
    181c:	str	w0, [x19, #8]
    1820:	b	1960 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7b8>
    1824:	mov	x3, x26
    1828:	add	x2, x2, #0x4
    182c:	add	x1, x21, #0x10
    1830:	mov	x0, x21
    1834:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1838:	b	17d0 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x628>
    183c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1840:	add	x3, x3, #0x0
    1844:	mov	w2, #0x43                  	// #67
    1848:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    184c:	add	x1, x1, #0x0
    1850:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1854:	add	x0, x0, #0x0
    1858:	bl	0 <__assert_fail>
    185c:	ldr	x22, [x19]
    1860:	ldr	w2, [x22, #8]
    1864:	ldr	w0, [x22, #12]
    1868:	sub	x0, x0, x2
    186c:	cmp	x0, #0x3
    1870:	b.ls	1900 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x758>  // b.plast
    1874:	ldr	w0, [x22, #8]
    1878:	ldr	x1, [x22]
    187c:	str	w28, [x1, x0]
    1880:	ldr	w0, [x22, #8]
    1884:	mov	w1, w0
    1888:	add	x1, x1, #0x4
    188c:	ldr	w2, [x22, #12]
    1890:	cmp	x1, x2
    1894:	b.hi	1918 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x770>  // b.pmore
    1898:	add	w0, w0, #0x4
    189c:	str	w0, [x22, #8]
    18a0:	ldr	w0, [x19, #8]
    18a4:	sub	w1, w25, w0
    18a8:	lsr	w27, w27, w1
    18ac:	cmp	w0, #0x0
    18b0:	csel	w27, w27, w0, ne  // ne = any
    18b4:	str	w27, [x19, #12]
    18b8:	add	w0, w0, #0x6
    18bc:	and	w0, w0, #0x1f
    18c0:	str	w0, [x19, #8]
    18c4:	lsr	x21, x21, #5
    18c8:	cmp	x21, #0x1f
    18cc:	b.ls	1938 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x790>  // b.plast
    18d0:	and	w27, w21, #0x1f
    18d4:	orr	w27, w27, #0x20
    18d8:	ldr	w0, [x19, #8]
    18dc:	lsl	w28, w27, w0
    18e0:	ldr	w1, [x19, #12]
    18e4:	orr	w28, w28, w1
    18e8:	str	w28, [x19, #12]
    18ec:	add	w0, w0, #0x6
    18f0:	cmp	w0, #0x1f
    18f4:	b.hi	185c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x6b4>  // b.pmore
    18f8:	str	w0, [x19, #8]
    18fc:	b	18c4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x71c>
    1900:	mov	x3, x26
    1904:	add	x2, x2, #0x4
    1908:	add	x1, x22, #0x10
    190c:	mov	x0, x22
    1910:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1914:	b	1874 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x6cc>
    1918:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    191c:	add	x3, x3, #0x0
    1920:	mov	w2, #0x43                  	// #67
    1924:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1928:	add	x1, x1, #0x0
    192c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1930:	add	x0, x0, #0x0
    1934:	bl	0 <__assert_fail>
    1938:	mov	w22, w21
    193c:	ldr	w0, [x19, #8]
    1940:	lsl	w27, w22, w0
    1944:	ldr	w1, [x19, #12]
    1948:	orr	w27, w27, w1
    194c:	str	w27, [x19, #12]
    1950:	add	w0, w0, #0x6
    1954:	cmp	w0, #0x1f
    1958:	b.hi	19bc <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x814>  // b.pmore
    195c:	str	w0, [x19, #8]
    1960:	add	x23, x23, #0x1
    1964:	cmp	w24, w23
    1968:	b.eq	1a60 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x8b8>  // b.none
    196c:	ldr	w0, [x20, #8]
    1970:	cmp	x0, x23
    1974:	b.ls	1660 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x4b8>  // b.plast
    1978:	ldr	x0, [x20]
    197c:	ldr	x21, [x0, x23, lsl #3]
    1980:	tst	x21, #0xffffffff00000000
    1984:	b.eq	1680 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x4d8>  // b.none
    1988:	cmp	x21, #0x1f
    198c:	b.hi	18d0 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x728>  // b.pmore
    1990:	mov	w22, w21
    1994:	tst	w21, #0xffffffc0
    1998:	b.eq	193c <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x794>  // b.none
    199c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    19a0:	add	x3, x3, #0x0
    19a4:	mov	w2, #0x79                  	// #121
    19a8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    19ac:	add	x1, x1, #0x0
    19b0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    19b4:	add	x0, x0, #0x0
    19b8:	bl	0 <__assert_fail>
    19bc:	ldr	x21, [x19]
    19c0:	ldr	w2, [x21, #8]
    19c4:	ldr	w0, [x21, #12]
    19c8:	sub	x0, x0, x2
    19cc:	cmp	x0, #0x3
    19d0:	b.ls	1a28 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x880>  // b.plast
    19d4:	ldr	w0, [x21, #8]
    19d8:	ldr	x1, [x21]
    19dc:	str	w27, [x1, x0]
    19e0:	ldr	w0, [x21, #8]
    19e4:	mov	w1, w0
    19e8:	add	x1, x1, #0x4
    19ec:	ldr	w2, [x21, #12]
    19f0:	cmp	x1, x2
    19f4:	b.hi	1a40 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x898>  // b.pmore
    19f8:	add	w0, w0, #0x4
    19fc:	str	w0, [x21, #8]
    1a00:	ldr	w0, [x19, #8]
    1a04:	sub	w1, w25, w0
    1a08:	lsr	w1, w22, w1
    1a0c:	cmp	w0, #0x0
    1a10:	csel	w1, w1, w0, ne  // ne = any
    1a14:	str	w1, [x19, #12]
    1a18:	add	w0, w0, #0x6
    1a1c:	and	w0, w0, #0x1f
    1a20:	str	w0, [x19, #8]
    1a24:	b	1960 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x7b8>
    1a28:	mov	x3, x26
    1a2c:	add	x2, x2, #0x4
    1a30:	add	x1, x21, #0x10
    1a34:	mov	x0, x21
    1a38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1a3c:	b	19d4 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE+0x82c>
    1a40:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1a44:	add	x3, x3, #0x0
    1a48:	mov	w2, #0x43                  	// #67
    1a4c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1a50:	add	x1, x1, #0x0
    1a54:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1a58:	add	x0, x0, #0x0
    1a5c:	bl	0 <__assert_fail>
    1a60:	ldp	x19, x20, [sp, #16]
    1a64:	ldp	x21, x22, [sp, #32]
    1a68:	ldp	x23, x24, [sp, #48]
    1a6c:	ldp	x25, x26, [sp, #64]
    1a70:	ldp	x27, x28, [sp, #80]
    1a74:	ldp	x29, x30, [sp], #96
    1a78:	ret

0000000000001a7c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelperC1ENS0_28BitstreamRemarkContainerTypeE>:
    1a7c:	add	x2, x0, #0x10
    1a80:	str	x2, [x0]
    1a84:	str	wzr, [x0, #8]
    1a88:	mov	w2, #0x400                 	// #1024
    1a8c:	str	w2, [x0, #12]
    1a90:	add	x3, x0, #0x420
    1a94:	str	x3, [x0, #1040]
    1a98:	str	wzr, [x0, #1048]
    1a9c:	mov	w3, #0x40                  	// #64
    1aa0:	str	w3, [x0, #1052]
    1aa4:	str	x0, [x0, #1568]
    1aa8:	str	wzr, [x0, #1576]
    1aac:	str	wzr, [x0, #1580]
    1ab0:	mov	w3, #0x2                   	// #2
    1ab4:	str	w3, [x0, #1584]
    1ab8:	str	xzr, [x0, #1592]
    1abc:	str	xzr, [x0, #1600]
    1ac0:	str	xzr, [x0, #1608]
    1ac4:	str	xzr, [x0, #1616]
    1ac8:	str	xzr, [x0, #1624]
    1acc:	str	xzr, [x0, #1632]
    1ad0:	str	xzr, [x0, #1640]
    1ad4:	str	xzr, [x0, #1648]
    1ad8:	str	xzr, [x0, #1656]
    1adc:	str	w1, [x0, #1664]
    1ae0:	str	xzr, [x0, #1672]
    1ae4:	str	xzr, [x0, #1680]
    1ae8:	str	xzr, [x0, #1688]
    1aec:	str	xzr, [x0, #1696]
    1af0:	str	xzr, [x0, #1704]
    1af4:	str	xzr, [x0, #1712]
    1af8:	str	xzr, [x0, #1720]
    1afc:	str	xzr, [x0, #1728]
    1b00:	str	xzr, [x0, #1736]
    1b04:	ret

0000000000001b08 <_ZN4llvm7remarks25BitstreamRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>:
    1b08:	stp	x29, x30, [sp, #-112]!
    1b0c:	mov	x29, sp
    1b10:	stp	x19, x20, [sp, #16]
    1b14:	stp	x21, x22, [sp, #32]
    1b18:	str	x23, [sp, #48]
    1b1c:	ldr	w22, [x0, #1848]
    1b20:	cbz	w22, 1bd4 <_ZN4llvm7remarks25BitstreamRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE+0xcc>
    1b24:	mov	x23, x8
    1b28:	mov	x20, x0
    1b2c:	mov	x21, x1
    1b30:	cmp	w22, #0x2
    1b34:	csel	w22, w22, wzr, eq  // eq = none
    1b38:	ldrb	w0, [x0, #168]
    1b3c:	cbz	w0, 1bf4 <_ZN4llvm7remarks25BitstreamRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE+0xec>
    1b40:	ldp	x0, x1, [x2]
    1b44:	stp	x0, x1, [sp, #88]
    1b48:	ldr	x0, [x2, #16]
    1b4c:	str	x0, [sp, #104]
    1b50:	mov	x0, #0x718                 	// #1816
    1b54:	bl	0 <_Znwm>
    1b58:	mov	x19, x0
    1b5c:	str	x21, [x0, #8]
    1b60:	mov	x21, x0
    1b64:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1b68:	ldr	x0, [x0]
    1b6c:	add	x0, x0, #0x10
    1b70:	str	x0, [x21], #16
    1b74:	strb	wzr, [x19, #16]
    1b78:	strb	wzr, [x21, #1744]
    1b7c:	str	xzr, [x19, #1768]
    1b80:	add	x20, x20, #0x20
    1b84:	str	x20, [x19, #1776]
    1b88:	mov	w20, #0x1                   	// #1
    1b8c:	strb	w20, [x19, #1784]
    1b90:	add	x0, x19, #0x700
    1b94:	ldp	x2, x3, [sp, #88]
    1b98:	stp	x2, x3, [x0]
    1b9c:	ldr	x1, [sp, #104]
    1ba0:	str	x1, [x19, #1808]
    1ba4:	mov	w1, w22
    1ba8:	mov	x0, x21
    1bac:	bl	1a7c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelperC1ENS0_28BitstreamRemarkContainerTypeE>
    1bb0:	strb	w20, [x21, #1744]
    1bb4:	str	x21, [x19, #1768]
    1bb8:	str	x19, [x23]
    1bbc:	mov	x0, x23
    1bc0:	ldp	x19, x20, [sp, #16]
    1bc4:	ldp	x21, x22, [sp, #32]
    1bc8:	ldr	x23, [sp, #48]
    1bcc:	ldp	x29, x30, [sp], #112
    1bd0:	ret
    1bd4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1bd8:	add	x3, x3, #0x0
    1bdc:	mov	w2, #0x172                 	// #370
    1be0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1be4:	add	x1, x1, #0x0
    1be8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1bec:	add	x0, x0, #0x0
    1bf0:	bl	0 <__assert_fail>
    1bf4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1bf8:	add	x3, x3, #0x0
    1bfc:	mov	w2, #0x49                  	// #73
    1c00:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1c04:	add	x1, x1, #0x0
    1c08:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1c0c:	add	x0, x0, #0x0
    1c10:	bl	0 <__assert_fail>

0000000000001c14 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13flushToStreamERNS_11raw_ostreamE>:
    1c14:	stp	x29, x30, [sp, #-32]!
    1c18:	mov	x29, sp
    1c1c:	str	x19, [sp, #16]
    1c20:	mov	x19, x0
    1c24:	mov	x0, x1
    1c28:	ldr	w2, [x19, #8]
    1c2c:	ldr	x1, [x19]
    1c30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c34:	str	wzr, [x19, #8]
    1c38:	ldr	x19, [sp, #16]
    1c3c:	ldp	x29, x30, [sp], #32
    1c40:	ret

0000000000001c44 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper9getBufferEv>:
    1c44:	mov	x1, x0
    1c48:	ldr	x0, [x0]
    1c4c:	ldr	w1, [x1, #8]
    1c50:	ret

0000000000001c54 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE>:
    1c54:	stp	x29, x30, [sp, #-48]!
    1c58:	mov	x29, sp
    1c5c:	stp	x19, x20, [sp, #16]
    1c60:	mov	x19, x0
    1c64:	mov	w20, w2
    1c68:	mov	w0, #0x3                   	// #3
    1c6c:	str	w0, [x19, #8]
    1c70:	str	x1, [x19, #16]
    1c74:	str	w2, [x19, #24]
    1c78:	strb	wzr, [x19, #32]
    1c7c:	strb	wzr, [x19, #168]
    1c80:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1c84:	ldr	x0, [x0]
    1c88:	add	x0, x0, #0x10
    1c8c:	str	x0, [x19]
    1c90:	strb	wzr, [x19, #176]
    1c94:	mov	w1, #0x1                   	// #1
    1c98:	add	x0, x19, #0xb8
    1c9c:	bl	1a7c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelperC1ENS0_28BitstreamRemarkContainerTypeE>
    1ca0:	cbnz	w20, 1d10 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0xbc>
    1ca4:	ldrb	w0, [x19, #168]
    1ca8:	cbnz	w0, 1d34 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0xe0>
    1cac:	str	xzr, [x19, #32]
    1cb0:	str	wzr, [x19, #40]
    1cb4:	str	wzr, [x19, #44]
    1cb8:	str	wzr, [x19, #48]
    1cbc:	mov	w1, #0x10                  	// #16
    1cc0:	str	w1, [x19, #52]
    1cc4:	str	xzr, [x19, #56]
    1cc8:	str	xzr, [x19, #64]
    1ccc:	add	x2, x19, #0x58
    1cd0:	str	x2, [x19, #72]
    1cd4:	str	wzr, [x19, #80]
    1cd8:	mov	w2, #0x4                   	// #4
    1cdc:	str	w2, [x19, #84]
    1ce0:	add	x2, x19, #0x88
    1ce4:	str	x2, [x19, #120]
    1ce8:	str	wzr, [x19, #128]
    1cec:	str	wzr, [x19, #132]
    1cf0:	str	xzr, [x19, #136]
    1cf4:	mov	x2, #0x1                   	// #1
    1cf8:	str	x2, [x19, #144]
    1cfc:	str	xzr, [x19, #160]
    1d00:	strb	w2, [x19, #168]
    1d04:	ldp	x19, x20, [sp, #16]
    1d08:	ldp	x29, x30, [sp], #48
    1d0c:	ret
    1d10:	str	x21, [sp, #32]
    1d14:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1d18:	add	x3, x3, #0x0
    1d1c:	mov	w2, #0x14b                 	// #331
    1d20:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1d24:	add	x1, x1, #0x0
    1d28:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1d2c:	add	x0, x0, #0x0
    1d30:	bl	0 <__assert_fail>
    1d34:	str	x21, [sp, #32]
    1d38:	ldr	w0, [x19, #44]
    1d3c:	cbz	w0, 1d64 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x110>
    1d40:	ldr	w1, [x19, #40]
    1d44:	cbz	w1, 1d64 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x110>
    1d48:	sub	w1, w1, #0x1
    1d4c:	add	x1, x1, #0x1
    1d50:	lsl	x1, x1, #3
    1d54:	mov	x0, #0x0                   	// #0
    1d58:	add	x0, x0, #0x8
    1d5c:	cmp	x1, x0
    1d60:	b.ne	1d58 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x104>  // b.any
    1d64:	ldr	x0, [x19, #32]
    1d68:	bl	0 <free>
    1d6c:	ldr	x20, [x19, #72]
    1d70:	ldr	w21, [x19, #80]
    1d74:	add	x21, x20, x21, lsl #3
    1d78:	cmp	x20, x21
    1d7c:	b.eq	1d90 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x13c>  // b.none
    1d80:	ldr	x0, [x20], #8
    1d84:	bl	0 <free>
    1d88:	cmp	x21, x20
    1d8c:	b.ne	1d80 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x12c>  // b.any
    1d90:	ldr	x20, [x19, #120]
    1d94:	ldr	w21, [x19, #128]
    1d98:	add	x21, x20, x21, lsl #4
    1d9c:	cmp	x20, x21
    1da0:	b.eq	1dd4 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x180>  // b.none
    1da4:	ldr	x0, [x20], #16
    1da8:	bl	0 <free>
    1dac:	cmp	x21, x20
    1db0:	b.ne	1da4 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x150>  // b.any
    1db4:	ldr	x1, [x19, #120]
    1db8:	ldr	w0, [x19, #128]
    1dbc:	add	x0, x1, x0, lsl #4
    1dc0:	cmp	x1, x0
    1dc4:	b.eq	1dd4 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x180>  // b.none
    1dc8:	sub	x0, x0, #0x10
    1dcc:	cmp	x1, x0
    1dd0:	b.ne	1dc8 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x174>  // b.any
    1dd4:	ldr	x0, [x19, #120]
    1dd8:	add	x1, x19, #0x88
    1ddc:	cmp	x0, x1
    1de0:	b.eq	1de8 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x194>  // b.none
    1de4:	bl	0 <free>
    1de8:	ldr	x0, [x19, #72]
    1dec:	add	x1, x19, #0x58
    1df0:	cmp	x0, x1
    1df4:	b.eq	1e04 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x1b0>  // b.none
    1df8:	bl	0 <free>
    1dfc:	ldr	x21, [sp, #32]
    1e00:	b	1cac <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x58>
    1e04:	ldr	x21, [sp, #32]
    1e08:	b	1cac <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE+0x58>

0000000000001e0c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE>:
    1e0c:	stp	x29, x30, [sp, #-112]!
    1e10:	mov	x29, sp
    1e14:	stp	x19, x20, [sp, #16]
    1e18:	mov	x19, x0
    1e1c:	mov	x20, x1
    1e20:	str	wzr, [x0, #1048]
    1e24:	ldr	w0, [x0, #1052]
    1e28:	cbz	w0, 1f08 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE+0xfc>
    1e2c:	ldr	w1, [x19, #1048]
    1e30:	ldr	x0, [x19, #1040]
    1e34:	mov	x2, #0x3                   	// #3
    1e38:	str	x2, [x0, x1, lsl #3]
    1e3c:	ldr	w0, [x19, #1048]
    1e40:	mov	w2, w0
    1e44:	add	x2, x2, #0x1
    1e48:	ldr	w1, [x19, #1052]
    1e4c:	cmp	x2, x1
    1e50:	b.hi	1f20 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE+0x114>  // b.pmore
    1e54:	add	w0, w0, #0x1
    1e58:	str	w0, [x19, #1048]
    1e5c:	add	x1, sp, #0x50
    1e60:	add	x0, sp, #0x60
    1e64:	str	x0, [sp, #80]
    1e68:	str	xzr, [sp, #88]
    1e6c:	strb	wzr, [sp, #96]
    1e70:	mov	w0, #0x1                   	// #1
    1e74:	str	w0, [sp, #64]
    1e78:	str	xzr, [sp, #56]
    1e7c:	str	xzr, [sp, #48]
    1e80:	str	xzr, [sp, #40]
    1e84:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1e88:	ldr	x0, [x0]
    1e8c:	add	x0, x0, #0x10
    1e90:	str	x0, [sp, #32]
    1e94:	str	x1, [sp, #72]
    1e98:	add	x1, sp, #0x20
    1e9c:	mov	x0, x20
    1ea0:	bl	0 <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE>
    1ea4:	ldr	x1, [sp, #56]
    1ea8:	ldr	x0, [sp, #40]
    1eac:	cmp	x1, x0
    1eb0:	b.eq	1ebc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE+0xb0>  // b.none
    1eb4:	add	x0, sp, #0x20
    1eb8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1ebc:	ldr	x0, [sp, #72]
    1ec0:	mov	x6, #0x0                   	// #0
    1ec4:	ldr	x4, [x0]
    1ec8:	ldr	x5, [x0, #8]
    1ecc:	ldr	x2, [x19, #1040]
    1ed0:	ldr	w3, [x19, #1048]
    1ed4:	ldr	w1, [x19, #1688]
    1ed8:	add	x0, x19, #0x620
    1edc:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1ee0:	add	x0, sp, #0x20
    1ee4:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    1ee8:	ldr	x0, [sp, #80]
    1eec:	add	x1, sp, #0x60
    1ef0:	cmp	x0, x1
    1ef4:	b.eq	1efc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE+0xf0>  // b.none
    1ef8:	bl	0 <_ZdlPv>
    1efc:	ldp	x19, x20, [sp, #16]
    1f00:	ldp	x29, x30, [sp], #112
    1f04:	ret
    1f08:	mov	x3, #0x8                   	// #8
    1f0c:	mov	x2, #0x0                   	// #0
    1f10:	add	x1, x19, #0x420
    1f14:	add	x0, x19, #0x410
    1f18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1f1c:	b	1e2c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE+0x20>
    1f20:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1f24:	add	x3, x3, #0x0
    1f28:	mov	w2, #0x43                  	// #67
    1f2c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1f30:	add	x1, x1, #0x0
    1f34:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1f38:	add	x0, x0, #0x0
    1f3c:	bl	0 <__assert_fail>

0000000000001f40 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20emitMetaExternalFileENS_9StringRefE>:
    1f40:	stp	x29, x30, [sp, #-48]!
    1f44:	mov	x29, sp
    1f48:	stp	x19, x20, [sp, #16]
    1f4c:	str	x21, [sp, #32]
    1f50:	mov	x19, x0
    1f54:	mov	x21, x1
    1f58:	mov	x20, x2
    1f5c:	str	wzr, [x0, #1048]
    1f60:	ldr	w0, [x0, #1052]
    1f64:	cbz	w0, 1fc8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20emitMetaExternalFileENS_9StringRefE+0x88>
    1f68:	ldr	w1, [x19, #1048]
    1f6c:	ldr	x0, [x19, #1040]
    1f70:	mov	x2, #0x4                   	// #4
    1f74:	str	x2, [x0, x1, lsl #3]
    1f78:	ldr	w3, [x19, #1048]
    1f7c:	mov	w0, w3
    1f80:	add	x0, x0, #0x1
    1f84:	ldr	w1, [x19, #1052]
    1f88:	cmp	x0, x1
    1f8c:	b.hi	1fe0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20emitMetaExternalFileENS_9StringRefE+0xa0>  // b.pmore
    1f90:	add	w3, w3, #0x1
    1f94:	str	w3, [x19, #1048]
    1f98:	mov	x6, #0x0                   	// #0
    1f9c:	mov	x4, x21
    1fa0:	mov	x5, x20
    1fa4:	ldr	x2, [x19, #1040]
    1fa8:	mov	w3, w3
    1fac:	ldr	w1, [x19, #1696]
    1fb0:	add	x0, x19, #0x620
    1fb4:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1fb8:	ldp	x19, x20, [sp, #16]
    1fbc:	ldr	x21, [sp, #32]
    1fc0:	ldp	x29, x30, [sp], #48
    1fc4:	ret
    1fc8:	mov	x3, #0x8                   	// #8
    1fcc:	mov	x2, #0x0                   	// #0
    1fd0:	add	x1, x19, #0x420
    1fd4:	add	x0, x19, #0x410
    1fd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1fdc:	b	1f68 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20emitMetaExternalFileENS_9StringRefE+0x28>
    1fe0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1fe4:	add	x3, x3, #0x0
    1fe8:	mov	w2, #0x43                  	// #67
    1fec:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1ff0:	add	x1, x1, #0x0
    1ff4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    1ff8:	add	x0, x0, #0x0
    1ffc:	bl	0 <__assert_fail>

0000000000002000 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm>:
    2000:	stp	x29, x30, [sp, #-48]!
    2004:	mov	x29, sp
    2008:	stp	x19, x20, [sp, #16]
    200c:	str	x21, [sp, #32]
    2010:	mov	x19, x0
    2014:	mov	x20, x1
    2018:	add	x21, x0, #0x410
    201c:	str	wzr, [x21, #8]
    2020:	ldr	w0, [x0, #1052]
    2024:	cbz	w0, 20bc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm+0xbc>
    2028:	ldr	w1, [x19, #1048]
    202c:	ldr	x0, [x19, #1040]
    2030:	mov	x3, #0x2                   	// #2
    2034:	str	x3, [x0, x1, lsl #3]
    2038:	ldr	w0, [x19, #1048]
    203c:	ldr	w1, [x19, #1052]
    2040:	mov	w2, w0
    2044:	add	x2, x2, #0x1
    2048:	cmp	x2, w1, uxtw
    204c:	b.hi	20d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm+0xd4>  // b.pmore
    2050:	add	w0, w0, #0x1
    2054:	str	w0, [x19, #1048]
    2058:	cmp	w1, w0
    205c:	b.ls	20f4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm+0xf4>  // b.plast
    2060:	ldr	w2, [x19, #1048]
    2064:	ldr	x0, [x19, #1040]
    2068:	str	x20, [x0, x2, lsl #3]
    206c:	ldr	w3, [x19, #1048]
    2070:	mov	w0, w3
    2074:	add	x0, x0, #0x1
    2078:	ldr	w1, [x19, #1052]
    207c:	cmp	x0, x1
    2080:	b.hi	210c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm+0x10c>  // b.pmore
    2084:	add	w3, w3, #0x1
    2088:	str	w3, [x19, #1048]
    208c:	mov	x6, #0x0                   	// #0
    2090:	mov	x4, #0x0                   	// #0
    2094:	mov	x5, #0x0                   	// #0
    2098:	ldr	x2, [x19, #1040]
    209c:	mov	w3, w3
    20a0:	ldr	w1, [x19, #1680]
    20a4:	add	x0, x19, #0x620
    20a8:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    20ac:	ldp	x19, x20, [sp, #16]
    20b0:	ldr	x21, [sp, #32]
    20b4:	ldp	x29, x30, [sp], #48
    20b8:	ret
    20bc:	mov	x3, #0x8                   	// #8
    20c0:	mov	x2, #0x0                   	// #0
    20c4:	add	x1, x19, #0x420
    20c8:	mov	x0, x21
    20cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    20d0:	b	2028 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm+0x28>
    20d4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    20d8:	add	x3, x3, #0x0
    20dc:	mov	w2, #0x43                  	// #67
    20e0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    20e4:	add	x1, x1, #0x0
    20e8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    20ec:	add	x0, x0, #0x0
    20f0:	bl	0 <__assert_fail>
    20f4:	mov	x3, #0x8                   	// #8
    20f8:	mov	x2, #0x0                   	// #0
    20fc:	add	x1, x19, #0x420
    2100:	mov	x0, x21
    2104:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2108:	b	2060 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm+0x60>
    210c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2110:	add	x3, x3, #0x0
    2114:	mov	w2, #0x43                  	// #67
    2118:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    211c:	add	x1, x1, #0x0
    2120:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2124:	add	x0, x0, #0x0
    2128:	bl	0 <__assert_fail>

000000000000212c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE>:
    212c:	stp	x29, x30, [sp, #-96]!
    2130:	mov	x29, sp
    2134:	stp	x19, x20, [sp, #16]
    2138:	stp	x21, x22, [sp, #32]
    213c:	stp	x23, x24, [sp, #48]
    2140:	stp	x25, x26, [sp, #64]
    2144:	str	x27, [sp, #80]
    2148:	mov	x19, x0
    214c:	mov	x20, x1
    2150:	mov	x23, x2
    2154:	mov	x21, x4
    2158:	mov	x25, x6
    215c:	and	w24, w3, #0xff
    2160:	and	w22, w5, #0xff
    2164:	add	x26, x0, #0x620
    2168:	mov	w2, #0x3                   	// #3
    216c:	mov	w1, #0x8                   	// #8
    2170:	mov	x0, x26
    2174:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2178:	add	x27, x19, #0x410
    217c:	str	wzr, [x27, #8]
    2180:	ldr	w0, [x19, #1052]
    2184:	cbz	w0, 2314 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x1e8>
    2188:	ldr	w2, [x19, #1048]
    218c:	ldr	x0, [x19, #1040]
    2190:	mov	x3, #0x1                   	// #1
    2194:	str	x3, [x0, x2, lsl #3]
    2198:	ldr	w0, [x19, #1048]
    219c:	ldr	w2, [x19, #1052]
    21a0:	mov	w1, w0
    21a4:	add	x1, x1, x3
    21a8:	cmp	x1, w2, uxtw
    21ac:	b.hi	232c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x200>  // b.pmore
    21b0:	add	w0, w0, #0x1
    21b4:	str	w0, [x19, #1048]
    21b8:	cmp	w2, w0
    21bc:	b.ls	234c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x220>  // b.plast
    21c0:	ldr	w2, [x19, #1048]
    21c4:	ldr	x0, [x19, #1040]
    21c8:	str	x20, [x0, x2, lsl #3]
    21cc:	ldr	w0, [x19, #1048]
    21d0:	ldr	w2, [x19, #1052]
    21d4:	mov	w1, w0
    21d8:	add	x1, x1, #0x1
    21dc:	cmp	x1, w2, uxtw
    21e0:	b.hi	2364 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x238>  // b.pmore
    21e4:	add	w0, w0, #0x1
    21e8:	str	w0, [x19, #1048]
    21ec:	ldrsw	x20, [x19, #1664]
    21f0:	cmp	w2, w0
    21f4:	b.ls	2384 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x258>  // b.plast
    21f8:	ldr	w2, [x19, #1048]
    21fc:	ldr	x0, [x19, #1040]
    2200:	str	x20, [x0, x2, lsl #3]
    2204:	ldr	w3, [x19, #1048]
    2208:	mov	w0, w3
    220c:	add	x0, x0, #0x1
    2210:	ldr	w1, [x19, #1052]
    2214:	cmp	x0, x1
    2218:	b.hi	239c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x270>  // b.pmore
    221c:	add	w3, w3, #0x1
    2220:	str	w3, [x19, #1048]
    2224:	mov	x6, #0x0                   	// #0
    2228:	mov	x4, #0x0                   	// #0
    222c:	mov	x5, #0x0                   	// #0
    2230:	ldr	x2, [x19, #1040]
    2234:	mov	w3, w3
    2238:	ldr	w1, [x19, #1672]
    223c:	mov	x0, x26
    2240:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2244:	ldr	w0, [x19, #1664]
    2248:	cmp	w0, #0x1
    224c:	b.eq	2430 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x304>  // b.none
    2250:	cmp	w0, #0x2
    2254:	b.eq	2464 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x338>  // b.none
    2258:	cbz	w0, 23bc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x290>
    225c:	ldr	x21, [x19, #1624]
    2260:	ldr	x0, [x19, #1616]
    2264:	cmp	x0, x21
    2268:	b.eq	24cc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x3a0>  // b.none
    226c:	ldr	w20, [x19, #1584]
    2270:	sub	w0, w20, #0x1
    2274:	cmp	w0, #0x1f
    2278:	b.hi	24ec <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x3c0>  // b.pmore
    227c:	ldr	w0, [x19, #1576]
    2280:	add	w0, w20, w0
    2284:	cmp	w0, #0x1f
    2288:	b.hi	250c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x3e0>  // b.pmore
    228c:	str	w0, [x19, #1576]
    2290:	ldr	w0, [x19, #1576]
    2294:	cbnz	w0, 25a4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x478>
    2298:	ldr	x2, [x19, #1568]
    229c:	ldr	w0, [x2, #8]
    22a0:	mov	w3, w0
    22a4:	tst	x0, #0x3
    22a8:	b.ne	2630 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x504>  // b.any
    22ac:	ldur	x0, [x21, #-32]
    22b0:	mvn	x1, x0
    22b4:	add	x1, x1, x3, lsr #2
    22b8:	lsl	w0, w0, #2
    22bc:	cmp	x0, x3
    22c0:	b.cs	2650 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x524>  // b.hs, b.nlast
    22c4:	ldr	x2, [x2]
    22c8:	ldr	w3, [x2, x0]
    22cc:	cbnz	w3, 2670 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x544>
    22d0:	str	w1, [x2, x0]
    22d4:	ldur	w0, [x21, #-40]
    22d8:	str	w0, [x19, #1584]
    22dc:	sub	x1, x21, #0x18
    22e0:	add	x0, x19, #0x638
    22e4:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    22e8:	ldr	x21, [x19, #1624]
    22ec:	sub	x0, x21, #0x28
    22f0:	str	x0, [x19, #1624]
    22f4:	ldur	x20, [x21, #-24]
    22f8:	ldur	x23, [x21, #-16]
    22fc:	cmp	x20, x23
    2300:	b.eq	2728 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x5fc>  // b.none
    2304:	adrp	x22, 0 <__pthread_key_create>
    2308:	ldr	x24, [x22]
    230c:	mov	x22, x24
    2310:	b	26b8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x58c>
    2314:	mov	x3, #0x8                   	// #8
    2318:	mov	x2, #0x0                   	// #0
    231c:	add	x1, x19, #0x420
    2320:	mov	x0, x27
    2324:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2328:	b	2188 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x5c>
    232c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2330:	add	x3, x3, #0x0
    2334:	mov	w2, #0x43                  	// #67
    2338:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    233c:	add	x1, x1, #0x0
    2340:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2344:	add	x0, x0, #0x0
    2348:	bl	0 <__assert_fail>
    234c:	mov	x3, #0x8                   	// #8
    2350:	mov	x2, #0x0                   	// #0
    2354:	add	x1, x19, #0x420
    2358:	mov	x0, x27
    235c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2360:	b	21c0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x94>
    2364:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2368:	add	x3, x3, #0x0
    236c:	mov	w2, #0x43                  	// #67
    2370:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2374:	add	x1, x1, #0x0
    2378:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    237c:	add	x0, x0, #0x0
    2380:	bl	0 <__assert_fail>
    2384:	mov	x3, #0x8                   	// #8
    2388:	mov	x2, #0x0                   	// #0
    238c:	add	x1, x19, #0x420
    2390:	mov	x0, x27
    2394:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2398:	b	21f8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0xcc>
    239c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    23a0:	add	x3, x3, #0x0
    23a4:	mov	w2, #0x43                  	// #67
    23a8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    23ac:	add	x1, x1, #0x0
    23b0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    23b4:	add	x0, x0, #0x0
    23b8:	bl	0 <__assert_fail>
    23bc:	cbz	w22, 23f0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x2c4>
    23c0:	cbz	x21, 23f0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x2c4>
    23c4:	mov	x1, x21
    23c8:	mov	x0, x19
    23cc:	bl	1e0c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE>
    23d0:	ldrb	w0, [x25, #16]
    23d4:	cbz	w0, 2410 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x2e4>
    23d8:	ldp	x0, x1, [x25]
    23dc:	mov	x2, x1
    23e0:	mov	x1, x0
    23e4:	mov	x0, x19
    23e8:	bl	1f40 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20emitMetaExternalFileENS_9StringRefE>
    23ec:	b	225c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x130>
    23f0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    23f4:	add	x3, x3, #0x0
    23f8:	mov	w2, #0xf8                  	// #248
    23fc:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2400:	add	x1, x1, #0x0
    2404:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2408:	add	x0, x0, #0x0
    240c:	bl	0 <__assert_fail>
    2410:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2414:	add	x3, x3, #0x0
    2418:	mov	w2, #0xfa                  	// #250
    241c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2420:	add	x1, x1, #0x0
    2424:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2428:	add	x0, x0, #0x0
    242c:	bl	0 <__assert_fail>
    2430:	cbz	w24, 2444 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x318>
    2434:	mov	x1, x23
    2438:	mov	x0, x19
    243c:	bl	2000 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm>
    2440:	b	225c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x130>
    2444:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2448:	add	x3, x3, #0x0
    244c:	mov	w2, #0xfe                  	// #254
    2450:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2454:	add	x1, x1, #0x0
    2458:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    245c:	add	x0, x0, #0x0
    2460:	bl	0 <__assert_fail>
    2464:	cbz	w24, 248c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x360>
    2468:	mov	x1, x23
    246c:	mov	x0, x19
    2470:	bl	2000 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21emitMetaRemarkVersionEm>
    2474:	cbz	w22, 24ac <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x380>
    2478:	cbz	x21, 24ac <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x380>
    247c:	mov	x1, x21
    2480:	mov	x0, x19
    2484:	bl	1e0c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14emitMetaStrTabERKNS0_11StringTableE>
    2488:	b	225c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x130>
    248c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2490:	add	x3, x3, #0x0
    2494:	mov	w2, #0x102                 	// #258
    2498:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    249c:	add	x1, x1, #0x0
    24a0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24a4:	add	x0, x0, #0x0
    24a8:	bl	0 <__assert_fail>
    24ac:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24b0:	add	x3, x3, #0x0
    24b4:	mov	w2, #0x104                 	// #260
    24b8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24bc:	add	x1, x1, #0x0
    24c0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24c4:	add	x0, x0, #0x0
    24c8:	bl	0 <__assert_fail>
    24cc:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24d0:	add	x3, x3, #0x0
    24d4:	mov	w2, #0xe5                  	// #229
    24d8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24dc:	add	x1, x1, #0x0
    24e0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24e4:	add	x0, x0, #0x0
    24e8:	bl	0 <__assert_fail>
    24ec:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24f0:	add	x3, x3, #0x0
    24f4:	mov	w2, #0x78                  	// #120
    24f8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    24fc:	add	x1, x1, #0x0
    2500:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2504:	add	x0, x0, #0x0
    2508:	bl	0 <__assert_fail>
    250c:	ldr	w23, [x19, #1580]
    2510:	ldr	x22, [x19, #1568]
    2514:	ldr	w2, [x22, #8]
    2518:	ldr	w0, [x22, #12]
    251c:	sub	x0, x0, x2
    2520:	cmp	x0, #0x3
    2524:	b.ls	256c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x440>  // b.plast
    2528:	ldr	w0, [x22, #8]
    252c:	ldr	x1, [x22]
    2530:	str	w23, [x1, x0]
    2534:	ldr	w0, [x22, #8]
    2538:	mov	w1, w0
    253c:	add	x1, x1, #0x4
    2540:	ldr	w2, [x22, #12]
    2544:	cmp	x1, x2
    2548:	b.hi	2584 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x458>  // b.pmore
    254c:	add	w0, w0, #0x4
    2550:	str	w0, [x22, #8]
    2554:	ldr	w1, [x19, #1576]
    2558:	str	wzr, [x19, #1580]
    255c:	add	w20, w20, w1
    2560:	and	w20, w20, #0x1f
    2564:	str	w20, [x19, #1576]
    2568:	b	2290 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x164>
    256c:	mov	x3, #0x1                   	// #1
    2570:	add	x2, x2, #0x4
    2574:	add	x1, x22, #0x10
    2578:	mov	x0, x22
    257c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2580:	b	2528 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x3fc>
    2584:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2588:	add	x3, x3, #0x0
    258c:	mov	w2, #0x43                  	// #67
    2590:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2594:	add	x1, x1, #0x0
    2598:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    259c:	add	x0, x0, #0x0
    25a0:	bl	0 <__assert_fail>
    25a4:	ldr	w22, [x19, #1580]
    25a8:	ldr	x20, [x19, #1568]
    25ac:	ldr	w2, [x20, #8]
    25b0:	ldr	w0, [x20, #12]
    25b4:	sub	x0, x0, x2
    25b8:	cmp	x0, #0x3
    25bc:	b.ls	25f8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x4cc>  // b.plast
    25c0:	ldr	w0, [x20, #8]
    25c4:	ldr	x1, [x20]
    25c8:	str	w22, [x1, x0]
    25cc:	ldr	w0, [x20, #8]
    25d0:	mov	w1, w0
    25d4:	add	x1, x1, #0x4
    25d8:	ldr	w2, [x20, #12]
    25dc:	cmp	x1, x2
    25e0:	b.hi	2610 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x4e4>  // b.pmore
    25e4:	add	w0, w0, #0x4
    25e8:	str	w0, [x20, #8]
    25ec:	str	wzr, [x19, #1576]
    25f0:	str	wzr, [x19, #1580]
    25f4:	b	2298 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x16c>
    25f8:	mov	x3, #0x1                   	// #1
    25fc:	add	x2, x2, #0x4
    2600:	add	x1, x20, #0x10
    2604:	mov	x0, x20
    2608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    260c:	b	25c0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x494>
    2610:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2614:	add	x3, x3, #0x0
    2618:	mov	w2, #0x43                  	// #67
    261c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2620:	add	x1, x1, #0x0
    2624:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2628:	add	x0, x0, #0x0
    262c:	bl	0 <__assert_fail>
    2630:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2634:	add	x3, x3, #0x0
    2638:	mov	w2, #0x4f                  	// #79
    263c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2640:	add	x1, x1, #0x0
    2644:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2648:	add	x0, x0, #0x0
    264c:	bl	0 <__assert_fail>
    2650:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2654:	add	x3, x3, #0x0
    2658:	mov	w2, #0x95                  	// #149
    265c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2660:	add	x1, x1, #0x0
    2664:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2668:	add	x0, x0, #0x0
    266c:	bl	0 <__assert_fail>
    2670:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2674:	add	x3, x3, #0x0
    2678:	mov	w2, #0x6b                  	// #107
    267c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2680:	add	x1, x1, #0x0
    2684:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2688:	add	x0, x0, #0x0
    268c:	bl	0 <__assert_fail>
    2690:	add	x1, x19, #0x8
    2694:	ldaxr	w0, [x1]
    2698:	sub	w2, w0, #0x1
    269c:	stlxr	w3, w2, [x1]
    26a0:	cbnz	w3, 2694 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x568>
    26a4:	cmp	w0, #0x1
    26a8:	b.eq	26d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x5a8>  // b.none
    26ac:	add	x20, x20, #0x10
    26b0:	cmp	x23, x20
    26b4:	b.eq	2728 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x5fc>  // b.none
    26b8:	ldr	x19, [x20, #8]
    26bc:	cbz	x19, 26ac <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x580>
    26c0:	cbnz	x24, 2690 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x564>
    26c4:	ldr	w0, [x19, #8]
    26c8:	sub	w1, w0, #0x1
    26cc:	str	w1, [x19, #8]
    26d0:	b	26a4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x578>
    26d4:	ldr	x0, [x19]
    26d8:	ldr	x1, [x0, #16]
    26dc:	mov	x0, x19
    26e0:	blr	x1
    26e4:	cbz	x22, 2718 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x5ec>
    26e8:	add	x1, x19, #0xc
    26ec:	ldaxr	w0, [x1]
    26f0:	sub	w2, w0, #0x1
    26f4:	stlxr	w3, w2, [x1]
    26f8:	cbnz	w3, 26ec <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x5c0>
    26fc:	cmp	w0, #0x1
    2700:	b.ne	26ac <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x580>  // b.any
    2704:	ldr	x0, [x19]
    2708:	ldr	x1, [x0, #24]
    270c:	mov	x0, x19
    2710:	blr	x1
    2714:	b	26ac <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x580>
    2718:	ldr	w0, [x19, #12]
    271c:	sub	w1, w0, #0x1
    2720:	str	w1, [x19, #12]
    2724:	b	26fc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x5d0>
    2728:	ldur	x0, [x21, #-24]
    272c:	cbz	x0, 2734 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE+0x608>
    2730:	bl	0 <_ZdlPv>
    2734:	ldp	x19, x20, [sp, #16]
    2738:	ldp	x21, x22, [sp, #32]
    273c:	ldp	x23, x24, [sp, #48]
    2740:	ldp	x25, x26, [sp, #64]
    2744:	ldr	x27, [sp, #80]
    2748:	ldp	x29, x30, [sp], #96
    274c:	ret

0000000000002750 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE>:
    2750:	stp	x29, x30, [sp, #-368]!
    2754:	mov	x29, sp
    2758:	stp	x19, x20, [sp, #16]
    275c:	stp	x21, x22, [sp, #32]
    2760:	stp	x27, x28, [sp, #80]
    2764:	mov	x19, x0
    2768:	mov	x21, x1
    276c:	mov	x27, x2
    2770:	add	x0, x0, #0x620
    2774:	str	x0, [sp, #96]
    2778:	mov	w2, #0x4                   	// #4
    277c:	mov	w1, #0x9                   	// #9
    2780:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2784:	add	x20, x19, #0x410
    2788:	str	wzr, [x20, #8]
    278c:	str	x20, [sp, #128]
    2790:	ldr	w0, [x19, #1052]
    2794:	cbz	w0, 2974 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x224>
    2798:	ldr	w2, [x19, #1048]
    279c:	ldr	x0, [x19, #1040]
    27a0:	mov	x3, #0x5                   	// #5
    27a4:	str	x3, [x0, x2, lsl #3]
    27a8:	ldr	w0, [x19, #1048]
    27ac:	ldr	w2, [x19, #1052]
    27b0:	mov	w1, w0
    27b4:	add	x1, x1, #0x1
    27b8:	cmp	x1, w2, uxtw
    27bc:	b.hi	298c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x23c>  // b.pmore
    27c0:	add	w0, w0, #0x1
    27c4:	str	w0, [x19, #1048]
    27c8:	ldrsw	x22, [x21]
    27cc:	cmp	w2, w0
    27d0:	b.ls	29b4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x264>  // b.plast
    27d4:	ldr	w1, [x19, #1048]
    27d8:	ldr	x0, [x19, #1040]
    27dc:	str	x22, [x0, x1, lsl #3]
    27e0:	ldr	w0, [x19, #1048]
    27e4:	mov	w1, w0
    27e8:	add	x1, x1, #0x1
    27ec:	ldr	w2, [x19, #1052]
    27f0:	cmp	x1, x2
    27f4:	b.hi	29cc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x27c>  // b.pmore
    27f8:	stp	x23, x24, [sp, #48]
    27fc:	add	x22, x19, #0x400
    2800:	add	w0, w0, #0x1
    2804:	str	w0, [x22, #24]
    2808:	add	x8, sp, #0xa8
    280c:	ldp	x1, x2, [x21, #24]
    2810:	mov	x0, x27
    2814:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
    2818:	ldr	w23, [sp, #168]
    281c:	ldr	w1, [x22, #24]
    2820:	ldr	w0, [x22, #28]
    2824:	cmp	w1, w0
    2828:	b.cs	29f4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x2a4>  // b.hs, b.nlast
    282c:	ldr	w1, [x19, #1048]
    2830:	ldr	x0, [x19, #1040]
    2834:	str	x23, [x0, x1, lsl #3]
    2838:	ldr	w0, [x19, #1048]
    283c:	mov	w1, w0
    2840:	add	x1, x1, #0x1
    2844:	ldr	w2, [x19, #1052]
    2848:	cmp	x1, x2
    284c:	b.hi	2a0c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x2bc>  // b.pmore
    2850:	add	x22, x19, #0x400
    2854:	add	w0, w0, #0x1
    2858:	str	w0, [x22, #24]
    285c:	add	x8, sp, #0xc0
    2860:	ldp	x1, x2, [x21, #8]
    2864:	mov	x0, x27
    2868:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
    286c:	ldr	w23, [sp, #192]
    2870:	ldr	w1, [x22, #24]
    2874:	ldr	w0, [x22, #28]
    2878:	cmp	w1, w0
    287c:	b.cs	2a30 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x2e0>  // b.hs, b.nlast
    2880:	ldr	w1, [x19, #1048]
    2884:	ldr	x0, [x19, #1040]
    2888:	str	x23, [x0, x1, lsl #3]
    288c:	ldr	w0, [x19, #1048]
    2890:	mov	w1, w0
    2894:	add	x1, x1, #0x1
    2898:	ldr	w2, [x19, #1052]
    289c:	cmp	x1, x2
    28a0:	b.hi	2a48 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x2f8>  // b.pmore
    28a4:	add	x22, x19, #0x400
    28a8:	add	w0, w0, #0x1
    28ac:	str	w0, [x22, #24]
    28b0:	add	x8, sp, #0xd8
    28b4:	ldp	x1, x2, [x21, #40]
    28b8:	mov	x0, x27
    28bc:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
    28c0:	ldr	w23, [sp, #216]
    28c4:	ldr	w1, [x22, #24]
    28c8:	ldr	w0, [x22, #28]
    28cc:	cmp	w1, w0
    28d0:	b.cs	2a6c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x31c>  // b.hs, b.nlast
    28d4:	ldr	w2, [x19, #1048]
    28d8:	ldr	x0, [x19, #1040]
    28dc:	str	x23, [x0, x2, lsl #3]
    28e0:	ldr	w3, [x19, #1048]
    28e4:	mov	w0, w3
    28e8:	add	x0, x0, #0x1
    28ec:	ldr	w1, [x19, #1052]
    28f0:	cmp	x0, x1
    28f4:	b.hi	2a84 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x334>  // b.pmore
    28f8:	add	w3, w3, #0x1
    28fc:	str	w3, [x19, #1048]
    2900:	mov	x6, #0x0                   	// #0
    2904:	mov	x4, #0x0                   	// #0
    2908:	mov	x5, #0x0                   	// #0
    290c:	ldr	x2, [x19, #1040]
    2910:	mov	w3, w3
    2914:	ldr	w1, [x19, #1704]
    2918:	ldr	x0, [sp, #96]
    291c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2920:	ldrb	w0, [x21, #80]
    2924:	cbnz	w0, 2aa8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x358>
    2928:	ldp	x0, x1, [x21, #88]
    292c:	stp	x0, x1, [sp, #152]
    2930:	ldrb	w0, [sp, #160]
    2934:	cbnz	w0, 2c1c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x4cc>
    2938:	ldr	x20, [x21, #104]
    293c:	ldr	w0, [x21, #112]
    2940:	add	x28, x20, x0, lsl #6
    2944:	cmp	x28, x20
    2948:	b.eq	2e44 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x6f4>  // b.none
    294c:	stp	x25, x26, [sp, #64]
    2950:	add	x0, sp, #0x128
    2954:	str	x0, [sp, #104]
    2958:	add	x0, sp, #0x140
    295c:	str	x0, [sp, #112]
    2960:	add	x0, x19, #0x420
    2964:	str	x0, [sp, #136]
    2968:	add	x0, sp, #0x158
    296c:	str	x0, [sp, #120]
    2970:	b	30f8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x9a8>
    2974:	mov	x3, #0x8                   	// #8
    2978:	mov	x2, #0x0                   	// #0
    297c:	add	x1, x19, #0x420
    2980:	mov	x0, x20
    2984:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2988:	b	2798 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x48>
    298c:	stp	x23, x24, [sp, #48]
    2990:	stp	x25, x26, [sp, #64]
    2994:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2998:	add	x3, x3, #0x0
    299c:	mov	w2, #0x43                  	// #67
    29a0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    29a4:	add	x1, x1, #0x0
    29a8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    29ac:	add	x0, x0, #0x0
    29b0:	bl	0 <__assert_fail>
    29b4:	mov	x3, #0x8                   	// #8
    29b8:	mov	x2, #0x0                   	// #0
    29bc:	add	x1, x19, #0x420
    29c0:	mov	x0, x20
    29c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    29c8:	b	27d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x84>
    29cc:	stp	x23, x24, [sp, #48]
    29d0:	stp	x25, x26, [sp, #64]
    29d4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    29d8:	add	x3, x3, #0x0
    29dc:	mov	w2, #0x43                  	// #67
    29e0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    29e4:	add	x1, x1, #0x0
    29e8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    29ec:	add	x0, x0, #0x0
    29f0:	bl	0 <__assert_fail>
    29f4:	mov	x3, #0x8                   	// #8
    29f8:	mov	x2, #0x0                   	// #0
    29fc:	add	x1, x19, #0x420
    2a00:	mov	x0, x20
    2a04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a08:	b	282c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0xdc>
    2a0c:	stp	x25, x26, [sp, #64]
    2a10:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a14:	add	x3, x3, #0x0
    2a18:	mov	w2, #0x43                  	// #67
    2a1c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a20:	add	x1, x1, #0x0
    2a24:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a28:	add	x0, x0, #0x0
    2a2c:	bl	0 <__assert_fail>
    2a30:	mov	x3, #0x8                   	// #8
    2a34:	mov	x2, #0x0                   	// #0
    2a38:	add	x1, x19, #0x420
    2a3c:	mov	x0, x20
    2a40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a44:	b	2880 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x130>
    2a48:	stp	x25, x26, [sp, #64]
    2a4c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a50:	add	x3, x3, #0x0
    2a54:	mov	w2, #0x43                  	// #67
    2a58:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a5c:	add	x1, x1, #0x0
    2a60:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a64:	add	x0, x0, #0x0
    2a68:	bl	0 <__assert_fail>
    2a6c:	mov	x3, #0x8                   	// #8
    2a70:	mov	x2, #0x0                   	// #0
    2a74:	add	x1, x19, #0x420
    2a78:	mov	x0, x20
    2a7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a80:	b	28d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x184>
    2a84:	stp	x25, x26, [sp, #64]
    2a88:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a8c:	add	x3, x3, #0x0
    2a90:	mov	w2, #0x43                  	// #67
    2a94:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2a98:	add	x1, x1, #0x0
    2a9c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2aa0:	add	x0, x0, #0x0
    2aa4:	bl	0 <__assert_fail>
    2aa8:	str	wzr, [x19, #1048]
    2aac:	ldr	w0, [x19, #1052]
    2ab0:	cbz	w0, 2b74 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x424>
    2ab4:	ldr	w1, [x19, #1048]
    2ab8:	ldr	x0, [x19, #1040]
    2abc:	mov	x3, #0x6                   	// #6
    2ac0:	str	x3, [x0, x1, lsl #3]
    2ac4:	ldr	w0, [x19, #1048]
    2ac8:	mov	w1, w0
    2acc:	add	x1, x1, #0x1
    2ad0:	ldr	w2, [x19, #1052]
    2ad4:	cmp	x1, x2
    2ad8:	b.hi	2b8c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x43c>  // b.pmore
    2adc:	add	w0, w0, #0x1
    2ae0:	str	w0, [x19, #1048]
    2ae4:	ldrb	w0, [x21, #80]
    2ae8:	cbz	w0, 2bb0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x460>
    2aec:	add	x22, x21, #0x38
    2af0:	add	x8, sp, #0xf8
    2af4:	ldp	x1, x2, [x21, #56]
    2af8:	mov	x0, x27
    2afc:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
    2b00:	ldr	w0, [sp, #248]
    2b04:	str	x0, [sp, #240]
    2b08:	add	x1, sp, #0xf0
    2b0c:	mov	x0, x20
    2b10:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2b14:	ldrb	w0, [x22, #24]
    2b18:	cbz	w0, 2bd4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x484>
    2b1c:	add	x22, x21, #0x38
    2b20:	ldr	w0, [x21, #72]
    2b24:	str	x0, [sp, #272]
    2b28:	add	x1, sp, #0x110
    2b2c:	mov	x0, x20
    2b30:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2b34:	ldrb	w0, [x22, #24]
    2b38:	cbz	w0, 2bf8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x4a8>
    2b3c:	ldr	w0, [x21, #76]
    2b40:	str	x0, [sp, #280]
    2b44:	add	x1, sp, #0x118
    2b48:	mov	x0, x20
    2b4c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2b50:	mov	x6, #0x0                   	// #0
    2b54:	mov	x4, #0x0                   	// #0
    2b58:	mov	x5, #0x0                   	// #0
    2b5c:	ldr	x2, [x19, #1040]
    2b60:	ldr	w3, [x19, #1048]
    2b64:	ldr	w1, [x19, #1712]
    2b68:	ldr	x0, [sp, #96]
    2b6c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2b70:	b	2928 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x1d8>
    2b74:	mov	x3, #0x8                   	// #8
    2b78:	mov	x2, #0x0                   	// #0
    2b7c:	add	x1, x19, #0x420
    2b80:	mov	x0, x20
    2b84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b88:	b	2ab4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x364>
    2b8c:	stp	x25, x26, [sp, #64]
    2b90:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2b94:	add	x3, x3, #0x0
    2b98:	mov	w2, #0x43                  	// #67
    2b9c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2ba0:	add	x1, x1, #0x0
    2ba4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2ba8:	add	x0, x0, #0x0
    2bac:	bl	0 <__assert_fail>
    2bb0:	stp	x25, x26, [sp, #64]
    2bb4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2bb8:	add	x3, x3, #0x0
    2bbc:	mov	w2, #0xb1                  	// #177
    2bc0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2bc4:	add	x1, x1, #0x0
    2bc8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2bcc:	add	x0, x0, #0x0
    2bd0:	bl	0 <__assert_fail>
    2bd4:	stp	x25, x26, [sp, #64]
    2bd8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2bdc:	add	x3, x3, #0x0
    2be0:	mov	w2, #0xb1                  	// #177
    2be4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2be8:	add	x1, x1, #0x0
    2bec:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2bf0:	add	x0, x0, #0x0
    2bf4:	bl	0 <__assert_fail>
    2bf8:	stp	x25, x26, [sp, #64]
    2bfc:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c00:	add	x3, x3, #0x0
    2c04:	mov	w2, #0xb1                  	// #177
    2c08:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c0c:	add	x1, x1, #0x0
    2c10:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c14:	add	x0, x0, #0x0
    2c18:	bl	0 <__assert_fail>
    2c1c:	str	wzr, [x19, #1048]
    2c20:	mov	x0, #0x7                   	// #7
    2c24:	str	x0, [sp, #288]
    2c28:	add	x1, sp, #0x120
    2c2c:	mov	x0, x20
    2c30:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c34:	ldrb	w0, [sp, #160]
    2c38:	cbz	w0, 2c6c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x51c>
    2c3c:	add	x1, sp, #0x98
    2c40:	mov	x0, x20
    2c44:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c48:	mov	x6, #0x0                   	// #0
    2c4c:	mov	x4, #0x0                   	// #0
    2c50:	mov	x5, #0x0                   	// #0
    2c54:	ldr	x2, [x19, #1040]
    2c58:	ldr	w3, [x19, #1048]
    2c5c:	ldr	w1, [x19, #1720]
    2c60:	ldr	x0, [sp, #96]
    2c64:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c68:	b	2938 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x1e8>
    2c6c:	stp	x25, x26, [sp, #64]
    2c70:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c74:	add	x3, x3, #0x0
    2c78:	mov	w2, #0xad                  	// #173
    2c7c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c80:	add	x1, x1, #0x0
    2c84:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2c88:	add	x0, x0, #0x0
    2c8c:	bl	0 <__assert_fail>
    2c90:	mov	x3, #0x8                   	// #8
    2c94:	mov	x2, #0x0                   	// #0
    2c98:	ldr	x1, [sp, #136]
    2c9c:	ldr	x0, [sp, #128]
    2ca0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ca4:	b	3148 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x9f8>
    2ca8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2cac:	add	x3, x3, #0x0
    2cb0:	mov	w2, #0x43                  	// #67
    2cb4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2cb8:	add	x1, x1, #0x0
    2cbc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2cc0:	add	x0, x0, #0x0
    2cc4:	bl	0 <__assert_fail>
    2cc8:	mov	x3, #0x8                   	// #8
    2ccc:	mov	x2, #0x0                   	// #0
    2cd0:	ldr	x1, [sp, #136]
    2cd4:	ldr	x0, [sp, #128]
    2cd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2cdc:	b	3180 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0xa30>
    2ce0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2ce4:	add	x3, x3, #0x0
    2ce8:	mov	w2, #0x43                  	// #67
    2cec:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2cf0:	add	x1, x1, #0x0
    2cf4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2cf8:	add	x0, x0, #0x0
    2cfc:	bl	0 <__assert_fail>
    2d00:	mov	x3, #0x8                   	// #8
    2d04:	mov	x2, #0x0                   	// #0
    2d08:	ldr	x1, [sp, #136]
    2d0c:	ldr	x0, [sp, #128]
    2d10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2d14:	b	31b8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0xa68>
    2d18:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d1c:	add	x3, x3, #0x0
    2d20:	mov	w2, #0x43                  	// #67
    2d24:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d28:	add	x1, x1, #0x0
    2d2c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d30:	add	x0, x0, #0x0
    2d34:	bl	0 <__assert_fail>
    2d38:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d3c:	add	x3, x3, #0x0
    2d40:	mov	w2, #0xb1                  	// #177
    2d44:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d48:	add	x1, x1, #0x0
    2d4c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d50:	add	x0, x0, #0x0
    2d54:	bl	0 <__assert_fail>
    2d58:	mov	x3, #0x8                   	// #8
    2d5c:	mov	x2, #0x0                   	// #0
    2d60:	ldr	x1, [sp, #136]
    2d64:	ldr	x0, [sp, #128]
    2d68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2d6c:	b	3214 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0xac4>
    2d70:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d74:	add	x3, x3, #0x0
    2d78:	mov	w2, #0x43                  	// #67
    2d7c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d80:	add	x1, x1, #0x0
    2d84:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d88:	add	x0, x0, #0x0
    2d8c:	bl	0 <__assert_fail>
    2d90:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2d94:	add	x3, x3, #0x0
    2d98:	mov	w2, #0xb1                  	// #177
    2d9c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2da0:	add	x1, x1, #0x0
    2da4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2da8:	add	x0, x0, #0x0
    2dac:	bl	0 <__assert_fail>
    2db0:	mov	x3, #0x8                   	// #8
    2db4:	mov	x2, #0x0                   	// #0
    2db8:	ldr	x1, [sp, #136]
    2dbc:	ldr	x0, [sp, #128]
    2dc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2dc4:	b	3254 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0xb04>
    2dc8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2dcc:	add	x3, x3, #0x0
    2dd0:	mov	w2, #0x43                  	// #67
    2dd4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2dd8:	add	x1, x1, #0x0
    2ddc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2de0:	add	x0, x0, #0x0
    2de4:	bl	0 <__assert_fail>
    2de8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2dec:	add	x3, x3, #0x0
    2df0:	mov	w2, #0xb1                  	// #177
    2df4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2df8:	add	x1, x1, #0x0
    2dfc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2e00:	add	x0, x0, #0x0
    2e04:	bl	0 <__assert_fail>
    2e08:	mov	x3, #0x8                   	// #8
    2e0c:	mov	x2, #0x0                   	// #0
    2e10:	ldr	x1, [sp, #136]
    2e14:	ldr	x0, [sp, #128]
    2e18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2e1c:	b	3294 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0xb44>
    2e20:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2e24:	add	x3, x3, #0x0
    2e28:	mov	w2, #0x43                  	// #67
    2e2c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2e30:	add	x1, x1, #0x0
    2e34:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2e38:	add	x0, x0, #0x0
    2e3c:	bl	0 <__assert_fail>
    2e40:	ldp	x25, x26, [sp, #64]
    2e44:	ldr	x20, [x19, #1624]
    2e48:	ldr	x0, [x19, #1616]
    2e4c:	cmp	x0, x20
    2e50:	b.eq	2ee8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x798>  // b.none
    2e54:	ldr	w2, [x19, #1584]
    2e58:	mov	w1, #0x0                   	// #0
    2e5c:	ldr	x0, [sp, #96]
    2e60:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2e64:	ldr	w0, [x19, #1576]
    2e68:	cbnz	w0, 2f0c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x7bc>
    2e6c:	ldr	x2, [x19, #1568]
    2e70:	ldr	w0, [x2, #8]
    2e74:	mov	w3, w0
    2e78:	tst	x0, #0x3
    2e7c:	b.ne	2f9c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x84c>  // b.any
    2e80:	ldur	x0, [x20, #-32]
    2e84:	mvn	x1, x0
    2e88:	add	x1, x1, x3, lsr #2
    2e8c:	lsl	w0, w0, #2
    2e90:	cmp	x0, x3
    2e94:	b.cs	2fc0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x870>  // b.hs, b.nlast
    2e98:	ldr	x2, [x2]
    2e9c:	ldr	w3, [x2, x0]
    2ea0:	cbnz	w3, 2fe4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x894>
    2ea4:	str	w1, [x2, x0]
    2ea8:	ldur	w0, [x20, #-40]
    2eac:	str	w0, [x19, #1584]
    2eb0:	sub	x1, x20, #0x18
    2eb4:	add	x0, x19, #0x638
    2eb8:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2ebc:	ldr	x23, [x19, #1624]
    2ec0:	sub	x0, x23, #0x28
    2ec4:	str	x0, [x19, #1624]
    2ec8:	ldur	x19, [x23, #-24]
    2ecc:	ldur	x21, [x23, #-16]
    2ed0:	cmp	x19, x21
    2ed4:	b.eq	30a4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x954>  // b.none
    2ed8:	adrp	x24, 0 <__pthread_key_create>
    2edc:	ldr	x22, [x24]
    2ee0:	mov	x24, x22
    2ee4:	b	302c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8dc>
    2ee8:	stp	x25, x26, [sp, #64]
    2eec:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2ef0:	add	x3, x3, #0x0
    2ef4:	mov	w2, #0xe5                  	// #229
    2ef8:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2efc:	add	x1, x1, #0x0
    2f00:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2f04:	add	x0, x0, #0x0
    2f08:	bl	0 <__assert_fail>
    2f0c:	ldr	w22, [x19, #1580]
    2f10:	ldr	x21, [x19, #1568]
    2f14:	ldr	w2, [x21, #8]
    2f18:	ldr	w0, [x21, #12]
    2f1c:	sub	x0, x0, x2
    2f20:	cmp	x0, #0x3
    2f24:	b.ls	2f60 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x810>  // b.plast
    2f28:	ldr	w0, [x21, #8]
    2f2c:	ldr	x1, [x21]
    2f30:	str	w22, [x1, x0]
    2f34:	ldr	w0, [x21, #8]
    2f38:	mov	w1, w0
    2f3c:	add	x1, x1, #0x4
    2f40:	ldr	w2, [x21, #12]
    2f44:	cmp	x1, x2
    2f48:	b.hi	2f78 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x828>  // b.pmore
    2f4c:	add	w0, w0, #0x4
    2f50:	str	w0, [x21, #8]
    2f54:	str	wzr, [x19, #1576]
    2f58:	str	wzr, [x19, #1580]
    2f5c:	b	2e6c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x71c>
    2f60:	mov	x3, #0x1                   	// #1
    2f64:	add	x2, x2, #0x4
    2f68:	add	x1, x21, #0x10
    2f6c:	mov	x0, x21
    2f70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2f74:	b	2f28 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x7d8>
    2f78:	stp	x25, x26, [sp, #64]
    2f7c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2f80:	add	x3, x3, #0x0
    2f84:	mov	w2, #0x43                  	// #67
    2f88:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2f8c:	add	x1, x1, #0x0
    2f90:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2f94:	add	x0, x0, #0x0
    2f98:	bl	0 <__assert_fail>
    2f9c:	stp	x25, x26, [sp, #64]
    2fa0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2fa4:	add	x3, x3, #0x0
    2fa8:	mov	w2, #0x4f                  	// #79
    2fac:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2fb0:	add	x1, x1, #0x0
    2fb4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2fb8:	add	x0, x0, #0x0
    2fbc:	bl	0 <__assert_fail>
    2fc0:	stp	x25, x26, [sp, #64]
    2fc4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2fc8:	add	x3, x3, #0x0
    2fcc:	mov	w2, #0x95                  	// #149
    2fd0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2fd4:	add	x1, x1, #0x0
    2fd8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2fdc:	add	x0, x0, #0x0
    2fe0:	bl	0 <__assert_fail>
    2fe4:	stp	x25, x26, [sp, #64]
    2fe8:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2fec:	add	x3, x3, #0x0
    2ff0:	mov	w2, #0x6b                  	// #107
    2ff4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    2ff8:	add	x1, x1, #0x0
    2ffc:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3000:	add	x0, x0, #0x0
    3004:	bl	0 <__assert_fail>
    3008:	ldaxr	w0, [x1]
    300c:	sub	w2, w0, #0x1
    3010:	stlxr	w3, w2, [x1]
    3014:	cbnz	w3, 3008 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8b8>
    3018:	cmp	w0, #0x1
    301c:	b.eq	3050 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x900>  // b.none
    3020:	add	x19, x19, #0x10
    3024:	cmp	x21, x19
    3028:	b.eq	30a4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x954>  // b.none
    302c:	ldr	x20, [x19, #8]
    3030:	cbz	x20, 3020 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8d0>
    3034:	cbz	x22, 3040 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8f0>
    3038:	add	x1, x20, #0x8
    303c:	b	3008 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8b8>
    3040:	ldr	w0, [x20, #8]
    3044:	sub	w1, w0, #0x1
    3048:	str	w1, [x20, #8]
    304c:	b	3018 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8c8>
    3050:	ldr	x0, [x20]
    3054:	ldr	x1, [x0, #16]
    3058:	mov	x0, x20
    305c:	blr	x1
    3060:	cbz	x24, 3094 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x944>
    3064:	add	x1, x20, #0xc
    3068:	ldaxr	w0, [x1]
    306c:	sub	w2, w0, #0x1
    3070:	stlxr	w3, w2, [x1]
    3074:	cbnz	w3, 3068 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x918>
    3078:	cmp	w0, #0x1
    307c:	b.ne	3020 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8d0>  // b.any
    3080:	ldr	x0, [x20]
    3084:	ldr	x1, [x0, #24]
    3088:	mov	x0, x20
    308c:	blr	x1
    3090:	b	3020 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x8d0>
    3094:	ldr	w0, [x20, #12]
    3098:	sub	w1, w0, #0x1
    309c:	str	w1, [x20, #12]
    30a0:	b	3078 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x928>
    30a4:	ldur	x0, [x23, #-24]
    30a8:	cbz	x0, 30b0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x960>
    30ac:	bl	0 <_ZdlPv>
    30b0:	ldp	x23, x24, [sp, #48]
    30b4:	ldp	x19, x20, [sp, #16]
    30b8:	ldp	x21, x22, [sp, #32]
    30bc:	ldp	x27, x28, [sp, #80]
    30c0:	ldp	x29, x30, [sp], #368
    30c4:	ret
    30c8:	ldr	w1, [x19, #1736]
    30cc:	and	x26, x26, #0xffffff00ffffff00
    30d0:	mov	x6, x26
    30d4:	mov	x4, #0x0                   	// #0
    30d8:	mov	x5, #0x0                   	// #0
    30dc:	ldr	x2, [x19, #1040]
    30e0:	ldr	w3, [x19, #1048]
    30e4:	ldr	x0, [sp, #96]
    30e8:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    30ec:	add	x20, x20, #0x40
    30f0:	cmp	x28, x20
    30f4:	b.eq	2e40 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x6f0>  // b.none
    30f8:	mov	x24, x20
    30fc:	str	wzr, [x19, #1048]
    3100:	ldr	x8, [sp, #104]
    3104:	ldp	x1, x2, [x20]
    3108:	mov	x0, x27
    310c:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
    3110:	ldr	w21, [sp, #296]
    3114:	ldr	x8, [sp, #112]
    3118:	ldp	x1, x2, [x20, #16]
    311c:	mov	x0, x27
    3120:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
    3124:	ldr	w23, [sp, #320]
    3128:	ldrb	w25, [x20, #56]
    312c:	cmp	w25, #0x0
    3130:	cset	x22, eq  // eq = none
    3134:	add	x22, x22, #0x8
    3138:	ldr	w1, [x19, #1048]
    313c:	ldr	w0, [x19, #1052]
    3140:	cmp	w1, w0
    3144:	b.cs	2c90 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x540>  // b.hs, b.nlast
    3148:	ldr	w2, [x19, #1048]
    314c:	ldr	x0, [x19, #1040]
    3150:	str	x22, [x0, x2, lsl #3]
    3154:	ldr	w0, [x19, #1048]
    3158:	ldr	w2, [x19, #1052]
    315c:	mov	w1, w0
    3160:	add	x1, x1, #0x1
    3164:	cmp	x1, w2, uxtw
    3168:	b.hi	2ca8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x558>  // b.pmore
    316c:	add	w0, w0, #0x1
    3170:	str	w0, [x19, #1048]
    3174:	mov	w21, w21
    3178:	cmp	w2, w0
    317c:	b.ls	2cc8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x578>  // b.plast
    3180:	ldr	w2, [x19, #1048]
    3184:	ldr	x0, [x19, #1040]
    3188:	str	x21, [x0, x2, lsl #3]
    318c:	ldr	w0, [x19, #1048]
    3190:	ldr	w2, [x19, #1052]
    3194:	mov	w1, w0
    3198:	add	x1, x1, #0x1
    319c:	cmp	x1, w2, uxtw
    31a0:	b.hi	2ce0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x590>  // b.pmore
    31a4:	add	w0, w0, #0x1
    31a8:	str	w0, [x19, #1048]
    31ac:	mov	w23, w23
    31b0:	cmp	w2, w0
    31b4:	b.ls	2d00 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x5b0>  // b.plast
    31b8:	ldr	w1, [x19, #1048]
    31bc:	ldr	x0, [x19, #1040]
    31c0:	str	x23, [x0, x1, lsl #3]
    31c4:	ldr	w0, [x19, #1048]
    31c8:	mov	w1, w0
    31cc:	add	x1, x1, #0x1
    31d0:	ldr	w2, [x19, #1052]
    31d4:	cmp	x1, x2
    31d8:	b.hi	2d18 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x5c8>  // b.pmore
    31dc:	add	w0, w0, #0x1
    31e0:	str	w0, [x19, #1048]
    31e4:	cbz	w25, 30c8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x978>
    31e8:	ldrb	w0, [x24, #56]
    31ec:	cbz	w0, 2d38 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x5e8>
    31f0:	ldr	x8, [sp, #120]
    31f4:	ldp	x1, x2, [x20, #32]
    31f8:	mov	x0, x27
    31fc:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
    3200:	ldr	w21, [sp, #344]
    3204:	ldr	w1, [x19, #1048]
    3208:	ldr	w0, [x19, #1052]
    320c:	cmp	w1, w0
    3210:	b.cs	2d58 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x608>  // b.hs, b.nlast
    3214:	ldr	w2, [x19, #1048]
    3218:	ldr	x0, [x19, #1040]
    321c:	str	x21, [x0, x2, lsl #3]
    3220:	ldr	w0, [x19, #1048]
    3224:	ldr	w2, [x19, #1052]
    3228:	mov	w1, w0
    322c:	add	x1, x1, #0x1
    3230:	cmp	x1, w2, uxtw
    3234:	b.hi	2d70 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x620>  // b.pmore
    3238:	add	w0, w0, #0x1
    323c:	str	w0, [x19, #1048]
    3240:	ldrb	w1, [x24, #56]
    3244:	cbz	w1, 2d90 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x640>
    3248:	ldr	w21, [x24, #48]
    324c:	cmp	w2, w0
    3250:	b.ls	2db0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x660>  // b.plast
    3254:	ldr	w2, [x19, #1048]
    3258:	ldr	x0, [x19, #1040]
    325c:	str	x21, [x0, x2, lsl #3]
    3260:	ldr	w0, [x19, #1048]
    3264:	ldr	w2, [x19, #1052]
    3268:	mov	w1, w0
    326c:	add	x1, x1, #0x1
    3270:	cmp	x1, w2, uxtw
    3274:	b.hi	2dc8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x678>  // b.pmore
    3278:	add	w0, w0, #0x1
    327c:	str	w0, [x19, #1048]
    3280:	ldrb	w1, [x24, #56]
    3284:	cbz	w1, 2de8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x698>
    3288:	ldr	w21, [x24, #52]
    328c:	cmp	w2, w0
    3290:	b.ls	2e08 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x6b8>  // b.plast
    3294:	ldr	w1, [x19, #1048]
    3298:	ldr	x0, [x19, #1040]
    329c:	str	x21, [x0, x1, lsl #3]
    32a0:	ldr	w0, [x19, #1048]
    32a4:	mov	w1, w0
    32a8:	add	x1, x1, #0x1
    32ac:	ldr	w2, [x19, #1052]
    32b0:	cmp	x1, x2
    32b4:	b.hi	2e20 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x6d0>  // b.pmore
    32b8:	add	w0, w0, #0x1
    32bc:	str	w0, [x19, #1048]
    32c0:	ldr	w1, [x19, #1728]
    32c4:	b	30cc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE+0x97c>

00000000000032c8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv>:
    32c8:	stp	x29, x30, [sp, #-96]!
    32cc:	mov	x29, sp
    32d0:	stp	x19, x20, [sp, #16]
    32d4:	str	x21, [sp, #32]
    32d8:	mov	x20, x0
    32dc:	add	x21, x0, #0x620
    32e0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    32e4:	add	x0, x0, #0x0
    32e8:	ldp	x0, x1, [x0]
    32ec:	mov	x3, x0
    32f0:	mov	x4, x1
    32f4:	add	x2, x20, #0x410
    32f8:	mov	x1, x21
    32fc:	mov	w0, #0x2                   	// #2
    3300:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    3304:	add	x8, sp, #0x40
    3308:	add	x0, sp, #0x38
    330c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3310:	ldr	x19, [sp, #72]
    3314:	mov	w0, #0x1                   	// #1
    3318:	str	w0, [x19, #8]
    331c:	str	w0, [x19, #12]
    3320:	mov	x0, x19
    3324:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3328:	ldr	x1, [x1]
    332c:	add	x1, x1, #0x10
    3330:	str	x1, [x0], #32
    3334:	str	x0, [x19, #16]
    3338:	mov	w0, #0x20                  	// #32
    333c:	str	w0, [x19, #28]
    3340:	mov	x0, #0x2                   	// #2
    3344:	str	x0, [x19, #32]
    3348:	mov	x1, #0x1                   	// #1
    334c:	str	x1, [x19, #40]
    3350:	mov	x1, #0x0                   	// #0
    3354:	mov	x2, #0x1                   	// #1
    3358:	bfi	x1, x2, #1, #3
    335c:	mov	x2, #0x20                  	// #32
    3360:	str	x2, [x19, #48]
    3364:	str	x1, [x19, #56]
    3368:	str	w0, [x19, #24]
    336c:	add	x0, x19, #0x10
    3370:	str	x0, [sp, #80]
    3374:	str	x19, [sp, #88]
    3378:	adrp	x0, 0 <__pthread_key_create>
    337c:	ldr	x0, [x0]
    3380:	cbz	x0, 3418 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x150>
    3384:	add	x0, x19, #0x8
    3388:	ldaxr	w1, [x0]
    338c:	add	w1, w1, #0x1
    3390:	stlxr	w2, w1, [x0]
    3394:	cbnz	w2, 3388 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0xc0>
    3398:	add	x2, sp, #0x50
    339c:	mov	w1, #0x8                   	// #8
    33a0:	mov	x0, x21
    33a4:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    33a8:	mov	w0, w0
    33ac:	str	x0, [x20, #1680]
    33b0:	ldr	x20, [sp, #88]
    33b4:	cbz	x20, 33e0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x118>
    33b8:	adrp	x0, 0 <__pthread_key_create>
    33bc:	ldr	x0, [x0]
    33c0:	cbz	x0, 3428 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x160>
    33c4:	add	x1, x20, #0x8
    33c8:	ldaxr	w0, [x1]
    33cc:	sub	w2, w0, #0x1
    33d0:	stlxr	w3, w2, [x1]
    33d4:	cbnz	w3, 33c8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x100>
    33d8:	cmp	w0, #0x1
    33dc:	b.eq	3438 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x170>  // b.none
    33e0:	adrp	x0, 0 <__pthread_key_create>
    33e4:	ldr	x0, [x0]
    33e8:	cbz	x0, 3494 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x1cc>
    33ec:	add	x1, x19, #0x8
    33f0:	ldaxr	w0, [x1]
    33f4:	sub	w2, w0, #0x1
    33f8:	stlxr	w3, w2, [x1]
    33fc:	cbnz	w3, 33f0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x128>
    3400:	cmp	w0, #0x1
    3404:	b.eq	34a4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x1dc>  // b.none
    3408:	ldp	x19, x20, [sp, #16]
    340c:	ldr	x21, [sp, #32]
    3410:	ldp	x29, x30, [sp], #96
    3414:	ret
    3418:	ldr	w0, [x19, #8]
    341c:	add	w0, w0, #0x1
    3420:	str	w0, [x19, #8]
    3424:	b	3398 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0xd0>
    3428:	ldr	w0, [x20, #8]
    342c:	sub	w1, w0, #0x1
    3430:	str	w1, [x20, #8]
    3434:	b	33d8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x110>
    3438:	ldr	x0, [x20]
    343c:	ldr	x1, [x0, #16]
    3440:	mov	x0, x20
    3444:	blr	x1
    3448:	adrp	x0, 0 <__pthread_key_create>
    344c:	ldr	x0, [x0]
    3450:	cbz	x0, 3484 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x1bc>
    3454:	add	x1, x20, #0xc
    3458:	ldaxr	w0, [x1]
    345c:	sub	w2, w0, #0x1
    3460:	stlxr	w3, w2, [x1]
    3464:	cbnz	w3, 3458 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x190>
    3468:	cmp	w0, #0x1
    346c:	b.ne	33e0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x118>  // b.any
    3470:	ldr	x0, [x20]
    3474:	ldr	x1, [x0, #24]
    3478:	mov	x0, x20
    347c:	blr	x1
    3480:	b	33e0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x118>
    3484:	ldr	w0, [x20, #12]
    3488:	sub	w1, w0, #0x1
    348c:	str	w1, [x20, #12]
    3490:	b	3468 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x1a0>
    3494:	ldr	w0, [x19, #8]
    3498:	sub	w1, w0, #0x1
    349c:	str	w1, [x19, #8]
    34a0:	b	3400 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x138>
    34a4:	ldr	x0, [x19]
    34a8:	ldr	x1, [x0, #16]
    34ac:	mov	x0, x19
    34b0:	blr	x1
    34b4:	adrp	x0, 0 <__pthread_key_create>
    34b8:	ldr	x0, [x0]
    34bc:	cbz	x0, 34f0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x228>
    34c0:	add	x1, x19, #0xc
    34c4:	ldaxr	w0, [x1]
    34c8:	sub	w2, w0, #0x1
    34cc:	stlxr	w3, w2, [x1]
    34d0:	cbnz	w3, 34c4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x1fc>
    34d4:	cmp	w0, #0x1
    34d8:	b.ne	3408 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x140>  // b.any
    34dc:	ldr	x0, [x19]
    34e0:	ldr	x1, [x0, #24]
    34e4:	mov	x0, x19
    34e8:	blr	x1
    34ec:	b	3408 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x140>
    34f0:	ldr	w0, [x19, #12]
    34f4:	sub	w1, w0, #0x1
    34f8:	str	w1, [x19, #12]
    34fc:	b	34d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv+0x20c>

0000000000003500 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv>:
    3500:	stp	x29, x30, [sp, #-96]!
    3504:	mov	x29, sp
    3508:	stp	x19, x20, [sp, #16]
    350c:	str	x21, [sp, #32]
    3510:	mov	x20, x0
    3514:	add	x21, x0, #0x620
    3518:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    351c:	add	x0, x0, #0x0
    3520:	ldp	x0, x1, [x0, #16]
    3524:	mov	x3, x0
    3528:	mov	x4, x1
    352c:	add	x2, x20, #0x410
    3530:	mov	x1, x21
    3534:	mov	w0, #0x4                   	// #4
    3538:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    353c:	add	x8, sp, #0x40
    3540:	add	x0, sp, #0x38
    3544:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3548:	ldr	x19, [sp, #72]
    354c:	mov	w0, #0x1                   	// #1
    3550:	str	w0, [x19, #8]
    3554:	str	w0, [x19, #12]
    3558:	mov	x0, x19
    355c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3560:	ldr	x1, [x1]
    3564:	add	x1, x1, #0x10
    3568:	str	x1, [x0], #32
    356c:	str	x0, [x19, #16]
    3570:	mov	w0, #0x20                  	// #32
    3574:	str	w0, [x19, #28]
    3578:	mov	x0, #0x4                   	// #4
    357c:	str	x0, [x19, #32]
    3580:	mov	x0, #0x1                   	// #1
    3584:	str	x0, [x19, #40]
    3588:	mov	x0, #0x0                   	// #0
    358c:	mov	x1, #0x5                   	// #5
    3590:	bfi	x0, x1, #1, #3
    3594:	str	xzr, [x19, #48]
    3598:	str	x0, [x19, #56]
    359c:	mov	w0, #0x2                   	// #2
    35a0:	str	w0, [x19, #24]
    35a4:	add	x0, x19, #0x10
    35a8:	str	x0, [sp, #80]
    35ac:	str	x19, [sp, #88]
    35b0:	adrp	x0, 0 <__pthread_key_create>
    35b4:	ldr	x0, [x0]
    35b8:	cbz	x0, 3650 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x150>
    35bc:	add	x0, x19, #0x8
    35c0:	ldaxr	w1, [x0]
    35c4:	add	w1, w1, #0x1
    35c8:	stlxr	w2, w1, [x0]
    35cc:	cbnz	w2, 35c0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0xc0>
    35d0:	add	x2, sp, #0x50
    35d4:	mov	w1, #0x8                   	// #8
    35d8:	mov	x0, x21
    35dc:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    35e0:	mov	w0, w0
    35e4:	str	x0, [x20, #1696]
    35e8:	ldr	x20, [sp, #88]
    35ec:	cbz	x20, 3618 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x118>
    35f0:	adrp	x0, 0 <__pthread_key_create>
    35f4:	ldr	x0, [x0]
    35f8:	cbz	x0, 3660 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x160>
    35fc:	add	x1, x20, #0x8
    3600:	ldaxr	w0, [x1]
    3604:	sub	w2, w0, #0x1
    3608:	stlxr	w3, w2, [x1]
    360c:	cbnz	w3, 3600 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x100>
    3610:	cmp	w0, #0x1
    3614:	b.eq	3670 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x170>  // b.none
    3618:	adrp	x0, 0 <__pthread_key_create>
    361c:	ldr	x0, [x0]
    3620:	cbz	x0, 36cc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x1cc>
    3624:	add	x1, x19, #0x8
    3628:	ldaxr	w0, [x1]
    362c:	sub	w2, w0, #0x1
    3630:	stlxr	w3, w2, [x1]
    3634:	cbnz	w3, 3628 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x128>
    3638:	cmp	w0, #0x1
    363c:	b.eq	36dc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x1dc>  // b.none
    3640:	ldp	x19, x20, [sp, #16]
    3644:	ldr	x21, [sp, #32]
    3648:	ldp	x29, x30, [sp], #96
    364c:	ret
    3650:	ldr	w0, [x19, #8]
    3654:	add	w0, w0, #0x1
    3658:	str	w0, [x19, #8]
    365c:	b	35d0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0xd0>
    3660:	ldr	w0, [x20, #8]
    3664:	sub	w1, w0, #0x1
    3668:	str	w1, [x20, #8]
    366c:	b	3610 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x110>
    3670:	ldr	x0, [x20]
    3674:	ldr	x1, [x0, #16]
    3678:	mov	x0, x20
    367c:	blr	x1
    3680:	adrp	x0, 0 <__pthread_key_create>
    3684:	ldr	x0, [x0]
    3688:	cbz	x0, 36bc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x1bc>
    368c:	add	x1, x20, #0xc
    3690:	ldaxr	w0, [x1]
    3694:	sub	w2, w0, #0x1
    3698:	stlxr	w3, w2, [x1]
    369c:	cbnz	w3, 3690 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x190>
    36a0:	cmp	w0, #0x1
    36a4:	b.ne	3618 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x118>  // b.any
    36a8:	ldr	x0, [x20]
    36ac:	ldr	x1, [x0, #24]
    36b0:	mov	x0, x20
    36b4:	blr	x1
    36b8:	b	3618 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x118>
    36bc:	ldr	w0, [x20, #12]
    36c0:	sub	w1, w0, #0x1
    36c4:	str	w1, [x20, #12]
    36c8:	b	36a0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x1a0>
    36cc:	ldr	w0, [x19, #8]
    36d0:	sub	w1, w0, #0x1
    36d4:	str	w1, [x19, #8]
    36d8:	b	3638 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x138>
    36dc:	ldr	x0, [x19]
    36e0:	ldr	x1, [x0, #16]
    36e4:	mov	x0, x19
    36e8:	blr	x1
    36ec:	adrp	x0, 0 <__pthread_key_create>
    36f0:	ldr	x0, [x0]
    36f4:	cbz	x0, 3728 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x228>
    36f8:	add	x1, x19, #0xc
    36fc:	ldaxr	w0, [x1]
    3700:	sub	w2, w0, #0x1
    3704:	stlxr	w3, w2, [x1]
    3708:	cbnz	w3, 36fc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x1fc>
    370c:	cmp	w0, #0x1
    3710:	b.ne	3640 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x140>  // b.any
    3714:	ldr	x0, [x19]
    3718:	ldr	x1, [x0, #24]
    371c:	mov	x0, x19
    3720:	blr	x1
    3724:	b	3640 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x140>
    3728:	ldr	w0, [x19, #12]
    372c:	sub	w1, w0, #0x1
    3730:	str	w1, [x19, #12]
    3734:	b	370c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv+0x20c>

0000000000003738 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv>:
    3738:	stp	x29, x30, [sp, #-96]!
    373c:	mov	x29, sp
    3740:	stp	x19, x20, [sp, #16]
    3744:	str	x21, [sp, #32]
    3748:	mov	x20, x0
    374c:	add	x21, x0, #0x620
    3750:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3754:	add	x0, x0, #0x0
    3758:	ldp	x0, x1, [x0, #32]
    375c:	mov	x3, x0
    3760:	mov	x4, x1
    3764:	add	x2, x20, #0x410
    3768:	mov	x1, x21
    376c:	mov	w0, #0x3                   	// #3
    3770:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    3774:	add	x8, sp, #0x40
    3778:	add	x0, sp, #0x38
    377c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3780:	ldr	x19, [sp, #72]
    3784:	mov	w0, #0x1                   	// #1
    3788:	str	w0, [x19, #8]
    378c:	str	w0, [x19, #12]
    3790:	mov	x0, x19
    3794:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3798:	ldr	x1, [x1]
    379c:	add	x1, x1, #0x10
    37a0:	str	x1, [x0], #32
    37a4:	str	x0, [x19, #16]
    37a8:	mov	w0, #0x20                  	// #32
    37ac:	str	w0, [x19, #28]
    37b0:	mov	x0, #0x3                   	// #3
    37b4:	str	x0, [x19, #32]
    37b8:	mov	x0, #0x1                   	// #1
    37bc:	str	x0, [x19, #40]
    37c0:	mov	x0, #0x0                   	// #0
    37c4:	mov	x1, #0x5                   	// #5
    37c8:	bfi	x0, x1, #1, #3
    37cc:	str	xzr, [x19, #48]
    37d0:	str	x0, [x19, #56]
    37d4:	mov	w0, #0x2                   	// #2
    37d8:	str	w0, [x19, #24]
    37dc:	add	x0, x19, #0x10
    37e0:	str	x0, [sp, #80]
    37e4:	str	x19, [sp, #88]
    37e8:	adrp	x0, 0 <__pthread_key_create>
    37ec:	ldr	x0, [x0]
    37f0:	cbz	x0, 3888 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x150>
    37f4:	add	x0, x19, #0x8
    37f8:	ldaxr	w1, [x0]
    37fc:	add	w1, w1, #0x1
    3800:	stlxr	w2, w1, [x0]
    3804:	cbnz	w2, 37f8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0xc0>
    3808:	add	x2, sp, #0x50
    380c:	mov	w1, #0x8                   	// #8
    3810:	mov	x0, x21
    3814:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3818:	mov	w0, w0
    381c:	str	x0, [x20, #1688]
    3820:	ldr	x20, [sp, #88]
    3824:	cbz	x20, 3850 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x118>
    3828:	adrp	x0, 0 <__pthread_key_create>
    382c:	ldr	x0, [x0]
    3830:	cbz	x0, 3898 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x160>
    3834:	add	x1, x20, #0x8
    3838:	ldaxr	w0, [x1]
    383c:	sub	w2, w0, #0x1
    3840:	stlxr	w3, w2, [x1]
    3844:	cbnz	w3, 3838 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x100>
    3848:	cmp	w0, #0x1
    384c:	b.eq	38a8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x170>  // b.none
    3850:	adrp	x0, 0 <__pthread_key_create>
    3854:	ldr	x0, [x0]
    3858:	cbz	x0, 3904 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x1cc>
    385c:	add	x1, x19, #0x8
    3860:	ldaxr	w0, [x1]
    3864:	sub	w2, w0, #0x1
    3868:	stlxr	w3, w2, [x1]
    386c:	cbnz	w3, 3860 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x128>
    3870:	cmp	w0, #0x1
    3874:	b.eq	3914 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x1dc>  // b.none
    3878:	ldp	x19, x20, [sp, #16]
    387c:	ldr	x21, [sp, #32]
    3880:	ldp	x29, x30, [sp], #96
    3884:	ret
    3888:	ldr	w0, [x19, #8]
    388c:	add	w0, w0, #0x1
    3890:	str	w0, [x19, #8]
    3894:	b	3808 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0xd0>
    3898:	ldr	w0, [x20, #8]
    389c:	sub	w1, w0, #0x1
    38a0:	str	w1, [x20, #8]
    38a4:	b	3848 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x110>
    38a8:	ldr	x0, [x20]
    38ac:	ldr	x1, [x0, #16]
    38b0:	mov	x0, x20
    38b4:	blr	x1
    38b8:	adrp	x0, 0 <__pthread_key_create>
    38bc:	ldr	x0, [x0]
    38c0:	cbz	x0, 38f4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x1bc>
    38c4:	add	x1, x20, #0xc
    38c8:	ldaxr	w0, [x1]
    38cc:	sub	w2, w0, #0x1
    38d0:	stlxr	w3, w2, [x1]
    38d4:	cbnz	w3, 38c8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x190>
    38d8:	cmp	w0, #0x1
    38dc:	b.ne	3850 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x118>  // b.any
    38e0:	ldr	x0, [x20]
    38e4:	ldr	x1, [x0, #24]
    38e8:	mov	x0, x20
    38ec:	blr	x1
    38f0:	b	3850 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x118>
    38f4:	ldr	w0, [x20, #12]
    38f8:	sub	w1, w0, #0x1
    38fc:	str	w1, [x20, #12]
    3900:	b	38d8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x1a0>
    3904:	ldr	w0, [x19, #8]
    3908:	sub	w1, w0, #0x1
    390c:	str	w1, [x19, #8]
    3910:	b	3870 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x138>
    3914:	ldr	x0, [x19]
    3918:	ldr	x1, [x0, #16]
    391c:	mov	x0, x19
    3920:	blr	x1
    3924:	adrp	x0, 0 <__pthread_key_create>
    3928:	ldr	x0, [x0]
    392c:	cbz	x0, 3960 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x228>
    3930:	add	x1, x19, #0xc
    3934:	ldaxr	w0, [x1]
    3938:	sub	w2, w0, #0x1
    393c:	stlxr	w3, w2, [x1]
    3940:	cbnz	w3, 3934 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x1fc>
    3944:	cmp	w0, #0x1
    3948:	b.ne	3878 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x140>  // b.any
    394c:	ldr	x0, [x19]
    3950:	ldr	x1, [x0, #24]
    3954:	mov	x0, x19
    3958:	blr	x1
    395c:	b	3878 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x140>
    3960:	ldr	w0, [x19, #12]
    3964:	sub	w1, w0, #0x1
    3968:	str	w1, [x19, #12]
    396c:	b	3944 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv+0x20c>

0000000000003970 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv>:
    3970:	stp	x29, x30, [sp, #-96]!
    3974:	mov	x29, sp
    3978:	stp	x19, x20, [sp, #16]
    397c:	stp	x21, x22, [sp, #32]
    3980:	mov	x20, x0
    3984:	add	x21, x0, #0x620
    3988:	add	x22, x0, #0x410
    398c:	adrp	x19, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3990:	add	x19, x19, #0x0
    3994:	ldp	x3, x4, [x19, #48]
    3998:	mov	x2, x22
    399c:	mov	x1, x21
    39a0:	mov	w0, #0x8                   	// #8
    39a4:	bl	c8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    39a8:	ldp	x0, x1, [x19, #64]
    39ac:	mov	x3, x0
    39b0:	mov	x4, x1
    39b4:	mov	x2, x22
    39b8:	mov	x1, x21
    39bc:	mov	w0, #0x1                   	// #1
    39c0:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    39c4:	add	x8, sp, #0x40
    39c8:	add	x0, sp, #0x38
    39cc:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    39d0:	ldr	x19, [sp, #72]
    39d4:	mov	w0, #0x1                   	// #1
    39d8:	str	w0, [x19, #8]
    39dc:	str	w0, [x19, #12]
    39e0:	mov	x0, x19
    39e4:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    39e8:	ldr	x1, [x1]
    39ec:	add	x1, x1, #0x10
    39f0:	str	x1, [x0], #32
    39f4:	str	x0, [x19, #16]
    39f8:	mov	w0, #0x20                  	// #32
    39fc:	str	w0, [x19, #28]
    3a00:	mov	x0, #0x1                   	// #1
    3a04:	str	x0, [x19, #32]
    3a08:	str	x0, [x19, #40]
    3a0c:	mov	x1, #0x0                   	// #0
    3a10:	bfi	x1, x0, #1, #3
    3a14:	mov	x2, #0x20                  	// #32
    3a18:	str	x2, [x19, #48]
    3a1c:	str	x1, [x19, #56]
    3a20:	mov	x1, #0x0                   	// #0
    3a24:	bfi	x1, x0, #1, #3
    3a28:	mov	x0, #0x2                   	// #2
    3a2c:	str	x0, [x19, #64]
    3a30:	str	x1, [x19, #72]
    3a34:	mov	w0, #0x3                   	// #3
    3a38:	str	w0, [x19, #24]
    3a3c:	add	x0, x19, #0x10
    3a40:	str	x0, [sp, #80]
    3a44:	str	x19, [sp, #88]
    3a48:	adrp	x0, 0 <__pthread_key_create>
    3a4c:	ldr	x0, [x0]
    3a50:	cbz	x0, 3ae8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x178>
    3a54:	add	x0, x19, #0x8
    3a58:	ldaxr	w1, [x0]
    3a5c:	add	w1, w1, #0x1
    3a60:	stlxr	w2, w1, [x0]
    3a64:	cbnz	w2, 3a58 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0xe8>
    3a68:	add	x2, sp, #0x50
    3a6c:	mov	w1, #0x8                   	// #8
    3a70:	mov	x0, x21
    3a74:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3a78:	mov	w0, w0
    3a7c:	str	x0, [x20, #1672]
    3a80:	ldr	x20, [sp, #88]
    3a84:	cbz	x20, 3ab0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x140>
    3a88:	adrp	x0, 0 <__pthread_key_create>
    3a8c:	ldr	x0, [x0]
    3a90:	cbz	x0, 3af8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x188>
    3a94:	add	x1, x20, #0x8
    3a98:	ldaxr	w0, [x1]
    3a9c:	sub	w2, w0, #0x1
    3aa0:	stlxr	w3, w2, [x1]
    3aa4:	cbnz	w3, 3a98 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x128>
    3aa8:	cmp	w0, #0x1
    3aac:	b.eq	3b08 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x198>  // b.none
    3ab0:	adrp	x0, 0 <__pthread_key_create>
    3ab4:	ldr	x0, [x0]
    3ab8:	cbz	x0, 3b64 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x1f4>
    3abc:	add	x1, x19, #0x8
    3ac0:	ldaxr	w0, [x1]
    3ac4:	sub	w2, w0, #0x1
    3ac8:	stlxr	w3, w2, [x1]
    3acc:	cbnz	w3, 3ac0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x150>
    3ad0:	cmp	w0, #0x1
    3ad4:	b.eq	3b74 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x204>  // b.none
    3ad8:	ldp	x19, x20, [sp, #16]
    3adc:	ldp	x21, x22, [sp, #32]
    3ae0:	ldp	x29, x30, [sp], #96
    3ae4:	ret
    3ae8:	ldr	w0, [x19, #8]
    3aec:	add	w0, w0, #0x1
    3af0:	str	w0, [x19, #8]
    3af4:	b	3a68 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0xf8>
    3af8:	ldr	w0, [x20, #8]
    3afc:	sub	w1, w0, #0x1
    3b00:	str	w1, [x20, #8]
    3b04:	b	3aa8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x138>
    3b08:	ldr	x0, [x20]
    3b0c:	ldr	x1, [x0, #16]
    3b10:	mov	x0, x20
    3b14:	blr	x1
    3b18:	adrp	x0, 0 <__pthread_key_create>
    3b1c:	ldr	x0, [x0]
    3b20:	cbz	x0, 3b54 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x1e4>
    3b24:	add	x1, x20, #0xc
    3b28:	ldaxr	w0, [x1]
    3b2c:	sub	w2, w0, #0x1
    3b30:	stlxr	w3, w2, [x1]
    3b34:	cbnz	w3, 3b28 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x1b8>
    3b38:	cmp	w0, #0x1
    3b3c:	b.ne	3ab0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x140>  // b.any
    3b40:	ldr	x0, [x20]
    3b44:	ldr	x1, [x0, #24]
    3b48:	mov	x0, x20
    3b4c:	blr	x1
    3b50:	b	3ab0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x140>
    3b54:	ldr	w0, [x20, #12]
    3b58:	sub	w1, w0, #0x1
    3b5c:	str	w1, [x20, #12]
    3b60:	b	3b38 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x1c8>
    3b64:	ldr	w0, [x19, #8]
    3b68:	sub	w1, w0, #0x1
    3b6c:	str	w1, [x19, #8]
    3b70:	b	3ad0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x160>
    3b74:	ldr	x0, [x19]
    3b78:	ldr	x1, [x0, #16]
    3b7c:	mov	x0, x19
    3b80:	blr	x1
    3b84:	adrp	x0, 0 <__pthread_key_create>
    3b88:	ldr	x0, [x0]
    3b8c:	cbz	x0, 3bc0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x250>
    3b90:	add	x1, x19, #0xc
    3b94:	ldaxr	w0, [x1]
    3b98:	sub	w2, w0, #0x1
    3b9c:	stlxr	w3, w2, [x1]
    3ba0:	cbnz	w3, 3b94 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x224>
    3ba4:	cmp	w0, #0x1
    3ba8:	b.ne	3ad8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x168>  // b.any
    3bac:	ldr	x0, [x19]
    3bb0:	ldr	x1, [x0, #24]
    3bb4:	mov	x0, x19
    3bb8:	blr	x1
    3bbc:	b	3ad8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x168>
    3bc0:	ldr	w0, [x19, #12]
    3bc4:	sub	w1, w0, #0x1
    3bc8:	str	w1, [x19, #12]
    3bcc:	b	3ba4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv+0x234>

0000000000003bd0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv>:
    3bd0:	stp	x29, x30, [sp, #-160]!
    3bd4:	mov	x29, sp
    3bd8:	stp	x19, x20, [sp, #16]
    3bdc:	stp	x21, x22, [sp, #32]
    3be0:	mov	x21, x0
    3be4:	add	x20, x0, #0x620
    3be8:	add	x22, x0, #0x410
    3bec:	adrp	x19, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3bf0:	add	x19, x19, #0x0
    3bf4:	ldp	x3, x4, [x19, #80]
    3bf8:	mov	x2, x22
    3bfc:	mov	x1, x20
    3c00:	mov	w0, #0x9                   	// #9
    3c04:	bl	c8 <_ZL9initBlockjRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    3c08:	ldp	x0, x1, [x19, #96]
    3c0c:	mov	x3, x0
    3c10:	mov	x4, x1
    3c14:	mov	x2, x22
    3c18:	mov	x1, x20
    3c1c:	mov	w0, #0x5                   	// #5
    3c20:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    3c24:	add	x8, sp, #0x40
    3c28:	add	x0, sp, #0x38
    3c2c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3c30:	ldr	x19, [sp, #72]
    3c34:	mov	w0, #0x1                   	// #1
    3c38:	str	w0, [x19, #8]
    3c3c:	str	w0, [x19, #12]
    3c40:	mov	x1, x19
    3c44:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3c48:	ldr	x0, [x0]
    3c4c:	add	x0, x0, #0x10
    3c50:	str	x0, [x1], #32
    3c54:	str	x1, [x19, #16]
    3c58:	mov	w0, #0x20                  	// #32
    3c5c:	str	w0, [x19, #28]
    3c60:	mov	x1, #0x5                   	// #5
    3c64:	str	x1, [x19, #32]
    3c68:	mov	x0, #0x1                   	// #1
    3c6c:	str	x0, [x19, #40]
    3c70:	mov	x0, #0x0                   	// #0
    3c74:	mov	x2, #0x1                   	// #1
    3c78:	bfi	x0, x2, #1, #3
    3c7c:	mov	x2, #0x3                   	// #3
    3c80:	str	x2, [x19, #48]
    3c84:	str	x0, [x19, #56]
    3c88:	mov	x3, #0x6                   	// #6
    3c8c:	mov	x2, #0x0                   	// #0
    3c90:	mov	x0, #0x2                   	// #2
    3c94:	bfi	x2, x0, #1, #3
    3c98:	str	x3, [x19, #64]
    3c9c:	str	x2, [x19, #72]
    3ca0:	mov	x2, #0x0                   	// #0
    3ca4:	bfi	x2, x0, #1, #3
    3ca8:	str	x3, [x19, #80]
    3cac:	str	x2, [x19, #88]
    3cb0:	mov	x2, #0x0                   	// #0
    3cb4:	bfi	x2, x0, #1, #3
    3cb8:	mov	x0, #0x8                   	// #8
    3cbc:	str	x0, [x19, #96]
    3cc0:	str	x2, [x19, #104]
    3cc4:	str	w1, [x19, #24]
    3cc8:	add	x0, x19, #0x10
    3ccc:	str	x0, [sp, #80]
    3cd0:	str	x19, [sp, #88]
    3cd4:	adrp	x0, 0 <__pthread_key_create>
    3cd8:	ldr	x0, [x0]
    3cdc:	cbz	x0, 414c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x57c>
    3ce0:	add	x0, x19, #0x8
    3ce4:	ldaxr	w1, [x0]
    3ce8:	add	w1, w1, #0x1
    3cec:	stlxr	w2, w1, [x0]
    3cf0:	cbnz	w2, 3ce4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x114>
    3cf4:	add	x2, sp, #0x50
    3cf8:	mov	w1, #0x9                   	// #9
    3cfc:	mov	x0, x20
    3d00:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3d04:	mov	w0, w0
    3d08:	str	x0, [x21, #1704]
    3d0c:	ldr	x0, [sp, #88]
    3d10:	cbz	x0, 3d18 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x148>
    3d14:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3d18:	mov	x0, x19
    3d1c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3d20:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3d24:	add	x0, x0, #0x0
    3d28:	ldp	x0, x1, [x0, #112]
    3d2c:	mov	x3, x0
    3d30:	mov	x4, x1
    3d34:	mov	x2, x22
    3d38:	mov	x1, x20
    3d3c:	mov	w0, #0x6                   	// #6
    3d40:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    3d44:	add	x8, sp, #0x40
    3d48:	add	x0, sp, #0x38
    3d4c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3d50:	ldr	x19, [sp, #72]
    3d54:	mov	w0, #0x1                   	// #1
    3d58:	str	w0, [x19, #8]
    3d5c:	str	w0, [x19, #12]
    3d60:	mov	x1, x19
    3d64:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3d68:	ldr	x0, [x0]
    3d6c:	add	x0, x0, #0x10
    3d70:	str	x0, [x1], #32
    3d74:	str	x1, [x19, #16]
    3d78:	mov	w0, #0x20                  	// #32
    3d7c:	str	w0, [x19, #28]
    3d80:	mov	x0, #0x6                   	// #6
    3d84:	str	x0, [x19, #32]
    3d88:	mov	x0, #0x1                   	// #1
    3d8c:	str	x0, [x19, #40]
    3d90:	mov	x0, #0x0                   	// #0
    3d94:	mov	x1, #0x2                   	// #2
    3d98:	bfi	x0, x1, #1, #3
    3d9c:	mov	x1, #0x7                   	// #7
    3da0:	str	x1, [x19, #48]
    3da4:	str	x0, [x19, #56]
    3da8:	mov	x1, #0x20                  	// #32
    3dac:	mov	x0, #0x0                   	// #0
    3db0:	mov	x2, #0x1                   	// #1
    3db4:	bfi	x0, x2, #1, #3
    3db8:	str	x1, [x19, #64]
    3dbc:	str	x0, [x19, #72]
    3dc0:	mov	x0, #0x0                   	// #0
    3dc4:	bfi	x0, x2, #1, #3
    3dc8:	str	x1, [x19, #80]
    3dcc:	str	x0, [x19, #88]
    3dd0:	mov	w0, #0x4                   	// #4
    3dd4:	str	w0, [x19, #24]
    3dd8:	add	x0, x19, #0x10
    3ddc:	str	x0, [sp, #96]
    3de0:	str	x19, [sp, #104]
    3de4:	adrp	x0, 0 <__pthread_key_create>
    3de8:	ldr	x0, [x0]
    3dec:	cbz	x0, 415c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x58c>
    3df0:	add	x0, x19, #0x8
    3df4:	ldaxr	w1, [x0]
    3df8:	add	w1, w1, #0x1
    3dfc:	stlxr	w2, w1, [x0]
    3e00:	cbnz	w2, 3df4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x224>
    3e04:	add	x2, sp, #0x60
    3e08:	mov	w1, #0x9                   	// #9
    3e0c:	mov	x0, x20
    3e10:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3e14:	mov	w0, w0
    3e18:	str	x0, [x21, #1712]
    3e1c:	ldr	x0, [sp, #104]
    3e20:	cbz	x0, 3e28 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x258>
    3e24:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3e28:	mov	x0, x19
    3e2c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3e30:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3e34:	add	x0, x0, #0x0
    3e38:	ldp	x0, x1, [x0, #128]
    3e3c:	mov	x3, x0
    3e40:	mov	x4, x1
    3e44:	mov	x2, x22
    3e48:	mov	x1, x20
    3e4c:	mov	w0, #0x7                   	// #7
    3e50:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    3e54:	add	x8, sp, #0x40
    3e58:	add	x0, sp, #0x38
    3e5c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3e60:	ldr	x19, [sp, #72]
    3e64:	mov	w0, #0x1                   	// #1
    3e68:	str	w0, [x19, #8]
    3e6c:	str	w0, [x19, #12]
    3e70:	mov	x1, x19
    3e74:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3e78:	ldr	x0, [x0]
    3e7c:	add	x0, x0, #0x10
    3e80:	str	x0, [x1], #32
    3e84:	str	x1, [x19, #16]
    3e88:	mov	w0, #0x20                  	// #32
    3e8c:	str	w0, [x19, #28]
    3e90:	mov	x0, #0x7                   	// #7
    3e94:	str	x0, [x19, #32]
    3e98:	mov	x0, #0x1                   	// #1
    3e9c:	str	x0, [x19, #40]
    3ea0:	mov	x1, #0x0                   	// #0
    3ea4:	mov	x0, #0x2                   	// #2
    3ea8:	bfi	x1, x0, #1, #3
    3eac:	mov	x2, #0x8                   	// #8
    3eb0:	str	x2, [x19, #48]
    3eb4:	str	x1, [x19, #56]
    3eb8:	str	w0, [x19, #24]
    3ebc:	add	x0, x19, #0x10
    3ec0:	str	x0, [sp, #112]
    3ec4:	str	x19, [sp, #120]
    3ec8:	adrp	x0, 0 <__pthread_key_create>
    3ecc:	ldr	x0, [x0]
    3ed0:	cbz	x0, 416c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x59c>
    3ed4:	add	x0, x19, x2
    3ed8:	ldaxr	w1, [x0]
    3edc:	add	w1, w1, #0x1
    3ee0:	stlxr	w2, w1, [x0]
    3ee4:	cbnz	w2, 3ed8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x308>
    3ee8:	add	x2, sp, #0x70
    3eec:	mov	w1, #0x9                   	// #9
    3ef0:	mov	x0, x20
    3ef4:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3ef8:	mov	w0, w0
    3efc:	str	x0, [x21, #1720]
    3f00:	ldr	x0, [sp, #120]
    3f04:	cbz	x0, 3f0c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x33c>
    3f08:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3f0c:	mov	x0, x19
    3f10:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3f14:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3f18:	add	x0, x0, #0x0
    3f1c:	ldp	x0, x1, [x0, #144]
    3f20:	mov	x3, x0
    3f24:	mov	x4, x1
    3f28:	mov	x2, x22
    3f2c:	mov	x1, x20
    3f30:	mov	w0, #0x8                   	// #8
    3f34:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    3f38:	add	x8, sp, #0x40
    3f3c:	add	x0, sp, #0x38
    3f40:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3f44:	ldr	x19, [sp, #72]
    3f48:	mov	w0, #0x1                   	// #1
    3f4c:	str	w0, [x19, #8]
    3f50:	str	w0, [x19, #12]
    3f54:	mov	x1, x19
    3f58:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    3f5c:	ldr	x0, [x0]
    3f60:	add	x0, x0, #0x10
    3f64:	str	x0, [x1], #32
    3f68:	str	x1, [x19, #16]
    3f6c:	mov	w0, #0x20                  	// #32
    3f70:	str	w0, [x19, #28]
    3f74:	mov	x0, #0x8                   	// #8
    3f78:	str	x0, [x19, #32]
    3f7c:	mov	x0, #0x1                   	// #1
    3f80:	str	x0, [x19, #40]
    3f84:	mov	x0, #0x7                   	// #7
    3f88:	mov	x2, #0x0                   	// #0
    3f8c:	mov	x1, #0x2                   	// #2
    3f90:	bfi	x2, x1, #1, #3
    3f94:	str	x0, [x19, #48]
    3f98:	str	x2, [x19, #56]
    3f9c:	mov	x2, #0x0                   	// #0
    3fa0:	bfi	x2, x1, #1, #3
    3fa4:	str	x0, [x19, #64]
    3fa8:	str	x2, [x19, #72]
    3fac:	mov	x2, #0x0                   	// #0
    3fb0:	bfi	x2, x1, #1, #3
    3fb4:	str	x0, [x19, #80]
    3fb8:	str	x2, [x19, #88]
    3fbc:	mov	x1, #0x20                  	// #32
    3fc0:	mov	x0, #0x0                   	// #0
    3fc4:	mov	x2, #0x1                   	// #1
    3fc8:	bfi	x0, x2, #1, #3
    3fcc:	str	x1, [x19, #96]
    3fd0:	str	x0, [x19, #104]
    3fd4:	mov	x0, #0x0                   	// #0
    3fd8:	bfi	x0, x2, #1, #3
    3fdc:	str	x1, [x19, #112]
    3fe0:	str	x0, [x19, #120]
    3fe4:	mov	w0, #0x6                   	// #6
    3fe8:	str	w0, [x19, #24]
    3fec:	add	x0, x19, #0x10
    3ff0:	str	x0, [sp, #128]
    3ff4:	str	x19, [sp, #136]
    3ff8:	adrp	x0, 0 <__pthread_key_create>
    3ffc:	ldr	x0, [x0]
    4000:	cbz	x0, 417c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x5ac>
    4004:	add	x0, x19, #0x8
    4008:	ldaxr	w1, [x0]
    400c:	add	w1, w1, #0x1
    4010:	stlxr	w2, w1, [x0]
    4014:	cbnz	w2, 4008 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x438>
    4018:	add	x2, sp, #0x80
    401c:	mov	w1, #0x9                   	// #9
    4020:	mov	x0, x20
    4024:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4028:	mov	w0, w0
    402c:	str	x0, [x21, #1728]
    4030:	ldr	x0, [sp, #136]
    4034:	cbz	x0, 403c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x46c>
    4038:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    403c:	mov	x0, x19
    4040:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4044:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4048:	add	x0, x0, #0x0
    404c:	ldp	x0, x1, [x0, #160]
    4050:	mov	x3, x0
    4054:	mov	x4, x1
    4058:	mov	x2, x22
    405c:	mov	x1, x20
    4060:	mov	w0, #0x9                   	// #9
    4064:	bl	11a8 <_ZL13setRecordNamejRN4llvm15BitstreamWriterERNS_15SmallVectorImplImEENS_9StringRefE>
    4068:	add	x8, sp, #0x40
    406c:	add	x0, sp, #0x38
    4070:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4074:	ldr	x19, [sp, #72]
    4078:	mov	w0, #0x1                   	// #1
    407c:	str	w0, [x19, #8]
    4080:	str	w0, [x19, #12]
    4084:	mov	x1, x19
    4088:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    408c:	ldr	x0, [x0]
    4090:	add	x0, x0, #0x10
    4094:	str	x0, [x1], #32
    4098:	str	x1, [x19, #16]
    409c:	mov	w0, #0x20                  	// #32
    40a0:	str	w0, [x19, #28]
    40a4:	mov	x0, #0x9                   	// #9
    40a8:	str	x0, [x19, #32]
    40ac:	mov	x0, #0x1                   	// #1
    40b0:	str	x0, [x19, #40]
    40b4:	mov	x1, #0x7                   	// #7
    40b8:	mov	x0, #0x0                   	// #0
    40bc:	mov	x2, #0x2                   	// #2
    40c0:	bfi	x0, x2, #1, #3
    40c4:	str	x1, [x19, #48]
    40c8:	str	x0, [x19, #56]
    40cc:	mov	x0, #0x0                   	// #0
    40d0:	bfi	x0, x2, #1, #3
    40d4:	str	x1, [x19, #64]
    40d8:	str	x0, [x19, #72]
    40dc:	mov	w0, #0x3                   	// #3
    40e0:	str	w0, [x19, #24]
    40e4:	add	x0, x19, #0x10
    40e8:	str	x0, [sp, #144]
    40ec:	str	x19, [sp, #152]
    40f0:	adrp	x0, 0 <__pthread_key_create>
    40f4:	ldr	x0, [x0]
    40f8:	cbz	x0, 418c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x5bc>
    40fc:	add	x0, x19, #0x8
    4100:	ldaxr	w1, [x0]
    4104:	add	w1, w1, #0x1
    4108:	stlxr	w2, w1, [x0]
    410c:	cbnz	w2, 4100 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x530>
    4110:	add	x2, sp, #0x90
    4114:	mov	w1, #0x9                   	// #9
    4118:	mov	x0, x20
    411c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4120:	mov	w0, w0
    4124:	str	x0, [x21, #1736]
    4128:	ldr	x0, [sp, #152]
    412c:	cbz	x0, 4134 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x564>
    4130:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4134:	mov	x0, x19
    4138:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    413c:	ldp	x19, x20, [sp, #16]
    4140:	ldp	x21, x22, [sp, #32]
    4144:	ldp	x29, x30, [sp], #160
    4148:	ret
    414c:	ldr	w0, [x19, #8]
    4150:	add	w0, w0, #0x1
    4154:	str	w0, [x19, #8]
    4158:	b	3cf4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x124>
    415c:	ldr	w0, [x19, #8]
    4160:	add	w0, w0, #0x1
    4164:	str	w0, [x19, #8]
    4168:	b	3e04 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x234>
    416c:	ldr	w0, [x19, #8]
    4170:	add	w0, w0, #0x1
    4174:	str	w0, [x19, #8]
    4178:	b	3ee8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x318>
    417c:	ldr	w0, [x19, #8]
    4180:	add	w0, w0, #0x1
    4184:	str	w0, [x19, #8]
    4188:	b	4018 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x448>
    418c:	ldr	w0, [x19, #8]
    4190:	add	w0, w0, #0x1
    4194:	str	w0, [x19, #8]
    4198:	b	4110 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv+0x540>

000000000000419c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv>:
    419c:	stp	x29, x30, [sp, #-96]!
    41a0:	mov	x29, sp
    41a4:	stp	x19, x20, [sp, #16]
    41a8:	stp	x21, x22, [sp, #32]
    41ac:	stp	x23, x24, [sp, #48]
    41b0:	stp	x25, x26, [sp, #64]
    41b4:	str	x27, [sp, #80]
    41b8:	mov	x20, x0
    41bc:	adrp	x19, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    41c0:	add	x19, x19, #0x0
    41c4:	add	x23, x19, #0x4
    41c8:	mov	w24, #0x20                  	// #32
    41cc:	mov	x25, #0x1                   	// #1
    41d0:	b	4248 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0xac>
    41d4:	ldr	x26, [x20, #1568]
    41d8:	ldr	w2, [x26, #8]
    41dc:	ldr	w0, [x26, #12]
    41e0:	sub	x0, x0, x2
    41e4:	cmp	x0, #0x3
    41e8:	b.ls	4274 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0xd8>  // b.plast
    41ec:	ldr	w0, [x26, #8]
    41f0:	ldr	x1, [x26]
    41f4:	str	w21, [x1, x0]
    41f8:	ldr	w0, [x26, #8]
    41fc:	mov	w1, w0
    4200:	add	x1, x1, #0x4
    4204:	ldr	w2, [x26, #12]
    4208:	cmp	x1, x2
    420c:	b.hi	428c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0xf0>  // b.pmore
    4210:	add	w0, w0, #0x4
    4214:	str	w0, [x26, #8]
    4218:	ldr	w0, [x20, #1576]
    421c:	sub	w1, w24, w0
    4220:	lsr	w22, w22, w1
    4224:	cmp	w0, #0x0
    4228:	csel	w22, w22, w0, ne  // ne = any
    422c:	str	w22, [x20, #1580]
    4230:	add	w0, w0, #0x8
    4234:	and	w0, w0, #0x1f
    4238:	str	w0, [x20, #1576]
    423c:	add	x19, x19, #0x1
    4240:	cmp	x19, x23
    4244:	b.eq	42ac <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x110>  // b.none
    4248:	ldrb	w22, [x19]
    424c:	ldr	w0, [x20, #1576]
    4250:	lsl	w21, w22, w0
    4254:	ldr	w2, [x20, #1580]
    4258:	orr	w21, w21, w2
    425c:	str	w21, [x20, #1580]
    4260:	add	w0, w0, #0x8
    4264:	cmp	w0, #0x1f
    4268:	b.hi	41d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x38>  // b.pmore
    426c:	str	w0, [x20, #1576]
    4270:	b	423c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0xa0>
    4274:	mov	x3, x25
    4278:	add	x2, x2, #0x4
    427c:	add	x1, x26, #0x10
    4280:	mov	x0, x26
    4284:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4288:	b	41ec <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x50>
    428c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4290:	add	x3, x3, #0x0
    4294:	mov	w2, #0x43                  	// #67
    4298:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    429c:	add	x1, x1, #0x0
    42a0:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    42a4:	add	x0, x0, #0x0
    42a8:	bl	0 <__assert_fail>
    42ac:	add	x19, x20, #0x620
    42b0:	mov	w2, #0x2                   	// #2
    42b4:	mov	w1, #0x0                   	// #0
    42b8:	mov	x0, x19
    42bc:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    42c0:	mov	w0, #0xffffffff            	// #-1
    42c4:	str	w0, [x20, #1588]
    42c8:	ldr	x27, [x20, #1640]
    42cc:	ldr	x25, [x20, #1648]
    42d0:	cmp	x27, x25
    42d4:	b.eq	43b4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x218>  // b.none
    42d8:	mov	x21, x27
    42dc:	adrp	x24, 0 <__pthread_key_create>
    42e0:	ldr	x26, [x24]
    42e4:	mov	x24, x26
    42e8:	b	439c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x200>
    42ec:	add	x1, x19, #0x8
    42f0:	ldaxr	w0, [x1]
    42f4:	sub	w2, w0, #0x1
    42f8:	stlxr	w3, w2, [x1]
    42fc:	cbnz	w3, 42f0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x154>
    4300:	cmp	w0, #0x1
    4304:	b.eq	4330 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x194>  // b.none
    4308:	add	x22, x22, #0x10
    430c:	cmp	x23, x22
    4310:	b.eq	4384 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x1e8>  // b.none
    4314:	ldr	x19, [x22, #8]
    4318:	cbz	x19, 4308 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x16c>
    431c:	cbnz	x26, 42ec <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x150>
    4320:	ldr	w0, [x19, #8]
    4324:	sub	w1, w0, #0x1
    4328:	str	w1, [x19, #8]
    432c:	b	4300 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x164>
    4330:	ldr	x0, [x19]
    4334:	ldr	x1, [x0, #16]
    4338:	mov	x0, x19
    433c:	blr	x1
    4340:	cbz	x24, 4374 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x1d8>
    4344:	add	x1, x19, #0xc
    4348:	ldaxr	w0, [x1]
    434c:	sub	w2, w0, #0x1
    4350:	stlxr	w3, w2, [x1]
    4354:	cbnz	w3, 4348 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x1ac>
    4358:	cmp	w0, #0x1
    435c:	b.ne	4308 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x16c>  // b.any
    4360:	ldr	x0, [x19]
    4364:	ldr	x1, [x0, #24]
    4368:	mov	x0, x19
    436c:	blr	x1
    4370:	b	4308 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x16c>
    4374:	ldr	w0, [x19, #12]
    4378:	sub	w1, w0, #0x1
    437c:	str	w1, [x19, #12]
    4380:	b	4358 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x1bc>
    4384:	ldr	x0, [x21, #8]
    4388:	cbz	x0, 4390 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x1f4>
    438c:	bl	0 <_ZdlPv>
    4390:	add	x21, x21, #0x20
    4394:	cmp	x25, x21
    4398:	b.eq	43b0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x214>  // b.none
    439c:	ldr	x22, [x21, #8]
    43a0:	ldr	x23, [x21, #16]
    43a4:	cmp	x22, x23
    43a8:	b.ne	4314 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x178>  // b.any
    43ac:	b	4384 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x1e8>
    43b0:	str	x27, [x20, #1648]
    43b4:	mov	x0, x20
    43b8:	bl	3970 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper18setupMetaBlockInfoEv>
    43bc:	ldr	w0, [x20, #1664]
    43c0:	cmp	w0, #0x1
    43c4:	b.eq	44a0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x304>  // b.none
    43c8:	cmp	w0, #0x2
    43cc:	b.eq	44b4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x318>  // b.none
    43d0:	cbz	w0, 448c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x2f0>
    43d4:	ldr	x21, [x20, #1624]
    43d8:	ldr	x0, [x20, #1616]
    43dc:	cmp	x0, x21
    43e0:	b.eq	44d0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x334>  // b.none
    43e4:	ldr	w19, [x20, #1584]
    43e8:	sub	w0, w19, #0x1
    43ec:	cmp	w0, #0x1f
    43f0:	b.hi	44f0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x354>  // b.pmore
    43f4:	ldr	w0, [x20, #1576]
    43f8:	add	w0, w19, w0
    43fc:	cmp	w0, #0x1f
    4400:	b.hi	4510 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x374>  // b.pmore
    4404:	str	w0, [x20, #1576]
    4408:	ldr	w0, [x20, #1576]
    440c:	cbnz	w0, 45a8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x40c>
    4410:	ldr	x2, [x20, #1568]
    4414:	ldr	w0, [x2, #8]
    4418:	mov	w3, w0
    441c:	tst	x0, #0x3
    4420:	b.ne	4634 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x498>  // b.any
    4424:	ldur	x0, [x21, #-32]
    4428:	mvn	x1, x0
    442c:	add	x1, x1, x3, lsr #2
    4430:	lsl	w0, w0, #2
    4434:	cmp	x0, x3
    4438:	b.cs	4654 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x4b8>  // b.hs, b.nlast
    443c:	ldr	x2, [x2]
    4440:	ldr	w3, [x2, x0]
    4444:	cbnz	w3, 4674 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x4d8>
    4448:	str	w1, [x2, x0]
    444c:	ldur	w0, [x21, #-40]
    4450:	str	w0, [x20, #1584]
    4454:	sub	x1, x21, #0x18
    4458:	add	x0, x20, #0x638
    445c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4460:	ldr	x23, [x20, #1624]
    4464:	sub	x0, x23, #0x28
    4468:	str	x0, [x20, #1624]
    446c:	ldur	x20, [x23, #-24]
    4470:	ldur	x21, [x23, #-16]
    4474:	cmp	x20, x21
    4478:	b.eq	472c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x590>  // b.none
    447c:	adrp	x24, 0 <__pthread_key_create>
    4480:	ldr	x22, [x24]
    4484:	mov	x24, x22
    4488:	b	46bc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x520>
    448c:	mov	x0, x20
    4490:	bl	3738 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv>
    4494:	mov	x0, x20
    4498:	bl	3500 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper21setupMetaExternalFileEv>
    449c:	b	43d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x238>
    44a0:	mov	x0, x20
    44a4:	bl	32c8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv>
    44a8:	mov	x0, x20
    44ac:	bl	3bd0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv>
    44b0:	b	43d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x238>
    44b4:	mov	x0, x20
    44b8:	bl	32c8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper22setupMetaRemarkVersionEv>
    44bc:	mov	x0, x20
    44c0:	bl	3738 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15setupMetaStrTabEv>
    44c4:	mov	x0, x20
    44c8:	bl	3bd0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper20setupRemarkBlockInfoEv>
    44cc:	b	43d4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x238>
    44d0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    44d4:	add	x3, x3, #0x0
    44d8:	mov	w2, #0xe5                  	// #229
    44dc:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    44e0:	add	x1, x1, #0x0
    44e4:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    44e8:	add	x0, x0, #0x0
    44ec:	bl	0 <__assert_fail>
    44f0:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    44f4:	add	x3, x3, #0x0
    44f8:	mov	w2, #0x78                  	// #120
    44fc:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4500:	add	x1, x1, #0x0
    4504:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4508:	add	x0, x0, #0x0
    450c:	bl	0 <__assert_fail>
    4510:	ldr	w23, [x20, #1580]
    4514:	ldr	x22, [x20, #1568]
    4518:	ldr	w2, [x22, #8]
    451c:	ldr	w0, [x22, #12]
    4520:	sub	x0, x0, x2
    4524:	cmp	x0, #0x3
    4528:	b.ls	4570 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x3d4>  // b.plast
    452c:	ldr	w0, [x22, #8]
    4530:	ldr	x1, [x22]
    4534:	str	w23, [x1, x0]
    4538:	ldr	w0, [x22, #8]
    453c:	mov	w1, w0
    4540:	add	x1, x1, #0x4
    4544:	ldr	w2, [x22, #12]
    4548:	cmp	x1, x2
    454c:	b.hi	4588 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x3ec>  // b.pmore
    4550:	add	w0, w0, #0x4
    4554:	str	w0, [x22, #8]
    4558:	ldr	w1, [x20, #1576]
    455c:	str	wzr, [x20, #1580]
    4560:	add	w19, w19, w1
    4564:	and	w19, w19, #0x1f
    4568:	str	w19, [x20, #1576]
    456c:	b	4408 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x26c>
    4570:	mov	x3, #0x1                   	// #1
    4574:	add	x2, x2, #0x4
    4578:	add	x1, x22, #0x10
    457c:	mov	x0, x22
    4580:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4584:	b	452c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x390>
    4588:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    458c:	add	x3, x3, #0x0
    4590:	mov	w2, #0x43                  	// #67
    4594:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4598:	add	x1, x1, #0x0
    459c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    45a0:	add	x0, x0, #0x0
    45a4:	bl	0 <__assert_fail>
    45a8:	ldr	w22, [x20, #1580]
    45ac:	ldr	x19, [x20, #1568]
    45b0:	ldr	w2, [x19, #8]
    45b4:	ldr	w0, [x19, #12]
    45b8:	sub	x0, x0, x2
    45bc:	cmp	x0, #0x3
    45c0:	b.ls	45fc <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x460>  // b.plast
    45c4:	ldr	w0, [x19, #8]
    45c8:	ldr	x1, [x19]
    45cc:	str	w22, [x1, x0]
    45d0:	ldr	w0, [x19, #8]
    45d4:	mov	w1, w0
    45d8:	add	x1, x1, #0x4
    45dc:	ldr	w2, [x19, #12]
    45e0:	cmp	x1, x2
    45e4:	b.hi	4614 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x478>  // b.pmore
    45e8:	add	w0, w0, #0x4
    45ec:	str	w0, [x19, #8]
    45f0:	str	wzr, [x20, #1576]
    45f4:	str	wzr, [x20, #1580]
    45f8:	b	4410 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x274>
    45fc:	mov	x3, #0x1                   	// #1
    4600:	add	x2, x2, #0x4
    4604:	add	x1, x19, #0x10
    4608:	mov	x0, x19
    460c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4610:	b	45c4 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x428>
    4614:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4618:	add	x3, x3, #0x0
    461c:	mov	w2, #0x43                  	// #67
    4620:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4624:	add	x1, x1, #0x0
    4628:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    462c:	add	x0, x0, #0x0
    4630:	bl	0 <__assert_fail>
    4634:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4638:	add	x3, x3, #0x0
    463c:	mov	w2, #0x4f                  	// #79
    4640:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4644:	add	x1, x1, #0x0
    4648:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    464c:	add	x0, x0, #0x0
    4650:	bl	0 <__assert_fail>
    4654:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4658:	add	x3, x3, #0x0
    465c:	mov	w2, #0x95                  	// #149
    4660:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4664:	add	x1, x1, #0x0
    4668:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    466c:	add	x0, x0, #0x0
    4670:	bl	0 <__assert_fail>
    4674:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4678:	add	x3, x3, #0x0
    467c:	mov	w2, #0x6b                  	// #107
    4680:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4684:	add	x1, x1, #0x0
    4688:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    468c:	add	x0, x0, #0x0
    4690:	bl	0 <__assert_fail>
    4694:	add	x1, x19, #0x8
    4698:	ldaxr	w0, [x1]
    469c:	sub	w2, w0, #0x1
    46a0:	stlxr	w3, w2, [x1]
    46a4:	cbnz	w3, 4698 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x4fc>
    46a8:	cmp	w0, #0x1
    46ac:	b.eq	46d8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x53c>  // b.none
    46b0:	add	x20, x20, #0x10
    46b4:	cmp	x21, x20
    46b8:	b.eq	472c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x590>  // b.none
    46bc:	ldr	x19, [x20, #8]
    46c0:	cbz	x19, 46b0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x514>
    46c4:	cbnz	x22, 4694 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x4f8>
    46c8:	ldr	w0, [x19, #8]
    46cc:	sub	w1, w0, #0x1
    46d0:	str	w1, [x19, #8]
    46d4:	b	46a8 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x50c>
    46d8:	ldr	x0, [x19]
    46dc:	ldr	x1, [x0, #16]
    46e0:	mov	x0, x19
    46e4:	blr	x1
    46e8:	cbz	x24, 471c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x580>
    46ec:	add	x1, x19, #0xc
    46f0:	ldaxr	w0, [x1]
    46f4:	sub	w2, w0, #0x1
    46f8:	stlxr	w3, w2, [x1]
    46fc:	cbnz	w3, 46f0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x554>
    4700:	cmp	w0, #0x1
    4704:	b.ne	46b0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x514>  // b.any
    4708:	ldr	x0, [x19]
    470c:	ldr	x1, [x0, #24]
    4710:	mov	x0, x19
    4714:	blr	x1
    4718:	b	46b0 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x514>
    471c:	ldr	w0, [x19, #12]
    4720:	sub	w1, w0, #0x1
    4724:	str	w1, [x19, #12]
    4728:	b	4700 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x564>
    472c:	ldur	x0, [x23, #-24]
    4730:	cbz	x0, 4738 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv+0x59c>
    4734:	bl	0 <_ZdlPv>
    4738:	ldp	x19, x20, [sp, #16]
    473c:	ldp	x21, x22, [sp, #32]
    4740:	ldp	x23, x24, [sp, #48]
    4744:	ldp	x25, x26, [sp, #64]
    4748:	ldr	x27, [sp, #80]
    474c:	ldp	x29, x30, [sp], #96
    4750:	ret

0000000000004754 <_ZN4llvm7remarks23BitstreamMetaSerializer4emitEv>:
    4754:	stp	x29, x30, [sp, #-64]!
    4758:	mov	x29, sp
    475c:	str	x19, [sp, #16]
    4760:	mov	x19, x0
    4764:	ldr	x0, [x0, #1768]
    4768:	bl	419c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper14setupBlockInfoEv>
    476c:	add	x0, x19, #0x700
    4770:	ldp	x2, x3, [x0]
    4774:	stp	x2, x3, [sp, #32]
    4778:	ldr	x0, [x19, #1808]
    477c:	str	x0, [sp, #48]
    4780:	add	x0, x19, #0x600
    4784:	add	x6, sp, #0x20
    4788:	ldp	x4, x5, [x0, #240]
    478c:	mov	x2, #0x0                   	// #0
    4790:	mov	x3, #0x1                   	// #1
    4794:	mov	x1, #0x0                   	// #0
    4798:	ldr	x0, [x19, #1768]
    479c:	bl	212c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13emitMetaBlockEmNS_8OptionalImEENS2_IPKNS0_11StringTableEEENS2_INS_9StringRefEEE>
    47a0:	ldr	x1, [x19, #8]
    47a4:	ldr	x0, [x19, #1768]
    47a8:	bl	1c14 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13flushToStreamERNS_11raw_ostreamE>
    47ac:	ldr	x19, [sp, #16]
    47b0:	ldp	x29, x30, [sp], #64
    47b4:	ret

00000000000047b8 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE>:
    47b8:	sub	sp, sp, #0x780
    47bc:	stp	x29, x30, [sp]
    47c0:	mov	x29, sp
    47c4:	stp	x19, x20, [sp, #16]
    47c8:	stp	x23, x24, [sp, #48]
    47cc:	mov	x20, x0
    47d0:	mov	x23, x1
    47d4:	ldrb	w0, [x0, #176]
    47d8:	cbnz	w0, 4848 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x90>
    47dc:	ldr	x4, [x20, #16]
    47e0:	add	x3, x20, #0xb8
    47e4:	ldr	w2, [x20, #1848]
    47e8:	mov	x1, #0x0                   	// #0
    47ec:	cmp	w2, #0x2
    47f0:	b.eq	4884 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0xcc>  // b.none
    47f4:	str	x4, [sp, #112]
    47f8:	adrp	x19, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    47fc:	ldr	x19, [x19]
    4800:	add	x19, x19, #0x10
    4804:	str	x19, [sp, #104]
    4808:	strb	wzr, [sp, #120]
    480c:	strb	wzr, [sp, #1864]
    4810:	str	x3, [sp, #1872]
    4814:	str	x1, [sp, #1880]
    4818:	strb	w0, [sp, #1888]
    481c:	strb	wzr, [sp, #1896]
    4820:	strb	wzr, [sp, #1912]
    4824:	add	x0, sp, #0x68
    4828:	bl	4754 <_ZN4llvm7remarks23BitstreamMetaSerializer4emitEv>
    482c:	mov	w0, #0x1                   	// #1
    4830:	strb	w0, [x20, #176]
    4834:	str	x19, [sp, #104]
    4838:	ldrb	w0, [sp, #1864]
    483c:	cbnz	w0, 48c4 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x10c>
    4840:	ldrb	w0, [x20, #176]
    4844:	cbz	w0, 4c24 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x46c>
    4848:	add	x19, x20, #0xb8
    484c:	ldrb	w0, [x20, #168]
    4850:	cbz	w0, 4c50 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x498>
    4854:	add	x2, x20, #0x20
    4858:	mov	x1, x23
    485c:	mov	x0, x19
    4860:	bl	2750 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper15emitRemarkBlockERKNS0_6RemarkERNS0_11StringTableE>
    4864:	ldr	x1, [x20, #16]
    4868:	mov	x0, x19
    486c:	bl	1c14 <_ZN4llvm7remarks31BitstreamRemarkSerializerHelper13flushToStreamERNS_11raw_ostreamE>
    4870:	ldp	x19, x20, [sp, #16]
    4874:	ldp	x23, x24, [sp, #48]
    4878:	ldp	x29, x30, [sp]
    487c:	add	sp, sp, #0x780
    4880:	ret
    4884:	ldrb	w0, [x20, #168]
    4888:	cbz	w0, 4898 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0xe0>
    488c:	add	x1, x20, #0x20
    4890:	mov	w0, #0x1                   	// #1
    4894:	b	47f4 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x3c>
    4898:	stp	x21, x22, [sp, #32]
    489c:	stp	x25, x26, [sp, #64]
    48a0:	str	x27, [sp, #80]
    48a4:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    48a8:	add	x3, x3, #0x0
    48ac:	mov	w2, #0x49                  	// #73
    48b0:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    48b4:	add	x1, x1, #0x0
    48b8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    48bc:	add	x0, x0, #0x0
    48c0:	bl	0 <__assert_fail>
    48c4:	stp	x21, x22, [sp, #32]
    48c8:	stp	x25, x26, [sp, #64]
    48cc:	str	x27, [sp, #80]
    48d0:	ldr	w0, [sp, #1696]
    48d4:	cbnz	w0, 4918 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x160>
    48d8:	ldr	x1, [sp, #1736]
    48dc:	ldr	x0, [sp, #1744]
    48e0:	cmp	x1, x0
    48e4:	b.ne	4938 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x180>  // b.any
    48e8:	ldr	x1, [sp, #1712]
    48ec:	ldr	x0, [sp, #1720]
    48f0:	cmp	x1, x0
    48f4:	b.ne	4938 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x180>  // b.any
    48f8:	ldr	x21, [sp, #1760]
    48fc:	ldr	x26, [sp, #1768]
    4900:	cmp	x21, x26
    4904:	b.eq	4a1c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x264>  // b.none
    4908:	adrp	x25, 0 <__pthread_key_create>
    490c:	ldr	x27, [x25]
    4910:	mov	x25, x27
    4914:	b	4a08 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x250>
    4918:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    491c:	add	x3, x3, #0x0
    4920:	mov	w2, #0x58                  	// #88
    4924:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4928:	add	x1, x1, #0x0
    492c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4930:	add	x0, x0, #0x0
    4934:	bl	0 <__assert_fail>
    4938:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    493c:	add	x3, x3, #0x0
    4940:	mov	w2, #0x59                  	// #89
    4944:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4948:	add	x1, x1, #0x0
    494c:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4950:	add	x0, x0, #0x0
    4954:	bl	0 <__assert_fail>
    4958:	add	x1, x19, #0x8
    495c:	ldaxr	w0, [x1]
    4960:	sub	w2, w0, #0x1
    4964:	stlxr	w3, w2, [x1]
    4968:	cbnz	w3, 495c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1a4>
    496c:	cmp	w0, #0x1
    4970:	b.eq	499c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1e4>  // b.none
    4974:	add	x22, x22, #0x10
    4978:	cmp	x24, x22
    497c:	b.eq	49f0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x238>  // b.none
    4980:	ldr	x19, [x22, #8]
    4984:	cbz	x19, 4974 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1bc>
    4988:	cbnz	x27, 4958 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1a0>
    498c:	ldr	w0, [x19, #8]
    4990:	sub	w1, w0, #0x1
    4994:	str	w1, [x19, #8]
    4998:	b	496c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1b4>
    499c:	ldr	x0, [x19]
    49a0:	ldr	x1, [x0, #16]
    49a4:	mov	x0, x19
    49a8:	blr	x1
    49ac:	cbz	x25, 49e0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x228>
    49b0:	add	x1, x19, #0xc
    49b4:	ldaxr	w0, [x1]
    49b8:	sub	w2, w0, #0x1
    49bc:	stlxr	w3, w2, [x1]
    49c0:	cbnz	w3, 49b4 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1fc>
    49c4:	cmp	w0, #0x1
    49c8:	b.ne	4974 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1bc>  // b.any
    49cc:	ldr	x0, [x19]
    49d0:	ldr	x1, [x0, #24]
    49d4:	mov	x0, x19
    49d8:	blr	x1
    49dc:	b	4974 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1bc>
    49e0:	ldr	w0, [x19, #12]
    49e4:	sub	w1, w0, #0x1
    49e8:	str	w1, [x19, #12]
    49ec:	b	49c4 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x20c>
    49f0:	ldr	x0, [x21, #8]
    49f4:	cbz	x0, 49fc <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x244>
    49f8:	bl	0 <_ZdlPv>
    49fc:	add	x21, x21, #0x20
    4a00:	cmp	x26, x21
    4a04:	b.eq	4a1c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x264>  // b.none
    4a08:	ldr	x22, [x21, #8]
    4a0c:	ldr	x24, [x21, #16]
    4a10:	cmp	x22, x24
    4a14:	b.ne	4980 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x1c8>  // b.any
    4a18:	b	49f0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x238>
    4a1c:	ldr	x0, [sp, #1760]
    4a20:	cbz	x0, 4a28 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x270>
    4a24:	bl	0 <_ZdlPv>
    4a28:	ldr	x21, [sp, #1736]
    4a2c:	ldr	x26, [sp, #1744]
    4a30:	cmp	x21, x26
    4a34:	b.eq	4b0c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x354>  // b.none
    4a38:	adrp	x25, 0 <__pthread_key_create>
    4a3c:	ldr	x27, [x25]
    4a40:	mov	x25, x27
    4a44:	b	4af8 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x340>
    4a48:	add	x1, x19, #0x8
    4a4c:	ldaxr	w0, [x1]
    4a50:	sub	w2, w0, #0x1
    4a54:	stlxr	w3, w2, [x1]
    4a58:	cbnz	w3, 4a4c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x294>
    4a5c:	cmp	w0, #0x1
    4a60:	b.eq	4a8c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2d4>  // b.none
    4a64:	add	x22, x22, #0x10
    4a68:	cmp	x24, x22
    4a6c:	b.eq	4ae0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x328>  // b.none
    4a70:	ldr	x19, [x22, #8]
    4a74:	cbz	x19, 4a64 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2ac>
    4a78:	cbnz	x27, 4a48 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x290>
    4a7c:	ldr	w0, [x19, #8]
    4a80:	sub	w1, w0, #0x1
    4a84:	str	w1, [x19, #8]
    4a88:	b	4a5c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2a4>
    4a8c:	ldr	x0, [x19]
    4a90:	ldr	x1, [x0, #16]
    4a94:	mov	x0, x19
    4a98:	blr	x1
    4a9c:	cbz	x25, 4ad0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x318>
    4aa0:	add	x1, x19, #0xc
    4aa4:	ldaxr	w0, [x1]
    4aa8:	sub	w2, w0, #0x1
    4aac:	stlxr	w3, w2, [x1]
    4ab0:	cbnz	w3, 4aa4 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2ec>
    4ab4:	cmp	w0, #0x1
    4ab8:	b.ne	4a64 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2ac>  // b.any
    4abc:	ldr	x0, [x19]
    4ac0:	ldr	x1, [x0, #24]
    4ac4:	mov	x0, x19
    4ac8:	blr	x1
    4acc:	b	4a64 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2ac>
    4ad0:	ldr	w0, [x19, #12]
    4ad4:	sub	w1, w0, #0x1
    4ad8:	str	w1, [x19, #12]
    4adc:	b	4ab4 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2fc>
    4ae0:	ldr	x0, [x21, #16]
    4ae4:	cbz	x0, 4aec <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x334>
    4ae8:	bl	0 <_ZdlPv>
    4aec:	add	x21, x21, #0x28
    4af0:	cmp	x26, x21
    4af4:	b.eq	4b0c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x354>  // b.none
    4af8:	ldr	x22, [x21, #16]
    4afc:	ldr	x24, [x21, #24]
    4b00:	cmp	x22, x24
    4b04:	b.ne	4a70 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x2b8>  // b.any
    4b08:	b	4ae0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x328>
    4b0c:	ldr	x0, [sp, #1736]
    4b10:	cbz	x0, 4b18 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x360>
    4b14:	bl	0 <_ZdlPv>
    4b18:	ldr	x19, [sp, #1712]
    4b1c:	ldr	x22, [sp, #1720]
    4b20:	cmp	x19, x22
    4b24:	b.eq	4bd0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x418>  // b.none
    4b28:	adrp	x25, 0 <__pthread_key_create>
    4b2c:	ldr	x24, [x25]
    4b30:	mov	x25, x24
    4b34:	b	4b60 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x3a8>
    4b38:	add	x1, x21, #0x8
    4b3c:	ldaxr	w0, [x1]
    4b40:	sub	w2, w0, #0x1
    4b44:	stlxr	w3, w2, [x1]
    4b48:	cbnz	w3, 4b3c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x384>
    4b4c:	cmp	w0, #0x1
    4b50:	b.eq	4b7c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x3c4>  // b.none
    4b54:	add	x19, x19, #0x10
    4b58:	cmp	x22, x19
    4b5c:	b.eq	4bd0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x418>  // b.none
    4b60:	ldr	x21, [x19, #8]
    4b64:	cbz	x21, 4b54 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x39c>
    4b68:	cbnz	x24, 4b38 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x380>
    4b6c:	ldr	w0, [x21, #8]
    4b70:	sub	w1, w0, #0x1
    4b74:	str	w1, [x21, #8]
    4b78:	b	4b4c <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x394>
    4b7c:	ldr	x0, [x21]
    4b80:	ldr	x1, [x0, #16]
    4b84:	mov	x0, x21
    4b88:	blr	x1
    4b8c:	cbz	x25, 4bc0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x408>
    4b90:	add	x1, x21, #0xc
    4b94:	ldaxr	w0, [x1]
    4b98:	sub	w2, w0, #0x1
    4b9c:	stlxr	w3, w2, [x1]
    4ba0:	cbnz	w3, 4b94 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x3dc>
    4ba4:	cmp	w0, #0x1
    4ba8:	b.ne	4b54 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x39c>  // b.any
    4bac:	ldr	x0, [x21]
    4bb0:	ldr	x1, [x0, #24]
    4bb4:	mov	x0, x21
    4bb8:	blr	x1
    4bbc:	b	4b54 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x39c>
    4bc0:	ldr	w0, [x21, #12]
    4bc4:	sub	w1, w0, #0x1
    4bc8:	str	w1, [x21, #12]
    4bcc:	b	4ba4 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x3ec>
    4bd0:	ldr	x0, [sp, #1712]
    4bd4:	cbz	x0, 4bdc <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x424>
    4bd8:	bl	0 <_ZdlPv>
    4bdc:	ldr	x0, [sp, #1160]
    4be0:	add	x1, sp, #0x498
    4be4:	cmp	x0, x1
    4be8:	b.eq	4bf0 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x438>  // b.none
    4bec:	bl	0 <free>
    4bf0:	ldr	x0, [sp, #120]
    4bf4:	add	x1, sp, #0x88
    4bf8:	cmp	x0, x1
    4bfc:	b.eq	4c14 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x45c>  // b.none
    4c00:	bl	0 <free>
    4c04:	ldp	x21, x22, [sp, #32]
    4c08:	ldp	x25, x26, [sp, #64]
    4c0c:	ldr	x27, [sp, #80]
    4c10:	b	4840 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x88>
    4c14:	ldp	x21, x22, [sp, #32]
    4c18:	ldp	x25, x26, [sp, #64]
    4c1c:	ldr	x27, [sp, #80]
    4c20:	b	4840 <_ZN4llvm7remarks25BitstreamRemarkSerializer4emitERKNS0_6RemarkE+0x88>
    4c24:	stp	x21, x22, [sp, #32]
    4c28:	stp	x25, x26, [sp, #64]
    4c2c:	str	x27, [sp, #80]
    4c30:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4c34:	add	x3, x3, #0x0
    4c38:	mov	w2, #0x169                 	// #361
    4c3c:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4c40:	add	x1, x1, #0x0
    4c44:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4c48:	add	x0, x0, #0x0
    4c4c:	bl	0 <__assert_fail>
    4c50:	stp	x21, x22, [sp, #32]
    4c54:	stp	x25, x26, [sp, #64]
    4c58:	str	x27, [sp, #80]
    4c5c:	adrp	x3, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4c60:	add	x3, x3, #0x0
    4c64:	mov	w2, #0x49                  	// #73
    4c68:	adrp	x1, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4c6c:	add	x1, x1, #0x0
    4c70:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4c74:	add	x0, x0, #0x0
    4c78:	bl	0 <__assert_fail>

0000000000004c7c <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE>:
    4c7c:	stp	x29, x30, [sp, #-288]!
    4c80:	mov	x29, sp
    4c84:	stp	x19, x20, [sp, #16]
    4c88:	mov	x19, x0
    4c8c:	mov	x20, x3
    4c90:	mov	w0, #0x3                   	// #3
    4c94:	str	w0, [x19, #8]
    4c98:	str	x1, [x19, #16]
    4c9c:	str	w2, [x19, #24]
    4ca0:	strb	wzr, [x19, #32]
    4ca4:	strb	wzr, [x19, #168]
    4ca8:	adrp	x0, 0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4cac:	ldr	x0, [x0]
    4cb0:	add	x0, x0, #0x10
    4cb4:	str	x0, [x19]
    4cb8:	strb	wzr, [x19, #176]
    4cbc:	cmp	w2, #0x0
    4cc0:	cset	w1, ne  // ne = any
    4cc4:	add	w1, w1, #0x1
    4cc8:	add	x0, x19, #0xb8
    4ccc:	bl	1a7c <_ZN4llvm7remarks31BitstreamRemarkSerializerHelperC1ENS0_28BitstreamRemarkContainerTypeE>
    4cd0:	ldrb	w0, [x19, #168]
    4cd4:	cbz	w0, 5184 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x508>
    4cd8:	stp	x21, x22, [sp, #32]
    4cdc:	ldr	x0, [x20]
    4ce0:	str	x0, [sp, #160]
    4ce4:	ldr	w0, [x20, #8]
    4ce8:	str	w0, [sp, #168]
    4cec:	ldr	w0, [x20, #12]
    4cf0:	str	w0, [sp, #172]
    4cf4:	ldr	w0, [x20, #16]
    4cf8:	str	w0, [sp, #176]
    4cfc:	ldr	w0, [x20, #20]
    4d00:	str	w0, [sp, #180]
    4d04:	str	xzr, [x20]
    4d08:	str	wzr, [x20, #8]
    4d0c:	str	wzr, [x20, #12]
    4d10:	str	wzr, [x20, #16]
    4d14:	ldr	x0, [x20, #24]
    4d18:	str	x0, [sp, #184]
    4d1c:	ldr	x0, [x20, #32]
    4d20:	str	x0, [sp, #192]
    4d24:	add	x0, sp, #0xd8
    4d28:	str	x0, [sp, #200]
    4d2c:	str	wzr, [sp, #208]
    4d30:	mov	w0, #0x4                   	// #4
    4d34:	str	w0, [sp, #212]
    4d38:	ldr	w0, [x20, #48]
    4d3c:	cbnz	w0, 5144 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x4c8>
    4d40:	add	x0, sp, #0x108
    4d44:	str	x0, [sp, #248]
    4d48:	str	wzr, [sp, #256]
    4d4c:	str	wzr, [sp, #260]
    4d50:	ldr	w0, [x20, #96]
    4d54:	cbnz	w0, 5154 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x4d8>
    4d58:	ldr	x1, [x20, #104]
    4d5c:	str	x1, [sp, #264]
    4d60:	ldr	x1, [x20, #112]
    4d64:	str	x1, [sp, #272]
    4d68:	str	xzr, [x20, #32]
    4d6c:	str	xzr, [x20, #24]
    4d70:	str	xzr, [x20, #104]
    4d74:	str	wzr, [x20, #48]
    4d78:	ldr	x1, [x20, #88]
    4d7c:	ldr	w0, [x20, #96]
    4d80:	add	x0, x1, x0, lsl #4
    4d84:	cmp	x1, x0
    4d88:	b.eq	4d98 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x11c>  // b.none
    4d8c:	sub	x0, x0, #0x10
    4d90:	cmp	x1, x0
    4d94:	b.ne	4d8c <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x110>  // b.any
    4d98:	str	wzr, [x20, #96]
    4d9c:	ldr	x0, [x19, #32]
    4da0:	ldr	x1, [sp, #160]
    4da4:	str	x1, [x19, #32]
    4da8:	str	x0, [sp, #160]
    4dac:	ldr	w0, [x19, #40]
    4db0:	ldr	w1, [sp, #168]
    4db4:	str	w1, [x19, #40]
    4db8:	str	w0, [sp, #168]
    4dbc:	ldr	w0, [x19, #44]
    4dc0:	ldr	w1, [sp, #172]
    4dc4:	str	w1, [x19, #44]
    4dc8:	str	w0, [sp, #172]
    4dcc:	ldr	w0, [x19, #48]
    4dd0:	ldr	w1, [sp, #176]
    4dd4:	str	w1, [x19, #48]
    4dd8:	str	w0, [sp, #176]
    4ddc:	ldr	x0, [x19, #56]
    4de0:	str	x0, [sp, #56]
    4de4:	ldr	x0, [x19, #64]
    4de8:	str	x0, [sp, #64]
    4dec:	add	x0, sp, #0x58
    4df0:	str	x0, [sp, #72]
    4df4:	str	wzr, [sp, #80]
    4df8:	mov	w0, #0x4                   	// #4
    4dfc:	str	w0, [sp, #84]
    4e00:	ldr	w0, [x19, #80]
    4e04:	cbnz	w0, 5164 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x4e8>
    4e08:	add	x0, sp, #0x88
    4e0c:	str	x0, [sp, #120]
    4e10:	str	wzr, [sp, #128]
    4e14:	str	wzr, [sp, #132]
    4e18:	ldr	w0, [x19, #128]
    4e1c:	cbnz	w0, 5174 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x4f8>
    4e20:	ldr	x1, [x19, #136]
    4e24:	str	x1, [sp, #136]
    4e28:	ldr	x1, [x19, #144]
    4e2c:	str	x1, [sp, #144]
    4e30:	str	xzr, [x19, #64]
    4e34:	str	xzr, [x19, #56]
    4e38:	str	xzr, [x19, #136]
    4e3c:	str	wzr, [x19, #80]
    4e40:	ldr	x1, [x19, #120]
    4e44:	ldr	w0, [x19, #128]
    4e48:	add	x0, x1, x0, lsl #4
    4e4c:	cmp	x1, x0
    4e50:	b.eq	4e60 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x1e4>  // b.none
    4e54:	sub	x0, x0, #0x10
    4e58:	cmp	x1, x0
    4e5c:	b.ne	4e54 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x1d8>  // b.any
    4e60:	str	wzr, [x19, #128]
    4e64:	ldr	x21, [x19, #72]
    4e68:	ldr	w22, [x19, #80]
    4e6c:	add	x22, x21, x22, lsl #3
    4e70:	cmp	x21, x22
    4e74:	b.eq	4e88 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x20c>  // b.none
    4e78:	ldr	x0, [x21], #8
    4e7c:	bl	0 <free>
    4e80:	cmp	x22, x21
    4e84:	b.ne	4e78 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x1fc>  // b.any
    4e88:	ldr	x21, [x19, #120]
    4e8c:	ldr	w22, [x19, #128]
    4e90:	add	x22, x21, x22, lsl #4
    4e94:	cmp	x21, x22
    4e98:	b.eq	4eac <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x230>  // b.none
    4e9c:	ldr	x0, [x21], #16
    4ea0:	bl	0 <free>
    4ea4:	cmp	x22, x21
    4ea8:	b.ne	4e9c <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x220>  // b.any
    4eac:	ldr	x1, [sp, #184]
    4eb0:	str	x1, [x19, #56]
    4eb4:	ldr	x1, [sp, #192]
    4eb8:	str	x1, [x19, #64]
    4ebc:	ldr	x1, [sp, #264]
    4ec0:	str	x1, [x19, #136]
    4ec4:	ldr	x1, [sp, #272]
    4ec8:	str	x1, [x19, #144]
    4ecc:	add	x21, sp, #0xa0
    4ed0:	add	x1, sp, #0xc8
    4ed4:	add	x0, x19, #0x48
    4ed8:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4edc:	add	x1, x21, #0x58
    4ee0:	add	x0, x19, #0x78
    4ee4:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4ee8:	str	xzr, [sp, #192]
    4eec:	str	xzr, [sp, #184]
    4ef0:	str	xzr, [sp, #264]
    4ef4:	str	wzr, [sp, #208]
    4ef8:	ldr	x1, [sp, #248]
    4efc:	ldr	w0, [sp, #256]
    4f00:	add	x0, x1, x0, lsl #4
    4f04:	cmp	x1, x0
    4f08:	b.eq	4f18 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x29c>  // b.none
    4f0c:	sub	x0, x0, #0x10
    4f10:	cmp	x1, x0
    4f14:	b.ne	4f0c <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x290>  // b.any
    4f18:	str	wzr, [sp, #256]
    4f1c:	ldr	x21, [sp, #200]
    4f20:	ldr	w22, [sp, #208]
    4f24:	add	x22, x21, x22, lsl #3
    4f28:	cmp	x21, x22
    4f2c:	b.eq	4f64 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x2e8>  // b.none
    4f30:	ldr	x0, [x21], #8
    4f34:	bl	0 <free>
    4f38:	cmp	x22, x21
    4f3c:	b.ne	4f30 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x2b4>  // b.any
    4f40:	ldr	x21, [sp, #248]
    4f44:	ldr	w22, [sp, #256]
    4f48:	add	x22, x21, x22, lsl #4
    4f4c:	cmp	x21, x22
    4f50:	b.eq	4f64 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x2e8>  // b.none
    4f54:	ldr	x0, [x21], #16
    4f58:	bl	0 <free>
    4f5c:	cmp	x22, x21
    4f60:	b.ne	4f54 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x2d8>  // b.any
    4f64:	ldr	x0, [sp, #56]
    4f68:	str	x0, [sp, #184]
    4f6c:	ldr	x0, [sp, #64]
    4f70:	str	x0, [sp, #192]
    4f74:	ldr	x0, [sp, #136]
    4f78:	str	x0, [sp, #264]
    4f7c:	ldr	x0, [sp, #144]
    4f80:	str	x0, [sp, #272]
    4f84:	add	x22, sp, #0x38
    4f88:	add	x21, sp, #0xa0
    4f8c:	add	x1, sp, #0x48
    4f90:	add	x0, sp, #0xc8
    4f94:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4f98:	add	x1, x22, #0x40
    4f9c:	add	x0, x21, #0x58
    4fa0:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    4fa4:	str	xzr, [sp, #64]
    4fa8:	str	xzr, [sp, #56]
    4fac:	str	xzr, [sp, #136]
    4fb0:	str	wzr, [sp, #80]
    4fb4:	ldr	x1, [sp, #120]
    4fb8:	ldr	w0, [sp, #128]
    4fbc:	add	x0, x1, x0, lsl #4
    4fc0:	cmp	x1, x0
    4fc4:	b.eq	4fd4 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x358>  // b.none
    4fc8:	sub	x0, x0, #0x10
    4fcc:	cmp	x1, x0
    4fd0:	b.ne	4fc8 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x34c>  // b.any
    4fd4:	str	wzr, [sp, #128]
    4fd8:	ldr	x21, [sp, #72]
    4fdc:	ldr	w22, [sp, #80]
    4fe0:	add	x22, x21, x22, lsl #3
    4fe4:	cmp	x21, x22
    4fe8:	b.eq	5040 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x3c4>  // b.none
    4fec:	ldr	x0, [x21], #8
    4ff0:	bl	0 <free>
    4ff4:	cmp	x22, x21
    4ff8:	b.ne	4fec <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x370>  // b.any
    4ffc:	ldr	x21, [sp, #120]
    5000:	ldr	w22, [sp, #128]
    5004:	add	x22, x21, x22, lsl #4
    5008:	cmp	x21, x22
    500c:	b.eq	5040 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x3c4>  // b.none
    5010:	ldr	x0, [x21], #16
    5014:	bl	0 <free>
    5018:	cmp	x22, x21
    501c:	b.ne	5010 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x394>  // b.any
    5020:	ldr	x1, [sp, #120]
    5024:	ldr	w0, [sp, #128]
    5028:	add	x0, x1, x0, lsl #4
    502c:	cmp	x1, x0
    5030:	b.eq	5040 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x3c4>  // b.none
    5034:	sub	x0, x0, #0x10
    5038:	cmp	x1, x0
    503c:	b.ne	5034 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x3b8>  // b.any
    5040:	ldr	x0, [sp, #120]
    5044:	add	x1, sp, #0x88
    5048:	cmp	x0, x1
    504c:	b.eq	5054 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x3d8>  // b.none
    5050:	bl	0 <free>
    5054:	ldr	x0, [sp, #72]
    5058:	add	x1, sp, #0x58
    505c:	cmp	x0, x1
    5060:	b.eq	5068 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x3ec>  // b.none
    5064:	bl	0 <free>
    5068:	ldr	w0, [sp, #172]
    506c:	cbz	w0, 5094 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x418>
    5070:	ldr	w1, [sp, #168]
    5074:	cbz	w1, 5094 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x418>
    5078:	sub	w1, w1, #0x1
    507c:	add	x1, x1, #0x1
    5080:	lsl	x1, x1, #3
    5084:	mov	x0, #0x0                   	// #0
    5088:	add	x0, x0, #0x8
    508c:	cmp	x1, x0
    5090:	b.ne	5088 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x40c>  // b.any
    5094:	ldr	x0, [sp, #160]
    5098:	bl	0 <free>
    509c:	ldr	x21, [sp, #200]
    50a0:	ldr	w22, [sp, #208]
    50a4:	add	x22, x21, x22, lsl #3
    50a8:	cmp	x21, x22
    50ac:	b.eq	50c0 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x444>  // b.none
    50b0:	ldr	x0, [x21], #8
    50b4:	bl	0 <free>
    50b8:	cmp	x22, x21
    50bc:	b.ne	50b0 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x434>  // b.any
    50c0:	ldr	x21, [sp, #248]
    50c4:	ldr	w22, [sp, #256]
    50c8:	add	x22, x21, x22, lsl #4
    50cc:	cmp	x21, x22
    50d0:	b.eq	5104 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x488>  // b.none
    50d4:	ldr	x0, [x21], #16
    50d8:	bl	0 <free>
    50dc:	cmp	x22, x21
    50e0:	b.ne	50d4 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x458>  // b.any
    50e4:	ldr	x1, [sp, #248]
    50e8:	ldr	w0, [sp, #256]
    50ec:	add	x0, x1, x0, lsl #4
    50f0:	cmp	x1, x0
    50f4:	b.eq	5104 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x488>  // b.none
    50f8:	sub	x0, x0, #0x10
    50fc:	cmp	x1, x0
    5100:	b.ne	50f8 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x47c>  // b.any
    5104:	ldr	x0, [sp, #248]
    5108:	add	x1, sp, #0x108
    510c:	cmp	x0, x1
    5110:	b.eq	5118 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x49c>  // b.none
    5114:	bl	0 <free>
    5118:	ldr	x0, [sp, #200]
    511c:	add	x1, sp, #0xd8
    5120:	cmp	x0, x1
    5124:	b.eq	512c <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x4b0>  // b.none
    5128:	bl	0 <free>
    512c:	ldr	x0, [x20, #128]
    5130:	str	x0, [x19, #160]
    5134:	ldp	x21, x22, [sp, #32]
    5138:	ldp	x19, x20, [sp, #16]
    513c:	ldp	x29, x30, [sp], #288
    5140:	ret
    5144:	add	x1, x20, #0x28
    5148:	add	x0, sp, #0xc8
    514c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    5150:	b	4d40 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0xc4>
    5154:	add	x1, x20, #0x58
    5158:	add	x0, sp, #0xf8
    515c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    5160:	b	4d58 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0xdc>
    5164:	add	x1, x19, #0x48
    5168:	add	x0, sp, #0x48
    516c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    5170:	b	4e08 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x18c>
    5174:	add	x1, x19, #0x78
    5178:	add	x0, sp, #0x78
    517c:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    5180:	b	4e20 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x1a4>
    5184:	ldr	x1, [x20]
    5188:	str	x1, [x19, #32]
    518c:	ldr	w1, [x20, #8]
    5190:	str	w1, [x19, #40]
    5194:	ldr	w1, [x20, #12]
    5198:	str	w1, [x19, #44]
    519c:	ldr	w1, [x20, #16]
    51a0:	str	w1, [x19, #48]
    51a4:	ldr	w1, [x20, #20]
    51a8:	str	w1, [x19, #52]
    51ac:	str	xzr, [x20]
    51b0:	str	wzr, [x20, #8]
    51b4:	str	wzr, [x20, #12]
    51b8:	str	wzr, [x20, #16]
    51bc:	ldr	x0, [x20, #24]
    51c0:	str	x0, [x19, #56]
    51c4:	ldr	x0, [x20, #32]
    51c8:	str	x0, [x19, #64]
    51cc:	add	x0, x19, #0x58
    51d0:	str	x0, [x19, #72]
    51d4:	str	wzr, [x19, #80]
    51d8:	mov	w0, #0x4                   	// #4
    51dc:	str	w0, [x19, #84]
    51e0:	ldr	w0, [x20, #48]
    51e4:	cbnz	w0, 5258 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x5dc>
    51e8:	add	x0, x19, #0x88
    51ec:	str	x0, [x19, #120]
    51f0:	str	wzr, [x19, #128]
    51f4:	str	wzr, [x19, #132]
    51f8:	ldr	w0, [x20, #96]
    51fc:	cbnz	w0, 5268 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x5ec>
    5200:	ldr	x2, [x20, #104]
    5204:	str	x2, [x19, #136]
    5208:	ldr	x2, [x20, #112]
    520c:	str	x2, [x19, #144]
    5210:	str	xzr, [x20, #32]
    5214:	str	xzr, [x20, #24]
    5218:	str	xzr, [x20, #104]
    521c:	str	wzr, [x20, #48]
    5220:	ldr	x1, [x20, #88]
    5224:	ldr	w0, [x20, #96]
    5228:	add	x0, x1, x0, lsl #4
    522c:	cmp	x1, x0
    5230:	b.eq	5240 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x5c4>  // b.none
    5234:	sub	x0, x0, #0x10
    5238:	cmp	x1, x0
    523c:	b.ne	5234 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x5b8>  // b.any
    5240:	str	wzr, [x20, #96]
    5244:	ldr	x0, [x20, #128]
    5248:	str	x0, [x19, #160]
    524c:	mov	w0, #0x1                   	// #1
    5250:	strb	w0, [x19, #168]
    5254:	b	5138 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x4bc>
    5258:	add	x1, x20, #0x28
    525c:	add	x0, x19, #0x48
    5260:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    5264:	b	51e8 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x56c>
    5268:	add	x1, x20, #0x58
    526c:	add	x0, x19, #0x78
    5270:	bl	0 <_ZL4pushRN4llvm15SmallVectorImplImEENS_9StringRefE>
    5274:	b	5200 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE+0x584>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	add	x19, x0, #0x10
  10:	adrp	x0, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  14:	ldr	x0, [x0]
  18:	cmp	x1, x0
  1c:	b.eq	30 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x30>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	ands	w0, w0, #0xff
  2c:	csel	x19, x19, xzr, ne  // ne = any
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x1, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x1, x1, #0x20
   c:	cmp	x0, x1
  10:	b.eq	28 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x28>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <free>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x220                 	// #544
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZdlPv>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev:

0000000000000000 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x19, x0
  1c:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
  20:	ldr	x0, [x0]
  24:	add	x0, x0, #0x10
  28:	str	x0, [x19]
  2c:	ldr	w0, [x19, #1760]
  30:	cbnz	w0, 74 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x74>
  34:	ldr	x1, [x19, #1800]
  38:	ldr	x0, [x19, #1808]
  3c:	cmp	x1, x0
  40:	b.ne	94 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x94>  // b.any
  44:	ldr	x1, [x19, #1776]
  48:	ldr	x0, [x19, #1784]
  4c:	cmp	x1, x0
  50:	b.ne	94 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x94>  // b.any
  54:	ldr	x21, [x19, #1824]
  58:	ldr	x25, [x19, #1832]
  5c:	cmp	x21, x25
  60:	b.eq	178 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x178>  // b.none
  64:	adrp	x23, 0 <__pthread_key_create>
  68:	ldr	x26, [x23]
  6c:	mov	x23, x26
  70:	b	164 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x164>
  74:	adrp	x3, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x58                  	// #88
  80:	adrp	x1, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	adrp	x3, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x59                  	// #89
  a0:	adrp	x1, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
  a4:	add	x1, x1, #0x0
  a8:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
  ac:	add	x0, x0, #0x0
  b0:	bl	0 <__assert_fail>
  b4:	add	x1, x20, #0x8
  b8:	ldaxr	w0, [x1]
  bc:	sub	w2, w0, #0x1
  c0:	stlxr	w3, w2, [x1]
  c4:	cbnz	w3, b8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xb8>
  c8:	cmp	w0, #0x1
  cc:	b.eq	f8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xf8>  // b.none
  d0:	add	x22, x22, #0x10
  d4:	cmp	x24, x22
  d8:	b.eq	14c <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x14c>  // b.none
  dc:	ldr	x20, [x22, #8]
  e0:	cbz	x20, d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xd0>
  e4:	cbnz	x26, b4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xb4>
  e8:	ldr	w0, [x20, #8]
  ec:	sub	w1, w0, #0x1
  f0:	str	w1, [x20, #8]
  f4:	b	c8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xc8>
  f8:	ldr	x0, [x20]
  fc:	ldr	x1, [x0, #16]
 100:	mov	x0, x20
 104:	blr	x1
 108:	cbz	x23, 13c <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x13c>
 10c:	add	x1, x20, #0xc
 110:	ldaxr	w0, [x1]
 114:	sub	w2, w0, #0x1
 118:	stlxr	w3, w2, [x1]
 11c:	cbnz	w3, 110 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x110>
 120:	cmp	w0, #0x1
 124:	b.ne	d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xd0>  // b.any
 128:	ldr	x0, [x20]
 12c:	ldr	x1, [x0, #24]
 130:	mov	x0, x20
 134:	blr	x1
 138:	b	d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xd0>
 13c:	ldr	w0, [x20, #12]
 140:	sub	w1, w0, #0x1
 144:	str	w1, [x20, #12]
 148:	b	120 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x120>
 14c:	ldr	x0, [x21, #8]
 150:	cbz	x0, 158 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x158>
 154:	bl	0 <_ZdlPv>
 158:	add	x21, x21, #0x20
 15c:	cmp	x25, x21
 160:	b.eq	178 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x178>  // b.none
 164:	ldr	x22, [x21, #8]
 168:	ldr	x24, [x21, #16]
 16c:	cmp	x22, x24
 170:	b.ne	dc <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0xdc>  // b.any
 174:	b	14c <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x14c>
 178:	ldr	x0, [x19, #1824]
 17c:	cbz	x0, 184 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x184>
 180:	bl	0 <_ZdlPv>
 184:	ldr	x21, [x19, #1800]
 188:	ldr	x25, [x19, #1808]
 18c:	cmp	x21, x25
 190:	b.eq	268 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x268>  // b.none
 194:	adrp	x23, 0 <__pthread_key_create>
 198:	ldr	x26, [x23]
 19c:	mov	x23, x26
 1a0:	b	254 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x254>
 1a4:	add	x1, x20, #0x8
 1a8:	ldaxr	w0, [x1]
 1ac:	sub	w2, w0, #0x1
 1b0:	stlxr	w3, w2, [x1]
 1b4:	cbnz	w3, 1a8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1a8>
 1b8:	cmp	w0, #0x1
 1bc:	b.eq	1e8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1e8>  // b.none
 1c0:	add	x22, x22, #0x10
 1c4:	cmp	x24, x22
 1c8:	b.eq	23c <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x23c>  // b.none
 1cc:	ldr	x20, [x22, #8]
 1d0:	cbz	x20, 1c0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1c0>
 1d4:	cbnz	x26, 1a4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1a4>
 1d8:	ldr	w0, [x20, #8]
 1dc:	sub	w1, w0, #0x1
 1e0:	str	w1, [x20, #8]
 1e4:	b	1b8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1b8>
 1e8:	ldr	x0, [x20]
 1ec:	ldr	x1, [x0, #16]
 1f0:	mov	x0, x20
 1f4:	blr	x1
 1f8:	cbz	x23, 22c <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x22c>
 1fc:	add	x1, x20, #0xc
 200:	ldaxr	w0, [x1]
 204:	sub	w2, w0, #0x1
 208:	stlxr	w3, w2, [x1]
 20c:	cbnz	w3, 200 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x200>
 210:	cmp	w0, #0x1
 214:	b.ne	1c0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1c0>  // b.any
 218:	ldr	x0, [x20]
 21c:	ldr	x1, [x0, #24]
 220:	mov	x0, x20
 224:	blr	x1
 228:	b	1c0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1c0>
 22c:	ldr	w0, [x20, #12]
 230:	sub	w1, w0, #0x1
 234:	str	w1, [x20, #12]
 238:	b	210 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x210>
 23c:	ldr	x0, [x21, #16]
 240:	cbz	x0, 248 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x248>
 244:	bl	0 <_ZdlPv>
 248:	add	x21, x21, #0x28
 24c:	cmp	x25, x21
 250:	b.eq	268 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x268>  // b.none
 254:	ldr	x22, [x21, #16]
 258:	ldr	x24, [x21, #24]
 25c:	cmp	x22, x24
 260:	b.ne	1cc <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x1cc>  // b.any
 264:	b	23c <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x23c>
 268:	ldr	x0, [x19, #1800]
 26c:	cbz	x0, 274 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x274>
 270:	bl	0 <_ZdlPv>
 274:	ldr	x21, [x19, #1776]
 278:	ldr	x23, [x19, #1784]
 27c:	cmp	x21, x23
 280:	b.eq	330 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x330>  // b.none
 284:	adrp	x22, 0 <__pthread_key_create>
 288:	ldr	x24, [x22]
 28c:	mov	x22, x24
 290:	b	2b8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2b8>
 294:	ldaxr	w0, [x1]
 298:	sub	w2, w0, #0x1
 29c:	stlxr	w3, w2, [x1]
 2a0:	cbnz	w3, 294 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x294>
 2a4:	cmp	w0, #0x1
 2a8:	b.eq	2dc <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2dc>  // b.none
 2ac:	add	x21, x21, #0x10
 2b0:	cmp	x23, x21
 2b4:	b.eq	330 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x330>  // b.none
 2b8:	ldr	x20, [x21, #8]
 2bc:	cbz	x20, 2ac <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2ac>
 2c0:	cbz	x24, 2cc <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2cc>
 2c4:	add	x1, x20, #0x8
 2c8:	b	294 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x294>
 2cc:	ldr	w0, [x20, #8]
 2d0:	sub	w1, w0, #0x1
 2d4:	str	w1, [x20, #8]
 2d8:	b	2a4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2a4>
 2dc:	ldr	x0, [x20]
 2e0:	ldr	x1, [x0, #16]
 2e4:	mov	x0, x20
 2e8:	blr	x1
 2ec:	cbz	x22, 320 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x320>
 2f0:	add	x1, x20, #0xc
 2f4:	ldaxr	w0, [x1]
 2f8:	sub	w2, w0, #0x1
 2fc:	stlxr	w3, w2, [x1]
 300:	cbnz	w3, 2f4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2f4>
 304:	cmp	w0, #0x1
 308:	b.ne	2ac <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2ac>  // b.any
 30c:	ldr	x0, [x20]
 310:	ldr	x1, [x0, #24]
 314:	mov	x0, x20
 318:	blr	x1
 31c:	b	2ac <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x2ac>
 320:	ldr	w0, [x20, #12]
 324:	sub	w1, w0, #0x1
 328:	str	w1, [x20, #12]
 32c:	b	304 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x304>
 330:	ldr	x0, [x19, #1776]
 334:	cbz	x0, 33c <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x33c>
 338:	bl	0 <_ZdlPv>
 33c:	ldr	x0, [x19, #1224]
 340:	add	x1, x19, #0x4d8
 344:	cmp	x0, x1
 348:	b.eq	350 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x350>  // b.none
 34c:	bl	0 <free>
 350:	ldr	x0, [x19, #184]
 354:	add	x1, x19, #0xc8
 358:	cmp	x0, x1
 35c:	b.eq	364 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x364>  // b.none
 360:	bl	0 <free>
 364:	mov	x1, x19
 368:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev>
 36c:	ldr	x0, [x0]
 370:	add	x0, x0, #0x10
 374:	str	x0, [x1], #32
 378:	ldrb	w0, [x1, #136]
 37c:	cbnz	w0, 3a4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x3a4>
 380:	mov	x1, #0x788                 	// #1928
 384:	mov	x0, x19
 388:	bl	0 <_ZdlPvm>
 38c:	ldp	x19, x20, [sp, #16]
 390:	ldp	x21, x22, [sp, #32]
 394:	ldp	x23, x24, [sp, #48]
 398:	ldp	x25, x26, [sp, #64]
 39c:	ldp	x29, x30, [sp], #80
 3a0:	ret
 3a4:	ldr	w0, [x19, #44]
 3a8:	cbz	w0, 3d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x3d0>
 3ac:	ldr	w1, [x19, #40]
 3b0:	cbz	w1, 3d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x3d0>
 3b4:	sub	w1, w1, #0x1
 3b8:	add	x1, x1, #0x1
 3bc:	lsl	x1, x1, #3
 3c0:	mov	x0, #0x0                   	// #0
 3c4:	add	x0, x0, #0x8
 3c8:	cmp	x1, x0
 3cc:	b.ne	3c4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x3c4>  // b.any
 3d0:	ldr	x0, [x19, #32]
 3d4:	bl	0 <free>
 3d8:	ldr	x20, [x19, #72]
 3dc:	ldr	w21, [x19, #80]
 3e0:	add	x21, x20, x21, lsl #3
 3e4:	cmp	x20, x21
 3e8:	b.eq	3fc <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x3fc>  // b.none
 3ec:	ldr	x0, [x20], #8
 3f0:	bl	0 <free>
 3f4:	cmp	x21, x20
 3f8:	b.ne	3ec <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x3ec>  // b.any
 3fc:	ldr	x20, [x19, #120]
 400:	ldr	w21, [x19, #128]
 404:	add	x21, x20, x21, lsl #4
 408:	cmp	x20, x21
 40c:	b.eq	440 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x440>  // b.none
 410:	ldr	x0, [x20], #16
 414:	bl	0 <free>
 418:	cmp	x21, x20
 41c:	b.ne	410 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x410>  // b.any
 420:	ldr	x1, [x19, #120]
 424:	ldr	w0, [x19, #128]
 428:	add	x0, x1, x0, lsl #4
 42c:	cmp	x1, x0
 430:	b.eq	440 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x440>  // b.none
 434:	sub	x0, x0, #0x10
 438:	cmp	x1, x0
 43c:	b.ne	434 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x434>  // b.any
 440:	ldr	x0, [x19, #120]
 444:	add	x1, x19, #0x88
 448:	cmp	x0, x1
 44c:	b.eq	454 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x454>  // b.none
 450:	bl	0 <free>
 454:	ldr	x0, [x19, #72]
 458:	add	x1, x19, #0x58
 45c:	cmp	x0, x1
 460:	b.eq	380 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x380>  // b.none
 464:	bl	0 <free>
 468:	b	380 <_ZN4llvm7remarks25BitstreamRemarkSerializerD0Ev+0x380>

Disassembly of section .text._ZN4llvm7remarks25BitstreamRemarkSerializerD2Ev:

0000000000000000 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x19, x0
  1c:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
  20:	ldr	x0, [x0]
  24:	add	x0, x0, #0x10
  28:	str	x0, [x19]
  2c:	ldr	w0, [x19, #1760]
  30:	cbnz	w0, 74 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x74>
  34:	ldr	x1, [x19, #1800]
  38:	ldr	x0, [x19, #1808]
  3c:	cmp	x1, x0
  40:	b.ne	94 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x94>  // b.any
  44:	ldr	x1, [x19, #1776]
  48:	ldr	x0, [x19, #1784]
  4c:	cmp	x1, x0
  50:	b.ne	94 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x94>  // b.any
  54:	ldr	x21, [x19, #1824]
  58:	ldr	x25, [x19, #1832]
  5c:	cmp	x21, x25
  60:	b.eq	178 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x178>  // b.none
  64:	adrp	x23, 0 <__pthread_key_create>
  68:	ldr	x26, [x23]
  6c:	mov	x23, x26
  70:	b	164 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x164>
  74:	adrp	x3, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x58                  	// #88
  80:	adrp	x1, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	adrp	x3, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x59                  	// #89
  a0:	adrp	x1, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
  a4:	add	x1, x1, #0x0
  a8:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
  ac:	add	x0, x0, #0x0
  b0:	bl	0 <__assert_fail>
  b4:	add	x1, x20, #0x8
  b8:	ldaxr	w0, [x1]
  bc:	sub	w2, w0, #0x1
  c0:	stlxr	w3, w2, [x1]
  c4:	cbnz	w3, b8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xb8>
  c8:	cmp	w0, #0x1
  cc:	b.eq	f8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xf8>  // b.none
  d0:	add	x22, x22, #0x10
  d4:	cmp	x24, x22
  d8:	b.eq	14c <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x14c>  // b.none
  dc:	ldr	x20, [x22, #8]
  e0:	cbz	x20, d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xd0>
  e4:	cbnz	x26, b4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xb4>
  e8:	ldr	w0, [x20, #8]
  ec:	sub	w1, w0, #0x1
  f0:	str	w1, [x20, #8]
  f4:	b	c8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xc8>
  f8:	ldr	x0, [x20]
  fc:	ldr	x1, [x0, #16]
 100:	mov	x0, x20
 104:	blr	x1
 108:	cbz	x23, 13c <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x13c>
 10c:	add	x1, x20, #0xc
 110:	ldaxr	w0, [x1]
 114:	sub	w2, w0, #0x1
 118:	stlxr	w3, w2, [x1]
 11c:	cbnz	w3, 110 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x110>
 120:	cmp	w0, #0x1
 124:	b.ne	d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xd0>  // b.any
 128:	ldr	x0, [x20]
 12c:	ldr	x1, [x0, #24]
 130:	mov	x0, x20
 134:	blr	x1
 138:	b	d0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xd0>
 13c:	ldr	w0, [x20, #12]
 140:	sub	w1, w0, #0x1
 144:	str	w1, [x20, #12]
 148:	b	120 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x120>
 14c:	ldr	x0, [x21, #8]
 150:	cbz	x0, 158 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x158>
 154:	bl	0 <_ZdlPv>
 158:	add	x21, x21, #0x20
 15c:	cmp	x25, x21
 160:	b.eq	178 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x178>  // b.none
 164:	ldr	x22, [x21, #8]
 168:	ldr	x24, [x21, #16]
 16c:	cmp	x22, x24
 170:	b.ne	dc <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0xdc>  // b.any
 174:	b	14c <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x14c>
 178:	ldr	x0, [x19, #1824]
 17c:	cbz	x0, 184 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x184>
 180:	bl	0 <_ZdlPv>
 184:	ldr	x21, [x19, #1800]
 188:	ldr	x25, [x19, #1808]
 18c:	cmp	x21, x25
 190:	b.eq	268 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x268>  // b.none
 194:	adrp	x23, 0 <__pthread_key_create>
 198:	ldr	x26, [x23]
 19c:	mov	x23, x26
 1a0:	b	254 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x254>
 1a4:	add	x1, x20, #0x8
 1a8:	ldaxr	w0, [x1]
 1ac:	sub	w2, w0, #0x1
 1b0:	stlxr	w3, w2, [x1]
 1b4:	cbnz	w3, 1a8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1a8>
 1b8:	cmp	w0, #0x1
 1bc:	b.eq	1e8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1e8>  // b.none
 1c0:	add	x22, x22, #0x10
 1c4:	cmp	x24, x22
 1c8:	b.eq	23c <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x23c>  // b.none
 1cc:	ldr	x20, [x22, #8]
 1d0:	cbz	x20, 1c0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1c0>
 1d4:	cbnz	x26, 1a4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1a4>
 1d8:	ldr	w0, [x20, #8]
 1dc:	sub	w1, w0, #0x1
 1e0:	str	w1, [x20, #8]
 1e4:	b	1b8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1b8>
 1e8:	ldr	x0, [x20]
 1ec:	ldr	x1, [x0, #16]
 1f0:	mov	x0, x20
 1f4:	blr	x1
 1f8:	cbz	x23, 22c <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x22c>
 1fc:	add	x1, x20, #0xc
 200:	ldaxr	w0, [x1]
 204:	sub	w2, w0, #0x1
 208:	stlxr	w3, w2, [x1]
 20c:	cbnz	w3, 200 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x200>
 210:	cmp	w0, #0x1
 214:	b.ne	1c0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1c0>  // b.any
 218:	ldr	x0, [x20]
 21c:	ldr	x1, [x0, #24]
 220:	mov	x0, x20
 224:	blr	x1
 228:	b	1c0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1c0>
 22c:	ldr	w0, [x20, #12]
 230:	sub	w1, w0, #0x1
 234:	str	w1, [x20, #12]
 238:	b	210 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x210>
 23c:	ldr	x0, [x21, #16]
 240:	cbz	x0, 248 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x248>
 244:	bl	0 <_ZdlPv>
 248:	add	x21, x21, #0x28
 24c:	cmp	x25, x21
 250:	b.eq	268 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x268>  // b.none
 254:	ldr	x22, [x21, #16]
 258:	ldr	x24, [x21, #24]
 25c:	cmp	x22, x24
 260:	b.ne	1cc <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x1cc>  // b.any
 264:	b	23c <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x23c>
 268:	ldr	x0, [x19, #1800]
 26c:	cbz	x0, 274 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x274>
 270:	bl	0 <_ZdlPv>
 274:	ldr	x21, [x19, #1776]
 278:	ldr	x23, [x19, #1784]
 27c:	cmp	x21, x23
 280:	b.eq	330 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x330>  // b.none
 284:	adrp	x22, 0 <__pthread_key_create>
 288:	ldr	x24, [x22]
 28c:	mov	x22, x24
 290:	b	2b8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2b8>
 294:	ldaxr	w0, [x1]
 298:	sub	w2, w0, #0x1
 29c:	stlxr	w3, w2, [x1]
 2a0:	cbnz	w3, 294 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x294>
 2a4:	cmp	w0, #0x1
 2a8:	b.eq	2dc <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2dc>  // b.none
 2ac:	add	x21, x21, #0x10
 2b0:	cmp	x23, x21
 2b4:	b.eq	330 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x330>  // b.none
 2b8:	ldr	x20, [x21, #8]
 2bc:	cbz	x20, 2ac <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2ac>
 2c0:	cbz	x24, 2cc <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2cc>
 2c4:	add	x1, x20, #0x8
 2c8:	b	294 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x294>
 2cc:	ldr	w0, [x20, #8]
 2d0:	sub	w1, w0, #0x1
 2d4:	str	w1, [x20, #8]
 2d8:	b	2a4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2a4>
 2dc:	ldr	x0, [x20]
 2e0:	ldr	x1, [x0, #16]
 2e4:	mov	x0, x20
 2e8:	blr	x1
 2ec:	cbz	x22, 320 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x320>
 2f0:	add	x1, x20, #0xc
 2f4:	ldaxr	w0, [x1]
 2f8:	sub	w2, w0, #0x1
 2fc:	stlxr	w3, w2, [x1]
 300:	cbnz	w3, 2f4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2f4>
 304:	cmp	w0, #0x1
 308:	b.ne	2ac <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2ac>  // b.any
 30c:	ldr	x0, [x20]
 310:	ldr	x1, [x0, #24]
 314:	mov	x0, x20
 318:	blr	x1
 31c:	b	2ac <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x2ac>
 320:	ldr	w0, [x20, #12]
 324:	sub	w1, w0, #0x1
 328:	str	w1, [x20, #12]
 32c:	b	304 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x304>
 330:	ldr	x0, [x19, #1776]
 334:	cbz	x0, 33c <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x33c>
 338:	bl	0 <_ZdlPv>
 33c:	ldr	x0, [x19, #1224]
 340:	add	x1, x19, #0x4d8
 344:	cmp	x0, x1
 348:	b.eq	350 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x350>  // b.none
 34c:	bl	0 <free>
 350:	ldr	x0, [x19, #184]
 354:	add	x1, x19, #0xc8
 358:	cmp	x0, x1
 35c:	b.eq	364 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x364>  // b.none
 360:	bl	0 <free>
 364:	mov	x1, x19
 368:	adrp	x0, 0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev>
 36c:	ldr	x0, [x0]
 370:	add	x0, x0, #0x10
 374:	str	x0, [x1], #32
 378:	ldrb	w0, [x1, #136]
 37c:	cbnz	w0, 398 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x398>
 380:	ldp	x19, x20, [sp, #16]
 384:	ldp	x21, x22, [sp, #32]
 388:	ldp	x23, x24, [sp, #48]
 38c:	ldp	x25, x26, [sp, #64]
 390:	ldp	x29, x30, [sp], #80
 394:	ret
 398:	ldr	w0, [x19, #44]
 39c:	cbz	w0, 3c4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x3c4>
 3a0:	ldr	w1, [x19, #40]
 3a4:	cbz	w1, 3c4 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x3c4>
 3a8:	sub	w1, w1, #0x1
 3ac:	add	x1, x1, #0x1
 3b0:	lsl	x1, x1, #3
 3b4:	mov	x0, #0x0                   	// #0
 3b8:	add	x0, x0, #0x8
 3bc:	cmp	x1, x0
 3c0:	b.ne	3b8 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x3b8>  // b.any
 3c4:	ldr	x0, [x19, #32]
 3c8:	bl	0 <free>
 3cc:	ldr	x20, [x19, #72]
 3d0:	ldr	w21, [x19, #80]
 3d4:	add	x21, x20, x21, lsl #3
 3d8:	cmp	x20, x21
 3dc:	b.eq	3f0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x3f0>  // b.none
 3e0:	ldr	x0, [x20], #8
 3e4:	bl	0 <free>
 3e8:	cmp	x21, x20
 3ec:	b.ne	3e0 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x3e0>  // b.any
 3f0:	ldr	x20, [x19, #120]
 3f4:	ldr	w21, [x19, #128]
 3f8:	add	x21, x20, x21, lsl #4
 3fc:	cmp	x20, x21
 400:	b.eq	434 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x434>  // b.none
 404:	ldr	x0, [x20], #16
 408:	bl	0 <free>
 40c:	cmp	x21, x20
 410:	b.ne	404 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x404>  // b.any
 414:	ldr	x1, [x19, #120]
 418:	ldr	w0, [x19, #128]
 41c:	add	x0, x1, x0, lsl #4
 420:	cmp	x1, x0
 424:	b.eq	434 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x434>  // b.none
 428:	sub	x0, x0, #0x10
 42c:	cmp	x1, x0
 430:	b.ne	428 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x428>  // b.any
 434:	ldr	x0, [x19, #120]
 438:	add	x1, x19, #0x88
 43c:	cmp	x0, x1
 440:	b.eq	448 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x448>  // b.none
 444:	bl	0 <free>
 448:	ldr	x0, [x19, #72]
 44c:	add	x19, x19, #0x58
 450:	cmp	x0, x19
 454:	b.eq	380 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x380>  // b.none
 458:	bl	0 <free>
 45c:	b	380 <_ZN4llvm7remarks25BitstreamRemarkSerializerD1Ev+0x380>

Disassembly of section .text._ZN4llvm7remarks23BitstreamMetaSerializerD2Ev:

0000000000000000 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x1, x0
  14:	adrp	x0, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x1], #16
  24:	ldrb	w0, [x1, #1744]
  28:	cbnz	w0, 38 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x38>
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #80
  34:	ret
  38:	stp	x21, x22, [sp, #32]
  3c:	stp	x23, x24, [sp, #48]
  40:	stp	x25, x26, [sp, #64]
  44:	ldr	w0, [x20, #1592]
  48:	cbnz	w0, 8c <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x8c>
  4c:	ldr	x1, [x20, #1632]
  50:	ldr	x0, [x20, #1640]
  54:	cmp	x1, x0
  58:	b.ne	ac <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xac>  // b.any
  5c:	ldr	x1, [x20, #1608]
  60:	ldr	x0, [x20, #1616]
  64:	cmp	x1, x0
  68:	b.ne	ac <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xac>  // b.any
  6c:	ldr	x21, [x20, #1656]
  70:	ldr	x25, [x20, #1664]
  74:	cmp	x21, x25
  78:	b.eq	190 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x190>  // b.none
  7c:	adrp	x24, 0 <__pthread_key_create>
  80:	ldr	x26, [x24]
  84:	mov	x24, x26
  88:	b	17c <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x17c>
  8c:	adrp	x3, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x58                  	// #88
  98:	adrp	x1, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>
  9c:	add	x1, x1, #0x0
  a0:	adrp	x0, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <__assert_fail>
  ac:	adrp	x3, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x59                  	// #89
  b8:	adrp	x1, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>
  bc:	add	x1, x1, #0x0
  c0:	adrp	x0, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev>
  c4:	add	x0, x0, #0x0
  c8:	bl	0 <__assert_fail>
  cc:	add	x1, x19, #0x8
  d0:	ldaxr	w0, [x1]
  d4:	sub	w2, w0, #0x1
  d8:	stlxr	w3, w2, [x1]
  dc:	cbnz	w3, d0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xd0>
  e0:	cmp	w0, #0x1
  e4:	b.eq	110 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x110>  // b.none
  e8:	add	x22, x22, #0x10
  ec:	cmp	x23, x22
  f0:	b.eq	164 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x164>  // b.none
  f4:	ldr	x19, [x22, #8]
  f8:	cbz	x19, e8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xe8>
  fc:	cbnz	x26, cc <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xcc>
 100:	ldr	w0, [x19, #8]
 104:	sub	w1, w0, #0x1
 108:	str	w1, [x19, #8]
 10c:	b	e0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xe0>
 110:	ldr	x0, [x19]
 114:	ldr	x1, [x0, #16]
 118:	mov	x0, x19
 11c:	blr	x1
 120:	cbz	x24, 154 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x154>
 124:	add	x1, x19, #0xc
 128:	ldaxr	w0, [x1]
 12c:	sub	w2, w0, #0x1
 130:	stlxr	w3, w2, [x1]
 134:	cbnz	w3, 128 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x128>
 138:	cmp	w0, #0x1
 13c:	b.ne	e8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xe8>  // b.any
 140:	ldr	x0, [x19]
 144:	ldr	x1, [x0, #24]
 148:	mov	x0, x19
 14c:	blr	x1
 150:	b	e8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xe8>
 154:	ldr	w0, [x19, #12]
 158:	sub	w1, w0, #0x1
 15c:	str	w1, [x19, #12]
 160:	b	138 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x138>
 164:	ldr	x0, [x21, #8]
 168:	cbz	x0, 170 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x170>
 16c:	bl	0 <_ZdlPv>
 170:	add	x21, x21, #0x20
 174:	cmp	x25, x21
 178:	b.eq	190 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x190>  // b.none
 17c:	ldr	x22, [x21, #8]
 180:	ldr	x23, [x21, #16]
 184:	cmp	x22, x23
 188:	b.ne	f4 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0xf4>  // b.any
 18c:	b	164 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x164>
 190:	ldr	x0, [x20, #1656]
 194:	cbz	x0, 19c <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x19c>
 198:	bl	0 <_ZdlPv>
 19c:	ldr	x21, [x20, #1632]
 1a0:	ldr	x25, [x20, #1640]
 1a4:	cmp	x21, x25
 1a8:	b.eq	280 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x280>  // b.none
 1ac:	adrp	x24, 0 <__pthread_key_create>
 1b0:	ldr	x26, [x24]
 1b4:	mov	x24, x26
 1b8:	b	26c <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x26c>
 1bc:	add	x1, x19, #0x8
 1c0:	ldaxr	w0, [x1]
 1c4:	sub	w2, w0, #0x1
 1c8:	stlxr	w3, w2, [x1]
 1cc:	cbnz	w3, 1c0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x1c0>
 1d0:	cmp	w0, #0x1
 1d4:	b.eq	200 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x200>  // b.none
 1d8:	add	x22, x22, #0x10
 1dc:	cmp	x23, x22
 1e0:	b.eq	254 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x254>  // b.none
 1e4:	ldr	x19, [x22, #8]
 1e8:	cbz	x19, 1d8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x1d8>
 1ec:	cbnz	x26, 1bc <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x1bc>
 1f0:	ldr	w0, [x19, #8]
 1f4:	sub	w1, w0, #0x1
 1f8:	str	w1, [x19, #8]
 1fc:	b	1d0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x1d0>
 200:	ldr	x0, [x19]
 204:	ldr	x1, [x0, #16]
 208:	mov	x0, x19
 20c:	blr	x1
 210:	cbz	x24, 244 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x244>
 214:	add	x1, x19, #0xc
 218:	ldaxr	w0, [x1]
 21c:	sub	w2, w0, #0x1
 220:	stlxr	w3, w2, [x1]
 224:	cbnz	w3, 218 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x218>
 228:	cmp	w0, #0x1
 22c:	b.ne	1d8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x1d8>  // b.any
 230:	ldr	x0, [x19]
 234:	ldr	x1, [x0, #24]
 238:	mov	x0, x19
 23c:	blr	x1
 240:	b	1d8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x1d8>
 244:	ldr	w0, [x19, #12]
 248:	sub	w1, w0, #0x1
 24c:	str	w1, [x19, #12]
 250:	b	228 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x228>
 254:	ldr	x0, [x21, #16]
 258:	cbz	x0, 260 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x260>
 25c:	bl	0 <_ZdlPv>
 260:	add	x21, x21, #0x28
 264:	cmp	x25, x21
 268:	b.eq	280 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x280>  // b.none
 26c:	ldr	x22, [x21, #16]
 270:	ldr	x23, [x21, #24]
 274:	cmp	x22, x23
 278:	b.ne	1e4 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x1e4>  // b.any
 27c:	b	254 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x254>
 280:	ldr	x0, [x20, #1632]
 284:	cbz	x0, 28c <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x28c>
 288:	bl	0 <_ZdlPv>
 28c:	ldr	x21, [x20, #1608]
 290:	ldr	x22, [x20, #1616]
 294:	cmp	x21, x22
 298:	b.eq	344 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x344>  // b.none
 29c:	adrp	x23, 0 <__pthread_key_create>
 2a0:	ldr	x24, [x23]
 2a4:	mov	x23, x24
 2a8:	b	2d4 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2d4>
 2ac:	add	x1, x19, #0x8
 2b0:	ldaxr	w0, [x1]
 2b4:	sub	w2, w0, #0x1
 2b8:	stlxr	w3, w2, [x1]
 2bc:	cbnz	w3, 2b0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2b0>
 2c0:	cmp	w0, #0x1
 2c4:	b.eq	2f0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2f0>  // b.none
 2c8:	add	x21, x21, #0x10
 2cc:	cmp	x22, x21
 2d0:	b.eq	344 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x344>  // b.none
 2d4:	ldr	x19, [x21, #8]
 2d8:	cbz	x19, 2c8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2c8>
 2dc:	cbnz	x24, 2ac <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2ac>
 2e0:	ldr	w0, [x19, #8]
 2e4:	sub	w1, w0, #0x1
 2e8:	str	w1, [x19, #8]
 2ec:	b	2c0 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2c0>
 2f0:	ldr	x0, [x19]
 2f4:	ldr	x1, [x0, #16]
 2f8:	mov	x0, x19
 2fc:	blr	x1
 300:	cbz	x23, 334 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x334>
 304:	add	x1, x19, #0xc
 308:	ldaxr	w0, [x1]
 30c:	sub	w2, w0, #0x1
 310:	stlxr	w3, w2, [x1]
 314:	cbnz	w3, 308 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x308>
 318:	cmp	w0, #0x1
 31c:	b.ne	2c8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2c8>  // b.any
 320:	ldr	x0, [x19]
 324:	ldr	x1, [x0, #24]
 328:	mov	x0, x19
 32c:	blr	x1
 330:	b	2c8 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2c8>
 334:	ldr	w0, [x19, #12]
 338:	sub	w1, w0, #0x1
 33c:	str	w1, [x19, #12]
 340:	b	318 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x318>
 344:	ldr	x0, [x20, #1608]
 348:	cbz	x0, 350 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x350>
 34c:	bl	0 <_ZdlPv>
 350:	ldr	x0, [x20, #1056]
 354:	add	x1, x20, #0x430
 358:	cmp	x0, x1
 35c:	b.eq	364 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x364>  // b.none
 360:	bl	0 <free>
 364:	ldr	x0, [x20, #16]
 368:	add	x20, x20, #0x20
 36c:	cmp	x0, x20
 370:	b.eq	388 <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x388>  // b.none
 374:	bl	0 <free>
 378:	ldp	x21, x22, [sp, #32]
 37c:	ldp	x23, x24, [sp, #48]
 380:	ldp	x25, x26, [sp, #64]
 384:	b	2c <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2c>
 388:	ldp	x21, x22, [sp, #32]
 38c:	ldp	x23, x24, [sp, #48]
 390:	ldp	x25, x26, [sp, #64]
 394:	b	2c <_ZN4llvm7remarks23BitstreamMetaSerializerD1Ev+0x2c>

Disassembly of section .text._ZN4llvm7remarks23BitstreamMetaSerializerD0Ev:

0000000000000000 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x1, x0
  14:	adrp	x0, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x1], #16
  24:	ldrb	w0, [x1, #1744]
  28:	cbnz	w0, 44 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x44>
  2c:	mov	x1, #0x718                 	// #1816
  30:	mov	x0, x20
  34:	bl	0 <_ZdlPvm>
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x29, x30, [sp], #80
  40:	ret
  44:	stp	x21, x22, [sp, #32]
  48:	stp	x23, x24, [sp, #48]
  4c:	stp	x25, x26, [sp, #64]
  50:	ldr	w0, [x20, #1592]
  54:	cbnz	w0, 98 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x98>
  58:	ldr	x1, [x20, #1632]
  5c:	ldr	x0, [x20, #1640]
  60:	cmp	x1, x0
  64:	b.ne	b8 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xb8>  // b.any
  68:	ldr	x1, [x20, #1608]
  6c:	ldr	x0, [x20, #1616]
  70:	cmp	x1, x0
  74:	b.ne	b8 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xb8>  // b.any
  78:	ldr	x21, [x20, #1656]
  7c:	ldr	x25, [x20, #1664]
  80:	cmp	x21, x25
  84:	b.eq	19c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x19c>  // b.none
  88:	adrp	x24, 0 <__pthread_key_create>
  8c:	ldr	x26, [x24]
  90:	mov	x24, x26
  94:	b	188 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x188>
  98:	adrp	x3, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x58                  	// #88
  a4:	adrp	x1, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>
  a8:	add	x1, x1, #0x0
  ac:	adrp	x0, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>
  b0:	add	x0, x0, #0x0
  b4:	bl	0 <__assert_fail>
  b8:	adrp	x3, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x59                  	// #89
  c4:	adrp	x1, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>
  c8:	add	x1, x1, #0x0
  cc:	adrp	x0, 0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <__assert_fail>
  d8:	add	x1, x19, #0x8
  dc:	ldaxr	w0, [x1]
  e0:	sub	w2, w0, #0x1
  e4:	stlxr	w3, w2, [x1]
  e8:	cbnz	w3, dc <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xdc>
  ec:	cmp	w0, #0x1
  f0:	b.eq	11c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x11c>  // b.none
  f4:	add	x22, x22, #0x10
  f8:	cmp	x23, x22
  fc:	b.eq	170 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x170>  // b.none
 100:	ldr	x19, [x22, #8]
 104:	cbz	x19, f4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xf4>
 108:	cbnz	x26, d8 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xd8>
 10c:	ldr	w0, [x19, #8]
 110:	sub	w1, w0, #0x1
 114:	str	w1, [x19, #8]
 118:	b	ec <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xec>
 11c:	ldr	x0, [x19]
 120:	ldr	x1, [x0, #16]
 124:	mov	x0, x19
 128:	blr	x1
 12c:	cbz	x24, 160 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x160>
 130:	add	x1, x19, #0xc
 134:	ldaxr	w0, [x1]
 138:	sub	w2, w0, #0x1
 13c:	stlxr	w3, w2, [x1]
 140:	cbnz	w3, 134 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x134>
 144:	cmp	w0, #0x1
 148:	b.ne	f4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xf4>  // b.any
 14c:	ldr	x0, [x19]
 150:	ldr	x1, [x0, #24]
 154:	mov	x0, x19
 158:	blr	x1
 15c:	b	f4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0xf4>
 160:	ldr	w0, [x19, #12]
 164:	sub	w1, w0, #0x1
 168:	str	w1, [x19, #12]
 16c:	b	144 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x144>
 170:	ldr	x0, [x21, #8]
 174:	cbz	x0, 17c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x17c>
 178:	bl	0 <_ZdlPv>
 17c:	add	x21, x21, #0x20
 180:	cmp	x25, x21
 184:	b.eq	19c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x19c>  // b.none
 188:	ldr	x22, [x21, #8]
 18c:	ldr	x23, [x21, #16]
 190:	cmp	x22, x23
 194:	b.ne	100 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x100>  // b.any
 198:	b	170 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x170>
 19c:	ldr	x0, [x20, #1656]
 1a0:	cbz	x0, 1a8 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1a8>
 1a4:	bl	0 <_ZdlPv>
 1a8:	ldr	x21, [x20, #1632]
 1ac:	ldr	x25, [x20, #1640]
 1b0:	cmp	x21, x25
 1b4:	b.eq	28c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x28c>  // b.none
 1b8:	adrp	x24, 0 <__pthread_key_create>
 1bc:	ldr	x26, [x24]
 1c0:	mov	x24, x26
 1c4:	b	278 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x278>
 1c8:	add	x1, x19, #0x8
 1cc:	ldaxr	w0, [x1]
 1d0:	sub	w2, w0, #0x1
 1d4:	stlxr	w3, w2, [x1]
 1d8:	cbnz	w3, 1cc <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1cc>
 1dc:	cmp	w0, #0x1
 1e0:	b.eq	20c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x20c>  // b.none
 1e4:	add	x22, x22, #0x10
 1e8:	cmp	x23, x22
 1ec:	b.eq	260 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x260>  // b.none
 1f0:	ldr	x19, [x22, #8]
 1f4:	cbz	x19, 1e4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1e4>
 1f8:	cbnz	x26, 1c8 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1c8>
 1fc:	ldr	w0, [x19, #8]
 200:	sub	w1, w0, #0x1
 204:	str	w1, [x19, #8]
 208:	b	1dc <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1dc>
 20c:	ldr	x0, [x19]
 210:	ldr	x1, [x0, #16]
 214:	mov	x0, x19
 218:	blr	x1
 21c:	cbz	x24, 250 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x250>
 220:	add	x1, x19, #0xc
 224:	ldaxr	w0, [x1]
 228:	sub	w2, w0, #0x1
 22c:	stlxr	w3, w2, [x1]
 230:	cbnz	w3, 224 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x224>
 234:	cmp	w0, #0x1
 238:	b.ne	1e4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1e4>  // b.any
 23c:	ldr	x0, [x19]
 240:	ldr	x1, [x0, #24]
 244:	mov	x0, x19
 248:	blr	x1
 24c:	b	1e4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1e4>
 250:	ldr	w0, [x19, #12]
 254:	sub	w1, w0, #0x1
 258:	str	w1, [x19, #12]
 25c:	b	234 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x234>
 260:	ldr	x0, [x21, #16]
 264:	cbz	x0, 26c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x26c>
 268:	bl	0 <_ZdlPv>
 26c:	add	x21, x21, #0x28
 270:	cmp	x25, x21
 274:	b.eq	28c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x28c>  // b.none
 278:	ldr	x22, [x21, #16]
 27c:	ldr	x23, [x21, #24]
 280:	cmp	x22, x23
 284:	b.ne	1f0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x1f0>  // b.any
 288:	b	260 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x260>
 28c:	ldr	x0, [x20, #1632]
 290:	cbz	x0, 298 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x298>
 294:	bl	0 <_ZdlPv>
 298:	ldr	x21, [x20, #1608]
 29c:	ldr	x22, [x20, #1616]
 2a0:	cmp	x21, x22
 2a4:	b.eq	350 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x350>  // b.none
 2a8:	adrp	x23, 0 <__pthread_key_create>
 2ac:	ldr	x24, [x23]
 2b0:	mov	x23, x24
 2b4:	b	2e0 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2e0>
 2b8:	add	x1, x19, #0x8
 2bc:	ldaxr	w0, [x1]
 2c0:	sub	w2, w0, #0x1
 2c4:	stlxr	w3, w2, [x1]
 2c8:	cbnz	w3, 2bc <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2bc>
 2cc:	cmp	w0, #0x1
 2d0:	b.eq	2fc <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2fc>  // b.none
 2d4:	add	x21, x21, #0x10
 2d8:	cmp	x22, x21
 2dc:	b.eq	350 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x350>  // b.none
 2e0:	ldr	x19, [x21, #8]
 2e4:	cbz	x19, 2d4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2d4>
 2e8:	cbnz	x24, 2b8 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2b8>
 2ec:	ldr	w0, [x19, #8]
 2f0:	sub	w1, w0, #0x1
 2f4:	str	w1, [x19, #8]
 2f8:	b	2cc <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2cc>
 2fc:	ldr	x0, [x19]
 300:	ldr	x1, [x0, #16]
 304:	mov	x0, x19
 308:	blr	x1
 30c:	cbz	x23, 340 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x340>
 310:	add	x1, x19, #0xc
 314:	ldaxr	w0, [x1]
 318:	sub	w2, w0, #0x1
 31c:	stlxr	w3, w2, [x1]
 320:	cbnz	w3, 314 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x314>
 324:	cmp	w0, #0x1
 328:	b.ne	2d4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2d4>  // b.any
 32c:	ldr	x0, [x19]
 330:	ldr	x1, [x0, #24]
 334:	mov	x0, x19
 338:	blr	x1
 33c:	b	2d4 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2d4>
 340:	ldr	w0, [x19, #12]
 344:	sub	w1, w0, #0x1
 348:	str	w1, [x19, #12]
 34c:	b	324 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x324>
 350:	ldr	x0, [x20, #1608]
 354:	cbz	x0, 35c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x35c>
 358:	bl	0 <_ZdlPv>
 35c:	ldr	x0, [x20, #1056]
 360:	add	x1, x20, #0x430
 364:	cmp	x0, x1
 368:	b.eq	370 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x370>  // b.none
 36c:	bl	0 <free>
 370:	ldr	x0, [x20, #16]
 374:	add	x1, x20, #0x20
 378:	cmp	x0, x1
 37c:	b.eq	394 <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x394>  // b.none
 380:	bl	0 <free>
 384:	ldp	x21, x22, [sp, #32]
 388:	ldp	x23, x24, [sp, #48]
 38c:	ldp	x25, x26, [sp, #64]
 390:	b	2c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2c>
 394:	ldp	x21, x22, [sp, #32]
 398:	ldp	x23, x24, [sp, #48]
 39c:	ldp	x25, x26, [sp, #64]
 3a0:	b	2c <_ZN4llvm7remarks23BitstreamMetaSerializerD0Ev+0x2c>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm15BitstreamWriter4EmitEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter4EmitEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	sub	w0, w2, #0x1
  14:	cmp	w0, #0x1f
  18:	b.hi	70 <_ZN4llvm15BitstreamWriter4EmitEjj+0x70>  // b.pmore
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	w20, w1
  24:	mov	w21, w2
  28:	neg	w0, w2
  2c:	mov	w1, #0xffffffff            	// #-1
  30:	lsr	w0, w1, w0
  34:	bics	wzr, w20, w0
  38:	b.ne	98 <_ZN4llvm15BitstreamWriter4EmitEjj+0x98>  // b.any
  3c:	ldr	w0, [x19, #8]
  40:	lsl	w22, w20, w0
  44:	ldr	w1, [x19, #12]
  48:	orr	w22, w22, w1
  4c:	str	w22, [x19, #12]
  50:	add	w0, w0, w2
  54:	cmp	w0, #0x1f
  58:	b.hi	bc <_ZN4llvm15BitstreamWriter4EmitEjj+0xbc>  // b.pmore
  5c:	str	w0, [x19, #8]
  60:	ldp	x21, x22, [sp, #32]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #64
  6c:	ret
  70:	stp	x21, x22, [sp, #32]
  74:	str	x23, [sp, #48]
  78:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x78                  	// #120
  84:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  88:	add	x1, x1, #0x0
  8c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  90:	add	x0, x0, #0x0
  94:	bl	0 <__assert_fail>
  98:	str	x23, [sp, #48]
  9c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  a0:	add	x3, x3, #0x0
  a4:	mov	w2, #0x79                  	// #121
  a8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  ac:	add	x1, x1, #0x0
  b0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  b4:	add	x0, x0, #0x0
  b8:	bl	0 <__assert_fail>
  bc:	str	x23, [sp, #48]
  c0:	ldr	x23, [x19]
  c4:	ldr	w2, [x23, #8]
  c8:	ldr	w0, [x23, #12]
  cc:	sub	x0, x0, x2
  d0:	cmp	x0, #0x3
  d4:	b.ls	130 <_ZN4llvm15BitstreamWriter4EmitEjj+0x130>  // b.plast
  d8:	ldr	w0, [x23, #8]
  dc:	ldr	x1, [x23]
  e0:	str	w22, [x1, x0]
  e4:	ldr	w0, [x23, #8]
  e8:	mov	w1, w0
  ec:	add	x1, x1, #0x4
  f0:	ldr	w2, [x23, #12]
  f4:	cmp	x1, x2
  f8:	b.hi	148 <_ZN4llvm15BitstreamWriter4EmitEjj+0x148>  // b.pmore
  fc:	add	w0, w0, #0x4
 100:	str	w0, [x23, #8]
 104:	ldr	w2, [x19, #8]
 108:	neg	w1, w2
 10c:	lsr	w20, w20, w1
 110:	cmp	w2, #0x0
 114:	csel	w20, w20, w2, ne  // ne = any
 118:	str	w20, [x19, #12]
 11c:	add	w2, w2, w21
 120:	and	w2, w2, #0x1f
 124:	str	w2, [x19, #8]
 128:	ldr	x23, [sp, #48]
 12c:	b	60 <_ZN4llvm15BitstreamWriter4EmitEjj+0x60>
 130:	mov	x3, #0x1                   	// #1
 134:	add	x2, x2, #0x4
 138:	add	x1, x23, #0x10
 13c:	mov	x0, x23
 140:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 144:	b	d8 <_ZN4llvm15BitstreamWriter4EmitEjj+0xd8>
 148:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x43                  	// #67
 154:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 158:	add	x1, x1, #0x0
 15c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 160:	add	x0, x0, #0x0
 164:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter7EmitVBREjj:

0000000000000000 <_ZN4llvm15BitstreamWriter7EmitVBREjj>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	cmp	w2, #0x20
   c:	b.hi	94 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x94>  // b.pmore
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x19, x0
  24:	mov	w21, w1
  28:	mov	w24, w2
  2c:	sub	w26, w2, #0x1
  30:	mov	w25, #0x1                   	// #1
  34:	lsl	w25, w25, w26
  38:	cmp	w25, w1
  3c:	b.hi	228 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x228>  // b.pmore
  40:	stp	x27, x28, [sp, #80]
  44:	sub	w27, w25, #0x1
  48:	str	w25, [sp, #108]
  4c:	and	w20, w1, w27
  50:	orr	w20, w20, w25
  54:	cmp	w26, #0x1f
  58:	b.hi	c8 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0xc8>  // b.pmore
  5c:	neg	w0, w2
  60:	mov	w1, #0xffffffff            	// #-1
  64:	lsr	w0, w1, w0
  68:	mvn	w28, w0
  6c:	bics	wzr, w20, w0
  70:	b.eq	174 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x174>  // b.none
  74:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x79                  	// #121
  80:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	stp	x19, x20, [sp, #16]
  98:	stp	x21, x22, [sp, #32]
  9c:	stp	x23, x24, [sp, #48]
  a0:	stp	x25, x26, [sp, #64]
  a4:	stp	x27, x28, [sp, #80]
  a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x93                  	// #147
  b4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  b8:	add	x1, x1, #0x0
  bc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  c0:	add	x0, x0, #0x0
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x78                  	// #120
  d4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  d8:	add	x1, x1, #0x0
  dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
  e0:	add	x0, x0, #0x0
  e4:	bl	0 <__assert_fail>
  e8:	ldr	x23, [x19]
  ec:	ldr	w2, [x23, #8]
  f0:	ldr	w0, [x23, #12]
  f4:	sub	x0, x0, x2
  f8:	cmp	x0, #0x3
  fc:	b.ls	19c <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x19c>  // b.plast
 100:	ldr	w0, [x23, #8]
 104:	ldr	x1, [x23]
 108:	str	w22, [x1, x0]
 10c:	ldr	w0, [x23, #8]
 110:	mov	w1, w0
 114:	add	x1, x1, #0x4
 118:	ldr	w2, [x23, #12]
 11c:	cmp	x1, x2
 120:	b.hi	1b4 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x1b4>  // b.pmore
 124:	add	w0, w0, #0x4
 128:	str	w0, [x23, #8]
 12c:	ldr	w0, [x19, #8]
 130:	mov	w1, #0x20                  	// #32
 134:	sub	w1, w1, w0
 138:	lsr	w20, w20, w1
 13c:	cmp	w0, #0x0
 140:	csel	w20, w20, w0, ne  // ne = any
 144:	str	w20, [x19, #12]
 148:	add	w0, w24, w0
 14c:	and	w0, w0, #0x1f
 150:	str	w0, [x19, #8]
 154:	lsr	w21, w21, w26
 158:	cmp	w25, w21
 15c:	b.hi	1d4 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x1d4>  // b.pmore
 160:	and	w20, w21, w27
 164:	ldr	w0, [sp, #108]
 168:	orr	w20, w20, w0
 16c:	tst	w20, w28
 170:	b.ne	74 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x74>  // b.any
 174:	ldr	w0, [x19, #8]
 178:	lsl	w22, w20, w0
 17c:	ldr	w1, [x19, #12]
 180:	orr	w22, w22, w1
 184:	str	w22, [x19, #12]
 188:	add	w0, w24, w0
 18c:	cmp	w0, #0x1f
 190:	b.hi	e8 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0xe8>  // b.pmore
 194:	str	w0, [x19, #8]
 198:	b	154 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x154>
 19c:	mov	x3, #0x1                   	// #1
 1a0:	add	x2, x2, #0x4
 1a4:	add	x1, x23, #0x10
 1a8:	mov	x0, x23
 1ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1b0:	b	100 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x100>
 1b4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x43                  	// #67
 1c0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 1c4:	add	x1, x1, #0x0
 1c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 1cc:	add	x0, x0, #0x0
 1d0:	bl	0 <__assert_fail>
 1d4:	ldp	x27, x28, [sp, #80]
 1d8:	neg	w0, w24
 1dc:	mov	w1, #0xffffffff            	// #-1
 1e0:	lsr	w0, w1, w0
 1e4:	bics	wzr, w21, w0
 1e8:	b.ne	254 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x254>  // b.any
 1ec:	ldr	w0, [x19, #8]
 1f0:	lsl	w20, w21, w0
 1f4:	ldr	w1, [x19, #12]
 1f8:	orr	w20, w20, w1
 1fc:	str	w20, [x19, #12]
 200:	add	w0, w24, w0
 204:	cmp	w0, #0x1f
 208:	b.hi	278 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x278>  // b.pmore
 20c:	str	w0, [x19, #8]
 210:	ldp	x19, x20, [sp, #16]
 214:	ldp	x21, x22, [sp, #32]
 218:	ldp	x23, x24, [sp, #48]
 21c:	ldp	x25, x26, [sp, #64]
 220:	ldp	x29, x30, [sp], #112
 224:	ret
 228:	cmp	w26, #0x1f
 22c:	b.ls	1d8 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x1d8>  // b.plast
 230:	stp	x27, x28, [sp, #80]
 234:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 238:	add	x3, x3, #0x0
 23c:	mov	w2, #0x78                  	// #120
 240:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 244:	add	x1, x1, #0x0
 248:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 24c:	add	x0, x0, #0x0
 250:	bl	0 <__assert_fail>
 254:	stp	x27, x28, [sp, #80]
 258:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 25c:	add	x3, x3, #0x0
 260:	mov	w2, #0x79                  	// #121
 264:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 268:	add	x1, x1, #0x0
 26c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 270:	add	x0, x0, #0x0
 274:	bl	0 <__assert_fail>
 278:	ldr	x22, [x19]
 27c:	ldr	w2, [x22, #8]
 280:	ldr	w0, [x22, #12]
 284:	sub	x0, x0, x2
 288:	cmp	x0, #0x3
 28c:	b.ls	2e4 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x2e4>  // b.plast
 290:	ldr	w0, [x22, #8]
 294:	ldr	x1, [x22]
 298:	str	w20, [x1, x0]
 29c:	ldr	w0, [x22, #8]
 2a0:	mov	w1, w0
 2a4:	add	x1, x1, #0x4
 2a8:	ldr	w2, [x22, #12]
 2ac:	cmp	x1, x2
 2b0:	b.hi	2fc <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x2fc>  // b.pmore
 2b4:	add	w0, w0, #0x4
 2b8:	str	w0, [x22, #8]
 2bc:	ldr	w0, [x19, #8]
 2c0:	neg	w1, w0
 2c4:	lsr	w21, w21, w1
 2c8:	cmp	w0, #0x0
 2cc:	csel	w21, w21, w0, ne  // ne = any
 2d0:	str	w21, [x19, #12]
 2d4:	add	w24, w24, w0
 2d8:	and	w24, w24, #0x1f
 2dc:	str	w24, [x19, #8]
 2e0:	b	210 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x210>
 2e4:	mov	x3, #0x1                   	// #1
 2e8:	add	x2, x2, #0x4
 2ec:	add	x1, x22, #0x10
 2f0:	mov	x0, x22
 2f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 2f8:	b	290 <_ZN4llvm15BitstreamWriter7EmitVBREjj+0x290>
 2fc:	stp	x27, x28, [sp, #80]
 300:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 304:	add	x3, x3, #0x0
 308:	mov	w2, #0x43                  	// #67
 30c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 310:	add	x1, x1, #0x0
 314:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter7EmitVBREjj>
 318:	add	x0, x0, #0x0
 31c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter9EmitVBR64Emj:

0000000000000000 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	cmp	w2, #0x20
   c:	b.hi	a8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xa8>  // b.pmore
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	mov	x19, x0
  20:	mov	x21, x1
  24:	mov	w24, w2
  28:	mov	w22, w1
  2c:	tst	x1, #0xffffffff00000000
  30:	b.eq	dc <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xdc>  // b.none
  34:	stp	x25, x26, [sp, #64]
  38:	sub	w26, w2, #0x1
  3c:	mov	w25, #0x1                   	// #1
  40:	lsl	w25, w25, w26
  44:	cmp	x1, x25
  48:	b.cc	1f0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x1f0>  // b.lo, b.ul, b.last
  4c:	stp	x27, x28, [sp, #80]
  50:	mov	w20, #0x1                   	// #1
  54:	lsl	w0, w20, w26
  58:	sub	w27, w0, #0x1
  5c:	str	w0, [sp, #108]
  60:	and	w20, w1, w27
  64:	orr	w20, w20, w0
  68:	cmp	w26, #0x1f
  6c:	b.hi	e4 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xe4>  // b.pmore
  70:	neg	w0, w2
  74:	mov	w1, #0xffffffff            	// #-1
  78:	lsr	w0, w1, w0
  7c:	mvn	w28, w0
  80:	bics	wzr, w20, w0
  84:	b.eq	190 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x190>  // b.none
  88:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x79                  	// #121
  94:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  98:	add	x1, x1, #0x0
  9c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <__assert_fail>
  a8:	stp	x19, x20, [sp, #16]
  ac:	stp	x21, x22, [sp, #32]
  b0:	stp	x23, x24, [sp, #48]
  b4:	stp	x25, x26, [sp, #64]
  b8:	stp	x27, x28, [sp, #80]
  bc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0xa0                  	// #160
  c8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  cc:	add	x1, x1, #0x0
  d0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  d4:	add	x0, x0, #0x0
  d8:	bl	0 <__assert_fail>
  dc:	bl	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  e0:	b	330 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x330>
  e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x78                  	// #120
  f0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  f4:	add	x1, x1, #0x0
  f8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <__assert_fail>
 104:	ldr	x23, [x19]
 108:	ldr	w2, [x23, #8]
 10c:	ldr	w0, [x23, #12]
 110:	sub	x0, x0, x2
 114:	cmp	x0, #0x3
 118:	b.ls	1b8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x1b8>  // b.plast
 11c:	ldr	w0, [x23, #8]
 120:	ldr	x1, [x23]
 124:	str	w22, [x1, x0]
 128:	ldr	w0, [x23, #8]
 12c:	mov	w1, w0
 130:	add	x1, x1, #0x4
 134:	ldr	w2, [x23, #12]
 138:	cmp	x1, x2
 13c:	b.hi	1d0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x1d0>  // b.pmore
 140:	add	w0, w0, #0x4
 144:	str	w0, [x23, #8]
 148:	ldr	w0, [x19, #8]
 14c:	mov	w1, #0x20                  	// #32
 150:	sub	w1, w1, w0
 154:	lsr	w20, w20, w1
 158:	cmp	w0, #0x0
 15c:	csel	w20, w20, w0, ne  // ne = any
 160:	str	w20, [x19, #12]
 164:	add	w0, w24, w0
 168:	and	w0, w0, #0x1f
 16c:	str	w0, [x19, #8]
 170:	lsr	x21, x21, x26
 174:	cmp	x21, x25
 178:	b.cc	2ec <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x2ec>  // b.lo, b.ul, b.last
 17c:	and	w20, w27, w21
 180:	ldr	w0, [sp, #108]
 184:	orr	w20, w20, w0
 188:	tst	w20, w28
 18c:	b.ne	88 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x88>  // b.any
 190:	ldr	w0, [x19, #8]
 194:	lsl	w22, w20, w0
 198:	ldr	w1, [x19, #12]
 19c:	orr	w22, w22, w1
 1a0:	str	w22, [x19, #12]
 1a4:	add	w0, w24, w0
 1a8:	cmp	w0, #0x1f
 1ac:	b.hi	104 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x104>  // b.pmore
 1b0:	str	w0, [x19, #8]
 1b4:	b	170 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x170>
 1b8:	mov	x3, #0x1                   	// #1
 1bc:	add	x2, x2, #0x4
 1c0:	add	x1, x23, #0x10
 1c4:	mov	x0, x23
 1c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1cc:	b	11c <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x11c>
 1d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 1d4:	add	x3, x3, #0x0
 1d8:	mov	w2, #0x43                  	// #67
 1dc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 1e0:	add	x1, x1, #0x0
 1e4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <__assert_fail>
 1f0:	cmp	w26, #0x1f
 1f4:	b.ls	2f4 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x2f4>  // b.plast
 1f8:	stp	x27, x28, [sp, #80]
 1fc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x78                  	// #120
 208:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 20c:	add	x1, x1, #0x0
 210:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 214:	add	x0, x0, #0x0
 218:	bl	0 <__assert_fail>
 21c:	stp	x27, x28, [sp, #80]
 220:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 224:	add	x3, x3, #0x0
 228:	mov	w2, #0x79                  	// #121
 22c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 230:	add	x1, x1, #0x0
 234:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 238:	add	x0, x0, #0x0
 23c:	bl	0 <__assert_fail>
 240:	ldr	x21, [x19]
 244:	ldr	w2, [x21, #8]
 248:	ldr	w0, [x21, #12]
 24c:	sub	x0, x0, x2
 250:	cmp	x0, #0x3
 254:	b.ls	2b0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x2b0>  // b.plast
 258:	ldr	w0, [x21, #8]
 25c:	ldr	x1, [x21]
 260:	str	w20, [x1, x0]
 264:	ldr	w0, [x21, #8]
 268:	mov	w1, w0
 26c:	add	x1, x1, #0x4
 270:	ldr	w2, [x21, #12]
 274:	cmp	x1, x2
 278:	b.hi	2c8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x2c8>  // b.pmore
 27c:	add	w0, w0, #0x4
 280:	str	w0, [x21, #8]
 284:	ldr	w0, [x19, #8]
 288:	neg	w1, w0
 28c:	lsr	w22, w22, w1
 290:	cmp	w0, #0x0
 294:	csel	w22, w22, w0, ne  // ne = any
 298:	str	w22, [x19, #12]
 29c:	add	w0, w24, w0
 2a0:	and	w0, w0, #0x1f
 2a4:	str	w0, [x19, #8]
 2a8:	ldp	x25, x26, [sp, #64]
 2ac:	b	330 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x330>
 2b0:	mov	x3, #0x1                   	// #1
 2b4:	add	x2, x2, #0x4
 2b8:	add	x1, x21, #0x10
 2bc:	mov	x0, x21
 2c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 2c4:	b	258 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x258>
 2c8:	stp	x27, x28, [sp, #80]
 2cc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 2d0:	add	x3, x3, #0x0
 2d4:	mov	w2, #0x43                  	// #67
 2d8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 2dc:	add	x1, x1, #0x0
 2e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
 2e4:	add	x0, x0, #0x0
 2e8:	bl	0 <__assert_fail>
 2ec:	mov	w22, w21
 2f0:	ldp	x27, x28, [sp, #80]
 2f4:	neg	w0, w24
 2f8:	mov	w1, #0xffffffff            	// #-1
 2fc:	lsr	w0, w1, w0
 300:	bics	wzr, w22, w0
 304:	b.ne	21c <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x21c>  // b.any
 308:	ldr	w0, [x19, #8]
 30c:	lsl	w20, w22, w0
 310:	ldr	w1, [x19, #12]
 314:	orr	w20, w20, w1
 318:	str	w20, [x19, #12]
 31c:	add	w0, w24, w0
 320:	cmp	w0, #0x1f
 324:	b.hi	240 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x240>  // b.pmore
 328:	str	w0, [x19, #8]
 32c:	ldp	x25, x26, [sp, #64]
 330:	ldp	x19, x20, [sp, #16]
 334:	ldp	x21, x22, [sp, #32]
 338:	ldp	x23, x24, [sp, #48]
 33c:	ldp	x29, x30, [sp], #112
 340:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x0
  10:	cmp	x1, x0
  14:	b.eq	200 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x200>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	stp	x23, x24, [sp, #48]
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x25, x1
  28:	ldr	x21, [x1, #8]
  2c:	ldr	x19, [x1]
  30:	sub	x26, x21, x19
  34:	asr	x23, x26, #4
  38:	ldr	x20, [x0]
  3c:	ldr	x0, [x0, #16]
  40:	sub	x0, x0, x20
  44:	cmp	x23, x0, asr #4
  48:	b.hi	84 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x84>  // b.pmore
  4c:	ldr	x0, [x22, #8]
  50:	sub	x0, x0, x20
  54:	asr	x24, x0, #4
  58:	cmp	x23, x0, asr #4
  5c:	b.hi	3c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3c8>  // b.pmore
  60:	cmp	x26, #0x0
  64:	b.le	314 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x314>
  68:	stp	x27, x28, [sp, #80]
  6c:	mov	x21, x20
  70:	adrp	x27, 0 <__pthread_key_create>
  74:	ldr	x28, [x27]
  78:	str	x28, [sp, #104]
  7c:	mov	x27, x28
  80:	b	250 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x250>
  84:	cbz	x23, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xc0>
  88:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
  8c:	cmp	x23, x0
  90:	b.hi	b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xb8>  // b.pmore
  94:	mov	x0, x26
  98:	bl	0 <_Znwm>
  9c:	mov	x20, x0
  a0:	cmp	x19, x21
  a4:	b.eq	118 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x118>  // b.none
  a8:	mov	x2, x20
  ac:	adrp	x3, 0 <__pthread_key_create>
  b0:	ldr	x3, [x3]
  b4:	b	e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xe8>
  b8:	stp	x27, x28, [sp, #80]
  bc:	bl	0 <_ZSt17__throw_bad_allocv>
  c0:	mov	x20, #0x0                   	// #0
  c4:	b	a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xa0>
  c8:	ldaxr	w0, [x1]
  cc:	add	w0, w0, #0x1
  d0:	stlxr	w4, w0, [x1]
  d4:	cbnz	w4, c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xc8>
  d8:	add	x2, x2, #0x10
  dc:	add	x19, x19, #0x10
  e0:	cmp	x21, x19
  e4:	b.eq	118 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x118>  // b.none
  e8:	ldr	x0, [x19]
  ec:	str	x0, [x2]
  f0:	ldr	x1, [x19, #8]
  f4:	str	x1, [x2, #8]
  f8:	cbz	x1, d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xd8>
  fc:	cbz	x3, 108 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x108>
 100:	add	x1, x1, #0x8
 104:	b	c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xc8>
 108:	ldr	w0, [x1, #8]
 10c:	add	w0, w0, #0x1
 110:	str	w0, [x1, #8]
 114:	b	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xd8>
 118:	ldr	x19, [x22]
 11c:	ldr	x23, [x22, #8]
 120:	cmp	x19, x23
 124:	b.eq	1d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1d0>  // b.none
 128:	adrp	x25, 0 <__pthread_key_create>
 12c:	ldr	x24, [x25]
 130:	mov	x25, x24
 134:	b	160 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x160>
 138:	add	x1, x21, #0x8
 13c:	ldaxr	w0, [x1]
 140:	sub	w2, w0, #0x1
 144:	stlxr	w3, w2, [x1]
 148:	cbnz	w3, 13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x13c>
 14c:	cmp	w0, #0x1
 150:	b.eq	17c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x17c>  // b.none
 154:	add	x19, x19, #0x10
 158:	cmp	x23, x19
 15c:	b.eq	1d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1d0>  // b.none
 160:	ldr	x21, [x19, #8]
 164:	cbz	x21, 154 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x154>
 168:	cbnz	x24, 138 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x138>
 16c:	ldr	w0, [x21, #8]
 170:	sub	w1, w0, #0x1
 174:	str	w1, [x21, #8]
 178:	b	14c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x14c>
 17c:	ldr	x0, [x21]
 180:	ldr	x1, [x0, #16]
 184:	mov	x0, x21
 188:	blr	x1
 18c:	cbz	x25, 1c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1c0>
 190:	add	x1, x21, #0xc
 194:	ldaxr	w0, [x1]
 198:	sub	w2, w0, #0x1
 19c:	stlxr	w3, w2, [x1]
 1a0:	cbnz	w3, 194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x194>
 1a4:	cmp	w0, #0x1
 1a8:	b.ne	154 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x154>  // b.any
 1ac:	ldr	x0, [x21]
 1b0:	ldr	x1, [x0, #24]
 1b4:	mov	x0, x21
 1b8:	blr	x1
 1bc:	b	154 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x154>
 1c0:	ldr	w0, [x21, #12]
 1c4:	sub	w1, w0, #0x1
 1c8:	str	w1, [x21, #12]
 1cc:	b	1a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a4>
 1d0:	ldr	x0, [x22]
 1d4:	cbz	x0, 1dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1dc>
 1d8:	bl	0 <_ZdlPv>
 1dc:	str	x20, [x22]
 1e0:	add	x20, x20, x26
 1e4:	str	x20, [x22, #16]
 1e8:	ldr	x0, [x22]
 1ec:	add	x26, x0, x26
 1f0:	str	x26, [x22, #8]
 1f4:	ldp	x19, x20, [sp, #16]
 1f8:	ldp	x23, x24, [sp, #48]
 1fc:	ldp	x25, x26, [sp, #64]
 200:	mov	x0, x22
 204:	ldp	x21, x22, [sp, #32]
 208:	ldp	x29, x30, [sp], #112
 20c:	ret
 210:	ldr	w0, [x24, #8]
 214:	add	w0, w0, #0x1
 218:	str	w0, [x24, #8]
 21c:	b	284 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x284>
 220:	ldaxr	w0, [x1]
 224:	sub	w2, w0, #0x1
 228:	stlxr	w3, w2, [x1]
 22c:	cbnz	w3, 220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x220>
 230:	cmp	w0, #0x1
 234:	b.eq	2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2a8>  // b.none
 238:	str	x24, [x21, #8]
 23c:	add	x19, x19, #0x10
 240:	add	x21, x21, #0x10
 244:	sub	x23, x23, #0x1
 248:	cmp	x23, #0x0
 24c:	b.le	300 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x300>
 250:	ldr	x0, [x19]
 254:	str	x0, [x21]
 258:	ldr	x24, [x19, #8]
 25c:	ldr	x0, [x21, #8]
 260:	cmp	x24, x0
 264:	b.eq	23c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x23c>  // b.none
 268:	cbz	x24, 284 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x284>
 26c:	cbz	x27, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x210>
 270:	add	x0, x24, #0x8
 274:	ldaxr	w1, [x0]
 278:	add	w1, w1, #0x1
 27c:	stlxr	w2, w1, [x0]
 280:	cbnz	w2, 274 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x274>
 284:	ldr	x25, [x21, #8]
 288:	cbz	x25, 238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x238>
 28c:	cbz	x28, 298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x298>
 290:	add	x1, x25, #0x8
 294:	b	220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x220>
 298:	ldr	w0, [x25, #8]
 29c:	sub	w1, w0, #0x1
 2a0:	str	w1, [x25, #8]
 2a4:	b	230 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x230>
 2a8:	ldr	x0, [x25]
 2ac:	ldr	x1, [x0, #16]
 2b0:	mov	x0, x25
 2b4:	blr	x1
 2b8:	ldr	x0, [sp, #104]
 2bc:	cbz	x0, 2f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2f0>
 2c0:	add	x1, x25, #0xc
 2c4:	ldaxr	w0, [x1]
 2c8:	sub	w2, w0, #0x1
 2cc:	stlxr	w3, w2, [x1]
 2d0:	cbnz	w3, 2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2c4>
 2d4:	cmp	w0, #0x1
 2d8:	b.ne	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x238>  // b.any
 2dc:	ldr	x0, [x25]
 2e0:	ldr	x1, [x0, #24]
 2e4:	mov	x0, x25
 2e8:	blr	x1
 2ec:	b	238 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x238>
 2f0:	ldr	w0, [x25, #12]
 2f4:	sub	w1, w0, #0x1
 2f8:	str	w1, [x25, #12]
 2fc:	b	2d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2d4>
 300:	cmp	x26, #0x0
 304:	mov	x0, #0x10                  	// #16
 308:	csel	x0, x26, x0, gt
 30c:	add	x20, x20, x0
 310:	ldp	x27, x28, [sp, #80]
 314:	ldr	x21, [x22, #8]
 318:	cmp	x21, x20
 31c:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 320:	adrp	x24, 0 <__pthread_key_create>
 324:	ldr	x23, [x24]
 328:	mov	x24, x23
 32c:	b	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x358>
 330:	add	x1, x19, #0x8
 334:	ldaxr	w0, [x1]
 338:	sub	w2, w0, #0x1
 33c:	stlxr	w3, w2, [x1]
 340:	cbnz	w3, 334 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x334>
 344:	cmp	w0, #0x1
 348:	b.eq	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x374>  // b.none
 34c:	add	x20, x20, #0x10
 350:	cmp	x20, x21
 354:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 358:	ldr	x19, [x20, #8]
 35c:	cbz	x19, 34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x34c>
 360:	cbnz	x23, 330 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x330>
 364:	ldr	w0, [x19, #8]
 368:	sub	w1, w0, #0x1
 36c:	str	w1, [x19, #8]
 370:	b	344 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x344>
 374:	ldr	x0, [x19]
 378:	ldr	x1, [x0, #16]
 37c:	mov	x0, x19
 380:	blr	x1
 384:	cbz	x24, 3b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3b8>
 388:	add	x1, x19, #0xc
 38c:	ldaxr	w0, [x1]
 390:	sub	w2, w0, #0x1
 394:	stlxr	w3, w2, [x1]
 398:	cbnz	w3, 38c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x38c>
 39c:	cmp	w0, #0x1
 3a0:	b.ne	34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x34c>  // b.any
 3a4:	ldr	x0, [x19]
 3a8:	ldr	x1, [x0, #24]
 3ac:	mov	x0, x19
 3b0:	blr	x1
 3b4:	b	34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x34c>
 3b8:	ldr	w0, [x19, #12]
 3bc:	sub	w1, w0, #0x1
 3c0:	str	w1, [x19, #12]
 3c4:	b	39c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x39c>
 3c8:	cmp	x0, #0x0
 3cc:	b.le	4dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4dc>
 3d0:	stp	x27, x28, [sp, #80]
 3d4:	adrp	x27, 0 <__pthread_key_create>
 3d8:	ldr	x28, [x27]
 3dc:	str	x28, [sp, #104]
 3e0:	mov	x27, x28
 3e4:	b	428 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x428>
 3e8:	ldr	w0, [x21, #8]
 3ec:	add	w0, w0, #0x1
 3f0:	str	w0, [x21, #8]
 3f4:	b	45c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x45c>
 3f8:	ldaxr	w0, [x1]
 3fc:	sub	w2, w0, #0x1
 400:	stlxr	w3, w2, [x1]
 404:	cbnz	w3, 3f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3f8>
 408:	cmp	w0, #0x1
 40c:	b.eq	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x480>  // b.none
 410:	str	x21, [x20, #8]
 414:	add	x19, x19, #0x10
 418:	add	x20, x20, #0x10
 41c:	sub	x24, x24, #0x1
 420:	cmp	x24, #0x0
 424:	b.le	4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4d8>
 428:	ldr	x0, [x19]
 42c:	str	x0, [x20]
 430:	ldr	x21, [x19, #8]
 434:	ldr	x0, [x20, #8]
 438:	cmp	x21, x0
 43c:	b.eq	414 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x414>  // b.none
 440:	cbz	x21, 45c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x45c>
 444:	cbz	x27, 3e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e8>
 448:	add	x0, x21, #0x8
 44c:	ldaxr	w1, [x0]
 450:	add	w1, w1, #0x1
 454:	stlxr	w2, w1, [x0]
 458:	cbnz	w2, 44c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x44c>
 45c:	ldr	x23, [x20, #8]
 460:	cbz	x23, 410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>
 464:	cbz	x28, 470 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x470>
 468:	add	x1, x23, #0x8
 46c:	b	3f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3f8>
 470:	ldr	w0, [x23, #8]
 474:	sub	w1, w0, #0x1
 478:	str	w1, [x23, #8]
 47c:	b	408 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x408>
 480:	ldr	x0, [x23]
 484:	ldr	x1, [x0, #16]
 488:	mov	x0, x23
 48c:	blr	x1
 490:	ldr	x0, [sp, #104]
 494:	cbz	x0, 4c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4c8>
 498:	add	x1, x23, #0xc
 49c:	ldaxr	w0, [x1]
 4a0:	sub	w2, w0, #0x1
 4a4:	stlxr	w3, w2, [x1]
 4a8:	cbnz	w3, 49c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x49c>
 4ac:	cmp	w0, #0x1
 4b0:	b.ne	410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>  // b.any
 4b4:	ldr	x0, [x23]
 4b8:	ldr	x1, [x0, #24]
 4bc:	mov	x0, x23
 4c0:	blr	x1
 4c4:	b	410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>
 4c8:	ldr	w0, [x23, #12]
 4cc:	sub	w1, w0, #0x1
 4d0:	str	w1, [x23, #12]
 4d4:	b	4ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4ac>
 4d8:	ldp	x27, x28, [sp, #80]
 4dc:	ldr	x2, [x22, #8]
 4e0:	ldr	x0, [x22]
 4e4:	sub	x1, x2, x0
 4e8:	ldr	x0, [x25]
 4ec:	add	x0, x0, x1
 4f0:	ldr	x4, [x25, #8]
 4f4:	cmp	x0, x4
 4f8:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 4fc:	adrp	x5, 0 <__pthread_key_create>
 500:	ldr	x5, [x5]
 504:	b	528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x528>
 508:	ldaxr	w3, [x1]
 50c:	add	w3, w3, #0x1
 510:	stlxr	w6, w3, [x1]
 514:	cbnz	w6, 508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x508>
 518:	add	x0, x0, #0x10
 51c:	add	x2, x2, #0x10
 520:	cmp	x4, x0
 524:	b.eq	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e8>  // b.none
 528:	ldr	x1, [x0]
 52c:	str	x1, [x2]
 530:	ldr	x1, [x0, #8]
 534:	str	x1, [x2, #8]
 538:	cbz	x1, 518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x518>
 53c:	cbz	x5, 548 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x548>
 540:	add	x1, x1, #0x8
 544:	b	508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x508>
 548:	ldr	w3, [x1, #8]
 54c:	add	w3, w3, #0x1
 550:	str	w3, [x1, #8]
 554:	b	518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x518>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	w1, [x0, #8]
  18:	ldr	w0, [x0, #12]
  1c:	cmp	w1, w0
  20:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x60>  // b.hs, b.nlast
  24:	ldr	x2, [x20]
  28:	ldr	w1, [x19, #8]
  2c:	ldr	x0, [x19]
  30:	str	x2, [x0, x1, lsl #3]
  34:	ldr	w0, [x19, #8]
  38:	mov	w1, w0
  3c:	add	x1, x1, #0x1
  40:	ldr	w2, [x19, #12]
  44:	cmp	x1, x2
  48:	b.hi	78 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x78>  // b.pmore
  4c:	add	w0, w0, #0x1
  50:	str	w0, [x19, #8]
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret
  60:	mov	x3, #0x8                   	// #8
  64:	mov	x2, #0x0                   	// #0
  68:	add	x1, x19, #0x10
  6c:	mov	x0, x19
  70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  74:	b	24 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm+0x24>
  78:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  88:	add	x1, x1, #0x0
  8c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseImLb1EE9push_backERKm>
  90:	add	x0, x0, #0x0
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x23, x0
  20:	mov	x19, x1
  24:	mov	x26, x1
  28:	ldr	x25, [x0, #8]
  2c:	ldr	x24, [x0]
  30:	sub	x0, x25, x24
  34:	asr	x0, x0, #3
  38:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  3c:	movk	x1, #0xcccd
  40:	mul	x0, x0, x1
  44:	mov	x1, #0x3333333333333333    	// #3689348814741910323
  48:	movk	x1, #0x333, lsl #48
  4c:	cmp	x0, x1
  50:	b.eq	200 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x200>  // b.none
  54:	mov	x20, x2
  58:	mov	x27, x3
  5c:	cmp	x0, #0x0
  60:	csinc	x1, x0, xzr, ne  // ne = any
  64:	adds	x0, x1, x0
  68:	b.cs	214 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x214>  // b.hs, b.nlast
  6c:	mov	x21, #0x3333333333333333    	// #3689348814741910323
  70:	movk	x21, #0x333, lsl #48
  74:	cmp	x0, x21
  78:	csel	x21, x0, x21, ls  // ls = plast
  7c:	sub	x28, x19, x24
  80:	mov	x22, #0x0                   	// #0
  84:	cbz	x0, 98 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
  88:	add	x0, x21, x21, lsl #2
  8c:	lsl	x0, x0, #3
  90:	bl	0 <_Znwm>
  94:	mov	x22, x0
  98:	add	x0, x22, x28
  9c:	ldr	x1, [x27]
  a0:	ldr	w2, [x20]
  a4:	str	w2, [x22, x28]
  a8:	str	x1, [x0, #8]
  ac:	str	xzr, [x0, #16]
  b0:	str	xzr, [x0, #24]
  b4:	str	xzr, [x0, #32]
  b8:	cmp	x19, x24
  bc:	b.eq	20c <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x20c>  // b.none
  c0:	mov	x1, x22
  c4:	mov	x0, x24
  c8:	ldr	w2, [x0]
  cc:	str	w2, [x1]
  d0:	ldr	x2, [x0, #8]
  d4:	str	x2, [x1, #8]
  d8:	ldr	x2, [x0, #16]
  dc:	str	x2, [x1, #16]
  e0:	ldr	x2, [x0, #24]
  e4:	str	x2, [x1, #24]
  e8:	ldr	x2, [x0, #32]
  ec:	str	x2, [x1, #32]
  f0:	str	xzr, [x0, #32]
  f4:	str	xzr, [x0, #24]
  f8:	str	xzr, [x0, #16]
  fc:	add	x0, x0, #0x28
 100:	add	x1, x1, #0x28
 104:	cmp	x26, x0
 108:	b.ne	c8 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc8>  // b.any
 10c:	sub	x20, x19, #0x28
 110:	sub	x20, x20, x24
 114:	lsr	x20, x20, #3
 118:	mov	x0, #0xcccd                	// #52429
 11c:	movk	x0, #0xcccc, lsl #16
 120:	movk	x0, #0xcccc, lsl #32
 124:	movk	x0, #0xccc, lsl #48
 128:	mul	x20, x20, x0
 12c:	and	x20, x20, #0x1fffffffffffffff
 130:	add	x20, x20, #0x1
 134:	add	x20, x20, x20, lsl #2
 138:	add	x20, x22, x20, lsl #3
 13c:	add	x20, x20, #0x28
 140:	cmp	x19, x25
 144:	b.eq	1c4 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c4>  // b.none
 148:	mov	x1, x20
 14c:	mov	x0, x19
 150:	ldr	w2, [x0]
 154:	str	w2, [x1]
 158:	ldr	x2, [x0, #8]
 15c:	str	x2, [x1, #8]
 160:	ldr	x2, [x0, #16]
 164:	str	x2, [x1, #16]
 168:	ldr	x2, [x0, #24]
 16c:	str	x2, [x1, #24]
 170:	ldr	x2, [x0, #32]
 174:	str	x2, [x1, #32]
 178:	str	xzr, [x0, #32]
 17c:	str	xzr, [x0, #24]
 180:	str	xzr, [x0, #16]
 184:	add	x0, x0, #0x28
 188:	add	x1, x1, #0x28
 18c:	cmp	x0, x25
 190:	b.ne	150 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.any
 194:	sub	x0, x25, x19
 198:	sub	x0, x0, #0x28
 19c:	lsr	x0, x0, #3
 1a0:	mov	x19, #0xcccd                	// #52429
 1a4:	movk	x19, #0xcccc, lsl #16
 1a8:	movk	x19, #0xcccc, lsl #32
 1ac:	movk	x19, #0xccc, lsl #48
 1b0:	mul	x0, x0, x19
 1b4:	and	x0, x0, #0x1fffffffffffffff
 1b8:	add	x0, x0, #0x1
 1bc:	add	x0, x0, x0, lsl #2
 1c0:	add	x20, x20, x0, lsl #3
 1c4:	cbz	x24, 1d0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1d0>
 1c8:	mov	x0, x24
 1cc:	bl	0 <_ZdlPv>
 1d0:	str	x22, [x23]
 1d4:	str	x20, [x23, #8]
 1d8:	add	x21, x21, x21, lsl #2
 1dc:	add	x22, x22, x21, lsl #3
 1e0:	str	x22, [x23, #16]
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x23, x24, [sp, #48]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	ldp	x27, x28, [sp, #80]
 1f8:	ldp	x29, x30, [sp], #96
 1fc:	ret
 200:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 204:	add	x0, x0, #0x0
 208:	bl	0 <_ZSt20__throw_length_errorPKc>
 20c:	mov	x20, x22
 210:	b	13c <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x13c>
 214:	sub	x28, x19, x24
 218:	mov	x21, #0x3333333333333333    	// #3689348814741910323
 21c:	movk	x21, #0x333, lsl #48
 220:	b	88 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	str	x25, [sp, #64]
  18:	mov	x22, x0
  1c:	ldr	x24, [x0, #8]
  20:	ldr	x23, [x0]
  24:	sub	x0, x24, x23
  28:	mov	x2, #0x3ffffffffffffff     	// #288230376151711743
  2c:	cmp	x2, x0, asr #5
  30:	b.eq	164 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x164>  // b.none
  34:	mov	x19, x1
  38:	asr	x1, x0, #5
  3c:	cmp	x1, #0x0
  40:	csinc	x0, x1, xzr, ne  // ne = any
  44:	adds	x0, x0, x1
  48:	b.cs	178 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x178>  // b.hs, b.nlast
  4c:	mov	x20, #0x3ffffffffffffff     	// #288230376151711743
  50:	cmp	x0, x20
  54:	csel	x25, x0, x20, ls  // ls = plast
  58:	sub	x21, x19, x23
  5c:	mov	x20, #0x0                   	// #0
  60:	cbz	x0, 70 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x70>
  64:	lsl	x0, x25, #5
  68:	bl	0 <_Znwm>
  6c:	mov	x20, x0
  70:	add	x1, x20, x21
  74:	str	wzr, [x20, x21]
  78:	str	xzr, [x1, #8]
  7c:	str	xzr, [x1, #16]
  80:	str	xzr, [x1, #24]
  84:	cmp	x19, x23
  88:	b.eq	170 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x170>  // b.none
  8c:	mov	x0, x20
  90:	mov	x1, x23
  94:	ldr	w2, [x1]
  98:	str	w2, [x0]
  9c:	ldr	x2, [x1, #8]
  a0:	str	x2, [x0, #8]
  a4:	ldr	x2, [x1, #16]
  a8:	str	x2, [x0, #16]
  ac:	ldr	x2, [x1, #24]
  b0:	str	x2, [x0, #24]
  b4:	str	xzr, [x1, #24]
  b8:	str	xzr, [x1, #16]
  bc:	str	xzr, [x1, #8]
  c0:	add	x1, x1, #0x20
  c4:	add	x0, x0, #0x20
  c8:	cmp	x19, x1
  cc:	b.ne	94 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>  // b.any
  d0:	sub	x21, x19, x23
  d4:	add	x21, x20, x21
  d8:	add	x21, x21, #0x20
  dc:	cmp	x19, x24
  e0:	b.eq	130 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x130>  // b.none
  e4:	mov	x0, x21
  e8:	mov	x1, x19
  ec:	ldr	w2, [x1]
  f0:	str	w2, [x0]
  f4:	ldr	x2, [x1, #8]
  f8:	str	x2, [x0, #8]
  fc:	ldr	x2, [x1, #16]
 100:	str	x2, [x0, #16]
 104:	ldr	x2, [x1, #24]
 108:	str	x2, [x0, #24]
 10c:	str	xzr, [x1, #24]
 110:	str	xzr, [x1, #16]
 114:	str	xzr, [x1, #8]
 118:	add	x1, x1, #0x20
 11c:	add	x0, x0, #0x20
 120:	cmp	x1, x24
 124:	b.ne	ec <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>  // b.any
 128:	sub	x19, x24, x19
 12c:	add	x21, x21, x19
 130:	cbz	x23, 13c <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x13c>
 134:	mov	x0, x23
 138:	bl	0 <_ZdlPv>
 13c:	str	x20, [x22]
 140:	str	x21, [x22, #8]
 144:	add	x20, x20, x25, lsl #5
 148:	str	x20, [x22, #16]
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x21, x22, [sp, #32]
 154:	ldp	x23, x24, [sp, #48]
 158:	ldr	x25, [sp, #64]
 15c:	ldp	x29, x30, [sp], #80
 160:	ret
 164:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 168:	add	x0, x0, #0x0
 16c:	bl	0 <_ZSt20__throw_length_errorPKc>
 170:	mov	x21, x20
 174:	b	d8 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd8>
 178:	sub	x21, x19, x23
 17c:	mov	x25, #0x3ffffffffffffff     	// #288230376151711743
 180:	b	64 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x64>

Disassembly of section .text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv:

0000000000000000 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <__pthread_key_create>
  14:	ldr	x0, [x0]
  18:	cbz	x0, 44 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x44>
  1c:	add	x1, x19, #0x8
  20:	ldaxr	w0, [x1]
  24:	sub	w2, w0, #0x1
  28:	stlxr	w3, w2, [x1]
  2c:	cbnz	w3, 20 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x20>
  30:	cmp	w0, #0x1
  34:	b.eq	54 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x54>  // b.none
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	ldr	w0, [x19, #8]
  48:	sub	w1, w0, #0x1
  4c:	str	w1, [x19, #8]
  50:	b	30 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x30>
  54:	ldr	x0, [x19]
  58:	ldr	x1, [x0, #16]
  5c:	mov	x0, x19
  60:	blr	x1
  64:	adrp	x0, 0 <__pthread_key_create>
  68:	ldr	x0, [x0]
  6c:	cbz	x0, a0 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0xa0>
  70:	add	x1, x19, #0xc
  74:	ldaxr	w0, [x1]
  78:	sub	w2, w0, #0x1
  7c:	stlxr	w3, w2, [x1]
  80:	cbnz	w3, 74 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x74>
  84:	cmp	w0, #0x1
  88:	b.ne	38 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x38>  // b.any
  8c:	ldr	x0, [x19]
  90:	ldr	x1, [x0, #24]
  94:	mov	x0, x19
  98:	blr	x1
  9c:	b	38 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x38>
  a0:	ldr	w0, [x19, #12]
  a4:	sub	w1, w0, #0x1
  a8:	str	w1, [x19, #12]
  ac:	b	84 <_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv+0x84>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>:
   0:	cmp	x3, x2
   4:	b.eq	6a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6a0>  // b.none
   8:	stp	x29, x30, [sp, #-112]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	stp	x27, x28, [sp, #80]
  24:	mov	x25, x0
  28:	mov	x19, x1
  2c:	mov	x20, x2
  30:	mov	x27, x3
  34:	mov	x23, x2
  38:	mov	x28, x3
  3c:	mov	x21, x1
  40:	sub	x2, x3, x2
  44:	str	x2, [sp, #104]
  48:	asr	x24, x2, #4
  4c:	mov	x0, x24
  50:	ldr	x22, [x25, #8]
  54:	ldr	x1, [x25, #16]
  58:	sub	x1, x1, x22
  5c:	cmp	x24, x1, asr #4
  60:	b.hi	458 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x458>  // b.pmore
  64:	sub	x5, x22, x19
  68:	asr	x26, x5, #4
  6c:	mov	x6, x26
  70:	cmp	x24, x26
  74:	b.cs	298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x298>  // b.hs, b.nlast
  78:	sub	x20, x22, x2
  7c:	mov	x0, x20
  80:	mov	x1, x22
  84:	ldr	x2, [x0]
  88:	str	x2, [x1]
  8c:	str	xzr, [x1, #8]
  90:	ldr	x2, [x0, #8]
  94:	str	xzr, [x0, #8]
  98:	str	x2, [x1, #8]
  9c:	str	xzr, [x0], #16
  a0:	add	x1, x1, #0x10
  a4:	cmp	x22, x0
  a8:	b.ne	84 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x84>  // b.any
  ac:	ldr	x0, [x25, #8]
  b0:	ldr	x1, [sp, #104]
  b4:	add	x0, x0, x1
  b8:	str	x0, [x25, #8]
  bc:	sub	x19, x20, x19
  c0:	asr	x25, x19, #4
  c4:	cmp	x19, #0x0
  c8:	b.le	18c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x18c>
  cc:	adrp	x27, 0 <__pthread_key_create>
  d0:	ldr	x26, [x27]
  d4:	mov	x27, x26
  d8:	b	104 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x104>
  dc:	add	x1, x19, #0x8
  e0:	ldaxr	w0, [x1]
  e4:	sub	w2, w0, #0x1
  e8:	stlxr	w3, w2, [x1]
  ec:	cbnz	w3, e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xe0>
  f0:	cmp	w0, #0x1
  f4:	b.eq	138 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x138>  // b.none
  f8:	sub	x25, x25, #0x1
  fc:	cmp	x25, #0x0
 100:	b.le	18c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x18c>
 104:	ldr	x1, [x20, #-16]!
 108:	ldr	x0, [x20, #8]
 10c:	str	xzr, [x20, #8]
 110:	str	xzr, [x20]
 114:	str	x1, [x22, #-16]!
 118:	ldr	x19, [x22, #8]
 11c:	str	x0, [x22, #8]
 120:	cbz	x19, f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xf8>
 124:	cbnz	x26, dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xdc>
 128:	ldr	w0, [x19, #8]
 12c:	sub	w1, w0, #0x1
 130:	str	w1, [x19, #8]
 134:	b	f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xf0>
 138:	ldr	x0, [x19]
 13c:	ldr	x1, [x0, #16]
 140:	mov	x0, x19
 144:	blr	x1
 148:	cbz	x27, 17c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x17c>
 14c:	add	x1, x19, #0xc
 150:	ldaxr	w0, [x1]
 154:	sub	w2, w0, #0x1
 158:	stlxr	w3, w2, [x1]
 15c:	cbnz	w3, 150 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x150>
 160:	cmp	w0, #0x1
 164:	b.ne	f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xf8>  // b.any
 168:	ldr	x0, [x19]
 16c:	ldr	x1, [x0, #24]
 170:	mov	x0, x19
 174:	blr	x1
 178:	b	f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xf8>
 17c:	ldr	w0, [x19, #12]
 180:	sub	w1, w0, #0x1
 184:	str	w1, [x19, #12]
 188:	b	160 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x160>
 18c:	ldr	x0, [sp, #104]
 190:	cmp	x0, #0x0
 194:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x684>
 198:	adrp	x22, 0 <__pthread_key_create>
 19c:	ldr	x25, [x22]
 1a0:	mov	x26, x25
 1a4:	mov	x22, x25
 1a8:	b	1ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1ec>
 1ac:	ldr	w0, [x19, #8]
 1b0:	add	w0, w0, #0x1
 1b4:	str	w0, [x19, #8]
 1b8:	b	220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x220>
 1bc:	ldaxr	w0, [x1]
 1c0:	sub	w2, w0, #0x1
 1c4:	stlxr	w3, w2, [x1]
 1c8:	cbnz	w3, 1bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1bc>
 1cc:	cmp	w0, #0x1
 1d0:	b.eq	244 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x244>  // b.none
 1d4:	str	x19, [x21, #8]
 1d8:	add	x23, x23, #0x10
 1dc:	add	x21, x21, #0x10
 1e0:	sub	x24, x24, #0x1
 1e4:	cmp	x24, #0x0
 1e8:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x684>
 1ec:	ldr	x0, [x23]
 1f0:	str	x0, [x21]
 1f4:	ldr	x19, [x23, #8]
 1f8:	ldr	x0, [x21, #8]
 1fc:	cmp	x19, x0
 200:	b.eq	1d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1d8>  // b.none
 204:	cbz	x19, 220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x220>
 208:	cbz	x22, 1ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1ac>
 20c:	add	x0, x19, #0x8
 210:	ldaxr	w1, [x0]
 214:	add	w1, w1, #0x1
 218:	stlxr	w2, w1, [x0]
 21c:	cbnz	w2, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x210>
 220:	ldr	x20, [x21, #8]
 224:	cbz	x20, 1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1d4>
 228:	cbz	x25, 234 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x234>
 22c:	add	x1, x20, #0x8
 230:	b	1bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1bc>
 234:	ldr	w0, [x20, #8]
 238:	sub	w1, w0, #0x1
 23c:	str	w1, [x20, #8]
 240:	b	1cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1cc>
 244:	ldr	x0, [x20]
 248:	ldr	x1, [x0, #16]
 24c:	mov	x0, x20
 250:	blr	x1
 254:	cbz	x26, 288 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x288>
 258:	add	x1, x20, #0xc
 25c:	ldaxr	w0, [x1]
 260:	sub	w2, w0, #0x1
 264:	stlxr	w3, w2, [x1]
 268:	cbnz	w3, 25c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x25c>
 26c:	cmp	w0, #0x1
 270:	b.ne	1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1d4>  // b.any
 274:	ldr	x0, [x20]
 278:	ldr	x1, [x0, #24]
 27c:	mov	x0, x20
 280:	blr	x1
 284:	b	1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1d4>
 288:	ldr	w0, [x20, #12]
 28c:	sub	w1, w0, #0x1
 290:	str	w1, [x20, #12]
 294:	b	26c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x26c>
 298:	add	x20, x20, x5
 29c:	cmp	x3, x20
 2a0:	b.eq	304 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x304>  // b.none
 2a4:	mov	x2, x22
 2a8:	adrp	x4, 0 <__pthread_key_create>
 2ac:	ldr	x4, [x4]
 2b0:	b	2d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2d4>
 2b4:	ldaxr	w3, [x1]
 2b8:	add	w3, w3, #0x1
 2bc:	stlxr	w7, w3, [x1]
 2c0:	cbnz	w7, 2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2b4>
 2c4:	add	x2, x2, #0x10
 2c8:	add	x20, x20, #0x10
 2cc:	cmp	x28, x20
 2d0:	b.eq	304 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x304>  // b.none
 2d4:	ldr	x1, [x20]
 2d8:	str	x1, [x2]
 2dc:	ldr	x1, [x20, #8]
 2e0:	str	x1, [x2, #8]
 2e4:	cbz	x1, 2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2c4>
 2e8:	cbz	x4, 2f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2f4>
 2ec:	add	x1, x1, #0x8
 2f0:	b	2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2b4>
 2f4:	ldr	w3, [x1, #8]
 2f8:	add	w3, w3, #0x1
 2fc:	str	w3, [x1, #8]
 300:	b	2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2c4>
 304:	sub	x0, x0, x6
 308:	ldr	x1, [x25, #8]
 30c:	add	x0, x1, x0, lsl #4
 310:	str	x0, [x25, #8]
 314:	cmp	x22, x19
 318:	b.eq	344 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x344>  // b.none
 31c:	ldr	x1, [x19]
 320:	str	x1, [x0]
 324:	str	xzr, [x0, #8]
 328:	ldr	x1, [x19, #8]
 32c:	str	xzr, [x19, #8]
 330:	str	x1, [x0, #8]
 334:	str	xzr, [x19], #16
 338:	add	x0, x0, #0x10
 33c:	cmp	x22, x19
 340:	b.ne	31c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x31c>  // b.any
 344:	ldr	x0, [x25, #8]
 348:	add	x0, x0, x5
 34c:	str	x0, [x25, #8]
 350:	cmp	x5, #0x0
 354:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x684>
 358:	adrp	x22, 0 <__pthread_key_create>
 35c:	ldr	x24, [x22]
 360:	mov	x25, x24
 364:	mov	x22, x24
 368:	b	3ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3ac>
 36c:	ldr	w0, [x19, #8]
 370:	add	w0, w0, #0x1
 374:	str	w0, [x19, #8]
 378:	b	3e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3e0>
 37c:	ldaxr	w0, [x1]
 380:	sub	w2, w0, #0x1
 384:	stlxr	w3, w2, [x1]
 388:	cbnz	w3, 37c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x37c>
 38c:	cmp	w0, #0x1
 390:	b.eq	404 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x404>  // b.none
 394:	str	x19, [x21, #8]
 398:	add	x23, x23, #0x10
 39c:	add	x21, x21, #0x10
 3a0:	sub	x26, x26, #0x1
 3a4:	cmp	x26, #0x0
 3a8:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x684>
 3ac:	ldr	x0, [x23]
 3b0:	str	x0, [x21]
 3b4:	ldr	x19, [x23, #8]
 3b8:	ldr	x0, [x21, #8]
 3bc:	cmp	x19, x0
 3c0:	b.eq	398 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x398>  // b.none
 3c4:	cbz	x19, 3e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3e0>
 3c8:	cbz	x22, 36c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x36c>
 3cc:	add	x0, x19, #0x8
 3d0:	ldaxr	w1, [x0]
 3d4:	add	w1, w1, #0x1
 3d8:	stlxr	w2, w1, [x0]
 3dc:	cbnz	w2, 3d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3d0>
 3e0:	ldr	x20, [x21, #8]
 3e4:	cbz	x20, 394 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x394>
 3e8:	cbz	x24, 3f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3f4>
 3ec:	add	x1, x20, #0x8
 3f0:	b	37c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x37c>
 3f4:	ldr	w0, [x20, #8]
 3f8:	sub	w1, w0, #0x1
 3fc:	str	w1, [x20, #8]
 400:	b	38c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x38c>
 404:	ldr	x0, [x20]
 408:	ldr	x1, [x0, #16]
 40c:	mov	x0, x20
 410:	blr	x1
 414:	cbz	x25, 448 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x448>
 418:	add	x1, x20, #0xc
 41c:	ldaxr	w0, [x1]
 420:	sub	w2, w0, #0x1
 424:	stlxr	w3, w2, [x1]
 428:	cbnz	w3, 41c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x41c>
 42c:	cmp	w0, #0x1
 430:	b.ne	394 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x394>  // b.any
 434:	ldr	x0, [x20]
 438:	ldr	x1, [x0, #24]
 43c:	mov	x0, x20
 440:	blr	x1
 444:	b	394 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x394>
 448:	ldr	w0, [x20, #12]
 44c:	sub	w1, w0, #0x1
 450:	str	w1, [x20, #12]
 454:	b	42c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x42c>
 458:	ldr	x1, [x25]
 45c:	sub	x22, x22, x1
 460:	asr	x22, x22, #4
 464:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
 468:	sub	x1, x1, x22
 46c:	cmp	x24, x1
 470:	b.hi	4fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4fc>  // b.pmore
 474:	cmp	x24, x22
 478:	csel	x0, x24, x22, cs  // cs = hs, nlast
 47c:	adds	x22, x0, x22
 480:	b.cs	508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x508>  // b.hs, b.nlast
 484:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
 488:	cmp	x22, x24
 48c:	csel	x24, x22, x24, ls  // ls = plast
 490:	mov	x23, #0x0                   	// #0
 494:	cbz	x22, 4a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4a4>
 498:	lsl	x0, x24, #4
 49c:	bl	0 <_Znwm>
 4a0:	mov	x23, x0
 4a4:	ldr	x3, [x25]
 4a8:	mov	x0, x3
 4ac:	mov	x1, x23
 4b0:	cmp	x19, x3
 4b4:	b.eq	510 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x510>  // b.none
 4b8:	ldr	x2, [x0]
 4bc:	str	x2, [x1]
 4c0:	str	xzr, [x1, #8]
 4c4:	ldr	x2, [x0, #8]
 4c8:	str	xzr, [x0, #8]
 4cc:	str	x2, [x1, #8]
 4d0:	str	xzr, [x0], #16
 4d4:	add	x1, x1, #0x10
 4d8:	cmp	x21, x0
 4dc:	b.ne	4b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4b8>  // b.any
 4e0:	sub	x3, x19, x3
 4e4:	add	x4, x23, x3
 4e8:	mov	x5, x20
 4ec:	mov	x1, x4
 4f0:	adrp	x3, 0 <__pthread_key_create>
 4f4:	ldr	x3, [x3]
 4f8:	b	538 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x538>
 4fc:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 500:	add	x0, x0, #0x0
 504:	bl	0 <_ZSt20__throw_length_errorPKc>
 508:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
 50c:	b	498 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x498>
 510:	mov	x4, x23
 514:	b	4e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4e8>
 518:	ldaxr	w2, [x0]
 51c:	add	w2, w2, #0x1
 520:	stlxr	w6, w2, [x0]
 524:	cbnz	w6, 518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x518>
 528:	add	x1, x1, #0x10
 52c:	add	x20, x20, #0x10
 530:	cmp	x28, x20
 534:	b.eq	568 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x568>  // b.none
 538:	ldr	x0, [x20]
 53c:	str	x0, [x1]
 540:	ldr	x0, [x20, #8]
 544:	str	x0, [x1, #8]
 548:	cbz	x0, 528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x528>
 54c:	cbz	x3, 558 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x558>
 550:	add	x0, x0, #0x8
 554:	b	518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x518>
 558:	ldr	w2, [x0, #8]
 55c:	add	w2, w2, #0x1
 560:	str	w2, [x0, #8]
 564:	b	528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x528>
 568:	sub	x27, x27, x5
 56c:	add	x27, x4, x27
 570:	ldr	x2, [x25, #8]
 574:	cmp	x19, x2
 578:	b.eq	5b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5b0>  // b.none
 57c:	mov	x3, x19
 580:	mov	x0, x27
 584:	ldr	x1, [x19]
 588:	str	x1, [x0]
 58c:	ldr	x1, [x19, #8]
 590:	str	xzr, [x19, #8]
 594:	str	x1, [x0, #8]
 598:	str	xzr, [x19], #16
 59c:	add	x0, x0, #0x10
 5a0:	cmp	x2, x19
 5a4:	b.ne	584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>  // b.any
 5a8:	sub	x2, x2, x3
 5ac:	add	x27, x27, x2
 5b0:	ldr	x19, [x25]
 5b4:	ldr	x21, [x25, #8]
 5b8:	cmp	x19, x21
 5bc:	b.eq	668 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x668>  // b.none
 5c0:	adrp	x26, 0 <__pthread_key_create>
 5c4:	ldr	x22, [x26]
 5c8:	mov	x26, x22
 5cc:	b	5f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5f8>
 5d0:	add	x1, x20, #0x8
 5d4:	ldaxr	w0, [x1]
 5d8:	sub	w2, w0, #0x1
 5dc:	stlxr	w3, w2, [x1]
 5e0:	cbnz	w3, 5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d4>
 5e4:	cmp	w0, #0x1
 5e8:	b.eq	614 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x614>  // b.none
 5ec:	add	x19, x19, #0x10
 5f0:	cmp	x21, x19
 5f4:	b.eq	668 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x668>  // b.none
 5f8:	ldr	x20, [x19, #8]
 5fc:	cbz	x20, 5ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5ec>
 600:	cbnz	x22, 5d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d0>
 604:	ldr	w0, [x20, #8]
 608:	sub	w1, w0, #0x1
 60c:	str	w1, [x20, #8]
 610:	b	5e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5e4>
 614:	ldr	x0, [x20]
 618:	ldr	x1, [x0, #16]
 61c:	mov	x0, x20
 620:	blr	x1
 624:	cbz	x26, 658 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x658>
 628:	add	x1, x20, #0xc
 62c:	ldaxr	w0, [x1]
 630:	sub	w2, w0, #0x1
 634:	stlxr	w3, w2, [x1]
 638:	cbnz	w3, 62c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x62c>
 63c:	cmp	w0, #0x1
 640:	b.ne	5ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5ec>  // b.any
 644:	ldr	x0, [x20]
 648:	ldr	x1, [x0, #24]
 64c:	mov	x0, x20
 650:	blr	x1
 654:	b	5ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5ec>
 658:	ldr	w0, [x20, #12]
 65c:	sub	w1, w0, #0x1
 660:	str	w1, [x20, #12]
 664:	b	63c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x63c>
 668:	ldr	x0, [x25]
 66c:	cbz	x0, 674 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x674>
 670:	bl	0 <_ZdlPv>
 674:	str	x23, [x25]
 678:	str	x27, [x25, #8]
 67c:	add	x23, x23, x24, lsl #4
 680:	str	x23, [x25, #16]
 684:	ldp	x19, x20, [sp, #16]
 688:	ldp	x21, x22, [sp, #32]
 68c:	ldp	x23, x24, [sp, #48]
 690:	ldp	x25, x26, [sp, #64]
 694:	ldp	x27, x28, [sp, #80]
 698:	ldp	x29, x30, [sp], #112
 69c:	ret
 6a0:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter13EnterSubblockEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x19, x0
  20:	ldr	w23, [x0, #16]
  24:	sub	w0, w23, #0x1
  28:	cmp	w0, #0x1f
  2c:	b.hi	88 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x88>  // b.pmore
  30:	mov	w21, w1
  34:	mov	w22, w2
  38:	neg	w0, w23
  3c:	mov	w1, #0xffffffff            	// #-1
  40:	lsr	w0, w1, w0
  44:	tbz	w0, #0, a8 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xa8>
  48:	ldr	w0, [x19, #8]
  4c:	mov	w20, #0x1                   	// #1
  50:	lsl	w20, w20, w0
  54:	ldr	w1, [x19, #12]
  58:	orr	w20, w20, w1
  5c:	str	w20, [x19, #12]
  60:	add	w0, w23, w0
  64:	cmp	w0, #0x1f
  68:	b.hi	c8 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xc8>  // b.pmore
  6c:	str	w0, [x19, #8]
  70:	cmp	w21, #0x7f
  74:	b.ls	24c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x24c>  // b.plast
  78:	mov	w23, w21
  7c:	mov	w24, #0x20                  	// #32
  80:	mov	x25, #0x1                   	// #1
  84:	b	1e4 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1e4>
  88:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x78                  	// #120
  94:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  98:	add	x1, x1, #0x0
  9c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x79                  	// #121
  b4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  b8:	add	x1, x1, #0x0
  bc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  c0:	add	x0, x0, #0x0
  c4:	bl	0 <__assert_fail>
  c8:	ldr	x24, [x19]
  cc:	ldr	w2, [x24, #8]
  d0:	ldr	w0, [x24, #12]
  d4:	sub	x0, x0, x2
  d8:	cmp	x0, #0x3
  dc:	b.ls	138 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x138>  // b.plast
  e0:	ldr	w0, [x24, #8]
  e4:	ldr	x1, [x24]
  e8:	str	w20, [x1, x0]
  ec:	ldr	w0, [x24, #8]
  f0:	mov	w1, w0
  f4:	add	x1, x1, #0x4
  f8:	ldr	w2, [x24, #12]
  fc:	cmp	x1, x2
 100:	b.hi	150 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x150>  // b.pmore
 104:	add	w0, w0, #0x4
 108:	str	w0, [x24, #8]
 10c:	ldr	w0, [x19, #8]
 110:	neg	w2, w0
 114:	mov	w1, #0x1                   	// #1
 118:	lsr	w1, w1, w2
 11c:	cmp	w0, #0x0
 120:	csel	w1, w1, w0, ne  // ne = any
 124:	str	w1, [x19, #12]
 128:	add	w0, w23, w0
 12c:	and	w0, w0, #0x1f
 130:	str	w0, [x19, #8]
 134:	b	70 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x70>
 138:	mov	x3, #0x1                   	// #1
 13c:	add	x2, x2, #0x4
 140:	add	x1, x24, #0x10
 144:	mov	x0, x24
 148:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 14c:	b	e0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xe0>
 150:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x43                  	// #67
 15c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 160:	add	x1, x1, #0x0
 164:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 168:	add	x0, x0, #0x0
 16c:	bl	0 <__assert_fail>
 170:	ldr	x27, [x19]
 174:	ldr	w2, [x27, #8]
 178:	ldr	w0, [x27, #12]
 17c:	sub	x0, x0, x2
 180:	cmp	x0, #0x3
 184:	b.ls	214 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x214>  // b.plast
 188:	ldr	w0, [x27, #8]
 18c:	ldr	x1, [x27]
 190:	str	w26, [x1, x0]
 194:	ldr	w0, [x27, #8]
 198:	mov	w1, w0
 19c:	add	x1, x1, #0x4
 1a0:	ldr	w2, [x27, #12]
 1a4:	cmp	x1, x2
 1a8:	b.hi	22c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x22c>  // b.pmore
 1ac:	add	w0, w0, #0x4
 1b0:	str	w0, [x27, #8]
 1b4:	ldr	w0, [x19, #8]
 1b8:	sub	w1, w24, w0
 1bc:	lsr	w20, w20, w1
 1c0:	cmp	w0, #0x0
 1c4:	csel	w20, w20, w0, ne  // ne = any
 1c8:	str	w20, [x19, #12]
 1cc:	add	w0, w0, #0x8
 1d0:	and	w0, w0, #0x1f
 1d4:	str	w0, [x19, #8]
 1d8:	lsr	w23, w23, #7
 1dc:	cmp	w23, #0x7f
 1e0:	b.ls	258 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x258>  // b.plast
 1e4:	and	w20, w23, #0x7f
 1e8:	orr	w20, w20, #0x80
 1ec:	ldr	w0, [x19, #8]
 1f0:	lsl	w26, w20, w0
 1f4:	ldr	w1, [x19, #12]
 1f8:	orr	w26, w26, w1
 1fc:	str	w26, [x19, #12]
 200:	add	w0, w0, #0x8
 204:	cmp	w0, #0x1f
 208:	b.hi	170 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x170>  // b.pmore
 20c:	str	w0, [x19, #8]
 210:	b	1d8 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1d8>
 214:	mov	x3, x25
 218:	add	x2, x2, #0x4
 21c:	add	x1, x27, #0x10
 220:	mov	x0, x27
 224:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 228:	b	188 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x188>
 22c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 230:	add	x3, x3, #0x0
 234:	mov	w2, #0x43                  	// #67
 238:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 23c:	add	x1, x1, #0x0
 240:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 244:	add	x0, x0, #0x0
 248:	bl	0 <__assert_fail>
 24c:	mov	w23, w21
 250:	tst	w21, #0xffffff00
 254:	b.ne	294 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x294>  // b.any
 258:	ldr	w0, [x19, #8]
 25c:	lsl	w20, w23, w0
 260:	ldr	w1, [x19, #12]
 264:	orr	w20, w20, w1
 268:	str	w20, [x19, #12]
 26c:	add	w0, w0, #0x8
 270:	cmp	w0, #0x1f
 274:	b.hi	2b4 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x2b4>  // b.pmore
 278:	str	w0, [x19, #8]
 27c:	cmp	w22, #0x7
 280:	b.ls	434 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x434>  // b.plast
 284:	mov	w23, w22
 288:	mov	w24, #0x20                  	// #32
 28c:	mov	x25, #0x1                   	// #1
 290:	b	3cc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x3cc>
 294:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 298:	add	x3, x3, #0x0
 29c:	mov	w2, #0x79                  	// #121
 2a0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 2a4:	add	x1, x1, #0x0
 2a8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 2ac:	add	x0, x0, #0x0
 2b0:	bl	0 <__assert_fail>
 2b4:	ldr	x24, [x19]
 2b8:	ldr	w2, [x24, #8]
 2bc:	ldr	w0, [x24, #12]
 2c0:	sub	x0, x0, x2
 2c4:	cmp	x0, #0x3
 2c8:	b.ls	320 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x320>  // b.plast
 2cc:	ldr	w0, [x24, #8]
 2d0:	ldr	x1, [x24]
 2d4:	str	w20, [x1, x0]
 2d8:	ldr	w0, [x24, #8]
 2dc:	mov	w1, w0
 2e0:	add	x1, x1, #0x4
 2e4:	ldr	w2, [x24, #12]
 2e8:	cmp	x1, x2
 2ec:	b.hi	338 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x338>  // b.pmore
 2f0:	add	w0, w0, #0x4
 2f4:	str	w0, [x24, #8]
 2f8:	ldr	w0, [x19, #8]
 2fc:	neg	w1, w0
 300:	lsr	w23, w23, w1
 304:	cmp	w0, #0x0
 308:	csel	w23, w23, w0, ne  // ne = any
 30c:	str	w23, [x19, #12]
 310:	add	w0, w0, #0x8
 314:	and	w0, w0, #0x1f
 318:	str	w0, [x19, #8]
 31c:	b	27c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x27c>
 320:	mov	x3, #0x1                   	// #1
 324:	add	x2, x2, #0x4
 328:	add	x1, x24, #0x10
 32c:	mov	x0, x24
 330:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 334:	b	2cc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x2cc>
 338:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 33c:	add	x3, x3, #0x0
 340:	mov	w2, #0x43                  	// #67
 344:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 348:	add	x1, x1, #0x0
 34c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 350:	add	x0, x0, #0x0
 354:	bl	0 <__assert_fail>
 358:	ldr	x27, [x19]
 35c:	ldr	w2, [x27, #8]
 360:	ldr	w0, [x27, #12]
 364:	sub	x0, x0, x2
 368:	cmp	x0, #0x3
 36c:	b.ls	3fc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x3fc>  // b.plast
 370:	ldr	w0, [x27, #8]
 374:	ldr	x1, [x27]
 378:	str	w26, [x1, x0]
 37c:	ldr	w0, [x27, #8]
 380:	mov	w1, w0
 384:	add	x1, x1, #0x4
 388:	ldr	w2, [x27, #12]
 38c:	cmp	x1, x2
 390:	b.hi	414 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x414>  // b.pmore
 394:	add	w0, w0, #0x4
 398:	str	w0, [x27, #8]
 39c:	ldr	w0, [x19, #8]
 3a0:	sub	w1, w24, w0
 3a4:	lsr	w20, w20, w1
 3a8:	cmp	w0, #0x0
 3ac:	csel	w20, w20, w0, ne  // ne = any
 3b0:	str	w20, [x19, #12]
 3b4:	add	w0, w0, #0x4
 3b8:	and	w0, w0, #0x1f
 3bc:	str	w0, [x19, #8]
 3c0:	lsr	w23, w23, #3
 3c4:	cmp	w23, #0x7
 3c8:	b.ls	440 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x440>  // b.plast
 3cc:	and	w20, w23, #0x7
 3d0:	orr	w20, w20, #0x8
 3d4:	ldr	w0, [x19, #8]
 3d8:	lsl	w26, w20, w0
 3dc:	ldr	w1, [x19, #12]
 3e0:	orr	w26, w26, w1
 3e4:	str	w26, [x19, #12]
 3e8:	add	w0, w0, #0x4
 3ec:	cmp	w0, #0x1f
 3f0:	b.hi	358 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x358>  // b.pmore
 3f4:	str	w0, [x19, #8]
 3f8:	b	3c0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x3c0>
 3fc:	mov	x3, x25
 400:	add	x2, x2, #0x4
 404:	add	x1, x27, #0x10
 408:	mov	x0, x27
 40c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 410:	b	370 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x370>
 414:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 418:	add	x3, x3, #0x0
 41c:	mov	w2, #0x43                  	// #67
 420:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 424:	add	x1, x1, #0x0
 428:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 42c:	add	x0, x0, #0x0
 430:	bl	0 <__assert_fail>
 434:	mov	w23, w22
 438:	tst	w22, #0xfffffff0
 43c:	b.ne	56c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x56c>  // b.any
 440:	ldr	w0, [x19, #8]
 444:	lsl	w20, w23, w0
 448:	ldr	w1, [x19, #12]
 44c:	orr	w20, w20, w1
 450:	str	w20, [x19, #12]
 454:	add	w0, w0, #0x4
 458:	cmp	w0, #0x1f
 45c:	b.hi	58c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x58c>  // b.pmore
 460:	str	w0, [x19, #8]
 464:	ldr	w0, [x19, #8]
 468:	cbnz	w0, 630 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x630>
 46c:	ldr	x20, [x19]
 470:	ldr	w0, [x20, #8]
 474:	mov	w2, w0
 478:	tst	x0, #0x3
 47c:	b.ne	6bc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x6bc>  // b.any
 480:	lsr	x0, x2, #2
 484:	str	x0, [sp, #104]
 488:	ldr	w0, [x19, #16]
 48c:	str	w0, [sp, #100]
 490:	ldr	w0, [x19, #8]
 494:	adds	w0, w0, #0x20
 498:	b.cc	6dc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x6dc>  // b.lo, b.ul, b.last
 49c:	str	w0, [x19, #8]
 4a0:	str	w22, [x19, #16]
 4a4:	ldr	x1, [x19, #56]
 4a8:	ldr	x0, [x19, #64]
 4ac:	cmp	x1, x0
 4b0:	b.eq	768 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x768>  // b.none
 4b4:	ldr	x0, [sp, #104]
 4b8:	ldr	w2, [sp, #100]
 4bc:	str	w2, [x1]
 4c0:	str	x0, [x1, #8]
 4c4:	str	xzr, [x1, #16]
 4c8:	str	xzr, [x1, #24]
 4cc:	str	xzr, [x1, #32]
 4d0:	ldr	x0, [x19, #56]
 4d4:	add	x0, x0, #0x28
 4d8:	str	x0, [x19, #56]
 4dc:	ldr	x0, [x19, #56]
 4e0:	ldur	x4, [x0, #-24]
 4e4:	ldur	x1, [x0, #-16]
 4e8:	ldur	x3, [x0, #-8]
 4ec:	ldr	x5, [x19, #24]
 4f0:	stur	x5, [x0, #-24]
 4f4:	ldr	x5, [x19, #32]
 4f8:	stur	x5, [x0, #-16]
 4fc:	ldr	x5, [x19, #40]
 500:	stur	x5, [x0, #-8]
 504:	str	x4, [x19, #24]
 508:	str	x1, [x19, #32]
 50c:	str	x3, [x19, #40]
 510:	ldr	x3, [x19, #72]
 514:	ldr	x0, [x19, #80]
 518:	cmp	x0, x3
 51c:	b.eq	530 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x530>  // b.none
 520:	ldur	w2, [x0, #-32]
 524:	sub	x5, x0, #0x20
 528:	cmp	w21, w2
 52c:	b.eq	77c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x77c>  // b.none
 530:	sub	x0, x0, x3
 534:	asr	x2, x0, #5
 538:	cbz	w2, 790 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x790>
 53c:	mov	x0, x3
 540:	sub	w2, w2, #0x1
 544:	add	x3, x3, #0x20
 548:	add	x2, x3, x2, lsl #5
 54c:	mov	x5, x0
 550:	ldr	w3, [x0]
 554:	cmp	w21, w3
 558:	b.eq	77c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x77c>  // b.none
 55c:	add	x0, x0, #0x20
 560:	cmp	x0, x2
 564:	b.ne	54c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x54c>  // b.any
 568:	b	790 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x790>
 56c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 570:	add	x3, x3, #0x0
 574:	mov	w2, #0x79                  	// #121
 578:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 57c:	add	x1, x1, #0x0
 580:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 584:	add	x0, x0, #0x0
 588:	bl	0 <__assert_fail>
 58c:	ldr	x24, [x19]
 590:	ldr	w2, [x24, #8]
 594:	ldr	w0, [x24, #12]
 598:	sub	x0, x0, x2
 59c:	cmp	x0, #0x3
 5a0:	b.ls	5f8 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x5f8>  // b.plast
 5a4:	ldr	w0, [x24, #8]
 5a8:	ldr	x1, [x24]
 5ac:	str	w20, [x1, x0]
 5b0:	ldr	w0, [x24, #8]
 5b4:	mov	w1, w0
 5b8:	add	x1, x1, #0x4
 5bc:	ldr	w2, [x24, #12]
 5c0:	cmp	x1, x2
 5c4:	b.hi	610 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x610>  // b.pmore
 5c8:	add	w0, w0, #0x4
 5cc:	str	w0, [x24, #8]
 5d0:	ldr	w0, [x19, #8]
 5d4:	neg	w1, w0
 5d8:	lsr	w23, w23, w1
 5dc:	cmp	w0, #0x0
 5e0:	csel	w23, w23, w0, ne  // ne = any
 5e4:	str	w23, [x19, #12]
 5e8:	add	w0, w0, #0x4
 5ec:	and	w0, w0, #0x1f
 5f0:	str	w0, [x19, #8]
 5f4:	b	464 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x464>
 5f8:	mov	x3, #0x1                   	// #1
 5fc:	add	x2, x2, #0x4
 600:	add	x1, x24, #0x10
 604:	mov	x0, x24
 608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 60c:	b	5a4 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x5a4>
 610:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 614:	add	x3, x3, #0x0
 618:	mov	w2, #0x43                  	// #67
 61c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 620:	add	x1, x1, #0x0
 624:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 628:	add	x0, x0, #0x0
 62c:	bl	0 <__assert_fail>
 630:	ldr	w23, [x19, #12]
 634:	ldr	x20, [x19]
 638:	ldr	w2, [x20, #8]
 63c:	ldr	w0, [x20, #12]
 640:	sub	x0, x0, x2
 644:	cmp	x0, #0x3
 648:	b.ls	684 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x684>  // b.plast
 64c:	ldr	w0, [x20, #8]
 650:	ldr	x1, [x20]
 654:	str	w23, [x1, x0]
 658:	ldr	w0, [x20, #8]
 65c:	mov	w1, w0
 660:	add	x1, x1, #0x4
 664:	ldr	w2, [x20, #12]
 668:	cmp	x1, x2
 66c:	b.hi	69c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x69c>  // b.pmore
 670:	add	w0, w0, #0x4
 674:	str	w0, [x20, #8]
 678:	str	wzr, [x19, #8]
 67c:	str	wzr, [x19, #12]
 680:	b	46c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x46c>
 684:	mov	x3, #0x1                   	// #1
 688:	add	x2, x2, #0x4
 68c:	add	x1, x20, #0x10
 690:	mov	x0, x20
 694:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 698:	b	64c <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x64c>
 69c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 6a0:	add	x3, x3, #0x0
 6a4:	mov	w2, #0x43                  	// #67
 6a8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 6ac:	add	x1, x1, #0x0
 6b0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 6b4:	add	x0, x0, #0x0
 6b8:	bl	0 <__assert_fail>
 6bc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 6c0:	add	x3, x3, #0x0
 6c4:	mov	w2, #0x4f                  	// #79
 6c8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 6cc:	add	x1, x1, #0x0
 6d0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 6d4:	add	x0, x0, #0x0
 6d8:	bl	0 <__assert_fail>
 6dc:	ldr	w23, [x19, #12]
 6e0:	ldr	w0, [x20, #12]
 6e4:	sub	x0, x0, x2
 6e8:	cmp	x0, #0x3
 6ec:	b.ls	730 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x730>  // b.plast
 6f0:	ldr	w0, [x20, #8]
 6f4:	ldr	x1, [x20]
 6f8:	str	w23, [x1, x0]
 6fc:	ldr	w0, [x20, #8]
 700:	mov	w1, w0
 704:	add	x1, x1, #0x4
 708:	ldr	w2, [x20, #12]
 70c:	cmp	x1, x2
 710:	b.hi	748 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x748>  // b.pmore
 714:	add	w0, w0, #0x4
 718:	str	w0, [x20, #8]
 71c:	ldr	w0, [x19, #8]
 720:	str	wzr, [x19, #12]
 724:	and	w0, w0, #0x1f
 728:	str	w0, [x19, #8]
 72c:	b	4a0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x4a0>
 730:	mov	x3, #0x1                   	// #1
 734:	add	x2, x2, #0x4
 738:	add	x1, x20, #0x10
 73c:	mov	x0, x20
 740:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 744:	b	6f0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x6f0>
 748:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 74c:	add	x3, x3, #0x0
 750:	mov	w2, #0x43                  	// #67
 754:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 758:	add	x1, x1, #0x0
 75c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 760:	add	x0, x0, #0x0
 764:	bl	0 <__assert_fail>
 768:	add	x3, sp, #0x68
 76c:	add	x2, sp, #0x64
 770:	add	x0, x19, #0x30
 774:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 778:	b	4dc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x4dc>
 77c:	mov	w4, #0x0                   	// #0
 780:	ldr	x3, [x5, #16]
 784:	ldr	x2, [x5, #8]
 788:	add	x0, x19, #0x18
 78c:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 790:	ldp	x19, x20, [sp, #16]
 794:	ldp	x21, x22, [sp, #32]
 798:	ldp	x23, x24, [sp, #48]
 79c:	ldp	x25, x26, [sp, #64]
 7a0:	ldr	x27, [sp, #80]
 7a4:	ldp	x29, x30, [sp], #112
 7a8:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x23, x0
  20:	mov	x21, x2
  24:	str	x1, [sp, #96]
  28:	ldr	x26, [x0, #8]
  2c:	ldr	x24, [x0]
  30:	sub	x0, x26, x24
  34:	mov	x2, #0x7ffffffffffffff     	// #576460752303423487
  38:	cmp	x2, x0, asr #4
  3c:	b.eq	b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb8>  // b.none
  40:	mov	x19, x1
  44:	asr	x1, x0, #4
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	208 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x208>  // b.hs, b.nlast
  58:	mov	x27, #0x7ffffffffffffff     	// #576460752303423487
  5c:	cmp	x0, x27
  60:	csel	x27, x0, x27, ls  // ls = plast
  64:	sub	x22, x19, x24
  68:	mov	x20, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x7c>
  70:	lsl	x0, x27, #4
  74:	bl	0 <_Znwm>
  78:	mov	x20, x0
  7c:	add	x0, x20, x22
  80:	ldr	x1, [x21]
  84:	str	x1, [x20, x22]
  88:	ldr	x1, [x21, #8]
  8c:	str	xzr, [x21, #8]
  90:	str	x1, [x0, #8]
  94:	str	xzr, [x21]
  98:	cmp	x19, x24
  9c:	b.eq	200 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x200>  // b.none
  a0:	mov	x25, x20
  a4:	mov	x22, x24
  a8:	adrp	x0, 0 <__pthread_key_create>
  ac:	ldr	x28, [x0]
  b0:	str	x28, [sp, #104]
  b4:	b	f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf4>
  b8:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  bc:	add	x0, x0, #0x0
  c0:	bl	0 <_ZSt20__throw_length_errorPKc>
  c4:	add	x1, x21, #0x8
  c8:	ldaxr	w0, [x1]
  cc:	sub	w2, w0, #0x1
  d0:	stlxr	w3, w2, [x1]
  d4:	cbnz	w3, c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc8>
  d8:	cmp	w0, #0x1
  dc:	b.eq	12c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x12c>  // b.none
  e0:	add	x22, x22, #0x10
  e4:	add	x25, x25, #0x10
  e8:	ldr	x0, [sp, #96]
  ec:	cmp	x0, x22
  f0:	b.eq	184 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x184>  // b.none
  f4:	ldr	x0, [x22]
  f8:	str	x0, [x25]
  fc:	str	xzr, [x25, #8]
 100:	ldr	x0, [x22, #8]
 104:	str	xzr, [x22, #8]
 108:	str	x0, [x25, #8]
 10c:	str	xzr, [x22]
 110:	ldr	x21, [x22, #8]
 114:	cbz	x21, e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>
 118:	cbnz	x28, c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc4>
 11c:	ldr	w0, [x21, #8]
 120:	sub	w1, w0, #0x1
 124:	str	w1, [x21, #8]
 128:	b	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd8>
 12c:	ldr	x0, [x21]
 130:	ldr	x1, [x0, #16]
 134:	mov	x0, x21
 138:	blr	x1
 13c:	ldr	x0, [sp, #104]
 140:	cbz	x0, 174 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x174>
 144:	add	x1, x21, #0xc
 148:	ldaxr	w0, [x1]
 14c:	sub	w2, w0, #0x1
 150:	stlxr	w3, w2, [x1]
 154:	cbnz	w3, 148 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x148>
 158:	cmp	w0, #0x1
 15c:	b.ne	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>  // b.any
 160:	ldr	x0, [x21]
 164:	ldr	x1, [x0, #24]
 168:	mov	x0, x21
 16c:	blr	x1
 170:	b	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>
 174:	ldr	w0, [x21, #12]
 178:	sub	w1, w0, #0x1
 17c:	str	w1, [x21, #12]
 180:	b	158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>
 184:	sub	x21, x19, x24
 188:	add	x21, x20, x21
 18c:	add	x21, x21, #0x10
 190:	cmp	x19, x26
 194:	b.eq	1c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c8>  // b.none
 198:	mov	x1, x21
 19c:	mov	x0, x19
 1a0:	ldr	x2, [x0]
 1a4:	str	x2, [x1]
 1a8:	ldr	x2, [x0, #8]
 1ac:	str	x2, [x1, #8]
 1b0:	add	x0, x0, #0x10
 1b4:	add	x1, x1, #0x10
 1b8:	cmp	x0, x26
 1bc:	b.ne	1a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a0>  // b.any
 1c0:	sub	x19, x26, x19
 1c4:	add	x21, x21, x19
 1c8:	cbz	x24, 1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1d4>
 1cc:	mov	x0, x24
 1d0:	bl	0 <_ZdlPv>
 1d4:	str	x20, [x23]
 1d8:	str	x21, [x23, #8]
 1dc:	add	x20, x20, x27, lsl #4
 1e0:	str	x20, [x23, #16]
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x23, x24, [sp, #48]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	ldp	x27, x28, [sp, #80]
 1f8:	ldp	x29, x30, [sp], #112
 1fc:	ret
 200:	mov	x21, x20
 204:	b	18c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x18c>
 208:	sub	x22, x19, x24
 20c:	mov	x27, #0x7ffffffffffffff     	// #576460752303423487
 210:	b	70 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x70>

Disassembly of section .text._ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE:

0000000000000000 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>:
       0:	stp	x29, x30, [sp, #-160]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	stp	x21, x22, [sp, #32]
      10:	stp	x23, x24, [sp, #48]
      14:	stp	x25, x26, [sp, #64]
      18:	stp	x27, x28, [sp, #80]
      1c:	mov	x19, x0
      20:	mov	w23, w1
      24:	mov	x24, x2
      28:	ldr	w0, [x0, #20]
      2c:	cmp	w1, w0
      30:	b.eq	140 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x140>  // b.none
      34:	add	x0, sp, #0x98
      38:	str	x0, [sp, #136]
      3c:	mov	w0, #0x2                   	// #2
      40:	str	w0, [sp, #148]
      44:	str	w1, [sp, #152]
      48:	mov	w20, #0x1                   	// #1
      4c:	str	w20, [sp, #144]
      50:	ldr	w2, [x19, #16]
      54:	mov	w1, #0x3                   	// #3
      58:	mov	x0, x19
      5c:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
      60:	ldr	w0, [x19, #8]
      64:	lsl	w20, w20, w0
      68:	ldr	w1, [x19, #12]
      6c:	orr	w20, w20, w1
      70:	str	w20, [x19, #12]
      74:	add	w0, w0, #0x6
      78:	cmp	w0, #0x1f
      7c:	b.hi	1a4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1a4>  // b.pmore
      80:	str	w0, [x19, #8]
      84:	ldr	w0, [x19, #8]
      88:	mov	w20, #0x1                   	// #1
      8c:	lsl	w20, w20, w0
      90:	ldr	w1, [x19, #12]
      94:	orr	w20, w20, w1
      98:	str	w20, [x19, #12]
      9c:	add	w0, w0, #0x6
      a0:	cmp	w0, #0x1f
      a4:	b.hi	24c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x24c>  // b.pmore
      a8:	str	w0, [x19, #8]
      ac:	ldr	w0, [sp, #144]
      b0:	cbz	w0, 2f4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x2f4>
      b4:	ldr	x0, [sp, #136]
      b8:	ldr	w21, [x0]
      bc:	cmp	w21, #0x1f
      c0:	b.ls	3b8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x3b8>  // b.plast
      c4:	mov	w25, #0x20                  	// #32
      c8:	mov	x22, #0x1                   	// #1
      cc:	and	w26, w21, #0x1f
      d0:	orr	w26, w26, #0x20
      d4:	ldr	w0, [x19, #8]
      d8:	lsl	w27, w26, w0
      dc:	ldr	w1, [x19, #12]
      e0:	orr	w27, w27, w1
      e4:	str	w27, [x19, #12]
      e8:	add	w0, w0, #0x6
      ec:	cmp	w0, #0x1f
      f0:	b.hi	314 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x314>  // b.pmore
      f4:	str	w0, [x19, #8]
      f8:	lsr	w21, w21, #5
      fc:	cmp	w21, #0x1f
     100:	b.hi	cc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xcc>  // b.pmore
     104:	ldr	w0, [x19, #8]
     108:	lsl	w22, w21, w0
     10c:	ldr	w1, [x19, #12]
     110:	orr	w22, w22, w1
     114:	str	w22, [x19, #12]
     118:	add	w0, w0, #0x6
     11c:	cmp	w0, #0x1f
     120:	b.hi	3e0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x3e0>  // b.pmore
     124:	str	w0, [x19, #8]
     128:	str	w23, [x19, #20]
     12c:	ldr	x0, [sp, #136]
     130:	add	x1, sp, #0x98
     134:	cmp	x0, x1
     138:	b.eq	140 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x140>  // b.none
     13c:	bl	0 <free>
     140:	ldr	x27, [x24]
     144:	ldr	w21, [x19, #16]
     148:	sub	w0, w21, #0x1
     14c:	cmp	w0, #0x1f
     150:	b.hi	484 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x484>  // b.pmore
     154:	neg	w0, w21
     158:	mov	w1, #0xffffffff            	// #-1
     15c:	lsr	w0, w1, w0
     160:	tbz	w0, #1, 4a4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x4a4>
     164:	ldr	w0, [x19, #8]
     168:	mov	w20, #0x2                   	// #2
     16c:	lsl	w20, w20, w0
     170:	ldr	w1, [x19, #12]
     174:	orr	w20, w20, w1
     178:	str	w20, [x19, #12]
     17c:	add	w0, w21, w0
     180:	cmp	w0, #0x1f
     184:	b.hi	4c4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x4c4>  // b.pmore
     188:	str	w0, [x19, #8]
     18c:	ldr	w21, [x27, #8]
     190:	cmp	w21, #0xf
     194:	b.ls	648 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x648>  // b.plast
     198:	mov	w25, #0x20                  	// #32
     19c:	mov	x22, #0x1                   	// #1
     1a0:	b	5e0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x5e0>
     1a4:	ldr	x21, [x19]
     1a8:	ldr	w2, [x21, #8]
     1ac:	ldr	w0, [x21, #12]
     1b0:	sub	x0, x0, x2
     1b4:	cmp	x0, #0x3
     1b8:	b.ls	214 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x214>  // b.plast
     1bc:	ldr	w0, [x21, #8]
     1c0:	ldr	x1, [x21]
     1c4:	str	w20, [x1, x0]
     1c8:	ldr	w0, [x21, #8]
     1cc:	mov	w1, w0
     1d0:	add	x1, x1, #0x4
     1d4:	ldr	w2, [x21, #12]
     1d8:	cmp	x1, x2
     1dc:	b.hi	22c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x22c>  // b.pmore
     1e0:	add	w0, w0, #0x4
     1e4:	str	w0, [x21, #8]
     1e8:	ldr	w0, [x19, #8]
     1ec:	neg	w2, w0
     1f0:	mov	w1, #0x1                   	// #1
     1f4:	lsr	w1, w1, w2
     1f8:	cmp	w0, #0x0
     1fc:	csel	w1, w1, w0, ne  // ne = any
     200:	str	w1, [x19, #12]
     204:	add	w0, w0, #0x6
     208:	and	w0, w0, #0x1f
     20c:	str	w0, [x19, #8]
     210:	b	84 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x84>
     214:	mov	x3, #0x1                   	// #1
     218:	add	x2, x2, #0x4
     21c:	add	x1, x21, #0x10
     220:	mov	x0, x21
     224:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     228:	b	1bc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1bc>
     22c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     230:	add	x3, x3, #0x0
     234:	mov	w2, #0x43                  	// #67
     238:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     23c:	add	x1, x1, #0x0
     240:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     244:	add	x0, x0, #0x0
     248:	bl	0 <__assert_fail>
     24c:	ldr	x21, [x19]
     250:	ldr	w2, [x21, #8]
     254:	ldr	w0, [x21, #12]
     258:	sub	x0, x0, x2
     25c:	cmp	x0, #0x3
     260:	b.ls	2bc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x2bc>  // b.plast
     264:	ldr	w0, [x21, #8]
     268:	ldr	x1, [x21]
     26c:	str	w20, [x1, x0]
     270:	ldr	w0, [x21, #8]
     274:	mov	w1, w0
     278:	add	x1, x1, #0x4
     27c:	ldr	w2, [x21, #12]
     280:	cmp	x1, x2
     284:	b.hi	2d4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x2d4>  // b.pmore
     288:	add	w0, w0, #0x4
     28c:	str	w0, [x21, #8]
     290:	ldr	w0, [x19, #8]
     294:	neg	w2, w0
     298:	mov	w1, #0x1                   	// #1
     29c:	lsr	w1, w1, w2
     2a0:	cmp	w0, #0x0
     2a4:	csel	w1, w1, w0, ne  // ne = any
     2a8:	str	w1, [x19, #12]
     2ac:	add	w0, w0, #0x6
     2b0:	and	w0, w0, #0x1f
     2b4:	str	w0, [x19, #8]
     2b8:	b	ac <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xac>
     2bc:	mov	x3, #0x1                   	// #1
     2c0:	add	x2, x2, #0x4
     2c4:	add	x1, x21, #0x10
     2c8:	mov	x0, x21
     2cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     2d0:	b	264 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x264>
     2d4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     2d8:	add	x3, x3, #0x0
     2dc:	mov	w2, #0x43                  	// #67
     2e0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     2e4:	add	x1, x1, #0x0
     2e8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     2ec:	add	x0, x0, #0x0
     2f0:	bl	0 <__assert_fail>
     2f4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     2f8:	add	x3, x3, #0x0
     2fc:	mov	w2, #0x99                  	// #153
     300:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     304:	add	x1, x1, #0x0
     308:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     30c:	add	x0, x0, #0x0
     310:	bl	0 <__assert_fail>
     314:	ldr	x20, [x19]
     318:	ldr	w2, [x20, #8]
     31c:	ldr	w0, [x20, #12]
     320:	sub	x0, x0, x2
     324:	cmp	x0, #0x3
     328:	b.ls	380 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x380>  // b.plast
     32c:	ldr	w0, [x20, #8]
     330:	ldr	x1, [x20]
     334:	str	w27, [x1, x0]
     338:	ldr	w0, [x20, #8]
     33c:	mov	w1, w0
     340:	add	x1, x1, #0x4
     344:	ldr	w2, [x20, #12]
     348:	cmp	x1, x2
     34c:	b.hi	398 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x398>  // b.pmore
     350:	add	w0, w0, #0x4
     354:	str	w0, [x20, #8]
     358:	ldr	w0, [x19, #8]
     35c:	sub	w1, w25, w0
     360:	lsr	w26, w26, w1
     364:	cmp	w0, #0x0
     368:	csel	w26, w26, w0, ne  // ne = any
     36c:	str	w26, [x19, #12]
     370:	add	w0, w0, #0x6
     374:	and	w0, w0, #0x1f
     378:	str	w0, [x19, #8]
     37c:	b	f8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xf8>
     380:	mov	x3, x22
     384:	add	x2, x2, #0x4
     388:	add	x1, x20, #0x10
     38c:	mov	x0, x20
     390:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     394:	b	32c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x32c>
     398:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     39c:	add	x3, x3, #0x0
     3a0:	mov	w2, #0x43                  	// #67
     3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     3a8:	add	x1, x1, #0x0
     3ac:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     3b0:	add	x0, x0, #0x0
     3b4:	bl	0 <__assert_fail>
     3b8:	tst	w21, #0xffffffc0
     3bc:	b.eq	104 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x104>  // b.none
     3c0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     3c4:	add	x3, x3, #0x0
     3c8:	mov	w2, #0x79                  	// #121
     3cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     3d0:	add	x1, x1, #0x0
     3d4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     3d8:	add	x0, x0, #0x0
     3dc:	bl	0 <__assert_fail>
     3e0:	ldr	x20, [x19]
     3e4:	ldr	w2, [x20, #8]
     3e8:	ldr	w0, [x20, #12]
     3ec:	sub	x0, x0, x2
     3f0:	cmp	x0, #0x3
     3f4:	b.ls	44c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x44c>  // b.plast
     3f8:	ldr	w0, [x20, #8]
     3fc:	ldr	x1, [x20]
     400:	str	w22, [x1, x0]
     404:	ldr	w0, [x20, #8]
     408:	mov	w1, w0
     40c:	add	x1, x1, #0x4
     410:	ldr	w2, [x20, #12]
     414:	cmp	x1, x2
     418:	b.hi	464 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x464>  // b.pmore
     41c:	add	w0, w0, #0x4
     420:	str	w0, [x20, #8]
     424:	ldr	w0, [x19, #8]
     428:	neg	w1, w0
     42c:	lsr	w21, w21, w1
     430:	cmp	w0, #0x0
     434:	csel	w21, w21, w0, ne  // ne = any
     438:	str	w21, [x19, #12]
     43c:	add	w0, w0, #0x6
     440:	and	w0, w0, #0x1f
     444:	str	w0, [x19, #8]
     448:	b	128 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x128>
     44c:	mov	x3, #0x1                   	// #1
     450:	add	x2, x2, #0x4
     454:	add	x1, x20, #0x10
     458:	mov	x0, x20
     45c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     460:	b	3f8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x3f8>
     464:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     468:	add	x3, x3, #0x0
     46c:	mov	w2, #0x43                  	// #67
     470:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     474:	add	x1, x1, #0x0
     478:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     47c:	add	x0, x0, #0x0
     480:	bl	0 <__assert_fail>
     484:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     488:	add	x3, x3, #0x0
     48c:	mov	w2, #0x78                  	// #120
     490:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     494:	add	x1, x1, #0x0
     498:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     49c:	add	x0, x0, #0x0
     4a0:	bl	0 <__assert_fail>
     4a4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     4a8:	add	x3, x3, #0x0
     4ac:	mov	w2, #0x79                  	// #121
     4b0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     4b4:	add	x1, x1, #0x0
     4b8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     4bc:	add	x0, x0, #0x0
     4c0:	bl	0 <__assert_fail>
     4c4:	ldr	x22, [x19]
     4c8:	ldr	w2, [x22, #8]
     4cc:	ldr	w0, [x22, #12]
     4d0:	sub	x0, x0, x2
     4d4:	cmp	x0, #0x3
     4d8:	b.ls	534 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x534>  // b.plast
     4dc:	ldr	w0, [x22, #8]
     4e0:	ldr	x1, [x22]
     4e4:	str	w20, [x1, x0]
     4e8:	ldr	w0, [x22, #8]
     4ec:	mov	w1, w0
     4f0:	add	x1, x1, #0x4
     4f4:	ldr	w2, [x22, #12]
     4f8:	cmp	x1, x2
     4fc:	b.hi	54c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x54c>  // b.pmore
     500:	add	w0, w0, #0x4
     504:	str	w0, [x22, #8]
     508:	ldr	w1, [x19, #8]
     50c:	neg	w2, w1
     510:	mov	w0, #0x2                   	// #2
     514:	lsr	w0, w0, w2
     518:	cmp	w1, #0x0
     51c:	csel	w0, w0, w1, ne  // ne = any
     520:	str	w0, [x19, #12]
     524:	add	w21, w21, w1
     528:	and	w21, w21, #0x1f
     52c:	str	w21, [x19, #8]
     530:	b	18c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x18c>
     534:	mov	x3, #0x1                   	// #1
     538:	add	x2, x2, #0x4
     53c:	add	x1, x22, #0x10
     540:	mov	x0, x22
     544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     548:	b	4dc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x4dc>
     54c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     550:	add	x3, x3, #0x0
     554:	mov	w2, #0x43                  	// #67
     558:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     55c:	add	x1, x1, #0x0
     560:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     564:	add	x0, x0, #0x0
     568:	bl	0 <__assert_fail>
     56c:	ldr	x20, [x19]
     570:	ldr	w2, [x20, #8]
     574:	ldr	w0, [x20, #12]
     578:	sub	x0, x0, x2
     57c:	cmp	x0, #0x3
     580:	b.ls	610 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x610>  // b.plast
     584:	ldr	w0, [x20, #8]
     588:	ldr	x1, [x20]
     58c:	str	w28, [x1, x0]
     590:	ldr	w0, [x20, #8]
     594:	mov	w1, w0
     598:	add	x1, x1, #0x4
     59c:	ldr	w2, [x20, #12]
     5a0:	cmp	x1, x2
     5a4:	b.hi	628 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x628>  // b.pmore
     5a8:	add	w0, w0, #0x4
     5ac:	str	w0, [x20, #8]
     5b0:	ldr	w0, [x19, #8]
     5b4:	sub	w1, w25, w0
     5b8:	lsr	w26, w26, w1
     5bc:	cmp	w0, #0x0
     5c0:	csel	w26, w26, w0, ne  // ne = any
     5c4:	str	w26, [x19, #12]
     5c8:	add	w0, w0, #0x5
     5cc:	and	w0, w0, #0x1f
     5d0:	str	w0, [x19, #8]
     5d4:	lsr	w21, w21, #4
     5d8:	cmp	w21, #0xf
     5dc:	b.ls	650 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x650>  // b.plast
     5e0:	and	w26, w21, #0xf
     5e4:	orr	w26, w26, #0x10
     5e8:	ldr	w0, [x19, #8]
     5ec:	lsl	w28, w26, w0
     5f0:	ldr	w1, [x19, #12]
     5f4:	orr	w28, w28, w1
     5f8:	str	w28, [x19, #12]
     5fc:	add	w0, w0, #0x5
     600:	cmp	w0, #0x1f
     604:	b.hi	56c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x56c>  // b.pmore
     608:	str	w0, [x19, #8]
     60c:	b	5d4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x5d4>
     610:	mov	x3, x22
     614:	add	x2, x2, #0x4
     618:	add	x1, x20, #0x10
     61c:	mov	x0, x20
     620:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     624:	b	584 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x584>
     628:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     62c:	add	x3, x3, #0x0
     630:	mov	w2, #0x43                  	// #67
     634:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     638:	add	x1, x1, #0x0
     63c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     640:	add	x0, x0, #0x0
     644:	bl	0 <__assert_fail>
     648:	tst	w21, #0xffffffe0
     64c:	b.ne	690 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x690>  // b.any
     650:	ldr	w0, [x19, #8]
     654:	lsl	w20, w21, w0
     658:	ldr	w1, [x19, #12]
     65c:	orr	w20, w20, w1
     660:	str	w20, [x19, #12]
     664:	add	w0, w0, #0x5
     668:	cmp	w0, #0x1f
     66c:	b.hi	6b0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x6b0>  // b.pmore
     670:	str	w0, [x19, #8]
     674:	ldr	w0, [x27, #8]
     678:	str	w0, [sp, #124]
     67c:	cbz	w0, 1194 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1194>
     680:	mov	x26, #0x0                   	// #0
     684:	mov	w21, #0x20                  	// #32
     688:	mov	x22, #0x1                   	// #1
     68c:	b	d10 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd10>
     690:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     694:	add	x3, x3, #0x0
     698:	mov	w2, #0x79                  	// #121
     69c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     6a0:	add	x1, x1, #0x0
     6a4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     6a8:	add	x0, x0, #0x0
     6ac:	bl	0 <__assert_fail>
     6b0:	ldr	x22, [x19]
     6b4:	ldr	w2, [x22, #8]
     6b8:	ldr	w0, [x22, #12]
     6bc:	sub	x0, x0, x2
     6c0:	cmp	x0, #0x3
     6c4:	b.ls	71c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x71c>  // b.plast
     6c8:	ldr	w0, [x22, #8]
     6cc:	ldr	x1, [x22]
     6d0:	str	w20, [x1, x0]
     6d4:	ldr	w0, [x22, #8]
     6d8:	mov	w1, w0
     6dc:	add	x1, x1, #0x4
     6e0:	ldr	w2, [x22, #12]
     6e4:	cmp	x1, x2
     6e8:	b.hi	734 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x734>  // b.pmore
     6ec:	add	w0, w0, #0x4
     6f0:	str	w0, [x22, #8]
     6f4:	ldr	w0, [x19, #8]
     6f8:	neg	w1, w0
     6fc:	lsr	w21, w21, w1
     700:	cmp	w0, #0x0
     704:	csel	w21, w21, w0, ne  // ne = any
     708:	str	w21, [x19, #12]
     70c:	add	w0, w0, #0x5
     710:	and	w0, w0, #0x1f
     714:	str	w0, [x19, #8]
     718:	b	674 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x674>
     71c:	mov	x3, #0x1                   	// #1
     720:	add	x2, x2, #0x4
     724:	add	x1, x22, #0x10
     728:	mov	x0, x22
     72c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     730:	b	6c8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x6c8>
     734:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     738:	add	x3, x3, #0x0
     73c:	mov	w2, #0x43                  	// #67
     740:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     744:	add	x1, x1, #0x0
     748:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     74c:	add	x0, x0, #0x0
     750:	bl	0 <__assert_fail>
     754:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     758:	add	x3, x3, #0x0
     75c:	mov	w2, #0x99                  	// #153
     760:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     764:	add	x1, x1, #0x0
     768:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     76c:	add	x0, x0, #0x0
     770:	bl	0 <__assert_fail>
     774:	ldr	x20, [x19]
     778:	ldr	w2, [x20, #8]
     77c:	ldr	w0, [x20, #12]
     780:	sub	x0, x0, x2
     784:	cmp	x0, #0x3
     788:	b.ls	7e8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x7e8>  // b.plast
     78c:	ldr	w0, [x20, #8]
     790:	ldr	x1, [x20]
     794:	ldr	w2, [sp, #120]
     798:	str	w2, [x1, x0]
     79c:	ldr	w0, [x20, #8]
     7a0:	mov	w1, w0
     7a4:	add	x1, x1, #0x4
     7a8:	ldr	w2, [x20, #12]
     7ac:	cmp	x1, x2
     7b0:	b.hi	800 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x800>  // b.pmore
     7b4:	add	w0, w0, #0x4
     7b8:	str	w0, [x20, #8]
     7bc:	ldr	w0, [x19, #8]
     7c0:	sub	w1, w21, w0
     7c4:	ldr	w2, [sp, #116]
     7c8:	lsr	w1, w2, w1
     7cc:	cmp	w0, #0x0
     7d0:	csel	w1, w1, w0, ne  // ne = any
     7d4:	str	w1, [x19, #12]
     7d8:	add	w0, w0, #0x1
     7dc:	and	w0, w0, #0x1f
     7e0:	str	w0, [x19, #8]
     7e4:	b	d64 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd64>
     7e8:	mov	x3, x22
     7ec:	add	x2, x2, #0x4
     7f0:	add	x1, x20, #0x10
     7f4:	mov	x0, x20
     7f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7fc:	b	78c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x78c>
     800:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     804:	add	x3, x3, #0x0
     808:	mov	w2, #0x43                  	// #67
     80c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     810:	add	x1, x1, #0x0
     814:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     818:	add	x0, x0, #0x0
     81c:	bl	0 <__assert_fail>
     820:	mov	w25, w20
     824:	cmp	w20, #0x7f
     828:	b.hi	8d4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x8d4>  // b.pmore
     82c:	tst	w20, #0xffffff00
     830:	b.ne	944 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x944>  // b.any
     834:	ldr	w0, [x19, #8]
     838:	lsl	w1, w25, w0
     83c:	ldr	w28, [x19, #12]
     840:	orr	w28, w1, w28
     844:	str	w28, [x19, #12]
     848:	add	w0, w0, #0x8
     84c:	cmp	w0, #0x1f
     850:	b.hi	964 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x964>  // b.pmore
     854:	str	w0, [x19, #8]
     858:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
     85c:	ldr	x20, [x19]
     860:	ldr	w2, [x20, #8]
     864:	ldr	w0, [x20, #12]
     868:	sub	x0, x0, x2
     86c:	cmp	x0, #0x3
     870:	b.ls	90c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x90c>  // b.plast
     874:	ldr	w0, [x20, #8]
     878:	ldr	x1, [x20]
     87c:	str	w28, [x1, x0]
     880:	ldr	w0, [x20, #8]
     884:	mov	w1, w0
     888:	add	x1, x1, #0x4
     88c:	ldr	w2, [x20, #12]
     890:	cmp	x1, x2
     894:	b.hi	924 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x924>  // b.pmore
     898:	add	w0, w0, #0x4
     89c:	str	w0, [x20, #8]
     8a0:	ldr	w0, [x19, #8]
     8a4:	sub	w1, w21, w0
     8a8:	ldr	w2, [sp, #104]
     8ac:	lsr	w1, w2, w1
     8b0:	cmp	w0, #0x0
     8b4:	csel	w1, w1, w0, ne  // ne = any
     8b8:	str	w1, [x19, #12]
     8bc:	add	w0, w0, #0x8
     8c0:	and	w0, w0, #0x1f
     8c4:	str	w0, [x19, #8]
     8c8:	lsr	w25, w25, #7
     8cc:	cmp	w25, #0x7f
     8d0:	b.ls	834 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x834>  // b.plast
     8d4:	and	w0, w25, #0x7f
     8d8:	orr	w0, w0, #0x80
     8dc:	mov	w1, w0
     8e0:	str	w0, [sp, #104]
     8e4:	ldr	w0, [x19, #8]
     8e8:	lsl	w28, w1, w0
     8ec:	ldr	w1, [x19, #12]
     8f0:	orr	w28, w28, w1
     8f4:	str	w28, [x19, #12]
     8f8:	add	w0, w0, #0x8
     8fc:	cmp	w0, #0x1f
     900:	b.hi	85c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x85c>  // b.pmore
     904:	str	w0, [x19, #8]
     908:	b	8c8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x8c8>
     90c:	mov	x3, x22
     910:	add	x2, x2, #0x4
     914:	add	x1, x20, #0x10
     918:	mov	x0, x20
     91c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     920:	b	874 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x874>
     924:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     928:	add	x3, x3, #0x0
     92c:	mov	w2, #0x43                  	// #67
     930:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     934:	add	x1, x1, #0x0
     938:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     93c:	add	x0, x0, #0x0
     940:	bl	0 <__assert_fail>
     944:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     948:	add	x3, x3, #0x0
     94c:	mov	w2, #0x79                  	// #121
     950:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     954:	add	x1, x1, #0x0
     958:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     95c:	add	x0, x0, #0x0
     960:	bl	0 <__assert_fail>
     964:	ldr	x20, [x19]
     968:	ldr	w2, [x20, #8]
     96c:	ldr	w0, [x20, #12]
     970:	sub	x0, x0, x2
     974:	cmp	x0, #0x3
     978:	b.ls	9d0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x9d0>  // b.plast
     97c:	ldr	w0, [x20, #8]
     980:	ldr	x1, [x20]
     984:	str	w28, [x1, x0]
     988:	ldr	w0, [x20, #8]
     98c:	mov	w1, w0
     990:	add	x1, x1, #0x4
     994:	ldr	w2, [x20, #12]
     998:	cmp	x1, x2
     99c:	b.hi	9e8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x9e8>  // b.pmore
     9a0:	add	w0, w0, #0x4
     9a4:	str	w0, [x20, #8]
     9a8:	ldr	w0, [x19, #8]
     9ac:	sub	w1, w21, w0
     9b0:	lsr	w25, w25, w1
     9b4:	cmp	w0, #0x0
     9b8:	csel	w25, w25, w0, ne  // ne = any
     9bc:	str	w25, [x19, #12]
     9c0:	add	w0, w0, #0x8
     9c4:	and	w0, w0, #0x1f
     9c8:	str	w0, [x19, #8]
     9cc:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
     9d0:	mov	x3, x22
     9d4:	add	x2, x2, #0x4
     9d8:	add	x1, x20, #0x10
     9dc:	mov	x0, x20
     9e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     9e4:	b	97c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x97c>
     9e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     9ec:	add	x3, x3, #0x0
     9f0:	mov	w2, #0x43                  	// #67
     9f4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     9f8:	add	x1, x1, #0x0
     9fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     a00:	add	x0, x0, #0x0
     a04:	bl	0 <__assert_fail>
     a08:	ldr	x25, [x19]
     a0c:	ldr	w2, [x25, #8]
     a10:	ldr	w0, [x25, #12]
     a14:	sub	x0, x0, x2
     a18:	cmp	x0, #0x3
     a1c:	b.ls	ab8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xab8>  // b.plast
     a20:	ldr	w0, [x25, #8]
     a24:	ldr	x1, [x25]
     a28:	str	w28, [x1, x0]
     a2c:	ldr	w0, [x25, #8]
     a30:	mov	w1, w0
     a34:	add	x1, x1, #0x4
     a38:	ldr	w2, [x25, #12]
     a3c:	cmp	x1, x2
     a40:	b.hi	ad0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xad0>  // b.pmore
     a44:	add	w0, w0, #0x4
     a48:	str	w0, [x25, #8]
     a4c:	ldr	w0, [x19, #8]
     a50:	sub	w1, w21, w0
     a54:	ldr	w2, [sp, #104]
     a58:	lsr	w1, w2, w1
     a5c:	cmp	w0, #0x0
     a60:	csel	w1, w1, w0, ne  // ne = any
     a64:	str	w1, [x19, #12]
     a68:	add	w0, w0, #0x8
     a6c:	and	w0, w0, #0x1f
     a70:	str	w0, [x19, #8]
     a74:	lsr	x20, x20, #7
     a78:	cmp	x20, #0x7f
     a7c:	b.ls	af0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xaf0>  // b.plast
     a80:	and	w0, w20, #0x7f
     a84:	orr	w0, w0, #0x80
     a88:	mov	w1, w0
     a8c:	str	w0, [sp, #104]
     a90:	ldr	w0, [x19, #8]
     a94:	lsl	w28, w1, w0
     a98:	ldr	w1, [x19, #12]
     a9c:	orr	w28, w28, w1
     aa0:	str	w28, [x19, #12]
     aa4:	add	w0, w0, #0x8
     aa8:	cmp	w0, #0x1f
     aac:	b.hi	a08 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xa08>  // b.pmore
     ab0:	str	w0, [x19, #8]
     ab4:	b	a74 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xa74>
     ab8:	mov	x3, x22
     abc:	add	x2, x2, #0x4
     ac0:	add	x1, x25, #0x10
     ac4:	mov	x0, x25
     ac8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     acc:	b	a20 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xa20>
     ad0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     ad4:	add	x3, x3, #0x0
     ad8:	mov	w2, #0x43                  	// #67
     adc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     ae0:	add	x1, x1, #0x0
     ae4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     ae8:	add	x0, x0, #0x0
     aec:	bl	0 <__assert_fail>
     af0:	mov	w28, w20
     af4:	ldr	w0, [x19, #8]
     af8:	lsl	w25, w28, w0
     afc:	ldr	w1, [x19, #12]
     b00:	orr	w25, w25, w1
     b04:	str	w25, [x19, #12]
     b08:	add	w0, w0, #0x8
     b0c:	cmp	w0, #0x1f
     b10:	b.hi	b1c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xb1c>  // b.pmore
     b14:	str	w0, [x19, #8]
     b18:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
     b1c:	ldr	x20, [x19]
     b20:	ldr	w2, [x20, #8]
     b24:	ldr	w0, [x20, #12]
     b28:	sub	x0, x0, x2
     b2c:	cmp	x0, #0x3
     b30:	b.ls	b88 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xb88>  // b.plast
     b34:	ldr	w0, [x20, #8]
     b38:	ldr	x1, [x20]
     b3c:	str	w25, [x1, x0]
     b40:	ldr	w0, [x20, #8]
     b44:	mov	w1, w0
     b48:	add	x1, x1, #0x4
     b4c:	ldr	w2, [x20, #12]
     b50:	cmp	x1, x2
     b54:	b.hi	ba0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xba0>  // b.pmore
     b58:	add	w0, w0, #0x4
     b5c:	str	w0, [x20, #8]
     b60:	ldr	w0, [x19, #8]
     b64:	sub	w1, w21, w0
     b68:	lsr	w28, w28, w1
     b6c:	cmp	w0, #0x0
     b70:	csel	w28, w28, w0, ne  // ne = any
     b74:	str	w28, [x19, #12]
     b78:	add	w0, w0, #0x8
     b7c:	and	w0, w0, #0x1f
     b80:	str	w0, [x19, #8]
     b84:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
     b88:	mov	x3, x22
     b8c:	add	x2, x2, #0x4
     b90:	add	x1, x20, #0x10
     b94:	mov	x0, x20
     b98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     b9c:	b	b34 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xb34>
     ba0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     ba4:	add	x3, x3, #0x0
     ba8:	mov	w2, #0x43                  	// #67
     bac:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     bb0:	add	x1, x1, #0x0
     bb4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     bb8:	add	x0, x0, #0x0
     bbc:	bl	0 <__assert_fail>
     bc0:	ldrb	w0, [x25, #8]
     bc4:	ubfx	x0, x0, #1, #3
     bc8:	mov	x1, x0
     bcc:	str	w0, [sp, #116]
     bd0:	ldr	w0, [x19, #8]
     bd4:	lsl	w2, w1, w0
     bd8:	ldr	w1, [x19, #12]
     bdc:	orr	w1, w2, w1
     be0:	str	w1, [sp, #120]
     be4:	str	w1, [x19, #12]
     be8:	add	w0, w0, #0x3
     bec:	cmp	w0, #0x1f
     bf0:	b.hi	c24 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xc24>  // b.pmore
     bf4:	str	w0, [x19, #8]
     bf8:	ldrb	w0, [x25, #8]
     bfc:	tbnz	w0, #0, cd0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xcd0>
     c00:	ldrb	w0, [x25, #8]
     c04:	ubfx	x0, x0, #1, #3
     c08:	cmp	w0, #0x2
     c0c:	b.hi	cf0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xcf0>  // b.pmore
     c10:	cbnz	w0, db0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xdb0>
     c14:	mov	w1, #0x1                   	// #1
     c18:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     c1c:	add	x0, x0, #0x0
     c20:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     c24:	ldr	x20, [x19]
     c28:	ldr	w2, [x20, #8]
     c2c:	ldr	w0, [x20, #12]
     c30:	sub	x0, x0, x2
     c34:	cmp	x0, #0x3
     c38:	b.ls	c98 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xc98>  // b.plast
     c3c:	ldr	w0, [x20, #8]
     c40:	ldr	x1, [x20]
     c44:	ldr	w2, [sp, #120]
     c48:	str	w2, [x1, x0]
     c4c:	ldr	w0, [x20, #8]
     c50:	mov	w1, w0
     c54:	add	x1, x1, #0x4
     c58:	ldr	w2, [x20, #12]
     c5c:	cmp	x1, x2
     c60:	b.hi	cb0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xcb0>  // b.pmore
     c64:	add	w0, w0, #0x4
     c68:	str	w0, [x20, #8]
     c6c:	ldr	w0, [x19, #8]
     c70:	sub	w1, w21, w0
     c74:	ldr	w2, [sp, #116]
     c78:	lsr	w1, w2, w1
     c7c:	cmp	w0, #0x0
     c80:	csel	w1, w1, w0, ne  // ne = any
     c84:	str	w1, [x19, #12]
     c88:	add	w0, w0, #0x3
     c8c:	and	w0, w0, #0x1f
     c90:	str	w0, [x19, #8]
     c94:	b	bf8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xbf8>
     c98:	mov	x3, x22
     c9c:	add	x2, x2, #0x4
     ca0:	add	x1, x20, #0x10
     ca4:	mov	x0, x20
     ca8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     cac:	b	c3c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xc3c>
     cb0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     cb4:	add	x3, x3, #0x0
     cb8:	mov	w2, #0x43                  	// #67
     cbc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     cc0:	add	x1, x1, #0x0
     cc4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     cc8:	add	x0, x0, #0x0
     ccc:	bl	0 <__assert_fail>
     cd0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     cd4:	add	x3, x3, #0x0
     cd8:	mov	w2, #0x77                  	// #119
     cdc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     ce0:	add	x1, x1, #0x0
     ce4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     ce8:	add	x0, x0, #0x0
     cec:	bl	0 <__assert_fail>
     cf0:	add	w0, w0, #0x5
     cf4:	and	w0, w0, #0x7
     cf8:	cmp	w0, #0x2
     cfc:	b.hi	c14 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xc14>  // b.pmore
     d00:	add	x26, x26, #0x1
     d04:	ldr	w0, [sp, #124]
     d08:	cmp	w0, w26
     d0c:	b.eq	1194 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1194>  // b.none
     d10:	ldr	w0, [x27, #8]
     d14:	cmp	w0, w26
     d18:	b.ls	754 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x754>  // b.plast
     d1c:	lsl	x0, x26, #4
     d20:	str	x0, [sp, #104]
     d24:	ldr	x28, [x27]
     d28:	add	x25, x28, x0
     d2c:	ldrb	w0, [x25, #8]
     d30:	and	w0, w0, #0x1
     d34:	mov	w1, w0
     d38:	str	w0, [sp, #116]
     d3c:	ldr	w0, [x19, #8]
     d40:	lsl	w2, w1, w0
     d44:	ldr	w1, [x19, #12]
     d48:	orr	w1, w2, w1
     d4c:	str	w1, [sp, #120]
     d50:	str	w1, [x19, #12]
     d54:	add	w0, w0, #0x1
     d58:	cmp	w0, #0x1f
     d5c:	b.hi	774 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x774>  // b.pmore
     d60:	str	w0, [x19, #8]
     d64:	ldrb	w0, [x25, #8]
     d68:	tbz	w0, #0, bc0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xbc0>
     d6c:	ldr	x0, [sp, #104]
     d70:	ldr	x20, [x28, x0]
     d74:	tst	x20, #0xffffffff00000000
     d78:	b.eq	820 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x820>  // b.none
     d7c:	cmp	x20, #0x7f
     d80:	b.hi	a80 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xa80>  // b.pmore
     d84:	mov	w28, w20
     d88:	tst	w20, #0xffffff00
     d8c:	b.eq	af4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xaf4>  // b.none
     d90:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     d94:	add	x3, x3, #0x0
     d98:	mov	w2, #0x79                  	// #121
     d9c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     da0:	add	x1, x1, #0x0
     da4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     da8:	add	x0, x0, #0x0
     dac:	bl	0 <__assert_fail>
     db0:	ldr	x0, [sp, #104]
     db4:	ldr	x25, [x28, x0]
     db8:	tst	x25, #0xffffffff00000000
     dbc:	b.eq	df4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xdf4>  // b.none
     dc0:	cmp	x25, #0xf
     dc4:	b.hi	1054 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1054>  // b.pmore
     dc8:	mov	w28, w25
     dcc:	tst	w25, #0xffffffe0
     dd0:	b.eq	10c8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x10c8>  // b.none
     dd4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     dd8:	add	x3, x3, #0x0
     ddc:	mov	w2, #0x79                  	// #121
     de0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     de4:	add	x1, x1, #0x0
     de8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     dec:	add	x0, x0, #0x0
     df0:	bl	0 <__assert_fail>
     df4:	mov	w28, w25
     df8:	cmp	w25, #0xf
     dfc:	b.hi	ea8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xea8>  // b.pmore
     e00:	tst	w25, #0xffffffe0
     e04:	b.ne	f18 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xf18>  // b.any
     e08:	ldr	w0, [x19, #8]
     e0c:	lsl	w1, w28, w0
     e10:	ldr	w25, [x19, #12]
     e14:	orr	w25, w1, w25
     e18:	str	w25, [x19, #12]
     e1c:	add	w0, w0, #0x5
     e20:	cmp	w0, #0x1f
     e24:	b.hi	f38 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xf38>  // b.pmore
     e28:	str	w0, [x19, #8]
     e2c:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
     e30:	ldr	x20, [x19]
     e34:	ldr	w2, [x20, #8]
     e38:	ldr	w0, [x20, #12]
     e3c:	sub	x0, x0, x2
     e40:	cmp	x0, #0x3
     e44:	b.ls	ee0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xee0>  // b.plast
     e48:	ldr	w0, [x20, #8]
     e4c:	ldr	x1, [x20]
     e50:	str	w25, [x1, x0]
     e54:	ldr	w0, [x20, #8]
     e58:	mov	w1, w0
     e5c:	add	x1, x1, #0x4
     e60:	ldr	w2, [x20, #12]
     e64:	cmp	x1, x2
     e68:	b.hi	ef8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xef8>  // b.pmore
     e6c:	add	w0, w0, #0x4
     e70:	str	w0, [x20, #8]
     e74:	ldr	w0, [x19, #8]
     e78:	sub	w1, w21, w0
     e7c:	ldr	w2, [sp, #104]
     e80:	lsr	w1, w2, w1
     e84:	cmp	w0, #0x0
     e88:	csel	w1, w1, w0, ne  // ne = any
     e8c:	str	w1, [x19, #12]
     e90:	add	w0, w0, #0x5
     e94:	and	w0, w0, #0x1f
     e98:	str	w0, [x19, #8]
     e9c:	lsr	w28, w28, #4
     ea0:	cmp	w28, #0xf
     ea4:	b.ls	e08 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xe08>  // b.plast
     ea8:	and	w0, w28, #0xf
     eac:	orr	w0, w0, #0x10
     eb0:	mov	w1, w0
     eb4:	str	w0, [sp, #104]
     eb8:	ldr	w0, [x19, #8]
     ebc:	lsl	w25, w1, w0
     ec0:	ldr	w1, [x19, #12]
     ec4:	orr	w25, w25, w1
     ec8:	str	w25, [x19, #12]
     ecc:	add	w0, w0, #0x5
     ed0:	cmp	w0, #0x1f
     ed4:	b.hi	e30 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xe30>  // b.pmore
     ed8:	str	w0, [x19, #8]
     edc:	b	e9c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xe9c>
     ee0:	mov	x3, x22
     ee4:	add	x2, x2, #0x4
     ee8:	add	x1, x20, #0x10
     eec:	mov	x0, x20
     ef0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ef4:	b	e48 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xe48>
     ef8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     efc:	add	x3, x3, #0x0
     f00:	mov	w2, #0x43                  	// #67
     f04:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     f08:	add	x1, x1, #0x0
     f0c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     f10:	add	x0, x0, #0x0
     f14:	bl	0 <__assert_fail>
     f18:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     f1c:	add	x3, x3, #0x0
     f20:	mov	w2, #0x79                  	// #121
     f24:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     f28:	add	x1, x1, #0x0
     f2c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     f30:	add	x0, x0, #0x0
     f34:	bl	0 <__assert_fail>
     f38:	ldr	x20, [x19]
     f3c:	ldr	w2, [x20, #8]
     f40:	ldr	w0, [x20, #12]
     f44:	sub	x0, x0, x2
     f48:	cmp	x0, #0x3
     f4c:	b.ls	fa4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xfa4>  // b.plast
     f50:	ldr	w0, [x20, #8]
     f54:	ldr	x1, [x20]
     f58:	str	w25, [x1, x0]
     f5c:	ldr	w0, [x20, #8]
     f60:	mov	w1, w0
     f64:	add	x1, x1, #0x4
     f68:	ldr	w2, [x20, #12]
     f6c:	cmp	x1, x2
     f70:	b.hi	fbc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xfbc>  // b.pmore
     f74:	add	w0, w0, #0x4
     f78:	str	w0, [x20, #8]
     f7c:	ldr	w0, [x19, #8]
     f80:	sub	w1, w21, w0
     f84:	lsr	w28, w28, w1
     f88:	cmp	w0, #0x0
     f8c:	csel	w28, w28, w0, ne  // ne = any
     f90:	str	w28, [x19, #12]
     f94:	add	w0, w0, #0x5
     f98:	and	w0, w0, #0x1f
     f9c:	str	w0, [x19, #8]
     fa0:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
     fa4:	mov	x3, x22
     fa8:	add	x2, x2, #0x4
     fac:	add	x1, x20, #0x10
     fb0:	mov	x0, x20
     fb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     fb8:	b	f50 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xf50>
     fbc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     fc0:	add	x3, x3, #0x0
     fc4:	mov	w2, #0x43                  	// #67
     fc8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     fcc:	add	x1, x1, #0x0
     fd0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
     fd4:	add	x0, x0, #0x0
     fd8:	bl	0 <__assert_fail>
     fdc:	ldr	x20, [x19]
     fe0:	ldr	w2, [x20, #8]
     fe4:	ldr	w0, [x20, #12]
     fe8:	sub	x0, x0, x2
     fec:	cmp	x0, #0x3
     ff0:	b.ls	108c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x108c>  // b.plast
     ff4:	ldr	w0, [x20, #8]
     ff8:	ldr	x1, [x20]
     ffc:	str	w28, [x1, x0]
    1000:	ldr	w0, [x20, #8]
    1004:	mov	w1, w0
    1008:	add	x1, x1, #0x4
    100c:	ldr	w2, [x20, #12]
    1010:	cmp	x1, x2
    1014:	b.hi	10a4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x10a4>  // b.pmore
    1018:	add	w0, w0, #0x4
    101c:	str	w0, [x20, #8]
    1020:	ldr	w0, [x19, #8]
    1024:	sub	w1, w21, w0
    1028:	ldr	w2, [sp, #104]
    102c:	lsr	w1, w2, w1
    1030:	cmp	w0, #0x0
    1034:	csel	w1, w1, w0, ne  // ne = any
    1038:	str	w1, [x19, #12]
    103c:	add	w0, w0, #0x5
    1040:	and	w0, w0, #0x1f
    1044:	str	w0, [x19, #8]
    1048:	lsr	x25, x25, #4
    104c:	cmp	x25, #0xf
    1050:	b.ls	10c4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x10c4>  // b.plast
    1054:	and	w0, w25, #0xf
    1058:	orr	w0, w0, #0x10
    105c:	mov	w1, w0
    1060:	str	w0, [sp, #104]
    1064:	ldr	w0, [x19, #8]
    1068:	lsl	w28, w1, w0
    106c:	ldr	w1, [x19, #12]
    1070:	orr	w28, w28, w1
    1074:	str	w28, [x19, #12]
    1078:	add	w0, w0, #0x5
    107c:	cmp	w0, #0x1f
    1080:	b.hi	fdc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xfdc>  // b.pmore
    1084:	str	w0, [x19, #8]
    1088:	b	1048 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1048>
    108c:	mov	x3, x22
    1090:	add	x2, x2, #0x4
    1094:	add	x1, x20, #0x10
    1098:	mov	x0, x20
    109c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    10a0:	b	ff4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xff4>
    10a4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    10a8:	add	x3, x3, #0x0
    10ac:	mov	w2, #0x43                  	// #67
    10b0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    10b4:	add	x1, x1, #0x0
    10b8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    10bc:	add	x0, x0, #0x0
    10c0:	bl	0 <__assert_fail>
    10c4:	mov	w28, w25
    10c8:	ldr	w0, [x19, #8]
    10cc:	lsl	w25, w28, w0
    10d0:	ldr	w1, [x19, #12]
    10d4:	orr	w25, w25, w1
    10d8:	str	w25, [x19, #12]
    10dc:	add	w0, w0, #0x5
    10e0:	cmp	w0, #0x1f
    10e4:	b.hi	10f0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x10f0>  // b.pmore
    10e8:	str	w0, [x19, #8]
    10ec:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
    10f0:	ldr	x20, [x19]
    10f4:	ldr	w2, [x20, #8]
    10f8:	ldr	w0, [x20, #12]
    10fc:	sub	x0, x0, x2
    1100:	cmp	x0, #0x3
    1104:	b.ls	115c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x115c>  // b.plast
    1108:	ldr	w0, [x20, #8]
    110c:	ldr	x1, [x20]
    1110:	str	w25, [x1, x0]
    1114:	ldr	w0, [x20, #8]
    1118:	mov	w1, w0
    111c:	add	x1, x1, #0x4
    1120:	ldr	w2, [x20, #12]
    1124:	cmp	x1, x2
    1128:	b.hi	1174 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1174>  // b.pmore
    112c:	add	w0, w0, #0x4
    1130:	str	w0, [x20, #8]
    1134:	ldr	w0, [x19, #8]
    1138:	sub	w1, w21, w0
    113c:	lsr	w28, w28, w1
    1140:	cmp	w0, #0x0
    1144:	csel	w28, w28, w0, ne  // ne = any
    1148:	str	w28, [x19, #12]
    114c:	add	w0, w0, #0x5
    1150:	and	w0, w0, #0x1f
    1154:	str	w0, [x19, #8]
    1158:	b	d00 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xd00>
    115c:	mov	x3, x22
    1160:	add	x2, x2, #0x4
    1164:	add	x1, x20, #0x10
    1168:	mov	x0, x20
    116c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1170:	b	1108 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1108>
    1174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    1178:	add	x3, x3, #0x0
    117c:	mov	w2, #0x43                  	// #67
    1180:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    1184:	add	x1, x1, #0x0
    1188:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    118c:	add	x0, x0, #0x0
    1190:	bl	0 <__assert_fail>
    1194:	ldr	x3, [x19, #72]
    1198:	ldr	x1, [x19, #80]
    119c:	cmp	x3, x1
    11a0:	b.eq	11b4 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x11b4>  // b.none
    11a4:	ldur	w0, [x1, #-32]
    11a8:	sub	x20, x1, #0x20
    11ac:	cmp	w23, w0
    11b0:	b.eq	1228 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1228>  // b.none
    11b4:	sub	x0, x1, x3
    11b8:	asr	x0, x0, #5
    11bc:	cbz	w0, 11ec <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x11ec>
    11c0:	mov	x2, x3
    11c4:	sub	w0, w0, #0x1
    11c8:	add	x3, x3, #0x20
    11cc:	add	x0, x3, x0, lsl #5
    11d0:	mov	x20, x2
    11d4:	ldr	w3, [x2]
    11d8:	cmp	w23, w3
    11dc:	b.eq	1228 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1228>  // b.none
    11e0:	add	x2, x2, #0x20
    11e4:	cmp	x2, x0
    11e8:	b.ne	11d0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x11d0>  // b.any
    11ec:	ldr	x0, [x19, #88]
    11f0:	cmp	x1, x0
    11f4:	b.eq	1290 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1290>  // b.none
    11f8:	mov	x0, x1
    11fc:	str	wzr, [x0], #8
    1200:	str	xzr, [x1, #8]
    1204:	str	xzr, [x0, #8]
    1208:	str	xzr, [x0, #16]
    120c:	ldr	x0, [x19, #80]
    1210:	add	x0, x0, #0x20
    1214:	str	x0, [x19, #80]
    1218:	ldr	x0, [x19, #80]
    121c:	stur	w23, [x0, #-32]
    1220:	ldr	x20, [x19, #80]
    1224:	sub	x20, x20, #0x20
    1228:	ldr	x1, [x20, #16]
    122c:	ldr	x0, [x20, #24]
    1230:	cmp	x1, x0
    1234:	b.eq	129c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x129c>  // b.none
    1238:	ldr	x0, [x24]
    123c:	str	x0, [x1]
    1240:	str	xzr, [x1, #8]
    1244:	ldr	x0, [x24, #8]
    1248:	str	xzr, [x24, #8]
    124c:	str	x0, [x1, #8]
    1250:	str	xzr, [x24]
    1254:	ldr	x0, [x20, #16]
    1258:	add	x0, x0, #0x10
    125c:	str	x0, [x20, #16]
    1260:	ldr	x0, [x20, #16]
    1264:	ldr	x1, [x20, #8]
    1268:	sub	x0, x0, x1
    126c:	asr	x0, x0, #4
    1270:	add	w0, w0, #0x3
    1274:	ldp	x19, x20, [sp, #16]
    1278:	ldp	x21, x22, [sp, #32]
    127c:	ldp	x23, x24, [sp, #48]
    1280:	ldp	x25, x26, [sp, #64]
    1284:	ldp	x27, x28, [sp, #80]
    1288:	ldp	x29, x30, [sp], #160
    128c:	ret
    1290:	add	x0, x19, #0x48
    1294:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    1298:	b	1218 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1218>
    129c:	mov	x2, x24
    12a0:	add	x0, x20, #0x8
    12a4:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
    12a8:	b	1260 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x1260>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldrb	w0, [x1, #8]
  14:	tbnz	w0, #0, 58 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x58>
  18:	mov	w4, w2
  1c:	ldrb	w3, [x1, #8]
  20:	ubfx	x3, x3, #1, #3
  24:	cmp	w3, #0x2
  28:	b.eq	a0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xa0>  // b.none
  2c:	cmp	w3, #0x4
  30:	b.eq	b8 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xb8>  // b.none
  34:	cmp	w3, #0x1
  38:	b.eq	7c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x7c>  // b.none
  3c:	stp	x21, x22, [sp, #32]
  40:	mov	w2, #0x112                 	// #274
  44:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  48:	add	x1, x1, #0x0
  4c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  50:	add	x0, x0, #0x0
  54:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  58:	stp	x21, x22, [sp, #32]
  5c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x10e                 	// #270
  68:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  6c:	add	x1, x1, #0x0
  70:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  74:	add	x0, x0, #0x0
  78:	bl	0 <__assert_fail>
  7c:	ldr	x2, [x1]
  80:	cbnz	x2, 90 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x90>
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	w1, w4
  94:	mov	x0, x20
  98:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  9c:	b	84 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x84>
  a0:	ldr	x2, [x1]
  a4:	cbz	x2, 84 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x84>
  a8:	mov	w1, w4
  ac:	mov	x0, x20
  b0:	bl	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  b4:	b	84 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x84>
  b8:	stp	x21, x22, [sp, #32]
  bc:	and	w1, w2, #0xff
  c0:	sub	w0, w1, #0x61
  c4:	and	w0, w0, #0xff
  c8:	cmp	w0, #0x19
  cc:	b.ls	124 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x124>  // b.plast
  d0:	sub	w0, w1, #0x41
  d4:	and	w0, w0, #0xff
  d8:	cmp	w0, #0x19
  dc:	b.ls	160 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x160>  // b.plast
  e0:	sub	w0, w1, #0x30
  e4:	and	w0, w0, #0xff
  e8:	and	w4, w2, #0xff
  ec:	add	w19, w4, #0x4
  f0:	cmp	w0, #0x9
  f4:	b.ls	12c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x12c>  // b.plast
  f8:	cmp	w1, #0x2e
  fc:	b.eq	234 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x234>  // b.none
 100:	mov	w19, #0x3f                  	// #63
 104:	cmp	w1, #0x5f
 108:	b.eq	134 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x134>  // b.none
 10c:	mov	w2, #0x99                  	// #153
 110:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 114:	add	x1, x1, #0x0
 118:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 11c:	add	x0, x0, #0x0
 120:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 124:	and	w4, w2, #0xff
 128:	sub	w19, w4, #0x61
 12c:	tst	w19, #0xffffffc0
 130:	b.ne	16c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x16c>  // b.any
 134:	ldr	w0, [x20, #8]
 138:	lsl	w21, w19, w0
 13c:	ldr	w1, [x20, #12]
 140:	orr	w21, w21, w1
 144:	str	w21, [x20, #12]
 148:	add	w0, w0, #0x6
 14c:	cmp	w0, #0x1f
 150:	b.hi	18c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x18c>  // b.pmore
 154:	str	w0, [x20, #8]
 158:	ldp	x21, x22, [sp, #32]
 15c:	b	84 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x84>
 160:	and	w4, w2, #0xff
 164:	sub	w19, w4, #0x27
 168:	b	12c <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x12c>
 16c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x79                  	// #121
 178:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 17c:	add	x1, x1, #0x0
 180:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 184:	add	x0, x0, #0x0
 188:	bl	0 <__assert_fail>
 18c:	ldr	x22, [x20]
 190:	ldr	w2, [x22, #8]
 194:	ldr	w0, [x22, #12]
 198:	sub	x0, x0, x2
 19c:	cmp	x0, #0x3
 1a0:	b.ls	1fc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x1fc>  // b.plast
 1a4:	ldr	w0, [x22, #8]
 1a8:	ldr	x1, [x22]
 1ac:	str	w21, [x1, x0]
 1b0:	ldr	w0, [x22, #8]
 1b4:	mov	w1, w0
 1b8:	add	x1, x1, #0x4
 1bc:	ldr	w2, [x22, #12]
 1c0:	cmp	x1, x2
 1c4:	b.hi	214 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x214>  // b.pmore
 1c8:	add	w0, w0, #0x4
 1cc:	str	w0, [x22, #8]
 1d0:	ldr	w0, [x20, #8]
 1d4:	neg	w4, w0
 1d8:	lsr	w19, w19, w4
 1dc:	cmp	w0, #0x0
 1e0:	csel	w19, w19, w0, ne  // ne = any
 1e4:	str	w19, [x20, #12]
 1e8:	add	w0, w0, #0x6
 1ec:	and	w0, w0, #0x1f
 1f0:	str	w0, [x20, #8]
 1f4:	ldp	x21, x22, [sp, #32]
 1f8:	b	84 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x84>
 1fc:	mov	x3, #0x1                   	// #1
 200:	add	x2, x2, #0x4
 204:	add	x1, x22, #0x10
 208:	mov	x0, x22
 20c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 210:	b	1a4 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x1a4>
 214:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x43                  	// #67
 220:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 224:	add	x1, x1, #0x0
 228:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 22c:	add	x0, x0, #0x0
 230:	bl	0 <__assert_fail>
 234:	mov	w19, #0x3e                  	// #62
 238:	b	134 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x134>

Disassembly of section .text._ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE:

0000000000000000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>:
       0:	stp	x29, x30, [sp, #-208]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	stp	x21, x22, [sp, #32]
      10:	mov	x19, x0
      14:	str	x3, [sp, #200]
      18:	str	x2, [sp, #112]
      1c:	str	x3, [sp, #104]
      20:	str	x4, [sp, #168]
      24:	str	x5, [sp, #152]
      28:	ubfx	x21, x6, #32, #8
      2c:	str	w5, [sp, #140]
      30:	sub	w0, w1, #0x4
      34:	ldr	x3, [x19, #24]
      38:	ldr	x2, [x19, #32]
      3c:	sub	x2, x2, x3
      40:	cmp	x0, x2, asr #4
      44:	b.cs	c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc0>  // b.hs, b.nlast
      48:	stp	x25, x26, [sp, #64]
      4c:	stp	x27, x28, [sp, #80]
      50:	mov	x28, x4
      54:	mov	x20, x6
      58:	lsl	x0, x0, #4
      5c:	ldr	x0, [x3, x0]
      60:	mov	x22, x0
      64:	str	x0, [sp, #96]
      68:	ldr	w2, [x19, #16]
      6c:	mov	x0, x19
      70:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
      74:	ldr	w0, [x22, #8]
      78:	str	w0, [sp, #136]
      7c:	cbz	w21, 168 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x168>
      80:	cbz	w0, ec <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xec>
      84:	ldr	x0, [sp, #96]
      88:	ldr	x1, [x0]
      8c:	ldrb	w0, [x1, #8]
      90:	tbnz	w0, #0, 110 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x110>
      94:	ldrb	w0, [x1, #8]
      98:	ubfx	x0, x0, #1, #3
      9c:	sub	w0, w0, #0x3
      a0:	and	w0, w0, #0xfffffffd
      a4:	tst	w0, #0xff
      a8:	b.eq	144 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x144>  // b.none
      ac:	mov	w2, w20
      b0:	mov	x0, x19
      b4:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
      b8:	mov	w26, #0x1                   	// #1
      bc:	b	16c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x16c>
      c0:	stp	x23, x24, [sp, #48]
      c4:	stp	x25, x26, [sp, #64]
      c8:	stp	x27, x28, [sp, #80]
      cc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
      d0:	add	x3, x3, #0x0
      d4:	mov	w2, #0x12d                 	// #301
      d8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
      dc:	add	x1, x1, #0x0
      e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
      e4:	add	x0, x0, #0x0
      e8:	bl	0 <__assert_fail>
      ec:	stp	x23, x24, [sp, #48]
      f0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
      f4:	add	x3, x3, #0x0
      f8:	mov	w2, #0x134                 	// #308
      fc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     100:	add	x1, x1, #0x0
     104:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     108:	add	x0, x0, #0x0
     10c:	bl	0 <__assert_fail>
     110:	ldr	x0, [x1]
     114:	mov	w26, #0x1                   	// #1
     118:	cmp	x0, w20, uxtw
     11c:	b.eq	16c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x16c>  // b.none
     120:	stp	x23, x24, [sp, #48]
     124:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     128:	add	x3, x3, #0x0
     12c:	mov	w2, #0x106                 	// #262
     130:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     134:	add	x1, x1, #0x0
     138:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     13c:	add	x0, x0, #0x0
     140:	bl	0 <__assert_fail>
     144:	stp	x23, x24, [sp, #48]
     148:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     14c:	add	x3, x3, #0x0
     150:	mov	w2, #0x13a                 	// #314
     154:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     158:	add	x1, x1, #0x0
     15c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     160:	add	x0, x0, #0x0
     164:	bl	0 <__assert_fail>
     168:	mov	w26, #0x0                   	// #0
     16c:	ldr	w0, [sp, #136]
     170:	cmp	w26, w0
     174:	b.eq	1b0c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1b0c>  // b.none
     178:	stp	x23, x24, [sp, #48]
     17c:	str	x28, [sp, #120]
     180:	mov	w27, #0x0                   	// #0
     184:	mov	w28, #0x20                  	// #32
     188:	ldr	w0, [sp, #140]
     18c:	sub	w0, w0, #0x1
     190:	add	x0, x0, #0x1
     194:	str	x0, [sp, #160]
     198:	mov	w25, w26
     19c:	mov	w26, w27
     1a0:	b	190c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x190c>
     1a4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1a8:	add	x3, x3, #0x0
     1ac:	mov	w2, #0x99                  	// #153
     1b0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1b4:	add	x1, x1, #0x0
     1b8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1bc:	add	x0, x0, #0x0
     1c0:	bl	0 <__assert_fail>
     1c4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1c8:	add	x3, x3, #0x0
     1cc:	mov	w2, #0x145                 	// #325
     1d0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1d4:	add	x1, x1, #0x0
     1d8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1dc:	add	x0, x0, #0x0
     1e0:	bl	0 <__assert_fail>
     1e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1e8:	add	x3, x3, #0x0
     1ec:	mov	w2, #0x106                 	// #262
     1f0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1f4:	add	x1, x1, #0x0
     1f8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     1fc:	add	x0, x0, #0x0
     200:	bl	0 <__assert_fail>
     204:	ldrb	w3, [x1, #8]
     208:	ubfx	x3, x3, #1, #3
     20c:	cmp	w3, #0x3
     210:	b.eq	264 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x264>  // b.none
     214:	cmp	w3, #0x5
     218:	b.eq	1094 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1094>  // b.none
     21c:	mov	w1, w26
     220:	ldr	x4, [sp, #104]
     224:	cmp	x4, w26, uxtw
     228:	b.ls	18d0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18d0>  // b.plast
     22c:	ldr	x4, [sp, #112]
     230:	ldr	x1, [x4, x1, lsl #3]
     234:	cmp	w3, #0x2
     238:	b.eq	1970 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1970>  // b.none
     23c:	cmp	w3, #0x4
     240:	b.eq	1984 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1984>  // b.none
     244:	cmp	w3, #0x1
     248:	b.eq	18f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18f0>  // b.none
     24c:	mov	w2, #0x112                 	// #274
     250:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     254:	add	x1, x1, #0x0
     258:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     25c:	add	x0, x0, #0x0
     260:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     264:	add	w1, w25, #0x2
     268:	ldr	w2, [sp, #136]
     26c:	cmp	w1, w2
     270:	b.ne	2b0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2b0>  // b.any
     274:	add	w25, w25, #0x1
     278:	mov	w1, w25
     27c:	cmp	x4, w25, uxtw
     280:	b.ls	2d0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2d0>  // b.plast
     284:	add	x27, x0, x1, lsl #4
     288:	ldr	x0, [sp, #120]
     28c:	cbz	x0, 830 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x830>
     290:	ldr	x0, [sp, #104]
     294:	cmp	x0, w26, uxtw
     298:	b.ne	2f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2f0>  // b.any
     29c:	ldr	w21, [sp, #140]
     2a0:	cmp	w21, #0x1f
     2a4:	b.ls	3ec <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3ec>  // b.plast
     2a8:	mov	x24, #0x1                   	// #1
     2ac:	b	384 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x384>
     2b0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     2b4:	add	x3, x3, #0x0
     2b8:	mov	w2, #0x14a                 	// #330
     2bc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     2c0:	add	x1, x1, #0x0
     2c4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     2c8:	add	x0, x0, #0x0
     2cc:	bl	0 <__assert_fail>
     2d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     2d4:	add	x3, x3, #0x0
     2d8:	mov	w2, #0x99                  	// #153
     2dc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     2e0:	add	x1, x1, #0x0
     2e4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     2e8:	add	x0, x0, #0x0
     2ec:	bl	0 <__assert_fail>
     2f0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     2f4:	add	x3, x3, #0x0
     2f8:	mov	w2, #0x150                 	// #336
     2fc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     300:	add	x1, x1, #0x0
     304:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     308:	add	x0, x0, #0x0
     30c:	bl	0 <__assert_fail>
     310:	ldr	x23, [x19]
     314:	ldr	w2, [x23, #8]
     318:	ldr	w0, [x23, #12]
     31c:	sub	x0, x0, x2
     320:	cmp	x0, #0x3
     324:	b.ls	3b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3b4>  // b.plast
     328:	ldr	w0, [x23, #8]
     32c:	ldr	x1, [x23]
     330:	str	w22, [x1, x0]
     334:	ldr	w0, [x23, #8]
     338:	mov	w1, w0
     33c:	add	x1, x1, #0x4
     340:	ldr	w2, [x23, #12]
     344:	cmp	x1, x2
     348:	b.hi	3cc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3cc>  // b.pmore
     34c:	add	w0, w0, #0x4
     350:	str	w0, [x23, #8]
     354:	ldr	w0, [x19, #8]
     358:	sub	w1, w28, w0
     35c:	lsr	w20, w20, w1
     360:	cmp	w0, #0x0
     364:	csel	w20, w20, w0, ne  // ne = any
     368:	str	w20, [x19, #12]
     36c:	add	w0, w0, #0x6
     370:	and	w0, w0, #0x1f
     374:	str	w0, [x19, #8]
     378:	lsr	w21, w21, #5
     37c:	cmp	w21, #0x1f
     380:	b.ls	3fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3fc>  // b.plast
     384:	and	w20, w21, #0x1f
     388:	orr	w20, w20, #0x20
     38c:	ldr	w0, [x19, #8]
     390:	lsl	w22, w20, w0
     394:	ldr	w1, [x19, #12]
     398:	orr	w22, w22, w1
     39c:	str	w22, [x19, #12]
     3a0:	add	w0, w0, #0x6
     3a4:	cmp	w0, #0x1f
     3a8:	b.hi	310 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x310>  // b.pmore
     3ac:	str	w0, [x19, #8]
     3b0:	b	378 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x378>
     3b4:	mov	x3, x24
     3b8:	add	x2, x2, #0x4
     3bc:	add	x1, x23, #0x10
     3c0:	mov	x0, x23
     3c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     3c8:	b	328 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x328>
     3cc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     3d0:	add	x3, x3, #0x0
     3d4:	mov	w2, #0x43                  	// #67
     3d8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     3dc:	add	x1, x1, #0x0
     3e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     3e4:	add	x0, x0, #0x0
     3e8:	bl	0 <__assert_fail>
     3ec:	ldr	w0, [sp, #140]
     3f0:	tst	w0, #0xffffffc0
     3f4:	b.ne	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.any
     3f8:	ldr	w21, [sp, #140]
     3fc:	ldr	w0, [x19, #8]
     400:	lsl	w20, w21, w0
     404:	ldr	w1, [x19, #12]
     408:	orr	w20, w20, w1
     40c:	str	w20, [x19, #12]
     410:	add	w0, w0, #0x6
     414:	cmp	w0, #0x1f
     418:	b.hi	460 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x460>  // b.pmore
     41c:	str	w0, [x19, #8]
     420:	ldr	w0, [sp, #140]
     424:	cbz	w0, 1ac4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1ac4>
     428:	ldr	x0, [sp, #120]
     42c:	mov	x20, x0
     430:	ldr	x1, [sp, #160]
     434:	add	x22, x0, x1
     438:	str	w25, [sp, #120]
     43c:	b	538 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x538>
     440:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     444:	add	x3, x3, #0x0
     448:	mov	w2, #0x79                  	// #121
     44c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     450:	add	x1, x1, #0x0
     454:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     458:	add	x0, x0, #0x0
     45c:	bl	0 <__assert_fail>
     460:	ldr	x22, [x19]
     464:	ldr	w2, [x22, #8]
     468:	ldr	w0, [x22, #12]
     46c:	sub	x0, x0, x2
     470:	cmp	x0, #0x3
     474:	b.ls	4cc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4cc>  // b.plast
     478:	ldr	w0, [x22, #8]
     47c:	ldr	x1, [x22]
     480:	str	w20, [x1, x0]
     484:	ldr	w0, [x22, #8]
     488:	mov	w1, w0
     48c:	add	x1, x1, #0x4
     490:	ldr	w2, [x22, #12]
     494:	cmp	x1, x2
     498:	b.hi	4e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4e4>  // b.pmore
     49c:	add	w0, w0, #0x4
     4a0:	str	w0, [x22, #8]
     4a4:	ldr	w0, [x19, #8]
     4a8:	sub	w1, w28, w0
     4ac:	lsr	w21, w21, w1
     4b0:	cmp	w0, #0x0
     4b4:	csel	w21, w21, w0, ne  // ne = any
     4b8:	str	w21, [x19, #12]
     4bc:	add	w0, w0, #0x6
     4c0:	and	w0, w0, #0x1f
     4c4:	str	w0, [x19, #8]
     4c8:	b	420 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x420>
     4cc:	mov	x3, #0x1                   	// #1
     4d0:	add	x2, x2, #0x4
     4d4:	add	x1, x22, #0x10
     4d8:	mov	x0, x22
     4dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     4e0:	b	478 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x478>
     4e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     4e8:	add	x3, x3, #0x0
     4ec:	mov	w2, #0x43                  	// #67
     4f0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     4f4:	add	x1, x1, #0x0
     4f8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     4fc:	add	x0, x0, #0x0
     500:	bl	0 <__assert_fail>
     504:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     508:	add	x3, x3, #0x0
     50c:	mov	w2, #0x10e                 	// #270
     510:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     514:	add	x1, x1, #0x0
     518:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     51c:	add	x0, x0, #0x0
     520:	bl	0 <__assert_fail>
     524:	ldr	x23, [x27]
     528:	cbnz	x23, 57c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x57c>
     52c:	add	x20, x20, #0x1
     530:	cmp	x20, x22
     534:	b.eq	1acc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1acc>  // b.none
     538:	ldrb	w21, [x20]
     53c:	ldrb	w0, [x27, #8]
     540:	tbnz	w0, #0, 504 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x504>
     544:	ldrb	w0, [x27, #8]
     548:	ubfx	x0, x0, #1, #3
     54c:	cmp	w0, #0x2
     550:	b.eq	6a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x6a8>  // b.none
     554:	cmp	w0, #0x4
     558:	b.eq	6e8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x6e8>  // b.none
     55c:	cmp	w0, #0x1
     560:	b.eq	524 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x524>  // b.none
     564:	mov	w2, #0x112                 	// #274
     568:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     56c:	add	x1, x1, #0x0
     570:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     574:	add	x0, x0, #0x0
     578:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     57c:	sub	w0, w23, #0x1
     580:	cmp	w0, #0x1f
     584:	b.hi	5c4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x5c4>  // b.pmore
     588:	sub	w0, w28, w23
     58c:	mov	w1, #0xffffffff            	// #-1
     590:	lsr	w0, w1, w0
     594:	bics	wzr, w21, w0
     598:	b.ne	5e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x5e4>  // b.any
     59c:	ldr	w0, [x19, #8]
     5a0:	lsl	w2, w21, w0
     5a4:	ldr	w1, [x19, #12]
     5a8:	orr	w25, w2, w1
     5ac:	str	w25, [x19, #12]
     5b0:	add	w0, w0, w23
     5b4:	cmp	w0, #0x1f
     5b8:	b.hi	604 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x604>  // b.pmore
     5bc:	str	w0, [x19, #8]
     5c0:	b	52c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x52c>
     5c4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     5c8:	add	x3, x3, #0x0
     5cc:	mov	w2, #0x78                  	// #120
     5d0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     5d4:	add	x1, x1, #0x0
     5d8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     5dc:	add	x0, x0, #0x0
     5e0:	bl	0 <__assert_fail>
     5e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     5e8:	add	x3, x3, #0x0
     5ec:	mov	w2, #0x79                  	// #121
     5f0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     5f4:	add	x1, x1, #0x0
     5f8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     5fc:	add	x0, x0, #0x0
     600:	bl	0 <__assert_fail>
     604:	ldr	x24, [x19]
     608:	ldr	w2, [x24, #8]
     60c:	ldr	w0, [x24, #12]
     610:	sub	x0, x0, x2
     614:	cmp	x0, #0x3
     618:	b.ls	670 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x670>  // b.plast
     61c:	ldr	w0, [x24, #8]
     620:	ldr	x1, [x24]
     624:	str	w25, [x1, x0]
     628:	ldr	w0, [x24, #8]
     62c:	mov	w1, w0
     630:	add	x1, x1, #0x4
     634:	ldr	w2, [x24, #12]
     638:	cmp	x1, x2
     63c:	b.hi	688 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x688>  // b.pmore
     640:	add	w0, w0, #0x4
     644:	str	w0, [x24, #8]
     648:	ldr	w0, [x19, #8]
     64c:	sub	w1, w28, w0
     650:	lsr	w21, w21, w1
     654:	cmp	w0, #0x0
     658:	csel	w21, w21, w0, ne  // ne = any
     65c:	str	w21, [x19, #12]
     660:	add	w0, w0, w23
     664:	and	w0, w0, #0x1f
     668:	str	w0, [x19, #8]
     66c:	b	52c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x52c>
     670:	mov	x3, #0x1                   	// #1
     674:	add	x2, x2, #0x4
     678:	add	x1, x24, #0x10
     67c:	mov	x0, x24
     680:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     684:	b	61c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x61c>
     688:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     68c:	add	x3, x3, #0x0
     690:	mov	w2, #0x43                  	// #67
     694:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     698:	add	x1, x1, #0x0
     69c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     6a0:	add	x0, x0, #0x0
     6a4:	bl	0 <__assert_fail>
     6a8:	ldr	x2, [x27]
     6ac:	cbz	x2, 52c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x52c>
     6b0:	cmp	w2, #0x20
     6b4:	b.hi	6c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x6c8>  // b.pmore
     6b8:	mov	w1, w21
     6bc:	mov	x0, x19
     6c0:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     6c4:	b	52c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x52c>
     6c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     6cc:	add	x3, x3, #0x0
     6d0:	mov	w2, #0xa0                  	// #160
     6d4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     6d8:	add	x1, x1, #0x0
     6dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     6e0:	add	x0, x0, #0x0
     6e4:	bl	0 <__assert_fail>
     6e8:	sub	w0, w21, #0x61
     6ec:	and	w0, w0, #0xff
     6f0:	cmp	w0, #0x19
     6f4:	b.ls	730 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x730>  // b.plast
     6f8:	sub	w0, w21, #0x41
     6fc:	and	w0, w0, #0xff
     700:	cmp	w0, #0x19
     704:	b.ls	75c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x75c>  // b.plast
     708:	sub	w0, w21, #0x30
     70c:	and	w0, w0, #0xff
     710:	cmp	w0, #0x9
     714:	b.ls	764 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x764>  // b.plast
     718:	cmp	w21, #0x2e
     71c:	b.eq	784 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x784>  // b.none
     720:	cmp	w21, #0x5f
     724:	b.ne	76c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x76c>  // b.any
     728:	mov	w21, #0x3f                  	// #63
     72c:	b	734 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x734>
     730:	sub	w21, w21, #0x61
     734:	ldr	w0, [x19, #8]
     738:	lsl	w23, w21, w0
     73c:	ldr	w1, [x19, #12]
     740:	orr	w23, w23, w1
     744:	str	w23, [x19, #12]
     748:	add	w0, w0, #0x6
     74c:	cmp	w0, #0x1f
     750:	b.hi	78c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x78c>  // b.pmore
     754:	str	w0, [x19, #8]
     758:	b	52c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x52c>
     75c:	sub	w21, w21, #0x27
     760:	b	734 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x734>
     764:	add	w21, w21, #0x4
     768:	b	734 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x734>
     76c:	mov	w2, #0x99                  	// #153
     770:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     774:	add	x1, x1, #0x0
     778:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     77c:	add	x0, x0, #0x0
     780:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     784:	mov	w21, #0x3e                  	// #62
     788:	b	734 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x734>
     78c:	ldr	x24, [x19]
     790:	ldr	w2, [x24, #8]
     794:	ldr	w0, [x24, #12]
     798:	sub	x0, x0, x2
     79c:	cmp	x0, #0x3
     7a0:	b.ls	7f8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x7f8>  // b.plast
     7a4:	ldr	w0, [x24, #8]
     7a8:	ldr	x1, [x24]
     7ac:	str	w23, [x1, x0]
     7b0:	ldr	w0, [x24, #8]
     7b4:	mov	w1, w0
     7b8:	add	x1, x1, #0x4
     7bc:	ldr	w2, [x24, #12]
     7c0:	cmp	x1, x2
     7c4:	b.hi	810 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x810>  // b.pmore
     7c8:	add	w0, w0, #0x4
     7cc:	str	w0, [x24, #8]
     7d0:	ldr	w0, [x19, #8]
     7d4:	sub	w1, w28, w0
     7d8:	lsr	w21, w21, w1
     7dc:	cmp	w0, #0x0
     7e0:	csel	w21, w21, w0, ne  // ne = any
     7e4:	str	w21, [x19, #12]
     7e8:	add	w0, w0, #0x6
     7ec:	and	w0, w0, #0x1f
     7f0:	str	w0, [x19, #8]
     7f4:	b	52c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x52c>
     7f8:	mov	x3, #0x1                   	// #1
     7fc:	add	x2, x2, #0x4
     800:	add	x1, x24, #0x10
     804:	mov	x0, x24
     808:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     80c:	b	7a4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x7a4>
     810:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     814:	add	x3, x3, #0x0
     818:	mov	w2, #0x43                  	// #67
     81c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     820:	add	x1, x1, #0x0
     824:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     828:	add	x0, x0, #0x0
     82c:	bl	0 <__assert_fail>
     830:	ldr	x0, [sp, #104]
     834:	str	w0, [sp, #128]
     838:	sub	w21, w0, w26
     83c:	cmp	w21, #0x1f
     840:	b.ls	928 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x928>  // b.plast
     844:	mov	x24, #0x1                   	// #1
     848:	b	8c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x8c0>
     84c:	ldr	x23, [x19]
     850:	ldr	w2, [x23, #8]
     854:	ldr	w0, [x23, #12]
     858:	sub	x0, x0, x2
     85c:	cmp	x0, #0x3
     860:	b.ls	8f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x8f0>  // b.plast
     864:	ldr	w0, [x23, #8]
     868:	ldr	x1, [x23]
     86c:	str	w22, [x1, x0]
     870:	ldr	w0, [x23, #8]
     874:	mov	w1, w0
     878:	add	x1, x1, #0x4
     87c:	ldr	w2, [x23, #12]
     880:	cmp	x1, x2
     884:	b.hi	908 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x908>  // b.pmore
     888:	add	w0, w0, #0x4
     88c:	str	w0, [x23, #8]
     890:	ldr	w0, [x19, #8]
     894:	sub	w1, w28, w0
     898:	lsr	w20, w20, w1
     89c:	cmp	w0, #0x0
     8a0:	csel	w20, w20, w0, ne  // ne = any
     8a4:	str	w20, [x19, #12]
     8a8:	add	w0, w0, #0x6
     8ac:	and	w0, w0, #0x1f
     8b0:	str	w0, [x19, #8]
     8b4:	lsr	w21, w21, #5
     8b8:	cmp	w21, #0x1f
     8bc:	b.ls	930 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x930>  // b.plast
     8c0:	and	w20, w21, #0x1f
     8c4:	orr	w20, w20, #0x20
     8c8:	ldr	w0, [x19, #8]
     8cc:	lsl	w22, w20, w0
     8d0:	ldr	w1, [x19, #12]
     8d4:	orr	w22, w22, w1
     8d8:	str	w22, [x19, #12]
     8dc:	add	w0, w0, #0x6
     8e0:	cmp	w0, #0x1f
     8e4:	b.hi	84c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x84c>  // b.pmore
     8e8:	str	w0, [x19, #8]
     8ec:	b	8b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x8b4>
     8f0:	mov	x3, x24
     8f4:	add	x2, x2, #0x4
     8f8:	add	x1, x23, #0x10
     8fc:	mov	x0, x23
     900:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     904:	b	864 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x864>
     908:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     90c:	add	x3, x3, #0x0
     910:	mov	w2, #0x43                  	// #67
     914:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     918:	add	x1, x1, #0x0
     91c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     920:	add	x0, x0, #0x0
     924:	bl	0 <__assert_fail>
     928:	tst	w21, #0xffffffc0
     92c:	b.ne	978 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x978>  // b.any
     930:	ldr	w0, [x19, #8]
     934:	lsl	w20, w21, w0
     938:	ldr	w1, [x19, #12]
     93c:	orr	w20, w20, w1
     940:	str	w20, [x19, #12]
     944:	add	w0, w0, #0x6
     948:	cmp	w0, #0x1f
     94c:	b.hi	998 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x998>  // b.pmore
     950:	str	w0, [x19, #8]
     954:	ldr	x1, [sp, #104]
     958:	cmp	w1, w26
     95c:	b.eq	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>  // b.none
     960:	mov	w0, w26
     964:	cmp	x1, w26, uxtw
     968:	b.ls	a3c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa3c>  // b.plast
     96c:	add	w26, w26, #0x1
     970:	str	w25, [sp, #196]
     974:	b	aa4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xaa4>
     978:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     97c:	add	x3, x3, #0x0
     980:	mov	w2, #0x79                  	// #121
     984:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     988:	add	x1, x1, #0x0
     98c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     990:	add	x0, x0, #0x0
     994:	bl	0 <__assert_fail>
     998:	ldr	x22, [x19]
     99c:	ldr	w2, [x22, #8]
     9a0:	ldr	w0, [x22, #12]
     9a4:	sub	x0, x0, x2
     9a8:	cmp	x0, #0x3
     9ac:	b.ls	a04 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa04>  // b.plast
     9b0:	ldr	w0, [x22, #8]
     9b4:	ldr	x1, [x22]
     9b8:	str	w20, [x1, x0]
     9bc:	ldr	w0, [x22, #8]
     9c0:	mov	w1, w0
     9c4:	add	x1, x1, #0x4
     9c8:	ldr	w2, [x22, #12]
     9cc:	cmp	x1, x2
     9d0:	b.hi	a1c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa1c>  // b.pmore
     9d4:	add	w0, w0, #0x4
     9d8:	str	w0, [x22, #8]
     9dc:	ldr	w1, [x19, #8]
     9e0:	sub	w0, w28, w1
     9e4:	lsr	w0, w21, w0
     9e8:	cmp	w1, #0x0
     9ec:	csel	w0, w0, w1, ne  // ne = any
     9f0:	str	w0, [x19, #12]
     9f4:	add	w0, w1, #0x6
     9f8:	and	w0, w0, #0x1f
     9fc:	str	w0, [x19, #8]
     a00:	b	954 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x954>
     a04:	mov	x3, #0x1                   	// #1
     a08:	add	x2, x2, #0x4
     a0c:	add	x1, x22, #0x10
     a10:	mov	x0, x22
     a14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     a18:	b	9b0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x9b0>
     a1c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a20:	add	x3, x3, #0x0
     a24:	mov	w2, #0x43                  	// #67
     a28:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a2c:	add	x1, x1, #0x0
     a30:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a34:	add	x0, x0, #0x0
     a38:	bl	0 <__assert_fail>
     a3c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a40:	add	x3, x3, #0x0
     a44:	mov	w2, #0xfa                  	// #250
     a48:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a4c:	add	x1, x1, #0x0
     a50:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a54:	add	x0, x0, #0x0
     a58:	bl	0 <__assert_fail>
     a5c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a60:	add	x3, x3, #0x0
     a64:	mov	w2, #0x10e                 	// #270
     a68:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a6c:	add	x1, x1, #0x0
     a70:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     a74:	add	x0, x0, #0x0
     a78:	bl	0 <__assert_fail>
     a7c:	ldr	x21, [x27]
     a80:	cbnz	x21, aec <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xaec>
     a84:	ldr	w0, [sp, #128]
     a88:	cmp	w0, w26
     a8c:	b.eq	108c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x108c>  // b.none
     a90:	mov	w0, w26
     a94:	add	w26, w26, #0x1
     a98:	ldr	x1, [sp, #104]
     a9c:	cmp	x0, x1
     aa0:	b.cs	a3c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa3c>  // b.hs, b.nlast
     aa4:	ldr	x1, [sp, #112]
     aa8:	ldr	x20, [x1, x0, lsl #3]
     aac:	ldrb	w0, [x27, #8]
     ab0:	tbnz	w0, #0, a5c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa5c>
     ab4:	ldrb	w0, [x27, #8]
     ab8:	ubfx	x0, x0, #1, #3
     abc:	cmp	w0, #0x2
     ac0:	b.eq	c1c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc1c>  // b.none
     ac4:	cmp	w0, #0x4
     ac8:	b.eq	f40 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf40>  // b.none
     acc:	cmp	w0, #0x1
     ad0:	b.eq	a7c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa7c>  // b.none
     ad4:	mov	w2, #0x112                 	// #274
     ad8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     adc:	add	x1, x1, #0x0
     ae0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     ae4:	add	x0, x0, #0x0
     ae8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     aec:	mov	w22, w20
     af0:	sub	w0, w21, #0x1
     af4:	cmp	w0, #0x1f
     af8:	b.hi	b38 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xb38>  // b.pmore
     afc:	sub	w0, w28, w21
     b00:	mov	w1, #0xffffffff            	// #-1
     b04:	lsr	w0, w1, w0
     b08:	bics	wzr, w20, w0
     b0c:	b.ne	b58 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xb58>  // b.any
     b10:	ldr	w0, [x19, #8]
     b14:	lsl	w20, w20, w0
     b18:	ldr	w1, [x19, #12]
     b1c:	orr	w20, w20, w1
     b20:	str	w20, [x19, #12]
     b24:	add	w0, w0, w21
     b28:	cmp	w0, #0x1f
     b2c:	b.hi	b78 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xb78>  // b.pmore
     b30:	str	w0, [x19, #8]
     b34:	b	a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
     b38:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     b3c:	add	x3, x3, #0x0
     b40:	mov	w2, #0x78                  	// #120
     b44:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     b48:	add	x1, x1, #0x0
     b4c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     b50:	add	x0, x0, #0x0
     b54:	bl	0 <__assert_fail>
     b58:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     b5c:	add	x3, x3, #0x0
     b60:	mov	w2, #0x79                  	// #121
     b64:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     b68:	add	x1, x1, #0x0
     b6c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     b70:	add	x0, x0, #0x0
     b74:	bl	0 <__assert_fail>
     b78:	ldr	x23, [x19]
     b7c:	ldr	w2, [x23, #8]
     b80:	ldr	w0, [x23, #12]
     b84:	sub	x0, x0, x2
     b88:	cmp	x0, #0x3
     b8c:	b.ls	be4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xbe4>  // b.plast
     b90:	ldr	w0, [x23, #8]
     b94:	ldr	x1, [x23]
     b98:	str	w20, [x1, x0]
     b9c:	ldr	w0, [x23, #8]
     ba0:	mov	w1, w0
     ba4:	add	x1, x1, #0x4
     ba8:	ldr	w2, [x23, #12]
     bac:	cmp	x1, x2
     bb0:	b.hi	bfc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xbfc>  // b.pmore
     bb4:	add	w0, w0, #0x4
     bb8:	str	w0, [x23, #8]
     bbc:	ldr	w1, [x19, #8]
     bc0:	sub	w0, w28, w1
     bc4:	lsr	w0, w22, w0
     bc8:	cmp	w1, #0x0
     bcc:	csel	w0, w0, w1, ne  // ne = any
     bd0:	str	w0, [x19, #12]
     bd4:	add	w0, w1, w21
     bd8:	and	w0, w0, #0x1f
     bdc:	str	w0, [x19, #8]
     be0:	b	a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
     be4:	mov	x3, #0x1                   	// #1
     be8:	add	x2, x2, #0x4
     bec:	add	x1, x23, #0x10
     bf0:	mov	x0, x23
     bf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     bf8:	b	b90 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xb90>
     bfc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     c00:	add	x3, x3, #0x0
     c04:	mov	w2, #0x43                  	// #67
     c08:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     c0c:	add	x1, x1, #0x0
     c10:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     c14:	add	x0, x0, #0x0
     c18:	bl	0 <__assert_fail>
     c1c:	ldr	x24, [x27]
     c20:	cbz	x24, a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
     c24:	mov	w25, w24
     c28:	cmp	w24, #0x20
     c2c:	b.hi	ca8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xca8>  // b.pmore
     c30:	mov	w21, w20
     c34:	tst	x20, #0xffffffff00000000
     c38:	b.eq	cc8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xcc8>  // b.none
     c3c:	sub	w1, w24, #0x1
     c40:	mov	w0, #0x1                   	// #1
     c44:	lsl	w2, w0, w1
     c48:	cmp	x20, x2
     c4c:	b.cc	e54 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe54>  // b.lo, b.ul, b.last
     c50:	lsl	w0, w0, w1
     c54:	sub	w3, w0, #0x1
     c58:	str	w3, [sp, #148]
     c5c:	mov	w4, w0
     c60:	and	w21, w20, w3
     c64:	orr	w21, w21, w0
     c68:	cmp	w1, #0x1f
     c6c:	b.hi	cdc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xcdc>  // b.pmore
     c70:	sub	w0, w28, w24
     c74:	mov	w3, #0xffffffff            	// #-1
     c78:	lsr	w0, w3, w0
     c7c:	mvn	w3, w0
     c80:	str	w3, [sp, #144]
     c84:	bics	wzr, w21, w0
     c88:	b.ne	cfc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xcfc>  // b.any
     c8c:	str	w26, [sp, #192]
     c90:	str	x27, [sp, #176]
     c94:	str	x24, [sp, #184]
     c98:	mov	w24, w1
     c9c:	mov	w27, w4
     ca0:	mov	x26, x2
     ca4:	b	da8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xda8>
     ca8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     cac:	add	x3, x3, #0x0
     cb0:	mov	w2, #0xa0                  	// #160
     cb4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     cb8:	add	x1, x1, #0x0
     cbc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     cc0:	add	x0, x0, #0x0
     cc4:	bl	0 <__assert_fail>
     cc8:	mov	w2, w24
     ccc:	mov	w1, w20
     cd0:	mov	x0, x19
     cd4:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     cd8:	b	a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
     cdc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     ce0:	add	x3, x3, #0x0
     ce4:	mov	w2, #0x78                  	// #120
     ce8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     cec:	add	x1, x1, #0x0
     cf0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     cf4:	add	x0, x0, #0x0
     cf8:	bl	0 <__assert_fail>
     cfc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     d00:	add	x3, x3, #0x0
     d04:	mov	w2, #0x79                  	// #121
     d08:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     d0c:	add	x1, x1, #0x0
     d10:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     d14:	add	x0, x0, #0x0
     d18:	bl	0 <__assert_fail>
     d1c:	ldr	x23, [x19]
     d20:	ldr	w2, [x23, #8]
     d24:	ldr	w0, [x23, #12]
     d28:	sub	x0, x0, x2
     d2c:	cmp	x0, #0x3
     d30:	b.ls	dd0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xdd0>  // b.plast
     d34:	ldr	w0, [x23, #8]
     d38:	ldr	x1, [x23]
     d3c:	str	w22, [x1, x0]
     d40:	ldr	w0, [x23, #8]
     d44:	mov	w1, w0
     d48:	add	x1, x1, #0x4
     d4c:	ldr	w2, [x23, #12]
     d50:	cmp	x1, x2
     d54:	b.hi	de8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xde8>  // b.pmore
     d58:	add	w0, w0, #0x4
     d5c:	str	w0, [x23, #8]
     d60:	ldr	w0, [x19, #8]
     d64:	sub	w1, w28, w0
     d68:	lsr	w21, w21, w1
     d6c:	cmp	w0, #0x0
     d70:	csel	w21, w21, w0, ne  // ne = any
     d74:	str	w21, [x19, #12]
     d78:	add	w0, w25, w0
     d7c:	and	w0, w0, #0x1f
     d80:	str	w0, [x19, #8]
     d84:	lsr	x20, x20, x24
     d88:	cmp	x20, x26
     d8c:	b.cc	e08 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe08>  // b.lo, b.ul, b.last
     d90:	ldr	w0, [sp, #148]
     d94:	and	w21, w0, w20
     d98:	orr	w21, w21, w27
     d9c:	ldr	w0, [sp, #144]
     da0:	tst	w21, w0
     da4:	b.ne	cfc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xcfc>  // b.any
     da8:	ldr	w0, [x19, #8]
     dac:	lsl	w22, w21, w0
     db0:	ldr	w1, [x19, #12]
     db4:	orr	w22, w22, w1
     db8:	str	w22, [x19, #12]
     dbc:	add	w0, w25, w0
     dc0:	cmp	w0, #0x1f
     dc4:	b.hi	d1c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xd1c>  // b.pmore
     dc8:	str	w0, [x19, #8]
     dcc:	b	d84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xd84>
     dd0:	mov	x3, #0x1                   	// #1
     dd4:	add	x2, x2, #0x4
     dd8:	add	x1, x23, #0x10
     ddc:	mov	x0, x23
     de0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     de4:	b	d34 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xd34>
     de8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     dec:	add	x3, x3, #0x0
     df0:	mov	w2, #0x43                  	// #67
     df4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     df8:	add	x1, x1, #0x0
     dfc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     e00:	add	x0, x0, #0x0
     e04:	bl	0 <__assert_fail>
     e08:	ldr	w26, [sp, #192]
     e0c:	ldr	x27, [sp, #176]
     e10:	ldr	x24, [sp, #184]
     e14:	mov	w21, w20
     e18:	sub	w0, w28, w24
     e1c:	mov	w1, #0xffffffff            	// #-1
     e20:	lsr	w0, w1, w0
     e24:	bics	wzr, w21, w0
     e28:	b.ne	e7c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe7c>  // b.any
     e2c:	ldr	w0, [x19, #8]
     e30:	lsl	w20, w21, w0
     e34:	ldr	w1, [x19, #12]
     e38:	orr	w20, w20, w1
     e3c:	str	w20, [x19, #12]
     e40:	add	w0, w0, w24
     e44:	cmp	w0, #0x1f
     e48:	b.hi	e9c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe9c>  // b.pmore
     e4c:	str	w0, [x19, #8]
     e50:	b	a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
     e54:	cmp	w1, #0x1f
     e58:	b.ls	e18 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe18>  // b.plast
     e5c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     e60:	add	x3, x3, #0x0
     e64:	mov	w2, #0x78                  	// #120
     e68:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     e6c:	add	x1, x1, #0x0
     e70:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     e74:	add	x0, x0, #0x0
     e78:	bl	0 <__assert_fail>
     e7c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     e80:	add	x3, x3, #0x0
     e84:	mov	w2, #0x79                  	// #121
     e88:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     e8c:	add	x1, x1, #0x0
     e90:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     e94:	add	x0, x0, #0x0
     e98:	bl	0 <__assert_fail>
     e9c:	ldr	x22, [x19]
     ea0:	ldr	w2, [x22, #8]
     ea4:	ldr	w0, [x22, #12]
     ea8:	sub	x0, x0, x2
     eac:	cmp	x0, #0x3
     eb0:	b.ls	f08 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf08>  // b.plast
     eb4:	ldr	w0, [x22, #8]
     eb8:	ldr	x1, [x22]
     ebc:	str	w20, [x1, x0]
     ec0:	ldr	w0, [x22, #8]
     ec4:	mov	w1, w0
     ec8:	add	x1, x1, #0x4
     ecc:	ldr	w2, [x22, #12]
     ed0:	cmp	x1, x2
     ed4:	b.hi	f20 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf20>  // b.pmore
     ed8:	add	w0, w0, #0x4
     edc:	str	w0, [x22, #8]
     ee0:	ldr	w0, [x19, #8]
     ee4:	sub	w1, w28, w0
     ee8:	lsr	w1, w21, w1
     eec:	cmp	w0, #0x0
     ef0:	csel	w1, w1, w0, ne  // ne = any
     ef4:	str	w1, [x19, #12]
     ef8:	add	w0, w0, w24
     efc:	and	w0, w0, #0x1f
     f00:	str	w0, [x19, #8]
     f04:	b	a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
     f08:	mov	x3, #0x1                   	// #1
     f0c:	add	x2, x2, #0x4
     f10:	add	x1, x22, #0x10
     f14:	mov	x0, x22
     f18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     f1c:	b	eb4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xeb4>
     f20:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     f24:	add	x3, x3, #0x0
     f28:	mov	w2, #0x43                  	// #67
     f2c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     f30:	add	x1, x1, #0x0
     f34:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     f38:	add	x0, x0, #0x0
     f3c:	bl	0 <__assert_fail>
     f40:	and	w20, w20, #0xff
     f44:	sub	w0, w20, #0x61
     f48:	and	w0, w0, #0xff
     f4c:	cmp	w0, #0x19
     f50:	b.ls	f8c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf8c>  // b.plast
     f54:	sub	w0, w20, #0x41
     f58:	and	w0, w0, #0xff
     f5c:	cmp	w0, #0x19
     f60:	b.ls	fb8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xfb8>  // b.plast
     f64:	sub	w0, w20, #0x30
     f68:	and	w0, w0, #0xff
     f6c:	cmp	w0, #0x9
     f70:	b.ls	fc0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xfc0>  // b.plast
     f74:	cmp	w20, #0x2e
     f78:	b.eq	fe0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xfe0>  // b.none
     f7c:	cmp	w20, #0x5f
     f80:	b.ne	fc8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xfc8>  // b.any
     f84:	mov	w20, #0x3f                  	// #63
     f88:	b	f90 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf90>
     f8c:	sub	w20, w20, #0x61
     f90:	ldr	w0, [x19, #8]
     f94:	lsl	w21, w20, w0
     f98:	ldr	w1, [x19, #12]
     f9c:	orr	w21, w21, w1
     fa0:	str	w21, [x19, #12]
     fa4:	add	w0, w0, #0x6
     fa8:	cmp	w0, #0x1f
     fac:	b.hi	fe8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xfe8>  // b.pmore
     fb0:	str	w0, [x19, #8]
     fb4:	b	a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
     fb8:	sub	w20, w20, #0x27
     fbc:	b	f90 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf90>
     fc0:	add	w20, w20, #0x4
     fc4:	b	f90 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf90>
     fc8:	mov	w2, #0x99                  	// #153
     fcc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     fd0:	add	x1, x1, #0x0
     fd4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
     fd8:	add	x0, x0, #0x0
     fdc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     fe0:	mov	w20, #0x3e                  	// #62
     fe4:	b	f90 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf90>
     fe8:	ldr	x22, [x19]
     fec:	ldr	w2, [x22, #8]
     ff0:	ldr	w0, [x22, #12]
     ff4:	sub	x0, x0, x2
     ff8:	cmp	x0, #0x3
     ffc:	b.ls	1054 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1054>  // b.plast
    1000:	ldr	w0, [x22, #8]
    1004:	ldr	x1, [x22]
    1008:	str	w21, [x1, x0]
    100c:	ldr	w0, [x22, #8]
    1010:	mov	w1, w0
    1014:	add	x1, x1, #0x4
    1018:	ldr	w2, [x22, #12]
    101c:	cmp	x1, x2
    1020:	b.hi	106c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x106c>  // b.pmore
    1024:	add	w0, w0, #0x4
    1028:	str	w0, [x22, #8]
    102c:	ldr	w0, [x19, #8]
    1030:	sub	w1, w28, w0
    1034:	lsr	w20, w20, w1
    1038:	cmp	w0, #0x0
    103c:	csel	w20, w20, w0, ne  // ne = any
    1040:	str	w20, [x19, #12]
    1044:	add	w0, w0, #0x6
    1048:	and	w0, w0, #0x1f
    104c:	str	w0, [x19, #8]
    1050:	b	a84 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa84>
    1054:	mov	x3, #0x1                   	// #1
    1058:	add	x2, x2, #0x4
    105c:	add	x1, x22, #0x10
    1060:	mov	x0, x22
    1064:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1068:	b	1000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1000>
    106c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1070:	add	x3, x3, #0x0
    1074:	mov	w2, #0x43                  	// #67
    1078:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    107c:	add	x1, x1, #0x0
    1080:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1084:	add	x0, x0, #0x0
    1088:	bl	0 <__assert_fail>
    108c:	ldr	w25, [sp, #196]
    1090:	b	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>
    1094:	ldr	x0, [sp, #120]
    1098:	cbz	x0, 14e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x14e0>
    109c:	ldr	x0, [sp, #104]
    10a0:	cmp	x0, w26, uxtw
    10a4:	b.ne	10d8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x10d8>  // b.any
    10a8:	ldr	x0, [sp, #168]
    10ac:	ldr	x1, [sp, #120]
    10b0:	cmp	x0, x1
    10b4:	b.ne	10f8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x10f8>  // b.any
    10b8:	ldr	x0, [sp, #152]
    10bc:	tst	x0, #0xffffffff00000000
    10c0:	b.ne	1118 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1118>  // b.any
    10c4:	ldr	w21, [sp, #140]
    10c8:	cmp	w21, #0x1f
    10cc:	b.ls	1214 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1214>  // b.plast
    10d0:	mov	x24, #0x1                   	// #1
    10d4:	b	11ac <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x11ac>
    10d8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    10dc:	add	x3, x3, #0x0
    10e0:	mov	w2, #0x168                 	// #360
    10e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    10e8:	add	x1, x1, #0x0
    10ec:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    10f0:	add	x0, x0, #0x0
    10f4:	bl	0 <__assert_fail>
    10f8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    10fc:	add	x3, x3, #0x0
    1100:	mov	w2, #0x16b                 	// #363
    1104:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1108:	add	x1, x1, #0x0
    110c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1110:	add	x0, x0, #0x0
    1114:	bl	0 <__assert_fail>
    1118:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    111c:	add	x3, x3, #0x0
    1120:	mov	w2, #0x16c                 	// #364
    1124:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1128:	add	x1, x1, #0x0
    112c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1130:	add	x0, x0, #0x0
    1134:	bl	0 <__assert_fail>
    1138:	ldr	x23, [x19]
    113c:	ldr	w2, [x23, #8]
    1140:	ldr	w0, [x23, #12]
    1144:	sub	x0, x0, x2
    1148:	cmp	x0, #0x3
    114c:	b.ls	11dc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x11dc>  // b.plast
    1150:	ldr	w0, [x23, #8]
    1154:	ldr	x1, [x23]
    1158:	str	w22, [x1, x0]
    115c:	ldr	w0, [x23, #8]
    1160:	mov	w1, w0
    1164:	add	x1, x1, #0x4
    1168:	ldr	w2, [x23, #12]
    116c:	cmp	x1, x2
    1170:	b.hi	11f4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x11f4>  // b.pmore
    1174:	add	w0, w0, #0x4
    1178:	str	w0, [x23, #8]
    117c:	ldr	w0, [x19, #8]
    1180:	sub	w1, w28, w0
    1184:	lsr	w20, w20, w1
    1188:	cmp	w0, #0x0
    118c:	csel	w20, w20, w0, ne  // ne = any
    1190:	str	w20, [x19, #12]
    1194:	add	w0, w0, #0x6
    1198:	and	w0, w0, #0x1f
    119c:	str	w0, [x19, #8]
    11a0:	lsr	w21, w21, #5
    11a4:	cmp	w21, #0x1f
    11a8:	b.ls	1224 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1224>  // b.plast
    11ac:	and	w20, w21, #0x1f
    11b0:	orr	w20, w20, #0x20
    11b4:	ldr	w0, [x19, #8]
    11b8:	lsl	w22, w20, w0
    11bc:	ldr	w1, [x19, #12]
    11c0:	orr	w22, w22, w1
    11c4:	str	w22, [x19, #12]
    11c8:	add	w0, w0, #0x6
    11cc:	cmp	w0, #0x1f
    11d0:	b.hi	1138 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1138>  // b.pmore
    11d4:	str	w0, [x19, #8]
    11d8:	b	11a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x11a0>
    11dc:	mov	x3, x24
    11e0:	add	x2, x2, #0x4
    11e4:	add	x1, x23, #0x10
    11e8:	mov	x0, x23
    11ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    11f0:	b	1150 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1150>
    11f4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    11f8:	add	x3, x3, #0x0
    11fc:	mov	w2, #0x43                  	// #67
    1200:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1204:	add	x1, x1, #0x0
    1208:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    120c:	add	x0, x0, #0x0
    1210:	bl	0 <__assert_fail>
    1214:	ldr	w0, [sp, #140]
    1218:	tst	w0, #0xffffffc0
    121c:	b.ne	1320 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1320>  // b.any
    1220:	ldr	w21, [sp, #140]
    1224:	ldr	w0, [x19, #8]
    1228:	lsl	w20, w21, w0
    122c:	ldr	w1, [x19, #12]
    1230:	orr	w20, w20, w1
    1234:	str	w20, [x19, #12]
    1238:	add	w0, w0, #0x6
    123c:	cmp	w0, #0x1f
    1240:	b.hi	1340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1340>  // b.pmore
    1244:	str	w0, [x19, #8]
    1248:	ldr	w0, [x19, #8]
    124c:	cbnz	w0, 13e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x13e4>
    1250:	ldr	x0, [sp, #120]
    1254:	ldr	x1, [sp, #152]
    1258:	add	x23, x0, x1
    125c:	mov	x21, x0
    1260:	mov	x24, #0x1                   	// #1
    1264:	cmp	x23, x0
    1268:	b.eq	12bc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x12bc>  // b.none
    126c:	ldrb	w22, [x21]
    1270:	ldr	x20, [x19]
    1274:	ldr	w1, [x20, #8]
    1278:	ldr	w0, [x20, #12]
    127c:	cmp	w1, w0
    1280:	b.cs	1470 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1470>  // b.hs, b.nlast
    1284:	ldr	w0, [x20, #8]
    1288:	ldr	x1, [x20]
    128c:	strb	w22, [x1, x0]
    1290:	ldr	w0, [x20, #8]
    1294:	mov	w1, w0
    1298:	add	x1, x1, #0x1
    129c:	ldr	w2, [x20, #12]
    12a0:	cmp	x1, x2
    12a4:	b.hi	1488 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1488>  // b.pmore
    12a8:	add	w0, w0, #0x1
    12ac:	str	w0, [x20, #8]
    12b0:	add	x21, x21, #0x1
    12b4:	cmp	x23, x21
    12b8:	b.ne	126c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x126c>  // b.any
    12bc:	ldr	x20, [x19]
    12c0:	ldr	w0, [x20, #8]
    12c4:	mov	x21, #0x1                   	// #1
    12c8:	tst	x0, #0x3
    12cc:	b.eq	1318 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1318>  // b.none
    12d0:	ldr	w1, [x20, #12]
    12d4:	cmp	w1, w0
    12d8:	b.ls	14a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x14a8>  // b.plast
    12dc:	ldr	w0, [x20, #8]
    12e0:	ldr	x1, [x20]
    12e4:	strb	wzr, [x1, x0]
    12e8:	ldr	w0, [x20, #8]
    12ec:	mov	w1, w0
    12f0:	add	x1, x1, #0x1
    12f4:	ldr	w2, [x20, #12]
    12f8:	cmp	x1, x2
    12fc:	b.hi	14c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x14c0>  // b.pmore
    1300:	add	w0, w0, #0x1
    1304:	str	w0, [x20, #8]
    1308:	ldr	x20, [x19]
    130c:	ldr	w0, [x20, #8]
    1310:	tst	x0, #0x3
    1314:	b.ne	12d0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x12d0>  // b.any
    1318:	str	xzr, [sp, #120]
    131c:	b	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>
    1320:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1324:	add	x3, x3, #0x0
    1328:	mov	w2, #0x79                  	// #121
    132c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1330:	add	x1, x1, #0x0
    1334:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1338:	add	x0, x0, #0x0
    133c:	bl	0 <__assert_fail>
    1340:	ldr	x22, [x19]
    1344:	ldr	w2, [x22, #8]
    1348:	ldr	w0, [x22, #12]
    134c:	sub	x0, x0, x2
    1350:	cmp	x0, #0x3
    1354:	b.ls	13ac <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x13ac>  // b.plast
    1358:	ldr	w0, [x22, #8]
    135c:	ldr	x1, [x22]
    1360:	str	w20, [x1, x0]
    1364:	ldr	w0, [x22, #8]
    1368:	mov	w1, w0
    136c:	add	x1, x1, #0x4
    1370:	ldr	w2, [x22, #12]
    1374:	cmp	x1, x2
    1378:	b.hi	13c4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x13c4>  // b.pmore
    137c:	add	w0, w0, #0x4
    1380:	str	w0, [x22, #8]
    1384:	ldr	w1, [x19, #8]
    1388:	sub	w0, w28, w1
    138c:	lsr	w0, w21, w0
    1390:	cmp	w1, #0x0
    1394:	csel	w0, w0, w1, ne  // ne = any
    1398:	str	w0, [x19, #12]
    139c:	add	w0, w1, #0x6
    13a0:	and	w0, w0, #0x1f
    13a4:	str	w0, [x19, #8]
    13a8:	b	1248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1248>
    13ac:	mov	x3, #0x1                   	// #1
    13b0:	add	x2, x2, #0x4
    13b4:	add	x1, x22, #0x10
    13b8:	mov	x0, x22
    13bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13c0:	b	1358 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1358>
    13c4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    13c8:	add	x3, x3, #0x0
    13cc:	mov	w2, #0x43                  	// #67
    13d0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    13d4:	add	x1, x1, #0x0
    13d8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    13dc:	add	x0, x0, #0x0
    13e0:	bl	0 <__assert_fail>
    13e4:	ldr	w21, [x19, #12]
    13e8:	ldr	x20, [x19]
    13ec:	ldr	w2, [x20, #8]
    13f0:	ldr	w0, [x20, #12]
    13f4:	sub	x0, x0, x2
    13f8:	cmp	x0, #0x3
    13fc:	b.ls	1438 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1438>  // b.plast
    1400:	ldr	w0, [x20, #8]
    1404:	ldr	x1, [x20]
    1408:	str	w21, [x1, x0]
    140c:	ldr	w0, [x20, #8]
    1410:	mov	w1, w0
    1414:	add	x1, x1, #0x4
    1418:	ldr	w2, [x20, #12]
    141c:	cmp	x1, x2
    1420:	b.hi	1450 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1450>  // b.pmore
    1424:	add	w0, w0, #0x4
    1428:	str	w0, [x20, #8]
    142c:	str	wzr, [x19, #8]
    1430:	str	wzr, [x19, #12]
    1434:	b	1250 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1250>
    1438:	mov	x3, #0x1                   	// #1
    143c:	add	x2, x2, #0x4
    1440:	add	x1, x20, #0x10
    1444:	mov	x0, x20
    1448:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    144c:	b	1400 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1400>
    1450:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1454:	add	x3, x3, #0x0
    1458:	mov	w2, #0x43                  	// #67
    145c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1460:	add	x1, x1, #0x0
    1464:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1468:	add	x0, x0, #0x0
    146c:	bl	0 <__assert_fail>
    1470:	mov	x3, x24
    1474:	mov	x2, #0x0                   	// #0
    1478:	add	x1, x20, #0x10
    147c:	mov	x0, x20
    1480:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1484:	b	1284 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1284>
    1488:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    148c:	add	x3, x3, #0x0
    1490:	mov	w2, #0x43                  	// #67
    1494:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1498:	add	x1, x1, #0x0
    149c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    14a0:	add	x0, x0, #0x0
    14a4:	bl	0 <__assert_fail>
    14a8:	mov	x3, x21
    14ac:	mov	x2, #0x0                   	// #0
    14b0:	add	x1, x20, #0x10
    14b4:	mov	x0, x20
    14b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    14bc:	b	12dc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x12dc>
    14c0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    14c4:	add	x3, x3, #0x0
    14c8:	mov	w2, #0x43                  	// #67
    14cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    14d0:	add	x1, x1, #0x0
    14d4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    14d8:	add	x0, x0, #0x0
    14dc:	bl	0 <__assert_fail>
    14e0:	mov	w0, w26
    14e4:	ldr	x1, [sp, #104]
    14e8:	sub	x24, x1, x0
    14ec:	ldr	x1, [sp, #112]
    14f0:	add	x0, x1, x0, lsl #3
    14f4:	str	x0, [sp, #128]
    14f8:	mov	w21, w24
    14fc:	cmp	w24, #0x1f
    1500:	b.ls	15e8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x15e8>  // b.plast
    1504:	mov	x27, #0x1                   	// #1
    1508:	b	1580 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1580>
    150c:	ldr	x23, [x19]
    1510:	ldr	w2, [x23, #8]
    1514:	ldr	w0, [x23, #12]
    1518:	sub	x0, x0, x2
    151c:	cmp	x0, #0x3
    1520:	b.ls	15b0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x15b0>  // b.plast
    1524:	ldr	w0, [x23, #8]
    1528:	ldr	x1, [x23]
    152c:	str	w22, [x1, x0]
    1530:	ldr	w0, [x23, #8]
    1534:	mov	w1, w0
    1538:	add	x1, x1, #0x4
    153c:	ldr	w2, [x23, #12]
    1540:	cmp	x1, x2
    1544:	b.hi	15c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x15c8>  // b.pmore
    1548:	add	w0, w0, #0x4
    154c:	str	w0, [x23, #8]
    1550:	ldr	w0, [x19, #8]
    1554:	sub	w1, w28, w0
    1558:	lsr	w20, w20, w1
    155c:	cmp	w0, #0x0
    1560:	csel	w20, w20, w0, ne  // ne = any
    1564:	str	w20, [x19, #12]
    1568:	add	w0, w0, #0x6
    156c:	and	w0, w0, #0x1f
    1570:	str	w0, [x19, #8]
    1574:	lsr	w21, w21, #5
    1578:	cmp	w21, #0x1f
    157c:	b.ls	15f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x15f0>  // b.plast
    1580:	and	w20, w21, #0x1f
    1584:	orr	w20, w20, #0x20
    1588:	ldr	w0, [x19, #8]
    158c:	lsl	w22, w20, w0
    1590:	ldr	w1, [x19, #12]
    1594:	orr	w22, w22, w1
    1598:	str	w22, [x19, #12]
    159c:	add	w0, w0, #0x6
    15a0:	cmp	w0, #0x1f
    15a4:	b.hi	150c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x150c>  // b.pmore
    15a8:	str	w0, [x19, #8]
    15ac:	b	1574 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1574>
    15b0:	mov	x3, x27
    15b4:	add	x2, x2, #0x4
    15b8:	add	x1, x23, #0x10
    15bc:	mov	x0, x23
    15c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    15c4:	b	1524 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1524>
    15c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    15cc:	add	x3, x3, #0x0
    15d0:	mov	w2, #0x43                  	// #67
    15d4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    15d8:	add	x1, x1, #0x0
    15dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    15e0:	add	x0, x0, #0x0
    15e4:	bl	0 <__assert_fail>
    15e8:	tst	w24, #0xffffffc0
    15ec:	b.ne	1694 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1694>  // b.any
    15f0:	ldr	w0, [x19, #8]
    15f4:	lsl	w20, w21, w0
    15f8:	ldr	w1, [x19, #12]
    15fc:	orr	w20, w20, w1
    1600:	str	w20, [x19, #12]
    1604:	add	w0, w0, #0x6
    1608:	cmp	w0, #0x1f
    160c:	b.hi	16b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x16b4>  // b.pmore
    1610:	str	w0, [x19, #8]
    1614:	ldr	w0, [x19, #8]
    1618:	cbnz	w0, 1758 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1758>
    161c:	ldr	x0, [sp, #128]
    1620:	add	x24, x0, x24, lsl #3
    1624:	mov	x21, x0
    1628:	mov	x23, #0x1                   	// #1
    162c:	cmp	x24, x0
    1630:	b.ne	183c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x183c>  // b.any
    1634:	ldr	x20, [x19]
    1638:	ldr	w0, [x20, #8]
    163c:	mov	x21, #0x1                   	// #1
    1640:	tst	x0, #0x3
    1644:	b.eq	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>  // b.none
    1648:	ldr	w1, [x20, #12]
    164c:	cmp	w1, w0
    1650:	b.ls	1898 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1898>  // b.plast
    1654:	ldr	w0, [x20, #8]
    1658:	ldr	x1, [x20]
    165c:	strb	wzr, [x1, x0]
    1660:	ldr	w0, [x20, #8]
    1664:	mov	w1, w0
    1668:	add	x1, x1, #0x1
    166c:	ldr	w2, [x20, #12]
    1670:	cmp	x1, x2
    1674:	b.hi	18b0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18b0>  // b.pmore
    1678:	add	w0, w0, #0x1
    167c:	str	w0, [x20, #8]
    1680:	ldr	x20, [x19]
    1684:	ldr	w0, [x20, #8]
    1688:	tst	x0, #0x3
    168c:	b.ne	1648 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1648>  // b.any
    1690:	b	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>
    1694:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1698:	add	x3, x3, #0x0
    169c:	mov	w2, #0x79                  	// #121
    16a0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    16a4:	add	x1, x1, #0x0
    16a8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    16ac:	add	x0, x0, #0x0
    16b0:	bl	0 <__assert_fail>
    16b4:	ldr	x22, [x19]
    16b8:	ldr	w2, [x22, #8]
    16bc:	ldr	w0, [x22, #12]
    16c0:	sub	x0, x0, x2
    16c4:	cmp	x0, #0x3
    16c8:	b.ls	1720 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1720>  // b.plast
    16cc:	ldr	w0, [x22, #8]
    16d0:	ldr	x1, [x22]
    16d4:	str	w20, [x1, x0]
    16d8:	ldr	w0, [x22, #8]
    16dc:	mov	w1, w0
    16e0:	add	x1, x1, #0x4
    16e4:	ldr	w2, [x22, #12]
    16e8:	cmp	x1, x2
    16ec:	b.hi	1738 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1738>  // b.pmore
    16f0:	add	w0, w0, #0x4
    16f4:	str	w0, [x22, #8]
    16f8:	ldr	w1, [x19, #8]
    16fc:	sub	w0, w28, w1
    1700:	lsr	w0, w21, w0
    1704:	cmp	w1, #0x0
    1708:	csel	w0, w0, w1, ne  // ne = any
    170c:	str	w0, [x19, #12]
    1710:	add	w0, w1, #0x6
    1714:	and	w0, w0, #0x1f
    1718:	str	w0, [x19, #8]
    171c:	b	1614 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1614>
    1720:	mov	x3, #0x1                   	// #1
    1724:	add	x2, x2, #0x4
    1728:	add	x1, x22, #0x10
    172c:	mov	x0, x22
    1730:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1734:	b	16cc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x16cc>
    1738:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    173c:	add	x3, x3, #0x0
    1740:	mov	w2, #0x43                  	// #67
    1744:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1748:	add	x1, x1, #0x0
    174c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1750:	add	x0, x0, #0x0
    1754:	bl	0 <__assert_fail>
    1758:	ldr	w21, [x19, #12]
    175c:	ldr	x20, [x19]
    1760:	ldr	w2, [x20, #8]
    1764:	ldr	w0, [x20, #12]
    1768:	sub	x0, x0, x2
    176c:	cmp	x0, #0x3
    1770:	b.ls	17ac <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x17ac>  // b.plast
    1774:	ldr	w0, [x20, #8]
    1778:	ldr	x1, [x20]
    177c:	str	w21, [x1, x0]
    1780:	ldr	w0, [x20, #8]
    1784:	mov	w1, w0
    1788:	add	x1, x1, #0x4
    178c:	ldr	w2, [x20, #12]
    1790:	cmp	x1, x2
    1794:	b.hi	17c4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x17c4>  // b.pmore
    1798:	add	w0, w0, #0x4
    179c:	str	w0, [x20, #8]
    17a0:	str	wzr, [x19, #8]
    17a4:	str	wzr, [x19, #12]
    17a8:	b	161c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x161c>
    17ac:	mov	x3, #0x1                   	// #1
    17b0:	add	x2, x2, #0x4
    17b4:	add	x1, x20, #0x10
    17b8:	mov	x0, x20
    17bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    17c0:	b	1774 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1774>
    17c4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    17c8:	add	x3, x3, #0x0
    17cc:	mov	w2, #0x43                  	// #67
    17d0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    17d4:	add	x1, x1, #0x0
    17d8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    17dc:	add	x0, x0, #0x0
    17e0:	bl	0 <__assert_fail>
    17e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    17e8:	add	x3, x3, #0x0
    17ec:	mov	w2, #0x18a                 	// #394
    17f0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    17f4:	add	x1, x1, #0x0
    17f8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    17fc:	add	x0, x0, #0x0
    1800:	bl	0 <__assert_fail>
    1804:	ldr	w0, [x20, #8]
    1808:	ldr	x1, [x20]
    180c:	strb	w22, [x1, x0]
    1810:	ldr	w0, [x20, #8]
    1814:	mov	w1, w0
    1818:	add	x1, x1, #0x1
    181c:	ldr	w2, [x20, #12]
    1820:	cmp	x1, x2
    1824:	b.hi	1878 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1878>  // b.pmore
    1828:	add	w0, w0, #0x1
    182c:	str	w0, [x20, #8]
    1830:	add	x21, x21, #0x8
    1834:	cmp	x24, x21
    1838:	b.eq	1634 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1634>  // b.none
    183c:	ldr	x0, [x21]
    1840:	tst	x0, #0xffffffffffffff00
    1844:	b.ne	17e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x17e4>  // b.any
    1848:	and	w22, w0, #0xff
    184c:	ldr	x20, [x19]
    1850:	ldr	w1, [x20, #8]
    1854:	ldr	w0, [x20, #12]
    1858:	cmp	w1, w0
    185c:	b.cc	1804 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1804>  // b.lo, b.ul, b.last
    1860:	mov	x3, x23
    1864:	mov	x2, #0x0                   	// #0
    1868:	add	x1, x20, #0x10
    186c:	mov	x0, x20
    1870:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1874:	b	1804 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1804>
    1878:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    187c:	add	x3, x3, #0x0
    1880:	mov	w2, #0x43                  	// #67
    1884:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1888:	add	x1, x1, #0x0
    188c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1890:	add	x0, x0, #0x0
    1894:	bl	0 <__assert_fail>
    1898:	mov	x3, x21
    189c:	mov	x2, #0x0                   	// #0
    18a0:	add	x1, x20, #0x10
    18a4:	mov	x0, x20
    18a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    18ac:	b	1654 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1654>
    18b0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    18b4:	add	x3, x3, #0x0
    18b8:	mov	w2, #0x43                  	// #67
    18bc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    18c0:	add	x1, x1, #0x0
    18c4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    18c8:	add	x0, x0, #0x0
    18cc:	bl	0 <__assert_fail>
    18d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    18d4:	add	x3, x3, #0x0
    18d8:	mov	w2, #0x173                 	// #371
    18dc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    18e0:	add	x1, x1, #0x0
    18e4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    18e8:	add	x0, x0, #0x0
    18ec:	bl	0 <__assert_fail>
    18f0:	ldr	x2, [x0, x2]
    18f4:	cbnz	x2, 1964 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1964>
    18f8:	add	w26, w26, #0x1
    18fc:	add	w25, w25, #0x1
    1900:	ldr	w0, [sp, #136]
    1904:	cmp	w0, w25
    1908:	b.eq	1ad8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1ad8>  // b.none
    190c:	mov	w2, w25
    1910:	ldr	x0, [sp, #96]
    1914:	ldr	w4, [x0, #8]
    1918:	cmp	x4, w25, uxtw
    191c:	b.ls	1a4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a4>  // b.plast
    1920:	ldr	x0, [sp, #96]
    1924:	ldr	x0, [x0]
    1928:	lsl	x2, x2, #4
    192c:	add	x1, x0, x2
    1930:	ldrb	w3, [x1, #8]
    1934:	tbz	w3, #0, 204 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x204>
    1938:	mov	w1, w26
    193c:	ldr	x3, [sp, #104]
    1940:	cmp	x3, w26, uxtw
    1944:	b.ls	1c4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1c4>  // b.plast
    1948:	ldr	x3, [sp, #112]
    194c:	ldr	x1, [x3, x1, lsl #3]
    1950:	ldr	x0, [x0, x2]
    1954:	cmp	x1, x0
    1958:	b.ne	1e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e4>  // b.any
    195c:	add	w26, w26, #0x1
    1960:	b	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>
    1964:	mov	x0, x19
    1968:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    196c:	b	18f8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18f8>
    1970:	ldr	x2, [x0, x2]
    1974:	cbz	x2, 18f8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18f8>
    1978:	mov	x0, x19
    197c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1980:	b	18f8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18f8>
    1984:	and	w1, w1, #0xff
    1988:	sub	w0, w1, #0x61
    198c:	and	w0, w0, #0xff
    1990:	sub	w20, w1, #0x61
    1994:	cmp	w0, #0x19
    1998:	b.ls	19d8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19d8>  // b.plast
    199c:	sub	w0, w1, #0x41
    19a0:	and	w0, w0, #0xff
    19a4:	sub	w20, w1, #0x27
    19a8:	cmp	w0, #0x19
    19ac:	b.ls	19d8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19d8>  // b.plast
    19b0:	sub	w0, w1, #0x30
    19b4:	and	w0, w0, #0xff
    19b8:	add	w20, w1, #0x4
    19bc:	cmp	w0, #0x9
    19c0:	b.ls	19d8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19d8>  // b.plast
    19c4:	cmp	w1, #0x2e
    19c8:	b.eq	1a18 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a18>  // b.none
    19cc:	cmp	w1, #0x5f
    19d0:	b.ne	1a00 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a00>  // b.any
    19d4:	mov	w20, #0x3f                  	// #63
    19d8:	ldr	w0, [x19, #8]
    19dc:	lsl	w21, w20, w0
    19e0:	ldr	w1, [x19, #12]
    19e4:	orr	w21, w21, w1
    19e8:	str	w21, [x19, #12]
    19ec:	add	w0, w0, #0x6
    19f0:	cmp	w0, #0x1f
    19f4:	b.hi	1a20 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a20>  // b.pmore
    19f8:	str	w0, [x19, #8]
    19fc:	b	18f8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18f8>
    1a00:	mov	w2, #0x99                  	// #153
    1a04:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1a08:	add	x1, x1, #0x0
    1a0c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1a10:	add	x0, x0, #0x0
    1a14:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1a18:	mov	w20, #0x3e                  	// #62
    1a1c:	b	19d8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19d8>
    1a20:	ldr	x22, [x19]
    1a24:	ldr	w2, [x22, #8]
    1a28:	ldr	w0, [x22, #12]
    1a2c:	sub	x0, x0, x2
    1a30:	cmp	x0, #0x3
    1a34:	b.ls	1a8c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a8c>  // b.plast
    1a38:	ldr	w0, [x22, #8]
    1a3c:	ldr	x1, [x22]
    1a40:	str	w21, [x1, x0]
    1a44:	ldr	w0, [x22, #8]
    1a48:	mov	w1, w0
    1a4c:	add	x1, x1, #0x4
    1a50:	ldr	w2, [x22, #12]
    1a54:	cmp	x1, x2
    1a58:	b.hi	1aa4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1aa4>  // b.pmore
    1a5c:	add	w0, w0, #0x4
    1a60:	str	w0, [x22, #8]
    1a64:	ldr	w0, [x19, #8]
    1a68:	sub	w1, w28, w0
    1a6c:	lsr	w1, w20, w1
    1a70:	cmp	w0, #0x0
    1a74:	csel	w1, w1, w0, ne  // ne = any
    1a78:	str	w1, [x19, #12]
    1a7c:	add	w0, w0, #0x6
    1a80:	and	w0, w0, #0x1f
    1a84:	str	w0, [x19, #8]
    1a88:	b	18f8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18f8>
    1a8c:	mov	x3, #0x1                   	// #1
    1a90:	add	x2, x2, #0x4
    1a94:	add	x1, x22, #0x10
    1a98:	mov	x0, x22
    1a9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1aa0:	b	1a38 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1a38>
    1aa4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1aa8:	add	x3, x3, #0x0
    1aac:	mov	w2, #0x43                  	// #67
    1ab0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1ab4:	add	x1, x1, #0x0
    1ab8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1abc:	add	x0, x0, #0x0
    1ac0:	bl	0 <__assert_fail>
    1ac4:	str	xzr, [sp, #120]
    1ac8:	b	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>
    1acc:	ldr	w25, [sp, #120]
    1ad0:	str	xzr, [sp, #120]
    1ad4:	b	18fc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x18fc>
    1ad8:	mov	w27, w26
    1adc:	ldp	x23, x24, [sp, #48]
    1ae0:	ldr	x0, [sp, #200]
    1ae4:	cmp	x0, w27, uxtw
    1ae8:	b.ne	1b18 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1b18>  // b.any
    1aec:	ldr	x0, [sp, #120]
    1af0:	cbnz	x0, 1b3c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1b3c>
    1af4:	ldp	x25, x26, [sp, #64]
    1af8:	ldp	x27, x28, [sp, #80]
    1afc:	ldp	x19, x20, [sp, #16]
    1b00:	ldp	x21, x22, [sp, #32]
    1b04:	ldp	x29, x30, [sp], #208
    1b08:	ret
    1b0c:	str	x28, [sp, #120]
    1b10:	mov	w27, #0x0                   	// #0
    1b14:	b	1ae0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1ae0>
    1b18:	stp	x23, x24, [sp, #48]
    1b1c:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1b20:	add	x3, x3, #0x0
    1b24:	mov	w2, #0x178                 	// #376
    1b28:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1b2c:	add	x1, x1, #0x0
    1b30:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1b34:	add	x0, x0, #0x0
    1b38:	bl	0 <__assert_fail>
    1b3c:	stp	x23, x24, [sp, #48]
    1b40:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1b44:	add	x3, x3, #0x0
    1b48:	mov	w2, #0x179                 	// #377
    1b4c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1b50:	add	x1, x1, #0x0
    1b54:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
    1b58:	add	x0, x0, #0x0
    1b5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERS9_:

0000000000000000 <_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERS9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x20, x0
  14:	mov	x0, #0x220                 	// #544
  18:	bl	0 <_Znwm>
  1c:	str	x20, [x19]
  20:	str	x0, [x19, #8]
  24:	mov	x0, x19
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIPvEaSEOS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	cmp	x0, x1
  14:	b.eq	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x1
  20:	mov	x20, x1
  24:	ldr	x1, [x20], #16
  28:	cmp	x20, x1
  2c:	b.eq	7c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x7c>  // b.none
  30:	mov	x1, x0
  34:	ldr	x0, [x1], #16
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19]
  48:	str	x0, [x21]
  4c:	ldr	w0, [x19, #8]
  50:	str	w0, [x21, #8]
  54:	ldr	w0, [x19, #12]
  58:	str	w0, [x21, #12]
  5c:	str	x20, [x19]
  60:	str	wzr, [x19, #12]
  64:	str	wzr, [x19, #8]
  68:	ldp	x19, x20, [sp, #16]
  6c:	mov	x0, x21
  70:	ldp	x21, x22, [sp, #32]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	str	x23, [sp, #48]
  80:	ldr	w22, [x19, #8]
  84:	mov	w23, w22
  88:	ldr	w20, [x0, #8]
  8c:	cmp	x20, w22, uxtw
  90:	b.cc	e4 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xe4>  // b.lo, b.ul, b.last
  94:	cbz	x23, b0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xb0>
  98:	lsl	x2, x23, #3
  9c:	ldr	x0, [x0]
  a0:	bl	0 <memmove>
  a4:	ldr	w0, [x21, #12]
  a8:	cmp	x23, x0
  ac:	b.hi	c4 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xc4>  // b.pmore
  b0:	str	w22, [x21, #8]
  b4:	str	wzr, [x19, #8]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x23, [sp, #48]
  c0:	b	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>
  c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x43                  	// #67
  d0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  d4:	add	x1, x1, #0x0
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <__assert_fail>
  e4:	ldr	w0, [x0, #12]
  e8:	cmp	x23, x0
  ec:	b.hi	150 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x150>  // b.pmore
  f0:	cbz	x20, 100 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x100>
  f4:	lsl	x2, x20, #3
  f8:	ldr	x0, [x21]
  fc:	bl	0 <memmove>
 100:	ldr	x0, [x19]
 104:	lsl	x20, x20, #3
 108:	add	x1, x0, x20
 10c:	ldr	w2, [x19, #8]
 110:	lsl	x2, x2, #3
 114:	add	x0, x0, x2
 118:	cmp	x1, x0
 11c:	b.eq	130 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x130>  // b.none
 120:	ldr	x0, [x21]
 124:	sub	x2, x2, x20
 128:	add	x0, x0, x20
 12c:	bl	0 <memcpy>
 130:	ldr	w0, [x21, #12]
 134:	cmp	x23, x0
 138:	b.hi	170 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x170>  // b.pmore
 13c:	str	w22, [x21, #8]
 140:	str	wzr, [x19, #8]
 144:	ldp	x19, x20, [sp, #16]
 148:	ldr	x23, [sp, #48]
 14c:	b	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>
 150:	str	wzr, [x21, #8]
 154:	mov	x3, #0x8                   	// #8
 158:	mov	x2, x23
 15c:	add	x1, x21, #0x10
 160:	mov	x0, x21
 164:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 168:	mov	x20, #0x0                   	// #0
 16c:	b	100 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x100>
 170:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x43                  	// #67
 17c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 180:	add	x1, x1, #0x0
 184:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 188:	add	x0, x0, #0x0
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	str	x1, [sp, #56]
  18:	mov	x20, x1
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	f4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf4>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	add	x2, x2, #0x2
  30:	orr	x2, x2, x2, lsr #1
  34:	orr	x2, x2, x2, lsr #2
  38:	orr	x2, x2, x2, lsr #4
  3c:	orr	x2, x2, x2, lsr #8
  40:	orr	x0, x2, x2, lsr #16
  44:	orr	x2, x0, x2, lsr #32
  48:	add	x2, x2, #0x1
  4c:	str	x2, [sp, #64]
  50:	cmp	x20, x2
  54:	add	x0, sp, #0x40
  58:	add	x1, sp, #0x38
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #72]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	add	x1, sp, #0x48
  74:	csel	x0, x1, x0, hi  // hi = pmore
  78:	ldr	x21, [x0]
  7c:	lsl	x22, x21, #4
  80:	mov	x0, x22
  84:	bl	0 <malloc>
  88:	mov	x20, x0
  8c:	cbz	x0, 108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x108>
  90:	ldr	x6, [x19]
  94:	ldr	w1, [x19, #8]
  98:	add	x1, x6, x1, lsl #4
  9c:	cmp	x1, x6
  a0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.none
  a4:	mov	x2, x6
  a8:	mov	x3, x20
  ac:	ldp	x4, x5, [x2], #16
  b0:	stp	x4, x5, [x3], #16
  b4:	cmp	x1, x2
  b8:	b.ne	ac <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xac>  // b.any
  bc:	sub	x1, x1, #0x10
  c0:	cmp	x1, x6
  c4:	b.ne	bc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xbc>  // b.any
  c8:	mov	x1, x19
  cc:	ldr	x0, [x1], #16
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xdc>  // b.none
  d8:	bl	0 <free>
  dc:	str	x20, [x19]
  e0:	str	w21, [x19, #12]
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret
  f4:	mov	w1, #0x1                   	// #1
  f8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x28>
 108:	cbnz	x22, 11c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x11c>
 10c:	mov	x0, #0x1                   	// #1
 110:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 114:	mov	x20, x0
 118:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>
 11c:	mov	w1, #0x1                   	// #1
 120:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 12c:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x20, x1
  20:	mov	x21, x1
  24:	ldr	x1, [x21], #16
  28:	cmp	x21, x1
  2c:	b.eq	9c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x9c>  // b.none
  30:	ldr	x0, [x0]
  34:	ldr	w2, [x19, #8]
  38:	add	x2, x0, x2, lsl #4
  3c:	cmp	x0, x2
  40:	b.eq	50 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x50>  // b.none
  44:	sub	x2, x2, #0x10
  48:	cmp	x0, x2
  4c:	b.ne	44 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x44>  // b.any
  50:	mov	x1, x19
  54:	ldr	x0, [x1], #16
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20]
  68:	str	x0, [x19]
  6c:	ldr	w0, [x20, #8]
  70:	str	w0, [x19, #8]
  74:	ldr	w0, [x20, #12]
  78:	str	w0, [x19, #12]
  7c:	str	x21, [x20]
  80:	str	wzr, [x20, #12]
  84:	str	wzr, [x20, #8]
  88:	ldp	x21, x22, [sp, #32]
  8c:	mov	x0, x19
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	ldr	w21, [x20, #8]
  a0:	mov	w22, w21
  a4:	ldr	w0, [x0, #8]
  a8:	cmp	x0, w21, uxtw
  ac:	b.cc	120 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x120>  // b.lo, b.ul, b.last
  b0:	ldr	x2, [x19]
  b4:	cbz	x22, 21c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x21c>
  b8:	lsl	x5, x22, #4
  bc:	add	x4, x1, x5
  c0:	mov	x0, x2
  c4:	ldr	x3, [x1]
  c8:	str	x3, [x0]
  cc:	ldr	x3, [x1, #8]
  d0:	str	x3, [x0, #8]
  d4:	add	x1, x1, #0x10
  d8:	add	x0, x0, #0x10
  dc:	cmp	x1, x4
  e0:	b.ne	c4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0xc4>  // b.any
  e4:	add	x2, x2, x5
  e8:	ldr	w0, [x19, #8]
  ec:	ldr	x1, [x19]
  f0:	add	x0, x1, x0, lsl #4
  f4:	cmp	x0, x2
  f8:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
  fc:	b	234 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x234>
 100:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x43                  	// #67
 10c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 110:	add	x1, x1, #0x0
 114:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <__assert_fail>
 120:	ldr	w2, [x19, #12]
 124:	cmp	x22, x2
 128:	b.ls	1cc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1cc>  // b.plast
 12c:	ldr	x1, [x19]
 130:	add	x0, x1, x0, lsl #4
 134:	cmp	x0, x1
 138:	b.eq	148 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x148>  // b.none
 13c:	sub	x0, x0, #0x10
 140:	cmp	x0, x1
 144:	b.ne	13c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x13c>  // b.any
 148:	str	wzr, [x19, #8]
 14c:	mov	x1, x22
 150:	mov	x0, x19
 154:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 158:	mov	x0, #0x0                   	// #0
 15c:	ldr	x2, [x20]
 160:	lsl	x0, x0, #4
 164:	add	x1, x2, x0
 168:	ldr	w4, [x20, #8]
 16c:	add	x4, x2, x4, lsl #4
 170:	ldr	x2, [x19]
 174:	add	x0, x2, x0
 178:	cmp	x1, x4
 17c:	b.eq	190 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x190>  // b.none
 180:	ldp	x2, x3, [x1], #16
 184:	stp	x2, x3, [x0], #16
 188:	cmp	x4, x1
 18c:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 190:	ldr	w0, [x19, #12]
 194:	cmp	x22, x0
 198:	b.hi	1fc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1fc>  // b.pmore
 19c:	str	w21, [x19, #8]
 1a0:	ldr	x1, [x20]
 1a4:	ldr	w0, [x20, #8]
 1a8:	add	x0, x1, x0, lsl #4
 1ac:	cmp	x1, x0
 1b0:	b.eq	1c0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1c0>  // b.none
 1b4:	sub	x0, x0, #0x10
 1b8:	cmp	x1, x0
 1bc:	b.ne	1b4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1b4>  // b.any
 1c0:	str	wzr, [x20, #8]
 1c4:	ldp	x21, x22, [sp, #32]
 1c8:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 1cc:	cbz	x0, 270 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x270>
 1d0:	ldr	x2, [x19]
 1d4:	add	x4, x1, x0, lsl #4
 1d8:	ldr	x3, [x1]
 1dc:	str	x3, [x2]
 1e0:	ldr	x3, [x1, #8]
 1e4:	str	x3, [x2, #8]
 1e8:	add	x1, x1, #0x10
 1ec:	add	x2, x2, #0x10
 1f0:	cmp	x1, x4
 1f4:	b.ne	1d8 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1d8>  // b.any
 1f8:	b	15c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x15c>
 1fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x43                  	// #67
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 20c:	add	x1, x1, #0x0
 210:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 214:	add	x0, x0, #0x0
 218:	bl	0 <__assert_fail>
 21c:	add	x0, x2, x0, lsl #4
 220:	cmp	x2, x0
 224:	b.eq	240 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x240>  // b.none
 228:	sub	x0, x0, #0x10
 22c:	cmp	x0, x2
 230:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
 234:	ldr	w0, [x19, #12]
 238:	cmp	x22, x0
 23c:	b.hi	100 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x100>  // b.pmore
 240:	str	w21, [x19, #8]
 244:	ldr	x1, [x20]
 248:	ldr	w0, [x20, #8]
 24c:	add	x0, x1, x0, lsl #4
 250:	cmp	x1, x0
 254:	b.eq	264 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x264>  // b.none
 258:	sub	x0, x0, #0x10
 25c:	cmp	x1, x0
 260:	b.ne	258 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x258>  // b.any
 264:	str	wzr, [x20, #8]
 268:	ldp	x21, x22, [sp, #32]
 26c:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 270:	ldr	x1, [x20]
 274:	ldr	w4, [x20, #8]
 278:	add	x4, x1, x4, lsl #4
 27c:	ldr	x0, [x19]
 280:	cmp	x1, x4
 284:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 288:	b	19c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x19c>

Remark.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x22, x8
  14:	add	x2, sp, #0x80
  18:	add	x1, sp, #0x90
  1c:	str	x1, [sp, #128]
  20:	str	xzr, [sp, #136]
  24:	strb	wzr, [sp, #144]
  28:	mov	w1, #0x1                   	// #1
  2c:	str	w1, [sp, #112]
  30:	str	xzr, [sp, #104]
  34:	str	xzr, [sp, #96]
  38:	str	xzr, [sp, #88]
  3c:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  40:	ldr	x1, [x1]
  44:	add	x1, x1, #0x10
  48:	str	x1, [sp, #80]
  4c:	str	x2, [sp, #120]
  50:	ldr	x19, [x0, #104]
  54:	ldr	w21, [x0, #112]
  58:	add	x21, x19, x21, lsl #6
  5c:	cmp	x21, x19
  60:	b.eq	dc <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0xdc>  // b.none
  64:	str	x23, [sp, #48]
  68:	add	x23, sp, #0x50
  6c:	b	88 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x88>
  70:	mov	x2, x20
  74:	mov	x0, x23
  78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  7c:	add	x19, x19, #0x40
  80:	cmp	x19, x21
  84:	b.eq	c0 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0xc0>  // b.none
  88:	ldr	x1, [x19, #16]
  8c:	ldr	x20, [x19, #24]
  90:	ldr	x0, [sp, #104]
  94:	ldr	x2, [sp, #96]
  98:	sub	x2, x2, x0
  9c:	cmp	x20, x2
  a0:	b.hi	70 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x70>  // b.pmore
  a4:	cbz	x20, 7c <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x7c>
  a8:	mov	x2, x20
  ac:	bl	0 <memcpy>
  b0:	ldr	x0, [sp, #104]
  b4:	add	x20, x0, x20
  b8:	str	x20, [sp, #104]
  bc:	b	7c <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x7c>
  c0:	ldr	x1, [sp, #104]
  c4:	ldr	x0, [sp, #88]
  c8:	cmp	x1, x0
  cc:	b.eq	15c <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x15c>  // b.none
  d0:	add	x0, sp, #0x50
  d4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  d8:	ldr	x23, [sp, #48]
  dc:	ldr	x0, [sp, #120]
  e0:	add	x1, x22, #0x10
  e4:	str	x1, [x22]
  e8:	ldr	x20, [x0]
  ec:	ldr	x19, [x0, #8]
  f0:	cmp	x20, #0x0
  f4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  f8:	b.ne	164 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x164>  // b.any
  fc:	str	x19, [sp, #72]
 100:	cmp	x19, #0xf
 104:	b.hi	174 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x174>  // b.pmore
 108:	ldr	x0, [x22]
 10c:	cmp	x19, #0x1
 110:	b.ne	1a0 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x1a0>  // b.any
 114:	ldrb	w1, [x20]
 118:	strb	w1, [x0]
 11c:	ldr	x0, [sp, #72]
 120:	str	x0, [x22, #8]
 124:	ldr	x1, [x22]
 128:	strb	wzr, [x1, x0]
 12c:	add	x0, sp, #0x50
 130:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 134:	ldr	x0, [sp, #128]
 138:	add	x1, sp, #0x90
 13c:	cmp	x0, x1
 140:	b.eq	148 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x148>  // b.none
 144:	bl	0 <_ZdlPv>
 148:	mov	x0, x22
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x21, x22, [sp, #32]
 154:	ldp	x29, x30, [sp], #160
 158:	ret
 15c:	ldr	x23, [sp, #48]
 160:	b	dc <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0xdc>
 164:	str	x23, [sp, #48]
 168:	adrp	x0, 0 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev>
 16c:	add	x0, x0, #0x0
 170:	bl	0 <_ZSt19__throw_logic_errorPKc>
 174:	mov	x2, #0x0                   	// #0
 178:	add	x1, sp, #0x48
 17c:	mov	x0, x22
 180:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 184:	str	x0, [x22]
 188:	ldr	x1, [sp, #72]
 18c:	str	x1, [x22, #16]
 190:	mov	x2, x19
 194:	mov	x1, x20
 198:	bl	0 <memcpy>
 19c:	b	11c <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x11c>
 1a0:	cbz	x19, 11c <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x11c>
 1a4:	b	190 <_ZNK4llvm7remarks6Remark12getArgsAsMsgB5cxx11Ev+0x190>

00000000000001a8 <LLVMRemarkStringGetData>:
 1a8:	ldr	x0, [x0]
 1ac:	ret

00000000000001b0 <LLVMRemarkStringGetLen>:
 1b0:	ldr	w0, [x0, #8]
 1b4:	ret

00000000000001b8 <LLVMRemarkDebugLocGetSourceFilePath>:
 1b8:	ret

00000000000001bc <LLVMRemarkDebugLocGetSourceLine>:
 1bc:	ldr	w0, [x0, #16]
 1c0:	ret

00000000000001c4 <LLVMRemarkDebugLocGetSourceColumn>:
 1c4:	ldr	w0, [x0, #20]
 1c8:	ret

00000000000001cc <LLVMRemarkArgGetKey>:
 1cc:	ret

00000000000001d0 <LLVMRemarkArgGetValue>:
 1d0:	add	x0, x0, #0x10
 1d4:	ret

00000000000001d8 <LLVMRemarkArgGetDebugLoc>:
 1d8:	ldrb	w1, [x0, #56]
 1dc:	add	x0, x0, #0x20
 1e0:	cmp	w1, #0x0
 1e4:	csel	x0, x0, xzr, ne  // ne = any
 1e8:	ret

00000000000001ec <LLVMRemarkEntryDispose>:
 1ec:	cbz	x0, 22c <LLVMRemarkEntryDispose+0x40>
 1f0:	stp	x29, x30, [sp, #-32]!
 1f4:	mov	x29, sp
 1f8:	str	x19, [sp, #16]
 1fc:	mov	x19, x0
 200:	ldr	x0, [x0, #104]
 204:	add	x1, x19, #0x78
 208:	cmp	x0, x1
 20c:	b.eq	214 <LLVMRemarkEntryDispose+0x28>  // b.none
 210:	bl	0 <free>
 214:	mov	x1, #0x1b8                 	// #440
 218:	mov	x0, x19
 21c:	bl	0 <_ZdlPvm>
 220:	ldr	x19, [sp, #16]
 224:	ldp	x29, x30, [sp], #32
 228:	ret
 22c:	ret

0000000000000230 <LLVMRemarkEntryGetType>:
 230:	ldr	w0, [x0]
 234:	ret

0000000000000238 <LLVMRemarkEntryGetPassName>:
 238:	add	x0, x0, #0x8
 23c:	ret

0000000000000240 <LLVMRemarkEntryGetRemarkName>:
 240:	add	x0, x0, #0x18
 244:	ret

0000000000000248 <LLVMRemarkEntryGetFunctionName>:
 248:	add	x0, x0, #0x28
 24c:	ret

0000000000000250 <LLVMRemarkEntryGetDebugLoc>:
 250:	ldrb	w1, [x0, #80]
 254:	add	x0, x0, #0x38
 258:	cmp	w1, #0x0
 25c:	csel	x0, x0, xzr, ne  // ne = any
 260:	ret

0000000000000264 <LLVMRemarkEntryGetHotness>:
 264:	ldrb	w1, [x0, #96]
 268:	cbz	w1, 274 <LLVMRemarkEntryGetHotness+0x10>
 26c:	ldr	x0, [x0, #88]
 270:	ret
 274:	mov	x0, #0x0                   	// #0
 278:	b	270 <LLVMRemarkEntryGetHotness+0xc>

000000000000027c <LLVMRemarkEntryGetNumArgs>:
 27c:	ldr	w0, [x0, #112]
 280:	ret

0000000000000284 <LLVMRemarkEntryGetFirstArg>:
 284:	ldr	x1, [x0, #104]
 288:	ldr	w0, [x0, #112]
 28c:	cmp	w0, #0x0
 290:	csel	x0, x1, xzr, ne  // ne = any
 294:	ret

0000000000000298 <LLVMRemarkEntryGetNextArg>:
 298:	cbz	x0, 2b4 <LLVMRemarkEntryGetNextArg+0x1c>
 29c:	add	x0, x0, #0x40
 2a0:	ldr	w2, [x1, #112]
 2a4:	ldr	x1, [x1, #104]
 2a8:	add	x1, x1, x2, lsl #6
 2ac:	cmp	x0, x1
 2b0:	csel	x0, x0, xzr, ne  // ne = any
 2b4:	ret

RemarkFormat.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-208]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x8
  14:	mov	x21, x0
  18:	mov	x20, x1
  1c:	cmp	x1, #0x3
  20:	b.ls	a0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0xa0>  // b.plast
  24:	mov	x2, #0x4                   	// #4
  28:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
  2c:	add	x1, x1, #0x0
  30:	bl	0 <memcmp>
  34:	cbnz	w0, 1a4 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x1a4>
  38:	mov	w0, #0x1                   	// #1
  3c:	str	w0, [sp, #168]
  40:	ldr	w0, [sp, #168]
  44:	ldrb	w1, [x19, #8]
  48:	and	w1, w1, #0xfffffffe
  4c:	orr	w1, w1, #0x2
  50:	strb	w1, [x19, #8]
  54:	str	w0, [x19]
  58:	b	190 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x190>
  5c:	mov	x2, #0x4                   	// #4
  60:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
  64:	add	x1, x1, #0x0
  68:	mov	x0, x21
  6c:	bl	0 <memcmp>
  70:	cbnz	w0, a8 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0xa8>
  74:	mov	w0, #0x3                   	// #3
  78:	str	w0, [sp, #168]
  7c:	b	44 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x44>
  80:	adrp	x3, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x1ce                 	// #462
  8c:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	cmp	x20, #0x3
  a4:	b.hi	5c <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x5c>  // b.pmore
  a8:	bl	0 <_ZNSt3_V216generic_categoryEv>
  ac:	mov	w1, #0x16                  	// #22
  b0:	str	w1, [sp, #56]
  b4:	str	x0, [sp, #64]
  b8:	add	x1, sp, #0x48
  bc:	add	x0, sp, #0x58
  c0:	str	x0, [sp, #72]
  c4:	str	xzr, [sp, #80]
  c8:	strb	wzr, [sp, #88]
  cc:	mov	w0, #0x1                   	// #1
  d0:	str	w0, [sp, #136]
  d4:	str	xzr, [sp, #128]
  d8:	str	xzr, [sp, #120]
  dc:	str	xzr, [sp, #112]
  e0:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  e4:	ldr	x0, [x0]
  e8:	add	x0, x0, #0x10
  ec:	str	x0, [sp, #104]
  f0:	str	x1, [sp, #144]
  f4:	adrp	x0, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
  f8:	add	x0, x0, #0x0
  fc:	str	x0, [sp, #192]
 100:	adrp	x0, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 104:	ldr	x0, [x0]
 108:	add	x0, x0, #0x10
 10c:	str	x0, [sp, #184]
 110:	str	x21, [sp, #200]
 114:	add	x1, sp, #0xb8
 118:	add	x0, sp, #0x68
 11c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 120:	ldr	x1, [sp, #128]
 124:	ldr	x0, [sp, #112]
 128:	cmp	x1, x0
 12c:	b.eq	138 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x138>  // b.none
 130:	add	x0, sp, #0x68
 134:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 138:	add	x8, sp, #0xb0
 13c:	add	x1, sp, #0x38
 140:	ldr	x0, [sp, #144]
 144:	bl	0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 148:	add	x0, sp, #0x68
 14c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 150:	ldr	x0, [sp, #72]
 154:	add	x1, sp, #0x58
 158:	cmp	x0, x1
 15c:	b.eq	164 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x164>  // b.none
 160:	bl	0 <_ZdlPv>
 164:	ldrb	w0, [x19, #8]
 168:	orr	w0, w0, #0x3
 16c:	strb	w0, [x19, #8]
 170:	ldr	x0, [sp, #176]
 174:	ands	x1, x0, #0xfffffffffffffffe
 178:	cset	x0, ne  // ne = any
 17c:	orr	x0, x0, x1
 180:	str	x0, [sp, #176]
 184:	ands	x0, x0, #0xfffffffffffffffe
 188:	b.eq	80 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x80>  // b.none
 18c:	str	x0, [x19]
 190:	mov	x0, x19
 194:	ldp	x19, x20, [sp, #16]
 198:	ldr	x21, [sp, #32]
 19c:	ldp	x29, x30, [sp], #208
 1a0:	ret
 1a4:	cmp	x20, #0x6
 1a8:	b.ls	a0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0xa0>  // b.plast
 1ac:	mov	x2, #0x7                   	// #7
 1b0:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 1b4:	add	x1, x1, #0x0
 1b8:	mov	x0, x21
 1bc:	bl	0 <memcmp>
 1c0:	cbnz	w0, 5c <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x5c>
 1c4:	mov	w0, #0x2                   	// #2
 1c8:	str	w0, [sp, #168]
 1cc:	b	40 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE+0x40>

00000000000001d0 <_ZN4llvm7remarks11parseFormatENS_9StringRefE>:
 1d0:	stp	x29, x30, [sp, #-208]!
 1d4:	mov	x29, sp
 1d8:	stp	x19, x20, [sp, #16]
 1dc:	str	x21, [sp, #32]
 1e0:	mov	x19, x8
 1e4:	mov	x21, x0
 1e8:	cbz	x1, 22c <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x5c>
 1ec:	mov	x20, x1
 1f0:	cmp	x1, #0x4
 1f4:	b.eq	338 <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x168>  // b.none
 1f8:	cmp	x20, #0xb
 1fc:	b.eq	35c <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x18c>  // b.none
 200:	cmp	x20, #0x9
 204:	b.ne	23c <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x6c>  // b.any
 208:	mov	x2, #0x9                   	// #9
 20c:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 210:	add	x1, x1, #0x0
 214:	mov	x0, x21
 218:	bl	0 <memcmp>
 21c:	cbnz	w0, 23c <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x6c>
 220:	mov	w0, #0x3                   	// #3
 224:	str	w0, [sp, #168]
 228:	b	37c <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x1ac>
 22c:	mov	w0, #0x1                   	// #1
 230:	str	w0, [sp, #168]
 234:	ldr	w0, [sp, #168]
 238:	cbnz	w0, 37c <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x1ac>
 23c:	bl	0 <_ZNSt3_V216generic_categoryEv>
 240:	mov	w1, #0x16                  	// #22
 244:	str	w1, [sp, #56]
 248:	str	x0, [sp, #64]
 24c:	add	x1, sp, #0x48
 250:	add	x0, sp, #0x58
 254:	str	x0, [sp, #72]
 258:	str	xzr, [sp, #80]
 25c:	strb	wzr, [sp, #88]
 260:	mov	w0, #0x1                   	// #1
 264:	str	w0, [sp, #136]
 268:	str	xzr, [sp, #128]
 26c:	str	xzr, [sp, #120]
 270:	str	xzr, [sp, #112]
 274:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 278:	ldr	x0, [x0]
 27c:	add	x0, x0, #0x10
 280:	str	x0, [sp, #104]
 284:	str	x1, [sp, #144]
 288:	adrp	x0, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 28c:	add	x0, x0, #0x0
 290:	str	x0, [sp, #192]
 294:	adrp	x0, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 298:	ldr	x0, [x0]
 29c:	add	x0, x0, #0x10
 2a0:	str	x0, [sp, #184]
 2a4:	str	x21, [sp, #200]
 2a8:	add	x1, sp, #0xb8
 2ac:	add	x0, sp, #0x68
 2b0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 2b4:	ldr	x1, [sp, #128]
 2b8:	ldr	x0, [sp, #112]
 2bc:	cmp	x1, x0
 2c0:	b.eq	2cc <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0xfc>  // b.none
 2c4:	add	x0, sp, #0x68
 2c8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 2cc:	add	x8, sp, #0xb0
 2d0:	add	x1, sp, #0x38
 2d4:	ldr	x0, [sp, #144]
 2d8:	bl	0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 2dc:	add	x0, sp, #0x68
 2e0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 2e4:	ldr	x0, [sp, #72]
 2e8:	add	x1, sp, #0x58
 2ec:	cmp	x0, x1
 2f0:	b.eq	2f8 <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x128>  // b.none
 2f4:	bl	0 <_ZdlPv>
 2f8:	ldrb	w0, [x19, #8]
 2fc:	orr	w0, w0, #0x3
 300:	strb	w0, [x19, #8]
 304:	ldr	x0, [sp, #176]
 308:	ands	x1, x0, #0xfffffffffffffffe
 30c:	cset	x0, ne  // ne = any
 310:	orr	x0, x0, x1
 314:	str	x0, [sp, #176]
 318:	ands	x0, x0, #0xfffffffffffffffe
 31c:	b.eq	394 <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x1c4>  // b.none
 320:	str	x0, [x19]
 324:	mov	x0, x19
 328:	ldp	x19, x20, [sp, #16]
 32c:	ldr	x21, [sp, #32]
 330:	ldp	x29, x30, [sp], #208
 334:	ret
 338:	mov	x2, #0x4                   	// #4
 33c:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 340:	add	x1, x1, #0x0
 344:	mov	x0, x21
 348:	bl	0 <memcmp>
 34c:	cbnz	w0, 200 <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x30>
 350:	mov	w0, #0x1                   	// #1
 354:	str	w0, [sp, #168]
 358:	b	234 <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x64>
 35c:	mov	x2, #0xb                   	// #11
 360:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 364:	add	x1, x1, #0x0
 368:	mov	x0, x21
 36c:	bl	0 <memcmp>
 370:	cbnz	w0, 23c <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x6c>
 374:	mov	w0, #0x2                   	// #2
 378:	str	w0, [sp, #168]
 37c:	ldrb	w1, [x19, #8]
 380:	and	w1, w1, #0xfffffffe
 384:	orr	w1, w1, #0x2
 388:	strb	w1, [x19, #8]
 38c:	str	w0, [x19]
 390:	b	324 <_ZN4llvm7remarks11parseFormatENS_9StringRefE+0x154>
 394:	adrp	x3, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 398:	add	x3, x3, #0x0
 39c:	mov	w2, #0x1ce                 	// #462
 3a0:	adrp	x1, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 3a4:	add	x1, x1, #0x0
 3a8:	adrp	x0, 0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 3ac:	add	x0, x0, #0x0
 3b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm13format_objectIJPKcEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJPKcEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x4, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	x3, [x4, #16]
  18:	ldr	x2, [x4, #8]
  1c:	mov	w1, w1
  20:	bl	0 <snprintf>
  24:	ldp	x29, x30, [sp], #16
  28:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x22, x23, [sp, #32]
  10:	mov	x20, x8
  14:	str	xzr, [sp, #64]
  18:	mov	w2, #0x4                   	// #4
  1c:	strb	w2, [sp, #72]
  20:	mov	w2, #0x1                   	// #1
  24:	strb	w2, [sp, #73]
  28:	str	x0, [sp, #56]
  2c:	ldp	x22, x23, [x1]
  30:	mov	x0, #0x40                  	// #64
  34:	bl	0 <_Znwm>
  38:	mov	x19, x0
  3c:	mov	x2, x22
  40:	mov	x3, x23
  44:	add	x1, sp, #0x38
  48:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
  4c:	orr	x19, x19, #0x1
  50:	str	x19, [x20]
  54:	mov	x0, x20
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x22, x23, [sp, #32]
  60:	ldp	x29, x30, [sp], #80
  64:	ret

RemarkLinker.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 64 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x64>
  14:	str	x21, [sp, #32]
  18:	mov	x21, x1
  1c:	mov	x20, x2
  20:	add	x0, sp, #0x50
  24:	str	x0, [sp, #64]
  28:	str	x2, [sp, #56]
  2c:	cmp	x2, #0xf
  30:	b.hi	bc <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0xbc>  // b.pmore
  34:	cmp	x2, #0x1
  38:	b.ne	e8 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0xe8>  // b.any
  3c:	ldrb	w0, [x1]
  40:	strb	w0, [sp, #80]
  44:	ldr	x0, [sp, #56]
  48:	str	x0, [sp, #72]
  4c:	ldr	x1, [sp, #64]
  50:	strb	wzr, [x1, x0]
  54:	ldrb	w0, [x19, #216]
  58:	cbnz	w0, f4 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0xf4>
  5c:	ldr	x21, [sp, #32]
  60:	b	7c <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x7c>
  64:	add	x0, sp, #0x50
  68:	str	x0, [sp, #64]
  6c:	str	xzr, [sp, #72]
  70:	strb	wzr, [sp, #80]
  74:	ldrb	w0, [x19, #216]
  78:	cbnz	w0, 17c <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x17c>
  7c:	add	x0, x19, #0xc8
  80:	str	x0, [x19, #184]
  84:	ldr	x0, [sp, #64]
  88:	add	x1, sp, #0x50
  8c:	cmp	x0, x1
  90:	b.eq	1a8 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x1a8>  // b.none
  94:	str	x0, [x19, #184]
  98:	ldr	x0, [sp, #80]
  9c:	str	x0, [x19, #200]
  a0:	ldr	x0, [sp, #72]
  a4:	str	x0, [x19, #192]
  a8:	mov	w0, #0x1                   	// #1
  ac:	strb	w0, [x19, #216]
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x29, x30, [sp], #96
  b8:	ret
  bc:	mov	x2, #0x0                   	// #0
  c0:	add	x1, sp, #0x38
  c4:	add	x0, sp, #0x40
  c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  cc:	str	x0, [sp, #64]
  d0:	ldr	x1, [sp, #56]
  d4:	str	x1, [sp, #80]
  d8:	mov	x2, x20
  dc:	mov	x1, x21
  e0:	bl	0 <memcpy>
  e4:	b	44 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x44>
  e8:	cbz	x2, 44 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x44>
  ec:	add	x0, sp, #0x50
  f0:	b	d8 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0xd8>
  f4:	ldr	x0, [x19, #184]
  f8:	add	x2, x19, #0xc8
  fc:	ldr	x1, [sp, #64]
 100:	add	x3, sp, #0x50
 104:	cmp	x1, x3
 108:	b.eq	160 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x160>  // b.none
 10c:	cmp	x0, x2
 110:	b.eq	1b4 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x1b4>  // b.none
 114:	ldr	x3, [x19, #200]
 118:	str	x1, [x19, #184]
 11c:	ldr	x1, [sp, #72]
 120:	str	x1, [x19, #192]
 124:	ldr	x1, [sp, #80]
 128:	str	x1, [x19, #200]
 12c:	cbz	x0, 1c8 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x1c8>
 130:	str	x0, [sp, #64]
 134:	str	x3, [sp, #80]
 138:	ldr	x21, [sp, #32]
 13c:	str	xzr, [sp, #72]
 140:	ldr	x0, [sp, #64]
 144:	strb	wzr, [x0]
 148:	ldr	x0, [sp, #64]
 14c:	add	x1, sp, #0x50
 150:	cmp	x0, x1
 154:	b.eq	b0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0xb0>  // b.none
 158:	bl	0 <_ZdlPv>
 15c:	b	b0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0xb0>
 160:	ldr	x2, [sp, #72]
 164:	cbz	x2, 1a0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x1a0>
 168:	cmp	x2, #0x1
 16c:	b.eq	190 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x190>  // b.none
 170:	add	x1, sp, #0x50
 174:	bl	0 <memcpy>
 178:	ldr	x21, [sp, #32]
 17c:	ldr	x0, [sp, #72]
 180:	str	x0, [x19, #192]
 184:	ldr	x1, [x19, #184]
 188:	strb	wzr, [x1, x0]
 18c:	b	13c <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x13c>
 190:	ldrb	w1, [sp, #80]
 194:	strb	w1, [x0]
 198:	ldr	x21, [sp, #32]
 19c:	b	17c <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x17c>
 1a0:	ldr	x21, [sp, #32]
 1a4:	b	17c <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x17c>
 1a8:	ldp	x0, x1, [sp, #80]
 1ac:	stp	x0, x1, [x19, #200]
 1b0:	b	a0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0xa0>
 1b4:	str	x1, [x19, #184]
 1b8:	ldr	x1, [sp, #72]
 1bc:	str	x1, [x19, #192]
 1c0:	ldr	x1, [sp, #80]
 1c4:	str	x1, [x19, #200]
 1c8:	add	x0, sp, #0x50
 1cc:	str	x0, [sp, #64]
 1d0:	ldr	x21, [sp, #32]
 1d4:	b	13c <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE+0x13c>

00000000000001d8 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE>:
 1d8:	stp	x29, x30, [sp, #-208]!
 1dc:	mov	x29, sp
 1e0:	stp	x19, x20, [sp, #16]
 1e4:	mov	x20, x8
 1e8:	mov	x19, x0
 1ec:	ldr	w0, [x0, #8]
 1f0:	sub	w0, w0, #0x10
 1f4:	cmp	w0, #0x3
 1f8:	b.hi	2c0 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0xe8>  // b.pmore
 1fc:	stp	x21, x22, [sp, #32]
 200:	stp	x23, x24, [sp, #48]
 204:	ldr	x0, [x19]
 208:	ldr	x1, [x0, #320]
 20c:	mov	x0, x19
 210:	blr	x1
 214:	mov	x22, x0
 218:	mov	x21, x1
 21c:	ldr	x0, [x19]
 220:	ldr	x1, [x0, #328]
 224:	mov	x0, x19
 228:	blr	x1
 22c:	str	x22, [sp, #168]
 230:	str	x21, [sp, #176]
 234:	str	x0, [sp, #184]
 238:	str	x1, [sp, #192]
 23c:	str	x22, [sp, #64]
 240:	str	x21, [sp, #72]
 244:	str	x0, [sp, #80]
 248:	str	x1, [sp, #88]
 24c:	add	x24, sp, #0x50
 250:	add	x23, sp, #0x40
 254:	add	x22, sp, #0x60
 258:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 25c:	add	x21, x1, #0x0
 260:	ldr	x19, [sp, #72]
 264:	ldr	x0, [sp, #88]
 268:	cmp	x0, x19
 26c:	b.eq	36c <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x194>  // b.none
 270:	ldr	x0, [x19]
 274:	mov	x8, x22
 278:	ldr	x2, [x0, #128]
 27c:	ldr	x1, [sp, #64]
 280:	mov	x0, x19
 284:	blr	x2
 288:	ldrb	w0, [sp, #112]
 28c:	and	w1, w0, #0x1
 290:	bfi	w0, w1, #1, #1
 294:	strb	w0, [sp, #112]
 298:	cbnz	w1, 3a4 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x1cc>
 29c:	ldr	x0, [sp, #104]
 2a0:	cmp	x0, #0x9
 2a4:	b.eq	410 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x238>  // b.none
 2a8:	ldr	x0, [sp, #72]
 2ac:	ldr	x1, [x0]
 2b0:	ldr	x2, [x1, #120]
 2b4:	mov	x1, x23
 2b8:	blr	x2
 2bc:	b	260 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x88>
 2c0:	bl	0 <_ZNSt3_V216generic_categoryEv>
 2c4:	mov	x1, x0
 2c8:	add	x8, sp, #0xc8
 2cc:	adrp	x2, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 2d0:	add	x2, x2, #0x0
 2d4:	mov	x0, #0x54                  	// #84
 2d8:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 2dc:	ldr	x0, [sp, #200]
 2e0:	ands	x1, x0, #0xfffffffffffffffe
 2e4:	cset	x0, ne  // ne = any
 2e8:	orr	x0, x0, x1
 2ec:	str	x0, [sp, #200]
 2f0:	ands	x0, x0, #0xfffffffffffffffe
 2f4:	b.eq	31c <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x144>  // b.none
 2f8:	ldrb	w1, [x20, #24]
 2fc:	orr	w1, w1, #0x3
 300:	strb	w1, [x20, #24]
 304:	cbz	x0, 344 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x16c>
 308:	str	x0, [x20]
 30c:	mov	x0, x20
 310:	ldp	x19, x20, [sp, #16]
 314:	ldp	x29, x30, [sp], #208
 318:	ret
 31c:	stp	x21, x22, [sp, #32]
 320:	stp	x23, x24, [sp, #48]
 324:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 328:	add	x3, x3, #0x0
 32c:	mov	w2, #0x1ce                 	// #462
 330:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 334:	add	x1, x1, #0x0
 338:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 33c:	add	x0, x0, #0x0
 340:	bl	0 <__assert_fail>
 344:	stp	x21, x22, [sp, #32]
 348:	stp	x23, x24, [sp, #48]
 34c:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 350:	add	x3, x3, #0x0
 354:	mov	w2, #0x1ce                 	// #462
 358:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 35c:	add	x1, x1, #0x0
 360:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 364:	add	x0, x0, #0x0
 368:	bl	0 <__assert_fail>
 36c:	mov	x2, #0x8                   	// #8
 370:	mov	x1, x24
 374:	mov	x0, x23
 378:	bl	0 <memcmp>
 37c:	cbnz	w0, 270 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x98>
 380:	ldrb	w0, [x20, #24]
 384:	and	w0, w0, #0xfffffffe
 388:	orr	w0, w0, #0x2
 38c:	strb	w0, [x20, #24]
 390:	strb	wzr, [x20]
 394:	strb	wzr, [x20, #16]
 398:	ldp	x21, x22, [sp, #32]
 39c:	ldp	x23, x24, [sp, #48]
 3a0:	b	30c <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x134>
 3a4:	and	x0, x0, #0xff
 3a8:	and	w0, w0, #0xfffffffd
 3ac:	strb	w0, [sp, #112]
 3b0:	ldr	x0, [sp, #96]
 3b4:	str	xzr, [sp, #96]
 3b8:	ldrb	w1, [x20, #24]
 3bc:	orr	w1, w1, #0x3
 3c0:	strb	w1, [x20, #24]
 3c4:	ands	x0, x0, #0xfffffffffffffffe
 3c8:	cbz	x0, 3f0 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x218>
 3cc:	str	x0, [x20]
 3d0:	ldr	x0, [sp, #96]
 3d4:	cbz	x0, 550 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x378>
 3d8:	ldr	x1, [x0]
 3dc:	ldr	x1, [x1, #8]
 3e0:	blr	x1
 3e4:	ldp	x21, x22, [sp, #32]
 3e8:	ldp	x23, x24, [sp, #48]
 3ec:	b	30c <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x134>
 3f0:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x1ce                 	// #462
 3fc:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 400:	add	x1, x1, #0x0
 404:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 408:	add	x0, x0, #0x0
 40c:	bl	0 <__assert_fail>
 410:	mov	x2, #0x9                   	// #9
 414:	mov	x1, x21
 418:	ldr	x0, [sp, #96]
 41c:	bl	0 <memcmp>
 420:	cbnz	w0, 2a8 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0xd0>
 424:	ldr	x0, [sp, #72]
 428:	ldr	x1, [x0]
 42c:	add	x8, sp, #0x90
 430:	ldr	x2, [x1, #160]
 434:	ldr	x1, [sp, #64]
 438:	blr	x2
 43c:	ldrb	w0, [sp, #160]
 440:	tbz	w0, #0, 4a8 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x2d0>
 444:	ldrb	w0, [sp, #160]
 448:	and	w0, w0, #0xfffffffd
 44c:	strb	w0, [sp, #160]
 450:	ldr	x0, [sp, #144]
 454:	str	xzr, [sp, #144]
 458:	ldrb	w1, [sp, #136]
 45c:	orr	w1, w1, #0x1
 460:	strb	w1, [sp, #136]
 464:	ands	x0, x0, #0xfffffffffffffffe
 468:	cbz	x0, 488 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x2b0>
 46c:	str	x0, [sp, #120]
 470:	ldr	x0, [sp, #144]
 474:	cbz	x0, 4c4 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x2ec>
 478:	ldr	x1, [x0]
 47c:	ldr	x1, [x1, #8]
 480:	blr	x1
 484:	b	4c4 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x2ec>
 488:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 48c:	add	x3, x3, #0x0
 490:	mov	w2, #0x1ce                 	// #462
 494:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 498:	add	x1, x1, #0x0
 49c:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 4a0:	add	x0, x0, #0x0
 4a4:	bl	0 <__assert_fail>
 4a8:	ldrb	w0, [sp, #136]
 4ac:	and	w0, w0, #0xfffffffe
 4b0:	strb	w0, [sp, #136]
 4b4:	ldr	x0, [sp, #144]
 4b8:	str	x0, [sp, #120]
 4bc:	ldr	x0, [sp, #152]
 4c0:	str	x0, [sp, #128]
 4c4:	ldrb	w0, [sp, #136]
 4c8:	tbnz	w0, #0, 508 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x330>
 4cc:	ldrb	w0, [x20, #24]
 4d0:	and	w0, w0, #0xfffffffe
 4d4:	orr	w0, w0, #0x2
 4d8:	strb	w0, [x20, #24]
 4dc:	ldp	x0, x1, [sp, #120]
 4e0:	stp	x0, x1, [x20]
 4e4:	mov	w0, #0x1                   	// #1
 4e8:	strb	w0, [x20, #16]
 4ec:	ldrb	w0, [sp, #112]
 4f0:	tbnz	w0, #1, 548 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x370>
 4f4:	ldrb	w0, [sp, #112]
 4f8:	tbnz	w0, #0, 3d0 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x1f8>
 4fc:	ldp	x21, x22, [sp, #32]
 500:	ldp	x23, x24, [sp, #48]
 504:	b	30c <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x134>
 508:	ldr	x0, [sp, #120]
 50c:	ldrb	w1, [x20, #24]
 510:	orr	w1, w1, #0x3
 514:	strb	w1, [x20, #24]
 518:	ands	x0, x0, #0xfffffffffffffffe
 51c:	cbz	x0, 528 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x350>
 520:	str	x0, [x20]
 524:	b	4ec <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x314>
 528:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 52c:	add	x3, x3, #0x0
 530:	mov	w2, #0x1ce                 	// #462
 534:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 538:	add	x1, x1, #0x0
 53c:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 540:	add	x0, x0, #0x0
 544:	bl	0 <__assert_fail>
 548:	add	x0, sp, #0x60
 54c:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 550:	ldp	x21, x22, [sp, #32]
 554:	ldp	x23, x24, [sp, #48]
 558:	b	30c <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE+0x134>

000000000000055c <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE>:
 55c:	stp	x29, x30, [sp, #-224]!
 560:	mov	x29, sp
 564:	stp	x19, x20, [sp, #16]
 568:	stp	x21, x22, [sp, #32]
 56c:	stp	x23, x24, [sp, #48]
 570:	mov	x21, x8
 574:	mov	x19, x0
 578:	mov	x20, x1
 57c:	mov	w22, w2
 580:	ldr	x0, [x0]
 584:	str	x0, [sp, #72]
 588:	ldr	w0, [x19, #8]
 58c:	str	w0, [sp, #80]
 590:	ldr	w0, [x19, #12]
 594:	str	w0, [sp, #84]
 598:	ldr	w0, [x19, #16]
 59c:	str	w0, [sp, #88]
 5a0:	ldr	w0, [x19, #20]
 5a4:	str	w0, [sp, #92]
 5a8:	str	xzr, [x19]
 5ac:	str	wzr, [x19, #8]
 5b0:	str	wzr, [x19, #12]
 5b4:	str	wzr, [x19, #16]
 5b8:	ldr	x0, [x19, #24]
 5bc:	str	x0, [sp, #96]
 5c0:	ldr	x0, [x19, #32]
 5c4:	str	x0, [sp, #104]
 5c8:	add	x0, sp, #0x80
 5cc:	str	x0, [sp, #112]
 5d0:	str	wzr, [sp, #120]
 5d4:	mov	w0, #0x4                   	// #4
 5d8:	str	w0, [sp, #124]
 5dc:	ldr	w23, [x19, #48]
 5e0:	cbnz	w23, 76c <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x210>
 5e4:	add	x0, sp, #0xb0
 5e8:	str	x0, [sp, #160]
 5ec:	str	wzr, [sp, #168]
 5f0:	str	wzr, [sp, #172]
 5f4:	ldr	w0, [x19, #96]
 5f8:	cbnz	w0, 820 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x2c4>
 5fc:	ldr	x1, [x19, #104]
 600:	str	x1, [sp, #176]
 604:	ldr	x1, [x19, #112]
 608:	str	x1, [sp, #184]
 60c:	str	xzr, [x19, #32]
 610:	str	xzr, [x19, #24]
 614:	str	xzr, [x19, #104]
 618:	str	wzr, [x19, #48]
 61c:	ldr	x3, [x19, #88]
 620:	ldr	w0, [x19, #96]
 624:	add	x0, x3, x0, lsl #4
 628:	cmp	x3, x0
 62c:	b.eq	63c <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0xe0>  // b.none
 630:	sub	x0, x0, #0x10
 634:	cmp	x3, x0
 638:	b.ne	630 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0xd4>  // b.any
 63c:	str	wzr, [x19, #96]
 640:	ldr	x0, [x19, #128]
 644:	str	x0, [sp, #200]
 648:	add	x8, sp, #0xd0
 64c:	add	x3, sp, #0x48
 650:	mov	x2, x20
 654:	mov	w1, #0x1                   	// #1
 658:	mov	w0, w22
 65c:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE>
 660:	ldr	w0, [sp, #84]
 664:	cbz	w0, 68c <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x130>
 668:	ldr	w0, [sp, #80]
 66c:	cbz	w0, 68c <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x130>
 670:	sub	w1, w0, #0x1
 674:	add	x1, x1, #0x1
 678:	lsl	x1, x1, #3
 67c:	mov	x0, #0x0                   	// #0
 680:	add	x0, x0, #0x8
 684:	cmp	x0, x1
 688:	b.ne	680 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x124>  // b.any
 68c:	ldr	x0, [sp, #72]
 690:	bl	0 <free>
 694:	ldr	x20, [sp, #112]
 698:	ldr	w22, [sp, #120]
 69c:	add	x22, x20, x22, lsl #3
 6a0:	cmp	x20, x22
 6a4:	b.eq	6b8 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x15c>  // b.none
 6a8:	ldr	x0, [x20], #8
 6ac:	bl	0 <free>
 6b0:	cmp	x22, x20
 6b4:	b.ne	6a8 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x14c>  // b.any
 6b8:	ldr	x20, [sp, #160]
 6bc:	ldr	w22, [sp, #168]
 6c0:	add	x22, x20, x22, lsl #4
 6c4:	cmp	x20, x22
 6c8:	b.eq	6fc <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x1a0>  // b.none
 6cc:	ldr	x0, [x20], #16
 6d0:	bl	0 <free>
 6d4:	cmp	x22, x20
 6d8:	b.ne	6cc <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x170>  // b.any
 6dc:	ldr	x1, [sp, #160]
 6e0:	ldr	w0, [sp, #168]
 6e4:	add	x0, x1, x0, lsl #4
 6e8:	cmp	x1, x0
 6ec:	b.eq	6fc <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x1a0>  // b.none
 6f0:	sub	x0, x0, #0x10
 6f4:	cmp	x1, x0
 6f8:	b.ne	6f0 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x194>  // b.any
 6fc:	ldr	x0, [sp, #160]
 700:	add	x1, sp, #0xb0
 704:	cmp	x0, x1
 708:	b.eq	710 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x1b4>  // b.none
 70c:	bl	0 <free>
 710:	ldr	x0, [sp, #112]
 714:	add	x1, sp, #0x80
 718:	cmp	x0, x1
 71c:	b.eq	724 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x1c8>  // b.none
 720:	bl	0 <free>
 724:	ldrb	w0, [sp, #216]
 728:	and	w1, w0, #0x1
 72c:	bfi	w0, w1, #1, #1
 730:	strb	w0, [sp, #216]
 734:	cbz	w1, 830 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x2d4>
 738:	and	x0, x0, #0xff
 73c:	and	w0, w0, #0xfffffffd
 740:	strb	w0, [sp, #216]
 744:	ldr	x0, [sp, #208]
 748:	str	xzr, [sp, #208]
 74c:	orr	x0, x0, #0x1
 750:	str	x0, [x21]
 754:	ldr	x0, [sp, #208]
 758:	cbz	x0, 8c0 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x364>
 75c:	ldr	x1, [x0]
 760:	ldr	x1, [x1, #8]
 764:	blr	x1
 768:	b	8c0 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x364>
 76c:	ldr	x0, [x19, #40]
 770:	add	x1, x19, #0x38
 774:	cmp	x0, x1
 778:	b.eq	79c <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x240>  // b.none
 77c:	str	x0, [sp, #112]
 780:	str	w23, [sp, #120]
 784:	ldr	w0, [x19, #52]
 788:	str	w0, [sp, #124]
 78c:	str	x1, [x19, #40]
 790:	str	wzr, [x19, #52]
 794:	str	wzr, [x19, #48]
 798:	b	5e4 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x88>
 79c:	mov	w24, w23
 7a0:	cmp	w23, #0x4
 7a4:	b.hi	7d4 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x278>  // b.pmore
 7a8:	ldr	w0, [x19, #48]
 7ac:	lsl	x2, x0, #3
 7b0:	cbz	x0, 7c8 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x26c>
 7b4:	add	x0, sp, #0x80
 7b8:	bl	0 <memcpy>
 7bc:	ldr	w0, [sp, #124]
 7c0:	cmp	x24, x0
 7c4:	b.hi	800 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x2a4>  // b.pmore
 7c8:	str	w23, [sp, #120]
 7cc:	str	wzr, [x19, #48]
 7d0:	b	5e4 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x88>
 7d4:	mov	x3, #0x8                   	// #8
 7d8:	mov	x2, x24
 7dc:	add	x1, sp, #0x80
 7e0:	add	x0, sp, #0x70
 7e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 7e8:	ldr	w0, [x19, #48]
 7ec:	lsl	x2, x0, #3
 7f0:	cbz	x0, 7bc <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x260>
 7f4:	ldr	x1, [x19, #40]
 7f8:	ldr	x0, [sp, #112]
 7fc:	b	7b8 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x25c>
 800:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 804:	add	x3, x3, #0x0
 808:	mov	w2, #0x43                  	// #67
 80c:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 810:	add	x1, x1, #0x0
 814:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 818:	add	x0, x0, #0x0
 81c:	bl	0 <__assert_fail>
 820:	add	x1, x19, #0x58
 824:	add	x0, sp, #0xa0
 828:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 82c:	b	5fc <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0xa0>
 830:	ldr	x22, [sp, #208]
 834:	str	xzr, [sp, #208]
 838:	ldr	x20, [x19, #160]
 83c:	add	x19, x19, #0x90
 840:	cmp	x19, x20
 844:	b.eq	898 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x33c>  // b.none
 848:	ldr	x0, [x22]
 84c:	ldr	x2, [x0, #16]
 850:	ldr	x1, [x20, #32]
 854:	mov	x0, x22
 858:	blr	x2
 85c:	mov	x0, x20
 860:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 864:	mov	x20, x0
 868:	cmp	x19, x0
 86c:	b.ne	848 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x2ec>  // b.any
 870:	mov	x0, #0x1                   	// #1
 874:	str	x0, [x21]
 878:	ldr	x0, [x22]
 87c:	ldr	x1, [x0, #8]
 880:	mov	x0, x22
 884:	blr	x1
 888:	ldrb	w0, [sp, #216]
 88c:	tbz	w0, #1, 8a4 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x348>
 890:	add	x0, sp, #0xd0
 894:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 898:	mov	x0, #0x1                   	// #1
 89c:	str	x0, [x21]
 8a0:	cbnz	x22, 878 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x31c>
 8a4:	ldrb	w0, [sp, #216]
 8a8:	tbnz	w0, #0, 754 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x1f8>
 8ac:	ldr	x0, [sp, #208]
 8b0:	cbz	x0, 8c0 <_ZNK4llvm7remarks12RemarkLinker9serializeERNS_11raw_ostreamENS0_6FormatE+0x364>
 8b4:	ldr	x1, [x0]
 8b8:	ldr	x1, [x1, #8]
 8bc:	blr	x1
 8c0:	mov	x0, x21
 8c4:	ldp	x19, x20, [sp, #16]
 8c8:	ldp	x21, x22, [sp, #32]
 8cc:	ldp	x23, x24, [sp, #48]
 8d0:	ldp	x29, x30, [sp], #224
 8d4:	ret

00000000000008d8 <_ZN4llvm7remarks12RemarkLinker4keepESt10unique_ptrINS0_6RemarkESt14default_deleteIS3_EE>:
 8d8:	stp	x29, x30, [sp, #-32]!
 8dc:	mov	x29, sp
 8e0:	stp	x19, x20, [sp, #16]
 8e4:	mov	x20, x0
 8e8:	mov	x19, x1
 8ec:	ldr	x1, [x1]
 8f0:	bl	0 <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE>
 8f4:	mov	x1, x19
 8f8:	add	x0, x20, #0x88
 8fc:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 900:	ldr	x0, [x0, #32]
 904:	ldp	x19, x20, [sp, #16]
 908:	ldp	x29, x30, [sp], #32
 90c:	ret

0000000000000910 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE>:
 910:	stp	x29, x30, [sp, #-240]!
 914:	mov	x29, sp
 918:	stp	x19, x20, [sp, #16]
 91c:	stp	x21, x22, [sp, #32]
 920:	mov	x20, x8
 924:	mov	x19, x0
 928:	mov	x21, x1
 92c:	mov	x22, x2
 930:	mov	w0, w3
 934:	tst	x3, #0xff00000000
 938:	b.eq	958 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x48>  // b.none
 93c:	strb	wzr, [sp, #120]
 940:	strb	wzr, [sp, #160]
 944:	ldrb	w1, [x19, #216]
 948:	cbnz	w1, 998 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x88>
 94c:	strb	wzr, [sp, #184]
 950:	strb	wzr, [sp, #200]
 954:	b	9b0 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0xa0>
 958:	add	x8, sp, #0x78
 95c:	mov	x0, x1
 960:	mov	x1, x2
 964:	bl	0 <_ZN4llvm7remarks13magicToFormatENS_9StringRefE>
 968:	ldrb	w0, [sp, #128]
 96c:	tbz	w0, #0, 990 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x80>
 970:	ldr	x0, [sp, #120]
 974:	orr	x0, x0, #0x1
 978:	str	x0, [x20]
 97c:	mov	x0, x20
 980:	ldp	x19, x20, [sp, #16]
 984:	ldp	x21, x22, [sp, #32]
 988:	ldp	x29, x30, [sp], #240
 98c:	ret
 990:	ldr	w0, [sp, #120]
 994:	b	93c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x2c>
 998:	ldr	x2, [x19, #184]
 99c:	ldr	x1, [x19, #192]
 9a0:	str	x2, [sp, #184]
 9a4:	str	x1, [sp, #192]
 9a8:	mov	w1, #0x1                   	// #1
 9ac:	strb	w1, [sp, #200]
 9b0:	ldp	x2, x3, [sp, #184]
 9b4:	stp	x2, x3, [sp, #80]
 9b8:	ldr	x1, [sp, #200]
 9bc:	str	x1, [sp, #96]
 9c0:	add	x8, sp, #0xa8
 9c4:	add	x4, sp, #0x50
 9c8:	add	x3, sp, #0x78
 9cc:	mov	x1, x21
 9d0:	mov	x2, x22
 9d4:	bl	0 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE>
 9d8:	ldrb	w0, [sp, #160]
 9dc:	cbz	w0, 9ec <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0xdc>
 9e0:	ldr	x0, [sp, #136]
 9e4:	cbz	x0, 9ec <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0xdc>
 9e8:	bl	0 <_ZdlPv>
 9ec:	ldrb	w1, [sp, #176]
 9f0:	and	w0, w1, #0x1
 9f4:	bfi	w1, w0, #1, #1
 9f8:	strb	w1, [sp, #176]
 9fc:	cbz	w0, a34 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x124>
 a00:	and	x0, x1, #0xff
 a04:	and	w0, w0, #0xfffffffd
 a08:	strb	w0, [sp, #176]
 a0c:	ldr	x0, [sp, #168]
 a10:	str	xzr, [sp, #168]
 a14:	orr	x0, x0, #0x1
 a18:	str	x0, [x20]
 a1c:	ldr	x0, [sp, #168]
 a20:	cbz	x0, 97c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x6c>
 a24:	ldr	x1, [x0]
 a28:	ldr	x1, [x1, #8]
 a2c:	blr	x1
 a30:	b	97c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x6c>
 a34:	stp	x23, x24, [sp, #48]
 a38:	stp	x25, x26, [sp, #64]
 a3c:	ldr	x21, [sp, #168]
 a40:	add	x22, sp, #0x78
 a44:	mov	x23, #0x1                   	// #1
 a48:	mov	x24, #0x1b8                 	// #440
 a4c:	add	x25, sp, #0xd8
 a50:	ldr	x0, [x21]
 a54:	mov	x8, x22
 a58:	ldr	x1, [x0]
 a5c:	mov	x0, x21
 a60:	blr	x1
 a64:	ldrb	w1, [sp, #128]
 a68:	and	w1, w1, #0xfffffffd
 a6c:	strb	w1, [sp, #128]
 a70:	and	w2, w1, #0x1
 a74:	tbz	w1, #0, ae8 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x1d8>
 a78:	ldr	x0, [sp, #120]
 a7c:	str	xzr, [sp, #120]
 a80:	orr	x0, x0, #0x1
 a84:	str	x0, [sp, #112]
 a88:	ldr	x1, [sp, #112]
 a8c:	ands	x0, x1, #0xfffffffffffffffe
 a90:	cset	x1, ne  // ne = any
 a94:	orr	x1, x1, x0
 a98:	str	x1, [sp, #112]
 a9c:	ands	x0, x1, #0xfffffffffffffffe
 aa0:	b.ne	af0 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x1e0>  // b.any
 aa4:	tbnz	w1, #0, c34 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x324>
 aa8:	cbnz	w2, c3c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x32c>
 aac:	ldr	x0, [sp, #120]
 ab0:	cbz	x0, c5c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x34c>
 ab4:	ldrb	w1, [x0, #80]
 ab8:	cbnz	w1, c7c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x36c>
 abc:	ldr	x26, [sp, #120]
 ac0:	cbz	x26, a50 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x140>
 ac4:	ldr	x0, [x26, #104]
 ac8:	add	x1, x26, #0x78
 acc:	cmp	x0, x1
 ad0:	b.eq	ad8 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x1c8>  // b.none
 ad4:	bl	0 <free>
 ad8:	mov	x1, x24
 adc:	mov	x0, x26
 ae0:	bl	0 <_ZdlPvm>
 ae4:	b	a50 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x140>
 ae8:	str	x23, [sp, #112]
 aec:	b	a88 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x178>
 af0:	ldr	x1, [x0]
 af4:	ldr	x2, [x1, #48]
 af8:	adrp	x1, 0 <_ZN4llvm7remarks14EndOfFileError2IDE>
 afc:	ldr	x1, [x1]
 b00:	blr	x2
 b04:	and	w0, w0, #0xff
 b08:	cbnz	w0, b74 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x264>
 b0c:	ldr	x0, [sp, #112]
 b10:	orr	x0, x0, #0x1
 b14:	str	x0, [x20]
 b18:	ldrb	w0, [sp, #128]
 b1c:	tbnz	w0, #1, b54 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x244>
 b20:	ldrb	w0, [sp, #128]
 b24:	tbnz	w0, #0, b5c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x24c>
 b28:	ldr	x19, [sp, #120]
 b2c:	cbz	x19, c24 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x314>
 b30:	ldr	x0, [x19, #104]
 b34:	add	x1, x19, #0x78
 b38:	cmp	x0, x1
 b3c:	b.eq	b44 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x234>  // b.none
 b40:	bl	0 <free>
 b44:	mov	x1, #0x1b8                 	// #440
 b48:	mov	x0, x19
 b4c:	bl	0 <_ZdlPvm>
 b50:	b	c24 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x314>
 b54:	add	x0, sp, #0x78
 b58:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 b5c:	ldr	x0, [sp, #120]
 b60:	cbz	x0, c24 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x314>
 b64:	ldr	x1, [x0]
 b68:	ldr	x1, [x1, #8]
 b6c:	blr	x1
 b70:	b	c24 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x314>
 b74:	ldr	x0, [sp, #112]
 b78:	orr	x0, x0, #0x1
 b7c:	str	xzr, [sp, #112]
 b80:	str	x0, [sp, #232]
 b84:	str	xzr, [sp, #208]
 b88:	add	x1, sp, #0xe0
 b8c:	add	x0, sp, #0xe8
 b90:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 b94:	ldr	x0, [sp, #232]
 b98:	cbnz	x0, be8 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x2d8>
 b9c:	ldr	x0, [sp, #208]
 ba0:	cbnz	x0, bf0 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x2e0>
 ba4:	ldr	x0, [sp, #112]
 ba8:	cbnz	x0, bf8 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x2e8>
 bac:	ldrb	w0, [sp, #128]
 bb0:	tbnz	w0, #1, c00 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x2f0>
 bb4:	ldrb	w0, [sp, #128]
 bb8:	tbnz	w0, #0, c08 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x2f8>
 bbc:	ldr	x19, [sp, #120]
 bc0:	cbz	x19, c1c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x30c>
 bc4:	ldr	x0, [x19, #104]
 bc8:	add	x1, x19, #0x78
 bcc:	cmp	x0, x1
 bd0:	b.eq	bd8 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x2c8>  // b.none
 bd4:	bl	0 <free>
 bd8:	mov	x1, #0x1b8                 	// #440
 bdc:	mov	x0, x19
 be0:	bl	0 <_ZdlPvm>
 be4:	b	c1c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x30c>
 be8:	add	x0, sp, #0xe8
 bec:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 bf0:	add	x0, sp, #0xd0
 bf4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 bf8:	add	x0, sp, #0x70
 bfc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 c00:	add	x0, sp, #0x78
 c04:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c08:	ldr	x0, [sp, #120]
 c0c:	cbz	x0, c1c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x30c>
 c10:	ldr	x1, [x0]
 c14:	ldr	x1, [x1, #8]
 c18:	blr	x1
 c1c:	mov	x0, #0x1                   	// #1
 c20:	str	x0, [x20]
 c24:	ldrb	w0, [sp, #176]
 c28:	tbz	w0, #1, ce8 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x3d8>
 c2c:	add	x0, sp, #0xa8
 c30:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c34:	add	x0, sp, #0x70
 c38:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 c3c:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c40:	add	x3, x3, #0x0
 c44:	mov	w2, #0x272                 	// #626
 c48:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c4c:	add	x1, x1, #0x0
 c50:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c54:	add	x0, x0, #0x0
 c58:	bl	0 <__assert_fail>
 c5c:	adrp	x3, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c60:	add	x3, x3, #0x0
 c64:	mov	w2, #0x5e                  	// #94
 c68:	adrp	x1, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c6c:	add	x1, x1, #0x0
 c70:	adrp	x0, 0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 c74:	add	x0, x0, #0x0
 c78:	bl	0 <__assert_fail>
 c7c:	str	xzr, [sp, #120]
 c80:	str	x0, [sp, #216]
 c84:	mov	x1, x25
 c88:	mov	x0, x19
 c8c:	bl	8d8 <_ZN4llvm7remarks12RemarkLinker4keepESt10unique_ptrINS0_6RemarkESt14default_deleteIS3_EE>
 c90:	ldr	x26, [sp, #216]
 c94:	cbz	x26, cb8 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x3a8>
 c98:	ldr	x0, [x26, #104]
 c9c:	add	x1, x26, #0x78
 ca0:	cmp	x0, x1
 ca4:	b.eq	cac <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x39c>  // b.none
 ca8:	bl	0 <free>
 cac:	mov	x1, x24
 cb0:	mov	x0, x26
 cb4:	bl	0 <_ZdlPvm>
 cb8:	ldrb	w0, [sp, #128]
 cbc:	tbnz	w0, #1, ce0 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x3d0>
 cc0:	ldrb	w0, [sp, #128]
 cc4:	tbz	w0, #0, abc <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x1ac>
 cc8:	ldr	x0, [sp, #120]
 ccc:	cbz	x0, a50 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x140>
 cd0:	ldr	x1, [x0]
 cd4:	ldr	x1, [x1, #8]
 cd8:	blr	x1
 cdc:	b	a50 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x140>
 ce0:	add	x0, sp, #0x78
 ce4:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 ce8:	ldrb	w0, [sp, #176]
 cec:	tbnz	w0, #0, d10 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x400>
 cf0:	ldr	x0, [sp, #168]
 cf4:	cbz	x0, d1c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x40c>
 cf8:	ldr	x1, [x0]
 cfc:	ldr	x1, [x1, #16]
 d00:	blr	x1
 d04:	ldp	x23, x24, [sp, #48]
 d08:	ldp	x25, x26, [sp, #64]
 d0c:	b	97c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x6c>
 d10:	ldp	x23, x24, [sp, #48]
 d14:	ldp	x25, x26, [sp, #64]
 d18:	b	a1c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x10c>
 d1c:	ldp	x23, x24, [sp, #48]
 d20:	ldp	x25, x26, [sp, #64]
 d24:	b	97c <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE+0x6c>

0000000000000d28 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE>:
 d28:	stp	x29, x30, [sp, #-112]!
 d2c:	mov	x29, sp
 d30:	stp	x19, x20, [sp, #16]
 d34:	str	x21, [sp, #32]
 d38:	mov	x19, x8
 d3c:	mov	x21, x0
 d40:	mov	x20, x2
 d44:	add	x8, sp, #0x50
 d48:	mov	x0, x1
 d4c:	bl	1d8 <_ZN4llvm7remarks25getRemarksSectionContentsERKNS_6object10ObjectFileE>
 d50:	ldrb	w1, [sp, #104]
 d54:	and	w3, w1, #0x1
 d58:	bfi	w1, w3, #1, #1
 d5c:	strb	w1, [sp, #104]
 d60:	cbz	w3, da8 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE+0x80>
 d64:	and	x0, x1, #0xff
 d68:	and	w0, w0, #0xfffffffd
 d6c:	strb	w0, [sp, #104]
 d70:	ldr	x0, [sp, #80]
 d74:	str	xzr, [sp, #80]
 d78:	orr	x0, x0, #0x1
 d7c:	str	x0, [x19]
 d80:	ldr	x0, [sp, #80]
 d84:	cbz	x0, d94 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE+0x6c>
 d88:	ldr	x1, [x0]
 d8c:	ldr	x1, [x1, #8]
 d90:	blr	x1
 d94:	mov	x0, x19
 d98:	ldp	x19, x20, [sp, #16]
 d9c:	ldr	x21, [sp, #32]
 da0:	ldp	x29, x30, [sp], #112
 da4:	ret
 da8:	ldp	x0, x1, [sp, #80]
 dac:	stp	x0, x1, [sp, #56]
 db0:	ldr	x0, [sp, #96]
 db4:	str	x0, [sp, #72]
 db8:	ldrb	w0, [sp, #96]
 dbc:	cbz	w0, de4 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE+0xbc>
 dc0:	mov	x8, x19
 dc4:	mov	x3, x20
 dc8:	ldp	x1, x2, [sp, #56]
 dcc:	mov	x0, x21
 dd0:	bl	910 <_ZN4llvm7remarks12RemarkLinker4linkENS_9StringRefENS_8OptionalINS0_6FormatEEE>
 dd4:	ldrb	w0, [sp, #104]
 dd8:	tbz	w0, #1, df0 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE+0xc8>
 ddc:	add	x0, sp, #0x50
 de0:	bl	0 <_ZN4llvm7remarks12RemarkLinker26setExternalFilePrependPathENS_9StringRefE>
 de4:	mov	x0, #0x1                   	// #1
 de8:	str	x0, [x19]
 dec:	b	d94 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE+0x6c>
 df0:	ldrb	w0, [sp, #104]
 df4:	tbz	w0, #0, d94 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE+0x6c>
 df8:	b	d80 <_ZN4llvm7remarks12RemarkLinker4linkERKNS_6object10ObjectFileENS_8OptionalINS0_6FormatEEE+0x58>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	64 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0x64>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	str	x23, [sp, #48]
  20:	mov	x20, x1
  24:	ldr	w22, [x1, #8]
  28:	mov	w23, w22
  2c:	ldr	w21, [x0, #8]
  30:	cmp	x21, w22, uxtw
  34:	b.cc	94 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0x94>  // b.lo, b.ul, b.last
  38:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0x58>
  3c:	lsl	x2, x23, #6
  40:	ldr	x1, [x1]
  44:	ldr	x0, [x0]
  48:	bl	0 <memmove>
  4c:	ldr	w0, [x19, #12]
  50:	cmp	x23, x0
  54:	b.hi	74 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0x74>  // b.pmore
  58:	str	w22, [x19, #8]
  5c:	ldp	x21, x22, [sp, #32]
  60:	ldr	x23, [sp, #48]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_>
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x43                  	// #67
  80:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_>
  84:	add	x1, x1, #0x0
  88:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_>
  8c:	add	x0, x0, #0x0
  90:	bl	0 <__assert_fail>
  94:	ldr	w0, [x0, #12]
  98:	cmp	x23, x0
  9c:	b.hi	100 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0x100>  // b.pmore
  a0:	cbz	x21, b4 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0xb4>
  a4:	lsl	x2, x21, #6
  a8:	ldr	x1, [x1]
  ac:	ldr	x0, [x19]
  b0:	bl	0 <memmove>
  b4:	ldr	x0, [x20]
  b8:	lsl	x21, x21, #6
  bc:	add	x1, x0, x21
  c0:	ldr	w2, [x20, #8]
  c4:	lsl	x2, x2, #6
  c8:	add	x0, x0, x2
  cc:	cmp	x1, x0
  d0:	b.eq	e4 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0xe4>  // b.none
  d4:	ldr	x0, [x19]
  d8:	sub	x2, x2, x21
  dc:	add	x0, x0, x21
  e0:	bl	0 <memcpy>
  e4:	ldr	w0, [x19, #12]
  e8:	cmp	x23, x0
  ec:	b.hi	120 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0x120>  // b.pmore
  f0:	str	w22, [x19, #8]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	b	64 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0x64>
 100:	str	wzr, [x19, #8]
 104:	mov	x3, #0x40                  	// #64
 108:	mov	x2, x23
 10c:	add	x1, x19, #0x10
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x21, #0x0                   	// #0
 11c:	b	b4 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_+0xb4>
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_>
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x43                  	// #67
 12c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_>
 130:	add	x1, x1, #0x0
 134:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_7remarks8ArgumentEEaSERKS3_>
 138:	add	x0, x0, #0x0
 13c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_:

0000000000000000 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	ldrb	w2, [x0, #24]
  10:	cbnz	w2, 28 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x28>
  14:	ldrb	w22, [x1, #24]
  18:	mov	w0, w22
  1c:	ldp	x21, x22, [sp, #32]
  20:	ldp	x29, x30, [sp], #144
  24:	ret
  28:	stp	x19, x20, [sp, #16]
  2c:	stp	x23, x24, [sp, #48]
  30:	stp	x25, x26, [sp, #64]
  34:	stp	x27, x28, [sp, #80]
  38:	ldrb	w22, [x1, #24]
  3c:	cbz	w22, 150 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x150>
  40:	ldr	w25, [x0, #20]
  44:	ldr	w23, [x0, #16]
  48:	ldr	x27, [x0]
  4c:	ldr	x0, [x0, #8]
  50:	str	x27, [sp, #128]
  54:	str	x0, [sp, #136]
  58:	ldr	w26, [x1, #20]
  5c:	ldr	w24, [x1, #16]
  60:	ldr	x0, [x1]
  64:	ldr	x1, [x1, #8]
  68:	str	x0, [sp, #104]
  6c:	str	x1, [sp, #112]
  70:	ldr	x19, [sp, #136]
  74:	mov	x28, x0
  78:	mov	x20, x1
  7c:	cmp	x19, x1
  80:	csel	x21, x19, x1, ls  // ls = plast
  84:	cbz	x21, 9c <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x9c>
  88:	mov	x2, x21
  8c:	mov	x1, x0
  90:	mov	x0, x27
  94:	bl	0 <memcmp>
  98:	cbnz	w0, fc <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0xfc>
  9c:	cmp	x19, x20
  a0:	b.eq	148 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x148>  // b.none
  a4:	b.cc	164 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x164>  // b.lo, b.ul, b.last
  a8:	cbz	x21, c8 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0xc8>
  ac:	mov	x2, x21
  b0:	mov	x1, x27
  b4:	mov	x0, x28
  b8:	bl	0 <memcmp>
  bc:	cbnz	w0, 114 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x114>
  c0:	cmp	x19, x20
  c4:	b.eq	d0 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0xd0>  // b.none
  c8:	cmp	x19, x20
  cc:	b.hi	130 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x130>  // b.pmore
  d0:	cmp	w23, w24
  d4:	b.cc	178 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x178>  // b.lo, b.ul, b.last
  d8:	cmp	w25, w26
  dc:	cset	w22, cc  // cc = lo, ul, last
  e0:	cmp	w23, w24
  e4:	csel	w22, w22, wzr, eq  // eq = none
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldp	x23, x24, [sp, #48]
  f0:	ldp	x25, x26, [sp, #64]
  f4:	ldp	x27, x28, [sp, #80]
  f8:	b	18 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x18>
  fc:	tbz	w0, #31, ac <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0xac>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x23, x24, [sp, #48]
 108:	ldp	x25, x26, [sp, #64]
 10c:	ldp	x27, x28, [sp, #80]
 110:	b	18 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x18>
 114:	tbz	w0, #31, d0 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0xd0>
 118:	mov	w22, #0x0                   	// #0
 11c:	ldp	x19, x20, [sp, #16]
 120:	ldp	x23, x24, [sp, #48]
 124:	ldp	x25, x26, [sp, #64]
 128:	ldp	x27, x28, [sp, #80]
 12c:	b	18 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x18>
 130:	mov	w22, #0x0                   	// #0
 134:	ldp	x19, x20, [sp, #16]
 138:	ldp	x23, x24, [sp, #48]
 13c:	ldp	x25, x26, [sp, #64]
 140:	ldp	x27, x28, [sp, #80]
 144:	b	18 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x18>
 148:	cbnz	x21, ac <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0xac>
 14c:	b	d0 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0xd0>
 150:	ldp	x19, x20, [sp, #16]
 154:	ldp	x23, x24, [sp, #48]
 158:	ldp	x25, x26, [sp, #64]
 15c:	ldp	x27, x28, [sp, #80]
 160:	b	18 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x18>
 164:	ldp	x19, x20, [sp, #16]
 168:	ldp	x23, x24, [sp, #48]
 16c:	ldp	x25, x26, [sp, #64]
 170:	ldp	x27, x28, [sp, #80]
 174:	b	18 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x18>
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldp	x23, x24, [sp, #48]
 180:	ldp	x25, x26, [sp, #64]
 184:	ldp	x27, x28, [sp, #80]
 188:	b	18 <_ZN4llvm7remarksltINS0_14RemarkLocationEEEbRKNS_8OptionalIT_EES7_+0x18>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x24, x0
  20:	mov	x19, x2
  24:	ldr	x21, [x0, #8]
  28:	ldr	x25, [x0]
  2c:	sub	x0, x21, x25
  30:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  34:	cmp	x2, x0, asr #3
  38:	b.eq	9c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.none
  3c:	mov	x22, x1
  40:	mov	x27, x1
  44:	asr	x1, x0, #3
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	150 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>  // b.hs, b.nlast
  58:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  5c:	cmp	x0, x26
  60:	csel	x26, x0, x26, ls  // ls = plast
  64:	sub	x20, x22, x25
  68:	mov	x23, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  70:	lsl	x0, x26, #3
  74:	bl	0 <_Znwm>
  78:	mov	x23, x0
  7c:	ldr	x0, [x19]
  80:	str	xzr, [x19]
  84:	str	x0, [x23, x20]
  88:	cmp	x22, x25
  8c:	b.eq	148 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>  // b.none
  90:	mov	x20, x23
  94:	mov	x19, x25
  98:	b	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  9c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <_ZSt20__throw_length_errorPKc>
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x27, x19
  b4:	b.eq	dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>  // b.none
  b8:	ldr	x0, [x19]
  bc:	str	xzr, [x19]
  c0:	str	x0, [x20]
  c4:	ldr	x0, [x19]
  c8:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  cc:	ldr	x1, [x0]
  d0:	ldr	x1, [x1, #8]
  d4:	blr	x1
  d8:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  dc:	sub	x19, x22, x25
  e0:	add	x19, x23, x19
  e4:	add	x19, x19, #0x8
  e8:	cmp	x22, x21
  ec:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.none
  f0:	mov	x2, x22
  f4:	mov	x0, x19
  f8:	ldr	x1, [x2], #8
  fc:	str	x1, [x0], #8
 100:	cmp	x2, x21
 104:	b.ne	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.any
 108:	sub	x21, x21, x22
 10c:	add	x19, x19, x21
 110:	cbz	x25, 11c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x11c>
 114:	mov	x0, x25
 118:	bl	0 <_ZdlPv>
 11c:	str	x23, [x24]
 120:	str	x19, [x24, #8]
 124:	add	x23, x23, x26, lsl #3
 128:	str	x23, [x24, #16]
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldp	x25, x26, [sp, #64]
 13c:	ldr	x27, [sp, #80]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	mov	x19, x23
 14c:	b	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>
 150:	sub	x20, x22, x25
 154:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
 158:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	30 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x30>  // b.none
  14:	ldr	x3, [x2]
  18:	str	xzr, [x2]
  1c:	str	x3, [x1]
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x8
  28:	str	x1, [x0, #8]
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>
  3c:	ldp	x29, x30, [sp], #16
  40:	ret

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	mov	x19, x0
  14:	ldr	x0, [x0]
  18:	ldr	x1, [x0]
  1c:	ldr	x2, [x1, #48]
  20:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  24:	ldr	x1, [x1]
  28:	blr	x2
  2c:	and	w0, w0, #0xff
  30:	cbnz	w0, 54 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x54>
  34:	ldr	x0, [x19]
  38:	str	xzr, [x19]
  3c:	orr	x0, x0, #0x1
  40:	str	x0, [x20]
  44:	mov	x0, x20
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	str	x21, [sp, #32]
  58:	ldr	x21, [x19]
  5c:	str	xzr, [x19]
  60:	ldr	x0, [x21]
  64:	ldr	x2, [x0, #48]
  68:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  6c:	ldr	x1, [x1]
  70:	mov	x0, x21
  74:	blr	x2
  78:	and	w0, w0, #0xff
  7c:	cbz	w0, a0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xa0>
  80:	mov	x0, #0x1                   	// #1
  84:	str	x0, [x20]
  88:	ldr	x0, [x21]
  8c:	ldr	x1, [x0, #8]
  90:	mov	x0, x21
  94:	blr	x1
  98:	ldr	x21, [sp, #32]
  9c:	b	44 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x44>
  a0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x329                 	// #809
  ac:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b0:	add	x1, x1, #0x0
  b4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x21, x1
  18:	ldr	x19, [x0]
  1c:	ands	x1, x19, #0xfffffffffffffffe
  20:	cset	x19, ne  // ne = any
  24:	orr	x19, x19, x1
  28:	str	x19, [x0]
  2c:	ands	x19, x19, #0xfffffffffffffffe
  30:	b.eq	1a4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1a4>  // b.none
  34:	str	xzr, [x0]
  38:	ldr	x0, [x19]
  3c:	ldr	x2, [x0, #48]
  40:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  44:	ldr	x1, [x1]
  48:	mov	x0, x19
  4c:	blr	x2
  50:	and	w0, w0, #0xff
  54:	cbz	w0, 4c4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4c4>
  58:	stp	x23, x24, [sp, #48]
  5c:	mov	x0, #0x1                   	// #1
  60:	str	x0, [sp, #120]
  64:	ldr	x22, [x19, #8]
  68:	ldr	x24, [x19, #16]
  6c:	cmp	x24, x22
  70:	b.eq	214 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x214>  // b.none
  74:	stp	x25, x26, [sp, #64]
  78:	stp	x27, x28, [sp, #80]
  7c:	add	x26, sp, #0x90
  80:	add	x25, sp, #0x88
  84:	adrp	x23, 0 <_ZTVN4llvm9ErrorListE>
  88:	ldr	x23, [x23]
  8c:	add	x23, x23, #0x10
  90:	ldr	x0, [sp, #120]
  94:	orr	x0, x0, #0x1
  98:	str	x0, [sp, #128]
  9c:	str	xzr, [sp, #120]
  a0:	ldr	x0, [x22]
  a4:	str	xzr, [x22]
  a8:	str	x0, [sp, #144]
  ac:	mov	x8, x25
  b0:	mov	x1, x21
  b4:	mov	x0, x26
  b8:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  bc:	ldr	x0, [sp, #128]
  c0:	ands	x1, x0, #0xfffffffffffffffe
  c4:	cset	x0, ne  // ne = any
  c8:	orr	x0, x0, x1
  cc:	str	x0, [sp, #128]
  d0:	ands	x0, x0, #0xfffffffffffffffe
  d4:	b.eq	1c0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1c0>  // b.none
  d8:	ldr	x1, [sp, #136]
  dc:	ands	x2, x1, #0xfffffffffffffffe
  e0:	cset	x1, ne  // ne = any
  e4:	orr	x1, x1, x2
  e8:	str	x1, [sp, #136]
  ec:	tst	x1, #0xfffffffffffffffe
  f0:	b.eq	238 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x238>  // b.none
  f4:	ldr	x1, [x0]
  f8:	ldr	x2, [x1, #48]
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 100:	ldr	x1, [x1]
 104:	blr	x2
 108:	and	w0, w0, #0xff
 10c:	cbz	w0, 288 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x288>
 110:	ldr	x0, [sp, #128]
 114:	and	x0, x0, #0xfffffffffffffffe
 118:	str	x0, [sp, #96]
 11c:	ldr	x0, [sp, #136]
 120:	ands	x0, x0, #0xfffffffffffffffe
 124:	b.eq	244 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>  // b.none
 128:	ldr	x1, [x0]
 12c:	ldr	x2, [x1, #48]
 130:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 134:	ldr	x1, [x1]
 138:	blr	x2
 13c:	and	w0, w0, #0xff
 140:	cbz	w0, 244 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>
 144:	ldr	x0, [sp, #136]
 148:	and	x1, x0, #0xfffffffffffffffe
 14c:	str	x1, [sp, #104]
 150:	str	xzr, [sp, #136]
 154:	ldr	x27, [x1, #8]
 158:	ldr	x28, [x1, #16]
 15c:	cmp	x27, x28
 160:	b.eq	188 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x188>  // b.none
 164:	ldr	x0, [sp, #96]
 168:	add	x0, x0, #0x8
 16c:	str	x0, [sp, #96]
 170:	mov	x1, x27
 174:	ldr	x0, [sp, #96]
 178:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 17c:	add	x27, x27, #0x8
 180:	cmp	x28, x27
 184:	b.ne	170 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x170>  // b.any
 188:	ldr	x2, [sp, #104]
 18c:	cbz	x2, 278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 190:	ldr	x0, [x2]
 194:	ldr	x1, [x0, #8]
 198:	mov	x0, x2
 19c:	blr	x1
 1a0:	b	278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 1a4:	mov	x0, #0x1                   	// #1
 1a8:	str	x0, [x8]
 1ac:	mov	x0, x20
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #192
 1bc:	ret
 1c0:	ldr	x0, [sp, #136]
 1c4:	orr	x27, x0, #0x1
 1c8:	str	xzr, [sp, #136]
 1cc:	ldr	x0, [sp, #120]
 1d0:	cbnz	x0, 4ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4ac>
 1d4:	orr	x0, x27, #0x1
 1d8:	str	x0, [sp, #120]
 1dc:	ldr	x0, [sp, #136]
 1e0:	cbnz	x0, 4b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4b4>
 1e4:	ldr	x0, [sp, #144]
 1e8:	cbz	x0, 1f8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1f8>
 1ec:	ldr	x1, [x0]
 1f0:	ldr	x1, [x1, #8]
 1f4:	blr	x1
 1f8:	ldr	x0, [sp, #128]
 1fc:	cbnz	x0, 4bc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4bc>
 200:	add	x22, x22, #0x8
 204:	cmp	x24, x22
 208:	b.ne	90 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x90>  // b.any
 20c:	ldp	x25, x26, [sp, #64]
 210:	ldp	x27, x28, [sp, #80]
 214:	ldr	x0, [sp, #120]
 218:	orr	x0, x0, #0x1
 21c:	str	x0, [x20]
 220:	ldr	x0, [x19]
 224:	ldr	x1, [x0, #8]
 228:	mov	x0, x19
 22c:	blr	x1
 230:	ldp	x23, x24, [sp, #48]
 234:	b	1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 238:	orr	x27, x0, #0x1
 23c:	str	xzr, [sp, #128]
 240:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 244:	ldr	x0, [sp, #136]
 248:	and	x0, x0, #0xfffffffffffffffe
 24c:	str	x0, [sp, #184]
 250:	str	xzr, [sp, #136]
 254:	add	x1, sp, #0xb8
 258:	ldr	x0, [sp, #96]
 25c:	add	x0, x0, #0x8
 260:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 264:	ldr	x0, [sp, #184]
 268:	cbz	x0, 278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 26c:	ldr	x1, [x0]
 270:	ldr	x1, [x1, #8]
 274:	blr	x1
 278:	ldr	x0, [sp, #128]
 27c:	orr	x27, x0, #0x1
 280:	str	xzr, [sp, #128]
 284:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 288:	ldr	x0, [sp, #136]
 28c:	ands	x0, x0, #0xfffffffffffffffe
 290:	b.eq	3c4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c4>  // b.none
 294:	ldr	x1, [x0]
 298:	ldr	x2, [x1, #48]
 29c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 2a0:	ldr	x1, [x1]
 2a4:	blr	x2
 2a8:	and	w0, w0, #0xff
 2ac:	cbz	w0, 3c4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c4>
 2b0:	ldr	x0, [sp, #136]
 2b4:	and	x0, x0, #0xfffffffffffffffe
 2b8:	mov	x1, x0
 2bc:	ldr	x4, [x1, #8]!
 2c0:	str	x4, [sp, #96]
 2c4:	ldr	x3, [sp, #128]
 2c8:	and	x3, x3, #0xfffffffffffffffe
 2cc:	str	x3, [sp, #176]
 2d0:	str	xzr, [sp, #128]
 2d4:	ldr	x2, [x1, #8]
 2d8:	ldr	x1, [x1, #16]
 2dc:	cmp	x2, x1
 2e0:	b.eq	3b0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3b0>  // b.none
 2e4:	cmp	x4, x2
 2e8:	b.eq	344 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x344>  // b.none
 2ec:	ldur	x1, [x2, #-8]
 2f0:	stur	xzr, [x2, #-8]
 2f4:	str	x1, [x2]
 2f8:	ldr	x27, [x0, #16]
 2fc:	add	x1, x27, #0x8
 300:	str	x1, [x0, #16]
 304:	sub	x0, x27, #0x8
 308:	ldr	x1, [sp, #96]
 30c:	sub	x0, x0, x1
 310:	asr	x28, x0, #3
 314:	cmp	x0, #0x0
 318:	b.gt	388 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x388>
 31c:	ldr	x1, [sp, #176]
 320:	str	xzr, [sp, #176]
 324:	ldr	x2, [sp, #96]
 328:	ldr	x0, [x2]
 32c:	str	x1, [x2]
 330:	cbz	x0, 358 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x358>
 334:	ldr	x1, [x0]
 338:	ldr	x1, [x1, #8]
 33c:	blr	x1
 340:	b	358 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x358>
 344:	str	xzr, [sp, #176]
 348:	str	x3, [x2]
 34c:	ldr	x1, [x0, #16]
 350:	add	x1, x1, #0x8
 354:	str	x1, [x0, #16]
 358:	ldr	x0, [sp, #176]
 35c:	cbz	x0, 36c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x36c>
 360:	ldr	x1, [x0]
 364:	ldr	x1, [x1, #8]
 368:	blr	x1
 36c:	ldr	x0, [sp, #136]
 370:	orr	x27, x0, #0x1
 374:	str	xzr, [sp, #136]
 378:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 37c:	sub	x28, x28, #0x1
 380:	cmp	x28, #0x0
 384:	b.le	31c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x31c>
 388:	sub	x27, x27, #0x8
 38c:	ldur	x1, [x27, #-8]
 390:	stur	xzr, [x27, #-8]
 394:	ldr	x0, [x27]
 398:	str	x1, [x27]
 39c:	cbz	x0, 37c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x37c>
 3a0:	ldr	x1, [x0]
 3a4:	ldr	x1, [x1, #8]
 3a8:	blr	x1
 3ac:	b	37c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x37c>
 3b0:	add	x2, sp, #0xb0
 3b4:	ldr	x1, [sp, #96]
 3b8:	add	x0, x0, #0x8
 3bc:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3c0:	b	358 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x358>
 3c4:	ldr	x0, [sp, #128]
 3c8:	and	x0, x0, #0xfffffffffffffffe
 3cc:	str	x0, [sp, #168]
 3d0:	str	xzr, [sp, #128]
 3d4:	ldr	x0, [sp, #136]
 3d8:	and	x0, x0, #0xfffffffffffffffe
 3dc:	str	x0, [sp, #160]
 3e0:	str	xzr, [sp, #136]
 3e4:	mov	x0, #0x20                  	// #32
 3e8:	bl	0 <_Znwm>
 3ec:	mov	x27, x0
 3f0:	mov	x28, x0
 3f4:	str	x23, [x28], #8
 3f8:	str	xzr, [x0, #8]
 3fc:	str	xzr, [x28, #8]
 400:	str	xzr, [x28, #16]
 404:	ldr	x0, [sp, #168]
 408:	ldr	x1, [x0]
 40c:	ldr	x2, [x1, #48]
 410:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 414:	ldr	x1, [x1]
 418:	blr	x2
 41c:	and	w0, w0, #0xff
 420:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x48c>
 424:	ldr	x0, [sp, #160]
 428:	ldr	x1, [x0]
 42c:	ldr	x2, [x1, #48]
 430:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 434:	ldr	x1, [x1]
 438:	blr	x2
 43c:	and	w0, w0, #0xff
 440:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x48c>
 444:	add	x1, sp, #0xa8
 448:	mov	x0, x28
 44c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 450:	add	x1, sp, #0xa0
 454:	mov	x0, x28
 458:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 45c:	orr	x27, x27, #0x1
 460:	ldr	x0, [sp, #160]
 464:	cbz	x0, 474 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x474>
 468:	ldr	x1, [x0]
 46c:	ldr	x1, [x1, #8]
 470:	blr	x1
 474:	ldr	x0, [sp, #168]
 478:	cbz	x0, 1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 47c:	ldr	x1, [x0]
 480:	ldr	x1, [x1, #8]
 484:	blr	x1
 488:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 48c:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 490:	add	x3, x3, #0x0
 494:	mov	w2, #0x181                 	// #385
 498:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 49c:	add	x1, x1, #0x0
 4a0:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4a4:	add	x0, x0, #0x0
 4a8:	bl	0 <__assert_fail>
 4ac:	add	x0, sp, #0x78
 4b0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4b4:	add	x0, sp, #0x88
 4b8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4bc:	add	x0, sp, #0x80
 4c0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4c4:	str	x19, [sp, #152]
 4c8:	mov	x8, x20
 4cc:	mov	x1, x21
 4d0:	add	x0, sp, #0x98
 4d4:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4d8:	ldr	x0, [sp, #152]
 4dc:	cbz	x0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 4e0:	ldr	x1, [x0]
 4e4:	ldr	x1, [x1, #8]
 4e8:	blr	x1
 4ec:	b	1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0]
   c:	orr	x2, x2, #0x1
  10:	str	x2, [sp, #104]
  14:	str	xzr, [x0]
  18:	add	x8, sp, #0x60
  1c:	add	x0, sp, #0x68
  20:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  24:	ldr	x0, [sp, #96]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #96]
  38:	tst	x0, #0xfffffffffffffffe
  3c:	b.ne	54 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x54>  // b.any
  40:	tbnz	w0, #0, 110 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x110>
  44:	ldr	x0, [sp, #104]
  48:	cbnz	x0, 118 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x118>
  4c:	ldp	x29, x30, [sp], #112
  50:	ret
  54:	add	x1, sp, #0x10
  58:	add	x0, sp, #0x20
  5c:	str	x0, [sp, #16]
  60:	str	xzr, [sp, #24]
  64:	strb	wzr, [sp, #32]
  68:	mov	w0, #0x1                   	// #1
  6c:	str	w0, [sp, #80]
  70:	str	xzr, [sp, #72]
  74:	str	xzr, [sp, #64]
  78:	str	xzr, [sp, #56]
  7c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  80:	ldr	x0, [x0]
  84:	add	x0, x0, #0x10
  88:	str	x0, [sp, #48]
  8c:	str	x1, [sp, #88]
  90:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  94:	add	x1, x1, #0x0
  98:	add	x0, sp, #0x30
  9c:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  ac:	mov	x2, x0
  b0:	ldr	x1, [sp, #96]
  b4:	ands	x0, x1, #0xfffffffffffffffe
  b8:	b.eq	fc <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xfc>  // b.none
  bc:	ldr	x1, [x0]
  c0:	ldr	x3, [x1, #16]
  c4:	mov	x1, x2
  c8:	blr	x3
  cc:	ldr	x1, [sp, #72]
  d0:	ldr	x0, [sp, #56]
  d4:	cmp	x1, x0
  d8:	b.eq	e4 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xe4>  // b.none
  dc:	add	x0, sp, #0x30
  e0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  e4:	mov	w2, #0x2c9                 	// #713
  e8:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  ec:	add	x1, x1, #0x0
  f0:	ldr	x0, [sp, #88]
  f4:	ldr	x0, [x0]
  f8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  fc:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
 100:	add	x1, x1, #0x0
 104:	mov	x0, x2
 108:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
 10c:	b	cc <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xcc>
 110:	add	x0, sp, #0x60
 114:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 118:	add	x0, sp, #0x68
 11c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #16]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #16]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #16]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #16]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_8ArrayRefIhEEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #24]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #24]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_8OptionalINS_9StringRefEEEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_7remarks6FormatEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16RemarkSerializerESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	str	x1, [sp, #56]
  18:	mov	x20, x1
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	f4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf4>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	add	x2, x2, #0x2
  30:	orr	x2, x2, x2, lsr #1
  34:	orr	x2, x2, x2, lsr #2
  38:	orr	x2, x2, x2, lsr #4
  3c:	orr	x2, x2, x2, lsr #8
  40:	orr	x0, x2, x2, lsr #16
  44:	orr	x2, x0, x2, lsr #32
  48:	add	x2, x2, #0x1
  4c:	str	x2, [sp, #64]
  50:	cmp	x20, x2
  54:	add	x0, sp, #0x40
  58:	add	x1, sp, #0x38
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #72]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	add	x1, sp, #0x48
  74:	csel	x0, x1, x0, hi  // hi = pmore
  78:	ldr	x21, [x0]
  7c:	lsl	x22, x21, #4
  80:	mov	x0, x22
  84:	bl	0 <malloc>
  88:	mov	x20, x0
  8c:	cbz	x0, 108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x108>
  90:	ldr	x6, [x19]
  94:	ldr	w1, [x19, #8]
  98:	add	x1, x6, x1, lsl #4
  9c:	cmp	x1, x6
  a0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.none
  a4:	mov	x2, x6
  a8:	mov	x3, x20
  ac:	ldp	x4, x5, [x2], #16
  b0:	stp	x4, x5, [x3], #16
  b4:	cmp	x1, x2
  b8:	b.ne	ac <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xac>  // b.any
  bc:	sub	x1, x1, #0x10
  c0:	cmp	x1, x6
  c4:	b.ne	bc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xbc>  // b.any
  c8:	mov	x1, x19
  cc:	ldr	x0, [x1], #16
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xdc>  // b.none
  d8:	bl	0 <free>
  dc:	str	x20, [x19]
  e0:	str	w21, [x19, #12]
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret
  f4:	mov	w1, #0x1                   	// #1
  f8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x28>
 108:	cbnz	x22, 11c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x11c>
 10c:	mov	x0, #0x1                   	// #1
 110:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 114:	mov	x20, x0
 118:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>
 11c:	mov	w1, #0x1                   	// #1
 120:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 12c:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x20, x1
  20:	mov	x21, x1
  24:	ldr	x1, [x21], #16
  28:	cmp	x21, x1
  2c:	b.eq	9c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x9c>  // b.none
  30:	ldr	x0, [x0]
  34:	ldr	w2, [x19, #8]
  38:	add	x2, x0, x2, lsl #4
  3c:	cmp	x0, x2
  40:	b.eq	50 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x50>  // b.none
  44:	sub	x2, x2, #0x10
  48:	cmp	x0, x2
  4c:	b.ne	44 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x44>  // b.any
  50:	mov	x1, x19
  54:	ldr	x0, [x1], #16
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20]
  68:	str	x0, [x19]
  6c:	ldr	w0, [x20, #8]
  70:	str	w0, [x19, #8]
  74:	ldr	w0, [x20, #12]
  78:	str	w0, [x19, #12]
  7c:	str	x21, [x20]
  80:	str	wzr, [x20, #12]
  84:	str	wzr, [x20, #8]
  88:	ldp	x21, x22, [sp, #32]
  8c:	mov	x0, x19
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	ldr	w21, [x20, #8]
  a0:	mov	w22, w21
  a4:	ldr	w0, [x0, #8]
  a8:	cmp	x0, w21, uxtw
  ac:	b.cc	120 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x120>  // b.lo, b.ul, b.last
  b0:	ldr	x2, [x19]
  b4:	cbz	x22, 21c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x21c>
  b8:	lsl	x5, x22, #4
  bc:	add	x4, x1, x5
  c0:	mov	x0, x2
  c4:	ldr	x3, [x1]
  c8:	str	x3, [x0]
  cc:	ldr	x3, [x1, #8]
  d0:	str	x3, [x0, #8]
  d4:	add	x1, x1, #0x10
  d8:	add	x0, x0, #0x10
  dc:	cmp	x1, x4
  e0:	b.ne	c4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0xc4>  // b.any
  e4:	add	x2, x2, x5
  e8:	ldr	w0, [x19, #8]
  ec:	ldr	x1, [x19]
  f0:	add	x0, x1, x0, lsl #4
  f4:	cmp	x0, x2
  f8:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
  fc:	b	234 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x234>
 100:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x43                  	// #67
 10c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 110:	add	x1, x1, #0x0
 114:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <__assert_fail>
 120:	ldr	w2, [x19, #12]
 124:	cmp	x22, x2
 128:	b.ls	1cc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1cc>  // b.plast
 12c:	ldr	x1, [x19]
 130:	add	x0, x1, x0, lsl #4
 134:	cmp	x0, x1
 138:	b.eq	148 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x148>  // b.none
 13c:	sub	x0, x0, #0x10
 140:	cmp	x0, x1
 144:	b.ne	13c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x13c>  // b.any
 148:	str	wzr, [x19, #8]
 14c:	mov	x1, x22
 150:	mov	x0, x19
 154:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 158:	mov	x0, #0x0                   	// #0
 15c:	ldr	x2, [x20]
 160:	lsl	x0, x0, #4
 164:	add	x1, x2, x0
 168:	ldr	w4, [x20, #8]
 16c:	add	x4, x2, x4, lsl #4
 170:	ldr	x2, [x19]
 174:	add	x0, x2, x0
 178:	cmp	x1, x4
 17c:	b.eq	190 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x190>  // b.none
 180:	ldp	x2, x3, [x1], #16
 184:	stp	x2, x3, [x0], #16
 188:	cmp	x4, x1
 18c:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 190:	ldr	w0, [x19, #12]
 194:	cmp	x22, x0
 198:	b.hi	1fc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1fc>  // b.pmore
 19c:	str	w21, [x19, #8]
 1a0:	ldr	x1, [x20]
 1a4:	ldr	w0, [x20, #8]
 1a8:	add	x0, x1, x0, lsl #4
 1ac:	cmp	x1, x0
 1b0:	b.eq	1c0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1c0>  // b.none
 1b4:	sub	x0, x0, #0x10
 1b8:	cmp	x1, x0
 1bc:	b.ne	1b4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1b4>  // b.any
 1c0:	str	wzr, [x20, #8]
 1c4:	ldp	x21, x22, [sp, #32]
 1c8:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 1cc:	cbz	x0, 270 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x270>
 1d0:	ldr	x2, [x19]
 1d4:	add	x4, x1, x0, lsl #4
 1d8:	ldr	x3, [x1]
 1dc:	str	x3, [x2]
 1e0:	ldr	x3, [x1, #8]
 1e4:	str	x3, [x2, #8]
 1e8:	add	x1, x1, #0x10
 1ec:	add	x2, x2, #0x10
 1f0:	cmp	x1, x4
 1f4:	b.ne	1d8 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1d8>  // b.any
 1f8:	b	15c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x15c>
 1fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x43                  	// #67
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 20c:	add	x1, x1, #0x0
 210:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 214:	add	x0, x0, #0x0
 218:	bl	0 <__assert_fail>
 21c:	add	x0, x2, x0, lsl #4
 220:	cmp	x2, x0
 224:	b.eq	240 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x240>  // b.none
 228:	sub	x0, x0, #0x10
 22c:	cmp	x0, x2
 230:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
 234:	ldr	w0, [x19, #12]
 238:	cmp	x22, x0
 23c:	b.hi	100 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x100>  // b.pmore
 240:	str	w21, [x19, #8]
 244:	ldr	x1, [x20]
 248:	ldr	w0, [x20, #8]
 24c:	add	x0, x1, x0, lsl #4
 250:	cmp	x1, x0
 254:	b.eq	264 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x264>  // b.none
 258:	sub	x0, x0, #0x10
 25c:	cmp	x1, x0
 260:	b.ne	258 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x258>  // b.any
 264:	str	wzr, [x20, #8]
 268:	ldp	x21, x22, [sp, #32]
 26c:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 270:	ldr	x1, [x20]
 274:	ldr	w4, [x20, #8]
 278:	add	x4, x1, x4, lsl #4
 27c:	ldr	x0, [x19]
 280:	cmp	x1, x4
 284:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 288:	b	19c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x19c>

Disassembly of section .text._ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_:

0000000000000000 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x19, x0
  18:	mov	x20, x2
  1c:	mov	x25, x3
  20:	sub	x2, x3, x2
  24:	sub	x0, x1, x0
  28:	add	x24, x19, x2
  2c:	cmp	x2, x0
  30:	csel	x24, x24, x1, lt  // lt = tstop
  34:	cmp	x19, x24
  38:	b.eq	370 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x370>  // b.none
  3c:	stp	x21, x22, [sp, #32]
  40:	str	x27, [sp, #80]
  44:	b	200 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x200>
  48:	tbz	w0, #31, 290 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x290>
  4c:	mov	w0, #0x1                   	// #1
  50:	ldp	x21, x22, [sp, #32]
  54:	ldr	x27, [sp, #80]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x23, x24, [sp, #48]
  60:	ldp	x25, x26, [sp, #64]
  64:	ldp	x29, x30, [sp], #224
  68:	ret
  6c:	tbz	w0, #31, 2b4 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x2b4>
  70:	ldp	x0, x1, [x20, #32]
  74:	stp	x0, x1, [sp, #160]
  78:	ldp	x0, x1, [x20, #48]
  7c:	stp	x0, x1, [sp, #176]
  80:	ldp	x0, x1, [x20, #16]
  84:	stp	x0, x1, [sp, #192]
  88:	ldr	x1, [x20]
  8c:	ldr	x0, [x20, #8]
  90:	str	x1, [sp, #208]
  94:	str	x0, [sp, #216]
  98:	ldp	x2, x3, [x19, #32]
  9c:	stp	x2, x3, [sp, #96]
  a0:	ldp	x2, x3, [x19, #48]
  a4:	stp	x2, x3, [sp, #112]
  a8:	ldp	x2, x3, [x19, #16]
  ac:	stp	x2, x3, [sp, #128]
  b0:	ldr	x0, [x19]
  b4:	ldr	x2, [x19, #8]
  b8:	str	x0, [sp, #144]
  bc:	str	x2, [sp, #152]
  c0:	mov	x27, x1
  c4:	ldr	x22, [sp, #216]
  c8:	mov	x26, x0
  cc:	mov	x21, x2
  d0:	cmp	x2, x22
  d4:	csel	x23, x2, x22, ls  // ls = plast
  d8:	cbz	x23, f0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0xf0>
  dc:	mov	x2, x23
  e0:	mov	x1, x0
  e4:	mov	x0, x27
  e8:	bl	0 <memcmp>
  ec:	cbnz	w0, 1d8 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1d8>
  f0:	cmp	x21, x22
  f4:	b.eq	38c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x38c>  // b.none
  f8:	b.hi	1dc <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1dc>  // b.pmore
  fc:	cbz	x23, 11c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x11c>
 100:	mov	x2, x23
 104:	mov	x1, x27
 108:	mov	x0, x26
 10c:	bl	0 <memcmp>
 110:	cbnz	w0, 1ec <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1ec>
 114:	cmp	x21, x22
 118:	b.eq	124 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x124>  // b.none
 11c:	cmp	x21, x22
 120:	b.cc	1f0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1f0>  // b.lo, b.ul, b.last
 124:	ldr	x26, [sp, #192]
 128:	ldr	x21, [sp, #200]
 12c:	ldr	x27, [sp, #128]
 130:	ldr	x22, [sp, #136]
 134:	cmp	x21, x22
 138:	csel	x23, x21, x22, ls  // ls = plast
 13c:	cbz	x23, 154 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x154>
 140:	mov	x2, x23
 144:	mov	x1, x27
 148:	mov	x0, x26
 14c:	bl	0 <memcmp>
 150:	cbnz	w0, 33c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x33c>
 154:	cmp	x21, x22
 158:	b.eq	384 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x384>  // b.none
 15c:	b.cc	340 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x340>  // b.lo, b.ul, b.last
 160:	cbz	x23, 180 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x180>
 164:	mov	x2, x23
 168:	mov	x1, x26
 16c:	mov	x0, x27
 170:	bl	0 <memcmp>
 174:	cbnz	w0, 350 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x350>
 178:	cmp	x21, x22
 17c:	b.eq	188 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x188>  // b.none
 180:	cmp	x21, x22
 184:	b.hi	1f0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1f0>  // b.pmore
 188:	add	x1, sp, #0x60
 18c:	add	x0, sp, #0xa0
 190:	bl	0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_>
 194:	and	w0, w0, #0xff
 198:	cbz	w0, 358 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x358>
 19c:	mov	w0, #0x0                   	// #0
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldr	x27, [sp, #80]
 1a8:	b	58 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x58>
 1ac:	tbz	w0, #31, 2f8 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x2f8>
 1b0:	mov	w0, #0x1                   	// #1
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldr	x27, [sp, #80]
 1bc:	b	58 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x58>
 1c0:	tbz	w0, #31, 31c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x31c>
 1c4:	b	70 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x70>
 1c8:	add	x1, sp, #0xa0
 1cc:	add	x0, sp, #0x60
 1d0:	bl	0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_>
 1d4:	b	70 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x70>
 1d8:	tbz	w0, #31, 100 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x100>
 1dc:	mov	w0, #0x0                   	// #0
 1e0:	ldp	x21, x22, [sp, #32]
 1e4:	ldr	x27, [sp, #80]
 1e8:	b	58 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x58>
 1ec:	tbz	w0, #31, 124 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x124>
 1f0:	add	x19, x19, #0x40
 1f4:	add	x20, x20, #0x40
 1f8:	cmp	x19, x24
 1fc:	b.eq	368 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x368>  // b.none
 200:	ldp	x0, x1, [x19, #32]
 204:	stp	x0, x1, [sp, #160]
 208:	ldp	x0, x1, [x19, #48]
 20c:	stp	x0, x1, [sp, #176]
 210:	ldp	x0, x1, [x19, #16]
 214:	stp	x0, x1, [sp, #192]
 218:	ldr	x1, [x19]
 21c:	ldr	x0, [x19, #8]
 220:	str	x1, [sp, #208]
 224:	str	x0, [sp, #216]
 228:	ldp	x2, x3, [x20, #32]
 22c:	stp	x2, x3, [sp, #96]
 230:	ldp	x2, x3, [x20, #48]
 234:	stp	x2, x3, [sp, #112]
 238:	ldp	x2, x3, [x20, #16]
 23c:	stp	x2, x3, [sp, #128]
 240:	ldr	x0, [x20]
 244:	ldr	x2, [x20, #8]
 248:	str	x0, [sp, #144]
 24c:	str	x2, [sp, #152]
 250:	mov	x26, x1
 254:	ldr	x21, [sp, #216]
 258:	mov	x23, x0
 25c:	mov	x22, x2
 260:	cmp	x21, x2
 264:	csel	x27, x21, x2, ls  // ls = plast
 268:	cbz	x27, 280 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x280>
 26c:	mov	x2, x27
 270:	mov	x1, x0
 274:	mov	x0, x26
 278:	bl	0 <memcmp>
 27c:	cbnz	w0, 48 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x48>
 280:	cmp	x21, x22
 284:	b.eq	39c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x39c>  // b.none
 288:	b.cc	4c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x4c>  // b.lo, b.ul, b.last
 28c:	cbz	x27, 2ac <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x2ac>
 290:	mov	x2, x27
 294:	mov	x1, x26
 298:	mov	x0, x23
 29c:	bl	0 <memcmp>
 2a0:	cbnz	w0, 6c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x6c>
 2a4:	cmp	x21, x22
 2a8:	b.eq	2b4 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x2b4>  // b.none
 2ac:	cmp	x21, x22
 2b0:	b.hi	70 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x70>  // b.pmore
 2b4:	ldr	x26, [sp, #192]
 2b8:	ldr	x21, [sp, #200]
 2bc:	ldr	x27, [sp, #128]
 2c0:	ldr	x22, [sp, #136]
 2c4:	cmp	x21, x22
 2c8:	csel	x23, x21, x22, ls  // ls = plast
 2cc:	cbz	x23, 394 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x394>
 2d0:	mov	x2, x23
 2d4:	mov	x1, x27
 2d8:	mov	x0, x26
 2dc:	bl	0 <memcmp>
 2e0:	cbnz	w0, 1ac <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1ac>
 2e4:	cmp	x21, x22
 2e8:	b.eq	37c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x37c>  // b.none
 2ec:	cmp	x21, x22
 2f0:	b.cc	1b0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1b0>  // b.lo, b.ul, b.last
 2f4:	cbz	x23, 314 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x314>
 2f8:	mov	x2, x23
 2fc:	mov	x1, x26
 300:	mov	x0, x27
 304:	bl	0 <memcmp>
 308:	cbnz	w0, 1c0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1c0>
 30c:	cmp	x21, x22
 310:	b.eq	31c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x31c>  // b.none
 314:	cmp	x21, x22
 318:	b.hi	70 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x70>  // b.pmore
 31c:	add	x1, sp, #0x60
 320:	add	x0, sp, #0xa0
 324:	bl	0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_>
 328:	ands	w0, w0, #0xff
 32c:	b.eq	1c8 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1c8>  // b.none
 330:	ldp	x21, x22, [sp, #32]
 334:	ldr	x27, [sp, #80]
 338:	b	58 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x58>
 33c:	tbz	w0, #31, 164 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x164>
 340:	mov	w0, #0x0                   	// #0
 344:	ldp	x21, x22, [sp, #32]
 348:	ldr	x27, [sp, #80]
 34c:	b	58 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x58>
 350:	tbz	w0, #31, 188 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x188>
 354:	b	1f0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1f0>
 358:	add	x1, sp, #0xa0
 35c:	add	x0, sp, #0x60
 360:	bl	0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_>
 364:	b	1f0 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x1f0>
 368:	ldp	x21, x22, [sp, #32]
 36c:	ldr	x27, [sp, #80]
 370:	cmp	x25, x20
 374:	cset	w0, ne  // ne = any
 378:	b	58 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x58>
 37c:	cbnz	x23, 2f8 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x2f8>
 380:	b	30c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x30c>
 384:	cbnz	x23, 164 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x164>
 388:	b	188 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x188>
 38c:	cbnz	x23, 100 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x100>
 390:	b	124 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x124>
 394:	b.ne	2ec <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x2ec>  // b.any
 398:	b	30c <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x30c>
 39c:	cbnz	x27, 290 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x290>
 3a0:	b	2b4 <_ZSt30__lexicographical_compare_implIPKN4llvm7remarks8ArgumentES4_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S8_T0_S9_T1_+0x2b4>

Disassembly of section .text._ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_:

0000000000000000 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	ldrb	w1, [x0, #344]
  1c:	cbz	w1, b8 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0xb8>
  20:	ldrb	w20, [x19, #344]
  24:	cbz	w20, 4c <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0x4c>
  28:	ldr	x1, [x0, #336]
  2c:	ldr	x0, [x19, #336]
  30:	cmp	x1, x0
  34:	b.cc	c8 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0xc8>  // b.lo, b.ul, b.last
  38:	ldr	x1, [x19, #336]
  3c:	ldr	x0, [x21, #336]
  40:	cmp	x1, x0
  44:	cset	w0, cc  // cc = lo, ul, last
  48:	b	64 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0x64>
  4c:	ldrb	w0, [x19, #344]
  50:	cmp	w1, #0x0
  54:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  58:	b.ne	38 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0x38>  // b.any
  5c:	cmp	w1, w0
  60:	cset	w0, hi  // hi = pmore
  64:	mov	w20, #0x0                   	// #0
  68:	cbnz	w0, c8 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0xc8>
  6c:	ldr	x0, [x21]
  70:	ldr	x2, [x19]
  74:	ldr	w3, [x19, #8]
  78:	ldr	w1, [x21, #8]
  7c:	mov	w4, #0x0                   	// #0
  80:	add	x3, x2, x3, lsl #6
  84:	add	x1, x0, x1, lsl #6
  88:	bl	0 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_>
  8c:	ands	w20, w0, #0xff
  90:	b.ne	c8 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0xc8>  // b.any
  94:	ldr	x0, [x19]
  98:	ldr	x2, [x21]
  9c:	ldr	w3, [x21, #8]
  a0:	ldr	w1, [x19, #8]
  a4:	mov	w4, #0x0                   	// #0
  a8:	add	x3, x2, x3, lsl #6
  ac:	add	x1, x0, x1, lsl #6
  b0:	bl	0 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_>
  b4:	b	c8 <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0xc8>
  b8:	ldrb	w0, [x19, #344]
  bc:	mov	w20, #0x1                   	// #1
  c0:	cmp	w1, w0
  c4:	b.cs	5c <_ZNSt15__tuple_compareISt5tupleIJN4llvm7remarks4TypeENS1_9StringRefES4_S4_NS1_8OptionalINS2_14RemarkLocationEEENS5_ImEENS1_11SmallVectorINS2_8ArgumentELj5EEEEESC_Lm5ELm7EE6__lessERKSC_SF_+0x5c>  // b.hs, b.nlast
  c8:	mov	w0, w20
  cc:	ldp	x19, x20, [sp, #16]
  d0:	ldr	x21, [sp, #32]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret

Disassembly of section .text._ZN4llvm7remarksltERKNS0_6RemarkES3_:

0000000000000000 <_ZN4llvm7remarksltERKNS0_6RemarkES3_>:
   0:	sub	sp, sp, #0x3b0
   4:	stp	x29, x30, [sp]
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	add	x0, sp, #0x50
  1c:	str	x0, [sp, #64]
  20:	str	wzr, [sp, #72]
  24:	mov	w0, #0x5                   	// #5
  28:	str	w0, [sp, #76]
  2c:	ldr	w0, [x20, #112]
  30:	cbnz	w0, 118 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x118>
  34:	ldp	x0, x1, [x20, #88]
  38:	stp	x0, x1, [sp, #400]
  3c:	ldp	x0, x1, [x20, #56]
  40:	stp	x0, x1, [sp, #416]
  44:	ldp	x0, x1, [x20, #72]
  48:	stp	x0, x1, [sp, #432]
  4c:	ldp	x0, x1, [x20, #40]
  50:	stp	x0, x1, [sp, #448]
  54:	ldp	x0, x1, [x20, #24]
  58:	stp	x0, x1, [sp, #464]
  5c:	ldp	x0, x1, [x20, #8]
  60:	stp	x0, x1, [sp, #480]
  64:	ldr	w0, [x20]
  68:	str	w0, [sp, #496]
  6c:	add	x0, sp, #0x208
  70:	str	x0, [sp, #504]
  74:	str	wzr, [sp, #512]
  78:	mov	w0, #0x5                   	// #5
  7c:	str	w0, [sp, #516]
  80:	ldr	w0, [x19, #112]
  84:	cbnz	w0, 128 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x128>
  88:	ldp	x0, x1, [x19, #88]
  8c:	add	x2, sp, #0x400
  90:	stp	x0, x1, [x2, #-184]
  94:	ldp	x0, x1, [x19, #56]
  98:	stp	x0, x1, [x2, #-168]
  9c:	ldp	x0, x1, [x19, #72]
  a0:	stp	x0, x1, [x2, #-152]
  a4:	ldp	x0, x1, [x19, #40]
  a8:	stp	x0, x1, [x2, #-136]
  ac:	ldp	x0, x1, [x19, #24]
  b0:	stp	x0, x1, [x2, #-120]
  b4:	ldp	x0, x1, [x19, #8]
  b8:	stp	x0, x1, [x2, #-104]
  bc:	ldr	w0, [x19]
  c0:	str	w0, [sp, #936]
  c4:	ldr	w1, [sp, #496]
  c8:	mov	w19, #0x1                   	// #1
  cc:	cmp	w1, w0
  d0:	b.lt	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>  // b.tstop
  d4:	mov	w19, #0x0                   	// #0
  d8:	b.eq	138 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x138>  // b.none
  dc:	ldr	x0, [sp, #504]
  e0:	add	x1, sp, #0x208
  e4:	cmp	x0, x1
  e8:	b.eq	f0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	ldr	x0, [sp, #64]
  f4:	add	x1, sp, #0x50
  f8:	cmp	x0, x1
  fc:	b.eq	104 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x104>  // b.none
 100:	bl	0 <free>
 104:	mov	w0, w19
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x29, x30, [sp]
 110:	add	sp, sp, #0x3b0
 114:	ret
 118:	add	x1, x20, #0x68
 11c:	add	x0, sp, #0x40
 120:	bl	0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_>
 124:	b	34 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x34>
 128:	add	x1, x19, #0x68
 12c:	add	x0, sp, #0x1f8
 130:	bl	0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_>
 134:	b	88 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x88>
 138:	stp	x21, x22, [sp, #32]
 13c:	stp	x23, x24, [sp, #48]
 140:	ldr	x24, [sp, #480]
 144:	ldr	x21, [sp, #488]
 148:	ldr	x23, [sp, #920]
 14c:	ldr	x20, [sp, #928]
 150:	cmp	x20, x21
 154:	csel	x22, x20, x21, ls  // ls = plast
 158:	cbz	x22, 170 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x170>
 15c:	mov	x2, x22
 160:	mov	x1, x23
 164:	mov	x0, x24
 168:	bl	0 <memcmp>
 16c:	cbnz	w0, 2a4 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x2a4>
 170:	cmp	x20, x21
 174:	b.eq	3b0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x3b0>  // b.none
 178:	mov	w19, #0x1                   	// #1
 17c:	b.hi	358 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x358>  // b.pmore
 180:	cbz	x22, 1a0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x1a0>
 184:	mov	x2, x22
 188:	mov	x1, x24
 18c:	mov	x0, x23
 190:	bl	0 <memcmp>
 194:	cbnz	w0, 2b8 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x2b8>
 198:	cmp	x20, x21
 19c:	b.eq	1ac <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x1ac>  // b.none
 1a0:	mov	w19, #0x0                   	// #0
 1a4:	cmp	x20, x21
 1a8:	b.cc	364 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x364>  // b.lo, b.ul, b.last
 1ac:	ldr	x24, [sp, #464]
 1b0:	ldr	x21, [sp, #472]
 1b4:	ldr	x23, [sp, #904]
 1b8:	ldr	x20, [sp, #912]
 1bc:	cmp	x20, x21
 1c0:	csel	x22, x20, x21, ls  // ls = plast
 1c4:	cbz	x22, 1dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x1dc>
 1c8:	mov	x2, x22
 1cc:	mov	x1, x23
 1d0:	mov	x0, x24
 1d4:	bl	0 <memcmp>
 1d8:	cbnz	w0, 2cc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x2cc>
 1dc:	cmp	x20, x21
 1e0:	b.eq	3a8 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x3a8>  // b.none
 1e4:	mov	w19, #0x1                   	// #1
 1e8:	b.hi	370 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x370>  // b.pmore
 1ec:	cbz	x22, 20c <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x20c>
 1f0:	mov	x2, x22
 1f4:	mov	x1, x24
 1f8:	mov	x0, x23
 1fc:	bl	0 <memcmp>
 200:	cbnz	w0, 2e0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x2e0>
 204:	cmp	x20, x21
 208:	b.eq	218 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x218>  // b.none
 20c:	mov	w19, #0x0                   	// #0
 210:	cmp	x20, x21
 214:	b.cc	37c <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x37c>  // b.lo, b.ul, b.last
 218:	ldr	x23, [sp, #448]
 21c:	ldr	x20, [sp, #456]
 220:	ldr	x24, [sp, #888]
 224:	ldr	x21, [sp, #896]
 228:	cmp	x20, x21
 22c:	csel	x22, x20, x21, ls  // ls = plast
 230:	cbz	x22, 248 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x248>
 234:	mov	x2, x22
 238:	mov	x1, x24
 23c:	mov	x0, x23
 240:	bl	0 <memcmp>
 244:	cbnz	w0, 2f4 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x2f4>
 248:	cmp	x20, x21
 24c:	b.eq	3a0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x3a0>  // b.none
 250:	mov	w19, #0x1                   	// #1
 254:	b.cc	388 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x388>  // b.lo, b.ul, b.last
 258:	cbz	x22, 278 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x278>
 25c:	mov	x2, x22
 260:	mov	x1, x23
 264:	mov	x0, x24
 268:	bl	0 <memcmp>
 26c:	cbnz	w0, 308 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x308>
 270:	cmp	x20, x21
 274:	b.eq	284 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x284>  // b.none
 278:	mov	w19, #0x0                   	// #0
 27c:	cmp	x20, x21
 280:	b.hi	394 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x394>  // b.pmore
 284:	add	x1, sp, #0x358
 288:	add	x0, sp, #0x1a0
 28c:	bl	0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_>
 290:	ands	w19, w0, #0xff
 294:	b.eq	31c <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x31c>  // b.none
 298:	ldp	x21, x22, [sp, #32]
 29c:	ldp	x23, x24, [sp, #48]
 2a0:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 2a4:	mov	w19, #0x1                   	// #1
 2a8:	tbz	w0, #31, 184 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x184>
 2ac:	ldp	x21, x22, [sp, #32]
 2b0:	ldp	x23, x24, [sp, #48]
 2b4:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 2b8:	mov	w19, #0x0                   	// #0
 2bc:	tbz	w0, #31, 1ac <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x1ac>
 2c0:	ldp	x21, x22, [sp, #32]
 2c4:	ldp	x23, x24, [sp, #48]
 2c8:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 2cc:	mov	w19, #0x1                   	// #1
 2d0:	tbz	w0, #31, 1f0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x1f0>
 2d4:	ldp	x21, x22, [sp, #32]
 2d8:	ldp	x23, x24, [sp, #48]
 2dc:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 2e0:	mov	w19, #0x0                   	// #0
 2e4:	tbz	w0, #31, 218 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x218>
 2e8:	ldp	x21, x22, [sp, #32]
 2ec:	ldp	x23, x24, [sp, #48]
 2f0:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 2f4:	mov	w19, #0x1                   	// #1
 2f8:	tbz	w0, #31, 25c <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x25c>
 2fc:	ldp	x21, x22, [sp, #32]
 300:	ldp	x23, x24, [sp, #48]
 304:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 308:	mov	w19, #0x0                   	// #0
 30c:	tbz	w0, #31, 284 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x284>
 310:	ldp	x21, x22, [sp, #32]
 314:	ldp	x23, x24, [sp, #48]
 318:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 31c:	add	x1, sp, #0x1a0
 320:	add	x0, sp, #0x358
 324:	bl	0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_>
 328:	and	w0, w0, #0xff
 32c:	cbz	w0, 33c <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x33c>
 330:	ldp	x21, x22, [sp, #32]
 334:	ldp	x23, x24, [sp, #48]
 338:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 33c:	add	x1, sp, #0x1f8
 340:	add	x0, sp, #0x40
 344:	bl	0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_>
 348:	and	w19, w0, #0xff
 34c:	ldp	x21, x22, [sp, #32]
 350:	ldp	x23, x24, [sp, #48]
 354:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 358:	ldp	x21, x22, [sp, #32]
 35c:	ldp	x23, x24, [sp, #48]
 360:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 364:	ldp	x21, x22, [sp, #32]
 368:	ldp	x23, x24, [sp, #48]
 36c:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 370:	ldp	x21, x22, [sp, #32]
 374:	ldp	x23, x24, [sp, #48]
 378:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 37c:	ldp	x21, x22, [sp, #32]
 380:	ldp	x23, x24, [sp, #48]
 384:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 388:	ldp	x21, x22, [sp, #32]
 38c:	ldp	x23, x24, [sp, #48]
 390:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 394:	ldp	x21, x22, [sp, #32]
 398:	ldp	x23, x24, [sp, #48]
 39c:	b	dc <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0xdc>
 3a0:	cbnz	x22, 25c <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x25c>
 3a4:	b	284 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x284>
 3a8:	cbnz	x22, 1f0 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x1f0>
 3ac:	b	218 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x218>
 3b0:	cbnz	x22, 184 <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x184>
 3b4:	b	1ac <_ZN4llvm7remarksltERKNS0_6RemarkES3_+0x1ac>

Disassembly of section .text._ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_:

0000000000000000 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x20, x1
  18:	ldr	x19, [x0, #16]
  1c:	cbnz	x19, 54 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x54>
  20:	add	x19, x0, #0x8
  24:	b	7c <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x7c>
  28:	adrp	x3, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x21                  	// #33
  34:	adrp	x1, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  38:	add	x1, x1, #0x0
  3c:	adrp	x0, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  40:	add	x0, x0, #0x0
  44:	bl	0 <__assert_fail>
  48:	ldr	x2, [x19, #24]
  4c:	cbz	x2, 78 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x78>
  50:	mov	x19, x2
  54:	ldr	x0, [x20]
  58:	cbz	x0, 28 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x28>
  5c:	ldr	x1, [x19, #32]
  60:	cbz	x1, 28 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x28>
  64:	bl	0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  68:	ands	w0, w0, #0xff
  6c:	b.eq	48 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x48>  // b.none
  70:	ldr	x2, [x19, #16]
  74:	b	4c <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x4c>
  78:	cbz	w0, d8 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0xd8>
  7c:	ldr	x0, [x21, #24]
  80:	cmp	x0, x19
  84:	b.eq	cc <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0xcc>  // b.none
  88:	mov	x0, x19
  8c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  90:	mov	x21, x19
  94:	mov	x19, x0
  98:	ldr	x0, [x19, #32]
  9c:	cbz	x0, e0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0xe0>
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, e0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0xe0>
  a8:	bl	0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  ac:	ands	w1, w0, #0xff
  b0:	csel	x0, x19, xzr, eq  // eq = none
  b4:	cmp	w1, #0x0
  b8:	csel	x1, x21, xzr, ne  // ne = any
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldr	x21, [sp, #32]
  c4:	ldp	x29, x30, [sp], #48
  c8:	ret
  cc:	mov	x0, #0x0                   	// #0
  d0:	mov	x1, x19
  d4:	b	bc <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0xbc>
  d8:	mov	x21, x19
  dc:	b	98 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_+0x98>
  e0:	adrp	x3, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x21                  	// #33
  ec:	adrp	x1, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  f0:	add	x1, x1, #0x0
  f4:	adrp	x0, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE24_M_get_insert_unique_posERKS6_>
  f8:	add	x0, x0, #0x0
  fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	mov	x22, x1
  14:	bl	0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_>
  18:	cbz	x1, dc <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0xdc>
  1c:	stp	x19, x20, [sp, #16]
  20:	str	x23, [sp, #48]
  24:	mov	x20, x1
  28:	mov	w23, #0x1                   	// #1
  2c:	cbz	x0, 8c <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0x8c>
  30:	mov	x0, #0x28                  	// #40
  34:	bl	0 <_Znwm>
  38:	mov	x19, x0
  3c:	ldr	x0, [x22]
  40:	str	xzr, [x22]
  44:	str	x0, [x19, #32]
  48:	add	x3, x21, #0x8
  4c:	mov	x2, x20
  50:	mov	x1, x19
  54:	mov	w0, w23
  58:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  5c:	ldr	x1, [x21, #40]
  60:	add	x1, x1, #0x1
  64:	str	x1, [x21, #40]
  68:	mov	x0, x19
  6c:	mov	x1, #0x0                   	// #0
  70:	mov	x2, #0x1                   	// #1
  74:	bfxil	x1, x2, #0, #8
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldr	x23, [sp, #48]
  80:	ldp	x21, x22, [sp, #32]
  84:	ldp	x29, x30, [sp], #64
  88:	ret
  8c:	add	x0, x21, #0x8
  90:	cmp	x1, x0
  94:	b.eq	d4 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0xd4>  // b.none
  98:	ldr	x0, [x22]
  9c:	cbz	x0, b4 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0xb4>
  a0:	ldr	x1, [x1, #32]
  a4:	cbz	x1, b4 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0xb4>
  a8:	bl	0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_>
  ac:	and	w23, w0, #0xff
  b0:	b	30 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0x30>
  b4:	adrp	x3, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x21                  	// #33
  c0:	adrp	x1, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	mov	w23, #0x1                   	// #1
  d8:	b	30 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0x30>
  dc:	mov	x1, #0x0                   	// #0
  e0:	b	80 <_ZNSt8_Rb_treeISt10unique_ptrIN4llvm7remarks6RemarkESt14default_deleteIS3_EES6_St9_IdentityIS6_ENS2_12RemarkLinker16RemarkPtrCompareESaIS6_EE16_M_insert_uniqueIS6_EESt4pairISt17_Rb_tree_iteratorIS6_EbEOT_+0x80>

RemarkParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm7remarks17ParsedStringTableixEm>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x8
  14:	mov	x20, x1
  18:	ldr	x2, [x0, #16]
  1c:	ldr	x1, [x0, #24]
  20:	sub	x1, x1, x2
  24:	asr	x21, x1, #3
  28:	cmp	x20, x1, asr #3
  2c:	b.cs	88 <_ZNK4llvm7remarks17ParsedStringTableixEm+0x88>  // b.hs, b.nlast
  30:	lsl	x3, x20, #3
  34:	ldr	x1, [x2, x20, lsl #3]
  38:	sub	x21, x21, #0x1
  3c:	cmp	x21, x20
  40:	b.eq	1b0 <_ZNK4llvm7remarks17ParsedStringTableixEm+0x1b0>  // b.none
  44:	add	x2, x2, x3
  48:	ldr	x3, [x2, #8]
  4c:	ldr	x2, [x0]
  50:	add	x2, x2, x1
  54:	ldrb	w0, [x19, #16]
  58:	and	w0, w0, #0xfffffffe
  5c:	orr	w0, w0, #0x2
  60:	strb	w0, [x19, #16]
  64:	str	x2, [x19]
  68:	mvn	x1, x1
  6c:	add	x1, x1, x3
  70:	str	x1, [x19, #8]
  74:	mov	x0, x19
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x21, x22, [sp, #32]
  80:	ldp	x29, x30, [sp], #192
  84:	ret
  88:	bl	0 <_ZNSt3_V216generic_categoryEv>
  8c:	mov	x22, x0
  90:	add	x0, sp, #0x38
  94:	add	x1, sp, #0x48
  98:	str	x1, [sp, #56]
  9c:	str	xzr, [sp, #64]
  a0:	strb	wzr, [sp, #72]
  a4:	mov	w1, #0x1                   	// #1
  a8:	str	w1, [sp, #152]
  ac:	str	xzr, [sp, #144]
  b0:	str	xzr, [sp, #136]
  b4:	str	xzr, [sp, #128]
  b8:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  bc:	ldr	x1, [x1]
  c0:	add	x1, x1, #0x10
  c4:	str	x1, [sp, #120]
  c8:	str	x0, [sp, #160]
  cc:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
  d0:	add	x0, x0, #0x0
  d4:	str	x0, [sp, #96]
  d8:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
  dc:	ldr	x1, [x1]
  e0:	add	x1, x1, #0x10
  e4:	str	x1, [sp, #88]
  e8:	str	x21, [sp, #104]
  ec:	str	x20, [sp, #112]
  f0:	add	x1, sp, #0x58
  f4:	add	x0, sp, #0x78
  f8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
  fc:	ldr	x1, [sp, #144]
 100:	ldr	x0, [sp, #128]
 104:	cmp	x1, x0
 108:	b.eq	114 <_ZNK4llvm7remarks17ParsedStringTableixEm+0x114>  // b.none
 10c:	add	x0, sp, #0x78
 110:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 114:	str	xzr, [sp, #176]
 118:	mov	w0, #0x4                   	// #4
 11c:	strb	w0, [sp, #184]
 120:	mov	w0, #0x1                   	// #1
 124:	strb	w0, [sp, #185]
 128:	ldr	x0, [sp, #160]
 12c:	str	x0, [sp, #168]
 130:	mov	x21, #0x0                   	// #0
 134:	mov	x0, #0x16                  	// #22
 138:	bfxil	x21, x0, #0, #32
 13c:	mov	x0, #0x40                  	// #64
 140:	bl	0 <_Znwm>
 144:	mov	x20, x0
 148:	mov	x2, x21
 14c:	mov	x3, x22
 150:	add	x1, sp, #0xa8
 154:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 158:	and	x20, x20, #0xfffffffffffffffe
 15c:	add	x0, sp, #0x78
 160:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 164:	ldr	x0, [sp, #56]
 168:	add	x1, sp, #0x48
 16c:	cmp	x0, x1
 170:	b.eq	178 <_ZNK4llvm7remarks17ParsedStringTableixEm+0x178>  // b.none
 174:	bl	0 <_ZdlPv>
 178:	ldrb	w0, [x19, #16]
 17c:	orr	w0, w0, #0x3
 180:	strb	w0, [x19, #16]
 184:	cbz	x20, 190 <_ZNK4llvm7remarks17ParsedStringTableixEm+0x190>
 188:	str	x20, [x19]
 18c:	b	74 <_ZNK4llvm7remarks17ParsedStringTableixEm+0x74>
 190:	adrp	x3, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 194:	add	x3, x3, #0x0
 198:	mov	w2, #0x1ce                 	// #462
 19c:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 1a0:	add	x1, x1, #0x0
 1a4:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <__assert_fail>
 1b0:	ldr	x3, [x0, #8]
 1b4:	b	4c <_ZNK4llvm7remarks17ParsedStringTableixEm+0x4c>

00000000000001b8 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE>:
 1b8:	stp	x29, x30, [sp, #-64]!
 1bc:	mov	x29, sp
 1c0:	stp	x19, x20, [sp, #16]
 1c4:	stp	x21, x22, [sp, #32]
 1c8:	mov	x19, x8
 1cc:	cmp	w0, #0x2
 1d0:	b.eq	2b0 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0xf8>  // b.none
 1d4:	mov	x22, x1
 1d8:	mov	x21, x2
 1dc:	b.gt	22c <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x74>
 1e0:	cbz	w0, 31c <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x164>
 1e4:	cmp	w0, #0x1
 1e8:	b.ne	388 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x1d0>  // b.any
 1ec:	mov	x0, #0xe0                  	// #224
 1f0:	bl	0 <_Znwm>
 1f4:	mov	x20, x0
 1f8:	mov	x1, x22
 1fc:	mov	x2, x21
 200:	bl	0 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefE>
 204:	ldrb	w1, [x19, #8]
 208:	and	w1, w1, #0xfffffffe
 20c:	orr	w1, w1, #0x2
 210:	strb	w1, [x19, #8]
 214:	str	x20, [x19]
 218:	mov	x0, x19
 21c:	ldp	x19, x20, [sp, #16]
 220:	ldp	x21, x22, [sp, #32]
 224:	ldp	x29, x30, [sp], #64
 228:	ret
 22c:	cmp	w0, #0x3
 230:	b.ne	388 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x1d0>  // b.any
 234:	mov	x0, #0x1f0                 	// #496
 238:	bl	0 <_Znwm>
 23c:	mov	x20, x0
 240:	mov	w0, #0x3                   	// #3
 244:	str	w0, [x20, #8]
 248:	add	x0, x20, #0x20
 24c:	str	x0, [x20, #16]
 250:	str	xzr, [x20, #24]
 254:	strb	wzr, [x20, #32]
 258:	mov	x0, x20
 25c:	adrp	x1, 0 <_ZTVN4llvm7remarks21BitstreamRemarkParserE>
 260:	ldr	x1, [x1]
 264:	add	x1, x1, #0x10
 268:	str	x1, [x0], #48
 26c:	mov	x1, x22
 270:	mov	x2, x21
 274:	bl	0 <_ZN4llvm7remarks21BitstreamParserHelperC1ENS_9StringRefE>
 278:	strb	wzr, [x20, #416]
 27c:	strb	wzr, [x20, #456]
 280:	str	xzr, [x20, #464]
 284:	str	xzr, [x20, #472]
 288:	str	xzr, [x20, #480]
 28c:	mov	w0, #0x2                   	// #2
 290:	str	w0, [x20, #488]
 294:	strb	wzr, [x20, #492]
 298:	ldrb	w0, [x19, #8]
 29c:	and	w0, w0, #0xfffffffe
 2a0:	orr	w0, w0, #0x2
 2a4:	strb	w0, [x19, #8]
 2a8:	str	x20, [x19]
 2ac:	b	218 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x60>
 2b0:	bl	0 <_ZNSt3_V216generic_categoryEv>
 2b4:	mov	x1, x0
 2b8:	add	x8, sp, #0x30
 2bc:	adrp	x2, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 2c0:	add	x2, x2, #0x0
 2c4:	mov	x0, #0x16                  	// #22
 2c8:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 2cc:	ldrb	w0, [x19, #8]
 2d0:	orr	w0, w0, #0x3
 2d4:	strb	w0, [x19, #8]
 2d8:	ldr	x0, [sp, #48]
 2dc:	ands	x1, x0, #0xfffffffffffffffe
 2e0:	cset	x0, ne  // ne = any
 2e4:	orr	x0, x0, x1
 2e8:	str	x0, [sp, #48]
 2ec:	ands	x0, x0, #0xfffffffffffffffe
 2f0:	b.eq	2fc <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x144>  // b.none
 2f4:	str	x0, [x19]
 2f8:	b	218 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x60>
 2fc:	adrp	x3, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 300:	add	x3, x3, #0x0
 304:	mov	w2, #0x1ce                 	// #462
 308:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 30c:	add	x1, x1, #0x0
 310:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 314:	add	x0, x0, #0x0
 318:	bl	0 <__assert_fail>
 31c:	bl	0 <_ZNSt3_V216generic_categoryEv>
 320:	mov	x1, x0
 324:	add	x8, sp, #0x38
 328:	adrp	x2, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 32c:	add	x2, x2, #0x0
 330:	mov	x0, #0x16                  	// #22
 334:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 338:	ldrb	w0, [x19, #8]
 33c:	orr	w0, w0, #0x3
 340:	strb	w0, [x19, #8]
 344:	ldr	x0, [sp, #56]
 348:	ands	x1, x0, #0xfffffffffffffffe
 34c:	cset	x0, ne  // ne = any
 350:	orr	x0, x0, x1
 354:	str	x0, [sp, #56]
 358:	ands	x0, x0, #0xfffffffffffffffe
 35c:	b.eq	368 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x1b0>  // b.none
 360:	str	x0, [x19]
 364:	b	218 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE+0x60>
 368:	adrp	x3, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 36c:	add	x3, x3, #0x0
 370:	mov	w2, #0x1ce                 	// #462
 374:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 378:	add	x1, x1, #0x0
 37c:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 380:	add	x0, x0, #0x0
 384:	bl	0 <__assert_fail>
 388:	mov	w2, #0x42                  	// #66
 38c:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 390:	add	x1, x1, #0x0
 394:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 398:	add	x0, x0, #0x0
 39c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000003a0 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE>:
 3a0:	stp	x29, x30, [sp, #-192]!
 3a4:	mov	x29, sp
 3a8:	stp	x19, x20, [sp, #16]
 3ac:	stp	x21, x22, [sp, #32]
 3b0:	mov	x19, x8
 3b4:	mov	x22, x1
 3b8:	mov	x21, x2
 3bc:	cmp	w0, #0x2
 3c0:	b.eq	534 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x194>  // b.none
 3c4:	b.gt	440 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0xa0>
 3c8:	cbz	w0, 5ec <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x24c>
 3cc:	cmp	w0, #0x1
 3d0:	b.ne	420 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x80>  // b.any
 3d4:	bl	0 <_ZNSt3_V216generic_categoryEv>
 3d8:	mov	x1, x0
 3dc:	add	x8, sp, #0xb0
 3e0:	adrp	x2, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 3e4:	add	x2, x2, #0x0
 3e8:	mov	x0, #0x16                  	// #22
 3ec:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 3f0:	ldrb	w0, [x19, #8]
 3f4:	orr	w0, w0, #0x3
 3f8:	strb	w0, [x19, #8]
 3fc:	ldr	x0, [sp, #176]
 400:	ands	x1, x0, #0xfffffffffffffffe
 404:	cset	x0, ne  // ne = any
 408:	orr	x0, x0, x1
 40c:	str	x0, [sp, #176]
 410:	ands	x0, x0, #0xfffffffffffffffe
 414:	b.eq	50c <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x16c>  // b.none
 418:	str	x0, [x19]
 41c:	b	5d8 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x238>
 420:	stp	x23, x24, [sp, #48]
 424:	str	x25, [sp, #64]
 428:	mov	w2, #0x55                  	// #85
 42c:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 430:	add	x1, x1, #0x0
 434:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 438:	add	x0, x0, #0x0
 43c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 440:	stp	x23, x24, [sp, #48]
 444:	str	x25, [sp, #64]
 448:	cmp	w0, #0x3
 44c:	b.ne	428 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x88>  // b.any
 450:	mov	x0, x3
 454:	ldp	x4, x5, [x0], #16
 458:	stp	x4, x5, [sp, #128]
 45c:	ldr	x25, [x3, #16]
 460:	ldr	x24, [x0, #8]
 464:	ldr	x23, [x0, #16]
 468:	str	xzr, [x0, #16]
 46c:	str	xzr, [x0, #8]
 470:	str	xzr, [x3, #16]
 474:	mov	x0, #0x1f0                 	// #496
 478:	bl	0 <_Znwm>
 47c:	mov	x20, x0
 480:	mov	w0, #0x3                   	// #3
 484:	str	w0, [x20, #8]
 488:	add	x0, x20, #0x20
 48c:	str	x0, [x20, #16]
 490:	str	xzr, [x20, #24]
 494:	strb	wzr, [x20, #32]
 498:	mov	x0, x20
 49c:	adrp	x1, 0 <_ZTVN4llvm7remarks21BitstreamRemarkParserE>
 4a0:	ldr	x1, [x1]
 4a4:	add	x1, x1, #0x10
 4a8:	str	x1, [x0], #48
 4ac:	mov	x1, x22
 4b0:	mov	x2, x21
 4b4:	bl	0 <_ZN4llvm7remarks21BitstreamParserHelperC1ENS_9StringRefE>
 4b8:	ldp	x0, x1, [sp, #128]
 4bc:	stp	x0, x1, [x20, #416]
 4c0:	str	x25, [x20, #432]
 4c4:	str	x24, [x20, #440]
 4c8:	str	x23, [x20, #448]
 4cc:	mov	w0, #0x1                   	// #1
 4d0:	strb	w0, [x20, #456]
 4d4:	str	xzr, [x20, #464]
 4d8:	str	xzr, [x20, #472]
 4dc:	str	xzr, [x20, #480]
 4e0:	mov	w0, #0x2                   	// #2
 4e4:	str	w0, [x20, #488]
 4e8:	strb	wzr, [x20, #492]
 4ec:	ldrb	w0, [x19, #8]
 4f0:	and	w0, w0, #0xfffffffe
 4f4:	orr	w0, w0, #0x2
 4f8:	strb	w0, [x19, #8]
 4fc:	str	x20, [x19]
 500:	ldp	x23, x24, [sp, #48]
 504:	ldr	x25, [sp, #64]
 508:	b	5d8 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x238>
 50c:	stp	x23, x24, [sp, #48]
 510:	str	x25, [sp, #64]
 514:	adrp	x3, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 518:	add	x3, x3, #0x0
 51c:	mov	w2, #0x1ce                 	// #462
 520:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 524:	add	x1, x1, #0x0
 528:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 52c:	add	x0, x0, #0x0
 530:	bl	0 <__assert_fail>
 534:	stp	x23, x24, [sp, #48]
 538:	str	x25, [sp, #64]
 53c:	mov	x0, x3
 540:	ldp	x4, x5, [x0], #16
 544:	stp	x4, x5, [sp, #88]
 548:	ldr	x25, [x3, #16]
 54c:	ldr	x24, [x0, #8]
 550:	ldr	x23, [x0, #16]
 554:	str	xzr, [x0, #16]
 558:	str	xzr, [x0, #8]
 55c:	str	xzr, [x3, #16]
 560:	mov	x0, #0xe0                  	// #224
 564:	bl	0 <_Znwm>
 568:	mov	x20, x0
 56c:	ldp	x2, x3, [sp, #88]
 570:	stp	x2, x3, [sp, #128]
 574:	str	x25, [sp, #144]
 578:	str	x24, [sp, #152]
 57c:	str	x23, [sp, #160]
 580:	mov	w1, #0x1                   	// #1
 584:	strb	w1, [sp, #168]
 588:	add	x3, sp, #0x80
 58c:	mov	x1, x22
 590:	mov	x2, x21
 594:	bl	0 <_ZN4llvm7remarks16YAMLRemarkParserC2ENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEE>
 598:	ldrb	w0, [sp, #168]
 59c:	cbz	w0, 5ac <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x20c>
 5a0:	ldr	x0, [sp, #144]
 5a4:	cbz	x0, 5ac <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x20c>
 5a8:	bl	0 <_ZdlPv>
 5ac:	adrp	x1, 0 <_ZTVN4llvm7remarks22YAMLStrTabRemarkParserE>
 5b0:	ldr	x1, [x1]
 5b4:	add	x1, x1, #0x10
 5b8:	str	x1, [x20]
 5bc:	ldrb	w1, [x19, #8]
 5c0:	and	w1, w1, #0xfffffffe
 5c4:	orr	w1, w1, #0x2
 5c8:	strb	w1, [x19, #8]
 5cc:	str	x20, [x19]
 5d0:	ldp	x23, x24, [sp, #48]
 5d4:	ldr	x25, [sp, #64]
 5d8:	mov	x0, x19
 5dc:	ldp	x19, x20, [sp, #16]
 5e0:	ldp	x21, x22, [sp, #32]
 5e4:	ldp	x29, x30, [sp], #192
 5e8:	ret
 5ec:	bl	0 <_ZNSt3_V216generic_categoryEv>
 5f0:	mov	x1, x0
 5f4:	add	x8, sp, #0xb8
 5f8:	adrp	x2, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 5fc:	add	x2, x2, #0x0
 600:	mov	x0, #0x16                  	// #22
 604:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 608:	ldrb	w0, [x19, #8]
 60c:	orr	w0, w0, #0x3
 610:	strb	w0, [x19, #8]
 614:	ldr	x0, [sp, #184]
 618:	ands	x1, x0, #0xfffffffffffffffe
 61c:	cset	x0, ne  // ne = any
 620:	orr	x0, x0, x1
 624:	str	x0, [sp, #184]
 628:	ands	x0, x0, #0xfffffffffffffffe
 62c:	b.eq	638 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x298>  // b.none
 630:	str	x0, [x19]
 634:	b	5d8 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefENS0_17ParsedStringTableE+0x238>
 638:	stp	x23, x24, [sp, #48]
 63c:	str	x25, [sp, #64]
 640:	adrp	x3, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 644:	add	x3, x3, #0x0
 648:	mov	w2, #0x1ce                 	// #462
 64c:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 650:	add	x1, x1, #0x0
 654:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 658:	add	x0, x0, #0x0
 65c:	bl	0 <__assert_fail>

0000000000000660 <LLVMRemarkParserHasError>:
 660:	ldrb	w0, [x0, #40]
 664:	ret

0000000000000668 <LLVMRemarkParserGetErrorMessage>:
 668:	ldrb	w1, [x0, #40]
 66c:	cbz	w1, 678 <LLVMRemarkParserGetErrorMessage+0x10>
 670:	ldr	x0, [x0, #8]
 674:	ret
 678:	mov	x0, #0x0                   	// #0
 67c:	b	674 <LLVMRemarkParserGetErrorMessage+0xc>

0000000000000680 <LLVMRemarkParserDispose>:
 680:	cbz	x0, 6dc <LLVMRemarkParserDispose+0x5c>
 684:	stp	x29, x30, [sp, #-32]!
 688:	mov	x29, sp
 68c:	str	x19, [sp, #16]
 690:	mov	x19, x0
 694:	ldrb	w0, [x0, #40]
 698:	cbz	w0, 6b0 <LLVMRemarkParserDispose+0x30>
 69c:	ldr	x0, [x19, #8]
 6a0:	add	x1, x19, #0x18
 6a4:	cmp	x0, x1
 6a8:	b.eq	6b0 <LLVMRemarkParserDispose+0x30>  // b.none
 6ac:	bl	0 <_ZdlPv>
 6b0:	ldr	x0, [x19]
 6b4:	cbz	x0, 6c4 <LLVMRemarkParserDispose+0x44>
 6b8:	ldr	x1, [x0]
 6bc:	ldr	x1, [x1, #16]
 6c0:	blr	x1
 6c4:	mov	x1, #0x30                  	// #48
 6c8:	mov	x0, x19
 6cc:	bl	0 <_ZdlPvm>
 6d0:	ldr	x19, [sp, #16]
 6d4:	ldp	x29, x30, [sp], #32
 6d8:	ret
 6dc:	ret

00000000000006e0 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE>:
 6e0:	stp	x29, x30, [sp, #-112]!
 6e4:	mov	x29, sp
 6e8:	stp	x19, x20, [sp, #16]
 6ec:	stp	x23, x24, [sp, #48]
 6f0:	mov	x19, x0
 6f4:	stp	x1, x2, [sp, #80]
 6f8:	mov	x0, x1
 6fc:	mov	x1, x2
 700:	mov	x23, x19
 704:	stp	x0, x1, [x23], #16
 708:	str	xzr, [x19, #16]
 70c:	str	xzr, [x23, #8]
 710:	str	xzr, [x23, #16]
 714:	ldr	x0, [sp, #88]
 718:	cbz	x0, 7d8 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE+0xf8>
 71c:	stp	x21, x22, [sp, #32]
 720:	stp	x25, x26, [sp, #64]
 724:	add	x22, sp, #0x67
 728:	mov	x21, #0x1                   	// #1
 72c:	add	x20, sp, #0x50
 730:	add	x24, sp, #0x68
 734:	b	790 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE+0xb0>
 738:	ldr	x25, [sp, #88]
 73c:	ldr	x2, [sp, #80]
 740:	add	x0, x0, #0x1
 744:	cmp	x0, x25
 748:	csel	x1, x0, x25, ls  // ls = plast
 74c:	add	x26, x2, x1
 750:	sub	x25, x25, x1
 754:	mov	x3, x19
 758:	ldr	x0, [x3], #16
 75c:	sub	x0, x2, x0
 760:	str	x0, [sp, #104]
 764:	ldr	x1, [x3, #8]
 768:	ldr	x2, [x3, #16]
 76c:	cmp	x1, x2
 770:	b.eq	7c0 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE+0xe0>  // b.none
 774:	str	x0, [x1]
 778:	ldr	x0, [x3, #8]
 77c:	add	x0, x0, #0x8
 780:	str	x0, [x3, #8]
 784:	str	x26, [sp, #80]
 788:	str	x25, [sp, #88]
 78c:	cbz	x25, 7d0 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE+0xf0>
 790:	strb	wzr, [sp, #103]
 794:	mov	x3, #0x0                   	// #0
 798:	mov	x1, x22
 79c:	mov	x2, x21
 7a0:	mov	x0, x20
 7a4:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
 7a8:	cmn	x0, #0x1
 7ac:	b.ne	738 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE+0x58>  // b.any
 7b0:	ldr	x2, [sp, #80]
 7b4:	mov	x25, #0x0                   	// #0
 7b8:	mov	x26, #0x0                   	// #0
 7bc:	b	754 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE+0x74>
 7c0:	mov	x2, x24
 7c4:	mov	x0, x23
 7c8:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 7cc:	b	784 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE+0xa4>
 7d0:	ldp	x21, x22, [sp, #32]
 7d4:	ldp	x25, x26, [sp, #64]
 7d8:	ldp	x19, x20, [sp, #16]
 7dc:	ldp	x23, x24, [sp, #48]
 7e0:	ldp	x29, x30, [sp], #112
 7e4:	ret

00000000000007e8 <LLVMRemarkParserCreateBitstream>:
 7e8:	stp	x29, x30, [sp, #-64]!
 7ec:	mov	x29, sp
 7f0:	stp	x19, x20, [sp, #16]
 7f4:	stp	x21, x22, [sp, #32]
 7f8:	mov	x21, x0
 7fc:	mov	x20, x1
 800:	mov	x0, #0x30                  	// #48
 804:	bl	0 <_Znwm>
 808:	mov	x19, x0
 80c:	add	x22, sp, #0x30
 810:	mov	x8, x22
 814:	mov	x1, x21
 818:	mov	x2, x20
 81c:	mov	w0, #0x3                   	// #3
 820:	bl	1b8 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE>
 824:	mov	x8, x19
 828:	mov	x1, #0x0                   	// #0
 82c:	mov	x0, x22
 830:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 834:	ldrb	w0, [sp, #56]
 838:	tbnz	w0, #1, 874 <LLVMRemarkParserCreateBitstream+0x8c>
 83c:	ldrb	w0, [sp, #56]
 840:	tbnz	w0, #0, 87c <LLVMRemarkParserCreateBitstream+0x94>
 844:	ldr	x0, [sp, #48]
 848:	cbz	x0, 858 <LLVMRemarkParserCreateBitstream+0x70>
 84c:	ldr	x1, [x0]
 850:	ldr	x1, [x1, #16]
 854:	blr	x1
 858:	strb	wzr, [x19, #8]
 85c:	strb	wzr, [x19, #40]
 860:	mov	x0, x19
 864:	ldp	x19, x20, [sp, #16]
 868:	ldp	x21, x22, [sp, #32]
 86c:	ldp	x29, x30, [sp], #64
 870:	ret
 874:	add	x0, sp, #0x30
 878:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 87c:	ldr	x0, [sp, #48]
 880:	cbz	x0, 858 <LLVMRemarkParserCreateBitstream+0x70>
 884:	ldr	x1, [x0]
 888:	ldr	x1, [x1, #8]
 88c:	blr	x1
 890:	b	858 <LLVMRemarkParserCreateBitstream+0x70>

0000000000000894 <LLVMRemarkParserCreateYAML>:
 894:	stp	x29, x30, [sp, #-64]!
 898:	mov	x29, sp
 89c:	stp	x19, x20, [sp, #16]
 8a0:	stp	x21, x22, [sp, #32]
 8a4:	mov	x21, x0
 8a8:	mov	x20, x1
 8ac:	mov	x0, #0x30                  	// #48
 8b0:	bl	0 <_Znwm>
 8b4:	mov	x19, x0
 8b8:	add	x22, sp, #0x30
 8bc:	mov	x8, x22
 8c0:	mov	x1, x21
 8c4:	mov	x2, x20
 8c8:	mov	w0, #0x1                   	// #1
 8cc:	bl	1b8 <_ZN4llvm7remarks18createRemarkParserENS0_6FormatENS_9StringRefE>
 8d0:	mov	x8, x19
 8d4:	mov	x1, #0x0                   	// #0
 8d8:	mov	x0, x22
 8dc:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 8e0:	ldrb	w0, [sp, #56]
 8e4:	tbnz	w0, #1, 920 <LLVMRemarkParserCreateYAML+0x8c>
 8e8:	ldrb	w0, [sp, #56]
 8ec:	tbnz	w0, #0, 928 <LLVMRemarkParserCreateYAML+0x94>
 8f0:	ldr	x0, [sp, #48]
 8f4:	cbz	x0, 904 <LLVMRemarkParserCreateYAML+0x70>
 8f8:	ldr	x1, [x0]
 8fc:	ldr	x1, [x1, #16]
 900:	blr	x1
 904:	strb	wzr, [x19, #8]
 908:	strb	wzr, [x19, #40]
 90c:	mov	x0, x19
 910:	ldp	x19, x20, [sp, #16]
 914:	ldp	x21, x22, [sp, #32]
 918:	ldp	x29, x30, [sp], #64
 91c:	ret
 920:	add	x0, sp, #0x30
 924:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 928:	ldr	x0, [sp, #48]
 92c:	cbz	x0, 904 <LLVMRemarkParserCreateYAML+0x70>
 930:	ldr	x1, [x0]
 934:	ldr	x1, [x1, #8]
 938:	blr	x1
 93c:	b	904 <LLVMRemarkParserCreateYAML+0x70>

0000000000000940 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE>:
 940:	stp	x29, x30, [sp, #-160]!
 944:	mov	x29, sp
 948:	str	x19, [sp, #16]
 94c:	mov	x19, x8
 950:	mov	w5, w0
 954:	mov	x0, x1
 958:	mov	x1, x2
 95c:	cmp	w5, #0x2
 960:	b.gt	9c8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x88>
 964:	cmp	w5, #0x0
 968:	b.gt	a44 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x104>
 96c:	cbnz	w5, b68 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x228>
 970:	bl	0 <_ZNSt3_V216generic_categoryEv>
 974:	mov	x1, x0
 978:	add	x8, sp, #0x98
 97c:	adrp	x2, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 980:	add	x2, x2, #0x0
 984:	mov	x0, #0x16                  	// #22
 988:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 98c:	ldrb	w0, [x19, #8]
 990:	orr	w0, w0, #0x3
 994:	strb	w0, [x19, #8]
 998:	ldr	x0, [sp, #152]
 99c:	ands	x1, x0, #0xfffffffffffffffe
 9a0:	cset	x0, ne  // ne = any
 9a4:	orr	x0, x0, x1
 9a8:	str	x0, [sp, #152]
 9ac:	ands	x0, x0, #0xfffffffffffffffe
 9b0:	b.eq	b48 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x208>  // b.none
 9b4:	str	x0, [x19]
 9b8:	mov	x0, x19
 9bc:	ldr	x19, [sp, #16]
 9c0:	ldp	x29, x30, [sp], #160
 9c4:	ret
 9c8:	cmp	w5, #0x3
 9cc:	b.ne	b68 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x228>  // b.any
 9d0:	strb	wzr, [sp, #72]
 9d4:	strb	wzr, [sp, #112]
 9d8:	ldrb	w2, [x3, #40]
 9dc:	cbnz	w2, b00 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x1c0>
 9e0:	ldp	x2, x3, [x4]
 9e4:	stp	x2, x3, [sp, #32]
 9e8:	ldr	x2, [x4, #16]
 9ec:	str	x2, [sp, #48]
 9f0:	add	x8, sp, #0x88
 9f4:	add	x3, sp, #0x20
 9f8:	add	x2, sp, #0x48
 9fc:	bl	0 <_ZN4llvm7remarks29createBitstreamParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE>
 a00:	ldrb	w0, [sp, #144]
 a04:	and	w2, w0, #0x1
 a08:	ldrb	w1, [x19, #8]
 a0c:	bfxil	w1, w2, #0, #1
 a10:	orr	w1, w1, #0x2
 a14:	strb	w1, [x19, #8]
 a18:	and	w0, w0, #0xfffffffd
 a1c:	strb	w0, [sp, #144]
 a20:	cbnz	w2, b3c <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x1fc>
 a24:	ldr	x0, [sp, #136]
 a28:	str	x0, [x19]
 a2c:	ldrb	w0, [sp, #112]
 a30:	cbz	w0, 9b8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x78>
 a34:	ldr	x0, [sp, #88]
 a38:	cbz	x0, 9b8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x78>
 a3c:	bl	0 <_ZdlPv>
 a40:	b	9b8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x78>
 a44:	strb	wzr, [sp, #72]
 a48:	strb	wzr, [sp, #112]
 a4c:	ldrb	w2, [x3, #40]
 a50:	cbnz	w2, ab8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x178>
 a54:	ldp	x2, x3, [x4]
 a58:	stp	x2, x3, [sp, #32]
 a5c:	ldr	x2, [x4, #16]
 a60:	str	x2, [sp, #48]
 a64:	add	x8, sp, #0x78
 a68:	add	x3, sp, #0x20
 a6c:	add	x2, sp, #0x48
 a70:	bl	0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE>
 a74:	ldrb	w0, [sp, #128]
 a78:	and	w2, w0, #0x1
 a7c:	ldrb	w1, [x19, #8]
 a80:	bfxil	w1, w2, #0, #1
 a84:	orr	w1, w1, #0x2
 a88:	strb	w1, [x19, #8]
 a8c:	and	w0, w0, #0xfffffffd
 a90:	strb	w0, [sp, #128]
 a94:	cbnz	w2, af4 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x1b4>
 a98:	ldr	x0, [sp, #120]
 a9c:	str	x0, [x19]
 aa0:	ldrb	w0, [sp, #112]
 aa4:	cbz	w0, 9b8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x78>
 aa8:	ldr	x0, [sp, #88]
 aac:	cbz	x0, 9b8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x78>
 ab0:	bl	0 <_ZdlPv>
 ab4:	b	9b8 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x78>
 ab8:	mov	x2, x3
 abc:	ldp	x6, x7, [x2], #16
 ac0:	stp	x6, x7, [sp, #72]
 ac4:	ldr	x5, [x3, #16]
 ac8:	str	x5, [sp, #88]
 acc:	ldr	x5, [x2, #8]
 ad0:	str	x5, [sp, #96]
 ad4:	ldr	x5, [x2, #16]
 ad8:	str	x5, [sp, #104]
 adc:	str	xzr, [x2, #16]
 ae0:	str	xzr, [x2, #8]
 ae4:	str	xzr, [x3, #16]
 ae8:	mov	w2, #0x1                   	// #1
 aec:	strb	w2, [sp, #112]
 af0:	b	a54 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x114>
 af4:	ldr	x0, [sp, #120]
 af8:	str	x0, [x19]
 afc:	b	aa0 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0x160>
 b00:	mov	x2, x3
 b04:	ldp	x6, x7, [x2], #16
 b08:	stp	x6, x7, [sp, #72]
 b0c:	ldr	x5, [x3, #16]
 b10:	str	x5, [sp, #88]
 b14:	ldr	x5, [x2, #8]
 b18:	str	x5, [sp, #96]
 b1c:	ldr	x5, [x2, #16]
 b20:	str	x5, [sp, #104]
 b24:	str	xzr, [x2, #16]
 b28:	str	xzr, [x2, #8]
 b2c:	str	xzr, [x3, #16]
 b30:	mov	w2, #0x1                   	// #1
 b34:	strb	w2, [sp, #112]
 b38:	b	9e0 <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0xa0>
 b3c:	ldr	x0, [sp, #136]
 b40:	str	x0, [x19]
 b44:	b	a2c <_ZN4llvm7remarks26createRemarkParserFromMetaENS0_6FormatENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS3_IS2_EE+0xec>
 b48:	adrp	x3, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 b4c:	add	x3, x3, #0x0
 b50:	mov	w2, #0x1ce                 	// #462
 b54:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 b58:	add	x1, x1, #0x0
 b5c:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 b60:	add	x0, x0, #0x0
 b64:	bl	0 <__assert_fail>
 b68:	mov	w2, #0x6a                  	// #106
 b6c:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 b70:	add	x1, x1, #0x0
 b74:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 b78:	add	x0, x0, #0x0
 b7c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000b80 <LLVMRemarkParserGetNext>:
 b80:	stp	x29, x30, [sp, #-272]!
 b84:	mov	x29, sp
 b88:	stp	x19, x20, [sp, #16]
 b8c:	mov	x19, x0
 b90:	ldr	x0, [x0]
 b94:	ldr	x1, [x0]
 b98:	add	x8, sp, #0xc8
 b9c:	ldr	x1, [x1]
 ba0:	blr	x1
 ba4:	ldrb	w1, [sp, #208]
 ba8:	and	w1, w1, #0xfffffffd
 bac:	strb	w1, [sp, #208]
 bb0:	and	w2, w1, #0x1
 bb4:	tbz	w1, #0, c20 <LLVMRemarkParserGetNext+0xa0>
 bb8:	ldr	x0, [sp, #200]
 bbc:	str	xzr, [sp, #200]
 bc0:	orr	x0, x0, #0x1
 bc4:	str	x0, [sp, #80]
 bc8:	ldr	x1, [sp, #80]
 bcc:	ands	x0, x1, #0xfffffffffffffffe
 bd0:	cset	x1, ne  // ne = any
 bd4:	orr	x1, x1, x0
 bd8:	str	x1, [sp, #80]
 bdc:	ands	x0, x1, #0xfffffffffffffffe
 be0:	b.ne	c2c <LLVMRemarkParserGetNext+0xac>  // b.any
 be4:	tbnz	w1, #0, f00 <LLVMRemarkParserGetNext+0x380>
 be8:	cbnz	w2, f14 <LLVMRemarkParserGetNext+0x394>
 bec:	ldr	x19, [sp, #200]
 bf0:	str	xzr, [sp, #200]
 bf4:	ldr	x20, [sp, #200]
 bf8:	cbz	x20, ec8 <LLVMRemarkParserGetNext+0x348>
 bfc:	ldr	x0, [x20, #104]
 c00:	add	x1, x20, #0x78
 c04:	cmp	x0, x1
 c08:	b.eq	c10 <LLVMRemarkParserGetNext+0x90>  // b.none
 c0c:	bl	0 <free>
 c10:	mov	x1, #0x1b8                 	// #440
 c14:	mov	x0, x20
 c18:	bl	0 <_ZdlPvm>
 c1c:	b	ec8 <LLVMRemarkParserGetNext+0x348>
 c20:	mov	x0, #0x1                   	// #1
 c24:	str	x0, [sp, #80]
 c28:	b	bc8 <LLVMRemarkParserGetNext+0x48>
 c2c:	ldr	x1, [x0]
 c30:	ldr	x2, [x1, #48]
 c34:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 c38:	ldr	x1, [x1]
 c3c:	blr	x2
 c40:	and	w0, w0, #0xff
 c44:	cbnz	w0, e6c <LLVMRemarkParserGetNext+0x2ec>
 c48:	ldr	x0, [sp, #80]
 c4c:	orr	x0, x0, #0x1
 c50:	str	xzr, [sp, #80]
 c54:	str	xzr, [sp, #224]
 c58:	add	x1, sp, #0x78
 c5c:	add	x2, sp, #0x88
 c60:	str	x2, [sp, #120]
 c64:	str	wzr, [sp, #128]
 c68:	mov	w2, #0x2                   	// #2
 c6c:	str	w2, [sp, #132]
 c70:	str	x0, [sp, #248]
 c74:	str	xzr, [sp, #232]
 c78:	str	x1, [sp, #240]
 c7c:	add	x1, sp, #0xf0
 c80:	add	x0, sp, #0xf8
 c84:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 c88:	ldr	x0, [sp, #248]
 c8c:	cbnz	x0, e04 <LLVMRemarkParserGetNext+0x284>
 c90:	stp	x21, x22, [sp, #32]
 c94:	stp	x23, x24, [sp, #48]
 c98:	ldr	x22, [sp, #120]
 c9c:	ldr	w0, [sp, #128]
 ca0:	lsl	x0, x0, #5
 ca4:	add	x21, x22, x0
 ca8:	add	x1, sp, #0x68
 cac:	str	x1, [sp, #88]
 cb0:	str	xzr, [sp, #96]
 cb4:	strb	wzr, [sp, #104]
 cb8:	cmp	x22, x21
 cbc:	b.eq	d68 <LLVMRemarkParserGetNext+0x1e8>  // b.none
 cc0:	asr	x2, x0, #5
 cc4:	sub	x2, x2, #0x1
 cc8:	ldr	x3, [x22, #8]
 ccc:	mov	x0, x22
 cd0:	add	x0, x0, #0x20
 cd4:	cmp	x21, x0
 cd8:	b.ne	cd0 <LLVMRemarkParserGetNext+0x150>  // b.any
 cdc:	sub	x1, x21, x22
 ce0:	sub	x1, x1, #0x20
 ce4:	lsr	x1, x1, #5
 ce8:	add	x2, x2, x3
 cec:	add	x23, sp, #0x58
 cf0:	madd	x1, x1, x3, x2
 cf4:	mov	x0, x23
 cf8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 cfc:	mov	x20, x22
 d00:	ldr	x2, [x22, #8]
 d04:	ldr	x1, [x20], #32
 d08:	mov	x0, x23
 d0c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 d10:	cmp	x21, x20
 d14:	b.eq	d68 <LLVMRemarkParserGetNext+0x1e8>  // b.none
 d18:	str	x25, [sp, #64]
 d1c:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
 d20:	adrp	x23, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 d24:	add	x23, x23, #0x0
 d28:	add	x22, sp, #0x58
 d2c:	mov	x24, #0x1                   	// #1
 d30:	ldr	x0, [sp, #96]
 d34:	cmp	x0, x25
 d38:	b.eq	e18 <LLVMRemarkParserGetNext+0x298>  // b.none
 d3c:	mov	x2, x24
 d40:	mov	x1, x23
 d44:	mov	x0, x22
 d48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 d4c:	ldr	x2, [x20, #8]
 d50:	ldr	x1, [x20], #32
 d54:	mov	x0, x22
 d58:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 d5c:	cmp	x21, x20
 d60:	b.ne	d30 <LLVMRemarkParserGetNext+0x1b0>  // b.any
 d64:	ldr	x25, [sp, #64]
 d68:	ldr	x21, [sp, #120]
 d6c:	ldr	w20, [sp, #128]
 d70:	add	x20, x21, x20, lsl #5
 d74:	cmp	x21, x20
 d78:	b.ne	e2c <LLVMRemarkParserGetNext+0x2ac>  // b.any
 d7c:	ldr	x0, [sp, #120]
 d80:	add	x1, sp, #0x88
 d84:	cmp	x0, x1
 d88:	b.eq	d90 <LLVMRemarkParserGetNext+0x210>  // b.none
 d8c:	bl	0 <free>
 d90:	ldrb	w0, [x19, #40]
 d94:	cbz	w0, db0 <LLVMRemarkParserGetNext+0x230>
 d98:	ldr	x0, [x19, #8]
 d9c:	add	x1, x19, #0x18
 da0:	cmp	x0, x1
 da4:	b.eq	dac <LLVMRemarkParserGetNext+0x22c>  // b.none
 da8:	bl	0 <_ZdlPv>
 dac:	strb	wzr, [x19, #40]
 db0:	add	x0, x19, #0x18
 db4:	str	x0, [x19, #8]
 db8:	ldr	x0, [sp, #88]
 dbc:	add	x1, sp, #0x68
 dc0:	cmp	x0, x1
 dc4:	b.eq	e48 <LLVMRemarkParserGetNext+0x2c8>  // b.none
 dc8:	str	x0, [x19, #8]
 dcc:	ldr	x0, [sp, #104]
 dd0:	str	x0, [x19, #24]
 dd4:	add	x19, x19, #0x8
 dd8:	ldr	x0, [sp, #96]
 ddc:	str	x0, [x19, #8]
 de0:	mov	w0, #0x1                   	// #1
 de4:	strb	w0, [x19, #32]
 de8:	ldr	x0, [sp, #232]
 dec:	cbnz	x0, e54 <LLVMRemarkParserGetNext+0x2d4>
 df0:	ldr	x0, [sp, #224]
 df4:	cbnz	x0, e60 <LLVMRemarkParserGetNext+0x2e0>
 df8:	ldp	x21, x22, [sp, #32]
 dfc:	ldp	x23, x24, [sp, #48]
 e00:	b	e9c <LLVMRemarkParserGetNext+0x31c>
 e04:	stp	x21, x22, [sp, #32]
 e08:	stp	x23, x24, [sp, #48]
 e0c:	str	x25, [sp, #64]
 e10:	add	x0, sp, #0xf8
 e14:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 e18:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 e1c:	add	x0, x0, #0x0
 e20:	bl	0 <_ZSt20__throw_length_errorPKc>
 e24:	cmp	x21, x20
 e28:	b.eq	d7c <LLVMRemarkParserGetNext+0x1fc>  // b.none
 e2c:	sub	x20, x20, #0x20
 e30:	mov	x1, x20
 e34:	ldr	x0, [x1], #16
 e38:	cmp	x0, x1
 e3c:	b.eq	e24 <LLVMRemarkParserGetNext+0x2a4>  // b.none
 e40:	bl	0 <_ZdlPv>
 e44:	b	e24 <LLVMRemarkParserGetNext+0x2a4>
 e48:	ldp	x0, x1, [sp, #104]
 e4c:	stp	x0, x1, [x19, #24]
 e50:	b	dd4 <LLVMRemarkParserGetNext+0x254>
 e54:	str	x25, [sp, #64]
 e58:	add	x0, sp, #0xe8
 e5c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 e60:	str	x25, [sp, #64]
 e64:	add	x0, sp, #0xe0
 e68:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 e6c:	ldr	x0, [sp, #80]
 e70:	orr	x0, x0, #0x1
 e74:	str	xzr, [sp, #80]
 e78:	str	x0, [sp, #264]
 e7c:	str	xzr, [sp, #216]
 e80:	add	x1, sp, #0x100
 e84:	add	x0, sp, #0x108
 e88:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 e8c:	ldr	x0, [sp, #264]
 e90:	cbnz	x0, ed8 <LLVMRemarkParserGetNext+0x358>
 e94:	ldr	x0, [sp, #216]
 e98:	cbnz	x0, eec <LLVMRemarkParserGetNext+0x36c>
 e9c:	ldr	x19, [sp, #80]
 ea0:	cbnz	x19, f40 <LLVMRemarkParserGetNext+0x3c0>
 ea4:	ldrb	w0, [sp, #208]
 ea8:	tbnz	w0, #1, f54 <LLVMRemarkParserGetNext+0x3d4>
 eac:	ldrb	w0, [sp, #208]
 eb0:	tbz	w0, #0, bf4 <LLVMRemarkParserGetNext+0x74>
 eb4:	ldr	x0, [sp, #200]
 eb8:	cbz	x0, f68 <LLVMRemarkParserGetNext+0x3e8>
 ebc:	ldr	x1, [x0]
 ec0:	ldr	x1, [x1, #8]
 ec4:	blr	x1
 ec8:	mov	x0, x19
 ecc:	ldp	x19, x20, [sp, #16]
 ed0:	ldp	x29, x30, [sp], #272
 ed4:	ret
 ed8:	stp	x21, x22, [sp, #32]
 edc:	stp	x23, x24, [sp, #48]
 ee0:	str	x25, [sp, #64]
 ee4:	add	x0, sp, #0x108
 ee8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 eec:	stp	x21, x22, [sp, #32]
 ef0:	stp	x23, x24, [sp, #48]
 ef4:	str	x25, [sp, #64]
 ef8:	add	x0, sp, #0xd8
 efc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 f00:	stp	x21, x22, [sp, #32]
 f04:	stp	x23, x24, [sp, #48]
 f08:	str	x25, [sp, #64]
 f0c:	add	x0, sp, #0x50
 f10:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 f14:	stp	x21, x22, [sp, #32]
 f18:	stp	x23, x24, [sp, #48]
 f1c:	str	x25, [sp, #64]
 f20:	adrp	x3, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 f24:	add	x3, x3, #0x0
 f28:	mov	w2, #0x272                 	// #626
 f2c:	adrp	x1, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 f30:	add	x1, x1, #0x0
 f34:	adrp	x0, 0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 f38:	add	x0, x0, #0x0
 f3c:	bl	0 <__assert_fail>
 f40:	stp	x21, x22, [sp, #32]
 f44:	stp	x23, x24, [sp, #48]
 f48:	str	x25, [sp, #64]
 f4c:	add	x0, sp, #0x50
 f50:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 f54:	stp	x21, x22, [sp, #32]
 f58:	stp	x23, x24, [sp, #48]
 f5c:	str	x25, [sp, #64]
 f60:	add	x0, sp, #0xc8
 f64:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 f68:	mov	x19, x0
 f6c:	b	ec8 <LLVMRemarkParserGetNext+0x348>

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	x4, [x5, #16]
  18:	ldr	x3, [x5, #24]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x1]
  14:	ands	x0, x0, #0xfffffffffffffffe
  18:	b.eq	3c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x3c>  // b.none
  1c:	ldr	x1, [x0]
  20:	ldr	x2, [x1, #16]
  24:	mov	x1, x19
  28:	blr	x2
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	ldr	x1, [x19, #24]
  40:	ldr	x0, [x19, #16]
  44:	sub	x0, x0, x1
  48:	cmp	x0, #0x6
  4c:	b.ls	78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x78>  // b.plast
  50:	adrp	x0, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	ldr	w2, [x0]
  5c:	str	w2, [x1]
  60:	ldur	w0, [x0, #3]
  64:	stur	w0, [x1, #3]
  68:	ldr	x0, [x19, #24]
  6c:	add	x0, x0, #0x7
  70:	str	x0, [x19, #24]
  74:	b	2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x2c>
  78:	mov	x2, #0x7                   	// #7
  7c:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  80:	add	x1, x1, #0x0
  84:	mov	x0, x19
  88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  8c:	b	2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x2c>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x0
  14:	str	x1, [sp, #72]
  18:	mov	x19, x1
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	c0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xc0>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	add	x2, x2, #0x2
  30:	orr	x2, x2, x2, lsr #1
  34:	orr	x2, x2, x2, lsr #2
  38:	orr	x2, x2, x2, lsr #4
  3c:	orr	x2, x2, x2, lsr #8
  40:	orr	x0, x2, x2, lsr #16
  44:	orr	x2, x0, x2, lsr #32
  48:	add	x2, x2, #0x1
  4c:	str	x2, [sp, #80]
  50:	cmp	x19, x2
  54:	add	x0, sp, #0x50
  58:	add	x1, sp, #0x48
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #88]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	add	x1, sp, #0x58
  74:	csel	x0, x1, x0, hi  // hi = pmore
  78:	ldr	x22, [x0]
  7c:	str	x22, [sp, #80]
  80:	lsl	x19, x22, #5
  84:	mov	x0, x19
  88:	bl	0 <malloc>
  8c:	mov	x21, x0
  90:	cbz	x0, d4 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xd4>
  94:	ldr	x0, [x20]
  98:	ldr	w5, [x20, #8]
  9c:	add	x5, x0, x5, lsl #5
  a0:	cmp	x5, x0
  a4:	b.eq	194 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x194>  // b.none
  a8:	str	x23, [sp, #48]
  ac:	add	x3, x0, #0x10
  b0:	sub	x5, x5, x0
  b4:	add	x5, x21, x5
  b8:	mov	x1, x21
  bc:	b	128 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x128>
  c0:	mov	w1, #0x1                   	// #1
  c4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>
  c8:	add	x0, x0, #0x0
  cc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  d0:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x28>
  d4:	cbnz	x19, e8 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xe8>
  d8:	mov	x0, #0x1                   	// #1
  dc:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>
  e0:	mov	x21, x0
  e4:	b	94 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x94>
  e8:	mov	w1, #0x1                   	// #1
  ec:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  f8:	b	94 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x94>
  fc:	ldp	x6, x7, [x4]
 100:	stp	x6, x7, [x1, #16]
 104:	ldur	x0, [x2, #-8]
 108:	str	x0, [x1, #8]
 10c:	stur	x2, [x2, #-16]
 110:	stur	xzr, [x2, #-8]
 114:	strb	wzr, [x2]
 118:	add	x1, x1, #0x20
 11c:	add	x3, x3, #0x20
 120:	cmp	x1, x5
 124:	b.eq	150 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x150>  // b.none
 128:	add	x0, x1, #0x10
 12c:	str	x0, [x1]
 130:	mov	x2, x3
 134:	ldur	x4, [x3, #-16]
 138:	cmp	x3, x4
 13c:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0xfc>  // b.none
 140:	str	x4, [x1]
 144:	ldr	x0, [x3]
 148:	str	x0, [x1, #16]
 14c:	b	104 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x104>
 150:	ldr	x23, [x20]
 154:	ldr	w19, [x20, #8]
 158:	add	x19, x23, x19, lsl #5
 15c:	cmp	x19, x23
 160:	b.ne	174 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x174>  // b.any
 164:	ldr	x23, [sp, #48]
 168:	b	194 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x194>
 16c:	cmp	x19, x23
 170:	b.eq	190 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x190>  // b.none
 174:	sub	x19, x19, #0x20
 178:	mov	x1, x19
 17c:	ldr	x0, [x1], #16
 180:	cmp	x0, x1
 184:	b.eq	16c <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x16c>  // b.none
 188:	bl	0 <_ZdlPv>
 18c:	b	16c <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x16c>
 190:	ldr	x23, [sp, #48]
 194:	mov	x1, x20
 198:	ldr	x0, [x1], #16
 19c:	cmp	x0, x1
 1a0:	b.eq	1a8 <_ZN4llvm23SmallVectorTemplateBaseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4growEm+0x1a8>  // b.none
 1a4:	bl	0 <free>
 1a8:	str	x21, [x20]
 1ac:	str	w22, [x20, #12]
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #96
 1bc:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x24, x0
  20:	mov	x19, x2
  24:	ldr	x21, [x0, #8]
  28:	ldr	x25, [x0]
  2c:	sub	x0, x21, x25
  30:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  34:	cmp	x2, x0, asr #3
  38:	b.eq	9c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.none
  3c:	mov	x22, x1
  40:	mov	x27, x1
  44:	asr	x1, x0, #3
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	150 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>  // b.hs, b.nlast
  58:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  5c:	cmp	x0, x26
  60:	csel	x26, x0, x26, ls  // ls = plast
  64:	sub	x20, x22, x25
  68:	mov	x23, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  70:	lsl	x0, x26, #3
  74:	bl	0 <_Znwm>
  78:	mov	x23, x0
  7c:	ldr	x0, [x19]
  80:	str	xzr, [x19]
  84:	str	x0, [x23, x20]
  88:	cmp	x22, x25
  8c:	b.eq	148 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>  // b.none
  90:	mov	x20, x23
  94:	mov	x19, x25
  98:	b	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  9c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <_ZSt20__throw_length_errorPKc>
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x27, x19
  b4:	b.eq	dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>  // b.none
  b8:	ldr	x0, [x19]
  bc:	str	xzr, [x19]
  c0:	str	x0, [x20]
  c4:	ldr	x0, [x19]
  c8:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  cc:	ldr	x1, [x0]
  d0:	ldr	x1, [x1, #8]
  d4:	blr	x1
  d8:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  dc:	sub	x19, x22, x25
  e0:	add	x19, x23, x19
  e4:	add	x19, x19, #0x8
  e8:	cmp	x22, x21
  ec:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.none
  f0:	mov	x2, x22
  f4:	mov	x0, x19
  f8:	ldr	x1, [x2], #8
  fc:	str	x1, [x0], #8
 100:	cmp	x2, x21
 104:	b.ne	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.any
 108:	sub	x21, x21, x22
 10c:	add	x19, x19, x21
 110:	cbz	x25, 11c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x11c>
 114:	mov	x0, x25
 118:	bl	0 <_ZdlPv>
 11c:	str	x23, [x24]
 120:	str	x19, [x24, #8]
 124:	add	x23, x23, x26, lsl #3
 128:	str	x23, [x24, #16]
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldp	x25, x26, [sp, #64]
 13c:	ldr	x27, [sp, #80]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	mov	x19, x23
 14c:	b	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>
 150:	sub	x20, x22, x25
 154:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
 158:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	30 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x30>  // b.none
  14:	ldr	x3, [x2]
  18:	str	xzr, [x2]
  1c:	str	x3, [x1]
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x8
  28:	str	x1, [x0, #8]
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>
  3c:	ldp	x29, x30, [sp], #16
  40:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x19, x0
  18:	mov	x21, x1
  1c:	mov	x22, x2
  20:	ldr	x23, [x0]
  24:	sub	x23, x1, x23
  28:	ldr	x0, [x0, #8]
  2c:	ldr	x1, [x19, #16]
  30:	cmp	x0, x1
  34:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>  // b.none
  38:	cmp	x0, x21
  3c:	b.eq	90 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x90>  // b.none
  40:	ldur	x1, [x0, #-8]
  44:	stur	xzr, [x0, #-8]
  48:	str	x1, [x0]
  4c:	ldr	x20, [x19, #8]
  50:	add	x0, x20, #0x8
  54:	str	x0, [x19, #8]
  58:	sub	x0, x20, #0x8
  5c:	sub	x0, x0, x21
  60:	asr	x24, x0, #3
  64:	cmp	x0, #0x0
  68:	b.gt	d0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xd0>
  6c:	ldr	x1, [x22]
  70:	str	xzr, [x22]
  74:	ldr	x0, [x21]
  78:	str	x1, [x21]
  7c:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>
  80:	ldr	x1, [x0]
  84:	ldr	x1, [x1, #8]
  88:	blr	x1
  8c:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>
  90:	ldr	x1, [x2]
  94:	str	xzr, [x2]
  98:	str	x1, [x0]
  9c:	ldr	x0, [x19, #8]
  a0:	add	x0, x0, #0x8
  a4:	str	x0, [x19, #8]
  a8:	ldr	x0, [x19]
  ac:	add	x0, x0, x23
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x21, x22, [sp, #32]
  b8:	ldp	x23, x24, [sp, #48]
  bc:	ldp	x29, x30, [sp], #64
  c0:	ret
  c4:	sub	x24, x24, #0x1
  c8:	cmp	x24, #0x0
  cc:	b.le	6c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x6c>
  d0:	sub	x20, x20, #0x8
  d4:	ldur	x1, [x20, #-8]
  d8:	stur	xzr, [x20, #-8]
  dc:	ldr	x0, [x20]
  e0:	str	x1, [x20]
  e4:	cbz	x0, c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xc4>
  e8:	ldr	x1, [x0]
  ec:	ldr	x1, [x1, #8]
  f0:	blr	x1
  f4:	b	c4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xc4>
  f8:	mov	x1, x21
  fc:	mov	x0, x19
 100:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
 104:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x0
  18:	mov	x22, x1
  1c:	ldr	x0, [x0]
  20:	ldr	x2, [x0]
  24:	ldr	x2, [x2, #48]
  28:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  2c:	ldr	x1, [x1]
  30:	blr	x2
  34:	and	w0, w0, #0xff
  38:	cbnz	w0, 60 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x60>
  3c:	ldr	x0, [x19]
  40:	str	xzr, [x19]
  44:	orr	x0, x0, #0x1
  48:	str	x0, [x20]
  4c:	mov	x0, x20
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x29, x30, [sp], #80
  5c:	ret
  60:	ldr	x21, [x19]
  64:	str	xzr, [x19]
  68:	ldr	x0, [x21]
  6c:	ldr	x2, [x0, #48]
  70:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x1, [x1]
  78:	mov	x0, x21
  7c:	blr	x2
  80:	and	w0, w0, #0xff
  84:	cbz	w0, 138 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x138>
  88:	ldr	x19, [x22]
  8c:	ldr	x0, [x21]
  90:	add	x8, sp, #0x30
  94:	ldr	x1, [x0, #24]
  98:	mov	x0, x21
  9c:	blr	x1
  a0:	ldr	w1, [x19, #8]
  a4:	ldr	w0, [x19, #12]
  a8:	cmp	w1, w0
  ac:	b.cs	158 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x158>  // b.hs, b.nlast
  b0:	ldr	w0, [x19, #8]
  b4:	lsl	x0, x0, #5
  b8:	ldr	x2, [x19]
  bc:	add	x1, x2, x0
  c0:	add	x3, x1, #0x10
  c4:	str	x3, [x2, x0]
  c8:	ldr	x3, [sp, #48]
  cc:	add	x4, sp, #0x40
  d0:	cmp	x3, x4
  d4:	b.eq	168 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x168>  // b.none
  d8:	str	x3, [x2, x0]
  dc:	ldr	x0, [sp, #64]
  e0:	str	x0, [x1, #16]
  e4:	ldr	x0, [sp, #56]
  e8:	str	x0, [x1, #8]
  ec:	add	x0, sp, #0x40
  f0:	str	x0, [sp, #48]
  f4:	str	xzr, [sp, #56]
  f8:	strb	wzr, [sp, #64]
  fc:	ldr	w0, [x19, #8]
 100:	mov	w1, w0
 104:	add	x1, x1, #0x1
 108:	ldr	w2, [x19, #12]
 10c:	cmp	x1, x2
 110:	b.hi	174 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x174>  // b.pmore
 114:	add	w0, w0, #0x1
 118:	str	w0, [x19, #8]
 11c:	mov	x0, #0x1                   	// #1
 120:	str	x0, [x20]
 124:	ldr	x0, [x21]
 128:	ldr	x1, [x0, #8]
 12c:	mov	x0, x21
 130:	blr	x1
 134:	b	4c <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x4c>
 138:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x329                 	// #809
 144:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 148:	add	x1, x1, #0x0
 14c:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 150:	add	x0, x0, #0x0
 154:	bl	0 <__assert_fail>
 158:	mov	x1, #0x0                   	// #0
 15c:	mov	x0, x19
 160:	bl	0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 164:	b	b0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xb0>
 168:	ldp	x2, x3, [sp, #64]
 16c:	stp	x2, x3, [x1, #16]
 170:	b	e4 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xe4>
 174:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x43                  	// #67
 180:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 184:	add	x1, x1, #0x0
 188:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
 18c:	add	x0, x0, #0x0
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x21, x1
  18:	ldr	x19, [x0]
  1c:	ands	x1, x19, #0xfffffffffffffffe
  20:	cset	x19, ne  // ne = any
  24:	orr	x19, x19, x1
  28:	str	x19, [x0]
  2c:	ands	x19, x19, #0xfffffffffffffffe
  30:	b.eq	1a4 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1a4>  // b.none
  34:	str	xzr, [x0]
  38:	ldr	x0, [x19]
  3c:	ldr	x2, [x0, #48]
  40:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  44:	ldr	x1, [x1]
  48:	mov	x0, x19
  4c:	blr	x2
  50:	and	w0, w0, #0xff
  54:	cbz	w0, 3f8 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3f8>
  58:	stp	x23, x24, [sp, #48]
  5c:	mov	x0, #0x1                   	// #1
  60:	str	x0, [sp, #120]
  64:	ldr	x22, [x19, #8]
  68:	ldr	x24, [x19, #16]
  6c:	cmp	x24, x22
  70:	b.eq	214 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x214>  // b.none
  74:	stp	x25, x26, [sp, #64]
  78:	stp	x27, x28, [sp, #80]
  7c:	add	x26, sp, #0x90
  80:	add	x25, sp, #0x88
  84:	adrp	x23, 0 <_ZTVN4llvm9ErrorListE>
  88:	ldr	x23, [x23]
  8c:	add	x23, x23, #0x10
  90:	ldr	x0, [sp, #120]
  94:	orr	x0, x0, #0x1
  98:	str	x0, [sp, #128]
  9c:	str	xzr, [sp, #120]
  a0:	ldr	x0, [x22]
  a4:	str	xzr, [x22]
  a8:	str	x0, [sp, #144]
  ac:	mov	x8, x25
  b0:	mov	x1, x21
  b4:	mov	x0, x26
  b8:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  bc:	ldr	x0, [sp, #128]
  c0:	ands	x1, x0, #0xfffffffffffffffe
  c4:	cset	x0, ne  // ne = any
  c8:	orr	x0, x0, x1
  cc:	str	x0, [sp, #128]
  d0:	ands	x0, x0, #0xfffffffffffffffe
  d4:	b.eq	1c0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1c0>  // b.none
  d8:	ldr	x1, [sp, #136]
  dc:	ands	x2, x1, #0xfffffffffffffffe
  e0:	cset	x1, ne  // ne = any
  e4:	orr	x1, x1, x2
  e8:	str	x1, [sp, #136]
  ec:	tst	x1, #0xfffffffffffffffe
  f0:	b.eq	238 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x238>  // b.none
  f4:	ldr	x1, [x0]
  f8:	ldr	x2, [x1, #48]
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 100:	ldr	x1, [x1]
 104:	blr	x2
 108:	and	w0, w0, #0xff
 10c:	cbz	w0, 288 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x288>
 110:	ldr	x0, [sp, #128]
 114:	and	x0, x0, #0xfffffffffffffffe
 118:	str	x0, [sp, #96]
 11c:	ldr	x0, [sp, #136]
 120:	ands	x0, x0, #0xfffffffffffffffe
 124:	b.eq	244 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>  // b.none
 128:	ldr	x1, [x0]
 12c:	ldr	x2, [x1, #48]
 130:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 134:	ldr	x1, [x1]
 138:	blr	x2
 13c:	and	w0, w0, #0xff
 140:	cbz	w0, 244 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>
 144:	ldr	x0, [sp, #136]
 148:	and	x1, x0, #0xfffffffffffffffe
 14c:	str	x1, [sp, #104]
 150:	str	xzr, [sp, #136]
 154:	ldr	x27, [x1, #8]
 158:	ldr	x28, [x1, #16]
 15c:	cmp	x27, x28
 160:	b.eq	188 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x188>  // b.none
 164:	ldr	x0, [sp, #96]
 168:	add	x0, x0, #0x8
 16c:	str	x0, [sp, #96]
 170:	mov	x1, x27
 174:	ldr	x0, [sp, #96]
 178:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 17c:	add	x27, x27, #0x8
 180:	cmp	x28, x27
 184:	b.ne	170 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x170>  // b.any
 188:	ldr	x2, [sp, #104]
 18c:	cbz	x2, 278 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 190:	ldr	x0, [x2]
 194:	ldr	x1, [x0, #8]
 198:	mov	x0, x2
 19c:	blr	x1
 1a0:	b	278 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 1a4:	mov	x0, #0x1                   	// #1
 1a8:	str	x0, [x8]
 1ac:	mov	x0, x20
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #192
 1bc:	ret
 1c0:	ldr	x0, [sp, #136]
 1c4:	orr	x27, x0, #0x1
 1c8:	str	xzr, [sp, #136]
 1cc:	ldr	x0, [sp, #120]
 1d0:	cbnz	x0, 3e0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3e0>
 1d4:	orr	x0, x27, #0x1
 1d8:	str	x0, [sp, #120]
 1dc:	ldr	x0, [sp, #136]
 1e0:	cbnz	x0, 3e8 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3e8>
 1e4:	ldr	x0, [sp, #144]
 1e8:	cbz	x0, 1f8 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1f8>
 1ec:	ldr	x1, [x0]
 1f0:	ldr	x1, [x1, #8]
 1f4:	blr	x1
 1f8:	ldr	x0, [sp, #128]
 1fc:	cbnz	x0, 3f0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3f0>
 200:	add	x22, x22, #0x8
 204:	cmp	x24, x22
 208:	b.ne	90 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x90>  // b.any
 20c:	ldp	x25, x26, [sp, #64]
 210:	ldp	x27, x28, [sp, #80]
 214:	ldr	x0, [sp, #120]
 218:	orr	x0, x0, #0x1
 21c:	str	x0, [x20]
 220:	ldr	x0, [x19]
 224:	ldr	x1, [x0, #8]
 228:	mov	x0, x19
 22c:	blr	x1
 230:	ldp	x23, x24, [sp, #48]
 234:	b	1ac <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 238:	orr	x27, x0, #0x1
 23c:	str	xzr, [sp, #128]
 240:	b	1cc <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 244:	ldr	x0, [sp, #136]
 248:	and	x0, x0, #0xfffffffffffffffe
 24c:	str	x0, [sp, #184]
 250:	str	xzr, [sp, #136]
 254:	add	x1, sp, #0xb8
 258:	ldr	x0, [sp, #96]
 25c:	add	x0, x0, #0x8
 260:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 264:	ldr	x0, [sp, #184]
 268:	cbz	x0, 278 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 26c:	ldr	x1, [x0]
 270:	ldr	x1, [x1, #8]
 274:	blr	x1
 278:	ldr	x0, [sp, #128]
 27c:	orr	x27, x0, #0x1
 280:	str	xzr, [sp, #128]
 284:	b	1cc <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 288:	ldr	x0, [sp, #136]
 28c:	ands	x0, x0, #0xfffffffffffffffe
 290:	b.eq	2f8 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2f8>  // b.none
 294:	ldr	x1, [x0]
 298:	ldr	x2, [x1, #48]
 29c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 2a0:	ldr	x1, [x1]
 2a4:	blr	x2
 2a8:	and	w0, w0, #0xff
 2ac:	cbz	w0, 2f8 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2f8>
 2b0:	ldr	x0, [sp, #136]
 2b4:	and	x0, x0, #0xfffffffffffffffe
 2b8:	ldr	x1, [sp, #128]
 2bc:	and	x1, x1, #0xfffffffffffffffe
 2c0:	str	x1, [sp, #176]
 2c4:	str	xzr, [sp, #128]
 2c8:	add	x2, sp, #0xb0
 2cc:	ldr	x1, [x0, #8]!
 2d0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 2d4:	ldr	x0, [sp, #176]
 2d8:	cbz	x0, 2e8 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2e8>
 2dc:	ldr	x1, [x0]
 2e0:	ldr	x1, [x1, #8]
 2e4:	blr	x1
 2e8:	ldr	x0, [sp, #136]
 2ec:	orr	x27, x0, #0x1
 2f0:	str	xzr, [sp, #136]
 2f4:	b	1cc <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 2f8:	ldr	x0, [sp, #128]
 2fc:	and	x0, x0, #0xfffffffffffffffe
 300:	str	x0, [sp, #168]
 304:	str	xzr, [sp, #128]
 308:	ldr	x0, [sp, #136]
 30c:	and	x0, x0, #0xfffffffffffffffe
 310:	str	x0, [sp, #160]
 314:	str	xzr, [sp, #136]
 318:	mov	x0, #0x20                  	// #32
 31c:	bl	0 <_Znwm>
 320:	mov	x27, x0
 324:	mov	x28, x0
 328:	str	x23, [x28], #8
 32c:	str	xzr, [x0, #8]
 330:	str	xzr, [x28, #8]
 334:	str	xzr, [x28, #16]
 338:	ldr	x0, [sp, #168]
 33c:	ldr	x1, [x0]
 340:	ldr	x2, [x1, #48]
 344:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 348:	ldr	x1, [x1]
 34c:	blr	x2
 350:	and	w0, w0, #0xff
 354:	cbnz	w0, 3c0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c0>
 358:	ldr	x0, [sp, #160]
 35c:	ldr	x1, [x0]
 360:	ldr	x2, [x1, #48]
 364:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 368:	ldr	x1, [x1]
 36c:	blr	x2
 370:	and	w0, w0, #0xff
 374:	cbnz	w0, 3c0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c0>
 378:	add	x1, sp, #0xa8
 37c:	mov	x0, x28
 380:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 384:	add	x1, sp, #0xa0
 388:	mov	x0, x28
 38c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 390:	orr	x27, x27, #0x1
 394:	ldr	x0, [sp, #160]
 398:	cbz	x0, 3a8 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3a8>
 39c:	ldr	x1, [x0]
 3a0:	ldr	x1, [x1, #8]
 3a4:	blr	x1
 3a8:	ldr	x0, [sp, #168]
 3ac:	cbz	x0, 1cc <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 3b0:	ldr	x1, [x0]
 3b4:	ldr	x1, [x1, #8]
 3b8:	blr	x1
 3bc:	b	1cc <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 3c0:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3c4:	add	x3, x3, #0x0
 3c8:	mov	w2, #0x181                 	// #385
 3cc:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3d0:	add	x1, x1, #0x0
 3d4:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3d8:	add	x0, x0, #0x0
 3dc:	bl	0 <__assert_fail>
 3e0:	add	x0, sp, #0x78
 3e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 3e8:	add	x0, sp, #0x88
 3ec:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 3f0:	add	x0, sp, #0x80
 3f4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 3f8:	str	x19, [sp, #152]
 3fc:	mov	x8, x20
 400:	mov	x1, x21
 404:	add	x0, sp, #0x98
 408:	bl	0 <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 40c:	ldr	x0, [sp, #152]
 410:	cbz	x0, 1ac <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 414:	ldr	x1, [x0]
 418:	ldr	x1, [x1, #8]
 41c:	blr	x1
 420:	b	1ac <_ZN4llvm12handleErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0]
   c:	orr	x2, x2, #0x1
  10:	str	x2, [sp, #104]
  14:	str	xzr, [x0]
  18:	add	x8, sp, #0x60
  1c:	add	x0, sp, #0x68
  20:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  24:	ldr	x0, [sp, #96]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #96]
  38:	tst	x0, #0xfffffffffffffffe
  3c:	b.ne	54 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x54>  // b.any
  40:	tbnz	w0, #0, e4 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xe4>
  44:	ldr	x0, [sp, #104]
  48:	cbnz	x0, ec <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xec>
  4c:	ldp	x29, x30, [sp], #112
  50:	ret
  54:	add	x1, sp, #0x10
  58:	add	x0, sp, #0x20
  5c:	str	x0, [sp, #16]
  60:	str	xzr, [sp, #24]
  64:	strb	wzr, [sp, #32]
  68:	mov	w0, #0x1                   	// #1
  6c:	str	w0, [sp, #80]
  70:	str	xzr, [sp, #72]
  74:	str	xzr, [sp, #64]
  78:	str	xzr, [sp, #56]
  7c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  80:	ldr	x0, [x0]
  84:	add	x0, x0, #0x10
  88:	str	x0, [sp, #48]
  8c:	str	x1, [sp, #88]
  90:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  94:	add	x1, x1, #0x0
  98:	add	x0, sp, #0x30
  9c:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  ac:	add	x1, sp, #0x60
  b0:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  b4:	ldr	x1, [sp, #72]
  b8:	ldr	x0, [sp, #56]
  bc:	cmp	x1, x0
  c0:	b.eq	cc <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xcc>  // b.none
  c4:	add	x0, sp, #0x30
  c8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  cc:	mov	w2, #0x2c9                 	// #713
  d0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_8toStringENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  d4:	add	x1, x1, #0x0
  d8:	ldr	x0, [sp, #88]
  dc:	ldr	x0, [x0]
  e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  e4:	add	x0, sp, #0x60
  e8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  ec:	add	x0, sp, #0x68
  f0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	mov	x19, x0
  14:	ldr	x0, [x0]
  18:	ldr	x1, [x0]
  1c:	ldr	x2, [x1, #48]
  20:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  24:	ldr	x1, [x1]
  28:	blr	x2
  2c:	and	w0, w0, #0xff
  30:	cbnz	w0, 54 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x54>
  34:	ldr	x0, [x19]
  38:	str	xzr, [x19]
  3c:	orr	x0, x0, #0x1
  40:	str	x0, [x20]
  44:	mov	x0, x20
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	str	x21, [sp, #32]
  58:	ldr	x21, [x19]
  5c:	str	xzr, [x19]
  60:	ldr	x0, [x21]
  64:	ldr	x2, [x0, #48]
  68:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  6c:	ldr	x1, [x1]
  70:	mov	x0, x21
  74:	blr	x2
  78:	and	w0, w0, #0xff
  7c:	cbz	w0, a0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xa0>
  80:	mov	x0, #0x1                   	// #1
  84:	str	x0, [x20]
  88:	ldr	x0, [x21]
  8c:	ldr	x1, [x0, #8]
  90:	mov	x0, x21
  94:	blr	x1
  98:	ldr	x21, [sp, #32]
  9c:	b	44 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x44>
  a0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x329                 	// #809
  ac:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b0:	add	x1, x1, #0x0
  b4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x21, x1
  18:	ldr	x19, [x0]
  1c:	ands	x1, x19, #0xfffffffffffffffe
  20:	cset	x19, ne  // ne = any
  24:	orr	x19, x19, x1
  28:	str	x19, [x0]
  2c:	ands	x19, x19, #0xfffffffffffffffe
  30:	b.eq	1a4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1a4>  // b.none
  34:	str	xzr, [x0]
  38:	ldr	x0, [x19]
  3c:	ldr	x2, [x0, #48]
  40:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  44:	ldr	x1, [x1]
  48:	mov	x0, x19
  4c:	blr	x2
  50:	and	w0, w0, #0xff
  54:	cbz	w0, 3f8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3f8>
  58:	stp	x23, x24, [sp, #48]
  5c:	mov	x0, #0x1                   	// #1
  60:	str	x0, [sp, #120]
  64:	ldr	x22, [x19, #8]
  68:	ldr	x24, [x19, #16]
  6c:	cmp	x24, x22
  70:	b.eq	214 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x214>  // b.none
  74:	stp	x25, x26, [sp, #64]
  78:	stp	x27, x28, [sp, #80]
  7c:	add	x26, sp, #0x90
  80:	add	x25, sp, #0x88
  84:	adrp	x23, 0 <_ZTVN4llvm9ErrorListE>
  88:	ldr	x23, [x23]
  8c:	add	x23, x23, #0x10
  90:	ldr	x0, [sp, #120]
  94:	orr	x0, x0, #0x1
  98:	str	x0, [sp, #128]
  9c:	str	xzr, [sp, #120]
  a0:	ldr	x0, [x22]
  a4:	str	xzr, [x22]
  a8:	str	x0, [sp, #144]
  ac:	mov	x8, x25
  b0:	mov	x1, x21
  b4:	mov	x0, x26
  b8:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  bc:	ldr	x0, [sp, #128]
  c0:	ands	x1, x0, #0xfffffffffffffffe
  c4:	cset	x0, ne  // ne = any
  c8:	orr	x0, x0, x1
  cc:	str	x0, [sp, #128]
  d0:	ands	x0, x0, #0xfffffffffffffffe
  d4:	b.eq	1c0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1c0>  // b.none
  d8:	ldr	x1, [sp, #136]
  dc:	ands	x2, x1, #0xfffffffffffffffe
  e0:	cset	x1, ne  // ne = any
  e4:	orr	x1, x1, x2
  e8:	str	x1, [sp, #136]
  ec:	tst	x1, #0xfffffffffffffffe
  f0:	b.eq	238 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x238>  // b.none
  f4:	ldr	x1, [x0]
  f8:	ldr	x2, [x1, #48]
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 100:	ldr	x1, [x1]
 104:	blr	x2
 108:	and	w0, w0, #0xff
 10c:	cbz	w0, 288 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x288>
 110:	ldr	x0, [sp, #128]
 114:	and	x0, x0, #0xfffffffffffffffe
 118:	str	x0, [sp, #96]
 11c:	ldr	x0, [sp, #136]
 120:	ands	x0, x0, #0xfffffffffffffffe
 124:	b.eq	244 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>  // b.none
 128:	ldr	x1, [x0]
 12c:	ldr	x2, [x1, #48]
 130:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 134:	ldr	x1, [x1]
 138:	blr	x2
 13c:	and	w0, w0, #0xff
 140:	cbz	w0, 244 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>
 144:	ldr	x0, [sp, #136]
 148:	and	x1, x0, #0xfffffffffffffffe
 14c:	str	x1, [sp, #104]
 150:	str	xzr, [sp, #136]
 154:	ldr	x27, [x1, #8]
 158:	ldr	x28, [x1, #16]
 15c:	cmp	x27, x28
 160:	b.eq	188 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x188>  // b.none
 164:	ldr	x0, [sp, #96]
 168:	add	x0, x0, #0x8
 16c:	str	x0, [sp, #96]
 170:	mov	x1, x27
 174:	ldr	x0, [sp, #96]
 178:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 17c:	add	x27, x27, #0x8
 180:	cmp	x28, x27
 184:	b.ne	170 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x170>  // b.any
 188:	ldr	x2, [sp, #104]
 18c:	cbz	x2, 278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 190:	ldr	x0, [x2]
 194:	ldr	x1, [x0, #8]
 198:	mov	x0, x2
 19c:	blr	x1
 1a0:	b	278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 1a4:	mov	x0, #0x1                   	// #1
 1a8:	str	x0, [x8]
 1ac:	mov	x0, x20
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #192
 1bc:	ret
 1c0:	ldr	x0, [sp, #136]
 1c4:	orr	x27, x0, #0x1
 1c8:	str	xzr, [sp, #136]
 1cc:	ldr	x0, [sp, #120]
 1d0:	cbnz	x0, 3e0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3e0>
 1d4:	orr	x0, x27, #0x1
 1d8:	str	x0, [sp, #120]
 1dc:	ldr	x0, [sp, #136]
 1e0:	cbnz	x0, 3e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3e8>
 1e4:	ldr	x0, [sp, #144]
 1e8:	cbz	x0, 1f8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1f8>
 1ec:	ldr	x1, [x0]
 1f0:	ldr	x1, [x1, #8]
 1f4:	blr	x1
 1f8:	ldr	x0, [sp, #128]
 1fc:	cbnz	x0, 3f0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3f0>
 200:	add	x22, x22, #0x8
 204:	cmp	x24, x22
 208:	b.ne	90 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x90>  // b.any
 20c:	ldp	x25, x26, [sp, #64]
 210:	ldp	x27, x28, [sp, #80]
 214:	ldr	x0, [sp, #120]
 218:	orr	x0, x0, #0x1
 21c:	str	x0, [x20]
 220:	ldr	x0, [x19]
 224:	ldr	x1, [x0, #8]
 228:	mov	x0, x19
 22c:	blr	x1
 230:	ldp	x23, x24, [sp, #48]
 234:	b	1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 238:	orr	x27, x0, #0x1
 23c:	str	xzr, [sp, #128]
 240:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 244:	ldr	x0, [sp, #136]
 248:	and	x0, x0, #0xfffffffffffffffe
 24c:	str	x0, [sp, #184]
 250:	str	xzr, [sp, #136]
 254:	add	x1, sp, #0xb8
 258:	ldr	x0, [sp, #96]
 25c:	add	x0, x0, #0x8
 260:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 264:	ldr	x0, [sp, #184]
 268:	cbz	x0, 278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 26c:	ldr	x1, [x0]
 270:	ldr	x1, [x1, #8]
 274:	blr	x1
 278:	ldr	x0, [sp, #128]
 27c:	orr	x27, x0, #0x1
 280:	str	xzr, [sp, #128]
 284:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 288:	ldr	x0, [sp, #136]
 28c:	ands	x0, x0, #0xfffffffffffffffe
 290:	b.eq	2f8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2f8>  // b.none
 294:	ldr	x1, [x0]
 298:	ldr	x2, [x1, #48]
 29c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 2a0:	ldr	x1, [x1]
 2a4:	blr	x2
 2a8:	and	w0, w0, #0xff
 2ac:	cbz	w0, 2f8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2f8>
 2b0:	ldr	x0, [sp, #136]
 2b4:	and	x0, x0, #0xfffffffffffffffe
 2b8:	ldr	x1, [sp, #128]
 2bc:	and	x1, x1, #0xfffffffffffffffe
 2c0:	str	x1, [sp, #176]
 2c4:	str	xzr, [sp, #128]
 2c8:	add	x2, sp, #0xb0
 2cc:	ldr	x1, [x0, #8]!
 2d0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 2d4:	ldr	x0, [sp, #176]
 2d8:	cbz	x0, 2e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x2e8>
 2dc:	ldr	x1, [x0]
 2e0:	ldr	x1, [x1, #8]
 2e4:	blr	x1
 2e8:	ldr	x0, [sp, #136]
 2ec:	orr	x27, x0, #0x1
 2f0:	str	xzr, [sp, #136]
 2f4:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 2f8:	ldr	x0, [sp, #128]
 2fc:	and	x0, x0, #0xfffffffffffffffe
 300:	str	x0, [sp, #168]
 304:	str	xzr, [sp, #128]
 308:	ldr	x0, [sp, #136]
 30c:	and	x0, x0, #0xfffffffffffffffe
 310:	str	x0, [sp, #160]
 314:	str	xzr, [sp, #136]
 318:	mov	x0, #0x20                  	// #32
 31c:	bl	0 <_Znwm>
 320:	mov	x27, x0
 324:	mov	x28, x0
 328:	str	x23, [x28], #8
 32c:	str	xzr, [x0, #8]
 330:	str	xzr, [x28, #8]
 334:	str	xzr, [x28, #16]
 338:	ldr	x0, [sp, #168]
 33c:	ldr	x1, [x0]
 340:	ldr	x2, [x1, #48]
 344:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 348:	ldr	x1, [x1]
 34c:	blr	x2
 350:	and	w0, w0, #0xff
 354:	cbnz	w0, 3c0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c0>
 358:	ldr	x0, [sp, #160]
 35c:	ldr	x1, [x0]
 360:	ldr	x2, [x1, #48]
 364:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 368:	ldr	x1, [x1]
 36c:	blr	x2
 370:	and	w0, w0, #0xff
 374:	cbnz	w0, 3c0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c0>
 378:	add	x1, sp, #0xa8
 37c:	mov	x0, x28
 380:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 384:	add	x1, sp, #0xa0
 388:	mov	x0, x28
 38c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 390:	orr	x27, x27, #0x1
 394:	ldr	x0, [sp, #160]
 398:	cbz	x0, 3a8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3a8>
 39c:	ldr	x1, [x0]
 3a0:	ldr	x1, [x1, #8]
 3a4:	blr	x1
 3a8:	ldr	x0, [sp, #168]
 3ac:	cbz	x0, 1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 3b0:	ldr	x1, [x0]
 3b4:	ldr	x1, [x1, #8]
 3b8:	blr	x1
 3bc:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 3c0:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3c4:	add	x3, x3, #0x0
 3c8:	mov	w2, #0x181                 	// #385
 3cc:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3d0:	add	x1, x1, #0x0
 3d4:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3d8:	add	x0, x0, #0x0
 3dc:	bl	0 <__assert_fail>
 3e0:	add	x0, sp, #0x78
 3e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 3e8:	add	x0, sp, #0x88
 3ec:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 3f0:	add	x0, sp, #0x80
 3f4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 3f8:	str	x19, [sp, #152]
 3fc:	mov	x8, x20
 400:	mov	x1, x21
 404:	add	x0, sp, #0x98
 408:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 40c:	ldr	x0, [sp, #152]
 410:	cbz	x0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 414:	ldr	x1, [x0]
 418:	ldr	x1, [x1, #8]
 41c:	blr	x1
 420:	b	1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0]
   c:	orr	x2, x2, #0x1
  10:	str	x2, [sp, #104]
  14:	str	xzr, [x0]
  18:	add	x8, sp, #0x60
  1c:	add	x0, sp, #0x68
  20:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  24:	ldr	x0, [sp, #96]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #96]
  38:	tst	x0, #0xfffffffffffffffe
  3c:	b.ne	54 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x54>  // b.any
  40:	tbnz	w0, #0, e4 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xe4>
  44:	ldr	x0, [sp, #104]
  48:	cbnz	x0, ec <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xec>
  4c:	ldp	x29, x30, [sp], #112
  50:	ret
  54:	add	x1, sp, #0x10
  58:	add	x0, sp, #0x20
  5c:	str	x0, [sp, #16]
  60:	str	xzr, [sp, #24]
  64:	strb	wzr, [sp, #32]
  68:	mov	w0, #0x1                   	// #1
  6c:	str	w0, [sp, #80]
  70:	str	xzr, [sp, #72]
  74:	str	xzr, [sp, #64]
  78:	str	xzr, [sp, #56]
  7c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  80:	ldr	x0, [x0]
  84:	add	x0, x0, #0x10
  88:	str	x0, [sp, #48]
  8c:	str	x1, [sp, #88]
  90:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  94:	add	x1, x1, #0x0
  98:	add	x0, sp, #0x30
  9c:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  ac:	add	x1, sp, #0x60
  b0:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  b4:	ldr	x1, [sp, #72]
  b8:	ldr	x0, [sp, #56]
  bc:	cmp	x1, x0
  c0:	b.eq	cc <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xcc>  // b.none
  c4:	add	x0, sp, #0x30
  c8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  cc:	mov	w2, #0x2c9                 	// #713
  d0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  d4:	add	x1, x1, #0x0
  d8:	ldr	x0, [sp, #88]
  dc:	ldr	x0, [x0]
  e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  e4:	add	x0, sp, #0x60
  e8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  ec:	add	x0, sp, #0x68
  f0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:

0000000000000000 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x1
  1c:	mov	x26, x2
  20:	ldr	x23, [x0, #8]
  24:	ldr	x24, [x0]
  28:	sub	x1, x23, x24
  2c:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  30:	cmp	x2, x1, asr #3
  34:	b.eq	e0 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0xe0>  // b.none
  38:	mov	x20, x0
  3c:	asr	x0, x1, #3
  40:	cmp	x0, #0x0
  44:	csinc	x3, x0, xzr, ne  // ne = any
  48:	adds	x3, x3, x0
  4c:	b.cs	118 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0x118>  // b.hs, b.nlast
  50:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	x3, x22
  58:	csel	x22, x3, x22, ls  // ls = plast
  5c:	sub	x19, x25, x24
  60:	mov	x21, #0x0                   	// #0
  64:	cbz	x3, 74 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0x74>
  68:	lsl	x0, x22, #3
  6c:	bl	0 <_Znwm>
  70:	mov	x21, x0
  74:	ldr	x0, [x26]
  78:	str	x0, [x21, x19]
  7c:	cmp	x19, #0x0
  80:	b.gt	ec <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0xec>
  84:	add	x19, x19, #0x8
  88:	add	x19, x21, x19
  8c:	sub	x23, x23, x25
  90:	cmp	x23, #0x0
  94:	b.le	a8 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0xa8>
  98:	mov	x2, x23
  9c:	mov	x1, x25
  a0:	mov	x0, x19
  a4:	bl	0 <memcpy>
  a8:	add	x19, x19, x23
  ac:	cbz	x24, b8 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0xb8>
  b0:	mov	x0, x24
  b4:	bl	0 <_ZdlPv>
  b8:	str	x21, [x20]
  bc:	str	x19, [x20, #8]
  c0:	add	x21, x21, x22, lsl #3
  c4:	str	x21, [x20, #16]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	adrp	x0, 0 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_>
  e4:	add	x0, x0, #0x0
  e8:	bl	0 <_ZSt20__throw_length_errorPKc>
  ec:	mov	x2, x19
  f0:	mov	x1, x24
  f4:	mov	x0, x21
  f8:	bl	0 <memmove>
  fc:	add	x19, x19, #0x8
 100:	add	x19, x21, x19
 104:	sub	x23, x23, x25
 108:	cmp	x23, #0x0
 10c:	b.gt	98 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0x98>
 110:	add	x19, x19, x23
 114:	b	b0 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0xb0>
 118:	sub	x19, x25, x24
 11c:	mov	x22, #0xfffffffffffffff     	// #1152921504606846975
 120:	b	68 <_ZNSt6vectorImSaImEE17_M_realloc_insertIJmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_+0x68>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc:

0000000000000000 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc>:
   0:	ldrb	w2, [x0, #8]
   4:	and	w3, w2, #0x1
   8:	bfi	w2, w3, #1, #1
   c:	strb	w2, [x0, #8]
  10:	cbnz	w3, 28 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc+0x28>
  14:	ldr	x1, [x0]
  18:	str	xzr, [x0]
  1c:	str	x1, [x8]
  20:	mov	x0, x8
  24:	ret
  28:	stp	x29, x30, [sp, #-112]!
  2c:	mov	x29, sp
  30:	cbz	x1, d8 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc+0xd8>
  34:	add	x3, sp, #0x20
  38:	add	x2, sp, #0x30
  3c:	str	x2, [sp, #32]
  40:	str	xzr, [sp, #40]
  44:	strb	wzr, [sp, #48]
  48:	mov	w2, #0x1                   	// #1
  4c:	str	w2, [sp, #96]
  50:	str	xzr, [sp, #88]
  54:	str	xzr, [sp, #80]
  58:	str	xzr, [sp, #72]
  5c:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
  60:	ldr	x2, [x2]
  64:	add	x2, x2, #0x10
  68:	str	x2, [sp, #64]
  6c:	str	x3, [sp, #104]
  70:	ldrb	w2, [x0, #8]
  74:	and	w2, w2, #0xfffffffd
  78:	strb	w2, [x0, #8]
  7c:	ldr	x2, [x0]
  80:	str	xzr, [x0]
  84:	orr	x0, x2, #0x1
  88:	str	x0, [sp, #24]
  8c:	add	x0, sp, #0x40
  90:	bl	0 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc>
  94:	adrp	x1, 0 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc>
  98:	add	x1, x1, #0x0
  9c:	bl	0 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc>
  a0:	add	x1, sp, #0x18
  a4:	bl	0 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc>
  a8:	ldr	x1, [sp, #88]
  ac:	ldr	x0, [sp, #72]
  b0:	cmp	x1, x0
  b4:	b.eq	c0 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc+0xc0>  // b.none
  b8:	add	x0, sp, #0x40
  bc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  c0:	mov	w2, #0x2e8                 	// #744
  c4:	adrp	x1, 0 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc>
  c8:	add	x1, x1, #0x0
  cc:	ldr	x0, [sp, #104]
  d0:	ldr	x0, [x0]
  d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d8:	adrp	x1, 0 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc>
  dc:	add	x1, x1, #0x0
  e0:	b	34 <_ZN4llvm8cantFailISt10unique_ptrINS_7remarks12RemarkParserESt14default_deleteIS3_EEEET_NS_8ExpectedIS7_EEPKc+0x34>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks16YAMLRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks21BitstreamRemarkParserESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

RemarkSerializer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x8
  14:	mov	w22, w1
  18:	mov	x21, x2
  1c:	cmp	w0, #0x2
  20:	b.eq	20c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x20c>  // b.none
  24:	b.gt	80 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x80>
  28:	cbz	w0, d4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0xd4>
  2c:	str	x23, [sp, #48]
  30:	cmp	w0, #0x1
  34:	b.ne	bc <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0xbc>  // b.any
  38:	strb	wzr, [sp, #72]
  3c:	strb	wzr, [sp, #208]
  40:	mov	x0, #0x130                 	// #304
  44:	bl	0 <_Znwm>
  48:	mov	x23, x0
  4c:	add	x3, sp, #0x48
  50:	mov	w2, w22
  54:	mov	x1, x21
  58:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE>
  5c:	ldrb	w0, [sp, #208]
  60:	cbnz	w0, 144 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x144>
  64:	ldrb	w1, [x19, #8]
  68:	and	w1, w1, #0xfffffffe
  6c:	orr	w1, w1, #0x2
  70:	strb	w1, [x19, #8]
  74:	str	x23, [x19]
  78:	ldr	x23, [sp, #48]
  7c:	b	2c4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x2c4>
  80:	cmp	w0, #0x3
  84:	b.ne	b8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0xb8>  // b.any
  88:	mov	x0, #0x788                 	// #1928
  8c:	bl	0 <_Znwm>
  90:	mov	x20, x0
  94:	mov	w2, w22
  98:	mov	x1, x21
  9c:	bl	0 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeE>
  a0:	ldrb	w1, [x19, #8]
  a4:	and	w1, w1, #0xfffffffe
  a8:	orr	w1, w1, #0x2
  ac:	strb	w1, [x19, #8]
  b0:	str	x20, [x19]
  b4:	b	2c4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x2c4>
  b8:	str	x23, [sp, #48]
  bc:	mov	w2, #0x22                  	// #34
  c0:	adrp	x1, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d4:	bl	0 <_ZNSt3_V216generic_categoryEv>
  d8:	mov	x1, x0
  dc:	add	x8, sp, #0xd8
  e0:	adrp	x2, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
  e4:	add	x2, x2, #0x0
  e8:	mov	x0, #0x16                  	// #22
  ec:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
  f0:	ldrb	w0, [x19, #8]
  f4:	orr	w0, w0, #0x3
  f8:	strb	w0, [x19, #8]
  fc:	ldr	x0, [sp, #216]
 100:	ands	x1, x0, #0xfffffffffffffffe
 104:	cset	x0, ne  // ne = any
 108:	orr	x0, x0, x1
 10c:	str	x0, [sp, #216]
 110:	ands	x0, x0, #0xfffffffffffffffe
 114:	b.eq	120 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x120>  // b.none
 118:	str	x0, [x19]
 11c:	b	2c4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x2c4>
 120:	str	x23, [sp, #48]
 124:	adrp	x3, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x1ce                 	// #462
 130:	adrp	x1, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 134:	add	x1, x1, #0x0
 138:	adrp	x0, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 13c:	add	x0, x0, #0x0
 140:	bl	0 <__assert_fail>
 144:	ldr	w0, [sp, #84]
 148:	cbz	w0, 170 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x170>
 14c:	ldr	w0, [sp, #80]
 150:	cbz	w0, 170 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x170>
 154:	sub	w1, w0, #0x1
 158:	add	x1, x1, #0x1
 15c:	lsl	x1, x1, #3
 160:	mov	x0, #0x0                   	// #0
 164:	add	x0, x0, #0x8
 168:	cmp	x1, x0
 16c:	b.ne	164 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x164>  // b.any
 170:	ldr	x0, [sp, #72]
 174:	bl	0 <free>
 178:	ldr	x20, [sp, #112]
 17c:	ldr	w21, [sp, #120]
 180:	add	x21, x20, x21, lsl #3
 184:	cmp	x20, x21
 188:	b.eq	19c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x19c>  // b.none
 18c:	ldr	x0, [x20], #8
 190:	bl	0 <free>
 194:	cmp	x21, x20
 198:	b.ne	18c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x18c>  // b.any
 19c:	ldr	x20, [sp, #160]
 1a0:	ldr	w21, [sp, #168]
 1a4:	add	x21, x20, x21, lsl #4
 1a8:	cmp	x20, x21
 1ac:	b.eq	1e0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x1e0>  // b.none
 1b0:	ldr	x0, [x20], #16
 1b4:	bl	0 <free>
 1b8:	cmp	x21, x20
 1bc:	b.ne	1b0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x1b0>  // b.any
 1c0:	ldr	x0, [sp, #160]
 1c4:	ldr	w1, [sp, #168]
 1c8:	add	x1, x0, x1, lsl #4
 1cc:	cmp	x0, x1
 1d0:	b.eq	1e0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x1e0>  // b.none
 1d4:	sub	x1, x1, #0x10
 1d8:	cmp	x0, x1
 1dc:	b.ne	1d4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x1d4>  // b.any
 1e0:	ldr	x0, [sp, #160]
 1e4:	add	x1, sp, #0xb0
 1e8:	cmp	x0, x1
 1ec:	b.eq	1f4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x1f4>  // b.none
 1f0:	bl	0 <free>
 1f4:	ldr	x0, [sp, #112]
 1f8:	add	x1, sp, #0x80
 1fc:	cmp	x0, x1
 200:	b.eq	64 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x64>  // b.none
 204:	bl	0 <free>
 208:	b	64 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x64>
 20c:	mov	x0, #0x138                 	// #312
 210:	bl	0 <_Znwm>
 214:	mov	x20, x0
 218:	strb	wzr, [sp, #72]
 21c:	strb	wzr, [sp, #208]
 220:	add	x4, sp, #0x48
 224:	mov	w3, w22
 228:	mov	x2, x21
 22c:	mov	w1, #0x2                   	// #2
 230:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializerC2ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE>
 234:	ldrb	w0, [sp, #208]
 238:	cbnz	w0, 2d8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x2d8>
 23c:	adrp	x0, 0 <_ZTVN4llvm7remarks26YAMLStrTabRemarkSerializerE>
 240:	ldr	x0, [x0]
 244:	add	x0, x0, #0x10
 248:	str	x0, [x20]
 24c:	strb	wzr, [x20, #304]
 250:	ldrb	w0, [x20, #168]
 254:	cbnz	w0, 3a0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x3a0>
 258:	str	xzr, [x20, #32]
 25c:	str	wzr, [x20, #40]
 260:	str	wzr, [x20, #44]
 264:	str	wzr, [x20, #48]
 268:	mov	w1, #0x10                  	// #16
 26c:	str	w1, [x20, #52]
 270:	str	xzr, [x20, #56]
 274:	str	xzr, [x20, #64]
 278:	add	x2, x20, #0x58
 27c:	str	x2, [x20, #72]
 280:	str	wzr, [x20, #80]
 284:	mov	w2, #0x4                   	// #4
 288:	str	w2, [x20, #84]
 28c:	add	x2, x20, #0x88
 290:	str	x2, [x20, #120]
 294:	str	wzr, [x20, #128]
 298:	str	wzr, [x20, #132]
 29c:	str	xzr, [x20, #136]
 2a0:	mov	x2, #0x1                   	// #1
 2a4:	str	x2, [x20, #144]
 2a8:	str	xzr, [x20, #160]
 2ac:	strb	w2, [x20, #168]
 2b0:	ldrb	w0, [x19, #8]
 2b4:	and	w0, w0, #0xfffffffe
 2b8:	orr	w0, w0, #0x2
 2bc:	strb	w0, [x19, #8]
 2c0:	str	x20, [x19]
 2c4:	mov	x0, x19
 2c8:	ldp	x19, x20, [sp, #16]
 2cc:	ldp	x21, x22, [sp, #32]
 2d0:	ldp	x29, x30, [sp], #224
 2d4:	ret
 2d8:	ldr	w0, [sp, #84]
 2dc:	cbz	w0, 304 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x304>
 2e0:	ldr	w0, [sp, #80]
 2e4:	cbz	w0, 304 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x304>
 2e8:	sub	w1, w0, #0x1
 2ec:	add	x1, x1, #0x1
 2f0:	lsl	x1, x1, #3
 2f4:	mov	x0, #0x0                   	// #0
 2f8:	add	x0, x0, #0x8
 2fc:	cmp	x1, x0
 300:	b.ne	2f8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x2f8>  // b.any
 304:	ldr	x0, [sp, #72]
 308:	bl	0 <free>
 30c:	ldr	x21, [sp, #112]
 310:	ldr	w22, [sp, #120]
 314:	add	x22, x21, x22, lsl #3
 318:	cmp	x21, x22
 31c:	b.eq	330 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x330>  // b.none
 320:	ldr	x0, [x21], #8
 324:	bl	0 <free>
 328:	cmp	x22, x21
 32c:	b.ne	320 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x320>  // b.any
 330:	ldr	x21, [sp, #160]
 334:	ldr	w22, [sp, #168]
 338:	add	x22, x21, x22, lsl #4
 33c:	cmp	x21, x22
 340:	b.eq	374 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x374>  // b.none
 344:	ldr	x0, [x21], #16
 348:	bl	0 <free>
 34c:	cmp	x22, x21
 350:	b.ne	344 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x344>  // b.any
 354:	ldr	x1, [sp, #160]
 358:	ldr	w0, [sp, #168]
 35c:	add	x0, x1, x0, lsl #4
 360:	cmp	x1, x0
 364:	b.eq	374 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x374>  // b.none
 368:	sub	x0, x0, #0x10
 36c:	cmp	x1, x0
 370:	b.ne	368 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x368>  // b.any
 374:	ldr	x0, [sp, #160]
 378:	add	x1, sp, #0xb0
 37c:	cmp	x0, x1
 380:	b.eq	388 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x388>  // b.none
 384:	bl	0 <free>
 388:	ldr	x0, [sp, #112]
 38c:	add	x1, sp, #0x80
 390:	cmp	x0, x1
 394:	b.eq	23c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x23c>  // b.none
 398:	bl	0 <free>
 39c:	b	23c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x23c>
 3a0:	ldr	w0, [x20, #44]
 3a4:	cbz	w0, 3cc <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x3cc>
 3a8:	ldr	w0, [x20, #40]
 3ac:	cbz	w0, 3cc <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x3cc>
 3b0:	sub	w1, w0, #0x1
 3b4:	add	x1, x1, #0x1
 3b8:	lsl	x1, x1, #3
 3bc:	mov	x0, #0x0                   	// #0
 3c0:	add	x0, x0, #0x8
 3c4:	cmp	x0, x1
 3c8:	b.ne	3c0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x3c0>  // b.any
 3cc:	ldr	x0, [x20, #32]
 3d0:	bl	0 <free>
 3d4:	ldr	x21, [x20, #72]
 3d8:	ldr	w22, [x20, #80]
 3dc:	add	x22, x21, x22, lsl #3
 3e0:	cmp	x21, x22
 3e4:	b.eq	3f8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x3f8>  // b.none
 3e8:	ldr	x0, [x21], #8
 3ec:	bl	0 <free>
 3f0:	cmp	x22, x21
 3f4:	b.ne	3e8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x3e8>  // b.any
 3f8:	ldr	x21, [x20, #120]
 3fc:	ldr	w22, [x20, #128]
 400:	add	x22, x21, x22, lsl #4
 404:	cmp	x21, x22
 408:	b.eq	43c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x43c>  // b.none
 40c:	ldr	x0, [x21], #16
 410:	bl	0 <free>
 414:	cmp	x22, x21
 418:	b.ne	40c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x40c>  // b.any
 41c:	ldr	x1, [x20, #120]
 420:	ldr	w0, [x20, #128]
 424:	add	x0, x1, x0, lsl #4
 428:	cmp	x1, x0
 42c:	b.eq	43c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x43c>  // b.none
 430:	sub	x0, x0, #0x10
 434:	cmp	x1, x0
 438:	b.ne	430 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x430>  // b.any
 43c:	ldr	x0, [x20, #120]
 440:	add	x1, x20, #0x88
 444:	cmp	x0, x1
 448:	b.eq	450 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x450>  // b.none
 44c:	bl	0 <free>
 450:	ldr	x0, [x20, #72]
 454:	add	x1, x20, #0x58
 458:	cmp	x0, x1
 45c:	b.eq	258 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x258>  // b.none
 460:	bl	0 <free>
 464:	b	258 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE+0x258>

0000000000000468 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE>:
 468:	stp	x29, x30, [sp, #-352]!
 46c:	mov	x29, sp
 470:	stp	x19, x20, [sp, #16]
 474:	stp	x21, x22, [sp, #32]
 478:	mov	x20, x8
 47c:	mov	w22, w1
 480:	mov	x21, x2
 484:	mov	x19, x3
 488:	cmp	w0, #0x2
 48c:	b.eq	8e0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x478>  // b.none
 490:	cmp	w0, #0x2
 494:	b.gt	5b8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x150>
 498:	cbz	w0, 788 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x320>
 49c:	str	x23, [sp, #48]
 4a0:	cmp	w0, #0x1
 4a4:	b.ne	cd4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x86c>  // b.any
 4a8:	ldr	x0, [x3]
 4ac:	str	x0, [sp, #200]
 4b0:	ldr	w0, [x3, #8]
 4b4:	str	w0, [sp, #208]
 4b8:	ldr	w0, [x3, #12]
 4bc:	str	w0, [sp, #212]
 4c0:	ldr	w0, [x3, #16]
 4c4:	str	w0, [sp, #216]
 4c8:	ldr	w0, [x3, #20]
 4cc:	str	w0, [sp, #220]
 4d0:	str	xzr, [x3]
 4d4:	str	wzr, [x3, #8]
 4d8:	str	wzr, [x3, #12]
 4dc:	str	wzr, [x3, #16]
 4e0:	ldr	x0, [x3, #24]
 4e4:	str	x0, [sp, #224]
 4e8:	ldr	x0, [x3, #32]
 4ec:	str	x0, [sp, #232]
 4f0:	add	x0, sp, #0x100
 4f4:	str	x0, [sp, #240]
 4f8:	str	wzr, [sp, #248]
 4fc:	mov	w0, #0x4                   	// #4
 500:	str	w0, [sp, #252]
 504:	ldr	w0, [x3, #48]
 508:	cbnz	w0, 7f8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x390>
 50c:	add	x0, sp, #0x130
 510:	str	x0, [sp, #288]
 514:	str	wzr, [sp, #296]
 518:	str	wzr, [sp, #300]
 51c:	ldr	w0, [x19, #96]
 520:	cbnz	w0, 808 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x3a0>
 524:	ldr	x1, [x19, #104]
 528:	str	x1, [sp, #304]
 52c:	ldr	x1, [x19, #112]
 530:	str	x1, [sp, #312]
 534:	str	xzr, [x19, #32]
 538:	str	xzr, [x19, #24]
 53c:	str	xzr, [x19, #104]
 540:	str	wzr, [x19, #48]
 544:	ldr	x1, [x19, #88]
 548:	ldr	w0, [x19, #96]
 54c:	add	x0, x1, x0, lsl #4
 550:	cmp	x1, x0
 554:	b.eq	564 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0xfc>  // b.none
 558:	sub	x0, x0, #0x10
 55c:	cmp	x1, x0
 560:	b.ne	558 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0xf0>  // b.any
 564:	str	wzr, [x19, #96]
 568:	ldr	x0, [x19, #128]
 56c:	str	x0, [sp, #328]
 570:	mov	w0, #0x1                   	// #1
 574:	strb	w0, [sp, #336]
 578:	mov	x0, #0x130                 	// #304
 57c:	bl	0 <_Znwm>
 580:	mov	x23, x0
 584:	add	x3, sp, #0xc8
 588:	mov	w2, w22
 58c:	mov	x1, x21
 590:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE>
 594:	ldrb	w0, [sp, #336]
 598:	cbnz	w0, 818 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x3b0>
 59c:	ldrb	w1, [x20, #8]
 5a0:	and	w1, w1, #0xfffffffe
 5a4:	orr	w1, w1, #0x2
 5a8:	strb	w1, [x20, #8]
 5ac:	str	x23, [x20]
 5b0:	ldr	x23, [sp, #48]
 5b4:	b	b98 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x730>
 5b8:	str	x23, [sp, #48]
 5bc:	cmp	w0, #0x3
 5c0:	b.ne	cd4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x86c>  // b.any
 5c4:	ldr	x0, [x3]
 5c8:	str	x0, [sp, #200]
 5cc:	ldr	w0, [x3, #8]
 5d0:	str	w0, [sp, #208]
 5d4:	ldr	w0, [x3, #12]
 5d8:	str	w0, [sp, #212]
 5dc:	ldr	w0, [x3, #16]
 5e0:	str	w0, [sp, #216]
 5e4:	ldr	w0, [x3, #20]
 5e8:	str	w0, [sp, #220]
 5ec:	str	xzr, [x3]
 5f0:	str	wzr, [x3, #8]
 5f4:	str	wzr, [x3, #12]
 5f8:	str	wzr, [x3, #16]
 5fc:	ldr	x0, [x3, #24]
 600:	str	x0, [sp, #224]
 604:	ldr	x0, [x3, #32]
 608:	str	x0, [sp, #232]
 60c:	add	x0, sp, #0x100
 610:	str	x0, [sp, #240]
 614:	str	wzr, [sp, #248]
 618:	mov	w0, #0x4                   	// #4
 61c:	str	w0, [sp, #252]
 620:	ldr	w0, [x3, #48]
 624:	cbnz	w0, cb4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x84c>
 628:	add	x0, sp, #0x130
 62c:	str	x0, [sp, #288]
 630:	str	wzr, [sp, #296]
 634:	str	wzr, [sp, #300]
 638:	ldr	w0, [x19, #96]
 63c:	cbnz	w0, cc4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x85c>
 640:	ldr	x1, [x19, #104]
 644:	str	x1, [sp, #304]
 648:	ldr	x1, [x19, #112]
 64c:	str	x1, [sp, #312]
 650:	str	xzr, [x19, #32]
 654:	str	xzr, [x19, #24]
 658:	str	xzr, [x19, #104]
 65c:	str	wzr, [x19, #48]
 660:	ldr	x1, [x19, #88]
 664:	ldr	w0, [x19, #96]
 668:	add	x0, x1, x0, lsl #4
 66c:	cmp	x1, x0
 670:	b.eq	680 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x218>  // b.none
 674:	sub	x0, x0, #0x10
 678:	cmp	x1, x0
 67c:	b.ne	674 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x20c>  // b.any
 680:	str	wzr, [x19, #96]
 684:	ldr	x0, [x19, #128]
 688:	str	x0, [sp, #328]
 68c:	mov	x0, #0x788                 	// #1928
 690:	bl	0 <_Znwm>
 694:	mov	x23, x0
 698:	add	x3, sp, #0xc8
 69c:	mov	w2, w22
 6a0:	mov	x1, x21
 6a4:	bl	0 <_ZN4llvm7remarks25BitstreamRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS0_11StringTableE>
 6a8:	ldr	w0, [sp, #212]
 6ac:	cbz	w0, 6d4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x26c>
 6b0:	ldr	w0, [sp, #208]
 6b4:	cbz	w0, 6d4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x26c>
 6b8:	sub	w0, w0, #0x1
 6bc:	add	x0, x0, #0x1
 6c0:	lsl	x0, x0, #3
 6c4:	mov	x1, #0x0                   	// #0
 6c8:	add	x1, x1, #0x8
 6cc:	cmp	x0, x1
 6d0:	b.ne	6c8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x260>  // b.any
 6d4:	ldr	x0, [sp, #200]
 6d8:	bl	0 <free>
 6dc:	ldr	x19, [sp, #240]
 6e0:	ldr	w21, [sp, #248]
 6e4:	add	x21, x19, x21, lsl #3
 6e8:	cmp	x19, x21
 6ec:	b.eq	700 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x298>  // b.none
 6f0:	ldr	x0, [x19], #8
 6f4:	bl	0 <free>
 6f8:	cmp	x21, x19
 6fc:	b.ne	6f0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x288>  // b.any
 700:	ldr	x19, [sp, #288]
 704:	ldr	w21, [sp, #296]
 708:	add	x21, x19, x21, lsl #4
 70c:	cmp	x19, x21
 710:	b.eq	744 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x2dc>  // b.none
 714:	ldr	x0, [x19], #16
 718:	bl	0 <free>
 71c:	cmp	x21, x19
 720:	b.ne	714 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x2ac>  // b.any
 724:	ldr	x0, [sp, #288]
 728:	ldr	w1, [sp, #296]
 72c:	add	x1, x0, x1, lsl #4
 730:	cmp	x0, x1
 734:	b.eq	744 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x2dc>  // b.none
 738:	sub	x1, x1, #0x10
 73c:	cmp	x0, x1
 740:	b.ne	738 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x2d0>  // b.any
 744:	ldr	x0, [sp, #288]
 748:	add	x1, sp, #0x130
 74c:	cmp	x0, x1
 750:	b.eq	758 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x2f0>  // b.none
 754:	bl	0 <free>
 758:	ldr	x0, [sp, #240]
 75c:	add	x1, sp, #0x100
 760:	cmp	x0, x1
 764:	b.eq	76c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x304>  // b.none
 768:	bl	0 <free>
 76c:	ldrb	w0, [x20, #8]
 770:	and	w0, w0, #0xfffffffe
 774:	orr	w0, w0, #0x2
 778:	strb	w0, [x20, #8]
 77c:	str	x23, [x20]
 780:	ldr	x23, [sp, #48]
 784:	b	b98 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x730>
 788:	bl	0 <_ZNSt3_V216generic_categoryEv>
 78c:	mov	x1, x0
 790:	add	x8, sp, #0x158
 794:	adrp	x2, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 798:	add	x2, x2, #0x0
 79c:	mov	x0, #0x16                  	// #22
 7a0:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 7a4:	ldrb	w0, [x20, #8]
 7a8:	orr	w0, w0, #0x3
 7ac:	strb	w0, [x20, #8]
 7b0:	ldr	x0, [sp, #344]
 7b4:	ands	x1, x0, #0xfffffffffffffffe
 7b8:	cset	x0, ne  // ne = any
 7bc:	orr	x0, x0, x1
 7c0:	str	x0, [sp, #344]
 7c4:	ands	x0, x0, #0xfffffffffffffffe
 7c8:	b.eq	7d4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x36c>  // b.none
 7cc:	str	x0, [x20]
 7d0:	b	b98 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x730>
 7d4:	str	x23, [sp, #48]
 7d8:	adrp	x3, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 7dc:	add	x3, x3, #0x0
 7e0:	mov	w2, #0x1ce                 	// #462
 7e4:	adrp	x1, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 7e8:	add	x1, x1, #0x0
 7ec:	adrp	x0, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 7f0:	add	x0, x0, #0x0
 7f4:	bl	0 <__assert_fail>
 7f8:	add	x1, x3, #0x28
 7fc:	add	x0, sp, #0xf0
 800:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 804:	b	50c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0xa4>
 808:	add	x1, x19, #0x58
 80c:	add	x0, sp, #0x120
 810:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 814:	b	524 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0xbc>
 818:	ldr	w0, [sp, #212]
 81c:	cbz	w0, 844 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x3dc>
 820:	ldr	w0, [sp, #208]
 824:	cbz	w0, 844 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x3dc>
 828:	sub	w1, w0, #0x1
 82c:	add	x1, x1, #0x1
 830:	lsl	x1, x1, #3
 834:	mov	x0, #0x0                   	// #0
 838:	add	x0, x0, #0x8
 83c:	cmp	x1, x0
 840:	b.ne	838 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x3d0>  // b.any
 844:	ldr	x0, [sp, #200]
 848:	bl	0 <free>
 84c:	ldr	x19, [sp, #240]
 850:	ldr	w21, [sp, #248]
 854:	add	x21, x19, x21, lsl #3
 858:	cmp	x19, x21
 85c:	b.eq	870 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x408>  // b.none
 860:	ldr	x0, [x19], #8
 864:	bl	0 <free>
 868:	cmp	x21, x19
 86c:	b.ne	860 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x3f8>  // b.any
 870:	ldr	x19, [sp, #288]
 874:	ldr	w21, [sp, #296]
 878:	add	x21, x19, x21, lsl #4
 87c:	cmp	x19, x21
 880:	b.eq	8b4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x44c>  // b.none
 884:	ldr	x0, [x19], #16
 888:	bl	0 <free>
 88c:	cmp	x21, x19
 890:	b.ne	884 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x41c>  // b.any
 894:	ldr	x0, [sp, #288]
 898:	ldr	w1, [sp, #296]
 89c:	add	x1, x0, x1, lsl #4
 8a0:	cmp	x0, x1
 8a4:	b.eq	8b4 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x44c>  // b.none
 8a8:	sub	x1, x1, #0x10
 8ac:	cmp	x0, x1
 8b0:	b.ne	8a8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x440>  // b.any
 8b4:	ldr	x0, [sp, #288]
 8b8:	add	x1, sp, #0x130
 8bc:	cmp	x0, x1
 8c0:	b.eq	8c8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x460>  // b.none
 8c4:	bl	0 <free>
 8c8:	ldr	x0, [sp, #240]
 8cc:	add	x1, sp, #0x100
 8d0:	cmp	x0, x1
 8d4:	b.eq	59c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x134>  // b.none
 8d8:	bl	0 <free>
 8dc:	b	59c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x134>
 8e0:	str	x23, [sp, #48]
 8e4:	ldr	x0, [x3]
 8e8:	str	x0, [sp, #64]
 8ec:	ldr	w0, [x3, #8]
 8f0:	str	w0, [sp, #72]
 8f4:	ldr	w0, [x3, #12]
 8f8:	str	w0, [sp, #76]
 8fc:	ldr	w0, [x3, #16]
 900:	str	w0, [sp, #80]
 904:	ldr	w0, [x3, #20]
 908:	str	w0, [sp, #84]
 90c:	str	xzr, [x3]
 910:	str	wzr, [x3, #8]
 914:	str	wzr, [x3, #12]
 918:	str	wzr, [x3, #16]
 91c:	ldr	x0, [x3, #24]
 920:	str	x0, [sp, #88]
 924:	ldr	x0, [x3, #32]
 928:	str	x0, [sp, #96]
 92c:	add	x0, sp, #0x78
 930:	str	x0, [sp, #104]
 934:	str	wzr, [sp, #112]
 938:	mov	w0, #0x4                   	// #4
 93c:	str	w0, [sp, #116]
 940:	ldr	w0, [x3, #48]
 944:	cbnz	w0, bac <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x744>
 948:	add	x0, sp, #0xa8
 94c:	str	x0, [sp, #152]
 950:	str	wzr, [sp, #160]
 954:	str	wzr, [sp, #164]
 958:	ldr	w0, [x19, #96]
 95c:	cbnz	w0, bbc <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x754>
 960:	ldr	x1, [x19, #104]
 964:	str	x1, [sp, #168]
 968:	ldr	x1, [x19, #112]
 96c:	str	x1, [sp, #176]
 970:	str	xzr, [x19, #32]
 974:	str	xzr, [x19, #24]
 978:	str	xzr, [x19, #104]
 97c:	str	wzr, [x19, #48]
 980:	ldr	x1, [x19, #88]
 984:	ldr	w0, [x19, #96]
 988:	add	x0, x1, x0, lsl #4
 98c:	cmp	x1, x0
 990:	b.eq	9a0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x538>  // b.none
 994:	sub	x0, x0, #0x10
 998:	cmp	x1, x0
 99c:	b.ne	994 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x52c>  // b.any
 9a0:	str	wzr, [x19, #96]
 9a4:	ldr	x0, [x19, #128]
 9a8:	str	x0, [sp, #192]
 9ac:	mov	x0, #0x138                 	// #312
 9b0:	bl	0 <_Znwm>
 9b4:	mov	x23, x0
 9b8:	ldr	x0, [sp, #64]
 9bc:	str	x0, [sp, #200]
 9c0:	ldr	w0, [sp, #72]
 9c4:	str	w0, [sp, #208]
 9c8:	ldr	w0, [sp, #76]
 9cc:	str	w0, [sp, #212]
 9d0:	ldr	w0, [sp, #80]
 9d4:	str	w0, [sp, #216]
 9d8:	ldr	w0, [sp, #84]
 9dc:	str	w0, [sp, #220]
 9e0:	str	xzr, [sp, #64]
 9e4:	str	wzr, [sp, #72]
 9e8:	str	wzr, [sp, #76]
 9ec:	str	wzr, [sp, #80]
 9f0:	ldr	x0, [sp, #88]
 9f4:	str	x0, [sp, #224]
 9f8:	ldr	x0, [sp, #96]
 9fc:	str	x0, [sp, #232]
 a00:	add	x0, sp, #0x100
 a04:	str	x0, [sp, #240]
 a08:	str	wzr, [sp, #248]
 a0c:	mov	w0, #0x4                   	// #4
 a10:	str	w0, [sp, #252]
 a14:	ldr	w0, [sp, #112]
 a18:	cbnz	w0, bcc <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x764>
 a1c:	add	x0, sp, #0x130
 a20:	str	x0, [sp, #288]
 a24:	str	wzr, [sp, #296]
 a28:	str	wzr, [sp, #300]
 a2c:	ldr	w0, [sp, #160]
 a30:	cbnz	w0, bdc <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x774>
 a34:	ldr	x0, [sp, #168]
 a38:	str	x0, [sp, #304]
 a3c:	ldr	x0, [sp, #176]
 a40:	str	x0, [sp, #312]
 a44:	str	xzr, [sp, #96]
 a48:	str	xzr, [sp, #88]
 a4c:	str	xzr, [sp, #168]
 a50:	str	wzr, [sp, #112]
 a54:	ldr	x0, [sp, #152]
 a58:	ldr	w3, [sp, #160]
 a5c:	add	x3, x0, x3, lsl #4
 a60:	cmp	x0, x3
 a64:	b.eq	a74 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x60c>  // b.none
 a68:	sub	x3, x3, #0x10
 a6c:	cmp	x0, x3
 a70:	b.ne	a68 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x600>  // b.any
 a74:	str	wzr, [sp, #160]
 a78:	ldr	x0, [sp, #192]
 a7c:	str	x0, [sp, #328]
 a80:	mov	w0, #0x1                   	// #1
 a84:	strb	w0, [sp, #336]
 a88:	add	x4, sp, #0xc8
 a8c:	mov	w3, w22
 a90:	mov	x2, x21
 a94:	mov	w1, #0x2                   	// #2
 a98:	mov	x0, x23
 a9c:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializerC2ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE>
 aa0:	ldrb	w0, [sp, #336]
 aa4:	cbnz	w0, bec <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x784>
 aa8:	adrp	x0, 0 <_ZTVN4llvm7remarks26YAMLStrTabRemarkSerializerE>
 aac:	ldr	x0, [x0]
 ab0:	add	x0, x0, #0x10
 ab4:	str	x0, [x23]
 ab8:	strb	wzr, [x23, #304]
 abc:	ldr	w0, [sp, #76]
 ac0:	cbz	w0, ae8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x680>
 ac4:	ldr	w0, [sp, #72]
 ac8:	cbz	w0, ae8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x680>
 acc:	sub	w1, w0, #0x1
 ad0:	add	x1, x1, #0x1
 ad4:	lsl	x1, x1, #3
 ad8:	mov	x0, #0x0                   	// #0
 adc:	add	x0, x0, #0x8
 ae0:	cmp	x1, x0
 ae4:	b.ne	adc <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x674>  // b.any
 ae8:	ldr	x0, [sp, #64]
 aec:	bl	0 <free>
 af0:	ldr	x19, [sp, #104]
 af4:	ldr	w21, [sp, #112]
 af8:	add	x21, x19, x21, lsl #3
 afc:	cmp	x19, x21
 b00:	b.eq	b14 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x6ac>  // b.none
 b04:	ldr	x0, [x19], #8
 b08:	bl	0 <free>
 b0c:	cmp	x21, x19
 b10:	b.ne	b04 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x69c>  // b.any
 b14:	ldr	x19, [sp, #152]
 b18:	ldr	w21, [sp, #160]
 b1c:	add	x21, x19, x21, lsl #4
 b20:	cmp	x19, x21
 b24:	b.eq	b58 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x6f0>  // b.none
 b28:	ldr	x0, [x19], #16
 b2c:	bl	0 <free>
 b30:	cmp	x21, x19
 b34:	b.ne	b28 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x6c0>  // b.any
 b38:	ldr	x0, [sp, #152]
 b3c:	ldr	w1, [sp, #160]
 b40:	add	x1, x0, x1, lsl #4
 b44:	cmp	x0, x1
 b48:	b.eq	b58 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x6f0>  // b.none
 b4c:	sub	x1, x1, #0x10
 b50:	cmp	x0, x1
 b54:	b.ne	b4c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x6e4>  // b.any
 b58:	ldr	x0, [sp, #152]
 b5c:	add	x1, sp, #0xa8
 b60:	cmp	x0, x1
 b64:	b.eq	b6c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x704>  // b.none
 b68:	bl	0 <free>
 b6c:	ldr	x0, [sp, #104]
 b70:	add	x1, sp, #0x78
 b74:	cmp	x0, x1
 b78:	b.eq	b80 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x718>  // b.none
 b7c:	bl	0 <free>
 b80:	ldrb	w0, [x20, #8]
 b84:	and	w0, w0, #0xfffffffe
 b88:	orr	w0, w0, #0x2
 b8c:	strb	w0, [x20, #8]
 b90:	str	x23, [x20]
 b94:	ldr	x23, [sp, #48]
 b98:	mov	x0, x20
 b9c:	ldp	x19, x20, [sp, #16]
 ba0:	ldp	x21, x22, [sp, #32]
 ba4:	ldp	x29, x30, [sp], #352
 ba8:	ret
 bac:	add	x1, x3, #0x28
 bb0:	add	x0, sp, #0x68
 bb4:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 bb8:	b	948 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x4e0>
 bbc:	add	x1, x19, #0x58
 bc0:	add	x0, sp, #0x98
 bc4:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 bc8:	b	960 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x4f8>
 bcc:	add	x1, sp, #0x68
 bd0:	add	x0, sp, #0xf0
 bd4:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 bd8:	b	a1c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x5b4>
 bdc:	add	x1, sp, #0x98
 be0:	add	x0, sp, #0x120
 be4:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 be8:	b	a34 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x5cc>
 bec:	ldr	w0, [sp, #212]
 bf0:	cbz	w0, c18 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x7b0>
 bf4:	ldr	w0, [sp, #208]
 bf8:	cbz	w0, c18 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x7b0>
 bfc:	sub	w1, w0, #0x1
 c00:	add	x1, x1, #0x1
 c04:	lsl	x1, x1, #3
 c08:	mov	x0, #0x0                   	// #0
 c0c:	add	x0, x0, #0x8
 c10:	cmp	x0, x1
 c14:	b.ne	c0c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x7a4>  // b.any
 c18:	ldr	x0, [sp, #200]
 c1c:	bl	0 <free>
 c20:	ldr	x19, [sp, #240]
 c24:	ldr	w21, [sp, #248]
 c28:	add	x21, x19, x21, lsl #3
 c2c:	cmp	x19, x21
 c30:	b.eq	c44 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x7dc>  // b.none
 c34:	ldr	x0, [x19], #8
 c38:	bl	0 <free>
 c3c:	cmp	x21, x19
 c40:	b.ne	c34 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x7cc>  // b.any
 c44:	ldr	x19, [sp, #288]
 c48:	ldr	w21, [sp, #296]
 c4c:	add	x21, x19, x21, lsl #4
 c50:	cmp	x19, x21
 c54:	b.eq	c88 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x820>  // b.none
 c58:	ldr	x0, [x19], #16
 c5c:	bl	0 <free>
 c60:	cmp	x21, x19
 c64:	b.ne	c58 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x7f0>  // b.any
 c68:	ldr	x1, [sp, #288]
 c6c:	ldr	w0, [sp, #296]
 c70:	add	x0, x1, x0, lsl #4
 c74:	cmp	x1, x0
 c78:	b.eq	c88 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x820>  // b.none
 c7c:	sub	x0, x0, #0x10
 c80:	cmp	x1, x0
 c84:	b.ne	c7c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x814>  // b.any
 c88:	ldr	x0, [sp, #288]
 c8c:	add	x1, sp, #0x130
 c90:	cmp	x0, x1
 c94:	b.eq	c9c <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x834>  // b.none
 c98:	bl	0 <free>
 c9c:	ldr	x0, [sp, #240]
 ca0:	add	x1, sp, #0x100
 ca4:	cmp	x0, x1
 ca8:	b.eq	aa8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x640>  // b.none
 cac:	bl	0 <free>
 cb0:	b	aa8 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x640>
 cb4:	add	x1, x3, #0x28
 cb8:	add	x0, sp, #0xf0
 cbc:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 cc0:	b	628 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x1c0>
 cc4:	add	x1, x19, #0x58
 cc8:	add	x0, sp, #0x120
 ccc:	bl	0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 cd0:	b	640 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamENS0_11StringTableE+0x1d8>
 cd4:	mov	w2, #0x35                  	// #53
 cd8:	adrp	x1, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 cdc:	add	x1, x1, #0x0
 ce0:	adrp	x0, 0 <_ZN4llvm7remarks22createRemarkSerializerENS0_6FormatENS0_14SerializerModeERNS_11raw_ostreamE>
 ce4:	add	x0, x0, #0x0
 ce8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	str	x1, [sp, #56]
  18:	mov	x20, x1
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	f4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf4>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	add	x2, x2, #0x2
  30:	orr	x2, x2, x2, lsr #1
  34:	orr	x2, x2, x2, lsr #2
  38:	orr	x2, x2, x2, lsr #4
  3c:	orr	x2, x2, x2, lsr #8
  40:	orr	x0, x2, x2, lsr #16
  44:	orr	x2, x0, x2, lsr #32
  48:	add	x2, x2, #0x1
  4c:	str	x2, [sp, #64]
  50:	cmp	x20, x2
  54:	add	x0, sp, #0x40
  58:	add	x1, sp, #0x38
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #72]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	add	x1, sp, #0x48
  74:	csel	x0, x1, x0, hi  // hi = pmore
  78:	ldr	x21, [x0]
  7c:	lsl	x22, x21, #4
  80:	mov	x0, x22
  84:	bl	0 <malloc>
  88:	mov	x20, x0
  8c:	cbz	x0, 108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x108>
  90:	ldr	x6, [x19]
  94:	ldr	w1, [x19, #8]
  98:	add	x1, x6, x1, lsl #4
  9c:	cmp	x1, x6
  a0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.none
  a4:	mov	x2, x6
  a8:	mov	x3, x20
  ac:	ldp	x4, x5, [x2], #16
  b0:	stp	x4, x5, [x3], #16
  b4:	cmp	x1, x2
  b8:	b.ne	ac <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xac>  // b.any
  bc:	sub	x1, x1, #0x10
  c0:	cmp	x1, x6
  c4:	b.ne	bc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xbc>  // b.any
  c8:	mov	x1, x19
  cc:	ldr	x0, [x1], #16
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xdc>  // b.none
  d8:	bl	0 <free>
  dc:	str	x20, [x19]
  e0:	str	w21, [x19, #12]
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret
  f4:	mov	w1, #0x1                   	// #1
  f8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x28>
 108:	cbnz	x22, 11c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x11c>
 10c:	mov	x0, #0x1                   	// #1
 110:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 114:	mov	x20, x0
 118:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>
 11c:	mov	w1, #0x1                   	// #1
 120:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 12c:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPvEaSEOS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	cmp	x0, x1
  14:	b.eq	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x1
  20:	mov	x20, x1
  24:	ldr	x1, [x20], #16
  28:	cmp	x20, x1
  2c:	b.eq	7c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x7c>  // b.none
  30:	mov	x1, x0
  34:	ldr	x0, [x1], #16
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19]
  48:	str	x0, [x21]
  4c:	ldr	w0, [x19, #8]
  50:	str	w0, [x21, #8]
  54:	ldr	w0, [x19, #12]
  58:	str	w0, [x21, #12]
  5c:	str	x20, [x19]
  60:	str	wzr, [x19, #12]
  64:	str	wzr, [x19, #8]
  68:	ldp	x19, x20, [sp, #16]
  6c:	mov	x0, x21
  70:	ldp	x21, x22, [sp, #32]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	str	x23, [sp, #48]
  80:	ldr	w22, [x19, #8]
  84:	mov	w23, w22
  88:	ldr	w20, [x0, #8]
  8c:	cmp	x20, w22, uxtw
  90:	b.cc	e4 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xe4>  // b.lo, b.ul, b.last
  94:	cbz	x23, b0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xb0>
  98:	lsl	x2, x23, #3
  9c:	ldr	x0, [x0]
  a0:	bl	0 <memmove>
  a4:	ldr	w0, [x21, #12]
  a8:	cmp	x23, x0
  ac:	b.hi	c4 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xc4>  // b.pmore
  b0:	str	w22, [x21, #8]
  b4:	str	wzr, [x19, #8]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x23, [sp, #48]
  c0:	b	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>
  c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x43                  	// #67
  d0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  d4:	add	x1, x1, #0x0
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <__assert_fail>
  e4:	ldr	w0, [x0, #12]
  e8:	cmp	x23, x0
  ec:	b.hi	150 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x150>  // b.pmore
  f0:	cbz	x20, 100 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x100>
  f4:	lsl	x2, x20, #3
  f8:	ldr	x0, [x21]
  fc:	bl	0 <memmove>
 100:	ldr	x0, [x19]
 104:	lsl	x20, x20, #3
 108:	add	x1, x0, x20
 10c:	ldr	w2, [x19, #8]
 110:	lsl	x2, x2, #3
 114:	add	x0, x0, x2
 118:	cmp	x1, x0
 11c:	b.eq	130 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x130>  // b.none
 120:	ldr	x0, [x21]
 124:	sub	x2, x2, x20
 128:	add	x0, x0, x20
 12c:	bl	0 <memcpy>
 130:	ldr	w0, [x21, #12]
 134:	cmp	x23, x0
 138:	b.hi	170 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x170>  // b.pmore
 13c:	str	w22, [x21, #8]
 140:	str	wzr, [x19, #8]
 144:	ldp	x19, x20, [sp, #16]
 148:	ldr	x23, [sp, #48]
 14c:	b	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>
 150:	str	wzr, [x21, #8]
 154:	mov	x3, #0x8                   	// #8
 158:	mov	x2, x23
 15c:	add	x1, x21, #0x10
 160:	mov	x0, x21
 164:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 168:	mov	x20, #0x0                   	// #0
 16c:	b	100 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x100>
 170:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x43                  	// #67
 17c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 180:	add	x1, x1, #0x0
 184:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 188:	add	x0, x0, #0x0
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x20, x1
  20:	mov	x21, x1
  24:	ldr	x1, [x21], #16
  28:	cmp	x21, x1
  2c:	b.eq	9c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x9c>  // b.none
  30:	ldr	x0, [x0]
  34:	ldr	w2, [x19, #8]
  38:	add	x2, x0, x2, lsl #4
  3c:	cmp	x0, x2
  40:	b.eq	50 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x50>  // b.none
  44:	sub	x2, x2, #0x10
  48:	cmp	x0, x2
  4c:	b.ne	44 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x44>  // b.any
  50:	mov	x1, x19
  54:	ldr	x0, [x1], #16
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20]
  68:	str	x0, [x19]
  6c:	ldr	w0, [x20, #8]
  70:	str	w0, [x19, #8]
  74:	ldr	w0, [x20, #12]
  78:	str	w0, [x19, #12]
  7c:	str	x21, [x20]
  80:	str	wzr, [x20, #12]
  84:	str	wzr, [x20, #8]
  88:	ldp	x21, x22, [sp, #32]
  8c:	mov	x0, x19
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	ldr	w21, [x20, #8]
  a0:	mov	w22, w21
  a4:	ldr	w0, [x0, #8]
  a8:	cmp	x0, w21, uxtw
  ac:	b.cc	120 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x120>  // b.lo, b.ul, b.last
  b0:	ldr	x2, [x19]
  b4:	cbz	x22, 21c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x21c>
  b8:	lsl	x5, x22, #4
  bc:	add	x4, x1, x5
  c0:	mov	x0, x2
  c4:	ldr	x3, [x1]
  c8:	str	x3, [x0]
  cc:	ldr	x3, [x1, #8]
  d0:	str	x3, [x0, #8]
  d4:	add	x1, x1, #0x10
  d8:	add	x0, x0, #0x10
  dc:	cmp	x1, x4
  e0:	b.ne	c4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0xc4>  // b.any
  e4:	add	x2, x2, x5
  e8:	ldr	w0, [x19, #8]
  ec:	ldr	x1, [x19]
  f0:	add	x0, x1, x0, lsl #4
  f4:	cmp	x0, x2
  f8:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
  fc:	b	234 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x234>
 100:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x43                  	// #67
 10c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 110:	add	x1, x1, #0x0
 114:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <__assert_fail>
 120:	ldr	w2, [x19, #12]
 124:	cmp	x22, x2
 128:	b.ls	1cc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1cc>  // b.plast
 12c:	ldr	x1, [x19]
 130:	add	x0, x1, x0, lsl #4
 134:	cmp	x0, x1
 138:	b.eq	148 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x148>  // b.none
 13c:	sub	x0, x0, #0x10
 140:	cmp	x0, x1
 144:	b.ne	13c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x13c>  // b.any
 148:	str	wzr, [x19, #8]
 14c:	mov	x1, x22
 150:	mov	x0, x19
 154:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 158:	mov	x0, #0x0                   	// #0
 15c:	ldr	x2, [x20]
 160:	lsl	x0, x0, #4
 164:	add	x1, x2, x0
 168:	ldr	w4, [x20, #8]
 16c:	add	x4, x2, x4, lsl #4
 170:	ldr	x2, [x19]
 174:	add	x0, x2, x0
 178:	cmp	x1, x4
 17c:	b.eq	190 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x190>  // b.none
 180:	ldp	x2, x3, [x1], #16
 184:	stp	x2, x3, [x0], #16
 188:	cmp	x4, x1
 18c:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 190:	ldr	w0, [x19, #12]
 194:	cmp	x22, x0
 198:	b.hi	1fc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1fc>  // b.pmore
 19c:	str	w21, [x19, #8]
 1a0:	ldr	x1, [x20]
 1a4:	ldr	w0, [x20, #8]
 1a8:	add	x0, x1, x0, lsl #4
 1ac:	cmp	x1, x0
 1b0:	b.eq	1c0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1c0>  // b.none
 1b4:	sub	x0, x0, #0x10
 1b8:	cmp	x1, x0
 1bc:	b.ne	1b4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1b4>  // b.any
 1c0:	str	wzr, [x20, #8]
 1c4:	ldp	x21, x22, [sp, #32]
 1c8:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 1cc:	cbz	x0, 270 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x270>
 1d0:	ldr	x2, [x19]
 1d4:	add	x4, x1, x0, lsl #4
 1d8:	ldr	x3, [x1]
 1dc:	str	x3, [x2]
 1e0:	ldr	x3, [x1, #8]
 1e4:	str	x3, [x2, #8]
 1e8:	add	x1, x1, #0x10
 1ec:	add	x2, x2, #0x10
 1f0:	cmp	x1, x4
 1f4:	b.ne	1d8 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1d8>  // b.any
 1f8:	b	15c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x15c>
 1fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x43                  	// #67
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 20c:	add	x1, x1, #0x0
 210:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 214:	add	x0, x0, #0x0
 218:	bl	0 <__assert_fail>
 21c:	add	x0, x2, x0, lsl #4
 220:	cmp	x2, x0
 224:	b.eq	240 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x240>  // b.none
 228:	sub	x0, x0, #0x10
 22c:	cmp	x0, x2
 230:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
 234:	ldr	w0, [x19, #12]
 238:	cmp	x22, x0
 23c:	b.hi	100 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x100>  // b.pmore
 240:	str	w21, [x19, #8]
 244:	ldr	x1, [x20]
 248:	ldr	w0, [x20, #8]
 24c:	add	x0, x1, x0, lsl #4
 250:	cmp	x1, x0
 254:	b.eq	264 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x264>  // b.none
 258:	sub	x0, x0, #0x10
 25c:	cmp	x1, x0
 260:	b.ne	258 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x258>  // b.any
 264:	str	wzr, [x20, #8]
 268:	ldp	x21, x22, [sp, #32]
 26c:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 270:	ldr	x1, [x20]
 274:	ldr	w4, [x20, #8]
 278:	add	x4, x1, x4, lsl #4
 27c:	ldr	x0, [x19]
 280:	cmp	x1, x4
 284:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 288:	b	19c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x19c>

RemarkStringTable.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x22, x8
  20:	mov	x19, x0
  24:	ldr	w27, [x0, #12]
  28:	str	x1, [sp, #160]
  2c:	str	x2, [sp, #168]
  30:	str	w27, [sp, #176]
  34:	str	x1, [sp, #136]
  38:	str	x2, [sp, #144]
  3c:	ldr	x2, [sp, #176]
  40:	str	x2, [sp, #152]
  44:	mov	x20, x1
  48:	ldr	x24, [sp, #144]
  4c:	mov	x2, x24
  50:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  54:	mov	w21, w0
  58:	mov	w26, w0
  5c:	ldr	x23, [x19]
  60:	add	x1, x23, w21, uxtw #3
  64:	ldr	x0, [x23, x26, lsl #3]
  68:	cmp	x0, #0x0
  6c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
  70:	b.ne	168 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x168>  // b.any
  74:	cmn	x0, #0x8
  78:	b.eq	1c8 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x1c8>  // b.none
  7c:	add	x25, x24, #0x11
  80:	ldr	x0, [x19, #104]
  84:	add	x0, x0, x25
  88:	str	x0, [x19, #104]
  8c:	ldr	x1, [x19, #24]
  90:	add	x0, x1, #0x7
  94:	and	x0, x0, #0xfffffffffffffff8
  98:	sub	x0, x0, x1
  9c:	adds	x3, x25, x0
  a0:	b.cs	1d8 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x1d8>  // b.hs, b.nlast
  a4:	ldr	x2, [x19, #32]
  a8:	sub	x2, x2, x1
  ac:	cmp	x3, x2
  b0:	b.ls	1f8 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x1f8>  // b.plast
  b4:	add	x28, x24, #0x18
  b8:	cmp	x28, #0x1, lsl #12
  bc:	b.ls	3f4 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x3f4>  // b.plast
  c0:	mov	x0, x28
  c4:	bl	0 <malloc>
  c8:	str	x0, [sp, #96]
  cc:	cbz	x0, 298 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x298>
  d0:	ldr	w0, [x19, #100]
  d4:	ldr	w1, [x19, #96]
  d8:	cmp	w1, w0
  dc:	b.cs	2ac <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x2ac>  // b.hs, b.nlast
  e0:	ldr	w0, [x19, #96]
  e4:	lsl	x0, x0, #4
  e8:	ldr	x1, [x19, #88]
  ec:	add	x2, x1, x0
  f0:	ldr	x3, [sp, #96]
  f4:	str	x3, [x1, x0]
  f8:	str	x28, [x2, #8]
  fc:	ldr	w0, [x19, #96]
 100:	mov	w1, w0
 104:	add	x1, x1, #0x1
 108:	ldr	w2, [x19, #100]
 10c:	cmp	x1, x2
 110:	b.hi	394 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x394>  // b.pmore
 114:	add	w0, w0, #0x1
 118:	str	w0, [x19, #96]
 11c:	ldr	x0, [sp, #96]
 120:	adds	x1, x0, #0x7
 124:	b.cs	3b4 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x3b4>  // b.hs, b.nlast
 128:	and	x1, x1, #0xfffffffffffffff8
 12c:	add	x25, x25, x1
 130:	ldr	x0, [sp, #96]
 134:	add	x28, x0, x28
 138:	cmp	x25, x28
 13c:	b.hi	3d4 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x3d4>  // b.pmore
 140:	mov	x28, x1
 144:	cbz	x1, 544 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x544>
 148:	str	x24, [x1]
 14c:	str	w27, [x1, #8]
 150:	add	x25, x1, #0x10
 154:	mov	x2, x24
 158:	mov	x1, x20
 15c:	mov	x0, x25
 160:	bl	0 <memcpy>
 164:	b	218 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x218>
 168:	ldr	x0, [x23, x26, lsl #3]
 16c:	cmp	x0, #0x0
 170:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 174:	b.ne	190 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x190>  // b.any
 178:	add	x0, x1, #0x8
 17c:	mov	x1, x0
 180:	ldr	x2, [x0], #8
 184:	cmp	x2, #0x0
 188:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 18c:	b.eq	17c <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x17c>  // b.none
 190:	ldr	x0, [x1]
 194:	ldr	x1, [x0]
 198:	ldr	w2, [x0, #8]
 19c:	str	w2, [x22]
 1a0:	add	x0, x0, #0x10
 1a4:	str	x0, [x22, #8]
 1a8:	str	x1, [x22, #16]
 1ac:	ldp	x19, x20, [sp, #16]
 1b0:	ldp	x21, x22, [sp, #32]
 1b4:	ldp	x23, x24, [sp, #48]
 1b8:	ldp	x25, x26, [sp, #64]
 1bc:	ldp	x27, x28, [sp, #80]
 1c0:	ldp	x29, x30, [sp], #192
 1c4:	ret
 1c8:	ldr	w0, [x19, #16]
 1cc:	sub	w0, w0, #0x1
 1d0:	str	w0, [x19, #16]
 1d4:	b	7c <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x7c>
 1d8:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 1dc:	add	x3, x3, #0x0
 1e0:	mov	w2, #0xdc                  	// #220
 1e4:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 1e8:	add	x1, x1, #0x0
 1ec:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 1f0:	add	x0, x0, #0x0
 1f4:	bl	0 <__assert_fail>
 1f8:	add	x28, x1, x0
 1fc:	add	x25, x28, x25
 200:	str	x25, [x19, #24]
 204:	cbz	x28, 544 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x544>
 208:	str	x24, [x28]
 20c:	str	w27, [x28, #8]
 210:	add	x25, x28, #0x10
 214:	cbnz	x24, 154 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x154>
 218:	strb	wzr, [x25, x24]
 21c:	str	x28, [x23, x26, lsl #3]
 220:	ldr	w0, [x19, #12]
 224:	add	w0, w0, #0x1
 228:	str	w0, [x19, #12]
 22c:	ldr	w1, [x19, #16]
 230:	add	w0, w0, w1
 234:	ldr	w1, [x19, #8]
 238:	cmp	w0, w1
 23c:	b.hi	564 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x564>  // b.pmore
 240:	mov	w1, w21
 244:	mov	x0, x19
 248:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 24c:	ldr	x2, [x19]
 250:	add	x1, x2, w0, uxtw #3
 254:	ldr	x0, [x2, w0, uxtw #3]
 258:	cmp	x0, #0x0
 25c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 260:	b.ne	27c <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x27c>  // b.any
 264:	add	x0, x1, #0x8
 268:	mov	x1, x0
 26c:	ldr	x2, [x0], #8
 270:	cmp	x2, #0x0
 274:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 278:	b.eq	268 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x268>  // b.none
 27c:	ldr	x3, [x1]
 280:	ldr	x0, [x19, #128]
 284:	add	x2, x0, #0x1
 288:	ldr	x0, [x3]
 28c:	add	x0, x0, x2
 290:	str	x0, [x19, #128]
 294:	b	190 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x190>
 298:	mov	w1, #0x1                   	// #1
 29c:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 2a0:	add	x0, x0, #0x0
 2a4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 2a8:	b	d0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0xd0>
 2ac:	mov	w0, w0
 2b0:	add	x0, x0, #0x2
 2b4:	orr	x0, x0, x0, lsr #1
 2b8:	orr	x0, x0, x0, lsr #2
 2bc:	orr	x0, x0, x0, lsr #4
 2c0:	orr	x0, x0, x0, lsr #8
 2c4:	orr	x1, x0, x0, lsr #16
 2c8:	orr	x0, x1, x0, lsr #32
 2cc:	add	x0, x0, #0x1
 2d0:	str	x0, [sp, #128]
 2d4:	mov	x1, #0xffffffff            	// #4294967295
 2d8:	str	x1, [sp, #184]
 2dc:	cmp	x0, x1
 2e0:	add	x0, sp, #0x80
 2e4:	add	x1, sp, #0xb8
 2e8:	csel	x0, x0, x1, ls  // ls = plast
 2ec:	ldr	x0, [x0]
 2f0:	str	x0, [sp, #112]
 2f4:	lsl	x0, x0, #4
 2f8:	str	x0, [sp, #120]
 2fc:	bl	0 <malloc>
 300:	str	x0, [sp, #104]
 304:	cbz	x0, 368 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x368>
 308:	ldr	x3, [x19, #88]
 30c:	ldr	w0, [x19, #96]
 310:	add	x0, x3, x0, lsl #4
 314:	cmp	x3, x0
 318:	b.eq	340 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x340>  // b.none
 31c:	mov	x1, x3
 320:	ldr	x2, [sp, #104]
 324:	ldp	x4, x5, [x1], #16
 328:	stp	x4, x5, [x2], #16
 32c:	cmp	x0, x1
 330:	b.ne	324 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x324>  // b.any
 334:	sub	x0, x0, #0x10
 338:	cmp	x3, x0
 33c:	b.ne	334 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x334>  // b.any
 340:	ldr	x0, [x19, #88]
 344:	add	x1, x19, #0x68
 348:	cmp	x0, x1
 34c:	b.eq	354 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x354>  // b.none
 350:	bl	0 <free>
 354:	ldr	x0, [sp, #104]
 358:	str	x0, [x19, #88]
 35c:	ldr	w0, [sp, #112]
 360:	str	w0, [x19, #100]
 364:	b	e0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0xe0>
 368:	ldr	x0, [sp, #120]
 36c:	cbnz	x0, 380 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x380>
 370:	mov	x0, #0x1                   	// #1
 374:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 378:	str	x0, [sp, #104]
 37c:	b	308 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x308>
 380:	mov	w1, #0x1                   	// #1
 384:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 388:	add	x0, x0, #0x0
 38c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 390:	b	308 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x308>
 394:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 398:	add	x3, x3, #0x0
 39c:	mov	w2, #0x43                  	// #67
 3a0:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3a4:	add	x1, x1, #0x0
 3a8:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3ac:	add	x0, x0, #0x0
 3b0:	bl	0 <__assert_fail>
 3b4:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3b8:	add	x3, x3, #0x0
 3bc:	mov	w2, #0xba                  	// #186
 3c0:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3c4:	add	x1, x1, #0x0
 3c8:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3cc:	add	x0, x0, #0x0
 3d0:	bl	0 <__assert_fail>
 3d4:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3d8:	add	x3, x3, #0x0
 3dc:	mov	w2, #0xfb                  	// #251
 3e0:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3e4:	add	x1, x1, #0x0
 3e8:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 3ec:	add	x0, x0, #0x0
 3f0:	bl	0 <__assert_fail>
 3f4:	ldr	w0, [x19, #48]
 3f8:	lsr	w1, w0, #7
 3fc:	cmp	w0, #0xeff
 400:	b.ls	490 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x490>  // b.plast
 404:	mov	x0, #0x40000000000         	// #4398046511104
 408:	bl	0 <malloc>
 40c:	mov	x28, x0
 410:	cbz	x0, 4ac <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x4ac>
 414:	mov	x0, #0x40000000000         	// #4398046511104
 418:	str	x0, [sp, #96]
 41c:	ldr	w1, [x19, #48]
 420:	ldr	w0, [x19, #52]
 424:	cmp	w1, w0
 428:	b.cs	4cc <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x4cc>  // b.hs, b.nlast
 42c:	ldr	w1, [x19, #48]
 430:	ldr	x0, [x19, #40]
 434:	str	x28, [x0, x1, lsl #3]
 438:	ldr	w0, [x19, #48]
 43c:	mov	w1, w0
 440:	add	x1, x1, #0x1
 444:	ldr	w2, [x19, #52]
 448:	cmp	x1, x2
 44c:	b.hi	4e4 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x4e4>  // b.pmore
 450:	add	w0, w0, #0x1
 454:	str	w0, [x19, #48]
 458:	str	x28, [x19, #24]
 45c:	ldr	x0, [sp, #96]
 460:	add	x1, x28, x0
 464:	str	x1, [x19, #32]
 468:	adds	x0, x28, #0x7
 46c:	b.cs	504 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x504>  // b.hs, b.nlast
 470:	and	x0, x0, #0xfffffffffffffff8
 474:	add	x2, x25, x0
 478:	cmp	x1, x2
 47c:	b.cc	524 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x524>  // b.lo, b.ul, b.last
 480:	mov	x28, x0
 484:	add	x25, x0, x25
 488:	str	x25, [x19, #24]
 48c:	b	204 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x204>
 490:	mov	x0, #0x1000                	// #4096
 494:	lsl	x0, x0, x1
 498:	str	x0, [sp, #96]
 49c:	bl	0 <malloc>
 4a0:	mov	x28, x0
 4a4:	cbnz	x0, 41c <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x41c>
 4a8:	b	4b4 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x4b4>
 4ac:	mov	x0, #0x40000000000         	// #4398046511104
 4b0:	str	x0, [sp, #96]
 4b4:	mov	w1, #0x1                   	// #1
 4b8:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 4bc:	add	x0, x0, #0x0
 4c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 4c4:	mov	x28, #0x0                   	// #0
 4c8:	b	41c <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x41c>
 4cc:	mov	x3, #0x8                   	// #8
 4d0:	mov	x2, #0x0                   	// #0
 4d4:	add	x1, x19, #0x38
 4d8:	add	x0, x19, #0x28
 4dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 4e0:	b	42c <_ZN4llvm7remarks11StringTable3addENS_9StringRefE+0x42c>
 4e4:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 4e8:	add	x3, x3, #0x0
 4ec:	mov	w2, #0x43                  	// #67
 4f0:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 4f4:	add	x1, x1, #0x0
 4f8:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 4fc:	add	x0, x0, #0x0
 500:	bl	0 <__assert_fail>
 504:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 508:	add	x3, x3, #0x0
 50c:	mov	w2, #0xba                  	// #186
 510:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 514:	add	x1, x1, #0x0
 518:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 51c:	add	x0, x0, #0x0
 520:	bl	0 <__assert_fail>
 524:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 528:	add	x3, x3, #0x0
 52c:	mov	w2, #0x105                 	// #261
 530:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 534:	add	x1, x1, #0x0
 538:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 53c:	add	x0, x0, #0x0
 540:	bl	0 <__assert_fail>
 544:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 548:	add	x3, x3, #0x0
 54c:	mov	w2, #0xbd                  	// #189
 550:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 554:	add	x1, x1, #0x0
 558:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 55c:	add	x0, x0, #0x0
 560:	bl	0 <__assert_fail>
 564:	adrp	x3, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 568:	add	x3, x3, #0x0
 56c:	mov	w2, #0x1bb                 	// #443
 570:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 574:	add	x1, x1, #0x0
 578:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 57c:	add	x0, x0, #0x0
 580:	bl	0 <__assert_fail>

0000000000000584 <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE>:
 584:	stp	x29, x30, [sp, #-240]!
 588:	mov	x29, sp
 58c:	stp	x19, x20, [sp, #16]
 590:	stp	x21, x22, [sp, #32]
 594:	mov	x20, x0
 598:	mov	x21, x1
 59c:	add	x8, sp, #0x78
 5a0:	ldp	x1, x2, [x1, #8]
 5a4:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 5a8:	ldp	x0, x1, [sp, #128]
 5ac:	stp	x0, x1, [x21, #8]
 5b0:	add	x8, sp, #0x60
 5b4:	ldp	x1, x2, [x21, #24]
 5b8:	mov	x0, x20
 5bc:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 5c0:	ldp	x0, x1, [sp, #104]
 5c4:	stp	x0, x1, [x21, #24]
 5c8:	add	x8, sp, #0x48
 5cc:	ldp	x1, x2, [x21, #40]
 5d0:	mov	x0, x20
 5d4:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 5d8:	ldp	x0, x1, [sp, #80]
 5dc:	stp	x0, x1, [x21, #40]
 5e0:	ldrb	w0, [x21, #80]
 5e4:	cbnz	w0, 610 <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE+0x8c>
 5e8:	ldr	x19, [x21, #104]
 5ec:	ldr	w21, [x21, #112]
 5f0:	add	x21, x19, x21, lsl #6
 5f4:	cmp	x21, x19
 5f8:	b.eq	690 <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE+0x10c>  // b.none
 5fc:	stp	x23, x24, [sp, #48]
 600:	add	x23, sp, #0xc0
 604:	add	x22, sp, #0xa8
 608:	add	x24, sp, #0xd8
 60c:	b	650 <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE+0xcc>
 610:	add	x8, sp, #0x90
 614:	ldp	x1, x2, [x21, #56]
 618:	mov	x0, x20
 61c:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 620:	ldp	x0, x1, [sp, #152]
 624:	stp	x0, x1, [x21, #56]
 628:	b	5e8 <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE+0x64>
 62c:	mov	x8, x24
 630:	ldp	x1, x2, [x19, #32]
 634:	mov	x0, x20
 638:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 63c:	ldp	x0, x1, [sp, #224]
 640:	stp	x0, x1, [x19, #32]
 644:	add	x19, x19, #0x40
 648:	cmp	x21, x19
 64c:	b.eq	68c <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE+0x108>  // b.none
 650:	mov	x8, x23
 654:	ldp	x1, x2, [x19]
 658:	mov	x0, x20
 65c:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 660:	ldp	x0, x1, [sp, #200]
 664:	stp	x0, x1, [x19]
 668:	mov	x8, x22
 66c:	ldp	x1, x2, [x19, #16]
 670:	mov	x0, x20
 674:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 678:	ldp	x0, x1, [sp, #176]
 67c:	stp	x0, x1, [x19, #16]
 680:	ldrb	w0, [x19, #56]
 684:	cbz	w0, 644 <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE+0xc0>
 688:	b	62c <_ZN4llvm7remarks11StringTable11internalizeERNS0_6RemarkE+0xa8>
 68c:	ldp	x23, x24, [sp, #48]
 690:	ldp	x19, x20, [sp, #16]
 694:	ldp	x21, x22, [sp, #32]
 698:	ldp	x29, x30, [sp], #240
 69c:	ret

00000000000006a0 <_ZNK4llvm7remarks11StringTable9serializeEv>:
 6a0:	stp	x29, x30, [sp, #-48]!
 6a4:	mov	x29, sp
 6a8:	stp	x19, x20, [sp, #16]
 6ac:	str	x21, [sp, #32]
 6b0:	mov	x19, x8
 6b4:	mov	x21, x0
 6b8:	ldr	w1, [x0, #12]
 6bc:	str	xzr, [x8]
 6c0:	str	xzr, [x8, #8]
 6c4:	str	xzr, [x8, #16]
 6c8:	cbz	x1, 7b4 <_ZNK4llvm7remarks11StringTable9serializeEv+0x114>
 6cc:	lsl	x20, x1, #4
 6d0:	mov	x0, x20
 6d4:	bl	0 <_Znwm>
 6d8:	str	x0, [x19]
 6dc:	add	x1, x0, x20
 6e0:	str	x1, [x19, #16]
 6e4:	str	xzr, [x0]
 6e8:	str	xzr, [x0, #8]
 6ec:	add	x0, x0, #0x10
 6f0:	cmp	x1, x0
 6f4:	b.ne	6e4 <_ZNK4llvm7remarks11StringTable9serializeEv+0x44>  // b.any
 6f8:	str	x1, [x19, #8]
 6fc:	ldr	w7, [x21, #8]
 700:	cbz	w7, 790 <_ZNK4llvm7remarks11StringTable9serializeEv+0xf0>
 704:	ldr	x3, [x21]
 708:	ldr	x0, [x3]
 70c:	cmp	x0, #0x0
 710:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 714:	b.ne	7a4 <_ZNK4llvm7remarks11StringTable9serializeEv+0x104>  // b.any
 718:	add	x0, x3, #0x8
 71c:	mov	x2, x0
 720:	ldr	x1, [x0], #8
 724:	cmp	x1, #0x0
 728:	ccmn	x1, #0x8, #0x4, ne  // ne = any
 72c:	b.eq	71c <_ZNK4llvm7remarks11StringTable9serializeEv+0x7c>  // b.none
 730:	add	x7, x3, w7, uxtw #3
 734:	cmp	x7, x2
 738:	b.eq	790 <_ZNK4llvm7remarks11StringTable9serializeEv+0xf0>  // b.none
 73c:	mov	x3, x2
 740:	ldr	x0, [x3], #8
 744:	ldr	w1, [x0, #8]
 748:	lsl	x1, x1, #4
 74c:	ldr	x4, [x19]
 750:	add	x5, x4, x1
 754:	ldr	x6, [x0], #16
 758:	str	x0, [x4, x1]
 75c:	str	x6, [x5, #8]
 760:	ldr	x1, [x2, #8]
 764:	cmp	x1, #0x0
 768:	add	x0, x2, #0x10
 76c:	ccmn	x1, #0x8, #0x4, ne  // ne = any
 770:	b.ne	7ac <_ZNK4llvm7remarks11StringTable9serializeEv+0x10c>  // b.any
 774:	mov	x2, x0
 778:	ldr	x1, [x0], #8
 77c:	cmp	x1, #0x0
 780:	ccmn	x1, #0x8, #0x4, ne  // ne = any
 784:	b.eq	774 <_ZNK4llvm7remarks11StringTable9serializeEv+0xd4>  // b.none
 788:	cmp	x7, x2
 78c:	b.ne	73c <_ZNK4llvm7remarks11StringTable9serializeEv+0x9c>  // b.any
 790:	mov	x0, x19
 794:	ldp	x19, x20, [sp, #16]
 798:	ldr	x21, [sp, #32]
 79c:	ldp	x29, x30, [sp], #48
 7a0:	ret
 7a4:	mov	x2, x3
 7a8:	b	730 <_ZNK4llvm7remarks11StringTable9serializeEv+0x90>
 7ac:	mov	x2, x3
 7b0:	b	788 <_ZNK4llvm7remarks11StringTable9serializeEv+0xe8>
 7b4:	str	xzr, [x8]
 7b8:	str	xzr, [x8, #16]
 7bc:	mov	x1, #0x0                   	// #0
 7c0:	b	6f8 <_ZNK4llvm7remarks11StringTable9serializeEv+0x58>

00000000000007c4 <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE>:
 7c4:	stp	x29, x30, [sp, #-80]!
 7c8:	mov	x29, sp
 7cc:	stp	x19, x20, [sp, #16]
 7d0:	stp	x21, x22, [sp, #32]
 7d4:	mov	x20, x1
 7d8:	add	x8, sp, #0x38
 7dc:	bl	6a0 <_ZNK4llvm7remarks11StringTable9serializeEv>
 7e0:	ldr	x19, [sp, #56]
 7e4:	ldr	x22, [sp, #64]
 7e8:	cmp	x19, x22
 7ec:	b.ne	830 <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE+0x6c>  // b.any
 7f0:	ldr	x0, [sp, #56]
 7f4:	cbz	x0, 7fc <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE+0x38>
 7f8:	bl	0 <_ZdlPv>
 7fc:	ldp	x19, x20, [sp, #16]
 800:	ldp	x21, x22, [sp, #32]
 804:	ldp	x29, x30, [sp], #80
 808:	ret
 80c:	mov	x2, x21
 810:	mov	x0, x20
 814:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 818:	mov	w1, #0x0                   	// #0
 81c:	mov	x0, x20
 820:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 824:	add	x19, x19, #0x10
 828:	cmp	x22, x19
 82c:	b.eq	7f0 <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE+0x2c>  // b.none
 830:	ldr	x1, [x19]
 834:	ldr	x21, [x19, #8]
 838:	ldr	x0, [x20, #24]
 83c:	ldr	x2, [x20, #16]
 840:	sub	x2, x2, x0
 844:	cmp	x21, x2
 848:	b.hi	80c <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE+0x48>  // b.pmore
 84c:	cbz	x21, 818 <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE+0x54>
 850:	mov	x2, x21
 854:	bl	0 <memcpy>
 858:	ldr	x0, [x20, #24]
 85c:	add	x21, x0, x21
 860:	str	x21, [x20, #24]
 864:	b	818 <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE+0x54>

0000000000000868 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE>:
 868:	stp	x29, x30, [sp, #-112]!
 86c:	mov	x29, sp
 870:	stp	x19, x20, [sp, #16]
 874:	stp	x21, x22, [sp, #32]
 878:	mov	x19, x0
 87c:	mov	x21, x1
 880:	str	xzr, [x0]
 884:	str	wzr, [x0, #8]
 888:	str	wzr, [x0, #12]
 88c:	str	wzr, [x0, #16]
 890:	mov	w0, #0x10                  	// #16
 894:	str	w0, [x19, #20]
 898:	str	xzr, [x19, #24]
 89c:	str	xzr, [x19, #32]
 8a0:	add	x1, x19, #0x38
 8a4:	str	x1, [x19, #40]
 8a8:	str	wzr, [x19, #48]
 8ac:	mov	w1, #0x4                   	// #4
 8b0:	str	w1, [x19, #52]
 8b4:	add	x1, x19, #0x68
 8b8:	str	x1, [x19, #88]
 8bc:	str	wzr, [x19, #96]
 8c0:	str	wzr, [x19, #100]
 8c4:	str	xzr, [x19, #104]
 8c8:	mov	x1, #0x1                   	// #1
 8cc:	str	x1, [x19, #112]
 8d0:	str	xzr, [x19, #128]
 8d4:	ldr	x0, [x21, #24]
 8d8:	ldr	x1, [x21, #16]
 8dc:	sub	x0, x0, x1
 8e0:	asr	x0, x0, #3
 8e4:	cbz	w0, 974 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0x10c>
 8e8:	stp	x23, x24, [sp, #48]
 8ec:	mov	w23, w0
 8f0:	mov	x20, #0x0                   	// #0
 8f4:	add	x24, sp, #0x40
 8f8:	add	x22, sp, #0x58
 8fc:	b	914 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0xac>
 900:	add	x0, sp, #0x40
 904:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 908:	add	x20, x20, #0x1
 90c:	cmp	w23, w20
 910:	b.ls	970 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0x108>  // b.plast
 914:	mov	x8, x24
 918:	mov	x1, x20
 91c:	mov	x0, x21
 920:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
 924:	ldrb	w2, [sp, #80]
 928:	and	w0, w2, #0x1
 92c:	bfi	w2, w0, #1, #1
 930:	strb	w2, [sp, #80]
 934:	cbnz	w0, 984 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0x11c>
 938:	mov	x8, x22
 93c:	ldp	x1, x2, [sp, #64]
 940:	mov	x0, x19
 944:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 948:	ldrb	w0, [sp, #80]
 94c:	tbnz	w0, #1, 900 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0x98>
 950:	ldrb	w0, [sp, #80]
 954:	tbz	w0, #0, 908 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0xa0>
 958:	ldr	x0, [sp, #64]
 95c:	cbz	x0, 908 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0xa0>
 960:	ldr	x1, [x0]
 964:	ldr	x1, [x1, #8]
 968:	blr	x1
 96c:	b	908 <_ZN4llvm7remarks11StringTableC1ERKNS0_17ParsedStringTableE+0xa0>
 970:	ldp	x23, x24, [sp, #48]
 974:	ldp	x19, x20, [sp, #16]
 978:	ldp	x21, x22, [sp, #32]
 97c:	ldp	x29, x30, [sp], #112
 980:	ret
 984:	mov	w2, #0x1c                  	// #28
 988:	adrp	x1, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 98c:	add	x1, x1, #0x0
 990:	adrp	x0, 0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 994:	add	x0, x0, #0x0
 998:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #16]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #16]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x5c>

YAMLRemarkParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	cbz	x1, 94 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv+0x94>
       c:	ldr	x2, [x1, #8]
      10:	cbnz	x2, b4 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv+0xb4>
      14:	mov	w4, #0x1                   	// #1
      18:	str	w4, [sp, #48]
      1c:	str	xzr, [sp, #40]
      20:	str	xzr, [sp, #32]
      24:	str	xzr, [sp, #24]
      28:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
      2c:	ldr	x2, [x2]
      30:	add	x2, x2, #0x10
      34:	str	x2, [sp, #16]
      38:	str	x1, [sp, #56]
      3c:	mov	w3, #0x0                   	// #0
      40:	add	x2, sp, #0x10
      44:	mov	x1, #0x0                   	// #0
      48:	bl	0 <_ZNK4llvm12SMDiagnostic5printEPKcRNS_11raw_ostreamEbb>
      4c:	ldr	x0, [sp, #40]
      50:	ldr	x1, [sp, #32]
      54:	cmp	x0, x1
      58:	b.cs	d4 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv+0xd4>  // b.hs, b.nlast
      5c:	add	x1, x0, #0x1
      60:	str	x1, [sp, #40]
      64:	mov	w1, #0xa                   	// #10
      68:	strb	w1, [x0]
      6c:	ldr	x1, [sp, #40]
      70:	ldr	x0, [sp, #24]
      74:	cmp	x1, x0
      78:	b.eq	84 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv+0x84>  // b.none
      7c:	add	x0, sp, #0x10
      80:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
      84:	add	x0, sp, #0x10
      88:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
      8c:	ldp	x29, x30, [sp], #64
      90:	ret
      94:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
      98:	add	x3, x3, #0x0
      9c:	mov	w2, #0x1a                  	// #26
      a0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
      a4:	add	x1, x1, #0x0
      a8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
      ac:	add	x0, x0, #0x0
      b0:	bl	0 <__assert_fail>
      b4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
      b8:	add	x3, x3, #0x0
      bc:	mov	w2, #0x1c                  	// #28
      c0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
      c4:	add	x1, x1, #0x0
      c8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
      cc:	add	x0, x0, #0x0
      d0:	bl	0 <__assert_fail>
      d4:	mov	w1, #0xa                   	// #10
      d8:	add	x0, sp, #0x10
      dc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
      e0:	b	6c <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv+0x6c>

00000000000000e4 <_ZN4llvm7remarks14YAMLParseErrorC1ENS_9StringRefERNS_9SourceMgrERNS_4yaml6StreamERNS5_4NodeE>:
      e4:	stp	x29, x30, [sp, #-112]!
      e8:	mov	x29, sp
      ec:	stp	x19, x20, [sp, #16]
      f0:	str	x21, [sp, #32]
      f4:	mov	x6, x0
      f8:	stp	x1, x2, [sp, #48]
      fc:	mov	x19, x3
     100:	mov	x0, x4
     104:	mov	x1, x5
     108:	mov	x3, x6
     10c:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     110:	ldr	x2, [x2]
     114:	add	x2, x2, #0x10
     118:	str	x2, [x3], #8
     11c:	add	x2, x6, #0x18
     120:	str	x2, [x6, #8]
     124:	str	xzr, [x3, #8]
     128:	strb	wzr, [x6, #24]
     12c:	ldr	x21, [x19, #48]
     130:	ldr	x20, [x19, #56]
     134:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     138:	add	x2, x2, #0x0
     13c:	str	x2, [x19, #48]
     140:	str	x3, [x19, #56]
     144:	str	xzr, [sp, #88]
     148:	mov	w2, #0xa                   	// #10
     14c:	strb	w2, [sp, #88]
     150:	add	x2, sp, #0x30
     154:	str	x2, [sp, #64]
     158:	ldr	x2, [sp, #88]
     15c:	str	x2, [sp, #72]
     160:	mov	w2, #0x5                   	// #5
     164:	strb	w2, [sp, #80]
     168:	mov	w2, #0x8                   	// #8
     16c:	strb	w2, [sp, #81]
     170:	add	x2, sp, #0x40
     174:	bl	0 <_ZN4llvm4yaml6Stream10printErrorEPNS0_4NodeERKNS_5TwineE>
     178:	str	x21, [x19, #48]
     17c:	str	x20, [x19, #56]
     180:	ldp	x19, x20, [sp, #16]
     184:	ldr	x21, [sp, #32]
     188:	ldp	x29, x30, [sp], #112
     18c:	ret

0000000000000190 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEE>:
     190:	stp	x29, x30, [sp, #-32]!
     194:	mov	x29, sp
     198:	stp	x19, x20, [sp, #16]
     19c:	mov	x19, x0
     1a0:	mov	w0, #0x1                   	// #1
     1a4:	str	w0, [x19, #8]
     1a8:	add	x0, x19, #0x20
     1ac:	str	x0, [x19, #16]
     1b0:	str	xzr, [x19, #24]
     1b4:	strb	wzr, [x19, #32]
     1b8:	mov	x4, x19
     1bc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     1c0:	ldr	x0, [x0]
     1c4:	add	x0, x0, #0x10
     1c8:	str	x0, [x4], #48
     1cc:	strb	wzr, [x19, #48]
     1d0:	strb	wzr, [x4, #40]
     1d4:	ldrb	w0, [x3, #40]
     1d8:	cbnz	w0, 24c <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEE+0xbc>
     1dc:	add	x4, x19, #0x60
     1e0:	add	x0, x19, #0x70
     1e4:	str	x0, [x19, #96]
     1e8:	str	xzr, [x19, #104]
     1ec:	strb	wzr, [x19, #112]
     1f0:	add	x3, x19, #0x80
     1f4:	str	xzr, [x19, #128]
     1f8:	str	xzr, [x3, #8]
     1fc:	str	xzr, [x3, #16]
     200:	str	xzr, [x19, #152]
     204:	str	xzr, [x19, #160]
     208:	str	xzr, [x19, #168]
     20c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     210:	add	x0, x0, #0x0
     214:	str	x0, [x3, #48]
     218:	str	x4, [x3, #56]
     21c:	add	x20, x19, #0xc0
     220:	mov	x5, #0x0                   	// #0
     224:	mov	w4, #0x1                   	// #1
     228:	mov	x0, x20
     22c:	bl	0 <_ZN4llvm4yaml6StreamC1ENS_9StringRefERNS_9SourceMgrEbPSt10error_code>
     230:	mov	x0, x20
     234:	bl	0 <_ZN4llvm4yaml6Stream5beginEv>
     238:	str	x0, [x19, #208]
     23c:	str	xzr, [x19, #216]
     240:	ldp	x19, x20, [sp, #16]
     244:	ldp	x29, x30, [sp], #32
     248:	ret
     24c:	mov	x0, x3
     250:	ldp	x4, x5, [x0], #16
     254:	stp	x4, x5, [x19, #48]
     258:	ldr	x5, [x3, #16]
     25c:	str	x5, [x19, #64]
     260:	ldr	x5, [x0, #8]
     264:	str	x5, [x19, #72]
     268:	ldr	x5, [x0, #16]
     26c:	str	x5, [x19, #80]
     270:	str	xzr, [x0, #16]
     274:	str	xzr, [x0, #8]
     278:	str	xzr, [x3, #16]
     27c:	mov	w0, #0x1                   	// #1
     280:	strb	w0, [x19, #88]
     284:	b	1dc <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEE+0x4c>

0000000000000288 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefE>:
     288:	stp	x29, x30, [sp, #-64]!
     28c:	mov	x29, sp
     290:	strb	wzr, [sp, #16]
     294:	strb	wzr, [sp, #56]
     298:	add	x3, sp, #0x10
     29c:	bl	190 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEE>
     2a0:	ldrb	w0, [sp, #56]
     2a4:	cbz	w0, 2b4 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefE+0x2c>
     2a8:	ldr	x0, [sp, #32]
     2ac:	cbz	x0, 2b4 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefE+0x2c>
     2b0:	bl	0 <_ZdlPv>
     2b4:	ldp	x29, x30, [sp], #64
     2b8:	ret

00000000000002bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>:
     2bc:	stp	x29, x30, [sp, #-64]!
     2c0:	mov	x29, sp
     2c4:	stp	x19, x20, [sp, #16]
     2c8:	stp	x21, x22, [sp, #32]
     2cc:	stp	x23, x24, [sp, #48]
     2d0:	mov	x20, x8
     2d4:	mov	x21, x0
     2d8:	mov	x23, x1
     2dc:	mov	x22, x2
     2e0:	mov	x24, x3
     2e4:	mov	x0, #0x28                  	// #40
     2e8:	bl	0 <_Znwm>
     2ec:	mov	x19, x0
     2f0:	mov	x5, x24
     2f4:	add	x4, x21, #0xc0
     2f8:	add	x3, x21, #0x80
     2fc:	mov	x1, x23
     300:	mov	x2, x22
     304:	bl	e4 <_ZN4llvm7remarks14YAMLParseErrorC1ENS_9StringRefERNS_9SourceMgrERNS_4yaml6StreamERNS5_4NodeE>
     308:	orr	x19, x19, #0x1
     30c:	str	x19, [x20]
     310:	mov	x0, x20
     314:	ldp	x19, x20, [sp, #16]
     318:	ldp	x21, x22, [sp, #32]
     31c:	ldp	x23, x24, [sp, #48]
     320:	ldp	x29, x30, [sp], #64
     324:	ret

0000000000000328 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE>:
     328:	stp	x29, x30, [sp, #-64]!
     32c:	mov	x29, sp
     330:	stp	x19, x20, [sp, #16]
     334:	str	x21, [sp, #32]
     338:	mov	x19, x8
     33c:	mov	x21, x0
     340:	mov	x20, x1
     344:	mov	x0, x1
     348:	bl	0 <_ZN4llvm4yaml12KeyValueNode8getValueEv>
     34c:	cbz	x0, 3a8 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x80>
     350:	ldr	w1, [x0, #32]
     354:	cmp	w1, #0x1
     358:	b.eq	440 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x118>  // b.none
     35c:	add	x8, sp, #0x38
     360:	mov	x3, x20
     364:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     368:	add	x1, x1, #0x0
     36c:	mov	x2, #0x20                  	// #32
     370:	mov	x0, x21
     374:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
     378:	ldrb	w0, [x19, #16]
     37c:	orr	w0, w0, #0x3
     380:	strb	w0, [x19, #16]
     384:	ldr	x0, [sp, #56]
     388:	ands	x1, x0, #0xfffffffffffffffe
     38c:	cset	x0, ne  // ne = any
     390:	orr	x0, x0, x1
     394:	str	x0, [sp, #56]
     398:	ands	x0, x0, #0xfffffffffffffffe
     39c:	b.eq	3c8 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0xa0>  // b.none
     3a0:	str	x0, [x19]
     3a4:	b	480 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x158>
     3a8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3ac:	add	x3, x3, #0x0
     3b0:	mov	w2, #0x69                  	// #105
     3b4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3b8:	add	x1, x1, #0x0
     3bc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3c0:	add	x0, x0, #0x0
     3c4:	bl	0 <__assert_fail>
     3c8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3cc:	add	x3, x3, #0x0
     3d0:	mov	w2, #0x1ce                 	// #462
     3d4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3d8:	add	x1, x1, #0x0
     3dc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3e0:	add	x0, x0, #0x0
     3e4:	bl	0 <__assert_fail>
     3e8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3ec:	add	x3, x3, #0x0
     3f0:	mov	w2, #0x9c                  	// #156
     3f4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     3f8:	add	x1, x1, #0x0
     3fc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     400:	add	x0, x0, #0x0
     404:	bl	0 <__assert_fail>
     408:	add	x2, x2, #0x1
     40c:	subs	x1, x1, #0x1
     410:	b.ne	458 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x130>  // b.any
     414:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     418:	add	x3, x3, #0x0
     41c:	mov	w2, #0xa3                  	// #163
     420:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     424:	add	x1, x1, #0x0
     428:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     42c:	add	x0, x0, #0x0
     430:	bl	0 <__assert_fail>
     434:	cmp	x1, x0
     438:	csel	x1, x1, x0, ls  // ls = plast
     43c:	b	468 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x140>
     440:	ldr	x2, [x0, #72]
     444:	ldr	x1, [x0, #80]
     448:	cbz	x1, 3e8 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0xc0>
     44c:	ldrb	w0, [x2]
     450:	cmp	w0, #0x27
     454:	b.eq	408 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0xe0>  // b.none
     458:	sub	x0, x1, #0x1
     45c:	ldrb	w3, [x2, x0]
     460:	cmp	w3, #0x27
     464:	b.eq	434 <_ZN4llvm7remarks16YAMLRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x10c>  // b.none
     468:	ldrb	w0, [x19, #16]
     46c:	and	w0, w0, #0xfffffffe
     470:	orr	w0, w0, #0x2
     474:	strb	w0, [x19, #16]
     478:	str	x2, [x19]
     47c:	str	x1, [x19, #8]
     480:	mov	x0, x19
     484:	ldp	x19, x20, [sp, #16]
     488:	ldr	x21, [sp, #32]
     48c:	ldp	x29, x30, [sp], #64
     490:	ret

0000000000000494 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE>:
     494:	stp	x29, x30, [sp, #-96]!
     498:	mov	x29, sp
     49c:	stp	x19, x20, [sp, #16]
     4a0:	stp	x21, x22, [sp, #32]
     4a4:	str	x23, [sp, #48]
     4a8:	mov	x19, x8
     4ac:	mov	x23, x0
     4b0:	mov	x20, x1
     4b4:	ldr	x22, [x1, #56]
     4b8:	ldr	x21, [x1, #64]
     4bc:	cmp	x21, #0x7
     4c0:	b.eq	508 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x74>  // b.none
     4c4:	cmp	x21, #0x9
     4c8:	b.eq	590 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0xfc>  // b.none
     4cc:	cmp	x21, #0x12
     4d0:	b.eq	5b4 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x120>  // b.none
     4d4:	cmp	x21, #0x11
     4d8:	b.eq	5d8 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x144>  // b.none
     4dc:	cmp	x21, #0x8
     4e0:	b.ne	530 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x9c>  // b.any
     4e4:	mov	x2, #0x8                   	// #8
     4e8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     4ec:	add	x1, x1, #0x0
     4f0:	mov	x0, x22
     4f4:	bl	0 <memcmp>
     4f8:	cbnz	w0, 530 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x9c>
     4fc:	mov	w1, #0x6                   	// #6
     500:	str	w1, [sp, #80]
     504:	b	5f8 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x164>
     508:	mov	x2, #0x7                   	// #7
     50c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     510:	add	x1, x1, #0x0
     514:	mov	x0, x22
     518:	bl	0 <memcmp>
     51c:	cbnz	w0, 630 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x19c>
     520:	mov	w0, #0x1                   	// #1
     524:	str	w0, [sp, #80]
     528:	ldr	w1, [sp, #80]
     52c:	cbnz	w1, 5f8 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x164>
     530:	add	x8, sp, #0x58
     534:	mov	x3, x20
     538:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     53c:	add	x1, x1, #0x0
     540:	mov	x2, #0x16                  	// #22
     544:	mov	x0, x23
     548:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
     54c:	ldrb	w0, [x19, #8]
     550:	orr	w0, w0, #0x3
     554:	strb	w0, [x19, #8]
     558:	ldr	x0, [sp, #88]
     55c:	ands	x1, x0, #0xfffffffffffffffe
     560:	cset	x0, ne  // ne = any
     564:	orr	x0, x0, x1
     568:	str	x0, [sp, #88]
     56c:	ands	x0, x0, #0xfffffffffffffffe
     570:	b.eq	610 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x17c>  // b.none
     574:	str	x0, [x19]
     578:	mov	x0, x19
     57c:	ldp	x19, x20, [sp, #16]
     580:	ldp	x21, x22, [sp, #32]
     584:	ldr	x23, [sp, #48]
     588:	ldp	x29, x30, [sp], #96
     58c:	ret
     590:	mov	x2, #0x9                   	// #9
     594:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     598:	add	x1, x1, #0x0
     59c:	mov	x0, x22
     5a0:	bl	0 <memcmp>
     5a4:	cbnz	w0, 4d4 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x40>
     5a8:	mov	w0, #0x3                   	// #3
     5ac:	str	w0, [sp, #80]
     5b0:	b	528 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x94>
     5b4:	mov	x2, #0x12                  	// #18
     5b8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     5bc:	add	x1, x1, #0x0
     5c0:	mov	x0, x22
     5c4:	bl	0 <memcmp>
     5c8:	cbnz	w0, 4dc <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x48>
     5cc:	mov	w0, #0x4                   	// #4
     5d0:	str	w0, [sp, #80]
     5d4:	b	528 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x94>
     5d8:	mov	x2, #0x11                  	// #17
     5dc:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     5e0:	add	x1, x1, #0x0
     5e4:	mov	x0, x22
     5e8:	bl	0 <memcmp>
     5ec:	cbnz	w0, 530 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x9c>
     5f0:	mov	w1, #0x5                   	// #5
     5f4:	str	w1, [sp, #80]
     5f8:	ldrb	w0, [x19, #8]
     5fc:	and	w0, w0, #0xfffffffe
     600:	orr	w0, w0, #0x2
     604:	strb	w0, [x19, #8]
     608:	str	w1, [x19]
     60c:	b	578 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0xe4>
     610:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     614:	add	x3, x3, #0x0
     618:	mov	w2, #0x1ce                 	// #462
     61c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     620:	add	x1, x1, #0x0
     624:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     628:	add	x0, x0, #0x0
     62c:	bl	0 <__assert_fail>
     630:	mov	x2, #0x7                   	// #7
     634:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     638:	add	x1, x1, #0x0
     63c:	mov	x0, x22
     640:	bl	0 <memcmp>
     644:	cbnz	w0, 4cc <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x38>
     648:	mov	w0, #0x2                   	// #2
     64c:	str	w0, [sp, #80]
     650:	b	528 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE+0x94>

0000000000000654 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE>:
     654:	stp	x29, x30, [sp, #-64]!
     658:	mov	x29, sp
     65c:	stp	x19, x20, [sp, #16]
     660:	str	x21, [sp, #32]
     664:	mov	x19, x8
     668:	mov	x21, x0
     66c:	mov	x20, x1
     670:	mov	x0, x1
     674:	bl	0 <_ZN4llvm4yaml12KeyValueNode6getKeyEv>
     678:	cbz	x0, 6d4 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE+0x80>
     67c:	ldr	w1, [x0, #32]
     680:	cmp	w1, #0x1
     684:	b.eq	714 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE+0xc0>  // b.none
     688:	add	x8, sp, #0x38
     68c:	mov	x3, x20
     690:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     694:	add	x1, x1, #0x0
     698:	mov	x2, #0x14                  	// #20
     69c:	mov	x0, x21
     6a0:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
     6a4:	ldrb	w0, [x19, #16]
     6a8:	orr	w0, w0, #0x3
     6ac:	strb	w0, [x19, #16]
     6b0:	ldr	x0, [sp, #56]
     6b4:	ands	x1, x0, #0xfffffffffffffffe
     6b8:	cset	x0, ne  // ne = any
     6bc:	orr	x0, x0, x1
     6c0:	str	x0, [sp, #56]
     6c4:	ands	x0, x0, #0xfffffffffffffffe
     6c8:	b.eq	6f4 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE+0xa0>  // b.none
     6cc:	str	x0, [x19]
     6d0:	b	734 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE+0xe0>
     6d4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     6d8:	add	x3, x3, #0x0
     6dc:	mov	w2, #0x69                  	// #105
     6e0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     6e4:	add	x1, x1, #0x0
     6e8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     6ec:	add	x0, x0, #0x0
     6f0:	bl	0 <__assert_fail>
     6f4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     6f8:	add	x3, x3, #0x0
     6fc:	mov	w2, #0x1ce                 	// #462
     700:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     704:	add	x1, x1, #0x0
     708:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     70c:	add	x0, x0, #0x0
     710:	bl	0 <__assert_fail>
     714:	ldr	x2, [x0, #72]
     718:	ldr	x1, [x0, #80]
     71c:	ldrb	w0, [x19, #16]
     720:	and	w0, w0, #0xfffffffe
     724:	orr	w0, w0, #0x2
     728:	strb	w0, [x19, #16]
     72c:	str	x2, [x19]
     730:	str	x1, [x19, #8]
     734:	mov	x0, x19
     738:	ldp	x19, x20, [sp, #16]
     73c:	ldr	x21, [sp, #32]
     740:	ldp	x29, x30, [sp], #64
     744:	ret

0000000000000748 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE>:
     748:	stp	x29, x30, [sp, #-96]!
     74c:	mov	x29, sp
     750:	stp	x19, x20, [sp, #16]
     754:	stp	x21, x22, [sp, #32]
     758:	mov	x19, x8
     75c:	mov	x22, x0
     760:	mov	x21, x1
     764:	add	x1, sp, #0x48
     768:	str	x1, [sp, #56]
     76c:	str	wzr, [sp, #64]
     770:	mov	w1, #0x4                   	// #4
     774:	str	w1, [sp, #68]
     778:	mov	x0, x21
     77c:	bl	0 <_ZN4llvm4yaml12KeyValueNode8getValueEv>
     780:	cbz	x0, 7e0 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0x98>
     784:	mov	x20, x0
     788:	ldr	w0, [x0, #32]
     78c:	cmp	w0, #0x1
     790:	b.eq	8b0 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0x168>  // b.none
     794:	add	x8, sp, #0x50
     798:	mov	x3, x21
     79c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     7a0:	add	x1, x1, #0x0
     7a4:	mov	x2, #0x20                  	// #32
     7a8:	mov	x0, x22
     7ac:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
     7b0:	ldrb	w0, [x19, #8]
     7b4:	orr	w0, w0, #0x3
     7b8:	strb	w0, [x19, #8]
     7bc:	ldr	x0, [sp, #80]
     7c0:	ands	x1, x0, #0xfffffffffffffffe
     7c4:	cset	x0, ne  // ne = any
     7c8:	orr	x0, x0, x1
     7cc:	str	x0, [sp, #80]
     7d0:	ands	x0, x0, #0xfffffffffffffffe
     7d4:	b.eq	800 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0xb8>  // b.none
     7d8:	str	x0, [x19]
     7dc:	b	868 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0x120>
     7e0:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     7e4:	add	x3, x3, #0x0
     7e8:	mov	w2, #0x69                  	// #105
     7ec:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     7f0:	add	x1, x1, #0x0
     7f4:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     7f8:	add	x0, x0, #0x0
     7fc:	bl	0 <__assert_fail>
     800:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     804:	add	x3, x3, #0x0
     808:	mov	w2, #0x1ce                 	// #462
     80c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     810:	add	x1, x1, #0x0
     814:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     818:	add	x0, x0, #0x0
     81c:	bl	0 <__assert_fail>
     820:	add	x8, sp, #0x58
     824:	mov	x3, x20
     828:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     82c:	add	x1, x1, #0x0
     830:	mov	x2, #0x21                  	// #33
     834:	mov	x0, x22
     838:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
     83c:	ldrb	w0, [x19, #8]
     840:	orr	w0, w0, #0x3
     844:	strb	w0, [x19, #8]
     848:	ldr	x0, [sp, #88]
     84c:	ands	x1, x0, #0xfffffffffffffffe
     850:	cset	x0, ne  // ne = any
     854:	orr	x0, x0, x1
     858:	str	x0, [sp, #88]
     85c:	ands	x0, x0, #0xfffffffffffffffe
     860:	b.eq	890 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0x148>  // b.none
     864:	str	x0, [x19]
     868:	ldr	x0, [sp, #56]
     86c:	add	x1, sp, #0x48
     870:	cmp	x0, x1
     874:	b.eq	87c <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0x134>  // b.none
     878:	bl	0 <free>
     87c:	mov	x0, x19
     880:	ldp	x19, x20, [sp, #16]
     884:	ldp	x21, x22, [sp, #32]
     888:	ldp	x29, x30, [sp], #96
     88c:	ret
     890:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     894:	add	x3, x3, #0x0
     898:	mov	w2, #0x1ce                 	// #462
     89c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     8a0:	add	x1, x1, #0x0
     8a4:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     8a8:	add	x0, x0, #0x0
     8ac:	bl	0 <__assert_fail>
     8b0:	add	x1, sp, #0x38
     8b4:	mov	x0, x20
     8b8:	bl	0 <_ZNK4llvm4yaml10ScalarNode8getValueERNS_15SmallVectorImplIcEE>
     8bc:	add	x3, sp, #0x30
     8c0:	mov	w2, #0xa                   	// #10
     8c4:	bl	0 <_ZN4llvm20getAsUnsignedIntegerENS_9StringRefEjRy>
     8c8:	and	w1, w0, #0xff
     8cc:	cbnz	w1, 820 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0xd8>
     8d0:	ldr	x1, [sp, #48]
     8d4:	tst	x1, #0xffffffff00000000
     8d8:	b.ne	820 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0xd8>  // b.any
     8dc:	ldrb	w0, [x19, #8]
     8e0:	and	w0, w0, #0xfffffffe
     8e4:	orr	w0, w0, #0x2
     8e8:	strb	w0, [x19, #8]
     8ec:	str	w1, [x19]
     8f0:	b	868 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE+0x120>

00000000000008f4 <_ZN4llvm7remarks16YAMLRemarkParser5errorEv>:
     8f4:	stp	x29, x30, [sp, #-64]!
     8f8:	mov	x29, sp
     8fc:	stp	x19, x20, [sp, #16]
     900:	mov	x20, x8
     904:	mov	x19, x0
     908:	ldr	x0, [x0, #104]
     90c:	cbnz	x0, 928 <_ZN4llvm7remarks16YAMLRemarkParser5errorEv+0x34>
     910:	mov	x0, #0x1                   	// #1
     914:	str	x0, [x8]
     918:	mov	x0, x20
     91c:	ldp	x19, x20, [sp, #16]
     920:	ldp	x29, x30, [sp], #64
     924:	ret
     928:	str	x21, [sp, #32]
     92c:	add	x21, x19, #0x60
     930:	add	x8, sp, #0x38
     934:	mov	x0, x21
     938:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     93c:	str	xzr, [x19, #104]
     940:	ldr	x0, [x19, #96]
     944:	strb	wzr, [x0]
     948:	ldr	x0, [sp, #56]
     94c:	orr	x0, x0, #0x1
     950:	str	x0, [x20]
     954:	ldr	x21, [sp, #32]
     958:	b	918 <_ZN4llvm7remarks16YAMLRemarkParser5errorEv+0x24>

000000000000095c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE>:
     95c:	sub	sp, sp, #0x220
     960:	stp	x29, x30, [sp]
     964:	mov	x29, sp
     968:	stp	x19, x20, [sp, #16]
     96c:	stp	x21, x22, [sp, #32]
     970:	stp	x23, x24, [sp, #48]
     974:	stp	x25, x26, [sp, #64]
     978:	mov	x19, x8
     97c:	mov	x23, x2
     980:	mov	x22, x3
     984:	mov	x25, x0
     988:	mov	x24, x1
     98c:	ldrb	w26, [x3, #16]
     990:	cmp	x1, #0x6
     994:	b.ls	1334 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x9d8>  // b.plast
     998:	mov	x2, #0x7                   	// #7
     99c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     9a0:	add	x1, x1, #0x0
     9a4:	bl	0 <memcmp>
     9a8:	cbnz	w0, 1334 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x9d8>
     9ac:	cmp	x24, #0x7
     9b0:	b.eq	9bc <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x60>  // b.none
     9b4:	ldrb	w0, [x25, #7]
     9b8:	cbz	w0, a44 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xe8>
     9bc:	bl	0 <_ZNSt3_V216generic_categoryEv>
     9c0:	mov	x1, x0
     9c4:	add	x8, sp, #0x1c8
     9c8:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     9cc:	add	x2, x2, #0x0
     9d0:	mov	x0, #0x54                  	// #84
     9d4:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     9d8:	ldrb	w0, [sp, #296]
     9dc:	orr	w0, w0, #0x3
     9e0:	strb	w0, [sp, #296]
     9e4:	ldr	x0, [sp, #456]
     9e8:	ands	x1, x0, #0xfffffffffffffffe
     9ec:	cset	x0, ne  // ne = any
     9f0:	orr	x0, x0, x1
     9f4:	str	x0, [sp, #456]
     9f8:	ands	x0, x0, #0xfffffffffffffffe
     9fc:	b.eq	a68 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x10c>  // b.none
     a00:	ldrb	w1, [sp, #296]
     a04:	and	w1, w1, #0xfffffffd
     a08:	strb	w1, [sp, #296]
     a0c:	str	xzr, [sp, #288]
     a10:	ldrb	w1, [x19, #8]
     a14:	orr	w1, w1, #0x3
     a18:	strb	w1, [x19, #8]
     a1c:	cbz	x0, a8c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x130>
     a20:	str	x0, [x19]
     a24:	mov	x0, x19
     a28:	ldp	x19, x20, [sp, #16]
     a2c:	ldp	x21, x22, [sp, #32]
     a30:	ldp	x23, x24, [sp, #48]
     a34:	ldp	x25, x26, [sp, #64]
     a38:	ldp	x29, x30, [sp]
     a3c:	add	sp, sp, #0x220
     a40:	ret
     a44:	stp	x27, x28, [sp, #80]
     a48:	add	x25, x25, #0x8
     a4c:	sub	x24, x24, #0x8
     a50:	ldrb	w0, [sp, #296]
     a54:	and	w0, w0, #0xfffffffe
     a58:	strb	w0, [sp, #296]
     a5c:	mov	w0, #0x1                   	// #1
     a60:	strb	w0, [sp, #288]
     a64:	b	1348 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x9ec>
     a68:	stp	x27, x28, [sp, #80]
     a6c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     a70:	add	x3, x3, #0x0
     a74:	mov	w2, #0x1ce                 	// #462
     a78:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     a7c:	add	x1, x1, #0x0
     a80:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     a84:	add	x0, x0, #0x0
     a88:	bl	0 <__assert_fail>
     a8c:	stp	x27, x28, [sp, #80]
     a90:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     a94:	add	x3, x3, #0x0
     a98:	mov	w2, #0x1ce                 	// #462
     a9c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     aa0:	add	x1, x1, #0x0
     aa4:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     aa8:	add	x0, x0, #0x0
     aac:	bl	0 <__assert_fail>
     ab0:	cmp	x24, #0x7
     ab4:	b.ls	bd8 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x27c>  // b.plast
     ab8:	ldr	x21, [x25]
     abc:	cbz	x21, c58 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x2fc>
     ac0:	bl	0 <_ZNSt3_V216generic_categoryEv>
     ac4:	mov	x22, x0
     ac8:	add	x0, sp, #0x78
     acc:	add	x1, sp, #0x88
     ad0:	str	x1, [sp, #120]
     ad4:	str	xzr, [sp, #128]
     ad8:	strb	wzr, [sp, #136]
     adc:	mov	w1, #0x1                   	// #1
     ae0:	str	w1, [sp, #224]
     ae4:	str	xzr, [sp, #216]
     ae8:	str	xzr, [sp, #208]
     aec:	str	xzr, [sp, #200]
     af0:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
     af4:	ldr	x1, [x1]
     af8:	add	x1, x1, #0x10
     afc:	str	x1, [sp, #192]
     b00:	str	x0, [sp, #232]
     b04:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     b08:	add	x0, x0, #0x0
     b0c:	str	x0, [sp, #160]
     b10:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     b14:	ldr	x1, [x1]
     b18:	add	x1, x1, #0x10
     b1c:	str	x1, [sp, #152]
     b20:	str	xzr, [sp, #168]
     b24:	str	x21, [sp, #176]
     b28:	add	x1, sp, #0x98
     b2c:	add	x0, sp, #0xc0
     b30:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     b34:	ldr	x1, [sp, #216]
     b38:	ldr	x0, [sp, #200]
     b3c:	cmp	x1, x0
     b40:	b.eq	b4c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x1f0>  // b.none
     b44:	add	x0, sp, #0xc0
     b48:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     b4c:	str	xzr, [sp, #480]
     b50:	mov	w0, #0x4                   	// #4
     b54:	strb	w0, [sp, #488]
     b58:	mov	w0, #0x1                   	// #1
     b5c:	strb	w0, [sp, #489]
     b60:	ldr	x0, [sp, #232]
     b64:	str	x0, [sp, #472]
     b68:	mov	x23, #0x0                   	// #0
     b6c:	mov	x0, #0x54                  	// #84
     b70:	bfxil	x23, x0, #0, #32
     b74:	mov	x0, #0x40                  	// #64
     b78:	bl	0 <_Znwm>
     b7c:	mov	x21, x0
     b80:	mov	x2, x23
     b84:	mov	x3, x22
     b88:	add	x1, sp, #0x1d8
     b8c:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
     b90:	and	x21, x21, #0xfffffffffffffffe
     b94:	add	x0, sp, #0xc0
     b98:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     b9c:	ldr	x0, [sp, #120]
     ba0:	add	x1, sp, #0x88
     ba4:	cmp	x0, x1
     ba8:	b.eq	bb0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x254>  // b.none
     bac:	bl	0 <_ZdlPv>
     bb0:	cbz	x21, c38 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x2dc>
     bb4:	str	x21, [sp, #192]
     bb8:	ldr	x0, [sp, #192]
     bbc:	ldrb	w1, [x19, #8]
     bc0:	orr	w1, w1, #0x3
     bc4:	strb	w1, [x19, #8]
     bc8:	ands	x0, x0, #0xfffffffffffffffe
     bcc:	cbz	x0, e30 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4d4>
     bd0:	str	x0, [x19]
     bd4:	b	141c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xac0>
     bd8:	bl	0 <_ZNSt3_V216generic_categoryEv>
     bdc:	mov	x1, x0
     be0:	add	x8, sp, #0x1d0
     be4:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     be8:	add	x2, x2, #0x0
     bec:	mov	x0, #0x54                  	// #84
     bf0:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     bf4:	ldr	x0, [sp, #464]
     bf8:	ands	x1, x0, #0xfffffffffffffffe
     bfc:	cset	x0, ne  // ne = any
     c00:	orr	x0, x0, x1
     c04:	str	x0, [sp, #464]
     c08:	ands	x0, x0, #0xfffffffffffffffe
     c0c:	b.eq	c18 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x2bc>  // b.none
     c10:	str	x0, [sp, #192]
     c14:	b	bb8 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x25c>
     c18:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     c1c:	add	x3, x3, #0x0
     c20:	mov	w2, #0x1ce                 	// #462
     c24:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     c28:	add	x1, x1, #0x0
     c2c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     c30:	add	x0, x0, #0x0
     c34:	bl	0 <__assert_fail>
     c38:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     c3c:	add	x3, x3, #0x0
     c40:	mov	w2, #0x1ce                 	// #462
     c44:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     c48:	add	x1, x1, #0x0
     c4c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     c50:	add	x0, x0, #0x0
     c54:	bl	0 <__assert_fail>
     c58:	sub	x0, x24, #0x8
     c5c:	cmp	x0, #0x7
     c60:	b.ls	e50 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x4f4>  // b.plast
     c64:	ldr	x21, [x25, #8]
     c68:	add	x25, x25, #0x10
     c6c:	sub	x24, x24, #0x10
     c70:	cbnz	x21, ee0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x584>
     c74:	cmp	x24, #0x2
     c78:	b.ls	c98 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x33c>  // b.plast
     c7c:	mov	x2, #0x3                   	// #3
     c80:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     c84:	add	x1, x1, #0x0
     c88:	mov	x0, x25
     c8c:	bl	0 <memcmp>
     c90:	mov	x27, #0x0                   	// #0
     c94:	cbz	w0, 1364 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xa08>
     c98:	str	x25, [sp, #104]
     c9c:	str	x24, [sp, #112]
     ca0:	add	x0, sp, #0xd0
     ca4:	str	x0, [sp, #192]
     ca8:	str	wzr, [sp, #200]
     cac:	mov	w0, #0x50                  	// #80
     cb0:	str	w0, [sp, #204]
     cb4:	cbnz	w26, 1078 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x71c>
     cb8:	str	xzr, [sp, #320]
     cbc:	mov	w0, #0x5                   	// #5
     cc0:	strb	w0, [sp, #328]
     cc4:	mov	w21, #0x1                   	// #1
     cc8:	strb	w21, [sp, #329]
     ccc:	add	x0, sp, #0x68
     cd0:	str	x0, [sp, #312]
     cd4:	str	xzr, [sp, #336]
     cd8:	str	xzr, [sp, #344]
     cdc:	strb	w21, [sp, #352]
     ce0:	strb	w21, [sp, #353]
     ce4:	str	xzr, [sp, #360]
     ce8:	str	xzr, [sp, #368]
     cec:	strb	w21, [sp, #376]
     cf0:	strb	w21, [sp, #377]
     cf4:	str	xzr, [sp, #384]
     cf8:	str	xzr, [sp, #392]
     cfc:	strb	w21, [sp, #400]
     d00:	strb	w21, [sp, #401]
     d04:	add	x22, sp, #0xc0
     d08:	add	x4, sp, #0x180
     d0c:	add	x3, sp, #0x168
     d10:	add	x2, sp, #0x150
     d14:	add	x1, sp, #0x138
     d18:	mov	x0, x22
     d1c:	bl	0 <_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_>
     d20:	str	xzr, [sp, #416]
     d24:	mov	w0, #0x6                   	// #6
     d28:	strb	w0, [sp, #424]
     d2c:	strb	w21, [sp, #425]
     d30:	str	x22, [sp, #408]
     d34:	add	x8, sp, #0x78
     d38:	mov	w3, #0x0                   	// #0
     d3c:	mov	w2, w21
     d40:	mov	x1, #0xffffffffffffffff    	// #-1
     d44:	add	x0, sp, #0x198
     d48:	bl	0 <_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb>
     d4c:	ldrb	w0, [sp, #136]
     d50:	tbz	w0, #0, 10fc <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x7a0>
     d54:	ldr	w0, [sp, #120]
     d58:	cbz	w0, 12b4 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x958>
     d5c:	str	xzr, [sp, #440]
     d60:	mov	w1, #0x6                   	// #6
     d64:	strb	w1, [sp, #448]
     d68:	mov	w1, #0x1                   	// #1
     d6c:	strb	w1, [sp, #449]
     d70:	add	x1, sp, #0xc0
     d74:	str	x1, [sp, #432]
     d78:	add	x8, sp, #0x200
     d7c:	mov	w0, w0
     d80:	ldr	x1, [sp, #128]
     d84:	bl	0 <_ZN4llvm16errorCodeToErrorESt10error_code>
     d88:	ldr	x0, [sp, #512]
     d8c:	orr	x0, x0, #0x1
     d90:	str	xzr, [sp, #512]
     d94:	str	xzr, [sp, #96]
     d98:	str	x0, [sp, #536]
     d9c:	str	xzr, [sp, #520]
     da0:	add	x0, sp, #0x60
     da4:	str	x0, [sp, #528]
     da8:	add	x1, sp, #0x210
     dac:	add	x0, sp, #0x218
     db0:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     db4:	ldr	x0, [sp, #536]
     db8:	cbnz	x0, 1124 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x7c8>
     dbc:	ldr	x22, [sp, #96]
     dc0:	str	xzr, [sp, #96]
     dc4:	mov	x0, #0x40                  	// #64
     dc8:	bl	0 <_Znwm>
     dcc:	mov	x21, x0
     dd0:	mov	x1, x0
     dd4:	adrp	x0, 0 <_ZTVN4llvm9FileErrorE>
     dd8:	ldr	x0, [x0]
     ddc:	add	x0, x0, #0x10
     de0:	str	x0, [x1], #8
     de4:	add	x24, x21, #0x18
     de8:	str	x24, [x21, #8]
     dec:	str	xzr, [x1, #8]
     df0:	strb	wzr, [x21, #24]
     df4:	strb	wzr, [x21, #40]
     df8:	strb	wzr, [x21, #48]
     dfc:	str	xzr, [x21, #56]
     e00:	cbz	x22, 112c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x7d0>
     e04:	ldrb	w0, [sp, #448]
     e08:	cmp	w0, #0x1
     e0c:	b.hi	114c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x7f0>  // b.pmore
     e10:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     e14:	add	x3, x3, #0x0
     e18:	mov	w2, #0x4e0                 	// #1248
     e1c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     e20:	add	x1, x1, #0x0
     e24:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     e28:	add	x0, x0, #0x0
     e2c:	bl	0 <__assert_fail>
     e30:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     e34:	add	x3, x3, #0x0
     e38:	mov	w2, #0x1ce                 	// #462
     e3c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     e40:	add	x1, x1, #0x0
     e44:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     e48:	add	x0, x0, #0x0
     e4c:	bl	0 <__assert_fail>
     e50:	bl	0 <_ZNSt3_V216generic_categoryEv>
     e54:	mov	x1, x0
     e58:	add	x8, sp, #0x1f0
     e5c:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     e60:	add	x2, x2, #0x0
     e64:	mov	x0, #0x54                  	// #84
     e68:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     e6c:	ldr	x0, [sp, #496]
     e70:	ands	x1, x0, #0xfffffffffffffffe
     e74:	cset	x0, ne  // ne = any
     e78:	orr	x0, x0, x1
     e7c:	str	x0, [sp, #496]
     e80:	ands	x0, x0, #0xfffffffffffffffe
     e84:	b.eq	ea0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x544>  // b.none
     e88:	ldrb	w1, [x19, #8]
     e8c:	orr	w1, w1, #0x3
     e90:	strb	w1, [x19, #8]
     e94:	cbz	x0, ec0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x564>
     e98:	str	x0, [x19]
     e9c:	b	141c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xac0>
     ea0:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     ea4:	add	x3, x3, #0x0
     ea8:	mov	w2, #0x1ce                 	// #462
     eac:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     eb0:	add	x1, x1, #0x0
     eb4:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     eb8:	add	x0, x0, #0x0
     ebc:	bl	0 <__assert_fail>
     ec0:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     ec4:	add	x3, x3, #0x0
     ec8:	mov	w2, #0x1ce                 	// #462
     ecc:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     ed0:	add	x1, x1, #0x0
     ed4:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     ed8:	add	x0, x0, #0x0
     edc:	bl	0 <__assert_fail>
     ee0:	ldrb	w0, [x23, #40]
     ee4:	cbz	w0, f54 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5f8>
     ee8:	bl	0 <_ZNSt3_V216generic_categoryEv>
     eec:	mov	x1, x0
     ef0:	add	x8, sp, #0x130
     ef4:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     ef8:	add	x2, x2, #0x0
     efc:	mov	x0, #0x54                  	// #84
     f00:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     f04:	ldrb	w0, [x19, #8]
     f08:	orr	w0, w0, #0x3
     f0c:	strb	w0, [x19, #8]
     f10:	ldr	x0, [sp, #304]
     f14:	ands	x1, x0, #0xfffffffffffffffe
     f18:	cset	x0, ne  // ne = any
     f1c:	orr	x0, x0, x1
     f20:	str	x0, [sp, #304]
     f24:	ands	x0, x0, #0xfffffffffffffffe
     f28:	b.eq	f34 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x5d8>  // b.none
     f2c:	str	x0, [x19]
     f30:	b	141c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xac0>
     f34:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     f38:	add	x3, x3, #0x0
     f3c:	mov	w2, #0x1ce                 	// #462
     f40:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     f44:	add	x1, x1, #0x0
     f48:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     f4c:	add	x0, x0, #0x0
     f50:	bl	0 <__assert_fail>
     f54:	cmp	x21, x24
     f58:	b.ls	fcc <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x670>  // b.plast
     f5c:	bl	0 <_ZNSt3_V216generic_categoryEv>
     f60:	mov	x1, x0
     f64:	add	x8, sp, #0x1f8
     f68:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     f6c:	add	x2, x2, #0x0
     f70:	mov	x0, #0x54                  	// #84
     f74:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     f78:	ldr	x0, [sp, #504]
     f7c:	ands	x1, x0, #0xfffffffffffffffe
     f80:	cset	x0, ne  // ne = any
     f84:	orr	x0, x0, x1
     f88:	str	x0, [sp, #504]
     f8c:	ands	x0, x0, #0xfffffffffffffffe
     f90:	b.eq	fac <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x650>  // b.none
     f94:	ldrb	w1, [x19, #8]
     f98:	orr	w1, w1, #0x3
     f9c:	strb	w1, [x19, #8]
     fa0:	cbz	x0, 102c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x6d0>
     fa4:	str	x0, [x19]
     fa8:	b	141c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xac0>
     fac:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     fb0:	add	x3, x3, #0x0
     fb4:	mov	w2, #0x1ce                 	// #462
     fb8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     fbc:	add	x1, x1, #0x0
     fc0:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
     fc4:	add	x0, x0, #0x0
     fc8:	bl	0 <__assert_fail>
     fcc:	mov	x1, x25
     fd0:	mov	x2, x21
     fd4:	add	x0, sp, #0x98
     fd8:	bl	0 <_ZN4llvm7remarks17ParsedStringTableC1ENS_9StringRefE>
     fdc:	add	x25, x25, x21
     fe0:	sub	x24, x24, x21
     fe4:	ldp	x0, x1, [sp, #152]
     fe8:	stp	x0, x1, [sp, #192]
     fec:	ldr	x4, [sp, #152]
     ff0:	ldr	x3, [sp, #168]
     ff4:	ldr	x2, [sp, #176]
     ff8:	ldr	x1, [sp, #184]
     ffc:	ldrb	w0, [x23, #40]
    1000:	cbnz	w0, 104c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x6f0>
    1004:	str	x4, [sp, #192]
    1008:	mov	x0, x23
    100c:	ldp	x4, x5, [sp, #192]
    1010:	stp	x4, x5, [x0], #16
    1014:	str	x3, [x23, #16]
    1018:	str	x2, [x0, #8]
    101c:	str	x1, [x0, #16]
    1020:	mov	w0, #0x1                   	// #1
    1024:	strb	w0, [x23, #40]
    1028:	b	c74 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x318>
    102c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1030:	add	x3, x3, #0x0
    1034:	mov	w2, #0x1ce                 	// #462
    1038:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    103c:	add	x1, x1, #0x0
    1040:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1044:	add	x0, x0, #0x0
    1048:	bl	0 <__assert_fail>
    104c:	str	x4, [sp, #192]
    1050:	mov	x4, x23
    1054:	ldp	x6, x7, [sp, #192]
    1058:	stp	x6, x7, [x4], #16
    105c:	ldr	x0, [x23, #16]
    1060:	str	x3, [x23, #16]
    1064:	str	x2, [x4, #8]
    1068:	str	x1, [x4, #16]
    106c:	cbz	x0, c74 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x318>
    1070:	bl	0 <_ZdlPv>
    1074:	b	c74 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x318>
    1078:	ldr	x24, [x22]
    107c:	ldr	x21, [x22, #8]
    1080:	cmp	x21, #0x50
    1084:	b.hi	1094 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x738>  // b.pmore
    1088:	cbz	x21, 10d4 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x778>
    108c:	add	x0, sp, #0xd0
    1090:	b	10b4 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x758>
    1094:	add	x0, sp, #0xc0
    1098:	mov	x3, #0x1                   	// #1
    109c:	mov	x2, x21
    10a0:	add	x1, x0, #0x10
    10a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    10a8:	ldr	w1, [sp, #200]
    10ac:	ldr	x0, [sp, #192]
    10b0:	add	x0, x0, x1
    10b4:	mov	x2, x21
    10b8:	mov	x1, x24
    10bc:	bl	0 <memcpy>
    10c0:	ldr	w0, [sp, #200]
    10c4:	add	x21, x21, x0
    10c8:	ldr	w0, [sp, #204]
    10cc:	cmp	x21, x0
    10d0:	b.hi	10dc <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x780>  // b.pmore
    10d4:	str	w21, [sp, #200]
    10d8:	b	cb8 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x35c>
    10dc:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    10e0:	add	x3, x3, #0x0
    10e4:	mov	w2, #0x43                  	// #67
    10e8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    10ec:	add	x1, x1, #0x0
    10f0:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    10f4:	add	x0, x0, #0x0
    10f8:	bl	0 <__assert_fail>
    10fc:	ldr	x27, [sp, #120]
    1100:	ldr	x25, [x27, #8]
    1104:	ldr	x24, [x27, #16]
    1108:	sub	x24, x24, x25
    110c:	ldr	x0, [sp, #192]
    1110:	add	x1, sp, #0xd0
    1114:	cmp	x0, x1
    1118:	b.eq	1364 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xa08>  // b.none
    111c:	bl	0 <free>
    1120:	b	1364 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xa08>
    1124:	add	x0, sp, #0x218
    1128:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    112c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1130:	add	x3, x3, #0x0
    1134:	mov	w2, #0x4df                 	// #1247
    1138:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    113c:	add	x1, x1, #0x0
    1140:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1144:	add	x0, x0, #0x0
    1148:	bl	0 <__assert_fail>
    114c:	add	x23, sp, #0x98
    1150:	mov	x8, x23
    1154:	add	x0, sp, #0x1b0
    1158:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    115c:	ldr	x0, [x21, #8]
    1160:	ldr	x1, [sp, #152]
    1164:	add	x23, x23, #0x10
    1168:	cmp	x1, x23
    116c:	b.eq	124c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x8f0>  // b.none
    1170:	cmp	x24, x0
    1174:	b.eq	1314 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x9b8>  // b.none
    1178:	ldr	x3, [x21, #24]
    117c:	str	x1, [x21, #8]
    1180:	ldr	x1, [sp, #160]
    1184:	str	x1, [x21, #16]
    1188:	ldr	x1, [sp, #168]
    118c:	str	x1, [x21, #24]
    1190:	cbz	x0, 1328 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x9cc>
    1194:	str	x0, [sp, #152]
    1198:	str	x3, [sp, #168]
    119c:	str	xzr, [sp, #160]
    11a0:	ldr	x0, [sp, #152]
    11a4:	strb	wzr, [x0]
    11a8:	ldr	x0, [sp, #152]
    11ac:	add	x1, sp, #0xa8
    11b0:	cmp	x0, x1
    11b4:	b.eq	11bc <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x860>  // b.none
    11b8:	bl	0 <_ZdlPv>
    11bc:	ldr	x0, [x21, #56]
    11c0:	str	x22, [x21, #56]
    11c4:	cbz	x0, 11d4 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x878>
    11c8:	ldr	x1, [x0]
    11cc:	ldr	x1, [x1, #8]
    11d0:	blr	x1
    11d4:	strb	wzr, [x21, #40]
    11d8:	strb	wzr, [x21, #48]
    11dc:	ldr	x0, [sp, #96]
    11e0:	cbz	x0, 11f0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x894>
    11e4:	ldr	x1, [x0]
    11e8:	ldr	x1, [x1, #8]
    11ec:	blr	x1
    11f0:	ldr	x0, [sp, #520]
    11f4:	cbnz	x0, 1284 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x928>
    11f8:	ldr	x0, [sp, #512]
    11fc:	cbnz	x0, 128c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x930>
    1200:	ldrb	w0, [x19, #8]
    1204:	orr	w0, w0, #0x3
    1208:	strb	w0, [x19, #8]
    120c:	ands	x0, x21, #0xfffffffffffffffe
    1210:	cbz	x0, 1294 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x938>
    1214:	str	x0, [x19]
    1218:	ldrb	w0, [sp, #136]
    121c:	tbnz	w0, #0, 1234 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x8d8>
    1220:	ldr	x0, [sp, #120]
    1224:	cbz	x0, 1234 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x8d8>
    1228:	ldr	x1, [x0]
    122c:	ldr	x1, [x1, #8]
    1230:	blr	x1
    1234:	ldr	x0, [sp, #192]
    1238:	add	x1, sp, #0xd0
    123c:	cmp	x0, x1
    1240:	b.eq	141c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xac0>  // b.none
    1244:	bl	0 <free>
    1248:	b	141c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xac0>
    124c:	ldr	x2, [sp, #160]
    1250:	cbz	x2, 1264 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x908>
    1254:	cmp	x2, #0x1
    1258:	b.eq	1278 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x91c>  // b.none
    125c:	add	x1, sp, #0xa8
    1260:	bl	0 <memcpy>
    1264:	ldr	x0, [sp, #160]
    1268:	str	x0, [x21, #16]
    126c:	ldr	x1, [x21, #8]
    1270:	strb	wzr, [x1, x0]
    1274:	b	119c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x840>
    1278:	ldrb	w1, [sp, #168]
    127c:	strb	w1, [x0]
    1280:	b	1264 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x908>
    1284:	add	x0, sp, #0x208
    1288:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    128c:	add	x0, sp, #0x200
    1290:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1294:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1298:	add	x3, x3, #0x0
    129c:	mov	w2, #0x1ce                 	// #462
    12a0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    12a4:	add	x1, x1, #0x0
    12a8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    12ac:	add	x0, x0, #0x0
    12b0:	bl	0 <__assert_fail>
    12b4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    12b8:	add	x3, x3, #0x0
    12bc:	mov	w2, #0xf3                  	// #243
    12c0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    12c4:	add	x1, x1, #0x0
    12c8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    12cc:	add	x0, x0, #0x0
    12d0:	bl	0 <__assert_fail>
    12d4:	mov	x0, #0xe0                  	// #224
    12d8:	bl	0 <_Znwm>
    12dc:	mov	x21, x0
    12e0:	mov	x1, x25
    12e4:	mov	x2, x24
    12e8:	bl	288 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefE>
    12ec:	b	13ec <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xa90>
    12f0:	add	x0, sp, #0x120
    12f4:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    12f8:	ldr	x0, [sp, #288]
    12fc:	cbz	x0, 1430 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xad4>
    1300:	ldr	x1, [x0]
    1304:	ldr	x1, [x1, #8]
    1308:	blr	x1
    130c:	ldp	x27, x28, [sp, #80]
    1310:	b	a24 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xc8>
    1314:	str	x1, [x21, #8]
    1318:	ldr	x1, [sp, #160]
    131c:	str	x1, [x21, #16]
    1320:	ldr	x1, [sp, #168]
    1324:	str	x1, [x21, #24]
    1328:	add	x0, sp, #0xa8
    132c:	str	x0, [sp, #152]
    1330:	b	119c <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x840>
    1334:	stp	x27, x28, [sp, #80]
    1338:	ldrb	w0, [sp, #296]
    133c:	and	w0, w0, #0xfffffffe
    1340:	strb	w0, [sp, #296]
    1344:	strb	wzr, [sp, #288]
    1348:	ldrb	w0, [sp, #296]
    134c:	and	w20, w0, #0x1
    1350:	bfi	w0, w20, #1, #1
    1354:	strb	w0, [sp, #296]
    1358:	ldrb	w0, [sp, #288]
    135c:	mov	x27, #0x0                   	// #0
    1360:	cbnz	w0, ab0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x154>
    1364:	ldrb	w0, [x23, #40]
    1368:	cbz	w0, 12d4 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x978>
    136c:	mov	x0, x23
    1370:	ldp	x2, x3, [x0], #16
    1374:	stp	x2, x3, [sp, #152]
    1378:	ldr	x28, [x23, #16]
    137c:	ldr	x26, [x0, #8]
    1380:	ldr	x22, [x0, #16]
    1384:	str	xzr, [x0, #16]
    1388:	str	xzr, [x0, #8]
    138c:	str	xzr, [x23, #16]
    1390:	mov	x0, #0xe0                  	// #224
    1394:	bl	0 <_Znwm>
    1398:	mov	x21, x0
    139c:	ldp	x2, x3, [sp, #152]
    13a0:	stp	x2, x3, [sp, #192]
    13a4:	str	x28, [sp, #208]
    13a8:	str	x26, [sp, #216]
    13ac:	str	x22, [sp, #224]
    13b0:	mov	w1, #0x1                   	// #1
    13b4:	strb	w1, [sp, #232]
    13b8:	add	x3, sp, #0xc0
    13bc:	mov	x1, x25
    13c0:	mov	x2, x24
    13c4:	bl	190 <_ZN4llvm7remarks16YAMLRemarkParserC1ENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEE>
    13c8:	ldrb	w0, [sp, #232]
    13cc:	cbz	w0, 13dc <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xa80>
    13d0:	ldr	x0, [sp, #208]
    13d4:	cbz	x0, 13dc <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xa80>
    13d8:	bl	0 <_ZdlPv>
    13dc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    13e0:	ldr	x0, [x0]
    13e4:	add	x0, x0, #0x10
    13e8:	str	x0, [x21]
    13ec:	cbz	x27, 1408 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xaac>
    13f0:	ldr	x0, [x21, #216]
    13f4:	str	x27, [x21, #216]
    13f8:	cbz	x0, 1408 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xaac>
    13fc:	ldr	x1, [x0]
    1400:	ldr	x1, [x1, #8]
    1404:	blr	x1
    1408:	ldrb	w1, [x19, #8]
    140c:	and	w1, w1, #0xfffffffe
    1410:	orr	w1, w1, #0x2
    1414:	strb	w1, [x19, #8]
    1418:	str	x21, [x19]
    141c:	ldrb	w0, [sp, #296]
    1420:	tbnz	w0, #1, 12f0 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x994>
    1424:	cbnz	w20, 12f8 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0x99c>
    1428:	ldp	x27, x28, [sp, #80]
    142c:	b	a24 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xc8>
    1430:	ldp	x27, x28, [sp, #80]
    1434:	b	a24 <_ZN4llvm7remarks24createYAMLParserFromMetaENS_9StringRefENS_8OptionalINS0_17ParsedStringTableEEENS2_IS1_EE+0xc8>

0000000000001438 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE>:
    1438:	stp	x29, x30, [sp, #-80]!
    143c:	mov	x29, sp
    1440:	stp	x19, x20, [sp, #16]
    1444:	str	x21, [sp, #32]
    1448:	mov	x19, x8
    144c:	mov	x21, x0
    1450:	mov	x20, x1
    1454:	mov	x0, x1
    1458:	bl	0 <_ZN4llvm4yaml12KeyValueNode8getValueEv>
    145c:	cbz	x0, 14b8 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x80>
    1460:	ldr	w0, [x0, #32]
    1464:	cmp	w0, #0x1
    1468:	b.eq	1620 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x1e8>  // b.none
    146c:	add	x8, sp, #0x48
    1470:	mov	x3, x20
    1474:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1478:	add	x1, x1, #0x0
    147c:	mov	x2, #0x20                  	// #32
    1480:	mov	x0, x21
    1484:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    1488:	ldrb	w0, [x19, #16]
    148c:	orr	w0, w0, #0x3
    1490:	strb	w0, [x19, #16]
    1494:	ldr	x0, [sp, #72]
    1498:	ands	x1, x0, #0xfffffffffffffffe
    149c:	cset	x0, ne  // ne = any
    14a0:	orr	x0, x0, x1
    14a4:	str	x0, [sp, #72]
    14a8:	ands	x0, x0, #0xfffffffffffffffe
    14ac:	b.eq	14d8 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0xa0>  // b.none
    14b0:	str	x0, [x19]
    14b4:	b	1544 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x10c>
    14b8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    14bc:	add	x3, x3, #0x0
    14c0:	mov	w2, #0x69                  	// #105
    14c4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    14c8:	add	x1, x1, #0x0
    14cc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    14d0:	add	x0, x0, #0x0
    14d4:	bl	0 <__assert_fail>
    14d8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    14dc:	add	x3, x3, #0x0
    14e0:	mov	w2, #0x1ce                 	// #462
    14e4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    14e8:	add	x1, x1, #0x0
    14ec:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    14f0:	add	x0, x0, #0x0
    14f4:	bl	0 <__assert_fail>
    14f8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    14fc:	add	x3, x3, #0x0
    1500:	mov	w2, #0x49                  	// #73
    1504:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1508:	add	x1, x1, #0x0
    150c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1510:	add	x0, x0, #0x0
    1514:	bl	0 <__assert_fail>
    1518:	ldrb	w0, [sp, #56]
    151c:	and	w0, w0, #0xfffffffd
    1520:	strb	w0, [sp, #56]
    1524:	ldr	x0, [sp, #48]
    1528:	str	xzr, [sp, #48]
    152c:	ldrb	w1, [x19, #16]
    1530:	orr	w1, w1, #0x3
    1534:	strb	w1, [x19, #16]
    1538:	ands	x0, x0, #0xfffffffffffffffe
    153c:	cbz	x0, 1558 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x120>
    1540:	str	x0, [x19]
    1544:	mov	x0, x19
    1548:	ldp	x19, x20, [sp, #16]
    154c:	ldr	x21, [sp, #32]
    1550:	ldp	x29, x30, [sp], #80
    1554:	ret
    1558:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    155c:	add	x3, x3, #0x0
    1560:	mov	w2, #0x1ce                 	// #462
    1564:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1568:	add	x1, x1, #0x0
    156c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1570:	add	x0, x0, #0x0
    1574:	bl	0 <__assert_fail>
    1578:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    157c:	add	x3, x3, #0x0
    1580:	mov	w2, #0x9c                  	// #156
    1584:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1588:	add	x1, x1, #0x0
    158c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1590:	add	x0, x0, #0x0
    1594:	bl	0 <__assert_fail>
    1598:	ldrb	w0, [sp, #64]
    159c:	and	w0, w0, #0xfffffffd
    15a0:	strb	w0, [sp, #64]
    15a4:	ldr	x0, [sp, #48]
    15a8:	str	xzr, [sp, #48]
    15ac:	ldrb	w1, [x19, #16]
    15b0:	orr	w1, w1, #0x3
    15b4:	strb	w1, [x19, #16]
    15b8:	ands	x0, x0, #0xfffffffffffffffe
    15bc:	cbz	x0, 15c8 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x190>
    15c0:	str	x0, [x19]
    15c4:	b	1544 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x10c>
    15c8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    15cc:	add	x3, x3, #0x0
    15d0:	mov	w2, #0x1ce                 	// #462
    15d4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    15d8:	add	x1, x1, #0x0
    15dc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    15e0:	add	x0, x0, #0x0
    15e4:	bl	0 <__assert_fail>
    15e8:	add	x2, x2, #0x1
    15ec:	subs	x1, x1, #0x1
    15f0:	b.ne	1674 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x23c>  // b.any
    15f4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    15f8:	add	x3, x3, #0x0
    15fc:	mov	w2, #0xa3                  	// #163
    1600:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1604:	add	x1, x1, #0x0
    1608:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    160c:	add	x0, x0, #0x0
    1610:	bl	0 <__assert_fail>
    1614:	cmp	x1, x0
    1618:	csel	x1, x1, x0, ls  // ls = plast
    161c:	b	1684 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x24c>
    1620:	add	x8, sp, #0x30
    1624:	mov	x1, x20
    1628:	mov	x0, x21
    162c:	bl	748 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE>
    1630:	ldrb	w0, [sp, #56]
    1634:	tbnz	w0, #0, 1518 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0xe0>
    1638:	ldr	w1, [sp, #48]
    163c:	ldrb	w0, [x21, #88]
    1640:	cbz	w0, 14f8 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0xc0>
    1644:	add	x8, sp, #0x30
    1648:	mov	w1, w1
    164c:	add	x0, x21, #0x30
    1650:	bl	0 <_ZNK4llvm7remarks17ParsedStringTableixEm>
    1654:	ldrb	w0, [sp, #64]
    1658:	tbnz	w0, #0, 1598 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x160>
    165c:	ldr	x2, [sp, #48]
    1660:	ldr	x1, [sp, #56]
    1664:	cbz	x1, 1578 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x140>
    1668:	ldrb	w0, [x2]
    166c:	cmp	w0, #0x27
    1670:	b.eq	15e8 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x1b0>  // b.none
    1674:	sub	x0, x1, #0x1
    1678:	ldrb	w3, [x2, x0]
    167c:	cmp	w3, #0x27
    1680:	b.eq	1614 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x1dc>  // b.none
    1684:	ldrb	w0, [x19, #16]
    1688:	and	w0, w0, #0xfffffffe
    168c:	orr	w0, w0, #0x2
    1690:	strb	w0, [x19, #16]
    1694:	str	x2, [x19]
    1698:	str	x1, [x19, #8]
    169c:	b	1544 <_ZN4llvm7remarks22YAMLStrTabRemarkParser8parseStrERNS_4yaml12KeyValueNodeE+0x10c>

00000000000016a0 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE>:
    16a0:	stp	x29, x30, [sp, #-272]!
    16a4:	mov	x29, sp
    16a8:	stp	x19, x20, [sp, #16]
    16ac:	stp	x23, x24, [sp, #48]
    16b0:	mov	x23, x8
    16b4:	mov	x19, x0
    16b8:	mov	x0, x1
    16bc:	str	x1, [sp, #112]
    16c0:	bl	0 <_ZN4llvm4yaml12KeyValueNode8getValueEv>
    16c4:	cbz	x0, 1730 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x90>
    16c8:	ldr	w1, [x0, #32]
    16cc:	cmp	w1, #0x4
    16d0:	b.eq	1c40 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x5a0>  // b.none
    16d4:	add	x8, sp, #0xe0
    16d8:	ldr	x3, [sp, #112]
    16dc:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    16e0:	add	x1, x1, #0x0
    16e4:	mov	x2, #0x21                  	// #33
    16e8:	mov	x0, x19
    16ec:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    16f0:	ldrb	w0, [x23, #24]
    16f4:	orr	w0, w0, #0x3
    16f8:	strb	w0, [x23, #24]
    16fc:	ldr	x0, [sp, #224]
    1700:	ands	x1, x0, #0xfffffffffffffffe
    1704:	cset	x0, ne  // ne = any
    1708:	orr	x0, x0, x1
    170c:	str	x0, [sp, #224]
    1710:	ands	x0, x0, #0xfffffffffffffffe
    1714:	b.eq	1c14 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x574>  // b.none
    1718:	str	x0, [x23]
    171c:	mov	x0, x23
    1720:	ldp	x19, x20, [sp, #16]
    1724:	ldp	x23, x24, [sp, #48]
    1728:	ldp	x29, x30, [sp], #272
    172c:	ret
    1730:	stp	x21, x22, [sp, #32]
    1734:	stp	x25, x26, [sp, #64]
    1738:	stp	x27, x28, [sp, #80]
    173c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1740:	add	x3, x3, #0x0
    1744:	mov	w2, #0x69                  	// #105
    1748:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    174c:	add	x1, x1, #0x0
    1750:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1754:	add	x0, x0, #0x0
    1758:	bl	0 <__assert_fail>
    175c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1760:	add	x3, x3, #0x0
    1764:	mov	w2, #0x14f                 	// #335
    1768:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    176c:	add	x1, x1, #0x0
    1770:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1774:	add	x0, x0, #0x0
    1778:	bl	0 <__assert_fail>
    177c:	and	x0, x0, #0xff
    1780:	and	w0, w0, #0xfffffffd
    1784:	strb	w0, [sp, #168]
    1788:	ldr	x0, [sp, #152]
    178c:	str	xzr, [sp, #152]
    1790:	ldrb	w1, [x23, #24]
    1794:	orr	w1, w1, #0x3
    1798:	strb	w1, [x23, #24]
    179c:	ands	x0, x0, #0xfffffffffffffffe
    17a0:	cbz	x0, 17cc <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x12c>
    17a4:	str	x0, [x23]
    17a8:	ldr	x0, [sp, #152]
    17ac:	cbz	x0, 1c88 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x5e8>
    17b0:	ldr	x1, [x0]
    17b4:	ldr	x1, [x1, #8]
    17b8:	blr	x1
    17bc:	ldp	x21, x22, [sp, #32]
    17c0:	ldp	x25, x26, [sp, #64]
    17c4:	ldp	x27, x28, [sp, #80]
    17c8:	b	171c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x7c>
    17cc:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    17d0:	add	x3, x3, #0x0
    17d4:	mov	w2, #0x1ce                 	// #462
    17d8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    17dc:	add	x1, x1, #0x0
    17e0:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    17e4:	add	x0, x0, #0x0
    17e8:	bl	0 <__assert_fail>
    17ec:	mov	x2, #0x4                   	// #4
    17f0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    17f4:	add	x1, x1, #0x0
    17f8:	mov	x0, x24
    17fc:	bl	0 <memcmp>
    1800:	cbnz	w0, 18bc <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x21c>
    1804:	ldr	x0, [x19]
    1808:	mov	x8, x26
    180c:	ldr	x2, [x0, #24]
    1810:	mov	x1, x20
    1814:	mov	x0, x19
    1818:	blr	x2
    181c:	ldrb	w0, [sp, #192]
    1820:	and	w1, w0, #0x1
    1824:	bfi	w0, w1, #1, #1
    1828:	strb	w0, [sp, #192]
    182c:	cbnz	w1, 1928 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x288>
    1830:	cbz	w27, 1910 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x270>
    1834:	ldp	x0, x1, [sp, #176]
    1838:	stp	x0, x1, [sp, #200]
    183c:	ldrb	w0, [sp, #176]
    1840:	str	w0, [sp, #128]
    1844:	ldrb	w0, [sp, #168]
    1848:	tbnz	w0, #1, 1b28 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x488>
    184c:	ldrb	w0, [sp, #168]
    1850:	tbz	w0, #0, 1868 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1c8>
    1854:	ldr	x0, [sp, #152]
    1858:	cbz	x0, 1868 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1c8>
    185c:	ldr	x1, [x0]
    1860:	ldr	x1, [x1, #8]
    1864:	blr	x1
    1868:	mov	x0, x21
    186c:	bl	0 <_ZN4llvm4yaml11MappingNode9incrementEv>
    1870:	ldr	x0, [x21, #80]
    1874:	cbz	x0, 1b30 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x490>
    1878:	ldr	x20, [x21, #80]
    187c:	cbz	x20, 175c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0xbc>
    1880:	mov	x8, x25
    1884:	mov	x1, x20
    1888:	mov	x0, x19
    188c:	bl	654 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE>
    1890:	ldrb	w0, [sp, #168]
    1894:	and	w1, w0, #0x1
    1898:	bfi	w0, w1, #1, #1
    189c:	strb	w0, [sp, #168]
    18a0:	cbnz	w1, 177c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0xdc>
    18a4:	ldr	x24, [sp, #152]
    18a8:	ldr	x22, [sp, #160]
    18ac:	cmp	x22, #0x4
    18b0:	b.eq	17ec <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x14c>  // b.none
    18b4:	cmp	x22, #0x6
    18b8:	b.eq	1994 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x2f4>  // b.none
    18bc:	cmp	x22, #0x4
    18c0:	b.eq	1a54 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x3b4>  // b.none
    18c4:	add	x8, sp, #0xe8
    18c8:	mov	x3, x20
    18cc:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    18d0:	add	x1, x1, #0x0
    18d4:	mov	x2, #0x1e                  	// #30
    18d8:	mov	x0, x19
    18dc:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    18e0:	ldrb	w0, [x23, #24]
    18e4:	orr	w0, w0, #0x3
    18e8:	strb	w0, [x23, #24]
    18ec:	ldr	x0, [sp, #232]
    18f0:	ands	x1, x0, #0xfffffffffffffffe
    18f4:	cset	x0, ne  // ne = any
    18f8:	orr	x0, x0, x1
    18fc:	str	x0, [sp, #232]
    1900:	ands	x0, x0, #0xfffffffffffffffe
    1904:	b.eq	1b08 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x468>  // b.none
    1908:	str	x0, [x23]
    190c:	b	1954 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x2b4>
    1910:	ldp	x0, x1, [sp, #176]
    1914:	stp	x0, x1, [sp, #200]
    1918:	ldrb	w0, [sp, #176]
    191c:	str	w0, [sp, #128]
    1920:	mov	w27, #0x1                   	// #1
    1924:	b	1844 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1a4>
    1928:	ldrb	w0, [sp, #192]
    192c:	and	w0, w0, #0xfffffffd
    1930:	strb	w0, [sp, #192]
    1934:	ldr	x0, [sp, #176]
    1938:	str	xzr, [sp, #176]
    193c:	ldrb	w1, [x23, #24]
    1940:	orr	w1, w1, #0x3
    1944:	strb	w1, [x23, #24]
    1948:	ands	x0, x0, #0xfffffffffffffffe
    194c:	cbz	x0, 1974 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x2d4>
    1950:	str	x0, [x23]
    1954:	ldrb	w0, [sp, #168]
    1958:	tbnz	w0, #1, 1b9c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x4fc>
    195c:	ldrb	w0, [sp, #168]
    1960:	tbnz	w0, #0, 17a8 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x108>
    1964:	ldp	x21, x22, [sp, #32]
    1968:	ldp	x25, x26, [sp, #64]
    196c:	ldp	x27, x28, [sp, #80]
    1970:	b	171c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x7c>
    1974:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1978:	add	x3, x3, #0x0
    197c:	mov	w2, #0x1ce                 	// #462
    1980:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1984:	add	x1, x1, #0x0
    1988:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    198c:	add	x0, x0, #0x0
    1990:	bl	0 <__assert_fail>
    1994:	mov	x2, #0x6                   	// #6
    1998:	ldr	x1, [sp, #136]
    199c:	mov	x0, x24
    19a0:	bl	0 <memcmp>
    19a4:	cbnz	w0, 18c4 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x224>
    19a8:	mov	x8, x26
    19ac:	mov	x1, x20
    19b0:	mov	x0, x19
    19b4:	bl	748 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE>
    19b8:	ldrb	w0, [sp, #184]
    19bc:	and	w1, w0, #0x1
    19c0:	bfi	w0, w1, #1, #1
    19c4:	strb	w0, [sp, #184]
    19c8:	cbnz	w1, 1a04 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x364>
    19cc:	ldr	w0, [sp, #132]
    19d0:	cbz	w0, 19e8 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x348>
    19d4:	ldr	w0, [sp, #176]
    19d8:	ldr	x1, [sp, #120]
    19dc:	bfxil	x1, x0, #0, #32
    19e0:	str	x1, [sp, #120]
    19e4:	b	1844 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1a4>
    19e8:	ldr	w0, [sp, #176]
    19ec:	ldr	x1, [sp, #120]
    19f0:	bfxil	x1, x0, #0, #32
    19f4:	str	x1, [sp, #120]
    19f8:	mov	w0, #0x1                   	// #1
    19fc:	str	w0, [sp, #132]
    1a00:	b	1844 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1a4>
    1a04:	ldrb	w0, [sp, #184]
    1a08:	and	w0, w0, #0xfffffffd
    1a0c:	strb	w0, [sp, #184]
    1a10:	ldr	x0, [sp, #176]
    1a14:	str	xzr, [sp, #176]
    1a18:	ldrb	w1, [x23, #24]
    1a1c:	orr	w1, w1, #0x3
    1a20:	strb	w1, [x23, #24]
    1a24:	ands	x0, x0, #0xfffffffffffffffe
    1a28:	cbz	x0, 1a34 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x394>
    1a2c:	str	x0, [x23]
    1a30:	b	1954 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x2b4>
    1a34:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1a38:	add	x3, x3, #0x0
    1a3c:	mov	w2, #0x1ce                 	// #462
    1a40:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1a44:	add	x1, x1, #0x0
    1a48:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1a4c:	add	x0, x0, #0x0
    1a50:	bl	0 <__assert_fail>
    1a54:	mov	x2, #0x4                   	// #4
    1a58:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1a5c:	add	x1, x1, #0x0
    1a60:	mov	x0, x24
    1a64:	bl	0 <memcmp>
    1a68:	cbnz	w0, 18c4 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x224>
    1a6c:	mov	x8, x26
    1a70:	mov	x1, x20
    1a74:	mov	x0, x19
    1a78:	bl	748 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE>
    1a7c:	ldrb	w0, [sp, #184]
    1a80:	and	w1, w0, #0x1
    1a84:	bfi	w0, w1, #1, #1
    1a88:	strb	w0, [sp, #184]
    1a8c:	cbnz	w1, 1ab8 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x418>
    1a90:	ldr	w0, [sp, #108]
    1a94:	cbz	w0, 1aa4 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x404>
    1a98:	ldr	w0, [sp, #176]
    1a9c:	bfxil	x28, x0, #0, #32
    1aa0:	b	1844 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1a4>
    1aa4:	ldr	w0, [sp, #176]
    1aa8:	bfxil	x28, x0, #0, #32
    1aac:	mov	w0, #0x1                   	// #1
    1ab0:	str	w0, [sp, #108]
    1ab4:	b	1844 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1a4>
    1ab8:	ldrb	w0, [sp, #184]
    1abc:	and	w0, w0, #0xfffffffd
    1ac0:	strb	w0, [sp, #184]
    1ac4:	ldr	x0, [sp, #176]
    1ac8:	str	xzr, [sp, #176]
    1acc:	ldrb	w1, [x23, #24]
    1ad0:	orr	w1, w1, #0x3
    1ad4:	strb	w1, [x23, #24]
    1ad8:	ands	x0, x0, #0xfffffffffffffffe
    1adc:	cbz	x0, 1ae8 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x448>
    1ae0:	str	x0, [x23]
    1ae4:	b	1954 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x2b4>
    1ae8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1aec:	add	x3, x3, #0x0
    1af0:	mov	w2, #0x1ce                 	// #462
    1af4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1af8:	add	x1, x1, #0x0
    1afc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1b00:	add	x0, x0, #0x0
    1b04:	bl	0 <__assert_fail>
    1b08:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1b0c:	add	x3, x3, #0x0
    1b10:	mov	w2, #0x1ce                 	// #462
    1b14:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1b18:	add	x1, x1, #0x0
    1b1c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1b20:	add	x0, x0, #0x0
    1b24:	bl	0 <__assert_fail>
    1b28:	add	x0, sp, #0x98
    1b2c:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1b30:	cbz	w27, 1b44 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x4a4>
    1b34:	ldr	w0, [sp, #108]
    1b38:	cbz	w0, 1b44 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x4a4>
    1b3c:	ldr	w0, [sp, #132]
    1b40:	cbnz	w0, 1bc4 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x524>
    1b44:	add	x8, sp, #0xf0
    1b48:	ldr	x3, [sp, #112]
    1b4c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1b50:	add	x1, x1, #0x0
    1b54:	mov	x2, #0x19                  	// #25
    1b58:	mov	x0, x19
    1b5c:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    1b60:	ldrb	w0, [x23, #24]
    1b64:	orr	w0, w0, #0x3
    1b68:	strb	w0, [x23, #24]
    1b6c:	ldr	x0, [sp, #240]
    1b70:	ands	x1, x0, #0xfffffffffffffffe
    1b74:	cset	x0, ne  // ne = any
    1b78:	orr	x0, x0, x1
    1b7c:	str	x0, [sp, #240]
    1b80:	ands	x0, x0, #0xfffffffffffffffe
    1b84:	b.eq	1ba4 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x504>  // b.none
    1b88:	str	x0, [x23]
    1b8c:	ldp	x21, x22, [sp, #32]
    1b90:	ldp	x25, x26, [sp, #64]
    1b94:	ldp	x27, x28, [sp, #80]
    1b98:	b	171c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x7c>
    1b9c:	add	x0, sp, #0x98
    1ba0:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1ba4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1ba8:	add	x3, x3, #0x0
    1bac:	mov	w2, #0x1ce                 	// #462
    1bb0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1bb4:	add	x1, x1, #0x0
    1bb8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1bbc:	add	x0, x0, #0x0
    1bc0:	bl	0 <__assert_fail>
    1bc4:	ldr	w2, [sp, #128]
    1bc8:	strb	w2, [sp, #200]
    1bcc:	ldp	x0, x1, [sp, #200]
    1bd0:	stp	x0, x1, [sp, #248]
    1bd4:	ldrb	w0, [x23, #24]
    1bd8:	and	w0, w0, #0xfffffffe
    1bdc:	orr	w0, w0, #0x2
    1be0:	strb	w0, [x23, #24]
    1be4:	strb	w2, [sp, #248]
    1be8:	str	w28, [sp, #264]
    1bec:	ldr	w0, [sp, #120]
    1bf0:	str	w0, [sp, #268]
    1bf4:	ldp	x0, x1, [sp, #248]
    1bf8:	stp	x0, x1, [x23]
    1bfc:	ldr	x0, [sp, #264]
    1c00:	str	x0, [x23, #16]
    1c04:	ldp	x21, x22, [sp, #32]
    1c08:	ldp	x25, x26, [sp, #64]
    1c0c:	ldp	x27, x28, [sp, #80]
    1c10:	b	171c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x7c>
    1c14:	stp	x21, x22, [sp, #32]
    1c18:	stp	x25, x26, [sp, #64]
    1c1c:	stp	x27, x28, [sp, #80]
    1c20:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1c24:	add	x3, x3, #0x0
    1c28:	mov	w2, #0x1ce                 	// #462
    1c2c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1c30:	add	x1, x1, #0x0
    1c34:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1c38:	add	x0, x0, #0x0
    1c3c:	bl	0 <__assert_fail>
    1c40:	stp	x21, x22, [sp, #32]
    1c44:	stp	x25, x26, [sp, #64]
    1c48:	stp	x27, x28, [sp, #80]
    1c4c:	mov	x28, #0x0                   	// #0
    1c50:	str	xzr, [sp, #120]
    1c54:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1c58:	mov	x21, x0
    1c5c:	cbz	x0, 1b44 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x4a4>
    1c60:	str	wzr, [sp, #132]
    1c64:	str	wzr, [sp, #128]
    1c68:	mov	w27, #0x0                   	// #0
    1c6c:	str	wzr, [sp, #108]
    1c70:	add	x25, sp, #0x98
    1c74:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1c78:	add	x0, x0, #0x0
    1c7c:	str	x0, [sp, #136]
    1c80:	add	x26, sp, #0xb0
    1c84:	b	1878 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x1d8>
    1c88:	ldp	x21, x22, [sp, #32]
    1c8c:	ldp	x25, x26, [sp, #64]
    1c90:	ldp	x27, x28, [sp, #80]
    1c94:	b	171c <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE+0x7c>

0000000000001c98 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE>:
    1c98:	stp	x29, x30, [sp, #-336]!
    1c9c:	mov	x29, sp
    1ca0:	stp	x19, x20, [sp, #16]
    1ca4:	stp	x21, x22, [sp, #32]
    1ca8:	mov	x20, x8
    1cac:	mov	x19, x0
    1cb0:	mov	x21, x1
    1cb4:	ldr	w0, [x1, #32]
    1cb8:	cmp	w0, #0x4
    1cbc:	b.eq	20dc <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x444>  // b.none
    1cc0:	add	x8, sp, #0x128
    1cc4:	mov	x3, x1
    1cc8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1ccc:	add	x1, x1, #0x0
    1cd0:	mov	x2, #0x21                  	// #33
    1cd4:	mov	x0, x19
    1cd8:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    1cdc:	ldrb	w0, [x20, #64]
    1ce0:	orr	w0, w0, #0x3
    1ce4:	strb	w0, [x20, #64]
    1ce8:	ldr	x0, [sp, #296]
    1cec:	ands	x1, x0, #0xfffffffffffffffe
    1cf0:	cset	x0, ne  // ne = any
    1cf4:	orr	x0, x0, x1
    1cf8:	str	x0, [sp, #296]
    1cfc:	ands	x0, x0, #0xfffffffffffffffe
    1d00:	b.eq	2294 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x5fc>  // b.none
    1d04:	str	x0, [x20]
    1d08:	mov	x0, x20
    1d0c:	ldp	x19, x20, [sp, #16]
    1d10:	ldp	x21, x22, [sp, #32]
    1d14:	ldp	x29, x30, [sp], #336
    1d18:	ret
    1d1c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1d20:	add	x3, x3, #0x0
    1d24:	mov	w2, #0x14f                 	// #335
    1d28:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1d2c:	add	x1, x1, #0x0
    1d30:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1d34:	add	x0, x0, #0x0
    1d38:	bl	0 <__assert_fail>
    1d3c:	and	x0, x0, #0xff
    1d40:	and	w0, w0, #0xfffffffd
    1d44:	strb	w0, [sp, #144]
    1d48:	ldr	x0, [sp, #128]
    1d4c:	str	xzr, [sp, #128]
    1d50:	ldrb	w1, [x20, #64]
    1d54:	orr	w1, w1, #0x3
    1d58:	strb	w1, [x20, #64]
    1d5c:	ands	x0, x0, #0xfffffffffffffffe
    1d60:	cbz	x0, 1d8c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0xf4>
    1d64:	str	x0, [x20]
    1d68:	ldr	x0, [sp, #128]
    1d6c:	cbz	x0, 22c0 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x628>
    1d70:	ldr	x1, [x0]
    1d74:	ldr	x1, [x1, #8]
    1d78:	blr	x1
    1d7c:	ldp	x23, x24, [sp, #48]
    1d80:	ldp	x25, x26, [sp, #64]
    1d84:	ldp	x27, x28, [sp, #80]
    1d88:	b	1d08 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x70>
    1d8c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1d90:	add	x3, x3, #0x0
    1d94:	mov	w2, #0x1ce                 	// #462
    1d98:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1d9c:	add	x1, x1, #0x0
    1da0:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1da4:	add	x0, x0, #0x0
    1da8:	bl	0 <__assert_fail>
    1dac:	mov	x2, #0x8                   	// #8
    1db0:	mov	x1, x25
    1db4:	mov	x0, x26
    1db8:	bl	0 <memcmp>
    1dbc:	cbnz	w0, 215c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x4c4>
    1dc0:	ldr	w0, [sp, #104]
    1dc4:	cbnz	w0, 1e2c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x194>
    1dc8:	mov	x8, x27
    1dcc:	mov	x1, x23
    1dd0:	mov	x0, x19
    1dd4:	bl	16a0 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE>
    1dd8:	ldrb	w0, [sp, #176]
    1ddc:	tbz	w0, #0, 1e98 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x200>
    1de0:	ldrb	w0, [sp, #176]
    1de4:	and	w0, w0, #0xfffffffd
    1de8:	strb	w0, [sp, #176]
    1dec:	ldr	x0, [sp, #152]
    1df0:	str	xzr, [sp, #152]
    1df4:	ldrb	w1, [x20, #64]
    1df8:	orr	w1, w1, #0x3
    1dfc:	strb	w1, [x20, #64]
    1e00:	ands	x0, x0, #0xfffffffffffffffe
    1e04:	cbz	x0, 1ee8 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x250>
    1e08:	str	x0, [x20]
    1e0c:	ldrb	w0, [sp, #144]
    1e10:	tbnz	w0, #1, 1fe4 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x34c>
    1e14:	ldrb	w0, [sp, #144]
    1e18:	tbnz	w0, #0, 1d68 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0xd0>
    1e1c:	ldp	x23, x24, [sp, #48]
    1e20:	ldp	x25, x26, [sp, #64]
    1e24:	ldp	x27, x28, [sp, #80]
    1e28:	b	1d08 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x70>
    1e2c:	add	x8, sp, #0x130
    1e30:	mov	x3, x23
    1e34:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1e38:	add	x1, x1, #0x0
    1e3c:	mov	x2, #0x30                  	// #48
    1e40:	mov	x0, x19
    1e44:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    1e48:	ldrb	w0, [x20, #64]
    1e4c:	orr	w0, w0, #0x3
    1e50:	strb	w0, [x20, #64]
    1e54:	ldr	x0, [sp, #304]
    1e58:	ands	x1, x0, #0xfffffffffffffffe
    1e5c:	cset	x0, ne  // ne = any
    1e60:	orr	x0, x0, x1
    1e64:	str	x0, [sp, #304]
    1e68:	ands	x0, x0, #0xfffffffffffffffe
    1e6c:	b.eq	1e78 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x1e0>  // b.none
    1e70:	str	x0, [x20]
    1e74:	b	1e0c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x174>
    1e78:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1e7c:	add	x3, x3, #0x0
    1e80:	mov	w2, #0x1ce                 	// #462
    1e84:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1e88:	add	x1, x1, #0x0
    1e8c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1e90:	add	x0, x0, #0x0
    1e94:	bl	0 <__assert_fail>
    1e98:	ldp	x0, x1, [x27]
    1e9c:	stp	x0, x1, [sp, #216]
    1ea0:	ldr	x0, [x27, #16]
    1ea4:	str	x0, [sp, #232]
    1ea8:	ldrb	w0, [sp, #152]
    1eac:	str	w0, [sp, #116]
    1eb0:	ldrb	w0, [sp, #144]
    1eb4:	tbnz	w0, #1, 1ee0 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x248>
    1eb8:	ldrb	w0, [sp, #144]
    1ebc:	tbz	w0, #0, 1ed4 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x23c>
    1ec0:	ldr	x0, [sp, #128]
    1ec4:	cbz	x0, 1ed4 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x23c>
    1ec8:	ldr	x1, [x0]
    1ecc:	ldr	x1, [x1, #8]
    1ed0:	blr	x1
    1ed4:	mov	w0, #0x1                   	// #1
    1ed8:	str	w0, [sp, #104]
    1edc:	b	21d8 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x540>
    1ee0:	add	x0, sp, #0x80
    1ee4:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1ee8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1eec:	add	x3, x3, #0x0
    1ef0:	mov	w2, #0x1ce                 	// #462
    1ef4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1ef8:	add	x1, x1, #0x0
    1efc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1f00:	add	x0, x0, #0x0
    1f04:	bl	0 <__assert_fail>
    1f08:	add	x8, sp, #0x138
    1f0c:	mov	x3, x23
    1f10:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1f14:	add	x1, x1, #0x0
    1f18:	mov	x2, #0x2e                  	// #46
    1f1c:	mov	x0, x19
    1f20:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    1f24:	ldrb	w0, [x20, #64]
    1f28:	orr	w0, w0, #0x3
    1f2c:	strb	w0, [x20, #64]
    1f30:	ldr	x0, [sp, #312]
    1f34:	ands	x1, x0, #0xfffffffffffffffe
    1f38:	cset	x0, ne  // ne = any
    1f3c:	orr	x0, x0, x1
    1f40:	str	x0, [sp, #312]
    1f44:	ands	x0, x0, #0xfffffffffffffffe
    1f48:	b.eq	1f54 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x2bc>  // b.none
    1f4c:	str	x0, [x20]
    1f50:	b	1e0c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x174>
    1f54:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1f58:	add	x3, x3, #0x0
    1f5c:	mov	w2, #0x1ce                 	// #462
    1f60:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1f64:	add	x1, x1, #0x0
    1f68:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1f6c:	add	x0, x0, #0x0
    1f70:	bl	0 <__assert_fail>
    1f74:	str	x26, [sp, #272]
    1f78:	and	w0, w26, #0xff
    1f7c:	str	w0, [sp, #112]
    1f80:	mov	w0, #0x1                   	// #1
    1f84:	str	w0, [sp, #100]
    1f88:	b	21a8 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x510>
    1f8c:	add	x0, sp, #0x80
    1f90:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1f94:	ldrb	w0, [sp, #168]
    1f98:	and	w0, w0, #0xfffffffd
    1f9c:	strb	w0, [sp, #168]
    1fa0:	ldr	x0, [sp, #152]
    1fa4:	str	xzr, [sp, #152]
    1fa8:	ldrb	w1, [x20, #64]
    1fac:	orr	w1, w1, #0x3
    1fb0:	strb	w1, [x20, #64]
    1fb4:	ands	x0, x0, #0xfffffffffffffffe
    1fb8:	cbz	x0, 1fc4 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x32c>
    1fbc:	str	x0, [x20]
    1fc0:	b	1e0c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x174>
    1fc4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1fc8:	add	x3, x3, #0x0
    1fcc:	mov	w2, #0x1ce                 	// #462
    1fd0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1fd4:	add	x1, x1, #0x0
    1fd8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1fdc:	add	x0, x0, #0x0
    1fe0:	bl	0 <__assert_fail>
    1fe4:	add	x0, sp, #0x80
    1fe8:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1fec:	add	x8, sp, #0x140
    1ff0:	mov	x3, x21
    1ff4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    1ff8:	add	x1, x1, #0x0
    1ffc:	mov	x2, #0x18                  	// #24
    2000:	mov	x0, x19
    2004:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    2008:	ldrb	w0, [x20, #64]
    200c:	orr	w0, w0, #0x3
    2010:	strb	w0, [x20, #64]
    2014:	ldr	x0, [sp, #320]
    2018:	ands	x1, x0, #0xfffffffffffffffe
    201c:	cset	x0, ne  // ne = any
    2020:	orr	x0, x0, x1
    2024:	str	x0, [sp, #320]
    2028:	ands	x0, x0, #0xfffffffffffffffe
    202c:	b.eq	2044 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x3ac>  // b.none
    2030:	str	x0, [x20]
    2034:	ldp	x23, x24, [sp, #48]
    2038:	ldp	x25, x26, [sp, #64]
    203c:	ldp	x27, x28, [sp, #80]
    2040:	b	1d08 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x70>
    2044:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2048:	add	x3, x3, #0x0
    204c:	mov	w2, #0x1ce                 	// #462
    2050:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2054:	add	x1, x1, #0x0
    2058:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    205c:	add	x0, x0, #0x0
    2060:	bl	0 <__assert_fail>
    2064:	add	x8, sp, #0x148
    2068:	mov	x3, x21
    206c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2070:	add	x1, x1, #0x0
    2074:	mov	x2, #0x1a                  	// #26
    2078:	mov	x0, x19
    207c:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    2080:	ldrb	w0, [x20, #64]
    2084:	orr	w0, w0, #0x3
    2088:	strb	w0, [x20, #64]
    208c:	ldr	x0, [sp, #328]
    2090:	ands	x1, x0, #0xfffffffffffffffe
    2094:	cset	x0, ne  // ne = any
    2098:	orr	x0, x0, x1
    209c:	str	x0, [sp, #328]
    20a0:	ands	x0, x0, #0xfffffffffffffffe
    20a4:	b.eq	20bc <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x424>  // b.none
    20a8:	str	x0, [x20]
    20ac:	ldp	x23, x24, [sp, #48]
    20b0:	ldp	x25, x26, [sp, #64]
    20b4:	ldp	x27, x28, [sp, #80]
    20b8:	b	1d08 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x70>
    20bc:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    20c0:	add	x3, x3, #0x0
    20c4:	mov	w2, #0x1ce                 	// #462
    20c8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    20cc:	add	x1, x1, #0x0
    20d0:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    20d4:	add	x0, x0, #0x0
    20d8:	bl	0 <__assert_fail>
    20dc:	stp	x23, x24, [sp, #48]
    20e0:	stp	x25, x26, [sp, #64]
    20e4:	stp	x27, x28, [sp, #80]
    20e8:	mov	x0, x1
    20ec:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    20f0:	mov	x22, x0
    20f4:	cbz	x0, 1fec <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x354>
    20f8:	str	wzr, [sp, #108]
    20fc:	str	wzr, [sp, #96]
    2100:	str	wzr, [sp, #116]
    2104:	str	wzr, [sp, #100]
    2108:	str	wzr, [sp, #112]
    210c:	str	wzr, [sp, #104]
    2110:	add	x28, sp, #0x80
    2114:	add	x27, sp, #0x98
    2118:	adrp	x25, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    211c:	add	x25, x25, #0x0
    2120:	ldr	x23, [x22, #80]
    2124:	cbz	x23, 1d1c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x84>
    2128:	mov	x8, x28
    212c:	mov	x1, x23
    2130:	mov	x0, x19
    2134:	bl	654 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE>
    2138:	ldrb	w0, [sp, #144]
    213c:	and	w1, w0, #0x1
    2140:	bfi	w0, w1, #1, #1
    2144:	strb	w0, [sp, #144]
    2148:	cbnz	w1, 1d3c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0xa4>
    214c:	ldr	x26, [sp, #128]
    2150:	ldr	x24, [sp, #136]
    2154:	cmp	x24, #0x8
    2158:	b.eq	1dac <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x114>  // b.none
    215c:	ldr	w0, [sp, #96]
    2160:	cbnz	w0, 1f08 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x270>
    2164:	ldr	x0, [x19]
    2168:	mov	x8, x27
    216c:	ldr	x2, [x0, #24]
    2170:	mov	x1, x23
    2174:	mov	x0, x19
    2178:	blr	x2
    217c:	ldrb	w0, [sp, #168]
    2180:	tbnz	w0, #0, 1f94 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x2fc>
    2184:	ldp	x0, x1, [sp, #152]
    2188:	stp	x0, x1, [sp, #248]
    218c:	ldrb	w0, [sp, #152]
    2190:	str	w0, [sp, #108]
    2194:	ldr	w0, [sp, #100]
    2198:	cbz	w0, 1f74 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x2dc>
    219c:	str	x26, [sp, #272]
    21a0:	and	w0, w26, #0xff
    21a4:	str	w0, [sp, #112]
    21a8:	ldrb	w0, [sp, #144]
    21ac:	tbnz	w0, #1, 1f8c <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x2f4>
    21b0:	ldrb	w0, [sp, #144]
    21b4:	tbz	w0, #0, 21cc <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x534>
    21b8:	ldr	x0, [sp, #128]
    21bc:	cbz	x0, 21cc <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x534>
    21c0:	ldr	x1, [x0]
    21c4:	ldr	x1, [x1, #8]
    21c8:	blr	x1
    21cc:	str	x24, [sp, #120]
    21d0:	mov	w0, #0x1                   	// #1
    21d4:	str	w0, [sp, #96]
    21d8:	mov	x0, x22
    21dc:	bl	0 <_ZN4llvm4yaml11MappingNode9incrementEv>
    21e0:	ldr	x0, [x22, #80]
    21e4:	cbnz	x0, 2120 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x488>
    21e8:	ldr	w0, [sp, #100]
    21ec:	cbz	w0, 1fec <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x354>
    21f0:	ldr	w0, [sp, #96]
    21f4:	cbz	w0, 2064 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x3cc>
    21f8:	ldr	w6, [sp, #112]
    21fc:	strb	w6, [sp, #272]
    2200:	ldr	x2, [sp, #120]
    2204:	str	x2, [sp, #280]
    2208:	ldp	x0, x1, [sp, #272]
    220c:	stp	x0, x1, [sp, #152]
    2210:	ldr	w5, [sp, #108]
    2214:	strb	w5, [sp, #248]
    2218:	ldp	x0, x1, [sp, #248]
    221c:	stp	x0, x1, [sp, #168]
    2220:	ldr	w4, [sp, #116]
    2224:	strb	w4, [sp, #216]
    2228:	ldr	w3, [sp, #104]
    222c:	strb	w3, [sp, #240]
    2230:	ldp	x0, x1, [sp, #216]
    2234:	stp	x0, x1, [sp, #184]
    2238:	ldp	x0, x1, [sp, #232]
    223c:	stp	x0, x1, [sp, #200]
    2240:	ldrb	w0, [x20, #64]
    2244:	and	w0, w0, #0xfffffffe
    2248:	orr	w0, w0, #0x2
    224c:	strb	w0, [x20, #64]
    2250:	strb	w6, [sp, #152]
    2254:	str	x2, [sp, #160]
    2258:	strb	w5, [sp, #168]
    225c:	strb	w4, [sp, #184]
    2260:	strb	w3, [sp, #208]
    2264:	ldp	x0, x1, [sp, #152]
    2268:	stp	x0, x1, [x20]
    226c:	ldp	x0, x1, [sp, #168]
    2270:	stp	x0, x1, [x20, #16]
    2274:	ldp	x0, x1, [sp, #184]
    2278:	stp	x0, x1, [x20, #32]
    227c:	ldp	x0, x1, [sp, #200]
    2280:	stp	x0, x1, [x20, #48]
    2284:	ldp	x23, x24, [sp, #48]
    2288:	ldp	x25, x26, [sp, #64]
    228c:	ldp	x27, x28, [sp, #80]
    2290:	b	1d08 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x70>
    2294:	stp	x23, x24, [sp, #48]
    2298:	stp	x25, x26, [sp, #64]
    229c:	stp	x27, x28, [sp, #80]
    22a0:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    22a4:	add	x3, x3, #0x0
    22a8:	mov	w2, #0x1ce                 	// #462
    22ac:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    22b0:	add	x1, x1, #0x0
    22b4:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    22b8:	add	x0, x0, #0x0
    22bc:	bl	0 <__assert_fail>
    22c0:	ldp	x23, x24, [sp, #48]
    22c4:	ldp	x25, x26, [sp, #64]
    22c8:	ldp	x27, x28, [sp, #80]
    22cc:	b	1d08 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE+0x70>

00000000000022d0 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE>:
    22d0:	stp	x29, x30, [sp, #-288]!
    22d4:	mov	x29, sp
    22d8:	stp	x19, x20, [sp, #16]
    22dc:	stp	x21, x22, [sp, #32]
    22e0:	mov	x19, x8
    22e4:	mov	x20, x0
    22e8:	mov	x21, x1
    22ec:	add	x8, sp, #0xa0
    22f0:	bl	8f4 <_ZN4llvm7remarks16YAMLRemarkParser5errorEv>
    22f4:	ldr	x0, [sp, #160]
    22f8:	ands	x1, x0, #0xfffffffffffffffe
    22fc:	cset	x0, ne  // ne = any
    2300:	orr	x0, x0, x1
    2304:	str	x0, [sp, #160]
    2308:	ands	x1, x0, #0xfffffffffffffffe
    230c:	b.eq	2334 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x64>  // b.none
    2310:	ldrb	w0, [x19, #8]
    2314:	orr	w0, w0, #0x3
    2318:	strb	w0, [x19, #8]
    231c:	str	x1, [x19]
    2320:	mov	x0, x19
    2324:	ldp	x19, x20, [sp, #16]
    2328:	ldp	x21, x22, [sp, #32]
    232c:	ldp	x29, x30, [sp], #288
    2330:	ret
    2334:	tbnz	w0, #0, 23a0 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xd0>
    2338:	stp	x23, x24, [sp, #48]
    233c:	ldr	x23, [x21, #112]
    2340:	cbz	x23, 23b4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xe4>
    2344:	ldr	w0, [x23, #32]
    2348:	cmp	w0, #0x4
    234c:	b.eq	2c8c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x9bc>  // b.none
    2350:	add	x8, sp, #0x100
    2354:	mov	x3, x23
    2358:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    235c:	add	x1, x1, #0x0
    2360:	mov	x2, #0x25                  	// #37
    2364:	mov	x0, x20
    2368:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    236c:	ldrb	w0, [x19, #8]
    2370:	orr	w0, w0, #0x3
    2374:	strb	w0, [x19, #8]
    2378:	ldr	x0, [sp, #256]
    237c:	ands	x1, x0, #0xfffffffffffffffe
    2380:	cset	x0, ne  // ne = any
    2384:	orr	x0, x0, x1
    2388:	str	x0, [sp, #256]
    238c:	ands	x0, x0, #0xfffffffffffffffe
    2390:	b.eq	2c64 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x994>  // b.none
    2394:	str	x0, [x19]
    2398:	ldp	x23, x24, [sp, #48]
    239c:	b	2320 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x50>
    23a0:	stp	x23, x24, [sp, #48]
    23a4:	stp	x25, x26, [sp, #64]
    23a8:	stp	x27, x28, [sp, #80]
    23ac:	add	x0, sp, #0xa0
    23b0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    23b4:	mov	x0, x21
    23b8:	bl	0 <_ZN4llvm4yaml8Document14parseBlockNodeEv>
    23bc:	mov	x23, x0
    23c0:	str	x0, [x21, #112]
    23c4:	cbnz	x0, 2344 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x74>
    23c8:	bl	0 <_ZNSt3_V216generic_categoryEv>
    23cc:	mov	x1, x0
    23d0:	add	x8, sp, #0xf8
    23d4:	adrp	x2, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    23d8:	add	x2, x2, #0x0
    23dc:	mov	x0, #0x16                  	// #22
    23e0:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    23e4:	ldrb	w0, [x19, #8]
    23e8:	orr	w0, w0, #0x3
    23ec:	strb	w0, [x19, #8]
    23f0:	ldr	x0, [sp, #248]
    23f4:	ands	x1, x0, #0xfffffffffffffffe
    23f8:	cset	x0, ne  // ne = any
    23fc:	orr	x0, x0, x1
    2400:	str	x0, [sp, #248]
    2404:	ands	x0, x0, #0xfffffffffffffffe
    2408:	b.eq	2418 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x148>  // b.none
    240c:	str	x0, [x19]
    2410:	ldp	x23, x24, [sp, #48]
    2414:	b	2320 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x50>
    2418:	stp	x25, x26, [sp, #64]
    241c:	stp	x27, x28, [sp, #80]
    2420:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2424:	add	x3, x3, #0x0
    2428:	mov	w2, #0x1ce                 	// #462
    242c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2430:	add	x1, x1, #0x0
    2434:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2438:	add	x0, x0, #0x0
    243c:	bl	0 <__assert_fail>
    2440:	ldrb	w0, [sp, #240]
    2444:	and	w0, w0, #0xfffffffd
    2448:	strb	w0, [sp, #240]
    244c:	ldr	x0, [sp, #232]
    2450:	str	xzr, [sp, #232]
    2454:	ldrb	w1, [x19, #8]
    2458:	orr	w1, w1, #0x3
    245c:	strb	w1, [x19, #8]
    2460:	ands	x0, x0, #0xfffffffffffffffe
    2464:	cbz	x0, 2484 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x1b4>
    2468:	str	x0, [x19]
    246c:	ldr	x0, [sp, #232]
    2470:	cbz	x0, 2c00 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x930>
    2474:	ldr	x1, [x0]
    2478:	ldr	x1, [x1, #8]
    247c:	blr	x1
    2480:	b	2c00 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x930>
    2484:	stp	x27, x28, [sp, #80]
    2488:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    248c:	add	x3, x3, #0x0
    2490:	mov	w2, #0x1ce                 	// #462
    2494:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2498:	add	x1, x1, #0x0
    249c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    24a0:	add	x0, x0, #0x0
    24a4:	bl	0 <__assert_fail>
    24a8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    24ac:	add	x3, x3, #0x0
    24b0:	mov	w2, #0x14f                 	// #335
    24b4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    24b8:	add	x1, x1, #0x0
    24bc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    24c0:	add	x0, x0, #0x0
    24c4:	bl	0 <__assert_fail>
    24c8:	and	x0, x0, #0xff
    24cc:	and	w0, w0, #0xfffffffd
    24d0:	strb	w0, [sp, #152]
    24d4:	ldr	x0, [sp, #136]
    24d8:	str	xzr, [sp, #136]
    24dc:	ldrb	w1, [x19, #8]
    24e0:	orr	w1, w1, #0x3
    24e4:	strb	w1, [x19, #8]
    24e8:	ands	x0, x0, #0xfffffffffffffffe
    24ec:	cbz	x0, 250c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x23c>
    24f0:	str	x0, [x19]
    24f4:	ldr	x0, [sp, #136]
    24f8:	cbz	x0, 2b94 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x8c4>
    24fc:	ldr	x1, [x0]
    2500:	ldr	x1, [x1, #8]
    2504:	blr	x1
    2508:	b	2b94 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x8c4>
    250c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2510:	add	x3, x3, #0x0
    2514:	mov	w2, #0x1ce                 	// #462
    2518:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    251c:	add	x1, x1, #0x0
    2520:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2524:	add	x0, x0, #0x0
    2528:	bl	0 <__assert_fail>
    252c:	mov	x2, #0x4                   	// #4
    2530:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2534:	add	x1, x1, #0x0
    2538:	mov	x0, x27
    253c:	bl	0 <memcmp>
    2540:	cbnz	w0, 2608 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x338>
    2544:	ldr	x0, [x20]
    2548:	ldr	x8, [sp, #112]
    254c:	ldr	x2, [x0, #24]
    2550:	mov	x1, x24
    2554:	mov	x0, x20
    2558:	blr	x2
    255c:	ldrb	w0, [sp, #176]
    2560:	tbnz	w0, #0, 25a8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x2d8>
    2564:	ldp	x0, x1, [sp, #160]
    2568:	stp	x0, x1, [x22, #8]
    256c:	ldrb	w0, [sp, #152]
    2570:	tbnz	w0, #1, 2b18 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x848>
    2574:	ldrb	w0, [sp, #152]
    2578:	tbz	w0, #0, 2590 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x2c0>
    257c:	ldr	x0, [sp, #136]
    2580:	cbz	x0, 2590 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x2c0>
    2584:	ldr	x1, [x0]
    2588:	ldr	x1, [x1, #8]
    258c:	blr	x1
    2590:	mov	x0, x23
    2594:	bl	0 <_ZN4llvm4yaml11MappingNode9incrementEv>
    2598:	ldr	x0, [x23, #80]
    259c:	cbnz	x0, 2d08 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xa38>
    25a0:	mov	x23, x0
    25a4:	b	2d08 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xa38>
    25a8:	ldrb	w0, [sp, #176]
    25ac:	and	w0, w0, #0xfffffffd
    25b0:	strb	w0, [sp, #176]
    25b4:	ldr	x0, [sp, #160]
    25b8:	str	xzr, [sp, #160]
    25bc:	ldrb	w1, [x19, #8]
    25c0:	orr	w1, w1, #0x3
    25c4:	strb	w1, [x19, #8]
    25c8:	ands	x0, x0, #0xfffffffffffffffe
    25cc:	cbz	x0, 25e8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x318>
    25d0:	str	x0, [x19]
    25d4:	ldrb	w0, [sp, #152]
    25d8:	tbnz	w0, #1, 2b20 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x850>
    25dc:	ldrb	w0, [sp, #152]
    25e0:	tbz	w0, #0, 2b94 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x8c4>
    25e4:	b	24f4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x224>
    25e8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    25ec:	add	x3, x3, #0x0
    25f0:	mov	w2, #0x1ce                 	// #462
    25f4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    25f8:	add	x1, x1, #0x0
    25fc:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2600:	add	x0, x0, #0x0
    2604:	bl	0 <__assert_fail>
    2608:	mov	x2, #0x4                   	// #4
    260c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2610:	add	x1, x1, #0x0
    2614:	mov	x0, x27
    2618:	bl	0 <memcmp>
    261c:	cbnz	w0, 2d50 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xa80>
    2620:	ldr	x0, [x20]
    2624:	ldr	x8, [sp, #112]
    2628:	ldr	x2, [x0, #24]
    262c:	mov	x1, x24
    2630:	mov	x0, x20
    2634:	blr	x2
    2638:	ldrb	w0, [sp, #176]
    263c:	tbnz	w0, #0, 264c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x37c>
    2640:	ldp	x0, x1, [sp, #160]
    2644:	stp	x0, x1, [x22, #24]
    2648:	b	256c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x29c>
    264c:	ldrb	w0, [sp, #176]
    2650:	and	w0, w0, #0xfffffffd
    2654:	strb	w0, [sp, #176]
    2658:	ldr	x0, [sp, #160]
    265c:	str	xzr, [sp, #160]
    2660:	ldrb	w1, [x19, #8]
    2664:	orr	w1, w1, #0x3
    2668:	strb	w1, [x19, #8]
    266c:	ands	x0, x0, #0xfffffffffffffffe
    2670:	cbz	x0, 267c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x3ac>
    2674:	str	x0, [x19]
    2678:	b	25d4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x304>
    267c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2680:	add	x3, x3, #0x0
    2684:	mov	w2, #0x1ce                 	// #462
    2688:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    268c:	add	x1, x1, #0x0
    2690:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2694:	add	x0, x0, #0x0
    2698:	bl	0 <__assert_fail>
    269c:	mov	x2, #0x8                   	// #8
    26a0:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    26a4:	add	x1, x0, #0x0
    26a8:	mov	x0, x27
    26ac:	bl	0 <memcmp>
    26b0:	cbnz	w0, 2d58 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xa88>
    26b4:	ldr	x0, [x20]
    26b8:	ldr	x8, [sp, #112]
    26bc:	ldr	x2, [x0, #24]
    26c0:	mov	x1, x24
    26c4:	mov	x0, x20
    26c8:	blr	x2
    26cc:	ldrb	w0, [sp, #176]
    26d0:	tbnz	w0, #0, 26e0 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x410>
    26d4:	ldp	x0, x1, [sp, #160]
    26d8:	stp	x0, x1, [x22, #40]
    26dc:	b	256c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x29c>
    26e0:	ldrb	w0, [sp, #176]
    26e4:	and	w0, w0, #0xfffffffd
    26e8:	strb	w0, [sp, #176]
    26ec:	ldr	x0, [sp, #160]
    26f0:	str	xzr, [sp, #160]
    26f4:	ldrb	w1, [x19, #8]
    26f8:	orr	w1, w1, #0x3
    26fc:	strb	w1, [x19, #8]
    2700:	ands	x0, x0, #0xfffffffffffffffe
    2704:	cbz	x0, 2710 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x440>
    2708:	str	x0, [x19]
    270c:	b	25d4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x304>
    2710:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2714:	add	x3, x3, #0x0
    2718:	mov	w2, #0x1ce                 	// #462
    271c:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2720:	add	x1, x1, #0x0
    2724:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2728:	add	x0, x0, #0x0
    272c:	bl	0 <__assert_fail>
    2730:	mov	x2, #0x7                   	// #7
    2734:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2738:	add	x1, x1, #0x0
    273c:	mov	x0, x27
    2740:	bl	0 <memcmp>
    2744:	cbnz	w0, 2d60 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xa90>
    2748:	ldr	x8, [sp, #112]
    274c:	mov	x1, x24
    2750:	mov	x0, x20
    2754:	bl	748 <_ZN4llvm7remarks16YAMLRemarkParser13parseUnsignedERNS_4yaml12KeyValueNodeE>
    2758:	ldrb	w0, [sp, #168]
    275c:	and	w1, w0, #0x1
    2760:	bfi	w0, w1, #1, #1
    2764:	strb	w0, [sp, #168]
    2768:	cbnz	w1, 2790 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x4c0>
    276c:	ldr	w0, [sp, #160]
    2770:	ldrb	w1, [x22, #96]
    2774:	cbz	w1, 2780 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x4b0>
    2778:	str	x0, [x22, #88]
    277c:	b	256c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x29c>
    2780:	str	x0, [x22, #88]
    2784:	mov	w0, #0x1                   	// #1
    2788:	strb	w0, [x22, #96]
    278c:	b	256c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x29c>
    2790:	ldrb	w0, [sp, #168]
    2794:	and	w0, w0, #0xfffffffd
    2798:	strb	w0, [sp, #168]
    279c:	ldr	x0, [sp, #160]
    27a0:	str	xzr, [sp, #160]
    27a4:	ldrb	w1, [x19, #8]
    27a8:	orr	w1, w1, #0x3
    27ac:	strb	w1, [x19, #8]
    27b0:	ands	x0, x0, #0xfffffffffffffffe
    27b4:	cbz	x0, 27c0 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x4f0>
    27b8:	str	x0, [x19]
    27bc:	b	25d4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x304>
    27c0:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    27c4:	add	x3, x3, #0x0
    27c8:	mov	w2, #0x1ce                 	// #462
    27cc:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    27d0:	add	x1, x1, #0x0
    27d4:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    27d8:	add	x0, x0, #0x0
    27dc:	bl	0 <__assert_fail>
    27e0:	mov	x2, #0x8                   	// #8
    27e4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    27e8:	add	x1, x1, #0x0
    27ec:	mov	x0, x27
    27f0:	bl	0 <memcmp>
    27f4:	cbnz	w0, 2d68 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xa98>
    27f8:	ldr	x8, [sp, #112]
    27fc:	mov	x1, x24
    2800:	mov	x0, x20
    2804:	bl	16a0 <_ZN4llvm7remarks16YAMLRemarkParser13parseDebugLocERNS_4yaml12KeyValueNodeE>
    2808:	ldrb	w0, [sp, #184]
    280c:	and	w1, w0, #0x1
    2810:	bfi	w0, w1, #1, #1
    2814:	strb	w0, [sp, #184]
    2818:	cbnz	w1, 2854 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x584>
    281c:	ldrb	w0, [x22, #80]
    2820:	cbz	w0, 2838 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x568>
    2824:	ldp	x0, x1, [x28]
    2828:	stp	x0, x1, [x22, #56]
    282c:	ldr	x0, [x28, #16]
    2830:	str	x0, [x22, #72]
    2834:	b	256c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x29c>
    2838:	ldp	x2, x3, [x28]
    283c:	stp	x2, x3, [x22, #56]
    2840:	ldr	x1, [x28, #16]
    2844:	str	x1, [x22, #72]
    2848:	mov	w1, #0x1                   	// #1
    284c:	strb	w1, [x22, #80]
    2850:	b	256c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x29c>
    2854:	ldrb	w0, [sp, #184]
    2858:	and	w0, w0, #0xfffffffd
    285c:	strb	w0, [sp, #184]
    2860:	ldr	x0, [sp, #160]
    2864:	str	xzr, [sp, #160]
    2868:	ldrb	w1, [x19, #8]
    286c:	orr	w1, w1, #0x3
    2870:	strb	w1, [x19, #8]
    2874:	ands	x0, x0, #0xfffffffffffffffe
    2878:	cbz	x0, 2884 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x5b4>
    287c:	str	x0, [x19]
    2880:	b	25d4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x304>
    2884:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2888:	add	x3, x3, #0x0
    288c:	mov	w2, #0x1ce                 	// #462
    2890:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2894:	add	x1, x1, #0x0
    2898:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    289c:	add	x0, x0, #0x0
    28a0:	bl	0 <__assert_fail>
    28a4:	mov	x2, #0x4                   	// #4
    28a8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    28ac:	add	x1, x1, #0x0
    28b0:	mov	x0, x27
    28b4:	bl	0 <memcmp>
    28b8:	cbnz	w0, 2d68 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xa98>
    28bc:	mov	x0, x24
    28c0:	bl	0 <_ZN4llvm4yaml12KeyValueNode8getValueEv>
    28c4:	mov	x25, x0
    28c8:	cbz	x0, 2924 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x654>
    28cc:	ldr	w0, [x0, #32]
    28d0:	cmp	w0, #0x5
    28d4:	b.eq	2c38 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x968>  // b.none
    28d8:	add	x8, sp, #0x108
    28dc:	mov	x3, x24
    28e0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    28e4:	add	x1, x1, #0x0
    28e8:	mov	x2, #0x19                  	// #25
    28ec:	mov	x0, x20
    28f0:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    28f4:	ldrb	w0, [x19, #8]
    28f8:	orr	w0, w0, #0x3
    28fc:	strb	w0, [x19, #8]
    2900:	ldr	x0, [sp, #264]
    2904:	ands	x1, x0, #0xfffffffffffffffe
    2908:	cset	x0, ne  // ne = any
    290c:	orr	x0, x0, x1
    2910:	str	x0, [sp, #264]
    2914:	ands	x0, x0, #0xfffffffffffffffe
    2918:	b.eq	2944 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x674>  // b.none
    291c:	str	x0, [x19]
    2920:	b	25d4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x304>
    2924:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2928:	add	x3, x3, #0x0
    292c:	mov	w2, #0x69                  	// #105
    2930:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2934:	add	x1, x1, #0x0
    2938:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    293c:	add	x0, x0, #0x0
    2940:	bl	0 <__assert_fail>
    2944:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2948:	add	x3, x3, #0x0
    294c:	mov	w2, #0x1ce                 	// #462
    2950:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2954:	add	x1, x1, #0x0
    2958:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    295c:	add	x0, x0, #0x0
    2960:	bl	0 <__assert_fail>
    2964:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2968:	add	x3, x3, #0x0
    296c:	mov	w2, #0x17d                 	// #381
    2970:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2974:	add	x1, x1, #0x0
    2978:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    297c:	add	x0, x0, #0x0
    2980:	bl	0 <__assert_fail>
    2984:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2988:	add	x3, x3, #0x0
    298c:	mov	w2, #0x14f                 	// #335
    2990:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2994:	add	x1, x1, #0x0
    2998:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    299c:	add	x0, x0, #0x0
    29a0:	bl	0 <__assert_fail>
    29a4:	mov	x3, x24
    29a8:	mov	x2, #0x0                   	// #0
    29ac:	mov	x1, x26
    29b0:	mov	x0, x27
    29b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    29b8:	b	2a34 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x764>
    29bc:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    29c0:	add	x3, x3, #0x0
    29c4:	mov	w2, #0x43                  	// #67
    29c8:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    29cc:	add	x1, x1, #0x0
    29d0:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    29d4:	add	x0, x0, #0x0
    29d8:	bl	0 <__assert_fail>
    29dc:	add	x0, sp, #0xa0
    29e0:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    29e4:	mov	x0, x25
    29e8:	bl	0 <_ZN4llvm4yaml12SequenceNode9incrementEv>
    29ec:	ldr	x0, [x25, #80]
    29f0:	cmp	x0, #0x0
    29f4:	csel	x25, x25, x0, ne  // ne = any
    29f8:	cbz	x25, 256c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x29c>
    29fc:	ldr	x1, [x25, #80]
    2a00:	cbz	x1, 2984 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x6b4>
    2a04:	ldr	x8, [sp, #120]
    2a08:	mov	x0, x20
    2a0c:	bl	1c98 <_ZN4llvm7remarks16YAMLRemarkParser8parseArgERNS_4yaml4NodeE>
    2a10:	ldrb	w0, [sp, #224]
    2a14:	and	w1, w0, #0x1
    2a18:	bfi	w0, w1, #1, #1
    2a1c:	strb	w0, [sp, #224]
    2a20:	cbnz	w1, 2aa8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x7d8>
    2a24:	ldr	w1, [x22, #112]
    2a28:	ldr	w0, [x22, #116]
    2a2c:	cmp	w1, w0
    2a30:	b.cs	29a4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x6d4>  // b.hs, b.nlast
    2a34:	ldr	w0, [x22, #112]
    2a38:	ldr	x1, [x22, #104]
    2a3c:	add	x0, x1, x0, lsl #6
    2a40:	ldp	x2, x3, [x28]
    2a44:	stp	x2, x3, [x0]
    2a48:	ldp	x2, x3, [x28, #16]
    2a4c:	stp	x2, x3, [x0, #16]
    2a50:	ldp	x2, x3, [x28, #32]
    2a54:	stp	x2, x3, [x0, #32]
    2a58:	ldp	x2, x3, [x28, #48]
    2a5c:	stp	x2, x3, [x0, #48]
    2a60:	ldr	w0, [x22, #112]
    2a64:	mov	w1, w0
    2a68:	add	x1, x1, #0x1
    2a6c:	ldr	w2, [x22, #116]
    2a70:	cmp	x1, x2
    2a74:	b.hi	29bc <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x6ec>  // b.pmore
    2a78:	add	w0, w0, #0x1
    2a7c:	str	w0, [x22, #112]
    2a80:	ldrb	w0, [sp, #224]
    2a84:	tbnz	w0, #1, 29dc <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x70c>
    2a88:	ldrb	w0, [sp, #224]
    2a8c:	tbz	w0, #0, 29e4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x714>
    2a90:	ldr	x0, [sp, #160]
    2a94:	cbz	x0, 29e4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x714>
    2a98:	ldr	x1, [x0]
    2a9c:	ldr	x1, [x1, #8]
    2aa0:	blr	x1
    2aa4:	b	29e4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x714>
    2aa8:	ldrb	w0, [sp, #224]
    2aac:	and	w0, w0, #0xfffffffd
    2ab0:	strb	w0, [sp, #224]
    2ab4:	ldr	x0, [sp, #160]
    2ab8:	str	xzr, [sp, #160]
    2abc:	ldrb	w1, [x19, #8]
    2ac0:	orr	w1, w1, #0x3
    2ac4:	strb	w1, [x19, #8]
    2ac8:	ands	x0, x0, #0xfffffffffffffffe
    2acc:	cbz	x0, 2ad8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x808>
    2ad0:	str	x0, [x19]
    2ad4:	b	25d4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x304>
    2ad8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2adc:	add	x3, x3, #0x0
    2ae0:	mov	w2, #0x1ce                 	// #462
    2ae4:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2ae8:	add	x1, x1, #0x0
    2aec:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2af0:	add	x0, x0, #0x0
    2af4:	bl	0 <__assert_fail>
    2af8:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2afc:	add	x3, x3, #0x0
    2b00:	mov	w2, #0x1ce                 	// #462
    2b04:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2b08:	add	x1, x1, #0x0
    2b0c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2b10:	add	x0, x0, #0x0
    2b14:	bl	0 <__assert_fail>
    2b18:	add	x0, sp, #0x88
    2b1c:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2b20:	add	x0, sp, #0x88
    2b24:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2b28:	ldr	w0, [x22]
    2b2c:	cbz	w0, 2b48 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x878>
    2b30:	ldr	x0, [x22, #16]
    2b34:	cbz	x0, 2b48 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x878>
    2b38:	ldr	x0, [x22, #32]
    2b3c:	cbz	x0, 2b48 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x878>
    2b40:	ldr	x0, [x22, #48]
    2b44:	cbnz	x0, 2ba4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x8d4>
    2b48:	adrp	x23, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2b4c:	ldr	x3, [x21, #112]
    2b50:	cbz	x3, 2bc0 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x8f0>
    2b54:	add	x8, sp, #0x118
    2b58:	add	x1, x23, #0x0
    2b5c:	mov	x2, #0x25                  	// #37
    2b60:	mov	x0, x20
    2b64:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    2b68:	ldrb	w0, [x19, #8]
    2b6c:	orr	w0, w0, #0x3
    2b70:	strb	w0, [x19, #8]
    2b74:	ldr	x0, [sp, #280]
    2b78:	ands	x1, x0, #0xfffffffffffffffe
    2b7c:	cset	x0, ne  // ne = any
    2b80:	orr	x0, x0, x1
    2b84:	str	x0, [sp, #280]
    2b88:	ands	x0, x0, #0xfffffffffffffffe
    2b8c:	b.eq	2bd4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x904>  // b.none
    2b90:	str	x0, [x19]
    2b94:	ldrb	w0, [sp, #240]
    2b98:	tbz	w0, #1, 2bf4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x924>
    2b9c:	add	x0, sp, #0xe8
    2ba0:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2ba4:	ldrb	w0, [x19, #8]
    2ba8:	and	w0, w0, #0xfffffffe
    2bac:	orr	w0, w0, #0x2
    2bb0:	strb	w0, [x19, #8]
    2bb4:	str	x22, [x19]
    2bb8:	mov	x22, x23
    2bbc:	b	2b94 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x8c4>
    2bc0:	mov	x0, x21
    2bc4:	bl	0 <_ZN4llvm4yaml8Document14parseBlockNodeEv>
    2bc8:	mov	x3, x0
    2bcc:	str	x0, [x21, #112]
    2bd0:	b	2b54 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x884>
    2bd4:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2bd8:	add	x3, x3, #0x0
    2bdc:	mov	w2, #0x1ce                 	// #462
    2be0:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2be4:	add	x1, x1, #0x0
    2be8:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2bec:	add	x0, x0, #0x0
    2bf0:	bl	0 <__assert_fail>
    2bf4:	ldrb	w0, [sp, #240]
    2bf8:	tbnz	w0, #0, 2c30 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x960>
    2bfc:	ldp	x27, x28, [sp, #80]
    2c00:	cbz	x22, 2db4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0xae4>
    2c04:	ldr	x0, [x22, #104]
    2c08:	add	x1, x22, #0x78
    2c0c:	cmp	x0, x1
    2c10:	b.eq	2c18 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x948>  // b.none
    2c14:	bl	0 <free>
    2c18:	mov	x1, #0x1b8                 	// #440
    2c1c:	mov	x0, x22
    2c20:	bl	0 <_ZdlPvm>
    2c24:	ldp	x23, x24, [sp, #48]
    2c28:	ldp	x25, x26, [sp, #64]
    2c2c:	b	2320 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x50>
    2c30:	ldp	x27, x28, [sp, #80]
    2c34:	b	246c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x19c>
    2c38:	ldrb	w0, [x25, #76]
    2c3c:	cbz	w0, 2964 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x694>
    2c40:	strb	wzr, [x25, #76]
    2c44:	mov	x0, x25
    2c48:	bl	0 <_ZN4llvm4yaml12SequenceNode9incrementEv>
    2c4c:	ldr	x0, [x25, #80]
    2c50:	cmp	x0, #0x0
    2c54:	csel	x25, x25, x0, ne  // ne = any
    2c58:	mov	x24, #0x40                  	// #64
    2c5c:	add	x27, x22, #0x68
    2c60:	b	29f8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x728>
    2c64:	stp	x25, x26, [sp, #64]
    2c68:	stp	x27, x28, [sp, #80]
    2c6c:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2c70:	add	x3, x3, #0x0
    2c74:	mov	w2, #0x1ce                 	// #462
    2c78:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2c7c:	add	x1, x1, #0x0
    2c80:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2c84:	add	x0, x0, #0x0
    2c88:	bl	0 <__assert_fail>
    2c8c:	stp	x25, x26, [sp, #64]
    2c90:	mov	x0, #0x1b8                 	// #440
    2c94:	bl	0 <_Znwm>
    2c98:	mov	x22, x0
    2c9c:	mov	x2, #0x1b8                 	// #440
    2ca0:	mov	w1, #0x0                   	// #0
    2ca4:	bl	0 <memset>
    2ca8:	add	x26, x22, #0x78
    2cac:	str	x26, [x22, #104]
    2cb0:	mov	w0, #0x5                   	// #5
    2cb4:	str	w0, [x22, #116]
    2cb8:	add	x8, sp, #0xe8
    2cbc:	mov	x1, x23
    2cc0:	mov	x0, x20
    2cc4:	bl	494 <_ZN4llvm7remarks16YAMLRemarkParser9parseTypeERNS_4yaml11MappingNodeE>
    2cc8:	ldrb	w0, [sp, #240]
    2ccc:	and	w1, w0, #0x1
    2cd0:	bfi	w0, w1, #1, #1
    2cd4:	strb	w0, [sp, #240]
    2cd8:	cbnz	w1, 2440 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x170>
    2cdc:	stp	x27, x28, [sp, #80]
    2ce0:	ldr	w0, [sp, #232]
    2ce4:	str	w0, [x22]
    2ce8:	mov	x0, x23
    2cec:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2cf0:	mov	x23, x0
    2cf4:	add	x0, sp, #0x88
    2cf8:	str	x0, [sp, #104]
    2cfc:	add	x28, sp, #0xa0
    2d00:	str	x28, [sp, #112]
    2d04:	str	x28, [sp, #120]
    2d08:	cbz	x23, 2b28 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x858>
    2d0c:	ldr	x24, [x23, #80]
    2d10:	cbz	x24, 24a8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x1d8>
    2d14:	ldr	x8, [sp, #104]
    2d18:	mov	x1, x24
    2d1c:	mov	x0, x20
    2d20:	bl	654 <_ZN4llvm7remarks16YAMLRemarkParser8parseKeyERNS_4yaml12KeyValueNodeE>
    2d24:	ldrb	w0, [sp, #152]
    2d28:	and	w1, w0, #0x1
    2d2c:	bfi	w0, w1, #1, #1
    2d30:	strb	w0, [sp, #152]
    2d34:	cbnz	w1, 24c8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x1f8>
    2d38:	ldr	x27, [sp, #136]
    2d3c:	ldr	x25, [sp, #144]
    2d40:	cmp	x25, #0x4
    2d44:	b.eq	252c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x25c>  // b.none
    2d48:	cmp	x25, #0x8
    2d4c:	b.eq	269c <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x3cc>  // b.none
    2d50:	cmp	x25, #0x7
    2d54:	b.eq	2730 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x460>  // b.none
    2d58:	cmp	x25, #0x8
    2d5c:	b.eq	27e0 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x510>  // b.none
    2d60:	cmp	x25, #0x4
    2d64:	b.eq	28a4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x5d4>  // b.none
    2d68:	add	x8, sp, #0x110
    2d6c:	mov	x3, x24
    2d70:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2d74:	add	x1, x1, #0x0
    2d78:	mov	x2, #0xc                   	// #12
    2d7c:	mov	x0, x20
    2d80:	bl	2bc <_ZN4llvm7remarks16YAMLRemarkParser5errorENS_9StringRefERNS_4yaml4NodeE>
    2d84:	ldrb	w0, [x19, #8]
    2d88:	orr	w0, w0, #0x3
    2d8c:	strb	w0, [x19, #8]
    2d90:	ldr	x0, [sp, #272]
    2d94:	ands	x1, x0, #0xfffffffffffffffe
    2d98:	cset	x0, ne  // ne = any
    2d9c:	orr	x0, x0, x1
    2da0:	str	x0, [sp, #272]
    2da4:	ands	x0, x0, #0xfffffffffffffffe
    2da8:	b.eq	2af8 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x828>  // b.none
    2dac:	str	x0, [x19]
    2db0:	b	25d4 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x304>
    2db4:	ldp	x23, x24, [sp, #48]
    2db8:	ldp	x25, x26, [sp, #64]
    2dbc:	b	2320 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE+0x50>

0000000000002dc0 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv>:
    2dc0:	stp	x29, x30, [sp, #-64]!
    2dc4:	mov	x29, sp
    2dc8:	stp	x19, x20, [sp, #16]
    2dcc:	stp	x21, x22, [sp, #32]
    2dd0:	mov	x19, x8
    2dd4:	mov	x20, x0
    2dd8:	add	x21, x0, #0xc0
    2ddc:	mov	x0, x21
    2de0:	bl	0 <_ZN4llvm4yaml6Stream3endEv>
    2de4:	ldr	x1, [x20, #208]
    2de8:	cbz	x1, 2e0c <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x4c>
    2dec:	ldr	x2, [x1]
    2df0:	cbz	x2, 2e0c <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x4c>
    2df4:	cbz	x0, 2e84 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0xc4>
    2df8:	ldr	x2, [x0]
    2dfc:	cbz	x2, 2e84 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0xc4>
    2e00:	cmp	x1, x0
    2e04:	cset	w0, eq  // eq = none
    2e08:	b	2e1c <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x5c>
    2e0c:	cbz	x0, 2e20 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x60>
    2e10:	ldr	x0, [x0]
    2e14:	cmp	x0, #0x0
    2e18:	cset	w0, eq  // eq = none
    2e1c:	cbz	w0, 2e84 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0xc4>
    2e20:	mov	x0, #0x8                   	// #8
    2e24:	bl	0 <_Znwm>
    2e28:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2e2c:	ldr	x1, [x1]
    2e30:	add	x1, x1, #0x10
    2e34:	str	x1, [x0]
    2e38:	ldrb	w1, [x19, #8]
    2e3c:	orr	w1, w1, #0x3
    2e40:	strb	w1, [x19, #8]
    2e44:	ands	x0, x0, #0xfffffffffffffffe
    2e48:	cbz	x0, 2e64 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0xa4>
    2e4c:	str	x0, [x19]
    2e50:	mov	x0, x19
    2e54:	ldp	x19, x20, [sp, #16]
    2e58:	ldp	x21, x22, [sp, #32]
    2e5c:	ldp	x29, x30, [sp], #64
    2e60:	ret
    2e64:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2e68:	add	x3, x3, #0x0
    2e6c:	mov	w2, #0x1ce                 	// #462
    2e70:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2e74:	add	x1, x1, #0x0
    2e78:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2e7c:	add	x0, x0, #0x0
    2e80:	bl	0 <__assert_fail>
    2e84:	add	x8, sp, #0x30
    2e88:	ldr	x1, [x1]
    2e8c:	mov	x0, x20
    2e90:	bl	22d0 <_ZN4llvm7remarks16YAMLRemarkParser11parseRemarkERNS_4yaml8DocumentE>
    2e94:	ldrb	w0, [sp, #56]
    2e98:	and	w1, w0, #0x1
    2e9c:	bfi	w0, w1, #1, #1
    2ea0:	strb	w0, [sp, #56]
    2ea4:	cbz	w1, 2f28 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x168>
    2ea8:	mov	x0, x21
    2eac:	bl	0 <_ZN4llvm4yaml6Stream3endEv>
    2eb0:	str	x0, [x20, #208]
    2eb4:	ldrb	w0, [sp, #56]
    2eb8:	and	w0, w0, #0xfffffffd
    2ebc:	strb	w0, [sp, #56]
    2ec0:	tbz	w0, #0, 2efc <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x13c>
    2ec4:	ldr	x0, [sp, #48]
    2ec8:	str	xzr, [sp, #48]
    2ecc:	ldrb	w1, [x19, #8]
    2ed0:	orr	w1, w1, #0x3
    2ed4:	strb	w1, [x19, #8]
    2ed8:	ands	x0, x0, #0xfffffffffffffffe
    2edc:	cbz	x0, 2f08 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x148>
    2ee0:	str	x0, [x19]
    2ee4:	ldr	x0, [sp, #48]
    2ee8:	cbz	x0, 2e50 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x90>
    2eec:	ldr	x1, [x0]
    2ef0:	ldr	x1, [x1, #8]
    2ef4:	blr	x1
    2ef8:	b	2e50 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x90>
    2efc:	ldrb	w0, [x19, #8]
    2f00:	orr	w0, w0, #0x3
    2f04:	strb	w0, [x19, #8]
    2f08:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2f0c:	add	x3, x3, #0x0
    2f10:	mov	w2, #0x1ce                 	// #462
    2f14:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2f18:	add	x1, x1, #0x0
    2f1c:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2f20:	add	x0, x0, #0x0
    2f24:	bl	0 <__assert_fail>
    2f28:	ldr	x0, [x20, #208]
    2f2c:	cbz	x0, 3024 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x264>
    2f30:	ldr	x0, [x0]
    2f34:	bl	0 <_ZN4llvm4yaml8Document4skipEv>
    2f38:	and	w0, w0, #0xff
    2f3c:	cbnz	w0, 3044 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x284>
    2f40:	ldr	x0, [x20, #208]
    2f44:	ldr	x21, [x0]
    2f48:	str	xzr, [x0]
    2f4c:	cbz	x21, 2ff8 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x238>
    2f50:	add	x0, x21, #0x78
    2f54:	ldr	x1, [x0, #16]
    2f58:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    2f5c:	ldr	x20, [x21, #24]
    2f60:	ldr	w22, [x21, #32]
    2f64:	add	x22, x20, x22, lsl #3
    2f68:	cmp	x20, x22
    2f6c:	b.eq	2f80 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x1c0>  // b.none
    2f70:	ldr	x0, [x20], #8
    2f74:	bl	0 <free>
    2f78:	cmp	x22, x20
    2f7c:	b.ne	2f70 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x1b0>  // b.any
    2f80:	ldr	x20, [x21, #72]
    2f84:	ldr	w22, [x21, #80]
    2f88:	add	x22, x20, x22, lsl #4
    2f8c:	cmp	x20, x22
    2f90:	b.eq	2fc4 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x204>  // b.none
    2f94:	ldr	x0, [x20], #16
    2f98:	bl	0 <free>
    2f9c:	cmp	x22, x20
    2fa0:	b.ne	2f94 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x1d4>  // b.any
    2fa4:	ldr	x1, [x21, #72]
    2fa8:	ldr	w0, [x21, #80]
    2fac:	add	x0, x1, x0, lsl #4
    2fb0:	cmp	x1, x0
    2fb4:	b.eq	2fc4 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x204>  // b.none
    2fb8:	sub	x0, x0, #0x10
    2fbc:	cmp	x1, x0
    2fc0:	b.ne	2fb8 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x1f8>  // b.any
    2fc4:	ldr	x0, [x21, #72]
    2fc8:	add	x1, x21, #0x58
    2fcc:	cmp	x0, x1
    2fd0:	b.eq	2fd8 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x218>  // b.none
    2fd4:	bl	0 <free>
    2fd8:	ldr	x0, [x21, #24]
    2fdc:	add	x1, x21, #0x28
    2fe0:	cmp	x0, x1
    2fe4:	b.eq	2fec <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x22c>  // b.none
    2fe8:	bl	0 <free>
    2fec:	mov	x1, #0xa8                  	// #168
    2ff0:	mov	x0, x21
    2ff4:	bl	0 <_ZdlPvm>
    2ff8:	ldrb	w0, [sp, #56]
    2ffc:	tbnz	w0, #1, 311c <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x35c>
    3000:	ldrb	w0, [sp, #56]
    3004:	tbnz	w0, #0, 3124 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x364>
    3008:	ldrb	w0, [x19, #8]
    300c:	and	w0, w0, #0xfffffffe
    3010:	orr	w0, w0, #0x2
    3014:	strb	w0, [x19, #8]
    3018:	ldr	x0, [sp, #48]
    301c:	str	x0, [x19]
    3020:	b	2e50 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x90>
    3024:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    3028:	add	x3, x3, #0x0
    302c:	mov	w2, #0x253                 	// #595
    3030:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    3034:	add	x1, x1, #0x0
    3038:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    303c:	add	x0, x0, #0x0
    3040:	bl	0 <__assert_fail>
    3044:	ldr	x20, [x20, #208]
    3048:	ldr	x0, [x20]
    304c:	ldr	x21, [x0]
    3050:	mov	x0, #0xa8                  	// #168
    3054:	bl	0 <_Znwm>
    3058:	mov	x22, x0
    305c:	mov	x1, x21
    3060:	bl	0 <_ZN4llvm4yaml8DocumentC1ERNS0_6StreamE>
    3064:	ldr	x21, [x20]
    3068:	str	x22, [x20]
    306c:	cbz	x21, 2ff8 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x238>
    3070:	add	x0, x21, #0x78
    3074:	ldr	x1, [x0, #16]
    3078:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    307c:	ldr	x20, [x21, #24]
    3080:	ldr	w22, [x21, #32]
    3084:	add	x22, x20, x22, lsl #3
    3088:	cmp	x20, x22
    308c:	b.eq	30a0 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x2e0>  // b.none
    3090:	ldr	x0, [x20], #8
    3094:	bl	0 <free>
    3098:	cmp	x22, x20
    309c:	b.ne	3090 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x2d0>  // b.any
    30a0:	ldr	x20, [x21, #72]
    30a4:	ldr	w22, [x21, #80]
    30a8:	add	x22, x20, x22, lsl #4
    30ac:	cmp	x20, x22
    30b0:	b.eq	30e4 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x324>  // b.none
    30b4:	ldr	x0, [x20], #16
    30b8:	bl	0 <free>
    30bc:	cmp	x22, x20
    30c0:	b.ne	30b4 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x2f4>  // b.any
    30c4:	ldr	x1, [x21, #72]
    30c8:	ldr	w0, [x21, #80]
    30cc:	add	x0, x1, x0, lsl #4
    30d0:	cmp	x1, x0
    30d4:	b.eq	30e4 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x324>  // b.none
    30d8:	sub	x0, x0, #0x10
    30dc:	cmp	x1, x0
    30e0:	b.ne	30d8 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x318>  // b.any
    30e4:	ldr	x0, [x21, #72]
    30e8:	add	x1, x21, #0x58
    30ec:	cmp	x0, x1
    30f0:	b.eq	30f8 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x338>  // b.none
    30f4:	bl	0 <free>
    30f8:	ldr	x0, [x21, #24]
    30fc:	add	x1, x21, #0x28
    3100:	cmp	x0, x1
    3104:	b.eq	310c <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x34c>  // b.none
    3108:	bl	0 <free>
    310c:	mov	x1, #0xa8                  	// #168
    3110:	mov	x0, x21
    3114:	bl	0 <_ZdlPvm>
    3118:	b	2ff8 <_ZN4llvm7remarks16YAMLRemarkParser4nextEv+0x238>
    311c:	add	x0, sp, #0x30
    3120:	bl	0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    3124:	adrp	x3, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    3128:	add	x3, x3, #0x0
    312c:	mov	w2, #0x272                 	// #626
    3130:	adrp	x1, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    3134:	add	x1, x1, #0x0
    3138:	adrp	x0, 0 <_ZL16handleDiagnosticRKN4llvm12SMDiagnosticEPv>
    313c:	add	x0, x0, #0x0
    3140:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7remarks14EndOfFileErrorD2Ev:

0000000000000000 <_ZN4llvm7remarks14EndOfFileErrorD1Ev>:
   0:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_7remarks14YAMLParseErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_7remarks14YAMLParseErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_7remarks14YAMLParseErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_7remarks14YAMLParseErrorENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_7remarks14YAMLParseErrorENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_7remarks14YAMLParseErrorENS_13ErrorInfoBaseEE3isAEPKv>
  10:	ldr	x0, [x0]
  14:	ccmp	x1, x0, #0x4, ne  // ne = any
  18:	cset	w0, eq  // eq = none
  1c:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm7remarks14EndOfFileError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_7remarks14EndOfFileErrorENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	adrp	x0, 0 <_ZN4llvm7remarks14EndOfFileError2IDE>
  10:	ldr	x0, [x0]
  14:	ccmp	x1, x0, #0x4, ne  // ne = any
  18:	cset	w0, eq  // eq = none
  1c:	ret

Disassembly of section .text._ZNK4llvm7remarks14YAMLParseError18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm7remarks14YAMLParseError18convertToErrorCodeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZN4llvm22inconvertibleErrorCodeEv>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZNK4llvm7remarks14EndOfFileError18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm7remarks14EndOfFileError18convertToErrorCodeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZN4llvm22inconvertibleErrorCodeEv>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZN4llvm7remarks14YAMLParseErrorD2Ev:

0000000000000000 <_ZN4llvm7remarks14YAMLParseErrorD1Ev>:
   0:	mov	x1, x0
   4:	adrp	x0, 0 <_ZN4llvm7remarks14YAMLParseErrorD1Ev>
   8:	ldr	x0, [x0]
   c:	add	x0, x0, #0x10
  10:	str	x0, [x1]
  14:	ldr	x0, [x1, #8]
  18:	add	x1, x1, #0x18
  1c:	cmp	x0, x1
  20:	b.eq	38 <_ZN4llvm7remarks14YAMLParseErrorD1Ev+0x38>  // b.none
  24:	stp	x29, x30, [sp, #-16]!
  28:	mov	x29, sp
  2c:	bl	0 <_ZdlPv>
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	ret

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x8
  14:	add	x2, sp, #0x70
  18:	add	x1, sp, #0x80
  1c:	str	x1, [sp, #112]
  20:	str	xzr, [sp, #120]
  24:	strb	wzr, [sp, #128]
  28:	mov	w1, #0x1                   	// #1
  2c:	str	w1, [sp, #96]
  30:	str	xzr, [sp, #88]
  34:	str	xzr, [sp, #80]
  38:	str	xzr, [sp, #72]
  3c:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  40:	ldr	x1, [x1]
  44:	add	x1, x1, #0x10
  48:	str	x1, [sp, #64]
  4c:	str	x2, [sp, #104]
  50:	ldr	x1, [x0]
  54:	ldr	x2, [x1, #16]
  58:	add	x1, sp, #0x40
  5c:	blr	x2
  60:	ldr	x1, [sp, #88]
  64:	ldr	x0, [sp, #72]
  68:	cmp	x1, x0
  6c:	b.eq	78 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x78>  // b.none
  70:	add	x0, sp, #0x40
  74:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  78:	ldr	x0, [sp, #104]
  7c:	add	x1, x19, #0x10
  80:	str	x1, [x19]
  84:	ldr	x21, [x0]
  88:	ldr	x20, [x0, #8]
  8c:	cmp	x21, #0x0
  90:	ccmp	x20, #0x0, #0x4, eq  // eq = none
  94:	b.ne	f8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf8>  // b.any
  98:	str	x20, [sp, #56]
  9c:	cmp	x20, #0xf
  a0:	b.hi	104 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x104>  // b.pmore
  a4:	ldr	x0, [x19]
  a8:	cmp	x20, #0x1
  ac:	b.ne	130 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x130>  // b.any
  b0:	ldrb	w1, [x21]
  b4:	strb	w1, [x0]
  b8:	ldr	x0, [sp, #56]
  bc:	str	x0, [x19, #8]
  c0:	ldr	x1, [x19]
  c4:	strb	wzr, [x1, x0]
  c8:	add	x0, sp, #0x40
  cc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  d0:	ldr	x0, [sp, #112]
  d4:	add	x1, sp, #0x80
  d8:	cmp	x0, x1
  dc:	b.eq	e4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xe4>  // b.none
  e0:	bl	0 <_ZdlPv>
  e4:	mov	x0, x19
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldr	x21, [sp, #32]
  f0:	ldp	x29, x30, [sp], #144
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZSt19__throw_logic_errorPKc>
 104:	mov	x2, #0x0                   	// #0
 108:	add	x1, sp, #0x38
 10c:	mov	x0, x19
 110:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 114:	str	x0, [x19]
 118:	ldr	x1, [sp, #56]
 11c:	str	x1, [x19, #16]
 120:	mov	x2, x20
 124:	mov	x1, x21
 128:	bl	0 <memcpy>
 12c:	b	b8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb8>
 130:	cbz	x20, b8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb8>
 134:	b	120 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x120>

Disassembly of section .text._ZNK4llvm7remarks14YAMLParseError3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm7remarks14YAMLParseError3logERNS_11raw_ostreamE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x3, x0
   c:	mov	x0, x1
  10:	ldr	x2, [x3, #16]
  14:	ldr	x1, [x3, #8]
  18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZN4llvm7remarks14EndOfFileErrorD0Ev:

0000000000000000 <_ZN4llvm7remarks14EndOfFileErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x8                   	// #8
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZN4llvm7remarks14YAMLParseErrorD0Ev:

0000000000000000 <_ZN4llvm7remarks14YAMLParseErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm7remarks14YAMLParseErrorD0Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x0, [x19, #8]
  24:	add	x1, x19, #0x18
  28:	cmp	x0, x1
  2c:	b.eq	34 <_ZN4llvm7remarks14YAMLParseErrorD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x1, #0x28                  	// #40
  38:	mov	x0, x19
  3c:	bl	0 <_ZdlPvm>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	x4, [x5, #16]
  18:	ldr	x3, [x5, #24]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZN4llvm7remarks16YAMLRemarkParserD2Ev:

0000000000000000 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x0
  14:	adrp	x0, 0 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #216]
  28:	cbz	x0, 38 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0x38>
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #8]
  34:	blr	x1
  38:	add	x0, x19, #0xc0
  3c:	bl	0 <_ZN4llvm4yaml6StreamD1Ev>
  40:	ldr	x20, [x19, #152]
  44:	ldr	x21, [x19, #160]
  48:	cmp	x20, x21
  4c:	b.ne	fc <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0xfc>  // b.any
  50:	ldr	x0, [x19, #152]
  54:	cbz	x0, 5c <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0x5c>
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x20, [x19, #128]
  60:	ldr	x21, [x19, #136]
  64:	cmp	x20, x21
  68:	b.eq	80 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0x80>  // b.none
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  74:	add	x20, x20, #0x18
  78:	cmp	x21, x20
  7c:	b.ne	6c <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0x6c>  // b.any
  80:	ldr	x0, [x19, #128]
  84:	cbz	x0, 8c <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0x8c>
  88:	bl	0 <_ZdlPv>
  8c:	ldr	x0, [x19, #96]
  90:	add	x1, x19, #0x70
  94:	cmp	x0, x1
  98:	b.eq	a0 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0xa0>  // b.none
  9c:	bl	0 <_ZdlPv>
  a0:	ldrb	w0, [x19, #88]
  a4:	cbz	w0, b4 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0xb4>
  a8:	ldr	x0, [x19, #64]
  ac:	cbz	x0, b4 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0xb4>
  b0:	bl	0 <_ZdlPv>
  b4:	mov	x1, x19
  b8:	adrp	x0, 0 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev>
  bc:	ldr	x0, [x0]
  c0:	add	x0, x0, #0x10
  c4:	str	x0, [x1], #16
  c8:	ldr	x0, [x19, #16]
  cc:	add	x1, x1, #0x10
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0xdc>  // b.none
  d8:	bl	0 <_ZdlPv>
  dc:	ldp	x19, x20, [sp, #16]
  e0:	ldr	x21, [sp, #32]
  e4:	ldp	x29, x30, [sp], #48
  e8:	ret
  ec:	bl	0 <_ZdlPv>
  f0:	add	x20, x20, #0x20
  f4:	cmp	x21, x20
  f8:	b.eq	50 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0x50>  // b.none
  fc:	mov	x1, x20
 100:	ldr	x0, [x1], #16
 104:	cmp	x0, x1
 108:	b.ne	ec <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0xec>  // b.any
 10c:	b	f0 <_ZN4llvm7remarks16YAMLRemarkParserD1Ev+0xf0>

Disassembly of section .text._ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE>:
   0:	mov	x0, x1
   4:	ldr	x2, [x1, #24]
   8:	ldr	x1, [x1, #16]
   c:	sub	x1, x1, x2
  10:	cmp	x1, #0x13
  14:	b.ls	40 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE+0x40>  // b.plast
  18:	adrp	x1, 0 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE>
  1c:	add	x1, x1, #0x0
  20:	ldp	x4, x5, [x1]
  24:	stp	x4, x5, [x2]
  28:	ldr	w1, [x1, #16]
  2c:	str	w1, [x2, #16]
  30:	ldr	x1, [x0, #24]
  34:	add	x1, x1, #0x14
  38:	str	x1, [x0, #24]
  3c:	ret
  40:	stp	x29, x30, [sp, #-16]!
  44:	mov	x29, sp
  48:	mov	x2, #0x14                  	// #20
  4c:	adrp	x1, 0 <_ZNK4llvm7remarks14EndOfFileError3logERNS_11raw_ostreamE>
  50:	add	x1, x1, #0x0
  54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm7remarks22YAMLStrTabRemarkParserD2Ev:

0000000000000000 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x0
  14:	adrp	x0, 0 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #216]
  28:	cbz	x0, 38 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0x38>
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #8]
  34:	blr	x1
  38:	add	x0, x19, #0xc0
  3c:	bl	0 <_ZN4llvm4yaml6StreamD1Ev>
  40:	ldr	x20, [x19, #152]
  44:	ldr	x21, [x19, #160]
  48:	cmp	x20, x21
  4c:	b.ne	fc <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0xfc>  // b.any
  50:	ldr	x0, [x19, #152]
  54:	cbz	x0, 5c <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0x5c>
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x20, [x19, #128]
  60:	ldr	x21, [x19, #136]
  64:	cmp	x20, x21
  68:	b.eq	80 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0x80>  // b.none
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  74:	add	x20, x20, #0x18
  78:	cmp	x21, x20
  7c:	b.ne	6c <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0x6c>  // b.any
  80:	ldr	x0, [x19, #128]
  84:	cbz	x0, 8c <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0x8c>
  88:	bl	0 <_ZdlPv>
  8c:	ldr	x0, [x19, #96]
  90:	add	x1, x19, #0x70
  94:	cmp	x0, x1
  98:	b.eq	a0 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0xa0>  // b.none
  9c:	bl	0 <_ZdlPv>
  a0:	ldrb	w0, [x19, #88]
  a4:	cbz	w0, b4 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0xb4>
  a8:	ldr	x0, [x19, #64]
  ac:	cbz	x0, b4 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0xb4>
  b0:	bl	0 <_ZdlPv>
  b4:	mov	x1, x19
  b8:	adrp	x0, 0 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev>
  bc:	ldr	x0, [x0]
  c0:	add	x0, x0, #0x10
  c4:	str	x0, [x1], #16
  c8:	ldr	x0, [x19, #16]
  cc:	add	x1, x1, #0x10
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0xdc>  // b.none
  d8:	bl	0 <_ZdlPv>
  dc:	ldp	x19, x20, [sp, #16]
  e0:	ldr	x21, [sp, #32]
  e4:	ldp	x29, x30, [sp], #48
  e8:	ret
  ec:	bl	0 <_ZdlPv>
  f0:	add	x20, x20, #0x20
  f4:	cmp	x21, x20
  f8:	b.eq	50 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0x50>  // b.none
  fc:	mov	x1, x20
 100:	ldr	x0, [x1], #16
 104:	cmp	x0, x1
 108:	b.ne	ec <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0xec>  // b.any
 10c:	b	f0 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD1Ev+0xf0>

Disassembly of section .text._ZN4llvm7remarks16YAMLRemarkParserD0Ev:

0000000000000000 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x0
  14:	adrp	x0, 0 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #216]
  28:	cbz	x0, 38 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0x38>
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #8]
  34:	blr	x1
  38:	add	x0, x19, #0xc0
  3c:	bl	0 <_ZN4llvm4yaml6StreamD1Ev>
  40:	ldr	x20, [x19, #152]
  44:	ldr	x21, [x19, #160]
  48:	cmp	x20, x21
  4c:	b.ne	108 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0x108>  // b.any
  50:	ldr	x0, [x19, #152]
  54:	cbz	x0, 5c <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0x5c>
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x20, [x19, #128]
  60:	ldr	x21, [x19, #136]
  64:	cmp	x20, x21
  68:	b.eq	80 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0x80>  // b.none
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  74:	add	x20, x20, #0x18
  78:	cmp	x21, x20
  7c:	b.ne	6c <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0x6c>  // b.any
  80:	ldr	x0, [x19, #128]
  84:	cbz	x0, 8c <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0x8c>
  88:	bl	0 <_ZdlPv>
  8c:	ldr	x0, [x19, #96]
  90:	add	x1, x19, #0x70
  94:	cmp	x0, x1
  98:	b.eq	a0 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0xa0>  // b.none
  9c:	bl	0 <_ZdlPv>
  a0:	ldrb	w0, [x19, #88]
  a4:	cbz	w0, b4 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0xb4>
  a8:	ldr	x0, [x19, #64]
  ac:	cbz	x0, b4 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0xb4>
  b0:	bl	0 <_ZdlPv>
  b4:	mov	x1, x19
  b8:	adrp	x0, 0 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev>
  bc:	ldr	x0, [x0]
  c0:	add	x0, x0, #0x10
  c4:	str	x0, [x1], #16
  c8:	ldr	x0, [x19, #16]
  cc:	add	x1, x1, #0x10
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0xdc>  // b.none
  d8:	bl	0 <_ZdlPv>
  dc:	mov	x1, #0xe0                  	// #224
  e0:	mov	x0, x19
  e4:	bl	0 <_ZdlPvm>
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldr	x21, [sp, #32]
  f0:	ldp	x29, x30, [sp], #48
  f4:	ret
  f8:	bl	0 <_ZdlPv>
  fc:	add	x20, x20, #0x20
 100:	cmp	x21, x20
 104:	b.eq	50 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0x50>  // b.none
 108:	mov	x1, x20
 10c:	ldr	x0, [x1], #16
 110:	cmp	x0, x1
 114:	b.ne	f8 <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0xf8>  // b.any
 118:	b	fc <_ZN4llvm7remarks16YAMLRemarkParserD0Ev+0xfc>

Disassembly of section .text._ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev:

0000000000000000 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x0
  14:	adrp	x0, 0 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x19]
  24:	ldr	x0, [x19, #216]
  28:	cbz	x0, 38 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0x38>
  2c:	ldr	x1, [x0]
  30:	ldr	x1, [x1, #8]
  34:	blr	x1
  38:	add	x0, x19, #0xc0
  3c:	bl	0 <_ZN4llvm4yaml6StreamD1Ev>
  40:	ldr	x20, [x19, #152]
  44:	ldr	x21, [x19, #160]
  48:	cmp	x20, x21
  4c:	b.ne	108 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0x108>  // b.any
  50:	ldr	x0, [x19, #152]
  54:	cbz	x0, 5c <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0x5c>
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x20, [x19, #128]
  60:	ldr	x21, [x19, #136]
  64:	cmp	x20, x21
  68:	b.eq	80 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0x80>  // b.none
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  74:	add	x20, x20, #0x18
  78:	cmp	x21, x20
  7c:	b.ne	6c <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0x6c>  // b.any
  80:	ldr	x0, [x19, #128]
  84:	cbz	x0, 8c <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0x8c>
  88:	bl	0 <_ZdlPv>
  8c:	ldr	x0, [x19, #96]
  90:	add	x1, x19, #0x70
  94:	cmp	x0, x1
  98:	b.eq	a0 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0xa0>  // b.none
  9c:	bl	0 <_ZdlPv>
  a0:	ldrb	w0, [x19, #88]
  a4:	cbz	w0, b4 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0xb4>
  a8:	ldr	x0, [x19, #64]
  ac:	cbz	x0, b4 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0xb4>
  b0:	bl	0 <_ZdlPv>
  b4:	mov	x1, x19
  b8:	adrp	x0, 0 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev>
  bc:	ldr	x0, [x0]
  c0:	add	x0, x0, #0x10
  c4:	str	x0, [x1], #16
  c8:	ldr	x0, [x19, #16]
  cc:	add	x1, x1, #0x10
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0xdc>  // b.none
  d8:	bl	0 <_ZdlPv>
  dc:	mov	x1, #0xe0                  	// #224
  e0:	mov	x0, x19
  e4:	bl	0 <_ZdlPvm>
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldr	x21, [sp, #32]
  f0:	ldp	x29, x30, [sp], #48
  f4:	ret
  f8:	bl	0 <_ZdlPv>
  fc:	add	x20, x20, #0x20
 100:	cmp	x21, x20
 104:	b.eq	50 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0x50>  // b.none
 108:	mov	x1, x20
 10c:	ldr	x0, [x1], #16
 110:	cmp	x0, x1
 114:	b.ne	f8 <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0xf8>  // b.any
 118:	b	fc <_ZN4llvm7remarks22YAMLStrTabRemarkParserD0Ev+0xfc>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvm4yaml5beginINS0_11MappingNodeEEENT_8iteratorERS3_:

0000000000000000 <_ZN4llvm4yaml5beginINS0_11MappingNodeEEENT_8iteratorERS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w0, [x0, #76]
  14:	cbz	w0, 3c <_ZN4llvm4yaml5beginINS0_11MappingNodeEEENT_8iteratorERS3_+0x3c>
  18:	strb	wzr, [x19, #76]
  1c:	mov	x0, x19
  20:	bl	0 <_ZN4llvm4yaml11MappingNode9incrementEv>
  24:	ldr	x0, [x19, #80]
  28:	cmp	x0, #0x0
  2c:	csel	x0, x19, x0, ne  // ne = any
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	adrp	x3, 0 <_ZN4llvm4yaml5beginINS0_11MappingNodeEEENT_8iteratorERS3_>
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x17d                 	// #381
  48:	adrp	x1, 0 <_ZN4llvm4yaml5beginINS0_11MappingNodeEEENT_8iteratorERS3_>
  4c:	add	x1, x1, #0x0
  50:	adrp	x0, 0 <_ZN4llvm4yaml5beginINS0_11MappingNodeEEENT_8iteratorERS3_>
  54:	add	x0, x0, #0x0
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x8
  14:	ldr	x22, [x0]
  18:	ldr	x20, [x0, #8]
  1c:	mov	x0, #0x28                  	// #40
  20:	bl	0 <_Znwm>
  24:	mov	x19, x0
  28:	adrp	x0, 0 <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_>
  2c:	ldr	x0, [x0]
  30:	add	x0, x0, #0x10
  34:	str	x0, [x19]
  38:	cbz	x22, 90 <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_+0x90>
  3c:	add	x0, x19, #0x18
  40:	str	x0, [x19, #8]
  44:	str	x20, [sp, #72]
  48:	cmp	x20, #0xf
  4c:	b.hi	a4 <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_+0xa4>  // b.pmore
  50:	ldr	x0, [x19, #8]
  54:	cmp	x20, #0x1
  58:	b.ne	dc <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_+0xdc>  // b.any
  5c:	ldrb	w1, [x22]
  60:	strb	w1, [x0]
  64:	ldr	x0, [sp, #72]
  68:	str	x0, [x19, #16]
  6c:	ldr	x1, [x19, #8]
  70:	strb	wzr, [x1, x0]
  74:	orr	x19, x19, #0x1
  78:	str	x19, [x21]
  7c:	mov	x0, x21
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x21, x22, [sp, #32]
  88:	ldp	x29, x30, [sp], #80
  8c:	ret
  90:	add	x0, x19, #0x18
  94:	str	x0, [x19, #8]
  98:	str	xzr, [x19, #16]
  9c:	strb	wzr, [x19, #24]
  a0:	b	74 <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_+0x74>
  a4:	str	x23, [sp, #48]
  a8:	add	x23, x19, #0x8
  ac:	mov	x2, #0x0                   	// #0
  b0:	add	x1, sp, #0x48
  b4:	mov	x0, x23
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  bc:	str	x0, [x19, #8]
  c0:	ldr	x1, [sp, #72]
  c4:	str	x1, [x19, #24]
  c8:	ldr	x23, [sp, #48]
  cc:	mov	x2, x20
  d0:	mov	x1, x22
  d4:	bl	0 <memcpy>
  d8:	b	64 <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_+0x64>
  dc:	cbz	x20, 64 <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_+0x64>
  e0:	b	cc <_ZN4llvm10make_errorINS_7remarks14YAMLParseErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENS_5ErrorEDpOT0_+0xcc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x24, x0
  20:	mov	x19, x2
  24:	ldr	x21, [x0, #8]
  28:	ldr	x25, [x0]
  2c:	sub	x0, x21, x25
  30:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  34:	cmp	x2, x0, asr #3
  38:	b.eq	9c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.none
  3c:	mov	x22, x1
  40:	mov	x27, x1
  44:	asr	x1, x0, #3
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	150 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>  // b.hs, b.nlast
  58:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  5c:	cmp	x0, x26
  60:	csel	x26, x0, x26, ls  // ls = plast
  64:	sub	x20, x22, x25
  68:	mov	x23, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  70:	lsl	x0, x26, #3
  74:	bl	0 <_Znwm>
  78:	mov	x23, x0
  7c:	ldr	x0, [x19]
  80:	str	xzr, [x19]
  84:	str	x0, [x23, x20]
  88:	cmp	x22, x25
  8c:	b.eq	148 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>  // b.none
  90:	mov	x20, x23
  94:	mov	x19, x25
  98:	b	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  9c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <_ZSt20__throw_length_errorPKc>
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x27, x19
  b4:	b.eq	dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>  // b.none
  b8:	ldr	x0, [x19]
  bc:	str	xzr, [x19]
  c0:	str	x0, [x20]
  c4:	ldr	x0, [x19]
  c8:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  cc:	ldr	x1, [x0]
  d0:	ldr	x1, [x1, #8]
  d4:	blr	x1
  d8:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  dc:	sub	x19, x22, x25
  e0:	add	x19, x23, x19
  e4:	add	x19, x19, #0x8
  e8:	cmp	x22, x21
  ec:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.none
  f0:	mov	x2, x22
  f4:	mov	x0, x19
  f8:	ldr	x1, [x2], #8
  fc:	str	x1, [x0], #8
 100:	cmp	x2, x21
 104:	b.ne	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.any
 108:	sub	x21, x21, x22
 10c:	add	x19, x19, x21
 110:	cbz	x25, 11c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x11c>
 114:	mov	x0, x25
 118:	bl	0 <_ZdlPv>
 11c:	str	x23, [x24]
 120:	str	x19, [x24, #8]
 124:	add	x23, x23, x26, lsl #3
 128:	str	x23, [x24, #16]
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldp	x25, x26, [sp, #64]
 13c:	ldr	x27, [sp, #80]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	mov	x19, x23
 14c:	b	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>
 150:	sub	x20, x22, x25
 154:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
 158:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	30 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x30>  // b.none
  14:	ldr	x3, [x2]
  18:	str	xzr, [x2]
  1c:	str	x3, [x1]
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x8
  28:	str	x1, [x0, #8]
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>
  3c:	ldp	x29, x30, [sp], #16
  40:	ret

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x0
  18:	mov	x21, x1
  1c:	ldr	x0, [x0]
  20:	ldr	x2, [x0]
  24:	ldr	x2, [x2, #48]
  28:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  2c:	ldr	x1, [x1]
  30:	blr	x2
  34:	and	w0, w0, #0xff
  38:	cbnz	w0, 60 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0x60>
  3c:	ldr	x0, [x19]
  40:	str	xzr, [x19]
  44:	orr	x0, x0, #0x1
  48:	str	x0, [x20]
  4c:	mov	x0, x20
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ldr	x22, [x19]
  64:	str	xzr, [x19]
  68:	ldr	x0, [x22]
  6c:	ldr	x2, [x0, #48]
  70:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x1, [x1]
  78:	mov	x0, x22
  7c:	blr	x2
  80:	and	w0, w0, #0xff
  84:	cbz	w0, b0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0xb0>
  88:	ldr	x1, [x21]
  8c:	ldr	x0, [x1]
  90:	str	x22, [x1]
  94:	cbz	x0, a4 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0xa4>
  98:	ldr	x1, [x0]
  9c:	ldr	x1, [x1, #8]
  a0:	blr	x1
  a4:	mov	x0, #0x1                   	// #1
  a8:	str	x0, [x20]
  ac:	b	4c <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_+0x4c>
  b0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x339                 	// #825
  bc:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>
  c0:	add	x1, x1, #0x0
  c4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_JEEES7_SC_OT_DpOT0_>
  c8:	add	x0, x0, #0x0
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x21, x1
  18:	ldr	x19, [x0]
  1c:	ands	x1, x19, #0xfffffffffffffffe
  20:	cset	x19, ne  // ne = any
  24:	orr	x19, x19, x1
  28:	str	x19, [x0]
  2c:	ands	x19, x19, #0xfffffffffffffffe
  30:	b.eq	1a4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1a4>  // b.none
  34:	str	xzr, [x0]
  38:	ldr	x0, [x19]
  3c:	ldr	x2, [x0, #48]
  40:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  44:	ldr	x1, [x1]
  48:	mov	x0, x19
  4c:	blr	x2
  50:	and	w0, w0, #0xff
  54:	cbz	w0, 4c4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4c4>
  58:	stp	x23, x24, [sp, #48]
  5c:	mov	x0, #0x1                   	// #1
  60:	str	x0, [sp, #120]
  64:	ldr	x22, [x19, #8]
  68:	ldr	x24, [x19, #16]
  6c:	cmp	x24, x22
  70:	b.eq	214 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x214>  // b.none
  74:	stp	x25, x26, [sp, #64]
  78:	stp	x27, x28, [sp, #80]
  7c:	add	x26, sp, #0x90
  80:	add	x25, sp, #0x88
  84:	adrp	x23, 0 <_ZTVN4llvm9ErrorListE>
  88:	ldr	x23, [x23]
  8c:	add	x23, x23, #0x10
  90:	ldr	x0, [sp, #120]
  94:	orr	x0, x0, #0x1
  98:	str	x0, [sp, #128]
  9c:	str	xzr, [sp, #120]
  a0:	ldr	x0, [x22]
  a4:	str	xzr, [x22]
  a8:	str	x0, [sp, #144]
  ac:	mov	x8, x25
  b0:	mov	x1, x21
  b4:	mov	x0, x26
  b8:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
  bc:	ldr	x0, [sp, #128]
  c0:	ands	x1, x0, #0xfffffffffffffffe
  c4:	cset	x0, ne  // ne = any
  c8:	orr	x0, x0, x1
  cc:	str	x0, [sp, #128]
  d0:	ands	x0, x0, #0xfffffffffffffffe
  d4:	b.eq	1c0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1c0>  // b.none
  d8:	ldr	x1, [sp, #136]
  dc:	ands	x2, x1, #0xfffffffffffffffe
  e0:	cset	x1, ne  // ne = any
  e4:	orr	x1, x1, x2
  e8:	str	x1, [sp, #136]
  ec:	tst	x1, #0xfffffffffffffffe
  f0:	b.eq	238 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x238>  // b.none
  f4:	ldr	x1, [x0]
  f8:	ldr	x2, [x1, #48]
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 100:	ldr	x1, [x1]
 104:	blr	x2
 108:	and	w0, w0, #0xff
 10c:	cbz	w0, 288 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x288>
 110:	ldr	x0, [sp, #128]
 114:	and	x0, x0, #0xfffffffffffffffe
 118:	str	x0, [sp, #96]
 11c:	ldr	x0, [sp, #136]
 120:	ands	x0, x0, #0xfffffffffffffffe
 124:	b.eq	244 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x244>  // b.none
 128:	ldr	x1, [x0]
 12c:	ldr	x2, [x1, #48]
 130:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 134:	ldr	x1, [x1]
 138:	blr	x2
 13c:	and	w0, w0, #0xff
 140:	cbz	w0, 244 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x244>
 144:	ldr	x0, [sp, #136]
 148:	and	x1, x0, #0xfffffffffffffffe
 14c:	str	x1, [sp, #104]
 150:	str	xzr, [sp, #136]
 154:	ldr	x27, [x1, #8]
 158:	ldr	x28, [x1, #16]
 15c:	cmp	x27, x28
 160:	b.eq	188 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x188>  // b.none
 164:	ldr	x0, [sp, #96]
 168:	add	x0, x0, #0x8
 16c:	str	x0, [sp, #96]
 170:	mov	x1, x27
 174:	ldr	x0, [sp, #96]
 178:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 17c:	add	x27, x27, #0x8
 180:	cmp	x28, x27
 184:	b.ne	170 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x170>  // b.any
 188:	ldr	x2, [sp, #104]
 18c:	cbz	x2, 278 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x278>
 190:	ldr	x0, [x2]
 194:	ldr	x1, [x0, #8]
 198:	mov	x0, x2
 19c:	blr	x1
 1a0:	b	278 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x278>
 1a4:	mov	x0, #0x1                   	// #1
 1a8:	str	x0, [x8]
 1ac:	mov	x0, x20
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #192
 1bc:	ret
 1c0:	ldr	x0, [sp, #136]
 1c4:	orr	x27, x0, #0x1
 1c8:	str	xzr, [sp, #136]
 1cc:	ldr	x0, [sp, #120]
 1d0:	cbnz	x0, 4ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4ac>
 1d4:	orr	x0, x27, #0x1
 1d8:	str	x0, [sp, #120]
 1dc:	ldr	x0, [sp, #136]
 1e0:	cbnz	x0, 4b4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4b4>
 1e4:	ldr	x0, [sp, #144]
 1e8:	cbz	x0, 1f8 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1f8>
 1ec:	ldr	x1, [x0]
 1f0:	ldr	x1, [x1, #8]
 1f4:	blr	x1
 1f8:	ldr	x0, [sp, #128]
 1fc:	cbnz	x0, 4bc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x4bc>
 200:	add	x22, x22, #0x8
 204:	cmp	x24, x22
 208:	b.ne	90 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x90>  // b.any
 20c:	ldp	x25, x26, [sp, #64]
 210:	ldp	x27, x28, [sp, #80]
 214:	ldr	x0, [sp, #120]
 218:	orr	x0, x0, #0x1
 21c:	str	x0, [x20]
 220:	ldr	x0, [x19]
 224:	ldr	x1, [x0, #8]
 228:	mov	x0, x19
 22c:	blr	x1
 230:	ldp	x23, x24, [sp, #48]
 234:	b	1ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1ac>
 238:	orr	x27, x0, #0x1
 23c:	str	xzr, [sp, #128]
 240:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 244:	ldr	x0, [sp, #136]
 248:	and	x0, x0, #0xfffffffffffffffe
 24c:	str	x0, [sp, #184]
 250:	str	xzr, [sp, #136]
 254:	add	x1, sp, #0xb8
 258:	ldr	x0, [sp, #96]
 25c:	add	x0, x0, #0x8
 260:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 264:	ldr	x0, [sp, #184]
 268:	cbz	x0, 278 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x278>
 26c:	ldr	x1, [x0]
 270:	ldr	x1, [x1, #8]
 274:	blr	x1
 278:	ldr	x0, [sp, #128]
 27c:	orr	x27, x0, #0x1
 280:	str	xzr, [sp, #128]
 284:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 288:	ldr	x0, [sp, #136]
 28c:	ands	x0, x0, #0xfffffffffffffffe
 290:	b.eq	3c4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x3c4>  // b.none
 294:	ldr	x1, [x0]
 298:	ldr	x2, [x1, #48]
 29c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 2a0:	ldr	x1, [x1]
 2a4:	blr	x2
 2a8:	and	w0, w0, #0xff
 2ac:	cbz	w0, 3c4 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x3c4>
 2b0:	ldr	x0, [sp, #136]
 2b4:	and	x0, x0, #0xfffffffffffffffe
 2b8:	mov	x1, x0
 2bc:	ldr	x4, [x1, #8]!
 2c0:	str	x4, [sp, #96]
 2c4:	ldr	x3, [sp, #128]
 2c8:	and	x3, x3, #0xfffffffffffffffe
 2cc:	str	x3, [sp, #176]
 2d0:	str	xzr, [sp, #128]
 2d4:	ldr	x2, [x1, #8]
 2d8:	ldr	x1, [x1, #16]
 2dc:	cmp	x2, x1
 2e0:	b.eq	3b0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x3b0>  // b.none
 2e4:	cmp	x4, x2
 2e8:	b.eq	344 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x344>  // b.none
 2ec:	ldur	x1, [x2, #-8]
 2f0:	stur	xzr, [x2, #-8]
 2f4:	str	x1, [x2]
 2f8:	ldr	x27, [x0, #16]
 2fc:	add	x1, x27, #0x8
 300:	str	x1, [x0, #16]
 304:	sub	x0, x27, #0x8
 308:	ldr	x1, [sp, #96]
 30c:	sub	x0, x0, x1
 310:	asr	x28, x0, #3
 314:	cmp	x0, #0x0
 318:	b.gt	388 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x388>
 31c:	ldr	x1, [sp, #176]
 320:	str	xzr, [sp, #176]
 324:	ldr	x2, [sp, #96]
 328:	ldr	x0, [x2]
 32c:	str	x1, [x2]
 330:	cbz	x0, 358 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x358>
 334:	ldr	x1, [x0]
 338:	ldr	x1, [x1, #8]
 33c:	blr	x1
 340:	b	358 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x358>
 344:	str	xzr, [sp, #176]
 348:	str	x3, [x2]
 34c:	ldr	x1, [x0, #16]
 350:	add	x1, x1, #0x8
 354:	str	x1, [x0, #16]
 358:	ldr	x0, [sp, #176]
 35c:	cbz	x0, 36c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x36c>
 360:	ldr	x1, [x0]
 364:	ldr	x1, [x1, #8]
 368:	blr	x1
 36c:	ldr	x0, [sp, #136]
 370:	orr	x27, x0, #0x1
 374:	str	xzr, [sp, #136]
 378:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 37c:	sub	x28, x28, #0x1
 380:	cmp	x28, #0x0
 384:	b.le	31c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x31c>
 388:	sub	x27, x27, #0x8
 38c:	ldur	x1, [x27, #-8]
 390:	stur	xzr, [x27, #-8]
 394:	ldr	x0, [x27]
 398:	str	x1, [x27]
 39c:	cbz	x0, 37c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x37c>
 3a0:	ldr	x1, [x0]
 3a4:	ldr	x1, [x1, #8]
 3a8:	blr	x1
 3ac:	b	37c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x37c>
 3b0:	add	x2, sp, #0xb0
 3b4:	ldr	x1, [sp, #96]
 3b8:	add	x0, x0, #0x8
 3bc:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 3c0:	b	358 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x358>
 3c4:	ldr	x0, [sp, #128]
 3c8:	and	x0, x0, #0xfffffffffffffffe
 3cc:	str	x0, [sp, #168]
 3d0:	str	xzr, [sp, #128]
 3d4:	ldr	x0, [sp, #136]
 3d8:	and	x0, x0, #0xfffffffffffffffe
 3dc:	str	x0, [sp, #160]
 3e0:	str	xzr, [sp, #136]
 3e4:	mov	x0, #0x20                  	// #32
 3e8:	bl	0 <_Znwm>
 3ec:	mov	x27, x0
 3f0:	mov	x28, x0
 3f4:	str	x23, [x28], #8
 3f8:	str	xzr, [x0, #8]
 3fc:	str	xzr, [x28, #8]
 400:	str	xzr, [x28, #16]
 404:	ldr	x0, [sp, #168]
 408:	ldr	x1, [x0]
 40c:	ldr	x2, [x1, #48]
 410:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 414:	ldr	x1, [x1]
 418:	blr	x2
 41c:	and	w0, w0, #0xff
 420:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x48c>
 424:	ldr	x0, [sp, #160]
 428:	ldr	x1, [x0]
 42c:	ldr	x2, [x1, #48]
 430:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 434:	ldr	x1, [x1]
 438:	blr	x2
 43c:	and	w0, w0, #0xff
 440:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x48c>
 444:	add	x1, sp, #0xa8
 448:	mov	x0, x28
 44c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 450:	add	x1, sp, #0xa0
 454:	mov	x0, x28
 458:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 45c:	orr	x27, x27, #0x1
 460:	ldr	x0, [sp, #160]
 464:	cbz	x0, 474 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x474>
 468:	ldr	x1, [x0]
 46c:	ldr	x1, [x1, #8]
 470:	blr	x1
 474:	ldr	x0, [sp, #168]
 478:	cbz	x0, 1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 47c:	ldr	x1, [x0]
 480:	ldr	x1, [x1, #8]
 484:	blr	x1
 488:	b	1cc <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1cc>
 48c:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 490:	add	x3, x3, #0x0
 494:	mov	w2, #0x181                 	// #385
 498:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 49c:	add	x1, x1, #0x0
 4a0:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 4a4:	add	x0, x0, #0x0
 4a8:	bl	0 <__assert_fail>
 4ac:	add	x0, sp, #0x78
 4b0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4b4:	add	x0, sp, #0x88
 4b8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4bc:	add	x0, sp, #0x80
 4c0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4c4:	str	x19, [sp, #152]
 4c8:	mov	x8, x20
 4cc:	mov	x1, x21
 4d0:	add	x0, sp, #0x98
 4d4:	bl	0 <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_>
 4d8:	ldr	x0, [sp, #152]
 4dc:	cbz	x0, 1ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1ac>
 4e0:	ldr	x1, [x0]
 4e4:	ldr	x1, [x1, #8]
 4e8:	blr	x1
 4ec:	b	1ac <_ZN4llvm12handleErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEES7_S7_DpOT_+0x1ac>

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0]
   c:	orr	x2, x2, #0x1
  10:	str	x2, [sp, #104]
  14:	str	xzr, [x0]
  18:	add	x8, sp, #0x60
  1c:	add	x0, sp, #0x68
  20:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  24:	ldr	x0, [sp, #96]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #96]
  38:	tst	x0, #0xfffffffffffffffe
  3c:	b.ne	54 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0x54>  // b.any
  40:	tbnz	w0, #0, 110 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0x110>
  44:	ldr	x0, [sp, #104]
  48:	cbnz	x0, 118 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0x118>
  4c:	ldp	x29, x30, [sp], #112
  50:	ret
  54:	add	x1, sp, #0x10
  58:	add	x0, sp, #0x20
  5c:	str	x0, [sp, #16]
  60:	str	xzr, [sp, #24]
  64:	strb	wzr, [sp, #32]
  68:	mov	w0, #0x1                   	// #1
  6c:	str	w0, [sp, #80]
  70:	str	xzr, [sp, #72]
  74:	str	xzr, [sp, #64]
  78:	str	xzr, [sp, #56]
  7c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  80:	ldr	x0, [x0]
  84:	add	x0, x0, #0x10
  88:	str	x0, [sp, #48]
  8c:	str	x1, [sp, #88]
  90:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  94:	add	x1, x1, #0x0
  98:	add	x0, sp, #0x30
  9c:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  a0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  ac:	mov	x2, x0
  b0:	ldr	x1, [sp, #96]
  b4:	ands	x0, x1, #0xfffffffffffffffe
  b8:	b.eq	fc <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0xfc>  // b.none
  bc:	ldr	x1, [x0]
  c0:	ldr	x3, [x1, #16]
  c4:	mov	x1, x2
  c8:	blr	x3
  cc:	ldr	x1, [sp, #72]
  d0:	ldr	x0, [sp, #56]
  d4:	cmp	x1, x0
  d8:	b.eq	e4 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0xe4>  // b.none
  dc:	add	x0, sp, #0x30
  e0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  e4:	mov	w2, #0x2c9                 	// #713
  e8:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
  ec:	add	x1, x1, #0x0
  f0:	ldr	x0, [sp, #88]
  f4:	ldr	x0, [x0]
  f8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  fc:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
 100:	add	x1, x1, #0x0
 104:	mov	x0, x2
 108:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_>
 10c:	b	cc <_ZN4llvm15handleAllErrorsIJZNS_9FileError5buildERKNS_5TwineENS_8OptionalImEENS_5ErrorEEUlSt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS9_EEE_EEEvS7_DpOT_+0xcc>
 110:	add	x0, sp, #0x60
 114:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 118:	add	x0, sp, #0x68
 11c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedIbE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #40]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #40]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_7remarks17ParsedStringTableEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_7remarks6RemarkESt14default_deleteIS3_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_7remarks4TypeEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #16]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #16]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_9StringRefEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #24]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #24]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_7remarks14RemarkLocationEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #64]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #64]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_7remarks8ArgumentEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNSt8_Rb_treeIN4llvm9StringRefESt4pairIKS1_S1_ESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E:

0000000000000000 <_ZNSt8_Rb_treeIN4llvm9StringRefESt4pairIKS1_S1_ESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	cbz	x1, 34 <_ZNSt8_Rb_treeIN4llvm9StringRefESt4pairIKS1_S1_ESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x34>
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIN4llvm9StringRefESt4pairIKS1_S1_ESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIN4llvm9StringRefESt4pairIKS1_S1_ESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

YAMLRemarkSerializer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x20, x1
  14:	ldp	x0, x1, [x2]
  18:	stp	x0, x1, [sp, #56]
  1c:	ldr	x0, [x2, #16]
  20:	str	x0, [sp, #72]
  24:	mov	x0, #0x28                  	// #40
  28:	bl	0 <_Znwm>
  2c:	str	x20, [x0, #8]
  30:	mov	x2, x0
  34:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
  38:	ldr	x1, [x1]
  3c:	add	x1, x1, #0x10
  40:	str	x1, [x2], #16
  44:	ldp	x4, x5, [sp, #56]
  48:	stp	x4, x5, [x0, #16]
  4c:	ldr	x1, [sp, #72]
  50:	str	x1, [x2, #16]
  54:	str	x0, [x19]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #80
  64:	ret

0000000000000068 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>:
  68:	stp	x29, x30, [sp, #-128]!
  6c:	mov	x29, sp
  70:	stp	x19, x20, [sp, #16]
  74:	str	x21, [sp, #32]
  78:	mov	x19, x0
  7c:	ldrb	w0, [x0, #168]
  80:	cbz	w0, e8 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE+0x80>
  84:	mov	x20, x8
  88:	mov	x21, x1
  8c:	ldp	x0, x1, [x2]
  90:	stp	x0, x1, [sp, #104]
  94:	ldr	x0, [x2, #16]
  98:	str	x0, [sp, #120]
  9c:	mov	x0, #0x30                  	// #48
  a0:	bl	0 <_Znwm>
  a4:	str	x21, [x0, #8]
  a8:	ldp	x2, x3, [sp, #104]
  ac:	stp	x2, x3, [x0, #16]
  b0:	ldr	x1, [sp, #120]
  b4:	str	x1, [x0, #32]
  b8:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
  bc:	ldr	x1, [x1]
  c0:	add	x1, x1, #0x10
  c4:	str	x1, [x0]
  c8:	add	x19, x19, #0x20
  cc:	str	x19, [x0, #40]
  d0:	str	x0, [x20]
  d4:	mov	x0, x20
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #128
  e4:	ret
  e8:	adrp	x3, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0xca                  	// #202
  f4:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
  f8:	add	x1, x1, #0x0
  fc:	adrp	x0, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 100:	add	x0, x0, #0x0
 104:	bl	0 <__assert_fail>

0000000000000108 <_ZL9emitMagicRN4llvm11raw_ostreamE>:
 108:	stp	x29, x30, [sp, #-32]!
 10c:	mov	x29, sp
 110:	str	x19, [sp, #16]
 114:	mov	x19, x0
 118:	ldr	x1, [x0, #24]
 11c:	ldr	x0, [x0, #16]
 120:	sub	x0, x0, x1
 124:	cmp	x0, #0x6
 128:	b.ls	154 <_ZL9emitMagicRN4llvm11raw_ostreamE+0x4c>  // b.plast
 12c:	adrp	x0, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 130:	add	x0, x0, #0x0
 134:	ldr	w2, [x0]
 138:	str	w2, [x1]
 13c:	ldur	w0, [x0, #3]
 140:	stur	w0, [x1, #3]
 144:	ldr	x0, [x19, #24]
 148:	add	x0, x0, #0x7
 14c:	str	x0, [x19, #24]
 150:	b	168 <_ZL9emitMagicRN4llvm11raw_ostreamE+0x60>
 154:	mov	x2, #0x7                   	// #7
 158:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 15c:	add	x1, x1, #0x0
 160:	mov	x0, x19
 164:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 168:	mov	w1, #0x0                   	// #0
 16c:	mov	x0, x19
 170:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 174:	ldr	x19, [sp, #16]
 178:	ldp	x29, x30, [sp], #32
 17c:	ret

0000000000000180 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE>:
 180:	stp	x29, x30, [sp, #-192]!
 184:	mov	x29, sp
 188:	stp	x19, x20, [sp, #16]
 18c:	str	x21, [sp, #32]
 190:	mov	x20, x0
 194:	mov	x21, x1
 198:	mov	x19, x2
 19c:	add	x3, sp, #0x40
 1a0:	str	x3, [sp, #48]
 1a4:	str	wzr, [sp, #56]
 1a8:	mov	w3, #0x80                  	// #128
 1ac:	str	w3, [sp, #60]
 1b0:	cmp	x2, #0x80
 1b4:	b.hi	1c4 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE+0x44>  // b.pmore
 1b8:	cbz	x2, 200 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE+0x80>
 1bc:	add	x0, sp, #0x40
 1c0:	b	1e0 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE+0x60>
 1c4:	add	x0, sp, #0x30
 1c8:	mov	x3, #0x1                   	// #1
 1cc:	add	x1, x0, #0x10
 1d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1d4:	ldr	w1, [sp, #56]
 1d8:	ldr	x0, [sp, #48]
 1dc:	add	x0, x0, x1
 1e0:	mov	x2, x19
 1e4:	mov	x1, x21
 1e8:	bl	0 <memcpy>
 1ec:	ldr	w2, [sp, #56]
 1f0:	add	x2, x19, x2
 1f4:	ldr	w0, [sp, #60]
 1f8:	cmp	x2, x0
 1fc:	b.hi	254 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE+0xd4>  // b.pmore
 200:	str	w2, [sp, #56]
 204:	add	x0, sp, #0x30
 208:	bl	0 <_ZN4llvm3sys2fs13make_absoluteERNS_15SmallVectorImplIcEE>
 20c:	ldr	w2, [sp, #56]
 210:	cbz	w2, 274 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE+0xf4>
 214:	mov	w2, w2
 218:	ldr	x1, [sp, #48]
 21c:	mov	x0, x20
 220:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 224:	mov	w1, #0x0                   	// #0
 228:	mov	x0, x20
 22c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 230:	ldr	x0, [sp, #48]
 234:	add	x1, sp, #0x40
 238:	cmp	x0, x1
 23c:	b.eq	244 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE+0xc4>  // b.none
 240:	bl	0 <free>
 244:	ldp	x19, x20, [sp, #16]
 248:	ldr	x21, [sp, #32]
 24c:	ldp	x29, x30, [sp], #192
 250:	ret
 254:	adrp	x3, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 258:	add	x3, x3, #0x0
 25c:	mov	w2, #0x43                  	// #67
 260:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 264:	add	x1, x1, #0x0
 268:	adrp	x0, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 26c:	add	x0, x0, #0x0
 270:	bl	0 <__assert_fail>
 274:	adrp	x3, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 278:	add	x3, x3, #0x0
 27c:	mov	w2, #0xee                  	// #238
 280:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 284:	add	x1, x1, #0x0
 288:	adrp	x0, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 28c:	add	x0, x0, #0x0
 290:	bl	0 <__assert_fail>

0000000000000294 <_ZN4llvm7remarks18YAMLMetaSerializer4emitEv>:
 294:	stp	x29, x30, [sp, #-48]!
 298:	mov	x29, sp
 29c:	stp	x19, x20, [sp, #16]
 2a0:	mov	x19, x0
 2a4:	ldr	x0, [x0, #8]
 2a8:	bl	108 <_ZL9emitMagicRN4llvm11raw_ostreamE>
 2ac:	str	xzr, [sp, #40]
 2b0:	add	x20, sp, #0x28
 2b4:	mov	x2, #0x8                   	// #8
 2b8:	mov	x1, x20
 2bc:	ldr	x0, [x19, #8]
 2c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2c4:	str	xzr, [sp, #40]
 2c8:	mov	x2, #0x8                   	// #8
 2cc:	mov	x1, x20
 2d0:	ldr	x0, [x19, #8]
 2d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2d8:	ldrb	w0, [x19, #32]
 2dc:	cbnz	w0, 2ec <_ZN4llvm7remarks18YAMLMetaSerializer4emitEv+0x58>
 2e0:	ldp	x19, x20, [sp, #16]
 2e4:	ldp	x29, x30, [sp], #48
 2e8:	ret
 2ec:	ldp	x1, x2, [x19, #16]
 2f0:	ldr	x0, [x19, #8]
 2f4:	bl	180 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE>
 2f8:	b	2e0 <_ZN4llvm7remarks18YAMLMetaSerializer4emitEv+0x4c>

00000000000002fc <_ZN4llvm7remarks24YAMLStrTabMetaSerializer4emitEv>:
 2fc:	stp	x29, x30, [sp, #-64]!
 300:	mov	x29, sp
 304:	stp	x19, x20, [sp, #16]
 308:	stp	x21, x22, [sp, #32]
 30c:	mov	x19, x0
 310:	ldr	x0, [x0, #8]
 314:	bl	108 <_ZL9emitMagicRN4llvm11raw_ostreamE>
 318:	str	xzr, [sp, #56]
 31c:	add	x20, sp, #0x38
 320:	mov	x2, #0x8                   	// #8
 324:	mov	x1, x20
 328:	ldr	x0, [x19, #8]
 32c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 330:	ldr	x22, [x19, #8]
 334:	ldr	x21, [x19, #40]
 338:	ldr	x0, [x21, #128]
 33c:	str	x0, [sp, #56]
 340:	mov	x2, #0x8                   	// #8
 344:	mov	x1, x20
 348:	mov	x0, x22
 34c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 350:	mov	x1, x22
 354:	mov	x0, x21
 358:	bl	0 <_ZNK4llvm7remarks11StringTable9serializeERNS_11raw_ostreamE>
 35c:	ldrb	w0, [x19, #32]
 360:	cbnz	w0, 374 <_ZN4llvm7remarks24YAMLStrTabMetaSerializer4emitEv+0x78>
 364:	ldp	x19, x20, [sp, #16]
 368:	ldp	x21, x22, [sp, #32]
 36c:	ldp	x29, x30, [sp], #64
 370:	ret
 374:	ldp	x1, x2, [x19, #16]
 378:	ldr	x0, [x19, #8]
 37c:	bl	180 <_ZL16emitExternalFileRN4llvm11raw_ostreamENS_9StringRefE>
 380:	b	364 <_ZN4llvm7remarks24YAMLStrTabMetaSerializer4emitEv+0x68>

0000000000000384 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE>:
 384:	stp	x29, x30, [sp, #-288]!
 388:	mov	x29, sp
 38c:	stp	x19, x20, [sp, #16]
 390:	mov	x19, x0
 394:	mov	w0, w1
 398:	mov	x1, x2
 39c:	mov	x20, x4
 3a0:	str	w0, [x19, #8]
 3a4:	str	x2, [x19, #16]
 3a8:	str	w3, [x19, #24]
 3ac:	strb	wzr, [x19, #32]
 3b0:	strb	wzr, [x19, #168]
 3b4:	mov	x0, x19
 3b8:	adrp	x3, 0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 3bc:	ldr	x3, [x3]
 3c0:	add	x3, x3, #0x10
 3c4:	str	x3, [x0], #176
 3c8:	mov	w3, #0x46                  	// #70
 3cc:	mov	x2, x19
 3d0:	bl	0 <_ZN4llvm4yaml6OutputC1ERNS_11raw_ostreamEPvi>
 3d4:	ldrb	w0, [x20, #136]
 3d8:	cbz	w0, 97c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x5f8>
 3dc:	ldrb	w0, [x19, #168]
 3e0:	cbz	w0, 888 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x504>
 3e4:	stp	x21, x22, [sp, #32]
 3e8:	ldr	x0, [x20]
 3ec:	str	x0, [sp, #160]
 3f0:	ldr	w0, [x20, #8]
 3f4:	str	w0, [sp, #168]
 3f8:	ldr	w0, [x20, #12]
 3fc:	str	w0, [sp, #172]
 400:	ldr	w0, [x20, #16]
 404:	str	w0, [sp, #176]
 408:	ldr	w0, [x20, #20]
 40c:	str	w0, [sp, #180]
 410:	str	xzr, [x20]
 414:	str	wzr, [x20, #8]
 418:	str	wzr, [x20, #12]
 41c:	str	wzr, [x20, #16]
 420:	ldr	x0, [x20, #24]
 424:	str	x0, [sp, #184]
 428:	ldr	x0, [x20, #32]
 42c:	str	x0, [sp, #192]
 430:	add	x0, sp, #0xd8
 434:	str	x0, [sp, #200]
 438:	str	wzr, [sp, #208]
 43c:	mov	w0, #0x4                   	// #4
 440:	str	w0, [sp, #212]
 444:	ldr	w0, [x20, #48]
 448:	cbnz	w0, 848 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x4c4>
 44c:	add	x0, sp, #0x108
 450:	str	x0, [sp, #248]
 454:	str	wzr, [sp, #256]
 458:	str	wzr, [sp, #260]
 45c:	ldr	w0, [x20, #96]
 460:	cbnz	w0, 858 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x4d4>
 464:	ldr	x1, [x20, #104]
 468:	str	x1, [sp, #264]
 46c:	ldr	x1, [x20, #112]
 470:	str	x1, [sp, #272]
 474:	str	xzr, [x20, #32]
 478:	str	xzr, [x20, #24]
 47c:	str	xzr, [x20, #104]
 480:	str	wzr, [x20, #48]
 484:	ldr	x1, [x20, #88]
 488:	ldr	w0, [x20, #96]
 48c:	add	x0, x1, x0, lsl #4
 490:	cmp	x1, x0
 494:	b.eq	4a4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x120>  // b.none
 498:	sub	x0, x0, #0x10
 49c:	cmp	x1, x0
 4a0:	b.ne	498 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x114>  // b.any
 4a4:	str	wzr, [x20, #96]
 4a8:	ldr	x0, [x19, #32]
 4ac:	ldr	x1, [sp, #160]
 4b0:	str	x1, [x19, #32]
 4b4:	str	x0, [sp, #160]
 4b8:	ldr	w0, [x19, #40]
 4bc:	ldr	w1, [sp, #168]
 4c0:	str	w1, [x19, #40]
 4c4:	str	w0, [sp, #168]
 4c8:	ldr	w0, [x19, #44]
 4cc:	ldr	w1, [sp, #172]
 4d0:	str	w1, [x19, #44]
 4d4:	str	w0, [sp, #172]
 4d8:	ldr	w0, [x19, #48]
 4dc:	ldr	w1, [sp, #176]
 4e0:	str	w1, [x19, #48]
 4e4:	str	w0, [sp, #176]
 4e8:	ldr	x0, [x19, #56]
 4ec:	str	x0, [sp, #56]
 4f0:	ldr	x0, [x19, #64]
 4f4:	str	x0, [sp, #64]
 4f8:	add	x0, sp, #0x58
 4fc:	str	x0, [sp, #72]
 500:	str	wzr, [sp, #80]
 504:	mov	w0, #0x4                   	// #4
 508:	str	w0, [sp, #84]
 50c:	ldr	w0, [x19, #80]
 510:	cbnz	w0, 868 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x4e4>
 514:	add	x0, sp, #0x88
 518:	str	x0, [sp, #120]
 51c:	str	wzr, [sp, #128]
 520:	str	wzr, [sp, #132]
 524:	ldr	w0, [x19, #128]
 528:	cbnz	w0, 878 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x4f4>
 52c:	ldr	x1, [x19, #136]
 530:	str	x1, [sp, #136]
 534:	ldr	x1, [x19, #144]
 538:	str	x1, [sp, #144]
 53c:	str	xzr, [x19, #64]
 540:	str	xzr, [x19, #56]
 544:	str	xzr, [x19, #136]
 548:	str	wzr, [x19, #80]
 54c:	ldr	x1, [x19, #120]
 550:	ldr	w0, [x19, #128]
 554:	add	x0, x1, x0, lsl #4
 558:	cmp	x1, x0
 55c:	b.eq	56c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1e8>  // b.none
 560:	sub	x0, x0, #0x10
 564:	cmp	x1, x0
 568:	b.ne	560 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1dc>  // b.any
 56c:	str	wzr, [x19, #128]
 570:	ldr	x21, [x19, #72]
 574:	ldr	w22, [x19, #80]
 578:	add	x22, x21, x22, lsl #3
 57c:	cmp	x21, x22
 580:	b.eq	594 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x210>  // b.none
 584:	ldr	x0, [x21], #8
 588:	bl	0 <free>
 58c:	cmp	x22, x21
 590:	b.ne	584 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x200>  // b.any
 594:	ldr	x21, [x19, #120]
 598:	ldr	w22, [x19, #128]
 59c:	add	x22, x21, x22, lsl #4
 5a0:	cmp	x21, x22
 5a4:	b.eq	5b8 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x234>  // b.none
 5a8:	ldr	x0, [x21], #16
 5ac:	bl	0 <free>
 5b0:	cmp	x22, x21
 5b4:	b.ne	5a8 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x224>  // b.any
 5b8:	ldr	x1, [sp, #184]
 5bc:	str	x1, [x19, #56]
 5c0:	ldr	x1, [sp, #192]
 5c4:	str	x1, [x19, #64]
 5c8:	ldr	x1, [sp, #264]
 5cc:	str	x1, [x19, #136]
 5d0:	ldr	x1, [sp, #272]
 5d4:	str	x1, [x19, #144]
 5d8:	add	x21, sp, #0xa0
 5dc:	add	x1, sp, #0xc8
 5e0:	add	x0, x19, #0x48
 5e4:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 5e8:	add	x1, x21, #0x58
 5ec:	add	x0, x19, #0x78
 5f0:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 5f4:	str	xzr, [sp, #192]
 5f8:	str	xzr, [sp, #184]
 5fc:	str	xzr, [sp, #264]
 600:	str	wzr, [sp, #208]
 604:	ldr	x1, [sp, #248]
 608:	ldr	w0, [sp, #256]
 60c:	add	x0, x1, x0, lsl #4
 610:	cmp	x1, x0
 614:	b.eq	624 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x2a0>  // b.none
 618:	sub	x0, x0, #0x10
 61c:	cmp	x1, x0
 620:	b.ne	618 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x294>  // b.any
 624:	str	wzr, [sp, #256]
 628:	ldr	x21, [sp, #200]
 62c:	ldr	w22, [sp, #208]
 630:	add	x22, x21, x22, lsl #3
 634:	cmp	x21, x22
 638:	b.eq	670 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x2ec>  // b.none
 63c:	ldr	x0, [x21], #8
 640:	bl	0 <free>
 644:	cmp	x22, x21
 648:	b.ne	63c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x2b8>  // b.any
 64c:	ldr	x21, [sp, #248]
 650:	ldr	w22, [sp, #256]
 654:	add	x22, x21, x22, lsl #4
 658:	cmp	x21, x22
 65c:	b.eq	670 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x2ec>  // b.none
 660:	ldr	x0, [x21], #16
 664:	bl	0 <free>
 668:	cmp	x22, x21
 66c:	b.ne	660 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x2dc>  // b.any
 670:	ldr	x0, [sp, #56]
 674:	str	x0, [sp, #184]
 678:	ldr	x0, [sp, #64]
 67c:	str	x0, [sp, #192]
 680:	ldr	x0, [sp, #136]
 684:	str	x0, [sp, #264]
 688:	ldr	x0, [sp, #144]
 68c:	str	x0, [sp, #272]
 690:	add	x22, sp, #0x38
 694:	add	x21, sp, #0xa0
 698:	add	x1, sp, #0x48
 69c:	add	x0, sp, #0xc8
 6a0:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 6a4:	add	x1, x22, #0x40
 6a8:	add	x0, x21, #0x58
 6ac:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 6b0:	str	xzr, [sp, #64]
 6b4:	str	xzr, [sp, #56]
 6b8:	str	xzr, [sp, #136]
 6bc:	str	wzr, [sp, #80]
 6c0:	ldr	x1, [sp, #120]
 6c4:	ldr	w0, [sp, #128]
 6c8:	add	x0, x1, x0, lsl #4
 6cc:	cmp	x1, x0
 6d0:	b.eq	6e0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x35c>  // b.none
 6d4:	sub	x0, x0, #0x10
 6d8:	cmp	x1, x0
 6dc:	b.ne	6d4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x350>  // b.any
 6e0:	str	wzr, [sp, #128]
 6e4:	ldr	x21, [sp, #72]
 6e8:	ldr	w22, [sp, #80]
 6ec:	add	x22, x21, x22, lsl #3
 6f0:	cmp	x21, x22
 6f4:	b.eq	74c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x3c8>  // b.none
 6f8:	ldr	x0, [x21], #8
 6fc:	bl	0 <free>
 700:	cmp	x22, x21
 704:	b.ne	6f8 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x374>  // b.any
 708:	ldr	x21, [sp, #120]
 70c:	ldr	w22, [sp, #128]
 710:	add	x22, x21, x22, lsl #4
 714:	cmp	x21, x22
 718:	b.eq	74c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x3c8>  // b.none
 71c:	ldr	x0, [x21], #16
 720:	bl	0 <free>
 724:	cmp	x22, x21
 728:	b.ne	71c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x398>  // b.any
 72c:	ldr	x1, [sp, #120]
 730:	ldr	w0, [sp, #128]
 734:	add	x0, x1, x0, lsl #4
 738:	cmp	x1, x0
 73c:	b.eq	74c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x3c8>  // b.none
 740:	sub	x0, x0, #0x10
 744:	cmp	x1, x0
 748:	b.ne	740 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x3bc>  // b.any
 74c:	ldr	x0, [sp, #120]
 750:	add	x1, sp, #0x88
 754:	cmp	x0, x1
 758:	b.eq	760 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x3dc>  // b.none
 75c:	bl	0 <free>
 760:	ldr	x0, [sp, #72]
 764:	add	x1, sp, #0x58
 768:	cmp	x0, x1
 76c:	b.eq	774 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x3f0>  // b.none
 770:	bl	0 <free>
 774:	ldr	w0, [sp, #172]
 778:	cbz	w0, 7a0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x41c>
 77c:	ldr	w0, [sp, #168]
 780:	cbz	w0, 7a0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x41c>
 784:	sub	w1, w0, #0x1
 788:	add	x1, x1, #0x1
 78c:	lsl	x1, x1, #3
 790:	mov	x0, #0x0                   	// #0
 794:	add	x0, x0, #0x8
 798:	cmp	x1, x0
 79c:	b.ne	794 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x410>  // b.any
 7a0:	ldr	x0, [sp, #160]
 7a4:	bl	0 <free>
 7a8:	ldr	x21, [sp, #200]
 7ac:	ldr	w22, [sp, #208]
 7b0:	add	x22, x21, x22, lsl #3
 7b4:	cmp	x21, x22
 7b8:	b.eq	7cc <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x448>  // b.none
 7bc:	ldr	x0, [x21], #8
 7c0:	bl	0 <free>
 7c4:	cmp	x22, x21
 7c8:	b.ne	7bc <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x438>  // b.any
 7cc:	ldr	x21, [sp, #248]
 7d0:	ldr	w22, [sp, #256]
 7d4:	add	x22, x21, x22, lsl #4
 7d8:	cmp	x21, x22
 7dc:	b.eq	810 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x48c>  // b.none
 7e0:	ldr	x0, [x21], #16
 7e4:	bl	0 <free>
 7e8:	cmp	x22, x21
 7ec:	b.ne	7e0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x45c>  // b.any
 7f0:	ldr	x1, [sp, #248]
 7f4:	ldr	w0, [sp, #256]
 7f8:	add	x0, x1, x0, lsl #4
 7fc:	cmp	x1, x0
 800:	b.eq	810 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x48c>  // b.none
 804:	sub	x0, x0, #0x10
 808:	cmp	x1, x0
 80c:	b.ne	804 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x480>  // b.any
 810:	ldr	x0, [sp, #248]
 814:	add	x1, sp, #0x108
 818:	cmp	x0, x1
 81c:	b.eq	824 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x4a0>  // b.none
 820:	bl	0 <free>
 824:	ldr	x0, [sp, #200]
 828:	add	x1, sp, #0xd8
 82c:	cmp	x0, x1
 830:	b.eq	838 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x4b4>  // b.none
 834:	bl	0 <free>
 838:	ldr	x0, [x20, #128]
 83c:	str	x0, [x19, #160]
 840:	ldp	x21, x22, [sp, #32]
 844:	b	984 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x600>
 848:	add	x1, x20, #0x28
 84c:	add	x0, sp, #0xc8
 850:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 854:	b	44c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0xc8>
 858:	add	x1, x20, #0x58
 85c:	add	x0, sp, #0xf8
 860:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 864:	b	464 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0xe0>
 868:	add	x1, x19, #0x48
 86c:	add	x0, sp, #0x48
 870:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 874:	b	514 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x190>
 878:	add	x1, x19, #0x78
 87c:	add	x0, sp, #0x78
 880:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 884:	b	52c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1a8>
 888:	ldr	x1, [x20]
 88c:	str	x1, [x19, #32]
 890:	ldr	w1, [x20, #8]
 894:	str	w1, [x19, #40]
 898:	ldr	w1, [x20, #12]
 89c:	str	w1, [x19, #44]
 8a0:	ldr	w1, [x20, #16]
 8a4:	str	w1, [x19, #48]
 8a8:	ldr	w1, [x20, #20]
 8ac:	str	w1, [x19, #52]
 8b0:	str	xzr, [x20]
 8b4:	str	wzr, [x20, #8]
 8b8:	str	wzr, [x20, #12]
 8bc:	str	wzr, [x20, #16]
 8c0:	ldr	x0, [x20, #24]
 8c4:	str	x0, [x19, #56]
 8c8:	ldr	x0, [x20, #32]
 8cc:	str	x0, [x19, #64]
 8d0:	add	x0, x19, #0x58
 8d4:	str	x0, [x19, #72]
 8d8:	str	wzr, [x19, #80]
 8dc:	mov	w0, #0x4                   	// #4
 8e0:	str	w0, [x19, #84]
 8e4:	ldr	w0, [x20, #48]
 8e8:	cbnz	w0, 95c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x5d8>
 8ec:	add	x0, x19, #0x88
 8f0:	str	x0, [x19, #120]
 8f4:	str	wzr, [x19, #128]
 8f8:	str	wzr, [x19, #132]
 8fc:	ldr	w0, [x20, #96]
 900:	cbnz	w0, 96c <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x5e8>
 904:	ldr	x2, [x20, #104]
 908:	str	x2, [x19, #136]
 90c:	ldr	x2, [x20, #112]
 910:	str	x2, [x19, #144]
 914:	str	xzr, [x20, #32]
 918:	str	xzr, [x20, #24]
 91c:	str	xzr, [x20, #104]
 920:	str	wzr, [x20, #48]
 924:	ldr	x1, [x20, #88]
 928:	ldr	w0, [x20, #96]
 92c:	add	x0, x1, x0, lsl #4
 930:	cmp	x1, x0
 934:	b.eq	944 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x5c0>  // b.none
 938:	sub	x0, x0, #0x10
 93c:	cmp	x1, x0
 940:	b.ne	938 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x5b4>  // b.any
 944:	str	wzr, [x20, #96]
 948:	ldr	x0, [x20, #128]
 94c:	str	x0, [x19, #160]
 950:	mov	w0, #0x1                   	// #1
 954:	strb	w0, [x19, #168]
 958:	b	984 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x600>
 95c:	add	x1, x20, #0x28
 960:	add	x0, x19, #0x48
 964:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 968:	b	8ec <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x568>
 96c:	add	x1, x20, #0x58
 970:	add	x0, x19, #0x78
 974:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 978:	b	904 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x580>
 97c:	ldrb	w0, [x19, #168]
 980:	cbnz	w0, 990 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x60c>
 984:	ldp	x19, x20, [sp, #16]
 988:	ldp	x29, x30, [sp], #288
 98c:	ret
 990:	stp	x21, x22, [sp, #32]
 994:	ldr	w0, [x19, #44]
 998:	cbz	w0, 9c0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x63c>
 99c:	ldr	w0, [x19, #40]
 9a0:	cbz	w0, 9c0 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x63c>
 9a4:	sub	w1, w0, #0x1
 9a8:	add	x1, x1, #0x1
 9ac:	lsl	x1, x1, #3
 9b0:	mov	x0, #0x0                   	// #0
 9b4:	add	x0, x0, #0x8
 9b8:	cmp	x0, x1
 9bc:	b.ne	9b4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x630>  // b.any
 9c0:	ldr	x0, [x19, #32]
 9c4:	bl	0 <free>
 9c8:	ldr	x20, [x19, #72]
 9cc:	ldr	w21, [x19, #80]
 9d0:	add	x21, x20, x21, lsl #3
 9d4:	cmp	x20, x21
 9d8:	b.eq	9ec <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x668>  // b.none
 9dc:	ldr	x0, [x20], #8
 9e0:	bl	0 <free>
 9e4:	cmp	x21, x20
 9e8:	b.ne	9dc <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x658>  // b.any
 9ec:	ldr	x20, [x19, #120]
 9f0:	ldr	w21, [x19, #128]
 9f4:	add	x21, x20, x21, lsl #4
 9f8:	cmp	x20, x21
 9fc:	b.eq	a30 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x6ac>  // b.none
 a00:	ldr	x0, [x20], #16
 a04:	bl	0 <free>
 a08:	cmp	x21, x20
 a0c:	b.ne	a00 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x67c>  // b.any
 a10:	ldr	x1, [x19, #120]
 a14:	ldr	w0, [x19, #128]
 a18:	add	x0, x1, x0, lsl #4
 a1c:	cmp	x1, x0
 a20:	b.eq	a30 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x6ac>  // b.none
 a24:	sub	x0, x0, #0x10
 a28:	cmp	x1, x0
 a2c:	b.ne	a24 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x6a0>  // b.any
 a30:	ldr	x0, [x19, #120]
 a34:	add	x1, x19, #0x88
 a38:	cmp	x0, x1
 a3c:	b.eq	a44 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x6c0>  // b.none
 a40:	bl	0 <free>
 a44:	ldr	x0, [x19, #72]
 a48:	add	x1, x19, #0x58
 a4c:	cmp	x0, x1
 a50:	b.eq	a58 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x6d4>  // b.none
 a54:	bl	0 <free>
 a58:	strb	wzr, [x19, #168]
 a5c:	ldp	x21, x22, [sp, #32]
 a60:	b	984 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x600>

0000000000000a64 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE>:
 a64:	stp	x29, x30, [sp, #-192]!
 a68:	mov	x29, sp
 a6c:	stp	x19, x20, [sp, #16]
 a70:	stp	x21, x22, [sp, #32]
 a74:	mov	x20, x0
 a78:	mov	x21, x1
 a7c:	mov	w22, w2
 a80:	mov	x19, x3
 a84:	strb	wzr, [sp, #48]
 a88:	strb	wzr, [sp, #184]
 a8c:	ldrb	w3, [x3, #136]
 a90:	cbnz	w3, ac4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x60>
 a94:	add	x4, sp, #0x30
 a98:	mov	w3, w22
 a9c:	mov	x2, x21
 aa0:	mov	w1, #0x1                   	// #1
 aa4:	mov	x0, x20
 aa8:	bl	384 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ENS0_6FormatERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE>
 aac:	ldrb	w0, [sp, #184]
 ab0:	cbnz	w0, bb8 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x154>
 ab4:	ldp	x19, x20, [sp, #16]
 ab8:	ldp	x21, x22, [sp, #32]
 abc:	ldp	x29, x30, [sp], #192
 ac0:	ret
 ac4:	ldr	x0, [x19]
 ac8:	str	x0, [sp, #48]
 acc:	ldr	w0, [x19, #8]
 ad0:	str	w0, [sp, #56]
 ad4:	ldr	w0, [x19, #12]
 ad8:	str	w0, [sp, #60]
 adc:	ldr	w0, [x19, #16]
 ae0:	str	w0, [sp, #64]
 ae4:	ldr	w0, [x19, #20]
 ae8:	str	w0, [sp, #68]
 aec:	str	xzr, [x19]
 af0:	str	wzr, [x19, #8]
 af4:	str	wzr, [x19, #12]
 af8:	str	wzr, [x19, #16]
 afc:	ldr	x0, [x19, #24]
 b00:	str	x0, [sp, #72]
 b04:	ldr	x0, [x19, #32]
 b08:	str	x0, [sp, #80]
 b0c:	add	x0, sp, #0x68
 b10:	str	x0, [sp, #88]
 b14:	str	wzr, [sp, #96]
 b18:	mov	w0, #0x4                   	// #4
 b1c:	str	w0, [sp, #100]
 b20:	ldr	w0, [x19, #48]
 b24:	cbnz	w0, b98 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x134>
 b28:	add	x0, sp, #0x98
 b2c:	str	x0, [sp, #136]
 b30:	str	wzr, [sp, #144]
 b34:	str	wzr, [sp, #148]
 b38:	ldr	w0, [x19, #96]
 b3c:	cbnz	w0, ba8 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x144>
 b40:	ldr	x1, [x19, #104]
 b44:	str	x1, [sp, #152]
 b48:	ldr	x1, [x19, #112]
 b4c:	str	x1, [sp, #160]
 b50:	str	xzr, [x19, #32]
 b54:	str	xzr, [x19, #24]
 b58:	str	xzr, [x19, #104]
 b5c:	str	wzr, [x19, #48]
 b60:	ldr	x0, [x19, #88]
 b64:	ldr	w3, [x19, #96]
 b68:	add	x3, x0, x3, lsl #4
 b6c:	cmp	x0, x3
 b70:	b.eq	b80 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x11c>  // b.none
 b74:	sub	x3, x3, #0x10
 b78:	cmp	x0, x3
 b7c:	b.ne	b74 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x110>  // b.any
 b80:	str	wzr, [x19, #96]
 b84:	ldr	x0, [x19, #128]
 b88:	str	x0, [sp, #176]
 b8c:	mov	w0, #0x1                   	// #1
 b90:	strb	w0, [sp, #184]
 b94:	b	a94 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x30>
 b98:	add	x1, x19, #0x28
 b9c:	add	x0, sp, #0x58
 ba0:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 ba4:	b	b28 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0xc4>
 ba8:	add	x1, x19, #0x58
 bac:	add	x0, sp, #0x88
 bb0:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 bb4:	b	b40 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0xdc>
 bb8:	ldr	w0, [sp, #60]
 bbc:	cbz	w0, be4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x180>
 bc0:	ldr	w1, [sp, #56]
 bc4:	cbz	w1, be4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x180>
 bc8:	sub	w1, w1, #0x1
 bcc:	add	x1, x1, #0x1
 bd0:	lsl	x1, x1, #3
 bd4:	mov	x0, #0x0                   	// #0
 bd8:	add	x0, x0, #0x8
 bdc:	cmp	x0, x1
 be0:	b.ne	bd8 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x174>  // b.any
 be4:	ldr	x0, [sp, #48]
 be8:	bl	0 <free>
 bec:	ldr	x19, [sp, #88]
 bf0:	ldr	w20, [sp, #96]
 bf4:	add	x20, x19, x20, lsl #3
 bf8:	cmp	x19, x20
 bfc:	b.eq	c10 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1ac>  // b.none
 c00:	ldr	x0, [x19], #8
 c04:	bl	0 <free>
 c08:	cmp	x20, x19
 c0c:	b.ne	c00 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x19c>  // b.any
 c10:	ldr	x19, [sp, #136]
 c14:	ldr	w20, [sp, #144]
 c18:	add	x20, x19, x20, lsl #4
 c1c:	cmp	x19, x20
 c20:	b.eq	c54 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1f0>  // b.none
 c24:	ldr	x0, [x19], #16
 c28:	bl	0 <free>
 c2c:	cmp	x20, x19
 c30:	b.ne	c24 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1c0>  // b.any
 c34:	ldr	x1, [sp, #136]
 c38:	ldr	w0, [sp, #144]
 c3c:	add	x0, x1, x0, lsl #4
 c40:	cmp	x1, x0
 c44:	b.eq	c54 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1f0>  // b.none
 c48:	sub	x0, x0, #0x10
 c4c:	cmp	x1, x0
 c50:	b.ne	c48 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x1e4>  // b.any
 c54:	ldr	x0, [sp, #136]
 c58:	add	x1, sp, #0x98
 c5c:	cmp	x0, x1
 c60:	b.eq	c68 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x204>  // b.none
 c64:	bl	0 <free>
 c68:	ldr	x0, [sp, #88]
 c6c:	add	x1, sp, #0x68
 c70:	cmp	x0, x1
 c74:	b.eq	ab4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x50>  // b.none
 c78:	bl	0 <free>
 c7c:	b	ab4 <_ZN4llvm7remarks20YAMLRemarkSerializerC1ERNS_11raw_ostreamENS0_14SerializerModeENS_8OptionalINS0_11StringTableEEE+0x50>

0000000000000c80 <_ZN4llvm7remarks20YAMLRemarkSerializer4emitERKNS0_6RemarkE>:
 c80:	stp	x29, x30, [sp, #-48]!
 c84:	mov	x29, sp
 c88:	stp	x19, x20, [sp, #16]
 c8c:	mov	x20, x0
 c90:	str	x1, [sp, #40]
 c94:	add	x19, x0, #0xb0
 c98:	mov	x0, x19
 c9c:	bl	0 <_ZN4llvm4yaml6Output14beginDocumentsEv>
 ca0:	mov	w1, #0x0                   	// #0
 ca4:	mov	x0, x19
 ca8:	bl	0 <_ZN4llvm4yaml6Output17preflightDocumentEj>
 cac:	and	w0, w0, #0xff
 cb0:	cbnz	w0, cc8 <_ZN4llvm7remarks20YAMLRemarkSerializer4emitERKNS0_6RemarkE+0x48>
 cb4:	mov	x0, x19
 cb8:	bl	0 <_ZN4llvm4yaml6Output12endDocumentsEv>
 cbc:	ldp	x19, x20, [sp, #16]
 cc0:	ldp	x29, x30, [sp], #48
 cc4:	ret
 cc8:	ldr	x0, [x20, #176]
 ccc:	ldr	x1, [x0, #104]
 cd0:	mov	x0, x19
 cd4:	blr	x1
 cd8:	add	x2, sp, #0x20
 cdc:	add	x1, sp, #0x28
 ce0:	mov	x0, x19
 ce4:	bl	0 <_ZN4llvm7remarks20YAMLRemarkSerializer14metaSerializerERNS_11raw_ostreamENS_8OptionalINS_9StringRefEEE>
 ce8:	ldr	x0, [x20, #176]
 cec:	ldr	x1, [x0, #112]
 cf0:	mov	x0, x19
 cf4:	blr	x1
 cf8:	mov	x0, x19
 cfc:	bl	0 <_ZN4llvm4yaml6Output18postflightDocumentEv>
 d00:	b	cb4 <_ZN4llvm7remarks20YAMLRemarkSerializer4emitERKNS0_6RemarkE+0x34>

0000000000000d04 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializer4emitERKNS0_6RemarkE>:
 d04:	stp	x29, x30, [sp, #-96]!
 d08:	mov	x29, sp
 d0c:	stp	x19, x20, [sp, #16]
 d10:	mov	x19, x0
 d14:	mov	x20, x1
 d18:	ldr	w0, [x0, #24]
 d1c:	cmp	w0, #0x1
 d20:	b.eq	d3c <_ZN4llvm7remarks26YAMLStrTabRemarkSerializer4emitERKNS0_6RemarkE+0x38>  // b.none
 d24:	mov	x1, x20
 d28:	mov	x0, x19
 d2c:	bl	c80 <_ZN4llvm7remarks20YAMLRemarkSerializer4emitERKNS0_6RemarkE>
 d30:	ldp	x19, x20, [sp, #16]
 d34:	ldp	x29, x30, [sp], #96
 d38:	ret
 d3c:	ldrb	w0, [x19, #304]
 d40:	cbnz	w0, d24 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializer4emitERKNS0_6RemarkE+0x20>
 d44:	ldr	x0, [x19]
 d48:	ldr	x3, [x0, #24]
 d4c:	strb	wzr, [sp, #72]
 d50:	strb	wzr, [sp, #88]
 d54:	ldp	x0, x1, [sp, #72]
 d58:	stp	x0, x1, [sp, #32]
 d5c:	ldr	x0, [sp, #88]
 d60:	str	x0, [sp, #48]
 d64:	add	x8, sp, #0x40
 d68:	add	x2, sp, #0x20
 d6c:	ldr	x1, [x19, #16]
 d70:	mov	x0, x19
 d74:	blr	x3
 d78:	ldr	x0, [sp, #64]
 d7c:	ldr	x1, [x0]
 d80:	ldr	x1, [x1, #16]
 d84:	blr	x1
 d88:	mov	w0, #0x1                   	// #1
 d8c:	strb	w0, [x19, #304]
 d90:	ldr	x0, [sp, #64]
 d94:	cbz	x0, d24 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializer4emitERKNS0_6RemarkE+0x20>
 d98:	ldr	x1, [x0]
 d9c:	ldr	x1, [x1, #8]
 da0:	blr	x1
 da4:	b	d24 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializer4emitERKNS0_6RemarkE+0x20>

Disassembly of section .text._ZN4llvm7remarks18YAMLMetaSerializerD2Ev:

0000000000000000 <_ZN4llvm7remarks18YAMLMetaSerializerD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7remarks24YAMLStrTabMetaSerializerD2Ev:

0000000000000000 <_ZN4llvm7remarks24YAMLStrTabMetaSerializerD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm7remarks18YAMLMetaSerializerD0Ev:

0000000000000000 <_ZN4llvm7remarks18YAMLMetaSerializerD0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x28                  	// #40
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZN4llvm7remarks24YAMLStrTabMetaSerializerD0Ev:

0000000000000000 <_ZN4llvm7remarks24YAMLStrTabMetaSerializerD0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x30                  	// #48
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZNK4llvm9StringRef10drop_frontEm:

0000000000000000 <_ZNK4llvm9StringRef10drop_frontEm>:
   0:	ldr	x2, [x0, #8]
   4:	cmp	x2, x1
   8:	b.cc	1c <_ZNK4llvm9StringRef10drop_frontEm+0x1c>  // b.lo, b.ul, b.last
   c:	ldr	x0, [x0]
  10:	add	x0, x0, x1
  14:	sub	x1, x2, x1
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	adrp	x3, 0 <_ZNK4llvm9StringRef10drop_frontEm>
  28:	add	x3, x3, #0x0
  2c:	mov	w2, #0x283                 	// #643
  30:	adrp	x1, 0 <_ZNK4llvm9StringRef10drop_frontEm>
  34:	add	x1, x1, #0x0
  38:	adrp	x0, 0 <_ZNK4llvm9StringRef10drop_frontEm>
  3c:	add	x0, x0, #0x0
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZZN4llvm4yaml9isNumericENS_9StringRefEENKUlS1_E_clES1_:

0000000000000000 <_ZZN4llvm4yaml9isNumericENS_9StringRefEENKUlS1_E_clES1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x1, x2, [sp, #16]
   c:	mov	x3, #0x0                   	// #0
  10:	adrp	x1, 0 <_ZZN4llvm4yaml9isNumericENS_9StringRefEENKUlS1_E_clES1_>
  14:	add	x1, x1, #0x0
  18:	mov	x2, #0xa                   	// #10
  1c:	add	x0, sp, #0x10
  20:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
  24:	ldr	x2, [sp, #24]
  28:	cmp	x0, x2
  2c:	csel	x1, x0, x2, ls  // ls = plast
  30:	cmp	x1, x2
  34:	b.hi	4c <_ZZN4llvm4yaml9isNumericENS_9StringRefEENKUlS1_E_clES1_+0x4c>  // b.pmore
  38:	ldr	x0, [sp, #16]
  3c:	add	x0, x0, x1
  40:	sub	x1, x2, x1
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	adrp	x3, 0 <_ZZN4llvm4yaml9isNumericENS_9StringRefEENKUlS1_E_clES1_>
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x283                 	// #643
  58:	adrp	x1, 0 <_ZZN4llvm4yaml9isNumericENS_9StringRefEENKUlS1_E_clES1_>
  5c:	add	x1, x1, #0x0
  60:	adrp	x0, 0 <_ZZN4llvm4yaml9isNumericENS_9StringRefEENKUlS1_E_clES1_>
  64:	add	x0, x0, #0x0
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4yaml9isNumericENS_9StringRefE:

0000000000000000 <_ZN4llvm4yaml9isNumericENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x0, x1, [sp, #48]
  10:	ldr	x19, [sp, #56]
  14:	cbz	x19, 90 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x90>
  18:	cmp	x19, #0x1
  1c:	b.eq	80 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x80>  // b.none
  20:	cmp	x19, #0x4
  24:	b.eq	a0 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xa0>  // b.none
  28:	stp	x21, x22, [sp, #32]
  2c:	ldr	x20, [sp, #48]
  30:	ldrb	w0, [x20]
  34:	sub	w0, w0, #0x2b
  38:	and	w0, w0, #0xfffffffd
  3c:	tst	w0, #0xff
  40:	b.eq	c0 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xc0>  // b.none
  44:	mov	x21, x20
  48:	mov	x22, x19
  4c:	cmp	x19, #0x1
  50:	b.ls	18c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x18c>  // b.plast
  54:	mov	x2, #0x2                   	// #2
  58:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
  5c:	add	x1, x1, #0x0
  60:	mov	x0, x20
  64:	bl	0 <memcmp>
  68:	cbnz	w0, 12c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x12c>
  6c:	mov	w0, #0x0                   	// #0
  70:	cmp	x19, #0x2
  74:	b.hi	f4 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xf4>  // b.pmore
  78:	ldp	x21, x22, [sp, #32]
  7c:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
  80:	ldr	x0, [sp, #48]
  84:	ldrb	w0, [x0]
  88:	cmp	w0, #0x2b
  8c:	b.ne	400 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x400>  // b.any
  90:	mov	w0, #0x0                   	// #0
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x29, x30, [sp], #112
  9c:	ret
  a0:	mov	x2, #0x4                   	// #4
  a4:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
  a8:	add	x1, x1, #0x0
  ac:	ldr	x0, [sp, #48]
  b0:	bl	0 <memcmp>
  b4:	cbnz	w0, 3a8 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x3a8>
  b8:	mov	w0, #0x1                   	// #1
  bc:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
  c0:	add	x21, x20, #0x1
  c4:	sub	x22, x19, #0x1
  c8:	cmp	x22, #0x4
  cc:	b.ne	4c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x4c>  // b.any
  d0:	mov	x2, #0x4                   	// #4
  d4:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
  d8:	add	x1, x1, #0x0
  dc:	mov	x0, x21
  e0:	bl	0 <memcmp>
  e4:	cbnz	w0, 374 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x374>
  e8:	mov	w0, #0x1                   	// #1
  ec:	ldp	x21, x22, [sp, #32]
  f0:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
  f4:	add	x20, x20, #0x2
  f8:	str	x20, [sp, #80]
  fc:	sub	x19, x19, #0x2
 100:	str	x19, [sp, #88]
 104:	mov	x3, #0x0                   	// #0
 108:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 10c:	add	x1, x1, #0x0
 110:	mov	x2, #0x8                   	// #8
 114:	add	x0, sp, #0x50
 118:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
 11c:	cmn	x0, #0x1
 120:	cset	w0, eq  // eq = none
 124:	ldp	x21, x22, [sp, #32]
 128:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 12c:	mov	x2, #0x2                   	// #2
 130:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 134:	add	x1, x1, #0x0
 138:	mov	x0, x20
 13c:	bl	0 <memcmp>
 140:	cbnz	w0, 18c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x18c>
 144:	cmp	x19, #0x2
 148:	b.hi	154 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x154>  // b.pmore
 14c:	ldp	x21, x22, [sp, #32]
 150:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 154:	add	x20, x20, #0x2
 158:	str	x20, [sp, #96]
 15c:	sub	x19, x19, #0x2
 160:	str	x19, [sp, #104]
 164:	mov	x3, #0x0                   	// #0
 168:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 16c:	add	x1, x1, #0x0
 170:	mov	x2, #0x16                  	// #22
 174:	add	x0, sp, #0x60
 178:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
 17c:	cmn	x0, #0x1
 180:	cset	w0, eq  // eq = none
 184:	ldp	x21, x22, [sp, #32]
 188:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 18c:	str	x21, [sp, #48]
 190:	str	x22, [sp, #56]
 194:	cbz	x22, 1cc <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x1cc>
 198:	ldrb	w0, [x21]
 19c:	cmp	w0, #0x2e
 1a0:	b.ne	418 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x418>  // b.any
 1a4:	cmp	x22, #0x1
 1a8:	b.eq	28c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x28c>  // b.none
 1ac:	ldrb	w1, [x21, #1]
 1b0:	adrp	x0, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 1b4:	add	x0, x0, #0x0
 1b8:	bl	0 <strchr>
 1bc:	cbz	x0, 28c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x28c>
 1c0:	ldrb	w0, [x21]
 1c4:	cmp	w0, #0x65
 1c8:	b.eq	424 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x424>  // b.none
 1cc:	ldp	x0, x1, [sp, #48]
 1d0:	stp	x0, x1, [sp, #64]
 1d4:	mov	x3, #0x0                   	// #0
 1d8:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 1dc:	add	x1, x1, #0x0
 1e0:	mov	x2, #0xa                   	// #10
 1e4:	add	x0, sp, #0x40
 1e8:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
 1ec:	mov	x1, x0
 1f0:	ldr	x0, [sp, #72]
 1f4:	cmp	x1, x0
 1f8:	csel	x1, x1, x0, ls  // ls = plast
 1fc:	cmp	x1, x0
 200:	b.hi	298 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x298>  // b.pmore
 204:	ldr	x3, [sp, #64]
 208:	add	x4, x3, x1
 20c:	sub	x2, x0, x1
 210:	str	x4, [sp, #48]
 214:	str	x2, [sp, #56]
 218:	mov	w0, #0x1                   	// #1
 21c:	cbz	x2, 2b8 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x2b8>
 220:	ldrb	w0, [x3, x1]
 224:	cmp	w0, #0x2e
 228:	b.eq	2c0 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x2c0>  // b.none
 22c:	and	w0, w0, #0xffffffdf
 230:	and	w0, w0, #0xff
 234:	cmp	w0, #0x45
 238:	b.ne	350 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x350>  // b.any
 23c:	mov	x1, #0x1                   	// #1
 240:	add	x0, sp, #0x30
 244:	bl	0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 248:	stp	x0, x1, [sp, #48]
 24c:	ldr	x0, [sp, #56]
 250:	cbz	x0, 368 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x368>
 254:	ldr	x0, [sp, #48]
 258:	ldrb	w0, [x0]
 25c:	sub	w0, w0, #0x2b
 260:	and	w0, w0, #0xfffffffd
 264:	tst	w0, #0xff
 268:	b.eq	320 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x320>  // b.none
 26c:	ldp	x1, x2, [sp, #48]
 270:	adrp	x0, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 274:	ldr	x0, [x0]
 278:	bl	0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 27c:	cmp	x1, #0x0
 280:	cset	w0, eq  // eq = none
 284:	ldp	x21, x22, [sp, #32]
 288:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 28c:	mov	w0, #0x0                   	// #0
 290:	ldp	x21, x22, [sp, #32]
 294:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 298:	adrp	x3, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 29c:	add	x3, x3, #0x0
 2a0:	mov	w2, #0x283                 	// #643
 2a4:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 2a8:	add	x1, x1, #0x0
 2ac:	adrp	x0, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 2b0:	add	x0, x0, #0x0
 2b4:	bl	0 <__assert_fail>
 2b8:	ldp	x21, x22, [sp, #32]
 2bc:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 2c0:	mov	x1, #0x1                   	// #1
 2c4:	add	x0, sp, #0x30
 2c8:	bl	0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 2cc:	mov	x2, x1
 2d0:	mov	x1, x0
 2d4:	str	x0, [sp, #48]
 2d8:	str	x2, [sp, #56]
 2dc:	adrp	x0, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 2e0:	ldr	x0, [x0]
 2e4:	bl	0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 2e8:	stp	x0, x1, [sp, #48]
 2ec:	ldr	x0, [sp, #56]
 2f0:	cbz	x0, 344 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x344>
 2f4:	ldr	x0, [sp, #48]
 2f8:	ldrb	w0, [x0]
 2fc:	and	w0, w0, #0xffffffdf
 300:	and	w0, w0, #0xff
 304:	cmp	w0, #0x45
 308:	b.ne	35c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x35c>  // b.any
 30c:	mov	x1, #0x1                   	// #1
 310:	add	x0, sp, #0x30
 314:	bl	0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 318:	stp	x0, x1, [sp, #48]
 31c:	b	24c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x24c>
 320:	mov	x1, #0x1                   	// #1
 324:	add	x0, sp, #0x30
 328:	bl	0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 32c:	stp	x0, x1, [sp, #48]
 330:	ldr	x0, [sp, #56]
 334:	cbnz	x0, 26c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x26c>
 338:	mov	w0, #0x0                   	// #0
 33c:	ldp	x21, x22, [sp, #32]
 340:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 344:	mov	w0, #0x1                   	// #1
 348:	ldp	x21, x22, [sp, #32]
 34c:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 350:	mov	w0, #0x0                   	// #0
 354:	ldp	x21, x22, [sp, #32]
 358:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 35c:	mov	w0, #0x0                   	// #0
 360:	ldp	x21, x22, [sp, #32]
 364:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 368:	mov	w0, #0x0                   	// #0
 36c:	ldp	x21, x22, [sp, #32]
 370:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>
 374:	mov	x2, #0x4                   	// #4
 378:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 37c:	add	x1, x1, #0x0
 380:	mov	x0, x21
 384:	bl	0 <memcmp>
 388:	cbz	w0, e8 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xe8>
 38c:	mov	x2, #0x4                   	// #4
 390:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 394:	add	x1, x1, #0x0
 398:	mov	x0, x21
 39c:	bl	0 <memcmp>
 3a0:	cbz	w0, e8 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xe8>
 3a4:	b	4c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x4c>
 3a8:	mov	x2, #0x4                   	// #4
 3ac:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 3b0:	add	x1, x1, #0x0
 3b4:	ldr	x0, [sp, #48]
 3b8:	bl	0 <memcmp>
 3bc:	cbz	w0, b8 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xb8>
 3c0:	mov	x2, #0x4                   	// #4
 3c4:	adrp	x1, 0 <_ZN4llvm4yaml9isNumericENS_9StringRefE>
 3c8:	add	x1, x1, #0x0
 3cc:	ldr	x0, [sp, #48]
 3d0:	bl	0 <memcmp>
 3d4:	cbz	w0, b8 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xb8>
 3d8:	stp	x21, x22, [sp, #32]
 3dc:	ldr	x20, [sp, #48]
 3e0:	ldrb	w0, [x20]
 3e4:	sub	w0, w0, #0x2b
 3e8:	and	w0, w0, #0xfffffffd
 3ec:	tst	w0, #0xff
 3f0:	b.eq	c0 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xc0>  // b.none
 3f4:	mov	x22, x19
 3f8:	mov	x21, x20
 3fc:	b	c8 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0xc8>
 400:	ldr	x0, [sp, #48]
 404:	ldrb	w0, [x0]
 408:	cmp	w0, #0x2d
 40c:	b.eq	90 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x90>  // b.none
 410:	stp	x21, x22, [sp, #32]
 414:	b	2c <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x2c>
 418:	ldrb	w0, [x21]
 41c:	cmp	w0, #0x45
 420:	b.ne	1c0 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x1c0>  // b.any
 424:	mov	w0, #0x0                   	// #0
 428:	ldp	x21, x22, [sp, #32]
 42c:	b	94 <_ZN4llvm4yaml9isNumericENS_9StringRefE+0x94>

Disassembly of section .text._ZN4llvm4yaml11needsQuotesENS_9StringRefE:

0000000000000000 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x0, x1, [sp, #48]
  10:	ldr	x20, [sp, #56]
  14:	mov	w19, #0x1                   	// #1
  18:	cbz	x20, 38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
  1c:	str	x21, [sp, #32]
  20:	ldr	x21, [sp, #48]
  24:	ldrb	w0, [x21]
  28:	bl	0 <isspace>
  2c:	mov	w19, #0x1                   	// #1
  30:	cbz	w0, 48 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x48>
  34:	ldr	x21, [sp, #32]
  38:	mov	w0, w19
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #64
  44:	ret
  48:	add	x0, x21, x20
  4c:	ldurb	w0, [x0, #-1]
  50:	bl	0 <isspace>
  54:	mov	w19, w0
  58:	cbz	w0, 68 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x68>
  5c:	mov	w19, #0x1                   	// #1
  60:	ldr	x21, [sp, #32]
  64:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
  68:	cmp	x20, #0x4
  6c:	b.eq	ec <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0xec>  // b.none
  70:	cmp	x20, #0x1
  74:	b.eq	110 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x110>  // b.none
  78:	cmp	x20, #0x4
  7c:	b.eq	128 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x128>  // b.none
  80:	cmp	x20, #0x5
  84:	b.ne	d0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0xd0>  // b.any
  88:	mov	x2, #0x5                   	// #5
  8c:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
  90:	add	x1, x1, #0x0
  94:	mov	x0, x21
  98:	bl	0 <memcmp>
  9c:	cbz	w0, 140 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x140>
  a0:	mov	x2, #0x5                   	// #5
  a4:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
  a8:	add	x1, x1, #0x0
  ac:	mov	x0, x21
  b0:	bl	0 <memcmp>
  b4:	cbz	w0, 140 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x140>
  b8:	mov	x2, #0x5                   	// #5
  bc:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
  c0:	add	x1, x1, #0x0
  c4:	mov	x0, x21
  c8:	bl	0 <memcmp>
  cc:	cbz	w0, 24c <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x24c>
  d0:	ldp	x0, x1, [sp, #48]
  d4:	bl	0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
  d8:	and	w0, w0, #0xff
  dc:	cbz	w0, 14c <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x14c>
  e0:	mov	w19, #0x1                   	// #1
  e4:	ldr	x21, [sp, #32]
  e8:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
  ec:	mov	x2, #0x4                   	// #4
  f0:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
  f4:	add	x1, x1, #0x0
  f8:	mov	x0, x21
  fc:	bl	0 <memcmp>
 100:	cbnz	w0, 28c <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x28c>
 104:	mov	w19, #0x1                   	// #1
 108:	ldr	x21, [sp, #32]
 10c:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 110:	ldrb	w0, [x21]
 114:	cmp	w0, #0x7e
 118:	b.ne	80 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x80>  // b.any
 11c:	mov	w19, #0x1                   	// #1
 120:	ldr	x21, [sp, #32]
 124:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 128:	mov	x2, #0x4                   	// #4
 12c:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
 130:	add	x1, x1, #0x0
 134:	mov	x0, x21
 138:	bl	0 <memcmp>
 13c:	cbnz	w0, 258 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x258>
 140:	mov	w19, #0x1                   	// #1
 144:	ldr	x21, [sp, #32]
 148:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 14c:	mov	x3, #0x0                   	// #0
 150:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
 154:	ldr	x1, [x1]
 158:	mov	x2, #0x14                  	// #20
 15c:	add	x0, sp, #0x30
 160:	bl	0 <_ZNK4llvm9StringRef13find_first_ofES0_m>
 164:	cbz	x0, 240 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x240>
 168:	ldr	x5, [sp, #48]
 16c:	ldr	x6, [sp, #56]
 170:	add	x6, x5, x6
 174:	cmp	x6, x5
 178:	b.eq	2c0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x2c0>  // b.none
 17c:	mov	w7, #0x1                   	// #1
 180:	mov	x4, #0x1                   	// #1
 184:	mov	x3, #0x200                 	// #512
 188:	movk	x3, #0x7001, lsl #32
 18c:	mov	x2, #0x2400                	// #9216
 190:	b	1e4 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1e4>
 194:	cmp	w1, #0x5d
 198:	csel	w19, w19, w7, hi  // hi = pmore
 19c:	cmp	w1, #0x5f
 1a0:	b.ls	1d8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1d8>  // b.plast
 1a4:	cmp	w1, #0x7f
 1a8:	b.ne	1b8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1b8>  // b.any
 1ac:	mov	w19, #0x2                   	// #2
 1b0:	ldr	x21, [sp, #32]
 1b4:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 1b8:	sub	w0, w1, #0x20
 1bc:	and	w0, w0, #0xff
 1c0:	cmp	w0, #0x5f
 1c4:	b.ls	1d4 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1d4>  // b.plast
 1c8:	mov	w19, #0x2                   	// #2
 1cc:	ldr	x21, [sp, #32]
 1d0:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 1d4:	mov	w19, #0x1                   	// #1
 1d8:	add	x5, x5, #0x1
 1dc:	cmp	x6, x5
 1e0:	b.eq	238 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x238>  // b.none
 1e4:	ldrb	w1, [x5]
 1e8:	and	w0, w1, #0xffffffdf
 1ec:	sub	w0, w0, #0x41
 1f0:	and	w0, w0, #0xff
 1f4:	cmp	w0, #0x19
 1f8:	b.ls	1d8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1d8>  // b.plast
 1fc:	sub	w0, w1, #0x30
 200:	and	w0, w0, #0xff
 204:	cmp	w0, #0x9
 208:	b.ls	1d8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1d8>  // b.plast
 20c:	cmp	w1, #0x2e
 210:	b.hi	194 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x194>  // b.pmore
 214:	cmp	w1, #0x8
 218:	b.ls	1b8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1b8>  // b.plast
 21c:	lsl	x0, x4, x1
 220:	tst	x0, x3
 224:	b.ne	1d8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1d8>  // b.any
 228:	tst	x0, x2
 22c:	b.eq	1b8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1b8>  // b.none
 230:	mov	w19, #0x1                   	// #1
 234:	b	1d8 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x1d8>
 238:	ldr	x21, [sp, #32]
 23c:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 240:	mov	w19, #0x1                   	// #1
 244:	ldr	x21, [sp, #32]
 248:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 24c:	mov	w19, #0x1                   	// #1
 250:	ldr	x21, [sp, #32]
 254:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>
 258:	mov	x2, #0x4                   	// #4
 25c:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
 260:	add	x1, x1, #0x0
 264:	mov	x0, x21
 268:	bl	0 <memcmp>
 26c:	cbz	w0, 140 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x140>
 270:	mov	x2, #0x4                   	// #4
 274:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
 278:	add	x1, x1, #0x0
 27c:	mov	x0, x21
 280:	bl	0 <memcmp>
 284:	cbz	w0, 140 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x140>
 288:	b	d0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0xd0>
 28c:	mov	x2, #0x4                   	// #4
 290:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
 294:	add	x1, x1, #0x0
 298:	mov	x0, x21
 29c:	bl	0 <memcmp>
 2a0:	cbz	w0, 104 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x104>
 2a4:	mov	x2, #0x4                   	// #4
 2a8:	adrp	x1, 0 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE>
 2ac:	add	x1, x1, #0x0
 2b0:	mov	x0, x21
 2b4:	bl	0 <memcmp>
 2b8:	cbz	w0, 104 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x104>
 2bc:	b	78 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x78>
 2c0:	ldr	x21, [sp, #32]
 2c4:	b	38 <_ZN4llvm4yaml11needsQuotesENS_9StringRefE+0x38>

Disassembly of section .text._ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE:

0000000000000000 <_ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #16]
  1c:	blr	x1
  20:	and	w0, w0, #0xff
  24:	cbnz	w0, 78 <_ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x78>
  28:	str	xzr, [sp, #56]
  2c:	str	xzr, [sp, #64]
  30:	ldr	x0, [x19]
  34:	ldr	x3, [x0, #216]
  38:	mov	w2, #0x0                   	// #0
  3c:	add	x1, sp, #0x38
  40:	mov	x0, x19
  44:	blr	x3
  48:	mov	x0, x19
  4c:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  50:	mov	x3, x20
  54:	mov	x2, x0
  58:	ldp	x0, x1, [sp, #56]
  5c:	bl	0 <_ZN4llvm4yaml12ScalarTraitsIjvE5inputENS_9StringRefEPvRj>
  60:	stp	x0, x1, [sp, #88]
  64:	ldr	x0, [sp, #96]
  68:	cbnz	x0, 130 <_ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x130>
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #160
  74:	ret
  78:	add	x1, sp, #0x38
  7c:	add	x0, sp, #0x48
  80:	str	x0, [sp, #56]
  84:	str	xzr, [sp, #64]
  88:	strb	wzr, [sp, #72]
  8c:	mov	w0, #0x1                   	// #1
  90:	str	w0, [sp, #120]
  94:	str	xzr, [sp, #112]
  98:	str	xzr, [sp, #104]
  9c:	str	xzr, [sp, #96]
  a0:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  a4:	ldr	x0, [x0]
  a8:	add	x0, x0, #0x10
  ac:	str	x0, [sp, #88]
  b0:	str	x1, [sp, #128]
  b4:	mov	x0, x19
  b8:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  bc:	add	x2, sp, #0x58
  c0:	mov	x1, x0
  c4:	mov	x0, x20
  c8:	bl	0 <_ZN4llvm4yaml12ScalarTraitsIjvE6outputERKjPvRNS_11raw_ostreamE>
  cc:	ldr	x1, [sp, #112]
  d0:	ldr	x0, [sp, #96]
  d4:	cmp	x1, x0
  d8:	b.eq	e4 <_ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0xe4>  // b.none
  dc:	add	x0, sp, #0x58
  e0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  e4:	ldr	x0, [sp, #128]
  e8:	ldr	x1, [x0]
  ec:	str	x1, [sp, #40]
  f0:	ldr	x0, [x0, #8]
  f4:	str	x0, [sp, #48]
  f8:	ldr	x0, [x19]
  fc:	ldr	x3, [x0, #216]
 100:	mov	w2, #0x0                   	// #0
 104:	add	x1, sp, #0x28
 108:	mov	x0, x19
 10c:	blr	x3
 110:	add	x0, sp, #0x58
 114:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 118:	ldr	x0, [sp, #56]
 11c:	add	x1, sp, #0x48
 120:	cmp	x0, x1
 124:	b.eq	6c <_ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x6c>  // b.none
 128:	bl	0 <_ZdlPv>
 12c:	b	6c <_ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x6c>
 130:	ldr	x0, [x19]
 134:	ldr	x2, [x0, #248]
 138:	str	xzr, [sp, #144]
 13c:	mov	w0, #0x5                   	// #5
 140:	strb	w0, [sp, #152]
 144:	mov	w0, #0x1                   	// #1
 148:	strb	w0, [sp, #153]
 14c:	add	x0, sp, #0x58
 150:	str	x0, [sp, #136]
 154:	add	x1, sp, #0x88
 158:	mov	x0, x19
 15c:	blr	x2
 160:	b	6c <_ZN4llvm4yaml7yamlizeIjEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x6c>

Disassembly of section .text._ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE:

0000000000000000 <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #16]
  1c:	blr	x1
  20:	and	w0, w0, #0xff
  24:	cbz	w0, e8 <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0xe8>
  28:	add	x1, sp, #0x48
  2c:	add	x0, sp, #0x58
  30:	str	x0, [sp, #72]
  34:	str	xzr, [sp, #80]
  38:	strb	wzr, [sp, #88]
  3c:	mov	w0, #0x1                   	// #1
  40:	str	w0, [sp, #136]
  44:	str	xzr, [sp, #128]
  48:	str	xzr, [sp, #120]
  4c:	str	xzr, [sp, #112]
  50:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  54:	ldr	x0, [x0]
  58:	add	x0, x0, #0x10
  5c:	str	x0, [sp, #104]
  60:	str	x1, [sp, #144]
  64:	mov	x0, x19
  68:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  6c:	add	x2, sp, #0x68
  70:	mov	x1, x0
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm4yaml12ScalarTraitsINS_9StringRefEvE6outputERKS2_PvRNS_11raw_ostreamE>
  7c:	ldr	x1, [sp, #128]
  80:	ldr	x0, [sp, #112]
  84:	cmp	x1, x0
  88:	b.eq	94 <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x94>  // b.none
  8c:	add	x0, sp, #0x68
  90:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  94:	ldr	x0, [sp, #144]
  98:	ldr	x1, [x0]
  9c:	str	x1, [sp, #56]
  a0:	ldr	x0, [x0, #8]
  a4:	str	x0, [sp, #64]
  a8:	ldr	x0, [x19]
  ac:	ldr	x20, [x0, #216]
  b0:	ldp	x0, x1, [sp, #56]
  b4:	bl	0 <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE>
  b8:	mov	w2, w0
  bc:	add	x1, sp, #0x38
  c0:	mov	x0, x19
  c4:	blr	x20
  c8:	add	x0, sp, #0x68
  cc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  d0:	ldr	x0, [sp, #72]
  d4:	add	x1, sp, #0x58
  d8:	cmp	x0, x1
  dc:	b.eq	13c <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x13c>  // b.none
  e0:	bl	0 <_ZdlPv>
  e4:	b	13c <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x13c>
  e8:	str	x21, [sp, #32]
  ec:	str	xzr, [sp, #72]
  f0:	str	xzr, [sp, #80]
  f4:	ldr	x0, [x19]
  f8:	ldr	x21, [x0, #216]
  fc:	ldp	x0, x1, [sp, #72]
 100:	bl	0 <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE>
 104:	mov	w2, w0
 108:	add	x1, sp, #0x48
 10c:	mov	x0, x19
 110:	blr	x21
 114:	mov	x0, x19
 118:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
 11c:	mov	x3, x20
 120:	mov	x2, x0
 124:	ldp	x0, x1, [sp, #72]
 128:	bl	0 <_ZN4llvm4yaml12ScalarTraitsINS_9StringRefEvE5inputES2_PvRS2_>
 12c:	stp	x0, x1, [sp, #104]
 130:	ldr	x0, [sp, #112]
 134:	cbnz	x0, 148 <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x148>
 138:	ldr	x21, [sp, #32]
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x29, x30, [sp], #176
 144:	ret
 148:	ldr	x0, [x19]
 14c:	ldr	x2, [x0, #248]
 150:	str	xzr, [sp, #160]
 154:	mov	w0, #0x5                   	// #5
 158:	strb	w0, [sp, #168]
 15c:	mov	w0, #0x1                   	// #1
 160:	strb	w0, [sp, #169]
 164:	add	x0, sp, #0x68
 168:	str	x0, [sp, #152]
 16c:	add	x1, sp, #0x98
 170:	mov	x0, x19
 174:	blr	x2
 178:	ldr	x21, [sp, #32]
 17c:	b	13c <_ZN4llvm4yaml7yamlizeINS_9StringRefEEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x13c>

Disassembly of section .text._ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE:

0000000000000000 <_ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #16]
  1c:	blr	x1
  20:	and	w0, w0, #0xff
  24:	cbnz	w0, 74 <_ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x74>
  28:	str	xzr, [sp, #56]
  2c:	str	xzr, [sp, #64]
  30:	ldr	x0, [x19]
  34:	ldr	x2, [x0, #224]
  38:	add	x1, sp, #0x38
  3c:	mov	x0, x19
  40:	blr	x2
  44:	mov	x0, x19
  48:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  4c:	mov	x3, x20
  50:	mov	x2, x0
  54:	ldp	x0, x1, [sp, #56]
  58:	bl	0 <_ZN4llvm4yaml12ScalarTraitsINS_9StringRefEvE5inputES2_PvRS2_>
  5c:	str	x0, [sp, #88]
  60:	str	x1, [sp, #96]
  64:	cbnz	x1, 128 <_ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x128>
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #160
  70:	ret
  74:	add	x1, sp, #0x38
  78:	add	x0, sp, #0x48
  7c:	str	x0, [sp, #56]
  80:	str	xzr, [sp, #64]
  84:	strb	wzr, [sp, #72]
  88:	mov	w0, #0x1                   	// #1
  8c:	str	w0, [sp, #120]
  90:	str	xzr, [sp, #112]
  94:	str	xzr, [sp, #104]
  98:	str	xzr, [sp, #96]
  9c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  a0:	ldr	x0, [x0]
  a4:	add	x0, x0, #0x10
  a8:	str	x0, [sp, #88]
  ac:	str	x1, [sp, #128]
  b0:	mov	x0, x19
  b4:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  b8:	add	x2, sp, #0x58
  bc:	mov	x1, x0
  c0:	mov	x0, x20
  c4:	bl	0 <_ZN4llvm4yaml12ScalarTraitsINS_9StringRefEvE6outputERKS2_PvRNS_11raw_ostreamE>
  c8:	ldr	x1, [sp, #112]
  cc:	ldr	x0, [sp, #96]
  d0:	cmp	x1, x0
  d4:	b.eq	e0 <_ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0xe0>  // b.none
  d8:	add	x0, sp, #0x58
  dc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  e0:	ldr	x0, [sp, #128]
  e4:	ldr	x1, [x0]
  e8:	str	x1, [sp, #40]
  ec:	ldr	x0, [x0, #8]
  f0:	str	x0, [sp, #48]
  f4:	ldr	x0, [x19]
  f8:	ldr	x2, [x0, #224]
  fc:	add	x1, sp, #0x28
 100:	mov	x0, x19
 104:	blr	x2
 108:	add	x0, sp, #0x58
 10c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 110:	ldr	x0, [sp, #56]
 114:	add	x1, sp, #0x48
 118:	cmp	x0, x1
 11c:	b.eq	68 <_ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x68>  // b.none
 120:	bl	0 <_ZdlPv>
 124:	b	68 <_ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x68>
 128:	ldr	x0, [x19]
 12c:	ldr	x2, [x0, #248]
 130:	str	xzr, [sp, #144]
 134:	mov	w0, #0x5                   	// #5
 138:	strb	w0, [sp, #152]
 13c:	mov	w0, #0x1                   	// #1
 140:	strb	w0, [sp, #153]
 144:	add	x0, sp, #0x58
 148:	str	x0, [sp, #136]
 14c:	add	x1, sp, #0x88
 150:	mov	x0, x19
 154:	blr	x2
 158:	b	68 <_ZN4llvm4yaml7yamlizeINS0_14StringBlockValEEENSt9enable_ifIXsrNS0_21has_BlockScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS5_bRNS0_12EmptyContextE+0x68>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	str	x1, [sp, #56]
  18:	mov	x20, x1
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	f4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf4>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	add	x2, x2, #0x2
  30:	orr	x2, x2, x2, lsr #1
  34:	orr	x2, x2, x2, lsr #2
  38:	orr	x2, x2, x2, lsr #4
  3c:	orr	x2, x2, x2, lsr #8
  40:	orr	x0, x2, x2, lsr #16
  44:	orr	x2, x0, x2, lsr #32
  48:	add	x2, x2, #0x1
  4c:	str	x2, [sp, #64]
  50:	cmp	x20, x2
  54:	add	x0, sp, #0x40
  58:	add	x1, sp, #0x38
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #72]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	add	x1, sp, #0x48
  74:	csel	x0, x1, x0, hi  // hi = pmore
  78:	ldr	x21, [x0]
  7c:	lsl	x22, x21, #4
  80:	mov	x0, x22
  84:	bl	0 <malloc>
  88:	mov	x20, x0
  8c:	cbz	x0, 108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x108>
  90:	ldr	x6, [x19]
  94:	ldr	w1, [x19, #8]
  98:	add	x1, x6, x1, lsl #4
  9c:	cmp	x1, x6
  a0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.none
  a4:	mov	x2, x6
  a8:	mov	x3, x20
  ac:	ldp	x4, x5, [x2], #16
  b0:	stp	x4, x5, [x3], #16
  b4:	cmp	x1, x2
  b8:	b.ne	ac <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xac>  // b.any
  bc:	sub	x1, x1, #0x10
  c0:	cmp	x1, x6
  c4:	b.ne	bc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xbc>  // b.any
  c8:	mov	x1, x19
  cc:	ldr	x0, [x1], #16
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xdc>  // b.none
  d8:	bl	0 <free>
  dc:	str	x20, [x19]
  e0:	str	w21, [x19, #12]
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret
  f4:	mov	w1, #0x1                   	// #1
  f8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x28>
 108:	cbnz	x22, 11c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x11c>
 10c:	mov	x0, #0x1                   	// #1
 110:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 114:	mov	x20, x0
 118:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>
 11c:	mov	w1, #0x1                   	// #1
 120:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 12c:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>

Disassembly of section .text._ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE:

0000000000000000 <_ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #16]
  1c:	blr	x1
  20:	and	w0, w0, #0xff
  24:	cbnz	w0, 78 <_ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x78>
  28:	str	xzr, [sp, #56]
  2c:	str	xzr, [sp, #64]
  30:	ldr	x0, [x19]
  34:	ldr	x3, [x0, #216]
  38:	mov	w2, #0x0                   	// #0
  3c:	add	x1, sp, #0x38
  40:	mov	x0, x19
  44:	blr	x3
  48:	mov	x0, x19
  4c:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  50:	mov	x3, x20
  54:	mov	x2, x0
  58:	ldp	x0, x1, [sp, #56]
  5c:	bl	0 <_ZN4llvm4yaml12ScalarTraitsImvE5inputENS_9StringRefEPvRm>
  60:	stp	x0, x1, [sp, #88]
  64:	ldr	x0, [sp, #96]
  68:	cbnz	x0, 130 <_ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x130>
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #160
  74:	ret
  78:	add	x1, sp, #0x38
  7c:	add	x0, sp, #0x48
  80:	str	x0, [sp, #56]
  84:	str	xzr, [sp, #64]
  88:	strb	wzr, [sp, #72]
  8c:	mov	w0, #0x1                   	// #1
  90:	str	w0, [sp, #120]
  94:	str	xzr, [sp, #112]
  98:	str	xzr, [sp, #104]
  9c:	str	xzr, [sp, #96]
  a0:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  a4:	ldr	x0, [x0]
  a8:	add	x0, x0, #0x10
  ac:	str	x0, [sp, #88]
  b0:	str	x1, [sp, #128]
  b4:	mov	x0, x19
  b8:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  bc:	add	x2, sp, #0x58
  c0:	mov	x1, x0
  c4:	mov	x0, x20
  c8:	bl	0 <_ZN4llvm4yaml12ScalarTraitsImvE6outputERKmPvRNS_11raw_ostreamE>
  cc:	ldr	x1, [sp, #112]
  d0:	ldr	x0, [sp, #96]
  d4:	cmp	x1, x0
  d8:	b.eq	e4 <_ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0xe4>  // b.none
  dc:	add	x0, sp, #0x58
  e0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  e4:	ldr	x0, [sp, #128]
  e8:	ldr	x1, [x0]
  ec:	str	x1, [sp, #40]
  f0:	ldr	x0, [x0, #8]
  f4:	str	x0, [sp, #48]
  f8:	ldr	x0, [x19]
  fc:	ldr	x3, [x0, #216]
 100:	mov	w2, #0x0                   	// #0
 104:	add	x1, sp, #0x28
 108:	mov	x0, x19
 10c:	blr	x3
 110:	add	x0, sp, #0x58
 114:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 118:	ldr	x0, [sp, #56]
 11c:	add	x1, sp, #0x48
 120:	cmp	x0, x1
 124:	b.eq	6c <_ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x6c>  // b.none
 128:	bl	0 <_ZdlPv>
 12c:	b	6c <_ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x6c>
 130:	ldr	x0, [x19]
 134:	ldr	x2, [x0, #248]
 138:	str	xzr, [sp, #144]
 13c:	mov	w0, #0x5                   	// #5
 140:	strb	w0, [sp, #152]
 144:	mov	w0, #0x1                   	// #1
 148:	strb	w0, [sp, #153]
 14c:	add	x0, sp, #0x58
 150:	str	x0, [sp, #136]
 154:	add	x1, sp, #0x88
 158:	mov	x0, x19
 15c:	blr	x2
 160:	b	6c <_ZN4llvm4yaml7yamlizeImEENSt9enable_ifIXsrNS0_16has_ScalarTraitsIT_EE5valueEvE4typeERNS0_2IOERS4_bRNS0_12EmptyContextE+0x6c>

Disassembly of section .text._ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE:

0000000000000000 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #16]
  1c:	blr	x1
  20:	and	w0, w0, #0xff
  24:	cbz	w0, b4 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0xb4>
  28:	ldp	x0, x1, [x20]
  2c:	stp	x0, x1, [sp, #72]
  30:	ldr	w0, [x20, #16]
  34:	str	w0, [sp, #52]
  38:	ldr	w0, [x20, #20]
  3c:	str	w0, [sp, #56]
  40:	mov	x0, x19
  44:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  48:	cbz	x0, d4 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0xd4>
  4c:	ldr	w1, [x0, #8]
  50:	cmp	w1, #0x2
  54:	b.eq	198 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x198>  // b.none
  58:	ldr	x0, [x19]
  5c:	ldr	x6, [x0, #120]
  60:	add	x5, sp, #0x40
  64:	add	x4, sp, #0x3c
  68:	mov	w3, #0x0                   	// #0
  6c:	mov	w2, #0x1                   	// #1
  70:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  74:	add	x1, x1, #0x0
  78:	mov	x0, x19
  7c:	blr	x6
  80:	and	w0, w0, #0xff
  84:	cbz	w0, 1e8 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1e8>
  88:	add	x3, sp, #0x30
  8c:	mov	w2, #0x1                   	// #1
  90:	add	x1, sp, #0x48
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  9c:	ldr	x0, [x19]
  a0:	ldr	x2, [x0, #128]
  a4:	ldr	x1, [sp, #64]
  a8:	mov	x0, x19
  ac:	blr	x2
  b0:	b	1e8 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1e8>
  b4:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x4e                  	// #78
  c0:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x69                  	// #105
  e0:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  e4:	add	x1, x1, #0x0
  e8:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  ec:	add	x0, x0, #0x0
  f0:	bl	0 <__assert_fail>
  f4:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x56                  	// #86
 100:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 104:	add	x1, x1, #0x0
 108:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <__assert_fail>
 114:	add	x3, sp, #0x28
 118:	mov	w2, #0x1                   	// #1
 11c:	add	x1, sp, #0x3c
 120:	mov	x0, x19
 124:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 128:	ldr	x0, [x19]
 12c:	ldr	x2, [x0, #128]
 130:	ldr	x1, [sp, #64]
 134:	mov	x0, x19
 138:	blr	x2
 13c:	b	1e8 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1e8>
 140:	add	x3, sp, #0x30
 144:	mov	w2, #0x1                   	// #1
 148:	add	x1, sp, #0x34
 14c:	mov	x0, x19
 150:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 154:	ldr	x0, [x19]
 158:	ldr	x2, [x0, #128]
 15c:	ldr	x1, [sp, #64]
 160:	mov	x0, x19
 164:	blr	x2
 168:	b	218 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x218>
 16c:	add	x3, sp, #0x30
 170:	mov	w2, #0x1                   	// #1
 174:	add	x1, sp, #0x38
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 180:	ldr	x0, [x19]
 184:	ldr	x2, [x0, #128]
 188:	ldr	x1, [sp, #64]
 18c:	mov	x0, x19
 190:	blr	x2
 194:	b	248 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x248>
 198:	ldrb	w1, [x0, #168]
 19c:	cbz	w1, f4 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0xf4>
 1a0:	add	x8, sp, #0x58
 1a4:	ldp	x1, x2, [sp, #72]
 1a8:	add	x0, x0, #0x20
 1ac:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 1b0:	ldr	w0, [sp, #88]
 1b4:	str	w0, [sp, #60]
 1b8:	ldr	x0, [x19]
 1bc:	ldr	x6, [x0, #120]
 1c0:	add	x5, sp, #0x40
 1c4:	add	x4, sp, #0x30
 1c8:	mov	w3, #0x0                   	// #0
 1cc:	mov	w2, #0x1                   	// #1
 1d0:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 1d4:	add	x1, x1, #0x0
 1d8:	mov	x0, x19
 1dc:	blr	x6
 1e0:	and	w0, w0, #0xff
 1e4:	cbnz	w0, 114 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x114>
 1e8:	ldr	x0, [x19]
 1ec:	ldr	x6, [x0, #120]
 1f0:	add	x5, sp, #0x40
 1f4:	add	x4, sp, #0x3c
 1f8:	mov	w3, #0x0                   	// #0
 1fc:	mov	w2, #0x1                   	// #1
 200:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 204:	add	x1, x1, #0x0
 208:	mov	x0, x19
 20c:	blr	x6
 210:	and	w0, w0, #0xff
 214:	cbnz	w0, 140 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x140>
 218:	ldr	x0, [x19]
 21c:	ldr	x6, [x0, #120]
 220:	add	x5, sp, #0x40
 224:	add	x4, sp, #0x3c
 228:	mov	w3, #0x0                   	// #0
 22c:	mov	w2, #0x1                   	// #1
 230:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 234:	add	x1, x1, #0x0
 238:	mov	x0, x19
 23c:	blr	x6
 240:	and	w0, w0, #0xff
 244:	cbnz	w0, 16c <_ZN4llvm4yaml6detail9doMappingINS_7remarks14RemarkLocationEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x16c>
 248:	ldp	x19, x20, [sp, #16]
 24c:	ldp	x29, x30, [sp], #112
 250:	ret

Disassembly of section .text._ZN4llvm4yaml7yamlizeINS_7remarks14RemarkLocationENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_24unvalidatedMappingTraitsIT_T0_EE5valueEvE4typeERNS0_2IOERS7_bRS8_:

0000000000000000 <_ZN4llvm4yaml7yamlizeINS_7remarks14RemarkLocationENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_24unvalidatedMappingTraitsIT_T0_EE5valueEvE4typeERNS0_2IOERS7_bRS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	mov	x21, x3
  1c:	ldr	x1, [x0]
  20:	ldr	x1, [x1, #144]
  24:	blr	x1
  28:	mov	x2, x21
  2c:	mov	x1, x20
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm4yaml7yamlizeINS_7remarks14RemarkLocationENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_24unvalidatedMappingTraitsIT_T0_EE5valueEvE4typeERNS0_2IOERS7_bRS8_>
  38:	ldr	x0, [x19]
  3c:	ldr	x1, [x0, #152]
  40:	mov	x0, x19
  44:	blr	x1
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldr	x21, [sp, #32]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIPvEaSEOS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x0
  10:	cmp	x0, x1
  14:	b.eq	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>  // b.none
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x1
  20:	mov	x20, x1
  24:	ldr	x1, [x20], #16
  28:	cmp	x20, x1
  2c:	b.eq	7c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x7c>  // b.none
  30:	mov	x1, x0
  34:	ldr	x0, [x1], #16
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19]
  48:	str	x0, [x21]
  4c:	ldr	w0, [x19, #8]
  50:	str	w0, [x21, #8]
  54:	ldr	w0, [x19, #12]
  58:	str	w0, [x21, #12]
  5c:	str	x20, [x19]
  60:	str	wzr, [x19, #12]
  64:	str	wzr, [x19, #8]
  68:	ldp	x19, x20, [sp, #16]
  6c:	mov	x0, x21
  70:	ldp	x21, x22, [sp, #32]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	str	x23, [sp, #48]
  80:	ldr	w22, [x19, #8]
  84:	mov	w23, w22
  88:	ldr	w20, [x0, #8]
  8c:	cmp	x20, w22, uxtw
  90:	b.cc	e4 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xe4>  // b.lo, b.ul, b.last
  94:	cbz	x23, b0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xb0>
  98:	lsl	x2, x23, #3
  9c:	ldr	x0, [x0]
  a0:	bl	0 <memmove>
  a4:	ldr	w0, [x21, #12]
  a8:	cmp	x23, x0
  ac:	b.hi	c4 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0xc4>  // b.pmore
  b0:	str	w22, [x21, #8]
  b4:	str	wzr, [x19, #8]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x23, [sp, #48]
  c0:	b	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>
  c4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x43                  	// #67
  d0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  d4:	add	x1, x1, #0x0
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <__assert_fail>
  e4:	ldr	w0, [x0, #12]
  e8:	cmp	x23, x0
  ec:	b.hi	150 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x150>  // b.pmore
  f0:	cbz	x20, 100 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x100>
  f4:	lsl	x2, x20, #3
  f8:	ldr	x0, [x21]
  fc:	bl	0 <memmove>
 100:	ldr	x0, [x19]
 104:	lsl	x20, x20, #3
 108:	add	x1, x0, x20
 10c:	ldr	w2, [x19, #8]
 110:	lsl	x2, x2, #3
 114:	add	x0, x0, x2
 118:	cmp	x1, x0
 11c:	b.eq	130 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x130>  // b.none
 120:	ldr	x0, [x21]
 124:	sub	x2, x2, x20
 128:	add	x0, x0, x20
 12c:	bl	0 <memcpy>
 130:	ldr	w0, [x21, #12]
 134:	cmp	x23, x0
 138:	b.hi	170 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x170>  // b.pmore
 13c:	str	w22, [x21, #8]
 140:	str	wzr, [x19, #8]
 144:	ldp	x19, x20, [sp, #16]
 148:	ldr	x23, [sp, #48]
 14c:	b	6c <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x6c>
 150:	str	wzr, [x21, #8]
 154:	mov	x3, #0x8                   	// #8
 158:	mov	x2, x23
 15c:	add	x1, x21, #0x10
 160:	mov	x0, x21
 164:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 168:	mov	x20, #0x0                   	// #0
 16c:	b	100 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_+0x100>
 170:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x43                  	// #67
 17c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 180:	add	x1, x1, #0x0
 184:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPvEaSEOS2_>
 188:	add	x0, x0, #0x0
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cmp	x0, x1
  14:	b.eq	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x20, x1
  20:	mov	x21, x1
  24:	ldr	x1, [x21], #16
  28:	cmp	x21, x1
  2c:	b.eq	9c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x9c>  // b.none
  30:	ldr	x0, [x0]
  34:	ldr	w2, [x19, #8]
  38:	add	x2, x0, x2, lsl #4
  3c:	cmp	x0, x2
  40:	b.eq	50 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x50>  // b.none
  44:	sub	x2, x2, #0x10
  48:	cmp	x0, x2
  4c:	b.ne	44 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x44>  // b.any
  50:	mov	x1, x19
  54:	ldr	x0, [x1], #16
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20]
  68:	str	x0, [x19]
  6c:	ldr	w0, [x20, #8]
  70:	str	w0, [x19, #8]
  74:	ldr	w0, [x20, #12]
  78:	str	w0, [x19, #12]
  7c:	str	x21, [x20]
  80:	str	wzr, [x20, #12]
  84:	str	wzr, [x20, #8]
  88:	ldp	x21, x22, [sp, #32]
  8c:	mov	x0, x19
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	ldr	w21, [x20, #8]
  a0:	mov	w22, w21
  a4:	ldr	w0, [x0, #8]
  a8:	cmp	x0, w21, uxtw
  ac:	b.cc	120 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x120>  // b.lo, b.ul, b.last
  b0:	ldr	x2, [x19]
  b4:	cbz	x22, 21c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x21c>
  b8:	lsl	x5, x22, #4
  bc:	add	x4, x1, x5
  c0:	mov	x0, x2
  c4:	ldr	x3, [x1]
  c8:	str	x3, [x0]
  cc:	ldr	x3, [x1, #8]
  d0:	str	x3, [x0, #8]
  d4:	add	x1, x1, #0x10
  d8:	add	x0, x0, #0x10
  dc:	cmp	x1, x4
  e0:	b.ne	c4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0xc4>  // b.any
  e4:	add	x2, x2, x5
  e8:	ldr	w0, [x19, #8]
  ec:	ldr	x1, [x19]
  f0:	add	x0, x1, x0, lsl #4
  f4:	cmp	x0, x2
  f8:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
  fc:	b	234 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x234>
 100:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x43                  	// #67
 10c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 110:	add	x1, x1, #0x0
 114:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <__assert_fail>
 120:	ldr	w2, [x19, #12]
 124:	cmp	x22, x2
 128:	b.ls	1cc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1cc>  // b.plast
 12c:	ldr	x1, [x19]
 130:	add	x0, x1, x0, lsl #4
 134:	cmp	x0, x1
 138:	b.eq	148 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x148>  // b.none
 13c:	sub	x0, x0, #0x10
 140:	cmp	x0, x1
 144:	b.ne	13c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x13c>  // b.any
 148:	str	wzr, [x19, #8]
 14c:	mov	x1, x22
 150:	mov	x0, x19
 154:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 158:	mov	x0, #0x0                   	// #0
 15c:	ldr	x2, [x20]
 160:	lsl	x0, x0, #4
 164:	add	x1, x2, x0
 168:	ldr	w4, [x20, #8]
 16c:	add	x4, x2, x4, lsl #4
 170:	ldr	x2, [x19]
 174:	add	x0, x2, x0
 178:	cmp	x1, x4
 17c:	b.eq	190 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x190>  // b.none
 180:	ldp	x2, x3, [x1], #16
 184:	stp	x2, x3, [x0], #16
 188:	cmp	x4, x1
 18c:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 190:	ldr	w0, [x19, #12]
 194:	cmp	x22, x0
 198:	b.hi	1fc <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1fc>  // b.pmore
 19c:	str	w21, [x19, #8]
 1a0:	ldr	x1, [x20]
 1a4:	ldr	w0, [x20, #8]
 1a8:	add	x0, x1, x0, lsl #4
 1ac:	cmp	x1, x0
 1b0:	b.eq	1c0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1c0>  // b.none
 1b4:	sub	x0, x0, #0x10
 1b8:	cmp	x1, x0
 1bc:	b.ne	1b4 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1b4>  // b.any
 1c0:	str	wzr, [x20, #8]
 1c4:	ldp	x21, x22, [sp, #32]
 1c8:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 1cc:	cbz	x0, 270 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x270>
 1d0:	ldr	x2, [x19]
 1d4:	add	x4, x1, x0, lsl #4
 1d8:	ldr	x3, [x1]
 1dc:	str	x3, [x2]
 1e0:	ldr	x3, [x1, #8]
 1e4:	str	x3, [x2, #8]
 1e8:	add	x1, x1, #0x10
 1ec:	add	x2, x2, #0x10
 1f0:	cmp	x1, x4
 1f4:	b.ne	1d8 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x1d8>  // b.any
 1f8:	b	15c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x15c>
 1fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x43                  	// #67
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 20c:	add	x1, x1, #0x0
 210:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_>
 214:	add	x0, x0, #0x0
 218:	bl	0 <__assert_fail>
 21c:	add	x0, x2, x0, lsl #4
 220:	cmp	x2, x0
 224:	b.eq	240 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x240>  // b.none
 228:	sub	x0, x0, #0x10
 22c:	cmp	x0, x2
 230:	b.ne	228 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x228>  // b.any
 234:	ldr	w0, [x19, #12]
 238:	cmp	x22, x0
 23c:	b.hi	100 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x100>  // b.pmore
 240:	str	w21, [x19, #8]
 244:	ldr	x1, [x20]
 248:	ldr	w0, [x20, #8]
 24c:	add	x0, x1, x0, lsl #4
 250:	cmp	x1, x0
 254:	b.eq	264 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x264>  // b.none
 258:	sub	x0, x0, #0x10
 25c:	cmp	x1, x0
 260:	b.ne	258 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x258>  // b.any
 264:	str	wzr, [x20, #8]
 268:	ldp	x21, x22, [sp, #32]
 26c:	b	8c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x8c>
 270:	ldr	x1, [x20]
 274:	ldr	w4, [x20, #8]
 278:	add	x4, x1, x4, lsl #4
 27c:	ldr	x0, [x19]
 280:	cmp	x1, x4
 284:	b.ne	180 <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x180>  // b.any
 288:	b	19c <_ZN4llvm15SmallVectorImplISt4pairIPvmEEaSEOS4_+0x19c>

Disassembly of section .text._ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE:

0000000000000000 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	ldr	x1, [x0]
  1c:	ldr	x1, [x1, #16]
  20:	blr	x1
  24:	and	w0, w0, #0xff
  28:	cbz	w0, d8 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0xd8>
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
  34:	cbz	x0, f8 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0xf8>
  38:	ldr	w1, [x0, #8]
  3c:	cmp	w1, #0x2
  40:	b.eq	208 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x208>  // b.none
  44:	ldr	x5, [x20, #16]
  48:	ldr	x4, [x20, #24]
  4c:	mov	x0, x5
  50:	add	x3, x4, x5
  54:	mov	x1, #0x0                   	// #0
  58:	cbz	x4, 164 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x164>
  5c:	ldrb	w2, [x0], #1
  60:	cmp	w2, #0xa
  64:	cinc	x1, x1, eq  // eq = none
  68:	cmp	x0, x3
  6c:	b.ne	5c <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x5c>  // b.any
  70:	cmp	x1, #0x1
  74:	b.ls	164 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x164>  // b.plast
  78:	str	x5, [sp, #72]
  7c:	str	x4, [sp, #80]
  80:	ldr	x0, [x19]
  84:	ldr	x6, [x0, #120]
  88:	add	x5, sp, #0x40
  8c:	add	x4, sp, #0x38
  90:	mov	w3, #0x0                   	// #0
  94:	mov	w2, #0x1                   	// #1
  98:	ldr	x1, [x20]
  9c:	mov	x0, x19
  a0:	blr	x6
  a4:	and	w0, w0, #0xff
  a8:	cbz	w0, 254 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x254>
  ac:	add	x3, sp, #0x30
  b0:	mov	w2, #0x1                   	// #1
  b4:	add	x1, sp, #0x48
  b8:	mov	x0, x19
  bc:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  c0:	ldr	x0, [x19]
  c4:	ldr	x2, [x0, #128]
  c8:	ldr	x1, [sp, #64]
  cc:	mov	x0, x19
  d0:	blr	x2
  d4:	b	254 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x254>
  d8:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x89                  	// #137
  e4:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  e8:	add	x1, x1, #0x0
  ec:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x69                  	// #105
 104:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 108:	add	x1, x1, #0x0
 10c:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 110:	add	x0, x0, #0x0
 114:	bl	0 <__assert_fail>
 118:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x8d                  	// #141
 124:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 128:	add	x1, x1, #0x0
 12c:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 130:	add	x0, x0, #0x0
 134:	bl	0 <__assert_fail>
 138:	add	x3, sp, #0x30
 13c:	mov	w2, #0x1                   	// #1
 140:	add	x1, sp, #0x40
 144:	mov	x0, x19
 148:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 14c:	ldr	x0, [x19]
 150:	ldr	x2, [x0, #128]
 154:	ldr	x1, [sp, #72]
 158:	mov	x0, x19
 15c:	blr	x2
 160:	b	254 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x254>
 164:	ldr	x0, [x19]
 168:	ldr	x6, [x0, #120]
 16c:	add	x5, sp, #0x48
 170:	add	x4, sp, #0x40
 174:	mov	w3, #0x0                   	// #0
 178:	mov	w2, #0x1                   	// #1
 17c:	ldr	x1, [x20]
 180:	mov	x0, x19
 184:	blr	x6
 188:	and	w0, w0, #0xff
 18c:	cbz	w0, 254 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x254>
 190:	add	x3, sp, #0x38
 194:	mov	w2, #0x1                   	// #1
 198:	add	x1, x20, #0x10
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 1a4:	ldr	x0, [x19]
 1a8:	ldr	x2, [x0, #128]
 1ac:	ldr	x1, [sp, #72]
 1b0:	mov	x0, x19
 1b4:	blr	x2
 1b8:	b	254 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x254>
 1bc:	ldrb	w0, [x20, #56]
 1c0:	cbnz	w0, 2b4 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x2b4>
 1c4:	ldrb	w0, [sp, #64]
 1c8:	cbnz	w0, 1fc <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1fc>
 1cc:	ldp	x19, x20, [sp, #16]
 1d0:	ldr	x21, [sp, #32]
 1d4:	ldp	x29, x30, [sp], #112
 1d8:	ret
 1dc:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0xad                  	// #173
 1e8:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 1ec:	add	x1, x1, #0x0
 1f0:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 1f4:	add	x0, x0, #0x0
 1f8:	bl	0 <__assert_fail>
 1fc:	strb	wzr, [x20, #32]
 200:	strb	wzr, [x20, #56]
 204:	b	1cc <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1cc>
 208:	ldrb	w1, [x0, #168]
 20c:	cbz	w1, 118 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x118>
 210:	add	x8, sp, #0x58
 214:	ldp	x1, x2, [x20, #16]
 218:	add	x0, x0, #0x20
 21c:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 220:	ldr	w0, [sp, #88]
 224:	str	w0, [sp, #64]
 228:	ldr	x0, [x19]
 22c:	ldr	x6, [x0, #120]
 230:	add	x5, sp, #0x48
 234:	add	x4, sp, #0x38
 238:	mov	w3, #0x0                   	// #0
 23c:	mov	w2, #0x1                   	// #1
 240:	ldr	x1, [x20]
 244:	mov	x0, x19
 248:	blr	x6
 24c:	and	w0, w0, #0xff
 250:	cbnz	w0, 138 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x138>
 254:	mov	w0, #0x1                   	// #1
 258:	strb	w0, [sp, #64]
 25c:	ldr	x0, [x19]
 260:	ldr	x1, [x0, #16]
 264:	mov	x0, x19
 268:	blr	x1
 26c:	ands	w21, w0, #0xff
 270:	b.eq	27c <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x27c>  // b.none
 274:	ldrb	w0, [x20, #56]
 278:	eor	w21, w0, #0x1
 27c:	ldr	x0, [x19]
 280:	ldr	x1, [x0, #16]
 284:	mov	x0, x19
 288:	blr	x1
 28c:	and	w0, w0, #0xff
 290:	cbnz	w0, 1bc <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1bc>
 294:	ldrb	w0, [x20, #56]
 298:	cbnz	w0, 2b4 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x2b4>
 29c:	str	xzr, [x20, #32]
 2a0:	str	xzr, [x20, #40]
 2a4:	str	wzr, [x20, #48]
 2a8:	str	wzr, [x20, #52]
 2ac:	mov	w0, #0x1                   	// #1
 2b0:	strb	w0, [x20, #56]
 2b4:	ldr	x0, [x19]
 2b8:	ldr	x6, [x0, #120]
 2bc:	add	x5, sp, #0x48
 2c0:	add	x4, sp, #0x40
 2c4:	mov	w3, w21
 2c8:	mov	w2, #0x0                   	// #0
 2cc:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 2d0:	add	x1, x1, #0x0
 2d4:	mov	x0, x19
 2d8:	blr	x6
 2dc:	and	w0, w0, #0xff
 2e0:	cbz	w0, 1c4 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1c4>
 2e4:	ldrb	w0, [x20, #56]
 2e8:	cbz	w0, 1dc <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1dc>
 2ec:	add	x3, sp, #0x38
 2f0:	mov	w2, #0x0                   	// #0
 2f4:	add	x1, x20, #0x20
 2f8:	mov	x0, x19
 2fc:	bl	0 <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 300:	ldr	x0, [x19]
 304:	ldr	x2, [x0, #128]
 308:	ldr	x1, [sp, #72]
 30c:	mov	x0, x19
 310:	blr	x2
 314:	b	1cc <_ZN4llvm4yaml6detail9doMappingINS_7remarks8ArgumentEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1cc>

Disassembly of section .text._ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_:

0000000000000000 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x19, x0
  18:	mov	x23, x1
  1c:	mov	x24, x3
  20:	ldr	x1, [x0]
  24:	ldr	x1, [x1, #24]
  28:	blr	x1
  2c:	mov	w21, w0
  30:	ldr	x0, [x19]
  34:	ldr	x1, [x0, #16]
  38:	mov	x0, x19
  3c:	blr	x1
  40:	and	w0, w0, #0xff
  44:	cbz	w0, 4c <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0x4c>
  48:	ldr	w21, [x23, #8]
  4c:	cbz	w21, 144 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0x144>
  50:	str	x25, [sp, #64]
  54:	mov	x20, #0x0                   	// #0
  58:	add	x22, sp, #0x58
  5c:	b	ac <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0xac>
  60:	adrp	x3, 0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x80                  	// #128
  6c:	adrp	x1, 0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	adrp	x3, 0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0xfa                  	// #250
  8c:	adrp	x1, 0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>
  90:	add	x1, x1, #0x0
  94:	adrp	x0, 0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>
  98:	add	x0, x0, #0x0
  9c:	bl	0 <__assert_fail>
  a0:	add	x20, x20, #0x1
  a4:	cmp	w21, w20
  a8:	b.ls	140 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0x140>  // b.plast
  ac:	ldr	x2, [x19]
  b0:	ldr	x4, [x2, #32]
  b4:	mov	x2, x22
  b8:	mov	w1, w20
  bc:	mov	x0, x19
  c0:	blr	x4
  c4:	and	w0, w0, #0xff
  c8:	cbz	w0, a0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0xa0>
  cc:	ldr	x0, [x19]
  d0:	ldr	x1, [x0, #16]
  d4:	mov	x0, x19
  d8:	blr	x1
  dc:	and	w0, w0, #0xff
  e0:	cbz	w0, 60 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0x60>
  e4:	ldr	x0, [x23, #8]
  e8:	cmp	x20, x0
  ec:	b.cs	80 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0x80>  // b.hs, b.nlast
  f0:	ldr	x25, [x23]
  f4:	add	x25, x25, x20, lsl #6
  f8:	ldr	x0, [x19]
  fc:	ldr	x1, [x0, #104]
 100:	mov	x0, x19
 104:	blr	x1
 108:	mov	x2, x24
 10c:	mov	x1, x25
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_>
 118:	ldr	x0, [x19]
 11c:	ldr	x1, [x0, #112]
 120:	mov	x0, x19
 124:	blr	x1
 128:	ldr	x0, [x19]
 12c:	ldr	x2, [x0, #40]
 130:	ldr	x1, [sp, #88]
 134:	mov	x0, x19
 138:	blr	x2
 13c:	b	a0 <_ZN4llvm4yaml7yamlizeINS_8ArrayRefINS_7remarks8ArgumentEEENS0_12EmptyContextEEENSt9enable_ifIXsrNS0_18has_SequenceTraitsIT_EE5valueEvE4typeERNS0_2IOERS9_bRT0_+0xa0>
 140:	ldr	x25, [sp, #64]
 144:	ldr	x0, [x19]
 148:	ldr	x1, [x0, #48]
 14c:	mov	x0, x19
 150:	blr	x1
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x21, x22, [sp, #32]
 15c:	ldp	x23, x24, [sp, #48]
 160:	ldp	x29, x30, [sp], #96
 164:	ret

Disassembly of section .text._ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE:

0000000000000000 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>:
   0:	stp	x29, x30, [sp, #-272]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	mov	x21, x1
  18:	ldr	x1, [x0]
  1c:	ldr	x1, [x1, #16]
  20:	blr	x1
  24:	and	w0, w0, #0xff
  28:	cbz	w0, 2e4 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x2e4>
  2c:	ldr	x0, [x19]
  30:	ldr	x4, [x0, #96]
  34:	ldr	x0, [x21]
  38:	ldr	w0, [x0]
  3c:	cmp	w0, #0x1
  40:	cset	w3, eq  // eq = none
  44:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  48:	add	x1, x1, #0x0
  4c:	mov	x2, #0x7                   	// #7
  50:	mov	x0, x19
  54:	blr	x4
  58:	and	w0, w0, #0xff
  5c:	cbnz	w0, 164 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x164>
  60:	ldr	x0, [x19]
  64:	ldr	x4, [x0, #96]
  68:	ldr	x0, [x21]
  6c:	ldr	w0, [x0]
  70:	cmp	w0, #0x2
  74:	cset	w3, eq  // eq = none
  78:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  7c:	add	x1, x1, #0x0
  80:	mov	x2, #0x7                   	// #7
  84:	mov	x0, x19
  88:	blr	x4
  8c:	and	w0, w0, #0xff
  90:	cbnz	w0, 164 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x164>
  94:	ldr	x0, [x19]
  98:	ldr	x4, [x0, #96]
  9c:	ldr	x0, [x21]
  a0:	ldr	w0, [x0]
  a4:	cmp	w0, #0x3
  a8:	cset	w3, eq  // eq = none
  ac:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  b0:	add	x1, x1, #0x0
  b4:	mov	x2, #0x9                   	// #9
  b8:	mov	x0, x19
  bc:	blr	x4
  c0:	and	w0, w0, #0xff
  c4:	cbnz	w0, 164 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x164>
  c8:	ldr	x0, [x19]
  cc:	ldr	x4, [x0, #96]
  d0:	ldr	x0, [x21]
  d4:	ldr	w0, [x0]
  d8:	cmp	w0, #0x4
  dc:	cset	w3, eq  // eq = none
  e0:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
  e4:	add	x1, x1, #0x0
  e8:	mov	x2, #0x12                  	// #18
  ec:	mov	x0, x19
  f0:	blr	x4
  f4:	and	w0, w0, #0xff
  f8:	cbnz	w0, 164 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x164>
  fc:	ldr	x0, [x19]
 100:	ldr	x4, [x0, #96]
 104:	ldr	x0, [x21]
 108:	ldr	w0, [x0]
 10c:	cmp	w0, #0x5
 110:	cset	w3, eq  // eq = none
 114:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 118:	add	x1, x1, #0x0
 11c:	mov	x2, #0x11                  	// #17
 120:	mov	x0, x19
 124:	blr	x4
 128:	and	w0, w0, #0xff
 12c:	cbnz	w0, 164 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x164>
 130:	ldr	x0, [x19]
 134:	ldr	x4, [x0, #96]
 138:	ldr	x0, [x21]
 13c:	ldr	w0, [x0]
 140:	cmp	w0, #0x6
 144:	cset	w3, eq  // eq = none
 148:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 14c:	add	x1, x1, #0x0
 150:	mov	x2, #0x8                   	// #8
 154:	mov	x0, x19
 158:	blr	x4
 15c:	and	w0, w0, #0xff
 160:	cbz	w0, 308 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x308>
 164:	mov	x0, x19
 168:	bl	0 <_ZNK4llvm4yaml2IO10getContextEv>
 16c:	cbz	x0, 324 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x324>
 170:	ldr	w1, [x0, #8]
 174:	cmp	w1, #0x2
 178:	b.eq	850 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x850>  // b.none
 17c:	ldr	x0, [x21]
 180:	ldr	x2, [x0, #104]
 184:	ldr	w1, [x0, #112]
 188:	ldp	x4, x5, [x0, #8]
 18c:	stp	x4, x5, [sp, #88]
 190:	ldp	x4, x5, [x0, #24]
 194:	stp	x4, x5, [sp, #104]
 198:	ldp	x4, x5, [x0, #56]
 19c:	stp	x4, x5, [sp, #168]
 1a0:	ldp	x4, x5, [x0, #72]
 1a4:	stp	x4, x5, [sp, #184]
 1a8:	ldp	x4, x5, [x0, #40]
 1ac:	stp	x4, x5, [sp, #120]
 1b0:	ldp	x4, x5, [x0, #88]
 1b4:	stp	x4, x5, [sp, #136]
 1b8:	str	x2, [sp, #152]
 1bc:	str	x1, [sp, #160]
 1c0:	ldr	x0, [x19]
 1c4:	ldr	x6, [x0, #120]
 1c8:	add	x5, sp, #0x50
 1cc:	add	x4, sp, #0x4f
 1d0:	mov	w3, #0x0                   	// #0
 1d4:	mov	w2, #0x1                   	// #1
 1d8:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 1dc:	add	x1, x1, #0x0
 1e0:	mov	x0, x19
 1e4:	blr	x6
 1e8:	and	w0, w0, #0xff
 1ec:	cbnz	w0, 5e4 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x5e4>
 1f0:	ldr	x0, [x19]
 1f4:	ldr	x6, [x0, #120]
 1f8:	add	x5, sp, #0x50
 1fc:	add	x4, sp, #0x4f
 200:	mov	w3, #0x0                   	// #0
 204:	mov	w2, #0x1                   	// #1
 208:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 20c:	add	x1, x1, #0x0
 210:	mov	x0, x19
 214:	blr	x6
 218:	and	w0, w0, #0xff
 21c:	cbnz	w0, 610 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x610>
 220:	mov	w0, #0x1                   	// #1
 224:	strb	w0, [sp, #79]
 228:	ldr	x0, [x19]
 22c:	ldr	x1, [x0, #16]
 230:	mov	x0, x19
 234:	blr	x1
 238:	ands	w20, w0, #0xff
 23c:	b.eq	248 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x248>  // b.none
 240:	ldrb	w0, [sp, #192]
 244:	eor	w20, w0, #0x1
 248:	ldr	x0, [x19]
 24c:	ldr	x1, [x0, #16]
 250:	mov	x0, x19
 254:	blr	x1
 258:	and	w0, w0, #0xff
 25c:	cbnz	w0, 63c <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x63c>
 260:	ldrb	w0, [sp, #192]
 264:	cbnz	w0, 280 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x280>
 268:	str	xzr, [sp, #168]
 26c:	str	xzr, [sp, #176]
 270:	str	wzr, [sp, #184]
 274:	str	wzr, [sp, #188]
 278:	mov	w0, #0x1                   	// #1
 27c:	strb	w0, [sp, #192]
 280:	ldr	x0, [x19]
 284:	ldr	x6, [x0, #120]
 288:	add	x5, sp, #0x50
 28c:	add	x4, sp, #0x4f
 290:	mov	w3, w20
 294:	mov	w2, #0x0                   	// #0
 298:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 29c:	add	x1, x1, #0x0
 2a0:	mov	x0, x19
 2a4:	blr	x6
 2a8:	and	w0, w0, #0xff
 2ac:	cbz	w0, 644 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x644>
 2b0:	ldrb	w0, [sp, #192]
 2b4:	cbz	w0, 734 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x734>
 2b8:	add	x3, sp, #0x48
 2bc:	mov	w2, #0x0                   	// #0
 2c0:	add	x1, sp, #0xa8
 2c4:	mov	x0, x19
 2c8:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 2cc:	ldr	x0, [x19]
 2d0:	ldr	x2, [x0, #128]
 2d4:	ldr	x1, [sp, #80]
 2d8:	mov	x0, x19
 2dc:	blr	x2
 2e0:	b	64c <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x64c>
 2e4:	str	x23, [sp, #48]
 2e8:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 2ec:	add	x3, x3, #0x0
 2f0:	mov	w2, #0x28                  	// #40
 2f4:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 2f8:	add	x1, x1, #0x0
 2fc:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 300:	add	x0, x0, #0x0
 304:	bl	0 <__assert_fail>
 308:	str	x23, [sp, #48]
 30c:	mov	w2, #0x39                  	// #57
 310:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 314:	add	x1, x1, #0x0
 318:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 31c:	add	x0, x0, #0x0
 320:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 324:	str	x23, [sp, #48]
 328:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 32c:	add	x3, x3, #0x0
 330:	mov	w2, #0x69                  	// #105
 334:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 338:	add	x1, x1, #0x0
 33c:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 340:	add	x0, x0, #0x0
 344:	bl	0 <__assert_fail>
 348:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 34c:	add	x3, x3, #0x0
 350:	mov	w2, #0x3d                  	// #61
 354:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 358:	add	x1, x1, #0x0
 35c:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 360:	add	x0, x0, #0x0
 364:	bl	0 <__assert_fail>
 368:	add	x3, sp, #0x48
 36c:	mov	w2, #0x1                   	// #1
 370:	add	x1, sp, #0x50
 374:	mov	x0, x19
 378:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 37c:	ldr	x0, [x19]
 380:	ldr	x2, [x0, #128]
 384:	ldr	x1, [sp, #120]
 388:	mov	x0, x19
 38c:	blr	x2
 390:	b	928 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x928>
 394:	add	x3, sp, #0x48
 398:	mov	w2, #0x1                   	// #1
 39c:	add	x1, sp, #0x58
 3a0:	mov	x0, x19
 3a4:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 3a8:	ldr	x0, [x19]
 3ac:	ldr	x2, [x0, #128]
 3b0:	ldr	x1, [sp, #120]
 3b4:	mov	x0, x19
 3b8:	blr	x2
 3bc:	b	958 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x958>
 3c0:	ldrb	w0, [sp, #192]
 3c4:	cbnz	w0, 9b8 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x9b8>
 3c8:	ldrb	w0, [sp, #79]
 3cc:	cbnz	w0, 4d8 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x4d8>
 3d0:	ldr	x0, [x19]
 3d4:	ldr	x6, [x0, #120]
 3d8:	add	x5, sp, #0x78
 3dc:	add	x4, sp, #0x4f
 3e0:	mov	w3, #0x0                   	// #0
 3e4:	mov	w2, #0x1                   	// #1
 3e8:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 3ec:	add	x1, x1, #0x0
 3f0:	mov	x0, x19
 3f4:	blr	x6
 3f8:	and	w0, w0, #0xff
 3fc:	cbnz	w0, 4e4 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x4e4>
 400:	mov	w0, #0x1                   	// #1
 404:	strb	w0, [sp, #79]
 408:	ldr	x0, [x19]
 40c:	ldr	x1, [x0, #16]
 410:	mov	x0, x19
 414:	blr	x1
 418:	ands	w20, w0, #0xff
 41c:	b.eq	428 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x428>  // b.none
 420:	ldrb	w0, [sp, #144]
 424:	eor	w20, w0, #0x1
 428:	ldr	x0, [x19]
 42c:	ldr	x1, [x0, #16]
 430:	mov	x0, x19
 434:	blr	x1
 438:	and	w0, w0, #0xff
 43c:	cbnz	w0, 510 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x510>
 440:	ldrb	w0, [sp, #144]
 444:	cbnz	w0, 454 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x454>
 448:	str	xzr, [sp, #136]
 44c:	mov	w0, #0x1                   	// #1
 450:	strb	w0, [sp, #144]
 454:	ldr	x0, [x19]
 458:	ldr	x6, [x0, #120]
 45c:	add	x5, sp, #0x78
 460:	add	x4, sp, #0x4f
 464:	mov	w3, w20
 468:	mov	w2, #0x0                   	// #0
 46c:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 470:	add	x1, x1, #0x0
 474:	mov	x0, x19
 478:	blr	x6
 47c:	and	w0, w0, #0xff
 480:	cbz	w0, 518 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x518>
 484:	ldrb	w0, [sp, #144]
 488:	cbz	w0, 588 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x588>
 48c:	add	x3, sp, #0x48
 490:	mov	w2, #0x0                   	// #0
 494:	add	x1, sp, #0x88
 498:	mov	x0, x19
 49c:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 4a0:	ldr	x0, [x19]
 4a4:	ldr	x2, [x0, #128]
 4a8:	ldr	x1, [sp, #120]
 4ac:	mov	x0, x19
 4b0:	blr	x2
 4b4:	b	520 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x520>
 4b8:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 4bc:	add	x3, x3, #0x0
 4c0:	mov	w2, #0xad                  	// #173
 4c4:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 4c8:	add	x1, x1, #0x0
 4cc:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 4d0:	add	x0, x0, #0x0
 4d4:	bl	0 <__assert_fail>
 4d8:	strb	wzr, [sp, #168]
 4dc:	strb	wzr, [sp, #192]
 4e0:	b	3d0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x3d0>
 4e4:	add	x3, sp, #0x48
 4e8:	mov	w2, #0x1                   	// #1
 4ec:	add	x1, sp, #0x68
 4f0:	mov	x0, x19
 4f4:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 4f8:	ldr	x0, [x19]
 4fc:	ldr	x2, [x0, #128]
 500:	ldr	x1, [sp, #120]
 504:	mov	x0, x19
 508:	blr	x2
 50c:	b	400 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x400>
 510:	ldrb	w0, [sp, #144]
 514:	cbnz	w0, 454 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x454>
 518:	ldrb	w0, [sp, #79]
 51c:	cbnz	w0, 5a8 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x5a8>
 520:	ldr	x0, [x19]
 524:	ldr	x1, [x0, #56]
 528:	mov	x0, x19
 52c:	blr	x1
 530:	and	w0, w0, #0xff
 534:	cbz	w0, 544 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x544>
 538:	ldr	x0, [sp, #160]
 53c:	cmp	xzr, x0, lsl #6
 540:	b.eq	a1c <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0xa1c>  // b.none
 544:	ldr	x0, [x19]
 548:	ldr	x6, [x0, #120]
 54c:	add	x5, sp, #0x78
 550:	add	x4, sp, #0x4f
 554:	mov	w3, #0x0                   	// #0
 558:	mov	w2, #0x0                   	// #0
 55c:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 560:	add	x1, x1, #0x0
 564:	mov	x0, x19
 568:	blr	x6
 56c:	and	w0, w0, #0xff
 570:	cbnz	w0, 5b4 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x5b4>
 574:	ldr	x23, [sp, #48]
 578:	ldp	x19, x20, [sp, #16]
 57c:	ldp	x21, x22, [sp, #32]
 580:	ldp	x29, x30, [sp], #272
 584:	ret
 588:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 58c:	add	x3, x3, #0x0
 590:	mov	w2, #0xad                  	// #173
 594:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 598:	add	x1, x1, #0x0
 59c:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 5a0:	add	x0, x0, #0x0
 5a4:	bl	0 <__assert_fail>
 5a8:	strb	wzr, [sp, #136]
 5ac:	strb	wzr, [sp, #144]
 5b0:	b	520 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x520>
 5b4:	add	x3, sp, #0x48
 5b8:	mov	w2, #0x0                   	// #0
 5bc:	add	x1, sp, #0x98
 5c0:	mov	x0, x19
 5c4:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 5c8:	ldr	x0, [x19]
 5cc:	ldr	x2, [x0, #128]
 5d0:	ldr	x1, [sp, #120]
 5d4:	mov	x0, x19
 5d8:	blr	x2
 5dc:	ldr	x23, [sp, #48]
 5e0:	b	578 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x578>
 5e4:	add	x3, sp, #0x48
 5e8:	mov	w2, #0x1                   	// #1
 5ec:	add	x1, sp, #0x58
 5f0:	mov	x0, x19
 5f4:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 5f8:	ldr	x0, [x19]
 5fc:	ldr	x2, [x0, #128]
 600:	ldr	x1, [sp, #80]
 604:	mov	x0, x19
 608:	blr	x2
 60c:	b	1f0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x1f0>
 610:	add	x3, sp, #0x48
 614:	mov	w2, #0x1                   	// #1
 618:	add	x1, sp, #0x68
 61c:	mov	x0, x19
 620:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 624:	ldr	x0, [x19]
 628:	ldr	x2, [x0, #128]
 62c:	ldr	x1, [sp, #80]
 630:	mov	x0, x19
 634:	blr	x2
 638:	b	220 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x220>
 63c:	ldrb	w0, [sp, #192]
 640:	cbnz	w0, 280 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x280>
 644:	ldrb	w0, [sp, #79]
 648:	cbnz	w0, 758 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x758>
 64c:	ldr	x0, [x19]
 650:	ldr	x6, [x0, #120]
 654:	add	x5, sp, #0x50
 658:	add	x4, sp, #0x4f
 65c:	mov	w3, #0x0                   	// #0
 660:	mov	w2, #0x1                   	// #1
 664:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 668:	add	x1, x1, #0x0
 66c:	mov	x0, x19
 670:	blr	x6
 674:	and	w0, w0, #0xff
 678:	cbnz	w0, 764 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x764>
 67c:	mov	w0, #0x1                   	// #1
 680:	strb	w0, [sp, #79]
 684:	ldr	x0, [x19]
 688:	ldr	x1, [x0, #16]
 68c:	mov	x0, x19
 690:	blr	x1
 694:	ands	w20, w0, #0xff
 698:	b.eq	6a4 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x6a4>  // b.none
 69c:	ldrb	w0, [sp, #144]
 6a0:	eor	w20, w0, #0x1
 6a4:	ldr	x0, [x19]
 6a8:	ldr	x1, [x0, #16]
 6ac:	mov	x0, x19
 6b0:	blr	x1
 6b4:	and	w0, w0, #0xff
 6b8:	cbnz	w0, 790 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x790>
 6bc:	ldrb	w0, [sp, #144]
 6c0:	cbnz	w0, 6d0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x6d0>
 6c4:	str	xzr, [sp, #136]
 6c8:	mov	w0, #0x1                   	// #1
 6cc:	strb	w0, [sp, #144]
 6d0:	ldr	x0, [x19]
 6d4:	ldr	x6, [x0, #120]
 6d8:	add	x5, sp, #0x50
 6dc:	add	x4, sp, #0x4f
 6e0:	mov	w3, w20
 6e4:	mov	w2, #0x0                   	// #0
 6e8:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 6ec:	add	x1, x1, #0x0
 6f0:	mov	x0, x19
 6f4:	blr	x6
 6f8:	and	w0, w0, #0xff
 6fc:	cbz	w0, 798 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x798>
 700:	ldrb	w0, [sp, #144]
 704:	cbz	w0, 820 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x820>
 708:	add	x3, sp, #0x48
 70c:	mov	w2, #0x0                   	// #0
 710:	add	x1, sp, #0x88
 714:	mov	x0, x19
 718:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 71c:	ldr	x0, [x19]
 720:	ldr	x2, [x0, #128]
 724:	ldr	x1, [sp, #80]
 728:	mov	x0, x19
 72c:	blr	x2
 730:	b	7a0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x7a0>
 734:	str	x23, [sp, #48]
 738:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 73c:	add	x3, x3, #0x0
 740:	mov	w2, #0xad                  	// #173
 744:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 748:	add	x1, x1, #0x0
 74c:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 750:	add	x0, x0, #0x0
 754:	bl	0 <__assert_fail>
 758:	strb	wzr, [sp, #168]
 75c:	strb	wzr, [sp, #192]
 760:	b	64c <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x64c>
 764:	add	x3, sp, #0x48
 768:	mov	w2, #0x1                   	// #1
 76c:	add	x1, sp, #0x78
 770:	mov	x0, x19
 774:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 778:	ldr	x0, [x19]
 77c:	ldr	x2, [x0, #128]
 780:	ldr	x1, [sp, #80]
 784:	mov	x0, x19
 788:	blr	x2
 78c:	b	67c <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x67c>
 790:	ldrb	w0, [sp, #144]
 794:	cbnz	w0, 6d0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x6d0>
 798:	ldrb	w0, [sp, #79]
 79c:	cbnz	w0, 844 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x844>
 7a0:	ldr	x0, [x19]
 7a4:	ldr	x1, [x0, #56]
 7a8:	mov	x0, x19
 7ac:	blr	x1
 7b0:	and	w0, w0, #0xff
 7b4:	cbz	w0, 7c4 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x7c4>
 7b8:	ldr	x0, [sp, #160]
 7bc:	cmp	xzr, x0, lsl #6
 7c0:	b.eq	578 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x578>  // b.none
 7c4:	ldr	x0, [x19]
 7c8:	ldr	x6, [x0, #120]
 7cc:	add	x5, sp, #0x50
 7d0:	add	x4, sp, #0x4f
 7d4:	mov	w3, #0x0                   	// #0
 7d8:	mov	w2, #0x0                   	// #0
 7dc:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 7e0:	add	x1, x1, #0x0
 7e4:	mov	x0, x19
 7e8:	blr	x6
 7ec:	and	w0, w0, #0xff
 7f0:	cbz	w0, 578 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x578>
 7f4:	add	x3, sp, #0x48
 7f8:	mov	w2, #0x0                   	// #0
 7fc:	add	x1, sp, #0x98
 800:	mov	x0, x19
 804:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 808:	ldr	x0, [x19]
 80c:	ldr	x2, [x0, #128]
 810:	ldr	x1, [sp, #80]
 814:	mov	x0, x19
 818:	blr	x2
 81c:	b	578 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x578>
 820:	str	x23, [sp, #48]
 824:	adrp	x3, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 828:	add	x3, x3, #0x0
 82c:	mov	w2, #0xad                  	// #173
 830:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 834:	add	x1, x1, #0x0
 838:	adrp	x0, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 83c:	add	x0, x0, #0x0
 840:	bl	0 <__assert_fail>
 844:	strb	wzr, [sp, #136]
 848:	strb	wzr, [sp, #144]
 84c:	b	7a0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x7a0>
 850:	str	x23, [sp, #48]
 854:	ldrb	w1, [x0, #168]
 858:	cbz	w1, 348 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x348>
 85c:	add	x20, x0, #0x20
 860:	ldr	x0, [x21]
 864:	ldp	x0, x1, [x0, #8]
 868:	add	x8, sp, #0xf8
 86c:	mov	x2, x1
 870:	mov	x1, x0
 874:	mov	x0, x20
 878:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 87c:	ldr	w23, [sp, #248]
 880:	ldr	x0, [x21]
 884:	ldp	x0, x1, [x0, #24]
 888:	add	x8, sp, #0xe0
 88c:	mov	x2, x1
 890:	mov	x1, x0
 894:	mov	x0, x20
 898:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 89c:	ldr	w22, [sp, #224]
 8a0:	ldr	x0, [x21]
 8a4:	ldp	x0, x1, [x0, #40]
 8a8:	add	x8, sp, #0xc8
 8ac:	mov	x2, x1
 8b0:	mov	x1, x0
 8b4:	mov	x0, x20
 8b8:	bl	0 <_ZN4llvm7remarks11StringTable3addENS_9StringRefE>
 8bc:	ldr	x0, [x21]
 8c0:	ldr	x2, [x0, #104]
 8c4:	ldr	w1, [x0, #112]
 8c8:	str	w23, [sp, #80]
 8cc:	str	w22, [sp, #88]
 8d0:	ldp	x4, x5, [x0, #56]
 8d4:	stp	x4, x5, [sp, #168]
 8d8:	ldp	x4, x5, [x0, #72]
 8dc:	stp	x4, x5, [sp, #184]
 8e0:	ldr	w3, [sp, #200]
 8e4:	str	w3, [sp, #104]
 8e8:	ldp	x4, x5, [x0, #88]
 8ec:	stp	x4, x5, [sp, #136]
 8f0:	str	x2, [sp, #152]
 8f4:	str	x1, [sp, #160]
 8f8:	ldr	x0, [x19]
 8fc:	ldr	x6, [x0, #120]
 900:	add	x5, sp, #0x78
 904:	add	x4, sp, #0x4f
 908:	mov	w3, #0x0                   	// #0
 90c:	mov	w2, #0x1                   	// #1
 910:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 914:	add	x1, x1, #0x0
 918:	mov	x0, x19
 91c:	blr	x6
 920:	and	w0, w0, #0xff
 924:	cbnz	w0, 368 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x368>
 928:	ldr	x0, [x19]
 92c:	ldr	x6, [x0, #120]
 930:	add	x5, sp, #0x78
 934:	add	x4, sp, #0x4f
 938:	mov	w3, #0x0                   	// #0
 93c:	mov	w2, #0x1                   	// #1
 940:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 944:	add	x1, x1, #0x0
 948:	mov	x0, x19
 94c:	blr	x6
 950:	and	w0, w0, #0xff
 954:	cbnz	w0, 394 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x394>
 958:	mov	w0, #0x1                   	// #1
 95c:	strb	w0, [sp, #79]
 960:	ldr	x0, [x19]
 964:	ldr	x1, [x0, #16]
 968:	mov	x0, x19
 96c:	blr	x1
 970:	ands	w20, w0, #0xff
 974:	b.eq	980 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x980>  // b.none
 978:	ldrb	w0, [sp, #192]
 97c:	eor	w20, w0, #0x1
 980:	ldr	x0, [x19]
 984:	ldr	x1, [x0, #16]
 988:	mov	x0, x19
 98c:	blr	x1
 990:	and	w0, w0, #0xff
 994:	cbnz	w0, 3c0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x3c0>
 998:	ldrb	w0, [sp, #192]
 99c:	cbnz	w0, 9b8 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x9b8>
 9a0:	str	xzr, [sp, #168]
 9a4:	str	xzr, [sp, #176]
 9a8:	str	wzr, [sp, #184]
 9ac:	str	wzr, [sp, #188]
 9b0:	mov	w0, #0x1                   	// #1
 9b4:	strb	w0, [sp, #192]
 9b8:	ldr	x0, [x19]
 9bc:	ldr	x6, [x0, #120]
 9c0:	add	x5, sp, #0x78
 9c4:	add	x4, sp, #0x4f
 9c8:	mov	w3, w20
 9cc:	mov	w2, #0x0                   	// #0
 9d0:	adrp	x1, 0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 9d4:	add	x1, x1, #0x0
 9d8:	mov	x0, x19
 9dc:	blr	x6
 9e0:	and	w0, w0, #0xff
 9e4:	cbz	w0, 3c8 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x3c8>
 9e8:	ldrb	w0, [sp, #192]
 9ec:	cbz	w0, 4b8 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x4b8>
 9f0:	add	x3, sp, #0x48
 9f4:	mov	w2, #0x0                   	// #0
 9f8:	add	x1, sp, #0xa8
 9fc:	mov	x0, x19
 a00:	bl	0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE>
 a04:	ldr	x0, [x19]
 a08:	ldr	x2, [x0, #128]
 a0c:	ldr	x1, [sp, #120]
 a10:	mov	x0, x19
 a14:	blr	x2
 a18:	b	3d0 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x3d0>
 a1c:	ldr	x23, [sp, #48]
 a20:	b	578 <_ZN4llvm4yaml6detail9doMappingIPNS_7remarks6RemarkEEEvRNS0_2IOERT_RNS0_12EmptyContextE+0x578>

Disassembly of section .text._ZN4llvm7remarks20YAMLRemarkSerializerD2Ev:

0000000000000000 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev>
  14:	ldr	x1, [x1]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0], #176
  20:	bl	0 <_ZN4llvm4yaml6OutputD1Ev>
  24:	mov	x1, x19
  28:	adrp	x0, 0 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev>
  2c:	ldr	x0, [x0]
  30:	add	x0, x0, #0x10
  34:	str	x0, [x1], #32
  38:	ldrb	w0, [x1, #136]
  3c:	cbnz	w0, 4c <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x4c>
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret
  4c:	str	x21, [sp, #32]
  50:	ldr	w0, [x19, #44]
  54:	cbz	w0, 7c <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x7c>
  58:	ldr	w1, [x19, #40]
  5c:	cbz	w1, 7c <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x7c>
  60:	sub	w1, w1, #0x1
  64:	add	x1, x1, #0x1
  68:	lsl	x1, x1, #3
  6c:	mov	x0, #0x0                   	// #0
  70:	add	x0, x0, #0x8
  74:	cmp	x1, x0
  78:	b.ne	70 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x70>  // b.any
  7c:	ldr	x0, [x19, #32]
  80:	bl	0 <free>
  84:	ldr	x20, [x19, #72]
  88:	ldr	w21, [x19, #80]
  8c:	add	x21, x20, x21, lsl #3
  90:	cmp	x20, x21
  94:	b.eq	a8 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0xa8>  // b.none
  98:	ldr	x0, [x20], #8
  9c:	bl	0 <free>
  a0:	cmp	x21, x20
  a4:	b.ne	98 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x98>  // b.any
  a8:	ldr	x20, [x19, #120]
  ac:	ldr	w21, [x19, #128]
  b0:	add	x21, x20, x21, lsl #4
  b4:	cmp	x20, x21
  b8:	b.eq	ec <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0xec>  // b.none
  bc:	ldr	x0, [x20], #16
  c0:	bl	0 <free>
  c4:	cmp	x21, x20
  c8:	b.ne	bc <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0xbc>  // b.any
  cc:	ldr	x1, [x19, #120]
  d0:	ldr	w0, [x19, #128]
  d4:	add	x0, x1, x0, lsl #4
  d8:	cmp	x1, x0
  dc:	b.eq	ec <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0xec>  // b.none
  e0:	sub	x0, x0, #0x10
  e4:	cmp	x1, x0
  e8:	b.ne	e0 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0xe0>  // b.any
  ec:	ldr	x0, [x19, #120]
  f0:	add	x1, x19, #0x88
  f4:	cmp	x0, x1
  f8:	b.eq	100 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x100>  // b.none
  fc:	bl	0 <free>
 100:	ldr	x0, [x19, #72]
 104:	add	x19, x19, #0x58
 108:	cmp	x0, x19
 10c:	b.eq	11c <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x11c>  // b.none
 110:	bl	0 <free>
 114:	ldr	x21, [sp, #32]
 118:	b	40 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x40>
 11c:	ldr	x21, [sp, #32]
 120:	b	40 <_ZN4llvm7remarks20YAMLRemarkSerializerD1Ev+0x40>

Disassembly of section .text._ZN4llvm7remarks26YAMLStrTabRemarkSerializerD2Ev:

0000000000000000 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x1, 0 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev>
  14:	ldr	x1, [x1]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0], #176
  20:	bl	0 <_ZN4llvm4yaml6OutputD1Ev>
  24:	mov	x1, x19
  28:	adrp	x0, 0 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev>
  2c:	ldr	x0, [x0]
  30:	add	x0, x0, #0x10
  34:	str	x0, [x1], #32
  38:	ldrb	w0, [x1, #136]
  3c:	cbnz	w0, 4c <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x4c>
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret
  4c:	str	x21, [sp, #32]
  50:	ldr	w0, [x19, #44]
  54:	cbz	w0, 7c <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x7c>
  58:	ldr	w1, [x19, #40]
  5c:	cbz	w1, 7c <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x7c>
  60:	sub	w1, w1, #0x1
  64:	add	x1, x1, #0x1
  68:	lsl	x1, x1, #3
  6c:	mov	x0, #0x0                   	// #0
  70:	add	x0, x0, #0x8
  74:	cmp	x1, x0
  78:	b.ne	70 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x70>  // b.any
  7c:	ldr	x0, [x19, #32]
  80:	bl	0 <free>
  84:	ldr	x20, [x19, #72]
  88:	ldr	w21, [x19, #80]
  8c:	add	x21, x20, x21, lsl #3
  90:	cmp	x20, x21
  94:	b.eq	a8 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0xa8>  // b.none
  98:	ldr	x0, [x20], #8
  9c:	bl	0 <free>
  a0:	cmp	x21, x20
  a4:	b.ne	98 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x98>  // b.any
  a8:	ldr	x20, [x19, #120]
  ac:	ldr	w21, [x19, #128]
  b0:	add	x21, x20, x21, lsl #4
  b4:	cmp	x20, x21
  b8:	b.eq	ec <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0xec>  // b.none
  bc:	ldr	x0, [x20], #16
  c0:	bl	0 <free>
  c4:	cmp	x21, x20
  c8:	b.ne	bc <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0xbc>  // b.any
  cc:	ldr	x1, [x19, #120]
  d0:	ldr	w0, [x19, #128]
  d4:	add	x0, x1, x0, lsl #4
  d8:	cmp	x1, x0
  dc:	b.eq	ec <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0xec>  // b.none
  e0:	sub	x0, x0, #0x10
  e4:	cmp	x1, x0
  e8:	b.ne	e0 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0xe0>  // b.any
  ec:	ldr	x0, [x19, #120]
  f0:	add	x1, x19, #0x88
  f4:	cmp	x0, x1
  f8:	b.eq	100 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x100>  // b.none
  fc:	bl	0 <free>
 100:	ldr	x0, [x19, #72]
 104:	add	x19, x19, #0x58
 108:	cmp	x0, x19
 10c:	b.eq	11c <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x11c>  // b.none
 110:	bl	0 <free>
 114:	ldr	x21, [sp, #32]
 118:	b	40 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x40>
 11c:	ldr	x21, [sp, #32]
 120:	b	40 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD1Ev+0x40>

Disassembly of section .text._ZN4llvm7remarks20YAMLRemarkSerializerD0Ev:

0000000000000000 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x1, 0 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev>
  14:	ldr	x1, [x1]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0], #176
  20:	bl	0 <_ZN4llvm4yaml6OutputD1Ev>
  24:	mov	x1, x19
  28:	adrp	x0, 0 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev>
  2c:	ldr	x0, [x0]
  30:	add	x0, x0, #0x10
  34:	str	x0, [x1], #32
  38:	ldrb	w0, [x1, #136]
  3c:	cbnz	w0, 58 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x58>
  40:	mov	x1, #0x130                 	// #304
  44:	mov	x0, x19
  48:	bl	0 <_ZdlPvm>
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret
  58:	str	x21, [sp, #32]
  5c:	ldr	w0, [x19, #44]
  60:	cbz	w0, 88 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x88>
  64:	ldr	w1, [x19, #40]
  68:	cbz	w1, 88 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x88>
  6c:	sub	w1, w1, #0x1
  70:	add	x1, x1, #0x1
  74:	lsl	x1, x1, #3
  78:	mov	x0, #0x0                   	// #0
  7c:	add	x0, x0, #0x8
  80:	cmp	x1, x0
  84:	b.ne	7c <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x7c>  // b.any
  88:	ldr	x0, [x19, #32]
  8c:	bl	0 <free>
  90:	ldr	x20, [x19, #72]
  94:	ldr	w21, [x19, #80]
  98:	add	x21, x20, x21, lsl #3
  9c:	cmp	x20, x21
  a0:	b.eq	b4 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0xb4>  // b.none
  a4:	ldr	x0, [x20], #8
  a8:	bl	0 <free>
  ac:	cmp	x21, x20
  b0:	b.ne	a4 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0xa4>  // b.any
  b4:	ldr	x20, [x19, #120]
  b8:	ldr	w21, [x19, #128]
  bc:	add	x21, x20, x21, lsl #4
  c0:	cmp	x20, x21
  c4:	b.eq	f8 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0xf8>  // b.none
  c8:	ldr	x0, [x20], #16
  cc:	bl	0 <free>
  d0:	cmp	x21, x20
  d4:	b.ne	c8 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0xc8>  // b.any
  d8:	ldr	x1, [x19, #120]
  dc:	ldr	w0, [x19, #128]
  e0:	add	x0, x1, x0, lsl #4
  e4:	cmp	x1, x0
  e8:	b.eq	f8 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0xf8>  // b.none
  ec:	sub	x0, x0, #0x10
  f0:	cmp	x1, x0
  f4:	b.ne	ec <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0xec>  // b.any
  f8:	ldr	x0, [x19, #120]
  fc:	add	x1, x19, #0x88
 100:	cmp	x0, x1
 104:	b.eq	10c <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x10c>  // b.none
 108:	bl	0 <free>
 10c:	ldr	x0, [x19, #72]
 110:	add	x1, x19, #0x58
 114:	cmp	x0, x1
 118:	b.eq	128 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x128>  // b.none
 11c:	bl	0 <free>
 120:	ldr	x21, [sp, #32]
 124:	b	40 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x40>
 128:	ldr	x21, [sp, #32]
 12c:	b	40 <_ZN4llvm7remarks20YAMLRemarkSerializerD0Ev+0x40>

Disassembly of section .text._ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev:

0000000000000000 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x1, 0 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev>
  14:	ldr	x1, [x1]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0], #176
  20:	bl	0 <_ZN4llvm4yaml6OutputD1Ev>
  24:	mov	x1, x19
  28:	adrp	x0, 0 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev>
  2c:	ldr	x0, [x0]
  30:	add	x0, x0, #0x10
  34:	str	x0, [x1], #32
  38:	ldrb	w0, [x1, #136]
  3c:	cbnz	w0, 58 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x58>
  40:	mov	x1, #0x138                 	// #312
  44:	mov	x0, x19
  48:	bl	0 <_ZdlPvm>
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret
  58:	str	x21, [sp, #32]
  5c:	ldr	w0, [x19, #44]
  60:	cbz	w0, 88 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x88>
  64:	ldr	w1, [x19, #40]
  68:	cbz	w1, 88 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x88>
  6c:	sub	w1, w1, #0x1
  70:	add	x1, x1, #0x1
  74:	lsl	x1, x1, #3
  78:	mov	x0, #0x0                   	// #0
  7c:	add	x0, x0, #0x8
  80:	cmp	x1, x0
  84:	b.ne	7c <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x7c>  // b.any
  88:	ldr	x0, [x19, #32]
  8c:	bl	0 <free>
  90:	ldr	x20, [x19, #72]
  94:	ldr	w21, [x19, #80]
  98:	add	x21, x20, x21, lsl #3
  9c:	cmp	x20, x21
  a0:	b.eq	b4 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0xb4>  // b.none
  a4:	ldr	x0, [x20], #8
  a8:	bl	0 <free>
  ac:	cmp	x21, x20
  b0:	b.ne	a4 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0xa4>  // b.any
  b4:	ldr	x20, [x19, #120]
  b8:	ldr	w21, [x19, #128]
  bc:	add	x21, x20, x21, lsl #4
  c0:	cmp	x20, x21
  c4:	b.eq	f8 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0xf8>  // b.none
  c8:	ldr	x0, [x20], #16
  cc:	bl	0 <free>
  d0:	cmp	x21, x20
  d4:	b.ne	c8 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0xc8>  // b.any
  d8:	ldr	x1, [x19, #120]
  dc:	ldr	w0, [x19, #128]
  e0:	add	x0, x1, x0, lsl #4
  e4:	cmp	x1, x0
  e8:	b.eq	f8 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0xf8>  // b.none
  ec:	sub	x0, x0, #0x10
  f0:	cmp	x1, x0
  f4:	b.ne	ec <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0xec>  // b.any
  f8:	ldr	x0, [x19, #120]
  fc:	add	x1, x19, #0x88
 100:	cmp	x0, x1
 104:	b.eq	10c <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x10c>  // b.none
 108:	bl	0 <free>
 10c:	ldr	x0, [x19, #72]
 110:	add	x1, x19, #0x58
 114:	cmp	x0, x1
 118:	b.eq	128 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x128>  // b.none
 11c:	bl	0 <free>
 120:	ldr	x21, [sp, #32]
 124:	b	40 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x40>
 128:	ldr	x21, [sp, #32]
 12c:	b	40 <_ZN4llvm7remarks26YAMLStrTabRemarkSerializerD0Ev+0x40>
