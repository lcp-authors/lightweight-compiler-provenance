
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scsi.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_scsi_dev_register-0xd0>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret
      38:	sub	sp, sp, #0x10
      3c:	str	w0, [sp, #12]
      40:	ldr	w0, [sp, #12]
      44:	rev	w0, w0
      48:	add	sp, sp, #0x10
      4c:	ret
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	rev	x0, x0
      60:	add	sp, sp, #0x10
      64:	ret
      68:	sub	sp, sp, #0x10
      6c:	str	w0, [sp, #12]
      70:	ldr	w0, [sp, #12]
      74:	cmp	w0, #0x2f
      78:	b.le	90 <grub_scsi_dev_register-0x40>
      7c:	ldr	w0, [sp, #12]
      80:	cmp	w0, #0x39
      84:	b.gt	90 <grub_scsi_dev_register-0x40>
      88:	mov	w0, #0x1                   	// #1
      8c:	b	94 <grub_scsi_dev_register-0x3c>
      90:	mov	w0, #0x0                   	// #0
      94:	add	sp, sp, #0x10
      98:	ret
      9c:	sub	sp, sp, #0x10
      a0:	str	w0, [sp, #12]
      a4:	str	w1, [sp, #8]
      a8:	str	w2, [sp, #4]
      ac:	ldr	w0, [sp, #12]
      b0:	lsl	w1, w0, #24
      b4:	ldr	w0, [sp, #8]
      b8:	lsl	w0, w0, #8
      bc:	orr	w1, w1, w0
      c0:	ldr	w0, [sp, #4]
      c4:	orr	w0, w1, w0
      c8:	add	sp, sp, #0x10
      cc:	ret

00000000000000d0 <grub_scsi_dev_register>:
      d0:	sub	sp, sp, #0x10
      d4:	str	x0, [sp, #8]
      d8:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
      dc:	add	x0, x0, #0x0
      e0:	ldr	x0, [x0]
      e4:	ldr	x1, [x0]
      e8:	ldr	x0, [sp, #8]
      ec:	str	x1, [x0, #40]
      f0:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
      f4:	add	x0, x0, #0x0
      f8:	ldr	x0, [x0]
      fc:	ldr	x1, [sp, #8]
     100:	str	x1, [x0]
     104:	nop
     108:	add	sp, sp, #0x10
     10c:	ret
	...

0000000000000118 <grub_scsi_dev_unregister>:
     118:	sub	sp, sp, #0x20
     11c:	str	x0, [sp, #8]
     120:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     124:	add	x0, x0, #0x0
     128:	ldr	x0, [x0]
     12c:	str	x0, [sp, #24]
     130:	ldr	x0, [sp, #24]
     134:	ldr	x0, [x0]
     138:	str	x0, [sp, #16]
     13c:	b	17c <grub_scsi_dev_unregister+0x64>
     140:	ldr	x1, [sp, #16]
     144:	ldr	x0, [sp, #8]
     148:	cmp	x1, x0
     14c:	b.ne	164 <grub_scsi_dev_unregister+0x4c>  // b.any
     150:	ldr	x0, [sp, #16]
     154:	ldr	x1, [x0, #40]
     158:	ldr	x0, [sp, #24]
     15c:	str	x1, [x0]
     160:	b	18c <grub_scsi_dev_unregister+0x74>
     164:	ldr	x0, [sp, #16]
     168:	add	x0, x0, #0x28
     16c:	str	x0, [sp, #24]
     170:	ldr	x0, [sp, #16]
     174:	ldr	x0, [x0, #40]
     178:	str	x0, [sp, #16]
     17c:	ldr	x0, [sp, #16]
     180:	cmp	x0, #0x0
     184:	b.ne	140 <grub_scsi_dev_unregister+0x28>  // b.any
     188:	nop
     18c:	nop
     190:	add	sp, sp, #0x20
     194:	ret
	...
     1a0:	stp	x29, x30, [sp, #-80]!
     1a4:	mov	x29, sp
     1a8:	str	x0, [sp, #24]
     1ac:	mov	w0, #0x3                   	// #3
     1b0:	strb	w0, [sp, #64]
     1b4:	ldr	x0, [sp, #24]
     1b8:	ldr	w0, [x0, #20]
     1bc:	and	w0, w0, #0xff
     1c0:	ubfiz	w0, w0, #5, #3
     1c4:	and	w0, w0, #0xff
     1c8:	strb	w0, [sp, #65]
     1cc:	strb	wzr, [sp, #66]
     1d0:	strb	wzr, [sp, #67]
     1d4:	mov	w0, #0x12                  	// #18
     1d8:	strb	w0, [sp, #68]
     1dc:	strb	wzr, [sp, #69]
     1e0:	add	x0, sp, #0x40
     1e4:	add	x0, x0, #0x6
     1e8:	mov	x2, #0x6                   	// #6
     1ec:	mov	w1, #0x0                   	// #0
     1f0:	bl	0 <grub_memset>
     1f4:	ldr	x0, [sp, #24]
     1f8:	ldr	x0, [x0]
     1fc:	ldr	x5, [x0, #24]
     200:	add	x1, sp, #0x28
     204:	add	x0, sp, #0x40
     208:	mov	x4, x1
     20c:	mov	x3, #0x12                  	// #18
     210:	mov	x2, x0
     214:	mov	x1, #0xc                   	// #12
     218:	ldr	x0, [sp, #24]
     21c:	blr	x5
     220:	str	w0, [sp, #76]
     224:	ldr	w0, [sp, #76]
     228:	cmp	w0, #0x0
     22c:	b.eq	238 <grub_scsi_dev_unregister+0x120>  // b.none
     230:	ldr	w0, [sp, #76]
     234:	b	23c <grub_scsi_dev_unregister+0x124>
     238:	mov	w0, #0x0                   	// #0
     23c:	ldp	x29, x30, [sp], #80
     240:	ret
     244:	stp	x29, x30, [sp, #-64]!
     248:	mov	x29, sp
     24c:	str	x0, [sp, #24]
     250:	strb	wzr, [sp, #40]
     254:	ldr	x0, [sp, #24]
     258:	ldr	w0, [x0, #20]
     25c:	and	w0, w0, #0xff
     260:	ubfiz	w0, w0, #5, #3
     264:	and	w0, w0, #0xff
     268:	strb	w0, [sp, #41]
     26c:	strb	wzr, [sp, #42]
     270:	strb	wzr, [sp, #43]
     274:	strb	wzr, [sp, #44]
     278:	strb	wzr, [sp, #45]
     27c:	add	x0, sp, #0x28
     280:	add	x0, x0, #0x6
     284:	mov	x2, #0x6                   	// #6
     288:	mov	w1, #0x0                   	// #0
     28c:	bl	0 <grub_memset>
     290:	ldr	x0, [sp, #24]
     294:	ldr	x0, [x0]
     298:	ldr	x5, [x0, #24]
     29c:	add	x0, sp, #0x28
     2a0:	mov	x4, #0x0                   	// #0
     2a4:	mov	x3, #0x0                   	// #0
     2a8:	mov	x2, x0
     2ac:	mov	x1, #0xc                   	// #12
     2b0:	ldr	x0, [sp, #24]
     2b4:	blr	x5
     2b8:	str	w0, [sp, #60]
     2bc:	ldr	x0, [sp, #24]
     2c0:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     2c4:	str	w0, [sp, #56]
     2c8:	ldr	w0, [sp, #56]
     2cc:	cmp	w0, #0x0
     2d0:	b.eq	2e8 <grub_scsi_dev_unregister+0x1d0>  // b.none
     2d4:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     2d8:	add	x0, x0, #0x0
     2dc:	ldr	x0, [x0]
     2e0:	ldr	w1, [sp, #60]
     2e4:	str	w1, [x0]
     2e8:	ldr	w0, [sp, #60]
     2ec:	cmp	w0, #0x0
     2f0:	b.eq	2fc <grub_scsi_dev_unregister+0x1e4>  // b.none
     2f4:	ldr	w0, [sp, #60]
     2f8:	b	300 <grub_scsi_dev_unregister+0x1e8>
     2fc:	mov	w0, #0x0                   	// #0
     300:	ldp	x29, x30, [sp], #64
     304:	ret
	...
     310:	stp	x29, x30, [sp, #-96]!
     314:	mov	x29, sp
     318:	str	x0, [sp, #24]
     31c:	mov	w0, #0x12                  	// #18
     320:	strb	w0, [sp, #72]
     324:	ldr	x0, [sp, #24]
     328:	ldr	w0, [x0, #20]
     32c:	and	w0, w0, #0xff
     330:	ubfiz	w0, w0, #5, #3
     334:	and	w0, w0, #0xff
     338:	strb	w0, [sp, #73]
     33c:	strb	wzr, [sp, #74]
     340:	strb	wzr, [sp, #75]
     344:	mov	w0, #0x24                  	// #36
     348:	strb	w0, [sp, #76]
     34c:	strb	wzr, [sp, #77]
     350:	add	x0, sp, #0x48
     354:	add	x0, x0, #0x6
     358:	mov	x2, #0x6                   	// #6
     35c:	mov	w1, #0x0                   	// #0
     360:	bl	0 <grub_memset>
     364:	ldr	x0, [sp, #24]
     368:	ldr	x0, [x0]
     36c:	ldr	x5, [x0, #24]
     370:	add	x1, sp, #0x20
     374:	add	x0, sp, #0x48
     378:	mov	x4, x1
     37c:	mov	x3, #0x24                  	// #36
     380:	mov	x2, x0
     384:	mov	x1, #0xc                   	// #12
     388:	ldr	x0, [sp, #24]
     38c:	blr	x5
     390:	str	w0, [sp, #92]
     394:	ldr	x0, [sp, #24]
     398:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     39c:	str	w0, [sp, #88]
     3a0:	ldr	w0, [sp, #88]
     3a4:	cmp	w0, #0x0
     3a8:	b.eq	3c0 <grub_scsi_dev_unregister+0x2a8>  // b.none
     3ac:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     3b0:	add	x0, x0, #0x0
     3b4:	ldr	x0, [x0]
     3b8:	ldr	w1, [sp, #92]
     3bc:	str	w1, [x0]
     3c0:	ldr	w0, [sp, #92]
     3c4:	cmp	w0, #0x0
     3c8:	b.eq	3d4 <grub_scsi_dev_unregister+0x2bc>  // b.none
     3cc:	ldr	w0, [sp, #92]
     3d0:	b	404 <grub_scsi_dev_unregister+0x2ec>
     3d4:	ldrb	w0, [sp, #32]
     3d8:	and	w0, w0, #0x1f
     3dc:	and	w1, w0, #0xff
     3e0:	ldr	x0, [sp, #24]
     3e4:	strb	w1, [x0, #8]
     3e8:	ldrb	w0, [sp, #33]
     3ec:	lsr	w0, w0, #7
     3f0:	and	w0, w0, #0xff
     3f4:	mov	w1, w0
     3f8:	ldr	x0, [sp, #24]
     3fc:	str	w1, [x0, #24]
     400:	mov	w0, #0x0                   	// #0
     404:	ldp	x29, x30, [sp], #96
     408:	ret
     40c:	nop
	...
     418:	stp	x29, x30, [sp, #-64]!
     41c:	mov	x29, sp
     420:	str	x0, [sp, #24]
     424:	mov	w0, #0x25                  	// #37
     428:	strb	w0, [sp, #40]
     42c:	ldr	x0, [sp, #24]
     430:	ldr	w0, [x0, #20]
     434:	and	w0, w0, #0xff
     438:	ubfiz	w0, w0, #5, #3
     43c:	and	w0, w0, #0xff
     440:	strb	w0, [sp, #41]
     444:	stur	wzr, [sp, #42]
     448:	strb	wzr, [sp, #46]
     44c:	strb	wzr, [sp, #47]
     450:	strb	wzr, [sp, #48]
     454:	strb	wzr, [sp, #49]
     458:	strh	wzr, [sp, #50]
     45c:	ldr	x0, [sp, #24]
     460:	ldr	x0, [x0]
     464:	ldr	x5, [x0, #24]
     468:	add	x1, sp, #0x20
     46c:	add	x0, sp, #0x28
     470:	mov	x4, x1
     474:	mov	x3, #0x8                   	// #8
     478:	mov	x2, x0
     47c:	mov	x1, #0xc                   	// #12
     480:	ldr	x0, [sp, #24]
     484:	blr	x5
     488:	str	w0, [sp, #60]
     48c:	ldr	x0, [sp, #24]
     490:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     494:	str	w0, [sp, #56]
     498:	ldr	w0, [sp, #56]
     49c:	cmp	w0, #0x0
     4a0:	b.eq	4b8 <grub_scsi_dev_unregister+0x3a0>  // b.none
     4a4:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     4a8:	add	x0, x0, #0x0
     4ac:	ldr	x0, [x0]
     4b0:	ldr	w1, [sp, #60]
     4b4:	str	w1, [x0]
     4b8:	ldr	w0, [sp, #60]
     4bc:	cmp	w0, #0x0
     4c0:	b.eq	4cc <grub_scsi_dev_unregister+0x3b4>  // b.none
     4c4:	ldr	w0, [sp, #60]
     4c8:	b	4f8 <grub_scsi_dev_unregister+0x3e0>
     4cc:	ldr	w0, [sp, #32]
     4d0:	bl	38 <grub_scsi_dev_register-0x98>
     4d4:	mov	w1, w0
     4d8:	ldr	x0, [sp, #24]
     4dc:	str	x1, [x0, #32]
     4e0:	ldr	w0, [sp, #36]
     4e4:	bl	38 <grub_scsi_dev_register-0x98>
     4e8:	mov	w1, w0
     4ec:	ldr	x0, [sp, #24]
     4f0:	str	w1, [x0, #40]
     4f4:	mov	w0, #0x0                   	// #0
     4f8:	ldp	x29, x30, [sp], #64
     4fc:	ret
	...
     508:	stp	x29, x30, [sp, #-96]!
     50c:	mov	x29, sp
     510:	str	x0, [sp, #24]
     514:	mov	w0, #0xffffff9e            	// #-98
     518:	strb	w0, [sp, #72]
     51c:	ldr	x0, [sp, #24]
     520:	ldr	w0, [x0, #20]
     524:	lsl	w0, w0, #5
     528:	sxtb	w0, w0
     52c:	orr	w0, w0, #0x10
     530:	sxtb	w0, w0
     534:	and	w0, w0, #0xff
     538:	strb	w0, [sp, #73]
     53c:	stur	xzr, [sp, #74]
     540:	mov	w0, #0x20000000            	// #536870912
     544:	stur	w0, [sp, #82]
     548:	strb	wzr, [sp, #86]
     54c:	strb	wzr, [sp, #87]
     550:	ldr	x0, [sp, #24]
     554:	ldr	x0, [x0]
     558:	ldr	x5, [x0, #24]
     55c:	add	x1, sp, #0x28
     560:	add	x0, sp, #0x48
     564:	mov	x4, x1
     568:	mov	x3, #0x20                  	// #32
     56c:	mov	x2, x0
     570:	mov	x1, #0x10                  	// #16
     574:	ldr	x0, [sp, #24]
     578:	blr	x5
     57c:	str	w0, [sp, #92]
     580:	ldr	x0, [sp, #24]
     584:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     588:	str	w0, [sp, #88]
     58c:	ldr	w0, [sp, #88]
     590:	cmp	w0, #0x0
     594:	b.eq	5ac <grub_scsi_dev_unregister+0x494>  // b.none
     598:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     59c:	add	x0, x0, #0x0
     5a0:	ldr	x0, [x0]
     5a4:	ldr	w1, [sp, #92]
     5a8:	str	w1, [x0]
     5ac:	ldr	w0, [sp, #92]
     5b0:	cmp	w0, #0x0
     5b4:	b.eq	5c0 <grub_scsi_dev_unregister+0x4a8>  // b.none
     5b8:	ldr	w0, [sp, #92]
     5bc:	b	5ec <grub_scsi_dev_unregister+0x4d4>
     5c0:	ldr	x0, [sp, #40]
     5c4:	bl	50 <grub_scsi_dev_register-0x80>
     5c8:	mov	x1, x0
     5cc:	ldr	x0, [sp, #24]
     5d0:	str	x1, [x0, #32]
     5d4:	ldr	w0, [sp, #48]
     5d8:	bl	38 <grub_scsi_dev_register-0x98>
     5dc:	mov	w1, w0
     5e0:	ldr	x0, [sp, #24]
     5e4:	str	w1, [x0, #40]
     5e8:	mov	w0, #0x0                   	// #0
     5ec:	ldp	x29, x30, [sp], #96
     5f0:	ret
     5f4:	nop
	...
     600:	stp	x29, x30, [sp, #-80]!
     604:	mov	x29, sp
     608:	str	x0, [sp, #40]
     60c:	str	x1, [sp, #32]
     610:	str	x2, [sp, #24]
     614:	str	x3, [sp, #16]
     618:	ldr	x0, [sp, #40]
     61c:	ldr	x0, [x0, #64]
     620:	str	x0, [sp, #72]
     624:	mov	w0, #0x28                  	// #40
     628:	strb	w0, [sp, #48]
     62c:	ldr	x0, [sp, #72]
     630:	ldr	w0, [x0, #20]
     634:	and	w0, w0, #0xff
     638:	ubfiz	w0, w0, #5, #3
     63c:	and	w0, w0, #0xff
     640:	strb	w0, [sp, #49]
     644:	ldr	x0, [sp, #32]
     648:	bl	38 <grub_scsi_dev_register-0x98>
     64c:	stur	w0, [sp, #50]
     650:	strb	wzr, [sp, #54]
     654:	ldr	x0, [sp, #24]
     658:	and	w0, w0, #0xffff
     65c:	bl	0 <grub_scsi_dev_register-0xd0>
     660:	and	w0, w0, #0xffff
     664:	sturh	w0, [sp, #55]
     668:	strb	wzr, [sp, #57]
     66c:	strh	wzr, [sp, #58]
     670:	ldr	x0, [sp, #72]
     674:	ldr	x0, [x0]
     678:	ldr	x5, [x0, #24]
     67c:	ldr	x0, [sp, #72]
     680:	ldr	w0, [x0, #40]
     684:	mov	w1, w0
     688:	ldr	x0, [sp, #24]
     68c:	mul	x1, x1, x0
     690:	add	x0, sp, #0x30
     694:	ldr	x4, [sp, #16]
     698:	mov	x3, x1
     69c:	mov	x2, x0
     6a0:	mov	x1, #0xc                   	// #12
     6a4:	ldr	x0, [sp, #72]
     6a8:	blr	x5
     6ac:	str	w0, [sp, #68]
     6b0:	ldr	x0, [sp, #72]
     6b4:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     6b8:	str	w0, [sp, #64]
     6bc:	ldr	w0, [sp, #64]
     6c0:	cmp	w0, #0x0
     6c4:	b.eq	6dc <grub_scsi_dev_unregister+0x5c4>  // b.none
     6c8:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     6cc:	add	x0, x0, #0x0
     6d0:	ldr	x0, [x0]
     6d4:	ldr	w1, [sp, #68]
     6d8:	str	w1, [x0]
     6dc:	ldr	w0, [sp, #68]
     6e0:	ldp	x29, x30, [sp], #80
     6e4:	ret
	...
     6f0:	stp	x29, x30, [sp, #-80]!
     6f4:	mov	x29, sp
     6f8:	str	x0, [sp, #40]
     6fc:	str	x1, [sp, #32]
     700:	str	x2, [sp, #24]
     704:	str	x3, [sp, #16]
     708:	ldr	x0, [sp, #40]
     70c:	ldr	x0, [x0, #64]
     710:	str	x0, [sp, #72]
     714:	mov	w0, #0xffffffa8            	// #-88
     718:	strb	w0, [sp, #48]
     71c:	ldr	x0, [sp, #72]
     720:	ldr	w0, [x0, #20]
     724:	and	w0, w0, #0xff
     728:	ubfiz	w0, w0, #5, #3
     72c:	and	w0, w0, #0xff
     730:	strb	w0, [sp, #49]
     734:	ldr	x0, [sp, #32]
     738:	bl	38 <grub_scsi_dev_register-0x98>
     73c:	stur	w0, [sp, #50]
     740:	ldr	x0, [sp, #24]
     744:	bl	38 <grub_scsi_dev_register-0x98>
     748:	stur	w0, [sp, #54]
     74c:	strb	wzr, [sp, #58]
     750:	strb	wzr, [sp, #59]
     754:	ldr	x0, [sp, #72]
     758:	ldr	x0, [x0]
     75c:	ldr	x5, [x0, #24]
     760:	ldr	x0, [sp, #72]
     764:	ldr	w0, [x0, #40]
     768:	mov	w1, w0
     76c:	ldr	x0, [sp, #24]
     770:	mul	x1, x1, x0
     774:	add	x0, sp, #0x30
     778:	ldr	x4, [sp, #16]
     77c:	mov	x3, x1
     780:	mov	x2, x0
     784:	mov	x1, #0xc                   	// #12
     788:	ldr	x0, [sp, #72]
     78c:	blr	x5
     790:	str	w0, [sp, #68]
     794:	ldr	x0, [sp, #72]
     798:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     79c:	str	w0, [sp, #64]
     7a0:	ldr	w0, [sp, #64]
     7a4:	cmp	w0, #0x0
     7a8:	b.eq	7c0 <grub_scsi_dev_unregister+0x6a8>  // b.none
     7ac:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     7b0:	add	x0, x0, #0x0
     7b4:	ldr	x0, [x0]
     7b8:	ldr	w1, [sp, #68]
     7bc:	str	w1, [x0]
     7c0:	ldr	w0, [sp, #68]
     7c4:	ldp	x29, x30, [sp], #80
     7c8:	ret
     7cc:	nop
	...
     7d8:	stp	x29, x30, [sp, #-80]!
     7dc:	mov	x29, sp
     7e0:	str	x0, [sp, #40]
     7e4:	str	x1, [sp, #32]
     7e8:	str	x2, [sp, #24]
     7ec:	str	x3, [sp, #16]
     7f0:	ldr	x0, [sp, #40]
     7f4:	ldr	x0, [x0, #64]
     7f8:	str	x0, [sp, #72]
     7fc:	mov	w0, #0xffffff88            	// #-120
     800:	strb	w0, [sp, #48]
     804:	ldr	x0, [sp, #72]
     808:	ldr	w0, [x0, #20]
     80c:	and	w0, w0, #0xff
     810:	ubfiz	w0, w0, #5, #3
     814:	and	w0, w0, #0xff
     818:	strb	w0, [sp, #49]
     81c:	ldr	x0, [sp, #32]
     820:	bl	50 <grub_scsi_dev_register-0x80>
     824:	stur	x0, [sp, #50]
     828:	ldr	x0, [sp, #24]
     82c:	bl	38 <grub_scsi_dev_register-0x98>
     830:	stur	w0, [sp, #58]
     834:	strb	wzr, [sp, #62]
     838:	strb	wzr, [sp, #63]
     83c:	ldr	x0, [sp, #72]
     840:	ldr	x0, [x0]
     844:	ldr	x5, [x0, #24]
     848:	ldr	x0, [sp, #72]
     84c:	ldr	w0, [x0, #40]
     850:	mov	w1, w0
     854:	ldr	x0, [sp, #24]
     858:	mul	x1, x1, x0
     85c:	add	x0, sp, #0x30
     860:	ldr	x4, [sp, #16]
     864:	mov	x3, x1
     868:	mov	x2, x0
     86c:	mov	x1, #0x10                  	// #16
     870:	ldr	x0, [sp, #72]
     874:	blr	x5
     878:	str	w0, [sp, #68]
     87c:	ldr	x0, [sp, #72]
     880:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     884:	str	w0, [sp, #64]
     888:	ldr	w0, [sp, #64]
     88c:	cmp	w0, #0x0
     890:	b.eq	8a8 <grub_scsi_dev_unregister+0x790>  // b.none
     894:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     898:	add	x0, x0, #0x0
     89c:	ldr	x0, [x0]
     8a0:	ldr	w1, [sp, #68]
     8a4:	str	w1, [x0]
     8a8:	ldr	w0, [sp, #68]
     8ac:	ldp	x29, x30, [sp], #80
     8b0:	ret
     8b4:	nop
	...
     8c0:	stp	x29, x30, [sp, #-80]!
     8c4:	mov	x29, sp
     8c8:	str	x0, [sp, #40]
     8cc:	str	x1, [sp, #32]
     8d0:	str	x2, [sp, #24]
     8d4:	str	x3, [sp, #16]
     8d8:	ldr	x0, [sp, #40]
     8dc:	ldr	x0, [x0, #64]
     8e0:	str	x0, [sp, #72]
     8e4:	mov	w0, #0x2a                  	// #42
     8e8:	strb	w0, [sp, #48]
     8ec:	ldr	x0, [sp, #72]
     8f0:	ldr	w0, [x0, #20]
     8f4:	and	w0, w0, #0xff
     8f8:	ubfiz	w0, w0, #5, #3
     8fc:	and	w0, w0, #0xff
     900:	strb	w0, [sp, #49]
     904:	ldr	x0, [sp, #32]
     908:	bl	38 <grub_scsi_dev_register-0x98>
     90c:	stur	w0, [sp, #50]
     910:	strb	wzr, [sp, #54]
     914:	ldr	x0, [sp, #24]
     918:	and	w0, w0, #0xffff
     91c:	bl	0 <grub_scsi_dev_register-0xd0>
     920:	and	w0, w0, #0xffff
     924:	sturh	w0, [sp, #55]
     928:	strb	wzr, [sp, #57]
     92c:	strh	wzr, [sp, #58]
     930:	ldr	x0, [sp, #72]
     934:	ldr	x0, [x0]
     938:	ldr	x5, [x0, #32]
     93c:	ldr	x0, [sp, #72]
     940:	ldr	w0, [x0, #40]
     944:	mov	w1, w0
     948:	ldr	x0, [sp, #24]
     94c:	mul	x1, x1, x0
     950:	add	x0, sp, #0x30
     954:	ldr	x4, [sp, #16]
     958:	mov	x3, x1
     95c:	mov	x2, x0
     960:	mov	x1, #0xc                   	// #12
     964:	ldr	x0, [sp, #72]
     968:	blr	x5
     96c:	str	w0, [sp, #68]
     970:	ldr	x0, [sp, #72]
     974:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     978:	str	w0, [sp, #64]
     97c:	ldr	w0, [sp, #64]
     980:	cmp	w0, #0x0
     984:	b.eq	99c <grub_scsi_dev_unregister+0x884>  // b.none
     988:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     98c:	add	x0, x0, #0x0
     990:	ldr	x0, [x0]
     994:	ldr	w1, [sp, #68]
     998:	str	w1, [x0]
     99c:	ldr	w0, [sp, #68]
     9a0:	ldp	x29, x30, [sp], #80
     9a4:	ret
	...
     9b0:	stp	x29, x30, [sp, #-80]!
     9b4:	mov	x29, sp
     9b8:	str	x0, [sp, #40]
     9bc:	str	x1, [sp, #32]
     9c0:	str	x2, [sp, #24]
     9c4:	str	x3, [sp, #16]
     9c8:	ldr	x0, [sp, #40]
     9cc:	ldr	x0, [x0, #64]
     9d0:	str	x0, [sp, #72]
     9d4:	mov	w0, #0xffffff8a            	// #-118
     9d8:	strb	w0, [sp, #48]
     9dc:	ldr	x0, [sp, #72]
     9e0:	ldr	w0, [x0, #20]
     9e4:	and	w0, w0, #0xff
     9e8:	ubfiz	w0, w0, #5, #3
     9ec:	and	w0, w0, #0xff
     9f0:	strb	w0, [sp, #49]
     9f4:	ldr	x0, [sp, #32]
     9f8:	bl	50 <grub_scsi_dev_register-0x80>
     9fc:	stur	x0, [sp, #50]
     a00:	ldr	x0, [sp, #24]
     a04:	bl	38 <grub_scsi_dev_register-0x98>
     a08:	stur	w0, [sp, #58]
     a0c:	strb	wzr, [sp, #62]
     a10:	strb	wzr, [sp, #63]
     a14:	ldr	x0, [sp, #72]
     a18:	ldr	x0, [x0]
     a1c:	ldr	x5, [x0, #32]
     a20:	ldr	x0, [sp, #72]
     a24:	ldr	w0, [x0, #40]
     a28:	mov	w1, w0
     a2c:	ldr	x0, [sp, #24]
     a30:	mul	x1, x1, x0
     a34:	add	x0, sp, #0x30
     a38:	ldr	x4, [sp, #16]
     a3c:	mov	x3, x1
     a40:	mov	x2, x0
     a44:	mov	x1, #0x10                  	// #16
     a48:	ldr	x0, [sp, #72]
     a4c:	blr	x5
     a50:	str	w0, [sp, #68]
     a54:	ldr	x0, [sp, #72]
     a58:	bl	1a0 <grub_scsi_dev_unregister+0x88>
     a5c:	str	w0, [sp, #64]
     a60:	ldr	w0, [sp, #64]
     a64:	cmp	w0, #0x0
     a68:	b.eq	a80 <grub_scsi_dev_unregister+0x968>  // b.none
     a6c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     a70:	add	x0, x0, #0x0
     a74:	ldr	x0, [x0]
     a78:	ldr	w1, [sp, #68]
     a7c:	str	w1, [x0]
     a80:	ldr	w0, [sp, #68]
     a84:	ldp	x29, x30, [sp], #80
     a88:	ret
     a8c:	nop
	...
     a98:	stp	x29, x30, [sp, #-96]!
     a9c:	mov	x29, sp
     aa0:	str	w0, [sp, #44]
     aa4:	str	w1, [sp, #40]
     aa8:	str	w2, [sp, #36]
     aac:	str	x3, [sp, #24]
     ab0:	ldr	x0, [sp, #24]
     ab4:	str	x0, [sp, #80]
     ab8:	ldr	w0, [sp, #36]
     abc:	cmp	w0, #0x1
     ac0:	b.ne	b44 <grub_scsi_dev_unregister+0xa2c>  // b.any
     ac4:	ldrsw	x1, [sp, #44]
     ac8:	mov	x0, x1
     acc:	lsl	x0, x0, #2
     ad0:	add	x0, x0, x1
     ad4:	adrp	x1, 0 <grub_scsi_dev_register-0xd0>
     ad8:	add	x1, x1, #0x0
     adc:	ldr	x1, [x1]
     ae0:	add	x0, x0, x1
     ae4:	ldr	w2, [sp, #40]
     ae8:	mov	x1, x0
     aec:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     af0:	add	x0, x0, #0x0
     af4:	ldr	x0, [x0]
     af8:	bl	0 <grub_xasprintf>
     afc:	str	x0, [sp, #56]
     b00:	ldr	x0, [sp, #56]
     b04:	cmp	x0, #0x0
     b08:	b.ne	b14 <grub_scsi_dev_unregister+0x9fc>  // b.any
     b0c:	mov	w0, #0x1                   	// #1
     b10:	b	c00 <grub_scsi_dev_unregister+0xae8>
     b14:	ldr	x0, [sp, #80]
     b18:	ldr	x2, [x0]
     b1c:	ldr	x0, [sp, #80]
     b20:	ldr	x0, [x0, #8]
     b24:	mov	x1, x0
     b28:	ldr	x0, [sp, #56]
     b2c:	blr	x2
     b30:	str	w0, [sp, #52]
     b34:	ldr	x0, [sp, #56]
     b38:	bl	0 <grub_free>
     b3c:	ldr	w0, [sp, #52]
     b40:	b	c00 <grub_scsi_dev_unregister+0xae8>
     b44:	str	wzr, [sp, #92]
     b48:	b	bec <grub_scsi_dev_unregister+0xad4>
     b4c:	ldrsw	x1, [sp, #44]
     b50:	mov	x0, x1
     b54:	lsl	x0, x0, #2
     b58:	add	x0, x0, x1
     b5c:	adrp	x1, 0 <grub_scsi_dev_register-0xd0>
     b60:	add	x1, x1, #0x0
     b64:	ldr	x1, [x1]
     b68:	add	x1, x0, x1
     b6c:	ldr	w0, [sp, #92]
     b70:	add	w0, w0, #0x61
     b74:	mov	w3, w0
     b78:	ldr	w2, [sp, #40]
     b7c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     b80:	add	x0, x0, #0x0
     b84:	ldr	x0, [x0]
     b88:	bl	0 <grub_xasprintf>
     b8c:	str	x0, [sp, #72]
     b90:	ldr	x0, [sp, #72]
     b94:	cmp	x0, #0x0
     b98:	b.ne	ba4 <grub_scsi_dev_unregister+0xa8c>  // b.any
     b9c:	mov	w0, #0x1                   	// #1
     ba0:	b	c00 <grub_scsi_dev_unregister+0xae8>
     ba4:	ldr	x0, [sp, #80]
     ba8:	ldr	x2, [x0]
     bac:	ldr	x0, [sp, #80]
     bb0:	ldr	x0, [x0, #8]
     bb4:	mov	x1, x0
     bb8:	ldr	x0, [sp, #72]
     bbc:	blr	x2
     bc0:	str	w0, [sp, #68]
     bc4:	ldr	x0, [sp, #72]
     bc8:	bl	0 <grub_free>
     bcc:	ldr	w0, [sp, #68]
     bd0:	cmp	w0, #0x0
     bd4:	b.eq	be0 <grub_scsi_dev_unregister+0xac8>  // b.none
     bd8:	mov	w0, #0x1                   	// #1
     bdc:	b	c00 <grub_scsi_dev_unregister+0xae8>
     be0:	ldr	w0, [sp, #92]
     be4:	add	w0, w0, #0x1
     be8:	str	w0, [sp, #92]
     bec:	ldr	w1, [sp, #92]
     bf0:	ldr	w0, [sp, #36]
     bf4:	cmp	w1, w0
     bf8:	b.lt	b4c <grub_scsi_dev_unregister+0xa34>  // b.tstop
     bfc:	mov	w0, #0x0                   	// #0
     c00:	ldp	x29, x30, [sp], #96
     c04:	ret
	...
     c20:	stp	x29, x30, [sp, #-80]!
     c24:	mov	x29, sp
     c28:	str	x0, [sp, #40]
     c2c:	str	x1, [sp, #32]
     c30:	str	w2, [sp, #28]
     c34:	ldr	x0, [sp, #40]
     c38:	str	x0, [sp, #56]
     c3c:	ldr	x0, [sp, #32]
     c40:	str	x0, [sp, #64]
     c44:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     c48:	add	x0, x0, #0x0
     c4c:	ldr	x0, [x0]
     c50:	ldr	x0, [x0]
     c54:	str	x0, [sp, #72]
     c58:	b	cac <grub_scsi_dev_unregister+0xb94>
     c5c:	ldr	x0, [sp, #72]
     c60:	ldr	x0, [x0]
     c64:	cmp	x0, #0x0
     c68:	b.eq	ca0 <grub_scsi_dev_unregister+0xb88>  // b.none
     c6c:	ldr	x0, [sp, #72]
     c70:	ldr	x3, [x0]
     c74:	add	x0, sp, #0x38
     c78:	ldr	w2, [sp, #28]
     c7c:	mov	x1, x0
     c80:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     c84:	add	x0, x0, #0x0
     c88:	ldr	x0, [x0]
     c8c:	blr	x3
     c90:	cmp	w0, #0x0
     c94:	b.eq	ca0 <grub_scsi_dev_unregister+0xb88>  // b.none
     c98:	mov	w0, #0x1                   	// #1
     c9c:	b	cbc <grub_scsi_dev_unregister+0xba4>
     ca0:	ldr	x0, [sp, #72]
     ca4:	ldr	x0, [x0, #40]
     ca8:	str	x0, [sp, #72]
     cac:	ldr	x0, [sp, #72]
     cb0:	cmp	x0, #0x0
     cb4:	b.ne	c5c <grub_scsi_dev_unregister+0xb44>  // b.any
     cb8:	mov	w0, #0x0                   	// #0
     cbc:	ldp	x29, x30, [sp], #80
     cc0:	ret
     cc4:	nop
	...
     cd8:	stp	x29, x30, [sp, #-96]!
     cdc:	mov	x29, sp
     ce0:	str	x0, [sp, #24]
     ce4:	str	x1, [sp, #16]
     ce8:	ldr	x0, [sp, #24]
     cec:	bl	0 <grub_strlen>
     cf0:	sub	x0, x0, #0x1
     cf4:	ldr	x1, [sp, #24]
     cf8:	add	x0, x1, x0
     cfc:	str	x0, [sp, #72]
     d00:	ldr	x1, [sp, #72]
     d04:	ldr	x0, [sp, #24]
     d08:	cmp	x1, x0
     d0c:	b.cc	d50 <grub_scsi_dev_unregister+0xc38>  // b.lo, b.ul, b.last
     d10:	ldr	x0, [sp, #72]
     d14:	ldrb	w0, [x0]
     d18:	cmp	w0, #0x60
     d1c:	b.ls	d50 <grub_scsi_dev_unregister+0xc38>  // b.plast
     d20:	ldr	x0, [sp, #72]
     d24:	ldrb	w0, [x0]
     d28:	cmp	w0, #0x7a
     d2c:	b.hi	d50 <grub_scsi_dev_unregister+0xc38>  // b.pmore
     d30:	ldr	x0, [sp, #72]
     d34:	ldrb	w0, [x0]
     d38:	sub	w0, w0, #0x61
     d3c:	str	w0, [sp, #84]
     d40:	ldr	x0, [sp, #72]
     d44:	sub	x0, x0, #0x1
     d48:	str	x0, [sp, #72]
     d4c:	b	d54 <grub_scsi_dev_unregister+0xc3c>
     d50:	str	wzr, [sp, #84]
     d54:	b	d64 <grub_scsi_dev_unregister+0xc4c>
     d58:	ldr	x0, [sp, #72]
     d5c:	sub	x0, x0, #0x1
     d60:	str	x0, [sp, #72]
     d64:	ldr	x1, [sp, #72]
     d68:	ldr	x0, [sp, #24]
     d6c:	cmp	x1, x0
     d70:	b.cc	d88 <grub_scsi_dev_unregister+0xc70>  // b.lo, b.ul, b.last
     d74:	ldr	x0, [sp, #72]
     d78:	ldrb	w0, [x0]
     d7c:	bl	68 <grub_scsi_dev_register-0x68>
     d80:	cmp	w0, #0x0
     d84:	b.ne	d58 <grub_scsi_dev_unregister+0xc40>  // b.any
     d88:	ldr	x0, [sp, #72]
     d8c:	add	x0, x0, #0x1
     d90:	ldrb	w0, [x0]
     d94:	cmp	w0, #0x0
     d98:	b.eq	db4 <grub_scsi_dev_unregister+0xc9c>  // b.none
     d9c:	ldr	x0, [sp, #72]
     da0:	add	x0, x0, #0x1
     da4:	ldrb	w0, [x0]
     da8:	bl	68 <grub_scsi_dev_register-0x68>
     dac:	cmp	w0, #0x0
     db0:	b.ne	dcc <grub_scsi_dev_unregister+0xcb4>  // b.any
     db4:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     db8:	add	x0, x0, #0x0
     dbc:	ldr	x1, [x0]
     dc0:	mov	w0, #0xc                   	// #12
     dc4:	bl	0 <grub_error>
     dc8:	b	131c <grub_scsi_dev_unregister+0x1204>
     dcc:	ldr	x0, [sp, #72]
     dd0:	add	x0, x0, #0x1
     dd4:	mov	w2, #0x0                   	// #0
     dd8:	mov	x1, #0x0                   	// #0
     ddc:	bl	0 <grub_strtoul>
     de0:	str	w0, [sp, #64]
     de4:	mov	x0, #0x38                  	// #56
     de8:	bl	0 <grub_malloc>
     dec:	str	x0, [sp, #56]
     df0:	ldr	x0, [sp, #56]
     df4:	cmp	x0, #0x0
     df8:	b.ne	e10 <grub_scsi_dev_unregister+0xcf8>  // b.any
     dfc:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     e00:	add	x0, x0, #0x0
     e04:	ldr	x0, [x0]
     e08:	ldr	w0, [x0]
     e0c:	b	131c <grub_scsi_dev_unregister+0x1204>
     e10:	str	wzr, [sp, #68]
     e14:	b	e68 <grub_scsi_dev_unregister+0xd50>
     e18:	ldr	w1, [sp, #68]
     e1c:	mov	x0, x1
     e20:	lsl	x0, x0, #2
     e24:	add	x0, x0, x1
     e28:	adrp	x1, 0 <grub_scsi_dev_register-0xd0>
     e2c:	add	x1, x1, #0x0
     e30:	ldr	x1, [x1]
     e34:	add	x3, x0, x1
     e38:	ldr	x1, [sp, #72]
     e3c:	ldr	x0, [sp, #24]
     e40:	sub	x0, x1, x0
     e44:	mov	x2, x0
     e48:	ldr	x1, [sp, #24]
     e4c:	mov	x0, x3
     e50:	bl	0 <grub_strncmp>
     e54:	cmp	w0, #0x0
     e58:	b.eq	e78 <grub_scsi_dev_unregister+0xd60>  // b.none
     e5c:	ldr	w0, [sp, #68]
     e60:	add	w0, w0, #0x1
     e64:	str	w0, [sp, #68]
     e68:	ldr	w0, [sp, #68]
     e6c:	cmp	w0, #0x2
     e70:	b.ls	e18 <grub_scsi_dev_unregister+0xd00>  // b.plast
     e74:	b	e7c <grub_scsi_dev_unregister+0xd64>
     e78:	nop
     e7c:	ldr	w0, [sp, #68]
     e80:	cmp	w0, #0x3
     e84:	b.ne	ea8 <grub_scsi_dev_unregister+0xd90>  // b.any
     e88:	ldr	x0, [sp, #56]
     e8c:	bl	0 <grub_free>
     e90:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     e94:	add	x0, x0, #0x0
     e98:	ldr	x1, [x0]
     e9c:	mov	w0, #0xc                   	// #12
     ea0:	bl	0 <grub_error>
     ea4:	b	131c <grub_scsi_dev_unregister+0x1204>
     ea8:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     eac:	add	x0, x0, #0x0
     eb0:	ldr	x0, [x0]
     eb4:	ldr	x0, [x0]
     eb8:	str	x0, [sp, #88]
     ebc:	b	12f4 <grub_scsi_dev_unregister+0x11dc>
     ec0:	ldr	x0, [sp, #88]
     ec4:	ldr	x3, [x0, #8]
     ec8:	ldr	w0, [sp, #68]
     ecc:	ldr	x2, [sp, #56]
     ed0:	ldr	w1, [sp, #64]
     ed4:	blr	x3
     ed8:	cmp	w0, #0x0
     edc:	b.eq	f00 <grub_scsi_dev_unregister+0xde8>  // b.none
     ee0:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     ee4:	add	x0, x0, #0x0
     ee8:	ldr	x0, [x0]
     eec:	str	wzr, [x0]
     ef0:	ldr	x0, [sp, #88]
     ef4:	ldr	x0, [x0, #40]
     ef8:	str	x0, [sp, #88]
     efc:	b	12f4 <grub_scsi_dev_unregister+0x11dc>
     f00:	ldr	w0, [sp, #68]
     f04:	ldr	w2, [sp, #84]
     f08:	ldr	w1, [sp, #64]
     f0c:	bl	9c <grub_scsi_dev_register-0x34>
     f10:	mov	w1, w0
     f14:	ldr	x0, [sp, #16]
     f18:	str	x1, [x0, #32]
     f1c:	ldr	x0, [sp, #16]
     f20:	ldr	x1, [sp, #56]
     f24:	str	x1, [x0, #64]
     f28:	ldr	x0, [sp, #56]
     f2c:	ldr	x1, [sp, #88]
     f30:	str	x1, [x0]
     f34:	ldr	x0, [sp, #56]
     f38:	ldr	w1, [sp, #84]
     f3c:	str	w1, [x0, #20]
     f40:	ldr	x0, [sp, #56]
     f44:	ldr	w1, [sp, #64]
     f48:	str	w1, [x0, #12]
     f4c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     f50:	add	x0, x0, #0x0
     f54:	ldr	x3, [x0]
     f58:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     f5c:	add	x0, x0, #0x0
     f60:	ldr	x2, [x0]
     f64:	mov	w1, #0x21e                 	// #542
     f68:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     f6c:	add	x0, x0, #0x0
     f70:	ldr	x0, [x0]
     f74:	bl	0 <grub_real_dprintf>
     f78:	ldr	x0, [sp, #56]
     f7c:	bl	310 <grub_scsi_dev_unregister+0x1f8>
     f80:	str	w0, [sp, #52]
     f84:	ldr	w0, [sp, #52]
     f88:	cmp	w0, #0x0
     f8c:	b.eq	fcc <grub_scsi_dev_unregister+0xeb4>  // b.none
     f90:	ldr	x0, [sp, #56]
     f94:	bl	0 <grub_free>
     f98:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     f9c:	add	x0, x0, #0x0
     fa0:	ldr	x3, [x0]
     fa4:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     fa8:	add	x0, x0, #0x0
     fac:	ldr	x2, [x0]
     fb0:	mov	w1, #0x224                 	// #548
     fb4:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     fb8:	add	x0, x0, #0x0
     fbc:	ldr	x0, [x0]
     fc0:	bl	0 <grub_real_dprintf>
     fc4:	ldr	w0, [sp, #52]
     fc8:	b	131c <grub_scsi_dev_unregister+0x1204>
     fcc:	ldr	x0, [sp, #56]
     fd0:	ldrb	w0, [x0, #8]
     fd4:	mov	w1, w0
     fd8:	ldr	x0, [sp, #56]
     fdc:	ldr	w0, [x0, #24]
     fe0:	mov	w5, w0
     fe4:	mov	w4, w1
     fe8:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     fec:	add	x0, x0, #0x0
     ff0:	ldr	x3, [x0]
     ff4:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
     ff8:	add	x0, x0, #0x0
     ffc:	ldr	x2, [x0]
    1000:	mov	w1, #0x228                 	// #552
    1004:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1008:	add	x0, x0, #0x0
    100c:	ldr	x0, [x0]
    1010:	bl	0 <grub_real_dprintf>
    1014:	ldr	x0, [sp, #56]
    1018:	ldrb	w0, [x0, #8]
    101c:	cmp	w0, #0x0
    1020:	b.eq	1054 <grub_scsi_dev_unregister+0xf3c>  // b.none
    1024:	ldr	x0, [sp, #56]
    1028:	ldrb	w0, [x0, #8]
    102c:	cmp	w0, #0x5
    1030:	b.eq	1054 <grub_scsi_dev_unregister+0xf3c>  // b.none
    1034:	ldr	x0, [sp, #56]
    1038:	bl	0 <grub_free>
    103c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1040:	add	x0, x0, #0x0
    1044:	ldr	x1, [x0]
    1048:	mov	w0, #0xc                   	// #12
    104c:	bl	0 <grub_error>
    1050:	b	131c <grub_scsi_dev_unregister+0x1204>
    1054:	bl	0 <grub_get_time_ms>
    1058:	mov	x1, x0
    105c:	mov	x0, #0x1388                	// #5000
    1060:	add	x0, x1, x0
    1064:	str	x0, [sp, #40]
    1068:	bl	0 <grub_get_time_ms>
    106c:	mov	x1, x0
    1070:	ldr	x0, [sp, #40]
    1074:	cmp	x0, x1
    1078:	b.cs	10c0 <grub_scsi_dev_unregister+0xfa8>  // b.hs, b.nlast
    107c:	mov	w0, #0xe                   	// #14
    1080:	str	w0, [sp, #52]
    1084:	ldr	x0, [sp, #56]
    1088:	bl	0 <grub_free>
    108c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1090:	add	x0, x0, #0x0
    1094:	ldr	x3, [x0]
    1098:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    109c:	add	x0, x0, #0x0
    10a0:	ldr	x2, [x0]
    10a4:	mov	w1, #0x242                 	// #578
    10a8:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    10ac:	add	x0, x0, #0x0
    10b0:	ldr	x0, [x0]
    10b4:	bl	0 <grub_real_dprintf>
    10b8:	ldr	w0, [sp, #52]
    10bc:	b	131c <grub_scsi_dev_unregister+0x1204>
    10c0:	ldr	x0, [sp, #56]
    10c4:	bl	244 <grub_scsi_dev_unregister+0x12c>
    10c8:	str	w0, [sp, #52]
    10cc:	ldr	w0, [sp, #52]
    10d0:	cmp	w0, #0xe
    10d4:	b.eq	1068 <grub_scsi_dev_unregister+0xf50>  // b.none
    10d8:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    10dc:	add	x0, x0, #0x0
    10e0:	ldr	x0, [x0]
    10e4:	str	wzr, [x0]
    10e8:	ldr	x0, [sp, #56]
    10ec:	bl	418 <grub_scsi_dev_unregister+0x300>
    10f0:	str	w0, [sp, #52]
    10f4:	ldr	w0, [sp, #52]
    10f8:	cmp	w0, #0x0
    10fc:	b.eq	113c <grub_scsi_dev_unregister+0x1024>  // b.none
    1100:	ldr	x0, [sp, #56]
    1104:	bl	0 <grub_free>
    1108:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    110c:	add	x0, x0, #0x0
    1110:	ldr	x3, [x0]
    1114:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1118:	add	x0, x0, #0x0
    111c:	ldr	x2, [x0]
    1120:	mov	w1, #0x251                 	// #593
    1124:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1128:	add	x0, x0, #0x0
    112c:	ldr	x0, [x0]
    1130:	bl	0 <grub_real_dprintf>
    1134:	ldr	w0, [sp, #52]
    1138:	b	131c <grub_scsi_dev_unregister+0x1204>
    113c:	ldr	x0, [sp, #56]
    1140:	ldr	x1, [x0, #32]
    1144:	mov	x0, #0xffffffff            	// #4294967295
    1148:	cmp	x1, x0
    114c:	b.ne	11a4 <grub_scsi_dev_unregister+0x108c>  // b.any
    1150:	ldr	x0, [sp, #56]
    1154:	bl	508 <grub_scsi_dev_unregister+0x3f0>
    1158:	str	w0, [sp, #52]
    115c:	ldr	w0, [sp, #52]
    1160:	cmp	w0, #0x0
    1164:	b.eq	11a4 <grub_scsi_dev_unregister+0x108c>  // b.none
    1168:	ldr	x0, [sp, #56]
    116c:	bl	0 <grub_free>
    1170:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1174:	add	x0, x0, #0x0
    1178:	ldr	x3, [x0]
    117c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1180:	add	x0, x0, #0x0
    1184:	ldr	x2, [x0]
    1188:	mov	w1, #0x25b                 	// #603
    118c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1190:	add	x0, x0, #0x0
    1194:	ldr	x0, [x0]
    1198:	bl	0 <grub_real_dprintf>
    119c:	ldr	w0, [sp, #52]
    11a0:	b	131c <grub_scsi_dev_unregister+0x1204>
    11a4:	ldr	x0, [sp, #56]
    11a8:	ldr	x0, [x0, #32]
    11ac:	add	x1, x0, #0x1
    11b0:	ldr	x0, [sp, #16]
    11b4:	str	x1, [x0, #16]
    11b8:	ldr	x0, [sp, #16]
    11bc:	mov	w1, #0x1                   	// #1
    11c0:	str	w1, [x0, #28]
    11c4:	ldr	x0, [sp, #56]
    11c8:	ldr	w1, [x0, #40]
    11cc:	ldr	x0, [sp, #56]
    11d0:	ldr	w0, [x0, #40]
    11d4:	sub	w0, w0, #0x1
    11d8:	and	w0, w1, w0
    11dc:	cmp	w0, #0x0
    11e0:	b.ne	11f4 <grub_scsi_dev_unregister+0x10dc>  // b.any
    11e4:	ldr	x0, [sp, #56]
    11e8:	ldr	w0, [x0, #40]
    11ec:	cmp	w0, #0x0
    11f0:	b.ne	1230 <grub_scsi_dev_unregister+0x1118>  // b.any
    11f4:	ldr	x0, [sp, #56]
    11f8:	ldr	w0, [x0, #40]
    11fc:	mov	w2, w0
    1200:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1204:	add	x0, x0, #0x0
    1208:	ldr	x1, [x0]
    120c:	mov	w0, #0x1d                  	// #29
    1210:	bl	0 <grub_error>
    1214:	ldr	x0, [sp, #56]
    1218:	bl	0 <grub_free>
    121c:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1220:	add	x0, x0, #0x0
    1224:	ldr	x0, [x0]
    1228:	ldr	w0, [x0]
    122c:	b	131c <grub_scsi_dev_unregister+0x1204>
    1230:	ldr	x0, [sp, #16]
    1234:	str	wzr, [x0, #24]
    1238:	b	1250 <grub_scsi_dev_unregister+0x1138>
    123c:	ldr	x0, [sp, #16]
    1240:	ldr	w0, [x0, #24]
    1244:	add	w1, w0, #0x1
    1248:	ldr	x0, [sp, #16]
    124c:	str	w1, [x0, #24]
    1250:	ldr	x0, [sp, #16]
    1254:	ldr	w0, [x0, #24]
    1258:	mov	w1, #0x1                   	// #1
    125c:	lsl	w1, w1, w0
    1260:	ldr	x0, [sp, #56]
    1264:	ldr	w0, [x0, #40]
    1268:	cmp	w1, w0
    126c:	b.cc	123c <grub_scsi_dev_unregister+0x1124>  // b.lo, b.ul, b.last
    1270:	ldr	x0, [sp, #56]
    1274:	ldr	x1, [x0, #32]
    1278:	ldr	x0, [sp, #56]
    127c:	ldr	w0, [x0, #40]
    1280:	mov	w5, w0
    1284:	mov	x4, x1
    1288:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    128c:	add	x0, x0, #0x0
    1290:	ldr	x3, [x0]
    1294:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    1298:	add	x0, x0, #0x0
    129c:	ldr	x2, [x0]
    12a0:	mov	w1, #0x273                 	// #627
    12a4:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    12a8:	add	x0, x0, #0x0
    12ac:	ldr	x0, [x0]
    12b0:	bl	0 <grub_real_dprintf>
    12b4:	ldr	x0, [sp, #16]
    12b8:	ldr	x0, [x0, #16]
    12bc:	mov	x4, x0
    12c0:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    12c4:	add	x0, x0, #0x0
    12c8:	ldr	x3, [x0]
    12cc:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    12d0:	add	x0, x0, #0x0
    12d4:	ldr	x2, [x0]
    12d8:	mov	w1, #0x275                 	// #629
    12dc:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    12e0:	add	x0, x0, #0x0
    12e4:	ldr	x0, [x0]
    12e8:	bl	0 <grub_real_dprintf>
    12ec:	mov	w0, #0x0                   	// #0
    12f0:	b	131c <grub_scsi_dev_unregister+0x1204>
    12f4:	ldr	x0, [sp, #88]
    12f8:	cmp	x0, #0x0
    12fc:	b.ne	ec0 <grub_scsi_dev_unregister+0xda8>  // b.any
    1300:	ldr	x0, [sp, #56]
    1304:	bl	0 <grub_free>
    1308:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    130c:	add	x0, x0, #0x0
    1310:	ldr	x1, [x0]
    1314:	mov	w0, #0xc                   	// #12
    1318:	bl	0 <grub_error>
    131c:	ldp	x29, x30, [sp], #96
    1320:	ret
    1324:	nop
	...
    13a8:	stp	x29, x30, [sp, #-48]!
    13ac:	mov	x29, sp
    13b0:	str	x0, [sp, #24]
    13b4:	ldr	x0, [sp, #24]
    13b8:	ldr	x0, [x0, #64]
    13bc:	str	x0, [sp, #40]
    13c0:	ldr	x0, [sp, #40]
    13c4:	ldr	x0, [x0]
    13c8:	ldr	x0, [x0, #16]
    13cc:	cmp	x0, #0x0
    13d0:	b.eq	13e8 <grub_scsi_dev_unregister+0x12d0>  // b.none
    13d4:	ldr	x0, [sp, #40]
    13d8:	ldr	x0, [x0]
    13dc:	ldr	x1, [x0, #16]
    13e0:	ldr	x0, [sp, #40]
    13e4:	blr	x1
    13e8:	ldr	x0, [sp, #40]
    13ec:	bl	0 <grub_free>
    13f0:	nop
    13f4:	ldp	x29, x30, [sp], #48
    13f8:	ret
    13fc:	stp	x29, x30, [sp, #-64]!
    1400:	mov	x29, sp
    1404:	str	x0, [sp, #40]
    1408:	str	x1, [sp, #32]
    140c:	str	x2, [sp, #24]
    1410:	str	x3, [sp, #16]
    1414:	ldr	x0, [sp, #40]
    1418:	ldr	x0, [x0, #64]
    141c:	str	x0, [sp, #48]
    1420:	ldr	x0, [sp, #48]
    1424:	ldrb	w0, [x0, #8]
    1428:	cmp	w0, #0x0
    142c:	b.eq	143c <grub_scsi_dev_unregister+0x1324>  // b.none
    1430:	cmp	w0, #0x5
    1434:	b.eq	1494 <grub_scsi_dev_unregister+0x137c>  // b.none
    1438:	b	14f8 <grub_scsi_dev_unregister+0x13e0>
    143c:	ldr	x0, [sp, #32]
    1440:	lsr	x0, x0, #32
    1444:	cmp	x0, #0x0
    1448:	b.eq	1468 <grub_scsi_dev_unregister+0x1350>  // b.none
    144c:	ldr	x3, [sp, #16]
    1450:	ldr	x2, [sp, #24]
    1454:	ldr	x1, [sp, #32]
    1458:	ldr	x0, [sp, #40]
    145c:	bl	7d8 <grub_scsi_dev_unregister+0x6c0>
    1460:	str	w0, [sp, #60]
    1464:	b	1480 <grub_scsi_dev_unregister+0x1368>
    1468:	ldr	x3, [sp, #16]
    146c:	ldr	x2, [sp, #24]
    1470:	ldr	x1, [sp, #32]
    1474:	ldr	x0, [sp, #40]
    1478:	bl	600 <grub_scsi_dev_unregister+0x4e8>
    147c:	str	w0, [sp, #60]
    1480:	ldr	w0, [sp, #60]
    1484:	cmp	w0, #0x0
    1488:	b.eq	14ec <grub_scsi_dev_unregister+0x13d4>  // b.none
    148c:	ldr	w0, [sp, #60]
    1490:	b	14fc <grub_scsi_dev_unregister+0x13e4>
    1494:	ldr	x0, [sp, #32]
    1498:	lsr	x0, x0, #32
    149c:	cmp	x0, #0x0
    14a0:	b.eq	14c0 <grub_scsi_dev_unregister+0x13a8>  // b.none
    14a4:	ldr	x3, [sp, #16]
    14a8:	ldr	x2, [sp, #24]
    14ac:	ldr	x1, [sp, #32]
    14b0:	ldr	x0, [sp, #40]
    14b4:	bl	7d8 <grub_scsi_dev_unregister+0x6c0>
    14b8:	str	w0, [sp, #60]
    14bc:	b	14d8 <grub_scsi_dev_unregister+0x13c0>
    14c0:	ldr	x3, [sp, #16]
    14c4:	ldr	x2, [sp, #24]
    14c8:	ldr	x1, [sp, #32]
    14cc:	ldr	x0, [sp, #40]
    14d0:	bl	6f0 <grub_scsi_dev_unregister+0x5d8>
    14d4:	str	w0, [sp, #60]
    14d8:	ldr	w0, [sp, #60]
    14dc:	cmp	w0, #0x0
    14e0:	b.eq	14f4 <grub_scsi_dev_unregister+0x13dc>  // b.none
    14e4:	ldr	w0, [sp, #60]
    14e8:	b	14fc <grub_scsi_dev_unregister+0x13e4>
    14ec:	nop
    14f0:	b	14f8 <grub_scsi_dev_unregister+0x13e0>
    14f4:	nop
    14f8:	mov	w0, #0x0                   	// #0
    14fc:	ldp	x29, x30, [sp], #64
    1500:	ret
    1504:	stp	x29, x30, [sp, #-64]!
    1508:	mov	x29, sp
    150c:	str	x0, [sp, #40]
    1510:	str	x1, [sp, #32]
    1514:	str	x2, [sp, #24]
    1518:	str	x3, [sp, #16]
    151c:	ldr	x0, [sp, #40]
    1520:	ldr	x0, [x0, #64]
    1524:	str	x0, [sp, #48]
    1528:	ldr	x0, [sp, #48]
    152c:	ldrb	w0, [x0, #8]
    1530:	cmp	w0, #0x5
    1534:	b.ne	1550 <grub_scsi_dev_unregister+0x1438>  // b.any
    1538:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    153c:	add	x0, x0, #0x0
    1540:	ldr	x1, [x0]
    1544:	mov	w0, #0x1d                  	// #29
    1548:	bl	0 <grub_error>
    154c:	b	15c0 <grub_scsi_dev_unregister+0x14a8>
    1550:	ldr	x0, [sp, #48]
    1554:	ldrb	w0, [x0, #8]
    1558:	cmp	w0, #0x0
    155c:	b.ne	15bc <grub_scsi_dev_unregister+0x14a4>  // b.any
    1560:	ldr	x0, [sp, #32]
    1564:	lsr	x0, x0, #32
    1568:	cmp	x0, #0x0
    156c:	b.eq	158c <grub_scsi_dev_unregister+0x1474>  // b.none
    1570:	ldr	x3, [sp, #16]
    1574:	ldr	x2, [sp, #24]
    1578:	ldr	x1, [sp, #32]
    157c:	ldr	x0, [sp, #40]
    1580:	bl	9b0 <grub_scsi_dev_unregister+0x898>
    1584:	str	w0, [sp, #60]
    1588:	b	15a4 <grub_scsi_dev_unregister+0x148c>
    158c:	ldr	x3, [sp, #16]
    1590:	ldr	x2, [sp, #24]
    1594:	ldr	x1, [sp, #32]
    1598:	ldr	x0, [sp, #40]
    159c:	bl	8c0 <grub_scsi_dev_unregister+0x7a8>
    15a0:	str	w0, [sp, #60]
    15a4:	ldr	w0, [sp, #60]
    15a8:	cmp	w0, #0x0
    15ac:	b.eq	15b8 <grub_scsi_dev_unregister+0x14a0>  // b.none
    15b0:	ldr	w0, [sp, #60]
    15b4:	b	15c0 <grub_scsi_dev_unregister+0x14a8>
    15b8:	nop
    15bc:	mov	w0, #0x0                   	// #0
    15c0:	ldp	x29, x30, [sp], #64
    15c4:	ret
	...

00000000000015d0 <grub_mod_init>:
    15d0:	stp	x29, x30, [sp, #-32]!
    15d4:	mov	x29, sp
    15d8:	str	x0, [sp, #24]
    15dc:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    15e0:	add	x0, x0, #0x0
    15e4:	ldr	x0, [x0]
    15e8:	bl	0 <grub_disk_dev_register>
    15ec:	nop
    15f0:	ldp	x29, x30, [sp], #32
    15f4:	ret
	...

0000000000001600 <grub_mod_fini>:
    1600:	stp	x29, x30, [sp, #-16]!
    1604:	mov	x29, sp
    1608:	adrp	x0, 0 <grub_scsi_dev_register-0xd0>
    160c:	add	x0, x0, #0x0
    1610:	ldr	x0, [x0]
    1614:	bl	0 <grub_disk_dev_unregister>
    1618:	nop
    161c:	ldp	x29, x30, [sp], #16
    1620:	ret
    1624:	nop
	...
