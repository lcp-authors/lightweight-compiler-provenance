
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0x29e0>:
    2940:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	nop
    2958:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    295c:	add	x0, x0, #0x948
    2960:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    2964:	add	x1, x1, #0x948
    2968:	cmp	x1, x0
    296c:	b.eq	2984 <PyThread_free_lock@plt+0x54>  // b.none
    2970:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    2974:	ldr	x1, [x1, #3952]
    2978:	cbz	x1, 2984 <PyThread_free_lock@plt+0x54>
    297c:	mov	x16, x1
    2980:	br	x16
    2984:	ret
    2988:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    298c:	add	x0, x0, #0x948
    2990:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    2994:	add	x1, x1, #0x948
    2998:	sub	x1, x1, x0
    299c:	lsr	x2, x1, #63
    29a0:	add	x1, x2, x1, asr #3
    29a4:	cmp	xzr, x1, asr #1
    29a8:	asr	x1, x1, #1
    29ac:	b.eq	29c4 <PyThread_free_lock@plt+0x94>  // b.none
    29b0:	adrp	x2, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    29b4:	ldr	x2, [x2, #4064]
    29b8:	cbz	x2, 29c4 <PyThread_free_lock@plt+0x94>
    29bc:	mov	x16, x2
    29c0:	br	x16
    29c4:	ret
    29c8:	stp	x29, x30, [sp, #-32]!
    29cc:	mov	x29, sp
    29d0:	str	x19, [sp, #16]
    29d4:	adrp	x19, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    29d8:	ldrb	w0, [x19, #2376]
    29dc:	cbnz	w0, 2a04 <PyThread_free_lock@plt+0xd4>
    29e0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    29e4:	ldr	x0, [x0, #3968]
    29e8:	cbz	x0, 29f8 <PyThread_free_lock@plt+0xc8>
    29ec:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    29f0:	ldr	x0, [x0, #560]
    29f4:	bl	25c0 <__cxa_finalize@plt>
    29f8:	bl	2958 <PyThread_free_lock@plt+0x28>
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	strb	w0, [x19, #2376]
    2a04:	ldr	x19, [sp, #16]
    2a08:	ldp	x29, x30, [sp], #32
    2a0c:	ret
    2a10:	b	2988 <PyThread_free_lock@plt+0x58>
    2a14:	nop
    2a18:	stp	x29, x30, [sp, #-32]!
    2a1c:	mov	x29, sp
    2a20:	stp	x19, x20, [sp, #16]
    2a24:	mov	x19, x0
    2a28:	mov	x20, x1
    2a2c:	mov	x0, #0x10                  	// #16
    2a30:	bl	2910 <PyMem_Malloc@plt>
    2a34:	cbz	x0, 2a80 <PyThread_free_lock@plt+0x150>
    2a38:	ldr	x1, [x19, #16]
    2a3c:	adrp	x2, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    2a40:	ldr	d0, [x19, #24]
    2a44:	add	x2, x2, #0xda8
    2a48:	str	x1, [x0]
    2a4c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    2a50:	ldr	x3, [x19]
    2a54:	str	d0, [x0, #8]
    2a58:	str	x0, [x20]
    2a5c:	ldr	x1, [x1, #3960]
    2a60:	add	x0, x3, #0x1
    2a64:	str	x0, [x19]
    2a68:	mov	w0, #0x0                   	// #0
    2a6c:	str	x19, [x20, #8]
    2a70:	stp	x2, x1, [x20, #24]
    2a74:	ldp	x19, x20, [sp, #16]
    2a78:	ldp	x29, x30, [sp], #32
    2a7c:	ret
    2a80:	mov	w0, #0xffffffff            	// #-1
    2a84:	b	2a74 <PyThread_free_lock@plt+0x144>
    2a88:	mov	x1, x0
    2a8c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2a90:	add	x0, x0, #0x5a0
    2a94:	ldr	x1, [x1, #16]
    2a98:	b	24f0 <PyUnicode_FromFormat@plt>
    2a9c:	nop
    2aa0:	mov	x0, #0x0                   	// #0
    2aa4:	b	2810 <_PyInterpreterID_New@plt>
    2aa8:	stp	x29, x30, [sp, #-16]!
    2aac:	mov	x29, sp
    2ab0:	bl	2800 <_PyInterpreterState_Get@plt>
    2ab4:	cbz	x0, 2ac0 <PyThread_free_lock@plt+0x190>
    2ab8:	ldp	x29, x30, [sp], #16
    2abc:	b	2620 <_PyInterpreterState_GetIDObject@plt>
    2ac0:	ldp	x29, x30, [sp], #16
    2ac4:	ret
    2ac8:	stp	x29, x30, [sp, #-48]!
    2acc:	mov	x0, #0x0                   	// #0
    2ad0:	mov	x29, sp
    2ad4:	stp	x21, x22, [sp, #32]
    2ad8:	bl	2500 <PyList_New@plt>
    2adc:	cbz	x0, 2b64 <PyThread_free_lock@plt+0x234>
    2ae0:	mov	x22, x0
    2ae4:	stp	x19, x20, [sp, #16]
    2ae8:	bl	28f0 <PyInterpreterState_Head@plt>
    2aec:	mov	x20, x0
    2af0:	cbnz	x0, 2b0c <PyThread_free_lock@plt+0x1dc>
    2af4:	b	2b78 <PyThread_free_lock@plt+0x248>
    2af8:	mov	x0, x20
    2afc:	tbnz	w21, #31, 2b50 <PyThread_free_lock@plt+0x220>
    2b00:	bl	25f0 <PyInterpreterState_Next@plt>
    2b04:	mov	x20, x0
    2b08:	cbz	x0, 2b78 <PyThread_free_lock@plt+0x248>
    2b0c:	mov	x0, x20
    2b10:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    2b14:	mov	x19, x0
    2b18:	mov	x1, #0x0                   	// #0
    2b1c:	mov	x0, x22
    2b20:	mov	x2, x19
    2b24:	cbz	x19, 2b50 <PyThread_free_lock@plt+0x220>
    2b28:	bl	2580 <PyList_Insert@plt>
    2b2c:	mov	w21, w0
    2b30:	ldr	x1, [x19]
    2b34:	sub	x1, x1, #0x1
    2b38:	str	x1, [x19]
    2b3c:	cbnz	x1, 2af8 <PyThread_free_lock@plt+0x1c8>
    2b40:	mov	x0, x19
    2b44:	bl	25e0 <_Py_Dealloc@plt>
    2b48:	mov	x0, x20
    2b4c:	tbz	w21, #31, 2b00 <PyThread_free_lock@plt+0x1d0>
    2b50:	ldr	x0, [x22]
    2b54:	sub	x0, x0, #0x1
    2b58:	str	x0, [x22]
    2b5c:	cbz	x0, 2b8c <PyThread_free_lock@plt+0x25c>
    2b60:	ldp	x19, x20, [sp, #16]
    2b64:	mov	x22, #0x0                   	// #0
    2b68:	mov	x0, x22
    2b6c:	ldp	x21, x22, [sp, #32]
    2b70:	ldp	x29, x30, [sp], #48
    2b74:	ret
    2b78:	mov	x0, x22
    2b7c:	ldp	x19, x20, [sp, #16]
    2b80:	ldp	x21, x22, [sp, #32]
    2b84:	ldp	x29, x30, [sp], #48
    2b88:	ret
    2b8c:	mov	x0, x22
    2b90:	mov	x22, #0x0                   	// #0
    2b94:	bl	25e0 <_Py_Dealloc@plt>
    2b98:	mov	x0, x22
    2b9c:	ldp	x19, x20, [sp, #16]
    2ba0:	ldp	x21, x22, [sp, #32]
    2ba4:	ldp	x29, x30, [sp], #48
    2ba8:	ret
    2bac:	nop
    2bb0:	ldr	x0, [x0, #16]
    2bb4:	b	28e0 <PyLong_FromLongLong@plt>
    2bb8:	stp	x29, x30, [sp, #-32]!
    2bbc:	mov	x29, sp
    2bc0:	ldr	x0, [x0, #16]
    2bc4:	stp	x19, x20, [sp, #16]
    2bc8:	bl	28e0 <PyLong_FromLongLong@plt>
    2bcc:	cbz	x0, 2c14 <PyThread_free_lock@plt+0x2e4>
    2bd0:	mov	x19, x0
    2bd4:	bl	27a0 <PyObject_Hash@plt>
    2bd8:	mov	x20, x0
    2bdc:	ldr	x1, [x19]
    2be0:	sub	x1, x1, #0x1
    2be4:	str	x1, [x19]
    2be8:	cbz	x1, 2bfc <PyThread_free_lock@plt+0x2cc>
    2bec:	mov	x0, x20
    2bf0:	ldp	x19, x20, [sp, #16]
    2bf4:	ldp	x29, x30, [sp], #32
    2bf8:	ret
    2bfc:	mov	x0, x19
    2c00:	bl	25e0 <_Py_Dealloc@plt>
    2c04:	mov	x0, x20
    2c08:	ldp	x19, x20, [sp, #16]
    2c0c:	ldp	x29, x30, [sp], #32
    2c10:	ret
    2c14:	mov	x20, #0xffffffffffffffff    	// #-1
    2c18:	b	2bec <PyThread_free_lock@plt+0x2bc>
    2c1c:	nop
    2c20:	stp	x29, x30, [sp, #-32]!
    2c24:	mov	x29, sp
    2c28:	str	x19, [sp, #16]
    2c2c:	mov	x19, x0
    2c30:	ldr	x0, [x0, #8]
    2c34:	bl	2630 <_PyType_Name@plt>
    2c38:	mov	x1, x0
    2c3c:	ldr	w2, [x19, #24]
    2c40:	cmp	w2, #0x1
    2c44:	b.eq	2c70 <PyThread_free_lock@plt+0x340>  // b.none
    2c48:	cmn	w2, #0x1
    2c4c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2c50:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    2c54:	add	x0, x0, #0x5d8
    2c58:	add	x2, x2, #0x5c0
    2c5c:	csel	x0, x2, x0, eq  // eq = none
    2c60:	ldr	x2, [x19, #16]
    2c64:	ldr	x19, [sp, #16]
    2c68:	ldp	x29, x30, [sp], #32
    2c6c:	b	24f0 <PyUnicode_FromFormat@plt>
    2c70:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    2c74:	add	x0, x2, #0x5a8
    2c78:	ldr	x2, [x19, #16]
    2c7c:	ldr	x19, [sp, #16]
    2c80:	ldp	x29, x30, [sp], #32
    2c84:	b	24f0 <PyUnicode_FromFormat@plt>
    2c88:	stp	x29, x30, [sp, #-64]!
    2c8c:	mov	x29, sp
    2c90:	stp	x19, x20, [sp, #16]
    2c94:	mov	x20, x3
    2c98:	stp	x21, x22, [sp, #32]
    2c9c:	mov	x21, x1
    2ca0:	mov	w22, w5
    2ca4:	stp	x23, x24, [sp, #48]
    2ca8:	mov	w23, w2
    2cac:	mov	w24, w4
    2cb0:	bl	2830 <_PyObject_New@plt>
    2cb4:	cbz	x0, 2d7c <PyThread_free_lock@plt+0x44c>
    2cb8:	str	x20, [x0, #32]
    2cbc:	mov	x19, x0
    2cc0:	str	x21, [x0, #16]
    2cc4:	mov	w1, #0x1                   	// #1
    2cc8:	ldr	x0, [x20]
    2ccc:	stp	w23, w22, [x19, #24]
    2cd0:	bl	2640 <PyThread_acquire_lock@plt>
    2cd4:	ldr	x5, [x20, #8]
    2cd8:	cbnz	x5, 2ce8 <PyThread_free_lock@plt+0x3b8>
    2cdc:	b	2d20 <PyThread_free_lock@plt+0x3f0>
    2ce0:	ldr	x5, [x5, #16]
    2ce4:	cbz	x5, 2d20 <PyThread_free_lock@plt+0x3f0>
    2ce8:	ldr	x0, [x5]
    2cec:	cmp	x21, x0
    2cf0:	b.ne	2ce0 <PyThread_free_lock@plt+0x3b0>  // b.any
    2cf4:	ldr	x1, [x5, #24]
    2cf8:	ldr	x0, [x20]
    2cfc:	add	x1, x1, #0x1
    2d00:	str	x1, [x5, #24]
    2d04:	bl	27b0 <PyThread_release_lock@plt>
    2d08:	mov	x0, x19
    2d0c:	ldp	x19, x20, [sp, #16]
    2d10:	ldp	x21, x22, [sp, #32]
    2d14:	ldp	x23, x24, [sp, #48]
    2d18:	ldp	x29, x30, [sp], #64
    2d1c:	ret
    2d20:	adrp	x22, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    2d24:	mov	x2, x21
    2d28:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2d2c:	add	x1, x1, #0x5e0
    2d30:	ldr	x0, [x22, #2384]
    2d34:	bl	28c0 <PyErr_Format@plt>
    2d38:	ldr	x0, [x20]
    2d3c:	bl	27b0 <PyThread_release_lock@plt>
    2d40:	cbz	w24, 2d6c <PyThread_free_lock@plt+0x43c>
    2d44:	ldr	x0, [x22, #2384]
    2d48:	bl	26a0 <PyErr_ExceptionMatches@plt>
    2d4c:	cbz	w0, 2d6c <PyThread_free_lock@plt+0x43c>
    2d50:	bl	26f0 <PyErr_Clear@plt>
    2d54:	mov	x0, x19
    2d58:	ldp	x19, x20, [sp, #16]
    2d5c:	ldp	x21, x22, [sp, #32]
    2d60:	ldp	x23, x24, [sp, #48]
    2d64:	ldp	x29, x30, [sp], #64
    2d68:	ret
    2d6c:	ldr	x0, [x19]
    2d70:	sub	x0, x0, #0x1
    2d74:	str	x0, [x19]
    2d78:	cbz	x0, 2d98 <PyThread_free_lock@plt+0x468>
    2d7c:	mov	x19, #0x0                   	// #0
    2d80:	mov	x0, x19
    2d84:	ldp	x19, x20, [sp, #16]
    2d88:	ldp	x21, x22, [sp, #32]
    2d8c:	ldp	x23, x24, [sp, #48]
    2d90:	ldp	x29, x30, [sp], #64
    2d94:	ret
    2d98:	mov	x0, x19
    2d9c:	mov	x19, #0x0                   	// #0
    2da0:	bl	25e0 <_Py_Dealloc@plt>
    2da4:	b	2d08 <PyThread_free_lock@plt+0x3d8>
    2da8:	stp	x29, x30, [sp, #-48]!
    2dac:	mov	x1, x0
    2db0:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    2db4:	mov	x29, sp
    2db8:	stp	x19, x20, [sp, #16]
    2dbc:	add	x3, x3, #0x950
    2dc0:	add	x3, x3, #0x8
    2dc4:	ldr	x20, [x1]
    2dc8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    2dcc:	mov	w5, #0x0                   	// #0
    2dd0:	add	x0, x0, #0x240
    2dd4:	mov	w4, #0x0                   	// #0
    2dd8:	ldr	w2, [x20, #8]
    2ddc:	ldr	x1, [x20]
    2de0:	str	x21, [sp, #32]
    2de4:	bl	2c88 <PyThread_free_lock@plt+0x358>
    2de8:	ldr	w21, [x20, #8]
    2dec:	mov	x19, x0
    2df0:	cbz	w21, 2dfc <PyThread_free_lock@plt+0x4cc>
    2df4:	ldr	w0, [x20, #12]
    2df8:	cbnz	w0, 2e10 <PyThread_free_lock@plt+0x4e0>
    2dfc:	mov	x0, x19
    2e00:	ldp	x19, x20, [sp, #16]
    2e04:	ldr	x21, [sp, #32]
    2e08:	ldp	x29, x30, [sp], #48
    2e0c:	ret
    2e10:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2e14:	add	x0, x0, #0x618
    2e18:	bl	2750 <PyImport_ImportModule@plt>
    2e1c:	mov	x20, x0
    2e20:	cbz	x0, 2ed4 <PyThread_free_lock@plt+0x5a4>
    2e24:	cmn	w21, #0x1
    2e28:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    2e2c:	add	x2, x2, #0x608
    2e30:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2e34:	add	x1, x1, #0x5f8
    2e38:	mov	x0, x20
    2e3c:	csel	x1, x1, x2, eq  // eq = none
    2e40:	bl	25b0 <PyObject_GetAttrString@plt>
    2e44:	mov	x21, x0
    2e48:	ldr	x1, [x20]
    2e4c:	sub	x0, x1, #0x1
    2e50:	str	x0, [x20]
    2e54:	cbz	x0, 2eac <PyThread_free_lock@plt+0x57c>
    2e58:	cbz	x21, 2ef0 <PyThread_free_lock@plt+0x5c0>
    2e5c:	mov	x1, x19
    2e60:	mov	x0, x21
    2e64:	mov	x2, #0x0                   	// #0
    2e68:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    2e6c:	ldr	x1, [x21]
    2e70:	mov	x20, x0
    2e74:	sub	x0, x1, #0x1
    2e78:	str	x0, [x21]
    2e7c:	cbz	x0, 2ec8 <PyThread_free_lock@plt+0x598>
    2e80:	cbz	x20, 2ef0 <PyThread_free_lock@plt+0x5c0>
    2e84:	ldr	x1, [x19]
    2e88:	sub	x1, x1, #0x1
    2e8c:	str	x1, [x19]
    2e90:	cbz	x1, 2eb8 <PyThread_free_lock@plt+0x588>
    2e94:	mov	x19, x20
    2e98:	mov	x0, x19
    2e9c:	ldp	x19, x20, [sp, #16]
    2ea0:	ldr	x21, [sp, #32]
    2ea4:	ldp	x29, x30, [sp], #48
    2ea8:	ret
    2eac:	mov	x0, x20
    2eb0:	bl	25e0 <_Py_Dealloc@plt>
    2eb4:	b	2e58 <PyThread_free_lock@plt+0x528>
    2eb8:	mov	x0, x19
    2ebc:	mov	x19, x20
    2ec0:	bl	25e0 <_Py_Dealloc@plt>
    2ec4:	b	2dfc <PyThread_free_lock@plt+0x4cc>
    2ec8:	mov	x0, x21
    2ecc:	bl	25e0 <_Py_Dealloc@plt>
    2ed0:	b	2e80 <PyThread_free_lock@plt+0x550>
    2ed4:	bl	26f0 <PyErr_Clear@plt>
    2ed8:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2edc:	add	x0, x0, #0x628
    2ee0:	bl	2750 <PyImport_ImportModule@plt>
    2ee4:	mov	x20, x0
    2ee8:	cbnz	x0, 2e24 <PyThread_free_lock@plt+0x4f4>
    2eec:	nop
    2ef0:	bl	26f0 <PyErr_Clear@plt>
    2ef4:	b	2dfc <PyThread_free_lock@plt+0x4cc>
    2ef8:	stp	x29, x30, [sp, #-48]!
    2efc:	adrp	x2, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    2f00:	add	x2, x2, #0x240
    2f04:	mov	x29, sp
    2f08:	stp	x19, x20, [sp, #16]
    2f0c:	mov	x19, x0
    2f10:	ldr	x0, [x0, #8]
    2f14:	str	x21, [sp, #32]
    2f18:	mov	x21, x1
    2f1c:	cmp	x0, x2
    2f20:	b.eq	2f34 <PyThread_free_lock@plt+0x604>  // b.none
    2f24:	mov	x1, x2
    2f28:	bl	28a0 <PyType_IsSubtype@plt>
    2f2c:	mov	w20, w0
    2f30:	cbz	w0, 2f54 <PyThread_free_lock@plt+0x624>
    2f34:	ldr	x0, [x19, #16]
    2f38:	mov	w20, #0x1                   	// #1
    2f3c:	str	x0, [x21]
    2f40:	mov	w0, w20
    2f44:	ldp	x19, x20, [sp, #16]
    2f48:	ldr	x21, [sp, #32]
    2f4c:	ldp	x29, x30, [sp], #48
    2f50:	ret
    2f54:	ldr	x2, [x19, #8]
    2f58:	ldr	x0, [x2, #96]
    2f5c:	cbz	x0, 2f9c <PyThread_free_lock@plt+0x66c>
    2f60:	ldr	x0, [x0, #264]
    2f64:	cbz	x0, 2f9c <PyThread_free_lock@plt+0x66c>
    2f68:	mov	x0, x19
    2f6c:	bl	2890 <PyLong_AsLongLong@plt>
    2f70:	cmn	x0, #0x1
    2f74:	b.eq	2fcc <PyThread_free_lock@plt+0x69c>  // b.none
    2f78:	tbz	x0, #63, 2f38 <PyThread_free_lock@plt+0x608>
    2f7c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    2f80:	mov	x2, x19
    2f84:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2f88:	add	x1, x1, #0x648
    2f8c:	ldr	x0, [x0, #4016]
    2f90:	ldr	x0, [x0]
    2f94:	bl	28c0 <PyErr_Format@plt>
    2f98:	b	2f40 <PyThread_free_lock@plt+0x610>
    2f9c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    2fa0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2fa4:	ldr	x2, [x2, #24]
    2fa8:	add	x1, x1, #0x678
    2fac:	ldr	x0, [x0, #4024]
    2fb0:	ldr	x0, [x0]
    2fb4:	bl	28c0 <PyErr_Format@plt>
    2fb8:	mov	w0, w20
    2fbc:	ldp	x19, x20, [sp, #16]
    2fc0:	ldr	x21, [sp, #32]
    2fc4:	ldp	x29, x30, [sp], #48
    2fc8:	ret
    2fcc:	bl	2730 <PyErr_Occurred@plt>
    2fd0:	cbnz	x0, 2f40 <PyThread_free_lock@plt+0x610>
    2fd4:	b	2f7c <PyThread_free_lock@plt+0x64c>
    2fd8:	stp	x29, x30, [sp, #-32]!
    2fdc:	mov	x0, x1
    2fe0:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    2fe4:	mov	x1, x2
    2fe8:	mov	x29, sp
    2fec:	add	x3, x3, #0x3e0
    2ff0:	add	x4, sp, #0x18
    2ff4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    2ff8:	add	x2, x2, #0x6a0
    2ffc:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3000:	mov	w1, w0
    3004:	mov	x0, #0x0                   	// #0
    3008:	cbz	w1, 3030 <PyThread_free_lock@plt+0x700>
    300c:	ldr	x0, [sp, #24]
    3010:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    3014:	cbnz	w0, 3038 <PyThread_free_lock@plt+0x708>
    3018:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    301c:	ldr	x1, [x1, #4056]
    3020:	mov	x0, x1
    3024:	ldr	x2, [x1]
    3028:	add	x2, x2, #0x1
    302c:	str	x2, [x1]
    3030:	ldp	x29, x30, [sp], #32
    3034:	ret
    3038:	bl	26f0 <PyErr_Clear@plt>
    303c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3040:	ldr	x1, [x1, #4032]
    3044:	mov	x0, x1
    3048:	ldr	x2, [x1]
    304c:	add	x2, x2, #0x1
    3050:	str	x2, [x1]
    3054:	ldp	x29, x30, [sp], #32
    3058:	ret
    305c:	nop
    3060:	stp	x29, x30, [sp, #-64]!
    3064:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3068:	add	x3, x3, #0x3e0
    306c:	mov	x29, sp
    3070:	mov	x0, x1
    3074:	add	x3, x3, #0x10
    3078:	mov	x1, x2
    307c:	add	x4, sp, #0x38
    3080:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3084:	add	x2, x2, #0x6b0
    3088:	stp	x19, x20, [sp, #16]
    308c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3090:	cbz	w0, 313c <PyThread_free_lock@plt+0x80c>
    3094:	ldr	x0, [sp, #56]
    3098:	bl	2550 <_PyInterpreterID_LookUp@plt>
    309c:	mov	x19, x0
    30a0:	cbz	x0, 313c <PyThread_free_lock@plt+0x80c>
    30a4:	bl	2800 <_PyInterpreterState_Get@plt>
    30a8:	cbz	x0, 313c <PyThread_free_lock@plt+0x80c>
    30ac:	cmp	x19, x0
    30b0:	b.eq	3150 <PyThread_free_lock@plt+0x820>  // b.none
    30b4:	mov	x0, x19
    30b8:	str	x21, [sp, #32]
    30bc:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    30c0:	mov	x21, x0
    30c4:	bl	2780 <PyThreadState_Next@plt>
    30c8:	mov	x20, x0
    30cc:	cbnz	x0, 3170 <PyThread_free_lock@plt+0x840>
    30d0:	ldr	x0, [x21, #24]
    30d4:	cbz	x0, 3130 <PyThread_free_lock@plt+0x800>
    30d8:	ldrb	w0, [x0, #116]
    30dc:	cbnz	w0, 3194 <PyThread_free_lock@plt+0x864>
    30e0:	mov	x0, x19
    30e4:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    30e8:	mov	x20, x0
    30ec:	bl	2920 <PyThreadState_Swap@plt>
    30f0:	mov	x19, x0
    30f4:	mov	x0, x20
    30f8:	bl	25d0 <Py_EndInterpreter@plt>
    30fc:	mov	x0, x19
    3100:	bl	2920 <PyThreadState_Swap@plt>
    3104:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3108:	ldr	x21, [sp, #32]
    310c:	ldr	x0, [x0, #4048]
    3110:	mov	x20, x0
    3114:	ldr	x1, [x0]
    3118:	add	x1, x1, #0x1
    311c:	str	x1, [x0]
    3120:	mov	x0, x20
    3124:	ldp	x19, x20, [sp, #16]
    3128:	ldp	x29, x30, [sp], #64
    312c:	ret
    3130:	bl	2730 <PyErr_Occurred@plt>
    3134:	cbz	x0, 30e0 <PyThread_free_lock@plt+0x7b0>
    3138:	ldr	x21, [sp, #32]
    313c:	mov	x20, #0x0                   	// #0
    3140:	mov	x0, x20
    3144:	ldp	x19, x20, [sp, #16]
    3148:	ldp	x29, x30, [sp], #64
    314c:	ret
    3150:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3154:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3158:	mov	x20, #0x0                   	// #0
    315c:	add	x1, x1, #0x6c0
    3160:	ldr	x0, [x0, #4000]
    3164:	ldr	x0, [x0]
    3168:	bl	2670 <PyErr_SetString@plt>
    316c:	b	3120 <PyThread_free_lock@plt+0x7f0>
    3170:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3174:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3178:	mov	x20, #0x0                   	// #0
    317c:	add	x1, x1, #0x6e8
    3180:	ldr	x0, [x0, #4000]
    3184:	ldr	x0, [x0]
    3188:	bl	2670 <PyErr_SetString@plt>
    318c:	ldr	x21, [sp, #32]
    3190:	b	3120 <PyThread_free_lock@plt+0x7f0>
    3194:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3198:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    319c:	add	x1, x1, #0x710
    31a0:	ldr	x0, [x0, #4000]
    31a4:	ldr	x0, [x0]
    31a8:	bl	28c0 <PyErr_Format@plt>
    31ac:	ldr	x21, [sp, #32]
    31b0:	b	3120 <PyThread_free_lock@plt+0x7f0>
    31b4:	nop
    31b8:	stp	x29, x30, [sp, #-48]!
    31bc:	mov	x0, x1
    31c0:	mov	x3, #0x0                   	// #0
    31c4:	mov	x29, sp
    31c8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    31cc:	mov	x2, #0x0                   	// #0
    31d0:	add	x1, x1, #0xca8
    31d4:	stp	x19, x20, [sp, #16]
    31d8:	mov	x19, #0x0                   	// #0
    31dc:	bl	2720 <PyArg_UnpackTuple@plt>
    31e0:	cbz	w0, 3228 <PyThread_free_lock@plt+0x8f8>
    31e4:	mov	x0, #0x0                   	// #0
    31e8:	str	x21, [sp, #32]
    31ec:	bl	2920 <PyThreadState_Swap@plt>
    31f0:	mov	x21, x0
    31f4:	bl	26b0 <Py_NewInterpreter@plt>
    31f8:	mov	x20, x0
    31fc:	mov	x0, x21
    3200:	bl	2920 <PyThreadState_Swap@plt>
    3204:	cbz	x20, 3238 <PyThread_free_lock@plt+0x908>
    3208:	ldr	x0, [x20, #16]
    320c:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    3210:	mov	x19, x0
    3214:	cbz	x0, 3258 <PyThread_free_lock@plt+0x928>
    3218:	ldr	x0, [x20, #16]
    321c:	mov	w1, #0x1                   	// #1
    3220:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    3224:	ldr	x21, [sp, #32]
    3228:	mov	x0, x19
    322c:	ldp	x19, x20, [sp, #16]
    3230:	ldp	x29, x30, [sp], #48
    3234:	ret
    3238:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    323c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3240:	add	x1, x1, #0x730
    3244:	ldr	x0, [x0, #4000]
    3248:	ldr	x0, [x0]
    324c:	bl	2670 <PyErr_SetString@plt>
    3250:	ldr	x21, [sp, #32]
    3254:	b	3228 <PyThread_free_lock@plt+0x8f8>
    3258:	mov	x0, x20
    325c:	bl	2920 <PyThreadState_Swap@plt>
    3260:	mov	x1, x0
    3264:	mov	x0, x20
    3268:	mov	x20, x1
    326c:	bl	25d0 <Py_EndInterpreter@plt>
    3270:	mov	x0, x20
    3274:	bl	2920 <PyThreadState_Swap@plt>
    3278:	ldr	x21, [sp, #32]
    327c:	b	3228 <PyThread_free_lock@plt+0x8f8>
    3280:	mov	x3, x0
    3284:	cbnz	x1, 32a8 <PyThread_free_lock@plt+0x978>
    3288:	ldr	w0, [x0, #24]
    328c:	cmp	w0, #0x1
    3290:	b.eq	32cc <PyThread_free_lock@plt+0x99c>  // b.none
    3294:	cmn	w0, #0x1
    3298:	b.eq	32c0 <PyThread_free_lock@plt+0x990>  // b.none
    329c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    32a0:	add	x0, x0, #0x750
    32a4:	b	2850 <PyUnicode_InternFromString@plt>
    32a8:	ldr	w2, [x1]
    32ac:	mov	w4, #0x1                   	// #1
    32b0:	ldr	w5, [x0, #28]
    32b4:	ldp	x0, x1, [x0, #8]
    32b8:	ldr	x3, [x3, #32]
    32bc:	b	2c88 <PyThread_free_lock@plt+0x358>
    32c0:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    32c4:	add	x0, x0, #0xcf0
    32c8:	b	2850 <PyUnicode_InternFromString@plt>
    32cc:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    32d0:	add	x0, x0, #0xce0
    32d4:	b	2850 <PyUnicode_InternFromString@plt>
    32d8:	stp	x29, x30, [sp, #-64]!
    32dc:	mov	x29, sp
    32e0:	stp	x19, x20, [sp, #16]
    32e4:	mov	w19, w2
    32e8:	sub	w2, w2, #0x2
    32ec:	stp	x21, x22, [sp, #32]
    32f0:	cmp	w2, #0x1
    32f4:	b.hi	33e8 <PyThread_free_lock@plt+0xab8>  // b.pmore
    32f8:	mov	x21, x0
    32fc:	mov	x20, x1
    3300:	ldr	x0, [x0, #8]
    3304:	adrp	x22, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3308:	add	x1, x22, #0x240
    330c:	cmp	x0, x1
    3310:	b.eq	331c <PyThread_free_lock@plt+0x9ec>  // b.none
    3314:	bl	28a0 <PyType_IsSubtype@plt>
    3318:	cbz	w0, 3420 <PyThread_free_lock@plt+0xaf0>
    331c:	ldr	x0, [x20, #8]
    3320:	add	x1, x22, #0x240
    3324:	cmp	x0, x1
    3328:	b.eq	33a4 <PyThread_free_lock@plt+0xa74>  // b.none
    332c:	bl	28a0 <PyType_IsSubtype@plt>
    3330:	cbnz	w0, 33a4 <PyThread_free_lock@plt+0xa74>
    3334:	ldr	x0, [x20, #8]
    3338:	ldr	x0, [x0, #168]
    333c:	tbz	w0, #24, 3414 <PyThread_free_lock@plt+0xae4>
    3340:	mov	x0, x20
    3344:	add	x1, sp, #0x3c
    3348:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    334c:	cmn	x0, #0x1
    3350:	b.eq	34a0 <PyThread_free_lock@plt+0xb70>  // b.none
    3354:	ldr	w1, [sp, #60]
    3358:	cmp	w1, #0x0
    335c:	ccmp	x0, #0x0, #0x1, eq  // eq = none
    3360:	b.lt	33b4 <PyThread_free_lock@plt+0xa84>  // b.tstop
    3364:	ldr	x1, [x21, #16]
    3368:	cmp	x0, x1
    336c:	b.ne	33b4 <PyThread_free_lock@plt+0xa84>  // b.any
    3370:	cmp	w19, #0x2
    3374:	b.ne	33bc <PyThread_free_lock@plt+0xa8c>  // b.any
    3378:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    337c:	ldr	x0, [x0, #4056]
    3380:	mov	x21, x0
    3384:	ldr	x1, [x0]
    3388:	add	x1, x1, #0x1
    338c:	str	x1, [x0]
    3390:	mov	x0, x21
    3394:	ldp	x19, x20, [sp, #16]
    3398:	ldp	x21, x22, [sp, #32]
    339c:	ldp	x29, x30, [sp], #64
    33a0:	ret
    33a4:	ldr	w0, [x20, #24]
    33a8:	ldr	w1, [x21, #24]
    33ac:	cmp	w1, w0
    33b0:	b.eq	344c <PyThread_free_lock@plt+0xb1c>  // b.none
    33b4:	cmp	w19, #0x3
    33b8:	b.eq	3378 <PyThread_free_lock@plt+0xa48>  // b.none
    33bc:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    33c0:	ldp	x19, x20, [sp, #16]
    33c4:	ldr	x0, [x0, #4032]
    33c8:	mov	x21, x0
    33cc:	ldr	x1, [x0]
    33d0:	add	x1, x1, #0x1
    33d4:	str	x1, [x0]
    33d8:	mov	x0, x21
    33dc:	ldp	x21, x22, [sp, #32]
    33e0:	ldp	x29, x30, [sp], #64
    33e4:	ret
    33e8:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    33ec:	ldp	x19, x20, [sp, #16]
    33f0:	ldr	x1, [x1, #3992]
    33f4:	mov	x21, x1
    33f8:	ldr	x0, [x1]
    33fc:	add	x0, x0, #0x1
    3400:	str	x0, [x1]
    3404:	mov	x0, x21
    3408:	ldp	x21, x22, [sp, #32]
    340c:	ldp	x29, x30, [sp], #64
    3410:	ret
    3414:	mov	x0, x20
    3418:	bl	2880 <PyNumber_Check@plt>
    341c:	cbnz	w0, 3460 <PyThread_free_lock@plt+0xb30>
    3420:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3424:	ldp	x19, x20, [sp, #16]
    3428:	ldr	x0, [x0, #3992]
    342c:	mov	x21, x0
    3430:	ldr	x1, [x0]
    3434:	add	x1, x1, #0x1
    3438:	str	x1, [x0]
    343c:	mov	x0, x21
    3440:	ldp	x21, x22, [sp, #32]
    3444:	ldp	x29, x30, [sp], #64
    3448:	ret
    344c:	ldr	x0, [x20, #16]
    3450:	ldr	x1, [x21, #16]
    3454:	cmp	x1, x0
    3458:	b.ne	33b4 <PyThread_free_lock@plt+0xa84>  // b.any
    345c:	b	3370 <PyThread_free_lock@plt+0xa40>
    3460:	ldr	x0, [x21, #16]
    3464:	mov	x21, #0x0                   	// #0
    3468:	bl	28e0 <PyLong_FromLongLong@plt>
    346c:	mov	x22, x0
    3470:	cbz	x0, 3390 <PyThread_free_lock@plt+0xa60>
    3474:	mov	x1, x20
    3478:	mov	w2, w19
    347c:	bl	2650 <PyObject_RichCompare@plt>
    3480:	mov	x21, x0
    3484:	ldr	x1, [x22]
    3488:	sub	x0, x1, #0x1
    348c:	str	x0, [x22]
    3490:	cbnz	x0, 3390 <PyThread_free_lock@plt+0xa60>
    3494:	mov	x0, x22
    3498:	bl	25e0 <_Py_Dealloc@plt>
    349c:	b	3390 <PyThread_free_lock@plt+0xa60>
    34a0:	mov	x21, #0x0                   	// #0
    34a4:	bl	2730 <PyErr_Occurred@plt>
    34a8:	cbz	x0, 33b4 <PyThread_free_lock@plt+0xa84>
    34ac:	b	3390 <PyThread_free_lock@plt+0xa60>
    34b0:	sub	sp, sp, #0x40
    34b4:	mov	w8, #0xffffffff            	// #-1
    34b8:	add	x3, sp, #0x34
    34bc:	add	x0, sp, #0x30
    34c0:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    34c4:	add	x7, sp, #0x2c
    34c8:	stp	x29, x30, [sp, #16]
    34cc:	add	x29, sp, #0x10
    34d0:	add	x4, x4, #0xef8
    34d4:	add	x6, sp, #0x28
    34d8:	stp	x0, x3, [sp]
    34dc:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    34e0:	add	x3, x3, #0x3e0
    34e4:	mov	x0, x1
    34e8:	add	x5, sp, #0x38
    34ec:	mov	x1, x2
    34f0:	add	x3, x3, #0x20
    34f4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    34f8:	add	x2, x2, #0x758
    34fc:	stp	w8, w8, [sp, #40]
    3500:	stp	wzr, wzr, [sp, #48]
    3504:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3508:	cbz	w0, 3564 <PyThread_free_lock@plt+0xc34>
    350c:	ldp	w1, w0, [sp, #40]
    3510:	cbz	w1, 3554 <PyThread_free_lock@plt+0xc24>
    3514:	cmp	w1, #0x1
    3518:	b.ne	3558 <PyThread_free_lock@plt+0xc28>  // b.any
    351c:	add	w0, w0, #0x1
    3520:	cmp	w0, #0x1
    3524:	cset	w2, ls  // ls = plast
    3528:	ldp	w4, w5, [sp, #48]
    352c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3530:	ldr	x1, [sp, #56]
    3534:	add	x3, x3, #0x950
    3538:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    353c:	add	x3, x3, #0x8
    3540:	add	x0, x0, #0x240
    3544:	bl	2c88 <PyThread_free_lock@plt+0x358>
    3548:	ldp	x29, x30, [sp, #16]
    354c:	add	sp, sp, #0x40
    3550:	ret
    3554:	cbz	w0, 3574 <PyThread_free_lock@plt+0xc44>
    3558:	cmp	w0, #0x1
    355c:	csetm	w2, eq  // eq = none
    3560:	b	3528 <PyThread_free_lock@plt+0xbf8>
    3564:	mov	x0, #0x0                   	// #0
    3568:	ldp	x29, x30, [sp, #16]
    356c:	add	sp, sp, #0x40
    3570:	ret
    3574:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3578:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    357c:	add	x1, x1, #0x778
    3580:	ldr	x0, [x0, #4016]
    3584:	ldr	x0, [x0]
    3588:	bl	2670 <PyErr_SetString@plt>
    358c:	mov	x0, #0x0                   	// #0
    3590:	b	3548 <PyThread_free_lock@plt+0xc18>
    3594:	nop
    3598:	stp	x29, x30, [sp, #-48]!
    359c:	mov	x29, sp
    35a0:	stp	x21, x22, [sp, #32]
    35a4:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    35a8:	add	x3, x21, #0x950
    35ac:	mov	x22, x0
    35b0:	stp	x19, x20, [sp, #16]
    35b4:	mov	x20, x2
    35b8:	ldr	x0, [x3, #8]
    35bc:	mov	x19, x1
    35c0:	mov	w1, #0x1                   	// #1
    35c4:	bl	2640 <PyThread_acquire_lock@plt>
    35c8:	str	xzr, [x20]
    35cc:	ldr	x0, [x22]
    35d0:	cbnz	x0, 35e0 <PyThread_free_lock@plt+0xcb0>
    35d4:	b	3654 <PyThread_free_lock@plt+0xd24>
    35d8:	ldr	x0, [x0, #16]
    35dc:	cbz	x0, 3654 <PyThread_free_lock@plt+0xd24>
    35e0:	ldr	x3, [x0]
    35e4:	cmp	x3, x19
    35e8:	b.ne	35d8 <PyThread_free_lock@plt+0xca8>  // b.any
    35ec:	ldr	x1, [x0, #8]
    35f0:	cbz	x1, 3630 <PyThread_free_lock@plt+0xd00>
    35f4:	ldr	w1, [x1, #24]
    35f8:	cbz	w1, 3630 <PyThread_free_lock@plt+0xd00>
    35fc:	add	x1, x21, #0x950
    3600:	ldr	x1, [x1, #8]
    3604:	str	x1, [x20]
    3608:	ldr	x19, [x0, #8]
    360c:	cbnz	x1, 361c <PyThread_free_lock@plt+0xcec>
    3610:	add	x21, x21, #0x950
    3614:	ldr	x0, [x21, #8]
    3618:	bl	27b0 <PyThread_release_lock@plt>
    361c:	mov	x0, x19
    3620:	ldp	x19, x20, [sp, #16]
    3624:	ldp	x21, x22, [sp, #32]
    3628:	ldp	x29, x30, [sp], #48
    362c:	ret
    3630:	add	x0, x21, #0x950
    3634:	mov	x2, x19
    3638:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    363c:	add	x1, x1, #0x7a0
    3640:	mov	x19, #0x0                   	// #0
    3644:	ldr	x0, [x0, #40]
    3648:	bl	28c0 <PyErr_Format@plt>
    364c:	ldr	x1, [x20]
    3650:	b	360c <PyThread_free_lock@plt+0xcdc>
    3654:	ldr	x0, [x21, #2384]
    3658:	mov	x2, x19
    365c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3660:	add	x1, x1, #0x5e0
    3664:	mov	x19, #0x0                   	// #0
    3668:	bl	28c0 <PyErr_Format@plt>
    366c:	ldr	x1, [x20]
    3670:	b	360c <PyThread_free_lock@plt+0xcdc>
    3674:	nop
    3678:	stp	x29, x30, [sp, #-64]!
    367c:	mov	w1, #0x1                   	// #1
    3680:	mov	x29, sp
    3684:	stp	x19, x20, [sp, #16]
    3688:	adrp	x19, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    368c:	stp	x21, x22, [sp, #32]
    3690:	add	x21, x19, #0x950
    3694:	add	x22, x21, #0x8
    3698:	ldr	x0, [x21, #8]
    369c:	bl	2640 <PyThread_acquire_lock@plt>
    36a0:	ldr	x0, [x22, #16]
    36a4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    36a8:	cmp	x0, x1
    36ac:	b.eq	37c0 <PyThread_free_lock@plt+0xe90>  // b.none
    36b0:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    36b4:	cmp	x0, x1
    36b8:	b.hi	3794 <PyThread_free_lock@plt+0xe64>  // b.pmore
    36bc:	lsl	x0, x0, #3
    36c0:	bl	2910 <PyMem_Malloc@plt>
    36c4:	mov	x20, x0
    36c8:	cbz	x0, 3794 <PyThread_free_lock@plt+0xe64>
    36cc:	ldr	x1, [x22, #8]
    36d0:	stp	x23, x24, [sp, #48]
    36d4:	cbz	x1, 36f0 <PyThread_free_lock@plt+0xdc0>
    36d8:	mov	x2, x0
    36dc:	nop
    36e0:	ldr	x3, [x1]
    36e4:	ldr	x1, [x1, #16]
    36e8:	str	x3, [x2], #8
    36ec:	cbnz	x1, 36e0 <PyThread_free_lock@plt+0xdb0>
    36f0:	add	x19, x19, #0x950
    36f4:	add	x22, x19, #0x8
    36f8:	ldr	x0, [x19, #8]
    36fc:	ldr	x23, [x22, #16]
    3700:	bl	27b0 <PyThread_release_lock@plt>
    3704:	mov	x0, x23
    3708:	bl	2500 <PyList_New@plt>
    370c:	mov	x21, x0
    3710:	cbz	x0, 3770 <PyThread_free_lock@plt+0xe40>
    3714:	adrp	x24, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3718:	cmp	x23, #0x0
    371c:	add	x24, x24, #0x240
    3720:	mov	x19, #0x0                   	// #0
    3724:	b.gt	3740 <PyThread_free_lock@plt+0xe10>
    3728:	b	3774 <PyThread_free_lock@plt+0xe44>
    372c:	ldr	x1, [x21, #24]
    3730:	str	x0, [x1, x19, lsl #3]
    3734:	add	x19, x19, #0x1
    3738:	cmp	x19, x23
    373c:	b.eq	3774 <PyThread_free_lock@plt+0xe44>  // b.none
    3740:	ldr	x1, [x20, x19, lsl #3]
    3744:	mov	x3, x22
    3748:	mov	x0, x24
    374c:	mov	w5, #0x0                   	// #0
    3750:	mov	w4, #0x0                   	// #0
    3754:	mov	w2, #0x0                   	// #0
    3758:	bl	2c88 <PyThread_free_lock@plt+0x358>
    375c:	cbnz	x0, 372c <PyThread_free_lock@plt+0xdfc>
    3760:	ldr	x0, [x21]
    3764:	sub	x0, x0, #0x1
    3768:	str	x0, [x21]
    376c:	cbz	x0, 37b0 <PyThread_free_lock@plt+0xe80>
    3770:	mov	x21, #0x0                   	// #0
    3774:	mov	x0, x20
    3778:	bl	2590 <PyMem_Free@plt>
    377c:	mov	x0, x21
    3780:	ldp	x19, x20, [sp, #16]
    3784:	ldp	x21, x22, [sp, #32]
    3788:	ldp	x23, x24, [sp, #48]
    378c:	ldp	x29, x30, [sp], #64
    3790:	ret
    3794:	ldr	x0, [x21, #8]
    3798:	bl	27b0 <PyThread_release_lock@plt>
    379c:	ldp	x19, x20, [sp, #16]
    37a0:	mov	x0, #0x0                   	// #0
    37a4:	ldp	x21, x22, [sp, #32]
    37a8:	ldp	x29, x30, [sp], #64
    37ac:	b	2500 <PyList_New@plt>
    37b0:	mov	x0, x21
    37b4:	mov	x21, #0x0                   	// #0
    37b8:	bl	25e0 <_Py_Dealloc@plt>
    37bc:	b	3774 <PyThread_free_lock@plt+0xe44>
    37c0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    37c4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    37c8:	add	x1, x1, #0x7b8
    37cc:	ldr	x0, [x0, #4000]
    37d0:	ldr	x0, [x0]
    37d4:	bl	2670 <PyErr_SetString@plt>
    37d8:	ldr	x0, [x21, #8]
    37dc:	bl	27b0 <PyThread_release_lock@plt>
    37e0:	b	379c <PyThread_free_lock@plt+0xe6c>
    37e4:	nop
    37e8:	stp	x29, x30, [sp, #-48]!
    37ec:	mov	w1, #0x1                   	// #1
    37f0:	mov	x29, sp
    37f4:	stp	x19, x20, [sp, #16]
    37f8:	mov	x19, x0
    37fc:	ldr	x0, [x0]
    3800:	stp	x21, x22, [sp, #32]
    3804:	bl	2640 <PyThread_acquire_lock@plt>
    3808:	ldr	x0, [x19, #32]
    380c:	cbz	x0, 3818 <PyThread_free_lock@plt+0xee8>
    3810:	bl	2590 <PyMem_Free@plt>
    3814:	str	xzr, [x19, #32]
    3818:	ldr	x0, [x19]
    381c:	bl	27b0 <PyThread_release_lock@plt>
    3820:	ldr	x0, [x19]
    3824:	mov	w1, #0x1                   	// #1
    3828:	bl	2640 <PyThread_acquire_lock@plt>
    382c:	ldr	x21, [x19, #8]
    3830:	ldr	x20, [x21, #8]
    3834:	cbz	x20, 3884 <PyThread_free_lock@plt+0xf54>
    3838:	ldp	x1, x22, [x20]
    383c:	mov	x0, x20
    3840:	cbz	x1, 3878 <PyThread_free_lock@plt+0xf48>
    3844:	nop
    3848:	mov	x0, x1
    384c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3850:	ldr	x0, [x20]
    3854:	bl	2590 <PyMem_Free@plt>
    3858:	stp	xzr, xzr, [x20]
    385c:	mov	x0, x20
    3860:	bl	2590 <PyMem_Free@plt>
    3864:	cbz	x22, 3884 <PyThread_free_lock@plt+0xf54>
    3868:	mov	x20, x22
    386c:	mov	x0, x20
    3870:	ldp	x1, x22, [x20]
    3874:	cbnz	x1, 3848 <PyThread_free_lock@plt+0xf18>
    3878:	str	xzr, [x20, #8]
    387c:	bl	2590 <PyMem_Free@plt>
    3880:	cbnz	x22, 3868 <PyThread_free_lock@plt+0xf38>
    3884:	str	xzr, [x21]
    3888:	mov	x0, x21
    388c:	stp	xzr, xzr, [x21, #8]
    3890:	bl	2590 <PyMem_Free@plt>
    3894:	ldr	x20, [x19, #16]
    3898:	ldr	x21, [x20, #16]
    389c:	cbz	x21, 38b0 <PyThread_free_lock@plt+0xf80>
    38a0:	mov	x0, x21
    38a4:	ldr	x21, [x21]
    38a8:	bl	2590 <PyMem_Free@plt>
    38ac:	cbnz	x21, 38a0 <PyThread_free_lock@plt+0xf70>
    38b0:	ldr	x21, [x20, #24]
    38b4:	str	xzr, [x20]
    38b8:	str	xzr, [x20, #16]
    38bc:	cbz	x21, 38d0 <PyThread_free_lock@plt+0xfa0>
    38c0:	mov	x0, x21
    38c4:	ldr	x21, [x21]
    38c8:	bl	2590 <PyMem_Free@plt>
    38cc:	cbnz	x21, 38c0 <PyThread_free_lock@plt+0xf90>
    38d0:	str	xzr, [x20, #8]
    38d4:	mov	x0, x20
    38d8:	str	xzr, [x20, #24]
    38dc:	bl	2590 <PyMem_Free@plt>
    38e0:	ldr	x0, [x19]
    38e4:	bl	27b0 <PyThread_release_lock@plt>
    38e8:	ldr	x0, [x19]
    38ec:	bl	2930 <PyThread_free_lock@plt>
    38f0:	mov	x0, x19
    38f4:	ldp	x19, x20, [sp, #16]
    38f8:	ldp	x21, x22, [sp, #32]
    38fc:	ldp	x29, x30, [sp], #48
    3900:	b	2590 <PyMem_Free@plt>
    3904:	nop
    3908:	sub	sp, sp, #0x80
    390c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3910:	add	x0, sp, #0x74
    3914:	add	x3, x3, #0x3e0
    3918:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    391c:	add	x3, x3, #0x50
    3920:	stp	x29, x30, [sp, #16]
    3924:	add	x29, sp, #0x10
    3928:	add	x4, x4, #0xef8
    392c:	add	x7, sp, #0x70
    3930:	str	x0, [sp]
    3934:	add	x6, sp, #0x6c
    3938:	mov	x0, x1
    393c:	add	x5, sp, #0x78
    3940:	mov	x1, x2
    3944:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3948:	add	x2, x2, #0x7d0
    394c:	stp	x19, x20, [sp, #32]
    3950:	mov	x19, #0x0                   	// #0
    3954:	stp	wzr, wzr, [sp, #108]
    3958:	str	wzr, [sp, #116]
    395c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3960:	cbz	w0, 3a94 <PyThread_free_lock@plt+0x1164>
    3964:	stp	x21, x22, [sp, #48]
    3968:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    396c:	add	x0, x21, #0x950
    3970:	ldp	w22, w2, [sp, #108]
    3974:	add	x19, x0, #0x8
    3978:	ldr	x0, [x0, #8]
    397c:	sub	w22, w22, w2
    3980:	mov	w1, #0x1                   	// #1
    3984:	stp	x23, x24, [sp, #64]
    3988:	ldr	w23, [sp, #116]
    398c:	ldr	x24, [sp, #120]
    3990:	bl	2640 <PyThread_acquire_lock@plt>
    3994:	ldr	x20, [x19, #8]
    3998:	cbz	x20, 3ac8 <PyThread_free_lock@plt+0x1198>
    399c:	str	x25, [sp, #80]
    39a0:	b	39ac <PyThread_free_lock@plt+0x107c>
    39a4:	ldr	x20, [x20, #16]
    39a8:	cbz	x20, 3ac4 <PyThread_free_lock@plt+0x1194>
    39ac:	ldr	x0, [x20]
    39b0:	cmp	x24, x0
    39b4:	b.ne	39a4 <PyThread_free_lock@plt+0x1074>  // b.any
    39b8:	ldr	x19, [x20, #8]
    39bc:	cbz	x19, 3c70 <PyThread_free_lock@plt+0x1340>
    39c0:	cmp	w23, #0x0
    39c4:	ccmp	w22, #0x1, #0x0, eq  // eq = none
    39c8:	b.ne	3aa8 <PyThread_free_lock@plt+0x1178>  // b.any
    39cc:	ldr	x0, [x19, #32]
    39d0:	cbnz	x0, 3bf4 <PyThread_free_lock@plt+0x12c4>
    39d4:	ldr	x0, [x19]
    39d8:	mov	w1, #0x1                   	// #1
    39dc:	bl	2640 <PyThread_acquire_lock@plt>
    39e0:	ldr	w0, [x19, #24]
    39e4:	cbz	w0, 3af8 <PyThread_free_lock@plt+0x11c8>
    39e8:	ldr	x0, [x19, #8]
    39ec:	ldr	x0, [x0]
    39f0:	cmp	x0, #0x0
    39f4:	b.gt	3c20 <PyThread_free_lock@plt+0x12f0>
    39f8:	ldr	x2, [x19, #16]
    39fc:	ldr	x0, [x2, #16]
    3a00:	str	wzr, [x19, #24]
    3a04:	cbz	x0, 3a28 <PyThread_free_lock@plt+0x10f8>
    3a08:	ldr	x1, [x2]
    3a0c:	sub	x1, x1, #0x1
    3a10:	str	wzr, [x0, #16]
    3a14:	mov	x3, x1
    3a18:	ldr	x0, [x0]
    3a1c:	sub	x1, x1, #0x1
    3a20:	cbnz	x0, 3a10 <PyThread_free_lock@plt+0x10e0>
    3a24:	str	x3, [x2]
    3a28:	ldr	x0, [x2, #24]
    3a2c:	cbz	x0, 3a50 <PyThread_free_lock@plt+0x1120>
    3a30:	ldr	x1, [x2, #8]
    3a34:	sub	x1, x1, #0x1
    3a38:	str	wzr, [x0, #16]
    3a3c:	mov	x3, x1
    3a40:	ldr	x0, [x0]
    3a44:	sub	x1, x1, #0x1
    3a48:	cbnz	x0, 3a38 <PyThread_free_lock@plt+0x1108>
    3a4c:	str	x3, [x2, #8]
    3a50:	ldr	x0, [x19]
    3a54:	add	x21, x21, #0x950
    3a58:	bl	27b0 <PyThread_release_lock@plt>
    3a5c:	ldr	x0, [x20, #8]
    3a60:	bl	37e8 <PyThread_free_lock@plt+0xeb8>
    3a64:	str	xzr, [x20, #8]
    3a68:	ldr	x0, [x21, #8]
    3a6c:	bl	27b0 <PyThread_release_lock@plt>
    3a70:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    3a74:	ldp	x21, x22, [sp, #48]
    3a78:	ldr	x0, [x0, #4048]
    3a7c:	ldp	x23, x24, [sp, #64]
    3a80:	mov	x19, x0
    3a84:	ldr	x1, [x0]
    3a88:	ldr	x25, [sp, #80]
    3a8c:	add	x1, x1, #0x1
    3a90:	str	x1, [x0]
    3a94:	mov	x0, x19
    3a98:	ldp	x29, x30, [sp, #16]
    3a9c:	ldp	x19, x20, [sp, #32]
    3aa0:	add	sp, sp, #0x80
    3aa4:	ret
    3aa8:	ldr	x0, [x19]
    3aac:	mov	w1, #0x1                   	// #1
    3ab0:	bl	2640 <PyThread_acquire_lock@plt>
    3ab4:	ldr	w0, [x19, #24]
    3ab8:	cbz	w0, 3af8 <PyThread_free_lock@plt+0x11c8>
    3abc:	cbnz	w23, 39f8 <PyThread_free_lock@plt+0x10c8>
    3ac0:	b	39e8 <PyThread_free_lock@plt+0x10b8>
    3ac4:	ldr	x25, [sp, #80]
    3ac8:	mov	x2, x24
    3acc:	ldr	x0, [x21, #2384]
    3ad0:	add	x21, x21, #0x950
    3ad4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3ad8:	add	x1, x1, #0x5e0
    3adc:	mov	x19, #0x0                   	// #0
    3ae0:	bl	28c0 <PyErr_Format@plt>
    3ae4:	ldr	x0, [x21, #8]
    3ae8:	bl	27b0 <PyThread_release_lock@plt>
    3aec:	ldp	x21, x22, [sp, #48]
    3af0:	ldp	x23, x24, [sp, #64]
    3af4:	b	3a94 <PyThread_free_lock@plt+0x1164>
    3af8:	add	x0, x21, #0x950
    3afc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3b00:	add	x1, x1, #0x7e8
    3b04:	ldr	x0, [x0, #40]
    3b08:	bl	2670 <PyErr_SetString@plt>
    3b0c:	ldr	x0, [x19]
    3b10:	bl	27b0 <PyThread_release_lock@plt>
    3b14:	cmp	w22, #0x1
    3b18:	b.eq	3b4c <PyThread_free_lock@plt+0x121c>  // b.none
    3b1c:	add	x21, x21, #0x950
    3b20:	mov	x19, #0x0                   	// #0
    3b24:	ldr	x0, [x21, #8]
    3b28:	bl	27b0 <PyThread_release_lock@plt>
    3b2c:	mov	x0, x19
    3b30:	ldp	x29, x30, [sp, #16]
    3b34:	ldp	x19, x20, [sp, #32]
    3b38:	ldp	x21, x22, [sp, #48]
    3b3c:	ldp	x23, x24, [sp, #64]
    3b40:	ldr	x25, [sp, #80]
    3b44:	add	sp, sp, #0x80
    3b48:	ret
    3b4c:	add	x25, x21, #0x950
    3b50:	ldr	x0, [x25, #48]
    3b54:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3b58:	cbz	w0, 3bd8 <PyThread_free_lock@plt+0x12a8>
    3b5c:	ldr	x0, [x20, #8]
    3b60:	ldr	x19, [x0, #32]
    3b64:	cbnz	x19, 3c40 <PyThread_free_lock@plt+0x1310>
    3b68:	bl	26f0 <PyErr_Clear@plt>
    3b6c:	ldr	x23, [x20, #8]
    3b70:	cbz	x23, 3bc8 <PyThread_free_lock@plt+0x1298>
    3b74:	ldr	x0, [x23]
    3b78:	mov	w1, w22
    3b7c:	bl	2640 <PyThread_acquire_lock@plt>
    3b80:	ldr	x0, [x23, #32]
    3b84:	cbz	x0, 3ba8 <PyThread_free_lock@plt+0x1278>
    3b88:	ldr	x0, [x25, #40]
    3b8c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3b90:	add	x1, x1, #0x830
    3b94:	add	x21, x21, #0x950
    3b98:	bl	2670 <PyErr_SetString@plt>
    3b9c:	ldr	x0, [x23]
    3ba0:	bl	27b0 <PyThread_release_lock@plt>
    3ba4:	b	3b24 <PyThread_free_lock@plt+0x11f4>
    3ba8:	mov	x0, #0x8                   	// #8
    3bac:	bl	2910 <PyMem_Malloc@plt>
    3bb0:	mov	x1, x0
    3bb4:	str	x1, [x23, #32]
    3bb8:	ldr	x0, [x23]
    3bbc:	cbz	x1, 3c14 <PyThread_free_lock@plt+0x12e4>
    3bc0:	str	x20, [x1]
    3bc4:	bl	27b0 <PyThread_release_lock@plt>
    3bc8:	add	x21, x21, #0x950
    3bcc:	ldr	x0, [x21, #8]
    3bd0:	bl	27b0 <PyThread_release_lock@plt>
    3bd4:	b	3a70 <PyThread_free_lock@plt+0x1140>
    3bd8:	ldr	x0, [x25, #8]
    3bdc:	mov	x19, #0x0                   	// #0
    3be0:	bl	27b0 <PyThread_release_lock@plt>
    3be4:	ldp	x21, x22, [sp, #48]
    3be8:	ldp	x23, x24, [sp, #64]
    3bec:	ldr	x25, [sp, #80]
    3bf0:	b	3a94 <PyThread_free_lock@plt+0x1164>
    3bf4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3bf8:	add	x21, x21, #0x950
    3bfc:	mov	x2, x24
    3c00:	add	x1, x1, #0x7a0
    3c04:	mov	x19, #0x0                   	// #0
    3c08:	ldr	x0, [x21, #40]
    3c0c:	bl	28c0 <PyErr_Format@plt>
    3c10:	b	3b24 <PyThread_free_lock@plt+0x11f4>
    3c14:	add	x21, x21, #0x950
    3c18:	bl	27b0 <PyThread_release_lock@plt>
    3c1c:	b	3b24 <PyThread_free_lock@plt+0x11f4>
    3c20:	add	x0, x21, #0x950
    3c24:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3c28:	add	x1, x1, #0x800
    3c2c:	ldr	x0, [x0, #48]
    3c30:	bl	2670 <PyErr_SetString@plt>
    3c34:	ldr	x0, [x19]
    3c38:	bl	27b0 <PyThread_release_lock@plt>
    3c3c:	b	3b14 <PyThread_free_lock@plt+0x11e4>
    3c40:	ldr	x0, [x25, #40]
    3c44:	mov	x2, x24
    3c48:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3c4c:	add	x1, x1, #0x7a0
    3c50:	mov	x19, #0x0                   	// #0
    3c54:	bl	28c0 <PyErr_Format@plt>
    3c58:	ldr	x0, [x25, #8]
    3c5c:	bl	27b0 <PyThread_release_lock@plt>
    3c60:	ldp	x21, x22, [sp, #48]
    3c64:	ldp	x23, x24, [sp, #64]
    3c68:	ldr	x25, [sp, #80]
    3c6c:	b	3a94 <PyThread_free_lock@plt+0x1164>
    3c70:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3c74:	add	x21, x21, #0x950
    3c78:	mov	x2, x24
    3c7c:	add	x1, x1, #0x7a0
    3c80:	b	3c08 <PyThread_free_lock@plt+0x12d8>
    3c84:	nop
    3c88:	stp	x29, x30, [sp, #-48]!
    3c8c:	mov	w1, #0x1                   	// #1
    3c90:	mov	x29, sp
    3c94:	stp	x19, x20, [sp, #16]
    3c98:	adrp	x20, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3c9c:	add	x2, x20, #0x950
    3ca0:	stp	x21, x22, [sp, #32]
    3ca4:	mov	x21, x0
    3ca8:	add	x19, x2, #0x8
    3cac:	ldr	x0, [x2, #8]
    3cb0:	bl	2640 <PyThread_acquire_lock@plt>
    3cb4:	ldr	x1, [x19, #8]
    3cb8:	cbz	x1, 3d8c <PyThread_free_lock@plt+0x145c>
    3cbc:	mov	x19, x1
    3cc0:	mov	x2, #0x0                   	// #0
    3cc4:	b	3cd4 <PyThread_free_lock@plt+0x13a4>
    3cc8:	mov	x2, x19
    3ccc:	mov	x19, x0
    3cd0:	cbz	x0, 3d8c <PyThread_free_lock@plt+0x145c>
    3cd4:	ldr	x3, [x19]
    3cd8:	ldr	x0, [x19, #16]
    3cdc:	cmp	x21, x3
    3ce0:	b.ne	3cc8 <PyThread_free_lock@plt+0x1398>  // b.any
    3ce4:	cmp	x1, x19
    3ce8:	b.eq	3d80 <PyThread_free_lock@plt+0x1450>  // b.none
    3cec:	str	x0, [x2, #16]
    3cf0:	add	x22, x20, #0x950
    3cf4:	ldr	x21, [x19, #8]
    3cf8:	ldr	x0, [x22, #24]
    3cfc:	sub	x0, x0, #0x1
    3d00:	str	x0, [x22, #24]
    3d04:	cbz	x21, 3d5c <PyThread_free_lock@plt+0x142c>
    3d08:	ldr	x0, [x21]
    3d0c:	mov	w1, #0x1                   	// #1
    3d10:	bl	2640 <PyThread_acquire_lock@plt>
    3d14:	ldr	x0, [x21, #32]
    3d18:	cbz	x0, 3d24 <PyThread_free_lock@plt+0x13f4>
    3d1c:	bl	2590 <PyMem_Free@plt>
    3d20:	str	xzr, [x21, #32]
    3d24:	ldr	x0, [x21]
    3d28:	add	x20, x20, #0x950
    3d2c:	bl	27b0 <PyThread_release_lock@plt>
    3d30:	mov	x0, x19
    3d34:	bl	2590 <PyMem_Free@plt>
    3d38:	ldr	x0, [x20, #8]
    3d3c:	bl	27b0 <PyThread_release_lock@plt>
    3d40:	mov	x0, x21
    3d44:	bl	37e8 <PyThread_free_lock@plt+0xeb8>
    3d48:	mov	w0, #0x0                   	// #0
    3d4c:	ldp	x19, x20, [sp, #16]
    3d50:	ldp	x21, x22, [sp, #32]
    3d54:	ldp	x29, x30, [sp], #48
    3d58:	ret
    3d5c:	mov	x0, x19
    3d60:	bl	2590 <PyMem_Free@plt>
    3d64:	ldr	x0, [x22, #8]
    3d68:	bl	27b0 <PyThread_release_lock@plt>
    3d6c:	mov	w0, #0x0                   	// #0
    3d70:	ldp	x19, x20, [sp, #16]
    3d74:	ldp	x21, x22, [sp, #32]
    3d78:	ldp	x29, x30, [sp], #48
    3d7c:	ret
    3d80:	add	x1, x20, #0x950
    3d84:	str	x0, [x1, #16]
    3d88:	b	3cf0 <PyThread_free_lock@plt+0x13c0>
    3d8c:	ldr	x0, [x20, #2384]
    3d90:	add	x20, x20, #0x950
    3d94:	mov	x2, x21
    3d98:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3d9c:	add	x1, x1, #0x5e0
    3da0:	bl	28c0 <PyErr_Format@plt>
    3da4:	ldr	x0, [x20, #8]
    3da8:	bl	27b0 <PyThread_release_lock@plt>
    3dac:	mov	w0, #0xffffffff            	// #-1
    3db0:	b	3d4c <PyThread_free_lock@plt+0x141c>
    3db4:	nop
    3db8:	stp	x29, x30, [sp, #-48]!
    3dbc:	mov	x0, #0x28                  	// #40
    3dc0:	mov	x29, sp
    3dc4:	stp	x19, x20, [sp, #16]
    3dc8:	bl	2910 <PyMem_Malloc@plt>
    3dcc:	mov	x19, x0
    3dd0:	cbz	x0, 3ea8 <PyThread_free_lock@plt+0x1578>
    3dd4:	bl	2790 <PyThread_allocate_lock@plt>
    3dd8:	str	x0, [x19]
    3ddc:	cbz	x0, 3ed0 <PyThread_free_lock@plt+0x15a0>
    3de0:	mov	x0, #0x18                  	// #24
    3de4:	bl	2910 <PyMem_Malloc@plt>
    3de8:	mov	x1, x0
    3dec:	cbz	x0, 3ef4 <PyThread_free_lock@plt+0x15c4>
    3df0:	movi	v0.4s, #0x0
    3df4:	stp	x21, x22, [sp, #32]
    3df8:	mov	x0, #0x20                  	// #32
    3dfc:	str	xzr, [x1]
    3e00:	stur	q0, [x1, #8]
    3e04:	str	x1, [x19, #8]
    3e08:	bl	2910 <PyMem_Malloc@plt>
    3e0c:	mov	x2, x0
    3e10:	movi	v0.4s, #0x0
    3e14:	cbz	x0, 3f0c <PyThread_free_lock@plt+0x15dc>
    3e18:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3e1c:	add	x21, x21, #0x950
    3e20:	add	x20, x21, #0x8
    3e24:	mov	w1, #0x1                   	// #1
    3e28:	ldr	x0, [x21, #8]
    3e2c:	stp	q0, q0, [x2]
    3e30:	str	x2, [x19, #16]
    3e34:	str	w1, [x19, #24]
    3e38:	str	xzr, [x19, #32]
    3e3c:	bl	2640 <PyThread_acquire_lock@plt>
    3e40:	ldr	x22, [x20, #24]
    3e44:	tbnz	x22, #63, 3f98 <PyThread_free_lock@plt+0x1668>
    3e48:	add	x1, x22, #0x1
    3e4c:	str	x1, [x20, #24]
    3e50:	mov	x0, #0x20                  	// #32
    3e54:	bl	2910 <PyMem_Malloc@plt>
    3e58:	mov	x2, x0
    3e5c:	ldr	x0, [x21, #8]
    3e60:	cbz	x2, 3eb8 <PyThread_free_lock@plt+0x1588>
    3e64:	ldp	x3, x1, [x20, #8]
    3e68:	stp	x22, x19, [x2]
    3e6c:	stp	x3, xzr, [x2, #16]
    3e70:	add	x1, x1, #0x1
    3e74:	stp	x2, x1, [x20, #8]
    3e78:	bl	27b0 <PyThread_release_lock@plt>
    3e7c:	mov	x3, x20
    3e80:	mov	x1, x22
    3e84:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3e88:	mov	w5, #0x0                   	// #0
    3e8c:	add	x0, x0, #0x240
    3e90:	mov	w4, #0x0                   	// #0
    3e94:	mov	w2, #0x0                   	// #0
    3e98:	bl	2c88 <PyThread_free_lock@plt+0x358>
    3e9c:	mov	x19, x0
    3ea0:	cbz	x0, 3f88 <PyThread_free_lock@plt+0x1658>
    3ea4:	ldp	x21, x22, [sp, #32]
    3ea8:	mov	x0, x19
    3eac:	ldp	x19, x20, [sp, #16]
    3eb0:	ldp	x29, x30, [sp], #48
    3eb4:	ret
    3eb8:	bl	27b0 <PyThread_release_lock@plt>
    3ebc:	mov	x0, x19
    3ec0:	mov	x19, #0x0                   	// #0
    3ec4:	bl	37e8 <PyThread_free_lock@plt+0xeb8>
    3ec8:	ldp	x21, x22, [sp, #32]
    3ecc:	b	3ea8 <PyThread_free_lock@plt+0x1578>
    3ed0:	mov	x0, x19
    3ed4:	bl	2590 <PyMem_Free@plt>
    3ed8:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3edc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3ee0:	mov	x19, #0x0                   	// #0
    3ee4:	add	x1, x1, #0x840
    3ee8:	ldr	x0, [x0, #2440]
    3eec:	bl	2670 <PyErr_SetString@plt>
    3ef0:	b	3ea8 <PyThread_free_lock@plt+0x1578>
    3ef4:	bl	2600 <PyErr_NoMemory@plt>
    3ef8:	str	xzr, [x19, #8]
    3efc:	mov	x0, x19
    3f00:	mov	x19, #0x0                   	// #0
    3f04:	bl	2590 <PyMem_Free@plt>
    3f08:	b	3ea8 <PyThread_free_lock@plt+0x1578>
    3f0c:	ldr	x22, [x19, #8]
    3f10:	ldr	x20, [x22, #8]
    3f14:	str	xzr, [x19, #16]
    3f18:	cbz	x20, 3f64 <PyThread_free_lock@plt+0x1634>
    3f1c:	ldp	x1, x21, [x20]
    3f20:	mov	x0, x20
    3f24:	cbz	x1, 3f58 <PyThread_free_lock@plt+0x1628>
    3f28:	mov	x0, x1
    3f2c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3f30:	ldr	x0, [x20]
    3f34:	bl	2590 <PyMem_Free@plt>
    3f38:	stp	xzr, xzr, [x20]
    3f3c:	mov	x0, x20
    3f40:	bl	2590 <PyMem_Free@plt>
    3f44:	cbz	x21, 3f64 <PyThread_free_lock@plt+0x1634>
    3f48:	mov	x20, x21
    3f4c:	mov	x0, x20
    3f50:	ldp	x1, x21, [x20]
    3f54:	cbnz	x1, 3f28 <PyThread_free_lock@plt+0x15f8>
    3f58:	str	xzr, [x20, #8]
    3f5c:	bl	2590 <PyMem_Free@plt>
    3f60:	cbnz	x21, 3f48 <PyThread_free_lock@plt+0x1618>
    3f64:	str	xzr, [x22]
    3f68:	mov	x0, x22
    3f6c:	stp	xzr, xzr, [x22, #8]
    3f70:	bl	2590 <PyMem_Free@plt>
    3f74:	mov	x0, x19
    3f78:	mov	x19, #0x0                   	// #0
    3f7c:	bl	2590 <PyMem_Free@plt>
    3f80:	ldp	x21, x22, [sp, #32]
    3f84:	b	3ea8 <PyThread_free_lock@plt+0x1578>
    3f88:	mov	x0, x22
    3f8c:	bl	3c88 <PyThread_free_lock@plt+0x1358>
    3f90:	ldp	x21, x22, [sp, #32]
    3f94:	b	3ea8 <PyThread_free_lock@plt+0x1578>
    3f98:	ldr	x0, [x21, #56]
    3f9c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3fa0:	add	x1, x1, #0x868
    3fa4:	bl	2670 <PyErr_SetString@plt>
    3fa8:	ldr	x0, [x21, #8]
    3fac:	bl	27b0 <PyThread_release_lock@plt>
    3fb0:	b	3ebc <PyThread_free_lock@plt+0x158c>
    3fb4:	nop
    3fb8:	stp	x29, x30, [sp, #-32]!
    3fbc:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    3fc0:	add	x3, x3, #0x3e0
    3fc4:	mov	x29, sp
    3fc8:	mov	x0, x1
    3fcc:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    3fd0:	mov	x1, x2
    3fd4:	add	x3, x3, #0x80
    3fd8:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3fdc:	add	x4, x4, #0xef8
    3fe0:	add	x2, x2, #0x888
    3fe4:	add	x5, sp, #0x18
    3fe8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3fec:	cbz	w0, 401c <PyThread_free_lock@plt+0x16ec>
    3ff0:	ldr	x0, [sp, #24]
    3ff4:	bl	3c88 <PyThread_free_lock@plt+0x1358>
    3ff8:	cbnz	w0, 401c <PyThread_free_lock@plt+0x16ec>
    3ffc:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4000:	ldr	x1, [x1, #4048]
    4004:	mov	x0, x1
    4008:	ldr	x2, [x1]
    400c:	add	x2, x2, #0x1
    4010:	str	x2, [x1]
    4014:	ldp	x29, x30, [sp], #32
    4018:	ret
    401c:	mov	x0, #0x0                   	// #0
    4020:	ldp	x29, x30, [sp], #32
    4024:	ret
    4028:	stp	x29, x30, [sp, #-80]!
    402c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    4030:	add	x3, x3, #0x3e0
    4034:	mov	x29, sp
    4038:	mov	x0, x1
    403c:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    4040:	mov	x1, x2
    4044:	add	x3, x3, #0x90
    4048:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    404c:	add	x4, x4, #0xef8
    4050:	add	x2, x2, #0x8a0
    4054:	add	x5, sp, #0x40
    4058:	stp	x19, x20, [sp, #16]
    405c:	mov	x19, #0x0                   	// #0
    4060:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4064:	cbz	w0, 4174 <PyThread_free_lock@plt+0x1844>
    4068:	stp	x21, x22, [sp, #32]
    406c:	ldr	x22, [sp, #64]
    4070:	bl	2800 <_PyInterpreterState_Get@plt>
    4074:	mov	x20, x0
    4078:	cbz	x0, 4188 <PyThread_free_lock@plt+0x1858>
    407c:	stp	x23, x24, [sp, #48]
    4080:	adrp	x23, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    4084:	add	x24, x23, #0x950
    4088:	add	x0, x24, #0x10
    408c:	add	x2, sp, #0x48
    4090:	mov	x1, x22
    4094:	str	xzr, [sp, #72]
    4098:	bl	3598 <PyThread_free_lock@plt+0xc68>
    409c:	mov	x19, x0
    40a0:	cbz	x0, 4184 <PyThread_free_lock@plt+0x1854>
    40a4:	mov	x0, x20
    40a8:	bl	2680 <PyInterpreterState_GetID@plt>
    40ac:	mov	x21, x0
    40b0:	mov	w1, #0x1                   	// #1
    40b4:	ldr	x0, [x19]
    40b8:	bl	2640 <PyThread_acquire_lock@plt>
    40bc:	ldr	w0, [x19, #24]
    40c0:	cbz	w0, 41a0 <PyThread_free_lock@plt+0x1870>
    40c4:	ldr	x24, [x19, #16]
    40c8:	ldr	x20, [x24, #24]
    40cc:	cbnz	x20, 40e0 <PyThread_free_lock@plt+0x17b0>
    40d0:	b	4298 <PyThread_free_lock@plt+0x1968>
    40d4:	ldr	x1, [x20]
    40d8:	cbz	x1, 4220 <PyThread_free_lock@plt+0x18f0>
    40dc:	mov	x20, x1
    40e0:	ldr	x0, [x20, #8]
    40e4:	cmp	x21, x0
    40e8:	b.ne	40d4 <PyThread_free_lock@plt+0x17a4>  // b.any
    40ec:	ldr	w0, [x20, #16]
    40f0:	cbz	w0, 42b8 <PyThread_free_lock@plt+0x1988>
    40f4:	ldr	x1, [x19, #8]
    40f8:	ldr	x0, [x1, #8]
    40fc:	cbz	x0, 4208 <PyThread_free_lock@plt+0x18d8>
    4100:	ldr	x2, [x0, #8]
    4104:	str	x2, [x1, #8]
    4108:	ldr	x2, [x1, #16]
    410c:	cmp	x0, x2
    4110:	b.eq	41f4 <PyThread_free_lock@plt+0x18c4>  // b.none
    4114:	ldr	x2, [x1]
    4118:	ldr	x20, [x0]
    411c:	sub	x2, x2, #0x1
    4120:	str	x2, [x1]
    4124:	stp	xzr, xzr, [x0]
    4128:	bl	2590 <PyMem_Free@plt>
    412c:	cbz	x20, 4208 <PyThread_free_lock@plt+0x18d8>
    4130:	ldr	x0, [x19]
    4134:	bl	27b0 <PyThread_release_lock@plt>
    4138:	ldr	x0, [x19, #8]
    413c:	ldr	x0, [x0]
    4140:	cbz	x0, 42d8 <PyThread_free_lock@plt+0x19a8>
    4144:	ldr	x0, [sp, #72]
    4148:	bl	27b0 <PyThread_release_lock@plt>
    414c:	mov	x0, x20
    4150:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    4154:	mov	x19, x0
    4158:	cbz	x0, 41fc <PyThread_free_lock@plt+0x18cc>
    415c:	mov	x0, x20
    4160:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4164:	mov	x0, x20
    4168:	bl	2590 <PyMem_Free@plt>
    416c:	ldp	x21, x22, [sp, #32]
    4170:	ldp	x23, x24, [sp, #48]
    4174:	mov	x0, x19
    4178:	ldp	x19, x20, [sp, #16]
    417c:	ldp	x29, x30, [sp], #80
    4180:	ret
    4184:	ldp	x23, x24, [sp, #48]
    4188:	mov	x19, #0x0                   	// #0
    418c:	mov	x0, x19
    4190:	ldp	x19, x20, [sp, #16]
    4194:	ldp	x21, x22, [sp, #32]
    4198:	ldp	x29, x30, [sp], #80
    419c:	ret
    41a0:	ldr	x0, [x24, #40]
    41a4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    41a8:	add	x1, x1, #0x830
    41ac:	bl	2670 <PyErr_SetString@plt>
    41b0:	ldr	x0, [x19]
    41b4:	bl	27b0 <PyThread_release_lock@plt>
    41b8:	ldr	x0, [x19, #8]
    41bc:	ldr	x0, [x0]
    41c0:	cbnz	x0, 4260 <PyThread_free_lock@plt+0x1930>
    41c4:	ldr	x2, [x19, #32]
    41c8:	cbz	x2, 4260 <PyThread_free_lock@plt+0x1930>
    41cc:	ldr	x0, [x19]
    41d0:	mov	w1, #0x1                   	// #1
    41d4:	ldr	x20, [x2]
    41d8:	bl	2640 <PyThread_acquire_lock@plt>
    41dc:	ldr	x0, [x19, #32]
    41e0:	cbz	x0, 424c <PyThread_free_lock@plt+0x191c>
    41e4:	bl	2590 <PyMem_Free@plt>
    41e8:	str	xzr, [x19, #32]
    41ec:	ldr	x0, [x19]
    41f0:	b	4250 <PyThread_free_lock@plt+0x1920>
    41f4:	str	xzr, [x1, #16]
    41f8:	b	4114 <PyThread_free_lock@plt+0x17e4>
    41fc:	ldp	x21, x22, [sp, #32]
    4200:	ldp	x23, x24, [sp, #48]
    4204:	b	4174 <PyThread_free_lock@plt+0x1844>
    4208:	bl	2730 <PyErr_Occurred@plt>
    420c:	cbnz	x0, 41b0 <PyThread_free_lock@plt+0x1880>
    4210:	ldr	x0, [x19, #32]
    4214:	cbz	x0, 41b0 <PyThread_free_lock@plt+0x1880>
    4218:	str	wzr, [x19, #24]
    421c:	b	41b0 <PyThread_free_lock@plt+0x1880>
    4220:	mov	x0, #0x18                  	// #24
    4224:	bl	2910 <PyMem_Malloc@plt>
    4228:	cbz	x0, 42d0 <PyThread_free_lock@plt+0x19a0>
    422c:	mov	w1, #0x1                   	// #1
    4230:	stp	xzr, x21, [x0]
    4234:	str	w1, [x0, #16]
    4238:	str	x0, [x20]
    423c:	ldr	x0, [x24, #8]
    4240:	add	x0, x0, #0x1
    4244:	str	x0, [x24, #8]
    4248:	b	40f4 <PyThread_free_lock@plt+0x17c4>
    424c:	ldr	x0, [x19]
    4250:	bl	27b0 <PyThread_release_lock@plt>
    4254:	str	xzr, [x20, #8]
    4258:	mov	x0, x19
    425c:	bl	37e8 <PyThread_free_lock@plt+0xeb8>
    4260:	ldr	x0, [sp, #72]
    4264:	bl	27b0 <PyThread_release_lock@plt>
    4268:	bl	2730 <PyErr_Occurred@plt>
    426c:	mov	x19, x0
    4270:	cbnz	x0, 4184 <PyThread_free_lock@plt+0x1854>
    4274:	add	x23, x23, #0x950
    4278:	mov	x2, x22
    427c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4280:	add	x1, x1, #0x8b0
    4284:	ldr	x0, [x23, #64]
    4288:	bl	28c0 <PyErr_Format@plt>
    428c:	ldp	x21, x22, [sp, #32]
    4290:	ldp	x23, x24, [sp, #48]
    4294:	b	4174 <PyThread_free_lock@plt+0x1844>
    4298:	mov	x0, #0x18                  	// #24
    429c:	bl	2910 <PyMem_Malloc@plt>
    42a0:	cbz	x0, 42d0 <PyThread_free_lock@plt+0x19a0>
    42a4:	mov	w1, #0x1                   	// #1
    42a8:	stp	xzr, x21, [x0]
    42ac:	str	w1, [x0, #16]
    42b0:	str	x0, [x24, #24]
    42b4:	b	423c <PyThread_free_lock@plt+0x190c>
    42b8:	add	x0, x23, #0x950
    42bc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    42c0:	add	x1, x1, #0x7e8
    42c4:	ldr	x0, [x0, #40]
    42c8:	bl	2670 <PyErr_SetString@plt>
    42cc:	b	41b0 <PyThread_free_lock@plt+0x1880>
    42d0:	bl	2600 <PyErr_NoMemory@plt>
    42d4:	b	41b0 <PyThread_free_lock@plt+0x1880>
    42d8:	ldr	x2, [x19, #32]
    42dc:	cbz	x2, 4144 <PyThread_free_lock@plt+0x1814>
    42e0:	ldr	x0, [x19]
    42e4:	mov	w1, #0x1                   	// #1
    42e8:	ldr	x21, [x2]
    42ec:	bl	2640 <PyThread_acquire_lock@plt>
    42f0:	ldr	x0, [x19, #32]
    42f4:	cbz	x0, 4318 <PyThread_free_lock@plt+0x19e8>
    42f8:	bl	2590 <PyMem_Free@plt>
    42fc:	str	xzr, [x19, #32]
    4300:	ldr	x0, [x19]
    4304:	bl	27b0 <PyThread_release_lock@plt>
    4308:	str	xzr, [x21, #8]
    430c:	mov	x0, x19
    4310:	bl	37e8 <PyThread_free_lock@plt+0xeb8>
    4314:	b	4144 <PyThread_free_lock@plt+0x1814>
    4318:	ldr	x0, [x19]
    431c:	b	4304 <PyThread_free_lock@plt+0x19d4>
    4320:	stp	x29, x30, [sp, #-48]!
    4324:	mov	x29, sp
    4328:	ldr	x2, [x0, #8]
    432c:	stp	x19, x20, [sp, #16]
    4330:	ldr	x20, [x0, #32]
    4334:	ldr	x2, [x2, #320]
    4338:	str	x21, [sp, #32]
    433c:	ldr	x21, [x0, #16]
    4340:	blr	x2
    4344:	ldr	x0, [x20]
    4348:	mov	w1, #0x1                   	// #1
    434c:	bl	2640 <PyThread_acquire_lock@plt>
    4350:	ldr	x1, [x20, #8]
    4354:	cbz	x1, 43e8 <PyThread_free_lock@plt+0x1ab8>
    4358:	mov	x19, x1
    435c:	mov	x2, #0x0                   	// #0
    4360:	b	4374 <PyThread_free_lock@plt+0x1a44>
    4364:	ldr	x0, [x19, #16]
    4368:	mov	x2, x19
    436c:	mov	x19, x0
    4370:	cbz	x0, 43e8 <PyThread_free_lock@plt+0x1ab8>
    4374:	ldr	x0, [x19]
    4378:	cmp	x21, x0
    437c:	b.ne	4364 <PyThread_free_lock@plt+0x1a34>  // b.any
    4380:	ldr	x0, [x19, #24]
    4384:	sub	x0, x0, #0x1
    4388:	str	x0, [x19, #24]
    438c:	cbnz	x0, 43e8 <PyThread_free_lock@plt+0x1ab8>
    4390:	cmp	x1, x19
    4394:	ldr	x0, [x19, #16]
    4398:	b.eq	4418 <PyThread_free_lock@plt+0x1ae8>  // b.none
    439c:	str	x0, [x2, #16]
    43a0:	ldr	x0, [x20, #16]
    43a4:	ldr	x21, [x19, #8]
    43a8:	sub	x0, x0, #0x1
    43ac:	str	x0, [x20, #16]
    43b0:	cbz	x21, 43fc <PyThread_free_lock@plt+0x1acc>
    43b4:	ldr	x0, [x21]
    43b8:	mov	w1, #0x1                   	// #1
    43bc:	bl	2640 <PyThread_acquire_lock@plt>
    43c0:	ldr	x0, [x21, #32]
    43c4:	cbz	x0, 43d0 <PyThread_free_lock@plt+0x1aa0>
    43c8:	bl	2590 <PyMem_Free@plt>
    43cc:	str	xzr, [x21, #32]
    43d0:	ldr	x0, [x21]
    43d4:	bl	27b0 <PyThread_release_lock@plt>
    43d8:	mov	x0, x19
    43dc:	bl	2590 <PyMem_Free@plt>
    43e0:	mov	x0, x21
    43e4:	bl	37e8 <PyThread_free_lock@plt+0xeb8>
    43e8:	ldr	x0, [x20]
    43ec:	ldp	x19, x20, [sp, #16]
    43f0:	ldr	x21, [sp, #32]
    43f4:	ldp	x29, x30, [sp], #48
    43f8:	b	27b0 <PyThread_release_lock@plt>
    43fc:	mov	x0, x19
    4400:	bl	2590 <PyMem_Free@plt>
    4404:	ldr	x0, [x20]
    4408:	ldp	x19, x20, [sp, #16]
    440c:	ldr	x21, [sp, #32]
    4410:	ldp	x29, x30, [sp], #48
    4414:	b	27b0 <PyThread_release_lock@plt>
    4418:	str	x0, [x20, #8]
    441c:	b	43a0 <PyThread_free_lock@plt+0x1a70>
    4420:	stp	x29, x30, [sp, #-112]!
    4424:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    4428:	add	x3, x3, #0x3e0
    442c:	mov	x29, sp
    4430:	mov	x0, x1
    4434:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    4438:	mov	x1, x2
    443c:	add	x3, x3, #0xa0
    4440:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4444:	add	x4, x4, #0xef8
    4448:	add	x2, x2, #0x8c8
    444c:	add	x6, sp, #0x60
    4450:	add	x5, sp, #0x58
    4454:	stp	x21, x22, [sp, #32]
    4458:	mov	x21, #0x0                   	// #0
    445c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4460:	cbz	w0, 4584 <PyThread_free_lock@plt+0x1c54>
    4464:	stp	x19, x20, [sp, #16]
    4468:	stp	x23, x24, [sp, #48]
    446c:	ldp	x22, x23, [sp, #88]
    4470:	bl	2800 <_PyInterpreterState_Get@plt>
    4474:	mov	x20, x0
    4478:	cbz	x0, 4648 <PyThread_free_lock@plt+0x1d18>
    447c:	adrp	x24, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    4480:	str	x25, [sp, #64]
    4484:	add	x25, x24, #0x950
    4488:	add	x2, sp, #0x68
    448c:	mov	x1, x22
    4490:	add	x0, x25, #0x10
    4494:	str	xzr, [sp, #104]
    4498:	bl	3598 <PyThread_free_lock@plt+0xc68>
    449c:	mov	x19, x0
    44a0:	cbz	x0, 4644 <PyThread_free_lock@plt+0x1d14>
    44a4:	ldr	x21, [x0, #32]
    44a8:	cbnz	x21, 4614 <PyThread_free_lock@plt+0x1ce4>
    44ac:	mov	x0, #0x28                  	// #40
    44b0:	bl	2910 <PyMem_Malloc@plt>
    44b4:	mov	x22, x0
    44b8:	cbz	x0, 462c <PyThread_free_lock@plt+0x1cfc>
    44bc:	mov	x0, x23
    44c0:	mov	x1, x22
    44c4:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    44c8:	cbnz	w0, 4658 <PyThread_free_lock@plt+0x1d28>
    44cc:	mov	x0, x20
    44d0:	bl	2680 <PyInterpreterState_GetID@plt>
    44d4:	mov	x23, x0
    44d8:	mov	w1, #0x1                   	// #1
    44dc:	ldr	x0, [x19]
    44e0:	bl	2640 <PyThread_acquire_lock@plt>
    44e4:	ldr	w0, [x19, #24]
    44e8:	cbz	w0, 4664 <PyThread_free_lock@plt+0x1d34>
    44ec:	ldr	x25, [x19, #16]
    44f0:	ldr	x20, [x25, #16]
    44f4:	cbnz	x20, 4508 <PyThread_free_lock@plt+0x1bd8>
    44f8:	b	46a0 <PyThread_free_lock@plt+0x1d70>
    44fc:	ldr	x0, [x20]
    4500:	cbz	x0, 459c <PyThread_free_lock@plt+0x1c6c>
    4504:	mov	x20, x0
    4508:	ldr	x0, [x20, #8]
    450c:	cmp	x23, x0
    4510:	b.ne	44fc <PyThread_free_lock@plt+0x1bcc>  // b.any
    4514:	ldr	w0, [x20, #16]
    4518:	cbz	w0, 4688 <PyThread_free_lock@plt+0x1d58>
    451c:	mov	x0, #0x10                  	// #16
    4520:	ldr	x20, [x19, #8]
    4524:	bl	2910 <PyMem_Malloc@plt>
    4528:	mov	x1, x0
    452c:	cbz	x0, 45fc <PyThread_free_lock@plt+0x1ccc>
    4530:	ldp	x0, x2, [x20]
    4534:	stp	x22, xzr, [x1]
    4538:	add	x0, x0, #0x1
    453c:	str	x0, [x20]
    4540:	cbz	x2, 4594 <PyThread_free_lock@plt+0x1c64>
    4544:	ldr	x0, [x20, #16]
    4548:	str	x1, [x0, #8]
    454c:	ldr	x0, [x19]
    4550:	str	x1, [x20, #16]
    4554:	bl	27b0 <PyThread_release_lock@plt>
    4558:	ldr	x0, [sp, #104]
    455c:	bl	27b0 <PyThread_release_lock@plt>
    4560:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4564:	ldp	x19, x20, [sp, #16]
    4568:	ldr	x0, [x0, #4048]
    456c:	ldp	x23, x24, [sp, #48]
    4570:	mov	x21, x0
    4574:	ldr	x1, [x0]
    4578:	ldr	x25, [sp, #64]
    457c:	add	x1, x1, #0x1
    4580:	str	x1, [x0]
    4584:	mov	x0, x21
    4588:	ldp	x21, x22, [sp, #32]
    458c:	ldp	x29, x30, [sp], #112
    4590:	ret
    4594:	str	x1, [x20, #8]
    4598:	b	454c <PyThread_free_lock@plt+0x1c1c>
    459c:	mov	x0, #0x18                  	// #24
    45a0:	bl	2910 <PyMem_Malloc@plt>
    45a4:	cbz	x0, 45c8 <PyThread_free_lock@plt+0x1c98>
    45a8:	mov	w1, #0x1                   	// #1
    45ac:	stp	xzr, x23, [x0]
    45b0:	str	w1, [x0, #16]
    45b4:	str	x0, [x20]
    45b8:	ldr	x0, [x25]
    45bc:	add	x0, x0, #0x1
    45c0:	str	x0, [x25]
    45c4:	b	451c <PyThread_free_lock@plt+0x1bec>
    45c8:	bl	2600 <PyErr_NoMemory@plt>
    45cc:	ldr	x0, [x19]
    45d0:	bl	27b0 <PyThread_release_lock@plt>
    45d4:	ldr	x0, [sp, #104]
    45d8:	bl	27b0 <PyThread_release_lock@plt>
    45dc:	mov	x0, x22
    45e0:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    45e4:	mov	x0, x22
    45e8:	bl	2590 <PyMem_Free@plt>
    45ec:	ldp	x19, x20, [sp, #16]
    45f0:	ldp	x23, x24, [sp, #48]
    45f4:	ldr	x25, [sp, #64]
    45f8:	b	4584 <PyThread_free_lock@plt+0x1c54>
    45fc:	bl	2600 <PyErr_NoMemory@plt>
    4600:	ldr	x0, [x19]
    4604:	bl	27b0 <PyThread_release_lock@plt>
    4608:	ldr	x0, [sp, #104]
    460c:	bl	27b0 <PyThread_release_lock@plt>
    4610:	b	45dc <PyThread_free_lock@plt+0x1cac>
    4614:	ldr	x0, [x25, #40]
    4618:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    461c:	mov	x2, x22
    4620:	add	x1, x1, #0x7a0
    4624:	mov	x21, #0x0                   	// #0
    4628:	bl	28c0 <PyErr_Format@plt>
    462c:	ldr	x0, [sp, #104]
    4630:	bl	27b0 <PyThread_release_lock@plt>
    4634:	ldp	x19, x20, [sp, #16]
    4638:	ldp	x23, x24, [sp, #48]
    463c:	ldr	x25, [sp, #64]
    4640:	b	4584 <PyThread_free_lock@plt+0x1c54>
    4644:	ldr	x25, [sp, #64]
    4648:	mov	x21, #0x0                   	// #0
    464c:	ldp	x19, x20, [sp, #16]
    4650:	ldp	x23, x24, [sp, #48]
    4654:	b	4584 <PyThread_free_lock@plt+0x1c54>
    4658:	ldr	x0, [sp, #104]
    465c:	bl	27b0 <PyThread_release_lock@plt>
    4660:	b	45e4 <PyThread_free_lock@plt+0x1cb4>
    4664:	ldr	x0, [x25, #40]
    4668:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    466c:	add	x1, x1, #0x830
    4670:	bl	2670 <PyErr_SetString@plt>
    4674:	ldr	x0, [x19]
    4678:	bl	27b0 <PyThread_release_lock@plt>
    467c:	ldr	x0, [sp, #104]
    4680:	bl	27b0 <PyThread_release_lock@plt>
    4684:	b	45dc <PyThread_free_lock@plt+0x1cac>
    4688:	add	x24, x24, #0x950
    468c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4690:	add	x1, x1, #0x7e8
    4694:	ldr	x0, [x24, #40]
    4698:	bl	2670 <PyErr_SetString@plt>
    469c:	b	45cc <PyThread_free_lock@plt+0x1c9c>
    46a0:	mov	x0, #0x18                  	// #24
    46a4:	bl	2910 <PyMem_Malloc@plt>
    46a8:	cbz	x0, 45c8 <PyThread_free_lock@plt+0x1c98>
    46ac:	mov	w1, #0x1                   	// #1
    46b0:	stp	xzr, x23, [x0]
    46b4:	str	w1, [x0, #16]
    46b8:	str	x0, [x25, #16]
    46bc:	b	45b8 <PyThread_free_lock@plt+0x1c88>
    46c0:	stp	x29, x30, [sp, #-48]!
    46c4:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    46c8:	add	x3, x3, #0x3e0
    46cc:	mov	x29, sp
    46d0:	mov	x0, x1
    46d4:	add	x3, x3, #0xc0
    46d8:	mov	x1, x2
    46dc:	add	x4, sp, #0x28
    46e0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    46e4:	add	x2, x2, #0x8e0
    46e8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    46ec:	cbz	w0, 4758 <PyThread_free_lock@plt+0x1e28>
    46f0:	ldr	x0, [sp, #40]
    46f4:	bl	2550 <_PyInterpreterID_LookUp@plt>
    46f8:	cbz	x0, 4758 <PyThread_free_lock@plt+0x1e28>
    46fc:	str	x19, [sp, #16]
    4700:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    4704:	mov	x19, x0
    4708:	bl	2780 <PyThreadState_Next@plt>
    470c:	cbnz	x0, 4764 <PyThread_free_lock@plt+0x1e34>
    4710:	ldr	x0, [x19, #24]
    4714:	cbz	x0, 474c <PyThread_free_lock@plt+0x1e1c>
    4718:	ldrb	w0, [x0, #116]
    471c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4720:	ldr	x1, [x1, #4056]
    4724:	cbnz	w0, 4730 <PyThread_free_lock@plt+0x1e00>
    4728:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    472c:	ldr	x1, [x1, #4032]
    4730:	mov	x0, x1
    4734:	ldr	x2, [x1]
    4738:	ldr	x19, [sp, #16]
    473c:	add	x2, x2, #0x1
    4740:	str	x2, [x1]
    4744:	ldp	x29, x30, [sp], #48
    4748:	ret
    474c:	bl	2730 <PyErr_Occurred@plt>
    4750:	cbz	x0, 4728 <PyThread_free_lock@plt+0x1df8>
    4754:	ldr	x19, [sp, #16]
    4758:	mov	x0, #0x0                   	// #0
    475c:	ldp	x29, x30, [sp], #48
    4760:	ret
    4764:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4768:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    476c:	add	x1, x1, #0x6e8
    4770:	ldr	x0, [x0, #4000]
    4774:	ldr	x0, [x0]
    4778:	bl	2670 <PyErr_SetString@plt>
    477c:	mov	x0, #0x0                   	// #0
    4780:	ldr	x19, [sp, #16]
    4784:	b	4744 <PyThread_free_lock@plt+0x1e14>
    4788:	sub	sp, sp, #0x70
    478c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    4790:	add	x0, sp, #0x5c
    4794:	add	x3, x3, #0x3e0
    4798:	adrp	x4, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    479c:	add	x3, x3, #0xd0
    47a0:	stp	x29, x30, [sp, #16]
    47a4:	add	x29, sp, #0x10
    47a8:	add	x4, x4, #0xef8
    47ac:	add	x7, sp, #0x58
    47b0:	str	x0, [sp]
    47b4:	add	x6, sp, #0x54
    47b8:	mov	x0, x1
    47bc:	add	x5, sp, #0x60
    47c0:	mov	x1, x2
    47c4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    47c8:	add	x2, x2, #0x8f0
    47cc:	stp	wzr, wzr, [sp, #84]
    47d0:	str	wzr, [sp, #92]
    47d4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    47d8:	cbz	w0, 4940 <PyThread_free_lock@plt+0x2010>
    47dc:	stp	x19, x20, [sp, #32]
    47e0:	stp	x23, x24, [sp, #64]
    47e4:	ldp	w20, w24, [sp, #84]
    47e8:	stp	x21, x22, [sp, #48]
    47ec:	orr	w0, w20, w24
    47f0:	cbz	w0, 48f4 <PyThread_free_lock@plt+0x1fc4>
    47f4:	ldr	x19, [sp, #96]
    47f8:	bl	2800 <_PyInterpreterState_Get@plt>
    47fc:	mov	x21, x0
    4800:	cbz	x0, 499c <PyThread_free_lock@plt+0x206c>
    4804:	adrp	x23, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    4808:	add	x23, x23, #0x950
    480c:	mov	x1, x19
    4810:	add	x0, x23, #0x10
    4814:	add	x2, sp, #0x68
    4818:	str	xzr, [sp, #104]
    481c:	bl	3598 <PyThread_free_lock@plt+0xc68>
    4820:	mov	x19, x0
    4824:	cbz	x0, 499c <PyThread_free_lock@plt+0x206c>
    4828:	mov	x0, x21
    482c:	bl	2680 <PyInterpreterState_GetID@plt>
    4830:	mov	x22, x0
    4834:	mov	w1, #0x1                   	// #1
    4838:	ldr	x0, [x19]
    483c:	sub	w20, w20, w24
    4840:	bl	2640 <PyThread_acquire_lock@plt>
    4844:	ldr	w0, [x19, #24]
    4848:	cbz	w0, 4a00 <PyThread_free_lock@plt+0x20d0>
    484c:	ldr	x23, [x19, #16]
    4850:	tbnz	w20, #31, 4908 <PyThread_free_lock@plt+0x1fd8>
    4854:	ldr	x21, [x23, #16]
    4858:	cbnz	x21, 486c <PyThread_free_lock@plt+0x1f3c>
    485c:	b	4a14 <PyThread_free_lock@plt+0x20e4>
    4860:	ldr	x0, [x21]
    4864:	cbz	x0, 4960 <PyThread_free_lock@plt+0x2030>
    4868:	mov	x21, x0
    486c:	ldr	x0, [x21, #8]
    4870:	cmp	x22, x0
    4874:	b.ne	4860 <PyThread_free_lock@plt+0x1f30>  // b.any
    4878:	ldr	x0, [x23]
    487c:	sub	x0, x0, #0x1
    4880:	str	wzr, [x21, #16]
    4884:	str	x0, [x23]
    4888:	cbz	w20, 4908 <PyThread_free_lock@plt+0x1fd8>
    488c:	ldr	x0, [x19, #16]
    4890:	mov	w1, #0x1                   	// #1
    4894:	ldr	x2, [x0]
    4898:	cbnz	x2, 48b0 <PyThread_free_lock@plt+0x1f80>
    489c:	ldr	x2, [x0, #8]
    48a0:	cbnz	x2, 48b0 <PyThread_free_lock@plt+0x1f80>
    48a4:	ldr	x2, [x0, #16]
    48a8:	mov	w1, #0x0                   	// #0
    48ac:	cbz	x2, 4950 <PyThread_free_lock@plt+0x2020>
    48b0:	ldr	x0, [x19]
    48b4:	str	w1, [x19, #24]
    48b8:	bl	27b0 <PyThread_release_lock@plt>
    48bc:	ldr	x0, [sp, #104]
    48c0:	bl	27b0 <PyThread_release_lock@plt>
    48c4:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    48c8:	ldp	x19, x20, [sp, #32]
    48cc:	ldr	x1, [x1, #4048]
    48d0:	ldp	x21, x22, [sp, #48]
    48d4:	mov	x0, x1
    48d8:	ldr	x2, [x1]
    48dc:	ldp	x23, x24, [sp, #64]
    48e0:	add	x2, x2, #0x1
    48e4:	str	x2, [x1]
    48e8:	ldp	x29, x30, [sp, #16]
    48ec:	add	sp, sp, #0x70
    48f0:	ret
    48f4:	mov	w0, #0x1                   	// #1
    48f8:	mov	w24, w0
    48fc:	mov	w20, w0
    4900:	stp	w0, w0, [sp, #84]
    4904:	b	47f4 <PyThread_free_lock@plt+0x1ec4>
    4908:	ldr	x20, [x23, #24]
    490c:	cbnz	x20, 4920 <PyThread_free_lock@plt+0x1ff0>
    4910:	b	49d8 <PyThread_free_lock@plt+0x20a8>
    4914:	ldr	x0, [x20]
    4918:	cbz	x0, 49b0 <PyThread_free_lock@plt+0x2080>
    491c:	mov	x20, x0
    4920:	ldr	x0, [x20, #8]
    4924:	cmp	x22, x0
    4928:	b.ne	4914 <PyThread_free_lock@plt+0x1fe4>  // b.any
    492c:	ldr	x0, [x23, #8]
    4930:	sub	x0, x0, #0x1
    4934:	str	wzr, [x20, #16]
    4938:	str	x0, [x23, #8]
    493c:	b	488c <PyThread_free_lock@plt+0x1f5c>
    4940:	mov	x0, #0x0                   	// #0
    4944:	ldp	x29, x30, [sp, #16]
    4948:	add	sp, sp, #0x70
    494c:	ret
    4950:	ldr	x0, [x0, #24]
    4954:	cmp	x0, #0x0
    4958:	cset	w1, eq  // eq = none
    495c:	b	48b0 <PyThread_free_lock@plt+0x1f80>
    4960:	mov	x0, #0x18                  	// #24
    4964:	bl	2910 <PyMem_Malloc@plt>
    4968:	cbz	x0, 4988 <PyThread_free_lock@plt+0x2058>
    496c:	mov	w1, #0x1                   	// #1
    4970:	stp	xzr, x22, [x0]
    4974:	str	w1, [x0, #16]
    4978:	str	x0, [x21]
    497c:	mov	x21, x0
    4980:	ldr	x0, [x23]
    4984:	b	4880 <PyThread_free_lock@plt+0x1f50>
    4988:	bl	2600 <PyErr_NoMemory@plt>
    498c:	ldr	x0, [x19]
    4990:	bl	27b0 <PyThread_release_lock@plt>
    4994:	ldr	x0, [sp, #104]
    4998:	bl	27b0 <PyThread_release_lock@plt>
    499c:	mov	x0, #0x0                   	// #0
    49a0:	ldp	x19, x20, [sp, #32]
    49a4:	ldp	x21, x22, [sp, #48]
    49a8:	ldp	x23, x24, [sp, #64]
    49ac:	b	48e8 <PyThread_free_lock@plt+0x1fb8>
    49b0:	mov	x0, #0x18                  	// #24
    49b4:	bl	2910 <PyMem_Malloc@plt>
    49b8:	cbz	x0, 4988 <PyThread_free_lock@plt+0x2058>
    49bc:	mov	w1, #0x1                   	// #1
    49c0:	stp	xzr, x22, [x0]
    49c4:	str	w1, [x0, #16]
    49c8:	str	x0, [x20]
    49cc:	mov	x20, x0
    49d0:	ldr	x0, [x23, #8]
    49d4:	b	4934 <PyThread_free_lock@plt+0x2004>
    49d8:	mov	x0, #0x18                  	// #24
    49dc:	bl	2910 <PyMem_Malloc@plt>
    49e0:	mov	x20, x0
    49e4:	cbz	x0, 4988 <PyThread_free_lock@plt+0x2058>
    49e8:	mov	w0, #0x1                   	// #1
    49ec:	stp	xzr, x22, [x20]
    49f0:	str	w0, [x20, #16]
    49f4:	str	x20, [x23, #24]
    49f8:	ldr	x0, [x23, #8]
    49fc:	b	4934 <PyThread_free_lock@plt+0x2004>
    4a00:	ldr	x0, [x23, #40]
    4a04:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4a08:	add	x1, x1, #0x7e8
    4a0c:	bl	2670 <PyErr_SetString@plt>
    4a10:	b	498c <PyThread_free_lock@plt+0x205c>
    4a14:	mov	x0, #0x18                  	// #24
    4a18:	bl	2910 <PyMem_Malloc@plt>
    4a1c:	mov	x21, x0
    4a20:	cbz	x0, 4988 <PyThread_free_lock@plt+0x2058>
    4a24:	mov	w0, #0x1                   	// #1
    4a28:	stp	xzr, x22, [x21]
    4a2c:	str	w0, [x21, #16]
    4a30:	str	x21, [x23, #16]
    4a34:	ldr	x0, [x23]
    4a38:	b	4880 <PyThread_free_lock@plt+0x1f50>
    4a3c:	nop
    4a40:	stp	x29, x30, [sp, #-208]!
    4a44:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    4a48:	add	x3, x3, #0x3e0
    4a4c:	mov	x29, sp
    4a50:	mov	x0, x1
    4a54:	add	x3, x3, #0x100
    4a58:	mov	x1, x2
    4a5c:	add	x6, sp, #0xa8
    4a60:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4a64:	add	x5, sp, #0xa0
    4a68:	add	x2, x2, #0x9b8
    4a6c:	add	x4, sp, #0x98
    4a70:	stp	x23, x24, [sp, #48]
    4a74:	str	xzr, [sp, #168]
    4a78:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4a7c:	cbz	w0, 4da8 <PyThread_free_lock@plt+0x2478>
    4a80:	ldr	x0, [sp, #152]
    4a84:	stp	x21, x22, [sp, #32]
    4a88:	bl	2550 <_PyInterpreterID_LookUp@plt>
    4a8c:	mov	x21, x0
    4a90:	cbz	x0, 4e28 <PyThread_free_lock@plt+0x24f8>
    4a94:	ldr	x0, [sp, #160]
    4a98:	add	x1, sp, #0xb0
    4a9c:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    4aa0:	str	x0, [sp, #136]
    4aa4:	cbz	x0, 4e28 <PyThread_free_lock@plt+0x24f8>
    4aa8:	bl	2530 <strlen@plt>
    4aac:	ldr	x1, [sp, #176]
    4ab0:	cmp	x0, x1
    4ab4:	b.ne	4dc8 <PyThread_free_lock@plt+0x2498>  // b.any
    4ab8:	mov	x0, x21
    4abc:	stp	x19, x20, [sp, #16]
    4ac0:	stp	x27, x28, [sp, #80]
    4ac4:	ldr	x27, [sp, #168]
    4ac8:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    4acc:	mov	x19, x0
    4ad0:	bl	2780 <PyThreadState_Next@plt>
    4ad4:	mov	x23, x0
    4ad8:	cbnz	x0, 5218 <PyThread_free_lock@plt+0x28e8>
    4adc:	ldr	x0, [x19, #24]
    4ae0:	cbz	x0, 4e30 <PyThread_free_lock@plt+0x2500>
    4ae4:	ldrb	w0, [x0, #116]
    4ae8:	cbnz	w0, 5260 <PyThread_free_lock@plt+0x2930>
    4aec:	stp	x25, x26, [sp, #64]
    4af0:	cbz	x27, 4b48 <PyThread_free_lock@plt+0x2218>
    4af4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4af8:	ldr	x0, [x0, #4048]
    4afc:	cmp	x27, x0
    4b00:	b.eq	4b48 <PyThread_free_lock@plt+0x2218>  // b.none
    4b04:	mov	x0, x27
    4b08:	bl	2540 <PyDict_Size@plt>
    4b0c:	mov	x26, x0
    4b10:	cbz	x0, 4b48 <PyThread_free_lock@plt+0x2218>
    4b14:	mov	x0, #0x10                  	// #16
    4b18:	bl	2910 <PyMem_Malloc@plt>
    4b1c:	mov	x19, x0
    4b20:	cbz	x0, 4f70 <PyThread_free_lock@plt+0x2640>
    4b24:	str	x26, [x19]
    4b28:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4b2c:	movk	x0, #0x2aa, lsl #48
    4b30:	cmp	x26, x0
    4b34:	b.ls	4e48 <PyThread_free_lock@plt+0x2518>  // b.plast
    4b38:	str	xzr, [x19, #8]
    4b3c:	bl	2600 <PyErr_NoMemory@plt>
    4b40:	mov	x0, x19
    4b44:	bl	2590 <PyMem_Free@plt>
    4b48:	bl	2730 <PyErr_Occurred@plt>
    4b4c:	mov	x19, x0
    4b50:	cbnz	x0, 4d98 <PyThread_free_lock@plt+0x2468>
    4b54:	bl	2800 <_PyInterpreterState_Get@plt>
    4b58:	mov	x25, #0x0                   	// #0
    4b5c:	cmp	x21, x0
    4b60:	b.eq	4b74 <PyThread_free_lock@plt+0x2244>  // b.none
    4b64:	mov	x0, x21
    4b68:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    4b6c:	bl	2920 <PyThreadState_Swap@plt>
    4b70:	mov	x25, x0
    4b74:	mov	x0, x21
    4b78:	stp	xzr, xzr, [sp, #184]
    4b7c:	str	xzr, [sp, #200]
    4b80:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    4b84:	mov	x20, x0
    4b88:	cbz	x0, 4fb8 <PyThread_free_lock@plt+0x2688>
    4b8c:	bl	28d0 <PyModule_GetDict@plt>
    4b90:	mov	x22, x0
    4b94:	ldr	x1, [x20]
    4b98:	sub	x0, x1, #0x1
    4b9c:	str	x0, [x20]
    4ba0:	cbz	x0, 4df8 <PyThread_free_lock@plt+0x24c8>
    4ba4:	cbz	x22, 4fb8 <PyThread_free_lock@plt+0x2688>
    4ba8:	ldr	x0, [x22]
    4bac:	add	x0, x0, #0x1
    4bb0:	str	x0, [x22]
    4bb4:	cbz	x19, 4c44 <PyThread_free_lock@plt+0x2314>
    4bb8:	ldr	x0, [x19]
    4bbc:	cmp	x0, #0x0
    4bc0:	b.le	4c44 <PyThread_free_lock@plt+0x2314>
    4bc4:	mov	x24, #0x0                   	// #0
    4bc8:	mov	x26, #0x0                   	// #0
    4bcc:	nop
    4bd0:	ldr	x0, [x19, #8]
    4bd4:	add	x26, x26, #0x1
    4bd8:	add	x21, x0, x24
    4bdc:	ldr	x0, [x0, x24]
    4be0:	add	x24, x24, #0x30
    4be4:	bl	2840 <PyUnicode_FromString@plt>
    4be8:	mov	x20, x0
    4bec:	add	x0, x21, #0x8
    4bf0:	cbz	x20, 4fa8 <PyThread_free_lock@plt+0x2678>
    4bf4:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    4bf8:	mov	x21, x0
    4bfc:	mov	x1, x20
    4c00:	mov	x0, x22
    4c04:	cbz	x21, 4f94 <PyThread_free_lock@plt+0x2664>
    4c08:	mov	x2, x21
    4c0c:	bl	2870 <PyDict_SetItem@plt>
    4c10:	ldr	x1, [x20]
    4c14:	mov	w27, w0
    4c18:	sub	x0, x1, #0x1
    4c1c:	str	x0, [x20]
    4c20:	cbz	x0, 4e1c <PyThread_free_lock@plt+0x24ec>
    4c24:	ldr	x0, [x21]
    4c28:	sub	x0, x0, #0x1
    4c2c:	str	x0, [x21]
    4c30:	cbz	x0, 4dbc <PyThread_free_lock@plt+0x248c>
    4c34:	cbnz	w27, 4fa8 <PyThread_free_lock@plt+0x2678>
    4c38:	ldr	x0, [x19]
    4c3c:	cmp	x26, x0
    4c40:	b.lt	4bd0 <PyThread_free_lock@plt+0x22a0>  // b.tstop
    4c44:	ldr	x0, [sp, #136]
    4c48:	mov	w1, #0x101                 	// #257
    4c4c:	mov	x3, x22
    4c50:	mov	x2, x22
    4c54:	mov	x4, #0x0                   	// #0
    4c58:	bl	2760 <PyRun_StringFlags@plt>
    4c5c:	mov	x20, x0
    4c60:	ldr	x1, [x22]
    4c64:	sub	x0, x1, #0x1
    4c68:	str	x0, [x22]
    4c6c:	cbz	x0, 4e04 <PyThread_free_lock@plt+0x24d4>
    4c70:	cbz	x20, 4fb8 <PyThread_free_lock@plt+0x2688>
    4c74:	ldr	x0, [x20]
    4c78:	sub	x0, x0, #0x1
    4c7c:	str	x0, [x20]
    4c80:	cbz	x0, 4e10 <PyThread_free_lock@plt+0x24e0>
    4c84:	cbz	x25, 4c90 <PyThread_free_lock@plt+0x2360>
    4c88:	mov	x0, x25
    4c8c:	bl	2920 <PyThreadState_Swap@plt>
    4c90:	cbz	x19, 4d28 <PyThread_free_lock@plt+0x23f8>
    4c94:	ldp	x0, x22, [x19]
    4c98:	mov	w24, #0x0                   	// #0
    4c9c:	cmp	x0, #0x0
    4ca0:	b.le	51dc <PyThread_free_lock@plt+0x28ac>
    4ca4:	mov	x20, #0x0                   	// #0
    4ca8:	add	x23, x22, x20
    4cac:	add	x0, x23, #0x8
    4cb0:	mov	x21, #0x0                   	// #0
    4cb4:	ldr	x1, [x22, x20]
    4cb8:	cbz	x1, 4cfc <PyThread_free_lock@plt+0x23cc>
    4cbc:	nop
    4cc0:	mov	x0, x1
    4cc4:	bl	2590 <PyMem_Free@plt>
    4cc8:	str	xzr, [x22, x20]
    4ccc:	add	x0, x23, #0x8
    4cd0:	add	x21, x21, #0x1
    4cd4:	add	x20, x20, #0x30
    4cd8:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4cdc:	ldr	x0, [x19]
    4ce0:	cmp	x21, x0
    4ce4:	b.ge	4d14 <PyThread_free_lock@plt+0x23e4>  // b.tcont
    4ce8:	ldr	x22, [x19, #8]
    4cec:	add	x23, x22, x20
    4cf0:	ldr	x1, [x22, x20]
    4cf4:	add	x0, x23, #0x8
    4cf8:	cbnz	x1, 4cc0 <PyThread_free_lock@plt+0x2390>
    4cfc:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4d00:	add	x21, x21, #0x1
    4d04:	ldr	x0, [x19]
    4d08:	add	x20, x20, #0x30
    4d0c:	cmp	x21, x0
    4d10:	b.lt	4ce8 <PyThread_free_lock@plt+0x23b8>  // b.tstop
    4d14:	ldr	x0, [x19, #8]
    4d18:	bl	2590 <PyMem_Free@plt>
    4d1c:	mov	x0, x19
    4d20:	bl	2590 <PyMem_Free@plt>
    4d24:	cbnz	w24, 4d98 <PyThread_free_lock@plt+0x2468>
    4d28:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4d2c:	ldp	x19, x20, [sp, #16]
    4d30:	ldr	x0, [x0, #4048]
    4d34:	ldp	x21, x22, [sp, #32]
    4d38:	mov	x23, x0
    4d3c:	ldr	x1, [x0]
    4d40:	ldp	x25, x26, [sp, #64]
    4d44:	add	x1, x1, #0x1
    4d48:	ldp	x27, x28, [sp, #80]
    4d4c:	str	x1, [x0]
    4d50:	mov	x0, x23
    4d54:	ldp	x23, x24, [sp, #48]
    4d58:	ldp	x29, x30, [sp], #208
    4d5c:	ret
    4d60:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4d64:	mov	x2, #0x33                  	// #51
    4d68:	mov	x1, #0x1                   	// #1
    4d6c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    4d70:	ldr	x3, [x3, #3976]
    4d74:	add	x0, x0, #0xa00
    4d78:	ldr	x3, [x3]
    4d7c:	bl	27c0 <fwrite@plt>
    4d80:	bl	26f0 <PyErr_Clear@plt>
    4d84:	cbz	x25, 4d90 <PyThread_free_lock@plt+0x2460>
    4d88:	mov	x0, x25
    4d8c:	bl	2920 <PyThreadState_Swap@plt>
    4d90:	bl	2600 <PyErr_NoMemory@plt>
    4d94:	cbnz	x19, 5124 <PyThread_free_lock@plt+0x27f4>
    4d98:	ldp	x19, x20, [sp, #16]
    4d9c:	ldp	x21, x22, [sp, #32]
    4da0:	ldp	x25, x26, [sp, #64]
    4da4:	ldp	x27, x28, [sp, #80]
    4da8:	mov	x23, #0x0                   	// #0
    4dac:	mov	x0, x23
    4db0:	ldp	x23, x24, [sp, #48]
    4db4:	ldp	x29, x30, [sp], #208
    4db8:	ret
    4dbc:	mov	x0, x21
    4dc0:	bl	25e0 <_Py_Dealloc@plt>
    4dc4:	b	4c34 <PyThread_free_lock@plt+0x2304>
    4dc8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    4dcc:	mov	x23, #0x0                   	// #0
    4dd0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4dd4:	add	x1, x1, #0x9c8
    4dd8:	ldr	x0, [x0, #4016]
    4ddc:	ldr	x0, [x0]
    4de0:	bl	2670 <PyErr_SetString@plt>
    4de4:	mov	x0, x23
    4de8:	ldp	x21, x22, [sp, #32]
    4dec:	ldp	x23, x24, [sp, #48]
    4df0:	ldp	x29, x30, [sp], #208
    4df4:	ret
    4df8:	mov	x0, x20
    4dfc:	bl	25e0 <_Py_Dealloc@plt>
    4e00:	b	4ba4 <PyThread_free_lock@plt+0x2274>
    4e04:	mov	x0, x22
    4e08:	bl	25e0 <_Py_Dealloc@plt>
    4e0c:	b	4c70 <PyThread_free_lock@plt+0x2340>
    4e10:	mov	x0, x20
    4e14:	bl	25e0 <_Py_Dealloc@plt>
    4e18:	b	4c84 <PyThread_free_lock@plt+0x2354>
    4e1c:	mov	x0, x20
    4e20:	bl	25e0 <_Py_Dealloc@plt>
    4e24:	b	4c24 <PyThread_free_lock@plt+0x22f4>
    4e28:	ldp	x21, x22, [sp, #32]
    4e2c:	b	4da8 <PyThread_free_lock@plt+0x2478>
    4e30:	bl	2730 <PyErr_Occurred@plt>
    4e34:	cbz	x0, 4aec <PyThread_free_lock@plt+0x21bc>
    4e38:	ldp	x19, x20, [sp, #16]
    4e3c:	ldp	x21, x22, [sp, #32]
    4e40:	ldp	x27, x28, [sp, #80]
    4e44:	b	4da8 <PyThread_free_lock@plt+0x2478>
    4e48:	add	x0, x26, x26, lsl #1
    4e4c:	lsl	x0, x0, #4
    4e50:	bl	2910 <PyMem_Malloc@plt>
    4e54:	str	x0, [x19, #8]
    4e58:	cbz	x0, 4b3c <PyThread_free_lock@plt+0x220c>
    4e5c:	add	x0, sp, #0xc8
    4e60:	str	x0, [sp, #128]
    4e64:	add	x0, sp, #0xc0
    4e68:	mov	x25, #0x0                   	// #0
    4e6c:	mov	x24, #0x0                   	// #0
    4e70:	str	x0, [sp, #120]
    4e74:	add	x0, sp, #0xb8
    4e78:	str	x0, [sp, #112]
    4e7c:	str	xzr, [sp, #184]
    4e80:	b	4ec4 <PyThread_free_lock@plt+0x2594>
    4e84:	str	x0, [sp, #104]
    4e88:	bl	2530 <strlen@plt>
    4e8c:	add	x0, x0, #0x1
    4e90:	bl	2910 <PyMem_Malloc@plt>
    4e94:	ldr	x1, [sp, #104]
    4e98:	cbz	x0, 4f68 <PyThread_free_lock@plt+0x2638>
    4e9c:	str	x0, [sp, #104]
    4ea0:	bl	27f0 <strcpy@plt>
    4ea4:	ldr	x2, [sp, #104]
    4ea8:	str	x2, [x22], #8
    4eac:	mov	x0, x28
    4eb0:	mov	x1, x22
    4eb4:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    4eb8:	cbnz	w0, 51f0 <PyThread_free_lock@plt+0x28c0>
    4ebc:	cmp	x26, x24
    4ec0:	b.le	4efc <PyThread_free_lock@plt+0x25cc>
    4ec4:	ldp	x1, x2, [sp, #112]
    4ec8:	add	x24, x24, #0x1
    4ecc:	ldr	x3, [sp, #128]
    4ed0:	mov	x0, x27
    4ed4:	bl	27d0 <PyDict_Next@plt>
    4ed8:	cbz	w0, 4efc <PyThread_free_lock@plt+0x25cc>
    4edc:	ldp	x0, x28, [sp, #192]
    4ee0:	ldr	x20, [x19, #8]
    4ee4:	add	x20, x20, x25
    4ee8:	add	x25, x25, #0x30
    4eec:	mov	x22, x20
    4ef0:	bl	27e0 <PyUnicode_AsUTF8@plt>
    4ef4:	cbnz	x0, 4e84 <PyThread_free_lock@plt+0x2554>
    4ef8:	str	xzr, [x20]
    4efc:	bl	2730 <PyErr_Occurred@plt>
    4f00:	cbz	x0, 4b54 <PyThread_free_lock@plt+0x2224>
    4f04:	ldr	x0, [x19]
    4f08:	mov	x20, #0x0                   	// #0
    4f0c:	mov	x24, #0x0                   	// #0
    4f10:	cmp	x0, #0x0
    4f14:	b.le	4f54 <PyThread_free_lock@plt+0x2624>
    4f18:	ldr	x22, [x19, #8]
    4f1c:	add	x25, x22, x20
    4f20:	ldr	x1, [x22, x20]
    4f24:	add	x0, x25, #0x8
    4f28:	cbz	x1, 4f78 <PyThread_free_lock@plt+0x2648>
    4f2c:	mov	x0, x1
    4f30:	bl	2590 <PyMem_Free@plt>
    4f34:	str	xzr, [x22, x20]
    4f38:	add	x0, x25, #0x8
    4f3c:	add	x24, x24, #0x1
    4f40:	add	x20, x20, #0x30
    4f44:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4f48:	ldr	x0, [x19]
    4f4c:	cmp	x0, x24
    4f50:	b.gt	4f18 <PyThread_free_lock@plt+0x25e8>
    4f54:	ldr	x0, [x19, #8]
    4f58:	bl	2590 <PyMem_Free@plt>
    4f5c:	mov	x0, x19
    4f60:	bl	2590 <PyMem_Free@plt>
    4f64:	b	4b48 <PyThread_free_lock@plt+0x2218>
    4f68:	bl	2600 <PyErr_NoMemory@plt>
    4f6c:	b	4ef8 <PyThread_free_lock@plt+0x25c8>
    4f70:	bl	2600 <PyErr_NoMemory@plt>
    4f74:	b	4b48 <PyThread_free_lock@plt+0x2218>
    4f78:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4f7c:	add	x24, x24, #0x1
    4f80:	ldr	x0, [x19]
    4f84:	add	x20, x20, #0x30
    4f88:	cmp	x24, x0
    4f8c:	b.lt	4f18 <PyThread_free_lock@plt+0x25e8>  // b.tstop
    4f90:	b	4f54 <PyThread_free_lock@plt+0x2624>
    4f94:	ldr	x0, [x20]
    4f98:	sub	x0, x0, #0x1
    4f9c:	str	x0, [x20]
    4fa0:	cbz	x0, 520c <PyThread_free_lock@plt+0x28dc>
    4fa4:	nop
    4fa8:	ldr	x0, [x22]
    4fac:	sub	x0, x0, #0x1
    4fb0:	str	x0, [x22]
    4fb4:	cbz	x0, 5288 <PyThread_free_lock@plt+0x2958>
    4fb8:	add	x2, sp, #0xc8
    4fbc:	add	x1, sp, #0xc0
    4fc0:	add	x0, sp, #0xb8
    4fc4:	bl	2820 <PyErr_Fetch@plt>
    4fc8:	mov	x0, #0x10                  	// #16
    4fcc:	ldp	x21, x24, [sp, #184]
    4fd0:	bl	2910 <PyMem_Malloc@plt>
    4fd4:	mov	x20, x0
    4fd8:	cbz	x0, 52e0 <PyThread_free_lock@plt+0x29b0>
    4fdc:	stp	xzr, xzr, [x20]
    4fe0:	mov	x1, x21
    4fe4:	adrp	x26, 5000 <PyThread_free_lock@plt+0x26d0>
    4fe8:	add	x0, x26, #0x9f8
    4fec:	bl	24f0 <PyUnicode_FromFormat@plt>
    4ff0:	mov	x21, x0
    4ff4:	cbz	x0, 5254 <PyThread_free_lock@plt+0x2924>
    4ff8:	bl	27e0 <PyUnicode_AsUTF8@plt>
    4ffc:	mov	x27, x0
    5000:	cbz	x0, 5160 <PyThread_free_lock@plt+0x2830>
    5004:	bl	2530 <strlen@plt>
    5008:	add	x0, x0, #0x1
    500c:	bl	2910 <PyMem_Malloc@plt>
    5010:	mov	x22, x0
    5014:	cbz	x0, 52e8 <PyThread_free_lock@plt+0x29b8>
    5018:	mov	x1, x27
    501c:	bl	27f0 <strcpy@plt>
    5020:	ldr	x0, [x21]
    5024:	str	x22, [x20]
    5028:	sub	x0, x0, #0x1
    502c:	str	x0, [x21]
    5030:	cbz	x0, 5174 <PyThread_free_lock@plt+0x2844>
    5034:	cbz	x24, 5088 <PyThread_free_lock@plt+0x2758>
    5038:	mov	x1, x24
    503c:	add	x0, x26, #0x9f8
    5040:	bl	24f0 <PyUnicode_FromFormat@plt>
    5044:	mov	x21, x0
    5048:	cbz	x0, 5294 <PyThread_free_lock@plt+0x2964>
    504c:	bl	27e0 <PyUnicode_AsUTF8@plt>
    5050:	mov	x24, x0
    5054:	cbz	x0, 52a0 <PyThread_free_lock@plt+0x2970>
    5058:	bl	2530 <strlen@plt>
    505c:	add	x0, x0, #0x1
    5060:	bl	2910 <PyMem_Malloc@plt>
    5064:	mov	x22, x0
    5068:	cbz	x0, 5304 <PyThread_free_lock@plt+0x29d4>
    506c:	mov	x1, x24
    5070:	bl	27f0 <strcpy@plt>
    5074:	ldr	x0, [x21]
    5078:	str	x22, [x20, #8]
    507c:	sub	x0, x0, #0x1
    5080:	str	x0, [x21]
    5084:	cbz	x0, 52b4 <PyThread_free_lock@plt+0x2984>
    5088:	ldr	x0, [sp, #184]
    508c:	cbz	x0, 50a0 <PyThread_free_lock@plt+0x2770>
    5090:	ldr	x1, [x0]
    5094:	sub	x1, x1, #0x1
    5098:	str	x1, [x0]
    509c:	cbz	x1, 524c <PyThread_free_lock@plt+0x291c>
    50a0:	ldr	x0, [sp, #192]
    50a4:	cbz	x0, 50b8 <PyThread_free_lock@plt+0x2788>
    50a8:	ldr	x1, [x0]
    50ac:	sub	x1, x1, #0x1
    50b0:	str	x1, [x0]
    50b4:	cbz	x1, 5244 <PyThread_free_lock@plt+0x2914>
    50b8:	ldr	x0, [sp, #200]
    50bc:	cbz	x0, 50d0 <PyThread_free_lock@plt+0x27a0>
    50c0:	ldr	x1, [x0]
    50c4:	sub	x1, x1, #0x1
    50c8:	str	x1, [x0]
    50cc:	cbz	x1, 5158 <PyThread_free_lock@plt+0x2828>
    50d0:	cbz	x20, 4d60 <PyThread_free_lock@plt+0x2430>
    50d4:	cbz	x25, 50e0 <PyThread_free_lock@plt+0x27b0>
    50d8:	mov	x0, x25
    50dc:	bl	2920 <PyThreadState_Swap@plt>
    50e0:	ldp	x2, x3, [x20]
    50e4:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    50e8:	ldr	x0, [x0, #2456]
    50ec:	cbz	x2, 51b8 <PyThread_free_lock@plt+0x2888>
    50f0:	cbz	x3, 51c8 <PyThread_free_lock@plt+0x2898>
    50f4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    50f8:	add	x1, x1, #0xa38
    50fc:	bl	28c0 <PyErr_Format@plt>
    5100:	ldr	x0, [x20]
    5104:	cbz	x0, 510c <PyThread_free_lock@plt+0x27dc>
    5108:	bl	2590 <PyMem_Free@plt>
    510c:	ldr	x0, [x20, #8]
    5110:	cbz	x0, 5118 <PyThread_free_lock@plt+0x27e8>
    5114:	bl	2590 <PyMem_Free@plt>
    5118:	mov	x0, x20
    511c:	bl	2590 <PyMem_Free@plt>
    5120:	cbz	x19, 4d98 <PyThread_free_lock@plt+0x2468>
    5124:	ldp	x0, x22, [x19]
    5128:	mov	w24, #0xffffffff            	// #-1
    512c:	cmp	x0, #0x0
    5130:	b.gt	4ca4 <PyThread_free_lock@plt+0x2374>
    5134:	mov	x0, x22
    5138:	bl	2590 <PyMem_Free@plt>
    513c:	mov	x0, x19
    5140:	bl	2590 <PyMem_Free@plt>
    5144:	ldp	x19, x20, [sp, #16]
    5148:	ldp	x21, x22, [sp, #32]
    514c:	ldp	x25, x26, [sp, #64]
    5150:	ldp	x27, x28, [sp, #80]
    5154:	b	4dac <PyThread_free_lock@plt+0x247c>
    5158:	bl	25e0 <_Py_Dealloc@plt>
    515c:	b	50d0 <PyThread_free_lock@plt+0x27a0>
    5160:	ldr	x0, [x21]
    5164:	str	xzr, [x20]
    5168:	sub	x0, x0, #0x1
    516c:	str	x0, [x21]
    5170:	cbnz	x0, 5184 <PyThread_free_lock@plt+0x2854>
    5174:	mov	x0, x21
    5178:	bl	25e0 <_Py_Dealloc@plt>
    517c:	ldr	x0, [x20]
    5180:	cbnz	x0, 5034 <PyThread_free_lock@plt+0x2704>
    5184:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    5188:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    518c:	add	x21, x21, #0x930
    5190:	ldr	x0, [x0, #4008]
    5194:	ldr	x0, [x0]
    5198:	bl	26a0 <PyErr_ExceptionMatches@plt>
    519c:	bl	26f0 <PyErr_Clear@plt>
    51a0:	ldr	x0, [x20]
    51a4:	cbz	x0, 51b0 <PyThread_free_lock@plt+0x2880>
    51a8:	bl	2590 <PyMem_Free@plt>
    51ac:	str	xzr, [x20]
    51b0:	str	x21, [x20, #8]
    51b4:	b	5088 <PyThread_free_lock@plt+0x2758>
    51b8:	cbz	x3, 51d4 <PyThread_free_lock@plt+0x28a4>
    51bc:	mov	x1, x3
    51c0:	bl	2670 <PyErr_SetString@plt>
    51c4:	b	5100 <PyThread_free_lock@plt+0x27d0>
    51c8:	mov	x1, x2
    51cc:	bl	2670 <PyErr_SetString@plt>
    51d0:	b	5100 <PyThread_free_lock@plt+0x27d0>
    51d4:	bl	2690 <PyErr_SetNone@plt>
    51d8:	b	5100 <PyThread_free_lock@plt+0x27d0>
    51dc:	mov	x0, x22
    51e0:	bl	2590 <PyMem_Free@plt>
    51e4:	mov	x0, x19
    51e8:	bl	2590 <PyMem_Free@plt>
    51ec:	b	4d28 <PyThread_free_lock@plt+0x23f8>
    51f0:	ldr	x0, [x20]
    51f4:	cbz	x0, 5200 <PyThread_free_lock@plt+0x28d0>
    51f8:	bl	2590 <PyMem_Free@plt>
    51fc:	str	xzr, [x20]
    5200:	mov	x0, x22
    5204:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    5208:	b	4efc <PyThread_free_lock@plt+0x25cc>
    520c:	mov	x0, x20
    5210:	bl	25e0 <_Py_Dealloc@plt>
    5214:	b	4fa8 <PyThread_free_lock@plt+0x2678>
    5218:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    521c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5220:	mov	x23, #0x0                   	// #0
    5224:	add	x1, x1, #0x6e8
    5228:	ldr	x0, [x0, #4000]
    522c:	ldr	x0, [x0]
    5230:	bl	2670 <PyErr_SetString@plt>
    5234:	ldp	x19, x20, [sp, #16]
    5238:	ldp	x21, x22, [sp, #32]
    523c:	ldp	x27, x28, [sp, #80]
    5240:	b	4dac <PyThread_free_lock@plt+0x247c>
    5244:	bl	25e0 <_Py_Dealloc@plt>
    5248:	b	50b8 <PyThread_free_lock@plt+0x2788>
    524c:	bl	25e0 <_Py_Dealloc@plt>
    5250:	b	50a0 <PyThread_free_lock@plt+0x2770>
    5254:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    5258:	add	x21, x21, #0x990
    525c:	b	519c <PyThread_free_lock@plt+0x286c>
    5260:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    5264:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5268:	add	x1, x1, #0x710
    526c:	ldr	x0, [x0, #4000]
    5270:	ldr	x0, [x0]
    5274:	bl	28c0 <PyErr_Format@plt>
    5278:	ldp	x19, x20, [sp, #16]
    527c:	ldp	x21, x22, [sp, #32]
    5280:	ldp	x27, x28, [sp, #80]
    5284:	b	4dac <PyThread_free_lock@plt+0x247c>
    5288:	mov	x0, x22
    528c:	bl	25e0 <_Py_Dealloc@plt>
    5290:	b	4fb8 <PyThread_free_lock@plt+0x2688>
    5294:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    5298:	add	x21, x21, #0x908
    529c:	b	519c <PyThread_free_lock@plt+0x286c>
    52a0:	ldr	x0, [x21]
    52a4:	str	xzr, [x20, #8]
    52a8:	sub	x0, x0, #0x1
    52ac:	str	x0, [x21]
    52b0:	cbnz	x0, 52c4 <PyThread_free_lock@plt+0x2994>
    52b4:	mov	x0, x21
    52b8:	bl	25e0 <_Py_Dealloc@plt>
    52bc:	ldr	x0, [x20, #8]
    52c0:	cbnz	x0, 5088 <PyThread_free_lock@plt+0x2758>
    52c4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    52c8:	adrp	x21, 5000 <PyThread_free_lock@plt+0x26d0>
    52cc:	add	x21, x21, #0x960
    52d0:	ldr	x0, [x0, #4008]
    52d4:	ldr	x0, [x0]
    52d8:	bl	26a0 <PyErr_ExceptionMatches@plt>
    52dc:	b	519c <PyThread_free_lock@plt+0x286c>
    52e0:	bl	2600 <PyErr_NoMemory@plt>
    52e4:	b	5088 <PyThread_free_lock@plt+0x2758>
    52e8:	bl	2600 <PyErr_NoMemory@plt>
    52ec:	ldr	x0, [x21]
    52f0:	str	xzr, [x20]
    52f4:	sub	x0, x0, #0x1
    52f8:	str	x0, [x21]
    52fc:	cbnz	x0, 5184 <PyThread_free_lock@plt+0x2854>
    5300:	b	5174 <PyThread_free_lock@plt+0x2844>
    5304:	bl	2600 <PyErr_NoMemory@plt>
    5308:	ldr	x0, [x21]
    530c:	str	xzr, [x20, #8]
    5310:	sub	x0, x0, #0x1
    5314:	str	x0, [x21]
    5318:	cbnz	x0, 52c4 <PyThread_free_lock@plt+0x2994>
    531c:	b	52b4 <PyThread_free_lock@plt+0x2984>

0000000000005320 <PyInit__xxsubinterpreters@@Base>:
    5320:	stp	x29, x30, [sp, #-64]!
    5324:	mov	x29, sp
    5328:	stp	x19, x20, [sp, #16]
    532c:	stp	x21, x22, [sp, #32]
    5330:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    5334:	add	x20, x21, #0x950
    5338:	ldr	x0, [x20, #8]
    533c:	cbz	x0, 556c <PyInit__xxsubinterpreters@@Base+0x24c>
    5340:	add	x22, x21, #0x950
    5344:	stp	x23, x24, [sp, #48]
    5348:	adrp	x23, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    534c:	add	x0, x23, #0x240
    5350:	str	xzr, [x22, #16]
    5354:	stp	xzr, xzr, [x22, #24]
    5358:	bl	26c0 <PyType_Ready@plt>
    535c:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5360:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ce0>
    5364:	add	x0, x0, #0x3e0
    5368:	add	x0, x0, #0x120
    536c:	mov	w1, #0x3f5                 	// #1013
    5370:	bl	2740 <PyModule_Create2@plt>
    5374:	mov	x19, x0
    5378:	cbz	x0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    537c:	bl	28d0 <PyModule_GetDict@plt>
    5380:	adrp	x24, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    5384:	ldr	x1, [x22, #72]
    5388:	mov	x20, x0
    538c:	cbz	x1, 5518 <PyInit__xxsubinterpreters@@Base+0x1f8>
    5390:	ldr	x24, [x24, #4000]
    5394:	add	x22, x21, #0x950
    5398:	mov	x2, #0x0                   	// #0
    539c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    53a0:	add	x0, x0, #0xa70
    53a4:	ldr	x1, [x24]
    53a8:	bl	26e0 <PyErr_NewException@plt>
    53ac:	str	x0, [x22, #56]
    53b0:	mov	x2, x0
    53b4:	cbz	x0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    53b8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    53bc:	mov	x0, x20
    53c0:	add	x1, x1, #0xac8
    53c4:	bl	2510 <PyDict_SetItemString@plt>
    53c8:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    53cc:	ldr	x1, [x22, #56]
    53d0:	mov	x2, #0x0                   	// #0
    53d4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    53d8:	add	x0, x0, #0xad8
    53dc:	bl	26e0 <PyErr_NewException@plt>
    53e0:	str	x0, [x21, #2384]
    53e4:	mov	x2, x0
    53e8:	cbz	x0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    53ec:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    53f0:	mov	x0, x20
    53f4:	add	x1, x1, #0xb00
    53f8:	bl	2510 <PyDict_SetItemString@plt>
    53fc:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5400:	ldr	x1, [x22, #56]
    5404:	mov	x2, #0x0                   	// #0
    5408:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    540c:	add	x0, x0, #0xb18
    5410:	bl	26e0 <PyErr_NewException@plt>
    5414:	str	x0, [x22, #40]
    5418:	mov	x2, x0
    541c:	cbz	x0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5420:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5424:	mov	x0, x20
    5428:	add	x1, x1, #0xb40
    542c:	bl	2510 <PyDict_SetItemString@plt>
    5430:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5434:	ldr	x1, [x22, #56]
    5438:	mov	x2, #0x0                   	// #0
    543c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5440:	add	x0, x0, #0xb58
    5444:	bl	26e0 <PyErr_NewException@plt>
    5448:	str	x0, [x22, #64]
    544c:	mov	x2, x0
    5450:	cbz	x0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5454:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5458:	mov	x0, x20
    545c:	add	x1, x1, #0xb80
    5460:	bl	2510 <PyDict_SetItemString@plt>
    5464:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5468:	ldr	x1, [x22, #56]
    546c:	mov	x2, #0x0                   	// #0
    5470:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5474:	add	x0, x0, #0xb98
    5478:	bl	26e0 <PyErr_NewException@plt>
    547c:	str	x0, [x22, #48]
    5480:	mov	x2, x0
    5484:	cbz	x0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5488:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    548c:	mov	x0, x20
    5490:	add	x1, x1, #0xbc0
    5494:	bl	2510 <PyDict_SetItemString@plt>
    5498:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    549c:	ldr	x0, [x23, #576]
    54a0:	add	x21, x23, #0x240
    54a4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    54a8:	mov	x2, x21
    54ac:	add	x0, x0, #0x1
    54b0:	add	x1, x1, #0xbd8
    54b4:	str	x0, [x23, #576]
    54b8:	mov	x0, x20
    54bc:	bl	2510 <PyDict_SetItemString@plt>
    54c0:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    54c4:	adrp	x2, 17000 <PyInit__xxsubinterpreters@@Base+0x11ce0>
    54c8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    54cc:	mov	x0, x20
    54d0:	add	x1, x1, #0xbe8
    54d4:	ldr	x2, [x2, #3984]
    54d8:	ldr	x3, [x2]
    54dc:	add	x3, x3, #0x1
    54e0:	str	x3, [x2]
    54e4:	bl	2510 <PyDict_SetItemString@plt>
    54e8:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    54ec:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    54f0:	mov	x0, x21
    54f4:	add	x1, x1, #0xa18
    54f8:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    54fc:	cbnz	w0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    5500:	mov	x0, x19
    5504:	ldp	x19, x20, [sp, #16]
    5508:	ldp	x21, x22, [sp, #32]
    550c:	ldp	x23, x24, [sp, #48]
    5510:	ldp	x29, x30, [sp], #64
    5514:	ret
    5518:	ldr	x1, [x24, #4000]
    551c:	mov	x2, #0x0                   	// #0
    5520:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5524:	add	x0, x0, #0xa90
    5528:	ldr	x1, [x1]
    552c:	bl	26e0 <PyErr_NewException@plt>
    5530:	str	x0, [x22, #72]
    5534:	mov	x2, x0
    5538:	cbz	x0, 5550 <PyInit__xxsubinterpreters@@Base+0x230>
    553c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5540:	mov	x0, x20
    5544:	add	x1, x1, #0xab8
    5548:	bl	2510 <PyDict_SetItemString@plt>
    554c:	cbz	w0, 5390 <PyInit__xxsubinterpreters@@Base+0x70>
    5550:	ldp	x23, x24, [sp, #48]
    5554:	mov	x19, #0x0                   	// #0
    5558:	mov	x0, x19
    555c:	ldp	x19, x20, [sp, #16]
    5560:	ldp	x21, x22, [sp, #32]
    5564:	ldp	x29, x30, [sp], #64
    5568:	ret
    556c:	bl	2790 <PyThread_allocate_lock@plt>
    5570:	str	x0, [x20, #8]
    5574:	mov	x19, x0
    5578:	cbnz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x20>
    557c:	ldr	x0, [x20, #56]
    5580:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5584:	add	x1, x1, #0xa40
    5588:	bl	2670 <PyErr_SetString@plt>
    558c:	b	5558 <PyInit__xxsubinterpreters@@Base+0x238>

Disassembly of section .fini:

0000000000005590 <.fini>:
    5590:	stp	x29, x30, [sp, #-16]!
    5594:	mov	x29, sp
    5598:	ldp	x29, x30, [sp], #16
    559c:	ret
