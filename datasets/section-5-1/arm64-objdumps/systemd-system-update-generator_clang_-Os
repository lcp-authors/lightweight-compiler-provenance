
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-system-update-generator_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400b00 <_init>:
  400b00:	stp	x29, x30, [sp, #-16]!
  400b04:	mov	x29, sp
  400b08:	bl	400cb8 <call_weak_fn>
  400b0c:	ldp	x29, x30, [sp], #16
  400b10:	ret

Disassembly of section .plt:

0000000000400b18 <__libc_start_main@plt-0x20>:
  400b18:	stp	x16, x30, [sp, #-16]!
  400b1c:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b20:	ldr	x17, [x16, #3936]
  400b24:	add	x16, x16, #0xf60
  400b28:	br	x17
  400b2c:	nop
  400b30:	nop
  400b34:	nop

0000000000400b38 <__libc_start_main@plt>:
  400b38:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b3c:	ldr	x17, [x16, #3944]
  400b40:	add	x16, x16, #0xf68
  400b44:	br	x17

0000000000400b48 <abort@plt>:
  400b48:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b4c:	ldr	x17, [x16, #3952]
  400b50:	add	x16, x16, #0xf70
  400b54:	br	x17

0000000000400b58 <__gmon_start__@plt>:
  400b58:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b5c:	ldr	x17, [x16, #3960]
  400b60:	add	x16, x16, #0xf78
  400b64:	br	x17

0000000000400b68 <log_setup_generator@plt>:
  400b68:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b6c:	ldr	x17, [x16, #3968]
  400b70:	add	x16, x16, #0xf80
  400b74:	br	x17

0000000000400b78 <log_get_max_level_realm@plt>:
  400b78:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b7c:	ldr	x17, [x16, #3976]
  400b80:	add	x16, x16, #0xf88
  400b84:	br	x17

0000000000400b88 <log_internal_realm@plt>:
  400b88:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b8c:	ldr	x17, [x16, #3984]
  400b90:	add	x16, x16, #0xf90
  400b94:	br	x17

0000000000400b98 <log_assert_failed_realm@plt>:
  400b98:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400b9c:	ldr	x17, [x16, #3992]
  400ba0:	add	x16, x16, #0xf98
  400ba4:	br	x17

0000000000400ba8 <proc_cmdline_parse@plt>:
  400ba8:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400bac:	ldr	x17, [x16, #4000]
  400bb0:	add	x16, x16, #0xfa0
  400bb4:	br	x17

0000000000400bb8 <ask_password_agent_close@plt>:
  400bb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400bbc:	ldr	x17, [x16, #4008]
  400bc0:	add	x16, x16, #0xfa8
  400bc4:	br	x17

0000000000400bc8 <polkit_agent_close@plt>:
  400bc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400bcc:	ldr	x17, [x16, #4016]
  400bd0:	add	x16, x16, #0xfb0
  400bd4:	br	x17

0000000000400bd8 <pager_close@plt>:
  400bd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400bdc:	ldr	x17, [x16, #4024]
  400be0:	add	x16, x16, #0xfb8
  400be4:	br	x17

0000000000400be8 <mac_selinux_finish@plt>:
  400be8:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400bec:	ldr	x17, [x16, #4032]
  400bf0:	add	x16, x16, #0xfc0
  400bf4:	br	x17

0000000000400bf8 <faccessat@plt>:
  400bf8:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400bfc:	ldr	x17, [x16, #4040]
  400c00:	add	x16, x16, #0xfc8
  400c04:	br	x17

0000000000400c08 <strlen@plt>:
  400c08:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400c0c:	ldr	x17, [x16, #4048]
  400c10:	add	x16, x16, #0xfd0
  400c14:	br	x17

0000000000400c18 <stpcpy@plt>:
  400c18:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400c1c:	ldr	x17, [x16, #4056]
  400c20:	add	x16, x16, #0xfd8
  400c24:	br	x17

0000000000400c28 <symlink@plt>:
  400c28:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400c2c:	ldr	x17, [x16, #4064]
  400c30:	add	x16, x16, #0xfe0
  400c34:	br	x17

0000000000400c38 <__errno_location@plt>:
  400c38:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400c3c:	ldr	x17, [x16, #4072]
  400c40:	add	x16, x16, #0xfe8
  400c44:	br	x17

0000000000400c48 <strcmp@plt>:
  400c48:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400c4c:	ldr	x17, [x16, #4080]
  400c50:	add	x16, x16, #0xff0
  400c54:	br	x17

0000000000400c58 <runlevel_to_target@plt>:
  400c58:	adrp	x16, 41f000 <__FRAME_END__+0x1d920>
  400c5c:	ldr	x17, [x16, #4088]
  400c60:	add	x16, x16, #0xff8
  400c64:	br	x17

Disassembly of section .text:

0000000000400c68 <_start>:
  400c68:	mov	x29, #0x0                   	// #0
  400c6c:	mov	x30, #0x0                   	// #0
  400c70:	mov	x5, x0
  400c74:	ldr	x1, [sp]
  400c78:	add	x2, sp, #0x8
  400c7c:	mov	x6, sp
  400c80:	movz	x0, #0x0, lsl #48
  400c84:	movk	x0, #0x0, lsl #32
  400c88:	movk	x0, #0x40, lsl #16
  400c8c:	movk	x0, #0xd94
  400c90:	movz	x3, #0x0, lsl #48
  400c94:	movk	x3, #0x0, lsl #32
  400c98:	movk	x3, #0x40, lsl #16
  400c9c:	movk	x3, #0x1210
  400ca0:	movz	x4, #0x0, lsl #48
  400ca4:	movk	x4, #0x0, lsl #32
  400ca8:	movk	x4, #0x40, lsl #16
  400cac:	movk	x4, #0x1290
  400cb0:	bl	400b38 <__libc_start_main@plt>
  400cb4:	bl	400b48 <abort@plt>

0000000000400cb8 <call_weak_fn>:
  400cb8:	adrp	x0, 41f000 <__FRAME_END__+0x1d920>
  400cbc:	ldr	x0, [x0, #3896]
  400cc0:	cbz	x0, 400cc8 <call_weak_fn+0x10>
  400cc4:	b	400b58 <__gmon_start__@plt>
  400cc8:	ret

0000000000400ccc <deregister_tm_clones>:
  400ccc:	adrp	x0, 420000 <completed.8445>
  400cd0:	add	x1, x0, #0x0
  400cd4:	adrp	x0, 420000 <completed.8445>
  400cd8:	add	x0, x0, #0x0
  400cdc:	cmp	x1, x0
  400ce0:	b.eq	400d0c <deregister_tm_clones+0x40>  // b.none
  400ce4:	sub	sp, sp, #0x10
  400ce8:	adrp	x1, 401000 <generate_symlink+0xbc>
  400cec:	ldr	x1, [x1, #680]
  400cf0:	str	x1, [sp, #8]
  400cf4:	cbz	x1, 400d04 <deregister_tm_clones+0x38>
  400cf8:	mov	x16, x1
  400cfc:	add	sp, sp, #0x10
  400d00:	br	x16
  400d04:	add	sp, sp, #0x10
  400d08:	ret
  400d0c:	ret

0000000000400d10 <register_tm_clones>:
  400d10:	adrp	x0, 420000 <completed.8445>
  400d14:	add	x1, x0, #0x0
  400d18:	adrp	x0, 420000 <completed.8445>
  400d1c:	add	x0, x0, #0x0
  400d20:	sub	x1, x1, x0
  400d24:	mov	x2, #0x2                   	// #2
  400d28:	asr	x1, x1, #3
  400d2c:	sdiv	x1, x1, x2
  400d30:	cbz	x1, 400d5c <register_tm_clones+0x4c>
  400d34:	sub	sp, sp, #0x10
  400d38:	adrp	x2, 401000 <generate_symlink+0xbc>
  400d3c:	ldr	x2, [x2, #688]
  400d40:	str	x2, [sp, #8]
  400d44:	cbz	x2, 400d54 <register_tm_clones+0x44>
  400d48:	mov	x16, x2
  400d4c:	add	sp, sp, #0x10
  400d50:	br	x16
  400d54:	add	sp, sp, #0x10
  400d58:	ret
  400d5c:	ret

0000000000400d60 <__do_global_dtors_aux>:
  400d60:	stp	x29, x30, [sp, #-32]!
  400d64:	mov	x29, sp
  400d68:	str	x19, [sp, #16]
  400d6c:	adrp	x19, 420000 <completed.8445>
  400d70:	ldrb	w0, [x19]
  400d74:	cbnz	w0, 400d84 <__do_global_dtors_aux+0x24>
  400d78:	bl	400ccc <deregister_tm_clones>
  400d7c:	mov	w0, #0x1                   	// #1
  400d80:	strb	w0, [x19]
  400d84:	ldr	x19, [sp, #16]
  400d88:	ldp	x29, x30, [sp], #32
  400d8c:	ret

0000000000400d90 <frame_dummy>:
  400d90:	b	400d10 <register_tm_clones>

0000000000400d94 <main>:
  400d94:	stp	x29, x30, [sp, #-48]!
  400d98:	adrp	x8, 420000 <completed.8445>
  400d9c:	adrp	x9, 420000 <completed.8445>
  400da0:	str	x21, [sp, #16]
  400da4:	stp	x20, x19, [sp, #32]
  400da8:	mov	x29, sp
  400dac:	mov	x19, x1
  400db0:	mov	w20, w0
  400db4:	str	w0, [x8, #16]
  400db8:	str	x1, [x9, #24]
  400dbc:	bl	400b68 <log_setup_generator@plt>
  400dc0:	cmp	w20, #0x2
  400dc4:	b.lt	400e18 <main+0x84>  // b.tstop
  400dc8:	cmp	w20, #0x4
  400dcc:	b.eq	400e18 <main+0x84>  // b.none
  400dd0:	mov	w0, wzr
  400dd4:	bl	400b78 <log_get_max_level_realm@plt>
  400dd8:	cmp	w0, #0x3
  400ddc:	b.lt	400ed4 <main+0x140>  // b.tstop
  400de0:	ldp	x20, x19, [sp, #32]
  400de4:	ldr	x21, [sp, #16]
  400de8:	adrp	x2, 401000 <generate_symlink+0xbc>
  400dec:	adrp	x4, 401000 <generate_symlink+0xbc>
  400df0:	adrp	x5, 401000 <generate_symlink+0xbc>
  400df4:	mov	w1, #0x16                  	// #22
  400df8:	add	x2, x2, #0x2bb
  400dfc:	add	x4, x4, #0x2f1
  400e00:	add	x5, x5, #0x2f6
  400e04:	mov	w0, #0x3                   	// #3
  400e08:	movk	w1, #0x4000, lsl #16
  400e0c:	mov	w3, #0x48                  	// #72
  400e10:	ldp	x29, x30, [sp], #48
  400e14:	b	400b88 <log_internal_realm@plt>
  400e18:	cmp	w20, #0x1
  400e1c:	b.le	400e54 <main+0xc0>
  400e20:	ldr	x8, [x19, #16]
  400e24:	adrp	x9, 420000 <completed.8445>
  400e28:	str	x8, [x9, #8]
  400e2c:	cbnz	x8, 400e64 <main+0xd0>
  400e30:	adrp	x1, 401000 <generate_symlink+0xbc>
  400e34:	adrp	x2, 401000 <generate_symlink+0xbc>
  400e38:	adrp	x4, 401000 <generate_symlink+0xbc>
  400e3c:	add	x1, x1, #0x327
  400e40:	add	x2, x2, #0x2bb
  400e44:	add	x4, x4, #0x33d
  400e48:	mov	w3, #0x3a                  	// #58
  400e4c:	mov	w0, wzr
  400e50:	bl	400b98 <log_assert_failed_realm@plt>
  400e54:	adrp	x9, 401000 <generate_symlink+0xbc>
  400e58:	adrp	x8, 420000 <completed.8445>
  400e5c:	add	x9, x9, #0x322
  400e60:	str	x9, [x8, #8]
  400e64:	bl	400f44 <generate_symlink>
  400e68:	cmp	w0, #0x1
  400e6c:	b.lt	400edc <main+0x148>  // b.tstop
  400e70:	adrp	x0, 401000 <generate_symlink+0xbc>
  400e74:	add	x0, x0, #0xfc
  400e78:	mov	x1, xzr
  400e7c:	mov	w2, wzr
  400e80:	bl	400ba8 <proc_cmdline_parse@plt>
  400e84:	mov	w19, wzr
  400e88:	tbz	w0, #31, 400ee0 <main+0x14c>
  400e8c:	mov	w20, w0
  400e90:	mov	w0, wzr
  400e94:	bl	400b78 <log_get_max_level_realm@plt>
  400e98:	cmp	w0, #0x4
  400e9c:	mov	w19, wzr
  400ea0:	b.lt	400ee0 <main+0x14c>  // b.tstop
  400ea4:	adrp	x2, 401000 <generate_symlink+0xbc>
  400ea8:	adrp	x4, 401000 <generate_symlink+0xbc>
  400eac:	adrp	x5, 401000 <generate_symlink+0xbc>
  400eb0:	add	x2, x2, #0x2bb
  400eb4:	add	x4, x4, #0x36f
  400eb8:	add	x5, x5, #0x373
  400ebc:	mov	w0, #0x4                   	// #4
  400ec0:	mov	w3, #0x43                  	// #67
  400ec4:	mov	w1, w20
  400ec8:	bl	400b88 <log_internal_realm@plt>
  400ecc:	mov	w19, wzr
  400ed0:	b	400ee0 <main+0x14c>
  400ed4:	mov	w0, #0xffffffea            	// #-22
  400ed8:	b	400f34 <main+0x1a0>
  400edc:	mov	w19, w0
  400ee0:	bl	400bb8 <ask_password_agent_close@plt>
  400ee4:	bl	400bc8 <polkit_agent_close@plt>
  400ee8:	bl	400bd8 <pager_close@plt>
  400eec:	bl	400be8 <mac_selinux_finish@plt>
  400ef0:	adrp	x8, 41f000 <__FRAME_END__+0x1d920>
  400ef4:	ldr	x8, [x8, #3904]
  400ef8:	adrp	x20, 41f000 <__FRAME_END__+0x1d920>
  400efc:	ldr	x20, [x20, #3912]
  400f00:	add	x9, x8, #0x7
  400f04:	and	x21, x9, #0xfffffffffffffff8
  400f08:	cmp	x21, x20
  400f0c:	cset	w9, cs  // cs = hs, nlast
  400f10:	cmp	x8, #0x0
  400f14:	cset	w8, eq  // eq = none
  400f18:	orr	w8, w8, w9
  400f1c:	tbnz	w8, #0, 400f30 <main+0x19c>
  400f20:	ldp	x0, x8, [x21], #16
  400f24:	blr	x8
  400f28:	cmp	x21, x20
  400f2c:	b.cc	400f20 <main+0x18c>  // b.lo, b.ul, b.last
  400f30:	lsr	w0, w19, #31
  400f34:	ldp	x20, x19, [sp, #32]
  400f38:	ldr	x21, [sp, #16]
  400f3c:	ldp	x29, x30, [sp], #48
  400f40:	ret

0000000000400f44 <generate_symlink>:
  400f44:	stp	x29, x30, [sp, #-48]!
  400f48:	str	x21, [sp, #16]
  400f4c:	stp	x20, x19, [sp, #32]
  400f50:	mov	x29, sp
  400f54:	sub	sp, sp, #0x10
  400f58:	adrp	x1, 401000 <generate_symlink+0xbc>
  400f5c:	add	x1, x1, #0x3a5
  400f60:	mov	w0, #0xffffff9c            	// #-100
  400f64:	mov	w3, #0x100                 	// #256
  400f68:	mov	w2, wzr
  400f6c:	bl	400bf8 <faccessat@plt>
  400f70:	tbnz	w0, #31, 401014 <generate_symlink+0xd0>
  400f74:	adrp	x9, 420000 <completed.8445>
  400f78:	ldr	x9, [x9, #8]
  400f7c:	adrp	x10, 401000 <generate_symlink+0xbc>
  400f80:	mov	x19, xzr
  400f84:	mov	x8, xzr
  400f88:	add	x10, x10, #0x3eb
  400f8c:	sub	x20, x29, #0x10
  400f90:	stp	x9, x10, [x29, #-16]
  400f94:	ldr	x0, [x20, x8, lsl #3]
  400f98:	cbz	x0, 400fb0 <generate_symlink+0x6c>
  400f9c:	mov	x21, x8
  400fa0:	bl	400c08 <strlen@plt>
  400fa4:	add	x19, x0, x19
  400fa8:	mov	w8, #0x1                   	// #1
  400fac:	cbz	x21, 400f94 <generate_symlink+0x50>
  400fb0:	add	x8, x19, #0x1
  400fb4:	cmp	x8, #0x400, lsl #12
  400fb8:	b.hi	4010d8 <generate_symlink+0x194>  // b.pmore
  400fbc:	add	x8, x8, #0xf
  400fc0:	mov	x9, sp
  400fc4:	and	x8, x8, #0xfffffffffffffff0
  400fc8:	sub	x19, x9, x8
  400fcc:	mov	sp, x19
  400fd0:	mov	x8, xzr
  400fd4:	sub	x20, x29, #0x10
  400fd8:	mov	x0, x19
  400fdc:	ldr	x1, [x20, x8, lsl #3]
  400fe0:	cbz	x1, 400ff4 <generate_symlink+0xb0>
  400fe4:	mov	x21, x8
  400fe8:	bl	400c18 <stpcpy@plt>
  400fec:	mov	w8, #0x1                   	// #1
  400ff0:	cbz	x21, 400fdc <generate_symlink+0x98>
  400ff4:	strb	wzr, [x0]
  400ff8:	adrp	x0, 401000 <generate_symlink+0xbc>
  400ffc:	add	x0, x0, #0x435
  401000:	mov	x1, x19
  401004:	bl	400c28 <symlink@plt>
  401008:	tbnz	w0, #31, 40102c <generate_symlink+0xe8>
  40100c:	mov	w0, #0x1                   	// #1
  401010:	b	4010c4 <generate_symlink+0x180>
  401014:	bl	400c38 <__errno_location@plt>
  401018:	ldr	w19, [x0]
  40101c:	cmp	w19, #0x2
  401020:	b.ne	401074 <generate_symlink+0x130>  // b.any
  401024:	mov	w0, wzr
  401028:	b	4010c4 <generate_symlink+0x180>
  40102c:	bl	400c38 <__errno_location@plt>
  401030:	ldr	w20, [x0]
  401034:	mov	w0, wzr
  401038:	bl	400b78 <log_get_max_level_realm@plt>
  40103c:	cmp	w0, #0x3
  401040:	b.lt	4010b4 <generate_symlink+0x170>  // b.tstop
  401044:	adrp	x2, 401000 <generate_symlink+0xbc>
  401048:	adrp	x4, 401000 <generate_symlink+0xbc>
  40104c:	adrp	x5, 401000 <generate_symlink+0xbc>
  401050:	add	x2, x2, #0x2bb
  401054:	add	x4, x4, #0x3b4
  401058:	add	x5, x5, #0x45e
  40105c:	mov	w0, #0x3                   	// #3
  401060:	mov	w3, #0x22                  	// #34
  401064:	mov	w1, w20
  401068:	mov	x6, x19
  40106c:	bl	400b88 <log_internal_realm@plt>
  401070:	b	4010c4 <generate_symlink+0x180>
  401074:	mov	w0, wzr
  401078:	bl	400b78 <log_get_max_level_realm@plt>
  40107c:	cmp	w0, #0x3
  401080:	b.lt	4010ac <generate_symlink+0x168>  // b.tstop
  401084:	adrp	x2, 401000 <generate_symlink+0xbc>
  401088:	adrp	x4, 401000 <generate_symlink+0xbc>
  40108c:	adrp	x5, 401000 <generate_symlink+0xbc>
  401090:	add	x2, x2, #0x2bb
  401094:	add	x4, x4, #0x3b4
  401098:	add	x5, x5, #0x3c5
  40109c:	mov	w0, #0x3                   	// #3
  4010a0:	mov	w3, #0x1c                  	// #28
  4010a4:	mov	w1, w19
  4010a8:	bl	400b88 <log_internal_realm@plt>
  4010ac:	mov	w0, #0xffffffea            	// #-22
  4010b0:	b	4010c4 <generate_symlink+0x180>
  4010b4:	cmp	w20, #0x0
  4010b8:	mov	w8, wzr
  4010bc:	cneg	w9, w20, mi  // mi = first
  4010c0:	sub	w0, w8, w9, uxtb
  4010c4:	mov	sp, x29
  4010c8:	ldp	x20, x19, [sp, #32]
  4010cc:	ldr	x21, [sp, #16]
  4010d0:	ldp	x29, x30, [sp], #48
  4010d4:	ret
  4010d8:	adrp	x1, 401000 <generate_symlink+0xbc>
  4010dc:	adrp	x2, 401000 <generate_symlink+0xbc>
  4010e0:	adrp	x4, 401000 <generate_symlink+0xbc>
  4010e4:	add	x1, x1, #0x416
  4010e8:	add	x2, x2, #0x2bb
  4010ec:	add	x4, x4, #0x3fb
  4010f0:	mov	w3, #0x20                  	// #32
  4010f4:	mov	w0, wzr
  4010f8:	bl	400b98 <log_assert_failed_realm@plt>

00000000004010fc <parse_proc_cmdline_item>:
  4010fc:	stp	x29, x30, [sp, #-32]!
  401100:	stp	x20, x19, [sp, #16]
  401104:	mov	x29, sp
  401108:	cbz	x0, 4011f0 <parse_proc_cmdline_item+0xf4>
  40110c:	mov	x20, x1
  401110:	adrp	x1, 401000 <generate_symlink+0xbc>
  401114:	add	x1, x1, #0x4c2
  401118:	mov	x19, x0
  40111c:	bl	400c48 <strcmp@plt>
  401120:	cbz	w0, 40112c <parse_proc_cmdline_item+0x30>
  401124:	cbnz	x20, 4011e0 <parse_proc_cmdline_item+0xe4>
  401128:	b	401198 <parse_proc_cmdline_item+0x9c>
  40112c:	bl	400b78 <log_get_max_level_realm@plt>
  401130:	cmp	w0, #0x4
  401134:	cbz	x20, 401168 <parse_proc_cmdline_item+0x6c>
  401138:	b.lt	4011e0 <parse_proc_cmdline_item+0xe4>  // b.tstop
  40113c:	adrp	x2, 401000 <generate_symlink+0xbc>
  401140:	adrp	x4, 401000 <generate_symlink+0xbc>
  401144:	adrp	x5, 401000 <generate_symlink+0xbc>
  401148:	add	x2, x2, #0x2bb
  40114c:	add	x4, x4, #0x4cf
  401150:	add	x5, x5, #0x4e7
  401154:	mov	w0, #0x4                   	// #4
  401158:	mov	w3, #0x30                  	// #48
  40115c:	mov	w1, wzr
  401160:	bl	400b88 <log_internal_realm@plt>
  401164:	b	4011e0 <parse_proc_cmdline_item+0xe4>
  401168:	b.lt	401198 <parse_proc_cmdline_item+0x9c>  // b.tstop
  40116c:	adrp	x2, 401000 <generate_symlink+0xbc>
  401170:	adrp	x4, 401000 <generate_symlink+0xbc>
  401174:	adrp	x5, 401000 <generate_symlink+0xbc>
  401178:	add	x2, x2, #0x585
  40117c:	add	x4, x4, #0x59e
  401180:	add	x5, x5, #0x5b9
  401184:	mov	w0, #0x4                   	// #4
  401188:	mov	w3, #0x21                  	// #33
  40118c:	mov	w1, wzr
  401190:	mov	x6, x19
  401194:	bl	400b88 <log_internal_realm@plt>
  401198:	mov	x0, x19
  40119c:	bl	400c58 <runlevel_to_target@plt>
  4011a0:	cbz	x0, 4011e0 <parse_proc_cmdline_item+0xe4>
  4011a4:	mov	w0, wzr
  4011a8:	bl	400b78 <log_get_max_level_realm@plt>
  4011ac:	cmp	w0, #0x4
  4011b0:	b.lt	4011e0 <parse_proc_cmdline_item+0xe4>  // b.tstop
  4011b4:	adrp	x2, 401000 <generate_symlink+0xbc>
  4011b8:	adrp	x4, 401000 <generate_symlink+0xbc>
  4011bc:	adrp	x5, 401000 <generate_symlink+0xbc>
  4011c0:	add	x2, x2, #0x2bb
  4011c4:	add	x4, x4, #0x4cf
  4011c8:	add	x5, x5, #0x535
  4011cc:	mov	w0, #0x4                   	// #4
  4011d0:	mov	w3, #0x32                  	// #50
  4011d4:	mov	w1, wzr
  4011d8:	mov	x6, x19
  4011dc:	bl	400b88 <log_internal_realm@plt>
  4011e0:	ldp	x20, x19, [sp, #16]
  4011e4:	mov	w0, wzr
  4011e8:	ldp	x29, x30, [sp], #32
  4011ec:	ret
  4011f0:	adrp	x1, 401000 <generate_symlink+0xbc>
  4011f4:	adrp	x2, 401000 <generate_symlink+0xbc>
  4011f8:	adrp	x4, 401000 <generate_symlink+0xbc>
  4011fc:	add	x1, x1, #0x47e
  401200:	add	x2, x2, #0x2bb
  401204:	add	x4, x4, #0x482
  401208:	mov	w3, #0x28                  	// #40
  40120c:	bl	400b98 <log_assert_failed_realm@plt>

0000000000401210 <__libc_csu_init>:
  401210:	stp	x29, x30, [sp, #-64]!
  401214:	mov	x29, sp
  401218:	stp	x19, x20, [sp, #16]
  40121c:	adrp	x20, 41f000 <__FRAME_END__+0x1d920>
  401220:	add	x20, x20, #0xd10
  401224:	stp	x21, x22, [sp, #32]
  401228:	adrp	x21, 41f000 <__FRAME_END__+0x1d920>
  40122c:	add	x21, x21, #0xd08
  401230:	sub	x20, x20, x21
  401234:	mov	w22, w0
  401238:	stp	x23, x24, [sp, #48]
  40123c:	mov	x23, x1
  401240:	mov	x24, x2
  401244:	bl	400b00 <_init>
  401248:	cmp	xzr, x20, asr #3
  40124c:	b.eq	401278 <__libc_csu_init+0x68>  // b.none
  401250:	asr	x20, x20, #3
  401254:	mov	x19, #0x0                   	// #0
  401258:	ldr	x3, [x21, x19, lsl #3]
  40125c:	mov	x2, x24
  401260:	add	x19, x19, #0x1
  401264:	mov	x1, x23
  401268:	mov	w0, w22
  40126c:	blr	x3
  401270:	cmp	x20, x19
  401274:	b.ne	401258 <__libc_csu_init+0x48>  // b.any
  401278:	ldp	x19, x20, [sp, #16]
  40127c:	ldp	x21, x22, [sp, #32]
  401280:	ldp	x23, x24, [sp, #48]
  401284:	ldp	x29, x30, [sp], #64
  401288:	ret
  40128c:	nop

0000000000401290 <__libc_csu_fini>:
  401290:	ret

Disassembly of section .fini:

0000000000401294 <_fini>:
  401294:	stp	x29, x30, [sp, #-16]!
  401298:	mov	x29, sp
  40129c:	ldp	x29, x30, [sp], #16
  4012a0:	ret
