
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//efi_gop.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_memcpy>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	ldr	x2, [sp, #24]
      18:	ldr	x1, [sp, #32]
      1c:	ldr	x0, [sp, #40]
      20:	bl	0 <grub_memmove>
      24:	ldp	x29, x30, [sp], #48
      28:	ret

000000000000002c <grub_video_register>:
      2c:	sub	sp, sp, #0x20
      30:	str	x0, [sp, #8]
      34:	adrp	x0, 0 <grub_memcpy>
      38:	add	x0, x0, #0x0
      3c:	ldr	x0, [x0]
      40:	str	x0, [sp, #24]
      44:	b	54 <grub_video_register+0x28>
      48:	ldr	x0, [sp, #24]
      4c:	ldr	x0, [x0]
      50:	str	x0, [sp, #24]
      54:	ldr	x0, [sp, #24]
      58:	ldr	x0, [x0]
      5c:	cmp	x0, #0x0
      60:	b.eq	80 <grub_video_register+0x54>  // b.none
      64:	ldr	x0, [sp, #24]
      68:	ldr	x0, [x0]
      6c:	ldr	w1, [x0, #28]
      70:	ldr	x0, [sp, #8]
      74:	ldr	w0, [x0, #28]
      78:	cmp	w1, w0
      7c:	b.hi	48 <grub_video_register+0x1c>  // b.pmore
      80:	ldr	x0, [sp, #24]
      84:	ldr	x1, [x0]
      88:	ldr	x0, [sp, #8]
      8c:	str	x1, [x0]
      90:	ldr	x0, [sp, #24]
      94:	ldr	x1, [sp, #8]
      98:	str	x1, [x0]
      9c:	ldr	x0, [sp, #8]
      a0:	ldr	x1, [sp, #24]
      a4:	str	x1, [x0, #8]
      a8:	ldr	x0, [sp, #8]
      ac:	ldr	x0, [x0]
      b0:	cmp	x0, #0x0
      b4:	b.eq	c8 <grub_video_register+0x9c>  // b.none
      b8:	ldr	x0, [sp, #8]
      bc:	ldr	x0, [x0]
      c0:	ldr	x1, [sp, #8]
      c4:	str	x1, [x0, #8]
      c8:	nop
      cc:	add	sp, sp, #0x20
      d0:	ret
      d4:	nop
	...

00000000000000e0 <grub_video_unregister>:
      e0:	stp	x29, x30, [sp, #-32]!
      e4:	mov	x29, sp
      e8:	str	x0, [sp, #24]
      ec:	ldr	x0, [sp, #24]
      f0:	bl	0 <grub_list_remove>
      f4:	nop
      f8:	ldp	x29, x30, [sp], #32
      fc:	ret

0000000000000100 <check_protocol_hook>:
     100:	sub	sp, sp, #0x20
     104:	str	x0, [sp, #8]
     108:	str	x1, [sp]
     10c:	ldr	x0, [sp]
     110:	str	x0, [sp, #24]
     114:	ldr	x0, [sp, #24]
     118:	mov	w1, #0x1                   	// #1
     11c:	str	w1, [x0]
     120:	mov	w0, #0x1                   	// #1
     124:	add	sp, sp, #0x20
     128:	ret

000000000000012c <check_protocol>:
     12c:	stp	x29, x30, [sp, #-48]!
     130:	mov	x29, sp
     134:	str	wzr, [sp, #20]
     138:	add	x0, sp, #0x18
     13c:	mov	x3, x0
     140:	mov	x2, #0x0                   	// #0
     144:	adrp	x0, 0 <grub_memcpy>
     148:	add	x0, x0, #0x0
     14c:	ldr	x1, [x0]
     150:	mov	w0, #0x2                   	// #2
     154:	bl	0 <grub_efi_locate_handle>
     158:	str	x0, [sp, #32]
     15c:	ldr	x0, [sp, #32]
     160:	cmp	x0, #0x0
     164:	b.eq	174 <check_protocol+0x48>  // b.none
     168:	ldr	x0, [sp, #24]
     16c:	cmp	x0, #0x0
     170:	b.ne	17c <check_protocol+0x50>  // b.any
     174:	mov	w0, #0x0                   	// #0
     178:	b	258 <check_protocol+0x12c>
     17c:	str	xzr, [sp, #40]
     180:	b	224 <check_protocol+0xf8>
     184:	ldr	x0, [sp, #40]
     188:	lsl	x0, x0, #3
     18c:	ldr	x1, [sp, #32]
     190:	add	x0, x1, x0
     194:	ldr	x1, [x0]
     198:	adrp	x0, 0 <grub_memcpy>
     19c:	add	x0, x0, #0x0
     1a0:	ldr	x0, [x0]
     1a4:	str	x1, [x0]
     1a8:	adrp	x0, 0 <grub_memcpy>
     1ac:	add	x0, x0, #0x0
     1b0:	ldr	x0, [x0]
     1b4:	ldr	x3, [x0]
     1b8:	mov	w2, #0x2                   	// #2
     1bc:	adrp	x0, 0 <grub_memcpy>
     1c0:	add	x0, x0, #0x0
     1c4:	ldr	x1, [x0]
     1c8:	mov	x0, x3
     1cc:	bl	0 <grub_efi_open_protocol>
     1d0:	mov	x1, x0
     1d4:	adrp	x0, 0 <grub_memcpy>
     1d8:	add	x0, x0, #0x0
     1dc:	ldr	x0, [x0]
     1e0:	str	x1, [x0]
     1e4:	add	x0, sp, #0x14
     1e8:	mov	x1, x0
     1ec:	adrp	x0, 0 <grub_memcpy>
     1f0:	add	x0, x0, #0x0
     1f4:	ldr	x0, [x0]
     1f8:	bl	98c <grub_video_gop_iterate>
     1fc:	ldr	w0, [sp, #20]
     200:	cmp	w0, #0x0
     204:	b.eq	218 <check_protocol+0xec>  // b.none
     208:	ldr	x0, [sp, #32]
     20c:	bl	0 <grub_free>
     210:	mov	w0, #0x1                   	// #1
     214:	b	258 <check_protocol+0x12c>
     218:	ldr	x0, [sp, #40]
     21c:	add	x0, x0, #0x1
     220:	str	x0, [sp, #40]
     224:	ldr	x0, [sp, #24]
     228:	ldr	x1, [sp, #40]
     22c:	cmp	x1, x0
     230:	b.cc	184 <check_protocol+0x58>  // b.lo, b.ul, b.last
     234:	adrp	x0, 0 <grub_memcpy>
     238:	add	x0, x0, #0x0
     23c:	ldr	x0, [x0]
     240:	str	xzr, [x0]
     244:	adrp	x0, 0 <grub_memcpy>
     248:	add	x0, x0, #0x0
     24c:	ldr	x0, [x0]
     250:	str	xzr, [x0]
     254:	mov	w0, #0x0                   	// #0
     258:	ldp	x29, x30, [sp], #48
     25c:	ret
	...

0000000000000280 <grub_video_gop_init>:
     280:	stp	x29, x30, [sp, #-16]!
     284:	mov	x29, sp
     288:	mov	x2, #0x68                  	// #104
     28c:	mov	w1, #0x0                   	// #0
     290:	adrp	x0, 0 <grub_memcpy>
     294:	add	x0, x0, #0x0
     298:	ldr	x0, [x0]
     29c:	bl	0 <grub_memset>
     2a0:	bl	0 <grub_video_fb_init>
     2a4:	ldp	x29, x30, [sp], #16
     2a8:	ret
     2ac:	nop
	...

00000000000002b8 <grub_video_gop_fini>:
     2b8:	stp	x29, x30, [sp, #-16]!
     2bc:	mov	x29, sp
     2c0:	adrp	x0, 0 <grub_memcpy>
     2c4:	add	x0, x0, #0x0
     2c8:	ldr	x0, [x0]
     2cc:	ldr	w0, [x0]
     2d0:	cmp	w0, #0x0
     2d4:	b.eq	328 <grub_video_gop_fini+0x70>  // b.none
     2d8:	adrp	x0, 0 <grub_memcpy>
     2dc:	add	x0, x0, #0x0
     2e0:	ldr	x0, [x0]
     2e4:	ldr	x0, [x0]
     2e8:	ldr	x2, [x0, #8]
     2ec:	adrp	x0, 0 <grub_memcpy>
     2f0:	add	x0, x0, #0x0
     2f4:	ldr	x0, [x0]
     2f8:	ldr	x3, [x0]
     2fc:	adrp	x0, 0 <grub_memcpy>
     300:	add	x0, x0, #0x0
     304:	ldr	x0, [x0]
     308:	ldr	w0, [x0]
     30c:	mov	w1, w0
     310:	mov	x0, x3
     314:	blr	x2
     318:	adrp	x0, 0 <grub_memcpy>
     31c:	add	x0, x0, #0x0
     320:	ldr	x0, [x0]
     324:	str	wzr, [x0]
     328:	adrp	x0, 0 <grub_memcpy>
     32c:	add	x0, x0, #0x0
     330:	ldr	x0, [x0]
     334:	ldr	x0, [x0, #96]
     338:	bl	0 <grub_free>
     33c:	adrp	x0, 0 <grub_memcpy>
     340:	add	x0, x0, #0x0
     344:	ldr	x0, [x0]
     348:	str	xzr, [x0, #96]
     34c:	bl	0 <grub_video_fb_fini>
     350:	ldp	x29, x30, [sp], #16
     354:	ret
	...

0000000000000378 <grub_video_gop_get_bpp>:
     378:	sub	sp, sp, #0x20
     37c:	str	x0, [sp, #8]
     380:	ldr	x0, [sp, #8]
     384:	ldr	w0, [x0, #12]
     388:	cmp	w0, #0x1
     38c:	b.ls	39c <grub_video_gop_get_bpp+0x24>  // b.plast
     390:	cmp	w0, #0x2
     394:	b.eq	3a4 <grub_video_gop_get_bpp+0x2c>  // b.none
     398:	b	4d4 <grub_video_gop_get_bpp+0x15c>
     39c:	mov	w0, #0x20                  	// #32
     3a0:	b	4d8 <grub_video_gop_get_bpp+0x160>
     3a4:	ldr	x0, [sp, #8]
     3a8:	ldr	w1, [x0, #16]
     3ac:	ldr	x0, [sp, #8]
     3b0:	ldr	w0, [x0, #20]
     3b4:	and	w0, w1, w0
     3b8:	cmp	w0, #0x0
     3bc:	b.ne	44c <grub_video_gop_get_bpp+0xd4>  // b.any
     3c0:	ldr	x0, [sp, #8]
     3c4:	ldr	w1, [x0, #16]
     3c8:	ldr	x0, [sp, #8]
     3cc:	ldr	w0, [x0, #24]
     3d0:	and	w0, w1, w0
     3d4:	cmp	w0, #0x0
     3d8:	b.ne	44c <grub_video_gop_get_bpp+0xd4>  // b.any
     3dc:	ldr	x0, [sp, #8]
     3e0:	ldr	w1, [x0, #20]
     3e4:	ldr	x0, [sp, #8]
     3e8:	ldr	w0, [x0, #24]
     3ec:	and	w0, w1, w0
     3f0:	cmp	w0, #0x0
     3f4:	b.ne	44c <grub_video_gop_get_bpp+0xd4>  // b.any
     3f8:	ldr	x0, [sp, #8]
     3fc:	ldr	w1, [x0, #16]
     400:	ldr	x0, [sp, #8]
     404:	ldr	w0, [x0, #28]
     408:	and	w0, w1, w0
     40c:	cmp	w0, #0x0
     410:	b.ne	44c <grub_video_gop_get_bpp+0xd4>  // b.any
     414:	ldr	x0, [sp, #8]
     418:	ldr	w1, [x0, #20]
     41c:	ldr	x0, [sp, #8]
     420:	ldr	w0, [x0, #28]
     424:	and	w0, w1, w0
     428:	cmp	w0, #0x0
     42c:	b.ne	44c <grub_video_gop_get_bpp+0xd4>  // b.any
     430:	ldr	x0, [sp, #8]
     434:	ldr	w1, [x0, #24]
     438:	ldr	x0, [sp, #8]
     43c:	ldr	w0, [x0, #28]
     440:	and	w0, w1, w0
     444:	cmp	w0, #0x0
     448:	b.eq	454 <grub_video_gop_get_bpp+0xdc>  // b.none
     44c:	mov	w0, #0x0                   	// #0
     450:	b	4d8 <grub_video_gop_get_bpp+0x160>
     454:	ldr	x0, [sp, #8]
     458:	ldr	w1, [x0, #16]
     45c:	ldr	x0, [sp, #8]
     460:	ldr	w0, [x0, #20]
     464:	orr	w1, w1, w0
     468:	ldr	x0, [sp, #8]
     46c:	ldr	w0, [x0, #24]
     470:	orr	w1, w1, w0
     474:	ldr	x0, [sp, #8]
     478:	ldr	w0, [x0, #28]
     47c:	orr	w0, w1, w0
     480:	str	w0, [sp, #24]
     484:	mov	w0, #0x1f                  	// #31
     488:	str	w0, [sp, #28]
     48c:	b	4c8 <grub_video_gop_get_bpp+0x150>
     490:	ldr	w0, [sp, #28]
     494:	mov	w1, #0x1                   	// #1
     498:	lsl	w0, w1, w0
     49c:	mov	w1, w0
     4a0:	ldr	w0, [sp, #24]
     4a4:	and	w0, w1, w0
     4a8:	cmp	w0, #0x0
     4ac:	b.eq	4bc <grub_video_gop_get_bpp+0x144>  // b.none
     4b0:	ldr	w0, [sp, #28]
     4b4:	add	w0, w0, #0x1
     4b8:	b	4d8 <grub_video_gop_get_bpp+0x160>
     4bc:	ldr	w0, [sp, #28]
     4c0:	sub	w0, w0, #0x1
     4c4:	str	w0, [sp, #28]
     4c8:	ldr	w0, [sp, #28]
     4cc:	cmp	w0, #0x0
     4d0:	b.ge	490 <grub_video_gop_get_bpp+0x118>  // b.tcont
     4d4:	mov	w0, #0x0                   	// #0
     4d8:	add	sp, sp, #0x20
     4dc:	ret

00000000000004e0 <grub_video_gop_get_bitmask>:
     4e0:	sub	sp, sp, #0x30
     4e4:	str	w0, [sp, #28]
     4e8:	str	x1, [sp, #16]
     4ec:	str	x2, [sp, #8]
     4f0:	mov	w0, #0x1f                  	// #31
     4f4:	str	w0, [sp, #44]
     4f8:	b	528 <grub_video_gop_get_bitmask+0x48>
     4fc:	ldr	w0, [sp, #44]
     500:	mov	w1, #0x1                   	// #1
     504:	lsl	w0, w1, w0
     508:	mov	w1, w0
     50c:	ldr	w0, [sp, #28]
     510:	and	w0, w1, w0
     514:	cmp	w0, #0x0
     518:	b.ne	538 <grub_video_gop_get_bitmask+0x58>  // b.any
     51c:	ldr	w0, [sp, #44]
     520:	sub	w0, w0, #0x1
     524:	str	w0, [sp, #44]
     528:	ldr	w0, [sp, #44]
     52c:	cmp	w0, #0x0
     530:	b.ge	4fc <grub_video_gop_get_bitmask+0x1c>  // b.tcont
     534:	b	53c <grub_video_gop_get_bitmask+0x5c>
     538:	nop
     53c:	ldr	w0, [sp, #44]
     540:	cmn	w0, #0x1
     544:	b.ne	564 <grub_video_gop_get_bitmask+0x84>  // b.any
     548:	ldr	x0, [sp, #8]
     54c:	str	wzr, [x0]
     550:	ldr	x0, [sp, #8]
     554:	ldr	w1, [x0]
     558:	ldr	x0, [sp, #16]
     55c:	str	w1, [x0]
     560:	b	5e0 <grub_video_gop_get_bitmask+0x100>
     564:	ldr	w0, [sp, #44]
     568:	str	w0, [sp, #40]
     56c:	b	59c <grub_video_gop_get_bitmask+0xbc>
     570:	ldr	w0, [sp, #44]
     574:	mov	w1, #0x1                   	// #1
     578:	lsl	w0, w1, w0
     57c:	mov	w1, w0
     580:	ldr	w0, [sp, #28]
     584:	and	w0, w1, w0
     588:	cmp	w0, #0x0
     58c:	b.eq	5ac <grub_video_gop_get_bitmask+0xcc>  // b.none
     590:	ldr	w0, [sp, #44]
     594:	sub	w0, w0, #0x1
     598:	str	w0, [sp, #44]
     59c:	ldr	w0, [sp, #44]
     5a0:	cmp	w0, #0x0
     5a4:	b.ge	570 <grub_video_gop_get_bitmask+0x90>  // b.tcont
     5a8:	b	5b0 <grub_video_gop_get_bitmask+0xd0>
     5ac:	nop
     5b0:	ldr	w0, [sp, #44]
     5b4:	add	w0, w0, #0x1
     5b8:	mov	w1, w0
     5bc:	ldr	x0, [sp, #8]
     5c0:	str	w1, [x0]
     5c4:	ldr	w1, [sp, #40]
     5c8:	ldr	x0, [sp, #8]
     5cc:	ldr	w0, [x0]
     5d0:	sub	w0, w1, w0
     5d4:	add	w1, w0, #0x1
     5d8:	ldr	x0, [sp, #16]
     5dc:	str	w1, [x0]
     5e0:	add	sp, sp, #0x30
     5e4:	ret

00000000000005e8 <grub_video_gop_fill_real_mode_info>:
     5e8:	stp	x29, x30, [sp, #-48]!
     5ec:	mov	x29, sp
     5f0:	str	w0, [sp, #44]
     5f4:	str	x1, [sp, #32]
     5f8:	str	x2, [sp, #24]
     5fc:	ldr	x0, [sp, #24]
     600:	ldr	w1, [sp, #44]
     604:	str	w1, [x0, #28]
     608:	ldr	x0, [sp, #24]
     60c:	mov	w1, #0x100                 	// #256
     610:	str	w1, [x0, #24]
     614:	ldr	x0, [sp, #32]
     618:	ldr	w1, [x0, #4]
     61c:	ldr	x0, [sp, #24]
     620:	str	w1, [x0]
     624:	ldr	x0, [sp, #32]
     628:	ldr	w1, [x0, #8]
     62c:	ldr	x0, [sp, #24]
     630:	str	w1, [x0, #4]
     634:	ldr	x0, [sp, #24]
     638:	mov	w1, #0x1                   	// #1
     63c:	str	w1, [x0, #8]
     640:	ldr	x0, [sp, #32]
     644:	bl	378 <grub_video_gop_get_bpp>
     648:	mov	w1, w0
     64c:	ldr	x0, [sp, #24]
     650:	str	w1, [x0, #12]
     654:	ldr	x0, [sp, #24]
     658:	ldr	w0, [x0, #12]
     65c:	lsr	w1, w0, #3
     660:	ldr	x0, [sp, #24]
     664:	str	w1, [x0, #16]
     668:	ldr	x0, [sp, #24]
     66c:	ldr	w0, [x0, #12]
     670:	cmp	w0, #0x0
     674:	b.ne	690 <grub_video_gop_fill_real_mode_info+0xa8>  // b.any
     678:	adrp	x0, 0 <grub_memcpy>
     67c:	add	x0, x0, #0x0
     680:	ldr	x1, [x0]
     684:	mov	w0, #0x1d                  	// #29
     688:	bl	0 <grub_error>
     68c:	b	85c <grub_video_gop_fill_real_mode_info+0x274>
     690:	ldr	x0, [sp, #32]
     694:	ldr	w1, [x0, #32]
     698:	ldr	x0, [sp, #24]
     69c:	ldr	w0, [x0, #16]
     6a0:	mul	w1, w1, w0
     6a4:	ldr	x0, [sp, #24]
     6a8:	str	w1, [x0, #20]
     6ac:	ldr	x0, [sp, #32]
     6b0:	ldr	w0, [x0, #12]
     6b4:	cmp	w0, #0x2
     6b8:	b.eq	798 <grub_video_gop_fill_real_mode_info+0x1b0>  // b.none
     6bc:	cmp	w0, #0x2
     6c0:	b.hi	82c <grub_video_gop_fill_real_mode_info+0x244>  // b.pmore
     6c4:	cmp	w0, #0x0
     6c8:	b.eq	6d8 <grub_video_gop_fill_real_mode_info+0xf0>  // b.none
     6cc:	cmp	w0, #0x1
     6d0:	b.eq	738 <grub_video_gop_fill_real_mode_info+0x150>  // b.none
     6d4:	b	82c <grub_video_gop_fill_real_mode_info+0x244>
     6d8:	ldr	x0, [sp, #24]
     6dc:	mov	w1, #0x8                   	// #8
     6e0:	str	w1, [x0, #36]
     6e4:	ldr	x0, [sp, #24]
     6e8:	str	wzr, [x0, #40]
     6ec:	ldr	x0, [sp, #24]
     6f0:	mov	w1, #0x8                   	// #8
     6f4:	str	w1, [x0, #44]
     6f8:	ldr	x0, [sp, #24]
     6fc:	mov	w1, #0x8                   	// #8
     700:	str	w1, [x0, #48]
     704:	ldr	x0, [sp, #24]
     708:	mov	w1, #0x8                   	// #8
     70c:	str	w1, [x0, #52]
     710:	ldr	x0, [sp, #24]
     714:	mov	w1, #0x10                  	// #16
     718:	str	w1, [x0, #56]
     71c:	ldr	x0, [sp, #24]
     720:	mov	w1, #0x8                   	// #8
     724:	str	w1, [x0, #60]
     728:	ldr	x0, [sp, #24]
     72c:	mov	w1, #0x18                  	// #24
     730:	str	w1, [x0, #64]
     734:	b	844 <grub_video_gop_fill_real_mode_info+0x25c>
     738:	ldr	x0, [sp, #24]
     73c:	mov	w1, #0x8                   	// #8
     740:	str	w1, [x0, #36]
     744:	ldr	x0, [sp, #24]
     748:	mov	w1, #0x10                  	// #16
     74c:	str	w1, [x0, #40]
     750:	ldr	x0, [sp, #24]
     754:	mov	w1, #0x8                   	// #8
     758:	str	w1, [x0, #44]
     75c:	ldr	x0, [sp, #24]
     760:	mov	w1, #0x8                   	// #8
     764:	str	w1, [x0, #48]
     768:	ldr	x0, [sp, #24]
     76c:	mov	w1, #0x8                   	// #8
     770:	str	w1, [x0, #52]
     774:	ldr	x0, [sp, #24]
     778:	str	wzr, [x0, #56]
     77c:	ldr	x0, [sp, #24]
     780:	mov	w1, #0x8                   	// #8
     784:	str	w1, [x0, #60]
     788:	ldr	x0, [sp, #24]
     78c:	mov	w1, #0x18                  	// #24
     790:	str	w1, [x0, #64]
     794:	b	844 <grub_video_gop_fill_real_mode_info+0x25c>
     798:	ldr	x0, [sp, #32]
     79c:	ldr	w3, [x0, #16]
     7a0:	ldr	x0, [sp, #24]
     7a4:	add	x1, x0, #0x24
     7a8:	ldr	x0, [sp, #24]
     7ac:	add	x0, x0, #0x28
     7b0:	mov	x2, x0
     7b4:	mov	w0, w3
     7b8:	bl	4e0 <grub_video_gop_get_bitmask>
     7bc:	ldr	x0, [sp, #32]
     7c0:	ldr	w3, [x0, #20]
     7c4:	ldr	x0, [sp, #24]
     7c8:	add	x1, x0, #0x2c
     7cc:	ldr	x0, [sp, #24]
     7d0:	add	x0, x0, #0x30
     7d4:	mov	x2, x0
     7d8:	mov	w0, w3
     7dc:	bl	4e0 <grub_video_gop_get_bitmask>
     7e0:	ldr	x0, [sp, #32]
     7e4:	ldr	w3, [x0, #24]
     7e8:	ldr	x0, [sp, #24]
     7ec:	add	x1, x0, #0x34
     7f0:	ldr	x0, [sp, #24]
     7f4:	add	x0, x0, #0x38
     7f8:	mov	x2, x0
     7fc:	mov	w0, w3
     800:	bl	4e0 <grub_video_gop_get_bitmask>
     804:	ldr	x0, [sp, #32]
     808:	ldr	w3, [x0, #28]
     80c:	ldr	x0, [sp, #24]
     810:	add	x1, x0, #0x3c
     814:	ldr	x0, [sp, #24]
     818:	add	x0, x0, #0x40
     81c:	mov	x2, x0
     820:	mov	w0, w3
     824:	bl	4e0 <grub_video_gop_get_bitmask>
     828:	b	844 <grub_video_gop_fill_real_mode_info+0x25c>
     82c:	adrp	x0, 0 <grub_memcpy>
     830:	add	x0, x0, #0x0
     834:	ldr	x1, [x0]
     838:	mov	w0, #0x1d                  	// #29
     83c:	bl	0 <grub_error>
     840:	b	85c <grub_video_gop_fill_real_mode_info+0x274>
     844:	ldr	x0, [sp, #24]
     848:	bl	0 <grub_video_get_blit_format>
     84c:	mov	w1, w0
     850:	ldr	x0, [sp, #24]
     854:	str	w1, [x0, #32]
     858:	mov	w0, #0x0                   	// #0
     85c:	ldp	x29, x30, [sp], #48
     860:	ret
     864:	nop
	...

0000000000000870 <grub_video_gop_fill_mode_info>:
     870:	sub	sp, sp, #0x20
     874:	str	w0, [sp, #28]
     878:	str	x1, [sp, #16]
     87c:	str	x2, [sp, #8]
     880:	ldr	x0, [sp, #8]
     884:	ldr	w1, [sp, #28]
     888:	str	w1, [x0, #28]
     88c:	ldr	x0, [sp, #8]
     890:	mov	w1, #0x100                 	// #256
     894:	str	w1, [x0, #24]
     898:	ldr	x0, [sp, #16]
     89c:	ldr	w1, [x0, #4]
     8a0:	ldr	x0, [sp, #8]
     8a4:	str	w1, [x0]
     8a8:	ldr	x0, [sp, #16]
     8ac:	ldr	w1, [x0, #8]
     8b0:	ldr	x0, [sp, #8]
     8b4:	str	w1, [x0, #4]
     8b8:	ldr	x0, [sp, #8]
     8bc:	mov	w1, #0x1                   	// #1
     8c0:	str	w1, [x0, #8]
     8c4:	ldr	x0, [sp, #8]
     8c8:	mov	w1, #0x4                   	// #4
     8cc:	str	w1, [x0, #16]
     8d0:	ldr	x0, [sp, #8]
     8d4:	ldr	w0, [x0, #16]
     8d8:	lsl	w1, w0, #3
     8dc:	ldr	x0, [sp, #8]
     8e0:	str	w1, [x0, #12]
     8e4:	ldr	x0, [sp, #16]
     8e8:	ldr	w1, [x0, #4]
     8ec:	ldr	x0, [sp, #8]
     8f0:	ldr	w0, [x0, #16]
     8f4:	mul	w1, w1, w0
     8f8:	ldr	x0, [sp, #8]
     8fc:	str	w1, [x0, #20]
     900:	ldr	x0, [sp, #8]
     904:	mov	w1, #0x8                   	// #8
     908:	str	w1, [x0, #36]
     90c:	ldr	x0, [sp, #8]
     910:	mov	w1, #0x10                  	// #16
     914:	str	w1, [x0, #40]
     918:	ldr	x0, [sp, #8]
     91c:	mov	w1, #0x8                   	// #8
     920:	str	w1, [x0, #44]
     924:	ldr	x0, [sp, #8]
     928:	mov	w1, #0x8                   	// #8
     92c:	str	w1, [x0, #48]
     930:	ldr	x0, [sp, #8]
     934:	mov	w1, #0x8                   	// #8
     938:	str	w1, [x0, #52]
     93c:	ldr	x0, [sp, #8]
     940:	str	wzr, [x0, #56]
     944:	ldr	x0, [sp, #8]
     948:	mov	w1, #0x8                   	// #8
     94c:	str	w1, [x0, #60]
     950:	ldr	x0, [sp, #8]
     954:	mov	w1, #0x18                  	// #24
     958:	str	w1, [x0, #64]
     95c:	ldr	x0, [sp, #8]
     960:	mov	w1, #0x2                   	// #2
     964:	str	w1, [x0, #32]
     968:	ldr	x0, [sp, #8]
     96c:	ldr	w1, [x0, #8]
     970:	mov	w0, #0x90                  	// #144
     974:	orr	w1, w1, w0
     978:	ldr	x0, [sp, #8]
     97c:	str	w1, [x0, #8]
     980:	mov	w0, #0x0                   	// #0
     984:	add	sp, sp, #0x20
     988:	ret

000000000000098c <grub_video_gop_iterate>:
     98c:	stp	x29, x30, [sp, #-160]!
     990:	mov	x29, sp
     994:	str	x0, [sp, #24]
     998:	str	x1, [sp, #16]
     99c:	str	wzr, [sp, #156]
     9a0:	b	a64 <grub_video_gop_iterate+0xd8>
     9a4:	str	xzr, [sp, #120]
     9a8:	adrp	x0, 0 <grub_memcpy>
     9ac:	add	x0, x0, #0x0
     9b0:	ldr	x0, [x0]
     9b4:	ldr	x0, [x0]
     9b8:	ldr	x4, [x0]
     9bc:	adrp	x0, 0 <grub_memcpy>
     9c0:	add	x0, x0, #0x0
     9c4:	ldr	x0, [x0]
     9c8:	ldr	x0, [x0]
     9cc:	add	x2, sp, #0x78
     9d0:	add	x1, sp, #0x80
     9d4:	mov	x3, x2
     9d8:	mov	x2, x1
     9dc:	ldr	w1, [sp, #156]
     9e0:	blr	x4
     9e4:	str	x0, [sp, #144]
     9e8:	ldr	x0, [sp, #144]
     9ec:	cmp	x0, #0x0
     9f0:	b.eq	9fc <grub_video_gop_iterate+0x70>  // b.none
     9f4:	str	xzr, [sp, #120]
     9f8:	b	a58 <grub_video_gop_iterate+0xcc>
     9fc:	ldr	x0, [sp, #120]
     a00:	add	x1, sp, #0x28
     a04:	mov	x2, x1
     a08:	mov	x1, x0
     a0c:	ldr	w0, [sp, #156]
     a10:	bl	870 <grub_video_gop_fill_mode_info>
     a14:	str	w0, [sp, #140]
     a18:	ldr	w0, [sp, #140]
     a1c:	cmp	w0, #0x0
     a20:	b.eq	a38 <grub_video_gop_iterate+0xac>  // b.none
     a24:	adrp	x0, 0 <grub_memcpy>
     a28:	add	x0, x0, #0x0
     a2c:	ldr	x0, [x0]
     a30:	str	wzr, [x0]
     a34:	b	a58 <grub_video_gop_iterate+0xcc>
     a38:	add	x0, sp, #0x28
     a3c:	ldr	x2, [sp, #24]
     a40:	ldr	x1, [sp, #16]
     a44:	blr	x2
     a48:	cmp	w0, #0x0
     a4c:	b.eq	a58 <grub_video_gop_iterate+0xcc>  // b.none
     a50:	mov	w0, #0x1                   	// #1
     a54:	b	a8c <grub_video_gop_iterate+0x100>
     a58:	ldr	w0, [sp, #156]
     a5c:	add	w0, w0, #0x1
     a60:	str	w0, [sp, #156]
     a64:	adrp	x0, 0 <grub_memcpy>
     a68:	add	x0, x0, #0x0
     a6c:	ldr	x0, [x0]
     a70:	ldr	x0, [x0]
     a74:	ldr	x0, [x0, #24]
     a78:	ldr	w0, [x0]
     a7c:	ldr	w1, [sp, #156]
     a80:	cmp	w1, w0
     a84:	b.cc	9a4 <grub_video_gop_iterate+0x18>  // b.lo, b.ul, b.last
     a88:	mov	w0, #0x0                   	// #0
     a8c:	ldp	x29, x30, [sp], #160
     a90:	ret
     a94:	nop
	...

0000000000000aa8 <grub_video_gop_get_edid>:
     aa8:	stp	x29, x30, [sp, #-96]!
     aac:	mov	x29, sp
     ab0:	str	x0, [sp, #24]
     ab4:	mov	x2, #0x80                  	// #128
     ab8:	mov	w1, #0x0                   	// #0
     abc:	ldr	x0, [sp, #24]
     ac0:	bl	0 <grub_memset>
     ac4:	adrp	x0, 0 <grub_memcpy>
     ac8:	add	x0, x0, #0x0
     acc:	ldr	x0, [x0]
     ad0:	ldr	x3, [x0]
     ad4:	mov	w2, #0x2                   	// #2
     ad8:	adrp	x0, 0 <grub_memcpy>
     adc:	add	x0, x0, #0x0
     ae0:	ldr	x1, [x0]
     ae4:	mov	x0, x3
     ae8:	bl	0 <grub_efi_open_protocol>
     aec:	str	x0, [sp, #88]
     af0:	ldr	x0, [sp, #88]
     af4:	cmp	x0, #0x0
     af8:	b.eq	b0c <grub_video_gop_get_edid+0x64>  // b.none
     afc:	ldr	x0, [sp, #88]
     b00:	ldr	w0, [x0]
     b04:	cmp	w0, #0x0
     b08:	b.ne	b38 <grub_video_gop_get_edid+0x90>  // b.any
     b0c:	adrp	x0, 0 <grub_memcpy>
     b10:	add	x0, x0, #0x0
     b14:	ldr	x0, [x0]
     b18:	ldr	x3, [x0]
     b1c:	mov	w2, #0x2                   	// #2
     b20:	adrp	x0, 0 <grub_memcpy>
     b24:	add	x0, x0, #0x0
     b28:	ldr	x1, [x0]
     b2c:	mov	x0, x3
     b30:	bl	0 <grub_efi_open_protocol>
     b34:	str	x0, [sp, #88]
     b38:	ldr	x0, [sp, #88]
     b3c:	cmp	x0, #0x0
     b40:	b.eq	b54 <grub_video_gop_get_edid+0xac>  // b.none
     b44:	ldr	x0, [sp, #88]
     b48:	ldr	w0, [x0]
     b4c:	cmp	w0, #0x0
     b50:	b.ne	c14 <grub_video_gop_get_edid+0x16c>  // b.any
     b54:	adrp	x0, 0 <grub_memcpy>
     b58:	add	x0, x0, #0x0
     b5c:	ldr	x0, [x0]
     b60:	add	x2, sp, #0x30
     b64:	mov	x3, x0
     b68:	ldp	x0, x1, [x3]
     b6c:	stp	x0, x1, [x2]
     b70:	ldrh	w0, [x3, #16]
     b74:	strh	w0, [x2, #16]
     b78:	add	x0, sp, #0x28
     b7c:	add	x3, sp, #0x30
     b80:	mov	x2, x0
     b84:	adrp	x0, 0 <grub_memcpy>
     b88:	add	x0, x0, #0x0
     b8c:	ldr	x1, [x0]
     b90:	mov	x0, x3
     b94:	bl	0 <grub_efi_get_variable>
     b98:	str	x0, [sp, #72]
     b9c:	ldr	x0, [sp, #72]
     ba0:	cmp	x0, #0x0
     ba4:	b.eq	bfc <grub_video_gop_get_edid+0x154>  // b.none
     ba8:	ldr	x0, [sp, #40]
     bac:	cmp	x0, #0x10
     bb0:	b.ls	bfc <grub_video_gop_get_edid+0x154>  // b.plast
     bb4:	ldr	x0, [sp, #40]
     bb8:	sub	x0, x0, #0x10
     bbc:	str	x0, [sp, #80]
     bc0:	ldr	x0, [sp, #80]
     bc4:	cmp	x0, #0x80
     bc8:	b.ls	bd4 <grub_video_gop_get_edid+0x12c>  // b.plast
     bcc:	mov	x0, #0x80                  	// #128
     bd0:	str	x0, [sp, #80]
     bd4:	ldr	x0, [sp, #72]
     bd8:	add	x0, x0, #0x10
     bdc:	ldr	x2, [sp, #80]
     be0:	mov	x1, x0
     be4:	ldr	x0, [sp, #24]
     be8:	bl	0 <grub_memcpy>
     bec:	ldr	x0, [sp, #72]
     bf0:	bl	0 <grub_free>
     bf4:	mov	w0, #0x0                   	// #0
     bf8:	b	c54 <grub_video_gop_get_edid+0x1ac>
     bfc:	adrp	x0, 0 <grub_memcpy>
     c00:	add	x0, x0, #0x0
     c04:	ldr	x1, [x0]
     c08:	mov	w0, #0xd                   	// #13
     c0c:	bl	0 <grub_error>
     c10:	b	c54 <grub_video_gop_get_edid+0x1ac>
     c14:	ldr	x0, [sp, #88]
     c18:	ldr	w0, [x0]
     c1c:	mov	w0, w0
     c20:	str	x0, [sp, #80]
     c24:	ldr	x0, [sp, #80]
     c28:	cmp	x0, #0x80
     c2c:	b.ls	c38 <grub_video_gop_get_edid+0x190>  // b.plast
     c30:	mov	x0, #0x80                  	// #128
     c34:	str	x0, [sp, #80]
     c38:	ldr	x0, [sp, #88]
     c3c:	ldr	x0, [x0, #8]
     c40:	ldr	x2, [sp, #80]
     c44:	mov	x1, x0
     c48:	ldr	x0, [sp, #24]
     c4c:	bl	0 <grub_memcpy>
     c50:	mov	w0, #0x0                   	// #0
     c54:	ldp	x29, x30, [sp], #96
     c58:	ret
     c5c:	nop
	...

0000000000000c90 <grub_gop_get_preferred_mode>:
     c90:	stp	x29, x30, [sp, #-176]!
     c94:	mov	x29, sp
     c98:	str	x0, [sp, #24]
     c9c:	str	x1, [sp, #16]
     ca0:	add	x0, sp, #0x28
     ca4:	bl	aa8 <grub_video_gop_get_edid>
     ca8:	str	w0, [sp, #172]
     cac:	ldr	w0, [sp, #172]
     cb0:	cmp	w0, #0x0
     cb4:	b.eq	cc0 <grub_gop_get_preferred_mode+0x30>  // b.none
     cb8:	ldr	w0, [sp, #172]
     cbc:	b	d0c <grub_gop_get_preferred_mode+0x7c>
     cc0:	add	x0, sp, #0x28
     cc4:	bl	0 <grub_video_edid_checksum>
     cc8:	str	w0, [sp, #172]
     ccc:	ldr	w0, [sp, #172]
     cd0:	cmp	w0, #0x0
     cd4:	b.eq	ce0 <grub_gop_get_preferred_mode+0x50>  // b.none
     cd8:	ldr	w0, [sp, #172]
     cdc:	b	d0c <grub_gop_get_preferred_mode+0x7c>
     ce0:	add	x0, sp, #0x28
     ce4:	ldr	x2, [sp, #16]
     ce8:	ldr	x1, [sp, #24]
     cec:	bl	0 <grub_video_edid_preferred_mode>
     cf0:	str	w0, [sp, #172]
     cf4:	ldr	w0, [sp, #172]
     cf8:	cmp	w0, #0x0
     cfc:	b.eq	d08 <grub_gop_get_preferred_mode+0x78>  // b.none
     d00:	ldr	w0, [sp, #172]
     d04:	b	d0c <grub_gop_get_preferred_mode+0x7c>
     d08:	mov	w0, #0x0                   	// #0
     d0c:	ldp	x29, x30, [sp], #176
     d10:	ret

0000000000000d14 <grub_video_gop_setup>:
     d14:	stp	x29, x30, [sp, #-112]!
     d18:	mov	x29, sp
     d1c:	str	w0, [sp, #28]
     d20:	str	w1, [sp, #24]
     d24:	str	w2, [sp, #20]
     d28:	str	w3, [sp, #16]
     d2c:	str	xzr, [sp, #56]
     d30:	str	wzr, [sp, #108]
     d34:	str	wzr, [sp, #104]
     d38:	str	xzr, [sp, #96]
     d3c:	str	wzr, [sp, #52]
     d40:	str	wzr, [sp, #48]
     d44:	ldr	w0, [sp, #20]
     d48:	lsr	w0, w0, #8
     d4c:	and	w0, w0, #0xff
     d50:	str	w0, [sp, #80]
     d54:	ldr	w0, [sp, #28]
     d58:	cmp	w0, #0x0
     d5c:	b.ne	dc0 <grub_video_gop_setup+0xac>  // b.any
     d60:	ldr	w0, [sp, #24]
     d64:	cmp	w0, #0x0
     d68:	b.ne	dc0 <grub_video_gop_setup+0xac>  // b.any
     d6c:	add	x1, sp, #0x30
     d70:	add	x0, sp, #0x34
     d74:	bl	c90 <grub_gop_get_preferred_mode>
     d78:	str	w0, [sp, #76]
     d7c:	ldr	w0, [sp, #76]
     d80:	cmp	w0, #0x0
     d84:	b.ne	da0 <grub_video_gop_setup+0x8c>  // b.any
     d88:	ldr	w0, [sp, #52]
     d8c:	cmp	w0, #0xfff
     d90:	b.hi	da0 <grub_video_gop_setup+0x8c>  // b.pmore
     d94:	ldr	w0, [sp, #48]
     d98:	cmp	w0, #0xfff
     d9c:	b.ls	dc0 <grub_video_gop_setup+0xac>  // b.plast
     da0:	mov	w0, #0x320                 	// #800
     da4:	str	w0, [sp, #52]
     da8:	mov	w0, #0x258                 	// #600
     dac:	str	w0, [sp, #48]
     db0:	adrp	x0, 0 <grub_memcpy>
     db4:	add	x0, x0, #0x0
     db8:	ldr	x0, [x0]
     dbc:	str	wzr, [x0]
     dc0:	adrp	x0, 0 <grub_memcpy>
     dc4:	add	x0, x0, #0x0
     dc8:	ldr	x0, [x0]
     dcc:	ldr	x0, [x0]
     dd0:	ldr	x0, [x0, #24]
     dd4:	ldr	x0, [x0, #8]
     dd8:	cmp	x0, #0x0
     ddc:	b.eq	efc <grub_video_gop_setup+0x1e8>  // b.none
     de0:	adrp	x0, 0 <grub_memcpy>
     de4:	add	x0, x0, #0x0
     de8:	ldr	x0, [x0]
     dec:	ldr	x0, [x0]
     df0:	ldr	x0, [x0, #24]
     df4:	ldr	x0, [x0, #8]
     df8:	bl	378 <grub_video_gop_get_bpp>
     dfc:	str	w0, [sp, #72]
     e00:	ldr	w0, [sp, #72]
     e04:	cmp	w0, #0x0
     e08:	b.eq	efc <grub_video_gop_setup+0x1e8>  // b.none
     e0c:	adrp	x0, 0 <grub_memcpy>
     e10:	add	x0, x0, #0x0
     e14:	ldr	x0, [x0]
     e18:	ldr	x0, [x0]
     e1c:	ldr	x0, [x0, #24]
     e20:	ldr	x0, [x0, #8]
     e24:	ldr	w0, [x0, #4]
     e28:	ldr	w1, [sp, #28]
     e2c:	cmp	w1, w0
     e30:	b.ne	e5c <grub_video_gop_setup+0x148>  // b.any
     e34:	adrp	x0, 0 <grub_memcpy>
     e38:	add	x0, x0, #0x0
     e3c:	ldr	x0, [x0]
     e40:	ldr	x0, [x0]
     e44:	ldr	x0, [x0, #24]
     e48:	ldr	x0, [x0, #8]
     e4c:	ldr	w0, [x0, #8]
     e50:	ldr	w1, [sp, #24]
     e54:	cmp	w1, w0
     e58:	b.eq	e74 <grub_video_gop_setup+0x160>  // b.none
     e5c:	ldr	w0, [sp, #28]
     e60:	cmp	w0, #0x0
     e64:	b.ne	efc <grub_video_gop_setup+0x1e8>  // b.any
     e68:	ldr	w0, [sp, #24]
     e6c:	cmp	w0, #0x0
     e70:	b.ne	efc <grub_video_gop_setup+0x1e8>  // b.any
     e74:	ldr	w1, [sp, #80]
     e78:	ldr	w0, [sp, #72]
     e7c:	cmp	w1, w0
     e80:	b.eq	e90 <grub_video_gop_setup+0x17c>  // b.none
     e84:	ldr	w0, [sp, #80]
     e88:	cmp	w0, #0x0
     e8c:	b.ne	efc <grub_video_gop_setup+0x1e8>  // b.any
     e90:	adrp	x0, 0 <grub_memcpy>
     e94:	add	x0, x0, #0x0
     e98:	ldr	x0, [x0]
     e9c:	ldr	x0, [x0]
     ea0:	ldr	x0, [x0, #24]
     ea4:	ldr	w0, [x0, #4]
     ea8:	mov	w4, w0
     eac:	adrp	x0, 0 <grub_memcpy>
     eb0:	add	x0, x0, #0x0
     eb4:	ldr	x3, [x0]
     eb8:	adrp	x0, 0 <grub_memcpy>
     ebc:	add	x0, x0, #0x0
     ec0:	ldr	x2, [x0]
     ec4:	mov	w1, #0x184                 	// #388
     ec8:	adrp	x0, 0 <grub_memcpy>
     ecc:	add	x0, x0, #0x0
     ed0:	ldr	x0, [x0]
     ed4:	bl	0 <grub_real_dprintf>
     ed8:	adrp	x0, 0 <grub_memcpy>
     edc:	add	x0, x0, #0x0
     ee0:	ldr	x0, [x0]
     ee4:	ldr	x0, [x0]
     ee8:	ldr	x0, [x0, #24]
     eec:	ldr	w0, [x0, #4]
     ef0:	str	w0, [sp, #108]
     ef4:	mov	w0, #0x1                   	// #1
     ef8:	str	w0, [sp, #104]
     efc:	ldr	w0, [sp, #104]
     f00:	cmp	w0, #0x0
     f04:	b.ne	1204 <grub_video_gop_setup+0x4f0>  // b.any
     f08:	adrp	x0, 0 <grub_memcpy>
     f0c:	add	x0, x0, #0x0
     f10:	ldr	x0, [x0]
     f14:	ldr	x0, [x0]
     f18:	ldr	x0, [x0, #24]
     f1c:	ldr	w0, [x0]
     f20:	mov	w4, w0
     f24:	adrp	x0, 0 <grub_memcpy>
     f28:	add	x0, x0, #0x0
     f2c:	ldr	x3, [x0]
     f30:	adrp	x0, 0 <grub_memcpy>
     f34:	add	x0, x0, #0x0
     f38:	ldr	x2, [x0]
     f3c:	mov	w1, #0x18d                 	// #397
     f40:	adrp	x0, 0 <grub_memcpy>
     f44:	add	x0, x0, #0x0
     f48:	ldr	x0, [x0]
     f4c:	bl	0 <grub_real_dprintf>
     f50:	str	wzr, [sp, #84]
     f54:	b	11e0 <grub_video_gop_setup+0x4cc>
     f58:	adrp	x0, 0 <grub_memcpy>
     f5c:	add	x0, x0, #0x0
     f60:	ldr	x0, [x0]
     f64:	ldr	x0, [x0]
     f68:	ldr	x4, [x0]
     f6c:	adrp	x0, 0 <grub_memcpy>
     f70:	add	x0, x0, #0x0
     f74:	ldr	x0, [x0]
     f78:	ldr	x0, [x0]
     f7c:	add	x2, sp, #0x38
     f80:	add	x1, sp, #0x28
     f84:	mov	x3, x2
     f88:	mov	x2, x1
     f8c:	ldr	w1, [sp, #84]
     f90:	blr	x4
     f94:	str	x0, [sp, #64]
     f98:	ldr	x0, [sp, #64]
     f9c:	cmp	x0, #0x0
     fa0:	b.eq	fac <grub_video_gop_setup+0x298>  // b.none
     fa4:	str	xzr, [sp, #56]
     fa8:	b	11d4 <grub_video_gop_setup+0x4c0>
     fac:	ldr	x0, [sp, #56]
     fb0:	ldr	w1, [x0, #4]
     fb4:	ldr	x0, [sp, #56]
     fb8:	ldr	w0, [x0, #8]
     fbc:	mov	w6, w0
     fc0:	mov	w5, w1
     fc4:	ldr	w4, [sp, #84]
     fc8:	adrp	x0, 0 <grub_memcpy>
     fcc:	add	x0, x0, #0x0
     fd0:	ldr	x3, [x0]
     fd4:	adrp	x0, 0 <grub_memcpy>
     fd8:	add	x0, x0, #0x0
     fdc:	ldr	x2, [x0]
     fe0:	mov	w1, #0x19a                 	// #410
     fe4:	adrp	x0, 0 <grub_memcpy>
     fe8:	add	x0, x0, #0x0
     fec:	ldr	x0, [x0]
     ff0:	bl	0 <grub_real_dprintf>
     ff4:	ldr	w0, [sp, #52]
     ff8:	cmp	w0, #0x0
     ffc:	b.eq	105c <grub_video_gop_setup+0x348>  // b.none
    1000:	ldr	x0, [sp, #56]
    1004:	ldr	w1, [x0, #4]
    1008:	ldr	w0, [sp, #52]
    100c:	cmp	w1, w0
    1010:	b.hi	1028 <grub_video_gop_setup+0x314>  // b.pmore
    1014:	ldr	x0, [sp, #56]
    1018:	ldr	w1, [x0, #8]
    101c:	ldr	w0, [sp, #48]
    1020:	cmp	w1, w0
    1024:	b.ls	105c <grub_video_gop_setup+0x348>  // b.plast
    1028:	ldr	w4, [sp, #84]
    102c:	adrp	x0, 0 <grub_memcpy>
    1030:	add	x0, x0, #0x0
    1034:	ldr	x3, [x0]
    1038:	adrp	x0, 0 <grub_memcpy>
    103c:	add	x0, x0, #0x0
    1040:	ldr	x2, [x0]
    1044:	mov	w1, #0x1a0                 	// #416
    1048:	adrp	x0, 0 <grub_memcpy>
    104c:	add	x0, x0, #0x0
    1050:	ldr	x0, [x0]
    1054:	bl	0 <grub_real_dprintf>
    1058:	b	11d4 <grub_video_gop_setup+0x4c0>
    105c:	ldr	x0, [sp, #56]
    1060:	bl	378 <grub_video_gop_get_bpp>
    1064:	str	w0, [sp, #72]
    1068:	ldr	w0, [sp, #72]
    106c:	cmp	w0, #0x0
    1070:	b.ne	10a8 <grub_video_gop_setup+0x394>  // b.any
    1074:	ldr	w4, [sp, #84]
    1078:	adrp	x0, 0 <grub_memcpy>
    107c:	add	x0, x0, #0x0
    1080:	ldr	x3, [x0]
    1084:	adrp	x0, 0 <grub_memcpy>
    1088:	add	x0, x0, #0x0
    108c:	ldr	x2, [x0]
    1090:	mov	w1, #0x1a7                 	// #423
    1094:	adrp	x0, 0 <grub_memcpy>
    1098:	add	x0, x0, #0x0
    109c:	ldr	x0, [x0]
    10a0:	bl	0 <grub_real_dprintf>
    10a4:	b	11d4 <grub_video_gop_setup+0x4c0>
    10a8:	ldr	w5, [sp, #72]
    10ac:	ldr	w4, [sp, #84]
    10b0:	adrp	x0, 0 <grub_memcpy>
    10b4:	add	x0, x0, #0x0
    10b8:	ldr	x3, [x0]
    10bc:	adrp	x0, 0 <grub_memcpy>
    10c0:	add	x0, x0, #0x0
    10c4:	ldr	x2, [x0]
    10c8:	mov	w1, #0x1ac                 	// #428
    10cc:	adrp	x0, 0 <grub_memcpy>
    10d0:	add	x0, x0, #0x0
    10d4:	ldr	x0, [x0]
    10d8:	bl	0 <grub_real_dprintf>
    10dc:	ldr	x0, [sp, #56]
    10e0:	ldr	w0, [x0, #4]
    10e4:	ldr	w1, [sp, #28]
    10e8:	cmp	w1, w0
    10ec:	b.ne	1104 <grub_video_gop_setup+0x3f0>  // b.any
    10f0:	ldr	x0, [sp, #56]
    10f4:	ldr	w0, [x0, #8]
    10f8:	ldr	w1, [sp, #24]
    10fc:	cmp	w1, w0
    1100:	b.eq	111c <grub_video_gop_setup+0x408>  // b.none
    1104:	ldr	w0, [sp, #28]
    1108:	cmp	w0, #0x0
    110c:	b.ne	1138 <grub_video_gop_setup+0x424>  // b.any
    1110:	ldr	w0, [sp, #24]
    1114:	cmp	w0, #0x0
    1118:	b.ne	1138 <grub_video_gop_setup+0x424>  // b.any
    111c:	ldr	w1, [sp, #72]
    1120:	ldr	w0, [sp, #80]
    1124:	cmp	w1, w0
    1128:	b.eq	116c <grub_video_gop_setup+0x458>  // b.none
    112c:	ldr	w0, [sp, #80]
    1130:	cmp	w0, #0x0
    1134:	b.eq	116c <grub_video_gop_setup+0x458>  // b.none
    1138:	ldr	w4, [sp, #84]
    113c:	adrp	x0, 0 <grub_memcpy>
    1140:	add	x0, x0, #0x0
    1144:	ldr	x3, [x0]
    1148:	adrp	x0, 0 <grub_memcpy>
    114c:	add	x0, x0, #0x0
    1150:	ldr	x2, [x0]
    1154:	mov	w1, #0x1b2                 	// #434
    1158:	adrp	x0, 0 <grub_memcpy>
    115c:	add	x0, x0, #0x0
    1160:	ldr	x0, [x0]
    1164:	bl	0 <grub_real_dprintf>
    1168:	b	11d4 <grub_video_gop_setup+0x4c0>
    116c:	ldr	x0, [sp, #56]
    1170:	ldr	w0, [x0, #4]
    1174:	mov	w1, w0
    1178:	ldr	x0, [sp, #56]
    117c:	ldr	w0, [x0, #8]
    1180:	mov	w0, w0
    1184:	mul	x1, x1, x0
    1188:	ldr	w0, [sp, #72]
    118c:	mul	x0, x1, x0
    1190:	ldr	x1, [sp, #96]
    1194:	cmp	x1, x0
    1198:	b.cs	11cc <grub_video_gop_setup+0x4b8>  // b.hs, b.nlast
    119c:	ldr	x0, [sp, #56]
    11a0:	ldr	w0, [x0, #4]
    11a4:	mov	w1, w0
    11a8:	ldr	x0, [sp, #56]
    11ac:	ldr	w0, [x0, #8]
    11b0:	mov	w0, w0
    11b4:	mul	x1, x1, x0
    11b8:	ldr	w0, [sp, #72]
    11bc:	mul	x0, x1, x0
    11c0:	str	x0, [sp, #96]
    11c4:	ldr	w0, [sp, #84]
    11c8:	str	w0, [sp, #108]
    11cc:	mov	w0, #0x1                   	// #1
    11d0:	str	w0, [sp, #104]
    11d4:	ldr	w0, [sp, #84]
    11d8:	add	w0, w0, #0x1
    11dc:	str	w0, [sp, #84]
    11e0:	adrp	x0, 0 <grub_memcpy>
    11e4:	add	x0, x0, #0x0
    11e8:	ldr	x0, [x0]
    11ec:	ldr	x0, [x0]
    11f0:	ldr	x0, [x0, #24]
    11f4:	ldr	w0, [x0]
    11f8:	ldr	w1, [sp, #84]
    11fc:	cmp	w1, w0
    1200:	b.cc	f58 <grub_video_gop_setup+0x244>  // b.lo, b.ul, b.last
    1204:	ldr	w0, [sp, #104]
    1208:	cmp	w0, #0x0
    120c:	b.ne	1254 <grub_video_gop_setup+0x540>  // b.any
    1210:	adrp	x0, 0 <grub_memcpy>
    1214:	add	x0, x0, #0x0
    1218:	ldr	x3, [x0]
    121c:	adrp	x0, 0 <grub_memcpy>
    1220:	add	x0, x0, #0x0
    1224:	ldr	x2, [x0]
    1228:	mov	w1, #0x1c5                 	// #453
    122c:	adrp	x0, 0 <grub_memcpy>
    1230:	add	x0, x0, #0x0
    1234:	ldr	x0, [x0]
    1238:	bl	0 <grub_real_dprintf>
    123c:	adrp	x0, 0 <grub_memcpy>
    1240:	add	x0, x0, #0x0
    1244:	ldr	x1, [x0]
    1248:	mov	w0, #0xc                   	// #12
    124c:	bl	0 <grub_error>
    1250:	b	165c <grub_video_gop_setup+0x948>
    1254:	adrp	x0, 0 <grub_memcpy>
    1258:	add	x0, x0, #0x0
    125c:	ldr	x0, [x0]
    1260:	ldr	x0, [x0]
    1264:	ldr	x0, [x0, #24]
    1268:	ldr	w0, [x0, #4]
    126c:	ldr	w1, [sp, #108]
    1270:	cmp	w1, w0
    1274:	b.eq	12f8 <grub_video_gop_setup+0x5e4>  // b.none
    1278:	adrp	x0, 0 <grub_memcpy>
    127c:	add	x0, x0, #0x0
    1280:	ldr	x0, [x0]
    1284:	ldr	w0, [x0]
    1288:	cmp	w0, #0x0
    128c:	b.ne	12cc <grub_video_gop_setup+0x5b8>  // b.any
    1290:	adrp	x0, 0 <grub_memcpy>
    1294:	add	x0, x0, #0x0
    1298:	ldr	x0, [x0]
    129c:	ldr	x0, [x0]
    12a0:	ldr	x0, [x0, #24]
    12a4:	ldr	w1, [x0, #4]
    12a8:	adrp	x0, 0 <grub_memcpy>
    12ac:	add	x0, x0, #0x0
    12b0:	ldr	x0, [x0]
    12b4:	str	w1, [x0]
    12b8:	adrp	x0, 0 <grub_memcpy>
    12bc:	add	x0, x0, #0x0
    12c0:	ldr	x0, [x0]
    12c4:	mov	w1, #0x1                   	// #1
    12c8:	str	w1, [x0]
    12cc:	adrp	x0, 0 <grub_memcpy>
    12d0:	add	x0, x0, #0x0
    12d4:	ldr	x0, [x0]
    12d8:	ldr	x0, [x0]
    12dc:	ldr	x2, [x0, #8]
    12e0:	adrp	x0, 0 <grub_memcpy>
    12e4:	add	x0, x0, #0x0
    12e8:	ldr	x0, [x0]
    12ec:	ldr	x0, [x0]
    12f0:	ldr	w1, [sp, #108]
    12f4:	blr	x2
    12f8:	adrp	x0, 0 <grub_memcpy>
    12fc:	add	x0, x0, #0x0
    1300:	ldr	x0, [x0]
    1304:	ldr	x0, [x0]
    1308:	ldr	x0, [x0, #24]
    130c:	ldr	x0, [x0, #8]
    1310:	str	x0, [sp, #56]
    1314:	adrp	x0, 0 <grub_memcpy>
    1318:	add	x0, x0, #0x0
    131c:	ldr	x0, [x0]
    1320:	ldr	x0, [x0]
    1324:	ldr	x0, [x0, #24]
    1328:	ldr	w3, [x0, #4]
    132c:	ldr	x1, [sp, #56]
    1330:	adrp	x0, 0 <grub_memcpy>
    1334:	add	x0, x0, #0x0
    1338:	ldr	x2, [x0]
    133c:	mov	w0, w3
    1340:	bl	870 <grub_video_gop_fill_mode_info>
    1344:	str	w0, [sp, #76]
    1348:	ldr	w0, [sp, #76]
    134c:	cmp	w0, #0x0
    1350:	b.eq	1388 <grub_video_gop_setup+0x674>  // b.none
    1354:	adrp	x0, 0 <grub_memcpy>
    1358:	add	x0, x0, #0x0
    135c:	ldr	x3, [x0]
    1360:	adrp	x0, 0 <grub_memcpy>
    1364:	add	x0, x0, #0x0
    1368:	ldr	x2, [x0]
    136c:	mov	w1, #0x1d9                 	// #473
    1370:	adrp	x0, 0 <grub_memcpy>
    1374:	add	x0, x0, #0x0
    1378:	ldr	x0, [x0]
    137c:	bl	0 <grub_real_dprintf>
    1380:	ldr	w0, [sp, #76]
    1384:	b	165c <grub_video_gop_setup+0x948>
    1388:	adrp	x0, 0 <grub_memcpy>
    138c:	add	x0, x0, #0x0
    1390:	ldr	x0, [x0]
    1394:	ldr	x0, [x0]
    1398:	ldr	x0, [x0, #24]
    139c:	ldr	x0, [x0, #24]
    13a0:	mov	x1, x0
    13a4:	adrp	x0, 0 <grub_memcpy>
    13a8:	add	x0, x0, #0x0
    13ac:	ldr	x0, [x0]
    13b0:	str	x1, [x0, #88]
    13b4:	adrp	x0, 0 <grub_memcpy>
    13b8:	add	x0, x0, #0x0
    13bc:	ldr	x0, [x0]
    13c0:	ldr	w1, [x0, #4]
    13c4:	adrp	x0, 0 <grub_memcpy>
    13c8:	add	x0, x0, #0x0
    13cc:	ldr	x0, [x0]
    13d0:	ldr	w0, [x0]
    13d4:	mul	w0, w1, w0
    13d8:	mov	w0, w0
    13dc:	lsl	x0, x0, #2
    13e0:	bl	0 <grub_malloc>
    13e4:	mov	x1, x0
    13e8:	adrp	x0, 0 <grub_memcpy>
    13ec:	add	x0, x0, #0x0
    13f0:	ldr	x0, [x0]
    13f4:	str	x1, [x0, #96]
    13f8:	adrp	x0, 0 <grub_memcpy>
    13fc:	add	x0, x0, #0x0
    1400:	ldr	x0, [x0]
    1404:	ldr	x0, [x0, #96]
    1408:	str	x0, [sp, #88]
    140c:	ldr	x0, [sp, #88]
    1410:	cmp	x0, #0x0
    1414:	b.ne	149c <grub_video_gop_setup+0x788>  // b.any
    1418:	adrp	x0, 0 <grub_memcpy>
    141c:	add	x0, x0, #0x0
    1420:	ldr	x3, [x0]
    1424:	adrp	x0, 0 <grub_memcpy>
    1428:	add	x0, x0, #0x0
    142c:	ldr	x2, [x0]
    1430:	mov	w1, #0x1e7                 	// #487
    1434:	adrp	x0, 0 <grub_memcpy>
    1438:	add	x0, x0, #0x0
    143c:	ldr	x0, [x0]
    1440:	bl	0 <grub_real_dprintf>
    1444:	adrp	x0, 0 <grub_memcpy>
    1448:	add	x0, x0, #0x0
    144c:	ldr	x0, [x0]
    1450:	str	wzr, [x0]
    1454:	adrp	x0, 0 <grub_memcpy>
    1458:	add	x0, x0, #0x0
    145c:	ldr	x0, [x0]
    1460:	ldr	x0, [x0]
    1464:	ldr	x0, [x0, #24]
    1468:	ldr	w3, [x0, #4]
    146c:	ldr	x1, [sp, #56]
    1470:	adrp	x0, 0 <grub_memcpy>
    1474:	add	x0, x0, #0x0
    1478:	ldr	x2, [x0]
    147c:	mov	w0, w3
    1480:	bl	870 <grub_video_gop_fill_mode_info>
    1484:	str	w0, [sp, #76]
    1488:	adrp	x0, 0 <grub_memcpy>
    148c:	add	x0, x0, #0x0
    1490:	ldr	x0, [x0]
    1494:	ldr	x0, [x0, #88]
    1498:	str	x0, [sp, #88]
    149c:	adrp	x0, 0 <grub_memcpy>
    14a0:	add	x0, x0, #0x0
    14a4:	ldr	x0, [x0]
    14a8:	ldr	x1, [x0, #88]
    14ac:	adrp	x0, 0 <grub_memcpy>
    14b0:	add	x0, x0, #0x0
    14b4:	ldr	x0, [x0]
    14b8:	ldr	w2, [x0]
    14bc:	adrp	x0, 0 <grub_memcpy>
    14c0:	add	x0, x0, #0x0
    14c4:	ldr	x0, [x0]
    14c8:	ldr	w3, [x0, #4]
    14cc:	adrp	x0, 0 <grub_memcpy>
    14d0:	add	x0, x0, #0x0
    14d4:	ldr	x0, [x0]
    14d8:	ldr	w0, [x0, #12]
    14dc:	mov	w7, w0
    14e0:	mov	w6, w3
    14e4:	mov	w5, w2
    14e8:	mov	x4, x1
    14ec:	adrp	x0, 0 <grub_memcpy>
    14f0:	add	x0, x0, #0x0
    14f4:	ldr	x3, [x0]
    14f8:	adrp	x0, 0 <grub_memcpy>
    14fc:	add	x0, x0, #0x0
    1500:	ldr	x2, [x0]
    1504:	mov	w1, #0x1ee                 	// #494
    1508:	adrp	x0, 0 <grub_memcpy>
    150c:	add	x0, x0, #0x0
    1510:	ldr	x0, [x0]
    1514:	bl	0 <grub_real_dprintf>
    1518:	ldr	x2, [sp, #88]
    151c:	adrp	x0, 0 <grub_memcpy>
    1520:	add	x0, x0, #0x0
    1524:	ldr	x1, [x0]
    1528:	adrp	x0, 0 <grub_memcpy>
    152c:	add	x0, x0, #0x0
    1530:	ldr	x0, [x0]
    1534:	bl	0 <grub_video_fb_create_render_target_from_pointer>
    1538:	str	w0, [sp, #76]
    153c:	ldr	w0, [sp, #76]
    1540:	cmp	w0, #0x0
    1544:	b.eq	157c <grub_video_gop_setup+0x868>  // b.none
    1548:	adrp	x0, 0 <grub_memcpy>
    154c:	add	x0, x0, #0x0
    1550:	ldr	x3, [x0]
    1554:	adrp	x0, 0 <grub_memcpy>
    1558:	add	x0, x0, #0x0
    155c:	ldr	x2, [x0]
    1560:	mov	w1, #0x1f7                 	// #503
    1564:	adrp	x0, 0 <grub_memcpy>
    1568:	add	x0, x0, #0x0
    156c:	ldr	x0, [x0]
    1570:	bl	0 <grub_real_dprintf>
    1574:	ldr	w0, [sp, #76]
    1578:	b	165c <grub_video_gop_setup+0x948>
    157c:	adrp	x0, 0 <grub_memcpy>
    1580:	add	x0, x0, #0x0
    1584:	ldr	x0, [x0]
    1588:	ldr	x0, [x0, #80]
    158c:	bl	0 <grub_video_fb_set_active_render_target>
    1590:	str	w0, [sp, #76]
    1594:	ldr	w0, [sp, #76]
    1598:	cmp	w0, #0x0
    159c:	b.eq	15d4 <grub_video_gop_setup+0x8c0>  // b.none
    15a0:	adrp	x0, 0 <grub_memcpy>
    15a4:	add	x0, x0, #0x0
    15a8:	ldr	x3, [x0]
    15ac:	adrp	x0, 0 <grub_memcpy>
    15b0:	add	x0, x0, #0x0
    15b4:	ldr	x2, [x0]
    15b8:	mov	w1, #0x1ff                 	// #511
    15bc:	adrp	x0, 0 <grub_memcpy>
    15c0:	add	x0, x0, #0x0
    15c4:	ldr	x0, [x0]
    15c8:	bl	0 <grub_real_dprintf>
    15cc:	ldr	w0, [sp, #76]
    15d0:	b	165c <grub_video_gop_setup+0x948>
    15d4:	adrp	x0, 0 <grub_memcpy>
    15d8:	add	x0, x0, #0x0
    15dc:	ldr	x2, [x0]
    15e0:	mov	w1, #0x10                  	// #16
    15e4:	mov	w0, #0x0                   	// #0
    15e8:	bl	0 <grub_video_fb_set_palette>
    15ec:	str	w0, [sp, #76]
    15f0:	ldr	w0, [sp, #76]
    15f4:	cmp	w0, #0x0
    15f8:	b.eq	162c <grub_video_gop_setup+0x918>  // b.none
    15fc:	adrp	x0, 0 <grub_memcpy>
    1600:	add	x0, x0, #0x0
    1604:	ldr	x3, [x0]
    1608:	adrp	x0, 0 <grub_memcpy>
    160c:	add	x0, x0, #0x0
    1610:	ldr	x2, [x0]
    1614:	mov	w1, #0x207                 	// #519
    1618:	adrp	x0, 0 <grub_memcpy>
    161c:	add	x0, x0, #0x0
    1620:	ldr	x0, [x0]
    1624:	bl	0 <grub_real_dprintf>
    1628:	b	1658 <grub_video_gop_setup+0x944>
    162c:	adrp	x0, 0 <grub_memcpy>
    1630:	add	x0, x0, #0x0
    1634:	ldr	x3, [x0]
    1638:	adrp	x0, 0 <grub_memcpy>
    163c:	add	x0, x0, #0x0
    1640:	ldr	x2, [x0]
    1644:	mov	w1, #0x209                 	// #521
    1648:	adrp	x0, 0 <grub_memcpy>
    164c:	add	x0, x0, #0x0
    1650:	ldr	x0, [x0]
    1654:	bl	0 <grub_real_dprintf>
    1658:	ldr	w0, [sp, #76]
    165c:	ldp	x29, x30, [sp], #112
    1660:	ret
    1664:	nop
	...

0000000000001730 <grub_video_gop_swap_buffers>:
    1730:	sub	sp, sp, #0x20
    1734:	stp	x29, x30, [sp, #16]
    1738:	add	x29, sp, #0x10
    173c:	adrp	x0, 0 <grub_memcpy>
    1740:	add	x0, x0, #0x0
    1744:	ldr	x0, [x0]
    1748:	ldr	x0, [x0, #96]
    174c:	cmp	x0, #0x0
    1750:	b.eq	17f4 <grub_video_gop_swap_buffers+0xc4>  // b.none
    1754:	adrp	x0, 0 <grub_memcpy>
    1758:	add	x0, x0, #0x0
    175c:	ldr	x0, [x0]
    1760:	ldr	x0, [x0]
    1764:	ldr	x8, [x0, #16]
    1768:	adrp	x0, 0 <grub_memcpy>
    176c:	add	x0, x0, #0x0
    1770:	ldr	x0, [x0]
    1774:	ldr	x9, [x0]
    1778:	adrp	x0, 0 <grub_memcpy>
    177c:	add	x0, x0, #0x0
    1780:	ldr	x0, [x0]
    1784:	ldr	x10, [x0, #96]
    1788:	adrp	x0, 0 <grub_memcpy>
    178c:	add	x0, x0, #0x0
    1790:	ldr	x0, [x0]
    1794:	ldr	w0, [x0]
    1798:	mov	w2, w0
    179c:	adrp	x0, 0 <grub_memcpy>
    17a0:	add	x0, x0, #0x0
    17a4:	ldr	x0, [x0]
    17a8:	ldr	w0, [x0, #4]
    17ac:	mov	w0, w0
    17b0:	adrp	x1, 0 <grub_memcpy>
    17b4:	add	x1, x1, #0x0
    17b8:	ldr	x1, [x1]
    17bc:	ldr	w1, [x1]
    17c0:	lsl	w1, w1, #2
    17c4:	mov	w1, w1
    17c8:	str	x1, [sp, #8]
    17cc:	str	x0, [sp]
    17d0:	mov	x7, x2
    17d4:	mov	x6, #0x0                   	// #0
    17d8:	mov	x5, #0x0                   	// #0
    17dc:	mov	x4, #0x0                   	// #0
    17e0:	mov	x3, #0x0                   	// #0
    17e4:	mov	x2, #0x2                   	// #2
    17e8:	mov	x1, x10
    17ec:	mov	x0, x9
    17f0:	blr	x8
    17f4:	mov	w0, #0x0                   	// #0
    17f8:	ldp	x29, x30, [sp, #16]
    17fc:	add	sp, sp, #0x20
    1800:	ret
    1804:	nop
	...

0000000000001818 <grub_video_gop_set_active_render_target>:
    1818:	stp	x29, x30, [sp, #-32]!
    181c:	mov	x29, sp
    1820:	str	x0, [sp, #24]
    1824:	ldr	x0, [sp, #24]
    1828:	cmp	x0, #0x0
    182c:	b.ne	1844 <grub_video_gop_set_active_render_target+0x2c>  // b.any
    1830:	adrp	x0, 0 <grub_memcpy>
    1834:	add	x0, x0, #0x0
    1838:	ldr	x0, [x0]
    183c:	ldr	x0, [x0, #80]
    1840:	str	x0, [sp, #24]
    1844:	ldr	x0, [sp, #24]
    1848:	bl	0 <grub_video_fb_set_active_render_target>
    184c:	ldp	x29, x30, [sp], #32
    1850:	ret
    1854:	nop
	...

0000000000001860 <grub_video_gop_get_info_and_fini>:
    1860:	stp	x29, x30, [sp, #-48]!
    1864:	mov	x29, sp
    1868:	str	x0, [sp, #24]
    186c:	str	x1, [sp, #16]
    1870:	adrp	x0, 0 <grub_memcpy>
    1874:	add	x0, x0, #0x0
    1878:	ldr	x0, [x0]
    187c:	ldr	x0, [x0]
    1880:	ldr	x0, [x0, #24]
    1884:	ldr	w3, [x0, #4]
    1888:	adrp	x0, 0 <grub_memcpy>
    188c:	add	x0, x0, #0x0
    1890:	ldr	x0, [x0]
    1894:	ldr	x0, [x0]
    1898:	ldr	x0, [x0, #24]
    189c:	ldr	x0, [x0, #8]
    18a0:	ldr	x2, [sp, #24]
    18a4:	mov	x1, x0
    18a8:	mov	w0, w3
    18ac:	bl	5e8 <grub_video_gop_fill_real_mode_info>
    18b0:	str	w0, [sp, #44]
    18b4:	ldr	w0, [sp, #44]
    18b8:	cmp	w0, #0x0
    18bc:	b.eq	18f4 <grub_video_gop_get_info_and_fini+0x94>  // b.none
    18c0:	adrp	x0, 0 <grub_memcpy>
    18c4:	add	x0, x0, #0x0
    18c8:	ldr	x3, [x0]
    18cc:	adrp	x0, 0 <grub_memcpy>
    18d0:	add	x0, x0, #0x0
    18d4:	ldr	x2, [x0]
    18d8:	mov	w1, #0x22e                 	// #558
    18dc:	adrp	x0, 0 <grub_memcpy>
    18e0:	add	x0, x0, #0x0
    18e4:	ldr	x0, [x0]
    18e8:	bl	0 <grub_real_dprintf>
    18ec:	ldr	w0, [sp, #44]
    18f0:	b	1938 <grub_video_gop_get_info_and_fini+0xd8>
    18f4:	adrp	x0, 0 <grub_memcpy>
    18f8:	add	x0, x0, #0x0
    18fc:	ldr	x0, [x0]
    1900:	ldr	x1, [x0, #88]
    1904:	ldr	x0, [sp, #16]
    1908:	str	x1, [x0]
    190c:	bl	0 <grub_video_fb_fini>
    1910:	adrp	x0, 0 <grub_memcpy>
    1914:	add	x0, x0, #0x0
    1918:	ldr	x0, [x0]
    191c:	ldr	x0, [x0, #96]
    1920:	bl	0 <grub_free>
    1924:	adrp	x0, 0 <grub_memcpy>
    1928:	add	x0, x0, #0x0
    192c:	ldr	x0, [x0]
    1930:	str	xzr, [x0, #96]
    1934:	mov	w0, #0x0                   	// #0
    1938:	ldp	x29, x30, [sp], #48
    193c:	ret
	...

0000000000001968 <grub_mod_init>:
    1968:	stp	x29, x30, [sp, #-32]!
    196c:	mov	x29, sp
    1970:	str	x0, [sp, #24]
    1974:	bl	12c <check_protocol>
    1978:	cmp	w0, #0x0
    197c:	b.eq	1990 <grub_mod_init+0x28>  // b.none
    1980:	adrp	x0, 0 <grub_memcpy>
    1984:	add	x0, x0, #0x0
    1988:	ldr	x0, [x0]
    198c:	bl	2c <grub_video_register>
    1990:	nop
    1994:	ldp	x29, x30, [sp], #32
    1998:	ret
    199c:	nop
	...

00000000000019a8 <grub_mod_fini>:
    19a8:	stp	x29, x30, [sp, #-16]!
    19ac:	mov	x29, sp
    19b0:	adrp	x0, 0 <grub_memcpy>
    19b4:	add	x0, x0, #0x0
    19b8:	ldr	x0, [x0]
    19bc:	ldr	w0, [x0]
    19c0:	cmp	w0, #0x0
    19c4:	b.eq	1a18 <grub_mod_fini+0x70>  // b.none
    19c8:	adrp	x0, 0 <grub_memcpy>
    19cc:	add	x0, x0, #0x0
    19d0:	ldr	x0, [x0]
    19d4:	ldr	x0, [x0]
    19d8:	ldr	x2, [x0, #8]
    19dc:	adrp	x0, 0 <grub_memcpy>
    19e0:	add	x0, x0, #0x0
    19e4:	ldr	x0, [x0]
    19e8:	ldr	x3, [x0]
    19ec:	adrp	x0, 0 <grub_memcpy>
    19f0:	add	x0, x0, #0x0
    19f4:	ldr	x0, [x0]
    19f8:	ldr	w0, [x0]
    19fc:	mov	w1, w0
    1a00:	mov	x0, x3
    1a04:	blr	x2
    1a08:	adrp	x0, 0 <grub_memcpy>
    1a0c:	add	x0, x0, #0x0
    1a10:	ldr	x0, [x0]
    1a14:	str	wzr, [x0]
    1a18:	adrp	x0, 0 <grub_memcpy>
    1a1c:	add	x0, x0, #0x0
    1a20:	ldr	x0, [x0]
    1a24:	ldr	x0, [x0]
    1a28:	cmp	x0, #0x0
    1a2c:	b.eq	1a40 <grub_mod_fini+0x98>  // b.none
    1a30:	adrp	x0, 0 <grub_memcpy>
    1a34:	add	x0, x0, #0x0
    1a38:	ldr	x0, [x0]
    1a3c:	bl	e0 <grub_video_unregister>
    1a40:	nop
    1a44:	ldp	x29, x30, [sp], #16
    1a48:	ret
    1a4c:	nop
	...
