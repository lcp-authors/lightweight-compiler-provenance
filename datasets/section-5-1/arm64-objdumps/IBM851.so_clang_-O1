
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM851.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 12000 <gconv@@Base+0x11720>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xf8>:
     760:	adrp	x0, 12000 <gconv@@Base+0x11720>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 13000 <gconv@@Base+0x12720>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 13000 <gconv@@Base+0x12720>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 12000 <gconv@@Base+0x11720>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 13000 <gconv@@Base+0x12720>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 13000 <gconv@@Base+0x12720>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 12000 <gconv@@Base+0x11720>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 13000 <gconv@@Base+0x12720>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 12000 <gconv@@Base+0x11720>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 13000 <gconv@@Base+0x12720>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x2, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x720>
     840:	add	x0, x0, #0x7f0
     844:	tst	w1, #0xff
     848:	ldr	w0, [x0, x2, lsl #2]
     84c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     850:	csinv	w0, w0, wzr, ne  // ne = any
     854:	ret

0000000000000858 <gconv_init@@Base>:
     858:	stp	x29, x30, [sp, #-32]!
     85c:	mov	x29, sp
     860:	stp	x19, x20, [sp, #16]
     864:	mov	x19, x0
     868:	adrp	x20, 1000 <gconv@@Base+0x720>
     86c:	ldr	x0, [x0, #24]
     870:	add	x20, x20, #0x660
     874:	mov	x1, x20
     878:	bl	730 <strcmp@plt>
     87c:	cbnz	w0, 8b0 <gconv_init@@Base+0x58>
     880:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     884:	mov	x2, #0x100000001           	// #4294967297
     888:	add	x0, x0, #0x838
     88c:	mov	x1, #0x400000004           	// #17179869188
     890:	str	x0, [x19, #48]
     894:	stp	x2, x1, [x19, #72]
     898:	str	xzr, [x19, #96]
     89c:	mov	w0, #0x0                   	// #0
     8a0:	str	wzr, [x19, #88]
     8a4:	ldp	x19, x20, [sp, #16]
     8a8:	ldp	x29, x30, [sp], #32
     8ac:	ret
     8b0:	ldr	x0, [x19, #32]
     8b4:	mov	x1, x20
     8b8:	bl	730 <strcmp@plt>
     8bc:	cbnz	w0, 8d8 <gconv_init@@Base+0x80>
     8c0:	mov	x0, #0xffffffffffffffff    	// #-1
     8c4:	mov	x2, #0x400000004           	// #17179869188
     8c8:	mov	x1, #0x100000001           	// #4294967297
     8cc:	stp	x2, x1, [x19, #72]
     8d0:	str	x0, [x19, #96]
     8d4:	b	89c <gconv_init@@Base+0x44>
     8d8:	mov	w0, #0x1                   	// #1
     8dc:	b	8a4 <gconv_init@@Base+0x4c>

00000000000008e0 <gconv@@Base>:
     8e0:	stp	x29, x30, [sp, #-240]!
     8e4:	mov	x9, x0
     8e8:	mov	x8, x4
     8ec:	mov	x29, sp
     8f0:	stp	x19, x20, [sp, #16]
     8f4:	mov	x20, x1
     8f8:	adrp	x1, 12000 <gconv@@Base+0x11720>
     8fc:	stp	x23, x24, [sp, #48]
     900:	mov	x19, x3
     904:	ldr	w13, [x20, #16]
     908:	ldr	x1, [x1, #4056]
     90c:	stp	x25, x26, [sp, #64]
     910:	mov	x26, x5
     914:	ldr	x0, [x1]
     918:	str	x0, [sp, #232]
     91c:	mov	x0, #0x0                   	// #0
     920:	add	x1, x9, #0x68
     924:	add	x0, x20, #0x30
     928:	stp	x27, x28, [sp, #80]
     92c:	mov	x25, #0x0                   	// #0
     930:	stp	x1, x0, [sp, #144]
     934:	mov	x27, x2
     938:	str	w7, [sp, #168]
     93c:	tbnz	w13, #0, 95c <gconv@@Base+0x7c>
     940:	ldr	x0, [x9, #104]
     944:	ldr	x25, [x9, #144]
     948:	cbz	x0, 95c <gconv@@Base+0x7c>
     94c:	adrp	x0, 12000 <gconv@@Base+0x11720>
     950:	ldr	x0, [x0, #4040]
     954:	ldr	x0, [x0]
     958:	eor	x25, x25, x0
     95c:	cbnz	w6, 1044 <gconv@@Base+0x764>
     960:	cmp	x8, #0x0
     964:	add	x1, sp, #0xc0
     968:	csel	x2, x20, x8, eq  // eq = none
     96c:	cmp	x26, #0x0
     970:	csel	x1, x1, xzr, ne  // ne = any
     974:	stp	x21, x22, [sp, #32]
     978:	mov	x10, #0x0                   	// #0
     97c:	ldr	x23, [x2]
     980:	str	x1, [sp, #136]
     984:	ldr	w1, [sp, #168]
     988:	ldr	x0, [x9, #96]
     98c:	cmp	w1, #0x0
     990:	cset	w1, ne  // ne = any
     994:	str	w1, [sp, #172]
     998:	str	xzr, [sp, #192]
     99c:	cmp	x0, #0x0
     9a0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     9a4:	ldr	x21, [x27]
     9a8:	ldr	x22, [x20, #8]
     9ac:	b.ne	d4c <gconv@@Base+0x46c>  // b.any
     9b0:	add	x1, sp, #0xd8
     9b4:	adrp	x18, 1000 <gconv@@Base+0x720>
     9b8:	add	x14, x18, #0x7f0
     9bc:	str	x1, [sp, #160]
     9c0:	mov	x1, x26
     9c4:	mov	x24, x23
     9c8:	mov	x26, x22
     9cc:	mov	x23, x27
     9d0:	add	x15, x14, #0x400
     9d4:	mov	w7, w13
     9d8:	mov	x27, x10
     9dc:	mov	x22, x1
     9e0:	stp	x9, x8, [sp, #120]
     9e4:	cbz	x22, 9f0 <gconv@@Base+0x110>
     9e8:	ldr	x1, [x22]
     9ec:	add	x27, x27, x1
     9f0:	cbz	x0, b7c <gconv@@Base+0x29c>
     9f4:	stp	x21, x24, [sp, #208]
     9f8:	mov	x28, x24
     9fc:	cmp	x19, x21
     a00:	b.eq	10e0 <gconv@@Base+0x800>  // b.none
     a04:	mov	x0, x21
     a08:	add	x3, sp, #0xd0
     a0c:	mov	w11, #0x4                   	// #4
     a10:	add	x1, x0, #0x4
     a14:	cmp	x19, x1
     a18:	b.cc	c44 <gconv@@Base+0x364>  // b.lo, b.ul, b.last
     a1c:	cmp	x26, x28
     a20:	b.ls	c50 <gconv@@Base+0x370>  // b.plast
     a24:	ldr	w8, [x0]
     a28:	mov	w2, #0xfffe                	// #65534
     a2c:	cmp	w8, w2
     a30:	b.hi	b50 <gconv@@Base+0x270>  // b.pmore
     a34:	mov	w2, w8
     a38:	cmp	w8, #0x7f
     a3c:	mov	x5, x15
     a40:	mov	w6, #0xb4                  	// #180
     a44:	b.hi	a54 <gconv@@Base+0x174>  // b.pmore
     a48:	b	a74 <gconv@@Base+0x194>
     a4c:	ldrh	w6, [x2, #10]
     a50:	mov	x5, x2
     a54:	cmp	w8, w6
     a58:	add	x2, x5, #0x8
     a5c:	b.hi	a4c <gconv@@Base+0x16c>  // b.pmore
     a60:	ldrh	w1, [x2]
     a64:	cmp	w8, w1
     a68:	b.cc	b5c <gconv@@Base+0x27c>  // b.lo, b.ul, b.last
     a6c:	ldr	w2, [x5, #12]
     a70:	add	w2, w8, w2
     a74:	add	x1, x18, #0x7f0
     a78:	add	x1, x1, #0x490
     a7c:	ldrb	w1, [x1, w2, uxtw]
     a80:	cmp	w1, #0x0
     a84:	ccmp	w8, #0x0, #0x4, eq  // eq = none
     a88:	b.ne	b5c <gconv@@Base+0x27c>  // b.any
     a8c:	add	x0, x28, #0x1
     a90:	str	x0, [sp, #216]
     a94:	strb	w1, [x28]
     a98:	ldp	x0, x28, [sp, #208]
     a9c:	add	x0, x0, #0x4
     aa0:	str	x0, [sp, #208]
     aa4:	cmp	x19, x0
     aa8:	b.ne	a10 <gconv@@Base+0x130>  // b.any
     aac:	nop
     ab0:	str	x0, [x23]
     ab4:	ldr	x0, [sp, #128]
     ab8:	cbnz	x0, bec <gconv@@Base+0x30c>
     abc:	ldp	w1, w0, [x20, #16]
     ac0:	add	w0, w0, #0x1
     ac4:	str	w0, [x20, #20]
     ac8:	tbnz	w1, #0, cd8 <gconv@@Base+0x3f8>
     acc:	cmp	x24, x28
     ad0:	b.cs	d3c <gconv@@Base+0x45c>  // b.hs, b.nlast
     ad4:	ldr	x1, [x20]
     ad8:	mov	x0, x25
     adc:	stp	x14, x15, [sp, #96]
     ae0:	str	w11, [sp, #112]
     ae4:	str	x1, [sp, #200]
     ae8:	bl	740 <_dl_mcount_wrapper_check@plt>
     aec:	ldp	x0, x1, [sp, #144]
     af0:	mov	x5, x22
     af4:	ldr	w7, [sp, #168]
     af8:	mov	x3, x28
     afc:	add	x2, sp, #0xc8
     b00:	mov	w6, #0x0                   	// #0
     b04:	mov	x4, #0x0                   	// #0
     b08:	blr	x25
     b0c:	mov	w7, w0
     b10:	ldr	w11, [sp, #112]
     b14:	cmp	w0, #0x4
     b18:	adrp	x18, 1000 <gconv@@Base+0x720>
     b1c:	ldp	x14, x15, [sp, #96]
     b20:	b.eq	c2c <gconv@@Base+0x34c>  // b.none
     b24:	ldr	x11, [sp, #200]
     b28:	cmp	x11, x28
     b2c:	b.ne	ebc <gconv@@Base+0x5dc>  // b.any
     b30:	ldr	x0, [sp, #120]
     b34:	ldr	x0, [x0, #96]
     b38:	cbnz	w7, 1090 <gconv@@Base+0x7b0>
     b3c:	ldr	w7, [x20, #16]
     b40:	ldr	x24, [x20]
     b44:	ldr	x21, [x23]
     b48:	ldr	x27, [sp, #192]
     b4c:	b	9e4 <gconv@@Base+0x104>
     b50:	mov	w0, #0x1c00                	// #7168
     b54:	cmp	w0, w8, lsr #7
     b58:	b.eq	1024 <gconv@@Base+0x744>  // b.none
     b5c:	ldr	x0, [sp, #136]
     b60:	cbz	x0, 12dc <gconv@@Base+0x9fc>
     b64:	ldr	w0, [x20, #16]
     b68:	tbnz	w0, #3, c5c <gconv@@Base+0x37c>
     b6c:	ldr	x0, [sp, #208]
     b70:	tbnz	w7, #1, cb8 <gconv@@Base+0x3d8>
     b74:	mov	w11, #0x6                   	// #6
     b78:	b	ab0 <gconv@@Base+0x1d0>
     b7c:	cmp	x19, x21
     b80:	b.eq	12c8 <gconv@@Base+0x9e8>  // b.none
     b84:	add	x1, x24, #0x4
     b88:	cmp	x1, x26
     b8c:	b.hi	1030 <gconv@@Base+0x750>  // b.pmore
     b90:	and	w7, w7, #0x2
     b94:	mov	x0, x21
     b98:	mov	x28, x24
     b9c:	mov	w11, #0x4                   	// #4
     ba0:	ldrb	w3, [x0]
     ba4:	mov	x2, x0
     ba8:	ldr	w4, [x14, w3, sxtw #2]
     bac:	cmp	w4, #0x0
     bb0:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     bb4:	b.ne	d18 <gconv@@Base+0x438>  // b.any
     bb8:	add	x0, x0, #0x1
     bbc:	str	w4, [x28]
     bc0:	mov	x2, x0
     bc4:	mov	x28, x1
     bc8:	cmp	x19, x0
     bcc:	b.eq	be0 <gconv@@Base+0x300>  // b.none
     bd0:	add	x1, x28, #0x4
     bd4:	cmp	x26, x1
     bd8:	b.cs	ba0 <gconv@@Base+0x2c0>  // b.hs, b.nlast
     bdc:	mov	w11, #0x5                   	// #5
     be0:	str	x2, [x23]
     be4:	ldr	x0, [sp, #128]
     be8:	cbz	x0, abc <gconv@@Base+0x1dc>
     bec:	mov	w24, w11
     bf0:	ldp	x21, x22, [sp, #32]
     bf4:	str	x28, [x0]
     bf8:	adrp	x0, 12000 <gconv@@Base+0x11720>
     bfc:	ldr	x0, [x0, #4056]
     c00:	ldr	x1, [sp, #232]
     c04:	ldr	x0, [x0]
     c08:	eor	x0, x1, x0
     c0c:	cbnz	x0, 1604 <gconv@@Base+0xd24>
     c10:	mov	w0, w24
     c14:	ldp	x19, x20, [sp, #16]
     c18:	ldp	x23, x24, [sp, #48]
     c1c:	ldp	x25, x26, [sp, #64]
     c20:	ldp	x27, x28, [sp, #80]
     c24:	ldp	x29, x30, [sp], #240
     c28:	ret
     c2c:	cmp	w11, #0x5
     c30:	b.eq	d30 <gconv@@Base+0x450>  // b.none
     c34:	ldr	x0, [sp, #120]
     c38:	mov	w7, w11
     c3c:	ldr	x0, [x0, #96]
     c40:	b	b38 <gconv@@Base+0x258>
     c44:	mov	w11, #0x7                   	// #7
     c48:	ldr	x0, [sp, #208]
     c4c:	b	ab0 <gconv@@Base+0x1d0>
     c50:	mov	w11, #0x5                   	// #5
     c54:	ldr	x0, [sp, #208]
     c58:	b	ab0 <gconv@@Base+0x1d0>
     c5c:	ldr	x2, [x23]
     c60:	mov	x4, x19
     c64:	ldr	x0, [sp, #120]
     c68:	mov	x1, x20
     c6c:	ldr	x6, [sp, #136]
     c70:	str	x3, [sp, #96]
     c74:	ldr	x5, [sp, #160]
     c78:	str	w7, [sp, #104]
     c7c:	str	x14, [sp, #112]
     c80:	str	x15, [sp, #176]
     c84:	bl	700 <__gconv_transliterate@plt>
     c88:	mov	w11, w0
     c8c:	ldr	w7, [sp, #104]
     c90:	cmp	w0, #0x6
     c94:	adrp	x18, 1000 <gconv@@Base+0x720>
     c98:	ldr	x3, [sp, #96]
     c9c:	ldr	x14, [sp, #112]
     ca0:	ldr	x15, [sp, #176]
     ca4:	b.eq	1000 <gconv@@Base+0x720>  // b.none
     ca8:	cmp	w0, #0x5
     cac:	ldp	x0, x28, [sp, #208]
     cb0:	b.ne	aa4 <gconv@@Base+0x1c4>  // b.any
     cb4:	b	ab0 <gconv@@Base+0x1d0>
     cb8:	ldr	x2, [sp, #136]
     cbc:	add	x0, x0, #0x4
     cc0:	mov	w11, #0x6                   	// #6
     cc4:	str	x0, [sp, #208]
     cc8:	ldr	x1, [x2]
     ccc:	add	x1, x1, #0x1
     cd0:	str	x1, [x2]
     cd4:	b	aa4 <gconv@@Base+0x1c4>
     cd8:	ldr	x9, [sp, #120]
     cdc:	mov	w24, w11
     ce0:	ldr	x1, [x22]
     ce4:	mov	x27, x23
     ce8:	ldr	x2, [sp, #192]
     cec:	ldr	x0, [x9, #96]
     cf0:	str	x28, [x20]
     cf4:	add	x1, x1, x2
     cf8:	str	x1, [x22]
     cfc:	cmp	x0, #0x0
     d00:	ldr	w0, [sp, #172]
     d04:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     d08:	ccmp	w24, #0x7, #0x0, ne  // ne = any
     d0c:	b.eq	11d4 <gconv@@Base+0x8f4>  // b.none
     d10:	ldp	x21, x22, [sp, #32]
     d14:	b	bf8 <gconv@@Base+0x318>
     d18:	ldr	x3, [sp, #136]
     d1c:	cbz	x3, d24 <gconv@@Base+0x444>
     d20:	cbnz	w7, 1008 <gconv@@Base+0x728>
     d24:	mov	w11, #0x6                   	// #6
     d28:	str	x2, [x23]
     d2c:	b	be4 <gconv@@Base+0x304>
     d30:	ldr	x0, [sp, #120]
     d34:	ldr	x0, [x0, #96]
     d38:	b	b3c <gconv@@Base+0x25c>
     d3c:	ldr	x0, [sp, #120]
     d40:	mov	w7, w11
     d44:	ldr	x0, [x0, #96]
     d48:	b	b38 <gconv@@Base+0x258>
     d4c:	ldr	x14, [x20, #32]
     d50:	ldr	w3, [x14]
     d54:	ands	w4, w3, #0x7
     d58:	b.eq	9b0 <gconv@@Base+0xd0>  // b.none
     d5c:	cbnz	x8, 15e4 <gconv@@Base+0xd04>
     d60:	stp	x21, x23, [sp, #208]
     d64:	cmp	w4, #0x4
     d68:	b.hi	160c <gconv@@Base+0xd2c>  // b.pmore
     d6c:	mov	w7, w4
     d70:	cbz	w4, 133c <gconv@@Base+0xa5c>
     d74:	add	x6, x14, #0x3
     d78:	add	x10, sp, #0xe0
     d7c:	mov	x0, #0x1                   	// #1
     d80:	add	x1, x10, x0
     d84:	ldrb	w5, [x6, x0]
     d88:	cmp	x0, x7
     d8c:	add	x0, x0, #0x1
     d90:	sturb	w5, [x1, #-1]
     d94:	b.ne	d80 <gconv@@Base+0x4a0>  // b.any
     d98:	mov	x0, #0x4                   	// #4
     d9c:	sub	x0, x0, x7
     da0:	add	x0, x21, x0
     da4:	cmp	x19, x0
     da8:	b.cc	13bc <gconv@@Base+0xadc>  // b.lo, b.ul, b.last
     dac:	add	x0, x21, #0x1
     db0:	add	x10, sp, #0xe0
     db4:	cmp	x23, x22
     db8:	b.cs	1330 <gconv@@Base+0xa50>  // b.hs, b.nlast
     dbc:	add	x7, x7, #0x1
     dc0:	str	x0, [sp, #208]
     dc4:	add	x1, x10, x7
     dc8:	cmp	x7, #0x3
     dcc:	ldurb	w2, [x0, #-1]
     dd0:	ccmp	x19, x0, #0x0, ls  // ls = plast
     dd4:	add	x0, x0, #0x1
     dd8:	sturb	w2, [x1, #-1]
     ddc:	b.hi	dbc <gconv@@Base+0x4dc>  // b.pmore
     de0:	ldr	w5, [sp, #224]
     de4:	mov	w0, #0xfffe                	// #65534
     de8:	str	x10, [sp, #208]
     dec:	cmp	w5, w0
     df0:	b.hi	13a0 <gconv@@Base+0xac0>  // b.pmore
     df4:	mov	w1, w5
     df8:	cmp	w5, #0x7f
     dfc:	adrp	x3, 1000 <gconv@@Base+0x720>
     e00:	b.ls	e40 <gconv@@Base+0x560>  // b.plast
     e04:	adrp	x3, 1000 <gconv@@Base+0x720>
     e08:	add	x1, x3, #0x7f0
     e0c:	add	x1, x1, #0x400
     e10:	mov	w2, #0xb4                  	// #180
     e14:	b	e20 <gconv@@Base+0x540>
     e18:	ldrh	w2, [x0, #10]
     e1c:	mov	x1, x0
     e20:	cmp	w5, w2
     e24:	add	x0, x1, #0x8
     e28:	b.hi	e18 <gconv@@Base+0x538>  // b.pmore
     e2c:	ldrh	w0, [x0]
     e30:	cmp	w5, w0
     e34:	b.cc	1360 <gconv@@Base+0xa80>  // b.lo, b.ul, b.last
     e38:	ldr	w1, [x1, #12]
     e3c:	add	w1, w5, w1
     e40:	add	x0, x3, #0x7f0
     e44:	add	x0, x0, #0x490
     e48:	ldrb	w0, [x0, w1, uxtw]
     e4c:	cmp	w0, #0x0
     e50:	ccmp	w5, #0x0, #0x4, eq  // eq = none
     e54:	b.ne	1360 <gconv@@Base+0xa80>  // b.any
     e58:	add	x1, x23, #0x1
     e5c:	str	x1, [sp, #216]
     e60:	strb	w0, [x23]
     e64:	ldr	x0, [sp, #208]
     e68:	add	x0, x0, #0x4
     e6c:	str	x0, [sp, #208]
     e70:	cmp	x0, x10
     e74:	b.eq	134c <gconv@@Base+0xa6c>  // b.none
     e78:	ldr	w3, [x14]
     e7c:	sub	x10, x0, x10
     e80:	and	w4, w3, #0x7
     e84:	mov	w0, w4
     e88:	cmp	x0, x10
     e8c:	b.ge	162c <gconv@@Base+0xd4c>  // b.tcont
     e90:	ldr	x21, [x27]
     e94:	sub	x0, x10, x0
     e98:	ldr	w13, [x20, #16]
     e9c:	and	w3, w3, #0xfffffff8
     ea0:	add	x21, x21, x0
     ea4:	str	x21, [x27]
     ea8:	ldr	x10, [sp, #192]
     eac:	ldr	x0, [x9, #96]
     eb0:	ldr	x23, [sp, #216]
     eb4:	str	w3, [x14]
     eb8:	b	9b0 <gconv@@Base+0xd0>
     ebc:	mov	x0, #0x0                   	// #0
     ec0:	cbz	x22, ec8 <gconv@@Base+0x5e8>
     ec4:	ldr	x0, [x22]
     ec8:	ldr	x1, [sp, #192]
     ecc:	add	x0, x0, x1
     ed0:	cmp	x0, x27
     ed4:	b.eq	10ec <gconv@@Base+0x80c>  // b.none
     ed8:	ldr	x0, [sp, #120]
     edc:	ldr	w28, [x20, #16]
     ee0:	str	x21, [x23]
     ee4:	ldr	x0, [x0, #96]
     ee8:	cbz	x0, 1228 <gconv@@Base+0x948>
     eec:	stp	x21, x24, [sp, #208]
     ef0:	cmp	x19, x21
     ef4:	b.eq	151c <gconv@@Base+0xc3c>  // b.none
     ef8:	add	x27, sp, #0xd0
     efc:	mov	x5, x24
     f00:	mov	x10, x26
     f04:	mov	x26, x24
     f08:	mov	x24, x20
     f0c:	mov	x20, x11
     f10:	mov	x11, x22
     f14:	mov	x3, x27
     f18:	ldr	x22, [sp, #136]
     f1c:	mov	x27, x25
     f20:	mov	x25, x23
     f24:	mov	x23, x15
     f28:	mov	x6, #0x4                   	// #4
     f2c:	add	x0, x21, #0x4
     f30:	cmp	x19, x0
     f34:	b.cc	1298 <gconv@@Base+0x9b8>  // b.lo, b.ul, b.last
     f38:	cmp	x20, x5
     f3c:	b.ls	1300 <gconv@@Base+0xa20>  // b.plast
     f40:	ldr	w9, [x21]
     f44:	mov	w1, #0xfffe                	// #65534
     f48:	cmp	w9, w1
     f4c:	b.hi	12e8 <gconv@@Base+0xa08>  // b.pmore
     f50:	mov	w0, w9
     f54:	cmp	w9, #0x7f
     f58:	mov	x2, x23
     f5c:	mov	w8, #0xb4                  	// #180
     f60:	b.hi	f70 <gconv@@Base+0x690>  // b.pmore
     f64:	b	f90 <gconv@@Base+0x6b0>
     f68:	ldrh	w8, [x0, #10]
     f6c:	mov	x2, x0
     f70:	cmp	w9, w8
     f74:	add	x0, x2, #0x8
     f78:	b.hi	f68 <gconv@@Base+0x688>  // b.pmore
     f7c:	ldrh	w0, [x0]
     f80:	cmp	w9, w0
     f84:	b.cc	109c <gconv@@Base+0x7bc>  // b.lo, b.ul, b.last
     f88:	ldr	w0, [x2, #12]
     f8c:	add	w0, w9, w0
     f90:	add	x1, x18, #0x7f0
     f94:	add	x1, x1, #0x490
     f98:	ldrb	w0, [x1, w0, uxtw]
     f9c:	cmp	w0, #0x0
     fa0:	ccmp	w9, #0x0, #0x4, eq  // eq = none
     fa4:	b.ne	109c <gconv@@Base+0x7bc>  // b.any
     fa8:	add	x1, x5, #0x1
     fac:	str	x1, [sp, #216]
     fb0:	strb	w0, [x5]
     fb4:	ldp	x21, x5, [sp, #208]
     fb8:	add	x21, x21, #0x4
     fbc:	str	x21, [sp, #208]
     fc0:	cmp	x19, x21
     fc4:	b.ne	f2c <gconv@@Base+0x64c>  // b.any
     fc8:	mov	x15, x23
     fcc:	mov	x23, x25
     fd0:	mov	x22, x11
     fd4:	mov	x20, x24
     fd8:	ldr	x11, [sp, #200]
     fdc:	mov	x24, x26
     fe0:	mov	x25, x27
     fe4:	mov	x26, x10
     fe8:	str	x19, [x23]
     fec:	cmp	x5, x11
     ff0:	b.ne	12a8 <gconv@@Base+0x9c8>  // b.any
     ff4:	cmp	x6, #0x5
     ff8:	b.eq	11b4 <gconv@@Base+0x8d4>  // b.none
     ffc:	b	10c0 <gconv@@Base+0x7e0>
    1000:	ldr	x28, [sp, #216]
    1004:	b	b6c <gconv@@Base+0x28c>
    1008:	ldr	x1, [x3]
    100c:	add	x0, x0, #0x1
    1010:	mov	x2, x0
    1014:	mov	w11, #0x6                   	// #6
    1018:	add	x1, x1, #0x1
    101c:	str	x1, [x3]
    1020:	b	bc8 <gconv@@Base+0x2e8>
    1024:	mov	x0, x1
    1028:	str	x1, [sp, #208]
    102c:	b	aa4 <gconv@@Base+0x1c4>
    1030:	mov	x2, x21
    1034:	mov	x28, x24
    1038:	mov	w11, #0x5                   	// #5
    103c:	str	x2, [x23]
    1040:	b	be4 <gconv@@Base+0x304>
    1044:	cbnz	x8, 1530 <gconv@@Base+0xc50>
    1048:	ldr	x0, [x20, #32]
    104c:	mov	w24, #0x0                   	// #0
    1050:	str	xzr, [x0]
    1054:	ldr	w0, [x20, #16]
    1058:	tbnz	w0, #0, bf8 <gconv@@Base+0x318>
    105c:	mov	x0, x25
    1060:	str	w6, [sp, #96]
    1064:	bl	740 <_dl_mcount_wrapper_check@plt>
    1068:	ldp	x0, x1, [sp, #144]
    106c:	mov	x5, x26
    1070:	ldr	w6, [sp, #96]
    1074:	mov	x4, #0x0                   	// #0
    1078:	ldr	w7, [sp, #168]
    107c:	mov	x3, #0x0                   	// #0
    1080:	mov	x2, #0x0                   	// #0
    1084:	blr	x25
    1088:	mov	w24, w0
    108c:	b	bf8 <gconv@@Base+0x318>
    1090:	mov	x27, x23
    1094:	mov	w24, w7
    1098:	b	cfc <gconv@@Base+0x41c>
    109c:	cbz	x22, 1298 <gconv@@Base+0x9b8>
    10a0:	ldr	w0, [x24, #16]
    10a4:	tbnz	w0, #3, 1130 <gconv@@Base+0x850>
    10a8:	ldr	x21, [sp, #208]
    10ac:	tbnz	w28, #1, 1114 <gconv@@Base+0x834>
    10b0:	ldr	x0, [sp, #200]
    10b4:	str	x21, [x25]
    10b8:	cmp	x0, x5
    10bc:	b.ne	12a8 <gconv@@Base+0x9c8>  // b.any
    10c0:	adrp	x3, 1000 <gconv@@Base+0x720>
    10c4:	adrp	x1, 1000 <gconv@@Base+0x720>
    10c8:	adrp	x0, 1000 <gconv@@Base+0x720>
    10cc:	add	x3, x3, #0x7e8
    10d0:	add	x1, x1, #0x670
    10d4:	add	x0, x0, #0x7a0
    10d8:	mov	w2, #0x2eb                 	// #747
    10dc:	bl	750 <__assert_fail@plt>
    10e0:	mov	x0, x19
    10e4:	mov	w11, #0x4                   	// #4
    10e8:	b	ab0 <gconv@@Base+0x1d0>
    10ec:	ldr	x0, [sp, #120]
    10f0:	sub	x11, x28, x11
    10f4:	ldr	x1, [x23]
    10f8:	ldr	x0, [x0, #96]
    10fc:	cbz	x0, 141c <gconv@@Base+0xb3c>
    1100:	ldr	x0, [sp, #120]
    1104:	sub	x11, x1, x11, lsl #2
    1108:	str	x11, [x23]
    110c:	ldr	x0, [x0, #96]
    1110:	b	b38 <gconv@@Base+0x258>
    1114:	ldr	x0, [x22]
    1118:	add	x21, x21, #0x4
    111c:	mov	x6, #0x6                   	// #6
    1120:	str	x21, [sp, #208]
    1124:	add	x0, x0, #0x1
    1128:	str	x0, [x22]
    112c:	b	fc0 <gconv@@Base+0x6e0>
    1130:	ldr	x2, [x25]
    1134:	mov	x6, x22
    1138:	ldr	x0, [sp, #120]
    113c:	mov	x4, x19
    1140:	ldr	x5, [sp, #160]
    1144:	mov	x1, x24
    1148:	str	x3, [sp, #96]
    114c:	str	w7, [sp, #104]
    1150:	str	x10, [sp, #112]
    1154:	stp	x11, x14, [sp, #176]
    1158:	bl	700 <__gconv_transliterate@plt>
    115c:	sxtw	x6, w0
    1160:	ldr	w7, [sp, #104]
    1164:	cmp	w6, #0x6
    1168:	adrp	x18, 1000 <gconv@@Base+0x720>
    116c:	ldr	x3, [sp, #96]
    1170:	ldr	x10, [sp, #112]
    1174:	ldp	x11, x14, [sp, #176]
    1178:	b.eq	1528 <gconv@@Base+0xc48>  // b.none
    117c:	cmp	w6, #0x5
    1180:	ldp	x21, x5, [sp, #208]
    1184:	b.ne	fc0 <gconv@@Base+0x6e0>  // b.any
    1188:	mov	x15, x23
    118c:	mov	x23, x25
    1190:	ldr	x0, [sp, #200]
    1194:	mov	x20, x24
    1198:	str	x21, [x23]
    119c:	mov	x24, x26
    11a0:	mov	x22, x11
    11a4:	mov	x26, x10
    11a8:	mov	x25, x27
    11ac:	cmp	x0, x5
    11b0:	b.ne	12a8 <gconv@@Base+0x9c8>  // b.any
    11b4:	ldr	x0, [sp, #120]
    11b8:	cmp	x5, x24
    11bc:	ldr	x0, [x0, #96]
    11c0:	b.ne	b38 <gconv@@Base+0x258>  // b.any
    11c4:	ldr	w1, [x20, #20]
    11c8:	sub	w1, w1, #0x1
    11cc:	str	w1, [x20, #20]
    11d0:	b	b38 <gconv@@Base+0x258>
    11d4:	ldr	x0, [x27]
    11d8:	sub	x1, x19, x0
    11dc:	cmp	x1, #0x3
    11e0:	b.gt	155c <gconv@@Base+0xc7c>
    11e4:	ldr	x2, [x20, #32]
    11e8:	cmp	x0, x19
    11ec:	add	x0, x0, #0x1
    11f0:	add	x3, x2, #0x4
    11f4:	b.cs	1554 <gconv@@Base+0xc74>  // b.hs, b.nlast
    11f8:	str	x0, [x27]
    11fc:	cmp	x19, x0
    1200:	add	x0, x0, #0x1
    1204:	ldurb	w4, [x0, #-2]
    1208:	strb	w4, [x3], #1
    120c:	b.ne	11f8 <gconv@@Base+0x918>  // b.any
    1210:	ldr	w0, [x2]
    1214:	ldp	x21, x22, [sp, #32]
    1218:	and	w0, w0, #0xfffffff8
    121c:	orr	w0, w0, w1
    1220:	str	w0, [x2]
    1224:	b	bf8 <gconv@@Base+0x318>
    1228:	cmp	x19, x21
    122c:	b.eq	151c <gconv@@Base+0xc3c>  // b.none
    1230:	add	x1, x24, #0x4
    1234:	cmp	x11, x1
    1238:	b.cc	1434 <gconv@@Base+0xb54>  // b.lo, b.ul, b.last
    123c:	ldr	x8, [sp, #136]
    1240:	and	w28, w28, #0x2
    1244:	mov	x5, x24
    1248:	mov	x2, x21
    124c:	mov	x6, #0x4                   	// #4
    1250:	ldrb	w4, [x2]
    1254:	mov	x0, x2
    1258:	ldr	w3, [x14, w4, sxtw #2]
    125c:	cmp	w3, #0x0
    1260:	ccmp	w4, #0x0, #0x4, eq  // eq = none
    1264:	b.ne	13f8 <gconv@@Base+0xb18>  // b.any
    1268:	add	x2, x2, #0x1
    126c:	str	w3, [x5]
    1270:	mov	x0, x2
    1274:	mov	x5, x1
    1278:	cmp	x19, x2
    127c:	b.eq	1290 <gconv@@Base+0x9b0>  // b.none
    1280:	add	x1, x5, #0x4
    1284:	cmp	x11, x1
    1288:	b.cs	1250 <gconv@@Base+0x970>  // b.hs, b.nlast
    128c:	mov	x6, #0x5                   	// #5
    1290:	str	x0, [x23]
    1294:	b	fec <gconv@@Base+0x70c>
    1298:	ldp	x0, x1, [sp, #200]
    129c:	str	x1, [x25]
    12a0:	cmp	x0, x5
    12a4:	b.eq	10c0 <gconv@@Base+0x7e0>  // b.none
    12a8:	adrp	x3, 1000 <gconv@@Base+0x720>
    12ac:	adrp	x1, 1000 <gconv@@Base+0x720>
    12b0:	adrp	x0, 1000 <gconv@@Base+0x720>
    12b4:	add	x3, x3, #0x7e8
    12b8:	add	x1, x1, #0x670
    12bc:	add	x0, x0, #0x788
    12c0:	mov	w2, #0x2ea                 	// #746
    12c4:	bl	750 <__assert_fail@plt>
    12c8:	mov	x2, x19
    12cc:	mov	x28, x24
    12d0:	mov	w11, #0x4                   	// #4
    12d4:	str	x2, [x23]
    12d8:	b	be4 <gconv@@Base+0x304>
    12dc:	mov	w11, #0x6                   	// #6
    12e0:	ldr	x0, [sp, #208]
    12e4:	b	ab0 <gconv@@Base+0x1d0>
    12e8:	mov	w1, #0x1c00                	// #7168
    12ec:	cmp	w1, w9, lsr #7
    12f0:	b.ne	109c <gconv@@Base+0x7bc>  // b.any
    12f4:	mov	x21, x0
    12f8:	str	x0, [sp, #208]
    12fc:	b	fc0 <gconv@@Base+0x6e0>
    1300:	ldp	x0, x1, [sp, #200]
    1304:	mov	x15, x23
    1308:	mov	x23, x25
    130c:	mov	x20, x24
    1310:	mov	x22, x11
    1314:	mov	x24, x26
    1318:	mov	x25, x27
    131c:	mov	x26, x10
    1320:	str	x1, [x23]
    1324:	cmp	x0, x5
    1328:	b.eq	11b4 <gconv@@Base+0x8d4>  // b.none
    132c:	b	12a8 <gconv@@Base+0x9c8>
    1330:	mov	w24, #0x5                   	// #5
    1334:	ldp	x21, x22, [sp, #32]
    1338:	b	bf8 <gconv@@Base+0x318>
    133c:	mov	x0, #0x4                   	// #4
    1340:	mov	x7, #0x0                   	// #0
    1344:	b	da0 <gconv@@Base+0x4c0>
    1348:	cbnz	w24, d10 <gconv@@Base+0x430>
    134c:	ldr	w13, [x20, #16]
    1350:	ldr	x21, [x27]
    1354:	ldr	x0, [x9, #96]
    1358:	ldr	x10, [sp, #192]
    135c:	b	9b0 <gconv@@Base+0xd0>
    1360:	ldr	x0, [sp, #136]
    1364:	cbz	x0, 1394 <gconv@@Base+0xab4>
    1368:	tbnz	w13, #3, 144c <gconv@@Base+0xb6c>
    136c:	tbz	w13, #1, 1394 <gconv@@Base+0xab4>
    1370:	mov	x0, x10
    1374:	ldr	x2, [sp, #136]
    1378:	add	x0, x0, #0x4
    137c:	str	x0, [sp, #208]
    1380:	ldr	x1, [x2]
    1384:	add	x1, x1, #0x1
    1388:	str	x1, [x2]
    138c:	cmp	x0, x10
    1390:	b.ne	e78 <gconv@@Base+0x598>  // b.any
    1394:	mov	w24, #0x6                   	// #6
    1398:	ldp	x21, x22, [sp, #32]
    139c:	b	bf8 <gconv@@Base+0x318>
    13a0:	mov	w0, #0x1c00                	// #7168
    13a4:	cmp	w0, w5, lsr #7
    13a8:	b.ne	1360 <gconv@@Base+0xa80>  // b.any
    13ac:	add	x0, x10, #0x4
    13b0:	mov	x10, #0x4                   	// #4
    13b4:	str	x0, [sp, #208]
    13b8:	b	e84 <gconv@@Base+0x5a4>
    13bc:	str	x19, [x27]
    13c0:	cmp	x21, x19
    13c4:	b.cs	13ec <gconv@@Base+0xb0c>  // b.hs, b.nlast
    13c8:	add	x21, x21, #0x1
    13cc:	add	x7, x14, x7
    13d0:	str	x21, [sp, #208]
    13d4:	cmp	x19, x21
    13d8:	add	x7, x7, #0x1
    13dc:	add	x21, x21, #0x1
    13e0:	ldurb	w0, [x21, #-2]
    13e4:	strb	w0, [x7, #3]
    13e8:	b.ne	13d0 <gconv@@Base+0xaf0>  // b.any
    13ec:	mov	w24, #0x7                   	// #7
    13f0:	ldp	x21, x22, [sp, #32]
    13f4:	b	bf8 <gconv@@Base+0x318>
    13f8:	cbz	x8, 1440 <gconv@@Base+0xb60>
    13fc:	cbz	w28, 1440 <gconv@@Base+0xb60>
    1400:	ldr	x1, [x8]
    1404:	add	x2, x2, #0x1
    1408:	mov	x0, x2
    140c:	mov	x6, #0x6                   	// #6
    1410:	add	x1, x1, #0x1
    1414:	str	x1, [x8]
    1418:	b	1278 <gconv@@Base+0x998>
    141c:	add	x0, x11, #0x3
    1420:	cmp	x11, #0x0
    1424:	csel	x11, x0, x11, lt  // lt = tstop
    1428:	sub	x0, x1, x11, asr #2
    142c:	str	x0, [x23]
    1430:	b	b30 <gconv@@Base+0x250>
    1434:	cmp	x11, x24
    1438:	b.eq	11c4 <gconv@@Base+0x8e4>  // b.none
    143c:	b	12a8 <gconv@@Base+0x9c8>
    1440:	mov	x6, #0x6                   	// #6
    1444:	str	x0, [x23]
    1448:	b	fec <gconv@@Base+0x70c>
    144c:	add	x28, x10, x7
    1450:	mov	x6, x0
    1454:	mov	x2, x21
    1458:	mov	x0, x9
    145c:	mov	x4, x28
    1460:	add	x5, sp, #0xd8
    1464:	add	x3, sp, #0xd0
    1468:	mov	x1, x20
    146c:	stp	x9, x10, [sp, #96]
    1470:	stp	x7, x14, [sp, #112]
    1474:	str	w13, [sp, #128]
    1478:	str	x8, [sp, #160]
    147c:	bl	700 <__gconv_transliterate@plt>
    1480:	ldr	w13, [sp, #128]
    1484:	mov	w24, w0
    1488:	cmp	w0, #0x6
    148c:	ldp	x9, x10, [sp, #96]
    1490:	ldr	x14, [sp, #120]
    1494:	ldr	x8, [sp, #160]
    1498:	ldr	x0, [sp, #208]
    149c:	b.eq	157c <gconv@@Base+0xc9c>  // b.none
    14a0:	cmp	x0, x10
    14a4:	ldr	x7, [sp, #112]
    14a8:	b.ne	e78 <gconv@@Base+0x598>  // b.any
    14ac:	cmp	w24, #0x7
    14b0:	b.ne	1348 <gconv@@Base+0xa68>  // b.any
    14b4:	add	x0, x10, #0x4
    14b8:	cmp	x28, x0
    14bc:	b.eq	15c4 <gconv@@Base+0xce4>  // b.none
    14c0:	ldr	w0, [x14]
    14c4:	ldr	x1, [x27]
    14c8:	and	x2, x0, #0x7
    14cc:	sub	x2, x7, x2
    14d0:	and	w0, w0, #0xfffffff8
    14d4:	add	x1, x1, x2
    14d8:	str	x1, [x27]
    14dc:	cmp	x7, w0, sxtw
    14e0:	b.le	15a4 <gconv@@Base+0xcc4>
    14e4:	cmp	x7, #0x4
    14e8:	b.hi	1584 <gconv@@Base+0xca4>  // b.pmore
    14ec:	orr	w0, w0, w7
    14f0:	str	w0, [x14]
    14f4:	cmp	x28, x10
    14f8:	b.ls	13ec <gconv@@Base+0xb0c>  // b.plast
    14fc:	add	x14, x14, #0x4
    1500:	add	x10, x10, #0x1
    1504:	str	x10, [sp, #208]
    1508:	cmp	x28, x10
    150c:	ldurb	w0, [x10, #-1]
    1510:	strb	w0, [x14], #1
    1514:	b.ne	1500 <gconv@@Base+0xc20>  // b.any
    1518:	b	13ec <gconv@@Base+0xb0c>
    151c:	cmp	x11, x24
    1520:	b.eq	10c0 <gconv@@Base+0x7e0>  // b.none
    1524:	b	12a8 <gconv@@Base+0x9c8>
    1528:	ldr	x5, [sp, #216]
    152c:	b	10a8 <gconv@@Base+0x7c8>
    1530:	adrp	x3, 1000 <gconv@@Base+0x720>
    1534:	adrp	x1, 1000 <gconv@@Base+0x720>
    1538:	adrp	x0, 1000 <gconv@@Base+0x720>
    153c:	add	x3, x3, #0x7e8
    1540:	add	x1, x1, #0x670
    1544:	add	x0, x0, #0x688
    1548:	mov	w2, #0x1a4                 	// #420
    154c:	stp	x21, x22, [sp, #32]
    1550:	bl	750 <__assert_fail@plt>
    1554:	mov	w1, #0x0                   	// #0
    1558:	b	1210 <gconv@@Base+0x930>
    155c:	adrp	x3, 1000 <gconv@@Base+0x720>
    1560:	adrp	x1, 1000 <gconv@@Base+0x720>
    1564:	adrp	x0, 1000 <gconv@@Base+0x720>
    1568:	add	x3, x3, #0x7e8
    156c:	add	x1, x1, #0x670
    1570:	add	x0, x0, #0x7c0
    1574:	mov	w2, #0x31e                 	// #798
    1578:	bl	750 <__assert_fail@plt>
    157c:	tbz	w13, #1, 138c <gconv@@Base+0xaac>
    1580:	b	1374 <gconv@@Base+0xa94>
    1584:	adrp	x3, 1000 <gconv@@Base+0x720>
    1588:	adrp	x1, 1000 <gconv@@Base+0x720>
    158c:	adrp	x0, 1000 <gconv@@Base+0x720>
    1590:	add	x3, x3, #0x7d8
    1594:	add	x1, x1, #0x6a0
    1598:	add	x0, x0, #0x758
    159c:	mov	w2, #0x1e6                 	// #486
    15a0:	bl	750 <__assert_fail@plt>
    15a4:	adrp	x3, 1000 <gconv@@Base+0x720>
    15a8:	adrp	x1, 1000 <gconv@@Base+0x720>
    15ac:	adrp	x0, 1000 <gconv@@Base+0x720>
    15b0:	add	x3, x3, #0x7d8
    15b4:	add	x1, x1, #0x6a0
    15b8:	add	x0, x0, #0x730
    15bc:	mov	w2, #0x1e5                 	// #485
    15c0:	bl	750 <__assert_fail@plt>
    15c4:	adrp	x3, 1000 <gconv@@Base+0x720>
    15c8:	adrp	x1, 1000 <gconv@@Base+0x720>
    15cc:	adrp	x0, 1000 <gconv@@Base+0x720>
    15d0:	add	x3, x3, #0x7d8
    15d4:	add	x1, x1, #0x6a0
    15d8:	add	x0, x0, #0x708
    15dc:	mov	w2, #0x1db                 	// #475
    15e0:	bl	750 <__assert_fail@plt>
    15e4:	adrp	x3, 1000 <gconv@@Base+0x720>
    15e8:	adrp	x1, 1000 <gconv@@Base+0x720>
    15ec:	adrp	x0, 1000 <gconv@@Base+0x720>
    15f0:	add	x3, x3, #0x7e8
    15f4:	add	x1, x1, #0x670
    15f8:	add	x0, x0, #0x688
    15fc:	mov	w2, #0x234                 	// #564
    1600:	bl	750 <__assert_fail@plt>
    1604:	stp	x21, x22, [sp, #32]
    1608:	bl	710 <__stack_chk_fail@plt>
    160c:	adrp	x3, 1000 <gconv@@Base+0x720>
    1610:	adrp	x1, 1000 <gconv@@Base+0x720>
    1614:	adrp	x0, 1000 <gconv@@Base+0x720>
    1618:	add	x3, x3, #0x7d8
    161c:	add	x1, x1, #0x6a0
    1620:	add	x0, x0, #0x6b0
    1624:	mov	w2, #0x18b                 	// #395
    1628:	bl	750 <__assert_fail@plt>
    162c:	adrp	x3, 1000 <gconv@@Base+0x720>
    1630:	adrp	x1, 1000 <gconv@@Base+0x720>
    1634:	adrp	x0, 1000 <gconv@@Base+0x720>
    1638:	add	x3, x3, #0x7d8
    163c:	add	x1, x1, #0x6a0
    1640:	add	x0, x0, #0x6e0
    1644:	mov	w2, #0x1c9                 	// #457
    1648:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

000000000000164c <.fini>:
    164c:	stp	x29, x30, [sp, #-16]!
    1650:	mov	x29, sp
    1654:	ldp	x29, x30, [sp], #16
    1658:	ret
