In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCDisassembler.a_clang_-O3:

Disassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMCreateDisasmCPUFeatures>:
       0:	sub	sp, sp, #0x1d0
       4:	stp	x29, x30, [sp, #368]
       8:	stp	x28, x27, [sp, #384]
       c:	stp	x26, x25, [sp, #400]
      10:	stp	x24, x23, [sp, #416]
      14:	stp	x22, x21, [sp, #432]
      18:	stp	x20, x19, [sp, #448]
      1c:	add	x29, sp, #0x170
      20:	sub	x8, x29, #0x88
      24:	add	x9, sp, #0x88
      28:	add	x23, x8, #0x10
      2c:	add	x28, x9, #0x10
      30:	sturb	wzr, [x29, #-120]
      34:	stp	x23, xzr, [x29, #-136]
      38:	str	x28, [sp, #136]
      3c:	cbz	x0, 7b4 <LLVMCreateDisasmCPUFeatures+0x7b4>
      40:	mov	x25, x6
      44:	mov	x24, x5
      48:	mov	w20, w4
      4c:	mov	x26, x3
      50:	mov	x22, x2
      54:	mov	x21, x1
      58:	mov	x27, x0
      5c:	bl	0 <strlen>
      60:	mov	x19, x0
      64:	cmp	x0, #0x10
      68:	stur	x0, [x29, #-80]
      6c:	b.cc	94 <LLVMCreateDisasmCPUFeatures+0x94>  // b.lo, b.ul, b.last
      70:	add	x0, sp, #0x88
      74:	sub	x1, x29, #0x50
      78:	mov	x2, xzr
      7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
      80:	ldur	x8, [x29, #-80]
      84:	str	x0, [sp, #136]
      88:	str	x8, [sp, #152]
      8c:	cbnz	x19, 9c <LLVMCreateDisasmCPUFeatures+0x9c>
      90:	b	bc <LLVMCreateDisasmCPUFeatures+0xbc>
      94:	mov	x0, x28
      98:	cbz	x19, bc <LLVMCreateDisasmCPUFeatures+0xbc>
      9c:	cmp	x19, #0x1
      a0:	b.ne	b0 <LLVMCreateDisasmCPUFeatures+0xb0>  // b.any
      a4:	ldrb	w8, [x27]
      a8:	strb	w8, [x0]
      ac:	b	bc <LLVMCreateDisasmCPUFeatures+0xbc>
      b0:	mov	x1, x27
      b4:	mov	x2, x19
      b8:	bl	0 <memcpy>
      bc:	ldur	x8, [x29, #-80]
      c0:	ldr	x9, [sp, #136]
      c4:	add	x0, sp, #0x88
      c8:	sub	x1, x29, #0x88
      cc:	str	x8, [sp, #144]
      d0:	strb	wzr, [x9, x8]
      d4:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
      d8:	ldr	x8, [sp, #136]
      dc:	cmp	x8, x28
      e0:	mov	x28, x0
      e4:	b.eq	f0 <LLVMCreateDisasmCPUFeatures+0xf0>  // b.none
      e8:	mov	x0, x8
      ec:	bl	0 <_ZdlPv>
      f0:	cbz	x28, 1f8 <LLVMCreateDisasmCPUFeatures+0x1f8>
      f4:	mov	x0, x27
      f8:	bl	0 <strlen>
      fc:	stp	x27, x0, [x29, #-104]
     100:	ldr	x19, [x28, #72]
     104:	cbz	x19, 1f8 <LLVMCreateDisasmCPUFeatures+0x1f8>
     108:	mov	w8, #0x105                 	// #261
     10c:	sub	x9, x29, #0x68
     110:	add	x0, sp, #0x88
     114:	sub	x1, x29, #0x50
     118:	str	w20, [sp, #84]
     11c:	sturh	w8, [x29, #-64]
     120:	stp	x9, xzr, [x29, #-80]
     124:	add	x20, sp, #0x88
     128:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     12c:	add	x0, sp, #0x88
     130:	blr	x19
     134:	ldr	x8, [sp, #136]
     138:	add	x9, x20, #0x10
     13c:	mov	x19, x0
     140:	cmp	x8, x9
     144:	b.eq	150 <LLVMCreateDisasmCPUFeatures+0x150>  // b.none
     148:	mov	x0, x8
     14c:	bl	0 <_ZdlPv>
     150:	cbz	x19, 1f8 <LLVMCreateDisasmCPUFeatures+0x1f8>
     154:	add	x0, sp, #0x88
     158:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     15c:	mov	x0, x27
     160:	bl	0 <strlen>
     164:	stp	x27, x0, [x29, #-24]
     168:	ldr	x20, [x28, #48]
     16c:	cbz	x20, 238 <LLVMCreateDisasmCPUFeatures+0x238>
     170:	mov	w8, #0x105                 	// #261
     174:	sub	x9, x29, #0x18
     178:	sub	x0, x29, #0x50
     17c:	sub	x1, x29, #0x68
     180:	str	x25, [sp, #72]
     184:	sturh	w8, [x29, #-88]
     188:	stp	x9, xzr, [x29, #-104]
     18c:	sub	x25, x29, #0x50
     190:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     194:	sub	x1, x29, #0x50
     198:	add	x2, sp, #0x88
     19c:	mov	x0, x19
     1a0:	blr	x20
     1a4:	ldur	x8, [x29, #-80]
     1a8:	add	x9, x25, #0x10
     1ac:	mov	x25, x0
     1b0:	cmp	x8, x9
     1b4:	b.eq	1c0 <LLVMCreateDisasmCPUFeatures+0x1c0>  // b.none
     1b8:	mov	x0, x8
     1bc:	bl	0 <_ZdlPv>
     1c0:	cbz	x25, 230 <LLVMCreateDisasmCPUFeatures+0x230>
     1c4:	ldr	x8, [x28, #56]
     1c8:	cbz	x8, 230 <LLVMCreateDisasmCPUFeatures+0x230>
     1cc:	blr	x8
     1d0:	mov	x20, x0
     1d4:	cbz	x0, 240 <LLVMCreateDisasmCPUFeatures+0x240>
     1d8:	mov	x0, x27
     1dc:	bl	0 <strlen>
     1e0:	str	x0, [sp, #56]
     1e4:	cbz	x21, 248 <LLVMCreateDisasmCPUFeatures+0x248>
     1e8:	mov	x0, x21
     1ec:	bl	0 <strlen>
     1f0:	str	x0, [sp, #48]
     1f4:	b	24c <LLVMCreateDisasmCPUFeatures+0x24c>
     1f8:	mov	x22, xzr
     1fc:	ldur	x0, [x29, #-136]
     200:	cmp	x0, x23
     204:	b.eq	20c <LLVMCreateDisasmCPUFeatures+0x20c>  // b.none
     208:	bl	0 <_ZdlPv>
     20c:	mov	x0, x22
     210:	ldp	x20, x19, [sp, #448]
     214:	ldp	x22, x21, [sp, #432]
     218:	ldp	x24, x23, [sp, #416]
     21c:	ldp	x26, x25, [sp, #400]
     220:	ldp	x28, x27, [sp, #384]
     224:	ldp	x29, x30, [sp, #368]
     228:	add	sp, sp, #0x1d0
     22c:	ret
     230:	mov	x22, xzr
     234:	b	704 <LLVMCreateDisasmCPUFeatures+0x704>
     238:	mov	x22, xzr
     23c:	b	718 <LLVMCreateDisasmCPUFeatures+0x718>
     240:	mov	x22, xzr
     244:	b	6f8 <LLVMCreateDisasmCPUFeatures+0x6f8>
     248:	str	xzr, [sp, #48]
     24c:	str	x20, [sp, #64]
     250:	cbz	x22, 260 <LLVMCreateDisasmCPUFeatures+0x260>
     254:	mov	x0, x22
     258:	bl	0 <strlen>
     25c:	b	264 <LLVMCreateDisasmCPUFeatures+0x264>
     260:	mov	x0, xzr
     264:	ldr	x8, [sp, #56]
     268:	stp	x27, x8, [x29, #-24]
     26c:	ldr	x20, [x28, #80]
     270:	cbz	x20, 460 <LLVMCreateDisasmCPUFeatures+0x460>
     274:	str	x25, [sp, #40]
     278:	mov	w8, #0x105                 	// #261
     27c:	sub	x9, x29, #0x18
     280:	mov	x25, x0
     284:	sub	x0, x29, #0x50
     288:	sub	x1, x29, #0x68
     28c:	sturh	w8, [x29, #-88]
     290:	stp	x9, xzr, [x29, #-104]
     294:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     298:	ldr	x2, [sp, #48]
     29c:	sub	x0, x29, #0x50
     2a0:	mov	x1, x21
     2a4:	mov	x3, x22
     2a8:	mov	x4, x25
     2ac:	blr	x20
     2b0:	ldur	x8, [x29, #-80]
     2b4:	sub	x9, x29, #0x50
     2b8:	add	x9, x9, #0x10
     2bc:	mov	x22, x0
     2c0:	cmp	x8, x9
     2c4:	b.eq	2d0 <LLVMCreateDisasmCPUFeatures+0x2d0>  // b.none
     2c8:	mov	x0, x8
     2cc:	bl	0 <_ZdlPv>
     2d0:	ldr	x25, [sp, #40]
     2d4:	ldr	x20, [sp, #64]
     2d8:	str	x22, [sp, #56]
     2dc:	cbz	x22, 6e4 <LLVMCreateDisasmCPUFeatures+0x6e4>
     2e0:	mov	w0, #0x6b8                 	// #1720
     2e4:	bl	0 <_Znwm>
     2e8:	mov	w6, #0x1                   	// #1
     2ec:	mov	x1, x25
     2f0:	mov	x2, x19
     2f4:	mov	x3, xzr
     2f8:	mov	x4, xzr
     2fc:	mov	x5, xzr
     300:	str	x0, [sp, #48]
     304:	bl	0 <_ZN4llvm9MCContextC1EPKNS_9MCAsmInfoEPKNS_14MCRegisterInfoEPKNS_16MCObjectFileInfoEPKNS_9SourceMgrEPKNS_15MCTargetOptionsEb>
     308:	ldr	x8, [x28, #120]
     30c:	cbz	x8, 46c <LLVMCreateDisasmCPUFeatures+0x46c>
     310:	ldr	x2, [sp, #48]
     314:	mov	x0, x28
     318:	mov	x1, x22
     31c:	blr	x8
     320:	cbz	x0, 478 <LLVMCreateDisasmCPUFeatures+0x478>
     324:	str	x0, [sp, #32]
     328:	mov	x0, x27
     32c:	bl	0 <strlen>
     330:	stp	x27, x0, [x29, #-24]
     334:	adrp	x8, 0 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>
     338:	ldr	x8, [x8]
     33c:	ldr	x9, [x28, #200]
     340:	mov	w10, #0x105                 	// #261
     344:	sub	x11, x29, #0x18
     348:	sub	x0, x29, #0x50
     34c:	cmp	x9, #0x0
     350:	sub	x1, x29, #0x68
     354:	sturh	w10, [x29, #-88]
     358:	csel	x20, x8, x9, eq  // eq = none
     35c:	stp	x11, xzr, [x29, #-104]
     360:	sub	x22, x29, #0x50
     364:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     368:	ldr	x1, [sp, #48]
     36c:	sub	x0, x29, #0x50
     370:	blr	x20
     374:	ldur	x8, [x29, #-80]
     378:	add	x9, x22, #0x10
     37c:	mov	x22, x0
     380:	cmp	x8, x9
     384:	b.eq	390 <LLVMCreateDisasmCPUFeatures+0x390>  // b.none
     388:	mov	x0, x8
     38c:	bl	0 <_ZdlPv>
     390:	str	x22, [sp, #128]
     394:	cbz	x22, 484 <LLVMCreateDisasmCPUFeatures+0x484>
     398:	mov	x0, x27
     39c:	bl	0 <strlen>
     3a0:	stp	x27, x0, [x29, #-24]
     3a4:	adrp	x8, 0 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>
     3a8:	ldr	x8, [x8]
     3ac:	ldr	x9, [x28, #208]
     3b0:	mov	w10, #0x105                 	// #261
     3b4:	sub	x11, x29, #0x18
     3b8:	sub	x0, x29, #0x50
     3bc:	cmp	x9, #0x0
     3c0:	sub	x1, x29, #0x68
     3c4:	sturh	w10, [x29, #-88]
     3c8:	csel	x20, x8, x9, eq  // eq = none
     3cc:	stp	x11, xzr, [x29, #-104]
     3d0:	sub	x22, x29, #0x50
     3d4:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     3d8:	ldr	x2, [sp, #72]
     3dc:	ldr	x4, [sp, #48]
     3e0:	sub	x0, x29, #0x50
     3e4:	add	x5, sp, #0x80
     3e8:	mov	x1, x24
     3ec:	mov	x3, x26
     3f0:	blr	x20
     3f4:	ldur	x8, [x29, #-80]
     3f8:	add	x9, x22, #0x10
     3fc:	mov	x22, x0
     400:	cmp	x8, x9
     404:	b.eq	410 <LLVMCreateDisasmCPUFeatures+0x410>  // b.none
     408:	mov	x0, x8
     40c:	bl	0 <_ZdlPv>
     410:	ldr	x0, [sp, #32]
     414:	add	x1, sp, #0x78
     418:	str	x22, [sp, #120]
     41c:	bl	0 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>
     420:	ldr	x0, [sp, #120]
     424:	cbz	x0, 434 <LLVMCreateDisasmCPUFeatures+0x434>
     428:	ldr	x8, [x0]
     42c:	ldr	x8, [x8, #8]
     430:	blr	x8
     434:	str	xzr, [sp, #120]
     438:	mov	w8, #0x101                 	// #257
     43c:	ldr	w22, [x25, #168]
     440:	stp	xzr, xzr, [x29, #-104]
     444:	sturh	w8, [x29, #-88]
     448:	ldrb	w8, [x27]
     44c:	ldr	x20, [sp, #64]
     450:	cbz	w8, 490 <LLVMCreateDisasmCPUFeatures+0x490>
     454:	mov	w8, #0x3                   	// #3
     458:	stur	x27, [x29, #-104]
     45c:	b	494 <LLVMCreateDisasmCPUFeatures+0x494>
     460:	ldr	x20, [sp, #64]
     464:	mov	x22, xzr
     468:	b	6f8 <LLVMCreateDisasmCPUFeatures+0x6f8>
     46c:	ldr	x21, [sp, #48]
     470:	mov	x22, xzr
     474:	b	6d4 <LLVMCreateDisasmCPUFeatures+0x6d4>
     478:	ldr	x21, [sp, #48]
     47c:	mov	x22, xzr
     480:	b	6c0 <LLVMCreateDisasmCPUFeatures+0x6c0>
     484:	ldr	x20, [sp, #64]
     488:	ldr	x21, [sp, #48]
     48c:	b	6a8 <LLVMCreateDisasmCPUFeatures+0x6a8>
     490:	mov	w8, #0x1                   	// #1
     494:	sub	x0, x29, #0x50
     498:	sub	x1, x29, #0x68
     49c:	sturb	w8, [x29, #-88]
     4a0:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     4a4:	ldr	x8, [x28, #128]
     4a8:	cbz	x8, 4cc <LLVMCreateDisasmCPUFeatures+0x4cc>
     4ac:	sub	x0, x29, #0x50
     4b0:	mov	w1, w22
     4b4:	mov	x2, x25
     4b8:	mov	x3, x20
     4bc:	mov	x4, x19
     4c0:	blr	x8
     4c4:	mov	x22, x0
     4c8:	b	4d0 <LLVMCreateDisasmCPUFeatures+0x4d0>
     4cc:	mov	x22, xzr
     4d0:	ldur	x0, [x29, #-80]
     4d4:	sub	x8, x29, #0x50
     4d8:	add	x8, x8, #0x10
     4dc:	cmp	x0, x8
     4e0:	b.eq	4e8 <LLVMCreateDisasmCPUFeatures+0x4e8>  // b.none
     4e4:	bl	0 <_ZdlPv>
     4e8:	cbz	x22, 564 <LLVMCreateDisasmCPUFeatures+0x564>
     4ec:	mov	w0, #0x168                 	// #360
     4f0:	str	x22, [sp, #16]
     4f4:	bl	0 <_Znwm>
     4f8:	add	x8, sp, #0x58
     4fc:	mov	x22, x0
     500:	add	x8, x8, #0x10
     504:	mov	x0, x27
     508:	str	x8, [sp, #24]
     50c:	str	x8, [sp, #88]
     510:	bl	0 <strlen>
     514:	mov	x2, x0
     518:	cmp	x0, #0x10
     51c:	stur	x0, [x29, #-80]
     520:	ldr	x0, [sp, #24]
     524:	b.cc	54c <LLVMCreateDisasmCPUFeatures+0x54c>  // b.lo, b.ul, b.last
     528:	add	x0, sp, #0x58
     52c:	sub	x1, x29, #0x50
     530:	str	x2, [sp, #8]
     534:	mov	x2, xzr
     538:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     53c:	ldr	x2, [sp, #8]
     540:	ldur	x8, [x29, #-80]
     544:	str	x0, [sp, #88]
     548:	str	x8, [sp, #104]
     54c:	cbz	x2, 574 <LLVMCreateDisasmCPUFeatures+0x574>
     550:	cmp	x2, #0x1
     554:	b.ne	56c <LLVMCreateDisasmCPUFeatures+0x56c>  // b.any
     558:	ldrb	w8, [x27]
     55c:	strb	w8, [x0]
     560:	b	574 <LLVMCreateDisasmCPUFeatures+0x574>
     564:	ldr	x21, [sp, #48]
     568:	b	6a8 <LLVMCreateDisasmCPUFeatures+0x6a8>
     56c:	mov	x1, x27
     570:	bl	0 <memcpy>
     574:	ldur	x8, [x29, #-80]
     578:	ldr	x9, [sp, #88]
     57c:	ldr	x27, [sp, #24]
     580:	str	x8, [sp, #96]
     584:	strb	wzr, [x9, x8]
     588:	ldr	x8, [sp, #88]
     58c:	add	x9, x22, #0x10
     590:	str	x9, [x22]
     594:	cmp	x8, x27
     598:	b.eq	5ac <LLVMCreateDisasmCPUFeatures+0x5ac>  // b.none
     59c:	ldr	x9, [sp, #104]
     5a0:	str	x8, [x22]
     5a4:	str	x9, [x22, #16]
     5a8:	b	5b4 <LLVMCreateDisasmCPUFeatures+0x5b4>
     5ac:	ldr	q0, [x27]
     5b0:	str	q0, [x9]
     5b4:	ldr	x8, [sp, #96]
     5b8:	adrp	x9, 0 <LLVMCreateDisasmCPUFeatures>
     5bc:	ldr	d0, [x9]
     5c0:	add	x9, x22, #0xb8
     5c4:	str	x8, [x22, #8]
     5c8:	mov	x8, x22
     5cc:	str	x9, [x8, #168]!
     5d0:	stp	x27, xzr, [sp, #88]
     5d4:	strb	wzr, [sp, #104]
     5d8:	stur	x26, [x8, #-136]
     5dc:	adrp	x10, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     5e0:	ldr	x12, [sp, #48]
     5e4:	ldr	x13, [sp, #32]
     5e8:	ldr	x10, [x10]
     5ec:	ldr	w11, [sp, #84]
     5f0:	mov	w9, #0x1                   	// #1
     5f4:	stp	x28, x25, [x8, #-104]
     5f8:	add	x10, x10, #0x10
     5fc:	stur	w11, [x8, #-128]
     600:	ldr	x11, [sp, #72]
     604:	stp	x20, x12, [x8, #-72]
     608:	stur	xzr, [x8, #-40]
     60c:	add	x0, x8, #0x90
     610:	stp	x24, x11, [x8, #-120]
     614:	ldr	x11, [sp, #56]
     618:	mov	x1, xzr
     61c:	mov	x2, xzr
     620:	mov	w3, wzr
     624:	stp	x19, x11, [x8, #-88]
     628:	ldr	x11, [sp, #16]
     62c:	mov	x19, x8
     630:	stp	x13, x11, [x8, #-56]
     634:	mov	x11, x8
     638:	strb	wzr, [x11, #-16]!
     63c:	str	x11, [x19, #-32]!
     640:	stur	xzr, [x8, #-24]
     644:	str	d0, [x8, #8]
     648:	str	w9, [x8, #176]
     64c:	stp	xzr, xzr, [x8, #160]
     650:	stp	x10, xzr, [x8, #144]
     654:	str	x8, [x8, #184]
     658:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     65c:	ldr	x0, [sp, #88]
     660:	cmp	x0, x27
     664:	b.eq	66c <LLVMCreateDisasmCPUFeatures+0x66c>  // b.none
     668:	bl	0 <_ZdlPv>
     66c:	ldr	x20, [x22, #144]
     670:	mov	x0, x21
     674:	bl	0 <strlen>
     678:	mov	x4, x0
     67c:	mov	x0, x19
     680:	mov	x1, xzr
     684:	mov	x2, x20
     688:	mov	x3, x21
     68c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     690:	mov	x21, xzr
     694:	mov	x20, xzr
     698:	mov	x25, xzr
     69c:	mov	x19, xzr
     6a0:	str	xzr, [sp, #32]
     6a4:	str	xzr, [sp, #56]
     6a8:	ldr	x0, [sp, #128]
     6ac:	cbz	x0, 6bc <LLVMCreateDisasmCPUFeatures+0x6bc>
     6b0:	ldr	x8, [x0]
     6b4:	ldr	x8, [x8, #8]
     6b8:	blr	x8
     6bc:	ldr	x0, [sp, #32]
     6c0:	cbz	x0, 6d0 <LLVMCreateDisasmCPUFeatures+0x6d0>
     6c4:	ldr	x8, [x0]
     6c8:	ldr	x8, [x8, #8]
     6cc:	blr	x8
     6d0:	cbz	x21, 6e4 <LLVMCreateDisasmCPUFeatures+0x6e4>
     6d4:	mov	x0, x21
     6d8:	bl	0 <_ZN4llvm9MCContextD1Ev>
     6dc:	mov	x0, x21
     6e0:	bl	0 <_ZdlPv>
     6e4:	ldr	x0, [sp, #56]
     6e8:	cbz	x0, 6f8 <LLVMCreateDisasmCPUFeatures+0x6f8>
     6ec:	ldr	x8, [x0]
     6f0:	ldr	x8, [x8, #8]
     6f4:	blr	x8
     6f8:	cbz	x20, 704 <LLVMCreateDisasmCPUFeatures+0x704>
     6fc:	mov	x0, x20
     700:	bl	0 <_ZdlPv>
     704:	cbz	x25, 718 <LLVMCreateDisasmCPUFeatures+0x718>
     708:	ldr	x8, [x25]
     70c:	mov	x0, x25
     710:	ldr	x8, [x8, #8]
     714:	blr	x8
     718:	ldp	x20, x21, [sp, #208]
     71c:	cmp	x20, x21
     720:	b.ne	794 <LLVMCreateDisasmCPUFeatures+0x794>  // b.any
     724:	cbz	x20, 730 <LLVMCreateDisasmCPUFeatures+0x730>
     728:	mov	x0, x20
     72c:	bl	0 <_ZdlPv>
     730:	ldr	x0, [sp, #176]
     734:	add	x20, sp, #0x88
     738:	add	x8, x20, #0x38
     73c:	cmp	x0, x8
     740:	b.eq	748 <LLVMCreateDisasmCPUFeatures+0x748>  // b.none
     744:	bl	0 <_ZdlPv>
     748:	ldr	x0, [sp, #144]
     74c:	add	x8, x20, #0x18
     750:	cmp	x0, x8
     754:	b.eq	75c <LLVMCreateDisasmCPUFeatures+0x75c>  // b.none
     758:	bl	0 <_ZdlPv>
     75c:	cbz	x19, 1fc <LLVMCreateDisasmCPUFeatures+0x1fc>
     760:	ldr	x0, [x19, #200]
     764:	bl	0 <_ZdlPv>
     768:	ldr	x8, [x19, #192]
     76c:	ldr	x0, [x19, #168]
     770:	add	x8, x8, #0x1
     774:	str	x8, [x19, #192]
     778:	bl	0 <_ZdlPv>
     77c:	mov	x0, x19
     780:	bl	0 <_ZdlPv>
     784:	b	1fc <LLVMCreateDisasmCPUFeatures+0x1fc>
     788:	add	x20, x20, #0x10
     78c:	cmp	x20, x21
     790:	b.eq	7a8 <LLVMCreateDisasmCPUFeatures+0x7a8>  // b.none
     794:	ldr	x0, [x20], #16
     798:	cmp	x0, x20
     79c:	b.eq	788 <LLVMCreateDisasmCPUFeatures+0x788>  // b.none
     7a0:	bl	0 <_ZdlPv>
     7a4:	b	788 <LLVMCreateDisasmCPUFeatures+0x788>
     7a8:	ldr	x20, [sp, #208]
     7ac:	cbnz	x20, 728 <LLVMCreateDisasmCPUFeatures+0x728>
     7b0:	b	730 <LLVMCreateDisasmCPUFeatures+0x730>
     7b4:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
     7b8:	add	x0, x0, #0x0
     7bc:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000007c0 <LLVMCreateDisasmCPU>:
     7c0:	mov	x6, x5
     7c4:	mov	x5, x4
     7c8:	mov	w4, w3
     7cc:	mov	x3, x2
     7d0:	adrp	x2, 0 <LLVMCreateDisasmCPUFeatures>
     7d4:	add	x2, x2, #0x0
     7d8:	b	0 <LLVMCreateDisasmCPUFeatures>

00000000000007dc <LLVMCreateDisasm>:
     7dc:	mov	x5, x3
     7e0:	mov	x3, x1
     7e4:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     7e8:	add	x1, x1, #0x0
     7ec:	mov	x6, x4
     7f0:	mov	w4, w2
     7f4:	mov	x2, x1
     7f8:	b	0 <LLVMCreateDisasmCPUFeatures>

00000000000007fc <LLVMDisasmDispose>:
     7fc:	cbz	x0, 824 <LLVMDisasmDispose+0x28>
     800:	stp	x29, x30, [sp, #-32]!
     804:	str	x19, [sp, #16]
     808:	mov	x29, sp
     80c:	mov	x19, x0
     810:	bl	0 <LLVMCreateDisasmCPUFeatures>
     814:	mov	x0, x19
     818:	ldr	x19, [sp, #16]
     81c:	ldp	x29, x30, [sp], #32
     820:	b	0 <_ZdlPv>
     824:	ret

0000000000000828 <LLVMDisasmInstruction>:
     828:	str	d8, [sp, #-112]!
     82c:	stp	x29, x30, [sp, #16]
     830:	stp	x28, x27, [sp, #32]
     834:	stp	x26, x25, [sp, #48]
     838:	stp	x24, x23, [sp, #64]
     83c:	stp	x22, x21, [sp, #80]
     840:	stp	x20, x19, [sp, #96]
     844:	mov	x29, sp
     848:	sub	sp, sp, #0x270
     84c:	adrp	x8, 0 <LLVMCreateDisasmCPUFeatures>
     850:	ldr	d0, [x8]
     854:	str	x5, [sp, #24]
     858:	add	x20, sp, #0x160
     85c:	stp	xzr, xzr, [sp, #352]
     860:	adrp	x21, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     864:	adrp	x10, 0 <LLVMCreateDisasmCPUFeatures>
     868:	ldr	x21, [x21]
     86c:	add	x8, x20, #0x20
     870:	str	d0, [sp, #376]
     874:	ldr	d8, [x10]
     878:	str	x8, [sp, #368]
     87c:	ldp	x26, x19, [x0, #112]
     880:	add	x9, sp, #0x110
     884:	mov	x22, x3
     888:	mov	x24, x2
     88c:	mov	x25, x1
     890:	mov	x28, x0
     894:	mov	w11, #0x1                   	// #1
     898:	add	x23, x9, #0x10
     89c:	add	x8, x21, #0x10
     8a0:	add	x0, sp, #0xe0
     8a4:	mov	x1, xzr
     8a8:	mov	x2, xzr
     8ac:	mov	w3, wzr
     8b0:	mov	x27, x4
     8b4:	stp	x9, x23, [sp, #264]
     8b8:	str	d8, [sp, #280]
     8bc:	str	w11, [sp, #256]
     8c0:	stp	xzr, xzr, [sp, #240]
     8c4:	stp	x8, xzr, [sp, #224]
     8c8:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     8cc:	ldr	x8, [x26]
     8d0:	add	x1, sp, #0x160
     8d4:	add	x2, x29, #0x8
     8d8:	add	x6, sp, #0xe0
     8dc:	ldr	x8, [x8, #16]
     8e0:	mov	x0, x26
     8e4:	mov	x3, x25
     8e8:	mov	x4, x24
     8ec:	mov	x5, x22
     8f0:	blr	x8
     8f4:	cmp	w0, #0x2
     8f8:	mov	x24, xzr
     8fc:	b.cc	1074 <LLVMDisasmInstruction+0x84c>  // b.lo, b.ul, b.last
     900:	mov	x11, x21
     904:	ldr	x21, [sp, #24]
     908:	cmp	w0, #0x3
     90c:	stp	x27, x28, [sp, #8]
     910:	b.ne	1160 <LLVMDisasmInstruction+0x938>  // b.any
     914:	ldr	x8, [sp, #264]
     918:	add	x9, sp, #0x90
     91c:	mov	w20, #0x1                   	// #1
     920:	add	x10, x9, #0x10
     924:	ldr	x24, [x8]
     928:	ldr	w25, [x8, #8]
     92c:	add	x8, x11, #0x10
     930:	add	x0, sp, #0x60
     934:	mov	x1, xzr
     938:	mov	x2, xzr
     93c:	mov	w3, wzr
     940:	stp	x9, x10, [sp, #136]
     944:	str	d8, [sp, #152]
     948:	str	w20, [sp, #128]
     94c:	stp	xzr, xzr, [sp, #112]
     950:	stp	x8, xzr, [sp, #96]
     954:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     958:	str	w20, [sp, #64]
     95c:	stp	xzr, xzr, [sp, #48]
     960:	adrp	x8, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
     964:	ldr	x8, [x8]
     968:	add	x0, sp, #0x20
     96c:	add	x1, sp, #0x60
     970:	stp	xzr, xzr, [sp, #72]
     974:	add	x8, x8, #0x10
     978:	stp	x8, xzr, [sp, #32]
     97c:	bl	0 <LLVMCreateDisasmCPUFeatures>
     980:	ldr	x8, [x19]
     984:	ldr	x20, [sp, #16]
     988:	add	x1, sp, #0x160
     98c:	add	x6, sp, #0x20
     990:	ldr	x8, [x8, #24]
     994:	ldr	x5, [x20, #88]
     998:	mov	x0, x19
     99c:	mov	x2, x22
     9a0:	mov	x3, x24
     9a4:	mov	x4, x25
     9a8:	blr	x8
     9ac:	ldrb	w8, [x20, #128]
     9b0:	mov	x28, x23
     9b4:	tbz	w8, #4, be0 <LLVMDisasmInstruction+0x3b8>
     9b8:	ldr	x0, [x20, #88]
     9bc:	ldr	x8, [x0, #152]
     9c0:	ldr	x10, [x8, #40]
     9c4:	cbz	x10, a40 <LLVMDisasmInstruction+0x218>
     9c8:	ldr	x11, [x20, #96]
     9cc:	ldr	w9, [sp, #352]
     9d0:	ldr	w12, [x11, #24]
     9d4:	cmp	w12, w9
     9d8:	b.ls	1198 <LLVMDisasmInstruction+0x970>  // b.plast
     9dc:	ldr	x11, [x11]
     9e0:	ldr	w8, [x8, #52]
     9e4:	add	x9, x11, x9, lsl #6
     9e8:	ldrh	w11, [x9, #6]
     9ec:	cmp	w8, w11
     9f0:	b.ls	11b8 <LLVMDisasmInstruction+0x990>  // b.plast
     9f4:	mov	w8, #0x18                  	// #24
     9f8:	madd	x8, x11, x8, x10
     9fc:	ldrh	w8, [x8, #8]
     a00:	mvn	w8, w8
     a04:	tst	w8, #0x3ffe
     a08:	b.eq	be0 <LLVMDisasmInstruction+0x3b8>  // b.none
     a0c:	mov	w8, #0x18                  	// #24
     a10:	madd	x8, x11, x8, x10
     a14:	ldrh	w8, [x8, #16]
     a18:	cbz	x8, be0 <LLVMDisasmInstruction+0x3b8>
     a1c:	mov	w12, #0x18                  	// #24
     a20:	madd	x10, x11, x12, x10
     a24:	ldr	x9, [x0, #136]
     a28:	ldrh	w10, [x10, #14]
     a2c:	cmp	w8, #0x10
     a30:	b.hi	ae4 <LLVMDisasmInstruction+0x2bc>  // b.pmore
     a34:	mov	x11, xzr
     a38:	mov	w12, wzr
     a3c:	b	b38 <LLVMDisasmInstruction+0x310>
     a40:	ldr	x2, [x20, #144]
     a44:	cbz	x2, be0 <LLVMDisasmInstruction+0x3b8>
     a48:	ldr	x1, [x20, #136]
     a4c:	sub	x8, x29, #0x70
     a50:	bl	0 <_ZNK4llvm15MCSubtargetInfo23getInstrItineraryForCPUENS_9StringRefE>
     a54:	ldr	x9, [x20, #96]
     a58:	ldr	w8, [sp, #352]
     a5c:	ldr	w10, [x9, #24]
     a60:	cmp	w10, w8
     a64:	b.ls	1198 <LLVMDisasmInstruction+0x970>  // b.plast
     a68:	ldr	w10, [sp, #376]
     a6c:	cbz	w10, adc <LLVMDisasmInstruction+0x2b4>
     a70:	ldur	x11, [x29, #-16]
     a74:	cbz	x11, adc <LLVMDisasmInstruction+0x2b4>
     a78:	ldr	x9, [x9]
     a7c:	mov	w12, #0xa                   	// #10
     a80:	cmp	w10, #0x1
     a84:	add	x8, x9, x8, lsl #6
     a88:	ldrh	w9, [x8, #6]
     a8c:	ldur	x8, [x29, #-32]
     a90:	madd	x9, x9, x12, x11
     a94:	ldrh	w11, [x9, #6]
     a98:	ldrh	w9, [x9, #8]
     a9c:	b.hi	10cc <LLVMDisasmInstruction+0x8a4>  // b.pmore
     aa0:	mov	x12, xzr
     aa4:	mov	w19, wzr
     aa8:	sub	x10, x10, x12
     aac:	add	w11, w11, w12
     ab0:	b	acc <LLVMDisasmInstruction+0x2a4>
     ab4:	ldr	w12, [x8, w11, uxtw #2]
     ab8:	cmp	w19, w12
     abc:	csel	w19, w12, w19, lt  // lt = tstop
     ac0:	subs	x10, x10, #0x1
     ac4:	add	w11, w11, #0x1
     ac8:	b.eq	b5c <LLVMDisasmInstruction+0x334>  // b.none
     acc:	cmp	w11, w9
     ad0:	b.cc	ab4 <LLVMDisasmInstruction+0x28c>  // b.lo, b.ul, b.last
     ad4:	mov	w12, #0xffffffff            	// #-1
     ad8:	b	ab8 <LLVMDisasmInstruction+0x290>
     adc:	mov	w19, wzr
     ae0:	b	b5c <LLVMDisasmInstruction+0x334>
     ae4:	and	x11, x8, #0xf
     ae8:	tst	x8, #0xf
     aec:	mov	w12, #0x10                  	// #16
     af0:	csel	x11, x12, x11, eq  // eq = none
     af4:	add	x13, x9, x10, lsl #2
     af8:	sub	x11, x8, x11
     afc:	movi	v0.2d, #0x0
     b00:	add	x12, x13, #0x20
     b04:	mov	x13, x11
     b08:	movi	v1.2d, #0x0
     b0c:	sub	x14, x12, #0x20
     b10:	ld2	{v2.8h, v3.8h}, [x12]
     b14:	ld2	{v4.8h, v5.8h}, [x14]
     b18:	subs	x13, x13, #0x10
     b1c:	add	x12, x12, #0x40
     b20:	smax	v1.8h, v1.8h, v2.8h
     b24:	smax	v0.8h, v0.8h, v4.8h
     b28:	b.ne	b0c <LLVMDisasmInstruction+0x2e4>  // b.any
     b2c:	smax	v0.8h, v0.8h, v1.8h
     b30:	smaxv	h0, v0.8h
     b34:	fmov	w12, s0
     b38:	add	x10, x11, x10
     b3c:	add	x9, x9, x10, lsl #2
     b40:	sub	x8, x8, x11
     b44:	ldrsh	w10, [x9], #4
     b48:	cmp	w10, w12, sxth
     b4c:	csel	w12, w10, w12, gt
     b50:	subs	x8, x8, #0x1
     b54:	b.ne	b44 <LLVMDisasmInstruction+0x31c>  // b.any
     b58:	sxth	w19, w12
     b5c:	cmp	w19, #0x2
     b60:	b.lt	be0 <LLVMDisasmInstruction+0x3b8>  // b.tstop
     b64:	ldp	x9, x8, [x20, #328]
     b68:	add	x0, x20, #0x138
     b6c:	sub	x9, x9, x8
     b70:	cmp	x9, #0x8
     b74:	b.hi	b8c <LLVMDisasmInstruction+0x364>  // b.pmore
     b78:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
     b7c:	add	x1, x1, #0x0
     b80:	mov	w2, #0x9                   	// #9
     b84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b88:	b	bb0 <LLVMDisasmInstruction+0x388>
     b8c:	adrp	x9, 0 <LLVMCreateDisasmCPUFeatures>
     b90:	add	x9, x9, #0x0
     b94:	ldr	x9, [x9]
     b98:	mov	w10, #0x20                  	// #32
     b9c:	strb	w10, [x8, #8]
     ba0:	str	x9, [x8]
     ba4:	ldr	x8, [x20, #336]
     ba8:	add	x8, x8, #0x9
     bac:	str	x8, [x20, #336]
     bb0:	mov	w1, w19
     bb4:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     bb8:	ldp	x9, x8, [x0, #16]
     bbc:	cmp	x8, x9
     bc0:	b.cs	bd8 <LLVMDisasmInstruction+0x3b0>  // b.hs, b.nlast
     bc4:	add	x9, x8, #0x1
     bc8:	mov	w10, #0xa                   	// #10
     bcc:	str	x9, [x0, #24]
     bd0:	strb	w10, [x8]
     bd4:	b	be0 <LLVMDisasmInstruction+0x3b8>
     bd8:	mov	w1, #0xa                   	// #10
     bdc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     be0:	ldr	w24, [x20, #176]
     be4:	cbz	w24, fc8 <LLVMDisasmInstruction+0x7a0>
     be8:	ldr	x9, [sp, #16]
     bec:	add	x0, sp, #0x20
     bf0:	mov	w1, #0x28                  	// #40
     bf4:	ldr	x8, [x9, #72]
     bf8:	ldr	x25, [x9, #168]
     bfc:	ldp	x23, x22, [x8, #48]
     c00:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
     c04:	mov	w1, #0xa                   	// #10
     c08:	mov	x0, x25
     c0c:	mov	x2, x24
     c10:	bl	0 <memchr>
     c14:	sub	x8, x0, x25
     c18:	cmp	x0, #0x0
     c1c:	csinv	x19, x8, xzr, ne  // ne = any
     c20:	cbz	x22, c6c <LLVMDisasmInstruction+0x444>
     c24:	ldp	x8, x0, [sp, #48]
     c28:	sub	x8, x8, x0
     c2c:	cmp	x22, x8
     c30:	b.ls	c90 <LLVMDisasmInstruction+0x468>  // b.plast
     c34:	add	x0, sp, #0x20
     c38:	mov	x1, x23
     c3c:	mov	x2, x22
     c40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c44:	ldr	x8, [x0, #24]
     c48:	mov	x26, x0
     c4c:	ldr	x9, [x26, #16]
     c50:	cmp	x8, x9
     c54:	b.cc	cb8 <LLVMDisasmInstruction+0x490>  // b.lo, b.ul, b.last
     c58:	mov	w1, #0x20                  	// #32
     c5c:	mov	x0, x26
     c60:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     c64:	mov	x26, x0
     c68:	b	cc8 <LLVMDisasmInstruction+0x4a0>
     c6c:	ldp	x9, x8, [sp, #48]
     c70:	cmp	x8, x9
     c74:	b.cs	e6c <LLVMDisasmInstruction+0x644>  // b.hs, b.nlast
     c78:	add	x22, sp, #0x20
     c7c:	add	x9, x8, #0x1
     c80:	mov	w10, #0x20                  	// #32
     c84:	str	x9, [sp, #56]
     c88:	strb	w10, [x8]
     c8c:	b	e7c <LLVMDisasmInstruction+0x654>
     c90:	mov	x1, x23
     c94:	mov	x2, x22
     c98:	add	x26, sp, #0x20
     c9c:	bl	0 <memcpy>
     ca0:	ldr	x8, [sp, #56]
     ca4:	add	x8, x8, x22
     ca8:	str	x8, [sp, #56]
     cac:	ldr	x9, [x26, #16]
     cb0:	cmp	x8, x9
     cb4:	b.cs	c58 <LLVMDisasmInstruction+0x430>  // b.hs, b.nlast
     cb8:	add	x9, x8, #0x1
     cbc:	mov	w10, #0x20                  	// #32
     cc0:	str	x9, [x26, #24]
     cc4:	strb	w10, [x8]
     cc8:	ldp	x8, x0, [x26, #16]
     ccc:	cmp	x19, x24
     cd0:	csel	x27, x24, x19, hi  // hi = pmore
     cd4:	sub	x8, x8, x0
     cd8:	cmp	x27, x8
     cdc:	b.ls	cf4 <LLVMDisasmInstruction+0x4cc>  // b.plast
     ce0:	mov	x0, x26
     ce4:	mov	x1, x25
     ce8:	mov	x2, x27
     cec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cf0:	b	d10 <LLVMDisasmInstruction+0x4e8>
     cf4:	cbz	x27, d10 <LLVMDisasmInstruction+0x4e8>
     cf8:	mov	x1, x25
     cfc:	mov	x2, x27
     d00:	bl	0 <memcpy>
     d04:	ldr	x8, [x26, #24]
     d08:	add	x8, x8, x27
     d0c:	str	x8, [x26, #24]
     d10:	add	x8, x19, #0x1
     d14:	cmp	x8, x24
     d18:	csinc	x8, x24, x19, hi  // hi = pmore
     d1c:	subs	x24, x24, x8
     d20:	b.eq	fc8 <LLVMDisasmInstruction+0x7a0>  // b.none
     d24:	add	x25, x25, x8
     d28:	mov	w20, #0x20                  	// #32
     d2c:	mov	x19, x28
     d30:	b	d60 <LLVMDisasmInstruction+0x538>
     d34:	mov	x0, x26
     d38:	mov	x1, x25
     d3c:	mov	x2, x27
     d40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d44:	add	x8, x28, #0x1
     d48:	cmp	x24, x8
     d4c:	csinc	x8, x24, x28, cc  // cc = lo, ul, last
     d50:	subs	x24, x24, x8
     d54:	add	x25, x25, x8
     d58:	mov	x28, x19
     d5c:	b.eq	fc8 <LLVMDisasmInstruction+0x7a0>  // b.none
     d60:	ldp	x9, x8, [sp, #48]
     d64:	cmp	x8, x9
     d68:	b.cs	d80 <LLVMDisasmInstruction+0x558>  // b.hs, b.nlast
     d6c:	add	x9, x8, #0x1
     d70:	str	x9, [sp, #56]
     d74:	mov	w9, #0xa                   	// #10
     d78:	strb	w9, [x8]
     d7c:	b	d8c <LLVMDisasmInstruction+0x564>
     d80:	add	x0, sp, #0x20
     d84:	mov	w1, #0xa                   	// #10
     d88:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     d8c:	add	x0, sp, #0x20
     d90:	mov	w1, #0x28                  	// #40
     d94:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
     d98:	mov	w1, #0xa                   	// #10
     d9c:	mov	x0, x25
     da0:	mov	x2, x24
     da4:	bl	0 <memchr>
     da8:	mov	x8, x0
     dac:	ldp	x9, x0, [sp, #48]
     db0:	sub	x10, x8, x25
     db4:	cmp	x8, #0x0
     db8:	csinv	x28, x10, xzr, ne  // ne = any
     dbc:	sub	x8, x9, x0
     dc0:	cmp	x22, x8
     dc4:	b.ls	e00 <LLVMDisasmInstruction+0x5d8>  // b.plast
     dc8:	add	x0, sp, #0x20
     dcc:	mov	x1, x23
     dd0:	mov	x2, x22
     dd4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     dd8:	ldr	x8, [x0, #24]
     ddc:	mov	x26, x0
     de0:	ldr	x9, [x26, #16]
     de4:	cmp	x8, x9
     de8:	b.cc	e28 <LLVMDisasmInstruction+0x600>  // b.lo, b.ul, b.last
     dec:	mov	w1, #0x20                  	// #32
     df0:	mov	x0, x26
     df4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     df8:	mov	x26, x0
     dfc:	b	e34 <LLVMDisasmInstruction+0x60c>
     e00:	mov	x1, x23
     e04:	mov	x2, x22
     e08:	add	x26, sp, #0x20
     e0c:	bl	0 <memcpy>
     e10:	ldr	x8, [sp, #56]
     e14:	add	x8, x8, x22
     e18:	str	x8, [sp, #56]
     e1c:	ldr	x9, [x26, #16]
     e20:	cmp	x8, x9
     e24:	b.cs	dec <LLVMDisasmInstruction+0x5c4>  // b.hs, b.nlast
     e28:	add	x9, x8, #0x1
     e2c:	str	x9, [x26, #24]
     e30:	strb	w20, [x8]
     e34:	ldp	x8, x0, [x26, #16]
     e38:	cmp	x24, x28
     e3c:	csel	x27, x24, x28, cc  // cc = lo, ul, last
     e40:	sub	x8, x8, x0
     e44:	cmp	x27, x8
     e48:	b.hi	d34 <LLVMDisasmInstruction+0x50c>  // b.pmore
     e4c:	cbz	x27, d44 <LLVMDisasmInstruction+0x51c>
     e50:	mov	x1, x25
     e54:	mov	x2, x27
     e58:	bl	0 <memcpy>
     e5c:	ldr	x8, [x26, #24]
     e60:	add	x8, x8, x27
     e64:	str	x8, [x26, #24]
     e68:	b	d44 <LLVMDisasmInstruction+0x51c>
     e6c:	add	x0, sp, #0x20
     e70:	mov	w1, #0x20                  	// #32
     e74:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     e78:	mov	x22, x0
     e7c:	ldp	x8, x0, [x22, #16]
     e80:	cmp	x19, x24
     e84:	csel	x23, x24, x19, hi  // hi = pmore
     e88:	sub	x8, x8, x0
     e8c:	cmp	x23, x8
     e90:	b.ls	ea8 <LLVMDisasmInstruction+0x680>  // b.plast
     e94:	mov	x0, x22
     e98:	mov	x1, x25
     e9c:	mov	x2, x23
     ea0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ea4:	b	ec4 <LLVMDisasmInstruction+0x69c>
     ea8:	cbz	x23, ec4 <LLVMDisasmInstruction+0x69c>
     eac:	mov	x1, x25
     eb0:	mov	x2, x23
     eb4:	bl	0 <memcpy>
     eb8:	ldr	x8, [x22, #24]
     ebc:	add	x8, x8, x23
     ec0:	str	x8, [x22, #24]
     ec4:	add	x8, x19, #0x1
     ec8:	cmp	x8, x24
     ecc:	csinc	x8, x24, x19, hi  // hi = pmore
     ed0:	subs	x22, x24, x8
     ed4:	b.eq	fc8 <LLVMDisasmInstruction+0x7a0>  // b.none
     ed8:	add	x23, x25, x8
     edc:	mov	w19, #0xa                   	// #10
     ee0:	mov	w20, #0x20                  	// #32
     ee4:	b	f10 <LLVMDisasmInstruction+0x6e8>
     ee8:	mov	x0, x24
     eec:	mov	x1, x23
     ef0:	mov	x2, x25
     ef4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ef8:	add	x8, x26, #0x1
     efc:	cmp	x22, x8
     f00:	csinc	x8, x22, x26, cc  // cc = lo, ul, last
     f04:	subs	x22, x22, x8
     f08:	add	x23, x23, x8
     f0c:	b.eq	fc8 <LLVMDisasmInstruction+0x7a0>  // b.none
     f10:	ldp	x9, x8, [sp, #48]
     f14:	cmp	x8, x9
     f18:	b.cs	f2c <LLVMDisasmInstruction+0x704>  // b.hs, b.nlast
     f1c:	add	x9, x8, #0x1
     f20:	str	x9, [sp, #56]
     f24:	strb	w19, [x8]
     f28:	b	f38 <LLVMDisasmInstruction+0x710>
     f2c:	add	x0, sp, #0x20
     f30:	mov	w1, #0xa                   	// #10
     f34:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f38:	add	x0, sp, #0x20
     f3c:	mov	w1, #0x28                  	// #40
     f40:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
     f44:	mov	w1, #0xa                   	// #10
     f48:	mov	x0, x23
     f4c:	mov	x2, x22
     f50:	bl	0 <memchr>
     f54:	ldp	x9, x8, [sp, #48]
     f58:	sub	x10, x0, x23
     f5c:	cmp	x0, #0x0
     f60:	csinv	x26, x10, xzr, ne  // ne = any
     f64:	cmp	x8, x9
     f68:	b.cs	f80 <LLVMDisasmInstruction+0x758>  // b.hs, b.nlast
     f6c:	add	x24, sp, #0x20
     f70:	add	x9, x8, #0x1
     f74:	str	x9, [sp, #56]
     f78:	strb	w20, [x8]
     f7c:	b	f90 <LLVMDisasmInstruction+0x768>
     f80:	add	x0, sp, #0x20
     f84:	mov	w1, #0x20                  	// #32
     f88:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f8c:	mov	x24, x0
     f90:	ldp	x8, x0, [x24, #16]
     f94:	cmp	x22, x26
     f98:	csel	x25, x22, x26, cc  // cc = lo, ul, last
     f9c:	sub	x8, x8, x0
     fa0:	cmp	x25, x8
     fa4:	b.hi	ee8 <LLVMDisasmInstruction+0x6c0>  // b.pmore
     fa8:	cbz	x25, ef8 <LLVMDisasmInstruction+0x6d0>
     fac:	mov	x1, x23
     fb0:	mov	x2, x25
     fb4:	bl	0 <memcpy>
     fb8:	ldr	x8, [x24, #24]
     fbc:	add	x8, x8, x25
     fc0:	str	x8, [x24, #24]
     fc4:	b	ef8 <LLVMDisasmInstruction+0x6d0>
     fc8:	ldr	x8, [sp, #56]
     fcc:	ldr	x9, [sp, #40]
     fd0:	cmp	x8, x9
     fd4:	b.eq	fe0 <LLVMDisasmInstruction+0x7b8>  // b.none
     fd8:	add	x0, sp, #0x20
     fdc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     fe0:	ldp	x19, x8, [sp, #8]
     fe4:	str	wzr, [x8, #176]
     fe8:	cbz	x21, 1178 <LLVMDisasmInstruction+0x950>
     fec:	ldr	w8, [sp, #152]
     ff0:	ldr	x1, [sp, #144]
     ff4:	sub	x9, x21, #0x1
     ff8:	mov	x0, x19
     ffc:	cmp	x9, x8
    1000:	csel	x20, x8, x9, hi  // hi = pmore
    1004:	mov	x2, x20
    1008:	bl	0 <memcpy>
    100c:	strb	wzr, [x19, x20]
    1010:	adrp	x10, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
    1014:	ldr	x8, [sp, #56]
    1018:	ldr	x9, [sp, #40]
    101c:	ldr	x24, [x29, #8]
    1020:	ldr	x10, [x10]
    1024:	cmp	x8, x9
    1028:	add	x10, x10, #0x10
    102c:	str	x10, [sp, #32]
    1030:	b.eq	103c <LLVMDisasmInstruction+0x814>  // b.none
    1034:	add	x0, sp, #0x20
    1038:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    103c:	add	x0, sp, #0x20
    1040:	mov	x23, x28
    1044:	bl	0 <LLVMCreateDisasmCPUFeatures>
    1048:	add	x0, sp, #0x20
    104c:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
    1050:	add	x0, sp, #0x60
    1054:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
    1058:	ldr	x0, [sp, #144]
    105c:	add	x8, sp, #0x90
    1060:	add	x8, x8, #0x10
    1064:	add	x20, sp, #0x160
    1068:	cmp	x0, x8
    106c:	b.eq	1074 <LLVMDisasmInstruction+0x84c>  // b.none
    1070:	bl	0 <free>
    1074:	add	x0, sp, #0xe0
    1078:	add	x19, x20, #0x10
    107c:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
    1080:	ldr	x0, [sp, #272]
    1084:	cmp	x0, x23
    1088:	b.eq	1090 <LLVMDisasmInstruction+0x868>  // b.none
    108c:	bl	0 <free>
    1090:	ldr	x0, [sp, #368]
    1094:	add	x8, x19, #0x10
    1098:	cmp	x0, x8
    109c:	b.eq	10a4 <LLVMDisasmInstruction+0x87c>  // b.none
    10a0:	bl	0 <free>
    10a4:	mov	x0, x24
    10a8:	add	sp, sp, #0x270
    10ac:	ldp	x20, x19, [sp, #96]
    10b0:	ldp	x22, x21, [sp, #80]
    10b4:	ldp	x24, x23, [sp, #64]
    10b8:	ldp	x26, x25, [sp, #48]
    10bc:	ldp	x28, x27, [sp, #32]
    10c0:	ldp	x29, x30, [sp, #16]
    10c4:	ldr	d8, [sp], #112
    10c8:	ret
    10cc:	sub	x13, x10, #0x1
    10d0:	mvn	w12, w11
    10d4:	mov	w19, wzr
    10d8:	cmp	w12, w13
    10dc:	mov	x12, xzr
    10e0:	b.cc	aa8 <LLVMDisasmInstruction+0x280>  // b.lo, b.ul, b.last
    10e4:	lsr	x13, x13, #32
    10e8:	cbnz	x13, aa8 <LLVMDisasmInstruction+0x280>
    10ec:	and	x12, x10, #0xfffffffe
    10f0:	mov	w14, wzr
    10f4:	mov	x15, x12
    10f8:	mov	w16, w11
    10fc:	b	112c <LLVMDisasmInstruction+0x904>
    1100:	cmp	w16, w9
    1104:	csinv	w18, w18, wzr, cc  // cc = lo, ul, last
    1108:	cmp	w17, w9
    110c:	csinv	w17, w0, wzr, cc  // cc = lo, ul, last
    1110:	cmp	w13, w18
    1114:	csel	w13, w18, w13, lt  // lt = tstop
    1118:	cmp	w14, w17
    111c:	csel	w14, w17, w14, lt  // lt = tstop
    1120:	subs	x15, x15, #0x2
    1124:	add	w16, w16, #0x2
    1128:	b.eq	114c <LLVMDisasmInstruction+0x924>  // b.none
    112c:	cmp	w16, w9
    1130:	add	w17, w16, #0x1
    1134:	b.cs	113c <LLVMDisasmInstruction+0x914>  // b.hs, b.nlast
    1138:	ldr	w18, [x8, w16, uxtw #2]
    113c:	cmp	w17, w9
    1140:	b.cs	1100 <LLVMDisasmInstruction+0x8d8>  // b.hs, b.nlast
    1144:	ldr	w0, [x8, w17, uxtw #2]
    1148:	b	1100 <LLVMDisasmInstruction+0x8d8>
    114c:	cmp	w13, w14
    1150:	csel	w19, w13, w14, gt
    1154:	cmp	x12, x10
    1158:	b.ne	aa8 <LLVMDisasmInstruction+0x280>  // b.any
    115c:	b	b5c <LLVMDisasmInstruction+0x334>
    1160:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
    1164:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
    1168:	add	x0, x0, #0x0
    116c:	add	x1, x1, #0x0
    1170:	mov	w2, #0x127                 	// #295
    1174:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1178:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
    117c:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
    1180:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
    1184:	add	x0, x0, #0x0
    1188:	add	x1, x1, #0x0
    118c:	add	x3, x3, #0x0
    1190:	mov	w2, #0x11f                 	// #287
    1194:	bl	0 <__assert_fail>
    1198:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
    119c:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
    11a0:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
    11a4:	add	x0, x0, #0x0
    11a8:	add	x1, x1, #0x0
    11ac:	add	x3, x3, #0x0
    11b0:	mov	w2, #0x2d                  	// #45
    11b4:	bl	0 <__assert_fail>
    11b8:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
    11bc:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
    11c0:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
    11c4:	add	x0, x0, #0x0
    11c8:	add	x1, x1, #0x0
    11cc:	add	x3, x3, #0x0
    11d0:	mov	w2, #0x15d                 	// #349
    11d4:	bl	0 <__assert_fail>

00000000000011d8 <LLVMSetDisasmOptions>:
    11d8:	sub	sp, sp, #0xa0
    11dc:	stp	x29, x30, [sp, #80]
    11e0:	stp	x26, x25, [sp, #96]
    11e4:	stp	x24, x23, [sp, #112]
    11e8:	stp	x22, x21, [sp, #128]
    11ec:	stp	x20, x19, [sp, #144]
    11f0:	add	x29, sp, #0x50
    11f4:	mov	x19, x1
    11f8:	mov	x20, x0
    11fc:	tbnz	w19, #0, 120c <LLVMSetDisasmOptions+0x34>
    1200:	tbnz	w19, #1, 122c <LLVMSetDisasmOptions+0x54>
    1204:	tbnz	w19, #2, 124c <LLVMSetDisasmOptions+0x74>
    1208:	b	12e0 <LLVMSetDisasmOptions+0x108>
    120c:	ldr	x8, [x20, #120]
    1210:	mov	w9, #0x1                   	// #1
    1214:	and	x19, x19, #0xfffffffffffffffe
    1218:	strb	w9, [x8, #40]
    121c:	ldr	x8, [x20, #128]
    1220:	orr	x8, x8, #0x1
    1224:	str	x8, [x20, #128]
    1228:	tbz	w19, #1, 1204 <LLVMSetDisasmOptions+0x2c>
    122c:	ldr	x8, [x20, #120]
    1230:	mov	w9, #0x1                   	// #1
    1234:	and	x19, x19, #0xfffffffffffffffd
    1238:	strb	w9, [x8, #41]
    123c:	ldr	x8, [x20, #128]
    1240:	orr	x8, x8, #0x2
    1244:	str	x8, [x20, #128]
    1248:	tbz	w19, #2, 12e0 <LLVMSetDisasmOptions+0x108>
    124c:	ldp	x21, x23, [x20, #72]
    1250:	ldr	x22, [x20, #96]
    1254:	ldr	x26, [x20, #64]
    1258:	mov	w8, #0x104                 	// #260
    125c:	ldr	w25, [x21, #168]
    1260:	add	x0, sp, #0x18
    1264:	mov	x1, sp
    1268:	strh	w8, [sp, #16]
    126c:	stp	x20, xzr, [sp]
    1270:	add	x24, sp, #0x18
    1274:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    1278:	ldr	x8, [x26, #128]
    127c:	cbz	x8, 1338 <LLVMSetDisasmOptions+0x160>
    1280:	cmp	w25, #0x0
    1284:	cset	w1, eq  // eq = none
    1288:	add	x0, sp, #0x18
    128c:	mov	x2, x21
    1290:	mov	x3, x22
    1294:	mov	x4, x23
    1298:	blr	x8
    129c:	mov	x21, x0
    12a0:	ldr	x0, [sp, #24]
    12a4:	add	x8, x24, #0x10
    12a8:	cmp	x0, x8
    12ac:	b.eq	12b4 <LLVMSetDisasmOptions+0xdc>  // b.none
    12b0:	bl	0 <_ZdlPv>
    12b4:	cbz	x21, 12e0 <LLVMSetDisasmOptions+0x108>
    12b8:	ldr	x0, [x20, #120]
    12bc:	str	x21, [x20, #120]
    12c0:	cbz	x0, 12d0 <LLVMSetDisasmOptions+0xf8>
    12c4:	ldr	x8, [x0]
    12c8:	ldr	x8, [x8, #8]
    12cc:	blr	x8
    12d0:	ldr	x8, [x20, #128]
    12d4:	and	x19, x19, #0xfffffffffffffffb
    12d8:	orr	x8, x8, #0x4
    12dc:	str	x8, [x20, #128]
    12e0:	tbz	w19, #3, 1300 <LLVMSetDisasmOptions+0x128>
    12e4:	ldr	x8, [x20, #120]
    12e8:	add	x9, x20, #0x138
    12ec:	and	x19, x19, #0xfffffffffffffff7
    12f0:	str	x9, [x8, #8]
    12f4:	ldr	x8, [x20, #128]
    12f8:	orr	x8, x8, #0x8
    12fc:	str	x8, [x20, #128]
    1300:	tbz	w19, #4, 1314 <LLVMSetDisasmOptions+0x13c>
    1304:	ldr	x8, [x20, #128]
    1308:	and	x19, x19, #0xffffffffffffffef
    130c:	orr	x8, x8, #0x10
    1310:	str	x8, [x20, #128]
    1314:	cmp	x19, #0x0
    1318:	ldp	x20, x19, [sp, #144]
    131c:	ldp	x22, x21, [sp, #128]
    1320:	ldp	x24, x23, [sp, #112]
    1324:	ldp	x26, x25, [sp, #96]
    1328:	ldp	x29, x30, [sp, #80]
    132c:	cset	w0, eq  // eq = none
    1330:	add	sp, sp, #0xa0
    1334:	ret
    1338:	mov	x21, xzr
    133c:	ldr	x0, [sp, #24]
    1340:	add	x8, x24, #0x10
    1344:	cmp	x0, x8
    1348:	b.ne	12b0 <LLVMSetDisasmOptions+0xd8>  // b.any
    134c:	b	12b4 <LLVMSetDisasmOptions+0xdc>

Disassembly of section .text._ZN4llvm17LLVMDisasmContextD2Ev:

0000000000000000 <_ZN4llvm17LLVMDisasmContextD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	add	x0, x0, #0x138
  14:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
  18:	ldr	x0, [x19, #168]
  1c:	add	x8, x19, #0xb8
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN4llvm17LLVMDisasmContextD2Ev+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x19, #136]
  30:	add	x8, x19, #0x98
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN4llvm17LLVMDisasmContextD2Ev+0x40>  // b.none
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x0, [x19, #120]
  44:	cbz	x0, 54 <_ZN4llvm17LLVMDisasmContextD2Ev+0x54>
  48:	ldr	x8, [x0]
  4c:	ldr	x8, [x8, #8]
  50:	blr	x8
  54:	ldr	x0, [x19, #112]
  58:	str	xzr, [x19, #120]
  5c:	cbz	x0, 6c <_ZN4llvm17LLVMDisasmContextD2Ev+0x6c>
  60:	ldr	x8, [x0]
  64:	ldr	x8, [x8, #8]
  68:	blr	x8
  6c:	ldr	x20, [x19, #104]
  70:	str	xzr, [x19, #112]
  74:	cbz	x20, 88 <_ZN4llvm17LLVMDisasmContextD2Ev+0x88>
  78:	mov	x0, x20
  7c:	bl	0 <_ZN4llvm9MCContextD1Ev>
  80:	mov	x0, x20
  84:	bl	0 <_ZdlPv>
  88:	ldr	x0, [x19, #96]
  8c:	str	xzr, [x19, #104]
  90:	cbz	x0, 98 <_ZN4llvm17LLVMDisasmContextD2Ev+0x98>
  94:	bl	0 <_ZdlPv>
  98:	ldr	x0, [x19, #88]
  9c:	str	xzr, [x19, #96]
  a0:	cbz	x0, b0 <_ZN4llvm17LLVMDisasmContextD2Ev+0xb0>
  a4:	ldr	x8, [x0]
  a8:	ldr	x8, [x8, #8]
  ac:	blr	x8
  b0:	ldr	x20, [x19, #80]
  b4:	str	xzr, [x19, #88]
  b8:	cbz	x20, e0 <_ZN4llvm17LLVMDisasmContextD2Ev+0xe0>
  bc:	ldr	x0, [x20, #200]
  c0:	bl	0 <_ZdlPv>
  c4:	ldr	x8, [x20, #192]
  c8:	ldr	x0, [x20, #168]
  cc:	add	x8, x8, #0x1
  d0:	str	x8, [x20, #192]
  d4:	bl	0 <_ZdlPv>
  d8:	mov	x0, x20
  dc:	bl	0 <_ZdlPv>
  e0:	ldr	x0, [x19, #72]
  e4:	str	xzr, [x19, #80]
  e8:	cbz	x0, f8 <_ZN4llvm17LLVMDisasmContextD2Ev+0xf8>
  ec:	ldr	x8, [x0]
  f0:	ldr	x8, [x8, #8]
  f4:	blr	x8
  f8:	ldr	x0, [x19]
  fc:	add	x8, x19, #0x10
 100:	str	xzr, [x19, #72]
 104:	cmp	x0, x8
 108:	b.eq	118 <_ZN4llvm17LLVMDisasmContextD2Ev+0x118>  // b.none
 10c:	ldp	x20, x19, [sp, #16]
 110:	ldp	x29, x30, [sp], #32
 114:	b	0 <_ZdlPv>
 118:	ldp	x20, x19, [sp, #16]
 11c:	ldp	x29, x30, [sp], #32
 120:	ret

Disassembly of section .text._ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE:

0000000000000000 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>
  18:	str	x20, [x19, #40]
  1c:	ldr	w8, [x20, #32]
  20:	cbz	w8, 70 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x70>
  24:	ldr	x8, [x20, #8]
  28:	cbnz	x8, 74 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x74>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x20
  34:	ldr	x8, [x8, #80]
  38:	blr	x8
  3c:	mov	x20, x0
  40:	ldr	x8, [x19, #24]
  44:	ldr	x9, [x19, #8]
  48:	cmp	x8, x9
  4c:	cbnz	x20, 8c <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x8c>
  50:	b.eq	5c <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x5c>  // b.none
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  5c:	mov	x0, x19
  60:	mov	x1, xzr
  64:	mov	x2, xzr
  68:	mov	w3, wzr
  6c:	b	b0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0xb0>
  70:	ldr	x8, [x20, #8]
  74:	ldr	x9, [x20, #16]
  78:	sub	x20, x9, x8
  7c:	ldr	x8, [x19, #24]
  80:	ldr	x9, [x19, #8]
  84:	cmp	x8, x9
  88:	cbz	x20, 50 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x50>
  8c:	b.eq	98 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x98>  // b.none
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  98:	mov	x0, x20
  9c:	bl	0 <_Znam>
  a0:	mov	x1, x0
  a4:	mov	w3, #0x1                   	// #1
  a8:	mov	x0, x19
  ac:	mov	x2, x20
  b0:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
  b4:	ldr	x20, [x19, #40]
  b8:	ldr	x8, [x20, #24]
  bc:	ldr	x9, [x20, #8]
  c0:	cmp	x8, x9
  c4:	b.eq	d0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0xd0>  // b.none
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  d0:	mov	x0, x20
  d4:	mov	x1, xzr
  d8:	mov	x2, xzr
  dc:	mov	w3, wzr
  e0:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
  e4:	str	xzr, [x19, #56]
  e8:	ldp	x20, x19, [sp, #16]
  ec:	ldp	x29, x30, [sp], #32
  f0:	ret

Disassembly of section .text._ZN4llvm21formatted_raw_ostream13releaseStreamEv:

0000000000000000 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x19, [x0, #40]
  10:	cbz	x19, 78 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x78>
  14:	ldr	w8, [x0, #32]
  18:	mov	x20, x0
  1c:	cbz	w8, 84 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x84>
  20:	ldr	x8, [x20, #8]
  24:	cbnz	x8, 88 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x88>
  28:	ldr	x8, [x20]
  2c:	mov	x0, x20
  30:	ldr	x8, [x8, #80]
  34:	blr	x8
  38:	ldr	x19, [x20, #40]
  3c:	mov	x20, x0
  40:	ldr	x8, [x19, #24]
  44:	ldr	x9, [x19, #8]
  48:	cmp	x8, x9
  4c:	cbnz	x20, a0 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0xa0>
  50:	b.eq	5c <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x5c>  // b.none
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  5c:	mov	x0, x19
  60:	mov	x1, xzr
  64:	mov	x2, xzr
  68:	mov	w3, wzr
  6c:	ldp	x20, x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	b	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
  78:	ldp	x20, x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	ldr	x8, [x20, #8]
  88:	ldr	x9, [x20, #16]
  8c:	sub	x20, x9, x8
  90:	ldr	x8, [x19, #24]
  94:	ldr	x9, [x19, #8]
  98:	cmp	x8, x9
  9c:	cbz	x20, 50 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x50>
  a0:	b.eq	ac <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0xac>  // b.none
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  ac:	mov	x0, x20
  b0:	bl	0 <_Znam>
  b4:	mov	w3, #0x1                   	// #1
  b8:	mov	x1, x0
  bc:	mov	x0, x19
  c0:	mov	x2, x20
  c4:	ldp	x20, x19, [sp, #16]
  c8:	ldp	x29, x30, [sp], #32
  cc:	b	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>

MCDisassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm14MCDisassemblerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm14MCDisassemblerD1Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #24]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm14MCDisassemblerD1Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19, #24]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <_ZN4llvm14MCDisassemblerD0Ev>:
  44:	brk	#0x1

0000000000000048 <_ZNK4llvm14MCDisassembler13onSymbolStartENS_9StringRefERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>:
  48:	mov	w0, #0x3                   	// #3
  4c:	str	xzr, [x3]
  50:	ret

0000000000000054 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>:
  54:	mov	x9, x0
  58:	ldr	x0, [x0, #24]
  5c:	cbz	x0, 88 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm+0x34>
  60:	ldr	x10, [x0]
  64:	mov	x8, x3
  68:	mov	x3, x2
  6c:	ldr	x2, [x9, #32]
  70:	ldr	x9, [x10, #16]
  74:	mov	x7, x6
  78:	mov	x6, x5
  7c:	and	w5, w4, #0x1
  80:	mov	x4, x8
  84:	br	x9
  88:	ret

000000000000008c <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm>:
  8c:	mov	x8, x0
  90:	ldr	x0, [x0, #24]
  94:	cbz	x0, b0 <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm+0x24>
  98:	ldr	x9, [x0]
  9c:	mov	x3, x2
  a0:	mov	x2, x1
  a4:	ldr	x1, [x8, #32]
  a8:	ldr	x4, [x9, #24]
  ac:	br	x4
  b0:	ret

00000000000000b4 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>:
  b4:	ldr	x9, [x1]
  b8:	str	xzr, [x1]
  bc:	mov	x8, x0
  c0:	ldr	x0, [x0, #24]
  c4:	str	x9, [x8, #24]
  c8:	cbz	x0, d8 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE+0x24>
  cc:	ldr	x8, [x0]
  d0:	ldr	x1, [x8, #8]
  d4:	br	x1
  d8:	ret

MCExternalSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>:
   0:	sub	sp, sp, #0xc0
   4:	stp	x29, x30, [sp, #112]
   8:	str	x25, [sp, #128]
   c:	stp	x24, x23, [sp, #144]
  10:	stp	x22, x21, [sp, #160]
  14:	stp	x20, x19, [sp, #176]
  18:	add	x29, sp, #0x70
  1c:	movi	v0.2d, #0x0
  20:	stp	q0, q0, [sp, #80]
  24:	stp	q0, q0, [sp, #48]
  28:	str	x3, [sp, #96]
  2c:	ldr	x8, [x0, #24]
  30:	mov	x25, x7
  34:	mov	w21, w5
  38:	mov	x23, x4
  3c:	mov	x24, x3
  40:	mov	x22, x2
  44:	mov	x20, x0
  48:	mov	x19, x1
  4c:	cbz	x8, 158 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x158>
  50:	ldr	x0, [x20, #40]
  54:	add	x5, sp, #0x30
  58:	mov	w4, #0x1                   	// #1
  5c:	mov	x1, x23
  60:	mov	x2, x6
  64:	mov	x3, x25
  68:	blr	x8
  6c:	movi	v0.2d, #0x0
  70:	cbz	w0, 158 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x158>
  74:	ldr	x8, [sp, #48]
  78:	cbz	x8, 1f4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1f4>
  7c:	ldr	x0, [sp, #56]
  80:	cbz	x0, 23c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x23c>
  84:	str	x0, [sp, #32]
  88:	bl	0 <strlen>
  8c:	str	x0, [sp, #40]
  90:	ldr	x0, [x20, #8]
  94:	mov	w8, #0x105                 	// #261
  98:	strh	w8, [sp, #24]
  9c:	add	x8, sp, #0x20
  a0:	add	x1, sp, #0x8
  a4:	stp	x8, xzr, [sp, #8]
  a8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
  ac:	ldr	x2, [x20, #8]
  b0:	mov	w1, wzr
  b4:	mov	x3, xzr
  b8:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
  bc:	mov	x21, x0
  c0:	ldr	x8, [sp, #72]
  c4:	cbz	x8, 200 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x200>
  c8:	ldr	x0, [sp, #80]
  cc:	cbz	x0, 25c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x25c>
  d0:	str	x0, [sp, #32]
  d4:	bl	0 <strlen>
  d8:	str	x0, [sp, #40]
  dc:	ldr	x0, [x20, #8]
  e0:	mov	w8, #0x105                 	// #261
  e4:	strh	w8, [sp, #24]
  e8:	add	x8, sp, #0x20
  ec:	add	x1, sp, #0x8
  f0:	stp	x8, xzr, [sp, #8]
  f4:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
  f8:	ldr	x2, [x20, #8]
  fc:	mov	w1, wzr
 100:	mov	x3, xzr
 104:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 108:	mov	x23, x0
 10c:	ldr	x0, [sp, #96]
 110:	cbz	x0, 20c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x20c>
 114:	ldr	x1, [x20, #8]
 118:	mov	w2, wzr
 11c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 120:	mov	x22, x0
 124:	cbz	x23, 214 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x214>
 128:	ldr	x3, [x20, #8]
 12c:	cbz	x21, 27c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x27c>
 130:	mov	w0, #0x11                  	// #17
 134:	mov	x1, x21
 138:	mov	x2, x23
 13c:	mov	x4, xzr
 140:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 144:	mov	x1, x0
 148:	cbz	x22, 298 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x298>
 14c:	ldr	x3, [x20, #8]
 150:	mov	w0, wzr
 154:	b	228 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x228>
 158:	cmp	x25, #0x1
 15c:	eor	w8, w21, #0x1
 160:	cset	w9, eq  // eq = none
 164:	mov	w0, wzr
 168:	and	w8, w9, w8
 16c:	stp	q0, q0, [sp, #80]
 170:	stp	q0, q0, [sp, #48]
 174:	tbnz	w8, #0, 44c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x44c>
 178:	ldr	x8, [x20, #32]
 17c:	cbz	x8, 44c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x44c>
 180:	and	x9, x21, #0x1
 184:	str	x9, [sp, #8]
 188:	ldr	x0, [x20, #40]
 18c:	add	x2, sp, #0x8
 190:	add	x4, sp, #0x20
 194:	mov	x1, x24
 198:	mov	x3, x23
 19c:	blr	x8
 1a0:	mov	x23, x0
 1a4:	cbz	x0, 2a0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2a0>
 1a8:	ldr	x8, [sp, #8]
 1ac:	mov	w9, #0x1                   	// #1
 1b0:	stp	x9, x23, [sp, #48]
 1b4:	cmp	x8, #0x9
 1b8:	b.ne	354 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x354>  // b.any
 1bc:	ldr	x24, [sp, #32]
 1c0:	cbz	x24, 320 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x320>
 1c4:	mov	x0, x24
 1c8:	bl	0 <strlen>
 1cc:	mov	x25, x0
 1d0:	ldp	x8, x0, [x22, #16]
 1d4:	sub	x8, x8, x0
 1d8:	cmp	x25, x8
 1dc:	b.ls	334 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x334>  // b.plast
 1e0:	mov	x0, x22
 1e4:	mov	x1, x24
 1e8:	mov	x2, x25
 1ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1f0:	b	350 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x350>
 1f4:	mov	x21, xzr
 1f8:	ldr	x8, [sp, #72]
 1fc:	cbnz	x8, c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xc8>
 200:	mov	x23, xzr
 204:	ldr	x0, [sp, #96]
 208:	cbnz	x0, 114 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x114>
 20c:	mov	x22, xzr
 210:	cbnz	x23, 128 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x128>
 214:	cbz	x21, 2ac <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2ac>
 218:	cbz	x22, 2c4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c4>
 21c:	ldr	x3, [x20, #8]
 220:	mov	w0, wzr
 224:	mov	x1, x21
 228:	mov	x2, x22
 22c:	mov	x4, xzr
 230:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 234:	mov	x22, x0
 238:	b	2c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c8>
 23c:	ldrsw	x0, [sp, #64]
 240:	ldr	x1, [x20, #8]
 244:	mov	w2, wzr
 248:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 24c:	mov	x21, x0
 250:	ldr	x8, [sp, #72]
 254:	cbnz	x8, c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xc8>
 258:	b	200 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x200>
 25c:	ldrsw	x0, [sp, #88]
 260:	ldr	x1, [x20, #8]
 264:	mov	w2, wzr
 268:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 26c:	mov	x23, x0
 270:	ldr	x0, [sp, #96]
 274:	cbnz	x0, 114 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x114>
 278:	b	20c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x20c>
 27c:	mov	w0, #0x1                   	// #1
 280:	mov	x1, x23
 284:	mov	x2, x3
 288:	mov	x3, xzr
 28c:	bl	0 <_ZN4llvm11MCUnaryExpr6createENS0_6OpcodeEPKNS_6MCExprERNS_9MCContextENS_5SMLocE>
 290:	mov	x1, x0
 294:	cbnz	x22, 14c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x14c>
 298:	mov	x22, x1
 29c:	b	2c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c8>
 2a0:	tbz	w21, #0, 350 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x350>
 2a4:	str	x24, [sp, #96]
 2a8:	b	350 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x350>
 2ac:	cbnz	x22, 2c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c8>
 2b0:	ldr	x1, [x20, #8]
 2b4:	mov	x0, xzr
 2b8:	mov	w2, wzr
 2bc:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 2c0:	b	234 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x234>
 2c4:	mov	x22, x21
 2c8:	ldr	x0, [x20, #16]
 2cc:	ldr	w2, [sp, #104]
 2d0:	mov	x1, x22
 2d4:	ldr	x8, [x0]
 2d8:	ldr	x8, [x8, #16]
 2dc:	blr	x8
 2e0:	cbz	x0, 44c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x44c>
 2e4:	ldp	w8, w9, [x19, #24]
 2e8:	mov	x20, x0
 2ec:	cmp	w8, w9
 2f0:	b.cs	498 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x498>  // b.hs, b.nlast
 2f4:	ldr	x9, [x19, #16]
 2f8:	mov	w10, #0x4                   	// #4
 2fc:	add	x8, x9, w8, uxtw #4
 300:	stp	x10, x20, [x8]
 304:	ldp	w8, w9, [x19, #24]
 308:	cmp	w8, w9
 30c:	b.cs	4b4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x4b4>  // b.hs, b.nlast
 310:	add	w8, w8, #0x1
 314:	mov	w0, #0x1                   	// #1
 318:	str	w8, [x19, #24]
 31c:	b	44c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x44c>
 320:	mov	x25, xzr
 324:	ldp	x8, x0, [x22, #16]
 328:	sub	x8, x8, x0
 32c:	cmp	x25, x8
 330:	b.hi	1e0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1e0>  // b.pmore
 334:	cbz	x25, 350 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x350>
 338:	mov	x1, x24
 33c:	mov	x2, x25
 340:	bl	0 <memcpy>
 344:	ldr	x8, [x22, #24]
 348:	add	x8, x8, x25
 34c:	str	x8, [x22, #24]
 350:	ldr	x8, [sp, #8]
 354:	cmp	x8, #0x5
 358:	b.eq	384 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x384>  // b.none
 35c:	cmp	x8, #0x1
 360:	b.ne	440 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>  // b.any
 364:	ldp	x9, x8, [x22, #16]
 368:	sub	x9, x9, x8
 36c:	cmp	x9, #0x10
 370:	b.hi	3e4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3e4>  // b.pmore
 374:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 378:	add	x1, x1, #0x0
 37c:	mov	w2, #0x11                  	// #17
 380:	b	3a0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3a0>
 384:	ldp	x9, x8, [x22, #16]
 388:	sub	x9, x9, x8
 38c:	cmp	x9, #0xd
 390:	b.hi	468 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x468>  // b.pmore
 394:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 398:	add	x1, x1, #0x0
 39c:	mov	w2, #0xe                   	// #14
 3a0:	mov	x0, x22
 3a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3a8:	mov	x22, x0
 3ac:	ldr	x24, [sp, #32]
 3b0:	cbz	x24, 410 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x410>
 3b4:	mov	x0, x24
 3b8:	bl	0 <strlen>
 3bc:	mov	x25, x0
 3c0:	ldp	x8, x0, [x22, #16]
 3c4:	sub	x8, x8, x0
 3c8:	cmp	x25, x8
 3cc:	b.ls	424 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x424>  // b.plast
 3d0:	mov	x0, x22
 3d4:	mov	x1, x24
 3d8:	mov	x2, x25
 3dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3e0:	b	440 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>
 3e4:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3e8:	add	x9, x9, #0x0
 3ec:	ldr	q0, [x9]
 3f0:	mov	w9, #0x20                  	// #32
 3f4:	strb	w9, [x8, #16]
 3f8:	str	q0, [x8]
 3fc:	ldr	x8, [x22, #24]
 400:	add	x8, x8, #0x11
 404:	str	x8, [x22, #24]
 408:	ldr	x24, [sp, #32]
 40c:	cbnz	x24, 3b4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3b4>
 410:	mov	x25, xzr
 414:	ldp	x8, x0, [x22, #16]
 418:	sub	x8, x8, x0
 41c:	cmp	x25, x8
 420:	b.hi	3d0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3d0>  // b.pmore
 424:	cbz	x25, 440 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x440>
 428:	mov	x1, x24
 42c:	mov	x2, x25
 430:	bl	0 <memcpy>
 434:	ldr	x8, [x22, #24]
 438:	add	x8, x8, x25
 43c:	str	x8, [x22, #24]
 440:	cbnz	x23, 74 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x74>
 444:	tbnz	w21, #0, 74 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x74>
 448:	mov	w0, wzr
 44c:	ldp	x20, x19, [sp, #176]
 450:	ldp	x22, x21, [sp, #160]
 454:	ldp	x24, x23, [sp, #144]
 458:	ldr	x25, [sp, #128]
 45c:	ldp	x29, x30, [sp, #112]
 460:	add	sp, sp, #0xc0
 464:	ret
 468:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 46c:	add	x9, x9, #0x0
 470:	ldur	x10, [x9, #6]
 474:	ldr	x9, [x9]
 478:	stur	x10, [x8, #6]
 47c:	str	x9, [x8]
 480:	ldr	x8, [x22, #24]
 484:	add	x8, x8, #0xe
 488:	str	x8, [x22, #24]
 48c:	ldr	x24, [sp, #32]
 490:	cbnz	x24, 3b4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3b4>
 494:	b	410 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x410>
 498:	add	x0, x19, #0x10
 49c:	add	x1, x0, #0x10
 4a0:	mov	w3, #0x10                  	// #16
 4a4:	mov	x2, xzr
 4a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 4ac:	ldr	w8, [x19, #24]
 4b0:	b	2f4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2f4>
 4b4:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4b8:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4bc:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4c0:	add	x0, x0, #0x0
 4c4:	add	x1, x1, #0x0
 4c8:	add	x3, x3, #0x0
 4cc:	mov	w2, #0x43                  	// #67
 4d0:	bl	0 <__assert_fail>

00000000000004d4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>:
 4d4:	sub	sp, sp, #0x40
 4d8:	stp	x29, x30, [sp, #16]
 4dc:	str	x21, [sp, #32]
 4e0:	stp	x20, x19, [sp, #48]
 4e4:	add	x29, sp, #0x10
 4e8:	ldr	x9, [x0, #32]
 4ec:	cbz	x9, 8c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f4>
 4f0:	mov	w10, #0x2                   	// #2
 4f4:	str	x10, [x29, #24]
 4f8:	ldr	x0, [x0, #40]
 4fc:	mov	x8, x2
 500:	mov	x19, x1
 504:	add	x2, x29, #0x18
 508:	add	x4, sp, #0x8
 50c:	mov	x1, x8
 510:	blr	x9
 514:	ldr	x8, [x29, #24]
 518:	sub	x8, x8, #0x2
 51c:	cmp	x8, #0x6
 520:	b.hi	8c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f4>  // b.pmore
 524:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 528:	add	x9, x9, #0x0
 52c:	adr	x10, 53c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x68>
 530:	ldrb	w11, [x9, x8]
 534:	add	x10, x10, x11, lsl #2
 538:	br	x10
 53c:	ldp	x9, x8, [x19, #16]
 540:	sub	x9, x9, x8
 544:	cmp	x9, #0x1c
 548:	b.hi	6c0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1ec>  // b.pmore
 54c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 550:	add	x1, x1, #0x0
 554:	mov	w2, #0x1d                  	// #29
 558:	b	67c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1a8>
 55c:	ldp	x9, x8, [x19, #16]
 560:	sub	x9, x9, x8
 564:	cmp	x9, #0x12
 568:	b.hi	71c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x248>  // b.pmore
 56c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 570:	add	x1, x1, #0x0
 574:	mov	w2, #0x13                  	// #19
 578:	mov	x0, x19
 57c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 580:	ldr	x20, [sp, #8]
 584:	cbz	x20, 74c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x278>
 588:	mov	x0, x20
 58c:	bl	0 <strlen>
 590:	mov	x2, x0
 594:	b	750 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x27c>
 598:	ldp	x9, x8, [x19, #16]
 59c:	sub	x9, x9, x8
 5a0:	cmp	x9, #0x14
 5a4:	b.hi	778 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2a4>  // b.pmore
 5a8:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 5ac:	add	x1, x1, #0x0
 5b0:	mov	w2, #0x15                  	// #21
 5b4:	mov	x0, x19
 5b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 5bc:	mov	x19, x0
 5c0:	ldr	x20, [sp, #8]
 5c4:	cbz	x20, 7a4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2d0>
 5c8:	mov	x0, x20
 5cc:	bl	0 <strlen>
 5d0:	mov	x21, x0
 5d4:	ldp	x8, x0, [x19, #16]
 5d8:	sub	x8, x8, x0
 5dc:	cmp	x21, x8
 5e0:	b.ls	7b8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x2e4>  // b.plast
 5e4:	mov	x0, x19
 5e8:	mov	x1, x20
 5ec:	mov	x2, x21
 5f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 5f4:	mov	x19, x0
 5f8:	ldr	x0, [x0, #24]
 5fc:	b	7d4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x300>
 600:	ldp	x9, x8, [x19, #16]
 604:	sub	x9, x9, x8
 608:	cmp	x9, #0xd
 60c:	b.hi	7f8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x324>  // b.pmore
 610:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 614:	add	x1, x1, #0x0
 618:	mov	w2, #0xe                   	// #14
 61c:	b	67c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1a8>
 620:	ldp	x9, x8, [x19, #16]
 624:	sub	x9, x9, x8
 628:	cmp	x9, #0x11
 62c:	b.hi	828 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x354>  // b.pmore
 630:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 634:	add	x1, x1, #0x0
 638:	mov	w2, #0x12                  	// #18
 63c:	b	67c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1a8>
 640:	ldp	x9, x8, [x19, #16]
 644:	sub	x9, x9, x8
 648:	cmp	x9, #0x12
 64c:	b.hi	858 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x384>  // b.pmore
 650:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 654:	add	x1, x1, #0x0
 658:	mov	w2, #0x13                  	// #19
 65c:	b	67c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1a8>
 660:	ldp	x9, x8, [x19, #16]
 664:	sub	x9, x9, x8
 668:	cmp	x9, #0xf
 66c:	b.hi	88c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3b8>  // b.pmore
 670:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 674:	add	x1, x1, #0x0
 678:	mov	w2, #0x10                  	// #16
 67c:	mov	x0, x19
 680:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 684:	mov	x19, x0
 688:	ldr	x20, [sp, #8]
 68c:	cbz	x20, 6ec <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x218>
 690:	mov	x0, x20
 694:	bl	0 <strlen>
 698:	mov	x21, x0
 69c:	ldp	x8, x0, [x19, #16]
 6a0:	sub	x8, x8, x0
 6a4:	cmp	x21, x8
 6a8:	b.ls	700 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x22c>  // b.plast
 6ac:	mov	x0, x19
 6b0:	mov	x1, x20
 6b4:	mov	x2, x21
 6b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 6bc:	b	8c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f4>
 6c0:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 6c4:	add	x9, x9, #0x0
 6c8:	ldur	q0, [x9, #13]
 6cc:	ldr	q1, [x9]
 6d0:	stur	q0, [x8, #13]
 6d4:	str	q1, [x8]
 6d8:	ldr	x8, [x19, #24]
 6dc:	add	x8, x8, #0x1d
 6e0:	str	x8, [x19, #24]
 6e4:	ldr	x20, [sp, #8]
 6e8:	cbnz	x20, 690 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1bc>
 6ec:	mov	x21, xzr
 6f0:	ldp	x8, x0, [x19, #16]
 6f4:	sub	x8, x8, x0
 6f8:	cmp	x21, x8
 6fc:	b.hi	6ac <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1d8>  // b.pmore
 700:	cbz	x21, 8c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f4>
 704:	mov	x1, x20
 708:	mov	x2, x21
 70c:	bl	0 <memcpy>
 710:	ldr	x8, [x19, #24]
 714:	add	x8, x8, x21
 718:	b	8c4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f0>
 71c:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 720:	add	x9, x9, #0x0
 724:	ldr	q0, [x9]
 728:	mov	w9, #0x3a72                	// #14962
 72c:	movk	w9, #0x2220, lsl #16
 730:	stur	w9, [x8, #15]
 734:	str	q0, [x8]
 738:	ldr	x8, [x19, #24]
 73c:	add	x8, x8, #0x13
 740:	str	x8, [x19, #24]
 744:	ldr	x20, [sp, #8]
 748:	cbnz	x20, 588 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xb4>
 74c:	mov	x2, xzr
 750:	mov	x0, x19
 754:	mov	x1, x20
 758:	mov	w3, wzr
 75c:	bl	0 <_ZN4llvm11raw_ostream13write_escapedENS_9StringRefEb>
 760:	ldp	x9, x8, [x19, #16]
 764:	cmp	x9, x8
 768:	b.eq	7e0 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x30c>  // b.none
 76c:	mov	w9, #0x22                  	// #34
 770:	strb	w9, [x8]
 774:	b	8bc <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3e8>
 778:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 77c:	add	x9, x9, #0x0
 780:	ldur	x10, [x9, #13]
 784:	ldr	q0, [x9]
 788:	stur	x10, [x8, #13]
 78c:	str	q0, [x8]
 790:	ldr	x8, [x19, #24]
 794:	add	x8, x8, #0x15
 798:	str	x8, [x19, #24]
 79c:	ldr	x20, [sp, #8]
 7a0:	cbnz	x20, 5c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0xf4>
 7a4:	mov	x21, xzr
 7a8:	ldp	x8, x0, [x19, #16]
 7ac:	sub	x8, x8, x0
 7b0:	cmp	x21, x8
 7b4:	b.hi	5e4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x110>  // b.pmore
 7b8:	cbz	x21, 7d4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x300>
 7bc:	mov	x1, x20
 7c0:	mov	x2, x21
 7c4:	bl	0 <memcpy>
 7c8:	ldr	x8, [x19, #24]
 7cc:	add	x0, x8, x21
 7d0:	str	x0, [x19, #24]
 7d4:	ldr	x8, [x19, #16]
 7d8:	cmp	x8, x0
 7dc:	b.ne	8b4 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3e0>  // b.any
 7e0:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 7e4:	add	x1, x1, #0x0
 7e8:	mov	w2, #0x1                   	// #1
 7ec:	mov	x0, x19
 7f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 7f4:	b	8c8 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x3f4>
 7f8:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 7fc:	add	x9, x9, #0x0
 800:	ldur	x10, [x9, #6]
 804:	ldr	x9, [x9]
 808:	stur	x10, [x8, #6]
 80c:	str	x9, [x8]
 810:	ldr	x8, [x19, #24]
 814:	add	x8, x8, #0xe
 818:	str	x8, [x19, #24]
 81c:	ldr	x20, [sp, #8]
 820:	cbnz	x20, 690 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1bc>
 824:	b	6ec <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x218>
 828:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 82c:	add	x9, x9, #0x0
 830:	ldr	q0, [x9]
 834:	mov	w9, #0x203a                	// #8250
 838:	strh	w9, [x8, #16]
 83c:	str	q0, [x8]
 840:	ldr	x8, [x19, #24]
 844:	add	x8, x8, #0x12
 848:	str	x8, [x19, #24]
 84c:	ldr	x20, [sp, #8]
 850:	cbnz	x20, 690 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1bc>
 854:	b	6ec <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x218>
 858:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 85c:	add	x9, x9, #0x0
 860:	ldr	q0, [x9]
 864:	mov	w9, #0x6665                	// #26213
 868:	movk	w9, #0x203a, lsl #16
 86c:	stur	w9, [x8, #15]
 870:	str	q0, [x8]
 874:	ldr	x8, [x19, #24]
 878:	add	x8, x8, #0x13
 87c:	str	x8, [x19, #24]
 880:	ldr	x20, [sp, #8]
 884:	cbnz	x20, 690 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1bc>
 888:	b	6ec <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x218>
 88c:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 890:	add	x9, x9, #0x0
 894:	ldr	q0, [x9]
 898:	str	q0, [x8]
 89c:	ldr	x8, [x19, #24]
 8a0:	add	x8, x8, #0x10
 8a4:	str	x8, [x19, #24]
 8a8:	ldr	x20, [sp, #8]
 8ac:	cbnz	x20, 690 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x1bc>
 8b0:	b	6ec <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x218>
 8b4:	mov	w8, #0x22                  	// #34
 8b8:	strb	w8, [x0]
 8bc:	ldr	x8, [x19, #24]
 8c0:	add	x8, x8, #0x1
 8c4:	str	x8, [x19, #24]
 8c8:	ldp	x20, x19, [sp, #48]
 8cc:	ldr	x21, [sp, #32]
 8d0:	ldp	x29, x30, [sp, #16]
 8d4:	add	sp, sp, #0x40
 8d8:	ret

00000000000008dc <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>:
 8dc:	stp	x29, x30, [sp, #-64]!
 8e0:	str	x23, [sp, #16]
 8e4:	stp	x22, x21, [sp, #32]
 8e8:	stp	x20, x19, [sp, #48]
 8ec:	mov	x29, sp
 8f0:	cbz	x4, 944 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE+0x68>
 8f4:	mov	w0, #0x30                  	// #48
 8f8:	mov	x23, x5
 8fc:	mov	x21, x4
 900:	mov	x19, x3
 904:	mov	x20, x2
 908:	mov	x22, x1
 90c:	bl	0 <_Znwm>
 910:	ldr	x8, [x23]
 914:	str	xzr, [x23]
 918:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 91c:	ldr	x9, [x9]
 920:	stp	x8, x22, [x0, #16]
 924:	stp	x20, x19, [x0, #32]
 928:	ldp	x20, x19, [sp, #48]
 92c:	add	x9, x9, #0x10
 930:	stp	x9, x21, [x0]
 934:	ldp	x22, x21, [sp, #32]
 938:	ldr	x23, [sp, #16]
 93c:	ldp	x29, x30, [sp], #64
 940:	ret
 944:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 948:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 94c:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 950:	add	x0, x0, #0x0
 954:	add	x1, x1, #0x0
 958:	add	x3, x3, #0x0
 95c:	mov	w2, #0xc2                  	// #194
 960:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD0Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm12MCSymbolizerD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

MCRelocationInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>:
   0:	adrp	x8, 0 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
   4:	ldr	x8, [x8]
   8:	add	x8, x8, #0x10
   c:	stp	x8, x1, [x0]
  10:	ret

0000000000000014 <_ZN4llvm16MCRelocationInfoD1Ev>:
  14:	ret

0000000000000018 <_ZN4llvm16MCRelocationInfoD0Ev>:
  18:	b	0 <_ZdlPv>

000000000000001c <_ZN4llvm16MCRelocationInfo28createExprForCAPIVariantKindEPKNS_6MCExprEj>:
  1c:	cmp	w2, #0x0
  20:	csel	x0, x1, xzr, eq  // eq = none
  24:	ret

0000000000000028 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>:
  28:	stp	x29, x30, [sp, #-32]!
  2c:	str	x19, [sp, #16]
  30:	mov	x29, sp
  34:	mov	w0, #0x10                  	// #16
  38:	mov	x19, x1
  3c:	bl	0 <_Znwm>
  40:	adrp	x8, 0 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
  44:	ldr	x8, [x8]
  48:	add	x8, x8, #0x10
  4c:	stp	x8, x19, [x0]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

MCSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12MCSymbolizerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm12MCSymbolizerD1Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm12MCSymbolizerD1Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19, #16]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <_ZN4llvm12MCSymbolizerD0Ev>:
  44:	brk	#0x1
