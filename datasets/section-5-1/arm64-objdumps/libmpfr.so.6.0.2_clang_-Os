
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpfr.so.6.0.2_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000ba80 <.init>:
    ba80:	stp	x29, x30, [sp, #-16]!
    ba84:	mov	x29, sp
    ba88:	bl	cdc0 <__gmpfr_flags@plt>
    ba8c:	ldp	x29, x30, [sp], #16
    ba90:	ret

Disassembly of section .plt:

000000000000baa0 <mpfr_agm@plt-0x20>:
    baa0:	stp	x16, x30, [sp, #-16]!
    baa4:	adrp	x16, 70000 <__gmpfr_l2b@@Base+0x2e0>
    baa8:	ldr	x17, [x16, #4088]
    baac:	add	x16, x16, #0xff8
    bab0:	br	x17
    bab4:	nop
    bab8:	nop
    babc:	nop

000000000000bac0 <mpfr_agm@plt>:
    bac0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bac4:	ldr	x17, [x16]
    bac8:	add	x16, x16, #0x0
    bacc:	br	x17

000000000000bad0 <memcpy@plt>:
    bad0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bad4:	ldr	x17, [x16, #8]
    bad8:	add	x16, x16, #0x8
    badc:	br	x17

000000000000bae0 <__gmpz_get_si@plt>:
    bae0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bae4:	ldr	x17, [x16, #16]
    bae8:	add	x16, x16, #0x10
    baec:	br	x17

000000000000baf0 <__gmpz_tdiv_r_2exp@plt>:
    baf0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    baf4:	ldr	x17, [x16, #24]
    baf8:	add	x16, x16, #0x18
    bafc:	br	x17

000000000000bb00 <mpfr_set_ld@plt>:
    bb00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb04:	ldr	x17, [x16, #32]
    bb08:	add	x16, x16, #0x20
    bb0c:	br	x17

000000000000bb10 <mpfr_mul_ui@plt>:
    bb10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb14:	ldr	x17, [x16, #40]
    bb18:	add	x16, x16, #0x28
    bb1c:	br	x17

000000000000bb20 <__gmpn_tdiv_qr@plt>:
    bb20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb24:	ldr	x17, [x16, #48]
    bb28:	add	x16, x16, #0x30
    bb2c:	br	x17

000000000000bb30 <mpfr_cot@plt>:
    bb30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb34:	ldr	x17, [x16, #56]
    bb38:	add	x16, x16, #0x38
    bb3c:	br	x17

000000000000bb40 <mpfr_set_si_2exp@plt>:
    bb40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb44:	ldr	x17, [x16, #64]
    bb48:	add	x16, x16, #0x40
    bb4c:	br	x17

000000000000bb50 <__gmpz_scan1@plt>:
    bb50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb54:	ldr	x17, [x16, #72]
    bb58:	add	x16, x16, #0x48
    bb5c:	br	x17

000000000000bb60 <mpfr_random_deviate_value@plt>:
    bb60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb64:	ldr	x17, [x16, #80]
    bb68:	add	x16, x16, #0x50
    bb6c:	br	x17

000000000000bb70 <strlen@plt>:
    bb70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb74:	ldr	x17, [x16, #88]
    bb78:	add	x16, x16, #0x58
    bb7c:	br	x17

000000000000bb80 <fputs@plt>:
    bb80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb84:	ldr	x17, [x16, #96]
    bb88:	add	x16, x16, #0x60
    bb8c:	br	x17

000000000000bb90 <__gmpz_tdiv_qr@plt>:
    bb90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bb94:	ldr	x17, [x16, #104]
    bb98:	add	x16, x16, #0x68
    bb9c:	br	x17

000000000000bba0 <__gmpn_copyd@plt>:
    bba0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bba4:	ldr	x17, [x16, #112]
    bba8:	add	x16, x16, #0x70
    bbac:	br	x17

000000000000bbb0 <mpfr_cosh@plt>:
    bbb0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bbb4:	ldr	x17, [x16, #120]
    bbb8:	add	x16, x16, #0x78
    bbbc:	br	x17

000000000000bbc0 <mpfr_tanh@plt>:
    bbc0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bbc4:	ldr	x17, [x16, #128]
    bbc8:	add	x16, x16, #0x80
    bbcc:	br	x17

000000000000bbd0 <mpfr_ui_pow_ui@plt>:
    bbd0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bbd4:	ldr	x17, [x16, #136]
    bbd8:	add	x16, x16, #0x88
    bbdc:	br	x17

000000000000bbe0 <__gmpz_tdiv_q@plt>:
    bbe0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bbe4:	ldr	x17, [x16, #144]
    bbe8:	add	x16, x16, #0x90
    bbec:	br	x17

000000000000bbf0 <__gmpfr_ceil_exp2@plt>:
    bbf0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bbf4:	ldr	x17, [x16, #152]
    bbf8:	add	x16, x16, #0x98
    bbfc:	br	x17

000000000000bc00 <mpfr_set_nan@plt>:
    bc00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc04:	ldr	x17, [x16, #160]
    bc08:	add	x16, x16, #0xa0
    bc0c:	br	x17

000000000000bc10 <__gmpz_cdiv_q_2exp@plt>:
    bc10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc14:	ldr	x17, [x16, #168]
    bc18:	add	x16, x16, #0xa8
    bc1c:	br	x17

000000000000bc20 <mpfr_sub@plt>:
    bc20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc24:	ldr	x17, [x16, #176]
    bc28:	add	x16, x16, #0xb0
    bc2c:	br	x17

000000000000bc30 <__gmpn_set_str@plt>:
    bc30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc34:	ldr	x17, [x16, #184]
    bc38:	add	x16, x16, #0xb8
    bc3c:	br	x17

000000000000bc40 <mpfr_mul_2si@plt>:
    bc40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc44:	ldr	x17, [x16, #192]
    bc48:	add	x16, x16, #0xc0
    bc4c:	br	x17

000000000000bc50 <mpfr_gamma_one_and_two_third@plt>:
    bc50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc54:	ldr	x17, [x16, #200]
    bc58:	add	x16, x16, #0xc8
    bc5c:	br	x17

000000000000bc60 <mpfr_cmp_z@plt>:
    bc60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc64:	ldr	x17, [x16, #208]
    bc68:	add	x16, x16, #0xd0
    bc6c:	br	x17

000000000000bc70 <mpfr_fits_intmax_p@plt>:
    bc70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc74:	ldr	x17, [x16, #216]
    bc78:	add	x16, x16, #0xd8
    bc7c:	br	x17

000000000000bc80 <mpfr_init@plt>:
    bc80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc84:	ldr	x17, [x16, #224]
    bc88:	add	x16, x16, #0xe0
    bc8c:	br	x17

000000000000bc90 <mpfr_tan@plt>:
    bc90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bc94:	ldr	x17, [x16, #232]
    bc98:	add	x16, x16, #0xe8
    bc9c:	br	x17

000000000000bca0 <mpfr_fdump@plt>:
    bca0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bca4:	ldr	x17, [x16, #240]
    bca8:	add	x16, x16, #0xf0
    bcac:	br	x17

000000000000bcb0 <__gmpz_cmpabs_ui@plt>:
    bcb0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bcb4:	ldr	x17, [x16, #248]
    bcb8:	add	x16, x16, #0xf8
    bcbc:	br	x17

000000000000bcc0 <mpfr_strtofr@plt>:
    bcc0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bcc4:	ldr	x17, [x16, #256]
    bcc8:	add	x16, x16, #0x100
    bccc:	br	x17

000000000000bcd0 <mpfr_vasnprintf_aux@plt>:
    bcd0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bcd4:	ldr	x17, [x16, #264]
    bcd8:	add	x16, x16, #0x108
    bcdc:	br	x17

000000000000bce0 <__gmpz_sub_ui@plt>:
    bce0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bce4:	ldr	x17, [x16, #272]
    bce8:	add	x16, x16, #0x110
    bcec:	br	x17

000000000000bcf0 <mpfr_ubf_zexp2exp@plt>:
    bcf0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bcf4:	ldr	x17, [x16, #280]
    bcf8:	add	x16, x16, #0x118
    bcfc:	br	x17

000000000000bd00 <__gmp_get_memory_functions@plt>:
    bd00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd04:	ldr	x17, [x16, #288]
    bd08:	add	x16, x16, #0x120
    bd0c:	br	x17

000000000000bd10 <__gmpz_sqrt@plt>:
    bd10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd14:	ldr	x17, [x16, #296]
    bd18:	add	x16, x16, #0x128
    bd1c:	br	x17

000000000000bd20 <__gmpfr_int_ceil_log2@plt>:
    bd20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd24:	ldr	x17, [x16, #304]
    bd28:	add	x16, x16, #0x130
    bd2c:	br	x17

000000000000bd30 <mpfr_mulhigh_n@plt>:
    bd30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd34:	ldr	x17, [x16, #312]
    bd38:	add	x16, x16, #0x138
    bd3c:	br	x17

000000000000bd40 <mpfr_set_erangeflag@plt>:
    bd40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd44:	ldr	x17, [x16, #320]
    bd48:	add	x16, x16, #0x140
    bd4c:	br	x17

000000000000bd50 <mpfr_get_ui@plt>:
    bd50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd54:	ldr	x17, [x16, #328]
    bd58:	add	x16, x16, #0x148
    bd5c:	br	x17

000000000000bd60 <__gmpz_set_ui@plt>:
    bd60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd64:	ldr	x17, [x16, #336]
    bd68:	add	x16, x16, #0x150
    bd6c:	br	x17

000000000000bd70 <__gmpn_lshift@plt>:
    bd70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd74:	ldr	x17, [x16, #344]
    bd78:	add	x16, x16, #0x158
    bd7c:	br	x17

000000000000bd80 <__gmpfr_floor_log2@plt>:
    bd80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd84:	ldr	x17, [x16, #352]
    bd88:	add	x16, x16, #0x160
    bd8c:	br	x17

000000000000bd90 <__gmpn_rshift@plt>:
    bd90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bd94:	ldr	x17, [x16, #360]
    bd98:	add	x16, x16, #0x168
    bd9c:	br	x17

000000000000bda0 <mpfr_cmp_d@plt>:
    bda0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bda4:	ldr	x17, [x16, #368]
    bda8:	add	x16, x16, #0x170
    bdac:	br	x17

000000000000bdb0 <__cxa_finalize@plt>:
    bdb0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bdb4:	ldr	x17, [x16, #376]
    bdb8:	add	x16, x16, #0x178
    bdbc:	br	x17

000000000000bdc0 <sprintf@plt>:
    bdc0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bdc4:	ldr	x17, [x16, #384]
    bdc8:	add	x16, x16, #0x180
    bdcc:	br	x17

000000000000bdd0 <putc@plt>:
    bdd0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bdd4:	ldr	x17, [x16, #392]
    bdd8:	add	x16, x16, #0x188
    bddc:	br	x17

000000000000bde0 <mpfr_get_d@plt>:
    bde0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bde4:	ldr	x17, [x16, #400]
    bde8:	add	x16, x16, #0x190
    bdec:	br	x17

000000000000bdf0 <mpfr_set_f@plt>:
    bdf0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bdf4:	ldr	x17, [x16, #408]
    bdf8:	add	x16, x16, #0x198
    bdfc:	br	x17

000000000000be00 <mpfr_mul@plt>:
    be00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be04:	ldr	x17, [x16, #416]
    be08:	add	x16, x16, #0x1a0
    be0c:	br	x17

000000000000be10 <mpfr_sub_z@plt>:
    be10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be14:	ldr	x17, [x16, #424]
    be18:	add	x16, x16, #0x1a8
    be1c:	br	x17

000000000000be20 <mpfr_neg@plt>:
    be20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be24:	ldr	x17, [x16, #432]
    be28:	add	x16, x16, #0x1b0
    be2c:	br	x17

000000000000be30 <mpfr_exp10@plt>:
    be30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be34:	ldr	x17, [x16, #440]
    be38:	add	x16, x16, #0x1b8
    be3c:	br	x17

000000000000be40 <mpfr_pow@plt>:
    be40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be44:	ldr	x17, [x16, #448]
    be48:	add	x16, x16, #0x1c0
    be4c:	br	x17

000000000000be50 <fputc@plt>:
    be50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be54:	ldr	x17, [x16, #456]
    be58:	add	x16, x16, #0x1c8
    be5c:	br	x17

000000000000be60 <mpfr_cmp2@plt>:
    be60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be64:	ldr	x17, [x16, #464]
    be68:	add	x16, x16, #0x1d0
    be6c:	br	x17

000000000000be70 <mpfr_tmp_allocate@plt>:
    be70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be74:	ldr	x17, [x16, #472]
    be78:	add	x16, x16, #0x1d8
    be7c:	br	x17

000000000000be80 <mpfr_nextbelow@plt>:
    be80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be84:	ldr	x17, [x16, #480]
    be88:	add	x16, x16, #0x1e0
    be8c:	br	x17

000000000000be90 <__gmpz_sub@plt>:
    be90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    be94:	ldr	x17, [x16, #488]
    be98:	add	x16, x16, #0x1e8
    be9c:	br	x17

000000000000bea0 <mpfr_random_deviate_clear@plt>:
    bea0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bea4:	ldr	x17, [x16, #496]
    bea8:	add	x16, x16, #0x1f0
    beac:	br	x17

000000000000beb0 <mpfr_get_z@plt>:
    beb0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    beb4:	ldr	x17, [x16, #504]
    beb8:	add	x16, x16, #0x1f8
    bebc:	br	x17

000000000000bec0 <__gmpn_com@plt>:
    bec0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bec4:	ldr	x17, [x16, #512]
    bec8:	add	x16, x16, #0x200
    becc:	br	x17

000000000000bed0 <mpfr_exp_3@plt>:
    bed0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bed4:	ldr	x17, [x16, #520]
    bed8:	add	x16, x16, #0x208
    bedc:	br	x17

000000000000bee0 <__gmpz_fdiv_q@plt>:
    bee0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bee4:	ldr	x17, [x16, #528]
    bee8:	add	x16, x16, #0x210
    beec:	br	x17

000000000000bef0 <mpfr_set_d@plt>:
    bef0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bef4:	ldr	x17, [x16, #536]
    bef8:	add	x16, x16, #0x218
    befc:	br	x17

000000000000bf00 <mpfr_fits_ulong_p@plt>:
    bf00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf04:	ldr	x17, [x16, #544]
    bf08:	add	x16, x16, #0x220
    bf0c:	br	x17

000000000000bf10 <__gmpn_sub_n@plt>:
    bf10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf14:	ldr	x17, [x16, #552]
    bf18:	add	x16, x16, #0x228
    bf1c:	br	x17

000000000000bf20 <mpfr_clear_cache@plt>:
    bf20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf24:	ldr	x17, [x16, #560]
    bf28:	add	x16, x16, #0x230
    bf2c:	br	x17

000000000000bf30 <mpfr_div_ui2@plt>:
    bf30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf34:	ldr	x17, [x16, #568]
    bf38:	add	x16, x16, #0x238
    bf3c:	br	x17

000000000000bf40 <__gmpz_fits_slong_p@plt>:
    bf40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf44:	ldr	x17, [x16, #576]
    bf48:	add	x16, x16, #0x240
    bf4c:	br	x17

000000000000bf50 <localeconv@plt>:
    bf50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf54:	ldr	x17, [x16, #584]
    bf58:	add	x16, x16, #0x248
    bf5c:	br	x17

000000000000bf60 <__gmpz_cdiv_q_ui@plt>:
    bf60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf64:	ldr	x17, [x16, #592]
    bf68:	add	x16, x16, #0x250
    bf6c:	br	x17

000000000000bf70 <mpfr_frac@plt>:
    bf70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf74:	ldr	x17, [x16, #600]
    bf78:	add	x16, x16, #0x258
    bf7c:	br	x17

000000000000bf80 <mpfr_set_prec@plt>:
    bf80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf84:	ldr	x17, [x16, #608]
    bf88:	add	x16, x16, #0x260
    bf8c:	br	x17

000000000000bf90 <__gmpz_cmpabs@plt>:
    bf90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bf94:	ldr	x17, [x16, #616]
    bf98:	add	x16, x16, #0x268
    bf9c:	br	x17

000000000000bfa0 <mpfr_pow_z@plt>:
    bfa0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bfa4:	ldr	x17, [x16, #624]
    bfa8:	add	x16, x16, #0x270
    bfac:	br	x17

000000000000bfb0 <mpfr_powerof2_raw@plt>:
    bfb0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bfb4:	ldr	x17, [x16, #632]
    bfb8:	add	x16, x16, #0x278
    bfbc:	br	x17

000000000000bfc0 <__gmpz_setbit@plt>:
    bfc0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bfc4:	ldr	x17, [x16, #640]
    bfc8:	add	x16, x16, #0x280
    bfcc:	br	x17

000000000000bfd0 <__gmpfr_isqrt@plt>:
    bfd0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bfd4:	ldr	x17, [x16, #648]
    bfd8:	add	x16, x16, #0x288
    bfdc:	br	x17

000000000000bfe0 <mpfr_rint_trunc@plt>:
    bfe0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bfe4:	ldr	x17, [x16, #656]
    bfe8:	add	x16, x16, #0x290
    bfec:	br	x17

000000000000bff0 <mpfr_overflow@plt>:
    bff0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    bff4:	ldr	x17, [x16, #664]
    bff8:	add	x16, x16, #0x298
    bffc:	br	x17

000000000000c000 <mpfr_cmp_ui_2exp@plt>:
    c000:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c004:	ldr	x17, [x16, #672]
    c008:	add	x16, x16, #0x2a0
    c00c:	br	x17

000000000000c010 <__gmpz_divexact@plt>:
    c010:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c014:	ldr	x17, [x16, #680]
    c018:	add	x16, x16, #0x2a8
    c01c:	br	x17

000000000000c020 <mpfr_pow_ui@plt>:
    c020:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c024:	ldr	x17, [x16, #688]
    c028:	add	x16, x16, #0x2b0
    c02c:	br	x17

000000000000c030 <mpfr_ubf_mul_exact@plt>:
    c030:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c034:	ldr	x17, [x16, #696]
    c038:	add	x16, x16, #0x2b8
    c03c:	br	x17

000000000000c040 <mpfr_mpz_init@plt>:
    c040:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c044:	ldr	x17, [x16, #704]
    c048:	add	x16, x16, #0x2c0
    c04c:	br	x17

000000000000c050 <__gmpz_set@plt>:
    c050:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c054:	ldr	x17, [x16, #712]
    c058:	add	x16, x16, #0x2c8
    c05c:	br	x17

000000000000c060 <mpfr_bernoulli_freecache@plt>:
    c060:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c064:	ldr	x17, [x16, #720]
    c068:	add	x16, x16, #0x2d0
    c06c:	br	x17

000000000000c070 <__gmpz_fac_ui@plt>:
    c070:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c074:	ldr	x17, [x16, #728]
    c078:	add	x16, x16, #0x2d8
    c07c:	br	x17

000000000000c080 <__gmpz_tstbit@plt>:
    c080:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c084:	ldr	x17, [x16, #736]
    c088:	add	x16, x16, #0x2e0
    c08c:	br	x17

000000000000c090 <__gmpz_mul@plt>:
    c090:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c094:	ldr	x17, [x16, #744]
    c098:	add	x16, x16, #0x2e8
    c09c:	br	x17

000000000000c0a0 <__gmpfr_set_uj_2exp@plt>:
    c0a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c0a4:	ldr	x17, [x16, #752]
    c0a8:	add	x16, x16, #0x2f0
    c0ac:	br	x17

000000000000c0b0 <mpfr_fits_uintmax_p@plt>:
    c0b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c0b4:	ldr	x17, [x16, #760]
    c0b8:	add	x16, x16, #0x2f8
    c0bc:	br	x17

000000000000c0c0 <mpfr_sincos_fast@plt>:
    c0c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c0c4:	ldr	x17, [x16, #768]
    c0c8:	add	x16, x16, #0x300
    c0cc:	br	x17

000000000000c0d0 <mpfr_z_sub@plt>:
    c0d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c0d4:	ldr	x17, [x16, #776]
    c0d8:	add	x16, x16, #0x308
    c0dc:	br	x17

000000000000c0e0 <__gmpz_tdiv_q_ui@plt>:
    c0e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c0e4:	ldr	x17, [x16, #784]
    c0e8:	add	x16, x16, #0x310
    c0ec:	br	x17

000000000000c0f0 <__gmp_vasprintf@plt>:
    c0f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c0f4:	ldr	x17, [x16, #792]
    c0f8:	add	x16, x16, #0x318
    c0fc:	br	x17

000000000000c100 <mpfr_sub_si@plt>:
    c100:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c104:	ldr	x17, [x16, #800]
    c108:	add	x16, x16, #0x320
    c10c:	br	x17

000000000000c110 <mpfr_clear@plt>:
    c110:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c114:	ldr	x17, [x16, #808]
    c118:	add	x16, x16, #0x328
    c11c:	br	x17

000000000000c120 <__gmpfr_set_sj@plt>:
    c120:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c124:	ldr	x17, [x16, #816]
    c128:	add	x16, x16, #0x330
    c12c:	br	x17

000000000000c130 <mpfr_log@plt>:
    c130:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c134:	ldr	x17, [x16, #824]
    c138:	add	x16, x16, #0x338
    c13c:	br	x17

000000000000c140 <mpfr_lgamma@plt>:
    c140:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c144:	ldr	x17, [x16, #832]
    c148:	add	x16, x16, #0x340
    c14c:	br	x17

000000000000c150 <__gmpfr_cuberoot@plt>:
    c150:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c154:	ldr	x17, [x16, #840]
    c158:	add	x16, x16, #0x348
    c15c:	br	x17

000000000000c160 <__gmp_asprintf@plt>:
    c160:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c164:	ldr	x17, [x16, #848]
    c168:	add	x16, x16, #0x350
    c16c:	br	x17

000000000000c170 <mpfr_setmax@plt>:
    c170:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c174:	ldr	x17, [x16, #856]
    c178:	add	x16, x16, #0x358
    c17c:	br	x17

000000000000c180 <__gmpz_swap@plt>:
    c180:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c184:	ldr	x17, [x16, #864]
    c188:	add	x16, x16, #0x360
    c18c:	br	x17

000000000000c190 <mpfr_sub1sp@plt>:
    c190:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c194:	ldr	x17, [x16, #872]
    c198:	add	x16, x16, #0x368
    c19c:	br	x17

000000000000c1a0 <__gmpz_mul_ui@plt>:
    c1a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c1a4:	ldr	x17, [x16, #880]
    c1a8:	add	x16, x16, #0x370
    c1ac:	br	x17

000000000000c1b0 <memset@plt>:
    c1b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c1b4:	ldr	x17, [x16, #888]
    c1b8:	add	x16, x16, #0x378
    c1bc:	br	x17

000000000000c1c0 <mpfr_nextabove@plt>:
    c1c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c1c4:	ldr	x17, [x16, #896]
    c1c8:	add	x16, x16, #0x380
    c1cc:	br	x17

000000000000c1d0 <__gmpz_fdiv_q_2exp@plt>:
    c1d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c1d4:	ldr	x17, [x16, #904]
    c1d8:	add	x16, x16, #0x388
    c1dc:	br	x17

000000000000c1e0 <mpfr_divhigh_n@plt>:
    c1e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c1e4:	ldr	x17, [x16, #912]
    c1e8:	add	x16, x16, #0x390
    c1ec:	br	x17

000000000000c1f0 <mpfr_random_deviate_init@plt>:
    c1f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c1f4:	ldr	x17, [x16, #920]
    c1f8:	add	x16, x16, #0x398
    c1fc:	br	x17

000000000000c200 <mpfr_integer_p@plt>:
    c200:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c204:	ldr	x17, [x16, #928]
    c208:	add	x16, x16, #0x3a0
    c20c:	br	x17

000000000000c210 <mpfr_mpz_clear@plt>:
    c210:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c214:	ldr	x17, [x16, #936]
    c218:	add	x16, x16, #0x3a8
    c21c:	br	x17

000000000000c220 <__gmpf_set_ui@plt>:
    c220:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c224:	ldr	x17, [x16, #944]
    c228:	add	x16, x16, #0x3b0
    c22c:	br	x17

000000000000c230 <mpfr_get_si@plt>:
    c230:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c234:	ldr	x17, [x16, #952]
    c238:	add	x16, x16, #0x3b8
    c23c:	br	x17

000000000000c240 <mpfr_add@plt>:
    c240:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c244:	ldr	x17, [x16, #960]
    c248:	add	x16, x16, #0x3c0
    c24c:	br	x17

000000000000c250 <mpfr_clears@plt>:
    c250:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c254:	ldr	x17, [x16, #968]
    c258:	add	x16, x16, #0x3c8
    c25c:	br	x17

000000000000c260 <mpfr_reallocate_func@plt>:
    c260:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c264:	ldr	x17, [x16, #976]
    c268:	add	x16, x16, #0x3d0
    c26c:	br	x17

000000000000c270 <mpfr_log2@plt>:
    c270:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c274:	ldr	x17, [x16, #984]
    c278:	add	x16, x16, #0x3d8
    c27c:	br	x17

000000000000c280 <mpfr_erf@plt>:
    c280:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c284:	ldr	x17, [x16, #992]
    c288:	add	x16, x16, #0x3e0
    c28c:	br	x17

000000000000c290 <__gmpz_mul_2exp@plt>:
    c290:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c294:	ldr	x17, [x16, #1000]
    c298:	add	x16, x16, #0x3e8
    c29c:	br	x17

000000000000c2a0 <mpfr_free_pool@plt>:
    c2a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c2a4:	ldr	x17, [x16, #1008]
    c2a8:	add	x16, x16, #0x3f0
    c2ac:	br	x17

000000000000c2b0 <mpfr_set_z@plt>:
    c2b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c2b4:	ldr	x17, [x16, #1016]
    c2b8:	add	x16, x16, #0x3f8
    c2bc:	br	x17

000000000000c2c0 <mpfr_fma@plt>:
    c2c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c2c4:	ldr	x17, [x16, #1024]
    c2c8:	add	x16, x16, #0x400
    c2cc:	br	x17

000000000000c2d0 <mpfr_add_ui@plt>:
    c2d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c2d4:	ldr	x17, [x16, #1032]
    c2d8:	add	x16, x16, #0x408
    c2dc:	br	x17

000000000000c2e0 <mpfr_clear_flags@plt>:
    c2e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c2e4:	ldr	x17, [x16, #1040]
    c2e8:	add	x16, x16, #0x410
    c2ec:	br	x17

000000000000c2f0 <__gmpz_addmul@plt>:
    c2f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c2f4:	ldr	x17, [x16, #1048]
    c2f8:	add	x16, x16, #0x418
    c2fc:	br	x17

000000000000c300 <getc@plt>:
    c300:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c304:	ldr	x17, [x16, #1056]
    c308:	add	x16, x16, #0x420
    c30c:	br	x17

000000000000c310 <mpfr_setmin@plt>:
    c310:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c314:	ldr	x17, [x16, #1064]
    c318:	add	x16, x16, #0x428
    c31c:	br	x17

000000000000c320 <mpfr_mul_2ui@plt>:
    c320:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c324:	ldr	x17, [x16, #1072]
    c328:	add	x16, x16, #0x430
    c32c:	br	x17

000000000000c330 <__gmp_urandomm_ui@plt>:
    c330:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c334:	ldr	x17, [x16, #1080]
    c338:	add	x16, x16, #0x438
    c33c:	br	x17

000000000000c340 <__gmpz_root@plt>:
    c340:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c344:	ldr	x17, [x16, #1088]
    c348:	add	x16, x16, #0x440
    c34c:	br	x17

000000000000c350 <mpfr_ui_div@plt>:
    c350:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c354:	ldr	x17, [x16, #1096]
    c358:	add	x16, x16, #0x448
    c35c:	br	x17

000000000000c360 <mpfr_rint@plt>:
    c360:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c364:	ldr	x17, [x16, #1104]
    c368:	add	x16, x16, #0x450
    c36c:	br	x17

000000000000c370 <mpfr_random_deviate_tstbit@plt>:
    c370:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c374:	ldr	x17, [x16, #1112]
    c378:	add	x16, x16, #0x458
    c37c:	br	x17

000000000000c380 <mpfr_sinh@plt>:
    c380:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c384:	ldr	x17, [x16, #1120]
    c388:	add	x16, x16, #0x460
    c38c:	br	x17

000000000000c390 <__gmpz_pow_ui@plt>:
    c390:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c394:	ldr	x17, [x16, #1128]
    c398:	add	x16, x16, #0x468
    c39c:	br	x17

000000000000c3a0 <mpfr_set_str_binary@plt>:
    c3a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c3a4:	ldr	x17, [x16, #1136]
    c3a8:	add	x16, x16, #0x470
    c3ac:	br	x17

000000000000c3b0 <mpfr_can_round_raw@plt>:
    c3b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c3b4:	ldr	x17, [x16, #1144]
    c3b8:	add	x16, x16, #0x478
    c3bc:	br	x17

000000000000c3c0 <__gmpz_add_ui@plt>:
    c3c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c3c4:	ldr	x17, [x16, #1152]
    c3c8:	add	x16, x16, #0x480
    c3cc:	br	x17

000000000000c3d0 <mpfr_round_p@plt>:
    c3d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c3d4:	ldr	x17, [x16, #1160]
    c3d8:	add	x16, x16, #0x488
    c3dc:	br	x17

000000000000c3e0 <mpfr_cache@plt>:
    c3e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c3e4:	ldr	x17, [x16, #1168]
    c3e8:	add	x16, x16, #0x490
    c3ec:	br	x17

000000000000c3f0 <__gmon_start__@plt>:
    c3f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c3f4:	ldr	x17, [x16, #1176]
    c3f8:	add	x16, x16, #0x498
    c3fc:	br	x17

000000000000c400 <mpfr_add_d@plt>:
    c400:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c404:	ldr	x17, [x16, #1184]
    c408:	add	x16, x16, #0x4a0
    c40c:	br	x17

000000000000c410 <__gmpn_sqr@plt>:
    c410:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c414:	ldr	x17, [x16, #1192]
    c418:	add	x16, x16, #0x4a8
    c41c:	br	x17

000000000000c420 <mpfr_underflow@plt>:
    c420:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c424:	ldr	x17, [x16, #1200]
    c428:	add	x16, x16, #0x4b0
    c42c:	br	x17

000000000000c430 <mpfr_cmp_si_2exp@plt>:
    c430:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c434:	ldr	x17, [x16, #1208]
    c438:	add	x16, x16, #0x4b8
    c43c:	br	x17

000000000000c440 <abort@plt>:
    c440:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c444:	ldr	x17, [x16, #1216]
    c448:	add	x16, x16, #0x4c0
    c44c:	br	x17

000000000000c450 <mpfr_sqr@plt>:
    c450:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c454:	ldr	x17, [x16, #1224]
    c458:	add	x16, x16, #0x4c8
    c45c:	br	x17

000000000000c460 <mpfr_tmp_free@plt>:
    c460:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c464:	ldr	x17, [x16, #1232]
    c468:	add	x16, x16, #0x4d0
    c46c:	br	x17

000000000000c470 <mpfr_div_2si@plt>:
    c470:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c474:	ldr	x17, [x16, #1240]
    c478:	add	x16, x16, #0x4d8
    c47c:	br	x17

000000000000c480 <mpfr_cos@plt>:
    c480:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c484:	ldr	x17, [x16, #1248]
    c488:	add	x16, x16, #0x4e0
    c48c:	br	x17

000000000000c490 <__gmpz_realloc2@plt>:
    c490:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c494:	ldr	x17, [x16, #1256]
    c498:	add	x16, x16, #0x4e8
    c49c:	br	x17

000000000000c4a0 <mpfr_sin@plt>:
    c4a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c4a4:	ldr	x17, [x16, #1264]
    c4a8:	add	x16, x16, #0x4f0
    c4ac:	br	x17

000000000000c4b0 <mpfr_nexttozero@plt>:
    c4b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c4b4:	ldr	x17, [x16, #1272]
    c4b8:	add	x16, x16, #0x4f8
    c4bc:	br	x17

000000000000c4c0 <__gmpn_mul_n@plt>:
    c4c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c4c4:	ldr	x17, [x16, #1280]
    c4c8:	add	x16, x16, #0x500
    c4cc:	br	x17

000000000000c4d0 <mpfr_add_z@plt>:
    c4d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c4d4:	ldr	x17, [x16, #1288]
    c4d8:	add	x16, x16, #0x508
    c4dc:	br	x17

000000000000c4e0 <mpfr_sqrhigh_n@plt>:
    c4e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c4e4:	ldr	x17, [x16, #1296]
    c4e8:	add	x16, x16, #0x510
    c4ec:	br	x17

000000000000c4f0 <mpfr_swap@plt>:
    c4f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c4f4:	ldr	x17, [x16, #1304]
    c4f8:	add	x16, x16, #0x518
    c4fc:	br	x17

000000000000c500 <__gmpz_scan0@plt>:
    c500:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c504:	ldr	x17, [x16, #1312]
    c508:	add	x16, x16, #0x520
    c50c:	br	x17

000000000000c510 <__gmpn_submul_1@plt>:
    c510:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c514:	ldr	x17, [x16, #1320]
    c518:	add	x16, x16, #0x528
    c51c:	br	x17

000000000000c520 <mpfr_mul_z@plt>:
    c520:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c524:	ldr	x17, [x16, #1328]
    c528:	add	x16, x16, #0x530
    c52c:	br	x17

000000000000c530 <__gmpz_ui_pow_ui@plt>:
    c530:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c534:	ldr	x17, [x16, #1336]
    c538:	add	x16, x16, #0x538
    c53c:	br	x17

000000000000c540 <mpfr_set_z_2exp@plt>:
    c540:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c544:	ldr	x17, [x16, #1344]
    c548:	add	x16, x16, #0x540
    c54c:	br	x17

000000000000c550 <mpfr_get_str@plt>:
    c550:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c554:	ldr	x17, [x16, #1352]
    c558:	add	x16, x16, #0x548
    c55c:	br	x17

000000000000c560 <mpfr_remquo@plt>:
    c560:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c564:	ldr	x17, [x16, #1360]
    c568:	add	x16, x16, #0x550
    c56c:	br	x17

000000000000c570 <__gmpn_copyi@plt>:
    c570:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c574:	ldr	x17, [x16, #1368]
    c578:	add	x16, x16, #0x558
    c57c:	br	x17

000000000000c580 <mpfr_sub_ui@plt>:
    c580:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c584:	ldr	x17, [x16, #1376]
    c588:	add	x16, x16, #0x560
    c58c:	br	x17

000000000000c590 <mpfr_round_near_x@plt>:
    c590:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c594:	ldr	x17, [x16, #1384]
    c598:	add	x16, x16, #0x568
    c59c:	br	x17

000000000000c5a0 <__gmp_fprintf@plt>:
    c5a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c5a4:	ldr	x17, [x16, #1392]
    c5a8:	add	x16, x16, #0x570
    c5ac:	br	x17

000000000000c5b0 <__gmpq_set_ui@plt>:
    c5b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c5b4:	ldr	x17, [x16, #1400]
    c5b8:	add	x16, x16, #0x578
    c5bc:	br	x17

000000000000c5c0 <__gmpz_divexact_ui@plt>:
    c5c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c5c4:	ldr	x17, [x16, #1408]
    c5c8:	add	x16, x16, #0x580
    c5cc:	br	x17

000000000000c5d0 <mpfr_get_ld@plt>:
    c5d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c5d4:	ldr	x17, [x16, #1416]
    c5d8:	add	x16, x16, #0x588
    c5dc:	br	x17

000000000000c5e0 <mpfr_random_deviate_swap@plt>:
    c5e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c5e4:	ldr	x17, [x16, #1424]
    c5e8:	add	x16, x16, #0x590
    c5ec:	br	x17

000000000000c5f0 <__gmpn_add_n@plt>:
    c5f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c5f4:	ldr	x17, [x16, #1432]
    c5f8:	add	x16, x16, #0x598
    c5fc:	br	x17

000000000000c600 <mpfr_set_inf@plt>:
    c600:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c604:	ldr	x17, [x16, #1440]
    c608:	add	x16, x16, #0x5a0
    c60c:	br	x17

000000000000c610 <mpfr_yn@plt>:
    c610:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c614:	ldr	x17, [x16, #1448]
    c618:	add	x16, x16, #0x5a8
    c61c:	br	x17

000000000000c620 <mpfr_si_sub@plt>:
    c620:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c624:	ldr	x17, [x16, #1456]
    c628:	add	x16, x16, #0x5b0
    c62c:	br	x17

000000000000c630 <__gmpn_get_str@plt>:
    c630:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c634:	ldr	x17, [x16, #1464]
    c638:	add	x16, x16, #0x5b8
    c63c:	br	x17

000000000000c640 <mpfr_set_ui_2exp@plt>:
    c640:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c644:	ldr	x17, [x16, #1472]
    c648:	add	x16, x16, #0x5c0
    c64c:	br	x17

000000000000c650 <mpfr_lngamma@plt>:
    c650:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c654:	ldr	x17, [x16, #1480]
    c658:	add	x16, x16, #0x5c8
    c65c:	br	x17

000000000000c660 <__gmpz_fdiv_q_ui@plt>:
    c660:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c664:	ldr	x17, [x16, #1488]
    c668:	add	x16, x16, #0x5d0
    c66c:	br	x17

000000000000c670 <mpfr_div@plt>:
    c670:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c674:	ldr	x17, [x16, #1496]
    c678:	add	x16, x16, #0x5d8
    c67c:	br	x17

000000000000c680 <__ctype_b_loc@plt>:
    c680:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c684:	ldr	x17, [x16, #1504]
    c688:	add	x16, x16, #0x5e0
    c68c:	br	x17

000000000000c690 <__gmpz_clear@plt>:
    c690:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c694:	ldr	x17, [x16, #1512]
    c698:	add	x16, x16, #0x5e8
    c69c:	br	x17

000000000000c6a0 <strtol@plt>:
    c6a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c6a4:	ldr	x17, [x16, #1520]
    c6a8:	add	x16, x16, #0x5f0
    c6ac:	br	x17

000000000000c6b0 <fread@plt>:
    c6b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c6b4:	ldr	x17, [x16, #1528]
    c6b8:	add	x16, x16, #0x5f8
    c6bc:	br	x17

000000000000c6c0 <mpfr_nexttoinf@plt>:
    c6c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c6c4:	ldr	x17, [x16, #1536]
    c6c8:	add	x16, x16, #0x600
    c6cc:	br	x17

000000000000c6d0 <__gmpz_mul_si@plt>:
    c6d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c6d4:	ldr	x17, [x16, #1544]
    c6d8:	add	x16, x16, #0x608
    c6dc:	br	x17

000000000000c6e0 <mpfr_atan@plt>:
    c6e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c6e4:	ldr	x17, [x16, #1552]
    c6e8:	add	x16, x16, #0x610
    c6ec:	br	x17

000000000000c6f0 <mpfr_set4@plt>:
    c6f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c6f4:	ldr	x17, [x16, #1560]
    c6f8:	add	x16, x16, #0x618
    c6fc:	br	x17

000000000000c700 <mpfr_rootn_ui@plt>:
    c700:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c704:	ldr	x17, [x16, #1568]
    c708:	add	x16, x16, #0x620
    c70c:	br	x17

000000000000c710 <mpfr_set_str@plt>:
    c710:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c714:	ldr	x17, [x16, #1576]
    c718:	add	x16, x16, #0x628
    c71c:	br	x17

000000000000c720 <__gmpf_neg@plt>:
    c720:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c724:	ldr	x17, [x16, #1584]
    c728:	add	x16, x16, #0x630
    c72c:	br	x17

000000000000c730 <mpfr_fac_ui@plt>:
    c730:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c734:	ldr	x17, [x16, #1592]
    c738:	add	x16, x16, #0x638
    c73c:	br	x17

000000000000c740 <mpfr_pow_general@plt>:
    c740:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c744:	ldr	x17, [x16, #1600]
    c748:	add	x16, x16, #0x640
    c74c:	br	x17

000000000000c750 <mpfr_log1p@plt>:
    c750:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c754:	ldr	x17, [x16, #1608]
    c758:	add	x16, x16, #0x648
    c75c:	br	x17

000000000000c760 <mpfr_sgn@plt>:
    c760:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c764:	ldr	x17, [x16, #1616]
    c768:	add	x16, x16, #0x650
    c76c:	br	x17

000000000000c770 <mpfr_round_raw_4@plt>:
    c770:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c774:	ldr	x17, [x16, #1624]
    c778:	add	x16, x16, #0x658
    c77c:	br	x17

000000000000c780 <ungetc@plt>:
    c780:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c784:	ldr	x17, [x16, #1632]
    c788:	add	x16, x16, #0x660
    c78c:	br	x17

000000000000c790 <__gmpz_tdiv_q_2exp@plt>:
    c790:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c794:	ldr	x17, [x16, #1640]
    c798:	add	x16, x16, #0x668
    c79c:	br	x17

000000000000c7a0 <mpfr_exp@plt>:
    c7a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c7a4:	ldr	x17, [x16, #1648]
    c7a8:	add	x16, x16, #0x670
    c7ac:	br	x17

000000000000c7b0 <mpfr_round_raw_2@plt>:
    c7b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c7b4:	ldr	x17, [x16, #1656]
    c7b8:	add	x16, x16, #0x678
    c7bc:	br	x17

000000000000c7c0 <__gmpz_cdiv_q@plt>:
    c7c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c7c4:	ldr	x17, [x16, #1664]
    c7c8:	add	x16, x16, #0x680
    c7cc:	br	x17

000000000000c7d0 <mpfr_add1@plt>:
    c7d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c7d4:	ldr	x17, [x16, #1672]
    c7d8:	add	x16, x16, #0x688
    c7dc:	br	x17

000000000000c7e0 <mpfr_fits_slong_p@plt>:
    c7e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c7e4:	ldr	x17, [x16, #1680]
    c7e8:	add	x16, x16, #0x690
    c7ec:	br	x17

000000000000c7f0 <__gmpn_mul@plt>:
    c7f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c7f4:	ldr	x17, [x16, #1688]
    c7f8:	add	x16, x16, #0x698
    c7fc:	br	x17

000000000000c800 <mpfr_gamma@plt>:
    c800:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c804:	ldr	x17, [x16, #1696]
    c808:	add	x16, x16, #0x6a0
    c80c:	br	x17

000000000000c810 <__gmpn_divrem_1@plt>:
    c810:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c814:	ldr	x17, [x16, #1704]
    c818:	add	x16, x16, #0x6a8
    c81c:	br	x17

000000000000c820 <mpfr_powerof2_raw2@plt>:
    c820:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c824:	ldr	x17, [x16, #1712]
    c828:	add	x16, x16, #0x6b0
    c82c:	br	x17

000000000000c830 <mpfr_random_deviate_reset@plt>:
    c830:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c834:	ldr	x17, [x16, #1720]
    c838:	add	x16, x16, #0x6b8
    c83c:	br	x17

000000000000c840 <mpfr_add_si@plt>:
    c840:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c844:	ldr	x17, [x16, #1728]
    c848:	add	x16, x16, #0x6c0
    c84c:	br	x17

000000000000c850 <__gmpz_cmp_si@plt>:
    c850:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c854:	ldr	x17, [x16, #1736]
    c858:	add	x16, x16, #0x6c8
    c85c:	br	x17

000000000000c860 <mpfr_rand_raw@plt>:
    c860:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c864:	ldr	x17, [x16, #1744]
    c868:	add	x16, x16, #0x6d0
    c86c:	br	x17

000000000000c870 <mpfr_div_si@plt>:
    c870:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c874:	ldr	x17, [x16, #1752]
    c878:	add	x16, x16, #0x6d8
    c87c:	br	x17

000000000000c880 <mpfr_bernoulli_cache@plt>:
    c880:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c884:	ldr	x17, [x16, #1760]
    c888:	add	x16, x16, #0x6e0
    c88c:	br	x17

000000000000c890 <mpfr_sqrt_ui@plt>:
    c890:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c894:	ldr	x17, [x16, #1768]
    c898:	add	x16, x16, #0x6e8
    c89c:	br	x17

000000000000c8a0 <mpfr_set_q@plt>:
    c8a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c8a4:	ldr	x17, [x16, #1776]
    c8a8:	add	x16, x16, #0x6f0
    c8ac:	br	x17

000000000000c8b0 <__gmpn_popcount@plt>:
    c8b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c8b4:	ldr	x17, [x16, #1784]
    c8b8:	add	x16, x16, #0x6f8
    c8bc:	br	x17

000000000000c8c0 <mpfr_exp_2@plt>:
    c8c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c8c4:	ldr	x17, [x16, #1792]
    c8c8:	add	x16, x16, #0x700
    c8cc:	br	x17

000000000000c8d0 <__gmpz_submul@plt>:
    c8d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c8d4:	ldr	x17, [x16, #1800]
    c8d8:	add	x16, x16, #0x708
    c8dc:	br	x17

000000000000c8e0 <mpfr_free_str@plt>:
    c8e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c8e4:	ldr	x17, [x16, #1808]
    c8e8:	add	x16, x16, #0x710
    c8ec:	br	x17

000000000000c8f0 <__gmpz_mod@plt>:
    c8f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c8f4:	ldr	x17, [x16, #1816]
    c8f8:	add	x16, x16, #0x718
    c8fc:	br	x17

000000000000c900 <mpfr_si_div@plt>:
    c900:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c904:	ldr	x17, [x16, #1824]
    c908:	add	x16, x16, #0x720
    c90c:	br	x17

000000000000c910 <mpfr_beta@plt>:
    c910:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c914:	ldr	x17, [x16, #1832]
    c918:	add	x16, x16, #0x728
    c91c:	br	x17

000000000000c920 <fwrite@plt>:
    c920:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c924:	ldr	x17, [x16, #1840]
    c928:	add	x16, x16, #0x730
    c92c:	br	x17

000000000000c930 <__gmpz_cmp@plt>:
    c930:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c934:	ldr	x17, [x16, #1848]
    c938:	add	x16, x16, #0x738
    c93c:	br	x17

000000000000c940 <mpfr_abort_prec_max@plt>:
    c940:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c944:	ldr	x17, [x16, #1856]
    c948:	add	x16, x16, #0x740
    c94c:	br	x17

000000000000c950 <mpfr_div_2ui@plt>:
    c950:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c954:	ldr	x17, [x16, #1864]
    c958:	add	x16, x16, #0x748
    c95c:	br	x17

000000000000c960 <mpfr_mpz_init2@plt>:
    c960:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c964:	ldr	x17, [x16, #1872]
    c968:	add	x16, x16, #0x750
    c96c:	br	x17

000000000000c970 <strcpy@plt>:
    c970:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c974:	ldr	x17, [x16, #1880]
    c978:	add	x16, x16, #0x758
    c97c:	br	x17

000000000000c980 <__gmpfr_set_sj_2exp@plt>:
    c980:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c984:	ldr	x17, [x16, #1888]
    c988:	add	x16, x16, #0x760
    c98c:	br	x17

000000000000c990 <mpfr_sqrt@plt>:
    c990:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c994:	ldr	x17, [x16, #1896]
    c998:	add	x16, x16, #0x768
    c99c:	br	x17

000000000000c9a0 <strncat@plt>:
    c9a0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c9a4:	ldr	x17, [x16, #1904]
    c9a8:	add	x16, x16, #0x770
    c9ac:	br	x17

000000000000c9b0 <__gmpfr_ceil_log2@plt>:
    c9b0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c9b4:	ldr	x17, [x16, #1912]
    c9b8:	add	x16, x16, #0x778
    c9bc:	br	x17

000000000000c9c0 <mpfr_mul_si@plt>:
    c9c0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c9c4:	ldr	x17, [x16, #1920]
    c9c8:	add	x16, x16, #0x780
    c9cc:	br	x17

000000000000c9d0 <mpfr_prec_round@plt>:
    c9d0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c9d4:	ldr	x17, [x16, #1928]
    c9d8:	add	x16, x16, #0x788
    c9dc:	br	x17

000000000000c9e0 <mpfr_min_prec@plt>:
    c9e0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c9e4:	ldr	x17, [x16, #1936]
    c9e8:	add	x16, x16, #0x790
    c9ec:	br	x17

000000000000c9f0 <mpfr_cmp3@plt>:
    c9f0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    c9f4:	ldr	x17, [x16, #1944]
    c9f8:	add	x16, x16, #0x798
    c9fc:	br	x17

000000000000ca00 <mpfr_cmpabs@plt>:
    ca00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca04:	ldr	x17, [x16, #1952]
    ca08:	add	x16, x16, #0x7a0
    ca0c:	br	x17

000000000000ca10 <__gmpz_add@plt>:
    ca10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca14:	ldr	x17, [x16, #1960]
    ca18:	add	x16, x16, #0x7a8
    ca1c:	br	x17

000000000000ca20 <mpfr_extract@plt>:
    ca20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca24:	ldr	x17, [x16, #1968]
    ca28:	add	x16, x16, #0x7b0
    ca2c:	br	x17

000000000000ca30 <mpfr_eint@plt>:
    ca30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca34:	ldr	x17, [x16, #1976]
    ca38:	add	x16, x16, #0x7b8
    ca3c:	br	x17

000000000000ca40 <mpfr_digamma@plt>:
    ca40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca44:	ldr	x17, [x16, #1984]
    ca48:	add	x16, x16, #0x7c0
    ca4c:	br	x17

000000000000ca50 <mpfr_less_p@plt>:
    ca50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca54:	ldr	x17, [x16, #1992]
    ca58:	add	x16, x16, #0x7c8
    ca5c:	br	x17

000000000000ca60 <mpfr_ui_pow@plt>:
    ca60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca64:	ldr	x17, [x16, #2000]
    ca68:	add	x16, x16, #0x7d0
    ca6c:	br	x17

000000000000ca70 <mpfr_round_raw@plt>:
    ca70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca74:	ldr	x17, [x16, #2008]
    ca78:	add	x16, x16, #0x7d8
    ca7c:	br	x17

000000000000ca80 <mpfr_random_deviate_less@plt>:
    ca80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca84:	ldr	x17, [x16, #2016]
    ca88:	add	x16, x16, #0x7e0
    ca8c:	br	x17

000000000000ca90 <__gmpn_perfect_square_p@plt>:
    ca90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ca94:	ldr	x17, [x16, #2024]
    ca98:	add	x16, x16, #0x7e8
    ca9c:	br	x17

000000000000caa0 <mpfr_ui_sub@plt>:
    caa0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    caa4:	ldr	x17, [x16, #2032]
    caa8:	add	x16, x16, #0x7f0
    caac:	br	x17

000000000000cab0 <mpfr_equal_p@plt>:
    cab0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cab4:	ldr	x17, [x16, #2040]
    cab8:	add	x16, x16, #0x7f8
    cabc:	br	x17

000000000000cac0 <mpfr_sub1@plt>:
    cac0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cac4:	ldr	x17, [x16, #2048]
    cac8:	add	x16, x16, #0x800
    cacc:	br	x17

000000000000cad0 <mpfr_init2@plt>:
    cad0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cad4:	ldr	x17, [x16, #2056]
    cad8:	add	x16, x16, #0x808
    cadc:	br	x17

000000000000cae0 <__gmpz_init2@plt>:
    cae0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cae4:	ldr	x17, [x16, #2064]
    cae8:	add	x16, x16, #0x810
    caec:	br	x17

000000000000caf0 <__gmpn_scan1@plt>:
    caf0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    caf4:	ldr	x17, [x16, #2072]
    caf8:	add	x16, x16, #0x818
    cafc:	br	x17

000000000000cb00 <mpfr_ubf_exp_less_p@plt>:
    cb00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb04:	ldr	x17, [x16, #2080]
    cb08:	add	x16, x16, #0x820
    cb0c:	br	x17

000000000000cb10 <mpfr_get_z_2exp@plt>:
    cb10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb14:	ldr	x17, [x16, #2088]
    cb18:	add	x16, x16, #0x828
    cb1c:	br	x17

000000000000cb20 <strncpy@plt>:
    cb20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb24:	ldr	x17, [x16, #2096]
    cb28:	add	x16, x16, #0x830
    cb2c:	br	x17

000000000000cb30 <mpfr_set_1_2@plt>:
    cb30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb34:	ldr	x17, [x16, #2104]
    cb38:	add	x16, x16, #0x838
    cb3c:	br	x17

000000000000cb40 <__gmpq_div_2exp@plt>:
    cb40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb44:	ldr	x17, [x16, #2112]
    cb48:	add	x16, x16, #0x840
    cb4c:	br	x17

000000000000cb50 <mpfr_ubf_diff_exp@plt>:
    cb50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb54:	ldr	x17, [x16, #2120]
    cb58:	add	x16, x16, #0x848
    cb5c:	br	x17

000000000000cb60 <__gmp_urandomb_ui@plt>:
    cb60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb64:	ldr	x17, [x16, #2128]
    cb68:	add	x16, x16, #0x850
    cb6c:	br	x17

000000000000cb70 <__gmpz_cmp_ui@plt>:
    cb70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb74:	ldr	x17, [x16, #2136]
    cb78:	add	x16, x16, #0x858
    cb7c:	br	x17

000000000000cb80 <mpfr_check_range@plt>:
    cb80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb84:	ldr	x17, [x16, #2144]
    cb88:	add	x16, x16, #0x860
    cb8c:	br	x17

000000000000cb90 <mpfr_assert_fail@plt>:
    cb90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cb94:	ldr	x17, [x16, #2152]
    cb98:	add	x16, x16, #0x868
    cb9c:	br	x17

000000000000cba0 <__gmpz_init@plt>:
    cba0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cba4:	ldr	x17, [x16, #2160]
    cba8:	add	x16, x16, #0x870
    cbac:	br	x17

000000000000cbb0 <__gmpz_sizeinbase@plt>:
    cbb0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cbb4:	ldr	x17, [x16, #2168]
    cbb8:	add	x16, x16, #0x878
    cbbc:	br	x17

000000000000cbc0 <__gmpz_set_si@plt>:
    cbc0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cbc4:	ldr	x17, [x16, #2176]
    cbc8:	add	x16, x16, #0x880
    cbcc:	br	x17

000000000000cbd0 <mpfr_ceil_mul@plt>:
    cbd0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cbd4:	ldr	x17, [x16, #2184]
    cbd8:	add	x16, x16, #0x888
    cbdc:	br	x17

000000000000cbe0 <mpfr_number_p@plt>:
    cbe0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cbe4:	ldr	x17, [x16, #2192]
    cbe8:	add	x16, x16, #0x890
    cbec:	br	x17

000000000000cbf0 <mpfr_scale2@plt>:
    cbf0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cbf4:	ldr	x17, [x16, #2200]
    cbf8:	add	x16, x16, #0x898
    cbfc:	br	x17

000000000000cc00 <mpfr_add1sp@plt>:
    cc00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc04:	ldr	x17, [x16, #2208]
    cc08:	add	x16, x16, #0x8a0
    cc0c:	br	x17

000000000000cc10 <__gmpz_powm_ui@plt>:
    cc10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc14:	ldr	x17, [x16, #2216]
    cc18:	add	x16, x16, #0x8a8
    cc1c:	br	x17

000000000000cc20 <mpfr_get_d_2exp@plt>:
    cc20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc24:	ldr	x17, [x16, #2224]
    cc28:	add	x16, x16, #0x8b0
    cc2c:	br	x17

000000000000cc30 <mpfr_mpn_exp@plt>:
    cc30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc34:	ldr	x17, [x16, #2232]
    cc38:	add	x16, x16, #0x8b8
    cc3c:	br	x17

000000000000cc40 <printf@plt>:
    cc40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc44:	ldr	x17, [x16, #2240]
    cc48:	add	x16, x16, #0x8c0
    cc4c:	br	x17

000000000000cc50 <__errno_location@plt>:
    cc50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc54:	ldr	x17, [x16, #2248]
    cc58:	add	x16, x16, #0x8c8
    cc5c:	br	x17

000000000000cc60 <mpfr_jn@plt>:
    cc60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc64:	ldr	x17, [x16, #2256]
    cc68:	add	x16, x16, #0x8d0
    cc6c:	br	x17

000000000000cc70 <putchar@plt>:
    cc70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc74:	ldr	x17, [x16, #2264]
    cc78:	add	x16, x16, #0x8d8
    cc7c:	br	x17

000000000000cc80 <mpfr_free_func@plt>:
    cc80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc84:	ldr	x17, [x16, #2272]
    cc88:	add	x16, x16, #0x8e0
    cc8c:	br	x17

000000000000cc90 <__gmpz_addmul_ui@plt>:
    cc90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cc94:	ldr	x17, [x16, #2280]
    cc98:	add	x16, x16, #0x8e8
    cc9c:	br	x17

000000000000cca0 <mpfr_sin_cos@plt>:
    cca0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cca4:	ldr	x17, [x16, #2288]
    cca8:	add	x16, x16, #0x8f0
    ccac:	br	x17

000000000000ccb0 <mpfr_inits2@plt>:
    ccb0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ccb4:	ldr	x17, [x16, #2296]
    ccb8:	add	x16, x16, #0x8f8
    ccbc:	br	x17

000000000000ccc0 <mpfr_div_ui@plt>:
    ccc0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ccc4:	ldr	x17, [x16, #2304]
    ccc8:	add	x16, x16, #0x900
    cccc:	br	x17

000000000000ccd0 <mpfr_fmodquo@plt>:
    ccd0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ccd4:	ldr	x17, [x16, #2312]
    ccd8:	add	x16, x16, #0x908
    ccdc:	br	x17

000000000000cce0 <mpfr_div_z@plt>:
    cce0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cce4:	ldr	x17, [x16, #2320]
    cce8:	add	x16, x16, #0x910
    ccec:	br	x17

000000000000ccf0 <mpfr_exp2@plt>:
    ccf0:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    ccf4:	ldr	x17, [x16, #2328]
    ccf8:	add	x16, x16, #0x918
    ccfc:	br	x17

000000000000cd00 <mpfr_odd_p@plt>:
    cd00:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd04:	ldr	x17, [x16, #2336]
    cd08:	add	x16, x16, #0x920
    cd0c:	br	x17

000000000000cd10 <__gmpn_divrem@plt>:
    cd10:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd14:	ldr	x17, [x16, #2344]
    cd18:	add	x16, x16, #0x928
    cd1c:	br	x17

000000000000cd20 <__gmpn_sqrtrem@plt>:
    cd20:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd24:	ldr	x17, [x16, #2352]
    cd28:	add	x16, x16, #0x930
    cd2c:	br	x17

000000000000cd30 <__gmpn_addmul_1@plt>:
    cd30:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd34:	ldr	x17, [x16, #2360]
    cd38:	add	x16, x16, #0x938
    cd3c:	br	x17

000000000000cd40 <fprintf@plt>:
    cd40:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd44:	ldr	x17, [x16, #2368]
    cd48:	add	x16, x16, #0x940
    cd4c:	br	x17

000000000000cd50 <mpfr_allocate_func@plt>:
    cd50:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd54:	ldr	x17, [x16, #2376]
    cd58:	add	x16, x16, #0x948
    cd5c:	br	x17

000000000000cd60 <__gmpz_urandomb@plt>:
    cd60:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd64:	ldr	x17, [x16, #2384]
    cd68:	add	x16, x16, #0x950
    cd6c:	br	x17

000000000000cd70 <mpfr_remainder@plt>:
    cd70:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd74:	ldr	x17, [x16, #2392]
    cd78:	add	x16, x16, #0x958
    cd7c:	br	x17

000000000000cd80 <mpfr_cbrt@plt>:
    cd80:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd84:	ldr	x17, [x16, #2400]
    cd88:	add	x16, x16, #0x960
    cd8c:	br	x17

000000000000cd90 <__gmpn_mul_1@plt>:
    cd90:	adrp	x16, 71000 <mpfr_agm@@Base+0x625e8>
    cd94:	ldr	x17, [x16, #2408]
    cd98:	add	x16, x16, #0x968
    cd9c:	br	x17

000000000000cda0 <__gmpfr_emin@plt>:
    cda0:	stp	x2, x3, [sp, #-16]!
    cda4:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
    cda8:	adrp	x3, 70000 <__gmpfr_l2b@@Base+0x2e0>
    cdac:	ldr	x2, [x2, #4064]

000000000000cdb0 <__gmpfr_emax@plt>:
    cdb0:	add	x3, x3, #0xfe8
    cdb4:	br	x2
    cdb8:	nop
    cdbc:	nop

Disassembly of section .text:

000000000000cdc0 <mpfr_get_emin@@Base-0xd4>:
    cdc0:	adrp	x0, 70000 <__gmpfr_l2b@@Base+0x2e0>
    cdc4:	ldr	x0, [x0, #4032]
    cdc8:	cbz	x0, cdd0 <__gmpfr_cache_const_log2@plt>
    cdcc:	b	c3f0 <__gmon_start__@plt>
    cdd0:	ret
    cdd4:	nop
    cdd8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    cddc:	add	x0, x0, #0xab8
    cde0:	adrp	x1, 71000 <mpfr_agm@@Base+0x625e8>
    cde4:	add	x1, x1, #0xab8
    cde8:	cmp	x1, x0
    cdec:	b.eq	ce04 <*ABS*+0x110@plt+0x4>  // b.none
    cdf0:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
    cdf4:	ldr	x1, [x1, #3952]
    cdf8:	cbz	x1, ce04 <*ABS*+0x110@plt+0x4>
    cdfc:	mov	x16, x1
    ce00:	br	x16
    ce04:	ret
    ce08:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    ce0c:	add	x0, x0, #0xab8
    ce10:	adrp	x1, 71000 <mpfr_agm@@Base+0x625e8>
    ce14:	add	x1, x1, #0xab8
    ce18:	sub	x1, x1, x0
    ce1c:	lsr	x2, x1, #63
    ce20:	add	x1, x2, x1, asr #3
    ce24:	cmp	xzr, x1, asr #1
    ce28:	asr	x1, x1, #1
    ce2c:	b.eq	ce44 <__gmpfr_default_rounding_mode@plt+0x4>  // b.none
    ce30:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
    ce34:	ldr	x2, [x2, #4056]
    ce38:	cbz	x2, ce44 <__gmpfr_default_rounding_mode@plt+0x4>
    ce3c:	mov	x16, x2
    ce40:	br	x16
    ce44:	ret
    ce48:	stp	x29, x30, [sp, #-32]!
    ce4c:	mov	x29, sp
    ce50:	str	x19, [sp, #16]
    ce54:	adrp	x19, 71000 <mpfr_agm@@Base+0x625e8>
    ce58:	ldrb	w0, [x19, #2744]
    ce5c:	cbnz	w0, ce84 <__gmpfr_cache_const_catalan@plt+0x4>
    ce60:	adrp	x0, 70000 <__gmpfr_l2b@@Base+0x2e0>
    ce64:	ldr	x0, [x0, #3968]
    ce68:	cbz	x0, ce78 <__gmpfr_cache_const_euler@plt+0x8>
    ce6c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    ce70:	ldr	x0, [x0, #2736]
    ce74:	bl	bdb0 <__cxa_finalize@plt>
    ce78:	bl	cdd8 <__gmpfr_cache_const_log2@plt+0x8>
    ce7c:	mov	w0, #0x1                   	// #1
    ce80:	strb	w0, [x19, #2744]
    ce84:	ldr	x19, [sp, #16]
    ce88:	ldp	x29, x30, [sp], #32
    ce8c:	ret
    ce90:	b	ce08 <*ABS*+0x110@plt+0x8>

000000000000ce94 <mpfr_get_emin@@Base>:
    ce94:	stp	x29, x30, [sp, #-16]!
    ce98:	mov	x29, sp
    ce9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    cea0:	ldr	x1, [x0, #2592]
    cea4:	add	x0, x0, #0xa20
    cea8:	blr	x1
    ceac:	mrs	x8, tpidr_el0
    ceb0:	ldr	x0, [x8, x0]
    ceb4:	ldp	x29, x30, [sp], #16
    ceb8:	ret

000000000000cebc <mpfr_set_emin@@Base>:
    cebc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    cec0:	add	x9, x0, x9
    cec4:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    cec8:	cmp	x9, x10
    cecc:	b.hi	cf04 <*ABS*+0x168@plt+0x34>  // b.pmore
    ced0:	stp	x29, x30, [sp, #-16]!
    ced4:	mov	x29, sp
    ced8:	mov	x8, x0
    cedc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    cee0:	ldr	x1, [x0, #2592]
    cee4:	add	x0, x0, #0xa20
    cee8:	blr	x1
    ceec:	mov	x9, x0
    cef0:	mrs	x10, tpidr_el0
    cef4:	mov	w0, wzr
    cef8:	str	x8, [x10, x9]
    cefc:	ldp	x29, x30, [sp], #16
    cf00:	ret
    cf04:	mov	w0, #0x1                   	// #1
    cf08:	ret

000000000000cf0c <mpfr_get_emin_min@@Base>:
    cf0c:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cf10:	ret

000000000000cf14 <mpfr_get_emin_max@@Base>:
    cf14:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cf18:	ret

000000000000cf1c <mpfr_get_emax@@Base>:
    cf1c:	stp	x29, x30, [sp, #-16]!
    cf20:	mov	x29, sp
    cf24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    cf28:	ldr	x1, [x0, #2624]
    cf2c:	add	x0, x0, #0xa40
    cf30:	blr	x1
    cf34:	mrs	x8, tpidr_el0
    cf38:	ldr	x0, [x8, x0]
    cf3c:	ldp	x29, x30, [sp], #16
    cf40:	ret

000000000000cf44 <mpfr_set_emax@@Base>:
    cf44:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    cf48:	add	x9, x0, x9
    cf4c:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    cf50:	cmp	x9, x10
    cf54:	b.hi	cf8c <mpfr_set_emax@@Base+0x48>  // b.pmore
    cf58:	stp	x29, x30, [sp, #-16]!
    cf5c:	mov	x29, sp
    cf60:	mov	x8, x0
    cf64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    cf68:	ldr	x1, [x0, #2624]
    cf6c:	add	x0, x0, #0xa40
    cf70:	blr	x1
    cf74:	mov	x9, x0
    cf78:	mrs	x10, tpidr_el0
    cf7c:	mov	w0, wzr
    cf80:	str	x8, [x10, x9]
    cf84:	ldp	x29, x30, [sp], #16
    cf88:	ret
    cf8c:	mov	w0, #0x1                   	// #1
    cf90:	ret

000000000000cf94 <mpfr_get_emax_min@@Base>:
    cf94:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cf98:	ret

000000000000cf9c <mpfr_get_emax_max@@Base>:
    cf9c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cfa0:	ret

000000000000cfa4 <mpfr_flags_clear@@Base>:
    cfa4:	stp	x29, x30, [sp, #-16]!
    cfa8:	mov	x29, sp
    cfac:	eor	w8, w0, #0x3f
    cfb0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    cfb4:	ldr	x1, [x0, #2656]
    cfb8:	add	x0, x0, #0xa60
    cfbc:	blr	x1
    cfc0:	mrs	x9, tpidr_el0
    cfc4:	ldr	w10, [x9, x0]
    cfc8:	and	w8, w10, w8
    cfcc:	str	w8, [x9, x0]
    cfd0:	ldp	x29, x30, [sp], #16
    cfd4:	ret

000000000000cfd8 <mpfr_flags_set@@Base>:
    cfd8:	stp	x29, x30, [sp, #-16]!
    cfdc:	mov	x29, sp
    cfe0:	mov	w8, w0
    cfe4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    cfe8:	ldr	x1, [x0, #2656]
    cfec:	add	x0, x0, #0xa60
    cff0:	blr	x1
    cff4:	mrs	x9, tpidr_el0
    cff8:	ldr	w10, [x9, x0]
    cffc:	orr	w8, w10, w8
    d000:	str	w8, [x9, x0]
    d004:	ldp	x29, x30, [sp], #16
    d008:	ret

000000000000d00c <mpfr_flags_test@@Base>:
    d00c:	stp	x29, x30, [sp, #-16]!
    d010:	mov	x29, sp
    d014:	mov	w8, w0
    d018:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d01c:	ldr	x1, [x0, #2656]
    d020:	add	x0, x0, #0xa60
    d024:	blr	x1
    d028:	mrs	x9, tpidr_el0
    d02c:	ldr	w9, [x9, x0]
    d030:	and	w0, w9, w8
    d034:	ldp	x29, x30, [sp], #16
    d038:	ret

000000000000d03c <mpfr_flags_save@@Base>:
    d03c:	stp	x29, x30, [sp, #-16]!
    d040:	mov	x29, sp
    d044:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d048:	ldr	x1, [x0, #2656]
    d04c:	add	x0, x0, #0xa60
    d050:	blr	x1
    d054:	mrs	x8, tpidr_el0
    d058:	ldr	w0, [x8, x0]
    d05c:	ldp	x29, x30, [sp], #16
    d060:	ret

000000000000d064 <mpfr_flags_restore@@Base>:
    d064:	stp	x29, x30, [sp, #-16]!
    d068:	mov	x29, sp
    d06c:	mov	w8, w1
    d070:	mov	w9, w0
    d074:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d078:	ldr	x1, [x0, #2656]
    d07c:	add	x0, x0, #0xa60
    d080:	blr	x1
    d084:	mrs	x10, tpidr_el0
    d088:	ldr	w11, [x10, x0]
    d08c:	eor	w12, w8, #0x3f
    d090:	and	w8, w8, w9
    d094:	and	w11, w11, w12
    d098:	orr	w8, w11, w8
    d09c:	str	w8, [x10, x0]
    d0a0:	ldp	x29, x30, [sp], #16
    d0a4:	ret

000000000000d0a8 <mpfr_clear_flags@@Base>:
    d0a8:	stp	x29, x30, [sp, #-16]!
    d0ac:	mov	x29, sp
    d0b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d0b4:	ldr	x1, [x0, #2656]
    d0b8:	add	x0, x0, #0xa60
    d0bc:	blr	x1
    d0c0:	mrs	x8, tpidr_el0
    d0c4:	str	wzr, [x8, x0]
    d0c8:	ldp	x29, x30, [sp], #16
    d0cc:	ret

000000000000d0d0 <mpfr_clear_underflow@@Base>:
    d0d0:	stp	x29, x30, [sp, #-16]!
    d0d4:	mov	x29, sp
    d0d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d0dc:	ldr	x1, [x0, #2656]
    d0e0:	add	x0, x0, #0xa60
    d0e4:	blr	x1
    d0e8:	mrs	x8, tpidr_el0
    d0ec:	ldr	w9, [x8, x0]
    d0f0:	and	w9, w9, #0x3e
    d0f4:	str	w9, [x8, x0]
    d0f8:	ldp	x29, x30, [sp], #16
    d0fc:	ret

000000000000d100 <mpfr_clear_overflow@@Base>:
    d100:	stp	x29, x30, [sp, #-16]!
    d104:	mov	x29, sp
    d108:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d10c:	ldr	x1, [x0, #2656]
    d110:	add	x0, x0, #0xa60
    d114:	blr	x1
    d118:	mrs	x8, tpidr_el0
    d11c:	ldr	w9, [x8, x0]
    d120:	mov	w10, #0x3d                  	// #61
    d124:	and	w9, w9, w10
    d128:	str	w9, [x8, x0]
    d12c:	ldp	x29, x30, [sp], #16
    d130:	ret

000000000000d134 <mpfr_clear_divby0@@Base>:
    d134:	stp	x29, x30, [sp, #-16]!
    d138:	mov	x29, sp
    d13c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d140:	ldr	x1, [x0, #2656]
    d144:	add	x0, x0, #0xa60
    d148:	blr	x1
    d14c:	mrs	x8, tpidr_el0
    d150:	ldr	w9, [x8, x0]
    d154:	and	w9, w9, #0x1f
    d158:	str	w9, [x8, x0]
    d15c:	ldp	x29, x30, [sp], #16
    d160:	ret

000000000000d164 <mpfr_clear_nanflag@@Base>:
    d164:	stp	x29, x30, [sp, #-16]!
    d168:	mov	x29, sp
    d16c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d170:	ldr	x1, [x0, #2656]
    d174:	add	x0, x0, #0xa60
    d178:	blr	x1
    d17c:	mrs	x8, tpidr_el0
    d180:	ldr	w9, [x8, x0]
    d184:	mov	w10, #0x3b                  	// #59
    d188:	and	w9, w9, w10
    d18c:	str	w9, [x8, x0]
    d190:	ldp	x29, x30, [sp], #16
    d194:	ret

000000000000d198 <mpfr_clear_inexflag@@Base>:
    d198:	stp	x29, x30, [sp, #-16]!
    d19c:	mov	x29, sp
    d1a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d1a4:	ldr	x1, [x0, #2656]
    d1a8:	add	x0, x0, #0xa60
    d1ac:	blr	x1
    d1b0:	mrs	x8, tpidr_el0
    d1b4:	ldr	w9, [x8, x0]
    d1b8:	mov	w10, #0x37                  	// #55
    d1bc:	and	w9, w9, w10
    d1c0:	str	w9, [x8, x0]
    d1c4:	ldp	x29, x30, [sp], #16
    d1c8:	ret

000000000000d1cc <mpfr_clear_erangeflag@@Base>:
    d1cc:	stp	x29, x30, [sp, #-16]!
    d1d0:	mov	x29, sp
    d1d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d1d8:	ldr	x1, [x0, #2656]
    d1dc:	add	x0, x0, #0xa60
    d1e0:	blr	x1
    d1e4:	mrs	x8, tpidr_el0
    d1e8:	ldr	w9, [x8, x0]
    d1ec:	mov	w10, #0x2f                  	// #47
    d1f0:	and	w9, w9, w10
    d1f4:	str	w9, [x8, x0]
    d1f8:	ldp	x29, x30, [sp], #16
    d1fc:	ret

000000000000d200 <mpfr_set_underflow@@Base>:
    d200:	stp	x29, x30, [sp, #-16]!
    d204:	mov	x29, sp
    d208:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d20c:	ldr	x1, [x0, #2656]
    d210:	add	x0, x0, #0xa60
    d214:	blr	x1
    d218:	mrs	x8, tpidr_el0
    d21c:	ldr	w9, [x8, x0]
    d220:	orr	w9, w9, #0x1
    d224:	str	w9, [x8, x0]
    d228:	ldp	x29, x30, [sp], #16
    d22c:	ret

000000000000d230 <mpfr_set_overflow@@Base>:
    d230:	stp	x29, x30, [sp, #-16]!
    d234:	mov	x29, sp
    d238:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d23c:	ldr	x1, [x0, #2656]
    d240:	add	x0, x0, #0xa60
    d244:	blr	x1
    d248:	mrs	x8, tpidr_el0
    d24c:	ldr	w9, [x8, x0]
    d250:	orr	w9, w9, #0x2
    d254:	str	w9, [x8, x0]
    d258:	ldp	x29, x30, [sp], #16
    d25c:	ret

000000000000d260 <mpfr_set_divby0@@Base>:
    d260:	stp	x29, x30, [sp, #-16]!
    d264:	mov	x29, sp
    d268:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d26c:	ldr	x1, [x0, #2656]
    d270:	add	x0, x0, #0xa60
    d274:	blr	x1
    d278:	mrs	x8, tpidr_el0
    d27c:	ldr	w9, [x8, x0]
    d280:	orr	w9, w9, #0x20
    d284:	str	w9, [x8, x0]
    d288:	ldp	x29, x30, [sp], #16
    d28c:	ret

000000000000d290 <mpfr_set_nanflag@@Base>:
    d290:	stp	x29, x30, [sp, #-16]!
    d294:	mov	x29, sp
    d298:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d29c:	ldr	x1, [x0, #2656]
    d2a0:	add	x0, x0, #0xa60
    d2a4:	blr	x1
    d2a8:	mrs	x8, tpidr_el0
    d2ac:	ldr	w9, [x8, x0]
    d2b0:	orr	w9, w9, #0x4
    d2b4:	str	w9, [x8, x0]
    d2b8:	ldp	x29, x30, [sp], #16
    d2bc:	ret

000000000000d2c0 <mpfr_set_inexflag@@Base>:
    d2c0:	stp	x29, x30, [sp, #-16]!
    d2c4:	mov	x29, sp
    d2c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d2cc:	ldr	x1, [x0, #2656]
    d2d0:	add	x0, x0, #0xa60
    d2d4:	blr	x1
    d2d8:	mrs	x8, tpidr_el0
    d2dc:	ldr	w9, [x8, x0]
    d2e0:	orr	w9, w9, #0x8
    d2e4:	str	w9, [x8, x0]
    d2e8:	ldp	x29, x30, [sp], #16
    d2ec:	ret

000000000000d2f0 <mpfr_set_erangeflag@@Base>:
    d2f0:	stp	x29, x30, [sp, #-16]!
    d2f4:	mov	x29, sp
    d2f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d2fc:	ldr	x1, [x0, #2656]
    d300:	add	x0, x0, #0xa60
    d304:	blr	x1
    d308:	mrs	x8, tpidr_el0
    d30c:	ldr	w9, [x8, x0]
    d310:	orr	w9, w9, #0x10
    d314:	str	w9, [x8, x0]
    d318:	ldp	x29, x30, [sp], #16
    d31c:	ret

000000000000d320 <mpfr_check_range@@Base>:
    d320:	sub	sp, sp, #0x20
    d324:	stp	x29, x30, [sp, #16]
    d328:	ldr	x10, [x0, #16]
    d32c:	mov	x9, #0x4                   	// #4
    d330:	movk	x9, #0x8000, lsl #48
    d334:	add	x29, sp, #0x10
    d338:	cmp	x10, x9
    d33c:	mov	w9, w1
    d340:	b.lt	d3b8 <mpfr_check_range@@Base+0x98>  // b.tstop
    d344:	mov	x8, x0
    d348:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d34c:	ldr	x1, [x0, #2592]
    d350:	add	x0, x0, #0xa20
    d354:	blr	x1
    d358:	mrs	x12, tpidr_el0
    d35c:	ldr	x11, [x12, x0]
    d360:	cmp	x10, x11
    d364:	b.lt	d3ec <mpfr_check_range@@Base+0xcc>  // b.tstop
    d368:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d36c:	ldr	x1, [x0, #2624]
    d370:	add	x0, x0, #0xa40
    d374:	blr	x1
    d378:	ldr	x11, [x12, x0]
    d37c:	cmp	x10, x11
    d380:	b.gt	d408 <mpfr_check_range@@Base+0xe8>
    d384:	cbz	w9, d3a8 <mpfr_check_range@@Base+0x88>
    d388:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d38c:	ldr	x1, [x0, #2656]
    d390:	add	x0, x0, #0xa60
    d394:	blr	x1
    d398:	mrs	x8, tpidr_el0
    d39c:	ldr	w10, [x8, x0]
    d3a0:	orr	w10, w10, #0x8
    d3a4:	str	w10, [x8, x0]
    d3a8:	ldp	x29, x30, [sp, #16]
    d3ac:	mov	w0, w9
    d3b0:	add	sp, sp, #0x20
    d3b4:	ret
    d3b8:	cbz	w9, d384 <mpfr_check_range@@Base+0x64>
    d3bc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    d3c0:	cmp	x10, x8
    d3c4:	b.ne	d384 <mpfr_check_range@@Base+0x64>  // b.any
    d3c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d3cc:	ldr	x1, [x0, #2656]
    d3d0:	add	x0, x0, #0xa60
    d3d4:	blr	x1
    d3d8:	mrs	x8, tpidr_el0
    d3dc:	ldr	w10, [x8, x0]
    d3e0:	orr	w10, w10, #0x2
    d3e4:	str	w10, [x8, x0]
    d3e8:	b	d388 <mpfr_check_range@@Base+0x68>
    d3ec:	cbnz	w2, d46c <mpfr_check_range@@Base+0x14c>
    d3f0:	stur	w9, [x29, #-4]
    d3f4:	add	x9, x10, #0x1
    d3f8:	cmp	x9, x11
    d3fc:	b.ge	d424 <mpfr_check_range@@Base+0x104>  // b.tcont
    d400:	mov	w2, #0x1                   	// #1
    d404:	b	d46c <mpfr_check_range@@Base+0x14c>
    d408:	ldr	w9, [x8, #8]
    d40c:	ldp	x29, x30, [sp, #16]
    d410:	mov	x0, x8
    d414:	mov	w1, w2
    d418:	mov	w2, w9
    d41c:	add	sp, sp, #0x20
    d420:	b	bff0 <mpfr_overflow@plt>
    d424:	mov	x0, x8
    d428:	str	x8, [sp]
    d42c:	bl	bfb0 <mpfr_powerof2_raw@plt>
    d430:	cbz	w0, d450 <mpfr_check_range@@Base+0x130>
    d434:	ldr	x8, [sp]
    d438:	ldr	w8, [x8, #8]
    d43c:	tbnz	w8, #31, d458 <mpfr_check_range@@Base+0x138>
    d440:	ldr	x8, [sp]
    d444:	ldur	w9, [x29, #-4]
    d448:	tbz	w9, #31, d400 <mpfr_check_range@@Base+0xe0>
    d44c:	b	d468 <mpfr_check_range@@Base+0x148>
    d450:	ldr	x8, [sp]
    d454:	b	d468 <mpfr_check_range@@Base+0x148>
    d458:	ldur	w8, [x29, #-4]
    d45c:	cmp	w8, #0x1
    d460:	ldr	x8, [sp]
    d464:	b.lt	d400 <mpfr_check_range@@Base+0xe0>  // b.tstop
    d468:	mov	w2, wzr
    d46c:	ldr	w9, [x8, #8]
    d470:	ldp	x29, x30, [sp, #16]
    d474:	mov	x0, x8
    d478:	mov	w1, w2
    d47c:	mov	w2, w9
    d480:	add	sp, sp, #0x20
    d484:	b	c420 <mpfr_underflow@plt>

000000000000d488 <mpfr_underflow@@Base>:
    d488:	stp	x29, x30, [sp, #-48]!
    d48c:	str	x21, [sp, #16]
    d490:	stp	x20, x19, [sp, #32]
    d494:	mov	w19, w2
    d498:	mov	x20, x0
    d49c:	cmp	w1, #0x1
    d4a0:	mrs	x21, tpidr_el0
    d4a4:	mov	x29, sp
    d4a8:	b.eq	d4b8 <mpfr_underflow@@Base+0x30>  // b.none
    d4ac:	add	w8, w1, w19, lsr #31
    d4b0:	cmp	w8, #0x3
    d4b4:	b.ne	d4c8 <mpfr_underflow@@Base+0x40>  // b.any
    d4b8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    d4bc:	str	x8, [x20, #16]
    d4c0:	mov	w8, #0xffffffff            	// #-1
    d4c4:	b	d4e8 <mpfr_underflow@@Base+0x60>
    d4c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d4cc:	ldr	x1, [x0, #2592]
    d4d0:	add	x0, x0, #0xa20
    d4d4:	blr	x1
    d4d8:	ldr	x1, [x21, x0]
    d4dc:	mov	x0, x20
    d4e0:	bl	c310 <mpfr_setmin@plt>
    d4e4:	mov	w8, #0x1                   	// #1
    d4e8:	str	w19, [x20, #8]
    d4ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d4f0:	ldr	x1, [x0, #2656]
    d4f4:	add	x0, x0, #0xa60
    d4f8:	blr	x1
    d4fc:	ldr	w9, [x21, x0]
    d500:	mov	w10, #0x9                   	// #9
    d504:	cmp	w19, #0x0
    d508:	ldp	x20, x19, [sp, #32]
    d50c:	orr	w9, w9, w10
    d510:	str	w9, [x21, x0]
    d514:	ldr	x21, [sp, #16]
    d518:	cneg	w8, w8, le
    d51c:	mov	w0, w8
    d520:	ldp	x29, x30, [sp], #48
    d524:	ret

000000000000d528 <mpfr_overflow@@Base>:
    d528:	stp	x29, x30, [sp, #-48]!
    d52c:	str	x21, [sp, #16]
    d530:	stp	x20, x19, [sp, #32]
    d534:	mov	w19, w2
    d538:	mov	x20, x0
    d53c:	cmp	w1, #0x1
    d540:	mrs	x21, tpidr_el0
    d544:	mov	x29, sp
    d548:	b.eq	d558 <mpfr_overflow@@Base+0x30>  // b.none
    d54c:	add	w8, w1, w19, lsr #31
    d550:	cmp	w8, #0x3
    d554:	b.ne	d57c <mpfr_overflow@@Base+0x54>  // b.any
    d558:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d55c:	ldr	x1, [x0, #2624]
    d560:	add	x0, x0, #0xa40
    d564:	blr	x1
    d568:	ldr	x1, [x21, x0]
    d56c:	mov	x0, x20
    d570:	bl	c170 <mpfr_setmax@plt>
    d574:	mov	w8, #0xffffffff            	// #-1
    d578:	b	d588 <mpfr_overflow@@Base+0x60>
    d57c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    d580:	str	x8, [x20, #16]
    d584:	mov	w8, #0x1                   	// #1
    d588:	str	w19, [x20, #8]
    d58c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d590:	ldr	x1, [x0, #2656]
    d594:	add	x0, x0, #0xa60
    d598:	blr	x1
    d59c:	ldr	w9, [x21, x0]
    d5a0:	mov	w10, #0xa                   	// #10
    d5a4:	cmp	w19, #0x0
    d5a8:	ldp	x20, x19, [sp, #32]
    d5ac:	orr	w9, w9, w10
    d5b0:	str	w9, [x21, x0]
    d5b4:	ldr	x21, [sp, #16]
    d5b8:	cneg	w8, w8, le
    d5bc:	mov	w0, w8
    d5c0:	ldp	x29, x30, [sp], #48
    d5c4:	ret

000000000000d5c8 <mpfr_underflow_p@@Base>:
    d5c8:	stp	x29, x30, [sp, #-16]!
    d5cc:	mov	x29, sp
    d5d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d5d4:	ldr	x1, [x0, #2656]
    d5d8:	add	x0, x0, #0xa60
    d5dc:	blr	x1
    d5e0:	mrs	x8, tpidr_el0
    d5e4:	ldr	w8, [x8, x0]
    d5e8:	and	w0, w8, #0x1
    d5ec:	ldp	x29, x30, [sp], #16
    d5f0:	ret

000000000000d5f4 <mpfr_overflow_p@@Base>:
    d5f4:	stp	x29, x30, [sp, #-16]!
    d5f8:	mov	x29, sp
    d5fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d600:	ldr	x1, [x0, #2656]
    d604:	add	x0, x0, #0xa60
    d608:	blr	x1
    d60c:	mrs	x8, tpidr_el0
    d610:	ldr	w8, [x8, x0]
    d614:	and	w0, w8, #0x2
    d618:	ldp	x29, x30, [sp], #16
    d61c:	ret

000000000000d620 <mpfr_divby0_p@@Base>:
    d620:	stp	x29, x30, [sp, #-16]!
    d624:	mov	x29, sp
    d628:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d62c:	ldr	x1, [x0, #2656]
    d630:	add	x0, x0, #0xa60
    d634:	blr	x1
    d638:	mrs	x8, tpidr_el0
    d63c:	ldr	w8, [x8, x0]
    d640:	and	w0, w8, #0x20
    d644:	ldp	x29, x30, [sp], #16
    d648:	ret

000000000000d64c <mpfr_nanflag_p@@Base>:
    d64c:	stp	x29, x30, [sp, #-16]!
    d650:	mov	x29, sp
    d654:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d658:	ldr	x1, [x0, #2656]
    d65c:	add	x0, x0, #0xa60
    d660:	blr	x1
    d664:	mrs	x8, tpidr_el0
    d668:	ldr	w8, [x8, x0]
    d66c:	and	w0, w8, #0x4
    d670:	ldp	x29, x30, [sp], #16
    d674:	ret

000000000000d678 <mpfr_inexflag_p@@Base>:
    d678:	stp	x29, x30, [sp, #-16]!
    d67c:	mov	x29, sp
    d680:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d684:	ldr	x1, [x0, #2656]
    d688:	add	x0, x0, #0xa60
    d68c:	blr	x1
    d690:	mrs	x8, tpidr_el0
    d694:	ldr	w8, [x8, x0]
    d698:	and	w0, w8, #0x8
    d69c:	ldp	x29, x30, [sp], #16
    d6a0:	ret

000000000000d6a4 <mpfr_erangeflag_p@@Base>:
    d6a4:	stp	x29, x30, [sp, #-16]!
    d6a8:	mov	x29, sp
    d6ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d6b0:	ldr	x1, [x0, #2656]
    d6b4:	add	x0, x0, #0xa60
    d6b8:	blr	x1
    d6bc:	mrs	x8, tpidr_el0
    d6c0:	ldr	w8, [x8, x0]
    d6c4:	and	w0, w8, #0x10
    d6c8:	ldp	x29, x30, [sp], #16
    d6cc:	ret

000000000000d6d0 <mpfr_extract@@Base>:
    d6d0:	stp	x29, x30, [sp, #-64]!
    d6d4:	stp	x24, x23, [sp, #16]
    d6d8:	stp	x22, x21, [sp, #32]
    d6dc:	stp	x20, x19, [sp, #48]
    d6e0:	ldr	x9, [x1]
    d6e4:	mov	w8, #0x1                   	// #1
    d6e8:	lsl	x23, x8, x2
    d6ec:	cmp	w2, #0x0
    d6f0:	lsr	x8, x23, #1
    d6f4:	csinc	x21, x8, xzr, ne  // ne = any
    d6f8:	sub	x8, x9, #0x1
    d6fc:	add	x9, x9, #0x3e
    d700:	cmp	x8, #0x0
    d704:	csel	x8, x9, x8, lt  // lt = tstop
    d708:	asr	x8, x8, #6
    d70c:	mov	x20, x1
    d710:	mov	x19, x0
    d714:	lsr	x9, x21, #31
    d718:	add	x22, x8, #0x1
    d71c:	mov	x29, sp
    d720:	cbnz	x9, d7c8 <mpfr_extract@@Base+0xf8>
    d724:	lsl	x1, x21, #6
    d728:	mov	x0, x19
    d72c:	bl	c490 <__gmpz_realloc2@plt>
    d730:	ldr	x0, [x19, #8]
    d734:	subs	x24, x23, x22
    d738:	b.ls	d76c <mpfr_extract@@Base+0x9c>  // b.plast
    d73c:	lsl	x2, x21, #3
    d740:	mov	w1, wzr
    d744:	bl	c1b0 <memset@plt>
    d748:	subs	x8, x22, x21
    d74c:	b.cc	d788 <mpfr_extract@@Base+0xb8>  // b.lo, b.ul, b.last
    d750:	ldr	x9, [x19, #8]
    d754:	ldr	x1, [x20, #24]
    d758:	add	x0, x9, x24, lsl #3
    d75c:	cmp	x0, x1
    d760:	b.eq	d788 <mpfr_extract@@Base+0xb8>  // b.none
    d764:	lsl	x2, x8, #3
    d768:	b	d784 <mpfr_extract@@Base+0xb4>
    d76c:	ldr	x8, [x20, #24]
    d770:	add	x8, x8, x22, lsl #3
    d774:	sub	x1, x8, x23, lsl #3
    d778:	cmp	x0, x1
    d77c:	b.eq	d788 <mpfr_extract@@Base+0xb8>  // b.none
    d780:	lsl	x2, x21, #3
    d784:	bl	bad0 <memcpy@plt>
    d788:	mov	x8, x21
    d78c:	cbz	x21, d7a4 <mpfr_extract@@Base+0xd4>
    d790:	ldr	x9, [x19, #8]
    d794:	sub	x21, x8, #0x1
    d798:	add	x9, x9, x8, lsl #3
    d79c:	ldur	x9, [x9, #-8]
    d7a0:	cbz	x9, d788 <mpfr_extract@@Base+0xb8>
    d7a4:	ldr	w9, [x20, #8]
    d7a8:	cmp	w9, #0x0
    d7ac:	cneg	w8, w8, lt  // lt = tstop
    d7b0:	str	w8, [x19, #4]
    d7b4:	ldp	x20, x19, [sp, #48]
    d7b8:	ldp	x22, x21, [sp, #32]
    d7bc:	ldp	x24, x23, [sp, #16]
    d7c0:	ldp	x29, x30, [sp], #64
    d7c4:	ret
    d7c8:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    d7cc:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    d7d0:	add	x0, x0, #0xe80
    d7d4:	add	x2, x2, #0xe8a
    d7d8:	mov	w1, #0x28                  	// #40
    d7dc:	bl	cb90 <mpfr_assert_fail@plt>
    d7e0:	b	d724 <mpfr_extract@@Base+0x54>

000000000000d7e4 <__gmpfr_ceil_exp2@@Base>:
    d7e4:	str	d8, [sp, #-32]!
    d7e8:	mov	x8, #0x4090000000000000    	// #4652218415073722368
    d7ec:	mov	v8.16b, v0.16b
    d7f0:	fmov	d0, x8
    d7f4:	fcmp	d8, d0
    d7f8:	stp	x29, x30, [sp, #16]
    d7fc:	mov	x29, sp
    d800:	b.hi	d840 <__gmpfr_ceil_exp2@@Base+0x5c>  // b.pmore
    d804:	fcvtzs	x8, d8
    d808:	scvtf	d0, x8
    d80c:	fcmp	d0, d8
    d810:	cset	w10, ne  // ne = any
    d814:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
    d818:	add	x8, x10, x8
    d81c:	add	x9, x9, x8, lsl #52
    d820:	ldp	x29, x30, [sp, #16]
    d824:	cmn	x8, #0x3fd
    d828:	and	x8, x9, #0x7ff0000000000000
    d82c:	mov	x9, #0x10000000000000      	// #4503599627370496
    d830:	csel	x8, x9, x8, lt  // lt = tstop
    d834:	fmov	d0, x8
    d838:	ldr	d8, [sp], #32
    d83c:	ret
    d840:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    d844:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    d848:	add	x0, x0, #0xeae
    d84c:	add	x2, x2, #0xebb
    d850:	mov	w1, #0x26                  	// #38
    d854:	bl	cb90 <mpfr_assert_fail@plt>
    d858:	b	d804 <__gmpfr_ceil_exp2@@Base+0x20>

000000000000d85c <__gmpfr_ceil_log2@@Base>:
    d85c:	stp	x29, x30, [sp, #-32]!
    d860:	stp	x20, x19, [sp, #16]
    d864:	fmov	x20, d0
    d868:	ubfx	x19, x20, #52, #11
    d86c:	cmp	x19, #0x7fe
    d870:	mov	x29, sp
    d874:	b.cs	d8a8 <__gmpfr_ceil_log2@@Base+0x4c>  // b.hs, b.nlast
    d878:	and	x8, x20, #0x800fffffffffffff
    d87c:	orr	x8, x8, #0x3ff0000000000000
    d880:	fmov	d0, #1.000000000000000000e+00
    d884:	fmov	d1, x8
    d888:	mov	x9, #0xfffffffffffffc01    	// #-1023
    d88c:	fcmp	d1, d0
    d890:	mov	x8, #0xfffffffffffffc02    	// #-1022
    d894:	csel	x8, x8, x9, ne  // ne = any
    d898:	add	x0, x8, x19
    d89c:	ldp	x20, x19, [sp, #16]
    d8a0:	ldp	x29, x30, [sp], #32
    d8a4:	ret
    d8a8:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    d8ac:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    d8b0:	add	x0, x0, #0xec7
    d8b4:	add	x2, x2, #0xed4
    d8b8:	mov	w1, #0x28                  	// #40
    d8bc:	bl	cb90 <mpfr_assert_fail@plt>
    d8c0:	b	d878 <__gmpfr_ceil_log2@@Base+0x1c>

000000000000d8c4 <__gmpfr_floor_log2@@Base>:
    d8c4:	stp	x29, x30, [sp, #-32]!
    d8c8:	fmov	x8, d0
    d8cc:	ubfx	x8, x8, #52, #11
    d8d0:	str	x19, [sp, #16]
    d8d4:	cmp	x8, #0x7fe
    d8d8:	sub	x19, x8, #0x3ff
    d8dc:	mov	x29, sp
    d8e0:	b.cs	d8f4 <__gmpfr_floor_log2@@Base+0x30>  // b.hs, b.nlast
    d8e4:	mov	x0, x19
    d8e8:	ldr	x19, [sp, #16]
    d8ec:	ldp	x29, x30, [sp], #32
    d8f0:	ret
    d8f4:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    d8f8:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    d8fc:	add	x0, x0, #0xedf
    d900:	add	x2, x2, #0xed4
    d904:	mov	w1, #0x25                  	// #37
    d908:	bl	cb90 <mpfr_assert_fail@plt>
    d90c:	b	d8e4 <__gmpfr_floor_log2@@Base+0x20>

000000000000d910 <mpfr_add@@Base>:
    d910:	sub	sp, sp, #0x30
    d914:	stp	x29, x30, [sp, #32]
    d918:	ldr	x9, [x1, #16]
    d91c:	mov	x11, #0x2                   	// #2
    d920:	movk	x11, #0x8000, lsl #48
    d924:	add	x12, x11, #0x3
    d928:	mov	x8, x1
    d92c:	cmp	x9, x12
    d930:	add	x29, sp, #0x20
    d934:	b.lt	d994 <mpfr_add@@Base+0x84>  // b.tstop
    d938:	ldr	x10, [x2, #16]
    d93c:	cmp	x10, x12
    d940:	b.lt	d9a0 <mpfr_add@@Base+0x90>  // b.tstop
    d944:	ldr	w13, [x8, #8]
    d948:	ldr	w14, [x2, #8]
    d94c:	ldr	x11, [x0]
    d950:	ldr	x12, [x8]
    d954:	cmp	w13, w14
    d958:	b.ne	d9d0 <mpfr_add@@Base+0xc0>  // b.any
    d95c:	cmp	x11, x12
    d960:	b.ne	d980 <mpfr_add@@Base+0x70>  // b.any
    d964:	ldr	x12, [x2]
    d968:	cmp	x11, x12
    d96c:	b.ne	d980 <mpfr_add@@Base+0x70>  // b.any
    d970:	ldp	x29, x30, [sp, #32]
    d974:	mov	x1, x8
    d978:	add	sp, sp, #0x30
    d97c:	b	cc00 <mpfr_add1sp@plt>
    d980:	cmp	x9, x10
    d984:	b.ge	d9f4 <mpfr_add@@Base+0xe4>  // b.tcont
    d988:	mov	x1, x2
    d98c:	mov	x2, x8
    d990:	b	d9f8 <mpfr_add@@Base+0xe8>
    d994:	cmp	x9, x11
    d998:	b.eq	d9a8 <mpfr_add@@Base+0x98>  // b.none
    d99c:	ldr	x10, [x2, #16]
    d9a0:	cmp	x10, x11
    d9a4:	b.ne	da04 <mpfr_add@@Base+0xf4>  // b.any
    d9a8:	str	x11, [x0, #16]
    d9ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    d9b0:	ldr	x1, [x0, #2656]
    d9b4:	add	x0, x0, #0xa60
    d9b8:	blr	x1
    d9bc:	mrs	x8, tpidr_el0
    d9c0:	ldr	w9, [x8, x0]
    d9c4:	orr	w9, w9, #0x4
    d9c8:	str	w9, [x8, x0]
    d9cc:	b	da4c <mpfr_add@@Base+0x13c>
    d9d0:	cmp	x11, x12
    d9d4:	b.ne	db60 <mpfr_add@@Base+0x250>  // b.any
    d9d8:	ldr	x9, [x2]
    d9dc:	cmp	x11, x9
    d9e0:	b.ne	db60 <mpfr_add@@Base+0x250>  // b.any
    d9e4:	ldp	x29, x30, [sp, #32]
    d9e8:	mov	x1, x8
    d9ec:	add	sp, sp, #0x30
    d9f0:	b	c190 <mpfr_sub1sp@plt>
    d9f4:	mov	x1, x8
    d9f8:	ldp	x29, x30, [sp, #32]
    d9fc:	add	sp, sp, #0x30
    da00:	b	c7d0 <mpfr_add1@plt>
    da04:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
    da08:	cmp	x9, x12
    da0c:	b.ne	da34 <mpfr_add@@Base+0x124>  // b.any
    da10:	ldr	w8, [x8, #8]
    da14:	cmp	x10, x12
    da18:	b.ne	da28 <mpfr_add@@Base+0x118>  // b.any
    da1c:	ldr	w9, [x2, #8]
    da20:	cmp	w8, w9
    da24:	b.ne	d9a8 <mpfr_add@@Base+0x98>  // b.any
    da28:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    da2c:	str	x9, [x0, #16]
    da30:	b	da48 <mpfr_add@@Base+0x138>
    da34:	cmp	x10, x12
    da38:	b.ne	da5c <mpfr_add@@Base+0x14c>  // b.any
    da3c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    da40:	str	x8, [x0, #16]
    da44:	ldr	w8, [x2, #8]
    da48:	str	w8, [x0, #8]
    da4c:	ldp	x29, x30, [sp, #32]
    da50:	mov	w0, wzr
    da54:	add	sp, sp, #0x30
    da58:	ret
    da5c:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    da60:	cmp	x9, x12
    da64:	stur	w3, [x29, #-12]
    da68:	str	x2, [sp, #8]
    da6c:	stur	x0, [x29, #-8]
    da70:	b.ne	daac <mpfr_add@@Base+0x19c>  // b.any
    da74:	cmp	x10, x12
    da78:	b.ne	dac8 <mpfr_add@@Base+0x1b8>  // b.any
    da7c:	ldr	w9, [x8, #8]
    da80:	ldur	w8, [x29, #-12]
    da84:	cmp	w8, #0x3
    da88:	b.ne	db1c <mpfr_add@@Base+0x20c>  // b.any
    da8c:	cmp	w9, #0x1
    da90:	mov	w8, #0xffffffff            	// #-1
    da94:	b.lt	db34 <mpfr_add@@Base+0x224>  // b.tstop
    da98:	ldr	x9, [sp, #8]
    da9c:	ldr	w9, [x9, #8]
    daa0:	cmp	w9, #0x1
    daa4:	cneg	w8, w8, ge  // ge = tcont
    daa8:	b	db34 <mpfr_add@@Base+0x224>
    daac:	ldr	w3, [x8, #8]
    dab0:	cmp	x10, x12
    dab4:	str	x8, [sp]
    dab8:	b.ne	dae4 <mpfr_add@@Base+0x1d4>  // b.any
    dabc:	ldur	x0, [x29, #-8]
    dac0:	ldr	x1, [sp]
    dac4:	b	dad4 <mpfr_add@@Base+0x1c4>
    dac8:	ldr	x1, [sp, #8]
    dacc:	ldur	x0, [x29, #-8]
    dad0:	ldr	w3, [x1, #8]
    dad4:	ldur	w2, [x29, #-12]
    dad8:	ldp	x29, x30, [sp, #32]
    dadc:	add	sp, sp, #0x30
    dae0:	b	c6f0 <mpfr_set4@plt>
    dae4:	ldr	x8, [sp, #8]
    dae8:	ldr	w8, [x8, #8]
    daec:	cmp	w3, w8
    daf0:	b.ne	db48 <mpfr_add@@Base+0x238>  // b.any
    daf4:	add	x8, x11, #0x2
    daf8:	cmp	x9, x8
    dafc:	b.eq	db68 <mpfr_add@@Base+0x258>  // b.none
    db00:	cmp	x10, x8
    db04:	b.eq	db68 <mpfr_add@@Base+0x258>  // b.none
    db08:	cmp	x9, x10
    db0c:	b.lt	db74 <mpfr_add@@Base+0x264>  // b.tstop
    db10:	ldur	x0, [x29, #-8]
    db14:	ldp	x1, x2, [sp]
    db18:	b	db7c <mpfr_add@@Base+0x26c>
    db1c:	mov	w8, #0x1                   	// #1
    db20:	tbz	w9, #31, db34 <mpfr_add@@Base+0x224>
    db24:	ldr	x9, [sp, #8]
    db28:	ldr	w9, [x9, #8]
    db2c:	cmp	w9, #0x0
    db30:	cneg	w8, w8, lt  // lt = tstop
    db34:	ldur	x9, [x29, #-8]
    db38:	str	w8, [x9, #8]
    db3c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    db40:	str	x8, [x9, #16]
    db44:	b	da4c <mpfr_add@@Base+0x13c>
    db48:	ldur	x0, [x29, #-8]
    db4c:	ldp	x1, x2, [sp]
    db50:	ldur	w3, [x29, #-12]
    db54:	ldp	x29, x30, [sp, #32]
    db58:	add	sp, sp, #0x30
    db5c:	b	cac0 <mpfr_sub1@plt>
    db60:	mov	x1, x8
    db64:	b	db54 <mpfr_add@@Base+0x244>
    db68:	ldp	x0, x1, [sp]
    db6c:	bl	cb00 <mpfr_ubf_exp_less_p@plt>
    db70:	cbz	w0, db10 <mpfr_add@@Base+0x200>
    db74:	ldur	x0, [x29, #-8]
    db78:	ldp	x2, x1, [sp]
    db7c:	ldur	w3, [x29, #-12]
    db80:	b	d9f8 <mpfr_add@@Base+0xe8>

000000000000db84 <mpfr_add1@@Base>:
    db84:	stp	x29, x30, [sp, #-96]!
    db88:	stp	x28, x27, [sp, #16]
    db8c:	stp	x26, x25, [sp, #32]
    db90:	stp	x24, x23, [sp, #48]
    db94:	stp	x22, x21, [sp, #64]
    db98:	stp	x20, x19, [sp, #80]
    db9c:	mov	x29, sp
    dba0:	sub	sp, sp, #0x50
    dba4:	ldr	x4, [x1, #16]
    dba8:	mov	x20, #0x4                   	// #4
    dbac:	movk	x20, #0x8000, lsl #48
    dbb0:	mov	x26, x2
    dbb4:	mov	x28, x1
    dbb8:	mov	x18, x0
    dbbc:	cmp	x4, x20
    dbc0:	mrs	x19, tpidr_el0
    dbc4:	stur	x0, [x29, #-32]
    dbc8:	b.eq	df7c <mpfr_add1@@Base+0x3f8>  // b.none
    dbcc:	ldr	x21, [x18]
    dbd0:	ldr	x8, [x28]
    dbd4:	ldr	x9, [x26]
    dbd8:	ldr	x22, [x18, #24]
    dbdc:	sub	x10, x21, #0x1
    dbe0:	add	x11, x21, #0x3e
    dbe4:	sub	x12, x8, #0x1
    dbe8:	cmp	x10, #0x0
    dbec:	ldr	x14, [x28, #24]
    dbf0:	add	x8, x8, #0x3e
    dbf4:	sub	x13, x9, #0x1
    dbf8:	csel	x10, x11, x10, lt  // lt = tstop
    dbfc:	cmp	x12, #0x0
    dc00:	stur	x19, [x29, #-72]
    dc04:	ldr	x19, [x26, #24]
    dc08:	add	x9, x9, #0x3e
    dc0c:	csel	x8, x8, x12, lt  // lt = tstop
    dc10:	cmp	x13, #0x0
    dc14:	asr	x24, x8, #6
    dc18:	csel	x8, x9, x13, lt  // lt = tstop
    dc1c:	asr	x10, x10, #6
    dc20:	asr	x8, x8, #6
    dc24:	add	x25, x10, #0x1
    dc28:	add	x27, x24, #0x1
    dc2c:	cmp	x22, x14
    dc30:	stur	x8, [x29, #-80]
    dc34:	add	x8, x8, #0x1
    dc38:	stp	x10, xzr, [x29, #-16]
    dc3c:	stur	x14, [x29, #-64]
    dc40:	stur	x8, [x29, #-24]
    dc44:	stur	x4, [x29, #-40]
    dc48:	b.eq	dfc8 <mpfr_add1@@Base+0x444>  // b.none
    dc4c:	cmp	x22, x19
    dc50:	b.eq	dc5c <mpfr_add1@@Base+0xd8>  // b.none
    dc54:	stur	x19, [x29, #-48]
    dc58:	b	dcac <mpfr_add1@@Base+0x128>
    dc5c:	ldur	x8, [x29, #-24]
    dc60:	lsl	x23, x8, #3
    dc64:	cmp	x23, #0x4, lsl #12
    dc68:	b.hi	e1cc <mpfr_add1@@Base+0x648>  // b.pmore
    dc6c:	add	x9, x23, #0xf
    dc70:	mov	x8, sp
    dc74:	and	x9, x9, #0xfffffffffffffff0
    dc78:	sub	x0, x8, x9
    dc7c:	mov	sp, x0
    dc80:	cmp	x22, x0
    dc84:	b.eq	dca8 <mpfr_add1@@Base+0x124>  // b.none
    dc88:	mov	x1, x22
    dc8c:	mov	x2, x23
    dc90:	stur	x0, [x29, #-48]
    dc94:	mov	w19, w3
    dc98:	bl	bad0 <memcpy@plt>
    dc9c:	ldp	x4, x18, [x29, #-40]
    dca0:	mov	w3, w19
    dca4:	b	dcac <mpfr_add1@@Base+0x128>
    dca8:	stur	x22, [x29, #-48]
    dcac:	ldr	w8, [x28, #8]
    dcb0:	lsl	x19, x25, #6
    dcb4:	cmp	w3, #0x3
    dcb8:	str	w8, [x18, #8]
    dcbc:	b.eq	dcdc <mpfr_add1@@Base+0x158>  // b.none
    dcc0:	cmp	w3, #0x2
    dcc4:	b.ne	dcec <mpfr_add1@@Base+0x168>  // b.any
    dcc8:	ldr	w8, [x28, #8]
    dccc:	cmp	w8, #0x1
    dcd0:	mov	w8, #0x4                   	// #4
    dcd4:	csinc	w3, w8, wzr, ge  // ge = tcont
    dcd8:	b	dcec <mpfr_add1@@Base+0x168>
    dcdc:	ldr	w8, [x28, #8]
    dce0:	cmp	w8, #0x0
    dce4:	mov	w8, #0x4                   	// #4
    dce8:	csinc	w3, w8, wzr, lt  // lt = tstop
    dcec:	ldr	x8, [x26, #16]
    dcf0:	stur	w3, [x29, #-52]
    dcf4:	cmp	x8, x20
    dcf8:	sub	x20, x19, x21
    dcfc:	b.eq	e020 <mpfr_add1@@Base+0x49c>  // b.none
    dd00:	sub	x26, x4, x8
    dd04:	ldur	x28, [x29, #-16]
    dd08:	cmp	x19, x26
    dd0c:	b.ls	e03c <mpfr_add1@@Base+0x4b8>  // b.plast
    dd10:	mvn	x8, x26
    dd14:	add	x8, x19, x8
    dd18:	add	x9, x8, #0x3f
    dd1c:	cmp	x8, #0x0
    dd20:	csel	x8, x9, x8, lt  // lt = tstop
    dd24:	ldur	x9, [x29, #-80]
    dd28:	asr	x8, x8, #6
    dd2c:	mov	x21, x20
    dd30:	add	x28, x8, #0x1
    dd34:	cmp	x8, x9
    dd38:	b.gt	e070 <mpfr_add1@@Base+0x4ec>
    dd3c:	add	x8, x26, #0x3f
    dd40:	cmp	x26, #0x0
    dd44:	csel	x8, x8, x26, lt  // lt = tstop
    dd48:	sub	x9, x25, x8, asr #6
    dd4c:	asr	x20, x8, #6
    dd50:	add	x23, x22, x9, lsl #3
    dd54:	lsl	x2, x20, #3
    dd58:	mov	x0, x23
    dd5c:	mov	w1, wzr
    dd60:	bl	c1b0 <memset@plt>
    dd64:	ldur	x8, [x29, #-24]
    dd68:	ldur	x9, [x29, #-48]
    dd6c:	sub	w3, w26, w20, lsl #6
    dd70:	sub	x23, x23, x28, lsl #3
    dd74:	sub	x8, x8, x28
    dd78:	add	x1, x9, x8, lsl #3
    dd7c:	cbz	w3, e090 <mpfr_add1@@Base+0x50c>
    dd80:	mov	x0, x23
    dd84:	mov	x2, x28
    dd88:	bl	bd90 <__gmpn_rshift@plt>
    dd8c:	cmp	x23, x22
    dd90:	mov	x20, x21
    dd94:	b.hi	e120 <mpfr_add1@@Base+0x59c>  // b.pmore
    dd98:	ldur	x28, [x29, #-16]
    dd9c:	cmp	x24, x28
    dda0:	b.ge	ddbc <mpfr_add1@@Base+0x238>  // b.tcont
    dda4:	ldur	x2, [x29, #-64]
    dda8:	sub	x8, x25, x27
    ddac:	add	x0, x22, x8, lsl #3
    ddb0:	mov	x1, x0
    ddb4:	mov	x3, x27
    ddb8:	b	ddd4 <mpfr_add1@@Base+0x250>
    ddbc:	ldur	x9, [x29, #-64]
    ddc0:	sub	x8, x27, x25
    ddc4:	mov	x0, x22
    ddc8:	mov	x1, x22
    ddcc:	add	x2, x9, x8, lsl #3
    ddd0:	mov	x3, x25
    ddd4:	bl	c5f0 <__gmpn_add_n@plt>
    ddd8:	ldp	x4, x18, [x29, #-40]
    dddc:	ldur	w3, [x29, #-52]
    dde0:	cbnz	x0, e0ac <mpfr_add1@@Base+0x528>
    dde4:	cbz	w20, e114 <mpfr_add1@@Base+0x590>
    dde8:	ldr	x10, [x22]
    ddec:	mov	x8, #0xffffffffffffffff    	// #-1
    ddf0:	lsl	x9, x8, x20
    ddf4:	sub	w11, w20, #0x1
    ddf8:	bic	x8, x10, x9
    ddfc:	cmp	w20, #0x2
    de00:	and	x10, x10, x9
    de04:	lsr	x23, x8, x11
    de08:	str	x10, [x22]
    de0c:	b.lt	e128 <mpfr_add1@@Base+0x5a4>  // b.tstop
    de10:	mvn	x9, x9
    de14:	ands	x8, x8, x9, lsr #1
    de18:	b.eq	de30 <mpfr_add1@@Base+0x2ac>  // b.none
    de1c:	lsr	x9, x9, #1
    de20:	cmp	x8, x9
    de24:	b.ne	de78 <mpfr_add1@@Base+0x2f4>  // b.any
    de28:	mov	w27, #0x1                   	// #1
    de2c:	b	de34 <mpfr_add1@@Base+0x2b0>
    de30:	mov	w27, wzr
    de34:	add	x8, x26, #0x3f
    de38:	cmp	x26, #0x0
    de3c:	csel	x8, x8, x26, lt  // lt = tstop
    de40:	subs	x11, x24, x28
    de44:	asr	x10, x8, #6
    de48:	sub	x8, x25, x8, asr #6
    de4c:	b.gt	e130 <mpfr_add1@@Base+0x5ac>
    de50:	cmp	w27, #0x1
    de54:	b.eq	de94 <mpfr_add1@@Base+0x310>  // b.none
    de58:	ldur	x9, [x29, #-24]
    de5c:	subs	x8, x9, x8
    de60:	b.lt	de8c <mpfr_add1@@Base+0x308>  // b.tstop
    de64:	cmp	x26, x19
    de68:	b.ls	de80 <mpfr_add1@@Base+0x2fc>  // b.plast
    de6c:	bic	w23, w23, w23, asr #31
    de70:	mov	w27, #0x1                   	// #1
    de74:	b	de94 <mpfr_add1@@Base+0x310>
    de78:	mov	w27, #0xffffffff            	// #-1
    de7c:	b	de94 <mpfr_add1@@Base+0x310>
    de80:	sub	x9, x26, x10, lsl #6
    de84:	cbnz	w9, dedc <mpfr_add1@@Base+0x358>
    de88:	cbnz	x8, dedc <mpfr_add1@@Base+0x358>
    de8c:	mov	w27, wzr
    de90:	bic	w23, w23, w23, asr #31
    de94:	ldur	x24, [x29, #-72]
    de98:	cmp	w3, #0x0
    de9c:	cset	w19, eq  // eq = none
    dea0:	cmp	w3, #0x5
    dea4:	b.hi	e240 <mpfr_add1@@Base+0x6bc>  // b.pmore
    dea8:	adrp	x9, 57000 <mpfr_free_pool@@Base+0x187c>
    deac:	mov	w8, w3
    deb0:	add	x9, x9, #0xeed
    deb4:	adr	x10, dec4 <mpfr_add1@@Base+0x340>
    deb8:	ldrb	w11, [x9, x8]
    debc:	add	x10, x10, x11, lsl #2
    dec0:	br	x10
    dec4:	cbz	w27, df28 <mpfr_add1@@Base+0x3a4>
    dec8:	cbnz	w23, e278 <mpfr_add1@@Base+0x6f4>
    decc:	b	df38 <mpfr_add1@@Base+0x3b4>
    ded0:	orr	w8, w23, w27
    ded4:	cbnz	w8, df38 <mpfr_add1@@Base+0x3b4>
    ded8:	b	e2c4 <mpfr_add1@@Base+0x740>
    dedc:	ldur	x24, [x29, #-72]
    dee0:	cbz	w9, def8 <mpfr_add1@@Base+0x374>
    dee4:	ldur	x12, [x29, #-48]
    dee8:	neg	x9, x9
    deec:	ldr	x10, [x12, x8, lsl #3]
    def0:	lsl	x9, x10, x9
    def4:	b	df04 <mpfr_add1@@Base+0x380>
    def8:	ldur	x12, [x29, #-48]
    defc:	sub	x8, x8, #0x1
    df00:	ldr	x9, [x12, x8, lsl #3]
    df04:	lsr	x10, x9, #63
    df08:	and	x11, x9, #0x7fffffffffffffff
    df0c:	cmp	w23, #0x0
    df10:	csel	w23, w10, w23, lt  // lt = tstop
    df14:	csel	x9, x11, x9, lt  // lt = tstop
    df18:	cmp	w3, #0x5
    df1c:	b.ne	df4c <mpfr_add1@@Base+0x3c8>  // b.any
    df20:	cbnz	x9, df4c <mpfr_add1@@Base+0x3c8>
    df24:	mov	w19, wzr
    df28:	cbz	w23, e2f4 <mpfr_add1@@Base+0x770>
    df2c:	ldr	x8, [x22]
    df30:	lsr	x8, x8, x20
    df34:	tbnz	w8, #0, e278 <mpfr_add1@@Base+0x6f4>
    df38:	ldr	w8, [x18, #8]
    df3c:	cmp	w8, #0x0
    df40:	mov	w8, #0xffffffff            	// #-1
    df44:	cneg	w23, w8, lt  // lt = tstop
    df48:	b	e2f4 <mpfr_add1@@Base+0x770>
    df4c:	cbz	x9, df58 <mpfr_add1@@Base+0x3d4>
    df50:	mov	w27, #0x1                   	// #1
    df54:	b	de98 <mpfr_add1@@Base+0x314>
    df58:	sub	x9, x12, #0x8
    df5c:	mov	w27, #0x1                   	// #1
    df60:	cbz	x8, df74 <mpfr_add1@@Base+0x3f0>
    df64:	ldr	x10, [x9, x8, lsl #3]
    df68:	sub	x8, x8, #0x1
    df6c:	cbz	x10, df60 <mpfr_add1@@Base+0x3dc>
    df70:	b	de98 <mpfr_add1@@Base+0x314>
    df74:	mov	w27, wzr
    df78:	b	de98 <mpfr_add1@@Base+0x314>
    df7c:	add	x0, x28, #0x20
    df80:	mov	w21, w3
    df84:	bl	bcf0 <mpfr_ubf_zexp2exp@plt>
    df88:	ldur	x18, [x29, #-32]
    df8c:	mov	w3, w21
    df90:	mov	x4, x0
    df94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    df98:	ldr	x1, [x0, #2624]
    df9c:	add	x0, x0, #0xa40
    dfa0:	blr	x1
    dfa4:	ldr	x8, [x19, x0]
    dfa8:	cmp	x4, x8
    dfac:	b.le	dbcc <mpfr_add1@@Base+0x48>
    dfb0:	ldr	w2, [x28, #8]
    dfb4:	mov	x0, x18
    dfb8:	mov	w1, w3
    dfbc:	bl	bff0 <mpfr_overflow@plt>
    dfc0:	mov	w23, w0
    dfc4:	b	e33c <mpfr_add1@@Base+0x7b8>
    dfc8:	lsl	x23, x27, #3
    dfcc:	cmp	x23, #0x4, lsl #12
    dfd0:	stur	w3, [x29, #-52]
    dfd4:	b.hi	e75c <mpfr_add1@@Base+0xbd8>  // b.pmore
    dfd8:	add	x9, x23, #0xf
    dfdc:	mov	x8, sp
    dfe0:	and	x9, x9, #0xfffffffffffffff0
    dfe4:	sub	x0, x8, x9
    dfe8:	mov	sp, x0
    dfec:	cmp	x22, x0
    dff0:	stur	x0, [x29, #-64]
    dff4:	b.eq	e00c <mpfr_add1@@Base+0x488>  // b.none
    dff8:	mov	x1, x22
    dffc:	mov	x2, x23
    e000:	bl	bad0 <memcpy@plt>
    e004:	ldur	x0, [x29, #-64]
    e008:	ldur	x4, [x29, #-40]
    e00c:	ldur	x18, [x29, #-32]
    e010:	ldur	w3, [x29, #-52]
    e014:	cmp	x22, x19
    e018:	csel	x19, x0, x19, eq  // eq = none
    e01c:	b	dc54 <mpfr_add1@@Base+0xd0>
    e020:	mov	x0, x28
    e024:	mov	x1, x26
    e028:	bl	cb50 <mpfr_ubf_diff_exp@plt>
    e02c:	ldp	x4, x18, [x29, #-40]
    e030:	ldur	w3, [x29, #-52]
    e034:	mov	x26, x0
    e038:	b	dd04 <mpfr_add1@@Base+0x180>
    e03c:	cmp	x24, x28
    e040:	b.lt	e770 <mpfr_add1@@Base+0xbec>  // b.tstop
    e044:	ldur	x9, [x29, #-64]
    e048:	sub	x8, x27, x25
    e04c:	add	x1, x9, x8, lsl #3
    e050:	cmp	x22, x1
    e054:	b.eq	dde4 <mpfr_add1@@Base+0x260>  // b.none
    e058:	lsl	x2, x25, #3
    e05c:	mov	x0, x22
    e060:	bl	bad0 <memcpy@plt>
    e064:	ldp	x4, x18, [x29, #-40]
    e068:	ldur	w3, [x29, #-52]
    e06c:	b	dde4 <mpfr_add1@@Base+0x260>
    e070:	ldur	x20, [x29, #-24]
    e074:	mov	x0, x22
    e078:	mov	w1, wzr
    e07c:	sub	x8, x28, x20
    e080:	lsl	x2, x8, #3
    e084:	bl	c1b0 <memset@plt>
    e088:	mov	x28, x20
    e08c:	b	dd3c <mpfr_add1@@Base+0x1b8>
    e090:	cmp	x23, x1
    e094:	mov	x20, x21
    e098:	b.eq	dd98 <mpfr_add1@@Base+0x214>  // b.none
    e09c:	lsl	x2, x28, #3
    e0a0:	mov	x0, x23
    e0a4:	bl	bad0 <memcpy@plt>
    e0a8:	b	dd98 <mpfr_add1@@Base+0x214>
    e0ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e0b0:	ldr	x1, [x0, #2624]
    e0b4:	add	x0, x0, #0xa40
    e0b8:	blr	x1
    e0bc:	ldur	x8, [x29, #-72]
    e0c0:	ldr	x8, [x8, x0]
    e0c4:	cmp	x4, x8
    e0c8:	b.eq	e7b8 <mpfr_add1@@Base+0xc34>  // b.none
    e0cc:	ldr	x8, [x22]
    e0d0:	add	x4, x4, #0x1
    e0d4:	lsr	x9, x8, x20
    e0d8:	and	w23, w9, #0x1
    e0dc:	cbz	w20, e7d0 <mpfr_add1@@Base+0xc4c>
    e0e0:	and	x9, x20, #0xffffffff
    e0e4:	mov	x10, #0xffffffffffffffff    	// #-1
    e0e8:	lsl	x9, x10, x9
    e0ec:	bics	x10, x8, x9
    e0f0:	and	x8, x8, x9, lsl #1
    e0f4:	mov	x20, x4
    e0f8:	str	x8, [x22]
    e0fc:	b.eq	e1e8 <mpfr_add1@@Base+0x664>  // b.none
    e100:	mvn	x8, x9
    e104:	cmp	x10, x8
    e108:	mov	w8, #0x1                   	// #1
    e10c:	cneg	w27, w8, ne  // ne = any
    e110:	b	e1ec <mpfr_add1@@Base+0x668>
    e114:	mov	w27, #0xffffffff            	// #-1
    e118:	mov	w23, #0xffffffff            	// #-1
    e11c:	b	de34 <mpfr_add1@@Base+0x2b0>
    e120:	stur	x0, [x23, #-8]
    e124:	b	dd98 <mpfr_add1@@Base+0x214>
    e128:	mov	w27, #0xffffffff            	// #-1
    e12c:	b	de34 <mpfr_add1@@Base+0x2b0>
    e130:	cmp	x8, #0x0
    e134:	b.gt	e13c <mpfr_add1@@Base+0x5b8>
    e138:	cbz	w27, de70 <mpfr_add1@@Base+0x2ec>
    e13c:	ldur	x8, [x29, #-80]
    e140:	ldur	x13, [x29, #-64]
    e144:	mov	x12, xzr
    e148:	sub	x9, x28, x10
    e14c:	add	x8, x10, x8
    e150:	add	x13, x13, x11, lsl #3
    e154:	sub	x14, x8, x28
    e158:	sub	x8, x13, #0x8
    e15c:	ldur	x13, [x29, #-48]
    e160:	add	x13, x13, x14, lsl #3
    e164:	sub	x14, x13, #0x8
    e168:	mov	w13, #0x1                   	// #1
    e16c:	cmn	x9, x13
    e170:	b.pl	e3b4 <mpfr_add1@@Base+0x830>  // b.nfrst
    e174:	ldr	x15, [x8, x12, lsl #3]
    e178:	cmp	w27, #0x1
    e17c:	b.lt	e194 <mpfr_add1@@Base+0x610>  // b.tstop
    e180:	cmp	w3, #0x5
    e184:	b.eq	de94 <mpfr_add1@@Base+0x310>  // b.none
    e188:	cmn	x15, #0x1
    e18c:	b.eq	e1b4 <mpfr_add1@@Base+0x630>  // b.none
    e190:	b	de94 <mpfr_add1@@Base+0x310>
    e194:	orr	x17, x15, #0x8000000000000000
    e198:	cmp	w23, #0x0
    e19c:	lsr	x16, x15, #63
    e1a0:	csel	x15, x17, x15, lt  // lt = tstop
    e1a4:	csel	w23, w16, w23, lt  // lt = tstop
    e1a8:	cmn	x15, #0x1
    e1ac:	mov	w27, #0x1                   	// #1
    e1b0:	b.ne	de94 <mpfr_add1@@Base+0x310>  // b.any
    e1b4:	sub	x12, x12, #0x1
    e1b8:	add	x13, x13, #0x1
    e1bc:	cmn	x11, x12
    e1c0:	sub	x14, x14, #0x8
    e1c4:	b.ne	e16c <mpfr_add1@@Base+0x5e8>  // b.any
    e1c8:	b	de70 <mpfr_add1@@Base+0x2ec>
    e1cc:	sub	x0, x29, #0x8
    e1d0:	mov	x1, x23
    e1d4:	mov	w19, w3
    e1d8:	bl	be70 <mpfr_tmp_allocate@plt>
    e1dc:	ldp	x4, x18, [x29, #-40]
    e1e0:	mov	w3, w19
    e1e4:	b	dc80 <mpfr_add1@@Base+0xfc>
    e1e8:	mov	w27, wzr
    e1ec:	mov	w3, #0x1                   	// #1
    e1f0:	mov	x0, x22
    e1f4:	mov	x1, x22
    e1f8:	mov	x2, x25
    e1fc:	bl	bd90 <__gmpn_rshift@plt>
    e200:	ldr	x8, [x22, x28, lsl #3]
    e204:	eor	x8, x8, #0x8000000000000000
    e208:	str	x8, [x22, x28, lsl #3]
    e20c:	cbz	w21, e22c <mpfr_add1@@Base+0x6a8>
    e210:	ldur	x18, [x29, #-32]
    e214:	ldur	w3, [x29, #-52]
    e218:	mov	x4, x20
    e21c:	tbz	w27, #31, e238 <mpfr_add1@@Base+0x6b4>
    e220:	mov	w27, #0xffffffff            	// #-1
    e224:	mov	x20, x21
    e228:	b	de94 <mpfr_add1@@Base+0x310>
    e22c:	ldur	x18, [x29, #-32]
    e230:	ldur	w3, [x29, #-52]
    e234:	mov	x4, x20
    e238:	mov	x20, x21
    e23c:	b	de34 <mpfr_add1@@Base+0x2b0>
    e240:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    e244:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    e248:	add	x0, x0, #0xef3
    e24c:	add	x2, x2, #0xefa
    e250:	mov	w1, #0x221                 	// #545
    e254:	mov	x21, x20
    e258:	mov	x20, x4
    e25c:	bl	cb90 <mpfr_assert_fail@plt>
    e260:	ldur	w3, [x29, #-52]
    e264:	ldur	x18, [x29, #-32]
    e268:	mov	x4, x20
    e26c:	mov	x20, x21
    e270:	orr	w8, w23, w27
    e274:	cbz	w8, e2c4 <mpfr_add1@@Base+0x740>
    e278:	ldr	w2, [x18, #8]
    e27c:	ldr	x10, [x22]
    e280:	mov	w9, #0x1                   	// #1
    e284:	mov	w8, #0xffffffff            	// #-1
    e288:	lsl	x9, x9, x20
    e28c:	cmp	w2, #0x1
    e290:	cneg	w23, w8, ge  // ge = tcont
    e294:	adds	x8, x10, x9
    e298:	str	x8, [x22]
    e29c:	b.cc	e2f4 <mpfr_add1@@Base+0x770>  // b.lo, b.ul, b.last
    e2a0:	mov	w8, #0x1                   	// #1
    e2a4:	cmp	x8, x28
    e2a8:	b.gt	e2cc <mpfr_add1@@Base+0x748>
    e2ac:	ldr	x9, [x22, x8, lsl #3]
    e2b0:	adds	x9, x9, #0x1
    e2b4:	str	x9, [x22, x8, lsl #3]
    e2b8:	add	x8, x8, #0x1
    e2bc:	b.cs	e2a4 <mpfr_add1@@Base+0x720>  // b.hs, b.nlast
    e2c0:	b	e2f4 <mpfr_add1@@Base+0x770>
    e2c4:	mov	w23, wzr
    e2c8:	b	e2f4 <mpfr_add1@@Base+0x770>
    e2cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e2d0:	ldr	x1, [x0, #2624]
    e2d4:	add	x0, x0, #0xa40
    e2d8:	blr	x1
    e2dc:	ldr	x8, [x24, x0]
    e2e0:	cmp	x4, x8
    e2e4:	b.eq	e458 <mpfr_add1@@Base+0x8d4>  // b.none
    e2e8:	add	x4, x4, #0x1
    e2ec:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    e2f0:	str	x8, [x22, x28, lsl #3]
    e2f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e2f8:	ldr	x1, [x0, #2592]
    e2fc:	add	x0, x0, #0xa20
    e300:	blr	x1
    e304:	ldr	x8, [x24, x0]
    e308:	cmp	x4, x8
    e30c:	b.lt	e36c <mpfr_add1@@Base+0x7e8>  // b.tstop
    e310:	str	x4, [x18, #16]
    e314:	ldur	x0, [x29, #-8]
    e318:	cbnz	x0, e360 <mpfr_add1@@Base+0x7dc>
    e31c:	cbz	w23, e33c <mpfr_add1@@Base+0x7b8>
    e320:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e324:	ldr	x1, [x0, #2656]
    e328:	add	x0, x0, #0xa60
    e32c:	blr	x1
    e330:	ldr	w8, [x24, x0]
    e334:	orr	w8, w8, #0x8
    e338:	str	w8, [x24, x0]
    e33c:	mov	w0, w23
    e340:	mov	sp, x29
    e344:	ldp	x20, x19, [sp, #80]
    e348:	ldp	x22, x21, [sp, #64]
    e34c:	ldp	x24, x23, [sp, #48]
    e350:	ldp	x26, x25, [sp, #32]
    e354:	ldp	x28, x27, [sp, #16]
    e358:	ldp	x29, x30, [sp], #96
    e35c:	ret
    e360:	bl	c460 <mpfr_tmp_free@plt>
    e364:	cbnz	w23, e320 <mpfr_add1@@Base+0x79c>
    e368:	b	e33c <mpfr_add1@@Base+0x7b8>
    e36c:	cbz	w19, e39c <mpfr_add1@@Base+0x818>
    e370:	sub	x8, x8, #0x1
    e374:	cmp	x4, x8
    e378:	b.lt	e390 <mpfr_add1@@Base+0x80c>  // b.tstop
    e37c:	tbnz	w23, #31, e398 <mpfr_add1@@Base+0x814>
    e380:	mov	x0, x18
    e384:	bl	bfb0 <mpfr_powerof2_raw@plt>
    e388:	ldur	x18, [x29, #-32]
    e38c:	cbz	w0, e398 <mpfr_add1@@Base+0x814>
    e390:	mov	w3, #0x1                   	// #1
    e394:	b	e39c <mpfr_add1@@Base+0x818>
    e398:	mov	w3, wzr
    e39c:	ldr	w2, [x18, #8]
    e3a0:	mov	x0, x18
    e3a4:	mov	w1, w3
    e3a8:	bl	c420 <mpfr_underflow@plt>
    e3ac:	mov	w23, w0
    e3b0:	b	e314 <mpfr_add1@@Base+0x790>
    e3b4:	add	x8, x9, x13
    e3b8:	ldur	x13, [x29, #-24]
    e3bc:	mov	x2, x20
    e3c0:	cmp	x13, x8
    e3c4:	add	x13, x11, x12
    e3c8:	b.lt	e3fc <mpfr_add1@@Base+0x878>  // b.tstop
    e3cc:	ldur	x8, [x29, #-80]
    e3d0:	ldur	x16, [x29, #-16]
    e3d4:	add	x15, x26, #0x3f
    e3d8:	cmp	x26, #0x0
    e3dc:	add	x8, x10, x8
    e3e0:	sub	x16, x8, x16
    e3e4:	csel	x8, x15, x26, lt  // lt = tstop
    e3e8:	and	x8, x8, #0xffffffffffffffc0
    e3ec:	sub	x8, x26, x8
    e3f0:	add	x15, x16, x12
    e3f4:	cbnz	w8, e468 <mpfr_add1@@Base+0x8e4>
    e3f8:	cbnz	x15, e468 <mpfr_add1@@Base+0x8e4>
    e3fc:	tbz	w27, #31, e428 <mpfr_add1@@Base+0x8a4>
    e400:	ldur	x8, [x29, #-64]
    e404:	sub	x13, x13, #0x1
    e408:	cmp	w23, #0x0
    e40c:	ldr	x8, [x8, x13, lsl #3]
    e410:	and	x10, x8, #0x7fffffffffffffff
    e414:	lsr	x9, x8, #63
    e418:	csel	x8, x10, x8, lt  // lt = tstop
    e41c:	csel	w23, w9, w23, lt  // lt = tstop
    e420:	cmp	x8, #0x0
    e424:	cset	w27, ne  // ne = any
    e428:	ldur	w8, [x29, #-52]
    e42c:	cmp	w8, #0x5
    e430:	b.eq	e744 <mpfr_add1@@Base+0xbc0>  // b.none
    e434:	cbnz	w27, e744 <mpfr_add1@@Base+0xbc0>
    e438:	ldur	x8, [x29, #-64]
    e43c:	mov	w27, #0x1                   	// #1
    e440:	sub	x8, x8, #0x8
    e444:	cbz	x13, e740 <mpfr_add1@@Base+0xbbc>
    e448:	ldr	x9, [x8, x13, lsl #3]
    e44c:	sub	x13, x13, #0x1
    e450:	cbz	x9, e444 <mpfr_add1@@Base+0x8c0>
    e454:	b	e744 <mpfr_add1@@Base+0xbc0>
    e458:	mov	x0, x18
    e45c:	mov	w1, w3
    e460:	bl	bff0 <mpfr_overflow@plt>
    e464:	b	e3ac <mpfr_add1@@Base+0x828>
    e468:	add	x9, x9, #0x1
    e46c:	cmp	x9, x12
    e470:	b.ne	e47c <mpfr_add1@@Base+0x8f8>  // b.any
    e474:	mov	x9, xzr
    e478:	b	e480 <mpfr_add1@@Base+0x8fc>
    e47c:	ldr	x9, [x14, #8]
    e480:	tbnz	w27, #31, e48c <mpfr_add1@@Base+0x908>
    e484:	mov	x10, x15
    e488:	b	e574 <mpfr_add1@@Base+0x9f0>
    e48c:	cbz	w8, e4c8 <mpfr_add1@@Base+0x944>
    e490:	ldur	x16, [x29, #-80]
    e494:	neg	x13, x8
    e498:	lsl	x13, x9, x13
    e49c:	cmp	x15, #0x1
    e4a0:	add	x10, x10, x16
    e4a4:	ldur	x16, [x29, #-16]
    e4a8:	sub	x10, x10, x16
    e4ac:	add	x10, x10, x12
    e4b0:	sub	x10, x10, #0x1
    e4b4:	b.lt	e4e4 <mpfr_add1@@Base+0x960>  // b.tstop
    e4b8:	ldr	x9, [x14]
    e4bc:	lsr	x14, x9, x8
    e4c0:	add	x13, x14, x13
    e4c4:	b	e4e4 <mpfr_add1@@Base+0x960>
    e4c8:	ldur	x13, [x29, #-80]
    e4cc:	add	x10, x10, x13
    e4d0:	ldr	x13, [x14]
    e4d4:	ldur	x14, [x29, #-16]
    e4d8:	sub	x10, x10, x14
    e4dc:	add	x10, x10, x12
    e4e0:	sub	x10, x10, #0x1
    e4e4:	ldur	x14, [x29, #-64]
    e4e8:	add	x14, x14, x11, lsl #3
    e4ec:	add	x14, x14, x12, lsl #3
    e4f0:	ldur	x14, [x14, #-8]
    e4f4:	adds	x13, x14, x13
    e4f8:	b.cc	e544 <mpfr_add1@@Base+0x9c0>  // b.lo, b.ul, b.last
    e4fc:	tbnz	w23, #31, e508 <mpfr_add1@@Base+0x984>
    e500:	eor	w23, w23, #0x1
    e504:	cbnz	w23, e544 <mpfr_add1@@Base+0x9c0>
    e508:	ldr	x14, [x22]
    e50c:	mov	w15, #0x1                   	// #1
    e510:	lsl	x15, x15, x2
    e514:	adds	x14, x14, x15
    e518:	str	x14, [x22]
    e51c:	b.cc	e544 <mpfr_add1@@Base+0x9c0>  // b.lo, b.ul, b.last
    e520:	mov	w14, #0x1                   	// #1
    e524:	ldur	x15, [x29, #-16]
    e528:	cmp	x14, x15
    e52c:	b.gt	e6f0 <mpfr_add1@@Base+0xb6c>
    e530:	ldr	x15, [x22, x14, lsl #3]
    e534:	adds	x15, x15, #0x1
    e538:	str	x15, [x22, x14, lsl #3]
    e53c:	add	x14, x14, #0x1
    e540:	b.cs	e524 <mpfr_add1@@Base+0x9a0>  // b.hs, b.nlast
    e544:	tbz	w23, #31, e558 <mpfr_add1@@Base+0x9d4>
    e548:	lsl	x14, x13, #1
    e54c:	bfxil	x14, x13, #62, #1
    e550:	lsr	x23, x13, #63
    e554:	mov	x13, x14
    e558:	cmp	x13, #0x0
    e55c:	add	x13, x13, #0x1
    e560:	cset	w27, ne  // ne = any
    e564:	cmp	x13, #0x1
    e568:	b.hi	e744 <mpfr_add1@@Base+0xbc0>  // b.pmore
    e56c:	add	x11, x11, x12
    e570:	sub	x13, x11, #0x1
    e574:	ldur	w11, [x29, #-52]
    e578:	cmp	w11, #0x5
    e57c:	b.ne	e5a0 <mpfr_add1@@Base+0xa1c>  // b.any
    e580:	ldur	x24, [x29, #-72]
    e584:	ldur	x18, [x29, #-32]
    e588:	ldur	w3, [x29, #-52]
    e58c:	ldur	x28, [x29, #-16]
    e590:	mov	w19, wzr
    e594:	mov	x20, x2
    e598:	cbnz	w27, dec8 <mpfr_add1@@Base+0x344>
    e59c:	b	df28 <mpfr_add1@@Base+0x3a4>
    e5a0:	ldur	x24, [x29, #-72]
    e5a4:	ldur	w3, [x29, #-52]
    e5a8:	ldur	x28, [x29, #-16]
    e5ac:	mov	w11, #0x40                  	// #64
    e5b0:	mov	w14, #0x1                   	// #1
    e5b4:	mov	x15, x2
    e5b8:	and	x12, x8, #0xffffffff
    e5bc:	sub	w11, w11, w8
    e5c0:	lsl	x14, x14, x2
    e5c4:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
    e5c8:	subs	x16, x13, #0x1
    e5cc:	b.lt	e6d4 <mpfr_add1@@Base+0xb50>  // b.tstop
    e5d0:	cbz	w8, e5f8 <mpfr_add1@@Base+0xa74>
    e5d4:	tbnz	x10, #63, e3fc <mpfr_add1@@Base+0x878>
    e5d8:	lsl	x13, x9, x11
    e5dc:	cbz	x10, e60c <mpfr_add1@@Base+0xa88>
    e5e0:	ldur	x9, [x29, #-48]
    e5e4:	sub	x10, x10, #0x1
    e5e8:	ldr	x9, [x9, x10, lsl #3]
    e5ec:	lsr	x17, x9, x12
    e5f0:	add	x13, x17, x13
    e5f4:	b	e610 <mpfr_add1@@Base+0xa8c>
    e5f8:	cbz	x10, e3fc <mpfr_add1@@Base+0x878>
    e5fc:	ldur	x13, [x29, #-48]
    e600:	sub	x10, x10, #0x1
    e604:	ldr	x13, [x13, x10, lsl #3]
    e608:	b	e610 <mpfr_add1@@Base+0xa8c>
    e60c:	mov	x10, #0xffffffffffffffff    	// #-1
    e610:	ldur	x17, [x29, #-64]
    e614:	ldr	x17, [x17, x16, lsl #3]
    e618:	adds	x13, x17, x13
    e61c:	b.cc	e6ac <mpfr_add1@@Base+0xb28>  // b.lo, b.ul, b.last
    e620:	eor	w27, w27, #0x1
    e624:	cbnz	w27, e744 <mpfr_add1@@Base+0xbc0>
    e628:	eor	w23, w23, #0x1
    e62c:	cbz	w23, e638 <mpfr_add1@@Base+0xab4>
    e630:	mov	w27, wzr
    e634:	b	e6ac <mpfr_add1@@Base+0xb28>
    e638:	ldr	x17, [x22]
    e63c:	adds	x17, x17, x14
    e640:	str	x17, [x22]
    e644:	b.cc	e66c <mpfr_add1@@Base+0xae8>  // b.lo, b.ul, b.last
    e648:	mov	w17, #0x1                   	// #1
    e64c:	ldur	x18, [x29, #-16]
    e650:	cmp	x17, x18
    e654:	b.gt	e678 <mpfr_add1@@Base+0xaf4>
    e658:	ldr	x18, [x22, x17, lsl #3]
    e65c:	adds	x18, x18, #0x1
    e660:	str	x18, [x22, x17, lsl #3]
    e664:	add	x17, x17, #0x1
    e668:	b.cs	e64c <mpfr_add1@@Base+0xac8>  // b.hs, b.nlast
    e66c:	mov	w27, wzr
    e670:	mov	w23, wzr
    e674:	b	e6ac <mpfr_add1@@Base+0xb28>
    e678:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e67c:	ldr	x1, [x0, #2624]
    e680:	add	x0, x0, #0xa40
    e684:	blr	x1
    e688:	ldur	x17, [x29, #-72]
    e68c:	ldr	x17, [x17, x0]
    e690:	cmp	x4, x17
    e694:	b.eq	e710 <mpfr_add1@@Base+0xb8c>  // b.none
    e698:	ldur	x17, [x29, #-16]
    e69c:	mov	w27, wzr
    e6a0:	mov	w23, wzr
    e6a4:	add	x4, x4, #0x1
    e6a8:	str	x15, [x22, x17, lsl #3]
    e6ac:	cbz	x13, e6b4 <mpfr_add1@@Base+0xb30>
    e6b0:	cbz	w27, e6e8 <mpfr_add1@@Base+0xb64>
    e6b4:	ldur	x18, [x29, #-32]
    e6b8:	cmn	x13, #0x1
    e6bc:	mov	x13, x16
    e6c0:	b.eq	e5c8 <mpfr_add1@@Base+0xa44>  // b.none
    e6c4:	mov	x20, x2
    e6c8:	mov	x13, x16
    e6cc:	cbz	w27, e5c8 <mpfr_add1@@Base+0xa44>
    e6d0:	b	de98 <mpfr_add1@@Base+0x314>
    e6d4:	cbnz	w27, e744 <mpfr_add1@@Base+0xbc0>
    e6d8:	tbnz	x10, #63, e744 <mpfr_add1@@Base+0xbc0>
    e6dc:	cbz	w8, e720 <mpfr_add1@@Base+0xb9c>
    e6e0:	lsl	x8, x9, x11
    e6e4:	cbz	x8, e720 <mpfr_add1@@Base+0xb9c>
    e6e8:	mov	w27, #0x1                   	// #1
    e6ec:	b	e744 <mpfr_add1@@Base+0xbc0>
    e6f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e6f4:	ldr	x1, [x0, #2624]
    e6f8:	add	x0, x0, #0xa40
    e6fc:	blr	x1
    e700:	ldur	x14, [x29, #-72]
    e704:	ldr	x14, [x14, x0]
    e708:	cmp	x4, x14
    e70c:	b.ne	e7dc <mpfr_add1@@Base+0xc58>  // b.any
    e710:	ldur	x0, [x29, #-32]
    e714:	ldur	w1, [x29, #-52]
    e718:	ldr	w2, [x0, #8]
    e71c:	b	e7c4 <mpfr_add1@@Base+0xc40>
    e720:	ldur	x8, [x29, #-48]
    e724:	mov	w27, #0x1                   	// #1
    e728:	sub	x8, x8, #0x8
    e72c:	cbz	x10, e740 <mpfr_add1@@Base+0xbbc>
    e730:	ldr	x9, [x8, x10, lsl #3]
    e734:	sub	x10, x10, #0x1
    e738:	cbz	x9, e72c <mpfr_add1@@Base+0xba8>
    e73c:	b	e744 <mpfr_add1@@Base+0xbc0>
    e740:	mov	w27, wzr
    e744:	ldur	x24, [x29, #-72]
    e748:	ldur	x18, [x29, #-32]
    e74c:	ldur	w3, [x29, #-52]
    e750:	ldur	x28, [x29, #-16]
    e754:	mov	x20, x2
    e758:	b	de98 <mpfr_add1@@Base+0x314>
    e75c:	sub	x0, x29, #0x8
    e760:	mov	x1, x23
    e764:	bl	be70 <mpfr_tmp_allocate@plt>
    e768:	ldur	x4, [x29, #-40]
    e76c:	b	dfec <mpfr_add1@@Base+0x468>
    e770:	ldur	x8, [x29, #-64]
    e774:	mov	x21, x20
    e778:	sub	x20, x25, x27
    e77c:	add	x0, x22, x20, lsl #3
    e780:	cmp	x0, x8
    e784:	b.eq	e794 <mpfr_add1@@Base+0xc10>  // b.none
    e788:	ldur	x1, [x29, #-64]
    e78c:	lsl	x2, x27, #3
    e790:	bl	bad0 <memcpy@plt>
    e794:	lsl	x2, x20, #3
    e798:	mov	x0, x22
    e79c:	mov	w1, wzr
    e7a0:	bl	c1b0 <memset@plt>
    e7a4:	ldp	x4, x18, [x29, #-40]
    e7a8:	ldur	w3, [x29, #-52]
    e7ac:	ldur	x28, [x29, #-16]
    e7b0:	mov	x20, x21
    e7b4:	b	dde4 <mpfr_add1@@Base+0x260>
    e7b8:	ldr	w2, [x18, #8]
    e7bc:	mov	x0, x18
    e7c0:	mov	w1, w3
    e7c4:	bl	bff0 <mpfr_overflow@plt>
    e7c8:	ldur	x24, [x29, #-72]
    e7cc:	b	e3ac <mpfr_add1@@Base+0x828>
    e7d0:	mov	x20, x4
    e7d4:	mov	w27, #0xffffffff            	// #-1
    e7d8:	b	e1ec <mpfr_add1@@Base+0x668>
    e7dc:	ldur	x15, [x29, #-16]
    e7e0:	mov	w23, wzr
    e7e4:	add	x4, x4, #0x1
    e7e8:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
    e7ec:	str	x14, [x22, x15, lsl #3]
    e7f0:	b	e558 <mpfr_add1@@Base+0x9d4>

000000000000e7f4 <mpfr_add_ui@@Base>:
    e7f4:	sub	sp, sp, #0x80
    e7f8:	stp	x20, x19, [sp, #112]
    e7fc:	mov	w19, w3
    e800:	mov	x8, x1
    e804:	mov	x20, x0
    e808:	stp	x29, x30, [sp, #32]
    e80c:	str	x27, [sp, #48]
    e810:	stp	x26, x25, [sp, #64]
    e814:	stp	x24, x23, [sp, #80]
    e818:	stp	x22, x21, [sp, #96]
    e81c:	add	x29, sp, #0x20
    e820:	cbz	x2, e944 <mpfr_add_ui@@Base+0x150>
    e824:	ldr	x10, [x8, #16]
    e828:	mov	x9, #0x2                   	// #2
    e82c:	movk	x9, #0x8000, lsl #48
    e830:	add	x11, x9, #0x2
    e834:	cmp	x10, x11
    e838:	b.lt	e974 <mpfr_add_ui@@Base+0x180>  // b.tstop
    e83c:	add	x10, x29, #0x18
    e840:	clz	x12, x2
    e844:	mov	w9, #0x40                  	// #64
    e848:	mov	w11, #0x1                   	// #1
    e84c:	str	x10, [sp, #24]
    e850:	lsl	x10, x2, x12
    e854:	str	x9, [sp]
    e858:	str	w11, [sp, #8]
    e85c:	str	x10, [x29, #24]
    e860:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e864:	ldr	x1, [x0, #2656]
    e868:	add	x0, x0, #0xa60
    e86c:	blr	x1
    e870:	mrs	x24, tpidr_el0
    e874:	ldr	w26, [x24, x0]
    e878:	mov	x21, x0
    e87c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e880:	ldr	x1, [x0, #2592]
    e884:	add	x0, x0, #0xa20
    e888:	blr	x1
    e88c:	ldr	x25, [x24, x0]
    e890:	mov	x22, x0
    e894:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e898:	ldr	x1, [x0, #2624]
    e89c:	add	x0, x0, #0xa40
    e8a0:	blr	x1
    e8a4:	ldr	x27, [x24, x0]
    e8a8:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
    e8ac:	mov	x23, x0
    e8b0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    e8b4:	str	x11, [x24, x0]
    e8b8:	sub	x9, x9, x12
    e8bc:	mov	x2, sp
    e8c0:	mov	x0, x20
    e8c4:	mov	x1, x8
    e8c8:	mov	w3, w19
    e8cc:	str	x10, [x24, x22]
    e8d0:	str	x9, [sp, #16]
    e8d4:	bl	c240 <mpfr_add@plt>
    e8d8:	ldr	w8, [x24, x21]
    e8dc:	str	x25, [x24, x22]
    e8e0:	str	x27, [x24, x23]
    e8e4:	mov	w9, w0
    e8e8:	orr	w8, w8, w26
    e8ec:	str	w8, [x24, x21]
    e8f0:	ldr	x10, [x20, #16]
    e8f4:	cmp	x10, x27
    e8f8:	b.gt	e9bc <mpfr_add_ui@@Base+0x1c8>
    e8fc:	cmp	x10, x25
    e900:	b.lt	e9bc <mpfr_add_ui@@Base+0x1c8>  // b.tstop
    e904:	cbz	w9, e920 <mpfr_add_ui@@Base+0x12c>
    e908:	orr	w8, w8, #0x8
    e90c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e910:	ldr	x1, [x0, #2656]
    e914:	add	x0, x0, #0xa60
    e918:	blr	x1
    e91c:	str	w8, [x24, x0]
    e920:	ldp	x20, x19, [sp, #112]
    e924:	ldp	x22, x21, [sp, #96]
    e928:	ldp	x24, x23, [sp, #80]
    e92c:	ldp	x26, x25, [sp, #64]
    e930:	ldr	x27, [sp, #48]
    e934:	ldp	x29, x30, [sp, #32]
    e938:	mov	w0, w9
    e93c:	add	sp, sp, #0x80
    e940:	ret
    e944:	ldr	w3, [x8, #8]
    e948:	mov	x0, x20
    e94c:	mov	w2, w19
    e950:	ldp	x20, x19, [sp, #112]
    e954:	ldp	x22, x21, [sp, #96]
    e958:	ldp	x24, x23, [sp, #80]
    e95c:	ldp	x26, x25, [sp, #64]
    e960:	ldr	x27, [sp, #48]
    e964:	ldp	x29, x30, [sp, #32]
    e968:	mov	x1, x8
    e96c:	add	sp, sp, #0x80
    e970:	b	c6f0 <mpfr_set4@plt>
    e974:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
    e978:	cmp	x10, x11
    e97c:	b.eq	e9d4 <mpfr_add_ui@@Base+0x1e0>  // b.none
    e980:	mov	x8, #0x2                   	// #2
    e984:	movk	x8, #0x8000, lsl #48
    e988:	cmp	x10, x8
    e98c:	b.ne	e9e8 <mpfr_add_ui@@Base+0x1f4>  // b.any
    e990:	str	x9, [x20, #16]
    e994:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    e998:	ldr	x1, [x0, #2656]
    e99c:	add	x0, x0, #0xa60
    e9a0:	blr	x1
    e9a4:	mrs	x8, tpidr_el0
    e9a8:	ldr	w10, [x8, x0]
    e9ac:	mov	w9, wzr
    e9b0:	orr	w10, w10, #0x4
    e9b4:	str	w10, [x8, x0]
    e9b8:	b	e920 <mpfr_add_ui@@Base+0x12c>
    e9bc:	mov	x0, x20
    e9c0:	mov	w1, w9
    e9c4:	mov	w2, w19
    e9c8:	bl	cb80 <mpfr_check_range@plt>
    e9cc:	mov	w9, w0
    e9d0:	b	e920 <mpfr_add_ui@@Base+0x12c>
    e9d4:	str	x11, [x20, #16]
    e9d8:	ldr	w8, [x8, #8]
    e9dc:	mov	w9, wzr
    e9e0:	str	w8, [x20, #8]
    e9e4:	b	e920 <mpfr_add_ui@@Base+0x12c>
    e9e8:	mov	x0, x20
    e9ec:	mov	w3, w19
    e9f0:	ldp	x20, x19, [sp, #112]
    e9f4:	ldp	x22, x21, [sp, #96]
    e9f8:	ldp	x24, x23, [sp, #80]
    e9fc:	ldp	x26, x25, [sp, #64]
    ea00:	ldr	x27, [sp, #48]
    ea04:	ldp	x29, x30, [sp, #32]
    ea08:	mov	x1, x2
    ea0c:	mov	x2, xzr
    ea10:	add	sp, sp, #0x80
    ea14:	b	c640 <mpfr_set_ui_2exp@plt>

000000000000ea18 <mpfr_agm@@Base>:
    ea18:	stp	x29, x30, [sp, #-96]!
    ea1c:	stp	x28, x27, [sp, #16]
    ea20:	stp	x26, x25, [sp, #32]
    ea24:	stp	x24, x23, [sp, #48]
    ea28:	stp	x22, x21, [sp, #64]
    ea2c:	stp	x20, x19, [sp, #80]
    ea30:	mov	x29, sp
    ea34:	sub	sp, sp, #0x130
    ea38:	ldr	x8, [x2, #16]
    ea3c:	mov	x11, #0x2                   	// #2
    ea40:	movk	x11, #0x8000, lsl #48
    ea44:	add	x10, x11, #0x2
    ea48:	mov	x21, x2
    ea4c:	mov	x23, x1
    ea50:	cmp	x8, x10
    ea54:	mov	x19, x0
    ea58:	b.lt	f29c <mpfr_agm@@Base+0x884>  // b.tstop
    ea5c:	ldr	x9, [x23, #16]
    ea60:	cmp	x9, x10
    ea64:	b.lt	f2a8 <mpfr_agm@@Base+0x890>  // b.tstop
    ea68:	ldr	w8, [x21, #8]
    ea6c:	tbnz	w8, #31, f3a4 <mpfr_agm@@Base+0x98c>
    ea70:	ldr	w8, [x23, #8]
    ea74:	tbnz	w8, #31, f3a4 <mpfr_agm@@Base+0x98c>
    ea78:	ldr	x24, [x19]
    ea7c:	mov	w25, w3
    ea80:	subs	x20, x24, #0x1
    ea84:	b.eq	ea98 <mpfr_agm@@Base+0x80>  // b.none
    ea88:	b.le	f2f4 <mpfr_agm@@Base+0x8dc>
    ea8c:	clz	x8, x20
    ea90:	mov	w9, #0x40                  	// #64
    ea94:	sub	x20, x9, x8
    ea98:	mov	w2, #0x1                   	// #1
    ea9c:	mov	x0, x21
    eaa0:	mov	x1, x23
    eaa4:	mov	w27, #0x1                   	// #1
    eaa8:	bl	c9f0 <mpfr_cmp3@plt>
    eaac:	cbz	w0, f2dc <mpfr_agm@@Base+0x8c4>
    eab0:	sub	x8, x29, #0x28
    eab4:	stur	x19, [x8, #-256]
    eab8:	add	x8, x20, x24
    eabc:	cmp	w0, #0x0
    eac0:	add	x9, x8, #0xe
    eac4:	add	x20, x8, #0xf
    eac8:	csel	x22, x23, x21, gt
    eacc:	csel	x21, x21, x23, gt
    ead0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    ead4:	ldr	x1, [x0, #2656]
    ead8:	add	x0, x0, #0xa60
    eadc:	blr	x1
    eae0:	mrs	x28, tpidr_el0
    eae4:	ldr	w8, [x28, x0]
    eae8:	sub	x10, x29, #0x10
    eaec:	stur	w8, [x10, #-256]
    eaf0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    eaf4:	ldr	x1, [x0, #2592]
    eaf8:	add	x0, x0, #0xa20
    eafc:	blr	x1
    eb00:	ldr	x10, [x28, x0]
    eb04:	sub	x11, x29, #0x18
    eb08:	mov	x8, x0
    eb0c:	stur	x10, [x11, #-256]
    eb10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    eb14:	ldr	x1, [x0, #2624]
    eb18:	add	x0, x0, #0xa40
    eb1c:	blr	x1
    eb20:	ldr	x10, [x28, x0]
    eb24:	sub	x11, x29, #0x20
    eb28:	cmp	w25, #0x0
    eb2c:	sub	x12, x29, #0xc
    eb30:	stur	x10, [x11, #-256]
    eb34:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    eb38:	str	x10, [x28, x8]
    eb3c:	cinc	x8, x24, eq  // eq = none
    eb40:	sub	x10, x29, #0x8
    eb44:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
    eb48:	stur	x8, [x10, #-256]
    eb4c:	mov	w8, #0x40                  	// #64
    eb50:	sub	x10, x29, #0x30
    eb54:	stur	xzr, [x29, #-256]
    eb58:	stur	xzr, [x29, #-208]
    eb5c:	stur	w25, [x12, #-256]
    eb60:	str	x11, [x28, x0]
    eb64:	stur	x8, [x10, #-256]
    eb68:	add	x8, x9, #0x3f
    eb6c:	cmp	x9, #0x0
    eb70:	csel	x8, x8, x9, lt  // lt = tstop
    eb74:	asr	x8, x8, #6
    eb78:	lsl	x8, x8, #3
    eb7c:	add	x26, x8, #0x8
    eb80:	cmp	x26, #0x4, lsl #12
    eb84:	b.hi	f118 <mpfr_agm@@Base+0x700>  // b.pmore
    eb88:	add	x9, x26, #0xf
    eb8c:	mov	x8, sp
    eb90:	and	x9, x9, #0xfffffffffffffff0
    eb94:	sub	x8, x8, x9
    eb98:	mov	sp, x8
    eb9c:	stur	x8, [x29, #-16]
    eba0:	mov	x8, sp
    eba4:	sub	x8, x8, x9
    eba8:	stur	w27, [x29, #-32]
    ebac:	mov	sp, x8
    ebb0:	stp	x8, x20, [x29, #-48]
    ebb4:	mov	x8, sp
    ebb8:	sub	x8, x8, x9
    ebbc:	stur	w27, [x29, #-64]
    ebc0:	mov	sp, x8
    ebc4:	stp	x8, x20, [x29, #-80]
    ebc8:	mov	x8, sp
    ebcc:	sub	x0, x8, x9
    ebd0:	stur	x20, [x29, #-104]
    ebd4:	stur	w27, [x29, #-96]
    ebd8:	mov	sp, x0
    ebdc:	stur	x20, [x29, #-136]
    ebe0:	stur	x0, [x29, #-112]
    ebe4:	stur	w27, [x29, #-128]
    ebe8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    ebec:	ldr	x1, [x0, #2656]
    ebf0:	add	x0, x0, #0xa60
    ebf4:	blr	x1
    ebf8:	mov	x26, x0
    ebfc:	str	wzr, [x28, x0]
    ec00:	sub	x0, x29, #0x28
    ec04:	mov	x1, x22
    ec08:	mov	x2, x21
    ec0c:	mov	w3, wzr
    ec10:	bl	be00 <mpfr_mul@plt>
    ec14:	sub	x0, x29, #0x48
    ec18:	mov	x1, x22
    ec1c:	mov	x2, x21
    ec20:	mov	w3, wzr
    ec24:	mov	x19, x22
    ec28:	mov	x22, x21
    ec2c:	bl	c240 <mpfr_add@plt>
    ec30:	ldr	w21, [x28, x26]
    ec34:	tst	w21, #0x3
    ec38:	b.eq	eda8 <mpfr_agm@@Base+0x390>  // b.none
    ec3c:	ldur	x8, [x29, #-256]
    ec40:	cbnz	x8, ed38 <mpfr_agm@@Base+0x320>
    ec44:	ldr	x24, [x19, #16]
    ec48:	ldr	x23, [x22, #16]
    ec4c:	tbnz	w21, #1, eca8 <mpfr_agm@@Base+0x290>
    ec50:	cmp	x23, #0x0
    ec54:	b.gt	ed54 <mpfr_agm@@Base+0x33c>
    ec58:	cmp	x24, x23
    ec5c:	b.gt	ed54 <mpfr_agm@@Base+0x33c>
    ec60:	add	x8, x24, x23
    ec64:	mov	x9, #0xc000000000000003    	// #-4611686018427387901
    ec68:	mov	x10, #0x4                   	// #4
    ec6c:	sub	x9, x9, x8
    ec70:	movk	x10, #0xc000, lsl #48
    ec74:	sub	x8, x10, x8
    ec78:	cmp	x9, #0x0
    ec7c:	csel	x8, x8, x9, lt  // lt = tstop
    ec80:	cmp	x9, #0x1
    ec84:	asr	x21, x8, #1
    ec88:	b.gt	ecf0 <mpfr_agm@@Base+0x2d8>
    ec8c:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    ec90:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    ec94:	mov	w1, #0xc3                  	// #195
    ec98:	add	x0, x0, #0xf10
    ec9c:	add	x2, x2, #0xfde
    eca0:	bl	cb90 <mpfr_assert_fail@plt>
    eca4:	b	ecf0 <mpfr_agm@@Base+0x2d8>
    eca8:	add	x8, x23, x24
    ecac:	mov	x9, #0x4000000000000000    	// #4611686018427387904
    ecb0:	cmp	x8, x9
    ecb4:	b.lt	ecd4 <mpfr_agm@@Base+0x2bc>  // b.tstop
    ecb8:	mov	x9, #0x2                   	// #2
    ecbc:	movk	x9, #0xc000, lsl #48
    ecc0:	add	x8, x8, x9
    ecc4:	cmp	x8, #0x0
    ecc8:	cinc	x8, x8, lt  // lt = tstop
    eccc:	neg	x21, x8, asr #1
    ecd0:	b	ecf0 <mpfr_agm@@Base+0x2d8>
    ecd4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
    ecd8:	cmp	x23, x8
    ecdc:	b.ne	ed70 <mpfr_agm@@Base+0x358>  // b.any
    ece0:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
    ece4:	cmp	x24, x8
    ece8:	b.le	ed8c <mpfr_agm@@Base+0x374>
    ecec:	mov	x21, #0xffffffffffffffff    	// #-1
    ecf0:	ldr	x8, [x19]
    ecf4:	add	x9, x21, x24
    ecf8:	stur	x21, [x29, #-256]
    ecfc:	stur	x8, [x29, #-168]
    ed00:	ldr	w8, [x19, #8]
    ed04:	stur	w8, [x29, #-160]
    ed08:	ldr	x8, [x19, #24]
    ed0c:	stp	x9, x8, [x29, #-152]
    ed10:	ldr	x8, [x22]
    ed14:	add	x9, x21, x23
    ed18:	sub	x21, x29, #0xc8
    ed1c:	stur	x8, [x29, #-200]
    ed20:	ldr	w8, [x22, #8]
    ed24:	stur	w8, [x29, #-192]
    ed28:	ldr	x8, [x22, #24]
    ed2c:	sub	x22, x29, #0xa8
    ed30:	stp	x9, x8, [x29, #-184]
    ed34:	b	ebe8 <mpfr_agm@@Base+0x1d0>
    ed38:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    ed3c:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    ed40:	mov	w1, #0x8d                  	// #141
    ed44:	add	x0, x0, #0xf10
    ed48:	add	x2, x2, #0xf1e
    ed4c:	bl	cb90 <mpfr_assert_fail@plt>
    ed50:	b	ec44 <mpfr_agm@@Base+0x22c>
    ed54:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    ed58:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    ed5c:	mov	w1, #0xc1                  	// #193
    ed60:	add	x0, x0, #0xf10
    ed64:	add	x2, x2, #0xfca
    ed68:	bl	cb90 <mpfr_assert_fail@plt>
    ed6c:	b	ec60 <mpfr_agm@@Base+0x248>
    ed70:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    ed74:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    ed78:	mov	w1, #0xaf                  	// #175
    ed7c:	add	x0, x0, #0xf10
    ed80:	add	x2, x2, #0xf2b
    ed84:	bl	cb90 <mpfr_assert_fail@plt>
    ed88:	b	ece0 <mpfr_agm@@Base+0x2c8>
    ed8c:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    ed90:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    ed94:	mov	w1, #0xb3                  	// #179
    ed98:	add	x0, x0, #0xf10
    ed9c:	add	x2, x2, #0xf7b
    eda0:	bl	cb90 <mpfr_assert_fail@plt>
    eda4:	b	ecec <mpfr_agm@@Base+0x2d4>
    eda8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    edac:	ldr	x1, [x0, #2656]
    edb0:	add	x0, x0, #0xa60
    edb4:	blr	x1
    edb8:	str	wzr, [x28, x0]
    edbc:	sub	x0, x29, #0x28
    edc0:	sub	x1, x29, #0x28
    edc4:	mov	w2, wzr
    edc8:	bl	c990 <mpfr_sqrt@plt>
    edcc:	sub	x0, x29, #0x48
    edd0:	sub	x1, x29, #0x48
    edd4:	mov	w2, #0x1                   	// #1
    edd8:	mov	w3, wzr
    eddc:	bl	c950 <mpfr_div_2ui@plt>
    ede0:	sub	x0, x29, #0x28
    ede4:	sub	x1, x29, #0x48
    ede8:	sub	x2, x29, #0xd8
    edec:	bl	be60 <mpfr_cmp2@plt>
    edf0:	mov	x24, xzr
    edf4:	mov	w26, wzr
    edf8:	cbz	w0, f040 <mpfr_agm@@Base+0x628>
    edfc:	ldur	x8, [x29, #-216]
    ee00:	sub	x23, x20, #0x2
    ee04:	mov	w21, #0x39                  	// #57
    ee08:	mov	x27, x24
    ee0c:	cmp	x8, x23
    ee10:	mov	w25, #0x1                   	// #1
    ee14:	b.gt	f04c <mpfr_agm@@Base+0x634>
    ee18:	add	x8, x20, #0x1
    ee1c:	add	x9, x20, #0x2
    ee20:	cmp	x8, #0x0
    ee24:	csinc	x8, x9, x20, lt  // lt = tstop
    ee28:	mov	x24, xzr
    ee2c:	asr	x26, x8, #1
    ee30:	mov	w25, #0x1                   	// #1
    ee34:	sub	x0, x29, #0x88
    ee38:	sub	x1, x29, #0x28
    ee3c:	sub	x2, x29, #0x48
    ee40:	mov	w3, wzr
    ee44:	bl	c240 <mpfr_add@plt>
    ee48:	sub	x0, x29, #0x88
    ee4c:	sub	x1, x29, #0x88
    ee50:	mov	w2, #0x1                   	// #1
    ee54:	mov	w3, wzr
    ee58:	bl	c950 <mpfr_div_2ui@plt>
    ee5c:	ldur	x8, [x29, #-216]
    ee60:	cmp	x20, x8, lsl #2
    ee64:	b.ge	ef04 <mpfr_agm@@Base+0x4ec>  // b.tcont
    ee68:	sub	x0, x29, #0xf8
    ee6c:	mov	x1, x26
    ee70:	bl	cad0 <mpfr_init2@plt>
    ee74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    ee78:	ldr	x1, [x0, #2656]
    ee7c:	add	x0, x0, #0xa60
    ee80:	blr	x1
    ee84:	mov	x27, x0
    ee88:	str	wzr, [x28, x0]
    ee8c:	sub	x0, x29, #0xf8
    ee90:	sub	x1, x29, #0x48
    ee94:	sub	x2, x29, #0x28
    ee98:	mov	w3, wzr
    ee9c:	bl	bc20 <mpfr_sub@plt>
    eea0:	sub	x0, x29, #0xf8
    eea4:	sub	x1, x29, #0xf8
    eea8:	mov	w2, wzr
    eeac:	bl	c450 <mpfr_sqr@plt>
    eeb0:	sub	x0, x29, #0xf8
    eeb4:	sub	x1, x29, #0xf8
    eeb8:	mov	w2, #0x4                   	// #4
    eebc:	mov	w3, wzr
    eec0:	bl	c950 <mpfr_div_2ui@plt>
    eec4:	sub	x0, x29, #0xf8
    eec8:	sub	x1, x29, #0xf8
    eecc:	sub	x2, x29, #0x88
    eed0:	mov	w3, wzr
    eed4:	bl	c670 <mpfr_div@plt>
    eed8:	ldrb	w8, [x28, x27]
    eedc:	tbz	w8, #0, efd4 <mpfr_agm@@Base+0x5bc>
    eee0:	sub	x0, x29, #0xf8
    eee4:	bl	c110 <mpfr_clear@plt>
    eee8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    eeec:	ldr	x1, [x0, #2656]
    eef0:	add	x0, x0, #0xa60
    eef4:	blr	x1
    eef8:	ldr	w8, [x28, x0]
    eefc:	and	w8, w8, #0x3e
    ef00:	str	w8, [x28, x0]
    ef04:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    ef08:	ldr	x1, [x0, #2656]
    ef0c:	add	x0, x0, #0xa60
    ef10:	blr	x1
    ef14:	mov	x27, x0
    ef18:	str	wzr, [x28, x0]
    ef1c:	sub	x0, x29, #0x68
    ef20:	sub	x1, x29, #0x28
    ef24:	sub	x2, x29, #0x48
    ef28:	mov	w3, wzr
    ef2c:	bl	be00 <mpfr_mul@plt>
    ef30:	ldr	w8, [x28, x27]
    ef34:	tbnz	w8, #1, ef80 <mpfr_agm@@Base+0x568>
    ef38:	sub	x0, x29, #0x28
    ef3c:	sub	x1, x29, #0x68
    ef40:	mov	w2, wzr
    ef44:	bl	c990 <mpfr_sqrt@plt>
    ef48:	sub	x0, x29, #0x48
    ef4c:	sub	x1, x29, #0x88
    ef50:	bl	c4f0 <mpfr_swap@plt>
    ef54:	sub	x0, x29, #0x28
    ef58:	sub	x1, x29, #0x48
    ef5c:	sub	x2, x29, #0xd8
    ef60:	add	x25, x25, #0x1
    ef64:	bl	be60 <mpfr_cmp2@plt>
    ef68:	mov	x27, xzr
    ef6c:	cbz	w0, effc <mpfr_agm@@Base+0x5e4>
    ef70:	ldur	x8, [x29, #-216]
    ef74:	cmp	x8, x23
    ef78:	b.le	ee34 <mpfr_agm@@Base+0x41c>
    ef7c:	b	effc <mpfr_agm@@Base+0x5e4>
    ef80:	ldur	x9, [x29, #-24]
    ef84:	ldur	x10, [x29, #-56]
    ef88:	mov	x12, #0x2                   	// #2
    ef8c:	movk	x12, #0xc000, lsl #48
    ef90:	add	x11, x9, x10
    ef94:	add	x11, x11, x12
    ef98:	cmp	x11, #0x0
    ef9c:	cinc	x11, x11, lt  // lt = tstop
    efa0:	sub	x9, x9, x11, asr #1
    efa4:	sub	x10, x10, x11, asr #1
    efa8:	stur	x9, [x29, #-24]
    efac:	mov	w9, #0x3d                  	// #61
    efb0:	sub	x24, x24, x11, asr #1
    efb4:	stur	x10, [x29, #-56]
    efb8:	and	w8, w8, w9
    efbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    efc0:	ldr	x1, [x0, #2656]
    efc4:	add	x0, x0, #0xa60
    efc8:	blr	x1
    efcc:	str	w8, [x28, x0]
    efd0:	b	ee34 <mpfr_agm@@Base+0x41c>
    efd4:	sub	x0, x29, #0x48
    efd8:	sub	x1, x29, #0x88
    efdc:	sub	x2, x29, #0xf8
    efe0:	mov	w3, wzr
    efe4:	bl	bc20 <mpfr_sub@plt>
    efe8:	ldur	x8, [x29, #-120]
    efec:	ldur	x9, [x29, #-56]
    eff0:	sub	x0, x29, #0xf8
    eff4:	sub	x27, x8, x9
    eff8:	bl	c110 <mpfr_clear@plt>
    effc:	add	x8, x25, x25, lsl #3
    f000:	lsl	x8, x8, #1
    f004:	cmn	x8, #0x32
    f008:	add	x8, x8, #0x32
    f00c:	cset	w26, eq  // eq = none
    f010:	cmn	x25, #0x1
    f014:	clz	x21, x8
    f018:	b.eq	f170 <mpfr_agm@@Base+0x758>  // b.none
    f01c:	cmn	x25, #0x2
    f020:	b.ne	f04c <mpfr_agm@@Base+0x634>  // b.any
    f024:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    f028:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    f02c:	mov	w1, #0x11a                 	// #282
    f030:	add	x0, x0, #0xf10
    f034:	add	x2, x2, #0xfea
    f038:	bl	cb90 <mpfr_assert_fail@plt>
    f03c:	b	f04c <mpfr_agm@@Base+0x634>
    f040:	mov	w21, #0x39                  	// #57
    f044:	mov	x27, x24
    f048:	mov	w25, #0x1                   	// #1
    f04c:	add	x8, x25, #0x1
    f050:	clz	x8, x8
    f054:	mov	w9, #0x40                  	// #64
    f058:	sub	x8, x9, x8
    f05c:	add	x10, x20, #0x3
    f060:	cmp	x20, #0x0
    f064:	ldur	x9, [x29, #-56]
    f068:	csel	x10, x10, x20, lt  // lt = tstop
    f06c:	cmp	x8, x10, asr #2
    f070:	mov	x8, #0x2                   	// #2
    f074:	movk	x8, #0x8000, lsl #48
    f078:	add	x8, x8, #0x2
    f07c:	b.gt	f0cc <mpfr_agm@@Base+0x6b4>
    f080:	cmp	x9, x8
    f084:	b.lt	f0cc <mpfr_agm@@Base+0x6b4>  // b.tstop
    f088:	ldur	x8, [x29, #-72]
    f08c:	sub	x9, x21, #0x40
    f090:	ldur	x0, [x29, #-48]
    f094:	sub	x10, x8, #0x1
    f098:	add	x8, x8, #0x3e
    f09c:	cmp	x10, #0x0
    f0a0:	csel	x8, x8, x10, lt  // lt = tstop
    f0a4:	cmp	w26, #0x0
    f0a8:	asr	x8, x8, #6
    f0ac:	csel	x9, xzr, x9, ne  // ne = any
    f0b0:	add	x1, x8, #0x1
    f0b4:	add	x8, x9, x20
    f0b8:	sub	x2, x8, x27
    f0bc:	sub	x8, x29, #0x8
    f0c0:	ldur	x3, [x8, #-256]
    f0c4:	bl	c3d0 <mpfr_round_p@plt>
    f0c8:	cbnz	w0, f194 <mpfr_agm@@Base+0x77c>
    f0cc:	sub	x9, x29, #0x30
    f0d0:	mov	x8, #0x2                   	// #2
    f0d4:	ldur	x21, [x9, #-256]
    f0d8:	movk	x8, #0x8000, lsl #48
    f0dc:	sub	x8, x8, x20
    f0e0:	sub	x8, x8, #0x103
    f0e4:	cmp	x21, x8
    f0e8:	b.gt	f178 <mpfr_agm@@Base+0x760>
    f0ec:	add	x20, x20, x21
    f0f0:	cmp	x20, #0x0
    f0f4:	cinc	x8, x20, lt  // lt = tstop
    f0f8:	asr	x8, x8, #1
    f0fc:	sub	x9, x29, #0x30
    f100:	stur	x8, [x9, #-256]
    f104:	sub	x9, x20, #0x1
    f108:	mov	w27, #0x1                   	// #1
    f10c:	mov	x21, x22
    f110:	mov	x22, x19
    f114:	b	eb68 <mpfr_agm@@Base+0x150>
    f118:	sub	x0, x29, #0xd0
    f11c:	mov	x1, x26
    f120:	bl	be70 <mpfr_tmp_allocate@plt>
    f124:	stur	x0, [x29, #-16]
    f128:	sub	x0, x29, #0xd0
    f12c:	mov	x1, x26
    f130:	stur	x20, [x29, #-40]
    f134:	stur	w27, [x29, #-32]
    f138:	bl	be70 <mpfr_tmp_allocate@plt>
    f13c:	stur	x0, [x29, #-48]
    f140:	sub	x0, x29, #0xd0
    f144:	mov	x1, x26
    f148:	stur	x20, [x29, #-72]
    f14c:	stur	w27, [x29, #-64]
    f150:	bl	be70 <mpfr_tmp_allocate@plt>
    f154:	stur	x0, [x29, #-80]
    f158:	sub	x0, x29, #0xd0
    f15c:	mov	x1, x26
    f160:	stur	x20, [x29, #-104]
    f164:	stur	w27, [x29, #-96]
    f168:	bl	be70 <mpfr_tmp_allocate@plt>
    f16c:	b	ebdc <mpfr_agm@@Base+0x1c4>
    f170:	mov	x8, xzr
    f174:	b	f05c <mpfr_agm@@Base+0x644>
    f178:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    f17c:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    f180:	mov	w1, #0x11f                 	// #287
    f184:	add	x0, x0, #0xf10
    f188:	add	x2, x2, #0xff6
    f18c:	bl	cb90 <mpfr_assert_fail@plt>
    f190:	b	f0ec <mpfr_agm@@Base+0x6d4>
    f194:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f198:	ldr	x1, [x0, #2656]
    f19c:	add	x0, x0, #0xa60
    f1a0:	blr	x1
    f1a4:	ldr	w8, [x28, x0]
    f1a8:	mov	w9, #0x37                  	// #55
    f1ac:	ldur	x21, [x29, #-256]
    f1b0:	tst	w8, w9
    f1b4:	sub	x9, x29, #0xc
    f1b8:	ldur	w20, [x9, #-256]
    f1bc:	sub	x9, x29, #0x18
    f1c0:	ldur	x22, [x9, #-256]
    f1c4:	sub	x9, x29, #0x28
    f1c8:	ldur	x19, [x9, #-256]
    f1cc:	b.ne	f310 <mpfr_agm@@Base+0x8f8>  // b.any
    f1d0:	ldur	w3, [x29, #-64]
    f1d4:	sub	x1, x29, #0x48
    f1d8:	mov	x0, x19
    f1dc:	mov	w2, w20
    f1e0:	bl	c6f0 <mpfr_set4@plt>
    f1e4:	ldr	x8, [x19, #16]
    f1e8:	add	x9, x24, x21
    f1ec:	mov	w21, w0
    f1f0:	sub	x9, x8, x9
    f1f4:	str	x9, [x19, #16]
    f1f8:	ldur	x8, [x29, #-208]
    f1fc:	cbnz	x8, f33c <mpfr_agm@@Base+0x924>
    f200:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f204:	ldr	x1, [x0, #2656]
    f208:	add	x0, x0, #0xa60
    f20c:	blr	x1
    f210:	sub	x8, x29, #0x10
    f214:	ldur	w8, [x8, #-256]
    f218:	str	w8, [x28, x0]
    f21c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f220:	ldr	x1, [x0, #2592]
    f224:	add	x0, x0, #0xa20
    f228:	blr	x1
    f22c:	str	x22, [x28, x0]
    f230:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f234:	ldr	x1, [x0, #2624]
    f238:	add	x0, x0, #0xa40
    f23c:	blr	x1
    f240:	sub	x10, x29, #0x20
    f244:	ldur	x10, [x10, #-256]
    f248:	cmp	x9, x10
    f24c:	str	x10, [x28, x0]
    f250:	b.gt	f34c <mpfr_agm@@Base+0x934>
    f254:	cmp	x9, x22
    f258:	b.lt	f34c <mpfr_agm@@Base+0x934>  // b.tstop
    f25c:	cbz	w21, f278 <mpfr_agm@@Base+0x860>
    f260:	orr	w8, w8, #0x8
    f264:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f268:	ldr	x1, [x0, #2656]
    f26c:	add	x0, x0, #0xa60
    f270:	blr	x1
    f274:	str	w8, [x28, x0]
    f278:	mov	w0, w21
    f27c:	mov	sp, x29
    f280:	ldp	x20, x19, [sp, #80]
    f284:	ldp	x22, x21, [sp, #64]
    f288:	ldp	x24, x23, [sp, #48]
    f28c:	ldp	x26, x25, [sp, #32]
    f290:	ldp	x28, x27, [sp, #16]
    f294:	ldp	x29, x30, [sp], #96
    f298:	ret
    f29c:	cmp	x8, x11
    f2a0:	b.eq	f3a4 <mpfr_agm@@Base+0x98c>  // b.none
    f2a4:	ldr	x9, [x23, #16]
    f2a8:	cmp	x9, x11
    f2ac:	b.eq	f3a4 <mpfr_agm@@Base+0x98c>  // b.none
    f2b0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    f2b4:	cmp	x8, x10
    f2b8:	b.eq	f364 <mpfr_agm@@Base+0x94c>  // b.none
    f2bc:	cmp	x9, x10
    f2c0:	b.eq	f364 <mpfr_agm@@Base+0x94c>  // b.none
    f2c4:	mov	w8, #0x1                   	// #1
    f2c8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
    f2cc:	mov	w21, wzr
    f2d0:	str	w8, [x19, #8]
    f2d4:	str	x9, [x19, #16]
    f2d8:	b	f278 <mpfr_agm@@Base+0x860>
    f2dc:	ldr	w3, [x21, #8]
    f2e0:	mov	x0, x19
    f2e4:	mov	x1, x21
    f2e8:	mov	w2, w25
    f2ec:	bl	c6f0 <mpfr_set4@plt>
    f2f0:	b	f35c <mpfr_agm@@Base+0x944>
    f2f4:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    f2f8:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
    f2fc:	add	x0, x0, #0xf10
    f300:	add	x2, x2, #0xf16
    f304:	mov	w1, #0x5f                  	// #95
    f308:	bl	cb90 <mpfr_assert_fail@plt>
    f30c:	b	ea8c <mpfr_agm@@Base+0x74>
    f310:	tbnz	w8, #1, f3d0 <mpfr_agm@@Base+0x9b8>
    f314:	tbnz	w8, #0, f400 <mpfr_agm@@Base+0x9e8>
    f318:	tbnz	w8, #5, f430 <mpfr_agm@@Base+0xa18>
    f31c:	tbz	w8, #2, f1d0 <mpfr_agm@@Base+0x7b8>
    f320:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    f324:	adrp	x2, 58000 <mpfr_free_pool@@Base+0x287c>
    f328:	add	x0, x0, #0xf10
    f32c:	add	x2, x2, #0x94
    f330:	mov	w1, #0x12a                 	// #298
    f334:	bl	cb90 <mpfr_assert_fail@plt>
    f338:	b	f1d0 <mpfr_agm@@Base+0x7b8>
    f33c:	mov	x0, x8
    f340:	bl	c460 <mpfr_tmp_free@plt>
    f344:	ldr	x9, [x19, #16]
    f348:	b	f200 <mpfr_agm@@Base+0x7e8>
    f34c:	mov	x0, x19
    f350:	mov	w1, w21
    f354:	mov	w2, w20
    f358:	bl	cb80 <mpfr_check_range@plt>
    f35c:	mov	w21, w0
    f360:	b	f278 <mpfr_agm@@Base+0x860>
    f364:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    f368:	cmp	x8, x10
    f36c:	b.eq	f3a4 <mpfr_agm@@Base+0x98c>  // b.none
    f370:	cmp	x9, x10
    f374:	b.eq	f3a4 <mpfr_agm@@Base+0x98c>  // b.none
    f378:	ldr	w8, [x21, #8]
    f37c:	cmp	w8, #0x1
    f380:	b.lt	f3a4 <mpfr_agm@@Base+0x98c>  // b.tstop
    f384:	ldr	w9, [x23, #8]
    f388:	cmp	w9, #0x1
    f38c:	b.lt	f3a4 <mpfr_agm@@Base+0x98c>  // b.tstop
    f390:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f394:	mov	w21, wzr
    f398:	str	x9, [x19, #16]
    f39c:	str	w8, [x19, #8]
    f3a0:	b	f278 <mpfr_agm@@Base+0x860>
    f3a4:	str	x11, [x19, #16]
    f3a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f3ac:	ldr	x1, [x0, #2656]
    f3b0:	add	x0, x0, #0xa60
    f3b4:	blr	x1
    f3b8:	mrs	x8, tpidr_el0
    f3bc:	ldr	w9, [x8, x0]
    f3c0:	mov	w21, wzr
    f3c4:	orr	w9, w9, #0x4
    f3c8:	str	w9, [x8, x0]
    f3cc:	b	f278 <mpfr_agm@@Base+0x860>
    f3d0:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    f3d4:	adrp	x2, 58000 <mpfr_free_pool@@Base+0x287c>
    f3d8:	add	x0, x0, #0xf10
    f3dc:	add	x2, x2, #0x39
    f3e0:	mov	w1, #0x127                 	// #295
    f3e4:	bl	cb90 <mpfr_assert_fail@plt>
    f3e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f3ec:	ldr	x1, [x0, #2656]
    f3f0:	add	x0, x0, #0xa60
    f3f4:	blr	x1
    f3f8:	ldr	w8, [x28, x0]
    f3fc:	tbz	w8, #0, f318 <mpfr_agm@@Base+0x900>
    f400:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    f404:	adrp	x2, 58000 <mpfr_free_pool@@Base+0x287c>
    f408:	add	x0, x0, #0xf10
    f40c:	add	x2, x2, #0x57
    f410:	mov	w1, #0x128                 	// #296
    f414:	bl	cb90 <mpfr_assert_fail@plt>
    f418:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f41c:	ldr	x1, [x0, #2656]
    f420:	add	x0, x0, #0xa60
    f424:	blr	x1
    f428:	ldr	w8, [x28, x0]
    f42c:	tbz	w8, #5, f31c <mpfr_agm@@Base+0x904>
    f430:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
    f434:	adrp	x2, 58000 <mpfr_free_pool@@Base+0x287c>
    f438:	add	x0, x0, #0xf10
    f43c:	add	x2, x2, #0x75
    f440:	mov	w1, #0x129                 	// #297
    f444:	bl	cb90 <mpfr_assert_fail@plt>
    f448:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f44c:	ldr	x1, [x0, #2656]
    f450:	add	x0, x0, #0xa60
    f454:	blr	x1
    f458:	ldr	w8, [x28, x0]
    f45c:	tbz	w8, #2, f1d0 <mpfr_agm@@Base+0x7b8>
    f460:	b	f320 <mpfr_agm@@Base+0x908>

000000000000f464 <mpfr_clear@@Base>:
    f464:	stp	x29, x30, [sp, #-32]!
    f468:	str	x19, [sp, #16]
    f46c:	mov	x19, x0
    f470:	ldr	x0, [x0, #24]
    f474:	mov	x29, sp
    f478:	ldr	x8, [x0, #-8]!
    f47c:	lsl	x8, x8, #3
    f480:	add	x1, x8, #0x8
    f484:	bl	cc80 <mpfr_free_func@plt>
    f488:	str	xzr, [x19, #24]
    f48c:	ldr	x19, [sp, #16]
    f490:	ldp	x29, x30, [sp], #32
    f494:	ret

000000000000f498 <mpfr_cmp3@@Base>:
    f498:	stp	x29, x30, [sp, #-16]!
    f49c:	ldr	x10, [x0, #16]
    f4a0:	ldr	w9, [x1, #8]
    f4a4:	mov	x8, #0x2                   	// #2
    f4a8:	movk	x8, #0x8000, lsl #48
    f4ac:	add	x12, x8, #0x2
    f4b0:	cmp	x10, x12
    f4b4:	mul	w9, w9, w2
    f4b8:	mov	x29, sp
    f4bc:	b.lt	f598 <mpfr_cmp3@@Base+0x100>  // b.tstop
    f4c0:	ldr	x11, [x1, #16]
    f4c4:	cmp	x11, x12
    f4c8:	b.lt	f5a4 <mpfr_cmp3@@Base+0x10c>  // b.tstop
    f4cc:	ldr	w8, [x0, #8]
    f4d0:	cmp	w9, w8
    f4d4:	b.ne	f4f0 <mpfr_cmp3@@Base+0x58>  // b.any
    f4d8:	cmp	x10, x11
    f4dc:	b.le	f4e8 <mpfr_cmp3@@Base+0x50>
    f4e0:	mov	w8, w9
    f4e4:	b	f4f0 <mpfr_cmp3@@Base+0x58>
    f4e8:	b.ge	f4fc <mpfr_cmp3@@Base+0x64>  // b.tcont
    f4ec:	neg	w8, w9
    f4f0:	mov	w0, w8
    f4f4:	ldp	x29, x30, [sp], #16
    f4f8:	ret
    f4fc:	ldr	x10, [x0]
    f500:	ldr	x11, [x1]
    f504:	ldr	x8, [x0, #24]
    f508:	sub	x12, x10, #0x1
    f50c:	add	x10, x10, #0x3e
    f510:	sub	x13, x11, #0x1
    f514:	cmp	x12, #0x0
    f518:	add	x11, x11, #0x3e
    f51c:	csel	x12, x10, x12, lt  // lt = tstop
    f520:	cmp	x13, #0x0
    f524:	ldr	x10, [x1, #24]
    f528:	csel	x11, x11, x13, lt  // lt = tstop
    f52c:	asr	x11, x11, #6
    f530:	orr	x13, x11, x12, asr #6
    f534:	asr	x12, x12, #6
    f538:	tbnz	x13, #63, f560 <mpfr_cmp3@@Base+0xc8>
    f53c:	ldr	x13, [x8, x12, lsl #3]
    f540:	ldr	x14, [x10, x11, lsl #3]
    f544:	cmp	x13, x14
    f548:	b.hi	f4e0 <mpfr_cmp3@@Base+0x48>  // b.pmore
    f54c:	b.cc	f4ec <mpfr_cmp3@@Base+0x54>  // b.lo, b.ul, b.last
    f550:	sub	x12, x12, #0x1
    f554:	sub	x11, x11, #0x1
    f558:	orr	x13, x11, x12
    f55c:	tbz	x13, #63, f53c <mpfr_cmp3@@Base+0xa4>
    f560:	tbnz	x12, #63, f578 <mpfr_cmp3@@Base+0xe0>
    f564:	ldr	x13, [x8, x12, lsl #3]
    f568:	cbnz	x13, f4e0 <mpfr_cmp3@@Base+0x48>
    f56c:	cmp	x12, #0x0
    f570:	sub	x12, x12, #0x1
    f574:	b.gt	f564 <mpfr_cmp3@@Base+0xcc>
    f578:	tbnz	x11, #63, f590 <mpfr_cmp3@@Base+0xf8>
    f57c:	ldr	x8, [x10, x11, lsl #3]
    f580:	cbnz	x8, f4ec <mpfr_cmp3@@Base+0x54>
    f584:	subs	x11, x11, #0x1
    f588:	b.ge	f57c <mpfr_cmp3@@Base+0xe4>  // b.tcont
    f58c:	b	f4f0 <mpfr_cmp3@@Base+0x58>
    f590:	mov	w8, wzr
    f594:	b	f4f0 <mpfr_cmp3@@Base+0x58>
    f598:	cmp	x10, x8
    f59c:	b.eq	f5ac <mpfr_cmp3@@Base+0x114>  // b.none
    f5a0:	ldr	x11, [x1, #16]
    f5a4:	cmp	x11, x8
    f5a8:	b.ne	f5d4 <mpfr_cmp3@@Base+0x13c>  // b.any
    f5ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f5b0:	ldr	x1, [x0, #2656]
    f5b4:	add	x0, x0, #0xa60
    f5b8:	blr	x1
    f5bc:	mrs	x9, tpidr_el0
    f5c0:	ldr	w10, [x9, x0]
    f5c4:	mov	w8, wzr
    f5c8:	orr	w10, w10, #0x10
    f5cc:	str	w10, [x9, x0]
    f5d0:	b	f4f0 <mpfr_cmp3@@Base+0x58>
    f5d4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    f5d8:	cmp	x10, x8
    f5dc:	b.ne	f5f4 <mpfr_cmp3@@Base+0x15c>  // b.any
    f5e0:	ldr	w10, [x0, #8]
    f5e4:	cmp	w9, w10
    f5e8:	ccmp	x11, x8, #0x0, eq  // eq = none
    f5ec:	csel	w0, wzr, w10, eq  // eq = none
    f5f0:	b	f4f4 <mpfr_cmp3@@Base+0x5c>
    f5f4:	cmp	x11, x8
    f5f8:	b.eq	f4ec <mpfr_cmp3@@Base+0x54>  // b.none
    f5fc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    f600:	cmp	x10, x8
    f604:	b.ne	f614 <mpfr_cmp3@@Base+0x17c>  // b.any
    f608:	cmp	x11, x8
    f60c:	csneg	w8, wzr, w9, eq  // eq = none
    f610:	b	f4f0 <mpfr_cmp3@@Base+0x58>
    f614:	ldr	w8, [x0, #8]
    f618:	b	f4f0 <mpfr_cmp3@@Base+0x58>

000000000000f61c <mpfr_cmp@@Base>:
    f61c:	mov	w2, #0x1                   	// #1
    f620:	b	c9f0 <mpfr_cmp3@plt>

000000000000f624 <mpfr_cmpabs@@Base>:
    f624:	stp	x29, x30, [sp, #-16]!
    f628:	ldr	x8, [x0, #16]
    f62c:	mov	x10, #0x2                   	// #2
    f630:	movk	x10, #0x8000, lsl #48
    f634:	add	x11, x10, #0x2
    f638:	cmp	x8, x11
    f63c:	mov	x29, sp
    f640:	b.lt	f708 <mpfr_cmpabs@@Base+0xe4>  // b.tstop
    f644:	ldr	x9, [x1, #16]
    f648:	cmp	x9, x11
    f64c:	b.lt	f714 <mpfr_cmpabs@@Base+0xf0>  // b.tstop
    f650:	cmp	x8, x9
    f654:	b.le	f660 <mpfr_cmpabs@@Base+0x3c>
    f658:	mov	w0, #0x1                   	// #1
    f65c:	b	f668 <mpfr_cmpabs@@Base+0x44>
    f660:	b.ge	f670 <mpfr_cmpabs@@Base+0x4c>  // b.tcont
    f664:	mov	w0, #0xffffffff            	// #-1
    f668:	ldp	x29, x30, [sp], #16
    f66c:	ret
    f670:	ldr	x9, [x0]
    f674:	ldr	x11, [x1]
    f678:	ldr	x10, [x0, #24]
    f67c:	ldr	x8, [x1, #24]
    f680:	sub	x12, x9, #0x1
    f684:	add	x9, x9, #0x3e
    f688:	sub	x13, x11, #0x1
    f68c:	cmp	x12, #0x0
    f690:	add	x14, x11, #0x3e
    f694:	csel	x9, x9, x12, lt  // lt = tstop
    f698:	cmp	x13, #0x0
    f69c:	asr	x11, x9, #6
    f6a0:	csel	x9, x14, x13, lt  // lt = tstop
    f6a4:	orr	x12, x11, x9, asr #6
    f6a8:	asr	x9, x9, #6
    f6ac:	tbnz	x12, #63, f6d4 <mpfr_cmpabs@@Base+0xb0>
    f6b0:	ldr	x12, [x10, x11, lsl #3]
    f6b4:	ldr	x13, [x8, x9, lsl #3]
    f6b8:	cmp	x12, x13
    f6bc:	b.hi	f658 <mpfr_cmpabs@@Base+0x34>  // b.pmore
    f6c0:	b.cc	f664 <mpfr_cmpabs@@Base+0x40>  // b.lo, b.ul, b.last
    f6c4:	sub	x11, x11, #0x1
    f6c8:	sub	x9, x9, #0x1
    f6cc:	orr	x12, x11, x9
    f6d0:	tbz	x12, #63, f6b0 <mpfr_cmpabs@@Base+0x8c>
    f6d4:	tbnz	x11, #63, f6ec <mpfr_cmpabs@@Base+0xc8>
    f6d8:	ldr	x12, [x10, x11, lsl #3]
    f6dc:	cbnz	x12, f658 <mpfr_cmpabs@@Base+0x34>
    f6e0:	cmp	x11, #0x0
    f6e4:	sub	x11, x11, #0x1
    f6e8:	b.gt	f6d8 <mpfr_cmpabs@@Base+0xb4>
    f6ec:	mov	w0, wzr
    f6f0:	tbnz	x9, #63, f668 <mpfr_cmpabs@@Base+0x44>
    f6f4:	ldr	x10, [x8, x9, lsl #3]
    f6f8:	cbnz	x10, f664 <mpfr_cmpabs@@Base+0x40>
    f6fc:	subs	x9, x9, #0x1
    f700:	b.ge	f6f4 <mpfr_cmpabs@@Base+0xd0>  // b.tcont
    f704:	b	f668 <mpfr_cmpabs@@Base+0x44>
    f708:	cmp	x8, x10
    f70c:	b.eq	f71c <mpfr_cmpabs@@Base+0xf8>  // b.none
    f710:	ldr	x9, [x1, #16]
    f714:	cmp	x9, x10
    f718:	b.ne	f748 <mpfr_cmpabs@@Base+0x124>  // b.any
    f71c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f720:	ldr	x1, [x0, #2656]
    f724:	add	x0, x0, #0xa60
    f728:	blr	x1
    f72c:	mov	x8, x0
    f730:	mrs	x9, tpidr_el0
    f734:	ldr	w10, [x9, x8]
    f738:	mov	w0, wzr
    f73c:	orr	w10, w10, #0x10
    f740:	str	w10, [x9, x8]
    f744:	b	f668 <mpfr_cmpabs@@Base+0x44>
    f748:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
    f74c:	cmp	x8, x10
    f750:	b.ne	f75c <mpfr_cmpabs@@Base+0x138>  // b.any
    f754:	cmp	x9, x10
    f758:	b	f76c <mpfr_cmpabs@@Base+0x148>
    f75c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
    f760:	cmp	x9, x10
    f764:	b.ne	f664 <mpfr_cmpabs@@Base+0x40>  // b.any
    f768:	cmp	x8, x10
    f76c:	cset	w0, ne  // ne = any
    f770:	b	f668 <mpfr_cmpabs@@Base+0x44>

000000000000f774 <mpfr_cmp_si_2exp@@Base>:
    f774:	stp	x29, x30, [sp, #-16]!
    f778:	ldr	x10, [x0, #16]
    f77c:	cmp	x1, #0x0
    f780:	mov	w8, #0xffffffff            	// #-1
    f784:	cneg	w9, w8, ge  // ge = tcont
    f788:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    f78c:	cmp	x10, x8
    f790:	mov	x29, sp
    f794:	b.le	f85c <mpfr_cmp_si_2exp@@Base+0xe8>
    f798:	ldr	w8, [x0, #8]
    f79c:	cbz	x1, f7fc <mpfr_cmp_si_2exp@@Base+0x88>
    f7a0:	cmp	w8, w9
    f7a4:	b.ne	f7fc <mpfr_cmp_si_2exp@@Base+0x88>  // b.any
    f7a8:	cmp	x1, #0x0
    f7ac:	cneg	x8, x1, mi  // mi = first
    f7b0:	cmp	x10, x2
    f7b4:	b.le	f7f8 <mpfr_cmp_si_2exp@@Base+0x84>
    f7b8:	mov	x11, #0xffffffffffffffbe    	// #-66
    f7bc:	movk	x11, #0x3fff, lsl #48
    f7c0:	cmp	x2, x11
    f7c4:	b.gt	f7d4 <mpfr_cmp_si_2exp@@Base+0x60>
    f7c8:	add	x11, x2, #0x40
    f7cc:	cmp	x10, x11
    f7d0:	b.gt	f7ec <mpfr_cmp_si_2exp@@Base+0x78>
    f7d4:	clz	x11, x8
    f7d8:	mov	w12, #0x40                  	// #64
    f7dc:	sub	w10, w10, w2
    f7e0:	sub	w12, w12, w11
    f7e4:	cmp	w12, w10
    f7e8:	b.ge	f7f4 <mpfr_cmp_si_2exp@@Base+0x80>  // b.tcont
    f7ec:	mov	w8, w9
    f7f0:	b	f7fc <mpfr_cmp_si_2exp@@Base+0x88>
    f7f4:	b.le	f808 <mpfr_cmp_si_2exp@@Base+0x94>
    f7f8:	neg	w8, w9
    f7fc:	mov	w0, w8
    f800:	ldp	x29, x30, [sp], #16
    f804:	ret
    f808:	ldr	x10, [x0]
    f80c:	ldr	x12, [x0, #24]
    f810:	lsl	x8, x8, x11
    f814:	sub	x13, x10, #0x1
    f818:	add	x10, x10, #0x3e
    f81c:	cmp	x13, #0x0
    f820:	csel	x10, x10, x13, lt  // lt = tstop
    f824:	asr	x10, x10, #6
    f828:	ldr	x13, [x12, x10, lsl #3]
    f82c:	cmp	x13, x8
    f830:	b.hi	f7ec <mpfr_cmp_si_2exp@@Base+0x78>  // b.pmore
    f834:	b.cc	f7f8 <mpfr_cmp_si_2exp@@Base+0x84>  // b.lo, b.ul, b.last
    f838:	sub	x8, x12, #0x8
    f83c:	subs	x11, x10, #0x1
    f840:	b.lt	f854 <mpfr_cmp_si_2exp@@Base+0xe0>  // b.tstop
    f844:	ldr	x12, [x8, x10, lsl #3]
    f848:	mov	x10, x11
    f84c:	cbz	x12, f83c <mpfr_cmp_si_2exp@@Base+0xc8>
    f850:	b	f7ec <mpfr_cmp_si_2exp@@Base+0x78>
    f854:	mov	w8, wzr
    f858:	b	f7fc <mpfr_cmp_si_2exp@@Base+0x88>
    f85c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
    f860:	cmp	x10, x8
    f864:	b.eq	f87c <mpfr_cmp_si_2exp@@Base+0x108>  // b.none
    f868:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
    f86c:	cmp	x10, x8
    f870:	b.ne	f888 <mpfr_cmp_si_2exp@@Base+0x114>  // b.any
    f874:	ldr	w8, [x0, #8]
    f878:	b	f7fc <mpfr_cmp_si_2exp@@Base+0x88>
    f87c:	cmp	x1, #0x0
    f880:	csneg	w8, wzr, w9, eq  // eq = none
    f884:	b	f7fc <mpfr_cmp_si_2exp@@Base+0x88>
    f888:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f88c:	ldr	x1, [x0, #2656]
    f890:	add	x0, x0, #0xa60
    f894:	blr	x1
    f898:	mrs	x9, tpidr_el0
    f89c:	ldr	w10, [x9, x0]
    f8a0:	mov	w8, wzr
    f8a4:	orr	w10, w10, #0x10
    f8a8:	str	w10, [x9, x0]
    f8ac:	b	f7fc <mpfr_cmp_si_2exp@@Base+0x88>

000000000000f8b0 <mpfr_cmp_si@@Base>:
    f8b0:	mov	x2, xzr
    f8b4:	b	c430 <mpfr_cmp_si_2exp@plt>

000000000000f8b8 <mpfr_cmp_ui_2exp@@Base>:
    f8b8:	stp	x29, x30, [sp, #-16]!
    f8bc:	ldr	x8, [x0, #16]
    f8c0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    f8c4:	mov	x29, sp
    f8c8:	cmp	x8, x9
    f8cc:	b.le	f988 <mpfr_cmp_ui_2exp@@Base+0xd0>
    f8d0:	ldr	w9, [x0, #8]
    f8d4:	tbnz	w9, #31, f954 <mpfr_cmp_ui_2exp@@Base+0x9c>
    f8d8:	cbz	x1, f948 <mpfr_cmp_ui_2exp@@Base+0x90>
    f8dc:	cmp	x8, x2
    f8e0:	b.le	f954 <mpfr_cmp_ui_2exp@@Base+0x9c>
    f8e4:	mov	x9, #0xffffffffffffffbe    	// #-66
    f8e8:	movk	x9, #0x3fff, lsl #48
    f8ec:	cmp	x2, x9
    f8f0:	b.gt	f900 <mpfr_cmp_ui_2exp@@Base+0x48>
    f8f4:	add	x9, x2, #0x40
    f8f8:	cmp	x8, x9
    f8fc:	b.gt	f948 <mpfr_cmp_ui_2exp@@Base+0x90>
    f900:	clz	x9, x1
    f904:	mov	w10, #0x40                  	// #64
    f908:	sub	w8, w8, w2
    f90c:	sub	w10, w10, w9
    f910:	cmp	w10, w8
    f914:	b.lt	f948 <mpfr_cmp_ui_2exp@@Base+0x90>  // b.tstop
    f918:	b.gt	f954 <mpfr_cmp_ui_2exp@@Base+0x9c>
    f91c:	ldr	x8, [x0]
    f920:	ldr	x10, [x0, #24]
    f924:	lsl	x9, x1, x9
    f928:	sub	x11, x8, #0x1
    f92c:	add	x8, x8, #0x3e
    f930:	cmp	x11, #0x0
    f934:	csel	x8, x8, x11, lt  // lt = tstop
    f938:	asr	x8, x8, #6
    f93c:	ldr	x11, [x10, x8, lsl #3]
    f940:	cmp	x11, x9
    f944:	b.ls	f950 <mpfr_cmp_ui_2exp@@Base+0x98>  // b.plast
    f948:	mov	w0, #0x1                   	// #1
    f94c:	b	f958 <mpfr_cmp_ui_2exp@@Base+0xa0>
    f950:	b.cs	f960 <mpfr_cmp_ui_2exp@@Base+0xa8>  // b.hs, b.nlast
    f954:	mov	w0, #0xffffffff            	// #-1
    f958:	ldp	x29, x30, [sp], #16
    f95c:	ret
    f960:	sub	x9, x10, #0x8
    f964:	mov	w0, #0x1                   	// #1
    f968:	subs	x10, x8, #0x1
    f96c:	b.lt	f980 <mpfr_cmp_ui_2exp@@Base+0xc8>  // b.tstop
    f970:	ldr	x11, [x9, x8, lsl #3]
    f974:	mov	x8, x10
    f978:	cbz	x11, f968 <mpfr_cmp_ui_2exp@@Base+0xb0>
    f97c:	b	f958 <mpfr_cmp_ui_2exp@@Base+0xa0>
    f980:	mov	w0, wzr
    f984:	b	f958 <mpfr_cmp_ui_2exp@@Base+0xa0>
    f988:	b.eq	f9c8 <mpfr_cmp_ui_2exp@@Base+0x110>  // b.none
    f98c:	mov	x9, #0x2                   	// #2
    f990:	movk	x9, #0x8000, lsl #48
    f994:	cmp	x8, x9
    f998:	b.ne	f9d0 <mpfr_cmp_ui_2exp@@Base+0x118>  // b.any
    f99c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    f9a0:	ldr	x1, [x0, #2656]
    f9a4:	add	x0, x0, #0xa60
    f9a8:	blr	x1
    f9ac:	mov	x8, x0
    f9b0:	mrs	x9, tpidr_el0
    f9b4:	ldr	w10, [x9, x8]
    f9b8:	mov	w0, wzr
    f9bc:	orr	w10, w10, #0x10
    f9c0:	str	w10, [x9, x8]
    f9c4:	b	f958 <mpfr_cmp_ui_2exp@@Base+0xa0>
    f9c8:	ldr	w0, [x0, #8]
    f9cc:	b	f958 <mpfr_cmp_ui_2exp@@Base+0xa0>
    f9d0:	cmp	x1, #0x0
    f9d4:	csetm	w0, ne  // ne = any
    f9d8:	b	f958 <mpfr_cmp_ui_2exp@@Base+0xa0>

000000000000f9dc <mpfr_cmp_ui@@Base>:
    f9dc:	mov	x2, xzr
    f9e0:	b	c000 <mpfr_cmp_ui_2exp@plt>

000000000000f9e4 <mpfr_greater_p@@Base>:
    f9e4:	stp	x29, x30, [sp, #-16]!
    f9e8:	ldr	x9, [x0, #16]
    f9ec:	mov	x8, #0x2                   	// #2
    f9f0:	movk	x8, #0x8000, lsl #48
    f9f4:	mov	x29, sp
    f9f8:	cmp	x9, x8
    f9fc:	b.eq	fa0c <mpfr_greater_p@@Base+0x28>  // b.none
    fa00:	ldr	x9, [x1, #16]
    fa04:	cmp	x9, x8
    fa08:	b.ne	fa14 <mpfr_greater_p@@Base+0x30>  // b.any
    fa0c:	mov	w0, wzr
    fa10:	b	fa24 <mpfr_greater_p@@Base+0x40>
    fa14:	mov	w2, #0x1                   	// #1
    fa18:	bl	c9f0 <mpfr_cmp3@plt>
    fa1c:	cmp	w0, #0x0
    fa20:	cset	w0, gt
    fa24:	ldp	x29, x30, [sp], #16
    fa28:	ret

000000000000fa2c <mpfr_greaterequal_p@@Base>:
    fa2c:	stp	x29, x30, [sp, #-16]!
    fa30:	ldr	x9, [x0, #16]
    fa34:	mov	x8, #0x2                   	// #2
    fa38:	movk	x8, #0x8000, lsl #48
    fa3c:	mov	x29, sp
    fa40:	cmp	x9, x8
    fa44:	b.eq	fa54 <mpfr_greaterequal_p@@Base+0x28>  // b.none
    fa48:	ldr	x9, [x1, #16]
    fa4c:	cmp	x9, x8
    fa50:	b.ne	fa5c <mpfr_greaterequal_p@@Base+0x30>  // b.any
    fa54:	mov	w0, wzr
    fa58:	b	fa6c <mpfr_greaterequal_p@@Base+0x40>
    fa5c:	mov	w2, #0x1                   	// #1
    fa60:	bl	c9f0 <mpfr_cmp3@plt>
    fa64:	mvn	w8, w0
    fa68:	lsr	w0, w8, #31
    fa6c:	ldp	x29, x30, [sp], #16
    fa70:	ret

000000000000fa74 <mpfr_less_p@@Base>:
    fa74:	stp	x29, x30, [sp, #-16]!
    fa78:	ldr	x9, [x0, #16]
    fa7c:	mov	x8, #0x2                   	// #2
    fa80:	movk	x8, #0x8000, lsl #48
    fa84:	mov	x29, sp
    fa88:	cmp	x9, x8
    fa8c:	b.eq	fa9c <mpfr_less_p@@Base+0x28>  // b.none
    fa90:	ldr	x9, [x1, #16]
    fa94:	cmp	x9, x8
    fa98:	b.ne	faa4 <mpfr_less_p@@Base+0x30>  // b.any
    fa9c:	mov	w0, wzr
    faa0:	b	fab0 <mpfr_less_p@@Base+0x3c>
    faa4:	mov	w2, #0x1                   	// #1
    faa8:	bl	c9f0 <mpfr_cmp3@plt>
    faac:	lsr	w0, w0, #31
    fab0:	ldp	x29, x30, [sp], #16
    fab4:	ret

000000000000fab8 <mpfr_lessequal_p@@Base>:
    fab8:	stp	x29, x30, [sp, #-16]!
    fabc:	ldr	x9, [x0, #16]
    fac0:	mov	x8, #0x2                   	// #2
    fac4:	movk	x8, #0x8000, lsl #48
    fac8:	mov	x29, sp
    facc:	cmp	x9, x8
    fad0:	b.eq	fae0 <mpfr_lessequal_p@@Base+0x28>  // b.none
    fad4:	ldr	x9, [x1, #16]
    fad8:	cmp	x9, x8
    fadc:	b.ne	fae8 <mpfr_lessequal_p@@Base+0x30>  // b.any
    fae0:	mov	w0, wzr
    fae4:	b	faf8 <mpfr_lessequal_p@@Base+0x40>
    fae8:	mov	w2, #0x1                   	// #1
    faec:	bl	c9f0 <mpfr_cmp3@plt>
    faf0:	cmp	w0, #0x1
    faf4:	cset	w0, lt  // lt = tstop
    faf8:	ldp	x29, x30, [sp], #16
    fafc:	ret

000000000000fb00 <mpfr_lessgreater_p@@Base>:
    fb00:	stp	x29, x30, [sp, #-16]!
    fb04:	ldr	x9, [x0, #16]
    fb08:	mov	x8, #0x2                   	// #2
    fb0c:	movk	x8, #0x8000, lsl #48
    fb10:	mov	x29, sp
    fb14:	cmp	x9, x8
    fb18:	b.eq	fb28 <mpfr_lessgreater_p@@Base+0x28>  // b.none
    fb1c:	ldr	x9, [x1, #16]
    fb20:	cmp	x9, x8
    fb24:	b.ne	fb30 <mpfr_lessgreater_p@@Base+0x30>  // b.any
    fb28:	mov	w0, wzr
    fb2c:	b	fb40 <mpfr_lessgreater_p@@Base+0x40>
    fb30:	mov	w2, #0x1                   	// #1
    fb34:	bl	c9f0 <mpfr_cmp3@plt>
    fb38:	cmp	w0, #0x0
    fb3c:	cset	w0, ne  // ne = any
    fb40:	ldp	x29, x30, [sp], #16
    fb44:	ret

000000000000fb48 <mpfr_equal_p@@Base>:
    fb48:	stp	x29, x30, [sp, #-16]!
    fb4c:	ldr	x9, [x0, #16]
    fb50:	mov	x8, #0x2                   	// #2
    fb54:	movk	x8, #0x8000, lsl #48
    fb58:	mov	x29, sp
    fb5c:	cmp	x9, x8
    fb60:	b.eq	fb70 <mpfr_equal_p@@Base+0x28>  // b.none
    fb64:	ldr	x9, [x1, #16]
    fb68:	cmp	x9, x8
    fb6c:	b.ne	fb78 <mpfr_equal_p@@Base+0x30>  // b.any
    fb70:	mov	w0, wzr
    fb74:	b	fb88 <mpfr_equal_p@@Base+0x40>
    fb78:	mov	w2, #0x1                   	// #1
    fb7c:	bl	c9f0 <mpfr_cmp3@plt>
    fb80:	cmp	w0, #0x0
    fb84:	cset	w0, eq  // eq = none
    fb88:	ldp	x29, x30, [sp], #16
    fb8c:	ret

000000000000fb90 <mpfr_unordered_p@@Base>:
    fb90:	ldr	x9, [x0, #16]
    fb94:	mov	x8, #0x2                   	// #2
    fb98:	movk	x8, #0x8000, lsl #48
    fb9c:	cmp	x9, x8
    fba0:	b.ne	fbac <mpfr_unordered_p@@Base+0x1c>  // b.any
    fba4:	mov	w0, #0x1                   	// #1
    fba8:	ret
    fbac:	ldr	x9, [x1, #16]
    fbb0:	cmp	x9, x8
    fbb4:	cset	w0, eq  // eq = none
    fbb8:	ret

000000000000fbbc <mpfr_div_2exp@@Base>:
    fbbc:	b	c950 <mpfr_div_2ui@plt>

000000000000fbc0 <mpfr_div_2si@@Base>:
    fbc0:	stp	x29, x30, [sp, #-80]!
    fbc4:	stp	x24, x23, [sp, #32]
    fbc8:	stp	x22, x21, [sp, #48]
    fbcc:	stp	x20, x19, [sp, #64]
    fbd0:	ldr	x24, [x1, #16]
    fbd4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
    fbd8:	mov	w20, w3
    fbdc:	mov	x8, x1
    fbe0:	cmp	x24, x9
    fbe4:	mov	x19, x0
    fbe8:	str	x25, [sp, #16]
    fbec:	mov	x29, sp
    fbf0:	b.le	ff10 <mpfr_div_2si@@Base+0x350>
    fbf4:	mov	x21, x2
    fbf8:	cmp	x19, x8
    fbfc:	b.eq	fc4c <mpfr_div_2si@@Base+0x8c>  // b.none
    fc00:	ldr	w9, [x8, #8]
    fc04:	ldr	x13, [x19]
    fc08:	ldr	x22, [x19, #24]
    fc0c:	str	w9, [x19, #8]
    fc10:	ldr	x9, [x8]
    fc14:	cmp	x13, x9
    fc18:	b.ne	fc54 <mpfr_div_2si@@Base+0x94>  // b.any
    fc1c:	ldr	x1, [x8, #24]
    fc20:	cmp	x22, x1
    fc24:	b.eq	fc4c <mpfr_div_2si@@Base+0x8c>  // b.none
    fc28:	sub	x8, x13, #0x1
    fc2c:	add	x9, x13, #0x3e
    fc30:	cmp	x8, #0x0
    fc34:	csel	x8, x9, x8, lt  // lt = tstop
    fc38:	asr	x8, x8, #6
    fc3c:	lsl	x8, x8, #3
    fc40:	add	x2, x8, #0x8
    fc44:	mov	x0, x22
    fc48:	bl	bad0 <memcpy@plt>
    fc4c:	mov	w23, wzr
    fc50:	b	fdec <mpfr_div_2si@@Base+0x22c>
    fc54:	sub	x10, x9, #0x1
    fc58:	add	x11, x9, #0x3e
    fc5c:	sub	x12, x13, #0x1
    fc60:	cmp	x10, #0x0
    fc64:	add	x15, x13, #0x3e
    fc68:	csel	x10, x11, x10, lt  // lt = tstop
    fc6c:	cmp	x12, #0x0
    fc70:	asr	x14, x10, #6
    fc74:	csel	x10, x15, x12, lt  // lt = tstop
    fc78:	asr	x10, x10, #6
    fc7c:	add	x18, x14, #0x1
    fc80:	cmp	x13, x9
    fc84:	add	x12, x10, #0x1
    fc88:	b.ge	ff5c <mpfr_div_2si@@Base+0x39c>  // b.tcont
    fc8c:	ldr	x15, [x8, #24]
    fc90:	neg	w9, w13
    fc94:	ands	x16, x9, #0x3f
    fc98:	mvn	x11, x10
    fc9c:	add	x9, x15, x18, lsl #3
    fca0:	add	x1, x9, x11, lsl #3
    fca4:	b.eq	ff8c <mpfr_div_2si@@Base+0x3cc>  // b.none
    fca8:	ldr	x17, [x1]
    fcac:	sub	x16, x16, #0x1
    fcb0:	mov	w0, #0x1                   	// #1
    fcb4:	lsl	x0, x0, x16
    fcb8:	sub	x2, x0, #0x1
    fcbc:	and	x16, x17, x0
    fcc0:	and	x17, x17, x2
    fcc4:	cbz	w20, fccc <mpfr_div_2si@@Base+0x10c>
    fcc8:	cbnz	x16, fcf4 <mpfr_div_2si@@Base+0x134>
    fccc:	cbnz	x17, fcf4 <mpfr_div_2si@@Base+0x134>
    fcd0:	sub	x18, x18, x12
    fcd4:	cbz	x18, fcf4 <mpfr_div_2si@@Base+0x134>
    fcd8:	mvn	x17, x10
    fcdc:	add	x18, x17, x14
    fce0:	ldr	x17, [x15, x18, lsl #3]
    fce4:	subs	x18, x18, #0x1
    fce8:	cset	w2, cs  // cs = hs, nlast
    fcec:	cbnz	x17, fcf4 <mpfr_div_2si@@Base+0x134>
    fcf0:	tbnz	w2, #0, fce0 <mpfr_div_2si@@Base+0x120>
    fcf4:	lsl	x25, x0, #1
    fcf8:	cmp	w20, #0x5
    fcfc:	b.eq	fdc4 <mpfr_div_2si@@Base+0x204>  // b.none
    fd00:	cmp	w20, #0x1
    fd04:	b.eq	fd34 <mpfr_div_2si@@Base+0x174>  // b.none
    fd08:	cbnz	w20, fd24 <mpfr_div_2si@@Base+0x164>
    fd0c:	cbz	x16, fd34 <mpfr_div_2si@@Base+0x174>
    fd10:	cbnz	x17, fd50 <mpfr_div_2si@@Base+0x190>
    fd14:	ldr	x16, [x1]
    fd18:	tst	x16, x25
    fd1c:	b.ne	fd50 <mpfr_div_2si@@Base+0x190>  // b.any
    fd20:	b	fd3c <mpfr_div_2si@@Base+0x17c>
    fd24:	ldr	w18, [x8, #8]
    fd28:	add	w18, w20, w18, lsr #31
    fd2c:	cmp	w18, #0x3
    fd30:	b.ne	fd48 <mpfr_div_2si@@Base+0x188>  // b.any
    fd34:	orr	x9, x17, x16
    fd38:	cbz	x9, fdc4 <mpfr_div_2si@@Base+0x204>
    fd3c:	ldr	w8, [x8, #8]
    fd40:	neg	w23, w8
    fd44:	b	fdc8 <mpfr_div_2si@@Base+0x208>
    fd48:	orr	x16, x17, x16
    fd4c:	cbz	x16, fdc4 <mpfr_div_2si@@Base+0x204>
    fd50:	ldr	x12, [x1]
    fd54:	ldr	w23, [x8, #8]
    fd58:	adds	x8, x12, x25
    fd5c:	str	x8, [x22]
    fd60:	b.cc	fed4 <mpfr_div_2si@@Base+0x314>  // b.lo, b.ul, b.last
    fd64:	sub	x13, x14, x10
    fd68:	add	x13, x15, x13, lsl #3
    fd6c:	mov	x12, xzr
    fd70:	add	x8, x22, #0x8
    fd74:	add	x13, x13, #0x8
    fd78:	add	x14, x12, #0x1
    fd7c:	cmp	x14, x10
    fd80:	b.gt	ff00 <mpfr_div_2si@@Base+0x340>
    fd84:	ldr	x15, [x13, x12, lsl #3]
    fd88:	mov	x12, x14
    fd8c:	adds	x15, x15, #0x1
    fd90:	str	x15, [x8], #8
    fd94:	b.cs	fd78 <mpfr_div_2si@@Base+0x1b8>  // b.hs, b.nlast
    fd98:	cmp	x1, x22
    fd9c:	b.eq	fddc <mpfr_div_2si@@Base+0x21c>  // b.none
    fda0:	cmp	x14, x10
    fda4:	b.ge	fddc <mpfr_div_2si@@Base+0x21c>  // b.tcont
    fda8:	add	x10, x11, x14
    fdac:	add	x10, x10, #0x1
    fdb0:	ldr	x11, [x9, x10, lsl #3]
    fdb4:	adds	x10, x10, #0x1
    fdb8:	str	x11, [x8], #8
    fdbc:	b.cc	fdb0 <mpfr_div_2si@@Base+0x1f0>  // b.lo, b.ul, b.last
    fdc0:	b	fddc <mpfr_div_2si@@Base+0x21c>
    fdc4:	mov	w23, wzr
    fdc8:	cmp	x22, x1
    fdcc:	b.eq	fddc <mpfr_div_2si@@Base+0x21c>  // b.none
    fdd0:	lsl	x2, x12, #3
    fdd4:	mov	x0, x22
    fdd8:	bl	bad0 <memcpy@plt>
    fddc:	ldr	x8, [x22]
    fde0:	neg	x9, x25
    fde4:	and	x8, x8, x9
    fde8:	str	x8, [x22]
    fdec:	cmp	x21, #0x1
    fdf0:	b.lt	fe58 <mpfr_div_2si@@Base+0x298>  // b.tstop
    fdf4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    fdf8:	ldr	x1, [x0, #2592]
    fdfc:	add	x0, x0, #0xa20
    fe00:	blr	x1
    fe04:	mrs	x8, tpidr_el0
    fe08:	ldr	x8, [x8, x0]
    fe0c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    fe10:	sub	x9, x9, x21
    fe14:	cmp	x8, x9
    fe18:	add	x9, x8, x21
    fe1c:	b.gt	fe28 <mpfr_div_2si@@Base+0x268>
    fe20:	cmp	x24, x9
    fe24:	b.ge	fe8c <mpfr_div_2si@@Base+0x2cc>  // b.tcont
    fe28:	cbnz	w20, fffc <mpfr_div_2si@@Base+0x43c>
    fe2c:	mov	x10, #0x4000000000000000    	// #4611686018427387904
    fe30:	sub	x10, x10, x21
    fe34:	cmp	x8, x10
    fe38:	b.gt	fff0 <mpfr_div_2si@@Base+0x430>
    fe3c:	sub	x8, x9, #0x1
    fe40:	cmp	x24, x8
    fe44:	b.lt	fff0 <mpfr_div_2si@@Base+0x430>  // b.tstop
    fe48:	ldr	w8, [x19, #8]
    fe4c:	tbnz	w8, #31, ffdc <mpfr_div_2si@@Base+0x41c>
    fe50:	tbz	w23, #31, ffe4 <mpfr_div_2si@@Base+0x424>
    fe54:	b	fff8 <mpfr_div_2si@@Base+0x438>
    fe58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    fe5c:	ldr	x1, [x0, #2624]
    fe60:	add	x0, x0, #0xa40
    fe64:	blr	x1
    fe68:	mrs	x8, tpidr_el0
    fe6c:	ldr	x8, [x8, x0]
    fe70:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
    fe74:	sub	x9, x9, x21
    fe78:	cmp	x8, x9
    fe7c:	b.lt	ff38 <mpfr_div_2si@@Base+0x378>  // b.tstop
    fe80:	add	x8, x8, x21
    fe84:	cmp	x24, x8
    fe88:	b.gt	ff38 <mpfr_div_2si@@Base+0x378>
    fe8c:	sub	x8, x24, x21
    fe90:	str	x8, [x19, #16]
    fe94:	cbz	w23, feb8 <mpfr_div_2si@@Base+0x2f8>
    fe98:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
    fe9c:	ldr	x1, [x0, #2656]
    fea0:	add	x0, x0, #0xa60
    fea4:	blr	x1
    fea8:	mrs	x8, tpidr_el0
    feac:	ldr	w9, [x8, x0]
    feb0:	orr	w9, w9, #0x8
    feb4:	str	w9, [x8, x0]
    feb8:	mov	w0, w23
    febc:	ldp	x20, x19, [sp, #64]
    fec0:	ldp	x22, x21, [sp, #48]
    fec4:	ldp	x24, x23, [sp, #32]
    fec8:	ldr	x25, [sp, #16]
    fecc:	ldp	x29, x30, [sp], #80
    fed0:	ret
    fed4:	cmp	x13, #0x41
    fed8:	b.lt	fddc <mpfr_div_2si@@Base+0x21c>  // b.tstop
    fedc:	cmp	x1, x22
    fee0:	b.eq	fddc <mpfr_div_2si@@Base+0x21c>  // b.none
    fee4:	add	x8, x11, #0x1
    fee8:	add	x10, x22, #0x8
    feec:	ldr	x11, [x9, x8, lsl #3]
    fef0:	adds	x8, x8, #0x1
    fef4:	str	x11, [x10], #8
    fef8:	b.cc	feec <mpfr_div_2si@@Base+0x32c>  // b.lo, b.ul, b.last
    fefc:	b	fddc <mpfr_div_2si@@Base+0x21c>
    ff00:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    ff04:	add	x24, x24, #0x1
    ff08:	str	x8, [x22, x10, lsl #3]
    ff0c:	b	fddc <mpfr_div_2si@@Base+0x21c>
    ff10:	ldr	w3, [x8, #8]
    ff14:	mov	x0, x19
    ff18:	mov	w2, w20
    ff1c:	ldp	x20, x19, [sp, #64]
    ff20:	ldp	x22, x21, [sp, #48]
    ff24:	ldp	x24, x23, [sp, #32]
    ff28:	ldr	x25, [sp, #16]
    ff2c:	mov	x1, x8
    ff30:	ldp	x29, x30, [sp], #80
    ff34:	b	c6f0 <mpfr_set4@plt>
    ff38:	ldr	w2, [x19, #8]
    ff3c:	mov	x0, x19
    ff40:	mov	w1, w20
    ff44:	ldp	x20, x19, [sp, #64]
    ff48:	ldp	x22, x21, [sp, #48]
    ff4c:	ldp	x24, x23, [sp, #32]
    ff50:	ldr	x25, [sp, #16]
    ff54:	ldp	x29, x30, [sp], #80
    ff58:	b	bff0 <mpfr_overflow@plt>
    ff5c:	ldr	x1, [x8, #24]
    ff60:	sub	x23, x12, x18
    ff64:	add	x0, x22, x23, lsl #3
    ff68:	cmp	x0, x1
    ff6c:	b.eq	ff78 <mpfr_div_2si@@Base+0x3b8>  // b.none
    ff70:	lsl	x2, x18, #3
    ff74:	bl	bad0 <memcpy@plt>
    ff78:	lsl	x2, x23, #3
    ff7c:	mov	x0, x22
    ff80:	mov	w1, wzr
    ff84:	bl	c1b0 <memset@plt>
    ff88:	b	fc4c <mpfr_div_2si@@Base+0x8c>
    ff8c:	ldur	x17, [x1, #-8]
    ff90:	and	x16, x17, #0x8000000000000000
    ff94:	and	x17, x17, #0x7fffffffffffffff
    ff98:	cbz	w20, ffa8 <mpfr_div_2si@@Base+0x3e8>
    ff9c:	cbz	x16, ffa8 <mpfr_div_2si@@Base+0x3e8>
    ffa0:	mov	w25, #0x1                   	// #1
    ffa4:	b	fcf8 <mpfr_div_2si@@Base+0x138>
    ffa8:	mov	w25, #0x1                   	// #1
    ffac:	cbnz	x17, fcf8 <mpfr_div_2si@@Base+0x138>
    ffb0:	sub	x18, x14, x12
    ffb4:	cbz	x18, fcf8 <mpfr_div_2si@@Base+0x138>
    ffb8:	sub	x17, x14, x10
    ffbc:	sub	x18, x17, #0x2
    ffc0:	mov	w25, #0x1                   	// #1
    ffc4:	ldr	x17, [x15, x18, lsl #3]
    ffc8:	subs	x18, x18, #0x1
    ffcc:	cset	w0, cs  // cs = hs, nlast
    ffd0:	cbnz	x17, fcf8 <mpfr_div_2si@@Base+0x138>
    ffd4:	tbnz	w0, #0, ffc4 <mpfr_div_2si@@Base+0x404>
    ffd8:	b	fcf8 <mpfr_div_2si@@Base+0x138>
    ffdc:	cmp	w23, #0x1
    ffe0:	b.ge	fff8 <mpfr_div_2si@@Base+0x438>  // b.tcont
    ffe4:	mov	x0, x19
    ffe8:	bl	bfb0 <mpfr_powerof2_raw@plt>
    ffec:	cbz	w0, fff8 <mpfr_div_2si@@Base+0x438>
    fff0:	mov	w20, #0x1                   	// #1
    fff4:	b	fffc <mpfr_div_2si@@Base+0x43c>
    fff8:	mov	w20, wzr
    fffc:	ldr	w2, [x19, #8]
   10000:	mov	x0, x19
   10004:	mov	w1, w20
   10008:	ldp	x20, x19, [sp, #64]
   1000c:	ldp	x22, x21, [sp, #48]
   10010:	ldp	x24, x23, [sp, #32]
   10014:	ldr	x25, [sp, #16]
   10018:	ldp	x29, x30, [sp], #80
   1001c:	b	c420 <mpfr_underflow@plt>

0000000000010020 <mpfr_div_2ui@@Base>:
   10020:	stp	x29, x30, [sp, #-80]!
   10024:	stp	x22, x21, [sp, #48]
   10028:	stp	x20, x19, [sp, #64]
   1002c:	mov	w21, w3
   10030:	mov	x8, x1
   10034:	mov	x19, x0
   10038:	str	x25, [sp, #16]
   1003c:	stp	x24, x23, [sp, #32]
   10040:	mov	x29, sp
   10044:	cbz	x2, 10314 <mpfr_div_2ui@@Base+0x2f4>
   10048:	ldr	x24, [x8, #16]
   1004c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   10050:	cmp	x24, x9
   10054:	b.le	10314 <mpfr_div_2ui@@Base+0x2f4>
   10058:	mov	x20, x2
   1005c:	cmp	x19, x8
   10060:	b.eq	100b0 <mpfr_div_2ui@@Base+0x90>  // b.none
   10064:	ldr	w9, [x8, #8]
   10068:	ldr	x13, [x19]
   1006c:	ldr	x22, [x19, #24]
   10070:	str	w9, [x19, #8]
   10074:	ldr	x9, [x8]
   10078:	cmp	x13, x9
   1007c:	b.ne	100b8 <mpfr_div_2ui@@Base+0x98>  // b.any
   10080:	ldr	x1, [x8, #24]
   10084:	cmp	x22, x1
   10088:	b.eq	100b0 <mpfr_div_2ui@@Base+0x90>  // b.none
   1008c:	sub	x8, x13, #0x1
   10090:	add	x9, x13, #0x3e
   10094:	cmp	x8, #0x0
   10098:	csel	x8, x9, x8, lt  // lt = tstop
   1009c:	asr	x8, x8, #6
   100a0:	lsl	x8, x8, #3
   100a4:	add	x2, x8, #0x8
   100a8:	mov	x0, x22
   100ac:	bl	bad0 <memcpy@plt>
   100b0:	mov	w23, wzr
   100b4:	b	10250 <mpfr_div_2ui@@Base+0x230>
   100b8:	sub	x10, x9, #0x1
   100bc:	add	x11, x9, #0x3e
   100c0:	sub	x12, x13, #0x1
   100c4:	cmp	x10, #0x0
   100c8:	add	x15, x13, #0x3e
   100cc:	csel	x10, x11, x10, lt  // lt = tstop
   100d0:	cmp	x12, #0x0
   100d4:	asr	x14, x10, #6
   100d8:	csel	x10, x15, x12, lt  // lt = tstop
   100dc:	asr	x10, x10, #6
   100e0:	add	x18, x14, #0x1
   100e4:	cmp	x13, x9
   100e8:	add	x12, x10, #0x1
   100ec:	b.ge	10358 <mpfr_div_2ui@@Base+0x338>  // b.tcont
   100f0:	ldr	x15, [x8, #24]
   100f4:	neg	w9, w13
   100f8:	ands	x16, x9, #0x3f
   100fc:	mvn	x11, x10
   10100:	add	x9, x15, x18, lsl #3
   10104:	add	x1, x9, x11, lsl #3
   10108:	b.eq	10388 <mpfr_div_2ui@@Base+0x368>  // b.none
   1010c:	ldr	x17, [x1]
   10110:	sub	x16, x16, #0x1
   10114:	mov	w0, #0x1                   	// #1
   10118:	lsl	x0, x0, x16
   1011c:	sub	x2, x0, #0x1
   10120:	and	x16, x17, x0
   10124:	and	x17, x17, x2
   10128:	cbz	w21, 10130 <mpfr_div_2ui@@Base+0x110>
   1012c:	cbnz	x16, 10158 <mpfr_div_2ui@@Base+0x138>
   10130:	cbnz	x17, 10158 <mpfr_div_2ui@@Base+0x138>
   10134:	sub	x18, x18, x12
   10138:	cbz	x18, 10158 <mpfr_div_2ui@@Base+0x138>
   1013c:	mvn	x17, x10
   10140:	add	x18, x17, x14
   10144:	ldr	x17, [x15, x18, lsl #3]
   10148:	subs	x18, x18, #0x1
   1014c:	cset	w2, cs  // cs = hs, nlast
   10150:	cbnz	x17, 10158 <mpfr_div_2ui@@Base+0x138>
   10154:	tbnz	w2, #0, 10144 <mpfr_div_2ui@@Base+0x124>
   10158:	lsl	x25, x0, #1
   1015c:	cmp	w21, #0x5
   10160:	b.eq	10228 <mpfr_div_2ui@@Base+0x208>  // b.none
   10164:	cmp	w21, #0x1
   10168:	b.eq	10198 <mpfr_div_2ui@@Base+0x178>  // b.none
   1016c:	cbnz	w21, 10188 <mpfr_div_2ui@@Base+0x168>
   10170:	cbz	x16, 10198 <mpfr_div_2ui@@Base+0x178>
   10174:	cbnz	x17, 101b4 <mpfr_div_2ui@@Base+0x194>
   10178:	ldr	x16, [x1]
   1017c:	tst	x16, x25
   10180:	b.ne	101b4 <mpfr_div_2ui@@Base+0x194>  // b.any
   10184:	b	101a0 <mpfr_div_2ui@@Base+0x180>
   10188:	ldr	w18, [x8, #8]
   1018c:	add	w18, w21, w18, lsr #31
   10190:	cmp	w18, #0x3
   10194:	b.ne	101ac <mpfr_div_2ui@@Base+0x18c>  // b.any
   10198:	orr	x9, x17, x16
   1019c:	cbz	x9, 10228 <mpfr_div_2ui@@Base+0x208>
   101a0:	ldr	w8, [x8, #8]
   101a4:	neg	w23, w8
   101a8:	b	1022c <mpfr_div_2ui@@Base+0x20c>
   101ac:	orr	x16, x17, x16
   101b0:	cbz	x16, 10228 <mpfr_div_2ui@@Base+0x208>
   101b4:	ldr	x12, [x1]
   101b8:	ldr	w23, [x8, #8]
   101bc:	adds	x8, x12, x25
   101c0:	str	x8, [x22]
   101c4:	b.cc	102d8 <mpfr_div_2ui@@Base+0x2b8>  // b.lo, b.ul, b.last
   101c8:	sub	x13, x14, x10
   101cc:	add	x13, x15, x13, lsl #3
   101d0:	mov	x12, xzr
   101d4:	add	x8, x22, #0x8
   101d8:	add	x13, x13, #0x8
   101dc:	add	x14, x12, #0x1
   101e0:	cmp	x14, x10
   101e4:	b.gt	10304 <mpfr_div_2ui@@Base+0x2e4>
   101e8:	ldr	x15, [x13, x12, lsl #3]
   101ec:	mov	x12, x14
   101f0:	adds	x15, x15, #0x1
   101f4:	str	x15, [x8], #8
   101f8:	b.cs	101dc <mpfr_div_2ui@@Base+0x1bc>  // b.hs, b.nlast
   101fc:	cmp	x1, x22
   10200:	b.eq	10240 <mpfr_div_2ui@@Base+0x220>  // b.none
   10204:	cmp	x14, x10
   10208:	b.ge	10240 <mpfr_div_2ui@@Base+0x220>  // b.tcont
   1020c:	add	x10, x11, x14
   10210:	add	x10, x10, #0x1
   10214:	ldr	x11, [x9, x10, lsl #3]
   10218:	adds	x10, x10, #0x1
   1021c:	str	x11, [x8], #8
   10220:	b.cc	10214 <mpfr_div_2ui@@Base+0x1f4>  // b.lo, b.ul, b.last
   10224:	b	10240 <mpfr_div_2ui@@Base+0x220>
   10228:	mov	w23, wzr
   1022c:	cmp	x22, x1
   10230:	b.eq	10240 <mpfr_div_2ui@@Base+0x220>  // b.none
   10234:	lsl	x2, x12, #3
   10238:	mov	x0, x22
   1023c:	bl	bad0 <memcpy@plt>
   10240:	ldr	x8, [x22]
   10244:	neg	x9, x25
   10248:	and	x8, x8, x9
   1024c:	str	x8, [x22]
   10250:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10254:	ldr	x1, [x0, #2592]
   10258:	add	x0, x0, #0xa20
   1025c:	blr	x1
   10260:	mrs	x8, tpidr_el0
   10264:	ldr	x9, [x8, x0]
   10268:	sub	x9, x24, x9
   1026c:	add	x9, x9, #0x1
   10270:	cmp	x9, x20
   10274:	b.ls	1033c <mpfr_div_2ui@@Base+0x31c>  // b.plast
   10278:	tbz	x20, #63, 10294 <mpfr_div_2ui@@Base+0x274>
   1027c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   10280:	add	x10, x20, x9
   10284:	mov	x20, x10
   10288:	add	x24, x24, x9
   1028c:	mov	w10, #0x1                   	// #1
   10290:	tbnz	x20, #63, 10284 <mpfr_div_2ui@@Base+0x264>
   10294:	sub	x9, x24, x20
   10298:	str	x9, [x19, #16]
   1029c:	cbz	w23, 102bc <mpfr_div_2ui@@Base+0x29c>
   102a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   102a4:	ldr	x1, [x0, #2656]
   102a8:	add	x0, x0, #0xa60
   102ac:	blr	x1
   102b0:	ldr	w9, [x8, x0]
   102b4:	orr	w9, w9, #0x8
   102b8:	str	w9, [x8, x0]
   102bc:	mov	w0, w23
   102c0:	ldp	x20, x19, [sp, #64]
   102c4:	ldp	x22, x21, [sp, #48]
   102c8:	ldp	x24, x23, [sp, #32]
   102cc:	ldr	x25, [sp, #16]
   102d0:	ldp	x29, x30, [sp], #80
   102d4:	ret
   102d8:	cmp	x13, #0x41
   102dc:	b.lt	10240 <mpfr_div_2ui@@Base+0x220>  // b.tstop
   102e0:	cmp	x1, x22
   102e4:	b.eq	10240 <mpfr_div_2ui@@Base+0x220>  // b.none
   102e8:	add	x8, x11, #0x1
   102ec:	add	x10, x22, #0x8
   102f0:	ldr	x11, [x9, x8, lsl #3]
   102f4:	adds	x8, x8, #0x1
   102f8:	str	x11, [x10], #8
   102fc:	b.cc	102f0 <mpfr_div_2ui@@Base+0x2d0>  // b.lo, b.ul, b.last
   10300:	b	10240 <mpfr_div_2ui@@Base+0x220>
   10304:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   10308:	add	x24, x24, #0x1
   1030c:	str	x8, [x22, x10, lsl #3]
   10310:	b	10240 <mpfr_div_2ui@@Base+0x220>
   10314:	ldr	w3, [x8, #8]
   10318:	mov	x0, x19
   1031c:	mov	w2, w21
   10320:	ldp	x20, x19, [sp, #64]
   10324:	ldp	x22, x21, [sp, #48]
   10328:	ldp	x24, x23, [sp, #32]
   1032c:	ldr	x25, [sp, #16]
   10330:	mov	x1, x8
   10334:	ldp	x29, x30, [sp], #80
   10338:	b	c6f0 <mpfr_set4@plt>
   1033c:	cbnz	w21, 103f8 <mpfr_div_2ui@@Base+0x3d8>
   10340:	cmp	x9, x20
   10344:	b.cc	103ec <mpfr_div_2ui@@Base+0x3cc>  // b.lo, b.ul, b.last
   10348:	ldr	w8, [x19, #8]
   1034c:	tbnz	w8, #31, 103d8 <mpfr_div_2ui@@Base+0x3b8>
   10350:	tbz	w23, #31, 103e0 <mpfr_div_2ui@@Base+0x3c0>
   10354:	b	103f4 <mpfr_div_2ui@@Base+0x3d4>
   10358:	ldr	x1, [x8, #24]
   1035c:	sub	x23, x12, x18
   10360:	add	x0, x22, x23, lsl #3
   10364:	cmp	x0, x1
   10368:	b.eq	10374 <mpfr_div_2ui@@Base+0x354>  // b.none
   1036c:	lsl	x2, x18, #3
   10370:	bl	bad0 <memcpy@plt>
   10374:	lsl	x2, x23, #3
   10378:	mov	x0, x22
   1037c:	mov	w1, wzr
   10380:	bl	c1b0 <memset@plt>
   10384:	b	100b0 <mpfr_div_2ui@@Base+0x90>
   10388:	ldur	x17, [x1, #-8]
   1038c:	and	x16, x17, #0x8000000000000000
   10390:	and	x17, x17, #0x7fffffffffffffff
   10394:	cbz	w21, 103a4 <mpfr_div_2ui@@Base+0x384>
   10398:	cbz	x16, 103a4 <mpfr_div_2ui@@Base+0x384>
   1039c:	mov	w25, #0x1                   	// #1
   103a0:	b	1015c <mpfr_div_2ui@@Base+0x13c>
   103a4:	mov	w25, #0x1                   	// #1
   103a8:	cbnz	x17, 1015c <mpfr_div_2ui@@Base+0x13c>
   103ac:	sub	x18, x14, x12
   103b0:	cbz	x18, 1015c <mpfr_div_2ui@@Base+0x13c>
   103b4:	sub	x17, x14, x10
   103b8:	sub	x18, x17, #0x2
   103bc:	mov	w25, #0x1                   	// #1
   103c0:	ldr	x17, [x15, x18, lsl #3]
   103c4:	subs	x18, x18, #0x1
   103c8:	cset	w0, cs  // cs = hs, nlast
   103cc:	cbnz	x17, 1015c <mpfr_div_2ui@@Base+0x13c>
   103d0:	tbnz	w0, #0, 103c0 <mpfr_div_2ui@@Base+0x3a0>
   103d4:	b	1015c <mpfr_div_2ui@@Base+0x13c>
   103d8:	cmp	w23, #0x1
   103dc:	b.ge	103f4 <mpfr_div_2ui@@Base+0x3d4>  // b.tcont
   103e0:	mov	x0, x19
   103e4:	bl	bfb0 <mpfr_powerof2_raw@plt>
   103e8:	cbz	w0, 103f4 <mpfr_div_2ui@@Base+0x3d4>
   103ec:	mov	w21, #0x1                   	// #1
   103f0:	b	103f8 <mpfr_div_2ui@@Base+0x3d8>
   103f4:	mov	w21, wzr
   103f8:	ldr	w2, [x19, #8]
   103fc:	mov	x0, x19
   10400:	mov	w1, w21
   10404:	ldp	x20, x19, [sp, #64]
   10408:	ldp	x22, x21, [sp, #48]
   1040c:	ldp	x24, x23, [sp, #32]
   10410:	ldr	x25, [sp, #16]
   10414:	ldp	x29, x30, [sp], #80
   10418:	b	c420 <mpfr_underflow@plt>

000000000001041c <mpfr_div@@Base>:
   1041c:	stp	x29, x30, [sp, #-96]!
   10420:	stp	x28, x27, [sp, #16]
   10424:	stp	x26, x25, [sp, #32]
   10428:	stp	x24, x23, [sp, #48]
   1042c:	stp	x22, x21, [sp, #64]
   10430:	stp	x20, x19, [sp, #80]
   10434:	mov	x29, sp
   10438:	sub	sp, sp, #0xe0
   1043c:	ldr	x8, [x1, #16]
   10440:	mov	x12, #0x2                   	// #2
   10444:	movk	x12, #0x8000, lsl #48
   10448:	add	x9, x12, #0x2
   1044c:	mov	x27, x2
   10450:	mov	x25, x1
   10454:	cmp	x8, x9
   10458:	mov	x22, x0
   1045c:	b.lt	113d4 <mpfr_div@@Base+0xfb8>  // b.tstop
   10460:	ldr	x20, [x27, #16]
   10464:	cmp	x20, x9
   10468:	b.lt	113e0 <mpfr_div@@Base+0xfc4>  // b.tstop
   1046c:	ldr	x28, [x25]
   10470:	ldr	x19, [x22]
   10474:	ldr	x23, [x27]
   10478:	cmp	x28, x19
   1047c:	b.ne	10968 <mpfr_div@@Base+0x54c>  // b.any
   10480:	cmp	x23, x28
   10484:	b.ne	10968 <mpfr_div@@Base+0x54c>  // b.any
   10488:	cmp	x28, #0x3f
   1048c:	b.gt	10654 <mpfr_div@@Base+0x238>
   10490:	ldr	x10, [x25, #24]
   10494:	ldr	x11, [x27, #24]
   10498:	neg	x13, x28
   1049c:	mov	w14, #0x1                   	// #1
   104a0:	ldr	x15, [x10]
   104a4:	ldr	x12, [x11]
   104a8:	lsl	x10, x14, x13
   104ac:	adrp	x17, 58000 <mpfr_free_pool@@Base+0x287c>
   104b0:	add	x17, x17, #0x8b8
   104b4:	cmp	x15, x12
   104b8:	csel	x13, x12, xzr, cs  // cs = hs, nlast
   104bc:	sub	x15, x15, x13
   104c0:	lsr	x13, x12, #52
   104c4:	and	x13, x13, #0xff8
   104c8:	sub	x13, x13, #0x800
   104cc:	adrp	x16, 58000 <mpfr_free_pool@@Base+0x287c>
   104d0:	ldr	x14, [x17, x13]
   104d4:	add	x16, x16, #0xb8
   104d8:	ldr	x13, [x16, x13]
   104dc:	lsr	x16, x12, #24
   104e0:	add	x16, x16, #0x1
   104e4:	mov	x11, #0xffffffffffffffff    	// #-1
   104e8:	mul	x14, x14, x16
   104ec:	eor	x11, x11, x14, lsr #40
   104f0:	mov	x0, #0x1000000000000000    	// #1152921504606846976
   104f4:	add	x11, x13, x11
   104f8:	msub	x14, x11, x16, x0
   104fc:	mul	x14, x14, x11
   10500:	and	x13, x12, #0x1
   10504:	lsr	x14, x14, #47
   10508:	sub	x16, x12, #0x1
   1050c:	add	x14, x14, x11, lsl #13
   10510:	neg	x13, x13
   10514:	lsr	x16, x16, #1
   10518:	and	x13, x14, x13
   1051c:	add	x16, x16, #0x1
   10520:	lsr	x13, x13, #1
   10524:	msub	x13, x14, x16, x13
   10528:	umulh	x13, x14, x13
   1052c:	lsl	x14, x14, #31
   10530:	add	x13, x14, x13, lsr #1
   10534:	umulh	x13, x15, x13
   10538:	cset	w11, cs  // cs = hs, nlast
   1053c:	add	x13, x13, x15
   10540:	ldr	x9, [x22, #24]
   10544:	lsr	x14, x13, x11
   10548:	sub	x18, x10, #0x1
   1054c:	add	x16, x14, #0x2
   10550:	and	x16, x16, x18, lsr #1
   10554:	cmp	x16, #0x3
   10558:	sub	x8, x8, x20
   1055c:	b.cc	116b4 <mpfr_div@@Base+0x1298>  // b.lo, b.ul, b.last
   10560:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   10564:	lsr	x12, x12, x28
   10568:	and	x12, x14, x12
   1056c:	mov	w13, #0x1                   	// #1
   10570:	orr	x14, x14, #0x8000000000000000
   10574:	neg	x15, x10
   10578:	and	x14, x14, x15
   1057c:	str	x14, [x9]
   10580:	ldr	w15, [x25, #8]
   10584:	ldr	w16, [x27, #8]
   10588:	add	x11, x8, x11
   1058c:	mul	w2, w16, w15
   10590:	str	w2, [x22, #8]
   10594:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10598:	ldr	x1, [x0, #2624]
   1059c:	add	x0, x0, #0xa40
   105a0:	blr	x1
   105a4:	mrs	x8, tpidr_el0
   105a8:	ldr	x15, [x8, x0]
   105ac:	cmp	x11, x15
   105b0:	b.gt	1083c <mpfr_div@@Base+0x420>
   105b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   105b8:	ldr	x1, [x0, #2592]
   105bc:	add	x0, x0, #0xa20
   105c0:	blr	x1
   105c4:	ldr	x15, [x8, x0]
   105c8:	cmp	x11, x15
   105cc:	b.lt	11720 <mpfr_div@@Base+0x1304>  // b.tstop
   105d0:	mov	w21, wzr
   105d4:	cmp	w3, #0x5
   105d8:	str	x11, [x22, #16]
   105dc:	b.eq	113a8 <mpfr_div@@Base+0xf8c>  // b.none
   105e0:	orr	x13, x12, x13
   105e4:	cbz	x13, 113a8 <mpfr_div@@Base+0xf8c>
   105e8:	cmp	w3, #0x1
   105ec:	b.eq	1102c <mpfr_div@@Base+0xc10>  // b.none
   105f0:	cbnz	w3, 11020 <mpfr_div@@Base+0xc04>
   105f4:	cbz	x12, 1102c <mpfr_div@@Base+0xc10>
   105f8:	ldr	x12, [x9]
   105fc:	adds	x10, x12, x10
   10600:	str	x10, [x9]
   10604:	b.ne	10634 <mpfr_div@@Base+0x218>  // b.any
   10608:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   1060c:	str	x10, [x9]
   10610:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10614:	ldr	x1, [x0, #2624]
   10618:	add	x0, x0, #0xa40
   1061c:	blr	x1
   10620:	ldr	x9, [x8, x0]
   10624:	cmp	x11, x9
   10628:	b.ge	1083c <mpfr_div@@Base+0x420>  // b.tcont
   1062c:	add	x9, x11, #0x1
   10630:	str	x9, [x22, #16]
   10634:	cbz	w2, 113a4 <mpfr_div@@Base+0xf88>
   10638:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1063c:	ldr	x1, [x0, #2656]
   10640:	add	x0, x0, #0xa60
   10644:	blr	x1
   10648:	ldr	w9, [x8, x0]
   1064c:	mov	w21, w2
   10650:	b	11048 <mpfr_div@@Base+0xc2c>
   10654:	cmp	x28, #0x40
   10658:	b.eq	1084c <mpfr_div@@Base+0x430>  // b.none
   1065c:	cmp	x28, #0x7f
   10660:	b.gt	1084c <mpfr_div@@Base+0x430>
   10664:	ldr	x10, [x25, #24]
   10668:	ldr	x11, [x27, #24]
   1066c:	ldr	x9, [x22, #24]
   10670:	mov	w14, #0x1                   	// #1
   10674:	ldp	x16, x15, [x10]
   10678:	ldp	x13, x12, [x11]
   1067c:	neg	x10, x28
   10680:	cmp	x15, x12
   10684:	b.hi	10698 <mpfr_div@@Base+0x27c>  // b.pmore
   10688:	mov	w11, wzr
   1068c:	b.ne	106a8 <mpfr_div@@Base+0x28c>  // b.any
   10690:	cmp	x16, x13
   10694:	b.cc	106a8 <mpfr_div@@Base+0x28c>  // b.lo, b.ul, b.last
   10698:	subs	x17, x16, x13
   1069c:	sbc	x15, x15, x12
   106a0:	mov	w11, #0x1                   	// #1
   106a4:	mov	x16, x17
   106a8:	cmn	x12, #0x1
   106ac:	lsl	x10, x14, x10
   106b0:	b.eq	1198c <mpfr_div@@Base+0x1570>  // b.none
   106b4:	add	x14, x12, #0x1
   106b8:	lsr	x1, x14, #52
   106bc:	adrp	x18, 58000 <mpfr_free_pool@@Base+0x287c>
   106c0:	and	x1, x1, #0xff8
   106c4:	add	x18, x18, #0x8b8
   106c8:	sub	x1, x1, #0x800
   106cc:	adrp	x17, 58000 <mpfr_free_pool@@Base+0x287c>
   106d0:	ldr	x18, [x18, x1]
   106d4:	add	x17, x17, #0xb8
   106d8:	ldr	x17, [x17, x1]
   106dc:	lsr	x1, x14, #24
   106e0:	add	x1, x1, #0x1
   106e4:	mov	x0, #0xffffffffffffffff    	// #-1
   106e8:	mul	x18, x18, x1
   106ec:	eor	x18, x0, x18, lsr #40
   106f0:	mov	x0, #0x1000000000000000    	// #1152921504606846976
   106f4:	add	x17, x17, x18
   106f8:	msub	x0, x17, x1, x0
   106fc:	mul	x0, x0, x17
   10700:	and	x14, x14, #0x1
   10704:	lsr	x0, x0, #47
   10708:	neg	x14, x14
   1070c:	add	x17, x0, x17, lsl #13
   10710:	lsr	x18, x12, #1
   10714:	and	x14, x17, x14
   10718:	add	x18, x18, #0x1
   1071c:	lsr	x14, x14, #1
   10720:	msub	x14, x17, x18, x14
   10724:	umulh	x14, x17, x14
   10728:	lsl	x17, x17, #31
   1072c:	add	x18, x17, x14, lsr #1
   10730:	umulh	x17, x15, x18
   10734:	add	x5, x17, x15
   10738:	mul	x0, x5, x12
   1073c:	umulh	x17, x5, x12
   10740:	umulh	x1, x5, x13
   10744:	mul	x2, x5, x13
   10748:	adds	x0, x0, x1
   1074c:	sub	x15, x15, x17
   10750:	cset	w17, cs  // cs = hs, nlast
   10754:	cmp	x2, #0x0
   10758:	cinc	x0, x0, ne  // ne = any
   1075c:	cset	w1, ne  // ne = any
   10760:	cmp	x0, #0x0
   10764:	sub	x15, x15, x17
   10768:	cset	w17, eq  // eq = none
   1076c:	subs	x4, x16, x0
   10770:	and	w1, w1, w17
   10774:	cset	w17, cc  // cc = lo, ul, last
   10778:	umulh	x2, x4, x18
   1077c:	sub	x15, x15, x17
   10780:	adds	x17, x4, x2
   10784:	sub	x1, x15, x1
   10788:	cinc	x15, x5, cs  // cs = hs, nlast
   1078c:	sub	x14, x10, #0x1
   10790:	add	x15, x15, x1
   10794:	cbz	x1, 107c8 <mpfr_div@@Base+0x3ac>
   10798:	add	x17, x2, x16
   1079c:	add	x17, x17, x18
   107a0:	sub	x17, x17, x0
   107a4:	mov	x4, x1
   107a8:	cmp	x17, x18
   107ac:	cinc	x15, x15, cc  // cc = lo, ul, last
   107b0:	subs	x4, x4, #0x1
   107b4:	add	x17, x17, x18
   107b8:	b.ne	107a8 <mpfr_div@@Base+0x38c>  // b.any
   107bc:	add	x17, x2, x16
   107c0:	sub	x17, x17, x0
   107c4:	madd	x17, x1, x18, x17
   107c8:	add	x18, x17, #0x15
   107cc:	and	x18, x18, x14, lsr #1
   107d0:	cmp	x18, #0x15
   107d4:	sub	x8, x8, x20
   107d8:	b.ls	11994 <mpfr_div@@Base+0x1578>  // b.plast
   107dc:	mov	w12, #0x1                   	// #1
   107e0:	cbz	w11, 10800 <mpfr_div@@Base+0x3e4>
   107e4:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   107e8:	and	x11, x17, #0x1
   107ec:	bfxil	x13, x15, #1, #63
   107f0:	add	x8, x8, #0x1
   107f4:	orr	x12, x12, x11
   107f8:	extr	x17, x15, x17, #1
   107fc:	mov	x15, x13
   10800:	neg	x11, x10
   10804:	and	x13, x17, x11
   10808:	stp	x13, x15, [x9]
   1080c:	ldr	w11, [x25, #8]
   10810:	ldr	w16, [x27, #8]
   10814:	mul	w2, w16, w11
   10818:	str	w2, [x22, #8]
   1081c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10820:	ldr	x1, [x0, #2624]
   10824:	add	x0, x0, #0xa40
   10828:	blr	x1
   1082c:	mrs	x11, tpidr_el0
   10830:	ldr	x16, [x11, x0]
   10834:	cmp	x8, x16
   10838:	b.le	10fa4 <mpfr_div@@Base+0xb88>
   1083c:	mov	x0, x22
   10840:	mov	w1, w3
   10844:	bl	bff0 <mpfr_overflow@plt>
   10848:	b	11018 <mpfr_div@@Base+0xbfc>
   1084c:	cmp	x28, #0x40
   10850:	mov	x23, x28
   10854:	b.ne	10968 <mpfr_div@@Base+0x54c>  // b.any
   10858:	ldr	x11, [x27, #24]
   1085c:	ldr	x10, [x25, #24]
   10860:	adrp	x15, 58000 <mpfr_free_pool@@Base+0x287c>
   10864:	add	x15, x15, #0xb8
   10868:	ldr	x12, [x11]
   1086c:	ldr	x13, [x10]
   10870:	adrp	x10, 58000 <mpfr_free_pool@@Base+0x287c>
   10874:	add	x10, x10, #0x8b8
   10878:	lsr	x17, x12, #52
   1087c:	and	x17, x17, #0xff8
   10880:	sub	x17, x17, #0x800
   10884:	ldr	x10, [x10, x17]
   10888:	ldr	x15, [x15, x17]
   1088c:	lsr	x17, x12, #24
   10890:	add	x17, x17, #0x1
   10894:	mov	x11, #0xffffffffffffffff    	// #-1
   10898:	mul	x10, x10, x17
   1089c:	eor	x10, x11, x10, lsr #40
   108a0:	mov	x16, #0x1000000000000000    	// #1152921504606846976
   108a4:	add	x10, x15, x10
   108a8:	msub	x16, x10, x17, x16
   108ac:	mul	x16, x16, x10
   108b0:	mov	x14, xzr
   108b4:	and	x11, x12, #0x1
   108b8:	lsr	x16, x16, #47
   108bc:	sub	x15, x12, #0x1
   108c0:	sub	x11, x14, x11
   108c4:	add	x10, x16, x10, lsl #13
   108c8:	lsr	x15, x15, #1
   108cc:	and	x11, x10, x11
   108d0:	add	x15, x15, #0x1
   108d4:	lsr	x11, x11, #1
   108d8:	ldr	x9, [x22, #24]
   108dc:	cmp	x13, x12
   108e0:	lsl	x16, x10, #31
   108e4:	msub	x11, x10, x15, x11
   108e8:	umulh	x10, x10, x11
   108ec:	csel	x17, x12, x14, cs  // cs = hs, nlast
   108f0:	add	x10, x16, x10, lsr #1
   108f4:	sub	x17, x13, x17
   108f8:	umulh	x10, x17, x10
   108fc:	add	x10, x10, x17
   10900:	umulh	x15, x10, x12
   10904:	mul	x16, x10, x12
   10908:	subs	x11, x14, x16
   1090c:	sbc	x14, x17, x15
   10910:	cbnz	x14, 1091c <mpfr_div@@Base+0x500>
   10914:	cmp	x11, x12
   10918:	b.cc	10940 <mpfr_div@@Base+0x524>  // b.lo, b.ul, b.last
   1091c:	neg	x15, x12
   10920:	add	x16, x15, x11
   10924:	subs	x11, x11, x12
   10928:	cset	w17, cc  // cc = lo, ul, last
   1092c:	add	x10, x10, #0x1
   10930:	cmp	x16, x12
   10934:	sub	x14, x14, x17
   10938:	b.cs	10920 <mpfr_div@@Base+0x504>  // b.hs, b.nlast
   1093c:	cbnz	x14, 10920 <mpfr_div@@Base+0x504>
   10940:	cmp	x13, x12
   10944:	sub	x8, x8, x20
   10948:	b.cc	110e4 <mpfr_div@@Base+0xcc8>  // b.lo, b.ul, b.last
   1094c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   10950:	bfxil	x12, x10, #1, #63
   10954:	and	x13, x10, #0x1
   10958:	add	x8, x8, #0x1
   1095c:	mov	x10, x12
   10960:	str	x12, [x9]
   10964:	b	11108 <mpfr_div@@Base+0xcec>
   10968:	sub	x9, x28, #0x1
   1096c:	add	x10, x28, #0x3e
   10970:	sub	x11, x23, #0x1
   10974:	ldr	x24, [x22, #24]
   10978:	cmp	x9, #0x0
   1097c:	ldr	x16, [x25, #24]
   10980:	ldr	x15, [x27, #24]
   10984:	add	x12, x23, #0x3e
   10988:	sub	x13, x19, #0x1
   1098c:	csel	x17, x10, x9, lt  // lt = tstop
   10990:	cmp	x11, #0x0
   10994:	add	x14, x19, #0x3e
   10998:	csel	x12, x12, x11, lt  // lt = tstop
   1099c:	cmp	x13, #0x0
   109a0:	csel	x11, x14, x13, lt  // lt = tstop
   109a4:	cmp	x23, #0x40
   109a8:	mrs	x26, tpidr_el0
   109ac:	b.gt	109f0 <mpfr_div@@Base+0x5d4>
   109b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   109b4:	ldr	x1, [x0, #2592]
   109b8:	add	x0, x0, #0xa20
   109bc:	blr	x1
   109c0:	ldr	x9, [x26, x0]
   109c4:	sub	x10, x8, #0x40
   109c8:	cmp	x9, x10
   109cc:	b.gt	109f0 <mpfr_div@@Base+0x5d4>
   109d0:	sub	x8, x8, #0x3f
   109d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   109d8:	ldr	x1, [x0, #2624]
   109dc:	add	x0, x0, #0xa40
   109e0:	blr	x1
   109e4:	ldr	x9, [x26, x0]
   109e8:	cmp	x8, x9
   109ec:	b.le	10f74 <mpfr_div@@Base+0xb58>
   109f0:	cmp	x19, #0x7c1
   109f4:	stp	x24, x16, [x29, #-80]
   109f8:	stur	x15, [x29, #-64]
   109fc:	b.lt	10c7c <mpfr_div@@Base+0x860>  // b.tstop
   10a00:	sub	x0, x29, #0x18
   10a04:	stur	x12, [x29, #-128]
   10a08:	stp	x17, x11, [x29, #-112]
   10a0c:	stur	w3, [x29, #-84]
   10a10:	add	x20, x19, #0x40
   10a14:	bl	c040 <mpfr_mpz_init@plt>
   10a18:	sub	x0, x29, #0x28
   10a1c:	bl	c040 <mpfr_mpz_init@plt>
   10a20:	sub	x0, x29, #0x38
   10a24:	bl	c040 <mpfr_mpz_init@plt>
   10a28:	sub	x0, x29, #0x28
   10a2c:	mov	x1, x25
   10a30:	stur	x25, [x29, #-144]
   10a34:	bl	cb10 <mpfr_get_z_2exp@plt>
   10a38:	stur	x0, [x29, #-96]
   10a3c:	sub	x0, x29, #0x38
   10a40:	mov	x1, x27
   10a44:	bl	cb10 <mpfr_get_z_2exp@plt>
   10a48:	mov	x25, x0
   10a4c:	sub	x0, x29, #0x38
   10a50:	mov	w1, #0x2                   	// #2
   10a54:	bl	cbb0 <__gmpz_sizeinbase@plt>
   10a58:	subs	x24, x0, x20
   10a5c:	b.le	10a7c <mpfr_div@@Base+0x660>
   10a60:	sub	x0, x29, #0x38
   10a64:	sub	x1, x29, #0x38
   10a68:	mov	x2, x24
   10a6c:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   10a70:	add	x25, x24, x25
   10a74:	mov	x21, x20
   10a78:	b	10a80 <mpfr_div@@Base+0x664>
   10a7c:	mov	x21, x0
   10a80:	stur	x25, [x29, #-152]
   10a84:	sub	x0, x29, #0x28
   10a88:	mov	w1, #0x2                   	// #2
   10a8c:	bl	cbb0 <__gmpz_sizeinbase@plt>
   10a90:	ldur	x24, [x29, #-80]
   10a94:	add	x8, x21, x20
   10a98:	subs	x21, x0, x8
   10a9c:	b.le	10abc <mpfr_div@@Base+0x6a0>
   10aa0:	sub	x0, x29, #0x28
   10aa4:	sub	x1, x29, #0x28
   10aa8:	mov	x2, x21
   10aac:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   10ab0:	ldur	x8, [x29, #-96]
   10ab4:	add	x8, x21, x8
   10ab8:	b	10adc <mpfr_div@@Base+0x6c0>
   10abc:	b.ge	10ae0 <mpfr_div@@Base+0x6c4>  // b.tcont
   10ac0:	sub	x21, x8, x0
   10ac4:	sub	x0, x29, #0x28
   10ac8:	sub	x1, x29, #0x28
   10acc:	mov	x2, x21
   10ad0:	bl	c290 <__gmpz_mul_2exp@plt>
   10ad4:	ldur	x8, [x29, #-96]
   10ad8:	sub	x8, x8, x21
   10adc:	stur	x8, [x29, #-96]
   10ae0:	sub	x0, x29, #0x18
   10ae4:	sub	x1, x29, #0x28
   10ae8:	sub	x2, x29, #0x38
   10aec:	bl	bbe0 <__gmpz_tdiv_q@plt>
   10af0:	sub	x0, x29, #0x18
   10af4:	mov	w1, #0x2                   	// #2
   10af8:	bl	cbb0 <__gmpz_sizeinbase@plt>
   10afc:	sub	x20, x0, x20
   10b00:	add	x21, x20, #0x1
   10b04:	sub	x0, x29, #0x18
   10b08:	mov	x1, x21
   10b0c:	bl	bb50 <__gmpz_scan1@plt>
   10b10:	ldur	w8, [x29, #-84]
   10b14:	cmp	w8, #0x0
   10b18:	mov	w8, #0x3f                  	// #63
   10b1c:	cinc	x8, x8, ne  // ne = any
   10b20:	add	x20, x20, x8
   10b24:	cmp	x0, x20
   10b28:	b.cs	10c48 <mpfr_div@@Base+0x82c>  // b.hs, b.nlast
   10b2c:	sub	x0, x29, #0x18
   10b30:	mov	x1, x21
   10b34:	bl	c500 <__gmpz_scan0@plt>
   10b38:	cmp	x0, x20
   10b3c:	b.cs	10c48 <mpfr_div@@Base+0x82c>  // b.hs, b.nlast
   10b40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10b44:	ldr	x1, [x0, #2656]
   10b48:	add	x0, x0, #0xa60
   10b4c:	blr	x1
   10b50:	ldr	w8, [x26, x0]
   10b54:	stur	x0, [x29, #-160]
   10b58:	stur	w8, [x29, #-168]
   10b5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10b60:	ldr	x1, [x0, #2592]
   10b64:	add	x0, x0, #0xa20
   10b68:	blr	x1
   10b6c:	ldr	x21, [x26, x0]
   10b70:	mov	x20, x0
   10b74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10b78:	ldr	x1, [x0, #2624]
   10b7c:	add	x0, x0, #0xa40
   10b80:	blr	x1
   10b84:	ldur	w2, [x29, #-84]
   10b88:	ldr	x25, [x26, x0]
   10b8c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   10b90:	str	x8, [x26, x20]
   10b94:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   10b98:	mov	x24, x0
   10b9c:	str	x8, [x26, x0]
   10ba0:	sub	x1, x29, #0x18
   10ba4:	mov	x0, x22
   10ba8:	bl	c2b0 <mpfr_set_z@plt>
   10bac:	ldur	w12, [x29, #-168]
   10bb0:	ldp	x8, x11, [x29, #-160]
   10bb4:	mov	x13, x21
   10bb8:	str	x13, [x26, x20]
   10bbc:	str	x25, [x26, x24]
   10bc0:	str	w12, [x26, x8]
   10bc4:	ldr	x9, [x22, #16]
   10bc8:	ldur	x10, [x29, #-96]
   10bcc:	mov	x8, #0x2                   	// #2
   10bd0:	movk	x8, #0x8000, lsl #48
   10bd4:	add	x8, x8, #0x2
   10bd8:	sub	x10, x10, x11
   10bdc:	cmp	x9, x8
   10be0:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
   10be4:	add	x8, x9, x10
   10be8:	cset	w10, ge  // ge = tcont
   10bec:	cmp	x9, x11
   10bf0:	mov	x15, #0x3fffffffffffffff    	// #4611686018427387903
   10bf4:	cset	w11, ne  // ne = any
   10bf8:	cmp	x9, x15
   10bfc:	and	w9, w10, w11
   10c00:	cset	w10, ne  // ne = any
   10c04:	mov	w21, w0
   10c08:	cmp	x8, x25
   10c0c:	and	w20, w10, w9
   10c10:	str	x8, [x22, #16]
   10c14:	b.gt	11b00 <mpfr_div@@Base+0x16e4>
   10c18:	cmp	x8, x13
   10c1c:	b.lt	11b00 <mpfr_div@@Base+0x16e4>  // b.tstop
   10c20:	ldur	x24, [x29, #-80]
   10c24:	ldur	x25, [x29, #-144]
   10c28:	cbz	w21, 10c50 <mpfr_div@@Base+0x834>
   10c2c:	orr	w8, w12, #0x8
   10c30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10c34:	ldr	x1, [x0, #2656]
   10c38:	add	x0, x0, #0xa60
   10c3c:	blr	x1
   10c40:	str	w8, [x26, x0]
   10c44:	b	10c50 <mpfr_div@@Base+0x834>
   10c48:	mov	w20, wzr
   10c4c:	ldur	x25, [x29, #-144]
   10c50:	sub	x0, x29, #0x18
   10c54:	bl	c210 <mpfr_mpz_clear@plt>
   10c58:	sub	x0, x29, #0x28
   10c5c:	bl	c210 <mpfr_mpz_clear@plt>
   10c60:	sub	x0, x29, #0x38
   10c64:	bl	c210 <mpfr_mpz_clear@plt>
   10c68:	ldur	w3, [x29, #-84]
   10c6c:	ldp	x16, x15, [x29, #-72]
   10c70:	ldp	x17, x11, [x29, #-112]
   10c74:	ldur	x12, [x29, #-128]
   10c78:	cbnz	w20, 113a8 <mpfr_div@@Base+0xf8c>
   10c7c:	stur	xzr, [x29, #-24]
   10c80:	ldr	w8, [x25, #8]
   10c84:	ldr	w9, [x27, #8]
   10c88:	stur	x26, [x29, #-136]
   10c8c:	asr	x17, x17, #6
   10c90:	asr	x26, x12, #6
   10c94:	mul	w14, w9, w8
   10c98:	str	w14, [x22, #8]
   10c9c:	ldr	x9, [x16, x17, lsl #3]
   10ca0:	ldr	x8, [x15, x26, lsl #3]
   10ca4:	asr	x10, x11, #6
   10ca8:	add	x20, x10, #0x1
   10cac:	stur	x10, [x29, #-168]
   10cb0:	cmp	x9, x8
   10cb4:	b.eq	11454 <mpfr_div@@Base+0x1038>  // b.none
   10cb8:	cset	w13, hi  // hi = pmore
   10cbc:	add	x8, x26, #0x1
   10cc0:	stur	x8, [x29, #-96]
   10cc4:	ldr	x8, [x25, #16]
   10cc8:	ldr	x9, [x27, #16]
   10ccc:	ldr	w10, [x22]
   10cd0:	cmp	w3, #0x1
   10cd4:	mov	w11, #0x2                   	// #2
   10cd8:	cset	w12, eq  // eq = none
   10cdc:	cmp	w14, #0x0
   10ce0:	cinc	w11, w11, ge  // ge = tcont
   10ce4:	cmp	w11, w3
   10ce8:	sub	x8, x8, x9
   10cec:	neg	w9, w10
   10cf0:	cset	w10, eq  // eq = none
   10cf4:	add	x8, x8, x13
   10cf8:	add	x28, x17, #0x1
   10cfc:	stur	w11, [x29, #-188]
   10d00:	cmp	x19, #0x601
   10d04:	stur	x8, [x29, #-144]
   10d08:	and	w11, w9, #0x3f
   10d0c:	orr	w8, w12, w10
   10d10:	stur	x17, [x29, #-176]
   10d14:	stur	w14, [x29, #-128]
   10d18:	stur	w8, [x29, #-152]
   10d1c:	stp	x13, x11, [x29, #-112]
   10d20:	stur	x22, [x29, #-120]
   10d24:	b.lt	10d30 <mpfr_div@@Base+0x914>  // b.tstop
   10d28:	cmp	x23, #0x601
   10d2c:	b.ge	114ac <mpfr_div@@Base+0x1090>  // b.tcont
   10d30:	orr	w8, w11, w3
   10d34:	mov	x21, x24
   10d38:	mov	x25, x20
   10d3c:	cbz	w8, 11534 <mpfr_div@@Base+0x1118>
   10d40:	lsl	x24, x25, #4
   10d44:	cmp	x24, #0x4, lsl #12
   10d48:	lsl	x22, x25, #1
   10d4c:	b.hi	11560 <mpfr_div@@Base+0x1144>  // b.pmore
   10d50:	add	x9, x24, #0xf
   10d54:	mov	x8, sp
   10d58:	and	x9, x9, #0xfffffffffffffff0
   10d5c:	sub	x27, x8, x9
   10d60:	mov	sp, x27
   10d64:	subs	x8, x28, x22
   10d68:	mov	w23, w3
   10d6c:	stur	x8, [x29, #-200]
   10d70:	b.ge	11580 <mpfr_div@@Base+0x1164>  // b.tcont
   10d74:	sub	x19, x22, x28
   10d78:	lsl	x2, x19, #3
   10d7c:	mov	x0, x27
   10d80:	mov	w1, wzr
   10d84:	bl	c1b0 <memset@plt>
   10d88:	ldur	x8, [x29, #-112]
   10d8c:	add	x24, x27, x19, lsl #3
   10d90:	cbz	w8, 10db4 <mpfr_div@@Base+0x998>
   10d94:	ldur	x1, [x29, #-72]
   10d98:	mov	w3, #0x1                   	// #1
   10d9c:	mov	x0, x24
   10da0:	mov	x2, x28
   10da4:	bl	bd90 <__gmpn_rshift@plt>
   10da8:	stur	xzr, [x29, #-160]
   10dac:	stur	x0, [x24, #-8]
   10db0:	b	10dd0 <mpfr_div@@Base+0x9b4>
   10db4:	ldur	x1, [x29, #-72]
   10db8:	cmp	x24, x1
   10dbc:	b.eq	10dcc <mpfr_div@@Base+0x9b0>  // b.none
   10dc0:	lsl	x2, x28, #3
   10dc4:	mov	x0, x24
   10dc8:	bl	bad0 <memcpy@plt>
   10dcc:	stur	xzr, [x29, #-160]
   10dd0:	ldur	x10, [x29, #-64]
   10dd4:	ldur	x8, [x29, #-96]
   10dd8:	subs	x8, x8, x25
   10ddc:	stur	x8, [x29, #-184]
   10de0:	b.lt	115ac <mpfr_div@@Base+0x1190>  // b.tstop
   10de4:	cmp	x21, x10
   10de8:	b.eq	10df4 <mpfr_div@@Base+0x9d8>  // b.none
   10dec:	add	x4, x10, x8, lsl #3
   10df0:	b	10e3c <mpfr_div@@Base+0xa20>
   10df4:	lsl	x1, x25, #3
   10df8:	cmp	x1, #0x4, lsl #12
   10dfc:	b.hi	11978 <mpfr_div@@Base+0x155c>  // b.pmore
   10e00:	add	x9, x1, #0xf
   10e04:	mov	x8, sp
   10e08:	and	x9, x9, #0xfffffffffffffff0
   10e0c:	sub	x24, x8, x9
   10e10:	mov	sp, x24
   10e14:	cmp	x10, x24
   10e18:	mov	x4, x10
   10e1c:	b.eq	10e3c <mpfr_div@@Base+0xa20>  // b.none
   10e20:	ldur	x8, [x29, #-96]
   10e24:	mov	x0, x24
   10e28:	mov	x1, x10
   10e2c:	lsl	x2, x8, #3
   10e30:	bl	bad0 <memcpy@plt>
   10e34:	ldur	x10, [x29, #-64]
   10e38:	mov	x4, x24
   10e3c:	sub	x8, x26, x25
   10e40:	mov	w19, #0x1                   	// #1
   10e44:	add	x9, x8, #0x1
   10e48:	cmp	x9, #0x1
   10e4c:	b.lt	11334 <mpfr_div@@Base+0xf18>  // b.tstop
   10e50:	ldr	x9, [x10, x8, lsl #3]
   10e54:	sub	x8, x8, #0x1
   10e58:	cbz	x9, 10e44 <mpfr_div@@Base+0xa28>
   10e5c:	mov	x8, xzr
   10e60:	add	x2, x27, x8, lsl #3
   10e64:	sub	x3, x22, x8
   10e68:	sub	x5, x25, x8
   10e6c:	mov	x0, x21
   10e70:	mov	x1, xzr
   10e74:	bl	cd10 <__gmpn_divrem@plt>
   10e78:	ldur	x8, [x29, #-160]
   10e7c:	cbz	x8, 10e8c <mpfr_div@@Base+0xa70>
   10e80:	mov	w24, #0x1                   	// #1
   10e84:	mov	w3, w23
   10e88:	b	10eb0 <mpfr_div@@Base+0xa94>
   10e8c:	sub	x8, x27, #0x8
   10e90:	mov	w24, #0x1                   	// #1
   10e94:	mov	x9, x25
   10e98:	mov	w3, w23
   10e9c:	subs	x10, x9, #0x1
   10ea0:	b.lt	113cc <mpfr_div@@Base+0xfb0>  // b.tstop
   10ea4:	ldr	x11, [x8, x9, lsl #3]
   10ea8:	mov	x9, x10
   10eac:	cbz	x11, 10e9c <mpfr_div@@Base+0xa80>
   10eb0:	cmp	x25, x20
   10eb4:	orr	x19, x24, x19
   10eb8:	b.ne	115c0 <mpfr_div@@Base+0x11a4>  // b.any
   10ebc:	ldur	x11, [x29, #-104]
   10ec0:	ldr	x8, [x21]
   10ec4:	mov	x9, #0xffffffffffffffff    	// #-1
   10ec8:	lsl	x9, x9, x11
   10ecc:	bic	x23, x8, x9
   10ed0:	sub	w9, w11, #0x1
   10ed4:	eor	x8, x8, x23
   10ed8:	subs	x12, x26, x25
   10edc:	orr	x10, x19, x23
   10ee0:	str	x8, [x21]
   10ee4:	b.ge	11600 <mpfr_div@@Base+0x11e4>  // b.tcont
   10ee8:	cbnz	w3, 116a4 <mpfr_div@@Base+0x1288>
   10eec:	mov	w8, #0x1                   	// #1
   10ef0:	lsl	x8, x8, x9
   10ef4:	and	x20, x23, x8
   10ef8:	eor	x8, x20, x23
   10efc:	orr	x24, x8, x24
   10f00:	ldur	x22, [x29, #-120]
   10f04:	ldur	x23, [x29, #-136]
   10f08:	ldur	w8, [x29, #-152]
   10f0c:	cbz	w8, 10f20 <mpfr_div@@Base+0xb04>
   10f10:	orr	x8, x24, x20
   10f14:	cmp	x8, #0x0
   10f18:	csetm	w19, ne  // ne = any
   10f1c:	b	11070 <mpfr_div@@Base+0xc54>
   10f20:	orr	x8, x24, x20
   10f24:	cbz	x8, 10f9c <mpfr_div@@Base+0xb80>
   10f28:	cbz	w3, 11054 <mpfr_div@@Base+0xc38>
   10f2c:	ldur	x10, [x29, #-80]
   10f30:	mov	w19, #0x1                   	// #1
   10f34:	lsl	x9, x19, x11
   10f38:	ldr	x8, [x10]
   10f3c:	adds	x8, x8, x9
   10f40:	str	x8, [x10]
   10f44:	b.cc	11070 <mpfr_div@@Base+0xc54>  // b.lo, b.ul, b.last
   10f48:	ldur	x11, [x29, #-168]
   10f4c:	ldur	x24, [x29, #-144]
   10f50:	mov	w8, #0x1                   	// #1
   10f54:	cmp	x8, x11
   10f58:	b.gt	11318 <mpfr_div@@Base+0xefc>
   10f5c:	ldr	x9, [x10, x8, lsl #3]
   10f60:	adds	x9, x9, #0x1
   10f64:	str	x9, [x10, x8, lsl #3]
   10f68:	add	x8, x8, #0x1
   10f6c:	b.cs	10f54 <mpfr_div@@Base+0xb38>  // b.hs, b.nlast
   10f70:	b	1132c <mpfr_div@@Base+0xf10>
   10f74:	ldr	w8, [x27, #8]
   10f78:	ldr	x2, [x15]
   10f7c:	cmp	w8, #0x1
   10f80:	b.lt	11264 <mpfr_div@@Base+0xe48>  // b.tstop
   10f84:	mov	x0, x22
   10f88:	mov	x1, x25
   10f8c:	mov	w19, w3
   10f90:	bl	ccc0 <mpfr_div_ui@plt>
   10f94:	mov	w21, w0
   10f98:	b	1129c <mpfr_div@@Base+0xe80>
   10f9c:	mov	w19, wzr
   10fa0:	b	11070 <mpfr_div@@Base+0xc54>
   10fa4:	mov	w16, #0x7f                  	// #127
   10fa8:	mov	w18, #0x1                   	// #1
   10fac:	sub	x16, x16, x28
   10fb0:	lsl	x16, x18, x16
   10fb4:	and	x16, x17, x16
   10fb8:	and	x14, x17, x14
   10fbc:	eor	x14, x14, x16
   10fc0:	orr	x12, x14, x12
   10fc4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   10fc8:	ldr	x1, [x0, #2592]
   10fcc:	add	x0, x0, #0xa20
   10fd0:	blr	x1
   10fd4:	ldr	x14, [x11, x0]
   10fd8:	cmp	x8, x14
   10fdc:	b.ge	111d8 <mpfr_div@@Base+0xdbc>  // b.tcont
   10fe0:	cbnz	w3, 1100c <mpfr_div@@Base+0xbf0>
   10fe4:	sub	x9, x14, #0x1
   10fe8:	cmp	x8, x9
   10fec:	b.lt	11008 <mpfr_div@@Base+0xbec>  // b.tstop
   10ff0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   10ff4:	cmp	x15, x8
   10ff8:	mov	w3, wzr
   10ffc:	b.ne	1100c <mpfr_div@@Base+0xbf0>  // b.any
   11000:	orr	x8, x12, x13
   11004:	cbnz	x8, 1100c <mpfr_div@@Base+0xbf0>
   11008:	mov	w3, #0x1                   	// #1
   1100c:	mov	x0, x22
   11010:	mov	w1, w3
   11014:	bl	c420 <mpfr_underflow@plt>
   11018:	mov	w21, w0
   1101c:	b	113a8 <mpfr_div@@Base+0xf8c>
   11020:	add	w12, w3, w2, lsr #31
   11024:	cmp	w12, #0x3
   11028:	b.ne	105f8 <mpfr_div@@Base+0x1dc>  // b.any
   1102c:	cbz	w2, 113a4 <mpfr_div@@Base+0xf88>
   11030:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   11034:	ldr	x1, [x0, #2656]
   11038:	add	x0, x0, #0xa60
   1103c:	blr	x1
   11040:	ldr	w9, [x8, x0]
   11044:	neg	w21, w2
   11048:	orr	w9, w9, #0x8
   1104c:	str	w9, [x8, x0]
   11050:	b	113a8 <mpfr_div@@Base+0xf8c>
   11054:	cbz	x20, 1106c <mpfr_div@@Base+0xc50>
   11058:	cbnz	x24, 10f2c <mpfr_div@@Base+0xb10>
   1105c:	ldur	x8, [x29, #-80]
   11060:	ldr	x8, [x8]
   11064:	lsr	x8, x8, x11
   11068:	tbnz	w8, #0, 10f2c <mpfr_div@@Base+0xb10>
   1106c:	mov	w19, #0xffffffff            	// #-1
   11070:	ldur	x24, [x29, #-144]
   11074:	ldur	x0, [x29, #-24]
   11078:	cbnz	x0, 1151c <mpfr_div@@Base+0x1100>
   1107c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   11080:	ldr	x1, [x0, #2624]
   11084:	add	x0, x0, #0xa40
   11088:	blr	x1
   1108c:	ldr	x8, [x23, x0]
   11090:	cmp	x24, x8
   11094:	b.gt	1152c <mpfr_div@@Base+0x1110>
   11098:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1109c:	ldr	x1, [x0, #2592]
   110a0:	add	x0, x0, #0xa20
   110a4:	blr	x1
   110a8:	ldr	x8, [x23, x0]
   110ac:	cmp	x24, x8
   110b0:	b.lt	1167c <mpfr_div@@Base+0x1260>  // b.tstop
   110b4:	ldur	w8, [x29, #-128]
   110b8:	str	x24, [x22, #16]
   110bc:	mul	w21, w19, w8
   110c0:	cbz	w21, 113a8 <mpfr_div@@Base+0xf8c>
   110c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   110c8:	ldr	x1, [x0, #2656]
   110cc:	add	x0, x0, #0xa60
   110d0:	blr	x1
   110d4:	ldr	w8, [x23, x0]
   110d8:	orr	w8, w8, #0x8
   110dc:	str	w8, [x23, x0]
   110e0:	b	113a8 <mpfr_div@@Base+0xf8c>
   110e4:	lsl	x13, x11, #1
   110e8:	cmp	x13, x11
   110ec:	cset	w14, cc  // cc = lo, ul, last
   110f0:	subs	x12, x13, x12
   110f4:	cset	w13, cs  // cs = hs, nlast
   110f8:	orr	w13, w14, w13
   110fc:	cmp	w13, #0x0
   11100:	str	x10, [x9]
   11104:	csel	x11, x12, x11, ne  // ne = any
   11108:	ldr	w12, [x25, #8]
   1110c:	ldr	w14, [x27, #8]
   11110:	mul	w2, w14, w12
   11114:	str	w2, [x22, #8]
   11118:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1111c:	ldr	x1, [x0, #2624]
   11120:	add	x0, x0, #0xa40
   11124:	blr	x1
   11128:	mrs	x12, tpidr_el0
   1112c:	ldr	x14, [x12, x0]
   11130:	cmp	x8, x14
   11134:	b.gt	1083c <mpfr_div@@Base+0x420>
   11138:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1113c:	ldr	x1, [x0, #2592]
   11140:	add	x0, x0, #0xa20
   11144:	blr	x1
   11148:	ldr	x14, [x12, x0]
   1114c:	cmp	x8, x14
   11150:	b.lt	11acc <mpfr_div@@Base+0x16b0>  // b.tstop
   11154:	mov	w21, wzr
   11158:	cmp	w3, #0x5
   1115c:	str	x8, [x22, #16]
   11160:	b.eq	113a8 <mpfr_div@@Base+0xf8c>  // b.none
   11164:	orr	x10, x13, x11
   11168:	cbz	x10, 113a8 <mpfr_div@@Base+0xf8c>
   1116c:	cmp	w3, #0x1
   11170:	b.eq	11348 <mpfr_div@@Base+0xf2c>  // b.none
   11174:	cbnz	w3, 1133c <mpfr_div@@Base+0xf20>
   11178:	cbz	x13, 11348 <mpfr_div@@Base+0xf2c>
   1117c:	ldr	x10, [x9]
   11180:	adds	x10, x10, #0x1
   11184:	str	x10, [x9]
   11188:	b.cc	111b8 <mpfr_div@@Base+0xd9c>  // b.lo, b.ul, b.last
   1118c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   11190:	str	x10, [x9]
   11194:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   11198:	ldr	x1, [x0, #2624]
   1119c:	add	x0, x0, #0xa40
   111a0:	blr	x1
   111a4:	ldr	x9, [x12, x0]
   111a8:	cmp	x8, x9
   111ac:	b.ge	1083c <mpfr_div@@Base+0x420>  // b.tcont
   111b0:	add	x8, x8, #0x1
   111b4:	str	x8, [x22, #16]
   111b8:	cbz	w2, 113a4 <mpfr_div@@Base+0xf88>
   111bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   111c0:	ldr	x1, [x0, #2656]
   111c4:	add	x0, x0, #0xa60
   111c8:	blr	x1
   111cc:	ldr	w8, [x12, x0]
   111d0:	mov	w21, w2
   111d4:	b	11364 <mpfr_div@@Base+0xf48>
   111d8:	mov	w21, wzr
   111dc:	cmp	w3, #0x5
   111e0:	str	x8, [x22, #16]
   111e4:	b.eq	113a8 <mpfr_div@@Base+0xf8c>  // b.none
   111e8:	orr	x12, x12, x16
   111ec:	cbz	x12, 113a8 <mpfr_div@@Base+0xf8c>
   111f0:	cmp	w3, #0x1
   111f4:	b.eq	1137c <mpfr_div@@Base+0xf60>  // b.none
   111f8:	cbnz	w3, 11370 <mpfr_div@@Base+0xf54>
   111fc:	cbz	x16, 1137c <mpfr_div@@Base+0xf60>
   11200:	ldp	x12, x13, [x9]
   11204:	adds	x10, x12, x10
   11208:	str	x10, [x9]
   1120c:	cinc	x10, x13, eq  // eq = none
   11210:	str	x10, [x9, #8]
   11214:	cbnz	x10, 11244 <mpfr_div@@Base+0xe28>
   11218:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   1121c:	str	x10, [x9, #8]
   11220:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   11224:	ldr	x1, [x0, #2624]
   11228:	add	x0, x0, #0xa40
   1122c:	blr	x1
   11230:	ldr	x9, [x11, x0]
   11234:	cmp	x8, x9
   11238:	b.ge	1083c <mpfr_div@@Base+0x420>  // b.tcont
   1123c:	add	x8, x8, #0x1
   11240:	str	x8, [x22, #16]
   11244:	cbz	w2, 113a4 <mpfr_div@@Base+0xf88>
   11248:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1124c:	ldr	x1, [x0, #2656]
   11250:	add	x0, x0, #0xa60
   11254:	blr	x1
   11258:	ldr	w8, [x11, x0]
   1125c:	mov	w21, w2
   11260:	b	11398 <mpfr_div@@Base+0xf7c>
   11264:	cmp	w3, #0x3
   11268:	mov	w8, #0x2                   	// #2
   1126c:	csel	w8, w8, w3, eq  // eq = none
   11270:	cmp	w3, #0x2
   11274:	mov	w9, #0x3                   	// #3
   11278:	mov	w19, w3
   1127c:	csel	w3, w9, w8, eq  // eq = none
   11280:	mov	x0, x22
   11284:	mov	x1, x25
   11288:	bl	ccc0 <mpfr_div_ui@plt>
   1128c:	ldr	w8, [x22, #8]
   11290:	neg	w21, w0
   11294:	neg	w8, w8
   11298:	str	w8, [x22, #8]
   1129c:	ldr	x8, [x22, #16]
   112a0:	sub	x8, x8, x20
   112a4:	str	x8, [x22, #16]
   112a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   112ac:	ldr	x1, [x0, #2624]
   112b0:	add	x0, x0, #0xa40
   112b4:	blr	x1
   112b8:	ldr	x9, [x26, x0]
   112bc:	sub	x10, x9, #0x40
   112c0:	cmp	x8, x10
   112c4:	b.gt	11aa8 <mpfr_div@@Base+0x168c>
   112c8:	add	x8, x8, #0x40
   112cc:	str	x8, [x22, #16]
   112d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   112d4:	ldr	x1, [x0, #2592]
   112d8:	add	x0, x0, #0xa20
   112dc:	blr	x1
   112e0:	cmp	x8, x9
   112e4:	b.gt	11ab8 <mpfr_div@@Base+0x169c>
   112e8:	ldr	x9, [x26, x0]
   112ec:	cmp	x8, x9
   112f0:	b.lt	11ab8 <mpfr_div@@Base+0x169c>  // b.tstop
   112f4:	cbz	w21, 113a8 <mpfr_div@@Base+0xf8c>
   112f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   112fc:	ldr	x1, [x0, #2656]
   11300:	add	x0, x0, #0xa60
   11304:	blr	x1
   11308:	ldr	w8, [x26, x0]
   1130c:	orr	w8, w8, #0x8
   11310:	str	w8, [x26, x0]
   11314:	b	113a8 <mpfr_div@@Base+0xf8c>
   11318:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1131c:	cmp	x24, x8
   11320:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   11324:	cinc	x24, x24, ne  // ne = any
   11328:	str	x9, [x10, x11, lsl #3]
   1132c:	mov	w19, #0x1                   	// #1
   11330:	b	11074 <mpfr_div@@Base+0xc58>
   11334:	mov	x19, xzr
   11338:	b	10e5c <mpfr_div@@Base+0xa40>
   1133c:	add	w10, w3, w2, lsr #31
   11340:	cmp	w10, #0x3
   11344:	b.ne	1117c <mpfr_div@@Base+0xd60>  // b.any
   11348:	cbz	w2, 113a4 <mpfr_div@@Base+0xf88>
   1134c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   11350:	ldr	x1, [x0, #2656]
   11354:	add	x0, x0, #0xa60
   11358:	blr	x1
   1135c:	ldr	w8, [x12, x0]
   11360:	neg	w21, w2
   11364:	orr	w8, w8, #0x8
   11368:	str	w8, [x12, x0]
   1136c:	b	113a8 <mpfr_div@@Base+0xf8c>
   11370:	add	w12, w3, w2, lsr #31
   11374:	cmp	w12, #0x3
   11378:	b.ne	11200 <mpfr_div@@Base+0xde4>  // b.any
   1137c:	cbz	w2, 113a4 <mpfr_div@@Base+0xf88>
   11380:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   11384:	ldr	x1, [x0, #2656]
   11388:	add	x0, x0, #0xa60
   1138c:	blr	x1
   11390:	ldr	w8, [x11, x0]
   11394:	neg	w21, w2
   11398:	orr	w8, w8, #0x8
   1139c:	str	w8, [x11, x0]
   113a0:	b	113a8 <mpfr_div@@Base+0xf8c>
   113a4:	mov	w21, wzr
   113a8:	mov	w0, w21
   113ac:	mov	sp, x29
   113b0:	ldp	x20, x19, [sp, #80]
   113b4:	ldp	x22, x21, [sp, #64]
   113b8:	ldp	x24, x23, [sp, #48]
   113bc:	ldp	x26, x25, [sp, #32]
   113c0:	ldp	x28, x27, [sp, #16]
   113c4:	ldp	x29, x30, [sp], #96
   113c8:	ret
   113cc:	mov	x24, xzr
   113d0:	b	10eb0 <mpfr_div@@Base+0xa94>
   113d4:	cmp	x8, x12
   113d8:	b.eq	113e8 <mpfr_div@@Base+0xfcc>  // b.none
   113dc:	ldr	x20, [x27, #16]
   113e0:	cmp	x20, x12
   113e4:	b.ne	11410 <mpfr_div@@Base+0xff4>  // b.any
   113e8:	str	x12, [x22, #16]
   113ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   113f0:	ldr	x1, [x0, #2656]
   113f4:	add	x0, x0, #0xa60
   113f8:	blr	x1
   113fc:	mrs	x8, tpidr_el0
   11400:	ldr	w9, [x8, x0]
   11404:	mov	w21, wzr
   11408:	orr	w9, w9, #0x4
   1140c:	b	1104c <mpfr_div@@Base+0xc30>
   11410:	ldr	w10, [x25, #8]
   11414:	ldr	w11, [x27, #8]
   11418:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1141c:	cmp	x8, x9
   11420:	mul	w10, w11, w10
   11424:	str	w10, [x22, #8]
   11428:	b.ne	1143c <mpfr_div@@Base+0x1020>  // b.any
   1142c:	cmp	x20, x9
   11430:	b.eq	113e8 <mpfr_div@@Base+0xfcc>  // b.none
   11434:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   11438:	b	11448 <mpfr_div@@Base+0x102c>
   1143c:	cmp	x20, x9
   11440:	b.ne	11748 <mpfr_div@@Base+0x132c>  // b.any
   11444:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   11448:	mov	w21, wzr
   1144c:	str	x8, [x22, #16]
   11450:	b	113a8 <mpfr_div@@Base+0xf8c>
   11454:	add	x8, x23, #0x3e
   11458:	cmp	x8, #0x7f
   1145c:	b.cc	11a70 <mpfr_div@@Base+0x1654>  // b.lo, b.ul, b.last
   11460:	add	x8, x28, #0x3e
   11464:	cmp	x8, #0x7f
   11468:	mov	x10, x9
   1146c:	mov	x8, x26
   11470:	b.cc	11a78 <mpfr_div@@Base+0x165c>  // b.lo, b.ul, b.last
   11474:	sub	x11, x17, #0x1
   11478:	sub	x12, x26, #0x1
   1147c:	ldr	x10, [x16, x11, lsl #3]
   11480:	ldr	x9, [x15, x12, lsl #3]
   11484:	mov	x8, x12
   11488:	cmp	x10, x9
   1148c:	b.ne	11a78 <mpfr_div@@Base+0x165c>  // b.any
   11490:	subs	x11, x11, #0x1
   11494:	cset	w13, cs  // cs = hs, nlast
   11498:	mov	x9, x10
   1149c:	subs	x12, x8, #0x1
   114a0:	b.cc	11a78 <mpfr_div@@Base+0x165c>  // b.lo, b.ul, b.last
   114a4:	cbnz	w13, 1147c <mpfr_div@@Base+0x1060>
   114a8:	b	11a78 <mpfr_div@@Base+0x165c>
   114ac:	ldur	x8, [x29, #-168]
   114b0:	add	x21, x8, #0x2
   114b4:	lsl	x24, x21, #4
   114b8:	cmp	x24, #0x4, lsl #12
   114bc:	lsl	x19, x21, #1
   114c0:	b.hi	12150 <mpfr_div@@Base+0x1d34>  // b.pmore
   114c4:	add	x9, x24, #0xf
   114c8:	mov	x8, sp
   114cc:	and	x9, x9, #0xfffffffffffffff0
   114d0:	sub	x22, x8, x9
   114d4:	mov	sp, x22
   114d8:	subs	x23, x19, x28
   114dc:	stur	w3, [x29, #-84]
   114e0:	b.le	1176c <mpfr_div@@Base+0x1350>
   114e4:	ldur	x9, [x29, #-176]
   114e8:	add	x8, x22, x19, lsl #3
   114ec:	mvn	x9, x9
   114f0:	add	x0, x8, x9, lsl #3
   114f4:	cmp	x0, x16
   114f8:	b.eq	11508 <mpfr_div@@Base+0x10ec>  // b.none
   114fc:	ldur	x1, [x29, #-72]
   11500:	lsl	x2, x28, #3
   11504:	bl	bad0 <memcpy@plt>
   11508:	lsl	x2, x23, #3
   1150c:	mov	x0, x22
   11510:	mov	w1, wzr
   11514:	bl	c1b0 <memset@plt>
   11518:	b	11788 <mpfr_div@@Base+0x136c>
   1151c:	mov	w20, w3
   11520:	bl	c460 <mpfr_tmp_free@plt>
   11524:	mov	w3, w20
   11528:	b	1107c <mpfr_div@@Base+0xc60>
   1152c:	ldur	w2, [x29, #-128]
   11530:	b	1083c <mpfr_div@@Base+0x420>
   11534:	ldur	x8, [x29, #-168]
   11538:	add	x25, x8, #0x2
   1153c:	lsl	x1, x25, #3
   11540:	cmp	x1, #0x4, lsl #12
   11544:	b.hi	12170 <mpfr_div@@Base+0x1d54>  // b.pmore
   11548:	add	x9, x1, #0xf
   1154c:	mov	x8, sp
   11550:	and	x9, x9, #0xfffffffffffffff0
   11554:	sub	x21, x8, x9
   11558:	mov	sp, x21
   1155c:	b	10d40 <mpfr_div@@Base+0x924>
   11560:	sub	x0, x29, #0x18
   11564:	mov	x1, x24
   11568:	mov	w19, w3
   1156c:	bl	be70 <mpfr_tmp_allocate@plt>
   11570:	ldur	x16, [x29, #-72]
   11574:	mov	w3, w19
   11578:	mov	x27, x0
   1157c:	b	10d64 <mpfr_div@@Base+0x948>
   11580:	add	x1, x16, x8, lsl #3
   11584:	ldur	x8, [x29, #-112]
   11588:	tbz	w8, #0, 11904 <mpfr_div@@Base+0x14e8>
   1158c:	mov	w3, #0x1                   	// #1
   11590:	mov	w8, #0x1                   	// #1
   11594:	mov	x0, x27
   11598:	mov	x2, x22
   1159c:	stur	x8, [x29, #-160]
   115a0:	bl	bd90 <__gmpn_rshift@plt>
   115a4:	cbnz	x0, 10dd0 <mpfr_div@@Base+0x9b4>
   115a8:	b	11918 <mpfr_div@@Base+0x14fc>
   115ac:	ldur	x8, [x29, #-96]
   115b0:	mov	x19, xzr
   115b4:	mov	x4, x10
   115b8:	sub	x8, x25, x8
   115bc:	b	10e60 <mpfr_div@@Base+0xa44>
   115c0:	ldur	x8, [x29, #-80]
   115c4:	add	x1, x21, #0x8
   115c8:	cmp	x8, x1
   115cc:	b.eq	115ec <mpfr_div@@Base+0x11d0>  // b.none
   115d0:	mov	x23, x0
   115d4:	ldur	x0, [x29, #-80]
   115d8:	lsl	x2, x20, #3
   115dc:	mov	w20, w3
   115e0:	bl	bad0 <memcpy@plt>
   115e4:	mov	x0, x23
   115e8:	mov	w3, w20
   115ec:	ldr	x8, [x21]
   115f0:	ldur	x11, [x29, #-104]
   115f4:	mov	w9, #0x3f                  	// #63
   115f8:	mov	x23, x8
   115fc:	b	10ed4 <mpfr_div@@Base+0xab8>
   11600:	cbz	x10, 1194c <mpfr_div@@Base+0x1530>
   11604:	mov	w10, #0x1                   	// #1
   11608:	lsl	x9, x10, x9
   1160c:	and	x9, x23, x9
   11610:	cmp	w3, #0x0
   11614:	csel	x20, x9, xzr, eq  // eq = none
   11618:	eor	x24, x20, x23
   1161c:	cmp	x24, #0x1
   11620:	stp	x12, x0, [x29, #-216]
   11624:	b.hi	10f00 <mpfr_div@@Base+0xae4>  // b.pmore
   11628:	ldur	x9, [x29, #-96]
   1162c:	stur	w3, [x29, #-84]
   11630:	lsl	x1, x9, #3
   11634:	cmp	x1, #0x4, lsl #12
   11638:	b.hi	121bc <mpfr_div@@Base+0x1da0>  // b.pmore
   1163c:	add	x10, x1, #0xf
   11640:	mov	x9, sp
   11644:	and	x10, x10, #0xfffffffffffffff0
   11648:	sub	x19, x9, x10
   1164c:	mov	sp, x19
   11650:	ldur	x9, [x29, #-184]
   11654:	eor	x8, x8, x23
   11658:	mov	x0, x19
   1165c:	str	x8, [x21]
   11660:	cmp	x25, x9
   11664:	b.ge	11b1c <mpfr_div@@Base+0x1700>  // b.tcont
   11668:	ldur	x1, [x29, #-64]
   1166c:	ldur	x2, [x29, #-184]
   11670:	mov	x3, x21
   11674:	mov	x4, x25
   11678:	b	11b2c <mpfr_div@@Base+0x1710>
   1167c:	cbnz	w3, 11bf8 <mpfr_div@@Base+0x17dc>
   11680:	sub	x8, x8, #0x1
   11684:	cmp	x24, x8
   11688:	b.lt	1169c <mpfr_div@@Base+0x1280>  // b.tstop
   1168c:	tbnz	w19, #31, 11bf4 <mpfr_div@@Base+0x17d8>
   11690:	mov	x0, x22
   11694:	bl	bfb0 <mpfr_powerof2_raw@plt>
   11698:	cbz	w0, 11bf4 <mpfr_div@@Base+0x17d8>
   1169c:	mov	w3, #0x1                   	// #1
   116a0:	b	11bf8 <mpfr_div@@Base+0x17dc>
   116a4:	cmp	x10, #0x0
   116a8:	mov	x20, xzr
   116ac:	cset	w24, ne  // ne = any
   116b0:	b	10f00 <mpfr_div@@Base+0xae4>
   116b4:	mov	x17, xzr
   116b8:	umulh	x0, x13, x12
   116bc:	mul	x1, x13, x12
   116c0:	subs	x16, x17, x1
   116c4:	sbc	x17, x15, x0
   116c8:	lsr	x15, x18, #1
   116cc:	cbnz	x17, 116d8 <mpfr_div@@Base+0x12bc>
   116d0:	cmp	x16, x12
   116d4:	b.cc	11700 <mpfr_div@@Base+0x12e4>  // b.lo, b.ul, b.last
   116d8:	neg	x14, x12
   116dc:	add	x18, x14, x16
   116e0:	subs	x16, x16, x12
   116e4:	cset	w0, cc  // cc = lo, ul, last
   116e8:	add	x13, x13, #0x1
   116ec:	cmp	x18, x12
   116f0:	sub	x17, x17, x0
   116f4:	b.cs	116dc <mpfr_div@@Base+0x12c0>  // b.hs, b.nlast
   116f8:	cbnz	x17, 116dc <mpfr_div@@Base+0x12c0>
   116fc:	lsr	x14, x13, x11
   11700:	and	x12, x13, x11
   11704:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   11708:	and	x15, x14, x15
   1170c:	lsr	x13, x13, x28
   11710:	orr	x15, x12, x15
   11714:	and	x12, x14, x13
   11718:	orr	x13, x15, x16
   1171c:	b	10570 <mpfr_div@@Base+0x154>
   11720:	cbnz	w3, 1100c <mpfr_div@@Base+0xbf0>
   11724:	sub	x8, x15, #0x1
   11728:	cmp	x11, x8
   1172c:	b.lt	11008 <mpfr_div@@Base+0xbec>  // b.tstop
   11730:	mov	w3, wzr
   11734:	cbnz	x13, 1100c <mpfr_div@@Base+0xbf0>
   11738:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   1173c:	cmp	x14, x8
   11740:	b.eq	11008 <mpfr_div@@Base+0xbec>  // b.none
   11744:	b	1100c <mpfr_div@@Base+0xbf0>
   11748:	mov	x10, #0x2                   	// #2
   1174c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   11750:	movk	x10, #0x8000, lsl #48
   11754:	cmp	x20, x9
   11758:	b.ne	11a64 <mpfr_div@@Base+0x1648>  // b.any
   1175c:	cmp	x8, x9
   11760:	b.ne	11b7c <mpfr_div@@Base+0x1760>  // b.any
   11764:	str	x10, [x22, #16]
   11768:	b	113ec <mpfr_div@@Base+0xfd0>
   1176c:	add	x8, x16, x28, lsl #3
   11770:	sub	x1, x8, x19, lsl #3
   11774:	cmp	x1, x22
   11778:	b.eq	11788 <mpfr_div@@Base+0x136c>  // b.none
   1177c:	mov	x0, x22
   11780:	mov	x2, x24
   11784:	bl	bad0 <memcpy@plt>
   11788:	ldur	x8, [x29, #-96]
   1178c:	subs	x23, x21, x8
   11790:	b.le	117f0 <mpfr_div@@Base+0x13d4>
   11794:	lsl	x25, x21, #3
   11798:	cmp	x25, #0x4, lsl #12
   1179c:	b.hi	121a8 <mpfr_div@@Base+0x1d8c>  // b.pmore
   117a0:	add	x9, x25, #0xf
   117a4:	mov	x8, sp
   117a8:	and	x9, x9, #0xfffffffffffffff0
   117ac:	sub	x27, x8, x9
   117b0:	mov	sp, x27
   117b4:	add	x8, x27, x21, lsl #3
   117b8:	mvn	x9, x26
   117bc:	add	x0, x8, x9, lsl #3
   117c0:	ldur	x8, [x29, #-64]
   117c4:	cmp	x0, x8
   117c8:	b.eq	117dc <mpfr_div@@Base+0x13c0>  // b.none
   117cc:	ldur	x8, [x29, #-96]
   117d0:	ldur	x1, [x29, #-64]
   117d4:	lsl	x2, x8, #3
   117d8:	bl	bad0 <memcpy@plt>
   117dc:	lsl	x2, x23, #3
   117e0:	mov	x0, x27
   117e4:	mov	w1, wzr
   117e8:	bl	c1b0 <memset@plt>
   117ec:	b	11810 <mpfr_div@@Base+0x13f4>
   117f0:	ldur	x8, [x29, #-64]
   117f4:	ldur	x9, [x29, #-96]
   117f8:	ldur	x10, [x29, #-168]
   117fc:	lsl	x25, x21, #3
   11800:	add	x8, x8, x9, lsl #3
   11804:	mov	x9, #0xfffffffffffffffe    	// #-2
   11808:	sub	x9, x9, x10
   1180c:	add	x27, x8, x9, lsl #3
   11810:	ldur	x24, [x29, #-80]
   11814:	cmp	x25, #0x4, lsl #12
   11818:	b.hi	1218c <mpfr_div@@Base+0x1d70>  // b.pmore
   1181c:	add	x9, x25, #0xf
   11820:	mov	x8, sp
   11824:	and	x9, x9, #0xfffffffffffffff0
   11828:	sub	x25, x8, x9
   1182c:	mov	sp, x25
   11830:	mov	x0, x25
   11834:	mov	x1, x22
   11838:	mov	x2, x27
   1183c:	mov	x3, x21
   11840:	bl	c1e0 <mpfr_divhigh_n@plt>
   11844:	orr	x8, x19, #0x1
   11848:	clz	x8, x8
   1184c:	orr	x8, x8, #0xffffffffffffffc0
   11850:	cmp	x0, #0x1
   11854:	add	x22, x8, x21, lsl #6
   11858:	b.ne	1187c <mpfr_div@@Base+0x1460>  // b.any
   1185c:	mov	w3, #0x1                   	// #1
   11860:	mov	x0, x25
   11864:	mov	x1, x25
   11868:	mov	x2, x21
   1186c:	bl	bd90 <__gmpn_rshift@plt>
   11870:	ldr	x8, [x25, x20, lsl #3]
   11874:	orr	x8, x8, #0x8000000000000000
   11878:	str	x8, [x25, x20, lsl #3]
   1187c:	ldur	x9, [x29, #-120]
   11880:	ldur	w19, [x29, #-84]
   11884:	mov	x0, x25
   11888:	mov	x1, x21
   1188c:	ldr	x8, [x9]
   11890:	cmp	w19, #0x0
   11894:	mov	x2, x22
   11898:	mov	x22, x9
   1189c:	cinc	x3, x8, eq  // eq = none
   118a0:	bl	c3d0 <mpfr_round_p@plt>
   118a4:	ldur	x16, [x29, #-72]
   118a8:	ldur	x11, [x29, #-104]
   118ac:	mov	w3, w19
   118b0:	cbz	w0, 10d30 <mpfr_div@@Base+0x914>
   118b4:	add	x21, x25, #0x8
   118b8:	cmp	x24, x21
   118bc:	b.eq	118dc <mpfr_div@@Base+0x14c0>  // b.none
   118c0:	lsl	x2, x20, #3
   118c4:	mov	x0, x24
   118c8:	mov	x1, x21
   118cc:	mov	w19, w3
   118d0:	bl	bad0 <memcpy@plt>
   118d4:	ldur	x11, [x29, #-104]
   118d8:	mov	w3, w19
   118dc:	ldr	x8, [x24]
   118e0:	mov	x9, #0xffffffffffffffff    	// #-1
   118e4:	lsl	x9, x9, x11
   118e8:	and	x8, x8, x9
   118ec:	str	x8, [x24]
   118f0:	cbz	w3, 1195c <mpfr_div@@Base+0x1540>
   118f4:	ldur	x23, [x29, #-136]
   118f8:	ldur	w8, [x29, #-152]
   118fc:	tbz	w8, #0, 10f2c <mpfr_div@@Base+0xb10>
   11900:	b	1106c <mpfr_div@@Base+0xc50>
   11904:	cmp	x1, x27
   11908:	b.eq	11918 <mpfr_div@@Base+0x14fc>  // b.none
   1190c:	mov	x0, x27
   11910:	mov	x2, x24
   11914:	bl	bad0 <memcpy@plt>
   11918:	ldur	x8, [x29, #-176]
   1191c:	ldur	x10, [x29, #-64]
   11920:	mov	w9, #0x1                   	// #1
   11924:	stur	x9, [x29, #-160]
   11928:	sub	x8, x8, x22
   1192c:	add	x9, x8, #0x1
   11930:	cmp	x9, #0x1
   11934:	b.lt	11d04 <mpfr_div@@Base+0x18e8>  // b.tstop
   11938:	ldur	x9, [x29, #-72]
   1193c:	ldr	x9, [x9, x8, lsl #3]
   11940:	sub	x8, x8, #0x1
   11944:	cbnz	x9, 10dd4 <mpfr_div@@Base+0x9b8>
   11948:	b	1192c <mpfr_div@@Base+0x1510>
   1194c:	ldur	x22, [x29, #-120]
   11950:	mov	w19, wzr
   11954:	ldur	x23, [x29, #-136]
   11958:	b	11070 <mpfr_div@@Base+0xc54>
   1195c:	cbz	w11, 11b60 <mpfr_div@@Base+0x1744>
   11960:	ldur	x9, [x29, #-104]
   11964:	ldr	x8, [x21]
   11968:	sub	w9, w9, #0x1
   1196c:	lsr	x8, x8, x9
   11970:	and	x8, x8, #0x1
   11974:	b	11b68 <mpfr_div@@Base+0x174c>
   11978:	sub	x0, x29, #0x18
   1197c:	bl	be70 <mpfr_tmp_allocate@plt>
   11980:	ldur	x10, [x29, #-64]
   11984:	mov	x24, x0
   11988:	b	10e14 <mpfr_div@@Base+0x9f8>
   1198c:	mov	x18, xzr
   11990:	b	10730 <mpfr_div@@Base+0x314>
   11994:	mov	w6, w3
   11998:	umulh	x0, x17, x13
   1199c:	mul	x3, x17, x12
   119a0:	umulh	x2, x17, x12
   119a4:	mul	x5, x15, x13
   119a8:	msub	x16, x15, x12, x16
   119ac:	adds	x0, x0, x3
   119b0:	mul	x1, x17, x13
   119b4:	sub	x16, x16, x2
   119b8:	cset	w2, cs  // cs = hs, nlast
   119bc:	adds	x0, x0, x5
   119c0:	umulh	x4, x15, x13
   119c4:	sub	x16, x16, x4
   119c8:	cset	w3, cs  // cs = hs, nlast
   119cc:	cmp	x1, #0x0
   119d0:	sub	x16, x16, x2
   119d4:	csetm	x2, ne  // ne = any
   119d8:	sub	x3, x16, x3
   119dc:	sub	x16, x2, x0
   119e0:	orr	x0, x16, x1
   119e4:	cmp	x0, #0x0
   119e8:	cset	w0, ne  // ne = any
   119ec:	mneg	x18, x17, x13
   119f0:	sub	x0, x3, x0
   119f4:	neg	x17, x17
   119f8:	cbnz	x0, 11a10 <mpfr_div@@Base+0x15f4>
   119fc:	cmp	x16, x12
   11a00:	b.hi	11a10 <mpfr_div@@Base+0x15f4>  // b.pmore
   11a04:	b.ne	11a50 <mpfr_div@@Base+0x1634>  // b.any
   11a08:	cmp	x18, x13
   11a0c:	b.cc	11a50 <mpfr_div@@Base+0x1634>  // b.lo, b.ul, b.last
   11a10:	subs	x17, x17, #0x1
   11a14:	cinc	x15, x15, eq  // eq = none
   11a18:	cmp	x16, x12
   11a1c:	b.cs	11a28 <mpfr_div@@Base+0x160c>  // b.hs, b.nlast
   11a20:	mov	w1, #0x1                   	// #1
   11a24:	b	11a38 <mpfr_div@@Base+0x161c>
   11a28:	cset	w1, eq  // eq = none
   11a2c:	cmp	x18, x13
   11a30:	cset	w2, cc  // cc = lo, ul, last
   11a34:	and	w1, w1, w2
   11a38:	subs	x2, x18, x13
   11a3c:	sbc	x16, x16, x12
   11a40:	sub	x0, x0, x1
   11a44:	mov	x18, x2
   11a48:	cbz	x0, 119fc <mpfr_div@@Base+0x15e0>
   11a4c:	b	11a10 <mpfr_div@@Base+0x15f4>
   11a50:	orr	x12, x18, x16
   11a54:	neg	x17, x17
   11a58:	mov	w3, w6
   11a5c:	cbnz	w11, 107e4 <mpfr_div@@Base+0x3c8>
   11a60:	b	10800 <mpfr_div@@Base+0x3e4>
   11a64:	mov	w21, wzr
   11a68:	str	x9, [x22, #16]
   11a6c:	b	113a8 <mpfr_div@@Base+0xf8c>
   11a70:	mov	x10, x9
   11a74:	mov	x8, x26
   11a78:	cmp	x10, x9
   11a7c:	b.ne	10cb8 <mpfr_div@@Base+0x89c>  // b.any
   11a80:	cbz	x8, 11d10 <mpfr_div@@Base+0x18f4>
   11a84:	ldp	x24, x16, [x29, #-80]
   11a88:	sub	x9, x15, #0x8
   11a8c:	subs	x10, x8, #0x1
   11a90:	b.lt	11d0c <mpfr_div@@Base+0x18f0>  // b.tstop
   11a94:	ldr	x11, [x9, x8, lsl #3]
   11a98:	mov	w13, wzr
   11a9c:	mov	x8, x10
   11aa0:	cbnz	x11, 10cbc <mpfr_div@@Base+0x8a0>
   11aa4:	b	11a8c <mpfr_div@@Base+0x1670>
   11aa8:	ldr	w2, [x22, #8]
   11aac:	mov	x0, x22
   11ab0:	mov	w1, w19
   11ab4:	b	10844 <mpfr_div@@Base+0x428>
   11ab8:	mov	x0, x22
   11abc:	mov	w1, w21
   11ac0:	mov	w2, w19
   11ac4:	bl	cb80 <mpfr_check_range@plt>
   11ac8:	b	11018 <mpfr_div@@Base+0xbfc>
   11acc:	mov	w1, w3
   11ad0:	cbnz	w3, 11af8 <mpfr_div@@Base+0x16dc>
   11ad4:	sub	x9, x14, #0x1
   11ad8:	cmp	x8, x9
   11adc:	b.lt	11af4 <mpfr_div@@Base+0x16d8>  // b.tstop
   11ae0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   11ae4:	cmp	x10, x8
   11ae8:	mov	w1, wzr
   11aec:	b.ne	11af8 <mpfr_div@@Base+0x16dc>  // b.any
   11af0:	cbnz	x11, 11af8 <mpfr_div@@Base+0x16dc>
   11af4:	mov	w1, #0x1                   	// #1
   11af8:	mov	x0, x22
   11afc:	b	11014 <mpfr_div@@Base+0xbf8>
   11b00:	ldur	w2, [x29, #-84]
   11b04:	mov	x0, x22
   11b08:	mov	w1, w21
   11b0c:	bl	cb80 <mpfr_check_range@plt>
   11b10:	ldur	x24, [x29, #-80]
   11b14:	mov	w21, w0
   11b18:	b	10c4c <mpfr_div@@Base+0x830>
   11b1c:	ldur	x3, [x29, #-64]
   11b20:	ldur	x4, [x29, #-184]
   11b24:	mov	x1, x21
   11b28:	mov	x2, x25
   11b2c:	bl	c7f0 <__gmpn_mul@plt>
   11b30:	ldur	x8, [x29, #-208]
   11b34:	cbz	x8, 11ba8 <mpfr_div@@Base+0x178c>
   11b38:	ldur	x2, [x29, #-64]
   11b3c:	ldur	x3, [x29, #-184]
   11b40:	add	x0, x19, x25, lsl #3
   11b44:	mov	x1, x0
   11b48:	bl	c5f0 <__gmpn_add_n@plt>
   11b4c:	ldr	x8, [x21]
   11b50:	eor	x8, x8, x23
   11b54:	str	x8, [x21]
   11b58:	cbnz	x0, 11f90 <mpfr_div@@Base+0x1b74>
   11b5c:	b	11bb4 <mpfr_div@@Base+0x1798>
   11b60:	ldr	x8, [x25]
   11b64:	lsr	x8, x8, #63
   11b68:	ldur	x22, [x29, #-120]
   11b6c:	ldur	x23, [x29, #-136]
   11b70:	ldur	x11, [x29, #-104]
   11b74:	cbnz	x8, 10f2c <mpfr_div@@Base+0xb10>
   11b78:	b	1106c <mpfr_div@@Base+0xc50>
   11b7c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   11b80:	str	x8, [x22, #16]
   11b84:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   11b88:	ldr	x1, [x0, #2656]
   11b8c:	add	x0, x0, #0xa60
   11b90:	blr	x1
   11b94:	mrs	x8, tpidr_el0
   11b98:	ldr	w9, [x8, x0]
   11b9c:	mov	w21, wzr
   11ba0:	orr	w9, w9, #0x20
   11ba4:	b	1104c <mpfr_div@@Base+0xc30>
   11ba8:	ldr	x8, [x21]
   11bac:	eor	x8, x8, x23
   11bb0:	str	x8, [x21]
   11bb4:	ldur	x9, [x29, #-184]
   11bb8:	mov	x8, xzr
   11bbc:	add	x10, x19, x26, lsl #3
   11bc0:	add	x21, x19, x9, lsl #3
   11bc4:	add	x9, x27, x25, lsl #3
   11bc8:	sub	x9, x9, #0x8
   11bcc:	add	x11, x25, x8
   11bd0:	cmp	x11, #0x1
   11bd4:	b.lt	11c00 <mpfr_div@@Base+0x17e4>  // b.tstop
   11bd8:	ldr	x11, [x10, x8, lsl #3]
   11bdc:	ldr	x12, [x9, x8, lsl #3]
   11be0:	sub	x8, x8, #0x1
   11be4:	cmp	x11, x12
   11be8:	b.eq	11bcc <mpfr_div@@Base+0x17b0>  // b.none
   11bec:	b.hi	11dfc <mpfr_div@@Base+0x19e0>  // b.pmore
   11bf0:	b	11e7c <mpfr_div@@Base+0x1a60>
   11bf4:	mov	w3, wzr
   11bf8:	ldur	w2, [x29, #-128]
   11bfc:	b	1100c <mpfr_div@@Base+0xbf0>
   11c00:	subs	x8, x28, x22
   11c04:	b.ge	11c28 <mpfr_div@@Base+0x180c>  // b.tcont
   11c08:	ldur	x8, [x29, #-216]
   11c0c:	add	x9, x8, #0x1
   11c10:	cmp	x9, #0x1
   11c14:	b.lt	120e8 <mpfr_div@@Base+0x1ccc>  // b.tstop
   11c18:	ldr	x9, [x19, x8, lsl #3]
   11c1c:	sub	x8, x8, #0x1
   11c20:	cbnz	x9, 11dfc <mpfr_div@@Base+0x19e0>
   11c24:	b	11c0c <mpfr_div@@Base+0x17f0>
   11c28:	ldur	x9, [x29, #-184]
   11c2c:	subs	x9, x9, x8
   11c30:	b.ge	11c9c <mpfr_div@@Base+0x1880>  // b.tcont
   11c34:	ldur	x9, [x29, #-184]
   11c38:	cmp	x9, #0x1
   11c3c:	sub	x9, x8, x9
   11c40:	b.lt	11d18 <mpfr_div@@Base+0x18fc>  // b.tstop
   11c44:	ldur	x8, [x29, #-176]
   11c48:	ldur	x10, [x29, #-72]
   11c4c:	ldur	x11, [x29, #-216]
   11c50:	sub	x8, x8, x22
   11c54:	add	x10, x10, x8, lsl #3
   11c58:	ldur	x8, [x29, #-112]
   11c5c:	add	x12, x11, #0x1
   11c60:	cbz	w8, 11c70 <mpfr_div@@Base+0x1854>
   11c64:	ldp	x13, x8, [x10]
   11c68:	extr	x8, x8, x13, #1
   11c6c:	b	11c74 <mpfr_div@@Base+0x1858>
   11c70:	ldr	x8, [x10]
   11c74:	ldr	x13, [x19, x11, lsl #3]
   11c78:	cmp	x13, x8
   11c7c:	csetm	w8, cc  // cc = lo, ul, last
   11c80:	csinc	w8, w8, wzr, ls  // ls = plast
   11c84:	cmp	x12, #0x1
   11c88:	b.le	11d1c <mpfr_div@@Base+0x1900>
   11c8c:	sub	x11, x11, #0x1
   11c90:	sub	x10, x10, #0x8
   11c94:	cbz	w8, 11c58 <mpfr_div@@Base+0x183c>
   11c98:	b	11d1c <mpfr_div@@Base+0x1900>
   11c9c:	cmp	x8, #0x1
   11ca0:	b.lt	11d94 <mpfr_div@@Base+0x1978>  // b.tstop
   11ca4:	ldur	x8, [x29, #-176]
   11ca8:	sub	x10, x8, x22
   11cac:	lsl	x8, x26, #3
   11cb0:	sub	x8, x8, x25, lsl #3
   11cb4:	add	x11, x19, x8
   11cb8:	ldur	x8, [x29, #-112]
   11cbc:	add	x12, x10, #0x1
   11cc0:	cbz	w8, 11cd8 <mpfr_div@@Base+0x18bc>
   11cc4:	ldur	x8, [x29, #-72]
   11cc8:	add	x8, x8, x10, lsl #3
   11ccc:	ldp	x8, x13, [x8]
   11cd0:	extr	x8, x13, x8, #1
   11cd4:	b	11ce0 <mpfr_div@@Base+0x18c4>
   11cd8:	ldur	x8, [x29, #-72]
   11cdc:	ldr	x8, [x8, x10, lsl #3]
   11ce0:	ldr	x13, [x11], #-8
   11ce4:	cmp	x13, x8
   11ce8:	csetm	w8, cc  // cc = lo, ul, last
   11cec:	csinc	w8, w8, wzr, ls  // ls = plast
   11cf0:	cmp	x12, #0x2
   11cf4:	b.lt	11d98 <mpfr_div@@Base+0x197c>  // b.tstop
   11cf8:	sub	x10, x10, #0x1
   11cfc:	cbz	w8, 11cb8 <mpfr_div@@Base+0x189c>
   11d00:	b	11d98 <mpfr_div@@Base+0x197c>
   11d04:	stur	xzr, [x29, #-160]
   11d08:	b	10dd4 <mpfr_div@@Base+0x9b8>
   11d0c:	ldp	x24, x16, [x29, #-80]
   11d10:	mov	w13, #0x1                   	// #1
   11d14:	b	10cbc <mpfr_div@@Base+0x8a0>
   11d18:	mov	w8, wzr
   11d1c:	cmp	w8, #0x0
   11d20:	cset	w10, eq  // eq = none
   11d24:	cmp	x9, #0x1
   11d28:	b.lt	11d78 <mpfr_div@@Base+0x195c>  // b.tstop
   11d2c:	cbnz	w8, 11d78 <mpfr_div@@Base+0x195c>
   11d30:	ldur	x8, [x29, #-112]
   11d34:	cbz	w8, 11d4c <mpfr_div@@Base+0x1930>
   11d38:	ldur	x8, [x29, #-72]
   11d3c:	add	x8, x8, x9, lsl #3
   11d40:	ldp	x8, x10, [x8, #-8]
   11d44:	extr	x8, x10, x8, #1
   11d48:	b	11d58 <mpfr_div@@Base+0x193c>
   11d4c:	ldur	x8, [x29, #-72]
   11d50:	add	x8, x8, x9, lsl #3
   11d54:	ldur	x8, [x8, #-8]
   11d58:	cmp	x8, #0x0
   11d5c:	cset	w10, eq  // eq = none
   11d60:	cmp	x9, #0x2
   11d64:	b.lt	11d70 <mpfr_div@@Base+0x1954>  // b.tstop
   11d68:	sub	x9, x9, #0x1
   11d6c:	tbnz	w10, #0, 11d30 <mpfr_div@@Base+0x1914>
   11d70:	cmp	x8, #0x0
   11d74:	csetm	w8, ne  // ne = any
   11d78:	ldur	x9, [x29, #-112]
   11d7c:	cbz	w9, 11df4 <mpfr_div@@Base+0x19d8>
   11d80:	cbz	w10, 11df4 <mpfr_div@@Base+0x19d8>
   11d84:	ldur	x8, [x29, #-72]
   11d88:	ldr	x8, [x8]
   11d8c:	sbfx	x8, x8, #0, #1
   11d90:	b	11e78 <mpfr_div@@Base+0x1a5c>
   11d94:	mov	w8, wzr
   11d98:	ldur	x10, [x29, #-112]
   11d9c:	cbz	w10, 11db0 <mpfr_div@@Base+0x1994>
   11da0:	ldur	x10, [x29, #-72]
   11da4:	ldr	x10, [x10]
   11da8:	lsl	x10, x10, #63
   11dac:	b	11db4 <mpfr_div@@Base+0x1998>
   11db0:	mov	x10, xzr
   11db4:	cmp	x9, #0x1
   11db8:	b.lt	11dec <mpfr_div@@Base+0x19d0>  // b.tstop
   11dbc:	cbnz	w8, 11dec <mpfr_div@@Base+0x19d0>
   11dc0:	sub	x11, x19, #0x8
   11dc4:	ldr	x8, [x11, x9, lsl #3]
   11dc8:	cmp	x8, x10
   11dcc:	csetm	w8, cc  // cc = lo, ul, last
   11dd0:	csinc	w8, w8, wzr, ls  // ls = plast
   11dd4:	cmp	x9, #0x2
   11dd8:	b.lt	11df4 <mpfr_div@@Base+0x19d8>  // b.tstop
   11ddc:	mov	x10, xzr
   11de0:	sub	x9, x9, #0x1
   11de4:	cbz	w8, 11dc4 <mpfr_div@@Base+0x19a8>
   11de8:	b	11df4 <mpfr_div@@Base+0x19d8>
   11dec:	cbnz	w8, 11df4 <mpfr_div@@Base+0x19d8>
   11df0:	cbnz	x10, 11e7c <mpfr_div@@Base+0x1a60>
   11df4:	cmp	w8, #0x0
   11df8:	b.le	11e78 <mpfr_div@@Base+0x1a5c>
   11dfc:	ldur	x8, [x29, #-160]
   11e00:	cbz	x8, 11e64 <mpfr_div@@Base+0x1a48>
   11e04:	ldur	x8, [x29, #-200]
   11e08:	ldur	x10, [x29, #-184]
   11e0c:	mov	x9, xzr
   11e10:	subs	x8, x8, x10
   11e14:	ldur	x10, [x29, #-112]
   11e18:	csel	x8, x8, xzr, gt
   11e1c:	cbz	w10, 11e2c <mpfr_div@@Base+0x1a10>
   11e20:	ldur	x9, [x29, #-72]
   11e24:	ldr	x9, [x9, x8, lsl #3]
   11e28:	and	x9, x9, #0x1
   11e2c:	ldur	x10, [x29, #-200]
   11e30:	ldur	x11, [x29, #-184]
   11e34:	cmp	x10, x11
   11e38:	b.ge	11e6c <mpfr_div@@Base+0x1a50>  // b.tcont
   11e3c:	ldur	x8, [x29, #-200]
   11e40:	neg	x8, x8
   11e44:	cbz	x9, 11e84 <mpfr_div@@Base+0x1a68>
   11e48:	add	x9, x21, x8, lsl #3
   11e4c:	ldur	x10, [x9, #-8]
   11e50:	eor	x11, x10, #0x8000000000000000
   11e54:	mvn	x10, x10
   11e58:	lsr	x3, x10, #63
   11e5c:	stur	x11, [x9, #-8]
   11e60:	b	11e88 <mpfr_div@@Base+0x1a6c>
   11e64:	mov	x22, xzr
   11e68:	b	11f48 <mpfr_div@@Base+0x1b2c>
   11e6c:	cbz	x9, 11ea4 <mpfr_div@@Base+0x1a88>
   11e70:	mov	w22, #0x1                   	// #1
   11e74:	b	11eec <mpfr_div@@Base+0x1ad0>
   11e78:	cbz	w8, 120e8 <mpfr_div@@Base+0x1ccc>
   11e7c:	mov	w24, #0x1                   	// #1
   11e80:	b	120e8 <mpfr_div@@Base+0x1ccc>
   11e84:	mov	x3, xzr
   11e88:	ldur	x1, [x29, #-72]
   11e8c:	ldur	x2, [x29, #-200]
   11e90:	add	x0, x21, x8, lsl #3
   11e94:	ldur	x4, [x29, #-112]
   11e98:	bl	121d0 <mpfr_div@@Base+0x1db4>
   11e9c:	mov	x22, xzr
   11ea0:	b	11f08 <mpfr_div@@Base+0x1aec>
   11ea4:	ldur	x11, [x29, #-176]
   11ea8:	ldur	x10, [x29, #-216]
   11eac:	ldur	x9, [x29, #-72]
   11eb0:	sub	x11, x11, x22
   11eb4:	add	x10, x10, #0x1
   11eb8:	add	x12, x11, #0x1
   11ebc:	cmp	x10, x12
   11ec0:	csinc	x10, x10, x11, gt
   11ec4:	add	x10, x25, x10
   11ec8:	sub	x9, x9, #0x10
   11ecc:	sub	x10, x10, x26
   11ed0:	mov	w22, #0x1                   	// #1
   11ed4:	sub	x11, x10, #0x1
   11ed8:	cmp	x11, #0x1
   11edc:	b.lt	121a0 <mpfr_div@@Base+0x1d84>  // b.tstop
   11ee0:	ldr	x12, [x9, x10, lsl #3]
   11ee4:	mov	x10, x11
   11ee8:	cbz	x12, 11ed4 <mpfr_div@@Base+0x1ab8>
   11eec:	ldur	x9, [x29, #-72]
   11ef0:	ldur	x2, [x29, #-184]
   11ef4:	mov	x0, x19
   11ef8:	mov	x3, x22
   11efc:	add	x1, x9, x8, lsl #3
   11f00:	ldur	x4, [x29, #-112]
   11f04:	bl	121d0 <mpfr_div@@Base+0x1db4>
   11f08:	ldr	x8, [x21]
   11f0c:	subs	x8, x8, x0
   11f10:	str	x8, [x21]
   11f14:	b.cs	11f48 <mpfr_div@@Base+0x1b2c>  // b.hs, b.nlast
   11f18:	lsl	x8, x26, #3
   11f1c:	sub	x8, x8, x25, lsl #3
   11f20:	add	x8, x19, x8
   11f24:	mov	w9, #0x2                   	// #2
   11f28:	sub	x10, x9, #0x1
   11f2c:	cmp	x10, x25
   11f30:	b.ge	11f48 <mpfr_div@@Base+0x1b2c>  // b.tcont
   11f34:	ldr	x10, [x8, x9, lsl #3]
   11f38:	sub	x11, x10, #0x1
   11f3c:	str	x11, [x8, x9, lsl #3]
   11f40:	add	x9, x9, #0x1
   11f44:	cbz	x10, 11f28 <mpfr_div@@Base+0x1b0c>
   11f48:	mov	x0, x21
   11f4c:	mov	x1, x21
   11f50:	mov	x2, x27
   11f54:	mov	x3, x25
   11f58:	bl	bf10 <__gmpn_sub_n@plt>
   11f5c:	ldur	x10, [x29, #-64]
   11f60:	add	x8, x26, #0x1
   11f64:	cmp	x8, #0x1
   11f68:	b.lt	11f8c <mpfr_div@@Base+0x1b70>  // b.tstop
   11f6c:	ldr	x8, [x19, x26, lsl #3]
   11f70:	ldr	x9, [x10, x26, lsl #3]
   11f74:	sub	x26, x26, #0x1
   11f78:	cmp	x8, x9
   11f7c:	b.eq	11f60 <mpfr_div@@Base+0x1b44>  // b.none
   11f80:	b.hi	11f90 <mpfr_div@@Base+0x1b74>  // b.pmore
   11f84:	mov	w19, #0xffffffff            	// #-1
   11f88:	b	120d8 <mpfr_div@@Base+0x1cbc>
   11f8c:	cbz	x22, 120d4 <mpfr_div@@Base+0x1cb8>
   11f90:	ldur	w8, [x29, #-84]
   11f94:	cbz	w8, 11fac <mpfr_div@@Base+0x1b90>
   11f98:	ldur	w8, [x29, #-152]
   11f9c:	cbz	w8, 12018 <mpfr_div@@Base+0x1bfc>
   11fa0:	ldur	x8, [x29, #-104]
   11fa4:	cbnz	w8, 12010 <mpfr_div@@Base+0x1bf4>
   11fa8:	b	11fbc <mpfr_div@@Base+0x1ba0>
   11fac:	ldur	x8, [x29, #-104]
   11fb0:	cmp	w8, #0x1
   11fb4:	b.ne	1202c <mpfr_div@@Base+0x1c10>  // b.any
   11fb8:	cbnz	x20, 12024 <mpfr_div@@Base+0x1c08>
   11fbc:	ldur	x10, [x29, #-80]
   11fc0:	ldr	x8, [x10]
   11fc4:	sub	x9, x8, #0x1
   11fc8:	str	x9, [x10]
   11fcc:	cbnz	x8, 11ffc <mpfr_div@@Base+0x1be0>
   11fd0:	ldur	x12, [x29, #-80]
   11fd4:	mov	w8, #0x1                   	// #1
   11fd8:	mov	w9, #0x1                   	// #1
   11fdc:	ldur	x10, [x29, #-168]
   11fe0:	cmp	x9, x10
   11fe4:	b.gt	12000 <mpfr_div@@Base+0x1be4>
   11fe8:	ldr	x10, [x12, x9, lsl #3]
   11fec:	sub	x11, x10, #0x1
   11ff0:	str	x11, [x12, x9, lsl #3]
   11ff4:	add	x9, x9, #0x1
   11ff8:	cbz	x10, 11fdc <mpfr_div@@Base+0x1bc0>
   11ffc:	mov	x8, xzr
   12000:	ldur	x9, [x29, #-208]
   12004:	stur	xzr, [x29, #-104]
   12008:	sub	x9, x9, x8
   1200c:	stur	x9, [x29, #-208]
   12010:	mov	w8, #0xffffffff            	// #-1
   12014:	b	12040 <mpfr_div@@Base+0x1c24>
   12018:	ldur	x9, [x29, #-104]
   1201c:	mov	w8, #0x1                   	// #1
   12020:	cbz	w9, 1203c <mpfr_div@@Base+0x1c20>
   12024:	mov	w19, #0x1                   	// #1
   12028:	b	120a0 <mpfr_div@@Base+0x1c84>
   1202c:	cmp	x20, #0x0
   12030:	mov	w8, #0x1                   	// #1
   12034:	cneg	w19, w8, ne  // ne = any
   12038:	b	120a0 <mpfr_div@@Base+0x1c84>
   1203c:	stur	xzr, [x29, #-104]
   12040:	ldur	x11, [x29, #-80]
   12044:	ldur	x12, [x29, #-104]
   12048:	mov	w10, #0x1                   	// #1
   1204c:	ldr	x9, [x11]
   12050:	lsl	x10, x10, x12
   12054:	subs	x9, x9, x10
   12058:	str	x9, [x11]
   1205c:	b.cs	1208c <mpfr_div@@Base+0x1c70>  // b.hs, b.nlast
   12060:	ldur	x13, [x29, #-80]
   12064:	ldur	x14, [x29, #-168]
   12068:	mov	w9, #0x1                   	// #1
   1206c:	mov	w10, #0x1                   	// #1
   12070:	cmp	x10, x14
   12074:	b.gt	12090 <mpfr_div@@Base+0x1c74>
   12078:	ldr	x11, [x13, x10, lsl #3]
   1207c:	sub	x12, x11, #0x1
   12080:	str	x12, [x13, x10, lsl #3]
   12084:	add	x10, x10, #0x1
   12088:	cbz	x11, 12070 <mpfr_div@@Base+0x1c54>
   1208c:	mov	x9, xzr
   12090:	ldur	x10, [x29, #-208]
   12094:	mov	w19, w8
   12098:	sub	x10, x10, x9
   1209c:	stur	x10, [x29, #-208]
   120a0:	ldur	x8, [x29, #-208]
   120a4:	cbz	x8, 12100 <mpfr_div@@Base+0x1ce4>
   120a8:	ldp	x24, x23, [x29, #-144]
   120ac:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   120b0:	ldur	x10, [x29, #-168]
   120b4:	ldur	x22, [x29, #-120]
   120b8:	cmp	x24, x8
   120bc:	ldur	x8, [x29, #-80]
   120c0:	ldur	w3, [x29, #-84]
   120c4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   120c8:	cinc	x24, x24, ne  // ne = any
   120cc:	str	x9, [x8, x10, lsl #3]
   120d0:	b	11074 <mpfr_div@@Base+0xc58>
   120d4:	mov	w19, wzr
   120d8:	cmp	x24, #0x1
   120dc:	b.ne	120fc <mpfr_div@@Base+0x1ce0>  // b.any
   120e0:	cmp	w19, #0x0
   120e4:	cset	w24, ne  // ne = any
   120e8:	ldur	x22, [x29, #-120]
   120ec:	ldur	w3, [x29, #-84]
   120f0:	ldur	x23, [x29, #-136]
   120f4:	ldur	x11, [x29, #-104]
   120f8:	b	10f08 <mpfr_div@@Base+0xaec>
   120fc:	cbz	x20, 1210c <mpfr_div@@Base+0x1cf0>
   12100:	ldur	x22, [x29, #-120]
   12104:	ldur	w3, [x29, #-84]
   12108:	b	11954 <mpfr_div@@Base+0x1538>
   1210c:	ldur	w12, [x29, #-84]
   12110:	ldur	w8, [x29, #-188]
   12114:	cmp	w8, w12
   12118:	ldur	x8, [x29, #-104]
   1211c:	cset	w9, ne  // ne = any
   12120:	cmp	w12, #0x1
   12124:	cset	w10, ne  // ne = any
   12128:	orr	w8, w19, w8
   1212c:	cmp	w8, #0x0
   12130:	cset	w11, ne  // ne = any
   12134:	csetm	w8, ne  // ne = any
   12138:	mov	w19, #0x1                   	// #1
   1213c:	cbz	w12, 120a0 <mpfr_div@@Base+0x1c84>
   12140:	and	w9, w10, w9
   12144:	and	w9, w11, w9
   12148:	tbz	w9, #0, 12040 <mpfr_div@@Base+0x1c24>
   1214c:	b	120a0 <mpfr_div@@Base+0x1c84>
   12150:	sub	x0, x29, #0x18
   12154:	mov	x1, x24
   12158:	mov	w22, w3
   1215c:	bl	be70 <mpfr_tmp_allocate@plt>
   12160:	ldur	x16, [x29, #-72]
   12164:	mov	w3, w22
   12168:	mov	x22, x0
   1216c:	b	114d8 <mpfr_div@@Base+0x10bc>
   12170:	sub	x0, x29, #0x18
   12174:	mov	w19, w3
   12178:	bl	be70 <mpfr_tmp_allocate@plt>
   1217c:	ldur	x16, [x29, #-72]
   12180:	mov	w3, w19
   12184:	mov	x21, x0
   12188:	b	10d40 <mpfr_div@@Base+0x924>
   1218c:	sub	x0, x29, #0x18
   12190:	mov	x1, x25
   12194:	bl	be70 <mpfr_tmp_allocate@plt>
   12198:	mov	x25, x0
   1219c:	b	11830 <mpfr_div@@Base+0x1414>
   121a0:	mov	x22, xzr
   121a4:	b	11eec <mpfr_div@@Base+0x1ad0>
   121a8:	sub	x0, x29, #0x18
   121ac:	mov	x1, x25
   121b0:	bl	be70 <mpfr_tmp_allocate@plt>
   121b4:	mov	x27, x0
   121b8:	b	117b4 <mpfr_div@@Base+0x1398>
   121bc:	sub	x0, x29, #0x18
   121c0:	bl	be70 <mpfr_tmp_allocate@plt>
   121c4:	ldr	x8, [x21]
   121c8:	mov	x19, x0
   121cc:	b	11650 <mpfr_div@@Base+0x1234>
   121d0:	cbz	x2, 12228 <mpfr_div@@Base+0x1e0c>
   121d4:	cbz	w4, 121e4 <mpfr_div@@Base+0x1dc8>
   121d8:	ldp	x9, x8, [x1]
   121dc:	extr	x8, x8, x9, #1
   121e0:	b	121e8 <mpfr_div@@Base+0x1dcc>
   121e4:	ldr	x8, [x1]
   121e8:	ldr	x9, [x0]
   121ec:	sub	x2, x2, #0x1
   121f0:	subs	x10, x9, x8
   121f4:	cmp	x9, x8
   121f8:	sub	x8, x10, x3
   121fc:	b.cs	12208 <mpfr_div@@Base+0x1dec>  // b.hs, b.nlast
   12200:	mov	w3, #0x1                   	// #1
   12204:	b	1221c <mpfr_div@@Base+0x1e00>
   12208:	cmp	x3, #0x0
   1220c:	cset	w9, ne  // ne = any
   12210:	cmn	x8, #0x1
   12214:	cset	w10, eq  // eq = none
   12218:	and	w3, w9, w10
   1221c:	str	x8, [x0], #8
   12220:	add	x1, x1, #0x8
   12224:	cbnz	x2, 121d4 <mpfr_div@@Base+0x1db8>
   12228:	mov	x0, x3
   1222c:	ret

0000000000012230 <mpfr_div_ui@@Base>:
   12230:	stp	x29, x30, [sp, #-96]!
   12234:	stp	x28, x27, [sp, #16]
   12238:	stp	x26, x25, [sp, #32]
   1223c:	stp	x24, x23, [sp, #48]
   12240:	stp	x22, x21, [sp, #64]
   12244:	stp	x20, x19, [sp, #80]
   12248:	mov	x29, sp
   1224c:	sub	sp, sp, #0x20
   12250:	ldr	x11, [x1, #16]
   12254:	mov	x8, #0x2                   	// #2
   12258:	movk	x8, #0x8000, lsl #48
   1225c:	add	x9, x8, #0x2
   12260:	mov	x22, x2
   12264:	cmp	x11, x9
   12268:	mov	x19, x0
   1226c:	b.lt	12670 <mpfr_div_ui@@Base+0x440>  // b.tstop
   12270:	mov	w10, w3
   12274:	subs	x8, x22, #0x1
   12278:	b.ls	1269c <mpfr_div_ui@@Base+0x46c>  // b.plast
   1227c:	tst	x22, x8
   12280:	b.eq	126b4 <mpfr_div_ui@@Base+0x484>  // b.none
   12284:	ldr	w8, [x1, #8]
   12288:	stur	w10, [x29, #-28]
   1228c:	stur	x11, [x29, #-24]
   12290:	str	w8, [x19, #8]
   12294:	stur	xzr, [x29, #-8]
   12298:	ldr	x8, [x1]
   1229c:	ldr	x9, [x19]
   122a0:	ldr	x23, [x1, #24]
   122a4:	ldr	x21, [x19, #24]
   122a8:	sub	x10, x8, #0x1
   122ac:	add	x8, x8, #0x3e
   122b0:	sub	x11, x9, #0x1
   122b4:	cmp	x10, #0x0
   122b8:	add	x9, x9, #0x3e
   122bc:	csel	x8, x8, x10, lt  // lt = tstop
   122c0:	cmp	x11, #0x0
   122c4:	csel	x9, x9, x11, lt  // lt = tstop
   122c8:	asr	x20, x9, #6
   122cc:	asr	x8, x8, #6
   122d0:	add	x24, x20, #0x2
   122d4:	add	x28, x8, #0x1
   122d8:	lsl	x1, x24, #3
   122dc:	add	x27, x20, #0x1
   122e0:	cmp	x1, #0x4, lsl #12
   122e4:	sub	x25, x24, x28
   122e8:	b.hi	126d0 <mpfr_div_ui@@Base+0x4a0>  // b.pmore
   122ec:	add	x9, x1, #0xf
   122f0:	mov	x8, sp
   122f4:	and	x9, x9, #0xfffffffffffffff0
   122f8:	sub	x26, x8, x9
   122fc:	mov	sp, x26
   12300:	stur	x19, [x29, #-16]
   12304:	tbnz	x25, #63, 12330 <mpfr_div_ui@@Base+0x100>
   12308:	mov	x0, x26
   1230c:	mov	x1, x25
   12310:	mov	x2, x23
   12314:	mov	x3, x28
   12318:	mov	x4, x22
   1231c:	bl	c810 <__gmpn_divrem_1@plt>
   12320:	mov	x24, x0
   12324:	mov	w19, wzr
   12328:	mov	x11, xzr
   1232c:	b	12374 <mpfr_div_ui@@Base+0x144>
   12330:	sub	x2, x23, x25, lsl #3
   12334:	mov	x0, x26
   12338:	mov	x1, xzr
   1233c:	mov	x3, x24
   12340:	mov	x4, x22
   12344:	neg	x19, x25
   12348:	bl	c810 <__gmpn_divrem_1@plt>
   1234c:	mov	x24, x0
   12350:	mov	x8, xzr
   12354:	ldr	x9, [x23, x8, lsl #3]
   12358:	cbnz	x9, 12368 <mpfr_div_ui@@Base+0x138>
   1235c:	add	x8, x8, #0x1
   12360:	cmp	x8, x19
   12364:	b.lt	12354 <mpfr_div_ui@@Base+0x124>  // b.tstop
   12368:	cmp	x9, #0x0
   1236c:	cset	w11, ne  // ne = any
   12370:	mov	w19, #0x1                   	// #1
   12374:	ldur	x8, [x29, #-16]
   12378:	ldr	w9, [x8]
   1237c:	ldr	x8, [x26, x27, lsl #3]
   12380:	neg	w9, w9
   12384:	and	w28, w9, #0x3f
   12388:	cbz	x8, 123ec <mpfr_div_ui@@Base+0x1bc>
   1238c:	mov	x1, x26
   12390:	ldr	x9, [x1], #8
   12394:	clz	x22, x8
   12398:	mov	x0, x21
   1239c:	mov	x2, x27
   123a0:	mov	w3, w22
   123a4:	mov	x23, x11
   123a8:	lsl	x19, x9, x22
   123ac:	bl	bd70 <__gmpn_lshift@plt>
   123b0:	ldr	x8, [x26]
   123b4:	ldr	x9, [x21]
   123b8:	neg	x10, x22
   123bc:	lsr	x8, x8, x10
   123c0:	orr	x8, x9, x8
   123c4:	str	x8, [x21]
   123c8:	cbz	w28, 12440 <mpfr_div_ui@@Base+0x210>
   123cc:	sub	w9, w28, #0x1
   123d0:	mov	w10, #0x1                   	// #1
   123d4:	lsl	x9, x10, x9
   123d8:	and	x25, x8, x9
   123dc:	sub	x9, x9, #0x1
   123e0:	and	x8, x8, x9
   123e4:	orr	x8, x8, x19
   123e8:	b	12448 <mpfr_div_ui@@Base+0x218>
   123ec:	cmp	x21, x26
   123f0:	b.eq	1240c <mpfr_div_ui@@Base+0x1dc>  // b.none
   123f4:	lsl	x2, x27, #3
   123f8:	mov	x0, x21
   123fc:	mov	x1, x26
   12400:	mov	x27, x11
   12404:	bl	bad0 <memcpy@plt>
   12408:	mov	x11, x27
   1240c:	ldur	x8, [x29, #-24]
   12410:	sub	x27, x8, #0x40
   12414:	cbz	w28, 12460 <mpfr_div_ui@@Base+0x230>
   12418:	ldr	x8, [x26]
   1241c:	sub	w9, w28, #0x1
   12420:	mov	w10, #0x1                   	// #1
   12424:	lsl	x9, x10, x9
   12428:	sub	x10, x9, #0x1
   1242c:	and	x25, x8, x9
   12430:	and	x8, x8, x10
   12434:	orr	x9, x11, x24
   12438:	orr	x19, x9, x8
   1243c:	b	124a8 <mpfr_div_ui@@Base+0x278>
   12440:	and	x25, x19, #0x8000000000000000
   12444:	and	x8, x19, #0x7fffffffffffffff
   12448:	orr	x9, x23, x24
   1244c:	orr	x19, x9, x8
   12450:	ldur	x8, [x29, #-24]
   12454:	ldur	w26, [x29, #-28]
   12458:	sub	x27, x8, x22
   1245c:	b	124ac <mpfr_div_ui@@Base+0x27c>
   12460:	sub	x8, x22, x24
   12464:	cmp	x24, x8
   12468:	b.cs	12498 <mpfr_div_ui@@Base+0x268>  // b.hs, b.nlast
   1246c:	cmp	x24, x22, lsr #1
   12470:	cset	w8, ne  // ne = any
   12474:	eor	w9, w19, #0x1
   12478:	orr	w8, w9, w8
   1247c:	tbnz	w8, #0, 1248c <mpfr_div_ui@@Base+0x25c>
   12480:	mvn	x8, x25
   12484:	ldr	x9, [x23, x8, lsl #3]
   12488:	tbnz	x9, #63, 12644 <mpfr_div_ui@@Base+0x414>
   1248c:	mov	x25, xzr
   12490:	orr	x19, x11, x24
   12494:	b	124a8 <mpfr_div_ui@@Base+0x278>
   12498:	lsl	x8, x24, #1
   1249c:	sub	x8, x8, x22
   124a0:	orr	x19, x11, x8
   124a4:	mov	w25, #0x1                   	// #1
   124a8:	ldur	w26, [x29, #-28]
   124ac:	ldr	x8, [x21]
   124b0:	mov	w9, #0x1                   	// #1
   124b4:	lsl	x22, x9, x28
   124b8:	neg	x9, x22
   124bc:	and	x8, x8, x9
   124c0:	str	x8, [x21]
   124c4:	ldur	x0, [x29, #-8]
   124c8:	cbnz	x0, 126e0 <mpfr_div_ui@@Base+0x4b0>
   124cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   124d0:	ldr	x1, [x0, #2592]
   124d4:	add	x0, x0, #0xa20
   124d8:	blr	x1
   124dc:	mrs	x9, tpidr_el0
   124e0:	ldr	x8, [x9, x0]
   124e4:	sub	x8, x8, #0x1
   124e8:	cmp	x27, x8
   124ec:	b.lt	126e8 <mpfr_div_ui@@Base+0x4b8>  // b.tstop
   124f0:	orr	x8, x19, x25
   124f4:	cbz	x8, 12700 <mpfr_div_ui@@Base+0x4d0>
   124f8:	sub	w8, w26, #0x1
   124fc:	cmp	w8, #0x4
   12500:	b.hi	12530 <mpfr_div_ui@@Base+0x300>  // b.pmore
   12504:	adrp	x10, 59000 <mpfr_free_pool@@Base+0x387c>
   12508:	add	x10, x10, #0xb8
   1250c:	adr	x11, 12520 <mpfr_div_ui@@Base+0x2f0>
   12510:	ldrb	w12, [x10, x8]
   12514:	add	x11, x11, x12, lsl #2
   12518:	ldur	x12, [x29, #-16]
   1251c:	br	x11
   12520:	ldr	w8, [x12, #8]
   12524:	cmp	w8, #0x1
   12528:	b.ge	12558 <mpfr_div_ui@@Base+0x328>  // b.tcont
   1252c:	b	1254c <mpfr_div_ui@@Base+0x31c>
   12530:	cbz	x25, 125a0 <mpfr_div_ui@@Base+0x370>
   12534:	cbz	x19, 1262c <mpfr_div_ui@@Base+0x3fc>
   12538:	ldur	x12, [x29, #-16]
   1253c:	ldr	w8, [x12, #8]
   12540:	b	1255c <mpfr_div_ui@@Base+0x32c>
   12544:	ldr	w8, [x12, #8]
   12548:	tbnz	w8, #31, 12558 <mpfr_div_ui@@Base+0x328>
   1254c:	mov	w26, #0x1                   	// #1
   12550:	b	125a4 <mpfr_div_ui@@Base+0x374>
   12554:	ldr	w8, [x12, #8]
   12558:	mov	w26, #0x4                   	// #4
   1255c:	ldr	x10, [x21]
   12560:	adds	x10, x10, x22
   12564:	str	x10, [x21]
   12568:	b.cc	125ac <mpfr_div_ui@@Base+0x37c>  // b.lo, b.ul, b.last
   1256c:	mov	w10, #0x1                   	// #1
   12570:	cmp	x10, x20
   12574:	b.gt	12590 <mpfr_div_ui@@Base+0x360>
   12578:	ldr	x11, [x21, x10, lsl #3]
   1257c:	adds	x11, x11, #0x1
   12580:	str	x11, [x21, x10, lsl #3]
   12584:	add	x10, x10, #0x1
   12588:	b.cs	12570 <mpfr_div_ui@@Base+0x340>  // b.hs, b.nlast
   1258c:	b	125ac <mpfr_div_ui@@Base+0x37c>
   12590:	add	x27, x27, #0x1
   12594:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   12598:	str	x10, [x21, x20, lsl #3]
   1259c:	b	125ac <mpfr_div_ui@@Base+0x37c>
   125a0:	ldur	x12, [x29, #-16]
   125a4:	ldr	w8, [x12, #8]
   125a8:	neg	w8, w8
   125ac:	str	x27, [x12, #16]
   125b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   125b4:	ldr	x1, [x0, #2592]
   125b8:	add	x0, x0, #0xa20
   125bc:	blr	x1
   125c0:	ldr	x10, [x9, x0]
   125c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   125c8:	ldr	x1, [x0, #2624]
   125cc:	add	x0, x0, #0xa40
   125d0:	blr	x1
   125d4:	cmp	x27, x10
   125d8:	b.lt	12708 <mpfr_div_ui@@Base+0x4d8>  // b.tstop
   125dc:	ldr	x10, [x9, x0]
   125e0:	cmp	x27, x10
   125e4:	b.gt	12708 <mpfr_div_ui@@Base+0x4d8>
   125e8:	cbz	w8, 12608 <mpfr_div_ui@@Base+0x3d8>
   125ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   125f0:	ldr	x1, [x0, #2656]
   125f4:	add	x0, x0, #0xa60
   125f8:	blr	x1
   125fc:	ldr	w10, [x9, x0]
   12600:	orr	w10, w10, #0x8
   12604:	str	w10, [x9, x0]
   12608:	mov	w0, w8
   1260c:	mov	sp, x29
   12610:	ldp	x20, x19, [sp, #80]
   12614:	ldp	x22, x21, [sp, #64]
   12618:	ldp	x24, x23, [sp, #48]
   1261c:	ldp	x26, x25, [sp, #32]
   12620:	ldp	x28, x27, [sp, #16]
   12624:	ldp	x29, x30, [sp], #96
   12628:	ret
   1262c:	ldur	x12, [x29, #-16]
   12630:	ldr	x10, [x21]
   12634:	ldr	w8, [x12, #8]
   12638:	and	x10, x10, x22
   1263c:	cbnz	x10, 1255c <mpfr_div_ui@@Base+0x32c>
   12640:	b	125a8 <mpfr_div_ui@@Base+0x378>
   12644:	lsl	x19, x9, #1
   12648:	lsr	x25, x9, #63
   1264c:	cbnz	x19, 124a8 <mpfr_div_ui@@Base+0x278>
   12650:	mov	w19, #0x1                   	// #1
   12654:	cbz	x8, 12668 <mpfr_div_ui@@Base+0x438>
   12658:	ldr	x9, [x23], #8
   1265c:	sub	x8, x8, #0x1
   12660:	cbz	x9, 12654 <mpfr_div_ui@@Base+0x424>
   12664:	b	124a8 <mpfr_div_ui@@Base+0x278>
   12668:	mov	x19, xzr
   1266c:	b	124a8 <mpfr_div_ui@@Base+0x278>
   12670:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   12674:	cmp	x11, x9
   12678:	b.eq	1277c <mpfr_div_ui@@Base+0x54c>  // b.none
   1267c:	mov	x9, #0x2                   	// #2
   12680:	movk	x9, #0x8000, lsl #48
   12684:	cmp	x11, x9
   12688:	b.eq	12720 <mpfr_div_ui@@Base+0x4f0>  // b.none
   1268c:	cbz	x22, 12720 <mpfr_div_ui@@Base+0x4f0>
   12690:	mov	w8, wzr
   12694:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   12698:	b	12780 <mpfr_div_ui@@Base+0x550>
   1269c:	cbz	x22, 12748 <mpfr_div_ui@@Base+0x518>
   126a0:	ldr	w3, [x1, #8]
   126a4:	mov	x0, x19
   126a8:	mov	w2, w10
   126ac:	bl	c6f0 <mpfr_set4@plt>
   126b0:	b	12718 <mpfr_div_ui@@Base+0x4e8>
   126b4:	clz	x8, x8
   126b8:	mov	w9, #0x40                  	// #64
   126bc:	sub	x2, x9, x8
   126c0:	mov	x0, x19
   126c4:	mov	w3, w10
   126c8:	bl	c470 <mpfr_div_2si@plt>
   126cc:	b	12718 <mpfr_div_ui@@Base+0x4e8>
   126d0:	sub	x0, x29, #0x8
   126d4:	bl	be70 <mpfr_tmp_allocate@plt>
   126d8:	mov	x26, x0
   126dc:	b	12300 <mpfr_div_ui@@Base+0xd0>
   126e0:	bl	c460 <mpfr_tmp_free@plt>
   126e4:	b	124cc <mpfr_div_ui@@Base+0x29c>
   126e8:	ldur	x0, [x29, #-16]
   126ec:	cmp	w26, #0x0
   126f0:	csinc	w1, w26, wzr, ne  // ne = any
   126f4:	ldr	w2, [x0, #8]
   126f8:	bl	c420 <mpfr_underflow@plt>
   126fc:	b	12718 <mpfr_div_ui@@Base+0x4e8>
   12700:	ldur	x12, [x29, #-16]
   12704:	b	125ac <mpfr_div_ui@@Base+0x37c>
   12708:	mov	x0, x12
   1270c:	mov	w1, w8
   12710:	mov	w2, w26
   12714:	bl	cb80 <mpfr_check_range@plt>
   12718:	mov	w8, w0
   1271c:	b	12608 <mpfr_div_ui@@Base+0x3d8>
   12720:	str	x8, [x19, #16]
   12724:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12728:	ldr	x1, [x0, #2656]
   1272c:	add	x0, x0, #0xa60
   12730:	blr	x1
   12734:	mrs	x9, tpidr_el0
   12738:	ldr	w10, [x9, x0]
   1273c:	mov	w8, wzr
   12740:	orr	w10, w10, #0x4
   12744:	b	12604 <mpfr_div_ui@@Base+0x3d4>
   12748:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1274c:	str	x8, [x19, #16]
   12750:	ldr	w8, [x1, #8]
   12754:	str	w8, [x19, #8]
   12758:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1275c:	ldr	x1, [x0, #2656]
   12760:	add	x0, x0, #0xa60
   12764:	blr	x1
   12768:	mrs	x9, tpidr_el0
   1276c:	ldr	w10, [x9, x0]
   12770:	mov	w8, wzr
   12774:	orr	w10, w10, #0x20
   12778:	b	12604 <mpfr_div_ui@@Base+0x3d4>
   1277c:	mov	w8, wzr
   12780:	str	x9, [x19, #16]
   12784:	ldr	w9, [x1, #8]
   12788:	str	w9, [x19, #8]
   1278c:	b	12608 <mpfr_div_ui@@Base+0x3d8>

0000000000012790 <mpfr_fdump@@Base>:
   12790:	sub	sp, sp, #0x80
   12794:	stp	x29, x30, [sp, #32]
   12798:	stp	x28, x27, [sp, #48]
   1279c:	stp	x26, x25, [sp, #64]
   127a0:	stp	x24, x23, [sp, #80]
   127a4:	stp	x22, x21, [sp, #96]
   127a8:	stp	x20, x19, [sp, #112]
   127ac:	ldr	w8, [x1, #8]
   127b0:	mov	x20, x1
   127b4:	mov	x19, x0
   127b8:	add	x29, sp, #0x20
   127bc:	tbz	w8, #31, 127cc <mpfr_fdump@@Base+0x3c>
   127c0:	mov	w0, #0x2d                  	// #45
   127c4:	mov	x1, x19
   127c8:	bl	be50 <fputc@plt>
   127cc:	ldr	x8, [x20, #16]
   127d0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   127d4:	cmp	x8, x9
   127d8:	b.eq	12804 <mpfr_fdump@@Base+0x74>  // b.none
   127dc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   127e0:	cmp	x8, x9
   127e4:	b.eq	12814 <mpfr_fdump@@Base+0x84>  // b.none
   127e8:	mov	x9, #0x2                   	// #2
   127ec:	movk	x9, #0x8000, lsl #48
   127f0:	cmp	x8, x9
   127f4:	b.ne	12830 <mpfr_fdump@@Base+0xa0>  // b.any
   127f8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   127fc:	add	x0, x0, #0xbd
   12800:	b	1281c <mpfr_fdump@@Base+0x8c>
   12804:	mov	w0, #0x30                  	// #48
   12808:	mov	x1, x19
   1280c:	bl	be50 <fputc@plt>
   12810:	b	129ec <mpfr_fdump@@Base+0x25c>
   12814:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   12818:	add	x0, x0, #0x8fd
   1281c:	mov	w1, #0x5                   	// #5
   12820:	mov	w2, #0x1                   	// #1
   12824:	mov	x3, x19
   12828:	bl	c920 <fwrite@plt>
   1282c:	b	129ec <mpfr_fdump@@Base+0x25c>
   12830:	ldr	x8, [x20, #24]
   12834:	ldr	x28, [x20]
   12838:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1283c:	add	x0, x0, #0xc3
   12840:	mov	w1, #0x2                   	// #2
   12844:	mov	w2, #0x1                   	// #1
   12848:	mov	x3, x19
   1284c:	str	x8, [sp, #16]
   12850:	bl	c920 <fwrite@plt>
   12854:	cmn	x28, #0x3e
   12858:	b.lt	12920 <mpfr_fdump@@Base+0x190>  // b.tstop
   1285c:	sub	x9, x28, #0x1
   12860:	add	x10, x28, #0x3e
   12864:	cmp	x9, #0x0
   12868:	csel	x9, x10, x9, lt  // lt = tstop
   1286c:	mov	w22, wzr
   12870:	mov	w8, wzr
   12874:	mov	w23, #0x30                  	// #48
   12878:	sub	x24, x29, #0x4
   1287c:	mov	w25, #0x54                  	// #84
   12880:	asr	x27, x9, #6
   12884:	str	x20, [sp, #8]
   12888:	ldr	x9, [sp, #16]
   1288c:	ldr	x26, [x9, x27, lsl #3]
   12890:	tbnz	w8, #0, 128a8 <mpfr_fdump@@Base+0x118>
   12894:	tbnz	x26, #63, 128a8 <mpfr_fdump@@Base+0x118>
   12898:	add	w8, w22, #0x1
   1289c:	mov	w9, #0x4e                  	// #78
   128a0:	strb	w9, [x24, w22, sxtw]
   128a4:	mov	w22, w8
   128a8:	sub	x20, x28, #0x40
   128ac:	sub	x28, x28, #0x1
   128b0:	mov	x21, #0x8000000000000000    	// #-9223372036854775808
   128b4:	tst	x21, x26
   128b8:	cinc	w0, w23, ne  // ne = any
   128bc:	mov	x1, x19
   128c0:	bl	bdd0 <putc@plt>
   128c4:	cbnz	x28, 128ec <mpfr_fdump@@Base+0x15c>
   128c8:	sub	x8, x21, #0x1
   128cc:	tst	x8, x26
   128d0:	b.eq	12900 <mpfr_fdump@@Base+0x170>  // b.none
   128d4:	mov	w0, #0x5b                  	// #91
   128d8:	mov	x1, x19
   128dc:	bl	bdd0 <putc@plt>
   128e0:	add	w8, w22, #0x1
   128e4:	strb	w25, [x24, w22, sxtw]
   128e8:	mov	w22, w8
   128ec:	lsr	x21, x21, #1
   128f0:	sub	x28, x28, #0x1
   128f4:	cbnz	x21, 128b4 <mpfr_fdump@@Base+0x124>
   128f8:	mov	x28, x20
   128fc:	b	12904 <mpfr_fdump@@Base+0x174>
   12900:	mov	x28, xzr
   12904:	cmp	x27, #0x0
   12908:	sub	x27, x27, #0x1
   1290c:	mov	w8, #0x1                   	// #1
   12910:	b.gt	12888 <mpfr_fdump@@Base+0xf8>
   12914:	ldr	x20, [sp, #8]
   12918:	tbz	x28, #63, 12930 <mpfr_fdump@@Base+0x1a0>
   1291c:	b	12924 <mpfr_fdump@@Base+0x194>
   12920:	mov	w22, wzr
   12924:	mov	w0, #0x5d                  	// #93
   12928:	mov	x1, x19
   1292c:	bl	bdd0 <putc@plt>
   12930:	ldr	x21, [x20, #16]
   12934:	mov	x8, #0x4                   	// #4
   12938:	movk	x8, #0x8000, lsl #48
   1293c:	cmp	x21, x8
   12940:	b.ne	12960 <mpfr_fdump@@Base+0x1d0>  // b.any
   12944:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   12948:	add	x2, x20, #0x20
   1294c:	add	x1, x1, #0xc6
   12950:	mov	x0, x19
   12954:	bl	c5a0 <__gmp_fprintf@plt>
   12958:	mov	w8, #0x55                  	// #85
   1295c:	b	129bc <mpfr_fdump@@Base+0x22c>
   12960:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   12964:	add	x1, x1, #0xcb
   12968:	mov	x0, x19
   1296c:	mov	x2, x21
   12970:	bl	cd40 <fprintf@plt>
   12974:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12978:	ldr	x1, [x0, #2592]
   1297c:	add	x0, x0, #0xa20
   12980:	blr	x1
   12984:	mrs	x8, tpidr_el0
   12988:	ldr	x9, [x8, x0]
   1298c:	cmp	x21, x9
   12990:	b.ge	1299c <mpfr_fdump@@Base+0x20c>  // b.tcont
   12994:	mov	w8, #0x3c                  	// #60
   12998:	b	129bc <mpfr_fdump@@Base+0x22c>
   1299c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   129a0:	ldr	x1, [x0, #2624]
   129a4:	add	x0, x0, #0xa40
   129a8:	blr	x1
   129ac:	ldr	x8, [x8, x0]
   129b0:	cmp	x21, x8
   129b4:	b.le	129cc <mpfr_fdump@@Base+0x23c>
   129b8:	mov	w8, #0x3e                  	// #62
   129bc:	add	w9, w22, #0x1
   129c0:	sub	x10, x29, #0x4
   129c4:	strb	w8, [x10, w22, sxtw]
   129c8:	mov	w22, w9
   129cc:	cbz	w22, 129ec <mpfr_fdump@@Base+0x25c>
   129d0:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   129d4:	sub	x8, x29, #0x4
   129d8:	add	x1, x1, #0xd0
   129dc:	sub	x2, x29, #0x4
   129e0:	mov	x0, x19
   129e4:	strb	wzr, [x8, w22, sxtw]
   129e8:	bl	cd40 <fprintf@plt>
   129ec:	mov	w0, #0xa                   	// #10
   129f0:	mov	x1, x19
   129f4:	bl	bdd0 <putc@plt>
   129f8:	ldp	x20, x19, [sp, #112]
   129fc:	ldp	x22, x21, [sp, #96]
   12a00:	ldp	x24, x23, [sp, #80]
   12a04:	ldp	x26, x25, [sp, #64]
   12a08:	ldp	x28, x27, [sp, #48]
   12a0c:	ldp	x29, x30, [sp, #32]
   12a10:	add	sp, sp, #0x80
   12a14:	ret

0000000000012a18 <mpfr_dump@@Base>:
   12a18:	adrp	x8, 70000 <__gmpfr_l2b@@Base+0x2e0>
   12a1c:	ldr	x8, [x8, #4000]
   12a20:	mov	x1, x0
   12a24:	ldr	x8, [x8]
   12a28:	mov	x0, x8
   12a2c:	b	bca0 <mpfr_fdump@plt>

0000000000012a30 <mpfr_eq@@Base>:
   12a30:	ldr	x8, [x0, #16]
   12a34:	mov	x10, #0x2                   	// #2
   12a38:	movk	x10, #0x8000, lsl #48
   12a3c:	add	x11, x10, #0x2
   12a40:	cmp	x8, x11
   12a44:	b.lt	12c2c <mpfr_eq@@Base+0x1fc>  // b.tstop
   12a48:	ldr	x9, [x1, #16]
   12a4c:	cmp	x9, x11
   12a50:	b.lt	12c38 <mpfr_eq@@Base+0x208>  // b.tstop
   12a54:	cmp	x8, x9
   12a58:	mov	w8, wzr
   12a5c:	b.ne	12c24 <mpfr_eq@@Base+0x1f4>  // b.any
   12a60:	ldr	w9, [x0, #8]
   12a64:	ldr	w10, [x1, #8]
   12a68:	cmp	w9, w10
   12a6c:	b.ne	12c24 <mpfr_eq@@Base+0x1f4>  // b.any
   12a70:	ldr	x8, [x0]
   12a74:	ldr	x9, [x1]
   12a78:	sub	x10, x8, #0x1
   12a7c:	add	x8, x8, #0x3e
   12a80:	sub	x11, x9, #0x1
   12a84:	cmp	x10, #0x0
   12a88:	add	x9, x9, #0x3e
   12a8c:	csel	x8, x8, x10, lt  // lt = tstop
   12a90:	cmp	x11, #0x0
   12a94:	csel	x9, x9, x11, lt  // lt = tstop
   12a98:	asr	x9, x9, #6
   12a9c:	cmp	x9, x8, asr #6
   12aa0:	asr	x10, x8, #6
   12aa4:	add	x11, x9, #0x1
   12aa8:	csel	x13, x1, x0, gt
   12aac:	csel	x8, x0, x1, gt
   12ab0:	add	x12, x10, #0x1
   12ab4:	csinc	x10, x11, x10, gt
   12ab8:	ldr	x8, [x8, #24]
   12abc:	ldr	x11, [x13, #24]
   12ac0:	csinc	x9, x12, x9, gt
   12ac4:	cmp	x10, x9
   12ac8:	b.le	12b60 <mpfr_eq@@Base+0x130>
   12acc:	lsl	x12, x9, #6
   12ad0:	cmp	x12, x2
   12ad4:	mov	x13, x9
   12ad8:	b.cs	12b68 <mpfr_eq@@Base+0x138>  // b.hs, b.nlast
   12adc:	mvn	w14, w13
   12ae0:	sub	x15, x2, x12
   12ae4:	add	w14, w14, w10
   12ae8:	cmp	x15, #0x3f
   12aec:	mvn	w16, w14
   12af0:	lsr	w17, w16, #31
   12af4:	cset	w16, hi  // hi = pmore
   12af8:	tbnz	w14, #31, 12b30 <mpfr_eq@@Base+0x100>
   12afc:	cmp	x15, #0x40
   12b00:	b.cc	12b30 <mpfr_eq@@Base+0x100>  // b.lo, b.ul, b.last
   12b04:	ldr	x16, [x11, w14, uxtw #3]
   12b08:	cbnz	x16, 12b50 <mpfr_eq@@Base+0x120>
   12b0c:	sub	x15, x15, #0x40
   12b10:	cmp	w14, #0x0
   12b14:	cset	w17, gt
   12b18:	cmp	x15, #0x3f
   12b1c:	cset	w16, hi  // hi = pmore
   12b20:	subs	w14, w14, #0x1
   12b24:	b.lt	12b30 <mpfr_eq@@Base+0x100>  // b.tstop
   12b28:	cmp	x15, #0x3f
   12b2c:	b.hi	12b04 <mpfr_eq@@Base+0xd4>  // b.pmore
   12b30:	cbz	w17, 12b68 <mpfr_eq@@Base+0x138>
   12b34:	cmp	x15, #0x3f
   12b38:	b.hi	12b4c <mpfr_eq@@Base+0x11c>  // b.pmore
   12b3c:	ldr	x17, [x11, w14, uxtw #3]
   12b40:	neg	x15, x15
   12b44:	lsr	x15, x17, x15
   12b48:	cbnz	x15, 12b58 <mpfr_eq@@Base+0x128>
   12b4c:	cbz	w16, 12b68 <mpfr_eq@@Base+0x138>
   12b50:	ldr	x14, [x11, w14, uxtw #3]
   12b54:	cbz	x14, 12b68 <mpfr_eq@@Base+0x138>
   12b58:	mov	w8, wzr
   12b5c:	b	12c24 <mpfr_eq@@Base+0x1f4>
   12b60:	lsl	x12, x10, #6
   12b64:	mov	x13, x10
   12b68:	sub	x14, x2, #0x1
   12b6c:	cmp	x12, x2
   12b70:	lsr	x14, x14, #6
   12b74:	csel	x15, x12, x2, cc  // cc = lo, ul, last
   12b78:	add	x12, x14, #0x1
   12b7c:	cmp	x13, x12
   12b80:	csinc	x12, x13, x14, ls  // ls = plast
   12b84:	csel	x13, x2, x15, hi  // hi = pmore
   12b88:	cmp	x12, #0x2
   12b8c:	sub	x15, x12, #0x1
   12b90:	b.lt	12be4 <mpfr_eq@@Base+0x1b4>  // b.tstop
   12b94:	cmp	x13, #0x40
   12b98:	b.cc	12be4 <mpfr_eq@@Base+0x1b4>  // b.lo, b.ul, b.last
   12b9c:	add	x14, x8, x9, lsl #3
   12ba0:	add	x17, x11, x10, lsl #3
   12ba4:	sub	x16, x14, #0x8
   12ba8:	sub	x17, x17, #0x8
   12bac:	ldr	x14, [x17]
   12bb0:	ldr	x18, [x16]
   12bb4:	cmp	x14, x18
   12bb8:	b.ne	12b58 <mpfr_eq@@Base+0x128>  // b.any
   12bbc:	sub	x13, x13, #0x40
   12bc0:	cmp	x15, #0x2
   12bc4:	sub	x14, x15, #0x1
   12bc8:	b.lt	12be8 <mpfr_eq@@Base+0x1b8>  // b.tstop
   12bcc:	sub	x16, x16, #0x8
   12bd0:	cmp	x13, #0x3f
   12bd4:	sub	x17, x17, #0x8
   12bd8:	mov	x15, x14
   12bdc:	b.hi	12bac <mpfr_eq@@Base+0x17c>  // b.pmore
   12be0:	b	12be8 <mpfr_eq@@Base+0x1b8>
   12be4:	mov	x14, x15
   12be8:	sub	x10, x10, x12
   12bec:	add	x10, x11, x10, lsl #3
   12bf0:	ldr	x10, [x10, x14, lsl #3]
   12bf4:	sub	x11, x9, x12
   12bf8:	ands	x9, x13, #0x3f
   12bfc:	add	x8, x8, x11, lsl #3
   12c00:	b.eq	12c18 <mpfr_eq@@Base+0x1e8>  // b.none
   12c04:	ldr	x8, [x8, x14, lsl #3]
   12c08:	neg	x9, x9
   12c0c:	lsr	x10, x10, x9
   12c10:	lsr	x8, x8, x9
   12c14:	b	12c1c <mpfr_eq@@Base+0x1ec>
   12c18:	ldr	x8, [x8, x14, lsl #3]
   12c1c:	cmp	x10, x8
   12c20:	cset	w8, eq  // eq = none
   12c24:	mov	w0, w8
   12c28:	ret
   12c2c:	cmp	x8, x10
   12c30:	b.eq	12b58 <mpfr_eq@@Base+0x128>  // b.none
   12c34:	ldr	x9, [x1, #16]
   12c38:	cmp	x9, x10
   12c3c:	b.eq	12b58 <mpfr_eq@@Base+0x128>  // b.none
   12c40:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   12c44:	cmp	x8, x10
   12c48:	b.ne	12c64 <mpfr_eq@@Base+0x234>  // b.any
   12c4c:	cmp	x9, x10
   12c50:	b.ne	12c64 <mpfr_eq@@Base+0x234>  // b.any
   12c54:	ldr	w8, [x0, #8]
   12c58:	ldr	w9, [x1, #8]
   12c5c:	cmp	w8, w9
   12c60:	b	12c20 <mpfr_eq@@Base+0x1f0>
   12c64:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   12c68:	cmp	x8, x10
   12c6c:	cset	w8, eq  // eq = none
   12c70:	cmp	x9, x10
   12c74:	cset	w9, eq  // eq = none
   12c78:	and	w8, w8, w9
   12c7c:	b	12c24 <mpfr_eq@@Base+0x1f4>

0000000000012c80 <mpfr_exp10@@Base>:
   12c80:	mov	w3, w2
   12c84:	mov	x2, x1
   12c88:	mov	w1, #0xa                   	// #10
   12c8c:	b	ca60 <mpfr_ui_pow@plt>

0000000000012c90 <mpfr_exp2@@Base>:
   12c90:	sub	sp, sp, #0xb0
   12c94:	stp	x29, x30, [sp, #80]
   12c98:	stp	x28, x27, [sp, #96]
   12c9c:	stp	x26, x25, [sp, #112]
   12ca0:	stp	x24, x23, [sp, #128]
   12ca4:	stp	x22, x21, [sp, #144]
   12ca8:	stp	x20, x19, [sp, #160]
   12cac:	ldr	x8, [x1, #16]
   12cb0:	mov	x10, #0x4                   	// #4
   12cb4:	movk	x10, #0x8000, lsl #48
   12cb8:	mov	w20, w2
   12cbc:	mov	x22, x1
   12cc0:	cmp	x8, x10
   12cc4:	mov	x19, x0
   12cc8:	add	x29, sp, #0x50
   12ccc:	b.lt	13044 <mpfr_exp2@@Base+0x3b4>  // b.tstop
   12cd0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12cd4:	ldr	x1, [x0, #2592]
   12cd8:	add	x0, x0, #0xa20
   12cdc:	blr	x1
   12ce0:	mrs	x26, tpidr_el0
   12ce4:	ldr	x8, [x26, x0]
   12ce8:	mov	x0, x22
   12cec:	mov	x2, xzr
   12cf0:	sub	x1, x8, #0x2
   12cf4:	bl	c430 <mpfr_cmp_si_2exp@plt>
   12cf8:	cmp	w0, #0x0
   12cfc:	b.le	13090 <mpfr_exp2@@Base+0x400>
   12d00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12d04:	ldr	x1, [x0, #2624]
   12d08:	add	x0, x0, #0xa40
   12d0c:	blr	x1
   12d10:	ldr	x1, [x26, x0]
   12d14:	mov	x0, x22
   12d18:	mov	x2, xzr
   12d1c:	bl	c430 <mpfr_cmp_si_2exp@plt>
   12d20:	tbz	w0, #31, 130a8 <mpfr_exp2@@Base+0x418>
   12d24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12d28:	ldr	x1, [x0, #2656]
   12d2c:	add	x0, x0, #0xa60
   12d30:	blr	x1
   12d34:	ldr	w25, [x26, x0]
   12d38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12d3c:	ldr	x1, [x0, #2592]
   12d40:	add	x0, x0, #0xa20
   12d44:	blr	x1
   12d48:	ldr	x27, [x26, x0]
   12d4c:	mov	x8, x0
   12d50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12d54:	ldr	x1, [x0, #2624]
   12d58:	add	x0, x0, #0xa40
   12d5c:	blr	x1
   12d60:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   12d64:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   12d68:	ldr	x28, [x26, x0]
   12d6c:	str	x9, [x26, x8]
   12d70:	str	x10, [x26, x0]
   12d74:	ldr	x8, [x22, #16]
   12d78:	tbz	x8, #63, 12d90 <mpfr_exp2@@Base+0x100>
   12d7c:	ldr	x9, [x19]
   12d80:	neg	x2, x8
   12d84:	add	x8, x9, #0x1
   12d88:	cmp	x8, x2
   12d8c:	b.cc	130e0 <mpfr_exp2@@Base+0x450>  // b.lo, b.ul, b.last
   12d90:	mov	w1, #0x1                   	// #1
   12d94:	mov	x0, x22
   12d98:	bl	c230 <mpfr_get_si@plt>
   12d9c:	ldr	x1, [x22]
   12da0:	mov	x21, x0
   12da4:	sub	x0, x29, #0x20
   12da8:	bl	cad0 <mpfr_init2@plt>
   12dac:	sub	x0, x29, #0x20
   12db0:	mov	x1, x22
   12db4:	mov	x2, x21
   12db8:	mov	w3, wzr
   12dbc:	bl	c100 <mpfr_sub_si@plt>
   12dc0:	ldur	x8, [x29, #-16]
   12dc4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   12dc8:	cmp	x8, x9
   12dcc:	b.ne	12dec <mpfr_exp2@@Base+0x15c>  // b.any
   12dd0:	mov	w1, #0x1                   	// #1
   12dd4:	mov	x0, x19
   12dd8:	mov	x2, xzr
   12ddc:	mov	w3, wzr
   12de0:	bl	c640 <mpfr_set_ui_2exp@plt>
   12de4:	mov	w22, wzr
   12de8:	b	12f38 <mpfr_exp2@@Base+0x2a8>
   12dec:	ldr	x24, [x19]
   12df0:	subs	x23, x24, #0x1
   12df4:	add	x22, x24, #0x5
   12df8:	b.eq	130bc <mpfr_exp2@@Base+0x42c>  // b.none
   12dfc:	b.le	130c4 <mpfr_exp2@@Base+0x434>
   12e00:	clz	x8, x23
   12e04:	mov	w9, #0x40                  	// #64
   12e08:	sub	x8, x9, x8
   12e0c:	add	x22, x22, x8
   12e10:	add	x0, sp, #0x10
   12e14:	mov	x1, x22
   12e18:	bl	cad0 <mpfr_init2@plt>
   12e1c:	cmp	w20, #0x0
   12e20:	mov	w8, #0x40                  	// #64
   12e24:	cinc	x24, x24, eq  // eq = none
   12e28:	str	x8, [sp, #8]
   12e2c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12e30:	ldr	x1, [x0, #2640]
   12e34:	add	x0, x0, #0xa50
   12e38:	blr	x1
   12e3c:	add	x1, x26, x0
   12e40:	add	x0, sp, #0x10
   12e44:	mov	w2, #0x2                   	// #2
   12e48:	bl	c3e0 <mpfr_cache@plt>
   12e4c:	add	x0, sp, #0x10
   12e50:	sub	x1, x29, #0x20
   12e54:	add	x2, sp, #0x10
   12e58:	mov	w3, #0x2                   	// #2
   12e5c:	bl	be00 <mpfr_mul@plt>
   12e60:	ldr	x23, [sp, #32]
   12e64:	add	x0, sp, #0x10
   12e68:	add	x1, sp, #0x10
   12e6c:	mov	w2, wzr
   12e70:	bl	c7a0 <mpfr_exp@plt>
   12e74:	ldr	x8, [sp, #32]
   12e78:	mov	x9, #0x4                   	// #4
   12e7c:	movk	x9, #0x8000, lsl #48
   12e80:	cmp	x8, x9
   12e84:	b.lt	12ebc <mpfr_exp2@@Base+0x22c>  // b.tstop
   12e88:	ldr	x8, [sp, #16]
   12e8c:	sub	x9, x22, x23
   12e90:	sub	x2, x9, #0x2
   12e94:	ldr	x0, [sp, #40]
   12e98:	sub	x9, x8, #0x1
   12e9c:	add	x8, x8, #0x3e
   12ea0:	cmp	x9, #0x0
   12ea4:	csel	x8, x8, x9, lt  // lt = tstop
   12ea8:	asr	x8, x8, #6
   12eac:	add	x1, x8, #0x1
   12eb0:	mov	x3, x24
   12eb4:	bl	c3d0 <mpfr_round_p@plt>
   12eb8:	cbnz	w0, 12f18 <mpfr_exp2@@Base+0x288>
   12ebc:	mov	x8, #0x4                   	// #4
   12ec0:	ldr	x23, [sp, #8]
   12ec4:	movk	x8, #0x8000, lsl #48
   12ec8:	sub	x8, x8, x22
   12ecc:	sub	x8, x8, #0x105
   12ed0:	cmp	x23, x8
   12ed4:	b.gt	12efc <mpfr_exp2@@Base+0x26c>
   12ed8:	add	x22, x23, x22
   12edc:	cmp	x22, #0x0
   12ee0:	cinc	x8, x22, lt  // lt = tstop
   12ee4:	asr	x8, x8, #1
   12ee8:	add	x0, sp, #0x10
   12eec:	mov	x1, x22
   12ef0:	str	x8, [sp, #8]
   12ef4:	bl	bf80 <mpfr_set_prec@plt>
   12ef8:	b	12e2c <mpfr_exp2@@Base+0x19c>
   12efc:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
   12f00:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   12f04:	mov	w1, #0x86                  	// #134
   12f08:	add	x0, x0, #0xeb4
   12f0c:	add	x2, x2, #0xe2
   12f10:	bl	cb90 <mpfr_assert_fail@plt>
   12f14:	b	12ed8 <mpfr_exp2@@Base+0x248>
   12f18:	ldr	w3, [sp, #24]
   12f1c:	add	x1, sp, #0x10
   12f20:	mov	x0, x19
   12f24:	mov	w2, w20
   12f28:	bl	c6f0 <mpfr_set4@plt>
   12f2c:	mov	w22, w0
   12f30:	add	x0, sp, #0x10
   12f34:	bl	c110 <mpfr_clear@plt>
   12f38:	sub	x0, x29, #0x20
   12f3c:	bl	c110 <mpfr_clear@plt>
   12f40:	cbnz	w20, 12f78 <mpfr_exp2@@Base+0x2e8>
   12f44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12f48:	ldr	x1, [x0, #2592]
   12f4c:	add	x0, x0, #0xa20
   12f50:	blr	x1
   12f54:	ldr	x8, [x26, x0]
   12f58:	sub	x8, x8, #0x1
   12f5c:	cmp	x21, x8
   12f60:	b.ne	12f78 <mpfr_exp2@@Base+0x2e8>  // b.any
   12f64:	ldr	x8, [x19, #16]
   12f68:	cbnz	x8, 12f78 <mpfr_exp2@@Base+0x2e8>
   12f6c:	mov	x0, x19
   12f70:	bl	bfb0 <mpfr_powerof2_raw@plt>
   12f74:	cbnz	w0, 131c8 <mpfr_exp2@@Base+0x538>
   12f78:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12f7c:	ldr	x1, [x0, #2656]
   12f80:	add	x0, x0, #0xa60
   12f84:	blr	x1
   12f88:	mov	x23, x0
   12f8c:	str	wzr, [x26, x0]
   12f90:	mov	x0, x19
   12f94:	mov	x1, x19
   12f98:	mov	x2, x21
   12f9c:	mov	w3, w20
   12fa0:	bl	bc40 <mpfr_mul_2si@plt>
   12fa4:	ldr	w9, [x26, x23]
   12fa8:	ldr	x10, [x19, #16]
   12fac:	cmp	w0, #0x0
   12fb0:	csel	w8, w22, w0, eq  // eq = none
   12fb4:	orr	w9, w9, w25
   12fb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12fbc:	ldr	x1, [x0, #2656]
   12fc0:	add	x0, x0, #0xa60
   12fc4:	blr	x1
   12fc8:	str	w9, [x26, x0]
   12fcc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12fd0:	ldr	x1, [x0, #2592]
   12fd4:	add	x0, x0, #0xa20
   12fd8:	blr	x1
   12fdc:	str	x27, [x26, x0]
   12fe0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   12fe4:	ldr	x1, [x0, #2624]
   12fe8:	add	x0, x0, #0xa40
   12fec:	blr	x1
   12ff0:	cmp	x10, x28
   12ff4:	str	x28, [x26, x0]
   12ff8:	b.gt	13174 <mpfr_exp2@@Base+0x4e4>
   12ffc:	cmp	x10, x27
   13000:	b.lt	13174 <mpfr_exp2@@Base+0x4e4>  // b.tstop
   13004:	cbz	w8, 13020 <mpfr_exp2@@Base+0x390>
   13008:	orr	w9, w9, #0x8
   1300c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13010:	ldr	x1, [x0, #2656]
   13014:	add	x0, x0, #0xa60
   13018:	blr	x1
   1301c:	str	w9, [x26, x0]
   13020:	ldp	x20, x19, [sp, #160]
   13024:	ldp	x22, x21, [sp, #144]
   13028:	ldp	x24, x23, [sp, #128]
   1302c:	ldp	x26, x25, [sp, #112]
   13030:	ldp	x28, x27, [sp, #96]
   13034:	ldp	x29, x30, [sp, #80]
   13038:	mov	w0, w8
   1303c:	add	sp, sp, #0xb0
   13040:	ret
   13044:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   13048:	cmp	x8, x9
   1304c:	b.eq	13188 <mpfr_exp2@@Base+0x4f8>  // b.none
   13050:	mov	x9, #0x2                   	// #2
   13054:	movk	x9, #0x8000, lsl #48
   13058:	cmp	x8, x9
   1305c:	b.ne	131ac <mpfr_exp2@@Base+0x51c>  // b.any
   13060:	sub	x8, x10, #0x2
   13064:	str	x8, [x19, #16]
   13068:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1306c:	ldr	x1, [x0, #2656]
   13070:	add	x0, x0, #0xa60
   13074:	blr	x1
   13078:	mrs	x9, tpidr_el0
   1307c:	ldr	w10, [x9, x0]
   13080:	mov	w8, wzr
   13084:	orr	w10, w10, #0x4
   13088:	str	w10, [x9, x0]
   1308c:	b	13020 <mpfr_exp2@@Base+0x390>
   13090:	cmp	w20, #0x0
   13094:	csinc	w1, w20, wzr, ne  // ne = any
   13098:	mov	w2, #0x1                   	// #1
   1309c:	mov	x0, x19
   130a0:	bl	c420 <mpfr_underflow@plt>
   130a4:	b	131c0 <mpfr_exp2@@Base+0x530>
   130a8:	mov	w2, #0x1                   	// #1
   130ac:	mov	x0, x19
   130b0:	mov	w1, w20
   130b4:	bl	bff0 <mpfr_overflow@plt>
   130b8:	b	131c0 <mpfr_exp2@@Base+0x530>
   130bc:	mov	x8, xzr
   130c0:	b	12e0c <mpfr_exp2@@Base+0x17c>
   130c4:	adrp	x0, 57000 <mpfr_free_pool@@Base+0x187c>
   130c8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   130cc:	add	x0, x0, #0xeb4
   130d0:	add	x2, x2, #0xd9
   130d4:	mov	w1, #0x73                  	// #115
   130d8:	bl	cb90 <mpfr_assert_fail@plt>
   130dc:	b	12e00 <mpfr_exp2@@Base+0x170>
   130e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   130e4:	ldr	x1, [x0, #2656]
   130e8:	add	x0, x0, #0xa60
   130ec:	blr	x1
   130f0:	str	wzr, [x26, x0]
   130f4:	ldr	w8, [x22, #8]
   130f8:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   130fc:	ldr	x1, [x1, #3944]
   13100:	mov	x0, x19
   13104:	cmp	w8, #0x0
   13108:	cset	w3, gt
   1310c:	mov	w4, w20
   13110:	bl	c590 <mpfr_round_near_x@plt>
   13114:	cbz	w0, 12d90 <mpfr_exp2@@Base+0x100>
   13118:	mov	w8, w0
   1311c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13120:	ldr	x1, [x0, #2656]
   13124:	add	x0, x0, #0xa60
   13128:	blr	x1
   1312c:	ldr	w9, [x26, x0]
   13130:	orr	w9, w9, w25
   13134:	str	w9, [x26, x0]
   13138:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1313c:	ldr	x1, [x0, #2592]
   13140:	add	x0, x0, #0xa20
   13144:	blr	x1
   13148:	str	x27, [x26, x0]
   1314c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13150:	ldr	x1, [x0, #2624]
   13154:	add	x0, x0, #0xa40
   13158:	blr	x1
   1315c:	str	x28, [x26, x0]
   13160:	ldr	x10, [x19, #16]
   13164:	cmp	x10, x28
   13168:	b.gt	13174 <mpfr_exp2@@Base+0x4e4>
   1316c:	cmp	x10, x27
   13170:	b.ge	13008 <mpfr_exp2@@Base+0x378>  // b.tcont
   13174:	mov	x0, x19
   13178:	mov	w1, w8
   1317c:	mov	w2, w20
   13180:	bl	cb80 <mpfr_check_range@plt>
   13184:	b	131c0 <mpfr_exp2@@Base+0x530>
   13188:	ldr	w10, [x22, #8]
   1318c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   13190:	mov	w12, #0x1                   	// #1
   13194:	mov	w8, wzr
   13198:	cmp	w10, #0x0
   1319c:	csel	x9, x9, x11, gt
   131a0:	str	x9, [x19, #16]
   131a4:	str	w12, [x19, #8]
   131a8:	b	13020 <mpfr_exp2@@Base+0x390>
   131ac:	mov	w1, #0x1                   	// #1
   131b0:	mov	x0, x19
   131b4:	mov	x2, xzr
   131b8:	mov	w3, w20
   131bc:	bl	c640 <mpfr_set_ui_2exp@plt>
   131c0:	mov	w8, w0
   131c4:	b	13020 <mpfr_exp2@@Base+0x390>
   131c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   131cc:	ldr	x1, [x0, #2592]
   131d0:	add	x0, x0, #0xa20
   131d4:	blr	x1
   131d8:	ldr	x10, [x26, x0]
   131dc:	orr	w9, w25, #0x1
   131e0:	mov	w8, #0x1                   	// #1
   131e4:	str	x10, [x19, #16]
   131e8:	b	12fb8 <mpfr_exp2@@Base+0x328>

00000000000131ec <mpfr_exp_3@@Base>:
   131ec:	sub	sp, sp, #0x160
   131f0:	stp	x29, x30, [sp, #256]
   131f4:	stp	x28, x27, [sp, #272]
   131f8:	stp	x26, x25, [sp, #288]
   131fc:	stp	x24, x23, [sp, #304]
   13200:	stp	x22, x21, [sp, #320]
   13204:	stp	x20, x19, [sp, #336]
   13208:	add	x29, sp, #0x100
   1320c:	mov	w24, w2
   13210:	mov	x20, x1
   13214:	mov	x23, x0
   13218:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1321c:	ldr	x1, [x0, #2656]
   13220:	add	x0, x0, #0xa60
   13224:	blr	x1
   13228:	mrs	x11, tpidr_el0
   1322c:	ldr	w22, [x11, x0]
   13230:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13234:	ldr	x1, [x0, #2592]
   13238:	add	x0, x0, #0xa20
   1323c:	blr	x1
   13240:	ldr	x19, [x11, x0]
   13244:	mov	x8, x0
   13248:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1324c:	ldr	x1, [x0, #2624]
   13250:	add	x0, x0, #0xa40
   13254:	blr	x1
   13258:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1325c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   13260:	ldr	x21, [x11, x0]
   13264:	str	x9, [x11, x8]
   13268:	str	x10, [x11, x0]
   1326c:	ldr	x1, [x20]
   13270:	str	x11, [sp, #96]
   13274:	str	x21, [sp, #16]
   13278:	cmp	x1, #0x1
   1327c:	b.eq	13808 <mpfr_exp_3@@Base+0x61c>  // b.none
   13280:	b.le	13810 <mpfr_exp_3@@Base+0x624>
   13284:	sub	x8, x1, #0x1
   13288:	clz	x8, x8
   1328c:	mov	w9, #0x3a                  	// #58
   13290:	sub	w8, w9, w8
   13294:	bic	w8, w8, w8, asr #31
   13298:	str	x8, [sp, #88]
   1329c:	ldr	x21, [x20, #16]
   132a0:	sub	x0, x29, #0x48
   132a4:	bl	cad0 <mpfr_init2@plt>
   132a8:	ldr	w3, [x20, #8]
   132ac:	sub	x0, x29, #0x48
   132b0:	mov	w2, #0x3                   	// #3
   132b4:	mov	x1, x20
   132b8:	bl	c6f0 <mpfr_set4@plt>
   132bc:	cmp	x21, #0x1
   132c0:	str	x19, [sp, #24]
   132c4:	b.lt	132ec <mpfr_exp_3@@Base+0x100>  // b.tstop
   132c8:	sub	x0, x29, #0x48
   132cc:	mov	x1, x20
   132d0:	mov	x2, x21
   132d4:	mov	w3, wzr
   132d8:	bl	c950 <mpfr_div_2ui@plt>
   132dc:	ldur	x8, [x29, #-56]
   132e0:	mov	x25, x21
   132e4:	mov	x21, x8
   132e8:	b	132f0 <mpfr_exp_3@@Base+0x104>
   132ec:	mov	x25, xzr
   132f0:	ldr	x19, [x23]
   132f4:	ldr	x8, [sp, #88]
   132f8:	str	x23, [sp, #48]
   132fc:	str	w22, [sp, #12]
   13300:	str	w24, [sp, #36]
   13304:	add	x8, x19, x8
   13308:	cmp	x8, #0x1
   1330c:	b.eq	13830 <mpfr_exp_3@@Base+0x644>  // b.none
   13310:	mov	x8, x19
   13314:	b.le	13838 <mpfr_exp_3@@Base+0x64c>
   13318:	ldr	x9, [sp, #88]
   1331c:	add	x8, x9, x8
   13320:	sub	x8, x8, #0x1
   13324:	clz	x8, x8
   13328:	mov	w9, #0x40                  	// #64
   1332c:	sub	x8, x9, x8
   13330:	add	x8, x8, x19
   13334:	add	x9, x25, #0x22
   13338:	add	x20, x9, x8
   1333c:	sub	x0, x29, #0x28
   13340:	mov	x1, x20
   13344:	str	x8, [sp, #112]
   13348:	str	x9, [sp, #56]
   1334c:	sub	x19, x29, #0x28
   13350:	bl	cad0 <mpfr_init2@plt>
   13354:	sub	x0, x29, #0x68
   13358:	mov	x1, x20
   1335c:	sub	x22, x29, #0x68
   13360:	bl	cad0 <mpfr_init2@plt>
   13364:	sub	x0, x29, #0x78
   13368:	bl	c040 <mpfr_mpz_init@plt>
   1336c:	mov	w8, #0x60                  	// #96
   13370:	cmp	x25, #0x0
   13374:	sub	x8, x8, x21
   13378:	stp	x8, x25, [sp, #72]
   1337c:	csel	x8, x19, x22, gt
   13380:	str	x8, [sp, #64]
   13384:	ldr	w8, [sp, #36]
   13388:	sub	x28, x25, #0x1
   1338c:	cmp	w8, #0x0
   13390:	cset	w8, eq  // eq = none
   13394:	str	x8, [sp, #40]
   13398:	mov	w8, #0x40                  	// #64
   1339c:	str	x8, [sp, #104]
   133a0:	subs	x19, x20, #0x1
   133a4:	b.eq	13678 <mpfr_exp_3@@Base+0x48c>  // b.none
   133a8:	b.le	13680 <mpfr_exp_3@@Base+0x494>
   133ac:	clz	x8, x19
   133b0:	mov	w9, #0x40                  	// #64
   133b4:	sub	w24, w9, w8
   133b8:	sub	w22, w24, #0x4
   133bc:	add	w8, w22, w22, lsl #1
   133c0:	sbfiz	x0, x8, #4, #32
   133c4:	sub	w26, w24, #0x6
   133c8:	sxtw	x25, w8
   133cc:	str	x0, [sp, #128]
   133d0:	bl	cd50 <mpfr_allocate_func@plt>
   133d4:	subs	w19, w24, #0x5
   133d8:	mov	x27, x0
   133dc:	b.lt	13400 <mpfr_exp_3@@Base+0x214>  // b.tstop
   133e0:	mov	x23, xzr
   133e4:	mov	x20, x27
   133e8:	mov	x0, x20
   133ec:	bl	c040 <mpfr_mpz_init@plt>
   133f0:	add	x23, x23, #0x1
   133f4:	cmp	x23, x25
   133f8:	add	x20, x20, #0x10
   133fc:	b.lt	133e8 <mpfr_exp_3@@Base+0x1fc>  // b.tstop
   13400:	lsl	w8, w22, #1
   13404:	sbfiz	x0, x8, #3, #32
   13408:	str	x0, [sp, #120]
   1340c:	bl	cd50 <mpfr_allocate_func@plt>
   13410:	mov	x20, x0
   13414:	sub	x0, x29, #0x78
   13418:	sub	x1, x29, #0x48
   1341c:	mov	w2, wzr
   13420:	bl	ca20 <mpfr_extract@plt>
   13424:	ldr	x2, [sp, #72]
   13428:	sub	x0, x29, #0x68
   1342c:	sub	x1, x29, #0x78
   13430:	mov	w3, w19
   13434:	mov	x4, x27
   13438:	mov	x5, x20
   1343c:	bl	138dc <mpfr_exp_3@@Base+0x6f0>
   13440:	mov	w19, #0x20                  	// #32
   13444:	sub	x0, x29, #0x68
   13448:	sub	x1, x29, #0x68
   1344c:	mov	w2, #0x3                   	// #3
   13450:	bl	c450 <mpfr_sqr@plt>
   13454:	subs	w19, w19, #0x1
   13458:	b.ne	13444 <mpfr_exp_3@@Base+0x258>  // b.any
   1345c:	ldr	x8, [sp, #88]
   13460:	cmp	w26, w8
   13464:	csel	w19, w8, w26, gt
   13468:	cmp	w19, #0x1
   1346c:	b.lt	134fc <mpfr_exp_3@@Base+0x310>  // b.tstop
   13470:	mov	w22, wzr
   13474:	mov	w23, #0x80                  	// #128
   13478:	add	w2, w22, #0x1
   1347c:	sub	x0, x29, #0x78
   13480:	sub	x1, x29, #0x48
   13484:	bl	ca20 <mpfr_extract@plt>
   13488:	ldur	w8, [x29, #-116]
   1348c:	cbz	w8, 134c0 <mpfr_exp_3@@Base+0x2d4>
   13490:	sub	x2, x23, x21
   13494:	sub	x0, x29, #0x28
   13498:	sub	x1, x29, #0x78
   1349c:	mov	w3, w26
   134a0:	mov	x4, x27
   134a4:	mov	x5, x20
   134a8:	bl	138dc <mpfr_exp_3@@Base+0x6f0>
   134ac:	sub	x0, x29, #0x68
   134b0:	sub	x1, x29, #0x68
   134b4:	sub	x2, x29, #0x28
   134b8:	mov	w3, #0x3                   	// #3
   134bc:	bl	be00 <mpfr_mul@plt>
   134c0:	lsr	x8, x23, #62
   134c4:	cbnz	x8, 134e0 <mpfr_exp_3@@Base+0x2f4>
   134c8:	add	w22, w22, #0x1
   134cc:	lsl	x23, x23, #1
   134d0:	cmp	w22, w19
   134d4:	sub	w26, w26, #0x1
   134d8:	b.lt	13478 <mpfr_exp_3@@Base+0x28c>  // b.tstop
   134dc:	b	134fc <mpfr_exp_3@@Base+0x310>
   134e0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   134e4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   134e8:	mov	w1, #0xf5                  	// #245
   134ec:	add	x0, x0, #0x126
   134f0:	add	x2, x2, #0x171
   134f4:	bl	cb90 <mpfr_assert_fail@plt>
   134f8:	b	134c8 <mpfr_exp_3@@Base+0x2dc>
   134fc:	cmp	w24, #0x5
   13500:	b.lt	13524 <mpfr_exp_3@@Base+0x338>  // b.tstop
   13504:	mov	x22, xzr
   13508:	mov	x19, x27
   1350c:	mov	x0, x19
   13510:	bl	c210 <mpfr_mpz_clear@plt>
   13514:	add	x22, x22, #0x1
   13518:	cmp	x22, x25
   1351c:	add	x19, x19, #0x10
   13520:	b.lt	1350c <mpfr_exp_3@@Base+0x320>  // b.tstop
   13524:	ldr	x1, [sp, #128]
   13528:	mov	x0, x27
   1352c:	bl	cc80 <mpfr_free_func@plt>
   13530:	ldr	x1, [sp, #120]
   13534:	mov	x0, x20
   13538:	bl	cc80 <mpfr_free_func@plt>
   1353c:	ldr	x8, [sp, #80]
   13540:	cmp	x8, #0x1
   13544:	b.lt	135d0 <mpfr_exp_3@@Base+0x3e4>  // b.tstop
   13548:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1354c:	ldr	x1, [x0, #2656]
   13550:	add	x0, x0, #0xa60
   13554:	blr	x1
   13558:	cmp	x8, #0x2
   1355c:	ldr	x8, [sp, #96]
   13560:	ldr	x20, [sp, #112]
   13564:	ldr	x24, [sp, #64]
   13568:	mov	x22, #0x4                   	// #4
   1356c:	movk	x22, #0x8000, lsl #48
   13570:	str	wzr, [x8, x0]
   13574:	b.lt	13598 <mpfr_exp_3@@Base+0x3ac>  // b.tstop
   13578:	mov	x19, xzr
   1357c:	sub	x0, x29, #0x68
   13580:	sub	x1, x29, #0x68
   13584:	mov	w2, #0x3                   	// #3
   13588:	bl	c450 <mpfr_sqr@plt>
   1358c:	add	x19, x19, #0x1
   13590:	cmp	x28, x19
   13594:	b.gt	1357c <mpfr_exp_3@@Base+0x390>
   13598:	sub	x0, x29, #0x28
   1359c:	sub	x1, x29, #0x68
   135a0:	mov	w2, #0x3                   	// #3
   135a4:	bl	c450 <mpfr_sqr@plt>
   135a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   135ac:	ldr	x1, [x0, #2656]
   135b0:	add	x0, x0, #0xa60
   135b4:	blr	x1
   135b8:	ldr	x8, [sp, #96]
   135bc:	ldr	w8, [x8, x0]
   135c0:	tbnz	w8, #1, 137e4 <mpfr_exp_3@@Base+0x5f8>
   135c4:	tbnz	w8, #0, 136b8 <mpfr_exp_3@@Base+0x4cc>
   135c8:	mov	w19, wzr
   135cc:	b	135e4 <mpfr_exp_3@@Base+0x3f8>
   135d0:	ldr	x20, [sp, #112]
   135d4:	ldr	x24, [sp, #64]
   135d8:	mov	x22, #0x4                   	// #4
   135dc:	mov	w19, wzr
   135e0:	movk	x22, #0x8000, lsl #48
   135e4:	ldr	x8, [x24, #16]
   135e8:	cmp	x8, x22
   135ec:	b.lt	1362c <mpfr_exp_3@@Base+0x440>  // b.tstop
   135f0:	ldr	x8, [x24]
   135f4:	ldr	x9, [sp, #48]
   135f8:	ldr	x0, [x24, #24]
   135fc:	mov	x2, x20
   13600:	sub	x10, x8, #0x1
   13604:	add	x8, x8, #0x3e
   13608:	cmp	x10, #0x0
   1360c:	csel	x8, x8, x10, lt  // lt = tstop
   13610:	asr	x8, x8, #6
   13614:	ldr	x9, [x9]
   13618:	add	x1, x8, #0x1
   1361c:	ldr	x8, [sp, #40]
   13620:	add	x3, x9, x8
   13624:	bl	c3d0 <mpfr_round_p@plt>
   13628:	cbnz	w0, 13718 <mpfr_exp_3@@Base+0x52c>
   1362c:	ldr	x19, [sp, #104]
   13630:	sub	x8, x22, x20
   13634:	sub	x8, x8, #0x105
   13638:	cmp	x19, x8
   1363c:	b.gt	1369c <mpfr_exp_3@@Base+0x4b0>
   13640:	add	x20, x20, x19
   13644:	cmp	x20, #0x0
   13648:	cinc	x8, x20, lt  // lt = tstop
   1364c:	asr	x8, x8, #1
   13650:	stp	x8, x20, [sp, #104]
   13654:	ldr	x8, [sp, #56]
   13658:	sub	x0, x29, #0x28
   1365c:	add	x20, x8, x20
   13660:	mov	x1, x20
   13664:	bl	bf80 <mpfr_set_prec@plt>
   13668:	sub	x0, x29, #0x68
   1366c:	mov	x1, x20
   13670:	bl	bf80 <mpfr_set_prec@plt>
   13674:	b	133a0 <mpfr_exp_3@@Base+0x1b4>
   13678:	mov	w24, wzr
   1367c:	b	133b8 <mpfr_exp_3@@Base+0x1cc>
   13680:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   13684:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   13688:	mov	w1, #0xd8                  	// #216
   1368c:	add	x0, x0, #0x126
   13690:	add	x2, x2, #0x166
   13694:	bl	cb90 <mpfr_assert_fail@plt>
   13698:	b	133ac <mpfr_exp_3@@Base+0x1c0>
   1369c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   136a0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   136a4:	mov	w1, #0x146                 	// #326
   136a8:	add	x0, x0, #0x126
   136ac:	add	x2, x2, #0x195
   136b0:	bl	cb90 <mpfr_assert_fail@plt>
   136b4:	b	13640 <mpfr_exp_3@@Base+0x454>
   136b8:	sub	x0, x29, #0x68
   136bc:	sub	x1, x29, #0x68
   136c0:	mov	w2, #0x1                   	// #1
   136c4:	mov	w3, #0x3                   	// #3
   136c8:	mov	w19, #0x1                   	// #1
   136cc:	bl	c320 <mpfr_mul_2ui@plt>
   136d0:	sub	x0, x29, #0x28
   136d4:	sub	x1, x29, #0x68
   136d8:	mov	w2, #0x3                   	// #3
   136dc:	bl	c450 <mpfr_sqr@plt>
   136e0:	ldur	x8, [x29, #-24]
   136e4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   136e8:	cmp	x8, x9
   136ec:	b.ne	135e4 <mpfr_exp_3@@Base+0x3f8>  // b.any
   136f0:	ldr	w8, [sp, #36]
   136f4:	ldr	x0, [sp, #48]
   136f8:	mov	w2, #0x1                   	// #1
   136fc:	cmp	w8, #0x0
   13700:	csinc	w1, w8, wzr, ne  // ne = any
   13704:	bl	c420 <mpfr_underflow@plt>
   13708:	ldr	w22, [sp, #12]
   1370c:	mov	w20, w0
   13710:	orr	w22, w22, #0x1
   13714:	b	13800 <mpfr_exp_3@@Base+0x614>
   13718:	ldr	w3, [x24, #8]
   1371c:	ldr	x23, [sp, #48]
   13720:	mov	x1, x24
   13724:	ldr	w24, [sp, #36]
   13728:	mov	x0, x23
   1372c:	mov	w2, w24
   13730:	bl	c6f0 <mpfr_set4@plt>
   13734:	mov	w20, w0
   13738:	cbz	w19, 13758 <mpfr_exp_3@@Base+0x56c>
   1373c:	ldr	x19, [x23, #16]
   13740:	ldr	x21, [sp, #16]
   13744:	cmp	x19, x22
   13748:	ldr	w22, [sp, #12]
   1374c:	b.ge	13858 <mpfr_exp_3@@Base+0x66c>  // b.tcont
   13750:	ldr	x19, [sp, #24]
   13754:	b	13760 <mpfr_exp_3@@Base+0x574>
   13758:	ldp	x21, x19, [sp, #16]
   1375c:	ldr	w22, [sp, #12]
   13760:	sub	x0, x29, #0x78
   13764:	bl	c210 <mpfr_mpz_clear@plt>
   13768:	sub	x0, x29, #0x68
   1376c:	bl	c110 <mpfr_clear@plt>
   13770:	sub	x0, x29, #0x28
   13774:	bl	c110 <mpfr_clear@plt>
   13778:	sub	x0, x29, #0x48
   1377c:	bl	c110 <mpfr_clear@plt>
   13780:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13784:	ldr	x1, [x0, #2656]
   13788:	add	x0, x0, #0xa60
   1378c:	blr	x1
   13790:	ldr	x8, [sp, #96]
   13794:	str	w22, [x8, x0]
   13798:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1379c:	ldr	x1, [x0, #2592]
   137a0:	add	x0, x0, #0xa20
   137a4:	blr	x1
   137a8:	str	x19, [x8, x0]
   137ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   137b0:	ldr	x1, [x0, #2624]
   137b4:	add	x0, x0, #0xa40
   137b8:	blr	x1
   137bc:	str	x21, [x8, x0]
   137c0:	mov	w0, w20
   137c4:	ldp	x20, x19, [sp, #336]
   137c8:	ldp	x22, x21, [sp, #320]
   137cc:	ldp	x24, x23, [sp, #304]
   137d0:	ldp	x26, x25, [sp, #288]
   137d4:	ldp	x28, x27, [sp, #272]
   137d8:	ldp	x29, x30, [sp, #256]
   137dc:	add	sp, sp, #0x160
   137e0:	ret
   137e4:	ldr	x0, [sp, #48]
   137e8:	ldr	w1, [sp, #36]
   137ec:	mov	w2, #0x1                   	// #1
   137f0:	bl	bff0 <mpfr_overflow@plt>
   137f4:	ldr	w22, [sp, #12]
   137f8:	mov	w20, w0
   137fc:	orr	w22, w22, #0x2
   13800:	ldp	x21, x19, [sp, #16]
   13804:	b	13760 <mpfr_exp_3@@Base+0x574>
   13808:	str	xzr, [sp, #88]
   1380c:	b	1329c <mpfr_exp_3@@Base+0xb0>
   13810:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   13814:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   13818:	add	x0, x0, #0x126
   1381c:	add	x2, x2, #0x12d
   13820:	mov	w1, #0xb7                  	// #183
   13824:	bl	cb90 <mpfr_assert_fail@plt>
   13828:	ldr	x1, [x20]
   1382c:	b	13284 <mpfr_exp_3@@Base+0x98>
   13830:	mov	x8, xzr
   13834:	b	13330 <mpfr_exp_3@@Base+0x144>
   13838:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1383c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   13840:	add	x0, x0, #0x126
   13844:	add	x2, x2, #0x145
   13848:	mov	w1, #0xcb                  	// #203
   1384c:	bl	cb90 <mpfr_assert_fail@plt>
   13850:	ldr	x8, [x23]
   13854:	b	13318 <mpfr_exp_3@@Base+0x12c>
   13858:	mov	x2, #0xfffffffffffffffe    	// #-2
   1385c:	mov	x0, x23
   13860:	mov	x1, x23
   13864:	mov	w3, w24
   13868:	bl	bc40 <mpfr_mul_2si@plt>
   1386c:	cbz	w0, 13750 <mpfr_exp_3@@Base+0x564>
   13870:	mov	w8, w0
   13874:	cbnz	w24, 138cc <mpfr_exp_3@@Base+0x6e0>
   13878:	tbz	w20, #31, 138cc <mpfr_exp_3@@Base+0x6e0>
   1387c:	ldr	x9, [x23, #16]
   13880:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   13884:	cmp	x9, x10
   13888:	b.ne	138cc <mpfr_exp_3@@Base+0x6e0>  // b.any
   1388c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13890:	ldr	x1, [x0, #2592]
   13894:	add	x0, x0, #0xa20
   13898:	blr	x1
   1389c:	ldr	x9, [sp, #96]
   138a0:	ldr	x9, [x9, x0]
   138a4:	add	x9, x9, #0x1
   138a8:	cmp	x19, x9
   138ac:	ldr	x19, [sp, #24]
   138b0:	b.ne	138d0 <mpfr_exp_3@@Base+0x6e4>  // b.any
   138b4:	ldr	x0, [sp, #48]
   138b8:	mov	w1, #0x2                   	// #2
   138bc:	mov	w2, #0x1                   	// #1
   138c0:	bl	c420 <mpfr_underflow@plt>
   138c4:	mov	w8, w0
   138c8:	b	138d0 <mpfr_exp_3@@Base+0x6e4>
   138cc:	ldr	x19, [sp, #24]
   138d0:	orr	w22, w22, #0x1
   138d4:	mov	w20, w8
   138d8:	b	13760 <mpfr_exp_3@@Base+0x574>
   138dc:	sub	sp, sp, #0xe0
   138e0:	stp	x29, x30, [sp, #128]
   138e4:	stp	x28, x27, [sp, #144]
   138e8:	stp	x26, x25, [sp, #160]
   138ec:	stp	x24, x23, [sp, #176]
   138f0:	stp	x22, x21, [sp, #192]
   138f4:	stp	x20, x19, [sp, #208]
   138f8:	ldr	x22, [x0]
   138fc:	mov	x23, x5
   13900:	mov	x20, x4
   13904:	mov	w24, w3
   13908:	mov	x25, x2
   1390c:	cmp	w3, #0x3f
   13910:	mov	x27, x1
   13914:	add	x29, sp, #0x80
   13918:	str	x0, [sp, #8]
   1391c:	b.cs	13d90 <mpfr_exp_3@@Base+0xba4>  // b.hs, b.nlast
   13920:	sxtw	x8, w24
   13924:	add	x28, x8, #0x1
   13928:	lsl	w19, w28, #1
   1392c:	add	x8, x23, x28, lsl #3
   13930:	mov	x0, x27
   13934:	mov	x1, xzr
   13938:	add	x21, x20, x28, lsl #4
   1393c:	stur	x20, [x29, #-8]
   13940:	add	x20, x20, w19, sxtw #4
   13944:	str	x8, [sp, #56]
   13948:	bl	bb50 <__gmpz_scan1@plt>
   1394c:	mov	x26, x0
   13950:	tbnz	x0, #63, 13dac <mpfr_exp_3@@Base+0xbc0>
   13954:	mov	x0, x27
   13958:	mov	x1, x27
   1395c:	mov	x2, x26
   13960:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   13964:	mov	x0, x20
   13968:	mov	x1, x27
   1396c:	str	x20, [sp]
   13970:	bl	c050 <__gmpz_set@plt>
   13974:	cmp	w24, #0x2
   13978:	mov	w8, w24
   1397c:	stur	x8, [x29, #-40]
   13980:	b.lt	139ac <mpfr_exp_3@@Base+0x7c0>  // b.tstop
   13984:	ldur	x8, [x29, #-40]
   13988:	ldr	x1, [sp]
   1398c:	sub	x20, x8, #0x1
   13990:	add	x27, x1, #0x10
   13994:	mov	x0, x27
   13998:	mov	x2, x1
   1399c:	bl	c090 <__gmpz_mul@plt>
   139a0:	subs	x20, x20, #0x1
   139a4:	mov	x1, x27
   139a8:	b.ne	13990 <mpfr_exp_3@@Base+0x7a4>  // b.any
   139ac:	sub	x8, x25, x26
   139b0:	ldur	x25, [x29, #-8]
   139b4:	mov	w1, #0x1                   	// #1
   139b8:	stur	x8, [x29, #-32]
   139bc:	mov	x0, x25
   139c0:	bl	bd60 <__gmpz_set_ui@plt>
   139c4:	mov	w1, #0x1                   	// #1
   139c8:	mov	x0, x21
   139cc:	bl	bd60 <__gmpz_set_ui@plt>
   139d0:	ldr	x20, [sp, #56]
   139d4:	mov	x26, xzr
   139d8:	cmp	x22, #0x1
   139dc:	str	xzr, [x23]
   139e0:	str	xzr, [x20]
   139e4:	b.lt	13c8c <mpfr_exp_3@@Base+0xaa0>  // b.tstop
   139e8:	cbz	w24, 13c8c <mpfr_exp_3@@Base+0xaa0>
   139ec:	sxtw	x8, w19
   139f0:	lsl	x9, x28, #4
   139f4:	mov	x24, xzr
   139f8:	mov	w27, wzr
   139fc:	stp	x9, x22, [sp, #32]
   13a00:	sub	x9, x23, #0x8
   13a04:	lsl	x8, x8, #4
   13a08:	mov	w10, #0x1                   	// #1
   13a0c:	stp	x8, x9, [sp, #16]
   13a10:	str	x21, [sp, #48]
   13a14:	add	w27, w27, #0x1
   13a18:	add	x19, x10, #0x1
   13a1c:	add	x0, x25, w27, sxtw #4
   13a20:	mov	x1, x19
   13a24:	mov	x26, x10
   13a28:	str	xzr, [x20, w27, sxtw #3]
   13a2c:	bl	bd60 <__gmpz_set_ui@plt>
   13a30:	add	x0, x21, w27, sxtw #4
   13a34:	mov	x1, x19
   13a38:	bl	bd60 <__gmpz_set_ui@plt>
   13a3c:	mov	x10, x19
   13a40:	tbnz	w10, #0, 13b78 <mpfr_exp_3@@Base+0x98c>
   13a44:	ldr	x9, [sp, #32]
   13a48:	sxtw	x8, w27
   13a4c:	stp	x27, x26, [x29, #-56]
   13a50:	mov	x21, xzr
   13a54:	add	x22, x9, x8, lsl #4
   13a58:	ldp	x20, x9, [sp, #16]
   13a5c:	lsl	x23, x8, #4
   13a60:	mov	x26, x10
   13a64:	str	x10, [sp, #64]
   13a68:	add	x19, x9, x8, lsl #3
   13a6c:	add	x27, x25, x22
   13a70:	add	x2, x25, x20
   13a74:	mov	x0, x27
   13a78:	mov	x1, x27
   13a7c:	stur	x2, [x29, #-16]
   13a80:	bl	c090 <__gmpz_mul@plt>
   13a84:	ldur	x8, [x29, #-8]
   13a88:	mov	x24, x28
   13a8c:	sub	x28, x27, #0x10
   13a90:	mov	x0, x28
   13a94:	add	x25, x8, x23
   13a98:	mov	x1, x28
   13a9c:	mov	x2, x25
   13aa0:	bl	c090 <__gmpz_mul@plt>
   13aa4:	ldur	x8, [x29, #-32]
   13aa8:	mov	x0, x28
   13aac:	mov	x1, x28
   13ab0:	lsl	x2, x8, x21
   13ab4:	stur	x2, [x29, #-24]
   13ab8:	bl	c290 <__gmpz_mul_2exp@plt>
   13abc:	mov	x0, x28
   13ac0:	mov	x1, x28
   13ac4:	mov	x2, x27
   13ac8:	mov	x28, x24
   13acc:	bl	ca10 <__gmpz_add@plt>
   13ad0:	sub	x0, x25, #0x10
   13ad4:	mov	x1, x0
   13ad8:	mov	x2, x25
   13adc:	bl	c090 <__gmpz_mul@plt>
   13ae0:	ldr	x8, [x19, x24, lsl #3]
   13ae4:	ldur	x13, [x29, #-24]
   13ae8:	add	x21, x21, #0x1
   13aec:	mov	w9, w26
   13af0:	add	x8, x8, #0x1
   13af4:	str	x8, [x19, x24, lsl #3]
   13af8:	ldr	w8, [x25, #4]
   13afc:	ldr	x10, [x25, #8]
   13b00:	ldp	x12, x25, [x29, #-16]
   13b04:	lsr	x26, x26, #1
   13b08:	cmp	w8, #0x0
   13b0c:	cneg	w8, w8, mi  // mi = first
   13b10:	ldr	w11, [x12, #4]
   13b14:	ldr	x12, [x12, #8]
   13b18:	add	x10, x10, w8, uxtw #3
   13b1c:	ldur	x10, [x10, #-8]
   13b20:	cmp	w11, #0x0
   13b24:	cneg	w11, w11, mi  // mi = first
   13b28:	add	x12, x12, w11, uxtw #3
   13b2c:	ldur	x12, [x12, #-8]
   13b30:	clz	x10, x10
   13b34:	mvn	x10, x10
   13b38:	add	x10, x13, x10
   13b3c:	ldr	x13, [x19]
   13b40:	clz	x12, x12
   13b44:	add	x8, x10, x8, lsl #6
   13b48:	add	x8, x8, x12
   13b4c:	add	x8, x8, x13
   13b50:	sub	x24, x8, x11, lsl #6
   13b54:	sub	x22, x22, #0x10
   13b58:	sub	x23, x23, #0x10
   13b5c:	stp	x24, x24, [x19], #-8
   13b60:	add	x20, x20, #0x10
   13b64:	tbz	w9, #1, 13a6c <mpfr_exp_3@@Base+0x880>
   13b68:	ldp	x27, x26, [x29, #-56]
   13b6c:	ldp	x20, x10, [sp, #56]
   13b70:	sub	w27, w27, w21
   13b74:	ldp	x22, x21, [sp, #40]
   13b78:	cmp	x24, x22
   13b7c:	b.ge	13b8c <mpfr_exp_3@@Base+0x9a0>  // b.tcont
   13b80:	ldur	x8, [x29, #-40]
   13b84:	lsr	x8, x10, x8
   13b88:	cbz	x8, 13a14 <mpfr_exp_3@@Base+0x828>
   13b8c:	cmp	w27, #0x1
   13b90:	b.lt	13c8c <mpfr_exp_3@@Base+0xaa0>  // b.tstop
   13b94:	ldr	x9, [sp, #32]
   13b98:	mov	x10, x27
   13b9c:	stur	x26, [x29, #-48]
   13ba0:	ldur	x22, [x29, #-32]
   13ba4:	add	x8, x9, w10, uxtw #4
   13ba8:	ldr	x26, [sp]
   13bac:	stur	x8, [x29, #-16]
   13bb0:	sbfiz	x8, x10, #4, #32
   13bb4:	mov	x27, x20
   13bb8:	mov	w20, w10
   13bbc:	add	x9, x9, w10, sxtw #4
   13bc0:	sbfiz	x10, x10, #3, #32
   13bc4:	sub	x8, x8, #0x10
   13bc8:	str	x28, [sp, #64]
   13bcc:	mov	x19, xzr
   13bd0:	lsl	x11, x20, #4
   13bd4:	stur	x8, [x29, #-40]
   13bd8:	sub	x8, x9, #0x10
   13bdc:	sub	x28, x10, #0x8
   13be0:	mov	x21, x25
   13be4:	stur	x11, [x29, #-24]
   13be8:	stur	x8, [x29, #-56]
   13bec:	ldur	x9, [x29, #-16]
   13bf0:	ldr	x8, [x27, x28]
   13bf4:	add	x23, x21, x9
   13bf8:	add	x2, x26, x8, lsl #4
   13bfc:	mov	x0, x23
   13c00:	mov	x1, x23
   13c04:	bl	c090 <__gmpz_mul@plt>
   13c08:	ldur	x8, [x29, #-56]
   13c0c:	add	x24, x21, x8
   13c10:	ldur	x8, [x29, #-24]
   13c14:	mov	x0, x24
   13c18:	mov	x1, x24
   13c1c:	add	x25, x21, x8
   13c20:	mov	x2, x25
   13c24:	bl	c090 <__gmpz_mul@plt>
   13c28:	ldr	x8, [x27, x20, lsl #3]
   13c2c:	mov	w9, #0x1                   	// #1
   13c30:	mov	x0, x24
   13c34:	mov	x1, x24
   13c38:	lsl	x8, x9, x8
   13c3c:	add	x19, x8, x19
   13c40:	mul	x2, x19, x22
   13c44:	bl	c290 <__gmpz_mul_2exp@plt>
   13c48:	mov	x0, x24
   13c4c:	mov	x1, x24
   13c50:	mov	x2, x23
   13c54:	bl	ca10 <__gmpz_add@plt>
   13c58:	ldur	x8, [x29, #-40]
   13c5c:	mov	x2, x25
   13c60:	add	x0, x21, x8
   13c64:	mov	x1, x0
   13c68:	bl	c090 <__gmpz_mul@plt>
   13c6c:	sub	x21, x21, #0x10
   13c70:	subs	x20, x20, #0x1
   13c74:	sub	x28, x28, #0x8
   13c78:	b.gt	13bec <mpfr_exp_3@@Base+0xa00>
   13c7c:	ldur	x25, [x29, #-8]
   13c80:	ldp	x22, x21, [sp, #40]
   13c84:	ldr	x28, [sp, #64]
   13c88:	ldur	x26, [x29, #-48]
   13c8c:	add	x8, x25, x28, lsl #4
   13c90:	ldr	w9, [x8, #4]
   13c94:	ldr	x8, [x8, #8]
   13c98:	cmp	w9, #0x0
   13c9c:	cneg	w9, w9, mi  // mi = first
   13ca0:	add	x8, x8, w9, uxtw #3
   13ca4:	ldur	x8, [x8, #-8]
   13ca8:	lsl	x9, x9, #6
   13cac:	clz	x8, x8
   13cb0:	sub	x8, x9, x8
   13cb4:	subs	x24, x8, x22, lsl #1
   13cb8:	b.mi	13cd0 <mpfr_exp_3@@Base+0xae4>  // b.first
   13cbc:	mov	x0, x21
   13cc0:	mov	x1, x21
   13cc4:	mov	x2, x24
   13cc8:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   13ccc:	b	13ce0 <mpfr_exp_3@@Base+0xaf4>
   13cd0:	neg	x2, x24
   13cd4:	mov	x0, x21
   13cd8:	mov	x1, x21
   13cdc:	bl	c290 <__gmpz_mul_2exp@plt>
   13ce0:	ldr	w8, [x25, #4]
   13ce4:	ldr	x9, [x25, #8]
   13ce8:	cmp	w8, #0x0
   13cec:	cneg	w8, w8, mi  // mi = first
   13cf0:	add	x9, x9, w8, uxtw #3
   13cf4:	ldur	x9, [x9, #-8]
   13cf8:	lsl	x8, x8, #6
   13cfc:	clz	x9, x9
   13d00:	sub	x8, x8, x9
   13d04:	sub	x23, x8, x22
   13d08:	cmp	x23, #0x1
   13d0c:	b.lt	13d24 <mpfr_exp_3@@Base+0xb38>  // b.tstop
   13d10:	mov	x0, x25
   13d14:	mov	x1, x25
   13d18:	mov	x2, x23
   13d1c:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   13d20:	b	13d34 <mpfr_exp_3@@Base+0xb48>
   13d24:	neg	x2, x23
   13d28:	mov	x0, x25
   13d2c:	mov	x1, x25
   13d30:	bl	c290 <__gmpz_mul_2exp@plt>
   13d34:	ldur	x20, [x29, #-32]
   13d38:	mov	x0, x21
   13d3c:	mov	x1, x21
   13d40:	mov	x2, x25
   13d44:	bl	bbe0 <__gmpz_tdiv_q@plt>
   13d48:	ldr	x19, [sp, #8]
   13d4c:	mov	w2, #0x3                   	// #3
   13d50:	mov	x1, x21
   13d54:	mov	x0, x19
   13d58:	bl	c2b0 <mpfr_set_z@plt>
   13d5c:	ldr	x8, [x19, #16]
   13d60:	msub	x9, x26, x20, x24
   13d64:	sub	x9, x9, x23
   13d68:	add	x8, x9, x8
   13d6c:	str	x8, [x19, #16]
   13d70:	ldp	x20, x19, [sp, #208]
   13d74:	ldp	x22, x21, [sp, #192]
   13d78:	ldp	x24, x23, [sp, #176]
   13d7c:	ldp	x26, x25, [sp, #160]
   13d80:	ldp	x28, x27, [sp, #144]
   13d84:	ldp	x29, x30, [sp, #128]
   13d88:	add	sp, sp, #0xe0
   13d8c:	ret
   13d90:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   13d94:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   13d98:	add	x0, x0, #0x126
   13d9c:	add	x2, x2, #0x1e3
   13da0:	mov	w1, #0x34                  	// #52
   13da4:	bl	cb90 <mpfr_assert_fail@plt>
   13da8:	b	13920 <mpfr_exp_3@@Base+0x734>
   13dac:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   13db0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   13db4:	add	x0, x0, #0x126
   13db8:	add	x2, x2, #0x206
   13dbc:	mov	w1, #0x3d                  	// #61
   13dc0:	bl	cb90 <mpfr_assert_fail@plt>
   13dc4:	b	13954 <mpfr_exp_3@@Base+0x768>

0000000000013dc8 <mpfr_exp@@Base>:
   13dc8:	sub	sp, sp, #0xa0
   13dcc:	stp	x29, x30, [sp, #64]
   13dd0:	stp	x28, x27, [sp, #80]
   13dd4:	stp	x26, x25, [sp, #96]
   13dd8:	stp	x24, x23, [sp, #112]
   13ddc:	stp	x22, x21, [sp, #128]
   13de0:	stp	x20, x19, [sp, #144]
   13de4:	ldr	x9, [x1, #16]
   13de8:	mov	x8, #0x2                   	// #2
   13dec:	movk	x8, #0x8000, lsl #48
   13df0:	add	x10, x8, #0x2
   13df4:	mov	w20, w2
   13df8:	mov	x21, x1
   13dfc:	cmp	x9, x10
   13e00:	mov	x19, x0
   13e04:	add	x29, sp, #0x40
   13e08:	b.lt	13fb8 <mpfr_exp@@Base+0x1f0>  // b.tstop
   13e0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13e10:	ldr	x1, [x0, #2624]
   13e14:	add	x0, x0, #0xa40
   13e18:	blr	x1
   13e1c:	mrs	x27, tpidr_el0
   13e20:	ldr	x22, [x27, x0]
   13e24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13e28:	ldr	x1, [x0, #2480]
   13e2c:	add	x0, x0, #0x9b0
   13e30:	blr	x1
   13e34:	ldr	x8, [x27, x0]
   13e38:	cmp	x22, x8
   13e3c:	b.ne	14000 <mpfr_exp@@Base+0x238>  // b.any
   13e40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13e44:	ldr	x1, [x0, #2416]
   13e48:	add	x0, x0, #0x970
   13e4c:	blr	x1
   13e50:	add	x1, x27, x0
   13e54:	mov	w2, #0x1                   	// #1
   13e58:	mov	x0, x21
   13e5c:	bl	c9f0 <mpfr_cmp3@plt>
   13e60:	tbz	w0, #31, 1410c <mpfr_exp@@Base+0x344>
   13e64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13e68:	ldr	x1, [x0, #2592]
   13e6c:	add	x0, x0, #0xa20
   13e70:	blr	x1
   13e74:	ldr	x22, [x27, x0]
   13e78:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13e7c:	ldr	x1, [x0, #2496]
   13e80:	add	x0, x0, #0x9c0
   13e84:	blr	x1
   13e88:	ldr	x8, [x27, x0]
   13e8c:	cmp	x22, x8
   13e90:	b.ne	14120 <mpfr_exp@@Base+0x358>  // b.any
   13e94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13e98:	ldr	x1, [x0, #2448]
   13e9c:	add	x0, x0, #0x990
   13ea0:	blr	x1
   13ea4:	add	x1, x27, x0
   13ea8:	mov	w2, #0x1                   	// #1
   13eac:	mov	x0, x21
   13eb0:	bl	c9f0 <mpfr_cmp3@plt>
   13eb4:	cmp	w0, #0x0
   13eb8:	b.le	1425c <mpfr_exp@@Base+0x494>
   13ebc:	ldr	x9, [x21, #16]
   13ec0:	ldr	x8, [x19]
   13ec4:	tbz	x9, #63, 13ed4 <mpfr_exp@@Base+0x10c>
   13ec8:	neg	x9, x9
   13ecc:	cmp	x8, x9
   13ed0:	b.cc	14274 <mpfr_exp@@Base+0x4ac>  // b.lo, b.ul, b.last
   13ed4:	mov	w9, #0x61a8                	// #25000
   13ed8:	cmp	x8, x9
   13edc:	b.ge	142dc <mpfr_exp@@Base+0x514>  // b.tcont
   13ee0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13ee4:	ldr	x1, [x0, #2656]
   13ee8:	add	x0, x0, #0xa60
   13eec:	blr	x1
   13ef0:	ldr	w28, [x27, x0]
   13ef4:	mov	x22, x0
   13ef8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13efc:	ldr	x1, [x0, #2592]
   13f00:	add	x0, x0, #0xa20
   13f04:	blr	x1
   13f08:	ldr	x25, [x27, x0]
   13f0c:	mov	x23, x0
   13f10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13f14:	ldr	x1, [x0, #2624]
   13f18:	add	x0, x0, #0xa40
   13f1c:	blr	x1
   13f20:	ldr	x26, [x27, x0]
   13f24:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   13f28:	str	x8, [x27, x23]
   13f2c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   13f30:	mov	x24, x0
   13f34:	str	x8, [x27, x0]
   13f38:	mov	x0, x19
   13f3c:	mov	x1, x21
   13f40:	mov	w2, w20
   13f44:	bl	c8c0 <mpfr_exp_2@plt>
   13f48:	ldr	w9, [x27, x22]
   13f4c:	mov	w8, w0
   13f50:	str	x25, [x27, x23]
   13f54:	str	x26, [x27, x24]
   13f58:	orr	w9, w9, w28
   13f5c:	str	w9, [x27, x22]
   13f60:	ldr	x9, [x19, #16]
   13f64:	cmp	x9, x25
   13f68:	b.lt	1431c <mpfr_exp@@Base+0x554>  // b.tstop
   13f6c:	cmp	x9, x26
   13f70:	b.gt	1431c <mpfr_exp@@Base+0x554>
   13f74:	cbz	w8, 13f94 <mpfr_exp@@Base+0x1cc>
   13f78:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13f7c:	ldr	x1, [x0, #2656]
   13f80:	add	x0, x0, #0xa60
   13f84:	blr	x1
   13f88:	ldr	w9, [x27, x0]
   13f8c:	orr	w9, w9, #0x8
   13f90:	str	w9, [x27, x0]
   13f94:	ldp	x20, x19, [sp, #144]
   13f98:	ldp	x22, x21, [sp, #128]
   13f9c:	ldp	x24, x23, [sp, #112]
   13fa0:	ldp	x26, x25, [sp, #96]
   13fa4:	ldp	x28, x27, [sp, #80]
   13fa8:	ldp	x29, x30, [sp, #64]
   13fac:	mov	w0, w8
   13fb0:	add	sp, sp, #0xa0
   13fb4:	ret
   13fb8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   13fbc:	cmp	x9, x10
   13fc0:	b.eq	14368 <mpfr_exp@@Base+0x5a0>  // b.none
   13fc4:	mov	x10, #0x2                   	// #2
   13fc8:	movk	x10, #0x8000, lsl #48
   13fcc:	cmp	x9, x10
   13fd0:	b.ne	1438c <mpfr_exp@@Base+0x5c4>  // b.any
   13fd4:	str	x8, [x19, #16]
   13fd8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   13fdc:	ldr	x1, [x0, #2656]
   13fe0:	add	x0, x0, #0xa60
   13fe4:	blr	x1
   13fe8:	mrs	x9, tpidr_el0
   13fec:	ldr	w10, [x9, x0]
   13ff0:	mov	w8, wzr
   13ff4:	orr	w10, w10, #0x4
   13ff8:	str	w10, [x9, x0]
   13ffc:	b	13f94 <mpfr_exp@@Base+0x1cc>
   14000:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14004:	ldr	x1, [x0, #2656]
   14008:	add	x0, x0, #0xa60
   1400c:	blr	x1
   14010:	ldr	w8, [x27, x0]
   14014:	mov	x23, x0
   14018:	str	w8, [sp, #20]
   1401c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14020:	ldr	x1, [x0, #2592]
   14024:	add	x0, x0, #0xa20
   14028:	blr	x1
   1402c:	ldr	x28, [x27, x0]
   14030:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   14034:	mov	x24, x0
   14038:	str	x8, [x27, x0]
   1403c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14040:	ldr	x1, [x0, #2624]
   14044:	add	x0, x0, #0xa40
   14048:	blr	x1
   1404c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   14050:	mov	w9, #0x40                  	// #64
   14054:	sub	x10, x29, #0x8
   14058:	mov	w11, #0x1                   	// #1
   1405c:	mov	x25, x0
   14060:	str	x8, [x27, x0]
   14064:	str	x9, [sp, #24]
   14068:	str	x10, [sp, #48]
   1406c:	str	w11, [sp, #32]
   14070:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14074:	ldr	x1, [x0, #2416]
   14078:	add	x0, x0, #0x970
   1407c:	blr	x1
   14080:	add	x26, x27, x0
   14084:	mov	w8, #0x20                  	// #32
   14088:	str	x8, [x26]
   1408c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14090:	ldr	x1, [x0, #2432]
   14094:	add	x0, x0, #0x980
   14098:	blr	x1
   1409c:	add	x8, x27, x0
   140a0:	add	x0, sp, #0x18
   140a4:	mov	x1, x22
   140a8:	mov	x2, xzr
   140ac:	mov	w3, wzr
   140b0:	str	x8, [x26, #24]
   140b4:	str	w11, [x26, #8]
   140b8:	bl	bb40 <mpfr_set_si_2exp@plt>
   140bc:	adrp	x8, 70000 <__gmpfr_l2b@@Base+0x2e0>
   140c0:	adrp	x9, 70000 <__gmpfr_l2b@@Base+0x2e0>
   140c4:	ldr	x8, [x8, #4048]
   140c8:	ldr	x9, [x9, #3992]
   140cc:	cmp	x22, #0x0
   140d0:	add	x2, sp, #0x18
   140d4:	mov	w3, #0x2                   	// #2
   140d8:	csel	x1, x9, x8, lt  // lt = tstop
   140dc:	mov	x0, x26
   140e0:	bl	be00 <mpfr_mul@plt>
   140e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   140e8:	ldr	x1, [x0, #2480]
   140ec:	add	x0, x0, #0x9b0
   140f0:	blr	x1
   140f4:	ldr	w8, [sp, #20]
   140f8:	str	x22, [x27, x0]
   140fc:	str	x28, [x27, x24]
   14100:	str	x22, [x27, x25]
   14104:	str	w8, [x27, x23]
   14108:	b	13e40 <mpfr_exp@@Base+0x78>
   1410c:	mov	w2, #0x1                   	// #1
   14110:	mov	x0, x19
   14114:	mov	w1, w20
   14118:	bl	bff0 <mpfr_overflow@plt>
   1411c:	b	1432c <mpfr_exp@@Base+0x564>
   14120:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14124:	ldr	x1, [x0, #2656]
   14128:	add	x0, x0, #0xa60
   1412c:	blr	x1
   14130:	ldr	w8, [x27, x0]
   14134:	mov	x23, x0
   14138:	str	w8, [sp, #20]
   1413c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14140:	ldr	x1, [x0, #2624]
   14144:	add	x0, x0, #0xa40
   14148:	blr	x1
   1414c:	ldr	x8, [x27, x0]
   14150:	mov	x24, x0
   14154:	str	x8, [sp, #8]
   14158:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1415c:	ldr	x1, [x0, #2592]
   14160:	add	x0, x0, #0xa20
   14164:	blr	x1
   14168:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   1416c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   14170:	mov	w10, #0x3f                  	// #63
   14174:	sub	x11, x29, #0x8
   14178:	mov	w12, #0x1                   	// #1
   1417c:	mov	x25, x0
   14180:	str	x8, [x27, x0]
   14184:	str	x9, [x27, x24]
   14188:	str	x10, [sp, #24]
   1418c:	str	x11, [sp, #48]
   14190:	str	w12, [sp, #32]
   14194:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14198:	ldr	x1, [x0, #2448]
   1419c:	add	x0, x0, #0x990
   141a0:	blr	x1
   141a4:	add	x26, x27, x0
   141a8:	mov	w8, #0x20                  	// #32
   141ac:	str	x8, [x26]
   141b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   141b4:	ldr	x1, [x0, #2464]
   141b8:	add	x0, x0, #0x9a0
   141bc:	blr	x1
   141c0:	add	x8, x27, x0
   141c4:	add	x0, sp, #0x18
   141c8:	mov	x1, x22
   141cc:	mov	x2, xzr
   141d0:	mov	w3, wzr
   141d4:	str	x8, [x26, #24]
   141d8:	str	w12, [x26, #8]
   141dc:	bl	bb40 <mpfr_set_si_2exp@plt>
   141e0:	add	x0, sp, #0x18
   141e4:	add	x1, sp, #0x18
   141e8:	mov	w2, #0x2                   	// #2
   141ec:	mov	w3, wzr
   141f0:	mov	w28, #0x2                   	// #2
   141f4:	bl	c580 <mpfr_sub_ui@plt>
   141f8:	cmp	x22, #0x0
   141fc:	cinc	w2, w28, ge  // ge = tcont
   14200:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14204:	ldr	x1, [x0, #2640]
   14208:	add	x0, x0, #0xa50
   1420c:	blr	x1
   14210:	add	x1, x27, x0
   14214:	mov	x0, x26
   14218:	bl	c3e0 <mpfr_cache@plt>
   1421c:	add	x2, sp, #0x18
   14220:	mov	w3, #0x3                   	// #3
   14224:	mov	x0, x26
   14228:	mov	x1, x26
   1422c:	bl	be00 <mpfr_mul@plt>
   14230:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14234:	ldr	x1, [x0, #2496]
   14238:	add	x0, x0, #0x9c0
   1423c:	blr	x1
   14240:	ldr	w8, [sp, #20]
   14244:	str	x22, [x27, x0]
   14248:	str	x22, [x27, x25]
   1424c:	str	w8, [x27, x23]
   14250:	ldr	x8, [sp, #8]
   14254:	str	x8, [x27, x24]
   14258:	b	13e94 <mpfr_exp@@Base+0xcc>
   1425c:	cmp	w20, #0x0
   14260:	csinc	w1, w20, wzr, ne  // ne = any
   14264:	mov	w2, #0x1                   	// #1
   14268:	mov	x0, x19
   1426c:	bl	c420 <mpfr_underflow@plt>
   14270:	b	1432c <mpfr_exp@@Base+0x564>
   14274:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14278:	ldr	x1, [x0, #2592]
   1427c:	add	x0, x0, #0xa20
   14280:	blr	x1
   14284:	ldr	x25, [x27, x0]
   14288:	mov	x8, x0
   1428c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14290:	ldr	x1, [x0, #2624]
   14294:	add	x0, x0, #0xa40
   14298:	blr	x1
   1429c:	ldr	x26, [x27, x0]
   142a0:	ldr	w21, [x21, #8]
   142a4:	str	xzr, [x27, x8]
   142a8:	mov	w8, #0x2                   	// #2
   142ac:	str	x8, [x27, x0]
   142b0:	orr	w8, w20, #0x2
   142b4:	mov	w9, #0x1                   	// #1
   142b8:	cmp	w8, #0x3
   142bc:	str	w9, [x19, #8]
   142c0:	b.ne	14334 <mpfr_exp@@Base+0x56c>  // b.any
   142c4:	tbz	w21, #31, 14334 <mpfr_exp@@Base+0x56c>
   142c8:	mov	x0, x19
   142cc:	mov	x1, xzr
   142d0:	bl	c170 <mpfr_setmax@plt>
   142d4:	mov	w8, #0xffffffff            	// #-1
   142d8:	b	143c0 <mpfr_exp@@Base+0x5f8>
   142dc:	mov	x0, x19
   142e0:	mov	x1, x21
   142e4:	mov	w2, w20
   142e8:	bl	bed0 <mpfr_exp_3@plt>
   142ec:	mov	w8, w0
   142f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   142f4:	ldr	x1, [x0, #2592]
   142f8:	add	x0, x0, #0xa20
   142fc:	blr	x1
   14300:	ldr	x25, [x27, x0]
   14304:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14308:	ldr	x1, [x0, #2624]
   1430c:	add	x0, x0, #0xa40
   14310:	blr	x1
   14314:	ldr	x26, [x27, x0]
   14318:	b	13f60 <mpfr_exp@@Base+0x198>
   1431c:	mov	x0, x19
   14320:	mov	w1, w8
   14324:	mov	w2, w20
   14328:	bl	cb80 <mpfr_check_range@plt>
   1432c:	mov	w8, w0
   14330:	b	13f94 <mpfr_exp@@Base+0x1cc>
   14334:	mov	w1, #0x1                   	// #1
   14338:	mov	x0, x19
   1433c:	bl	c310 <mpfr_setmin@plt>
   14340:	cmp	w21, #0x1
   14344:	b.lt	143bc <mpfr_exp@@Base+0x5f4>  // b.tstop
   14348:	cmp	w20, #0x4
   1434c:	b.eq	14358 <mpfr_exp@@Base+0x590>  // b.none
   14350:	cmp	w20, #0x2
   14354:	b.ne	143bc <mpfr_exp@@Base+0x5f4>  // b.any
   14358:	mov	x0, x19
   1435c:	bl	c1c0 <mpfr_nextabove@plt>
   14360:	mov	w8, #0x1                   	// #1
   14364:	b	143c0 <mpfr_exp@@Base+0x5f8>
   14368:	ldr	w9, [x21, #8]
   1436c:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   14370:	mov	w12, #0x1                   	// #1
   14374:	mov	w8, wzr
   14378:	cmp	w9, #0x0
   1437c:	csel	x9, x10, x11, gt
   14380:	str	x9, [x19, #16]
   14384:	str	w12, [x19, #8]
   14388:	b	13f94 <mpfr_exp@@Base+0x1cc>
   1438c:	mov	x0, x19
   14390:	mov	w3, w20
   14394:	ldp	x20, x19, [sp, #144]
   14398:	ldp	x22, x21, [sp, #128]
   1439c:	ldp	x24, x23, [sp, #112]
   143a0:	ldp	x26, x25, [sp, #96]
   143a4:	ldp	x28, x27, [sp, #80]
   143a8:	ldp	x29, x30, [sp, #64]
   143ac:	mov	w1, #0x1                   	// #1
   143b0:	mov	x2, xzr
   143b4:	add	sp, sp, #0xa0
   143b8:	b	c640 <mpfr_set_ui_2exp@plt>
   143bc:	neg	w8, w21
   143c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   143c4:	ldr	x1, [x0, #2592]
   143c8:	add	x0, x0, #0xa20
   143cc:	blr	x1
   143d0:	str	x25, [x27, x0]
   143d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   143d8:	ldr	x1, [x0, #2624]
   143dc:	add	x0, x0, #0xa40
   143e0:	blr	x1
   143e4:	str	x26, [x27, x0]
   143e8:	b	13f60 <mpfr_exp@@Base+0x198>

00000000000143ec <mpfr_frac@@Base>:
   143ec:	sub	sp, sp, #0x90
   143f0:	stp	x29, x30, [sp, #48]
   143f4:	stp	x28, x27, [sp, #64]
   143f8:	stp	x26, x25, [sp, #80]
   143fc:	stp	x24, x23, [sp, #96]
   14400:	stp	x22, x21, [sp, #112]
   14404:	stp	x20, x19, [sp, #128]
   14408:	ldr	x8, [x1, #16]
   1440c:	mov	x9, #0x2                   	// #2
   14410:	movk	x9, #0x8000, lsl #48
   14414:	mov	x20, x0
   14418:	cmp	x8, x9
   1441c:	add	x29, sp, #0x30
   14420:	b.eq	14734 <mpfr_frac@@Base+0x348>  // b.none
   14424:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   14428:	mov	x21, x1
   1442c:	cmp	x8, x9
   14430:	b.eq	1471c <mpfr_frac@@Base+0x330>  // b.none
   14434:	mov	x0, x21
   14438:	mov	w19, w2
   1443c:	bl	c200 <mpfr_integer_p@plt>
   14440:	cbnz	w0, 1471c <mpfr_frac@@Base+0x330>
   14444:	ldr	x8, [x21, #16]
   14448:	cmp	x8, #0x0
   1444c:	b.le	144a0 <mpfr_frac@@Base+0xb4>
   14450:	ldr	x9, [x21]
   14454:	ldr	x22, [x21, #24]
   14458:	str	w19, [sp, #8]
   1445c:	and	x19, x8, #0x3f
   14460:	sub	x10, x9, #0x1
   14464:	add	x9, x9, #0x3e
   14468:	cmp	x10, #0x0
   1446c:	csel	x9, x9, x10, lt  // lt = tstop
   14470:	asr	x9, x9, #6
   14474:	sub	x23, x9, x8, lsr #6
   14478:	ldr	x10, [x22, x23, lsl #3]
   1447c:	lsl	x24, x10, x8
   14480:	cbz	x24, 144bc <mpfr_frac@@Base+0xd0>
   14484:	clz	x27, x24
   14488:	add	w25, w27, w19
   1448c:	cmp	w25, #0x40
   14490:	neg	x26, x27
   14494:	b.cs	14790 <mpfr_frac@@Base+0x3a4>  // b.hs, b.nlast
   14498:	lsl	x28, x24, x27
   1449c:	b	144f0 <mpfr_frac@@Base+0x104>
   144a0:	ldr	w3, [x21, #8]
   144a4:	mov	x0, x20
   144a8:	mov	x1, x21
   144ac:	mov	w2, w19
   144b0:	bl	c6f0 <mpfr_set4@plt>
   144b4:	mov	w8, w0
   144b8:	b	146f0 <mpfr_frac@@Base+0x304>
   144bc:	lsr	x8, x8, #6
   144c0:	sub	x8, x9, x8
   144c4:	add	x24, x22, x8, lsl #3
   144c8:	ldr	x8, [x24, #-8]!
   144cc:	sub	x19, x19, #0x40
   144d0:	sub	x23, x23, #0x1
   144d4:	cbz	x8, 144c8 <mpfr_frac@@Base+0xdc>
   144d8:	add	x9, x23, #0x1
   144dc:	cmp	x9, #0x0
   144e0:	b.le	147ac <mpfr_frac@@Base+0x3c0>
   144e4:	clz	x25, x8
   144e8:	sub	x26, x19, x25
   144ec:	lsl	x28, x8, x25
   144f0:	ldr	x8, [x20]
   144f4:	mov	x24, x20
   144f8:	sub	x9, x8, #0x1
   144fc:	add	x8, x8, #0x3e
   14500:	cmp	x9, #0x0
   14504:	csel	x8, x8, x9, lt  // lt = tstop
   14508:	asr	x27, x8, #6
   1450c:	cmp	x27, x23
   14510:	b.ge	14540 <mpfr_frac@@Base+0x154>  // b.tcont
   14514:	lsl	x8, x23, #6
   14518:	add	x1, x8, #0x40
   1451c:	add	x0, sp, #0x10
   14520:	add	x24, sp, #0x10
   14524:	bl	cad0 <mpfr_init2@plt>
   14528:	ldr	x8, [sp, #16]
   1452c:	sub	x9, x8, #0x1
   14530:	add	x8, x8, #0x3e
   14534:	cmp	x9, #0x0
   14538:	csel	x8, x8, x9, lt  // lt = tstop
   1453c:	asr	x27, x8, #6
   14540:	ldr	w8, [x21, #8]
   14544:	subs	x19, x27, x23
   14548:	str	w8, [x24, #8]
   1454c:	b.lt	14760 <mpfr_frac@@Base+0x374>  // b.tstop
   14550:	ldr	x21, [x24, #24]
   14554:	cbz	w25, 14574 <mpfr_frac@@Base+0x188>
   14558:	cbz	x23, 14588 <mpfr_frac@@Base+0x19c>
   1455c:	add	x0, x21, x19, lsl #3
   14560:	mov	x1, x22
   14564:	mov	x2, x23
   14568:	mov	w3, w25
   1456c:	bl	bd70 <__gmpn_lshift@plt>
   14570:	b	1458c <mpfr_frac@@Base+0x1a0>
   14574:	add	x0, x21, x19, lsl #3
   14578:	add	x2, x23, #0x1
   1457c:	mov	x1, x22
   14580:	bl	bba0 <__gmpn_copyd@plt>
   14584:	b	14594 <mpfr_frac@@Base+0x1a8>
   14588:	mov	x0, xzr
   1458c:	orr	x8, x0, x28
   14590:	str	x8, [x21, x27, lsl #3]
   14594:	cmp	x19, #0x1
   14598:	b.lt	145ac <mpfr_frac@@Base+0x1c0>  // b.tstop
   1459c:	lsl	x2, x19, #3
   145a0:	mov	x0, x21
   145a4:	mov	w1, wzr
   145a8:	bl	c1b0 <memset@plt>
   145ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   145b0:	ldr	x1, [x0, #2656]
   145b4:	add	x0, x0, #0xa60
   145b8:	blr	x1
   145bc:	mrs	x22, tpidr_el0
   145c0:	ldr	w23, [x22, x0]
   145c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   145c8:	ldr	x1, [x0, #2592]
   145cc:	add	x0, x0, #0xa20
   145d0:	blr	x1
   145d4:	ldr	x25, [x22, x0]
   145d8:	mov	x8, x0
   145dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   145e0:	ldr	x1, [x0, #2624]
   145e4:	add	x0, x0, #0xa40
   145e8:	blr	x1
   145ec:	ldr	x28, [x22, x0]
   145f0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   145f4:	str	x9, [x22, x8]
   145f8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   145fc:	cmp	x24, x20
   14600:	str	x8, [x22, x0]
   14604:	b.eq	1463c <mpfr_frac@@Base+0x250>  // b.none
   14608:	ldr	w19, [sp, #8]
   1460c:	ldr	w3, [x24, #8]
   14610:	mov	x0, x20
   14614:	mov	x1, x24
   14618:	mov	w2, w19
   1461c:	str	xzr, [x24, #16]
   14620:	bl	c6f0 <mpfr_set4@plt>
   14624:	str	w0, [sp, #12]
   14628:	mov	x0, x24
   1462c:	bl	c110 <mpfr_clear@plt>
   14630:	ldr	x8, [x20, #16]
   14634:	add	x9, x8, x26
   14638:	b	14680 <mpfr_frac@@Base+0x294>
   1463c:	ldr	w8, [x20, #8]
   14640:	ldr	w19, [sp, #8]
   14644:	ldr	x4, [x20]
   14648:	lsl	x9, x27, #6
   1464c:	add	x2, x9, #0x40
   14650:	lsr	w3, w8, #31
   14654:	add	x6, sp, #0xc
   14658:	mov	x0, x21
   1465c:	mov	x1, x21
   14660:	mov	w5, w19
   14664:	str	x26, [x20, #16]
   14668:	bl	ca70 <mpfr_round_raw@plt>
   1466c:	cbz	w0, 14714 <mpfr_frac@@Base+0x328>
   14670:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   14674:	str	x8, [x21, x27, lsl #3]
   14678:	ldr	x8, [x20, #16]
   1467c:	add	x9, x8, #0x1
   14680:	str	x9, [x20, #16]
   14684:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14688:	ldr	x1, [x0, #2656]
   1468c:	add	x0, x0, #0xa60
   14690:	blr	x1
   14694:	str	w23, [x22, x0]
   14698:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1469c:	ldr	x1, [x0, #2592]
   146a0:	add	x0, x0, #0xa20
   146a4:	blr	x1
   146a8:	str	x25, [x22, x0]
   146ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   146b0:	ldr	x1, [x0, #2624]
   146b4:	add	x0, x0, #0xa40
   146b8:	blr	x1
   146bc:	ldr	w8, [sp, #12]
   146c0:	cmp	x9, x28
   146c4:	str	x28, [x22, x0]
   146c8:	b.gt	1477c <mpfr_frac@@Base+0x390>
   146cc:	cmp	x9, x25
   146d0:	b.lt	1477c <mpfr_frac@@Base+0x390>  // b.tstop
   146d4:	cbz	w8, 146f0 <mpfr_frac@@Base+0x304>
   146d8:	orr	w9, w23, #0x8
   146dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   146e0:	ldr	x1, [x0, #2656]
   146e4:	add	x0, x0, #0xa60
   146e8:	blr	x1
   146ec:	str	w9, [x22, x0]
   146f0:	ldp	x20, x19, [sp, #128]
   146f4:	ldp	x22, x21, [sp, #112]
   146f8:	ldp	x24, x23, [sp, #96]
   146fc:	ldp	x26, x25, [sp, #80]
   14700:	ldp	x28, x27, [sp, #64]
   14704:	ldp	x29, x30, [sp, #48]
   14708:	mov	w0, w8
   1470c:	add	sp, sp, #0x90
   14710:	ret
   14714:	ldr	x9, [x20, #16]
   14718:	b	14684 <mpfr_frac@@Base+0x298>
   1471c:	ldr	w9, [x21, #8]
   14720:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   14724:	mov	w8, wzr
   14728:	str	x10, [x20, #16]
   1472c:	str	w9, [x20, #8]
   14730:	b	146f0 <mpfr_frac@@Base+0x304>
   14734:	str	x9, [x20, #16]
   14738:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1473c:	ldr	x1, [x0, #2656]
   14740:	add	x0, x0, #0xa60
   14744:	blr	x1
   14748:	mrs	x9, tpidr_el0
   1474c:	ldr	w10, [x9, x0]
   14750:	mov	w8, wzr
   14754:	orr	w10, w10, #0x4
   14758:	str	w10, [x9, x0]
   1475c:	b	146f0 <mpfr_frac@@Base+0x304>
   14760:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   14764:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   14768:	add	x0, x0, #0x220
   1476c:	add	x2, x2, #0x23d
   14770:	mov	w1, #0x6b                  	// #107
   14774:	bl	cb90 <mpfr_assert_fail@plt>
   14778:	b	14550 <mpfr_frac@@Base+0x164>
   1477c:	mov	x0, x20
   14780:	mov	w1, w8
   14784:	mov	w2, w19
   14788:	bl	cb80 <mpfr_check_range@plt>
   1478c:	b	144b4 <mpfr_frac@@Base+0xc8>
   14790:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   14794:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   14798:	add	x0, x0, #0x220
   1479c:	add	x2, x2, #0x227
   147a0:	mov	w1, #0x50                  	// #80
   147a4:	bl	cb90 <mpfr_assert_fail@plt>
   147a8:	b	14498 <mpfr_frac@@Base+0xac>
   147ac:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   147b0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   147b4:	add	x0, x0, #0x220
   147b8:	add	x2, x2, #0x235
   147bc:	mov	w1, #0x59                  	// #89
   147c0:	bl	cb90 <mpfr_assert_fail@plt>
   147c4:	ldr	x8, [x24]
   147c8:	b	144e4 <mpfr_frac@@Base+0xf8>

00000000000147cc <mpfr_frexp@@Base>:
   147cc:	stp	x29, x30, [sp, #-80]!
   147d0:	stp	x26, x25, [sp, #16]
   147d4:	stp	x24, x23, [sp, #32]
   147d8:	stp	x22, x21, [sp, #48]
   147dc:	stp	x20, x19, [sp, #64]
   147e0:	ldr	x8, [x2, #16]
   147e4:	mov	x9, #0x2                   	// #2
   147e8:	movk	x9, #0x8000, lsl #48
   147ec:	add	x10, x9, #0x2
   147f0:	mov	x22, x2
   147f4:	mov	x20, x1
   147f8:	cmp	x8, x10
   147fc:	mov	x23, x0
   14800:	mov	x29, sp
   14804:	b.lt	148c8 <mpfr_frexp@@Base+0xfc>  // b.tstop
   14808:	mov	w21, w3
   1480c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14810:	ldr	x1, [x0, #2656]
   14814:	add	x0, x0, #0xa60
   14818:	blr	x1
   1481c:	mrs	x25, tpidr_el0
   14820:	ldr	w26, [x25, x0]
   14824:	str	wzr, [x25, x0]
   14828:	ldr	w3, [x22, #8]
   1482c:	mov	x24, x0
   14830:	mov	x0, x20
   14834:	mov	x1, x22
   14838:	mov	w2, w21
   1483c:	bl	c6f0 <mpfr_set4@plt>
   14840:	ldr	w8, [x25, x24]
   14844:	mov	w19, w0
   14848:	str	w26, [x25, x24]
   1484c:	tbnz	w8, #1, 148fc <mpfr_frexp@@Base+0x130>
   14850:	ldr	x8, [x20, #16]
   14854:	str	x8, [x23]
   14858:	str	xzr, [x20, #16]
   1485c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14860:	ldr	x1, [x0, #2592]
   14864:	add	x0, x0, #0xa20
   14868:	blr	x1
   1486c:	ldr	x8, [x25, x0]
   14870:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14874:	ldr	x1, [x0, #2624]
   14878:	add	x0, x0, #0xa40
   1487c:	blr	x1
   14880:	cmp	x8, #0x0
   14884:	b.gt	14944 <mpfr_frexp@@Base+0x178>
   14888:	ldr	x8, [x25, x0]
   1488c:	tbnz	x8, #63, 14944 <mpfr_frexp@@Base+0x178>
   14890:	cbz	w19, 148ac <mpfr_frexp@@Base+0xe0>
   14894:	orr	w8, w26, #0x8
   14898:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1489c:	ldr	x1, [x0, #2656]
   148a0:	add	x0, x0, #0xa60
   148a4:	blr	x1
   148a8:	str	w8, [x25, x0]
   148ac:	mov	w0, w19
   148b0:	ldp	x20, x19, [sp, #64]
   148b4:	ldp	x22, x21, [sp, #48]
   148b8:	ldp	x24, x23, [sp, #32]
   148bc:	ldp	x26, x25, [sp, #16]
   148c0:	ldp	x29, x30, [sp], #80
   148c4:	ret
   148c8:	cmp	x8, x9
   148cc:	b.ne	14968 <mpfr_frexp@@Base+0x19c>  // b.any
   148d0:	str	x9, [x20, #16]
   148d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   148d8:	ldr	x1, [x0, #2656]
   148dc:	add	x0, x0, #0xa60
   148e0:	blr	x1
   148e4:	mrs	x8, tpidr_el0
   148e8:	ldr	w9, [x8, x0]
   148ec:	mov	w19, wzr
   148f0:	orr	w9, w9, #0x4
   148f4:	str	w9, [x8, x0]
   148f8:	b	148ac <mpfr_frexp@@Base+0xe0>
   148fc:	ldr	x8, [x22, #16]
   14900:	mov	x2, #0xffffffffffffffff    	// #-1
   14904:	mov	x0, x20
   14908:	mov	w3, w21
   1490c:	add	x8, x8, #0x1
   14910:	str	x8, [x23]
   14914:	ldrsw	x1, [x22, #8]
   14918:	bl	bb40 <mpfr_set_si_2exp@plt>
   1491c:	cmp	w0, #0x0
   14920:	csel	w19, w19, w0, eq  // eq = none
   14924:	cbz	w19, 148ac <mpfr_frexp@@Base+0xe0>
   14928:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1492c:	ldr	x1, [x0, #2656]
   14930:	add	x0, x0, #0xa60
   14934:	blr	x1
   14938:	ldr	w8, [x25, x0]
   1493c:	orr	w8, w8, #0x8
   14940:	b	148a8 <mpfr_frexp@@Base+0xdc>
   14944:	mov	x0, x20
   14948:	mov	w1, w19
   1494c:	mov	w2, w21
   14950:	ldp	x20, x19, [sp, #64]
   14954:	ldp	x22, x21, [sp, #48]
   14958:	ldp	x24, x23, [sp, #32]
   1495c:	ldp	x26, x25, [sp, #16]
   14960:	ldp	x29, x30, [sp], #80
   14964:	b	cb80 <mpfr_check_range@plt>
   14968:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1496c:	cmp	x8, x9
   14970:	b.ne	14988 <mpfr_frexp@@Base+0x1bc>  // b.any
   14974:	str	x9, [x20, #16]
   14978:	ldr	w8, [x22, #8]
   1497c:	mov	w19, wzr
   14980:	str	w8, [x20, #8]
   14984:	b	148ac <mpfr_frexp@@Base+0xe0>
   14988:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1498c:	str	x8, [x20, #16]
   14990:	ldr	w8, [x22, #8]
   14994:	mov	w19, wzr
   14998:	str	w8, [x20, #8]
   1499c:	str	xzr, [x23]
   149a0:	b	148ac <mpfr_frexp@@Base+0xe0>

00000000000149a4 <mpfr_get_d@@Base>:
   149a4:	sub	sp, sp, #0x40
   149a8:	stp	x29, x30, [sp, #16]
   149ac:	stp	x22, x21, [sp, #32]
   149b0:	stp	x20, x19, [sp, #48]
   149b4:	ldr	x19, [x0, #16]
   149b8:	mov	x8, #0x2                   	// #2
   149bc:	movk	x8, #0x8000, lsl #48
   149c0:	add	x9, x8, #0x2
   149c4:	cmp	x19, x9
   149c8:	add	x29, sp, #0x10
   149cc:	b.lt	14aa4 <mpfr_get_d@@Base+0x100>  // b.tstop
   149d0:	ldr	w20, [x0, #8]
   149d4:	mov	w8, #0x2                   	// #2
   149d8:	cmp	w20, #0x0
   149dc:	cinc	w8, w8, lt  // lt = tstop
   149e0:	cmp	w1, #0x4
   149e4:	csel	w5, w8, w1, eq  // eq = none
   149e8:	cmn	x19, #0x432
   149ec:	b.le	14ab4 <mpfr_get_d@@Base+0x110>
   149f0:	cmp	x19, #0x401
   149f4:	b.ge	14ae8 <mpfr_get_d@@Base+0x144>  // b.tcont
   149f8:	add	w8, w19, #0x432
   149fc:	cmn	x19, #0x3fd
   14a00:	mov	w9, #0x35                  	// #53
   14a04:	ldr	x1, [x0, #24]
   14a08:	ldr	x2, [x0]
   14a0c:	csel	w22, w8, w9, lt  // lt = tstop
   14a10:	sub	w8, w22, #0x1
   14a14:	lsr	w3, w20, #31
   14a18:	add	w9, w22, #0x3e
   14a1c:	cmp	w8, #0x0
   14a20:	sxtw	x4, w22
   14a24:	add	x0, sp, #0x8
   14a28:	csel	w21, w9, w8, lt  // lt = tstop
   14a2c:	bl	c770 <mpfr_round_raw_4@plt>
   14a30:	cbnz	w0, 14b0c <mpfr_get_d@@Base+0x168>
   14a34:	ldr	d0, [sp, #8]
   14a38:	mov	x8, #0x3bf0000000000000    	// #4318952042648305664
   14a3c:	fmov	d2, x8
   14a40:	cmp	w22, #0x41
   14a44:	ucvtf	d1, d0
   14a48:	fmul	d0, d1, d2
   14a4c:	b.lt	14a7c <mpfr_get_d@@Base+0xd8>  // b.tstop
   14a50:	asr	w9, w21, #6
   14a54:	add	w9, w9, #0x1
   14a58:	mov	w8, #0x1                   	// #1
   14a5c:	sxtw	x9, w9
   14a60:	mov	x10, #0x3bf0000000000000    	// #4318952042648305664
   14a64:	fadd	d0, d0, d1
   14a68:	add	x8, x8, #0x1
   14a6c:	fmov	d2, x10
   14a70:	cmp	x8, x9
   14a74:	fmul	d0, d0, d2
   14a78:	b.lt	14a64 <mpfr_get_d@@Base+0xc0>  // b.tstop
   14a7c:	mov	w0, w19
   14a80:	bl	cbf0 <mpfr_scale2@plt>
   14a84:	fneg	d1, d0
   14a88:	cmp	w20, #0x0
   14a8c:	fcsel	d0, d1, d0, lt  // lt = tstop
   14a90:	ldp	x20, x19, [sp, #48]
   14a94:	ldp	x22, x21, [sp, #32]
   14a98:	ldp	x29, x30, [sp, #16]
   14a9c:	add	sp, sp, #0x40
   14aa0:	ret
   14aa4:	cmp	x19, x8
   14aa8:	b.ne	14b14 <mpfr_get_d@@Base+0x170>  // b.any
   14aac:	mov	x8, #0x7ff8000000000000    	// #9221120237041090560
   14ab0:	b	14b98 <mpfr_get_d@@Base+0x1f4>
   14ab4:	tbnz	w20, #31, 14b3c <mpfr_get_d@@Base+0x198>
   14ab8:	cmp	w5, #0x2
   14abc:	b.eq	14ae0 <mpfr_get_d@@Base+0x13c>  // b.none
   14ac0:	fmov	d0, xzr
   14ac4:	cbnz	w5, 14a90 <mpfr_get_d@@Base+0xec>
   14ac8:	mov	w1, #0x1                   	// #1
   14acc:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   14ad0:	bl	c430 <mpfr_cmp_si_2exp@plt>
   14ad4:	fmov	d0, xzr
   14ad8:	cmp	w0, #0x1
   14adc:	b.lt	14a90 <mpfr_get_d@@Base+0xec>  // b.tstop
   14ae0:	mov	x8, #0x1                   	// #1
   14ae4:	b	14b98 <mpfr_get_d@@Base+0x1f4>
   14ae8:	tbnz	w20, #31, 14b60 <mpfr_get_d@@Base+0x1bc>
   14aec:	orr	w8, w5, #0x2
   14af0:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   14af4:	mov	x10, #0x7fefffffffffffff    	// #9218868437227405311
   14af8:	cmp	w8, #0x3
   14afc:	fmov	d0, x9
   14b00:	fmov	d1, x10
   14b04:	fcsel	d0, d1, d0, eq  // eq = none
   14b08:	b	14a90 <mpfr_get_d@@Base+0xec>
   14b0c:	fmov	d0, #1.000000000000000000e+00
   14b10:	b	14a7c <mpfr_get_d@@Base+0xd8>
   14b14:	ldr	w8, [x0, #8]
   14b18:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   14b1c:	cmp	x19, x9
   14b20:	b.ne	14b80 <mpfr_get_d@@Base+0x1dc>  // b.any
   14b24:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   14b28:	mov	x10, #0xfff0000000000000    	// #-4503599627370496
   14b2c:	cmp	w8, #0x0
   14b30:	fmov	d0, x9
   14b34:	fmov	d1, x10
   14b38:	b	14a8c <mpfr_get_d@@Base+0xe8>
   14b3c:	cmp	w5, #0x3
   14b40:	b.eq	14b94 <mpfr_get_d@@Base+0x1f0>  // b.none
   14b44:	cbnz	w5, 14b58 <mpfr_get_d@@Base+0x1b4>
   14b48:	mov	x1, #0xffffffffffffffff    	// #-1
   14b4c:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   14b50:	bl	c430 <mpfr_cmp_si_2exp@plt>
   14b54:	tbnz	w0, #31, 14b94 <mpfr_get_d@@Base+0x1f0>
   14b58:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   14b5c:	b	14b98 <mpfr_get_d@@Base+0x1f4>
   14b60:	sub	w8, w5, #0x1
   14b64:	mov	x9, #0xfff0000000000000    	// #-4503599627370496
   14b68:	mov	x10, #0xffefffffffffffff    	// #-4503599627370497
   14b6c:	cmp	w8, #0x2
   14b70:	fmov	d0, x9
   14b74:	fmov	d1, x10
   14b78:	fcsel	d0, d1, d0, cc  // cc = lo, ul, last
   14b7c:	b	14a90 <mpfr_get_d@@Base+0xec>
   14b80:	cmp	w8, #0x0
   14b84:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   14b88:	fmov	d0, xzr
   14b8c:	fmov	d1, x8
   14b90:	b	14a8c <mpfr_get_d@@Base+0xe8>
   14b94:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   14b98:	fmov	d0, x8
   14b9c:	b	14a90 <mpfr_get_d@@Base+0xec>

0000000000014ba0 <mpfr_get_d1@@Base>:
   14ba0:	stp	x29, x30, [sp, #-16]!
   14ba4:	mov	x29, sp
   14ba8:	mov	x8, x0
   14bac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14bb0:	ldr	x1, [x0, #2720]
   14bb4:	add	x0, x0, #0xaa0
   14bb8:	blr	x1
   14bbc:	mrs	x9, tpidr_el0
   14bc0:	ldr	w1, [x9, x0]
   14bc4:	mov	x0, x8
   14bc8:	ldp	x29, x30, [sp], #16
   14bcc:	b	bde0 <mpfr_get_d@plt>

0000000000014bd0 <mpfr_get_d_2exp@@Base>:
   14bd0:	sub	sp, sp, #0x50
   14bd4:	stp	x29, x30, [sp, #32]
   14bd8:	stp	x20, x19, [sp, #64]
   14bdc:	ldr	x8, [x1, #16]
   14be0:	str	x21, [sp, #48]
   14be4:	mov	x21, #0x4                   	// #4
   14be8:	movk	x21, #0x8000, lsl #48
   14bec:	mov	x20, x1
   14bf0:	cmp	x8, x21
   14bf4:	mov	x19, x0
   14bf8:	add	x29, sp, #0x20
   14bfc:	b.lt	14cb0 <mpfr_get_d_2exp@@Base+0xe0>  // b.tstop
   14c00:	ldr	x8, [x20]
   14c04:	mov	x0, sp
   14c08:	mov	w1, w2
   14c0c:	str	x8, [sp]
   14c10:	ldr	w8, [x20, #8]
   14c14:	str	w8, [sp, #8]
   14c18:	ldr	x8, [x20, #24]
   14c1c:	stp	xzr, x8, [sp, #16]
   14c20:	bl	bde0 <mpfr_get_d@plt>
   14c24:	ldr	x8, [x20, #16]
   14c28:	cmp	x8, x21
   14c2c:	b.ge	14c38 <mpfr_get_d_2exp@@Base+0x68>  // b.tcont
   14c30:	mov	x20, xzr
   14c34:	b	14c90 <mpfr_get_d_2exp@@Base+0xc0>
   14c38:	fmov	d1, #1.000000000000000000e+00
   14c3c:	fcmp	d0, d1
   14c40:	fmov	d2, #5.000000000000000000e-01
   14c44:	b.ne	14c64 <mpfr_get_d_2exp@@Base+0x94>  // b.any
   14c48:	add	x20, x8, #0x1
   14c4c:	mov	v0.16b, v2.16b
   14c50:	fcmp	d0, d2
   14c54:	b.lt	14c78 <mpfr_get_d_2exp@@Base+0xa8>  // b.tstop
   14c58:	fcmp	d0, d1
   14c5c:	b.mi	14c90 <mpfr_get_d_2exp@@Base+0xc0>  // b.first
   14c60:	b	14c78 <mpfr_get_d_2exp@@Base+0xa8>
   14c64:	fmov	d3, #-1.000000000000000000e+00
   14c68:	fcmp	d0, d3
   14c6c:	b.ne	14ca8 <mpfr_get_d_2exp@@Base+0xd8>  // b.any
   14c70:	add	x20, x8, #0x1
   14c74:	fmov	d0, #-5.000000000000000000e-01
   14c78:	fmov	d1, #-5.000000000000000000e-01
   14c7c:	fcmp	d0, d1
   14c80:	b.hi	14cf8 <mpfr_get_d_2exp@@Base+0x128>  // b.pmore
   14c84:	fmov	d1, #-1.000000000000000000e+00
   14c88:	fcmp	d0, d1
   14c8c:	b.le	14cf8 <mpfr_get_d_2exp@@Base+0x128>
   14c90:	str	x20, [x19]
   14c94:	ldp	x20, x19, [sp, #64]
   14c98:	ldr	x21, [sp, #48]
   14c9c:	ldp	x29, x30, [sp, #32]
   14ca0:	add	sp, sp, #0x50
   14ca4:	ret
   14ca8:	mov	x20, x8
   14cac:	b	14c50 <mpfr_get_d_2exp@@Base+0x80>
   14cb0:	str	xzr, [x19]
   14cb4:	ldr	x9, [x20, #16]
   14cb8:	sub	x8, x21, #0x2
   14cbc:	cmp	x9, x8
   14cc0:	b.ne	14cd0 <mpfr_get_d_2exp@@Base+0x100>  // b.any
   14cc4:	mov	x8, #0x7ff8000000000000    	// #9221120237041090560
   14cc8:	fmov	d0, x8
   14ccc:	b	14c94 <mpfr_get_d_2exp@@Base+0xc4>
   14cd0:	ldr	w8, [x20, #8]
   14cd4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   14cd8:	cmp	x9, x10
   14cdc:	b.ne	14d1c <mpfr_get_d_2exp@@Base+0x14c>  // b.any
   14ce0:	mov	x9, #0x7ff0000000000000    	// #9218868437227405312
   14ce4:	mov	x10, #0xfff0000000000000    	// #-4503599627370496
   14ce8:	cmp	w8, #0x0
   14cec:	fmov	d0, x9
   14cf0:	fmov	d1, x10
   14cf4:	b	14d2c <mpfr_get_d_2exp@@Base+0x15c>
   14cf8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   14cfc:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   14d00:	add	x0, x0, #0x246
   14d04:	add	x2, x2, #0x24e
   14d08:	mov	w1, #0xae                  	// #174
   14d0c:	str	d0, [x29, #24]
   14d10:	bl	cb90 <mpfr_assert_fail@plt>
   14d14:	ldr	d0, [x29, #24]
   14d18:	b	14c90 <mpfr_get_d_2exp@@Base+0xc0>
   14d1c:	cmp	w8, #0x0
   14d20:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   14d24:	fmov	d0, xzr
   14d28:	fmov	d1, x8
   14d2c:	fcsel	d0, d1, d0, lt  // lt = tstop
   14d30:	b	14c94 <mpfr_get_d_2exp@@Base+0xc4>

0000000000014d34 <mpfr_get_exp@@Base>:
   14d34:	stp	x29, x30, [sp, #-32]!
   14d38:	str	x19, [sp, #16]
   14d3c:	mov	x19, x0
   14d40:	ldr	x0, [x0, #16]
   14d44:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   14d48:	mov	x29, sp
   14d4c:	cmp	x0, x8
   14d50:	b.le	14d60 <mpfr_get_exp@@Base+0x2c>
   14d54:	ldr	x19, [sp, #16]
   14d58:	ldp	x29, x30, [sp], #32
   14d5c:	ret
   14d60:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   14d64:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   14d68:	add	x0, x0, #0x287
   14d6c:	add	x2, x2, #0x291
   14d70:	mov	w1, #0x1d                  	// #29
   14d74:	bl	cb90 <mpfr_assert_fail@plt>
   14d78:	ldr	x0, [x19, #16]
   14d7c:	b	14d54 <mpfr_get_exp@@Base+0x20>

0000000000014d80 <mpfr_ceil_mul@@Base>:
   14d80:	sub	sp, sp, #0x40
   14d84:	stp	x29, x30, [sp, #32]
   14d88:	str	x19, [sp, #48]
   14d8c:	adrp	x11, 70000 <__gmpfr_l2b@@Base+0x2e0>
   14d90:	ldr	x11, [x11, #4024]
   14d94:	sxtw	x9, w1
   14d98:	add	x29, sp, #0x20
   14d9c:	mov	x8, x0
   14da0:	sxtw	x10, w2
   14da4:	add	x9, x11, x9, lsl #6
   14da8:	mov	w12, #0x3f                  	// #63
   14dac:	add	x13, x29, #0x18
   14db0:	mov	w14, #0x1                   	// #1
   14db4:	add	x9, x9, x10, lsl #5
   14db8:	mov	x0, sp
   14dbc:	mov	w3, #0x2                   	// #2
   14dc0:	mov	x1, x8
   14dc4:	mov	x2, xzr
   14dc8:	str	x12, [sp]
   14dcc:	str	x13, [sp, #24]
   14dd0:	sub	x19, x9, #0x80
   14dd4:	str	w14, [sp, #8]
   14dd8:	bl	bb40 <mpfr_set_si_2exp@plt>
   14ddc:	mov	x0, sp
   14de0:	mov	x1, sp
   14de4:	mov	w3, #0x2                   	// #2
   14de8:	mov	x2, x19
   14dec:	bl	be00 <mpfr_mul@plt>
   14df0:	mov	x0, sp
   14df4:	mov	w1, #0x2                   	// #2
   14df8:	bl	c230 <mpfr_get_si@plt>
   14dfc:	ldr	x19, [sp, #48]
   14e00:	ldp	x29, x30, [sp, #32]
   14e04:	add	sp, sp, #0x40
   14e08:	ret

0000000000014e0c <mpfr_get_str@@Base>:
   14e0c:	stp	x29, x30, [sp, #-96]!
   14e10:	stp	x28, x27, [sp, #16]
   14e14:	stp	x26, x25, [sp, #32]
   14e18:	stp	x24, x23, [sp, #48]
   14e1c:	stp	x22, x21, [sp, #64]
   14e20:	stp	x20, x19, [sp, #80]
   14e24:	mov	x29, sp
   14e28:	sub	sp, sp, #0xe0
   14e2c:	cmn	w2, #0x24
   14e30:	b.ge	14e3c <mpfr_get_str@@Base+0x30>  // b.tcont
   14e34:	mov	x0, xzr
   14e38:	b	15878 <mpfr_get_str@@Base+0xa6c>
   14e3c:	mov	w23, w2
   14e40:	mov	x12, x0
   14e44:	cmp	w2, #0x3e
   14e48:	mov	x0, xzr
   14e4c:	b.gt	15878 <mpfr_get_str@@Base+0xa6c>
   14e50:	add	w8, w23, #0x1
   14e54:	cmp	w8, #0x3
   14e58:	b.cc	15878 <mpfr_get_str@@Base+0xa6c>  // b.lo, b.ul, b.last
   14e5c:	sub	w9, w23, #0x2
   14e60:	adrp	x10, 59000 <mpfr_free_pool@@Base+0x387c>
   14e64:	adrp	x11, 59000 <mpfr_free_pool@@Base+0x387c>
   14e68:	ldr	x8, [x4, #16]
   14e6c:	mov	x13, #0xfffffffffffffeff    	// #-257
   14e70:	add	x10, x10, #0x8bd
   14e74:	add	x11, x11, #0x898
   14e78:	cmp	w9, #0x23
   14e7c:	movk	x13, #0x7fff, lsl #48
   14e80:	csel	x27, x11, x10, cc  // cc = lo, ul, last
   14e84:	cmp	w23, #0x0
   14e88:	add	x9, x13, #0x103
   14e8c:	cneg	w10, w23, mi  // mi = first
   14e90:	cmp	w5, #0x5
   14e94:	mov	x28, x4
   14e98:	csel	w19, wzr, w5, eq  // eq = none
   14e9c:	cmp	x8, x9
   14ea0:	b.eq	15898 <mpfr_get_str@@Base+0xa8c>  // b.none
   14ea4:	ldr	w20, [x28, #8]
   14ea8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   14eac:	cmp	x8, x9
   14eb0:	lsr	x21, x20, #31
   14eb4:	b.eq	158e4 <mpfr_get_str@@Base+0xad8>  // b.none
   14eb8:	mov	x24, x1
   14ebc:	stur	w10, [x29, #-84]
   14ec0:	mov	x22, x12
   14ec4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14ec8:	ldr	x1, [x0, #2656]
   14ecc:	add	x0, x0, #0xa60
   14ed0:	blr	x1
   14ed4:	mrs	x10, tpidr_el0
   14ed8:	ldr	w8, [x10, x0]
   14edc:	stur	w8, [x29, #-180]
   14ee0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14ee4:	ldr	x1, [x0, #2592]
   14ee8:	add	x0, x0, #0xa20
   14eec:	blr	x1
   14ef0:	ldr	x9, [x10, x0]
   14ef4:	mov	x8, x0
   14ef8:	stur	x9, [x29, #-176]
   14efc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14f00:	ldr	x1, [x0, #2624]
   14f04:	add	x0, x0, #0xa40
   14f08:	blr	x1
   14f0c:	ldr	x9, [x10, x0]
   14f10:	stur	x3, [x29, #-80]
   14f14:	stp	x9, x10, [x29, #-168]
   14f18:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   14f1c:	str	x9, [x10, x8]
   14f20:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   14f24:	str	x8, [x10, x0]
   14f28:	cbnz	x3, 14f54 <mpfr_get_str@@Base+0x148>
   14f2c:	ldur	w1, [x29, #-84]
   14f30:	ldr	x8, [x28]
   14f34:	mov	w2, #0x1                   	// #1
   14f38:	sub	w9, w1, #0x1
   14f3c:	tst	w1, w9
   14f40:	cset	w9, eq  // eq = none
   14f44:	sub	x0, x8, x9
   14f48:	bl	cbd0 <mpfr_ceil_mul@plt>
   14f4c:	add	x8, x0, #0x1
   14f50:	stur	x8, [x29, #-80]
   14f54:	mov	x13, x22
   14f58:	ldur	x22, [x29, #-80]
   14f5c:	cbnz	x13, 14f70 <mpfr_get_str@@Base+0x164>
   14f60:	add	w8, w21, #0x1
   14f64:	add	x0, x22, x8
   14f68:	bl	cd50 <mpfr_allocate_func@plt>
   14f6c:	mov	x13, x0
   14f70:	stur	x13, [x29, #-56]
   14f74:	tbz	w20, #31, 14f88 <mpfr_get_str@@Base+0x17c>
   14f78:	mov	w8, #0x2d                  	// #45
   14f7c:	mov	x9, x13
   14f80:	strb	w8, [x9], #1
   14f84:	stur	x9, [x29, #-56]
   14f88:	ldr	x8, [x28, #16]
   14f8c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   14f90:	cmp	x8, x9
   14f94:	b.ne	1500c <mpfr_get_str@@Base+0x200>  // b.any
   14f98:	ldur	x20, [x29, #-56]
   14f9c:	mov	w1, #0x30                  	// #48
   14fa0:	mov	x2, x22
   14fa4:	mov	x19, x13
   14fa8:	mov	x0, x20
   14fac:	bl	c1b0 <memset@plt>
   14fb0:	strb	wzr, [x20, x22]
   14fb4:	str	xzr, [x24]
   14fb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14fbc:	ldr	x1, [x0, #2656]
   14fc0:	add	x0, x0, #0xa60
   14fc4:	blr	x1
   14fc8:	ldur	x8, [x29, #-160]
   14fcc:	ldur	w9, [x29, #-180]
   14fd0:	str	w9, [x8, x0]
   14fd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14fd8:	ldr	x1, [x0, #2592]
   14fdc:	add	x0, x0, #0xa20
   14fe0:	blr	x1
   14fe4:	ldur	x9, [x29, #-176]
   14fe8:	str	x9, [x8, x0]
   14fec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   14ff0:	ldr	x1, [x0, #2624]
   14ff4:	add	x0, x0, #0xa40
   14ff8:	blr	x1
   14ffc:	ldur	x9, [x29, #-168]
   15000:	str	x9, [x8, x0]
   15004:	mov	x0, x19
   15008:	b	15878 <mpfr_get_str@@Base+0xa6c>
   1500c:	ldr	x9, [x28, #24]
   15010:	ldur	w21, [x29, #-84]
   15014:	stur	x24, [x29, #-104]
   15018:	stur	x28, [x29, #-64]
   1501c:	stur	x9, [x29, #-40]
   15020:	sub	w9, w21, #0x1
   15024:	tst	w21, w9
   15028:	stur	x13, [x29, #-200]
   1502c:	b.ne	1510c <mpfr_get_str@@Base+0x300>  // b.any
   15030:	mov	w9, w21
   15034:	mov	w10, #0x3f                  	// #63
   15038:	clz	x9, x9
   1503c:	sub	w9, w10, w9
   15040:	sub	x11, x8, #0x1
   15044:	sxtw	x23, w9
   15048:	sdiv	x9, x11, x23
   1504c:	msub	x8, x9, x23, x8
   15050:	cmp	x8, #0x1
   15054:	csel	x11, x23, xzr, lt  // lt = tstop
   15058:	sub	x12, x22, #0x1
   1505c:	add	x28, x11, x8
   15060:	madd	x26, x12, x23, x28
   15064:	cset	w10, lt  // lt = tstop
   15068:	sub	x8, x26, #0x1
   1506c:	sub	x21, x9, x10
   15070:	add	x9, x26, #0x3e
   15074:	cmp	x8, #0x0
   15078:	csel	x8, x9, x8, lt  // lt = tstop
   1507c:	asr	x8, x8, #6
   15080:	add	x25, x8, #0x2
   15084:	lsl	x1, x25, #3
   15088:	add	x20, x8, #0x1
   1508c:	cmp	x1, #0x4, lsl #12
   15090:	stur	xzr, [x29, #-24]
   15094:	b.hi	1591c <mpfr_get_str@@Base+0xb10>  // b.pmore
   15098:	add	x9, x1, #0xf
   1509c:	mov	x8, sp
   150a0:	and	x9, x9, #0xfffffffffffffff0
   150a4:	sub	x22, x8, x9
   150a8:	mov	sp, x22
   150ac:	ldur	x9, [x29, #-64]
   150b0:	lsl	x8, x20, #6
   150b4:	sub	x24, x8, x26
   150b8:	ldr	x2, [x9]
   150bc:	ldr	w8, [x9, #8]
   150c0:	lsr	w3, w8, #31
   150c4:	ldur	x1, [x29, #-40]
   150c8:	sub	x6, x29, #0x10
   150cc:	mov	x0, x22
   150d0:	mov	x4, x26
   150d4:	mov	w5, w19
   150d8:	bl	ca70 <mpfr_round_raw@plt>
   150dc:	sxtw	x8, w0
   150e0:	str	x8, [x22, x20, lsl #3]
   150e4:	cbz	w0, 157ac <mpfr_get_str@@Base+0x9a0>
   150e8:	cmp	x28, x23
   150ec:	b.ne	157a8 <mpfr_get_str@@Base+0x99c>  // b.any
   150f0:	mov	x0, x22
   150f4:	mov	x1, x22
   150f8:	mov	x2, x25
   150fc:	mov	w3, w23
   15100:	bl	bd90 <__gmpn_rshift@plt>
   15104:	add	x21, x21, #0x1
   15108:	b	157ac <mpfr_get_str@@Base+0x9a0>
   1510c:	cmp	w19, #0x3
   15110:	mov	w9, #0x2                   	// #2
   15114:	mov	w10, #0x3                   	// #3
   15118:	csel	w9, w9, w19, eq  // eq = none
   1511c:	cmp	w19, #0x2
   15120:	csel	w9, w10, w9, eq  // eq = none
   15124:	cmp	w20, #0x0
   15128:	csel	w9, w9, w19, lt  // lt = tstop
   1512c:	sub	x0, x8, #0x1
   15130:	mov	w2, #0x1                   	// #1
   15134:	mov	w1, w21
   15138:	stur	w9, [x29, #-72]
   1513c:	bl	cbd0 <mpfr_ceil_mul@plt>
   15140:	mov	x27, x0
   15144:	mov	x0, x22
   15148:	mov	w1, w21
   1514c:	mov	w2, wzr
   15150:	bl	cbd0 <mpfr_ceil_mul@plt>
   15154:	sub	x8, x27, x22
   15158:	subs	x9, x22, x27
   1515c:	add	x20, x0, #0x1
   15160:	csel	x25, x8, x9, lt  // lt = tstop
   15164:	cbz	x0, 15950 <mpfr_get_str@@Base+0xb44>
   15168:	mov	x19, x0
   1516c:	cmp	x0, #0x0
   15170:	b.le	15958 <mpfr_get_str@@Base+0xb4c>
   15174:	clz	x8, x19
   15178:	mov	w9, #0x40                  	// #64
   1517c:	sub	x8, x9, x8
   15180:	add	x19, x20, x8
   15184:	cbz	x25, 151b0 <mpfr_get_str@@Base+0x3a4>
   15188:	mov	x20, x19
   1518c:	subs	x19, x25, #0x1
   15190:	b.eq	1597c <mpfr_get_str@@Base+0xb70>  // b.none
   15194:	b.le	15984 <mpfr_get_str@@Base+0xb78>
   15198:	clz	x8, x19
   1519c:	mov	w9, #0x40                  	// #64
   151a0:	sub	x8, x9, x8
   151a4:	add	x8, x8, x8, lsl #1
   151a8:	mov	x19, x20
   151ac:	add	x19, x8, x20
   151b0:	mov	w8, #0x40                  	// #64
   151b4:	mov	x10, #0xffffffffffffffff    	// #-1
   151b8:	stur	x8, [x29, #-208]
   151bc:	stur	w23, [x29, #-68]
   151c0:	sub	x8, x19, #0x1
   151c4:	add	x9, x19, #0x3e
   151c8:	cmp	x8, #0x0
   151cc:	csel	x8, x9, x8, lt  // lt = tstop
   151d0:	asr	x9, x8, #6
   151d4:	stur	x19, [x29, #-216]
   151d8:	eor	x8, x10, x8, asr #6
   151dc:	add	x19, x9, #0x1
   151e0:	stur	x8, [x29, #-112]
   151e4:	stur	x9, [x29, #-128]
   151e8:	lsl	x8, x9, #3
   151ec:	lsl	x9, x19, #1
   151f0:	stur	x9, [x29, #-96]
   151f4:	lsl	x9, x19, #4
   151f8:	add	x8, x8, #0x10
   151fc:	stp	x8, x9, [x29, #-144]
   15200:	neg	x8, x19, lsl #1
   15204:	stur	x8, [x29, #-192]
   15208:	lsl	x8, x19, #7
   1520c:	lsl	x21, x19, #3
   15210:	stur	x8, [x29, #-152]
   15214:	lsl	x8, x19, #6
   15218:	stur	x8, [x29, #-120]
   1521c:	stur	x21, [x29, #-48]
   15220:	cmp	x21, #0x4, lsl #12
   15224:	stur	xzr, [x29, #-24]
   15228:	b.hi	156bc <mpfr_get_str@@Base+0x8b0>  // b.pmore
   1522c:	add	x9, x21, #0xf
   15230:	mov	x8, sp
   15234:	and	x9, x9, #0xfffffffffffffff0
   15238:	sub	x23, x8, x9
   1523c:	mov	sp, x23
   15240:	ldr	x8, [x28]
   15244:	stur	x25, [x29, #-32]
   15248:	sub	x9, x8, #0x1
   1524c:	add	x8, x8, #0x3e
   15250:	cmp	x9, #0x0
   15254:	csel	x8, x8, x9, lt  // lt = tstop
   15258:	asr	x28, x8, #6
   1525c:	cmp	x22, x27
   15260:	add	x21, x28, #0x1
   15264:	b.ne	15288 <mpfr_get_str@@Base+0x47c>  // b.any
   15268:	subs	x20, x21, x19
   1526c:	b.ls	15308 <mpfr_get_str@@Base+0x4fc>  // b.plast
   15270:	ldur	x0, [x29, #-40]
   15274:	mov	x1, xzr
   15278:	bl	caf0 <__gmpn_scan1@plt>
   1527c:	cmp	x0, x20, lsl #6
   15280:	cset	w25, cs  // cs = hs, nlast
   15284:	b	1530c <mpfr_get_str@@Base+0x500>
   15288:	ldur	w2, [x29, #-84]
   1528c:	sub	x1, x29, #0x10
   15290:	mov	x0, x23
   15294:	mov	x3, x25
   15298:	mov	x4, x19
   1529c:	bl	cc30 <mpfr_mpn_exp@plt>
   152a0:	cmn	x0, #0x1
   152a4:	mov	x20, x0
   152a8:	cset	w8, eq  // eq = none
   152ac:	cmp	x22, x27
   152b0:	b.le	15358 <mpfr_get_str@@Base+0x54c>
   152b4:	ldur	x10, [x29, #-40]
   152b8:	ldur	x11, [x29, #-112]
   152bc:	cmn	x20, #0x1
   152c0:	cset	w9, eq  // eq = none
   152c4:	add	x8, x10, x21, lsl #3
   152c8:	add	x8, x8, x11, lsl #3
   152cc:	subs	x22, x21, x19
   152d0:	csel	x25, x8, x10, cs  // cs = hs, nlast
   152d4:	cset	w8, ls  // ls = plast
   152d8:	csel	x24, x19, x21, cs  // cs = hs, nlast
   152dc:	and	w21, w8, w9
   152e0:	b.ls	15574 <mpfr_get_str@@Base+0x768>  // b.plast
   152e4:	ldur	x28, [x29, #-64]
   152e8:	cmn	x20, #0x1
   152ec:	b.ne	15578 <mpfr_get_str@@Base+0x76c>  // b.any
   152f0:	ldur	x0, [x29, #-40]
   152f4:	mov	x1, xzr
   152f8:	bl	caf0 <__gmpn_scan1@plt>
   152fc:	cmp	x0, x22, lsl #6
   15300:	cset	w21, cs  // cs = hs, nlast
   15304:	b	15578 <mpfr_get_str@@Base+0x76c>
   15308:	mov	w25, #0x1                   	// #1
   1530c:	cmp	x21, x19
   15310:	eor	w26, w25, #0x1
   15314:	b.cs	153c0 <mpfr_get_str@@Base+0x5b4>  // b.hs, b.nlast
   15318:	ldur	x1, [x29, #-40]
   1531c:	add	x8, x23, x19, lsl #3
   15320:	mvn	x9, x28
   15324:	add	x0, x8, x9, lsl #3
   15328:	cmp	x0, x1
   1532c:	b.eq	15338 <mpfr_get_str@@Base+0x52c>  // b.none
   15330:	lsl	x2, x21, #3
   15334:	bl	bad0 <memcpy@plt>
   15338:	sub	x8, x19, x21
   1533c:	lsl	x2, x8, #3
   15340:	mov	x0, x23
   15344:	mov	w1, wzr
   15348:	bl	c1b0 <memset@plt>
   1534c:	ldur	x28, [x29, #-64]
   15350:	ldur	x21, [x29, #-48]
   15354:	b	153ec <mpfr_get_str@@Base+0x5e0>
   15358:	ldur	x1, [x29, #-136]
   1535c:	stur	w8, [x29, #-88]
   15360:	cmp	x1, #0x4, lsl #12
   15364:	b.hi	156dc <mpfr_get_str@@Base+0x8d0>  // b.pmore
   15368:	add	x9, x1, #0xf
   1536c:	mov	x8, sp
   15370:	and	x9, x9, #0xfffffffffffffff0
   15374:	sub	x25, x8, x9
   15378:	mov	sp, x25
   1537c:	ldur	x1, [x29, #-144]
   15380:	cmp	x1, #0x4, lsl #12
   15384:	b.hi	156ec <mpfr_get_str@@Base+0x8e0>  // b.pmore
   15388:	add	x9, x1, #0xf
   1538c:	mov	x8, sp
   15390:	and	x9, x9, #0xfffffffffffffff0
   15394:	sub	x26, x8, x9
   15398:	mov	sp, x26
   1539c:	ldur	x1, [x29, #-48]
   153a0:	cmp	x1, #0x4, lsl #12
   153a4:	b.hi	153fc <mpfr_get_str@@Base+0x5f0>  // b.pmore
   153a8:	add	x9, x1, #0xf
   153ac:	mov	x8, sp
   153b0:	and	x9, x9, #0xfffffffffffffff0
   153b4:	sub	x24, x8, x9
   153b8:	mov	sp, x24
   153bc:	b	15408 <mpfr_get_str@@Base+0x5fc>
   153c0:	ldur	x8, [x29, #-40]
   153c4:	ldur	x9, [x29, #-112]
   153c8:	ldur	x28, [x29, #-64]
   153cc:	add	x8, x8, x21, lsl #3
   153d0:	ldur	x21, [x29, #-48]
   153d4:	add	x1, x8, x9, lsl #3
   153d8:	cmp	x1, x23
   153dc:	b.eq	153ec <mpfr_get_str@@Base+0x5e0>  // b.none
   153e0:	mov	x0, x23
   153e4:	mov	x2, x21
   153e8:	bl	bad0 <memcpy@plt>
   153ec:	ldr	x8, [x28, #16]
   153f0:	ldur	x9, [x29, #-120]
   153f4:	sub	x8, x8, x9
   153f8:	b	15634 <mpfr_get_str@@Base+0x828>
   153fc:	sub	x0, x29, #0x18
   15400:	bl	be70 <mpfr_tmp_allocate@plt>
   15404:	mov	x24, x0
   15408:	ldur	x4, [x29, #-96]
   1540c:	subs	x22, x4, x21
   15410:	b.ls	1544c <mpfr_get_str@@Base+0x640>  // b.plast
   15414:	ldur	x1, [x29, #-40]
   15418:	add	x8, x25, x4, lsl #3
   1541c:	mvn	x9, x28
   15420:	add	x0, x8, x9, lsl #3
   15424:	cmp	x0, x1
   15428:	b.eq	15434 <mpfr_get_str@@Base+0x628>  // b.none
   1542c:	lsl	x2, x21, #3
   15430:	bl	bad0 <memcpy@plt>
   15434:	lsl	x2, x22, #3
   15438:	mov	x0, x25
   1543c:	mov	w1, wzr
   15440:	bl	c1b0 <memset@plt>
   15444:	ldur	x28, [x29, #-64]
   15448:	b	15474 <mpfr_get_str@@Base+0x668>
   1544c:	ldur	x8, [x29, #-40]
   15450:	ldur	x9, [x29, #-192]
   15454:	ldur	x28, [x29, #-64]
   15458:	add	x8, x8, x21, lsl #3
   1545c:	add	x1, x8, x9, lsl #3
   15460:	cmp	x1, x25
   15464:	b.eq	15478 <mpfr_get_str@@Base+0x66c>  // b.none
   15468:	ldur	x2, [x29, #-136]
   1546c:	mov	x0, x25
   15470:	bl	bad0 <memcpy@plt>
   15474:	ldur	x4, [x29, #-96]
   15478:	ldur	x22, [x29, #-80]
   1547c:	subs	x21, x21, x4
   15480:	b.ls	154a8 <mpfr_get_str@@Base+0x69c>  // b.plast
   15484:	cmn	x20, #0x1
   15488:	b.ne	154a8 <mpfr_get_str@@Base+0x69c>  // b.any
   1548c:	ldur	x0, [x29, #-40]
   15490:	mov	x1, xzr
   15494:	bl	caf0 <__gmpn_scan1@plt>
   15498:	ldur	x4, [x29, #-96]
   1549c:	cmp	x0, x21, lsl #6
   154a0:	cset	w8, cs  // cs = hs, nlast
   154a4:	stur	w8, [x29, #-88]
   154a8:	mov	x0, x26
   154ac:	mov	x1, x24
   154b0:	mov	x2, xzr
   154b4:	mov	x3, x25
   154b8:	mov	x5, x23
   154bc:	mov	x6, x19
   154c0:	bl	bb20 <__gmpn_tdiv_qr@plt>
   154c4:	ldr	x8, [x28, #16]
   154c8:	ldur	x10, [x29, #-152]
   154cc:	ldur	x9, [x29, #-16]
   154d0:	sub	x8, x8, x10
   154d4:	sub	x8, x8, x9
   154d8:	stur	x8, [x29, #-16]
   154dc:	ldur	w8, [x29, #-88]
   154e0:	cbz	w8, 154fc <mpfr_get_str@@Base+0x6f0>
   154e4:	mov	x0, x24
   154e8:	mov	x1, x19
   154ec:	bl	c8b0 <__gmpn_popcount@plt>
   154f0:	cmp	x0, #0x0
   154f4:	cset	w25, eq  // eq = none
   154f8:	b	15500 <mpfr_get_str@@Base+0x6f4>
   154fc:	mov	w25, wzr
   15500:	ldr	x8, [x26, x19, lsl #3]
   15504:	ldur	x24, [x29, #-104]
   15508:	ldur	x21, [x29, #-48]
   1550c:	cmp	x8, #0x1
   15510:	b.ne	15548 <mpfr_get_str@@Base+0x73c>  // b.any
   15514:	mov	w3, #0x1                   	// #1
   15518:	mov	x0, x23
   1551c:	mov	x1, x26
   15520:	mov	x2, x19
   15524:	bl	bd90 <__gmpn_rshift@plt>
   15528:	ldur	x9, [x29, #-128]
   1552c:	ldr	x8, [x23, x9, lsl #3]
   15530:	orr	x8, x8, #0x8000000000000000
   15534:	str	x8, [x23, x9, lsl #3]
   15538:	ldur	x8, [x29, #-16]
   1553c:	add	x8, x8, #0x1
   15540:	stur	x8, [x29, #-16]
   15544:	b	15560 <mpfr_get_str@@Base+0x754>
   15548:	cmp	x23, x26
   1554c:	b.eq	15560 <mpfr_get_str@@Base+0x754>  // b.none
   15550:	mov	x0, x23
   15554:	mov	x1, x26
   15558:	mov	x2, x21
   1555c:	bl	bad0 <memcpy@plt>
   15560:	add	x8, x20, #0x2
   15564:	cmn	x20, #0x1
   15568:	mov	w9, #0x2                   	// #2
   1556c:	csel	x26, x9, x8, eq  // eq = none
   15570:	b	15638 <mpfr_get_str@@Base+0x82c>
   15574:	ldur	x28, [x29, #-64]
   15578:	add	x8, x24, x19
   1557c:	cmp	x20, #0x1
   15580:	mov	w9, #0x2                   	// #2
   15584:	lsl	x1, x8, #3
   15588:	csinc	x26, x9, x20, lt  // lt = tstop
   1558c:	cmp	x1, #0x4, lsl #12
   15590:	b.hi	156fc <mpfr_get_str@@Base+0x8f0>  // b.pmore
   15594:	add	x9, x1, #0xf
   15598:	mov	x8, sp
   1559c:	and	x9, x9, #0xfffffffffffffff0
   155a0:	sub	x20, x8, x9
   155a4:	mov	sp, x20
   155a8:	ldur	x22, [x29, #-80]
   155ac:	mov	x0, x20
   155b0:	mov	x1, x23
   155b4:	mov	x2, x19
   155b8:	mov	x3, x25
   155bc:	mov	x4, x24
   155c0:	bl	c7f0 <__gmpn_mul@plt>
   155c4:	ldr	x8, [x28, #16]
   155c8:	ldur	x9, [x29, #-16]
   155cc:	mov	x0, x20
   155d0:	mov	x1, xzr
   155d4:	add	x8, x9, x8
   155d8:	stur	x8, [x29, #-16]
   155dc:	bl	caf0 <__gmpn_scan1@plt>
   155e0:	ldur	x8, [x29, #-128]
   155e4:	cmp	x0, x24, lsl #6
   155e8:	cset	w9, cs  // cs = hs, nlast
   155ec:	and	w25, w21, w9
   155f0:	add	x8, x24, x8
   155f4:	ldr	x8, [x20, x8, lsl #3]
   155f8:	add	x20, x20, x24, lsl #3
   155fc:	tbnz	x8, #63, 15698 <mpfr_get_str@@Base+0x88c>
   15600:	mov	w3, #0x1                   	// #1
   15604:	mov	x0, x23
   15608:	mov	x1, x20
   1560c:	mov	x2, x19
   15610:	bl	bd70 <__gmpn_lshift@plt>
   15614:	ldur	x8, [x20, #-8]
   15618:	ldr	x9, [x23]
   1561c:	ldur	x24, [x29, #-104]
   15620:	ldur	x21, [x29, #-48]
   15624:	orr	x8, x9, x8, lsr #63
   15628:	str	x8, [x23]
   1562c:	ldur	x8, [x29, #-16]
   15630:	sub	x8, x8, #0x1
   15634:	stur	x8, [x29, #-16]
   15638:	ldur	w8, [x29, #-72]
   1563c:	ldur	x4, [x29, #-16]
   15640:	cmp	w25, #0x0
   15644:	csinv	x5, x26, xzr, eq  // eq = none
   15648:	str	w8, [sp, #-16]!
   1564c:	ldur	x0, [x29, #-56]
   15650:	ldur	w6, [x29, #-68]
   15654:	mov	x1, x24
   15658:	mov	x2, x23
   1565c:	mov	x3, x19
   15660:	mov	x7, x22
   15664:	bl	159a8 <mpfr_get_str@@Base+0xb9c>
   15668:	add	sp, sp, #0x10
   1566c:	ldur	x8, [x29, #-24]
   15670:	mov	w20, w0
   15674:	cbnz	x8, 156d0 <mpfr_get_str@@Base+0x8c4>
   15678:	ldur	x25, [x29, #-32]
   1567c:	cmn	w20, #0x3
   15680:	b.ne	1570c <mpfr_get_str@@Base+0x900>  // b.any
   15684:	cmp	x22, x27
   15688:	sub	x8, x25, #0x1
   1568c:	add	x27, x27, #0x1
   15690:	csinc	x25, x8, x25, gt
   15694:	b	15220 <mpfr_get_str@@Base+0x414>
   15698:	ldur	x24, [x29, #-104]
   1569c:	ldur	x21, [x29, #-48]
   156a0:	cmp	x20, x23
   156a4:	b.eq	15638 <mpfr_get_str@@Base+0x82c>  // b.none
   156a8:	mov	x0, x23
   156ac:	mov	x1, x20
   156b0:	mov	x2, x21
   156b4:	bl	bad0 <memcpy@plt>
   156b8:	b	15638 <mpfr_get_str@@Base+0x82c>
   156bc:	sub	x0, x29, #0x18
   156c0:	mov	x1, x21
   156c4:	bl	be70 <mpfr_tmp_allocate@plt>
   156c8:	mov	x23, x0
   156cc:	b	15240 <mpfr_get_str@@Base+0x434>
   156d0:	mov	x0, x8
   156d4:	bl	c460 <mpfr_tmp_free@plt>
   156d8:	b	15678 <mpfr_get_str@@Base+0x86c>
   156dc:	sub	x0, x29, #0x18
   156e0:	bl	be70 <mpfr_tmp_allocate@plt>
   156e4:	mov	x25, x0
   156e8:	b	1537c <mpfr_get_str@@Base+0x570>
   156ec:	sub	x0, x29, #0x18
   156f0:	bl	be70 <mpfr_tmp_allocate@plt>
   156f4:	mov	x26, x0
   156f8:	b	1539c <mpfr_get_str@@Base+0x590>
   156fc:	sub	x0, x29, #0x18
   15700:	bl	be70 <mpfr_tmp_allocate@plt>
   15704:	mov	x20, x0
   15708:	b	155a8 <mpfr_get_str@@Base+0x79c>
   1570c:	cbz	w20, 15770 <mpfr_get_str@@Base+0x964>
   15710:	cmp	w20, #0x3
   15714:	b.ne	15778 <mpfr_get_str@@Base+0x96c>  // b.any
   15718:	ldp	x19, x9, [x29, #-216]
   1571c:	mov	x8, #0xfffffffffffffeff    	// #-257
   15720:	movk	x8, #0x7fff, lsl #48
   15724:	sub	x8, x8, x19
   15728:	cmp	x9, x8
   1572c:	mov	x8, x9
   15730:	b.gt	15750 <mpfr_get_str@@Base+0x944>
   15734:	add	x19, x19, x8
   15738:	cmp	x19, #0x0
   1573c:	cinc	x8, x19, lt  // lt = tstop
   15740:	asr	x8, x8, #1
   15744:	stur	x8, [x29, #-208]
   15748:	mov	x10, #0xffffffffffffffff    	// #-1
   1574c:	b	151c0 <mpfr_get_str@@Base+0x3b4>
   15750:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   15754:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   15758:	mov	w1, #0x9f9                 	// #2553
   1575c:	add	x0, x0, #0x903
   15760:	add	x2, x2, #0x922
   15764:	bl	cb90 <mpfr_assert_fail@plt>
   15768:	ldur	x8, [x29, #-208]
   1576c:	b	15734 <mpfr_get_str@@Base+0x928>
   15770:	ldur	w9, [x29, #-180]
   15774:	b	15780 <mpfr_get_str@@Base+0x974>
   15778:	ldur	w9, [x29, #-180]
   1577c:	orr	w9, w9, #0x8
   15780:	ldr	x8, [x24]
   15784:	add	x8, x8, x27
   15788:	str	x8, [x24]
   1578c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   15790:	ldr	x1, [x0, #2656]
   15794:	add	x0, x0, #0xa60
   15798:	blr	x1
   1579c:	ldur	x8, [x29, #-160]
   157a0:	str	w9, [x8, x0]
   157a4:	b	15844 <mpfr_get_str@@Base+0xa38>
   157a8:	mov	x20, x25
   157ac:	cbz	x24, 157d4 <mpfr_get_str@@Base+0x9c8>
   157b0:	mov	x0, x22
   157b4:	mov	x1, x22
   157b8:	mov	x2, x20
   157bc:	mov	w3, w24
   157c0:	bl	bd90 <__gmpn_rshift@plt>
   157c4:	sub	x8, x20, #0x1
   157c8:	ldr	x9, [x22, x8, lsl #3]
   157cc:	cmp	x9, #0x0
   157d0:	csel	x20, x8, x20, eq  // eq = none
   157d4:	ldur	x0, [x29, #-56]
   157d8:	ldur	w1, [x29, #-84]
   157dc:	ldur	x19, [x29, #-104]
   157e0:	mov	x2, x22
   157e4:	mov	x3, x20
   157e8:	bl	c630 <__gmpn_get_str@plt>
   157ec:	ldur	x11, [x29, #-80]
   157f0:	cbz	x11, 15810 <mpfr_get_str@@Base+0xa04>
   157f4:	ldur	x8, [x29, #-56]
   157f8:	mov	x9, x11
   157fc:	ldrb	w10, [x8]
   15800:	subs	x9, x9, #0x1
   15804:	ldrb	w10, [x27, x10]
   15808:	strb	w10, [x8], #1
   1580c:	b.ne	157fc <mpfr_get_str@@Base+0x9f0>  // b.any
   15810:	ldur	x8, [x29, #-56]
   15814:	strb	wzr, [x8, x11]
   15818:	add	x8, x21, #0x1
   1581c:	str	x8, [x19]
   15820:	ldur	x0, [x29, #-24]
   15824:	ldur	w19, [x29, #-180]
   15828:	cbnz	x0, 15974 <mpfr_get_str@@Base+0xb68>
   1582c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   15830:	ldr	x1, [x0, #2656]
   15834:	add	x0, x0, #0xa60
   15838:	blr	x1
   1583c:	ldur	x8, [x29, #-160]
   15840:	str	w19, [x8, x0]
   15844:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   15848:	ldr	x1, [x0, #2592]
   1584c:	add	x0, x0, #0xa20
   15850:	blr	x1
   15854:	ldur	x9, [x29, #-176]
   15858:	str	x9, [x8, x0]
   1585c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   15860:	ldr	x1, [x0, #2624]
   15864:	add	x0, x0, #0xa40
   15868:	blr	x1
   1586c:	ldur	x9, [x29, #-168]
   15870:	str	x9, [x8, x0]
   15874:	ldur	x0, [x29, #-200]
   15878:	mov	sp, x29
   1587c:	ldp	x20, x19, [sp, #80]
   15880:	ldp	x22, x21, [sp, #64]
   15884:	ldp	x24, x23, [sp, #48]
   15888:	ldp	x26, x25, [sp, #32]
   1588c:	ldp	x28, x27, [sp, #16]
   15890:	ldp	x29, x30, [sp], #96
   15894:	ret
   15898:	cbnz	x12, 158a8 <mpfr_get_str@@Base+0xa9c>
   1589c:	mov	w0, #0x6                   	// #6
   158a0:	bl	cd50 <mpfr_allocate_func@plt>
   158a4:	mov	x12, x0
   158a8:	mov	w9, #0x4e40                	// #20032
   158ac:	mov	w8, #0x40                  	// #64
   158b0:	movk	w9, #0x4e61, lsl #16
   158b4:	strh	w8, [x12, #4]
   158b8:	str	w9, [x12]
   158bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   158c0:	ldr	x1, [x0, #2656]
   158c4:	add	x0, x0, #0xa60
   158c8:	blr	x1
   158cc:	mrs	x8, tpidr_el0
   158d0:	ldr	w9, [x8, x0]
   158d4:	orr	w9, w9, #0x4
   158d8:	str	w9, [x8, x0]
   158dc:	mov	x0, x12
   158e0:	b	15878 <mpfr_get_str@@Base+0xa6c>
   158e4:	cbnz	x12, 158f4 <mpfr_get_str@@Base+0xae8>
   158e8:	orr	x0, x21, #0x6
   158ec:	bl	cd50 <mpfr_allocate_func@plt>
   158f0:	mov	x12, x0
   158f4:	adrp	x8, 59000 <mpfr_free_pool@@Base+0x387c>
   158f8:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   158fc:	add	x8, x8, #0x8fd
   15900:	add	x9, x9, #0x8fc
   15904:	cmp	w20, #0x0
   15908:	csel	x1, x9, x8, lt  // lt = tstop
   1590c:	mov	x0, x12
   15910:	mov	x19, x12
   15914:	bl	c970 <strcpy@plt>
   15918:	b	15004 <mpfr_get_str@@Base+0x1f8>
   1591c:	sub	x0, x29, #0x18
   15920:	bl	be70 <mpfr_tmp_allocate@plt>
   15924:	ldur	x10, [x29, #-64]
   15928:	lsl	x9, x20, #6
   1592c:	mov	x22, x0
   15930:	sub	x24, x9, x26
   15934:	ldr	x8, [x10, #16]
   15938:	ldr	x2, [x10]
   1593c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   15940:	cmp	x8, x10
   15944:	b.ne	159a0 <mpfr_get_str@@Base+0xb94>  // b.any
   15948:	mov	w3, wzr
   1594c:	b	150c4 <mpfr_get_str@@Base+0x2b8>
   15950:	mov	x8, xzr
   15954:	b	15180 <mpfr_get_str@@Base+0x374>
   15958:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1595c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   15960:	add	x0, x0, #0x903
   15964:	add	x2, x2, #0x90d
   15968:	mov	w1, #0x983                 	// #2435
   1596c:	bl	cb90 <mpfr_assert_fail@plt>
   15970:	b	15174 <mpfr_get_str@@Base+0x368>
   15974:	bl	c460 <mpfr_tmp_free@plt>
   15978:	b	1582c <mpfr_get_str@@Base+0xa20>
   1597c:	mov	x8, xzr
   15980:	b	151a8 <mpfr_get_str@@Base+0x39c>
   15984:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   15988:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1598c:	add	x0, x0, #0x903
   15990:	add	x2, x2, #0x918
   15994:	mov	w1, #0x985                 	// #2437
   15998:	bl	cb90 <mpfr_assert_fail@plt>
   1599c:	b	15198 <mpfr_get_str@@Base+0x38c>
   159a0:	ldur	x9, [x29, #-64]
   159a4:	b	150bc <mpfr_get_str@@Base+0x2b0>
   159a8:	stp	x29, x30, [sp, #-96]!
   159ac:	stp	x28, x27, [sp, #16]
   159b0:	stp	x26, x25, [sp, #32]
   159b4:	stp	x24, x23, [sp, #48]
   159b8:	stp	x22, x21, [sp, #64]
   159bc:	stp	x20, x19, [sp, #80]
   159c0:	mov	x29, sp
   159c4:	sub	sp, sp, #0x30
   159c8:	mov	w22, w6
   159cc:	mov	x20, x5
   159d0:	mov	x25, x4
   159d4:	mov	x26, x3
   159d8:	mov	x27, x2
   159dc:	mov	x24, x1
   159e0:	cmp	x4, #0x1
   159e4:	mov	x21, x0
   159e8:	stur	x7, [x29, #-24]
   159ec:	b.ge	15c80 <mpfr_get_str@@Base+0xe74>  // b.tcont
   159f0:	neg	x8, x26, lsl #6
   159f4:	cmp	x8, x25
   159f8:	b.ge	15c9c <mpfr_get_str@@Base+0xe90>  // b.tcont
   159fc:	ldr	w5, [x29, #96]
   15a00:	sub	w8, w22, #0x2
   15a04:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   15a08:	adrp	x10, 59000 <mpfr_free_pool@@Base+0x387c>
   15a0c:	add	x9, x9, #0x8bd
   15a10:	add	x10, x10, #0x898
   15a14:	cmp	w8, #0x23
   15a18:	csel	x23, x10, x9, cc  // cc = lo, ul, last
   15a1c:	cmp	w22, #0x0
   15a20:	lsl	x28, x26, #6
   15a24:	cneg	w22, w22, mi  // mi = first
   15a28:	stur	xzr, [x29, #-16]
   15a2c:	stur	x20, [x29, #-48]
   15a30:	tbnz	x20, #63, 15a68 <mpfr_get_str@@Base+0xc5c>
   15a34:	sub	x2, x28, x20
   15a38:	add	x20, x28, x25
   15a3c:	cmp	w5, #0x0
   15a40:	cinc	x3, x20, eq  // eq = none
   15a44:	mov	x0, x27
   15a48:	mov	x1, x26
   15a4c:	mov	w19, w5
   15a50:	bl	c3d0 <mpfr_round_p@plt>
   15a54:	mov	w5, w19
   15a58:	cbnz	w0, 15a6c <mpfr_get_str@@Base+0xc60>
   15a5c:	mov	w8, #0x3                   	// #3
   15a60:	stur	w8, [x29, #-4]
   15a64:	b	15c4c <mpfr_get_str@@Base+0xe40>
   15a68:	add	x20, x28, x25
   15a6c:	add	x8, x25, #0x3f
   15a70:	cmp	x25, #0x0
   15a74:	csel	x8, x8, x25, lt  // lt = tstop
   15a78:	stur	x24, [x29, #-32]
   15a7c:	stur	w22, [x29, #-36]
   15a80:	ldur	x24, [x29, #-24]
   15a84:	neg	x22, x8, asr #6
   15a88:	asr	x9, x8, #6
   15a8c:	and	x8, x8, #0xffffffffffffffc0
   15a90:	mov	x19, x21
   15a94:	sub	x21, x25, x8
   15a98:	sub	x25, x27, x9, lsl #3
   15a9c:	sub	x6, x29, #0x4
   15aa0:	mov	x0, x25
   15aa4:	mov	x1, x27
   15aa8:	mov	x2, x28
   15aac:	mov	w3, wzr
   15ab0:	mov	x4, x20
   15ab4:	mov	w28, w5
   15ab8:	bl	ca70 <mpfr_round_raw@plt>
   15abc:	cbz	w0, 15adc <mpfr_get_str@@Base+0xcd0>
   15ac0:	cbz	x21, 15af8 <mpfr_get_str@@Base+0xcec>
   15ac4:	mvn	x8, x21
   15ac8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   15acc:	lsr	x8, x9, x8
   15ad0:	add	x9, x27, x26, lsl #3
   15ad4:	stur	x8, [x9, #-8]
   15ad8:	b	15b0c <mpfr_get_str@@Base+0xd00>
   15adc:	cbz	x21, 15b0c <mpfr_get_str@@Base+0xd00>
   15ae0:	sub	x2, x26, x22
   15ae4:	neg	w3, w21
   15ae8:	mov	x0, x25
   15aec:	mov	x1, x25
   15af0:	bl	bd90 <__gmpn_rshift@plt>
   15af4:	b	15b0c <mpfr_get_str@@Base+0xd00>
   15af8:	sxtw	x8, w0
   15afc:	add	x9, x27, x26, lsl #3
   15b00:	sub	x22, x22, #0x1
   15b04:	stur	x8, [x9, #-8]
   15b08:	str	xzr, [x27, x22, lsl #3]
   15b0c:	add	x1, x24, #0x3
   15b10:	mov	x21, x19
   15b14:	mov	x19, x24
   15b18:	cmp	x1, #0x4, lsl #12
   15b1c:	b.hi	15cc0 <mpfr_get_str@@Base+0xeb4>  // b.pmore
   15b20:	add	x9, x1, #0xf
   15b24:	mov	x8, sp
   15b28:	and	x9, x9, #0xfffffffffffffff0
   15b2c:	sub	x25, x8, x9
   15b30:	mov	sp, x25
   15b34:	add	x2, x27, x22, lsl #3
   15b38:	sub	x3, x26, x22
   15b3c:	ldur	w22, [x29, #-36]
   15b40:	ldur	x24, [x29, #-32]
   15b44:	mov	x0, x25
   15b48:	mov	w1, w22
   15b4c:	bl	c630 <__gmpn_get_str@plt>
   15b50:	mov	x26, x0
   15b54:	subs	x20, x0, x19
   15b58:	b.cc	15cd0 <mpfr_get_str@@Base+0xec4>  // b.lo, b.ul, b.last
   15b5c:	add	x8, x19, #0x1
   15b60:	cmp	x26, x8
   15b64:	str	x20, [x24]
   15b68:	b.ne	15c28 <mpfr_get_str@@Base+0xe1c>  // b.any
   15b6c:	ldur	w8, [x29, #-4]
   15b70:	cbnz	w8, 15b80 <mpfr_get_str@@Base+0xd74>
   15b74:	add	x9, x26, x25
   15b78:	ldurb	w9, [x9, #-1]
   15b7c:	cbz	w9, 15c28 <mpfr_get_str@@Base+0xe1c>
   15b80:	cmp	w28, #0x4
   15b84:	b.eq	15bc0 <mpfr_get_str@@Base+0xdb4>  // b.none
   15b88:	cmp	w28, #0x2
   15b8c:	b.eq	15bc0 <mpfr_get_str@@Base+0xdb4>  // b.none
   15b90:	cbnz	w28, 15c20 <mpfr_get_str@@Base+0xe14>
   15b94:	add	x9, x26, x25
   15b98:	ldurb	w9, [x9, #-1]
   15b9c:	lsl	w9, w9, #1
   15ba0:	cmp	w9, w22
   15ba4:	b.ne	15c1c <mpfr_get_str@@Base+0xe10>  // b.any
   15ba8:	ldur	x9, [x29, #-48]
   15bac:	tbz	x9, #63, 15c78 <mpfr_get_str@@Base+0xe6c>
   15bb0:	cbnz	w8, 15c78 <mpfr_get_str@@Base+0xe6c>
   15bb4:	add	x8, x26, x25
   15bb8:	ldurb	w8, [x8, #-2]
   15bbc:	tbz	w8, #0, 15c20 <mpfr_get_str@@Base+0xe14>
   15bc0:	add	x8, x26, x25
   15bc4:	ldurb	w8, [x8, #-1]
   15bc8:	cbz	w8, 15c14 <mpfr_get_str@@Base+0xe08>
   15bcc:	cmp	x26, #0x1
   15bd0:	b.ls	15cec <mpfr_get_str@@Base+0xee0>  // b.plast
   15bd4:	add	x10, x26, x25
   15bd8:	mov	x9, x10
   15bdc:	ldrb	w8, [x9, #-2]!
   15be0:	sub	w11, w22, #0x1
   15be4:	cmp	w11, w8
   15be8:	b.ne	15c0c <mpfr_get_str@@Base+0xe00>  // b.any
   15bec:	sub	x9, x10, #0x3
   15bf0:	ldrb	w10, [x9]
   15bf4:	strb	wzr, [x9, #1]
   15bf8:	sub	x9, x9, #0x1
   15bfc:	cmp	w8, w10
   15c00:	b.eq	15bf0 <mpfr_get_str@@Base+0xde4>  // b.none
   15c04:	add	x9, x9, #0x1
   15c08:	mov	w8, w10
   15c0c:	add	w8, w8, #0x1
   15c10:	strb	w8, [x9]
   15c14:	mov	w8, #0x1                   	// #1
   15c18:	b	15c24 <mpfr_get_str@@Base+0xe18>
   15c1c:	b.ge	15bc0 <mpfr_get_str@@Base+0xdb4>  // b.tcont
   15c20:	mov	w8, #0xffffffff            	// #-1
   15c24:	stur	w8, [x29, #-4]
   15c28:	cbz	x19, 15c48 <mpfr_get_str@@Base+0xe3c>
   15c2c:	mov	x8, x21
   15c30:	mov	x9, x19
   15c34:	ldrb	w10, [x25], #1
   15c38:	subs	x9, x9, #0x1
   15c3c:	ldrb	w10, [x23, x10]
   15c40:	strb	w10, [x8], #1
   15c44:	b.ne	15c34 <mpfr_get_str@@Base+0xe28>  // b.any
   15c48:	strb	wzr, [x21, x19]
   15c4c:	ldur	x0, [x29, #-16]
   15c50:	cbnz	x0, 15cb8 <mpfr_get_str@@Base+0xeac>
   15c54:	ldur	w0, [x29, #-4]
   15c58:	mov	sp, x29
   15c5c:	ldp	x20, x19, [sp, #80]
   15c60:	ldp	x22, x21, [sp, #64]
   15c64:	ldp	x24, x23, [sp, #48]
   15c68:	ldp	x26, x25, [sp, #32]
   15c6c:	ldp	x28, x27, [sp, #16]
   15c70:	ldp	x29, x30, [sp], #96
   15c74:	ret
   15c78:	mov	w8, #0xfffffffd            	// #-3
   15c7c:	b	15a60 <mpfr_get_str@@Base+0xc54>
   15c80:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   15c84:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   15c88:	add	x0, x0, #0x903
   15c8c:	add	x2, x2, #0x968
   15c90:	mov	w1, #0x62                  	// #98
   15c94:	bl	cb90 <mpfr_assert_fail@plt>
   15c98:	b	159f0 <mpfr_get_str@@Base+0xbe4>
   15c9c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   15ca0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   15ca4:	add	x0, x0, #0x903
   15ca8:	add	x2, x2, #0x96f
   15cac:	mov	w1, #0x64                  	// #100
   15cb0:	bl	cb90 <mpfr_assert_fail@plt>
   15cb4:	b	159fc <mpfr_get_str@@Base+0xbf0>
   15cb8:	bl	c460 <mpfr_tmp_free@plt>
   15cbc:	b	15c54 <mpfr_get_str@@Base+0xe48>
   15cc0:	sub	x0, x29, #0x10
   15cc4:	bl	be70 <mpfr_tmp_allocate@plt>
   15cc8:	mov	x25, x0
   15ccc:	b	15b34 <mpfr_get_str@@Base+0xd28>
   15cd0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   15cd4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   15cd8:	add	x0, x0, #0x903
   15cdc:	add	x2, x2, #0x983
   15ce0:	mov	w1, #0x9d                  	// #157
   15ce4:	bl	cb90 <mpfr_assert_fail@plt>
   15ce8:	b	15b5c <mpfr_get_str@@Base+0xd50>
   15cec:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   15cf0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   15cf4:	add	x0, x0, #0x903
   15cf8:	add	x2, x2, #0x990
   15cfc:	mov	w1, #0xd2                  	// #210
   15d00:	bl	cb90 <mpfr_assert_fail@plt>
   15d04:	b	15bd4 <mpfr_get_str@@Base+0xdc8>

0000000000015d08 <mpfr_free_str@@Base>:
   15d08:	stp	x29, x30, [sp, #-32]!
   15d0c:	str	x19, [sp, #16]
   15d10:	mov	x29, sp
   15d14:	mov	x19, x0
   15d18:	bl	bb70 <strlen@plt>
   15d1c:	add	x1, x0, #0x1
   15d20:	mov	x0, x19
   15d24:	ldr	x19, [sp, #16]
   15d28:	ldp	x29, x30, [sp], #32
   15d2c:	b	cc80 <mpfr_free_func@plt>

0000000000015d30 <mpfr_init@@Base>:
   15d30:	stp	x29, x30, [sp, #-16]!
   15d34:	mov	x29, sp
   15d38:	mov	x8, x0
   15d3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   15d40:	ldr	x1, [x0, #2608]
   15d44:	add	x0, x0, #0xa30
   15d48:	blr	x1
   15d4c:	mrs	x9, tpidr_el0
   15d50:	ldr	x1, [x9, x0]
   15d54:	mov	x0, x8
   15d58:	ldp	x29, x30, [sp], #16
   15d5c:	b	cad0 <mpfr_init2@plt>

0000000000015d60 <__gmpfr_inp_str@@Base>:
   15d60:	sub	sp, sp, #0x70
   15d64:	stp	x29, x30, [sp, #16]
   15d68:	stp	x22, x21, [sp, #80]
   15d6c:	add	x29, sp, #0x10
   15d70:	mov	x21, x0
   15d74:	mov	w0, #0x64                  	// #100
   15d78:	stp	x28, x27, [sp, #32]
   15d7c:	stp	x26, x25, [sp, #48]
   15d80:	stp	x24, x23, [sp, #64]
   15d84:	stp	x20, x19, [sp, #96]
   15d88:	stur	w3, [x29, #-4]
   15d8c:	mov	w19, w2
   15d90:	mov	x23, x1
   15d94:	bl	cd50 <mpfr_allocate_func@plt>
   15d98:	mov	x22, x0
   15d9c:	mov	x28, #0xffffffffffffffff    	// #-1
   15da0:	mov	x0, x23
   15da4:	bl	c300 <getc@plt>
   15da8:	mov	w24, w0
   15dac:	bl	c680 <__ctype_b_loc@plt>
   15db0:	ldr	x8, [x0]
   15db4:	add	x28, x28, #0x1
   15db8:	ldrh	w8, [x8, w24, sxtw #1]
   15dbc:	tbnz	w8, #13, 15da0 <__gmpfr_inp_str@@Base+0x40>
   15dc0:	mov	x25, x0
   15dc4:	mov	x20, xzr
   15dc8:	mov	w26, #0x64                  	// #100
   15dcc:	cmp	x20, x26
   15dd0:	b.cc	15df4 <__gmpfr_inp_str@@Base+0x94>  // b.lo, b.ul, b.last
   15dd4:	add	x8, x26, x26, lsl #1
   15dd8:	lsr	x27, x8, #1
   15ddc:	mov	x0, x22
   15de0:	mov	x1, x26
   15de4:	mov	x2, x27
   15de8:	bl	c260 <mpfr_reallocate_func@plt>
   15dec:	mov	x22, x0
   15df0:	mov	x26, x27
   15df4:	cmn	w24, #0x1
   15df8:	b.eq	15e24 <__gmpfr_inp_str@@Base+0xc4>  // b.none
   15dfc:	ldr	x8, [x25]
   15e00:	ldrh	w8, [x8, w24, sxtw #1]
   15e04:	tbnz	w8, #13, 15e24 <__gmpfr_inp_str@@Base+0xc4>
   15e08:	mov	x0, x23
   15e0c:	add	x27, x20, #0x1
   15e10:	strb	w24, [x22, x20]
   15e14:	bl	c300 <getc@plt>
   15e18:	mov	w24, w0
   15e1c:	mov	x20, x27
   15e20:	b	15dcc <__gmpfr_inp_str@@Base+0x6c>
   15e24:	mov	w0, w24
   15e28:	mov	x1, x23
   15e2c:	bl	c780 <ungetc@plt>
   15e30:	ldur	w3, [x29, #-4]
   15e34:	mov	x0, x21
   15e38:	mov	x1, x22
   15e3c:	mov	w2, w19
   15e40:	strb	wzr, [x22, x20]
   15e44:	bl	c710 <mpfr_set_str@plt>
   15e48:	mov	w19, w0
   15e4c:	mov	x0, x22
   15e50:	mov	x1, x26
   15e54:	bl	cc80 <mpfr_free_func@plt>
   15e58:	add	x8, x28, x20
   15e5c:	cmn	w19, #0x1
   15e60:	ldp	x20, x19, [sp, #96]
   15e64:	ldp	x22, x21, [sp, #80]
   15e68:	ldp	x24, x23, [sp, #64]
   15e6c:	ldp	x26, x25, [sp, #48]
   15e70:	ldp	x28, x27, [sp, #32]
   15e74:	ldp	x29, x30, [sp, #16]
   15e78:	csel	x0, xzr, x8, eq  // eq = none
   15e7c:	add	sp, sp, #0x70
   15e80:	ret

0000000000015e84 <mpfr_integer_p@@Base>:
   15e84:	stp	x29, x30, [sp, #-48]!
   15e88:	stp	x20, x19, [sp, #32]
   15e8c:	ldr	x19, [x0, #16]
   15e90:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   15e94:	str	x21, [sp, #16]
   15e98:	mov	x29, sp
   15e9c:	cmp	x19, x8
   15ea0:	b.le	15f18 <mpfr_integer_p@@Base+0x94>
   15ea4:	cmp	x19, #0x1
   15ea8:	b.lt	15efc <mpfr_integer_p@@Base+0x78>  // b.tstop
   15eac:	ldr	x8, [x0]
   15eb0:	cmp	x19, x8
   15eb4:	b.cs	15f04 <mpfr_integer_p@@Base+0x80>  // b.hs, b.nlast
   15eb8:	sub	x9, x8, #0x1
   15ebc:	add	x8, x8, #0x3e
   15ec0:	cmp	x9, #0x0
   15ec4:	ldr	x21, [x0, #24]
   15ec8:	csel	x8, x8, x9, lt  // lt = tstop
   15ecc:	asr	x8, x8, #6
   15ed0:	subs	x20, x8, x19, lsr #6
   15ed4:	b.mi	15f28 <mpfr_integer_p@@Base+0xa4>  // b.first
   15ed8:	ldr	x8, [x21, x20, lsl #3]
   15edc:	lsl	x8, x8, x19
   15ee0:	cbnz	x8, 15efc <mpfr_integer_p@@Base+0x78>
   15ee4:	sub	x8, x21, #0x8
   15ee8:	subs	x9, x20, #0x1
   15eec:	b.lt	15f04 <mpfr_integer_p@@Base+0x80>  // b.tstop
   15ef0:	ldr	x10, [x8, x20, lsl #3]
   15ef4:	mov	x20, x9
   15ef8:	cbz	x10, 15ee8 <mpfr_integer_p@@Base+0x64>
   15efc:	mov	w0, wzr
   15f00:	b	15f08 <mpfr_integer_p@@Base+0x84>
   15f04:	mov	w0, #0x1                   	// #1
   15f08:	ldp	x20, x19, [sp, #32]
   15f0c:	ldr	x21, [sp, #16]
   15f10:	ldp	x29, x30, [sp], #48
   15f14:	ret
   15f18:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   15f1c:	cmp	x19, x8
   15f20:	cset	w0, eq  // eq = none
   15f24:	b	15f08 <mpfr_integer_p@@Base+0x84>
   15f28:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   15f2c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   15f30:	add	x0, x0, #0x99d
   15f34:	add	x2, x2, #0x9a9
   15f38:	mov	w1, #0x34                  	// #52
   15f3c:	bl	cb90 <mpfr_assert_fail@plt>
   15f40:	b	15ed8 <mpfr_integer_p@@Base+0x54>

0000000000015f44 <mpfr_inf_p@@Base>:
   15f44:	ldr	x8, [x0, #16]
   15f48:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15f4c:	cmp	x8, x9
   15f50:	cset	w0, eq  // eq = none
   15f54:	ret

0000000000015f58 <mpfr_nan_p@@Base>:
   15f58:	ldr	x8, [x0, #16]
   15f5c:	mov	x9, #0x2                   	// #2
   15f60:	movk	x9, #0x8000, lsl #48
   15f64:	cmp	x8, x9
   15f68:	cset	w0, eq  // eq = none
   15f6c:	ret

0000000000015f70 <mpfr_number_p@@Base>:
   15f70:	ldr	x8, [x0, #16]
   15f74:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   15f78:	orr	x8, x8, #0x1
   15f7c:	cmp	x8, x9
   15f80:	cset	w0, ne  // ne = any
   15f84:	ret

0000000000015f88 <mpfr_const_log2_internal@@Base>:
   15f88:	stp	x29, x30, [sp, #-96]!
   15f8c:	stp	x28, x27, [sp, #16]
   15f90:	stp	x26, x25, [sp, #32]
   15f94:	stp	x24, x23, [sp, #48]
   15f98:	stp	x22, x21, [sp, #64]
   15f9c:	stp	x20, x19, [sp, #80]
   15fa0:	mov	x29, sp
   15fa4:	sub	sp, sp, #0x100
   15fa8:	ldr	x22, [x0]
   15fac:	mov	w8, #0x9                   	// #9
   15fb0:	mov	x9, #0xfffffffffffffeff    	// #-257
   15fb4:	movk	x9, #0x7fff, lsl #48
   15fb8:	cmp	x22, #0x42d
   15fbc:	cinc	x8, x8, cs  // cs = hs, nlast
   15fc0:	add	x24, x8, x22
   15fc4:	cmp	x24, x9
   15fc8:	stur	xzr, [x29, #-224]
   15fcc:	b.gt	16348 <mpfr_const_log2_internal@@Base+0x3c0>
   15fd0:	sub	x8, x24, #0x1
   15fd4:	add	x9, x24, #0x3e
   15fd8:	cmp	x8, #0x0
   15fdc:	csel	x8, x9, x8, lt  // lt = tstop
   15fe0:	asr	x8, x8, #6
   15fe4:	mov	w19, w1
   15fe8:	mov	x20, x0
   15fec:	cmp	x24, #0x201
   15ff0:	add	x23, x8, #0x1
   15ff4:	b.lt	16008 <mpfr_const_log2_internal@@Base+0x80>  // b.tstop
   15ff8:	lsl	x21, x23, #4
   15ffc:	mov	x0, x21
   16000:	bl	cd50 <mpfr_allocate_func@plt>
   16004:	b	16014 <mpfr_const_log2_internal@@Base+0x8c>
   16008:	sub	x8, x29, #0xd8
   1600c:	mov	x21, xzr
   16010:	add	x0, x8, #0x10
   16014:	add	x8, x0, x23, lsl #3
   16018:	cmp	w19, #0x0
   1601c:	mov	x23, #0x5555555555555555    	// #6148914691236517205
   16020:	mov	w25, #0x1                   	// #1
   16024:	mov	w27, #0x40                  	// #64
   16028:	movk	x23, #0x5556
   1602c:	stp	x8, x24, [x29, #-48]
   16030:	cinc	x8, x22, eq  // eq = none
   16034:	stp	x21, x0, [x29, #-216]
   16038:	stur	x0, [x29, #-16]
   1603c:	stur	w25, [x29, #-32]
   16040:	stur	x24, [x29, #-72]
   16044:	stur	x8, [x29, #-240]
   16048:	stur	w19, [x29, #-228]
   1604c:	smulh	x8, x24, x23
   16050:	add	x9, x24, #0x2
   16054:	add	x19, x8, x8, lsr #63
   16058:	cmp	x9, #0x5
   1605c:	add	x26, x19, #0x1
   16060:	stur	w25, [x29, #-64]
   16064:	stur	x27, [x29, #-248]
   16068:	b.cc	16274 <mpfr_const_log2_internal@@Base+0x2ec>  // b.lo, b.ul, b.last
   1606c:	cmp	x26, #0x1
   16070:	b.ls	16280 <mpfr_const_log2_internal@@Base+0x2f8>  // b.plast
   16074:	clz	x8, x19
   16078:	mov	w9, #0x41                  	// #65
   1607c:	sub	x21, x9, x8
   16080:	add	x8, x21, x21, lsl #1
   16084:	lsl	x1, x8, #4
   16088:	cmp	x1, #0x4, lsl #12
   1608c:	b.hi	1629c <mpfr_const_log2_internal@@Base+0x314>  // b.pmore
   16090:	add	x9, x1, #0xf
   16094:	mov	x8, sp
   16098:	and	x9, x9, #0xfffffffffffffff0
   1609c:	sub	x25, x8, x9
   160a0:	mov	sp, x25
   160a4:	add	x28, x25, x21, lsl #4
   160a8:	add	x27, x25, x21, lsl #5
   160ac:	cbz	x21, 16164 <mpfr_const_log2_internal@@Base+0x1dc>
   160b0:	mov	x19, xzr
   160b4:	lsl	x23, x21, #4
   160b8:	add	x0, x25, x19
   160bc:	bl	c040 <mpfr_mpz_init@plt>
   160c0:	add	x0, x28, x19
   160c4:	bl	c040 <mpfr_mpz_init@plt>
   160c8:	add	x0, x27, x19
   160cc:	bl	c040 <mpfr_mpz_init@plt>
   160d0:	add	x19, x19, #0x10
   160d4:	cmp	x23, x19
   160d8:	b.ne	160b8 <mpfr_const_log2_internal@@Base+0x130>  // b.any
   160dc:	mov	x0, x25
   160e0:	mov	x1, x28
   160e4:	mov	x2, x27
   160e8:	mov	x3, xzr
   160ec:	mov	x4, x26
   160f0:	mov	w5, wzr
   160f4:	bl	16380 <mpfr_const_log2@@Base+0x34>
   160f8:	sub	x0, x29, #0x28
   160fc:	mov	x1, x25
   16100:	mov	w2, wzr
   16104:	bl	c2b0 <mpfr_set_z@plt>
   16108:	sub	x0, x29, #0x48
   1610c:	mov	x1, x27
   16110:	mov	w2, wzr
   16114:	bl	c2b0 <mpfr_set_z@plt>
   16118:	sub	x0, x29, #0x28
   1611c:	sub	x1, x29, #0x28
   16120:	sub	x2, x29, #0x48
   16124:	mov	w3, wzr
   16128:	bl	c670 <mpfr_div@plt>
   1612c:	cbz	x21, 161b4 <mpfr_const_log2_internal@@Base+0x22c>
   16130:	mov	x26, xzr
   16134:	add	x27, x25, x21, lsl #5
   16138:	add	x19, x25, x21, lsl #4
   1613c:	add	x0, x25, x26
   16140:	bl	c210 <mpfr_mpz_clear@plt>
   16144:	add	x0, x19, x26
   16148:	bl	c210 <mpfr_mpz_clear@plt>
   1614c:	add	x0, x27, x26
   16150:	bl	c210 <mpfr_mpz_clear@plt>
   16154:	add	x26, x26, #0x10
   16158:	cmp	x23, x26
   1615c:	b.ne	1613c <mpfr_const_log2_internal@@Base+0x1b4>  // b.any
   16160:	b	161b4 <mpfr_const_log2_internal@@Base+0x22c>
   16164:	mov	x0, x25
   16168:	mov	x1, x28
   1616c:	mov	x2, x27
   16170:	mov	x3, xzr
   16174:	mov	x4, x26
   16178:	mov	w5, wzr
   1617c:	bl	16380 <mpfr_const_log2@@Base+0x34>
   16180:	sub	x0, x29, #0x28
   16184:	mov	x1, x25
   16188:	mov	w2, wzr
   1618c:	bl	c2b0 <mpfr_set_z@plt>
   16190:	sub	x0, x29, #0x48
   16194:	mov	x1, x27
   16198:	mov	w2, wzr
   1619c:	bl	c2b0 <mpfr_set_z@plt>
   161a0:	sub	x0, x29, #0x28
   161a4:	sub	x1, x29, #0x28
   161a8:	sub	x2, x29, #0x48
   161ac:	mov	w3, wzr
   161b0:	bl	c670 <mpfr_div@plt>
   161b4:	mov	w8, #0x93e0                	// #37856
   161b8:	movk	w8, #0x4, lsl #16
   161bc:	mov	x19, #0xfffffffffffffeff    	// #-257
   161c0:	cmp	x22, x8
   161c4:	movk	x19, #0x7fff, lsl #48
   161c8:	b.cc	162ec <mpfr_const_log2_internal@@Base+0x364>  // b.lo, b.ul, b.last
   161cc:	ldur	x8, [x29, #-24]
   161d0:	add	x9, x19, #0x105
   161d4:	cmp	x8, x9
   161d8:	b.lt	1620c <mpfr_const_log2_internal@@Base+0x284>  // b.tstop
   161dc:	ldur	x8, [x29, #-40]
   161e0:	ldur	x0, [x29, #-16]
   161e4:	ldur	x3, [x29, #-240]
   161e8:	sub	x2, x24, #0x2
   161ec:	sub	x9, x8, #0x1
   161f0:	add	x8, x8, #0x3e
   161f4:	cmp	x9, #0x0
   161f8:	csel	x8, x8, x9, lt  // lt = tstop
   161fc:	asr	x8, x8, #6
   16200:	add	x1, x8, #0x1
   16204:	bl	c3d0 <mpfr_round_p@plt>
   16208:	cbnz	w0, 162ec <mpfr_const_log2_internal@@Base+0x364>
   1620c:	ldur	x21, [x29, #-248]
   16210:	sub	x8, x19, x24
   16214:	cmp	x21, x8
   16218:	b.gt	162d0 <mpfr_const_log2_internal@@Base+0x348>
   1621c:	add	x24, x24, x21
   16220:	cmp	x24, #0x0
   16224:	mov	x23, #0x5555555555555555    	// #6148914691236517205
   16228:	cinc	x8, x24, lt  // lt = tstop
   1622c:	cmp	x24, x19
   16230:	mov	w25, #0x1                   	// #1
   16234:	movk	x23, #0x5556
   16238:	b.gt	16348 <mpfr_const_log2_internal@@Base+0x3c0>
   1623c:	asr	x27, x8, #1
   16240:	sub	x8, x24, #0x1
   16244:	add	x9, x24, #0x3e
   16248:	cmp	x8, #0x0
   1624c:	ldur	x1, [x29, #-216]
   16250:	csel	x8, x9, x8, lt  // lt = tstop
   16254:	asr	x8, x8, #6
   16258:	add	x21, x8, #0x1
   1625c:	lsl	x2, x21, #4
   16260:	stur	x2, [x29, #-216]
   16264:	cbz	x1, 162ac <mpfr_const_log2_internal@@Base+0x324>
   16268:	ldur	x0, [x29, #-208]
   1626c:	bl	c260 <mpfr_reallocate_func@plt>
   16270:	b	162b4 <mpfr_const_log2_internal@@Base+0x32c>
   16274:	mov	w1, #0x30                  	// #48
   16278:	mov	w21, #0x1                   	// #1
   1627c:	b	16090 <mpfr_const_log2_internal@@Base+0x108>
   16280:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   16284:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   16288:	mov	w1, #0x94                  	// #148
   1628c:	add	x0, x0, #0x9b1
   16290:	add	x2, x2, #0x9be
   16294:	bl	cb90 <mpfr_assert_fail@plt>
   16298:	b	16074 <mpfr_const_log2_internal@@Base+0xec>
   1629c:	sub	x0, x29, #0xe0
   162a0:	bl	be70 <mpfr_tmp_allocate@plt>
   162a4:	mov	x25, x0
   162a8:	b	160a4 <mpfr_const_log2_internal@@Base+0x11c>
   162ac:	mov	x0, x2
   162b0:	bl	cd50 <mpfr_allocate_func@plt>
   162b4:	add	x8, x0, x21, lsl #3
   162b8:	stur	x0, [x29, #-208]
   162bc:	stur	x0, [x29, #-16]
   162c0:	stur	w25, [x29, #-32]
   162c4:	stur	x24, [x29, #-72]
   162c8:	stp	x8, x24, [x29, #-48]
   162cc:	b	1604c <mpfr_const_log2_internal@@Base+0xc4>
   162d0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   162d4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   162d8:	mov	w1, #0xb1                  	// #177
   162dc:	add	x0, x0, #0x9b1
   162e0:	add	x2, x2, #0x9c6
   162e4:	bl	cb90 <mpfr_assert_fail@plt>
   162e8:	b	1621c <mpfr_const_log2_internal@@Base+0x294>
   162ec:	ldur	w3, [x29, #-32]
   162f0:	ldur	w2, [x29, #-228]
   162f4:	sub	x1, x29, #0x28
   162f8:	mov	x0, x20
   162fc:	bl	c6f0 <mpfr_set4@plt>
   16300:	ldur	x1, [x29, #-216]
   16304:	mov	w19, w0
   16308:	cbz	x1, 16314 <mpfr_const_log2_internal@@Base+0x38c>
   1630c:	ldur	x0, [x29, #-208]
   16310:	bl	cc80 <mpfr_free_func@plt>
   16314:	ldur	x0, [x29, #-224]
   16318:	cbnz	x0, 16340 <mpfr_const_log2_internal@@Base+0x3b8>
   1631c:	mov	w0, w19
   16320:	mov	sp, x29
   16324:	ldp	x20, x19, [sp, #80]
   16328:	ldp	x22, x21, [sp, #64]
   1632c:	ldp	x24, x23, [sp, #48]
   16330:	ldp	x26, x25, [sp, #32]
   16334:	ldp	x28, x27, [sp, #16]
   16338:	ldp	x29, x30, [sp], #96
   1633c:	ret
   16340:	bl	c460 <mpfr_tmp_free@plt>
   16344:	b	1631c <mpfr_const_log2_internal@@Base+0x394>
   16348:	bl	c940 <mpfr_abort_prec_max@plt>

000000000001634c <mpfr_const_log2@@Base>:
   1634c:	stp	x29, x30, [sp, #-16]!
   16350:	mov	x29, sp
   16354:	mov	w2, w1
   16358:	mov	x8, x0
   1635c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16360:	ldr	x1, [x0, #2640]
   16364:	add	x0, x0, #0xa50
   16368:	blr	x1
   1636c:	mrs	x9, tpidr_el0
   16370:	add	x1, x9, x0
   16374:	mov	x0, x8
   16378:	ldp	x29, x30, [sp], #16
   1637c:	b	c3e0 <mpfr_cache@plt>
   16380:	stp	x29, x30, [sp, #-96]!
   16384:	add	x8, x3, #0x1
   16388:	stp	x24, x23, [sp, #48]
   1638c:	stp	x22, x21, [sp, #64]
   16390:	stp	x20, x19, [sp, #80]
   16394:	mov	x23, x3
   16398:	mov	x20, x2
   1639c:	mov	x19, x1
   163a0:	cmp	x8, x4
   163a4:	mov	x21, x0
   163a8:	str	x27, [sp, #16]
   163ac:	stp	x26, x25, [sp, #32]
   163b0:	mov	x29, sp
   163b4:	b.ne	1641c <mpfr_const_log2@@Base+0xd0>  // b.any
   163b8:	cbz	x23, 1657c <mpfr_const_log2@@Base+0x230>
   163bc:	mov	x0, x19
   163c0:	mov	x1, x23
   163c4:	bl	bd60 <__gmpz_set_ui@plt>
   163c8:	ldr	w8, [x19, #4]
   163cc:	lsr	x9, x23, #61
   163d0:	neg	w8, w8
   163d4:	str	w8, [x19, #4]
   163d8:	cbz	x9, 16588 <mpfr_const_log2@@Base+0x23c>
   163dc:	mov	x0, x20
   163e0:	mov	x1, x23
   163e4:	bl	bd60 <__gmpz_set_ui@plt>
   163e8:	mov	w2, #0x1                   	// #1
   163ec:	mov	x0, x20
   163f0:	mov	x1, x20
   163f4:	bl	c290 <__gmpz_mul_2exp@plt>
   163f8:	mov	w2, #0x1                   	// #1
   163fc:	mov	x0, x20
   16400:	mov	x1, x20
   16404:	bl	c3c0 <__gmpz_add_ui@plt>
   16408:	mov	w2, #0x2                   	// #2
   1640c:	mov	x0, x20
   16410:	mov	x1, x20
   16414:	bl	c290 <__gmpz_mul_2exp@plt>
   16418:	b	16598 <mpfr_const_log2@@Base+0x24c>
   1641c:	mov	x24, x4
   16420:	lsr	x8, x4, #1
   16424:	and	w9, w23, w24
   16428:	add	x8, x8, x23, lsr #1
   1642c:	and	x9, x9, #0x1
   16430:	add	x26, x8, x9
   16434:	mov	w22, w5
   16438:	mov	w5, #0x1                   	// #1
   1643c:	mov	x0, x21
   16440:	mov	x1, x19
   16444:	mov	x2, x20
   16448:	mov	x3, x23
   1644c:	mov	x4, x26
   16450:	bl	16380 <mpfr_const_log2@@Base+0x34>
   16454:	add	x27, x21, #0x10
   16458:	add	x25, x19, #0x10
   1645c:	add	x23, x20, #0x10
   16460:	mov	x0, x27
   16464:	mov	x1, x25
   16468:	mov	x2, x23
   1646c:	mov	x3, x26
   16470:	mov	x4, x24
   16474:	mov	w5, w22
   16478:	bl	16380 <mpfr_const_log2@@Base+0x34>
   1647c:	mov	x0, x21
   16480:	mov	x1, x21
   16484:	mov	x2, x23
   16488:	bl	c090 <__gmpz_mul@plt>
   1648c:	mov	x0, x27
   16490:	mov	x1, x27
   16494:	mov	x2, x19
   16498:	bl	c090 <__gmpz_mul@plt>
   1649c:	mov	x0, x21
   164a0:	mov	x1, x21
   164a4:	mov	x2, x27
   164a8:	bl	ca10 <__gmpz_add@plt>
   164ac:	cbz	w22, 164c0 <mpfr_const_log2@@Base+0x174>
   164b0:	mov	x0, x19
   164b4:	mov	x1, x19
   164b8:	mov	x2, x25
   164bc:	bl	c090 <__gmpz_mul@plt>
   164c0:	mov	x0, x20
   164c4:	mov	x1, x20
   164c8:	mov	x2, x23
   164cc:	bl	c090 <__gmpz_mul@plt>
   164d0:	mov	x0, x21
   164d4:	mov	x1, xzr
   164d8:	bl	bb50 <__gmpz_scan1@plt>
   164dc:	cbz	x0, 16560 <mpfr_const_log2@@Base+0x214>
   164e0:	mov	x23, x0
   164e4:	mov	x0, x20
   164e8:	mov	x1, xzr
   164ec:	bl	bb50 <__gmpz_scan1@plt>
   164f0:	cmp	x0, x23
   164f4:	csel	x23, x0, x23, cc  // cc = lo, ul, last
   164f8:	cbz	w22, 16510 <mpfr_const_log2@@Base+0x1c4>
   164fc:	mov	x0, x19
   16500:	mov	x1, xzr
   16504:	bl	bb50 <__gmpz_scan1@plt>
   16508:	cmp	x0, x23
   1650c:	csel	x23, x0, x23, cc  // cc = lo, ul, last
   16510:	cbz	x23, 16560 <mpfr_const_log2@@Base+0x214>
   16514:	mov	x0, x21
   16518:	mov	x1, x21
   1651c:	mov	x2, x23
   16520:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   16524:	mov	x0, x20
   16528:	mov	x1, x20
   1652c:	mov	x2, x23
   16530:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   16534:	cbz	w22, 16560 <mpfr_const_log2@@Base+0x214>
   16538:	mov	x0, x19
   1653c:	mov	x1, x19
   16540:	mov	x2, x23
   16544:	ldp	x20, x19, [sp, #80]
   16548:	ldp	x22, x21, [sp, #64]
   1654c:	ldp	x24, x23, [sp, #48]
   16550:	ldp	x26, x25, [sp, #32]
   16554:	ldr	x27, [sp, #16]
   16558:	ldp	x29, x30, [sp], #96
   1655c:	b	c1d0 <__gmpz_fdiv_q_2exp@plt>
   16560:	ldp	x20, x19, [sp, #80]
   16564:	ldp	x22, x21, [sp, #64]
   16568:	ldp	x24, x23, [sp, #48]
   1656c:	ldp	x26, x25, [sp, #32]
   16570:	ldr	x27, [sp, #16]
   16574:	ldp	x29, x30, [sp], #96
   16578:	ret
   1657c:	mov	w1, #0x3                   	// #3
   16580:	mov	x0, x19
   16584:	bl	bd60 <__gmpz_set_ui@plt>
   16588:	mov	w1, #0x4                   	// #4
   1658c:	bfi	x1, x23, #3, #61
   16590:	mov	x0, x20
   16594:	bl	bd60 <__gmpz_set_ui@plt>
   16598:	mov	x0, x21
   1659c:	mov	x1, x19
   165a0:	ldp	x20, x19, [sp, #80]
   165a4:	ldp	x22, x21, [sp, #64]
   165a8:	ldp	x24, x23, [sp, #48]
   165ac:	ldp	x26, x25, [sp, #32]
   165b0:	ldr	x27, [sp, #16]
   165b4:	ldp	x29, x30, [sp], #96
   165b8:	b	c050 <__gmpz_set@plt>

00000000000165bc <mpfr_log@@Base>:
   165bc:	sub	sp, sp, #0x160
   165c0:	stp	x29, x30, [sp, #256]
   165c4:	stp	x28, x27, [sp, #272]
   165c8:	stp	x26, x25, [sp, #288]
   165cc:	stp	x24, x23, [sp, #304]
   165d0:	stp	x22, x21, [sp, #320]
   165d4:	stp	x20, x19, [sp, #336]
   165d8:	ldr	x25, [x1, #16]
   165dc:	mov	x22, #0x2                   	// #2
   165e0:	movk	x22, #0x8000, lsl #48
   165e4:	add	x8, x22, #0x2
   165e8:	mov	x21, x1
   165ec:	cmp	x25, x8
   165f0:	mov	x19, x0
   165f4:	add	x29, sp, #0x100
   165f8:	str	w2, [sp, #36]
   165fc:	b.lt	16a9c <mpfr_log@@Base+0x4e0>  // b.tstop
   16600:	ldr	w8, [x21, #8]
   16604:	tbnz	w8, #31, 16b5c <mpfr_log@@Base+0x5a0>
   16608:	cmp	x25, #0x1
   1660c:	b.ne	16628 <mpfr_log@@Base+0x6c>  // b.any
   16610:	mov	w1, #0x1                   	// #1
   16614:	mov	x0, x21
   16618:	mov	x2, xzr
   1661c:	mov	w20, #0x1                   	// #1
   16620:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   16624:	cbz	w0, 16b28 <mpfr_log@@Base+0x56c>
   16628:	ldr	x27, [x19]
   1662c:	subs	x20, x27, #0x1
   16630:	b.eq	16aec <mpfr_log@@Base+0x530>  // b.none
   16634:	b.le	16b0c <mpfr_log@@Base+0x550>
   16638:	clz	x8, x20
   1663c:	mov	w9, #0x80                  	// #128
   16640:	sub	w8, w9, w8, lsl #1
   16644:	sxtw	x8, w8
   16648:	add	x9, x8, x27
   1664c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16650:	ldr	x1, [x0, #2656]
   16654:	add	x0, x0, #0xa60
   16658:	blr	x1
   1665c:	mrs	x26, tpidr_el0
   16660:	ldr	w12, [x26, x0]
   16664:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16668:	ldr	x1, [x0, #2592]
   1666c:	add	x0, x0, #0xa20
   16670:	blr	x1
   16674:	ldr	x13, [x26, x0]
   16678:	mov	x8, x0
   1667c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16680:	ldr	x1, [x0, #2624]
   16684:	add	x0, x0, #0xa40
   16688:	blr	x1
   1668c:	ldr	x14, [x26, x0]
   16690:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   16694:	str	x10, [x26, x8]
   16698:	sub	x8, x22, #0x10d
   1669c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   166a0:	cmp	x9, x8
   166a4:	str	x11, [x26, x0]
   166a8:	b.gt	16b88 <mpfr_log@@Base+0x5cc>
   166ac:	add	x8, x9, #0x9
   166b0:	add	x10, x9, #0x48
   166b4:	cmp	x8, #0x0
   166b8:	csel	x8, x10, x8, lt  // lt = tstop
   166bc:	asr	x8, x8, #6
   166c0:	add	x23, x9, #0xa
   166c4:	cmp	x9, #0x1f7
   166c8:	add	x28, x8, #0x1
   166cc:	str	w12, [sp, #32]
   166d0:	stp	x14, x13, [sp, #16]
   166d4:	b.lt	166e8 <mpfr_log@@Base+0x12c>  // b.tstop
   166d8:	lsl	x22, x28, #4
   166dc:	mov	x0, x22
   166e0:	bl	cd50 <mpfr_allocate_func@plt>
   166e4:	b	166f4 <mpfr_log@@Base+0x138>
   166e8:	add	x8, sp, #0x28
   166ec:	mov	x22, xzr
   166f0:	add	x0, x8, #0x10
   166f4:	ldr	w9, [sp, #36]
   166f8:	stp	x22, x0, [sp, #40]
   166fc:	stur	x23, [x29, #-40]
   16700:	stur	x0, [x29, #-16]
   16704:	adrp	x22, 70000 <__gmpfr_l2b@@Base+0x2e0>
   16708:	adrp	x24, 70000 <__gmpfr_l2b@@Base+0x2e0>
   1670c:	ldr	x22, [x22, #3984]
   16710:	ldr	x24, [x24, #3944]
   16714:	cmp	w9, #0x0
   16718:	mov	x9, #0x2                   	// #2
   1671c:	add	x8, x0, x28, lsl #3
   16720:	mov	x20, #0x4                   	// #4
   16724:	movk	x9, #0x8000, lsl #48
   16728:	mov	w10, #0x1                   	// #1
   1672c:	movk	x20, #0x8000, lsl #48
   16730:	sub	x9, x9, #0x103
   16734:	stur	x8, [x29, #-48]
   16738:	cinc	x27, x27, eq  // eq = none
   1673c:	mov	w8, #0x40                  	// #64
   16740:	stur	w10, [x29, #-32]
   16744:	stur	x23, [x29, #-72]
   16748:	stp	x9, x8, [sp]
   1674c:	add	x8, x23, #0x3
   16750:	add	x9, x23, #0x4
   16754:	cmp	x8, #0x0
   16758:	csel	x8, x9, x8, lt  // lt = tstop
   1675c:	asr	x8, x8, #1
   16760:	sub	x28, x8, x25
   16764:	sub	x0, x29, #0x48
   16768:	mov	x1, x21
   1676c:	mov	x2, x28
   16770:	mov	w3, wzr
   16774:	stur	w10, [x29, #-64]
   16778:	bl	bc40 <mpfr_mul_2si@plt>
   1677c:	sub	x0, x29, #0x28
   16780:	sub	x2, x29, #0x48
   16784:	mov	x1, x22
   16788:	mov	w3, wzr
   1678c:	bl	c670 <mpfr_div@plt>
   16790:	sub	x0, x29, #0x48
   16794:	sub	x2, x29, #0x28
   16798:	mov	x1, x24
   1679c:	mov	w3, wzr
   167a0:	bl	bac0 <mpfr_agm@plt>
   167a4:	sub	x0, x29, #0x48
   167a8:	sub	x1, x29, #0x48
   167ac:	mov	w2, #0x1                   	// #1
   167b0:	mov	w3, wzr
   167b4:	bl	c320 <mpfr_mul_2ui@plt>
   167b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   167bc:	ldr	x1, [x0, #2704]
   167c0:	add	x0, x0, #0xa90
   167c4:	blr	x1
   167c8:	add	x1, x26, x0
   167cc:	sub	x0, x29, #0x28
   167d0:	mov	w2, wzr
   167d4:	bl	c3e0 <mpfr_cache@plt>
   167d8:	sub	x0, x29, #0x48
   167dc:	sub	x1, x29, #0x28
   167e0:	sub	x2, x29, #0x48
   167e4:	mov	w3, wzr
   167e8:	bl	c670 <mpfr_div@plt>
   167ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   167f0:	ldr	x1, [x0, #2640]
   167f4:	add	x0, x0, #0xa50
   167f8:	blr	x1
   167fc:	add	x1, x26, x0
   16800:	sub	x0, x29, #0x28
   16804:	mov	w2, wzr
   16808:	bl	c3e0 <mpfr_cache@plt>
   1680c:	sub	x0, x29, #0x28
   16810:	sub	x1, x29, #0x28
   16814:	mov	x2, x28
   16818:	mov	w3, wzr
   1681c:	bl	c9c0 <mpfr_mul_si@plt>
   16820:	sub	x0, x29, #0x28
   16824:	sub	x1, x29, #0x48
   16828:	sub	x2, x29, #0x28
   1682c:	mov	w3, wzr
   16830:	bl	bc20 <mpfr_sub@plt>
   16834:	ldur	x8, [x29, #-24]
   16838:	mov	x10, #0x4                   	// #4
   1683c:	movk	x10, #0x8000, lsl #48
   16840:	cmp	x8, x20
   16844:	b.lt	168b0 <mpfr_log@@Base+0x2f4>  // b.tstop
   16848:	ldur	x9, [x29, #-56]
   1684c:	cmp	x9, x10
   16850:	b.lt	168b0 <mpfr_log@@Base+0x2f4>  // b.tstop
   16854:	ldur	x10, [x29, #-40]
   16858:	sub	x8, x9, x8
   1685c:	ldur	x0, [x29, #-16]
   16860:	bic	x28, x8, x8, asr #63
   16864:	sub	x9, x10, #0x1
   16868:	add	x10, x10, #0x3e
   1686c:	cmp	x9, #0x0
   16870:	csel	x9, x10, x9, lt  // lt = tstop
   16874:	sub	x8, x23, x28
   16878:	asr	x9, x9, #6
   1687c:	add	x1, x9, #0x1
   16880:	sub	x2, x8, #0x4
   16884:	mov	x3, x27
   16888:	bl	c3d0 <mpfr_round_p@plt>
   1688c:	cbnz	w0, 169d8 <mpfr_log@@Base+0x41c>
   16890:	subs	x20, x23, #0x1
   16894:	b.eq	16998 <mpfr_log@@Base+0x3dc>  // b.none
   16898:	b.le	169bc <mpfr_log@@Base+0x400>
   1689c:	clz	x8, x20
   168a0:	mov	w9, #0x40                  	// #64
   168a4:	sub	x8, x9, x8
   168a8:	add	x8, x8, x28
   168ac:	b	168c8 <mpfr_log@@Base+0x30c>
   168b0:	subs	x28, x23, #0x1
   168b4:	b.eq	16990 <mpfr_log@@Base+0x3d4>  // b.none
   168b8:	b.le	169a0 <mpfr_log@@Base+0x3e4>
   168bc:	clz	x8, x28
   168c0:	mov	w9, #0x40                  	// #64
   168c4:	sub	x8, x9, x8
   168c8:	add	x23, x8, x23
   168cc:	mov	x8, #0x2                   	// #2
   168d0:	ldr	x20, [sp, #8]
   168d4:	movk	x8, #0x8000, lsl #48
   168d8:	sub	x8, x8, x23
   168dc:	sub	x8, x8, #0x103
   168e0:	cmp	x20, x8
   168e4:	b.gt	16974 <mpfr_log@@Base+0x3b8>
   168e8:	ldr	x9, [sp]
   168ec:	add	x23, x23, x20
   168f0:	cmp	x23, #0x0
   168f4:	cinc	x8, x23, lt  // lt = tstop
   168f8:	cmp	x23, x9
   168fc:	b.gt	16b88 <mpfr_log@@Base+0x5cc>
   16900:	asr	x8, x8, #1
   16904:	str	x8, [sp, #8]
   16908:	sub	x8, x23, #0x1
   1690c:	add	x9, x23, #0x3e
   16910:	cmp	x8, #0x0
   16914:	ldr	x1, [sp, #40]
   16918:	csel	x8, x9, x8, lt  // lt = tstop
   1691c:	asr	x8, x8, #6
   16920:	add	x28, x8, #0x1
   16924:	lsl	x2, x28, #4
   16928:	str	x2, [sp, #40]
   1692c:	cbz	x1, 1693c <mpfr_log@@Base+0x380>
   16930:	ldr	x0, [sp, #48]
   16934:	bl	c260 <mpfr_reallocate_func@plt>
   16938:	b	16944 <mpfr_log@@Base+0x388>
   1693c:	mov	x0, x2
   16940:	bl	cd50 <mpfr_allocate_func@plt>
   16944:	mov	w10, #0x1                   	// #1
   16948:	add	x8, x0, x28, lsl #3
   1694c:	str	x0, [sp, #48]
   16950:	stur	x0, [x29, #-16]
   16954:	stur	w10, [x29, #-32]
   16958:	stur	x23, [x29, #-72]
   1695c:	stp	x8, x23, [x29, #-48]
   16960:	adrp	x22, 70000 <__gmpfr_l2b@@Base+0x2e0>
   16964:	ldr	x22, [x22, #3984]
   16968:	mov	x20, #0x4                   	// #4
   1696c:	movk	x20, #0x8000, lsl #48
   16970:	b	1674c <mpfr_log@@Base+0x190>
   16974:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   16978:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   1697c:	mov	w1, #0xb5                  	// #181
   16980:	add	x0, x0, #0xa09
   16984:	add	x2, x2, #0xff6
   16988:	bl	cb90 <mpfr_assert_fail@plt>
   1698c:	b	168e8 <mpfr_log@@Base+0x32c>
   16990:	mov	x8, xzr
   16994:	b	168c8 <mpfr_log@@Base+0x30c>
   16998:	mov	x8, xzr
   1699c:	b	168a8 <mpfr_log@@Base+0x2ec>
   169a0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   169a4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   169a8:	mov	w1, #0xb2                  	// #178
   169ac:	add	x0, x0, #0xa09
   169b0:	add	x2, x2, #0xa0f
   169b4:	bl	cb90 <mpfr_assert_fail@plt>
   169b8:	b	168bc <mpfr_log@@Base+0x300>
   169bc:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   169c0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   169c4:	mov	w1, #0xac                  	// #172
   169c8:	add	x0, x0, #0xa09
   169cc:	add	x2, x2, #0xa0f
   169d0:	bl	cb90 <mpfr_assert_fail@plt>
   169d4:	b	1689c <mpfr_log@@Base+0x2e0>
   169d8:	ldur	w3, [x29, #-32]
   169dc:	ldr	w2, [sp, #36]
   169e0:	sub	x1, x29, #0x28
   169e4:	mov	x0, x19
   169e8:	bl	c6f0 <mpfr_set4@plt>
   169ec:	ldr	x1, [sp, #40]
   169f0:	mov	w21, w0
   169f4:	cbz	x1, 16a00 <mpfr_log@@Base+0x444>
   169f8:	ldr	x0, [sp, #48]
   169fc:	bl	cc80 <mpfr_free_func@plt>
   16a00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16a04:	ldr	x1, [x0, #2656]
   16a08:	add	x0, x0, #0xa60
   16a0c:	blr	x1
   16a10:	ldr	w9, [sp, #32]
   16a14:	str	w9, [x26, x0]
   16a18:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16a1c:	ldr	x1, [x0, #2592]
   16a20:	add	x0, x0, #0xa20
   16a24:	blr	x1
   16a28:	ldr	x10, [sp, #24]
   16a2c:	str	x10, [x26, x0]
   16a30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16a34:	ldr	x1, [x0, #2624]
   16a38:	add	x0, x0, #0xa40
   16a3c:	blr	x1
   16a40:	ldr	x11, [sp, #16]
   16a44:	str	x11, [x26, x0]
   16a48:	ldr	x8, [x19, #16]
   16a4c:	cmp	x8, x11
   16a50:	b.gt	16af4 <mpfr_log@@Base+0x538>
   16a54:	cmp	x8, x10
   16a58:	b.lt	16af4 <mpfr_log@@Base+0x538>  // b.tstop
   16a5c:	cbz	w21, 16a78 <mpfr_log@@Base+0x4bc>
   16a60:	orr	w8, w9, #0x8
   16a64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16a68:	ldr	x1, [x0, #2656]
   16a6c:	add	x0, x0, #0xa60
   16a70:	blr	x1
   16a74:	str	w8, [x26, x0]
   16a78:	mov	w0, w21
   16a7c:	ldp	x20, x19, [sp, #336]
   16a80:	ldp	x22, x21, [sp, #320]
   16a84:	ldp	x24, x23, [sp, #304]
   16a88:	ldp	x26, x25, [sp, #288]
   16a8c:	ldp	x28, x27, [sp, #272]
   16a90:	ldp	x29, x30, [sp, #256]
   16a94:	add	sp, sp, #0x160
   16a98:	ret
   16a9c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   16aa0:	cmp	x25, x8
   16aa4:	b.eq	16b3c <mpfr_log@@Base+0x580>  // b.none
   16aa8:	mov	x8, #0x2                   	// #2
   16aac:	movk	x8, #0x8000, lsl #48
   16ab0:	cmp	x25, x8
   16ab4:	b.eq	16b5c <mpfr_log@@Base+0x5a0>  // b.none
   16ab8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   16abc:	mov	w9, #0xffffffff            	// #-1
   16ac0:	str	x8, [x19, #16]
   16ac4:	str	w9, [x19, #8]
   16ac8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16acc:	ldr	x1, [x0, #2656]
   16ad0:	add	x0, x0, #0xa60
   16ad4:	blr	x1
   16ad8:	mrs	x8, tpidr_el0
   16adc:	ldr	w9, [x8, x0]
   16ae0:	mov	w21, wzr
   16ae4:	orr	w9, w9, #0x20
   16ae8:	b	16b80 <mpfr_log@@Base+0x5c4>
   16aec:	mov	x8, xzr
   16af0:	b	16648 <mpfr_log@@Base+0x8c>
   16af4:	ldr	w2, [sp, #36]
   16af8:	mov	x0, x19
   16afc:	mov	w1, w21
   16b00:	bl	cb80 <mpfr_check_range@plt>
   16b04:	mov	w21, w0
   16b08:	b	16a78 <mpfr_log@@Base+0x4bc>
   16b0c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   16b10:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   16b14:	add	x0, x0, #0xa09
   16b18:	add	x2, x2, #0xf16
   16b1c:	mov	w1, #0x70                  	// #112
   16b20:	bl	cb90 <mpfr_assert_fail@plt>
   16b24:	b	16638 <mpfr_log@@Base+0x7c>
   16b28:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   16b2c:	mov	w21, wzr
   16b30:	str	x8, [x19, #16]
   16b34:	str	w20, [x19, #8]
   16b38:	b	16a78 <mpfr_log@@Base+0x4bc>
   16b3c:	ldr	w8, [x21, #8]
   16b40:	tbnz	w8, #31, 16b5c <mpfr_log@@Base+0x5a0>
   16b44:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   16b48:	mov	w9, #0x1                   	// #1
   16b4c:	mov	w21, wzr
   16b50:	str	x8, [x19, #16]
   16b54:	str	w9, [x19, #8]
   16b58:	b	16a78 <mpfr_log@@Base+0x4bc>
   16b5c:	str	x22, [x19, #16]
   16b60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16b64:	ldr	x1, [x0, #2656]
   16b68:	add	x0, x0, #0xa60
   16b6c:	blr	x1
   16b70:	mrs	x8, tpidr_el0
   16b74:	ldr	w9, [x8, x0]
   16b78:	mov	w21, wzr
   16b7c:	orr	w9, w9, #0x4
   16b80:	str	w9, [x8, x0]
   16b84:	b	16a78 <mpfr_log@@Base+0x4bc>
   16b88:	bl	c940 <mpfr_abort_prec_max@plt>

0000000000016b8c <mpfr_modf@@Base>:
   16b8c:	stp	x29, x30, [sp, #-48]!
   16b90:	stp	x22, x21, [sp, #16]
   16b94:	stp	x20, x19, [sp, #32]
   16b98:	mov	w22, w3
   16b9c:	mov	x19, x1
   16ba0:	mov	x20, x0
   16ba4:	cmp	x0, x1
   16ba8:	mov	x21, x2
   16bac:	mov	x29, sp
   16bb0:	b.eq	16d80 <mpfr_modf@@Base+0x1f4>  // b.none
   16bb4:	ldr	x8, [x21, #16]
   16bb8:	mov	x9, #0x2                   	// #2
   16bbc:	movk	x9, #0x8000, lsl #48
   16bc0:	add	x10, x9, #0x2
   16bc4:	cmp	x8, x10
   16bc8:	b.lt	16d9c <mpfr_modf@@Base+0x210>  // b.tstop
   16bcc:	cmp	x8, #0x0
   16bd0:	b.le	16c14 <mpfr_modf@@Base+0x88>
   16bd4:	ldr	x9, [x21]
   16bd8:	cmp	x8, x9
   16bdc:	b.ge	16c38 <mpfr_modf@@Base+0xac>  // b.tcont
   16be0:	cmp	x20, x21
   16be4:	b.eq	16ca8 <mpfr_modf@@Base+0x11c>  // b.none
   16be8:	mov	x0, x20
   16bec:	mov	x1, x21
   16bf0:	mov	w2, w22
   16bf4:	bl	bfe0 <mpfr_rint_trunc@plt>
   16bf8:	mov	w20, w0
   16bfc:	mov	x0, x19
   16c00:	mov	x1, x21
   16c04:	mov	w2, w22
   16c08:	bl	bf70 <mpfr_frac@plt>
   16c0c:	mov	w19, w0
   16c10:	b	16cd8 <mpfr_modf@@Base+0x14c>
   16c14:	cmp	x19, x21
   16c18:	b.eq	16c5c <mpfr_modf@@Base+0xd0>  // b.none
   16c1c:	ldr	w3, [x21, #8]
   16c20:	mov	x0, x19
   16c24:	mov	x1, x21
   16c28:	mov	w2, w22
   16c2c:	bl	c6f0 <mpfr_set4@plt>
   16c30:	mov	w8, w0
   16c34:	b	16c60 <mpfr_modf@@Base+0xd4>
   16c38:	cmp	x20, x21
   16c3c:	b.eq	16d28 <mpfr_modf@@Base+0x19c>  // b.none
   16c40:	ldr	w3, [x21, #8]
   16c44:	mov	x0, x20
   16c48:	mov	x1, x21
   16c4c:	mov	w2, w22
   16c50:	bl	c6f0 <mpfr_set4@plt>
   16c54:	mov	w8, w0
   16c58:	b	16d2c <mpfr_modf@@Base+0x1a0>
   16c5c:	mov	w8, wzr
   16c60:	ldr	w9, [x21, #8]
   16c64:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   16c68:	str	x10, [x20, #16]
   16c6c:	str	w9, [x20, #8]
   16c70:	cbz	w8, 16d6c <mpfr_modf@@Base+0x1e0>
   16c74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16c78:	ldr	x1, [x0, #2656]
   16c7c:	add	x0, x0, #0xa60
   16c80:	blr	x1
   16c84:	mrs	x9, tpidr_el0
   16c88:	ldr	w10, [x9, x0]
   16c8c:	cmp	w8, #0x1
   16c90:	mov	w8, #0x4                   	// #4
   16c94:	mov	w11, #0x8                   	// #8
   16c98:	orr	w10, w10, #0x8
   16c9c:	str	w10, [x9, x0]
   16ca0:	csel	w8, w11, w8, lt  // lt = tstop
   16ca4:	b	16d6c <mpfr_modf@@Base+0x1e0>
   16ca8:	cmp	x20, x19
   16cac:	b.eq	16e0c <mpfr_modf@@Base+0x280>  // b.none
   16cb0:	mov	x0, x19
   16cb4:	mov	x1, x20
   16cb8:	mov	w2, w22
   16cbc:	bl	bf70 <mpfr_frac@plt>
   16cc0:	mov	w19, w0
   16cc4:	mov	x0, x20
   16cc8:	mov	x1, x20
   16ccc:	mov	w2, w22
   16cd0:	bl	bfe0 <mpfr_rint_trunc@plt>
   16cd4:	mov	w20, w0
   16cd8:	cmp	w20, #0x1
   16cdc:	mov	w8, #0x1                   	// #1
   16ce0:	cinc	w8, w8, lt  // lt = tstop
   16ce4:	cmp	w20, #0x0
   16ce8:	mov	w9, #0x4                   	// #4
   16cec:	mov	w10, #0x8                   	// #8
   16cf0:	csel	w8, wzr, w8, eq  // eq = none
   16cf4:	cmp	w19, #0x1
   16cf8:	csel	w9, w10, w9, lt  // lt = tstop
   16cfc:	cmp	w19, #0x0
   16d00:	csel	w9, wzr, w9, eq  // eq = none
   16d04:	orr	w8, w9, w8
   16d08:	cbz	w8, 16d6c <mpfr_modf@@Base+0x1e0>
   16d0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16d10:	ldr	x1, [x0, #2656]
   16d14:	add	x0, x0, #0xa60
   16d18:	blr	x1
   16d1c:	mrs	x9, tpidr_el0
   16d20:	ldr	w10, [x9, x0]
   16d24:	b	16d64 <mpfr_modf@@Base+0x1d8>
   16d28:	mov	w8, wzr
   16d2c:	ldr	w9, [x21, #8]
   16d30:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   16d34:	str	x10, [x19, #16]
   16d38:	str	w9, [x19, #8]
   16d3c:	cbz	w8, 16d6c <mpfr_modf@@Base+0x1e0>
   16d40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16d44:	ldr	x1, [x0, #2656]
   16d48:	add	x0, x0, #0xa60
   16d4c:	blr	x1
   16d50:	mrs	x9, tpidr_el0
   16d54:	ldr	w10, [x9, x0]
   16d58:	cmp	w8, #0x1
   16d5c:	mov	w8, #0x1                   	// #1
   16d60:	cinc	w8, w8, lt  // lt = tstop
   16d64:	orr	w10, w10, #0x8
   16d68:	str	w10, [x9, x0]
   16d6c:	ldp	x20, x19, [sp, #32]
   16d70:	ldp	x22, x21, [sp, #16]
   16d74:	mov	w0, w8
   16d78:	ldp	x29, x30, [sp], #48
   16d7c:	ret
   16d80:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   16d84:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   16d88:	add	x0, x0, #0xa17
   16d8c:	add	x2, x2, #0xa1e
   16d90:	mov	w1, #0x2b                  	// #43
   16d94:	bl	cb90 <mpfr_assert_fail@plt>
   16d98:	b	16bb4 <mpfr_modf@@Base+0x28>
   16d9c:	cmp	x8, x9
   16da0:	b.ne	16dd0 <mpfr_modf@@Base+0x244>  // b.any
   16da4:	str	x9, [x20, #16]
   16da8:	str	x9, [x19, #16]
   16dac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16db0:	ldr	x1, [x0, #2656]
   16db4:	add	x0, x0, #0xa60
   16db8:	blr	x1
   16dbc:	mrs	x9, tpidr_el0
   16dc0:	ldr	w10, [x9, x0]
   16dc4:	mov	w8, wzr
   16dc8:	orr	w10, w10, #0x4
   16dcc:	b	16d68 <mpfr_modf@@Base+0x1dc>
   16dd0:	ldr	w9, [x21, #8]
   16dd4:	str	w9, [x20, #8]
   16dd8:	ldr	w10, [x21, #8]
   16ddc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   16de0:	cmp	x8, x9
   16de4:	mov	w8, wzr
   16de8:	str	w10, [x19, #8]
   16dec:	b.ne	16dfc <mpfr_modf@@Base+0x270>  // b.any
   16df0:	str	x9, [x20, #16]
   16df4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16df8:	b	16e04 <mpfr_modf@@Base+0x278>
   16dfc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   16e00:	str	x9, [x20, #16]
   16e04:	str	x9, [x19, #16]
   16e08:	b	16d6c <mpfr_modf@@Base+0x1e0>
   16e0c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   16e10:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   16e14:	add	x0, x0, #0xa17
   16e18:	add	x2, x2, #0xa29
   16e1c:	mov	w1, #0x60                  	// #96
   16e20:	bl	cb90 <mpfr_assert_fail@plt>
   16e24:	b	16cb0 <mpfr_modf@@Base+0x124>

0000000000016e28 <mpfr_mul_2exp@@Base>:
   16e28:	b	c320 <mpfr_mul_2ui@plt>

0000000000016e2c <mpfr_mul_2si@@Base>:
   16e2c:	stp	x29, x30, [sp, #-80]!
   16e30:	stp	x24, x23, [sp, #32]
   16e34:	stp	x22, x21, [sp, #48]
   16e38:	stp	x20, x19, [sp, #64]
   16e3c:	ldr	x24, [x1, #16]
   16e40:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   16e44:	mov	w20, w3
   16e48:	mov	x8, x1
   16e4c:	cmp	x24, x9
   16e50:	mov	x19, x0
   16e54:	str	x25, [sp, #16]
   16e58:	mov	x29, sp
   16e5c:	b.le	17170 <mpfr_mul_2si@@Base+0x344>
   16e60:	mov	x21, x2
   16e64:	cmp	x19, x8
   16e68:	b.eq	16eb8 <mpfr_mul_2si@@Base+0x8c>  // b.none
   16e6c:	ldr	w9, [x8, #8]
   16e70:	ldr	x13, [x19]
   16e74:	ldr	x22, [x19, #24]
   16e78:	str	w9, [x19, #8]
   16e7c:	ldr	x9, [x8]
   16e80:	cmp	x13, x9
   16e84:	b.ne	16f18 <mpfr_mul_2si@@Base+0xec>  // b.any
   16e88:	ldr	x1, [x8, #24]
   16e8c:	cmp	x22, x1
   16e90:	b.eq	16eb8 <mpfr_mul_2si@@Base+0x8c>  // b.none
   16e94:	sub	x8, x13, #0x1
   16e98:	add	x9, x13, #0x3e
   16e9c:	cmp	x8, #0x0
   16ea0:	csel	x8, x9, x8, lt  // lt = tstop
   16ea4:	asr	x8, x8, #6
   16ea8:	lsl	x8, x8, #3
   16eac:	add	x2, x8, #0x8
   16eb0:	mov	x0, x22
   16eb4:	bl	bad0 <memcpy@plt>
   16eb8:	mov	w23, wzr
   16ebc:	tbnz	x21, #63, 170b8 <mpfr_mul_2si@@Base+0x28c>
   16ec0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   16ec4:	ldr	x1, [x0, #2624]
   16ec8:	add	x0, x0, #0xa40
   16ecc:	blr	x1
   16ed0:	mrs	x8, tpidr_el0
   16ed4:	ldr	x8, [x8, x0]
   16ed8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   16edc:	add	x9, x21, x9
   16ee0:	cmp	x8, x9
   16ee4:	b.lt	16ef4 <mpfr_mul_2si@@Base+0xc8>  // b.tstop
   16ee8:	sub	x8, x8, x21
   16eec:	cmp	x24, x8
   16ef0:	b.le	170ec <mpfr_mul_2si@@Base+0x2c0>
   16ef4:	ldr	w2, [x19, #8]
   16ef8:	mov	x0, x19
   16efc:	mov	w1, w20
   16f00:	ldp	x20, x19, [sp, #64]
   16f04:	ldp	x22, x21, [sp, #48]
   16f08:	ldp	x24, x23, [sp, #32]
   16f0c:	ldr	x25, [sp, #16]
   16f10:	ldp	x29, x30, [sp], #80
   16f14:	b	bff0 <mpfr_overflow@plt>
   16f18:	sub	x10, x9, #0x1
   16f1c:	add	x11, x9, #0x3e
   16f20:	sub	x12, x13, #0x1
   16f24:	cmp	x10, #0x0
   16f28:	add	x15, x13, #0x3e
   16f2c:	csel	x10, x11, x10, lt  // lt = tstop
   16f30:	cmp	x12, #0x0
   16f34:	asr	x14, x10, #6
   16f38:	csel	x10, x15, x12, lt  // lt = tstop
   16f3c:	asr	x10, x10, #6
   16f40:	add	x18, x14, #0x1
   16f44:	cmp	x13, x9
   16f48:	add	x12, x10, #0x1
   16f4c:	b.ge	171cc <mpfr_mul_2si@@Base+0x3a0>  // b.tcont
   16f50:	ldr	x15, [x8, #24]
   16f54:	neg	w9, w13
   16f58:	ands	x16, x9, #0x3f
   16f5c:	mvn	x11, x10
   16f60:	add	x9, x15, x18, lsl #3
   16f64:	add	x1, x9, x11, lsl #3
   16f68:	b.eq	171fc <mpfr_mul_2si@@Base+0x3d0>  // b.none
   16f6c:	ldr	x17, [x1]
   16f70:	sub	x16, x16, #0x1
   16f74:	mov	w0, #0x1                   	// #1
   16f78:	lsl	x0, x0, x16
   16f7c:	sub	x2, x0, #0x1
   16f80:	and	x16, x17, x0
   16f84:	and	x17, x17, x2
   16f88:	cbz	w20, 16fc0 <mpfr_mul_2si@@Base+0x194>
   16f8c:	cbz	x16, 16fc0 <mpfr_mul_2si@@Base+0x194>
   16f90:	lsl	x25, x0, #1
   16f94:	cmp	w20, #0x5
   16f98:	b.eq	1708c <mpfr_mul_2si@@Base+0x260>  // b.none
   16f9c:	cmp	w20, #0x1
   16fa0:	b.eq	16ffc <mpfr_mul_2si@@Base+0x1d0>  // b.none
   16fa4:	cbnz	w20, 16fec <mpfr_mul_2si@@Base+0x1c0>
   16fa8:	cbz	x16, 16ffc <mpfr_mul_2si@@Base+0x1d0>
   16fac:	cbnz	x17, 17018 <mpfr_mul_2si@@Base+0x1ec>
   16fb0:	ldr	x16, [x1]
   16fb4:	tst	x16, x25
   16fb8:	b.ne	17018 <mpfr_mul_2si@@Base+0x1ec>  // b.any
   16fbc:	b	17004 <mpfr_mul_2si@@Base+0x1d8>
   16fc0:	cbnz	x17, 16f90 <mpfr_mul_2si@@Base+0x164>
   16fc4:	sub	x18, x18, x12
   16fc8:	cbz	x18, 16f90 <mpfr_mul_2si@@Base+0x164>
   16fcc:	mvn	x17, x10
   16fd0:	add	x18, x17, x14
   16fd4:	ldr	x17, [x15, x18, lsl #3]
   16fd8:	subs	x18, x18, #0x1
   16fdc:	cset	w2, cs  // cs = hs, nlast
   16fe0:	cbnz	x17, 16f90 <mpfr_mul_2si@@Base+0x164>
   16fe4:	tbnz	w2, #0, 16fd4 <mpfr_mul_2si@@Base+0x1a8>
   16fe8:	b	16f90 <mpfr_mul_2si@@Base+0x164>
   16fec:	ldr	w18, [x8, #8]
   16ff0:	add	w18, w20, w18, lsr #31
   16ff4:	cmp	w18, #0x3
   16ff8:	b.ne	17010 <mpfr_mul_2si@@Base+0x1e4>  // b.any
   16ffc:	orr	x9, x17, x16
   17000:	cbz	x9, 1708c <mpfr_mul_2si@@Base+0x260>
   17004:	ldr	w8, [x8, #8]
   17008:	neg	w23, w8
   1700c:	b	17090 <mpfr_mul_2si@@Base+0x264>
   17010:	orr	x16, x17, x16
   17014:	cbz	x16, 1708c <mpfr_mul_2si@@Base+0x260>
   17018:	ldr	x12, [x1]
   1701c:	ldr	w23, [x8, #8]
   17020:	adds	x8, x12, x25
   17024:	str	x8, [x22]
   17028:	b.cc	17134 <mpfr_mul_2si@@Base+0x308>  // b.lo, b.ul, b.last
   1702c:	sub	x13, x14, x10
   17030:	add	x13, x15, x13, lsl #3
   17034:	mov	x12, xzr
   17038:	add	x8, x22, #0x8
   1703c:	add	x13, x13, #0x8
   17040:	add	x14, x12, #0x1
   17044:	cmp	x14, x10
   17048:	b.gt	17160 <mpfr_mul_2si@@Base+0x334>
   1704c:	ldr	x15, [x13, x12, lsl #3]
   17050:	mov	x12, x14
   17054:	adds	x15, x15, #0x1
   17058:	str	x15, [x8], #8
   1705c:	b.cs	17040 <mpfr_mul_2si@@Base+0x214>  // b.hs, b.nlast
   17060:	cmp	x1, x22
   17064:	b.eq	170a4 <mpfr_mul_2si@@Base+0x278>  // b.none
   17068:	cmp	x14, x10
   1706c:	b.ge	170a4 <mpfr_mul_2si@@Base+0x278>  // b.tcont
   17070:	add	x10, x11, x14
   17074:	add	x10, x10, #0x1
   17078:	ldr	x11, [x9, x10, lsl #3]
   1707c:	adds	x10, x10, #0x1
   17080:	str	x11, [x8], #8
   17084:	b.cc	17078 <mpfr_mul_2si@@Base+0x24c>  // b.lo, b.ul, b.last
   17088:	b	170a4 <mpfr_mul_2si@@Base+0x278>
   1708c:	mov	w23, wzr
   17090:	cmp	x22, x1
   17094:	b.eq	170a4 <mpfr_mul_2si@@Base+0x278>  // b.none
   17098:	lsl	x2, x12, #3
   1709c:	mov	x0, x22
   170a0:	bl	bad0 <memcpy@plt>
   170a4:	ldr	x8, [x22]
   170a8:	neg	x9, x25
   170ac:	and	x8, x8, x9
   170b0:	str	x8, [x22]
   170b4:	tbz	x21, #63, 16ec0 <mpfr_mul_2si@@Base+0x94>
   170b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   170bc:	ldr	x1, [x0, #2592]
   170c0:	add	x0, x0, #0xa20
   170c4:	blr	x1
   170c8:	mrs	x8, tpidr_el0
   170cc:	ldr	x8, [x8, x0]
   170d0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   170d4:	add	x9, x21, x9
   170d8:	cmp	x8, x9
   170dc:	b.gt	17198 <mpfr_mul_2si@@Base+0x36c>
   170e0:	sub	x9, x8, x21
   170e4:	cmp	x24, x9
   170e8:	b.lt	17198 <mpfr_mul_2si@@Base+0x36c>  // b.tstop
   170ec:	add	x8, x24, x21
   170f0:	str	x8, [x19, #16]
   170f4:	cbz	w23, 17118 <mpfr_mul_2si@@Base+0x2ec>
   170f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   170fc:	ldr	x1, [x0, #2656]
   17100:	add	x0, x0, #0xa60
   17104:	blr	x1
   17108:	mrs	x8, tpidr_el0
   1710c:	ldr	w9, [x8, x0]
   17110:	orr	w9, w9, #0x8
   17114:	str	w9, [x8, x0]
   17118:	mov	w0, w23
   1711c:	ldp	x20, x19, [sp, #64]
   17120:	ldp	x22, x21, [sp, #48]
   17124:	ldp	x24, x23, [sp, #32]
   17128:	ldr	x25, [sp, #16]
   1712c:	ldp	x29, x30, [sp], #80
   17130:	ret
   17134:	cmp	x13, #0x41
   17138:	b.lt	170a4 <mpfr_mul_2si@@Base+0x278>  // b.tstop
   1713c:	cmp	x1, x22
   17140:	b.eq	170a4 <mpfr_mul_2si@@Base+0x278>  // b.none
   17144:	add	x8, x11, #0x1
   17148:	add	x10, x22, #0x8
   1714c:	ldr	x11, [x9, x8, lsl #3]
   17150:	adds	x8, x8, #0x1
   17154:	str	x11, [x10], #8
   17158:	b.cc	1714c <mpfr_mul_2si@@Base+0x320>  // b.lo, b.ul, b.last
   1715c:	b	170a4 <mpfr_mul_2si@@Base+0x278>
   17160:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   17164:	add	x24, x24, #0x1
   17168:	str	x8, [x22, x10, lsl #3]
   1716c:	b	170a4 <mpfr_mul_2si@@Base+0x278>
   17170:	ldr	w3, [x8, #8]
   17174:	mov	x0, x19
   17178:	mov	w2, w20
   1717c:	ldp	x20, x19, [sp, #64]
   17180:	ldp	x22, x21, [sp, #48]
   17184:	ldp	x24, x23, [sp, #32]
   17188:	ldr	x25, [sp, #16]
   1718c:	mov	x1, x8
   17190:	ldp	x29, x30, [sp], #80
   17194:	b	c6f0 <mpfr_set4@plt>
   17198:	cbnz	w20, 17264 <mpfr_mul_2si@@Base+0x438>
   1719c:	mov	x9, #0x4000000000000000    	// #4611686018427387904
   171a0:	add	x9, x21, x9
   171a4:	cmp	x8, x9
   171a8:	b.gt	17260 <mpfr_mul_2si@@Base+0x434>
   171ac:	mvn	x9, x21
   171b0:	add	x8, x8, x9
   171b4:	cmp	x24, x8
   171b8:	b.lt	17260 <mpfr_mul_2si@@Base+0x434>  // b.tstop
   171bc:	ldr	w8, [x19, #8]
   171c0:	tbnz	w8, #31, 1724c <mpfr_mul_2si@@Base+0x420>
   171c4:	tbz	w23, #31, 17254 <mpfr_mul_2si@@Base+0x428>
   171c8:	b	17288 <mpfr_mul_2si@@Base+0x45c>
   171cc:	ldr	x1, [x8, #24]
   171d0:	sub	x23, x12, x18
   171d4:	add	x0, x22, x23, lsl #3
   171d8:	cmp	x0, x1
   171dc:	b.eq	171e8 <mpfr_mul_2si@@Base+0x3bc>  // b.none
   171e0:	lsl	x2, x18, #3
   171e4:	bl	bad0 <memcpy@plt>
   171e8:	lsl	x2, x23, #3
   171ec:	mov	x0, x22
   171f0:	mov	w1, wzr
   171f4:	bl	c1b0 <memset@plt>
   171f8:	b	16eb8 <mpfr_mul_2si@@Base+0x8c>
   171fc:	ldur	x17, [x1, #-8]
   17200:	and	x16, x17, #0x8000000000000000
   17204:	and	x17, x17, #0x7fffffffffffffff
   17208:	cbz	w20, 17218 <mpfr_mul_2si@@Base+0x3ec>
   1720c:	cbz	x16, 17218 <mpfr_mul_2si@@Base+0x3ec>
   17210:	mov	w25, #0x1                   	// #1
   17214:	b	16f94 <mpfr_mul_2si@@Base+0x168>
   17218:	mov	w25, #0x1                   	// #1
   1721c:	cbnz	x17, 16f94 <mpfr_mul_2si@@Base+0x168>
   17220:	sub	x18, x14, x12
   17224:	cbz	x18, 16f94 <mpfr_mul_2si@@Base+0x168>
   17228:	sub	x17, x14, x10
   1722c:	sub	x18, x17, #0x2
   17230:	mov	w25, #0x1                   	// #1
   17234:	ldr	x17, [x15, x18, lsl #3]
   17238:	subs	x18, x18, #0x1
   1723c:	cset	w0, cs  // cs = hs, nlast
   17240:	cbnz	x17, 16f94 <mpfr_mul_2si@@Base+0x168>
   17244:	tbnz	w0, #0, 17234 <mpfr_mul_2si@@Base+0x408>
   17248:	b	16f94 <mpfr_mul_2si@@Base+0x168>
   1724c:	cmp	w23, #0x1
   17250:	b.ge	17288 <mpfr_mul_2si@@Base+0x45c>  // b.tcont
   17254:	mov	x0, x19
   17258:	bl	bfb0 <mpfr_powerof2_raw@plt>
   1725c:	cbz	w0, 17288 <mpfr_mul_2si@@Base+0x45c>
   17260:	mov	w20, #0x1                   	// #1
   17264:	ldr	w2, [x19, #8]
   17268:	mov	x0, x19
   1726c:	mov	w1, w20
   17270:	ldp	x20, x19, [sp, #64]
   17274:	ldp	x22, x21, [sp, #48]
   17278:	ldp	x24, x23, [sp, #32]
   1727c:	ldr	x25, [sp, #16]
   17280:	ldp	x29, x30, [sp], #80
   17284:	b	c420 <mpfr_underflow@plt>
   17288:	mov	w20, wzr
   1728c:	b	17264 <mpfr_mul_2si@@Base+0x438>

0000000000017290 <mpfr_mul_2ui@@Base>:
   17290:	stp	x29, x30, [sp, #-64]!
   17294:	stp	x22, x21, [sp, #32]
   17298:	stp	x20, x19, [sp, #48]
   1729c:	mov	w19, w3
   172a0:	mov	x20, x0
   172a4:	cmp	x0, x1
   172a8:	mov	x21, x2
   172ac:	str	x23, [sp, #16]
   172b0:	mov	x29, sp
   172b4:	b.eq	172d0 <mpfr_mul_2ui@@Base+0x40>  // b.none
   172b8:	ldr	w3, [x1, #8]
   172bc:	mov	x0, x20
   172c0:	mov	w2, w19
   172c4:	bl	c6f0 <mpfr_set4@plt>
   172c8:	mov	w22, w0
   172cc:	b	172d4 <mpfr_mul_2ui@@Base+0x44>
   172d0:	mov	w22, wzr
   172d4:	ldr	x8, [x20, #16]
   172d8:	mov	x9, #0x4                   	// #4
   172dc:	movk	x9, #0x8000, lsl #48
   172e0:	cmp	x8, x9
   172e4:	b.lt	17354 <mpfr_mul_2ui@@Base+0xc4>  // b.tstop
   172e8:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   172ec:	tbz	x21, #63, 17314 <mpfr_mul_2ui@@Base+0x84>
   172f0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   172f4:	mov	x0, x20
   172f8:	mov	x1, x20
   172fc:	mov	w3, w19
   17300:	add	x21, x21, x23
   17304:	bl	c320 <mpfr_mul_2ui@plt>
   17308:	cbz	w0, 172ec <mpfr_mul_2ui@@Base+0x5c>
   1730c:	mov	w22, w0
   17310:	b	17354 <mpfr_mul_2ui@@Base+0xc4>
   17314:	ldr	x8, [x20, #16]
   17318:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1731c:	ldr	x1, [x0, #2624]
   17320:	add	x0, x0, #0xa40
   17324:	blr	x1
   17328:	mrs	x9, tpidr_el0
   1732c:	ldr	x9, [x9, x0]
   17330:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   17334:	add	x10, x21, x10
   17338:	cmp	x9, x10
   1733c:	b.lt	1736c <mpfr_mul_2ui@@Base+0xdc>  // b.tstop
   17340:	sub	x9, x9, x21
   17344:	cmp	x8, x9
   17348:	b.gt	1736c <mpfr_mul_2ui@@Base+0xdc>
   1734c:	add	x8, x8, x21
   17350:	str	x8, [x20, #16]
   17354:	mov	w0, w22
   17358:	ldp	x20, x19, [sp, #48]
   1735c:	ldp	x22, x21, [sp, #32]
   17360:	ldr	x23, [sp, #16]
   17364:	ldp	x29, x30, [sp], #64
   17368:	ret
   1736c:	ldr	w2, [x20, #8]
   17370:	mov	x0, x20
   17374:	mov	w1, w19
   17378:	ldp	x20, x19, [sp, #48]
   1737c:	ldp	x22, x21, [sp, #32]
   17380:	ldr	x23, [sp, #16]
   17384:	ldp	x29, x30, [sp], #64
   17388:	b	bff0 <mpfr_overflow@plt>

000000000001738c <mpfr_mul@@Base>:
   1738c:	stp	x29, x30, [sp, #-96]!
   17390:	stp	x28, x27, [sp, #16]
   17394:	stp	x26, x25, [sp, #32]
   17398:	stp	x24, x23, [sp, #48]
   1739c:	stp	x22, x21, [sp, #64]
   173a0:	stp	x20, x19, [sp, #80]
   173a4:	mov	x29, sp
   173a8:	sub	sp, sp, #0xe0
   173ac:	ldr	x27, [x1, #16]
   173b0:	mov	x8, #0x2                   	// #2
   173b4:	movk	x8, #0x8000, lsl #48
   173b8:	add	x9, x8, #0x2
   173bc:	mov	w5, w3
   173c0:	mov	x22, x2
   173c4:	mov	x25, x1
   173c8:	cmp	x27, x9
   173cc:	mov	x3, x0
   173d0:	b.lt	17e5c <mpfr_mul@@Base+0xad0>  // b.tstop
   173d4:	ldr	x28, [x22, #16]
   173d8:	cmp	x28, x9
   173dc:	b.lt	17e68 <mpfr_mul@@Base+0xadc>  // b.tstop
   173e0:	ldr	x20, [x3]
   173e4:	ldr	x23, [x25]
   173e8:	ldr	x19, [x22]
   173ec:	cmp	x20, x23
   173f0:	b.ne	178e8 <mpfr_mul@@Base+0x55c>  // b.any
   173f4:	cmp	x20, x19
   173f8:	b.ne	178e8 <mpfr_mul@@Base+0x55c>  // b.any
   173fc:	cmp	x20, #0x3f
   17400:	b.gt	174f0 <mpfr_mul@@Base+0x164>
   17404:	ldr	x8, [x25, #24]
   17408:	ldr	x10, [x22, #24]
   1740c:	ldr	x9, [x3, #24]
   17410:	ldr	x11, [x8]
   17414:	ldr	x12, [x10]
   17418:	neg	x8, x20
   1741c:	mov	w10, #0x1                   	// #1
   17420:	lsl	x10, x10, x8
   17424:	add	x8, x28, x27
   17428:	mul	x13, x12, x11
   1742c:	umulh	x15, x11, x12
   17430:	tbnz	x15, #63, 17440 <mpfr_mul@@Base+0xb4>
   17434:	sub	x8, x8, #0x1
   17438:	extr	x15, x15, x13, #63
   1743c:	lsl	x13, x13, #1
   17440:	neg	x16, x10
   17444:	and	x14, x15, x16
   17448:	str	x14, [x9]
   1744c:	ldr	w11, [x25, #8]
   17450:	ldr	w12, [x22, #8]
   17454:	mul	w2, w12, w11
   17458:	str	w2, [x3, #8]
   1745c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17460:	ldr	x1, [x0, #2624]
   17464:	add	x0, x0, #0xa40
   17468:	blr	x1
   1746c:	mrs	x11, tpidr_el0
   17470:	ldr	x12, [x11, x0]
   17474:	cmp	x8, x12
   17478:	b.gt	17fe4 <mpfr_mul@@Base+0xc58>
   1747c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   17480:	sub	x17, x10, #0x1
   17484:	lsr	x12, x12, x20
   17488:	and	x12, x15, x12
   1748c:	and	x15, x15, x17
   17490:	eor	x15, x15, x12
   17494:	orr	x13, x15, x13
   17498:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1749c:	ldr	x1, [x0, #2592]
   174a0:	add	x0, x0, #0xa20
   174a4:	blr	x1
   174a8:	ldr	x15, [x11, x0]
   174ac:	cmp	x8, x15
   174b0:	b.lt	1813c <mpfr_mul@@Base+0xdb0>  // b.tstop
   174b4:	mov	w23, wzr
   174b8:	cmp	w5, #0x5
   174bc:	str	x8, [x3, #16]
   174c0:	b.eq	17e04 <mpfr_mul@@Base+0xa78>  // b.none
   174c4:	orr	x14, x13, x12
   174c8:	cbz	x14, 17e04 <mpfr_mul@@Base+0xa78>
   174cc:	cmp	w5, #0x1
   174d0:	b.eq	17dd8 <mpfr_mul@@Base+0xa4c>  // b.none
   174d4:	cbnz	w5, 17c80 <mpfr_mul@@Base+0x8f4>
   174d8:	cbz	x12, 17dd8 <mpfr_mul@@Base+0xa4c>
   174dc:	cbnz	x13, 17c8c <mpfr_mul@@Base+0x900>
   174e0:	ldr	x12, [x9]
   174e4:	tst	x12, x10
   174e8:	b.ne	17c8c <mpfr_mul@@Base+0x900>  // b.any
   174ec:	b	17dd8 <mpfr_mul@@Base+0xa4c>
   174f0:	cmp	x20, #0x40
   174f4:	b.eq	17688 <mpfr_mul@@Base+0x2fc>  // b.none
   174f8:	cmp	x20, #0x7f
   174fc:	b.gt	17688 <mpfr_mul@@Base+0x2fc>
   17500:	ldr	x11, [x25, #24]
   17504:	ldr	x15, [x22, #24]
   17508:	neg	x9, x20
   1750c:	mov	w14, #0x1                   	// #1
   17510:	ldp	x17, x12, [x11]
   17514:	ldp	x16, x10, [x15]
   17518:	umulh	x11, x12, x10
   1751c:	umulh	x18, x12, x16
   17520:	ldr	x8, [x3, #24]
   17524:	mul	x15, x10, x12
   17528:	adds	x15, x18, x15
   1752c:	lsl	x9, x14, x9
   17530:	umulh	x18, x17, x10
   17534:	cinc	x11, x11, cs  // cs = hs, nlast
   17538:	adds	x15, x18, x15
   1753c:	sub	x13, x9, #0x1
   17540:	add	x18, x15, #0x2
   17544:	and	x18, x18, x13, lsr #2
   17548:	cinc	x11, x11, cs  // cs = hs, nlast
   1754c:	cmp	x18, #0x2
   17550:	b.ls	181c0 <mpfr_mul@@Base+0xe34>  // b.plast
   17554:	mov	w16, #0x1                   	// #1
   17558:	add	x10, x28, x27
   1755c:	tbnz	x11, #63, 17570 <mpfr_mul@@Base+0x1e4>
   17560:	sub	x10, x10, #0x1
   17564:	extr	x11, x11, x15, #63
   17568:	extr	x15, x15, x16, #63
   1756c:	lsl	x16, x16, #1
   17570:	neg	x18, x9
   17574:	and	x17, x15, x18
   17578:	stp	x17, x11, [x8]
   1757c:	ldr	w12, [x25, #8]
   17580:	ldr	w0, [x22, #8]
   17584:	mul	w2, w0, w12
   17588:	str	w2, [x3, #8]
   1758c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17590:	ldr	x1, [x0, #2624]
   17594:	add	x0, x0, #0xa40
   17598:	blr	x1
   1759c:	mrs	x12, tpidr_el0
   175a0:	ldr	x0, [x12, x0]
   175a4:	cmp	x10, x0
   175a8:	b.gt	17fe4 <mpfr_mul@@Base+0xc58>
   175ac:	mov	w0, #0x7f                  	// #127
   175b0:	mov	w1, #0x1                   	// #1
   175b4:	sub	x0, x0, x20
   175b8:	lsl	x0, x1, x0
   175bc:	and	x13, x15, x13
   175c0:	and	x15, x15, x0
   175c4:	eor	x13, x13, x15
   175c8:	orr	x14, x16, x14
   175cc:	orr	x13, x14, x13
   175d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   175d4:	ldr	x1, [x0, #2592]
   175d8:	add	x0, x0, #0xa20
   175dc:	blr	x1
   175e0:	ldr	x14, [x12, x0]
   175e4:	cmp	x10, x14
   175e8:	b.lt	1820c <mpfr_mul@@Base+0xe80>  // b.tstop
   175ec:	mov	w23, wzr
   175f0:	cmp	w5, #0x5
   175f4:	str	x10, [x3, #16]
   175f8:	b.eq	17e04 <mpfr_mul@@Base+0xa78>  // b.none
   175fc:	orr	x11, x13, x15
   17600:	cbz	x11, 17e04 <mpfr_mul@@Base+0xa78>
   17604:	cmp	w5, #0x1
   17608:	b.eq	17d3c <mpfr_mul@@Base+0x9b0>  // b.none
   1760c:	cbnz	w5, 17d30 <mpfr_mul@@Base+0x9a4>
   17610:	cbz	x15, 17d3c <mpfr_mul@@Base+0x9b0>
   17614:	cbnz	x13, 17624 <mpfr_mul@@Base+0x298>
   17618:	ldr	x11, [x8]
   1761c:	tst	x11, x9
   17620:	b.eq	17d3c <mpfr_mul@@Base+0x9b0>  // b.none
   17624:	ldp	x11, x13, [x8]
   17628:	adds	x9, x11, x9
   1762c:	str	x9, [x8]
   17630:	cinc	x9, x13, eq  // eq = none
   17634:	str	x9, [x8, #8]
   17638:	cbnz	x9, 17668 <mpfr_mul@@Base+0x2dc>
   1763c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   17640:	str	x9, [x8, #8]
   17644:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17648:	ldr	x1, [x0, #2624]
   1764c:	add	x0, x0, #0xa40
   17650:	blr	x1
   17654:	ldr	x8, [x12, x0]
   17658:	cmp	x10, x8
   1765c:	b.ge	17fe4 <mpfr_mul@@Base+0xc58>  // b.tcont
   17660:	add	x8, x10, #0x1
   17664:	str	x8, [x3, #16]
   17668:	cbz	w2, 17e00 <mpfr_mul@@Base+0xa74>
   1766c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17670:	ldr	x1, [x0, #2656]
   17674:	add	x0, x0, #0xa60
   17678:	blr	x1
   1767c:	ldr	w8, [x12, x0]
   17680:	mov	w23, w2
   17684:	b	17d58 <mpfr_mul@@Base+0x9cc>
   17688:	cmp	x20, #0x40
   1768c:	b.ne	17748 <mpfr_mul@@Base+0x3bc>  // b.any
   17690:	ldr	x8, [x25, #24]
   17694:	ldr	x9, [x22, #24]
   17698:	ldr	x10, [x8]
   1769c:	ldr	x11, [x9]
   176a0:	ldr	x9, [x3, #24]
   176a4:	add	x8, x28, x27
   176a8:	umulh	x12, x10, x11
   176ac:	mul	x10, x11, x10
   176b0:	tbnz	x12, #63, 176c0 <mpfr_mul@@Base+0x334>
   176b4:	sub	x8, x8, #0x1
   176b8:	extr	x12, x12, x10, #63
   176bc:	lsl	x10, x10, #1
   176c0:	str	x12, [x9]
   176c4:	ldr	w11, [x25, #8]
   176c8:	ldr	w13, [x22, #8]
   176cc:	mul	w2, w13, w11
   176d0:	str	w2, [x3, #8]
   176d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   176d8:	ldr	x1, [x0, #2624]
   176dc:	add	x0, x0, #0xa40
   176e0:	blr	x1
   176e4:	mrs	x11, tpidr_el0
   176e8:	ldr	x13, [x11, x0]
   176ec:	cmp	x8, x13
   176f0:	b.gt	17fe4 <mpfr_mul@@Base+0xc58>
   176f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   176f8:	ldr	x1, [x0, #2592]
   176fc:	add	x0, x0, #0xa20
   17700:	blr	x1
   17704:	ldr	x13, [x11, x0]
   17708:	cmp	x8, x13
   1770c:	b.lt	182ec <mpfr_mul@@Base+0xf60>  // b.tstop
   17710:	mov	w23, wzr
   17714:	cmp	w5, #0x5
   17718:	str	x8, [x3, #16]
   1771c:	b.eq	17e04 <mpfr_mul@@Base+0xa78>  // b.none
   17720:	cbz	x10, 17e04 <mpfr_mul@@Base+0xa78>
   17724:	cmp	w5, #0x1
   17728:	b.eq	17dd8 <mpfr_mul@@Base+0xa4c>  // b.none
   1772c:	cbnz	w5, 17d64 <mpfr_mul@@Base+0x9d8>
   17730:	tbz	x10, #63, 17dd8 <mpfr_mul@@Base+0xa4c>
   17734:	and	x10, x10, #0x7fffffffffffffff
   17738:	cbnz	x10, 17d70 <mpfr_mul@@Base+0x9e4>
   1773c:	ldrb	w10, [x9]
   17740:	tbnz	w10, #0, 17d70 <mpfr_mul@@Base+0x9e4>
   17744:	b	17dd8 <mpfr_mul@@Base+0xa4c>
   17748:	sub	x8, x20, #0x81
   1774c:	cmp	x8, #0x3e
   17750:	b.hi	178e8 <mpfr_mul@@Base+0x55c>  // b.pmore
   17754:	ldr	x1, [x25, #24]
   17758:	ldr	x2, [x22, #24]
   1775c:	neg	x8, x20
   17760:	mov	w9, #0x1                   	// #1
   17764:	lsl	x21, x9, x8
   17768:	ldp	x11, x8, [x1, #8]
   1776c:	ldp	x13, x9, [x2, #8]
   17770:	ldr	x12, [x2]
   17774:	mov	w10, #0x2                   	// #2
   17778:	umulh	x12, x8, x12
   1777c:	mul	x15, x13, x8
   17780:	mul	x16, x11, x9
   17784:	adds	x15, x16, x15
   17788:	cset	w16, cs  // cs = hs, nlast
   1778c:	csinc	x10, x10, xzr, cs  // cs = hs, nlast
   17790:	adds	x12, x12, x15
   17794:	ldr	x14, [x1]
   17798:	csel	x10, x16, x10, cc  // cc = lo, ul, last
   1779c:	umulh	x15, x11, x13
   177a0:	adds	x12, x12, x15
   177a4:	ldr	x19, [x3, #24]
   177a8:	umulh	x14, x14, x9
   177ac:	cinc	x10, x10, cs  // cs = hs, nlast
   177b0:	adds	x12, x14, x12
   177b4:	sub	x23, x21, #0x1
   177b8:	add	x14, x12, #0x4
   177bc:	and	x14, x14, x23, lsr #2
   177c0:	cinc	x10, x10, cs  // cs = hs, nlast
   177c4:	cmp	x14, #0x5
   177c8:	b.cc	1834c <mpfr_mul@@Base+0xfc0>  // b.lo, b.ul, b.last
   177cc:	umulh	x13, x8, x13
   177d0:	umulh	x15, x8, x9
   177d4:	madd	x8, x9, x8, x13
   177d8:	umulh	x11, x11, x9
   177dc:	mov	w16, #0x2                   	// #2
   177e0:	add	x17, x11, x8
   177e4:	cmp	x8, x13
   177e8:	add	x9, x10, x17
   177ec:	cset	w8, cc  // cc = lo, ul, last
   177f0:	csinc	x13, x16, xzr, cc  // cc = lo, ul, last
   177f4:	cmp	x17, x11
   177f8:	csel	x8, x8, x13, cs  // cs = hs, nlast
   177fc:	cmp	x9, x10
   17800:	cinc	x8, x8, cc  // cc = lo, ul, last
   17804:	mov	w14, #0x1                   	// #1
   17808:	add	x10, x8, x15
   1780c:	mov	w16, #0x1                   	// #1
   17810:	add	x8, x28, x27
   17814:	tbnz	x10, #63, 1782c <mpfr_mul@@Base+0x4a0>
   17818:	sub	x8, x8, #0x1
   1781c:	extr	x10, x10, x9, #63
   17820:	extr	x9, x9, x12, #63
   17824:	extr	x12, x12, x16, #63
   17828:	lsl	x16, x16, #1
   1782c:	neg	x17, x21
   17830:	and	x13, x12, x17
   17834:	stp	x9, x10, [x19, #8]
   17838:	str	x13, [x19]
   1783c:	ldr	w11, [x25, #8]
   17840:	ldr	w15, [x22, #8]
   17844:	mul	w2, w15, w11
   17848:	str	w2, [x3, #8]
   1784c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17850:	ldr	x1, [x0, #2624]
   17854:	add	x0, x0, #0xa40
   17858:	blr	x1
   1785c:	mrs	x11, tpidr_el0
   17860:	ldr	x15, [x11, x0]
   17864:	cmp	x8, x15
   17868:	b.gt	17fe4 <mpfr_mul@@Base+0xc58>
   1786c:	mov	w15, #0xbf                  	// #191
   17870:	mov	w18, #0x1                   	// #1
   17874:	sub	x15, x15, x20
   17878:	lsl	x15, x18, x15
   1787c:	and	x0, x12, x23
   17880:	and	x15, x12, x15
   17884:	eor	x12, x0, x15
   17888:	orr	x14, x16, x14
   1788c:	orr	x12, x14, x12
   17890:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17894:	ldr	x1, [x0, #2592]
   17898:	add	x0, x0, #0xa20
   1789c:	blr	x1
   178a0:	ldr	x14, [x11, x0]
   178a4:	cmp	x8, x14
   178a8:	b.lt	1837c <mpfr_mul@@Base+0xff0>  // b.tstop
   178ac:	mov	w23, wzr
   178b0:	cmp	w5, #0x5
   178b4:	str	x8, [x3, #16]
   178b8:	b.eq	17e04 <mpfr_mul@@Base+0xa78>  // b.none
   178bc:	orr	x9, x12, x15
   178c0:	cbz	x9, 17e04 <mpfr_mul@@Base+0xa78>
   178c4:	cmp	w5, #0x1
   178c8:	b.eq	17dd8 <mpfr_mul@@Base+0xa4c>  // b.none
   178cc:	cbnz	w5, 17dcc <mpfr_mul@@Base+0xa40>
   178d0:	cbz	x15, 17dd8 <mpfr_mul@@Base+0xa4c>
   178d4:	cbnz	x12, 17e28 <mpfr_mul@@Base+0xa9c>
   178d8:	ldr	x9, [x19]
   178dc:	tst	x9, x21
   178e0:	b.ne	17e28 <mpfr_mul@@Base+0xa9c>  // b.any
   178e4:	b	17dd8 <mpfr_mul@@Base+0xa4c>
   178e8:	ldr	w16, [x25, #8]
   178ec:	ldr	w18, [x22, #8]
   178f0:	add	x21, x19, x23
   178f4:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   178f8:	cmp	x21, x8
   178fc:	b.cs	17ec0 <mpfr_mul@@Base+0xb34>  // b.hs, b.nlast
   17900:	sub	x8, x23, #0x1
   17904:	add	x9, x23, #0x3e
   17908:	sub	x10, x19, #0x1
   1790c:	cmp	x8, #0x0
   17910:	add	x11, x19, #0x3e
   17914:	csel	x8, x9, x8, lt  // lt = tstop
   17918:	cmp	x10, #0x0
   1791c:	asr	x19, x8, #6
   17920:	csel	x8, x11, x10, lt  // lt = tstop
   17924:	sub	x12, x21, #0x1
   17928:	asr	x14, x8, #6
   1792c:	add	x13, x21, #0x3e
   17930:	cmp	x12, #0x0
   17934:	add	x26, x19, #0x1
   17938:	add	x23, x14, #0x1
   1793c:	csel	x8, x13, x12, lt  // lt = tstop
   17940:	add	x0, x23, x26
   17944:	asr	x6, x8, #6
   17948:	lsl	x1, x0, #3
   1794c:	add	x17, x6, #0x1
   17950:	cmp	x1, #0x4, lsl #12
   17954:	stur	xzr, [x29, #-64]
   17958:	b.hi	17ef4 <mpfr_mul@@Base+0xb68>  // b.pmore
   1795c:	add	x9, x1, #0xf
   17960:	mov	x8, sp
   17964:	and	x9, x9, #0xfffffffffffffff0
   17968:	sub	x24, x8, x9
   1796c:	mov	sp, x24
   17970:	cmp	x19, x14
   17974:	csel	x2, x23, x26, lt  // lt = tstop
   17978:	csel	x4, x26, x23, lt  // lt = tstop
   1797c:	csel	x10, x25, x22, lt  // lt = tstop
   17980:	csel	x11, x22, x25, lt  // lt = tstop
   17984:	cmp	x2, #0x2
   17988:	stp	x10, x11, [x29, #-136]
   1798c:	b.gt	17a70 <mpfr_mul@@Base+0x6e4>
   17990:	ldr	x9, [x11, #24]
   17994:	ldr	x10, [x10, #24]
   17998:	cmp	x2, #0x1
   1799c:	ldr	x11, [x9]
   179a0:	ldr	x12, [x10]
   179a4:	umulh	x8, x11, x12
   179a8:	mul	x11, x12, x11
   179ac:	stp	x11, x8, [x24]
   179b0:	b.eq	17a18 <mpfr_mul@@Base+0x68c>  // b.none
   179b4:	ldr	x11, [x9, #8]
   179b8:	ldr	x13, [x10]
   179bc:	mov	x12, xzr
   179c0:	umulh	x14, x11, x13
   179c4:	mul	x13, x13, x11
   179c8:	adds	x11, x8, x13
   179cc:	adc	x8, x14, x12
   179d0:	cmp	x4, #0x1
   179d4:	stp	x11, x8, [x24, #8]
   179d8:	b.eq	17a18 <mpfr_mul@@Base+0x68c>  // b.none
   179dc:	ldr	x10, [x10, #8]
   179e0:	ldp	x13, x9, [x9]
   179e4:	mov	x12, xzr
   179e8:	umulh	x15, x9, x10
   179ec:	umulh	x14, x13, x10
   179f0:	mul	x9, x9, x10
   179f4:	mul	x13, x10, x13
   179f8:	adds	x10, x14, x9
   179fc:	adc	x9, x15, x12
   17a00:	adds	x12, x11, x13
   17a04:	adc	x8, x8, x10
   17a08:	cmp	x8, x10
   17a0c:	stp	x12, x8, [x24, #8]
   17a10:	cinc	x8, x9, cc  // cc = lo, ul, last
   17a14:	str	x8, [x24, #24]
   17a18:	sub	x9, x0, x17
   17a1c:	lsr	x23, x8, #63
   17a20:	add	x26, x24, x9, lsl #3
   17a24:	tbnz	x8, #63, 17ac0 <mpfr_mul@@Base+0x734>
   17a28:	stur	x3, [x29, #-112]
   17a2c:	mov	w3, #0x1                   	// #1
   17a30:	mov	x0, x26
   17a34:	mov	x1, x26
   17a38:	mov	x2, x17
   17a3c:	mov	w24, w16
   17a40:	mov	w25, w18
   17a44:	mov	w20, w5
   17a48:	mov	x22, x17
   17a4c:	mov	x19, x6
   17a50:	bl	bd70 <__gmpn_lshift@plt>
   17a54:	ldur	x3, [x29, #-112]
   17a58:	mov	x6, x19
   17a5c:	mov	w18, w25
   17a60:	mov	w16, w24
   17a64:	mov	x17, x22
   17a68:	mov	w5, w20
   17a6c:	b	17ac0 <mpfr_mul@@Base+0x734>
   17a70:	cmp	x4, #0x15
   17a74:	stp	x17, x3, [x29, #-120]
   17a78:	stp	w18, w16, [x29, #-104]
   17a7c:	b.ge	18010 <mpfr_mul@@Base+0xc84>  // b.tcont
   17a80:	mov	x22, x6
   17a84:	mov	x19, x0
   17a88:	mov	w25, w5
   17a8c:	ldr	x1, [x11, #24]
   17a90:	ldr	x3, [x10, #24]
   17a94:	mov	x0, x24
   17a98:	bl	c7f0 <__gmpn_mul@plt>
   17a9c:	ldur	x17, [x29, #-120]
   17aa0:	lsr	x23, x0, #63
   17aa4:	sub	x8, x19, x17
   17aa8:	add	x26, x24, x8, lsl #3
   17aac:	tbz	x0, #63, 180e0 <mpfr_mul@@Base+0xd54>
   17ab0:	ldur	x3, [x29, #-112]
   17ab4:	mov	w5, w25
   17ab8:	ldp	w18, w16, [x29, #-104]
   17abc:	mov	x6, x22
   17ac0:	ldr	x12, [x3]
   17ac4:	add	x8, x28, x27
   17ac8:	add	x19, x23, x8
   17acc:	ldr	x25, [x3, #24]
   17ad0:	sub	x8, x12, #0x1
   17ad4:	add	x9, x12, #0x3e
   17ad8:	cmp	x8, #0x0
   17adc:	csel	x8, x9, x8, lt  // lt = tstop
   17ae0:	asr	x9, x8, #6
   17ae4:	mul	w24, w18, w16
   17ae8:	sub	x20, x19, #0x1
   17aec:	cmp	x12, x21
   17af0:	add	x11, x9, #0x1
   17af4:	b.ge	17f2c <mpfr_mul@@Base+0xba0>  // b.tcont
   17af8:	neg	w10, w12
   17afc:	add	x8, x26, x17, lsl #3
   17b00:	ands	x13, x10, #0x3f
   17b04:	mvn	x10, x9
   17b08:	add	x1, x8, x10, lsl #3
   17b0c:	b.eq	17f98 <mpfr_mul@@Base+0xc0c>  // b.none
   17b10:	ldr	x14, [x1]
   17b14:	sub	x13, x13, #0x1
   17b18:	mov	w15, #0x1                   	// #1
   17b1c:	lsl	x15, x15, x13
   17b20:	sub	x16, x15, #0x1
   17b24:	and	x13, x14, x15
   17b28:	and	x14, x14, x16
   17b2c:	cbz	w5, 17b68 <mpfr_mul@@Base+0x7dc>
   17b30:	cbz	x13, 17b68 <mpfr_mul@@Base+0x7dc>
   17b34:	lsl	x21, x15, #1
   17b38:	cmp	w5, #0x5
   17b3c:	b.eq	17c28 <mpfr_mul@@Base+0x89c>  // b.none
   17b40:	cmp	w5, #0x1
   17b44:	b.eq	17ba0 <mpfr_mul@@Base+0x814>  // b.none
   17b48:	cbnz	w5, 17b94 <mpfr_mul@@Base+0x808>
   17b4c:	cbz	x13, 17ba0 <mpfr_mul@@Base+0x814>
   17b50:	cbnz	x14, 17bb8 <mpfr_mul@@Base+0x82c>
   17b54:	ldr	x13, [x1]
   17b58:	tst	x13, x21
   17b5c:	b.ne	17bb8 <mpfr_mul@@Base+0x82c>  // b.any
   17b60:	neg	w23, w24
   17b64:	b	17c2c <mpfr_mul@@Base+0x8a0>
   17b68:	cbnz	x14, 17b34 <mpfr_mul@@Base+0x7a8>
   17b6c:	sub	x16, x17, x11
   17b70:	cbz	x16, 17b34 <mpfr_mul@@Base+0x7a8>
   17b74:	mvn	x14, x9
   17b78:	add	x16, x14, x6
   17b7c:	ldr	x14, [x26, x16, lsl #3]
   17b80:	subs	x16, x16, #0x1
   17b84:	cset	w17, cs  // cs = hs, nlast
   17b88:	cbnz	x14, 17b34 <mpfr_mul@@Base+0x7a8>
   17b8c:	tbnz	w17, #0, 17b7c <mpfr_mul@@Base+0x7f0>
   17b90:	b	17b34 <mpfr_mul@@Base+0x7a8>
   17b94:	add	w15, w5, w24, lsr #31
   17b98:	cmp	w15, #0x3
   17b9c:	b.ne	17bb0 <mpfr_mul@@Base+0x824>  // b.any
   17ba0:	orr	x8, x14, x13
   17ba4:	cmp	x8, #0x0
   17ba8:	csneg	w23, wzr, w24, eq  // eq = none
   17bac:	b	17c2c <mpfr_mul@@Base+0x8a0>
   17bb0:	orr	x13, x14, x13
   17bb4:	cbz	x13, 17c28 <mpfr_mul@@Base+0x89c>
   17bb8:	ldr	x11, [x1]
   17bbc:	adds	x11, x11, x21
   17bc0:	str	x11, [x25]
   17bc4:	b.cc	17c54 <mpfr_mul@@Base+0x8c8>  // b.lo, b.ul, b.last
   17bc8:	sub	x13, x6, x9
   17bcc:	add	x13, x26, x13, lsl #3
   17bd0:	mov	x12, xzr
   17bd4:	add	x11, x25, #0x8
   17bd8:	add	x13, x13, #0x8
   17bdc:	add	x14, x12, #0x1
   17be0:	cmp	x14, x9
   17be4:	b.gt	17ca0 <mpfr_mul@@Base+0x914>
   17be8:	ldr	x15, [x13, x12, lsl #3]
   17bec:	mov	x12, x14
   17bf0:	adds	x15, x15, #0x1
   17bf4:	str	x15, [x11], #8
   17bf8:	b.cs	17bdc <mpfr_mul@@Base+0x850>  // b.hs, b.nlast
   17bfc:	cmp	x1, x25
   17c00:	b.eq	17cac <mpfr_mul@@Base+0x920>  // b.none
   17c04:	cmp	x14, x9
   17c08:	b.ge	17cac <mpfr_mul@@Base+0x920>  // b.tcont
   17c0c:	add	x9, x10, x14
   17c10:	add	x9, x9, #0x1
   17c14:	ldr	x10, [x8, x9, lsl #3]
   17c18:	adds	x9, x9, #0x1
   17c1c:	str	x10, [x11], #8
   17c20:	b.cc	17c14 <mpfr_mul@@Base+0x888>  // b.lo, b.ul, b.last
   17c24:	b	17cac <mpfr_mul@@Base+0x920>
   17c28:	mov	w23, wzr
   17c2c:	cmp	x25, x1
   17c30:	b.eq	17cb0 <mpfr_mul@@Base+0x924>  // b.none
   17c34:	lsl	x2, x11, #3
   17c38:	mov	x0, x25
   17c3c:	mov	x26, x3
   17c40:	mov	w27, w5
   17c44:	bl	bad0 <memcpy@plt>
   17c48:	mov	w5, w27
   17c4c:	mov	x3, x26
   17c50:	b	17cb0 <mpfr_mul@@Base+0x924>
   17c54:	cmp	x12, #0x41
   17c58:	b.lt	17cac <mpfr_mul@@Base+0x920>  // b.tstop
   17c5c:	cmp	x1, x25
   17c60:	b.eq	17cac <mpfr_mul@@Base+0x920>  // b.none
   17c64:	add	x9, x10, #0x1
   17c68:	add	x10, x25, #0x8
   17c6c:	ldr	x11, [x8, x9, lsl #3]
   17c70:	adds	x9, x9, #0x1
   17c74:	str	x11, [x10], #8
   17c78:	b.cc	17c6c <mpfr_mul@@Base+0x8e0>  // b.lo, b.ul, b.last
   17c7c:	b	17cac <mpfr_mul@@Base+0x920>
   17c80:	add	w12, w5, w2, lsr #31
   17c84:	cmp	w12, #0x3
   17c88:	b.eq	17dd8 <mpfr_mul@@Base+0xa4c>  // b.none
   17c8c:	ldr	x12, [x9]
   17c90:	adds	x10, x12, x10
   17c94:	str	x10, [x9]
   17c98:	b.ne	17dac <mpfr_mul@@Base+0xa20>  // b.any
   17c9c:	b	17d80 <mpfr_mul@@Base+0x9f4>
   17ca0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   17ca4:	str	x8, [x25, x9, lsl #3]
   17ca8:	mov	x20, x19
   17cac:	mov	w23, w24
   17cb0:	ldr	x8, [x25]
   17cb4:	neg	x9, x21
   17cb8:	and	x8, x8, x9
   17cbc:	str	x8, [x25]
   17cc0:	ldur	x0, [x29, #-64]
   17cc4:	cbnz	x0, 17f70 <mpfr_mul@@Base+0xbe4>
   17cc8:	str	x20, [x3, #16]
   17ccc:	str	w24, [x3, #8]
   17cd0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17cd4:	ldr	x1, [x0, #2624]
   17cd8:	add	x0, x0, #0xa40
   17cdc:	blr	x1
   17ce0:	mrs	x8, tpidr_el0
   17ce4:	ldr	x9, [x8, x0]
   17ce8:	cmp	x20, x9
   17cec:	b.gt	17f88 <mpfr_mul@@Base+0xbfc>
   17cf0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17cf4:	ldr	x1, [x0, #2592]
   17cf8:	add	x0, x0, #0xa20
   17cfc:	blr	x1
   17d00:	ldr	x9, [x8, x0]
   17d04:	cmp	x20, x9
   17d08:	b.lt	17fb4 <mpfr_mul@@Base+0xc28>  // b.tstop
   17d0c:	cbz	w23, 17e04 <mpfr_mul@@Base+0xa78>
   17d10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17d14:	ldr	x1, [x0, #2656]
   17d18:	add	x0, x0, #0xa60
   17d1c:	blr	x1
   17d20:	ldr	w9, [x8, x0]
   17d24:	orr	w9, w9, #0x8
   17d28:	str	w9, [x8, x0]
   17d2c:	b	17e04 <mpfr_mul@@Base+0xa78>
   17d30:	add	w11, w5, w2, lsr #31
   17d34:	cmp	w11, #0x3
   17d38:	b.ne	17624 <mpfr_mul@@Base+0x298>  // b.any
   17d3c:	cbz	w2, 17e00 <mpfr_mul@@Base+0xa74>
   17d40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17d44:	ldr	x1, [x0, #2656]
   17d48:	add	x0, x0, #0xa60
   17d4c:	blr	x1
   17d50:	ldr	w8, [x12, x0]
   17d54:	neg	w23, w2
   17d58:	orr	w8, w8, #0x8
   17d5c:	str	w8, [x12, x0]
   17d60:	b	17e04 <mpfr_mul@@Base+0xa78>
   17d64:	add	w10, w5, w2, lsr #31
   17d68:	cmp	w10, #0x3
   17d6c:	b.eq	17dd8 <mpfr_mul@@Base+0xa4c>  // b.none
   17d70:	ldr	x10, [x9]
   17d74:	adds	x10, x10, #0x1
   17d78:	str	x10, [x9]
   17d7c:	b.cc	17dac <mpfr_mul@@Base+0xa20>  // b.lo, b.ul, b.last
   17d80:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   17d84:	str	x10, [x9]
   17d88:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17d8c:	ldr	x1, [x0, #2624]
   17d90:	add	x0, x0, #0xa40
   17d94:	blr	x1
   17d98:	ldr	x9, [x11, x0]
   17d9c:	cmp	x8, x9
   17da0:	b.ge	17fe4 <mpfr_mul@@Base+0xc58>  // b.tcont
   17da4:	add	x8, x8, #0x1
   17da8:	str	x8, [x3, #16]
   17dac:	cbz	w2, 17e00 <mpfr_mul@@Base+0xa74>
   17db0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17db4:	ldr	x1, [x0, #2656]
   17db8:	add	x0, x0, #0xa60
   17dbc:	blr	x1
   17dc0:	ldr	w8, [x11, x0]
   17dc4:	mov	w23, w2
   17dc8:	b	17df4 <mpfr_mul@@Base+0xa68>
   17dcc:	add	w9, w5, w2, lsr #31
   17dd0:	cmp	w9, #0x3
   17dd4:	b.ne	17e28 <mpfr_mul@@Base+0xa9c>  // b.any
   17dd8:	cbz	w2, 17e00 <mpfr_mul@@Base+0xa74>
   17ddc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17de0:	ldr	x1, [x0, #2656]
   17de4:	add	x0, x0, #0xa60
   17de8:	blr	x1
   17dec:	ldr	w8, [x11, x0]
   17df0:	neg	w23, w2
   17df4:	orr	w8, w8, #0x8
   17df8:	str	w8, [x11, x0]
   17dfc:	b	17e04 <mpfr_mul@@Base+0xa78>
   17e00:	mov	w23, wzr
   17e04:	mov	w0, w23
   17e08:	mov	sp, x29
   17e0c:	ldp	x20, x19, [sp, #80]
   17e10:	ldp	x22, x21, [sp, #64]
   17e14:	ldp	x24, x23, [sp, #48]
   17e18:	ldp	x26, x25, [sp, #32]
   17e1c:	ldp	x28, x27, [sp, #16]
   17e20:	ldp	x29, x30, [sp], #96
   17e24:	ret
   17e28:	ldp	x9, x10, [x19]
   17e2c:	ldr	x12, [x19, #16]
   17e30:	adds	x9, x9, x21
   17e34:	cinc	x10, x10, eq  // eq = none
   17e38:	stp	x9, x10, [x19]
   17e3c:	orr	x9, x10, x9
   17e40:	cmp	x9, #0x0
   17e44:	cinc	x9, x12, eq  // eq = none
   17e48:	str	x9, [x19, #16]
   17e4c:	cbnz	x9, 17dac <mpfr_mul@@Base+0xa20>
   17e50:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   17e54:	str	x9, [x19, #16]
   17e58:	b	17d88 <mpfr_mul@@Base+0x9fc>
   17e5c:	cmp	x27, x8
   17e60:	b.eq	17e70 <mpfr_mul@@Base+0xae4>  // b.none
   17e64:	ldr	x28, [x22, #16]
   17e68:	cmp	x28, x8
   17e6c:	b.ne	17e98 <mpfr_mul@@Base+0xb0c>  // b.any
   17e70:	str	x8, [x3, #16]
   17e74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   17e78:	ldr	x1, [x0, #2656]
   17e7c:	add	x0, x0, #0xa60
   17e80:	blr	x1
   17e84:	mrs	x8, tpidr_el0
   17e88:	ldr	w9, [x8, x0]
   17e8c:	mov	w23, wzr
   17e90:	orr	w9, w9, #0x4
   17e94:	b	17d28 <mpfr_mul@@Base+0x99c>
   17e98:	ldr	w9, [x25, #8]
   17e9c:	ldr	w11, [x22, #8]
   17ea0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   17ea4:	cmp	x27, x10
   17ea8:	mul	w9, w11, w9
   17eac:	b.ne	17ff4 <mpfr_mul@@Base+0xc68>  // b.any
   17eb0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   17eb4:	cmp	x28, x10
   17eb8:	b.eq	17e70 <mpfr_mul@@Base+0xae4>  // b.none
   17ebc:	b	18008 <mpfr_mul@@Base+0xc7c>
   17ec0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   17ec4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   17ec8:	add	x0, x0, #0xa33
   17ecc:	add	x2, x2, #0xa39
   17ed0:	mov	w1, #0x318                 	// #792
   17ed4:	stp	w18, w16, [x29, #-104]
   17ed8:	mov	x24, x3
   17edc:	mov	w26, w5
   17ee0:	bl	cb90 <mpfr_assert_fail@plt>
   17ee4:	ldp	w18, w16, [x29, #-104]
   17ee8:	mov	w5, w26
   17eec:	mov	x3, x24
   17ef0:	b	17900 <mpfr_mul@@Base+0x574>
   17ef4:	stp	x0, x14, [x29, #-160]
   17ef8:	sub	x0, x29, #0x40
   17efc:	stp	w18, w16, [x29, #-104]
   17f00:	stp	x17, x3, [x29, #-120]
   17f04:	mov	w24, w5
   17f08:	stur	x6, [x29, #-144]
   17f0c:	bl	be70 <mpfr_tmp_allocate@plt>
   17f10:	ldp	x14, x6, [x29, #-152]
   17f14:	ldp	x17, x3, [x29, #-120]
   17f18:	mov	w5, w24
   17f1c:	mov	x24, x0
   17f20:	ldur	x0, [x29, #-160]
   17f24:	ldp	w18, w16, [x29, #-104]
   17f28:	b	17970 <mpfr_mul@@Base+0x5e4>
   17f2c:	sub	x21, x11, x17
   17f30:	add	x0, x25, x21, lsl #3
   17f34:	mov	w28, w5
   17f38:	mov	x27, x3
   17f3c:	cmp	x0, x26
   17f40:	b.eq	17f50 <mpfr_mul@@Base+0xbc4>  // b.none
   17f44:	lsl	x2, x17, #3
   17f48:	mov	x1, x26
   17f4c:	bl	bad0 <memcpy@plt>
   17f50:	lsl	x2, x21, #3
   17f54:	mov	x0, x25
   17f58:	mov	w1, wzr
   17f5c:	bl	c1b0 <memset@plt>
   17f60:	mov	w23, wzr
   17f64:	mov	x3, x27
   17f68:	mov	w5, w28
   17f6c:	b	17cc0 <mpfr_mul@@Base+0x934>
   17f70:	mov	x21, x3
   17f74:	mov	w25, w5
   17f78:	bl	c460 <mpfr_tmp_free@plt>
   17f7c:	mov	w5, w25
   17f80:	mov	x3, x21
   17f84:	b	17cc8 <mpfr_mul@@Base+0x93c>
   17f88:	mov	x0, x3
   17f8c:	mov	w1, w5
   17f90:	mov	w2, w24
   17f94:	b	17fec <mpfr_mul@@Base+0xc60>
   17f98:	ldur	x14, [x1, #-8]
   17f9c:	and	x13, x14, #0x8000000000000000
   17fa0:	and	x14, x14, #0x7fffffffffffffff
   17fa4:	cbz	w5, 18100 <mpfr_mul@@Base+0xd74>
   17fa8:	cbz	x13, 18100 <mpfr_mul@@Base+0xd74>
   17fac:	mov	w21, #0x1                   	// #1
   17fb0:	b	17b38 <mpfr_mul@@Base+0x7ac>
   17fb4:	cbnz	w5, 18334 <mpfr_mul@@Base+0xfa8>
   17fb8:	mov	x20, x3
   17fbc:	cmp	x19, x9
   17fc0:	b.lt	17fdc <mpfr_mul@@Base+0xc50>  // b.tstop
   17fc4:	ldur	x0, [x29, #-128]
   17fc8:	bl	bfb0 <mpfr_powerof2_raw@plt>
   17fcc:	cbz	w0, 1832c <mpfr_mul@@Base+0xfa0>
   17fd0:	ldur	x0, [x29, #-136]
   17fd4:	bl	bfb0 <mpfr_powerof2_raw@plt>
   17fd8:	cbz	w0, 1832c <mpfr_mul@@Base+0xfa0>
   17fdc:	mov	w5, #0x1                   	// #1
   17fe0:	b	18330 <mpfr_mul@@Base+0xfa4>
   17fe4:	mov	x0, x3
   17fe8:	mov	w1, w5
   17fec:	bl	bff0 <mpfr_overflow@plt>
   17ff0:	b	18344 <mpfr_mul@@Base+0xfb8>
   17ff4:	cmp	x28, x10
   17ff8:	b.ne	181ac <mpfr_mul@@Base+0xe20>  // b.any
   17ffc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   18000:	cmp	x27, x10
   18004:	b.eq	17e70 <mpfr_mul@@Base+0xae4>  // b.none
   18008:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1800c:	b	181b0 <mpfr_mul@@Base+0xe24>
   18010:	ldr	x13, [x11, #24]
   18014:	ldr	x12, [x10, #24]
   18018:	ldr	x8, [x13]
   1801c:	stp	x4, x2, [x29, #-184]
   18020:	cbnz	x8, 1802c <mpfr_mul@@Base+0xca0>
   18024:	ldr	x9, [x13, #8]
   18028:	cbz	x9, 18524 <mpfr_mul@@Base+0x1198>
   1802c:	ldr	x9, [x12]
   18030:	cbnz	x9, 1803c <mpfr_mul@@Base+0xcb0>
   18034:	ldr	x9, [x12, #8]
   18038:	cbz	x9, 18524 <mpfr_mul@@Base+0x1198>
   1803c:	ldr	x8, [x3]
   18040:	stur	w5, [x29, #-164]
   18044:	sub	x9, x8, #0x1
   18048:	add	x8, x8, #0x3e
   1804c:	cmp	x9, #0x0
   18050:	csel	x8, x8, x9, lt  // lt = tstop
   18054:	asr	x8, x8, #6
   18058:	add	x7, x8, #0x2
   1805c:	cmp	x7, x4
   18060:	csel	x23, x7, x4, lt  // lt = tstop
   18064:	cmn	x23, #0x1
   18068:	lsl	x19, x23, #6
   1806c:	b.eq	18450 <mpfr_mul@@Base+0x10c4>  // b.none
   18070:	tbnz	x23, #63, 184d0 <mpfr_mul@@Base+0x1144>
   18074:	add	x8, x23, #0x1
   18078:	clz	x8, x8
   1807c:	mov	w9, #0x40                  	// #64
   18080:	sub	x8, x9, x8
   18084:	sub	x15, x19, x8
   18088:	sub	x8, x2, x23
   1808c:	sub	x9, x4, x23
   18090:	add	x1, x13, x8, lsl #3
   18094:	sub	x8, x15, #0x5
   18098:	cmp	x20, x8
   1809c:	add	x9, x12, x9, lsl #3
   180a0:	stur	x15, [x29, #-160]
   180a4:	b.gt	18458 <mpfr_mul@@Base+0x10cc>
   180a8:	lsl	x12, x23, #1
   180ac:	mov	x8, x23
   180b0:	add	x25, x24, x0, lsl #3
   180b4:	mov	x23, x14
   180b8:	mov	x22, x6
   180bc:	mov	x19, x0
   180c0:	cmp	x11, x10
   180c4:	sub	x0, x25, x12, lsl #3
   180c8:	stur	x8, [x29, #-144]
   180cc:	b.eq	18280 <mpfr_mul@@Base+0xef4>  // b.none
   180d0:	mov	x2, x9
   180d4:	mov	x3, x8
   180d8:	bl	bd30 <mpfr_mulhigh_n@plt>
   180dc:	b	18288 <mpfr_mul@@Base+0xefc>
   180e0:	mov	w3, #0x1                   	// #1
   180e4:	mov	x0, x26
   180e8:	mov	x1, x26
   180ec:	mov	x2, x17
   180f0:	mov	x20, x17
   180f4:	bl	bd70 <__gmpn_lshift@plt>
   180f8:	mov	x17, x20
   180fc:	b	17ab0 <mpfr_mul@@Base+0x724>
   18100:	mov	w21, #0x1                   	// #1
   18104:	cbnz	x14, 17b38 <mpfr_mul@@Base+0x7ac>
   18108:	sub	x15, x6, x11
   1810c:	cbz	x15, 17b38 <mpfr_mul@@Base+0x7ac>
   18110:	sub	x14, x6, x9
   18114:	mov	x15, x6
   18118:	sub	x16, x14, #0x2
   1811c:	mov	w21, #0x1                   	// #1
   18120:	ldr	x14, [x26, x16, lsl #3]
   18124:	subs	x16, x16, #0x1
   18128:	cset	w17, cs  // cs = hs, nlast
   1812c:	cbnz	x14, 18134 <mpfr_mul@@Base+0xda8>
   18130:	tbnz	w17, #0, 18120 <mpfr_mul@@Base+0xd94>
   18134:	mov	x6, x15
   18138:	b	17b38 <mpfr_mul@@Base+0x7ac>
   1813c:	cmp	x14, x16
   18140:	sub	x15, x15, #0x1
   18144:	b.ne	18178 <mpfr_mul@@Base+0xdec>  // b.any
   18148:	cmp	x8, x15
   1814c:	b.ne	18178 <mpfr_mul@@Base+0xdec>  // b.any
   18150:	cbnz	w5, 18158 <mpfr_mul@@Base+0xdcc>
   18154:	cbnz	x12, 174b4 <mpfr_mul@@Base+0x128>
   18158:	cmp	w5, #0x4
   1815c:	b.eq	18170 <mpfr_mul@@Base+0xde4>  // b.none
   18160:	mvn	w16, w2
   18164:	add	w16, w5, w16, lsr #31
   18168:	cmp	w16, #0x3
   1816c:	b.ne	18178 <mpfr_mul@@Base+0xdec>  // b.any
   18170:	orr	x16, x13, x12
   18174:	cbnz	x16, 174b4 <mpfr_mul@@Base+0x128>
   18178:	cbnz	w5, 181a0 <mpfr_mul@@Base+0xe14>
   1817c:	cmp	x8, x15
   18180:	b.lt	1819c <mpfr_mul@@Base+0xe10>  // b.tstop
   18184:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   18188:	cmp	x14, x8
   1818c:	mov	w5, wzr
   18190:	b.ne	181a0 <mpfr_mul@@Base+0xe14>  // b.any
   18194:	orr	x8, x13, x12
   18198:	cbnz	x8, 181a0 <mpfr_mul@@Base+0xe14>
   1819c:	mov	w5, #0x1                   	// #1
   181a0:	mov	x0, x3
   181a4:	mov	w1, w5
   181a8:	b	18340 <mpfr_mul@@Base+0xfb4>
   181ac:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   181b0:	mov	w23, wzr
   181b4:	str	w9, [x3, #8]
   181b8:	str	x8, [x3, #16]
   181bc:	b	17e04 <mpfr_mul@@Base+0xa78>
   181c0:	mul	x12, x16, x12
   181c4:	umulh	x18, x17, x16
   181c8:	adds	x12, x18, x12
   181cc:	cinc	x15, x15, cs  // cs = hs, nlast
   181d0:	mul	x10, x17, x10
   181d4:	mul	x14, x17, x16
   181d8:	cset	w17, cs  // cs = hs, nlast
   181dc:	cmp	x15, #0x0
   181e0:	cset	w18, eq  // eq = none
   181e4:	adds	x16, x12, x10
   181e8:	cinc	x15, x15, cs  // cs = hs, nlast
   181ec:	and	w10, w17, w18
   181f0:	cset	w12, cs  // cs = hs, nlast
   181f4:	cmp	x15, #0x0
   181f8:	add	x10, x11, x10
   181fc:	cset	w11, eq  // eq = none
   18200:	and	w11, w12, w11
   18204:	add	x11, x10, x11
   18208:	b	17558 <mpfr_mul@@Base+0x1cc>
   1820c:	cmp	x17, x18
   18210:	sub	x14, x14, #0x1
   18214:	b.ne	18250 <mpfr_mul@@Base+0xec4>  // b.any
   18218:	cmn	x11, #0x1
   1821c:	b.ne	18250 <mpfr_mul@@Base+0xec4>  // b.any
   18220:	cmp	x10, x14
   18224:	b.ne	18250 <mpfr_mul@@Base+0xec4>  // b.any
   18228:	cbnz	w5, 18230 <mpfr_mul@@Base+0xea4>
   1822c:	cbnz	x15, 175ec <mpfr_mul@@Base+0x260>
   18230:	cmp	w5, #0x4
   18234:	b.eq	18248 <mpfr_mul@@Base+0xebc>  // b.none
   18238:	mvn	w16, w2
   1823c:	add	w16, w5, w16, lsr #31
   18240:	cmp	w16, #0x3
   18244:	b.ne	18250 <mpfr_mul@@Base+0xec4>  // b.any
   18248:	orr	x16, x13, x15
   1824c:	cbnz	x16, 175ec <mpfr_mul@@Base+0x260>
   18250:	mov	w1, w5
   18254:	cbnz	w5, 183d8 <mpfr_mul@@Base+0x104c>
   18258:	cmp	x10, x14
   1825c:	b.lt	183d4 <mpfr_mul@@Base+0x1048>  // b.tstop
   18260:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   18264:	cmp	x11, x8
   18268:	b.ne	18278 <mpfr_mul@@Base+0xeec>  // b.any
   1826c:	orr	x8, x13, x15
   18270:	orr	x8, x8, x17
   18274:	cbz	x8, 183d4 <mpfr_mul@@Base+0x1048>
   18278:	mov	w1, wzr
   1827c:	b	183d8 <mpfr_mul@@Base+0x104c>
   18280:	mov	x2, x8
   18284:	bl	c4e0 <mpfr_sqrhigh_n@plt>
   18288:	add	x8, x26, x23
   1828c:	ldr	x8, [x24, x8, lsl #3]
   18290:	ldur	w10, [x29, #-164]
   18294:	ldur	x1, [x29, #-120]
   18298:	mov	x9, x19
   1829c:	lsr	x23, x8, #63
   182a0:	tbz	x8, #63, 184a4 <mpfr_mul@@Base+0x1118>
   182a4:	sub	x8, x9, x1
   182a8:	ldur	x9, [x29, #-160]
   182ac:	cmp	w10, #0x5
   182b0:	csinc	w10, w10, wzr, ne  // ne = any
   182b4:	add	x26, x24, x8, lsl #3
   182b8:	add	x9, x9, x23
   182bc:	cmp	w10, #0x0
   182c0:	sub	x2, x9, #0x1
   182c4:	cinc	x3, x20, eq  // eq = none
   182c8:	mov	x0, x26
   182cc:	mov	w25, w10
   182d0:	bl	c3d0 <mpfr_round_p@plt>
   182d4:	cbz	w0, 182e0 <mpfr_mul@@Base+0xf54>
   182d8:	ldp	x17, x3, [x29, #-120]
   182dc:	b	17ab4 <mpfr_mul@@Base+0x728>
   182e0:	ldp	x4, x2, [x29, #-184]
   182e4:	ldp	x10, x11, [x29, #-136]
   182e8:	b	17a8c <mpfr_mul@@Base+0x700>
   182ec:	cmn	x12, #0x1
   182f0:	sub	x13, x13, #0x1
   182f4:	b.ne	183fc <mpfr_mul@@Base+0x1070>  // b.any
   182f8:	cmp	x8, x13
   182fc:	b.ne	183fc <mpfr_mul@@Base+0x1070>  // b.any
   18300:	cbnz	w5, 18308 <mpfr_mul@@Base+0xf7c>
   18304:	tbnz	x10, #63, 17710 <mpfr_mul@@Base+0x384>
   18308:	mov	x0, x3
   1830c:	mov	w14, w5
   18310:	cmp	w5, #0x4
   18314:	b.ne	183e0 <mpfr_mul@@Base+0x1054>  // b.any
   18318:	mov	x3, x0
   1831c:	mov	w5, w14
   18320:	cbnz	x10, 17710 <mpfr_mul@@Base+0x384>
   18324:	mov	w1, #0x4                   	// #4
   18328:	b	18340 <mpfr_mul@@Base+0xfb4>
   1832c:	mov	w5, wzr
   18330:	mov	x3, x20
   18334:	mov	x0, x3
   18338:	mov	w1, w5
   1833c:	mov	w2, w24
   18340:	bl	c420 <mpfr_underflow@plt>
   18344:	mov	w23, w0
   18348:	b	17e04 <mpfr_mul@@Base+0xa78>
   1834c:	sub	x0, x29, #0x38
   18350:	mov	x24, x3
   18354:	mov	w3, #0x3                   	// #3
   18358:	mov	w26, w5
   1835c:	bl	c4c0 <__gmpn_mul_n@plt>
   18360:	ldp	x11, x8, [x29, #-56]
   18364:	ldp	x9, x10, [x29, #-24]
   18368:	ldp	x16, x12, [x29, #-40]
   1836c:	mov	w5, w26
   18370:	mov	x3, x24
   18374:	orr	x14, x11, x8
   18378:	b	17810 <mpfr_mul@@Base+0x484>
   1837c:	cmp	x13, x17
   18380:	sub	x14, x14, #0x1
   18384:	b.ne	183c4 <mpfr_mul@@Base+0x1038>  // b.any
   18388:	and	x16, x9, x10
   1838c:	cmn	x16, #0x1
   18390:	b.ne	183c4 <mpfr_mul@@Base+0x1038>  // b.any
   18394:	cmp	x8, x14
   18398:	b.ne	183c4 <mpfr_mul@@Base+0x1038>  // b.any
   1839c:	cbnz	w5, 183a4 <mpfr_mul@@Base+0x1018>
   183a0:	cbnz	x15, 178ac <mpfr_mul@@Base+0x520>
   183a4:	cmp	w5, #0x4
   183a8:	b.eq	183bc <mpfr_mul@@Base+0x1030>  // b.none
   183ac:	mvn	w16, w2
   183b0:	add	w16, w5, w16, lsr #31
   183b4:	cmp	w16, #0x3
   183b8:	b.ne	183c4 <mpfr_mul@@Base+0x1038>  // b.any
   183bc:	orr	x16, x12, x15
   183c0:	cbnz	x16, 178ac <mpfr_mul@@Base+0x520>
   183c4:	mov	w1, w5
   183c8:	cbnz	w5, 183d8 <mpfr_mul@@Base+0x104c>
   183cc:	cmp	x8, x14
   183d0:	b.ge	1842c <mpfr_mul@@Base+0x10a0>  // b.tcont
   183d4:	mov	w1, #0x1                   	// #1
   183d8:	mov	x0, x3
   183dc:	b	18340 <mpfr_mul@@Base+0xfb4>
   183e0:	mov	x3, x0
   183e4:	mov	w5, w14
   183e8:	cbz	x10, 183fc <mpfr_mul@@Base+0x1070>
   183ec:	mvn	w14, w2
   183f0:	add	w14, w5, w14, lsr #31
   183f4:	cmp	w14, #0x3
   183f8:	b.eq	17710 <mpfr_mul@@Base+0x384>  // b.none
   183fc:	mov	x0, x3
   18400:	mov	w1, w5
   18404:	cbnz	w5, 18340 <mpfr_mul@@Base+0xfb4>
   18408:	cmp	x8, x13
   1840c:	b.lt	18424 <mpfr_mul@@Base+0x1098>  // b.tstop
   18410:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   18414:	cmp	x12, x8
   18418:	mov	w1, wzr
   1841c:	b.ne	18340 <mpfr_mul@@Base+0xfb4>  // b.any
   18420:	cbnz	x10, 18340 <mpfr_mul@@Base+0xfb4>
   18424:	mov	w1, #0x1                   	// #1
   18428:	b	18340 <mpfr_mul@@Base+0xfb4>
   1842c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   18430:	cmp	x10, x8
   18434:	mov	w1, wzr
   18438:	b.ne	183d8 <mpfr_mul@@Base+0x104c>  // b.any
   1843c:	cbnz	x9, 183d8 <mpfr_mul@@Base+0x104c>
   18440:	orr	x8, x12, x15
   18444:	orr	x8, x8, x13
   18448:	cbnz	x8, 18278 <mpfr_mul@@Base+0xeec>
   1844c:	b	183d4 <mpfr_mul@@Base+0x1048>
   18450:	mov	x8, xzr
   18454:	b	18084 <mpfr_mul@@Base+0xcf8>
   18458:	mov	x19, x0
   1845c:	mov	w25, w5
   18460:	cmp	x2, #0x16
   18464:	stp	x9, x7, [x29, #-208]
   18468:	stur	x1, [x29, #-192]
   1846c:	stp	x14, x6, [x29, #-152]
   18470:	stp	x27, x28, [x29, #-224]
   18474:	b.lt	18738 <mpfr_mul@@Base+0x13ac>  // b.tstop
   18478:	ldur	x8, [x29, #-160]
   1847c:	add	x8, x8, #0x3b
   18480:	cmp	x20, x8
   18484:	b.gt	18738 <mpfr_mul@@Base+0x13ac>
   18488:	ldur	x8, [x29, #-176]
   1848c:	cmp	x8, x23
   18490:	b.le	185c0 <mpfr_mul@@Base+0x1234>
   18494:	ldur	x8, [x29, #-192]
   18498:	sub	x8, x8, #0x8
   1849c:	stur	x8, [x29, #-192]
   184a0:	b	18614 <mpfr_mul@@Base+0x1288>
   184a4:	ldur	x9, [x29, #-144]
   184a8:	mov	w3, #0x1                   	// #1
   184ac:	sub	x8, x25, x9, lsl #3
   184b0:	sub	x0, x8, #0x8
   184b4:	add	x2, x9, #0x1
   184b8:	mov	x1, x0
   184bc:	bl	bd70 <__gmpn_lshift@plt>
   184c0:	ldur	x1, [x29, #-120]
   184c4:	ldur	w10, [x29, #-164]
   184c8:	mov	x9, x19
   184cc:	b	182a4 <mpfr_mul@@Base+0xf18>
   184d0:	stp	x0, x14, [x29, #-160]
   184d4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   184d8:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   184dc:	add	x0, x0, #0xa33
   184e0:	add	x2, x2, #0xfea
   184e4:	mov	w1, #0x398                 	// #920
   184e8:	mov	x25, x10
   184ec:	mov	x22, x11
   184f0:	stur	x6, [x29, #-144]
   184f4:	stp	x7, x12, [x29, #-200]
   184f8:	stur	x13, [x29, #-208]
   184fc:	bl	cb90 <mpfr_assert_fail@plt>
   18500:	ldp	x13, x7, [x29, #-208]
   18504:	ldp	x12, x4, [x29, #-192]
   18508:	ldp	x14, x6, [x29, #-152]
   1850c:	ldur	x0, [x29, #-160]
   18510:	ldur	w5, [x29, #-164]
   18514:	ldur	x2, [x29, #-176]
   18518:	mov	x11, x22
   1851c:	mov	x10, x25
   18520:	b	18074 <mpfr_mul@@Base+0xce8>
   18524:	ldur	x0, [x29, #-64]
   18528:	mov	x24, x13
   1852c:	mov	x23, x12
   18530:	mov	x22, x11
   18534:	mov	x21, x10
   18538:	mov	w20, w5
   1853c:	mov	x19, x3
   18540:	cbnz	x0, 18778 <mpfr_mul@@Base+0x13ec>
   18544:	cbnz	x8, 1855c <mpfr_mul@@Base+0x11d0>
   18548:	ldr	x9, [x24, #8]!
   1854c:	ldur	x8, [x29, #-176]
   18550:	sub	x8, x8, #0x1
   18554:	stur	x8, [x29, #-176]
   18558:	cbz	x9, 18548 <mpfr_mul@@Base+0x11bc>
   1855c:	ldr	x8, [x23]
   18560:	cbnz	x8, 18578 <mpfr_mul@@Base+0x11ec>
   18564:	ldr	x9, [x23, #8]!
   18568:	ldur	x8, [x29, #-184]
   1856c:	sub	x8, x8, #0x1
   18570:	stur	x8, [x29, #-184]
   18574:	cbz	x9, 18564 <mpfr_mul@@Base+0x11d8>
   18578:	ldr	w8, [x22, #8]
   1857c:	cmp	x22, x21
   18580:	stur	w8, [x29, #-48]
   18584:	ldur	x8, [x29, #-176]
   18588:	ldr	x9, [x22, #16]
   1858c:	lsl	x8, x8, #6
   18590:	stp	x9, x24, [x29, #-40]
   18594:	stur	x8, [x29, #-56]
   18598:	b.eq	18720 <mpfr_mul@@Base+0x1394>  // b.none
   1859c:	ldr	w8, [x21, #8]
   185a0:	sub	x2, x29, #0x60
   185a4:	stur	w8, [x29, #-88]
   185a8:	ldur	x8, [x29, #-184]
   185ac:	ldr	x9, [x21, #16]
   185b0:	lsl	x8, x8, #6
   185b4:	stp	x9, x23, [x29, #-80]
   185b8:	stur	x8, [x29, #-96]
   185bc:	b	18724 <mpfr_mul@@Base+0x1398>
   185c0:	lsl	x27, x23, #3
   185c4:	add	x1, x27, #0x8
   185c8:	cmp	x1, #0x4, lsl #12
   185cc:	b.hi	18788 <mpfr_mul@@Base+0x13fc>  // b.pmore
   185d0:	add	x9, x1, #0xf
   185d4:	mov	x8, sp
   185d8:	and	x9, x9, #0xfffffffffffffff0
   185dc:	sub	x8, x8, x9
   185e0:	stur	x8, [x29, #-192]
   185e4:	mov	sp, x8
   185e8:	ldur	x0, [x29, #-192]
   185ec:	ldur	x8, [x29, #-128]
   185f0:	str	xzr, [x0], #8
   185f4:	ldr	x9, [x8, #24]
   185f8:	ldur	x8, [x29, #-176]
   185fc:	add	x8, x9, x8, lsl #3
   18600:	sub	x1, x8, x23, lsl #3
   18604:	cmp	x1, x0
   18608:	b.eq	18614 <mpfr_mul@@Base+0x1288>  // b.none
   1860c:	mov	x2, x27
   18610:	bl	bad0 <memcpy@plt>
   18614:	ldp	x8, x9, [x29, #-136]
   18618:	cmp	x9, x8
   1861c:	b.eq	18694 <mpfr_mul@@Base+0x1308>  // b.none
   18620:	ldur	x8, [x29, #-184]
   18624:	ldur	x9, [x29, #-200]
   18628:	cmp	x9, x8
   1862c:	b.ge	18640 <mpfr_mul@@Base+0x12b4>  // b.tcont
   18630:	ldur	x8, [x29, #-208]
   18634:	sub	x8, x8, #0x8
   18638:	stur	x8, [x29, #-208]
   1863c:	b	18694 <mpfr_mul@@Base+0x1308>
   18640:	lsl	x27, x23, #3
   18644:	add	x1, x27, #0x8
   18648:	cmp	x1, #0x4, lsl #12
   1864c:	b.hi	18798 <mpfr_mul@@Base+0x140c>  // b.pmore
   18650:	add	x9, x1, #0xf
   18654:	mov	x8, sp
   18658:	and	x9, x9, #0xfffffffffffffff0
   1865c:	sub	x8, x8, x9
   18660:	stur	x8, [x29, #-208]
   18664:	mov	sp, x8
   18668:	ldur	x0, [x29, #-208]
   1866c:	ldur	x8, [x29, #-136]
   18670:	str	xzr, [x0], #8
   18674:	ldr	x9, [x8, #24]
   18678:	ldur	x8, [x29, #-184]
   1867c:	add	x8, x9, x8, lsl #3
   18680:	sub	x1, x8, x23, lsl #3
   18684:	cmp	x1, x0
   18688:	b.eq	18694 <mpfr_mul@@Base+0x1308>  // b.none
   1868c:	mov	x2, x27
   18690:	bl	bad0 <memcpy@plt>
   18694:	add	x8, x23, #0x1
   18698:	cmn	x23, #0x2
   1869c:	mov	x27, x8
   186a0:	lsl	x28, x8, #6
   186a4:	b.eq	18748 <mpfr_mul@@Base+0x13bc>  // b.none
   186a8:	b.le	18750 <mpfr_mul@@Base+0x13c4>
   186ac:	add	x8, x23, #0x2
   186b0:	clz	x8, x8
   186b4:	mov	w9, #0x40                  	// #64
   186b8:	sub	x8, x9, x8
   186bc:	lsl	x9, x27, #1
   186c0:	mov	x22, x9
   186c4:	subs	x23, x9, x19
   186c8:	sub	x8, x28, x8
   186cc:	stur	x8, [x29, #-160]
   186d0:	b.le	186f8 <mpfr_mul@@Base+0x136c>
   186d4:	lsl	x1, x27, #4
   186d8:	cmp	x1, #0x4, lsl #12
   186dc:	b.hi	1876c <mpfr_mul@@Base+0x13e0>  // b.pmore
   186e0:	add	x9, x1, #0xf
   186e4:	mov	x8, sp
   186e8:	and	x9, x9, #0xfffffffffffffff0
   186ec:	sub	x0, x8, x9
   186f0:	mov	sp, x0
   186f4:	add	x24, x0, x23, lsl #3
   186f8:	mov	x8, x27
   186fc:	ldp	x27, x28, [x29, #-224]
   18700:	ldp	x6, x10, [x29, #-144]
   18704:	ldur	x11, [x29, #-128]
   18708:	ldur	x14, [x29, #-152]
   1870c:	ldur	x1, [x29, #-192]
   18710:	ldur	x9, [x29, #-208]
   18714:	mov	x0, x19
   18718:	mov	x12, x22
   1871c:	b	180b0 <mpfr_mul@@Base+0xd24>
   18720:	sub	x2, x29, #0x38
   18724:	sub	x1, x29, #0x38
   18728:	mov	x0, x19
   1872c:	mov	w3, w20
   18730:	bl	be00 <mpfr_mul@plt>
   18734:	b	18344 <mpfr_mul@@Base+0xfb8>
   18738:	ldp	x4, x2, [x29, #-184]
   1873c:	ldp	x27, x28, [x29, #-224]
   18740:	ldur	x22, [x29, #-144]
   18744:	b	182e4 <mpfr_mul@@Base+0xf58>
   18748:	mov	x8, xzr
   1874c:	b	186bc <mpfr_mul@@Base+0x1330>
   18750:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   18754:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   18758:	add	x0, x0, #0xa33
   1875c:	add	x2, x2, #0xfea
   18760:	mov	w1, #0x3c0                 	// #960
   18764:	bl	cb90 <mpfr_assert_fail@plt>
   18768:	b	186ac <mpfr_mul@@Base+0x1320>
   1876c:	sub	x0, x29, #0x40
   18770:	bl	be70 <mpfr_tmp_allocate@plt>
   18774:	b	186f4 <mpfr_mul@@Base+0x1368>
   18778:	bl	c460 <mpfr_tmp_free@plt>
   1877c:	ldr	x8, [x24]
   18780:	cbnz	x8, 1855c <mpfr_mul@@Base+0x11d0>
   18784:	b	18548 <mpfr_mul@@Base+0x11bc>
   18788:	sub	x0, x29, #0x40
   1878c:	bl	be70 <mpfr_tmp_allocate@plt>
   18790:	stur	x0, [x29, #-192]
   18794:	b	185e8 <mpfr_mul@@Base+0x125c>
   18798:	sub	x0, x29, #0x40
   1879c:	bl	be70 <mpfr_tmp_allocate@plt>
   187a0:	stur	x0, [x29, #-208]
   187a4:	b	18668 <mpfr_mul@@Base+0x12dc>

00000000000187a8 <mpfr_mul_ui@@Base>:
   187a8:	stp	x29, x30, [sp, #-80]!
   187ac:	stp	x26, x25, [sp, #16]
   187b0:	stp	x24, x23, [sp, #32]
   187b4:	stp	x22, x21, [sp, #48]
   187b8:	stp	x20, x19, [sp, #64]
   187bc:	mov	x29, sp
   187c0:	sub	sp, sp, #0x10
   187c4:	ldr	x9, [x1, #16]
   187c8:	mov	x8, #0x2                   	// #2
   187cc:	movk	x8, #0x8000, lsl #48
   187d0:	add	x10, x8, #0x2
   187d4:	mov	x22, x2
   187d8:	mov	x20, x1
   187dc:	cmp	x9, x10
   187e0:	mov	x19, x0
   187e4:	b.lt	18b08 <mpfr_mul_ui@@Base+0x360>  // b.tstop
   187e8:	mov	w21, w3
   187ec:	subs	x8, x22, #0x1
   187f0:	b.hi	18814 <mpfr_mul_ui@@Base+0x6c>  // b.pmore
   187f4:	cbz	x22, 18b24 <mpfr_mul_ui@@Base+0x37c>
   187f8:	ldr	w3, [x20, #8]
   187fc:	mov	x0, x19
   18800:	mov	x1, x20
   18804:	mov	w2, w21
   18808:	bl	c6f0 <mpfr_set4@plt>
   1880c:	mov	w25, w0
   18810:	b	18b38 <mpfr_mul_ui@@Base+0x390>
   18814:	tst	x22, x8
   18818:	b.eq	18b6c <mpfr_mul_ui@@Base+0x3c4>  // b.none
   1881c:	ldr	x8, [x20]
   18820:	stur	xzr, [x29, #-8]
   18824:	sub	x9, x8, #0x1
   18828:	add	x8, x8, #0x3e
   1882c:	cmp	x9, #0x0
   18830:	csel	x8, x8, x9, lt  // lt = tstop
   18834:	asr	x8, x8, #6
   18838:	add	x25, x8, #0x2
   1883c:	lsl	x1, x25, #3
   18840:	cmp	x1, #0x4, lsl #12
   18844:	add	x23, x8, #0x1
   18848:	b.hi	18b8c <mpfr_mul_ui@@Base+0x3e4>  // b.pmore
   1884c:	add	x9, x1, #0xf
   18850:	mov	x8, sp
   18854:	and	x9, x9, #0xfffffffffffffff0
   18858:	sub	x24, x8, x9
   1885c:	mov	sp, x24
   18860:	ldr	x1, [x20, #24]
   18864:	mov	x0, x24
   18868:	mov	x2, x23
   1886c:	mov	x3, x22
   18870:	bl	cd90 <__gmpn_mul_1@plt>
   18874:	str	x0, [x24, x23, lsl #3]
   18878:	tbnz	x0, #63, 18b9c <mpfr_mul_ui@@Base+0x3f4>
   1887c:	clz	x22, x0
   18880:	mov	x0, x24
   18884:	mov	x1, x24
   18888:	mov	x2, x25
   1888c:	mov	w3, w22
   18890:	bl	bd70 <__gmpn_lshift@plt>
   18894:	ldr	x12, [x19]
   18898:	lsl	x8, x25, #6
   1889c:	mov	w9, #0x3e                  	// #62
   188a0:	sub	x8, x8, #0x1
   188a4:	bfi	x9, x25, #6, #58
   188a8:	cmp	x8, #0x0
   188ac:	csel	x8, x9, x8, lt  // lt = tstop
   188b0:	sub	x9, x12, #0x1
   188b4:	ldr	x23, [x19, #24]
   188b8:	add	x10, x12, #0x3e
   188bc:	cmp	x9, #0x0
   188c0:	csel	x9, x10, x9, lt  // lt = tstop
   188c4:	asr	x8, x8, #6
   188c8:	asr	x9, x9, #6
   188cc:	add	x15, x8, #0x1
   188d0:	cmp	x12, x25, lsl #6
   188d4:	add	x11, x9, #0x1
   188d8:	b.ge	18ba4 <mpfr_mul_ui@@Base+0x3fc>  // b.tcont
   188dc:	neg	w10, w12
   188e0:	add	x14, x24, x15, lsl #3
   188e4:	ands	x13, x10, #0x3f
   188e8:	mvn	x10, x9
   188ec:	add	x1, x14, x10, lsl #3
   188f0:	b.eq	18bd8 <mpfr_mul_ui@@Base+0x430>  // b.none
   188f4:	ldr	x14, [x1]
   188f8:	sub	x13, x13, #0x1
   188fc:	mov	w16, #0x1                   	// #1
   18900:	lsl	x16, x16, x13
   18904:	sub	x17, x16, #0x1
   18908:	and	x13, x14, x16
   1890c:	and	x14, x14, x17
   18910:	cbz	w21, 18918 <mpfr_mul_ui@@Base+0x170>
   18914:	cbnz	x13, 18940 <mpfr_mul_ui@@Base+0x198>
   18918:	cbnz	x14, 18940 <mpfr_mul_ui@@Base+0x198>
   1891c:	sub	x15, x15, x11
   18920:	cbz	x15, 18940 <mpfr_mul_ui@@Base+0x198>
   18924:	mvn	x14, x9
   18928:	add	x15, x14, x8
   1892c:	ldr	x14, [x24, x15, lsl #3]
   18930:	subs	x15, x15, #0x1
   18934:	cset	w17, cs  // cs = hs, nlast
   18938:	cbnz	x14, 18940 <mpfr_mul_ui@@Base+0x198>
   1893c:	tbnz	w17, #0, 1892c <mpfr_mul_ui@@Base+0x184>
   18940:	lsl	x26, x16, #1
   18944:	cmp	w21, #0x5
   18948:	b.eq	18a1c <mpfr_mul_ui@@Base+0x274>  // b.none
   1894c:	cmp	w21, #0x1
   18950:	b.eq	18980 <mpfr_mul_ui@@Base+0x1d8>  // b.none
   18954:	cbnz	w21, 18970 <mpfr_mul_ui@@Base+0x1c8>
   18958:	cbz	x13, 18980 <mpfr_mul_ui@@Base+0x1d8>
   1895c:	cbnz	x14, 1899c <mpfr_mul_ui@@Base+0x1f4>
   18960:	ldr	x13, [x1]
   18964:	tst	x13, x26
   18968:	b.ne	1899c <mpfr_mul_ui@@Base+0x1f4>  // b.any
   1896c:	b	18988 <mpfr_mul_ui@@Base+0x1e0>
   18970:	ldr	w15, [x20, #8]
   18974:	add	w15, w21, w15, lsr #31
   18978:	cmp	w15, #0x3
   1897c:	b.ne	18994 <mpfr_mul_ui@@Base+0x1ec>  // b.any
   18980:	orr	x8, x14, x13
   18984:	cbz	x8, 18a1c <mpfr_mul_ui@@Base+0x274>
   18988:	ldr	w8, [x20, #8]
   1898c:	neg	w25, w8
   18990:	b	18a20 <mpfr_mul_ui@@Base+0x278>
   18994:	orr	x13, x14, x13
   18998:	cbz	x13, 18a1c <mpfr_mul_ui@@Base+0x274>
   1899c:	ldr	x11, [x1]
   189a0:	ldr	w25, [x20, #8]
   189a4:	adds	x11, x11, x26
   189a8:	str	x11, [x23]
   189ac:	b.cc	18ac4 <mpfr_mul_ui@@Base+0x31c>  // b.lo, b.ul, b.last
   189b0:	lsl	x13, x8, #3
   189b4:	sub	x13, x13, x9, lsl #3
   189b8:	add	x13, x13, x24
   189bc:	mov	x12, xzr
   189c0:	add	x11, x23, #0x8
   189c4:	add	x13, x13, #0x8
   189c8:	add	x14, x12, #0x1
   189cc:	cmp	x14, x9
   189d0:	b.gt	18af8 <mpfr_mul_ui@@Base+0x350>
   189d4:	ldr	x15, [x13, x12, lsl #3]
   189d8:	mov	x12, x14
   189dc:	adds	x15, x15, #0x1
   189e0:	str	x15, [x11], #8
   189e4:	b.cs	189c8 <mpfr_mul_ui@@Base+0x220>  // b.hs, b.nlast
   189e8:	cmp	x1, x23
   189ec:	b.eq	18a34 <mpfr_mul_ui@@Base+0x28c>  // b.none
   189f0:	cmp	x14, x9
   189f4:	b.ge	18a34 <mpfr_mul_ui@@Base+0x28c>  // b.tcont
   189f8:	add	x9, x10, x14
   189fc:	add	x10, x24, x8, lsl #3
   18a00:	add	x8, x9, #0x1
   18a04:	add	x9, x10, #0x8
   18a08:	ldr	x10, [x9, x8, lsl #3]
   18a0c:	adds	x8, x8, #0x1
   18a10:	str	x10, [x11], #8
   18a14:	b.cc	18a08 <mpfr_mul_ui@@Base+0x260>  // b.lo, b.ul, b.last
   18a18:	b	18a34 <mpfr_mul_ui@@Base+0x28c>
   18a1c:	mov	w25, wzr
   18a20:	cmp	x23, x1
   18a24:	b.eq	18a34 <mpfr_mul_ui@@Base+0x28c>  // b.none
   18a28:	lsl	x2, x11, #3
   18a2c:	mov	x0, x23
   18a30:	bl	bad0 <memcpy@plt>
   18a34:	ldr	x8, [x23]
   18a38:	neg	x9, x26
   18a3c:	and	x8, x8, x9
   18a40:	str	x8, [x23]
   18a44:	ldur	x0, [x29, #-8]
   18a48:	cbnz	x0, 18bf4 <mpfr_mul_ui@@Base+0x44c>
   18a4c:	mov	w8, #0x40                  	// #64
   18a50:	sub	w9, w8, w22
   18a54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18a58:	ldr	x1, [x0, #2624]
   18a5c:	add	x0, x0, #0xa40
   18a60:	blr	x1
   18a64:	mrs	x8, tpidr_el0
   18a68:	ldr	x10, [x8, x0]
   18a6c:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
   18a70:	add	x11, x11, w9, sxtw
   18a74:	cmp	x10, x11
   18a78:	b.lt	18b58 <mpfr_mul_ui@@Base+0x3b0>  // b.tstop
   18a7c:	ldr	x11, [x20, #16]
   18a80:	sxtw	x9, w9
   18a84:	sub	x10, x10, x9
   18a88:	cmp	x11, x10
   18a8c:	b.gt	18b58 <mpfr_mul_ui@@Base+0x3b0>
   18a90:	add	x9, x11, x9
   18a94:	str	x9, [x19, #16]
   18a98:	ldr	w9, [x20, #8]
   18a9c:	str	w9, [x19, #8]
   18aa0:	cbz	w25, 18b38 <mpfr_mul_ui@@Base+0x390>
   18aa4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18aa8:	ldr	x1, [x0, #2656]
   18aac:	add	x0, x0, #0xa60
   18ab0:	blr	x1
   18ab4:	ldr	w9, [x8, x0]
   18ab8:	orr	w9, w9, #0x8
   18abc:	str	w9, [x8, x0]
   18ac0:	b	18b38 <mpfr_mul_ui@@Base+0x390>
   18ac4:	cmp	x12, #0x41
   18ac8:	b.lt	18a34 <mpfr_mul_ui@@Base+0x28c>  // b.tstop
   18acc:	cmp	x1, x23
   18ad0:	b.eq	18a34 <mpfr_mul_ui@@Base+0x28c>  // b.none
   18ad4:	add	x8, x24, x8, lsl #3
   18ad8:	add	x9, x10, #0x1
   18adc:	add	x10, x23, #0x8
   18ae0:	add	x8, x8, #0x8
   18ae4:	ldr	x11, [x8, x9, lsl #3]
   18ae8:	adds	x9, x9, #0x1
   18aec:	str	x11, [x10], #8
   18af0:	b.cc	18ae4 <mpfr_mul_ui@@Base+0x33c>  // b.lo, b.ul, b.last
   18af4:	b	18a34 <mpfr_mul_ui@@Base+0x28c>
   18af8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   18afc:	sub	w22, w22, #0x1
   18b00:	str	x8, [x23, x9, lsl #3]
   18b04:	b	18a34 <mpfr_mul_ui@@Base+0x28c>
   18b08:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18b0c:	cmp	x9, x10
   18b10:	b.eq	18bfc <mpfr_mul_ui@@Base+0x454>  // b.none
   18b14:	mov	x10, #0x2                   	// #2
   18b18:	movk	x10, #0x8000, lsl #48
   18b1c:	cmp	x9, x10
   18b20:	b.eq	18c0c <mpfr_mul_ui@@Base+0x464>  // b.none
   18b24:	mov	w25, wzr
   18b28:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   18b2c:	str	x8, [x19, #16]
   18b30:	ldr	w8, [x20, #8]
   18b34:	str	w8, [x19, #8]
   18b38:	mov	w0, w25
   18b3c:	mov	sp, x29
   18b40:	ldp	x20, x19, [sp, #64]
   18b44:	ldp	x22, x21, [sp, #48]
   18b48:	ldp	x24, x23, [sp, #32]
   18b4c:	ldp	x26, x25, [sp, #16]
   18b50:	ldp	x29, x30, [sp], #80
   18b54:	ret
   18b58:	ldr	w2, [x20, #8]
   18b5c:	mov	x0, x19
   18b60:	mov	w1, w21
   18b64:	bl	bff0 <mpfr_overflow@plt>
   18b68:	b	1880c <mpfr_mul_ui@@Base+0x64>
   18b6c:	clz	x8, x8
   18b70:	mov	w9, #0x40                  	// #64
   18b74:	sub	x2, x9, x8
   18b78:	mov	x0, x19
   18b7c:	mov	x1, x20
   18b80:	mov	w3, w21
   18b84:	bl	bc40 <mpfr_mul_2si@plt>
   18b88:	b	1880c <mpfr_mul_ui@@Base+0x64>
   18b8c:	sub	x0, x29, #0x8
   18b90:	bl	be70 <mpfr_tmp_allocate@plt>
   18b94:	mov	x24, x0
   18b98:	b	18860 <mpfr_mul_ui@@Base+0xb8>
   18b9c:	mov	w22, wzr
   18ba0:	b	18894 <mpfr_mul_ui@@Base+0xec>
   18ba4:	sub	x25, x11, x15
   18ba8:	add	x0, x23, x25, lsl #3
   18bac:	cmp	x0, x24
   18bb0:	b.eq	18bc0 <mpfr_mul_ui@@Base+0x418>  // b.none
   18bb4:	lsl	x2, x15, #3
   18bb8:	mov	x1, x24
   18bbc:	bl	bad0 <memcpy@plt>
   18bc0:	lsl	x2, x25, #3
   18bc4:	mov	x0, x23
   18bc8:	mov	w1, wzr
   18bcc:	bl	c1b0 <memset@plt>
   18bd0:	mov	w25, wzr
   18bd4:	b	18a44 <mpfr_mul_ui@@Base+0x29c>
   18bd8:	ldur	x14, [x1, #-8]
   18bdc:	and	x13, x14, #0x8000000000000000
   18be0:	and	x14, x14, #0x7fffffffffffffff
   18be4:	cbz	w21, 18c34 <mpfr_mul_ui@@Base+0x48c>
   18be8:	cbz	x13, 18c34 <mpfr_mul_ui@@Base+0x48c>
   18bec:	mov	w26, #0x1                   	// #1
   18bf0:	b	18944 <mpfr_mul_ui@@Base+0x19c>
   18bf4:	bl	c460 <mpfr_tmp_free@plt>
   18bf8:	b	18a4c <mpfr_mul_ui@@Base+0x2a4>
   18bfc:	cbz	x22, 18c0c <mpfr_mul_ui@@Base+0x464>
   18c00:	mov	w25, wzr
   18c04:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   18c08:	b	18b2c <mpfr_mul_ui@@Base+0x384>
   18c0c:	str	x8, [x19, #16]
   18c10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18c14:	ldr	x1, [x0, #2656]
   18c18:	add	x0, x0, #0xa60
   18c1c:	blr	x1
   18c20:	mrs	x8, tpidr_el0
   18c24:	ldr	w9, [x8, x0]
   18c28:	mov	w25, wzr
   18c2c:	orr	w9, w9, #0x4
   18c30:	b	18abc <mpfr_mul_ui@@Base+0x314>
   18c34:	mov	w26, #0x1                   	// #1
   18c38:	cbnz	x14, 18944 <mpfr_mul_ui@@Base+0x19c>
   18c3c:	sub	x15, x8, x11
   18c40:	cbz	x15, 18944 <mpfr_mul_ui@@Base+0x19c>
   18c44:	sub	x14, x8, x9
   18c48:	sub	x15, x14, #0x2
   18c4c:	mov	w26, #0x1                   	// #1
   18c50:	ldr	x14, [x24, x15, lsl #3]
   18c54:	subs	x15, x15, #0x1
   18c58:	cset	w16, cs  // cs = hs, nlast
   18c5c:	cbnz	x14, 18944 <mpfr_mul_ui@@Base+0x19c>
   18c60:	tbnz	w16, #0, 18c50 <mpfr_mul_ui@@Base+0x4a8>
   18c64:	b	18944 <mpfr_mul_ui@@Base+0x19c>

0000000000018c68 <mpfr_neg@@Base>:
   18c68:	stp	x29, x30, [sp, #-16]!
   18c6c:	cmp	x0, x1
   18c70:	mov	x29, sp
   18c74:	b.ne	18ca4 <mpfr_neg@@Base+0x3c>  // b.any
   18c78:	ldr	w8, [x0, #8]
   18c7c:	ldr	x9, [x0, #16]
   18c80:	mov	x10, #0x2                   	// #2
   18c84:	movk	x10, #0x8000, lsl #48
   18c88:	neg	w8, w8
   18c8c:	cmp	x9, x10
   18c90:	str	w8, [x0, #8]
   18c94:	b.eq	18cb4 <mpfr_neg@@Base+0x4c>  // b.none
   18c98:	mov	w0, wzr
   18c9c:	ldp	x29, x30, [sp], #16
   18ca0:	ret
   18ca4:	ldr	w8, [x1, #8]
   18ca8:	neg	w3, w8
   18cac:	ldp	x29, x30, [sp], #16
   18cb0:	b	c6f0 <mpfr_set4@plt>
   18cb4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18cb8:	ldr	x1, [x0, #2656]
   18cbc:	add	x0, x0, #0xa60
   18cc0:	blr	x1
   18cc4:	mrs	x8, tpidr_el0
   18cc8:	ldr	w9, [x8, x0]
   18ccc:	orr	w9, w9, #0x4
   18cd0:	str	w9, [x8, x0]
   18cd4:	b	18c98 <mpfr_neg@@Base+0x30>

0000000000018cd8 <mpfr_nexttozero@@Base>:
   18cd8:	sub	sp, sp, #0x20
   18cdc:	stp	x29, x30, [sp, #16]
   18ce0:	ldr	x9, [x0, #16]
   18ce4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18ce8:	mov	x8, x0
   18cec:	add	x29, sp, #0x10
   18cf0:	cmp	x9, x10
   18cf4:	b.le	18d64 <mpfr_nexttozero@@Base+0x8c>
   18cf8:	ldr	x9, [x8, #24]
   18cfc:	ldr	x10, [x8]
   18d00:	mov	w11, #0x1                   	// #1
   18d04:	ldr	x15, [x9]
   18d08:	sub	x12, x10, #0x1
   18d0c:	add	x13, x10, #0x3e
   18d10:	neg	w14, w10
   18d14:	cmp	x12, #0x0
   18d18:	csel	x10, x13, x12, lt  // lt = tstop
   18d1c:	lsl	x11, x11, x14
   18d20:	asr	x10, x10, #6
   18d24:	subs	x11, x15, x11
   18d28:	str	x11, [x9]
   18d2c:	b.cs	18d50 <mpfr_nexttozero@@Base+0x78>  // b.hs, b.nlast
   18d30:	mov	w11, #0x1                   	// #1
   18d34:	cmp	x11, x10
   18d38:	b.gt	18d50 <mpfr_nexttozero@@Base+0x78>
   18d3c:	ldr	x12, [x9, x11, lsl #3]
   18d40:	sub	x13, x12, #0x1
   18d44:	str	x13, [x9, x11, lsl #3]
   18d48:	add	x11, x11, #0x1
   18d4c:	cbz	x12, 18d34 <mpfr_nexttozero@@Base+0x5c>
   18d50:	ldr	x11, [x9, x10, lsl #3]
   18d54:	tbz	x11, #63, 18d90 <mpfr_nexttozero@@Base+0xb8>
   18d58:	ldp	x29, x30, [sp, #16]
   18d5c:	add	sp, sp, #0x20
   18d60:	ret
   18d64:	b.ne	18dcc <mpfr_nexttozero@@Base+0xf4>  // b.any
   18d68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18d6c:	ldr	x1, [x0, #2624]
   18d70:	add	x0, x0, #0xa40
   18d74:	blr	x1
   18d78:	mrs	x9, tpidr_el0
   18d7c:	ldr	x1, [x9, x0]
   18d80:	ldp	x29, x30, [sp, #16]
   18d84:	mov	x0, x8
   18d88:	add	sp, sp, #0x20
   18d8c:	b	c170 <mpfr_setmax@plt>
   18d90:	ldr	x11, [x8, #16]
   18d94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18d98:	ldr	x1, [x0, #2592]
   18d9c:	add	x0, x0, #0xa20
   18da0:	blr	x1
   18da4:	mrs	x12, tpidr_el0
   18da8:	ldr	x12, [x12, x0]
   18dac:	cmp	x11, x12
   18db0:	b.eq	18e0c <mpfr_nexttozero@@Base+0x134>  // b.none
   18db4:	sub	x11, x11, #0x1
   18db8:	str	x11, [x8, #16]
   18dbc:	ldr	x8, [x9, x10, lsl #3]
   18dc0:	orr	x8, x8, #0x8000000000000000
   18dc4:	str	x8, [x9, x10, lsl #3]
   18dc8:	b	18d58 <mpfr_nexttozero@@Base+0x80>
   18dcc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   18dd0:	cmp	x9, x10
   18dd4:	b.ne	18e18 <mpfr_nexttozero@@Base+0x140>  // b.any
   18dd8:	ldr	w9, [x8, #8]
   18ddc:	neg	w9, w9
   18de0:	str	w9, [x8, #8]
   18de4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18de8:	ldr	x1, [x0, #2592]
   18dec:	add	x0, x0, #0xa20
   18df0:	blr	x1
   18df4:	mrs	x9, tpidr_el0
   18df8:	ldr	x1, [x9, x0]
   18dfc:	ldp	x29, x30, [sp, #16]
   18e00:	mov	x0, x8
   18e04:	add	sp, sp, #0x20
   18e08:	b	c310 <mpfr_setmin@plt>
   18e0c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   18e10:	str	x9, [x8, #16]
   18e14:	b	18d58 <mpfr_nexttozero@@Base+0x80>
   18e18:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   18e1c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   18e20:	add	x0, x0, #0xa86
   18e24:	add	x2, x2, #0xa8d
   18e28:	mov	w1, #0x2b                  	// #43
   18e2c:	str	x8, [sp, #8]
   18e30:	bl	cb90 <mpfr_assert_fail@plt>
   18e34:	ldr	x8, [sp, #8]
   18e38:	b	18dd8 <mpfr_nexttozero@@Base+0x100>

0000000000018e3c <mpfr_nexttoinf@@Base>:
   18e3c:	stp	x29, x30, [sp, #-16]!
   18e40:	ldr	x9, [x0, #16]
   18e44:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   18e48:	mov	x8, x0
   18e4c:	mov	x29, sp
   18e50:	cmp	x9, x10
   18e54:	b.le	18ef0 <mpfr_nexttoinf@@Base+0xb4>
   18e58:	ldr	x10, [x8]
   18e5c:	ldr	x9, [x8, #24]
   18e60:	sub	x11, x10, #0x1
   18e64:	ldr	x14, [x9]
   18e68:	add	x12, x10, #0x3e
   18e6c:	cmp	x11, #0x0
   18e70:	neg	w13, w10
   18e74:	csel	x10, x12, x11, lt  // lt = tstop
   18e78:	mov	w11, #0x1                   	// #1
   18e7c:	lsl	x11, x11, x13
   18e80:	adds	x11, x14, x11
   18e84:	str	x11, [x9]
   18e88:	b.cc	18ee8 <mpfr_nexttoinf@@Base+0xac>  // b.lo, b.ul, b.last
   18e8c:	asr	x10, x10, #6
   18e90:	mov	w11, #0x1                   	// #1
   18e94:	cmp	x11, x10
   18e98:	b.gt	18eb4 <mpfr_nexttoinf@@Base+0x78>
   18e9c:	ldr	x12, [x9, x11, lsl #3]
   18ea0:	adds	x12, x12, #0x1
   18ea4:	str	x12, [x9, x11, lsl #3]
   18ea8:	add	x11, x11, #0x1
   18eac:	b.cs	18e94 <mpfr_nexttoinf@@Base+0x58>  // b.hs, b.nlast
   18eb0:	b	18ee8 <mpfr_nexttoinf@@Base+0xac>
   18eb4:	ldr	x11, [x8, #16]
   18eb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18ebc:	ldr	x1, [x0, #2624]
   18ec0:	add	x0, x0, #0xa40
   18ec4:	blr	x1
   18ec8:	mrs	x12, tpidr_el0
   18ecc:	ldr	x12, [x12, x0]
   18ed0:	cmp	x11, x12
   18ed4:	b.eq	18f20 <mpfr_nexttoinf@@Base+0xe4>  // b.none
   18ed8:	add	x11, x11, #0x1
   18edc:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   18ee0:	str	x11, [x8, #16]
   18ee4:	str	x12, [x9, x10, lsl #3]
   18ee8:	ldp	x29, x30, [sp], #16
   18eec:	ret
   18ef0:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   18ef4:	cmp	x9, x10
   18ef8:	b.ne	18ee8 <mpfr_nexttoinf@@Base+0xac>  // b.any
   18efc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18f00:	ldr	x1, [x0, #2592]
   18f04:	add	x0, x0, #0xa20
   18f08:	blr	x1
   18f0c:	mrs	x9, tpidr_el0
   18f10:	ldr	x1, [x9, x0]
   18f14:	mov	x0, x8
   18f18:	ldp	x29, x30, [sp], #16
   18f1c:	b	c310 <mpfr_setmin@plt>
   18f20:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   18f24:	str	x9, [x8, #16]
   18f28:	b	18ee8 <mpfr_nexttoinf@@Base+0xac>

0000000000018f2c <mpfr_nextabove@@Base>:
   18f2c:	stp	x29, x30, [sp, #-16]!
   18f30:	ldr	x8, [x0, #16]
   18f34:	mov	x9, #0x2                   	// #2
   18f38:	movk	x9, #0x8000, lsl #48
   18f3c:	mov	x29, sp
   18f40:	cmp	x8, x9
   18f44:	b.eq	18f60 <mpfr_nextabove@@Base+0x34>  // b.none
   18f48:	ldr	w8, [x0, #8]
   18f4c:	tbnz	w8, #31, 18f58 <mpfr_nextabove@@Base+0x2c>
   18f50:	ldp	x29, x30, [sp], #16
   18f54:	b	c6c0 <mpfr_nexttoinf@plt>
   18f58:	ldp	x29, x30, [sp], #16
   18f5c:	b	c4b0 <mpfr_nexttozero@plt>
   18f60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18f64:	ldr	x1, [x0, #2656]
   18f68:	add	x0, x0, #0xa60
   18f6c:	blr	x1
   18f70:	mrs	x8, tpidr_el0
   18f74:	ldr	w9, [x8, x0]
   18f78:	orr	w9, w9, #0x4
   18f7c:	str	w9, [x8, x0]
   18f80:	ldp	x29, x30, [sp], #16
   18f84:	ret

0000000000018f88 <mpfr_nextbelow@@Base>:
   18f88:	stp	x29, x30, [sp, #-16]!
   18f8c:	ldr	x8, [x0, #16]
   18f90:	mov	x9, #0x2                   	// #2
   18f94:	movk	x9, #0x8000, lsl #48
   18f98:	mov	x29, sp
   18f9c:	cmp	x8, x9
   18fa0:	b.eq	18fbc <mpfr_nextbelow@@Base+0x34>  // b.none
   18fa4:	ldr	w8, [x0, #8]
   18fa8:	tbnz	w8, #31, 18fb4 <mpfr_nextbelow@@Base+0x2c>
   18fac:	ldp	x29, x30, [sp], #16
   18fb0:	b	c4b0 <mpfr_nexttozero@plt>
   18fb4:	ldp	x29, x30, [sp], #16
   18fb8:	b	c6c0 <mpfr_nexttoinf@plt>
   18fbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   18fc0:	ldr	x1, [x0, #2656]
   18fc4:	add	x0, x0, #0xa60
   18fc8:	blr	x1
   18fcc:	mrs	x8, tpidr_el0
   18fd0:	ldr	w9, [x8, x0]
   18fd4:	orr	w9, w9, #0x4
   18fd8:	str	w9, [x8, x0]
   18fdc:	ldp	x29, x30, [sp], #16
   18fe0:	ret

0000000000018fe4 <mpfr_nexttoward@@Base>:
   18fe4:	stp	x29, x30, [sp, #-32]!
   18fe8:	ldr	x9, [x0, #16]
   18fec:	mov	x8, #0x2                   	// #2
   18ff0:	movk	x8, #0x8000, lsl #48
   18ff4:	str	x19, [sp, #16]
   18ff8:	cmp	x9, x8
   18ffc:	mov	x29, sp
   19000:	b.eq	1904c <mpfr_nexttoward@@Base+0x68>  // b.none
   19004:	ldr	x9, [x1, #16]
   19008:	mov	x19, x0
   1900c:	cmp	x9, x8
   19010:	b.eq	19048 <mpfr_nexttoward@@Base+0x64>  // b.none
   19014:	mov	w2, #0x1                   	// #1
   19018:	mov	x0, x19
   1901c:	bl	c9f0 <mpfr_cmp3@plt>
   19020:	cbz	w0, 1906c <mpfr_nexttoward@@Base+0x88>
   19024:	tbnz	w0, #31, 19038 <mpfr_nexttoward@@Base+0x54>
   19028:	mov	x0, x19
   1902c:	ldr	x19, [sp, #16]
   19030:	ldp	x29, x30, [sp], #32
   19034:	b	be80 <mpfr_nextbelow@plt>
   19038:	mov	x0, x19
   1903c:	ldr	x19, [sp, #16]
   19040:	ldp	x29, x30, [sp], #32
   19044:	b	c1c0 <mpfr_nextabove@plt>
   19048:	str	x8, [x19, #16]
   1904c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   19050:	ldr	x1, [x0, #2656]
   19054:	add	x0, x0, #0xa60
   19058:	blr	x1
   1905c:	mrs	x8, tpidr_el0
   19060:	ldr	w9, [x8, x0]
   19064:	orr	w9, w9, #0x4
   19068:	str	w9, [x8, x0]
   1906c:	ldr	x19, [sp, #16]
   19070:	ldp	x29, x30, [sp], #32
   19074:	ret

0000000000019078 <__gmpfr_out_str@@Base>:
   19078:	stp	x29, x30, [sp, #-64]!
   1907c:	sub	w8, w1, #0x2
   19080:	str	x23, [sp, #16]
   19084:	stp	x22, x21, [sp, #32]
   19088:	stp	x20, x19, [sp, #48]
   1908c:	mov	w22, w4
   19090:	mov	x20, x3
   19094:	mov	x23, x2
   19098:	mov	w21, w1
   1909c:	cmp	w8, #0x3d
   190a0:	mov	x19, x0
   190a4:	mov	x29, sp
   190a8:	b.cs	191e4 <__gmpfr_out_str@@Base+0x16c>  // b.hs, b.nlast
   190ac:	ldr	x8, [x20, #16]
   190b0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   190b4:	cmp	x8, x9
   190b8:	b.le	19200 <__gmpfr_out_str@@Base+0x188>
   190bc:	add	x1, x29, #0x18
   190c0:	mov	x0, xzr
   190c4:	mov	w2, w21
   190c8:	mov	x3, x23
   190cc:	mov	x4, x20
   190d0:	mov	w5, w22
   190d4:	bl	c550 <mpfr_get_str@plt>
   190d8:	mov	x22, x0
   190dc:	bl	bb70 <strlen@plt>
   190e0:	mov	x8, x0
   190e4:	ldrb	w0, [x22]
   190e8:	add	x20, x8, #0x1
   190ec:	mov	x23, x22
   190f0:	cmp	w0, #0x2d
   190f4:	b.ne	19110 <__gmpfr_out_str@@Base+0x98>  // b.any
   190f8:	mov	x1, x19
   190fc:	bl	be50 <fputc@plt>
   19100:	cmn	w0, #0x1
   19104:	b.eq	191bc <__gmpfr_out_str@@Base+0x144>  // b.none
   19108:	add	x23, x22, #0x1
   1910c:	ldrb	w0, [x23]
   19110:	mov	x1, x19
   19114:	bl	be50 <fputc@plt>
   19118:	cmn	w0, #0x1
   1911c:	b.eq	191bc <__gmpfr_out_str@@Base+0x144>  // b.none
   19120:	bl	bf50 <localeconv@plt>
   19124:	ldr	x8, [x0]
   19128:	ldrb	w8, [x8, #1]
   1912c:	cbz	w8, 19138 <__gmpfr_out_str@@Base+0xc0>
   19130:	mov	w0, #0x2e                  	// #46
   19134:	b	19144 <__gmpfr_out_str@@Base+0xcc>
   19138:	bl	bf50 <localeconv@plt>
   1913c:	ldr	x8, [x0]
   19140:	ldrb	w0, [x8]
   19144:	mov	x1, x19
   19148:	bl	be50 <fputc@plt>
   1914c:	cmn	w0, #0x1
   19150:	b.eq	191bc <__gmpfr_out_str@@Base+0x144>  // b.none
   19154:	add	x0, x23, #0x1
   19158:	mov	x1, x19
   1915c:	bl	bb80 <fputs@plt>
   19160:	mov	w23, w0
   19164:	mov	x0, x22
   19168:	mov	x1, x20
   1916c:	bl	cc80 <mpfr_free_func@plt>
   19170:	cmn	w23, #0x1
   19174:	b.eq	191c8 <__gmpfr_out_str@@Base+0x150>  // b.none
   19178:	ldr	x8, [x29, #24]
   1917c:	subs	x2, x8, #0x1
   19180:	str	x2, [x29, #24]
   19184:	b.eq	191cc <__gmpfr_out_str@@Base+0x154>  // b.none
   19188:	adrp	x8, 59000 <mpfr_free_pool@@Base+0x387c>
   1918c:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   19190:	add	x8, x8, #0xaef
   19194:	add	x9, x9, #0xaea
   19198:	cmp	w21, #0xb
   1919c:	csel	x1, x9, x8, lt  // lt = tstop
   191a0:	mov	x0, x19
   191a4:	bl	cd40 <fprintf@plt>
   191a8:	cmp	w0, #0x0
   191ac:	csel	w8, wzr, w0, lt  // lt = tstop
   191b0:	tbnz	w0, #31, 191c8 <__gmpfr_out_str@@Base+0x150>
   191b4:	add	x20, x20, x8
   191b8:	b	191cc <__gmpfr_out_str@@Base+0x154>
   191bc:	mov	x0, x22
   191c0:	mov	x1, x20
   191c4:	bl	cc80 <mpfr_free_func@plt>
   191c8:	mov	x20, xzr
   191cc:	mov	x0, x20
   191d0:	ldp	x20, x19, [sp, #48]
   191d4:	ldp	x22, x21, [sp, #32]
   191d8:	ldr	x23, [sp, #16]
   191dc:	ldp	x29, x30, [sp], #64
   191e0:	ret
   191e4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   191e8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   191ec:	add	x0, x0, #0xac5
   191f0:	add	x2, x2, #0xacf
   191f4:	mov	w1, #0x2c                  	// #44
   191f8:	bl	cb90 <mpfr_assert_fail@plt>
   191fc:	b	190ac <__gmpfr_out_str@@Base+0x34>
   19200:	b.eq	19220 <__gmpfr_out_str@@Base+0x1a8>  // b.none
   19204:	mov	x9, #0x2                   	// #2
   19208:	movk	x9, #0x8000, lsl #48
   1920c:	cmp	x8, x9
   19210:	b.ne	19238 <__gmpfr_out_str@@Base+0x1c0>  // b.any
   19214:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   19218:	add	x1, x1, #0xbd
   1921c:	b	19254 <__gmpfr_out_str@@Base+0x1dc>
   19220:	ldr	w8, [x20, #8]
   19224:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   19228:	adrp	x10, 59000 <mpfr_free_pool@@Base+0x387c>
   1922c:	add	x9, x9, #0x8fc
   19230:	add	x10, x10, #0x8fd
   19234:	b	1924c <__gmpfr_out_str@@Base+0x1d4>
   19238:	ldr	w8, [x20, #8]
   1923c:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   19240:	adrp	x10, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   19244:	add	x9, x9, #0xae7
   19248:	add	x10, x10, #0x7da
   1924c:	cmp	w8, #0x0
   19250:	csel	x1, x10, x9, gt
   19254:	mov	x0, x19
   19258:	bl	cd40 <fprintf@plt>
   1925c:	bic	w20, w0, w0, asr #31
   19260:	b	191cc <__gmpfr_out_str@@Base+0x154>

0000000000019264 <mpfr_printf@@Base>:
   19264:	sub	sp, sp, #0x120
   19268:	stp	x29, x30, [sp, #256]
   1926c:	add	x29, sp, #0x100
   19270:	mov	x10, #0xffffffffffffffc8    	// #-56
   19274:	mov	x11, sp
   19278:	add	x12, sp, #0x80
   1927c:	movk	x10, #0xff80, lsl #32
   19280:	add	x13, x29, #0x20
   19284:	add	x11, x11, #0x80
   19288:	add	x12, x12, #0x38
   1928c:	sub	x9, x29, #0x48
   19290:	stp	x11, x10, [x29, #-56]
   19294:	stp	x13, x12, [x29, #-72]
   19298:	stp	q0, q1, [sp]
   1929c:	ldp	q0, q1, [x9]
   192a0:	mov	x8, x0
   192a4:	stp	x1, x2, [sp, #128]
   192a8:	stp	x3, x4, [sp, #144]
   192ac:	sub	x0, x29, #0x28
   192b0:	sub	x4, x29, #0x20
   192b4:	mov	x1, xzr
   192b8:	mov	x2, xzr
   192bc:	mov	x3, x8
   192c0:	stp	x28, x19, [sp, #272]
   192c4:	stp	x5, x6, [sp, #160]
   192c8:	str	x7, [sp, #176]
   192cc:	stp	q2, q3, [sp, #32]
   192d0:	stp	q4, q5, [sp, #64]
   192d4:	stp	q6, q7, [sp, #96]
   192d8:	stp	q0, q1, [x29, #-32]
   192dc:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   192e0:	tbnz	w0, #31, 19308 <mpfr_printf@@Base+0xa4>
   192e4:	ldur	x1, [x29, #-40]
   192e8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   192ec:	add	x0, x0, #0xaf4
   192f0:	bl	cc40 <printf@plt>
   192f4:	ldur	x8, [x29, #-40]
   192f8:	mov	w19, w0
   192fc:	mov	x0, x8
   19300:	bl	c8e0 <mpfr_free_str@plt>
   19304:	b	19318 <mpfr_printf@@Base+0xb4>
   19308:	ldur	x0, [x29, #-40]
   1930c:	cbz	x0, 19314 <mpfr_printf@@Base+0xb0>
   19310:	bl	c8e0 <mpfr_free_str@plt>
   19314:	mov	w19, #0xffffffff            	// #-1
   19318:	mov	w0, w19
   1931c:	ldp	x28, x19, [sp, #272]
   19320:	ldp	x29, x30, [sp, #256]
   19324:	add	sp, sp, #0x120
   19328:	ret

000000000001932c <__gmpfr_vasprintf@@Base>:
   1932c:	sub	sp, sp, #0x30
   19330:	stp	x29, x30, [sp, #32]
   19334:	ldp	q1, q0, [x2]
   19338:	mov	x3, x1
   1933c:	mov	x4, sp
   19340:	mov	x1, xzr
   19344:	mov	x2, xzr
   19348:	add	x29, sp, #0x20
   1934c:	stp	q1, q0, [sp]
   19350:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   19354:	ldp	x29, x30, [sp, #32]
   19358:	add	sp, sp, #0x30
   1935c:	ret

0000000000019360 <__gmpfr_vprintf@@Base>:
   19360:	sub	sp, sp, #0x40
   19364:	stp	x29, x30, [sp, #32]
   19368:	str	x19, [sp, #48]
   1936c:	ldp	q1, q0, [x1]
   19370:	add	x29, sp, #0x20
   19374:	mov	x3, x0
   19378:	add	x0, x29, #0x18
   1937c:	mov	x4, sp
   19380:	mov	x1, xzr
   19384:	mov	x2, xzr
   19388:	stp	q1, q0, [sp]
   1938c:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   19390:	ldr	x1, [x29, #24]
   19394:	tbnz	w0, #31, 193b8 <__gmpfr_vprintf@@Base+0x58>
   19398:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1939c:	add	x0, x0, #0xaf4
   193a0:	bl	cc40 <printf@plt>
   193a4:	ldr	x8, [x29, #24]
   193a8:	mov	w19, w0
   193ac:	mov	x0, x8
   193b0:	bl	c8e0 <mpfr_free_str@plt>
   193b4:	b	193c8 <__gmpfr_vprintf@@Base+0x68>
   193b8:	cbz	x1, 193c4 <__gmpfr_vprintf@@Base+0x64>
   193bc:	mov	x0, x1
   193c0:	bl	c8e0 <mpfr_free_str@plt>
   193c4:	mov	w19, #0xffffffff            	// #-1
   193c8:	mov	w0, w19
   193cc:	ldr	x19, [sp, #48]
   193d0:	ldp	x29, x30, [sp, #32]
   193d4:	add	sp, sp, #0x40
   193d8:	ret

00000000000193dc <__gmpfr_fprintf@@Base>:
   193dc:	sub	sp, sp, #0x120
   193e0:	stp	x29, x30, [sp, #256]
   193e4:	add	x29, sp, #0x100
   193e8:	mov	x10, #0xffffffffffffffd0    	// #-48
   193ec:	mov	x11, sp
   193f0:	sub	x12, x29, #0x78
   193f4:	movk	x10, #0xff80, lsl #32
   193f8:	add	x13, x29, #0x20
   193fc:	add	x11, x11, #0x80
   19400:	add	x12, x12, #0x30
   19404:	sub	x9, x29, #0x48
   19408:	stp	x11, x10, [x29, #-56]
   1940c:	stp	x13, x12, [x29, #-72]
   19410:	stp	x2, x3, [x29, #-120]
   19414:	stp	x4, x5, [x29, #-104]
   19418:	stp	x6, x7, [x29, #-88]
   1941c:	stp	q1, q2, [sp, #16]
   19420:	str	q0, [sp]
   19424:	ldp	q0, q1, [x9]
   19428:	mov	x8, x1
   1942c:	stp	x28, x19, [sp, #272]
   19430:	mov	x19, x0
   19434:	sub	x0, x29, #0x28
   19438:	sub	x4, x29, #0x20
   1943c:	mov	x1, xzr
   19440:	mov	x2, xzr
   19444:	mov	x3, x8
   19448:	stp	q3, q4, [sp, #48]
   1944c:	stp	q5, q6, [sp, #80]
   19450:	str	q7, [sp, #112]
   19454:	stp	q0, q1, [x29, #-32]
   19458:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   1945c:	tbnz	w0, #31, 19488 <__gmpfr_fprintf@@Base+0xac>
   19460:	ldur	x2, [x29, #-40]
   19464:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   19468:	add	x1, x1, #0xaf4
   1946c:	mov	x0, x19
   19470:	bl	cd40 <fprintf@plt>
   19474:	ldur	x8, [x29, #-40]
   19478:	mov	w19, w0
   1947c:	mov	x0, x8
   19480:	bl	c8e0 <mpfr_free_str@plt>
   19484:	b	19498 <__gmpfr_fprintf@@Base+0xbc>
   19488:	ldur	x0, [x29, #-40]
   1948c:	cbz	x0, 19494 <__gmpfr_fprintf@@Base+0xb8>
   19490:	bl	c8e0 <mpfr_free_str@plt>
   19494:	mov	w19, #0xffffffff            	// #-1
   19498:	mov	w0, w19
   1949c:	ldp	x28, x19, [sp, #272]
   194a0:	ldp	x29, x30, [sp, #256]
   194a4:	add	sp, sp, #0x120
   194a8:	ret

00000000000194ac <__gmpfr_vfprintf@@Base>:
   194ac:	sub	sp, sp, #0x40
   194b0:	stp	x29, x30, [sp, #32]
   194b4:	str	x19, [sp, #48]
   194b8:	ldp	q1, q0, [x2]
   194bc:	add	x29, sp, #0x20
   194c0:	mov	x3, x1
   194c4:	mov	x19, x0
   194c8:	add	x0, x29, #0x18
   194cc:	mov	x4, sp
   194d0:	mov	x1, xzr
   194d4:	mov	x2, xzr
   194d8:	stp	q1, q0, [sp]
   194dc:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   194e0:	ldr	x2, [x29, #24]
   194e4:	tbnz	w0, #31, 1950c <__gmpfr_vfprintf@@Base+0x60>
   194e8:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   194ec:	add	x1, x1, #0xaf4
   194f0:	mov	x0, x19
   194f4:	bl	cd40 <fprintf@plt>
   194f8:	ldr	x8, [x29, #24]
   194fc:	mov	w19, w0
   19500:	mov	x0, x8
   19504:	bl	c8e0 <mpfr_free_str@plt>
   19508:	b	1951c <__gmpfr_vfprintf@@Base+0x70>
   1950c:	cbz	x2, 19518 <__gmpfr_vfprintf@@Base+0x6c>
   19510:	mov	x0, x2
   19514:	bl	c8e0 <mpfr_free_str@plt>
   19518:	mov	w19, #0xffffffff            	// #-1
   1951c:	mov	w0, w19
   19520:	ldr	x19, [sp, #48]
   19524:	ldp	x29, x30, [sp, #32]
   19528:	add	sp, sp, #0x40
   1952c:	ret

0000000000019530 <mpfr_sprintf@@Base>:
   19530:	sub	sp, sp, #0x130
   19534:	stp	x29, x30, [sp, #256]
   19538:	add	x29, sp, #0x100
   1953c:	mov	x10, #0xffffffffffffffd0    	// #-48
   19540:	mov	x11, sp
   19544:	sub	x12, x29, #0x78
   19548:	movk	x10, #0xff80, lsl #32
   1954c:	add	x13, x29, #0x30
   19550:	add	x11, x11, #0x80
   19554:	add	x12, x12, #0x30
   19558:	sub	x9, x29, #0x48
   1955c:	stp	x11, x10, [x29, #-56]
   19560:	stp	x13, x12, [x29, #-72]
   19564:	stp	x2, x3, [x29, #-120]
   19568:	stp	x4, x5, [x29, #-104]
   1956c:	stp	x6, x7, [x29, #-88]
   19570:	stp	q1, q2, [sp, #16]
   19574:	str	q0, [sp]
   19578:	ldp	q0, q1, [x9]
   1957c:	mov	x8, x1
   19580:	stp	x20, x19, [sp, #288]
   19584:	mov	x19, x0
   19588:	sub	x0, x29, #0x28
   1958c:	sub	x4, x29, #0x20
   19590:	mov	x1, xzr
   19594:	mov	x2, xzr
   19598:	mov	x3, x8
   1959c:	stp	x28, x21, [sp, #272]
   195a0:	stp	q3, q4, [sp, #48]
   195a4:	stp	q5, q6, [sp, #80]
   195a8:	str	q7, [sp, #112]
   195ac:	stp	q0, q1, [x29, #-32]
   195b0:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   195b4:	tbnz	w0, #31, 195e4 <mpfr_sprintf@@Base+0xb4>
   195b8:	ldur	x21, [x29, #-40]
   195bc:	mov	x0, x21
   195c0:	bl	bb70 <strlen@plt>
   195c4:	mov	x20, x0
   195c8:	add	x2, x0, #0x1
   195cc:	mov	x0, x19
   195d0:	mov	x1, x21
   195d4:	bl	bad0 <memcpy@plt>
   195d8:	mov	x0, x21
   195dc:	bl	c8e0 <mpfr_free_str@plt>
   195e0:	b	195f4 <mpfr_sprintf@@Base+0xc4>
   195e4:	ldur	x0, [x29, #-40]
   195e8:	cbz	x0, 195f0 <mpfr_sprintf@@Base+0xc0>
   195ec:	bl	c8e0 <mpfr_free_str@plt>
   195f0:	mov	w20, #0xffffffff            	// #-1
   195f4:	mov	w0, w20
   195f8:	ldp	x20, x19, [sp, #288]
   195fc:	ldp	x28, x21, [sp, #272]
   19600:	ldp	x29, x30, [sp, #256]
   19604:	add	sp, sp, #0x130
   19608:	ret

000000000001960c <__gmpfr_vsprintf@@Base>:
   1960c:	sub	sp, sp, #0x50
   19610:	stp	x29, x30, [sp, #32]
   19614:	str	x21, [sp, #48]
   19618:	stp	x20, x19, [sp, #64]
   1961c:	ldp	q1, q0, [x2]
   19620:	add	x29, sp, #0x20
   19624:	mov	x3, x1
   19628:	mov	x19, x0
   1962c:	add	x0, x29, #0x18
   19630:	mov	x4, sp
   19634:	mov	x1, xzr
   19638:	mov	x2, xzr
   1963c:	stp	q1, q0, [sp]
   19640:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   19644:	ldr	x21, [x29, #24]
   19648:	tbnz	w0, #31, 19674 <__gmpfr_vsprintf@@Base+0x68>
   1964c:	mov	x0, x21
   19650:	bl	bb70 <strlen@plt>
   19654:	mov	x20, x0
   19658:	add	x2, x0, #0x1
   1965c:	mov	x0, x19
   19660:	mov	x1, x21
   19664:	bl	bad0 <memcpy@plt>
   19668:	mov	x0, x21
   1966c:	bl	c8e0 <mpfr_free_str@plt>
   19670:	b	19684 <__gmpfr_vsprintf@@Base+0x78>
   19674:	cbz	x21, 19680 <__gmpfr_vsprintf@@Base+0x74>
   19678:	mov	x0, x21
   1967c:	bl	c8e0 <mpfr_free_str@plt>
   19680:	mov	w20, #0xffffffff            	// #-1
   19684:	mov	w0, w20
   19688:	ldp	x20, x19, [sp, #64]
   1968c:	ldr	x21, [sp, #48]
   19690:	ldp	x29, x30, [sp, #32]
   19694:	add	sp, sp, #0x50
   19698:	ret

000000000001969c <mpfr_snprintf@@Base>:
   1969c:	sub	sp, sp, #0x100
   196a0:	stp	x29, x30, [sp, #240]
   196a4:	add	x29, sp, #0xf0
   196a8:	mov	x9, #0xffffffffffffffd8    	// #-40
   196ac:	mov	x10, sp
   196b0:	sub	x11, x29, #0x68
   196b4:	movk	x9, #0xff80, lsl #32
   196b8:	add	x12, x29, #0x10
   196bc:	add	x10, x10, #0x80
   196c0:	add	x11, x11, #0x28
   196c4:	stp	x10, x9, [x29, #-16]
   196c8:	stp	x12, x11, [x29, #-32]
   196cc:	stp	x3, x4, [x29, #-104]
   196d0:	stp	x5, x6, [x29, #-88]
   196d4:	stur	x7, [x29, #-72]
   196d8:	stp	q1, q2, [sp, #16]
   196dc:	str	q0, [sp]
   196e0:	ldp	q0, q1, [x29, #-32]
   196e4:	mov	x8, x2
   196e8:	mov	x2, x1
   196ec:	mov	x1, x0
   196f0:	sub	x4, x29, #0x40
   196f4:	mov	x0, xzr
   196f8:	mov	x3, x8
   196fc:	stp	q3, q4, [sp, #48]
   19700:	stp	q5, q6, [sp, #80]
   19704:	str	q7, [sp, #112]
   19708:	stp	q0, q1, [x29, #-64]
   1970c:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   19710:	ldp	x29, x30, [sp, #240]
   19714:	add	sp, sp, #0x100
   19718:	ret

000000000001971c <__gmpfr_vsnprintf@@Base>:
   1971c:	sub	sp, sp, #0x30
   19720:	stp	x29, x30, [sp, #32]
   19724:	ldp	q1, q0, [x3]
   19728:	mov	x8, x2
   1972c:	mov	x2, x1
   19730:	mov	x1, x0
   19734:	mov	x4, sp
   19738:	mov	x0, xzr
   1973c:	mov	x3, x8
   19740:	add	x29, sp, #0x20
   19744:	stp	q1, q0, [sp]
   19748:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   1974c:	ldp	x29, x30, [sp, #32]
   19750:	add	sp, sp, #0x30
   19754:	ret

0000000000019758 <mpfr_asprintf@@Base>:
   19758:	sub	sp, sp, #0x110
   1975c:	stp	x29, x30, [sp, #240]
   19760:	add	x29, sp, #0xf0
   19764:	mov	x9, #0xffffffffffffffd0    	// #-48
   19768:	mov	x10, sp
   1976c:	sub	x11, x29, #0x70
   19770:	movk	x9, #0xff80, lsl #32
   19774:	add	x12, x29, #0x20
   19778:	add	x10, x10, #0x80
   1977c:	add	x11, x11, #0x30
   19780:	stp	x10, x9, [x29, #-48]
   19784:	stp	x12, x11, [x29, #-64]
   19788:	stp	x2, x3, [x29, #-112]
   1978c:	stp	x4, x5, [x29, #-96]
   19790:	stp	x6, x7, [x29, #-80]
   19794:	stp	q1, q2, [sp, #16]
   19798:	str	q0, [sp]
   1979c:	ldp	q0, q1, [x29, #-64]
   197a0:	mov	x8, x1
   197a4:	sub	x4, x29, #0x20
   197a8:	mov	x1, xzr
   197ac:	mov	x2, xzr
   197b0:	mov	x3, x8
   197b4:	stp	x28, x19, [sp, #256]
   197b8:	mov	x19, x0
   197bc:	stp	q3, q4, [sp, #48]
   197c0:	stp	q5, q6, [sp, #80]
   197c4:	str	q7, [sp, #112]
   197c8:	stp	q0, q1, [x29, #-32]
   197cc:	bl	bcd0 <mpfr_vasnprintf_aux@plt>
   197d0:	tbz	w0, #31, 197e4 <mpfr_asprintf@@Base+0x8c>
   197d4:	ldr	x0, [x19]
   197d8:	cbz	x0, 197e0 <mpfr_asprintf@@Base+0x88>
   197dc:	bl	c8e0 <mpfr_free_str@plt>
   197e0:	mov	w0, #0xffffffff            	// #-1
   197e4:	ldp	x28, x19, [sp, #256]
   197e8:	ldp	x29, x30, [sp, #240]
   197ec:	add	sp, sp, #0x110
   197f0:	ret

00000000000197f4 <mpfr_vasnprintf_aux@@Base>:
   197f4:	stp	x29, x30, [sp, #-96]!
   197f8:	stp	x28, x27, [sp, #16]
   197fc:	stp	x26, x25, [sp, #32]
   19800:	stp	x24, x23, [sp, #48]
   19804:	stp	x22, x21, [sp, #64]
   19808:	stp	x20, x19, [sp, #80]
   1980c:	mov	x29, sp
   19810:	sub	sp, sp, #0x1f0
   19814:	mov	x19, sp
   19818:	mov	x23, x4
   1981c:	mov	x22, x3
   19820:	str	x1, [x19, #136]
   19824:	mov	x20, x0
   19828:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1982c:	ldr	x1, [x0, #2656]
   19830:	add	x0, x0, #0xa60
   19834:	blr	x1
   19838:	mrs	x28, tpidr_el0
   1983c:	ldr	w8, [x28, x0]
   19840:	str	w8, [x19, #172]
   19844:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   19848:	ldr	x1, [x0, #2592]
   1984c:	add	x0, x0, #0xa20
   19850:	blr	x1
   19854:	ldr	x26, [x28, x0]
   19858:	mov	x8, x0
   1985c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   19860:	ldr	x1, [x0, #2624]
   19864:	add	x0, x0, #0xa40
   19868:	blr	x1
   1986c:	ldr	x25, [x28, x0]
   19870:	orr	x11, x20, x2
   19874:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   19878:	cmp	x11, #0x0
   1987c:	str	x9, [x28, x8]
   19880:	cset	w8, ne  // ne = any
   19884:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   19888:	lsl	x24, x8, #12
   1988c:	str	x10, [x28, x0]
   19890:	str	x8, [x19, #144]
   19894:	cbz	x11, 198b8 <mpfr_vasnprintf_aux@@Base+0xc4>
   19898:	mov	x0, x24
   1989c:	mov	x21, x2
   198a0:	bl	cd50 <mpfr_allocate_func@plt>
   198a4:	str	x0, [x19, #248]
   198a8:	strb	wzr, [x0]
   198ac:	ldr	x8, [x19, #248]
   198b0:	mov	x2, x21
   198b4:	str	x8, [x19, #256]
   198b8:	stp	x24, xzr, [x19, #264]
   198bc:	ldp	q1, q0, [x23]
   198c0:	stp	q1, q0, [x19, #192]
   198c4:	ldrb	w24, [x22]
   198c8:	cbz	w24, 1bb3c <mpfr_vasnprintf_aux@@Base+0x2348>
   198cc:	sub	x8, x29, #0xd0
   198d0:	stp	x26, x25, [x19, #152]
   198d4:	add	x25, x8, #0x30
   198d8:	cmp	x20, #0x0
   198dc:	mov	w10, #0x4255                	// #16981
   198e0:	mov	w11, #0x6275                	// #25205
   198e4:	add	x12, x8, #0x18
   198e8:	str	x25, [x19, #112]
   198ec:	add	x25, x8, #0x50
   198f0:	add	x8, x8, #0x68
   198f4:	sub	x9, x29, #0x30
   198f8:	mov	w14, #0x2f                  	// #47
   198fc:	mov	w15, #0xcccd                	// #52429
   19900:	adrp	x3, 59000 <mpfr_free_pool@@Base+0x387c>
   19904:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   19908:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   1990c:	mov	x6, #0x71                  	// #113
   19910:	movk	w10, #0x46, lsl #16
   19914:	movk	w11, #0x66, lsl #16
   19918:	stp	x8, x25, [x19, #96]
   1991c:	csinc	x8, x2, xzr, eq  // eq = none
   19920:	mov	w21, wzr
   19924:	add	x13, x23, #0x18
   19928:	movk	w14, #0x8000, lsl #16
   1992c:	movk	w15, #0xccc, lsl #16
   19930:	mov	w16, #0x7fffffff            	// #2147483647
   19934:	mov	w17, #0x80000001            	// #-2147483647
   19938:	add	x3, x3, #0xbad
   1993c:	add	x0, x0, #0xbb9
   19940:	add	x1, x1, #0xb02
   19944:	mov	w18, #0x1                   	// #1
   19948:	mov	w4, #0x8301                	// #33537
   1994c:	movk	x6, #0x73, lsl #32
   19950:	mov	w7, #0x2                   	// #2
   19954:	mov	w30, #0x3                   	// #3
   19958:	str	x8, [x19, #120]
   1995c:	orr	x8, x9, #0x1
   19960:	add	x9, x9, #0x22
   19964:	add	w10, w10, #0xbf4
   19968:	add	w11, w11, #0xbf4
   1996c:	mov	x27, x22
   19970:	str	x8, [x19, #88]
   19974:	add	x25, x22, #0x2
   19978:	mov	x26, x22
   1997c:	ands	w8, w24, #0xff
   19980:	b.eq	1ba8c <mpfr_vasnprintf_aux@@Base+0x2298>  // b.none
   19984:	cmp	w8, #0x25
   19988:	b.eq	19998 <mpfr_vasnprintf_aux@@Base+0x1a4>  // b.none
   1998c:	ldrb	w24, [x26, #1]!
   19990:	add	x25, x25, #0x1
   19994:	b	1997c <mpfr_vasnprintf_aux@@Base+0x188>
   19998:	ldrb	w8, [x26, #1]
   1999c:	cmp	w8, #0x25
   199a0:	b.ne	199b8 <mpfr_vasnprintf_aux@@Base+0x1c4>  // b.any
   199a4:	mov	x22, x26
   199a8:	ldrb	w24, [x22, #2]!
   199ac:	mov	w21, #0x1                   	// #1
   199b0:	cbnz	w24, 19974 <mpfr_vasnprintf_aux@@Base+0x180>
   199b4:	b	1bc98 <mpfr_vasnprintf_aux@@Base+0x24a4>
   199b8:	stp	w11, w10, [x19, #80]
   199bc:	ldr	w10, [x19, #132]
   199c0:	adrp	x24, 59000 <mpfr_free_pool@@Base+0x387c>
   199c4:	str	x9, [x19, #72]
   199c8:	add	x9, x26, #0x1
   199cc:	and	w10, w10, #0xffffffe0
   199d0:	mov	w22, #0x20                  	// #32
   199d4:	add	x24, x24, #0xaf8
   199d8:	str	w10, [x19, #132]
   199dc:	and	w10, w8, #0xff
   199e0:	sub	w11, w10, #0x27
   199e4:	cmp	w11, #0x9
   199e8:	b.hi	19a20 <mpfr_vasnprintf_aux@@Base+0x22c>  // b.pmore
   199ec:	mov	x5, x13
   199f0:	mov	w13, w22
   199f4:	mov	x22, x12
   199f8:	adr	x10, 19a14 <mpfr_vasnprintf_aux@@Base+0x220>
   199fc:	ldrb	w12, [x24, x11]
   19a00:	add	x10, x10, x12, lsl #2
   19a04:	mov	x12, x22
   19a08:	mov	w22, w13
   19a0c:	mov	x13, x5
   19a10:	br	x10
   19a14:	ldr	w8, [x19, #132]
   19a18:	orr	w8, w8, #0x10
   19a1c:	b	19a5c <mpfr_vasnprintf_aux@@Base+0x268>
   19a20:	cmp	w10, #0x20
   19a24:	b.eq	19a54 <mpfr_vasnprintf_aux@@Base+0x260>  // b.none
   19a28:	cmp	w10, #0x23
   19a2c:	b.ne	19a74 <mpfr_vasnprintf_aux@@Base+0x280>  // b.any
   19a30:	ldr	w8, [x19, #132]
   19a34:	orr	w8, w8, #0x1
   19a38:	b	19a5c <mpfr_vasnprintf_aux@@Base+0x268>
   19a3c:	ldr	w8, [x19, #132]
   19a40:	orr	w8, w8, #0x4
   19a44:	b	19a5c <mpfr_vasnprintf_aux@@Base+0x268>
   19a48:	ldr	w8, [x19, #132]
   19a4c:	orr	w8, w8, #0x8
   19a50:	b	19a5c <mpfr_vasnprintf_aux@@Base+0x268>
   19a54:	ldr	w8, [x19, #132]
   19a58:	orr	w8, w8, #0x2
   19a5c:	str	w8, [x19, #132]
   19a60:	mov	w8, w22
   19a64:	mov	w22, w8
   19a68:	ldrb	w8, [x9, #1]!
   19a6c:	add	x25, x25, #0x1
   19a70:	b	199dc <mpfr_vasnprintf_aux@@Base+0x1e8>
   19a74:	mov	w9, wzr
   19a78:	and	w10, w8, #0xff
   19a7c:	sub	w11, w10, #0x30
   19a80:	cmp	w11, #0xa
   19a84:	b.cs	19ab4 <mpfr_vasnprintf_aux@@Base+0x2c0>  // b.hs, b.nlast
   19a88:	add	w10, w9, w9, lsl #2
   19a8c:	cmp	w9, w15
   19a90:	lsl	w10, w10, #1
   19a94:	csel	w10, w10, w16, lt  // lt = tstop
   19a98:	sub	w9, w14, w8, uxtb
   19a9c:	add	w11, w10, w8, uxtb
   19aa0:	ldrb	w8, [x25], #1
   19aa4:	sub	w11, w11, #0x30
   19aa8:	cmp	w10, w9
   19aac:	csel	w9, w16, w11, gt
   19ab0:	b	19a78 <mpfr_vasnprintf_aux@@Base+0x284>
   19ab4:	cmp	w10, #0x2a
   19ab8:	b.ne	19ae0 <mpfr_vasnprintf_aux@@Base+0x2ec>  // b.any
   19abc:	ldrsw	x8, [x13]
   19ac0:	tbz	w8, #31, 19ae8 <mpfr_vasnprintf_aux@@Base+0x2f4>
   19ac4:	add	w9, w8, #0x8
   19ac8:	cmn	w8, #0x8
   19acc:	str	w9, [x13]
   19ad0:	b.gt	19ae8 <mpfr_vasnprintf_aux@@Base+0x2f4>
   19ad4:	ldr	x9, [x23, #8]
   19ad8:	add	x8, x9, x8
   19adc:	b	19af4 <mpfr_vasnprintf_aux@@Base+0x300>
   19ae0:	sub	x25, x25, #0x1
   19ae4:	b	19af8 <mpfr_vasnprintf_aux@@Base+0x304>
   19ae8:	ldr	x8, [x23]
   19aec:	add	x9, x8, #0x8
   19af0:	str	x9, [x23]
   19af4:	ldr	w9, [x8]
   19af8:	str	w22, [x19, #64]
   19afc:	tbnz	w9, #31, 19b08 <mpfr_vasnprintf_aux@@Base+0x314>
   19b00:	str	w9, [x19, #52]
   19b04:	b	19b24 <mpfr_vasnprintf_aux@@Base+0x330>
   19b08:	ldr	w8, [x19, #132]
   19b0c:	cmp	w9, w17
   19b10:	orr	w8, w8, #0x4
   19b14:	str	w8, [x19, #132]
   19b18:	neg	w8, w9
   19b1c:	str	w8, [x19, #52]
   19b20:	b.le	1b39c <mpfr_vasnprintf_aux@@Base+0x1ba8>
   19b24:	ldrb	w8, [x25]
   19b28:	cmp	w8, #0x2e
   19b2c:	b.ne	19b78 <mpfr_vasnprintf_aux@@Base+0x384>  // b.any
   19b30:	mov	x9, xzr
   19b34:	mov	w10, wzr
   19b38:	add	x8, x25, x9
   19b3c:	ldrb	w8, [x8, #1]
   19b40:	sub	w11, w8, #0x30
   19b44:	cmp	w11, #0xa
   19b48:	b.cs	19b84 <mpfr_vasnprintf_aux@@Base+0x390>  // b.hs, b.nlast
   19b4c:	add	w11, w10, w10, lsl #2
   19b50:	cmp	w10, w15
   19b54:	lsl	w11, w11, #1
   19b58:	csel	w11, w11, w16, lt  // lt = tstop
   19b5c:	sub	w10, w14, w8
   19b60:	add	w8, w11, w8
   19b64:	cmp	w11, w10
   19b68:	sub	w8, w8, #0x30
   19b6c:	csel	w10, w16, w8, gt
   19b70:	add	x9, x9, #0x1
   19b74:	b	19b38 <mpfr_vasnprintf_aux@@Base+0x344>
   19b78:	mov	w9, #0xffffffff            	// #-1
   19b7c:	str	x9, [x19, #56]
   19b80:	b	19be8 <mpfr_vasnprintf_aux@@Base+0x3f4>
   19b84:	cmp	w8, #0x2a
   19b88:	b.ne	19bb0 <mpfr_vasnprintf_aux@@Base+0x3bc>  // b.any
   19b8c:	ldrsw	x8, [x13]
   19b90:	tbz	w8, #31, 19bc4 <mpfr_vasnprintf_aux@@Base+0x3d0>
   19b94:	add	w10, w8, #0x8
   19b98:	cmn	w8, #0x8
   19b9c:	str	w10, [x13]
   19ba0:	b.gt	19bc4 <mpfr_vasnprintf_aux@@Base+0x3d0>
   19ba4:	ldr	x10, [x23, #8]
   19ba8:	add	x8, x10, x8
   19bac:	b	19bd0 <mpfr_vasnprintf_aux@@Base+0x3dc>
   19bb0:	cmp	x9, #0x0
   19bb4:	csinv	w10, w10, wzr, ne  // ne = any
   19bb8:	add	x9, x9, #0x1
   19bbc:	str	x10, [x19, #56]
   19bc0:	b	19be4 <mpfr_vasnprintf_aux@@Base+0x3f0>
   19bc4:	ldr	x8, [x23]
   19bc8:	add	x10, x8, #0x8
   19bcc:	str	x10, [x23]
   19bd0:	ldr	w8, [x8]
   19bd4:	str	x8, [x19, #56]
   19bd8:	add	x8, x25, x9
   19bdc:	ldrb	w8, [x8, #2]
   19be0:	add	x9, x9, #0x2
   19be4:	add	x25, x25, x9
   19be8:	cmp	w8, #0x67
   19bec:	mov	w9, wzr
   19bf0:	b.gt	19c30 <mpfr_vasnprintf_aux@@Base+0x43c>
   19bf4:	mov	w11, w9
   19bf8:	sub	w9, w8, #0x4c
   19bfc:	mov	x5, x3
   19c00:	cmp	w9, #0xe
   19c04:	b.hi	19c84 <mpfr_vasnprintf_aux@@Base+0x490>  // b.pmore
   19c08:	adr	x8, 19c20 <mpfr_vasnprintf_aux@@Base+0x42c>
   19c0c:	ldrb	w10, [x1, x9]
   19c10:	add	x8, x8, x10, lsl #2
   19c14:	mov	w9, w11
   19c18:	mov	w3, w11
   19c1c:	br	x8
   19c20:	mov	w3, wzr
   19c24:	add	x25, x25, #0x1
   19c28:	mov	w9, #0x8                   	// #8
   19c2c:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19c30:	mov	x5, x3
   19c34:	cmp	w8, #0x6b
   19c38:	b.le	19c64 <mpfr_vasnprintf_aux@@Base+0x470>
   19c3c:	cmp	w8, #0x6c
   19c40:	b.eq	19d3c <mpfr_vasnprintf_aux@@Base+0x548>  // b.none
   19c44:	cmp	w8, #0x74
   19c48:	b.eq	19d54 <mpfr_vasnprintf_aux@@Base+0x560>  // b.none
   19c4c:	cmp	w8, #0x7a
   19c50:	b.ne	19d88 <mpfr_vasnprintf_aux@@Base+0x594>  // b.any
   19c54:	mov	w3, wzr
   19c58:	add	x25, x25, #0x1
   19c5c:	mov	w9, #0x6                   	// #6
   19c60:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19c64:	cmp	w8, #0x68
   19c68:	b.eq	19d28 <mpfr_vasnprintf_aux@@Base+0x534>  // b.none
   19c6c:	cmp	w8, #0x6a
   19c70:	b.ne	19d88 <mpfr_vasnprintf_aux@@Base+0x594>  // b.any
   19c74:	mov	w3, wzr
   19c78:	add	x25, x25, #0x1
   19c7c:	mov	w9, #0x5                   	// #5
   19c80:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19c84:	cmp	w8, #0x46
   19c88:	b.ne	19d90 <mpfr_vasnprintf_aux@@Base+0x59c>  // b.any
   19c8c:	mov	w3, wzr
   19c90:	add	x25, x25, #0x1
   19c94:	mov	w9, #0x9                   	// #9
   19c98:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19c9c:	mov	w3, wzr
   19ca0:	add	x25, x25, #0x1
   19ca4:	mov	w9, #0xd                   	// #13
   19ca8:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19cac:	mov	w3, wzr
   19cb0:	add	x25, x25, #0x1
   19cb4:	mov	w9, #0xc                   	// #12
   19cb8:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19cbc:	mov	w3, wzr
   19cc0:	add	x25, x25, #0x1
   19cc4:	mov	w9, #0xa                   	// #10
   19cc8:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19ccc:	mov	w3, wzr
   19cd0:	add	x25, x25, #0x1
   19cd4:	mov	w9, #0xe                   	// #14
   19cd8:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19cdc:	mov	w3, wzr
   19ce0:	add	x25, x25, #0x1
   19ce4:	mov	w9, #0xb                   	// #11
   19ce8:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19cec:	mov	x22, x25
   19cf0:	ldrb	w24, [x22, #1]!
   19cf4:	mov	w3, wzr
   19cf8:	mov	w9, #0xf                   	// #15
   19cfc:	cmp	w24, #0x54
   19d00:	b.gt	19d64 <mpfr_vasnprintf_aux@@Base+0x570>
   19d04:	cmp	w24, #0x2a
   19d08:	b.eq	19d9c <mpfr_vasnprintf_aux@@Base+0x5a8>  // b.none
   19d0c:	cmp	w24, #0x44
   19d10:	b.eq	19dd0 <mpfr_vasnprintf_aux@@Base+0x5dc>  // b.none
   19d14:	cmp	w24, #0x4e
   19d18:	b.ne	19e04 <mpfr_vasnprintf_aux@@Base+0x610>  // b.any
   19d1c:	mov	w3, wzr
   19d20:	add	x25, x25, #0x2
   19d24:	b	19df8 <mpfr_vasnprintf_aux@@Base+0x604>
   19d28:	ldrb	w8, [x25, #1]!
   19d2c:	mov	w3, wzr
   19d30:	cmp	w8, #0x68
   19d34:	cinc	w9, w18, ne  // ne = any
   19d38:	b	19d4c <mpfr_vasnprintf_aux@@Base+0x558>
   19d3c:	ldrb	w8, [x25, #1]!
   19d40:	mov	w3, wzr
   19d44:	cmp	w8, #0x6c
   19d48:	cinc	w9, w30, eq  // eq = none
   19d4c:	cinc	x25, x25, eq  // eq = none
   19d50:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19d54:	mov	w3, wzr
   19d58:	add	x25, x25, #0x1
   19d5c:	mov	w9, #0x7                   	// #7
   19d60:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19d64:	cmp	w24, #0x55
   19d68:	b.eq	19dc4 <mpfr_vasnprintf_aux@@Base+0x5d0>  // b.none
   19d6c:	cmp	w24, #0x59
   19d70:	b.eq	19ddc <mpfr_vasnprintf_aux@@Base+0x5e8>  // b.none
   19d74:	cmp	w24, #0x5a
   19d78:	b.ne	19e04 <mpfr_vasnprintf_aux@@Base+0x610>  // b.any
   19d7c:	add	x25, x25, #0x2
   19d80:	mov	w3, #0x1                   	// #1
   19d84:	b	19df8 <mpfr_vasnprintf_aux@@Base+0x604>
   19d88:	mov	w3, w9
   19d8c:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19d90:	mov	w9, w11
   19d94:	mov	w3, w11
   19d98:	b	19dfc <mpfr_vasnprintf_aux@@Base+0x608>
   19d9c:	ldrsw	x8, [x13]
   19da0:	add	x25, x25, #0x2
   19da4:	tbz	w8, #31, 19de8 <mpfr_vasnprintf_aux@@Base+0x5f4>
   19da8:	add	w9, w8, #0x8
   19dac:	cmn	w8, #0x8
   19db0:	str	w9, [x13]
   19db4:	b.gt	19de8 <mpfr_vasnprintf_aux@@Base+0x5f4>
   19db8:	ldr	x9, [x23, #8]
   19dbc:	add	x8, x9, x8
   19dc0:	b	19df4 <mpfr_vasnprintf_aux@@Base+0x600>
   19dc4:	add	x25, x25, #0x2
   19dc8:	mov	w3, #0x2                   	// #2
   19dcc:	b	19df8 <mpfr_vasnprintf_aux@@Base+0x604>
   19dd0:	add	x25, x25, #0x2
   19dd4:	mov	w3, #0x3                   	// #3
   19dd8:	b	19df8 <mpfr_vasnprintf_aux@@Base+0x604>
   19ddc:	add	x25, x25, #0x2
   19de0:	mov	w3, #0x4                   	// #4
   19de4:	b	19df8 <mpfr_vasnprintf_aux@@Base+0x604>
   19de8:	ldr	x8, [x23]
   19dec:	add	x9, x8, #0x8
   19df0:	str	x9, [x23]
   19df4:	ldr	w3, [x8]
   19df8:	mov	w9, #0xf                   	// #15
   19dfc:	ldrb	w24, [x25]
   19e00:	mov	x22, x25
   19e04:	sub	w8, w24, #0x58
   19e08:	mov	w25, w9
   19e0c:	cmp	w8, #0x20
   19e10:	b.hi	19e54 <mpfr_vasnprintf_aux@@Base+0x660>  // b.pmore
   19e14:	adrp	x11, 59000 <mpfr_free_pool@@Base+0x387c>
   19e18:	add	x11, x11, #0xb11
   19e1c:	adr	x9, 19e30 <mpfr_vasnprintf_aux@@Base+0x63c>
   19e20:	ldrb	w10, [x11, x8]
   19e24:	add	x9, x9, x10, lsl #2
   19e28:	ldp	w11, w10, [x19, #80]
   19e2c:	br	x9
   19e30:	cmp	w25, #0xe
   19e34:	b.hi	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>  // b.pmore
   19e38:	mov	w8, w25
   19e3c:	lsl	w8, w18, w25
   19e40:	mov	w9, #0x7cff                	// #31999
   19e44:	tst	w8, w9
   19e48:	mov	w9, w25
   19e4c:	b.ne	19e84 <mpfr_vasnprintf_aux@@Base+0x690>  // b.any
   19e50:	b	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>
   19e54:	ldp	w11, w10, [x19, #80]
   19e58:	sub	w8, w24, #0x45
   19e5c:	cmp	w8, #0x3
   19e60:	b.cc	19e6c <mpfr_vasnprintf_aux@@Base+0x678>  // b.lo, b.ul, b.last
   19e64:	cmp	w24, #0x41
   19e68:	b.ne	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>  // b.any
   19e6c:	cmp	w25, #0xf
   19e70:	b.hi	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>  // b.pmore
   19e74:	lsl	w8, w18, w25
   19e78:	mov	w9, w25
   19e7c:	tst	w8, w4
   19e80:	b.eq	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>  // b.none
   19e84:	cmp	w24, #0x6e
   19e88:	add	x22, x22, #0x1
   19e8c:	b.eq	19f08 <mpfr_vasnprintf_aux@@Base+0x714>  // b.none
   19e90:	cmp	w9, #0xf
   19e94:	b.ne	1a02c <mpfr_vasnprintf_aux@@Base+0x838>  // b.any
   19e98:	sub	w25, w24, #0x41
   19e9c:	cmp	w25, #0x26
   19ea0:	b.hi	19eb0 <mpfr_vasnprintf_aux@@Base+0x6bc>  // b.pmore
   19ea4:	lsl	x8, x18, x25
   19ea8:	tst	x8, x6
   19eac:	b.ne	1a078 <mpfr_vasnprintf_aux@@Base+0x884>  // b.any
   19eb0:	ldrb	w24, [x22]
   19eb4:	ldr	x9, [x19, #72]
   19eb8:	mov	x3, x5
   19ebc:	cbnz	w24, 19974 <mpfr_vasnprintf_aux@@Base+0x180>
   19ec0:	b	1ba90 <mpfr_vasnprintf_aux@@Base+0x229c>
   19ec4:	mov	w9, w25
   19ec8:	cbz	w25, 19e84 <mpfr_vasnprintf_aux@@Base+0x690>
   19ecc:	cmp	w9, #0x3
   19ed0:	b.eq	19e84 <mpfr_vasnprintf_aux@@Base+0x690>  // b.none
   19ed4:	b	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>
   19ed8:	mov	w9, w25
   19edc:	cmp	w25, #0xf
   19ee0:	b.eq	19efc <mpfr_vasnprintf_aux@@Base+0x708>  // b.none
   19ee4:	mov	w24, #0x62                  	// #98
   19ee8:	b	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>
   19eec:	mov	w9, w25
   19ef0:	cbz	w25, 19efc <mpfr_vasnprintf_aux@@Base+0x708>
   19ef4:	mov	w24, #0x70                  	// #112
   19ef8:	b	19eb4 <mpfr_vasnprintf_aux@@Base+0x6c0>
   19efc:	add	x22, x22, #0x1
   19f00:	b	19e90 <mpfr_vasnprintf_aux@@Base+0x69c>
   19f04:	add	x22, x22, #0x1
   19f08:	ldrsw	x8, [x13]
   19f0c:	tbz	w8, #31, 19f2c <mpfr_vasnprintf_aux@@Base+0x738>
   19f10:	add	w9, w8, #0x8
   19f14:	cmn	w8, #0x8
   19f18:	str	w9, [x13]
   19f1c:	b.gt	19f2c <mpfr_vasnprintf_aux@@Base+0x738>
   19f20:	ldr	x9, [x23, #8]
   19f24:	add	x8, x9, x8
   19f28:	b	19f38 <mpfr_vasnprintf_aux@@Base+0x744>
   19f2c:	ldr	x8, [x23]
   19f30:	add	x9, x8, #0x8
   19f34:	str	x9, [x23]
   19f38:	ldr	x0, [x8]
   19f3c:	adrp	x11, 59000 <mpfr_free_pool@@Base+0x387c>
   19f40:	add	x11, x11, #0xb8e
   19f44:	sub	x10, x26, x27
   19f48:	str	x12, [x19, #40]
   19f4c:	cbz	w21, 1a09c <mpfr_vasnprintf_aux@@Base+0x8a8>
   19f50:	add	x1, x10, #0x1
   19f54:	cmp	x1, #0x4, lsl #12
   19f58:	mov	x24, x13
   19f5c:	mov	x21, x2
   19f60:	stur	xzr, [x29, #-48]
   19f64:	str	w3, [x19, #32]
   19f68:	str	x0, [x19, #64]
   19f6c:	b.hi	1b490 <mpfr_vasnprintf_aux@@Base+0x1c9c>  // b.pmore
   19f70:	add	x9, x1, #0xf
   19f74:	mov	x8, sp
   19f78:	and	x9, x9, #0xfffffffffffffff0
   19f7c:	sub	x26, x8, x9
   19f80:	mov	sp, x26
   19f84:	mov	x0, x26
   19f88:	mov	x1, x27
   19f8c:	mov	x2, x10
   19f90:	mov	x27, x10
   19f94:	bl	cb20 <strncpy@plt>
   19f98:	strb	wzr, [x26, x27]
   19f9c:	ldp	q0, q1, [x19, #192]
   19fa0:	sub	x0, x29, #0x48
   19fa4:	sub	x2, x29, #0xd0
   19fa8:	mov	x1, x26
   19fac:	stp	q0, q1, [x29, #-208]
   19fb0:	bl	c0f0 <__gmp_vasprintf@plt>
   19fb4:	tbnz	w0, #31, 1bcbc <mpfr_vasnprintf_aux@@Base+0x24c8>
   19fb8:	ldur	x1, [x29, #-72]
   19fbc:	mov	w2, w0
   19fc0:	add	x0, x19, #0xf8
   19fc4:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   19fc8:	ldur	x0, [x29, #-72]
   19fcc:	bl	c8e0 <mpfr_free_str@plt>
   19fd0:	ldur	x0, [x29, #-48]
   19fd4:	cbnz	x0, 1b4a8 <mpfr_vasnprintf_aux@@Base+0x1cb4>
   19fd8:	ldr	w3, [x19, #32]
   19fdc:	ldr	x0, [x19, #64]
   19fe0:	mov	w14, #0x2f                  	// #47
   19fe4:	mov	w15, #0xcccd                	// #52429
   19fe8:	adrp	x5, 59000 <mpfr_free_pool@@Base+0x387c>
   19fec:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   19ff0:	adrp	x11, 59000 <mpfr_free_pool@@Base+0x387c>
   19ff4:	mov	x2, x21
   19ff8:	mov	x13, x24
   19ffc:	movk	w14, #0x8000, lsl #16
   1a000:	movk	w15, #0xccc, lsl #16
   1a004:	mov	w16, #0x7fffffff            	// #2147483647
   1a008:	mov	w17, #0x80000001            	// #-2147483647
   1a00c:	add	x5, x5, #0xbad
   1a010:	add	x1, x1, #0xb02
   1a014:	mov	w4, #0x8301                	// #33537
   1a018:	add	x11, x11, #0xb8e
   1a01c:	mov	w7, #0x2                   	// #2
   1a020:	mov	w30, #0x3                   	// #3
   1a024:	mov	w8, w25
   1a028:	b	1a118 <mpfr_vasnprintf_aux@@Base+0x924>
   1a02c:	sub	w8, w9, #0x1
   1a030:	cmp	w8, #0xd
   1a034:	str	x12, [x19, #40]
   1a038:	b.hi	1a878 <mpfr_vasnprintf_aux@@Base+0x1084>  // b.pmore
   1a03c:	adrp	x11, 59000 <mpfr_free_pool@@Base+0x387c>
   1a040:	add	x11, x11, #0xb32
   1a044:	adr	x9, 1a054 <mpfr_vasnprintf_aux@@Base+0x860>
   1a048:	ldrh	w10, [x11, x8, lsl #1]
   1a04c:	add	x9, x9, x10, lsl #2
   1a050:	br	x9
   1a054:	ldr	w8, [x13]
   1a058:	mov	x18, x5
   1a05c:	mov	x10, x13
   1a060:	tbz	w8, #31, 1a9a8 <mpfr_vasnprintf_aux@@Base+0x11b4>
   1a064:	add	w9, w8, #0x8
   1a068:	cmn	w8, #0x7
   1a06c:	str	w9, [x10]
   1a070:	b.ge	1a9a8 <mpfr_vasnprintf_aux@@Base+0x11b4>  // b.tcont
   1a074:	b	1a9b4 <mpfr_vasnprintf_aux@@Base+0x11c0>
   1a078:	ldrsw	x8, [x13]
   1a07c:	tbz	w8, #31, 1a140 <mpfr_vasnprintf_aux@@Base+0x94c>
   1a080:	add	w9, w8, #0x8
   1a084:	cmn	w8, #0x8
   1a088:	str	w9, [x13]
   1a08c:	b.gt	1a140 <mpfr_vasnprintf_aux@@Base+0x94c>
   1a090:	ldr	x9, [x23, #8]
   1a094:	add	x8, x9, x8
   1a098:	b	1a14c <mpfr_vasnprintf_aux@@Base+0x958>
   1a09c:	mov	w8, w25
   1a0a0:	cmp	x27, x26
   1a0a4:	b.eq	1a118 <mpfr_vasnprintf_aux@@Base+0x924>  // b.none
   1a0a8:	str	x0, [x19, #64]
   1a0ac:	add	x0, x19, #0xf8
   1a0b0:	mov	x26, x1
   1a0b4:	mov	x1, x27
   1a0b8:	mov	x21, x2
   1a0bc:	mov	x2, x10
   1a0c0:	mov	x24, x13
   1a0c4:	mov	x27, x11
   1a0c8:	str	w3, [x19, #32]
   1a0cc:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1a0d0:	ldr	x0, [x19, #64]
   1a0d4:	ldr	w3, [x19, #32]
   1a0d8:	adrp	x5, 59000 <mpfr_free_pool@@Base+0x387c>
   1a0dc:	mov	w15, #0xcccd                	// #52429
   1a0e0:	mov	w14, #0x2f                  	// #47
   1a0e4:	mov	w8, w25
   1a0e8:	mov	w30, #0x3                   	// #3
   1a0ec:	mov	w7, #0x2                   	// #2
   1a0f0:	mov	x11, x27
   1a0f4:	mov	w4, #0x8301                	// #33537
   1a0f8:	mov	x1, x26
   1a0fc:	add	x5, x5, #0xbad
   1a100:	mov	w17, #0x80000001            	// #-2147483647
   1a104:	mov	w16, #0x7fffffff            	// #2147483647
   1a108:	movk	w15, #0xccc, lsl #16
   1a10c:	movk	w14, #0x8000, lsl #16
   1a110:	mov	x13, x24
   1a114:	mov	x2, x21
   1a118:	sub	w8, w8, #0x1
   1a11c:	cmp	w8, #0xe
   1a120:	b.hi	1a498 <mpfr_vasnprintf_aux@@Base+0xca4>  // b.pmore
   1a124:	adr	x9, 1a134 <mpfr_vasnprintf_aux@@Base+0x940>
   1a128:	ldrb	w10, [x11, x8]
   1a12c:	add	x9, x9, x10, lsl #2
   1a130:	br	x9
   1a134:	ldr	x8, [x19, #272]
   1a138:	str	x8, [x0]
   1a13c:	b	1aa98 <mpfr_vasnprintf_aux@@Base+0x12a4>
   1a140:	ldr	x8, [x23]
   1a144:	add	x9, x8, #0x8
   1a148:	str	x9, [x23]
   1a14c:	ldr	x8, [x8]
   1a150:	sub	x10, x26, x27
   1a154:	str	x2, [x19, #8]
   1a158:	str	w3, [x19, #32]
   1a15c:	stp	x13, x8, [x19, #16]
   1a160:	cbz	w21, 1a1ec <mpfr_vasnprintf_aux@@Base+0x9f8>
   1a164:	add	x1, x10, #0x1
   1a168:	cmp	x1, #0x4, lsl #12
   1a16c:	mov	x26, x12
   1a170:	stur	xzr, [x29, #-48]
   1a174:	b.hi	1b580 <mpfr_vasnprintf_aux@@Base+0x1d8c>  // b.pmore
   1a178:	add	x9, x1, #0xf
   1a17c:	mov	x8, sp
   1a180:	and	x9, x9, #0xfffffffffffffff0
   1a184:	sub	x21, x8, x9
   1a188:	mov	sp, x21
   1a18c:	mov	x0, x21
   1a190:	mov	x1, x27
   1a194:	mov	x2, x10
   1a198:	mov	x27, x10
   1a19c:	bl	cb20 <strncpy@plt>
   1a1a0:	strb	wzr, [x21, x27]
   1a1a4:	ldp	q0, q1, [x19, #192]
   1a1a8:	sub	x0, x29, #0x48
   1a1ac:	sub	x2, x29, #0xd0
   1a1b0:	mov	x1, x21
   1a1b4:	stp	q0, q1, [x29, #-208]
   1a1b8:	bl	c0f0 <__gmp_vasprintf@plt>
   1a1bc:	tbnz	w0, #31, 1bcbc <mpfr_vasnprintf_aux@@Base+0x24c8>
   1a1c0:	ldur	x1, [x29, #-72]
   1a1c4:	mov	w2, w0
   1a1c8:	add	x0, x19, #0xf8
   1a1cc:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1a1d0:	ldur	x0, [x29, #-72]
   1a1d4:	bl	c8e0 <mpfr_free_str@plt>
   1a1d8:	ldur	x0, [x29, #-48]
   1a1dc:	cbnz	x0, 1b598 <mpfr_vasnprintf_aux@@Base+0x1da4>
   1a1e0:	mov	w7, #0x2                   	// #2
   1a1e4:	mov	x12, x26
   1a1e8:	b	1a210 <mpfr_vasnprintf_aux@@Base+0xa1c>
   1a1ec:	cmp	x27, x26
   1a1f0:	b.eq	1a210 <mpfr_vasnprintf_aux@@Base+0xa1c>  // b.none
   1a1f4:	add	x0, x19, #0xf8
   1a1f8:	mov	x1, x27
   1a1fc:	mov	x2, x10
   1a200:	mov	x26, x12
   1a204:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1a208:	mov	x12, x26
   1a20c:	mov	w7, #0x2                   	// #2
   1a210:	ldrh	w8, [x19, #244]
   1a214:	ldrb	w9, [x19, #246]
   1a218:	ldr	w10, [x19, #64]
   1a21c:	ldp	q0, q1, [x23]
   1a220:	sturh	w8, [x29, #-212]
   1a224:	sturb	w9, [x29, #-210]
   1a228:	ldrh	w8, [x19, #240]
   1a22c:	ldr	w9, [x19, #132]
   1a230:	and	w10, w10, #0xff
   1a234:	cmp	w10, #0x30
   1a238:	strh	w8, [x19, #180]
   1a23c:	cset	w8, eq  // eq = none
   1a240:	tst	w9, #0x4
   1a244:	csel	w26, w8, w7, eq  // eq = none
   1a248:	ldr	x8, [x19, #112]
   1a24c:	stur	xzr, [x29, #-200]
   1a250:	sturb	wzr, [x29, #-192]
   1a254:	stur	wzr, [x29, #-136]
   1a258:	stur	w26, [x29, #-208]
   1a25c:	stp	xzr, xzr, [x12]
   1a260:	strb	wzr, [x12, #16]
   1a264:	stp	xzr, xzr, [x8]
   1a268:	stur	xzr, [x8, #13]
   1a26c:	ldr	x8, [x19, #104]
   1a270:	ldr	w10, [x19, #236]
   1a274:	mov	w0, #0x10                  	// #16
   1a278:	stp	q0, q1, [x19, #192]
   1a27c:	stp	xzr, xzr, [x8]
   1a280:	str	wzr, [x8, #16]
   1a284:	ldr	x8, [x19, #96]
   1a288:	str	w10, [x19, #176]
   1a28c:	str	x12, [x19, #40]
   1a290:	stp	xzr, xzr, [x8]
   1a294:	bl	cd50 <mpfr_allocate_func@plt>
   1a298:	stur	x0, [x29, #-88]
   1a29c:	stp	xzr, xzr, [x0]
   1a2a0:	ldr	x8, [x19, #24]
   1a2a4:	cmp	w25, #0x7
   1a2a8:	mov	w10, #0x71                  	// #113
   1a2ac:	mov	x11, #0x4                   	// #4
   1a2b0:	ldr	x8, [x8, #16]
   1a2b4:	cset	w9, cc  // cc = lo, ul, last
   1a2b8:	lsr	w10, w10, w25
   1a2bc:	movk	x11, #0x8000, lsl #48
   1a2c0:	cmp	x8, x11
   1a2c4:	and	w27, w10, w9
   1a2c8:	b.lt	1b4b0 <mpfr_vasnprintf_aux@@Base+0x1cbc>  // b.tstop
   1a2cc:	mov	w10, #0x1                   	// #1
   1a2d0:	b.eq	1b51c <mpfr_vasnprintf_aux@@Base+0x1d28>  // b.none
   1a2d4:	ldr	w26, [x19, #132]
   1a2d8:	cmp	w25, #0x25
   1a2dc:	b.hi	1a748 <mpfr_vasnprintf_aux@@Base+0xf54>  // b.pmore
   1a2e0:	mov	x11, #0x1                   	// #1
   1a2e4:	lsl	x9, x10, x25
   1a2e8:	movk	x11, #0x3, lsl #32
   1a2ec:	tst	x9, x11
   1a2f0:	b.ne	1a38c <mpfr_vasnprintf_aux@@Base+0xb98>  // b.any
   1a2f4:	lsl	x9, x10, x25
   1a2f8:	tst	x9, #0x1000000010
   1a2fc:	b.ne	1a3dc <mpfr_vasnprintf_aux@@Base+0xbe8>  // b.any
   1a300:	lsl	x9, x10, x25
   1a304:	tst	x9, #0x2000000020
   1a308:	b.eq	1a748 <mpfr_vasnprintf_aux@@Base+0xf54>  // b.none
   1a30c:	ldurb	w8, [x29, #-210]
   1a310:	ldr	x11, [x19, #56]
   1a314:	ldurh	w9, [x29, #-212]
   1a318:	ldr	x10, [x19, #88]
   1a31c:	ldr	w21, [x19, #52]
   1a320:	cmp	w11, #0x0
   1a324:	sturb	w26, [x29, #-48]
   1a328:	strb	w8, [x10, #2]
   1a32c:	strh	w9, [x10]
   1a330:	mov	w10, #0x6                   	// #6
   1a334:	csel	w10, w10, w11, lt  // lt = tstop
   1a338:	stp	w21, w10, [x29, #-44]
   1a33c:	ldr	x10, [x19, #120]
   1a340:	ldr	w8, [x19, #176]
   1a344:	ldrh	w9, [x19, #180]
   1a348:	ldr	x1, [x19, #24]
   1a34c:	stur	x10, [x29, #-32]
   1a350:	mov	w10, #0xf                   	// #15
   1a354:	stur	w10, [x29, #-24]
   1a358:	ldr	w10, [x19, #32]
   1a35c:	sub	x0, x29, #0xd0
   1a360:	sub	x2, x29, #0x30
   1a364:	mov	x3, xzr
   1a368:	stur	w10, [x29, #-20]
   1a36c:	ldr	w10, [x19, #64]
   1a370:	sturb	w24, [x29, #-16]
   1a374:	sturb	w10, [x29, #-15]
   1a378:	ldr	x10, [x19, #72]
   1a37c:	strh	w9, [x10, #4]
   1a380:	str	w8, [x10]
   1a384:	bl	1bfb8 <mpfr_vasnprintf_aux@@Base+0x27c4>
   1a388:	b	1a44c <mpfr_vasnprintf_aux@@Base+0xc58>
   1a38c:	ldurh	w8, [x29, #-212]
   1a390:	ldurb	w9, [x29, #-210]
   1a394:	ldr	w10, [x19, #176]
   1a398:	ldrh	w11, [x19, #180]
   1a39c:	sturh	w8, [x29, #-52]
   1a3a0:	ldr	x8, [x19, #24]
   1a3a4:	sturb	w9, [x29, #-50]
   1a3a8:	str	w10, [x19, #184]
   1a3ac:	strh	w11, [x19, #188]
   1a3b0:	ldr	w8, [x8, #8]
   1a3b4:	tbnz	w8, #31, 1a578 <mpfr_vasnprintf_aux@@Base+0xd84>
   1a3b8:	mov	w8, #0xa                   	// #10
   1a3bc:	mov	w25, #0x1                   	// #1
   1a3c0:	tst	w26, w8
   1a3c4:	b.eq	1a584 <mpfr_vasnprintf_aux@@Base+0xd90>  // b.none
   1a3c8:	tst	w26, #0x8
   1a3cc:	mov	w8, #0x2b                  	// #43
   1a3d0:	mov	w9, #0x20                  	// #32
   1a3d4:	csel	w8, w9, w8, eq  // eq = none
   1a3d8:	b	1a580 <mpfr_vasnprintf_aux@@Base+0xd8c>
   1a3dc:	ldurb	w8, [x29, #-210]
   1a3e0:	ldurh	w9, [x29, #-212]
   1a3e4:	ldr	x10, [x19, #88]
   1a3e8:	sturb	w26, [x29, #-48]
   1a3ec:	ldr	w21, [x19, #52]
   1a3f0:	ldr	x1, [x19, #24]
   1a3f4:	strb	w8, [x10, #2]
   1a3f8:	strh	w9, [x10]
   1a3fc:	ldr	x10, [x19, #56]
   1a400:	ldr	w8, [x19, #176]
   1a404:	ldrh	w9, [x19, #180]
   1a408:	sub	x0, x29, #0xd0
   1a40c:	stp	w21, w10, [x29, #-44]
   1a410:	ldr	x10, [x19, #120]
   1a414:	sub	x2, x29, #0x30
   1a418:	mov	x3, xzr
   1a41c:	sturb	w24, [x29, #-16]
   1a420:	stur	x10, [x29, #-32]
   1a424:	mov	w10, #0xf                   	// #15
   1a428:	stur	w10, [x29, #-24]
   1a42c:	ldr	w10, [x19, #32]
   1a430:	stur	w10, [x29, #-20]
   1a434:	ldr	w10, [x19, #64]
   1a438:	sturb	w10, [x29, #-15]
   1a43c:	ldr	x10, [x19, #72]
   1a440:	strh	w9, [x10, #4]
   1a444:	str	w8, [x10]
   1a448:	bl	1c5b8 <mpfr_vasnprintf_aux@@Base+0x2dc4>
   1a44c:	cmn	w0, #0x1
   1a450:	b.ne	1b0bc <mpfr_vasnprintf_aux@@Base+0x18c8>  // b.any
   1a454:	b	1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>
   1a458:	ldrsw	x8, [x13]
   1a45c:	mov	x26, x1
   1a460:	mov	x25, x5
   1a464:	mov	x21, x2
   1a468:	mov	x24, x13
   1a46c:	tbz	w8, #31, 1a528 <mpfr_vasnprintf_aux@@Base+0xd34>
   1a470:	add	w9, w8, #0x8
   1a474:	cmn	w8, #0x8
   1a478:	str	w9, [x24]
   1a47c:	b.gt	1a528 <mpfr_vasnprintf_aux@@Base+0xd34>
   1a480:	ldr	x9, [x23, #8]
   1a484:	add	x8, x9, x8
   1a488:	b	1a534 <mpfr_vasnprintf_aux@@Base+0xd40>
   1a48c:	ldr	x8, [x19, #272]
   1a490:	strb	w8, [x0]
   1a494:	b	1aa98 <mpfr_vasnprintf_aux@@Base+0x12a4>
   1a498:	ldr	x8, [x19, #272]
   1a49c:	str	w8, [x0]
   1a4a0:	b	1aa98 <mpfr_vasnprintf_aux@@Base+0x12a4>
   1a4a4:	mov	x26, x1
   1a4a8:	ldr	x1, [x19, #272]
   1a4ac:	mov	x25, x5
   1a4b0:	mov	x21, x2
   1a4b4:	mov	x24, x13
   1a4b8:	bl	bd60 <__gmpz_set_ui@plt>
   1a4bc:	b	1aa64 <mpfr_vasnprintf_aux@@Base+0x1270>
   1a4c0:	mov	x26, x1
   1a4c4:	ldr	x1, [x19, #272]
   1a4c8:	mov	x21, x2
   1a4cc:	mov	x2, xzr
   1a4d0:	mov	x25, x5
   1a4d4:	mov	x24, x13
   1a4d8:	bl	c640 <mpfr_set_ui_2exp@plt>
   1a4dc:	b	1aa64 <mpfr_vasnprintf_aux@@Base+0x1270>
   1a4e0:	ldr	x8, [x19, #272]
   1a4e4:	strh	w8, [x0]
   1a4e8:	b	1aa98 <mpfr_vasnprintf_aux@@Base+0x12a4>
   1a4ec:	mov	x26, x1
   1a4f0:	ldr	x1, [x19, #272]
   1a4f4:	mov	x25, x5
   1a4f8:	mov	x21, x2
   1a4fc:	mov	x24, x13
   1a500:	bl	c220 <__gmpf_set_ui@plt>
   1a504:	b	1aa64 <mpfr_vasnprintf_aux@@Base+0x1270>
   1a508:	mov	x26, x1
   1a50c:	ldr	x1, [x19, #272]
   1a510:	mov	x21, x2
   1a514:	mov	w2, #0x1                   	// #1
   1a518:	mov	x25, x5
   1a51c:	mov	x24, x13
   1a520:	bl	c5b0 <__gmpq_set_ui@plt>
   1a524:	b	1aa64 <mpfr_vasnprintf_aux@@Base+0x1270>
   1a528:	ldr	x8, [x23]
   1a52c:	add	x9, x8, #0x8
   1a530:	str	x9, [x23]
   1a534:	ldr	x8, [x8]
   1a538:	tbnz	x8, #63, 1aa08 <mpfr_vasnprintf_aux@@Base+0x1214>
   1a53c:	mov	w14, #0x2f                  	// #47
   1a540:	mov	w15, #0xcccd                	// #52429
   1a544:	mov	x2, x21
   1a548:	mov	x13, x24
   1a54c:	movk	w14, #0x8000, lsl #16
   1a550:	movk	w15, #0xccc, lsl #16
   1a554:	mov	w16, #0x7fffffff            	// #2147483647
   1a558:	mov	w17, #0x80000001            	// #-2147483647
   1a55c:	mov	x5, x25
   1a560:	mov	x1, x26
   1a564:	mov	w4, #0x8301                	// #33537
   1a568:	mov	w7, #0x2                   	// #2
   1a56c:	mov	w30, #0x3                   	// #3
   1a570:	cbnz	x8, 1aa40 <mpfr_vasnprintf_aux@@Base+0x124c>
   1a574:	b	1aa98 <mpfr_vasnprintf_aux@@Base+0x12a4>
   1a578:	mov	w25, #0x1                   	// #1
   1a57c:	mov	w8, #0x2d                  	// #45
   1a580:	sturb	w8, [x29, #-192]
   1a584:	orr	w8, w24, #0x20
   1a588:	cmp	w8, #0x61
   1a58c:	b.ne	1a5e8 <mpfr_vasnprintf_aux@@Base+0xdf4>  // b.any
   1a590:	mov	w8, #0x2                   	// #2
   1a594:	mov	w0, #0x3                   	// #3
   1a598:	stur	x8, [x29, #-176]
   1a59c:	bl	cd50 <mpfr_allocate_func@plt>
   1a5a0:	mov	w8, #0x30                  	// #48
   1a5a4:	strb	w8, [x0]
   1a5a8:	cmp	w24, #0x41
   1a5ac:	mov	w8, #0x78                  	// #120
   1a5b0:	mov	w9, #0x58                  	// #88
   1a5b4:	csel	w8, w9, w8, eq  // eq = none
   1a5b8:	strb	w8, [x0, #1]
   1a5bc:	strb	wzr, [x0, #2]
   1a5c0:	ldur	x8, [x29, #-88]
   1a5c4:	mov	x27, x0
   1a5c8:	mov	x21, x8
   1a5cc:	ldr	x8, [x8, #8]
   1a5d0:	cbnz	x8, 1a5c8 <mpfr_vasnprintf_aux@@Base+0xdd4>
   1a5d4:	mov	w0, #0x10                  	// #16
   1a5d8:	bl	cd50 <mpfr_allocate_func@plt>
   1a5dc:	str	x0, [x21, #8]
   1a5e0:	stp	x27, xzr, [x0]
   1a5e4:	stur	x27, [x29, #-184]
   1a5e8:	ldr	x13, [x19, #56]
   1a5ec:	ldr	w14, [x19, #32]
   1a5f0:	cmp	w24, #0x62
   1a5f4:	stur	x25, [x29, #-152]
   1a5f8:	cbz	w13, 1a6e4 <mpfr_vasnprintf_aux@@Base+0xef0>
   1a5fc:	ldurb	w9, [x29, #-50]
   1a600:	ldurh	w10, [x29, #-52]
   1a604:	ldr	x12, [x19, #88]
   1a608:	sturb	w26, [x29, #-48]
   1a60c:	sxtw	x8, w13
   1a610:	ldr	w11, [x19, #184]
   1a614:	strb	w9, [x12, #2]
   1a618:	strh	w10, [x12]
   1a61c:	mov	w10, #0x2                   	// #2
   1a620:	mov	w12, #0x10                  	// #16
   1a624:	csel	w1, w10, w12, eq  // eq = none
   1a628:	cmp	w13, #0x0
   1a62c:	csinc	x2, xzr, x8, lt  // lt = tstop
   1a630:	ldr	w8, [x19, #52]
   1a634:	ldrh	w9, [x19, #188]
   1a638:	ldr	x3, [x19, #24]
   1a63c:	sub	x0, x29, #0x48
   1a640:	stp	w8, w13, [x29, #-44]
   1a644:	ldr	x8, [x19, #120]
   1a648:	sub	x4, x29, #0x30
   1a64c:	sturb	w24, [x29, #-16]
   1a650:	stur	x8, [x29, #-32]
   1a654:	mov	w8, #0xf                   	// #15
   1a658:	stp	w8, w14, [x29, #-24]
   1a65c:	ldr	w8, [x19, #64]
   1a660:	sturb	w8, [x29, #-15]
   1a664:	ldr	x8, [x19, #72]
   1a668:	strh	w9, [x8, #4]
   1a66c:	str	w11, [x8]
   1a670:	bl	1c86c <mpfr_vasnprintf_aux@@Base+0x3078>
   1a674:	ldur	x8, [x29, #-88]
   1a678:	mov	x27, x0
   1a67c:	mov	x21, x8
   1a680:	ldr	x8, [x8, #8]
   1a684:	cbnz	x8, 1a67c <mpfr_vasnprintf_aux@@Base+0xe88>
   1a688:	mov	w0, #0x10                  	// #16
   1a68c:	bl	cd50 <mpfr_allocate_func@plt>
   1a690:	str	x0, [x21, #8]
   1a694:	stp	x27, xzr, [x0]
   1a698:	ldr	x8, [x19, #24]
   1a69c:	ldr	w9, [x8, #8]
   1a6a0:	ldur	x8, [x29, #-72]
   1a6a4:	cmp	w9, #0x0
   1a6a8:	cinc	x27, x27, lt  // lt = tstop
   1a6ac:	cmp	w24, #0x62
   1a6b0:	stur	x27, [x29, #-160]
   1a6b4:	b.ne	1a864 <mpfr_vasnprintf_aux@@Base+0x1070>  // b.any
   1a6b8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   1a6bc:	cmp	x8, x9
   1a6c0:	b.ne	1ac64 <mpfr_vasnprintf_aux@@Base+0x1470>  // b.any
   1a6c4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1a6c8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1a6cc:	mov	w1, #0x428                 	// #1064
   1a6d0:	add	x0, x0, #0xbad
   1a6d4:	add	x2, x2, #0xc90
   1a6d8:	bl	cb90 <mpfr_assert_fail@plt>
   1a6dc:	ldur	x8, [x29, #-72]
   1a6e0:	b	1ac64 <mpfr_vasnprintf_aux@@Base+0x1470>
   1a6e4:	mov	w8, #0x4                   	// #4
   1a6e8:	csinc	x8, x8, xzr, ne  // ne = any
   1a6ec:	cmp	w14, #0x1
   1a6f0:	b.eq	1ac1c <mpfr_vasnprintf_aux@@Base+0x1428>  // b.none
   1a6f4:	mov	w10, w14
   1a6f8:	cmp	w14, #0x2
   1a6fc:	b.eq	1abc8 <mpfr_vasnprintf_aux@@Base+0x13d4>  // b.none
   1a700:	mov	w14, w10
   1a704:	cmp	w10, #0x3
   1a708:	b.ne	1abd8 <mpfr_vasnprintf_aux@@Base+0x13e4>  // b.any
   1a70c:	ldr	x9, [x19, #24]
   1a710:	ldr	w9, [x9, #8]
   1a714:	cmp	w9, #0x0
   1a718:	b.gt	1ac1c <mpfr_vasnprintf_aux@@Base+0x1428>
   1a71c:	b	1abd8 <mpfr_vasnprintf_aux@@Base+0x13e4>
   1a720:	ldr	w8, [x13]
   1a724:	mov	x18, x5
   1a728:	tbz	w8, #31, 1a73c <mpfr_vasnprintf_aux@@Base+0xf48>
   1a72c:	add	w9, w8, #0x8
   1a730:	cmn	w8, #0x7
   1a734:	str	w9, [x13]
   1a738:	b.lt	1a958 <mpfr_vasnprintf_aux@@Base+0x1164>  // b.tstop
   1a73c:	ldr	x8, [x23]
   1a740:	add	x8, x8, #0x8
   1a744:	b	1a954 <mpfr_vasnprintf_aux@@Base+0x1160>
   1a748:	ldr	x9, [x19, #24]
   1a74c:	ldr	x10, [x19, #56]
   1a750:	mov	w11, #0x6                   	// #6
   1a754:	ldr	x9, [x9]
   1a758:	cmp	w10, #0x0
   1a75c:	csinc	w10, w10, wzr, ne  // ne = any
   1a760:	csel	w21, w11, w10, lt  // lt = tstop
   1a764:	cmp	x8, #0x1
   1a768:	sub	x9, x9, x8
   1a76c:	b.lt	1a78c <mpfr_vasnprintf_aux@@Base+0xf98>  // b.tstop
   1a770:	mov	x10, #0x5555555555555555    	// #6148914691236517205
   1a774:	add	x8, x8, #0x2
   1a778:	movk	x10, #0x5556
   1a77c:	smulh	x8, x8, x10
   1a780:	add	x8, x8, x8, lsr #63
   1a784:	bic	x9, x9, x9, asr #63
   1a788:	add	x9, x9, x8
   1a78c:	ldr	x4, [x19, #24]
   1a790:	ldr	w5, [x19, #32]
   1a794:	sxtw	x25, w21
   1a798:	cmp	x9, w21, sxtw
   1a79c:	csel	x3, x9, x25, lt  // lt = tstop
   1a7a0:	sub	x1, x29, #0x48
   1a7a4:	mov	w2, #0xa                   	// #10
   1a7a8:	mov	x0, xzr
   1a7ac:	bl	c550 <mpfr_get_str@plt>
   1a7b0:	ldur	x8, [x29, #-88]
   1a7b4:	mov	x27, x0
   1a7b8:	stur	x0, [x29, #-64]
   1a7bc:	mov	x26, x8
   1a7c0:	ldr	x8, [x8, #8]
   1a7c4:	cbnz	x8, 1a7bc <mpfr_vasnprintf_aux@@Base+0xfc8>
   1a7c8:	mov	w0, #0x10                  	// #16
   1a7cc:	bl	cd50 <mpfr_allocate_func@plt>
   1a7d0:	str	x0, [x26, #8]
   1a7d4:	stp	x27, xzr, [x0]
   1a7d8:	ldur	x8, [x29, #-72]
   1a7dc:	cmp	x8, x25
   1a7e0:	b.gt	1aaac <mpfr_vasnprintf_aux@@Base+0x12b8>
   1a7e4:	cmn	x8, #0x3
   1a7e8:	b.lt	1aaac <mpfr_vasnprintf_aux@@Base+0x12b8>  // b.tstop
   1a7ec:	ldr	w11, [x19, #132]
   1a7f0:	ldurb	w9, [x29, #-210]
   1a7f4:	ldurh	w10, [x29, #-212]
   1a7f8:	sub	w8, w21, w8
   1a7fc:	sturb	w11, [x29, #-48]
   1a800:	ldr	x11, [x19, #88]
   1a804:	ldr	x1, [x19, #24]
   1a808:	sub	x0, x29, #0xd0
   1a80c:	sub	x2, x29, #0x30
   1a810:	strb	w9, [x11, #2]
   1a814:	strh	w10, [x11]
   1a818:	ldr	w11, [x19, #52]
   1a81c:	ldr	w9, [x19, #176]
   1a820:	ldrh	w10, [x19, #180]
   1a824:	sub	x3, x29, #0x48
   1a828:	stp	w11, w8, [x29, #-44]
   1a82c:	ldr	x8, [x19, #120]
   1a830:	sturb	w24, [x29, #-16]
   1a834:	stur	x8, [x29, #-32]
   1a838:	mov	w8, #0xf                   	// #15
   1a83c:	stur	w8, [x29, #-24]
   1a840:	ldr	w8, [x19, #32]
   1a844:	stur	w8, [x29, #-20]
   1a848:	ldr	w8, [x19, #64]
   1a84c:	sturb	w8, [x29, #-15]
   1a850:	ldr	x8, [x19, #72]
   1a854:	strh	w10, [x8, #4]
   1a858:	str	w9, [x8]
   1a85c:	bl	1bfb8 <mpfr_vasnprintf_aux@@Base+0x27c4>
   1a860:	b	1ab20 <mpfr_vasnprintf_aux@@Base+0x132c>
   1a864:	mov	x9, #0xe000000000000001    	// #-2305843009213693951
   1a868:	cmp	x8, x9
   1a86c:	b.le	1b7dc <mpfr_vasnprintf_aux@@Base+0x1fe8>
   1a870:	lsl	x8, x8, #2
   1a874:	b	1aed8 <mpfr_vasnprintf_aux@@Base+0x16e4>
   1a878:	mov	x3, x1
   1a87c:	mov	x0, x5
   1a880:	mov	x12, x13
   1a884:	mov	x11, x2
   1a888:	cmp	w24, #0x60
   1a88c:	mov	w21, #0x1                   	// #1
   1a890:	b.le	1adfc <mpfr_vasnprintf_aux@@Base+0x1608>
   1a894:	sub	w8, w24, #0x61
   1a898:	cmp	w8, #0x17
   1a89c:	b.hi	1b464 <mpfr_vasnprintf_aux@@Base+0x1c70>  // b.pmore
   1a8a0:	adrp	x13, 59000 <mpfr_free_pool@@Base+0x387c>
   1a8a4:	add	x13, x13, #0xb5e
   1a8a8:	adr	x9, 1ae54 <mpfr_vasnprintf_aux@@Base+0x1660>
   1a8ac:	ldrh	w10, [x13, x8, lsl #1]
   1a8b0:	add	x9, x9, x10, lsl #2
   1a8b4:	ldr	w10, [x19, #84]
   1a8b8:	mov	w14, #0x2f                  	// #47
   1a8bc:	mov	w15, #0xcccd                	// #52429
   1a8c0:	mov	x2, x11
   1a8c4:	mov	x13, x12
   1a8c8:	movk	w14, #0x8000, lsl #16
   1a8cc:	movk	w15, #0xccc, lsl #16
   1a8d0:	mov	w16, #0x7fffffff            	// #2147483647
   1a8d4:	mov	w17, #0x80000001            	// #-2147483647
   1a8d8:	mov	x5, x0
   1a8dc:	mov	x1, x3
   1a8e0:	mov	w4, #0x8301                	// #33537
   1a8e4:	mov	w7, #0x2                   	// #2
   1a8e8:	mov	w30, #0x3                   	// #3
   1a8ec:	br	x9
   1a8f0:	mov	x0, x5
   1a8f4:	mov	x3, x1
   1a8f8:	mov	x12, x13
   1a8fc:	mov	x11, x2
   1a900:	cmp	w24, #0x68
   1a904:	mov	w21, #0x1                   	// #1
   1a908:	b.gt	1acc0 <mpfr_vasnprintf_aux@@Base+0x14cc>
   1a90c:	cmp	w24, #0x58
   1a910:	mov	x13, x12
   1a914:	b.eq	1b43c <mpfr_vasnprintf_aux@@Base+0x1c48>  // b.none
   1a918:	cmp	w24, #0x63
   1a91c:	b.eq	1b390 <mpfr_vasnprintf_aux@@Base+0x1b9c>  // b.none
   1a920:	cmp	w24, #0x64
   1a924:	b	1b40c <mpfr_vasnprintf_aux@@Base+0x1c18>
   1a928:	ldr	w8, [x23, #28]
   1a92c:	mov	x18, x5
   1a930:	tbz	w8, #31, 1a944 <mpfr_vasnprintf_aux@@Base+0x1150>
   1a934:	add	w9, w8, #0x10
   1a938:	cmn	w8, #0xf
   1a93c:	str	w9, [x23, #28]
   1a940:	b.lt	1a958 <mpfr_vasnprintf_aux@@Base+0x1164>  // b.tstop
   1a944:	ldr	x8, [x23]
   1a948:	add	x8, x8, #0xf
   1a94c:	and	x8, x8, #0xfffffffffffffff0
   1a950:	add	x8, x8, #0x10
   1a954:	str	x8, [x23]
   1a958:	mov	w21, #0x1                   	// #1
   1a95c:	b	1a9bc <mpfr_vasnprintf_aux@@Base+0x11c8>
   1a960:	ldr	w8, [x13]
   1a964:	mov	x18, x5
   1a968:	mov	x10, x13
   1a96c:	tbz	w8, #31, 1a984 <mpfr_vasnprintf_aux@@Base+0x1190>
   1a970:	add	w9, w8, #0x8
   1a974:	cmn	w8, #0x7
   1a978:	mov	w8, w9
   1a97c:	str	w9, [x10]
   1a980:	b.lt	1a994 <mpfr_vasnprintf_aux@@Base+0x11a0>  // b.tstop
   1a984:	ldr	x9, [x23]
   1a988:	add	x9, x9, #0x8
   1a98c:	str	x9, [x23]
   1a990:	mov	w9, w8
   1a994:	tbz	w9, #31, 1a9a8 <mpfr_vasnprintf_aux@@Base+0x11b4>
   1a998:	add	w8, w9, #0x8
   1a99c:	cmn	w9, #0x7
   1a9a0:	str	w8, [x10]
   1a9a4:	b.lt	1a9b4 <mpfr_vasnprintf_aux@@Base+0x11c0>  // b.tstop
   1a9a8:	ldr	x8, [x23]
   1a9ac:	add	x8, x8, #0x8
   1a9b0:	str	x8, [x23]
   1a9b4:	mov	w21, #0x1                   	// #1
   1a9b8:	mov	x13, x10
   1a9bc:	mov	w14, #0x2f                  	// #47
   1a9c0:	mov	w15, #0xcccd                	// #52429
   1a9c4:	movk	w14, #0x8000, lsl #16
   1a9c8:	movk	w15, #0xccc, lsl #16
   1a9cc:	mov	w16, #0x7fffffff            	// #2147483647
   1a9d0:	mov	w17, #0x80000001            	// #-2147483647
   1a9d4:	mov	x5, x18
   1a9d8:	b	1b2fc <mpfr_vasnprintf_aux@@Base+0x1b08>
   1a9dc:	stp	x2, x13, [x19, #8]
   1a9e0:	ldrsw	x8, [x13]
   1a9e4:	tbz	w8, #31, 1ab30 <mpfr_vasnprintf_aux@@Base+0x133c>
   1a9e8:	ldr	x10, [x19, #16]
   1a9ec:	add	w9, w8, #0x8
   1a9f0:	cmn	w8, #0x8
   1a9f4:	str	w9, [x10]
   1a9f8:	b.gt	1ab30 <mpfr_vasnprintf_aux@@Base+0x133c>
   1a9fc:	ldr	x9, [x23, #8]
   1aa00:	add	x8, x9, x8
   1aa04:	b	1ab3c <mpfr_vasnprintf_aux@@Base+0x1348>
   1aa08:	mov	w14, #0x2f                  	// #47
   1aa0c:	mov	w15, #0xcccd                	// #52429
   1aa10:	neg	x8, x8
   1aa14:	mov	x2, x21
   1aa18:	mov	x13, x24
   1aa1c:	movk	w14, #0x8000, lsl #16
   1aa20:	movk	w15, #0xccc, lsl #16
   1aa24:	mov	w16, #0x7fffffff            	// #2147483647
   1aa28:	mov	w17, #0x80000001            	// #-2147483647
   1aa2c:	mov	x5, x25
   1aa30:	mov	x1, x26
   1aa34:	mov	w4, #0x8301                	// #33537
   1aa38:	mov	w7, #0x2                   	// #2
   1aa3c:	mov	w30, #0x3                   	// #3
   1aa40:	ldr	x9, [x19, #272]
   1aa44:	cmp	x8, #0x1
   1aa48:	str	x9, [x0]
   1aa4c:	b.eq	1aa98 <mpfr_vasnprintf_aux@@Base+0x12a4>  // b.none
   1aa50:	lsl	x8, x8, #3
   1aa54:	add	x0, x0, #0x8
   1aa58:	sub	x2, x8, #0x8
   1aa5c:	mov	w1, wzr
   1aa60:	bl	c1b0 <memset@plt>
   1aa64:	mov	w15, #0xcccd                	// #52429
   1aa68:	mov	w14, #0x2f                  	// #47
   1aa6c:	mov	w30, #0x3                   	// #3
   1aa70:	mov	w7, #0x2                   	// #2
   1aa74:	mov	w4, #0x8301                	// #33537
   1aa78:	mov	x1, x26
   1aa7c:	mov	x5, x25
   1aa80:	mov	w17, #0x80000001            	// #-2147483647
   1aa84:	mov	w16, #0x7fffffff            	// #2147483647
   1aa88:	movk	w15, #0xccc, lsl #16
   1aa8c:	movk	w14, #0x8000, lsl #16
   1aa90:	mov	x13, x24
   1aa94:	mov	x2, x21
   1aa98:	ldp	q1, q0, [x23]
   1aa9c:	mov	w21, wzr
   1aaa0:	mov	x27, x22
   1aaa4:	stp	q1, q0, [x19, #192]
   1aaa8:	b	1b308 <mpfr_vasnprintf_aux@@Base+0x1b14>
   1aaac:	ldr	w11, [x19, #132]
   1aab0:	ldurb	w8, [x29, #-210]
   1aab4:	ldurh	w10, [x29, #-212]
   1aab8:	sub	w9, w21, #0x1
   1aabc:	sturb	w11, [x29, #-48]
   1aac0:	ldr	x11, [x19, #88]
   1aac4:	ldr	x1, [x19, #24]
   1aac8:	sub	x0, x29, #0xd0
   1aacc:	sub	x2, x29, #0x30
   1aad0:	strb	w8, [x11, #2]
   1aad4:	strh	w10, [x11]
   1aad8:	ldr	w11, [x19, #52]
   1aadc:	ldr	w8, [x19, #176]
   1aae0:	ldrh	w10, [x19, #180]
   1aae4:	sub	x3, x29, #0x48
   1aae8:	stp	w11, w9, [x29, #-44]
   1aaec:	ldr	x9, [x19, #120]
   1aaf0:	sturb	w24, [x29, #-16]
   1aaf4:	stur	x9, [x29, #-32]
   1aaf8:	mov	w9, #0xf                   	// #15
   1aafc:	stur	w9, [x29, #-24]
   1ab00:	ldr	w9, [x19, #32]
   1ab04:	stur	w9, [x29, #-20]
   1ab08:	ldr	w9, [x19, #64]
   1ab0c:	sturb	w9, [x29, #-15]
   1ab10:	ldr	x9, [x19, #72]
   1ab14:	strh	w10, [x9, #4]
   1ab18:	str	w8, [x9]
   1ab1c:	bl	1c5b8 <mpfr_vasnprintf_aux@@Base+0x2dc4>
   1ab20:	cmn	w0, #0x1
   1ab24:	b.eq	1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>  // b.none
   1ab28:	ldr	w21, [x19, #52]
   1ab2c:	b	1b0bc <mpfr_vasnprintf_aux@@Base+0x18c8>
   1ab30:	ldr	x8, [x23]
   1ab34:	add	x9, x8, #0x8
   1ab38:	str	x9, [x23]
   1ab3c:	ldr	x8, [x8]
   1ab40:	sub	x25, x26, x27
   1ab44:	str	x8, [x19, #32]
   1ab48:	cbz	w21, 1ad1c <mpfr_vasnprintf_aux@@Base+0x1528>
   1ab4c:	add	x1, x25, #0x1
   1ab50:	cmp	x1, #0x4, lsl #12
   1ab54:	str	xzr, [x19, #184]
   1ab58:	b.hi	1b82c <mpfr_vasnprintf_aux@@Base+0x2038>  // b.pmore
   1ab5c:	add	x9, x1, #0xf
   1ab60:	mov	x8, sp
   1ab64:	and	x9, x9, #0xfffffffffffffff0
   1ab68:	sub	x21, x8, x9
   1ab6c:	mov	sp, x21
   1ab70:	mov	x0, x21
   1ab74:	mov	x1, x27
   1ab78:	mov	x2, x25
   1ab7c:	bl	cb20 <strncpy@plt>
   1ab80:	strb	wzr, [x21, x25]
   1ab84:	ldp	q0, q1, [x19, #192]
   1ab88:	add	x0, x19, #0xb0
   1ab8c:	sub	x2, x29, #0xd0
   1ab90:	mov	x1, x21
   1ab94:	stp	q0, q1, [x29, #-208]
   1ab98:	bl	c0f0 <__gmp_vasprintf@plt>
   1ab9c:	tbnz	w0, #31, 1bcd0 <mpfr_vasnprintf_aux@@Base+0x24dc>
   1aba0:	ldr	x1, [x19, #176]
   1aba4:	mov	w2, w0
   1aba8:	add	x0, x19, #0xf8
   1abac:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1abb0:	ldr	x0, [x19, #176]
   1abb4:	bl	c8e0 <mpfr_free_str@plt>
   1abb8:	ldr	x0, [x19, #184]
   1abbc:	cbz	x0, 1ad34 <mpfr_vasnprintf_aux@@Base+0x1540>
   1abc0:	bl	c460 <mpfr_tmp_free@plt>
   1abc4:	b	1ad34 <mpfr_vasnprintf_aux@@Base+0x1540>
   1abc8:	ldr	x9, [x19, #24]
   1abcc:	mov	w14, w10
   1abd0:	ldr	w9, [x9, #8]
   1abd4:	tbnz	w9, #31, 1ac1c <mpfr_vasnprintf_aux@@Base+0x1428>
   1abd8:	ldr	x9, [x19, #24]
   1abdc:	ldr	x9, [x9]
   1abe0:	cmp	x9, x8
   1abe4:	b.le	1ac1c <mpfr_vasnprintf_aux@@Base+0x1428>
   1abe8:	ldr	x10, [x19, #24]
   1abec:	sub	x11, x9, #0x1
   1abf0:	add	x9, x9, #0x3e
   1abf4:	cmp	x11, #0x0
   1abf8:	ldr	x10, [x10, #24]
   1abfc:	csel	x9, x9, x11, lt  // lt = tstop
   1ac00:	asr	x9, x9, #6
   1ac04:	mov	x11, #0xffffffffffffffff    	// #-1
   1ac08:	ldr	x9, [x10, x9, lsl #3]
   1ac0c:	neg	x10, x8
   1ac10:	lsl	x10, x11, x10
   1ac14:	bics	xzr, x10, x9
   1ac18:	b.eq	1b334 <mpfr_vasnprintf_aux@@Base+0x1b40>  // b.none
   1ac1c:	cmp	w24, #0x62
   1ac20:	b.ne	1ac6c <mpfr_vasnprintf_aux@@Base+0x1478>  // b.any
   1ac24:	mov	w0, #0x2                   	// #2
   1ac28:	bl	cd50 <mpfr_allocate_func@plt>
   1ac2c:	mov	w8, #0x31                  	// #49
   1ac30:	strh	w8, [x0]
   1ac34:	ldur	x8, [x29, #-88]
   1ac38:	mov	x27, x0
   1ac3c:	mov	x21, x8
   1ac40:	ldr	x8, [x8, #8]
   1ac44:	cbnz	x8, 1ac3c <mpfr_vasnprintf_aux@@Base+0x1448>
   1ac48:	mov	w0, #0x10                  	// #16
   1ac4c:	bl	cd50 <mpfr_allocate_func@plt>
   1ac50:	str	x0, [x21, #8]
   1ac54:	stp	x27, xzr, [x0]
   1ac58:	ldr	x8, [x19, #24]
   1ac5c:	stur	x27, [x29, #-160]
   1ac60:	ldr	x8, [x8, #16]
   1ac64:	sub	x8, x8, #0x1
   1ac68:	b	1aedc <mpfr_vasnprintf_aux@@Base+0x16e8>
   1ac6c:	ldr	x9, [x19, #24]
   1ac70:	ldr	x8, [x9]
   1ac74:	ldr	x9, [x9, #24]
   1ac78:	sub	x10, x8, #0x1
   1ac7c:	add	x8, x8, #0x3e
   1ac80:	cmp	x10, #0x0
   1ac84:	csel	x8, x8, x10, lt  // lt = tstop
   1ac88:	asr	x8, x8, #6
   1ac8c:	ldr	x8, [x9, x8, lsl #3]
   1ac90:	cmp	w14, #0x4
   1ac94:	lsr	x21, x8, #60
   1ac98:	b.eq	1ae88 <mpfr_vasnprintf_aux@@Base+0x1694>  // b.none
   1ac9c:	cmp	w14, #0x3
   1aca0:	b.eq	1ae70 <mpfr_vasnprintf_aux@@Base+0x167c>  // b.none
   1aca4:	cmp	w14, #0x2
   1aca8:	b.ne	1ae80 <mpfr_vasnprintf_aux@@Base+0x168c>  // b.any
   1acac:	ldr	x8, [x19, #24]
   1acb0:	ldr	w8, [x8, #8]
   1acb4:	cmp	w8, #0x0
   1acb8:	b.gt	1ae88 <mpfr_vasnprintf_aux@@Base+0x1694>
   1acbc:	b	1ae8c <mpfr_vasnprintf_aux@@Base+0x1698>
   1acc0:	sub	w8, w24, #0x6f
   1acc4:	cmp	w8, #0x9
   1acc8:	b.hi	1b408 <mpfr_vasnprintf_aux@@Base+0x1c14>  // b.pmore
   1accc:	adrp	x13, 59000 <mpfr_free_pool@@Base+0x387c>
   1acd0:	add	x13, x13, #0xb4e
   1acd4:	adr	x9, 1b30c <mpfr_vasnprintf_aux@@Base+0x1b18>
   1acd8:	ldrb	w10, [x13, x8]
   1acdc:	add	x9, x9, x10, lsl #2
   1ace0:	ldr	w10, [x19, #84]
   1ace4:	mov	w14, #0x2f                  	// #47
   1ace8:	mov	w15, #0xcccd                	// #52429
   1acec:	mov	x2, x11
   1acf0:	mov	x13, x12
   1acf4:	movk	w14, #0x8000, lsl #16
   1acf8:	movk	w15, #0xccc, lsl #16
   1acfc:	mov	w16, #0x7fffffff            	// #2147483647
   1ad00:	mov	w17, #0x80000001            	// #-2147483647
   1ad04:	mov	x5, x0
   1ad08:	mov	x1, x3
   1ad0c:	mov	w4, #0x8301                	// #33537
   1ad10:	mov	w7, #0x2                   	// #2
   1ad14:	mov	w30, #0x3                   	// #3
   1ad18:	br	x9
   1ad1c:	cmp	x27, x26
   1ad20:	b.eq	1ad34 <mpfr_vasnprintf_aux@@Base+0x1540>  // b.none
   1ad24:	add	x0, x19, #0xf8
   1ad28:	mov	x1, x27
   1ad2c:	mov	x2, x25
   1ad30:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1ad34:	ldr	w8, [x19, #64]
   1ad38:	ldr	w10, [x19, #132]
   1ad3c:	adrp	x9, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   1ad40:	add	x9, x9, #0x7da
   1ad44:	and	w8, w8, #0xff
   1ad48:	cmp	w8, #0x30
   1ad4c:	adrp	x8, 5e000 <mpfr_bases@@Base+0x4f8>
   1ad50:	add	x8, x8, #0x333
   1ad54:	csel	x2, x9, x8, eq  // eq = none
   1ad58:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   1ad5c:	tst	w10, #0x1
   1ad60:	add	x9, x9, #0xbe6
   1ad64:	csel	x3, x8, x9, eq  // eq = none
   1ad68:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   1ad6c:	tst	w10, #0x8
   1ad70:	add	x9, x9, #0xbe8
   1ad74:	csel	x4, x8, x9, eq  // eq = none
   1ad78:	adrp	x9, 5e000 <mpfr_bases@@Base+0x4f8>
   1ad7c:	tst	w10, #0x2
   1ad80:	add	x9, x9, #0x317
   1ad84:	ldp	q0, q1, [x23]
   1ad88:	csel	x5, x8, x9, eq  // eq = none
   1ad8c:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   1ad90:	tst	w10, #0x4
   1ad94:	add	x9, x9, #0xbea
   1ad98:	csel	x6, x8, x9, eq  // eq = none
   1ad9c:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   1ada0:	tst	w10, #0x10
   1ada4:	add	x9, x9, #0xbec
   1ada8:	stp	q0, q1, [x19, #192]
   1adac:	csel	x7, x8, x9, eq  // eq = none
   1adb0:	sub	x0, x29, #0x30
   1adb4:	str	w24, [sp, #-16]!
   1adb8:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   1adbc:	add	x1, x1, #0xbd1
   1adc0:	bl	bdc0 <sprintf@plt>
   1adc4:	add	sp, sp, #0x10
   1adc8:	ldr	w2, [x19, #52]
   1adcc:	ldr	x4, [x19, #32]
   1add0:	sub	x0, x29, #0x48
   1add4:	sub	x1, x29, #0x30
   1add8:	ldr	x3, [x19, #56]
   1addc:	bl	c160 <__gmp_asprintf@plt>
   1ade0:	ldur	x1, [x29, #-72]
   1ade4:	sxtw	x2, w0
   1ade8:	add	x0, x19, #0xf8
   1adec:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1adf0:	ldur	x0, [x29, #-72]
   1adf4:	bl	c8e0 <mpfr_free_str@plt>
   1adf8:	b	1b2c8 <mpfr_vasnprintf_aux@@Base+0x1ad4>
   1adfc:	ldr	w10, [x19, #84]
   1ae00:	sub	w8, w24, #0x45
   1ae04:	mov	w14, #0x2f                  	// #47
   1ae08:	mov	w15, #0xcccd                	// #52429
   1ae0c:	cmp	w8, #0x3
   1ae10:	movk	w14, #0x8000, lsl #16
   1ae14:	movk	w15, #0xccc, lsl #16
   1ae18:	mov	w16, #0x7fffffff            	// #2147483647
   1ae1c:	mov	w17, #0x80000001            	// #-2147483647
   1ae20:	mov	w4, #0x8301                	// #33537
   1ae24:	mov	w7, #0x2                   	// #2
   1ae28:	mov	w30, #0x3                   	// #3
   1ae2c:	b.cc	1ae54 <mpfr_vasnprintf_aux@@Base+0x1660>  // b.lo, b.ul, b.last
   1ae30:	cmp	w24, #0x41
   1ae34:	b.eq	1ae54 <mpfr_vasnprintf_aux@@Base+0x1660>  // b.none
   1ae38:	mov	x13, x12
   1ae3c:	cmp	w24, #0x58
   1ae40:	b.eq	1b43c <mpfr_vasnprintf_aux@@Base+0x1c48>  // b.none
   1ae44:	mov	x2, x11
   1ae48:	mov	x5, x0
   1ae4c:	mov	x1, x3
   1ae50:	b	1b30c <mpfr_vasnprintf_aux@@Base+0x1b18>
   1ae54:	ldr	w8, [x23, #28]
   1ae58:	tbz	w8, #31, 1b454 <mpfr_vasnprintf_aux@@Base+0x1c60>
   1ae5c:	add	w9, w8, #0x10
   1ae60:	cmn	w8, #0xf
   1ae64:	str	w9, [x23, #28]
   1ae68:	b.ge	1b454 <mpfr_vasnprintf_aux@@Base+0x1c60>  // b.tcont
   1ae6c:	b	1b460 <mpfr_vasnprintf_aux@@Base+0x1c6c>
   1ae70:	ldr	x8, [x19, #24]
   1ae74:	ldr	w8, [x8, #8]
   1ae78:	tbz	w8, #31, 1ae8c <mpfr_vasnprintf_aux@@Base+0x1698>
   1ae7c:	b	1ae88 <mpfr_vasnprintf_aux@@Base+0x1694>
   1ae80:	cbnz	w14, 1ae8c <mpfr_vasnprintf_aux@@Base+0x1698>
   1ae84:	tbz	x8, #59, 1ae8c <mpfr_vasnprintf_aux@@Base+0x1698>
   1ae88:	add	x21, x21, #0x1
   1ae8c:	mov	w0, #0x2                   	// #2
   1ae90:	bl	cd50 <mpfr_allocate_func@plt>
   1ae94:	adrp	x8, 59000 <mpfr_free_pool@@Base+0x387c>
   1ae98:	add	x8, x8, #0xcb4
   1ae9c:	ldrb	w8, [x8, x21]
   1aea0:	strb	wzr, [x0, #1]
   1aea4:	mov	x27, x0
   1aea8:	strb	w8, [x0]
   1aeac:	ldur	x8, [x29, #-88]
   1aeb0:	mov	x21, x8
   1aeb4:	ldr	x8, [x8, #8]
   1aeb8:	cbnz	x8, 1aeb0 <mpfr_vasnprintf_aux@@Base+0x16bc>
   1aebc:	mov	w0, #0x10                  	// #16
   1aec0:	bl	cd50 <mpfr_allocate_func@plt>
   1aec4:	str	x0, [x21, #8]
   1aec8:	stp	x27, xzr, [x0]
   1aecc:	ldr	x8, [x19, #24]
   1aed0:	stur	x27, [x29, #-160]
   1aed4:	ldr	x8, [x8, #16]
   1aed8:	sub	x8, x8, #0x4
   1aedc:	ldr	x21, [x19, #56]
   1aee0:	adrp	x12, 59000 <mpfr_free_pool@@Base+0x387c>
   1aee4:	cmp	w24, #0x41
   1aee8:	add	x12, x12, #0xb58
   1aeec:	stur	x8, [x29, #-72]
   1aef0:	b.ne	1af54 <mpfr_vasnprintf_aux@@Base+0x1760>  // b.any
   1aef4:	mov	x8, x27
   1aef8:	ldrb	w10, [x8]
   1aefc:	sub	w9, w10, #0x61
   1af00:	cmp	w9, #0x5
   1af04:	b.hi	1af24 <mpfr_vasnprintf_aux@@Base+0x1730>  // b.pmore
   1af08:	adr	x10, 1af1c <mpfr_vasnprintf_aux@@Base+0x1728>
   1af0c:	ldrb	w11, [x12, x9]
   1af10:	add	x10, x10, x11, lsl #2
   1af14:	mov	w9, #0x41                  	// #65
   1af18:	br	x10
   1af1c:	mov	w9, #0x42                  	// #66
   1af20:	b	1af48 <mpfr_vasnprintf_aux@@Base+0x1754>
   1af24:	cbnz	w10, 1af4c <mpfr_vasnprintf_aux@@Base+0x1758>
   1af28:	b	1af54 <mpfr_vasnprintf_aux@@Base+0x1760>
   1af2c:	mov	w9, #0x45                  	// #69
   1af30:	b	1af48 <mpfr_vasnprintf_aux@@Base+0x1754>
   1af34:	mov	w9, #0x43                  	// #67
   1af38:	b	1af48 <mpfr_vasnprintf_aux@@Base+0x1754>
   1af3c:	mov	w9, #0x44                  	// #68
   1af40:	b	1af48 <mpfr_vasnprintf_aux@@Base+0x1754>
   1af44:	mov	w9, #0x46                  	// #70
   1af48:	strb	w9, [x8]
   1af4c:	add	x8, x8, #0x1
   1af50:	b	1aef8 <mpfr_vasnprintf_aux@@Base+0x1704>
   1af54:	cbnz	w21, 1af74 <mpfr_vasnprintf_aux@@Base+0x1780>
   1af58:	cmp	w24, #0x62
   1af5c:	b.eq	1af74 <mpfr_vasnprintf_aux@@Base+0x1780>  // b.none
   1af60:	ldr	w8, [x19, #132]
   1af64:	tbnz	w8, #0, 1afc4 <mpfr_vasnprintf_aux@@Base+0x17d0>
   1af68:	ldur	x8, [x29, #-120]
   1af6c:	cbz	x8, 1afec <mpfr_vasnprintf_aux@@Base+0x17f8>
   1af70:	b	1afc4 <mpfr_vasnprintf_aux@@Base+0x17d0>
   1af74:	add	x25, x27, #0x1
   1af78:	mov	x0, x25
   1af7c:	bl	bb70 <strlen@plt>
   1af80:	tbz	w21, #31, 1afa0 <mpfr_vasnprintf_aux@@Base+0x17ac>
   1af84:	subs	x8, x0, #0x1
   1af88:	b.cc	1af9c <mpfr_vasnprintf_aux@@Base+0x17a8>  // b.lo, b.ul, b.last
   1af8c:	ldrb	w9, [x27, x0]
   1af90:	mov	x0, x8
   1af94:	cmp	w9, #0x30
   1af98:	b.eq	1af84 <mpfr_vasnprintf_aux@@Base+0x1790>  // b.none
   1af9c:	add	x0, x8, #0x1
   1afa0:	lsr	x8, x0, #31
   1afa4:	cbnz	x8, 1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>
   1afa8:	ldr	x8, [x19, #56]
   1afac:	cbz	x0, 1af60 <mpfr_vasnprintf_aux@@Base+0x176c>
   1afb0:	subs	w8, w8, w0
   1afb4:	stp	x25, x0, [x29, #-128]
   1afb8:	b.le	1afc4 <mpfr_vasnprintf_aux@@Base+0x17d0>
   1afbc:	stur	w8, [x29, #-112]
   1afc0:	b	1af60 <mpfr_vasnprintf_aux@@Base+0x176c>
   1afc4:	bl	bf50 <localeconv@plt>
   1afc8:	ldr	x8, [x0]
   1afcc:	ldrb	w8, [x8, #1]
   1afd0:	cbz	w8, 1afdc <mpfr_vasnprintf_aux@@Base+0x17e8>
   1afd4:	mov	w8, #0x2e                  	// #46
   1afd8:	b	1afe8 <mpfr_vasnprintf_aux@@Base+0x17f4>
   1afdc:	bl	bf50 <localeconv@plt>
   1afe0:	ldr	x8, [x0]
   1afe4:	ldrb	w8, [x8]
   1afe8:	sturb	w8, [x29, #-140]
   1afec:	ldur	x8, [x29, #-72]
   1aff0:	mov	w9, #0x3                   	// #3
   1aff4:	stur	x9, [x29, #-96]
   1aff8:	cmp	x8, #0x0
   1affc:	cneg	x8, x8, mi  // mi = first
   1b000:	cmp	x8, #0xa
   1b004:	b.cc	1b034 <mpfr_vasnprintf_aux@@Base+0x1840>  // b.lo, b.ul, b.last
   1b008:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   1b00c:	mov	w9, #0x3                   	// #3
   1b010:	movk	x11, #0xcccd
   1b014:	umulh	x10, x8, x11
   1b018:	cmp	x8, #0x63
   1b01c:	lsr	x8, x10, #3
   1b020:	add	x9, x9, #0x1
   1b024:	b.hi	1b014 <mpfr_vasnprintf_aux@@Base+0x1820>  // b.pmore
   1b028:	add	x0, x9, #0x1
   1b02c:	stur	x9, [x29, #-96]
   1b030:	b	1b038 <mpfr_vasnprintf_aux@@Base+0x1844>
   1b034:	mov	w0, #0x4                   	// #4
   1b038:	bl	cd50 <mpfr_allocate_func@plt>
   1b03c:	ldur	x8, [x29, #-88]
   1b040:	mov	x27, x0
   1b044:	mov	x21, x8
   1b048:	ldr	x8, [x8, #8]
   1b04c:	cbnz	x8, 1b044 <mpfr_vasnprintf_aux@@Base+0x1850>
   1b050:	mov	w0, #0x10                  	// #16
   1b054:	bl	cd50 <mpfr_allocate_func@plt>
   1b058:	cmp	w24, #0x41
   1b05c:	mov	w8, #0x70                  	// #112
   1b060:	mov	w9, #0x50                  	// #80
   1b064:	str	x0, [x21, #8]
   1b068:	stp	x27, xzr, [x0]
   1b06c:	csel	w8, w9, w8, eq  // eq = none
   1b070:	sub	x0, x29, #0x30
   1b074:	stur	x27, [x29, #-104]
   1b078:	sturb	w8, [x29, #-48]
   1b07c:	sturb	wzr, [x29, #-47]
   1b080:	bl	bb70 <strlen@plt>
   1b084:	ldur	x2, [x29, #-72]
   1b088:	sub	x8, x29, #0x30
   1b08c:	mov	w9, #0x2b25                	// #11045
   1b090:	add	x8, x8, x0
   1b094:	movk	w9, #0x312e, lsl #16
   1b098:	str	w9, [x8]
   1b09c:	mov	w9, #0x6c31                	// #27697
   1b0a0:	movk	w9, #0x64, lsl #16
   1b0a4:	sub	x1, x29, #0x30
   1b0a8:	mov	x0, x27
   1b0ac:	stur	w9, [x8, #3]
   1b0b0:	bl	bdc0 <sprintf@plt>
   1b0b4:	ldr	w21, [x19, #52]
   1b0b8:	tbnz	w0, #31, 1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>
   1b0bc:	ldur	x8, [x29, #-176]
   1b0c0:	tbnz	x8, #63, 1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>
   1b0c4:	ldur	x9, [x29, #-152]
   1b0c8:	tbnz	x9, #63, 1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>
   1b0cc:	ldurb	w1, [x29, #-192]
   1b0d0:	ldursw	x10, [x29, #-144]
   1b0d4:	ldurb	w11, [x29, #-168]
   1b0d8:	add	w8, w9, w8
   1b0dc:	cmp	w1, #0x0
   1b0e0:	cinc	w8, w8, ne  // ne = any
   1b0e4:	add	w8, w10, w8
   1b0e8:	cbz	w11, 1b108 <mpfr_vasnprintf_aux@@Base+0x1914>
   1b0ec:	add	x9, x9, x10
   1b0f0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1b0f4:	sub	x9, x9, #0x1
   1b0f8:	movk	x10, #0xaaab
   1b0fc:	umulh	x9, x9, x10
   1b100:	lsr	x9, x9, #1
   1b104:	add	w8, w8, w9
   1b108:	ldur	x9, [x29, #-120]
   1b10c:	tbnz	x9, #63, 1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>
   1b110:	ldur	x10, [x29, #-96]
   1b114:	tbnz	x10, #63, 1b274 <mpfr_vasnprintf_aux@@Base+0x1a80>
   1b118:	ldurb	w11, [x29, #-140]
   1b11c:	ldur	w12, [x29, #-136]
   1b120:	ldur	w13, [x29, #-112]
   1b124:	add	w8, w8, w9
   1b128:	add	w8, w8, w10
   1b12c:	cmp	w11, #0x0
   1b130:	add	w8, w8, w12
   1b134:	cinc	w8, w8, ne  // ne = any
   1b138:	add	w8, w8, w13
   1b13c:	subs	w9, w21, w8
   1b140:	b.ls	1b14c <mpfr_vasnprintf_aux@@Base+0x1958>  // b.plast
   1b144:	mov	w8, w21
   1b148:	stur	x9, [x29, #-200]
   1b14c:	ldr	x9, [x19, #120]
   1b150:	cbz	x9, 1b298 <mpfr_vasnprintf_aux@@Base+0x1aa4>
   1b154:	ldur	w8, [x29, #-208]
   1b158:	cbnz	w8, 1b174 <mpfr_vasnprintf_aux@@Base+0x1980>
   1b15c:	ldur	x2, [x29, #-200]
   1b160:	cbz	x2, 1b174 <mpfr_vasnprintf_aux@@Base+0x1980>
   1b164:	add	x0, x19, #0xf8
   1b168:	mov	w1, #0x20                  	// #32
   1b16c:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b170:	ldurb	w1, [x29, #-192]
   1b174:	cbz	w1, 1b184 <mpfr_vasnprintf_aux@@Base+0x1990>
   1b178:	add	x0, x19, #0xf8
   1b17c:	mov	w2, #0x1                   	// #1
   1b180:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b184:	ldur	x1, [x29, #-184]
   1b188:	cbz	x1, 1b198 <mpfr_vasnprintf_aux@@Base+0x19a4>
   1b18c:	ldur	x2, [x29, #-176]
   1b190:	add	x0, x19, #0xf8
   1b194:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1b198:	ldur	w8, [x29, #-208]
   1b19c:	cmp	w8, #0x1
   1b1a0:	b.ne	1b1b8 <mpfr_vasnprintf_aux@@Base+0x19c4>  // b.any
   1b1a4:	ldur	x2, [x29, #-200]
   1b1a8:	cbz	x2, 1b1b8 <mpfr_vasnprintf_aux@@Base+0x19c4>
   1b1ac:	add	x0, x19, #0xf8
   1b1b0:	mov	w1, #0x30                  	// #48
   1b1b4:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b1b8:	ldur	x1, [x29, #-160]
   1b1bc:	cbz	x1, 1b5a0 <mpfr_vasnprintf_aux@@Base+0x1dac>
   1b1c0:	ldurb	w21, [x29, #-168]
   1b1c4:	ldur	x27, [x29, #-152]
   1b1c8:	cbnz	w21, 1b5c0 <mpfr_vasnprintf_aux@@Base+0x1dcc>
   1b1cc:	add	x0, x19, #0xf8
   1b1d0:	mov	x2, x27
   1b1d4:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1b1d8:	ldursw	x2, [x29, #-144]
   1b1dc:	cbz	w2, 1b1ec <mpfr_vasnprintf_aux@@Base+0x19f8>
   1b1e0:	add	x0, x19, #0xf8
   1b1e4:	mov	w1, #0x30                  	// #48
   1b1e8:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b1ec:	ldurb	w1, [x29, #-140]
   1b1f0:	cbz	w1, 1b200 <mpfr_vasnprintf_aux@@Base+0x1a0c>
   1b1f4:	add	x0, x19, #0xf8
   1b1f8:	mov	w2, #0x1                   	// #1
   1b1fc:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b200:	ldursw	x2, [x29, #-136]
   1b204:	cbz	w2, 1b214 <mpfr_vasnprintf_aux@@Base+0x1a20>
   1b208:	add	x0, x19, #0xf8
   1b20c:	mov	w1, #0x30                  	// #48
   1b210:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b214:	ldur	x1, [x29, #-128]
   1b218:	cbz	x1, 1b228 <mpfr_vasnprintf_aux@@Base+0x1a34>
   1b21c:	ldur	x2, [x29, #-120]
   1b220:	add	x0, x19, #0xf8
   1b224:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1b228:	ldursw	x2, [x29, #-112]
   1b22c:	cbz	w2, 1b23c <mpfr_vasnprintf_aux@@Base+0x1a48>
   1b230:	add	x0, x19, #0xf8
   1b234:	mov	w1, #0x30                  	// #48
   1b238:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b23c:	ldur	x1, [x29, #-104]
   1b240:	cbz	x1, 1b250 <mpfr_vasnprintf_aux@@Base+0x1a5c>
   1b244:	ldur	x2, [x29, #-96]
   1b248:	add	x0, x19, #0xf8
   1b24c:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1b250:	ldur	w8, [x29, #-208]
   1b254:	cmp	w8, #0x2
   1b258:	b.ne	1b2c0 <mpfr_vasnprintf_aux@@Base+0x1acc>  // b.any
   1b25c:	ldur	x2, [x29, #-200]
   1b260:	cbz	x2, 1b2c0 <mpfr_vasnprintf_aux@@Base+0x1acc>
   1b264:	add	x0, x19, #0xf8
   1b268:	mov	w1, #0x20                  	// #32
   1b26c:	bl	1be7c <mpfr_vasnprintf_aux@@Base+0x2688>
   1b270:	b	1b2c0 <mpfr_vasnprintf_aux@@Base+0x1acc>
   1b274:	ldur	x0, [x29, #-88]
   1b278:	bl	1bf74 <mpfr_vasnprintf_aux@@Base+0x2780>
   1b27c:	mov	x8, #0xffffffffffffffff    	// #-1
   1b280:	stur	xzr, [x29, #-184]
   1b284:	stur	xzr, [x29, #-160]
   1b288:	stur	xzr, [x29, #-128]
   1b28c:	stur	xzr, [x29, #-104]
   1b290:	str	x8, [x19, #272]
   1b294:	b	1b2c8 <mpfr_vasnprintf_aux@@Base+0x1ad4>
   1b298:	ldr	x9, [x19, #272]
   1b29c:	cmn	x9, #0x1
   1b2a0:	b.eq	1b2c0 <mpfr_vasnprintf_aux@@Base+0x1acc>  // b.none
   1b2a4:	mov	w8, w8
   1b2a8:	adds	x8, x9, x8
   1b2ac:	cset	w9, cs  // cs = hs, nlast
   1b2b0:	orr	x9, x9, x8, lsr #63
   1b2b4:	cmp	x9, #0x0
   1b2b8:	csinv	x8, x8, xzr, eq  // eq = none
   1b2bc:	str	x8, [x19, #272]
   1b2c0:	ldur	x0, [x29, #-88]
   1b2c4:	bl	1bf74 <mpfr_vasnprintf_aux@@Base+0x2780>
   1b2c8:	ldp	x2, x13, [x19, #8]
   1b2cc:	mov	w14, #0x2f                  	// #47
   1b2d0:	mov	w15, #0xcccd                	// #52429
   1b2d4:	adrp	x5, 59000 <mpfr_free_pool@@Base+0x387c>
   1b2d8:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   1b2dc:	mov	w21, wzr
   1b2e0:	mov	x27, x22
   1b2e4:	movk	w14, #0x8000, lsl #16
   1b2e8:	movk	w15, #0xccc, lsl #16
   1b2ec:	mov	w16, #0x7fffffff            	// #2147483647
   1b2f0:	mov	w17, #0x80000001            	// #-2147483647
   1b2f4:	add	x5, x5, #0xbad
   1b2f8:	add	x1, x1, #0xb02
   1b2fc:	mov	w4, #0x8301                	// #33537
   1b300:	mov	w7, #0x2                   	// #2
   1b304:	mov	w30, #0x3                   	// #3
   1b308:	ldr	w10, [x19, #84]
   1b30c:	ldrb	w24, [x22]
   1b310:	ldr	x12, [x19, #40]
   1b314:	ldr	x9, [x19, #72]
   1b318:	ldr	w11, [x19, #80]
   1b31c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1b320:	mov	x6, #0x71                  	// #113
   1b324:	add	x0, x0, #0xbb9
   1b328:	mov	w18, #0x1                   	// #1
   1b32c:	movk	x6, #0x73, lsl #32
   1b330:	b	19eb8 <mpfr_vasnprintf_aux@@Base+0x6c4>
   1b334:	eor	x8, x8, #0x3f
   1b338:	lsl	x8, x25, x8
   1b33c:	cmp	w14, #0x0
   1b340:	csinv	x8, x8, x10, eq  // eq = none
   1b344:	tst	x9, x8
   1b348:	b.eq	1ac1c <mpfr_vasnprintf_aux@@Base+0x1428>  // b.none
   1b34c:	mov	w0, #0x2                   	// #2
   1b350:	bl	cd50 <mpfr_allocate_func@plt>
   1b354:	mov	w8, #0x31                  	// #49
   1b358:	strh	w8, [x0]
   1b35c:	ldur	x8, [x29, #-88]
   1b360:	mov	x27, x0
   1b364:	mov	x21, x8
   1b368:	ldr	x8, [x8, #8]
   1b36c:	cbnz	x8, 1b364 <mpfr_vasnprintf_aux@@Base+0x1b70>
   1b370:	mov	w0, #0x10                  	// #16
   1b374:	bl	cd50 <mpfr_allocate_func@plt>
   1b378:	str	x0, [x21, #8]
   1b37c:	stp	x27, xzr, [x0]
   1b380:	ldr	x8, [x19, #24]
   1b384:	stur	x27, [x29, #-160]
   1b388:	ldr	x8, [x8, #16]
   1b38c:	b	1aedc <mpfr_vasnprintf_aux@@Base+0x16e8>
   1b390:	ldr	w8, [x12]
   1b394:	tbz	w8, #31, 1b454 <mpfr_vasnprintf_aux@@Base+0x1c60>
   1b398:	b	1b444 <mpfr_vasnprintf_aux@@Base+0x1c50>
   1b39c:	mov	x24, x0
   1b3a0:	mov	w1, #0x815                 	// #2069
   1b3a4:	mov	x0, x3
   1b3a8:	stp	x2, x13, [x19, #8]
   1b3ac:	mov	x2, x24
   1b3b0:	mov	x22, x3
   1b3b4:	str	x12, [x19, #40]
   1b3b8:	bl	cb90 <mpfr_assert_fail@plt>
   1b3bc:	ldr	x12, [x19, #40]
   1b3c0:	ldp	x2, x13, [x19, #8]
   1b3c4:	mov	x6, #0x71                  	// #113
   1b3c8:	adrp	x1, 59000 <mpfr_free_pool@@Base+0x387c>
   1b3cc:	mov	w15, #0xcccd                	// #52429
   1b3d0:	mov	w14, #0x2f                  	// #47
   1b3d4:	mov	w30, #0x3                   	// #3
   1b3d8:	mov	w7, #0x2                   	// #2
   1b3dc:	movk	x6, #0x73, lsl #32
   1b3e0:	mov	w4, #0x8301                	// #33537
   1b3e4:	mov	w18, #0x1                   	// #1
   1b3e8:	add	x1, x1, #0xb02
   1b3ec:	mov	x0, x24
   1b3f0:	mov	x3, x22
   1b3f4:	mov	w17, #0x80000001            	// #-2147483647
   1b3f8:	mov	w16, #0x7fffffff            	// #2147483647
   1b3fc:	movk	w15, #0xccc, lsl #16
   1b400:	movk	w14, #0x8000, lsl #16
   1b404:	b	19b24 <mpfr_vasnprintf_aux@@Base+0x330>
   1b408:	cmp	w24, #0x69
   1b40c:	ldr	w10, [x19, #84]
   1b410:	mov	w14, #0x2f                  	// #47
   1b414:	mov	w15, #0xcccd                	// #52429
   1b418:	mov	x13, x12
   1b41c:	movk	w14, #0x8000, lsl #16
   1b420:	movk	w15, #0xccc, lsl #16
   1b424:	mov	w16, #0x7fffffff            	// #2147483647
   1b428:	mov	w17, #0x80000001            	// #-2147483647
   1b42c:	mov	w4, #0x8301                	// #33537
   1b430:	mov	w7, #0x2                   	// #2
   1b434:	mov	w30, #0x3                   	// #3
   1b438:	b.ne	1ae44 <mpfr_vasnprintf_aux@@Base+0x1650>  // b.any
   1b43c:	ldr	w8, [x13]
   1b440:	tbz	w8, #31, 1b454 <mpfr_vasnprintf_aux@@Base+0x1c60>
   1b444:	add	w9, w8, #0x8
   1b448:	cmn	w8, #0x7
   1b44c:	str	w9, [x12]
   1b450:	b.lt	1b460 <mpfr_vasnprintf_aux@@Base+0x1c6c>  // b.tstop
   1b454:	ldr	x8, [x23]
   1b458:	add	x8, x8, #0x8
   1b45c:	str	x8, [x23]
   1b460:	mov	w21, #0x1                   	// #1
   1b464:	mov	w14, #0x2f                  	// #47
   1b468:	mov	w15, #0xcccd                	// #52429
   1b46c:	mov	x2, x11
   1b470:	mov	x13, x12
   1b474:	movk	w14, #0x8000, lsl #16
   1b478:	movk	w15, #0xccc, lsl #16
   1b47c:	mov	w16, #0x7fffffff            	// #2147483647
   1b480:	mov	w17, #0x80000001            	// #-2147483647
   1b484:	mov	x5, x0
   1b488:	mov	x1, x3
   1b48c:	b	1b2fc <mpfr_vasnprintf_aux@@Base+0x1b08>
   1b490:	sub	x0, x29, #0x30
   1b494:	str	x10, [x19, #56]
   1b498:	bl	be70 <mpfr_tmp_allocate@plt>
   1b49c:	ldr	x10, [x19, #56]
   1b4a0:	mov	x26, x0
   1b4a4:	b	19f84 <mpfr_vasnprintf_aux@@Base+0x790>
   1b4a8:	bl	c460 <mpfr_tmp_free@plt>
   1b4ac:	b	19fd8 <mpfr_vasnprintf_aux@@Base+0x7e4>
   1b4b0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1b4b4:	cmp	x8, x9
   1b4b8:	b.eq	1b630 <mpfr_vasnprintf_aux@@Base+0x1e3c>  // b.none
   1b4bc:	mov	x9, #0x2                   	// #2
   1b4c0:	movk	x9, #0x8000, lsl #48
   1b4c4:	cmp	x8, x9
   1b4c8:	b.ne	1b69c <mpfr_vasnprintf_aux@@Base+0x1ea8>  // b.any
   1b4cc:	cmp	w26, #0x1
   1b4d0:	b.ne	1b4d8 <mpfr_vasnprintf_aux@@Base+0x1ce4>  // b.any
   1b4d4:	stur	wzr, [x29, #-208]
   1b4d8:	mov	w8, #0x3                   	// #3
   1b4dc:	mov	w0, #0x4                   	// #4
   1b4e0:	stur	x8, [x29, #-152]
   1b4e4:	bl	cd50 <mpfr_allocate_func@plt>
   1b4e8:	mov	w8, #0x616e                	// #24942
   1b4ec:	mov	w9, #0x414e                	// #16718
   1b4f0:	cmp	w27, #0x0
   1b4f4:	movk	w8, #0x6e, lsl #16
   1b4f8:	movk	w9, #0x4e, lsl #16
   1b4fc:	csel	w8, w9, w8, ne  // ne = any
   1b500:	str	w8, [x0]
   1b504:	ldur	x8, [x29, #-88]
   1b508:	mov	x24, x0
   1b50c:	mov	x21, x8
   1b510:	ldr	x8, [x8, #8]
   1b514:	cbnz	x8, 1b50c <mpfr_vasnprintf_aux@@Base+0x1d18>
   1b518:	b	1b684 <mpfr_vasnprintf_aux@@Base+0x1e90>
   1b51c:	cmp	w26, #0x1
   1b520:	b.ne	1b528 <mpfr_vasnprintf_aux@@Base+0x1d34>  // b.any
   1b524:	stur	wzr, [x29, #-208]
   1b528:	ldr	x8, [x19, #24]
   1b52c:	ldr	w8, [x8, #8]
   1b530:	tbz	w8, #31, 1b53c <mpfr_vasnprintf_aux@@Base+0x1d48>
   1b534:	mov	w8, #0x2d                  	// #45
   1b538:	sturb	w8, [x29, #-192]
   1b53c:	mov	w8, #0x3                   	// #3
   1b540:	mov	w0, #0x4                   	// #4
   1b544:	stur	x8, [x29, #-152]
   1b548:	bl	cd50 <mpfr_allocate_func@plt>
   1b54c:	mov	w8, #0x4255                	// #16981
   1b550:	mov	w9, #0x6275                	// #25205
   1b554:	cmp	w27, #0x0
   1b558:	movk	w8, #0x46, lsl #16
   1b55c:	movk	w9, #0x66, lsl #16
   1b560:	csel	w8, w8, w9, ne  // ne = any
   1b564:	str	w8, [x0]
   1b568:	ldur	x8, [x29, #-88]
   1b56c:	mov	x24, x0
   1b570:	mov	x21, x8
   1b574:	ldr	x8, [x8, #8]
   1b578:	cbnz	x8, 1b570 <mpfr_vasnprintf_aux@@Base+0x1d7c>
   1b57c:	b	1b684 <mpfr_vasnprintf_aux@@Base+0x1e90>
   1b580:	sub	x0, x29, #0x30
   1b584:	str	x10, [x19]
   1b588:	bl	be70 <mpfr_tmp_allocate@plt>
   1b58c:	ldr	x10, [x19]
   1b590:	mov	x21, x0
   1b594:	b	1a18c <mpfr_vasnprintf_aux@@Base+0x998>
   1b598:	bl	c460 <mpfr_tmp_free@plt>
   1b59c:	b	1a1e0 <mpfr_vasnprintf_aux@@Base+0x9ec>
   1b5a0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1b5a4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1b5a8:	mov	w1, #0x7a3                 	// #1955
   1b5ac:	add	x0, x0, #0xbad
   1b5b0:	add	x2, x2, #0xc40
   1b5b4:	bl	cb90 <mpfr_assert_fail@plt>
   1b5b8:	ldur	x1, [x29, #-160]
   1b5bc:	b	1b1c0 <mpfr_vasnprintf_aux@@Base+0x19cc>
   1b5c0:	ldursw	x8, [x29, #-144]
   1b5c4:	mvn	x9, x8
   1b5c8:	cmp	x27, x9
   1b5cc:	b.hi	1b628 <mpfr_vasnprintf_aux@@Base+0x1e34>  // b.pmore
   1b5d0:	add	x9, x27, x8
   1b5d4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1b5d8:	sub	x25, x9, #0x1
   1b5dc:	movk	x8, #0xaaab
   1b5e0:	umulh	x8, x25, x8
   1b5e4:	mov	x10, #0xffffffffffffffff    	// #-1
   1b5e8:	eor	x10, x10, x8, lsr #1
   1b5ec:	cmp	x9, x10
   1b5f0:	b.hi	1b628 <mpfr_vasnprintf_aux@@Base+0x1e34>  // b.pmore
   1b5f4:	ldr	x10, [x19, #272]
   1b5f8:	cmn	x10, #0x1
   1b5fc:	b.eq	1b628 <mpfr_vasnprintf_aux@@Base+0x1e34>  // b.none
   1b600:	lsr	x24, x8, #1
   1b604:	add	x9, x24, x9
   1b608:	str	x9, [x19, #64]
   1b60c:	adds	x9, x10, x9
   1b610:	cset	w10, cs  // cs = hs, nlast
   1b614:	orr	x10, x10, x9, lsr #63
   1b618:	cmp	x10, #0x0
   1b61c:	csinv	x9, x9, xzr, eq  // eq = none
   1b620:	str	x9, [x19, #272]
   1b624:	cbz	x10, 1b904 <mpfr_vasnprintf_aux@@Base+0x2110>
   1b628:	mov	x8, #0xffffffffffffffff    	// #-1
   1b62c:	b	1b2bc <mpfr_vasnprintf_aux@@Base+0x1ac8>
   1b630:	cmp	w26, #0x1
   1b634:	b.ne	1b63c <mpfr_vasnprintf_aux@@Base+0x1e48>  // b.any
   1b638:	stur	wzr, [x29, #-208]
   1b63c:	ldr	x8, [x19, #24]
   1b640:	ldr	w8, [x8, #8]
   1b644:	tbz	w8, #31, 1b650 <mpfr_vasnprintf_aux@@Base+0x1e5c>
   1b648:	mov	w8, #0x2d                  	// #45
   1b64c:	sturb	w8, [x29, #-192]
   1b650:	mov	w8, #0x3                   	// #3
   1b654:	mov	w0, #0x4                   	// #4
   1b658:	stur	x8, [x29, #-152]
   1b65c:	bl	cd50 <mpfr_allocate_func@plt>
   1b660:	ldp	w9, w8, [x19, #80]
   1b664:	cmp	w27, #0x0
   1b668:	mov	x24, x0
   1b66c:	csel	w8, w8, w9, ne  // ne = any
   1b670:	str	w8, [x0]
   1b674:	ldur	x8, [x29, #-88]
   1b678:	mov	x21, x8
   1b67c:	ldr	x8, [x8, #8]
   1b680:	cbnz	x8, 1b678 <mpfr_vasnprintf_aux@@Base+0x1e84>
   1b684:	mov	w0, #0x10                  	// #16
   1b688:	bl	cd50 <mpfr_allocate_func@plt>
   1b68c:	str	x0, [x21, #8]
   1b690:	stp	x24, xzr, [x0]
   1b694:	stur	x24, [x29, #-160]
   1b698:	b	1ab28 <mpfr_vasnprintf_aux@@Base+0x1334>
   1b69c:	ldr	x8, [x19, #24]
   1b6a0:	ldr	w8, [x8, #8]
   1b6a4:	tbnz	w8, #31, 1b6d0 <mpfr_vasnprintf_aux@@Base+0x1edc>
   1b6a8:	ldr	w9, [x19, #132]
   1b6ac:	mov	w8, #0xa                   	// #10
   1b6b0:	tst	w9, w8
   1b6b4:	b.eq	1b6d8 <mpfr_vasnprintf_aux@@Base+0x1ee4>  // b.none
   1b6b8:	ldr	w8, [x19, #132]
   1b6bc:	mov	w9, #0x20                  	// #32
   1b6c0:	tst	w8, #0x8
   1b6c4:	mov	w8, #0x2b                  	// #43
   1b6c8:	csel	w8, w9, w8, eq  // eq = none
   1b6cc:	b	1b6d4 <mpfr_vasnprintf_aux@@Base+0x1ee0>
   1b6d0:	mov	w8, #0x2d                  	// #45
   1b6d4:	sturb	w8, [x29, #-192]
   1b6d8:	orr	w8, w24, #0x20
   1b6dc:	cmp	w8, #0x61
   1b6e0:	b.ne	1b73c <mpfr_vasnprintf_aux@@Base+0x1f48>  // b.any
   1b6e4:	mov	w8, #0x2                   	// #2
   1b6e8:	mov	w0, #0x3                   	// #3
   1b6ec:	stur	x8, [x29, #-176]
   1b6f0:	bl	cd50 <mpfr_allocate_func@plt>
   1b6f4:	mov	w8, #0x30                  	// #48
   1b6f8:	strb	w8, [x0]
   1b6fc:	cmp	w27, #0x0
   1b700:	mov	w8, #0x78                  	// #120
   1b704:	mov	w9, #0x58                  	// #88
   1b708:	csel	w8, w9, w8, ne  // ne = any
   1b70c:	strb	w8, [x0, #1]
   1b710:	strb	wzr, [x0, #2]
   1b714:	ldur	x8, [x29, #-88]
   1b718:	mov	x21, x0
   1b71c:	mov	x26, x8
   1b720:	ldr	x8, [x8, #8]
   1b724:	cbnz	x8, 1b71c <mpfr_vasnprintf_aux@@Base+0x1f28>
   1b728:	mov	w0, #0x10                  	// #16
   1b72c:	bl	cd50 <mpfr_allocate_func@plt>
   1b730:	str	x0, [x26, #8]
   1b734:	stp	x21, xzr, [x0]
   1b738:	stur	x21, [x29, #-184]
   1b73c:	mov	w8, #0x1                   	// #1
   1b740:	mov	w0, #0x2                   	// #2
   1b744:	stur	x8, [x29, #-152]
   1b748:	bl	cd50 <mpfr_allocate_func@plt>
   1b74c:	mov	w8, #0x30                  	// #48
   1b750:	strh	w8, [x0]
   1b754:	ldur	x26, [x29, #-88]
   1b758:	str	x0, [x19, #64]
   1b75c:	mov	x8, x26
   1b760:	mov	x21, x8
   1b764:	ldr	x8, [x8, #8]
   1b768:	cbnz	x8, 1b760 <mpfr_vasnprintf_aux@@Base+0x1f6c>
   1b76c:	mov	w0, #0x10                  	// #16
   1b770:	bl	cd50 <mpfr_allocate_func@plt>
   1b774:	ldr	x9, [x19, #64]
   1b778:	str	x0, [x21, #8]
   1b77c:	stp	x9, xzr, [x0]
   1b780:	ldr	x8, [x19, #56]
   1b784:	stur	x9, [x29, #-160]
   1b788:	subs	w21, w8, #0x1
   1b78c:	b.lt	1b7bc <mpfr_vasnprintf_aux@@Base+0x1fc8>  // b.tstop
   1b790:	orr	w8, w24, #0x20
   1b794:	cmp	w8, #0x67
   1b798:	b.ne	1b7a4 <mpfr_vasnprintf_aux@@Base+0x1fb0>  // b.any
   1b79c:	ldr	w8, [x19, #132]
   1b7a0:	tbz	w8, #0, 1b84c <mpfr_vasnprintf_aux@@Base+0x2058>
   1b7a4:	bl	bf50 <localeconv@plt>
   1b7a8:	ldr	x8, [x0]
   1b7ac:	ldrb	w8, [x8, #1]
   1b7b0:	cbz	w8, 1b7fc <mpfr_vasnprintf_aux@@Base+0x2008>
   1b7b4:	mov	w8, #0x2e                  	// #46
   1b7b8:	b	1b808 <mpfr_vasnprintf_aux@@Base+0x2014>
   1b7bc:	ldr	w8, [x19, #132]
   1b7c0:	tbz	w8, #0, 1b84c <mpfr_vasnprintf_aux@@Base+0x2058>
   1b7c4:	bl	bf50 <localeconv@plt>
   1b7c8:	ldr	x8, [x0]
   1b7cc:	ldrb	w8, [x8, #1]
   1b7d0:	cbz	w8, 1b83c <mpfr_vasnprintf_aux@@Base+0x2048>
   1b7d4:	mov	w8, #0x2e                  	// #46
   1b7d8:	b	1b848 <mpfr_vasnprintf_aux@@Base+0x2054>
   1b7dc:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1b7e0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1b7e4:	mov	w1, #0x41f                 	// #1055
   1b7e8:	add	x0, x0, #0xbad
   1b7ec:	add	x2, x2, #0xc62
   1b7f0:	bl	cb90 <mpfr_assert_fail@plt>
   1b7f4:	ldur	x8, [x29, #-72]
   1b7f8:	b	1a870 <mpfr_vasnprintf_aux@@Base+0x107c>
   1b7fc:	bl	bf50 <localeconv@plt>
   1b800:	ldr	x8, [x0]
   1b804:	ldrb	w8, [x8]
   1b808:	orr	w9, w24, #0x20
   1b80c:	cmp	w9, #0x67
   1b810:	sturb	w8, [x29, #-140]
   1b814:	b.ne	1b820 <mpfr_vasnprintf_aux@@Base+0x202c>  // b.any
   1b818:	mov	w8, w21
   1b81c:	str	x8, [x19, #56]
   1b820:	ldr	x8, [x19, #56]
   1b824:	stur	w8, [x29, #-112]
   1b828:	b	1b84c <mpfr_vasnprintf_aux@@Base+0x2058>
   1b82c:	add	x0, x19, #0xb8
   1b830:	bl	be70 <mpfr_tmp_allocate@plt>
   1b834:	mov	x21, x0
   1b838:	b	1ab70 <mpfr_vasnprintf_aux@@Base+0x137c>
   1b83c:	bl	bf50 <localeconv@plt>
   1b840:	ldr	x8, [x0]
   1b844:	ldrb	w8, [x8]
   1b848:	sturb	w8, [x29, #-140]
   1b84c:	ldr	w21, [x19, #52]
   1b850:	cmp	w25, #0x24
   1b854:	b.hi	1b0bc <mpfr_vasnprintf_aux@@Base+0x18c8>  // b.pmore
   1b858:	mov	w8, #0x1                   	// #1
   1b85c:	mov	x9, #0x11                  	// #17
   1b860:	lsl	x8, x8, x25
   1b864:	movk	x9, #0x13, lsl #32
   1b868:	tst	x8, x9
   1b86c:	b.eq	1b0bc <mpfr_vasnprintf_aux@@Base+0x18c8>  // b.none
   1b870:	orr	w24, w24, #0x20
   1b874:	cmp	w24, #0x65
   1b878:	mov	w8, #0x3                   	// #3
   1b87c:	cinc	x8, x8, eq  // eq = none
   1b880:	add	x0, x8, #0x1
   1b884:	stur	x8, [x29, #-96]
   1b888:	bl	cd50 <mpfr_allocate_func@plt>
   1b88c:	cmp	w24, #0x65
   1b890:	mov	x24, x0
   1b894:	b.ne	1b8c4 <mpfr_vasnprintf_aux@@Base+0x20d0>  // b.any
   1b898:	adrp	x8, 59000 <mpfr_free_pool@@Base+0x387c>
   1b89c:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   1b8a0:	cmp	w27, #0x0
   1b8a4:	add	x8, x8, #0xc5d
   1b8a8:	add	x9, x9, #0xc58
   1b8ac:	csel	x8, x9, x8, ne  // ne = any
   1b8b0:	ldrb	w9, [x8, #4]
   1b8b4:	ldr	w8, [x8]
   1b8b8:	strb	w9, [x24, #4]
   1b8bc:	str	w8, [x24]
   1b8c0:	b	1b8e0 <mpfr_vasnprintf_aux@@Base+0x20ec>
   1b8c4:	mov	w9, #0x2b50                	// #11088
   1b8c8:	movk	w9, #0x30, lsl #16
   1b8cc:	orr	w8, w9, #0x20
   1b8d0:	cmp	w27, #0x0
   1b8d4:	csel	w8, w9, w8, ne  // ne = any
   1b8d8:	str	w8, [x24]
   1b8dc:	ldur	x26, [x29, #-88]
   1b8e0:	mov	x21, x26
   1b8e4:	ldr	x26, [x26, #8]
   1b8e8:	cbnz	x26, 1b8e0 <mpfr_vasnprintf_aux@@Base+0x20ec>
   1b8ec:	mov	w0, #0x10                  	// #16
   1b8f0:	bl	cd50 <mpfr_allocate_func@plt>
   1b8f4:	str	x0, [x21, #8]
   1b8f8:	stp	x24, xzr, [x0]
   1b8fc:	stur	x24, [x29, #-104]
   1b900:	b	1ab28 <mpfr_vasnprintf_aux@@Base+0x1334>
   1b904:	ldr	x9, [x19, #264]
   1b908:	cbz	x9, 1b1ec <mpfr_vasnprintf_aux@@Base+0x19f8>
   1b90c:	ldr	x11, [x19, #64]
   1b910:	lsl	x10, x24, #1
   1b914:	mov	x26, x1
   1b918:	add	x8, x10, x8, lsr #1
   1b91c:	mvn	x11, x11
   1b920:	cmp	x9, x11
   1b924:	str	x8, [x19, #56]
   1b928:	b.cs	1ba58 <mpfr_vasnprintf_aux@@Base+0x2264>  // b.hs, b.nlast
   1b92c:	ldp	x8, x0, [x19, #248]
   1b930:	ldr	x10, [x19, #64]
   1b934:	add	x8, x8, x9
   1b938:	add	x10, x0, x10
   1b93c:	cmp	x10, x8
   1b940:	ldr	x8, [x19, #56]
   1b944:	sub	x8, x25, x8
   1b948:	str	x8, [x19, #56]
   1b94c:	b.cs	1ba78 <mpfr_vasnprintf_aux@@Base+0x2284>  // b.hs, b.nlast
   1b950:	ldr	x8, [x19, #56]
   1b954:	mov	x1, x26
   1b958:	cmp	x8, x27
   1b95c:	add	x8, x8, #0x1
   1b960:	str	x8, [x19, #64]
   1b964:	b.cs	1b980 <mpfr_vasnprintf_aux@@Base+0x218c>  // b.hs, b.nlast
   1b968:	ldr	x2, [x19, #64]
   1b96c:	bl	bad0 <memcpy@plt>
   1b970:	ldr	x8, [x19, #64]
   1b974:	add	x26, x26, x8
   1b978:	sub	x27, x27, x8
   1b97c:	b	1b9a4 <mpfr_vasnprintf_aux@@Base+0x21b0>
   1b980:	mov	x2, x27
   1b984:	bl	bad0 <memcpy@plt>
   1b988:	ldr	x8, [x19, #256]
   1b98c:	mov	w1, #0x30                  	// #48
   1b990:	add	x0, x8, x27
   1b994:	ldr	x8, [x19, #64]
   1b998:	sub	x2, x8, x27
   1b99c:	bl	c1b0 <memset@plt>
   1b9a0:	mov	x27, xzr
   1b9a4:	ldr	x8, [x19, #256]
   1b9a8:	ldr	x9, [x19, #64]
   1b9ac:	cmp	x25, #0x3
   1b9b0:	add	x8, x8, x9
   1b9b4:	str	x8, [x19, #256]
   1b9b8:	b.cc	1ba50 <mpfr_vasnprintf_aux@@Base+0x225c>  // b.lo, b.ul, b.last
   1b9bc:	mov	x25, xzr
   1b9c0:	add	x9, x8, #0x1
   1b9c4:	str	x9, [x19, #256]
   1b9c8:	strb	w21, [x8]
   1b9cc:	cbz	x27, 1ba0c <mpfr_vasnprintf_aux@@Base+0x2218>
   1b9d0:	ldr	x0, [x19, #256]
   1b9d4:	subs	x8, x27, #0x3
   1b9d8:	b.cc	1ba24 <mpfr_vasnprintf_aux@@Base+0x2230>  // b.lo, b.ul, b.last
   1b9dc:	ldrb	w9, [x26, #2]
   1b9e0:	ldrh	w10, [x26], #3
   1b9e4:	mov	x27, x8
   1b9e8:	strb	w9, [x0, #2]
   1b9ec:	strh	w10, [x0]
   1b9f0:	ldr	x8, [x19, #256]
   1b9f4:	add	x25, x25, #0x1
   1b9f8:	cmp	x25, x24
   1b9fc:	add	x8, x8, #0x3
   1ba00:	str	x8, [x19, #256]
   1ba04:	b.cc	1b9c0 <mpfr_vasnprintf_aux@@Base+0x21cc>  // b.lo, b.ul, b.last
   1ba08:	b	1ba50 <mpfr_vasnprintf_aux@@Base+0x225c>
   1ba0c:	ldr	x8, [x19, #256]
   1ba10:	mov	w9, #0x30                  	// #48
   1ba14:	strb	w9, [x8, #2]
   1ba18:	mov	w9, #0x3030                	// #12336
   1ba1c:	strh	w9, [x8]
   1ba20:	b	1b9f0 <mpfr_vasnprintf_aux@@Base+0x21fc>
   1ba24:	mov	x1, x26
   1ba28:	mov	x2, x27
   1ba2c:	bl	bad0 <memcpy@plt>
   1ba30:	ldr	x8, [x19, #256]
   1ba34:	mov	w1, #0x30                  	// #48
   1ba38:	add	x0, x8, x27
   1ba3c:	mov	w8, #0x3                   	// #3
   1ba40:	sub	x2, x8, x27
   1ba44:	bl	c1b0 <memset@plt>
   1ba48:	mov	x27, xzr
   1ba4c:	b	1b9f0 <mpfr_vasnprintf_aux@@Base+0x21fc>
   1ba50:	strb	wzr, [x8]
   1ba54:	b	1b1ec <mpfr_vasnprintf_aux@@Base+0x19f8>
   1ba58:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1ba5c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1ba60:	mov	w1, #0x2d6                 	// #726
   1ba64:	add	x0, x0, #0xbad
   1ba68:	add	x2, x2, #0xd0b
   1ba6c:	bl	cb90 <mpfr_assert_fail@plt>
   1ba70:	ldr	x9, [x19, #264]
   1ba74:	b	1b92c <mpfr_vasnprintf_aux@@Base+0x2138>
   1ba78:	ldr	x1, [x19, #64]
   1ba7c:	add	x0, x19, #0xf8
   1ba80:	bl	1bdc4 <mpfr_vasnprintf_aux@@Base+0x25d0>
   1ba84:	ldr	x0, [x19, #256]
   1ba88:	b	1b950 <mpfr_vasnprintf_aux@@Base+0x215c>
   1ba8c:	mov	x22, x26
   1ba90:	ldp	x26, x25, [x19, #152]
   1ba94:	cmp	x27, x22
   1ba98:	b.eq	1bb3c <mpfr_vasnprintf_aux@@Base+0x2348>  // b.none
   1ba9c:	sub	x23, x22, x27
   1baa0:	cbz	w21, 1bb24 <mpfr_vasnprintf_aux@@Base+0x2330>
   1baa4:	add	x1, x23, #0x1
   1baa8:	mov	x21, x2
   1baac:	cmp	x1, #0x4, lsl #12
   1bab0:	stur	xzr, [x29, #-48]
   1bab4:	b.hi	1bca4 <mpfr_vasnprintf_aux@@Base+0x24b0>  // b.pmore
   1bab8:	add	x9, x1, #0xf
   1babc:	mov	x8, sp
   1bac0:	and	x9, x9, #0xfffffffffffffff0
   1bac4:	sub	x24, x8, x9
   1bac8:	mov	sp, x24
   1bacc:	mov	x0, x24
   1bad0:	mov	x1, x27
   1bad4:	mov	x2, x23
   1bad8:	bl	cb20 <strncpy@plt>
   1badc:	strb	wzr, [x24, x23]
   1bae0:	ldp	q0, q1, [x19, #192]
   1bae4:	sub	x0, x29, #0x48
   1bae8:	sub	x2, x29, #0xd0
   1baec:	mov	x1, x24
   1baf0:	stp	q0, q1, [x29, #-208]
   1baf4:	bl	c0f0 <__gmp_vasprintf@plt>
   1baf8:	tbnz	w0, #31, 1bbec <mpfr_vasnprintf_aux@@Base+0x23f8>
   1bafc:	ldur	x1, [x29, #-72]
   1bb00:	mov	w2, w0
   1bb04:	add	x0, x19, #0xf8
   1bb08:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1bb0c:	ldur	x0, [x29, #-72]
   1bb10:	bl	c8e0 <mpfr_free_str@plt>
   1bb14:	ldur	x0, [x29, #-48]
   1bb18:	cbz	x0, 1bb38 <mpfr_vasnprintf_aux@@Base+0x2344>
   1bb1c:	bl	c460 <mpfr_tmp_free@plt>
   1bb20:	b	1bb38 <mpfr_vasnprintf_aux@@Base+0x2344>
   1bb24:	add	x0, x19, #0xf8
   1bb28:	mov	x1, x27
   1bb2c:	mov	x21, x2
   1bb30:	mov	x2, x23
   1bb34:	bl	1bce0 <mpfr_vasnprintf_aux@@Base+0x24ec>
   1bb38:	mov	x2, x21
   1bb3c:	ldr	x23, [x19, #272]
   1bb40:	ldr	w21, [x19, #172]
   1bb44:	cmn	x23, #0x1
   1bb48:	b.eq	1bc04 <mpfr_vasnprintf_aux@@Base+0x2410>  // b.none
   1bb4c:	mov	w8, #0x7fffffff            	// #2147483647
   1bb50:	cmp	x23, x8
   1bb54:	b.gt	1bc04 <mpfr_vasnprintf_aux@@Base+0x2410>
   1bb58:	cbz	x20, 1bb78 <mpfr_vasnprintf_aux@@Base+0x2384>
   1bb5c:	ldr	x0, [x19, #248]
   1bb60:	ldr	x1, [x19, #264]
   1bb64:	add	w8, w23, #0x1
   1bb68:	sxtw	x2, w8
   1bb6c:	bl	c260 <mpfr_reallocate_func@plt>
   1bb70:	str	x0, [x20]
   1bb74:	b	1bbac <mpfr_vasnprintf_aux@@Base+0x23b8>
   1bb78:	cbz	x2, 1bbac <mpfr_vasnprintf_aux@@Base+0x23b8>
   1bb7c:	sxtw	x8, w23
   1bb80:	ldr	x1, [x19, #248]
   1bb84:	ldr	x0, [x19, #136]
   1bb88:	sub	x9, x2, #0x1
   1bb8c:	cmp	x8, x2
   1bb90:	csel	x20, x8, x9, cc  // cc = lo, ul, last
   1bb94:	mov	x2, x20
   1bb98:	bl	cb20 <strncpy@plt>
   1bb9c:	strb	wzr, [x0, x20]
   1bba0:	ldr	x0, [x19, #248]
   1bba4:	ldr	x1, [x19, #264]
   1bba8:	bl	cc80 <mpfr_free_func@plt>
   1bbac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1bbb0:	ldr	x1, [x0, #2656]
   1bbb4:	add	x0, x0, #0xa60
   1bbb8:	blr	x1
   1bbbc:	str	w21, [x28, x0]
   1bbc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1bbc4:	ldr	x1, [x0, #2592]
   1bbc8:	add	x0, x0, #0xa20
   1bbcc:	blr	x1
   1bbd0:	str	x26, [x28, x0]
   1bbd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1bbd8:	ldr	x1, [x0, #2624]
   1bbdc:	add	x0, x0, #0xa40
   1bbe0:	blr	x1
   1bbe4:	str	x25, [x28, x0]
   1bbe8:	b	1bc74 <mpfr_vasnprintf_aux@@Base+0x2480>
   1bbec:	ldur	x0, [x29, #-48]
   1bbf0:	ldr	w21, [x19, #172]
   1bbf4:	cbnz	x0, 1bcb4 <mpfr_vasnprintf_aux@@Base+0x24c0>
   1bbf8:	ldr	x8, [x19, #272]
   1bbfc:	cmn	x8, #0x1
   1bc00:	b.ne	1bc14 <mpfr_vasnprintf_aux@@Base+0x2420>  // b.any
   1bc04:	orr	w21, w21, #0x10
   1bc08:	bl	cc50 <__errno_location@plt>
   1bc0c:	mov	w8, #0x4b                  	// #75
   1bc10:	str	w8, [x0]
   1bc14:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1bc18:	ldr	x1, [x0, #2656]
   1bc1c:	add	x0, x0, #0xa60
   1bc20:	blr	x1
   1bc24:	str	w21, [x28, x0]
   1bc28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1bc2c:	ldr	x1, [x0, #2592]
   1bc30:	add	x0, x0, #0xa20
   1bc34:	blr	x1
   1bc38:	str	x26, [x28, x0]
   1bc3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1bc40:	ldr	x1, [x0, #2624]
   1bc44:	add	x0, x0, #0xa40
   1bc48:	blr	x1
   1bc4c:	str	x25, [x28, x0]
   1bc50:	cbz	x20, 1bc5c <mpfr_vasnprintf_aux@@Base+0x2468>
   1bc54:	str	xzr, [x20]
   1bc58:	b	1bc64 <mpfr_vasnprintf_aux@@Base+0x2470>
   1bc5c:	ldr	x8, [x19, #144]
   1bc60:	cbz	w8, 1bc70 <mpfr_vasnprintf_aux@@Base+0x247c>
   1bc64:	ldr	x0, [x19, #248]
   1bc68:	ldr	x1, [x19, #264]
   1bc6c:	bl	cc80 <mpfr_free_func@plt>
   1bc70:	mov	w23, #0xffffffff            	// #-1
   1bc74:	mov	w0, w23
   1bc78:	mov	sp, x29
   1bc7c:	ldp	x20, x19, [sp, #80]
   1bc80:	ldp	x22, x21, [sp, #64]
   1bc84:	ldp	x24, x23, [sp, #48]
   1bc88:	ldp	x26, x25, [sp, #32]
   1bc8c:	ldp	x28, x27, [sp, #16]
   1bc90:	ldp	x29, x30, [sp], #96
   1bc94:	ret
   1bc98:	add	x22, x26, #0x2
   1bc9c:	mov	w21, #0x1                   	// #1
   1bca0:	b	1ba90 <mpfr_vasnprintf_aux@@Base+0x229c>
   1bca4:	sub	x0, x29, #0x30
   1bca8:	bl	be70 <mpfr_tmp_allocate@plt>
   1bcac:	mov	x24, x0
   1bcb0:	b	1bacc <mpfr_vasnprintf_aux@@Base+0x22d8>
   1bcb4:	bl	c460 <mpfr_tmp_free@plt>
   1bcb8:	b	1bbf8 <mpfr_vasnprintf_aux@@Base+0x2404>
   1bcbc:	ldur	x0, [x29, #-48]
   1bcc0:	cbnz	x0, 1bcd8 <mpfr_vasnprintf_aux@@Base+0x24e4>
   1bcc4:	ldp	x26, x25, [x19, #152]
   1bcc8:	ldr	w21, [x19, #172]
   1bccc:	b	1bbf8 <mpfr_vasnprintf_aux@@Base+0x2404>
   1bcd0:	ldr	x0, [x19, #184]
   1bcd4:	cbz	x0, 1bcc4 <mpfr_vasnprintf_aux@@Base+0x24d0>
   1bcd8:	bl	c460 <mpfr_tmp_free@plt>
   1bcdc:	b	1bcc4 <mpfr_vasnprintf_aux@@Base+0x24d0>
   1bce0:	sub	sp, sp, #0x30
   1bce4:	stp	x29, x30, [sp, #16]
   1bce8:	stp	x20, x19, [sp, #32]
   1bcec:	ldr	x8, [x0, #24]
   1bcf0:	add	x29, sp, #0x10
   1bcf4:	cmn	x8, #0x1
   1bcf8:	b.eq	1bd20 <mpfr_vasnprintf_aux@@Base+0x252c>  // b.none
   1bcfc:	adds	x8, x8, x2
   1bd00:	cset	w9, cs  // cs = hs, nlast
   1bd04:	orr	x9, x9, x8, lsr #63
   1bd08:	cmp	x9, #0x0
   1bd0c:	mov	x19, x2
   1bd10:	mov	x20, x0
   1bd14:	csinv	x8, x8, xzr, eq  // eq = none
   1bd18:	str	x8, [x0, #24]
   1bd1c:	cbz	x9, 1bd34 <mpfr_vasnprintf_aux@@Base+0x2540>
   1bd20:	mov	w0, #0x1                   	// #1
   1bd24:	ldp	x20, x19, [sp, #32]
   1bd28:	ldp	x29, x30, [sp, #16]
   1bd2c:	add	sp, sp, #0x30
   1bd30:	ret
   1bd34:	ldr	x8, [x20, #16]
   1bd38:	cbz	x8, 1bd78 <mpfr_vasnprintf_aux@@Base+0x2584>
   1bd3c:	mvn	x9, x19
   1bd40:	cmp	x8, x9
   1bd44:	b.cs	1bd80 <mpfr_vasnprintf_aux@@Base+0x258c>  // b.hs, b.nlast
   1bd48:	ldp	x9, x0, [x20]
   1bd4c:	add	x10, x0, x19
   1bd50:	add	x8, x9, x8
   1bd54:	cmp	x10, x8
   1bd58:	b.cs	1bda8 <mpfr_vasnprintf_aux@@Base+0x25b4>  // b.hs, b.nlast
   1bd5c:	mov	x2, x19
   1bd60:	bl	c9a0 <strncat@plt>
   1bd64:	ldr	x8, [x20, #8]
   1bd68:	mov	w0, wzr
   1bd6c:	add	x8, x8, x19
   1bd70:	str	x8, [x20, #8]
   1bd74:	b	1bd24 <mpfr_vasnprintf_aux@@Base+0x2530>
   1bd78:	mov	w0, wzr
   1bd7c:	b	1bd24 <mpfr_vasnprintf_aux@@Base+0x2530>
   1bd80:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1bd84:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1bd88:	add	x0, x0, #0xbad
   1bd8c:	add	x2, x2, #0xbee
   1bd90:	str	x1, [sp, #8]
   1bd94:	mov	w1, #0x27e                 	// #638
   1bd98:	bl	cb90 <mpfr_assert_fail@plt>
   1bd9c:	ldr	x1, [sp, #8]
   1bda0:	ldr	x8, [x20, #16]
   1bda4:	b	1bd48 <mpfr_vasnprintf_aux@@Base+0x2554>
   1bda8:	mov	x0, x20
   1bdac:	str	x1, [sp, #8]
   1bdb0:	mov	x1, x19
   1bdb4:	bl	1bdc4 <mpfr_vasnprintf_aux@@Base+0x25d0>
   1bdb8:	ldr	x1, [sp, #8]
   1bdbc:	ldr	x0, [x20, #8]
   1bdc0:	b	1bd5c <mpfr_vasnprintf_aux@@Base+0x2568>
   1bdc4:	stp	x29, x30, [sp, #-64]!
   1bdc8:	str	x23, [sp, #16]
   1bdcc:	stp	x22, x21, [sp, #32]
   1bdd0:	stp	x20, x19, [sp, #48]
   1bdd4:	ldp	x22, x21, [x0]
   1bdd8:	add	x23, x1, #0x1, lsl #12
   1bddc:	and	x20, x23, #0xfffffffffffff000
   1bde0:	mov	x19, x0
   1bde4:	cmp	x20, x1
   1bde8:	mov	x29, sp
   1bdec:	b.cc	1be40 <mpfr_vasnprintf_aux@@Base+0x264c>  // b.lo, b.ul, b.last
   1bdf0:	cbz	x20, 1be40 <mpfr_vasnprintf_aux@@Base+0x264c>
   1bdf4:	ldr	x1, [x19, #16]
   1bdf8:	orr	x8, x23, #0xfff
   1bdfc:	eor	x8, x8, #0xfffffffffffff000
   1be00:	sub	x21, x21, x22
   1be04:	cmp	x1, x8
   1be08:	b.cs	1be5c <mpfr_vasnprintf_aux@@Base+0x2668>  // b.hs, b.nlast
   1be0c:	ldr	x0, [x19]
   1be10:	add	x2, x1, x20
   1be14:	bl	c260 <mpfr_reallocate_func@plt>
   1be18:	ldr	x8, [x19, #16]
   1be1c:	add	x9, x0, x21
   1be20:	str	x0, [x19]
   1be24:	add	x8, x8, x20
   1be28:	stp	x9, x8, [x19, #8]
   1be2c:	ldp	x20, x19, [sp, #48]
   1be30:	ldp	x22, x21, [sp, #32]
   1be34:	ldr	x23, [sp, #16]
   1be38:	ldp	x29, x30, [sp], #64
   1be3c:	ret
   1be40:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1be44:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1be48:	add	x0, x0, #0xbad
   1be4c:	add	x2, x2, #0xc0c
   1be50:	mov	w1, #0x260                 	// #608
   1be54:	bl	cb90 <mpfr_assert_fail@plt>
   1be58:	b	1bdf4 <mpfr_vasnprintf_aux@@Base+0x2600>
   1be5c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1be60:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1be64:	add	x0, x0, #0xbad
   1be68:	add	x2, x2, #0xc24
   1be6c:	mov	w1, #0x265                 	// #613
   1be70:	bl	cb90 <mpfr_assert_fail@plt>
   1be74:	ldr	x1, [x19, #16]
   1be78:	b	1be0c <mpfr_vasnprintf_aux@@Base+0x2618>
   1be7c:	sub	sp, sp, #0x30
   1be80:	stp	x29, x30, [sp, #16]
   1be84:	stp	x20, x19, [sp, #32]
   1be88:	ldr	x8, [x0, #24]
   1be8c:	add	x29, sp, #0x10
   1be90:	cmn	x8, #0x1
   1be94:	b.eq	1bebc <mpfr_vasnprintf_aux@@Base+0x26c8>  // b.none
   1be98:	adds	x8, x8, x2
   1be9c:	cset	w9, cs  // cs = hs, nlast
   1bea0:	orr	x9, x9, x8, lsr #63
   1bea4:	cmp	x9, #0x0
   1bea8:	mov	x19, x2
   1beac:	mov	x20, x0
   1beb0:	csinv	x8, x8, xzr, eq  // eq = none
   1beb4:	str	x8, [x0, #24]
   1beb8:	cbz	x9, 1bed0 <mpfr_vasnprintf_aux@@Base+0x26dc>
   1bebc:	mov	w0, #0x1                   	// #1
   1bec0:	ldp	x20, x19, [sp, #32]
   1bec4:	ldp	x29, x30, [sp, #16]
   1bec8:	add	sp, sp, #0x30
   1becc:	ret
   1bed0:	ldr	x8, [x20, #16]
   1bed4:	cbz	x8, 1bf08 <mpfr_vasnprintf_aux@@Base+0x2714>
   1bed8:	mvn	x9, x19
   1bedc:	cmp	x8, x9
   1bee0:	b.cs	1bf30 <mpfr_vasnprintf_aux@@Base+0x273c>  // b.hs, b.nlast
   1bee4:	ldp	x9, x0, [x20]
   1bee8:	add	x10, x0, x19
   1beec:	add	x8, x9, x8
   1bef0:	cmp	x10, x8
   1bef4:	b.cs	1bf58 <mpfr_vasnprintf_aux@@Base+0x2764>  // b.hs, b.nlast
   1bef8:	cmp	x19, #0x1
   1befc:	b.ne	1bf10 <mpfr_vasnprintf_aux@@Base+0x271c>  // b.any
   1bf00:	strb	w1, [x0]
   1bf04:	b	1bf18 <mpfr_vasnprintf_aux@@Base+0x2724>
   1bf08:	mov	w0, wzr
   1bf0c:	b	1bec0 <mpfr_vasnprintf_aux@@Base+0x26cc>
   1bf10:	mov	x2, x19
   1bf14:	bl	c1b0 <memset@plt>
   1bf18:	ldr	x8, [x20, #8]
   1bf1c:	mov	w0, wzr
   1bf20:	add	x9, x8, x19
   1bf24:	str	x9, [x20, #8]
   1bf28:	strb	wzr, [x8, x19]
   1bf2c:	b	1bec0 <mpfr_vasnprintf_aux@@Base+0x26cc>
   1bf30:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1bf34:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1bf38:	add	x0, x0, #0xbad
   1bf3c:	add	x2, x2, #0xc24
   1bf40:	stur	w1, [x29, #-4]
   1bf44:	mov	w1, #0x29a                 	// #666
   1bf48:	bl	cb90 <mpfr_assert_fail@plt>
   1bf4c:	ldur	w1, [x29, #-4]
   1bf50:	ldr	x8, [x20, #16]
   1bf54:	b	1bee4 <mpfr_vasnprintf_aux@@Base+0x26f0>
   1bf58:	mov	x0, x20
   1bf5c:	stur	w1, [x29, #-4]
   1bf60:	mov	x1, x19
   1bf64:	bl	1bdc4 <mpfr_vasnprintf_aux@@Base+0x25d0>
   1bf68:	ldur	w1, [x29, #-4]
   1bf6c:	ldr	x0, [x20, #8]
   1bf70:	b	1bef8 <mpfr_vasnprintf_aux@@Base+0x2704>
   1bf74:	stp	x29, x30, [sp, #-32]!
   1bf78:	stp	x20, x19, [sp, #16]
   1bf7c:	mov	x29, sp
   1bf80:	cbz	x0, 1bfac <mpfr_vasnprintf_aux@@Base+0x27b8>
   1bf84:	mov	x19, x0
   1bf88:	ldr	x0, [x19]
   1bf8c:	cbz	x0, 1bf94 <mpfr_vasnprintf_aux@@Base+0x27a0>
   1bf90:	bl	c8e0 <mpfr_free_str@plt>
   1bf94:	ldr	x20, [x19, #8]
   1bf98:	mov	w1, #0x10                  	// #16
   1bf9c:	mov	x0, x19
   1bfa0:	bl	cc80 <mpfr_free_func@plt>
   1bfa4:	mov	x19, x20
   1bfa8:	cbnz	x20, 1bf88 <mpfr_vasnprintf_aux@@Base+0x2794>
   1bfac:	ldp	x20, x19, [sp, #16]
   1bfb0:	ldp	x29, x30, [sp], #32
   1bfb4:	ret
   1bfb8:	sub	sp, sp, #0x80
   1bfbc:	stp	x29, x30, [sp, #48]
   1bfc0:	stp	x26, x25, [sp, #64]
   1bfc4:	stp	x24, x23, [sp, #80]
   1bfc8:	stp	x22, x21, [sp, #96]
   1bfcc:	stp	x20, x19, [sp, #112]
   1bfd0:	ldrb	w8, [x2, #32]
   1bfd4:	mov	x22, x3
   1bfd8:	mov	x20, x2
   1bfdc:	mov	x21, x1
   1bfe0:	orr	w25, w8, #0x20
   1bfe4:	and	w8, w25, #0xff
   1bfe8:	cmp	w8, #0x67
   1bfec:	mov	x19, x0
   1bff0:	add	x29, sp, #0x30
   1bff4:	b.ne	1c004 <mpfr_vasnprintf_aux@@Base+0x2810>  // b.any
   1bff8:	ldrb	w8, [x20]
   1bffc:	and	w24, w8, #0x1
   1c000:	b	1c008 <mpfr_vasnprintf_aux@@Base+0x2814>
   1c004:	mov	w24, #0x1                   	// #1
   1c008:	ldr	w8, [x21, #8]
   1c00c:	tbnz	w8, #31, 1c034 <mpfr_vasnprintf_aux@@Base+0x2840>
   1c010:	ldrb	w8, [x20]
   1c014:	mov	w9, #0xa                   	// #10
   1c018:	tst	w8, w9
   1c01c:	b.eq	1c03c <mpfr_vasnprintf_aux@@Base+0x2848>  // b.none
   1c020:	tst	w8, #0x8
   1c024:	mov	w8, #0x2b                  	// #43
   1c028:	mov	w9, #0x20                  	// #32
   1c02c:	csel	w8, w9, w8, eq  // eq = none
   1c030:	b	1c038 <mpfr_vasnprintf_aux@@Base+0x2844>
   1c034:	mov	w8, #0x2d                  	// #45
   1c038:	strb	w8, [x19, #16]
   1c03c:	ldr	x8, [x21, #16]
   1c040:	cmp	x8, #0x0
   1c044:	b.le	1c070 <mpfr_vasnprintf_aux@@Base+0x287c>
   1c048:	mov	x0, x21
   1c04c:	bl	1c9a4 <mpfr_vasnprintf_aux@@Base+0x31b0>
   1c050:	mov	w8, #0x7fffffff            	// #2147483647
   1c054:	cmp	x0, x8
   1c058:	stur	x0, [x29, #-8]
   1c05c:	b.gt	1c3dc <mpfr_vasnprintf_aux@@Base+0x2be8>
   1c060:	cbz	x22, 1c1b0 <mpfr_vasnprintf_aux@@Base+0x29bc>
   1c064:	ldp	x23, x22, [x22]
   1c068:	stur	x23, [x29, #-8]
   1c06c:	b	1c208 <mpfr_vasnprintf_aux@@Base+0x2a14>
   1c070:	mov	w8, #0x1                   	// #1
   1c074:	mov	w0, #0x2                   	// #2
   1c078:	str	x8, [x19, #56]
   1c07c:	bl	cd50 <mpfr_allocate_func@plt>
   1c080:	mov	w8, #0x30                  	// #48
   1c084:	strh	w8, [x0]
   1c088:	ldr	x8, [x19, #120]
   1c08c:	mov	x23, x0
   1c090:	mov	x26, x8
   1c094:	ldr	x8, [x8, #8]
   1c098:	cbnz	x8, 1c090 <mpfr_vasnprintf_aux@@Base+0x289c>
   1c09c:	mov	w0, #0x10                  	// #16
   1c0a0:	bl	cd50 <mpfr_allocate_func@plt>
   1c0a4:	str	x0, [x26, #8]
   1c0a8:	stp	x23, xzr, [x0]
   1c0ac:	str	x23, [x19, #48]
   1c0b0:	ldr	w8, [x20, #8]
   1c0b4:	cbz	w8, 1c158 <mpfr_vasnprintf_aux@@Base+0x2964>
   1c0b8:	mov	x0, x21
   1c0bc:	bl	1c9a4 <mpfr_vasnprintf_aux@@Base+0x31b0>
   1c0c0:	stur	x0, [x29, #-8]
   1c0c4:	ldr	w8, [x20, #8]
   1c0c8:	mov	x9, xzr
   1c0cc:	sub	x9, x9, w8, sxtw
   1c0d0:	cmp	x0, x9
   1c0d4:	b.ge	1c26c <mpfr_vasnprintf_aux@@Base+0x2a78>  // b.tcont
   1c0d8:	ldr	w9, [x20, #28]
   1c0dc:	sub	w10, w9, #0x1
   1c0e0:	cmp	w10, #0x4
   1c0e4:	b.hi	1c490 <mpfr_vasnprintf_aux@@Base+0x2c9c>  // b.pmore
   1c0e8:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   1c0ec:	add	x9, x9, #0xb9e
   1c0f0:	adr	x11, 1c100 <mpfr_vasnprintf_aux@@Base+0x290c>
   1c0f4:	ldrh	w12, [x9, x10, lsl #1]
   1c0f8:	add	x11, x11, x12, lsl #2
   1c0fc:	br	x11
   1c100:	ldr	w9, [x21, #8]
   1c104:	cmp	w9, #0x0
   1c108:	b.le	1c530 <mpfr_vasnprintf_aux@@Base+0x2d3c>
   1c10c:	sub	w8, w8, #0x1
   1c110:	mov	w9, #0x1                   	// #1
   1c114:	mov	w0, #0x2                   	// #2
   1c118:	str	w8, [x19, #72]
   1c11c:	str	x9, [x19, #88]
   1c120:	bl	cd50 <mpfr_allocate_func@plt>
   1c124:	mov	w8, #0x31                  	// #49
   1c128:	strh	w8, [x0]
   1c12c:	ldr	x8, [x19, #120]
   1c130:	mov	x21, x0
   1c134:	mov	x22, x8
   1c138:	ldr	x8, [x8, #8]
   1c13c:	cbnz	x8, 1c134 <mpfr_vasnprintf_aux@@Base+0x2940>
   1c140:	mov	w0, #0x10                  	// #16
   1c144:	bl	cd50 <mpfr_allocate_func@plt>
   1c148:	str	x0, [x22, #8]
   1c14c:	stp	x21, xzr, [x0]
   1c150:	str	x21, [x19, #80]
   1c154:	b	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c158:	ldr	x8, [x21]
   1c15c:	mov	w9, #0x1                   	// #1
   1c160:	str	w9, [sp, #8]
   1c164:	str	x8, [sp]
   1c168:	ldr	q0, [x21, #16]
   1c16c:	str	q0, [sp, #16]
   1c170:	ldr	w8, [x20, #28]
   1c174:	cmp	w8, #0x4
   1c178:	b.hi	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>  // b.pmore
   1c17c:	adrp	x9, 59000 <mpfr_free_pool@@Base+0x387c>
   1c180:	add	x9, x9, #0xba8
   1c184:	adr	x10, 1c194 <mpfr_vasnprintf_aux@@Base+0x29a0>
   1c188:	ldrb	w11, [x9, x8]
   1c18c:	add	x10, x10, x11, lsl #2
   1c190:	br	x10
   1c194:	fmov	d0, #5.000000000000000000e-01
   1c198:	mov	x0, sp
   1c19c:	bl	bda0 <mpfr_cmp_d@plt>
   1c1a0:	cmp	w0, #0x1
   1c1a4:	b.lt	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>  // b.tstop
   1c1a8:	ldr	x23, [x19, #48]
   1c1ac:	b	1c454 <mpfr_vasnprintf_aux@@Base+0x2c60>
   1c1b0:	ldrsw	x8, [x20, #8]
   1c1b4:	ldr	x9, [x20, #32]
   1c1b8:	ldp	q0, q1, [x20]
   1c1bc:	mov	x4, sp
   1c1c0:	add	x8, x0, x8
   1c1c4:	add	x2, x8, #0x1
   1c1c8:	sub	x0, x29, #0x8
   1c1cc:	mov	w1, #0xa                   	// #10
   1c1d0:	mov	x3, x21
   1c1d4:	str	x9, [sp, #32]
   1c1d8:	stp	q0, q1, [sp]
   1c1dc:	bl	1c86c <mpfr_vasnprintf_aux@@Base+0x3078>
   1c1e0:	ldr	x8, [x19, #120]
   1c1e4:	mov	x22, x0
   1c1e8:	mov	x23, x8
   1c1ec:	ldr	x8, [x8, #8]
   1c1f0:	cbnz	x8, 1c1e8 <mpfr_vasnprintf_aux@@Base+0x29f4>
   1c1f4:	mov	w0, #0x10                  	// #16
   1c1f8:	bl	cd50 <mpfr_allocate_func@plt>
   1c1fc:	str	x0, [x23, #8]
   1c200:	stp	x22, xzr, [x0]
   1c204:	ldur	x23, [x29, #-8]
   1c208:	ldr	w8, [x21, #8]
   1c20c:	cmp	w8, #0x0
   1c210:	cinc	x21, x22, lt  // lt = tstop
   1c214:	mov	x0, x21
   1c218:	str	x21, [x19, #48]
   1c21c:	bl	bb70 <strlen@plt>
   1c220:	mov	x22, x0
   1c224:	cmp	x23, x0
   1c228:	b.ls	1c238 <mpfr_vasnprintf_aux@@Base+0x2a44>  // b.plast
   1c22c:	sub	w8, w23, w22
   1c230:	mov	x23, x22
   1c234:	str	w8, [x19, #64]
   1c238:	str	x23, [x19, #56]
   1c23c:	ldrb	w8, [x20]
   1c240:	tbz	w8, #4, 1c3a8 <mpfr_vasnprintf_aux@@Base+0x2bb4>
   1c244:	bl	bf50 <localeconv@plt>
   1c248:	ldr	x8, [x0, #8]
   1c24c:	ldrb	w8, [x8]
   1c250:	cbz	w8, 1c3a0 <mpfr_vasnprintf_aux@@Base+0x2bac>
   1c254:	bl	bf50 <localeconv@plt>
   1c258:	ldr	x8, [x0, #8]
   1c25c:	ldrb	w8, [x8, #1]
   1c260:	cbz	w8, 1c394 <mpfr_vasnprintf_aux@@Base+0x2ba0>
   1c264:	mov	w8, wzr
   1c268:	b	1c3a0 <mpfr_vasnprintf_aux@@Base+0x2bac>
   1c26c:	cbz	x22, 1c27c <mpfr_vasnprintf_aux@@Base+0x2a88>
   1c270:	ldp	x23, x22, [x22]
   1c274:	stur	x23, [x29, #-8]
   1c278:	b	1c2d4 <mpfr_vasnprintf_aux@@Base+0x2ae0>
   1c27c:	ldr	x9, [x20, #32]
   1c280:	ldp	q0, q1, [x20]
   1c284:	sxtw	x8, w8
   1c288:	add	x8, x0, x8
   1c28c:	add	x2, x8, #0x1
   1c290:	sub	x0, x29, #0x8
   1c294:	mov	x4, sp
   1c298:	mov	w1, #0xa                   	// #10
   1c29c:	mov	x3, x21
   1c2a0:	str	x9, [sp, #32]
   1c2a4:	stp	q0, q1, [sp]
   1c2a8:	bl	1c86c <mpfr_vasnprintf_aux@@Base+0x3078>
   1c2ac:	ldr	x8, [x19, #120]
   1c2b0:	mov	x22, x0
   1c2b4:	mov	x23, x8
   1c2b8:	ldr	x8, [x8, #8]
   1c2bc:	cbnz	x8, 1c2b4 <mpfr_vasnprintf_aux@@Base+0x2ac0>
   1c2c0:	mov	w0, #0x10                  	// #16
   1c2c4:	bl	cd50 <mpfr_allocate_func@plt>
   1c2c8:	str	x0, [x23, #8]
   1c2cc:	stp	x22, xzr, [x0]
   1c2d0:	ldur	x23, [x29, #-8]
   1c2d4:	ldr	w8, [x21, #8]
   1c2d8:	cmp	w8, #0x0
   1c2dc:	cinc	x21, x22, lt  // lt = tstop
   1c2e0:	cmp	x23, #0x1
   1c2e4:	b.ne	1c314 <mpfr_vasnprintf_aux@@Base+0x2b20>  // b.any
   1c2e8:	ldr	x8, [x19, #48]
   1c2ec:	and	w9, w25, #0xff
   1c2f0:	mov	w10, #0x31                  	// #49
   1c2f4:	cmp	w9, #0x67
   1c2f8:	strb	w10, [x8]
   1c2fc:	b.ne	1c308 <mpfr_vasnprintf_aux@@Base+0x2b14>  // b.any
   1c300:	ldrb	w8, [x20]
   1c304:	tbz	w8, #0, 1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c308:	ldr	w8, [x20, #8]
   1c30c:	str	w8, [x19, #72]
   1c310:	b	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c314:	neg	w22, w23
   1c318:	mov	x0, x21
   1c31c:	str	x21, [x19, #80]
   1c320:	str	w22, [x19, #72]
   1c324:	bl	bb70 <strlen@plt>
   1c328:	tbnz	w24, #0, 1c34c <mpfr_vasnprintf_aux@@Base+0x2b58>
   1c32c:	sub	x8, x21, #0x1
   1c330:	subs	x9, x0, #0x1
   1c334:	b.cc	1c348 <mpfr_vasnprintf_aux@@Base+0x2b54>  // b.lo, b.ul, b.last
   1c338:	ldrb	w10, [x8, x0]
   1c33c:	mov	x0, x9
   1c340:	cmp	w10, #0x30
   1c344:	b.eq	1c330 <mpfr_vasnprintf_aux@@Base+0x2b3c>  // b.none
   1c348:	add	x0, x9, #0x1
   1c34c:	lsr	x8, x0, #31
   1c350:	cbnz	x8, 1c3dc <mpfr_vasnprintf_aux@@Base+0x2be8>
   1c354:	and	w8, w25, #0xff
   1c358:	cmp	w8, #0x67
   1c35c:	str	x0, [x19, #88]
   1c360:	b.ne	1c36c <mpfr_vasnprintf_aux@@Base+0x2b78>  // b.any
   1c364:	ldrb	w8, [x20]
   1c368:	tbz	w8, #0, 1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c36c:	ldr	w8, [x20, #8]
   1c370:	cmp	w8, #0x1
   1c374:	b.lt	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>  // b.tstop
   1c378:	add	x9, x0, w22, sxtw
   1c37c:	cmp	x9, x8
   1c380:	b.cs	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>  // b.hs, b.nlast
   1c384:	sub	w9, w23, w0
   1c388:	add	w8, w9, w8
   1c38c:	str	w8, [x19, #96]
   1c390:	b	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c394:	bl	bf50 <localeconv@plt>
   1c398:	ldr	x8, [x0, #8]
   1c39c:	ldrb	w8, [x8]
   1c3a0:	ldr	x23, [x19, #56]
   1c3a4:	strb	w8, [x19, #40]
   1c3a8:	sub	x25, x22, x23
   1c3ac:	tbnz	w24, #0, 1c3d0 <mpfr_vasnprintf_aux@@Base+0x2bdc>
   1c3b0:	add	x8, x22, x21
   1c3b4:	add	x25, x25, #0x1
   1c3b8:	sub	x8, x8, #0x1
   1c3bc:	ldrb	w9, [x8], #-1
   1c3c0:	subs	x25, x25, #0x1
   1c3c4:	b.eq	1c3d0 <mpfr_vasnprintf_aux@@Base+0x2bdc>  // b.none
   1c3c8:	cmp	w9, #0x30
   1c3cc:	b.eq	1c3bc <mpfr_vasnprintf_aux@@Base+0x2bc8>  // b.none
   1c3d0:	cbz	x25, 1c414 <mpfr_vasnprintf_aux@@Base+0x2c20>
   1c3d4:	lsr	x8, x25, #31
   1c3d8:	cbz	x8, 1c3e4 <mpfr_vasnprintf_aux@@Base+0x2bf0>
   1c3dc:	mov	w0, #0xffffffff            	// #-1
   1c3e0:	b	1c580 <mpfr_vasnprintf_aux@@Base+0x2d8c>
   1c3e4:	add	x21, x21, x23
   1c3e8:	bl	bf50 <localeconv@plt>
   1c3ec:	ldr	x8, [x0]
   1c3f0:	ldrb	w8, [x8, #1]
   1c3f4:	cbz	w8, 1c400 <mpfr_vasnprintf_aux@@Base+0x2c0c>
   1c3f8:	mov	w8, #0x2e                  	// #46
   1c3fc:	b	1c40c <mpfr_vasnprintf_aux@@Base+0x2c18>
   1c400:	bl	bf50 <localeconv@plt>
   1c404:	ldr	x8, [x0]
   1c408:	ldrb	w8, [x8]
   1c40c:	strb	w8, [x19, #68]
   1c410:	stp	x21, x25, [x19, #80]
   1c414:	cbz	w24, 1c480 <mpfr_vasnprintf_aux@@Base+0x2c8c>
   1c418:	ldrsw	x8, [x20, #8]
   1c41c:	cmp	x25, x8
   1c420:	b.cs	1c480 <mpfr_vasnprintf_aux@@Base+0x2c8c>  // b.hs, b.nlast
   1c424:	bl	bf50 <localeconv@plt>
   1c428:	ldr	x8, [x0]
   1c42c:	ldrb	w8, [x8, #1]
   1c430:	cbz	w8, 1c460 <mpfr_vasnprintf_aux@@Base+0x2c6c>
   1c434:	mov	w8, #0x2e                  	// #46
   1c438:	b	1c46c <mpfr_vasnprintf_aux@@Base+0x2c78>
   1c43c:	ldr	w8, [x21, #8]
   1c440:	cmp	w8, #0x0
   1c444:	b.gt	1c454 <mpfr_vasnprintf_aux@@Base+0x2c60>
   1c448:	b	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c44c:	ldr	w8, [x21, #8]
   1c450:	tbz	w8, #31, 1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c454:	mov	w8, #0x31                  	// #49
   1c458:	strb	w8, [x23]
   1c45c:	b	1c534 <mpfr_vasnprintf_aux@@Base+0x2d40>
   1c460:	bl	bf50 <localeconv@plt>
   1c464:	ldr	x8, [x0]
   1c468:	ldrb	w8, [x8]
   1c46c:	strb	w8, [x19, #68]
   1c470:	ldr	w8, [x20, #8]
   1c474:	ldr	w9, [x19, #88]
   1c478:	sub	w8, w8, w9
   1c47c:	str	w8, [x19, #96]
   1c480:	ldrb	w8, [x20]
   1c484:	tbnz	w8, #0, 1c554 <mpfr_vasnprintf_aux@@Base+0x2d60>
   1c488:	mov	w0, wzr
   1c48c:	b	1c580 <mpfr_vasnprintf_aux@@Base+0x2d8c>
   1c490:	ldr	x8, [x21]
   1c494:	mov	w10, #0x38                  	// #56
   1c498:	cmp	x8, #0x38
   1c49c:	csel	x22, x8, x10, gt
   1c4a0:	cbnz	w9, 1c59c <mpfr_vasnprintf_aux@@Base+0x2da8>
   1c4a4:	add	x22, x22, #0x8
   1c4a8:	mov	x0, sp
   1c4ac:	mov	x1, x22
   1c4b0:	bl	cad0 <mpfr_init2@plt>
   1c4b4:	mov	x0, sp
   1c4b8:	mov	x1, x22
   1c4bc:	bl	bf80 <mpfr_set_prec@plt>
   1c4c0:	ldrsw	x8, [x20, #8]
   1c4c4:	mov	x0, sp
   1c4c8:	mov	x2, xzr
   1c4cc:	mov	w3, wzr
   1c4d0:	neg	x1, x8
   1c4d4:	bl	bb40 <mpfr_set_si_2exp@plt>
   1c4d8:	mov	x0, sp
   1c4dc:	mov	x1, sp
   1c4e0:	mov	w2, #0x3                   	// #3
   1c4e4:	bl	be30 <mpfr_exp10@plt>
   1c4e8:	mov	x0, sp
   1c4ec:	mov	x1, sp
   1c4f0:	mov	w2, #0x1                   	// #1
   1c4f4:	mov	w3, wzr
   1c4f8:	bl	c950 <mpfr_div_2ui@plt>
   1c4fc:	mov	x0, sp
   1c500:	mov	x1, x21
   1c504:	bl	ca00 <mpfr_cmpabs@plt>
   1c508:	add	x22, x22, #0x8
   1c50c:	cbz	w0, 1c4b4 <mpfr_vasnprintf_aux@@Base+0x2cc0>
   1c510:	mov	w23, w0
   1c514:	mov	x0, sp
   1c518:	bl	c110 <mpfr_clear@plt>
   1c51c:	ldr	w8, [x20, #8]
   1c520:	tbz	w23, #31, 1c530 <mpfr_vasnprintf_aux@@Base+0x2d3c>
   1c524:	b	1c10c <mpfr_vasnprintf_aux@@Base+0x2918>
   1c528:	ldr	w9, [x21, #8]
   1c52c:	tbnz	w9, #31, 1c10c <mpfr_vasnprintf_aux@@Base+0x2918>
   1c530:	str	w8, [x19, #72]
   1c534:	ldrb	w8, [x20]
   1c538:	tbnz	w8, #0, 1c554 <mpfr_vasnprintf_aux@@Base+0x2d60>
   1c53c:	ldr	w8, [x19, #72]
   1c540:	cbnz	w8, 1c554 <mpfr_vasnprintf_aux@@Base+0x2d60>
   1c544:	ldr	x8, [x19, #88]
   1c548:	cbnz	x8, 1c554 <mpfr_vasnprintf_aux@@Base+0x2d60>
   1c54c:	ldr	w8, [x19, #96]
   1c550:	cbz	w8, 1c488 <mpfr_vasnprintf_aux@@Base+0x2c94>
   1c554:	bl	bf50 <localeconv@plt>
   1c558:	ldr	x8, [x0]
   1c55c:	ldrb	w8, [x8, #1]
   1c560:	cbz	w8, 1c56c <mpfr_vasnprintf_aux@@Base+0x2d78>
   1c564:	mov	w8, #0x2e                  	// #46
   1c568:	b	1c578 <mpfr_vasnprintf_aux@@Base+0x2d84>
   1c56c:	bl	bf50 <localeconv@plt>
   1c570:	ldr	x8, [x0]
   1c574:	ldrb	w8, [x8]
   1c578:	mov	w0, wzr
   1c57c:	strb	w8, [x19, #68]
   1c580:	ldp	x20, x19, [sp, #112]
   1c584:	ldp	x22, x21, [sp, #96]
   1c588:	ldp	x24, x23, [sp, #80]
   1c58c:	ldp	x26, x25, [sp, #64]
   1c590:	ldp	x29, x30, [sp, #48]
   1c594:	add	sp, sp, #0x80
   1c598:	ret
   1c59c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1c5a0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1c5a4:	add	x0, x0, #0xbad
   1c5a8:	add	x2, x2, #0xce9
   1c5ac:	mov	w1, #0x58f                 	// #1423
   1c5b0:	bl	cb90 <mpfr_assert_fail@plt>
   1c5b4:	b	1c4a4 <mpfr_vasnprintf_aux@@Base+0x2cb0>
   1c5b8:	sub	sp, sp, #0x80
   1c5bc:	stp	x29, x30, [sp, #48]
   1c5c0:	stp	x26, x25, [sp, #64]
   1c5c4:	stp	x24, x23, [sp, #80]
   1c5c8:	stp	x22, x21, [sp, #96]
   1c5cc:	stp	x20, x19, [sp, #112]
   1c5d0:	ldrb	w8, [x2, #32]
   1c5d4:	mov	w9, #0x65                  	// #101
   1c5d8:	mov	w10, #0x45                  	// #69
   1c5dc:	mov	x20, x2
   1c5e0:	orr	w11, w8, #0x2
   1c5e4:	orr	w24, w8, #0x20
   1c5e8:	and	w8, w11, #0xff
   1c5ec:	and	w11, w24, #0xff
   1c5f0:	cmp	w8, #0x47
   1c5f4:	mov	x21, x1
   1c5f8:	csel	w23, w10, w9, eq  // eq = none
   1c5fc:	cmp	w11, #0x67
   1c600:	mov	x19, x0
   1c604:	add	x29, sp, #0x30
   1c608:	b.ne	1c618 <mpfr_vasnprintf_aux@@Base+0x2e24>  // b.any
   1c60c:	ldrb	w8, [x20]
   1c610:	and	w25, w8, #0x1
   1c614:	b	1c624 <mpfr_vasnprintf_aux@@Base+0x2e30>
   1c618:	ldr	w8, [x20, #8]
   1c61c:	cmp	w8, #0x0
   1c620:	cset	w25, gt
   1c624:	ldr	w8, [x21, #8]
   1c628:	tbnz	w8, #31, 1c650 <mpfr_vasnprintf_aux@@Base+0x2e5c>
   1c62c:	ldrb	w9, [x20]
   1c630:	mov	w10, #0xa                   	// #10
   1c634:	tst	w9, w10
   1c638:	b.eq	1c658 <mpfr_vasnprintf_aux@@Base+0x2e64>  // b.none
   1c63c:	tst	w9, #0x8
   1c640:	mov	w9, #0x2b                  	// #43
   1c644:	mov	w10, #0x20                  	// #32
   1c648:	csel	w9, w10, w9, eq  // eq = none
   1c64c:	b	1c654 <mpfr_vasnprintf_aux@@Base+0x2e60>
   1c650:	mov	w9, #0x2d                  	// #45
   1c654:	strb	w9, [x19, #16]
   1c658:	mov	w9, #0x1                   	// #1
   1c65c:	str	x9, [x19, #56]
   1c660:	cbz	x3, 1c670 <mpfr_vasnprintf_aux@@Base+0x2e7c>
   1c664:	ldp	x9, x22, [x3]
   1c668:	stur	x9, [x29, #-8]
   1c66c:	b	1c6c8 <mpfr_vasnprintf_aux@@Base+0x2ed4>
   1c670:	ldrsw	x8, [x20, #8]
   1c674:	ldr	x9, [x20, #32]
   1c678:	ldp	q0, q1, [x20]
   1c67c:	sub	x0, x29, #0x8
   1c680:	cmp	w8, #0x0
   1c684:	csinc	x2, xzr, x8, lt  // lt = tstop
   1c688:	mov	x4, sp
   1c68c:	mov	w1, #0xa                   	// #10
   1c690:	mov	x3, x21
   1c694:	str	x9, [sp, #32]
   1c698:	stp	q0, q1, [sp]
   1c69c:	bl	1c86c <mpfr_vasnprintf_aux@@Base+0x3078>
   1c6a0:	ldr	x8, [x19, #120]
   1c6a4:	mov	x22, x0
   1c6a8:	mov	x26, x8
   1c6ac:	ldr	x8, [x8, #8]
   1c6b0:	cbnz	x8, 1c6a8 <mpfr_vasnprintf_aux@@Base+0x2eb4>
   1c6b4:	mov	w0, #0x10                  	// #16
   1c6b8:	bl	cd50 <mpfr_allocate_func@plt>
   1c6bc:	str	x0, [x26, #8]
   1c6c0:	stp	x22, xzr, [x0]
   1c6c4:	ldr	w8, [x21, #8]
   1c6c8:	cmp	w8, #0x0
   1c6cc:	cinc	x26, x22, lt  // lt = tstop
   1c6d0:	str	x26, [x19, #48]
   1c6d4:	ldr	w22, [x20, #8]
   1c6d8:	cbz	w22, 1c748 <mpfr_vasnprintf_aux@@Base+0x2f54>
   1c6dc:	add	x21, x26, #0x1
   1c6e0:	mov	x0, x21
   1c6e4:	bl	bb70 <strlen@plt>
   1c6e8:	tbnz	w25, #0, 1c708 <mpfr_vasnprintf_aux@@Base+0x2f14>
   1c6ec:	subs	x8, x0, #0x1
   1c6f0:	b.cc	1c704 <mpfr_vasnprintf_aux@@Base+0x2f10>  // b.lo, b.ul, b.last
   1c6f4:	ldrb	w9, [x26, x0]
   1c6f8:	mov	x0, x8
   1c6fc:	cmp	w9, #0x30
   1c700:	b.eq	1c6ec <mpfr_vasnprintf_aux@@Base+0x2ef8>  // b.none
   1c704:	add	x0, x8, #0x1
   1c708:	lsr	x8, x0, #31
   1c70c:	cbz	x8, 1c718 <mpfr_vasnprintf_aux@@Base+0x2f24>
   1c710:	mov	w0, #0xffffffff            	// #-1
   1c714:	b	1c850 <mpfr_vasnprintf_aux@@Base+0x305c>
   1c718:	cbz	x0, 1c748 <mpfr_vasnprintf_aux@@Base+0x2f54>
   1c71c:	and	w8, w24, #0xff
   1c720:	cmp	w8, #0x67
   1c724:	stp	x21, x0, [x19, #80]
   1c728:	b.ne	1c734 <mpfr_vasnprintf_aux@@Base+0x2f40>  // b.any
   1c72c:	ldrb	w8, [x20]
   1c730:	tbz	w8, #0, 1c748 <mpfr_vasnprintf_aux@@Base+0x2f54>
   1c734:	cmp	w22, #0x1
   1c738:	b.lt	1c748 <mpfr_vasnprintf_aux@@Base+0x2f54>  // b.tstop
   1c73c:	subs	w8, w22, w0
   1c740:	b.le	1c748 <mpfr_vasnprintf_aux@@Base+0x2f54>
   1c744:	str	w8, [x19, #96]
   1c748:	ldr	x8, [x19, #88]
   1c74c:	cbnz	x8, 1c758 <mpfr_vasnprintf_aux@@Base+0x2f64>
   1c750:	ldrb	w8, [x20]
   1c754:	tbz	w8, #0, 1c780 <mpfr_vasnprintf_aux@@Base+0x2f8c>
   1c758:	bl	bf50 <localeconv@plt>
   1c75c:	ldr	x8, [x0]
   1c760:	ldrb	w8, [x8, #1]
   1c764:	cbz	w8, 1c770 <mpfr_vasnprintf_aux@@Base+0x2f7c>
   1c768:	mov	w8, #0x2e                  	// #46
   1c76c:	b	1c77c <mpfr_vasnprintf_aux@@Base+0x2f88>
   1c770:	bl	bf50 <localeconv@plt>
   1c774:	ldr	x8, [x0]
   1c778:	ldrb	w8, [x8]
   1c77c:	strb	w8, [x19, #68]
   1c780:	ldur	x8, [x29, #-8]
   1c784:	mov	w9, #0x1                   	// #1
   1c788:	mov	w10, #0x3                   	// #3
   1c78c:	sub	x11, x8, #0x1
   1c790:	sub	x9, x9, x8
   1c794:	cmp	x8, #0x0
   1c798:	csel	x9, x11, x9, gt
   1c79c:	cmp	x9, #0xa
   1c7a0:	stur	x11, [x29, #-8]
   1c7a4:	str	x10, [x19, #112]
   1c7a8:	b.cc	1c7d4 <mpfr_vasnprintf_aux@@Base+0x2fe0>  // b.lo, b.ul, b.last
   1c7ac:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   1c7b0:	mov	w8, #0x3                   	// #3
   1c7b4:	movk	x10, #0xcccd
   1c7b8:	umulh	x11, x9, x10
   1c7bc:	cmp	x9, #0x63
   1c7c0:	lsr	x9, x11, #3
   1c7c4:	add	x8, x8, #0x1
   1c7c8:	b.hi	1c7b8 <mpfr_vasnprintf_aux@@Base+0x2fc4>  // b.pmore
   1c7cc:	cmp	x8, #0x3
   1c7d0:	b.hi	1c7d8 <mpfr_vasnprintf_aux@@Base+0x2fe4>  // b.pmore
   1c7d4:	mov	w8, #0x4                   	// #4
   1c7d8:	add	x0, x8, #0x1
   1c7dc:	str	x8, [x19, #112]
   1c7e0:	bl	cd50 <mpfr_allocate_func@plt>
   1c7e4:	ldr	x8, [x19, #120]
   1c7e8:	mov	x20, x0
   1c7ec:	mov	x21, x8
   1c7f0:	ldr	x8, [x8, #8]
   1c7f4:	cbnz	x8, 1c7ec <mpfr_vasnprintf_aux@@Base+0x2ff8>
   1c7f8:	mov	w0, #0x10                  	// #16
   1c7fc:	bl	cd50 <mpfr_allocate_func@plt>
   1c800:	str	x0, [x21, #8]
   1c804:	stp	x20, xzr, [x0]
   1c808:	mov	x0, sp
   1c80c:	str	x20, [x19, #104]
   1c810:	strb	w23, [sp]
   1c814:	strb	wzr, [sp, #1]
   1c818:	mov	x19, sp
   1c81c:	bl	bb70 <strlen@plt>
   1c820:	mov	w9, #0x2b25                	// #11045
   1c824:	ldur	x2, [x29, #-8]
   1c828:	add	x8, x19, x0
   1c82c:	movk	w9, #0x322e, lsl #16
   1c830:	str	w9, [x8]
   1c834:	mov	w9, #0x6c32                	// #27698
   1c838:	movk	w9, #0x64, lsl #16
   1c83c:	mov	x1, sp
   1c840:	mov	x0, x20
   1c844:	stur	w9, [x8, #3]
   1c848:	bl	bdc0 <sprintf@plt>
   1c84c:	asr	w0, w0, #31
   1c850:	ldp	x20, x19, [sp, #112]
   1c854:	ldp	x22, x21, [sp, #96]
   1c858:	ldp	x24, x23, [sp, #80]
   1c85c:	ldp	x26, x25, [sp, #64]
   1c860:	ldp	x29, x30, [sp, #48]
   1c864:	add	sp, sp, #0x80
   1c868:	ret
   1c86c:	stp	x29, x30, [sp, #-96]!
   1c870:	stp	x26, x25, [sp, #32]
   1c874:	stp	x24, x23, [sp, #48]
   1c878:	stp	x22, x21, [sp, #64]
   1c87c:	stp	x20, x19, [sp, #80]
   1c880:	ldr	x8, [x4, #16]
   1c884:	mov	x22, x4
   1c888:	mov	x19, x3
   1c88c:	mov	x20, x2
   1c890:	mov	w21, w1
   1c894:	mov	x23, x0
   1c898:	str	x27, [sp, #16]
   1c89c:	mov	x29, sp
   1c8a0:	cbnz	x8, 1c954 <mpfr_vasnprintf_aux@@Base+0x3160>
   1c8a4:	cmp	x20, #0x9
   1c8a8:	b.cc	1c954 <mpfr_vasnprintf_aux@@Base+0x3160>  // b.lo, b.ul, b.last
   1c8ac:	cmp	w21, #0x25
   1c8b0:	mov	w8, #0x3c                  	// #60
   1c8b4:	mov	w9, #0x56                  	// #86
   1c8b8:	mov	w10, #0x2f                  	// #47
   1c8bc:	csel	w8, w9, w8, lt  // lt = tstop
   1c8c0:	cmp	w21, #0xb
   1c8c4:	adrp	x25, 59000 <mpfr_free_pool@@Base+0x387c>
   1c8c8:	csel	w8, w10, w8, lt  // lt = tstop
   1c8cc:	adrp	x26, 59000 <mpfr_free_pool@@Base+0x387c>
   1c8d0:	mov	w24, #0x8                   	// #8
   1c8d4:	add	x25, x25, #0xbad
   1c8d8:	add	w27, w8, w21
   1c8dc:	add	x26, x26, #0xccc
   1c8e0:	mov	w5, #0x1                   	// #1
   1c8e4:	mov	x0, xzr
   1c8e8:	mov	x1, x23
   1c8ec:	mov	w2, w21
   1c8f0:	mov	x3, x24
   1c8f4:	mov	x4, x19
   1c8f8:	bl	c550 <mpfr_get_str@plt>
   1c8fc:	mov	x8, x0
   1c900:	ldrb	w9, [x8], #1
   1c904:	cmp	w9, #0x2d
   1c908:	csel	x8, x0, x8, ne  // ne = any
   1c90c:	sub	x9, x8, #0x1
   1c910:	ldrb	w10, [x9, #1]!
   1c914:	cmp	w10, w27, uxtb
   1c918:	b.eq	1c910 <mpfr_vasnprintf_aux@@Base+0x311c>  // b.none
   1c91c:	add	x8, x8, x24
   1c920:	cmp	x9, x8
   1c924:	b.cc	1c988 <mpfr_vasnprintf_aux@@Base+0x3194>  // b.lo, b.ul, b.last
   1c928:	bl	c8e0 <mpfr_free_str@plt>
   1c92c:	tbnz	x24, #63, 1c940 <mpfr_vasnprintf_aux@@Base+0x314c>
   1c930:	lsl	x24, x24, #1
   1c934:	cmp	x24, x20
   1c938:	b.cc	1c8e0 <mpfr_vasnprintf_aux@@Base+0x30ec>  // b.lo, b.ul, b.last
   1c93c:	b	1c954 <mpfr_vasnprintf_aux@@Base+0x3160>
   1c940:	mov	w1, #0x3df                 	// #991
   1c944:	mov	x0, x25
   1c948:	mov	x2, x26
   1c94c:	bl	cb90 <mpfr_assert_fail@plt>
   1c950:	b	1c930 <mpfr_vasnprintf_aux@@Base+0x313c>
   1c954:	ldr	w5, [x22, #28]
   1c958:	mov	x1, x23
   1c95c:	mov	w2, w21
   1c960:	mov	x3, x20
   1c964:	mov	x4, x19
   1c968:	ldp	x20, x19, [sp, #80]
   1c96c:	ldp	x22, x21, [sp, #64]
   1c970:	ldp	x24, x23, [sp, #48]
   1c974:	ldp	x26, x25, [sp, #32]
   1c978:	ldr	x27, [sp, #16]
   1c97c:	mov	x0, xzr
   1c980:	ldp	x29, x30, [sp], #96
   1c984:	b	c550 <mpfr_get_str@plt>
   1c988:	ldp	x20, x19, [sp, #80]
   1c98c:	ldp	x22, x21, [sp, #64]
   1c990:	ldp	x24, x23, [sp, #48]
   1c994:	ldp	x26, x25, [sp, #32]
   1c998:	ldr	x27, [sp, #16]
   1c99c:	ldp	x29, x30, [sp], #96
   1c9a0:	ret
   1c9a4:	sub	sp, sp, #0x50
   1c9a8:	stp	x29, x30, [sp, #32]
   1c9ac:	stp	x20, x19, [sp, #64]
   1c9b0:	ldr	x8, [x0]
   1c9b4:	mov	w9, #0x40                  	// #64
   1c9b8:	mov	x19, x0
   1c9bc:	mov	x0, sp
   1c9c0:	cmp	x8, #0x40
   1c9c4:	csel	x1, x8, x9, gt
   1c9c8:	str	x21, [sp, #48]
   1c9cc:	add	x29, sp, #0x20
   1c9d0:	bl	cad0 <mpfr_init2@plt>
   1c9d4:	ldr	x0, [x19, #16]
   1c9d8:	mov	w1, #0xa                   	// #10
   1c9dc:	mov	w2, #0x1                   	// #1
   1c9e0:	bl	cbd0 <mpfr_ceil_mul@plt>
   1c9e4:	sub	x21, x0, #0x1
   1c9e8:	mov	x20, x0
   1c9ec:	mov	x0, sp
   1c9f0:	mov	w3, #0x2                   	// #2
   1c9f4:	mov	x1, x21
   1c9f8:	mov	x2, xzr
   1c9fc:	bl	bb40 <mpfr_set_si_2exp@plt>
   1ca00:	mov	x0, sp
   1ca04:	mov	x2, sp
   1ca08:	mov	w1, #0xa                   	// #10
   1ca0c:	mov	w3, #0x2                   	// #2
   1ca10:	bl	ca60 <mpfr_ui_pow@plt>
   1ca14:	mov	x1, sp
   1ca18:	mov	x0, x19
   1ca1c:	bl	ca00 <mpfr_cmpabs@plt>
   1ca20:	sub	x8, x20, #0x2
   1ca24:	cmp	w0, #0x0
   1ca28:	mov	x0, sp
   1ca2c:	csel	x19, x8, x21, lt  // lt = tstop
   1ca30:	bl	c110 <mpfr_clear@plt>
   1ca34:	mov	x0, x19
   1ca38:	ldp	x20, x19, [sp, #64]
   1ca3c:	ldr	x21, [sp, #48]
   1ca40:	ldp	x29, x30, [sp, #32]
   1ca44:	add	sp, sp, #0x50
   1ca48:	ret

000000000001ca4c <mpfr_const_pi_internal@@Base>:
   1ca4c:	sub	sp, sp, #0x1b0
   1ca50:	stp	x29, x30, [sp, #336]
   1ca54:	stp	x28, x27, [sp, #352]
   1ca58:	stp	x26, x25, [sp, #368]
   1ca5c:	stp	x24, x23, [sp, #384]
   1ca60:	stp	x22, x21, [sp, #400]
   1ca64:	stp	x20, x19, [sp, #416]
   1ca68:	ldr	x22, [x0]
   1ca6c:	mov	x10, #0x1c72                	// #7282
   1ca70:	movk	x10, #0x71c7, lsl #16
   1ca74:	movk	x10, #0xc71c, lsl #32
   1ca78:	add	x9, x22, #0x10
   1ca7c:	mov	w19, w1
   1ca80:	mov	x20, x0
   1ca84:	mov	x26, xzr
   1ca88:	movk	x10, #0x1c71, lsl #48
   1ca8c:	mov	x8, x9
   1ca90:	add	x29, sp, #0x150
   1ca94:	smulh	x12, x9, x10
   1ca98:	add	x11, x26, #0x2
   1ca9c:	add	x12, x12, x12, lsr #63
   1caa0:	add	x26, x26, #0x1
   1caa4:	asr	x11, x12, x11
   1caa8:	add	x8, x8, #0x3
   1caac:	add	x9, x9, #0x2
   1cab0:	cbnz	x11, 1ca94 <mpfr_const_pi_internal@@Base+0x48>
   1cab4:	mov	x24, #0xfffffffffffffef1    	// #-271
   1cab8:	movk	x24, #0x7fff, lsl #48
   1cabc:	sub	x9, x8, #0xd
   1cac0:	cmp	x9, x24
   1cac4:	b.gt	1ce54 <mpfr_const_pi_internal@@Base+0x408>
   1cac8:	add	x9, x8, #0x3f
   1cacc:	cmp	x8, #0x0
   1cad0:	csel	x9, x9, x8, lt  // lt = tstop
   1cad4:	asr	x9, x9, #6
   1cad8:	add	x23, x9, #0x1
   1cadc:	add	x9, x23, x23, lsl #2
   1cae0:	cmp	x9, #0x11
   1cae4:	add	x28, x8, #0x1
   1cae8:	b.lt	1cafc <mpfr_const_pi_internal@@Base+0xb0>  // b.tstop
   1caec:	lsl	x21, x9, #3
   1caf0:	mov	x0, x21
   1caf4:	bl	cd50 <mpfr_allocate_func@plt>
   1caf8:	b	1cb08 <mpfr_const_pi_internal@@Base+0xbc>
   1cafc:	add	x8, sp, #0x18
   1cb00:	mov	x21, xzr
   1cb04:	add	x0, x8, #0x10
   1cb08:	add	x8, x0, x23, lsl #3
   1cb0c:	add	x9, x0, x23, lsl #4
   1cb10:	mov	w11, #0x18                  	// #24
   1cb14:	add	x10, x0, x23, lsl #5
   1cb18:	cmp	w19, #0x0
   1cb1c:	stp	x8, x28, [x29, #-48]
   1cb20:	sub	x8, x24, x26
   1cb24:	stp	x9, x28, [x29, #-80]
   1cb28:	mov	w9, #0x40                  	// #64
   1cb2c:	stp	x21, x0, [sp, #24]
   1cb30:	mov	w21, #0x1                   	// #1
   1cb34:	str	x9, [sp, #8]
   1cb38:	madd	x9, x23, x11, x0
   1cb3c:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   1cb40:	str	x10, [sp, #192]
   1cb44:	cinc	x10, x22, eq  // eq = none
   1cb48:	add	x8, x8, #0xd
   1cb4c:	stur	x0, [x29, #-16]
   1cb50:	stur	x28, [x29, #-104]
   1cb54:	stur	x28, [x29, #-136]
   1cb58:	str	x28, [sp, #168]
   1cb5c:	stur	w21, [x29, #-32]
   1cb60:	stur	w21, [x29, #-64]
   1cb64:	stur	w21, [x29, #-96]
   1cb68:	stur	w21, [x29, #-128]
   1cb6c:	str	x10, [sp, #16]
   1cb70:	str	x8, [sp]
   1cb74:	stur	x9, [x29, #-112]
   1cb78:	sub	x0, x29, #0x28
   1cb7c:	mov	w1, #0x1                   	// #1
   1cb80:	mov	x2, xzr
   1cb84:	mov	w3, wzr
   1cb88:	str	w21, [sp, #176]
   1cb8c:	bl	c640 <mpfr_set_ui_2exp@plt>
   1cb90:	sub	x0, x29, #0x48
   1cb94:	mov	w1, #0x1                   	// #1
   1cb98:	mov	x2, xzr
   1cb9c:	mov	w3, wzr
   1cba0:	bl	c640 <mpfr_set_ui_2exp@plt>
   1cba4:	sub	x0, x29, #0x68
   1cba8:	mov	w1, #0x1                   	// #1
   1cbac:	mov	x2, #0xffffffffffffffff    	// #-1
   1cbb0:	mov	w3, wzr
   1cbb4:	bl	c640 <mpfr_set_ui_2exp@plt>
   1cbb8:	sub	x0, x29, #0x88
   1cbbc:	mov	w1, #0x1                   	// #1
   1cbc0:	mov	x2, #0xfffffffffffffffe    	// #-2
   1cbc4:	mov	w3, wzr
   1cbc8:	bl	c640 <mpfr_set_ui_2exp@plt>
   1cbcc:	mov	x25, xzr
   1cbd0:	sub	x24, x28, #0x6
   1cbd4:	add	x27, x28, #0x1
   1cbd8:	add	x0, sp, #0xa8
   1cbdc:	sub	x1, x29, #0x48
   1cbe0:	sub	x2, x29, #0x68
   1cbe4:	mov	w3, wzr
   1cbe8:	bl	c240 <mpfr_add@plt>
   1cbec:	add	x0, sp, #0xa8
   1cbf0:	add	x1, sp, #0xa8
   1cbf4:	mov	w2, #0x2                   	// #2
   1cbf8:	mov	w3, wzr
   1cbfc:	bl	c950 <mpfr_div_2ui@plt>
   1cc00:	sub	x0, x29, #0x68
   1cc04:	sub	x1, x29, #0x68
   1cc08:	mov	w2, wzr
   1cc0c:	bl	c990 <mpfr_sqrt@plt>
   1cc10:	sub	x0, x29, #0x28
   1cc14:	sub	x1, x29, #0x28
   1cc18:	sub	x2, x29, #0x68
   1cc1c:	mov	w3, wzr
   1cc20:	bl	c240 <mpfr_add@plt>
   1cc24:	sub	x0, x29, #0x28
   1cc28:	sub	x1, x29, #0x28
   1cc2c:	mov	w2, #0x1                   	// #1
   1cc30:	mov	w3, wzr
   1cc34:	bl	c950 <mpfr_div_2ui@plt>
   1cc38:	sub	x0, x29, #0x48
   1cc3c:	sub	x1, x29, #0x28
   1cc40:	sub	x2, x29, #0x28
   1cc44:	mov	w3, wzr
   1cc48:	bl	be00 <mpfr_mul@plt>
   1cc4c:	sub	x0, x29, #0x68
   1cc50:	sub	x1, x29, #0x48
   1cc54:	add	x2, sp, #0xa8
   1cc58:	mov	w3, wzr
   1cc5c:	bl	bc20 <mpfr_sub@plt>
   1cc60:	sub	x0, x29, #0x68
   1cc64:	sub	x1, x29, #0x68
   1cc68:	mov	w2, #0x1                   	// #1
   1cc6c:	mov	w3, wzr
   1cc70:	bl	c320 <mpfr_mul_2ui@plt>
   1cc74:	add	x0, sp, #0xa8
   1cc78:	sub	x1, x29, #0x48
   1cc7c:	sub	x2, x29, #0x68
   1cc80:	mov	w3, wzr
   1cc84:	bl	bc20 <mpfr_sub@plt>
   1cc88:	ldr	x8, [sp, #184]
   1cc8c:	add	x0, sp, #0xa8
   1cc90:	add	x1, sp, #0xa8
   1cc94:	mov	x2, x25
   1cc98:	cmp	x8, x23
   1cc9c:	mov	w3, wzr
   1cca0:	csneg	x22, x28, x8, eq  // eq = none
   1cca4:	bl	c320 <mpfr_mul_2ui@plt>
   1cca8:	sub	x0, x29, #0x88
   1ccac:	sub	x1, x29, #0x88
   1ccb0:	add	x2, sp, #0xa8
   1ccb4:	mov	w3, wzr
   1ccb8:	bl	bc20 <mpfr_sub@plt>
   1ccbc:	sub	x27, x27, #0x1
   1ccc0:	add	x25, x25, #0x1
   1ccc4:	cmp	x22, x27
   1ccc8:	sub	x24, x24, #0x2
   1cccc:	b.lt	1cbd8 <mpfr_const_pi_internal@@Base+0x18c>  // b.tstop
   1ccd0:	sub	x0, x29, #0x48
   1ccd4:	sub	x1, x29, #0x68
   1ccd8:	sub	x2, x29, #0x88
   1ccdc:	mov	w3, wzr
   1cce0:	bl	c670 <mpfr_div@plt>
   1cce4:	ldur	x8, [x29, #-56]
   1cce8:	mov	x22, #0xfffffffffffffef1    	// #-271
   1ccec:	movk	x22, #0x7fff, lsl #48
   1ccf0:	add	x9, x22, #0x113
   1ccf4:	cmp	x8, x9
   1ccf8:	b.lt	1cd2c <mpfr_const_pi_internal@@Base+0x2e0>  // b.tstop
   1ccfc:	ldur	x8, [x29, #-72]
   1cd00:	ldur	x0, [x29, #-48]
   1cd04:	ldr	x3, [sp, #16]
   1cd08:	mov	x2, x24
   1cd0c:	sub	x9, x8, #0x1
   1cd10:	add	x8, x8, #0x3e
   1cd14:	cmp	x9, #0x0
   1cd18:	csel	x8, x8, x9, lt  // lt = tstop
   1cd1c:	asr	x8, x8, #6
   1cd20:	add	x1, x8, #0x1
   1cd24:	bl	c3d0 <mpfr_round_p@plt>
   1cd28:	cbnz	w0, 1ce08 <mpfr_const_pi_internal@@Base+0x3bc>
   1cd2c:	ldp	x8, x24, [sp]
   1cd30:	sub	x8, x8, x28
   1cd34:	cmp	x24, x8
   1cd38:	b.gt	1cdec <mpfr_const_pi_internal@@Base+0x3a0>
   1cd3c:	add	x8, x28, x24
   1cd40:	add	x8, x26, x8
   1cd44:	add	x28, x8, #0x1
   1cd48:	add	x10, x22, #0xe
   1cd4c:	add	x9, x8, #0x2
   1cd50:	cmp	x28, #0x0
   1cd54:	csinc	x9, x9, x8, lt  // lt = tstop
   1cd58:	cmp	x28, x10
   1cd5c:	b.gt	1ce54 <mpfr_const_pi_internal@@Base+0x408>
   1cd60:	asr	x9, x9, #1
   1cd64:	str	x9, [sp, #8]
   1cd68:	add	x9, x8, #0x3f
   1cd6c:	cmp	x8, #0x0
   1cd70:	csel	x8, x9, x8, lt  // lt = tstop
   1cd74:	ldr	x1, [sp, #24]
   1cd78:	asr	x8, x8, #6
   1cd7c:	add	x24, x8, #0x1
   1cd80:	add	x8, x24, x24, lsl #2
   1cd84:	lsl	x2, x8, #3
   1cd88:	str	x2, [sp, #24]
   1cd8c:	cbz	x1, 1cd9c <mpfr_const_pi_internal@@Base+0x350>
   1cd90:	ldr	x0, [sp, #32]
   1cd94:	bl	c260 <mpfr_reallocate_func@plt>
   1cd98:	b	1cda4 <mpfr_const_pi_internal@@Base+0x358>
   1cd9c:	mov	x0, x2
   1cda0:	bl	cd50 <mpfr_allocate_func@plt>
   1cda4:	mov	w10, #0x18                  	// #24
   1cda8:	add	x8, x0, x24, lsl #3
   1cdac:	add	x9, x0, x24, lsl #4
   1cdb0:	madd	x10, x24, x10, x0
   1cdb4:	add	x11, x0, x24, lsl #5
   1cdb8:	str	x0, [sp, #32]
   1cdbc:	stur	x0, [x29, #-16]
   1cdc0:	stp	x8, x28, [x29, #-48]
   1cdc4:	stur	w21, [x29, #-32]
   1cdc8:	stp	x9, x28, [x29, #-80]
   1cdcc:	stur	w21, [x29, #-64]
   1cdd0:	stp	x10, x28, [x29, #-112]
   1cdd4:	stur	w21, [x29, #-96]
   1cdd8:	stur	x28, [x29, #-136]
   1cddc:	stur	w21, [x29, #-128]
   1cde0:	str	x28, [sp, #168]
   1cde4:	str	x11, [sp, #192]
   1cde8:	b	1cb78 <mpfr_const_pi_internal@@Base+0x12c>
   1cdec:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1cdf0:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   1cdf4:	mov	w1, #0x6c                  	// #108
   1cdf8:	add	x0, x0, #0xd2e
   1cdfc:	add	x2, x2, #0xff6
   1ce00:	bl	cb90 <mpfr_assert_fail@plt>
   1ce04:	b	1cd3c <mpfr_const_pi_internal@@Base+0x2f0>
   1ce08:	ldur	w3, [x29, #-64]
   1ce0c:	sub	x1, x29, #0x48
   1ce10:	mov	x0, x20
   1ce14:	mov	w2, w19
   1ce18:	bl	c6f0 <mpfr_set4@plt>
   1ce1c:	ldr	x1, [sp, #24]
   1ce20:	mov	w19, w0
   1ce24:	cbz	x1, 1ce30 <mpfr_const_pi_internal@@Base+0x3e4>
   1ce28:	ldr	x0, [sp, #32]
   1ce2c:	bl	cc80 <mpfr_free_func@plt>
   1ce30:	mov	w0, w19
   1ce34:	ldp	x20, x19, [sp, #416]
   1ce38:	ldp	x22, x21, [sp, #400]
   1ce3c:	ldp	x24, x23, [sp, #384]
   1ce40:	ldp	x26, x25, [sp, #368]
   1ce44:	ldp	x28, x27, [sp, #352]
   1ce48:	ldp	x29, x30, [sp, #336]
   1ce4c:	add	sp, sp, #0x1b0
   1ce50:	ret
   1ce54:	bl	c940 <mpfr_abort_prec_max@plt>

000000000001ce58 <mpfr_const_pi@@Base>:
   1ce58:	stp	x29, x30, [sp, #-16]!
   1ce5c:	mov	x29, sp
   1ce60:	mov	w2, w1
   1ce64:	mov	x8, x0
   1ce68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1ce6c:	ldr	x1, [x0, #2704]
   1ce70:	add	x0, x0, #0xa90
   1ce74:	blr	x1
   1ce78:	mrs	x9, tpidr_el0
   1ce7c:	add	x1, x9, x0
   1ce80:	mov	x0, x8
   1ce84:	ldp	x29, x30, [sp], #16
   1ce88:	b	c3e0 <mpfr_cache@plt>

000000000001ce8c <mpfr_pow_general@@Base>:
   1ce8c:	sub	sp, sp, #0x150
   1ce90:	stp	x29, x30, [sp, #240]
   1ce94:	stp	x28, x27, [sp, #256]
   1ce98:	stp	x26, x25, [sp, #272]
   1ce9c:	stp	x24, x23, [sp, #288]
   1cea0:	stp	x22, x21, [sp, #304]
   1cea4:	stp	x20, x19, [sp, #320]
   1cea8:	ldr	x8, [x1]
   1ceac:	mov	w9, #0x1                   	// #1
   1ceb0:	ldr	x22, [x0]
   1ceb4:	str	w9, [sp, #48]
   1ceb8:	str	x8, [sp, #40]
   1cebc:	ldr	q0, [x1, #16]
   1cec0:	mov	w21, w3
   1cec4:	mov	x19, x0
   1cec8:	mov	x24, x2
   1cecc:	stur	q0, [sp, #56]
   1ced0:	ldr	w8, [x1, #8]
   1ced4:	add	x29, sp, #0xf0
   1ced8:	str	x5, [sp, #16]
   1cedc:	str	w4, [sp]
   1cee0:	tbnz	w8, #31, 1ceec <mpfr_pow_general@@Base+0x60>
   1cee4:	str	wzr, [sp, #28]
   1cee8:	b	1cf18 <mpfr_pow_general@@Base+0x8c>
   1ceec:	mov	x0, x24
   1cef0:	bl	cd00 <mpfr_odd_p@plt>
   1cef4:	cbz	w0, 1cee4 <mpfr_pow_general@@Base+0x58>
   1cef8:	cmp	w21, #0x3
   1cefc:	mov	w8, #0x2                   	// #2
   1cf00:	mov	w9, #0x3                   	// #3
   1cf04:	csel	w8, w8, w21, eq  // eq = none
   1cf08:	cmp	w21, #0x2
   1cf0c:	csel	w21, w9, w8, eq  // eq = none
   1cf10:	mov	w8, #0x1                   	// #1
   1cf14:	str	w8, [sp, #28]
   1cf18:	subs	x23, x22, #0x1
   1cf1c:	add	x20, x22, #0x9
   1cf20:	b.eq	1d53c <mpfr_pow_general@@Base+0x6b0>  // b.none
   1cf24:	b.le	1d544 <mpfr_pow_general@@Base+0x6b8>
   1cf28:	clz	x8, x23
   1cf2c:	mov	w9, #0x40                  	// #64
   1cf30:	sub	x8, x9, x8
   1cf34:	add	x25, x20, x8
   1cf38:	sub	x0, x29, #0x68
   1cf3c:	mov	x1, x25
   1cf40:	bl	cad0 <mpfr_init2@plt>
   1cf44:	cmp	w21, #0x0
   1cf48:	mov	w8, #0x40                  	// #64
   1cf4c:	str	wzr, [sp, #4]
   1cf50:	mov	w0, wzr
   1cf54:	str	x8, [sp, #8]
   1cf58:	mov	w26, #0x2                   	// #2
   1cf5c:	mrs	x20, tpidr_el0
   1cf60:	cinc	x8, x22, eq  // eq = none
   1cf64:	str	x8, [sp, #32]
   1cf68:	mov	w23, w0
   1cf6c:	ldr	w8, [x24, #8]
   1cf70:	sub	x0, x29, #0x68
   1cf74:	add	x1, sp, #0x28
   1cf78:	cmp	w8, #0x0
   1cf7c:	cinc	w2, w26, lt  // lt = tstop
   1cf80:	bl	c130 <mpfr_log@plt>
   1cf84:	sub	x0, x29, #0x68
   1cf88:	sub	x2, x29, #0x68
   1cf8c:	mov	w3, #0x2                   	// #2
   1cf90:	mov	x1, x24
   1cf94:	bl	be00 <mpfr_mul@plt>
   1cf98:	cbz	w23, 1cfe4 <mpfr_pow_general@@Base+0x158>
   1cf9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1cfa0:	ldr	x1, [x0, #2640]
   1cfa4:	add	x0, x0, #0xa50
   1cfa8:	blr	x1
   1cfac:	add	x1, x20, x0
   1cfb0:	add	x0, sp, #0x68
   1cfb4:	mov	w2, #0x3                   	// #3
   1cfb8:	bl	c3e0 <mpfr_cache@plt>
   1cfbc:	add	x0, sp, #0x68
   1cfc0:	add	x1, sp, #0x68
   1cfc4:	add	x2, sp, #0x48
   1cfc8:	mov	w3, #0x3                   	// #3
   1cfcc:	bl	be00 <mpfr_mul@plt>
   1cfd0:	sub	x0, x29, #0x68
   1cfd4:	sub	x1, x29, #0x68
   1cfd8:	add	x2, sp, #0x68
   1cfdc:	mov	w3, #0x2                   	// #2
   1cfe0:	bl	bc20 <mpfr_sub@plt>
   1cfe4:	ldur	x26, [x29, #-88]
   1cfe8:	ldr	x27, [sp, #88]
   1cfec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1cff0:	ldr	x1, [x0, #2656]
   1cff4:	add	x0, x0, #0xa60
   1cff8:	blr	x1
   1cffc:	mov	x28, x0
   1d000:	str	wzr, [x20, x0]
   1d004:	sub	x0, x29, #0x68
   1d008:	sub	x1, x29, #0x68
   1d00c:	mov	w2, wzr
   1d010:	bl	c7a0 <mpfr_exp@plt>
   1d014:	ldur	x8, [x29, #-88]
   1d018:	mov	x9, #0xfffffffffffffeff    	// #-257
   1d01c:	movk	x9, #0x7fff, lsl #48
   1d020:	add	x9, x9, #0x105
   1d024:	cmp	x8, x9
   1d028:	b.lt	1d034 <mpfr_pow_general@@Base+0x1a8>  // b.tstop
   1d02c:	ldr	w9, [x20, x28]
   1d030:	tbz	w9, #0, 1d174 <mpfr_pow_general@@Base+0x2e8>
   1d034:	cbnz	w23, 1d134 <mpfr_pow_general@@Base+0x2a8>
   1d038:	mov	x9, #0xfffffffffffffeff    	// #-257
   1d03c:	movk	x9, #0x7fff, lsl #48
   1d040:	add	x9, x9, #0x103
   1d044:	cmp	x8, x9
   1d048:	mov	w26, #0x2                   	// #2
   1d04c:	b.eq	1d154 <mpfr_pow_general@@Base+0x2c8>  // b.none
   1d050:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1d054:	cmp	x8, x9
   1d058:	b.eq	1d06c <mpfr_pow_general@@Base+0x1e0>  // b.none
   1d05c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1d060:	cmp	x8, x9
   1d064:	b.ne	1d0c8 <mpfr_pow_general@@Base+0x23c>  // b.any
   1d068:	b	1d560 <mpfr_pow_general@@Base+0x6d4>
   1d06c:	ldr	w8, [x24, #8]
   1d070:	sub	x0, x29, #0x68
   1d074:	add	x1, sp, #0x28
   1d078:	cmp	w8, #0x0
   1d07c:	cinc	w2, w26, ge  // ge = tcont
   1d080:	bl	c130 <mpfr_log@plt>
   1d084:	sub	x0, x29, #0x68
   1d088:	sub	x2, x29, #0x68
   1d08c:	mov	w3, #0x3                   	// #3
   1d090:	mov	x1, x24
   1d094:	bl	be00 <mpfr_mul@plt>
   1d098:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d09c:	ldr	x1, [x0, #2656]
   1d0a0:	add	x0, x0, #0xa60
   1d0a4:	blr	x1
   1d0a8:	mov	x28, x0
   1d0ac:	str	wzr, [x20, x0]
   1d0b0:	sub	x0, x29, #0x68
   1d0b4:	sub	x1, x29, #0x68
   1d0b8:	mov	w2, #0x3                   	// #3
   1d0bc:	bl	c7a0 <mpfr_exp@plt>
   1d0c0:	ldrb	w8, [x20, x28]
   1d0c4:	tbnz	w8, #1, 1d598 <mpfr_pow_general@@Base+0x70c>
   1d0c8:	cmp	x25, #0x3f
   1d0cc:	b.gt	1d0e0 <mpfr_pow_general@@Base+0x254>
   1d0d0:	sub	x0, x29, #0x68
   1d0d4:	mov	w1, #0x40                  	// #64
   1d0d8:	bl	bf80 <mpfr_set_prec@plt>
   1d0dc:	mov	w25, #0x40                  	// #64
   1d0e0:	add	x0, sp, #0x68
   1d0e4:	mov	x1, x25
   1d0e8:	bl	cad0 <mpfr_init2@plt>
   1d0ec:	add	x0, sp, #0x48
   1d0f0:	mov	w1, #0x40                  	// #64
   1d0f4:	bl	cad0 <mpfr_init2@plt>
   1d0f8:	add	x0, sp, #0x48
   1d0fc:	add	x1, sp, #0x28
   1d100:	mov	w2, wzr
   1d104:	bl	c270 <mpfr_log2@plt>
   1d108:	add	x0, sp, #0x48
   1d10c:	add	x2, sp, #0x48
   1d110:	mov	x1, x24
   1d114:	mov	w3, wzr
   1d118:	bl	be00 <mpfr_mul@plt>
   1d11c:	add	x0, sp, #0x48
   1d120:	add	x1, sp, #0x48
   1d124:	mov	w2, #0xffffffff            	// #-1
   1d128:	bl	c360 <mpfr_rint@plt>
   1d12c:	mov	w23, #0x1                   	// #1
   1d130:	b	1cf6c <mpfr_pow_general@@Base+0xe0>
   1d134:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1d138:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1d13c:	mov	w1, #0xcd                  	// #205
   1d140:	add	x0, x0, #0xd39
   1d144:	add	x2, x2, #0xd48
   1d148:	bl	cb90 <mpfr_assert_fail@plt>
   1d14c:	ldur	x8, [x29, #-88]
   1d150:	b	1d038 <mpfr_pow_general@@Base+0x1ac>
   1d154:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1d158:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1d15c:	mov	w1, #0xce                  	// #206
   1d160:	add	x0, x0, #0xd39
   1d164:	add	x2, x2, #0xd54
   1d168:	bl	cb90 <mpfr_assert_fail@plt>
   1d16c:	ldur	x8, [x29, #-88]
   1d170:	b	1d050 <mpfr_pow_general@@Base+0x1c4>
   1d174:	add	x8, x26, #0x3
   1d178:	cmn	x26, #0x2
   1d17c:	ldur	x9, [x29, #-104]
   1d180:	csinc	x8, x8, xzr, gt
   1d184:	cmp	x27, x8
   1d188:	csel	x10, x27, x8, gt
   1d18c:	cmp	w23, #0x0
   1d190:	csinc	x8, x8, x10, eq  // eq = none
   1d194:	sub	x10, x9, #0x1
   1d198:	ldur	x0, [x29, #-80]
   1d19c:	add	x9, x9, #0x3e
   1d1a0:	cmp	x10, #0x0
   1d1a4:	ldr	x3, [sp, #32]
   1d1a8:	csel	x9, x9, x10, lt  // lt = tstop
   1d1ac:	asr	x9, x9, #6
   1d1b0:	add	x1, x9, #0x1
   1d1b4:	sub	x2, x25, x8
   1d1b8:	bl	c3d0 <mpfr_round_p@plt>
   1d1bc:	cbnz	w0, 1d3c0 <mpfr_pow_general@@Base+0x534>
   1d1c0:	ldp	w8, w9, [sp]
   1d1c4:	orr	w8, w9, w8
   1d1c8:	cbnz	w8, 1d348 <mpfr_pow_general@@Base+0x4bc>
   1d1cc:	ldr	w8, [x24, #8]
   1d1d0:	tbnz	w8, #31, 1d340 <mpfr_pow_general@@Base+0x4b4>
   1d1d4:	sub	x0, x29, #0x28
   1d1d8:	bl	c040 <mpfr_mpz_init@plt>
   1d1dc:	sub	x0, x29, #0x28
   1d1e0:	mov	x1, x24
   1d1e4:	bl	cb10 <mpfr_get_z_2exp@plt>
   1d1e8:	mov	x26, x0
   1d1ec:	sub	x0, x29, #0x28
   1d1f0:	mov	x1, xzr
   1d1f4:	bl	bb50 <__gmpz_scan1@plt>
   1d1f8:	mov	x28, x0
   1d1fc:	sub	x0, x29, #0x28
   1d200:	sub	x1, x29, #0x28
   1d204:	mov	x2, x28
   1d208:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   1d20c:	sub	x0, x29, #0x18
   1d210:	add	x27, x28, x26
   1d214:	bl	c040 <mpfr_mpz_init@plt>
   1d218:	sub	x0, x29, #0x18
   1d21c:	add	x1, sp, #0x28
   1d220:	bl	cb10 <mpfr_get_z_2exp@plt>
   1d224:	mov	x26, x0
   1d228:	sub	x0, x29, #0x18
   1d22c:	mov	x1, xzr
   1d230:	bl	bb50 <__gmpz_scan1@plt>
   1d234:	mov	x28, x0
   1d238:	sub	x0, x29, #0x18
   1d23c:	sub	x1, x29, #0x18
   1d240:	mov	x2, x28
   1d244:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   1d248:	add	x26, x28, x26
   1d24c:	cbz	x27, 1d2b8 <mpfr_pow_general@@Base+0x42c>
   1d250:	tbz	w26, #0, 1d268 <mpfr_pow_general@@Base+0x3dc>
   1d254:	sub	x0, x29, #0x18
   1d258:	sub	x1, x29, #0x18
   1d25c:	mov	w2, #0x1                   	// #1
   1d260:	bl	c290 <__gmpz_mul_2exp@plt>
   1d264:	sub	x26, x26, #0x1
   1d268:	ldur	w1, [x29, #-20]
   1d26c:	cmp	w1, #0x1
   1d270:	b.lt	1d2a4 <mpfr_pow_general@@Base+0x418>  // b.tstop
   1d274:	ldur	x0, [x29, #-16]
   1d278:	bl	ca90 <__gmpn_perfect_square_p@plt>
   1d27c:	cbz	w0, 1d2b0 <mpfr_pow_general@@Base+0x424>
   1d280:	sub	x0, x29, #0x18
   1d284:	sub	x1, x29, #0x18
   1d288:	bl	bd10 <__gmpz_sqrt@plt>
   1d28c:	cmp	x26, #0x0
   1d290:	cinc	x8, x26, lt  // lt = tstop
   1d294:	adds	x27, x27, #0x1
   1d298:	asr	x26, x8, #1
   1d29c:	b.cc	1d250 <mpfr_pow_general@@Base+0x3c4>  // b.lo, b.ul, b.last
   1d2a0:	b	1d2b8 <mpfr_pow_general@@Base+0x42c>
   1d2a4:	mvn	w8, w1
   1d2a8:	lsr	w0, w8, #31
   1d2ac:	cbnz	w0, 1d280 <mpfr_pow_general@@Base+0x3f4>
   1d2b0:	mov	w26, #0x1                   	// #1
   1d2b4:	b	1d32c <mpfr_pow_general@@Base+0x4a0>
   1d2b8:	ldur	w8, [x29, #-20]
   1d2bc:	ldur	x9, [x29, #-16]
   1d2c0:	sub	x0, x29, #0x48
   1d2c4:	cmp	w8, #0x0
   1d2c8:	cneg	w8, w8, mi  // mi = first
   1d2cc:	add	x9, x9, w8, uxtw #3
   1d2d0:	ldur	x9, [x9, #-8]
   1d2d4:	lsl	x8, x8, #6
   1d2d8:	clz	x9, x9
   1d2dc:	sub	x1, x8, x9
   1d2e0:	bl	cad0 <mpfr_init2@plt>
   1d2e4:	sub	x0, x29, #0x48
   1d2e8:	sub	x1, x29, #0x18
   1d2ec:	mov	w2, wzr
   1d2f0:	bl	c2b0 <mpfr_set_z@plt>
   1d2f4:	sub	x0, x29, #0x48
   1d2f8:	sub	x1, x29, #0x48
   1d2fc:	mov	x2, x26
   1d300:	mov	w3, wzr
   1d304:	bl	bc40 <mpfr_mul_2si@plt>
   1d308:	sub	x1, x29, #0x48
   1d30c:	sub	x2, x29, #0x28
   1d310:	mov	x0, x19
   1d314:	mov	w3, w21
   1d318:	bl	bfa0 <mpfr_pow_z@plt>
   1d31c:	mov	w22, w0
   1d320:	sub	x0, x29, #0x48
   1d324:	bl	c110 <mpfr_clear@plt>
   1d328:	mov	w26, wzr
   1d32c:	sub	x0, x29, #0x18
   1d330:	bl	c210 <mpfr_mpz_clear@plt>
   1d334:	sub	x0, x29, #0x28
   1d338:	bl	c210 <mpfr_mpz_clear@plt>
   1d33c:	cbz	w26, 1d3d8 <mpfr_pow_general@@Base+0x54c>
   1d340:	mov	w8, #0x1                   	// #1
   1d344:	str	w8, [sp, #4]
   1d348:	ldr	x9, [sp, #8]
   1d34c:	mov	x8, #0xfffffffffffffeff    	// #-257
   1d350:	movk	x8, #0x7fff, lsl #48
   1d354:	sub	x8, x8, x25
   1d358:	mov	w26, #0x2                   	// #2
   1d35c:	cmp	x9, x8
   1d360:	b.gt	1d3a0 <mpfr_pow_general@@Base+0x514>
   1d364:	add	x25, x25, x9
   1d368:	cmp	x25, #0x0
   1d36c:	cinc	x8, x25, lt  // lt = tstop
   1d370:	asr	x8, x8, #1
   1d374:	sub	x0, x29, #0x68
   1d378:	mov	x1, x25
   1d37c:	str	x8, [sp, #8]
   1d380:	bl	bf80 <mpfr_set_prec@plt>
   1d384:	mov	w0, wzr
   1d388:	cbz	w23, 1cf68 <mpfr_pow_general@@Base+0xdc>
   1d38c:	add	x0, sp, #0x68
   1d390:	mov	x1, x25
   1d394:	bl	bf80 <mpfr_set_prec@plt>
   1d398:	mov	w0, w23
   1d39c:	b	1cf68 <mpfr_pow_general@@Base+0xdc>
   1d3a0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1d3a4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1d3a8:	mov	w1, #0x113                 	// #275
   1d3ac:	add	x0, x0, #0xd39
   1d3b0:	add	x2, x2, #0xd8d
   1d3b4:	bl	cb90 <mpfr_assert_fail@plt>
   1d3b8:	ldr	x9, [sp, #8]
   1d3bc:	b	1d364 <mpfr_pow_general@@Base+0x4d8>
   1d3c0:	ldur	w3, [x29, #-96]
   1d3c4:	sub	x1, x29, #0x68
   1d3c8:	mov	x0, x19
   1d3cc:	mov	w2, w21
   1d3d0:	bl	c6f0 <mpfr_set4@plt>
   1d3d4:	mov	w22, w0
   1d3d8:	cbz	w23, 1d4ac <mpfr_pow_general@@Base+0x620>
   1d3dc:	add	x0, sp, #0x48
   1d3e0:	mov	w1, wzr
   1d3e4:	bl	c230 <mpfr_get_si@plt>
   1d3e8:	mov	x23, x0
   1d3ec:	cbnz	w21, 1d440 <mpfr_pow_general@@Base+0x5b4>
   1d3f0:	tbz	w22, #31, 1d440 <mpfr_pow_general@@Base+0x5b4>
   1d3f4:	tbz	x23, #63, 1d440 <mpfr_pow_general@@Base+0x5b4>
   1d3f8:	ldr	x8, [x19, #16]
   1d3fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d400:	ldr	x1, [x0, #2592]
   1d404:	add	x0, x0, #0xa20
   1d408:	blr	x1
   1d40c:	ldr	x9, [x20, x0]
   1d410:	mvn	x10, x23
   1d414:	add	x9, x9, x10
   1d418:	cmp	x8, x9
   1d41c:	b.ne	1d440 <mpfr_pow_general@@Base+0x5b4>  // b.any
   1d420:	mov	x0, x19
   1d424:	bl	bfb0 <mpfr_powerof2_raw@plt>
   1d428:	cbz	w0, 1d440 <mpfr_pow_general@@Base+0x5b4>
   1d42c:	ldr	x8, [x19]
   1d430:	cmp	x8, #0x2
   1d434:	b.lt	1d4ec <mpfr_pow_general@@Base+0x660>  // b.tstop
   1d438:	mov	x0, x19
   1d43c:	bl	c1c0 <mpfr_nextabove@plt>
   1d440:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d444:	ldr	x1, [x0, #2656]
   1d448:	add	x0, x0, #0xa60
   1d44c:	blr	x1
   1d450:	str	wzr, [x20, x0]
   1d454:	mov	x0, x19
   1d458:	mov	x1, x19
   1d45c:	mov	x2, x23
   1d460:	mov	w3, w21
   1d464:	bl	bc40 <mpfr_mul_2si@plt>
   1d468:	mov	w21, w0
   1d46c:	cbz	w21, 1d49c <mpfr_pow_general@@Base+0x610>
   1d470:	ldr	x10, [sp, #16]
   1d474:	cbz	x10, 1d498 <mpfr_pow_general@@Base+0x60c>
   1d478:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d47c:	ldr	x1, [x0, #2656]
   1d480:	add	x0, x0, #0xa60
   1d484:	blr	x1
   1d488:	ldr	w8, [x20, x0]
   1d48c:	ldr	w9, [x10]
   1d490:	orr	w8, w9, w8
   1d494:	str	w8, [x10]
   1d498:	mov	w22, w21
   1d49c:	add	x0, sp, #0x68
   1d4a0:	add	x1, sp, #0x48
   1d4a4:	mov	x2, xzr
   1d4a8:	bl	c250 <mpfr_clears@plt>
   1d4ac:	sub	x0, x29, #0x68
   1d4b0:	bl	c110 <mpfr_clear@plt>
   1d4b4:	ldr	w8, [sp, #28]
   1d4b8:	cbz	w8, 1d4c8 <mpfr_pow_general@@Base+0x63c>
   1d4bc:	mov	w8, #0xffffffff            	// #-1
   1d4c0:	neg	w22, w22
   1d4c4:	str	w8, [x19, #8]
   1d4c8:	mov	w0, w22
   1d4cc:	ldp	x20, x19, [sp, #320]
   1d4d0:	ldp	x22, x21, [sp, #304]
   1d4d4:	ldp	x24, x23, [sp, #288]
   1d4d8:	ldp	x26, x25, [sp, #272]
   1d4dc:	ldp	x28, x27, [sp, #256]
   1d4e0:	ldp	x29, x30, [sp, #240]
   1d4e4:	add	sp, sp, #0x150
   1d4e8:	ret
   1d4ec:	add	x1, x8, #0x1
   1d4f0:	sub	x0, x29, #0x48
   1d4f4:	bl	cad0 <mpfr_init2@plt>
   1d4f8:	ldr	w3, [x19, #8]
   1d4fc:	sub	x0, x29, #0x48
   1d500:	mov	w2, #0x1                   	// #1
   1d504:	mov	x1, x19
   1d508:	bl	c6f0 <mpfr_set4@plt>
   1d50c:	sub	x0, x29, #0x48
   1d510:	bl	c1c0 <mpfr_nextabove@plt>
   1d514:	sub	x1, x29, #0x48
   1d518:	mov	x0, x19
   1d51c:	mov	x2, x23
   1d520:	mov	w3, wzr
   1d524:	bl	bc40 <mpfr_mul_2si@plt>
   1d528:	mov	w21, w0
   1d52c:	sub	x0, x29, #0x48
   1d530:	bl	c110 <mpfr_clear@plt>
   1d534:	cbnz	w21, 1d470 <mpfr_pow_general@@Base+0x5e4>
   1d538:	b	1d49c <mpfr_pow_general@@Base+0x610>
   1d53c:	mov	x8, xzr
   1d540:	b	1cf34 <mpfr_pow_general@@Base+0xa8>
   1d544:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1d548:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1d54c:	add	x0, x0, #0xd39
   1d550:	add	x2, x2, #0xd3f
   1d554:	mov	w1, #0x9f                  	// #159
   1d558:	bl	cb90 <mpfr_assert_fail@plt>
   1d55c:	b	1cf28 <mpfr_pow_general@@Base+0x9c>
   1d560:	cmp	w21, #0x0
   1d564:	csinc	w1, w21, wzr, ne  // ne = any
   1d568:	mov	w2, #0x1                   	// #1
   1d56c:	mov	x0, x19
   1d570:	bl	c420 <mpfr_underflow@plt>
   1d574:	ldr	x8, [sp, #16]
   1d578:	mov	w22, w0
   1d57c:	cbz	x8, 1d3d8 <mpfr_pow_general@@Base+0x54c>
   1d580:	ldr	x10, [sp, #16]
   1d584:	mov	w9, #0x9                   	// #9
   1d588:	ldr	w8, [x10]
   1d58c:	orr	w8, w8, w9
   1d590:	str	w8, [x10]
   1d594:	b	1d3d8 <mpfr_pow_general@@Base+0x54c>
   1d598:	mov	w2, #0x1                   	// #1
   1d59c:	mov	x0, x19
   1d5a0:	mov	w1, w21
   1d5a4:	bl	bff0 <mpfr_overflow@plt>
   1d5a8:	ldr	x8, [sp, #16]
   1d5ac:	mov	w22, w0
   1d5b0:	cbz	x8, 1d3d8 <mpfr_pow_general@@Base+0x54c>
   1d5b4:	ldr	x10, [sp, #16]
   1d5b8:	mov	w9, #0xa                   	// #10
   1d5bc:	b	1d588 <mpfr_pow_general@@Base+0x6fc>

000000000001d5c0 <mpfr_pow@@Base>:
   1d5c0:	sub	sp, sp, #0xa0
   1d5c4:	stp	x29, x30, [sp, #64]
   1d5c8:	stp	x26, x25, [sp, #96]
   1d5cc:	stp	x24, x23, [sp, #112]
   1d5d0:	stp	x22, x21, [sp, #128]
   1d5d4:	stp	x20, x19, [sp, #144]
   1d5d8:	ldr	x8, [x1, #16]
   1d5dc:	mov	x24, #0x2                   	// #2
   1d5e0:	ldr	x9, [x2, #16]
   1d5e4:	movk	x24, #0x8000, lsl #48
   1d5e8:	add	x10, x24, #0x2
   1d5ec:	mov	w20, w3
   1d5f0:	mov	x21, x2
   1d5f4:	mov	x22, x1
   1d5f8:	cmp	x8, x10
   1d5fc:	mov	x19, x0
   1d600:	str	x27, [sp, #80]
   1d604:	add	x29, sp, #0x40
   1d608:	b.lt	1dcc4 <mpfr_pow@@Base+0x704>  // b.tstop
   1d60c:	cmp	x9, x10
   1d610:	b.lt	1dcc4 <mpfr_pow@@Base+0x704>  // b.tstop
   1d614:	mov	x0, x21
   1d618:	bl	c200 <mpfr_integer_p@plt>
   1d61c:	mov	w23, w0
   1d620:	cbnz	w0, 1d658 <mpfr_pow@@Base+0x98>
   1d624:	ldr	w8, [x22, #8]
   1d628:	tbz	w8, #31, 1d658 <mpfr_pow@@Base+0x98>
   1d62c:	str	x24, [x19, #16]
   1d630:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d634:	ldr	x1, [x0, #2656]
   1d638:	add	x0, x0, #0xa60
   1d63c:	blr	x1
   1d640:	mrs	x8, tpidr_el0
   1d644:	ldr	w9, [x8, x0]
   1d648:	mov	w24, wzr
   1d64c:	orr	w9, w9, #0x4
   1d650:	str	w9, [x8, x0]
   1d654:	b	1dca0 <mpfr_pow@@Base+0x6e0>
   1d658:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   1d65c:	ldr	x1, [x1, #3944]
   1d660:	mov	x0, x22
   1d664:	bl	ca00 <mpfr_cmpabs@plt>
   1d668:	cbz	w0, 1d830 <mpfr_pow@@Base+0x270>
   1d66c:	mov	w24, w0
   1d670:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d674:	ldr	x1, [x0, #2624]
   1d678:	add	x0, x0, #0xa40
   1d67c:	blr	x1
   1d680:	mrs	x27, tpidr_el0
   1d684:	ldr	x9, [x27, x0]
   1d688:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d68c:	ldr	x1, [x0, #2592]
   1d690:	add	x0, x0, #0xa20
   1d694:	blr	x1
   1d698:	ldr	x10, [x27, x0]
   1d69c:	mov	w8, #0x3fffffff            	// #1073741823
   1d6a0:	cmp	x9, x8
   1d6a4:	b.lt	1d6d8 <mpfr_pow@@Base+0x118>  // b.tstop
   1d6a8:	mov	x8, #0xffffffffc0000001    	// #-1073741823
   1d6ac:	cmp	x10, x8
   1d6b0:	b.gt	1d6d8 <mpfr_pow@@Base+0x118>
   1d6b4:	ldr	x8, [x21, #16]
   1d6b8:	cmp	x8, #0xf
   1d6bc:	b.gt	1d6d8 <mpfr_pow@@Base+0x118>
   1d6c0:	ldr	x8, [x22, #16]
   1d6c4:	mov	w11, #0x7ffe                	// #32766
   1d6c8:	add	x8, x8, x11
   1d6cc:	mov	w11, #0xfffe                	// #65534
   1d6d0:	cmp	x8, x11
   1d6d4:	b.cc	1d9b8 <mpfr_pow@@Base+0x3f8>  // b.lo, b.ul, b.last
   1d6d8:	ldr	w11, [x21, #8]
   1d6dc:	mul	w8, w11, w24
   1d6e0:	cmp	w8, #0x1
   1d6e4:	b.lt	1d870 <mpfr_pow@@Base+0x2b0>  // b.tstop
   1d6e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d6ec:	ldr	x1, [x0, #2656]
   1d6f0:	add	x0, x0, #0xa60
   1d6f4:	blr	x1
   1d6f8:	ldr	w8, [x27, x0]
   1d6fc:	stp	x10, x9, [x29, #-16]
   1d700:	stur	w8, [x29, #-24]
   1d704:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d708:	ldr	x1, [x0, #2592]
   1d70c:	add	x0, x0, #0xa20
   1d710:	blr	x1
   1d714:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   1d718:	str	x8, [x27, x0]
   1d71c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d720:	ldr	x1, [x0, #2624]
   1d724:	add	x0, x0, #0xa40
   1d728:	blr	x1
   1d72c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   1d730:	str	x8, [x27, x0]
   1d734:	add	x0, sp, #0x8
   1d738:	mov	w1, #0x35                  	// #53
   1d73c:	bl	cad0 <mpfr_init2@plt>
   1d740:	ldr	w8, [x22, #8]
   1d744:	mov	x25, x22
   1d748:	cmp	w8, #0x0
   1d74c:	b.gt	1d76c <mpfr_pow@@Base+0x1ac>
   1d750:	cmp	w24, #0x1
   1d754:	mov	w8, #0x1                   	// #1
   1d758:	cinc	w2, w8, lt  // lt = tstop
   1d75c:	add	x0, sp, #0x8
   1d760:	mov	x1, x22
   1d764:	add	x25, sp, #0x8
   1d768:	bl	be20 <mpfr_neg@plt>
   1d76c:	add	x0, sp, #0x8
   1d770:	mov	w2, #0x1                   	// #1
   1d774:	mov	x1, x25
   1d778:	bl	c270 <mpfr_log2@plt>
   1d77c:	add	x0, sp, #0x8
   1d780:	add	x1, sp, #0x8
   1d784:	mov	w3, #0x1                   	// #1
   1d788:	mov	x2, x21
   1d78c:	bl	be00 <mpfr_mul@plt>
   1d790:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d794:	ldr	x1, [x0, #2624]
   1d798:	add	x0, x0, #0xa40
   1d79c:	blr	x1
   1d7a0:	ldr	x1, [x27, x0]
   1d7a4:	mov	x25, x0
   1d7a8:	add	x0, sp, #0x8
   1d7ac:	mov	x2, xzr
   1d7b0:	bl	c430 <mpfr_cmp_si_2exp@plt>
   1d7b4:	mov	w26, w0
   1d7b8:	add	x0, sp, #0x8
   1d7bc:	bl	c110 <mpfr_clear@plt>
   1d7c0:	ldur	w8, [x29, #-24]
   1d7c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d7c8:	ldr	x1, [x0, #2656]
   1d7cc:	add	x0, x0, #0xa60
   1d7d0:	blr	x1
   1d7d4:	ldur	x10, [x29, #-16]
   1d7d8:	str	w8, [x27, x0]
   1d7dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d7e0:	ldr	x1, [x0, #2592]
   1d7e4:	add	x0, x0, #0xa20
   1d7e8:	blr	x1
   1d7ec:	ldur	x9, [x29, #-8]
   1d7f0:	cmp	w26, #0x0
   1d7f4:	str	x10, [x27, x0]
   1d7f8:	str	x9, [x27, x25]
   1d7fc:	b.le	1d86c <mpfr_pow@@Base+0x2ac>
   1d800:	ldr	w8, [x22, #8]
   1d804:	mov	w22, #0x1                   	// #1
   1d808:	tbz	w8, #31, 1d81c <mpfr_pow@@Base+0x25c>
   1d80c:	mov	x0, x21
   1d810:	bl	cd00 <mpfr_odd_p@plt>
   1d814:	cmp	w0, #0x0
   1d818:	cneg	w22, w22, ne  // ne = any
   1d81c:	mov	x0, x19
   1d820:	mov	w1, w20
   1d824:	mov	w2, w22
   1d828:	bl	bff0 <mpfr_overflow@plt>
   1d82c:	b	1d864 <mpfr_pow@@Base+0x2a4>
   1d830:	ldr	w8, [x22, #8]
   1d834:	tbnz	w8, #31, 1d840 <mpfr_pow@@Base+0x280>
   1d838:	mov	w1, #0x1                   	// #1
   1d83c:	b	1d854 <mpfr_pow@@Base+0x294>
   1d840:	mov	x0, x21
   1d844:	bl	cd00 <mpfr_odd_p@plt>
   1d848:	cmp	w0, #0x0
   1d84c:	mov	w8, #0x1                   	// #1
   1d850:	cneg	x1, x8, ne  // ne = any
   1d854:	mov	x0, x19
   1d858:	mov	x2, xzr
   1d85c:	mov	w3, w20
   1d860:	bl	bb40 <mpfr_set_si_2exp@plt>
   1d864:	mov	w24, w0
   1d868:	b	1dca0 <mpfr_pow@@Base+0x6e0>
   1d86c:	ldr	w11, [x21, #8]
   1d870:	ldr	x8, [x22, #16]
   1d874:	tbnz	w11, #31, 1d880 <mpfr_pow@@Base+0x2c0>
   1d878:	tbz	x8, #63, 1d9b8 <mpfr_pow@@Base+0x3f8>
   1d87c:	b	1d888 <mpfr_pow@@Base+0x2c8>
   1d880:	cmp	x8, #0x1
   1d884:	b.le	1d9b8 <mpfr_pow@@Base+0x3f8>
   1d888:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d88c:	ldr	x1, [x0, #2656]
   1d890:	add	x0, x0, #0xa60
   1d894:	blr	x1
   1d898:	ldr	w11, [x27, x0]
   1d89c:	stp	x10, x9, [x29, #-16]
   1d8a0:	stur	w11, [x29, #-24]
   1d8a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d8a8:	ldr	x1, [x0, #2592]
   1d8ac:	add	x0, x0, #0xa20
   1d8b0:	blr	x1
   1d8b4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1d8b8:	str	x9, [x27, x0]
   1d8bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d8c0:	ldr	x1, [x0, #2624]
   1d8c4:	add	x0, x0, #0xa40
   1d8c8:	blr	x1
   1d8cc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   1d8d0:	mov	w10, #0x40                  	// #64
   1d8d4:	add	x11, x29, #0x18
   1d8d8:	mov	w12, #0x1                   	// #1
   1d8dc:	str	x9, [x27, x0]
   1d8e0:	add	x0, sp, #0x8
   1d8e4:	mov	x1, x8
   1d8e8:	mov	x2, xzr
   1d8ec:	mov	w3, wzr
   1d8f0:	str	x10, [sp, #8]
   1d8f4:	str	x11, [sp, #32]
   1d8f8:	str	w12, [sp, #16]
   1d8fc:	bl	bb40 <mpfr_set_si_2exp@plt>
   1d900:	cbnz	w0, 1de08 <mpfr_pow@@Base+0x848>
   1d904:	ldr	w8, [x21, #8]
   1d908:	tbz	w8, #31, 1d924 <mpfr_pow@@Base+0x364>
   1d90c:	add	x0, sp, #0x8
   1d910:	add	x1, sp, #0x8
   1d914:	mov	w2, #0x1                   	// #1
   1d918:	mov	w3, wzr
   1d91c:	bl	c580 <mpfr_sub_ui@plt>
   1d920:	cbnz	w0, 1dec0 <mpfr_pow@@Base+0x900>
   1d924:	add	x0, sp, #0x8
   1d928:	add	x1, sp, #0x8
   1d92c:	mov	w3, #0x2                   	// #2
   1d930:	mov	x2, x21
   1d934:	bl	be00 <mpfr_mul@plt>
   1d938:	ldr	w8, [x21, #8]
   1d93c:	tbz	w8, #31, 1d948 <mpfr_pow@@Base+0x388>
   1d940:	add	x0, sp, #0x8
   1d944:	bl	c1c0 <mpfr_nextabove@plt>
   1d948:	add	x0, sp, #0x8
   1d94c:	mov	w1, #0x2                   	// #2
   1d950:	bl	c230 <mpfr_get_si@plt>
   1d954:	ldur	w9, [x29, #-24]
   1d958:	mov	x8, x0
   1d95c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d960:	ldr	x1, [x0, #2656]
   1d964:	add	x0, x0, #0xa60
   1d968:	blr	x1
   1d96c:	ldur	x10, [x29, #-16]
   1d970:	str	w9, [x27, x0]
   1d974:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d978:	ldr	x1, [x0, #2592]
   1d97c:	add	x0, x0, #0xa20
   1d980:	blr	x1
   1d984:	ldur	x9, [x29, #-8]
   1d988:	str	x10, [x27, x0]
   1d98c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1d990:	ldr	x1, [x0, #2624]
   1d994:	add	x0, x0, #0xa40
   1d998:	blr	x1
   1d99c:	cmp	w20, #0x0
   1d9a0:	mov	w11, #0x1                   	// #1
   1d9a4:	cinc	x11, x11, eq  // eq = none
   1d9a8:	sub	x10, x10, x11
   1d9ac:	cmp	x8, x10
   1d9b0:	str	x9, [x27, x0]
   1d9b4:	b.le	1de24 <mpfr_pow@@Base+0x864>
   1d9b8:	cbz	w23, 1da04 <mpfr_pow@@Base+0x444>
   1d9bc:	ldr	x8, [x21, #16]
   1d9c0:	cmp	x8, #0x100
   1d9c4:	b.gt	1da04 <mpfr_pow@@Base+0x444>
   1d9c8:	add	x0, sp, #0x8
   1d9cc:	bl	c040 <mpfr_mpz_init@plt>
   1d9d0:	add	x0, sp, #0x8
   1d9d4:	mov	x1, x21
   1d9d8:	mov	w2, wzr
   1d9dc:	bl	beb0 <mpfr_get_z@plt>
   1d9e0:	add	x2, sp, #0x8
   1d9e4:	mov	x0, x19
   1d9e8:	mov	x1, x22
   1d9ec:	mov	w3, w20
   1d9f0:	bl	bfa0 <mpfr_pow_z@plt>
   1d9f4:	mov	w24, w0
   1d9f8:	add	x0, sp, #0x8
   1d9fc:	bl	c210 <mpfr_mpz_clear@plt>
   1da00:	b	1dca0 <mpfr_pow@@Base+0x6e0>
   1da04:	mov	x0, x22
   1da08:	bl	bfb0 <mpfr_powerof2_raw@plt>
   1da0c:	cbz	w0, 1db18 <mpfr_pow@@Base+0x558>
   1da10:	ldr	x23, [x22, #16]
   1da14:	ldr	w22, [x22, #8]
   1da18:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1da1c:	ldr	x1, [x0, #2656]
   1da20:	add	x0, x0, #0xa60
   1da24:	blr	x1
   1da28:	ldr	w8, [x27, x0]
   1da2c:	stur	w8, [x29, #-24]
   1da30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1da34:	ldr	x1, [x0, #2592]
   1da38:	add	x0, x0, #0xa20
   1da3c:	blr	x1
   1da40:	ldr	x9, [x27, x0]
   1da44:	mov	x8, x0
   1da48:	stur	x9, [x29, #-16]
   1da4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1da50:	ldr	x1, [x0, #2624]
   1da54:	add	x0, x0, #0xa40
   1da58:	blr	x1
   1da5c:	ldr	x9, [x27, x0]
   1da60:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   1da64:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   1da68:	str	x10, [x27, x8]
   1da6c:	stur	x9, [x29, #-8]
   1da70:	str	x11, [x27, x0]
   1da74:	ldr	x8, [x21]
   1da78:	add	x0, sp, #0x8
   1da7c:	add	x1, x8, #0x40
   1da80:	bl	cad0 <mpfr_init2@plt>
   1da84:	sub	x2, x23, #0x1
   1da88:	add	x0, sp, #0x8
   1da8c:	mov	x1, x21
   1da90:	mov	w3, wzr
   1da94:	bl	c9c0 <mpfr_mul_si@plt>
   1da98:	cbnz	w0, 1ddec <mpfr_pow@@Base+0x82c>
   1da9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1daa0:	ldr	x1, [x0, #2656]
   1daa4:	add	x0, x0, #0xa60
   1daa8:	blr	x1
   1daac:	str	wzr, [x27, x0]
   1dab0:	add	x1, sp, #0x8
   1dab4:	mov	x0, x19
   1dab8:	mov	w2, w20
   1dabc:	bl	ccf0 <mpfr_exp2@plt>
   1dac0:	mov	w24, w0
   1dac4:	add	x0, sp, #0x8
   1dac8:	bl	c110 <mpfr_clear@plt>
   1dacc:	tbz	w22, #31, 1daf0 <mpfr_pow@@Base+0x530>
   1dad0:	mov	x0, x21
   1dad4:	bl	cd00 <mpfr_odd_p@plt>
   1dad8:	cbz	w0, 1daf0 <mpfr_pow@@Base+0x530>
   1dadc:	mov	x0, x19
   1dae0:	mov	x1, x19
   1dae4:	mov	w2, w20
   1dae8:	bl	be20 <mpfr_neg@plt>
   1daec:	neg	w24, w24
   1daf0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1daf4:	ldr	x1, [x0, #2656]
   1daf8:	add	x0, x0, #0xa60
   1dafc:	blr	x1
   1db00:	ldr	w8, [x27, x0]
   1db04:	ldur	w10, [x29, #-24]
   1db08:	ldur	x9, [x29, #-16]
   1db0c:	orr	w8, w10, w8
   1db10:	stur	w8, [x29, #-24]
   1db14:	b	1dc40 <mpfr_pow@@Base+0x680>
   1db18:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1db1c:	ldr	x1, [x0, #2656]
   1db20:	add	x0, x0, #0xa60
   1db24:	blr	x1
   1db28:	ldr	w8, [x27, x0]
   1db2c:	stur	w8, [x29, #-24]
   1db30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1db34:	ldr	x1, [x0, #2592]
   1db38:	add	x0, x0, #0xa20
   1db3c:	blr	x1
   1db40:	ldr	x9, [x27, x0]
   1db44:	mov	x8, x0
   1db48:	stur	x9, [x29, #-16]
   1db4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1db50:	ldr	x1, [x0, #2624]
   1db54:	add	x0, x0, #0xa40
   1db58:	blr	x1
   1db5c:	ldr	x9, [x27, x0]
   1db60:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   1db64:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   1db68:	str	x10, [x27, x8]
   1db6c:	stur	x9, [x29, #-8]
   1db70:	str	x11, [x27, x0]
   1db74:	ldr	w8, [x22, #8]
   1db78:	cmp	w8, #0x1
   1db7c:	b.lt	1db98 <mpfr_pow@@Base+0x5d8>  // b.tstop
   1db80:	ldr	x8, [x22, #16]
   1db84:	mov	w9, #0x1                   	// #1
   1db88:	cmp	w24, #0x0
   1db8c:	sub	x9, x9, x8
   1db90:	csel	x8, x8, x9, gt
   1db94:	b	1dbbc <mpfr_pow@@Base+0x5fc>
   1db98:	mov	x1, #0xffffffffffffffff    	// #-1
   1db9c:	mov	x0, x22
   1dba0:	mov	x2, xzr
   1dba4:	bl	c430 <mpfr_cmp_si_2exp@plt>
   1dba8:	ldr	x8, [x22, #16]
   1dbac:	mov	w9, #0x1                   	// #1
   1dbb0:	cmp	w0, #0x0
   1dbb4:	sub	x9, x9, x8
   1dbb8:	csel	x8, x9, x8, gt
   1dbbc:	subs	x25, x8, #0x1
   1dbc0:	b.eq	1de5c <mpfr_pow@@Base+0x89c>  // b.none
   1dbc4:	b.le	1de64 <mpfr_pow@@Base+0x8a4>
   1dbc8:	clz	x8, x25
   1dbcc:	mov	w9, #0x40                  	// #64
   1dbd0:	sub	x8, x9, x8
   1dbd4:	ldr	x9, [x21, #16]
   1dbd8:	add	x8, x9, x8
   1dbdc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1dbe0:	ldr	x1, [x0, #2656]
   1dbe4:	add	x0, x0, #0xa60
   1dbe8:	blr	x1
   1dbec:	str	wzr, [x27, x0]
   1dbf0:	tbz	x8, #63, 1dc08 <mpfr_pow@@Base+0x648>
   1dbf4:	ldr	x9, [x19]
   1dbf8:	neg	x2, x8
   1dbfc:	add	x8, x9, #0x1
   1dc00:	cmp	x8, x2
   1dc04:	b.cc	1dedc <mpfr_pow@@Base+0x91c>  // b.lo, b.ul, b.last
   1dc08:	sub	x5, x29, #0x18
   1dc0c:	mov	x0, x19
   1dc10:	mov	x1, x22
   1dc14:	mov	x2, x21
   1dc18:	mov	w3, w20
   1dc1c:	mov	w4, w23
   1dc20:	bl	c740 <mpfr_pow_general@plt>
   1dc24:	ldur	w8, [x29, #-24]
   1dc28:	mov	w24, w0
   1dc2c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1dc30:	ldr	x1, [x0, #2656]
   1dc34:	add	x0, x0, #0xa60
   1dc38:	blr	x1
   1dc3c:	ldur	x9, [x29, #-16]
   1dc40:	str	w8, [x27, x0]
   1dc44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1dc48:	ldr	x1, [x0, #2592]
   1dc4c:	add	x0, x0, #0xa20
   1dc50:	blr	x1
   1dc54:	ldur	x11, [x29, #-8]
   1dc58:	str	x9, [x27, x0]
   1dc5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1dc60:	ldr	x1, [x0, #2624]
   1dc64:	add	x0, x0, #0xa40
   1dc68:	blr	x1
   1dc6c:	str	x11, [x27, x0]
   1dc70:	ldr	x10, [x19, #16]
   1dc74:	cmp	x10, x11
   1dc78:	b.gt	1df84 <mpfr_pow@@Base+0x9c4>
   1dc7c:	cmp	x10, x9
   1dc80:	b.lt	1df84 <mpfr_pow@@Base+0x9c4>  // b.tstop
   1dc84:	cbz	w24, 1dca0 <mpfr_pow@@Base+0x6e0>
   1dc88:	orr	w8, w8, #0x8
   1dc8c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1dc90:	ldr	x1, [x0, #2656]
   1dc94:	add	x0, x0, #0xa60
   1dc98:	blr	x1
   1dc9c:	str	w8, [x27, x0]
   1dca0:	mov	w0, w24
   1dca4:	ldp	x20, x19, [sp, #144]
   1dca8:	ldp	x22, x21, [sp, #128]
   1dcac:	ldp	x24, x23, [sp, #112]
   1dcb0:	ldp	x26, x25, [sp, #96]
   1dcb4:	ldr	x27, [sp, #80]
   1dcb8:	ldp	x29, x30, [sp, #64]
   1dcbc:	add	sp, sp, #0xa0
   1dcc0:	ret
   1dcc4:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   1dcc8:	cmp	x9, x10
   1dccc:	b.eq	1dcf4 <mpfr_pow@@Base+0x734>  // b.none
   1dcd0:	cmp	x8, x24
   1dcd4:	b.eq	1d62c <mpfr_pow@@Base+0x6c>  // b.none
   1dcd8:	cmp	x9, x24
   1dcdc:	b.ne	1dd0c <mpfr_pow@@Base+0x74c>  // b.any
   1dce0:	mov	w1, #0x1                   	// #1
   1dce4:	mov	x0, x22
   1dce8:	mov	x2, xzr
   1dcec:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   1dcf0:	cbnz	w0, 1d62c <mpfr_pow@@Base+0x6c>
   1dcf4:	mov	w1, #0x1                   	// #1
   1dcf8:	mov	x0, x19
   1dcfc:	mov	x2, xzr
   1dd00:	mov	w3, w20
   1dd04:	bl	c640 <mpfr_set_ui_2exp@plt>
   1dd08:	b	1d864 <mpfr_pow@@Base+0x2a4>
   1dd0c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1dd10:	cmp	x9, x10
   1dd14:	b.ne	1dd48 <mpfr_pow@@Base+0x788>  // b.any
   1dd18:	cmp	x8, x10
   1dd1c:	b.ne	1dd8c <mpfr_pow@@Base+0x7cc>  // b.any
   1dd20:	ldr	w8, [x21, #8]
   1dd24:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1dd28:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1dd2c:	mov	w11, #0x1                   	// #1
   1dd30:	cmp	w8, #0x0
   1dd34:	csel	x8, x10, x9, gt
   1dd38:	mov	w24, wzr
   1dd3c:	str	x8, [x19, #16]
   1dd40:	str	w11, [x19, #8]
   1dd44:	b	1dca0 <mpfr_pow@@Base+0x6e0>
   1dd48:	ldr	w9, [x22, #8]
   1dd4c:	mov	w20, #0x1                   	// #1
   1dd50:	cmp	x8, x10
   1dd54:	b.ne	1ddc4 <mpfr_pow@@Base+0x804>  // b.any
   1dd58:	tbz	w9, #31, 1dd6c <mpfr_pow@@Base+0x7ac>
   1dd5c:	mov	x0, x21
   1dd60:	bl	cd00 <mpfr_odd_p@plt>
   1dd64:	cmp	w0, #0x0
   1dd68:	cneg	w20, w20, ne  // ne = any
   1dd6c:	ldr	w8, [x21, #8]
   1dd70:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1dd74:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   1dd78:	mov	w24, wzr
   1dd7c:	cmp	w8, #0x0
   1dd80:	csel	x8, x10, x9, gt
   1dd84:	str	x8, [x19, #16]
   1dd88:	b	1deb8 <mpfr_pow@@Base+0x8f8>
   1dd8c:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   1dd90:	ldr	x1, [x1, #3944]
   1dd94:	mov	x0, x22
   1dd98:	bl	ca00 <mpfr_cmpabs@plt>
   1dd9c:	ldr	w8, [x21, #8]
   1dda0:	mov	w9, #0x1                   	// #1
   1dda4:	str	w9, [x19, #8]
   1dda8:	mul	w8, w8, w0
   1ddac:	cmp	w8, #0x1
   1ddb0:	b.lt	1de80 <mpfr_pow@@Base+0x8c0>  // b.tstop
   1ddb4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1ddb8:	mov	w24, wzr
   1ddbc:	str	x8, [x19, #16]
   1ddc0:	b	1dca0 <mpfr_pow@@Base+0x6e0>
   1ddc4:	tbz	w9, #31, 1ddd8 <mpfr_pow@@Base+0x818>
   1ddc8:	mov	x0, x21
   1ddcc:	bl	cd00 <mpfr_odd_p@plt>
   1ddd0:	cmp	w0, #0x0
   1ddd4:	cneg	w20, w20, ne  // ne = any
   1ddd8:	ldr	w8, [x21, #8]
   1dddc:	tbnz	w8, #31, 1de8c <mpfr_pow@@Base+0x8cc>
   1dde0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1dde4:	str	x8, [x19, #16]
   1dde8:	b	1deb4 <mpfr_pow@@Base+0x8f4>
   1ddec:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1ddf0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1ddf4:	add	x0, x0, #0xd39
   1ddf8:	add	x2, x2, #0xde0
   1ddfc:	mov	w1, #0x289                 	// #649
   1de00:	bl	cb90 <mpfr_assert_fail@plt>
   1de04:	b	1da9c <mpfr_pow@@Base+0x4dc>
   1de08:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1de0c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1de10:	add	x0, x0, #0xd39
   1de14:	add	x2, x2, #0xdd5
   1de18:	mov	w1, #0x24b                 	// #587
   1de1c:	bl	cb90 <mpfr_assert_fail@plt>
   1de20:	b	1d904 <mpfr_pow@@Base+0x344>
   1de24:	ldr	w8, [x22, #8]
   1de28:	cmp	w20, #0x0
   1de2c:	csinc	w22, w20, wzr, ne  // ne = any
   1de30:	mov	w20, #0x1                   	// #1
   1de34:	tbz	w8, #31, 1de48 <mpfr_pow@@Base+0x888>
   1de38:	mov	x0, x21
   1de3c:	bl	cd00 <mpfr_odd_p@plt>
   1de40:	cmp	w0, #0x0
   1de44:	cneg	w20, w20, ne  // ne = any
   1de48:	mov	x0, x19
   1de4c:	mov	w1, w22
   1de50:	mov	w2, w20
   1de54:	bl	c420 <mpfr_underflow@plt>
   1de58:	b	1d864 <mpfr_pow@@Base+0x2a4>
   1de5c:	mov	x8, xzr
   1de60:	b	1dbd4 <mpfr_pow@@Base+0x614>
   1de64:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1de68:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1de6c:	add	x0, x0, #0xd39
   1de70:	add	x2, x2, #0xded
   1de74:	mov	w1, #0x2aa                 	// #682
   1de78:	bl	cb90 <mpfr_assert_fail@plt>
   1de7c:	b	1dbc8 <mpfr_pow@@Base+0x608>
   1de80:	tbz	w8, #31, 1dcf4 <mpfr_pow@@Base+0x734>
   1de84:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1de88:	b	1ddb8 <mpfr_pow@@Base+0x7f8>
   1de8c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1de90:	str	x8, [x19, #16]
   1de94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1de98:	ldr	x1, [x0, #2656]
   1de9c:	add	x0, x0, #0xa60
   1dea0:	blr	x1
   1dea4:	mrs	x8, tpidr_el0
   1dea8:	ldr	w9, [x8, x0]
   1deac:	orr	w9, w9, #0x20
   1deb0:	str	w9, [x8, x0]
   1deb4:	mov	w24, wzr
   1deb8:	str	w20, [x19, #8]
   1debc:	b	1dca0 <mpfr_pow@@Base+0x6e0>
   1dec0:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1dec4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1dec8:	add	x0, x0, #0xd39
   1decc:	add	x2, x2, #0xdd5
   1ded0:	mov	w1, #0x24f                 	// #591
   1ded4:	bl	cb90 <mpfr_assert_fail@plt>
   1ded8:	b	1d924 <mpfr_pow@@Base+0x364>
   1dedc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1dee0:	ldr	x1, [x0, #2656]
   1dee4:	add	x0, x0, #0xa60
   1dee8:	blr	x1
   1deec:	str	wzr, [x27, x0]
   1def0:	ldr	w8, [x21, #8]
   1def4:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   1def8:	ldr	x1, [x1, #3944]
   1defc:	mov	x0, x19
   1df00:	cmp	w8, #0x0
   1df04:	cset	w8, gt
   1df08:	eor	w3, w8, w24, lsr #31
   1df0c:	mov	w4, w20
   1df10:	bl	c590 <mpfr_round_near_x@plt>
   1df14:	cbz	w0, 1dc08 <mpfr_pow@@Base+0x648>
   1df18:	mov	w24, w0
   1df1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1df20:	ldr	x1, [x0, #2656]
   1df24:	add	x0, x0, #0xa60
   1df28:	blr	x1
   1df2c:	ldr	w8, [x27, x0]
   1df30:	ldur	w10, [x29, #-24]
   1df34:	ldur	x9, [x29, #-16]
   1df38:	orr	w8, w10, w8
   1df3c:	stur	w8, [x29, #-24]
   1df40:	str	w8, [x27, x0]
   1df44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1df48:	ldr	x1, [x0, #2592]
   1df4c:	add	x0, x0, #0xa20
   1df50:	blr	x1
   1df54:	ldur	x11, [x29, #-8]
   1df58:	str	x9, [x27, x0]
   1df5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1df60:	ldr	x1, [x0, #2624]
   1df64:	add	x0, x0, #0xa40
   1df68:	blr	x1
   1df6c:	str	x11, [x27, x0]
   1df70:	ldr	x10, [x19, #16]
   1df74:	cmp	x10, x11
   1df78:	b.gt	1df84 <mpfr_pow@@Base+0x9c4>
   1df7c:	cmp	x10, x9
   1df80:	b.ge	1dc88 <mpfr_pow@@Base+0x6c8>  // b.tcont
   1df84:	mov	x0, x19
   1df88:	mov	w1, w24
   1df8c:	mov	w2, w20
   1df90:	bl	cb80 <mpfr_check_range@plt>
   1df94:	b	1d864 <mpfr_pow@@Base+0x2a4>

000000000001df98 <mpfr_pow_si@@Base>:
   1df98:	sub	sp, sp, #0xf0
   1df9c:	stp	x22, x21, [sp, #208]
   1dfa0:	stp	x20, x19, [sp, #224]
   1dfa4:	mov	w20, w3
   1dfa8:	mov	x22, x2
   1dfac:	mov	x21, x1
   1dfb0:	mov	x19, x0
   1dfb4:	stp	x29, x30, [sp, #144]
   1dfb8:	stp	x28, x27, [sp, #160]
   1dfbc:	stp	x26, x25, [sp, #176]
   1dfc0:	stp	x24, x23, [sp, #192]
   1dfc4:	add	x29, sp, #0x90
   1dfc8:	tbnz	x2, #63, 1dffc <mpfr_pow_si@@Base+0x64>
   1dfcc:	mov	x0, x19
   1dfd0:	mov	x1, x21
   1dfd4:	mov	x2, x22
   1dfd8:	mov	w3, w20
   1dfdc:	ldp	x20, x19, [sp, #224]
   1dfe0:	ldp	x22, x21, [sp, #208]
   1dfe4:	ldp	x24, x23, [sp, #192]
   1dfe8:	ldp	x26, x25, [sp, #176]
   1dfec:	ldp	x28, x27, [sp, #160]
   1dff0:	ldp	x29, x30, [sp, #144]
   1dff4:	add	sp, sp, #0xf0
   1dff8:	b	c020 <mpfr_pow_ui@plt>
   1dffc:	ldr	x8, [x21, #16]
   1e000:	mov	x10, #0x2                   	// #2
   1e004:	movk	x10, #0x8000, lsl #48
   1e008:	add	x9, x10, #0x2
   1e00c:	cmp	x8, x9
   1e010:	b.lt	1e420 <mpfr_pow_si@@Base+0x488>  // b.tstop
   1e014:	ldrsw	x1, [x21, #8]
   1e018:	sub	x2, x8, #0x1
   1e01c:	mov	x0, x21
   1e020:	bl	c430 <mpfr_cmp_si_2exp@plt>
   1e024:	cbz	w0, 1e0e8 <mpfr_pow_si@@Base+0x150>
   1e028:	ldr	x27, [x19]
   1e02c:	neg	x8, x22
   1e030:	clz	x23, x8
   1e034:	str	x8, [sp, #40]
   1e038:	subs	x24, x27, #0x1
   1e03c:	b.eq	1e468 <mpfr_pow_si@@Base+0x4d0>  // b.none
   1e040:	b.le	1e4d4 <mpfr_pow_si@@Base+0x53c>
   1e044:	clz	x8, x24
   1e048:	mov	w9, #0x40                  	// #64
   1e04c:	sub	x8, x9, x8
   1e050:	sub	x9, x27, x23
   1e054:	add	x8, x9, x8
   1e058:	add	x24, x8, #0x43
   1e05c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e060:	ldr	x1, [x0, #2656]
   1e064:	add	x0, x0, #0xa60
   1e068:	blr	x1
   1e06c:	mrs	x28, tpidr_el0
   1e070:	ldr	w8, [x28, x0]
   1e074:	str	w8, [sp, #36]
   1e078:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e07c:	ldr	x1, [x0, #2592]
   1e080:	add	x0, x0, #0xa20
   1e084:	blr	x1
   1e088:	ldr	x9, [x28, x0]
   1e08c:	mov	x8, x0
   1e090:	str	x9, [sp, #24]
   1e094:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e098:	ldr	x1, [x0, #2624]
   1e09c:	add	x0, x0, #0xa40
   1e0a0:	blr	x1
   1e0a4:	ldr	x9, [x28, x0]
   1e0a8:	mov	x1, x24
   1e0ac:	str	x9, [sp, #16]
   1e0b0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1e0b4:	str	x9, [x28, x8]
   1e0b8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   1e0bc:	str	x8, [x28, x0]
   1e0c0:	sub	x0, x29, #0x20
   1e0c4:	bl	cad0 <mpfr_init2@plt>
   1e0c8:	ldr	x8, [x21, #16]
   1e0cc:	cmp	x8, #0x1
   1e0d0:	b.lt	1e134 <mpfr_pow_si@@Base+0x19c>  // b.tstop
   1e0d4:	ldr	w8, [x21, #8]
   1e0d8:	cmp	w8, #0x0
   1e0dc:	mov	w8, #0x2                   	// #2
   1e0e0:	cinc	w25, w8, le
   1e0e4:	b	1e138 <mpfr_pow_si@@Base+0x1a0>
   1e0e8:	ldr	x9, [x21, #16]
   1e0ec:	cmn	x22, #0x1
   1e0f0:	sub	x8, x9, #0x1
   1e0f4:	b.eq	1e344 <mpfr_pow_si@@Base+0x3ac>  // b.none
   1e0f8:	cmp	x9, #0x2
   1e0fc:	b.lt	1e344 <mpfr_pow_si@@Base+0x3ac>  // b.tstop
   1e100:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e104:	ldr	x1, [x0, #2592]
   1e108:	add	x0, x0, #0xa20
   1e10c:	blr	x1
   1e110:	mrs	x9, tpidr_el0
   1e114:	ldr	x9, [x9, x0]
   1e118:	sub	x9, x9, #0x1
   1e11c:	sdiv	x9, x9, x22
   1e120:	cmp	x8, x9
   1e124:	b.le	1e37c <mpfr_pow_si@@Base+0x3e4>
   1e128:	mov	x2, #0xbfffffffffffffff    	// #-4611686018427387905
   1e12c:	tbz	w22, #0, 1e384 <mpfr_pow_si@@Base+0x3ec>
   1e130:	b	1e394 <mpfr_pow_si@@Base+0x3fc>
   1e134:	mov	w25, #0x1                   	// #1
   1e138:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e13c:	ldr	x1, [x0, #2656]
   1e140:	add	x0, x0, #0xa60
   1e144:	blr	x1
   1e148:	mov	x26, x0
   1e14c:	str	wzr, [x28, x0]
   1e150:	sub	x0, x29, #0x20
   1e154:	mov	w1, #0x1                   	// #1
   1e158:	mov	x2, x21
   1e15c:	mov	w3, w25
   1e160:	bl	c350 <mpfr_ui_div@plt>
   1e164:	ldrb	w8, [x28, x26]
   1e168:	tbnz	w8, #1, 1e3c0 <mpfr_pow_si@@Base+0x428>
   1e16c:	cmp	w20, #0x0
   1e170:	sub	x23, x23, #0x42
   1e174:	mov	w8, #0x40                  	// #64
   1e178:	cinc	x27, x27, eq  // eq = none
   1e17c:	str	x8, [sp, #8]
   1e180:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e184:	ldr	x1, [x0, #2656]
   1e188:	add	x0, x0, #0xa60
   1e18c:	blr	x1
   1e190:	ldr	x2, [sp, #40]
   1e194:	mov	x26, x0
   1e198:	str	wzr, [x28, x0]
   1e19c:	sub	x0, x29, #0x20
   1e1a0:	sub	x1, x29, #0x20
   1e1a4:	mov	w3, w20
   1e1a8:	bl	c020 <mpfr_pow_ui@plt>
   1e1ac:	ldr	w8, [x28, x26]
   1e1b0:	tbnz	w8, #1, 1e3c0 <mpfr_pow_si@@Base+0x428>
   1e1b4:	tbnz	w8, #0, 1e470 <mpfr_pow_si@@Base+0x4d8>
   1e1b8:	ldur	x8, [x29, #-16]
   1e1bc:	mov	x26, #0x2                   	// #2
   1e1c0:	movk	x26, #0x8000, lsl #48
   1e1c4:	add	x9, x26, #0x2
   1e1c8:	cmp	x8, x9
   1e1cc:	b.lt	1e200 <mpfr_pow_si@@Base+0x268>  // b.tstop
   1e1d0:	ldur	x8, [x29, #-32]
   1e1d4:	ldur	x0, [x29, #-8]
   1e1d8:	add	x2, x23, x24
   1e1dc:	mov	x3, x27
   1e1e0:	sub	x9, x8, #0x1
   1e1e4:	add	x8, x8, #0x3e
   1e1e8:	cmp	x9, #0x0
   1e1ec:	csel	x8, x8, x9, lt  // lt = tstop
   1e1f0:	asr	x8, x8, #6
   1e1f4:	add	x1, x8, #0x1
   1e1f8:	bl	c3d0 <mpfr_round_p@plt>
   1e1fc:	cbnz	w0, 1e288 <mpfr_pow_si@@Base+0x2f0>
   1e200:	sub	x8, x26, x24
   1e204:	ldr	x26, [sp, #8]
   1e208:	sub	x8, x8, #0x103
   1e20c:	cmp	x26, x8
   1e210:	b.gt	1e26c <mpfr_pow_si@@Base+0x2d4>
   1e214:	add	x24, x24, x26
   1e218:	cmp	x24, #0x0
   1e21c:	cinc	x8, x24, lt  // lt = tstop
   1e220:	asr	x8, x8, #1
   1e224:	sub	x0, x29, #0x20
   1e228:	mov	x1, x24
   1e22c:	str	x8, [sp, #8]
   1e230:	bl	bf80 <mpfr_set_prec@plt>
   1e234:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e238:	ldr	x1, [x0, #2656]
   1e23c:	add	x0, x0, #0xa60
   1e240:	blr	x1
   1e244:	mov	x26, x0
   1e248:	str	wzr, [x28, x0]
   1e24c:	sub	x0, x29, #0x20
   1e250:	mov	w1, #0x1                   	// #1
   1e254:	mov	x2, x21
   1e258:	mov	w3, w25
   1e25c:	bl	c350 <mpfr_ui_div@plt>
   1e260:	ldrb	w8, [x28, x26]
   1e264:	tbz	w8, #1, 1e180 <mpfr_pow_si@@Base+0x1e8>
   1e268:	b	1e3c0 <mpfr_pow_si@@Base+0x428>
   1e26c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1e270:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1e274:	mov	w1, #0xed                  	// #237
   1e278:	add	x0, x0, #0xdf8
   1e27c:	add	x2, x2, #0xe2
   1e280:	bl	cb90 <mpfr_assert_fail@plt>
   1e284:	b	1e214 <mpfr_pow_si@@Base+0x27c>
   1e288:	ldur	w3, [x29, #-24]
   1e28c:	sub	x1, x29, #0x20
   1e290:	mov	x0, x19
   1e294:	mov	w2, w20
   1e298:	bl	c6f0 <mpfr_set4@plt>
   1e29c:	mov	w21, w0
   1e2a0:	sub	x0, x29, #0x20
   1e2a4:	bl	c110 <mpfr_clear@plt>
   1e2a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e2ac:	ldr	x1, [x0, #2656]
   1e2b0:	add	x0, x0, #0xa60
   1e2b4:	blr	x1
   1e2b8:	ldr	w9, [sp, #36]
   1e2bc:	str	w9, [x28, x0]
   1e2c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e2c4:	ldr	x1, [x0, #2592]
   1e2c8:	add	x0, x0, #0xa20
   1e2cc:	blr	x1
   1e2d0:	ldr	x10, [sp, #24]
   1e2d4:	str	x10, [x28, x0]
   1e2d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e2dc:	ldr	x1, [x0, #2624]
   1e2e0:	add	x0, x0, #0xa40
   1e2e4:	blr	x1
   1e2e8:	ldr	x11, [sp, #16]
   1e2ec:	str	x11, [x28, x0]
   1e2f0:	ldr	x8, [x19, #16]
   1e2f4:	cmp	x8, x11
   1e2f8:	b.gt	1e4f0 <mpfr_pow_si@@Base+0x558>
   1e2fc:	cmp	x8, x10
   1e300:	b.lt	1e4f0 <mpfr_pow_si@@Base+0x558>  // b.tstop
   1e304:	cbz	w21, 1e320 <mpfr_pow_si@@Base+0x388>
   1e308:	orr	w8, w9, #0x8
   1e30c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e310:	ldr	x1, [x0, #2656]
   1e314:	add	x0, x0, #0xa60
   1e318:	blr	x1
   1e31c:	str	w8, [x28, x0]
   1e320:	mov	w0, w21
   1e324:	ldp	x20, x19, [sp, #224]
   1e328:	ldp	x22, x21, [sp, #208]
   1e32c:	ldp	x24, x23, [sp, #192]
   1e330:	ldp	x26, x25, [sp, #176]
   1e334:	ldp	x28, x27, [sp, #160]
   1e338:	ldp	x29, x30, [sp, #144]
   1e33c:	add	sp, sp, #0xf0
   1e340:	ret
   1e344:	cmn	x22, #0x1
   1e348:	b.eq	1e37c <mpfr_pow_si@@Base+0x3e4>  // b.none
   1e34c:	cmp	x9, #0x0
   1e350:	b.gt	1e37c <mpfr_pow_si@@Base+0x3e4>
   1e354:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e358:	ldr	x1, [x0, #2624]
   1e35c:	add	x0, x0, #0xa40
   1e360:	blr	x1
   1e364:	mrs	x10, tpidr_el0
   1e368:	ldr	x10, [x10, x0]
   1e36c:	sub	x10, x10, #0x1
   1e370:	sdiv	x10, x10, x22
   1e374:	cmp	x9, x10
   1e378:	b.le	1e38c <mpfr_pow_si@@Base+0x3f4>
   1e37c:	mul	x2, x8, x22
   1e380:	tbnz	w22, #0, 1e394 <mpfr_pow_si@@Base+0x3fc>
   1e384:	mov	w1, #0x1                   	// #1
   1e388:	b	1e398 <mpfr_pow_si@@Base+0x400>
   1e38c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1e390:	tbz	w22, #0, 1e384 <mpfr_pow_si@@Base+0x3ec>
   1e394:	ldrsw	x1, [x21, #8]
   1e398:	mov	x0, x19
   1e39c:	mov	w3, w20
   1e3a0:	ldp	x20, x19, [sp, #224]
   1e3a4:	ldp	x22, x21, [sp, #208]
   1e3a8:	ldp	x24, x23, [sp, #192]
   1e3ac:	ldp	x26, x25, [sp, #176]
   1e3b0:	ldp	x28, x27, [sp, #160]
   1e3b4:	ldp	x29, x30, [sp, #144]
   1e3b8:	add	sp, sp, #0xf0
   1e3bc:	b	bb40 <mpfr_set_si_2exp@plt>
   1e3c0:	sub	x0, x29, #0x20
   1e3c4:	bl	c110 <mpfr_clear@plt>
   1e3c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e3cc:	ldr	x1, [x0, #2656]
   1e3d0:	add	x0, x0, #0xa60
   1e3d4:	blr	x1
   1e3d8:	ldr	w8, [sp, #36]
   1e3dc:	str	w8, [x28, x0]
   1e3e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e3e4:	ldr	x1, [x0, #2592]
   1e3e8:	add	x0, x0, #0xa20
   1e3ec:	blr	x1
   1e3f0:	ldr	x8, [sp, #24]
   1e3f4:	str	x8, [x28, x0]
   1e3f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e3fc:	ldr	x1, [x0, #2624]
   1e400:	add	x0, x0, #0xa40
   1e404:	blr	x1
   1e408:	ldr	x8, [sp, #16]
   1e40c:	str	x8, [x28, x0]
   1e410:	ldr	x8, [sp, #40]
   1e414:	tbnz	w8, #0, 1e454 <mpfr_pow_si@@Base+0x4bc>
   1e418:	mov	w2, #0x1                   	// #1
   1e41c:	b	1e458 <mpfr_pow_si@@Base+0x4c0>
   1e420:	cmp	x8, x10
   1e424:	b.ne	1e504 <mpfr_pow_si@@Base+0x56c>  // b.any
   1e428:	str	x10, [x19, #16]
   1e42c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e430:	ldr	x1, [x0, #2656]
   1e434:	add	x0, x0, #0xa60
   1e438:	blr	x1
   1e43c:	mrs	x8, tpidr_el0
   1e440:	ldr	w9, [x8, x0]
   1e444:	mov	w21, wzr
   1e448:	orr	w9, w9, #0x4
   1e44c:	str	w9, [x8, x0]
   1e450:	b	1e320 <mpfr_pow_si@@Base+0x388>
   1e454:	ldr	w2, [x21, #8]
   1e458:	mov	x0, x19
   1e45c:	mov	w1, w20
   1e460:	bl	bff0 <mpfr_overflow@plt>
   1e464:	b	1e604 <mpfr_pow_si@@Base+0x66c>
   1e468:	mov	x8, xzr
   1e46c:	b	1e050 <mpfr_pow_si@@Base+0xb8>
   1e470:	sub	x0, x29, #0x20
   1e474:	bl	c110 <mpfr_clear@plt>
   1e478:	cbz	w20, 1e570 <mpfr_pow_si@@Base+0x5d8>
   1e47c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e480:	ldr	x1, [x0, #2656]
   1e484:	add	x0, x0, #0xa60
   1e488:	blr	x1
   1e48c:	ldr	w8, [sp, #36]
   1e490:	str	w8, [x28, x0]
   1e494:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e498:	ldr	x1, [x0, #2592]
   1e49c:	add	x0, x0, #0xa20
   1e4a0:	blr	x1
   1e4a4:	ldr	x8, [sp, #24]
   1e4a8:	str	x8, [x28, x0]
   1e4ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e4b0:	ldr	x1, [x0, #2624]
   1e4b4:	add	x0, x0, #0xa40
   1e4b8:	blr	x1
   1e4bc:	ldr	x8, [sp, #16]
   1e4c0:	str	x8, [x28, x0]
   1e4c4:	ldr	x8, [sp, #40]
   1e4c8:	tbnz	w8, #0, 1e5f4 <mpfr_pow_si@@Base+0x65c>
   1e4cc:	mov	w2, #0x1                   	// #1
   1e4d0:	b	1e5f8 <mpfr_pow_si@@Base+0x660>
   1e4d4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1e4d8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1e4dc:	add	x0, x0, #0xdf8
   1e4e0:	add	x2, x2, #0xd9
   1e4e4:	mov	w1, #0x9d                  	// #157
   1e4e8:	bl	cb90 <mpfr_assert_fail@plt>
   1e4ec:	b	1e044 <mpfr_pow_si@@Base+0xac>
   1e4f0:	mov	x0, x19
   1e4f4:	mov	w1, w21
   1e4f8:	mov	w2, w20
   1e4fc:	bl	cb80 <mpfr_check_range@plt>
   1e500:	b	1e604 <mpfr_pow_si@@Base+0x66c>
   1e504:	ldr	w10, [x21, #8]
   1e508:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1e50c:	cmp	w10, #0x0
   1e510:	cset	w10, gt
   1e514:	tst	x22, #0x1
   1e518:	cset	w11, eq  // eq = none
   1e51c:	cmp	x8, x9
   1e520:	orr	w8, w11, w10
   1e524:	b.ne	1e534 <mpfr_pow_si@@Base+0x59c>  // b.any
   1e528:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   1e52c:	str	x9, [x19, #16]
   1e530:	b	1e558 <mpfr_pow_si@@Base+0x5c0>
   1e534:	str	x9, [x19, #16]
   1e538:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e53c:	ldr	x1, [x0, #2656]
   1e540:	add	x0, x0, #0xa60
   1e544:	blr	x1
   1e548:	mrs	x9, tpidr_el0
   1e54c:	ldr	w10, [x9, x0]
   1e550:	orr	w10, w10, #0x20
   1e554:	str	w10, [x9, x0]
   1e558:	cmp	w8, #0x0
   1e55c:	mov	w8, #0x1                   	// #1
   1e560:	cneg	w8, w8, eq  // eq = none
   1e564:	mov	w21, wzr
   1e568:	str	w8, [x19, #8]
   1e56c:	b	1e320 <mpfr_pow_si@@Base+0x388>
   1e570:	sub	x0, x29, #0x40
   1e574:	mov	w1, #0x2                   	// #2
   1e578:	bl	cad0 <mpfr_init2@plt>
   1e57c:	add	x0, sp, #0x30
   1e580:	mov	w1, #0x40                  	// #64
   1e584:	bl	cad0 <mpfr_init2@plt>
   1e588:	add	x0, sp, #0x30
   1e58c:	mov	x1, x22
   1e590:	mov	x2, xzr
   1e594:	mov	w3, wzr
   1e598:	bl	bb40 <mpfr_set_si_2exp@plt>
   1e59c:	cbnz	w0, 1e60c <mpfr_pow_si@@Base+0x674>
   1e5a0:	sub	x0, x29, #0x40
   1e5a4:	add	x2, sp, #0x30
   1e5a8:	mov	w4, #0x1                   	// #1
   1e5ac:	mov	x1, x21
   1e5b0:	mov	w3, wzr
   1e5b4:	mov	x5, xzr
   1e5b8:	bl	c740 <mpfr_pow_general@plt>
   1e5bc:	mov	w21, w0
   1e5c0:	add	x0, sp, #0x30
   1e5c4:	bl	c110 <mpfr_clear@plt>
   1e5c8:	ldur	w3, [x29, #-56]
   1e5cc:	sub	x1, x29, #0x40
   1e5d0:	mov	x0, x19
   1e5d4:	mov	w2, wzr
   1e5d8:	bl	c6f0 <mpfr_set4@plt>
   1e5dc:	sub	x0, x29, #0x40
   1e5e0:	bl	c110 <mpfr_clear@plt>
   1e5e4:	ldr	w8, [sp, #36]
   1e5e8:	orr	w8, w8, #0x1
   1e5ec:	str	w8, [sp, #36]
   1e5f0:	b	1e2a8 <mpfr_pow_si@@Base+0x310>
   1e5f4:	ldr	w2, [x21, #8]
   1e5f8:	mov	x0, x19
   1e5fc:	mov	w1, w20
   1e600:	bl	c420 <mpfr_underflow@plt>
   1e604:	mov	w21, w0
   1e608:	b	1e320 <mpfr_pow_si@@Base+0x388>
   1e60c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1e610:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1e614:	add	x0, x0, #0xdf8
   1e618:	add	x2, x2, #0xde0
   1e61c:	mov	w1, #0xd8                  	// #216
   1e620:	bl	cb90 <mpfr_assert_fail@plt>
   1e624:	b	1e5a0 <mpfr_pow_si@@Base+0x608>

000000000001e628 <mpfr_pow_ui@@Base>:
   1e628:	sub	sp, sp, #0xc0
   1e62c:	stp	x24, x23, [sp, #144]
   1e630:	stp	x20, x19, [sp, #176]
   1e634:	mov	w23, w3
   1e638:	mov	x19, x0
   1e63c:	stp	x29, x30, [sp, #96]
   1e640:	stp	x28, x27, [sp, #112]
   1e644:	stp	x26, x25, [sp, #128]
   1e648:	stp	x22, x21, [sp, #160]
   1e64c:	add	x29, sp, #0x60
   1e650:	cbz	x2, 1e9b4 <mpfr_pow_ui@@Base+0x38c>
   1e654:	ldr	x9, [x1, #16]
   1e658:	mov	x8, #0x4                   	// #4
   1e65c:	movk	x8, #0x8000, lsl #48
   1e660:	mov	x22, x2
   1e664:	mov	x21, x1
   1e668:	cmp	x9, x8
   1e66c:	b.lt	1e9c8 <mpfr_pow_ui@@Base+0x3a0>  // b.tstop
   1e670:	cmp	x22, #0x2
   1e674:	b.ls	1ea1c <mpfr_pow_ui@@Base+0x3f4>  // b.plast
   1e678:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e67c:	ldr	x1, [x0, #2656]
   1e680:	add	x0, x0, #0xa60
   1e684:	blr	x1
   1e688:	mrs	x24, tpidr_el0
   1e68c:	ldr	w8, [x24, x0]
   1e690:	str	w8, [sp, #40]
   1e694:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e698:	ldr	x1, [x0, #2592]
   1e69c:	add	x0, x0, #0xa20
   1e6a0:	blr	x1
   1e6a4:	ldr	x9, [x24, x0]
   1e6a8:	mov	x8, x0
   1e6ac:	str	x9, [sp, #32]
   1e6b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e6b4:	ldr	x1, [x0, #2624]
   1e6b8:	add	x0, x0, #0xa40
   1e6bc:	blr	x1
   1e6c0:	ldr	x9, [x24, x0]
   1e6c4:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   1e6c8:	str	x10, [x24, x0]
   1e6cc:	str	x9, [sp, #24]
   1e6d0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   1e6d4:	str	x9, [x24, x8]
   1e6d8:	ldr	x8, [x19]
   1e6dc:	cmp	x8, #0x1
   1e6e0:	add	x20, x8, #0x43
   1e6e4:	b.eq	1ea34 <mpfr_pow_ui@@Base+0x40c>  // b.none
   1e6e8:	b.le	1eac4 <mpfr_pow_ui@@Base+0x49c>
   1e6ec:	sub	x8, x8, #0x1
   1e6f0:	clz	x8, x8
   1e6f4:	mov	w9, #0x40                  	// #64
   1e6f8:	sub	x8, x9, x8
   1e6fc:	add	x26, x20, x8
   1e700:	sub	x0, x29, #0x20
   1e704:	mov	x1, x26
   1e708:	bl	cad0 <mpfr_init2@plt>
   1e70c:	ldr	w8, [x21, #8]
   1e710:	mov	w9, #0x2                   	// #2
   1e714:	mov	w10, #0x40                  	// #64
   1e718:	mov	w20, #0x27                  	// #39
   1e71c:	cmp	w8, #0x0
   1e720:	cinc	w25, w9, le
   1e724:	cmp	w23, #0x0
   1e728:	cset	w8, eq  // eq = none
   1e72c:	str	w23, [sp, #44]
   1e730:	stp	x10, x8, [sp, #8]
   1e734:	mov	x23, x19
   1e738:	str	x26, [sp]
   1e73c:	sub	x27, x26, #0x1
   1e740:	mov	w26, #0xfffffffd            	// #-3
   1e744:	mov	x8, x22
   1e748:	lsr	x8, x8, #1
   1e74c:	add	w26, w26, #0x1
   1e750:	sub	x27, x27, #0x1
   1e754:	cbnz	x8, 1e748 <mpfr_pow_ui@@Base+0x120>
   1e758:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e75c:	ldr	x1, [x0, #2656]
   1e760:	add	x0, x0, #0xa60
   1e764:	blr	x1
   1e768:	str	wzr, [x24, x0]
   1e76c:	sub	x0, x29, #0x20
   1e770:	mov	w3, #0x2                   	// #2
   1e774:	mov	x1, x21
   1e778:	mov	x2, x21
   1e77c:	bl	be00 <mpfr_mul@plt>
   1e780:	add	w8, w26, #0x1
   1e784:	mov	w28, w0
   1e788:	lsr	x8, x22, x8
   1e78c:	add	w19, w26, #0x2
   1e790:	tbz	w8, #0, 1e7ac <mpfr_pow_ui@@Base+0x184>
   1e794:	sub	x0, x29, #0x20
   1e798:	sub	x1, x29, #0x20
   1e79c:	mov	x2, x21
   1e7a0:	mov	w3, w25
   1e7a4:	bl	be00 <mpfr_mul@plt>
   1e7a8:	orr	w28, w0, w28
   1e7ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e7b0:	ldr	x1, [x0, #2656]
   1e7b4:	add	x0, x0, #0xa60
   1e7b8:	blr	x1
   1e7bc:	ldr	w8, [x24, x0]
   1e7c0:	cmp	w19, #0x2
   1e7c4:	b.cc	1e838 <mpfr_pow_ui@@Base+0x210>  // b.lo, b.ul, b.last
   1e7c8:	and	w9, w8, w20
   1e7cc:	mov	x19, x23
   1e7d0:	cbnz	w9, 1e83c <mpfr_pow_ui@@Base+0x214>
   1e7d4:	mov	w26, w26
   1e7d8:	sub	x0, x29, #0x20
   1e7dc:	sub	x1, x29, #0x20
   1e7e0:	sub	x2, x29, #0x20
   1e7e4:	mov	w3, #0x2                   	// #2
   1e7e8:	bl	be00 <mpfr_mul@plt>
   1e7ec:	lsr	x8, x22, x26
   1e7f0:	orr	w28, w0, w28
   1e7f4:	tbz	w8, #0, 1e810 <mpfr_pow_ui@@Base+0x1e8>
   1e7f8:	sub	x0, x29, #0x20
   1e7fc:	sub	x1, x29, #0x20
   1e800:	mov	x2, x21
   1e804:	mov	w3, w25
   1e808:	bl	be00 <mpfr_mul@plt>
   1e80c:	orr	w28, w0, w28
   1e810:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e814:	ldr	x1, [x0, #2656]
   1e818:	add	x0, x0, #0xa60
   1e81c:	blr	x1
   1e820:	ldr	w8, [x24, x0]
   1e824:	subs	x26, x26, #0x1
   1e828:	b.lt	1e83c <mpfr_pow_ui@@Base+0x214>  // b.tstop
   1e82c:	and	w9, w8, w20
   1e830:	cbz	w9, 1e7d8 <mpfr_pow_ui@@Base+0x1b0>
   1e834:	b	1e83c <mpfr_pow_ui@@Base+0x214>
   1e838:	mov	x19, x23
   1e83c:	and	w26, w8, #0x3
   1e840:	cbz	w28, 1e8f0 <mpfr_pow_ui@@Base+0x2c8>
   1e844:	cbnz	w26, 1e8f0 <mpfr_pow_ui@@Base+0x2c8>
   1e848:	ldur	x8, [x29, #-16]
   1e84c:	mov	x9, #0x4                   	// #4
   1e850:	movk	x9, #0x8000, lsl #48
   1e854:	cmp	x8, x9
   1e858:	b.lt	1e894 <mpfr_pow_ui@@Base+0x26c>  // b.tstop
   1e85c:	ldur	x8, [x29, #-32]
   1e860:	ldr	x9, [x19]
   1e864:	ldur	x0, [x29, #-8]
   1e868:	mov	x2, x27
   1e86c:	sub	x10, x8, #0x1
   1e870:	add	x8, x8, #0x3e
   1e874:	cmp	x10, #0x0
   1e878:	csel	x8, x8, x10, lt  // lt = tstop
   1e87c:	asr	x8, x8, #6
   1e880:	add	x1, x8, #0x1
   1e884:	ldr	x8, [sp, #16]
   1e888:	add	x3, x9, x8
   1e88c:	bl	c3d0 <mpfr_round_p@plt>
   1e890:	cbnz	w0, 1e8f0 <mpfr_pow_ui@@Base+0x2c8>
   1e894:	ldp	x26, x23, [sp]
   1e898:	mov	x8, #0x4                   	// #4
   1e89c:	movk	x8, #0x8000, lsl #48
   1e8a0:	sub	x8, x8, x26
   1e8a4:	sub	x8, x8, #0x105
   1e8a8:	cmp	x23, x8
   1e8ac:	b.gt	1e8d4 <mpfr_pow_ui@@Base+0x2ac>
   1e8b0:	add	x26, x26, x23
   1e8b4:	cmp	x26, #0x0
   1e8b8:	cinc	x8, x26, lt  // lt = tstop
   1e8bc:	asr	x8, x8, #1
   1e8c0:	sub	x0, x29, #0x20
   1e8c4:	mov	x1, x26
   1e8c8:	str	x8, [sp, #8]
   1e8cc:	bl	bf80 <mpfr_set_prec@plt>
   1e8d0:	b	1e734 <mpfr_pow_ui@@Base+0x10c>
   1e8d4:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   1e8d8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1e8dc:	mov	w1, #0x86                  	// #134
   1e8e0:	add	x0, x0, #0x5e5
   1e8e4:	add	x2, x2, #0x922
   1e8e8:	bl	cb90 <mpfr_assert_fail@plt>
   1e8ec:	b	1e8b0 <mpfr_pow_ui@@Base+0x288>
   1e8f0:	cbnz	w26, 1ea3c <mpfr_pow_ui@@Base+0x414>
   1e8f4:	ldr	w20, [sp, #44]
   1e8f8:	ldur	w3, [x29, #-24]
   1e8fc:	sub	x1, x29, #0x20
   1e900:	mov	x0, x19
   1e904:	mov	w2, w20
   1e908:	bl	c6f0 <mpfr_set4@plt>
   1e90c:	mov	w23, w0
   1e910:	sub	x0, x29, #0x20
   1e914:	bl	c110 <mpfr_clear@plt>
   1e918:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e91c:	ldr	x1, [x0, #2656]
   1e920:	add	x0, x0, #0xa60
   1e924:	blr	x1
   1e928:	ldr	w9, [sp, #40]
   1e92c:	str	w9, [x24, x0]
   1e930:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e934:	ldr	x1, [x0, #2592]
   1e938:	add	x0, x0, #0xa20
   1e93c:	blr	x1
   1e940:	ldr	x10, [sp, #32]
   1e944:	str	x10, [x24, x0]
   1e948:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e94c:	ldr	x1, [x0, #2624]
   1e950:	add	x0, x0, #0xa40
   1e954:	blr	x1
   1e958:	ldr	x11, [sp, #24]
   1e95c:	str	x11, [x24, x0]
   1e960:	ldr	x8, [x19, #16]
   1e964:	cmp	x8, x11
   1e968:	b.gt	1eae4 <mpfr_pow_ui@@Base+0x4bc>
   1e96c:	cmp	x8, x10
   1e970:	b.lt	1eae4 <mpfr_pow_ui@@Base+0x4bc>  // b.tstop
   1e974:	cbz	w23, 1e990 <mpfr_pow_ui@@Base+0x368>
   1e978:	orr	w8, w9, #0x8
   1e97c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e980:	ldr	x1, [x0, #2656]
   1e984:	add	x0, x0, #0xa60
   1e988:	blr	x1
   1e98c:	str	w8, [x24, x0]
   1e990:	mov	w0, w23
   1e994:	ldp	x20, x19, [sp, #176]
   1e998:	ldp	x22, x21, [sp, #160]
   1e99c:	ldp	x24, x23, [sp, #144]
   1e9a0:	ldp	x26, x25, [sp, #128]
   1e9a4:	ldp	x28, x27, [sp, #112]
   1e9a8:	ldp	x29, x30, [sp, #96]
   1e9ac:	add	sp, sp, #0xc0
   1e9b0:	ret
   1e9b4:	mov	w1, #0x1                   	// #1
   1e9b8:	mov	x0, x19
   1e9bc:	mov	w3, w23
   1e9c0:	bl	c640 <mpfr_set_ui_2exp@plt>
   1e9c4:	b	1eb0c <mpfr_pow_ui@@Base+0x4e4>
   1e9c8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   1e9cc:	cmp	x9, x8
   1e9d0:	b.eq	1eb14 <mpfr_pow_ui@@Base+0x4ec>  // b.none
   1e9d4:	mov	x8, #0x2                   	// #2
   1e9d8:	movk	x8, #0x8000, lsl #48
   1e9dc:	cmp	x9, x8
   1e9e0:	b.ne	1eb3c <mpfr_pow_ui@@Base+0x514>  // b.any
   1e9e4:	mov	x8, #0x4                   	// #4
   1e9e8:	movk	x8, #0x8000, lsl #48
   1e9ec:	sub	x8, x8, #0x2
   1e9f0:	str	x8, [x19, #16]
   1e9f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1e9f8:	ldr	x1, [x0, #2656]
   1e9fc:	add	x0, x0, #0xa60
   1ea00:	blr	x1
   1ea04:	mrs	x8, tpidr_el0
   1ea08:	ldr	w9, [x8, x0]
   1ea0c:	mov	w23, wzr
   1ea10:	orr	w9, w9, #0x4
   1ea14:	str	w9, [x8, x0]
   1ea18:	b	1e990 <mpfr_pow_ui@@Base+0x368>
   1ea1c:	b.ne	1eaf8 <mpfr_pow_ui@@Base+0x4d0>  // b.any
   1ea20:	mov	x0, x19
   1ea24:	mov	x1, x21
   1ea28:	mov	w2, w23
   1ea2c:	bl	c450 <mpfr_sqr@plt>
   1ea30:	b	1eb0c <mpfr_pow_ui@@Base+0x4e4>
   1ea34:	mov	x8, xzr
   1ea38:	b	1e6fc <mpfr_pow_ui@@Base+0xd4>
   1ea3c:	sub	x0, x29, #0x20
   1ea40:	bl	c110 <mpfr_clear@plt>
   1ea44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1ea48:	ldr	x1, [x0, #2656]
   1ea4c:	add	x0, x0, #0xa60
   1ea50:	blr	x1
   1ea54:	ldr	w8, [sp, #40]
   1ea58:	str	w8, [x24, x0]
   1ea5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1ea60:	ldr	x1, [x0, #2592]
   1ea64:	add	x0, x0, #0xa20
   1ea68:	blr	x1
   1ea6c:	ldr	x8, [sp, #32]
   1ea70:	str	x8, [x24, x0]
   1ea74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1ea78:	ldr	x1, [x0, #2624]
   1ea7c:	add	x0, x0, #0xa40
   1ea80:	blr	x1
   1ea84:	ldr	x8, [sp, #24]
   1ea88:	str	x8, [x24, x0]
   1ea8c:	add	x0, sp, #0x30
   1ea90:	bl	c040 <mpfr_mpz_init@plt>
   1ea94:	add	x0, sp, #0x30
   1ea98:	mov	x1, x22
   1ea9c:	bl	bd60 <__gmpz_set_ui@plt>
   1eaa0:	ldr	w3, [sp, #44]
   1eaa4:	add	x2, sp, #0x30
   1eaa8:	mov	x0, x19
   1eaac:	mov	x1, x21
   1eab0:	bl	bfa0 <mpfr_pow_z@plt>
   1eab4:	mov	w23, w0
   1eab8:	add	x0, sp, #0x30
   1eabc:	bl	c210 <mpfr_mpz_clear@plt>
   1eac0:	b	1e990 <mpfr_pow_ui@@Base+0x368>
   1eac4:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   1eac8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1eacc:	add	x0, x0, #0x5e5
   1ead0:	add	x2, x2, #0xe01
   1ead4:	mov	w1, #0x5e                  	// #94
   1ead8:	bl	cb90 <mpfr_assert_fail@plt>
   1eadc:	ldr	x8, [x19]
   1eae0:	b	1e6ec <mpfr_pow_ui@@Base+0xc4>
   1eae4:	mov	x0, x19
   1eae8:	mov	w1, w23
   1eaec:	mov	w2, w20
   1eaf0:	bl	cb80 <mpfr_check_range@plt>
   1eaf4:	b	1eb0c <mpfr_pow_ui@@Base+0x4e4>
   1eaf8:	ldr	w3, [x21, #8]
   1eafc:	mov	x0, x19
   1eb00:	mov	x1, x21
   1eb04:	mov	w2, w23
   1eb08:	bl	c6f0 <mpfr_set4@plt>
   1eb0c:	mov	w23, w0
   1eb10:	b	1e990 <mpfr_pow_ui@@Base+0x368>
   1eb14:	ldr	w9, [x21, #8]
   1eb18:	and	x10, x22, #0x1
   1eb1c:	mov	w11, #0x1                   	// #1
   1eb20:	mov	w23, wzr
   1eb24:	cmn	w9, #0x1
   1eb28:	ccmp	x10, #0x0, #0x4, le
   1eb2c:	cneg	w9, w11, ne  // ne = any
   1eb30:	str	w9, [x19, #8]
   1eb34:	str	x8, [x19, #16]
   1eb38:	b	1e990 <mpfr_pow_ui@@Base+0x368>
   1eb3c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1eb40:	str	x8, [x19, #16]
   1eb44:	tbz	w22, #0, 1eb5c <mpfr_pow_ui@@Base+0x534>
   1eb48:	ldr	w8, [x21, #8]
   1eb4c:	cmp	w8, #0x1
   1eb50:	b.ge	1eb5c <mpfr_pow_ui@@Base+0x534>  // b.tcont
   1eb54:	mov	w8, #0xffffffff            	// #-1
   1eb58:	b	1eb60 <mpfr_pow_ui@@Base+0x538>
   1eb5c:	mov	w8, #0x1                   	// #1
   1eb60:	mov	w23, wzr
   1eb64:	str	w8, [x19, #8]
   1eb68:	b	1e990 <mpfr_pow_ui@@Base+0x368>

000000000001eb6c <mpfr_print_mant_binary@@Base>:
   1eb6c:	stp	x29, x30, [sp, #-80]!
   1eb70:	stp	x20, x19, [sp, #64]
   1eb74:	mov	x20, x1
   1eb78:	mov	x1, x0
   1eb7c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1eb80:	add	x0, x0, #0xe19
   1eb84:	str	x25, [sp, #16]
   1eb88:	stp	x24, x23, [sp, #32]
   1eb8c:	stp	x22, x21, [sp, #48]
   1eb90:	mov	x29, sp
   1eb94:	mov	x19, x2
   1eb98:	bl	cc40 <printf@plt>
   1eb9c:	cmn	x19, #0x3e
   1eba0:	b.lt	1ec20 <mpfr_print_mant_binary@@Base+0xb4>  // b.tstop
   1eba4:	sub	x8, x19, #0x1
   1eba8:	add	x9, x19, #0x3e
   1ebac:	cmp	x8, #0x0
   1ebb0:	mov	w10, #0x1                   	// #1
   1ebb4:	csel	x8, x9, x8, lt  // lt = tstop
   1ebb8:	mov	x21, xzr
   1ebbc:	sub	x22, x10, x19
   1ebc0:	asr	x23, x8, #6
   1ebc4:	mov	w24, #0x30                  	// #48
   1ebc8:	mov	x25, xzr
   1ebcc:	ldr	x8, [x20, x23, lsl #3]
   1ebd0:	add	x9, x25, #0x3f
   1ebd4:	lsr	x8, x8, x9
   1ebd8:	tst	x8, #0x1
   1ebdc:	cinc	w0, w24, ne  // ne = any
   1ebe0:	bl	cc70 <putchar@plt>
   1ebe4:	cmp	x22, x25
   1ebe8:	b.ne	1ebf4 <mpfr_print_mant_binary@@Base+0x88>  // b.any
   1ebec:	mov	w0, #0x5b                  	// #91
   1ebf0:	bl	cc70 <putchar@plt>
   1ebf4:	sub	x25, x25, #0x1
   1ebf8:	cmn	w25, #0x40
   1ebfc:	b.ne	1ebcc <mpfr_print_mant_binary@@Base+0x60>  // b.any
   1ec00:	mov	w0, #0x2e                  	// #46
   1ec04:	add	x21, x21, #0x40
   1ec08:	bl	cc70 <putchar@plt>
   1ec0c:	cmp	x23, #0x0
   1ec10:	sub	x23, x23, #0x1
   1ec14:	add	x22, x22, #0x40
   1ec18:	b.gt	1ebc8 <mpfr_print_mant_binary@@Base+0x5c>
   1ec1c:	b	1ec24 <mpfr_print_mant_binary@@Base+0xb8>
   1ec20:	mov	x21, xzr
   1ec24:	cmp	x21, x19
   1ec28:	b.lt	1ec34 <mpfr_print_mant_binary@@Base+0xc8>  // b.tstop
   1ec2c:	mov	w0, #0x5d                  	// #93
   1ec30:	bl	cc70 <putchar@plt>
   1ec34:	ldp	x20, x19, [sp, #64]
   1ec38:	ldp	x22, x21, [sp, #48]
   1ec3c:	ldp	x24, x23, [sp, #32]
   1ec40:	ldr	x25, [sp, #16]
   1ec44:	mov	w0, #0xa                   	// #10
   1ec48:	ldp	x29, x30, [sp], #80
   1ec4c:	b	cc70 <putchar@plt>

000000000001ec50 <mpfr_print_rnd_mode@@Base>:
   1ec50:	cmp	w0, #0x5
   1ec54:	b.hi	1ec68 <mpfr_print_rnd_mode@@Base+0x18>  // b.pmore
   1ec58:	adrp	x8, 70000 <__gmpfr_l2b@@Base+0x2e0>
   1ec5c:	add	x8, x8, #0xc60
   1ec60:	ldr	x0, [x8, w0, sxtw #3]
   1ec64:	ret
   1ec68:	mov	x0, xzr
   1ec6c:	ret

000000000001ec70 <mpfr_reldiff@@Base>:
   1ec70:	sub	sp, sp, #0x50
   1ec74:	stp	x29, x30, [sp, #32]
   1ec78:	stp	x22, x21, [sp, #48]
   1ec7c:	stp	x20, x19, [sp, #64]
   1ec80:	ldr	x9, [x1, #16]
   1ec84:	mov	x8, #0x2                   	// #2
   1ec88:	movk	x8, #0x8000, lsl #48
   1ec8c:	add	x11, x8, #0x2
   1ec90:	mov	w21, w3
   1ec94:	mov	x22, x2
   1ec98:	mov	x20, x1
   1ec9c:	cmp	x9, x11
   1eca0:	mov	x19, x0
   1eca4:	add	x29, sp, #0x20
   1eca8:	b.lt	1ed48 <mpfr_reldiff@@Base+0xd8>  // b.tstop
   1ecac:	ldr	x10, [x22, #16]
   1ecb0:	cmp	x10, x11
   1ecb4:	b.lt	1ed54 <mpfr_reldiff@@Base+0xe4>  // b.tstop
   1ecb8:	cmp	x19, x20
   1ecbc:	b.ne	1ece0 <mpfr_reldiff@@Base+0x70>  // b.any
   1ecc0:	ldr	x1, [x20]
   1ecc4:	mov	x0, sp
   1ecc8:	bl	cad0 <mpfr_init2@plt>
   1eccc:	ldr	w3, [x20, #8]
   1ecd0:	mov	x0, sp
   1ecd4:	mov	x1, x20
   1ecd8:	mov	w2, wzr
   1ecdc:	bl	c6f0 <mpfr_set4@plt>
   1ece0:	mov	x0, x19
   1ece4:	mov	x1, x20
   1ece8:	mov	x2, x22
   1ecec:	mov	w3, w21
   1ecf0:	bl	bc20 <mpfr_sub@plt>
   1ecf4:	mov	w3, #0x1                   	// #1
   1ecf8:	mov	x0, x19
   1ecfc:	mov	x1, x19
   1ed00:	mov	w2, w21
   1ed04:	bl	c6f0 <mpfr_set4@plt>
   1ed08:	cmp	x19, x20
   1ed0c:	mov	x8, sp
   1ed10:	csel	x2, x8, x20, eq  // eq = none
   1ed14:	mov	x0, x19
   1ed18:	mov	x1, x19
   1ed1c:	mov	w3, w21
   1ed20:	bl	c670 <mpfr_div@plt>
   1ed24:	cmp	x19, x20
   1ed28:	b.ne	1ed34 <mpfr_reldiff@@Base+0xc4>  // b.any
   1ed2c:	mov	x0, sp
   1ed30:	bl	c110 <mpfr_clear@plt>
   1ed34:	ldp	x20, x19, [sp, #64]
   1ed38:	ldp	x22, x21, [sp, #48]
   1ed3c:	ldp	x29, x30, [sp, #32]
   1ed40:	add	sp, sp, #0x50
   1ed44:	ret
   1ed48:	cmp	x9, x8
   1ed4c:	b.eq	1ed84 <mpfr_reldiff@@Base+0x114>  // b.none
   1ed50:	ldr	x10, [x22, #16]
   1ed54:	cmp	x10, x8
   1ed58:	b.eq	1ed84 <mpfr_reldiff@@Base+0x114>  // b.none
   1ed5c:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   1ed60:	cmp	x9, x11
   1ed64:	b.ne	1ed8c <mpfr_reldiff@@Base+0x11c>  // b.any
   1ed68:	cmp	x10, x11
   1ed6c:	b.ne	1ed84 <mpfr_reldiff@@Base+0x114>  // b.any
   1ed70:	ldr	w9, [x22, #8]
   1ed74:	ldr	w10, [x20, #8]
   1ed78:	cmp	w9, w10
   1ed7c:	b.ne	1ed84 <mpfr_reldiff@@Base+0x114>  // b.any
   1ed80:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1ed84:	str	x8, [x19, #16]
   1ed88:	b	1ed34 <mpfr_reldiff@@Base+0xc4>
   1ed8c:	cmp	x10, x11
   1ed90:	b.ne	1eda8 <mpfr_reldiff@@Base+0x138>  // b.any
   1ed94:	ldr	w8, [x20, #8]
   1ed98:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   1ed9c:	str	x9, [x19, #16]
   1eda0:	str	w8, [x19, #8]
   1eda4:	b	1ed34 <mpfr_reldiff@@Base+0xc4>
   1eda8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   1edac:	cmp	x9, x8
   1edb0:	b.ne	1ecb8 <mpfr_reldiff@@Base+0x48>  // b.any
   1edb4:	ldrsw	x1, [x22, #8]
   1edb8:	mov	x0, x19
   1edbc:	mov	x2, xzr
   1edc0:	mov	w3, w21
   1edc4:	bl	bb40 <mpfr_set_si_2exp@plt>
   1edc8:	b	1ed34 <mpfr_reldiff@@Base+0xc4>

000000000001edcc <mpfr_round_raw@@Base>:
   1edcc:	stp	x29, x30, [sp, #-32]!
   1edd0:	stp	x20, x19, [sp, #16]
   1edd4:	cmp	w5, #0x5
   1edd8:	mov	x19, x0
   1eddc:	mov	x29, sp
   1ede0:	b.ne	1edf4 <mpfr_round_raw@@Base+0x28>  // b.any
   1ede4:	mov	w11, wzr
   1ede8:	mov	w5, #0x1                   	// #1
   1edec:	str	wzr, [x6]
   1edf0:	b	1edf8 <mpfr_round_raw@@Base+0x2c>
   1edf4:	mov	w11, #0x1                   	// #1
   1edf8:	sub	x8, x2, #0x1
   1edfc:	add	x9, x2, #0x3e
   1ee00:	cmp	x8, #0x0
   1ee04:	add	x10, x4, #0x3f
   1ee08:	csel	x8, x9, x8, lt  // lt = tstop
   1ee0c:	cmp	x4, #0x0
   1ee10:	asr	x9, x8, #6
   1ee14:	csel	x10, x10, x4, lt  // lt = tstop
   1ee18:	cmp	x2, x4
   1ee1c:	add	x8, x9, #0x1
   1ee20:	asr	x10, x10, #6
   1ee24:	and	w12, w4, #0x3f
   1ee28:	b.le	1f1cc <mpfr_round_raw@@Base+0x400>
   1ee2c:	cbnz	w11, 1ee44 <mpfr_round_raw@@Base+0x78>
   1ee30:	cmp	w5, #0x1
   1ee34:	b.eq	1efa0 <mpfr_round_raw@@Base+0x1d4>  // b.none
   1ee38:	add	w11, w5, w3
   1ee3c:	cmp	w11, #0x3
   1ee40:	b.eq	1efa0 <mpfr_round_raw@@Base+0x1d4>  // b.none
   1ee44:	sub	x14, x9, x10
   1ee48:	ldr	x17, [x1, x14, lsl #3]
   1ee4c:	neg	w15, w12
   1ee50:	mov	x16, #0xffffffffffffffff    	// #-1
   1ee54:	cmp	w12, #0x0
   1ee58:	lsl	x15, x16, x15
   1ee5c:	mov	w11, #0x40                  	// #64
   1ee60:	csinv	x20, x15, xzr, ne  // ne = any
   1ee64:	csinv	x15, x16, x15, eq  // eq = none
   1ee68:	add	w16, w5, #0x1
   1ee6c:	sub	w13, w11, w12
   1ee70:	cset	w11, ne  // ne = any
   1ee74:	cinc	x2, x10, ne  // ne = any
   1ee78:	cmp	w16, #0x1
   1ee7c:	and	x15, x17, x15
   1ee80:	b.hi	1eef8 <mpfr_round_raw@@Base+0x12c>  // b.pmore
   1ee84:	eor	w16, w12, #0x3f
   1ee88:	mov	w17, #0x1                   	// #1
   1ee8c:	lsl	x16, x17, x16
   1ee90:	tst	x15, x16
   1ee94:	b.eq	1ef50 <mpfr_round_raw@@Base+0x184>  // b.none
   1ee98:	cmn	w5, #0x1
   1ee9c:	b.eq	1eef0 <mpfr_round_raw@@Base+0x124>  // b.none
   1eea0:	bics	xzr, x15, x16
   1eea4:	bic	x17, x15, x16
   1eea8:	cset	w15, eq  // eq = none
   1eeac:	cbnz	x17, 1eed8 <mpfr_round_raw@@Base+0x10c>
   1eeb0:	cmp	x14, #0x1
   1eeb4:	b.lt	1eed8 <mpfr_round_raw@@Base+0x10c>  // b.tstop
   1eeb8:	sub	x16, x1, #0x8
   1eebc:	ldr	x17, [x16, x14, lsl #3]
   1eec0:	cmp	x17, #0x0
   1eec4:	cset	w15, eq  // eq = none
   1eec8:	cbnz	x17, 1eed8 <mpfr_round_raw@@Base+0x10c>
   1eecc:	cmp	x14, #0x1
   1eed0:	sub	x14, x14, #0x1
   1eed4:	b.gt	1eebc <mpfr_round_raw@@Base+0xf0>
   1eed8:	cbz	w15, 1efe4 <mpfr_round_raw@@Base+0x218>
   1eedc:	sub	x14, x8, x2
   1eee0:	ldr	x14, [x1, x14, lsl #3]
   1eee4:	eor	x15, x20, x20, lsl #1
   1eee8:	tst	x14, x15
   1eeec:	b.eq	1f1bc <mpfr_round_raw@@Base+0x3f0>  // b.none
   1eef0:	mov	w14, #0x2                   	// #2
   1eef4:	b	1efe8 <mpfr_round_raw@@Base+0x21c>
   1eef8:	cmp	w5, #0x1
   1eefc:	b.eq	1ef50 <mpfr_round_raw@@Base+0x184>  // b.none
   1ef00:	add	w16, w5, w3
   1ef04:	cmp	w16, #0x3
   1ef08:	b.eq	1ef50 <mpfr_round_raw@@Base+0x184>  // b.none
   1ef0c:	cmp	x15, #0x0
   1ef10:	cset	w16, eq  // eq = none
   1ef14:	cbnz	x15, 1ef40 <mpfr_round_raw@@Base+0x174>
   1ef18:	cmp	x14, #0x1
   1ef1c:	b.lt	1ef40 <mpfr_round_raw@@Base+0x174>  // b.tstop
   1ef20:	sub	x15, x1, #0x8
   1ef24:	ldr	x17, [x15, x14, lsl #3]
   1ef28:	cmp	x17, #0x0
   1ef2c:	cset	w16, eq  // eq = none
   1ef30:	cbnz	x17, 1ef40 <mpfr_round_raw@@Base+0x174>
   1ef34:	cmp	x14, #0x1
   1ef38:	sub	x14, x14, #0x1
   1ef3c:	b.gt	1ef24 <mpfr_round_raw@@Base+0x158>
   1ef40:	cbz	w16, 1f0d0 <mpfr_round_raw@@Base+0x304>
   1ef44:	str	wzr, [x6]
   1ef48:	add	x8, x1, x8, lsl #3
   1ef4c:	b	1efbc <mpfr_round_raw@@Base+0x1f0>
   1ef50:	cmp	x15, #0x0
   1ef54:	cset	w9, eq  // eq = none
   1ef58:	cbnz	x15, 1ef84 <mpfr_round_raw@@Base+0x1b8>
   1ef5c:	cmp	x14, #0x1
   1ef60:	b.lt	1ef84 <mpfr_round_raw@@Base+0x1b8>  // b.tstop
   1ef64:	sub	x10, x1, #0x8
   1ef68:	ldr	x11, [x10, x14, lsl #3]
   1ef6c:	cmp	x11, #0x0
   1ef70:	cset	w9, eq  // eq = none
   1ef74:	cbnz	x11, 1ef84 <mpfr_round_raw@@Base+0x1b8>
   1ef78:	cmp	x14, #0x1
   1ef7c:	sub	x14, x14, #0x1
   1ef80:	b.gt	1ef68 <mpfr_round_raw@@Base+0x19c>
   1ef84:	lsl	w10, w3, #1
   1ef88:	cmp	w9, #0x0
   1ef8c:	sub	w9, w10, #0x1
   1ef90:	add	x8, x1, x8, lsl #3
   1ef94:	csel	w9, wzr, w9, ne  // ne = any
   1ef98:	str	w9, [x6]
   1ef9c:	b	1efbc <mpfr_round_raw@@Base+0x1f0>
   1efa0:	neg	w9, w12
   1efa4:	mov	x11, #0xffffffffffffffff    	// #-1
   1efa8:	cmp	w12, #0x0
   1efac:	lsl	x9, x11, x9
   1efb0:	add	x8, x1, x8, lsl #3
   1efb4:	cinc	x2, x10, ne  // ne = any
   1efb8:	csinv	x20, x9, xzr, ne  // ne = any
   1efbc:	sub	x1, x8, x2, lsl #3
   1efc0:	mov	x0, x19
   1efc4:	bl	c570 <__gmpn_copyi@plt>
   1efc8:	mov	w0, wzr
   1efcc:	ldr	x8, [x19]
   1efd0:	and	x8, x8, x20
   1efd4:	str	x8, [x19]
   1efd8:	ldp	x20, x19, [sp, #16]
   1efdc:	ldp	x29, x30, [sp], #32
   1efe0:	ret
   1efe4:	mov	w14, #0x1                   	// #1
   1efe8:	lsl	w15, w3, w14
   1efec:	add	x8, x1, x8, lsl #3
   1eff0:	sub	w15, w14, w15
   1eff4:	sub	x14, x8, x2, lsl #3
   1eff8:	str	w15, [x6]
   1effc:	ldr	x15, [x14]
   1f000:	mov	w8, #0x1                   	// #1
   1f004:	lsl	x8, x8, x13
   1f008:	cmp	w12, #0x0
   1f00c:	csinc	x8, x8, xzr, ne  // ne = any
   1f010:	adds	x8, x15, x8
   1f014:	str	x8, [x19]
   1f018:	b.cc	1f094 <mpfr_round_raw@@Base+0x2c8>  // b.lo, b.ul, b.last
   1f01c:	add	x12, x10, x11
   1f020:	sub	x12, x9, x12
   1f024:	add	x12, x1, x12, lsl #3
   1f028:	mov	x13, xzr
   1f02c:	add	x8, x19, #0x8
   1f030:	add	x15, x12, #0x10
   1f034:	add	x12, x13, #0x1
   1f038:	cmp	x12, x2
   1f03c:	b.ge	1f178 <mpfr_round_raw@@Base+0x3ac>  // b.tcont
   1f040:	ldr	x16, [x15, x13, lsl #3]
   1f044:	mov	x13, x12
   1f048:	adds	x16, x16, #0x1
   1f04c:	str	x16, [x8], #8
   1f050:	b.cs	1f034 <mpfr_round_raw@@Base+0x268>  // b.hs, b.nlast
   1f054:	cmp	x14, x19
   1f058:	mov	w0, wzr
   1f05c:	b.eq	1efcc <mpfr_round_raw@@Base+0x200>  // b.none
   1f060:	add	x13, x12, #0x1
   1f064:	cmp	x13, x2
   1f068:	b.ge	1efcc <mpfr_round_raw@@Base+0x200>  // b.tcont
   1f06c:	add	x10, x10, x11
   1f070:	add	x11, x1, x9, lsl #3
   1f074:	sub	x9, x12, x10
   1f078:	add	x10, x11, #0x10
   1f07c:	ldr	x11, [x10, x9, lsl #3]
   1f080:	add	x9, x9, #0x1
   1f084:	cmn	x9, #0x1
   1f088:	str	x11, [x8], #8
   1f08c:	b.ne	1f07c <mpfr_round_raw@@Base+0x2b0>  // b.any
   1f090:	b	1efc8 <mpfr_round_raw@@Base+0x1fc>
   1f094:	cmp	x2, #0x2
   1f098:	mov	w0, wzr
   1f09c:	b.lt	1efcc <mpfr_round_raw@@Base+0x200>  // b.tstop
   1f0a0:	cmp	x14, x19
   1f0a4:	b.eq	1efcc <mpfr_round_raw@@Base+0x200>  // b.none
   1f0a8:	add	x9, x1, x9, lsl #3
   1f0ac:	neg	x8, x2
   1f0b0:	add	x10, x19, #0x8
   1f0b4:	add	x9, x9, #0x10
   1f0b8:	ldr	x11, [x9, x8, lsl #3]
   1f0bc:	add	x8, x8, #0x1
   1f0c0:	cmn	x8, #0x1
   1f0c4:	str	x11, [x10], #8
   1f0c8:	b.ne	1f0b8 <mpfr_round_raw@@Base+0x2ec>  // b.any
   1f0cc:	b	1efc8 <mpfr_round_raw@@Base+0x1fc>
   1f0d0:	mov	w15, #0x1                   	// #1
   1f0d4:	add	x8, x1, x8, lsl #3
   1f0d8:	sub	w14, w15, w3, lsl #1
   1f0dc:	str	w14, [x6]
   1f0e0:	sub	x14, x8, x2, lsl #3
   1f0e4:	ldr	x8, [x14]
   1f0e8:	lsl	x13, x15, x13
   1f0ec:	cmp	w12, #0x0
   1f0f0:	csinc	x12, x13, xzr, ne  // ne = any
   1f0f4:	adds	x8, x8, x12
   1f0f8:	str	x8, [x19]
   1f0fc:	b.cc	1f180 <mpfr_round_raw@@Base+0x3b4>  // b.lo, b.ul, b.last
   1f100:	add	x12, x10, x11
   1f104:	sub	x12, x9, x12
   1f108:	add	x12, x1, x12, lsl #3
   1f10c:	mov	x13, xzr
   1f110:	add	x8, x19, #0x8
   1f114:	add	x15, x12, #0x10
   1f118:	add	x12, x13, #0x1
   1f11c:	cmp	x12, x2
   1f120:	b.ge	1f178 <mpfr_round_raw@@Base+0x3ac>  // b.tcont
   1f124:	ldr	x16, [x15, x13, lsl #3]
   1f128:	mov	x13, x12
   1f12c:	adds	x16, x16, #0x1
   1f130:	str	x16, [x8], #8
   1f134:	b.cs	1f118 <mpfr_round_raw@@Base+0x34c>  // b.hs, b.nlast
   1f138:	cmp	x14, x19
   1f13c:	mov	w0, wzr
   1f140:	b.eq	1efcc <mpfr_round_raw@@Base+0x200>  // b.none
   1f144:	add	x13, x12, #0x1
   1f148:	cmp	x13, x2
   1f14c:	b.ge	1efcc <mpfr_round_raw@@Base+0x200>  // b.tcont
   1f150:	add	x10, x10, x11
   1f154:	add	x11, x1, x9, lsl #3
   1f158:	sub	x9, x12, x10
   1f15c:	add	x10, x11, #0x10
   1f160:	ldr	x11, [x10, x9, lsl #3]
   1f164:	add	x9, x9, #0x1
   1f168:	cmn	x9, #0x1
   1f16c:	str	x11, [x8], #8
   1f170:	b.ne	1f160 <mpfr_round_raw@@Base+0x394>  // b.any
   1f174:	b	1efc8 <mpfr_round_raw@@Base+0x1fc>
   1f178:	mov	w0, #0x1                   	// #1
   1f17c:	b	1efcc <mpfr_round_raw@@Base+0x200>
   1f180:	cmp	x2, #0x2
   1f184:	mov	w0, wzr
   1f188:	b.lt	1efcc <mpfr_round_raw@@Base+0x200>  // b.tstop
   1f18c:	cmp	x14, x19
   1f190:	b.eq	1efcc <mpfr_round_raw@@Base+0x200>  // b.none
   1f194:	add	x9, x1, x9, lsl #3
   1f198:	neg	x8, x2
   1f19c:	add	x10, x19, #0x8
   1f1a0:	add	x9, x9, #0x10
   1f1a4:	ldr	x11, [x9, x8, lsl #3]
   1f1a8:	add	x8, x8, #0x1
   1f1ac:	cmn	x8, #0x1
   1f1b0:	str	x11, [x10], #8
   1f1b4:	b.ne	1f1a4 <mpfr_round_raw@@Base+0x3d8>  // b.any
   1f1b8:	b	1efc8 <mpfr_round_raw@@Base+0x1fc>
   1f1bc:	lsl	w9, w3, #2
   1f1c0:	add	x8, x1, x8, lsl #3
   1f1c4:	sub	w9, w9, #0x2
   1f1c8:	b	1ef98 <mpfr_round_raw@@Base+0x1cc>
   1f1cc:	sub	x11, x10, x9
   1f1d0:	mvn	x9, x9
   1f1d4:	cmp	w12, #0x0
   1f1d8:	add	x9, x10, x9
   1f1dc:	csel	x9, x9, x11, eq  // eq = none
   1f1e0:	add	x0, x19, x9, lsl #3
   1f1e4:	mov	x2, x8
   1f1e8:	str	wzr, [x6]
   1f1ec:	lsl	x20, x9, #3
   1f1f0:	bl	bba0 <__gmpn_copyd@plt>
   1f1f4:	mov	x0, x19
   1f1f8:	mov	w1, wzr
   1f1fc:	mov	x2, x20
   1f200:	bl	c1b0 <memset@plt>
   1f204:	mov	w0, wzr
   1f208:	b	1efd8 <mpfr_round_raw@@Base+0x20c>

000000000001f20c <mpfr_round_raw_2@@Base>:
   1f20c:	cmp	w4, #0x5
   1f210:	b.ne	1f220 <mpfr_round_raw_2@@Base+0x14>  // b.any
   1f214:	mov	w8, wzr
   1f218:	mov	w0, w8
   1f21c:	ret
   1f220:	cmp	x1, x3
   1f224:	mov	w8, wzr
   1f228:	b.le	1f218 <mpfr_round_raw_2@@Base+0xc>
   1f22c:	cmp	w4, #0x1
   1f230:	b.eq	1f218 <mpfr_round_raw_2@@Base+0xc>  // b.none
   1f234:	add	w9, w4, w2
   1f238:	cmp	w9, #0x3
   1f23c:	b.eq	1f218 <mpfr_round_raw_2@@Base+0xc>  // b.none
   1f240:	sub	x8, x1, #0x1
   1f244:	add	x9, x1, #0x3e
   1f248:	and	w14, w3, #0x3f
   1f24c:	cmp	x8, #0x0
   1f250:	add	x11, x3, #0x3f
   1f254:	mov	x13, #0xffffffffffffffff    	// #-1
   1f258:	neg	w10, w14
   1f25c:	csel	x8, x9, x8, lt  // lt = tstop
   1f260:	cmp	x3, #0x0
   1f264:	lsl	x9, x13, x10
   1f268:	asr	x10, x8, #6
   1f26c:	csel	x12, x11, x3, lt  // lt = tstop
   1f270:	sub	x8, x10, x12, asr #6
   1f274:	ldr	x15, [x0, x8, lsl #3]
   1f278:	tst	w3, #0x3f
   1f27c:	csinv	x13, x13, x9, eq  // eq = none
   1f280:	add	w16, w4, #0x1
   1f284:	cset	w11, ne  // ne = any
   1f288:	csinv	x9, x9, xzr, ne  // ne = any
   1f28c:	cmp	w16, #0x2
   1f290:	and	x13, x15, x13
   1f294:	b.cs	1f318 <mpfr_round_raw_2@@Base+0x10c>  // b.hs, b.nlast
   1f298:	eor	w14, w14, #0x3f
   1f29c:	mov	w15, #0x1                   	// #1
   1f2a0:	lsl	x14, x15, x14
   1f2a4:	tst	x13, x14
   1f2a8:	b.eq	1f214 <mpfr_round_raw_2@@Base+0x8>  // b.none
   1f2ac:	cmn	w4, #0x1
   1f2b0:	b.eq	1f310 <mpfr_round_raw_2@@Base+0x104>  // b.none
   1f2b4:	bics	xzr, x13, x14
   1f2b8:	bic	x15, x13, x14
   1f2bc:	cset	w13, eq  // eq = none
   1f2c0:	cbnz	x15, 1f2ec <mpfr_round_raw_2@@Base+0xe0>
   1f2c4:	cmp	x8, #0x1
   1f2c8:	b.lt	1f2ec <mpfr_round_raw_2@@Base+0xe0>  // b.tstop
   1f2cc:	sub	x14, x0, #0x8
   1f2d0:	ldr	x15, [x14, x8, lsl #3]
   1f2d4:	cmp	x15, #0x0
   1f2d8:	cset	w13, eq  // eq = none
   1f2dc:	cbnz	x15, 1f2ec <mpfr_round_raw_2@@Base+0xe0>
   1f2e0:	cmp	x8, #0x1
   1f2e4:	sub	x8, x8, #0x1
   1f2e8:	b.gt	1f2d0 <mpfr_round_raw_2@@Base+0xc4>
   1f2ec:	cbz	w13, 1f310 <mpfr_round_raw_2@@Base+0x104>
   1f2f0:	asr	x8, x12, #6
   1f2f4:	sub	x8, x10, x8
   1f2f8:	sub	x8, x8, x11
   1f2fc:	add	x8, x0, x8, lsl #3
   1f300:	ldr	x8, [x8, #8]
   1f304:	eor	x9, x9, x9, lsl #1
   1f308:	tst	x8, x9
   1f30c:	b.eq	1f214 <mpfr_round_raw_2@@Base+0x8>  // b.none
   1f310:	mov	w8, #0x1                   	// #1
   1f314:	b	1f218 <mpfr_round_raw_2@@Base+0xc>
   1f318:	cmp	x13, #0x0
   1f31c:	cset	w9, eq  // eq = none
   1f320:	cbnz	x13, 1f34c <mpfr_round_raw_2@@Base+0x140>
   1f324:	cmp	x8, #0x1
   1f328:	b.lt	1f34c <mpfr_round_raw_2@@Base+0x140>  // b.tstop
   1f32c:	sub	x10, x0, #0x8
   1f330:	ldr	x11, [x10, x8, lsl #3]
   1f334:	cmp	x11, #0x0
   1f338:	cset	w9, eq  // eq = none
   1f33c:	cbnz	x11, 1f34c <mpfr_round_raw_2@@Base+0x140>
   1f340:	cmp	x8, #0x1
   1f344:	sub	x8, x8, #0x1
   1f348:	b.gt	1f330 <mpfr_round_raw_2@@Base+0x124>
   1f34c:	eor	w8, w9, #0x1
   1f350:	b	1f218 <mpfr_round_raw_2@@Base+0xc>

000000000001f354 <mpfr_round_raw_4@@Base>:
   1f354:	stp	x29, x30, [sp, #-32]!
   1f358:	cmp	w5, #0x5
   1f35c:	sub	x8, x2, #0x1
   1f360:	add	x9, x2, #0x3e
   1f364:	csinc	w15, w5, wzr, ne  // ne = any
   1f368:	cmp	x8, #0x0
   1f36c:	add	x10, x4, #0x3f
   1f370:	csel	x8, x9, x8, lt  // lt = tstop
   1f374:	cmp	x4, #0x0
   1f378:	asr	x9, x8, #6
   1f37c:	csel	x10, x10, x4, lt  // lt = tstop
   1f380:	stp	x20, x19, [sp, #16]
   1f384:	mov	x19, x0
   1f388:	cmp	x2, x4
   1f38c:	add	x8, x9, #0x1
   1f390:	asr	x10, x10, #6
   1f394:	and	w12, w4, #0x3f
   1f398:	mov	x29, sp
   1f39c:	b.le	1f6b0 <mpfr_round_raw_4@@Base+0x35c>
   1f3a0:	cmp	w15, #0x1
   1f3a4:	b.eq	1f500 <mpfr_round_raw_4@@Base+0x1ac>  // b.none
   1f3a8:	add	w11, w15, w3
   1f3ac:	cmp	w11, #0x3
   1f3b0:	b.eq	1f500 <mpfr_round_raw_4@@Base+0x1ac>  // b.none
   1f3b4:	sub	x14, x9, x10
   1f3b8:	ldr	x18, [x1, x14, lsl #3]
   1f3bc:	neg	w16, w12
   1f3c0:	mov	x17, #0xffffffffffffffff    	// #-1
   1f3c4:	cmp	w12, #0x0
   1f3c8:	lsl	x16, x17, x16
   1f3cc:	mov	w11, #0x40                  	// #64
   1f3d0:	csinv	x20, x16, xzr, ne  // ne = any
   1f3d4:	csinv	x16, x17, x16, eq  // eq = none
   1f3d8:	add	w17, w15, #0x1
   1f3dc:	sub	w13, w11, w12
   1f3e0:	cset	w11, ne  // ne = any
   1f3e4:	cinc	x2, x10, ne  // ne = any
   1f3e8:	cmp	w17, #0x2
   1f3ec:	and	x16, x18, x16
   1f3f0:	b.cs	1f544 <mpfr_round_raw_4@@Base+0x1f0>  // b.hs, b.nlast
   1f3f4:	eor	w17, w12, #0x3f
   1f3f8:	mov	w18, #0x1                   	// #1
   1f3fc:	lsl	x17, x18, x17
   1f400:	tst	x16, x17
   1f404:	b.eq	1f628 <mpfr_round_raw_4@@Base+0x2d4>  // b.none
   1f408:	cmn	w15, #0x1
   1f40c:	b.eq	1f460 <mpfr_round_raw_4@@Base+0x10c>  // b.none
   1f410:	bics	xzr, x16, x17
   1f414:	bic	x18, x16, x17
   1f418:	cset	w15, eq  // eq = none
   1f41c:	cbnz	x18, 1f448 <mpfr_round_raw_4@@Base+0xf4>
   1f420:	cmp	x14, #0x1
   1f424:	b.lt	1f448 <mpfr_round_raw_4@@Base+0xf4>  // b.tstop
   1f428:	sub	x16, x1, #0x8
   1f42c:	ldr	x17, [x16, x14, lsl #3]
   1f430:	cmp	x17, #0x0
   1f434:	cset	w15, eq  // eq = none
   1f438:	cbnz	x17, 1f448 <mpfr_round_raw_4@@Base+0xf4>
   1f43c:	cmp	x14, #0x1
   1f440:	sub	x14, x14, #0x1
   1f444:	b.gt	1f42c <mpfr_round_raw_4@@Base+0xd8>
   1f448:	cbz	w15, 1f460 <mpfr_round_raw_4@@Base+0x10c>
   1f44c:	sub	x14, x8, x2
   1f450:	ldr	x14, [x1, x14, lsl #3]
   1f454:	eor	x15, x20, x20, lsl #1
   1f458:	tst	x14, x15
   1f45c:	b.eq	1f628 <mpfr_round_raw_4@@Base+0x2d4>  // b.none
   1f460:	add	x8, x1, x8, lsl #3
   1f464:	sub	x14, x8, x2, lsl #3
   1f468:	ldr	x15, [x14]
   1f46c:	mov	w8, #0x1                   	// #1
   1f470:	lsl	x8, x8, x13
   1f474:	cmp	w12, #0x0
   1f478:	csinc	x8, x8, xzr, ne  // ne = any
   1f47c:	adds	x8, x15, x8
   1f480:	str	x8, [x19]
   1f484:	b.cc	1f638 <mpfr_round_raw_4@@Base+0x2e4>  // b.lo, b.ul, b.last
   1f488:	add	x12, x10, x11
   1f48c:	sub	x12, x9, x12
   1f490:	add	x12, x1, x12, lsl #3
   1f494:	mov	x13, xzr
   1f498:	add	x8, x19, #0x8
   1f49c:	add	x15, x12, #0x10
   1f4a0:	add	x12, x13, #0x1
   1f4a4:	cmp	x12, x2
   1f4a8:	b.ge	1f630 <mpfr_round_raw_4@@Base+0x2dc>  // b.tcont
   1f4ac:	ldr	x16, [x15, x13, lsl #3]
   1f4b0:	mov	x13, x12
   1f4b4:	adds	x16, x16, #0x1
   1f4b8:	str	x16, [x8], #8
   1f4bc:	b.cs	1f4a0 <mpfr_round_raw_4@@Base+0x14c>  // b.hs, b.nlast
   1f4c0:	cmp	x14, x19
   1f4c4:	mov	w0, wzr
   1f4c8:	b.eq	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.none
   1f4cc:	add	x13, x12, #0x1
   1f4d0:	cmp	x13, x2
   1f4d4:	b.ge	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.tcont
   1f4d8:	add	x10, x10, x11
   1f4dc:	add	x11, x1, x9, lsl #3
   1f4e0:	sub	x9, x12, x10
   1f4e4:	add	x10, x11, #0x10
   1f4e8:	ldr	x11, [x10, x9, lsl #3]
   1f4ec:	add	x9, x9, #0x1
   1f4f0:	cmn	x9, #0x1
   1f4f4:	str	x11, [x8], #8
   1f4f8:	b.ne	1f4e8 <mpfr_round_raw_4@@Base+0x194>  // b.any
   1f4fc:	b	1f528 <mpfr_round_raw_4@@Base+0x1d4>
   1f500:	neg	w9, w12
   1f504:	mov	x11, #0xffffffffffffffff    	// #-1
   1f508:	cmp	w12, #0x0
   1f50c:	lsl	x9, x11, x9
   1f510:	add	x8, x1, x8, lsl #3
   1f514:	cinc	x2, x10, ne  // ne = any
   1f518:	csinv	x20, x9, xzr, ne  // ne = any
   1f51c:	sub	x1, x8, x2, lsl #3
   1f520:	mov	x0, x19
   1f524:	bl	c570 <__gmpn_copyi@plt>
   1f528:	mov	w0, wzr
   1f52c:	ldr	x8, [x19]
   1f530:	and	x8, x8, x20
   1f534:	str	x8, [x19]
   1f538:	ldp	x20, x19, [sp, #16]
   1f53c:	ldp	x29, x30, [sp], #32
   1f540:	ret
   1f544:	cmp	x16, #0x0
   1f548:	cset	w15, eq  // eq = none
   1f54c:	cbnz	x16, 1f578 <mpfr_round_raw_4@@Base+0x224>
   1f550:	cmp	x14, #0x1
   1f554:	b.lt	1f578 <mpfr_round_raw_4@@Base+0x224>  // b.tstop
   1f558:	sub	x16, x1, #0x8
   1f55c:	ldr	x17, [x16, x14, lsl #3]
   1f560:	cmp	x17, #0x0
   1f564:	cset	w15, eq  // eq = none
   1f568:	cbnz	x17, 1f578 <mpfr_round_raw_4@@Base+0x224>
   1f56c:	cmp	x14, #0x1
   1f570:	sub	x14, x14, #0x1
   1f574:	b.gt	1f55c <mpfr_round_raw_4@@Base+0x208>
   1f578:	add	x8, x1, x8, lsl #3
   1f57c:	sub	x8, x8, x2, lsl #3
   1f580:	cbz	w15, 1f590 <mpfr_round_raw_4@@Base+0x23c>
   1f584:	mov	x0, x19
   1f588:	mov	x1, x8
   1f58c:	b	1f524 <mpfr_round_raw_4@@Base+0x1d0>
   1f590:	ldr	x15, [x8]
   1f594:	mov	w14, #0x1                   	// #1
   1f598:	lsl	x13, x14, x13
   1f59c:	cmp	w12, #0x0
   1f5a0:	csinc	x12, x13, xzr, ne  // ne = any
   1f5a4:	adds	x12, x15, x12
   1f5a8:	str	x12, [x19]
   1f5ac:	b.cc	1f674 <mpfr_round_raw_4@@Base+0x320>  // b.lo, b.ul, b.last
   1f5b0:	add	x13, x10, x11
   1f5b4:	sub	x13, x9, x13
   1f5b8:	add	x13, x1, x13, lsl #3
   1f5bc:	mov	x14, xzr
   1f5c0:	add	x12, x19, #0x8
   1f5c4:	add	x15, x13, #0x10
   1f5c8:	add	x13, x14, #0x1
   1f5cc:	cmp	x13, x2
   1f5d0:	b.ge	1f630 <mpfr_round_raw_4@@Base+0x2dc>  // b.tcont
   1f5d4:	ldr	x16, [x15, x14, lsl #3]
   1f5d8:	mov	x14, x13
   1f5dc:	adds	x16, x16, #0x1
   1f5e0:	str	x16, [x12], #8
   1f5e4:	b.cs	1f5c8 <mpfr_round_raw_4@@Base+0x274>  // b.hs, b.nlast
   1f5e8:	cmp	x8, x19
   1f5ec:	mov	w0, wzr
   1f5f0:	b.eq	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.none
   1f5f4:	add	x8, x13, #0x1
   1f5f8:	cmp	x8, x2
   1f5fc:	b.ge	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.tcont
   1f600:	add	x8, x10, x11
   1f604:	add	x9, x1, x9, lsl #3
   1f608:	sub	x8, x13, x8
   1f60c:	add	x9, x9, #0x10
   1f610:	ldr	x10, [x9, x8, lsl #3]
   1f614:	add	x8, x8, #0x1
   1f618:	cmn	x8, #0x1
   1f61c:	str	x10, [x12], #8
   1f620:	b.ne	1f610 <mpfr_round_raw_4@@Base+0x2bc>  // b.any
   1f624:	b	1f528 <mpfr_round_raw_4@@Base+0x1d4>
   1f628:	add	x8, x1, x8, lsl #3
   1f62c:	b	1f51c <mpfr_round_raw_4@@Base+0x1c8>
   1f630:	mov	w0, #0x1                   	// #1
   1f634:	b	1f52c <mpfr_round_raw_4@@Base+0x1d8>
   1f638:	cmp	x2, #0x2
   1f63c:	mov	w0, wzr
   1f640:	b.lt	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.tstop
   1f644:	cmp	x14, x19
   1f648:	b.eq	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.none
   1f64c:	add	x9, x1, x9, lsl #3
   1f650:	neg	x8, x2
   1f654:	add	x10, x19, #0x8
   1f658:	add	x9, x9, #0x10
   1f65c:	ldr	x11, [x9, x8, lsl #3]
   1f660:	add	x8, x8, #0x1
   1f664:	cmn	x8, #0x1
   1f668:	str	x11, [x10], #8
   1f66c:	b.ne	1f65c <mpfr_round_raw_4@@Base+0x308>  // b.any
   1f670:	b	1f528 <mpfr_round_raw_4@@Base+0x1d4>
   1f674:	cmp	x2, #0x2
   1f678:	mov	w0, wzr
   1f67c:	b.lt	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.tstop
   1f680:	cmp	x8, x19
   1f684:	b.eq	1f52c <mpfr_round_raw_4@@Base+0x1d8>  // b.none
   1f688:	add	x9, x1, x9, lsl #3
   1f68c:	neg	x8, x2
   1f690:	add	x10, x19, #0x8
   1f694:	add	x9, x9, #0x10
   1f698:	ldr	x11, [x9, x8, lsl #3]
   1f69c:	add	x8, x8, #0x1
   1f6a0:	cmn	x8, #0x1
   1f6a4:	str	x11, [x10], #8
   1f6a8:	b.ne	1f698 <mpfr_round_raw_4@@Base+0x344>  // b.any
   1f6ac:	b	1f528 <mpfr_round_raw_4@@Base+0x1d4>
   1f6b0:	sub	x11, x10, x9
   1f6b4:	mvn	x9, x9
   1f6b8:	cmp	w12, #0x0
   1f6bc:	add	x9, x10, x9
   1f6c0:	csel	x9, x9, x11, eq  // eq = none
   1f6c4:	add	x0, x19, x9, lsl #3
   1f6c8:	mov	x2, x8
   1f6cc:	lsl	x20, x9, #3
   1f6d0:	bl	bba0 <__gmpn_copyd@plt>
   1f6d4:	mov	x0, x19
   1f6d8:	mov	w1, wzr
   1f6dc:	mov	x2, x20
   1f6e0:	bl	c1b0 <memset@plt>
   1f6e4:	mov	w0, wzr
   1f6e8:	b	1f538 <mpfr_round_raw_4@@Base+0x1e4>

000000000001f6ec <mpfr_prec_round@@Base>:
   1f6ec:	stp	x29, x30, [sp, #-80]!
   1f6f0:	str	x25, [sp, #16]
   1f6f4:	stp	x24, x23, [sp, #32]
   1f6f8:	stp	x22, x21, [sp, #48]
   1f6fc:	stp	x20, x19, [sp, #64]
   1f700:	mov	x29, sp
   1f704:	sub	sp, sp, #0x10
   1f708:	mov	x22, #0xfffffffffffffeff    	// #-257
   1f70c:	movk	x22, #0x7fff, lsl #48
   1f710:	sub	x23, x1, #0x1
   1f714:	mov	w21, w2
   1f718:	mov	x19, x1
   1f71c:	cmp	x23, x22
   1f720:	mov	x20, x0
   1f724:	b.cs	1f7fc <mpfr_prec_round@@Base+0x110>  // b.hs, b.nlast
   1f728:	ldr	x9, [x20]
   1f72c:	add	x8, x23, #0x3f
   1f730:	cmp	x23, #0x0
   1f734:	csel	x8, x8, x23, lt  // lt = tstop
   1f738:	asr	x25, x8, #6
   1f73c:	sub	x8, x9, #0x1
   1f740:	add	x9, x9, #0x3e
   1f744:	cmp	x8, #0x0
   1f748:	csel	x8, x9, x8, lt  // lt = tstop
   1f74c:	cmp	x25, x8, asr #6
   1f750:	add	x23, x25, #0x1
   1f754:	b.gt	1f818 <mpfr_prec_round@@Base+0x12c>
   1f758:	ldr	x8, [x20, #16]
   1f75c:	add	x9, x22, #0x105
   1f760:	cmp	x8, x9
   1f764:	b.lt	1f84c <mpfr_prec_round@@Base+0x160>  // b.tstop
   1f768:	lsl	x22, x23, #3
   1f76c:	cmp	x22, #0x4, lsl #12
   1f770:	stur	xzr, [x29, #-8]
   1f774:	b.hi	1f888 <mpfr_prec_round@@Base+0x19c>  // b.pmore
   1f778:	add	x9, x22, #0xf
   1f77c:	mov	x8, sp
   1f780:	and	x9, x9, #0xfffffffffffffff0
   1f784:	sub	x24, x8, x9
   1f788:	mov	sp, x24
   1f78c:	ldr	x23, [x20, #24]
   1f790:	ldr	w8, [x20, #8]
   1f794:	ldr	x2, [x20]
   1f798:	add	x6, x29, #0x1c
   1f79c:	mov	x0, x24
   1f7a0:	lsr	w3, w8, #31
   1f7a4:	mov	x1, x23
   1f7a8:	mov	x4, x19
   1f7ac:	mov	w5, w21
   1f7b0:	bl	ca70 <mpfr_round_raw@plt>
   1f7b4:	str	x19, [x20]
   1f7b8:	cbnz	w0, 1f89c <mpfr_prec_round@@Base+0x1b0>
   1f7bc:	cmp	x23, x24
   1f7c0:	b.eq	1f7d4 <mpfr_prec_round@@Base+0xe8>  // b.none
   1f7c4:	mov	x0, x23
   1f7c8:	mov	x1, x24
   1f7cc:	mov	x2, x22
   1f7d0:	bl	bad0 <memcpy@plt>
   1f7d4:	ldur	x0, [x29, #-8]
   1f7d8:	cbnz	x0, 1f8ec <mpfr_prec_round@@Base+0x200>
   1f7dc:	ldr	w0, [x29, #28]
   1f7e0:	mov	sp, x29
   1f7e4:	ldp	x20, x19, [sp, #64]
   1f7e8:	ldp	x22, x21, [sp, #48]
   1f7ec:	ldp	x24, x23, [sp, #32]
   1f7f0:	ldr	x25, [sp, #16]
   1f7f4:	ldp	x29, x30, [sp], #80
   1f7f8:	ret
   1f7fc:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   1f800:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   1f804:	add	x0, x0, #0xe45
   1f808:	add	x2, x2, #0xe52
   1f80c:	mov	w1, #0x3b                  	// #59
   1f810:	bl	cb90 <mpfr_assert_fail@plt>
   1f814:	b	1f728 <mpfr_prec_round@@Base+0x3c>
   1f818:	ldr	x0, [x20, #24]
   1f81c:	ldr	x8, [x0, #-8]!
   1f820:	cmp	x25, x8
   1f824:	b.lt	1f758 <mpfr_prec_round@@Base+0x6c>  // b.tstop
   1f828:	lsl	x8, x8, #3
   1f82c:	lsl	x9, x23, #3
   1f830:	add	x1, x8, #0x8
   1f834:	add	x2, x9, #0x8
   1f838:	bl	c260 <mpfr_reallocate_func@plt>
   1f83c:	add	x8, x0, #0x8
   1f840:	str	x8, [x20, #24]
   1f844:	str	x23, [x0]
   1f848:	b	1f758 <mpfr_prec_round@@Base+0x6c>
   1f84c:	add	x9, x22, #0x103
   1f850:	cmp	x8, x9
   1f854:	str	x19, [x20]
   1f858:	b.ne	1f8f4 <mpfr_prec_round@@Base+0x208>  // b.any
   1f85c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1f860:	ldr	x1, [x0, #2656]
   1f864:	add	x0, x0, #0xa60
   1f868:	blr	x1
   1f86c:	mov	x8, x0
   1f870:	mrs	x9, tpidr_el0
   1f874:	ldr	w10, [x9, x8]
   1f878:	mov	w0, wzr
   1f87c:	orr	w10, w10, #0x4
   1f880:	str	w10, [x9, x8]
   1f884:	b	1f7e0 <mpfr_prec_round@@Base+0xf4>
   1f888:	sub	x0, x29, #0x8
   1f88c:	mov	x1, x22
   1f890:	bl	be70 <mpfr_tmp_allocate@plt>
   1f894:	mov	x24, x0
   1f898:	b	1f78c <mpfr_prec_round@@Base+0xa0>
   1f89c:	ldr	x8, [x20, #16]
   1f8a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   1f8a4:	ldr	x1, [x0, #2624]
   1f8a8:	add	x0, x0, #0xa40
   1f8ac:	blr	x1
   1f8b0:	mrs	x9, tpidr_el0
   1f8b4:	ldr	x9, [x9, x0]
   1f8b8:	cmp	x8, x9
   1f8bc:	b.eq	1f8fc <mpfr_prec_round@@Base+0x210>  // b.none
   1f8c0:	add	x8, x8, #0x1
   1f8c4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   1f8c8:	cmp	x19, #0x41
   1f8cc:	str	x8, [x20, #16]
   1f8d0:	str	x9, [x23, x25, lsl #3]
   1f8d4:	b.lt	1f7d4 <mpfr_prec_round@@Base+0xe8>  // b.tstop
   1f8d8:	lsl	x2, x25, #3
   1f8dc:	mov	x0, x23
   1f8e0:	mov	w1, wzr
   1f8e4:	bl	c1b0 <memset@plt>
   1f8e8:	b	1f7d4 <mpfr_prec_round@@Base+0xe8>
   1f8ec:	bl	c460 <mpfr_tmp_free@plt>
   1f8f0:	b	1f7dc <mpfr_prec_round@@Base+0xf0>
   1f8f4:	mov	w0, wzr
   1f8f8:	b	1f7e0 <mpfr_prec_round@@Base+0xf4>
   1f8fc:	ldr	w2, [x20, #8]
   1f900:	mov	x0, x20
   1f904:	mov	w1, w21
   1f908:	bl	bff0 <mpfr_overflow@plt>
   1f90c:	b	1f7d4 <mpfr_prec_round@@Base+0xe8>

000000000001f910 <mpfr_can_round@@Base>:
   1f910:	ldr	x8, [x0, #16]
   1f914:	mov	x9, #0x4                   	// #4
   1f918:	movk	x9, #0x8000, lsl #48
   1f91c:	cmp	x8, x9
   1f920:	b.lt	1f960 <mpfr_can_round@@Base+0x50>  // b.tstop
   1f924:	ldr	x9, [x0]
   1f928:	ldr	x8, [x0, #24]
   1f92c:	mov	x6, x4
   1f930:	mov	w4, w2
   1f934:	sub	x10, x9, #0x1
   1f938:	add	x9, x9, #0x3e
   1f93c:	cmp	x10, #0x0
   1f940:	ldr	w2, [x0, #8]
   1f944:	csel	x9, x9, x10, lt  // lt = tstop
   1f948:	asr	x9, x9, #6
   1f94c:	mov	w5, w3
   1f950:	mov	x3, x1
   1f954:	add	x1, x9, #0x1
   1f958:	mov	x0, x8
   1f95c:	b	c3b0 <mpfr_can_round_raw@plt>
   1f960:	mov	w0, wzr
   1f964:	ret

000000000001f968 <mpfr_can_round_raw@@Base>:
   1f968:	stp	x29, x30, [sp, #-96]!
   1f96c:	stp	x28, x27, [sp, #16]
   1f970:	stp	x26, x25, [sp, #32]
   1f974:	stp	x24, x23, [sp, #48]
   1f978:	stp	x22, x21, [sp, #64]
   1f97c:	stp	x20, x19, [sp, #80]
   1f980:	mov	x29, sp
   1f984:	sub	sp, sp, #0x60
   1f988:	mov	x23, x6
   1f98c:	mov	w21, w5
   1f990:	mov	w24, w4
   1f994:	mov	w19, w2
   1f998:	mov	x26, x1
   1f99c:	cmp	x6, #0x0
   1f9a0:	mov	x18, x0
   1f9a4:	stur	x0, [x29, #-32]
   1f9a8:	b.le	200f8 <mpfr_can_round_raw@@Base+0x790>
   1f9ac:	mov	w12, wzr
   1f9b0:	lsr	w2, w19, #31
   1f9b4:	cbz	w24, 1f9d4 <mpfr_can_round_raw@@Base+0x6c>
   1f9b8:	cmp	w24, #0x5
   1f9bc:	b.eq	1f9d4 <mpfr_can_round_raw@@Base+0x6c>  // b.none
   1f9c0:	add	w8, w2, w24
   1f9c4:	cmp	w8, #0x3
   1f9c8:	ccmp	w24, #0x1, #0x4, ne  // ne = any
   1f9cc:	mov	w8, #0x4                   	// #4
   1f9d0:	csinc	w12, w8, wzr, ne  // ne = any
   1f9d4:	cmp	w12, #0x0
   1f9d8:	cset	w8, ne  // ne = any
   1f9dc:	cmp	w21, #0x5
   1f9e0:	csel	w8, w8, w21, eq  // eq = none
   1f9e4:	cbz	w8, 1fa00 <mpfr_can_round_raw@@Base+0x98>
   1f9e8:	add	w9, w8, w2
   1f9ec:	cmp	w9, #0x3
   1f9f0:	ccmp	w8, #0x1, #0x4, ne  // ne = any
   1f9f4:	mov	w8, #0x4                   	// #4
   1f9f8:	csinc	w4, w8, wzr, ne  // ne = any
   1f9fc:	b	1fa04 <mpfr_can_round_raw@@Base+0x9c>
   1fa00:	mov	w4, wzr
   1fa04:	cmp	w12, #0x0
   1fa08:	cinc	x8, x23, eq  // eq = none
   1fa0c:	cmp	x8, x3
   1fa10:	b.gt	20340 <mpfr_can_round_raw@@Base+0x9d8>
   1fa14:	b.ne	1fa2c <mpfr_can_round_raw@@Base+0xc4>  // b.any
   1fa18:	cmp	w12, #0x4
   1fa1c:	mov	w27, wzr
   1fa20:	b.eq	20098 <mpfr_can_round_raw@@Base+0x730>  // b.none
   1fa24:	cmp	w4, #0x1
   1fa28:	b.eq	20098 <mpfr_can_round_raw@@Base+0x730>  // b.none
   1fa2c:	lsl	x24, x26, #6
   1fa30:	cmp	x24, x23
   1fa34:	b.lt	20120 <mpfr_can_round_raw@@Base+0x7b8>  // b.tstop
   1fa38:	cmp	x24, x3
   1fa3c:	stp	w2, w4, [x29, #-16]
   1fa40:	b.lt	2016c <mpfr_can_round_raw@@Base+0x804>  // b.tstop
   1fa44:	stur	x8, [x29, #-64]
   1fa48:	sub	x8, x3, #0x1
   1fa4c:	add	x9, x3, #0x3e
   1fa50:	sub	x10, x23, #0x1
   1fa54:	cmp	x8, #0x0
   1fa58:	add	x11, x23, #0x3e
   1fa5c:	csel	x8, x9, x8, lt  // lt = tstop
   1fa60:	cmp	x10, #0x0
   1fa64:	csel	x19, x11, x10, lt  // lt = tstop
   1fa68:	asr	x8, x8, #6
   1fa6c:	sub	x28, x26, x19, asr #6
   1fa70:	sub	x27, x8, x19, asr #6
   1fa74:	lsl	x1, x28, #3
   1fa78:	neg	w20, w3
   1fa7c:	neg	w25, w23
   1fa80:	and	x22, x19, #0xffffffffffffffc0
   1fa84:	cmp	x1, #0x4, lsl #12
   1fa88:	add	x10, x27, #0x1
   1fa8c:	stp	x3, x8, [x29, #-48]
   1fa90:	stur	xzr, [x29, #-8]
   1fa94:	stur	x10, [x29, #-72]
   1fa98:	b.hi	201b0 <mpfr_can_round_raw@@Base+0x848>  // b.pmore
   1fa9c:	add	x9, x1, #0xf
   1faa0:	mov	x8, sp
   1faa4:	and	x9, x9, #0xfffffffffffffff0
   1faa8:	sub	x24, x8, x9
   1faac:	mov	sp, x24
   1fab0:	and	w21, w20, #0x3f
   1fab4:	and	w25, w25, #0x3f
   1fab8:	subs	x8, x28, x10
   1fabc:	sub	x9, x23, x22
   1fac0:	stur	x9, [x29, #-24]
   1fac4:	b.le	1faf0 <mpfr_can_round_raw@@Base+0x188>
   1fac8:	cmp	x24, x18
   1facc:	b.eq	1faf0 <mpfr_can_round_raw@@Base+0x188>  // b.none
   1fad0:	lsl	x2, x8, #3
   1fad4:	mov	x0, x24
   1fad8:	mov	x1, x18
   1fadc:	mov	w20, w12
   1fae0:	bl	bad0 <memcpy@plt>
   1fae4:	ldur	x18, [x29, #-32]
   1fae8:	ldp	w2, w4, [x29, #-16]
   1faec:	mov	w12, w20
   1faf0:	asr	x19, x19, #6
   1faf4:	stur	x25, [x29, #-56]
   1faf8:	cbz	w12, 1fbf4 <mpfr_can_round_raw@@Base+0x28c>
   1fafc:	cmp	w12, #0x1
   1fb00:	b.ne	1fcb0 <mpfr_can_round_raw@@Base+0x348>  // b.any
   1fb04:	sub	x20, x28, #0x1
   1fb08:	ldr	x8, [x18, x20, lsl #3]
   1fb0c:	ldur	x3, [x29, #-24]
   1fb10:	mov	x0, x18
   1fb14:	lsr	x8, x8, x25
   1fb18:	lsl	x25, x28, #6
   1fb1c:	mov	x1, x25
   1fb20:	and	x22, x8, #0x1
   1fb24:	bl	c7b0 <mpfr_round_raw_2@plt>
   1fb28:	ldur	x18, [x29, #-32]
   1fb2c:	sxtw	x8, w0
   1fb30:	mvn	x10, x27
   1fb34:	eor	x22, x22, x8
   1fb38:	add	x9, x18, x28, lsl #3
   1fb3c:	ldr	x8, [x9, x10, lsl #3]
   1fb40:	mov	w12, #0x1                   	// #1
   1fb44:	lsl	x12, x12, x21
   1fb48:	add	x11, x24, x28, lsl #3
   1fb4c:	adds	x8, x8, x12
   1fb50:	str	x8, [x11, x10, lsl #3]
   1fb54:	b.cc	1fcf0 <mpfr_can_round_raw@@Base+0x388>  // b.lo, b.ul, b.last
   1fb58:	ldur	x14, [x29, #-40]
   1fb5c:	ldp	w2, w4, [x29, #-16]
   1fb60:	lsl	x11, x26, #3
   1fb64:	mov	x8, xzr
   1fb68:	lsl	x12, x14, #3
   1fb6c:	sub	x13, x26, x14
   1fb70:	sub	x14, x11, x14, lsl #3
   1fb74:	mov	x10, xzr
   1fb78:	add	x15, x24, x14
   1fb7c:	add	x16, x18, x13, lsl #3
   1fb80:	add	x14, x8, #0x1
   1fb84:	cmp	x14, x27
   1fb88:	b.gt	1fd88 <mpfr_can_round_raw@@Base+0x420>
   1fb8c:	ldr	x17, [x16, x8, lsl #3]
   1fb90:	sub	x10, x10, #0x8
   1fb94:	adds	x17, x17, #0x1
   1fb98:	str	x17, [x15, x8, lsl #3]
   1fb9c:	mov	x8, x14
   1fba0:	b.cs	1fb80 <mpfr_can_round_raw@@Base+0x218>  // b.hs, b.nlast
   1fba4:	mov	w8, wzr
   1fba8:	cmp	x24, x18
   1fbac:	mov	w9, #0x1                   	// #1
   1fbb0:	b.eq	20044 <mpfr_can_round_raw@@Base+0x6dc>  // b.none
   1fbb4:	cmp	x14, x27
   1fbb8:	b.ge	20044 <mpfr_can_round_raw@@Base+0x6dc>  // b.tcont
   1fbbc:	sub	x9, x11, x12
   1fbc0:	ldur	x11, [x29, #-40]
   1fbc4:	add	x8, x18, x13, lsl #3
   1fbc8:	add	x9, x24, x9
   1fbcc:	sub	x8, x8, x10
   1fbd0:	sub	x11, x11, x19
   1fbd4:	sub	x9, x9, x10
   1fbd8:	sub	x10, x11, x14
   1fbdc:	ldr	x11, [x8], #8
   1fbe0:	subs	x10, x10, #0x1
   1fbe4:	str	x11, [x9], #8
   1fbe8:	b.ne	1fbdc <mpfr_can_round_raw@@Base+0x274>  // b.any
   1fbec:	mov	w8, wzr
   1fbf0:	b	1fd38 <mpfr_can_round_raw@@Base+0x3d0>
   1fbf4:	mvn	x20, x27
   1fbf8:	add	x8, x18, x28, lsl #3
   1fbfc:	ldr	x9, [x8, x20, lsl #3]
   1fc00:	mov	w11, #0x1                   	// #1
   1fc04:	lsl	x0, x11, x21
   1fc08:	add	x10, x24, x28, lsl #3
   1fc0c:	adds	x9, x9, x0
   1fc10:	str	x9, [x10, x20, lsl #3]
   1fc14:	stur	w12, [x29, #-76]
   1fc18:	stur	x0, [x29, #-88]
   1fc1c:	b.cc	1fd40 <mpfr_can_round_raw@@Base+0x3d8>  // b.lo, b.ul, b.last
   1fc20:	ldur	x13, [x29, #-40]
   1fc24:	lsl	x10, x26, #3
   1fc28:	mov	x14, xzr
   1fc2c:	mov	x9, xzr
   1fc30:	lsl	x11, x13, #3
   1fc34:	sub	x12, x26, x13
   1fc38:	sub	x13, x10, x13, lsl #3
   1fc3c:	add	x15, x24, x13
   1fc40:	add	x16, x18, x12, lsl #3
   1fc44:	add	x13, x14, #0x1
   1fc48:	cmp	x13, x27
   1fc4c:	b.gt	1fdc8 <mpfr_can_round_raw@@Base+0x460>
   1fc50:	ldr	x17, [x16, x14, lsl #3]
   1fc54:	sub	x9, x9, #0x8
   1fc58:	adds	x17, x17, #0x1
   1fc5c:	str	x17, [x15, x14, lsl #3]
   1fc60:	mov	x14, x13
   1fc64:	b.cs	1fc44 <mpfr_can_round_raw@@Base+0x2dc>  // b.hs, b.nlast
   1fc68:	cmp	x24, x18
   1fc6c:	mov	w21, wzr
   1fc70:	b.eq	1fe00 <mpfr_can_round_raw@@Base+0x498>  // b.none
   1fc74:	cmp	x13, x27
   1fc78:	b.ge	1fe00 <mpfr_can_round_raw@@Base+0x498>  // b.tcont
   1fc7c:	sub	x10, x10, x11
   1fc80:	ldur	x11, [x29, #-40]
   1fc84:	add	x8, x18, x12, lsl #3
   1fc88:	add	x10, x24, x10
   1fc8c:	sub	x8, x8, x9
   1fc90:	sub	x11, x11, x19
   1fc94:	sub	x9, x10, x9
   1fc98:	sub	x10, x11, x13
   1fc9c:	ldr	x11, [x8], #8
   1fca0:	subs	x10, x10, #0x1
   1fca4:	str	x11, [x9], #8
   1fca8:	b.ne	1fc9c <mpfr_can_round_raw@@Base+0x334>  // b.any
   1fcac:	b	1fd80 <mpfr_can_round_raw@@Base+0x418>
   1fcb0:	add	x8, x18, x28, lsl #3
   1fcb4:	ldur	x8, [x8, #-8]
   1fcb8:	ldur	x3, [x29, #-24]
   1fcbc:	lsl	x1, x28, #6
   1fcc0:	mov	x0, x18
   1fcc4:	lsr	x8, x8, x25
   1fcc8:	stur	w12, [x29, #-76]
   1fccc:	and	x22, x8, #0x1
   1fcd0:	mov	x25, x18
   1fcd4:	bl	c7b0 <mpfr_round_raw_2@plt>
   1fcd8:	sxtw	x8, w0
   1fcdc:	mov	w9, #0x1                   	// #1
   1fce0:	mvn	x20, x27
   1fce4:	eor	x22, x22, x8
   1fce8:	lsl	x11, x9, x21
   1fcec:	b	1fe34 <mpfr_can_round_raw@@Base+0x4cc>
   1fcf0:	mov	w8, wzr
   1fcf4:	cmp	x27, #0x1
   1fcf8:	mov	w9, #0x1                   	// #1
   1fcfc:	b.lt	20040 <mpfr_can_round_raw@@Base+0x6d8>  // b.tstop
   1fd00:	ldp	w2, w4, [x29, #-16]
   1fd04:	cmp	x24, x18
   1fd08:	b.eq	20044 <mpfr_can_round_raw@@Base+0x6dc>  // b.none
   1fd0c:	ldur	x11, [x29, #-40]
   1fd10:	lsl	x9, x26, #3
   1fd14:	sub	x10, x26, x11
   1fd18:	sub	x9, x9, x11, lsl #3
   1fd1c:	sub	x8, x11, x19
   1fd20:	add	x9, x24, x9
   1fd24:	add	x10, x18, x10, lsl #3
   1fd28:	ldr	x11, [x10], #8
   1fd2c:	subs	x8, x8, #0x1
   1fd30:	str	x11, [x9], #8
   1fd34:	b.ne	1fd28 <mpfr_can_round_raw@@Base+0x3c0>  // b.any
   1fd38:	mov	w9, #0x1                   	// #1
   1fd3c:	b	20044 <mpfr_can_round_raw@@Base+0x6dc>
   1fd40:	cmp	x27, #0x1
   1fd44:	mov	w21, wzr
   1fd48:	b.lt	1fe00 <mpfr_can_round_raw@@Base+0x498>  // b.tstop
   1fd4c:	cmp	x24, x18
   1fd50:	b.eq	1fe00 <mpfr_can_round_raw@@Base+0x498>  // b.none
   1fd54:	ldur	x11, [x29, #-40]
   1fd58:	lsl	x9, x26, #3
   1fd5c:	sub	x10, x26, x11
   1fd60:	sub	x9, x9, x11, lsl #3
   1fd64:	sub	x8, x11, x19
   1fd68:	add	x9, x24, x9
   1fd6c:	add	x10, x18, x10, lsl #3
   1fd70:	ldr	x11, [x10], #8
   1fd74:	subs	x8, x8, #0x1
   1fd78:	str	x11, [x9], #8
   1fd7c:	b.ne	1fd70 <mpfr_can_round_raw@@Base+0x408>  // b.any
   1fd80:	mov	w21, wzr
   1fd84:	b	1fe00 <mpfr_can_round_raw@@Base+0x498>
   1fd88:	ldur	x10, [x29, #-48]
   1fd8c:	cmp	x23, #0x81
   1fd90:	b.lt	200bc <mpfr_can_round_raw@@Base+0x754>  // b.tstop
   1fd94:	mov	x10, xzr
   1fd98:	ldr	x11, [x9, x10, lsl #3]
   1fd9c:	add	x12, x10, #0x2
   1fda0:	cmn	x11, #0x1
   1fda4:	cset	w8, eq  // eq = none
   1fda8:	cmp	x12, x19
   1fdac:	b.ge	1fdbc <mpfr_can_round_raw@@Base+0x454>  // b.tcont
   1fdb0:	cmn	x11, #0x1
   1fdb4:	add	x10, x10, #0x1
   1fdb8:	b.eq	1fd98 <mpfr_can_round_raw@@Base+0x430>  // b.none
   1fdbc:	cmn	x11, #0x1
   1fdc0:	cset	w9, ne  // ne = any
   1fdc4:	b	20044 <mpfr_can_round_raw@@Base+0x6dc>
   1fdc8:	cmp	x23, #0x81
   1fdcc:	b.lt	1fdfc <mpfr_can_round_raw@@Base+0x494>  // b.tstop
   1fdd0:	mov	x9, xzr
   1fdd4:	ldr	x10, [x8, x9, lsl #3]
   1fdd8:	add	x11, x9, #0x2
   1fddc:	cmn	x10, #0x1
   1fde0:	cset	w21, eq  // eq = none
   1fde4:	cmp	x11, x19
   1fde8:	b.ge	1fe00 <mpfr_can_round_raw@@Base+0x498>  // b.tcont
   1fdec:	cmn	x10, #0x1
   1fdf0:	add	x9, x9, #0x1
   1fdf4:	b.eq	1fdd4 <mpfr_can_round_raw@@Base+0x46c>  // b.none
   1fdf8:	b	1fe00 <mpfr_can_round_raw@@Base+0x498>
   1fdfc:	mov	w21, #0x1                   	// #1
   1fe00:	add	x8, x24, x28, lsl #3
   1fe04:	ldur	x3, [x29, #-24]
   1fe08:	ldur	x22, [x8, #-8]
   1fe0c:	lsl	x1, x28, #6
   1fe10:	mov	x0, x24
   1fe14:	bl	c7b0 <mpfr_round_raw_2@plt>
   1fe18:	cbnz	w21, 20248 <mpfr_can_round_raw@@Base+0x8e0>
   1fe1c:	lsr	x8, x22, x25
   1fe20:	ldur	x25, [x29, #-32]
   1fe24:	ldur	x11, [x29, #-88]
   1fe28:	and	x8, x8, #0x1
   1fe2c:	sxtw	x9, w0
   1fe30:	eor	x22, x8, x9
   1fe34:	add	x9, x25, x28, lsl #3
   1fe38:	ldr	x8, [x9, x20, lsl #3]
   1fe3c:	add	x10, x24, x28, lsl #3
   1fe40:	mov	x0, x25
   1fe44:	subs	x8, x8, x11
   1fe48:	str	x8, [x10, x20, lsl #3]
   1fe4c:	b.cs	1ff04 <mpfr_can_round_raw@@Base+0x59c>  // b.hs, b.nlast
   1fe50:	lsl	x11, x20, #3
   1fe54:	add	x13, x20, x26
   1fe58:	add	x15, x11, x26, lsl #3
   1fe5c:	ldp	w2, w4, [x29, #-16]
   1fe60:	sub	x13, x13, x19
   1fe64:	sub	x15, x15, x19, lsl #3
   1fe68:	add	x13, x0, x13, lsl #3
   1fe6c:	add	x15, x15, x24
   1fe70:	mov	x14, xzr
   1fe74:	mov	x8, xzr
   1fe78:	lsl	x12, x26, #3
   1fe7c:	lsl	x10, x19, #3
   1fe80:	add	x15, x15, #0x8
   1fe84:	add	x16, x13, #0x8
   1fe88:	add	x13, x14, #0x1
   1fe8c:	cmp	x13, x27
   1fe90:	b.gt	1fff8 <mpfr_can_round_raw@@Base+0x690>
   1fe94:	ldr	x17, [x16, x14, lsl #3]
   1fe98:	sub	x8, x8, #0x8
   1fe9c:	sub	x18, x17, #0x1
   1fea0:	str	x18, [x15, x14, lsl #3]
   1fea4:	mov	x14, x13
   1fea8:	cbz	x17, 1fe88 <mpfr_can_round_raw@@Base+0x520>
   1feac:	cmp	x24, x0
   1feb0:	b.eq	1ff54 <mpfr_can_round_raw@@Base+0x5ec>  // b.none
   1feb4:	cmp	x13, x27
   1feb8:	b.ge	1ff54 <mpfr_can_round_raw@@Base+0x5ec>  // b.tcont
   1febc:	add	x11, x11, x12
   1fec0:	ldur	x12, [x29, #-40]
   1fec4:	add	x9, x20, x26
   1fec8:	sub	x9, x9, x19
   1fecc:	sub	x10, x11, x10
   1fed0:	add	x9, x0, x9, lsl #3
   1fed4:	add	x10, x10, x24
   1fed8:	sub	x12, x12, x19
   1fedc:	sub	x9, x9, x8
   1fee0:	sub	x10, x10, x8
   1fee4:	add	x8, x9, #0x8
   1fee8:	add	x9, x10, #0x8
   1feec:	sub	x10, x12, x13
   1fef0:	ldr	x11, [x8], #8
   1fef4:	subs	x10, x10, #0x1
   1fef8:	str	x11, [x9], #8
   1fefc:	b.ne	1fef0 <mpfr_can_round_raw@@Base+0x588>  // b.any
   1ff00:	b	1ff54 <mpfr_can_round_raw@@Base+0x5ec>
   1ff04:	ldp	w2, w4, [x29, #-16]
   1ff08:	cmp	x27, #0x1
   1ff0c:	b.lt	1ff54 <mpfr_can_round_raw@@Base+0x5ec>  // b.tstop
   1ff10:	cmp	x24, x0
   1ff14:	b.eq	1ff54 <mpfr_can_round_raw@@Base+0x5ec>  // b.none
   1ff18:	ldur	x8, [x29, #-40]
   1ff1c:	lsl	x9, x20, #3
   1ff20:	add	x10, x20, x26
   1ff24:	add	x9, x9, x26, lsl #3
   1ff28:	sub	x10, x10, x19
   1ff2c:	sub	x9, x9, x19, lsl #3
   1ff30:	add	x10, x0, x10, lsl #3
   1ff34:	add	x9, x9, x24
   1ff38:	sub	x8, x8, x19
   1ff3c:	add	x9, x9, #0x8
   1ff40:	add	x10, x10, #0x8
   1ff44:	ldr	x11, [x10], #8
   1ff48:	subs	x8, x8, #0x1
   1ff4c:	str	x11, [x9], #8
   1ff50:	b.ne	1ff44 <mpfr_can_round_raw@@Base+0x5dc>  // b.any
   1ff54:	sub	x10, x28, #0x1
   1ff58:	ldr	x8, [x24, x10, lsl #3]
   1ff5c:	mov	x11, xzr
   1ff60:	mov	x12, x8
   1ff64:	cmp	x11, x19
   1ff68:	b.ne	1ffbc <mpfr_can_round_raw@@Base+0x654>  // b.any
   1ff6c:	tbnz	x12, #63, 1ffbc <mpfr_can_round_raw@@Base+0x654>
   1ff70:	cmp	w4, #0x1
   1ff74:	b.eq	20054 <mpfr_can_round_raw@@Base+0x6ec>  // b.none
   1ff78:	ldur	w8, [x29, #-76]
   1ff7c:	mov	w27, wzr
   1ff80:	cmp	w8, #0x0
   1ff84:	cset	w8, eq  // eq = none
   1ff88:	cmp	w4, #0x4
   1ff8c:	cset	w9, eq  // eq = none
   1ff90:	and	w8, w8, w9
   1ff94:	tbnz	w8, #0, 20090 <mpfr_can_round_raw@@Base+0x728>
   1ff98:	cbnz	x22, 20090 <mpfr_can_round_raw@@Base+0x728>
   1ff9c:	ldur	x8, [x29, #-24]
   1ffa0:	lsl	x1, x28, #6
   1ffa4:	mov	x0, x24
   1ffa8:	add	x3, x8, #0x1
   1ffac:	bl	c7b0 <mpfr_round_raw_2@plt>
   1ffb0:	cmp	w0, #0x0
   1ffb4:	cset	w27, ne  // ne = any
   1ffb8:	b	20090 <mpfr_can_round_raw@@Base+0x728>
   1ffbc:	ldur	x9, [x29, #-48]
   1ffc0:	ldur	x11, [x29, #-64]
   1ffc4:	cmp	x11, x9
   1ffc8:	b.ne	20038 <mpfr_can_round_raw@@Base+0x6d0>  // b.any
   1ffcc:	ldur	x9, [x29, #-56]
   1ffd0:	cbnz	w4, 20054 <mpfr_can_round_raw@@Base+0x6ec>
   1ffd4:	ldr	x8, [x0, x10, lsl #3]
   1ffd8:	lsr	x8, x8, x9
   1ffdc:	tbnz	w8, #0, 20054 <mpfr_can_round_raw@@Base+0x6ec>
   1ffe0:	ldur	x3, [x29, #-24]
   1ffe4:	lsl	x1, x28, #6
   1ffe8:	mov	w4, #0x4                   	// #4
   1ffec:	bl	c7b0 <mpfr_round_raw_2@plt>
   1fff0:	cmp	w0, #0x0
   1fff4:	b	2008c <mpfr_can_round_raw@@Base+0x724>
   1fff8:	sub	x10, x28, #0x1
   1fffc:	ldr	x8, [x24, x10, lsl #3]
   20000:	cmp	x23, #0x41
   20004:	b.lt	1ff5c <mpfr_can_round_raw@@Base+0x5f4>  // b.tstop
   20008:	mov	x11, xzr
   2000c:	mov	w13, #0x1                   	// #1
   20010:	ldr	x14, [x9, x11, lsl #3]
   20014:	add	x11, x11, #0x1
   20018:	subs	x12, x14, x13
   2001c:	cset	w15, cc  // cc = lo, ul, last
   20020:	cmp	x11, x19
   20024:	b.ge	1ff64 <mpfr_can_round_raw@@Base+0x5fc>  // b.tcont
   20028:	cmp	x14, x13
   2002c:	mov	x13, x15
   20030:	b.cc	20010 <mpfr_can_round_raw@@Base+0x6a8>  // b.lo, b.ul, b.last
   20034:	b	1ff64 <mpfr_can_round_raw@@Base+0x5fc>
   20038:	lsl	x25, x28, #6
   2003c:	b	20064 <mpfr_can_round_raw@@Base+0x6fc>
   20040:	ldp	w2, w4, [x29, #-16]
   20044:	ldur	x10, [x29, #-48]
   20048:	cmp	x10, x23
   2004c:	b.ne	2005c <mpfr_can_round_raw@@Base+0x6f4>  // b.any
   20050:	tbz	w9, #0, 2005c <mpfr_can_round_raw@@Base+0x6f4>
   20054:	mov	w27, wzr
   20058:	b	20090 <mpfr_can_round_raw@@Base+0x728>
   2005c:	tbnz	w8, #0, 200bc <mpfr_can_round_raw@@Base+0x754>
   20060:	ldr	x8, [x24, x20, lsl #3]
   20064:	ldur	x9, [x29, #-56]
   20068:	ldur	x3, [x29, #-24]
   2006c:	mov	x0, x24
   20070:	mov	x1, x25
   20074:	lsr	x8, x8, x9
   20078:	and	x19, x8, #0x1
   2007c:	bl	c7b0 <mpfr_round_raw_2@plt>
   20080:	sxtw	x8, w0
   20084:	eor	x8, x19, x8
   20088:	cmp	x22, x8
   2008c:	cset	w27, eq  // eq = none
   20090:	ldur	x0, [x29, #-8]
   20094:	cbnz	x0, 201d4 <mpfr_can_round_raw@@Base+0x86c>
   20098:	mov	w0, w27
   2009c:	mov	sp, x29
   200a0:	ldp	x20, x19, [sp, #80]
   200a4:	ldp	x22, x21, [sp, #64]
   200a8:	ldp	x24, x23, [sp, #48]
   200ac:	ldp	x26, x25, [sp, #32]
   200b0:	ldp	x28, x27, [sp, #16]
   200b4:	ldp	x29, x30, [sp], #96
   200b8:	ret
   200bc:	cmp	w4, #0x1
   200c0:	b.eq	20054 <mpfr_can_round_raw@@Base+0x6ec>  // b.none
   200c4:	cmp	w4, #0x4
   200c8:	b.ne	200f0 <mpfr_can_round_raw@@Base+0x788>  // b.any
   200cc:	cmp	x10, x23
   200d0:	mov	w27, wzr
   200d4:	b.le	20090 <mpfr_can_round_raw@@Base+0x728>
   200d8:	ldur	x8, [x29, #-72]
   200dc:	cmp	x28, x8
   200e0:	b.ne	20090 <mpfr_can_round_raw@@Base+0x728>  // b.any
   200e4:	ldr	x8, [x24]
   200e8:	cmp	x8, #0x0
   200ec:	b	2008c <mpfr_can_round_raw@@Base+0x724>
   200f0:	cmp	x22, #0x0
   200f4:	b	2008c <mpfr_can_round_raw@@Base+0x724>
   200f8:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   200fc:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   20100:	add	x0, x0, #0xe45
   20104:	add	x2, x2, #0xea0
   20108:	mov	w1, #0xbf                  	// #191
   2010c:	mov	x20, x3
   20110:	bl	cb90 <mpfr_assert_fail@plt>
   20114:	ldur	x18, [x29, #-32]
   20118:	mov	x3, x20
   2011c:	b	1f9ac <mpfr_can_round_raw@@Base+0x44>
   20120:	cmp	w12, w4
   20124:	cset	w8, eq  // eq = none
   20128:	cmp	w4, #0x0
   2012c:	cset	w9, eq  // eq = none
   20130:	cmp	x23, x3
   20134:	mov	w27, wzr
   20138:	b.ge	20098 <mpfr_can_round_raw@@Base+0x730>  // b.tcont
   2013c:	orr	w8, w8, w9
   20140:	cbz	w8, 20098 <mpfr_can_round_raw@@Base+0x730>
   20144:	add	x8, x23, #0x1
   20148:	cmp	x8, x3
   2014c:	b.ne	201a8 <mpfr_can_round_raw@@Base+0x840>  // b.any
   20150:	cmp	w12, #0x1
   20154:	b.eq	201a8 <mpfr_can_round_raw@@Base+0x840>  // b.none
   20158:	mov	x0, x18
   2015c:	mov	x1, x26
   20160:	bl	c820 <mpfr_powerof2_raw2@plt>
   20164:	cbnz	w0, 20340 <mpfr_can_round_raw@@Base+0x9d8>
   20168:	b	201a8 <mpfr_can_round_raw@@Base+0x840>
   2016c:	mov	x0, x18
   20170:	mov	x1, x26
   20174:	mov	w20, w12
   20178:	mov	x19, x3
   2017c:	bl	c820 <mpfr_powerof2_raw2@plt>
   20180:	cbz	w0, 201dc <mpfr_can_round_raw@@Base+0x874>
   20184:	ldur	w8, [x29, #-12]
   20188:	cmp	w8, #0x4
   2018c:	b.eq	20198 <mpfr_can_round_raw@@Base+0x830>  // b.none
   20190:	cmp	w8, #0x1
   20194:	b.ne	201a0 <mpfr_can_round_raw@@Base+0x838>  // b.any
   20198:	cmp	w20, w8
   2019c:	b.ne	20340 <mpfr_can_round_raw@@Base+0x9d8>  // b.any
   201a0:	cmp	w20, #0x1
   201a4:	b.ne	2027c <mpfr_can_round_raw@@Base+0x914>  // b.any
   201a8:	mov	w27, #0x1                   	// #1
   201ac:	b	20098 <mpfr_can_round_raw@@Base+0x730>
   201b0:	sub	x0, x29, #0x8
   201b4:	mov	w21, w12
   201b8:	bl	be70 <mpfr_tmp_allocate@plt>
   201bc:	ldur	x10, [x29, #-72]
   201c0:	ldur	x18, [x29, #-32]
   201c4:	ldp	w2, w4, [x29, #-16]
   201c8:	mov	w12, w21
   201cc:	mov	x24, x0
   201d0:	b	1fab0 <mpfr_can_round_raw@@Base+0x148>
   201d4:	bl	c460 <mpfr_tmp_free@plt>
   201d8:	b	20098 <mpfr_can_round_raw@@Base+0x730>
   201dc:	ldur	w8, [x29, #-12]
   201e0:	cbz	w8, 2028c <mpfr_can_round_raw@@Base+0x924>
   201e4:	cmp	w20, w8
   201e8:	b.ne	20348 <mpfr_can_round_raw@@Base+0x9e0>  // b.any
   201ec:	cmp	x24, x23
   201f0:	mov	w27, #0x1                   	// #1
   201f4:	b.le	20098 <mpfr_can_round_raw@@Base+0x730>
   201f8:	ldur	x10, [x29, #-32]
   201fc:	cbnz	w20, 20098 <mpfr_can_round_raw@@Base+0x730>
   20200:	add	x8, x23, #0x3f
   20204:	cmp	x23, #0x0
   20208:	csel	x8, x8, x23, lt  // lt = tstop
   2020c:	mov	x9, #0xffffffffffffffff    	// #-1
   20210:	eor	x8, x9, x8, asr #6
   20214:	add	x8, x8, x26
   20218:	ldr	x8, [x10, x8, lsl #3]
   2021c:	mvn	w9, w23
   20220:	lsr	x8, x8, x9
   20224:	tbz	w8, #0, 201a8 <mpfr_can_round_raw@@Base+0x840>
   20228:	ldur	x0, [x29, #-32]
   2022c:	ldur	w2, [x29, #-16]
   20230:	add	x3, x23, #0x1
   20234:	mov	w4, #0x4                   	// #4
   20238:	mov	x1, x24
   2023c:	bl	c7b0 <mpfr_round_raw_2@plt>
   20240:	cbnz	w0, 201a8 <mpfr_can_round_raw@@Base+0x840>
   20244:	b	20340 <mpfr_can_round_raw@@Base+0x9d8>
   20248:	ldur	w10, [x29, #-12]
   2024c:	cmp	w10, #0x1
   20250:	b.eq	20054 <mpfr_can_round_raw@@Base+0x6ec>  // b.none
   20254:	ldur	x9, [x29, #-48]
   20258:	add	x8, x23, #0x1
   2025c:	cmp	x8, x9
   20260:	cset	w27, lt  // lt = tstop
   20264:	cmp	w10, #0x4
   20268:	b.ne	20090 <mpfr_can_round_raw@@Base+0x728>  // b.any
   2026c:	cmp	x8, x9
   20270:	mov	w27, wzr
   20274:	b.lt	200d8 <mpfr_can_round_raw@@Base+0x770>  // b.tstop
   20278:	b	20090 <mpfr_can_round_raw@@Base+0x728>
   2027c:	add	x8, x23, #0x1
   20280:	cmp	x8, x19
   20284:	cset	w27, lt  // lt = tstop
   20288:	b	20098 <mpfr_can_round_raw@@Base+0x730>
   2028c:	add	x3, x23, #0x1
   20290:	cmp	x3, x19
   20294:	b.ne	202a4 <mpfr_can_round_raw@@Base+0x93c>  // b.any
   20298:	ldur	x8, [x29, #-32]
   2029c:	ldrb	w8, [x8]
   202a0:	tbnz	w8, #0, 20340 <mpfr_can_round_raw@@Base+0x9d8>
   202a4:	cmp	x24, x23
   202a8:	b.le	201a8 <mpfr_can_round_raw@@Base+0x840>
   202ac:	add	x8, x23, #0x3f
   202b0:	cmp	x23, #0x0
   202b4:	csel	x8, x8, x23, lt  // lt = tstop
   202b8:	mov	x9, #0xffffffffffffffff    	// #-1
   202bc:	eor	x8, x9, x8, asr #6
   202c0:	ldur	x9, [x29, #-32]
   202c4:	add	x8, x8, x26
   202c8:	ldr	x8, [x9, x8, lsl #3]
   202cc:	mvn	w9, w23
   202d0:	lsr	x8, x8, x9
   202d4:	tbz	w8, #0, 201a8 <mpfr_can_round_raw@@Base+0x840>
   202d8:	ldur	x0, [x29, #-32]
   202dc:	ldur	w2, [x29, #-16]
   202e0:	mov	w4, #0x4                   	// #4
   202e4:	mov	x1, x24
   202e8:	bl	c7b0 <mpfr_round_raw_2@plt>
   202ec:	cmp	w0, #0x0
   202f0:	cset	w27, ne  // ne = any
   202f4:	cbz	w20, 20098 <mpfr_can_round_raw@@Base+0x730>
   202f8:	ldur	x10, [x29, #-32]
   202fc:	cbnz	w0, 20098 <mpfr_can_round_raw@@Base+0x730>
   20300:	sub	x8, x23, #0x1
   20304:	add	x9, x23, #0x3e
   20308:	cmp	x8, #0x0
   2030c:	csel	x8, x9, x8, lt  // lt = tstop
   20310:	mov	x9, #0xffffffffffffffff    	// #-1
   20314:	eor	x8, x9, x8, asr #6
   20318:	add	x8, x8, x26
   2031c:	ldr	x8, [x10, x8, lsl #3]
   20320:	neg	w9, w23
   20324:	cmp	w20, #0x1
   20328:	cset	w10, eq  // eq = none
   2032c:	lsr	x8, x8, x9
   20330:	tst	x8, #0x1
   20334:	cset	w8, eq  // eq = none
   20338:	eor	w27, w10, w8
   2033c:	b	20098 <mpfr_can_round_raw@@Base+0x730>
   20340:	mov	w27, wzr
   20344:	b	20098 <mpfr_can_round_raw@@Base+0x730>
   20348:	ldur	x0, [x29, #-32]
   2034c:	ldur	w2, [x29, #-16]
   20350:	mov	w4, #0x4                   	// #4
   20354:	mov	x1, x24
   20358:	mov	x3, x23
   2035c:	bl	c7b0 <mpfr_round_raw_2@plt>
   20360:	cmp	w0, #0x0
   20364:	cset	w27, ne  // ne = any
   20368:	b	20098 <mpfr_can_round_raw@@Base+0x730>

000000000002036c <mpfr_set4@@Base>:
   2036c:	stp	x29, x30, [sp, #-48]!
   20370:	stp	x20, x19, [sp, #32]
   20374:	str	w3, [x0, #8]
   20378:	ldr	x9, [x1, #16]
   2037c:	mov	x10, #0x2                   	// #2
   20380:	movk	x10, #0x8000, lsl #48
   20384:	add	x11, x10, #0x2
   20388:	str	x9, [x0, #16]
   2038c:	ldr	x9, [x1, #16]
   20390:	str	x21, [sp, #16]
   20394:	mov	x29, sp
   20398:	cmp	x9, x11
   2039c:	b.lt	20638 <mpfr_set4@@Base+0x2cc>  // b.tstop
   203a0:	ldr	x9, [x1]
   203a4:	ldr	x13, [x0]
   203a8:	ldr	x20, [x0, #24]
   203ac:	mov	x8, x0
   203b0:	cmp	x9, x13
   203b4:	b.ne	203f0 <mpfr_set4@@Base+0x84>  // b.any
   203b8:	ldr	x1, [x1, #24]
   203bc:	cmp	x20, x1
   203c0:	b.eq	203e8 <mpfr_set4@@Base+0x7c>  // b.none
   203c4:	sub	x8, x9, #0x1
   203c8:	add	x9, x9, #0x3e
   203cc:	cmp	x8, #0x0
   203d0:	csel	x8, x9, x8, lt  // lt = tstop
   203d4:	asr	x8, x8, #6
   203d8:	lsl	x8, x8, #3
   203dc:	add	x2, x8, #0x8
   203e0:	mov	x0, x20
   203e4:	bl	bad0 <memcpy@plt>
   203e8:	mov	w19, wzr
   203ec:	b	205a8 <mpfr_set4@@Base+0x23c>
   203f0:	sub	x10, x9, #0x1
   203f4:	add	x11, x9, #0x3e
   203f8:	sub	x12, x13, #0x1
   203fc:	cmp	x10, #0x0
   20400:	add	x15, x13, #0x3e
   20404:	csel	x10, x11, x10, lt  // lt = tstop
   20408:	cmp	x12, #0x0
   2040c:	asr	x14, x10, #6
   20410:	csel	x10, x15, x12, lt  // lt = tstop
   20414:	asr	x10, x10, #6
   20418:	add	x18, x14, #0x1
   2041c:	cmp	x13, x9
   20420:	add	x12, x10, #0x1
   20424:	b.ge	20664 <mpfr_set4@@Base+0x2f8>  // b.tcont
   20428:	ldr	x15, [x1, #24]
   2042c:	neg	w9, w13
   20430:	ands	x16, x9, #0x3f
   20434:	mvn	x11, x10
   20438:	add	x9, x15, x18, lsl #3
   2043c:	mov	w19, w3
   20440:	add	x1, x9, x11, lsl #3
   20444:	b.eq	20694 <mpfr_set4@@Base+0x328>  // b.none
   20448:	ldr	x17, [x1]
   2044c:	sub	x16, x16, #0x1
   20450:	mov	w0, #0x1                   	// #1
   20454:	lsl	x0, x0, x16
   20458:	sub	x3, x0, #0x1
   2045c:	and	x16, x17, x0
   20460:	and	x17, x17, x3
   20464:	cbz	w2, 2046c <mpfr_set4@@Base+0x100>
   20468:	cbnz	x16, 20494 <mpfr_set4@@Base+0x128>
   2046c:	cbnz	x17, 20494 <mpfr_set4@@Base+0x128>
   20470:	sub	x18, x18, x12
   20474:	cbz	x18, 20494 <mpfr_set4@@Base+0x128>
   20478:	mvn	x17, x10
   2047c:	add	x18, x17, x14
   20480:	ldr	x17, [x15, x18, lsl #3]
   20484:	subs	x18, x18, #0x1
   20488:	cset	w3, cs  // cs = hs, nlast
   2048c:	cbnz	x17, 20494 <mpfr_set4@@Base+0x128>
   20490:	tbnz	w3, #0, 20480 <mpfr_set4@@Base+0x114>
   20494:	lsl	x21, x0, #1
   20498:	cmp	w2, #0x5
   2049c:	b.eq	2055c <mpfr_set4@@Base+0x1f0>  // b.none
   204a0:	cmp	w2, #0x1
   204a4:	b.eq	204d4 <mpfr_set4@@Base+0x168>  // b.none
   204a8:	cbnz	w2, 204c8 <mpfr_set4@@Base+0x15c>
   204ac:	cbz	x16, 204d4 <mpfr_set4@@Base+0x168>
   204b0:	cbnz	x17, 204ec <mpfr_set4@@Base+0x180>
   204b4:	ldr	x16, [x1]
   204b8:	tst	x16, x21
   204bc:	b.ne	204ec <mpfr_set4@@Base+0x180>  // b.any
   204c0:	neg	w19, w19
   204c4:	b	20560 <mpfr_set4@@Base+0x1f4>
   204c8:	add	w18, w2, w19, lsr #31
   204cc:	cmp	w18, #0x3
   204d0:	b.ne	204e4 <mpfr_set4@@Base+0x178>  // b.any
   204d4:	orr	x8, x17, x16
   204d8:	cmp	x8, #0x0
   204dc:	csneg	w19, wzr, w19, eq  // eq = none
   204e0:	b	20560 <mpfr_set4@@Base+0x1f4>
   204e4:	orr	x16, x17, x16
   204e8:	cbz	x16, 2055c <mpfr_set4@@Base+0x1f0>
   204ec:	ldr	x12, [x1]
   204f0:	adds	x12, x12, x21
   204f4:	str	x12, [x20]
   204f8:	b.cc	205bc <mpfr_set4@@Base+0x250>  // b.lo, b.ul, b.last
   204fc:	sub	x14, x14, x10
   20500:	add	x14, x15, x14, lsl #3
   20504:	mov	x13, xzr
   20508:	add	x12, x20, #0x8
   2050c:	add	x14, x14, #0x8
   20510:	add	x15, x13, #0x1
   20514:	cmp	x15, x10
   20518:	b.gt	205e8 <mpfr_set4@@Base+0x27c>
   2051c:	ldr	x16, [x14, x13, lsl #3]
   20520:	mov	x13, x15
   20524:	adds	x16, x16, #0x1
   20528:	str	x16, [x12], #8
   2052c:	b.cs	20510 <mpfr_set4@@Base+0x1a4>  // b.hs, b.nlast
   20530:	cmp	x1, x20
   20534:	b.eq	20574 <mpfr_set4@@Base+0x208>  // b.none
   20538:	cmp	x15, x10
   2053c:	b.ge	20574 <mpfr_set4@@Base+0x208>  // b.tcont
   20540:	add	x8, x11, x15
   20544:	add	x8, x8, #0x1
   20548:	ldr	x10, [x9, x8, lsl #3]
   2054c:	adds	x8, x8, #0x1
   20550:	str	x10, [x12], #8
   20554:	b.cc	20548 <mpfr_set4@@Base+0x1dc>  // b.lo, b.ul, b.last
   20558:	b	20574 <mpfr_set4@@Base+0x208>
   2055c:	mov	w19, wzr
   20560:	cmp	x20, x1
   20564:	b.eq	20574 <mpfr_set4@@Base+0x208>  // b.none
   20568:	lsl	x2, x12, #3
   2056c:	mov	x0, x20
   20570:	bl	bad0 <memcpy@plt>
   20574:	ldr	x8, [x20]
   20578:	neg	x9, x21
   2057c:	and	x8, x8, x9
   20580:	str	x8, [x20]
   20584:	cbz	w19, 205a8 <mpfr_set4@@Base+0x23c>
   20588:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2058c:	ldr	x1, [x0, #2656]
   20590:	add	x0, x0, #0xa60
   20594:	blr	x1
   20598:	mrs	x8, tpidr_el0
   2059c:	ldr	w9, [x8, x0]
   205a0:	orr	w9, w9, #0x8
   205a4:	str	w9, [x8, x0]
   205a8:	mov	w0, w19
   205ac:	ldp	x20, x19, [sp, #32]
   205b0:	ldr	x21, [sp, #16]
   205b4:	ldp	x29, x30, [sp], #48
   205b8:	ret
   205bc:	cmp	x13, #0x41
   205c0:	b.lt	20574 <mpfr_set4@@Base+0x208>  // b.tstop
   205c4:	cmp	x1, x20
   205c8:	b.eq	20574 <mpfr_set4@@Base+0x208>  // b.none
   205cc:	add	x8, x11, #0x1
   205d0:	add	x10, x20, #0x8
   205d4:	ldr	x11, [x9, x8, lsl #3]
   205d8:	adds	x8, x8, #0x1
   205dc:	str	x11, [x10], #8
   205e0:	b.cc	205d4 <mpfr_set4@@Base+0x268>  // b.lo, b.ul, b.last
   205e4:	b	20574 <mpfr_set4@@Base+0x208>
   205e8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   205ec:	str	x9, [x20, x10, lsl #3]
   205f0:	ldr	x9, [x8, #16]
   205f4:	add	x10, x9, #0x1
   205f8:	str	x10, [x8, #16]
   205fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20600:	ldr	x1, [x0, #2624]
   20604:	add	x0, x0, #0xa40
   20608:	blr	x1
   2060c:	mrs	x10, tpidr_el0
   20610:	ldr	x10, [x10, x0]
   20614:	cmp	x9, x10
   20618:	b.lt	20574 <mpfr_set4@@Base+0x208>  // b.tstop
   2061c:	mov	w1, w2
   20620:	mov	w2, w19
   20624:	ldp	x20, x19, [sp, #32]
   20628:	ldr	x21, [sp, #16]
   2062c:	mov	x0, x8
   20630:	ldp	x29, x30, [sp], #48
   20634:	b	bff0 <mpfr_overflow@plt>
   20638:	cmp	x9, x10
   2063c:	b.ne	203e8 <mpfr_set4@@Base+0x7c>  // b.any
   20640:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20644:	ldr	x1, [x0, #2656]
   20648:	add	x0, x0, #0xa60
   2064c:	blr	x1
   20650:	mrs	x8, tpidr_el0
   20654:	ldr	w9, [x8, x0]
   20658:	mov	w19, wzr
   2065c:	orr	w9, w9, #0x4
   20660:	b	205a4 <mpfr_set4@@Base+0x238>
   20664:	ldr	x1, [x1, #24]
   20668:	sub	x19, x12, x18
   2066c:	add	x0, x20, x19, lsl #3
   20670:	cmp	x0, x1
   20674:	b.eq	20680 <mpfr_set4@@Base+0x314>  // b.none
   20678:	lsl	x2, x18, #3
   2067c:	bl	bad0 <memcpy@plt>
   20680:	lsl	x2, x19, #3
   20684:	mov	x0, x20
   20688:	mov	w1, wzr
   2068c:	bl	c1b0 <memset@plt>
   20690:	b	203e8 <mpfr_set4@@Base+0x7c>
   20694:	ldur	x17, [x1, #-8]
   20698:	and	x16, x17, #0x8000000000000000
   2069c:	and	x17, x17, #0x7fffffffffffffff
   206a0:	cbz	w2, 206b0 <mpfr_set4@@Base+0x344>
   206a4:	cbz	x16, 206b0 <mpfr_set4@@Base+0x344>
   206a8:	mov	w21, #0x1                   	// #1
   206ac:	b	20498 <mpfr_set4@@Base+0x12c>
   206b0:	mov	w21, #0x1                   	// #1
   206b4:	cbnz	x17, 20498 <mpfr_set4@@Base+0x12c>
   206b8:	sub	x18, x14, x12
   206bc:	cbz	x18, 20498 <mpfr_set4@@Base+0x12c>
   206c0:	sub	x17, x14, x10
   206c4:	sub	x18, x17, #0x2
   206c8:	mov	w21, #0x1                   	// #1
   206cc:	ldr	x17, [x15, x18, lsl #3]
   206d0:	subs	x18, x18, #0x1
   206d4:	cset	w0, cs  // cs = hs, nlast
   206d8:	cbnz	x17, 20498 <mpfr_set4@@Base+0x12c>
   206dc:	tbnz	w0, #0, 206cc <mpfr_set4@@Base+0x360>
   206e0:	b	20498 <mpfr_set4@@Base+0x12c>

00000000000206e4 <mpfr_set@@Base>:
   206e4:	ldr	w3, [x1, #8]
   206e8:	b	c6f0 <mpfr_set4@plt>

00000000000206ec <mpfr_abs@@Base>:
   206ec:	mov	w3, #0x1                   	// #1
   206f0:	b	c6f0 <mpfr_set4@plt>

00000000000206f4 <mpfr_set_1_2@@Base>:
   206f4:	stp	x29, x30, [sp, #-64]!
   206f8:	stp	x24, x23, [sp, #16]
   206fc:	stp	x22, x21, [sp, #32]
   20700:	stp	x20, x19, [sp, #48]
   20704:	ldr	x8, [x1, #16]
   20708:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2070c:	mov	w20, w3
   20710:	mov	w21, w2
   20714:	mov	x22, x1
   20718:	cmp	x8, x9
   2071c:	mov	x19, x0
   20720:	mov	x29, sp
   20724:	b.le	20920 <mpfr_set_1_2@@Base+0x22c>
   20728:	ldr	x24, [x19]
   2072c:	cmp	x24, #0x3f
   20730:	b.gt	20778 <mpfr_set_1_2@@Base+0x84>
   20734:	ldr	x11, [x22]
   20738:	mov	w9, #0x40                  	// #64
   2073c:	ldr	x8, [x19, #24]
   20740:	ldr	x10, [x22, #24]
   20744:	sub	x9, x9, x24
   20748:	mov	w12, #0x1                   	// #1
   2074c:	lsl	x9, x12, x9
   20750:	cmp	x11, #0x40
   20754:	sub	x12, x9, #0x1
   20758:	b.gt	207d4 <mpfr_set_1_2@@Base+0xe0>
   2075c:	ldr	x11, [x10]
   20760:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   20764:	lsr	x10, x10, x24
   20768:	and	x10, x11, x10
   2076c:	and	x12, x11, x12
   20770:	eor	x12, x12, x10
   20774:	b	207f0 <mpfr_set_1_2@@Base+0xfc>
   20778:	ldr	w3, [x22, #8]
   2077c:	mov	x0, x19
   20780:	mov	x1, x22
   20784:	mov	w2, w21
   20788:	bl	c6f0 <mpfr_set4@plt>
   2078c:	mov	w23, w0
   20790:	cbnz	w21, 207c8 <mpfr_set_1_2@@Base+0xd4>
   20794:	mul	w8, w23, w20
   20798:	cmp	w8, #0x1
   2079c:	b.lt	207c8 <mpfr_set_1_2@@Base+0xd4>  // b.tstop
   207a0:	mov	x0, x22
   207a4:	bl	c9e0 <mpfr_min_prec@plt>
   207a8:	add	x8, x24, #0x1
   207ac:	cmp	x0, x8
   207b0:	b.ne	207c8 <mpfr_set_1_2@@Base+0xd4>  // b.any
   207b4:	mov	x0, x19
   207b8:	cmp	w20, #0x1
   207bc:	b.lt	20900 <mpfr_set_1_2@@Base+0x20c>  // b.tstop
   207c0:	bl	be80 <mpfr_nextbelow@plt>
   207c4:	b	20904 <mpfr_set_1_2@@Base+0x210>
   207c8:	cmp	w23, #0x0
   207cc:	csel	w2, w20, w23, eq  // eq = none
   207d0:	b	20908 <mpfr_set_1_2@@Base+0x214>
   207d4:	ldp	x14, x11, [x10]
   207d8:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   207dc:	lsr	x10, x13, x24
   207e0:	and	x10, x11, x10
   207e4:	and	x12, x11, x12
   207e8:	eor	x12, x12, x10
   207ec:	orr	x12, x12, x14
   207f0:	neg	x13, x9
   207f4:	and	x11, x11, x13
   207f8:	str	x11, [x8]
   207fc:	ldr	w2, [x22, #8]
   20800:	str	w2, [x19, #8]
   20804:	ldr	x13, [x22, #16]
   20808:	mul	w11, w2, w20
   2080c:	cmp	w11, #0x1
   20810:	str	x13, [x19, #16]
   20814:	b.lt	20838 <mpfr_set_1_2@@Base+0x144>  // b.tstop
   20818:	cmp	x10, #0x0
   2081c:	cset	w13, ne  // ne = any
   20820:	cmp	x12, #0x0
   20824:	cset	w14, eq  // eq = none
   20828:	tst	w14, w13
   2082c:	csinc	x12, x12, xzr, eq  // eq = none
   20830:	csel	x10, xzr, x10, ne  // ne = any
   20834:	b	20840 <mpfr_set_1_2@@Base+0x14c>
   20838:	sxtw	x13, w20
   2083c:	orr	x12, x12, x13
   20840:	orr	x13, x10, x12
   20844:	cbz	x13, 20898 <mpfr_set_1_2@@Base+0x1a4>
   20848:	cmp	w21, #0x1
   2084c:	b.eq	208d4 <mpfr_set_1_2@@Base+0x1e0>  // b.none
   20850:	cbnz	w21, 208c8 <mpfr_set_1_2@@Base+0x1d4>
   20854:	cbz	x10, 208d4 <mpfr_set_1_2@@Base+0x1e0>
   20858:	cbnz	x12, 20868 <mpfr_set_1_2@@Base+0x174>
   2085c:	ldr	x10, [x8]
   20860:	tst	x10, x9
   20864:	b.eq	208d4 <mpfr_set_1_2@@Base+0x1e0>  // b.none
   20868:	ldr	x10, [x8]
   2086c:	adds	x9, x10, x9
   20870:	str	x9, [x8]
   20874:	b.eq	2093c <mpfr_set_1_2@@Base+0x248>  // b.none
   20878:	cbz	w2, 20908 <mpfr_set_1_2@@Base+0x214>
   2087c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20880:	ldr	x1, [x0, #2656]
   20884:	add	x0, x0, #0xa60
   20888:	blr	x1
   2088c:	mrs	x8, tpidr_el0
   20890:	ldr	w9, [x8, x0]
   20894:	b	208f4 <mpfr_set_1_2@@Base+0x200>
   20898:	mov	w2, wzr
   2089c:	cbz	w20, 20908 <mpfr_set_1_2@@Base+0x214>
   208a0:	cmp	w11, #0x1
   208a4:	b.lt	20908 <mpfr_set_1_2@@Base+0x214>  // b.tstop
   208a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   208ac:	ldr	x1, [x0, #2656]
   208b0:	add	x0, x0, #0xa60
   208b4:	blr	x1
   208b8:	mrs	x8, tpidr_el0
   208bc:	ldr	w9, [x8, x0]
   208c0:	mov	w2, w20
   208c4:	b	208f4 <mpfr_set_1_2@@Base+0x200>
   208c8:	add	w10, w21, w2, lsr #31
   208cc:	cmp	w10, #0x3
   208d0:	b.ne	20868 <mpfr_set_1_2@@Base+0x174>  // b.any
   208d4:	cbz	w2, 20908 <mpfr_set_1_2@@Base+0x214>
   208d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   208dc:	ldr	x1, [x0, #2656]
   208e0:	add	x0, x0, #0xa60
   208e4:	blr	x1
   208e8:	mrs	x8, tpidr_el0
   208ec:	ldr	w9, [x8, x0]
   208f0:	neg	w2, w2
   208f4:	orr	w9, w9, #0x8
   208f8:	str	w9, [x8, x0]
   208fc:	b	20908 <mpfr_set_1_2@@Base+0x214>
   20900:	bl	c1c0 <mpfr_nextabove@plt>
   20904:	neg	w2, w20
   20908:	ldp	x20, x19, [sp, #48]
   2090c:	ldp	x22, x21, [sp, #32]
   20910:	ldp	x24, x23, [sp, #16]
   20914:	mov	w0, w2
   20918:	ldp	x29, x30, [sp], #64
   2091c:	ret
   20920:	ldr	w3, [x22, #8]
   20924:	mov	x0, x19
   20928:	mov	x1, x22
   2092c:	mov	w2, w21
   20930:	bl	c6f0 <mpfr_set4@plt>
   20934:	mov	w2, w20
   20938:	b	20908 <mpfr_set_1_2@@Base+0x214>
   2093c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   20940:	str	x9, [x8]
   20944:	ldr	x8, [x19, #16]
   20948:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2094c:	ldr	x1, [x0, #2624]
   20950:	add	x0, x0, #0xa40
   20954:	blr	x1
   20958:	mrs	x9, tpidr_el0
   2095c:	ldr	x9, [x9, x0]
   20960:	cmp	x8, x9
   20964:	b.ge	20978 <mpfr_set_1_2@@Base+0x284>  // b.tcont
   20968:	add	x8, x8, #0x1
   2096c:	str	x8, [x19, #16]
   20970:	cbnz	w2, 2087c <mpfr_set_1_2@@Base+0x188>
   20974:	b	20908 <mpfr_set_1_2@@Base+0x214>
   20978:	mov	x0, x19
   2097c:	mov	w1, w21
   20980:	ldp	x20, x19, [sp, #48]
   20984:	ldp	x22, x21, [sp, #32]
   20988:	ldp	x24, x23, [sp, #16]
   2098c:	ldp	x29, x30, [sp], #64
   20990:	b	bff0 <mpfr_overflow@plt>

0000000000020994 <mpfr_setmax@@Base>:
   20994:	stp	x29, x30, [sp, #-16]!
   20998:	ldr	x10, [x0]
   2099c:	ldr	x8, [x0, #24]
   209a0:	mov	x11, #0xffffffffffffffff    	// #-1
   209a4:	mov	x29, sp
   209a8:	sub	x9, x10, #0x1
   209ac:	add	x12, x10, #0x3e
   209b0:	cmp	x9, #0x0
   209b4:	csel	x9, x12, x9, lt  // lt = tstop
   209b8:	asr	x9, x9, #6
   209bc:	lsl	w12, w9, #6
   209c0:	sub	w12, w12, w10
   209c4:	lsl	x11, x11, x12
   209c8:	cmp	x10, #0x41
   209cc:	str	x1, [x0, #16]
   209d0:	str	x11, [x8]
   209d4:	b.lt	209f0 <mpfr_setmax@@Base+0x5c>  // b.tstop
   209d8:	cmp	x9, #0x1
   209dc:	add	x0, x8, #0x8
   209e0:	csinc	x8, x9, xzr, gt
   209e4:	lsl	x2, x8, #3
   209e8:	mov	w1, #0xff                  	// #255
   209ec:	bl	c1b0 <memset@plt>
   209f0:	ldp	x29, x30, [sp], #16
   209f4:	ret

00000000000209f8 <mpfr_setmin@@Base>:
   209f8:	ldr	x8, [x0]
   209fc:	str	x1, [x0, #16]
   20a00:	ldr	x0, [x0, #24]
   20a04:	mov	w1, wzr
   20a08:	sub	x9, x8, #0x1
   20a0c:	add	x8, x8, #0x3e
   20a10:	cmp	x9, #0x0
   20a14:	csel	x8, x8, x9, lt  // lt = tstop
   20a18:	asr	x8, x8, #6
   20a1c:	lsl	x2, x8, #3
   20a20:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   20a24:	str	x9, [x0, x8, lsl #3]
   20a28:	b	c1b0 <memset@plt>

0000000000020a2c <mpfr_set_d@@Base>:
   20a2c:	sub	sp, sp, #0x70
   20a30:	stp	x20, x19, [sp, #96]
   20a34:	fcmp	d0, d0
   20a38:	mov	x19, x0
   20a3c:	stp	x29, x30, [sp, #48]
   20a40:	stp	x24, x23, [sp, #64]
   20a44:	stp	x22, x21, [sp, #80]
   20a48:	add	x29, sp, #0x30
   20a4c:	b.vs	20bc4 <mpfr_set_d@@Base+0x198>
   20a50:	fcmp	d0, #0.0
   20a54:	b.eq	20bf8 <mpfr_set_d@@Base+0x1cc>  // b.none
   20a58:	mov	x8, #0x7fefffffffffffff    	// #9218868437227405311
   20a5c:	fmov	d1, x8
   20a60:	fcmp	d0, d1
   20a64:	b.gt	20c14 <mpfr_set_d@@Base+0x1e8>
   20a68:	mov	x8, #0xffefffffffffffff    	// #-4503599627370497
   20a6c:	fmov	d1, x8
   20a70:	fcmp	d0, d1
   20a74:	b.mi	20c14 <mpfr_set_d@@Base+0x1e8>  // b.first
   20a78:	mov	w20, w1
   20a7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20a80:	ldr	x1, [x0, #2656]
   20a84:	add	x0, x0, #0xa60
   20a88:	blr	x1
   20a8c:	mrs	x21, tpidr_el0
   20a90:	ldr	w22, [x21, x0]
   20a94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20a98:	ldr	x1, [x0, #2592]
   20a9c:	add	x0, x0, #0xa20
   20aa0:	blr	x1
   20aa4:	ldr	x23, [x21, x0]
   20aa8:	mov	x8, x0
   20aac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20ab0:	ldr	x1, [x0, #2624]
   20ab4:	add	x0, x0, #0xa40
   20ab8:	blr	x1
   20abc:	ldr	x24, [x21, x0]
   20ac0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   20ac4:	str	x9, [x21, x8]
   20ac8:	fmov	x8, d0
   20acc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   20ad0:	add	x11, sp, #0x8
   20ad4:	mov	w12, #0x35                  	// #53
   20ad8:	ubfx	x9, x8, #52, #11
   20adc:	lsl	x8, x8, #11
   20ae0:	str	x10, [x21, x0]
   20ae4:	str	x11, [sp, #40]
   20ae8:	str	x12, [sp, #16]
   20aec:	cbz	w9, 20afc <mpfr_set_d@@Base+0xd0>
   20af0:	orr	x8, x8, #0x8000000000000000
   20af4:	sub	w9, w9, #0x3fe
   20af8:	b	20b10 <mpfr_set_d@@Base+0xe4>
   20afc:	and	x8, x8, #0x7ffffffffffff800
   20b00:	mov	w9, #0xfffffc03            	// #-1021
   20b04:	clz	x10, x8
   20b08:	lsl	x8, x8, x10
   20b0c:	sub	w9, w9, w10
   20b10:	str	x8, [sp, #8]
   20b14:	sxtw	x8, w9
   20b18:	fcmp	d0, #0.0
   20b1c:	mov	w9, #0xffffffff            	// #-1
   20b20:	csinc	w3, w9, wzr, mi  // mi = first
   20b24:	add	x1, sp, #0x10
   20b28:	mov	x0, x19
   20b2c:	mov	w2, w20
   20b30:	str	x8, [sp, #32]
   20b34:	bl	c6f0 <mpfr_set4@plt>
   20b38:	mov	w8, w0
   20b3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20b40:	ldr	x1, [x0, #2656]
   20b44:	add	x0, x0, #0xa60
   20b48:	blr	x1
   20b4c:	str	w22, [x21, x0]
   20b50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20b54:	ldr	x1, [x0, #2592]
   20b58:	add	x0, x0, #0xa20
   20b5c:	blr	x1
   20b60:	str	x23, [x21, x0]
   20b64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20b68:	ldr	x1, [x0, #2624]
   20b6c:	add	x0, x0, #0xa40
   20b70:	blr	x1
   20b74:	str	x24, [x21, x0]
   20b78:	ldr	x9, [x19, #16]
   20b7c:	cmp	x9, x24
   20b80:	b.gt	20c34 <mpfr_set_d@@Base+0x208>
   20b84:	cmp	x9, x23
   20b88:	b.lt	20c34 <mpfr_set_d@@Base+0x208>  // b.tstop
   20b8c:	cbz	w8, 20ba8 <mpfr_set_d@@Base+0x17c>
   20b90:	orr	w9, w22, #0x8
   20b94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20b98:	ldr	x1, [x0, #2656]
   20b9c:	add	x0, x0, #0xa60
   20ba0:	blr	x1
   20ba4:	str	w9, [x21, x0]
   20ba8:	ldp	x20, x19, [sp, #96]
   20bac:	ldp	x22, x21, [sp, #80]
   20bb0:	ldp	x24, x23, [sp, #64]
   20bb4:	ldp	x29, x30, [sp, #48]
   20bb8:	mov	w0, w8
   20bbc:	add	sp, sp, #0x70
   20bc0:	ret
   20bc4:	mov	x8, #0x2                   	// #2
   20bc8:	movk	x8, #0x8000, lsl #48
   20bcc:	str	x8, [x19, #16]
   20bd0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20bd4:	ldr	x1, [x0, #2656]
   20bd8:	add	x0, x0, #0xa60
   20bdc:	blr	x1
   20be0:	mrs	x9, tpidr_el0
   20be4:	ldr	w10, [x9, x0]
   20be8:	mov	w8, wzr
   20bec:	orr	w10, w10, #0x4
   20bf0:	str	w10, [x9, x0]
   20bf4:	b	20ba8 <mpfr_set_d@@Base+0x17c>
   20bf8:	fmov	x10, d0
   20bfc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   20c00:	cmp	x10, #0x0
   20c04:	mov	w10, #0xffffffff            	// #-1
   20c08:	str	x9, [x19, #16]
   20c0c:	cneg	w9, w10, ge  // ge = tcont
   20c10:	b	20c28 <mpfr_set_d@@Base+0x1fc>
   20c14:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   20c18:	fcmp	d0, #0.0
   20c1c:	mov	w10, #0xffffffff            	// #-1
   20c20:	str	x9, [x19, #16]
   20c24:	csinc	w9, w10, wzr, le
   20c28:	mov	w8, wzr
   20c2c:	str	w9, [x19, #8]
   20c30:	b	20ba8 <mpfr_set_d@@Base+0x17c>
   20c34:	mov	x0, x19
   20c38:	mov	w1, w8
   20c3c:	mov	w2, w20
   20c40:	bl	cb80 <mpfr_check_range@plt>
   20c44:	mov	w8, w0
   20c48:	b	20ba8 <mpfr_set_d@@Base+0x17c>

0000000000020c4c <mpfr_set_default_prec@@Base>:
   20c4c:	stp	x29, x30, [sp, #-32]!
   20c50:	mov	x9, #0xfffffffffffffeff    	// #-257
   20c54:	sub	x8, x0, #0x1
   20c58:	movk	x9, #0x7fff, lsl #48
   20c5c:	str	x19, [sp, #16]
   20c60:	mov	x19, x0
   20c64:	cmp	x8, x9
   20c68:	mov	x29, sp
   20c6c:	b.cs	20c94 <mpfr_set_default_prec@@Base+0x48>  // b.hs, b.nlast
   20c70:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20c74:	ldr	x1, [x0, #2608]
   20c78:	add	x0, x0, #0xa30
   20c7c:	blr	x1
   20c80:	mrs	x8, tpidr_el0
   20c84:	str	x19, [x8, x0]
   20c88:	ldr	x19, [sp, #16]
   20c8c:	ldp	x29, x30, [sp], #32
   20c90:	ret
   20c94:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   20c98:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   20c9c:	add	x0, x0, #0xeaa
   20ca0:	add	x2, x2, #0xe52
   20ca4:	mov	w1, #0x20                  	// #32
   20ca8:	bl	cb90 <mpfr_assert_fail@plt>
   20cac:	b	20c70 <mpfr_set_default_prec@@Base+0x24>

0000000000020cb0 <mpfr_get_default_prec@@Base>:
   20cb0:	stp	x29, x30, [sp, #-16]!
   20cb4:	mov	x29, sp
   20cb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20cbc:	ldr	x1, [x0, #2608]
   20cc0:	add	x0, x0, #0xa30
   20cc4:	blr	x1
   20cc8:	mrs	x8, tpidr_el0
   20ccc:	ldr	x0, [x8, x0]
   20cd0:	ldp	x29, x30, [sp], #16
   20cd4:	ret

0000000000020cd8 <mpfr_set_exp@@Base>:
   20cd8:	stp	x29, x30, [sp, #-16]!
   20cdc:	ldr	x13, [x0, #16]
   20ce0:	mov	x29, sp
   20ce4:	mov	x8, x0
   20ce8:	mov	x9, x1
   20cec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20cf0:	ldr	x1, [x0, #2592]
   20cf4:	add	x0, x0, #0xa20
   20cf8:	blr	x1
   20cfc:	mrs	x11, tpidr_el0
   20d00:	ldr	x12, [x11, x0]
   20d04:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20d08:	ldr	x1, [x0, #2624]
   20d0c:	add	x0, x0, #0xa40
   20d10:	blr	x1
   20d14:	mov	x14, #0x4                   	// #4
   20d18:	movk	x14, #0x8000, lsl #48
   20d1c:	mov	x10, x0
   20d20:	cmp	x13, x14
   20d24:	mov	w0, #0x1                   	// #1
   20d28:	b.lt	20d48 <mpfr_set_exp@@Base+0x70>  // b.tstop
   20d2c:	cmp	x12, x9
   20d30:	b.gt	20d48 <mpfr_set_exp@@Base+0x70>
   20d34:	ldr	x10, [x11, x10]
   20d38:	cmp	x10, x9
   20d3c:	b.lt	20d48 <mpfr_set_exp@@Base+0x70>  // b.tstop
   20d40:	mov	w0, wzr
   20d44:	str	x9, [x8, #16]
   20d48:	ldp	x29, x30, [sp], #16
   20d4c:	ret

0000000000020d50 <mpfr_set_default_rounding_mode@@Base>:
   20d50:	cmp	w0, #0x5
   20d54:	b.hi	20d80 <mpfr_set_default_rounding_mode@@Base+0x30>  // b.pmore
   20d58:	stp	x29, x30, [sp, #-16]!
   20d5c:	mov	x29, sp
   20d60:	mov	w8, w0
   20d64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20d68:	ldr	x1, [x0, #2720]
   20d6c:	add	x0, x0, #0xaa0
   20d70:	blr	x1
   20d74:	mrs	x9, tpidr_el0
   20d78:	str	w8, [x9, x0]
   20d7c:	ldp	x29, x30, [sp], #16
   20d80:	ret

0000000000020d84 <mpfr_get_default_rounding_mode@@Base>:
   20d84:	stp	x29, x30, [sp, #-16]!
   20d88:	mov	x29, sp
   20d8c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20d90:	ldr	x1, [x0, #2720]
   20d94:	add	x0, x0, #0xaa0
   20d98:	blr	x1
   20d9c:	mrs	x8, tpidr_el0
   20da0:	ldr	w0, [x8, x0]
   20da4:	ldp	x29, x30, [sp], #16
   20da8:	ret

0000000000020dac <mpfr_set_f@@Base>:
   20dac:	stp	x29, x30, [sp, #-96]!
   20db0:	stp	x28, x27, [sp, #16]
   20db4:	stp	x26, x25, [sp, #32]
   20db8:	stp	x24, x23, [sp, #48]
   20dbc:	stp	x22, x21, [sp, #64]
   20dc0:	stp	x20, x19, [sp, #80]
   20dc4:	mov	x29, sp
   20dc8:	sub	sp, sp, #0x20
   20dcc:	ldr	w8, [x1, #4]
   20dd0:	mov	x20, x0
   20dd4:	cmp	w8, #0x0
   20dd8:	cneg	w24, w8, mi  // mi = first
   20ddc:	cbz	w24, 20e74 <mpfr_set_f@@Base+0xc8>
   20de0:	ldr	w9, [x20, #8]
   20de4:	mov	w19, w2
   20de8:	mov	x21, x1
   20dec:	mul	w8, w9, w8
   20df0:	tbz	w8, #31, 20dfc <mpfr_set_f@@Base+0x50>
   20df4:	neg	w8, w9
   20df8:	str	w8, [x20, #8]
   20dfc:	ldr	x25, [x21, #16]
   20e00:	ldr	x8, [x20]
   20e04:	ldr	x23, [x20, #24]
   20e08:	add	x10, x25, x24, lsl #3
   20e0c:	sub	x9, x8, #0x1
   20e10:	ldur	x10, [x10, #-8]
   20e14:	add	x8, x8, #0x3e
   20e18:	cmp	x9, #0x0
   20e1c:	csel	x8, x8, x9, lt  // lt = tstop
   20e20:	asr	x26, x8, #6
   20e24:	cmp	x26, x24
   20e28:	clz	x22, x10
   20e2c:	b.ge	20e8c <mpfr_set_f@@Base+0xe0>  // b.tcont
   20e30:	lsl	x8, x24, #6
   20e34:	cmp	w24, #0x800
   20e38:	lsl	x28, x24, #3
   20e3c:	stp	x8, xzr, [x29, #-24]
   20e40:	b.hi	20ee4 <mpfr_set_f@@Base+0x138>  // b.pmore
   20e44:	add	x9, x28, #0xf
   20e48:	mov	x8, sp
   20e4c:	and	x9, x9, #0xffffffff0
   20e50:	sub	x27, x8, x9
   20e54:	mov	sp, x27
   20e58:	cbz	w22, 20ef8 <mpfr_set_f@@Base+0x14c>
   20e5c:	mov	x0, x27
   20e60:	mov	x1, x25
   20e64:	mov	x2, x24
   20e68:	mov	w3, w22
   20e6c:	bl	bd70 <__gmpn_lshift@plt>
   20e70:	b	20f10 <mpfr_set_f@@Base+0x164>
   20e74:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   20e78:	mov	w10, #0x1                   	// #1
   20e7c:	mov	w8, wzr
   20e80:	str	x9, [x20, #16]
   20e84:	str	w10, [x20, #8]
   20e88:	b	20ff4 <mpfr_set_f@@Base+0x248>
   20e8c:	add	x26, x26, #0x1
   20e90:	add	x8, x23, x26, lsl #3
   20e94:	sub	x0, x8, x24, lsl #3
   20e98:	cbz	w22, 20eb0 <mpfr_set_f@@Base+0x104>
   20e9c:	mov	x1, x25
   20ea0:	mov	x2, x24
   20ea4:	mov	w3, w22
   20ea8:	bl	bd70 <__gmpn_lshift@plt>
   20eac:	b	20ec4 <mpfr_set_f@@Base+0x118>
   20eb0:	cmp	x0, x25
   20eb4:	b.eq	20ec4 <mpfr_set_f@@Base+0x118>  // b.none
   20eb8:	lsl	x2, x24, #3
   20ebc:	mov	x1, x25
   20ec0:	bl	bad0 <memcpy@plt>
   20ec4:	sub	x8, x26, x24
   20ec8:	lsl	x2, x8, #3
   20ecc:	mov	x0, x23
   20ed0:	mov	w1, wzr
   20ed4:	bl	c1b0 <memset@plt>
   20ed8:	mov	x8, xzr
   20edc:	stur	wzr, [x29, #-4]
   20ee0:	b	20f48 <mpfr_set_f@@Base+0x19c>
   20ee4:	sub	x0, x29, #0x10
   20ee8:	mov	x1, x28
   20eec:	bl	be70 <mpfr_tmp_allocate@plt>
   20ef0:	mov	x27, x0
   20ef4:	cbnz	w22, 20e5c <mpfr_set_f@@Base+0xb0>
   20ef8:	cmp	x25, x27
   20efc:	b.eq	20f10 <mpfr_set_f@@Base+0x164>  // b.none
   20f00:	mov	x0, x27
   20f04:	mov	x1, x25
   20f08:	mov	x2, x28
   20f0c:	bl	bad0 <memcpy@plt>
   20f10:	ldr	w8, [x21, #4]
   20f14:	ldr	x4, [x20]
   20f18:	ldur	x2, [x29, #-24]
   20f1c:	sub	x6, x29, #0x4
   20f20:	lsr	w3, w8, #31
   20f24:	mov	x0, x23
   20f28:	mov	x1, x27
   20f2c:	mov	w5, w19
   20f30:	bl	ca70 <mpfr_round_raw@plt>
   20f34:	mov	w24, w0
   20f38:	cbnz	w0, 21018 <mpfr_set_f@@Base+0x26c>
   20f3c:	ldur	x0, [x29, #-16]
   20f40:	cbnz	x0, 21024 <mpfr_set_f@@Base+0x278>
   20f44:	sxtw	x8, w24
   20f48:	ldr	x11, [x21, #8]
   20f4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20f50:	ldr	x1, [x0, #2624]
   20f54:	add	x0, x0, #0xa40
   20f58:	blr	x1
   20f5c:	mrs	x9, tpidr_el0
   20f60:	ldr	x10, [x9, x0]
   20f64:	sub	x12, x10, #0x1
   20f68:	add	x13, x10, #0x3e
   20f6c:	cmp	x12, #0x0
   20f70:	csel	x12, x13, x12, lt  // lt = tstop
   20f74:	asr	x12, x12, #6
   20f78:	add	x12, x12, #0x1
   20f7c:	cmp	x11, x12
   20f80:	b.le	20f9c <mpfr_set_f@@Base+0x1f0>
   20f84:	ldr	w2, [x20, #8]
   20f88:	mov	x0, x20
   20f8c:	mov	w1, w19
   20f90:	bl	bff0 <mpfr_overflow@plt>
   20f94:	mov	w8, w0
   20f98:	b	20ff4 <mpfr_set_f@@Base+0x248>
   20f9c:	lsl	x11, x11, #6
   20fa0:	sub	x11, x11, x22
   20fa4:	add	x11, x11, x8
   20fa8:	str	x11, [x20, #16]
   20fac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20fb0:	ldr	x1, [x0, #2592]
   20fb4:	add	x0, x0, #0xa20
   20fb8:	blr	x1
   20fbc:	ldur	w8, [x29, #-4]
   20fc0:	cmp	x11, x10
   20fc4:	b.gt	2102c <mpfr_set_f@@Base+0x280>
   20fc8:	ldr	x10, [x9, x0]
   20fcc:	cmp	x11, x10
   20fd0:	b.lt	2102c <mpfr_set_f@@Base+0x280>  // b.tstop
   20fd4:	cbz	w8, 20ff4 <mpfr_set_f@@Base+0x248>
   20fd8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   20fdc:	ldr	x1, [x0, #2656]
   20fe0:	add	x0, x0, #0xa60
   20fe4:	blr	x1
   20fe8:	ldr	w10, [x9, x0]
   20fec:	orr	w10, w10, #0x8
   20ff0:	str	w10, [x9, x0]
   20ff4:	mov	w0, w8
   20ff8:	mov	sp, x29
   20ffc:	ldp	x20, x19, [sp, #80]
   21000:	ldp	x22, x21, [sp, #64]
   21004:	ldp	x24, x23, [sp, #48]
   21008:	ldp	x26, x25, [sp, #32]
   2100c:	ldp	x28, x27, [sp, #16]
   21010:	ldp	x29, x30, [sp], #96
   21014:	ret
   21018:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   2101c:	str	x8, [x23, x26, lsl #3]
   21020:	b	20f3c <mpfr_set_f@@Base+0x190>
   21024:	bl	c460 <mpfr_tmp_free@plt>
   21028:	b	20f44 <mpfr_set_f@@Base+0x198>
   2102c:	mov	x0, x20
   21030:	mov	w1, w8
   21034:	mov	w2, w19
   21038:	bl	cb80 <mpfr_check_range@plt>
   2103c:	b	20f94 <mpfr_set_f@@Base+0x1e8>

0000000000021040 <mpfr_set_prec_raw@@Base>:
   21040:	stp	x29, x30, [sp, #-32]!
   21044:	mov	x9, #0xfffffffffffffeff    	// #-257
   21048:	sub	x8, x1, #0x1
   2104c:	movk	x9, #0x7fff, lsl #48
   21050:	stp	x20, x19, [sp, #16]
   21054:	mov	x19, x1
   21058:	cmp	x8, x9
   2105c:	mov	x20, x0
   21060:	mov	x29, sp
   21064:	b.cs	21088 <mpfr_set_prec_raw@@Base+0x48>  // b.hs, b.nlast
   21068:	ldr	x8, [x20, #24]
   2106c:	ldur	x8, [x8, #-8]
   21070:	cmp	x19, x8, lsl #6
   21074:	b.gt	210a4 <mpfr_set_prec_raw@@Base+0x64>
   21078:	str	x19, [x20]
   2107c:	ldp	x20, x19, [sp, #16]
   21080:	ldp	x29, x30, [sp], #32
   21084:	ret
   21088:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   2108c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   21090:	add	x0, x0, #0xeb9
   21094:	add	x2, x2, #0xec7
   21098:	mov	w1, #0x1c                  	// #28
   2109c:	bl	cb90 <mpfr_assert_fail@plt>
   210a0:	b	21068 <mpfr_set_prec_raw@@Base+0x28>
   210a4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   210a8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   210ac:	add	x0, x0, #0xeb9
   210b0:	add	x2, x2, #0xf0f
   210b4:	mov	w1, #0x1d                  	// #29
   210b8:	bl	cb90 <mpfr_assert_fail@plt>
   210bc:	b	21078 <mpfr_set_prec_raw@@Base+0x38>

00000000000210c0 <mpfr_set_prec@@Base>:
   210c0:	stp	x29, x30, [sp, #-48]!
   210c4:	stp	x22, x21, [sp, #16]
   210c8:	mov	x21, #0xfffffffffffffeff    	// #-257
   210cc:	movk	x21, #0x7fff, lsl #48
   210d0:	sub	x22, x1, #0x1
   210d4:	stp	x20, x19, [sp, #32]
   210d8:	mov	x19, x1
   210dc:	cmp	x22, x21
   210e0:	mov	x20, x0
   210e4:	mov	x29, sp
   210e8:	b.cs	2114c <mpfr_set_prec@@Base+0x8c>  // b.hs, b.nlast
   210ec:	ldr	x0, [x20, #24]
   210f0:	add	x9, x22, #0x3f
   210f4:	cmp	x22, #0x0
   210f8:	csel	x9, x9, x22, lt  // lt = tstop
   210fc:	ldr	x8, [x0, #-8]!
   21100:	asr	x9, x9, #6
   21104:	cmp	x9, x8
   21108:	b.lt	21130 <mpfr_set_prec@@Base+0x70>  // b.tstop
   2110c:	add	x22, x9, #0x1
   21110:	lsl	x8, x8, #3
   21114:	add	x1, x8, #0x8
   21118:	lsl	x8, x22, #3
   2111c:	add	x2, x8, #0x8
   21120:	bl	c260 <mpfr_reallocate_func@plt>
   21124:	add	x8, x0, #0x8
   21128:	str	x8, [x20, #24]
   2112c:	str	x22, [x0]
   21130:	add	x8, x21, #0x103
   21134:	str	x19, [x20]
   21138:	str	x8, [x20, #16]
   2113c:	ldp	x20, x19, [sp, #32]
   21140:	ldp	x22, x21, [sp, #16]
   21144:	ldp	x29, x30, [sp], #48
   21148:	ret
   2114c:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   21150:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   21154:	add	x0, x0, #0xf6b
   21158:	add	x2, x2, #0xec7
   2115c:	mov	w1, #0x1f                  	// #31
   21160:	bl	cb90 <mpfr_assert_fail@plt>
   21164:	b	210ec <mpfr_set_prec@@Base+0x2c>

0000000000021168 <mpfr_get_prec@@Base>:
   21168:	ldr	x0, [x0]
   2116c:	ret

0000000000021170 <mpfr_set_q@@Base>:
   21170:	sub	sp, sp, #0xb0
   21174:	stp	x29, x30, [sp, #80]
   21178:	stp	x28, x27, [sp, #96]
   2117c:	stp	x26, x25, [sp, #112]
   21180:	stp	x24, x23, [sp, #128]
   21184:	stp	x22, x21, [sp, #144]
   21188:	stp	x20, x19, [sp, #160]
   2118c:	ldr	w9, [x1, #4]
   21190:	ldr	w10, [x1, #20]
   21194:	mov	x19, x0
   21198:	add	x29, sp, #0x50
   2119c:	cbz	w9, 2134c <mpfr_set_q@@Base+0x1dc>
   211a0:	cbz	w10, 21368 <mpfr_set_q@@Base+0x1f8>
   211a4:	mov	w20, w2
   211a8:	mov	x8, x1
   211ac:	add	x21, x1, #0x10
   211b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   211b4:	ldr	x1, [x0, #2656]
   211b8:	add	x0, x0, #0xa60
   211bc:	blr	x1
   211c0:	mrs	x24, tpidr_el0
   211c4:	ldr	w25, [x24, x0]
   211c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   211cc:	ldr	x1, [x0, #2592]
   211d0:	add	x0, x0, #0xa20
   211d4:	blr	x1
   211d8:	ldr	x26, [x24, x0]
   211dc:	mov	x9, x0
   211e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   211e4:	ldr	x1, [x0, #2624]
   211e8:	add	x0, x0, #0xa40
   211ec:	blr	x1
   211f0:	ldr	x27, [x24, x0]
   211f4:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   211f8:	str	x10, [x24, x9]
   211fc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   21200:	str	x9, [x24, x0]
   21204:	sub	x0, x29, #0x20
   21208:	add	x2, sp, #0x8
   2120c:	mov	x1, x8
   21210:	bl	21480 <mpfr_set_q@@Base+0x310>
   21214:	mov	w22, w0
   21218:	add	x0, sp, #0x10
   2121c:	mov	x2, sp
   21220:	mov	x1, x21
   21224:	bl	21480 <mpfr_set_q@@Base+0x310>
   21228:	ldp	x8, x9, [sp]
   2122c:	sub	x28, x9, x8
   21230:	mov	x8, #0x100000000000000     	// #72057594037927936
   21234:	cmp	x28, x8
   21238:	str	x28, [sp, #8]
   2123c:	b.ge	21388 <mpfr_set_q@@Base+0x218>  // b.tcont
   21240:	mov	x8, #0xfeffffffffffffff    	// #-72057594037927937
   21244:	cmp	x28, x8
   21248:	b.le	213d8 <mpfr_set_q@@Base+0x268>
   2124c:	mov	w23, w0
   21250:	sub	x1, x29, #0x20
   21254:	add	x2, sp, #0x10
   21258:	mov	x0, x19
   2125c:	mov	w3, w20
   21260:	bl	c670 <mpfr_div@plt>
   21264:	sxtw	x8, w22
   21268:	sub	x8, x8, w23, sxtw
   2126c:	mov	w21, w0
   21270:	add	x2, x8, x28, lsl #6
   21274:	mov	x0, x19
   21278:	mov	x1, x19
   2127c:	mov	w3, w20
   21280:	bl	bc40 <mpfr_mul_2si@plt>
   21284:	mov	w8, w0
   21288:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2128c:	ldr	x1, [x0, #2656]
   21290:	add	x0, x0, #0xa60
   21294:	blr	x1
   21298:	str	w25, [x24, x0]
   2129c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   212a0:	ldr	x1, [x0, #2592]
   212a4:	add	x0, x0, #0xa20
   212a8:	blr	x1
   212ac:	str	x26, [x24, x0]
   212b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   212b4:	ldr	x1, [x0, #2624]
   212b8:	add	x0, x0, #0xa40
   212bc:	blr	x1
   212c0:	str	x27, [x24, x0]
   212c4:	cbnz	w8, 2142c <mpfr_set_q@@Base+0x2bc>
   212c8:	ldr	x8, [x19, #16]
   212cc:	cmp	x8, x27
   212d0:	b.gt	21434 <mpfr_set_q@@Base+0x2c4>
   212d4:	cmp	x8, x26
   212d8:	b.lt	21434 <mpfr_set_q@@Base+0x2c4>  // b.tstop
   212dc:	cbz	w21, 212f8 <mpfr_set_q@@Base+0x188>
   212e0:	orr	w8, w25, #0x8
   212e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   212e8:	ldr	x1, [x0, #2656]
   212ec:	add	x0, x0, #0xa60
   212f0:	blr	x1
   212f4:	str	w8, [x24, x0]
   212f8:	add	x0, sp, #0x10
   212fc:	bl	c110 <mpfr_clear@plt>
   21300:	sub	x0, x29, #0x20
   21304:	bl	c110 <mpfr_clear@plt>
   21308:	cbz	w21, 21328 <mpfr_set_q@@Base+0x1b8>
   2130c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   21310:	ldr	x1, [x0, #2656]
   21314:	add	x0, x0, #0xa60
   21318:	blr	x1
   2131c:	ldr	w8, [x24, x0]
   21320:	orr	w8, w8, #0x8
   21324:	str	w8, [x24, x0]
   21328:	mov	w0, w21
   2132c:	ldp	x20, x19, [sp, #160]
   21330:	ldp	x22, x21, [sp, #144]
   21334:	ldp	x24, x23, [sp, #128]
   21338:	ldp	x26, x25, [sp, #112]
   2133c:	ldp	x28, x27, [sp, #96]
   21340:	ldp	x29, x30, [sp, #80]
   21344:	add	sp, sp, #0xb0
   21348:	ret
   2134c:	cbz	w10, 2144c <mpfr_set_q@@Base+0x2dc>
   21350:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   21354:	mov	w9, #0x1                   	// #1
   21358:	mov	w21, wzr
   2135c:	str	x8, [x19, #16]
   21360:	str	w9, [x19, #8]
   21364:	b	21328 <mpfr_set_q@@Base+0x1b8>
   21368:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2136c:	cmp	w9, #0x0
   21370:	mov	w9, #0x1                   	// #1
   21374:	str	x8, [x19, #16]
   21378:	cneg	w8, w9, lt  // lt = tstop
   2137c:	mov	w21, wzr
   21380:	str	w8, [x19, #8]
   21384:	b	21328 <mpfr_set_q@@Base+0x1b8>
   21388:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2138c:	ldr	x1, [x0, #2656]
   21390:	add	x0, x0, #0xa60
   21394:	blr	x1
   21398:	str	w25, [x24, x0]
   2139c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   213a0:	ldr	x1, [x0, #2592]
   213a4:	add	x0, x0, #0xa20
   213a8:	blr	x1
   213ac:	str	x26, [x24, x0]
   213b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   213b4:	ldr	x1, [x0, #2624]
   213b8:	add	x0, x0, #0xa40
   213bc:	blr	x1
   213c0:	str	x27, [x24, x0]
   213c4:	ldr	w2, [x19, #8]
   213c8:	mov	x0, x19
   213cc:	mov	w1, w20
   213d0:	bl	bff0 <mpfr_overflow@plt>
   213d4:	b	21444 <mpfr_set_q@@Base+0x2d4>
   213d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   213dc:	ldr	x1, [x0, #2656]
   213e0:	add	x0, x0, #0xa60
   213e4:	blr	x1
   213e8:	str	w25, [x24, x0]
   213ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   213f0:	ldr	x1, [x0, #2592]
   213f4:	add	x0, x0, #0xa20
   213f8:	blr	x1
   213fc:	str	x26, [x24, x0]
   21400:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   21404:	ldr	x1, [x0, #2624]
   21408:	add	x0, x0, #0xa40
   2140c:	blr	x1
   21410:	str	x27, [x24, x0]
   21414:	ldr	w2, [x19, #8]
   21418:	cmp	w20, #0x0
   2141c:	csinc	w1, w20, wzr, ne  // ne = any
   21420:	mov	x0, x19
   21424:	bl	c420 <mpfr_underflow@plt>
   21428:	b	21444 <mpfr_set_q@@Base+0x2d4>
   2142c:	mov	w21, w8
   21430:	b	212f8 <mpfr_set_q@@Base+0x188>
   21434:	mov	x0, x19
   21438:	mov	w1, w21
   2143c:	mov	w2, w20
   21440:	bl	cb80 <mpfr_check_range@plt>
   21444:	mov	w21, w0
   21448:	b	212f8 <mpfr_set_q@@Base+0x188>
   2144c:	mov	x8, #0x2                   	// #2
   21450:	movk	x8, #0x8000, lsl #48
   21454:	str	x8, [x19, #16]
   21458:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2145c:	ldr	x1, [x0, #2656]
   21460:	add	x0, x0, #0xa60
   21464:	blr	x1
   21468:	mrs	x8, tpidr_el0
   2146c:	ldr	w9, [x8, x0]
   21470:	mov	w21, wzr
   21474:	orr	w9, w9, #0x4
   21478:	str	w9, [x8, x0]
   2147c:	b	21328 <mpfr_set_q@@Base+0x1b8>
   21480:	stp	x29, x30, [sp, #-64]!
   21484:	stp	x22, x21, [sp, #32]
   21488:	stp	x20, x19, [sp, #48]
   2148c:	ldr	w8, [x1, #4]
   21490:	ldr	x21, [x1, #8]
   21494:	mov	x20, x1
   21498:	mov	x19, x0
   2149c:	cmp	w8, #0x0
   214a0:	cneg	w22, w8, mi  // mi = first
   214a4:	str	x22, [x2]
   214a8:	ldr	x8, [x21]
   214ac:	str	x23, [sp, #16]
   214b0:	mov	x29, sp
   214b4:	cbnz	x8, 214c4 <mpfr_set_q@@Base+0x354>
   214b8:	ldr	x8, [x21, #8]!
   214bc:	sub	x22, x22, #0x1
   214c0:	cbz	x8, 214b8 <mpfr_set_q@@Base+0x348>
   214c4:	add	x8, x21, x22, lsl #3
   214c8:	ldur	x8, [x8, #-8]
   214cc:	mov	x0, x19
   214d0:	clz	x23, x8
   214d4:	lsl	x8, x22, #6
   214d8:	sub	x8, x8, x23
   214dc:	cmp	x8, #0x1
   214e0:	csinc	x1, x8, xzr, gt
   214e4:	bl	cad0 <mpfr_init2@plt>
   214e8:	ldr	x0, [x19, #24]
   214ec:	cbz	w23, 21530 <mpfr_set_q@@Base+0x3c0>
   214f0:	mov	x1, x21
   214f4:	mov	x2, x22
   214f8:	mov	w3, w23
   214fc:	bl	bd70 <__gmpn_lshift@plt>
   21500:	ldr	w8, [x20, #4]
   21504:	str	xzr, [x19, #16]
   21508:	neg	w0, w23
   2150c:	ldr	x23, [sp, #16]
   21510:	cmp	w8, #0x0
   21514:	cset	w8, ne  // ne = any
   21518:	csinv	w8, w8, wzr, ge  // ge = tcont
   2151c:	str	w8, [x19, #8]
   21520:	ldp	x20, x19, [sp, #48]
   21524:	ldp	x22, x21, [sp, #32]
   21528:	ldp	x29, x30, [sp], #64
   2152c:	ret
   21530:	cmp	x0, x21
   21534:	b.eq	21500 <mpfr_set_q@@Base+0x390>  // b.none
   21538:	lsl	x2, x22, #3
   2153c:	mov	x1, x21
   21540:	bl	bad0 <memcpy@plt>
   21544:	b	21500 <mpfr_set_q@@Base+0x390>

0000000000021548 <mpfr_set_si@@Base>:
   21548:	mov	w3, w2
   2154c:	mov	x2, xzr
   21550:	b	bb40 <mpfr_set_si_2exp@plt>

0000000000021554 <mpfr_set_str@@Base>:
   21554:	sub	sp, sp, #0x20
   21558:	stp	x29, x30, [sp, #16]
   2155c:	ldrb	w8, [x1]
   21560:	add	x29, sp, #0x10
   21564:	cbz	w8, 21594 <mpfr_set_str@@Base+0x40>
   21568:	mov	w4, w3
   2156c:	mov	w3, w2
   21570:	add	x2, sp, #0x8
   21574:	bl	bcc0 <mpfr_strtofr@plt>
   21578:	ldr	x8, [sp, #8]
   2157c:	ldrb	w8, [x8]
   21580:	cmp	w8, #0x0
   21584:	csetm	w0, ne  // ne = any
   21588:	ldp	x29, x30, [sp, #16]
   2158c:	add	sp, sp, #0x20
   21590:	ret
   21594:	mov	w0, #0xffffffff            	// #-1
   21598:	b	21588 <mpfr_set_str@@Base+0x34>

000000000002159c <mpfr_init_set_str@@Base>:
   2159c:	sub	sp, sp, #0x40
   215a0:	stp	x29, x30, [sp, #16]
   215a4:	stp	x22, x21, [sp, #32]
   215a8:	stp	x20, x19, [sp, #48]
   215ac:	add	x29, sp, #0x10
   215b0:	mov	w19, w3
   215b4:	mov	w20, w2
   215b8:	mov	x21, x1
   215bc:	mov	x22, x0
   215c0:	bl	bc80 <mpfr_init@plt>
   215c4:	ldrb	w8, [x21]
   215c8:	cbz	w8, 21608 <mpfr_init_set_str@@Base+0x6c>
   215cc:	add	x2, sp, #0x8
   215d0:	mov	x0, x22
   215d4:	mov	x1, x21
   215d8:	mov	w3, w20
   215dc:	mov	w4, w19
   215e0:	bl	bcc0 <mpfr_strtofr@plt>
   215e4:	ldr	x8, [sp, #8]
   215e8:	ldrb	w8, [x8]
   215ec:	cmp	w8, #0x0
   215f0:	csetm	w0, ne  // ne = any
   215f4:	ldp	x20, x19, [sp, #48]
   215f8:	ldp	x22, x21, [sp, #32]
   215fc:	ldp	x29, x30, [sp, #16]
   21600:	add	sp, sp, #0x40
   21604:	ret
   21608:	mov	w0, #0xffffffff            	// #-1
   2160c:	b	215f4 <mpfr_init_set_str@@Base+0x58>

0000000000021610 <mpfr_set_str_binary@@Base>:
   21610:	stp	x29, x30, [sp, #-16]!
   21614:	ldrb	w8, [x1]
   21618:	mov	x29, sp
   2161c:	cmp	w8, #0x2d
   21620:	b.eq	2165c <mpfr_set_str_binary@@Base+0x4c>  // b.none
   21624:	cmp	w8, #0x4e
   21628:	b.ne	21664 <mpfr_set_str_binary@@Base+0x54>  // b.any
   2162c:	mov	x8, #0x2                   	// #2
   21630:	movk	x8, #0x8000, lsl #48
   21634:	str	x8, [x0, #16]
   21638:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2163c:	ldr	x1, [x0, #2656]
   21640:	add	x0, x0, #0xa60
   21644:	blr	x1
   21648:	mrs	x8, tpidr_el0
   2164c:	ldr	w9, [x8, x0]
   21650:	orr	w9, w9, #0x4
   21654:	str	w9, [x8, x0]
   21658:	b	216ac <mpfr_set_str_binary@@Base+0x9c>
   2165c:	mov	w8, #0x1                   	// #1
   21660:	b	2166c <mpfr_set_str_binary@@Base+0x5c>
   21664:	cmp	w8, #0x2b
   21668:	cset	w8, eq  // eq = none
   2166c:	ldrb	w8, [x1, x8]
   21670:	cmp	w8, #0x49
   21674:	b.ne	21698 <mpfr_set_str_binary@@Base+0x88>  // b.any
   21678:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2167c:	str	x8, [x0, #16]
   21680:	ldrb	w8, [x1]
   21684:	cmp	w8, #0x2d
   21688:	mov	w8, #0xffffffff            	// #-1
   2168c:	cneg	w8, w8, ne  // ne = any
   21690:	str	w8, [x0, #8]
   21694:	b	216ac <mpfr_set_str_binary@@Base+0x9c>
   21698:	mov	w3, #0x2                   	// #2
   2169c:	mov	w4, #0x1                   	// #1
   216a0:	mov	x2, xzr
   216a4:	bl	bcc0 <mpfr_strtofr@plt>
   216a8:	cbnz	w0, 216b4 <mpfr_set_str_binary@@Base+0xa4>
   216ac:	ldp	x29, x30, [sp], #16
   216b0:	ret
   216b4:	adrp	x0, 59000 <mpfr_free_pool@@Base+0x387c>
   216b8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   216bc:	add	x0, x0, #0xf76
   216c0:	add	x2, x2, #0xf84
   216c4:	mov	w1, #0x36                  	// #54
   216c8:	ldp	x29, x30, [sp], #16
   216cc:	b	cb90 <mpfr_assert_fail@plt>

00000000000216d0 <mpfr_set_ui@@Base>:
   216d0:	mov	w3, w2
   216d4:	mov	x2, xzr
   216d8:	b	c640 <mpfr_set_ui_2exp@plt>

00000000000216dc <mpfr_set_z@@Base>:
   216dc:	mov	w3, w2
   216e0:	mov	x2, xzr
   216e4:	b	c540 <mpfr_set_z_2exp@plt>

00000000000216e8 <mpfr_sqrt@@Base>:
   216e8:	stp	x29, x30, [sp, #-96]!
   216ec:	stp	x28, x27, [sp, #16]
   216f0:	stp	x26, x25, [sp, #32]
   216f4:	stp	x24, x23, [sp, #48]
   216f8:	stp	x22, x21, [sp, #64]
   216fc:	stp	x20, x19, [sp, #80]
   21700:	mov	x29, sp
   21704:	sub	sp, sp, #0x80
   21708:	ldr	x9, [x1, #16]
   2170c:	mov	x8, #0x2                   	// #2
   21710:	movk	x8, #0x8000, lsl #48
   21714:	add	x10, x8, #0x2
   21718:	mov	x22, x1
   2171c:	cmp	x9, x10
   21720:	mov	x25, x0
   21724:	b.lt	22298 <mpfr_sqrt@@Base+0xbb0>  // b.tstop
   21728:	ldr	w10, [x22, #8]
   2172c:	tbnz	w10, #31, 222a0 <mpfr_sqrt@@Base+0xbb8>
   21730:	mov	w8, #0x1                   	// #1
   21734:	str	w8, [x25, #8]
   21738:	ldr	x20, [x25]
   2173c:	ldr	x8, [x22]
   21740:	mov	w3, w2
   21744:	cmp	x20, x8
   21748:	b.ne	21ab0 <mpfr_sqrt@@Base+0x3c8>  // b.any
   2174c:	cmp	x20, #0x3f
   21750:	b.gt	21934 <mpfr_sqrt@@Base+0x24c>
   21754:	ldr	x12, [x22, #24]
   21758:	and	x13, x9, #0x1
   2175c:	add	x9, x13, x9
   21760:	adrp	x14, 5a000 <mpfr_l2b_62_1__tab@@Base+0x778>
   21764:	ldr	x12, [x12]
   21768:	add	x14, x14, #0x38
   2176c:	adrp	x15, 5b000 <mpfr_l2b_62_1__tab@@Base+0x1778>
   21770:	add	x15, x15, #0x838
   21774:	lsr	x13, x12, x13
   21778:	lsr	x12, x13, #51
   2177c:	and	x12, x12, #0x1ff8
   21780:	sub	x12, x12, #0x800
   21784:	ldr	x14, [x14, x12]
   21788:	ldr	x12, [x15, x12]
   2178c:	mov	x16, #0xffffffffffffffff    	// #-1
   21790:	lsr	x17, x13, #27
   21794:	eor	x15, x16, x13, lsr #27
   21798:	add	x16, x17, #0x1
   2179c:	lsl	x17, x14, #57
   217a0:	msub	x12, x16, x12, x17
   217a4:	lsr	x12, x12, #47
   217a8:	add	x12, x12, x14, lsl #11
   217ac:	mul	x14, x12, x15
   217b0:	lsl	x15, x12, #10
   217b4:	mul	x14, x14, x12
   217b8:	umulh	x12, x12, x14
   217bc:	lsr	x16, x13, #31
   217c0:	add	x12, x15, x12, lsr #6
   217c4:	ldr	x8, [x25, #24]
   217c8:	mul	x14, x12, x16
   217cc:	neg	x10, x20
   217d0:	mov	w11, #0x1                   	// #1
   217d4:	lsr	x14, x14, #32
   217d8:	lsl	x10, x11, x10
   217dc:	cmp	x9, #0x0
   217e0:	msub	x15, x14, x14, x13
   217e4:	mov	x16, #0x1ffffffff           	// #8589934591
   217e8:	sub	x11, x10, #0x1
   217ec:	cinc	x9, x9, lt  // lt = tstop
   217f0:	cmp	x15, x16
   217f4:	lsl	x16, x14, #1
   217f8:	b.cc	2181c <mpfr_sqrt@@Base+0x134>  // b.lo, b.ul, b.last
   217fc:	add	x16, x16, #0x1
   21800:	mov	x17, #0x1fffffffe           	// #8589934590
   21804:	sub	x15, x15, x16
   21808:	add	x14, x14, #0x1
   2180c:	cmp	x15, x17
   21810:	add	x16, x16, #0x2
   21814:	b.hi	21804 <mpfr_sqrt@@Base+0x11c>  // b.pmore
   21818:	sub	x16, x16, #0x1
   2181c:	orr	x17, x16, #0x1
   21820:	cmp	x15, x16
   21824:	csel	x17, x17, xzr, hi  // hi = pmore
   21828:	cinc	x16, x14, hi  // hi = pmore
   2182c:	sub	x14, x15, x17
   21830:	mul	x12, x14, x12
   21834:	extr	x12, x16, x12, #32
   21838:	add	x14, x12, #0x7
   2183c:	and	x14, x14, x11, lsr #1
   21840:	cmp	x14, #0x7
   21844:	asr	x9, x9, #1
   21848:	b.ls	223f0 <mpfr_sqrt@@Base+0xd08>  // b.plast
   2184c:	mov	w17, #0x1                   	// #1
   21850:	neg	x16, x10
   21854:	and	x15, x12, x16
   21858:	str	x15, [x8]
   2185c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   21860:	ldr	x1, [x0, #2624]
   21864:	add	x0, x0, #0xa40
   21868:	blr	x1
   2186c:	mrs	x13, tpidr_el0
   21870:	ldr	x14, [x13, x0]
   21874:	cmp	x9, x14
   21878:	b.gt	22374 <mpfr_sqrt@@Base+0xc8c>
   2187c:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   21880:	lsr	x14, x14, x20
   21884:	and	x14, x12, x14
   21888:	and	x11, x12, x11
   2188c:	eor	x11, x11, x14
   21890:	orr	x11, x11, x17
   21894:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   21898:	ldr	x1, [x0, #2592]
   2189c:	add	x0, x0, #0xa20
   218a0:	blr	x1
   218a4:	ldr	x12, [x13, x0]
   218a8:	cmp	x9, x12
   218ac:	b.lt	2245c <mpfr_sqrt@@Base+0xd74>  // b.tstop
   218b0:	mov	w22, wzr
   218b4:	cmp	w3, #0x5
   218b8:	str	x9, [x25, #16]
   218bc:	b.eq	22140 <mpfr_sqrt@@Base+0xa58>  // b.none
   218c0:	cbz	x11, 22140 <mpfr_sqrt@@Base+0xa58>
   218c4:	cmp	w3, #0x3
   218c8:	b.eq	21d78 <mpfr_sqrt@@Base+0x690>  // b.none
   218cc:	cmp	w3, #0x1
   218d0:	b.eq	21d78 <mpfr_sqrt@@Base+0x690>  // b.none
   218d4:	cbnz	w3, 218dc <mpfr_sqrt@@Base+0x1f4>
   218d8:	cbz	x14, 21d78 <mpfr_sqrt@@Base+0x690>
   218dc:	ldr	x11, [x8]
   218e0:	adds	x10, x11, x10
   218e4:	str	x10, [x8]
   218e8:	b.ne	21918 <mpfr_sqrt@@Base+0x230>  // b.any
   218ec:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   218f0:	str	x10, [x8]
   218f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   218f8:	ldr	x1, [x0, #2624]
   218fc:	add	x0, x0, #0xa40
   21900:	blr	x1
   21904:	ldr	x8, [x13, x0]
   21908:	cmp	x9, x8
   2190c:	b.ge	22374 <mpfr_sqrt@@Base+0xc8c>  // b.tcont
   21910:	add	x8, x9, #0x1
   21914:	str	x8, [x25, #16]
   21918:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2191c:	ldr	x1, [x0, #2656]
   21920:	add	x0, x0, #0xa60
   21924:	blr	x1
   21928:	ldr	w8, [x13, x0]
   2192c:	mov	w22, #0x1                   	// #1
   21930:	b	21d90 <mpfr_sqrt@@Base+0x6a8>
   21934:	cmp	x20, #0x40
   21938:	b.eq	2196c <mpfr_sqrt@@Base+0x284>  // b.none
   2193c:	cmp	x20, #0x7f
   21940:	b.gt	2196c <mpfr_sqrt@@Base+0x284>
   21944:	ldr	x13, [x22, #24]
   21948:	ldr	x21, [x25, #24]
   2194c:	mov	w12, #0x80                  	// #128
   21950:	ldr	x11, [x13, #8]
   21954:	tbnz	w9, #0, 21d9c <mpfr_sqrt@@Base+0x6b4>
   21958:	stur	x11, [x29, #-8]
   2195c:	ldr	x8, [x13]
   21960:	mov	x10, xzr
   21964:	stur	x8, [x29, #-16]
   21968:	b	21dbc <mpfr_sqrt@@Base+0x6d4>
   2196c:	cmp	x20, #0x40
   21970:	b.ne	21ab0 <mpfr_sqrt@@Base+0x3c8>  // b.any
   21974:	ldr	x10, [x22, #24]
   21978:	and	x12, x9, #0x1
   2197c:	add	x11, x9, x12
   21980:	adrp	x13, 5a000 <mpfr_l2b_62_1__tab@@Base+0x778>
   21984:	ldr	x10, [x10]
   21988:	add	x13, x13, #0x38
   2198c:	adrp	x14, 5b000 <mpfr_l2b_62_1__tab@@Base+0x1778>
   21990:	add	x14, x14, #0x838
   21994:	and	w16, w9, w10
   21998:	lsr	x9, x10, x12
   2199c:	lsr	x10, x9, #51
   219a0:	and	x10, x10, #0x1ff8
   219a4:	sub	x10, x10, #0x800
   219a8:	ldr	x13, [x13, x10]
   219ac:	ldr	x10, [x14, x10]
   219b0:	mov	x15, #0xffffffffffffffff    	// #-1
   219b4:	lsl	x12, x16, #63
   219b8:	lsr	x16, x9, #27
   219bc:	eor	x14, x15, x9, lsr #27
   219c0:	add	x15, x16, #0x1
   219c4:	lsl	x16, x13, #57
   219c8:	msub	x10, x15, x10, x16
   219cc:	lsr	x10, x10, #47
   219d0:	add	x10, x10, x13, lsl #11
   219d4:	mul	x13, x10, x14
   219d8:	lsl	x14, x10, #10
   219dc:	mul	x13, x13, x10
   219e0:	umulh	x10, x10, x13
   219e4:	lsr	x15, x9, #31
   219e8:	add	x10, x14, x10, lsr #6
   219ec:	ldr	x8, [x25, #24]
   219f0:	mul	x13, x10, x15
   219f4:	lsr	x13, x13, #32
   219f8:	cmp	x11, #0x0
   219fc:	msub	x14, x13, x13, x9
   21a00:	mov	x15, #0x1ffffffff           	// #8589934591
   21a04:	cinc	x11, x11, lt  // lt = tstop
   21a08:	cmp	x14, x15
   21a0c:	lsl	x15, x13, #1
   21a10:	b.cc	21a34 <mpfr_sqrt@@Base+0x34c>  // b.lo, b.ul, b.last
   21a14:	add	x15, x15, #0x1
   21a18:	mov	x16, #0x1fffffffe           	// #8589934590
   21a1c:	sub	x14, x14, x15
   21a20:	add	x13, x13, #0x1
   21a24:	cmp	x14, x16
   21a28:	add	x15, x15, #0x2
   21a2c:	b.hi	21a1c <mpfr_sqrt@@Base+0x334>  // b.pmore
   21a30:	sub	x15, x15, #0x1
   21a34:	orr	x16, x15, #0x1
   21a38:	cmp	x14, x15
   21a3c:	csel	x16, x16, xzr, hi  // hi = pmore
   21a40:	sub	x14, x14, x16
   21a44:	cinc	x13, x13, hi  // hi = pmore
   21a48:	mul	x10, x14, x10
   21a4c:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   21a50:	cmp	w13, #0x0
   21a54:	extr	x10, x13, x10, #32
   21a58:	csel	x10, x15, x10, ge  // ge = tcont
   21a5c:	umulh	x14, x10, x10
   21a60:	mul	x15, x10, x10
   21a64:	subs	x13, x12, x15
   21a68:	sbc	x12, x9, x14
   21a6c:	asr	x9, x11, #1
   21a70:	cbz	x12, 22184 <mpfr_sqrt@@Base+0xa9c>
   21a74:	lsl	x11, x10, #1
   21a78:	cmp	x12, #0x1
   21a7c:	b.ne	21a88 <mpfr_sqrt@@Base+0x3a0>  // b.any
   21a80:	cmp	x13, x11
   21a84:	b.ls	22180 <mpfr_sqrt@@Base+0xa98>  // b.plast
   21a88:	subs	x13, x13, x10
   21a8c:	add	x10, x10, #0x1
   21a90:	cset	w14, cc  // cc = lo, ul, last
   21a94:	subs	x13, x13, x10
   21a98:	sub	x12, x12, x14
   21a9c:	cset	w14, cc  // cc = lo, ul, last
   21aa0:	subs	x12, x12, x14
   21aa4:	add	x11, x11, #0x2
   21aa8:	b.ne	21a78 <mpfr_sqrt@@Base+0x390>  // b.any
   21aac:	b	22184 <mpfr_sqrt@@Base+0xa9c>
   21ab0:	neg	w10, w20
   21ab4:	sub	x11, x20, #0x1
   21ab8:	stur	xzr, [x29, #-32]
   21abc:	add	x12, x20, #0x3e
   21ac0:	and	w16, w10, #0x3f
   21ac4:	cmp	x11, #0x0
   21ac8:	ldr	x23, [x25, #24]
   21acc:	orr	w15, w16, w3
   21ad0:	csel	x10, x12, x11, lt  // lt = tstop
   21ad4:	mov	w13, #0x40                  	// #64
   21ad8:	sub	x14, x8, #0x1
   21adc:	cmp	w15, #0x0
   21ae0:	asr	x11, x10, #6
   21ae4:	add	x8, x8, #0x3e
   21ae8:	cset	w12, eq  // eq = none
   21aec:	csel	w19, w13, w16, eq  // eq = none
   21af0:	cinc	x28, x11, eq  // eq = none
   21af4:	cmp	x14, #0x0
   21af8:	csel	x20, x8, x14, lt  // lt = tstop
   21afc:	cmp	w19, #0x40
   21b00:	add	x21, x28, #0x1
   21b04:	stp	w15, w3, [x29, #-72]
   21b08:	stur	w16, [x29, #-108]
   21b0c:	stur	x23, [x29, #-88]
   21b10:	b.cc	21b34 <mpfr_sqrt@@Base+0x44c>  // b.lo, b.ul, b.last
   21b14:	lsl	x1, x21, #3
   21b18:	cmp	x1, #0x4, lsl #12
   21b1c:	b.hi	22388 <mpfr_sqrt@@Base+0xca0>  // b.pmore
   21b20:	add	x10, x1, #0xf
   21b24:	mov	x8, sp
   21b28:	and	x10, x10, #0xfffffffffffffff0
   21b2c:	sub	x23, x8, x10
   21b30:	mov	sp, x23
   21b34:	ldr	x26, [x22, #24]
   21b38:	lsl	x27, x21, #4
   21b3c:	asr	x20, x20, #6
   21b40:	lsl	x24, x21, #1
   21b44:	stp	x21, x28, [x29, #-104]
   21b48:	cmp	x27, #0x4, lsl #12
   21b4c:	and	w21, w9, #0x1
   21b50:	stur	x25, [x29, #-80]
   21b54:	b.hi	222c8 <mpfr_sqrt@@Base+0xbe0>  // b.pmore
   21b58:	add	x9, x27, #0xf
   21b5c:	mov	x8, sp
   21b60:	and	x9, x9, #0xfffffffffffffff0
   21b64:	sub	x25, x8, x9
   21b68:	mov	sp, x25
   21b6c:	cmp	x20, x24
   21b70:	add	x28, x20, #0x1
   21b74:	b.ge	222ec <mpfr_sqrt@@Base+0xc04>  // b.tcont
   21b78:	subs	x27, x24, x28
   21b7c:	b.eq	21b90 <mpfr_sqrt@@Base+0x4a8>  // b.none
   21b80:	lsl	x2, x27, #3
   21b84:	mov	x0, x25
   21b88:	mov	w1, wzr
   21b8c:	bl	c1b0 <memset@plt>
   21b90:	cbnz	w21, 21bbc <mpfr_sqrt@@Base+0x4d4>
   21b94:	add	x8, x25, x24, lsl #3
   21b98:	mvn	x9, x20
   21b9c:	add	x0, x8, x9, lsl #3
   21ba0:	cmp	x0, x26
   21ba4:	b.eq	21bb4 <mpfr_sqrt@@Base+0x4cc>  // b.none
   21ba8:	lsl	x2, x28, #3
   21bac:	mov	x1, x26
   21bb0:	bl	bad0 <memcpy@plt>
   21bb4:	mov	x27, xzr
   21bb8:	b	21bfc <mpfr_sqrt@@Base+0x514>
   21bbc:	cbz	x27, 21be4 <mpfr_sqrt@@Base+0x4fc>
   21bc0:	add	x20, x25, x27, lsl #3
   21bc4:	mov	w3, #0x1                   	// #1
   21bc8:	mov	x0, x20
   21bcc:	mov	x1, x26
   21bd0:	mov	x2, x28
   21bd4:	bl	bd90 <__gmpn_rshift@plt>
   21bd8:	mov	x27, xzr
   21bdc:	stur	x0, [x20, #-8]
   21be0:	b	21bfc <mpfr_sqrt@@Base+0x514>
   21be4:	mov	w3, #0x1                   	// #1
   21be8:	mov	x0, x25
   21bec:	mov	x1, x26
   21bf0:	mov	x2, x28
   21bf4:	bl	bd90 <__gmpn_rshift@plt>
   21bf8:	mov	x27, x0
   21bfc:	ldur	x28, [x29, #-80]
   21c00:	mov	x0, x23
   21c04:	mov	x1, xzr
   21c08:	mov	x2, x25
   21c0c:	mov	x3, x24
   21c10:	bl	cd20 <__gmpn_sqrtrem@plt>
   21c14:	ldr	x10, [x23]
   21c18:	mov	w8, #0x1                   	// #1
   21c1c:	lsl	x9, x8, x19
   21c20:	cmp	w19, #0x40
   21c24:	sub	x8, x9, #0x1
   21c28:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   21c2c:	and	x8, x10, x8
   21c30:	sub	x11, x10, x8
   21c34:	str	x11, [x23]
   21c38:	ldr	x12, [x22, #16]
   21c3c:	ldur	w24, [x29, #-68]
   21c40:	orr	x10, x0, x27
   21c44:	add	x14, x12, x21
   21c48:	cmp	x14, #0x0
   21c4c:	orr	w13, w24, #0x2
   21c50:	cinc	x14, x14, lt  // lt = tstop
   21c54:	orr	x12, x8, x10
   21c58:	cmp	w13, #0x3
   21c5c:	asr	x20, x14, #1
   21c60:	b.eq	21d04 <mpfr_sqrt@@Base+0x61c>  // b.none
   21c64:	cbz	x12, 21d04 <mpfr_sqrt@@Base+0x61c>
   21c68:	ldur	x14, [x29, #-104]
   21c6c:	cbz	w24, 21d10 <mpfr_sqrt@@Base+0x628>
   21c70:	ldur	w9, [x29, #-72]
   21c74:	add	x8, x23, #0x8
   21c78:	mov	w12, #0x1                   	// #1
   21c7c:	cmp	w9, #0x0
   21c80:	csel	x9, x8, x23, eq  // eq = none
   21c84:	ldur	w8, [x29, #-108]
   21c88:	ldr	x11, [x9]
   21c8c:	csel	w10, wzr, w8, eq  // eq = none
   21c90:	ldp	x8, x13, [x29, #-96]
   21c94:	lsl	x10, x12, x10
   21c98:	csel	x8, x8, x14, eq  // eq = none
   21c9c:	adds	x10, x11, x10
   21ca0:	str	x10, [x13]
   21ca4:	b.cc	21d44 <mpfr_sqrt@@Base+0x65c>  // b.lo, b.ul, b.last
   21ca8:	mov	x11, #0xfffffffffffffff8    	// #-8
   21cac:	mov	w10, #0x1                   	// #1
   21cb0:	cmp	x10, x8
   21cb4:	b.ge	220b0 <mpfr_sqrt@@Base+0x9c8>  // b.tcont
   21cb8:	ldr	x12, [x9, x10, lsl #3]
   21cbc:	sub	x11, x11, #0x8
   21cc0:	adds	x12, x12, #0x1
   21cc4:	str	x12, [x13, x10, lsl #3]
   21cc8:	add	x10, x10, #0x1
   21ccc:	b.cs	21cb0 <mpfr_sqrt@@Base+0x5c8>  // b.hs, b.nlast
   21cd0:	cmp	x9, x13
   21cd4:	mov	w22, #0x1                   	// #1
   21cd8:	b.eq	220c4 <mpfr_sqrt@@Base+0x9dc>  // b.none
   21cdc:	cmp	x10, x8
   21ce0:	b.ge	220c4 <mpfr_sqrt@@Base+0x9dc>  // b.tcont
   21ce4:	sub	x9, x9, x11
   21ce8:	sub	x11, x13, x11
   21cec:	ldr	x12, [x9], #8
   21cf0:	sub	x8, x8, #0x1
   21cf4:	cmp	x10, x8
   21cf8:	str	x12, [x11], #8
   21cfc:	b.ne	21cec <mpfr_sqrt@@Base+0x604>  // b.any
   21d00:	b	220c0 <mpfr_sqrt@@Base+0x9d8>
   21d04:	cmp	x12, #0x0
   21d08:	csetm	w22, ne  // ne = any
   21d0c:	b	22088 <mpfr_sqrt@@Base+0x9a0>
   21d10:	cmp	w19, #0x3f
   21d14:	b.hi	22080 <mpfr_sqrt@@Base+0x998>  // b.pmore
   21d18:	sub	w12, w19, #0x1
   21d1c:	mov	w13, #0x1                   	// #1
   21d20:	lsl	x12, x13, x12
   21d24:	tst	x8, x12
   21d28:	b.eq	22084 <mpfr_sqrt@@Base+0x99c>  // b.none
   21d2c:	cmp	x8, x12
   21d30:	b.ne	21c70 <mpfr_sqrt@@Base+0x588>  // b.any
   21d34:	and	x8, x11, x9
   21d38:	orr	x8, x8, x10
   21d3c:	cbz	x8, 22084 <mpfr_sqrt@@Base+0x99c>
   21d40:	b	21c70 <mpfr_sqrt@@Base+0x588>
   21d44:	cmp	x8, #0x2
   21d48:	mov	w22, #0x1                   	// #1
   21d4c:	b.lt	220c4 <mpfr_sqrt@@Base+0x9dc>  // b.tstop
   21d50:	cmp	x9, x13
   21d54:	b.eq	220c4 <mpfr_sqrt@@Base+0x9dc>  // b.none
   21d58:	sub	x8, x8, #0x1
   21d5c:	add	x10, x13, #0x8
   21d60:	add	x9, x9, #0x8
   21d64:	ldr	x11, [x9], #8
   21d68:	subs	x8, x8, #0x1
   21d6c:	str	x11, [x10], #8
   21d70:	b.ne	21d64 <mpfr_sqrt@@Base+0x67c>  // b.any
   21d74:	b	220c0 <mpfr_sqrt@@Base+0x9d8>
   21d78:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   21d7c:	ldr	x1, [x0, #2656]
   21d80:	add	x0, x0, #0xa60
   21d84:	blr	x1
   21d88:	ldr	w8, [x13, x0]
   21d8c:	mov	w22, #0xffffffff            	// #-1
   21d90:	orr	w8, w8, #0x8
   21d94:	str	w8, [x13, x0]
   21d98:	b	22140 <mpfr_sqrt@@Base+0xa58>
   21d9c:	lsr	x11, x11, #1
   21da0:	stur	x11, [x29, #-8]
   21da4:	ldp	x10, x8, [x13]
   21da8:	add	x9, x9, #0x1
   21dac:	extr	x8, x8, x10, #1
   21db0:	stur	x8, [x29, #-16]
   21db4:	ldr	x10, [x13]
   21db8:	lsl	x10, x10, #63
   21dbc:	stur	x10, [x29, #-24]
   21dc0:	lsr	x10, x11, #51
   21dc4:	adrp	x13, 5a000 <mpfr_l2b_62_1__tab@@Base+0x778>
   21dc8:	and	x10, x10, #0x1ff8
   21dcc:	add	x13, x13, #0x38
   21dd0:	adrp	x16, 5b000 <mpfr_l2b_62_1__tab@@Base+0x1778>
   21dd4:	sub	x10, x10, #0x800
   21dd8:	add	x16, x16, #0x838
   21ddc:	ldr	x13, [x13, x10]
   21de0:	ldr	x10, [x16, x10]
   21de4:	lsr	x14, x11, #27
   21de8:	add	x14, x14, #0x1
   21dec:	lsl	x17, x13, #57
   21df0:	msub	x10, x10, x14, x17
   21df4:	cmp	x9, #0x0
   21df8:	mov	x16, #0xffffffffffffffff    	// #-1
   21dfc:	lsr	x10, x10, #47
   21e00:	cinc	x14, x9, lt  // lt = tstop
   21e04:	eor	x9, x16, x11, lsr #27
   21e08:	add	x10, x10, x13, lsl #11
   21e0c:	mul	x9, x10, x9
   21e10:	mul	x9, x9, x10
   21e14:	lsl	x13, x10, #10
   21e18:	umulh	x9, x10, x9
   21e1c:	add	x9, x13, x9, lsr #6
   21e20:	mul	x10, x9, x9
   21e24:	umulh	x10, x10, x11
   21e28:	mov	x17, #0x2000000000000000    	// #2305843009213693952
   21e2c:	add	x10, x10, #0x2
   21e30:	sub	x10, x17, x10, lsr #1
   21e34:	mul	x10, x9, x10
   21e38:	lsr	x10, x10, #29
   21e3c:	add	x10, x10, x9, lsl #33
   21e40:	umulh	x9, x10, x11
   21e44:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   21e48:	add	x9, x9, x11
   21e4c:	cmp	x9, x18
   21e50:	csel	x9, x9, x18, hi  // hi = pmore
   21e54:	mov	x15, xzr
   21e58:	umulh	x16, x9, x9
   21e5c:	mul	x17, x9, x9
   21e60:	subs	x13, x15, x17
   21e64:	sbc	x11, x11, x16
   21e68:	cmp	x11, #0x10
   21e6c:	mov	w15, #0x1                   	// #1
   21e70:	b.cc	21e94 <mpfr_sqrt@@Base+0x7ac>  // b.lo, b.ul, b.last
   21e74:	lsr	x17, x9, #60
   21e78:	lsl	x18, x9, #4
   21e7c:	subs	x0, x13, x18
   21e80:	sbc	x11, x11, x17
   21e84:	add	x9, x9, #0x8
   21e88:	mov	x16, xzr
   21e8c:	subs	x13, x0, #0x40
   21e90:	sbc	x11, x11, x16
   21e94:	cmp	x11, #0x8
   21e98:	sub	x12, x12, x20
   21e9c:	b.cc	21ec0 <mpfr_sqrt@@Base+0x7d8>  // b.lo, b.ul, b.last
   21ea0:	lsr	x17, x9, #61
   21ea4:	lsl	x18, x9, #3
   21ea8:	subs	x0, x13, x18
   21eac:	sbc	x11, x11, x17
   21eb0:	add	x9, x9, #0x4
   21eb4:	mov	x16, xzr
   21eb8:	subs	x13, x0, #0x10
   21ebc:	sbc	x11, x11, x16
   21ec0:	asr	x23, x14, #1
   21ec4:	cmp	x11, #0x4
   21ec8:	lsl	x24, x15, x12
   21ecc:	b.cc	21ef0 <mpfr_sqrt@@Base+0x808>  // b.lo, b.ul, b.last
   21ed0:	lsr	x14, x9, #62
   21ed4:	lsl	x15, x9, #2
   21ed8:	subs	x16, x13, x15
   21edc:	sbc	x11, x11, x14
   21ee0:	add	x9, x9, #0x2
   21ee4:	mov	x12, xzr
   21ee8:	subs	x13, x16, #0x4
   21eec:	sbc	x11, x11, x12
   21ef0:	sub	x19, x24, #0x1
   21ef4:	lsl	x12, x9, #1
   21ef8:	cmp	x11, #0x1
   21efc:	mov	x14, x12
   21f00:	b.hi	21f14 <mpfr_sqrt@@Base+0x82c>  // b.pmore
   21f04:	b.ne	21f34 <mpfr_sqrt@@Base+0x84c>  // b.any
   21f08:	cmp	x13, x12
   21f0c:	b.ls	21f34 <mpfr_sqrt@@Base+0x84c>  // b.plast
   21f10:	lsl	x14, x9, #1
   21f14:	lsr	x15, x9, #63
   21f18:	orr	x14, x14, #0x1
   21f1c:	subs	x16, x13, x14
   21f20:	sbc	x11, x11, x15
   21f24:	add	x9, x9, #0x1
   21f28:	add	x12, x12, #0x2
   21f2c:	mov	x13, x16
   21f30:	b	21ef8 <mpfr_sqrt@@Base+0x810>
   21f34:	adds	x8, x13, x8
   21f38:	cinc	x12, x11, cs  // cs = hs, nlast
   21f3c:	extr	x8, x12, x8, #1
   21f40:	umulh	x13, x10, x8
   21f44:	adds	x14, x13, x8
   21f48:	lsr	x11, x12, #1
   21f4c:	adds	x10, x14, x10
   21f50:	cset	w15, cs  // cs = hs, nlast
   21f54:	cmp	x11, #0x0
   21f58:	cset	w16, ne  // ne = any
   21f5c:	csel	x11, x14, x10, eq  // eq = none
   21f60:	cmn	x13, x8
   21f64:	and	w8, w15, w16
   21f68:	add	x10, x11, #0x1a
   21f6c:	cinc	x8, x8, cs  // cs = hs, nlast
   21f70:	and	x10, x10, x19, lsr #1
   21f74:	add	x8, x8, x12, lsr #1
   21f78:	cmp	x10, #0x1e
   21f7c:	add	x8, x8, x9
   21f80:	stp	x11, x8, [x21]
   21f84:	b.ls	224c8 <mpfr_sqrt@@Base+0xde0>  // b.plast
   21f88:	mov	w13, #0x1                   	// #1
   21f8c:	neg	x12, x24
   21f90:	and	x10, x11, x12
   21f94:	str	x10, [x21]
   21f98:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   21f9c:	ldr	x1, [x0, #2624]
   21fa0:	add	x0, x0, #0xa40
   21fa4:	blr	x1
   21fa8:	mrs	x8, tpidr_el0
   21fac:	ldr	x9, [x8, x0]
   21fb0:	cmp	x23, x9
   21fb4:	b.gt	22374 <mpfr_sqrt@@Base+0xc8c>
   21fb8:	mov	w9, #0x7f                  	// #127
   21fbc:	mov	w14, #0x1                   	// #1
   21fc0:	sub	x9, x9, x20
   21fc4:	lsl	x9, x14, x9
   21fc8:	and	x9, x11, x9
   21fcc:	and	x11, x11, x19
   21fd0:	eor	x11, x11, x9
   21fd4:	orr	x11, x11, x13
   21fd8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   21fdc:	ldr	x1, [x0, #2592]
   21fe0:	add	x0, x0, #0xa20
   21fe4:	blr	x1
   21fe8:	ldr	x13, [x8, x0]
   21fec:	cmp	x23, x13
   21ff0:	b.lt	2260c <mpfr_sqrt@@Base+0xf24>  // b.tstop
   21ff4:	mov	w22, wzr
   21ff8:	cmp	w3, #0x5
   21ffc:	str	x23, [x25, #16]
   22000:	b.eq	22140 <mpfr_sqrt@@Base+0xa58>  // b.none
   22004:	cbz	x11, 22140 <mpfr_sqrt@@Base+0xa58>
   22008:	cmp	w3, #0x3
   2200c:	b.eq	22164 <mpfr_sqrt@@Base+0xa7c>  // b.none
   22010:	cmp	w3, #0x1
   22014:	b.eq	22164 <mpfr_sqrt@@Base+0xa7c>  // b.none
   22018:	cbnz	w3, 22020 <mpfr_sqrt@@Base+0x938>
   2201c:	cbz	x9, 22164 <mpfr_sqrt@@Base+0xa7c>
   22020:	ldp	x9, x10, [x21]
   22024:	adds	x9, x9, x24
   22028:	str	x9, [x21]
   2202c:	cinc	x9, x10, eq  // eq = none
   22030:	str	x9, [x21, #8]
   22034:	cbnz	x9, 22064 <mpfr_sqrt@@Base+0x97c>
   22038:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2203c:	str	x9, [x21, #8]
   22040:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22044:	ldr	x1, [x0, #2624]
   22048:	add	x0, x0, #0xa40
   2204c:	blr	x1
   22050:	ldr	x9, [x8, x0]
   22054:	cmp	x23, x9
   22058:	b.ge	22374 <mpfr_sqrt@@Base+0xc8c>  // b.tcont
   2205c:	add	x9, x23, #0x1
   22060:	str	x9, [x25, #16]
   22064:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22068:	ldr	x1, [x0, #2656]
   2206c:	add	x0, x0, #0xa60
   22070:	blr	x1
   22074:	ldr	w9, [x8, x0]
   22078:	mov	w22, #0x1                   	// #1
   2207c:	b	22138 <mpfr_sqrt@@Base+0xa50>
   22080:	tbnz	x8, #63, 22258 <mpfr_sqrt@@Base+0xb70>
   22084:	mov	w22, #0xffffffff            	// #-1
   22088:	ldur	w8, [x29, #-72]
   2208c:	cbnz	w8, 220c4 <mpfr_sqrt@@Base+0x9dc>
   22090:	ldur	x0, [x29, #-88]
   22094:	add	x1, x23, #0x8
   22098:	cmp	x0, x1
   2209c:	b.eq	220c4 <mpfr_sqrt@@Base+0x9dc>  // b.none
   220a0:	ldur	x8, [x29, #-96]
   220a4:	lsl	x2, x8, #3
   220a8:	bl	bad0 <memcpy@plt>
   220ac:	b	220c4 <mpfr_sqrt@@Base+0x9dc>
   220b0:	add	x8, x13, x8, lsl #3
   220b4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   220b8:	add	x20, x20, #0x1
   220bc:	stur	x9, [x8, #-8]
   220c0:	mov	w22, #0x1                   	// #1
   220c4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   220c8:	add	x8, x20, x8
   220cc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   220d0:	cmp	x8, x9
   220d4:	b.cs	22318 <mpfr_sqrt@@Base+0xc30>  // b.hs, b.nlast
   220d8:	str	x20, [x28, #16]
   220dc:	ldur	x0, [x29, #-32]
   220e0:	cbnz	x0, 22334 <mpfr_sqrt@@Base+0xc4c>
   220e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   220e8:	ldr	x1, [x0, #2592]
   220ec:	add	x0, x0, #0xa20
   220f0:	blr	x1
   220f4:	mrs	x8, tpidr_el0
   220f8:	ldr	x9, [x8, x0]
   220fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22100:	ldr	x1, [x0, #2624]
   22104:	add	x0, x0, #0xa40
   22108:	blr	x1
   2210c:	cmp	x20, x9
   22110:	b.lt	22340 <mpfr_sqrt@@Base+0xc58>  // b.tstop
   22114:	ldr	x9, [x8, x0]
   22118:	cmp	x20, x9
   2211c:	b.gt	22340 <mpfr_sqrt@@Base+0xc58>
   22120:	cbz	w22, 22140 <mpfr_sqrt@@Base+0xa58>
   22124:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22128:	ldr	x1, [x0, #2656]
   2212c:	add	x0, x0, #0xa60
   22130:	blr	x1
   22134:	ldr	w9, [x8, x0]
   22138:	orr	w9, w9, #0x8
   2213c:	str	w9, [x8, x0]
   22140:	mov	w0, w22
   22144:	mov	sp, x29
   22148:	ldp	x20, x19, [sp, #80]
   2214c:	ldp	x22, x21, [sp, #64]
   22150:	ldp	x24, x23, [sp, #48]
   22154:	ldp	x26, x25, [sp, #32]
   22158:	ldp	x28, x27, [sp, #16]
   2215c:	ldp	x29, x30, [sp], #96
   22160:	ret
   22164:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22168:	ldr	x1, [x0, #2656]
   2216c:	add	x0, x0, #0xa60
   22170:	blr	x1
   22174:	ldr	w9, [x8, x0]
   22178:	mov	w22, #0xffffffff            	// #-1
   2217c:	b	22138 <mpfr_sqrt@@Base+0xa50>
   22180:	mov	w12, #0x1                   	// #1
   22184:	cmp	x13, x10
   22188:	cset	w14, hi  // hi = pmore
   2218c:	str	x10, [x8]
   22190:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22194:	ldr	x1, [x0, #2624]
   22198:	add	x0, x0, #0xa40
   2219c:	blr	x1
   221a0:	mrs	x11, tpidr_el0
   221a4:	ldr	x15, [x11, x0]
   221a8:	cmp	x9, x15
   221ac:	b.gt	22374 <mpfr_sqrt@@Base+0xc8c>
   221b0:	orr	w14, w12, w14
   221b4:	orr	x12, x13, x14
   221b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   221bc:	ldr	x1, [x0, #2592]
   221c0:	add	x0, x0, #0xa20
   221c4:	blr	x1
   221c8:	ldr	x13, [x11, x0]
   221cc:	cmp	x9, x13
   221d0:	b.lt	226bc <mpfr_sqrt@@Base+0xfd4>  // b.tstop
   221d4:	mov	w22, wzr
   221d8:	cmp	w3, #0x5
   221dc:	str	x9, [x25, #16]
   221e0:	b.eq	22140 <mpfr_sqrt@@Base+0xa58>  // b.none
   221e4:	cbz	x12, 22140 <mpfr_sqrt@@Base+0xa58>
   221e8:	cmp	w3, #0x3
   221ec:	b.eq	22274 <mpfr_sqrt@@Base+0xb8c>  // b.none
   221f0:	cmp	w3, #0x1
   221f4:	b.eq	22274 <mpfr_sqrt@@Base+0xb8c>  // b.none
   221f8:	cbnz	w3, 22200 <mpfr_sqrt@@Base+0xb18>
   221fc:	tbz	w14, #0, 22274 <mpfr_sqrt@@Base+0xb8c>
   22200:	ldr	x10, [x8]
   22204:	adds	x10, x10, #0x1
   22208:	str	x10, [x8]
   2220c:	b.cc	2223c <mpfr_sqrt@@Base+0xb54>  // b.lo, b.ul, b.last
   22210:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   22214:	str	x10, [x8]
   22218:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2221c:	ldr	x1, [x0, #2624]
   22220:	add	x0, x0, #0xa40
   22224:	blr	x1
   22228:	ldr	x8, [x11, x0]
   2222c:	cmp	x9, x8
   22230:	b.ge	22374 <mpfr_sqrt@@Base+0xc8c>  // b.tcont
   22234:	add	x8, x9, #0x1
   22238:	str	x8, [x25, #16]
   2223c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22240:	ldr	x1, [x0, #2656]
   22244:	add	x0, x0, #0xa60
   22248:	blr	x1
   2224c:	ldr	w8, [x11, x0]
   22250:	mov	w22, #0x1                   	// #1
   22254:	b	2228c <mpfr_sqrt@@Base+0xba4>
   22258:	cbnz	x10, 21c70 <mpfr_sqrt@@Base+0x588>
   2225c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   22260:	cmp	x8, x9
   22264:	b.ne	21c70 <mpfr_sqrt@@Base+0x588>  // b.any
   22268:	ldrb	w8, [x23, #8]
   2226c:	tbnz	w8, #0, 21c70 <mpfr_sqrt@@Base+0x588>
   22270:	b	22084 <mpfr_sqrt@@Base+0x99c>
   22274:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22278:	ldr	x1, [x0, #2656]
   2227c:	add	x0, x0, #0xa60
   22280:	blr	x1
   22284:	ldr	w8, [x11, x0]
   22288:	mov	w22, #0xffffffff            	// #-1
   2228c:	orr	w8, w8, #0x8
   22290:	str	w8, [x11, x0]
   22294:	b	22140 <mpfr_sqrt@@Base+0xa58>
   22298:	cmp	x9, x8
   2229c:	b.ne	22354 <mpfr_sqrt@@Base+0xc6c>  // b.any
   222a0:	str	x8, [x25, #16]
   222a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   222a8:	ldr	x1, [x0, #2656]
   222ac:	add	x0, x0, #0xa60
   222b0:	blr	x1
   222b4:	mrs	x8, tpidr_el0
   222b8:	ldr	w9, [x8, x0]
   222bc:	mov	w22, wzr
   222c0:	orr	w9, w9, #0x4
   222c4:	b	2213c <mpfr_sqrt@@Base+0xa54>
   222c8:	sub	x0, x29, #0x20
   222cc:	mov	x1, x27
   222d0:	mov	x25, x11
   222d4:	mov	x28, x12
   222d8:	bl	be70 <mpfr_tmp_allocate@plt>
   222dc:	mov	x12, x28
   222e0:	mov	x11, x25
   222e4:	mov	x25, x0
   222e8:	b	21b6c <mpfr_sqrt@@Base+0x484>
   222ec:	sub	x28, x28, x24
   222f0:	add	x1, x26, x28, lsl #3
   222f4:	stp	x12, x11, [x29, #-128]
   222f8:	cbnz	w21, 223ac <mpfr_sqrt@@Base+0xcc4>
   222fc:	cmp	x1, x25
   22300:	b.eq	22310 <mpfr_sqrt@@Base+0xc28>  // b.none
   22304:	mov	x0, x25
   22308:	mov	x2, x27
   2230c:	bl	bad0 <memcpy@plt>
   22310:	mov	x27, xzr
   22314:	b	223c0 <mpfr_sqrt@@Base+0xcd8>
   22318:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   2231c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   22320:	add	x0, x0, #0x2fe
   22324:	add	x2, x2, #0xf8d
   22328:	mov	w1, #0x2b5                 	// #693
   2232c:	bl	cb90 <mpfr_assert_fail@plt>
   22330:	b	220d8 <mpfr_sqrt@@Base+0x9f0>
   22334:	bl	c460 <mpfr_tmp_free@plt>
   22338:	ldr	x20, [x28, #16]
   2233c:	b	220e4 <mpfr_sqrt@@Base+0x9fc>
   22340:	mov	x0, x28
   22344:	mov	w1, w22
   22348:	mov	w2, w24
   2234c:	bl	cb80 <mpfr_check_range@plt>
   22350:	b	22760 <mpfr_sqrt@@Base+0x1078>
   22354:	ldr	w10, [x22, #8]
   22358:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   2235c:	cmp	x9, x11
   22360:	b.ne	224ac <mpfr_sqrt@@Base+0xdc4>  // b.any
   22364:	mov	w22, wzr
   22368:	str	w10, [x25, #8]
   2236c:	str	x11, [x25, #16]
   22370:	b	22140 <mpfr_sqrt@@Base+0xa58>
   22374:	mov	w2, #0x1                   	// #1
   22378:	mov	x0, x25
   2237c:	mov	w1, w3
   22380:	bl	bff0 <mpfr_overflow@plt>
   22384:	b	22760 <mpfr_sqrt@@Base+0x1078>
   22388:	sub	x0, x29, #0x20
   2238c:	mov	x23, x11
   22390:	mov	x24, x12
   22394:	bl	be70 <mpfr_tmp_allocate@plt>
   22398:	ldr	x9, [x22, #16]
   2239c:	mov	x12, x24
   223a0:	mov	x11, x23
   223a4:	mov	x23, x0
   223a8:	b	21b34 <mpfr_sqrt@@Base+0x44c>
   223ac:	mov	w3, #0x1                   	// #1
   223b0:	mov	x0, x25
   223b4:	mov	x2, x24
   223b8:	bl	bd90 <__gmpn_rshift@plt>
   223bc:	mov	x27, x0
   223c0:	ldp	x9, x8, [x29, #-128]
   223c4:	cbz	x28, 21bfc <mpfr_sqrt@@Base+0x514>
   223c8:	ldur	x28, [x29, #-80]
   223cc:	cbnz	x27, 21c00 <mpfr_sqrt@@Base+0x518>
   223d0:	add	x8, x8, x9
   223d4:	sub	x8, x20, x8, lsl #1
   223d8:	sub	x8, x8, #0x2
   223dc:	ldr	x27, [x26, x8, lsl #3]
   223e0:	subs	x8, x8, #0x1
   223e4:	b.cc	21c00 <mpfr_sqrt@@Base+0x518>  // b.lo, b.ul, b.last
   223e8:	cbz	x27, 223dc <mpfr_sqrt@@Base+0xcf4>
   223ec:	b	21c00 <mpfr_sqrt@@Base+0x518>
   223f0:	cmp	w16, #0x0
   223f4:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   223f8:	mov	x14, xzr
   223fc:	csel	x12, x15, x12, ge  // ge = tcont
   22400:	umulh	x16, x12, x12
   22404:	mul	x17, x12, x12
   22408:	subs	x15, x14, x17
   2240c:	sbc	x13, x13, x16
   22410:	cbz	x13, 22454 <mpfr_sqrt@@Base+0xd6c>
   22414:	lsl	x16, x12, #1
   22418:	mov	w14, #0x1                   	// #1
   2241c:	cmp	x13, #0x1
   22420:	b.ne	2242c <mpfr_sqrt@@Base+0xd44>  // b.any
   22424:	cmp	x15, x16
   22428:	b.ls	22454 <mpfr_sqrt@@Base+0xd6c>  // b.plast
   2242c:	subs	x15, x15, x12
   22430:	add	x12, x12, #0x1
   22434:	cset	w17, cc  // cc = lo, ul, last
   22438:	subs	x15, x15, x12
   2243c:	sub	x13, x13, x17
   22440:	cset	w17, cc  // cc = lo, ul, last
   22444:	subs	x13, x13, x17
   22448:	add	x16, x16, #0x2
   2244c:	b.ne	2241c <mpfr_sqrt@@Base+0xd34>  // b.any
   22450:	mov	x14, xzr
   22454:	orr	x17, x14, x15
   22458:	b	21850 <mpfr_sqrt@@Base+0x168>
   2245c:	cmp	w3, #0x4
   22460:	b.eq	22668 <mpfr_sqrt@@Base+0xf80>  // b.none
   22464:	cmp	w3, #0x2
   22468:	b.eq	22668 <mpfr_sqrt@@Base+0xf80>  // b.none
   2246c:	cbnz	w3, 22684 <mpfr_sqrt@@Base+0xf9c>
   22470:	sub	x12, x12, #0x1
   22474:	cmp	x9, x12
   22478:	b.ne	22488 <mpfr_sqrt@@Base+0xda0>  // b.any
   2247c:	cmp	x15, x16
   22480:	b.ne	22488 <mpfr_sqrt@@Base+0xda0>  // b.any
   22484:	cbnz	x14, 218b0 <mpfr_sqrt@@Base+0x1c8>
   22488:	cmp	x9, x12
   2248c:	b.lt	224a4 <mpfr_sqrt@@Base+0xdbc>  // b.tstop
   22490:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   22494:	cmp	x15, x8
   22498:	mov	w3, wzr
   2249c:	b.ne	22684 <mpfr_sqrt@@Base+0xf9c>  // b.any
   224a0:	cbnz	x11, 22684 <mpfr_sqrt@@Base+0xf9c>
   224a4:	mov	w3, #0x1                   	// #1
   224a8:	b	22684 <mpfr_sqrt@@Base+0xf9c>
   224ac:	tbnz	w10, #31, 222a0 <mpfr_sqrt@@Base+0xbb8>
   224b0:	mov	w8, #0x1                   	// #1
   224b4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   224b8:	mov	w22, wzr
   224bc:	str	w8, [x25, #8]
   224c0:	str	x9, [x25, #16]
   224c4:	b	22140 <mpfr_sqrt@@Base+0xa58>
   224c8:	sub	x0, x29, #0x40
   224cc:	mov	w2, #0x2                   	// #2
   224d0:	mov	x1, x21
   224d4:	mov	w22, w3
   224d8:	stur	xzr, [x29, #-32]
   224dc:	bl	c410 <__gmpn_sqr@plt>
   224e0:	sub	x0, x29, #0x40
   224e4:	sub	x1, x29, #0x20
   224e8:	sub	x2, x29, #0x40
   224ec:	mov	w3, #0x3                   	// #3
   224f0:	bl	bf10 <__gmpn_sub_n@plt>
   224f4:	ldp	x10, x8, [x21]
   224f8:	ldur	x9, [x29, #-48]
   224fc:	extr	x8, x8, x10, #63
   22500:	lsl	x10, x10, #1
   22504:	tbz	x9, #63, 22564 <mpfr_sqrt@@Base+0xe7c>
   22508:	ldp	x11, x12, [x29, #-64]
   2250c:	mov	w13, #0x1                   	// #1
   22510:	cmp	x10, #0x0
   22514:	add	x11, x11, x10
   22518:	cset	w14, eq  // eq = none
   2251c:	sub	x10, x10, #0x2
   22520:	sub	x11, x11, #0x1
   22524:	sub	x8, x8, x14
   22528:	cmp	x11, x10
   2252c:	add	x12, x8, x12
   22530:	cinc	x12, x12, cc  // cc = lo, ul, last
   22534:	cset	w14, cc  // cc = lo, ul, last
   22538:	cmp	x12, x8
   2253c:	cset	w16, eq  // eq = none
   22540:	cset	w15, cc  // cc = lo, ul, last
   22544:	and	w14, w14, w16
   22548:	orr	w14, w15, w14
   2254c:	cmp	w14, #0x0
   22550:	cinc	x14, x13, ne  // ne = any
   22554:	adds	x9, x14, x9
   22558:	b.mi	22510 <mpfr_sqrt@@Base+0xe28>  // b.first
   2255c:	stp	x11, x12, [x29, #-64]
   22560:	stur	x9, [x29, #-48]
   22564:	cmp	x9, #0x2
   22568:	b.cc	22574 <mpfr_sqrt@@Base+0xe8c>  // b.lo, b.ul, b.last
   2256c:	ldur	x12, [x29, #-56]
   22570:	b	22588 <mpfr_sqrt@@Base+0xea0>
   22574:	cmp	x9, #0x1
   22578:	b.ne	22694 <mpfr_sqrt@@Base+0xfac>  // b.any
   2257c:	ldur	x12, [x29, #-56]
   22580:	cmp	x12, x8
   22584:	b.ls	2259c <mpfr_sqrt@@Base+0xeb4>  // b.plast
   22588:	ldur	x11, [x29, #-64]
   2258c:	cmp	x12, x8
   22590:	mov	x0, x12
   22594:	b.cs	225b0 <mpfr_sqrt@@Base+0xec8>  // b.hs, b.nlast
   22598:	b	225c8 <mpfr_sqrt@@Base+0xee0>
   2259c:	b.ne	22694 <mpfr_sqrt@@Base+0xfac>  // b.any
   225a0:	ldur	x11, [x29, #-64]
   225a4:	mov	x12, x8
   225a8:	cmp	x11, x10
   225ac:	b.ls	22694 <mpfr_sqrt@@Base+0xfac>  // b.plast
   225b0:	cmp	x12, x8
   225b4:	b.ne	22604 <mpfr_sqrt@@Base+0xf1c>  // b.any
   225b8:	cmp	x11, x10
   225bc:	mov	x0, x8
   225c0:	mov	w13, #0x1                   	// #1
   225c4:	b.hi	225d0 <mpfr_sqrt@@Base+0xee8>  // b.pmore
   225c8:	mov	x12, x0
   225cc:	mov	w13, #0x2                   	// #2
   225d0:	cmp	x11, x10
   225d4:	sub	x9, x9, x13
   225d8:	sub	x12, x12, x8
   225dc:	orr	x13, x10, #0x1
   225e0:	cset	w14, ls  // ls = plast
   225e4:	sub	x11, x11, x13
   225e8:	cmn	x10, #0x2
   225ec:	sub	x12, x12, x14
   225f0:	add	x10, x10, #0x2
   225f4:	stp	x12, x9, [x29, #-56]
   225f8:	stur	x11, [x29, #-64]
   225fc:	cinc	x8, x8, eq  // eq = none
   22600:	b	22564 <mpfr_sqrt@@Base+0xe7c>
   22604:	mov	w13, #0x1                   	// #1
   22608:	b	225d0 <mpfr_sqrt@@Base+0xee8>
   2260c:	mov	x0, x25
   22610:	cmp	w3, #0x4
   22614:	b.eq	22700 <mpfr_sqrt@@Base+0x1018>  // b.none
   22618:	cmp	w3, #0x2
   2261c:	b.eq	22700 <mpfr_sqrt@@Base+0x1018>  // b.none
   22620:	mov	w1, w3
   22624:	cbnz	w3, 22758 <mpfr_sqrt@@Base+0x1070>
   22628:	sub	x13, x13, #0x1
   2262c:	cmp	x23, x13
   22630:	b.ne	22640 <mpfr_sqrt@@Base+0xf58>  // b.any
   22634:	ldr	x14, [x21, #8]
   22638:	cmn	x14, #0x1
   2263c:	b.eq	22768 <mpfr_sqrt@@Base+0x1080>  // b.none
   22640:	cmp	x23, x13
   22644:	b.lt	226f8 <mpfr_sqrt@@Base+0x1010>  // b.tstop
   22648:	orr	x8, x11, x10
   2264c:	mov	w1, wzr
   22650:	cbnz	x8, 22758 <mpfr_sqrt@@Base+0x1070>
   22654:	ldr	x8, [x21, #8]
   22658:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2265c:	cmp	x8, x9
   22660:	b.eq	226f8 <mpfr_sqrt@@Base+0x1010>  // b.none
   22664:	b	22758 <mpfr_sqrt@@Base+0x1070>
   22668:	sub	x12, x12, #0x1
   2266c:	cmp	x9, x12
   22670:	b.ne	22684 <mpfr_sqrt@@Base+0xf9c>  // b.any
   22674:	cmp	x15, x16
   22678:	b.ne	22684 <mpfr_sqrt@@Base+0xf9c>  // b.any
   2267c:	orr	x12, x11, x14
   22680:	cbnz	x12, 218b0 <mpfr_sqrt@@Base+0x1c8>
   22684:	mov	w2, #0x1                   	// #1
   22688:	mov	x0, x25
   2268c:	mov	w1, w3
   22690:	b	2275c <mpfr_sqrt@@Base+0x1074>
   22694:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   22698:	extr	x11, x8, x10, #1
   2269c:	bfxil	x9, x8, #1, #63
   226a0:	stp	x11, x9, [x21]
   226a4:	ldp	x10, x8, [x29, #-56]
   226a8:	ldur	x9, [x29, #-64]
   226ac:	mov	w3, w22
   226b0:	orr	x8, x9, x8
   226b4:	orr	x13, x8, x10
   226b8:	b	21f8c <mpfr_sqrt@@Base+0x8a4>
   226bc:	mov	x0, x25
   226c0:	mov	w1, w3
   226c4:	cmp	w3, #0x4
   226c8:	b.eq	22738 <mpfr_sqrt@@Base+0x1050>  // b.none
   226cc:	cmp	w1, #0x2
   226d0:	b.eq	22738 <mpfr_sqrt@@Base+0x1050>  // b.none
   226d4:	cbnz	w1, 22758 <mpfr_sqrt@@Base+0x1070>
   226d8:	sub	x8, x13, #0x1
   226dc:	cmp	x9, x8
   226e0:	b.lt	226f8 <mpfr_sqrt@@Base+0x1010>  // b.tstop
   226e4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   226e8:	cmp	x10, x8
   226ec:	mov	w1, wzr
   226f0:	b.ne	22758 <mpfr_sqrt@@Base+0x1070>  // b.any
   226f4:	cbnz	x12, 22758 <mpfr_sqrt@@Base+0x1070>
   226f8:	mov	w1, #0x1                   	// #1
   226fc:	b	22758 <mpfr_sqrt@@Base+0x1070>
   22700:	sub	x13, x13, #0x1
   22704:	mov	w1, w3
   22708:	cmp	x23, x13
   2270c:	b.ne	22758 <mpfr_sqrt@@Base+0x1070>  // b.any
   22710:	ldr	x13, [x21, #8]
   22714:	cmn	x13, #0x1
   22718:	b.ne	22758 <mpfr_sqrt@@Base+0x1070>  // b.any
   2271c:	cmp	x10, x12
   22720:	b.ne	22758 <mpfr_sqrt@@Base+0x1070>  // b.any
   22724:	orr	x10, x11, x9
   22728:	mov	x25, x0
   2272c:	mov	w3, w1
   22730:	cbnz	x10, 21ff4 <mpfr_sqrt@@Base+0x90c>
   22734:	b	22758 <mpfr_sqrt@@Base+0x1070>
   22738:	sub	x13, x13, #0x1
   2273c:	cmp	x9, x13
   22740:	b.ne	22758 <mpfr_sqrt@@Base+0x1070>  // b.any
   22744:	cmn	x10, #0x1
   22748:	b.ne	22758 <mpfr_sqrt@@Base+0x1070>  // b.any
   2274c:	mov	x25, x0
   22750:	mov	w3, w1
   22754:	cbnz	x12, 221d4 <mpfr_sqrt@@Base+0xaec>
   22758:	mov	w2, #0x1                   	// #1
   2275c:	bl	c420 <mpfr_underflow@plt>
   22760:	mov	w22, w0
   22764:	b	22140 <mpfr_sqrt@@Base+0xa58>
   22768:	cmp	x10, x12
   2276c:	b.ne	22640 <mpfr_sqrt@@Base+0xf58>  // b.any
   22770:	mov	x25, x0
   22774:	mov	w3, w1
   22778:	cbnz	x9, 21ff4 <mpfr_sqrt@@Base+0x90c>
   2277c:	b	22640 <mpfr_sqrt@@Base+0xf58>

0000000000022780 <mpfr_sqrt_ui@@Base>:
   22780:	sub	sp, sp, #0x80
   22784:	stp	x20, x19, [sp, #112]
   22788:	mov	x19, x0
   2278c:	stp	x29, x30, [sp, #32]
   22790:	str	x27, [sp, #48]
   22794:	stp	x26, x25, [sp, #64]
   22798:	stp	x24, x23, [sp, #80]
   2279c:	stp	x22, x21, [sp, #96]
   227a0:	add	x29, sp, #0x20
   227a4:	cbz	x1, 22884 <mpfr_sqrt_ui@@Base+0x104>
   227a8:	add	x9, x29, #0x18
   227ac:	clz	x11, x1
   227b0:	mov	w8, #0x40                  	// #64
   227b4:	mov	w10, #0x1                   	// #1
   227b8:	str	x9, [sp, #24]
   227bc:	lsl	x9, x1, x11
   227c0:	mov	w20, w2
   227c4:	str	x8, [sp]
   227c8:	str	w10, [sp, #8]
   227cc:	str	x9, [x29, #24]
   227d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   227d4:	ldr	x1, [x0, #2656]
   227d8:	add	x0, x0, #0xa60
   227dc:	blr	x1
   227e0:	mrs	x24, tpidr_el0
   227e4:	ldr	w25, [x24, x0]
   227e8:	mov	x21, x0
   227ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   227f0:	ldr	x1, [x0, #2592]
   227f4:	add	x0, x0, #0xa20
   227f8:	blr	x1
   227fc:	ldr	x26, [x24, x0]
   22800:	mov	x22, x0
   22804:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22808:	ldr	x1, [x0, #2624]
   2280c:	add	x0, x0, #0xa40
   22810:	blr	x1
   22814:	ldr	x27, [x24, x0]
   22818:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2281c:	mov	x23, x0
   22820:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   22824:	str	x10, [x24, x0]
   22828:	sub	x8, x8, x11
   2282c:	mov	x1, sp
   22830:	mov	x0, x19
   22834:	str	x9, [x24, x22]
   22838:	str	x8, [sp, #16]
   2283c:	bl	c990 <mpfr_sqrt@plt>
   22840:	str	w25, [x24, x21]
   22844:	str	x26, [x24, x22]
   22848:	str	x27, [x24, x23]
   2284c:	ldr	x9, [x19, #16]
   22850:	mov	w8, w0
   22854:	cmp	x9, x27
   22858:	b.gt	228bc <mpfr_sqrt_ui@@Base+0x13c>
   2285c:	cmp	x9, x26
   22860:	b.lt	228bc <mpfr_sqrt_ui@@Base+0x13c>  // b.tstop
   22864:	cbz	w8, 22898 <mpfr_sqrt_ui@@Base+0x118>
   22868:	orr	w9, w25, #0x8
   2286c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22870:	ldr	x1, [x0, #2656]
   22874:	add	x0, x0, #0xa60
   22878:	blr	x1
   2287c:	str	w9, [x24, x0]
   22880:	b	22898 <mpfr_sqrt_ui@@Base+0x118>
   22884:	mov	w8, wzr
   22888:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2288c:	mov	w10, #0x1                   	// #1
   22890:	str	x9, [x19, #16]
   22894:	str	w10, [x19, #8]
   22898:	ldp	x20, x19, [sp, #112]
   2289c:	ldp	x22, x21, [sp, #96]
   228a0:	ldp	x24, x23, [sp, #80]
   228a4:	ldp	x26, x25, [sp, #64]
   228a8:	ldr	x27, [sp, #48]
   228ac:	ldp	x29, x30, [sp, #32]
   228b0:	mov	w0, w8
   228b4:	add	sp, sp, #0x80
   228b8:	ret
   228bc:	mov	x0, x19
   228c0:	mov	w1, w8
   228c4:	mov	w2, w20
   228c8:	bl	cb80 <mpfr_check_range@plt>
   228cc:	mov	w8, w0
   228d0:	b	22898 <mpfr_sqrt_ui@@Base+0x118>

00000000000228d4 <mpfr_sub@@Base>:
   228d4:	sub	sp, sp, #0x30
   228d8:	stp	x29, x30, [sp, #16]
   228dc:	ldr	x9, [x1, #16]
   228e0:	mov	x10, #0x2                   	// #2
   228e4:	movk	x10, #0x8000, lsl #48
   228e8:	add	x12, x10, #0x3
   228ec:	str	x19, [sp, #32]
   228f0:	mov	x8, x1
   228f4:	cmp	x9, x12
   228f8:	mov	x19, x0
   228fc:	add	x29, sp, #0x10
   22900:	b.lt	2296c <mpfr_sub@@Base+0x98>  // b.tstop
   22904:	ldr	x11, [x2, #16]
   22908:	cmp	x11, x12
   2290c:	b.lt	22978 <mpfr_sub@@Base+0xa4>  // b.tstop
   22910:	ldr	w10, [x8, #8]
   22914:	ldr	w12, [x2, #8]
   22918:	cmp	w10, w12
   2291c:	b.ne	229b0 <mpfr_sub@@Base+0xdc>  // b.any
   22920:	ldr	x9, [x19]
   22924:	ldr	x10, [x8]
   22928:	cmp	x9, x10
   2292c:	b.ne	22954 <mpfr_sub@@Base+0x80>  // b.any
   22930:	ldr	x10, [x2]
   22934:	cmp	x9, x10
   22938:	b.ne	22954 <mpfr_sub@@Base+0x80>  // b.any
   2293c:	mov	x0, x19
   22940:	ldr	x19, [sp, #32]
   22944:	ldp	x29, x30, [sp, #16]
   22948:	mov	x1, x8
   2294c:	add	sp, sp, #0x30
   22950:	b	c190 <mpfr_sub1sp@plt>
   22954:	mov	x0, x19
   22958:	mov	x1, x8
   2295c:	ldr	x19, [sp, #32]
   22960:	ldp	x29, x30, [sp, #16]
   22964:	add	sp, sp, #0x30
   22968:	b	cac0 <mpfr_sub1@plt>
   2296c:	cmp	x9, x10
   22970:	b.eq	22980 <mpfr_sub@@Base+0xac>  // b.none
   22974:	ldr	x11, [x2, #16]
   22978:	cmp	x11, x10
   2297c:	b.ne	22a08 <mpfr_sub@@Base+0x134>  // b.any
   22980:	str	x10, [x19, #16]
   22984:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   22988:	ldr	x1, [x0, #2656]
   2298c:	add	x0, x0, #0xa60
   22990:	blr	x1
   22994:	mov	x8, x0
   22998:	mrs	x9, tpidr_el0
   2299c:	ldr	w10, [x9, x8]
   229a0:	mov	w0, wzr
   229a4:	orr	w10, w10, #0x4
   229a8:	str	w10, [x9, x8]
   229ac:	b	22a90 <mpfr_sub@@Base+0x1bc>
   229b0:	cmp	x9, x11
   229b4:	b.ge	22a3c <mpfr_sub@@Base+0x168>  // b.tcont
   229b8:	ldr	x9, [x19]
   229bc:	ldr	x11, [x8]
   229c0:	cmp	w3, #0x3
   229c4:	mov	w10, #0x2                   	// #2
   229c8:	csel	w10, w10, w3, eq  // eq = none
   229cc:	cmp	w3, #0x2
   229d0:	mov	w12, #0x3                   	// #3
   229d4:	csel	w3, w12, w10, eq  // eq = none
   229d8:	cmp	x9, x11
   229dc:	b.ne	22bb8 <mpfr_sub@@Base+0x2e4>  // b.any
   229e0:	ldr	x10, [x2]
   229e4:	cmp	x9, x10
   229e8:	b.ne	22bb8 <mpfr_sub@@Base+0x2e4>  // b.any
   229ec:	mov	x0, x19
   229f0:	mov	x1, x2
   229f4:	mov	x2, x8
   229f8:	bl	cc00 <mpfr_add1sp@plt>
   229fc:	ldr	w8, [x19, #8]
   22a00:	neg	w0, w0
   22a04:	b	22a88 <mpfr_sub@@Base+0x1b4>
   22a08:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   22a0c:	cmp	x9, x12
   22a10:	b.ne	22a70 <mpfr_sub@@Base+0x19c>  // b.any
   22a14:	ldr	w8, [x8, #8]
   22a18:	cmp	x11, x12
   22a1c:	b.ne	22a2c <mpfr_sub@@Base+0x158>  // b.any
   22a20:	ldr	w9, [x2, #8]
   22a24:	cmp	w8, w9
   22a28:	b.eq	22980 <mpfr_sub@@Base+0xac>  // b.none
   22a2c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   22a30:	mov	w0, wzr
   22a34:	str	x9, [x19, #16]
   22a38:	b	22a8c <mpfr_sub@@Base+0x1b8>
   22a3c:	ldr	x9, [x19]
   22a40:	ldr	x10, [x8]
   22a44:	cmp	x9, x10
   22a48:	b.ne	22bc8 <mpfr_sub@@Base+0x2f4>  // b.any
   22a4c:	ldr	x10, [x2]
   22a50:	cmp	x9, x10
   22a54:	b.ne	22bc8 <mpfr_sub@@Base+0x2f4>  // b.any
   22a58:	mov	x0, x19
   22a5c:	ldr	x19, [sp, #32]
   22a60:	ldp	x29, x30, [sp, #16]
   22a64:	mov	x1, x8
   22a68:	add	sp, sp, #0x30
   22a6c:	b	cc00 <mpfr_add1sp@plt>
   22a70:	cmp	x11, x12
   22a74:	b.ne	22aa0 <mpfr_sub@@Base+0x1cc>  // b.any
   22a78:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   22a7c:	str	x8, [x19, #16]
   22a80:	ldr	w8, [x2, #8]
   22a84:	mov	w0, wzr
   22a88:	neg	w8, w8
   22a8c:	str	w8, [x19, #8]
   22a90:	ldr	x19, [sp, #32]
   22a94:	ldp	x29, x30, [sp, #16]
   22a98:	add	sp, sp, #0x30
   22a9c:	ret
   22aa0:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   22aa4:	cmp	x9, x12
   22aa8:	str	w3, [x29, #28]
   22aac:	str	x2, [sp, #8]
   22ab0:	b.ne	22aec <mpfr_sub@@Base+0x218>  // b.any
   22ab4:	cmp	x11, x12
   22ab8:	b.ne	22b18 <mpfr_sub@@Base+0x244>  // b.any
   22abc:	ldr	w9, [x8, #8]
   22ac0:	ldr	w8, [x29, #28]
   22ac4:	cmp	w8, #0x3
   22ac8:	b.ne	22b54 <mpfr_sub@@Base+0x280>  // b.any
   22acc:	cmp	w9, #0x1
   22ad0:	mov	w8, #0xffffffff            	// #-1
   22ad4:	b.lt	22b6c <mpfr_sub@@Base+0x298>  // b.tstop
   22ad8:	ldr	x9, [sp, #8]
   22adc:	ldr	w9, [x9, #8]
   22ae0:	cmp	w9, #0x0
   22ae4:	cneg	w8, w8, lt  // lt = tstop
   22ae8:	b	22b6c <mpfr_sub@@Base+0x298>
   22aec:	ldr	w3, [x8, #8]
   22af0:	cmp	x11, x12
   22af4:	str	x8, [sp]
   22af8:	b.ne	22b34 <mpfr_sub@@Base+0x260>  // b.any
   22afc:	mov	x0, x19
   22b00:	ldr	x1, [sp]
   22b04:	ldr	w2, [x29, #28]
   22b08:	ldr	x19, [sp, #32]
   22b0c:	ldp	x29, x30, [sp, #16]
   22b10:	add	sp, sp, #0x30
   22b14:	b	c6f0 <mpfr_set4@plt>
   22b18:	mov	x0, x19
   22b1c:	ldr	x1, [sp, #8]
   22b20:	ldr	w2, [x29, #28]
   22b24:	ldr	x19, [sp, #32]
   22b28:	ldp	x29, x30, [sp, #16]
   22b2c:	add	sp, sp, #0x30
   22b30:	b	be20 <mpfr_neg@plt>
   22b34:	ldr	x8, [sp, #8]
   22b38:	ldr	w8, [x8, #8]
   22b3c:	cmp	w3, w8
   22b40:	b.ne	22b80 <mpfr_sub@@Base+0x2ac>  // b.any
   22b44:	ldp	x1, x2, [sp]
   22b48:	ldr	w3, [x29, #28]
   22b4c:	mov	x0, x19
   22b50:	b	2295c <mpfr_sub@@Base+0x88>
   22b54:	mov	w8, #0x1                   	// #1
   22b58:	tbz	w9, #31, 22b6c <mpfr_sub@@Base+0x298>
   22b5c:	ldr	x9, [sp, #8]
   22b60:	ldr	w9, [x9, #8]
   22b64:	cmp	w9, #0x1
   22b68:	cneg	w8, w8, ge  // ge = tcont
   22b6c:	str	w8, [x19, #8]
   22b70:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   22b74:	mov	w0, wzr
   22b78:	str	x8, [x19, #16]
   22b7c:	b	22a90 <mpfr_sub@@Base+0x1bc>
   22b80:	add	x8, x10, #0x2
   22b84:	cmp	x9, x8
   22b88:	b.eq	22bd4 <mpfr_sub@@Base+0x300>  // b.none
   22b8c:	cmp	x11, x8
   22b90:	b.eq	22bd4 <mpfr_sub@@Base+0x300>  // b.none
   22b94:	cmp	x9, x11
   22b98:	b.lt	22be0 <mpfr_sub@@Base+0x30c>  // b.tstop
   22b9c:	ldp	x1, x2, [sp]
   22ba0:	ldr	w3, [x29, #28]
   22ba4:	mov	x0, x19
   22ba8:	ldr	x19, [sp, #32]
   22bac:	ldp	x29, x30, [sp, #16]
   22bb0:	add	sp, sp, #0x30
   22bb4:	b	c7d0 <mpfr_add1@plt>
   22bb8:	mov	x0, x19
   22bbc:	mov	x1, x2
   22bc0:	mov	x2, x8
   22bc4:	b	22c04 <mpfr_sub@@Base+0x330>
   22bc8:	mov	x0, x19
   22bcc:	mov	x1, x8
   22bd0:	b	22ba8 <mpfr_sub@@Base+0x2d4>
   22bd4:	ldp	x0, x1, [sp]
   22bd8:	bl	cb00 <mpfr_ubf_exp_less_p@plt>
   22bdc:	cbz	w0, 22b9c <mpfr_sub@@Base+0x2c8>
   22be0:	ldr	w8, [x29, #28]
   22be4:	ldp	x2, x1, [sp]
   22be8:	mov	w9, #0x2                   	// #2
   22bec:	mov	x0, x19
   22bf0:	cmp	w8, #0x3
   22bf4:	csel	w9, w9, w8, eq  // eq = none
   22bf8:	cmp	w8, #0x2
   22bfc:	mov	w8, #0x3                   	// #3
   22c00:	csel	w3, w8, w9, eq  // eq = none
   22c04:	bl	c7d0 <mpfr_add1@plt>
   22c08:	b	229fc <mpfr_sub@@Base+0x128>

0000000000022c0c <mpfr_sub1@@Base>:
   22c0c:	stp	x29, x30, [sp, #-96]!
   22c10:	stp	x28, x27, [sp, #16]
   22c14:	stp	x26, x25, [sp, #32]
   22c18:	stp	x24, x23, [sp, #48]
   22c1c:	stp	x22, x21, [sp, #64]
   22c20:	stp	x20, x19, [sp, #80]
   22c24:	mov	x29, sp
   22c28:	sub	sp, sp, #0x40
   22c2c:	stur	xzr, [x29, #-16]
   22c30:	ldr	x8, [x0]
   22c34:	ldr	x20, [x0, #24]
   22c38:	mov	x19, x2
   22c3c:	mov	x22, x1
   22c40:	sub	x9, x8, #0x1
   22c44:	mov	x23, x0
   22c48:	add	x8, x8, #0x3e
   22c4c:	cmp	x9, #0x0
   22c50:	sub	x2, x29, #0x8
   22c54:	mov	x0, x1
   22c58:	mov	x1, x19
   22c5c:	mov	w25, w3
   22c60:	csel	x21, x8, x9, lt  // lt = tstop
   22c64:	bl	be60 <mpfr_cmp2@plt>
   22c68:	cbz	w0, 23324 <mpfr_sub1@@Base+0x718>
   22c6c:	ldr	w8, [x22, #8]
   22c70:	cmp	w0, #0x0
   22c74:	stur	w25, [x29, #-28]
   22c78:	csel	x25, x19, x22, lt  // lt = tstop
   22c7c:	cneg	w8, w8, lt  // lt = tstop
   22c80:	str	w8, [x23, #8]
   22c84:	ldr	x24, [x25, #16]
   22c88:	mov	x8, #0x4                   	// #4
   22c8c:	asr	x9, x21, #6
   22c90:	movk	x8, #0x8000, lsl #48
   22c94:	csel	x19, x22, x19, lt  // lt = tstop
   22c98:	cmp	x24, x8
   22c9c:	add	x13, x9, #0x1
   22ca0:	stur	x9, [x29, #-48]
   22ca4:	stur	x13, [x29, #-24]
   22ca8:	b.eq	23344 <mpfr_sub1@@Base+0x738>  // b.none
   22cac:	ldr	x9, [x19, #16]
   22cb0:	cmp	x9, x8
   22cb4:	b.eq	23350 <mpfr_sub1@@Base+0x744>  // b.none
   22cb8:	sub	x28, x24, x9
   22cbc:	ldr	x26, [x23]
   22cc0:	ldr	x8, [x25]
   22cc4:	cmp	x26, x8
   22cc8:	csel	x9, x26, x8, gt
   22ccc:	add	x9, x9, #0x2
   22cd0:	cmp	x9, x28
   22cd4:	b.le	23368 <mpfr_sub1@@Base+0x75c>
   22cd8:	ldur	x10, [x29, #-8]
   22cdc:	sub	x9, x8, #0x1
   22ce0:	add	x8, x8, #0x3e
   22ce4:	cmp	x9, #0x0
   22ce8:	csel	x8, x8, x9, lt  // lt = tstop
   22cec:	neg	w9, w10
   22cf0:	stp	x26, x24, [x29, #-64]
   22cf4:	and	w26, w9, #0x3f
   22cf8:	add	x9, x10, x26
   22cfc:	asr	x8, x8, #6
   22d00:	add	x10, x9, #0x3f
   22d04:	cmp	x9, #0x0
   22d08:	add	x27, x8, #0x1
   22d0c:	csel	x21, x10, x9, lt  // lt = tstop
   22d10:	stur	x23, [x29, #-40]
   22d14:	cbz	w26, 2338c <mpfr_sub1@@Base+0x780>
   22d18:	add	x22, x8, #0x2
   22d1c:	lsl	x1, x22, #3
   22d20:	cmp	x1, #0x4, lsl #12
   22d24:	b.hi	234fc <mpfr_sub1@@Base+0x8f0>  // b.pmore
   22d28:	add	x9, x1, #0xf
   22d2c:	mov	x8, sp
   22d30:	and	x9, x9, #0xfffffffffffffff0
   22d34:	sub	x24, x8, x9
   22d38:	mov	sp, x24
   22d3c:	ldr	x1, [x25, #24]
   22d40:	add	x0, x24, #0x8
   22d44:	mov	x2, x27
   22d48:	mov	w3, w26
   22d4c:	bl	bd90 <__gmpn_rshift@plt>
   22d50:	ldur	x13, [x29, #-24]
   22d54:	mov	x27, x22
   22d58:	str	x0, [x24]
   22d5c:	ldr	x8, [x19]
   22d60:	ldur	w9, [x29, #-8]
   22d64:	sub	x10, x8, #0x1
   22d68:	add	x8, x8, #0x3e
   22d6c:	cmp	x10, #0x0
   22d70:	csel	x8, x8, x10, lt  // lt = tstop
   22d74:	sub	w9, w28, w9
   22d78:	asr	x8, x8, #6
   22d7c:	ands	w22, w9, #0x3f
   22d80:	add	x23, x8, #0x1
   22d84:	b.eq	233dc <mpfr_sub1@@Base+0x7d0>  // b.none
   22d88:	add	x25, x8, #0x2
   22d8c:	lsl	x1, x25, #3
   22d90:	cmp	x1, #0x4, lsl #12
   22d94:	b.hi	2350c <mpfr_sub1@@Base+0x900>  // b.pmore
   22d98:	add	x9, x1, #0xf
   22d9c:	mov	x8, sp
   22da0:	and	x9, x9, #0xfffffffffffffff0
   22da4:	sub	x26, x8, x9
   22da8:	mov	sp, x26
   22dac:	ldr	x1, [x19, #24]
   22db0:	add	x0, x26, #0x8
   22db4:	mov	x2, x23
   22db8:	mov	w3, w22
   22dbc:	bl	bd90 <__gmpn_rshift@plt>
   22dc0:	mov	x23, x25
   22dc4:	str	x0, [x26]
   22dc8:	ldur	x13, [x29, #-24]
   22dcc:	ldur	x10, [x29, #-8]
   22dd0:	asr	x8, x21, #6
   22dd4:	subs	x9, x28, x10
   22dd8:	b.le	22df0 <mpfr_sub1@@Base+0x1e4>
   22ddc:	add	x10, x9, #0x3f
   22de0:	cmp	x9, #0x0
   22de4:	csel	x9, x10, x9, lt  // lt = tstop
   22de8:	neg	x21, x9, asr #6
   22dec:	b	22e08 <mpfr_sub1@@Base+0x1fc>
   22df0:	sub	x9, x10, x28
   22df4:	add	x10, x9, #0x3f
   22df8:	add	x9, x9, #0x7e
   22dfc:	cmp	x10, #0x0
   22e00:	csel	x9, x9, x10, lt  // lt = tstop
   22e04:	asr	x21, x9, #6
   22e08:	ldur	x28, [x29, #-48]
   22e0c:	add	x22, x8, x13
   22e10:	subs	x25, x22, x27
   22e14:	b.gt	23424 <mpfr_sub1@@Base+0x818>
   22e18:	add	x8, x24, x27, lsl #3
   22e1c:	sub	x1, x8, x22, lsl #3
   22e20:	cmp	x20, x1
   22e24:	b.eq	22e38 <mpfr_sub1@@Base+0x22c>  // b.none
   22e28:	lsl	x2, x13, #3
   22e2c:	mov	x0, x20
   22e30:	bl	bad0 <memcpy@plt>
   22e34:	ldur	x13, [x29, #-24]
   22e38:	ldur	w25, [x29, #-28]
   22e3c:	add	x19, x21, x13
   22e40:	cmp	x19, #0x1
   22e44:	b.lt	22f3c <mpfr_sub1@@Base+0x330>  // b.tstop
   22e48:	tbnz	x21, #63, 22e74 <mpfr_sub1@@Base+0x268>
   22e4c:	cmp	x23, x19
   22e50:	b.ge	22ea8 <mpfr_sub1@@Base+0x29c>  // b.tcont
   22e54:	subs	x8, x21, x23
   22e58:	b.ge	22f3c <mpfr_sub1@@Base+0x330>  // b.tcont
   22e5c:	add	x9, x20, x13, lsl #3
   22e60:	add	x0, x9, x8, lsl #3
   22e64:	sub	x3, x23, x21
   22e68:	mov	x1, x0
   22e6c:	mov	x2, x26
   22e70:	b	22ebc <mpfr_sub1@@Base+0x2b0>
   22e74:	mov	x3, x23
   22e78:	stur	x27, [x29, #-24]
   22e7c:	mov	x27, x24
   22e80:	mov	x24, x28
   22e84:	cmp	x23, x19
   22e88:	b.ge	22ec8 <mpfr_sub1@@Base+0x2bc>  // b.tcont
   22e8c:	add	x8, x20, x13, lsl #3
   22e90:	add	x8, x8, x21, lsl #3
   22e94:	sub	x0, x8, x3, lsl #3
   22e98:	mov	x1, x0
   22e9c:	mov	x2, x26
   22ea0:	mov	x23, x3
   22ea4:	b	22ee0 <mpfr_sub1@@Base+0x2d4>
   22ea8:	add	x8, x26, x23, lsl #3
   22eac:	sub	x2, x8, x19, lsl #3
   22eb0:	mov	x0, x20
   22eb4:	mov	x1, x20
   22eb8:	mov	x3, x13
   22ebc:	bl	bf10 <__gmpn_sub_n@plt>
   22ec0:	ldur	x13, [x29, #-24]
   22ec4:	b	22f3c <mpfr_sub1@@Base+0x330>
   22ec8:	add	x8, x26, x3, lsl #3
   22ecc:	mov	x23, x3
   22ed0:	sub	x2, x8, x19, lsl #3
   22ed4:	mov	x0, x20
   22ed8:	mov	x1, x20
   22edc:	mov	x3, x19
   22ee0:	mov	x28, x13
   22ee4:	bl	bf10 <__gmpn_sub_n@plt>
   22ee8:	add	x8, x20, x28, lsl #3
   22eec:	ldr	x9, [x8, x21, lsl #3]
   22ef0:	mov	x13, x28
   22ef4:	mov	x28, x24
   22ef8:	mov	x24, x27
   22efc:	ldur	x27, [x29, #-24]
   22f00:	subs	x9, x9, x0
   22f04:	str	x9, [x8, x21, lsl #3]
   22f08:	b.cs	22f3c <mpfr_sub1@@Base+0x330>  // b.hs, b.nlast
   22f0c:	add	x9, x21, x28
   22f10:	neg	x8, x21
   22f14:	add	x9, x20, x9, lsl #3
   22f18:	mov	w10, #0x2                   	// #2
   22f1c:	sub	x11, x10, #0x1
   22f20:	cmp	x11, x8
   22f24:	b.ge	22f3c <mpfr_sub1@@Base+0x330>  // b.tcont
   22f28:	ldr	x11, [x9, x10, lsl #3]
   22f2c:	sub	x12, x11, #0x1
   22f30:	str	x12, [x9, x10, lsl #3]
   22f34:	add	x10, x10, #0x1
   22f38:	cbz	x11, 22f1c <mpfr_sub1@@Base+0x310>
   22f3c:	ldur	x10, [x29, #-64]
   22f40:	lsl	x8, x13, #6
   22f44:	ldr	x9, [x20]
   22f48:	mov	w11, #0x1                   	// #1
   22f4c:	sub	x10, x8, x10
   22f50:	lsl	x8, x11, x10
   22f54:	sub	x11, x8, #0x1
   22f58:	and	x11, x9, x11
   22f5c:	sub	x9, x9, x11
   22f60:	cmp	w25, #0x5
   22f64:	str	x9, [x20]
   22f68:	b.eq	22f90 <mpfr_sub1@@Base+0x384>  // b.none
   22f6c:	cbnz	w25, 22f9c <mpfr_sub1@@Base+0x390>
   22f70:	cbz	w10, 235e4 <mpfr_sub1@@Base+0x9d8>
   22f74:	sub	w12, w10, #0x1
   22f78:	mov	w13, #0x1                   	// #1
   22f7c:	lsl	x12, x13, x12
   22f80:	cmp	x11, x12
   22f84:	b.ls	22fcc <mpfr_sub1@@Base+0x3c0>  // b.plast
   22f88:	mov	w25, wzr
   22f8c:	b	231d4 <mpfr_sub1@@Base+0x5c8>
   22f90:	mov	w19, wzr
   22f94:	mov	w21, wzr
   22f98:	b	23220 <mpfr_sub1@@Base+0x614>
   22f9c:	ldur	x12, [x29, #-40]
   22fa0:	ldr	w12, [x12, #8]
   22fa4:	add	w12, w25, w12, lsr #31
   22fa8:	cmp	w12, #0x3
   22fac:	csinc	w25, w25, wzr, ne  // ne = any
   22fb0:	cbz	x11, 22ff8 <mpfr_sub1@@Base+0x3ec>
   22fb4:	cmp	w25, #0x1
   22fb8:	b.ne	231d4 <mpfr_sub1@@Base+0x5c8>  // b.any
   22fbc:	mov	w8, #0x1                   	// #1
   22fc0:	mov	w21, wzr
   22fc4:	stur	w8, [x29, #-28]
   22fc8:	b	22fe0 <mpfr_sub1@@Base+0x3d4>
   22fcc:	cbz	x11, 22fe8 <mpfr_sub1@@Base+0x3dc>
   22fd0:	cmp	x11, x12
   22fd4:	b.cs	22fe8 <mpfr_sub1@@Base+0x3dc>  // b.hs, b.nlast
   22fd8:	mov	w21, wzr
   22fdc:	stur	wzr, [x29, #-28]
   22fe0:	mov	w19, #0xffffffff            	// #-1
   22fe4:	b	23220 <mpfr_sub1@@Base+0x614>
   22fe8:	cmp	x11, #0x0
   22fec:	cset	w11, ne  // ne = any
   22ff0:	mov	w25, wzr
   22ff4:	lsl	w11, w11, #1
   22ff8:	sub	x12, x27, x22
   22ffc:	sub	x13, x23, x19
   23000:	cmp	x12, #0x0
   23004:	cset	w15, gt
   23008:	cmp	x13, #0x0
   2300c:	cset	w16, gt
   23010:	b.gt	23038 <mpfr_sub1@@Base+0x42c>
   23014:	cmp	x12, #0x1
   23018:	b.ge	23038 <mpfr_sub1@@Base+0x42c>  // b.tcont
   2301c:	mov	w19, wzr
   23020:	cbnz	w25, 23184 <mpfr_sub1@@Base+0x578>
   23024:	cbz	w11, 23184 <mpfr_sub1@@Base+0x578>
   23028:	tst	x9, x8
   2302c:	b.eq	2318c <mpfr_sub1@@Base+0x580>  // b.none
   23030:	tbz	w11, #31, 22f88 <mpfr_sub1@@Base+0x37c>
   23034:	b	23144 <mpfr_sub1@@Base+0x538>
   23038:	mov	w17, wzr
   2303c:	orr	w14, w25, w10
   23040:	mov	w19, #0x1                   	// #1
   23044:	tbz	w15, #0, 23058 <mpfr_sub1@@Base+0x44c>
   23048:	sub	x12, x12, #0x1
   2304c:	ldr	x15, [x24, x12, lsl #3]
   23050:	tbnz	w16, #0, 23060 <mpfr_sub1@@Base+0x454>
   23054:	b	2306c <mpfr_sub1@@Base+0x460>
   23058:	mov	x15, xzr
   2305c:	tbz	w16, #0, 2306c <mpfr_sub1@@Base+0x460>
   23060:	cmp	x13, x23
   23064:	sub	x13, x13, #0x1
   23068:	b.le	230d0 <mpfr_sub1@@Base+0x4c4>
   2306c:	mov	x16, xzr
   23070:	cbnz	w11, 23084 <mpfr_sub1@@Base+0x478>
   23074:	cmp	x15, x16
   23078:	orr	w11, w17, #0xfffffffe
   2307c:	cset	w18, hi  // hi = pmore
   23080:	csel	w11, w11, w18, cc  // cc = lo, ul, last
   23084:	orr	w17, w14, w17
   23088:	cbz	w17, 2309c <mpfr_sub1@@Base+0x490>
   2308c:	tbnz	w11, #31, 230e4 <mpfr_sub1@@Base+0x4d8>
   23090:	cbz	w11, 23110 <mpfr_sub1@@Base+0x504>
   23094:	cbz	w25, 230bc <mpfr_sub1@@Base+0x4b0>
   23098:	b	231b0 <mpfr_sub1@@Base+0x5a4>
   2309c:	tbnz	w11, #31, 230dc <mpfr_sub1@@Base+0x4d0>
   230a0:	eor	x17, x15, #0x8000000000000000
   230a4:	cmp	x16, #0x0
   230a8:	csel	x15, x15, x17, ge  // ge = tcont
   230ac:	cbz	w11, 23110 <mpfr_sub1@@Base+0x504>
   230b0:	orr	x16, x16, #0x8000000000000000
   230b4:	mov	w11, #0x2                   	// #2
   230b8:	cbnz	w25, 231b0 <mpfr_sub1@@Base+0x5a4>
   230bc:	cmp	x15, x16
   230c0:	b.hi	231c4 <mpfr_sub1@@Base+0x5b8>  // b.pmore
   230c4:	cmp	x15, x16
   230c8:	b.cs	23110 <mpfr_sub1@@Base+0x504>  // b.hs, b.nlast
   230cc:	b	22fd8 <mpfr_sub1@@Base+0x3cc>
   230d0:	ldr	x16, [x26, x13, lsl #3]
   230d4:	cbnz	w11, 23084 <mpfr_sub1@@Base+0x478>
   230d8:	b	23074 <mpfr_sub1@@Base+0x468>
   230dc:	tbnz	x16, #63, 23134 <mpfr_sub1@@Base+0x528>
   230e0:	eor	x15, x15, #0x8000000000000000
   230e4:	cbnz	w25, 2313c <mpfr_sub1@@Base+0x530>
   230e8:	mov	w21, wzr
   230ec:	cmn	w11, #0x1
   230f0:	b.eq	23318 <mpfr_sub1@@Base+0x70c>  // b.none
   230f4:	cmp	w10, #0x0
   230f8:	b.gt	23318 <mpfr_sub1@@Base+0x70c>
   230fc:	cmp	x15, x16
   23100:	mov	w15, w21
   23104:	stur	w21, [x29, #-28]
   23108:	b.hi	23220 <mpfr_sub1@@Base+0x614>  // b.pmore
   2310c:	b.cc	23144 <mpfr_sub1@@Base+0x538>  // b.lo, b.ul, b.last
   23110:	cmp	x12, #0x0
   23114:	cset	w15, gt
   23118:	cmp	x13, #0x0
   2311c:	cset	w16, gt
   23120:	mov	w17, #0x1                   	// #1
   23124:	b.gt	23044 <mpfr_sub1@@Base+0x438>
   23128:	cmp	x12, #0x0
   2312c:	b.gt	23044 <mpfr_sub1@@Base+0x438>
   23130:	b	2301c <mpfr_sub1@@Base+0x410>
   23134:	eor	x16, x16, #0x8000000000000000
   23138:	cbz	w25, 230e8 <mpfr_sub1@@Base+0x4dc>
   2313c:	cmp	w25, #0x1
   23140:	b.ne	23200 <mpfr_sub1@@Base+0x5f4>  // b.any
   23144:	subs	x8, x9, x8
   23148:	str	x8, [x20]
   2314c:	b.cs	231a4 <mpfr_sub1@@Base+0x598>  // b.hs, b.nlast
   23150:	ldur	x22, [x29, #-40]
   23154:	ldur	x23, [x29, #-56]
   23158:	mov	w8, #0x1                   	// #1
   2315c:	mov	w19, #0xffffffff            	// #-1
   23160:	cmp	x8, x28
   23164:	b.gt	23308 <mpfr_sub1@@Base+0x6fc>
   23168:	ldr	x9, [x20, x8, lsl #3]
   2316c:	sub	x10, x9, #0x1
   23170:	str	x10, [x20, x8, lsl #3]
   23174:	add	x8, x8, #0x1
   23178:	cbz	x9, 23160 <mpfr_sub1@@Base+0x554>
   2317c:	mov	w21, wzr
   23180:	b	23234 <mpfr_sub1@@Base+0x628>
   23184:	mov	w21, w19
   23188:	b	2321c <mpfr_sub1@@Base+0x610>
   2318c:	cmp	w11, #0x1
   23190:	mov	w8, #0x1                   	// #1
   23194:	mov	w21, wzr
   23198:	stur	wzr, [x29, #-28]
   2319c:	cneg	w19, w8, ge  // ge = tcont
   231a0:	b	23220 <mpfr_sub1@@Base+0x614>
   231a4:	mov	w21, wzr
   231a8:	mov	w19, #0xffffffff            	// #-1
   231ac:	b	2322c <mpfr_sub1@@Base+0x620>
   231b0:	cmp	w25, #0x1
   231b4:	b.ne	231d4 <mpfr_sub1@@Base+0x5c8>  // b.any
   231b8:	mov	w21, wzr
   231bc:	mov	w19, #0xffffffff            	// #-1
   231c0:	b	2321c <mpfr_sub1@@Base+0x610>
   231c4:	cmp	w11, #0x2
   231c8:	mov	w21, wzr
   231cc:	b.ne	23314 <mpfr_sub1@@Base+0x708>  // b.any
   231d0:	mov	w25, w21
   231d4:	adds	x8, x9, x8
   231d8:	str	x8, [x20]
   231dc:	b.cc	23200 <mpfr_sub1@@Base+0x5f4>  // b.lo, b.ul, b.last
   231e0:	mov	w8, #0x1                   	// #1
   231e4:	cmp	x8, x28
   231e8:	b.gt	2320c <mpfr_sub1@@Base+0x600>
   231ec:	ldr	x9, [x20, x8, lsl #3]
   231f0:	adds	x9, x9, #0x1
   231f4:	str	x9, [x20, x8, lsl #3]
   231f8:	add	x8, x8, #0x1
   231fc:	b.cs	231e4 <mpfr_sub1@@Base+0x5d8>  // b.hs, b.nlast
   23200:	mov	w21, wzr
   23204:	mov	w19, #0x1                   	// #1
   23208:	b	2321c <mpfr_sub1@@Base+0x610>
   2320c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   23210:	mov	w19, #0x1                   	// #1
   23214:	mov	w21, #0x1                   	// #1
   23218:	str	x8, [x20, x28, lsl #3]
   2321c:	stur	w25, [x29, #-28]
   23220:	ldr	x8, [x20, x28, lsl #3]
   23224:	tbz	x8, #63, 2351c <mpfr_sub1@@Base+0x910>
   23228:	ldur	w25, [x29, #-28]
   2322c:	ldur	x22, [x29, #-40]
   23230:	ldur	x23, [x29, #-56]
   23234:	ldur	x0, [x29, #-16]
   23238:	cbnz	x0, 23458 <mpfr_sub1@@Base+0x84c>
   2323c:	ldur	x8, [x29, #-8]
   23240:	cbz	x8, 23460 <mpfr_sub1@@Base+0x854>
   23244:	sub	x8, x8, x21
   23248:	stur	x8, [x29, #-8]
   2324c:	sub	x20, x23, x8
   23250:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23254:	ldr	x1, [x0, #2624]
   23258:	add	x0, x0, #0xa40
   2325c:	blr	x1
   23260:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   23264:	cmp	x23, x8
   23268:	mrs	x21, tpidr_el0
   2326c:	b.ne	2327c <mpfr_sub1@@Base+0x670>  // b.any
   23270:	ldr	x8, [x21, x0]
   23274:	cmp	x20, x8
   23278:	b.le	234e0 <mpfr_sub1@@Base+0x8d4>
   2327c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23280:	ldr	x1, [x0, #2592]
   23284:	add	x0, x0, #0xa20
   23288:	blr	x1
   2328c:	ldr	x8, [x21, x0]
   23290:	cmp	x20, x8
   23294:	b.lt	234a4 <mpfr_sub1@@Base+0x898>  // b.tstop
   23298:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2329c:	ldr	x1, [x0, #2624]
   232a0:	add	x0, x0, #0xa40
   232a4:	blr	x1
   232a8:	ldr	x8, [x21, x0]
   232ac:	cmp	x20, x8
   232b0:	b.gt	234cc <mpfr_sub1@@Base+0x8c0>
   232b4:	ldr	w8, [x22, #8]
   232b8:	str	x20, [x22, #16]
   232bc:	mul	w24, w8, w19
   232c0:	cbz	w24, 232e4 <mpfr_sub1@@Base+0x6d8>
   232c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   232c8:	ldr	x1, [x0, #2656]
   232cc:	add	x0, x0, #0xa60
   232d0:	blr	x1
   232d4:	mrs	x8, tpidr_el0
   232d8:	ldr	w9, [x8, x0]
   232dc:	orr	w9, w9, #0x8
   232e0:	str	w9, [x8, x0]
   232e4:	mov	w0, w24
   232e8:	mov	sp, x29
   232ec:	ldp	x20, x19, [sp, #80]
   232f0:	ldp	x22, x21, [sp, #64]
   232f4:	ldp	x24, x23, [sp, #48]
   232f8:	ldp	x26, x25, [sp, #32]
   232fc:	ldp	x28, x27, [sp, #16]
   23300:	ldp	x29, x30, [sp], #96
   23304:	ret
   23308:	mov	w21, wzr
   2330c:	mov	w19, #0xffffffff            	// #-1
   23310:	b	23234 <mpfr_sub1@@Base+0x628>
   23314:	mov	w19, #0xffffffff            	// #-1
   23318:	mov	w8, w21
   2331c:	stur	w21, [x29, #-28]
   23320:	b	23220 <mpfr_sub1@@Base+0x614>
   23324:	cmp	w25, #0x3
   23328:	mov	w8, #0xffffffff            	// #-1
   2332c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   23330:	cneg	w8, w8, ne  // ne = any
   23334:	mov	w24, wzr
   23338:	str	w8, [x23, #8]
   2333c:	str	x9, [x23, #16]
   23340:	b	232e4 <mpfr_sub1@@Base+0x6d8>
   23344:	add	x0, x25, #0x20
   23348:	bl	bcf0 <mpfr_ubf_zexp2exp@plt>
   2334c:	mov	x24, x0
   23350:	mov	x0, x25
   23354:	mov	x1, x19
   23358:	bl	cb50 <mpfr_ubf_diff_exp@plt>
   2335c:	ldur	x13, [x29, #-24]
   23360:	mov	x28, x0
   23364:	b	22cbc <mpfr_sub1@@Base+0xb0>
   23368:	ldur	w9, [x29, #-28]
   2336c:	cmp	w9, #0x5
   23370:	b.ne	2352c <mpfr_sub1@@Base+0x920>  // b.any
   23374:	ldr	w3, [x23, #8]
   23378:	mov	w2, #0x1                   	// #1
   2337c:	mov	x0, x23
   23380:	mov	x1, x25
   23384:	bl	c6f0 <mpfr_set4@plt>
   23388:	b	23670 <mpfr_sub1@@Base+0xa64>
   2338c:	ldr	x24, [x25, #24]
   23390:	cmp	x20, x24
   23394:	b.ne	22d5c <mpfr_sub1@@Base+0x150>  // b.any
   23398:	lsl	x22, x27, #3
   2339c:	mov	x23, x27
   233a0:	cmp	x22, #0x4, lsl #12
   233a4:	b.hi	2392c <mpfr_sub1@@Base+0xd20>  // b.pmore
   233a8:	add	x9, x22, #0xf
   233ac:	mov	x8, sp
   233b0:	and	x9, x9, #0xfffffffffffffff0
   233b4:	sub	x8, x8, x9
   233b8:	mov	x24, x8
   233bc:	mov	sp, x8
   233c0:	cmp	x20, x24
   233c4:	b.eq	23878 <mpfr_sub1@@Base+0xc6c>  // b.none
   233c8:	mov	x0, x24
   233cc:	mov	x1, x20
   233d0:	mov	x2, x22
   233d4:	bl	bad0 <memcpy@plt>
   233d8:	b	2387c <mpfr_sub1@@Base+0xc70>
   233dc:	ldr	x26, [x19, #24]
   233e0:	cmp	x20, x26
   233e4:	b.ne	22dcc <mpfr_sub1@@Base+0x1c0>  // b.any
   233e8:	lsl	x19, x23, #3
   233ec:	cmp	x19, #0x4, lsl #12
   233f0:	b.hi	23888 <mpfr_sub1@@Base+0xc7c>  // b.pmore
   233f4:	add	x9, x19, #0xf
   233f8:	mov	x8, sp
   233fc:	and	x9, x9, #0xfffffffffffffff0
   23400:	sub	x26, x8, x9
   23404:	mov	sp, x26
   23408:	cmp	x20, x26
   2340c:	b.eq	23654 <mpfr_sub1@@Base+0xa48>  // b.none
   23410:	mov	x0, x26
   23414:	mov	x1, x20
   23418:	mov	x2, x19
   2341c:	bl	bad0 <memcpy@plt>
   23420:	b	22dc8 <mpfr_sub1@@Base+0x1bc>
   23424:	subs	x19, x27, x8
   23428:	b.le	235d0 <mpfr_sub1@@Base+0x9c4>
   2342c:	lsl	x2, x25, #3
   23430:	mov	x0, x20
   23434:	mov	w1, wzr
   23438:	bl	c1b0 <memset@plt>
   2343c:	ldur	x13, [x29, #-24]
   23440:	add	x0, x20, x25, lsl #3
   23444:	cmp	x0, x24
   23448:	b.eq	22e38 <mpfr_sub1@@Base+0x22c>  // b.none
   2344c:	lsl	x2, x19, #3
   23450:	mov	x1, x24
   23454:	b	22e30 <mpfr_sub1@@Base+0x224>
   23458:	bl	c460 <mpfr_tmp_free@plt>
   2345c:	b	2323c <mpfr_sub1@@Base+0x630>
   23460:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23464:	ldr	x1, [x0, #2624]
   23468:	add	x0, x0, #0xa40
   2346c:	blr	x1
   23470:	mrs	x8, tpidr_el0
   23474:	ldr	x9, [x8, x0]
   23478:	sub	x9, x9, x21
   2347c:	cmp	x23, x9
   23480:	b.gt	234cc <mpfr_sub1@@Base+0x8c0>
   23484:	add	x20, x23, x21
   23488:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2348c:	ldr	x1, [x0, #2592]
   23490:	add	x0, x0, #0xa20
   23494:	blr	x1
   23498:	ldr	x8, [x8, x0]
   2349c:	cmp	x20, x8
   234a0:	b.ge	232b4 <mpfr_sub1@@Base+0x6a8>  // b.tcont
   234a4:	cbnz	w25, 23660 <mpfr_sub1@@Base+0xa54>
   234a8:	sub	x8, x8, #0x1
   234ac:	cmp	x20, x8
   234b0:	b.lt	234c4 <mpfr_sub1@@Base+0x8b8>  // b.tstop
   234b4:	tbnz	w19, #31, 2365c <mpfr_sub1@@Base+0xa50>
   234b8:	mov	x0, x22
   234bc:	bl	bfb0 <mpfr_powerof2_raw@plt>
   234c0:	cbz	w0, 2365c <mpfr_sub1@@Base+0xa50>
   234c4:	mov	w25, #0x1                   	// #1
   234c8:	b	23660 <mpfr_sub1@@Base+0xa54>
   234cc:	ldr	w2, [x22, #8]
   234d0:	mov	x0, x22
   234d4:	mov	w1, w25
   234d8:	bl	bff0 <mpfr_overflow@plt>
   234dc:	b	23670 <mpfr_sub1@@Base+0xa64>
   234e0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   234e4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   234e8:	add	x0, x0, #0x38
   234ec:	add	x2, x2, #0x3f
   234f0:	mov	w1, #0x298                 	// #664
   234f4:	bl	cb90 <mpfr_assert_fail@plt>
   234f8:	b	2327c <mpfr_sub1@@Base+0x670>
   234fc:	sub	x0, x29, #0x10
   23500:	bl	be70 <mpfr_tmp_allocate@plt>
   23504:	mov	x24, x0
   23508:	b	22d3c <mpfr_sub1@@Base+0x130>
   2350c:	sub	x0, x29, #0x10
   23510:	bl	be70 <mpfr_tmp_allocate@plt>
   23514:	mov	x26, x0
   23518:	b	22dac <mpfr_sub1@@Base+0x1a0>
   2351c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   23520:	mov	w21, #0x1                   	// #1
   23524:	str	x8, [x20, x28, lsl #3]
   23528:	b	23228 <mpfr_sub1@@Base+0x61c>
   2352c:	sub	x9, x8, #0x1
   23530:	add	x10, x8, #0x3e
   23534:	sub	x12, x26, #0x1
   23538:	cmp	x9, #0x0
   2353c:	ldr	x22, [x23, #24]
   23540:	add	x13, x26, #0x3e
   23544:	csel	x9, x10, x9, lt  // lt = tstop
   23548:	cmp	x12, #0x0
   2354c:	asr	x11, x9, #6
   23550:	csel	x9, x13, x12, lt  // lt = tstop
   23554:	asr	x9, x9, #6
   23558:	add	x16, x11, #0x1
   2355c:	cmp	x26, x8
   23560:	add	x12, x9, #0x1
   23564:	str	x24, [x23, #16]
   23568:	b.ge	23764 <mpfr_sub1@@Base+0xb58>  // b.tcont
   2356c:	ldr	x13, [x25, #24]
   23570:	neg	w8, w26
   23574:	ands	x14, x8, #0x3f
   23578:	mvn	x10, x9
   2357c:	add	x8, x13, x16, lsl #3
   23580:	add	x1, x8, x10, lsl #3
   23584:	b.eq	23854 <mpfr_sub1@@Base+0xc48>  // b.none
   23588:	ldr	x15, [x1]
   2358c:	sub	x14, x14, #0x1
   23590:	mov	w17, #0x1                   	// #1
   23594:	ldur	w21, [x29, #-28]
   23598:	lsl	x17, x17, x14
   2359c:	sub	x18, x17, #0x1
   235a0:	and	x14, x15, x17
   235a4:	and	x15, x15, x18
   235a8:	cbz	w21, 235f0 <mpfr_sub1@@Base+0x9e4>
   235ac:	cbz	x14, 235f0 <mpfr_sub1@@Base+0x9e4>
   235b0:	lsl	x19, x17, #1
   235b4:	cmp	w21, #0x1
   235b8:	b.eq	2362c <mpfr_sub1@@Base+0xa20>  // b.none
   235bc:	cbnz	w21, 2361c <mpfr_sub1@@Base+0xa10>
   235c0:	cbz	x14, 2362c <mpfr_sub1@@Base+0xa20>
   235c4:	cbz	x15, 238fc <mpfr_sub1@@Base+0xcf0>
   235c8:	ldr	w24, [x23, #8]
   235cc:	b	23680 <mpfr_sub1@@Base+0xa74>
   235d0:	lsl	x2, x13, #3
   235d4:	mov	x0, x20
   235d8:	mov	w1, wzr
   235dc:	bl	c1b0 <memset@plt>
   235e0:	b	22e34 <mpfr_sub1@@Base+0x228>
   235e4:	mov	w11, wzr
   235e8:	mov	w25, wzr
   235ec:	b	22ff8 <mpfr_sub1@@Base+0x3ec>
   235f0:	cbnz	x15, 235b0 <mpfr_sub1@@Base+0x9a4>
   235f4:	sub	x16, x16, x12
   235f8:	cbz	x16, 235b0 <mpfr_sub1@@Base+0x9a4>
   235fc:	mvn	x15, x9
   23600:	add	x16, x15, x11
   23604:	ldr	x15, [x13, x16, lsl #3]
   23608:	subs	x16, x16, #0x1
   2360c:	cset	w18, cs  // cs = hs, nlast
   23610:	cbnz	x15, 235b0 <mpfr_sub1@@Base+0x9a4>
   23614:	tbnz	w18, #0, 23604 <mpfr_sub1@@Base+0x9f8>
   23618:	b	235b0 <mpfr_sub1@@Base+0x9a4>
   2361c:	ldr	w24, [x23, #8]
   23620:	add	w16, w21, w24, lsr #31
   23624:	cmp	w16, #0x3
   23628:	b.ne	23678 <mpfr_sub1@@Base+0xa6c>  // b.any
   2362c:	orr	x8, x15, x14
   23630:	cbz	x8, 23918 <mpfr_sub1@@Base+0xd0c>
   23634:	ldr	w8, [x23, #8]
   23638:	neg	w24, w8
   2363c:	cmp	x22, x1
   23640:	b.eq	23740 <mpfr_sub1@@Base+0xb34>  // b.none
   23644:	lsl	x2, x12, #3
   23648:	mov	x0, x22
   2364c:	bl	bad0 <memcpy@plt>
   23650:	b	23740 <mpfr_sub1@@Base+0xb34>
   23654:	mov	x26, x20
   23658:	b	22dcc <mpfr_sub1@@Base+0x1c0>
   2365c:	mov	w25, wzr
   23660:	ldr	w2, [x22, #8]
   23664:	mov	x0, x22
   23668:	mov	w1, w25
   2366c:	bl	c420 <mpfr_underflow@plt>
   23670:	mov	w24, w0
   23674:	b	232e4 <mpfr_sub1@@Base+0x6d8>
   23678:	orr	x14, x15, x14
   2367c:	cbz	x14, 23914 <mpfr_sub1@@Base+0xd08>
   23680:	ldr	x14, [x1]
   23684:	adds	x12, x14, x19
   23688:	str	x12, [x22]
   2368c:	b.cc	236f0 <mpfr_sub1@@Base+0xae4>  // b.lo, b.ul, b.last
   23690:	sub	x11, x11, x9
   23694:	add	x11, x13, x11, lsl #3
   23698:	mov	x14, xzr
   2369c:	add	x12, x22, #0x8
   236a0:	add	x11, x11, #0x8
   236a4:	add	x13, x14, #0x1
   236a8:	cmp	x13, x9
   236ac:	b.gt	2371c <mpfr_sub1@@Base+0xb10>
   236b0:	ldr	x15, [x11, x14, lsl #3]
   236b4:	mov	x14, x13
   236b8:	adds	x15, x15, #0x1
   236bc:	str	x15, [x12], #8
   236c0:	b.cs	236a4 <mpfr_sub1@@Base+0xa98>  // b.hs, b.nlast
   236c4:	cmp	x1, x22
   236c8:	b.eq	2373c <mpfr_sub1@@Base+0xb30>  // b.none
   236cc:	cmp	x13, x9
   236d0:	b.ge	2373c <mpfr_sub1@@Base+0xb30>  // b.tcont
   236d4:	add	x9, x10, x13
   236d8:	add	x9, x9, #0x1
   236dc:	ldr	x10, [x8, x9, lsl #3]
   236e0:	adds	x9, x9, #0x1
   236e4:	str	x10, [x12], #8
   236e8:	b.cc	236dc <mpfr_sub1@@Base+0xad0>  // b.lo, b.ul, b.last
   236ec:	b	2373c <mpfr_sub1@@Base+0xb30>
   236f0:	cmp	x26, #0x41
   236f4:	b.lt	2373c <mpfr_sub1@@Base+0xb30>  // b.tstop
   236f8:	cmp	x1, x22
   236fc:	b.eq	2373c <mpfr_sub1@@Base+0xb30>  // b.none
   23700:	add	x9, x10, #0x1
   23704:	add	x10, x22, #0x8
   23708:	ldr	x11, [x8, x9, lsl #3]
   2370c:	adds	x9, x9, #0x1
   23710:	str	x11, [x10], #8
   23714:	b.cc	23708 <mpfr_sub1@@Base+0xafc>  // b.lo, b.ul, b.last
   23718:	b	2373c <mpfr_sub1@@Base+0xb30>
   2371c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   23720:	str	x8, [x22, x9, lsl #3]
   23724:	ldr	x8, [x23, #16]
   23728:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2372c:	cmp	x8, x9
   23730:	b.eq	2373c <mpfr_sub1@@Base+0xb30>  // b.none
   23734:	add	x8, x8, #0x1
   23738:	str	x8, [x23, #16]
   2373c:	ldur	w21, [x29, #-28]
   23740:	ldr	x8, [x22]
   23744:	neg	x9, x19
   23748:	and	x8, x8, x9
   2374c:	str	x8, [x22]
   23750:	cbz	w24, 23794 <mpfr_sub1@@Base+0xb88>
   23754:	ldr	w2, [x23, #8]
   23758:	cmp	w24, w2, lsl #1
   2375c:	b.ne	2380c <mpfr_sub1@@Base+0xc00>  // b.any
   23760:	b	237b0 <mpfr_sub1@@Base+0xba4>
   23764:	ldr	x1, [x25, #24]
   23768:	sub	x19, x12, x16
   2376c:	add	x0, x22, x19, lsl #3
   23770:	cmp	x0, x1
   23774:	b.eq	23780 <mpfr_sub1@@Base+0xb74>  // b.none
   23778:	lsl	x2, x16, #3
   2377c:	bl	bad0 <memcpy@plt>
   23780:	lsl	x2, x19, #3
   23784:	mov	x0, x22
   23788:	mov	w1, wzr
   2378c:	bl	c1b0 <memset@plt>
   23790:	ldur	w21, [x29, #-28]
   23794:	cmp	w21, #0x1
   23798:	b.eq	237b0 <mpfr_sub1@@Base+0xba4>  // b.none
   2379c:	ldr	w2, [x23, #8]
   237a0:	add	w8, w21, w2, lsr #31
   237a4:	cmp	w8, #0x3
   237a8:	mov	w24, w2
   237ac:	b.ne	2380c <mpfr_sub1@@Base+0xc00>  // b.any
   237b0:	ldur	x8, [x29, #-24]
   237b4:	ldr	x9, [x20]
   237b8:	ldur	x11, [x29, #-48]
   237bc:	mov	w10, #0x1                   	// #1
   237c0:	lsl	w8, w8, #6
   237c4:	sub	w8, w8, w26
   237c8:	lsl	x8, x10, x8
   237cc:	subs	x8, x9, x8
   237d0:	str	x8, [x20]
   237d4:	b.cs	237f8 <mpfr_sub1@@Base+0xbec>  // b.hs, b.nlast
   237d8:	mov	w8, #0x1                   	// #1
   237dc:	cmp	x8, x11
   237e0:	b.gt	237f8 <mpfr_sub1@@Base+0xbec>
   237e4:	ldr	x9, [x20, x8, lsl #3]
   237e8:	sub	x10, x9, #0x1
   237ec:	str	x10, [x20, x8, lsl #3]
   237f0:	add	x8, x8, #0x1
   237f4:	cbz	x9, 237dc <mpfr_sub1@@Base+0xbd0>
   237f8:	ldr	x8, [x20, x11, lsl #3]
   237fc:	tbz	x8, #63, 238d4 <mpfr_sub1@@Base+0xcc8>
   23800:	ldr	w2, [x23, #8]
   23804:	ldur	w21, [x29, #-28]
   23808:	neg	w24, w2
   2380c:	ldr	x9, [x23, #16]
   23810:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23814:	ldr	x1, [x0, #2624]
   23818:	add	x0, x0, #0xa40
   2381c:	blr	x1
   23820:	mrs	x8, tpidr_el0
   23824:	ldr	x10, [x8, x0]
   23828:	cmp	x9, x10
   2382c:	b.gt	23848 <mpfr_sub1@@Base+0xc3c>
   23830:	cbz	w24, 232e4 <mpfr_sub1@@Base+0x6d8>
   23834:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23838:	ldr	x1, [x0, #2656]
   2383c:	add	x0, x0, #0xa60
   23840:	blr	x1
   23844:	b	232d8 <mpfr_sub1@@Base+0x6cc>
   23848:	mov	x0, x23
   2384c:	mov	w1, w21
   23850:	b	234d8 <mpfr_sub1@@Base+0x8cc>
   23854:	ldur	x15, [x1, #-8]
   23858:	ldur	w16, [x29, #-28]
   2385c:	and	x14, x15, #0x8000000000000000
   23860:	and	x15, x15, #0x7fffffffffffffff
   23864:	cbz	w16, 238a0 <mpfr_sub1@@Base+0xc94>
   23868:	cbz	x14, 238a0 <mpfr_sub1@@Base+0xc94>
   2386c:	mov	w19, #0x1                   	// #1
   23870:	ldur	w21, [x29, #-28]
   23874:	b	235b4 <mpfr_sub1@@Base+0x9a8>
   23878:	mov	x24, x20
   2387c:	ldur	x13, [x29, #-24]
   23880:	mov	x27, x23
   23884:	b	22d5c <mpfr_sub1@@Base+0x150>
   23888:	sub	x0, x29, #0x10
   2388c:	mov	x1, x19
   23890:	bl	be70 <mpfr_tmp_allocate@plt>
   23894:	ldur	x13, [x29, #-24]
   23898:	mov	x26, x0
   2389c:	b	23408 <mpfr_sub1@@Base+0x7fc>
   238a0:	mov	w19, #0x1                   	// #1
   238a4:	cbnz	x15, 23870 <mpfr_sub1@@Base+0xc64>
   238a8:	sub	x16, x11, x12
   238ac:	cbz	x16, 23870 <mpfr_sub1@@Base+0xc64>
   238b0:	sub	x15, x11, x9
   238b4:	sub	x16, x15, #0x2
   238b8:	mov	w19, #0x1                   	// #1
   238bc:	ldr	x15, [x13, x16, lsl #3]
   238c0:	subs	x16, x16, #0x1
   238c4:	cset	w17, cs  // cs = hs, nlast
   238c8:	cbnz	x15, 23870 <mpfr_sub1@@Base+0xc64>
   238cc:	tbnz	w17, #0, 238bc <mpfr_sub1@@Base+0xcb0>
   238d0:	b	23870 <mpfr_sub1@@Base+0xc64>
   238d4:	ldr	x8, [x23, #16]
   238d8:	mov	x9, x23
   238dc:	ldur	x9, [x29, #-48]
   238e0:	mov	x10, x20
   238e4:	sub	x8, x8, #0x1
   238e8:	str	x8, [x23, #16]
   238ec:	ldr	x8, [x20, x9, lsl #3]
   238f0:	orr	x8, x8, #0x8000000000000000
   238f4:	str	x8, [x20, x9, lsl #3]
   238f8:	b	23800 <mpfr_sub1@@Base+0xbf4>
   238fc:	ldr	x14, [x1]
   23900:	ldr	w15, [x23, #8]
   23904:	tst	x14, x19
   23908:	b.eq	23920 <mpfr_sub1@@Base+0xd14>  // b.none
   2390c:	lsl	w24, w15, #1
   23910:	b	23684 <mpfr_sub1@@Base+0xa78>
   23914:	ldur	w21, [x29, #-28]
   23918:	mov	w24, wzr
   2391c:	b	2363c <mpfr_sub1@@Base+0xa30>
   23920:	ldur	w21, [x29, #-28]
   23924:	neg	w24, w15, lsl #1
   23928:	b	2363c <mpfr_sub1@@Base+0xa30>
   2392c:	sub	x0, x29, #0x10
   23930:	mov	x1, x22
   23934:	bl	be70 <mpfr_tmp_allocate@plt>
   23938:	mov	x24, x0
   2393c:	b	233c0 <mpfr_sub1@@Base+0x7b4>

0000000000023940 <mpfr_sub_ui@@Base>:
   23940:	sub	sp, sp, #0x80
   23944:	stp	x20, x19, [sp, #112]
   23948:	mov	w19, w3
   2394c:	mov	x8, x1
   23950:	mov	x20, x0
   23954:	stp	x29, x30, [sp, #32]
   23958:	str	x27, [sp, #48]
   2395c:	stp	x26, x25, [sp, #64]
   23960:	stp	x24, x23, [sp, #80]
   23964:	stp	x22, x21, [sp, #96]
   23968:	add	x29, sp, #0x20
   2396c:	cbz	x2, 23a90 <mpfr_sub_ui@@Base+0x150>
   23970:	ldr	x10, [x8, #16]
   23974:	mov	x9, #0x2                   	// #2
   23978:	movk	x9, #0x8000, lsl #48
   2397c:	add	x11, x9, #0x2
   23980:	cmp	x10, x11
   23984:	b.lt	23ac0 <mpfr_sub_ui@@Base+0x180>  // b.tstop
   23988:	add	x10, x29, #0x18
   2398c:	clz	x12, x2
   23990:	mov	w9, #0x40                  	// #64
   23994:	mov	w11, #0x1                   	// #1
   23998:	str	x10, [sp, #24]
   2399c:	lsl	x10, x2, x12
   239a0:	str	x9, [sp]
   239a4:	str	w11, [sp, #8]
   239a8:	str	x10, [x29, #24]
   239ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   239b0:	ldr	x1, [x0, #2656]
   239b4:	add	x0, x0, #0xa60
   239b8:	blr	x1
   239bc:	mrs	x24, tpidr_el0
   239c0:	ldr	w26, [x24, x0]
   239c4:	mov	x21, x0
   239c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   239cc:	ldr	x1, [x0, #2592]
   239d0:	add	x0, x0, #0xa20
   239d4:	blr	x1
   239d8:	ldr	x25, [x24, x0]
   239dc:	mov	x22, x0
   239e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   239e4:	ldr	x1, [x0, #2624]
   239e8:	add	x0, x0, #0xa40
   239ec:	blr	x1
   239f0:	ldr	x27, [x24, x0]
   239f4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   239f8:	mov	x23, x0
   239fc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   23a00:	str	x11, [x24, x0]
   23a04:	sub	x9, x9, x12
   23a08:	mov	x2, sp
   23a0c:	mov	x0, x20
   23a10:	mov	x1, x8
   23a14:	mov	w3, w19
   23a18:	str	x10, [x24, x22]
   23a1c:	str	x9, [sp, #16]
   23a20:	bl	bc20 <mpfr_sub@plt>
   23a24:	ldr	w8, [x24, x21]
   23a28:	str	x25, [x24, x22]
   23a2c:	str	x27, [x24, x23]
   23a30:	mov	w9, w0
   23a34:	orr	w8, w8, w26
   23a38:	str	w8, [x24, x21]
   23a3c:	ldr	x10, [x20, #16]
   23a40:	cmp	x10, x27
   23a44:	b.gt	23b08 <mpfr_sub_ui@@Base+0x1c8>
   23a48:	cmp	x10, x25
   23a4c:	b.lt	23b08 <mpfr_sub_ui@@Base+0x1c8>  // b.tstop
   23a50:	cbz	w9, 23a6c <mpfr_sub_ui@@Base+0x12c>
   23a54:	orr	w8, w8, #0x8
   23a58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23a5c:	ldr	x1, [x0, #2656]
   23a60:	add	x0, x0, #0xa60
   23a64:	blr	x1
   23a68:	str	w8, [x24, x0]
   23a6c:	ldp	x20, x19, [sp, #112]
   23a70:	ldp	x22, x21, [sp, #96]
   23a74:	ldp	x24, x23, [sp, #80]
   23a78:	ldp	x26, x25, [sp, #64]
   23a7c:	ldr	x27, [sp, #48]
   23a80:	ldp	x29, x30, [sp, #32]
   23a84:	mov	w0, w9
   23a88:	add	sp, sp, #0x80
   23a8c:	ret
   23a90:	ldr	w3, [x8, #8]
   23a94:	mov	x0, x20
   23a98:	mov	w2, w19
   23a9c:	ldp	x20, x19, [sp, #112]
   23aa0:	ldp	x22, x21, [sp, #96]
   23aa4:	ldp	x24, x23, [sp, #80]
   23aa8:	ldp	x26, x25, [sp, #64]
   23aac:	ldr	x27, [sp, #48]
   23ab0:	ldp	x29, x30, [sp, #32]
   23ab4:	mov	x1, x8
   23ab8:	add	sp, sp, #0x80
   23abc:	b	c6f0 <mpfr_set4@plt>
   23ac0:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   23ac4:	cmp	x10, x11
   23ac8:	b.eq	23b20 <mpfr_sub_ui@@Base+0x1e0>  // b.none
   23acc:	mov	x11, #0x2                   	// #2
   23ad0:	movk	x11, #0x8000, lsl #48
   23ad4:	cmp	x10, x11
   23ad8:	b.ne	23988 <mpfr_sub_ui@@Base+0x48>  // b.any
   23adc:	str	x9, [x20, #16]
   23ae0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23ae4:	ldr	x1, [x0, #2656]
   23ae8:	add	x0, x0, #0xa60
   23aec:	blr	x1
   23af0:	mrs	x8, tpidr_el0
   23af4:	ldr	w10, [x8, x0]
   23af8:	mov	w9, wzr
   23afc:	orr	w10, w10, #0x4
   23b00:	str	w10, [x8, x0]
   23b04:	b	23a6c <mpfr_sub_ui@@Base+0x12c>
   23b08:	mov	x0, x20
   23b0c:	mov	w1, w9
   23b10:	mov	w2, w19
   23b14:	bl	cb80 <mpfr_check_range@plt>
   23b18:	mov	w9, w0
   23b1c:	b	23a6c <mpfr_sub_ui@@Base+0x12c>
   23b20:	str	x11, [x20, #16]
   23b24:	ldr	w8, [x8, #8]
   23b28:	mov	w9, wzr
   23b2c:	str	w8, [x20, #8]
   23b30:	b	23a6c <mpfr_sub_ui@@Base+0x12c>

0000000000023b34 <mpfr_rint@@Base>:
   23b34:	sub	sp, sp, #0x80
   23b38:	stp	x29, x30, [sp, #32]
   23b3c:	stp	x28, x27, [sp, #48]
   23b40:	stp	x26, x25, [sp, #64]
   23b44:	stp	x24, x23, [sp, #80]
   23b48:	stp	x22, x21, [sp, #96]
   23b4c:	stp	x20, x19, [sp, #112]
   23b50:	ldr	x16, [x1, #16]
   23b54:	mov	x8, #0x2                   	// #2
   23b58:	movk	x8, #0x8000, lsl #48
   23b5c:	add	x9, x8, #0x2
   23b60:	cmp	x16, x9
   23b64:	mov	x22, x0
   23b68:	add	x29, sp, #0x20
   23b6c:	b.lt	24060 <mpfr_rint@@Base+0x52c>  // b.tstop
   23b70:	ldr	w8, [x1, #8]
   23b74:	mov	w20, w2
   23b78:	cmp	w2, #0x1
   23b7c:	str	w8, [x22, #8]
   23b80:	ldrsw	x19, [x1, #8]
   23b84:	b.eq	23ba0 <mpfr_rint@@Base+0x6c>  // b.none
   23b88:	cmp	w20, #0x2
   23b8c:	b.eq	23ba8 <mpfr_rint@@Base+0x74>  // b.none
   23b90:	cmp	w20, #0x3
   23b94:	b.ne	23bb4 <mpfr_rint@@Base+0x80>  // b.any
   23b98:	ubfx	x23, x19, #31, #1
   23b9c:	b	23bc0 <mpfr_rint@@Base+0x8c>
   23ba0:	mov	w23, wzr
   23ba4:	b	23bc0 <mpfr_rint@@Base+0x8c>
   23ba8:	cmp	w19, #0x0
   23bac:	cset	w23, gt
   23bb0:	b	23bc0 <mpfr_rint@@Base+0x8c>
   23bb4:	cmp	w20, #0x4
   23bb8:	mov	w8, #0x1                   	// #1
   23bbc:	cneg	w23, w8, ne  // ne = any
   23bc0:	cmp	x16, #0x0
   23bc4:	b.le	24090 <mpfr_rint@@Base+0x55c>
   23bc8:	ldr	x8, [x1]
   23bcc:	ldr	x9, [x22]
   23bd0:	sub	x10, x16, #0x1
   23bd4:	stur	w20, [x29, #-12]
   23bd8:	sub	x12, x8, #0x1
   23bdc:	add	x8, x8, #0x3e
   23be0:	sub	x13, x9, #0x1
   23be4:	cmp	x12, #0x0
   23be8:	add	x14, x9, #0x3e
   23bec:	neg	w9, w9
   23bf0:	csel	x12, x8, x12, lt  // lt = tstop
   23bf4:	cmp	x13, #0x0
   23bf8:	ldr	x17, [x1, #24]
   23bfc:	ldr	x20, [x22, #24]
   23c00:	add	x11, x16, #0x3e
   23c04:	and	w15, w9, #0x3f
   23c08:	csel	x9, x14, x13, lt  // lt = tstop
   23c0c:	cmp	x10, #0x0
   23c10:	stur	x19, [x29, #-8]
   23c14:	asr	x19, x9, #6
   23c18:	csel	x9, x11, x10, lt  // lt = tstop
   23c1c:	asr	x25, x12, #6
   23c20:	asr	x9, x9, #6
   23c24:	add	x8, x25, #0x1
   23c28:	add	x21, x19, #0x1
   23c2c:	cmp	x9, x12, asr #6
   23c30:	str	x16, [x22, #16]
   23c34:	str	x16, [sp, #8]
   23c38:	b.le	23c4c <mpfr_rint@@Base+0x118>
   23c3c:	mov	w27, wzr
   23c40:	mov	w24, wzr
   23c44:	mov	x28, x8
   23c48:	b	23c8c <mpfr_rint@@Base+0x158>
   23c4c:	add	x28, x9, #0x1
   23c50:	and	x27, x16, #0x3f
   23c54:	sub	x9, x8, x28
   23c58:	cbz	w27, 23c68 <mpfr_rint@@Base+0x134>
   23c5c:	ldr	x10, [x17, x9, lsl #3]
   23c60:	lsl	x10, x10, x27
   23c64:	cbnz	x10, 23c80 <mpfr_rint@@Base+0x14c>
   23c68:	sub	x10, x17, #0x8
   23c6c:	subs	x11, x9, #0x1
   23c70:	b.lt	23c88 <mpfr_rint@@Base+0x154>  // b.tstop
   23c74:	ldr	x12, [x10, x9, lsl #3]
   23c78:	mov	x9, x11
   23c7c:	cbz	x12, 23c6c <mpfr_rint@@Base+0x138>
   23c80:	mov	w24, #0x2                   	// #2
   23c84:	b	23c8c <mpfr_rint@@Base+0x158>
   23c88:	mov	w24, wzr
   23c8c:	subs	x26, x21, x28
   23c90:	str	x22, [sp]
   23c94:	b.ge	23d00 <mpfr_rint@@Base+0x1cc>  // b.tcont
   23c98:	sub	x22, x8, x21
   23c9c:	add	x1, x17, x22, lsl #3
   23ca0:	cmp	x20, x1
   23ca4:	b.eq	23cc4 <mpfr_rint@@Base+0x190>  // b.none
   23ca8:	lsl	x2, x21, #3
   23cac:	mov	x0, x20
   23cb0:	mov	x26, x15
   23cb4:	mov	x27, x17
   23cb8:	bl	bad0 <memcpy@plt>
   23cbc:	mov	x17, x27
   23cc0:	mov	x15, x26
   23cc4:	mov	w27, w24
   23cc8:	tbz	w23, #31, 23de8 <mpfr_rint@@Base+0x2b4>
   23ccc:	ldur	w8, [x29, #-12]
   23cd0:	cbnz	w8, 23ce8 <mpfr_rint@@Base+0x1b4>
   23cd4:	ldr	x8, [x20]
   23cd8:	mov	w9, #0x1                   	// #1
   23cdc:	lsl	x9, x9, x15
   23ce0:	tst	x8, x9
   23ce4:	b.eq	23f78 <mpfr_rint@@Base+0x444>  // b.none
   23ce8:	cbz	w15, 23ddc <mpfr_rint@@Base+0x2a8>
   23cec:	ldr	x8, [x20]
   23cf0:	sub	w9, w15, #0x1
   23cf4:	lsr	x8, x8, x9
   23cf8:	and	w23, w8, #0x1
   23cfc:	b	23de8 <mpfr_rint@@Base+0x2b4>
   23d00:	cmp	x20, x17
   23d04:	sub	x19, x8, x28
   23d08:	b.eq	23d34 <mpfr_rint@@Base+0x200>  // b.none
   23d0c:	add	x0, x20, x26, lsl #3
   23d10:	add	x1, x17, x19, lsl #3
   23d14:	cmp	x0, x1
   23d18:	b.eq	23d34 <mpfr_rint@@Base+0x200>  // b.none
   23d1c:	lsl	x2, x28, #3
   23d20:	mov	x21, x15
   23d24:	mov	x22, x17
   23d28:	bl	bad0 <memcpy@plt>
   23d2c:	mov	x17, x22
   23d30:	mov	x15, x21
   23d34:	mov	w8, #0x40                  	// #64
   23d38:	sub	w8, w8, w27
   23d3c:	cmp	w27, #0x0
   23d40:	add	x22, x20, x26, lsl #3
   23d44:	csel	w8, wzr, w8, eq  // eq = none
   23d48:	cbnz	x26, 23d80 <mpfr_rint@@Base+0x24c>
   23d4c:	cmp	w8, w15
   23d50:	mov	w27, w24
   23d54:	b.ge	23d90 <mpfr_rint@@Base+0x25c>  // b.tcont
   23d58:	cbnz	w27, 23d88 <mpfr_rint@@Base+0x254>
   23d5c:	ldr	x9, [x22]
   23d60:	mov	w10, #0x1                   	// #1
   23d64:	lsl	x11, x10, x15
   23d68:	lsl	x8, x10, x8
   23d6c:	sub	x8, x11, x8
   23d70:	tst	x9, x8
   23d74:	cset	w27, ne  // ne = any
   23d78:	tbz	w23, #31, 23f18 <mpfr_rint@@Base+0x3e4>
   23d7c:	b	23d98 <mpfr_rint@@Base+0x264>
   23d80:	mov	w15, w8
   23d84:	mov	w27, w24
   23d88:	tbz	w23, #31, 23f18 <mpfr_rint@@Base+0x3e4>
   23d8c:	b	23d98 <mpfr_rint@@Base+0x264>
   23d90:	mov	w15, w8
   23d94:	tbz	w23, #31, 23f18 <mpfr_rint@@Base+0x3e4>
   23d98:	cbnz	x19, 23da8 <mpfr_rint@@Base+0x274>
   23d9c:	cbnz	w15, 23da8 <mpfr_rint@@Base+0x274>
   23da0:	mov	w23, wzr
   23da4:	b	23f18 <mpfr_rint@@Base+0x3e4>
   23da8:	ldur	w8, [x29, #-12]
   23dac:	cbnz	w8, 23dc4 <mpfr_rint@@Base+0x290>
   23db0:	ldr	x8, [x22]
   23db4:	mov	w9, #0x1                   	// #1
   23db8:	lsl	x9, x9, x15
   23dbc:	tst	x8, x9
   23dc0:	b.eq	23f94 <mpfr_rint@@Base+0x460>  // b.none
   23dc4:	cbz	w15, 23f0c <mpfr_rint@@Base+0x3d8>
   23dc8:	ldr	x8, [x22]
   23dcc:	sub	w9, w15, #0x1
   23dd0:	lsr	x8, x8, x9
   23dd4:	and	w23, w8, #0x1
   23dd8:	b	23f18 <mpfr_rint@@Base+0x3e4>
   23ddc:	add	x8, x17, x22, lsl #3
   23de0:	ldur	x8, [x8, #-8]
   23de4:	lsr	x23, x8, #63
   23de8:	cbz	w27, 23e40 <mpfr_rint@@Base+0x30c>
   23dec:	mov	x22, x20
   23df0:	mov	x28, x21
   23df4:	cbnz	w15, 23f34 <mpfr_rint@@Base+0x400>
   23df8:	cbz	w27, 23f50 <mpfr_rint@@Base+0x41c>
   23dfc:	mrs	x9, tpidr_el0
   23e00:	cbz	w23, 23ee0 <mpfr_rint@@Base+0x3ac>
   23e04:	ldr	x8, [x22]
   23e08:	mov	w10, #0x1                   	// #1
   23e0c:	lsl	x10, x10, x15
   23e10:	adds	x8, x8, x10
   23e14:	str	x8, [x22]
   23e18:	b.cc	23ee0 <mpfr_rint@@Base+0x3ac>  // b.lo, b.ul, b.last
   23e1c:	mov	w8, #0x1                   	// #1
   23e20:	cmp	x8, x28
   23e24:	b.ge	23e84 <mpfr_rint@@Base+0x350>  // b.tcont
   23e28:	ldr	x10, [x22, x8, lsl #3]
   23e2c:	adds	x10, x10, #0x1
   23e30:	str	x10, [x22, x8, lsl #3]
   23e34:	add	x8, x8, #0x1
   23e38:	b.cs	23e20 <mpfr_rint@@Base+0x2ec>  // b.hs, b.nlast
   23e3c:	b	23ee0 <mpfr_rint@@Base+0x3ac>
   23e40:	cbz	w15, 23e64 <mpfr_rint@@Base+0x330>
   23e44:	ldr	x8, [x20]
   23e48:	neg	w9, w15
   23e4c:	lsl	x9, x8, x9
   23e50:	cbz	x9, 23e64 <mpfr_rint@@Base+0x330>
   23e54:	mov	w27, #0x1                   	// #1
   23e58:	mov	x28, x21
   23e5c:	mov	x22, x20
   23e60:	b	23f3c <mpfr_rint@@Base+0x408>
   23e64:	sub	x8, x17, #0x8
   23e68:	subs	x9, x22, #0x1
   23e6c:	b.lt	23ec0 <mpfr_rint@@Base+0x38c>  // b.tstop
   23e70:	ldr	x10, [x8, x22, lsl #3]
   23e74:	mov	x22, x9
   23e78:	cbz	x10, 23e68 <mpfr_rint@@Base+0x334>
   23e7c:	mov	w27, #0x1                   	// #1
   23e80:	b	23dec <mpfr_rint@@Base+0x2b8>
   23e84:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23e88:	ldr	x1, [x0, #2624]
   23e8c:	add	x0, x0, #0xa40
   23e90:	blr	x1
   23e94:	ldr	x8, [x9, x0]
   23e98:	ldr	x10, [sp, #8]
   23e9c:	cmp	x10, x8
   23ea0:	b.ne	23ec8 <mpfr_rint@@Base+0x394>  // b.any
   23ea4:	ldr	x0, [sp]
   23ea8:	ldur	w1, [x29, #-12]
   23eac:	ldur	x2, [x29, #-8]
   23eb0:	bl	bff0 <mpfr_overflow@plt>
   23eb4:	cmp	w0, #0x0
   23eb8:	cneg	w8, w27, lt  // lt = tstop
   23ebc:	b	23f54 <mpfr_rint@@Base+0x420>
   23ec0:	mov	w27, wzr
   23ec4:	b	23dec <mpfr_rint@@Base+0x2b8>
   23ec8:	ldr	x12, [sp]
   23ecc:	add	x8, x10, #0x1
   23ed0:	add	x10, x22, x28, lsl #3
   23ed4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   23ed8:	str	x8, [x12, #16]
   23edc:	stur	x11, [x10, #-8]
   23ee0:	ldur	x8, [x29, #-8]
   23ee4:	cmp	w23, w8, lsr #31
   23ee8:	cneg	w8, w27, eq  // eq = none
   23eec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   23ef0:	ldr	x1, [x0, #2656]
   23ef4:	add	x0, x0, #0xa60
   23ef8:	blr	x1
   23efc:	ldr	w10, [x9, x0]
   23f00:	orr	w10, w10, #0x8
   23f04:	str	w10, [x9, x0]
   23f08:	b	23f54 <mpfr_rint@@Base+0x420>
   23f0c:	add	x8, x17, x19, lsl #3
   23f10:	ldur	x8, [x8, #-8]
   23f14:	lsr	x23, x8, #63
   23f18:	lsl	x2, x26, #3
   23f1c:	mov	x0, x20
   23f20:	mov	w1, wzr
   23f24:	mov	x19, x15
   23f28:	bl	c1b0 <memset@plt>
   23f2c:	mov	x15, x19
   23f30:	cbz	w15, 23df8 <mpfr_rint@@Base+0x2c4>
   23f34:	ldr	x8, [x22]
   23f38:	mov	x20, x22
   23f3c:	mov	x9, #0xffffffffffffffff    	// #-1
   23f40:	lsl	x9, x9, x15
   23f44:	and	x8, x8, x9
   23f48:	str	x8, [x20]
   23f4c:	cbnz	w27, 23dfc <mpfr_rint@@Base+0x2c8>
   23f50:	mov	w8, wzr
   23f54:	ldp	x20, x19, [sp, #112]
   23f58:	ldp	x22, x21, [sp, #96]
   23f5c:	ldp	x24, x23, [sp, #80]
   23f60:	ldp	x26, x25, [sp, #64]
   23f64:	ldp	x28, x27, [sp, #48]
   23f68:	ldp	x29, x30, [sp, #32]
   23f6c:	mov	w0, w8
   23f70:	add	sp, sp, #0x80
   23f74:	ret
   23f78:	cbz	w15, 23fb0 <mpfr_rint@@Base+0x47c>
   23f7c:	sub	x9, x9, #0x1
   23f80:	sub	w10, w15, #0x1
   23f84:	mov	w11, #0x1                   	// #1
   23f88:	and	x8, x8, x9
   23f8c:	lsl	x9, x11, x10
   23f90:	b	23fbc <mpfr_rint@@Base+0x488>
   23f94:	cbz	w15, 24010 <mpfr_rint@@Base+0x4dc>
   23f98:	sub	x9, x9, #0x1
   23f9c:	sub	w10, w15, #0x1
   23fa0:	mov	w11, #0x1                   	// #1
   23fa4:	and	x8, x8, x9
   23fa8:	lsl	x9, x11, x10
   23fac:	b	2401c <mpfr_rint@@Base+0x4e8>
   23fb0:	add	x8, x17, x22, lsl #3
   23fb4:	ldur	x8, [x8, #-8]
   23fb8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   23fbc:	cmp	x8, x9
   23fc0:	cset	w23, hi  // hi = pmore
   23fc4:	b.ne	23de8 <mpfr_rint@@Base+0x2b4>  // b.any
   23fc8:	cmp	w15, #0x0
   23fcc:	cset	w8, eq  // eq = none
   23fd0:	mvn	x9, x8
   23fd4:	cmn	x22, x9
   23fd8:	b.mi	23de8 <mpfr_rint@@Base+0x2b4>  // b.first
   23fdc:	sub	x9, x25, x19
   23fe0:	add	x10, x19, x8
   23fe4:	sub	x8, x9, x8
   23fe8:	sub	x9, x25, x10
   23fec:	add	x9, x17, x9, lsl #3
   23ff0:	sub	x9, x9, #0x8
   23ff4:	ldr	x10, [x9]
   23ff8:	cbnz	x10, 24050 <mpfr_rint@@Base+0x51c>
   23ffc:	sub	x8, x8, #0x1
   24000:	cmp	x8, #0x1
   24004:	sub	x9, x9, #0x8
   24008:	b.ge	23ff4 <mpfr_rint@@Base+0x4c0>  // b.tcont
   2400c:	b	23de8 <mpfr_rint@@Base+0x2b4>
   24010:	add	x8, x17, x19, lsl #3
   24014:	ldur	x8, [x8, #-8]
   24018:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2401c:	cmp	x8, x9
   24020:	cset	w23, hi  // hi = pmore
   24024:	b.ne	23f18 <mpfr_rint@@Base+0x3e4>  // b.any
   24028:	cmp	w15, #0x0
   2402c:	cset	w8, eq  // eq = none
   24030:	mvn	x8, x8
   24034:	adds	x8, x19, x8
   24038:	b.mi	23f18 <mpfr_rint@@Base+0x3e4>  // b.first
   2403c:	ldr	x9, [x17, x8, lsl #3]
   24040:	cbnz	x9, 24058 <mpfr_rint@@Base+0x524>
   24044:	subs	x8, x8, #0x1
   24048:	b.ge	2403c <mpfr_rint@@Base+0x508>  // b.tcont
   2404c:	b	23f18 <mpfr_rint@@Base+0x3e4>
   24050:	mov	w23, #0x1                   	// #1
   24054:	b	23de8 <mpfr_rint@@Base+0x2b4>
   24058:	mov	w23, #0x1                   	// #1
   2405c:	b	23f18 <mpfr_rint@@Base+0x3e4>
   24060:	cmp	x16, x8
   24064:	b.ne	240c0 <mpfr_rint@@Base+0x58c>  // b.any
   24068:	str	x8, [x22, #16]
   2406c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24070:	ldr	x1, [x0, #2656]
   24074:	add	x0, x0, #0xa60
   24078:	blr	x1
   2407c:	mrs	x9, tpidr_el0
   24080:	ldr	w10, [x9, x0]
   24084:	mov	w8, wzr
   24088:	orr	w10, w10, #0x4
   2408c:	b	23f04 <mpfr_rint@@Base+0x3d0>
   24090:	cbz	w23, 240e8 <mpfr_rint@@Base+0x5b4>
   24094:	cmp	w23, #0x0
   24098:	b.le	240e4 <mpfr_rint@@Base+0x5b0>
   2409c:	mov	x0, x22
   240a0:	mov	x1, x19
   240a4:	mov	x2, xzr
   240a8:	mov	w3, w20
   240ac:	bl	bb40 <mpfr_set_si_2exp@plt>
   240b0:	cmp	w19, #0x0
   240b4:	mov	w8, #0x2                   	// #2
   240b8:	cneg	w8, w8, le
   240bc:	b	240fc <mpfr_rint@@Base+0x5c8>
   240c0:	ldr	w8, [x1, #8]
   240c4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   240c8:	cmp	x16, x9
   240cc:	str	w8, [x22, #8]
   240d0:	mov	w8, wzr
   240d4:	b.eq	240dc <mpfr_rint@@Base+0x5a8>  // b.none
   240d8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   240dc:	str	x9, [x22, #16]
   240e0:	b	23f54 <mpfr_rint@@Base+0x420>
   240e4:	cbz	x16, 24114 <mpfr_rint@@Base+0x5e0>
   240e8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   240ec:	cmp	w19, #0x0
   240f0:	mov	w9, #0xfffffffe            	// #-2
   240f4:	str	x8, [x22, #16]
   240f8:	cneg	w8, w9, le
   240fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24100:	ldr	x1, [x0, #2656]
   24104:	add	x0, x0, #0xa60
   24108:	blr	x1
   2410c:	mrs	x9, tpidr_el0
   24110:	b	23efc <mpfr_rint@@Base+0x3c8>
   24114:	cmn	w20, #0x1
   24118:	b.eq	2409c <mpfr_rint@@Base+0x568>  // b.none
   2411c:	mov	x0, x1
   24120:	bl	bfb0 <mpfr_powerof2_raw@plt>
   24124:	cbnz	w0, 240e8 <mpfr_rint@@Base+0x5b4>
   24128:	b	2409c <mpfr_rint@@Base+0x568>

000000000002412c <mpfr_roundeven@@Base>:
   2412c:	mov	w2, wzr
   24130:	b	c360 <mpfr_rint@plt>

0000000000024134 <mpfr_round@@Base>:
   24134:	mov	w2, #0xffffffff            	// #-1
   24138:	b	c360 <mpfr_rint@plt>

000000000002413c <mpfr_trunc@@Base>:
   2413c:	mov	w2, #0x1                   	// #1
   24140:	b	c360 <mpfr_rint@plt>

0000000000024144 <mpfr_ceil@@Base>:
   24144:	mov	w2, #0x2                   	// #2
   24148:	b	c360 <mpfr_rint@plt>

000000000002414c <mpfr_floor@@Base>:
   2414c:	mov	w2, #0x3                   	// #3
   24150:	b	c360 <mpfr_rint@plt>

0000000000024154 <mpfr_rint_roundeven@@Base>:
   24154:	sub	sp, sp, #0x60
   24158:	stp	x29, x30, [sp, #32]
   2415c:	stp	x24, x23, [sp, #48]
   24160:	stp	x22, x21, [sp, #64]
   24164:	stp	x20, x19, [sp, #80]
   24168:	ldr	x8, [x1, #16]
   2416c:	mov	x9, #0x4                   	// #4
   24170:	movk	x9, #0x8000, lsl #48
   24174:	mov	w19, w2
   24178:	mov	x21, x1
   2417c:	cmp	x8, x9
   24180:	mov	x20, x0
   24184:	add	x29, sp, #0x20
   24188:	b.lt	24198 <mpfr_rint_roundeven@@Base+0x44>  // b.tstop
   2418c:	mov	x0, x21
   24190:	bl	c200 <mpfr_integer_p@plt>
   24194:	cbz	w0, 241c0 <mpfr_rint_roundeven@@Base+0x6c>
   24198:	ldr	w3, [x21, #8]
   2419c:	mov	x0, x20
   241a0:	mov	x1, x21
   241a4:	mov	w2, w19
   241a8:	ldp	x20, x19, [sp, #80]
   241ac:	ldp	x22, x21, [sp, #64]
   241b0:	ldp	x24, x23, [sp, #48]
   241b4:	ldp	x29, x30, [sp, #32]
   241b8:	add	sp, sp, #0x60
   241bc:	b	c6f0 <mpfr_set4@plt>
   241c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   241c4:	ldr	x1, [x0, #2656]
   241c8:	add	x0, x0, #0xa60
   241cc:	blr	x1
   241d0:	mrs	x23, tpidr_el0
   241d4:	ldr	x1, [x21]
   241d8:	ldr	w24, [x23, x0]
   241dc:	mov	x22, x0
   241e0:	mov	x0, sp
   241e4:	bl	cad0 <mpfr_init2@plt>
   241e8:	mov	x0, sp
   241ec:	mov	x1, x21
   241f0:	mov	w2, wzr
   241f4:	str	wzr, [x23, x22]
   241f8:	bl	c360 <mpfr_rint@plt>
   241fc:	ldr	w8, [x23, x22]
   24200:	str	w24, [x23, x22]
   24204:	tbnz	w8, #1, 24244 <mpfr_rint_roundeven@@Base+0xf0>
   24208:	ldr	w3, [sp, #8]
   2420c:	mov	x1, sp
   24210:	mov	x0, x20
   24214:	mov	w2, w19
   24218:	bl	c6f0 <mpfr_set4@plt>
   2421c:	mov	w19, w0
   24220:	mov	x0, sp
   24224:	bl	c110 <mpfr_clear@plt>
   24228:	mov	w0, w19
   2422c:	ldp	x20, x19, [sp, #80]
   24230:	ldp	x22, x21, [sp, #64]
   24234:	ldp	x24, x23, [sp, #48]
   24238:	ldp	x29, x30, [sp, #32]
   2423c:	add	sp, sp, #0x60
   24240:	ret
   24244:	ldr	w2, [x21, #8]
   24248:	mov	x0, x20
   2424c:	mov	w1, w19
   24250:	bl	bff0 <mpfr_overflow@plt>
   24254:	b	2421c <mpfr_rint_roundeven@@Base+0xc8>

0000000000024258 <mpfr_rint_round@@Base>:
   24258:	sub	sp, sp, #0x60
   2425c:	stp	x29, x30, [sp, #32]
   24260:	stp	x24, x23, [sp, #48]
   24264:	stp	x22, x21, [sp, #64]
   24268:	stp	x20, x19, [sp, #80]
   2426c:	ldr	x8, [x1, #16]
   24270:	mov	x9, #0x4                   	// #4
   24274:	movk	x9, #0x8000, lsl #48
   24278:	mov	w19, w2
   2427c:	mov	x21, x1
   24280:	cmp	x8, x9
   24284:	mov	x20, x0
   24288:	add	x29, sp, #0x20
   2428c:	b.lt	2429c <mpfr_rint_round@@Base+0x44>  // b.tstop
   24290:	mov	x0, x21
   24294:	bl	c200 <mpfr_integer_p@plt>
   24298:	cbz	w0, 242c4 <mpfr_rint_round@@Base+0x6c>
   2429c:	ldr	w3, [x21, #8]
   242a0:	mov	x0, x20
   242a4:	mov	x1, x21
   242a8:	mov	w2, w19
   242ac:	ldp	x20, x19, [sp, #80]
   242b0:	ldp	x22, x21, [sp, #64]
   242b4:	ldp	x24, x23, [sp, #48]
   242b8:	ldp	x29, x30, [sp, #32]
   242bc:	add	sp, sp, #0x60
   242c0:	b	c6f0 <mpfr_set4@plt>
   242c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   242c8:	ldr	x1, [x0, #2656]
   242cc:	add	x0, x0, #0xa60
   242d0:	blr	x1
   242d4:	mrs	x23, tpidr_el0
   242d8:	ldr	x1, [x21]
   242dc:	ldr	w24, [x23, x0]
   242e0:	mov	x22, x0
   242e4:	mov	x0, sp
   242e8:	bl	cad0 <mpfr_init2@plt>
   242ec:	mov	x0, sp
   242f0:	mov	w2, #0xffffffff            	// #-1
   242f4:	mov	x1, x21
   242f8:	str	wzr, [x23, x22]
   242fc:	bl	c360 <mpfr_rint@plt>
   24300:	ldr	w8, [x23, x22]
   24304:	str	w24, [x23, x22]
   24308:	tbnz	w8, #1, 24348 <mpfr_rint_round@@Base+0xf0>
   2430c:	ldr	w3, [sp, #8]
   24310:	mov	x1, sp
   24314:	mov	x0, x20
   24318:	mov	w2, w19
   2431c:	bl	c6f0 <mpfr_set4@plt>
   24320:	mov	w19, w0
   24324:	mov	x0, sp
   24328:	bl	c110 <mpfr_clear@plt>
   2432c:	mov	w0, w19
   24330:	ldp	x20, x19, [sp, #80]
   24334:	ldp	x22, x21, [sp, #64]
   24338:	ldp	x24, x23, [sp, #48]
   2433c:	ldp	x29, x30, [sp, #32]
   24340:	add	sp, sp, #0x60
   24344:	ret
   24348:	ldr	w2, [x21, #8]
   2434c:	mov	x0, x20
   24350:	mov	w1, w19
   24354:	bl	bff0 <mpfr_overflow@plt>
   24358:	b	24320 <mpfr_rint_round@@Base+0xc8>

000000000002435c <mpfr_rint_trunc@@Base>:
   2435c:	sub	sp, sp, #0x60
   24360:	stp	x29, x30, [sp, #32]
   24364:	stp	x24, x23, [sp, #48]
   24368:	stp	x22, x21, [sp, #64]
   2436c:	stp	x20, x19, [sp, #80]
   24370:	ldr	x8, [x1, #16]
   24374:	mov	x9, #0x4                   	// #4
   24378:	movk	x9, #0x8000, lsl #48
   2437c:	mov	w19, w2
   24380:	mov	x21, x1
   24384:	cmp	x8, x9
   24388:	mov	x20, x0
   2438c:	add	x29, sp, #0x20
   24390:	b.lt	243a0 <mpfr_rint_trunc@@Base+0x44>  // b.tstop
   24394:	mov	x0, x21
   24398:	bl	c200 <mpfr_integer_p@plt>
   2439c:	cbz	w0, 243c8 <mpfr_rint_trunc@@Base+0x6c>
   243a0:	ldr	w3, [x21, #8]
   243a4:	mov	x0, x20
   243a8:	mov	x1, x21
   243ac:	mov	w2, w19
   243b0:	ldp	x20, x19, [sp, #80]
   243b4:	ldp	x22, x21, [sp, #64]
   243b8:	ldp	x24, x23, [sp, #48]
   243bc:	ldp	x29, x30, [sp, #32]
   243c0:	add	sp, sp, #0x60
   243c4:	b	c6f0 <mpfr_set4@plt>
   243c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   243cc:	ldr	x1, [x0, #2656]
   243d0:	add	x0, x0, #0xa60
   243d4:	blr	x1
   243d8:	mrs	x23, tpidr_el0
   243dc:	ldr	x1, [x21]
   243e0:	ldr	w24, [x23, x0]
   243e4:	mov	x22, x0
   243e8:	mov	x0, sp
   243ec:	bl	cad0 <mpfr_init2@plt>
   243f0:	mov	x0, sp
   243f4:	mov	w2, #0x1                   	// #1
   243f8:	mov	x1, x21
   243fc:	bl	c360 <mpfr_rint@plt>
   24400:	ldr	w3, [sp, #8]
   24404:	mov	x1, sp
   24408:	mov	x0, x20
   2440c:	mov	w2, w19
   24410:	str	w24, [x23, x22]
   24414:	bl	c6f0 <mpfr_set4@plt>
   24418:	mov	w19, w0
   2441c:	mov	x0, sp
   24420:	bl	c110 <mpfr_clear@plt>
   24424:	mov	w0, w19
   24428:	ldp	x20, x19, [sp, #80]
   2442c:	ldp	x22, x21, [sp, #64]
   24430:	ldp	x24, x23, [sp, #48]
   24434:	ldp	x29, x30, [sp, #32]
   24438:	add	sp, sp, #0x60
   2443c:	ret

0000000000024440 <mpfr_rint_ceil@@Base>:
   24440:	sub	sp, sp, #0x60
   24444:	stp	x29, x30, [sp, #32]
   24448:	stp	x24, x23, [sp, #48]
   2444c:	stp	x22, x21, [sp, #64]
   24450:	stp	x20, x19, [sp, #80]
   24454:	ldr	x8, [x1, #16]
   24458:	mov	x9, #0x4                   	// #4
   2445c:	movk	x9, #0x8000, lsl #48
   24460:	mov	w19, w2
   24464:	mov	x21, x1
   24468:	cmp	x8, x9
   2446c:	mov	x20, x0
   24470:	add	x29, sp, #0x20
   24474:	b.lt	24484 <mpfr_rint_ceil@@Base+0x44>  // b.tstop
   24478:	mov	x0, x21
   2447c:	bl	c200 <mpfr_integer_p@plt>
   24480:	cbz	w0, 244ac <mpfr_rint_ceil@@Base+0x6c>
   24484:	ldr	w3, [x21, #8]
   24488:	mov	x0, x20
   2448c:	mov	x1, x21
   24490:	mov	w2, w19
   24494:	ldp	x20, x19, [sp, #80]
   24498:	ldp	x22, x21, [sp, #64]
   2449c:	ldp	x24, x23, [sp, #48]
   244a0:	ldp	x29, x30, [sp, #32]
   244a4:	add	sp, sp, #0x60
   244a8:	b	c6f0 <mpfr_set4@plt>
   244ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   244b0:	ldr	x1, [x0, #2656]
   244b4:	add	x0, x0, #0xa60
   244b8:	blr	x1
   244bc:	mrs	x23, tpidr_el0
   244c0:	ldr	x1, [x21]
   244c4:	ldr	w24, [x23, x0]
   244c8:	mov	x22, x0
   244cc:	mov	x0, sp
   244d0:	bl	cad0 <mpfr_init2@plt>
   244d4:	mov	x0, sp
   244d8:	mov	w2, #0x2                   	// #2
   244dc:	mov	x1, x21
   244e0:	str	wzr, [x23, x22]
   244e4:	bl	c360 <mpfr_rint@plt>
   244e8:	ldr	w8, [x23, x22]
   244ec:	str	w24, [x23, x22]
   244f0:	tbnz	w8, #1, 24530 <mpfr_rint_ceil@@Base+0xf0>
   244f4:	ldr	w3, [sp, #8]
   244f8:	mov	x1, sp
   244fc:	mov	x0, x20
   24500:	mov	w2, w19
   24504:	bl	c6f0 <mpfr_set4@plt>
   24508:	mov	w19, w0
   2450c:	mov	x0, sp
   24510:	bl	c110 <mpfr_clear@plt>
   24514:	mov	w0, w19
   24518:	ldp	x20, x19, [sp, #80]
   2451c:	ldp	x22, x21, [sp, #64]
   24520:	ldp	x24, x23, [sp, #48]
   24524:	ldp	x29, x30, [sp, #32]
   24528:	add	sp, sp, #0x60
   2452c:	ret
   24530:	mov	w2, #0x1                   	// #1
   24534:	mov	x0, x20
   24538:	mov	w1, w19
   2453c:	bl	bff0 <mpfr_overflow@plt>
   24540:	b	24508 <mpfr_rint_ceil@@Base+0xc8>

0000000000024544 <mpfr_rint_floor@@Base>:
   24544:	sub	sp, sp, #0x60
   24548:	stp	x29, x30, [sp, #32]
   2454c:	stp	x24, x23, [sp, #48]
   24550:	stp	x22, x21, [sp, #64]
   24554:	stp	x20, x19, [sp, #80]
   24558:	ldr	x8, [x1, #16]
   2455c:	mov	x9, #0x4                   	// #4
   24560:	movk	x9, #0x8000, lsl #48
   24564:	mov	w19, w2
   24568:	mov	x21, x1
   2456c:	cmp	x8, x9
   24570:	mov	x20, x0
   24574:	add	x29, sp, #0x20
   24578:	b.lt	24588 <mpfr_rint_floor@@Base+0x44>  // b.tstop
   2457c:	mov	x0, x21
   24580:	bl	c200 <mpfr_integer_p@plt>
   24584:	cbz	w0, 245b0 <mpfr_rint_floor@@Base+0x6c>
   24588:	ldr	w3, [x21, #8]
   2458c:	mov	x0, x20
   24590:	mov	x1, x21
   24594:	mov	w2, w19
   24598:	ldp	x20, x19, [sp, #80]
   2459c:	ldp	x22, x21, [sp, #64]
   245a0:	ldp	x24, x23, [sp, #48]
   245a4:	ldp	x29, x30, [sp, #32]
   245a8:	add	sp, sp, #0x60
   245ac:	b	c6f0 <mpfr_set4@plt>
   245b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   245b4:	ldr	x1, [x0, #2656]
   245b8:	add	x0, x0, #0xa60
   245bc:	blr	x1
   245c0:	mrs	x23, tpidr_el0
   245c4:	ldr	x1, [x21]
   245c8:	ldr	w24, [x23, x0]
   245cc:	mov	x22, x0
   245d0:	mov	x0, sp
   245d4:	bl	cad0 <mpfr_init2@plt>
   245d8:	mov	x0, sp
   245dc:	mov	w2, #0x3                   	// #3
   245e0:	mov	x1, x21
   245e4:	str	wzr, [x23, x22]
   245e8:	bl	c360 <mpfr_rint@plt>
   245ec:	ldr	w8, [x23, x22]
   245f0:	str	w24, [x23, x22]
   245f4:	tbnz	w8, #1, 24634 <mpfr_rint_floor@@Base+0xf0>
   245f8:	ldr	w3, [sp, #8]
   245fc:	mov	x1, sp
   24600:	mov	x0, x20
   24604:	mov	w2, w19
   24608:	bl	c6f0 <mpfr_set4@plt>
   2460c:	mov	w19, w0
   24610:	mov	x0, sp
   24614:	bl	c110 <mpfr_clear@plt>
   24618:	mov	w0, w19
   2461c:	ldp	x20, x19, [sp, #80]
   24620:	ldp	x22, x21, [sp, #64]
   24624:	ldp	x24, x23, [sp, #48]
   24628:	ldp	x29, x30, [sp, #32]
   2462c:	add	sp, sp, #0x60
   24630:	ret
   24634:	mov	w2, #0xffffffff            	// #-1
   24638:	mov	x0, x20
   2463c:	mov	w1, w19
   24640:	bl	bff0 <mpfr_overflow@plt>
   24644:	b	2460c <mpfr_rint_floor@@Base+0xc8>

0000000000024648 <mpfr_ui_div@@Base>:
   24648:	sub	sp, sp, #0x80
   2464c:	stp	x29, x30, [sp, #32]
   24650:	stp	x26, x25, [sp, #64]
   24654:	stp	x24, x23, [sp, #80]
   24658:	stp	x22, x21, [sp, #96]
   2465c:	stp	x20, x19, [sp, #112]
   24660:	ldr	x9, [x2, #16]
   24664:	mov	x8, #0x2                   	// #2
   24668:	movk	x8, #0x8000, lsl #48
   2466c:	add	x10, x8, #0x2
   24670:	cmp	x9, x10
   24674:	mov	x19, x0
   24678:	str	x27, [sp, #48]
   2467c:	add	x29, sp, #0x20
   24680:	b.lt	2478c <mpfr_ui_div@@Base+0x144>  // b.tstop
   24684:	cbz	x1, 247e0 <mpfr_ui_div@@Base+0x198>
   24688:	add	x9, x29, #0x18
   2468c:	clz	x11, x1
   24690:	mov	w8, #0x40                  	// #64
   24694:	mov	w10, #0x1                   	// #1
   24698:	str	x9, [sp, #24]
   2469c:	lsl	x9, x1, x11
   246a0:	mov	w20, w3
   246a4:	str	x8, [sp]
   246a8:	str	w10, [sp, #8]
   246ac:	str	x9, [x29, #24]
   246b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   246b4:	ldr	x1, [x0, #2656]
   246b8:	add	x0, x0, #0xa60
   246bc:	blr	x1
   246c0:	mrs	x24, tpidr_el0
   246c4:	ldr	w26, [x24, x0]
   246c8:	mov	x21, x0
   246cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   246d0:	ldr	x1, [x0, #2592]
   246d4:	add	x0, x0, #0xa20
   246d8:	blr	x1
   246dc:	ldr	x25, [x24, x0]
   246e0:	mov	x22, x0
   246e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   246e8:	ldr	x1, [x0, #2624]
   246ec:	add	x0, x0, #0xa40
   246f0:	blr	x1
   246f4:	ldr	x27, [x24, x0]
   246f8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   246fc:	mov	x23, x0
   24700:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   24704:	str	x10, [x24, x0]
   24708:	sub	x8, x8, x11
   2470c:	mov	x1, sp
   24710:	mov	x0, x19
   24714:	str	x9, [x24, x22]
   24718:	str	x8, [sp, #16]
   2471c:	bl	c670 <mpfr_div@plt>
   24720:	ldr	w8, [x24, x21]
   24724:	str	x25, [x24, x22]
   24728:	str	x27, [x24, x23]
   2472c:	orr	w9, w8, w26
   24730:	str	w9, [x24, x21]
   24734:	ldr	x10, [x19, #16]
   24738:	mov	w8, w0
   2473c:	cmp	x10, x27
   24740:	b.gt	247f8 <mpfr_ui_div@@Base+0x1b0>
   24744:	cmp	x10, x25
   24748:	b.lt	247f8 <mpfr_ui_div@@Base+0x1b0>  // b.tstop
   2474c:	cbz	w8, 24768 <mpfr_ui_div@@Base+0x120>
   24750:	orr	w9, w9, #0x8
   24754:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24758:	ldr	x1, [x0, #2656]
   2475c:	add	x0, x0, #0xa60
   24760:	blr	x1
   24764:	str	w9, [x24, x0]
   24768:	ldp	x20, x19, [sp, #112]
   2476c:	ldp	x22, x21, [sp, #96]
   24770:	ldp	x24, x23, [sp, #80]
   24774:	ldp	x26, x25, [sp, #64]
   24778:	ldr	x27, [sp, #48]
   2477c:	ldp	x29, x30, [sp, #32]
   24780:	mov	w0, w8
   24784:	add	sp, sp, #0x80
   24788:	ret
   2478c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   24790:	cmp	x9, x10
   24794:	b.eq	247e0 <mpfr_ui_div@@Base+0x198>  // b.none
   24798:	mov	x10, #0x2                   	// #2
   2479c:	movk	x10, #0x8000, lsl #48
   247a0:	cmp	x9, x10
   247a4:	b.eq	24810 <mpfr_ui_div@@Base+0x1c8>  // b.none
   247a8:	cbz	x1, 24810 <mpfr_ui_div@@Base+0x1c8>
   247ac:	ldr	w8, [x2, #8]
   247b0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   247b4:	str	x9, [x19, #16]
   247b8:	str	w8, [x19, #8]
   247bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   247c0:	ldr	x1, [x0, #2656]
   247c4:	add	x0, x0, #0xa60
   247c8:	blr	x1
   247cc:	mrs	x9, tpidr_el0
   247d0:	ldr	w10, [x9, x0]
   247d4:	mov	w8, wzr
   247d8:	orr	w10, w10, #0x20
   247dc:	b	24834 <mpfr_ui_div@@Base+0x1ec>
   247e0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   247e4:	str	x9, [x19, #16]
   247e8:	ldr	w9, [x2, #8]
   247ec:	mov	w8, wzr
   247f0:	str	w9, [x19, #8]
   247f4:	b	24768 <mpfr_ui_div@@Base+0x120>
   247f8:	mov	x0, x19
   247fc:	mov	w1, w8
   24800:	mov	w2, w20
   24804:	bl	cb80 <mpfr_check_range@plt>
   24808:	mov	w8, w0
   2480c:	b	24768 <mpfr_ui_div@@Base+0x120>
   24810:	str	x8, [x19, #16]
   24814:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24818:	ldr	x1, [x0, #2656]
   2481c:	add	x0, x0, #0xa60
   24820:	blr	x1
   24824:	mrs	x9, tpidr_el0
   24828:	ldr	w10, [x9, x0]
   2482c:	mov	w8, wzr
   24830:	orr	w10, w10, #0x4
   24834:	str	w10, [x9, x0]
   24838:	b	24768 <mpfr_ui_div@@Base+0x120>

000000000002483c <mpfr_ui_sub@@Base>:
   2483c:	sub	sp, sp, #0x80
   24840:	stp	x20, x19, [sp, #112]
   24844:	mov	w19, w3
   24848:	mov	x20, x0
   2484c:	stp	x29, x30, [sp, #32]
   24850:	str	x27, [sp, #48]
   24854:	stp	x26, x25, [sp, #64]
   24858:	stp	x24, x23, [sp, #80]
   2485c:	stp	x22, x21, [sp, #96]
   24860:	add	x29, sp, #0x20
   24864:	cbz	x1, 24984 <mpfr_ui_sub@@Base+0x148>
   24868:	ldr	x9, [x2, #16]
   2486c:	mov	x8, #0x2                   	// #2
   24870:	movk	x8, #0x8000, lsl #48
   24874:	add	x10, x8, #0x2
   24878:	cmp	x9, x10
   2487c:	b.lt	249b0 <mpfr_ui_sub@@Base+0x174>  // b.tstop
   24880:	add	x9, x29, #0x18
   24884:	clz	x11, x1
   24888:	mov	w8, #0x40                  	// #64
   2488c:	mov	w10, #0x1                   	// #1
   24890:	str	x9, [sp, #24]
   24894:	lsl	x9, x1, x11
   24898:	str	x8, [sp]
   2489c:	str	w10, [sp, #8]
   248a0:	str	x9, [x29, #24]
   248a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   248a8:	ldr	x1, [x0, #2656]
   248ac:	add	x0, x0, #0xa60
   248b0:	blr	x1
   248b4:	mrs	x24, tpidr_el0
   248b8:	ldr	w26, [x24, x0]
   248bc:	mov	x21, x0
   248c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   248c4:	ldr	x1, [x0, #2592]
   248c8:	add	x0, x0, #0xa20
   248cc:	blr	x1
   248d0:	ldr	x25, [x24, x0]
   248d4:	mov	x22, x0
   248d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   248dc:	ldr	x1, [x0, #2624]
   248e0:	add	x0, x0, #0xa40
   248e4:	blr	x1
   248e8:	ldr	x27, [x24, x0]
   248ec:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   248f0:	mov	x23, x0
   248f4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   248f8:	str	x10, [x24, x0]
   248fc:	sub	x8, x8, x11
   24900:	mov	x1, sp
   24904:	mov	x0, x20
   24908:	mov	w3, w19
   2490c:	str	x9, [x24, x22]
   24910:	str	x8, [sp, #16]
   24914:	bl	bc20 <mpfr_sub@plt>
   24918:	ldr	w8, [x24, x21]
   2491c:	str	x25, [x24, x22]
   24920:	str	x27, [x24, x23]
   24924:	orr	w9, w8, w26
   24928:	str	w9, [x24, x21]
   2492c:	ldr	x10, [x20, #16]
   24930:	mov	w8, w0
   24934:	cmp	x10, x27
   24938:	b.gt	249f8 <mpfr_ui_sub@@Base+0x1bc>
   2493c:	cmp	x10, x25
   24940:	b.lt	249f8 <mpfr_ui_sub@@Base+0x1bc>  // b.tstop
   24944:	cbz	w8, 24960 <mpfr_ui_sub@@Base+0x124>
   24948:	orr	w9, w9, #0x8
   2494c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24950:	ldr	x1, [x0, #2656]
   24954:	add	x0, x0, #0xa60
   24958:	blr	x1
   2495c:	str	w9, [x24, x0]
   24960:	ldp	x20, x19, [sp, #112]
   24964:	ldp	x22, x21, [sp, #96]
   24968:	ldp	x24, x23, [sp, #80]
   2496c:	ldp	x26, x25, [sp, #64]
   24970:	ldr	x27, [sp, #48]
   24974:	ldp	x29, x30, [sp, #32]
   24978:	mov	w0, w8
   2497c:	add	sp, sp, #0x80
   24980:	ret
   24984:	mov	x0, x20
   24988:	mov	x1, x2
   2498c:	mov	w2, w19
   24990:	ldp	x20, x19, [sp, #112]
   24994:	ldp	x22, x21, [sp, #96]
   24998:	ldp	x24, x23, [sp, #80]
   2499c:	ldp	x26, x25, [sp, #64]
   249a0:	ldr	x27, [sp, #48]
   249a4:	ldp	x29, x30, [sp, #32]
   249a8:	add	sp, sp, #0x80
   249ac:	b	be20 <mpfr_neg@plt>
   249b0:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   249b4:	cmp	x9, x10
   249b8:	b.eq	24a10 <mpfr_ui_sub@@Base+0x1d4>  // b.none
   249bc:	mov	x10, #0x2                   	// #2
   249c0:	movk	x10, #0x8000, lsl #48
   249c4:	cmp	x9, x10
   249c8:	b.ne	24a28 <mpfr_ui_sub@@Base+0x1ec>  // b.any
   249cc:	str	x8, [x20, #16]
   249d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   249d4:	ldr	x1, [x0, #2656]
   249d8:	add	x0, x0, #0xa60
   249dc:	blr	x1
   249e0:	mrs	x9, tpidr_el0
   249e4:	ldr	w10, [x9, x0]
   249e8:	mov	w8, wzr
   249ec:	orr	w10, w10, #0x4
   249f0:	str	w10, [x9, x0]
   249f4:	b	24960 <mpfr_ui_sub@@Base+0x124>
   249f8:	mov	x0, x20
   249fc:	mov	w1, w8
   24a00:	mov	w2, w19
   24a04:	bl	cb80 <mpfr_check_range@plt>
   24a08:	mov	w8, w0
   24a0c:	b	24960 <mpfr_ui_sub@@Base+0x124>
   24a10:	str	x10, [x20, #16]
   24a14:	ldr	w9, [x2, #8]
   24a18:	mov	w8, wzr
   24a1c:	neg	w9, w9
   24a20:	str	w9, [x20, #8]
   24a24:	b	24960 <mpfr_ui_sub@@Base+0x124>
   24a28:	mov	x0, x20
   24a2c:	mov	w3, w19
   24a30:	ldp	x20, x19, [sp, #112]
   24a34:	ldp	x22, x21, [sp, #96]
   24a38:	ldp	x24, x23, [sp, #80]
   24a3c:	ldp	x26, x25, [sp, #64]
   24a40:	ldr	x27, [sp, #48]
   24a44:	ldp	x29, x30, [sp, #32]
   24a48:	mov	x2, xzr
   24a4c:	add	sp, sp, #0x80
   24a50:	b	c640 <mpfr_set_ui_2exp@plt>

0000000000024a54 <mpfr_urandom@@Base>:
   24a54:	sub	sp, sp, #0x70
   24a58:	stp	x29, x30, [sp, #16]
   24a5c:	stp	x28, x27, [sp, #32]
   24a60:	stp	x26, x25, [sp, #48]
   24a64:	stp	x24, x23, [sp, #64]
   24a68:	stp	x22, x21, [sp, #80]
   24a6c:	stp	x20, x19, [sp, #96]
   24a70:	add	x29, sp, #0x10
   24a74:	str	w2, [sp, #4]
   24a78:	mov	x21, x1
   24a7c:	mov	x20, x0
   24a80:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24a84:	ldr	x1, [x0, #2656]
   24a88:	add	x0, x0, #0xa60
   24a8c:	blr	x1
   24a90:	mrs	x23, tpidr_el0
   24a94:	ldr	w8, [x23, x0]
   24a98:	str	w8, [sp]
   24a9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24aa0:	ldr	x1, [x0, #2592]
   24aa4:	add	x0, x0, #0xa20
   24aa8:	blr	x1
   24aac:	ldr	x25, [x23, x0]
   24ab0:	mov	x8, x0
   24ab4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24ab8:	ldr	x1, [x0, #2624]
   24abc:	add	x0, x0, #0xa40
   24ac0:	blr	x1
   24ac4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   24ac8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   24acc:	ldr	x26, [x23, x0]
   24ad0:	str	x9, [x23, x8]
   24ad4:	str	x10, [x23, x0]
   24ad8:	ldr	x22, [x20, #24]
   24adc:	ldr	x28, [x20]
   24ae0:	mov	x27, xzr
   24ae4:	mov	w8, #0x1                   	// #1
   24ae8:	mov	w19, #0x8                   	// #8
   24aec:	mov	x24, #0xbfffffffffffffff    	// #-4611686018427387905
   24af0:	str	xzr, [x20, #16]
   24af4:	str	w8, [x20, #8]
   24af8:	mov	w2, #0x8                   	// #8
   24afc:	mov	x0, x22
   24b00:	mov	x1, x21
   24b04:	bl	c860 <mpfr_rand_raw@plt>
   24b08:	ldr	x8, [x22]
   24b0c:	clz	x9, x8
   24b10:	cmp	x8, #0x0
   24b14:	sub	w8, w9, #0x38
   24b18:	csel	w8, w19, w8, eq  // eq = none
   24b1c:	cmp	x27, x24
   24b20:	sxtw	x9, w8
   24b24:	csel	x9, x9, xzr, gt
   24b28:	cmp	w8, #0x8
   24b2c:	sub	x27, x27, x9
   24b30:	b.eq	24af8 <mpfr_urandom@@Base+0xa4>  // b.none
   24b34:	subs	x2, x28, #0x1
   24b38:	b.eq	24c60 <mpfr_urandom@@Base+0x20c>  // b.none
   24b3c:	mov	x0, x22
   24b40:	mov	x1, x21
   24b44:	bl	c860 <mpfr_rand_raw@plt>
   24b48:	ldr	x8, [x20]
   24b4c:	sub	x9, x8, #0x1
   24b50:	add	x8, x8, #0x3e
   24b54:	cmp	x9, #0x0
   24b58:	csel	x8, x8, x9, lt  // lt = tstop
   24b5c:	asr	x19, x8, #6
   24b60:	add	x2, x19, #0x1
   24b64:	lsl	x8, x2, #6
   24b68:	subs	x3, x8, x28
   24b6c:	b.eq	24b7c <mpfr_urandom@@Base+0x128>  // b.none
   24b70:	mov	x0, x22
   24b74:	mov	x1, x22
   24b78:	bl	bd70 <__gmpn_lshift@plt>
   24b7c:	ldr	x8, [x22, x19, lsl #3]
   24b80:	orr	x8, x8, #0x8000000000000000
   24b84:	str	x8, [x22, x19, lsl #3]
   24b88:	add	x0, sp, #0x8
   24b8c:	mov	w2, #0x1                   	// #1
   24b90:	mov	x1, x21
   24b94:	bl	c860 <mpfr_rand_raw@plt>
   24b98:	ldr	w19, [sp, #4]
   24b9c:	cmp	w19, #0x2
   24ba0:	b.eq	24bbc <mpfr_urandom@@Base+0x168>  // b.none
   24ba4:	cmp	w19, #0x4
   24ba8:	b.eq	24bbc <mpfr_urandom@@Base+0x168>  // b.none
   24bac:	mov	w8, #0xffffffff            	// #-1
   24bb0:	cbnz	w19, 24bc8 <mpfr_urandom@@Base+0x174>
   24bb4:	ldr	x9, [sp, #8]
   24bb8:	cbz	x9, 24bc8 <mpfr_urandom@@Base+0x174>
   24bbc:	mov	x0, x20
   24bc0:	bl	c1c0 <mpfr_nextabove@plt>
   24bc4:	mov	w8, #0x1                   	// #1
   24bc8:	ldr	x9, [x20, #16]
   24bcc:	add	x9, x9, x27
   24bd0:	str	x9, [x20, #16]
   24bd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24bd8:	ldr	x1, [x0, #2656]
   24bdc:	add	x0, x0, #0xa60
   24be0:	blr	x1
   24be4:	ldr	w10, [sp]
   24be8:	str	w10, [x23, x0]
   24bec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24bf0:	ldr	x1, [x0, #2592]
   24bf4:	add	x0, x0, #0xa20
   24bf8:	blr	x1
   24bfc:	str	x25, [x23, x0]
   24c00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24c04:	ldr	x1, [x0, #2624]
   24c08:	add	x0, x0, #0xa40
   24c0c:	blr	x1
   24c10:	cmp	x9, x26
   24c14:	str	x26, [x23, x0]
   24c18:	b.gt	24c6c <mpfr_urandom@@Base+0x218>
   24c1c:	cmp	x9, x25
   24c20:	b.lt	24c6c <mpfr_urandom@@Base+0x218>  // b.tstop
   24c24:	orr	w9, w10, #0x8
   24c28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24c2c:	ldr	x1, [x0, #2656]
   24c30:	add	x0, x0, #0xa60
   24c34:	blr	x1
   24c38:	str	w9, [x23, x0]
   24c3c:	ldp	x20, x19, [sp, #96]
   24c40:	ldp	x22, x21, [sp, #80]
   24c44:	ldp	x24, x23, [sp, #64]
   24c48:	ldp	x26, x25, [sp, #48]
   24c4c:	ldp	x28, x27, [sp, #32]
   24c50:	ldp	x29, x30, [sp, #16]
   24c54:	mov	w0, w8
   24c58:	add	sp, sp, #0x70
   24c5c:	ret
   24c60:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   24c64:	str	x8, [x22]
   24c68:	b	24b88 <mpfr_urandom@@Base+0x134>
   24c6c:	mov	x0, x20
   24c70:	mov	w1, w8
   24c74:	mov	w2, w19
   24c78:	bl	cb80 <mpfr_check_range@plt>
   24c7c:	mov	w8, w0
   24c80:	b	24c3c <mpfr_urandom@@Base+0x1e8>

0000000000024c84 <mpfr_rand_raw@@Base>:
   24c84:	sub	sp, sp, #0x40
   24c88:	str	x21, [sp, #32]
   24c8c:	stp	x20, x19, [sp, #48]
   24c90:	mov	x20, x2
   24c94:	mov	x21, x1
   24c98:	cmp	x2, #0x0
   24c9c:	mov	x19, x0
   24ca0:	stp	x29, x30, [sp, #16]
   24ca4:	add	x29, sp, #0x10
   24ca8:	b.le	24d10 <mpfr_rand_raw@@Base+0x8c>
   24cac:	mov	x0, sp
   24cb0:	bl	c040 <mpfr_mpz_init@plt>
   24cb4:	mov	x0, sp
   24cb8:	mov	x1, x21
   24cbc:	mov	x2, x20
   24cc0:	bl	cd60 <__gmpz_urandomb@plt>
   24cc4:	ldr	x1, [sp, #8]
   24cc8:	cmp	x1, x19
   24ccc:	b.eq	24cf4 <mpfr_rand_raw@@Base+0x70>  // b.none
   24cd0:	sub	x8, x20, #0x1
   24cd4:	add	x9, x20, #0x3e
   24cd8:	cmp	x8, #0x0
   24cdc:	csel	x8, x9, x8, lt  // lt = tstop
   24ce0:	asr	x8, x8, #6
   24ce4:	lsl	x8, x8, #3
   24ce8:	add	x2, x8, #0x8
   24cec:	mov	x0, x19
   24cf0:	bl	bad0 <memcpy@plt>
   24cf4:	mov	x0, sp
   24cf8:	bl	c210 <mpfr_mpz_clear@plt>
   24cfc:	ldp	x20, x19, [sp, #48]
   24d00:	ldr	x21, [sp, #32]
   24d04:	ldp	x29, x30, [sp, #16]
   24d08:	add	sp, sp, #0x40
   24d0c:	ret
   24d10:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   24d14:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   24d18:	add	x0, x0, #0x77
   24d1c:	add	x2, x2, #0x82
   24d20:	mov	w1, #0x26                  	// #38
   24d24:	bl	cb90 <mpfr_assert_fail@plt>
   24d28:	b	24cac <mpfr_rand_raw@@Base+0x28>

0000000000024d2c <mpfr_urandomb@@Base>:
   24d2c:	stp	x29, x30, [sp, #-64]!
   24d30:	stp	x22, x21, [sp, #32]
   24d34:	stp	x20, x19, [sp, #48]
   24d38:	ldr	x2, [x0]
   24d3c:	ldr	x19, [x0, #24]
   24d40:	str	x23, [sp, #16]
   24d44:	mov	w8, #0x1                   	// #1
   24d48:	sub	x9, x2, #0x1
   24d4c:	add	x10, x2, #0x3e
   24d50:	cmp	x9, #0x0
   24d54:	csel	x9, x10, x9, lt  // lt = tstop
   24d58:	asr	x23, x9, #6
   24d5c:	add	x21, x23, #0x1
   24d60:	mov	x20, x0
   24d64:	str	w8, [x0, #8]
   24d68:	lsl	w8, w21, #6
   24d6c:	mov	x0, x19
   24d70:	mov	x29, sp
   24d74:	sub	w22, w8, w2
   24d78:	bl	c860 <mpfr_rand_raw@plt>
   24d7c:	cbz	w22, 24d94 <mpfr_urandomb@@Base+0x68>
   24d80:	mov	x0, x19
   24d84:	mov	x1, x19
   24d88:	mov	x2, x21
   24d8c:	mov	w3, w22
   24d90:	bl	bd70 <__gmpn_lshift@plt>
   24d94:	cbz	x21, 24dbc <mpfr_urandomb@@Base+0x90>
   24d98:	mov	x21, xzr
   24d9c:	mov	x22, xzr
   24da0:	ldr	x8, [x19, x23, lsl #3]
   24da4:	cbnz	x8, 24dcc <mpfr_urandomb@@Base+0xa0>
   24da8:	sub	x23, x23, #0x1
   24dac:	sub	x22, x22, #0x40
   24db0:	cmn	x23, #0x1
   24db4:	sub	x21, x21, #0x8
   24db8:	b.ne	24da0 <mpfr_urandomb@@Base+0x74>  // b.any
   24dbc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   24dc0:	mov	w0, wzr
   24dc4:	str	x8, [x20, #16]
   24dc8:	b	24e54 <mpfr_urandomb@@Base+0x128>
   24dcc:	clz	x3, x8
   24dd0:	sub	x8, x22, x3
   24dd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24dd8:	ldr	x1, [x0, #2592]
   24ddc:	add	x0, x0, #0xa20
   24de0:	blr	x1
   24de4:	mrs	x9, tpidr_el0
   24de8:	ldr	x10, [x9, x0]
   24dec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24df0:	ldr	x1, [x0, #2624]
   24df4:	add	x0, x0, #0xa40
   24df8:	blr	x1
   24dfc:	cmp	x8, x10
   24e00:	b.lt	24e68 <mpfr_urandomb@@Base+0x13c>  // b.tstop
   24e04:	ldr	x10, [x9, x0]
   24e08:	cmp	x8, x10
   24e0c:	b.gt	24e68 <mpfr_urandomb@@Base+0x13c>
   24e10:	add	x2, x23, #0x1
   24e14:	str	x8, [x20, #16]
   24e18:	cbz	w3, 24e30 <mpfr_urandomb@@Base+0x104>
   24e1c:	sub	x0, x19, x21
   24e20:	mov	x1, x19
   24e24:	bl	bd70 <__gmpn_lshift@plt>
   24e28:	cbnz	x22, 24e40 <mpfr_urandomb@@Base+0x114>
   24e2c:	b	24e50 <mpfr_urandomb@@Base+0x124>
   24e30:	cbz	x22, 24e50 <mpfr_urandomb@@Base+0x124>
   24e34:	sub	x0, x19, x21
   24e38:	mov	x1, x19
   24e3c:	bl	bba0 <__gmpn_copyd@plt>
   24e40:	neg	x2, x21
   24e44:	mov	x0, x19
   24e48:	mov	w1, wzr
   24e4c:	bl	c1b0 <memset@plt>
   24e50:	mov	w0, wzr
   24e54:	ldp	x20, x19, [sp, #48]
   24e58:	ldp	x22, x21, [sp, #32]
   24e5c:	ldr	x23, [sp, #16]
   24e60:	ldp	x29, x30, [sp], #64
   24e64:	ret
   24e68:	mov	x8, #0x2                   	// #2
   24e6c:	movk	x8, #0x8000, lsl #48
   24e70:	str	x8, [x20, #16]
   24e74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24e78:	ldr	x1, [x0, #2656]
   24e7c:	add	x0, x0, #0xa60
   24e80:	blr	x1
   24e84:	ldr	w8, [x9, x0]
   24e88:	orr	w8, w8, #0x4
   24e8c:	str	w8, [x9, x0]
   24e90:	mov	w0, #0x1                   	// #1
   24e94:	b	24e54 <mpfr_urandomb@@Base+0x128>

0000000000024e98 <mpfr_get_z_2exp@@Base>:
   24e98:	stp	x29, x30, [sp, #-48]!
   24e9c:	stp	x22, x21, [sp, #16]
   24ea0:	stp	x20, x19, [sp, #32]
   24ea4:	ldr	x8, [x1, #16]
   24ea8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   24eac:	mov	x19, x0
   24eb0:	mov	x29, sp
   24eb4:	cmp	x8, x9
   24eb8:	b.le	24f54 <mpfr_get_z_2exp@@Base+0xbc>
   24ebc:	ldr	x8, [x1]
   24ec0:	mov	x9, #0x1fffff0000          	// #137438887936
   24ec4:	movk	x9, #0xffc1
   24ec8:	mov	x20, x1
   24ecc:	sub	x10, x8, #0x1
   24ed0:	add	x11, x8, #0x3e
   24ed4:	cmp	x10, #0x0
   24ed8:	csel	x10, x11, x10, lt  // lt = tstop
   24edc:	asr	x22, x10, #6
   24ee0:	cmp	x8, x9
   24ee4:	add	x21, x22, #0x1
   24ee8:	b.ge	24f88 <mpfr_get_z_2exp@@Base+0xf0>  // b.tcont
   24eec:	lsl	x1, x21, #6
   24ef0:	mov	x0, x19
   24ef4:	bl	c490 <__gmpz_realloc2@plt>
   24ef8:	ldr	w8, [x20]
   24efc:	ldr	x0, [x19, #8]
   24f00:	ldr	x1, [x20, #24]
   24f04:	neg	w8, w8
   24f08:	ands	w3, w8, #0x3f
   24f0c:	b.eq	24fa4 <mpfr_get_z_2exp@@Base+0x10c>  // b.none
   24f10:	mov	x2, x21
   24f14:	bl	bd90 <__gmpn_rshift@plt>
   24f18:	ldr	w8, [x20, #8]
   24f1c:	mvn	w9, w22
   24f20:	cmp	w8, #0x0
   24f24:	csel	x8, x9, x21, lt  // lt = tstop
   24f28:	str	w8, [x19, #4]
   24f2c:	ldr	x8, [x20, #16]
   24f30:	ldr	x9, [x20]
   24f34:	eor	x10, x8, #0x8000000000000000
   24f38:	cmp	x10, x9
   24f3c:	b.cc	24fb8 <mpfr_get_z_2exp@@Base+0x120>  // b.lo, b.ul, b.last
   24f40:	sub	x0, x8, x9
   24f44:	ldp	x20, x19, [sp, #32]
   24f48:	ldp	x22, x21, [sp, #16]
   24f4c:	ldp	x29, x30, [sp], #48
   24f50:	ret
   24f54:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   24f58:	cmp	x8, x9
   24f5c:	b.ne	24fe0 <mpfr_get_z_2exp@@Base+0x148>  // b.any
   24f60:	mov	x0, x19
   24f64:	mov	x1, xzr
   24f68:	bl	bd60 <__gmpz_set_ui@plt>
   24f6c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24f70:	ldr	x1, [x0, #2592]
   24f74:	add	x0, x0, #0xa20
   24f78:	blr	x1
   24f7c:	mrs	x8, tpidr_el0
   24f80:	ldr	x0, [x8, x0]
   24f84:	b	24f44 <mpfr_get_z_2exp@@Base+0xac>
   24f88:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   24f8c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   24f90:	add	x0, x0, #0x8d
   24f94:	add	x2, x2, #0x99
   24f98:	mov	w1, #0x3c                  	// #60
   24f9c:	bl	cb90 <mpfr_assert_fail@plt>
   24fa0:	b	24eec <mpfr_get_z_2exp@@Base+0x54>
   24fa4:	cmp	x0, x1
   24fa8:	b.eq	24f18 <mpfr_get_z_2exp@@Base+0x80>  // b.none
   24fac:	lsl	x2, x21, #3
   24fb0:	bl	bad0 <memcpy@plt>
   24fb4:	b	24f18 <mpfr_get_z_2exp@@Base+0x80>
   24fb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24fbc:	ldr	x1, [x0, #2656]
   24fc0:	add	x0, x0, #0xa60
   24fc4:	blr	x1
   24fc8:	mrs	x8, tpidr_el0
   24fcc:	ldr	w9, [x8, x0]
   24fd0:	orr	w9, w9, #0x10
   24fd4:	str	w9, [x8, x0]
   24fd8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24fdc:	b	24f44 <mpfr_get_z_2exp@@Base+0xac>
   24fe0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   24fe4:	ldr	x1, [x0, #2656]
   24fe8:	add	x0, x0, #0xa60
   24fec:	blr	x1
   24ff0:	mrs	x8, tpidr_el0
   24ff4:	ldr	w9, [x8, x0]
   24ff8:	orr	w9, w9, #0x10
   24ffc:	str	w9, [x8, x0]
   25000:	b	24f60 <mpfr_get_z_2exp@@Base+0xc8>

0000000000025004 <mpfr_swap@@Base>:
   25004:	ldr	x8, [x0]
   25008:	ldr	x9, [x1]
   2500c:	str	x8, [x1]
   25010:	str	x9, [x0]
   25014:	ldr	w8, [x0, #8]
   25018:	ldr	w9, [x1, #8]
   2501c:	str	w8, [x1, #8]
   25020:	str	w9, [x0, #8]
   25024:	ldr	q0, [x0, #16]
   25028:	ldr	q1, [x1, #16]
   2502c:	str	q0, [x1, #16]
   25030:	str	q1, [x0, #16]
   25034:	ret

0000000000025038 <mpfr_fac_ui@@Base>:
   25038:	sub	sp, sp, #0xa0
   2503c:	stp	x20, x19, [sp, #144]
   25040:	mov	w19, w2
   25044:	subs	x9, x1, #0x1
   25048:	mov	x20, x0
   2504c:	stp	x29, x30, [sp, #64]
   25050:	stp	x28, x27, [sp, #80]
   25054:	stp	x26, x25, [sp, #96]
   25058:	stp	x24, x23, [sp, #112]
   2505c:	stp	x22, x21, [sp, #128]
   25060:	add	x29, sp, #0x40
   25064:	b.ls	25314 <mpfr_fac_ui@@Base+0x2dc>  // b.plast
   25068:	mov	x25, #0xfffffffffffffeff    	// #-257
   2506c:	mov	x21, x1
   25070:	movk	x25, #0x7fff, lsl #48
   25074:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25078:	ldr	x1, [x0, #2656]
   2507c:	add	x0, x0, #0xa60
   25080:	blr	x1
   25084:	mrs	x12, tpidr_el0
   25088:	ldr	w8, [x12, x0]
   2508c:	str	w8, [sp, #20]
   25090:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25094:	ldr	x1, [x0, #2592]
   25098:	add	x0, x0, #0xa20
   2509c:	blr	x1
   250a0:	ldr	x10, [x12, x0]
   250a4:	mov	x8, x0
   250a8:	str	x10, [sp, #8]
   250ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   250b0:	ldr	x1, [x0, #2624]
   250b4:	add	x0, x0, #0xa40
   250b8:	blr	x1
   250bc:	ldr	x10, [x12, x0]
   250c0:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   250c4:	str	x11, [x12, x0]
   250c8:	add	x0, sp, #0x20
   250cc:	str	x10, [sp]
   250d0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   250d4:	str	x10, [x12, x8]
   250d8:	ldr	x24, [x20]
   250dc:	clz	x8, x9
   250e0:	mov	w9, #0x87                  	// #135
   250e4:	sub	w8, w9, w8, lsl #1
   250e8:	add	x22, x24, w8, sxtw
   250ec:	mov	x1, x22
   250f0:	str	x12, [sp, #24]
   250f4:	bl	cad0 <mpfr_init2@plt>
   250f8:	cmp	w19, #0x0
   250fc:	mov	w23, #0x40                  	// #64
   25100:	cinc	x26, x24, eq  // eq = none
   25104:	mov	w27, #0x1                   	// #1
   25108:	add	x0, sp, #0x20
   2510c:	mov	w1, #0x1                   	// #1
   25110:	mov	x2, xzr
   25114:	mov	w3, w27
   25118:	bl	c640 <mpfr_set_ui_2exp@plt>
   2511c:	mov	w28, w0
   25120:	mov	w24, #0x2                   	// #2
   25124:	add	x0, sp, #0x20
   25128:	add	x1, sp, #0x20
   2512c:	mov	x2, x24
   25130:	mov	w3, w27
   25134:	bl	bb10 <mpfr_mul_ui@plt>
   25138:	cmp	w28, #0x0
   2513c:	add	x24, x24, #0x1
   25140:	csel	w28, w0, w28, eq  // eq = none
   25144:	cmp	x24, x21
   25148:	b.ls	25124 <mpfr_fac_ui@@Base+0xec>  // b.plast
   2514c:	subs	x24, x22, #0x1
   25150:	b.eq	25210 <mpfr_fac_ui@@Base+0x1d8>  // b.none
   25154:	cmp	x22, #0x1
   25158:	b.le	2521c <mpfr_fac_ui@@Base+0x1e4>
   2515c:	clz	x8, x24
   25160:	mov	w9, #0x40                  	// #64
   25164:	sub	x8, x9, x8
   25168:	cbz	w28, 25254 <mpfr_fac_ui@@Base+0x21c>
   2516c:	ldr	x9, [sp, #48]
   25170:	add	x10, x25, #0x105
   25174:	cmp	x9, x10
   25178:	b.lt	251e4 <mpfr_fac_ui@@Base+0x1ac>  // b.tstop
   2517c:	ldr	x9, [sp, #32]
   25180:	sub	x2, x24, x8
   25184:	ldr	x0, [sp, #56]
   25188:	mov	x3, x26
   2518c:	sub	x8, x9, #0x1
   25190:	add	x9, x9, #0x3e
   25194:	cmp	x8, #0x0
   25198:	csel	x8, x9, x8, lt  // lt = tstop
   2519c:	asr	x8, x8, #6
   251a0:	add	x1, x8, #0x1
   251a4:	bl	c3d0 <mpfr_round_p@plt>
   251a8:	cbz	w0, 251e4 <mpfr_fac_ui@@Base+0x1ac>
   251ac:	ldr	w3, [sp, #40]
   251b0:	add	x1, sp, #0x20
   251b4:	mov	x0, x20
   251b8:	mov	w2, w19
   251bc:	bl	c6f0 <mpfr_set4@plt>
   251c0:	tbz	w28, #31, 251cc <mpfr_fac_ui@@Base+0x194>
   251c4:	cmp	w0, #0x1
   251c8:	b.lt	2526c <mpfr_fac_ui@@Base+0x234>  // b.tstop
   251cc:	cmp	w28, #0x1
   251d0:	b.lt	251d8 <mpfr_fac_ui@@Base+0x1a0>  // b.tstop
   251d4:	tbz	w0, #31, 2526c <mpfr_fac_ui@@Base+0x234>
   251d8:	cmp	w27, #0x1
   251dc:	mov	w8, #0x1                   	// #1
   251e0:	cinc	w27, w8, eq  // eq = none
   251e4:	sub	x8, x25, x22
   251e8:	cmp	x23, x8
   251ec:	b.gt	25238 <mpfr_fac_ui@@Base+0x200>
   251f0:	add	x22, x22, x23
   251f4:	cmp	x22, #0x0
   251f8:	cinc	x8, x22, lt  // lt = tstop
   251fc:	add	x0, sp, #0x20
   25200:	mov	x1, x22
   25204:	asr	x23, x8, #1
   25208:	bl	bf80 <mpfr_set_prec@plt>
   2520c:	b	25108 <mpfr_fac_ui@@Base+0xd0>
   25210:	mov	x8, xzr
   25214:	cbnz	w28, 2516c <mpfr_fac_ui@@Base+0x134>
   25218:	b	25254 <mpfr_fac_ui@@Base+0x21c>
   2521c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   25220:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   25224:	mov	w1, #0x4d                  	// #77
   25228:	add	x0, x0, #0xaa
   2522c:	add	x2, x2, #0xb6
   25230:	bl	cb90 <mpfr_assert_fail@plt>
   25234:	b	2515c <mpfr_fac_ui@@Base+0x124>
   25238:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2523c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   25240:	mov	w1, #0x64                  	// #100
   25244:	add	x0, x0, #0xaa
   25248:	add	x2, x2, #0xe2
   2524c:	bl	cb90 <mpfr_assert_fail@plt>
   25250:	b	251f0 <mpfr_fac_ui@@Base+0x1b8>
   25254:	ldr	w3, [sp, #40]
   25258:	add	x1, sp, #0x20
   2525c:	mov	x0, x20
   25260:	mov	w2, w19
   25264:	bl	c6f0 <mpfr_set4@plt>
   25268:	mov	w28, w0
   2526c:	add	x0, sp, #0x20
   25270:	bl	c110 <mpfr_clear@plt>
   25274:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25278:	ldr	x1, [x0, #2656]
   2527c:	add	x0, x0, #0xa60
   25280:	blr	x1
   25284:	ldr	x9, [sp, #24]
   25288:	ldr	w10, [sp, #20]
   2528c:	str	w10, [x9, x0]
   25290:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25294:	ldr	x1, [x0, #2592]
   25298:	add	x0, x0, #0xa20
   2529c:	blr	x1
   252a0:	ldr	x11, [sp, #8]
   252a4:	str	x11, [x9, x0]
   252a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   252ac:	ldr	x1, [x0, #2624]
   252b0:	add	x0, x0, #0xa40
   252b4:	blr	x1
   252b8:	ldr	x12, [sp]
   252bc:	str	x12, [x9, x0]
   252c0:	ldr	x8, [x20, #16]
   252c4:	cmp	x8, x12
   252c8:	b.gt	2532c <mpfr_fac_ui@@Base+0x2f4>
   252cc:	cmp	x8, x11
   252d0:	b.lt	2532c <mpfr_fac_ui@@Base+0x2f4>  // b.tstop
   252d4:	cbz	w28, 252f0 <mpfr_fac_ui@@Base+0x2b8>
   252d8:	orr	w8, w10, #0x8
   252dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   252e0:	ldr	x1, [x0, #2656]
   252e4:	add	x0, x0, #0xa60
   252e8:	blr	x1
   252ec:	str	w8, [x9, x0]
   252f0:	mov	w0, w28
   252f4:	ldp	x20, x19, [sp, #144]
   252f8:	ldp	x22, x21, [sp, #128]
   252fc:	ldp	x24, x23, [sp, #112]
   25300:	ldp	x26, x25, [sp, #96]
   25304:	ldp	x28, x27, [sp, #80]
   25308:	ldp	x29, x30, [sp, #64]
   2530c:	add	sp, sp, #0xa0
   25310:	ret
   25314:	mov	w1, #0x1                   	// #1
   25318:	mov	x0, x20
   2531c:	mov	x2, xzr
   25320:	mov	w3, w19
   25324:	bl	c640 <mpfr_set_ui_2exp@plt>
   25328:	b	2533c <mpfr_fac_ui@@Base+0x304>
   2532c:	mov	x0, x20
   25330:	mov	w1, w28
   25334:	mov	w2, w19
   25338:	bl	cb80 <mpfr_check_range@plt>
   2533c:	mov	w28, w0
   25340:	b	252f0 <mpfr_fac_ui@@Base+0x2b8>

0000000000025344 <mpfr_cosh@@Base>:
   25344:	sub	sp, sp, #0x160
   25348:	stp	x29, x30, [sp, #256]
   2534c:	stp	x28, x27, [sp, #272]
   25350:	stp	x26, x25, [sp, #288]
   25354:	stp	x24, x23, [sp, #304]
   25358:	stp	x22, x21, [sp, #320]
   2535c:	stp	x20, x19, [sp, #336]
   25360:	ldr	x9, [x1, #16]
   25364:	mov	x11, #0xfffffffffffffeff    	// #-257
   25368:	movk	x11, #0x7fff, lsl #48
   2536c:	add	x8, x11, #0x105
   25370:	mov	w26, w2
   25374:	cmp	x9, x8
   25378:	mov	x20, x0
   2537c:	add	x29, sp, #0x100
   25380:	b.lt	25720 <mpfr_cosh@@Base+0x3dc>  // b.tstop
   25384:	mov	x22, x1
   25388:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2538c:	ldr	x1, [x0, #2656]
   25390:	add	x0, x0, #0xa60
   25394:	blr	x1
   25398:	mrs	x25, tpidr_el0
   2539c:	ldr	w19, [x25, x0]
   253a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   253a4:	ldr	x1, [x0, #2592]
   253a8:	add	x0, x0, #0xa20
   253ac:	blr	x1
   253b0:	ldr	x27, [x25, x0]
   253b4:	mov	x8, x0
   253b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   253bc:	ldr	x1, [x0, #2624]
   253c0:	add	x0, x0, #0xa40
   253c4:	blr	x1
   253c8:	ldr	x28, [x25, x0]
   253cc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   253d0:	str	x10, [x25, x8]
   253d4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   253d8:	str	x8, [x25, x0]
   253dc:	tbz	x9, #63, 253f4 <mpfr_cosh@@Base+0xb0>
   253e0:	ldr	x8, [x20]
   253e4:	neg	x2, x9, lsl #1
   253e8:	add	x8, x8, #0x1
   253ec:	cmp	x2, x8
   253f0:	b.hi	257ac <mpfr_cosh@@Base+0x468>  // b.pmore
   253f4:	ldr	x8, [x22]
   253f8:	mov	w10, #0x1                   	// #1
   253fc:	stur	x8, [x29, #-40]
   25400:	ldr	x8, [x22, #24]
   25404:	stur	w10, [x29, #-32]
   25408:	stp	x9, x8, [x29, #-24]
   2540c:	ldr	x22, [x20]
   25410:	subs	x23, x22, #0x1
   25414:	add	x21, x22, #0x3
   25418:	b.eq	25780 <mpfr_cosh@@Base+0x43c>  // b.none
   2541c:	b.le	25788 <mpfr_cosh@@Base+0x444>
   25420:	clz	x8, x23
   25424:	mov	w9, #0x40                  	// #64
   25428:	sub	x8, x9, x8
   2542c:	add	x23, x21, x8
   25430:	cmp	x23, x11
   25434:	b.gt	25810 <mpfr_cosh@@Base+0x4cc>
   25438:	sub	x8, x23, #0x1
   2543c:	add	x9, x23, #0x3e
   25440:	cmp	x8, #0x0
   25444:	csel	x8, x9, x8, lt  // lt = tstop
   25448:	str	x27, [sp]
   2544c:	asr	x8, x8, #6
   25450:	mov	x27, #0xfffffffffffffeff    	// #-257
   25454:	mov	w24, w26
   25458:	cmp	x23, #0x201
   2545c:	add	x26, x8, #0x1
   25460:	movk	x27, #0x7fff, lsl #48
   25464:	b.lt	25478 <mpfr_cosh@@Base+0x134>  // b.tstop
   25468:	lsl	x21, x26, #4
   2546c:	mov	x0, x21
   25470:	bl	cd50 <mpfr_allocate_func@plt>
   25474:	b	25484 <mpfr_cosh@@Base+0x140>
   25478:	add	x8, sp, #0x8
   2547c:	mov	x21, xzr
   25480:	add	x0, x8, #0x10
   25484:	mov	w9, #0x1                   	// #1
   25488:	add	x8, x0, x26, lsl #3
   2548c:	stp	x21, x0, [sp, #8]
   25490:	stur	x0, [x29, #-48]
   25494:	stur	x23, [x29, #-104]
   25498:	stur	w9, [x29, #-64]
   2549c:	stp	x8, x23, [x29, #-80]
   254a0:	stur	w9, [x29, #-96]
   254a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   254a8:	ldr	x1, [x0, #2656]
   254ac:	add	x0, x0, #0xa60
   254b0:	blr	x1
   254b4:	mov	x21, x0
   254b8:	str	wzr, [x25, x0]
   254bc:	sub	x0, x29, #0x68
   254c0:	sub	x1, x29, #0x28
   254c4:	mov	w2, #0x3                   	// #3
   254c8:	bl	c7a0 <mpfr_exp@plt>
   254cc:	ldrb	w8, [x25, x21]
   254d0:	mov	w26, w24
   254d4:	tbnz	w8, #1, 25704 <mpfr_cosh@@Base+0x3c0>
   254d8:	cmp	w26, #0x0
   254dc:	mov	w21, #0x40                  	// #64
   254e0:	cinc	x22, x22, eq  // eq = none
   254e4:	sub	x0, x29, #0x48
   254e8:	sub	x2, x29, #0x68
   254ec:	mov	w1, #0x1                   	// #1
   254f0:	mov	w3, #0x2                   	// #2
   254f4:	bl	c350 <mpfr_ui_div@plt>
   254f8:	sub	x0, x29, #0x48
   254fc:	sub	x1, x29, #0x68
   25500:	sub	x2, x29, #0x48
   25504:	mov	w3, #0x2                   	// #2
   25508:	bl	c240 <mpfr_add@plt>
   2550c:	sub	x0, x29, #0x48
   25510:	sub	x1, x29, #0x48
   25514:	mov	w2, #0x1                   	// #1
   25518:	mov	w3, wzr
   2551c:	bl	c950 <mpfr_div_2ui@plt>
   25520:	ldur	x8, [x29, #-56]
   25524:	add	x9, x27, #0x105
   25528:	cmp	x8, x9
   2552c:	b.lt	25560 <mpfr_cosh@@Base+0x21c>  // b.tstop
   25530:	ldur	x8, [x29, #-72]
   25534:	ldur	x0, [x29, #-48]
   25538:	sub	x2, x23, #0x3
   2553c:	mov	x3, x22
   25540:	sub	x9, x8, #0x1
   25544:	add	x8, x8, #0x3e
   25548:	cmp	x9, #0x0
   2554c:	csel	x8, x8, x9, lt  // lt = tstop
   25550:	asr	x8, x8, #6
   25554:	add	x1, x8, #0x1
   25558:	bl	c3d0 <mpfr_round_p@plt>
   2555c:	cbnz	w0, 2564c <mpfr_cosh@@Base+0x308>
   25560:	mov	x9, #0xfffffffffffffeff    	// #-257
   25564:	movk	x9, #0x7fff, lsl #48
   25568:	sub	x8, x9, x23
   2556c:	cmp	x21, x8
   25570:	b.gt	25628 <mpfr_cosh@@Base+0x2e4>
   25574:	add	x23, x23, x21
   25578:	cmp	x23, #0x0
   2557c:	cinc	x8, x23, lt  // lt = tstop
   25580:	cmp	x23, x9
   25584:	b.gt	25810 <mpfr_cosh@@Base+0x4cc>
   25588:	asr	x21, x8, #1
   2558c:	sub	x8, x23, #0x1
   25590:	add	x9, x23, #0x3e
   25594:	cmp	x8, #0x0
   25598:	ldr	x1, [sp, #8]
   2559c:	csel	x8, x9, x8, lt  // lt = tstop
   255a0:	asr	x8, x8, #6
   255a4:	mov	x27, #0xfffffffffffffeff    	// #-257
   255a8:	add	x26, x8, #0x1
   255ac:	movk	x27, #0x7fff, lsl #48
   255b0:	lsl	x2, x26, #4
   255b4:	str	x2, [sp, #8]
   255b8:	cbz	x1, 255c8 <mpfr_cosh@@Base+0x284>
   255bc:	ldr	x0, [sp, #16]
   255c0:	bl	c260 <mpfr_reallocate_func@plt>
   255c4:	b	255d0 <mpfr_cosh@@Base+0x28c>
   255c8:	mov	x0, x2
   255cc:	bl	cd50 <mpfr_allocate_func@plt>
   255d0:	mov	w9, #0x1                   	// #1
   255d4:	add	x8, x0, x26, lsl #3
   255d8:	str	x0, [sp, #16]
   255dc:	stur	x0, [x29, #-48]
   255e0:	stur	w9, [x29, #-64]
   255e4:	stur	x23, [x29, #-104]
   255e8:	stp	x8, x23, [x29, #-80]
   255ec:	stur	w9, [x29, #-96]
   255f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   255f4:	ldr	x1, [x0, #2656]
   255f8:	add	x0, x0, #0xa60
   255fc:	blr	x1
   25600:	mov	x26, x0
   25604:	str	wzr, [x25, x0]
   25608:	sub	x0, x29, #0x68
   2560c:	sub	x1, x29, #0x28
   25610:	mov	w2, #0x3                   	// #3
   25614:	bl	c7a0 <mpfr_exp@plt>
   25618:	ldrb	w8, [x25, x26]
   2561c:	mov	w26, w24
   25620:	tbz	w8, #1, 254e4 <mpfr_cosh@@Base+0x1a0>
   25624:	b	25704 <mpfr_cosh@@Base+0x3c0>
   25628:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2562c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   25630:	mov	w1, #0x76                  	// #118
   25634:	add	x0, x0, #0xc4
   25638:	add	x2, x2, #0xe2
   2563c:	bl	cb90 <mpfr_assert_fail@plt>
   25640:	mov	x9, #0xfffffffffffffeff    	// #-257
   25644:	movk	x9, #0x7fff, lsl #48
   25648:	b	25574 <mpfr_cosh@@Base+0x230>
   2564c:	ldur	w3, [x29, #-64]
   25650:	sub	x1, x29, #0x48
   25654:	mov	x0, x20
   25658:	mov	w2, w26
   2565c:	bl	c6f0 <mpfr_set4@plt>
   25660:	mov	w21, w0
   25664:	ldp	x27, x1, [sp]
   25668:	cbz	x1, 25674 <mpfr_cosh@@Base+0x330>
   2566c:	ldr	x0, [sp, #16]
   25670:	bl	cc80 <mpfr_free_func@plt>
   25674:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25678:	ldr	x1, [x0, #2656]
   2567c:	add	x0, x0, #0xa60
   25680:	blr	x1
   25684:	str	w19, [x25, x0]
   25688:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2568c:	ldr	x1, [x0, #2592]
   25690:	add	x0, x0, #0xa20
   25694:	blr	x1
   25698:	str	x27, [x25, x0]
   2569c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   256a0:	ldr	x1, [x0, #2624]
   256a4:	add	x0, x0, #0xa40
   256a8:	blr	x1
   256ac:	str	x28, [x25, x0]
   256b0:	ldr	x8, [x20, #16]
   256b4:	cmp	x8, x28
   256b8:	b.gt	2576c <mpfr_cosh@@Base+0x428>
   256bc:	cmp	x8, x27
   256c0:	b.lt	2576c <mpfr_cosh@@Base+0x428>  // b.tstop
   256c4:	cbz	w21, 256e0 <mpfr_cosh@@Base+0x39c>
   256c8:	orr	w8, w19, #0x8
   256cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   256d0:	ldr	x1, [x0, #2656]
   256d4:	add	x0, x0, #0xa60
   256d8:	blr	x1
   256dc:	str	w8, [x25, x0]
   256e0:	mov	w0, w21
   256e4:	ldp	x20, x19, [sp, #336]
   256e8:	ldp	x22, x21, [sp, #320]
   256ec:	ldp	x24, x23, [sp, #304]
   256f0:	ldp	x26, x25, [sp, #288]
   256f4:	ldp	x28, x27, [sp, #272]
   256f8:	ldp	x29, x30, [sp, #256]
   256fc:	add	sp, sp, #0x160
   25700:	ret
   25704:	mov	w2, #0x1                   	// #1
   25708:	mov	x0, x20
   2570c:	mov	w1, w26
   25710:	bl	bff0 <mpfr_overflow@plt>
   25714:	mov	w21, w0
   25718:	orr	w19, w19, #0x2
   2571c:	b	25664 <mpfr_cosh@@Base+0x320>
   25720:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   25724:	cmp	x9, x8
   25728:	b.eq	257d0 <mpfr_cosh@@Base+0x48c>  // b.none
   2572c:	mov	x8, #0x2                   	// #2
   25730:	movk	x8, #0x8000, lsl #48
   25734:	cmp	x9, x8
   25738:	b.ne	257e4 <mpfr_cosh@@Base+0x4a0>  // b.any
   2573c:	add	x8, x11, #0x103
   25740:	str	x8, [x20, #16]
   25744:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25748:	ldr	x1, [x0, #2656]
   2574c:	add	x0, x0, #0xa60
   25750:	blr	x1
   25754:	mrs	x8, tpidr_el0
   25758:	ldr	w9, [x8, x0]
   2575c:	mov	w21, wzr
   25760:	orr	w9, w9, #0x4
   25764:	str	w9, [x8, x0]
   25768:	b	256e0 <mpfr_cosh@@Base+0x39c>
   2576c:	mov	x0, x20
   25770:	mov	w1, w21
   25774:	mov	w2, w26
   25778:	bl	cb80 <mpfr_check_range@plt>
   2577c:	b	257f8 <mpfr_cosh@@Base+0x4b4>
   25780:	mov	x8, xzr
   25784:	b	2542c <mpfr_cosh@@Base+0xe8>
   25788:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2578c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   25790:	add	x0, x0, #0xc4
   25794:	add	x2, x2, #0xd9
   25798:	mov	w1, #0x53                  	// #83
   2579c:	bl	cb90 <mpfr_assert_fail@plt>
   257a0:	mov	x11, #0xfffffffffffffeff    	// #-257
   257a4:	movk	x11, #0x7fff, lsl #48
   257a8:	b	25420 <mpfr_cosh@@Base+0xdc>
   257ac:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   257b0:	ldr	x1, [x1, #3944]
   257b4:	mov	w3, #0x1                   	// #1
   257b8:	mov	x0, x20
   257bc:	mov	w4, w26
   257c0:	bl	c590 <mpfr_round_near_x@plt>
   257c4:	cbz	w0, 25800 <mpfr_cosh@@Base+0x4bc>
   257c8:	mov	w21, w0
   257cc:	b	25674 <mpfr_cosh@@Base+0x330>
   257d0:	str	x8, [x20, #16]
   257d4:	mov	w8, #0x1                   	// #1
   257d8:	mov	w21, wzr
   257dc:	str	w8, [x20, #8]
   257e0:	b	256e0 <mpfr_cosh@@Base+0x39c>
   257e4:	mov	w1, #0x1                   	// #1
   257e8:	mov	x0, x20
   257ec:	mov	x2, xzr
   257f0:	mov	w3, w26
   257f4:	bl	c640 <mpfr_set_ui_2exp@plt>
   257f8:	mov	w21, w0
   257fc:	b	256e0 <mpfr_cosh@@Base+0x39c>
   25800:	ldr	x9, [x22, #16]
   25804:	mov	x11, #0xfffffffffffffeff    	// #-257
   25808:	movk	x11, #0x7fff, lsl #48
   2580c:	b	253f4 <mpfr_cosh@@Base+0xb0>
   25810:	bl	c940 <mpfr_abort_prec_max@plt>

0000000000025814 <mpfr_sinh@@Base>:
   25814:	sub	sp, sp, #0x180
   25818:	stp	x29, x30, [sp, #288]
   2581c:	stp	x28, x27, [sp, #304]
   25820:	stp	x26, x25, [sp, #320]
   25824:	stp	x24, x23, [sp, #336]
   25828:	stp	x22, x21, [sp, #352]
   2582c:	stp	x20, x19, [sp, #368]
   25830:	ldr	x20, [x1, #16]
   25834:	mov	x23, #0xfffffffffffffeff    	// #-257
   25838:	movk	x23, #0x7fff, lsl #48
   2583c:	add	x8, x23, #0x105
   25840:	mov	x21, x1
   25844:	cmp	x20, x8
   25848:	mov	x19, x0
   2584c:	add	x29, sp, #0x120
   25850:	b.lt	25ce8 <mpfr_sinh@@Base+0x4d4>  // b.tstop
   25854:	mov	w27, w2
   25858:	tbz	x20, #63, 25874 <mpfr_sinh@@Base+0x60>
   2585c:	ldr	x8, [x19]
   25860:	mov	w9, #0x2                   	// #2
   25864:	sub	x2, x9, x20, lsl #1
   25868:	add	x8, x8, #0x1
   2586c:	cmp	x2, x8
   25870:	b.hi	25d70 <mpfr_sinh@@Base+0x55c>  // b.pmore
   25874:	ldr	x9, [x21]
   25878:	mov	w10, #0x1                   	// #1
   2587c:	stur	x9, [x29, #-40]
   25880:	ldr	x8, [x21, #24]
   25884:	stur	w10, [x29, #-32]
   25888:	stp	x20, x8, [x29, #-24]
   2588c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25890:	ldr	x1, [x0, #2656]
   25894:	add	x0, x0, #0xa60
   25898:	blr	x1
   2589c:	mrs	x25, tpidr_el0
   258a0:	ldr	w26, [x25, x0]
   258a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   258a8:	ldr	x1, [x0, #2592]
   258ac:	add	x0, x0, #0xa20
   258b0:	blr	x1
   258b4:	ldr	x10, [x25, x0]
   258b8:	mov	x8, x0
   258bc:	str	x10, [sp, #24]
   258c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   258c4:	ldr	x1, [x0, #2624]
   258c8:	add	x0, x0, #0xa40
   258cc:	blr	x1
   258d0:	ldr	x10, [x25, x0]
   258d4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   258d8:	str	x11, [x25, x0]
   258dc:	str	w26, [sp, #36]
   258e0:	str	x10, [sp, #16]
   258e4:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   258e8:	str	x10, [x25, x8]
   258ec:	ldr	x8, [x19]
   258f0:	cmp	x9, x8
   258f4:	csel	x22, x9, x8, gt
   258f8:	subs	x24, x22, #0x1
   258fc:	b.eq	25d20 <mpfr_sinh@@Base+0x50c>  // b.none
   25900:	b.le	25d40 <mpfr_sinh@@Base+0x52c>
   25904:	clz	x8, x24
   25908:	mov	w9, #0x40                  	// #64
   2590c:	sub	x8, x9, x8
   25910:	neg	x9, x20, lsl #1
   25914:	and	x9, x9, x20, asr #63
   25918:	add	x8, x22, x8
   2591c:	add	x8, x8, x9
   25920:	add	x26, x8, #0x4
   25924:	cmp	x26, x23
   25928:	b.gt	25dd4 <mpfr_sinh@@Base+0x5c0>
   2592c:	sub	x8, x26, #0x1
   25930:	add	x9, x26, #0x3e
   25934:	cmp	x8, #0x0
   25938:	csel	x8, x9, x8, lt  // lt = tstop
   2593c:	asr	x8, x8, #6
   25940:	cmp	x26, #0x201
   25944:	add	x20, x8, #0x1
   25948:	b.lt	2595c <mpfr_sinh@@Base+0x148>  // b.tstop
   2594c:	lsl	x22, x20, #4
   25950:	mov	x0, x22
   25954:	bl	cd50 <mpfr_allocate_func@plt>
   25958:	b	25968 <mpfr_sinh@@Base+0x154>
   2595c:	add	x8, sp, #0x28
   25960:	mov	x22, xzr
   25964:	add	x0, x8, #0x10
   25968:	cmp	w27, #0x0
   2596c:	stp	x22, x0, [sp, #40]
   25970:	mov	w22, #0x1                   	// #1
   25974:	add	x8, x0, x20, lsl #3
   25978:	str	w27, [sp, #12]
   2597c:	mov	w20, #0x40                  	// #64
   25980:	cset	w27, eq  // eq = none
   25984:	stur	x0, [x29, #-48]
   25988:	stur	w22, [x29, #-64]
   2598c:	stur	x26, [x29, #-104]
   25990:	stp	x8, x26, [x29, #-80]
   25994:	stur	w22, [x29, #-96]
   25998:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2599c:	ldr	x1, [x0, #2656]
   259a0:	add	x0, x0, #0xa60
   259a4:	blr	x1
   259a8:	mov	x24, x0
   259ac:	str	wzr, [x25, x0]
   259b0:	sub	x0, x29, #0x48
   259b4:	sub	x1, x29, #0x28
   259b8:	mov	w2, #0x3                   	// #3
   259bc:	bl	c7a0 <mpfr_exp@plt>
   259c0:	ldrb	w8, [x25, x24]
   259c4:	tbnz	w8, #1, 25af8 <mpfr_sinh@@Base+0x2e4>
   259c8:	ldur	x28, [x29, #-56]
   259cc:	sub	x0, x29, #0x68
   259d0:	sub	x2, x29, #0x48
   259d4:	mov	w1, #0x1                   	// #1
   259d8:	mov	w3, #0x2                   	// #2
   259dc:	bl	c350 <mpfr_ui_div@plt>
   259e0:	sub	x0, x29, #0x48
   259e4:	sub	x1, x29, #0x48
   259e8:	sub	x2, x29, #0x68
   259ec:	mov	w3, wzr
   259f0:	bl	bc20 <mpfr_sub@plt>
   259f4:	sub	x0, x29, #0x48
   259f8:	sub	x1, x29, #0x48
   259fc:	mov	w2, #0x1                   	// #1
   25a00:	mov	w3, wzr
   25a04:	bl	c950 <mpfr_div_2ui@plt>
   25a08:	ldur	x8, [x29, #-56]
   25a0c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   25a10:	mov	x24, x26
   25a14:	cmp	x8, x9
   25a18:	b.ne	25a78 <mpfr_sinh@@Base+0x264>  // b.any
   25a1c:	add	x24, x24, x26
   25a20:	sub	x8, x23, x24
   25a24:	cmp	x20, x8
   25a28:	b.gt	25c04 <mpfr_sinh@@Base+0x3f0>
   25a2c:	add	x26, x24, x20
   25a30:	cmp	x26, #0x0
   25a34:	cinc	x8, x26, lt  // lt = tstop
   25a38:	cmp	x26, x23
   25a3c:	b.gt	25dd4 <mpfr_sinh@@Base+0x5c0>
   25a40:	asr	x20, x8, #1
   25a44:	sub	x8, x26, #0x1
   25a48:	add	x9, x26, #0x3e
   25a4c:	cmp	x8, #0x0
   25a50:	ldr	x1, [sp, #40]
   25a54:	csel	x8, x9, x8, lt  // lt = tstop
   25a58:	asr	x8, x8, #6
   25a5c:	add	x24, x8, #0x1
   25a60:	lsl	x2, x24, #4
   25a64:	str	x2, [sp, #40]
   25a68:	cbz	x1, 25ad4 <mpfr_sinh@@Base+0x2c0>
   25a6c:	ldr	x0, [sp, #48]
   25a70:	bl	c260 <mpfr_reallocate_func@plt>
   25a74:	b	25adc <mpfr_sinh@@Base+0x2c8>
   25a78:	sub	x9, x28, x8
   25a7c:	cmn	x9, #0x2
   25a80:	mov	x11, #0xfffffffffffffffe    	// #-2
   25a84:	csel	x9, x9, x11, gt
   25a88:	add	x10, x23, #0x105
   25a8c:	sub	x9, x26, x9
   25a90:	cmp	x8, x10
   25a94:	sub	x24, x9, #0x3
   25a98:	b.lt	25a1c <mpfr_sinh@@Base+0x208>  // b.tstop
   25a9c:	ldur	x8, [x29, #-72]
   25aa0:	ldr	x9, [x19]
   25aa4:	ldur	x0, [x29, #-48]
   25aa8:	mov	x2, x24
   25aac:	sub	x10, x8, #0x1
   25ab0:	add	x8, x8, #0x3e
   25ab4:	cmp	x10, #0x0
   25ab8:	csel	x8, x8, x10, lt  // lt = tstop
   25abc:	asr	x8, x8, #6
   25ac0:	add	x1, x8, #0x1
   25ac4:	add	x3, x9, x27
   25ac8:	bl	c3d0 <mpfr_round_p@plt>
   25acc:	cbnz	w0, 25c20 <mpfr_sinh@@Base+0x40c>
   25ad0:	b	25a1c <mpfr_sinh@@Base+0x208>
   25ad4:	mov	x0, x2
   25ad8:	bl	cd50 <mpfr_allocate_func@plt>
   25adc:	add	x8, x0, x24, lsl #3
   25ae0:	str	x0, [sp, #48]
   25ae4:	stur	x0, [x29, #-48]
   25ae8:	stur	w22, [x29, #-64]
   25aec:	stur	x26, [x29, #-104]
   25af0:	stp	x8, x26, [x29, #-80]
   25af4:	b	25994 <mpfr_sinh@@Base+0x180>
   25af8:	sub	x0, x29, #0x68
   25afc:	sub	x1, x29, #0x28
   25b00:	mov	w2, #0x1                   	// #1
   25b04:	mov	w3, #0x3                   	// #3
   25b08:	bl	c950 <mpfr_div_2ui@plt>
   25b0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25b10:	ldr	x1, [x0, #2656]
   25b14:	add	x0, x0, #0xa60
   25b18:	blr	x1
   25b1c:	mov	x24, x0
   25b20:	str	wzr, [x25, x0]
   25b24:	sub	x0, x29, #0x48
   25b28:	sub	x1, x29, #0x68
   25b2c:	mov	w2, #0x3                   	// #3
   25b30:	bl	bbb0 <mpfr_cosh@plt>
   25b34:	ldrb	w8, [x25, x24]
   25b38:	tbnz	w8, #1, 25dac <mpfr_sinh@@Base+0x598>
   25b3c:	sub	x0, x29, #0x68
   25b40:	sub	x1, x29, #0x68
   25b44:	mov	w2, #0x3                   	// #3
   25b48:	bl	c380 <mpfr_sinh@plt>
   25b4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25b50:	ldr	x1, [x0, #2656]
   25b54:	add	x0, x0, #0xa60
   25b58:	blr	x1
   25b5c:	mov	x24, x0
   25b60:	str	wzr, [x25, x0]
   25b64:	sub	x0, x29, #0x48
   25b68:	sub	x1, x29, #0x48
   25b6c:	sub	x2, x29, #0x68
   25b70:	mov	w3, #0x3                   	// #3
   25b74:	bl	be00 <mpfr_mul@plt>
   25b78:	ldrb	w8, [x25, x24]
   25b7c:	tbnz	w8, #1, 25dac <mpfr_sinh@@Base+0x598>
   25b80:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25b84:	ldr	x1, [x0, #2656]
   25b88:	add	x0, x0, #0xa60
   25b8c:	blr	x1
   25b90:	mov	x24, x0
   25b94:	str	wzr, [x25, x0]
   25b98:	sub	x0, x29, #0x48
   25b9c:	sub	x1, x29, #0x48
   25ba0:	mov	w2, #0x1                   	// #1
   25ba4:	mov	w3, wzr
   25ba8:	bl	c320 <mpfr_mul_2ui@plt>
   25bac:	ldrb	w8, [x25, x24]
   25bb0:	tbnz	w8, #1, 25dac <mpfr_sinh@@Base+0x598>
   25bb4:	ldur	x8, [x29, #-56]
   25bb8:	add	x9, x23, #0x105
   25bbc:	mov	x24, x26
   25bc0:	cmp	x8, x9
   25bc4:	b.lt	25a1c <mpfr_sinh@@Base+0x208>  // b.tstop
   25bc8:	ldur	x8, [x29, #-72]
   25bcc:	ldr	x9, [x19]
   25bd0:	ldur	x0, [x29, #-48]
   25bd4:	sub	x2, x26, #0x3
   25bd8:	sub	x10, x8, #0x1
   25bdc:	add	x8, x8, #0x3e
   25be0:	cmp	x10, #0x0
   25be4:	csel	x8, x8, x10, lt  // lt = tstop
   25be8:	asr	x8, x8, #6
   25bec:	add	x1, x8, #0x1
   25bf0:	add	x3, x9, x27
   25bf4:	bl	c3d0 <mpfr_round_p@plt>
   25bf8:	mov	x24, x26
   25bfc:	cbnz	w0, 25c20 <mpfr_sinh@@Base+0x40c>
   25c00:	b	25a1c <mpfr_sinh@@Base+0x208>
   25c04:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   25c08:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   25c0c:	mov	w1, #0xaf                  	// #175
   25c10:	add	x0, x0, #0x120
   25c14:	add	x2, x2, #0xe2
   25c18:	bl	cb90 <mpfr_assert_fail@plt>
   25c1c:	b	25a2c <mpfr_sinh@@Base+0x218>
   25c20:	ldr	w20, [sp, #12]
   25c24:	ldr	w3, [x21, #8]
   25c28:	sub	x1, x29, #0x48
   25c2c:	mov	x0, x19
   25c30:	mov	w2, w20
   25c34:	bl	c6f0 <mpfr_set4@plt>
   25c38:	mov	w22, w0
   25c3c:	ldr	x1, [sp, #40]
   25c40:	ldr	w21, [sp, #36]
   25c44:	cbz	x1, 25c50 <mpfr_sinh@@Base+0x43c>
   25c48:	ldr	x0, [sp, #48]
   25c4c:	bl	cc80 <mpfr_free_func@plt>
   25c50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25c54:	ldr	x1, [x0, #2656]
   25c58:	add	x0, x0, #0xa60
   25c5c:	blr	x1
   25c60:	str	w21, [x25, x0]
   25c64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25c68:	ldr	x1, [x0, #2592]
   25c6c:	add	x0, x0, #0xa20
   25c70:	blr	x1
   25c74:	ldr	x9, [sp, #24]
   25c78:	str	x9, [x25, x0]
   25c7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25c80:	ldr	x1, [x0, #2624]
   25c84:	add	x0, x0, #0xa40
   25c88:	blr	x1
   25c8c:	ldr	x10, [sp, #16]
   25c90:	str	x10, [x25, x0]
   25c94:	ldr	x8, [x19, #16]
   25c98:	cmp	x8, x10
   25c9c:	b.gt	25d28 <mpfr_sinh@@Base+0x514>
   25ca0:	cmp	x8, x9
   25ca4:	b.lt	25d28 <mpfr_sinh@@Base+0x514>  // b.tstop
   25ca8:	cbz	w22, 25cc4 <mpfr_sinh@@Base+0x4b0>
   25cac:	orr	w8, w21, #0x8
   25cb0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25cb4:	ldr	x1, [x0, #2656]
   25cb8:	add	x0, x0, #0xa60
   25cbc:	blr	x1
   25cc0:	str	w8, [x25, x0]
   25cc4:	mov	w0, w22
   25cc8:	ldp	x20, x19, [sp, #368]
   25ccc:	ldp	x22, x21, [sp, #352]
   25cd0:	ldp	x24, x23, [sp, #336]
   25cd4:	ldp	x26, x25, [sp, #320]
   25cd8:	ldp	x28, x27, [sp, #304]
   25cdc:	ldp	x29, x30, [sp, #288]
   25ce0:	add	sp, sp, #0x180
   25ce4:	ret
   25ce8:	add	x8, x23, #0x103
   25cec:	cmp	x20, x8
   25cf0:	b.ne	25d5c <mpfr_sinh@@Base+0x548>  // b.any
   25cf4:	str	x8, [x19, #16]
   25cf8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25cfc:	ldr	x1, [x0, #2656]
   25d00:	add	x0, x0, #0xa60
   25d04:	blr	x1
   25d08:	mrs	x8, tpidr_el0
   25d0c:	ldr	w9, [x8, x0]
   25d10:	mov	w22, wzr
   25d14:	orr	w9, w9, #0x4
   25d18:	str	w9, [x8, x0]
   25d1c:	b	25cc4 <mpfr_sinh@@Base+0x4b0>
   25d20:	mov	x8, xzr
   25d24:	b	25910 <mpfr_sinh@@Base+0xfc>
   25d28:	mov	x0, x19
   25d2c:	mov	w1, w22
   25d30:	mov	w2, w20
   25d34:	bl	cb80 <mpfr_check_range@plt>
   25d38:	mov	w22, w0
   25d3c:	b	25cc4 <mpfr_sinh@@Base+0x4b0>
   25d40:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   25d44:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   25d48:	add	x0, x0, #0x120
   25d4c:	add	x2, x2, #0xb6
   25d50:	mov	w1, #0x52                  	// #82
   25d54:	bl	cb90 <mpfr_assert_fail@plt>
   25d58:	b	25904 <mpfr_sinh@@Base+0xf0>
   25d5c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   25d60:	cmp	x20, x8
   25d64:	b.ne	25d94 <mpfr_sinh@@Base+0x580>  // b.any
   25d68:	mov	w22, wzr
   25d6c:	b	25d9c <mpfr_sinh@@Base+0x588>
   25d70:	mov	w3, #0x1                   	// #1
   25d74:	mov	x0, x19
   25d78:	mov	x1, x21
   25d7c:	mov	w4, w27
   25d80:	bl	c590 <mpfr_round_near_x@plt>
   25d84:	mov	w22, w0
   25d88:	cbnz	w0, 25cc4 <mpfr_sinh@@Base+0x4b0>
   25d8c:	ldr	x20, [x21, #16]
   25d90:	b	25874 <mpfr_sinh@@Base+0x60>
   25d94:	mov	w22, wzr
   25d98:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   25d9c:	str	x8, [x19, #16]
   25da0:	ldr	w8, [x21, #8]
   25da4:	str	w8, [x19, #8]
   25da8:	b	25cc4 <mpfr_sinh@@Base+0x4b0>
   25dac:	ldr	w20, [sp, #12]
   25db0:	ldr	w2, [x21, #8]
   25db4:	mov	x0, x19
   25db8:	mov	w1, w20
   25dbc:	bl	bff0 <mpfr_overflow@plt>
   25dc0:	ldr	w8, [sp, #36]
   25dc4:	mov	w22, w0
   25dc8:	orr	w8, w8, #0x2
   25dcc:	str	w8, [sp, #36]
   25dd0:	b	25c3c <mpfr_sinh@@Base+0x428>
   25dd4:	bl	c940 <mpfr_abort_prec_max@plt>

0000000000025dd8 <mpfr_tanh@@Base>:
   25dd8:	sub	sp, sp, #0x170
   25ddc:	stp	x29, x30, [sp, #272]
   25de0:	stp	x28, x27, [sp, #288]
   25de4:	stp	x26, x25, [sp, #304]
   25de8:	stp	x24, x23, [sp, #320]
   25dec:	stp	x22, x21, [sp, #336]
   25df0:	stp	x20, x19, [sp, #352]
   25df4:	ldr	x8, [x1, #16]
   25df8:	mov	x24, #0xfffffffffffffeff    	// #-257
   25dfc:	movk	x24, #0x7fff, lsl #48
   25e00:	add	x9, x24, #0x105
   25e04:	mov	x22, x1
   25e08:	cmp	x8, x9
   25e0c:	mov	x20, x0
   25e10:	add	x29, sp, #0x110
   25e14:	str	w2, [sp, #20]
   25e18:	b.lt	26210 <mpfr_tanh@@Base+0x438>  // b.tstop
   25e1c:	tbz	x8, #63, 25e38 <mpfr_tanh@@Base+0x60>
   25e20:	ldr	x9, [x20]
   25e24:	mov	w10, #0x1                   	// #1
   25e28:	sub	x2, x10, x8, lsl #1
   25e2c:	add	x9, x9, #0x1
   25e30:	cmp	x2, x9
   25e34:	b.hi	262fc <mpfr_tanh@@Base+0x524>  // b.pmore
   25e38:	ldr	x9, [x22]
   25e3c:	mov	w19, #0x1                   	// #1
   25e40:	stur	x9, [x29, #-40]
   25e44:	ldr	x9, [x22, #24]
   25e48:	stur	w19, [x29, #-32]
   25e4c:	stp	x8, x9, [x29, #-24]
   25e50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25e54:	ldr	x1, [x0, #2656]
   25e58:	add	x0, x0, #0xa60
   25e5c:	blr	x1
   25e60:	mrs	x25, tpidr_el0
   25e64:	ldr	w26, [x25, x0]
   25e68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25e6c:	ldr	x1, [x0, #2592]
   25e70:	add	x0, x0, #0xa20
   25e74:	blr	x1
   25e78:	ldr	x27, [x25, x0]
   25e7c:	mov	x8, x0
   25e80:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   25e84:	ldr	x1, [x0, #2624]
   25e88:	add	x0, x0, #0xa40
   25e8c:	blr	x1
   25e90:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   25e94:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   25e98:	ldr	x28, [x25, x0]
   25e9c:	str	x9, [x25, x8]
   25ea0:	str	x10, [x25, x0]
   25ea4:	ldr	x23, [x20]
   25ea8:	ldr	w21, [x22, #8]
   25eac:	sub	x0, x29, #0x28
   25eb0:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   25eb4:	mov	x2, xzr
   25eb8:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   25ebc:	str	w26, [sp, #16]
   25ec0:	tbz	w0, #31, 2625c <mpfr_tanh@@Base+0x484>
   25ec4:	subs	x19, x23, #0x1
   25ec8:	b.eq	262d8 <mpfr_tanh@@Base+0x500>  // b.none
   25ecc:	b.le	262e0 <mpfr_tanh@@Base+0x508>
   25ed0:	clz	x8, x19
   25ed4:	mov	w9, #0x40                  	// #64
   25ed8:	sub	x8, x9, x8
   25edc:	ldur	x9, [x29, #-24]
   25ee0:	ldur	x10, [x29, #-40]
   25ee4:	add	x8, x23, x8
   25ee8:	neg	x11, x9
   25eec:	and	x9, x11, x9, asr #63
   25ef0:	add	x8, x8, x9
   25ef4:	add	x8, x8, #0x4
   25ef8:	cmp	x8, x10
   25efc:	csel	x22, x10, x8, lt  // lt = tstop
   25f00:	cmp	x22, x24
   25f04:	b.gt	26354 <mpfr_tanh@@Base+0x57c>
   25f08:	sub	x8, x22, #0x1
   25f0c:	add	x9, x22, #0x3e
   25f10:	cmp	x8, #0x0
   25f14:	csel	x8, x9, x8, lt  // lt = tstop
   25f18:	asr	x8, x8, #6
   25f1c:	mov	x26, #0xfffffffffffffeff    	// #-257
   25f20:	cmp	x22, #0x201
   25f24:	add	x19, x8, #0x1
   25f28:	movk	x26, #0x7fff, lsl #48
   25f2c:	b.lt	25f40 <mpfr_tanh@@Base+0x168>  // b.tstop
   25f30:	lsl	x0, x19, #4
   25f34:	str	x0, [sp, #24]
   25f38:	bl	cd50 <mpfr_allocate_func@plt>
   25f3c:	b	25f4c <mpfr_tanh@@Base+0x174>
   25f40:	add	x8, sp, #0x18
   25f44:	add	x0, x8, #0x10
   25f48:	str	xzr, [sp, #24]
   25f4c:	str	x0, [sp, #32]
   25f50:	stur	x0, [x29, #-48]
   25f54:	mov	w9, #0x1                   	// #1
   25f58:	add	x8, x0, x19, lsl #3
   25f5c:	sub	x0, x29, #0x68
   25f60:	sub	x1, x29, #0x28
   25f64:	mov	w2, #0x1                   	// #1
   25f68:	mov	w3, wzr
   25f6c:	stur	x22, [x29, #-104]
   25f70:	stur	w9, [x29, #-64]
   25f74:	stp	x8, x22, [x29, #-80]
   25f78:	stur	w9, [x29, #-96]
   25f7c:	bl	c320 <mpfr_mul_2ui@plt>
   25f80:	sub	x0, x29, #0x68
   25f84:	sub	x1, x29, #0x68
   25f88:	mov	w2, wzr
   25f8c:	bl	c7a0 <mpfr_exp@plt>
   25f90:	ldur	x19, [x29, #-88]
   25f94:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   25f98:	cmp	x19, x8
   25f9c:	b.eq	26280 <mpfr_tanh@@Base+0x4a8>  // b.none
   25fa0:	ldr	w8, [sp, #20]
   25fa4:	mov	w24, #0x3                   	// #3
   25fa8:	cmp	w8, #0x0
   25fac:	mov	w8, #0x40                  	// #64
   25fb0:	cinc	x23, x23, eq  // eq = none
   25fb4:	str	x8, [sp, #8]
   25fb8:	sub	x0, x29, #0x48
   25fbc:	sub	x1, x29, #0x68
   25fc0:	mov	w2, #0x1                   	// #1
   25fc4:	mov	w3, #0x3                   	// #3
   25fc8:	bl	c2d0 <mpfr_add_ui@plt>
   25fcc:	sub	x0, x29, #0x68
   25fd0:	sub	x1, x29, #0x68
   25fd4:	mov	w2, #0x1                   	// #1
   25fd8:	mov	w3, #0x2                   	// #2
   25fdc:	bl	c580 <mpfr_sub_ui@plt>
   25fe0:	ldur	x8, [x29, #-88]
   25fe4:	sub	x0, x29, #0x48
   25fe8:	sub	x1, x29, #0x68
   25fec:	sub	x2, x29, #0x48
   25ff0:	mov	w3, wzr
   25ff4:	sub	x19, x19, x8
   25ff8:	bl	c670 <mpfr_div@plt>
   25ffc:	cmp	x19, #0x3
   26000:	ldur	x8, [x29, #-56]
   26004:	csinc	x9, x24, x19, lt  // lt = tstop
   26008:	cmp	x22, #0x0
   2600c:	cinc	x10, x22, lt  // lt = tstop
   26010:	cmp	x9, x10, asr #1
   26014:	b.gt	2605c <mpfr_tanh@@Base+0x284>
   26018:	add	x10, x26, #0x105
   2601c:	cmp	x8, x10
   26020:	b.lt	2605c <mpfr_tanh@@Base+0x284>  // b.tstop
   26024:	ldur	x8, [x29, #-72]
   26028:	mvn	x9, x9
   2602c:	add	x2, x22, x9
   26030:	ldur	x0, [x29, #-48]
   26034:	sub	x9, x8, #0x1
   26038:	add	x8, x8, #0x3e
   2603c:	cmp	x9, #0x0
   26040:	csel	x8, x8, x9, lt  // lt = tstop
   26044:	asr	x8, x8, #6
   26048:	add	x1, x8, #0x1
   2604c:	mov	x3, x23
   26050:	bl	c3d0 <mpfr_round_p@plt>
   26054:	cbnz	w0, 26154 <mpfr_tanh@@Base+0x37c>
   26058:	ldur	x8, [x29, #-56]
   2605c:	cmp	x8, #0x1
   26060:	b.eq	26280 <mpfr_tanh@@Base+0x4a8>  // b.none
   26064:	ldr	x24, [sp, #8]
   26068:	mov	x19, #0xfffffffffffffeff    	// #-257
   2606c:	movk	x19, #0x7fff, lsl #48
   26070:	sub	x8, x19, x22
   26074:	cmp	x24, x8
   26078:	b.gt	26138 <mpfr_tanh@@Base+0x360>
   2607c:	add	x22, x22, x24
   26080:	cmp	x22, #0x0
   26084:	mov	x26, #0xfffffffffffffeff    	// #-257
   26088:	cinc	x8, x22, lt  // lt = tstop
   2608c:	movk	x26, #0x7fff, lsl #48
   26090:	cmp	x22, x19
   26094:	b.gt	26354 <mpfr_tanh@@Base+0x57c>
   26098:	asr	x10, x8, #1
   2609c:	sub	x8, x22, #0x1
   260a0:	add	x9, x22, #0x3e
   260a4:	cmp	x8, #0x0
   260a8:	ldr	x1, [sp, #24]
   260ac:	csel	x8, x9, x8, lt  // lt = tstop
   260b0:	asr	x8, x8, #6
   260b4:	add	x19, x8, #0x1
   260b8:	lsl	x2, x19, #4
   260bc:	str	x2, [sp, #24]
   260c0:	str	x10, [sp, #8]
   260c4:	cbz	x1, 260d4 <mpfr_tanh@@Base+0x2fc>
   260c8:	ldr	x0, [sp, #32]
   260cc:	bl	c260 <mpfr_reallocate_func@plt>
   260d0:	b	260dc <mpfr_tanh@@Base+0x304>
   260d4:	mov	x0, x2
   260d8:	bl	cd50 <mpfr_allocate_func@plt>
   260dc:	str	x0, [sp, #32]
   260e0:	stur	x0, [x29, #-48]
   260e4:	mov	w9, #0x1                   	// #1
   260e8:	add	x8, x0, x19, lsl #3
   260ec:	sub	x0, x29, #0x68
   260f0:	sub	x1, x29, #0x28
   260f4:	mov	w2, #0x1                   	// #1
   260f8:	mov	w3, wzr
   260fc:	stur	w9, [x29, #-64]
   26100:	stur	x22, [x29, #-104]
   26104:	stp	x8, x22, [x29, #-80]
   26108:	stur	w9, [x29, #-96]
   2610c:	bl	c320 <mpfr_mul_2ui@plt>
   26110:	sub	x0, x29, #0x68
   26114:	sub	x1, x29, #0x68
   26118:	mov	w2, wzr
   2611c:	bl	c7a0 <mpfr_exp@plt>
   26120:	ldur	x19, [x29, #-88]
   26124:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   26128:	mov	w24, #0x3                   	// #3
   2612c:	cmp	x19, x8
   26130:	b.ne	25fb8 <mpfr_tanh@@Base+0x1e0>  // b.any
   26134:	b	26280 <mpfr_tanh@@Base+0x4a8>
   26138:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2613c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   26140:	mov	w1, #0x9a                  	// #154
   26144:	add	x0, x0, #0x128
   26148:	add	x2, x2, #0xe2
   2614c:	bl	cb90 <mpfr_assert_fail@plt>
   26150:	b	2607c <mpfr_tanh@@Base+0x2a4>
   26154:	ldr	w2, [sp, #20]
   26158:	sub	x1, x29, #0x48
   2615c:	mov	x0, x20
   26160:	mov	w3, w21
   26164:	bl	c6f0 <mpfr_set4@plt>
   26168:	mov	w21, w0
   2616c:	ldr	x1, [sp, #24]
   26170:	ldr	w19, [sp, #16]
   26174:	cbz	x1, 26180 <mpfr_tanh@@Base+0x3a8>
   26178:	ldr	x0, [sp, #32]
   2617c:	bl	cc80 <mpfr_free_func@plt>
   26180:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26184:	ldr	x1, [x0, #2656]
   26188:	add	x0, x0, #0xa60
   2618c:	blr	x1
   26190:	str	w19, [x25, x0]
   26194:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26198:	ldr	x1, [x0, #2592]
   2619c:	add	x0, x0, #0xa20
   261a0:	blr	x1
   261a4:	str	x27, [x25, x0]
   261a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   261ac:	ldr	x1, [x0, #2624]
   261b0:	add	x0, x0, #0xa40
   261b4:	blr	x1
   261b8:	str	x28, [x25, x0]
   261bc:	ldr	x8, [x20, #16]
   261c0:	cmp	x8, x28
   261c4:	b.gt	262c4 <mpfr_tanh@@Base+0x4ec>
   261c8:	cmp	x8, x27
   261cc:	b.lt	262c4 <mpfr_tanh@@Base+0x4ec>  // b.tstop
   261d0:	cbz	w21, 261ec <mpfr_tanh@@Base+0x414>
   261d4:	orr	w8, w19, #0x8
   261d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   261dc:	ldr	x1, [x0, #2656]
   261e0:	add	x0, x0, #0xa60
   261e4:	blr	x1
   261e8:	str	w8, [x25, x0]
   261ec:	mov	w0, w21
   261f0:	ldp	x20, x19, [sp, #352]
   261f4:	ldp	x22, x21, [sp, #336]
   261f8:	ldp	x24, x23, [sp, #320]
   261fc:	ldp	x26, x25, [sp, #304]
   26200:	ldp	x28, x27, [sp, #288]
   26204:	ldp	x29, x30, [sp, #272]
   26208:	add	sp, sp, #0x170
   2620c:	ret
   26210:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   26214:	cmp	x8, x9
   26218:	b.eq	26320 <mpfr_tanh@@Base+0x548>  // b.none
   2621c:	mov	x9, #0x2                   	// #2
   26220:	movk	x9, #0x8000, lsl #48
   26224:	cmp	x8, x9
   26228:	b.ne	2633c <mpfr_tanh@@Base+0x564>  // b.any
   2622c:	add	x8, x24, #0x103
   26230:	str	x8, [x20, #16]
   26234:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26238:	ldr	x1, [x0, #2656]
   2623c:	add	x0, x0, #0xa60
   26240:	blr	x1
   26244:	mrs	x8, tpidr_el0
   26248:	ldr	w9, [x8, x0]
   2624c:	mov	w21, wzr
   26250:	orr	w9, w9, #0x4
   26254:	str	w9, [x8, x0]
   26258:	b	261ec <mpfr_tanh@@Base+0x414>
   2625c:	add	x8, sp, #0x18
   26260:	add	x9, x8, #0x10
   26264:	add	x8, x8, #0x18
   26268:	stur	w19, [x29, #-64]
   2626c:	stur	x19, [x29, #-104]
   26270:	stp	xzr, x9, [sp, #24]
   26274:	stur	x9, [x29, #-48]
   26278:	stp	x8, x19, [x29, #-80]
   2627c:	stur	w19, [x29, #-96]
   26280:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   26284:	ldr	x1, [x1, #3944]
   26288:	mov	x0, x20
   2628c:	mov	w2, wzr
   26290:	mov	w3, w21
   26294:	bl	c6f0 <mpfr_set4@plt>
   26298:	ldr	w8, [sp, #20]
   2629c:	cmp	w8, #0x1
   262a0:	b.eq	262b4 <mpfr_tanh@@Base+0x4dc>  // b.none
   262a4:	ldr	w8, [sp, #20]
   262a8:	add	w8, w8, w21, lsr #31
   262ac:	cmp	w8, #0x3
   262b0:	b.ne	2616c <mpfr_tanh@@Base+0x394>  // b.any
   262b4:	mov	x0, x20
   262b8:	neg	w21, w21
   262bc:	bl	c4b0 <mpfr_nexttozero@plt>
   262c0:	b	2616c <mpfr_tanh@@Base+0x394>
   262c4:	ldr	w2, [sp, #20]
   262c8:	mov	x0, x20
   262cc:	mov	w1, w21
   262d0:	bl	cb80 <mpfr_check_range@plt>
   262d4:	b	26334 <mpfr_tanh@@Base+0x55c>
   262d8:	mov	x8, xzr
   262dc:	b	25edc <mpfr_tanh@@Base+0x104>
   262e0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   262e4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   262e8:	add	x0, x0, #0x128
   262ec:	add	x2, x2, #0xd9
   262f0:	mov	w1, #0x60                  	// #96
   262f4:	bl	cb90 <mpfr_assert_fail@plt>
   262f8:	b	25ed0 <mpfr_tanh@@Base+0xf8>
   262fc:	ldr	w4, [sp, #20]
   26300:	mov	x0, x20
   26304:	mov	x1, x22
   26308:	mov	w3, wzr
   2630c:	bl	c590 <mpfr_round_near_x@plt>
   26310:	mov	w21, w0
   26314:	cbnz	w0, 261ec <mpfr_tanh@@Base+0x414>
   26318:	ldr	x8, [x22, #16]
   2631c:	b	25e38 <mpfr_tanh@@Base+0x60>
   26320:	ldrsw	x1, [x22, #8]
   26324:	ldr	w3, [sp, #20]
   26328:	mov	x0, x20
   2632c:	mov	x2, xzr
   26330:	bl	bb40 <mpfr_set_si_2exp@plt>
   26334:	mov	w21, w0
   26338:	b	261ec <mpfr_tanh@@Base+0x414>
   2633c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   26340:	str	x8, [x20, #16]
   26344:	ldr	w8, [x22, #8]
   26348:	mov	w21, wzr
   2634c:	str	w8, [x20, #8]
   26350:	b	261ec <mpfr_tanh@@Base+0x414>
   26354:	bl	c940 <mpfr_abort_prec_max@plt>

0000000000026358 <mpfr_sinh_cosh@@Base>:
   26358:	sub	sp, sp, #0x1b0
   2635c:	stp	x28, x27, [sp, #352]
   26360:	stp	x22, x21, [sp, #400]
   26364:	mov	x28, x1
   26368:	mov	x21, x0
   2636c:	cmp	x0, x1
   26370:	mov	x22, x2
   26374:	stp	x29, x30, [sp, #336]
   26378:	stp	x26, x25, [sp, #368]
   2637c:	stp	x24, x23, [sp, #384]
   26380:	stp	x20, x19, [sp, #416]
   26384:	add	x29, sp, #0x150
   26388:	str	w3, [sp, #52]
   2638c:	b.eq	268b8 <mpfr_sinh_cosh@@Base+0x560>  // b.none
   26390:	ldr	x8, [x22, #16]
   26394:	mov	x19, #0x2                   	// #2
   26398:	movk	x19, #0x8000, lsl #48
   2639c:	add	x9, x19, #0x2
   263a0:	cmp	x8, x9
   263a4:	b.lt	268d4 <mpfr_sinh_cosh@@Base+0x57c>  // b.tstop
   263a8:	ldr	x9, [x22]
   263ac:	mov	w10, #0x1                   	// #1
   263b0:	stur	x9, [x29, #-40]
   263b4:	ldr	x9, [x22, #24]
   263b8:	stur	w10, [x29, #-32]
   263bc:	stp	x8, x9, [x29, #-24]
   263c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   263c4:	ldr	x1, [x0, #2656]
   263c8:	add	x0, x0, #0xa60
   263cc:	blr	x1
   263d0:	mrs	x26, tpidr_el0
   263d4:	ldr	w25, [x26, x0]
   263d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   263dc:	ldr	x1, [x0, #2592]
   263e0:	add	x0, x0, #0xa20
   263e4:	blr	x1
   263e8:	ldr	x24, [x26, x0]
   263ec:	mov	x8, x0
   263f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   263f4:	ldr	x1, [x0, #2624]
   263f8:	add	x0, x0, #0xa40
   263fc:	blr	x1
   26400:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   26404:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   26408:	ldr	x27, [x26, x0]
   2640c:	str	x9, [x26, x8]
   26410:	str	x10, [x26, x0]
   26414:	ldr	x8, [x28]
   26418:	ldr	x9, [x21]
   2641c:	cmp	x8, x9
   26420:	csel	x20, x8, x9, gt
   26424:	subs	x23, x20, #0x1
   26428:	b.eq	26910 <mpfr_sinh_cosh@@Base+0x5b8>  // b.none
   2642c:	b.le	26970 <mpfr_sinh_cosh@@Base+0x618>
   26430:	clz	x8, x23
   26434:	mov	w9, #0x40                  	// #64
   26438:	sub	x8, x9, x8
   2643c:	add	x8, x8, x20
   26440:	sub	x9, x19, #0x107
   26444:	cmp	x8, x9
   26448:	b.gt	269f8 <mpfr_sinh_cosh@@Base+0x6a0>
   2644c:	add	x9, x8, #0x3
   26450:	add	x10, x8, #0x42
   26454:	cmp	x9, #0x0
   26458:	csel	x9, x10, x9, lt  // lt = tstop
   2645c:	asr	x9, x9, #6
   26460:	str	w25, [sp, #12]
   26464:	add	x25, x9, #0x1
   26468:	add	x9, x25, x25, lsl #1
   2646c:	mov	x19, #0x2                   	// #2
   26470:	cmp	x9, #0x11
   26474:	add	x20, x8, #0x4
   26478:	movk	x19, #0x8000, lsl #48
   2647c:	str	x28, [sp, #40]
   26480:	stp	x27, x24, [sp, #16]
   26484:	b.lt	26498 <mpfr_sinh_cosh@@Base+0x140>  // b.tstop
   26488:	lsl	x23, x9, #3
   2648c:	mov	x0, x23
   26490:	bl	cd50 <mpfr_allocate_func@plt>
   26494:	b	264a4 <mpfr_sinh_cosh@@Base+0x14c>
   26498:	add	x8, sp, #0x38
   2649c:	mov	x23, xzr
   264a0:	add	x0, x8, #0x10
   264a4:	mov	w24, #0x1                   	// #1
   264a8:	add	x8, x0, x25, lsl #3
   264ac:	add	x9, x0, x25, lsl #4
   264b0:	stp	x23, x0, [sp, #56]
   264b4:	stur	x0, [x29, #-48]
   264b8:	stur	x20, [x29, #-136]
   264bc:	stur	w24, [x29, #-64]
   264c0:	stp	x8, x20, [x29, #-80]
   264c4:	stur	w24, [x29, #-96]
   264c8:	stp	x9, x20, [x29, #-112]
   264cc:	stur	w24, [x29, #-128]
   264d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   264d4:	ldr	x1, [x0, #2656]
   264d8:	add	x0, x0, #0xa60
   264dc:	blr	x1
   264e0:	mov	x23, x0
   264e4:	str	wzr, [x26, x0]
   264e8:	sub	x0, x29, #0x48
   264ec:	sub	x1, x29, #0x28
   264f0:	mov	w2, #0x3                   	// #3
   264f4:	bl	c7a0 <mpfr_exp@plt>
   264f8:	ldrb	w8, [x26, x23]
   264fc:	tbnz	w8, #1, 2687c <mpfr_sinh_cosh@@Base+0x524>
   26500:	ldr	w8, [sp, #52]
   26504:	mov	w23, #0x40                  	// #64
   26508:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   2650c:	cmp	w8, #0x0
   26510:	sub	x8, x19, #0x103
   26514:	cset	w28, eq  // eq = none
   26518:	str	x8, [sp, #32]
   2651c:	ldur	x27, [x29, #-56]
   26520:	sub	x0, x29, #0x88
   26524:	sub	x2, x29, #0x48
   26528:	mov	w1, #0x1                   	// #1
   2652c:	mov	w3, #0x2                   	// #2
   26530:	bl	c350 <mpfr_ui_div@plt>
   26534:	sub	x0, x29, #0x68
   26538:	sub	x1, x29, #0x48
   2653c:	sub	x2, x29, #0x88
   26540:	mov	w3, #0x2                   	// #2
   26544:	bl	c240 <mpfr_add@plt>
   26548:	sub	x0, x29, #0x48
   2654c:	sub	x1, x29, #0x48
   26550:	sub	x2, x29, #0x88
   26554:	mov	w3, wzr
   26558:	bl	bc20 <mpfr_sub@plt>
   2655c:	sub	x0, x29, #0x68
   26560:	sub	x1, x29, #0x68
   26564:	mov	w2, #0x1                   	// #1
   26568:	mov	w3, wzr
   2656c:	bl	c950 <mpfr_div_2ui@plt>
   26570:	sub	x0, x29, #0x48
   26574:	sub	x1, x29, #0x48
   26578:	mov	w2, #0x1                   	// #1
   2657c:	mov	w3, wzr
   26580:	bl	c950 <mpfr_div_2ui@plt>
   26584:	ldur	x8, [x29, #-56]
   26588:	cmp	x8, x25
   2658c:	mov	x25, x20
   26590:	b.ne	265fc <mpfr_sinh_cosh@@Base+0x2a4>  // b.any
   26594:	add	x20, x25, x20
   26598:	sub	x8, x19, x20
   2659c:	sub	x8, x8, #0x103
   265a0:	cmp	x23, x8
   265a4:	b.gt	26704 <mpfr_sinh_cosh@@Base+0x3ac>
   265a8:	ldr	x9, [sp, #32]
   265ac:	add	x20, x20, x23
   265b0:	cmp	x20, #0x0
   265b4:	cinc	x8, x20, lt  // lt = tstop
   265b8:	cmp	x20, x9
   265bc:	b.gt	269f8 <mpfr_sinh_cosh@@Base+0x6a0>
   265c0:	asr	x23, x8, #1
   265c4:	sub	x8, x20, #0x1
   265c8:	add	x9, x20, #0x3e
   265cc:	cmp	x8, #0x0
   265d0:	csel	x8, x9, x8, lt  // lt = tstop
   265d4:	ldr	x1, [sp, #56]
   265d8:	asr	x8, x8, #6
   265dc:	add	x25, x8, #0x1
   265e0:	add	x8, x25, x25, lsl #1
   265e4:	lsl	x2, x8, #3
   265e8:	str	x2, [sp, #56]
   265ec:	cbz	x1, 2669c <mpfr_sinh_cosh@@Base+0x344>
   265f0:	ldr	x0, [sp, #64]
   265f4:	bl	c260 <mpfr_reallocate_func@plt>
   265f8:	b	266a4 <mpfr_sinh_cosh@@Base+0x34c>
   265fc:	sub	x9, x27, x8
   26600:	cmn	x9, #0x2
   26604:	mov	x10, #0xfffffffffffffffe    	// #-2
   26608:	csel	x9, x9, x10, gt
   2660c:	add	x27, x19, #0x2
   26610:	sub	x9, x20, x9
   26614:	cmp	x8, x27
   26618:	sub	x25, x9, #0x3
   2661c:	b.lt	26594 <mpfr_sinh_cosh@@Base+0x23c>  // b.tstop
   26620:	ldur	x8, [x29, #-72]
   26624:	ldr	x9, [x21]
   26628:	ldur	x0, [x29, #-48]
   2662c:	mov	x2, x25
   26630:	sub	x10, x8, #0x1
   26634:	add	x8, x8, #0x3e
   26638:	cmp	x10, #0x0
   2663c:	csel	x8, x8, x10, lt  // lt = tstop
   26640:	asr	x8, x8, #6
   26644:	add	x1, x8, #0x1
   26648:	add	x3, x9, x28
   2664c:	bl	c3d0 <mpfr_round_p@plt>
   26650:	cbz	w0, 26594 <mpfr_sinh_cosh@@Base+0x23c>
   26654:	ldur	x8, [x29, #-88]
   26658:	cmp	x8, x27
   2665c:	b.lt	26594 <mpfr_sinh_cosh@@Base+0x23c>  // b.tstop
   26660:	ldur	x8, [x29, #-104]
   26664:	ldr	x9, [sp, #40]
   26668:	ldur	x0, [x29, #-80]
   2666c:	mov	x2, x25
   26670:	sub	x10, x8, #0x1
   26674:	ldr	x9, [x9]
   26678:	add	x8, x8, #0x3e
   2667c:	cmp	x10, #0x0
   26680:	csel	x8, x8, x10, lt  // lt = tstop
   26684:	asr	x8, x8, #6
   26688:	add	x1, x8, #0x1
   2668c:	add	x3, x9, x28
   26690:	bl	c3d0 <mpfr_round_p@plt>
   26694:	cbnz	w0, 26720 <mpfr_sinh_cosh@@Base+0x3c8>
   26698:	b	26594 <mpfr_sinh_cosh@@Base+0x23c>
   2669c:	mov	x0, x2
   266a0:	bl	cd50 <mpfr_allocate_func@plt>
   266a4:	add	x8, x0, x25, lsl #3
   266a8:	add	x9, x0, x25, lsl #4
   266ac:	str	x0, [sp, #64]
   266b0:	stur	x0, [x29, #-48]
   266b4:	stur	w24, [x29, #-64]
   266b8:	stur	w24, [x29, #-96]
   266bc:	stur	x20, [x29, #-136]
   266c0:	stp	x8, x20, [x29, #-80]
   266c4:	stp	x9, x20, [x29, #-112]
   266c8:	stur	w24, [x29, #-128]
   266cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   266d0:	ldr	x1, [x0, #2656]
   266d4:	add	x0, x0, #0xa60
   266d8:	blr	x1
   266dc:	mov	x25, x0
   266e0:	str	wzr, [x26, x0]
   266e4:	sub	x0, x29, #0x48
   266e8:	sub	x1, x29, #0x28
   266ec:	mov	w2, #0x3                   	// #3
   266f0:	bl	c7a0 <mpfr_exp@plt>
   266f4:	ldrb	w8, [x26, x25]
   266f8:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   266fc:	tbz	w8, #1, 2651c <mpfr_sinh_cosh@@Base+0x1c4>
   26700:	b	2687c <mpfr_sinh_cosh@@Base+0x524>
   26704:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   26708:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2670c:	mov	w1, #0x94                  	// #148
   26710:	add	x0, x0, #0xbf
   26714:	add	x2, x2, #0xd4
   26718:	bl	cb90 <mpfr_assert_fail@plt>
   2671c:	b	265a8 <mpfr_sinh_cosh@@Base+0x250>
   26720:	ldr	w20, [sp, #52]
   26724:	ldr	w3, [x22, #8]
   26728:	sub	x1, x29, #0x48
   2672c:	mov	x0, x21
   26730:	mov	w2, w20
   26734:	bl	c6f0 <mpfr_set4@plt>
   26738:	ldr	x19, [sp, #40]
   2673c:	ldur	w3, [x29, #-96]
   26740:	mov	w22, w0
   26744:	sub	x1, x29, #0x68
   26748:	mov	x0, x19
   2674c:	mov	w2, w20
   26750:	bl	c6f0 <mpfr_set4@plt>
   26754:	ldr	w25, [sp, #12]
   26758:	mov	w23, w0
   2675c:	ldr	x1, [sp, #56]
   26760:	ldp	x24, x20, [sp, #16]
   26764:	cbz	x1, 26770 <mpfr_sinh_cosh@@Base+0x418>
   26768:	ldr	x0, [sp, #64]
   2676c:	bl	cc80 <mpfr_free_func@plt>
   26770:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26774:	ldr	x1, [x0, #2656]
   26778:	add	x0, x0, #0xa60
   2677c:	blr	x1
   26780:	str	w25, [x26, x0]
   26784:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26788:	ldr	x1, [x0, #2592]
   2678c:	add	x0, x0, #0xa20
   26790:	blr	x1
   26794:	str	x20, [x26, x0]
   26798:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2679c:	ldr	x1, [x0, #2624]
   267a0:	add	x0, x0, #0xa40
   267a4:	blr	x1
   267a8:	str	x24, [x26, x0]
   267ac:	ldr	x8, [x21, #16]
   267b0:	cmp	x8, x24
   267b4:	b.gt	26918 <mpfr_sinh_cosh@@Base+0x5c0>
   267b8:	cmp	x8, x20
   267bc:	b.lt	26918 <mpfr_sinh_cosh@@Base+0x5c0>  // b.tstop
   267c0:	cbz	w22, 267dc <mpfr_sinh_cosh@@Base+0x484>
   267c4:	orr	w8, w25, #0x8
   267c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   267cc:	ldr	x1, [x0, #2656]
   267d0:	add	x0, x0, #0xa60
   267d4:	blr	x1
   267d8:	str	w8, [x26, x0]
   267dc:	ldr	x8, [x19, #16]
   267e0:	cmp	x8, x20
   267e4:	b.lt	26958 <mpfr_sinh_cosh@@Base+0x600>  // b.tstop
   267e8:	cmp	x8, x24
   267ec:	b.gt	26958 <mpfr_sinh_cosh@@Base+0x600>
   267f0:	cbz	w23, 26838 <mpfr_sinh_cosh@@Base+0x4e0>
   267f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   267f8:	ldr	x1, [x0, #2656]
   267fc:	add	x0, x0, #0xa60
   26800:	blr	x1
   26804:	ldr	w8, [x26, x0]
   26808:	orr	w8, w8, #0x8
   2680c:	str	w8, [x26, x0]
   26810:	cmp	w22, #0x1
   26814:	mov	w8, #0x1                   	// #1
   26818:	cinc	w8, w8, lt  // lt = tstop
   2681c:	cmp	w22, #0x0
   26820:	csel	w8, wzr, w8, eq  // eq = none
   26824:	cmp	w23, #0x0
   26828:	cset	w9, eq  // eq = none
   2682c:	b.le	2684c <mpfr_sinh_cosh@@Base+0x4f4>
   26830:	mov	w10, #0x4                   	// #4
   26834:	b	26850 <mpfr_sinh_cosh@@Base+0x4f8>
   26838:	cmp	w22, #0x1
   2683c:	mov	w9, #0x1                   	// #1
   26840:	cinc	w8, w9, lt  // lt = tstop
   26844:	cmp	w22, #0x0
   26848:	csel	w8, wzr, w8, eq  // eq = none
   2684c:	mov	w10, #0x8                   	// #8
   26850:	cmp	w9, #0x0
   26854:	csel	w9, wzr, w10, ne  // ne = any
   26858:	orr	w0, w9, w8
   2685c:	ldp	x20, x19, [sp, #416]
   26860:	ldp	x22, x21, [sp, #400]
   26864:	ldp	x24, x23, [sp, #384]
   26868:	ldp	x26, x25, [sp, #368]
   2686c:	ldp	x28, x27, [sp, #352]
   26870:	ldp	x29, x30, [sp, #336]
   26874:	add	sp, sp, #0x1b0
   26878:	ret
   2687c:	ldr	x19, [sp, #40]
   26880:	ldr	w20, [sp, #52]
   26884:	mov	w2, #0x1                   	// #1
   26888:	mov	x0, x19
   2688c:	mov	w1, w20
   26890:	bl	bff0 <mpfr_overflow@plt>
   26894:	mov	w23, w0
   26898:	mov	x0, x21
   2689c:	mov	x1, x22
   268a0:	mov	w2, w20
   268a4:	bl	c380 <mpfr_sinh@plt>
   268a8:	ldr	w25, [sp, #12]
   268ac:	mov	w22, w0
   268b0:	orr	w25, w25, #0x2
   268b4:	b	2675c <mpfr_sinh_cosh@@Base+0x404>
   268b8:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   268bc:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   268c0:	add	x0, x0, #0xbf
   268c4:	add	x2, x2, #0xcb
   268c8:	mov	w1, #0x28                  	// #40
   268cc:	bl	cb90 <mpfr_assert_fail@plt>
   268d0:	b	26390 <mpfr_sinh_cosh@@Base+0x38>
   268d4:	cmp	x8, x19
   268d8:	b.ne	2698c <mpfr_sinh_cosh@@Base+0x634>  // b.any
   268dc:	str	x19, [x28, #16]
   268e0:	str	x19, [x21, #16]
   268e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   268e8:	ldr	x1, [x0, #2656]
   268ec:	add	x0, x0, #0xa60
   268f0:	blr	x1
   268f4:	mov	x8, x0
   268f8:	mrs	x9, tpidr_el0
   268fc:	ldr	w10, [x9, x8]
   26900:	mov	w0, wzr
   26904:	orr	w10, w10, #0x4
   26908:	str	w10, [x9, x8]
   2690c:	b	2685c <mpfr_sinh_cosh@@Base+0x504>
   26910:	mov	x8, xzr
   26914:	b	2643c <mpfr_sinh_cosh@@Base+0xe4>
   26918:	ldr	w2, [sp, #52]
   2691c:	mov	x0, x21
   26920:	mov	w1, w22
   26924:	bl	cb80 <mpfr_check_range@plt>
   26928:	mov	w22, w0
   2692c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26930:	ldr	x1, [x0, #2592]
   26934:	add	x0, x0, #0xa20
   26938:	blr	x1
   2693c:	ldr	x20, [x26, x0]
   26940:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26944:	ldr	x1, [x0, #2624]
   26948:	add	x0, x0, #0xa40
   2694c:	blr	x1
   26950:	ldr	x24, [x26, x0]
   26954:	b	267dc <mpfr_sinh_cosh@@Base+0x484>
   26958:	ldr	w2, [sp, #52]
   2695c:	mov	x0, x19
   26960:	mov	w1, w23
   26964:	bl	cb80 <mpfr_check_range@plt>
   26968:	mov	w23, w0
   2696c:	b	26810 <mpfr_sinh_cosh@@Base+0x4b8>
   26970:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   26974:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   26978:	add	x0, x0, #0xbf
   2697c:	add	x2, x2, #0x9be
   26980:	mov	w1, #0x60                  	// #96
   26984:	bl	cb90 <mpfr_assert_fail@plt>
   26988:	b	26430 <mpfr_sinh_cosh@@Base+0xd8>
   2698c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   26990:	cmp	x8, x9
   26994:	b.ne	269b8 <mpfr_sinh_cosh@@Base+0x660>  // b.any
   26998:	str	x9, [x21, #16]
   2699c:	ldr	w8, [x22, #8]
   269a0:	mov	w10, #0x1                   	// #1
   269a4:	mov	w0, wzr
   269a8:	str	w8, [x21, #8]
   269ac:	str	x9, [x28, #16]
   269b0:	str	w10, [x28, #8]
   269b4:	b	2685c <mpfr_sinh_cosh@@Base+0x504>
   269b8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   269bc:	str	x8, [x21, #16]
   269c0:	ldr	w8, [x22, #8]
   269c4:	ldr	w3, [sp, #52]
   269c8:	mov	w1, #0x1                   	// #1
   269cc:	mov	x0, x28
   269d0:	mov	x2, xzr
   269d4:	str	w8, [x21, #8]
   269d8:	bl	c640 <mpfr_set_ui_2exp@plt>
   269dc:	cmp	w0, #0x1
   269e0:	mov	w8, #0x4                   	// #4
   269e4:	mov	w9, #0x8                   	// #8
   269e8:	csel	w8, w9, w8, lt  // lt = tstop
   269ec:	cmp	w0, #0x0
   269f0:	csel	w0, wzr, w8, eq  // eq = none
   269f4:	b	2685c <mpfr_sinh_cosh@@Base+0x504>
   269f8:	bl	c940 <mpfr_abort_prec_max@plt>

00000000000269fc <mpfr_acosh@@Base>:
   269fc:	sub	sp, sp, #0xb0
   26a00:	stp	x29, x30, [sp, #80]
   26a04:	stp	x28, x27, [sp, #96]
   26a08:	stp	x26, x25, [sp, #112]
   26a0c:	stp	x24, x23, [sp, #128]
   26a10:	stp	x22, x21, [sp, #144]
   26a14:	stp	x20, x19, [sp, #160]
   26a18:	ldr	x8, [x1, #16]
   26a1c:	mov	x22, #0x2                   	// #2
   26a20:	movk	x22, #0x8000, lsl #48
   26a24:	add	x9, x22, #0x2
   26a28:	mov	x21, x1
   26a2c:	cmp	x8, x9
   26a30:	mov	x19, x0
   26a34:	add	x29, sp, #0x50
   26a38:	b.lt	26d98 <mpfr_acosh@@Base+0x39c>  // b.tstop
   26a3c:	mov	w20, w2
   26a40:	mov	w1, #0x1                   	// #1
   26a44:	mov	x0, x21
   26a48:	mov	x2, xzr
   26a4c:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   26a50:	tbnz	w0, #31, 26dbc <mpfr_acosh@@Base+0x3c0>
   26a54:	cbz	w0, 26de8 <mpfr_acosh@@Base+0x3ec>
   26a58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26a5c:	ldr	x1, [x0, #2656]
   26a60:	add	x0, x0, #0xa60
   26a64:	blr	x1
   26a68:	mrs	x27, tpidr_el0
   26a6c:	ldr	w23, [x27, x0]
   26a70:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26a74:	ldr	x1, [x0, #2592]
   26a78:	add	x0, x0, #0xa20
   26a7c:	blr	x1
   26a80:	ldr	x25, [x27, x0]
   26a84:	mov	x8, x0
   26a88:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26a8c:	ldr	x1, [x0, #2624]
   26a90:	add	x0, x0, #0xa40
   26a94:	blr	x1
   26a98:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   26a9c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   26aa0:	ldr	x28, [x27, x0]
   26aa4:	str	x9, [x27, x8]
   26aa8:	str	x10, [x27, x0]
   26aac:	ldr	x24, [x19]
   26ab0:	subs	x26, x24, #0x1
   26ab4:	add	x22, x24, #0x4
   26ab8:	b.eq	26e00 <mpfr_acosh@@Base+0x404>  // b.none
   26abc:	b.le	26e20 <mpfr_acosh@@Base+0x424>
   26ac0:	clz	x8, x26
   26ac4:	mov	w9, #0x40                  	// #64
   26ac8:	sub	x8, x9, x8
   26acc:	add	x22, x22, x8
   26ad0:	sub	x0, x29, #0x20
   26ad4:	mov	x1, x22
   26ad8:	bl	cad0 <mpfr_init2@plt>
   26adc:	cmp	w20, #0x0
   26ae0:	mov	w8, #0x40                  	// #64
   26ae4:	cinc	x24, x24, eq  // eq = none
   26ae8:	str	x8, [sp, #8]
   26aec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26af0:	ldr	x1, [x0, #2656]
   26af4:	add	x0, x0, #0xa60
   26af8:	blr	x1
   26afc:	mov	x26, x0
   26b00:	str	wzr, [x27, x0]
   26b04:	sub	x0, x29, #0x20
   26b08:	mov	w3, #0x3                   	// #3
   26b0c:	mov	x1, x21
   26b10:	mov	x2, x21
   26b14:	bl	be00 <mpfr_mul@plt>
   26b18:	ldrb	w8, [x27, x26]
   26b1c:	tbnz	w8, #1, 26c1c <mpfr_acosh@@Base+0x220>
   26b20:	ldur	x26, [x29, #-16]
   26b24:	sub	x0, x29, #0x20
   26b28:	sub	x1, x29, #0x20
   26b2c:	mov	w2, #0x1                   	// #1
   26b30:	mov	w3, #0x3                   	// #3
   26b34:	bl	c580 <mpfr_sub_ui@plt>
   26b38:	ldur	x8, [x29, #-16]
   26b3c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   26b40:	cmp	x8, x9
   26b44:	b.eq	26c80 <mpfr_acosh@@Base+0x284>  // b.none
   26b48:	sub	x0, x29, #0x20
   26b4c:	sub	x1, x29, #0x20
   26b50:	mov	w2, wzr
   26b54:	sub	x26, x26, x8
   26b58:	bl	c990 <mpfr_sqrt@plt>
   26b5c:	sub	x0, x29, #0x20
   26b60:	sub	x1, x29, #0x20
   26b64:	mov	x2, x21
   26b68:	mov	w3, wzr
   26b6c:	bl	c240 <mpfr_add@plt>
   26b70:	sub	x0, x29, #0x20
   26b74:	sub	x1, x29, #0x20
   26b78:	mov	w2, wzr
   26b7c:	bl	c130 <mpfr_log@plt>
   26b80:	ldur	x9, [x29, #-16]
   26b84:	cmp	x26, #0x1
   26b88:	csinc	x8, x26, xzr, gt
   26b8c:	mov	x26, #0x2                   	// #2
   26b90:	sub	x8, x8, x9
   26b94:	add	x10, x8, #0x3
   26b98:	add	x8, x8, #0x4
   26b9c:	cmp	x10, #0x0
   26ba0:	csel	x8, xzr, x8, lt  // lt = tstop
   26ba4:	movk	x26, #0x8000, lsl #48
   26ba8:	add	x10, x26, #0x2
   26bac:	cmp	x9, x10
   26bb0:	b.lt	26be4 <mpfr_acosh@@Base+0x1e8>  // b.tstop
   26bb4:	ldur	x9, [x29, #-32]
   26bb8:	ldur	x0, [x29, #-8]
   26bbc:	sub	x2, x22, x8
   26bc0:	mov	x3, x24
   26bc4:	sub	x10, x9, #0x1
   26bc8:	add	x9, x9, #0x3e
   26bcc:	cmp	x10, #0x0
   26bd0:	csel	x9, x9, x10, lt  // lt = tstop
   26bd4:	asr	x9, x9, #6
   26bd8:	add	x1, x9, #0x1
   26bdc:	bl	c3d0 <mpfr_round_p@plt>
   26be0:	cbnz	w0, 26ce8 <mpfr_acosh@@Base+0x2ec>
   26be4:	sub	x8, x26, x22
   26be8:	ldr	x26, [sp, #8]
   26bec:	sub	x8, x8, #0x103
   26bf0:	cmp	x26, x8
   26bf4:	b.gt	26ccc <mpfr_acosh@@Base+0x2d0>
   26bf8:	add	x22, x22, x26
   26bfc:	cmp	x22, #0x0
   26c00:	cinc	x8, x22, lt  // lt = tstop
   26c04:	asr	x8, x8, #1
   26c08:	sub	x0, x29, #0x20
   26c0c:	mov	x1, x22
   26c10:	str	x8, [sp, #8]
   26c14:	bl	bf80 <mpfr_set_prec@plt>
   26c18:	b	26aec <mpfr_acosh@@Base+0xf0>
   26c1c:	sub	x0, x29, #0x20
   26c20:	mov	x1, x21
   26c24:	mov	w2, wzr
   26c28:	bl	c130 <mpfr_log@plt>
   26c2c:	ldur	x8, [x29, #-16]
   26c30:	add	x0, sp, #0x10
   26c34:	subs	x8, x22, x8
   26c38:	csinc	x1, x8, xzr, gt
   26c3c:	bl	cad0 <mpfr_init2@plt>
   26c40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26c44:	ldr	x1, [x0, #2640]
   26c48:	add	x0, x0, #0xa50
   26c4c:	blr	x1
   26c50:	add	x1, x27, x0
   26c54:	add	x0, sp, #0x10
   26c58:	mov	w2, wzr
   26c5c:	bl	c3e0 <mpfr_cache@plt>
   26c60:	sub	x0, x29, #0x20
   26c64:	sub	x1, x29, #0x20
   26c68:	add	x2, sp, #0x10
   26c6c:	mov	w3, wzr
   26c70:	bl	c240 <mpfr_add@plt>
   26c74:	add	x0, sp, #0x10
   26c78:	bl	c110 <mpfr_clear@plt>
   26c7c:	b	26cb8 <mpfr_acosh@@Base+0x2bc>
   26c80:	sub	x0, x29, #0x20
   26c84:	mov	w2, #0x1                   	// #1
   26c88:	mov	w3, #0x3                   	// #3
   26c8c:	mov	x1, x21
   26c90:	bl	c580 <mpfr_sub_ui@plt>
   26c94:	sub	x0, x29, #0x20
   26c98:	sub	x1, x29, #0x20
   26c9c:	mov	w2, #0x1                   	// #1
   26ca0:	mov	w3, wzr
   26ca4:	bl	c320 <mpfr_mul_2ui@plt>
   26ca8:	sub	x0, x29, #0x20
   26cac:	sub	x1, x29, #0x20
   26cb0:	mov	w2, wzr
   26cb4:	bl	c990 <mpfr_sqrt@plt>
   26cb8:	ldur	x9, [x29, #-16]
   26cbc:	mov	x26, #0x2                   	// #2
   26cc0:	movk	x26, #0x8000, lsl #48
   26cc4:	mov	w8, #0x1                   	// #1
   26cc8:	b	26ba8 <mpfr_acosh@@Base+0x1ac>
   26ccc:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   26cd0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   26cd4:	mov	w1, #0x92                  	// #146
   26cd8:	add	x0, x0, #0x117
   26cdc:	add	x2, x2, #0xe2
   26ce0:	bl	cb90 <mpfr_assert_fail@plt>
   26ce4:	b	26bf8 <mpfr_acosh@@Base+0x1fc>
   26ce8:	ldur	w3, [x29, #-24]
   26cec:	sub	x1, x29, #0x20
   26cf0:	mov	x0, x19
   26cf4:	mov	w2, w20
   26cf8:	bl	c6f0 <mpfr_set4@plt>
   26cfc:	mov	w21, w0
   26d00:	sub	x0, x29, #0x20
   26d04:	bl	c110 <mpfr_clear@plt>
   26d08:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26d0c:	ldr	x1, [x0, #2656]
   26d10:	add	x0, x0, #0xa60
   26d14:	blr	x1
   26d18:	str	w23, [x27, x0]
   26d1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26d20:	ldr	x1, [x0, #2592]
   26d24:	add	x0, x0, #0xa20
   26d28:	blr	x1
   26d2c:	str	x25, [x27, x0]
   26d30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26d34:	ldr	x1, [x0, #2624]
   26d38:	add	x0, x0, #0xa40
   26d3c:	blr	x1
   26d40:	str	x28, [x27, x0]
   26d44:	ldr	x8, [x19, #16]
   26d48:	cmp	x8, x28
   26d4c:	b.gt	26e08 <mpfr_acosh@@Base+0x40c>
   26d50:	cmp	x8, x25
   26d54:	b.lt	26e08 <mpfr_acosh@@Base+0x40c>  // b.tstop
   26d58:	cbz	w21, 26d74 <mpfr_acosh@@Base+0x378>
   26d5c:	orr	w8, w23, #0x8
   26d60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26d64:	ldr	x1, [x0, #2656]
   26d68:	add	x0, x0, #0xa60
   26d6c:	blr	x1
   26d70:	str	w8, [x27, x0]
   26d74:	mov	w0, w21
   26d78:	ldp	x20, x19, [sp, #160]
   26d7c:	ldp	x22, x21, [sp, #144]
   26d80:	ldp	x24, x23, [sp, #128]
   26d84:	ldp	x26, x25, [sp, #112]
   26d88:	ldp	x28, x27, [sp, #96]
   26d8c:	ldp	x29, x30, [sp, #80]
   26d90:	add	sp, sp, #0xb0
   26d94:	ret
   26d98:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   26d9c:	cmp	x8, x9
   26da0:	b.ne	26dbc <mpfr_acosh@@Base+0x3c0>  // b.any
   26da4:	ldr	w8, [x21, #8]
   26da8:	cmp	w8, #0x1
   26dac:	b.lt	26dbc <mpfr_acosh@@Base+0x3c0>  // b.tstop
   26db0:	mov	w21, wzr
   26db4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   26db8:	b	26df0 <mpfr_acosh@@Base+0x3f4>
   26dbc:	str	x22, [x19, #16]
   26dc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26dc4:	ldr	x1, [x0, #2656]
   26dc8:	add	x0, x0, #0xa60
   26dcc:	blr	x1
   26dd0:	mrs	x8, tpidr_el0
   26dd4:	ldr	w9, [x8, x0]
   26dd8:	mov	w21, wzr
   26ddc:	orr	w9, w9, #0x4
   26de0:	str	w9, [x8, x0]
   26de4:	b	26d74 <mpfr_acosh@@Base+0x378>
   26de8:	mov	w21, wzr
   26dec:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   26df0:	mov	w9, #0x1                   	// #1
   26df4:	str	x8, [x19, #16]
   26df8:	str	w9, [x19, #8]
   26dfc:	b	26d74 <mpfr_acosh@@Base+0x378>
   26e00:	mov	x8, xzr
   26e04:	b	26acc <mpfr_acosh@@Base+0xd0>
   26e08:	mov	x0, x19
   26e0c:	mov	w1, w21
   26e10:	mov	w2, w20
   26e14:	bl	cb80 <mpfr_check_range@plt>
   26e18:	mov	w21, w0
   26e1c:	b	26d74 <mpfr_acosh@@Base+0x378>
   26e20:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   26e24:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   26e28:	add	x0, x0, #0x117
   26e2c:	add	x2, x2, #0xd9
   26e30:	mov	w1, #0x53                  	// #83
   26e34:	bl	cb90 <mpfr_assert_fail@plt>
   26e38:	b	26ac0 <mpfr_acosh@@Base+0xc4>

0000000000026e3c <mpfr_asinh@@Base>:
   26e3c:	sub	sp, sp, #0x90
   26e40:	stp	x29, x30, [sp, #48]
   26e44:	stp	x28, x27, [sp, #64]
   26e48:	stp	x26, x25, [sp, #80]
   26e4c:	stp	x24, x23, [sp, #96]
   26e50:	stp	x22, x21, [sp, #112]
   26e54:	stp	x20, x19, [sp, #128]
   26e58:	ldr	x8, [x1, #16]
   26e5c:	mov	x10, #0x2                   	// #2
   26e60:	movk	x10, #0x8000, lsl #48
   26e64:	add	x9, x10, #0x2
   26e68:	mov	x21, x1
   26e6c:	cmp	x8, x9
   26e70:	mov	x19, x0
   26e74:	add	x29, sp, #0x30
   26e78:	str	w2, [sp, #12]
   26e7c:	b.lt	27114 <mpfr_asinh@@Base+0x2d8>  // b.tstop
   26e80:	tbz	x8, #63, 26e9c <mpfr_asinh@@Base+0x60>
   26e84:	ldr	x9, [x19]
   26e88:	mov	w10, #0x2                   	// #2
   26e8c:	sub	x2, x10, x8, lsl #1
   26e90:	add	x8, x9, #0x1
   26e94:	cmp	x2, x8
   26e98:	b.hi	2719c <mpfr_asinh@@Base+0x360>  // b.pmore
   26e9c:	ldr	x25, [x19]
   26ea0:	ldr	w22, [x21, #8]
   26ea4:	subs	x23, x25, #0x1
   26ea8:	add	x20, x25, #0x4
   26eac:	b.eq	27148 <mpfr_asinh@@Base+0x30c>  // b.none
   26eb0:	b.le	27168 <mpfr_asinh@@Base+0x32c>
   26eb4:	clz	x8, x23
   26eb8:	mov	w9, #0x40                  	// #64
   26ebc:	sub	x8, x9, x8
   26ec0:	add	x23, x20, x8
   26ec4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26ec8:	ldr	x1, [x0, #2656]
   26ecc:	add	x0, x0, #0xa60
   26ed0:	blr	x1
   26ed4:	mrs	x28, tpidr_el0
   26ed8:	ldr	w24, [x28, x0]
   26edc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26ee0:	ldr	x1, [x0, #2592]
   26ee4:	add	x0, x0, #0xa20
   26ee8:	blr	x1
   26eec:	ldr	x26, [x28, x0]
   26ef0:	mov	x8, x0
   26ef4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   26ef8:	ldr	x1, [x0, #2624]
   26efc:	add	x0, x0, #0xa40
   26f00:	blr	x1
   26f04:	ldr	x27, [x28, x0]
   26f08:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   26f0c:	str	x9, [x28, x8]
   26f10:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   26f14:	str	x8, [x28, x0]
   26f18:	add	x0, sp, #0x10
   26f1c:	mov	x1, x23
   26f20:	bl	cad0 <mpfr_init2@plt>
   26f24:	adrp	x8, 70000 <__gmpfr_l2b@@Base+0x2e0>
   26f28:	adrp	x9, 70000 <__gmpfr_l2b@@Base+0x2e0>
   26f2c:	ldr	x8, [x8, #4016]
   26f30:	ldr	x9, [x9, #3960]
   26f34:	cmp	w22, #0x0
   26f38:	mov	w10, #0x40                  	// #64
   26f3c:	str	x10, [sp]
   26f40:	csel	x20, x9, x8, lt  // lt = tstop
   26f44:	ldr	w8, [sp, #12]
   26f48:	cmp	w8, #0x0
   26f4c:	cinc	x25, x25, eq  // eq = none
   26f50:	add	x0, sp, #0x10
   26f54:	mov	w3, #0x3                   	// #3
   26f58:	mov	x1, x21
   26f5c:	mov	x2, x21
   26f60:	bl	be00 <mpfr_mul@plt>
   26f64:	add	x0, sp, #0x10
   26f68:	add	x1, sp, #0x10
   26f6c:	mov	w2, #0x1                   	// #1
   26f70:	mov	w3, #0x3                   	// #3
   26f74:	bl	c2d0 <mpfr_add_ui@plt>
   26f78:	add	x0, sp, #0x10
   26f7c:	add	x1, sp, #0x10
   26f80:	mov	w2, wzr
   26f84:	bl	c990 <mpfr_sqrt@plt>
   26f88:	add	x0, sp, #0x10
   26f8c:	add	x1, sp, #0x10
   26f90:	mov	x2, x21
   26f94:	mov	w3, wzr
   26f98:	blr	x20
   26f9c:	add	x0, sp, #0x10
   26fa0:	add	x1, sp, #0x10
   26fa4:	mov	w2, wzr
   26fa8:	bl	c130 <mpfr_log@plt>
   26fac:	ldr	x8, [sp, #32]
   26fb0:	mov	x9, #0x2                   	// #2
   26fb4:	movk	x9, #0x8000, lsl #48
   26fb8:	add	x9, x9, #0x2
   26fbc:	cmp	x8, x9
   26fc0:	b.lt	27000 <mpfr_asinh@@Base+0x1c4>  // b.tstop
   26fc4:	ldr	x9, [sp, #16]
   26fc8:	sub	x8, x8, #0x5
   26fcc:	cmn	x8, #0x1
   26fd0:	csinv	x8, x8, xzr, lt  // lt = tstop
   26fd4:	add	x2, x8, x23
   26fd8:	sub	x8, x9, #0x1
   26fdc:	ldr	x0, [sp, #40]
   26fe0:	add	x9, x9, #0x3e
   26fe4:	cmp	x8, #0x0
   26fe8:	csel	x8, x9, x8, lt  // lt = tstop
   26fec:	asr	x8, x8, #6
   26ff0:	add	x1, x8, #0x1
   26ff4:	mov	x3, x25
   26ff8:	bl	c3d0 <mpfr_round_p@plt>
   26ffc:	cbnz	w0, 27064 <mpfr_asinh@@Base+0x228>
   27000:	mov	x8, #0x2                   	// #2
   27004:	ldr	x9, [sp]
   27008:	movk	x8, #0x8000, lsl #48
   2700c:	sub	x8, x8, x23
   27010:	sub	x8, x8, #0x103
   27014:	cmp	x9, x8
   27018:	mov	x8, x9
   2701c:	b.gt	27044 <mpfr_asinh@@Base+0x208>
   27020:	add	x23, x23, x8
   27024:	cmp	x23, #0x0
   27028:	cinc	x8, x23, lt  // lt = tstop
   2702c:	asr	x8, x8, #1
   27030:	add	x0, sp, #0x10
   27034:	mov	x1, x23
   27038:	str	x8, [sp]
   2703c:	bl	bf80 <mpfr_set_prec@plt>
   27040:	b	26f50 <mpfr_asinh@@Base+0x114>
   27044:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   27048:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2704c:	mov	w1, #0x6c                  	// #108
   27050:	add	x0, x0, #0x11f
   27054:	add	x2, x2, #0xe2
   27058:	bl	cb90 <mpfr_assert_fail@plt>
   2705c:	ldr	x8, [sp]
   27060:	b	27020 <mpfr_asinh@@Base+0x1e4>
   27064:	ldr	w2, [sp, #12]
   27068:	add	x1, sp, #0x10
   2706c:	mov	x0, x19
   27070:	mov	w3, w22
   27074:	bl	c6f0 <mpfr_set4@plt>
   27078:	mov	w22, w0
   2707c:	add	x0, sp, #0x10
   27080:	bl	c110 <mpfr_clear@plt>
   27084:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   27088:	ldr	x1, [x0, #2656]
   2708c:	add	x0, x0, #0xa60
   27090:	blr	x1
   27094:	str	w24, [x28, x0]
   27098:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2709c:	ldr	x1, [x0, #2592]
   270a0:	add	x0, x0, #0xa20
   270a4:	blr	x1
   270a8:	str	x26, [x28, x0]
   270ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   270b0:	ldr	x1, [x0, #2624]
   270b4:	add	x0, x0, #0xa40
   270b8:	blr	x1
   270bc:	str	x27, [x28, x0]
   270c0:	ldr	x8, [x19, #16]
   270c4:	cmp	x8, x27
   270c8:	b.gt	27150 <mpfr_asinh@@Base+0x314>
   270cc:	cmp	x8, x26
   270d0:	b.lt	27150 <mpfr_asinh@@Base+0x314>  // b.tstop
   270d4:	cbz	w22, 270f0 <mpfr_asinh@@Base+0x2b4>
   270d8:	orr	w8, w24, #0x8
   270dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   270e0:	ldr	x1, [x0, #2656]
   270e4:	add	x0, x0, #0xa60
   270e8:	blr	x1
   270ec:	str	w8, [x28, x0]
   270f0:	mov	w0, w22
   270f4:	ldp	x20, x19, [sp, #128]
   270f8:	ldp	x22, x21, [sp, #112]
   270fc:	ldp	x24, x23, [sp, #96]
   27100:	ldp	x26, x25, [sp, #80]
   27104:	ldp	x28, x27, [sp, #64]
   27108:	ldp	x29, x30, [sp, #48]
   2710c:	add	sp, sp, #0x90
   27110:	ret
   27114:	cmp	x8, x10
   27118:	b.ne	27184 <mpfr_asinh@@Base+0x348>  // b.any
   2711c:	str	x10, [x19, #16]
   27120:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   27124:	ldr	x1, [x0, #2656]
   27128:	add	x0, x0, #0xa60
   2712c:	blr	x1
   27130:	mrs	x8, tpidr_el0
   27134:	ldr	w9, [x8, x0]
   27138:	mov	w22, wzr
   2713c:	orr	w9, w9, #0x4
   27140:	str	w9, [x8, x0]
   27144:	b	270f0 <mpfr_asinh@@Base+0x2b4>
   27148:	mov	x8, xzr
   2714c:	b	26ec0 <mpfr_asinh@@Base+0x84>
   27150:	ldr	w2, [sp, #12]
   27154:	mov	x0, x19
   27158:	mov	w1, w22
   2715c:	bl	cb80 <mpfr_check_range@plt>
   27160:	mov	w22, w0
   27164:	b	270f0 <mpfr_asinh@@Base+0x2b4>
   27168:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2716c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   27170:	add	x0, x0, #0x11f
   27174:	add	x2, x2, #0xd9
   27178:	mov	w1, #0x50                  	// #80
   2717c:	bl	cb90 <mpfr_assert_fail@plt>
   27180:	b	26eb4 <mpfr_asinh@@Base+0x78>
   27184:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   27188:	cmp	x8, x9
   2718c:	b.ne	271bc <mpfr_asinh@@Base+0x380>  // b.any
   27190:	mov	w22, wzr
   27194:	str	x9, [x19, #16]
   27198:	b	271c8 <mpfr_asinh@@Base+0x38c>
   2719c:	ldr	w4, [sp, #12]
   271a0:	mov	x0, x19
   271a4:	mov	x1, x21
   271a8:	mov	w3, wzr
   271ac:	bl	c590 <mpfr_round_near_x@plt>
   271b0:	mov	w22, w0
   271b4:	cbnz	w0, 270f0 <mpfr_asinh@@Base+0x2b4>
   271b8:	b	26e9c <mpfr_asinh@@Base+0x60>
   271bc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   271c0:	mov	w22, wzr
   271c4:	str	x8, [x19, #16]
   271c8:	ldr	w8, [x21, #8]
   271cc:	str	w8, [x19, #8]
   271d0:	b	270f0 <mpfr_asinh@@Base+0x2b4>

00000000000271d4 <mpfr_atanh@@Base>:
   271d4:	sub	sp, sp, #0x150
   271d8:	stp	x29, x30, [sp, #240]
   271dc:	stp	x28, x27, [sp, #256]
   271e0:	stp	x26, x25, [sp, #272]
   271e4:	stp	x24, x23, [sp, #288]
   271e8:	stp	x22, x21, [sp, #304]
   271ec:	stp	x20, x19, [sp, #320]
   271f0:	ldr	x9, [x1, #16]
   271f4:	mov	x28, #0x2                   	// #2
   271f8:	movk	x28, #0x8000, lsl #48
   271fc:	add	x8, x28, #0x2
   27200:	mov	x21, x1
   27204:	cmp	x9, x8
   27208:	mov	x19, x0
   2720c:	add	x29, sp, #0xf0
   27210:	b.lt	2762c <mpfr_atanh@@Base+0x458>  // b.tstop
   27214:	cmp	x9, #0x1
   27218:	b.ge	27650 <mpfr_atanh@@Base+0x47c>  // b.tcont
   2721c:	mov	w26, w2
   27220:	tbnz	x9, #63, 2722c <mpfr_atanh@@Base+0x58>
   27224:	mov	x9, xzr
   27228:	b	27244 <mpfr_atanh@@Base+0x70>
   2722c:	ldr	x8, [x19]
   27230:	mov	w10, #0x1                   	// #1
   27234:	sub	x2, x10, x9, lsl #1
   27238:	add	x8, x8, #0x1
   2723c:	cmp	x2, x8
   27240:	b.hi	276fc <mpfr_atanh@@Base+0x528>  // b.pmore
   27244:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   27248:	ldr	x1, [x0, #2656]
   2724c:	add	x0, x0, #0xa60
   27250:	blr	x1
   27254:	mrs	x27, tpidr_el0
   27258:	ldr	w8, [x27, x0]
   2725c:	str	w8, [sp, #36]
   27260:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   27264:	ldr	x1, [x0, #2592]
   27268:	add	x0, x0, #0xa20
   2726c:	blr	x1
   27270:	ldr	x25, [x27, x0]
   27274:	mov	x8, x0
   27278:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2727c:	ldr	x1, [x0, #2624]
   27280:	add	x0, x0, #0xa40
   27284:	blr	x1
   27288:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   2728c:	str	x10, [x27, x8]
   27290:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   27294:	ldr	x20, [x27, x0]
   27298:	str	x8, [x27, x0]
   2729c:	ldr	x8, [x21]
   272a0:	mov	w11, #0x1                   	// #1
   272a4:	str	x8, [sp, #104]
   272a8:	ldr	x10, [x21, #24]
   272ac:	str	w11, [sp, #112]
   272b0:	stp	x9, x10, [sp, #120]
   272b4:	ldr	x22, [x19]
   272b8:	cmp	x8, x22
   272bc:	csel	x23, x8, x22, gt
   272c0:	subs	x24, x23, #0x1
   272c4:	b.eq	276c0 <mpfr_atanh@@Base+0x4ec>  // b.none
   272c8:	b.le	276e0 <mpfr_atanh@@Base+0x50c>
   272cc:	clz	x8, x24
   272d0:	mov	w9, #0x40                  	// #64
   272d4:	sub	x8, x9, x8
   272d8:	add	x8, x23, x8
   272dc:	add	x23, x8, #0x4
   272e0:	add	x0, sp, #0x48
   272e4:	mov	x1, x23
   272e8:	bl	cad0 <mpfr_init2@plt>
   272ec:	add	x0, sp, #0x28
   272f0:	mov	x1, x23
   272f4:	bl	cad0 <mpfr_init2@plt>
   272f8:	cmp	w26, #0x0
   272fc:	mov	w24, #0x40                  	// #64
   27300:	cinc	x8, x22, eq  // eq = none
   27304:	str	x8, [sp, #24]
   27308:	mov	x0, x22
   2730c:	bl	bd20 <__gmpfr_int_ceil_log2@plt>
   27310:	add	w8, w0, #0x1
   27314:	ldr	x9, [sp, #120]
   27318:	sxtw	x8, w8
   2731c:	sdiv	x8, x22, x8
   27320:	mvn	x8, x8
   27324:	cmp	x9, x8
   27328:	b.le	273a4 <mpfr_atanh@@Base+0x1d0>
   2732c:	add	x0, sp, #0x28
   27330:	add	x2, sp, #0x68
   27334:	mov	w1, #0x1                   	// #1
   27338:	mov	w3, #0x2                   	// #2
   2733c:	bl	caa0 <mpfr_ui_sub@plt>
   27340:	add	x0, sp, #0x48
   27344:	add	x1, sp, #0x68
   27348:	mov	w2, #0x1                   	// #1
   2734c:	mov	w3, #0x3                   	// #3
   27350:	bl	c2d0 <mpfr_add_ui@plt>
   27354:	add	x0, sp, #0x48
   27358:	add	x1, sp, #0x48
   2735c:	add	x2, sp, #0x28
   27360:	mov	w3, wzr
   27364:	bl	c670 <mpfr_div@plt>
   27368:	add	x0, sp, #0x48
   2736c:	add	x1, sp, #0x48
   27370:	mov	w2, wzr
   27374:	bl	c130 <mpfr_log@plt>
   27378:	add	x0, sp, #0x48
   2737c:	add	x1, sp, #0x48
   27380:	mov	w2, #0x1                   	// #1
   27384:	mov	w3, wzr
   27388:	bl	c950 <mpfr_div_2ui@plt>
   2738c:	ldr	x8, [sp, #88]
   27390:	sub	x9, x8, #0x5
   27394:	cmn	x9, #0x1
   27398:	csinv	x9, x9, xzr, lt  // lt = tstop
   2739c:	add	x2, x9, x23
   273a0:	b	274b8 <mpfr_atanh@@Base+0x2e4>
   273a4:	ldr	x28, [sp, #72]
   273a8:	sub	x0, x29, #0x48
   273ac:	str	x24, [sp, #8]
   273b0:	str	w26, [sp, #20]
   273b4:	mov	x1, x28
   273b8:	bl	cad0 <mpfr_init2@plt>
   273bc:	sub	x0, x29, #0x68
   273c0:	mov	x1, x28
   273c4:	bl	cad0 <mpfr_init2@plt>
   273c8:	sub	x0, x29, #0x28
   273cc:	mov	x1, x28
   273d0:	bl	cad0 <mpfr_init2@plt>
   273d4:	ldr	w3, [sp, #112]
   273d8:	sub	x0, x29, #0x48
   273dc:	add	x1, sp, #0x68
   273e0:	mov	w2, #0x5                   	// #5
   273e4:	bl	c6f0 <mpfr_set4@plt>
   273e8:	ldur	w3, [x29, #-64]
   273ec:	add	x0, sp, #0x48
   273f0:	sub	x1, x29, #0x48
   273f4:	mov	w2, #0x5                   	// #5
   273f8:	bl	c6f0 <mpfr_set4@plt>
   273fc:	sub	x0, x29, #0x28
   27400:	add	x1, sp, #0x68
   27404:	add	x2, sp, #0x68
   27408:	mov	w3, #0x5                   	// #5
   2740c:	bl	be00 <mpfr_mul@plt>
   27410:	mov	w26, #0xb                   	// #11
   27414:	sub	x0, x29, #0x48
   27418:	sub	x1, x29, #0x48
   2741c:	sub	x2, x29, #0x28
   27420:	mov	w3, #0x5                   	// #5
   27424:	sub	x24, x26, #0x8
   27428:	bl	be00 <mpfr_mul@plt>
   2742c:	sub	x0, x29, #0x68
   27430:	sub	x1, x29, #0x48
   27434:	mov	w3, #0x5                   	// #5
   27438:	mov	x2, x24
   2743c:	bl	ccc0 <mpfr_div_ui@plt>
   27440:	ldr	x8, [sp, #88]
   27444:	ldur	x9, [x29, #-88]
   27448:	sub	x8, x8, x28
   2744c:	cmp	x9, x8
   27450:	b.le	27470 <mpfr_atanh@@Base+0x29c>
   27454:	add	x0, sp, #0x48
   27458:	add	x1, sp, #0x48
   2745c:	sub	x2, x29, #0x68
   27460:	mov	w3, #0x5                   	// #5
   27464:	bl	c240 <mpfr_add@plt>
   27468:	add	x26, x26, #0x2
   2746c:	b	27414 <mpfr_atanh@@Base+0x240>
   27470:	lsr	x0, x26, #1
   27474:	bl	bd20 <__gmpfr_int_ceil_log2@plt>
   27478:	add	w8, w0, #0x2
   2747c:	mov	w24, w0
   27480:	cmp	x28, w8, sxtw
   27484:	b.le	27538 <mpfr_atanh@@Base+0x364>
   27488:	sub	x0, x29, #0x48
   2748c:	bl	c110 <mpfr_clear@plt>
   27490:	sub	x0, x29, #0x68
   27494:	bl	c110 <mpfr_clear@plt>
   27498:	sub	x0, x29, #0x28
   2749c:	bl	c110 <mpfr_clear@plt>
   274a0:	ldr	x8, [sp, #88]
   274a4:	sub	x2, x23, w24, sxtw
   274a8:	ldr	w26, [sp, #20]
   274ac:	ldr	x24, [sp, #8]
   274b0:	mov	x28, #0x2                   	// #2
   274b4:	movk	x28, #0x8000, lsl #48
   274b8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   274bc:	cmp	x8, x9
   274c0:	b.eq	27570 <mpfr_atanh@@Base+0x39c>  // b.none
   274c4:	add	x9, x28, #0x2
   274c8:	cmp	x8, x9
   274cc:	b.lt	274fc <mpfr_atanh@@Base+0x328>  // b.tstop
   274d0:	ldr	x8, [sp, #72]
   274d4:	ldr	x0, [sp, #96]
   274d8:	ldr	x3, [sp, #24]
   274dc:	sub	x9, x8, #0x1
   274e0:	add	x8, x8, #0x3e
   274e4:	cmp	x9, #0x0
   274e8:	csel	x8, x8, x9, lt  // lt = tstop
   274ec:	asr	x8, x8, #6
   274f0:	add	x1, x8, #0x1
   274f4:	bl	c3d0 <mpfr_round_p@plt>
   274f8:	cbnz	w0, 27570 <mpfr_atanh@@Base+0x39c>
   274fc:	sub	x8, x28, x23
   27500:	sub	x8, x8, #0x103
   27504:	cmp	x24, x8
   27508:	b.gt	27554 <mpfr_atanh@@Base+0x380>
   2750c:	add	x23, x23, x24
   27510:	cmp	x23, #0x0
   27514:	cinc	x8, x23, lt  // lt = tstop
   27518:	add	x0, sp, #0x48
   2751c:	mov	x1, x23
   27520:	asr	x24, x8, #1
   27524:	bl	bf80 <mpfr_set_prec@plt>
   27528:	add	x0, sp, #0x28
   2752c:	mov	x1, x23
   27530:	bl	bf80 <mpfr_set_prec@plt>
   27534:	b	27308 <mpfr_atanh@@Base+0x134>
   27538:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2753c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   27540:	mov	w1, #0x56                  	// #86
   27544:	add	x0, x0, #0x127
   27548:	add	x2, x2, #0x12f
   2754c:	bl	cb90 <mpfr_assert_fail@plt>
   27550:	b	27488 <mpfr_atanh@@Base+0x2b4>
   27554:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   27558:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2755c:	mov	w1, #0xca                  	// #202
   27560:	add	x0, x0, #0x127
   27564:	add	x2, x2, #0xe2
   27568:	bl	cb90 <mpfr_assert_fail@plt>
   2756c:	b	2750c <mpfr_atanh@@Base+0x338>
   27570:	ldr	w3, [x21, #8]
   27574:	add	x1, sp, #0x48
   27578:	mov	x0, x19
   2757c:	mov	w2, w26
   27580:	bl	c6f0 <mpfr_set4@plt>
   27584:	mov	w22, w0
   27588:	add	x0, sp, #0x48
   2758c:	bl	c110 <mpfr_clear@plt>
   27590:	add	x0, sp, #0x28
   27594:	bl	c110 <mpfr_clear@plt>
   27598:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2759c:	ldr	x1, [x0, #2656]
   275a0:	add	x0, x0, #0xa60
   275a4:	blr	x1
   275a8:	ldr	w9, [sp, #36]
   275ac:	str	w9, [x27, x0]
   275b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   275b4:	ldr	x1, [x0, #2592]
   275b8:	add	x0, x0, #0xa20
   275bc:	blr	x1
   275c0:	str	x25, [x27, x0]
   275c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   275c8:	ldr	x1, [x0, #2624]
   275cc:	add	x0, x0, #0xa40
   275d0:	blr	x1
   275d4:	str	x20, [x27, x0]
   275d8:	ldr	x8, [x19, #16]
   275dc:	cmp	x8, x20
   275e0:	b.gt	276c8 <mpfr_atanh@@Base+0x4f4>
   275e4:	cmp	x8, x25
   275e8:	b.lt	276c8 <mpfr_atanh@@Base+0x4f4>  // b.tstop
   275ec:	cbz	w22, 27608 <mpfr_atanh@@Base+0x434>
   275f0:	orr	w8, w9, #0x8
   275f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   275f8:	ldr	x1, [x0, #2656]
   275fc:	add	x0, x0, #0xa60
   27600:	blr	x1
   27604:	str	w8, [x27, x0]
   27608:	mov	w0, w22
   2760c:	ldp	x20, x19, [sp, #320]
   27610:	ldp	x22, x21, [sp, #304]
   27614:	ldp	x24, x23, [sp, #288]
   27618:	ldp	x26, x25, [sp, #272]
   2761c:	ldp	x28, x27, [sp, #256]
   27620:	ldp	x29, x30, [sp, #240]
   27624:	add	sp, sp, #0x150
   27628:	ret
   2762c:	and	x8, x9, #0xfffffffffffffffe
   27630:	cmp	x8, x28
   27634:	b.eq	27694 <mpfr_atanh@@Base+0x4c0>  // b.none
   27638:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2763c:	str	x8, [x19, #16]
   27640:	ldr	w8, [x21, #8]
   27644:	mov	w22, wzr
   27648:	str	w8, [x19, #8]
   2764c:	b	27608 <mpfr_atanh@@Base+0x434>
   27650:	b.ne	27694 <mpfr_atanh@@Base+0x4c0>  // b.any
   27654:	mov	x0, x21
   27658:	bl	bfb0 <mpfr_powerof2_raw@plt>
   2765c:	cbz	w0, 27694 <mpfr_atanh@@Base+0x4c0>
   27660:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   27664:	str	x8, [x19, #16]
   27668:	ldr	w8, [x21, #8]
   2766c:	str	w8, [x19, #8]
   27670:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   27674:	ldr	x1, [x0, #2656]
   27678:	add	x0, x0, #0xa60
   2767c:	blr	x1
   27680:	mrs	x8, tpidr_el0
   27684:	ldr	w9, [x8, x0]
   27688:	mov	w22, wzr
   2768c:	orr	w9, w9, #0x20
   27690:	b	276b8 <mpfr_atanh@@Base+0x4e4>
   27694:	str	x28, [x19, #16]
   27698:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2769c:	ldr	x1, [x0, #2656]
   276a0:	add	x0, x0, #0xa60
   276a4:	blr	x1
   276a8:	mrs	x8, tpidr_el0
   276ac:	ldr	w9, [x8, x0]
   276b0:	mov	w22, wzr
   276b4:	orr	w9, w9, #0x4
   276b8:	str	w9, [x8, x0]
   276bc:	b	27608 <mpfr_atanh@@Base+0x434>
   276c0:	mov	x8, xzr
   276c4:	b	272d8 <mpfr_atanh@@Base+0x104>
   276c8:	mov	x0, x19
   276cc:	mov	w1, w22
   276d0:	mov	w2, w26
   276d4:	bl	cb80 <mpfr_check_range@plt>
   276d8:	mov	w22, w0
   276dc:	b	27608 <mpfr_atanh@@Base+0x434>
   276e0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   276e4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   276e8:	add	x0, x0, #0x127
   276ec:	add	x2, x2, #0xb6
   276f0:	mov	w1, #0xa1                  	// #161
   276f4:	bl	cb90 <mpfr_assert_fail@plt>
   276f8:	b	272cc <mpfr_atanh@@Base+0xf8>
   276fc:	mov	w3, #0x1                   	// #1
   27700:	mov	x0, x19
   27704:	mov	x1, x21
   27708:	mov	w4, w26
   2770c:	bl	c590 <mpfr_round_near_x@plt>
   27710:	mov	w22, w0
   27714:	cbnz	w0, 27608 <mpfr_atanh@@Base+0x434>
   27718:	ldr	x9, [x21, #16]
   2771c:	b	27244 <mpfr_atanh@@Base+0x70>

0000000000027720 <mpfr_atan@@Base>:
   27720:	stp	x29, x30, [sp, #-96]!
   27724:	stp	x28, x27, [sp, #16]
   27728:	stp	x26, x25, [sp, #32]
   2772c:	stp	x24, x23, [sp, #48]
   27730:	stp	x22, x21, [sp, #64]
   27734:	stp	x20, x19, [sp, #80]
   27738:	mov	x29, sp
   2773c:	sub	sp, sp, #0x1, lsl #12
   27740:	sub	sp, sp, #0x2c0
   27744:	ldr	x8, [x1, #16]
   27748:	mov	x9, #0xfffffffffffffeff    	// #-257
   2774c:	movk	x9, #0x7fff, lsl #48
   27750:	add	x9, x9, #0x105
   27754:	mov	w25, w2
   27758:	mov	x24, x1
   2775c:	cmp	x8, x9
   27760:	mov	x28, x0
   27764:	b.lt	287d4 <mpfr_atan@@Base+0x10b4>  // b.tstop
   27768:	tbz	x8, #63, 27784 <mpfr_atan@@Base+0x64>
   2776c:	ldr	x9, [x28]
   27770:	mov	w10, #0x1                   	// #1
   27774:	sub	x2, x10, x8, lsl #1
   27778:	add	x9, x9, #0x1
   2777c:	cmp	x2, x9
   27780:	b.hi	28874 <mpfr_atan@@Base+0x1154>  // b.pmore
   27784:	ldr	x9, [x24]
   27788:	mov	w10, #0x1                   	// #1
   2778c:	str	x24, [sp, #64]
   27790:	str	x9, [sp, #3736]
   27794:	ldr	x9, [x24, #24]
   27798:	str	w10, [sp, #3744]
   2779c:	str	x8, [sp, #3752]
   277a0:	str	x9, [sp, #3760]
   277a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   277a8:	ldr	x1, [x0, #2656]
   277ac:	add	x0, x0, #0xa60
   277b0:	blr	x1
   277b4:	mrs	x27, tpidr_el0
   277b8:	ldr	w8, [x27, x0]
   277bc:	str	w8, [sp, #92]
   277c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   277c4:	ldr	x1, [x0, #2592]
   277c8:	add	x0, x0, #0xa20
   277cc:	blr	x1
   277d0:	ldr	x9, [x27, x0]
   277d4:	mov	x8, x0
   277d8:	str	x9, [sp, #80]
   277dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   277e0:	ldr	x1, [x0, #2624]
   277e4:	add	x0, x0, #0xa40
   277e8:	blr	x1
   277ec:	ldr	x9, [x27, x0]
   277f0:	mov	w1, #0x1                   	// #1
   277f4:	mov	x2, xzr
   277f8:	str	x9, [sp, #72]
   277fc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   27800:	str	x9, [x27, x8]
   27804:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   27808:	str	x8, [x27, x0]
   2780c:	add	x0, sp, #0xe98
   27810:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   27814:	cbz	w0, 28828 <mpfr_atan@@Base+0x1108>
   27818:	ldr	x19, [x28]
   2781c:	mov	w24, w0
   27820:	cmp	x19, #0x1
   27824:	b.eq	2884c <mpfr_atan@@Base+0x112c>  // b.none
   27828:	mov	x8, x19
   2782c:	b.le	28854 <mpfr_atan@@Base+0x1134>
   27830:	sub	x8, x8, #0x1
   27834:	clz	x8, x8
   27838:	mov	w9, #0x40                  	// #64
   2783c:	sub	x8, x9, x8
   27840:	add	x19, x8, x19
   27844:	add	x23, x19, #0x44
   27848:	add	x0, sp, #0xe08
   2784c:	mov	x1, x23
   27850:	bl	c960 <mpfr_mpz_init2@plt>
   27854:	mov	x8, #0xfffffffffffffeff    	// #-257
   27858:	movk	x8, #0x7fff, lsl #48
   2785c:	sub	x8, x8, #0x44
   27860:	cmp	x19, x8
   27864:	b.gt	28a70 <mpfr_atan@@Base+0x1350>
   27868:	add	x8, x19, #0x43
   2786c:	add	x9, x19, #0x82
   27870:	cmp	x8, #0x0
   27874:	csel	x8, x9, x8, lt  // lt = tstop
   27878:	asr	x8, x8, #6
   2787c:	add	x21, x19, #0x4
   27880:	cmp	x19, #0xbd
   27884:	add	x20, x8, #0x1
   27888:	b.lt	2789c <mpfr_atan@@Base+0x17c>  // b.tstop
   2788c:	lsl	x0, x20, #5
   27890:	str	x0, [sp, #328]
   27894:	bl	cd50 <mpfr_allocate_func@plt>
   27898:	b	278a8 <mpfr_atan@@Base+0x188>
   2789c:	add	x8, sp, #0x148
   278a0:	add	x0, x8, #0x10
   278a4:	str	xzr, [sp, #328]
   278a8:	add	x9, x0, x20, lsl #4
   278ac:	cmp	w25, #0x0
   278b0:	add	x13, sp, #0x1d8
   278b4:	add	x10, sp, #0x1, lsl #12
   278b8:	str	x9, [sp, #3632]
   278bc:	cset	w9, eq  // eq = none
   278c0:	add	x10, x10, #0xb8
   278c4:	str	x9, [sp, #56]
   278c8:	add	x9, x13, #0x20
   278cc:	add	x8, x0, x20, lsl #3
   278d0:	mov	w12, #0x18                  	// #24
   278d4:	add	x14, sp, #0xeb8
   278d8:	str	x9, [sp, #48]
   278dc:	sub	x9, x10, #0x8
   278e0:	mov	w19, wzr
   278e4:	mov	w11, #0x1                   	// #1
   278e8:	mov	w15, #0x40                  	// #64
   278ec:	mov	w16, #0x2                   	// #2
   278f0:	str	x8, [sp, #3664]
   278f4:	madd	x8, x20, x12, x0
   278f8:	str	x9, [sp, #184]
   278fc:	sub	x9, x14, #0x8
   27900:	mov	w22, #0x40                  	// #64
   27904:	str	x0, [sp, #336]
   27908:	str	x23, [sp, #3672]
   2790c:	str	x0, [sp, #3696]
   27910:	str	x23, [sp, #3640]
   27914:	str	x23, [sp, #3608]
   27918:	str	x23, [sp, #3704]
   2791c:	str	w11, [sp, #3680]
   27920:	str	w11, [sp, #3648]
   27924:	str	w11, [sp, #3616]
   27928:	str	w11, [sp, #3712]
   2792c:	str	x9, [sp, #216]
   27930:	str	x8, [sp, #3728]
   27934:	str	w24, [sp, #148]
   27938:	ldr	x8, [sp, #3752]
   2793c:	str	x21, [sp, #152]
   27940:	str	x22, [sp, #32]
   27944:	sub	x9, x16, x8
   27948:	cmp	x8, #0x0
   2794c:	csinc	x8, x9, xzr, lt  // lt = tstop
   27950:	add	x20, x8, x21
   27954:	cmn	x20, #0x2
   27958:	b.eq	28640 <mpfr_atan@@Base+0xf20>  // b.none
   2795c:	b.le	2866c <mpfr_atan@@Base+0xf4c>
   27960:	add	x8, x20, #0x2
   27964:	clz	x8, x8
   27968:	sub	w8, w15, w8
   2796c:	str	x8, [sp, #168]
   27970:	add	w8, w8, w8, lsl #1
   27974:	cmp	w8, #0x3
   27978:	add	x21, x20, #0x1
   2797c:	str	w8, [sp, #196]
   27980:	b.eq	2868c <mpfr_atan@@Base+0xf6c>  // b.none
   27984:	b.le	2864c <mpfr_atan@@Base+0xf2c>
   27988:	ldr	w8, [sp, #196]
   2798c:	sub	w8, w8, #0x3
   27990:	sxtw	x8, w8
   27994:	clz	x8, x8
   27998:	sub	x22, x15, x8
   2799c:	ldr	x8, [x28]
   279a0:	add	x23, x22, x21
   279a4:	cmp	x8, #0x65
   279a8:	b.lt	279e8 <mpfr_atan@@Base+0x2c8>  // b.tstop
   279ac:	cmp	x23, #0x1
   279b0:	b.eq	28698 <mpfr_atan@@Base+0xf78>  // b.none
   279b4:	b.le	286a0 <mpfr_atan@@Base+0xf80>
   279b8:	add	x8, x22, x20
   279bc:	clz	x8, x8
   279c0:	sub	w8, w15, w8
   279c4:	cmp	w8, #0x0
   279c8:	cinc	w8, w8, lt  // lt = tstop
   279cc:	asr	w8, w8, #1
   279d0:	sub	w8, w8, #0x3
   279d4:	sxtw	x20, w8
   279d8:	sbfiz	x8, x8, #1, #32
   279dc:	add	x10, x8, #0x9
   279e0:	add	x23, x10, x23
   279e4:	b	279f0 <mpfr_atan@@Base+0x2d0>
   279e8:	mov	x20, xzr
   279ec:	mov	x10, xzr
   279f0:	mov	x8, #0xfffffffffffffeff    	// #-257
   279f4:	movk	x8, #0x7fff, lsl #48
   279f8:	cmp	x23, x8
   279fc:	b.gt	28a70 <mpfr_atan@@Base+0x1350>
   27a00:	sub	x8, x23, #0x1
   27a04:	add	x9, x23, #0x3e
   27a08:	cmp	x8, #0x0
   27a0c:	ldr	x1, [sp, #328]
   27a10:	csel	x8, x9, x8, lt  // lt = tstop
   27a14:	asr	x8, x8, #6
   27a18:	add	x21, x8, #0x1
   27a1c:	lsl	x2, x21, #5
   27a20:	str	x2, [sp, #328]
   27a24:	str	x10, [sp, #104]
   27a28:	cbz	x1, 27a38 <mpfr_atan@@Base+0x318>
   27a2c:	ldr	x0, [sp, #336]
   27a30:	bl	c260 <mpfr_reallocate_func@plt>
   27a34:	b	27a40 <mpfr_atan@@Base+0x320>
   27a38:	mov	x0, x2
   27a3c:	bl	cd50 <mpfr_allocate_func@plt>
   27a40:	add	x8, x0, x21, lsl #3
   27a44:	str	x8, [sp, #3664]
   27a48:	ldr	w8, [sp, #196]
   27a4c:	mov	w10, #0x18                  	// #24
   27a50:	add	x9, x0, x21, lsl #4
   27a54:	madd	x10, x21, x10, x0
   27a58:	add	w8, w8, #0x3
   27a5c:	mov	w11, #0x1                   	// #1
   27a60:	cmp	w19, w8
   27a64:	mov	w22, #0x1                   	// #1
   27a68:	str	x0, [sp, #336]
   27a6c:	str	x0, [sp, #3696]
   27a70:	str	x23, [sp, #3672]
   27a74:	str	w11, [sp, #3680]
   27a78:	str	x23, [sp, #3640]
   27a7c:	str	w11, [sp, #3648]
   27a80:	str	x23, [sp, #3608]
   27a84:	str	w11, [sp, #3616]
   27a88:	str	x23, [sp, #3704]
   27a8c:	str	x9, [sp, #3632]
   27a90:	str	x10, [sp, #3728]
   27a94:	str	x8, [sp, #160]
   27a98:	str	w11, [sp, #3712]
   27a9c:	b.cs	27ac8 <mpfr_atan@@Base+0x3a8>  // b.hs, b.nlast
   27aa0:	add	x8, sp, #0x1d8
   27aa4:	add	x24, x8, w19, uxtw #4
   27aa8:	ldr	x8, [sp, #160]
   27aac:	sub	x19, x8, w19, uxtw
   27ab0:	mov	x0, x24
   27ab4:	mov	x1, x23
   27ab8:	bl	c960 <mpfr_mpz_init2@plt>
   27abc:	subs	x19, x19, #0x1
   27ac0:	add	x24, x24, #0x10
   27ac4:	b.ne	27ab0 <mpfr_atan@@Base+0x390>  // b.any
   27ac8:	ldr	w24, [sp, #148]
   27acc:	cmp	w24, #0x1
   27ad0:	b.lt	27aec <mpfr_atan@@Base+0x3cc>  // b.tstop
   27ad4:	add	x0, sp, #0xe58
   27ad8:	add	x2, sp, #0xe98
   27adc:	mov	w1, #0x1                   	// #1
   27ae0:	mov	w3, wzr
   27ae4:	bl	c350 <mpfr_ui_div@plt>
   27ae8:	b	27b00 <mpfr_atan@@Base+0x3e0>
   27aec:	ldr	w3, [sp, #3744]
   27af0:	add	x0, sp, #0xe58
   27af4:	add	x1, sp, #0xe98
   27af8:	mov	w2, wzr
   27afc:	bl	c6f0 <mpfr_set4@plt>
   27b00:	ldr	x8, [sp, #3688]
   27b04:	neg	x19, x20
   27b08:	cmp	x8, x19
   27b0c:	b.le	27bbc <mpfr_atan@@Base+0x49c>
   27b10:	mov	x20, xzr
   27b14:	add	x0, sp, #0xe38
   27b18:	add	x1, sp, #0xe58
   27b1c:	mov	w2, wzr
   27b20:	mov	x21, x8
   27b24:	bl	c450 <mpfr_sqr@plt>
   27b28:	add	x0, sp, #0xe38
   27b2c:	add	x1, sp, #0xe38
   27b30:	mov	w2, #0x1                   	// #1
   27b34:	mov	w3, wzr
   27b38:	bl	c2d0 <mpfr_add_ui@plt>
   27b3c:	add	x0, sp, #0xe38
   27b40:	add	x1, sp, #0xe38
   27b44:	mov	w2, wzr
   27b48:	bl	c990 <mpfr_sqrt@plt>
   27b4c:	add	x0, sp, #0xe38
   27b50:	add	x1, sp, #0xe38
   27b54:	mov	w2, #0x1                   	// #1
   27b58:	mov	w3, wzr
   27b5c:	bl	c580 <mpfr_sub_ui@plt>
   27b60:	cmp	w24, #0x1
   27b64:	b.lt	27b84 <mpfr_atan@@Base+0x464>  // b.tstop
   27b68:	cbnz	x20, 27b84 <mpfr_atan@@Base+0x464>
   27b6c:	add	x0, sp, #0xe58
   27b70:	add	x1, sp, #0xe38
   27b74:	add	x2, sp, #0xe98
   27b78:	mov	w3, wzr
   27b7c:	bl	be00 <mpfr_mul@plt>
   27b80:	b	27b98 <mpfr_atan@@Base+0x478>
   27b84:	add	x0, sp, #0xe58
   27b88:	add	x1, sp, #0xe38
   27b8c:	add	x2, sp, #0xe58
   27b90:	mov	w3, wzr
   27b94:	bl	c670 <mpfr_div@plt>
   27b98:	ldr	x8, [sp, #3688]
   27b9c:	sub	x20, x20, #0x1
   27ba0:	cmp	x8, x19
   27ba4:	b.gt	27b14 <mpfr_atan@@Base+0x3f4>
   27ba8:	mov	w9, #0x9                   	// #9
   27bac:	sub	x9, x9, x21, lsl #1
   27bb0:	str	x9, [sp, #96]
   27bb4:	neg	x9, x20
   27bb8:	b	27bc4 <mpfr_atan@@Base+0x4a4>
   27bbc:	mov	x9, xzr
   27bc0:	str	xzr, [sp, #96]
   27bc4:	ldr	x19, [sp, #168]
   27bc8:	ldr	x21, [sp, #152]
   27bcc:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   27bd0:	str	x9, [sp, #112]
   27bd4:	cmp	w19, #0x1
   27bd8:	str	x20, [sp, #3720]
   27bdc:	b.lt	28530 <mpfr_atan@@Base+0xe10>  // b.tstop
   27be0:	cmp	x8, x20
   27be4:	b.eq	28530 <mpfr_atan@@Base+0xe10>  // b.none
   27be8:	ldr	x8, [sp, #48]
   27bec:	mov	x9, xzr
   27bf0:	mov	w23, #0x1                   	// #1
   27bf4:	add	x8, x8, w19, uxtw #4
   27bf8:	stp	x19, x8, [sp, #120]
   27bfc:	lsl	x8, x19, #4
   27c00:	str	x8, [sp, #200]
   27c04:	add	x8, sp, #0x1d8
   27c08:	add	x8, x8, x19, lsl #5
   27c0c:	str	x8, [sp, #264]
   27c10:	lsl	x8, x19, #5
   27c14:	str	x8, [sp, #240]
   27c18:	add	x0, sp, #0xe38
   27c1c:	add	x1, sp, #0xe58
   27c20:	mov	x2, x23
   27c24:	mov	w3, wzr
   27c28:	str	x9, [sp, #136]
   27c2c:	bl	c320 <mpfr_mul_2ui@plt>
   27c30:	add	x0, sp, #0xe38
   27c34:	add	x1, sp, #0xe38
   27c38:	mov	w2, #0x1                   	// #1
   27c3c:	bl	c360 <mpfr_rint@plt>
   27c40:	ldr	x8, [sp, #3656]
   27c44:	lsl	x11, x23, #1
   27c48:	cmp	x8, x20
   27c4c:	b.eq	284b0 <mpfr_atan@@Base+0xd90>  // b.none
   27c50:	add	x0, sp, #0xe08
   27c54:	add	x1, sp, #0xe38
   27c58:	str	x11, [sp, #40]
   27c5c:	bl	cb10 <mpfr_get_z_2exp@plt>
   27c60:	neg	x2, x0
   27c64:	add	x0, sp, #0xe08
   27c68:	add	x1, sp, #0xe08
   27c6c:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   27c70:	add	x0, sp, #0xe38
   27c74:	add	x1, sp, #0xe08
   27c78:	mov	w2, wzr
   27c7c:	bl	c2b0 <mpfr_set_z@plt>
   27c80:	add	x0, sp, #0xe38
   27c84:	add	x1, sp, #0xe38
   27c88:	mov	x2, x23
   27c8c:	mov	w3, wzr
   27c90:	bl	c950 <mpfr_div_2ui@plt>
   27c94:	ldr	x8, [sp, #3608]
   27c98:	cmp	x8, #0xc0
   27c9c:	str	x8, [sp, #256]
   27ca0:	b.gt	27d08 <mpfr_atan@@Base+0x5e8>
   27ca4:	sub	x8, x23, #0x1
   27ca8:	cmp	x8, #0x7
   27cac:	b.hi	27d08 <mpfr_atan@@Base+0x5e8>  // b.pmore
   27cb0:	adrp	x11, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   27cb4:	add	x11, x11, #0x140
   27cb8:	adr	x9, 27cd0 <mpfr_atan@@Base+0x5b0>
   27cbc:	ldrh	w10, [x11, x8, lsl #1]
   27cc0:	add	x9, x9, x10, lsl #2
   27cc4:	ldr	x8, [sp, #256]
   27cc8:	neg	x19, x8
   27ccc:	br	x9
   27cd0:	ldr	x9, [sp, #256]
   27cd4:	ldr	x23, [sp, #3632]
   27cd8:	mov	x26, #0xffffffffffffffff    	// #-1
   27cdc:	sub	x8, x9, #0x1
   27ce0:	add	x9, x9, #0x3e
   27ce4:	cmp	x8, #0x0
   27ce8:	csel	x8, x9, x8, lt  // lt = tstop
   27cec:	asr	x9, x8, #6
   27cf0:	add	x2, x9, #0x1
   27cf4:	adrp	x9, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   27cf8:	eor	x8, x26, x8, asr #6
   27cfc:	add	x9, x9, #0x150
   27d00:	add	x8, x9, x8, lsl #3
   27d04:	b	2840c <mpfr_atan@@Base+0xcec>
   27d08:	ldr	x8, [sp, #168]
   27d0c:	ldr	x9, [sp, #136]
   27d10:	add	x0, sp, #0xe08
   27d14:	add	x1, sp, #0xe08
   27d18:	add	x2, sp, #0xe08
   27d1c:	sub	x19, x8, x9
   27d20:	add	x20, x19, #0x1
   27d24:	bl	c090 <__gmpz_mul@plt>
   27d28:	add	x0, sp, #0xe08
   27d2c:	mov	x1, xzr
   27d30:	bl	bb50 <__gmpz_scan1@plt>
   27d34:	cbz	x0, 27d58 <mpfr_atan@@Base+0x638>
   27d38:	mov	x23, x0
   27d3c:	add	x0, sp, #0xe08
   27d40:	add	x1, sp, #0xe08
   27d44:	mov	x2, x23
   27d48:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   27d4c:	ldr	x8, [sp, #40]
   27d50:	sub	x8, x8, x23
   27d54:	b	27d5c <mpfr_atan@@Base+0x63c>
   27d58:	ldr	x8, [sp, #40]
   27d5c:	str	x8, [sp, #280]
   27d60:	add	x8, sp, #0x1d8
   27d64:	add	x0, sp, #0xe08
   27d68:	mov	w1, #0x1                   	// #1
   27d6c:	add	x21, x8, x20, lsl #4
   27d70:	add	x26, x8, x20, lsl #5
   27d74:	str	xzr, [sp, #4280]
   27d78:	bl	cb70 <__gmpz_cmp_ui@plt>
   27d7c:	str	x26, [sp, #208]
   27d80:	str	w25, [sp, #28]
   27d84:	stp	x27, x28, [sp, #8]
   27d88:	str	x20, [sp]
   27d8c:	str	x21, [sp, #176]
   27d90:	cbz	w0, 27ff0 <mpfr_atan@@Base+0x8d0>
   27d94:	add	x1, sp, #0xe08
   27d98:	mov	x0, x21
   27d9c:	bl	c050 <__gmpz_set@plt>
   27da0:	cmp	x19, #0x1
   27da4:	b.lt	27dc8 <mpfr_atan@@Base+0x6a8>  // b.tstop
   27da8:	ldp	x20, x27, [sp, #120]
   27dac:	sub	x1, x27, #0x10
   27db0:	mov	x0, x27
   27db4:	mov	x2, x1
   27db8:	bl	c090 <__gmpz_mul@plt>
   27dbc:	subs	x20, x20, #0x1
   27dc0:	add	x27, x27, #0x10
   27dc4:	b.ne	27dac <mpfr_atan@@Base+0x68c>  // b.any
   27dc8:	mov	x28, xzr
   27dcc:	mov	w24, wzr
   27dd0:	and	x8, x19, #0xffffffff
   27dd4:	mov	w25, #0x1                   	// #1
   27dd8:	str	x8, [sp, #232]
   27ddc:	sxtw	x22, w24
   27de0:	add	x20, x22, #0x1
   27de4:	lsl	x8, x28, #1
   27de8:	add	x27, x26, x20, lsl #4
   27dec:	orr	x1, x8, #0x3
   27df0:	mov	x0, x27
   27df4:	bl	bd60 <__gmpz_set_ui@plt>
   27df8:	add	x21, sp, #0x1d8
   27dfc:	mov	x23, x28
   27e00:	mov	w19, #0x1                   	// #1
   27e04:	add	x28, x21, x20, lsl #4
   27e08:	bfi	x19, x23, #1, #63
   27e0c:	add	x1, sp, #0xe08
   27e10:	mov	x0, x28
   27e14:	mov	x2, x19
   27e18:	bl	c1a0 <__gmpz_mul_ui@plt>
   27e1c:	ldr	x2, [sp, #280]
   27e20:	add	x21, x21, w24, sxtw #4
   27e24:	mov	x0, x21
   27e28:	mov	x1, x27
   27e2c:	bl	c290 <__gmpz_mul_2exp@plt>
   27e30:	mov	x0, x21
   27e34:	mov	x1, x21
   27e38:	mov	x2, x28
   27e3c:	mov	x28, x23
   27e40:	bl	be90 <__gmpz_sub@plt>
   27e44:	add	x0, x26, w24, sxtw #4
   27e48:	mov	x1, x27
   27e4c:	mov	x2, x19
   27e50:	bl	c1a0 <__gmpz_mul_ui@plt>
   27e54:	add	x28, x23, #0x2
   27e58:	add	x8, sp, #0xeb8
   27e5c:	str	x25, [x8, w24, sxtw #3]
   27e60:	tbnz	w28, #1, 27fd4 <mpfr_atan@@Base+0x8b4>
   27e64:	sub	x8, x22, #0x1
   27e68:	str	x8, [sp, #272]
   27e6c:	ldr	x8, [sp, #184]
   27e70:	ldr	x24, [sp, #200]
   27e74:	mov	x9, xzr
   27e78:	mov	w10, wzr
   27e7c:	add	x11, x8, x22, lsl #3
   27e80:	ldr	x8, [sp, #216]
   27e84:	ubfx	x12, x28, #1, #31
   27e88:	lsl	x25, x22, #4
   27e8c:	str	x28, [sp, #248]
   27e90:	add	x20, x8, x22, lsl #3
   27e94:	str	x22, [sp, #224]
   27e98:	ldr	x8, [sp, #264]
   27e9c:	add	x23, sp, #0x1d8
   27ea0:	add	x19, x23, x25
   27ea4:	mov	x0, x19
   27ea8:	add	x28, x8, x25
   27eac:	add	x21, x28, #0x10
   27eb0:	mov	x1, x19
   27eb4:	mov	x2, x21
   27eb8:	stp	x12, x11, [sp, #296]
   27ebc:	str	w10, [sp, #320]
   27ec0:	str	x9, [sp, #288]
   27ec4:	add	x26, x9, #0x1
   27ec8:	bl	c090 <__gmpz_mul@plt>
   27ecc:	add	x23, x23, x24
   27ed0:	add	x2, x23, #0x20
   27ed4:	mov	x0, x19
   27ed8:	mov	x1, x19
   27edc:	bl	c090 <__gmpz_mul@plt>
   27ee0:	sub	x27, x19, #0x10
   27ee4:	add	x28, x28, #0x20
   27ee8:	mov	x0, x27
   27eec:	mov	x1, x27
   27ef0:	mov	x2, x28
   27ef4:	bl	c090 <__gmpz_mul@plt>
   27ef8:	ldr	x22, [sp, #280]
   27efc:	mov	x0, x27
   27f00:	mov	x1, x27
   27f04:	str	x26, [sp, #312]
   27f08:	lsl	x2, x22, x26
   27f0c:	bl	c290 <__gmpz_mul_2exp@plt>
   27f10:	mov	x0, x27
   27f14:	mov	x1, x27
   27f18:	mov	x2, x19
   27f1c:	bl	ca10 <__gmpz_add@plt>
   27f20:	mov	x0, x21
   27f24:	mov	x1, x21
   27f28:	mov	x2, x28
   27f2c:	bl	c090 <__gmpz_mul@plt>
   27f30:	ldr	w8, [x23, #52]
   27f34:	ldr	x12, [sp, #288]
   27f38:	ldr	x10, [x23, #56]
   27f3c:	mov	x11, #0xffffffffffffffff    	// #-1
   27f40:	cmp	w8, #0x0
   27f44:	add	x9, x12, #0x2
   27f48:	cneg	w8, w8, mi  // mi = first
   27f4c:	str	x9, [x20]
   27f50:	add	x10, x10, w8, uxtw #3
   27f54:	ldur	x10, [x10, #-8]
   27f58:	lsl	x9, x22, x9
   27f5c:	eor	x8, x11, x8, lsl #6
   27f60:	ldr	x11, [sp, #304]
   27f64:	clz	x10, x10
   27f68:	add	x9, x9, x10
   27f6c:	ldr	x10, [sp, #272]
   27f70:	add	x8, x8, x9
   27f74:	cmp	x10, x12
   27f78:	b.eq	27f84 <mpfr_atan@@Base+0x864>  // b.none
   27f7c:	ldur	x9, [x11, #-8]
   27f80:	add	x8, x9, x8
   27f84:	ldr	x9, [sp, #256]
   27f88:	ldr	w10, [sp, #320]
   27f8c:	str	x8, [x11], #-8
   27f90:	sub	x25, x25, #0x10
   27f94:	cmp	x8, x9
   27f98:	ldr	x9, [sp, #296]
   27f9c:	sub	x20, x20, #0x8
   27fa0:	csinc	w10, w10, wzr, le
   27fa4:	add	x24, x24, #0x10
   27fa8:	mov	w8, w9
   27fac:	lsr	x12, x9, #1
   27fb0:	ldr	x9, [sp, #312]
   27fb4:	tbz	w8, #1, 27e98 <mpfr_atan@@Base+0x778>
   27fb8:	ldr	x8, [sp, #224]
   27fbc:	ldr	x26, [sp, #208]
   27fc0:	ldr	x28, [sp, #248]
   27fc4:	mov	w25, #0x1                   	// #1
   27fc8:	sub	w8, w8, w9
   27fcc:	add	w24, w8, #0x1
   27fd0:	b	27fdc <mpfr_atan@@Base+0x8bc>
   27fd4:	mov	w10, wzr
   27fd8:	mov	w24, w20
   27fdc:	ldr	x8, [sp, #232]
   27fe0:	lsr	x8, x28, x8
   27fe4:	cbnz	x8, 28154 <mpfr_atan@@Base+0xa34>
   27fe8:	cbz	w10, 27ddc <mpfr_atan@@Base+0x6bc>
   27fec:	b	28154 <mpfr_atan@@Base+0xa34>
   27ff0:	ldr	x9, [sp, #256]
   27ff4:	ldr	x10, [sp, #280]
   27ff8:	mov	w25, #0x1                   	// #1
   27ffc:	lsl	x8, x25, x19
   28000:	udiv	x9, x9, x10
   28004:	cmp	x9, x8
   28008:	csinc	x20, x8, x9, hi  // hi = pmore
   2800c:	cbz	x20, 28510 <mpfr_atan@@Base+0xdf0>
   28010:	mov	x28, xzr
   28014:	mov	w23, wzr
   28018:	str	x20, [sp, #312]
   2801c:	sxtw	x22, w23
   28020:	add	x24, x22, #0x1
   28024:	lsl	x8, x28, #1
   28028:	add	x19, x26, x24, lsl #4
   2802c:	orr	x1, x8, #0x3
   28030:	mov	x0, x19
   28034:	bl	bd60 <__gmpz_set_ui@plt>
   28038:	ldr	x2, [sp, #280]
   2803c:	add	x8, sp, #0x1d8
   28040:	add	x21, x8, w23, sxtw #4
   28044:	mov	x0, x21
   28048:	mov	x1, x19
   2804c:	bl	c290 <__gmpz_mul_2exp@plt>
   28050:	mov	w27, #0x1                   	// #1
   28054:	bfi	x27, x28, #1, #63
   28058:	mov	x0, x21
   2805c:	mov	x1, x21
   28060:	mov	x2, x27
   28064:	bl	bce0 <__gmpz_sub_ui@plt>
   28068:	add	x0, x26, w23, sxtw #4
   2806c:	mov	x1, x19
   28070:	mov	x2, x27
   28074:	bl	c1a0 <__gmpz_mul_ui@plt>
   28078:	add	x28, x28, #0x2
   2807c:	add	x8, sp, #0xeb8
   28080:	str	x25, [x8, w23, sxtw #3]
   28084:	tbnz	w28, #1, 28148 <mpfr_atan@@Base+0xa28>
   28088:	add	x8, sp, #0x1d8
   2808c:	add	x27, x8, x22, lsl #4
   28090:	ldr	x8, [sp, #216]
   28094:	str	x22, [sp, #320]
   28098:	ldr	x20, [sp, #240]
   2809c:	mov	x25, xzr
   280a0:	add	x24, x8, x22, lsl #3
   280a4:	ldr	x22, [sp, #280]
   280a8:	ubfx	x23, x28, #1, #31
   280ac:	str	x28, [sp, #248]
   280b0:	add	x28, x27, x20
   280b4:	add	x19, x28, #0x10
   280b8:	mov	x0, x27
   280bc:	mov	x1, x27
   280c0:	mov	x2, x19
   280c4:	add	x26, x25, #0x1
   280c8:	bl	c090 <__gmpz_mul@plt>
   280cc:	sub	x21, x27, #0x10
   280d0:	add	x28, x28, #0x20
   280d4:	mov	x0, x21
   280d8:	mov	x1, x21
   280dc:	mov	x2, x28
   280e0:	bl	c090 <__gmpz_mul@plt>
   280e4:	lsl	x2, x22, x26
   280e8:	mov	x0, x21
   280ec:	mov	x1, x21
   280f0:	bl	c290 <__gmpz_mul_2exp@plt>
   280f4:	mov	x0, x21
   280f8:	mov	x1, x21
   280fc:	mov	x2, x27
   28100:	bl	ca10 <__gmpz_add@plt>
   28104:	mov	x0, x19
   28108:	mov	x1, x19
   2810c:	mov	x2, x28
   28110:	bl	c090 <__gmpz_mul@plt>
   28114:	add	x8, x25, #0x2
   28118:	mov	w9, w23
   2811c:	lsr	x23, x23, #1
   28120:	str	x8, [x24], #-8
   28124:	mov	x25, x26
   28128:	mov	x27, x21
   2812c:	tbz	w9, #1, 280b0 <mpfr_atan@@Base+0x990>
   28130:	ldp	x20, x8, [sp, #312]
   28134:	ldr	x26, [sp, #208]
   28138:	ldr	x28, [sp, #248]
   2813c:	sub	w8, w8, w25
   28140:	add	w24, w8, #0x1
   28144:	mov	w25, #0x1                   	// #1
   28148:	cmp	x20, x28
   2814c:	mov	w23, w24
   28150:	b.hi	2801c <mpfr_atan@@Base+0x8fc>  // b.pmore
   28154:	cmp	w24, #0x2
   28158:	b.lt	28238 <mpfr_atan@@Base+0xb18>  // b.tstop
   2815c:	mov	w8, w24
   28160:	add	x22, x8, #0x1
   28164:	ldr	x8, [sp, #216]
   28168:	add	x9, sp, #0x1d8
   2816c:	add	x19, x9, w24, uxtw #4
   28170:	mov	x20, xzr
   28174:	add	x23, x8, w24, uxtw #3
   28178:	ldr	w24, [sp, #148]
   2817c:	ldr	x8, [sp, #240]
   28180:	str	x28, [sp, #248]
   28184:	sub	x27, x19, #0x10
   28188:	add	x28, x19, x8
   2818c:	mov	x0, x27
   28190:	mov	x1, x27
   28194:	mov	x2, x28
   28198:	bl	c090 <__gmpz_mul@plt>
   2819c:	add	x0, sp, #0xe08
   281a0:	mov	w1, #0x1                   	// #1
   281a4:	bl	cb70 <__gmpz_cmp_ui@plt>
   281a8:	cbz	w0, 281c4 <mpfr_atan@@Base+0xaa4>
   281ac:	ldur	x8, [x23, #-8]
   281b0:	ldr	x9, [sp, #176]
   281b4:	mov	x0, x27
   281b8:	mov	x1, x27
   281bc:	add	x2, x9, x8, lsl #4
   281c0:	bl	c090 <__gmpz_mul@plt>
   281c4:	sub	x19, x19, #0x20
   281c8:	add	x21, x28, #0x10
   281cc:	mov	x0, x19
   281d0:	mov	x1, x19
   281d4:	mov	x2, x21
   281d8:	bl	c090 <__gmpz_mul@plt>
   281dc:	ldr	x8, [x23], #-8
   281e0:	mov	x0, x19
   281e4:	mov	x1, x19
   281e8:	lsl	x8, x25, x8
   281ec:	add	x20, x8, x20
   281f0:	ldr	x8, [sp, #280]
   281f4:	mul	x2, x20, x8
   281f8:	bl	c290 <__gmpz_mul_2exp@plt>
   281fc:	mov	x0, x19
   28200:	mov	x1, x19
   28204:	mov	x2, x27
   28208:	bl	ca10 <__gmpz_add@plt>
   2820c:	mov	x0, x28
   28210:	mov	x1, x28
   28214:	mov	x2, x21
   28218:	bl	c090 <__gmpz_mul@plt>
   2821c:	ldr	x8, [sp, #240]
   28220:	sub	x22, x22, #0x1
   28224:	cmp	x22, #0x2
   28228:	mov	x19, x27
   2822c:	b.gt	28184 <mpfr_atan@@Base+0xa64>
   28230:	ldr	x28, [sp, #248]
   28234:	b	2823c <mpfr_atan@@Base+0xb1c>
   28238:	ldr	w24, [sp, #148]
   2823c:	ldr	w8, [sp, #476]
   28240:	ldr	x9, [sp, #480]
   28244:	ldr	x21, [sp, #152]
   28248:	cmp	w8, #0x0
   2824c:	cneg	w8, w8, mi  // mi = first
   28250:	add	x9, x9, w8, uxtw #3
   28254:	ldur	x9, [x9, #-8]
   28258:	lsl	x8, x8, #6
   2825c:	clz	x9, x9
   28260:	sub	x8, x8, x9
   28264:	ldr	x9, [sp, #256]
   28268:	subs	x19, x8, x9, lsl #1
   2826c:	ldr	x8, [sp]
   28270:	lsl	x20, x8, #1
   28274:	b.mi	2828c <mpfr_atan@@Base+0xb6c>  // b.first
   28278:	add	x0, sp, #0x1d8
   2827c:	add	x1, sp, #0x1d8
   28280:	mov	x2, x19
   28284:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   28288:	b	2829c <mpfr_atan@@Base+0xb7c>
   2828c:	neg	x2, x19
   28290:	add	x0, sp, #0x1d8
   28294:	add	x1, sp, #0x1d8
   28298:	bl	c290 <__gmpz_mul_2exp@plt>
   2829c:	add	x8, sp, #0x1d8
   282a0:	add	x8, x8, x20, lsl #4
   282a4:	ldr	w9, [x8, #4]
   282a8:	ldr	x8, [x8, #8]
   282ac:	mov	w22, #0x1                   	// #1
   282b0:	cmp	w9, #0x0
   282b4:	cneg	w9, w9, mi  // mi = first
   282b8:	add	x8, x8, w9, uxtw #3
   282bc:	ldur	x8, [x8, #-8]
   282c0:	lsl	x9, x9, #6
   282c4:	clz	x8, x8
   282c8:	sub	x8, x9, x8
   282cc:	ldr	x9, [sp, #256]
   282d0:	subs	x27, x8, x9
   282d4:	b.mi	282f0 <mpfr_atan@@Base+0xbd0>  // b.first
   282d8:	ldr	x23, [sp, #208]
   282dc:	mov	x2, x27
   282e0:	mov	x0, x23
   282e4:	mov	x1, x23
   282e8:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   282ec:	b	28304 <mpfr_atan@@Base+0xbe4>
   282f0:	ldr	x23, [sp, #208]
   282f4:	neg	x2, x27
   282f8:	mov	x0, x23
   282fc:	mov	x1, x23
   28300:	bl	c290 <__gmpz_mul_2exp@plt>
   28304:	add	x0, sp, #0x1d8
   28308:	add	x1, sp, #0x1d8
   2830c:	mov	x2, x23
   28310:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   28314:	bl	bbe0 <__gmpz_tdiv_q@plt>
   28318:	add	x0, sp, #0xe18
   2831c:	add	x1, sp, #0x1d8
   28320:	mov	w2, #0x3                   	// #3
   28324:	bl	c2b0 <mpfr_set_z@plt>
   28328:	ldr	x10, [sp, #280]
   2832c:	sub	w9, w28, #0x1
   28330:	sxtw	x9, w9
   28334:	ldr	x8, [sp, #3624]
   28338:	msub	x9, x9, x10, x19
   2833c:	sub	x9, x9, x27
   28340:	ldr	w25, [sp, #28]
   28344:	ldp	x27, x28, [sp, #8]
   28348:	add	x8, x9, x8
   2834c:	b	2842c <mpfr_atan@@Base+0xd0c>
   28350:	ldr	x9, [sp, #256]
   28354:	ldr	x23, [sp, #3632]
   28358:	mov	x26, #0xffffffffffffffff    	// #-1
   2835c:	sub	x8, x9, #0x1
   28360:	add	x9, x9, #0x3e
   28364:	cmp	x8, #0x0
   28368:	csel	x8, x9, x8, lt  // lt = tstop
   2836c:	asr	x9, x8, #6
   28370:	add	x2, x9, #0x1
   28374:	adrp	x9, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28378:	eor	x8, x26, x8, asr #6
   2837c:	add	x9, x9, #0x150
   28380:	add	x8, x9, x8, lsl #3
   28384:	add	x1, x8, #0x30
   28388:	b	28410 <mpfr_atan@@Base+0xcf0>
   2838c:	ldr	x8, [sp, #3600]
   28390:	ldr	w9, [sp, #3596]
   28394:	ldr	x11, [sp, #256]
   28398:	ldr	x23, [sp, #3632]
   2839c:	ldr	x8, [x8]
   283a0:	cmp	w9, #0x0
   283a4:	sub	x10, x11, #0x1
   283a8:	add	x11, x11, #0x3e
   283ac:	csinc	x8, x22, x8, eq  // eq = none
   283b0:	b	283e0 <mpfr_atan@@Base+0xcc0>
   283b4:	ldr	x8, [sp, #3600]
   283b8:	ldr	w9, [sp, #3596]
   283bc:	ldr	x11, [sp, #256]
   283c0:	ldr	x23, [sp, #3632]
   283c4:	ldr	x8, [x8]
   283c8:	cmp	w9, #0x0
   283cc:	mov	w9, #0x4                   	// #4
   283d0:	sub	x10, x11, #0x1
   283d4:	add	x8, x8, #0x4
   283d8:	add	x11, x11, #0x3e
   283dc:	csel	x8, x9, x8, eq  // eq = none
   283e0:	cmp	x10, #0x0
   283e4:	csel	x9, x11, x10, lt  // lt = tstop
   283e8:	adrp	x11, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   283ec:	mov	w10, #0x18                  	// #24
   283f0:	add	x11, x11, #0x150
   283f4:	mov	x26, #0xffffffffffffffff    	// #-1
   283f8:	madd	x8, x8, x10, x11
   283fc:	asr	x10, x9, #6
   28400:	eor	x9, x26, x9, asr #6
   28404:	add	x2, x10, #0x1
   28408:	add	x8, x8, x9, lsl #3
   2840c:	add	x1, x8, #0x18
   28410:	mov	x0, x23
   28414:	bl	c570 <__gmpn_copyi@plt>
   28418:	ldr	x9, [x23]
   2841c:	lsl	x10, x26, x19
   28420:	mov	x8, xzr
   28424:	and	x9, x9, x10
   28428:	str	x9, [x23]
   2842c:	add	x0, sp, #0xe18
   28430:	add	x1, sp, #0xe18
   28434:	add	x2, sp, #0xe38
   28438:	mov	w3, wzr
   2843c:	str	x8, [sp, #3624]
   28440:	bl	be00 <mpfr_mul@plt>
   28444:	add	x0, sp, #0xe78
   28448:	add	x1, sp, #0xe78
   2844c:	add	x2, sp, #0xe18
   28450:	mov	w3, wzr
   28454:	bl	c240 <mpfr_add@plt>
   28458:	add	x0, sp, #0xe18
   2845c:	add	x1, sp, #0xe58
   28460:	add	x2, sp, #0xe38
   28464:	mov	w3, wzr
   28468:	bl	bc20 <mpfr_sub@plt>
   2846c:	add	x0, sp, #0xe58
   28470:	add	x1, sp, #0xe58
   28474:	add	x2, sp, #0xe38
   28478:	mov	w3, wzr
   2847c:	bl	be00 <mpfr_mul@plt>
   28480:	add	x0, sp, #0xe58
   28484:	add	x1, sp, #0xe58
   28488:	mov	w2, #0x1                   	// #1
   2848c:	mov	w3, wzr
   28490:	bl	c2d0 <mpfr_add_ui@plt>
   28494:	add	x0, sp, #0xe58
   28498:	add	x1, sp, #0xe18
   2849c:	add	x2, sp, #0xe58
   284a0:	mov	w3, wzr
   284a4:	bl	c670 <mpfr_div@plt>
   284a8:	ldr	x19, [sp, #168]
   284ac:	ldr	x11, [sp, #40]
   284b0:	ldr	x9, [sp, #136]
   284b4:	add	x9, x9, #0x1
   284b8:	cmp	x9, x19
   284bc:	b.cs	28530 <mpfr_atan@@Base+0xe10>  // b.hs, b.nlast
   284c0:	ldr	x10, [sp, #120]
   284c4:	ldr	x8, [sp, #3688]
   284c8:	mov	x23, x11
   284cc:	sub	x10, x10, #0x1
   284d0:	str	x10, [sp, #120]
   284d4:	ldr	x10, [sp, #128]
   284d8:	cmp	x8, x20
   284dc:	ldr	x8, [sp, #240]
   284e0:	sub	x10, x10, #0x10
   284e4:	str	x10, [sp, #128]
   284e8:	ldr	x10, [sp, #264]
   284ec:	sub	x8, x8, #0x20
   284f0:	str	x8, [sp, #240]
   284f4:	sub	x10, x10, #0x20
   284f8:	str	x10, [sp, #264]
   284fc:	ldr	x10, [sp, #200]
   28500:	sub	x10, x10, #0x10
   28504:	str	x10, [sp, #200]
   28508:	b.ne	27c18 <mpfr_atan@@Base+0x4f8>  // b.any
   2850c:	b	28530 <mpfr_atan@@Base+0xe10>
   28510:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28514:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28518:	mov	w1, #0xda                  	// #218
   2851c:	add	x0, x0, #0x330
   28520:	add	x2, x2, #0x3c4
   28524:	bl	cb90 <mpfr_assert_fail@plt>
   28528:	mov	x28, xzr
   2852c:	b	2823c <mpfr_atan@@Base+0xb1c>
   28530:	add	x0, sp, #0xe78
   28534:	add	x1, sp, #0xe78
   28538:	add	x2, sp, #0xe58
   2853c:	mov	w3, wzr
   28540:	bl	c240 <mpfr_add@plt>
   28544:	ldr	x2, [sp, #112]
   28548:	add	x0, sp, #0xe78
   2854c:	add	x1, sp, #0xe78
   28550:	mov	w3, wzr
   28554:	bl	c320 <mpfr_mul_2ui@plt>
   28558:	cmp	w24, #0x1
   2855c:	b.lt	285a8 <mpfr_atan@@Base+0xe88>  // b.tstop
   28560:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28564:	ldr	x1, [x0, #2704]
   28568:	add	x0, x0, #0xa90
   2856c:	blr	x1
   28570:	add	x1, x27, x0
   28574:	add	x0, sp, #0xe38
   28578:	mov	w2, wzr
   2857c:	bl	c3e0 <mpfr_cache@plt>
   28580:	add	x0, sp, #0xe38
   28584:	add	x1, sp, #0xe38
   28588:	mov	w2, #0x1                   	// #1
   2858c:	mov	w3, wzr
   28590:	bl	c950 <mpfr_div_2ui@plt>
   28594:	add	x0, sp, #0xe78
   28598:	add	x1, sp, #0xe38
   2859c:	add	x2, sp, #0xe78
   285a0:	mov	w3, wzr
   285a4:	bl	bc20 <mpfr_sub@plt>
   285a8:	ldr	x8, [sp, #3720]
   285ac:	mov	x9, #0xfffffffffffffeff    	// #-257
   285b0:	ldr	x20, [sp, #160]
   285b4:	movk	x9, #0x7fff, lsl #48
   285b8:	add	x9, x9, #0x105
   285bc:	cmp	x8, x9
   285c0:	str	w22, [sp, #3712]
   285c4:	b.lt	28608 <mpfr_atan@@Base+0xee8>  // b.tstop
   285c8:	ldp	x11, x9, [sp, #96]
   285cc:	ldr	x8, [sp, #3704]
   285d0:	ldr	x10, [x28]
   285d4:	ldr	x0, [sp, #3728]
   285d8:	add	x9, x9, x21
   285dc:	sub	x2, x9, x11
   285e0:	sub	x9, x8, #0x1
   285e4:	add	x8, x8, #0x3e
   285e8:	cmp	x9, #0x0
   285ec:	csel	x8, x8, x9, lt  // lt = tstop
   285f0:	asr	x8, x8, #6
   285f4:	add	x1, x8, #0x1
   285f8:	ldr	x8, [sp, #56]
   285fc:	add	x3, x10, x8
   28600:	bl	c3d0 <mpfr_round_p@plt>
   28604:	cbnz	w0, 286dc <mpfr_atan@@Base+0xfbc>
   28608:	ldr	x19, [sp, #32]
   2860c:	mov	x8, #0xfffffffffffffeff    	// #-257
   28610:	movk	x8, #0x7fff, lsl #48
   28614:	sub	x8, x8, x21
   28618:	cmp	x19, x8
   2861c:	b.gt	286c0 <mpfr_atan@@Base+0xfa0>
   28620:	add	x21, x21, x19
   28624:	cmp	x21, #0x0
   28628:	cinc	x8, x21, lt  // lt = tstop
   2862c:	asr	x22, x8, #1
   28630:	mov	w19, w20
   28634:	mov	w15, #0x40                  	// #64
   28638:	mov	w16, #0x2                   	// #2
   2863c:	b	27938 <mpfr_atan@@Base+0x218>
   28640:	str	xzr, [sp, #168]
   28644:	str	wzr, [sp, #196]
   28648:	mov	x21, #0xffffffffffffffff    	// #-1
   2864c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28650:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28654:	mov	w1, #0x178                 	// #376
   28658:	add	x0, x0, #0x330
   2865c:	add	x2, x2, #0x36d
   28660:	bl	cb90 <mpfr_assert_fail@plt>
   28664:	mov	w15, #0x40                  	// #64
   28668:	b	27988 <mpfr_atan@@Base+0x268>
   2866c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28670:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28674:	mov	w1, #0x176                 	// #374
   28678:	add	x0, x0, #0x330
   2867c:	add	x2, x2, #0x352
   28680:	bl	cb90 <mpfr_assert_fail@plt>
   28684:	mov	w15, #0x40                  	// #64
   28688:	b	27960 <mpfr_atan@@Base+0x240>
   2868c:	mov	x22, xzr
   28690:	str	w8, [sp, #196]
   28694:	b	2799c <mpfr_atan@@Base+0x27c>
   28698:	mov	w8, wzr
   2869c:	b	279c4 <mpfr_atan@@Base+0x2a4>
   286a0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   286a4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   286a8:	mov	w1, #0x17f                 	// #383
   286ac:	add	x0, x0, #0x330
   286b0:	add	x2, x2, #0x90d
   286b4:	bl	cb90 <mpfr_assert_fail@plt>
   286b8:	mov	w15, #0x40                  	// #64
   286bc:	b	279b8 <mpfr_atan@@Base+0x298>
   286c0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   286c4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   286c8:	mov	w1, #0x1f6                 	// #502
   286cc:	add	x0, x0, #0x330
   286d0:	add	x2, x2, #0x37a
   286d4:	bl	cb90 <mpfr_assert_fail@plt>
   286d8:	b	28620 <mpfr_atan@@Base+0xf00>
   286dc:	ldr	x8, [sp, #64]
   286e0:	add	x1, sp, #0xe78
   286e4:	mov	x0, x28
   286e8:	mov	w2, w25
   286ec:	ldr	w3, [x8, #8]
   286f0:	bl	c6f0 <mpfr_set4@plt>
   286f4:	ldr	w8, [sp, #196]
   286f8:	mov	w19, w0
   286fc:	cmn	w8, #0x2
   28700:	b.lt	2871c <mpfr_atan@@Base+0xffc>  // b.tstop
   28704:	add	x21, sp, #0x1d8
   28708:	mov	x0, x21
   2870c:	bl	c210 <mpfr_mpz_clear@plt>
   28710:	subs	x20, x20, #0x1
   28714:	add	x21, x21, #0x10
   28718:	b.ne	28708 <mpfr_atan@@Base+0xfe8>  // b.any
   2871c:	add	x0, sp, #0xe08
   28720:	bl	c210 <mpfr_mpz_clear@plt>
   28724:	ldr	x1, [sp, #328]
   28728:	cbz	x1, 28734 <mpfr_atan@@Base+0x1014>
   2872c:	ldr	x0, [sp, #336]
   28730:	bl	cc80 <mpfr_free_func@plt>
   28734:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28738:	ldr	x1, [x0, #2656]
   2873c:	add	x0, x0, #0xa60
   28740:	blr	x1
   28744:	ldr	w9, [sp, #92]
   28748:	str	w9, [x27, x0]
   2874c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28750:	ldr	x1, [x0, #2592]
   28754:	add	x0, x0, #0xa20
   28758:	blr	x1
   2875c:	ldr	x10, [sp, #80]
   28760:	str	x10, [x27, x0]
   28764:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28768:	ldr	x1, [x0, #2624]
   2876c:	add	x0, x0, #0xa40
   28770:	blr	x1
   28774:	ldr	x11, [sp, #72]
   28778:	str	x11, [x27, x0]
   2877c:	ldr	x8, [x28, #16]
   28780:	cmp	x8, x11
   28784:	b.gt	28a58 <mpfr_atan@@Base+0x1338>
   28788:	cmp	x8, x10
   2878c:	b.lt	28a58 <mpfr_atan@@Base+0x1338>  // b.tstop
   28790:	cbz	w19, 287ac <mpfr_atan@@Base+0x108c>
   28794:	orr	w8, w9, #0x8
   28798:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2879c:	ldr	x1, [x0, #2656]
   287a0:	add	x0, x0, #0xa60
   287a4:	blr	x1
   287a8:	str	w8, [x27, x0]
   287ac:	mov	w0, w19
   287b0:	add	sp, sp, #0x1, lsl #12
   287b4:	add	sp, sp, #0x2c0
   287b8:	ldp	x20, x19, [sp, #80]
   287bc:	ldp	x22, x21, [sp, #64]
   287c0:	ldp	x24, x23, [sp, #48]
   287c4:	ldp	x26, x25, [sp, #32]
   287c8:	ldp	x28, x27, [sp, #16]
   287cc:	ldp	x29, x30, [sp], #96
   287d0:	ret
   287d4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   287d8:	cmp	x8, x9
   287dc:	b.eq	28898 <mpfr_atan@@Base+0x1178>  // b.none
   287e0:	mov	x9, #0x2                   	// #2
   287e4:	movk	x9, #0x8000, lsl #48
   287e8:	cmp	x8, x9
   287ec:	b.ne	28920 <mpfr_atan@@Base+0x1200>  // b.any
   287f0:	mov	x8, #0xfffffffffffffeff    	// #-257
   287f4:	movk	x8, #0x7fff, lsl #48
   287f8:	add	x8, x8, #0x103
   287fc:	str	x8, [x28, #16]
   28800:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28804:	ldr	x1, [x0, #2656]
   28808:	add	x0, x0, #0xa60
   2880c:	blr	x1
   28810:	mrs	x8, tpidr_el0
   28814:	ldr	w9, [x8, x0]
   28818:	mov	w19, wzr
   2881c:	orr	w9, w9, #0x4
   28820:	str	w9, [x8, x0]
   28824:	b	287ac <mpfr_atan@@Base+0x108c>
   28828:	ldr	x8, [sp, #64]
   2882c:	mov	w2, w25
   28830:	ldr	w20, [x8, #8]
   28834:	cmp	w20, #0x0
   28838:	b.gt	28944 <mpfr_atan@@Base+0x1224>
   2883c:	cmp	w25, #0x2
   28840:	b.ne	28938 <mpfr_atan@@Base+0x1218>  // b.any
   28844:	mov	w2, #0x3                   	// #3
   28848:	b	28944 <mpfr_atan@@Base+0x1224>
   2884c:	mov	x8, xzr
   28850:	b	27840 <mpfr_atan@@Base+0x120>
   28854:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   28858:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2885c:	add	x0, x0, #0x330
   28860:	add	x2, x2, #0x337
   28864:	mov	w1, #0x166                 	// #358
   28868:	bl	cb90 <mpfr_assert_fail@plt>
   2886c:	ldr	x8, [x28]
   28870:	b	27830 <mpfr_atan@@Base+0x110>
   28874:	mov	x0, x28
   28878:	mov	x1, x24
   2887c:	mov	w3, wzr
   28880:	mov	w4, w25
   28884:	bl	c590 <mpfr_round_near_x@plt>
   28888:	mov	w19, w0
   2888c:	cbnz	w0, 287ac <mpfr_atan@@Base+0x108c>
   28890:	ldr	x8, [x24, #16]
   28894:	b	27784 <mpfr_atan@@Base+0x64>
   28898:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2889c:	ldr	x1, [x0, #2656]
   288a0:	add	x0, x0, #0xa60
   288a4:	blr	x1
   288a8:	mrs	x20, tpidr_el0
   288ac:	ldr	w21, [x20, x0]
   288b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   288b4:	ldr	x1, [x0, #2592]
   288b8:	add	x0, x0, #0xa20
   288bc:	blr	x1
   288c0:	ldr	x22, [x20, x0]
   288c4:	mov	x8, x0
   288c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   288cc:	ldr	x1, [x0, #2624]
   288d0:	add	x0, x0, #0xa40
   288d4:	blr	x1
   288d8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   288dc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   288e0:	ldr	x23, [x20, x0]
   288e4:	str	x9, [x20, x8]
   288e8:	str	x10, [x20, x0]
   288ec:	ldr	w8, [x24, #8]
   288f0:	cmp	w8, #0x1
   288f4:	b.lt	28990 <mpfr_atan@@Base+0x1270>  // b.tstop
   288f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   288fc:	ldr	x1, [x0, #2704]
   28900:	add	x0, x0, #0xa90
   28904:	blr	x1
   28908:	add	x1, x20, x0
   2890c:	mov	x0, x28
   28910:	mov	w2, w25
   28914:	bl	c3e0 <mpfr_cache@plt>
   28918:	mov	w19, w0
   2891c:	b	289d4 <mpfr_atan@@Base+0x12b4>
   28920:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   28924:	str	x8, [x28, #16]
   28928:	ldr	w8, [x24, #8]
   2892c:	mov	w19, wzr
   28930:	str	w8, [x28, #8]
   28934:	b	287ac <mpfr_atan@@Base+0x108c>
   28938:	cmp	w25, #0x3
   2893c:	mov	w8, #0x2                   	// #2
   28940:	csel	w2, w8, w25, eq  // eq = none
   28944:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28948:	ldr	x1, [x0, #2704]
   2894c:	add	x0, x0, #0xa90
   28950:	blr	x1
   28954:	add	x1, x27, x0
   28958:	mov	x0, x28
   2895c:	bl	c3e0 <mpfr_cache@plt>
   28960:	mov	w19, w0
   28964:	tbz	w20, #31, 28978 <mpfr_atan@@Base+0x1258>
   28968:	ldr	w8, [x28, #8]
   2896c:	neg	w19, w19
   28970:	neg	w8, w8
   28974:	str	w8, [x28, #8]
   28978:	mov	w2, #0x2                   	// #2
   2897c:	mov	x0, x28
   28980:	mov	x1, x28
   28984:	mov	w3, w25
   28988:	bl	c950 <mpfr_div_2ui@plt>
   2898c:	b	28734 <mpfr_atan@@Base+0x1014>
   28990:	cmp	w25, #0x3
   28994:	mov	w8, #0x2                   	// #2
   28998:	csel	w8, w8, w25, eq  // eq = none
   2899c:	cmp	w25, #0x2
   289a0:	mov	w9, #0x3                   	// #3
   289a4:	csel	w2, w9, w8, eq  // eq = none
   289a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   289ac:	ldr	x1, [x0, #2704]
   289b0:	add	x0, x0, #0xa90
   289b4:	blr	x1
   289b8:	add	x1, x20, x0
   289bc:	mov	x0, x28
   289c0:	bl	c3e0 <mpfr_cache@plt>
   289c4:	ldr	w8, [x28, #8]
   289c8:	neg	w19, w0
   289cc:	neg	w8, w8
   289d0:	str	w8, [x28, #8]
   289d4:	mov	w2, #0x1                   	// #1
   289d8:	mov	x0, x28
   289dc:	mov	x1, x28
   289e0:	mov	w3, w25
   289e4:	bl	c950 <mpfr_div_2ui@plt>
   289e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   289ec:	ldr	x1, [x0, #2656]
   289f0:	add	x0, x0, #0xa60
   289f4:	blr	x1
   289f8:	str	w21, [x20, x0]
   289fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28a00:	ldr	x1, [x0, #2592]
   28a04:	add	x0, x0, #0xa20
   28a08:	blr	x1
   28a0c:	str	x22, [x20, x0]
   28a10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28a14:	ldr	x1, [x0, #2624]
   28a18:	add	x0, x0, #0xa40
   28a1c:	blr	x1
   28a20:	str	x23, [x20, x0]
   28a24:	ldr	x8, [x28, #16]
   28a28:	cmp	x8, x23
   28a2c:	b.gt	28a58 <mpfr_atan@@Base+0x1338>
   28a30:	cmp	x8, x22
   28a34:	b.lt	28a58 <mpfr_atan@@Base+0x1338>  // b.tstop
   28a38:	cbz	w19, 287ac <mpfr_atan@@Base+0x108c>
   28a3c:	orr	w8, w21, #0x8
   28a40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   28a44:	ldr	x1, [x0, #2656]
   28a48:	add	x0, x0, #0xa60
   28a4c:	blr	x1
   28a50:	str	w8, [x20, x0]
   28a54:	b	287ac <mpfr_atan@@Base+0x108c>
   28a58:	mov	x0, x28
   28a5c:	mov	w1, w19
   28a60:	mov	w2, w25
   28a64:	bl	cb80 <mpfr_check_range@plt>
   28a68:	mov	w19, w0
   28a6c:	b	287ac <mpfr_atan@@Base+0x108c>
   28a70:	bl	c940 <mpfr_abort_prec_max@plt>

0000000000028a74 <mpfr_cmp2@@Base>:
   28a74:	sub	sp, sp, #0x70
   28a78:	stp	x29, x30, [sp, #16]
   28a7c:	stp	x26, x25, [sp, #48]
   28a80:	stp	x24, x23, [sp, #64]
   28a84:	stp	x22, x21, [sp, #80]
   28a88:	stp	x20, x19, [sp, #96]
   28a8c:	str	xzr, [sp, #8]
   28a90:	ldr	x8, [x0, #16]
   28a94:	mov	x9, #0x4                   	// #4
   28a98:	movk	x9, #0x8000, lsl #48
   28a9c:	mov	x19, x2
   28aa0:	mov	x20, x0
   28aa4:	cmp	x8, x9
   28aa8:	mov	x22, x1
   28aac:	str	x27, [sp, #32]
   28ab0:	add	x29, sp, #0x10
   28ab4:	b.eq	28b88 <mpfr_cmp2@@Base+0x114>  // b.none
   28ab8:	ldr	x10, [x22, #16]
   28abc:	cmp	x10, x9
   28ac0:	b.eq	28b88 <mpfr_cmp2@@Base+0x114>  // b.none
   28ac4:	sub	x21, x8, x10
   28ac8:	tbnz	x21, #63, 28b9c <mpfr_cmp2@@Base+0x128>
   28acc:	ldr	x8, [x20]
   28ad0:	ldr	x9, [x22]
   28ad4:	ldr	x23, [x20, #24]
   28ad8:	ldr	x22, [x22, #24]
   28adc:	sub	x10, x8, #0x1
   28ae0:	add	x8, x8, #0x3e
   28ae4:	sub	x11, x9, #0x1
   28ae8:	cmp	x10, #0x0
   28aec:	add	x9, x9, #0x3e
   28af0:	csel	x8, x8, x10, lt  // lt = tstop
   28af4:	cmp	x11, #0x0
   28af8:	csel	x9, x9, x11, lt  // lt = tstop
   28afc:	asr	x8, x8, #6
   28b00:	asr	x25, x9, #6
   28b04:	cbz	x21, 28b10 <mpfr_cmp2@@Base+0x9c>
   28b08:	mov	w20, #0x1                   	// #1
   28b0c:	b	28bdc <mpfr_cmp2@@Base+0x168>
   28b10:	mov	x24, xzr
   28b14:	orr	x9, x25, x8
   28b18:	tbnz	x9, #63, 28b40 <mpfr_cmp2@@Base+0xcc>
   28b1c:	ldr	x9, [x23, x8, lsl #3]
   28b20:	ldr	x10, [x22, x25, lsl #3]
   28b24:	cmp	x9, x10
   28b28:	b.ne	28b40 <mpfr_cmp2@@Base+0xcc>  // b.any
   28b2c:	sub	x8, x8, #0x1
   28b30:	sub	x25, x25, #0x1
   28b34:	orr	x9, x25, x8
   28b38:	add	x24, x24, #0x40
   28b3c:	tbz	x9, #63, 28b1c <mpfr_cmp2@@Base+0xa8>
   28b40:	tbnz	x8, #63, 28dc4 <mpfr_cmp2@@Base+0x350>
   28b44:	ldr	x9, [x23, x8, lsl #3]
   28b48:	tbnz	x25, #63, 28dd0 <mpfr_cmp2@@Base+0x35c>
   28b4c:	ldr	x10, [x22, x25, lsl #3]
   28b50:	mov	x21, xzr
   28b54:	mov	x26, xzr
   28b58:	cmp	x9, x10
   28b5c:	csel	x10, x25, x8, cc  // cc = lo, ul, last
   28b60:	csel	x25, x8, x25, cc  // cc = lo, ul, last
   28b64:	csel	x11, x23, x22, cc  // cc = lo, ul, last
   28b68:	ldr	x9, [x11, x25, lsl #3]
   28b6c:	mov	w8, #0xffffffff            	// #-1
   28b70:	cneg	w20, w8, cs  // cs = hs, nlast
   28b74:	csel	x23, x22, x23, cc  // cc = lo, ul, last
   28b78:	str	x9, [sp, #8]
   28b7c:	mov	x8, x10
   28b80:	mov	x22, x11
   28b84:	b	28c00 <mpfr_cmp2@@Base+0x18c>
   28b88:	mov	x0, x20
   28b8c:	mov	x1, x22
   28b90:	bl	cb50 <mpfr_ubf_diff_exp@plt>
   28b94:	mov	x21, x0
   28b98:	tbz	x21, #63, 28acc <mpfr_cmp2@@Base+0x58>
   28b9c:	ldr	x8, [x22]
   28ba0:	ldr	x9, [x20]
   28ba4:	ldr	x23, [x22, #24]
   28ba8:	ldr	x22, [x20, #24]
   28bac:	sub	x10, x8, #0x1
   28bb0:	add	x8, x8, #0x3e
   28bb4:	cmp	x10, #0x0
   28bb8:	csel	x8, x8, x10, lt  // lt = tstop
   28bbc:	sub	x10, x9, #0x1
   28bc0:	add	x9, x9, #0x3e
   28bc4:	cmp	x10, #0x0
   28bc8:	csel	x9, x9, x10, lt  // lt = tstop
   28bcc:	neg	x21, x21
   28bd0:	asr	x8, x8, #6
   28bd4:	asr	x25, x9, #6
   28bd8:	mov	w20, #0xffffffff            	// #-1
   28bdc:	cmp	x21, #0x3f
   28be0:	b.hi	28cf8 <mpfr_cmp2@@Base+0x284>  // b.pmore
   28be4:	ldr	x9, [x22, x25, lsl #3]
   28be8:	neg	x11, x21
   28bec:	mov	x24, xzr
   28bf0:	lsr	x9, x9, x21
   28bf4:	str	x9, [sp, #8]
   28bf8:	ldr	x10, [x22, x25, lsl #3]
   28bfc:	lsl	x26, x10, x11
   28c00:	sub	x25, x25, #0x1
   28c04:	ldr	x10, [x23, x8, lsl #3]
   28c08:	cmp	x25, #0x0
   28c0c:	cset	w11, ge  // ge = tcont
   28c10:	cmp	x26, #0x0
   28c14:	sub	x10, x10, x9
   28c18:	cset	w12, ne  // ne = any
   28c1c:	cmp	x10, #0x1
   28c20:	sub	x27, x8, #0x1
   28c24:	str	x10, [sp]
   28c28:	b.ne	28c34 <mpfr_cmp2@@Base+0x1c0>  // b.any
   28c2c:	orr	w8, w11, w12
   28c30:	cbnz	w8, 28d0c <mpfr_cmp2@@Base+0x298>
   28c34:	clz	x8, x10
   28c38:	mov	w9, #0x3f                  	// #63
   28c3c:	sub	w9, w9, w8
   28c40:	mov	w11, #0x1                   	// #1
   28c44:	lsl	x9, x11, x9
   28c48:	cmp	x10, x9
   28c4c:	add	x9, x8, x24
   28c50:	b.eq	28c7c <mpfr_cmp2@@Base+0x208>  // b.none
   28c54:	str	x9, [x19]
   28c58:	mov	w0, w20
   28c5c:	ldp	x20, x19, [sp, #96]
   28c60:	ldp	x22, x21, [sp, #80]
   28c64:	ldp	x24, x23, [sp, #64]
   28c68:	ldp	x26, x25, [sp, #48]
   28c6c:	ldr	x27, [sp, #32]
   28c70:	ldp	x29, x30, [sp, #16]
   28c74:	add	sp, sp, #0x70
   28c78:	ret
   28c7c:	mov	x8, x25
   28c80:	tbnz	x27, #63, 28cec <mpfr_cmp2@@Base+0x278>
   28c84:	tbz	x8, #63, 28c8c <mpfr_cmp2@@Base+0x218>
   28c88:	cbz	x26, 28c54 <mpfr_cmp2@@Base+0x1e0>
   28c8c:	subs	x11, x21, #0x40
   28c90:	b.cc	28ca0 <mpfr_cmp2@@Base+0x22c>  // b.lo, b.ul, b.last
   28c94:	ldr	x10, [sp, #8]
   28c98:	mov	x21, x11
   28c9c:	b	28cd8 <mpfr_cmp2@@Base+0x264>
   28ca0:	str	x26, [sp, #8]
   28ca4:	tbnz	x8, #63, 28ccc <mpfr_cmp2@@Base+0x258>
   28ca8:	ldr	x10, [x22, x8, lsl #3]
   28cac:	lsr	x10, x10, x21
   28cb0:	add	x10, x10, x26
   28cb4:	str	x10, [sp, #8]
   28cb8:	cbz	x21, 28cd4 <mpfr_cmp2@@Base+0x260>
   28cbc:	ldr	x11, [x22, x8, lsl #3]
   28cc0:	neg	x12, x21
   28cc4:	lsl	x26, x11, x12
   28cc8:	b	28cd4 <mpfr_cmp2@@Base+0x260>
   28ccc:	mov	x10, x26
   28cd0:	mov	x26, xzr
   28cd4:	sub	x8, x8, #0x1
   28cd8:	ldr	x11, [x23, x27, lsl #3]
   28cdc:	cmp	x11, x10
   28ce0:	b.ne	28e28 <mpfr_cmp2@@Base+0x3b4>  // b.any
   28ce4:	subs	x27, x27, #0x1
   28ce8:	b.ge	28c84 <mpfr_cmp2@@Base+0x210>  // b.tcont
   28cec:	cbz	x26, 28e08 <mpfr_cmp2@@Base+0x394>
   28cf0:	add	x9, x9, #0x1
   28cf4:	b	28c54 <mpfr_cmp2@@Base+0x1e0>
   28cf8:	mov	x24, xzr
   28cfc:	mov	x9, xzr
   28d00:	mov	x26, xzr
   28d04:	sub	x21, x21, #0x40
   28d08:	b	28c04 <mpfr_cmp2@@Base+0x190>
   28d0c:	lsr	x8, x25, #63
   28d10:	eor	w9, w8, #0x1
   28d14:	add	x8, x27, #0x1
   28d18:	cmp	x8, #0x1
   28d1c:	b.lt	28d28 <mpfr_cmp2@@Base+0x2b4>  // b.tstop
   28d20:	ldr	x8, [x23, x27, lsl #3]
   28d24:	b	28d2c <mpfr_cmp2@@Base+0x2b8>
   28d28:	mov	x8, xzr
   28d2c:	str	x8, [x29, #24]
   28d30:	str	x26, [sp, #8]
   28d34:	tbz	w9, #0, 28d54 <mpfr_cmp2@@Base+0x2e0>
   28d38:	ldr	x8, [x22, x25, lsl #3]
   28d3c:	cbz	x21, 28d5c <mpfr_cmp2@@Base+0x2e8>
   28d40:	add	x8, x26, x8, lsr #1
   28d44:	str	x8, [sp, #8]
   28d48:	ldr	x8, [x22, x25, lsl #3]
   28d4c:	lsl	x26, x8, #63
   28d50:	b	28d64 <mpfr_cmp2@@Base+0x2f0>
   28d54:	mov	x26, xzr
   28d58:	b	28d64 <mpfr_cmp2@@Base+0x2f0>
   28d5c:	add	x8, x8, x26
   28d60:	str	x8, [sp, #8]
   28d64:	mov	x0, sp
   28d68:	add	x1, x29, #0x18
   28d6c:	add	x2, sp, #0x8
   28d70:	mov	w3, #0x1                   	// #1
   28d74:	bl	bf10 <__gmpn_sub_n@plt>
   28d78:	ldr	x10, [sp]
   28d7c:	cmp	x25, #0x0
   28d80:	cset	w9, gt
   28d84:	cmp	x26, #0x0
   28d88:	sub	x8, x25, #0x1
   28d8c:	add	x24, x24, #0x40
   28d90:	cset	w11, ne  // ne = any
   28d94:	cmp	x10, #0x1
   28d98:	sub	x27, x27, #0x1
   28d9c:	b.ne	28db4 <mpfr_cmp2@@Base+0x340>  // b.any
   28da0:	cmp	x0, #0x1
   28da4:	b.ne	28db4 <mpfr_cmp2@@Base+0x340>  // b.any
   28da8:	orr	w11, w9, w11
   28dac:	mov	x25, x8
   28db0:	tbnz	w11, #0, 28d14 <mpfr_cmp2@@Base+0x2a0>
   28db4:	cmp	x0, #0x1
   28db8:	b.ne	28e44 <mpfr_cmp2@@Base+0x3d0>  // b.any
   28dbc:	mov	x25, x8
   28dc0:	b	28c34 <mpfr_cmp2@@Base+0x1c0>
   28dc4:	tbz	x25, #63, 28e50 <mpfr_cmp2@@Base+0x3dc>
   28dc8:	mov	w20, wzr
   28dcc:	b	28c58 <mpfr_cmp2@@Base+0x1e4>
   28dd0:	mov	w20, #0x1                   	// #1
   28dd4:	mov	x22, x23
   28dd8:	mov	x25, x8
   28ddc:	cbnz	x9, 28dfc <mpfr_cmp2@@Base+0x388>
   28de0:	sub	x8, x22, #0x8
   28de4:	subs	x10, x25, #0x1
   28de8:	b.lt	28dc8 <mpfr_cmp2@@Base+0x354>  // b.tstop
   28dec:	ldr	x9, [x8, x25, lsl #3]
   28df0:	add	x24, x24, #0x40
   28df4:	mov	x25, x10
   28df8:	cbz	x9, 28de4 <mpfr_cmp2@@Base+0x370>
   28dfc:	clz	x8, x9
   28e00:	orr	x8, x8, x24
   28e04:	b	28e2c <mpfr_cmp2@@Base+0x3b8>
   28e08:	tbnz	x8, #63, 28e34 <mpfr_cmp2@@Base+0x3c0>
   28e0c:	ldr	x10, [x22, x8, lsl #3]
   28e10:	cbnz	x10, 28e34 <mpfr_cmp2@@Base+0x3c0>
   28e14:	sub	x10, x8, #0x1
   28e18:	cmp	x8, #0x0
   28e1c:	mov	x8, x10
   28e20:	b.gt	28e0c <mpfr_cmp2@@Base+0x398>
   28e24:	b	28e38 <mpfr_cmp2@@Base+0x3c4>
   28e28:	cinc	x8, x9, cc  // cc = lo, ul, last
   28e2c:	str	x8, [x19]
   28e30:	b	28c58 <mpfr_cmp2@@Base+0x1e4>
   28e34:	mov	x10, x8
   28e38:	mvn	x8, x10
   28e3c:	add	x9, x9, x8, lsr #63
   28e40:	b	28c54 <mpfr_cmp2@@Base+0x1e0>
   28e44:	sub	x9, x24, #0x1
   28e48:	cbnz	x10, 28c54 <mpfr_cmp2@@Base+0x1e0>
   28e4c:	b	28c80 <mpfr_cmp2@@Base+0x20c>
   28e50:	ldr	x9, [x22, x25, lsl #3]
   28e54:	mov	w20, #0xffffffff            	// #-1
   28e58:	cbnz	x9, 28dfc <mpfr_cmp2@@Base+0x388>
   28e5c:	b	28de0 <mpfr_cmp2@@Base+0x36c>

0000000000028e60 <mpfr_exp_2@@Base>:
   28e60:	sub	sp, sp, #0x1d0
   28e64:	stp	x29, x30, [sp, #368]
   28e68:	stp	x28, x27, [sp, #384]
   28e6c:	stp	x26, x25, [sp, #400]
   28e70:	stp	x24, x23, [sp, #416]
   28e74:	stp	x22, x21, [sp, #432]
   28e78:	stp	x20, x19, [sp, #448]
   28e7c:	ldr	x21, [x1, #16]
   28e80:	ldr	x25, [x0]
   28e84:	mov	x28, x1
   28e88:	mov	x23, x0
   28e8c:	cmn	x21, #0x1
   28e90:	mov	w27, w2
   28e94:	add	x29, sp, #0x170
   28e98:	b.lt	28f24 <mpfr_exp_2@@Base+0xc4>  // b.tstop
   28e9c:	mov	w8, #0x3f                  	// #63
   28ea0:	add	x9, sp, #0x60
   28ea4:	mov	w10, #0x1                   	// #1
   28ea8:	stur	x8, [x29, #-112]
   28eac:	stur	x9, [x29, #-88]
   28eb0:	stur	w10, [x29, #-104]
   28eb4:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
   28eb8:	ldr	x2, [x2, #3992]
   28ebc:	sub	x0, x29, #0x70
   28ec0:	mov	x1, x28
   28ec4:	mov	w3, wzr
   28ec8:	bl	c670 <mpfr_div@plt>
   28ecc:	ldur	x8, [x29, #-96]
   28ed0:	cmp	x8, #0x0
   28ed4:	b.le	28f24 <mpfr_exp_2@@Base+0xc4>
   28ed8:	ldur	x9, [x29, #-88]
   28edc:	ldur	w10, [x29, #-104]
   28ee0:	neg	x8, x8
   28ee4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   28ee8:	ldr	x9, [x9]
   28eec:	lsr	x8, x9, x8
   28ef0:	cmp	x8, #0x0
   28ef4:	csneg	x9, x11, x8, lt  // lt = tstop
   28ef8:	cmp	w10, #0x0
   28efc:	csel	x22, x8, x9, gt
   28f00:	cbz	x22, 28f28 <mpfr_exp_2@@Base+0xc8>
   28f04:	cmp	x22, #0x0
   28f08:	cneg	x8, x22, mi  // mi = first
   28f0c:	add	x8, x8, #0x1
   28f10:	clz	x8, x8
   28f14:	mov	w9, #0x40                  	// #64
   28f18:	sub	w8, w9, w8
   28f1c:	str	x8, [sp, #88]
   28f20:	b	28f2c <mpfr_exp_2@@Base+0xcc>
   28f24:	mov	x22, xzr
   28f28:	str	xzr, [sp, #88]
   28f2c:	cmp	x25, #0x63
   28f30:	b.gt	28f54 <mpfr_exp_2@@Base+0xf4>
   28f34:	add	x8, x25, #0x1
   28f38:	add	x9, x25, #0x2
   28f3c:	cmp	x8, #0x0
   28f40:	csinc	x8, x9, x25, lt  // lt = tstop
   28f44:	asr	x0, x8, #1
   28f48:	bl	bfd0 <__gmpfr_isqrt@plt>
   28f4c:	add	x24, x0, #0x3
   28f50:	b	28f60 <mpfr_exp_2@@Base+0x100>
   28f54:	lsl	x0, x25, #2
   28f58:	bl	c150 <__gmpfr_cuberoot@plt>
   28f5c:	mov	x24, x0
   28f60:	sub	x8, x25, #0x1
   28f64:	udiv	x8, x8, x24
   28f68:	lsl	x19, x8, #1
   28f6c:	cmn	x19, #0x14
   28f70:	b.eq	29500 <mpfr_exp_2@@Base+0x6a0>  // b.none
   28f74:	bic	x9, x21, x21, asr #63
   28f78:	add	x8, x19, #0x13
   28f7c:	add	x9, x25, x9
   28f80:	clz	x8, x8
   28f84:	add	x9, x9, x24, lsl #1
   28f88:	sub	x8, x9, x8
   28f8c:	str	x24, [sp, #80]
   28f90:	add	x24, x8, #0x4a
   28f94:	ldr	x8, [sp, #88]
   28f98:	mov	x20, #0xfffffffffffffeff    	// #-257
   28f9c:	movk	x20, #0x7fff, lsl #48
   28fa0:	add	x19, x24, w8, sxtw
   28fa4:	cmp	x19, x20
   28fa8:	b.gt	2951c <mpfr_exp_2@@Base+0x6bc>
   28fac:	sub	x8, x19, #0x1
   28fb0:	add	x9, x19, #0x3e
   28fb4:	cmp	x8, #0x0
   28fb8:	csel	x8, x9, x8, lt  // lt = tstop
   28fbc:	asr	x8, x8, #6
   28fc0:	cmp	x19, #0x201
   28fc4:	add	x21, x8, #0x1
   28fc8:	b.lt	28fdc <mpfr_exp_2@@Base+0x17c>  // b.tstop
   28fcc:	lsl	x0, x21, #4
   28fd0:	str	x0, [sp, #96]
   28fd4:	bl	cd50 <mpfr_allocate_func@plt>
   28fd8:	b	28fe8 <mpfr_exp_2@@Base+0x188>
   28fdc:	add	x8, sp, #0x60
   28fe0:	add	x0, x8, #0x10
   28fe4:	str	xzr, [sp, #96]
   28fe8:	ldr	x8, [sp, #88]
   28fec:	str	x0, [sp, #104]
   28ff0:	stur	x19, [x29, #-112]
   28ff4:	stp	x0, x19, [x29, #-88]
   28ff8:	sxtw	x8, w8
   28ffc:	str	x8, [sp, #32]
   29000:	mov	w19, #0x1                   	// #1
   29004:	add	x8, x0, x21, lsl #3
   29008:	sub	x0, x29, #0x80
   2900c:	stur	w19, [x29, #-104]
   29010:	stur	x8, [x29, #-56]
   29014:	stur	w19, [x29, #-72]
   29018:	bl	c040 <mpfr_mpz_init@plt>
   2901c:	mrs	x9, tpidr_el0
   29020:	ldr	x21, [sp, #80]
   29024:	mov	x8, #0xfffffffffffffffe    	// #-2
   29028:	cmp	w27, #0x0
   2902c:	str	x9, [sp, #72]
   29030:	sub	x8, x8, x21
   29034:	stp	x8, x25, [sp, #56]
   29038:	cinc	x8, x25, eq  // eq = none
   2903c:	str	x8, [sp, #48]
   29040:	mov	w8, #0x40                  	// #64
   29044:	str	x8, [sp, #40]
   29048:	cmp	x22, #0x0
   2904c:	cinc	w25, w19, lt  // lt = tstop
   29050:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29054:	ldr	x1, [x0, #2640]
   29058:	add	x0, x0, #0xa50
   2905c:	blr	x1
   29060:	add	x1, x9, x0
   29064:	sub	x0, x29, #0x50
   29068:	mov	w2, w25
   2906c:	cneg	x26, x22, mi  // mi = first
   29070:	bl	c3e0 <mpfr_cache@plt>
   29074:	sub	x0, x29, #0x70
   29078:	sub	x1, x29, #0x50
   2907c:	mov	x2, x26
   29080:	mov	w3, w25
   29084:	bl	bb10 <mpfr_mul_ui@plt>
   29088:	tbz	x22, #63, 29098 <mpfr_exp_2@@Base+0x238>
   2908c:	ldur	w8, [x29, #-104]
   29090:	neg	w8, w8
   29094:	stur	w8, [x29, #-104]
   29098:	sub	x0, x29, #0x70
   2909c:	sub	x2, x29, #0x70
   290a0:	mov	w3, #0x2                   	// #2
   290a4:	mov	x1, x28
   290a8:	mov	w25, #0x1                   	// #1
   290ac:	bl	bc20 <mpfr_sub@plt>
   290b0:	ldur	x9, [x29, #-96]
   290b4:	ldur	w11, [x29, #-104]
   290b8:	add	x10, x20, #0x105
   290bc:	cmp	x9, x10
   290c0:	cset	w8, lt  // lt = tstop
   290c4:	tbz	w11, #31, 29110 <mpfr_exp_2@@Base+0x2b0>
   290c8:	ldr	x19, [sp, #64]
   290cc:	cmp	x9, x10
   290d0:	b.lt	29114 <mpfr_exp_2@@Base+0x2b4>  // b.tstop
   290d4:	sub	x0, x29, #0x70
   290d8:	sub	x1, x29, #0x70
   290dc:	sub	x2, x29, #0x50
   290e0:	mov	w3, #0x2                   	// #2
   290e4:	sub	x22, x22, #0x1
   290e8:	bl	c240 <mpfr_add@plt>
   290ec:	ldur	x9, [x29, #-96]
   290f0:	ldur	w11, [x29, #-104]
   290f4:	add	x10, x20, #0x105
   290f8:	cmp	x9, x10
   290fc:	cset	w8, lt  // lt = tstop
   29100:	tbz	w11, #31, 29114 <mpfr_exp_2@@Base+0x2b4>
   29104:	cmp	x9, x10
   29108:	b.ge	290d4 <mpfr_exp_2@@Base+0x274>  // b.tcont
   2910c:	b	29114 <mpfr_exp_2@@Base+0x2b4>
   29110:	ldr	x19, [sp, #64]
   29114:	tbnz	w8, #0, 293b8 <mpfr_exp_2@@Base+0x558>
   29118:	ldr	x8, [sp, #88]
   2911c:	cmp	w8, #0x1
   29120:	b.lt	29134 <mpfr_exp_2@@Base+0x2d4>  // b.tstop
   29124:	sub	x0, x29, #0x70
   29128:	mov	w2, #0x2                   	// #2
   2912c:	mov	x1, x24
   29130:	bl	c9d0 <mpfr_prec_round@plt>
   29134:	sub	x0, x29, #0x70
   29138:	sub	x1, x29, #0x70
   2913c:	mov	w3, #0x2                   	// #2
   29140:	mov	x2, x21
   29144:	bl	c950 <mpfr_div_2ui@plt>
   29148:	cmp	x19, #0x63
   2914c:	b.gt	292d0 <mpfr_exp_2@@Base+0x470>
   29150:	sub	x8, x25, x24
   29154:	sub	x0, x29, #0x18
   29158:	str	x28, [sp, #8]
   2915c:	str	w27, [sp, #20]
   29160:	str	x23, [sp, #24]
   29164:	stur	x8, [x29, #-48]
   29168:	bl	c040 <mpfr_mpz_init@plt>
   2916c:	sub	x0, x29, #0x28
   29170:	bl	c040 <mpfr_mpz_init@plt>
   29174:	sub	x0, x29, #0x18
   29178:	mov	w1, #0x1                   	// #1
   2917c:	bl	bd60 <__gmpz_set_ui@plt>
   29180:	sub	x0, x29, #0x80
   29184:	mov	w1, #0x1                   	// #1
   29188:	bl	bd60 <__gmpz_set_ui@plt>
   2918c:	sub	x26, x24, #0x1
   29190:	sub	x0, x29, #0x80
   29194:	sub	x1, x29, #0x80
   29198:	mov	x2, x26
   2919c:	bl	c290 <__gmpz_mul_2exp@plt>
   291a0:	sub	x0, x29, #0x28
   291a4:	sub	x1, x29, #0x70
   291a8:	bl	cb10 <mpfr_get_z_2exp@plt>
   291ac:	mov	x25, x0
   291b0:	mov	x27, xzr
   291b4:	add	x23, x26, x24
   291b8:	mov	w21, #0x3                   	// #3
   291bc:	mov	w19, #0x2                   	// #2
   291c0:	sub	x0, x29, #0x18
   291c4:	sub	x1, x29, #0x18
   291c8:	sub	x2, x29, #0x28
   291cc:	sub	x26, x19, #0x1
   291d0:	bl	c090 <__gmpz_mul@plt>
   291d4:	ldur	w8, [x29, #-124]
   291d8:	ldur	x9, [x29, #-120]
   291dc:	ldur	w10, [x29, #-20]
   291e0:	ldur	x11, [x29, #-16]
   291e4:	cmp	w8, #0x0
   291e8:	cneg	w8, w8, mi  // mi = first
   291ec:	cmp	w10, #0x0
   291f0:	add	x9, x9, w8, uxtw #3
   291f4:	cneg	w10, w10, mi  // mi = first
   291f8:	ldur	x9, [x9, #-8]
   291fc:	add	x11, x11, w10, uxtw #3
   29200:	ldur	x11, [x11, #-8]
   29204:	add	x28, x27, x25
   29208:	add	x12, x23, x28
   2920c:	clz	x9, x9
   29210:	add	x9, x12, x9
   29214:	clz	x11, x11
   29218:	sub	x8, x9, x8, lsl #6
   2921c:	sub	x8, x8, x11
   29220:	add	x2, x8, x10, lsl #6
   29224:	sub	x0, x29, #0x18
   29228:	sub	x1, x29, #0x18
   2922c:	bl	29964 <mpfr_exp_2@@Base+0xb04>
   29230:	cmp	x26, #0x2
   29234:	mov	x27, x0
   29238:	b.cc	29274 <mpfr_exp_2@@Base+0x414>  // b.lo, b.ul, b.last
   2923c:	sub	x8, x19, #0x2
   29240:	tst	x26, x8
   29244:	b.eq	2925c <mpfr_exp_2@@Base+0x3fc>  // b.none
   29248:	sub	x0, x29, #0x18
   2924c:	sub	x1, x29, #0x18
   29250:	mov	x2, x26
   29254:	bl	c660 <__gmpz_fdiv_q_ui@plt>
   29258:	b	29274 <mpfr_exp_2@@Base+0x414>
   2925c:	clz	x8, x8
   29260:	mov	w9, #0x40                  	// #64
   29264:	sub	x2, x9, x8
   29268:	sub	x0, x29, #0x18
   2926c:	sub	x1, x29, #0x18
   29270:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   29274:	ldur	w8, [x29, #-20]
   29278:	cbz	w8, 292ec <mpfr_exp_2@@Base+0x48c>
   2927c:	sub	x0, x29, #0x80
   29280:	sub	x1, x29, #0x80
   29284:	sub	x2, x29, #0x18
   29288:	add	x27, x27, x28
   2928c:	bl	ca10 <__gmpz_add@plt>
   29290:	ldur	w8, [x29, #-20]
   29294:	ldur	x9, [x29, #-16]
   29298:	sub	x0, x29, #0x28
   2929c:	sub	x1, x29, #0x28
   292a0:	cmp	w8, #0x0
   292a4:	cneg	w8, w8, mi  // mi = first
   292a8:	add	x9, x9, w8, uxtw #3
   292ac:	ldur	x9, [x9, #-8]
   292b0:	lsl	x8, x8, #6
   292b4:	clz	x9, x9
   292b8:	sub	x2, x8, x9
   292bc:	bl	29964 <mpfr_exp_2@@Base+0xb04>
   292c0:	add	x25, x0, x25
   292c4:	add	x19, x19, #0x1
   292c8:	add	x21, x21, #0x3
   292cc:	b	291c0 <mpfr_exp_2@@Base+0x360>
   292d0:	sub	x0, x29, #0x80
   292d4:	sub	x1, x29, #0x70
   292d8:	sub	x3, x29, #0x30
   292dc:	mov	x2, x24
   292e0:	bl	29520 <mpfr_exp_2@@Base+0x6c0>
   292e4:	mov	x25, x0
   292e8:	b	29310 <mpfr_exp_2@@Base+0x4b0>
   292ec:	sub	x0, x29, #0x18
   292f0:	bl	c210 <mpfr_mpz_clear@plt>
   292f4:	sub	x0, x29, #0x28
   292f8:	bl	c210 <mpfr_mpz_clear@plt>
   292fc:	mul	x25, x21, x19
   29300:	ldr	x23, [sp, #24]
   29304:	ldr	w27, [sp, #20]
   29308:	ldr	x28, [sp, #8]
   2930c:	ldr	x21, [sp, #80]
   29310:	ldur	x26, [x29, #-48]
   29314:	cbz	x21, 29348 <mpfr_exp_2@@Base+0x4e8>
   29318:	sub	x0, x29, #0x80
   2931c:	sub	x1, x29, #0x80
   29320:	sub	x2, x29, #0x80
   29324:	bl	c090 <__gmpz_mul@plt>
   29328:	sub	x0, x29, #0x80
   2932c:	sub	x1, x29, #0x80
   29330:	mov	x2, x24
   29334:	bl	29964 <mpfr_exp_2@@Base+0xb04>
   29338:	subs	x21, x21, #0x1
   2933c:	add	x26, x0, x26, lsl #1
   29340:	b.ne	29318 <mpfr_exp_2@@Base+0x4b8>  // b.any
   29344:	stur	x26, [x29, #-48]
   29348:	sub	x0, x29, #0x50
   2934c:	sub	x1, x29, #0x80
   29350:	mov	x2, x26
   29354:	mov	w3, wzr
   29358:	bl	c540 <mpfr_set_z_2exp@plt>
   2935c:	subs	x19, x25, #0x1
   29360:	b.eq	29454 <mpfr_exp_2@@Base+0x5f4>  // b.none
   29364:	cbz	x25, 2945c <mpfr_exp_2@@Base+0x5fc>
   29368:	clz	x8, x19
   2936c:	mov	w9, #0x40                  	// #64
   29370:	sub	x8, x9, x8
   29374:	ldur	x9, [x29, #-64]
   29378:	add	x10, x20, #0x105
   2937c:	cmp	x9, x10
   29380:	b.lt	293b8 <mpfr_exp_2@@Base+0x558>  // b.tstop
   29384:	ldur	x9, [x29, #-80]
   29388:	ldp	x3, x10, [sp, #48]
   2938c:	ldur	x0, [x29, #-56]
   29390:	sub	x11, x9, #0x1
   29394:	add	x9, x9, #0x3e
   29398:	cmp	x11, #0x0
   2939c:	csel	x9, x9, x11, lt  // lt = tstop
   293a0:	add	x10, x10, x24
   293a4:	asr	x9, x9, #6
   293a8:	add	x1, x9, #0x1
   293ac:	sub	x2, x10, x8
   293b0:	bl	c3d0 <mpfr_round_p@plt>
   293b4:	cbnz	w0, 29494 <mpfr_exp_2@@Base+0x634>
   293b8:	ldr	x19, [sp, #40]
   293bc:	sub	x8, x20, x24
   293c0:	cmp	x19, x8
   293c4:	b.gt	29478 <mpfr_exp_2@@Base+0x618>
   293c8:	ldr	x8, [sp, #32]
   293cc:	add	x24, x24, x19
   293d0:	cmp	x24, #0x0
   293d4:	add	x19, x24, x8
   293d8:	cinc	x8, x24, lt  // lt = tstop
   293dc:	cmp	x19, x20
   293e0:	b.gt	2951c <mpfr_exp_2@@Base+0x6bc>
   293e4:	asr	x8, x8, #1
   293e8:	str	x8, [sp, #40]
   293ec:	sub	x8, x19, #0x1
   293f0:	add	x9, x19, #0x3e
   293f4:	cmp	x8, #0x0
   293f8:	ldr	x1, [sp, #96]
   293fc:	csel	x8, x9, x8, lt  // lt = tstop
   29400:	asr	x8, x8, #6
   29404:	add	x21, x8, #0x1
   29408:	lsl	x2, x21, #4
   2940c:	str	x2, [sp, #96]
   29410:	cbz	x1, 29420 <mpfr_exp_2@@Base+0x5c0>
   29414:	ldr	x0, [sp, #104]
   29418:	bl	c260 <mpfr_reallocate_func@plt>
   2941c:	b	29428 <mpfr_exp_2@@Base+0x5c8>
   29420:	mov	x0, x2
   29424:	bl	cd50 <mpfr_allocate_func@plt>
   29428:	mov	w8, #0x1                   	// #1
   2942c:	stur	w8, [x29, #-104]
   29430:	add	x8, x0, x21, lsl #3
   29434:	ldp	x9, x21, [sp, #72]
   29438:	stur	x19, [x29, #-112]
   2943c:	stp	x0, x19, [x29, #-88]
   29440:	mov	w19, #0x1                   	// #1
   29444:	str	x0, [sp, #104]
   29448:	stur	x8, [x29, #-56]
   2944c:	stur	w19, [x29, #-72]
   29450:	b	29048 <mpfr_exp_2@@Base+0x1e8>
   29454:	mov	x8, xzr
   29458:	b	29374 <mpfr_exp_2@@Base+0x514>
   2945c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   29460:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   29464:	mov	w1, #0xf5                  	// #245
   29468:	add	x0, x0, #0x3cb
   2946c:	add	x2, x2, #0x3e4
   29470:	bl	cb90 <mpfr_assert_fail@plt>
   29474:	b	29368 <mpfr_exp_2@@Base+0x508>
   29478:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2947c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   29480:	mov	w1, #0x102                 	// #258
   29484:	add	x0, x0, #0x3cb
   29488:	add	x2, x2, #0x3ec
   2948c:	bl	cb90 <mpfr_assert_fail@plt>
   29490:	b	293c8 <mpfr_exp_2@@Base+0x568>
   29494:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29498:	ldr	x1, [x0, #2656]
   2949c:	add	x0, x0, #0xa60
   294a0:	blr	x1
   294a4:	ldr	x8, [sp, #72]
   294a8:	sub	x1, x29, #0x50
   294ac:	mov	x2, x22
   294b0:	mov	w3, w27
   294b4:	str	wzr, [x8, x0]
   294b8:	mov	x0, x23
   294bc:	bl	bc40 <mpfr_mul_2si@plt>
   294c0:	mov	w19, w0
   294c4:	sub	x0, x29, #0x80
   294c8:	bl	c210 <mpfr_mpz_clear@plt>
   294cc:	ldr	x1, [sp, #96]
   294d0:	cbz	x1, 294dc <mpfr_exp_2@@Base+0x67c>
   294d4:	ldr	x0, [sp, #104]
   294d8:	bl	cc80 <mpfr_free_func@plt>
   294dc:	mov	w0, w19
   294e0:	ldp	x20, x19, [sp, #448]
   294e4:	ldp	x22, x21, [sp, #432]
   294e8:	ldp	x24, x23, [sp, #416]
   294ec:	ldp	x26, x25, [sp, #400]
   294f0:	ldp	x28, x27, [sp, #384]
   294f4:	ldp	x29, x30, [sp, #368]
   294f8:	add	sp, sp, #0x1d0
   294fc:	ret
   29500:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   29504:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   29508:	add	x0, x0, #0x3cb
   2950c:	add	x2, x2, #0x3d3
   29510:	mov	w1, #0x9f                  	// #159
   29514:	bl	cb90 <mpfr_assert_fail@plt>
   29518:	b	28f74 <mpfr_exp_2@@Base+0x114>
   2951c:	bl	c940 <mpfr_abort_prec_max@plt>
   29520:	stp	x29, x30, [sp, #-96]!
   29524:	stp	x28, x27, [sp, #16]
   29528:	stp	x26, x25, [sp, #32]
   2952c:	stp	x24, x23, [sp, #48]
   29530:	stp	x22, x21, [sp, #64]
   29534:	stp	x20, x19, [sp, #80]
   29538:	mov	x29, sp
   2953c:	sub	sp, sp, #0x70
   29540:	ldr	x8, [x1, #16]
   29544:	stur	x0, [x29, #-64]
   29548:	mov	x28, x3
   2954c:	mov	x25, x1
   29550:	neg	x8, x8
   29554:	sdiv	x0, x2, x8
   29558:	stur	x2, [x29, #-80]
   2955c:	bl	bfd0 <__gmpfr_isqrt@plt>
   29560:	cmp	x0, #0x2
   29564:	mov	w8, #0x2                   	// #2
   29568:	csel	x20, x0, x8, hi  // hi = pmore
   2956c:	add	x19, x20, #0x1
   29570:	lsl	x1, x19, #4
   29574:	cmp	x1, #0x4, lsl #12
   29578:	stur	xzr, [x29, #-56]
   2957c:	b.hi	2993c <mpfr_exp_2@@Base+0xadc>  // b.pmore
   29580:	add	x9, x1, #0xf
   29584:	mov	x8, sp
   29588:	and	x9, x9, #0xfffffffffffffff0
   2958c:	sub	x22, x8, x9
   29590:	mov	sp, x22
   29594:	lsl	x1, x19, #3
   29598:	cmp	x1, #0x4, lsl #12
   2959c:	b.hi	2994c <mpfr_exp_2@@Base+0xaec>  // b.pmore
   295a0:	add	x9, x1, #0xf
   295a4:	mov	x8, sp
   295a8:	and	x9, x9, #0xfffffffffffffff0
   295ac:	sub	x23, x8, x9
   295b0:	mov	sp, x23
   295b4:	sub	x0, x29, #0x30
   295b8:	bl	c040 <mpfr_mpz_init@plt>
   295bc:	sub	x0, x29, #0x20
   295c0:	bl	c040 <mpfr_mpz_init@plt>
   295c4:	sub	x0, x29, #0x10
   295c8:	bl	c040 <mpfr_mpz_init@plt>
   295cc:	ldur	x0, [x29, #-64]
   295d0:	mov	x1, xzr
   295d4:	bl	bd60 <__gmpz_set_ui@plt>
   295d8:	ldur	x9, [x29, #-80]
   295dc:	mov	w8, #0x1                   	// #1
   295e0:	mov	x19, xzr
   295e4:	mov	x26, x22
   295e8:	sub	x24, x8, x9
   295ec:	str	x24, [x28]
   295f0:	mov	x0, x26
   295f4:	bl	c040 <mpfr_mpz_init@plt>
   295f8:	add	x19, x19, #0x1
   295fc:	cmp	x19, x20
   29600:	add	x26, x26, #0x10
   29604:	b.ls	295f0 <mpfr_exp_2@@Base+0x790>  // b.plast
   29608:	add	x26, x22, #0x10
   2960c:	mov	x0, x26
   29610:	mov	x1, x25
   29614:	bl	cb10 <mpfr_get_z_2exp@plt>
   29618:	mov	x2, x0
   2961c:	str	x0, [x23, #8]
   29620:	mov	x0, x26
   29624:	mov	x1, x26
   29628:	mov	x3, x24
   2962c:	bl	299c8 <mpfr_exp_2@@Base+0xb68>
   29630:	str	x0, [x23, #8]
   29634:	sub	x0, x29, #0x10
   29638:	mov	x1, x26
   2963c:	mov	x2, x26
   29640:	bl	c090 <__gmpz_mul@plt>
   29644:	ldur	x8, [x29, #-80]
   29648:	add	x0, x22, #0x20
   2964c:	sub	x1, x29, #0x10
   29650:	sub	x25, x8, #0x1
   29654:	mov	x2, x25
   29658:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   2965c:	cmp	x20, #0x3
   29660:	str	x24, [x23, #16]
   29664:	b.cc	296c0 <mpfr_exp_2@@Base+0x860>  // b.lo, b.ul, b.last
   29668:	add	x27, x22, #0x30
   2966c:	mov	w19, #0x3                   	// #3
   29670:	tbnz	w19, #0, 2968c <mpfr_exp_2@@Base+0x82c>
   29674:	lsl	x8, x19, #3
   29678:	and	x8, x8, #0xfffffffffffffff0
   2967c:	add	x1, x22, x8
   29680:	sub	x0, x29, #0x10
   29684:	mov	x2, x1
   29688:	b	29698 <mpfr_exp_2@@Base+0x838>
   2968c:	sub	x1, x27, #0x10
   29690:	sub	x0, x29, #0x10
   29694:	mov	x2, x26
   29698:	bl	c090 <__gmpz_mul@plt>
   2969c:	sub	x1, x29, #0x10
   296a0:	mov	x0, x27
   296a4:	mov	x2, x25
   296a8:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   296ac:	str	x24, [x23, x19, lsl #3]
   296b0:	add	x19, x19, #0x1
   296b4:	cmp	x19, x20
   296b8:	add	x27, x27, #0x10
   296bc:	b.ls	29670 <mpfr_exp_2@@Base+0x810>  // b.plast
   296c0:	mov	w1, #0x1                   	// #1
   296c4:	mov	x0, x22
   296c8:	bl	bd60 <__gmpz_set_ui@plt>
   296cc:	mov	x0, x22
   296d0:	mov	x1, x22
   296d4:	mov	x2, x25
   296d8:	bl	c290 <__gmpz_mul_2exp@plt>
   296dc:	sub	x0, x29, #0x20
   296e0:	mov	w1, #0x1                   	// #1
   296e4:	str	x24, [x23]
   296e8:	bl	bd60 <__gmpz_set_ui@plt>
   296ec:	ldur	x26, [x29, #-80]
   296f0:	sub	x8, x20, #0x1
   296f4:	add	x9, x22, x20, lsl #4
   296f8:	stur	x8, [x29, #-72]
   296fc:	neg	x10, x26
   29700:	add	x8, x22, x8, lsl #4
   29704:	mov	x19, xzr
   29708:	mov	x24, xzr
   2970c:	stp	x10, x8, [x29, #-104]
   29710:	sub	x8, x9, #0x20
   29714:	stur	x9, [x29, #-88]
   29718:	stur	x8, [x29, #-112]
   2971c:	mov	w8, #0x1                   	// #1
   29720:	mov	x25, x28
   29724:	sub	x27, x8, x26
   29728:	cbz	x19, 2975c <mpfr_exp_2@@Base+0x8fc>
   2972c:	mov	x21, xzr
   29730:	mov	x28, x22
   29734:	ldr	x2, [x23, x21, lsl #3]
   29738:	mov	x0, x28
   2973c:	mov	x1, x28
   29740:	mov	x3, x27
   29744:	bl	299c8 <mpfr_exp_2@@Base+0xb68>
   29748:	str	x27, [x23, x21, lsl #3]
   2974c:	add	x21, x21, #0x1
   29750:	cmp	x21, x20
   29754:	add	x28, x28, #0x10
   29758:	b.cc	29734 <mpfr_exp_2@@Base+0x8d4>  // b.lo, b.ul, b.last
   2975c:	ldur	x21, [x29, #-72]
   29760:	ldur	x1, [x29, #-96]
   29764:	sub	x0, x29, #0x10
   29768:	mov	x3, x27
   2976c:	ldr	x2, [x23, x21, lsl #3]
   29770:	bl	299c8 <mpfr_exp_2@@Base+0xb68>
   29774:	mov	x27, x0
   29778:	cbz	x21, 297b0 <mpfr_exp_2@@Base+0x950>
   2977c:	ldur	x28, [x29, #-112]
   29780:	ldur	x21, [x29, #-72]
   29784:	add	x2, x19, x21
   29788:	sub	x0, x29, #0x10
   2978c:	sub	x1, x29, #0x10
   29790:	bl	c660 <__gmpz_fdiv_q_ui@plt>
   29794:	sub	x0, x29, #0x10
   29798:	sub	x1, x29, #0x10
   2979c:	mov	x2, x28
   297a0:	bl	ca10 <__gmpz_add@plt>
   297a4:	sub	x21, x21, #0x1
   297a8:	sub	x28, x28, #0x10
   297ac:	cbnz	x21, 29784 <mpfr_exp_2@@Base+0x924>
   297b0:	sub	x0, x29, #0x10
   297b4:	sub	x1, x29, #0x10
   297b8:	sub	x2, x29, #0x20
   297bc:	bl	c090 <__gmpz_mul@plt>
   297c0:	ldr	x3, [x25]
   297c4:	add	x2, x27, x24
   297c8:	sub	x0, x29, #0x10
   297cc:	sub	x1, x29, #0x10
   297d0:	mov	x28, x25
   297d4:	bl	299c8 <mpfr_exp_2@@Base+0xb68>
   297d8:	ldur	x0, [x29, #-64]
   297dc:	sub	x2, x29, #0x10
   297e0:	mov	x1, x0
   297e4:	bl	ca10 <__gmpz_add@plt>
   297e8:	ldur	x2, [x29, #-88]
   297ec:	sub	x0, x29, #0x10
   297f0:	sub	x1, x29, #0x20
   297f4:	bl	c090 <__gmpz_mul@plt>
   297f8:	ldr	x27, [x23, x20, lsl #3]
   297fc:	sub	x0, x29, #0x30
   29800:	mov	w1, #0x1                   	// #1
   29804:	bl	bd60 <__gmpz_set_ui@plt>
   29808:	mov	w21, #0x1                   	// #1
   2980c:	add	x2, x19, x21
   29810:	sub	x0, x29, #0x30
   29814:	sub	x1, x29, #0x30
   29818:	bl	c1a0 <__gmpz_mul_ui@plt>
   2981c:	add	x21, x21, #0x1
   29820:	cmp	x21, x20
   29824:	b.ls	2980c <mpfr_exp_2@@Base+0x9ac>  // b.plast
   29828:	sub	x0, x29, #0x10
   2982c:	sub	x1, x29, #0x10
   29830:	sub	x2, x29, #0x30
   29834:	bl	bee0 <__gmpz_fdiv_q@plt>
   29838:	ldur	w8, [x29, #-12]
   2983c:	add	x19, x19, x20
   29840:	cbz	w8, 298d8 <mpfr_exp_2@@Base+0xa78>
   29844:	sub	x0, x29, #0x20
   29848:	sub	x1, x29, #0x10
   2984c:	mov	x2, x26
   29850:	add	x21, x27, x24
   29854:	bl	29964 <mpfr_exp_2@@Base+0xb04>
   29858:	ldur	w8, [x29, #-28]
   2985c:	add	x24, x21, x0
   29860:	cbz	w8, 298d0 <mpfr_exp_2@@Base+0xa70>
   29864:	ldur	x9, [x29, #-24]
   29868:	cmp	w8, #0x0
   2986c:	cneg	w8, w8, mi  // mi = first
   29870:	add	x9, x9, w8, uxtw #3
   29874:	ldur	x9, [x9, #-8]
   29878:	lsl	x8, x8, #6
   2987c:	clz	x9, x9
   29880:	sub	x8, x8, x9
   29884:	ldur	x10, [x29, #-64]
   29888:	ldur	x12, [x29, #-80]
   2988c:	ldr	x11, [x28]
   29890:	add	x8, x8, x24
   29894:	ldr	w9, [x10, #4]
   29898:	ldr	x10, [x10, #8]
   2989c:	add	x12, x8, x12
   298a0:	sub	x11, x12, x11
   298a4:	cmp	w9, #0x0
   298a8:	cneg	w9, w9, mi  // mi = first
   298ac:	add	x10, x10, w9, uxtw #3
   298b0:	ldur	x10, [x10, #-8]
   298b4:	clz	x10, x10
   298b8:	add	x10, x11, x10
   298bc:	ldur	x11, [x29, #-104]
   298c0:	sub	x26, x10, x9, lsl #6
   298c4:	cmp	x8, x11
   298c8:	b.hi	2971c <mpfr_exp_2@@Base+0x8bc>  // b.pmore
   298cc:	b	298d8 <mpfr_exp_2@@Base+0xa78>
   298d0:	mov	w8, #0x1                   	// #1
   298d4:	b	29884 <mpfr_exp_2@@Base+0xa24>
   298d8:	mov	x21, xzr
   298dc:	mov	x0, x22
   298e0:	bl	c210 <mpfr_mpz_clear@plt>
   298e4:	add	x21, x21, #0x1
   298e8:	cmp	x21, x20
   298ec:	add	x22, x22, #0x10
   298f0:	b.ls	298dc <mpfr_exp_2@@Base+0xa7c>  // b.plast
   298f4:	ldur	x0, [x29, #-56]
   298f8:	cbnz	x0, 2995c <mpfr_exp_2@@Base+0xafc>
   298fc:	sub	x0, x29, #0x20
   29900:	bl	c210 <mpfr_mpz_clear@plt>
   29904:	sub	x0, x29, #0x10
   29908:	bl	c210 <mpfr_mpz_clear@plt>
   2990c:	sub	x0, x29, #0x30
   29910:	bl	c210 <mpfr_mpz_clear@plt>
   29914:	add	x8, x19, #0x4
   29918:	mul	x0, x8, x19
   2991c:	mov	sp, x29
   29920:	ldp	x20, x19, [sp, #80]
   29924:	ldp	x22, x21, [sp, #64]
   29928:	ldp	x24, x23, [sp, #48]
   2992c:	ldp	x26, x25, [sp, #32]
   29930:	ldp	x28, x27, [sp, #16]
   29934:	ldp	x29, x30, [sp], #96
   29938:	ret
   2993c:	sub	x0, x29, #0x38
   29940:	bl	be70 <mpfr_tmp_allocate@plt>
   29944:	mov	x22, x0
   29948:	b	29594 <mpfr_exp_2@@Base+0x734>
   2994c:	sub	x0, x29, #0x38
   29950:	bl	be70 <mpfr_tmp_allocate@plt>
   29954:	mov	x23, x0
   29958:	b	295b4 <mpfr_exp_2@@Base+0x754>
   2995c:	bl	c460 <mpfr_tmp_free@plt>
   29960:	b	298fc <mpfr_exp_2@@Base+0xa9c>
   29964:	stp	x29, x30, [sp, #-32]!
   29968:	ldr	w8, [x1, #4]
   2996c:	ldr	x9, [x1, #8]
   29970:	str	x19, [sp, #16]
   29974:	mov	x29, sp
   29978:	cmp	w8, #0x0
   2997c:	cneg	w8, w8, mi  // mi = first
   29980:	add	x9, x9, w8, uxtw #3
   29984:	ldur	x9, [x9, #-8]
   29988:	lsl	x8, x8, #6
   2998c:	clz	x9, x9
   29990:	sub	x8, x8, x9
   29994:	subs	x19, x8, x2
   29998:	cset	w8, hi  // hi = pmore
   2999c:	orr	x8, x8, x2, lsr #63
   299a0:	cbz	x8, 299bc <mpfr_exp_2@@Base+0xb5c>
   299a4:	mov	x2, x19
   299a8:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   299ac:	mov	x0, x19
   299b0:	ldr	x19, [sp, #16]
   299b4:	ldp	x29, x30, [sp], #32
   299b8:	ret
   299bc:	bl	c050 <__gmpz_set@plt>
   299c0:	mov	x19, xzr
   299c4:	b	299ac <mpfr_exp_2@@Base+0xb4c>
   299c8:	stp	x29, x30, [sp, #-32]!
   299cc:	str	x19, [sp, #16]
   299d0:	mov	x19, x3
   299d4:	subs	x8, x3, x2
   299d8:	mov	x29, sp
   299dc:	b.le	299f8 <mpfr_exp_2@@Base+0xb98>
   299e0:	mov	x2, x8
   299e4:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   299e8:	mov	x0, x19
   299ec:	ldr	x19, [sp, #16]
   299f0:	ldp	x29, x30, [sp], #32
   299f4:	ret
   299f8:	sub	x2, x2, x19
   299fc:	bl	c290 <__gmpz_mul_2exp@plt>
   29a00:	b	299e8 <mpfr_exp_2@@Base+0xb88>

0000000000029a04 <mpfr_asin@@Base>:
   29a04:	sub	sp, sp, #0x90
   29a08:	stp	x29, x30, [sp, #48]
   29a0c:	stp	x28, x27, [sp, #64]
   29a10:	stp	x26, x25, [sp, #80]
   29a14:	stp	x24, x23, [sp, #96]
   29a18:	stp	x22, x21, [sp, #112]
   29a1c:	stp	x20, x19, [sp, #128]
   29a20:	ldr	x8, [x1, #16]
   29a24:	mov	x23, #0x2                   	// #2
   29a28:	movk	x23, #0x8000, lsl #48
   29a2c:	add	x9, x23, #0x2
   29a30:	mov	x21, x1
   29a34:	cmp	x8, x9
   29a38:	mov	x19, x0
   29a3c:	add	x29, sp, #0x30
   29a40:	b.lt	29ce4 <mpfr_asin@@Base+0x2e0>  // b.tstop
   29a44:	mov	w20, w2
   29a48:	tbz	x8, #63, 29a64 <mpfr_asin@@Base+0x60>
   29a4c:	ldr	x9, [x19]
   29a50:	mov	w10, #0x2                   	// #2
   29a54:	sub	x2, x10, x8, lsl #1
   29a58:	add	x8, x9, #0x1
   29a5c:	cmp	x2, x8
   29a60:	b.hi	29d9c <mpfr_asin@@Base+0x398>  // b.pmore
   29a64:	ldr	x1, [x21]
   29a68:	add	x0, sp, #0x10
   29a6c:	bl	cad0 <mpfr_init2@plt>
   29a70:	add	x0, sp, #0x10
   29a74:	mov	w3, #0x1                   	// #1
   29a78:	mov	x1, x21
   29a7c:	mov	w2, wzr
   29a80:	bl	c6f0 <mpfr_set4@plt>
   29a84:	add	x0, sp, #0x10
   29a88:	mov	w1, #0x1                   	// #1
   29a8c:	mov	x2, xzr
   29a90:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   29a94:	mov	w22, w0
   29a98:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29a9c:	ldr	x1, [x0, #2656]
   29aa0:	add	x0, x0, #0xa60
   29aa4:	blr	x1
   29aa8:	mrs	x25, tpidr_el0
   29aac:	ldr	w26, [x25, x0]
   29ab0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29ab4:	ldr	x1, [x0, #2592]
   29ab8:	add	x0, x0, #0xa20
   29abc:	blr	x1
   29ac0:	ldr	x27, [x25, x0]
   29ac4:	mov	x8, x0
   29ac8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29acc:	ldr	x1, [x0, #2624]
   29ad0:	add	x0, x0, #0xa40
   29ad4:	blr	x1
   29ad8:	ldr	x28, [x25, x0]
   29adc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   29ae0:	str	x9, [x25, x8]
   29ae4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   29ae8:	str	x8, [x25, x0]
   29aec:	add	x0, sp, #0x10
   29af0:	tbz	w22, #31, 29d1c <mpfr_asin@@Base+0x318>
   29af4:	add	x2, sp, #0x10
   29af8:	mov	w1, #0x1                   	// #1
   29afc:	mov	w3, #0x3                   	// #3
   29b00:	bl	caa0 <mpfr_ui_sub@plt>
   29b04:	ldr	x8, [sp, #32]
   29b08:	ldr	x10, [x19]
   29b0c:	mov	w9, #0x2                   	// #2
   29b10:	cmp	w20, #0x0
   29b14:	sub	x24, x9, x8
   29b18:	add	x8, x10, x24
   29b1c:	mov	w11, #0x40                  	// #64
   29b20:	cset	w22, eq  // eq = none
   29b24:	add	x23, x8, #0xa
   29b28:	str	x11, [sp, #8]
   29b2c:	add	x0, sp, #0x10
   29b30:	mov	x1, x23
   29b34:	bl	bf80 <mpfr_set_prec@plt>
   29b38:	add	x0, sp, #0x10
   29b3c:	mov	x1, x21
   29b40:	mov	w2, wzr
   29b44:	bl	c450 <mpfr_sqr@plt>
   29b48:	add	x0, sp, #0x10
   29b4c:	add	x2, sp, #0x10
   29b50:	mov	w1, #0x1                   	// #1
   29b54:	mov	w3, wzr
   29b58:	bl	caa0 <mpfr_ui_sub@plt>
   29b5c:	add	x0, sp, #0x10
   29b60:	add	x1, sp, #0x10
   29b64:	mov	w2, wzr
   29b68:	bl	c990 <mpfr_sqrt@plt>
   29b6c:	add	x0, sp, #0x10
   29b70:	add	x2, sp, #0x10
   29b74:	mov	x1, x21
   29b78:	mov	w3, wzr
   29b7c:	bl	c670 <mpfr_div@plt>
   29b80:	add	x0, sp, #0x10
   29b84:	add	x1, sp, #0x10
   29b88:	mov	w2, wzr
   29b8c:	bl	c6e0 <mpfr_atan@plt>
   29b90:	ldr	x8, [sp, #32]
   29b94:	mov	x9, #0x2                   	// #2
   29b98:	movk	x9, #0x8000, lsl #48
   29b9c:	add	x9, x9, #0x2
   29ba0:	cmp	x8, x9
   29ba4:	b.lt	29bdc <mpfr_asin@@Base+0x1d8>  // b.tstop
   29ba8:	ldr	x8, [sp, #16]
   29bac:	ldr	x9, [x19]
   29bb0:	ldr	x0, [sp, #40]
   29bb4:	sub	x2, x23, x24
   29bb8:	sub	x10, x8, #0x1
   29bbc:	add	x8, x8, #0x3e
   29bc0:	cmp	x10, #0x0
   29bc4:	csel	x8, x8, x10, lt  // lt = tstop
   29bc8:	asr	x8, x8, #6
   29bcc:	add	x1, x8, #0x1
   29bd0:	add	x3, x9, x22
   29bd4:	bl	c3d0 <mpfr_round_p@plt>
   29bd8:	cbnz	w0, 29c34 <mpfr_asin@@Base+0x230>
   29bdc:	mov	x8, #0x2                   	// #2
   29be0:	ldr	x9, [sp, #8]
   29be4:	movk	x8, #0x8000, lsl #48
   29be8:	sub	x8, x8, x23
   29bec:	sub	x8, x8, #0x103
   29bf0:	cmp	x9, x8
   29bf4:	mov	x8, x9
   29bf8:	b.gt	29c14 <mpfr_asin@@Base+0x210>
   29bfc:	add	x23, x23, x8
   29c00:	cmp	x23, #0x0
   29c04:	cinc	x8, x23, lt  // lt = tstop
   29c08:	asr	x8, x8, #1
   29c0c:	str	x8, [sp, #8]
   29c10:	b	29b2c <mpfr_asin@@Base+0x128>
   29c14:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   29c18:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   29c1c:	mov	w1, #0x73                  	// #115
   29c20:	add	x0, x0, #0x42f
   29c24:	add	x2, x2, #0x922
   29c28:	bl	cb90 <mpfr_assert_fail@plt>
   29c2c:	ldr	x8, [sp, #8]
   29c30:	b	29bfc <mpfr_asin@@Base+0x1f8>
   29c34:	ldr	w3, [sp, #24]
   29c38:	add	x1, sp, #0x10
   29c3c:	mov	x0, x19
   29c40:	mov	w2, w20
   29c44:	bl	c6f0 <mpfr_set4@plt>
   29c48:	mov	w22, w0
   29c4c:	add	x0, sp, #0x10
   29c50:	bl	c110 <mpfr_clear@plt>
   29c54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29c58:	ldr	x1, [x0, #2656]
   29c5c:	add	x0, x0, #0xa60
   29c60:	blr	x1
   29c64:	str	w26, [x25, x0]
   29c68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29c6c:	ldr	x1, [x0, #2592]
   29c70:	add	x0, x0, #0xa20
   29c74:	blr	x1
   29c78:	str	x27, [x25, x0]
   29c7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29c80:	ldr	x1, [x0, #2624]
   29c84:	add	x0, x0, #0xa40
   29c88:	blr	x1
   29c8c:	str	x28, [x25, x0]
   29c90:	ldr	x8, [x19, #16]
   29c94:	cmp	x8, x28
   29c98:	b.gt	29d6c <mpfr_asin@@Base+0x368>
   29c9c:	cmp	x8, x27
   29ca0:	b.lt	29d6c <mpfr_asin@@Base+0x368>  // b.tstop
   29ca4:	cbz	w22, 29cc0 <mpfr_asin@@Base+0x2bc>
   29ca8:	orr	w8, w26, #0x8
   29cac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29cb0:	ldr	x1, [x0, #2656]
   29cb4:	add	x0, x0, #0xa60
   29cb8:	blr	x1
   29cbc:	str	w8, [x25, x0]
   29cc0:	mov	w0, w22
   29cc4:	ldp	x20, x19, [sp, #128]
   29cc8:	ldp	x22, x21, [sp, #112]
   29ccc:	ldp	x24, x23, [sp, #96]
   29cd0:	ldp	x26, x25, [sp, #80]
   29cd4:	ldp	x28, x27, [sp, #64]
   29cd8:	ldp	x29, x30, [sp, #48]
   29cdc:	add	sp, sp, #0x90
   29ce0:	ret
   29ce4:	and	x8, x8, #0xfffffffffffffffe
   29ce8:	cmp	x8, x23
   29cec:	b.ne	29d84 <mpfr_asin@@Base+0x380>  // b.any
   29cf0:	str	x23, [x19, #16]
   29cf4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29cf8:	ldr	x1, [x0, #2656]
   29cfc:	add	x0, x0, #0xa60
   29d00:	blr	x1
   29d04:	mrs	x8, tpidr_el0
   29d08:	ldr	w9, [x8, x0]
   29d0c:	mov	w22, wzr
   29d10:	orr	w9, w9, #0x4
   29d14:	str	w9, [x8, x0]
   29d18:	b	29cc0 <mpfr_asin@@Base+0x2bc>
   29d1c:	bl	c110 <mpfr_clear@plt>
   29d20:	cbz	w22, 29dbc <mpfr_asin@@Base+0x3b8>
   29d24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29d28:	ldr	x1, [x0, #2592]
   29d2c:	add	x0, x0, #0xa20
   29d30:	blr	x1
   29d34:	str	x27, [x25, x0]
   29d38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29d3c:	ldr	x1, [x0, #2624]
   29d40:	add	x0, x0, #0xa40
   29d44:	blr	x1
   29d48:	str	x28, [x25, x0]
   29d4c:	str	x23, [x19, #16]
   29d50:	orr	w8, w26, #0x4
   29d54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29d58:	ldr	x1, [x0, #2656]
   29d5c:	add	x0, x0, #0xa60
   29d60:	blr	x1
   29d64:	mov	w22, wzr
   29d68:	b	29cbc <mpfr_asin@@Base+0x2b8>
   29d6c:	mov	x0, x19
   29d70:	mov	w1, w22
   29d74:	mov	w2, w20
   29d78:	bl	cb80 <mpfr_check_range@plt>
   29d7c:	mov	w22, w0
   29d80:	b	29cc0 <mpfr_asin@@Base+0x2bc>
   29d84:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   29d88:	str	x8, [x19, #16]
   29d8c:	ldr	w8, [x21, #8]
   29d90:	mov	w22, wzr
   29d94:	str	w8, [x19, #8]
   29d98:	b	29cc0 <mpfr_asin@@Base+0x2bc>
   29d9c:	mov	w3, #0x1                   	// #1
   29da0:	mov	x0, x19
   29da4:	mov	x1, x21
   29da8:	mov	w4, w20
   29dac:	bl	c590 <mpfr_round_near_x@plt>
   29db0:	mov	w22, w0
   29db4:	cbnz	w0, 29cc0 <mpfr_asin@@Base+0x2bc>
   29db8:	b	29a64 <mpfr_asin@@Base+0x60>
   29dbc:	ldr	w8, [x21, #8]
   29dc0:	cmp	w8, #0x1
   29dc4:	b.lt	29df0 <mpfr_asin@@Base+0x3ec>  // b.tstop
   29dc8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29dcc:	ldr	x1, [x0, #2704]
   29dd0:	add	x0, x0, #0xa90
   29dd4:	blr	x1
   29dd8:	add	x1, x25, x0
   29ddc:	mov	x0, x19
   29de0:	mov	w2, w20
   29de4:	bl	c3e0 <mpfr_cache@plt>
   29de8:	mov	w22, w0
   29dec:	b	29e34 <mpfr_asin@@Base+0x430>
   29df0:	cmp	w20, #0x3
   29df4:	mov	w8, #0x2                   	// #2
   29df8:	csel	w8, w8, w20, eq  // eq = none
   29dfc:	cmp	w20, #0x2
   29e00:	mov	w9, #0x3                   	// #3
   29e04:	csel	w2, w9, w8, eq  // eq = none
   29e08:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   29e0c:	ldr	x1, [x0, #2704]
   29e10:	add	x0, x0, #0xa90
   29e14:	blr	x1
   29e18:	add	x1, x25, x0
   29e1c:	mov	x0, x19
   29e20:	bl	c3e0 <mpfr_cache@plt>
   29e24:	ldr	w8, [x19, #8]
   29e28:	neg	w22, w0
   29e2c:	neg	w8, w8
   29e30:	str	w8, [x19, #8]
   29e34:	mov	w2, #0x1                   	// #1
   29e38:	mov	x0, x19
   29e3c:	mov	x1, x19
   29e40:	mov	w3, w20
   29e44:	bl	c950 <mpfr_div_2ui@plt>
   29e48:	b	29c54 <mpfr_asin@@Base+0x250>

0000000000029e4c <mpfr_const_euler_internal@@Base>:
   29e4c:	sub	sp, sp, #0x130
   29e50:	stp	x29, x30, [sp, #208]
   29e54:	stp	x28, x27, [sp, #224]
   29e58:	stp	x26, x25, [sp, #240]
   29e5c:	stp	x24, x23, [sp, #256]
   29e60:	stp	x22, x21, [sp, #272]
   29e64:	stp	x20, x19, [sp, #288]
   29e68:	ldr	x26, [x0]
   29e6c:	mov	w19, w1
   29e70:	mov	x20, x0
   29e74:	add	x0, sp, #0x18
   29e78:	add	x21, x26, #0x18
   29e7c:	mov	x1, x21
   29e80:	add	x29, sp, #0xd0
   29e84:	bl	cad0 <mpfr_init2@plt>
   29e88:	add	x0, sp, #0x68
   29e8c:	add	x27, sp, #0x68
   29e90:	bl	2a230 <mpfr_const_euler@@Base+0x34>
   29e94:	add	x0, sp, #0x58
   29e98:	bl	c040 <mpfr_mpz_init@plt>
   29e9c:	add	x0, sp, #0x48
   29ea0:	bl	c040 <mpfr_mpz_init@plt>
   29ea4:	add	x0, sp, #0x38
   29ea8:	bl	c040 <mpfr_mpz_init@plt>
   29eac:	add	x8, x27, #0x30
   29eb0:	cmp	w19, #0x0
   29eb4:	add	x22, x27, #0x20
   29eb8:	add	x23, x27, #0x10
   29ebc:	add	x24, x27, #0x40
   29ec0:	add	x25, x27, #0x50
   29ec4:	cinc	x9, x26, eq  // eq = none
   29ec8:	mov	x26, x8
   29ecc:	mov	w8, #0x40                  	// #64
   29ed0:	str	x9, [sp, #16]
   29ed4:	add	x1, x21, #0x5
   29ed8:	add	x0, sp, #0x58
   29edc:	str	x8, [sp, #8]
   29ee0:	bl	bd60 <__gmpz_set_ui@plt>
   29ee4:	mov	w2, #0x3882                	// #14466
   29ee8:	add	x0, sp, #0x58
   29eec:	add	x1, sp, #0x58
   29ef0:	movk	w2, #0xd, lsl #16
   29ef4:	bl	c1a0 <__gmpz_mul_ui@plt>
   29ef8:	mov	w2, #0x9680                	// #38528
   29efc:	add	x0, sp, #0x58
   29f00:	add	x1, sp, #0x58
   29f04:	movk	w2, #0x98, lsl #16
   29f08:	bl	bf60 <__gmpz_cdiv_q_ui@plt>
   29f0c:	ldr	x8, [sp, #96]
   29f10:	ldr	w9, [sp, #92]
   29f14:	add	x0, sp, #0x58
   29f18:	ldr	x8, [x8]
   29f1c:	cmp	w9, #0x0
   29f20:	csel	x27, xzr, x8, eq  // eq = none
   29f24:	mov	x1, x27
   29f28:	bl	bd60 <__gmpz_set_ui@plt>
   29f2c:	mov	w2, #0xd882                	// #55426
   29f30:	add	x0, sp, #0x58
   29f34:	add	x1, sp, #0x58
   29f38:	movk	w2, #0x4b, lsl #16
   29f3c:	bl	c1a0 <__gmpz_mul_ui@plt>
   29f40:	mov	w2, #0x4240                	// #16960
   29f44:	add	x0, sp, #0x58
   29f48:	add	x1, sp, #0x58
   29f4c:	movk	w2, #0xf, lsl #16
   29f50:	bl	bf60 <__gmpz_cdiv_q_ui@plt>
   29f54:	add	x0, sp, #0x58
   29f58:	add	x1, sp, #0x58
   29f5c:	mov	w2, #0x1                   	// #1
   29f60:	bl	c3c0 <__gmpz_add_ui@plt>
   29f64:	ldr	x8, [sp, #96]
   29f68:	ldr	w9, [sp, #92]
   29f6c:	add	x0, sp, #0x68
   29f70:	mov	x1, xzr
   29f74:	ldr	x8, [x8]
   29f78:	cmp	w9, #0x0
   29f7c:	mov	x3, x27
   29f80:	mov	w4, wzr
   29f84:	csel	x2, xzr, x8, eq  // eq = none
   29f88:	bl	2a274 <mpfr_const_euler@@Base+0x78>
   29f8c:	mov	x0, x22
   29f90:	mov	x1, x22
   29f94:	mov	x2, x23
   29f98:	bl	ca10 <__gmpz_add@plt>
   29f9c:	add	x0, sp, #0x58
   29fa0:	mov	x1, x22
   29fa4:	mov	x2, x24
   29fa8:	bl	c090 <__gmpz_mul@plt>
   29fac:	add	x0, sp, #0x48
   29fb0:	mov	x1, x25
   29fb4:	mov	x2, x21
   29fb8:	bl	c290 <__gmpz_mul_2exp@plt>
   29fbc:	add	x0, sp, #0x38
   29fc0:	add	x1, sp, #0x48
   29fc4:	add	x2, sp, #0x58
   29fc8:	bl	bbe0 <__gmpz_tdiv_q@plt>
   29fcc:	lsl	x4, x27, #1
   29fd0:	mov	x0, x26
   29fd4:	mov	x1, x24
   29fd8:	mov	x2, x25
   29fdc:	mov	x3, xzr
   29fe0:	mov	x5, x27
   29fe4:	mov	w6, wzr
   29fe8:	mov	x28, x26
   29fec:	bl	2a4f8 <mpfr_const_euler@@Base+0x2fc>
   29ff0:	add	x0, sp, #0x58
   29ff4:	mov	x1, x23
   29ff8:	mov	x2, x23
   29ffc:	bl	c090 <__gmpz_mul@plt>
   2a000:	add	x0, sp, #0x58
   2a004:	add	x1, sp, #0x58
   2a008:	mov	x2, x25
   2a00c:	bl	c090 <__gmpz_mul@plt>
   2a010:	add	x0, sp, #0x48
   2a014:	mov	x1, x22
   2a018:	mov	x2, x22
   2a01c:	bl	c090 <__gmpz_mul@plt>
   2a020:	add	x0, sp, #0x48
   2a024:	add	x1, sp, #0x48
   2a028:	mov	x2, x24
   2a02c:	bl	c090 <__gmpz_mul@plt>
   2a030:	add	x0, sp, #0x58
   2a034:	add	x1, sp, #0x58
   2a038:	mov	x2, x21
   2a03c:	bl	c290 <__gmpz_mul_2exp@plt>
   2a040:	add	x0, sp, #0x58
   2a044:	add	x1, sp, #0x58
   2a048:	add	x2, sp, #0x48
   2a04c:	bl	bbe0 <__gmpz_tdiv_q@plt>
   2a050:	add	x0, sp, #0x38
   2a054:	add	x1, sp, #0x38
   2a058:	add	x2, sp, #0x58
   2a05c:	bl	be90 <__gmpz_sub@plt>
   2a060:	subs	x26, x27, #0x1
   2a064:	b.eq	2a158 <mpfr_const_euler_internal@@Base+0x30c>  // b.none
   2a068:	cbz	x27, 2a160 <mpfr_const_euler_internal@@Base+0x314>
   2a06c:	clz	x8, x26
   2a070:	mov	w9, #0x40                  	// #64
   2a074:	sub	x8, x9, x8
   2a078:	add	x1, x8, x21
   2a07c:	add	x0, sp, #0x18
   2a080:	bl	bf80 <mpfr_set_prec@plt>
   2a084:	add	x0, sp, #0x18
   2a088:	mov	w3, #0x1                   	// #1
   2a08c:	mov	x1, x27
   2a090:	mov	x2, xzr
   2a094:	bl	c640 <mpfr_set_ui_2exp@plt>
   2a098:	add	x0, sp, #0x18
   2a09c:	add	x1, sp, #0x18
   2a0a0:	mov	w2, #0x1                   	// #1
   2a0a4:	bl	c130 <mpfr_log@plt>
   2a0a8:	add	x0, sp, #0x18
   2a0ac:	add	x1, sp, #0x18
   2a0b0:	mov	w3, #0x1                   	// #1
   2a0b4:	mov	x2, x21
   2a0b8:	bl	c320 <mpfr_mul_2ui@plt>
   2a0bc:	add	x0, sp, #0x18
   2a0c0:	add	x1, sp, #0x38
   2a0c4:	add	x2, sp, #0x18
   2a0c8:	mov	w3, #0x1                   	// #1
   2a0cc:	bl	c0d0 <mpfr_z_sub@plt>
   2a0d0:	add	x0, sp, #0x18
   2a0d4:	add	x1, sp, #0x18
   2a0d8:	mov	w3, #0x1                   	// #1
   2a0dc:	mov	x2, x21
   2a0e0:	bl	c950 <mpfr_div_2ui@plt>
   2a0e4:	ldr	x8, [sp, #40]
   2a0e8:	mov	x9, #0xfffffffffffffeff    	// #-257
   2a0ec:	movk	x9, #0x7fff, lsl #48
   2a0f0:	add	x9, x9, #0x105
   2a0f4:	cmp	x8, x9
   2a0f8:	mov	x26, x28
   2a0fc:	b.lt	2a12c <mpfr_const_euler_internal@@Base+0x2e0>  // b.tstop
   2a100:	ldp	x3, x8, [sp, #16]
   2a104:	ldr	x0, [sp, #48]
   2a108:	sub	x2, x21, #0x3
   2a10c:	sub	x9, x8, #0x1
   2a110:	add	x8, x8, #0x3e
   2a114:	cmp	x9, #0x0
   2a118:	csel	x8, x8, x9, lt  // lt = tstop
   2a11c:	asr	x8, x8, #6
   2a120:	add	x1, x8, #0x1
   2a124:	bl	c3d0 <mpfr_round_p@plt>
   2a128:	cbnz	w0, 2a198 <mpfr_const_euler_internal@@Base+0x34c>
   2a12c:	ldr	x27, [sp, #8]
   2a130:	mov	x8, #0xfffffffffffffeff    	// #-257
   2a134:	movk	x8, #0x7fff, lsl #48
   2a138:	sub	x8, x8, x21
   2a13c:	cmp	x27, x8
   2a140:	b.gt	2a17c <mpfr_const_euler_internal@@Base+0x330>
   2a144:	add	x21, x21, x27
   2a148:	cmp	x21, #0x0
   2a14c:	cinc	x8, x21, lt  // lt = tstop
   2a150:	asr	x8, x8, #1
   2a154:	b	29ed4 <mpfr_const_euler_internal@@Base+0x88>
   2a158:	mov	x8, xzr
   2a15c:	b	2a078 <mpfr_const_euler_internal@@Base+0x22c>
   2a160:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2a164:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2a168:	mov	w1, #0xf9                  	// #249
   2a16c:	add	x0, x0, #0x436
   2a170:	add	x2, x2, #0x444
   2a174:	bl	cb90 <mpfr_assert_fail@plt>
   2a178:	b	2a06c <mpfr_const_euler_internal@@Base+0x220>
   2a17c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2a180:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2a184:	mov	w1, #0x107                 	// #263
   2a188:	add	x0, x0, #0x436
   2a18c:	add	x2, x2, #0x44c
   2a190:	bl	cb90 <mpfr_assert_fail@plt>
   2a194:	b	2a144 <mpfr_const_euler_internal@@Base+0x2f8>
   2a198:	ldr	w3, [sp, #32]
   2a19c:	add	x1, sp, #0x18
   2a1a0:	mov	x0, x20
   2a1a4:	mov	w2, w19
   2a1a8:	bl	c6f0 <mpfr_set4@plt>
   2a1ac:	mov	w19, w0
   2a1b0:	add	x0, sp, #0x18
   2a1b4:	bl	c110 <mpfr_clear@plt>
   2a1b8:	add	x0, sp, #0x58
   2a1bc:	bl	c210 <mpfr_mpz_clear@plt>
   2a1c0:	add	x0, sp, #0x48
   2a1c4:	bl	c210 <mpfr_mpz_clear@plt>
   2a1c8:	add	x0, sp, #0x38
   2a1cc:	bl	c210 <mpfr_mpz_clear@plt>
   2a1d0:	add	x0, sp, #0x68
   2a1d4:	bl	2a6b4 <mpfr_const_euler@@Base+0x4b8>
   2a1d8:	mov	w0, w19
   2a1dc:	ldp	x20, x19, [sp, #288]
   2a1e0:	ldp	x22, x21, [sp, #272]
   2a1e4:	ldp	x24, x23, [sp, #256]
   2a1e8:	ldp	x26, x25, [sp, #240]
   2a1ec:	ldp	x28, x27, [sp, #224]
   2a1f0:	ldp	x29, x30, [sp, #208]
   2a1f4:	add	sp, sp, #0x130
   2a1f8:	ret

000000000002a1fc <mpfr_const_euler@@Base>:
   2a1fc:	stp	x29, x30, [sp, #-16]!
   2a200:	mov	x29, sp
   2a204:	mov	w2, w1
   2a208:	mov	x8, x0
   2a20c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2a210:	ldr	x1, [x0, #2688]
   2a214:	add	x0, x0, #0xa80
   2a218:	blr	x1
   2a21c:	mrs	x9, tpidr_el0
   2a220:	add	x1, x9, x0
   2a224:	mov	x0, x8
   2a228:	ldp	x29, x30, [sp], #16
   2a22c:	b	c3e0 <mpfr_cache@plt>
   2a230:	stp	x29, x30, [sp, #-32]!
   2a234:	str	x19, [sp, #16]
   2a238:	mov	x29, sp
   2a23c:	mov	x19, x0
   2a240:	bl	c040 <mpfr_mpz_init@plt>
   2a244:	add	x0, x19, #0x10
   2a248:	bl	c040 <mpfr_mpz_init@plt>
   2a24c:	add	x0, x19, #0x20
   2a250:	bl	c040 <mpfr_mpz_init@plt>
   2a254:	add	x0, x19, #0x30
   2a258:	bl	c040 <mpfr_mpz_init@plt>
   2a25c:	add	x0, x19, #0x40
   2a260:	bl	c040 <mpfr_mpz_init@plt>
   2a264:	add	x0, x19, #0x50
   2a268:	ldr	x19, [sp, #16]
   2a26c:	ldp	x29, x30, [sp], #32
   2a270:	b	c040 <mpfr_mpz_init@plt>
   2a274:	sub	sp, sp, #0x150
   2a278:	sub	x8, x2, x1
   2a27c:	stp	x22, x21, [sp, #304]
   2a280:	stp	x20, x19, [sp, #320]
   2a284:	mov	x21, x3
   2a288:	mov	x22, x1
   2a28c:	cmp	x8, #0x1
   2a290:	mov	x19, x0
   2a294:	stp	x29, x30, [sp, #240]
   2a298:	str	x28, [sp, #256]
   2a29c:	stp	x26, x25, [sp, #272]
   2a2a0:	stp	x24, x23, [sp, #288]
   2a2a4:	add	x29, sp, #0xf0
   2a2a8:	b.ne	2a338 <mpfr_const_euler@@Base+0x13c>  // b.any
   2a2ac:	mov	x0, x19
   2a2b0:	mov	x1, x21
   2a2b4:	bl	bd60 <__gmpz_set_ui@plt>
   2a2b8:	mov	x0, x19
   2a2bc:	mov	x1, x19
   2a2c0:	mov	x2, x19
   2a2c4:	bl	c090 <__gmpz_mul@plt>
   2a2c8:	add	x20, x19, #0x10
   2a2cc:	add	x21, x22, #0x1
   2a2d0:	mov	x0, x20
   2a2d4:	mov	x1, x21
   2a2d8:	bl	bd60 <__gmpz_set_ui@plt>
   2a2dc:	mov	x0, x20
   2a2e0:	mov	x1, x20
   2a2e4:	mov	x2, x20
   2a2e8:	bl	c090 <__gmpz_mul@plt>
   2a2ec:	add	x0, x19, #0x30
   2a2f0:	mov	w1, #0x1                   	// #1
   2a2f4:	bl	bd60 <__gmpz_set_ui@plt>
   2a2f8:	add	x0, x19, #0x40
   2a2fc:	mov	x1, x21
   2a300:	bl	bd60 <__gmpz_set_ui@plt>
   2a304:	add	x0, x19, #0x20
   2a308:	mov	x1, x19
   2a30c:	bl	c050 <__gmpz_set@plt>
   2a310:	add	x0, x19, #0x50
   2a314:	mov	x1, x19
   2a318:	ldp	x20, x19, [sp, #320]
   2a31c:	ldp	x22, x21, [sp, #304]
   2a320:	ldp	x24, x23, [sp, #288]
   2a324:	ldp	x26, x25, [sp, #272]
   2a328:	ldr	x28, [sp, #256]
   2a32c:	ldp	x29, x30, [sp, #240]
   2a330:	add	sp, sp, #0x150
   2a334:	b	c050 <__gmpz_set@plt>
   2a338:	add	x8, x2, x22
   2a33c:	sub	x0, x29, #0x60
   2a340:	mov	w20, w4
   2a344:	mov	x23, x2
   2a348:	lsr	x24, x8, #1
   2a34c:	sub	x25, x29, #0x60
   2a350:	bl	2a230 <mpfr_const_euler@@Base+0x34>
   2a354:	add	x0, sp, #0x30
   2a358:	add	x26, sp, #0x30
   2a35c:	bl	2a230 <mpfr_const_euler@@Base+0x34>
   2a360:	sub	x0, x29, #0x60
   2a364:	mov	w4, #0x1                   	// #1
   2a368:	mov	x1, x22
   2a36c:	mov	x2, x24
   2a370:	mov	x3, x21
   2a374:	bl	2a274 <mpfr_const_euler@@Base+0x78>
   2a378:	add	x0, sp, #0x30
   2a37c:	mov	w4, #0x1                   	// #1
   2a380:	mov	x1, x24
   2a384:	mov	x2, x23
   2a388:	mov	x3, x21
   2a38c:	bl	2a274 <mpfr_const_euler@@Base+0x78>
   2a390:	add	x0, sp, #0x20
   2a394:	bl	c040 <mpfr_mpz_init@plt>
   2a398:	add	x0, sp, #0x10
   2a39c:	bl	c040 <mpfr_mpz_init@plt>
   2a3a0:	mov	x0, sp
   2a3a4:	bl	c040 <mpfr_mpz_init@plt>
   2a3a8:	cbz	w20, 2a3bc <mpfr_const_euler@@Base+0x1c0>
   2a3ac:	sub	x1, x29, #0x60
   2a3b0:	add	x2, sp, #0x30
   2a3b4:	mov	x0, x19
   2a3b8:	bl	c090 <__gmpz_mul@plt>
   2a3bc:	add	x22, x26, #0x10
   2a3c0:	add	x0, x19, #0x10
   2a3c4:	add	x1, x25, #0x10
   2a3c8:	mov	x2, x22
   2a3cc:	bl	c090 <__gmpz_mul@plt>
   2a3d0:	add	x23, x25, #0x40
   2a3d4:	add	x21, x26, #0x40
   2a3d8:	add	x0, x19, #0x40
   2a3dc:	mov	x1, x23
   2a3e0:	mov	x2, x21
   2a3e4:	bl	c090 <__gmpz_mul@plt>
   2a3e8:	add	x2, x26, #0x20
   2a3ec:	add	x0, sp, #0x20
   2a3f0:	sub	x1, x29, #0x60
   2a3f4:	bl	c090 <__gmpz_mul@plt>
   2a3f8:	add	x2, x25, #0x20
   2a3fc:	mov	x0, sp
   2a400:	mov	x1, x22
   2a404:	bl	c090 <__gmpz_mul@plt>
   2a408:	add	x0, x19, #0x20
   2a40c:	add	x1, sp, #0x20
   2a410:	mov	x2, sp
   2a414:	bl	ca10 <__gmpz_add@plt>
   2a418:	cbz	w20, 2a448 <mpfr_const_euler@@Base+0x24c>
   2a41c:	add	x20, x19, #0x30
   2a420:	sub	x8, x29, #0x60
   2a424:	add	x1, x8, #0x30
   2a428:	mov	x0, x20
   2a42c:	mov	x2, x21
   2a430:	bl	c090 <__gmpz_mul@plt>
   2a434:	add	x8, sp, #0x30
   2a438:	add	x1, x8, #0x30
   2a43c:	mov	x0, x20
   2a440:	mov	x2, x23
   2a444:	bl	c2f0 <__gmpz_addmul@plt>
   2a448:	add	x8, sp, #0x30
   2a44c:	add	x2, x8, #0x50
   2a450:	add	x0, sp, #0x10
   2a454:	sub	x1, x29, #0x60
   2a458:	sub	x20, x29, #0x60
   2a45c:	bl	c090 <__gmpz_mul@plt>
   2a460:	add	x0, sp, #0x10
   2a464:	add	x1, sp, #0x10
   2a468:	mov	x2, x23
   2a46c:	bl	c090 <__gmpz_mul@plt>
   2a470:	add	x2, x20, #0x50
   2a474:	mov	x0, sp
   2a478:	mov	x1, x22
   2a47c:	bl	c090 <__gmpz_mul@plt>
   2a480:	add	x2, x20, #0x30
   2a484:	mov	x0, sp
   2a488:	add	x1, sp, #0x20
   2a48c:	bl	c2f0 <__gmpz_addmul@plt>
   2a490:	mov	x0, sp
   2a494:	mov	x1, sp
   2a498:	mov	x2, x21
   2a49c:	bl	c090 <__gmpz_mul@plt>
   2a4a0:	add	x0, x19, #0x50
   2a4a4:	add	x1, sp, #0x10
   2a4a8:	mov	x2, sp
   2a4ac:	bl	ca10 <__gmpz_add@plt>
   2a4b0:	sub	x0, x29, #0x60
   2a4b4:	bl	2a6b4 <mpfr_const_euler@@Base+0x4b8>
   2a4b8:	add	x0, sp, #0x30
   2a4bc:	bl	2a6b4 <mpfr_const_euler@@Base+0x4b8>
   2a4c0:	add	x0, sp, #0x20
   2a4c4:	bl	c210 <mpfr_mpz_clear@plt>
   2a4c8:	add	x0, sp, #0x10
   2a4cc:	bl	c210 <mpfr_mpz_clear@plt>
   2a4d0:	mov	x0, sp
   2a4d4:	bl	c210 <mpfr_mpz_clear@plt>
   2a4d8:	ldp	x20, x19, [sp, #320]
   2a4dc:	ldp	x22, x21, [sp, #304]
   2a4e0:	ldp	x24, x23, [sp, #288]
   2a4e4:	ldp	x26, x25, [sp, #272]
   2a4e8:	ldr	x28, [sp, #256]
   2a4ec:	ldp	x29, x30, [sp, #240]
   2a4f0:	add	sp, sp, #0x150
   2a4f4:	ret
   2a4f8:	sub	sp, sp, #0x80
   2a4fc:	sub	x8, x4, x3
   2a500:	stp	x24, x23, [sp, #80]
   2a504:	stp	x22, x21, [sp, #96]
   2a508:	stp	x20, x19, [sp, #112]
   2a50c:	mov	x22, x5
   2a510:	mov	x24, x3
   2a514:	mov	x21, x2
   2a518:	mov	x19, x1
   2a51c:	cmp	x8, #0x1
   2a520:	mov	x20, x0
   2a524:	stp	x29, x30, [sp, #48]
   2a528:	stp	x26, x25, [sp, #64]
   2a52c:	add	x29, sp, #0x30
   2a530:	b.ne	2a588 <mpfr_const_euler@@Base+0x38c>  // b.any
   2a534:	cbz	x24, 2a678 <mpfr_const_euler@@Base+0x47c>
   2a538:	lsl	x8, x24, #1
   2a53c:	sub	x1, x8, #0x1
   2a540:	mov	x0, x20
   2a544:	bl	bd60 <__gmpz_set_ui@plt>
   2a548:	mov	w2, #0x3                   	// #3
   2a54c:	mov	x0, x20
   2a550:	mov	x1, x20
   2a554:	bl	c390 <__gmpz_pow_ui@plt>
   2a558:	lsl	x1, x24, #5
   2a55c:	mov	x0, x19
   2a560:	bl	bd60 <__gmpz_set_ui@plt>
   2a564:	mov	x0, x19
   2a568:	mov	x1, x19
   2a56c:	mov	x2, x22
   2a570:	bl	c1a0 <__gmpz_mul_ui@plt>
   2a574:	mov	x0, x19
   2a578:	mov	x1, x19
   2a57c:	mov	x2, x22
   2a580:	bl	c1a0 <__gmpz_mul_ui@plt>
   2a584:	b	2a690 <mpfr_const_euler@@Base+0x494>
   2a588:	add	x8, x4, x24
   2a58c:	sub	x0, x29, #0x10
   2a590:	mov	w23, w6
   2a594:	mov	x25, x4
   2a598:	lsr	x26, x8, #1
   2a59c:	bl	c040 <mpfr_mpz_init@plt>
   2a5a0:	add	x0, sp, #0x10
   2a5a4:	bl	c040 <mpfr_mpz_init@plt>
   2a5a8:	mov	x0, sp
   2a5ac:	bl	c040 <mpfr_mpz_init@plt>
   2a5b0:	mov	w6, #0x1                   	// #1
   2a5b4:	mov	x0, x20
   2a5b8:	mov	x1, x19
   2a5bc:	mov	x2, x21
   2a5c0:	mov	x3, x24
   2a5c4:	mov	x4, x26
   2a5c8:	mov	x5, x22
   2a5cc:	bl	2a4f8 <mpfr_const_euler@@Base+0x2fc>
   2a5d0:	sub	x0, x29, #0x10
   2a5d4:	add	x1, sp, #0x10
   2a5d8:	mov	x2, sp
   2a5dc:	mov	w6, #0x1                   	// #1
   2a5e0:	mov	x3, x26
   2a5e4:	mov	x4, x25
   2a5e8:	mov	x5, x22
   2a5ec:	bl	2a4f8 <mpfr_const_euler@@Base+0x2fc>
   2a5f0:	add	x2, sp, #0x10
   2a5f4:	mov	x0, x21
   2a5f8:	mov	x1, x21
   2a5fc:	bl	c090 <__gmpz_mul@plt>
   2a600:	mov	x0, sp
   2a604:	mov	x1, sp
   2a608:	mov	x2, x20
   2a60c:	bl	c090 <__gmpz_mul@plt>
   2a610:	mov	x2, sp
   2a614:	mov	x0, x21
   2a618:	mov	x1, x21
   2a61c:	bl	ca10 <__gmpz_add@plt>
   2a620:	cbz	w23, 2a634 <mpfr_const_euler@@Base+0x438>
   2a624:	sub	x2, x29, #0x10
   2a628:	mov	x0, x20
   2a62c:	mov	x1, x20
   2a630:	bl	c090 <__gmpz_mul@plt>
   2a634:	add	x2, sp, #0x10
   2a638:	mov	x0, x19
   2a63c:	mov	x1, x19
   2a640:	bl	c090 <__gmpz_mul@plt>
   2a644:	sub	x0, x29, #0x10
   2a648:	bl	c210 <mpfr_mpz_clear@plt>
   2a64c:	add	x0, sp, #0x10
   2a650:	bl	c210 <mpfr_mpz_clear@plt>
   2a654:	mov	x0, sp
   2a658:	bl	c210 <mpfr_mpz_clear@plt>
   2a65c:	ldp	x20, x19, [sp, #112]
   2a660:	ldp	x22, x21, [sp, #96]
   2a664:	ldp	x24, x23, [sp, #80]
   2a668:	ldp	x26, x25, [sp, #64]
   2a66c:	ldp	x29, x30, [sp, #48]
   2a670:	add	sp, sp, #0x80
   2a674:	ret
   2a678:	mov	w1, #0x1                   	// #1
   2a67c:	mov	x0, x20
   2a680:	bl	bd60 <__gmpz_set_ui@plt>
   2a684:	lsl	x1, x22, #2
   2a688:	mov	x0, x19
   2a68c:	bl	bd60 <__gmpz_set_ui@plt>
   2a690:	mov	x0, x21
   2a694:	mov	x1, x20
   2a698:	ldp	x20, x19, [sp, #112]
   2a69c:	ldp	x22, x21, [sp, #96]
   2a6a0:	ldp	x24, x23, [sp, #80]
   2a6a4:	ldp	x26, x25, [sp, #64]
   2a6a8:	ldp	x29, x30, [sp, #48]
   2a6ac:	add	sp, sp, #0x80
   2a6b0:	b	c050 <__gmpz_set@plt>
   2a6b4:	stp	x29, x30, [sp, #-32]!
   2a6b8:	str	x19, [sp, #16]
   2a6bc:	mov	x29, sp
   2a6c0:	mov	x19, x0
   2a6c4:	bl	c210 <mpfr_mpz_clear@plt>
   2a6c8:	add	x0, x19, #0x10
   2a6cc:	bl	c210 <mpfr_mpz_clear@plt>
   2a6d0:	add	x0, x19, #0x20
   2a6d4:	bl	c210 <mpfr_mpz_clear@plt>
   2a6d8:	add	x0, x19, #0x30
   2a6dc:	bl	c210 <mpfr_mpz_clear@plt>
   2a6e0:	add	x0, x19, #0x40
   2a6e4:	bl	c210 <mpfr_mpz_clear@plt>
   2a6e8:	add	x0, x19, #0x50
   2a6ec:	ldr	x19, [sp, #16]
   2a6f0:	ldp	x29, x30, [sp], #32
   2a6f4:	b	c210 <mpfr_mpz_clear@plt>

000000000002a6f8 <mpfr_cos@@Base>:
   2a6f8:	stp	x29, x30, [sp, #-96]!
   2a6fc:	stp	x28, x27, [sp, #16]
   2a700:	stp	x26, x25, [sp, #32]
   2a704:	stp	x24, x23, [sp, #48]
   2a708:	stp	x22, x21, [sp, #64]
   2a70c:	stp	x20, x19, [sp, #80]
   2a710:	mov	x29, sp
   2a714:	sub	sp, sp, #0x1b0
   2a718:	ldr	x10, [x1, #16]
   2a71c:	mov	x24, #0xfffffffffffffeff    	// #-257
   2a720:	movk	x24, #0x7fff, lsl #48
   2a724:	add	x8, x24, #0x105
   2a728:	mov	w26, w2
   2a72c:	cmp	x10, x8
   2a730:	mov	x19, x0
   2a734:	b.lt	2adfc <mpfr_cos@@Base+0x704>  // b.tstop
   2a738:	mov	x28, x1
   2a73c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2a740:	ldr	x1, [x0, #2656]
   2a744:	add	x0, x0, #0xa60
   2a748:	blr	x1
   2a74c:	mrs	x25, tpidr_el0
   2a750:	ldr	w23, [x25, x0]
   2a754:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2a758:	ldr	x1, [x0, #2592]
   2a75c:	add	x0, x0, #0xa20
   2a760:	blr	x1
   2a764:	ldr	x21, [x25, x0]
   2a768:	mov	x8, x0
   2a76c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2a770:	ldr	x1, [x0, #2624]
   2a774:	add	x0, x0, #0xa40
   2a778:	blr	x1
   2a77c:	ldr	x27, [x25, x0]
   2a780:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2a784:	str	x9, [x25, x8]
   2a788:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2a78c:	str	x8, [x25, x0]
   2a790:	tbz	x10, #63, 2a7ac <mpfr_cos@@Base+0xb4>
   2a794:	ldr	x8, [x19]
   2a798:	mov	w9, #0x1                   	// #1
   2a79c:	sub	x2, x9, x10, lsl #1
   2a7a0:	add	x8, x8, #0x1
   2a7a4:	cmp	x2, x8
   2a7a8:	b.hi	2ae7c <mpfr_cos@@Base+0x784>  // b.pmore
   2a7ac:	ldr	x20, [x19]
   2a7b0:	mov	w8, #0x7530                	// #30000
   2a7b4:	cmp	x20, x8
   2a7b8:	b.lt	2a7e0 <mpfr_cos@@Base+0xe8>  // b.tstop
   2a7bc:	mov	x0, xzr
   2a7c0:	mov	x1, x19
   2a7c4:	mov	x2, x28
   2a7c8:	mov	w3, w26
   2a7cc:	bl	c0c0 <mpfr_sincos_fast@plt>
   2a7d0:	asr	w8, w0, #2
   2a7d4:	cmp	w8, #0x2
   2a7d8:	csinv	w22, w8, wzr, ne  // ne = any
   2a7dc:	b	2af94 <mpfr_cos@@Base+0x89c>
   2a7e0:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   2a7e4:	movk	x8, #0x5556
   2a7e8:	smulh	x8, x20, x8
   2a7ec:	add	x0, x8, x8, lsr #63
   2a7f0:	str	x10, [sp, #80]
   2a7f4:	str	w23, [sp, #44]
   2a7f8:	stp	x21, x19, [sp, #48]
   2a7fc:	bl	bfd0 <__gmpfr_isqrt@plt>
   2a800:	subs	x19, x20, #0x1
   2a804:	mov	x23, x0
   2a808:	b.eq	2ae50 <mpfr_cos@@Base+0x758>  // b.none
   2a80c:	ldr	x10, [sp, #80]
   2a810:	b.le	2ae5c <mpfr_cos@@Base+0x764>
   2a814:	clz	x8, x19
   2a818:	mov	w9, #0x80                  	// #128
   2a81c:	sub	w8, w9, w8, lsl #1
   2a820:	sxtw	x8, w8
   2a824:	add	x9, x20, x23, lsl #1
   2a828:	add	x19, x9, x8
   2a82c:	cmp	x10, #0x3
   2a830:	add	x22, x19, #0x4
   2a834:	b.lt	2a878 <mpfr_cos@@Base+0x180>  // b.tstop
   2a838:	add	x8, x22, x10
   2a83c:	add	x9, x24, #0x2
   2a840:	cmp	x8, x9
   2a844:	sub	x24, x8, #0x1
   2a848:	b.ge	2af1c <mpfr_cos@@Base+0x824>  // b.tcont
   2a84c:	sub	x0, x29, #0xb8
   2a850:	mov	x1, x24
   2a854:	bl	cad0 <mpfr_init2@plt>
   2a858:	sub	x0, x29, #0x98
   2a85c:	mov	x1, x22
   2a860:	bl	cad0 <mpfr_init2@plt>
   2a864:	mov	x24, #0xfffffffffffffeff    	// #-257
   2a868:	mov	w8, #0x1                   	// #1
   2a86c:	movk	x24, #0x7fff, lsl #48
   2a870:	str	w8, [sp, #100]
   2a874:	b	2a87c <mpfr_cos@@Base+0x184>
   2a878:	str	wzr, [sp, #100]
   2a87c:	sub	x8, x24, #0x4
   2a880:	cmp	x19, x8
   2a884:	b.gt	2b03c <mpfr_cos@@Base+0x944>
   2a888:	add	x8, x19, #0x3
   2a88c:	add	x9, x19, #0x42
   2a890:	cmp	x8, #0x0
   2a894:	csel	x8, x9, x8, lt  // lt = tstop
   2a898:	asr	x8, x8, #6
   2a89c:	cmp	x19, #0x1fd
   2a8a0:	add	x19, x8, #0x1
   2a8a4:	b.lt	2a8b8 <mpfr_cos@@Base+0x1c0>  // b.tstop
   2a8a8:	lsl	x0, x19, #4
   2a8ac:	str	x0, [sp, #104]
   2a8b0:	bl	cd50 <mpfr_allocate_func@plt>
   2a8b4:	b	2a8c4 <mpfr_cos@@Base+0x1cc>
   2a8b8:	add	x8, sp, #0x68
   2a8bc:	add	x0, x8, #0x10
   2a8c0:	str	xzr, [sp, #104]
   2a8c4:	add	x8, x0, x19, lsl #3
   2a8c8:	cmp	w26, #0x0
   2a8cc:	stp	x8, x22, [x29, #-96]
   2a8d0:	cinc	x8, x20, eq  // eq = none
   2a8d4:	mov	w9, #0x1                   	// #1
   2a8d8:	add	x23, x23, #0x1
   2a8dc:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   2a8e0:	stp	x8, x28, [sp, #64]
   2a8e4:	mov	w8, #0x40                  	// #64
   2a8e8:	str	x0, [sp, #112]
   2a8ec:	str	xzr, [sp, #8]
   2a8f0:	stur	x0, [x29, #-64]
   2a8f4:	stur	x22, [x29, #-120]
   2a8f8:	stur	w9, [x29, #-80]
   2a8fc:	stur	w9, [x29, #-112]
   2a900:	str	x8, [sp, #88]
   2a904:	stp	x23, x27, [sp, #24]
   2a908:	ldr	w8, [sp, #100]
   2a90c:	cbz	w8, 2a978 <mpfr_cos@@Base+0x280>
   2a910:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2a914:	ldr	x1, [x0, #2704]
   2a918:	add	x0, x0, #0xa90
   2a91c:	blr	x1
   2a920:	add	x1, x25, x0
   2a924:	sub	x0, x29, #0xb8
   2a928:	mov	w2, wzr
   2a92c:	bl	c3e0 <mpfr_cache@plt>
   2a930:	sub	x0, x29, #0xb8
   2a934:	sub	x1, x29, #0xb8
   2a938:	mov	w2, #0x1                   	// #1
   2a93c:	mov	w3, wzr
   2a940:	bl	c320 <mpfr_mul_2ui@plt>
   2a944:	sub	x0, x29, #0x98
   2a948:	sub	x2, x29, #0xb8
   2a94c:	mov	x1, x28
   2a950:	mov	w3, wzr
   2a954:	bl	cd70 <mpfr_remainder@plt>
   2a958:	ldur	x8, [x29, #-136]
   2a95c:	cmp	x8, x19
   2a960:	b.eq	2ad0c <mpfr_cos@@Base+0x614>  // b.none
   2a964:	sub	x0, x29, #0x58
   2a968:	sub	x1, x29, #0x98
   2a96c:	sub	x2, x29, #0x98
   2a970:	mov	w3, #0x2                   	// #2
   2a974:	b	2a988 <mpfr_cos@@Base+0x290>
   2a978:	sub	x0, x29, #0x58
   2a97c:	mov	w3, #0x2                   	// #2
   2a980:	mov	x1, x28
   2a984:	mov	x2, x28
   2a988:	bl	be00 <mpfr_mul@plt>
   2a98c:	ldur	x8, [x29, #-72]
   2a990:	sub	x0, x29, #0x18
   2a994:	bic	x9, x8, x8, asr #63
   2a998:	add	x20, x23, x9, lsr #1
   2a99c:	sub	x8, x8, x20, lsl #1
   2a9a0:	stur	x8, [x29, #-72]
   2a9a4:	bl	c040 <mpfr_mpz_init@plt>
   2a9a8:	sub	x0, x29, #0x38
   2a9ac:	bl	c040 <mpfr_mpz_init@plt>
   2a9b0:	sub	x0, x29, #0x28
   2a9b4:	bl	c040 <mpfr_mpz_init@plt>
   2a9b8:	sub	x0, x29, #0x18
   2a9bc:	sub	x1, x29, #0x58
   2a9c0:	bl	cb10 <mpfr_get_z_2exp@plt>
   2a9c4:	mov	x28, x0
   2a9c8:	sub	x0, x29, #0x18
   2a9cc:	mov	x1, xzr
   2a9d0:	bl	bb50 <__gmpz_scan1@plt>
   2a9d4:	mov	x23, x0
   2a9d8:	sub	x0, x29, #0x18
   2a9dc:	sub	x1, x29, #0x18
   2a9e0:	mov	x2, x23
   2a9e4:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   2a9e8:	ldur	x8, [x29, #-72]
   2a9ec:	ldur	x24, [x29, #-120]
   2a9f0:	neg	x8, x8
   2a9f4:	sdiv	x8, x24, x8
   2a9f8:	cmp	x8, #0x0
   2a9fc:	cinc	x8, x8, eq  // eq = none
   2aa00:	subs	x21, x8, #0x1
   2aa04:	b.eq	2adbc <mpfr_cos@@Base+0x6c4>  // b.none
   2aa08:	cbz	x8, 2adc4 <mpfr_cos@@Base+0x6cc>
   2aa0c:	clz	x8, x21
   2aa10:	mov	w9, #0x84                  	// #132
   2aa14:	sub	w8, w9, w8, lsl #1
   2aa18:	sxtw	x21, w8
   2aa1c:	sub	x0, x29, #0x38
   2aa20:	mov	w1, #0x1                   	// #1
   2aa24:	bl	bd60 <__gmpz_set_ui@plt>
   2aa28:	add	x27, x21, x24
   2aa2c:	sub	x0, x29, #0x38
   2aa30:	sub	x1, x29, #0x38
   2aa34:	mov	x2, x27
   2aa38:	bl	c290 <__gmpz_mul_2exp@plt>
   2aa3c:	sub	x0, x29, #0x28
   2aa40:	sub	x1, x29, #0x38
   2aa44:	bl	c050 <__gmpz_set@plt>
   2aa48:	sub	x0, x29, #0x28
   2aa4c:	mov	w1, #0x2                   	// #2
   2aa50:	bl	cbb0 <__gmpz_sizeinbase@plt>
   2aa54:	cmp	x0, x21
   2aa58:	b.ge	2aa64 <mpfr_cos@@Base+0x36c>  // b.tcont
   2aa5c:	mov	x21, xzr
   2aa60:	b	2ab3c <mpfr_cos@@Base+0x444>
   2aa64:	mov	x24, x0
   2aa68:	str	w26, [sp, #20]
   2aa6c:	mov	x26, xzr
   2aa70:	add	x28, x23, x28
   2aa74:	sub	x0, x29, #0x18
   2aa78:	mov	w1, #0x2                   	// #2
   2aa7c:	add	x23, x26, #0x1
   2aa80:	bl	cbb0 <__gmpz_sizeinbase@plt>
   2aa84:	subs	x24, x0, x24
   2aa88:	b.le	2aaa0 <mpfr_cos@@Base+0x3a8>
   2aa8c:	sub	x0, x29, #0x18
   2aa90:	sub	x1, x29, #0x18
   2aa94:	mov	x2, x24
   2aa98:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   2aa9c:	add	x28, x24, x28
   2aaa0:	sub	x0, x29, #0x28
   2aaa4:	sub	x1, x29, #0x28
   2aaa8:	sub	x2, x29, #0x18
   2aaac:	bl	c090 <__gmpz_mul@plt>
   2aab0:	neg	x2, x28
   2aab4:	sub	x0, x29, #0x28
   2aab8:	sub	x1, x29, #0x28
   2aabc:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   2aac0:	lsr	x8, x23, #32
   2aac4:	cbnz	x8, 2aad4 <mpfr_cos@@Base+0x3dc>
   2aac8:	add	x8, x26, #0x2
   2aacc:	mul	x2, x8, x23
   2aad0:	b	2aae8 <mpfr_cos@@Base+0x3f0>
   2aad4:	sub	x0, x29, #0x28
   2aad8:	sub	x1, x29, #0x28
   2aadc:	mov	x2, x23
   2aae0:	bl	c660 <__gmpz_fdiv_q_ui@plt>
   2aae4:	add	x2, x26, #0x2
   2aae8:	sub	x0, x29, #0x28
   2aaec:	sub	x1, x29, #0x28
   2aaf0:	bl	c660 <__gmpz_fdiv_q_ui@plt>
   2aaf4:	and	x8, x23, #0x3
   2aaf8:	sub	x0, x29, #0x38
   2aafc:	sub	x1, x29, #0x38
   2ab00:	sub	x2, x29, #0x28
   2ab04:	cmp	x8, #0x1
   2ab08:	b.ne	2ab14 <mpfr_cos@@Base+0x41c>  // b.any
   2ab0c:	bl	be90 <__gmpz_sub@plt>
   2ab10:	b	2ab18 <mpfr_cos@@Base+0x420>
   2ab14:	bl	ca10 <__gmpz_add@plt>
   2ab18:	sub	x0, x29, #0x28
   2ab1c:	mov	w1, #0x2                   	// #2
   2ab20:	bl	cbb0 <__gmpz_sizeinbase@plt>
   2ab24:	mov	x24, x0
   2ab28:	cmp	x0, x21
   2ab2c:	add	x26, x26, #0x2
   2ab30:	b.ge	2aa74 <mpfr_cos@@Base+0x37c>  // b.tcont
   2ab34:	lsr	x21, x26, #1
   2ab38:	ldr	w26, [sp, #20]
   2ab3c:	sub	x0, x29, #0x78
   2ab40:	sub	x1, x29, #0x38
   2ab44:	mov	w2, wzr
   2ab48:	bl	c2b0 <mpfr_set_z@plt>
   2ab4c:	sub	x0, x29, #0x78
   2ab50:	sub	x1, x29, #0x78
   2ab54:	mov	x2, x27
   2ab58:	mov	w3, wzr
   2ab5c:	bl	c950 <mpfr_div_2ui@plt>
   2ab60:	sub	x0, x29, #0x18
   2ab64:	bl	c210 <mpfr_mpz_clear@plt>
   2ab68:	sub	x0, x29, #0x38
   2ab6c:	bl	c210 <mpfr_mpz_clear@plt>
   2ab70:	sub	x0, x29, #0x28
   2ab74:	bl	c210 <mpfr_mpz_clear@plt>
   2ab78:	ldur	x8, [x29, #-88]
   2ab7c:	ldur	x0, [x29, #-64]
   2ab80:	mov	w10, #0x1                   	// #1
   2ab84:	mov	w1, wzr
   2ab88:	sub	x9, x8, #0x1
   2ab8c:	add	x8, x8, #0x3e
   2ab90:	cmp	x9, #0x0
   2ab94:	csel	x8, x8, x9, lt  // lt = tstop
   2ab98:	asr	x23, x8, #6
   2ab9c:	lsl	x2, x23, #3
   2aba0:	stur	w10, [x29, #-80]
   2aba4:	stur	x10, [x29, #-72]
   2aba8:	bl	c1b0 <memset@plt>
   2abac:	ldur	x8, [x29, #-64]
   2abb0:	ldr	x28, [sp, #72]
   2abb4:	cmp	x20, #0x1
   2abb8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   2abbc:	str	x9, [x8, x23, lsl #3]
   2abc0:	b.lt	2ac14 <mpfr_cos@@Base+0x51c>  // b.tstop
   2abc4:	mov	x24, xzr
   2abc8:	sub	x0, x29, #0x78
   2abcc:	sub	x1, x29, #0x78
   2abd0:	mov	w2, #0x2                   	// #2
   2abd4:	bl	c450 <mpfr_sqr@plt>
   2abd8:	ldur	x8, [x29, #-104]
   2abdc:	sub	x0, x29, #0x78
   2abe0:	sub	x1, x29, #0x78
   2abe4:	sub	x2, x29, #0x58
   2abe8:	add	x8, x8, #0x1
   2abec:	mov	w3, wzr
   2abf0:	stur	x8, [x29, #-104]
   2abf4:	bl	bc20 <mpfr_sub@plt>
   2abf8:	ldur	x23, [x29, #-104]
   2abfc:	cmp	x23, x19
   2ac00:	b.eq	2ad00 <mpfr_cos@@Base+0x608>  // b.none
   2ac04:	add	x24, x24, #0x1
   2ac08:	cmp	x24, x20
   2ac0c:	b.lt	2abc8 <mpfr_cos@@Base+0x4d0>  // b.tstop
   2ac10:	b	2ac18 <mpfr_cos@@Base+0x520>
   2ac14:	ldur	x23, [x29, #-104]
   2ac18:	mov	w27, w26
   2ac1c:	clz	x8, x21
   2ac20:	lsl	x8, x8, #2
   2ac24:	mov	w9, #0x102                 	// #258
   2ac28:	ldr	w10, [sp, #100]
   2ac2c:	sub	x8, x9, x8
   2ac30:	cmp	x21, #0x0
   2ac34:	orr	x8, x8, #0x1
   2ac38:	mov	w9, #0x3                   	// #3
   2ac3c:	csel	x8, x9, x8, eq  // eq = none
   2ac40:	cmp	x20, #0x0
   2ac44:	mov	w9, #0x4                   	// #4
   2ac48:	csinc	x9, x9, xzr, eq  // eq = none
   2ac4c:	cmp	w10, #0x0
   2ac50:	csel	x9, x9, xzr, ne  // ne = any
   2ac54:	add	x8, x8, x9
   2ac58:	subs	x9, x8, #0x1
   2ac5c:	mov	x24, #0xfffffffffffffeff    	// #-257
   2ac60:	ldr	x26, [sp, #64]
   2ac64:	cmp	x8, #0x1
   2ac68:	movk	x24, #0x7fff, lsl #48
   2ac6c:	clz	x8, x9
   2ac70:	mov	w9, #0x40                  	// #64
   2ac74:	add	x10, x24, #0x105
   2ac78:	sub	x8, x9, x8
   2ac7c:	csel	x8, xzr, x8, eq  // eq = none
   2ac80:	cmp	x23, x10
   2ac84:	b.lt	2acdc <mpfr_cos@@Base+0x5e4>  // b.tstop
   2ac88:	ldur	x9, [x29, #-120]
   2ac8c:	lsl	x10, x20, #1
   2ac90:	add	x20, x8, x10
   2ac94:	ldur	x0, [x29, #-96]
   2ac98:	sub	x8, x9, #0x1
   2ac9c:	add	x9, x9, #0x3e
   2aca0:	cmp	x8, #0x0
   2aca4:	csel	x8, x9, x8, lt  // lt = tstop
   2aca8:	sub	x21, x22, x20
   2acac:	asr	x8, x8, #6
   2acb0:	add	x1, x8, #0x1
   2acb4:	add	x2, x21, x23
   2acb8:	mov	x3, x26
   2acbc:	bl	c3d0 <mpfr_round_p@plt>
   2acc0:	cbnz	w0, 2af40 <mpfr_cos@@Base+0x848>
   2acc4:	cmp	x23, #0x1
   2acc8:	b.ne	2acdc <mpfr_cos@@Base+0x5e4>  // b.any
   2accc:	cmp	x22, x20
   2acd0:	b.le	2acdc <mpfr_cos@@Base+0x5e4>
   2acd4:	cmp	x21, x26
   2acd8:	b.ge	2af38 <mpfr_cos@@Base+0x840>  // b.tcont
   2acdc:	ldr	x8, [sp, #8]
   2ace0:	cmp	x8, x23
   2ace4:	b.le	2acf4 <mpfr_cos@@Base+0x5fc>
   2ace8:	add	x8, x22, x8
   2acec:	sub	x22, x8, x23
   2acf0:	str	x23, [sp, #8]
   2acf4:	ldr	x23, [sp, #24]
   2acf8:	mov	w26, w27
   2acfc:	b	2ad0c <mpfr_cos@@Base+0x614>
   2ad00:	ldr	x23, [sp, #24]
   2ad04:	mov	x24, #0xfffffffffffffeff    	// #-257
   2ad08:	movk	x24, #0x7fff, lsl #48
   2ad0c:	ldr	x20, [sp, #88]
   2ad10:	sub	x8, x24, x22
   2ad14:	cmp	x20, x8
   2ad18:	b.gt	2ade0 <mpfr_cos@@Base+0x6e8>
   2ad1c:	add	x22, x22, x20
   2ad20:	cmp	x22, #0x0
   2ad24:	cinc	x8, x22, lt  // lt = tstop
   2ad28:	cmp	x22, x24
   2ad2c:	b.gt	2b03c <mpfr_cos@@Base+0x944>
   2ad30:	asr	x8, x8, #1
   2ad34:	sub	x20, x22, #0x1
   2ad38:	str	x8, [sp, #88]
   2ad3c:	add	x8, x22, #0x3e
   2ad40:	cmp	x20, #0x0
   2ad44:	ldr	x1, [sp, #104]
   2ad48:	csel	x8, x8, x20, lt  // lt = tstop
   2ad4c:	asr	x8, x8, #6
   2ad50:	add	x21, x8, #0x1
   2ad54:	lsl	x2, x21, #4
   2ad58:	str	x2, [sp, #104]
   2ad5c:	cbz	x1, 2ad6c <mpfr_cos@@Base+0x674>
   2ad60:	ldr	x0, [sp, #112]
   2ad64:	bl	c260 <mpfr_reallocate_func@plt>
   2ad68:	b	2ad74 <mpfr_cos@@Base+0x67c>
   2ad6c:	mov	x0, x2
   2ad70:	bl	cd50 <mpfr_allocate_func@plt>
   2ad74:	add	x8, x0, x21, lsl #3
   2ad78:	stp	x8, x22, [x29, #-96]
   2ad7c:	ldr	w8, [sp, #100]
   2ad80:	mov	w9, #0x1                   	// #1
   2ad84:	str	x0, [sp, #112]
   2ad88:	stur	x0, [x29, #-64]
   2ad8c:	stur	w9, [x29, #-80]
   2ad90:	stur	x22, [x29, #-120]
   2ad94:	stur	w9, [x29, #-112]
   2ad98:	cbz	w8, 2a908 <mpfr_cos@@Base+0x210>
   2ad9c:	sub	x0, x29, #0x98
   2ada0:	mov	x1, x22
   2ada4:	bl	bf80 <mpfr_set_prec@plt>
   2ada8:	ldr	x8, [sp, #80]
   2adac:	sub	x0, x29, #0xb8
   2adb0:	add	x1, x20, x8
   2adb4:	bl	bf80 <mpfr_set_prec@plt>
   2adb8:	b	2a908 <mpfr_cos@@Base+0x210>
   2adbc:	mov	w21, #0x4                   	// #4
   2adc0:	b	2aa1c <mpfr_cos@@Base+0x324>
   2adc4:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2adc8:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2adcc:	mov	w1, #0x4e                  	// #78
   2add0:	add	x0, x0, #0x709
   2add4:	add	x2, x2, #0x522
   2add8:	bl	cb90 <mpfr_assert_fail@plt>
   2addc:	b	2aa0c <mpfr_cos@@Base+0x314>
   2ade0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ade4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ade8:	mov	w1, #0x117                 	// #279
   2adec:	add	x0, x0, #0x709
   2adf0:	add	x2, x2, #0x4df
   2adf4:	bl	cb90 <mpfr_assert_fail@plt>
   2adf8:	b	2ad1c <mpfr_cos@@Base+0x624>
   2adfc:	and	x9, x10, #0xfffffffffffffffe
   2ae00:	add	x8, x24, #0x103
   2ae04:	cmp	x9, x8
   2ae08:	b.ne	2ae38 <mpfr_cos@@Base+0x740>  // b.any
   2ae0c:	str	x8, [x19, #16]
   2ae10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ae14:	ldr	x1, [x0, #2656]
   2ae18:	add	x0, x0, #0xa60
   2ae1c:	blr	x1
   2ae20:	mrs	x8, tpidr_el0
   2ae24:	ldr	w9, [x8, x0]
   2ae28:	mov	w22, wzr
   2ae2c:	orr	w9, w9, #0x4
   2ae30:	str	w9, [x8, x0]
   2ae34:	b	2b000 <mpfr_cos@@Base+0x908>
   2ae38:	mov	w1, #0x1                   	// #1
   2ae3c:	mov	x0, x19
   2ae40:	mov	x2, xzr
   2ae44:	mov	w3, w26
   2ae48:	bl	c640 <mpfr_set_ui_2exp@plt>
   2ae4c:	b	2b034 <mpfr_cos@@Base+0x93c>
   2ae50:	ldr	x10, [sp, #80]
   2ae54:	mov	x8, xzr
   2ae58:	b	2a824 <mpfr_cos@@Base+0x12c>
   2ae5c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ae60:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ae64:	add	x0, x0, #0x709
   2ae68:	add	x2, x2, #0x490
   2ae6c:	mov	w1, #0xb1                  	// #177
   2ae70:	bl	cb90 <mpfr_assert_fail@plt>
   2ae74:	ldr	x10, [sp, #80]
   2ae78:	b	2a814 <mpfr_cos@@Base+0x11c>
   2ae7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ae80:	ldr	x1, [x0, #2656]
   2ae84:	add	x0, x0, #0xa60
   2ae88:	blr	x1
   2ae8c:	str	wzr, [x25, x0]
   2ae90:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   2ae94:	ldr	x1, [x1, #3944]
   2ae98:	mov	x0, x19
   2ae9c:	mov	w3, wzr
   2aea0:	mov	w4, w26
   2aea4:	mov	x20, x10
   2aea8:	bl	c590 <mpfr_round_near_x@plt>
   2aeac:	mov	x10, x20
   2aeb0:	cbz	w0, 2a7ac <mpfr_cos@@Base+0xb4>
   2aeb4:	mov	w22, w0
   2aeb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2aebc:	ldr	x1, [x0, #2656]
   2aec0:	add	x0, x0, #0xa60
   2aec4:	blr	x1
   2aec8:	ldr	w8, [x25, x0]
   2aecc:	orr	w8, w8, w23
   2aed0:	str	w8, [x25, x0]
   2aed4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2aed8:	ldr	x1, [x0, #2592]
   2aedc:	add	x0, x0, #0xa20
   2aee0:	blr	x1
   2aee4:	str	x21, [x25, x0]
   2aee8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2aeec:	ldr	x1, [x0, #2624]
   2aef0:	add	x0, x0, #0xa40
   2aef4:	blr	x1
   2aef8:	str	x27, [x25, x0]
   2aefc:	ldr	x9, [x19, #16]
   2af00:	mov	x0, x19
   2af04:	cmp	x9, x27
   2af08:	b.gt	2b028 <mpfr_cos@@Base+0x930>
   2af0c:	cmp	x9, x21
   2af10:	b.lt	2b028 <mpfr_cos@@Base+0x930>  // b.tstop
   2af14:	orr	w8, w8, #0x8
   2af18:	b	2afec <mpfr_cos@@Base+0x8f4>
   2af1c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2af20:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2af24:	add	x0, x0, #0x709
   2af28:	add	x2, x2, #0x49c
   2af2c:	mov	w1, #0xb9                  	// #185
   2af30:	bl	cb90 <mpfr_assert_fail@plt>
   2af34:	b	2a84c <mpfr_cos@@Base+0x154>
   2af38:	sub	x0, x29, #0x78
   2af3c:	bl	c4b0 <mpfr_nexttozero@plt>
   2af40:	ldr	x19, [sp, #56]
   2af44:	ldur	w3, [x29, #-112]
   2af48:	sub	x1, x29, #0x78
   2af4c:	mov	w2, w27
   2af50:	mov	x0, x19
   2af54:	mov	w26, w27
   2af58:	bl	c6f0 <mpfr_set4@plt>
   2af5c:	ldr	x1, [sp, #104]
   2af60:	mov	w22, w0
   2af64:	cbz	x1, 2af70 <mpfr_cos@@Base+0x878>
   2af68:	ldr	x0, [sp, #112]
   2af6c:	bl	cc80 <mpfr_free_func@plt>
   2af70:	ldr	x21, [sp, #48]
   2af74:	ldr	w23, [sp, #44]
   2af78:	ldr	w8, [sp, #100]
   2af7c:	ldr	x27, [sp, #32]
   2af80:	cbz	w8, 2af94 <mpfr_cos@@Base+0x89c>
   2af84:	sub	x0, x29, #0x98
   2af88:	bl	c110 <mpfr_clear@plt>
   2af8c:	sub	x0, x29, #0xb8
   2af90:	bl	c110 <mpfr_clear@plt>
   2af94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2af98:	ldr	x1, [x0, #2656]
   2af9c:	add	x0, x0, #0xa60
   2afa0:	blr	x1
   2afa4:	str	w23, [x25, x0]
   2afa8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2afac:	ldr	x1, [x0, #2592]
   2afb0:	add	x0, x0, #0xa20
   2afb4:	blr	x1
   2afb8:	str	x21, [x25, x0]
   2afbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2afc0:	ldr	x1, [x0, #2624]
   2afc4:	add	x0, x0, #0xa40
   2afc8:	blr	x1
   2afcc:	str	x27, [x25, x0]
   2afd0:	ldr	x8, [x19, #16]
   2afd4:	cmp	x8, x27
   2afd8:	b.gt	2b024 <mpfr_cos@@Base+0x92c>
   2afdc:	cmp	x8, x21
   2afe0:	b.lt	2b024 <mpfr_cos@@Base+0x92c>  // b.tstop
   2afe4:	cbz	w22, 2b000 <mpfr_cos@@Base+0x908>
   2afe8:	orr	w8, w23, #0x8
   2afec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2aff0:	ldr	x1, [x0, #2656]
   2aff4:	add	x0, x0, #0xa60
   2aff8:	blr	x1
   2affc:	str	w8, [x25, x0]
   2b000:	mov	w0, w22
   2b004:	add	sp, sp, #0x1b0
   2b008:	ldp	x20, x19, [sp, #80]
   2b00c:	ldp	x22, x21, [sp, #64]
   2b010:	ldp	x24, x23, [sp, #48]
   2b014:	ldp	x26, x25, [sp, #32]
   2b018:	ldp	x28, x27, [sp, #16]
   2b01c:	ldp	x29, x30, [sp], #96
   2b020:	ret
   2b024:	mov	x0, x19
   2b028:	mov	w1, w22
   2b02c:	mov	w2, w26
   2b030:	bl	cb80 <mpfr_check_range@plt>
   2b034:	mov	w22, w0
   2b038:	b	2b000 <mpfr_cos@@Base+0x908>
   2b03c:	bl	c940 <mpfr_abort_prec_max@plt>

000000000002b040 <mpfr_sin@@Base>:
   2b040:	sub	sp, sp, #0xe0
   2b044:	stp	x29, x30, [sp, #128]
   2b048:	stp	x28, x27, [sp, #144]
   2b04c:	stp	x26, x25, [sp, #160]
   2b050:	stp	x24, x23, [sp, #176]
   2b054:	stp	x22, x21, [sp, #192]
   2b058:	stp	x20, x19, [sp, #208]
   2b05c:	ldr	x24, [x1, #16]
   2b060:	mov	x23, #0x2                   	// #2
   2b064:	movk	x23, #0x8000, lsl #48
   2b068:	add	x8, x23, #0x2
   2b06c:	mov	x21, x1
   2b070:	cmp	x24, x8
   2b074:	mov	x25, x0
   2b078:	add	x29, sp, #0x80
   2b07c:	b.lt	2b4cc <mpfr_sin@@Base+0x48c>  // b.tstop
   2b080:	mov	w26, w2
   2b084:	neg	x20, x24, lsl #1
   2b088:	tbz	x24, #63, 2b0a0 <mpfr_sin@@Base+0x60>
   2b08c:	ldr	x8, [x25]
   2b090:	add	x2, x20, #0x2
   2b094:	add	x8, x8, #0x1
   2b098:	cmp	x2, x8
   2b09c:	b.hi	2b558 <mpfr_sin@@Base+0x518>  // b.pmore
   2b0a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b0a4:	ldr	x1, [x0, #2656]
   2b0a8:	add	x0, x0, #0xa60
   2b0ac:	blr	x1
   2b0b0:	mrs	x11, tpidr_el0
   2b0b4:	ldr	w8, [x11, x0]
   2b0b8:	str	w8, [sp, #36]
   2b0bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b0c0:	ldr	x1, [x0, #2592]
   2b0c4:	add	x0, x0, #0xa20
   2b0c8:	blr	x1
   2b0cc:	ldr	x9, [x11, x0]
   2b0d0:	mov	x8, x0
   2b0d4:	str	x9, [sp, #24]
   2b0d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b0dc:	ldr	x1, [x0, #2624]
   2b0e0:	add	x0, x0, #0xa40
   2b0e4:	blr	x1
   2b0e8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2b0ec:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2b0f0:	ldr	x22, [x11, x0]
   2b0f4:	str	x9, [x11, x8]
   2b0f8:	str	x10, [x11, x0]
   2b0fc:	ldr	x27, [x25]
   2b100:	mov	w8, #0x7530                	// #30000
   2b104:	str	x11, [sp, #56]
   2b108:	str	x22, [sp, #16]
   2b10c:	cmp	x27, x8
   2b110:	b.lt	2b138 <mpfr_sin@@Base+0xf8>  // b.tstop
   2b114:	mov	x0, x25
   2b118:	mov	x1, xzr
   2b11c:	mov	x2, x21
   2b120:	mov	w3, w26
   2b124:	bl	c0c0 <mpfr_sincos_fast@plt>
   2b128:	and	w8, w0, #0x3
   2b12c:	cmp	w8, #0x2
   2b130:	csinv	w22, w8, wzr, ne  // ne = any
   2b134:	b	2b428 <mpfr_sin@@Base+0x3e8>
   2b138:	subs	x19, x27, #0x1
   2b13c:	b.eq	2b51c <mpfr_sin@@Base+0x4dc>  // b.none
   2b140:	b.le	2b524 <mpfr_sin@@Base+0x4e4>
   2b144:	clz	x8, x19
   2b148:	mov	w9, #0x40                  	// #64
   2b14c:	sub	x8, x9, x8
   2b150:	add	x8, x8, x27
   2b154:	add	x22, x8, #0x7
   2b158:	str	w26, [sp, #12]
   2b15c:	tbz	x24, #63, 2b174 <mpfr_sin@@Base+0x134>
   2b160:	sub	x8, x23, x8
   2b164:	sub	x8, x8, #0x10a
   2b168:	cmp	x20, x8
   2b16c:	b.gt	2b578 <mpfr_sin@@Base+0x538>
   2b170:	add	x22, x22, x20
   2b174:	sub	x0, x29, #0x20
   2b178:	mov	x26, x25
   2b17c:	bl	bc80 <mpfr_init@plt>
   2b180:	add	x0, sp, #0x40
   2b184:	bl	bc80 <mpfr_init@plt>
   2b188:	ldr	w8, [sp, #12]
   2b18c:	mov	w20, #0x40                  	// #64
   2b190:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   2b194:	cmp	w8, #0x0
   2b198:	sub	x8, x23, #0x101
   2b19c:	str	x8, [sp, #48]
   2b1a0:	cinc	x8, x27, eq  // eq = none
   2b1a4:	str	x8, [sp, #40]
   2b1a8:	cmp	x24, #0x2
   2b1ac:	b.lt	2b260 <mpfr_sin@@Base+0x220>  // b.tstop
   2b1b0:	ldr	x9, [sp, #48]
   2b1b4:	add	x8, x22, x24
   2b1b8:	sub	x27, x8, #0x1
   2b1bc:	cmp	x8, x9
   2b1c0:	b.ge	2b3dc <mpfr_sin@@Base+0x39c>  // b.tcont
   2b1c4:	sub	x0, x29, #0x20
   2b1c8:	mov	x1, x27
   2b1cc:	bl	bf80 <mpfr_set_prec@plt>
   2b1d0:	add	x0, sp, #0x40
   2b1d4:	mov	x1, x22
   2b1d8:	bl	bf80 <mpfr_set_prec@plt>
   2b1dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b1e0:	ldr	x1, [x0, #2704]
   2b1e4:	add	x0, x0, #0xa90
   2b1e8:	blr	x1
   2b1ec:	ldr	x8, [sp, #56]
   2b1f0:	mov	w2, wzr
   2b1f4:	add	x1, x8, x0
   2b1f8:	sub	x0, x29, #0x20
   2b1fc:	bl	c3e0 <mpfr_cache@plt>
   2b200:	sub	x0, x29, #0x20
   2b204:	sub	x1, x29, #0x20
   2b208:	mov	w2, #0x1                   	// #1
   2b20c:	mov	w3, wzr
   2b210:	bl	c320 <mpfr_mul_2ui@plt>
   2b214:	add	x0, sp, #0x40
   2b218:	sub	x2, x29, #0x20
   2b21c:	mov	x1, x21
   2b220:	mov	w3, wzr
   2b224:	bl	cd70 <mpfr_remainder@plt>
   2b228:	sub	x0, x29, #0x20
   2b22c:	sub	x1, x29, #0x20
   2b230:	mov	w2, #0x1                   	// #1
   2b234:	mov	w3, wzr
   2b238:	bl	c950 <mpfr_div_2ui@plt>
   2b23c:	ldr	w8, [sp, #72]
   2b240:	sub	x0, x29, #0x20
   2b244:	sub	x1, x29, #0x20
   2b248:	add	x2, sp, #0x40
   2b24c:	mov	w3, #0x1                   	// #1
   2b250:	cmp	w8, #0x1
   2b254:	b.lt	2b348 <mpfr_sin@@Base+0x308>  // b.tstop
   2b258:	bl	bc20 <mpfr_sub@plt>
   2b25c:	b	2b34c <mpfr_sin@@Base+0x30c>
   2b260:	mov	x19, xzr
   2b264:	mov	x27, x21
   2b268:	ldr	w28, [x27, #8]
   2b26c:	sub	x0, x29, #0x20
   2b270:	mov	x1, x22
   2b274:	bl	bf80 <mpfr_set_prec@plt>
   2b278:	sub	x0, x29, #0x20
   2b27c:	mov	w2, #0x4                   	// #4
   2b280:	mov	x1, x27
   2b284:	bl	c480 <mpfr_cos@plt>
   2b288:	sub	x0, x29, #0x20
   2b28c:	sub	x1, x29, #0x20
   2b290:	sub	x2, x29, #0x20
   2b294:	mov	w3, #0x2                   	// #2
   2b298:	bl	be00 <mpfr_mul@plt>
   2b29c:	sub	x0, x29, #0x20
   2b2a0:	sub	x2, x29, #0x20
   2b2a4:	mov	w1, #0x1                   	// #1
   2b2a8:	mov	w3, #0x1                   	// #1
   2b2ac:	bl	caa0 <mpfr_ui_sub@plt>
   2b2b0:	sub	x0, x29, #0x20
   2b2b4:	sub	x1, x29, #0x20
   2b2b8:	mov	w2, #0x1                   	// #1
   2b2bc:	bl	c990 <mpfr_sqrt@plt>
   2b2c0:	tbz	w28, #31, 2b2d0 <mpfr_sin@@Base+0x290>
   2b2c4:	ldur	w8, [x29, #-24]
   2b2c8:	neg	w8, w8
   2b2cc:	stur	w8, [x29, #-24]
   2b2d0:	ldur	x8, [x29, #-16]
   2b2d4:	cmp	x8, x25
   2b2d8:	b.eq	2b3c8 <mpfr_sin@@Base+0x388>  // b.none
   2b2dc:	add	x9, x22, x19
   2b2e0:	add	x10, x23, #0x2
   2b2e4:	add	x9, x9, x8, lsl #1
   2b2e8:	cmp	x8, x10
   2b2ec:	sub	x27, x9, #0x3
   2b2f0:	b.lt	2b328 <mpfr_sin@@Base+0x2e8>  // b.tstop
   2b2f4:	ldur	x8, [x29, #-32]
   2b2f8:	ldur	x0, [x29, #-8]
   2b2fc:	ldr	x3, [sp, #40]
   2b300:	mov	x2, x27
   2b304:	sub	x9, x8, #0x1
   2b308:	add	x8, x8, #0x3e
   2b30c:	cmp	x9, #0x0
   2b310:	csel	x8, x8, x9, lt  // lt = tstop
   2b314:	asr	x8, x8, #6
   2b318:	add	x1, x8, #0x1
   2b31c:	bl	c3d0 <mpfr_round_p@plt>
   2b320:	cbnz	w0, 2b3f8 <mpfr_sin@@Base+0x3b8>
   2b324:	ldur	x8, [x29, #-16]
   2b328:	ldr	x9, [x26]
   2b32c:	subs	x9, x9, x27
   2b330:	csel	x9, x9, xzr, gt
   2b334:	cmp	x8, #0x1
   2b338:	add	x8, x9, x22
   2b33c:	cset	w9, eq  // eq = none
   2b340:	lsl	x22, x8, x9
   2b344:	b	2b368 <mpfr_sin@@Base+0x328>
   2b348:	bl	c240 <mpfr_add@plt>
   2b34c:	ldr	x9, [sp, #80]
   2b350:	cmp	x9, x25
   2b354:	b.eq	2b368 <mpfr_sin@@Base+0x328>  // b.none
   2b358:	mov	w8, #0x3                   	// #3
   2b35c:	sub	x8, x8, x22
   2b360:	cmp	x9, x8
   2b364:	b.ge	2b38c <mpfr_sin@@Base+0x34c>  // b.tcont
   2b368:	sub	x8, x23, x22
   2b36c:	sub	x8, x8, #0x103
   2b370:	cmp	x20, x8
   2b374:	b.gt	2b3ac <mpfr_sin@@Base+0x36c>
   2b378:	add	x22, x22, x20
   2b37c:	cmp	x22, #0x0
   2b380:	cinc	x8, x22, lt  // lt = tstop
   2b384:	asr	x20, x8, #1
   2b388:	b	2b1a8 <mpfr_sin@@Base+0x168>
   2b38c:	ldur	x9, [x29, #-16]
   2b390:	cmp	x9, x25
   2b394:	b.eq	2b368 <mpfr_sin@@Base+0x328>  // b.none
   2b398:	cmp	x9, x8
   2b39c:	b.lt	2b368 <mpfr_sin@@Base+0x328>  // b.tstop
   2b3a0:	add	x27, sp, #0x40
   2b3a4:	mov	x19, #0xffffffffffffffff    	// #-1
   2b3a8:	b	2b268 <mpfr_sin@@Base+0x228>
   2b3ac:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b3b0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b3b4:	mov	w1, #0xb9                  	// #185
   2b3b8:	add	x0, x0, #0x430
   2b3bc:	add	x2, x2, #0x4df
   2b3c0:	bl	cb90 <mpfr_assert_fail@plt>
   2b3c4:	b	2b378 <mpfr_sin@@Base+0x338>
   2b3c8:	ldr	x8, [x21]
   2b3cc:	cmp	x22, x8
   2b3d0:	csel	x8, x22, x8, gt
   2b3d4:	lsl	x22, x8, #1
   2b3d8:	b	2b368 <mpfr_sin@@Base+0x328>
   2b3dc:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b3e0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b3e4:	mov	w1, #0x74                  	// #116
   2b3e8:	add	x0, x0, #0x430
   2b3ec:	add	x2, x2, #0x49c
   2b3f0:	bl	cb90 <mpfr_assert_fail@plt>
   2b3f4:	b	2b1c4 <mpfr_sin@@Base+0x184>
   2b3f8:	mov	x25, x26
   2b3fc:	mov	x0, x26
   2b400:	ldr	w26, [sp, #12]
   2b404:	ldur	w3, [x29, #-24]
   2b408:	sub	x1, x29, #0x20
   2b40c:	mov	w2, w26
   2b410:	bl	c6f0 <mpfr_set4@plt>
   2b414:	mov	w22, w0
   2b418:	sub	x0, x29, #0x20
   2b41c:	bl	c110 <mpfr_clear@plt>
   2b420:	add	x0, sp, #0x40
   2b424:	bl	c110 <mpfr_clear@plt>
   2b428:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b42c:	ldr	x1, [x0, #2656]
   2b430:	add	x0, x0, #0xa60
   2b434:	blr	x1
   2b438:	ldr	x8, [sp, #56]
   2b43c:	ldr	w9, [sp, #36]
   2b440:	str	w9, [x8, x0]
   2b444:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b448:	ldr	x1, [x0, #2592]
   2b44c:	add	x0, x0, #0xa20
   2b450:	blr	x1
   2b454:	ldr	x10, [sp, #24]
   2b458:	str	x10, [x8, x0]
   2b45c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b460:	ldr	x1, [x0, #2624]
   2b464:	add	x0, x0, #0xa40
   2b468:	blr	x1
   2b46c:	ldr	x11, [sp, #16]
   2b470:	str	x11, [x8, x0]
   2b474:	ldr	x8, [x25, #16]
   2b478:	cmp	x8, x11
   2b47c:	b.gt	2b504 <mpfr_sin@@Base+0x4c4>
   2b480:	cmp	x8, x10
   2b484:	b.lt	2b504 <mpfr_sin@@Base+0x4c4>  // b.tstop
   2b488:	cbz	w22, 2b4a8 <mpfr_sin@@Base+0x468>
   2b48c:	orr	w8, w9, #0x8
   2b490:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b494:	ldr	x1, [x0, #2656]
   2b498:	add	x0, x0, #0xa60
   2b49c:	blr	x1
   2b4a0:	ldr	x9, [sp, #56]
   2b4a4:	str	w8, [x9, x0]
   2b4a8:	mov	w0, w22
   2b4ac:	ldp	x20, x19, [sp, #208]
   2b4b0:	ldp	x22, x21, [sp, #192]
   2b4b4:	ldp	x24, x23, [sp, #176]
   2b4b8:	ldp	x26, x25, [sp, #160]
   2b4bc:	ldp	x28, x27, [sp, #144]
   2b4c0:	ldp	x29, x30, [sp, #128]
   2b4c4:	add	sp, sp, #0xe0
   2b4c8:	ret
   2b4cc:	and	x8, x24, #0xfffffffffffffffe
   2b4d0:	cmp	x8, x23
   2b4d4:	b.ne	2b540 <mpfr_sin@@Base+0x500>  // b.any
   2b4d8:	str	x23, [x25, #16]
   2b4dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b4e0:	ldr	x1, [x0, #2656]
   2b4e4:	add	x0, x0, #0xa60
   2b4e8:	blr	x1
   2b4ec:	mrs	x8, tpidr_el0
   2b4f0:	ldr	w9, [x8, x0]
   2b4f4:	mov	w22, wzr
   2b4f8:	orr	w9, w9, #0x4
   2b4fc:	str	w9, [x8, x0]
   2b500:	b	2b4a8 <mpfr_sin@@Base+0x468>
   2b504:	mov	x0, x25
   2b508:	mov	w1, w22
   2b50c:	mov	w2, w26
   2b510:	bl	cb80 <mpfr_check_range@plt>
   2b514:	mov	w22, w0
   2b518:	b	2b4a8 <mpfr_sin@@Base+0x468>
   2b51c:	mov	x8, xzr
   2b520:	b	2b150 <mpfr_sin@@Base+0x110>
   2b524:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b528:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b52c:	add	x0, x0, #0x430
   2b530:	add	x2, x2, #0x490
   2b534:	mov	w1, #0x55                  	// #85
   2b538:	bl	cb90 <mpfr_assert_fail@plt>
   2b53c:	b	2b144 <mpfr_sin@@Base+0x104>
   2b540:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2b544:	str	x8, [x25, #16]
   2b548:	ldr	w8, [x21, #8]
   2b54c:	mov	w22, wzr
   2b550:	str	w8, [x25, #8]
   2b554:	b	2b4a8 <mpfr_sin@@Base+0x468>
   2b558:	mov	x0, x25
   2b55c:	mov	x1, x21
   2b560:	mov	w3, wzr
   2b564:	mov	w4, w26
   2b568:	bl	c590 <mpfr_round_near_x@plt>
   2b56c:	mov	w22, w0
   2b570:	cbnz	w0, 2b4a8 <mpfr_sin@@Base+0x468>
   2b574:	b	2b0a0 <mpfr_sin@@Base+0x60>
   2b578:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b57c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b580:	add	x0, x0, #0x430
   2b584:	add	x2, x2, #0x52d
   2b588:	mov	w1, #0x60                  	// #96
   2b58c:	bl	cb90 <mpfr_assert_fail@plt>
   2b590:	b	2b170 <mpfr_sin@@Base+0x130>

000000000002b594 <mpfr_tan@@Base>:
   2b594:	sub	sp, sp, #0x150
   2b598:	stp	x29, x30, [sp, #240]
   2b59c:	stp	x28, x27, [sp, #256]
   2b5a0:	stp	x26, x25, [sp, #272]
   2b5a4:	stp	x24, x23, [sp, #288]
   2b5a8:	stp	x22, x21, [sp, #304]
   2b5ac:	stp	x20, x19, [sp, #320]
   2b5b0:	ldr	x8, [x1, #16]
   2b5b4:	mov	x26, #0xfffffffffffffeff    	// #-257
   2b5b8:	movk	x26, #0x7fff, lsl #48
   2b5bc:	add	x9, x26, #0x105
   2b5c0:	mov	x21, x1
   2b5c4:	cmp	x8, x9
   2b5c8:	mov	x19, x0
   2b5cc:	add	x29, sp, #0xf0
   2b5d0:	b.lt	2b8bc <mpfr_tan@@Base+0x328>  // b.tstop
   2b5d4:	mov	w20, w2
   2b5d8:	tbz	x8, #63, 2b5f4 <mpfr_tan@@Base+0x60>
   2b5dc:	ldr	x9, [x19]
   2b5e0:	mov	w10, #0x1                   	// #1
   2b5e4:	sub	x2, x10, x8, lsl #1
   2b5e8:	add	x8, x9, #0x1
   2b5ec:	cmp	x2, x8
   2b5f0:	b.hi	2b94c <mpfr_tan@@Base+0x3b8>  // b.pmore
   2b5f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b5f8:	ldr	x1, [x0, #2656]
   2b5fc:	add	x0, x0, #0xa60
   2b600:	blr	x1
   2b604:	mrs	x25, tpidr_el0
   2b608:	ldr	w8, [x25, x0]
   2b60c:	str	w8, [sp, #20]
   2b610:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b614:	ldr	x1, [x0, #2592]
   2b618:	add	x0, x0, #0xa20
   2b61c:	blr	x1
   2b620:	ldr	x28, [x25, x0]
   2b624:	mov	x8, x0
   2b628:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b62c:	ldr	x1, [x0, #2624]
   2b630:	add	x0, x0, #0xa40
   2b634:	blr	x1
   2b638:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2b63c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2b640:	ldr	x24, [x25, x0]
   2b644:	str	x9, [x25, x8]
   2b648:	str	x10, [x25, x0]
   2b64c:	ldr	x23, [x19]
   2b650:	subs	x22, x23, #0x1
   2b654:	b.eq	2b8f8 <mpfr_tan@@Base+0x364>  // b.none
   2b658:	b.le	2b918 <mpfr_tan@@Base+0x384>
   2b65c:	clz	x8, x22
   2b660:	mov	w9, #0x40                  	// #64
   2b664:	sub	x8, x9, x8
   2b668:	add	x8, x8, x23
   2b66c:	sub	x9, x26, #0xd
   2b670:	cmp	x8, x9
   2b674:	b.gt	2b96c <mpfr_tan@@Base+0x3d8>
   2b678:	add	x9, x8, #0xc
   2b67c:	add	x10, x8, #0x4b
   2b680:	cmp	x9, #0x0
   2b684:	csel	x9, x10, x9, lt  // lt = tstop
   2b688:	asr	x9, x9, #6
   2b68c:	add	x27, x8, #0xd
   2b690:	cmp	x8, #0x1f4
   2b694:	add	x26, x9, #0x1
   2b698:	b.lt	2b6ac <mpfr_tan@@Base+0x118>  // b.tstop
   2b69c:	lsl	x22, x26, #4
   2b6a0:	mov	x0, x22
   2b6a4:	bl	cd50 <mpfr_allocate_func@plt>
   2b6a8:	b	2b6b8 <mpfr_tan@@Base+0x124>
   2b6ac:	add	x8, sp, #0x18
   2b6b0:	mov	x22, xzr
   2b6b4:	add	x0, x8, #0x10
   2b6b8:	cmp	w20, #0x0
   2b6bc:	stp	x22, x0, [sp, #24]
   2b6c0:	mov	w22, #0x1                   	// #1
   2b6c4:	add	x8, x0, x26, lsl #3
   2b6c8:	mov	w9, #0x40                  	// #64
   2b6cc:	cinc	x23, x23, eq  // eq = none
   2b6d0:	stur	x0, [x29, #-16]
   2b6d4:	str	x9, [sp, #8]
   2b6d8:	stur	w22, [x29, #-32]
   2b6dc:	stur	x27, [x29, #-72]
   2b6e0:	stp	x8, x27, [x29, #-48]
   2b6e4:	sub	x0, x29, #0x28
   2b6e8:	sub	x1, x29, #0x48
   2b6ec:	mov	x2, x21
   2b6f0:	mov	w3, wzr
   2b6f4:	stur	w22, [x29, #-64]
   2b6f8:	bl	cca0 <mpfr_sin_cos@plt>
   2b6fc:	sub	x0, x29, #0x48
   2b700:	sub	x1, x29, #0x28
   2b704:	sub	x2, x29, #0x48
   2b708:	mov	w3, wzr
   2b70c:	bl	c670 <mpfr_div@plt>
   2b710:	ldur	x8, [x29, #-56]
   2b714:	mov	x26, #0xfffffffffffffeff    	// #-257
   2b718:	movk	x26, #0x7fff, lsl #48
   2b71c:	add	x9, x26, #0x105
   2b720:	cmp	x8, x9
   2b724:	b.lt	2b758 <mpfr_tan@@Base+0x1c4>  // b.tstop
   2b728:	ldur	x8, [x29, #-72]
   2b72c:	ldur	x0, [x29, #-48]
   2b730:	sub	x2, x27, #0x2
   2b734:	mov	x3, x23
   2b738:	sub	x9, x8, #0x1
   2b73c:	add	x8, x8, #0x3e
   2b740:	cmp	x9, #0x0
   2b744:	csel	x8, x8, x9, lt  // lt = tstop
   2b748:	asr	x8, x8, #6
   2b74c:	add	x1, x8, #0x1
   2b750:	bl	c3d0 <mpfr_round_p@plt>
   2b754:	cbnz	w0, 2b800 <mpfr_tan@@Base+0x26c>
   2b758:	ldr	x9, [sp, #8]
   2b75c:	sub	x8, x26, x27
   2b760:	cmp	x9, x8
   2b764:	mov	x8, x9
   2b768:	b.gt	2b7e0 <mpfr_tan@@Base+0x24c>
   2b76c:	add	x27, x27, x8
   2b770:	cmp	x27, #0x0
   2b774:	cinc	x8, x27, lt  // lt = tstop
   2b778:	cmp	x27, x26
   2b77c:	b.gt	2b96c <mpfr_tan@@Base+0x3d8>
   2b780:	asr	x8, x8, #1
   2b784:	str	x8, [sp, #8]
   2b788:	sub	x8, x27, #0x1
   2b78c:	add	x9, x27, #0x3e
   2b790:	cmp	x8, #0x0
   2b794:	ldr	x1, [sp, #24]
   2b798:	csel	x8, x9, x8, lt  // lt = tstop
   2b79c:	asr	x8, x8, #6
   2b7a0:	add	x26, x8, #0x1
   2b7a4:	lsl	x2, x26, #4
   2b7a8:	str	x2, [sp, #24]
   2b7ac:	cbz	x1, 2b7bc <mpfr_tan@@Base+0x228>
   2b7b0:	ldr	x0, [sp, #32]
   2b7b4:	bl	c260 <mpfr_reallocate_func@plt>
   2b7b8:	b	2b7c4 <mpfr_tan@@Base+0x230>
   2b7bc:	mov	x0, x2
   2b7c0:	bl	cd50 <mpfr_allocate_func@plt>
   2b7c4:	add	x8, x0, x26, lsl #3
   2b7c8:	str	x0, [sp, #32]
   2b7cc:	stur	x0, [x29, #-16]
   2b7d0:	stur	w22, [x29, #-32]
   2b7d4:	stur	x27, [x29, #-72]
   2b7d8:	stp	x8, x27, [x29, #-48]
   2b7dc:	b	2b6e4 <mpfr_tan@@Base+0x150>
   2b7e0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b7e4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b7e8:	mov	w1, #0x50                  	// #80
   2b7ec:	add	x0, x0, #0x331
   2b7f0:	add	x2, x2, #0x4df
   2b7f4:	bl	cb90 <mpfr_assert_fail@plt>
   2b7f8:	ldr	x8, [sp, #8]
   2b7fc:	b	2b76c <mpfr_tan@@Base+0x1d8>
   2b800:	ldur	w3, [x29, #-64]
   2b804:	sub	x1, x29, #0x48
   2b808:	mov	x0, x19
   2b80c:	mov	w2, w20
   2b810:	bl	c6f0 <mpfr_set4@plt>
   2b814:	ldr	x1, [sp, #24]
   2b818:	mov	w22, w0
   2b81c:	cbz	x1, 2b828 <mpfr_tan@@Base+0x294>
   2b820:	ldr	x0, [sp, #32]
   2b824:	bl	cc80 <mpfr_free_func@plt>
   2b828:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b82c:	ldr	x1, [x0, #2656]
   2b830:	add	x0, x0, #0xa60
   2b834:	blr	x1
   2b838:	ldr	w9, [sp, #20]
   2b83c:	str	w9, [x25, x0]
   2b840:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b844:	ldr	x1, [x0, #2592]
   2b848:	add	x0, x0, #0xa20
   2b84c:	blr	x1
   2b850:	str	x28, [x25, x0]
   2b854:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b858:	ldr	x1, [x0, #2624]
   2b85c:	add	x0, x0, #0xa40
   2b860:	blr	x1
   2b864:	str	x24, [x25, x0]
   2b868:	ldr	x8, [x19, #16]
   2b86c:	cmp	x8, x24
   2b870:	b.gt	2b900 <mpfr_tan@@Base+0x36c>
   2b874:	cmp	x8, x28
   2b878:	b.lt	2b900 <mpfr_tan@@Base+0x36c>  // b.tstop
   2b87c:	cbz	w22, 2b898 <mpfr_tan@@Base+0x304>
   2b880:	orr	w8, w9, #0x8
   2b884:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b888:	ldr	x1, [x0, #2656]
   2b88c:	add	x0, x0, #0xa60
   2b890:	blr	x1
   2b894:	str	w8, [x25, x0]
   2b898:	mov	w0, w22
   2b89c:	ldp	x20, x19, [sp, #320]
   2b8a0:	ldp	x22, x21, [sp, #304]
   2b8a4:	ldp	x24, x23, [sp, #288]
   2b8a8:	ldp	x26, x25, [sp, #272]
   2b8ac:	ldp	x28, x27, [sp, #256]
   2b8b0:	ldp	x29, x30, [sp, #240]
   2b8b4:	add	sp, sp, #0x150
   2b8b8:	ret
   2b8bc:	and	x9, x8, #0xfffffffffffffffe
   2b8c0:	add	x8, x26, #0x103
   2b8c4:	cmp	x9, x8
   2b8c8:	b.ne	2b934 <mpfr_tan@@Base+0x3a0>  // b.any
   2b8cc:	str	x8, [x19, #16]
   2b8d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b8d4:	ldr	x1, [x0, #2656]
   2b8d8:	add	x0, x0, #0xa60
   2b8dc:	blr	x1
   2b8e0:	mrs	x8, tpidr_el0
   2b8e4:	ldr	w9, [x8, x0]
   2b8e8:	mov	w22, wzr
   2b8ec:	orr	w9, w9, #0x4
   2b8f0:	str	w9, [x8, x0]
   2b8f4:	b	2b898 <mpfr_tan@@Base+0x304>
   2b8f8:	mov	x8, xzr
   2b8fc:	b	2b668 <mpfr_tan@@Base+0xd4>
   2b900:	mov	x0, x19
   2b904:	mov	w1, w22
   2b908:	mov	w2, w20
   2b90c:	bl	cb80 <mpfr_check_range@plt>
   2b910:	mov	w22, w0
   2b914:	b	2b898 <mpfr_tan@@Base+0x304>
   2b918:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b91c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2b920:	add	x0, x0, #0x331
   2b924:	add	x2, x2, #0x490
   2b928:	mov	w1, #0x42                  	// #66
   2b92c:	bl	cb90 <mpfr_assert_fail@plt>
   2b930:	b	2b65c <mpfr_tan@@Base+0xc8>
   2b934:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2b938:	str	x8, [x19, #16]
   2b93c:	ldr	w8, [x21, #8]
   2b940:	mov	w22, wzr
   2b944:	str	w8, [x19, #8]
   2b948:	b	2b898 <mpfr_tan@@Base+0x304>
   2b94c:	mov	w3, #0x1                   	// #1
   2b950:	mov	x0, x19
   2b954:	mov	x1, x21
   2b958:	mov	w4, w20
   2b95c:	bl	c590 <mpfr_round_near_x@plt>
   2b960:	mov	w22, w0
   2b964:	cbnz	w0, 2b898 <mpfr_tan@@Base+0x304>
   2b968:	b	2b5f4 <mpfr_tan@@Base+0x60>
   2b96c:	bl	c940 <mpfr_abort_prec_max@plt>

000000000002b970 <mpfr_fma@@Base>:
   2b970:	stp	x29, x30, [sp, #-96]!
   2b974:	stp	x28, x27, [sp, #16]
   2b978:	stp	x26, x25, [sp, #32]
   2b97c:	stp	x24, x23, [sp, #48]
   2b980:	stp	x22, x21, [sp, #64]
   2b984:	stp	x20, x19, [sp, #80]
   2b988:	mov	x29, sp
   2b98c:	sub	sp, sp, #0x110
   2b990:	ldr	x10, [x1, #16]
   2b994:	mov	x26, #0x2                   	// #2
   2b998:	movk	x26, #0x8000, lsl #48
   2b99c:	add	x8, x26, #0x2
   2b9a0:	mov	w19, w4
   2b9a4:	mov	x21, x3
   2b9a8:	mov	x22, x2
   2b9ac:	mov	x23, x1
   2b9b0:	cmp	x10, x8
   2b9b4:	b.lt	2bdc4 <mpfr_fma@@Base+0x454>  // b.tstop
   2b9b8:	ldr	x11, [x22, #16]
   2b9bc:	cmp	x11, x8
   2b9c0:	b.lt	2bdd0 <mpfr_fma@@Base+0x460>  // b.tstop
   2b9c4:	ldr	x9, [x21, #16]
   2b9c8:	add	x8, x26, #0x2
   2b9cc:	cmp	x9, x8
   2b9d0:	b.lt	2bdd8 <mpfr_fma@@Base+0x468>  // b.tstop
   2b9d4:	ldr	x8, [x23]
   2b9d8:	ldr	x12, [x22]
   2b9dc:	stur	x0, [x29, #-256]
   2b9e0:	add	x20, x11, x10
   2b9e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2b9e8:	ldr	x1, [x0, #2624]
   2b9ec:	add	x0, x0, #0xa40
   2b9f0:	blr	x1
   2b9f4:	mrs	x25, tpidr_el0
   2b9f8:	ldr	x28, [x25, x0]
   2b9fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ba00:	ldr	x1, [x0, #2592]
   2ba04:	add	x0, x0, #0xa20
   2ba08:	blr	x1
   2ba0c:	ldr	x27, [x25, x0]
   2ba10:	cmp	x8, x12
   2ba14:	b.ne	2bb90 <mpfr_fma@@Base+0x220>  // b.any
   2ba18:	cmp	x20, x28
   2ba1c:	b.gt	2bb90 <mpfr_fma@@Base+0x220>
   2ba20:	cmp	x20, x27
   2ba24:	b.le	2bb90 <mpfr_fma@@Base+0x220>
   2ba28:	cmp	x8, #0x3f
   2ba2c:	b.gt	2bab8 <mpfr_fma@@Base+0x148>
   2ba30:	ldr	x10, [x21]
   2ba34:	cmp	x10, x8
   2ba38:	b.ne	2bac4 <mpfr_fma@@Base+0x154>  // b.any
   2ba3c:	ldur	x10, [x29, #-256]
   2ba40:	ldr	x10, [x10]
   2ba44:	cmp	x10, x8
   2ba48:	b.ne	2bac4 <mpfr_fma@@Base+0x154>  // b.any
   2ba4c:	ldr	x10, [x23, #24]
   2ba50:	ldr	x11, [x22, #24]
   2ba54:	lsl	x12, x8, #1
   2ba58:	sub	x13, x29, #0xf8
   2ba5c:	ldr	x14, [x10]
   2ba60:	ldr	x11, [x11]
   2ba64:	sub	x10, x29, #0xc8
   2ba68:	stp	x9, x10, [x29, #-168]
   2ba6c:	umulh	x10, x14, x11
   2ba70:	mul	x11, x11, x14
   2ba74:	stur	x12, [x29, #-40]
   2ba78:	stur	x13, [x29, #-16]
   2ba7c:	stur	x12, [x29, #-184]
   2ba80:	stp	x11, x10, [x29, #-248]
   2ba84:	ldr	w12, [x23, #8]
   2ba88:	ldr	w13, [x22, #8]
   2ba8c:	cmp	x8, #0x20
   2ba90:	mul	w12, w13, w12
   2ba94:	stur	w12, [x29, #-32]
   2ba98:	ldr	w12, [x21, #8]
   2ba9c:	stur	w12, [x29, #-176]
   2baa0:	b.gt	2bd50 <mpfr_fma@@Base+0x3e0>
   2baa4:	tbnz	x10, #63, 2bd78 <mpfr_fma@@Base+0x408>
   2baa8:	lsl	x8, x10, #1
   2baac:	stur	x8, [x29, #-248]
   2bab0:	sub	x20, x20, #0x1
   2bab4:	b	2bd7c <mpfr_fma@@Base+0x40c>
   2bab8:	mov	w9, #0x1400                	// #5120
   2babc:	cmp	x8, x9
   2bac0:	b.gt	2bb90 <mpfr_fma@@Base+0x220>
   2bac4:	sub	x9, x8, #0x1
   2bac8:	add	x8, x8, #0x3e
   2bacc:	cmp	x9, #0x0
   2bad0:	csel	x8, x8, x9, lt  // lt = tstop
   2bad4:	asr	x8, x8, #6
   2bad8:	add	x25, x8, #0x1
   2badc:	lsl	x1, x25, #4
   2bae0:	lsl	x24, x25, #1
   2bae4:	cmp	x1, #0x4, lsl #12
   2bae8:	stur	xzr, [x29, #-184]
   2baec:	b.hi	2bf44 <mpfr_fma@@Base+0x5d4>  // b.pmore
   2baf0:	add	x9, x1, #0xf
   2baf4:	mov	x8, sp
   2baf8:	and	x9, x9, #0xfffffffffffffff0
   2bafc:	sub	x26, x8, x9
   2bb00:	mov	sp, x26
   2bb04:	lsl	x8, x25, #7
   2bb08:	mov	w9, #0x1                   	// #1
   2bb0c:	stur	x26, [x29, #-16]
   2bb10:	stur	x8, [x29, #-40]
   2bb14:	stur	w9, [x29, #-32]
   2bb18:	ldr	x1, [x23, #24]
   2bb1c:	ldr	x2, [x22, #24]
   2bb20:	mov	x0, x26
   2bb24:	mov	x3, x25
   2bb28:	bl	c4c0 <__gmpn_mul_n@plt>
   2bb2c:	add	x8, x26, x24, lsl #3
   2bb30:	ldur	x8, [x8, #-8]
   2bb34:	tbnz	x8, #63, 2bb50 <mpfr_fma@@Base+0x1e0>
   2bb38:	mov	w3, #0x1                   	// #1
   2bb3c:	mov	x0, x26
   2bb40:	mov	x1, x26
   2bb44:	mov	x2, x24
   2bb48:	bl	bd70 <__gmpn_lshift@plt>
   2bb4c:	sub	x20, x20, #0x1
   2bb50:	stur	x20, [x29, #-24]
   2bb54:	ldr	w8, [x23, #8]
   2bb58:	ldr	w9, [x22, #8]
   2bb5c:	ldur	x0, [x29, #-256]
   2bb60:	sub	x1, x29, #0x28
   2bb64:	mov	x2, x21
   2bb68:	mul	w8, w9, w8
   2bb6c:	mov	w3, w19
   2bb70:	stur	w8, [x29, #-32]
   2bb74:	bl	c240 <mpfr_add@plt>
   2bb78:	ldur	x8, [x29, #-184]
   2bb7c:	mov	w24, w0
   2bb80:	cbz	x8, 2bd2c <mpfr_fma@@Base+0x3bc>
   2bb84:	mov	x0, x8
   2bb88:	bl	c460 <mpfr_tmp_free@plt>
   2bb8c:	b	2bd2c <mpfr_fma@@Base+0x3bc>
   2bb90:	sub	x9, x29, #0x4
   2bb94:	stur	w19, [x9, #-256]
   2bb98:	add	x19, x12, x8
   2bb9c:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   2bba0:	cmp	x19, x8
   2bba4:	b.ge	2c15c <mpfr_fma@@Base+0x7ec>  // b.tcont
   2bba8:	cmp	x19, #0x401
   2bbac:	b.lt	2bc08 <mpfr_fma@@Base+0x298>  // b.tstop
   2bbb0:	sub	x8, x19, #0x1
   2bbb4:	add	x9, x19, #0x3e
   2bbb8:	cmp	x8, #0x0
   2bbbc:	csel	x8, x9, x8, lt  // lt = tstop
   2bbc0:	asr	x8, x8, #6
   2bbc4:	lsl	x8, x8, #3
   2bbc8:	add	x24, x8, #0x8
   2bbcc:	mov	x0, x24
   2bbd0:	bl	cd50 <mpfr_allocate_func@plt>
   2bbd4:	mov	x8, x0
   2bbd8:	stur	x0, [x29, #-176]
   2bbdc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bbe0:	ldr	x1, [x0, #2592]
   2bbe4:	add	x0, x0, #0xa20
   2bbe8:	blr	x1
   2bbec:	ldr	x27, [x25, x0]
   2bbf0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bbf4:	ldr	x1, [x0, #2624]
   2bbf8:	add	x0, x0, #0xa40
   2bbfc:	blr	x1
   2bc00:	ldr	x28, [x25, x0]
   2bc04:	b	2bc18 <mpfr_fma@@Base+0x2a8>
   2bc08:	sub	x8, x29, #0xb8
   2bc0c:	mov	x24, xzr
   2bc10:	add	x8, x8, #0x10
   2bc14:	stur	x8, [x29, #-176]
   2bc18:	stur	x8, [x29, #-16]
   2bc1c:	mov	w8, #0x1                   	// #1
   2bc20:	stur	x24, [x29, #-184]
   2bc24:	stur	x19, [x29, #-40]
   2bc28:	stur	w8, [x29, #-32]
   2bc2c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bc30:	ldr	x1, [x0, #2656]
   2bc34:	add	x0, x0, #0xa60
   2bc38:	blr	x1
   2bc3c:	ldr	w19, [x25, x0]
   2bc40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bc44:	ldr	x1, [x0, #2592]
   2bc48:	add	x0, x0, #0xa20
   2bc4c:	blr	x1
   2bc50:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2bc54:	str	x8, [x25, x0]
   2bc58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bc5c:	ldr	x1, [x0, #2624]
   2bc60:	add	x0, x0, #0xa40
   2bc64:	blr	x1
   2bc68:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2bc6c:	str	x8, [x25, x0]
   2bc70:	sub	x0, x29, #0x28
   2bc74:	mov	x1, x23
   2bc78:	mov	x2, x22
   2bc7c:	mov	w3, wzr
   2bc80:	bl	be00 <mpfr_mul@plt>
   2bc84:	cbnz	w0, 2be40 <mpfr_fma@@Base+0x4d0>
   2bc88:	ldur	x20, [x29, #-256]
   2bc8c:	sub	x8, x29, #0x4
   2bc90:	ldur	w3, [x8, #-256]
   2bc94:	sub	x1, x29, #0x28
   2bc98:	mov	x0, x20
   2bc9c:	mov	x2, x21
   2bca0:	bl	c240 <mpfr_add@plt>
   2bca4:	ldur	x1, [x29, #-184]
   2bca8:	mov	w24, w0
   2bcac:	cbz	x1, 2bcb8 <mpfr_fma@@Base+0x348>
   2bcb0:	ldur	x0, [x29, #-176]
   2bcb4:	bl	cc80 <mpfr_free_func@plt>
   2bcb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bcbc:	ldr	x1, [x0, #2656]
   2bcc0:	add	x0, x0, #0xa60
   2bcc4:	blr	x1
   2bcc8:	ldr	w8, [x25, x0]
   2bccc:	orr	w8, w8, w19
   2bcd0:	str	w8, [x25, x0]
   2bcd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bcd8:	ldr	x1, [x0, #2592]
   2bcdc:	add	x0, x0, #0xa20
   2bce0:	blr	x1
   2bce4:	str	x27, [x25, x0]
   2bce8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bcec:	ldr	x1, [x0, #2624]
   2bcf0:	add	x0, x0, #0xa40
   2bcf4:	blr	x1
   2bcf8:	str	x28, [x25, x0]
   2bcfc:	ldr	x9, [x20, #16]
   2bd00:	cmp	x9, x28
   2bd04:	b.gt	2bee4 <mpfr_fma@@Base+0x574>
   2bd08:	cmp	x9, x27
   2bd0c:	b.lt	2bee4 <mpfr_fma@@Base+0x574>  // b.tstop
   2bd10:	cbz	w24, 2bd2c <mpfr_fma@@Base+0x3bc>
   2bd14:	orr	w8, w8, #0x8
   2bd18:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bd1c:	ldr	x1, [x0, #2656]
   2bd20:	add	x0, x0, #0xa60
   2bd24:	blr	x1
   2bd28:	str	w8, [x25, x0]
   2bd2c:	mov	w0, w24
   2bd30:	mov	sp, x29
   2bd34:	ldp	x20, x19, [sp, #80]
   2bd38:	ldp	x22, x21, [sp, #64]
   2bd3c:	ldp	x24, x23, [sp, #48]
   2bd40:	ldp	x26, x25, [sp, #32]
   2bd44:	ldp	x28, x27, [sp, #16]
   2bd48:	ldp	x29, x30, [sp], #96
   2bd4c:	ret
   2bd50:	ldr	x8, [x21, #24]
   2bd54:	ldr	x8, [x8]
   2bd58:	stp	xzr, x8, [x29, #-200]
   2bd5c:	tbnz	x10, #63, 2bd90 <mpfr_fma@@Base+0x420>
   2bd60:	extr	x8, x10, x11, #63
   2bd64:	lsl	x9, x11, #1
   2bd68:	sub	x10, x20, #0x1
   2bd6c:	stp	x9, x8, [x29, #-248]
   2bd70:	stur	x10, [x29, #-24]
   2bd74:	b	2bd94 <mpfr_fma@@Base+0x424>
   2bd78:	stur	x10, [x29, #-248]
   2bd7c:	stur	x20, [x29, #-24]
   2bd80:	ldr	x8, [x21, #24]
   2bd84:	ldr	x8, [x8]
   2bd88:	stur	x8, [x29, #-200]
   2bd8c:	b	2bd94 <mpfr_fma@@Base+0x424>
   2bd90:	stur	x20, [x29, #-24]
   2bd94:	sub	x0, x29, #0x28
   2bd98:	sub	x1, x29, #0x28
   2bd9c:	sub	x2, x29, #0xb8
   2bda0:	mov	w3, w19
   2bda4:	bl	c240 <mpfr_add@plt>
   2bda8:	mov	w3, w0
   2bdac:	ldur	x0, [x29, #-256]
   2bdb0:	sub	x1, x29, #0x28
   2bdb4:	mov	w2, w19
   2bdb8:	bl	cb30 <mpfr_set_1_2@plt>
   2bdbc:	mov	w24, w0
   2bdc0:	b	2bd2c <mpfr_fma@@Base+0x3bc>
   2bdc4:	cmp	x10, x26
   2bdc8:	b.eq	2bde4 <mpfr_fma@@Base+0x474>  // b.none
   2bdcc:	ldr	x11, [x22, #16]
   2bdd0:	cmp	x11, x26
   2bdd4:	b.eq	2bde4 <mpfr_fma@@Base+0x474>  // b.none
   2bdd8:	ldr	x8, [x21, #16]
   2bddc:	cmp	x8, x26
   2bde0:	b.ne	2be10 <mpfr_fma@@Base+0x4a0>  // b.any
   2bde4:	str	x26, [x0, #16]
   2bde8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bdec:	ldr	x1, [x0, #2656]
   2bdf0:	add	x0, x0, #0xa60
   2bdf4:	blr	x1
   2bdf8:	mrs	x8, tpidr_el0
   2bdfc:	ldr	w9, [x8, x0]
   2be00:	mov	w24, wzr
   2be04:	orr	w9, w9, #0x4
   2be08:	str	w9, [x8, x0]
   2be0c:	b	2bd2c <mpfr_fma@@Base+0x3bc>
   2be10:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2be14:	cmp	x10, x9
   2be18:	b.eq	2befc <mpfr_fma@@Base+0x58c>  // b.none
   2be1c:	cmp	x11, x9
   2be20:	b.eq	2befc <mpfr_fma@@Base+0x58c>  // b.none
   2be24:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2be28:	cmp	x8, x9
   2be2c:	b.ne	2c068 <mpfr_fma@@Base+0x6f8>  // b.any
   2be30:	str	x9, [x0, #16]
   2be34:	ldr	w8, [x21, #8]
   2be38:	mov	w24, wzr
   2be3c:	b	2c0cc <mpfr_fma@@Base+0x75c>
   2be40:	ldur	x8, [x29, #-24]
   2be44:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2be48:	cmp	x8, x9
   2be4c:	b.ne	2bf54 <mpfr_fma@@Base+0x5e4>  // b.any
   2be50:	ldur	x1, [x29, #-184]
   2be54:	ldur	w24, [x29, #-32]
   2be58:	cbz	x1, 2be64 <mpfr_fma@@Base+0x4f4>
   2be5c:	ldur	x0, [x29, #-176]
   2be60:	bl	cc80 <mpfr_free_func@plt>
   2be64:	ldr	w8, [x21, #8]
   2be68:	cmp	w24, w8
   2be6c:	b.eq	2be90 <mpfr_fma@@Base+0x520>  // b.none
   2be70:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2be74:	ldr	x1, [x0, #2624]
   2be78:	add	x0, x0, #0xa40
   2be7c:	blr	x1
   2be80:	ldr	x8, [x25, x0]
   2be84:	add	x8, x8, #0x3
   2be88:	cmp	x20, x8
   2be8c:	b.lt	2bfa0 <mpfr_fma@@Base+0x630>  // b.tstop
   2be90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2be94:	ldr	x1, [x0, #2656]
   2be98:	add	x0, x0, #0xa60
   2be9c:	blr	x1
   2bea0:	str	w19, [x25, x0]
   2bea4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bea8:	ldr	x1, [x0, #2592]
   2beac:	add	x0, x0, #0xa20
   2beb0:	blr	x1
   2beb4:	str	x27, [x25, x0]
   2beb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bebc:	ldr	x1, [x0, #2624]
   2bec0:	add	x0, x0, #0xa40
   2bec4:	blr	x1
   2bec8:	sub	x8, x29, #0x4
   2becc:	str	x28, [x25, x0]
   2bed0:	ldur	x0, [x29, #-256]
   2bed4:	ldur	w1, [x8, #-256]
   2bed8:	mov	w2, w24
   2bedc:	bl	bff0 <mpfr_overflow@plt>
   2bee0:	b	2bdbc <mpfr_fma@@Base+0x44c>
   2bee4:	sub	x8, x29, #0x4
   2bee8:	ldur	w2, [x8, #-256]
   2beec:	mov	x0, x20
   2bef0:	mov	w1, w24
   2bef4:	bl	cb80 <mpfr_check_range@plt>
   2bef8:	b	2bdbc <mpfr_fma@@Base+0x44c>
   2befc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2bf00:	cmp	x10, x9
   2bf04:	b.eq	2bde4 <mpfr_fma@@Base+0x474>  // b.none
   2bf08:	cmp	x11, x9
   2bf0c:	b.eq	2bde4 <mpfr_fma@@Base+0x474>  // b.none
   2bf10:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2bf14:	cmp	x8, x9
   2bf18:	b.ne	2c0b8 <mpfr_fma@@Base+0x748>  // b.any
   2bf1c:	ldr	w8, [x23, #8]
   2bf20:	ldr	w9, [x22, #8]
   2bf24:	ldr	w10, [x21, #8]
   2bf28:	mul	w8, w9, w8
   2bf2c:	cmp	w8, w10
   2bf30:	b.ne	2bde4 <mpfr_fma@@Base+0x474>  // b.any
   2bf34:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2bf38:	mov	w24, wzr
   2bf3c:	str	x9, [x0, #16]
   2bf40:	b	2c0cc <mpfr_fma@@Base+0x75c>
   2bf44:	sub	x0, x29, #0xb8
   2bf48:	bl	be70 <mpfr_tmp_allocate@plt>
   2bf4c:	mov	x26, x0
   2bf50:	b	2bb04 <mpfr_fma@@Base+0x194>
   2bf54:	ldr	x8, [x21, #16]
   2bf58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2bf5c:	ldr	x1, [x0, #2592]
   2bf60:	add	x0, x0, #0xa20
   2bf64:	blr	x1
   2bf68:	ldur	x9, [x29, #-256]
   2bf6c:	ldr	x10, [x21]
   2bf70:	ldr	x1, [x25, x0]
   2bf74:	ldr	x9, [x9]
   2bf78:	sub	x8, x8, x1
   2bf7c:	add	x11, x9, #0x1
   2bf80:	cmp	x10, x11
   2bf84:	csinc	x9, x10, x9, gt
   2bf88:	cmp	x8, x9
   2bf8c:	b.ge	2c090 <mpfr_fma@@Base+0x720>  // b.tcont
   2bf90:	ldur	x1, [x29, #-184]
   2bf94:	cbz	x1, 2bfa0 <mpfr_fma@@Base+0x630>
   2bf98:	ldur	x0, [x29, #-176]
   2bf9c:	bl	cc80 <mpfr_free_func@plt>
   2bfa0:	stur	xzr, [x29, #-200]
   2bfa4:	ldr	x8, [x23]
   2bfa8:	ldr	x9, [x22]
   2bfac:	sub	x10, x8, #0x1
   2bfb0:	add	x8, x8, #0x3e
   2bfb4:	cmp	x10, #0x0
   2bfb8:	csel	x8, x8, x10, lt  // lt = tstop
   2bfbc:	sub	x10, x9, #0x1
   2bfc0:	add	x9, x9, #0x3e
   2bfc4:	cmp	x10, #0x0
   2bfc8:	asr	x8, x8, #6
   2bfcc:	csel	x9, x9, x10, lt  // lt = tstop
   2bfd0:	add	x8, x8, x9, asr #6
   2bfd4:	add	x20, x8, #0x2
   2bfd8:	lsl	x1, x20, #3
   2bfdc:	cmp	x1, #0x4, lsl #12
   2bfe0:	b.hi	2c148 <mpfr_fma@@Base+0x7d8>  // b.pmore
   2bfe4:	add	x9, x1, #0xf
   2bfe8:	mov	x8, sp
   2bfec:	and	x9, x9, #0xfffffffffffffff0
   2bff0:	sub	x0, x8, x9
   2bff4:	mov	sp, x0
   2bff8:	lsl	x8, x20, #6
   2bffc:	stur	x0, [x29, #-224]
   2c000:	mov	w9, #0x1                   	// #1
   2c004:	sub	x0, x29, #0xf8
   2c008:	mov	x1, x23
   2c00c:	mov	x2, x22
   2c010:	stur	x8, [x29, #-248]
   2c014:	stur	w9, [x29, #-240]
   2c018:	sub	x20, x29, #0xf8
   2c01c:	bl	c030 <mpfr_ubf_mul_exact@plt>
   2c020:	bl	c2e0 <mpfr_clear_flags@plt>
   2c024:	sub	x8, x29, #0x4
   2c028:	ldur	x0, [x29, #-256]
   2c02c:	ldur	w3, [x8, #-256]
   2c030:	sub	x1, x29, #0xf8
   2c034:	mov	x2, x21
   2c038:	bl	c240 <mpfr_add@plt>
   2c03c:	ldur	x8, [x29, #-232]
   2c040:	add	x9, x26, #0x2
   2c044:	mov	w24, w0
   2c048:	cmp	x8, x9
   2c04c:	b.ne	2c058 <mpfr_fma@@Base+0x6e8>  // b.any
   2c050:	add	x0, x20, #0x20
   2c054:	bl	c210 <mpfr_mpz_clear@plt>
   2c058:	ldur	x0, [x29, #-200]
   2c05c:	cbnz	x0, 2c154 <mpfr_fma@@Base+0x7e4>
   2c060:	ldur	x20, [x29, #-256]
   2c064:	b	2bcb8 <mpfr_fma@@Base+0x348>
   2c068:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2c06c:	cmp	x10, x9
   2c070:	b.eq	2c0d4 <mpfr_fma@@Base+0x764>  // b.none
   2c074:	cmp	x11, x9
   2c078:	b.eq	2c0d4 <mpfr_fma@@Base+0x764>  // b.none
   2c07c:	mov	x1, x23
   2c080:	mov	x2, x22
   2c084:	mov	w3, w19
   2c088:	bl	be00 <mpfr_mul@plt>
   2c08c:	b	2bdbc <mpfr_fma@@Base+0x44c>
   2c090:	mov	w8, #0x1                   	// #1
   2c094:	sub	x0, x29, #0x28
   2c098:	stur	x8, [x29, #-40]
   2c09c:	bl	c310 <mpfr_setmin@plt>
   2c0a0:	ldr	w8, [x23, #8]
   2c0a4:	ldr	w9, [x22, #8]
   2c0a8:	mul	w8, w9, w8
   2c0ac:	stur	w8, [x29, #-32]
   2c0b0:	bl	c2e0 <mpfr_clear_flags@plt>
   2c0b4:	b	2bc88 <mpfr_fma@@Base+0x318>
   2c0b8:	str	x9, [x0, #16]
   2c0bc:	ldr	w8, [x23, #8]
   2c0c0:	ldr	w9, [x22, #8]
   2c0c4:	mov	w24, wzr
   2c0c8:	mul	w8, w9, w8
   2c0cc:	str	w8, [x0, #8]
   2c0d0:	b	2bd2c <mpfr_fma@@Base+0x3bc>
   2c0d4:	cmp	x8, x9
   2c0d8:	b.ne	2c10c <mpfr_fma@@Base+0x79c>  // b.any
   2c0dc:	ldr	w8, [x23, #8]
   2c0e0:	ldr	w9, [x22, #8]
   2c0e4:	cmp	w19, #0x3
   2c0e8:	mul	w9, w9, w8
   2c0ec:	b.ne	2c120 <mpfr_fma@@Base+0x7b0>  // b.any
   2c0f0:	cmp	w9, #0x1
   2c0f4:	mov	w8, #0xffffffff            	// #-1
   2c0f8:	b.lt	2c134 <mpfr_fma@@Base+0x7c4>  // b.tstop
   2c0fc:	ldr	w9, [x21, #8]
   2c100:	cmp	w9, #0x1
   2c104:	cneg	w8, w8, ge  // ge = tcont
   2c108:	b	2c134 <mpfr_fma@@Base+0x7c4>
   2c10c:	ldr	w3, [x21, #8]
   2c110:	mov	x1, x21
   2c114:	mov	w2, w19
   2c118:	bl	c6f0 <mpfr_set4@plt>
   2c11c:	b	2bdbc <mpfr_fma@@Base+0x44c>
   2c120:	mov	w8, #0x1                   	// #1
   2c124:	tbz	w9, #31, 2c134 <mpfr_fma@@Base+0x7c4>
   2c128:	ldr	w9, [x21, #8]
   2c12c:	cmp	w9, #0x0
   2c130:	cneg	w8, w8, lt  // lt = tstop
   2c134:	str	w8, [x0, #8]
   2c138:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2c13c:	mov	w24, wzr
   2c140:	str	x8, [x0, #16]
   2c144:	b	2bd2c <mpfr_fma@@Base+0x3bc>
   2c148:	sub	x0, x29, #0xc8
   2c14c:	bl	be70 <mpfr_tmp_allocate@plt>
   2c150:	b	2bff8 <mpfr_fma@@Base+0x688>
   2c154:	bl	c460 <mpfr_tmp_free@plt>
   2c158:	b	2c060 <mpfr_fma@@Base+0x6f0>
   2c15c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2c160:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2c164:	add	x0, x0, #0x56c
   2c168:	add	x2, x2, #0x572
   2c16c:	mov	w1, #0xd5                  	// #213
   2c170:	bl	cb90 <mpfr_assert_fail@plt>
   2c174:	bl	c940 <mpfr_abort_prec_max@plt>

000000000002c178 <mpfr_fms@@Base>:
   2c178:	sub	sp, sp, #0x30
   2c17c:	stp	x29, x30, [sp, #32]
   2c180:	ldr	x8, [x3]
   2c184:	add	x29, sp, #0x20
   2c188:	str	x8, [sp]
   2c18c:	ldr	w8, [x3, #8]
   2c190:	neg	w8, w8
   2c194:	str	w8, [sp, #8]
   2c198:	ldr	q0, [x3, #16]
   2c19c:	mov	x3, sp
   2c1a0:	str	q0, [sp, #16]
   2c1a4:	bl	c2c0 <mpfr_fma@plt>
   2c1a8:	ldp	x29, x30, [sp, #32]
   2c1ac:	add	sp, sp, #0x30
   2c1b0:	ret

000000000002c1b4 <mpfr_hypot@@Base>:
   2c1b4:	sub	sp, sp, #0xf0
   2c1b8:	stp	x29, x30, [sp, #144]
   2c1bc:	stp	x28, x27, [sp, #160]
   2c1c0:	stp	x26, x25, [sp, #176]
   2c1c4:	stp	x24, x23, [sp, #192]
   2c1c8:	stp	x22, x21, [sp, #208]
   2c1cc:	stp	x20, x19, [sp, #224]
   2c1d0:	ldr	x8, [x1, #16]
   2c1d4:	mov	x11, #0x2                   	// #2
   2c1d8:	movk	x11, #0x8000, lsl #48
   2c1dc:	add	x10, x11, #0x2
   2c1e0:	mov	w20, w3
   2c1e4:	mov	x22, x2
   2c1e8:	mov	x23, x1
   2c1ec:	cmp	x8, x10
   2c1f0:	mov	x26, x0
   2c1f4:	add	x29, sp, #0x90
   2c1f8:	b.lt	2c594 <mpfr_hypot@@Base+0x3e0>  // b.tstop
   2c1fc:	ldr	x9, [x22, #16]
   2c200:	cmp	x9, x10
   2c204:	b.lt	2c5a4 <mpfr_hypot@@Base+0x3f0>  // b.tstop
   2c208:	mov	x0, x23
   2c20c:	mov	x1, x22
   2c210:	bl	ca00 <mpfr_cmpabs@plt>
   2c214:	cmp	w0, #0x0
   2c218:	csel	x21, x23, x22, lt  // lt = tstop
   2c21c:	csel	x22, x22, x23, lt  // lt = tstop
   2c220:	ldr	x25, [x26]
   2c224:	ldr	x8, [x22]
   2c228:	ldr	x24, [x22, #16]
   2c22c:	ldr	x9, [x21, #16]
   2c230:	mov	w10, #0x2                   	// #2
   2c234:	cmp	x8, x25
   2c238:	csel	x11, x8, x25, gt
   2c23c:	cmp	w20, #0x0
   2c240:	sub	x9, x24, x9
   2c244:	cinc	x11, x11, eq  // eq = none
   2c248:	cmp	w20, #0x4
   2c24c:	csel	w20, w10, w20, eq  // eq = none
   2c250:	cmp	x9, x11, lsl #1
   2c254:	b.ls	2c2a4 <mpfr_hypot@@Base+0xf0>  // b.plast
   2c258:	cmp	w20, #0x2
   2c25c:	b.eq	2c5f4 <mpfr_hypot@@Base+0x440>  // b.none
   2c260:	cmp	x8, x25
   2c264:	b.gt	2c67c <mpfr_hypot@@Base+0x4c8>
   2c268:	mov	w3, #0x1                   	// #1
   2c26c:	mov	x0, x26
   2c270:	mov	x1, x22
   2c274:	mov	w2, w20
   2c278:	bl	c6f0 <mpfr_set4@plt>
   2c27c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c280:	ldr	x1, [x0, #2656]
   2c284:	add	x0, x0, #0xa60
   2c288:	blr	x1
   2c28c:	mrs	x8, tpidr_el0
   2c290:	ldr	w9, [x8, x0]
   2c294:	mov	w22, #0xffffffff            	// #-1
   2c298:	orr	w9, w9, #0x8
   2c29c:	str	w9, [x8, x0]
   2c2a0:	b	2c570 <mpfr_hypot@@Base+0x3bc>
   2c2a4:	ldr	x9, [x21]
   2c2a8:	cmp	x8, x9
   2c2ac:	csel	x8, x8, x9, gt
   2c2b0:	subs	x19, x25, #0x1
   2c2b4:	stp	x26, x8, [sp, #32]
   2c2b8:	b.eq	2c644 <mpfr_hypot@@Base+0x490>  // b.none
   2c2bc:	b.le	2c76c <mpfr_hypot@@Base+0x5b8>
   2c2c0:	clz	x8, x19
   2c2c4:	mov	w9, #0x40                  	// #64
   2c2c8:	sub	x8, x9, x8
   2c2cc:	add	x8, x25, x8
   2c2d0:	add	x23, x8, #0x4
   2c2d4:	sub	x0, x29, #0x20
   2c2d8:	mov	x1, x23
   2c2dc:	bl	cad0 <mpfr_init2@plt>
   2c2e0:	sub	x0, x29, #0x40
   2c2e4:	mov	x1, x23
   2c2e8:	bl	cad0 <mpfr_init2@plt>
   2c2ec:	add	x0, sp, #0x30
   2c2f0:	mov	x1, x23
   2c2f4:	bl	cad0 <mpfr_init2@plt>
   2c2f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c2fc:	ldr	x1, [x0, #2656]
   2c300:	add	x0, x0, #0xa60
   2c304:	blr	x1
   2c308:	mrs	x27, tpidr_el0
   2c30c:	ldr	w8, [x27, x0]
   2c310:	str	w8, [sp, #28]
   2c314:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c318:	ldr	x1, [x0, #2592]
   2c31c:	add	x0, x0, #0xa20
   2c320:	blr	x1
   2c324:	ldr	x9, [x27, x0]
   2c328:	mov	x8, x0
   2c32c:	str	x9, [sp, #16]
   2c330:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c334:	ldr	x1, [x0, #2624]
   2c338:	add	x0, x0, #0xa40
   2c33c:	blr	x1
   2c340:	ldr	x26, [x27, x0]
   2c344:	mov	x11, #0x1fffffffffffffff    	// #2305843009213693951
   2c348:	cmp	w20, #0x0
   2c34c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2c350:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2c354:	str	w20, [sp, #24]
   2c358:	mov	w12, #0x40                  	// #64
   2c35c:	mov	w20, #0x2                   	// #2
   2c360:	sub	x24, x11, x24
   2c364:	cinc	x25, x25, eq  // eq = none
   2c368:	str	x12, [sp, #8]
   2c36c:	str	x9, [x27, x8]
   2c370:	str	x10, [x27, x0]
   2c374:	sub	x0, x29, #0x40
   2c378:	mov	w3, #0x1                   	// #1
   2c37c:	mov	x1, x22
   2c380:	mov	x2, x24
   2c384:	mov	w19, #0x4                   	// #4
   2c388:	bl	bc40 <mpfr_mul_2si@plt>
   2c38c:	mov	w28, w0
   2c390:	add	x0, sp, #0x30
   2c394:	mov	w3, #0x1                   	// #1
   2c398:	mov	x1, x21
   2c39c:	mov	x2, x24
   2c3a0:	bl	bc40 <mpfr_mul_2si@plt>
   2c3a4:	orr	w28, w0, w28
   2c3a8:	sub	x0, x29, #0x40
   2c3ac:	sub	x1, x29, #0x40
   2c3b0:	mov	w2, #0x1                   	// #1
   2c3b4:	bl	c450 <mpfr_sqr@plt>
   2c3b8:	orr	w28, w28, w0
   2c3bc:	sub	x0, x29, #0x20
   2c3c0:	add	x1, sp, #0x30
   2c3c4:	add	x2, sp, #0x30
   2c3c8:	sub	x3, x29, #0x40
   2c3cc:	mov	w4, #0x1                   	// #1
   2c3d0:	bl	c2c0 <mpfr_fma@plt>
   2c3d4:	orr	w28, w28, w0
   2c3d8:	sub	x0, x29, #0x20
   2c3dc:	sub	x1, x29, #0x20
   2c3e0:	mov	w2, #0x1                   	// #1
   2c3e4:	bl	c990 <mpfr_sqrt@plt>
   2c3e8:	ldr	x8, [sp, #40]
   2c3ec:	orr	w9, w28, w0
   2c3f0:	mov	x28, #0x2                   	// #2
   2c3f4:	movk	x28, #0x8000, lsl #48
   2c3f8:	cmp	x23, x8
   2c3fc:	csel	x8, x19, x20, lt  // lt = tstop
   2c400:	cbz	w9, 2c4b4 <mpfr_hypot@@Base+0x300>
   2c404:	ldur	x9, [x29, #-16]
   2c408:	add	x10, x28, #0x2
   2c40c:	cmp	x9, x10
   2c410:	b.lt	2c444 <mpfr_hypot@@Base+0x290>  // b.tstop
   2c414:	ldur	x9, [x29, #-32]
   2c418:	ldur	x0, [x29, #-8]
   2c41c:	sub	x2, x23, x8
   2c420:	mov	x3, x25
   2c424:	sub	x10, x9, #0x1
   2c428:	add	x9, x9, #0x3e
   2c42c:	cmp	x10, #0x0
   2c430:	csel	x9, x9, x10, lt  // lt = tstop
   2c434:	asr	x9, x9, #6
   2c438:	add	x1, x9, #0x1
   2c43c:	bl	c3d0 <mpfr_round_p@plt>
   2c440:	cbnz	w0, 2c4b4 <mpfr_hypot@@Base+0x300>
   2c444:	ldr	x20, [sp, #8]
   2c448:	sub	x8, x28, x23
   2c44c:	sub	x8, x8, #0x103
   2c450:	cmp	x20, x8
   2c454:	b.gt	2c498 <mpfr_hypot@@Base+0x2e4>
   2c458:	add	x23, x23, x20
   2c45c:	cmp	x23, #0x0
   2c460:	cinc	x8, x23, lt  // lt = tstop
   2c464:	asr	x8, x8, #1
   2c468:	sub	x0, x29, #0x20
   2c46c:	mov	x1, x23
   2c470:	str	x8, [sp, #8]
   2c474:	bl	bf80 <mpfr_set_prec@plt>
   2c478:	sub	x0, x29, #0x40
   2c47c:	mov	x1, x23
   2c480:	bl	bf80 <mpfr_set_prec@plt>
   2c484:	add	x0, sp, #0x30
   2c488:	mov	x1, x23
   2c48c:	bl	bf80 <mpfr_set_prec@plt>
   2c490:	mov	w20, #0x2                   	// #2
   2c494:	b	2c374 <mpfr_hypot@@Base+0x1c0>
   2c498:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2c49c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2c4a0:	mov	w1, #0xbd                  	// #189
   2c4a4:	add	x0, x0, #0x5bc
   2c4a8:	add	x2, x2, #0xe2
   2c4ac:	bl	cb90 <mpfr_assert_fail@plt>
   2c4b0:	b	2c458 <mpfr_hypot@@Base+0x2a4>
   2c4b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c4b8:	ldr	x1, [x0, #2656]
   2c4bc:	add	x0, x0, #0xa60
   2c4c0:	blr	x1
   2c4c4:	ldr	x25, [sp, #32]
   2c4c8:	ldr	w20, [sp, #24]
   2c4cc:	mov	x21, x0
   2c4d0:	str	wzr, [x27, x0]
   2c4d4:	sub	x1, x29, #0x20
   2c4d8:	mov	x0, x25
   2c4dc:	mov	x2, x24
   2c4e0:	mov	w3, w20
   2c4e4:	bl	c470 <mpfr_div_2si@plt>
   2c4e8:	ldr	w23, [x27, x21]
   2c4ec:	mov	w22, w0
   2c4f0:	sub	x0, x29, #0x20
   2c4f4:	bl	c110 <mpfr_clear@plt>
   2c4f8:	add	x0, sp, #0x30
   2c4fc:	bl	c110 <mpfr_clear@plt>
   2c500:	sub	x0, x29, #0x40
   2c504:	bl	c110 <mpfr_clear@plt>
   2c508:	ldr	w9, [sp, #28]
   2c50c:	str	w9, [x27, x21]
   2c510:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c514:	ldr	x1, [x0, #2592]
   2c518:	add	x0, x0, #0xa20
   2c51c:	blr	x1
   2c520:	ldr	x10, [sp, #16]
   2c524:	str	x10, [x27, x0]
   2c528:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c52c:	ldr	x1, [x0, #2624]
   2c530:	add	x0, x0, #0xa40
   2c534:	blr	x1
   2c538:	str	x26, [x27, x0]
   2c53c:	tbnz	w23, #1, 2c64c <mpfr_hypot@@Base+0x498>
   2c540:	ldr	x8, [x25, #16]
   2c544:	cmp	x8, x26
   2c548:	b.gt	2c668 <mpfr_hypot@@Base+0x4b4>
   2c54c:	cmp	x8, x10
   2c550:	b.lt	2c668 <mpfr_hypot@@Base+0x4b4>  // b.tstop
   2c554:	cbz	w22, 2c570 <mpfr_hypot@@Base+0x3bc>
   2c558:	orr	w8, w9, #0x8
   2c55c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c560:	ldr	x1, [x0, #2656]
   2c564:	add	x0, x0, #0xa60
   2c568:	blr	x1
   2c56c:	str	w8, [x27, x0]
   2c570:	mov	w0, w22
   2c574:	ldp	x20, x19, [sp, #224]
   2c578:	ldp	x22, x21, [sp, #208]
   2c57c:	ldp	x24, x23, [sp, #192]
   2c580:	ldp	x26, x25, [sp, #176]
   2c584:	ldp	x28, x27, [sp, #160]
   2c588:	ldp	x29, x30, [sp, #144]
   2c58c:	add	sp, sp, #0xf0
   2c590:	ret
   2c594:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2c598:	cmp	x8, x9
   2c59c:	b.eq	2c5b0 <mpfr_hypot@@Base+0x3fc>  // b.none
   2c5a0:	ldr	x9, [x22, #16]
   2c5a4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   2c5a8:	cmp	x9, x10
   2c5ac:	b.ne	2c5c8 <mpfr_hypot@@Base+0x414>  // b.any
   2c5b0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2c5b4:	mov	w9, #0x1                   	// #1
   2c5b8:	mov	w22, wzr
   2c5bc:	str	x8, [x26, #16]
   2c5c0:	str	w9, [x26, #8]
   2c5c4:	b	2c570 <mpfr_hypot@@Base+0x3bc>
   2c5c8:	cmp	x8, x11
   2c5cc:	b.eq	2c788 <mpfr_hypot@@Base+0x5d4>  // b.none
   2c5d0:	cmp	x9, x11
   2c5d4:	b.eq	2c788 <mpfr_hypot@@Base+0x5d4>  // b.none
   2c5d8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2c5dc:	mov	w3, #0x1                   	// #1
   2c5e0:	mov	x0, x26
   2c5e4:	cmp	x8, x9
   2c5e8:	b.ne	2c7b0 <mpfr_hypot@@Base+0x5fc>  // b.any
   2c5ec:	mov	x1, x22
   2c5f0:	b	2c7b4 <mpfr_hypot@@Base+0x600>
   2c5f4:	mov	w2, #0x2                   	// #2
   2c5f8:	mov	w3, #0x1                   	// #1
   2c5fc:	mov	x0, x26
   2c600:	mov	x1, x22
   2c604:	bl	c6f0 <mpfr_set4@plt>
   2c608:	cbnz	w0, 2c624 <mpfr_hypot@@Base+0x470>
   2c60c:	mov	x0, x26
   2c610:	bl	c6c0 <mpfr_nexttoinf@plt>
   2c614:	ldr	x8, [x26, #16]
   2c618:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2c61c:	cmp	x8, x9
   2c620:	b.eq	2c930 <mpfr_hypot@@Base+0x77c>  // b.none
   2c624:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c628:	ldr	x1, [x0, #2656]
   2c62c:	add	x0, x0, #0xa60
   2c630:	blr	x1
   2c634:	mrs	x8, tpidr_el0
   2c638:	ldr	w9, [x8, x0]
   2c63c:	mov	w22, #0x1                   	// #1
   2c640:	b	2c298 <mpfr_hypot@@Base+0xe4>
   2c644:	mov	x8, xzr
   2c648:	b	2c2cc <mpfr_hypot@@Base+0x118>
   2c64c:	orr	w9, w9, #0x2
   2c650:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c654:	ldr	x1, [x0, #2656]
   2c658:	add	x0, x0, #0xa60
   2c65c:	blr	x1
   2c660:	str	w9, [x27, x0]
   2c664:	b	2c540 <mpfr_hypot@@Base+0x38c>
   2c668:	mov	x0, x25
   2c66c:	mov	w1, w22
   2c670:	mov	w2, w20
   2c674:	bl	cb80 <mpfr_check_range@plt>
   2c678:	b	2c7bc <mpfr_hypot@@Base+0x608>
   2c67c:	mov	w9, #0x1                   	// #1
   2c680:	str	x24, [x26, #16]
   2c684:	sub	x10, x8, #0x1
   2c688:	str	w9, [x26, #8]
   2c68c:	add	x8, x8, #0x3e
   2c690:	cmp	x10, #0x0
   2c694:	ldr	x11, [x22, #24]
   2c698:	sub	x13, x25, #0x1
   2c69c:	csel	x8, x8, x10, lt  // lt = tstop
   2c6a0:	ldr	x21, [x26, #24]
   2c6a4:	add	x14, x25, #0x3e
   2c6a8:	cmp	x13, #0x0
   2c6ac:	asr	x12, x8, #6
   2c6b0:	mov	x16, #0xffffffffffffffff    	// #-1
   2c6b4:	csel	x9, x14, x13, lt  // lt = tstop
   2c6b8:	add	x17, x12, #0x1
   2c6bc:	neg	w15, w25
   2c6c0:	asr	x10, x9, #6
   2c6c4:	add	x8, x11, x17, lsl #3
   2c6c8:	eor	x9, x16, x9, asr #6
   2c6cc:	ands	x14, x15, #0x3f
   2c6d0:	add	x13, x10, #0x1
   2c6d4:	add	x1, x8, x9, lsl #3
   2c6d8:	b.eq	2c8d8 <mpfr_hypot@@Base+0x724>  // b.none
   2c6dc:	ldr	x15, [x1]
   2c6e0:	sub	x14, x14, #0x1
   2c6e4:	mov	w16, #0x1                   	// #1
   2c6e8:	lsl	x16, x16, x14
   2c6ec:	sub	x18, x16, #0x1
   2c6f0:	and	x14, x15, x16
   2c6f4:	and	x15, x15, x18
   2c6f8:	cbz	w20, 2c700 <mpfr_hypot@@Base+0x54c>
   2c6fc:	cbnz	x14, 2c728 <mpfr_hypot@@Base+0x574>
   2c700:	cbnz	x15, 2c728 <mpfr_hypot@@Base+0x574>
   2c704:	sub	x17, x17, x13
   2c708:	cbz	x17, 2c728 <mpfr_hypot@@Base+0x574>
   2c70c:	mvn	x15, x10
   2c710:	add	x17, x15, x12
   2c714:	ldr	x15, [x11, x17, lsl #3]
   2c718:	subs	x17, x17, #0x1
   2c71c:	cset	w18, cs  // cs = hs, nlast
   2c720:	cbnz	x15, 2c728 <mpfr_hypot@@Base+0x574>
   2c724:	tbnz	w18, #0, 2c714 <mpfr_hypot@@Base+0x560>
   2c728:	lsl	x23, x16, #1
   2c72c:	cmp	w20, #0x5
   2c730:	b.hi	2c7c4 <mpfr_hypot@@Base+0x610>  // b.pmore
   2c734:	adrp	x17, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2c738:	mov	w16, w20
   2c73c:	add	x17, x17, #0x5b6
   2c740:	adr	x18, 2c750 <mpfr_hypot@@Base+0x59c>
   2c744:	ldrb	w0, [x17, x16]
   2c748:	add	x18, x18, x0, lsl #2
   2c74c:	br	x18
   2c750:	cmp	x21, x1
   2c754:	b.eq	2c764 <mpfr_hypot@@Base+0x5b0>  // b.none
   2c758:	lsl	x2, x13, #3
   2c75c:	mov	x0, x21
   2c760:	bl	bad0 <memcpy@plt>
   2c764:	mov	w22, #0xffffffff            	// #-1
   2c768:	b	2c8ac <mpfr_hypot@@Base+0x6f8>
   2c76c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2c770:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2c774:	add	x0, x0, #0x5bc
   2c778:	add	x2, x2, #0xd3f
   2c77c:	mov	w1, #0x8c                  	// #140
   2c780:	bl	cb90 <mpfr_assert_fail@plt>
   2c784:	b	2c2c0 <mpfr_hypot@@Base+0x10c>
   2c788:	str	x11, [x26, #16]
   2c78c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c790:	ldr	x1, [x0, #2656]
   2c794:	add	x0, x0, #0xa60
   2c798:	blr	x1
   2c79c:	mrs	x8, tpidr_el0
   2c7a0:	ldr	w9, [x8, x0]
   2c7a4:	mov	w22, wzr
   2c7a8:	orr	w9, w9, #0x4
   2c7ac:	b	2c29c <mpfr_hypot@@Base+0xe8>
   2c7b0:	mov	x1, x23
   2c7b4:	mov	w2, w20
   2c7b8:	bl	c6f0 <mpfr_set4@plt>
   2c7bc:	mov	w22, w0
   2c7c0:	b	2c570 <mpfr_hypot@@Base+0x3bc>
   2c7c4:	orr	x14, x15, x14
   2c7c8:	cbz	x14, 2c750 <mpfr_hypot@@Base+0x59c>
   2c7cc:	ldr	x13, [x1]
   2c7d0:	adds	x13, x13, x23
   2c7d4:	str	x13, [x21]
   2c7d8:	b.cc	2c840 <mpfr_hypot@@Base+0x68c>  // b.lo, b.ul, b.last
   2c7dc:	sub	x12, x12, x10
   2c7e0:	add	x11, x11, x12, lsl #3
   2c7e4:	mov	x14, xzr
   2c7e8:	add	x13, x21, #0x8
   2c7ec:	add	x12, x11, #0x8
   2c7f0:	add	x11, x14, #0x1
   2c7f4:	cmp	x11, x10
   2c7f8:	b.gt	2c870 <mpfr_hypot@@Base+0x6bc>
   2c7fc:	ldr	x15, [x12, x14, lsl #3]
   2c800:	mov	x14, x11
   2c804:	adds	x15, x15, #0x1
   2c808:	str	x15, [x13], #8
   2c80c:	b.cs	2c7f0 <mpfr_hypot@@Base+0x63c>  // b.hs, b.nlast
   2c810:	cmp	x1, x21
   2c814:	mov	w22, #0x1                   	// #1
   2c818:	b.eq	2c8ac <mpfr_hypot@@Base+0x6f8>  // b.none
   2c81c:	cmp	x11, x10
   2c820:	b.ge	2c8ac <mpfr_hypot@@Base+0x6f8>  // b.tcont
   2c824:	add	x9, x9, x11
   2c828:	add	x9, x9, #0x1
   2c82c:	ldr	x10, [x8, x9, lsl #3]
   2c830:	adds	x9, x9, #0x1
   2c834:	str	x10, [x13], #8
   2c838:	b.cc	2c82c <mpfr_hypot@@Base+0x678>  // b.lo, b.ul, b.last
   2c83c:	b	2c8a8 <mpfr_hypot@@Base+0x6f4>
   2c840:	cmp	x25, #0x41
   2c844:	mov	w22, #0x1                   	// #1
   2c848:	b.lt	2c8ac <mpfr_hypot@@Base+0x6f8>  // b.tstop
   2c84c:	cmp	x1, x21
   2c850:	b.eq	2c8ac <mpfr_hypot@@Base+0x6f8>  // b.none
   2c854:	add	x9, x9, #0x1
   2c858:	add	x10, x21, #0x8
   2c85c:	ldr	x11, [x8, x9, lsl #3]
   2c860:	adds	x9, x9, #0x1
   2c864:	str	x11, [x10], #8
   2c868:	b.cc	2c85c <mpfr_hypot@@Base+0x6a8>  // b.lo, b.ul, b.last
   2c86c:	b	2c8a8 <mpfr_hypot@@Base+0x6f4>
   2c870:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   2c874:	str	x8, [x21, x10, lsl #3]
   2c878:	ldr	x8, [x26, #16]
   2c87c:	mov	x10, x26
   2c880:	add	x9, x8, #0x1
   2c884:	str	x9, [x26, #16]
   2c888:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c88c:	ldr	x1, [x0, #2624]
   2c890:	add	x0, x0, #0xa40
   2c894:	blr	x1
   2c898:	mrs	x9, tpidr_el0
   2c89c:	ldr	x9, [x9, x0]
   2c8a0:	cmp	x8, x9
   2c8a4:	b.ge	2c954 <mpfr_hypot@@Base+0x7a0>  // b.tcont
   2c8a8:	mov	w22, #0x1                   	// #1
   2c8ac:	ldr	x8, [x21]
   2c8b0:	neg	x9, x23
   2c8b4:	and	x8, x8, x9
   2c8b8:	str	x8, [x21]
   2c8bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c8c0:	ldr	x1, [x0, #2656]
   2c8c4:	add	x0, x0, #0xa60
   2c8c8:	blr	x1
   2c8cc:	mrs	x8, tpidr_el0
   2c8d0:	ldr	w9, [x8, x0]
   2c8d4:	b	2c298 <mpfr_hypot@@Base+0xe4>
   2c8d8:	ldur	x15, [x1, #-8]
   2c8dc:	mov	w18, w20
   2c8e0:	and	x14, x15, #0x8000000000000000
   2c8e4:	and	x15, x15, #0x7fffffffffffffff
   2c8e8:	cbz	w20, 2c8f8 <mpfr_hypot@@Base+0x744>
   2c8ec:	cbz	x14, 2c8f8 <mpfr_hypot@@Base+0x744>
   2c8f0:	mov	w23, #0x1                   	// #1
   2c8f4:	b	2c928 <mpfr_hypot@@Base+0x774>
   2c8f8:	mov	w23, #0x1                   	// #1
   2c8fc:	cbnz	x15, 2c928 <mpfr_hypot@@Base+0x774>
   2c900:	sub	x16, x12, x13
   2c904:	cbz	x16, 2c928 <mpfr_hypot@@Base+0x774>
   2c908:	sub	x15, x12, x10
   2c90c:	sub	x16, x15, #0x2
   2c910:	mov	w23, #0x1                   	// #1
   2c914:	ldr	x15, [x11, x16, lsl #3]
   2c918:	subs	x16, x16, #0x1
   2c91c:	cset	w17, cs  // cs = hs, nlast
   2c920:	cbnz	x15, 2c928 <mpfr_hypot@@Base+0x774>
   2c924:	tbnz	w17, #0, 2c914 <mpfr_hypot@@Base+0x760>
   2c928:	mov	w20, w18
   2c92c:	b	2c72c <mpfr_hypot@@Base+0x578>
   2c930:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c934:	ldr	x1, [x0, #2656]
   2c938:	add	x0, x0, #0xa60
   2c93c:	blr	x1
   2c940:	mrs	x8, tpidr_el0
   2c944:	ldr	w9, [x8, x0]
   2c948:	orr	w9, w9, #0x2
   2c94c:	str	w9, [x8, x0]
   2c950:	b	2c624 <mpfr_hypot@@Base+0x470>
   2c954:	mov	w2, #0x1                   	// #1
   2c958:	mov	x0, x26
   2c95c:	mov	w1, w20
   2c960:	bl	bff0 <mpfr_overflow@plt>
   2c964:	b	2c7bc <mpfr_hypot@@Base+0x608>

000000000002c968 <mpfr_log1p@@Base>:
   2c968:	sub	sp, sp, #0xe0
   2c96c:	stp	x29, x30, [sp, #128]
   2c970:	stp	x28, x27, [sp, #144]
   2c974:	stp	x26, x25, [sp, #160]
   2c978:	stp	x24, x23, [sp, #176]
   2c97c:	stp	x22, x21, [sp, #192]
   2c980:	stp	x20, x19, [sp, #208]
   2c984:	ldr	x8, [x1, #16]
   2c988:	mov	x28, #0x2                   	// #2
   2c98c:	movk	x28, #0x8000, lsl #48
   2c990:	add	x9, x28, #0x2
   2c994:	mov	x21, x1
   2c998:	cmp	x8, x9
   2c99c:	mov	x24, x0
   2c9a0:	add	x29, sp, #0x80
   2c9a4:	b.lt	2cda0 <mpfr_log1p@@Base+0x438>  // b.tstop
   2c9a8:	mov	w25, w2
   2c9ac:	tbnz	x8, #63, 2cd20 <mpfr_log1p@@Base+0x3b8>
   2c9b0:	mov	x1, #0xffffffffffffffff    	// #-1
   2c9b4:	mov	x0, x21
   2c9b8:	mov	x2, xzr
   2c9bc:	bl	c430 <mpfr_cmp_si_2exp@plt>
   2c9c0:	cmp	w0, #0x0
   2c9c4:	b.le	2cdd4 <mpfr_log1p@@Base+0x46c>
   2c9c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c9cc:	ldr	x1, [x0, #2656]
   2c9d0:	add	x0, x0, #0xa60
   2c9d4:	blr	x1
   2c9d8:	mrs	x27, tpidr_el0
   2c9dc:	ldr	w20, [x27, x0]
   2c9e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c9e4:	ldr	x1, [x0, #2592]
   2c9e8:	add	x0, x0, #0xa20
   2c9ec:	blr	x1
   2c9f0:	ldr	x26, [x27, x0]
   2c9f4:	mov	x8, x0
   2c9f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2c9fc:	ldr	x1, [x0, #2624]
   2ca00:	add	x0, x0, #0xa40
   2ca04:	blr	x1
   2ca08:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2ca0c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2ca10:	ldr	x19, [x27, x0]
   2ca14:	str	x9, [x27, x8]
   2ca18:	str	x10, [x27, x0]
   2ca1c:	ldr	x22, [x24]
   2ca20:	subs	x23, x22, #0x1
   2ca24:	b.eq	2ce00 <mpfr_log1p@@Base+0x498>  // b.none
   2ca28:	b.le	2ce20 <mpfr_log1p@@Base+0x4b8>
   2ca2c:	clz	x8, x23
   2ca30:	mov	w9, #0x40                  	// #64
   2ca34:	sub	x8, x9, x8
   2ca38:	ldr	x9, [x21, #16]
   2ca3c:	add	x8, x22, x8
   2ca40:	add	x0, sp, #0x20
   2ca44:	neg	x10, x9
   2ca48:	and	x9, x10, x9, asr #63
   2ca4c:	add	x8, x8, x9
   2ca50:	add	x23, x8, #0x6
   2ca54:	mov	x1, x23
   2ca58:	bl	cad0 <mpfr_init2@plt>
   2ca5c:	cmp	w25, #0x0
   2ca60:	mov	w8, #0x40                  	// #64
   2ca64:	str	x8, [sp, #8]
   2ca68:	cinc	x8, x22, eq  // eq = none
   2ca6c:	stp	x8, x24, [sp, #16]
   2ca70:	mov	x0, x22
   2ca74:	bl	bd20 <__gmpfr_int_ceil_log2@plt>
   2ca78:	add	w8, w0, #0x1
   2ca7c:	ldr	x9, [x21, #16]
   2ca80:	sxtw	x8, w8
   2ca84:	sdiv	x8, x22, x8
   2ca88:	neg	x8, x8
   2ca8c:	cmp	x9, x8
   2ca90:	b.le	2cad0 <mpfr_log1p@@Base+0x168>
   2ca94:	add	x0, sp, #0x20
   2ca98:	mov	w2, #0x1                   	// #1
   2ca9c:	mov	x1, x21
   2caa0:	mov	w3, wzr
   2caa4:	bl	c2d0 <mpfr_add_ui@plt>
   2caa8:	cbz	w0, 2cd8c <mpfr_log1p@@Base+0x424>
   2caac:	add	x0, sp, #0x20
   2cab0:	add	x1, sp, #0x20
   2cab4:	mov	w2, wzr
   2cab8:	bl	c130 <mpfr_log@plt>
   2cabc:	ldr	x8, [sp, #48]
   2cac0:	mov	w9, #0x2                   	// #2
   2cac4:	sub	x9, x9, x8
   2cac8:	bic	x24, x9, x9, asr #63
   2cacc:	b	2cbbc <mpfr_log1p@@Base+0x254>
   2cad0:	ldr	x28, [sp, #32]
   2cad4:	sub	x0, x29, #0x20
   2cad8:	str	w25, [sp, #4]
   2cadc:	mov	x1, x28
   2cae0:	bl	cad0 <mpfr_init2@plt>
   2cae4:	add	x0, sp, #0x40
   2cae8:	mov	x1, x28
   2caec:	bl	cad0 <mpfr_init2@plt>
   2caf0:	ldr	w3, [x21, #8]
   2caf4:	sub	x0, x29, #0x20
   2caf8:	mov	w2, #0x5                   	// #5
   2cafc:	mov	x1, x21
   2cb00:	bl	c6f0 <mpfr_set4@plt>
   2cb04:	ldur	w3, [x29, #-24]
   2cb08:	add	x0, sp, #0x20
   2cb0c:	sub	x1, x29, #0x20
   2cb10:	mov	w2, #0x5                   	// #5
   2cb14:	bl	c6f0 <mpfr_set4@plt>
   2cb18:	mov	w24, #0xc                   	// #12
   2cb1c:	mov	w25, #0x2                   	// #2
   2cb20:	sub	x0, x29, #0x20
   2cb24:	sub	x1, x29, #0x20
   2cb28:	mov	w3, #0x5                   	// #5
   2cb2c:	mov	x2, x21
   2cb30:	bl	be00 <mpfr_mul@plt>
   2cb34:	add	x0, sp, #0x40
   2cb38:	sub	x1, x29, #0x20
   2cb3c:	mov	w3, #0x5                   	// #5
   2cb40:	mov	x2, x25
   2cb44:	bl	ccc0 <mpfr_div_ui@plt>
   2cb48:	ldr	x8, [sp, #48]
   2cb4c:	ldr	x9, [sp, #80]
   2cb50:	sub	x8, x8, x28
   2cb54:	cmp	x9, x8
   2cb58:	b.le	2cb88 <mpfr_log1p@@Base+0x220>
   2cb5c:	add	x0, sp, #0x20
   2cb60:	add	x1, sp, #0x20
   2cb64:	add	x2, sp, #0x40
   2cb68:	mov	w3, #0x5                   	// #5
   2cb6c:	tbnz	w25, #0, 2cb78 <mpfr_log1p@@Base+0x210>
   2cb70:	bl	bc20 <mpfr_sub@plt>
   2cb74:	b	2cb7c <mpfr_log1p@@Base+0x214>
   2cb78:	bl	c240 <mpfr_add@plt>
   2cb7c:	add	x25, x25, #0x1
   2cb80:	add	x24, x24, #0x2
   2cb84:	b	2cb20 <mpfr_log1p@@Base+0x1b8>
   2cb88:	mov	x0, x24
   2cb8c:	bl	bd20 <__gmpfr_int_ceil_log2@plt>
   2cb90:	cmp	x28, w0, sxtw
   2cb94:	sxtw	x24, w0
   2cb98:	b.le	2cc34 <mpfr_log1p@@Base+0x2cc>
   2cb9c:	sub	x0, x29, #0x20
   2cba0:	bl	c110 <mpfr_clear@plt>
   2cba4:	add	x0, sp, #0x40
   2cba8:	bl	c110 <mpfr_clear@plt>
   2cbac:	ldr	x8, [sp, #48]
   2cbb0:	ldr	w25, [sp, #4]
   2cbb4:	mov	x28, #0x2                   	// #2
   2cbb8:	movk	x28, #0x8000, lsl #48
   2cbbc:	add	x9, x28, #0x2
   2cbc0:	cmp	x8, x9
   2cbc4:	b.lt	2cbf8 <mpfr_log1p@@Base+0x290>  // b.tstop
   2cbc8:	ldr	x8, [sp, #32]
   2cbcc:	ldr	x0, [sp, #56]
   2cbd0:	ldr	x3, [sp, #16]
   2cbd4:	sub	x2, x23, x24
   2cbd8:	sub	x9, x8, #0x1
   2cbdc:	add	x8, x8, #0x3e
   2cbe0:	cmp	x9, #0x0
   2cbe4:	csel	x8, x8, x9, lt  // lt = tstop
   2cbe8:	asr	x8, x8, #6
   2cbec:	add	x1, x8, #0x1
   2cbf0:	bl	c3d0 <mpfr_round_p@plt>
   2cbf4:	cbnz	w0, 2cc6c <mpfr_log1p@@Base+0x304>
   2cbf8:	ldr	x24, [sp, #8]
   2cbfc:	sub	x8, x28, x23
   2cc00:	sub	x8, x8, #0x103
   2cc04:	cmp	x24, x8
   2cc08:	b.gt	2cc50 <mpfr_log1p@@Base+0x2e8>
   2cc0c:	add	x23, x23, x24
   2cc10:	cmp	x23, #0x0
   2cc14:	cinc	x8, x23, lt  // lt = tstop
   2cc18:	asr	x8, x8, #1
   2cc1c:	add	x0, sp, #0x20
   2cc20:	mov	x1, x23
   2cc24:	str	x8, [sp, #8]
   2cc28:	bl	bf80 <mpfr_set_prec@plt>
   2cc2c:	ldr	x24, [sp, #24]
   2cc30:	b	2ca70 <mpfr_log1p@@Base+0x108>
   2cc34:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2cc38:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2cc3c:	mov	w1, #0x56                  	// #86
   2cc40:	add	x0, x0, #0x5c4
   2cc44:	add	x2, x2, #0x5cc
   2cc48:	bl	cb90 <mpfr_assert_fail@plt>
   2cc4c:	b	2cb9c <mpfr_log1p@@Base+0x234>
   2cc50:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2cc54:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2cc58:	mov	w1, #0xe7                  	// #231
   2cc5c:	add	x0, x0, #0x5c4
   2cc60:	add	x2, x2, #0xe2
   2cc64:	bl	cb90 <mpfr_assert_fail@plt>
   2cc68:	b	2cc0c <mpfr_log1p@@Base+0x2a4>
   2cc6c:	ldr	x24, [sp, #24]
   2cc70:	ldr	w3, [sp, #40]
   2cc74:	add	x1, sp, #0x20
   2cc78:	mov	w2, w25
   2cc7c:	mov	x0, x24
   2cc80:	bl	c6f0 <mpfr_set4@plt>
   2cc84:	mov	w22, w0
   2cc88:	add	x0, sp, #0x20
   2cc8c:	bl	c110 <mpfr_clear@plt>
   2cc90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2cc94:	ldr	x1, [x0, #2656]
   2cc98:	add	x0, x0, #0xa60
   2cc9c:	blr	x1
   2cca0:	str	w20, [x27, x0]
   2cca4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2cca8:	ldr	x1, [x0, #2592]
   2ccac:	add	x0, x0, #0xa20
   2ccb0:	blr	x1
   2ccb4:	str	x26, [x27, x0]
   2ccb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ccbc:	ldr	x1, [x0, #2624]
   2ccc0:	add	x0, x0, #0xa40
   2ccc4:	blr	x1
   2ccc8:	str	x19, [x27, x0]
   2cccc:	ldr	x8, [x24, #16]
   2ccd0:	cmp	x8, x19
   2ccd4:	b.gt	2ce08 <mpfr_log1p@@Base+0x4a0>
   2ccd8:	cmp	x8, x26
   2ccdc:	b.lt	2ce08 <mpfr_log1p@@Base+0x4a0>  // b.tstop
   2cce0:	cbz	w22, 2ccfc <mpfr_log1p@@Base+0x394>
   2cce4:	orr	w8, w20, #0x8
   2cce8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ccec:	ldr	x1, [x0, #2656]
   2ccf0:	add	x0, x0, #0xa60
   2ccf4:	blr	x1
   2ccf8:	str	w8, [x27, x0]
   2ccfc:	mov	w0, w22
   2cd00:	ldp	x20, x19, [sp, #208]
   2cd04:	ldp	x22, x21, [sp, #192]
   2cd08:	ldp	x24, x23, [sp, #176]
   2cd0c:	ldp	x26, x25, [sp, #160]
   2cd10:	ldp	x28, x27, [sp, #144]
   2cd14:	ldp	x29, x30, [sp, #128]
   2cd18:	add	sp, sp, #0xe0
   2cd1c:	ret
   2cd20:	ldr	w9, [x21, #8]
   2cd24:	cmp	w9, #0x1
   2cd28:	b.lt	2cd58 <mpfr_log1p@@Base+0x3f0>  // b.tstop
   2cd2c:	cmn	x8, #0x2
   2cd30:	b.gt	2c9b0 <mpfr_log1p@@Base+0x48>
   2cd34:	ldr	x9, [x24]
   2cd38:	mvn	x2, x8
   2cd3c:	add	x8, x9, #0x1
   2cd40:	cmp	x8, x2
   2cd44:	b.cs	2c9b0 <mpfr_log1p@@Base+0x48>  // b.hs, b.nlast
   2cd48:	mov	x0, x24
   2cd4c:	mov	x1, x21
   2cd50:	mov	w3, wzr
   2cd54:	b	2cd78 <mpfr_log1p@@Base+0x410>
   2cd58:	ldr	x9, [x24]
   2cd5c:	neg	x2, x8
   2cd60:	add	x8, x9, #0x1
   2cd64:	cmp	x8, x2
   2cd68:	b.cs	2c9b0 <mpfr_log1p@@Base+0x48>  // b.hs, b.nlast
   2cd6c:	mov	w3, #0x1                   	// #1
   2cd70:	mov	x0, x24
   2cd74:	mov	x1, x21
   2cd78:	mov	w4, w25
   2cd7c:	bl	c590 <mpfr_round_near_x@plt>
   2cd80:	mov	w22, w0
   2cd84:	cbnz	w0, 2ccfc <mpfr_log1p@@Base+0x394>
   2cd88:	b	2c9b0 <mpfr_log1p@@Base+0x48>
   2cd8c:	add	x1, sp, #0x20
   2cd90:	mov	x0, x24
   2cd94:	mov	w2, w25
   2cd98:	bl	c130 <mpfr_log@plt>
   2cd9c:	b	2cc84 <mpfr_log1p@@Base+0x31c>
   2cda0:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2cda4:	cmp	x8, x9
   2cda8:	b.eq	2ce74 <mpfr_log1p@@Base+0x50c>  // b.none
   2cdac:	mov	x9, #0x2                   	// #2
   2cdb0:	movk	x9, #0x8000, lsl #48
   2cdb4:	cmp	x8, x9
   2cdb8:	b.eq	2cdd8 <mpfr_log1p@@Base+0x470>  // b.none
   2cdbc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2cdc0:	str	x8, [x24, #16]
   2cdc4:	ldr	w8, [x21, #8]
   2cdc8:	mov	w22, wzr
   2cdcc:	str	w8, [x24, #8]
   2cdd0:	b	2ccfc <mpfr_log1p@@Base+0x394>
   2cdd4:	cbz	w0, 2ce3c <mpfr_log1p@@Base+0x4d4>
   2cdd8:	str	x28, [x24, #16]
   2cddc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2cde0:	ldr	x1, [x0, #2656]
   2cde4:	add	x0, x0, #0xa60
   2cde8:	blr	x1
   2cdec:	mrs	x8, tpidr_el0
   2cdf0:	ldr	w9, [x8, x0]
   2cdf4:	mov	w22, wzr
   2cdf8:	orr	w9, w9, #0x4
   2cdfc:	b	2ce6c <mpfr_log1p@@Base+0x504>
   2ce00:	mov	x8, xzr
   2ce04:	b	2ca38 <mpfr_log1p@@Base+0xd0>
   2ce08:	mov	x0, x24
   2ce0c:	mov	w1, w22
   2ce10:	mov	w2, w25
   2ce14:	bl	cb80 <mpfr_check_range@plt>
   2ce18:	mov	w22, w0
   2ce1c:	b	2ccfc <mpfr_log1p@@Base+0x394>
   2ce20:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ce24:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2ce28:	add	x0, x0, #0x5c4
   2ce2c:	add	x2, x2, #0xd9
   2ce30:	mov	w1, #0xb9                  	// #185
   2ce34:	bl	cb90 <mpfr_assert_fail@plt>
   2ce38:	b	2ca2c <mpfr_log1p@@Base+0xc4>
   2ce3c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2ce40:	mov	w9, #0xffffffff            	// #-1
   2ce44:	str	x8, [x24, #16]
   2ce48:	str	w9, [x24, #8]
   2ce4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ce50:	ldr	x1, [x0, #2656]
   2ce54:	add	x0, x0, #0xa60
   2ce58:	blr	x1
   2ce5c:	mrs	x8, tpidr_el0
   2ce60:	ldr	w9, [x8, x0]
   2ce64:	mov	w22, wzr
   2ce68:	orr	w9, w9, #0x20
   2ce6c:	str	w9, [x8, x0]
   2ce70:	b	2ccfc <mpfr_log1p@@Base+0x394>
   2ce74:	ldr	w8, [x21, #8]
   2ce78:	cmp	w8, #0x1
   2ce7c:	b.lt	2cdd8 <mpfr_log1p@@Base+0x470>  // b.tstop
   2ce80:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2ce84:	mov	w9, #0x1                   	// #1
   2ce88:	mov	w22, wzr
   2ce8c:	str	x8, [x24, #16]
   2ce90:	str	w9, [x24, #8]
   2ce94:	b	2ccfc <mpfr_log1p@@Base+0x394>

000000000002ce98 <mpfr_expm1@@Base>:
   2ce98:	sub	sp, sp, #0x90
   2ce9c:	stp	x29, x30, [sp, #48]
   2cea0:	stp	x28, x27, [sp, #64]
   2cea4:	stp	x26, x25, [sp, #80]
   2cea8:	stp	x24, x23, [sp, #96]
   2ceac:	stp	x22, x21, [sp, #112]
   2ceb0:	stp	x20, x19, [sp, #128]
   2ceb4:	ldr	x23, [x1, #16]
   2ceb8:	mov	x8, #0x4                   	// #4
   2cebc:	movk	x8, #0x8000, lsl #48
   2cec0:	mov	w20, w2
   2cec4:	mov	x21, x1
   2cec8:	cmp	x23, x8
   2cecc:	mov	x19, x0
   2ced0:	add	x29, sp, #0x30
   2ced4:	b.lt	2d254 <mpfr_expm1@@Base+0x3bc>  // b.tstop
   2ced8:	tbz	x23, #63, 2cf24 <mpfr_expm1@@Base+0x8c>
   2cedc:	ldr	w8, [x21, #8]
   2cee0:	cmp	w8, #0x1
   2cee4:	b.lt	2cf0c <mpfr_expm1@@Base+0x74>  // b.tstop
   2cee8:	ldr	x8, [x19]
   2ceec:	neg	x2, x23
   2cef0:	add	x8, x8, #0x1
   2cef4:	cmp	x8, x2
   2cef8:	b.cs	2cf24 <mpfr_expm1@@Base+0x8c>  // b.hs, b.nlast
   2cefc:	mov	w3, #0x1                   	// #1
   2cf00:	mov	x0, x19
   2cf04:	mov	x1, x21
   2cf08:	b	2d3fc <mpfr_expm1@@Base+0x564>
   2cf0c:	ldr	x8, [x19]
   2cf10:	mov	w9, #0x1                   	// #1
   2cf14:	sub	x2, x9, x23
   2cf18:	add	x8, x8, #0x1
   2cf1c:	cmp	x2, x8
   2cf20:	b.hi	2d3f0 <mpfr_expm1@@Base+0x558>  // b.pmore
   2cf24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2cf28:	ldr	x1, [x0, #2656]
   2cf2c:	add	x0, x0, #0xa60
   2cf30:	blr	x1
   2cf34:	mrs	x27, tpidr_el0
   2cf38:	ldr	w26, [x27, x0]
   2cf3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2cf40:	ldr	x1, [x0, #2592]
   2cf44:	add	x0, x0, #0xa20
   2cf48:	blr	x1
   2cf4c:	ldr	x25, [x27, x0]
   2cf50:	mov	x8, x0
   2cf54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2cf58:	ldr	x1, [x0, #2624]
   2cf5c:	add	x0, x0, #0xa40
   2cf60:	blr	x1
   2cf64:	ldr	x28, [x27, x0]
   2cf68:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2cf6c:	str	x9, [x27, x8]
   2cf70:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2cf74:	cmp	x23, #0x6
   2cf78:	str	x8, [x27, x0]
   2cf7c:	b.lt	2cffc <mpfr_expm1@@Base+0x164>  // b.tstop
   2cf80:	ldr	w8, [x21, #8]
   2cf84:	tbz	w8, #31, 2cffc <mpfr_expm1@@Base+0x164>
   2cf88:	mov	w8, #0x40                  	// #64
   2cf8c:	sub	x9, x29, #0x8
   2cf90:	mov	w10, #0x1                   	// #1
   2cf94:	str	x8, [sp, #8]
   2cf98:	str	x9, [sp, #32]
   2cf9c:	str	w10, [sp, #16]
   2cfa0:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
   2cfa4:	ldr	x2, [x2, #4048]
   2cfa8:	add	x0, sp, #0x8
   2cfac:	mov	w3, #0x2                   	// #2
   2cfb0:	mov	x1, x21
   2cfb4:	bl	c670 <mpfr_div@plt>
   2cfb8:	add	x0, sp, #0x8
   2cfbc:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   2cfc0:	mov	x2, xzr
   2cfc4:	bl	c430 <mpfr_cmp_si_2exp@plt>
   2cfc8:	cmp	w0, #0x1
   2cfcc:	b.lt	2cfe8 <mpfr_expm1@@Base+0x150>  // b.tstop
   2cfd0:	add	x0, sp, #0x8
   2cfd4:	mov	w1, #0x2                   	// #2
   2cfd8:	bl	c230 <mpfr_get_si@plt>
   2cfdc:	tbz	x0, #63, 2cffc <mpfr_expm1@@Base+0x164>
   2cfe0:	neg	x2, x0
   2cfe4:	b	2cfec <mpfr_expm1@@Base+0x154>
   2cfe8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2cfec:	ldr	x8, [x19]
   2cff0:	add	x8, x8, #0x1
   2cff4:	cmp	x2, x8
   2cff8:	b.hi	2d344 <mpfr_expm1@@Base+0x4ac>  // b.pmore
   2cffc:	ldr	x24, [x19]
   2d000:	str	x28, [sp]
   2d004:	subs	x22, x24, #0x1
   2d008:	b.eq	2d2dc <mpfr_expm1@@Base+0x444>  // b.none
   2d00c:	b.le	2d2e4 <mpfr_expm1@@Base+0x44c>
   2d010:	clz	x8, x22
   2d014:	mov	w9, #0x40                  	// #64
   2d018:	sub	x8, x9, x8
   2d01c:	mov	w9, #0x6                   	// #6
   2d020:	sub	x10, x9, x23
   2d024:	cmp	x23, #0x0
   2d028:	csel	x9, x10, x9, lt  // lt = tstop
   2d02c:	add	x9, x9, x24
   2d030:	add	x22, x9, x8
   2d034:	add	x0, sp, #0x8
   2d038:	mov	x1, x22
   2d03c:	bl	cad0 <mpfr_init2@plt>
   2d040:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d044:	ldr	x1, [x0, #2656]
   2d048:	add	x0, x0, #0xa60
   2d04c:	blr	x1
   2d050:	mov	x23, x0
   2d054:	str	wzr, [x27, x0]
   2d058:	add	x0, sp, #0x8
   2d05c:	mov	x1, x21
   2d060:	mov	w2, wzr
   2d064:	bl	c7a0 <mpfr_exp@plt>
   2d068:	ldr	w8, [x27, x23]
   2d06c:	tbnz	w8, #1, 2d238 <mpfr_expm1@@Base+0x3a0>
   2d070:	cmp	w20, #0x0
   2d074:	mov	w23, #0x40                  	// #64
   2d078:	cinc	x24, x24, eq  // eq = none
   2d07c:	tbnz	w8, #0, 2d2a8 <mpfr_expm1@@Base+0x410>
   2d080:	mov	w28, w26
   2d084:	mov	w26, w20
   2d088:	ldr	x20, [sp, #24]
   2d08c:	add	x0, sp, #0x8
   2d090:	add	x1, sp, #0x8
   2d094:	mov	w2, #0x1                   	// #1
   2d098:	mov	w3, wzr
   2d09c:	bl	c580 <mpfr_sub_ui@plt>
   2d0a0:	ldr	x8, [sp, #24]
   2d0a4:	mov	x9, #0x4                   	// #4
   2d0a8:	movk	x9, #0x8000, lsl #48
   2d0ac:	cmp	x8, x9
   2d0b0:	b.lt	2d0f0 <mpfr_expm1@@Base+0x258>  // b.tstop
   2d0b4:	ldr	x9, [sp, #8]
   2d0b8:	sub	x8, x20, x8
   2d0bc:	bic	x8, x8, x8, asr #63
   2d0c0:	mvn	x8, x8
   2d0c4:	add	x2, x22, x8
   2d0c8:	sub	x8, x9, #0x1
   2d0cc:	ldr	x0, [sp, #32]
   2d0d0:	add	x9, x9, #0x3e
   2d0d4:	cmp	x8, #0x0
   2d0d8:	csel	x8, x9, x8, lt  // lt = tstop
   2d0dc:	asr	x8, x8, #6
   2d0e0:	add	x1, x8, #0x1
   2d0e4:	mov	x3, x24
   2d0e8:	bl	c3d0 <mpfr_round_p@plt>
   2d0ec:	cbnz	w0, 2d17c <mpfr_expm1@@Base+0x2e4>
   2d0f0:	mov	x8, #0x4                   	// #4
   2d0f4:	movk	x8, #0x8000, lsl #48
   2d0f8:	sub	x8, x8, x22
   2d0fc:	sub	x8, x8, #0x105
   2d100:	cmp	x23, x8
   2d104:	b.gt	2d160 <mpfr_expm1@@Base+0x2c8>
   2d108:	add	x22, x23, x22
   2d10c:	cmp	x22, #0x0
   2d110:	cinc	x8, x22, lt  // lt = tstop
   2d114:	add	x0, sp, #0x8
   2d118:	mov	x1, x22
   2d11c:	asr	x23, x8, #1
   2d120:	bl	bf80 <mpfr_set_prec@plt>
   2d124:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d128:	ldr	x1, [x0, #2656]
   2d12c:	add	x0, x0, #0xa60
   2d130:	blr	x1
   2d134:	mov	x20, x0
   2d138:	str	wzr, [x27, x0]
   2d13c:	add	x0, sp, #0x8
   2d140:	mov	x1, x21
   2d144:	mov	w2, wzr
   2d148:	bl	c7a0 <mpfr_exp@plt>
   2d14c:	ldr	w8, [x27, x20]
   2d150:	mov	w20, w26
   2d154:	mov	w26, w28
   2d158:	tbz	w8, #1, 2d07c <mpfr_expm1@@Base+0x1e4>
   2d15c:	b	2d238 <mpfr_expm1@@Base+0x3a0>
   2d160:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2d164:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2d168:	mov	w1, #0xa5                  	// #165
   2d16c:	add	x0, x0, #0x5d2
   2d170:	add	x2, x2, #0xe2
   2d174:	bl	cb90 <mpfr_assert_fail@plt>
   2d178:	b	2d108 <mpfr_expm1@@Base+0x270>
   2d17c:	ldr	w3, [sp, #16]
   2d180:	add	x1, sp, #0x8
   2d184:	mov	x0, x19
   2d188:	mov	w2, w26
   2d18c:	mov	w20, w26
   2d190:	bl	c6f0 <mpfr_set4@plt>
   2d194:	mov	w22, w0
   2d198:	mov	w26, w28
   2d19c:	ldr	x21, [sp]
   2d1a0:	add	x0, sp, #0x8
   2d1a4:	bl	c110 <mpfr_clear@plt>
   2d1a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d1ac:	ldr	x1, [x0, #2656]
   2d1b0:	add	x0, x0, #0xa60
   2d1b4:	blr	x1
   2d1b8:	str	w26, [x27, x0]
   2d1bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d1c0:	ldr	x1, [x0, #2592]
   2d1c4:	add	x0, x0, #0xa20
   2d1c8:	blr	x1
   2d1cc:	str	x25, [x27, x0]
   2d1d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d1d4:	ldr	x1, [x0, #2624]
   2d1d8:	add	x0, x0, #0xa40
   2d1dc:	blr	x1
   2d1e0:	str	x21, [x27, x0]
   2d1e4:	ldr	x8, [x19, #16]
   2d1e8:	cmp	x8, x21
   2d1ec:	b.gt	2d3d8 <mpfr_expm1@@Base+0x540>
   2d1f0:	cmp	x8, x25
   2d1f4:	b.lt	2d3d8 <mpfr_expm1@@Base+0x540>  // b.tstop
   2d1f8:	cbz	w22, 2d214 <mpfr_expm1@@Base+0x37c>
   2d1fc:	orr	w8, w26, #0x8
   2d200:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d204:	ldr	x1, [x0, #2656]
   2d208:	add	x0, x0, #0xa60
   2d20c:	blr	x1
   2d210:	str	w8, [x27, x0]
   2d214:	mov	w0, w22
   2d218:	ldp	x20, x19, [sp, #128]
   2d21c:	ldp	x22, x21, [sp, #112]
   2d220:	ldp	x24, x23, [sp, #96]
   2d224:	ldp	x26, x25, [sp, #80]
   2d228:	ldp	x28, x27, [sp, #64]
   2d22c:	ldp	x29, x30, [sp, #48]
   2d230:	add	sp, sp, #0x90
   2d234:	ret
   2d238:	mov	w2, #0x1                   	// #1
   2d23c:	mov	x0, x19
   2d240:	mov	w1, w20
   2d244:	bl	bff0 <mpfr_overflow@plt>
   2d248:	mov	w22, w0
   2d24c:	orr	w26, w26, #0x2
   2d250:	b	2d19c <mpfr_expm1@@Base+0x304>
   2d254:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d258:	cmp	x23, x8
   2d25c:	b.eq	2d308 <mpfr_expm1@@Base+0x470>  // b.none
   2d260:	mov	x8, #0x2                   	// #2
   2d264:	movk	x8, #0x8000, lsl #48
   2d268:	cmp	x23, x8
   2d26c:	b.ne	2d32c <mpfr_expm1@@Base+0x494>  // b.any
   2d270:	mov	x8, #0x4                   	// #4
   2d274:	movk	x8, #0x8000, lsl #48
   2d278:	sub	x8, x8, #0x2
   2d27c:	str	x8, [x19, #16]
   2d280:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d284:	ldr	x1, [x0, #2656]
   2d288:	add	x0, x0, #0xa60
   2d28c:	blr	x1
   2d290:	mrs	x8, tpidr_el0
   2d294:	ldr	w9, [x8, x0]
   2d298:	mov	w22, wzr
   2d29c:	orr	w9, w9, #0x4
   2d2a0:	str	w9, [x8, x0]
   2d2a4:	b	2d214 <mpfr_expm1@@Base+0x37c>
   2d2a8:	mov	x1, #0xffffffffffffffff    	// #-1
   2d2ac:	mov	x0, x19
   2d2b0:	mov	x2, xzr
   2d2b4:	mov	w3, w20
   2d2b8:	bl	bb40 <mpfr_set_si_2exp@plt>
   2d2bc:	ldr	x21, [sp]
   2d2c0:	sub	w8, w20, #0x1
   2d2c4:	cmp	w8, #0x1
   2d2c8:	b.hi	2d300 <mpfr_expm1@@Base+0x468>  // b.pmore
   2d2cc:	mov	x0, x19
   2d2d0:	bl	c4b0 <mpfr_nexttozero@plt>
   2d2d4:	mov	w22, #0x1                   	// #1
   2d2d8:	b	2d1a0 <mpfr_expm1@@Base+0x308>
   2d2dc:	mov	x8, xzr
   2d2e0:	b	2d01c <mpfr_expm1@@Base+0x184>
   2d2e4:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2d2e8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2d2ec:	add	x0, x0, #0x5d2
   2d2f0:	add	x2, x2, #0xd9
   2d2f4:	mov	w1, #0x72                  	// #114
   2d2f8:	bl	cb90 <mpfr_assert_fail@plt>
   2d2fc:	b	2d010 <mpfr_expm1@@Base+0x178>
   2d300:	mov	w22, #0xffffffff            	// #-1
   2d304:	b	2d1a0 <mpfr_expm1@@Base+0x308>
   2d308:	ldr	w8, [x21, #8]
   2d30c:	cmp	w8, #0x1
   2d310:	b.lt	2d410 <mpfr_expm1@@Base+0x578>  // b.tstop
   2d314:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d318:	mov	w9, #0x1                   	// #1
   2d31c:	mov	w22, wzr
   2d320:	str	x8, [x19, #16]
   2d324:	str	w9, [x19, #8]
   2d328:	b	2d214 <mpfr_expm1@@Base+0x37c>
   2d32c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2d330:	str	x8, [x19, #16]
   2d334:	ldr	w8, [x21, #8]
   2d338:	mov	w22, wzr
   2d33c:	str	w8, [x19, #8]
   2d340:	b	2d214 <mpfr_expm1@@Base+0x37c>
   2d344:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d348:	ldr	x1, [x0, #2656]
   2d34c:	add	x0, x0, #0xa60
   2d350:	blr	x1
   2d354:	str	wzr, [x27, x0]
   2d358:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   2d35c:	ldr	x1, [x1, #4008]
   2d360:	mov	x0, x19
   2d364:	mov	w3, wzr
   2d368:	mov	w4, w20
   2d36c:	bl	c590 <mpfr_round_near_x@plt>
   2d370:	cbz	w0, 2cffc <mpfr_expm1@@Base+0x164>
   2d374:	mov	w22, w0
   2d378:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d37c:	ldr	x1, [x0, #2656]
   2d380:	add	x0, x0, #0xa60
   2d384:	blr	x1
   2d388:	ldr	w8, [x27, x0]
   2d38c:	orr	w8, w8, w26
   2d390:	str	w8, [x27, x0]
   2d394:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d398:	ldr	x1, [x0, #2592]
   2d39c:	add	x0, x0, #0xa20
   2d3a0:	blr	x1
   2d3a4:	str	x25, [x27, x0]
   2d3a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d3ac:	ldr	x1, [x0, #2624]
   2d3b0:	add	x0, x0, #0xa40
   2d3b4:	blr	x1
   2d3b8:	str	x28, [x27, x0]
   2d3bc:	ldr	x9, [x19, #16]
   2d3c0:	cmp	x9, x28
   2d3c4:	b.gt	2d3d8 <mpfr_expm1@@Base+0x540>
   2d3c8:	cmp	x9, x25
   2d3cc:	b.lt	2d3d8 <mpfr_expm1@@Base+0x540>  // b.tstop
   2d3d0:	orr	w8, w8, #0x8
   2d3d4:	b	2d200 <mpfr_expm1@@Base+0x368>
   2d3d8:	mov	x0, x19
   2d3dc:	mov	w1, w22
   2d3e0:	mov	w2, w20
   2d3e4:	bl	cb80 <mpfr_check_range@plt>
   2d3e8:	mov	w22, w0
   2d3ec:	b	2d214 <mpfr_expm1@@Base+0x37c>
   2d3f0:	mov	x0, x19
   2d3f4:	mov	x1, x21
   2d3f8:	mov	w3, wzr
   2d3fc:	mov	w4, w20
   2d400:	bl	c590 <mpfr_round_near_x@plt>
   2d404:	mov	w22, w0
   2d408:	cbnz	w0, 2d214 <mpfr_expm1@@Base+0x37c>
   2d40c:	b	2cf24 <mpfr_expm1@@Base+0x8c>
   2d410:	mov	x0, x19
   2d414:	mov	w3, w20
   2d418:	ldp	x20, x19, [sp, #128]
   2d41c:	ldp	x22, x21, [sp, #112]
   2d420:	ldp	x24, x23, [sp, #96]
   2d424:	ldp	x26, x25, [sp, #80]
   2d428:	ldp	x28, x27, [sp, #64]
   2d42c:	ldp	x29, x30, [sp, #48]
   2d430:	mov	x1, #0xffffffffffffffff    	// #-1
   2d434:	mov	x2, xzr
   2d438:	add	sp, sp, #0x90
   2d43c:	b	bb40 <mpfr_set_si_2exp@plt>

000000000002d440 <mpfr_log2@@Base>:
   2d440:	sub	sp, sp, #0xa0
   2d444:	stp	x29, x30, [sp, #64]
   2d448:	stp	x28, x27, [sp, #80]
   2d44c:	stp	x26, x25, [sp, #96]
   2d450:	stp	x24, x23, [sp, #112]
   2d454:	stp	x22, x21, [sp, #128]
   2d458:	stp	x20, x19, [sp, #144]
   2d45c:	ldr	x8, [x1, #16]
   2d460:	mov	x9, #0x2                   	// #2
   2d464:	movk	x9, #0x8000, lsl #48
   2d468:	add	x9, x9, #0x2
   2d46c:	mov	x21, x1
   2d470:	cmp	x8, x9
   2d474:	mov	x19, x0
   2d478:	add	x29, sp, #0x40
   2d47c:	b.lt	2d6fc <mpfr_log2@@Base+0x2bc>  // b.tstop
   2d480:	ldr	w8, [x21, #8]
   2d484:	tbnz	w8, #31, 2d7f0 <mpfr_log2@@Base+0x3b0>
   2d488:	mov	w20, w2
   2d48c:	mov	w1, #0x1                   	// #1
   2d490:	mov	x0, x21
   2d494:	mov	x2, xzr
   2d498:	mov	w22, #0x1                   	// #1
   2d49c:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   2d4a0:	cbz	w0, 2d74c <mpfr_log2@@Base+0x30c>
   2d4a4:	ldr	x8, [x21, #16]
   2d4a8:	mov	w1, #0x1                   	// #1
   2d4ac:	mov	x0, x21
   2d4b0:	sub	x2, x8, #0x1
   2d4b4:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   2d4b8:	cbz	w0, 2d760 <mpfr_log2@@Base+0x320>
   2d4bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d4c0:	ldr	x1, [x0, #2656]
   2d4c4:	add	x0, x0, #0xa60
   2d4c8:	blr	x1
   2d4cc:	mrs	x27, tpidr_el0
   2d4d0:	ldr	w28, [x27, x0]
   2d4d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d4d8:	ldr	x1, [x0, #2592]
   2d4dc:	add	x0, x0, #0xa20
   2d4e0:	blr	x1
   2d4e4:	ldr	x23, [x27, x0]
   2d4e8:	mov	x8, x0
   2d4ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d4f0:	ldr	x1, [x0, #2624]
   2d4f4:	add	x0, x0, #0xa40
   2d4f8:	blr	x1
   2d4fc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2d500:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2d504:	ldr	x25, [x27, x0]
   2d508:	str	x9, [x27, x8]
   2d50c:	str	x10, [x27, x0]
   2d510:	ldr	x24, [x19]
   2d514:	subs	x26, x24, #0x1
   2d518:	add	x22, x24, #0x3
   2d51c:	b.eq	2d794 <mpfr_log2@@Base+0x354>  // b.none
   2d520:	b.le	2d7b4 <mpfr_log2@@Base+0x374>
   2d524:	clz	x8, x26
   2d528:	mov	w9, #0x40                  	// #64
   2d52c:	sub	x8, x9, x8
   2d530:	add	x22, x22, x8
   2d534:	add	x0, sp, #0x20
   2d538:	mov	x1, x22
   2d53c:	bl	cad0 <mpfr_init2@plt>
   2d540:	mov	x0, sp
   2d544:	mov	x1, x22
   2d548:	bl	cad0 <mpfr_init2@plt>
   2d54c:	cmp	w20, #0x0
   2d550:	mov	w26, #0x40                  	// #64
   2d554:	cinc	x24, x24, eq  // eq = none
   2d558:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d55c:	ldr	x1, [x0, #2640]
   2d560:	add	x0, x0, #0xa50
   2d564:	blr	x1
   2d568:	add	x1, x27, x0
   2d56c:	add	x0, sp, #0x20
   2d570:	mov	w2, #0x3                   	// #3
   2d574:	bl	c3e0 <mpfr_cache@plt>
   2d578:	mov	x0, sp
   2d57c:	mov	x1, x21
   2d580:	mov	w2, wzr
   2d584:	bl	c130 <mpfr_log@plt>
   2d588:	add	x0, sp, #0x20
   2d58c:	mov	x1, sp
   2d590:	add	x2, sp, #0x20
   2d594:	mov	w3, wzr
   2d598:	bl	c670 <mpfr_div@plt>
   2d59c:	ldr	x8, [sp, #48]
   2d5a0:	mov	x9, #0x2                   	// #2
   2d5a4:	movk	x9, #0x8000, lsl #48
   2d5a8:	add	x9, x9, #0x2
   2d5ac:	cmp	x8, x9
   2d5b0:	b.lt	2d5e4 <mpfr_log2@@Base+0x1a4>  // b.tstop
   2d5b4:	ldr	x8, [sp, #32]
   2d5b8:	ldr	x0, [sp, #56]
   2d5bc:	sub	x2, x22, #0x3
   2d5c0:	mov	x3, x24
   2d5c4:	sub	x9, x8, #0x1
   2d5c8:	add	x8, x8, #0x3e
   2d5cc:	cmp	x9, #0x0
   2d5d0:	csel	x8, x8, x9, lt  // lt = tstop
   2d5d4:	asr	x8, x8, #6
   2d5d8:	add	x1, x8, #0x1
   2d5dc:	bl	c3d0 <mpfr_round_p@plt>
   2d5e0:	cbnz	w0, 2d644 <mpfr_log2@@Base+0x204>
   2d5e4:	mov	x8, #0x2                   	// #2
   2d5e8:	movk	x8, #0x8000, lsl #48
   2d5ec:	sub	x8, x8, x22
   2d5f0:	sub	x8, x8, #0x103
   2d5f4:	cmp	x26, x8
   2d5f8:	b.gt	2d628 <mpfr_log2@@Base+0x1e8>
   2d5fc:	add	x22, x22, x26
   2d600:	cmp	x22, #0x0
   2d604:	cinc	x8, x22, lt  // lt = tstop
   2d608:	add	x0, sp, #0x20
   2d60c:	mov	x1, x22
   2d610:	asr	x26, x8, #1
   2d614:	bl	bf80 <mpfr_set_prec@plt>
   2d618:	mov	x0, sp
   2d61c:	mov	x1, x22
   2d620:	bl	bf80 <mpfr_set_prec@plt>
   2d624:	b	2d558 <mpfr_log2@@Base+0x118>
   2d628:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   2d62c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2d630:	mov	w1, #0x80                  	// #128
   2d634:	add	x0, x0, #0x651
   2d638:	add	x2, x2, #0xe2
   2d63c:	bl	cb90 <mpfr_assert_fail@plt>
   2d640:	b	2d5fc <mpfr_log2@@Base+0x1bc>
   2d644:	ldr	w3, [sp, #40]
   2d648:	add	x1, sp, #0x20
   2d64c:	mov	x0, x19
   2d650:	mov	w2, w20
   2d654:	bl	c6f0 <mpfr_set4@plt>
   2d658:	mov	w21, w0
   2d65c:	add	x0, sp, #0x20
   2d660:	bl	c110 <mpfr_clear@plt>
   2d664:	mov	x0, sp
   2d668:	bl	c110 <mpfr_clear@plt>
   2d66c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d670:	ldr	x1, [x0, #2656]
   2d674:	add	x0, x0, #0xa60
   2d678:	blr	x1
   2d67c:	str	w28, [x27, x0]
   2d680:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d684:	ldr	x1, [x0, #2592]
   2d688:	add	x0, x0, #0xa20
   2d68c:	blr	x1
   2d690:	str	x23, [x27, x0]
   2d694:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d698:	ldr	x1, [x0, #2624]
   2d69c:	add	x0, x0, #0xa40
   2d6a0:	blr	x1
   2d6a4:	str	x25, [x27, x0]
   2d6a8:	ldr	x8, [x19, #16]
   2d6ac:	cmp	x8, x25
   2d6b0:	b.gt	2d79c <mpfr_log2@@Base+0x35c>
   2d6b4:	cmp	x8, x23
   2d6b8:	b.lt	2d79c <mpfr_log2@@Base+0x35c>  // b.tstop
   2d6bc:	cbz	w21, 2d6d8 <mpfr_log2@@Base+0x298>
   2d6c0:	orr	w8, w28, #0x8
   2d6c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d6c8:	ldr	x1, [x0, #2656]
   2d6cc:	add	x0, x0, #0xa60
   2d6d0:	blr	x1
   2d6d4:	str	w8, [x27, x0]
   2d6d8:	mov	w0, w21
   2d6dc:	ldp	x20, x19, [sp, #144]
   2d6e0:	ldp	x22, x21, [sp, #128]
   2d6e4:	ldp	x24, x23, [sp, #112]
   2d6e8:	ldp	x26, x25, [sp, #96]
   2d6ec:	ldp	x28, x27, [sp, #80]
   2d6f0:	ldp	x29, x30, [sp, #64]
   2d6f4:	add	sp, sp, #0xa0
   2d6f8:	ret
   2d6fc:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2d700:	cmp	x8, x9
   2d704:	b.eq	2d7d0 <mpfr_log2@@Base+0x390>  // b.none
   2d708:	mov	x9, #0x2                   	// #2
   2d70c:	movk	x9, #0x8000, lsl #48
   2d710:	cmp	x8, x9
   2d714:	b.eq	2d7f0 <mpfr_log2@@Base+0x3b0>  // b.none
   2d718:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d71c:	mov	w9, #0xffffffff            	// #-1
   2d720:	str	x8, [x19, #16]
   2d724:	str	w9, [x19, #8]
   2d728:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d72c:	ldr	x1, [x0, #2656]
   2d730:	add	x0, x0, #0xa60
   2d734:	blr	x1
   2d738:	mrs	x8, tpidr_el0
   2d73c:	ldr	w9, [x8, x0]
   2d740:	mov	w21, wzr
   2d744:	orr	w9, w9, #0x20
   2d748:	b	2d81c <mpfr_log2@@Base+0x3dc>
   2d74c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2d750:	mov	w21, wzr
   2d754:	str	x8, [x19, #16]
   2d758:	str	w22, [x19, #8]
   2d75c:	b	2d6d8 <mpfr_log2@@Base+0x298>
   2d760:	ldr	x8, [x21, #16]
   2d764:	mov	x0, x19
   2d768:	mov	w3, w20
   2d76c:	ldp	x20, x19, [sp, #144]
   2d770:	ldp	x22, x21, [sp, #128]
   2d774:	ldp	x24, x23, [sp, #112]
   2d778:	ldp	x26, x25, [sp, #96]
   2d77c:	ldp	x28, x27, [sp, #80]
   2d780:	ldp	x29, x30, [sp, #64]
   2d784:	sub	x1, x8, #0x1
   2d788:	mov	x2, xzr
   2d78c:	add	sp, sp, #0xa0
   2d790:	b	bb40 <mpfr_set_si_2exp@plt>
   2d794:	mov	x8, xzr
   2d798:	b	2d530 <mpfr_log2@@Base+0xf0>
   2d79c:	mov	x0, x19
   2d7a0:	mov	w1, w21
   2d7a4:	mov	w2, w20
   2d7a8:	bl	cb80 <mpfr_check_range@plt>
   2d7ac:	mov	w21, w0
   2d7b0:	b	2d6d8 <mpfr_log2@@Base+0x298>
   2d7b4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   2d7b8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2d7bc:	add	x0, x0, #0x651
   2d7c0:	add	x2, x2, #0xd9
   2d7c4:	mov	w1, #0x6b                  	// #107
   2d7c8:	bl	cb90 <mpfr_assert_fail@plt>
   2d7cc:	b	2d524 <mpfr_log2@@Base+0xe4>
   2d7d0:	ldr	w8, [x21, #8]
   2d7d4:	tbnz	w8, #31, 2d7f0 <mpfr_log2@@Base+0x3b0>
   2d7d8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2d7dc:	mov	w9, #0x1                   	// #1
   2d7e0:	mov	w21, wzr
   2d7e4:	str	x8, [x19, #16]
   2d7e8:	str	w9, [x19, #8]
   2d7ec:	b	2d6d8 <mpfr_log2@@Base+0x298>
   2d7f0:	mov	x8, #0x2                   	// #2
   2d7f4:	movk	x8, #0x8000, lsl #48
   2d7f8:	str	x8, [x19, #16]
   2d7fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d800:	ldr	x1, [x0, #2656]
   2d804:	add	x0, x0, #0xa60
   2d808:	blr	x1
   2d80c:	mrs	x8, tpidr_el0
   2d810:	ldr	w9, [x8, x0]
   2d814:	mov	w21, wzr
   2d818:	orr	w9, w9, #0x4
   2d81c:	str	w9, [x8, x0]
   2d820:	b	2d6d8 <mpfr_log2@@Base+0x298>

000000000002d824 <mpfr_log10@@Base>:
   2d824:	sub	sp, sp, #0xb0
   2d828:	stp	x29, x30, [sp, #80]
   2d82c:	stp	x28, x27, [sp, #96]
   2d830:	stp	x26, x25, [sp, #112]
   2d834:	stp	x24, x23, [sp, #128]
   2d838:	stp	x22, x21, [sp, #144]
   2d83c:	stp	x20, x19, [sp, #160]
   2d840:	ldr	x8, [x1, #16]
   2d844:	mov	x10, #0x2                   	// #2
   2d848:	movk	x10, #0x8000, lsl #48
   2d84c:	add	x9, x10, #0x2
   2d850:	mov	x21, x1
   2d854:	cmp	x8, x9
   2d858:	mov	x19, x0
   2d85c:	add	x29, sp, #0x50
   2d860:	b.lt	2db4c <mpfr_log10@@Base+0x328>  // b.tstop
   2d864:	ldr	w8, [x21, #8]
   2d868:	tbnz	w8, #31, 2dbf8 <mpfr_log10@@Base+0x3d4>
   2d86c:	mov	w20, w2
   2d870:	mov	w1, #0x1                   	// #1
   2d874:	mov	x0, x21
   2d878:	mov	x2, xzr
   2d87c:	mov	w22, #0x1                   	// #1
   2d880:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   2d884:	cbz	w0, 2db18 <mpfr_log10@@Base+0x2f4>
   2d888:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d88c:	ldr	x1, [x0, #2656]
   2d890:	add	x0, x0, #0xa60
   2d894:	blr	x1
   2d898:	mrs	x26, tpidr_el0
   2d89c:	ldr	w28, [x26, x0]
   2d8a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d8a4:	ldr	x1, [x0, #2592]
   2d8a8:	add	x0, x0, #0xa20
   2d8ac:	blr	x1
   2d8b0:	ldr	x23, [x26, x0]
   2d8b4:	mov	x8, x0
   2d8b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2d8bc:	ldr	x1, [x0, #2624]
   2d8c0:	add	x0, x0, #0xa40
   2d8c4:	blr	x1
   2d8c8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2d8cc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2d8d0:	ldr	x25, [x26, x0]
   2d8d4:	str	x9, [x26, x8]
   2d8d8:	str	x10, [x26, x0]
   2d8dc:	ldr	x24, [x19]
   2d8e0:	subs	x27, x24, #0x1
   2d8e4:	add	x22, x24, #0x4
   2d8e8:	b.eq	2db9c <mpfr_log10@@Base+0x378>  // b.none
   2d8ec:	b.le	2dbbc <mpfr_log10@@Base+0x398>
   2d8f0:	clz	x8, x27
   2d8f4:	mov	w9, #0x40                  	// #64
   2d8f8:	sub	x8, x9, x8
   2d8fc:	add	x22, x22, x8
   2d900:	sub	x0, x29, #0x20
   2d904:	mov	x1, x22
   2d908:	bl	cad0 <mpfr_init2@plt>
   2d90c:	add	x0, sp, #0x10
   2d910:	mov	x1, x22
   2d914:	bl	cad0 <mpfr_init2@plt>
   2d918:	cmp	w20, #0x0
   2d91c:	mov	x27, #0x2                   	// #2
   2d920:	mov	w8, #0x40                  	// #64
   2d924:	cinc	x24, x24, eq  // eq = none
   2d928:	movk	x27, #0x8000, lsl #48
   2d92c:	str	x8, [sp, #8]
   2d930:	sub	x0, x29, #0x20
   2d934:	mov	w1, #0xa                   	// #10
   2d938:	mov	x2, xzr
   2d93c:	mov	w3, wzr
   2d940:	bl	c640 <mpfr_set_ui_2exp@plt>
   2d944:	sub	x0, x29, #0x20
   2d948:	sub	x1, x29, #0x20
   2d94c:	mov	w2, #0x3                   	// #3
   2d950:	bl	c130 <mpfr_log@plt>
   2d954:	add	x0, sp, #0x10
   2d958:	mov	x1, x21
   2d95c:	mov	w2, wzr
   2d960:	bl	c130 <mpfr_log@plt>
   2d964:	sub	x0, x29, #0x20
   2d968:	add	x1, sp, #0x10
   2d96c:	sub	x2, x29, #0x20
   2d970:	mov	w3, wzr
   2d974:	bl	c670 <mpfr_div@plt>
   2d978:	ldur	x8, [x29, #-16]
   2d97c:	add	x9, x27, #0x2
   2d980:	cmp	x8, x9
   2d984:	b.lt	2d9b8 <mpfr_log10@@Base+0x194>  // b.tstop
   2d988:	ldur	x8, [x29, #-32]
   2d98c:	ldur	x0, [x29, #-8]
   2d990:	sub	x2, x22, #0x4
   2d994:	mov	x3, x24
   2d998:	sub	x9, x8, #0x1
   2d99c:	add	x8, x8, #0x3e
   2d9a0:	cmp	x9, #0x0
   2d9a4:	csel	x8, x8, x9, lt  // lt = tstop
   2d9a8:	asr	x8, x8, #6
   2d9ac:	add	x1, x8, #0x1
   2d9b0:	bl	c3d0 <mpfr_round_p@plt>
   2d9b4:	cbnz	w0, 2da80 <mpfr_log10@@Base+0x25c>
   2d9b8:	ldur	w8, [x29, #-24]
   2d9bc:	cmp	w8, #0x1
   2d9c0:	b.lt	2da18 <mpfr_log10@@Base+0x1f4>  // b.tstop
   2d9c4:	sub	x0, x29, #0x20
   2d9c8:	bl	c200 <mpfr_integer_p@plt>
   2d9cc:	cbz	w0, 2da18 <mpfr_log10@@Base+0x1f4>
   2d9d0:	sub	x0, x29, #0x20
   2d9d4:	mov	w1, wzr
   2d9d8:	bl	bf00 <mpfr_fits_ulong_p@plt>
   2d9dc:	cbz	w0, 2da18 <mpfr_log10@@Base+0x1f4>
   2d9e0:	sub	x0, x29, #0x20
   2d9e4:	mov	w1, wzr
   2d9e8:	bl	bd50 <mpfr_get_ui@plt>
   2d9ec:	mov	x2, x0
   2d9f0:	add	x0, sp, #0x10
   2d9f4:	mov	w1, #0xa                   	// #10
   2d9f8:	mov	w3, wzr
   2d9fc:	bl	bbd0 <mpfr_ui_pow_ui@plt>
   2da00:	cbnz	w0, 2da18 <mpfr_log10@@Base+0x1f4>
   2da04:	add	x1, sp, #0x10
   2da08:	mov	w2, #0x1                   	// #1
   2da0c:	mov	x0, x21
   2da10:	bl	c9f0 <mpfr_cmp3@plt>
   2da14:	cbz	w0, 2da80 <mpfr_log10@@Base+0x25c>
   2da18:	ldr	x9, [sp, #8]
   2da1c:	sub	x8, x27, x22
   2da20:	sub	x8, x8, #0x103
   2da24:	cmp	x9, x8
   2da28:	mov	x8, x9
   2da2c:	b.gt	2da60 <mpfr_log10@@Base+0x23c>
   2da30:	add	x22, x8, x22
   2da34:	cmp	x22, #0x0
   2da38:	cinc	x8, x22, lt  // lt = tstop
   2da3c:	asr	x8, x8, #1
   2da40:	sub	x0, x29, #0x20
   2da44:	mov	x1, x22
   2da48:	str	x8, [sp, #8]
   2da4c:	bl	bf80 <mpfr_set_prec@plt>
   2da50:	add	x0, sp, #0x10
   2da54:	mov	x1, x22
   2da58:	bl	bf80 <mpfr_set_prec@plt>
   2da5c:	b	2d930 <mpfr_log10@@Base+0x10c>
   2da60:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2da64:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2da68:	mov	w1, #0x88                  	// #136
   2da6c:	add	x0, x0, #0x5da
   2da70:	add	x2, x2, #0xe2
   2da74:	bl	cb90 <mpfr_assert_fail@plt>
   2da78:	ldr	x8, [sp, #8]
   2da7c:	b	2da30 <mpfr_log10@@Base+0x20c>
   2da80:	ldur	w3, [x29, #-24]
   2da84:	sub	x1, x29, #0x20
   2da88:	mov	x0, x19
   2da8c:	mov	w2, w20
   2da90:	bl	c6f0 <mpfr_set4@plt>
   2da94:	mov	w21, w0
   2da98:	sub	x0, x29, #0x20
   2da9c:	bl	c110 <mpfr_clear@plt>
   2daa0:	add	x0, sp, #0x10
   2daa4:	bl	c110 <mpfr_clear@plt>
   2daa8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2daac:	ldr	x1, [x0, #2656]
   2dab0:	add	x0, x0, #0xa60
   2dab4:	blr	x1
   2dab8:	str	w28, [x26, x0]
   2dabc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dac0:	ldr	x1, [x0, #2592]
   2dac4:	add	x0, x0, #0xa20
   2dac8:	blr	x1
   2dacc:	str	x23, [x26, x0]
   2dad0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dad4:	ldr	x1, [x0, #2624]
   2dad8:	add	x0, x0, #0xa40
   2dadc:	blr	x1
   2dae0:	str	x25, [x26, x0]
   2dae4:	ldr	x8, [x19, #16]
   2dae8:	cmp	x8, x25
   2daec:	b.gt	2dba4 <mpfr_log10@@Base+0x380>
   2daf0:	cmp	x8, x23
   2daf4:	b.lt	2dba4 <mpfr_log10@@Base+0x380>  // b.tstop
   2daf8:	cbz	w21, 2db28 <mpfr_log10@@Base+0x304>
   2dafc:	orr	w8, w28, #0x8
   2db00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2db04:	ldr	x1, [x0, #2656]
   2db08:	add	x0, x0, #0xa60
   2db0c:	blr	x1
   2db10:	str	w8, [x26, x0]
   2db14:	b	2db28 <mpfr_log10@@Base+0x304>
   2db18:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2db1c:	mov	w21, wzr
   2db20:	str	x8, [x19, #16]
   2db24:	str	w22, [x19, #8]
   2db28:	mov	w0, w21
   2db2c:	ldp	x20, x19, [sp, #160]
   2db30:	ldp	x22, x21, [sp, #144]
   2db34:	ldp	x24, x23, [sp, #128]
   2db38:	ldp	x26, x25, [sp, #112]
   2db3c:	ldp	x28, x27, [sp, #96]
   2db40:	ldp	x29, x30, [sp, #80]
   2db44:	add	sp, sp, #0xb0
   2db48:	ret
   2db4c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2db50:	cmp	x8, x9
   2db54:	b.eq	2dbd8 <mpfr_log10@@Base+0x3b4>  // b.none
   2db58:	mov	x9, #0x2                   	// #2
   2db5c:	movk	x9, #0x8000, lsl #48
   2db60:	cmp	x8, x9
   2db64:	b.eq	2dbf8 <mpfr_log10@@Base+0x3d4>  // b.none
   2db68:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2db6c:	mov	w9, #0xffffffff            	// #-1
   2db70:	str	x8, [x19, #16]
   2db74:	str	w9, [x19, #8]
   2db78:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2db7c:	ldr	x1, [x0, #2656]
   2db80:	add	x0, x0, #0xa60
   2db84:	blr	x1
   2db88:	mrs	x8, tpidr_el0
   2db8c:	ldr	w9, [x8, x0]
   2db90:	mov	w21, wzr
   2db94:	orr	w9, w9, #0x20
   2db98:	b	2dc1c <mpfr_log10@@Base+0x3f8>
   2db9c:	mov	x8, xzr
   2dba0:	b	2d8fc <mpfr_log10@@Base+0xd8>
   2dba4:	mov	x0, x19
   2dba8:	mov	w1, w21
   2dbac:	mov	w2, w20
   2dbb0:	bl	cb80 <mpfr_check_range@plt>
   2dbb4:	mov	w21, w0
   2dbb8:	b	2db28 <mpfr_log10@@Base+0x304>
   2dbbc:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2dbc0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2dbc4:	add	x0, x0, #0x5da
   2dbc8:	add	x2, x2, #0xd9
   2dbcc:	mov	w1, #0x69                  	// #105
   2dbd0:	bl	cb90 <mpfr_assert_fail@plt>
   2dbd4:	b	2d8f0 <mpfr_log10@@Base+0xcc>
   2dbd8:	ldr	w8, [x21, #8]
   2dbdc:	tbnz	w8, #31, 2dbf8 <mpfr_log10@@Base+0x3d4>
   2dbe0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   2dbe4:	mov	w9, #0x1                   	// #1
   2dbe8:	mov	w21, wzr
   2dbec:	str	x8, [x19, #16]
   2dbf0:	str	w9, [x19, #8]
   2dbf4:	b	2db28 <mpfr_log10@@Base+0x304>
   2dbf8:	str	x10, [x19, #16]
   2dbfc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dc00:	ldr	x1, [x0, #2656]
   2dc04:	add	x0, x0, #0xa60
   2dc08:	blr	x1
   2dc0c:	mrs	x8, tpidr_el0
   2dc10:	ldr	w9, [x8, x0]
   2dc14:	mov	w21, wzr
   2dc18:	orr	w9, w9, #0x4
   2dc1c:	str	w9, [x8, x0]
   2dc20:	b	2db28 <mpfr_log10@@Base+0x304>

000000000002dc24 <mpfr_ui_pow@@Base>:
   2dc24:	sub	sp, sp, #0x90
   2dc28:	stp	x29, x30, [sp, #48]
   2dc2c:	stp	x28, x27, [sp, #64]
   2dc30:	stp	x26, x25, [sp, #80]
   2dc34:	stp	x24, x23, [sp, #96]
   2dc38:	stp	x22, x21, [sp, #112]
   2dc3c:	stp	x20, x19, [sp, #128]
   2dc40:	add	x29, sp, #0x30
   2dc44:	mov	w19, w3
   2dc48:	mov	x21, x2
   2dc4c:	mov	x8, x1
   2dc50:	mov	x20, x0
   2dc54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dc58:	ldr	x1, [x0, #2656]
   2dc5c:	add	x0, x0, #0xa60
   2dc60:	blr	x1
   2dc64:	mrs	x25, tpidr_el0
   2dc68:	ldr	w27, [x25, x0]
   2dc6c:	mov	x22, x0
   2dc70:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dc74:	ldr	x1, [x0, #2592]
   2dc78:	add	x0, x0, #0xa20
   2dc7c:	blr	x1
   2dc80:	ldr	x26, [x25, x0]
   2dc84:	mov	x23, x0
   2dc88:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dc8c:	ldr	x1, [x0, #2624]
   2dc90:	add	x0, x0, #0xa40
   2dc94:	blr	x1
   2dc98:	ldr	x28, [x25, x0]
   2dc9c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2dca0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2dca4:	mov	x24, x0
   2dca8:	mov	w11, #0x40                  	// #64
   2dcac:	add	x12, sp, #0x8
   2dcb0:	str	x9, [x25, x23]
   2dcb4:	str	x10, [x25, x0]
   2dcb8:	mov	w9, #0x1                   	// #1
   2dcbc:	add	x0, sp, #0x10
   2dcc0:	mov	x1, x8
   2dcc4:	mov	x2, xzr
   2dcc8:	mov	w3, wzr
   2dccc:	str	x11, [sp, #16]
   2dcd0:	str	x12, [sp, #40]
   2dcd4:	str	w9, [sp, #24]
   2dcd8:	bl	c640 <mpfr_set_ui_2exp@plt>
   2dcdc:	add	x1, sp, #0x10
   2dce0:	mov	x0, x20
   2dce4:	mov	x2, x21
   2dce8:	mov	w3, w19
   2dcec:	bl	be40 <mpfr_pow@plt>
   2dcf0:	ldr	w8, [x25, x22]
   2dcf4:	str	x26, [x25, x23]
   2dcf8:	str	x28, [x25, x24]
   2dcfc:	orr	w9, w8, w27
   2dd00:	str	w9, [x25, x22]
   2dd04:	ldr	x10, [x20, #16]
   2dd08:	mov	w8, w0
   2dd0c:	cmp	x10, x28
   2dd10:	b.gt	2dd5c <mpfr_ui_pow@@Base+0x138>
   2dd14:	cmp	x10, x26
   2dd18:	b.lt	2dd5c <mpfr_ui_pow@@Base+0x138>  // b.tstop
   2dd1c:	cbz	w8, 2dd38 <mpfr_ui_pow@@Base+0x114>
   2dd20:	orr	w9, w9, #0x8
   2dd24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dd28:	ldr	x1, [x0, #2656]
   2dd2c:	add	x0, x0, #0xa60
   2dd30:	blr	x1
   2dd34:	str	w9, [x25, x0]
   2dd38:	ldp	x20, x19, [sp, #128]
   2dd3c:	ldp	x22, x21, [sp, #112]
   2dd40:	ldp	x24, x23, [sp, #96]
   2dd44:	ldp	x26, x25, [sp, #80]
   2dd48:	ldp	x28, x27, [sp, #64]
   2dd4c:	ldp	x29, x30, [sp, #48]
   2dd50:	mov	w0, w8
   2dd54:	add	sp, sp, #0x90
   2dd58:	ret
   2dd5c:	mov	x0, x20
   2dd60:	mov	w1, w8
   2dd64:	mov	w2, w19
   2dd68:	bl	cb80 <mpfr_check_range@plt>
   2dd6c:	mov	w8, w0
   2dd70:	b	2dd38 <mpfr_ui_pow@@Base+0x114>

000000000002dd74 <mpfr_ui_pow_ui@@Base>:
   2dd74:	sub	sp, sp, #0xc0
   2dd78:	stp	x24, x23, [sp, #144]
   2dd7c:	stp	x22, x21, [sp, #160]
   2dd80:	stp	x20, x19, [sp, #176]
   2dd84:	mov	w24, w3
   2dd88:	mov	x21, x1
   2dd8c:	cmp	x2, #0x1
   2dd90:	mov	x20, x0
   2dd94:	stp	x29, x30, [sp, #96]
   2dd98:	stp	x28, x27, [sp, #112]
   2dd9c:	stp	x26, x25, [sp, #128]
   2dda0:	add	x29, sp, #0x60
   2dda4:	b.ls	2e03c <mpfr_ui_pow_ui@@Base+0x2c8>  // b.plast
   2dda8:	cmp	x21, #0x1
   2ddac:	b.ls	2e04c <mpfr_ui_pow_ui@@Base+0x2d8>  // b.plast
   2ddb0:	mov	x22, x2
   2ddb4:	clz	x19, x2
   2ddb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ddbc:	ldr	x1, [x0, #2656]
   2ddc0:	add	x0, x0, #0xa60
   2ddc4:	blr	x1
   2ddc8:	mrs	x27, tpidr_el0
   2ddcc:	ldr	w28, [x27, x0]
   2ddd0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ddd4:	ldr	x1, [x0, #2592]
   2ddd8:	add	x0, x0, #0xa20
   2dddc:	blr	x1
   2dde0:	ldr	x9, [x27, x0]
   2dde4:	mov	x8, x0
   2dde8:	stur	x9, [x29, #-40]
   2ddec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ddf0:	ldr	x1, [x0, #2624]
   2ddf4:	add	x0, x0, #0xa40
   2ddf8:	blr	x1
   2ddfc:	ldr	x9, [x27, x0]
   2de00:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2de04:	str	x10, [x27, x0]
   2de08:	sub	x0, x29, #0x20
   2de0c:	str	x9, [sp, #48]
   2de10:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2de14:	str	x9, [x27, x8]
   2de18:	ldr	x8, [x20]
   2de1c:	sub	x8, x8, x19
   2de20:	add	x23, x8, #0x43
   2de24:	mov	x1, x23
   2de28:	bl	cad0 <mpfr_init2@plt>
   2de2c:	mov	w8, #0x3e                  	// #62
   2de30:	sub	x9, x19, #0x3f
   2de34:	cmp	w24, #0x0
   2de38:	str	x9, [sp, #32]
   2de3c:	mov	w9, #0x40                  	// #64
   2de40:	sub	w25, w8, w19
   2de44:	str	x9, [sp, #16]
   2de48:	cset	w9, eq  // eq = none
   2de4c:	add	x8, x25, #0x2
   2de50:	str	x9, [sp, #40]
   2de54:	str	x8, [sp, #24]
   2de58:	sub	x0, x29, #0x20
   2de5c:	mov	w3, #0x2                   	// #2
   2de60:	mov	x1, x21
   2de64:	mov	x2, xzr
   2de68:	bl	c640 <mpfr_set_ui_2exp@plt>
   2de6c:	cmp	x19, #0x3f
   2de70:	mov	w26, w0
   2de74:	b.ne	2de80 <mpfr_ui_pow_ui@@Base+0x10c>  // b.any
   2de78:	mov	w8, #0x1                   	// #1
   2de7c:	b	2ded8 <mpfr_ui_pow_ui@@Base+0x164>
   2de80:	stp	w28, w24, [sp, #8]
   2de84:	ldr	x24, [sp, #32]
   2de88:	mov	x28, x25
   2de8c:	sub	x0, x29, #0x20
   2de90:	sub	x1, x29, #0x20
   2de94:	sub	x2, x29, #0x20
   2de98:	mov	w3, #0x2                   	// #2
   2de9c:	bl	be00 <mpfr_mul@plt>
   2dea0:	lsr	x8, x22, x28
   2dea4:	orr	w26, w0, w26
   2dea8:	tbz	w8, #0, 2dec4 <mpfr_ui_pow_ui@@Base+0x150>
   2deac:	sub	x0, x29, #0x20
   2deb0:	sub	x1, x29, #0x20
   2deb4:	mov	w3, #0x2                   	// #2
   2deb8:	mov	x2, x21
   2debc:	bl	bb10 <mpfr_mul_ui@plt>
   2dec0:	orr	w26, w0, w26
   2dec4:	adds	x24, x24, #0x1
   2dec8:	sub	x28, x28, #0x1
   2decc:	b.cc	2de8c <mpfr_ui_pow_ui@@Base+0x118>  // b.lo, b.ul, b.last
   2ded0:	ldr	x8, [sp, #24]
   2ded4:	ldp	w28, w24, [sp, #8]
   2ded8:	cbz	w26, 2df84 <mpfr_ui_pow_ui@@Base+0x210>
   2dedc:	ldur	x9, [x29, #-16]
   2dee0:	mov	x10, #0xfffffffffffffeff    	// #-257
   2dee4:	movk	x10, #0x7fff, lsl #48
   2dee8:	add	x10, x10, #0x105
   2deec:	cmp	x9, x10
   2def0:	b.lt	2df2c <mpfr_ui_pow_ui@@Base+0x1b8>  // b.tstop
   2def4:	ldur	x9, [x29, #-32]
   2def8:	sub	x2, x23, x8
   2defc:	ldr	x8, [x20]
   2df00:	ldur	x0, [x29, #-8]
   2df04:	sub	x10, x9, #0x1
   2df08:	add	x9, x9, #0x3e
   2df0c:	cmp	x10, #0x0
   2df10:	csel	x9, x9, x10, lt  // lt = tstop
   2df14:	asr	x9, x9, #6
   2df18:	add	x1, x9, #0x1
   2df1c:	ldr	x9, [sp, #40]
   2df20:	add	x3, x8, x9
   2df24:	bl	c3d0 <mpfr_round_p@plt>
   2df28:	cbnz	w0, 2df84 <mpfr_ui_pow_ui@@Base+0x210>
   2df2c:	ldr	x26, [sp, #16]
   2df30:	mov	x8, #0xfffffffffffffeff    	// #-257
   2df34:	movk	x8, #0x7fff, lsl #48
   2df38:	sub	x8, x8, x23
   2df3c:	cmp	x26, x8
   2df40:	b.gt	2df68 <mpfr_ui_pow_ui@@Base+0x1f4>
   2df44:	add	x23, x23, x26
   2df48:	cmp	x23, #0x0
   2df4c:	cinc	x8, x23, lt  // lt = tstop
   2df50:	asr	x8, x8, #1
   2df54:	sub	x0, x29, #0x20
   2df58:	mov	x1, x23
   2df5c:	str	x8, [sp, #16]
   2df60:	bl	bf80 <mpfr_set_prec@plt>
   2df64:	b	2de58 <mpfr_ui_pow_ui@@Base+0xe4>
   2df68:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2df6c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2df70:	mov	w1, #0x54                  	// #84
   2df74:	add	x0, x0, #0x5e2
   2df78:	add	x2, x2, #0x922
   2df7c:	bl	cb90 <mpfr_assert_fail@plt>
   2df80:	b	2df44 <mpfr_ui_pow_ui@@Base+0x1d0>
   2df84:	ldur	w3, [x29, #-24]
   2df88:	sub	x1, x29, #0x20
   2df8c:	mov	x0, x20
   2df90:	mov	w2, w24
   2df94:	bl	c6f0 <mpfr_set4@plt>
   2df98:	mov	w21, w0
   2df9c:	sub	x0, x29, #0x20
   2dfa0:	bl	c110 <mpfr_clear@plt>
   2dfa4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dfa8:	ldr	x1, [x0, #2656]
   2dfac:	add	x0, x0, #0xa60
   2dfb0:	blr	x1
   2dfb4:	str	w28, [x27, x0]
   2dfb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dfbc:	ldr	x1, [x0, #2592]
   2dfc0:	add	x0, x0, #0xa20
   2dfc4:	blr	x1
   2dfc8:	ldur	x9, [x29, #-40]
   2dfcc:	str	x9, [x27, x0]
   2dfd0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2dfd4:	ldr	x1, [x0, #2624]
   2dfd8:	add	x0, x0, #0xa40
   2dfdc:	blr	x1
   2dfe0:	ldr	x10, [sp, #48]
   2dfe4:	str	x10, [x27, x0]
   2dfe8:	ldr	x8, [x20, #16]
   2dfec:	cmp	x8, x10
   2dff0:	b.gt	2e068 <mpfr_ui_pow_ui@@Base+0x2f4>
   2dff4:	cmp	x8, x9
   2dff8:	b.lt	2e068 <mpfr_ui_pow_ui@@Base+0x2f4>  // b.tstop
   2dffc:	cbz	w21, 2e018 <mpfr_ui_pow_ui@@Base+0x2a4>
   2e000:	orr	w8, w28, #0x8
   2e004:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e008:	ldr	x1, [x0, #2656]
   2e00c:	add	x0, x0, #0xa60
   2e010:	blr	x1
   2e014:	str	w8, [x27, x0]
   2e018:	mov	w0, w21
   2e01c:	ldp	x20, x19, [sp, #176]
   2e020:	ldp	x22, x21, [sp, #160]
   2e024:	ldp	x24, x23, [sp, #144]
   2e028:	ldp	x26, x25, [sp, #128]
   2e02c:	ldp	x28, x27, [sp, #112]
   2e030:	ldp	x29, x30, [sp, #96]
   2e034:	add	sp, sp, #0xc0
   2e038:	ret
   2e03c:	b.ne	2e050 <mpfr_ui_pow_ui@@Base+0x2dc>  // b.any
   2e040:	mov	x0, x20
   2e044:	mov	x1, x21
   2e048:	b	2e058 <mpfr_ui_pow_ui@@Base+0x2e4>
   2e04c:	b.ne	2e080 <mpfr_ui_pow_ui@@Base+0x30c>  // b.any
   2e050:	mov	w1, #0x1                   	// #1
   2e054:	mov	x0, x20
   2e058:	mov	x2, xzr
   2e05c:	mov	w3, w24
   2e060:	bl	c640 <mpfr_set_ui_2exp@plt>
   2e064:	b	2e078 <mpfr_ui_pow_ui@@Base+0x304>
   2e068:	mov	x0, x20
   2e06c:	mov	w1, w21
   2e070:	mov	w2, w24
   2e074:	bl	cb80 <mpfr_check_range@plt>
   2e078:	mov	w21, w0
   2e07c:	b	2e018 <mpfr_ui_pow_ui@@Base+0x2a4>
   2e080:	mov	w8, #0x1                   	// #1
   2e084:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2e088:	mov	w21, wzr
   2e08c:	str	w8, [x20, #8]
   2e090:	str	x9, [x20, #16]
   2e094:	b	2e018 <mpfr_ui_pow_ui@@Base+0x2a4>

000000000002e098 <mpfr_min@@Base>:
   2e098:	stp	x29, x30, [sp, #-48]!
   2e09c:	stp	x22, x21, [sp, #16]
   2e0a0:	stp	x20, x19, [sp, #32]
   2e0a4:	ldr	x9, [x1, #16]
   2e0a8:	mov	x8, #0x2                   	// #2
   2e0ac:	movk	x8, #0x8000, lsl #48
   2e0b0:	add	x11, x8, #0x2
   2e0b4:	mov	w19, w3
   2e0b8:	mov	x20, x2
   2e0bc:	mov	x22, x1
   2e0c0:	cmp	x9, x11
   2e0c4:	mov	x21, x0
   2e0c8:	mov	x29, sp
   2e0cc:	b.lt	2e104 <mpfr_min@@Base+0x6c>  // b.tstop
   2e0d0:	ldr	x10, [x20, #16]
   2e0d4:	cmp	x10, x11
   2e0d8:	b.lt	2e150 <mpfr_min@@Base+0xb8>  // b.tstop
   2e0dc:	mov	w2, #0x1                   	// #1
   2e0e0:	mov	x0, x22
   2e0e4:	mov	x1, x20
   2e0e8:	bl	c9f0 <mpfr_cmp3@plt>
   2e0ec:	cmp	w0, #0x0
   2e0f0:	b.le	2e158 <mpfr_min@@Base+0xc0>
   2e0f4:	ldr	w3, [x20, #8]
   2e0f8:	mov	x0, x21
   2e0fc:	mov	x1, x20
   2e100:	b	2e164 <mpfr_min@@Base+0xcc>
   2e104:	ldr	x10, [x20, #16]
   2e108:	cmp	x9, x8
   2e10c:	b.ne	2e150 <mpfr_min@@Base+0xb8>  // b.any
   2e110:	cmp	x10, x8
   2e114:	b.ne	2e0f4 <mpfr_min@@Base+0x5c>  // b.any
   2e118:	str	x8, [x21, #16]
   2e11c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e120:	ldr	x1, [x0, #2656]
   2e124:	add	x0, x0, #0xa60
   2e128:	blr	x1
   2e12c:	mrs	x8, tpidr_el0
   2e130:	ldr	w9, [x8, x0]
   2e134:	orr	w9, w9, #0x4
   2e138:	str	w9, [x8, x0]
   2e13c:	ldp	x20, x19, [sp, #32]
   2e140:	ldp	x22, x21, [sp, #16]
   2e144:	mov	w0, wzr
   2e148:	ldp	x29, x30, [sp], #48
   2e14c:	ret
   2e150:	cmp	x10, x8
   2e154:	b.ne	2e178 <mpfr_min@@Base+0xe0>  // b.any
   2e158:	ldr	w3, [x22, #8]
   2e15c:	mov	x0, x21
   2e160:	mov	x1, x22
   2e164:	mov	w2, w19
   2e168:	ldp	x20, x19, [sp, #32]
   2e16c:	ldp	x22, x21, [sp, #16]
   2e170:	ldp	x29, x30, [sp], #48
   2e174:	b	c6f0 <mpfr_set4@plt>
   2e178:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2e17c:	cmp	x9, x8
   2e180:	b.ne	2e0dc <mpfr_min@@Base+0x44>  // b.any
   2e184:	cmp	x10, x8
   2e188:	b.ne	2e0dc <mpfr_min@@Base+0x44>  // b.any
   2e18c:	ldr	w3, [x22, #8]
   2e190:	tbz	w3, #31, 2e0f4 <mpfr_min@@Base+0x5c>
   2e194:	b	2e15c <mpfr_min@@Base+0xc4>

000000000002e198 <mpfr_max@@Base>:
   2e198:	stp	x29, x30, [sp, #-48]!
   2e19c:	stp	x22, x21, [sp, #16]
   2e1a0:	stp	x20, x19, [sp, #32]
   2e1a4:	ldr	x9, [x1, #16]
   2e1a8:	mov	x8, #0x2                   	// #2
   2e1ac:	movk	x8, #0x8000, lsl #48
   2e1b0:	add	x11, x8, #0x2
   2e1b4:	mov	w19, w3
   2e1b8:	mov	x20, x2
   2e1bc:	mov	x22, x1
   2e1c0:	cmp	x9, x11
   2e1c4:	mov	x21, x0
   2e1c8:	mov	x29, sp
   2e1cc:	b.lt	2e204 <mpfr_max@@Base+0x6c>  // b.tstop
   2e1d0:	ldr	x10, [x20, #16]
   2e1d4:	cmp	x10, x11
   2e1d8:	b.lt	2e250 <mpfr_max@@Base+0xb8>  // b.tstop
   2e1dc:	mov	w2, #0x1                   	// #1
   2e1e0:	mov	x0, x22
   2e1e4:	mov	x1, x20
   2e1e8:	bl	c9f0 <mpfr_cmp3@plt>
   2e1ec:	cmp	w0, #0x0
   2e1f0:	b.le	2e274 <mpfr_max@@Base+0xdc>
   2e1f4:	ldr	w3, [x22, #8]
   2e1f8:	mov	x0, x21
   2e1fc:	mov	x1, x22
   2e200:	b	2e280 <mpfr_max@@Base+0xe8>
   2e204:	ldr	x10, [x20, #16]
   2e208:	cmp	x9, x8
   2e20c:	b.ne	2e250 <mpfr_max@@Base+0xb8>  // b.any
   2e210:	cmp	x10, x8
   2e214:	b.ne	2e274 <mpfr_max@@Base+0xdc>  // b.any
   2e218:	str	x8, [x21, #16]
   2e21c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e220:	ldr	x1, [x0, #2656]
   2e224:	add	x0, x0, #0xa60
   2e228:	blr	x1
   2e22c:	mrs	x8, tpidr_el0
   2e230:	ldr	w9, [x8, x0]
   2e234:	orr	w9, w9, #0x4
   2e238:	str	w9, [x8, x0]
   2e23c:	ldp	x20, x19, [sp, #32]
   2e240:	ldp	x22, x21, [sp, #16]
   2e244:	mov	w0, wzr
   2e248:	ldp	x29, x30, [sp], #48
   2e24c:	ret
   2e250:	cmp	x10, x8
   2e254:	b.eq	2e1f4 <mpfr_max@@Base+0x5c>  // b.none
   2e258:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2e25c:	cmp	x9, x8
   2e260:	b.ne	2e1dc <mpfr_max@@Base+0x44>  // b.any
   2e264:	cmp	x10, x8
   2e268:	b.ne	2e1dc <mpfr_max@@Base+0x44>  // b.any
   2e26c:	ldr	w3, [x22, #8]
   2e270:	tbz	w3, #31, 2e1f8 <mpfr_max@@Base+0x60>
   2e274:	ldr	w3, [x20, #8]
   2e278:	mov	x0, x21
   2e27c:	mov	x1, x20
   2e280:	mov	w2, w19
   2e284:	ldp	x20, x19, [sp, #32]
   2e288:	ldp	x22, x21, [sp, #16]
   2e28c:	ldp	x29, x30, [sp], #48
   2e290:	b	c6f0 <mpfr_set4@plt>

000000000002e294 <mpfr_dim@@Base>:
   2e294:	stp	x29, x30, [sp, #-64]!
   2e298:	stp	x22, x21, [sp, #32]
   2e29c:	stp	x20, x19, [sp, #48]
   2e2a0:	ldr	x9, [x1, #16]
   2e2a4:	mov	x8, #0x2                   	// #2
   2e2a8:	movk	x8, #0x8000, lsl #48
   2e2ac:	mov	x22, x0
   2e2b0:	cmp	x9, x8
   2e2b4:	str	x23, [sp, #16]
   2e2b8:	mov	x29, sp
   2e2bc:	b.eq	2e2d0 <mpfr_dim@@Base+0x3c>  // b.none
   2e2c0:	ldr	x9, [x2, #16]
   2e2c4:	mov	x20, x2
   2e2c8:	cmp	x9, x8
   2e2cc:	b.ne	2e30c <mpfr_dim@@Base+0x78>  // b.any
   2e2d0:	str	x8, [x22, #16]
   2e2d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e2d8:	ldr	x1, [x0, #2656]
   2e2dc:	add	x0, x0, #0xa60
   2e2e0:	blr	x1
   2e2e4:	mrs	x8, tpidr_el0
   2e2e8:	ldr	w9, [x8, x0]
   2e2ec:	orr	w9, w9, #0x4
   2e2f0:	str	w9, [x8, x0]
   2e2f4:	ldp	x20, x19, [sp, #48]
   2e2f8:	ldp	x22, x21, [sp, #32]
   2e2fc:	ldr	x23, [sp, #16]
   2e300:	mov	w0, wzr
   2e304:	ldp	x29, x30, [sp], #64
   2e308:	ret
   2e30c:	mov	x21, x1
   2e310:	mov	w2, #0x1                   	// #1
   2e314:	mov	x0, x1
   2e318:	mov	x1, x20
   2e31c:	mov	w19, w3
   2e320:	mov	w23, #0x1                   	// #1
   2e324:	bl	c9f0 <mpfr_cmp3@plt>
   2e328:	cmp	w0, #0x1
   2e32c:	b.lt	2e354 <mpfr_dim@@Base+0xc0>  // b.tstop
   2e330:	mov	x0, x22
   2e334:	mov	x1, x21
   2e338:	mov	x2, x20
   2e33c:	mov	w3, w19
   2e340:	ldp	x20, x19, [sp, #48]
   2e344:	ldp	x22, x21, [sp, #32]
   2e348:	ldr	x23, [sp, #16]
   2e34c:	ldp	x29, x30, [sp], #64
   2e350:	b	bc20 <mpfr_sub@plt>
   2e354:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   2e358:	str	x8, [x22, #16]
   2e35c:	str	w23, [x22, #8]
   2e360:	b	2e2f4 <mpfr_dim@@Base+0x60>

000000000002e364 <mpfr_signbit@@Base>:
   2e364:	ldr	w8, [x0, #8]
   2e368:	lsr	w0, w8, #31
   2e36c:	ret

000000000002e370 <mpfr_copysign@@Base>:
   2e370:	mov	w8, w3
   2e374:	ldr	w3, [x2, #8]
   2e378:	mov	w2, w8
   2e37c:	b	c6f0 <mpfr_set4@plt>

000000000002e380 <mpfr_setsign@@Base>:
   2e380:	mov	w8, w3
   2e384:	cmp	w2, #0x0
   2e388:	mov	w9, #0x1                   	// #1
   2e38c:	cneg	w3, w9, ne  // ne = any
   2e390:	mov	w2, w8
   2e394:	b	c6f0 <mpfr_set4@plt>

000000000002e398 <mpfr_mul_z@@Base>:
   2e398:	sub	sp, sp, #0x90
   2e39c:	stp	x20, x19, [sp, #128]
   2e3a0:	mov	x20, x0
   2e3a4:	mov	x0, x2
   2e3a8:	stp	x29, x30, [sp, #48]
   2e3ac:	stp	x28, x27, [sp, #64]
   2e3b0:	stp	x26, x25, [sp, #80]
   2e3b4:	stp	x24, x23, [sp, #96]
   2e3b8:	stp	x22, x21, [sp, #112]
   2e3bc:	add	x29, sp, #0x30
   2e3c0:	mov	w19, w3
   2e3c4:	mov	x22, x2
   2e3c8:	mov	x21, x1
   2e3cc:	bl	bf40 <__gmpz_fits_slong_p@plt>
   2e3d0:	cbz	w0, 2e40c <mpfr_mul_z@@Base+0x74>
   2e3d4:	mov	x0, x22
   2e3d8:	bl	bae0 <__gmpz_get_si@plt>
   2e3dc:	mov	x2, x0
   2e3e0:	mov	x0, x20
   2e3e4:	mov	x1, x21
   2e3e8:	mov	w3, w19
   2e3ec:	ldp	x20, x19, [sp, #128]
   2e3f0:	ldp	x22, x21, [sp, #112]
   2e3f4:	ldp	x24, x23, [sp, #96]
   2e3f8:	ldp	x26, x25, [sp, #80]
   2e3fc:	ldp	x28, x27, [sp, #64]
   2e400:	ldp	x29, x30, [sp, #48]
   2e404:	add	sp, sp, #0x90
   2e408:	b	c9c0 <mpfr_mul_si@plt>
   2e40c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e410:	ldr	x1, [x0, #2656]
   2e414:	add	x0, x0, #0xa60
   2e418:	blr	x1
   2e41c:	mrs	x26, tpidr_el0
   2e420:	ldr	w8, [x26, x0]
   2e424:	mov	x23, x0
   2e428:	str	w8, [sp, #12]
   2e42c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e430:	ldr	x1, [x0, #2592]
   2e434:	add	x0, x0, #0xa20
   2e438:	blr	x1
   2e43c:	ldr	x27, [x26, x0]
   2e440:	mov	x24, x0
   2e444:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e448:	ldr	x1, [x0, #2624]
   2e44c:	add	x0, x0, #0xa40
   2e450:	blr	x1
   2e454:	ldr	x28, [x26, x0]
   2e458:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2e45c:	str	x8, [x26, x24]
   2e460:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2e464:	mov	x25, x0
   2e468:	str	x8, [x26, x0]
   2e46c:	add	x0, sp, #0x10
   2e470:	mov	x1, x22
   2e474:	bl	2fa0c <mpfr_cmp_f@@Base+0x130>
   2e478:	add	x2, sp, #0x10
   2e47c:	mov	x0, x20
   2e480:	mov	x1, x21
   2e484:	mov	w3, w19
   2e488:	bl	be00 <mpfr_mul@plt>
   2e48c:	ldr	w8, [x26, x23]
   2e490:	ldr	w9, [sp, #12]
   2e494:	mov	w21, w0
   2e498:	add	x0, sp, #0x10
   2e49c:	orr	w22, w8, w9
   2e4a0:	bl	c110 <mpfr_clear@plt>
   2e4a4:	str	w22, [x26, x23]
   2e4a8:	str	x27, [x26, x24]
   2e4ac:	str	x28, [x26, x25]
   2e4b0:	ldr	x8, [x20, #16]
   2e4b4:	cmp	x8, x28
   2e4b8:	b.gt	2e504 <mpfr_mul_z@@Base+0x16c>
   2e4bc:	cmp	x8, x27
   2e4c0:	b.lt	2e504 <mpfr_mul_z@@Base+0x16c>  // b.tstop
   2e4c4:	cbz	w21, 2e4e0 <mpfr_mul_z@@Base+0x148>
   2e4c8:	orr	w8, w22, #0x8
   2e4cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e4d0:	ldr	x1, [x0, #2656]
   2e4d4:	add	x0, x0, #0xa60
   2e4d8:	blr	x1
   2e4dc:	str	w8, [x26, x0]
   2e4e0:	mov	w0, w21
   2e4e4:	ldp	x20, x19, [sp, #128]
   2e4e8:	ldp	x22, x21, [sp, #112]
   2e4ec:	ldp	x24, x23, [sp, #96]
   2e4f0:	ldp	x26, x25, [sp, #80]
   2e4f4:	ldp	x28, x27, [sp, #64]
   2e4f8:	ldp	x29, x30, [sp, #48]
   2e4fc:	add	sp, sp, #0x90
   2e500:	ret
   2e504:	mov	x0, x20
   2e508:	mov	w1, w21
   2e50c:	mov	w2, w19
   2e510:	bl	cb80 <mpfr_check_range@plt>
   2e514:	mov	w21, w0
   2e518:	b	2e4e0 <mpfr_mul_z@@Base+0x148>

000000000002e51c <mpfr_div_z@@Base>:
   2e51c:	sub	sp, sp, #0x90
   2e520:	stp	x20, x19, [sp, #128]
   2e524:	mov	x20, x0
   2e528:	mov	x0, x2
   2e52c:	stp	x29, x30, [sp, #48]
   2e530:	stp	x28, x27, [sp, #64]
   2e534:	stp	x26, x25, [sp, #80]
   2e538:	stp	x24, x23, [sp, #96]
   2e53c:	stp	x22, x21, [sp, #112]
   2e540:	add	x29, sp, #0x30
   2e544:	mov	w19, w3
   2e548:	mov	x22, x2
   2e54c:	mov	x21, x1
   2e550:	bl	bf40 <__gmpz_fits_slong_p@plt>
   2e554:	cbz	w0, 2e590 <mpfr_div_z@@Base+0x74>
   2e558:	mov	x0, x22
   2e55c:	bl	bae0 <__gmpz_get_si@plt>
   2e560:	mov	x2, x0
   2e564:	mov	x0, x20
   2e568:	mov	x1, x21
   2e56c:	mov	w3, w19
   2e570:	ldp	x20, x19, [sp, #128]
   2e574:	ldp	x22, x21, [sp, #112]
   2e578:	ldp	x24, x23, [sp, #96]
   2e57c:	ldp	x26, x25, [sp, #80]
   2e580:	ldp	x28, x27, [sp, #64]
   2e584:	ldp	x29, x30, [sp, #48]
   2e588:	add	sp, sp, #0x90
   2e58c:	b	c870 <mpfr_div_si@plt>
   2e590:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e594:	ldr	x1, [x0, #2656]
   2e598:	add	x0, x0, #0xa60
   2e59c:	blr	x1
   2e5a0:	mrs	x26, tpidr_el0
   2e5a4:	ldr	w8, [x26, x0]
   2e5a8:	mov	x23, x0
   2e5ac:	str	w8, [sp, #12]
   2e5b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e5b4:	ldr	x1, [x0, #2592]
   2e5b8:	add	x0, x0, #0xa20
   2e5bc:	blr	x1
   2e5c0:	ldr	x27, [x26, x0]
   2e5c4:	mov	x24, x0
   2e5c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e5cc:	ldr	x1, [x0, #2624]
   2e5d0:	add	x0, x0, #0xa40
   2e5d4:	blr	x1
   2e5d8:	ldr	x28, [x26, x0]
   2e5dc:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2e5e0:	str	x8, [x26, x24]
   2e5e4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2e5e8:	mov	x25, x0
   2e5ec:	str	x8, [x26, x0]
   2e5f0:	add	x0, sp, #0x10
   2e5f4:	mov	x1, x22
   2e5f8:	bl	2fa0c <mpfr_cmp_f@@Base+0x130>
   2e5fc:	add	x2, sp, #0x10
   2e600:	mov	x0, x20
   2e604:	mov	x1, x21
   2e608:	mov	w3, w19
   2e60c:	bl	c670 <mpfr_div@plt>
   2e610:	ldr	w8, [x26, x23]
   2e614:	ldr	w9, [sp, #12]
   2e618:	mov	w21, w0
   2e61c:	add	x0, sp, #0x10
   2e620:	orr	w22, w8, w9
   2e624:	bl	c110 <mpfr_clear@plt>
   2e628:	str	w22, [x26, x23]
   2e62c:	str	x27, [x26, x24]
   2e630:	str	x28, [x26, x25]
   2e634:	ldr	x8, [x20, #16]
   2e638:	cmp	x8, x28
   2e63c:	b.gt	2e688 <mpfr_div_z@@Base+0x16c>
   2e640:	cmp	x8, x27
   2e644:	b.lt	2e688 <mpfr_div_z@@Base+0x16c>  // b.tstop
   2e648:	cbz	w21, 2e664 <mpfr_div_z@@Base+0x148>
   2e64c:	orr	w8, w22, #0x8
   2e650:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e654:	ldr	x1, [x0, #2656]
   2e658:	add	x0, x0, #0xa60
   2e65c:	blr	x1
   2e660:	str	w8, [x26, x0]
   2e664:	mov	w0, w21
   2e668:	ldp	x20, x19, [sp, #128]
   2e66c:	ldp	x22, x21, [sp, #112]
   2e670:	ldp	x24, x23, [sp, #96]
   2e674:	ldp	x26, x25, [sp, #80]
   2e678:	ldp	x28, x27, [sp, #64]
   2e67c:	ldp	x29, x30, [sp, #48]
   2e680:	add	sp, sp, #0x90
   2e684:	ret
   2e688:	mov	x0, x20
   2e68c:	mov	w1, w21
   2e690:	mov	w2, w19
   2e694:	bl	cb80 <mpfr_check_range@plt>
   2e698:	mov	w21, w0
   2e69c:	b	2e664 <mpfr_div_z@@Base+0x148>

000000000002e6a0 <mpfr_add_z@@Base>:
   2e6a0:	sub	sp, sp, #0x90
   2e6a4:	stp	x20, x19, [sp, #128]
   2e6a8:	mov	x20, x0
   2e6ac:	mov	x0, x2
   2e6b0:	stp	x29, x30, [sp, #48]
   2e6b4:	stp	x28, x27, [sp, #64]
   2e6b8:	stp	x26, x25, [sp, #80]
   2e6bc:	stp	x24, x23, [sp, #96]
   2e6c0:	stp	x22, x21, [sp, #112]
   2e6c4:	add	x29, sp, #0x30
   2e6c8:	mov	w19, w3
   2e6cc:	mov	x22, x2
   2e6d0:	mov	x21, x1
   2e6d4:	bl	bf40 <__gmpz_fits_slong_p@plt>
   2e6d8:	cbz	w0, 2e714 <mpfr_add_z@@Base+0x74>
   2e6dc:	mov	x0, x22
   2e6e0:	bl	bae0 <__gmpz_get_si@plt>
   2e6e4:	mov	x2, x0
   2e6e8:	mov	x0, x20
   2e6ec:	mov	x1, x21
   2e6f0:	mov	w3, w19
   2e6f4:	ldp	x20, x19, [sp, #128]
   2e6f8:	ldp	x22, x21, [sp, #112]
   2e6fc:	ldp	x24, x23, [sp, #96]
   2e700:	ldp	x26, x25, [sp, #80]
   2e704:	ldp	x28, x27, [sp, #64]
   2e708:	ldp	x29, x30, [sp, #48]
   2e70c:	add	sp, sp, #0x90
   2e710:	b	c840 <mpfr_add_si@plt>
   2e714:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e718:	ldr	x1, [x0, #2656]
   2e71c:	add	x0, x0, #0xa60
   2e720:	blr	x1
   2e724:	mrs	x26, tpidr_el0
   2e728:	ldr	w8, [x26, x0]
   2e72c:	mov	x23, x0
   2e730:	str	w8, [sp, #12]
   2e734:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e738:	ldr	x1, [x0, #2592]
   2e73c:	add	x0, x0, #0xa20
   2e740:	blr	x1
   2e744:	ldr	x27, [x26, x0]
   2e748:	mov	x24, x0
   2e74c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e750:	ldr	x1, [x0, #2624]
   2e754:	add	x0, x0, #0xa40
   2e758:	blr	x1
   2e75c:	ldr	x28, [x26, x0]
   2e760:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2e764:	str	x8, [x26, x24]
   2e768:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2e76c:	mov	x25, x0
   2e770:	str	x8, [x26, x0]
   2e774:	add	x0, sp, #0x10
   2e778:	mov	x1, x22
   2e77c:	bl	2fa0c <mpfr_cmp_f@@Base+0x130>
   2e780:	add	x2, sp, #0x10
   2e784:	mov	x0, x20
   2e788:	mov	x1, x21
   2e78c:	mov	w3, w19
   2e790:	bl	c240 <mpfr_add@plt>
   2e794:	ldr	w8, [x26, x23]
   2e798:	ldr	w9, [sp, #12]
   2e79c:	mov	w21, w0
   2e7a0:	add	x0, sp, #0x10
   2e7a4:	orr	w22, w8, w9
   2e7a8:	bl	c110 <mpfr_clear@plt>
   2e7ac:	str	w22, [x26, x23]
   2e7b0:	str	x27, [x26, x24]
   2e7b4:	str	x28, [x26, x25]
   2e7b8:	ldr	x8, [x20, #16]
   2e7bc:	cmp	x8, x28
   2e7c0:	b.gt	2e80c <mpfr_add_z@@Base+0x16c>
   2e7c4:	cmp	x8, x27
   2e7c8:	b.lt	2e80c <mpfr_add_z@@Base+0x16c>  // b.tstop
   2e7cc:	cbz	w21, 2e7e8 <mpfr_add_z@@Base+0x148>
   2e7d0:	orr	w8, w22, #0x8
   2e7d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e7d8:	ldr	x1, [x0, #2656]
   2e7dc:	add	x0, x0, #0xa60
   2e7e0:	blr	x1
   2e7e4:	str	w8, [x26, x0]
   2e7e8:	mov	w0, w21
   2e7ec:	ldp	x20, x19, [sp, #128]
   2e7f0:	ldp	x22, x21, [sp, #112]
   2e7f4:	ldp	x24, x23, [sp, #96]
   2e7f8:	ldp	x26, x25, [sp, #80]
   2e7fc:	ldp	x28, x27, [sp, #64]
   2e800:	ldp	x29, x30, [sp, #48]
   2e804:	add	sp, sp, #0x90
   2e808:	ret
   2e80c:	mov	x0, x20
   2e810:	mov	w1, w21
   2e814:	mov	w2, w19
   2e818:	bl	cb80 <mpfr_check_range@plt>
   2e81c:	mov	w21, w0
   2e820:	b	2e7e8 <mpfr_add_z@@Base+0x148>

000000000002e824 <mpfr_sub_z@@Base>:
   2e824:	sub	sp, sp, #0x90
   2e828:	stp	x20, x19, [sp, #128]
   2e82c:	mov	x20, x0
   2e830:	mov	x0, x2
   2e834:	stp	x29, x30, [sp, #48]
   2e838:	stp	x28, x27, [sp, #64]
   2e83c:	stp	x26, x25, [sp, #80]
   2e840:	stp	x24, x23, [sp, #96]
   2e844:	stp	x22, x21, [sp, #112]
   2e848:	add	x29, sp, #0x30
   2e84c:	mov	w19, w3
   2e850:	mov	x22, x2
   2e854:	mov	x21, x1
   2e858:	bl	bf40 <__gmpz_fits_slong_p@plt>
   2e85c:	cbz	w0, 2e898 <mpfr_sub_z@@Base+0x74>
   2e860:	mov	x0, x22
   2e864:	bl	bae0 <__gmpz_get_si@plt>
   2e868:	mov	x2, x0
   2e86c:	mov	x0, x20
   2e870:	mov	x1, x21
   2e874:	mov	w3, w19
   2e878:	ldp	x20, x19, [sp, #128]
   2e87c:	ldp	x22, x21, [sp, #112]
   2e880:	ldp	x24, x23, [sp, #96]
   2e884:	ldp	x26, x25, [sp, #80]
   2e888:	ldp	x28, x27, [sp, #64]
   2e88c:	ldp	x29, x30, [sp, #48]
   2e890:	add	sp, sp, #0x90
   2e894:	b	c100 <mpfr_sub_si@plt>
   2e898:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e89c:	ldr	x1, [x0, #2656]
   2e8a0:	add	x0, x0, #0xa60
   2e8a4:	blr	x1
   2e8a8:	mrs	x26, tpidr_el0
   2e8ac:	ldr	w8, [x26, x0]
   2e8b0:	mov	x23, x0
   2e8b4:	str	w8, [sp, #12]
   2e8b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e8bc:	ldr	x1, [x0, #2592]
   2e8c0:	add	x0, x0, #0xa20
   2e8c4:	blr	x1
   2e8c8:	ldr	x27, [x26, x0]
   2e8cc:	mov	x24, x0
   2e8d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e8d4:	ldr	x1, [x0, #2624]
   2e8d8:	add	x0, x0, #0xa40
   2e8dc:	blr	x1
   2e8e0:	ldr	x28, [x26, x0]
   2e8e4:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2e8e8:	str	x8, [x26, x24]
   2e8ec:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2e8f0:	mov	x25, x0
   2e8f4:	str	x8, [x26, x0]
   2e8f8:	add	x0, sp, #0x10
   2e8fc:	mov	x1, x22
   2e900:	bl	2fa0c <mpfr_cmp_f@@Base+0x130>
   2e904:	add	x2, sp, #0x10
   2e908:	mov	x0, x20
   2e90c:	mov	x1, x21
   2e910:	mov	w3, w19
   2e914:	bl	bc20 <mpfr_sub@plt>
   2e918:	ldr	w8, [x26, x23]
   2e91c:	ldr	w9, [sp, #12]
   2e920:	mov	w21, w0
   2e924:	add	x0, sp, #0x10
   2e928:	orr	w22, w8, w9
   2e92c:	bl	c110 <mpfr_clear@plt>
   2e930:	str	w22, [x26, x23]
   2e934:	str	x27, [x26, x24]
   2e938:	str	x28, [x26, x25]
   2e93c:	ldr	x8, [x20, #16]
   2e940:	cmp	x8, x28
   2e944:	b.gt	2e990 <mpfr_sub_z@@Base+0x16c>
   2e948:	cmp	x8, x27
   2e94c:	b.lt	2e990 <mpfr_sub_z@@Base+0x16c>  // b.tstop
   2e950:	cbz	w21, 2e96c <mpfr_sub_z@@Base+0x148>
   2e954:	orr	w8, w22, #0x8
   2e958:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2e95c:	ldr	x1, [x0, #2656]
   2e960:	add	x0, x0, #0xa60
   2e964:	blr	x1
   2e968:	str	w8, [x26, x0]
   2e96c:	mov	w0, w21
   2e970:	ldp	x20, x19, [sp, #128]
   2e974:	ldp	x22, x21, [sp, #112]
   2e978:	ldp	x24, x23, [sp, #96]
   2e97c:	ldp	x26, x25, [sp, #80]
   2e980:	ldp	x28, x27, [sp, #64]
   2e984:	ldp	x29, x30, [sp, #48]
   2e988:	add	sp, sp, #0x90
   2e98c:	ret
   2e990:	mov	x0, x20
   2e994:	mov	w1, w21
   2e998:	mov	w2, w19
   2e99c:	bl	cb80 <mpfr_check_range@plt>
   2e9a0:	mov	w21, w0
   2e9a4:	b	2e96c <mpfr_sub_z@@Base+0x148>

000000000002e9a8 <mpfr_z_sub@@Base>:
   2e9a8:	sub	sp, sp, #0x90
   2e9ac:	stp	x20, x19, [sp, #128]
   2e9b0:	mov	x20, x0
   2e9b4:	mov	x0, x1
   2e9b8:	stp	x29, x30, [sp, #48]
   2e9bc:	stp	x28, x27, [sp, #64]
   2e9c0:	stp	x26, x25, [sp, #80]
   2e9c4:	stp	x24, x23, [sp, #96]
   2e9c8:	stp	x22, x21, [sp, #112]
   2e9cc:	add	x29, sp, #0x30
   2e9d0:	mov	w19, w3
   2e9d4:	mov	x21, x2
   2e9d8:	mov	x22, x1
   2e9dc:	bl	bf40 <__gmpz_fits_slong_p@plt>
   2e9e0:	cbz	w0, 2ea1c <mpfr_z_sub@@Base+0x74>
   2e9e4:	mov	x0, x22
   2e9e8:	bl	bae0 <__gmpz_get_si@plt>
   2e9ec:	mov	x1, x0
   2e9f0:	mov	x0, x20
   2e9f4:	mov	x2, x21
   2e9f8:	mov	w3, w19
   2e9fc:	ldp	x20, x19, [sp, #128]
   2ea00:	ldp	x22, x21, [sp, #112]
   2ea04:	ldp	x24, x23, [sp, #96]
   2ea08:	ldp	x26, x25, [sp, #80]
   2ea0c:	ldp	x28, x27, [sp, #64]
   2ea10:	ldp	x29, x30, [sp, #48]
   2ea14:	add	sp, sp, #0x90
   2ea18:	b	c620 <mpfr_si_sub@plt>
   2ea1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ea20:	ldr	x1, [x0, #2656]
   2ea24:	add	x0, x0, #0xa60
   2ea28:	blr	x1
   2ea2c:	mrs	x26, tpidr_el0
   2ea30:	ldr	w8, [x26, x0]
   2ea34:	mov	x23, x0
   2ea38:	str	w8, [sp, #12]
   2ea3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ea40:	ldr	x1, [x0, #2592]
   2ea44:	add	x0, x0, #0xa20
   2ea48:	blr	x1
   2ea4c:	ldr	x27, [x26, x0]
   2ea50:	mov	x24, x0
   2ea54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ea58:	ldr	x1, [x0, #2624]
   2ea5c:	add	x0, x0, #0xa40
   2ea60:	blr	x1
   2ea64:	ldr	x28, [x26, x0]
   2ea68:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2ea6c:	str	x8, [x26, x24]
   2ea70:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2ea74:	mov	x25, x0
   2ea78:	str	x8, [x26, x0]
   2ea7c:	add	x0, sp, #0x10
   2ea80:	mov	x1, x22
   2ea84:	bl	2fa0c <mpfr_cmp_f@@Base+0x130>
   2ea88:	add	x1, sp, #0x10
   2ea8c:	mov	x0, x20
   2ea90:	mov	x2, x21
   2ea94:	mov	w3, w19
   2ea98:	bl	bc20 <mpfr_sub@plt>
   2ea9c:	ldr	w8, [x26, x23]
   2eaa0:	ldr	w9, [sp, #12]
   2eaa4:	mov	w21, w0
   2eaa8:	add	x0, sp, #0x10
   2eaac:	orr	w22, w8, w9
   2eab0:	bl	c110 <mpfr_clear@plt>
   2eab4:	str	w22, [x26, x23]
   2eab8:	str	x27, [x26, x24]
   2eabc:	str	x28, [x26, x25]
   2eac0:	ldr	x8, [x20, #16]
   2eac4:	cmp	x8, x28
   2eac8:	b.gt	2eb14 <mpfr_z_sub@@Base+0x16c>
   2eacc:	cmp	x8, x27
   2ead0:	b.lt	2eb14 <mpfr_z_sub@@Base+0x16c>  // b.tstop
   2ead4:	cbz	w21, 2eaf0 <mpfr_z_sub@@Base+0x148>
   2ead8:	orr	w8, w22, #0x8
   2eadc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2eae0:	ldr	x1, [x0, #2656]
   2eae4:	add	x0, x0, #0xa60
   2eae8:	blr	x1
   2eaec:	str	w8, [x26, x0]
   2eaf0:	mov	w0, w21
   2eaf4:	ldp	x20, x19, [sp, #128]
   2eaf8:	ldp	x22, x21, [sp, #112]
   2eafc:	ldp	x24, x23, [sp, #96]
   2eb00:	ldp	x26, x25, [sp, #80]
   2eb04:	ldp	x28, x27, [sp, #64]
   2eb08:	ldp	x29, x30, [sp, #48]
   2eb0c:	add	sp, sp, #0x90
   2eb10:	ret
   2eb14:	mov	x0, x20
   2eb18:	mov	w1, w21
   2eb1c:	mov	w2, w19
   2eb20:	bl	cb80 <mpfr_check_range@plt>
   2eb24:	mov	w21, w0
   2eb28:	b	2eaf0 <mpfr_z_sub@@Base+0x148>

000000000002eb2c <mpfr_cmp_z@@Base>:
   2eb2c:	sub	sp, sp, #0x50
   2eb30:	stp	x29, x30, [sp, #32]
   2eb34:	stp	x22, x21, [sp, #48]
   2eb38:	stp	x20, x19, [sp, #64]
   2eb3c:	ldr	x8, [x0, #16]
   2eb40:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2eb44:	mov	x19, x0
   2eb48:	mov	x20, x1
   2eb4c:	cmp	x8, x9
   2eb50:	add	x29, sp, #0x20
   2eb54:	b.le	2ec48 <mpfr_cmp_z@@Base+0x11c>
   2eb58:	mov	x0, x20
   2eb5c:	bl	bf40 <__gmpz_fits_slong_p@plt>
   2eb60:	cbz	w0, 2eb84 <mpfr_cmp_z@@Base+0x58>
   2eb64:	mov	x0, x20
   2eb68:	bl	bae0 <__gmpz_get_si@plt>
   2eb6c:	mov	x1, x0
   2eb70:	mov	x0, x19
   2eb74:	mov	x2, xzr
   2eb78:	bl	c430 <mpfr_cmp_si_2exp@plt>
   2eb7c:	mov	w19, w0
   2eb80:	b	2ec30 <mpfr_cmp_z@@Base+0x104>
   2eb84:	ldr	w8, [x20, #4]
   2eb88:	cmp	w8, #0x0
   2eb8c:	cneg	w8, w8, mi  // mi = first
   2eb90:	cmp	w8, #0x2
   2eb94:	b.cs	2eba0 <mpfr_cmp_z@@Base+0x74>  // b.hs, b.nlast
   2eb98:	mov	w1, #0x40                  	// #64
   2eb9c:	b	2ebb8 <mpfr_cmp_z@@Base+0x8c>
   2eba0:	ldr	x9, [x20, #8]
   2eba4:	add	x9, x9, x8, lsl #3
   2eba8:	ldur	x9, [x9, #-8]
   2ebac:	lsl	x8, x8, #6
   2ebb0:	clz	x9, x9
   2ebb4:	sub	x1, x8, x9
   2ebb8:	mov	x0, sp
   2ebbc:	bl	cad0 <mpfr_init2@plt>
   2ebc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ebc4:	ldr	x1, [x0, #2656]
   2ebc8:	add	x0, x0, #0xa60
   2ebcc:	blr	x1
   2ebd0:	mrs	x21, tpidr_el0
   2ebd4:	ldr	w22, [x21, x0]
   2ebd8:	mov	x0, sp
   2ebdc:	mov	x1, x20
   2ebe0:	mov	w2, wzr
   2ebe4:	bl	c2b0 <mpfr_set_z@plt>
   2ebe8:	cbz	w0, 2ec14 <mpfr_cmp_z@@Base+0xe8>
   2ebec:	mov	x0, sp
   2ebf0:	mov	x1, sp
   2ebf4:	mov	w2, #0x2                   	// #2
   2ebf8:	mov	w3, #0x1                   	// #1
   2ebfc:	bl	c950 <mpfr_div_2ui@plt>
   2ec00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ec04:	ldr	x1, [x0, #2656]
   2ec08:	add	x0, x0, #0xa60
   2ec0c:	blr	x1
   2ec10:	str	w22, [x21, x0]
   2ec14:	mov	x1, sp
   2ec18:	mov	w2, #0x1                   	// #1
   2ec1c:	mov	x0, x19
   2ec20:	bl	c9f0 <mpfr_cmp3@plt>
   2ec24:	mov	w19, w0
   2ec28:	mov	x0, sp
   2ec2c:	bl	c110 <mpfr_clear@plt>
   2ec30:	mov	w0, w19
   2ec34:	ldp	x20, x19, [sp, #64]
   2ec38:	ldp	x22, x21, [sp, #48]
   2ec3c:	ldp	x29, x30, [sp, #32]
   2ec40:	add	sp, sp, #0x50
   2ec44:	ret
   2ec48:	ldr	w8, [x20, #4]
   2ec4c:	cmp	w8, #0x0
   2ec50:	cset	w8, ne  // ne = any
   2ec54:	csinv	x1, x8, xzr, ge  // ge = tcont
   2ec58:	b	2eb70 <mpfr_cmp_z@@Base+0x44>

000000000002ec5c <mpfr_mul_q@@Base>:
   2ec5c:	mov	w4, w3
   2ec60:	add	x3, x2, #0x10
   2ec64:	b	2ec68 <mpfr_mul_q@@Base+0xc>
   2ec68:	sub	sp, sp, #0xa0
   2ec6c:	stp	x29, x30, [sp, #64]
   2ec70:	stp	x28, x27, [sp, #80]
   2ec74:	stp	x26, x25, [sp, #96]
   2ec78:	stp	x24, x23, [sp, #112]
   2ec7c:	stp	x22, x21, [sp, #128]
   2ec80:	stp	x20, x19, [sp, #144]
   2ec84:	ldr	w9, [x2, #4]
   2ec88:	ldr	w8, [x3, #4]
   2ec8c:	mov	x21, x3
   2ec90:	mov	x23, x1
   2ec94:	mov	x19, x0
   2ec98:	add	x29, sp, #0x40
   2ec9c:	cbz	w9, 2edf8 <mpfr_mul_q@@Base+0x19c>
   2eca0:	mov	x22, x2
   2eca4:	cbz	w8, 2ee18 <mpfr_mul_q@@Base+0x1bc>
   2eca8:	mov	w20, w4
   2ecac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ecb0:	ldr	x1, [x0, #2656]
   2ecb4:	add	x0, x0, #0xa60
   2ecb8:	blr	x1
   2ecbc:	mrs	x24, tpidr_el0
   2ecc0:	ldr	w25, [x24, x0]
   2ecc4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ecc8:	ldr	x1, [x0, #2592]
   2eccc:	add	x0, x0, #0xa20
   2ecd0:	blr	x1
   2ecd4:	ldr	x26, [x24, x0]
   2ecd8:	mov	x8, x0
   2ecdc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ece0:	ldr	x1, [x0, #2624]
   2ece4:	add	x0, x0, #0xa40
   2ece8:	blr	x1
   2ecec:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   2ecf0:	str	x10, [x24, x8]
   2ecf4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2ecf8:	ldr	x27, [x24, x0]
   2ecfc:	str	x8, [x24, x0]
   2ed00:	ldr	x8, [x22, #8]
   2ed04:	cmp	w9, #0x0
   2ed08:	cneg	w9, w9, mi  // mi = first
   2ed0c:	ldr	x10, [x23]
   2ed10:	add	x8, x8, w9, uxtw #3
   2ed14:	ldur	x8, [x8, #-8]
   2ed18:	lsl	x9, x9, #6
   2ed1c:	add	x0, sp, #0x20
   2ed20:	clz	x8, x8
   2ed24:	sub	x8, x9, x8
   2ed28:	add	x1, x8, x10
   2ed2c:	bl	cad0 <mpfr_init2@plt>
   2ed30:	add	x0, sp, #0x20
   2ed34:	mov	x1, x23
   2ed38:	mov	x2, x22
   2ed3c:	mov	w3, wzr
   2ed40:	bl	c520 <mpfr_mul_z@plt>
   2ed44:	cbnz	w0, 2ee4c <mpfr_mul_q@@Base+0x1f0>
   2ed48:	add	x1, sp, #0x20
   2ed4c:	mov	x0, x19
   2ed50:	mov	x2, x21
   2ed54:	mov	w3, w20
   2ed58:	bl	cce0 <mpfr_div_z@plt>
   2ed5c:	mov	w21, w0
   2ed60:	add	x0, sp, #0x20
   2ed64:	bl	c110 <mpfr_clear@plt>
   2ed68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ed6c:	ldr	x1, [x0, #2656]
   2ed70:	add	x0, x0, #0xa60
   2ed74:	blr	x1
   2ed78:	str	w25, [x24, x0]
   2ed7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ed80:	ldr	x1, [x0, #2592]
   2ed84:	add	x0, x0, #0xa20
   2ed88:	blr	x1
   2ed8c:	str	x26, [x24, x0]
   2ed90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ed94:	ldr	x1, [x0, #2624]
   2ed98:	add	x0, x0, #0xa40
   2ed9c:	blr	x1
   2eda0:	str	x27, [x24, x0]
   2eda4:	ldr	x8, [x19, #16]
   2eda8:	cmp	x8, x27
   2edac:	b.gt	2ef0c <mpfr_mul_q@@Base+0x2b0>
   2edb0:	cmp	x8, x26
   2edb4:	b.lt	2ef0c <mpfr_mul_q@@Base+0x2b0>  // b.tstop
   2edb8:	cbz	w21, 2edd4 <mpfr_mul_q@@Base+0x178>
   2edbc:	orr	w8, w25, #0x8
   2edc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2edc4:	ldr	x1, [x0, #2656]
   2edc8:	add	x0, x0, #0xa60
   2edcc:	blr	x1
   2edd0:	str	w8, [x24, x0]
   2edd4:	mov	w0, w21
   2edd8:	ldp	x20, x19, [sp, #144]
   2eddc:	ldp	x22, x21, [sp, #128]
   2ede0:	ldp	x24, x23, [sp, #112]
   2ede4:	ldp	x26, x25, [sp, #96]
   2ede8:	ldp	x28, x27, [sp, #80]
   2edec:	ldp	x29, x30, [sp, #64]
   2edf0:	add	sp, sp, #0xa0
   2edf4:	ret
   2edf8:	cbz	w8, 2ef24 <mpfr_mul_q@@Base+0x2c8>
   2edfc:	mov	x0, x19
   2ee00:	mov	x1, x23
   2ee04:	mov	x2, xzr
   2ee08:	mov	w3, wzr
   2ee0c:	bl	bb10 <mpfr_mul_ui@plt>
   2ee10:	ldr	w8, [x21, #4]
   2ee14:	b	2ee30 <mpfr_mul_q@@Base+0x1d4>
   2ee18:	mov	x0, x19
   2ee1c:	mov	x1, x23
   2ee20:	mov	x2, xzr
   2ee24:	mov	w3, wzr
   2ee28:	bl	ccc0 <mpfr_div_ui@plt>
   2ee2c:	ldr	w8, [x22, #4]
   2ee30:	mov	w21, wzr
   2ee34:	tbz	w8, #31, 2edd4 <mpfr_mul_q@@Base+0x178>
   2ee38:	ldr	w8, [x19, #8]
   2ee3c:	mov	w21, wzr
   2ee40:	neg	w8, w8
   2ee44:	str	w8, [x19, #8]
   2ee48:	b	2edd4 <mpfr_mul_q@@Base+0x178>
   2ee4c:	ldr	x8, [x23]
   2ee50:	str	x8, [sp]
   2ee54:	ldr	w8, [x23, #8]
   2ee58:	str	xzr, [sp, #16]
   2ee5c:	str	w8, [sp, #8]
   2ee60:	ldp	x28, x8, [x23, #16]
   2ee64:	str	x8, [sp, #24]
   2ee68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ee6c:	ldr	x1, [x0, #2656]
   2ee70:	add	x0, x0, #0xa60
   2ee74:	blr	x1
   2ee78:	mov	x23, x0
   2ee7c:	str	wzr, [x24, x0]
   2ee80:	add	x0, sp, #0x20
   2ee84:	mov	x1, sp
   2ee88:	mov	x2, x22
   2ee8c:	mov	w3, wzr
   2ee90:	bl	c520 <mpfr_mul_z@plt>
   2ee94:	add	x1, sp, #0x20
   2ee98:	mov	x0, x19
   2ee9c:	mov	x2, x21
   2eea0:	mov	w3, w20
   2eea4:	bl	cce0 <mpfr_div_z@plt>
   2eea8:	ldrb	w8, [x24, x23]
   2eeac:	mov	w9, #0x27                  	// #39
   2eeb0:	mov	w21, w0
   2eeb4:	tst	w8, w9
   2eeb8:	b.ne	2ef38 <mpfr_mul_q@@Base+0x2dc>  // b.any
   2eebc:	ldr	x8, [x19, #16]
   2eec0:	add	x8, x8, x28
   2eec4:	str	x8, [x19, #16]
   2eec8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2eecc:	ldr	x1, [x0, #2592]
   2eed0:	add	x0, x0, #0xa20
   2eed4:	blr	x1
   2eed8:	ldr	x9, [x24, x0]
   2eedc:	cmp	x8, x9
   2eee0:	b.lt	2ef54 <mpfr_mul_q@@Base+0x2f8>  // b.tstop
   2eee4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2eee8:	cmp	x8, x9
   2eeec:	b.gt	2ed60 <mpfr_mul_q@@Base+0x104>
   2eef0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2eef4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2eef8:	add	x0, x0, #0x5ee
   2eefc:	add	x2, x2, #0x69c
   2ef00:	mov	w1, #0xec                  	// #236
   2ef04:	bl	cb90 <mpfr_assert_fail@plt>
   2ef08:	b	2ed60 <mpfr_mul_q@@Base+0x104>
   2ef0c:	mov	x0, x19
   2ef10:	mov	w1, w21
   2ef14:	mov	w2, w20
   2ef18:	bl	cb80 <mpfr_check_range@plt>
   2ef1c:	mov	w21, w0
   2ef20:	b	2edd4 <mpfr_mul_q@@Base+0x178>
   2ef24:	mov	x8, #0x2                   	// #2
   2ef28:	movk	x8, #0x8000, lsl #48
   2ef2c:	mov	w21, wzr
   2ef30:	str	x8, [x19, #16]
   2ef34:	b	2edd4 <mpfr_mul_q@@Base+0x178>
   2ef38:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ef3c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ef40:	add	x0, x0, #0x5ee
   2ef44:	add	x2, x2, #0x657
   2ef48:	mov	w1, #0xe8                  	// #232
   2ef4c:	bl	cb90 <mpfr_assert_fail@plt>
   2ef50:	b	2eebc <mpfr_mul_q@@Base+0x260>
   2ef54:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ef58:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2ef5c:	add	x0, x0, #0x5ee
   2ef60:	add	x2, x2, #0x67b
   2ef64:	mov	w1, #0xeb                  	// #235
   2ef68:	bl	cb90 <mpfr_assert_fail@plt>
   2ef6c:	ldr	x8, [x19, #16]
   2ef70:	b	2eee4 <mpfr_mul_q@@Base+0x288>

000000000002ef74 <mpfr_div_q@@Base>:
   2ef74:	mov	w4, w3
   2ef78:	mov	x3, x2
   2ef7c:	add	x2, x2, #0x10
   2ef80:	b	2ec68 <mpfr_mul_q@@Base+0xc>

000000000002ef84 <mpfr_add_q@@Base>:
   2ef84:	sub	sp, sp, #0xb0
   2ef88:	stp	x29, x30, [sp, #80]
   2ef8c:	stp	x28, x27, [sp, #96]
   2ef90:	stp	x26, x25, [sp, #112]
   2ef94:	stp	x24, x23, [sp, #128]
   2ef98:	stp	x22, x21, [sp, #144]
   2ef9c:	stp	x20, x19, [sp, #160]
   2efa0:	ldr	x8, [x1, #16]
   2efa4:	mov	x10, #0x2                   	// #2
   2efa8:	movk	x10, #0x8000, lsl #48
   2efac:	add	x9, x10, #0x2
   2efb0:	mov	w20, w3
   2efb4:	mov	x27, x2
   2efb8:	mov	x21, x1
   2efbc:	cmp	x8, x9
   2efc0:	mov	x19, x0
   2efc4:	add	x29, sp, #0x50
   2efc8:	b.lt	2f264 <mpfr_add_q@@Base+0x2e0>  // b.tstop
   2efcc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2efd0:	ldr	x1, [x0, #2656]
   2efd4:	add	x0, x0, #0xa60
   2efd8:	blr	x1
   2efdc:	mrs	x28, tpidr_el0
   2efe0:	ldr	w24, [x28, x0]
   2efe4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2efe8:	ldr	x1, [x0, #2592]
   2efec:	add	x0, x0, #0xa20
   2eff0:	blr	x1
   2eff4:	ldr	x25, [x28, x0]
   2eff8:	mov	x8, x0
   2effc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f000:	ldr	x1, [x0, #2624]
   2f004:	add	x0, x0, #0xa40
   2f008:	blr	x1
   2f00c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2f010:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2f014:	ldr	x26, [x28, x0]
   2f018:	str	x9, [x28, x8]
   2f01c:	str	x10, [x28, x0]
   2f020:	ldr	x8, [x19]
   2f024:	sub	x0, x29, #0x20
   2f028:	add	x23, x8, #0xa
   2f02c:	mov	x1, x23
   2f030:	bl	cad0 <mpfr_init2@plt>
   2f034:	add	x0, sp, #0x10
   2f038:	mov	x1, x23
   2f03c:	bl	cad0 <mpfr_init2@plt>
   2f040:	add	x0, sp, #0x10
   2f044:	mov	x1, x27
   2f048:	mov	w2, wzr
   2f04c:	bl	c8a0 <mpfr_set_q@plt>
   2f050:	cbz	w0, 2f24c <mpfr_add_q@@Base+0x2c8>
   2f054:	cmp	w20, #0x0
   2f058:	mov	w8, #0x40                  	// #64
   2f05c:	cset	w22, eq  // eq = none
   2f060:	stp	x27, x8, [sp]
   2f064:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f068:	ldr	x1, [x0, #2656]
   2f06c:	add	x0, x0, #0xa60
   2f070:	blr	x1
   2f074:	mov	x27, x0
   2f078:	str	wzr, [x28, x0]
   2f07c:	sub	x0, x29, #0x20
   2f080:	add	x2, sp, #0x10
   2f084:	mov	x1, x21
   2f088:	mov	w3, wzr
   2f08c:	bl	c240 <mpfr_add@plt>
   2f090:	ldrb	w8, [x28, x27]
   2f094:	tst	w8, #0x3
   2f098:	b.ne	2f15c <mpfr_add_q@@Base+0x1d8>  // b.any
   2f09c:	ldur	x8, [x29, #-16]
   2f0a0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2f0a4:	mov	x27, #0x2                   	// #2
   2f0a8:	movk	x27, #0x8000, lsl #48
   2f0ac:	cmp	x8, x9
   2f0b0:	b.eq	2f104 <mpfr_add_q@@Base+0x180>  // b.none
   2f0b4:	add	x9, x27, #0x2
   2f0b8:	cmp	x8, x9
   2f0bc:	b.lt	2f104 <mpfr_add_q@@Base+0x180>  // b.tstop
   2f0c0:	ldr	x9, [sp, #32]
   2f0c4:	ldur	x10, [x29, #-32]
   2f0c8:	ldr	x11, [x19]
   2f0cc:	ldur	x0, [x29, #-8]
   2f0d0:	sub	x8, x9, x8
   2f0d4:	sub	x9, x10, #0x1
   2f0d8:	add	x10, x10, #0x3e
   2f0dc:	bic	x8, x8, x8, asr #63
   2f0e0:	cmp	x9, #0x0
   2f0e4:	mvn	x8, x8
   2f0e8:	csel	x9, x10, x9, lt  // lt = tstop
   2f0ec:	add	x2, x23, x8
   2f0f0:	asr	x8, x9, #6
   2f0f4:	add	x1, x8, #0x1
   2f0f8:	add	x3, x11, x22
   2f0fc:	bl	c3d0 <mpfr_round_p@plt>
   2f100:	cbnz	w0, 2f194 <mpfr_add_q@@Base+0x210>
   2f104:	sub	x8, x27, x23
   2f108:	ldr	x27, [sp, #8]
   2f10c:	sub	x8, x8, #0x103
   2f110:	cmp	x27, x8
   2f114:	b.gt	2f178 <mpfr_add_q@@Base+0x1f4>
   2f118:	add	x23, x27, x23
   2f11c:	cmp	x23, #0x0
   2f120:	cinc	x8, x23, lt  // lt = tstop
   2f124:	asr	x8, x8, #1
   2f128:	sub	x0, x29, #0x20
   2f12c:	mov	x1, x23
   2f130:	str	x8, [sp, #8]
   2f134:	bl	bf80 <mpfr_set_prec@plt>
   2f138:	add	x0, sp, #0x10
   2f13c:	mov	x1, x23
   2f140:	bl	bf80 <mpfr_set_prec@plt>
   2f144:	ldr	x1, [sp]
   2f148:	add	x0, sp, #0x10
   2f14c:	mov	w2, wzr
   2f150:	bl	c8a0 <mpfr_set_q@plt>
   2f154:	cbnz	w0, 2f064 <mpfr_add_q@@Base+0xe0>
   2f158:	b	2f24c <mpfr_add_q@@Base+0x2c8>
   2f15c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2f160:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2f164:	mov	w1, #0x144                 	// #324
   2f168:	add	x0, x0, #0x5ee
   2f16c:	add	x2, x2, #0x5f7
   2f170:	bl	cb90 <mpfr_assert_fail@plt>
   2f174:	b	2f09c <mpfr_add_q@@Base+0x118>
   2f178:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2f17c:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   2f180:	mov	w1, #0x153                 	// #339
   2f184:	add	x0, x0, #0x5ee
   2f188:	add	x2, x2, #0xff6
   2f18c:	bl	cb90 <mpfr_assert_fail@plt>
   2f190:	b	2f118 <mpfr_add_q@@Base+0x194>
   2f194:	ldur	w3, [x29, #-24]
   2f198:	sub	x1, x29, #0x20
   2f19c:	mov	x0, x19
   2f1a0:	mov	w2, w20
   2f1a4:	bl	c6f0 <mpfr_set4@plt>
   2f1a8:	mov	w21, w0
   2f1ac:	sub	x0, x29, #0x20
   2f1b0:	bl	c110 <mpfr_clear@plt>
   2f1b4:	add	x0, sp, #0x10
   2f1b8:	bl	c110 <mpfr_clear@plt>
   2f1bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f1c0:	ldr	x1, [x0, #2656]
   2f1c4:	add	x0, x0, #0xa60
   2f1c8:	blr	x1
   2f1cc:	str	w24, [x28, x0]
   2f1d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f1d4:	ldr	x1, [x0, #2592]
   2f1d8:	add	x0, x0, #0xa20
   2f1dc:	blr	x1
   2f1e0:	str	x25, [x28, x0]
   2f1e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f1e8:	ldr	x1, [x0, #2624]
   2f1ec:	add	x0, x0, #0xa40
   2f1f0:	blr	x1
   2f1f4:	str	x26, [x28, x0]
   2f1f8:	ldr	x8, [x19, #16]
   2f1fc:	cmp	x8, x26
   2f200:	b.gt	2f2ac <mpfr_add_q@@Base+0x328>
   2f204:	cmp	x8, x25
   2f208:	b.lt	2f2ac <mpfr_add_q@@Base+0x328>  // b.tstop
   2f20c:	cbz	w21, 2f228 <mpfr_add_q@@Base+0x2a4>
   2f210:	orr	w8, w24, #0x8
   2f214:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f218:	ldr	x1, [x0, #2656]
   2f21c:	add	x0, x0, #0xa60
   2f220:	blr	x1
   2f224:	str	w8, [x28, x0]
   2f228:	mov	w0, w21
   2f22c:	ldp	x20, x19, [sp, #160]
   2f230:	ldp	x22, x21, [sp, #144]
   2f234:	ldp	x24, x23, [sp, #128]
   2f238:	ldp	x26, x25, [sp, #112]
   2f23c:	ldp	x28, x27, [sp, #96]
   2f240:	ldp	x29, x30, [sp, #80]
   2f244:	add	sp, sp, #0xb0
   2f248:	ret
   2f24c:	add	x2, sp, #0x10
   2f250:	mov	x0, x19
   2f254:	mov	x1, x21
   2f258:	mov	w3, w20
   2f25c:	bl	c240 <mpfr_add@plt>
   2f260:	b	2f1a8 <mpfr_add_q@@Base+0x224>
   2f264:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2f268:	cmp	x8, x9
   2f26c:	b.eq	2f2c0 <mpfr_add_q@@Base+0x33c>  // b.none
   2f270:	mov	x9, #0x2                   	// #2
   2f274:	movk	x9, #0x8000, lsl #48
   2f278:	cmp	x8, x9
   2f27c:	b.ne	2f2d0 <mpfr_add_q@@Base+0x34c>  // b.any
   2f280:	str	x10, [x19, #16]
   2f284:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f288:	ldr	x1, [x0, #2656]
   2f28c:	add	x0, x0, #0xa60
   2f290:	blr	x1
   2f294:	mrs	x8, tpidr_el0
   2f298:	ldr	w9, [x8, x0]
   2f29c:	mov	w21, wzr
   2f2a0:	orr	w9, w9, #0x4
   2f2a4:	str	w9, [x8, x0]
   2f2a8:	b	2f228 <mpfr_add_q@@Base+0x2a4>
   2f2ac:	mov	x0, x19
   2f2b0:	mov	w1, w21
   2f2b4:	mov	w2, w20
   2f2b8:	bl	cb80 <mpfr_check_range@plt>
   2f2bc:	b	2f2e8 <mpfr_add_q@@Base+0x364>
   2f2c0:	ldr	w8, [x27, #20]
   2f2c4:	cbz	w8, 2f2f0 <mpfr_add_q@@Base+0x36c>
   2f2c8:	ldr	w8, [x21, #8]
   2f2cc:	b	2f318 <mpfr_add_q@@Base+0x394>
   2f2d0:	ldr	w8, [x27, #4]
   2f2d4:	cbz	w8, 2f32c <mpfr_add_q@@Base+0x3a8>
   2f2d8:	mov	x0, x19
   2f2dc:	mov	x1, x27
   2f2e0:	mov	w2, w20
   2f2e4:	bl	c8a0 <mpfr_set_q@plt>
   2f2e8:	mov	w21, w0
   2f2ec:	b	2f228 <mpfr_add_q@@Base+0x2a4>
   2f2f0:	ldr	w9, [x27, #4]
   2f2f4:	ldr	w8, [x21, #8]
   2f2f8:	mov	x10, #0x2                   	// #2
   2f2fc:	movk	x10, #0x8000, lsl #48
   2f300:	cmp	w9, #0x0
   2f304:	cset	w9, ne  // ne = any
   2f308:	csinv	w9, w9, wzr, ge  // ge = tcont
   2f30c:	mul	w9, w9, w8
   2f310:	cmp	w9, #0x0
   2f314:	b.le	2f280 <mpfr_add_q@@Base+0x2fc>
   2f318:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2f31c:	mov	w21, wzr
   2f320:	str	x9, [x19, #16]
   2f324:	str	w8, [x19, #8]
   2f328:	b	2f228 <mpfr_add_q@@Base+0x2a4>
   2f32c:	ldr	w3, [x21, #8]
   2f330:	mov	x0, x19
   2f334:	mov	x1, x21
   2f338:	mov	w2, w20
   2f33c:	bl	c6f0 <mpfr_set4@plt>
   2f340:	b	2f2e8 <mpfr_add_q@@Base+0x364>

000000000002f344 <mpfr_sub_q@@Base>:
   2f344:	sub	sp, sp, #0xb0
   2f348:	stp	x29, x30, [sp, #80]
   2f34c:	stp	x28, x27, [sp, #96]
   2f350:	stp	x26, x25, [sp, #112]
   2f354:	stp	x24, x23, [sp, #128]
   2f358:	stp	x22, x21, [sp, #144]
   2f35c:	stp	x20, x19, [sp, #160]
   2f360:	ldr	x8, [x1, #16]
   2f364:	mov	x9, #0x2                   	// #2
   2f368:	movk	x9, #0x8000, lsl #48
   2f36c:	add	x9, x9, #0x2
   2f370:	mov	w20, w3
   2f374:	mov	x27, x2
   2f378:	mov	x21, x1
   2f37c:	cmp	x8, x9
   2f380:	mov	x19, x0
   2f384:	add	x29, sp, #0x50
   2f388:	b.lt	2f634 <mpfr_sub_q@@Base+0x2f0>  // b.tstop
   2f38c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f390:	ldr	x1, [x0, #2656]
   2f394:	add	x0, x0, #0xa60
   2f398:	blr	x1
   2f39c:	mrs	x28, tpidr_el0
   2f3a0:	ldr	w24, [x28, x0]
   2f3a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f3a8:	ldr	x1, [x0, #2592]
   2f3ac:	add	x0, x0, #0xa20
   2f3b0:	blr	x1
   2f3b4:	ldr	x25, [x28, x0]
   2f3b8:	mov	x8, x0
   2f3bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f3c0:	ldr	x1, [x0, #2624]
   2f3c4:	add	x0, x0, #0xa40
   2f3c8:	blr	x1
   2f3cc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2f3d0:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2f3d4:	ldr	x26, [x28, x0]
   2f3d8:	str	x9, [x28, x8]
   2f3dc:	str	x10, [x28, x0]
   2f3e0:	ldr	x8, [x19]
   2f3e4:	sub	x0, x29, #0x20
   2f3e8:	add	x23, x8, #0xa
   2f3ec:	mov	x1, x23
   2f3f0:	bl	cad0 <mpfr_init2@plt>
   2f3f4:	add	x0, sp, #0x10
   2f3f8:	mov	x1, x23
   2f3fc:	bl	cad0 <mpfr_init2@plt>
   2f400:	add	x0, sp, #0x10
   2f404:	mov	x1, x27
   2f408:	mov	w2, wzr
   2f40c:	bl	c8a0 <mpfr_set_q@plt>
   2f410:	cbz	w0, 2f61c <mpfr_sub_q@@Base+0x2d8>
   2f414:	cmp	w20, #0x0
   2f418:	mov	w8, #0x40                  	// #64
   2f41c:	cset	w22, eq  // eq = none
   2f420:	stp	x27, x8, [sp]
   2f424:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f428:	ldr	x1, [x0, #2656]
   2f42c:	add	x0, x0, #0xa60
   2f430:	blr	x1
   2f434:	mov	x27, x0
   2f438:	str	wzr, [x28, x0]
   2f43c:	sub	x0, x29, #0x20
   2f440:	add	x2, sp, #0x10
   2f444:	mov	x1, x21
   2f448:	mov	w3, wzr
   2f44c:	bl	bc20 <mpfr_sub@plt>
   2f450:	ldrb	w8, [x28, x27]
   2f454:	tst	w8, #0x3
   2f458:	b.ne	2f528 <mpfr_sub_q@@Base+0x1e4>  // b.any
   2f45c:	ldur	x8, [x29, #-16]
   2f460:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   2f464:	cmp	x8, x9
   2f468:	b.eq	2f4c4 <mpfr_sub_q@@Base+0x180>  // b.none
   2f46c:	mov	x9, #0x2                   	// #2
   2f470:	movk	x9, #0x8000, lsl #48
   2f474:	add	x9, x9, #0x2
   2f478:	cmp	x8, x9
   2f47c:	b.lt	2f4c4 <mpfr_sub_q@@Base+0x180>  // b.tstop
   2f480:	ldr	x9, [sp, #32]
   2f484:	ldur	x10, [x29, #-32]
   2f488:	ldr	x11, [x19]
   2f48c:	ldur	x0, [x29, #-8]
   2f490:	sub	x8, x9, x8
   2f494:	sub	x9, x10, #0x1
   2f498:	add	x10, x10, #0x3e
   2f49c:	bic	x8, x8, x8, asr #63
   2f4a0:	cmp	x9, #0x0
   2f4a4:	mvn	x8, x8
   2f4a8:	csel	x9, x10, x9, lt  // lt = tstop
   2f4ac:	add	x2, x23, x8
   2f4b0:	asr	x8, x9, #6
   2f4b4:	add	x1, x8, #0x1
   2f4b8:	add	x3, x11, x22
   2f4bc:	bl	c3d0 <mpfr_round_p@plt>
   2f4c0:	cbnz	w0, 2f564 <mpfr_sub_q@@Base+0x220>
   2f4c4:	mov	x8, #0x2                   	// #2
   2f4c8:	ldr	x9, [sp, #8]
   2f4cc:	movk	x8, #0x8000, lsl #48
   2f4d0:	sub	x8, x8, x23
   2f4d4:	sub	x8, x8, #0x103
   2f4d8:	cmp	x9, x8
   2f4dc:	mov	x8, x9
   2f4e0:	b.gt	2f544 <mpfr_sub_q@@Base+0x200>
   2f4e4:	add	x23, x8, x23
   2f4e8:	cmp	x23, #0x0
   2f4ec:	cinc	x8, x23, lt  // lt = tstop
   2f4f0:	asr	x8, x8, #1
   2f4f4:	sub	x0, x29, #0x20
   2f4f8:	mov	x1, x23
   2f4fc:	str	x8, [sp, #8]
   2f500:	bl	bf80 <mpfr_set_prec@plt>
   2f504:	add	x0, sp, #0x10
   2f508:	mov	x1, x23
   2f50c:	bl	bf80 <mpfr_set_prec@plt>
   2f510:	ldr	x1, [sp]
   2f514:	add	x0, sp, #0x10
   2f518:	mov	w2, wzr
   2f51c:	bl	c8a0 <mpfr_set_q@plt>
   2f520:	cbnz	w0, 2f424 <mpfr_sub_q@@Base+0xe0>
   2f524:	b	2f61c <mpfr_sub_q@@Base+0x2d8>
   2f528:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2f52c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2f530:	mov	w1, #0x1a3                 	// #419
   2f534:	add	x0, x0, #0x5ee
   2f538:	add	x2, x2, #0x5f7
   2f53c:	bl	cb90 <mpfr_assert_fail@plt>
   2f540:	b	2f45c <mpfr_sub_q@@Base+0x118>
   2f544:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2f548:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   2f54c:	mov	w1, #0x1b3                 	// #435
   2f550:	add	x0, x0, #0x5ee
   2f554:	add	x2, x2, #0xff6
   2f558:	bl	cb90 <mpfr_assert_fail@plt>
   2f55c:	ldr	x8, [sp, #8]
   2f560:	b	2f4e4 <mpfr_sub_q@@Base+0x1a0>
   2f564:	ldur	w3, [x29, #-24]
   2f568:	sub	x1, x29, #0x20
   2f56c:	mov	x0, x19
   2f570:	mov	w2, w20
   2f574:	bl	c6f0 <mpfr_set4@plt>
   2f578:	mov	w21, w0
   2f57c:	sub	x0, x29, #0x20
   2f580:	bl	c110 <mpfr_clear@plt>
   2f584:	add	x0, sp, #0x10
   2f588:	bl	c110 <mpfr_clear@plt>
   2f58c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f590:	ldr	x1, [x0, #2656]
   2f594:	add	x0, x0, #0xa60
   2f598:	blr	x1
   2f59c:	str	w24, [x28, x0]
   2f5a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f5a4:	ldr	x1, [x0, #2592]
   2f5a8:	add	x0, x0, #0xa20
   2f5ac:	blr	x1
   2f5b0:	str	x25, [x28, x0]
   2f5b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f5b8:	ldr	x1, [x0, #2624]
   2f5bc:	add	x0, x0, #0xa40
   2f5c0:	blr	x1
   2f5c4:	str	x26, [x28, x0]
   2f5c8:	ldr	x8, [x19, #16]
   2f5cc:	cmp	x8, x26
   2f5d0:	b.gt	2f684 <mpfr_sub_q@@Base+0x340>
   2f5d4:	cmp	x8, x25
   2f5d8:	b.lt	2f684 <mpfr_sub_q@@Base+0x340>  // b.tstop
   2f5dc:	cbz	w21, 2f5f8 <mpfr_sub_q@@Base+0x2b4>
   2f5e0:	orr	w8, w24, #0x8
   2f5e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f5e8:	ldr	x1, [x0, #2656]
   2f5ec:	add	x0, x0, #0xa60
   2f5f0:	blr	x1
   2f5f4:	str	w8, [x28, x0]
   2f5f8:	mov	w0, w21
   2f5fc:	ldp	x20, x19, [sp, #160]
   2f600:	ldp	x22, x21, [sp, #144]
   2f604:	ldp	x24, x23, [sp, #128]
   2f608:	ldp	x26, x25, [sp, #112]
   2f60c:	ldp	x28, x27, [sp, #96]
   2f610:	ldp	x29, x30, [sp, #80]
   2f614:	add	sp, sp, #0xb0
   2f618:	ret
   2f61c:	add	x2, sp, #0x10
   2f620:	mov	x0, x19
   2f624:	mov	x1, x21
   2f628:	mov	w3, w20
   2f62c:	bl	bc20 <mpfr_sub@plt>
   2f630:	b	2f578 <mpfr_sub_q@@Base+0x234>
   2f634:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2f638:	cmp	x8, x9
   2f63c:	b.eq	2f69c <mpfr_sub_q@@Base+0x358>  // b.none
   2f640:	mov	x9, #0x2                   	// #2
   2f644:	movk	x9, #0x8000, lsl #48
   2f648:	cmp	x8, x9
   2f64c:	b.ne	2f6ac <mpfr_sub_q@@Base+0x368>  // b.any
   2f650:	mov	x8, #0x2                   	// #2
   2f654:	movk	x8, #0x8000, lsl #48
   2f658:	str	x8, [x19, #16]
   2f65c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f660:	ldr	x1, [x0, #2656]
   2f664:	add	x0, x0, #0xa60
   2f668:	blr	x1
   2f66c:	mrs	x8, tpidr_el0
   2f670:	ldr	w9, [x8, x0]
   2f674:	mov	w21, wzr
   2f678:	orr	w9, w9, #0x4
   2f67c:	str	w9, [x8, x0]
   2f680:	b	2f5f8 <mpfr_sub_q@@Base+0x2b4>
   2f684:	mov	x0, x19
   2f688:	mov	w1, w21
   2f68c:	mov	w2, w20
   2f690:	bl	cb80 <mpfr_check_range@plt>
   2f694:	mov	w21, w0
   2f698:	b	2f5f8 <mpfr_sub_q@@Base+0x2b4>
   2f69c:	ldr	w8, [x27, #20]
   2f6a0:	cbz	w8, 2f6e8 <mpfr_sub_q@@Base+0x3a4>
   2f6a4:	ldr	w8, [x21, #8]
   2f6a8:	b	2f704 <mpfr_sub_q@@Base+0x3c0>
   2f6ac:	ldr	w8, [x27, #4]
   2f6b0:	cbz	w8, 2f718 <mpfr_sub_q@@Base+0x3d4>
   2f6b4:	cmp	w20, #0x3
   2f6b8:	mov	w8, #0x2                   	// #2
   2f6bc:	csel	w8, w8, w20, eq  // eq = none
   2f6c0:	cmp	w20, #0x2
   2f6c4:	mov	w9, #0x3                   	// #3
   2f6c8:	csel	w2, w9, w8, eq  // eq = none
   2f6cc:	mov	x0, x19
   2f6d0:	mov	x1, x27
   2f6d4:	bl	c8a0 <mpfr_set_q@plt>
   2f6d8:	ldr	w8, [x19, #8]
   2f6dc:	neg	w21, w0
   2f6e0:	neg	w8, w8
   2f6e4:	b	2f710 <mpfr_sub_q@@Base+0x3cc>
   2f6e8:	ldr	w9, [x27, #4]
   2f6ec:	ldr	w8, [x21, #8]
   2f6f0:	cmp	w9, #0x0
   2f6f4:	cset	w9, ne  // ne = any
   2f6f8:	csinv	w9, w9, wzr, ge  // ge = tcont
   2f6fc:	mul	w9, w9, w8
   2f700:	tbz	w9, #31, 2f650 <mpfr_sub_q@@Base+0x30c>
   2f704:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2f708:	mov	w21, wzr
   2f70c:	str	x9, [x19, #16]
   2f710:	str	w8, [x19, #8]
   2f714:	b	2f5f8 <mpfr_sub_q@@Base+0x2b4>
   2f718:	ldr	w3, [x21, #8]
   2f71c:	mov	x0, x19
   2f720:	mov	x1, x21
   2f724:	mov	w2, w20
   2f728:	bl	c6f0 <mpfr_set4@plt>
   2f72c:	b	2f694 <mpfr_sub_q@@Base+0x350>

000000000002f730 <mpfr_cmp_q@@Base>:
   2f730:	sub	sp, sp, #0x80
   2f734:	stp	x29, x30, [sp, #32]
   2f738:	stp	x28, x27, [sp, #48]
   2f73c:	stp	x26, x25, [sp, #64]
   2f740:	stp	x24, x23, [sp, #80]
   2f744:	stp	x22, x21, [sp, #96]
   2f748:	stp	x20, x19, [sp, #112]
   2f74c:	ldr	w8, [x1, #20]
   2f750:	mov	x20, x1
   2f754:	mov	x19, x0
   2f758:	add	x29, sp, #0x20
   2f75c:	cbz	w8, 2f85c <mpfr_cmp_q@@Base+0x12c>
   2f760:	ldr	x9, [x19, #16]
   2f764:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   2f768:	cmp	x9, x10
   2f76c:	b.le	2f8b8 <mpfr_cmp_q@@Base+0x188>
   2f770:	add	x21, x20, #0x10
   2f774:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f778:	ldr	x1, [x0, #2656]
   2f77c:	add	x0, x0, #0xa60
   2f780:	blr	x1
   2f784:	mrs	x25, tpidr_el0
   2f788:	ldr	w26, [x25, x0]
   2f78c:	mov	x22, x0
   2f790:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f794:	ldr	x1, [x0, #2592]
   2f798:	add	x0, x0, #0xa20
   2f79c:	blr	x1
   2f7a0:	ldr	x27, [x25, x0]
   2f7a4:	mov	x23, x0
   2f7a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f7ac:	ldr	x1, [x0, #2624]
   2f7b0:	add	x0, x0, #0xa40
   2f7b4:	blr	x1
   2f7b8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2f7bc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   2f7c0:	ldr	x28, [x25, x0]
   2f7c4:	str	x9, [x25, x23]
   2f7c8:	str	x10, [x25, x0]
   2f7cc:	ldr	x9, [x20, #24]
   2f7d0:	cmp	w8, #0x0
   2f7d4:	cneg	w8, w8, mi  // mi = first
   2f7d8:	ldr	x10, [x19]
   2f7dc:	add	x9, x9, w8, uxtw #3
   2f7e0:	ldur	x9, [x9, #-8]
   2f7e4:	lsl	x8, x8, #6
   2f7e8:	mov	x24, x0
   2f7ec:	mov	x0, sp
   2f7f0:	clz	x9, x9
   2f7f4:	sub	x8, x8, x9
   2f7f8:	add	x1, x8, x10
   2f7fc:	bl	cad0 <mpfr_init2@plt>
   2f800:	mov	x0, sp
   2f804:	mov	x1, x19
   2f808:	mov	x2, x21
   2f80c:	mov	w3, wzr
   2f810:	bl	c520 <mpfr_mul_z@plt>
   2f814:	mov	x0, sp
   2f818:	mov	x1, x20
   2f81c:	bl	bc60 <mpfr_cmp_z@plt>
   2f820:	mov	w19, w0
   2f824:	mov	x0, sp
   2f828:	bl	c110 <mpfr_clear@plt>
   2f82c:	str	w26, [x25, x22]
   2f830:	str	x27, [x25, x23]
   2f834:	str	x28, [x25, x24]
   2f838:	mov	w0, w19
   2f83c:	ldp	x20, x19, [sp, #112]
   2f840:	ldp	x22, x21, [sp, #96]
   2f844:	ldp	x24, x23, [sp, #80]
   2f848:	ldp	x26, x25, [sp, #64]
   2f84c:	ldp	x28, x27, [sp, #48]
   2f850:	ldp	x29, x30, [sp, #32]
   2f854:	add	sp, sp, #0x80
   2f858:	ret
   2f85c:	mov	x0, sp
   2f860:	mov	w1, #0x1                   	// #1
   2f864:	bl	cad0 <mpfr_init2@plt>
   2f868:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f86c:	ldr	x1, [x0, #2656]
   2f870:	add	x0, x0, #0xa60
   2f874:	blr	x1
   2f878:	mrs	x22, tpidr_el0
   2f87c:	ldr	w23, [x22, x0]
   2f880:	mov	x21, x0
   2f884:	mov	x0, sp
   2f888:	mov	x1, x20
   2f88c:	mov	w2, wzr
   2f890:	bl	c8a0 <mpfr_set_q@plt>
   2f894:	mov	x1, sp
   2f898:	mov	w2, #0x1                   	// #1
   2f89c:	mov	x0, x19
   2f8a0:	str	w23, [x22, x21]
   2f8a4:	bl	c9f0 <mpfr_cmp3@plt>
   2f8a8:	mov	w19, w0
   2f8ac:	mov	x0, sp
   2f8b0:	bl	c110 <mpfr_clear@plt>
   2f8b4:	b	2f838 <mpfr_cmp_q@@Base+0x108>
   2f8b8:	ldr	w8, [x20, #4]
   2f8bc:	mov	x0, x19
   2f8c0:	mov	x2, xzr
   2f8c4:	cmp	w8, #0x0
   2f8c8:	cset	w8, ne  // ne = any
   2f8cc:	csinv	x1, x8, xzr, ge  // ge = tcont
   2f8d0:	bl	c430 <mpfr_cmp_si_2exp@plt>
   2f8d4:	mov	w19, w0
   2f8d8:	b	2f838 <mpfr_cmp_q@@Base+0x108>

000000000002f8dc <mpfr_cmp_f@@Base>:
   2f8dc:	sub	sp, sp, #0x80
   2f8e0:	stp	x29, x30, [sp, #32]
   2f8e4:	stp	x26, x25, [sp, #64]
   2f8e8:	stp	x24, x23, [sp, #80]
   2f8ec:	stp	x22, x21, [sp, #96]
   2f8f0:	stp	x20, x19, [sp, #112]
   2f8f4:	ldr	x8, [x0, #16]
   2f8f8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   2f8fc:	mov	x19, x0
   2f900:	mov	x20, x1
   2f904:	cmp	x8, x9
   2f908:	str	x27, [sp, #48]
   2f90c:	add	x29, sp, #0x20
   2f910:	b.le	2f9e8 <mpfr_cmp_f@@Base+0x10c>
   2f914:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f918:	ldr	x1, [x0, #2656]
   2f91c:	add	x0, x0, #0xa60
   2f920:	blr	x1
   2f924:	mrs	x24, tpidr_el0
   2f928:	ldr	w25, [x24, x0]
   2f92c:	mov	x21, x0
   2f930:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f934:	ldr	x1, [x0, #2592]
   2f938:	add	x0, x0, #0xa20
   2f93c:	blr	x1
   2f940:	ldr	x26, [x24, x0]
   2f944:	mov	x22, x0
   2f948:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2f94c:	ldr	x1, [x0, #2624]
   2f950:	add	x0, x0, #0xa40
   2f954:	blr	x1
   2f958:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2f95c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   2f960:	ldr	x27, [x24, x0]
   2f964:	str	x8, [x24, x22]
   2f968:	str	x9, [x24, x0]
   2f96c:	ldr	w8, [x20, #4]
   2f970:	mov	w1, #0x1                   	// #1
   2f974:	mov	x23, x0
   2f978:	mov	x0, sp
   2f97c:	cmp	w8, #0x0
   2f980:	cneg	w8, w8, mi  // mi = first
   2f984:	bfi	w1, w8, #6, #26
   2f988:	bl	cad0 <mpfr_init2@plt>
   2f98c:	mov	x0, sp
   2f990:	mov	x1, x20
   2f994:	mov	w2, wzr
   2f998:	bl	bdf0 <mpfr_set_f@plt>
   2f99c:	mov	x1, sp
   2f9a0:	mov	w2, #0x1                   	// #1
   2f9a4:	mov	x0, x19
   2f9a8:	bl	c9f0 <mpfr_cmp3@plt>
   2f9ac:	mov	w19, w0
   2f9b0:	mov	x0, sp
   2f9b4:	bl	c110 <mpfr_clear@plt>
   2f9b8:	str	w25, [x24, x21]
   2f9bc:	str	x26, [x24, x22]
   2f9c0:	str	x27, [x24, x23]
   2f9c4:	mov	w0, w19
   2f9c8:	ldp	x20, x19, [sp, #112]
   2f9cc:	ldp	x22, x21, [sp, #96]
   2f9d0:	ldp	x24, x23, [sp, #80]
   2f9d4:	ldp	x26, x25, [sp, #64]
   2f9d8:	ldr	x27, [sp, #48]
   2f9dc:	ldp	x29, x30, [sp, #32]
   2f9e0:	add	sp, sp, #0x80
   2f9e4:	ret
   2f9e8:	ldr	w8, [x20, #4]
   2f9ec:	mov	x0, x19
   2f9f0:	mov	x2, xzr
   2f9f4:	cmp	w8, #0x0
   2f9f8:	cset	w8, ne  // ne = any
   2f9fc:	csinv	x1, x8, xzr, ge  // ge = tcont
   2fa00:	bl	c430 <mpfr_cmp_si_2exp@plt>
   2fa04:	mov	w19, w0
   2fa08:	b	2f9c4 <mpfr_cmp_f@@Base+0xe8>
   2fa0c:	stp	x29, x30, [sp, #-32]!
   2fa10:	stp	x20, x19, [sp, #16]
   2fa14:	ldr	w8, [x1, #4]
   2fa18:	mov	x19, x1
   2fa1c:	mov	x20, x0
   2fa20:	mov	x29, sp
   2fa24:	cmp	w8, #0x0
   2fa28:	cneg	w8, w8, mi  // mi = first
   2fa2c:	cmp	w8, #0x2
   2fa30:	b.cs	2fa3c <mpfr_cmp_f@@Base+0x160>  // b.hs, b.nlast
   2fa34:	mov	w1, #0x40                  	// #64
   2fa38:	b	2fa54 <mpfr_cmp_f@@Base+0x178>
   2fa3c:	ldr	x9, [x19, #8]
   2fa40:	add	x9, x9, x8, lsl #3
   2fa44:	ldur	x9, [x9, #-8]
   2fa48:	lsl	x8, x8, #6
   2fa4c:	clz	x9, x9
   2fa50:	sub	x1, x8, x9
   2fa54:	mov	x0, x20
   2fa58:	bl	cad0 <mpfr_init2@plt>
   2fa5c:	mov	x0, x20
   2fa60:	mov	x1, x19
   2fa64:	mov	w2, wzr
   2fa68:	bl	c2b0 <mpfr_set_z@plt>
   2fa6c:	cbnz	w0, 2fa7c <mpfr_cmp_f@@Base+0x1a0>
   2fa70:	ldp	x20, x19, [sp, #16]
   2fa74:	ldp	x29, x30, [sp], #32
   2fa78:	ret
   2fa7c:	ldp	x20, x19, [sp, #16]
   2fa80:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2fa84:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2fa88:	add	x0, x0, #0x5ee
   2fa8c:	add	x2, x2, #0x650
   2fa90:	mov	w1, #0x31                  	// #49
   2fa94:	ldp	x29, x30, [sp], #32
   2fa98:	b	cb90 <mpfr_assert_fail@plt>

000000000002fa9c <mpfr_init2@@Base>:
   2fa9c:	stp	x29, x30, [sp, #-48]!
   2faa0:	stp	x22, x21, [sp, #16]
   2faa4:	stp	x20, x19, [sp, #32]
   2faa8:	adrp	x8, 70000 <__gmpfr_l2b@@Base+0x2e0>
   2faac:	ldr	x8, [x8, #4040]
   2fab0:	mov	x20, x1
   2fab4:	mov	x19, x0
   2fab8:	mov	x29, sp
   2fabc:	ldr	w8, [x8]
   2fac0:	cmp	w8, #0x40
   2fac4:	b.ne	2fb2c <mpfr_init2@@Base+0x90>  // b.any
   2fac8:	mov	x21, #0xfffffffffffffeff    	// #-257
   2facc:	movk	x21, #0x7fff, lsl #48
   2fad0:	sub	x22, x20, #0x1
   2fad4:	cmp	x22, x21
   2fad8:	b.cs	2fb48 <mpfr_init2@@Base+0xac>  // b.hs, b.nlast
   2fadc:	add	x8, x22, #0x3f
   2fae0:	cmp	x22, #0x0
   2fae4:	csel	x8, x8, x22, lt  // lt = tstop
   2fae8:	asr	x8, x8, #6
   2faec:	add	x22, x8, #0x1
   2faf0:	lsl	x8, x22, #3
   2faf4:	add	x0, x8, #0x8
   2faf8:	bl	cd50 <mpfr_allocate_func@plt>
   2fafc:	mov	w8, #0x1                   	// #1
   2fb00:	add	x9, x0, #0x8
   2fb04:	add	x10, x21, #0x103
   2fb08:	str	x20, [x19]
   2fb0c:	str	w8, [x19, #8]
   2fb10:	str	x9, [x19, #24]
   2fb14:	str	x22, [x0]
   2fb18:	str	x10, [x19, #16]
   2fb1c:	ldp	x20, x19, [sp, #32]
   2fb20:	ldp	x22, x21, [sp, #16]
   2fb24:	ldp	x29, x30, [sp], #48
   2fb28:	ret
   2fb2c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2fb30:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2fb34:	add	x0, x0, #0x6d6
   2fb38:	add	x2, x2, #0x6de
   2fb3c:	mov	w1, #0x27                  	// #39
   2fb40:	bl	cb90 <mpfr_assert_fail@plt>
   2fb44:	b	2fac8 <mpfr_init2@@Base+0x2c>
   2fb48:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2fb4c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2fb50:	add	x0, x0, #0x6d6
   2fb54:	add	x2, x2, #0xec7
   2fb58:	mov	w1, #0x34                  	// #52
   2fb5c:	bl	cb90 <mpfr_assert_fail@plt>
   2fb60:	b	2fadc <mpfr_init2@@Base+0x40>

000000000002fb64 <mpfr_acos@@Base>:
   2fb64:	sub	sp, sp, #0xd0
   2fb68:	stp	x29, x30, [sp, #112]
   2fb6c:	stp	x28, x27, [sp, #128]
   2fb70:	stp	x26, x25, [sp, #144]
   2fb74:	stp	x24, x23, [sp, #160]
   2fb78:	stp	x22, x21, [sp, #176]
   2fb7c:	stp	x20, x19, [sp, #192]
   2fb80:	ldr	x8, [x1, #16]
   2fb84:	mov	x23, #0x2                   	// #2
   2fb88:	movk	x23, #0x8000, lsl #48
   2fb8c:	add	x9, x23, #0x2
   2fb90:	mov	w19, w2
   2fb94:	cmp	x8, x9
   2fb98:	mov	x20, x0
   2fb9c:	add	x29, sp, #0x70
   2fba0:	b.lt	2fec8 <mpfr_acos@@Base+0x364>  // b.tstop
   2fba4:	mov	x21, x1
   2fba8:	ldr	w24, [x1, #8]
   2fbac:	ldr	x1, [x1]
   2fbb0:	sub	x0, x29, #0x20
   2fbb4:	bl	cad0 <mpfr_init2@plt>
   2fbb8:	sub	x0, x29, #0x20
   2fbbc:	mov	w3, #0x1                   	// #1
   2fbc0:	mov	x1, x21
   2fbc4:	mov	w2, wzr
   2fbc8:	bl	c6f0 <mpfr_set4@plt>
   2fbcc:	sub	x0, x29, #0x20
   2fbd0:	mov	w1, #0x1                   	// #1
   2fbd4:	mov	x2, xzr
   2fbd8:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   2fbdc:	tbz	w0, #31, 2ffa8 <mpfr_acos@@Base+0x444>
   2fbe0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fbe4:	ldr	x1, [x0, #2656]
   2fbe8:	add	x0, x0, #0xa60
   2fbec:	blr	x1
   2fbf0:	mrs	x26, tpidr_el0
   2fbf4:	ldr	w27, [x26, x0]
   2fbf8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fbfc:	ldr	x1, [x0, #2592]
   2fc00:	add	x0, x0, #0xa20
   2fc04:	blr	x1
   2fc08:	ldr	x28, [x26, x0]
   2fc0c:	mov	x8, x0
   2fc10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fc14:	ldr	x1, [x0, #2624]
   2fc18:	add	x0, x0, #0xa40
   2fc1c:	blr	x1
   2fc20:	ldr	x23, [x26, x0]
   2fc24:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   2fc28:	str	x9, [x26, x8]
   2fc2c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2fc30:	str	x8, [x26, x0]
   2fc34:	sub	x0, x29, #0x20
   2fc38:	sub	x2, x29, #0x20
   2fc3c:	mov	w1, #0x1                   	// #1
   2fc40:	mov	w3, #0x3                   	// #3
   2fc44:	bl	caa0 <mpfr_ui_sub@plt>
   2fc48:	ldur	x8, [x29, #-16]
   2fc4c:	cmp	w24, #0x0
   2fc50:	cset	w9, gt
   2fc54:	sub	x0, x29, #0x20
   2fc58:	lsl	x8, x8, x9
   2fc5c:	mov	w9, #0x2                   	// #2
   2fc60:	sub	x24, x9, x8
   2fc64:	bl	c110 <mpfr_clear@plt>
   2fc68:	ldr	x22, [x20]
   2fc6c:	subs	x25, x22, #0x1
   2fc70:	b.eq	2fffc <mpfr_acos@@Base+0x498>  // b.none
   2fc74:	b.le	30004 <mpfr_acos@@Base+0x4a0>
   2fc78:	clz	x8, x25
   2fc7c:	mov	w9, #0x4a                  	// #74
   2fc80:	sub	x8, x9, x8
   2fc84:	add	x9, x22, x24
   2fc88:	add	x22, x9, x8
   2fc8c:	add	x0, sp, #0x10
   2fc90:	mov	x1, x22
   2fc94:	bl	cad0 <mpfr_init2@plt>
   2fc98:	add	x0, sp, #0x30
   2fc9c:	mov	x1, x22
   2fca0:	bl	cad0 <mpfr_init2@plt>
   2fca4:	cmp	w19, #0x0
   2fca8:	mov	w8, #0x40                  	// #64
   2fcac:	cset	w25, eq  // eq = none
   2fcb0:	str	x8, [sp, #8]
   2fcb4:	add	x0, sp, #0x10
   2fcb8:	mov	x1, x21
   2fcbc:	mov	w2, wzr
   2fcc0:	bl	c450 <mpfr_sqr@plt>
   2fcc4:	add	x0, sp, #0x10
   2fcc8:	add	x2, sp, #0x10
   2fccc:	mov	w1, #0x1                   	// #1
   2fcd0:	mov	w3, wzr
   2fcd4:	bl	caa0 <mpfr_ui_sub@plt>
   2fcd8:	add	x0, sp, #0x10
   2fcdc:	add	x1, sp, #0x10
   2fce0:	mov	w2, wzr
   2fce4:	bl	c990 <mpfr_sqrt@plt>
   2fce8:	add	x0, sp, #0x10
   2fcec:	add	x2, sp, #0x10
   2fcf0:	mov	x1, x21
   2fcf4:	mov	w3, wzr
   2fcf8:	bl	c670 <mpfr_div@plt>
   2fcfc:	add	x0, sp, #0x30
   2fd00:	add	x1, sp, #0x10
   2fd04:	mov	w2, wzr
   2fd08:	bl	c6e0 <mpfr_atan@plt>
   2fd0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fd10:	ldr	x1, [x0, #2704]
   2fd14:	add	x0, x0, #0xa90
   2fd18:	blr	x1
   2fd1c:	add	x1, x26, x0
   2fd20:	add	x0, sp, #0x10
   2fd24:	mov	w2, wzr
   2fd28:	bl	c3e0 <mpfr_cache@plt>
   2fd2c:	add	x0, sp, #0x10
   2fd30:	add	x1, sp, #0x10
   2fd34:	mov	w2, #0x1                   	// #1
   2fd38:	mov	w3, wzr
   2fd3c:	bl	c950 <mpfr_div_2ui@plt>
   2fd40:	add	x0, sp, #0x30
   2fd44:	add	x1, sp, #0x10
   2fd48:	add	x2, sp, #0x30
   2fd4c:	mov	w3, wzr
   2fd50:	bl	bc20 <mpfr_sub@plt>
   2fd54:	ldr	x8, [sp, #64]
   2fd58:	mov	x9, #0x2                   	// #2
   2fd5c:	movk	x9, #0x8000, lsl #48
   2fd60:	add	x9, x9, #0x2
   2fd64:	cmp	x8, x9
   2fd68:	b.lt	2fda0 <mpfr_acos@@Base+0x23c>  // b.tstop
   2fd6c:	ldr	x8, [sp, #48]
   2fd70:	ldr	x9, [x20]
   2fd74:	ldr	x0, [sp, #72]
   2fd78:	sub	x2, x22, x24
   2fd7c:	sub	x10, x8, #0x1
   2fd80:	add	x8, x8, #0x3e
   2fd84:	cmp	x10, #0x0
   2fd88:	csel	x8, x8, x10, lt  // lt = tstop
   2fd8c:	asr	x8, x8, #6
   2fd90:	add	x1, x8, #0x1
   2fd94:	add	x3, x9, x25
   2fd98:	bl	c3d0 <mpfr_round_p@plt>
   2fd9c:	cbnz	w0, 2fe10 <mpfr_acos@@Base+0x2ac>
   2fda0:	mov	x8, #0x2                   	// #2
   2fda4:	ldr	x9, [sp, #8]
   2fda8:	movk	x8, #0x8000, lsl #48
   2fdac:	sub	x8, x8, x22
   2fdb0:	sub	x8, x8, #0x103
   2fdb4:	cmp	x9, x8
   2fdb8:	mov	x8, x9
   2fdbc:	b.gt	2fdf0 <mpfr_acos@@Base+0x28c>
   2fdc0:	add	x22, x22, x8
   2fdc4:	cmp	x22, #0x0
   2fdc8:	cinc	x8, x22, lt  // lt = tstop
   2fdcc:	asr	x8, x8, #1
   2fdd0:	add	x0, sp, #0x10
   2fdd4:	mov	x1, x22
   2fdd8:	str	x8, [sp, #8]
   2fddc:	bl	bf80 <mpfr_set_prec@plt>
   2fde0:	add	x0, sp, #0x30
   2fde4:	mov	x1, x22
   2fde8:	bl	bf80 <mpfr_set_prec@plt>
   2fdec:	b	2fcb4 <mpfr_acos@@Base+0x150>
   2fdf0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   2fdf4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   2fdf8:	mov	w1, #0x86                  	// #134
   2fdfc:	add	x0, x0, #0x6fe
   2fe00:	add	x2, x2, #0x922
   2fe04:	bl	cb90 <mpfr_assert_fail@plt>
   2fe08:	ldr	x8, [sp, #8]
   2fe0c:	b	2fdc0 <mpfr_acos@@Base+0x25c>
   2fe10:	ldr	w3, [sp, #56]
   2fe14:	add	x1, sp, #0x30
   2fe18:	mov	x0, x20
   2fe1c:	mov	w2, w19
   2fe20:	bl	c6f0 <mpfr_set4@plt>
   2fe24:	mov	w21, w0
   2fe28:	add	x0, sp, #0x10
   2fe2c:	bl	c110 <mpfr_clear@plt>
   2fe30:	add	x0, sp, #0x30
   2fe34:	bl	c110 <mpfr_clear@plt>
   2fe38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fe3c:	ldr	x1, [x0, #2656]
   2fe40:	add	x0, x0, #0xa60
   2fe44:	blr	x1
   2fe48:	str	w27, [x26, x0]
   2fe4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fe50:	ldr	x1, [x0, #2592]
   2fe54:	add	x0, x0, #0xa20
   2fe58:	blr	x1
   2fe5c:	str	x28, [x26, x0]
   2fe60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fe64:	ldr	x1, [x0, #2624]
   2fe68:	add	x0, x0, #0xa40
   2fe6c:	blr	x1
   2fe70:	str	x23, [x26, x0]
   2fe74:	ldr	x8, [x20, #16]
   2fe78:	cmp	x8, x23
   2fe7c:	b.gt	2ffe4 <mpfr_acos@@Base+0x480>
   2fe80:	cmp	x8, x28
   2fe84:	b.lt	2ffe4 <mpfr_acos@@Base+0x480>  // b.tstop
   2fe88:	cbz	w21, 2fea4 <mpfr_acos@@Base+0x340>
   2fe8c:	orr	w8, w27, #0x8
   2fe90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fe94:	ldr	x1, [x0, #2656]
   2fe98:	add	x0, x0, #0xa60
   2fe9c:	blr	x1
   2fea0:	str	w8, [x26, x0]
   2fea4:	mov	w0, w21
   2fea8:	ldp	x20, x19, [sp, #192]
   2feac:	ldp	x22, x21, [sp, #176]
   2feb0:	ldp	x24, x23, [sp, #160]
   2feb4:	ldp	x26, x25, [sp, #144]
   2feb8:	ldp	x28, x27, [sp, #128]
   2febc:	ldp	x29, x30, [sp, #112]
   2fec0:	add	sp, sp, #0xd0
   2fec4:	ret
   2fec8:	and	x8, x8, #0xfffffffffffffffe
   2fecc:	cmp	x8, x23
   2fed0:	b.eq	2ffb8 <mpfr_acos@@Base+0x454>  // b.none
   2fed4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fed8:	ldr	x1, [x0, #2656]
   2fedc:	add	x0, x0, #0xa60
   2fee0:	blr	x1
   2fee4:	mrs	x25, tpidr_el0
   2fee8:	ldr	w26, [x25, x0]
   2feec:	mov	x22, x0
   2fef0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2fef4:	ldr	x1, [x0, #2592]
   2fef8:	add	x0, x0, #0xa20
   2fefc:	blr	x1
   2ff00:	ldr	x27, [x25, x0]
   2ff04:	mov	x23, x0
   2ff08:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ff0c:	ldr	x1, [x0, #2624]
   2ff10:	add	x0, x0, #0xa40
   2ff14:	blr	x1
   2ff18:	ldr	x28, [x25, x0]
   2ff1c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2ff20:	str	x8, [x25, x23]
   2ff24:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   2ff28:	mov	x24, x0
   2ff2c:	str	x8, [x25, x0]
   2ff30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ff34:	ldr	x1, [x0, #2704]
   2ff38:	add	x0, x0, #0xa90
   2ff3c:	blr	x1
   2ff40:	add	x1, x25, x0
   2ff44:	mov	x0, x20
   2ff48:	mov	w2, w19
   2ff4c:	bl	c3e0 <mpfr_cache@plt>
   2ff50:	mov	w21, w0
   2ff54:	mov	w2, #0x1                   	// #1
   2ff58:	mov	x0, x20
   2ff5c:	mov	x1, x20
   2ff60:	mov	w3, w19
   2ff64:	bl	c950 <mpfr_div_2ui@plt>
   2ff68:	str	w26, [x25, x22]
   2ff6c:	str	x27, [x25, x23]
   2ff70:	str	x28, [x25, x24]
   2ff74:	ldr	x8, [x20, #16]
   2ff78:	cmp	x8, x28
   2ff7c:	b.gt	2ffe4 <mpfr_acos@@Base+0x480>
   2ff80:	cmp	x8, x27
   2ff84:	b.lt	2ffe4 <mpfr_acos@@Base+0x480>  // b.tstop
   2ff88:	cbz	w21, 2fea4 <mpfr_acos@@Base+0x340>
   2ff8c:	orr	w8, w26, #0x8
   2ff90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ff94:	ldr	x1, [x0, #2656]
   2ff98:	add	x0, x0, #0xa60
   2ff9c:	blr	x1
   2ffa0:	str	w8, [x25, x0]
   2ffa4:	b	2fea4 <mpfr_acos@@Base+0x340>
   2ffa8:	mov	w22, w0
   2ffac:	sub	x0, x29, #0x20
   2ffb0:	bl	c110 <mpfr_clear@plt>
   2ffb4:	cbz	w22, 30020 <mpfr_acos@@Base+0x4bc>
   2ffb8:	str	x23, [x20, #16]
   2ffbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   2ffc0:	ldr	x1, [x0, #2656]
   2ffc4:	add	x0, x0, #0xa60
   2ffc8:	blr	x1
   2ffcc:	mrs	x8, tpidr_el0
   2ffd0:	ldr	w9, [x8, x0]
   2ffd4:	mov	w21, wzr
   2ffd8:	orr	w9, w9, #0x4
   2ffdc:	str	w9, [x8, x0]
   2ffe0:	b	2fea4 <mpfr_acos@@Base+0x340>
   2ffe4:	mov	x0, x20
   2ffe8:	mov	w1, w21
   2ffec:	mov	w2, w19
   2fff0:	bl	cb80 <mpfr_check_range@plt>
   2fff4:	mov	w21, w0
   2fff8:	b	2fea4 <mpfr_acos@@Base+0x340>
   2fffc:	mov	w8, #0xa                   	// #10
   30000:	b	2fc84 <mpfr_acos@@Base+0x120>
   30004:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30008:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   3000c:	add	x0, x0, #0x6fe
   30010:	add	x2, x2, #0x90d
   30014:	mov	w1, #0x60                  	// #96
   30018:	bl	cb90 <mpfr_assert_fail@plt>
   3001c:	b	2fc78 <mpfr_acos@@Base+0x114>
   30020:	cmp	w24, #0x1
   30024:	b.lt	30040 <mpfr_acos@@Base+0x4dc>  // b.tstop
   30028:	mov	w8, #0x1                   	// #1
   3002c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   30030:	mov	w21, wzr
   30034:	str	w8, [x20, #8]
   30038:	str	x9, [x20, #16]
   3003c:	b	2fea4 <mpfr_acos@@Base+0x340>
   30040:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30044:	ldr	x1, [x0, #2704]
   30048:	add	x0, x0, #0xa90
   3004c:	blr	x1
   30050:	mrs	x8, tpidr_el0
   30054:	add	x1, x8, x0
   30058:	mov	x0, x20
   3005c:	mov	w2, w19
   30060:	bl	c3e0 <mpfr_cache@plt>
   30064:	b	2fff4 <mpfr_acos@@Base+0x490>

0000000000030068 <mpfr_sin_cos@@Base>:
   30068:	sub	sp, sp, #0xe0
   3006c:	stp	x24, x23, [sp, #176]
   30070:	stp	x22, x21, [sp, #192]
   30074:	mov	x23, x0
   30078:	cmp	x0, x1
   3007c:	mov	x22, x2
   30080:	stp	x29, x30, [sp, #128]
   30084:	stp	x28, x27, [sp, #144]
   30088:	stp	x26, x25, [sp, #160]
   3008c:	stp	x20, x19, [sp, #208]
   30090:	add	x29, sp, #0x80
   30094:	str	w3, [sp, #36]
   30098:	str	x1, [sp, #48]
   3009c:	b.eq	306f8 <mpfr_sin_cos@@Base+0x690>  // b.none
   300a0:	ldr	x28, [x22, #16]
   300a4:	mov	x19, #0x2                   	// #2
   300a8:	movk	x19, #0x8000, lsl #48
   300ac:	add	x8, x19, #0x2
   300b0:	cmp	x28, x8
   300b4:	b.lt	30714 <mpfr_sin_cos@@Base+0x6ac>  // b.tstop
   300b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   300bc:	ldr	x1, [x0, #2656]
   300c0:	add	x0, x0, #0xa60
   300c4:	blr	x1
   300c8:	mrs	x11, tpidr_el0
   300cc:	ldr	w14, [x11, x0]
   300d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   300d4:	ldr	x1, [x0, #2592]
   300d8:	add	x0, x0, #0xa20
   300dc:	blr	x1
   300e0:	ldr	x13, [x11, x0]
   300e4:	mov	x8, x0
   300e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   300ec:	ldr	x1, [x0, #2624]
   300f0:	add	x0, x0, #0xa40
   300f4:	blr	x1
   300f8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   300fc:	str	x9, [x11, x8]
   30100:	ldr	x9, [sp, #48]
   30104:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   30108:	ldr	x12, [x11, x0]
   3010c:	str	x10, [x11, x0]
   30110:	ldr	x8, [x23]
   30114:	ldr	x9, [x9]
   30118:	str	x11, [sp, #56]
   3011c:	str	x23, [sp, #40]
   30120:	cmp	x8, x9
   30124:	csel	x20, x8, x9, gt
   30128:	subs	x21, x20, #0x1
   3012c:	b.eq	30754 <mpfr_sin_cos@@Base+0x6ec>  // b.none
   30130:	b.le	3075c <mpfr_sin_cos@@Base+0x6f4>
   30134:	clz	x8, x21
   30138:	mov	w9, #0x40                  	// #64
   3013c:	sub	x8, x9, x8
   30140:	add	x8, x20, x8
   30144:	add	x23, x8, #0xd
   30148:	tbz	x28, #63, 3020c <mpfr_sin_cos@@Base+0x1a4>
   3014c:	ldr	x8, [sp, #40]
   30150:	neg	x21, x28, lsl #1
   30154:	cmp	x8, x22
   30158:	b.eq	301f0 <mpfr_sin_cos@@Base+0x188>  // b.none
   3015c:	ldr	x8, [x8]
   30160:	add	x2, x21, #0x2
   30164:	add	x8, x8, #0x1
   30168:	cmp	x2, x8
   3016c:	b.ls	30208 <mpfr_sin_cos@@Base+0x1a0>  // b.plast
   30170:	ldr	x0, [sp, #40]
   30174:	ldr	w4, [sp, #36]
   30178:	mov	x1, x22
   3017c:	mov	w3, wzr
   30180:	stp	x13, x12, [sp, #16]
   30184:	mov	w25, w14
   30188:	bl	c590 <mpfr_round_near_x@plt>
   3018c:	ldp	x13, x12, [sp, #16]
   30190:	mov	w14, w25
   30194:	cbz	w0, 30208 <mpfr_sin_cos@@Base+0x1a0>
   30198:	ldr	x8, [sp, #48]
   3019c:	orr	x2, x21, #0x1
   301a0:	ldr	x8, [x8]
   301a4:	add	x8, x8, #0x1
   301a8:	cmp	x2, x8
   301ac:	b.ls	30208 <mpfr_sin_cos@@Base+0x1a0>  // b.plast
   301b0:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   301b4:	mov	w24, w0
   301b8:	ldr	x1, [x1, #3944]
   301bc:	ldr	x0, [sp, #48]
   301c0:	ldr	w4, [sp, #36]
   301c4:	mov	w3, wzr
   301c8:	bl	c590 <mpfr_round_near_x@plt>
   301cc:	ldp	x13, x12, [sp, #16]
   301d0:	mov	w14, w25
   301d4:	mov	w25, w0
   301d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   301dc:	ldr	x1, [x0, #2656]
   301e0:	add	x0, x0, #0xa60
   301e4:	blr	x1
   301e8:	cbnz	w25, 308ac <mpfr_sin_cos@@Base+0x844>
   301ec:	b	30208 <mpfr_sin_cos@@Base+0x1a0>
   301f0:	ldr	x8, [sp, #48]
   301f4:	orr	x2, x21, #0x1
   301f8:	ldr	x8, [x8]
   301fc:	add	x8, x8, #0x1
   30200:	cmp	x2, x8
   30204:	b.hi	30830 <mpfr_sin_cos@@Base+0x7c8>  // b.pmore
   30208:	sub	x23, x23, x28, lsl #1
   3020c:	mov	w8, #0x7530                	// #30000
   30210:	cmp	x20, x8
   30214:	b.lt	30270 <mpfr_sin_cos@@Base+0x208>  // b.tstop
   30218:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3021c:	ldr	x1, [x0, #2656]
   30220:	add	x0, x0, #0xa60
   30224:	blr	x1
   30228:	ldr	x8, [sp, #56]
   3022c:	str	w14, [x8, x0]
   30230:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30234:	ldr	x1, [x0, #2592]
   30238:	add	x0, x0, #0xa20
   3023c:	blr	x1
   30240:	str	x13, [x8, x0]
   30244:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30248:	ldr	x1, [x0, #2624]
   3024c:	add	x0, x0, #0xa40
   30250:	blr	x1
   30254:	str	x12, [x8, x0]
   30258:	ldp	x0, x1, [sp, #40]
   3025c:	ldr	w3, [sp, #36]
   30260:	mov	x2, x22
   30264:	bl	c0c0 <mpfr_sincos_fast@plt>
   30268:	mov	w8, w0
   3026c:	b	306d4 <mpfr_sin_cos@@Base+0x66c>
   30270:	sub	x0, x29, #0x20
   30274:	str	w14, [sp, #12]
   30278:	stp	x13, x12, [sp, #16]
   3027c:	bl	bc80 <mpfr_init@plt>
   30280:	add	x0, sp, #0x40
   30284:	bl	bc80 <mpfr_init@plt>
   30288:	ldr	w8, [sp, #36]
   3028c:	sub	x24, x28, #0x1
   30290:	mov	w20, #0x40                  	// #64
   30294:	cmp	w8, #0x0
   30298:	cset	w21, eq  // eq = none
   3029c:	cmp	x28, #0x2
   302a0:	b.lt	30340 <mpfr_sin_cos@@Base+0x2d8>  // b.tstop
   302a4:	add	x1, x24, x23
   302a8:	sub	x0, x29, #0x20
   302ac:	bl	bf80 <mpfr_set_prec@plt>
   302b0:	add	x0, sp, #0x40
   302b4:	mov	x1, x23
   302b8:	bl	bf80 <mpfr_set_prec@plt>
   302bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   302c0:	ldr	x1, [x0, #2704]
   302c4:	add	x0, x0, #0xa90
   302c8:	blr	x1
   302cc:	ldr	x8, [sp, #56]
   302d0:	mov	w2, wzr
   302d4:	add	x1, x8, x0
   302d8:	sub	x0, x29, #0x20
   302dc:	bl	c3e0 <mpfr_cache@plt>
   302e0:	sub	x0, x29, #0x20
   302e4:	sub	x1, x29, #0x20
   302e8:	mov	w2, #0x1                   	// #1
   302ec:	mov	w3, wzr
   302f0:	bl	c320 <mpfr_mul_2ui@plt>
   302f4:	add	x0, sp, #0x40
   302f8:	sub	x2, x29, #0x20
   302fc:	mov	x1, x22
   30300:	mov	w3, wzr
   30304:	bl	cd70 <mpfr_remainder@plt>
   30308:	sub	x0, x29, #0x20
   3030c:	sub	x1, x29, #0x20
   30310:	mov	w2, #0x1                   	// #1
   30314:	mov	w3, wzr
   30318:	bl	c950 <mpfr_div_2ui@plt>
   3031c:	ldr	w8, [sp, #72]
   30320:	sub	x0, x29, #0x20
   30324:	sub	x1, x29, #0x20
   30328:	add	x2, sp, #0x40
   3032c:	mov	w3, #0x1                   	// #1
   30330:	cmp	w8, #0x1
   30334:	b.lt	30454 <mpfr_sin_cos@@Base+0x3ec>  // b.tstop
   30338:	bl	bc20 <mpfr_sub@plt>
   3033c:	b	30458 <mpfr_sin_cos@@Base+0x3f0>
   30340:	mov	w25, wzr
   30344:	mov	x26, x22
   30348:	ldr	w27, [x26, #8]
   3034c:	sub	x0, x29, #0x20
   30350:	mov	x1, x23
   30354:	bl	bf80 <mpfr_set_prec@plt>
   30358:	sub	x0, x29, #0x20
   3035c:	mov	w2, #0x1                   	// #1
   30360:	mov	x1, x26
   30364:	bl	c480 <mpfr_cos@plt>
   30368:	ldur	x8, [x29, #-16]
   3036c:	add	x9, x19, #0x2
   30370:	cmp	x8, x9
   30374:	b.lt	30468 <mpfr_sin_cos@@Base+0x400>  // b.tstop
   30378:	ldur	x9, [x29, #-32]
   3037c:	ldr	x10, [sp, #48]
   30380:	add	x8, x23, x8
   30384:	cmp	w25, #0x0
   30388:	sub	x8, x8, #0x3
   3038c:	ldr	x10, [x10]
   30390:	csel	x2, x23, x8, eq  // eq = none
   30394:	sub	x8, x9, #0x1
   30398:	ldur	x0, [x29, #-8]
   3039c:	add	x9, x9, #0x3e
   303a0:	cmp	x8, #0x0
   303a4:	csel	x8, x9, x8, lt  // lt = tstop
   303a8:	asr	x8, x8, #6
   303ac:	add	x1, x8, #0x1
   303b0:	add	x3, x10, x21
   303b4:	bl	c3d0 <mpfr_round_p@plt>
   303b8:	cbz	w0, 30468 <mpfr_sin_cos@@Base+0x400>
   303bc:	ldur	x1, [x29, #-32]
   303c0:	add	x0, sp, #0x40
   303c4:	bl	bf80 <mpfr_set_prec@plt>
   303c8:	add	x0, sp, #0x40
   303cc:	sub	x1, x29, #0x20
   303d0:	bl	c4f0 <mpfr_swap@plt>
   303d4:	sub	x0, x29, #0x20
   303d8:	add	x1, sp, #0x40
   303dc:	mov	w2, #0x2                   	// #2
   303e0:	bl	c450 <mpfr_sqr@plt>
   303e4:	sub	x0, x29, #0x20
   303e8:	sub	x2, x29, #0x20
   303ec:	mov	w1, #0x1                   	// #1
   303f0:	mov	w3, wzr
   303f4:	bl	caa0 <mpfr_ui_sub@plt>
   303f8:	sub	x0, x29, #0x20
   303fc:	sub	x1, x29, #0x20
   30400:	mov	w2, wzr
   30404:	bl	c990 <mpfr_sqrt@plt>
   30408:	ldur	x8, [x29, #-16]
   3040c:	bfi	w25, w25, #1, #1
   30410:	add	w9, w25, #0x3
   30414:	tbz	w27, #31, 30424 <mpfr_sin_cos@@Base+0x3bc>
   30418:	ldur	w10, [x29, #-24]
   3041c:	neg	w10, w10
   30420:	stur	w10, [x29, #-24]
   30424:	add	x10, x8, x23
   30428:	sub	x9, x8, x9
   3042c:	add	x11, x19, #0x2
   30430:	cmp	x8, x11
   30434:	add	x26, x10, x9
   30438:	b.ge	304c0 <mpfr_sin_cos@@Base+0x458>  // b.tcont
   3043c:	ldr	x8, [sp, #40]
   30440:	ldr	x8, [x8]
   30444:	subs	x8, x8, x26
   30448:	csel	x8, x8, xzr, gt
   3044c:	add	x23, x8, x23
   30450:	b	30468 <mpfr_sin_cos@@Base+0x400>
   30454:	bl	c240 <mpfr_add@plt>
   30458:	ldr	x8, [sp, #80]
   3045c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   30460:	cmp	x8, x9
   30464:	b.ne	30498 <mpfr_sin_cos@@Base+0x430>  // b.any
   30468:	sub	x8, x19, x23
   3046c:	sub	x8, x8, #0x103
   30470:	cmp	x20, x8
   30474:	b.gt	30548 <mpfr_sin_cos@@Base+0x4e0>
   30478:	add	x23, x23, x20
   3047c:	cmp	x23, #0x0
   30480:	cinc	x8, x23, lt  // lt = tstop
   30484:	sub	x0, x29, #0x20
   30488:	mov	x1, x23
   3048c:	asr	x20, x8, #1
   30490:	bl	bf80 <mpfr_set_prec@plt>
   30494:	b	3029c <mpfr_sin_cos@@Base+0x234>
   30498:	mov	w9, #0x3                   	// #3
   3049c:	sub	x9, x9, x23
   304a0:	cmp	x8, x9
   304a4:	b.lt	30468 <mpfr_sin_cos@@Base+0x400>  // b.tstop
   304a8:	ldur	x8, [x29, #-16]
   304ac:	cmp	x8, x9
   304b0:	b.lt	30468 <mpfr_sin_cos@@Base+0x400>  // b.tstop
   304b4:	add	x26, sp, #0x40
   304b8:	mov	w25, #0x1                   	// #1
   304bc:	b	30348 <mpfr_sin_cos@@Base+0x2e0>
   304c0:	ldur	x8, [x29, #-32]
   304c4:	ldr	x27, [sp, #40]
   304c8:	ldur	x0, [x29, #-8]
   304cc:	mov	x2, x26
   304d0:	sub	x10, x8, #0x1
   304d4:	ldr	x9, [x27]
   304d8:	add	x8, x8, #0x3e
   304dc:	cmp	x10, #0x0
   304e0:	csel	x8, x8, x10, lt  // lt = tstop
   304e4:	asr	x8, x8, #6
   304e8:	add	x1, x8, #0x1
   304ec:	add	x3, x9, x21
   304f0:	bl	c3d0 <mpfr_round_p@plt>
   304f4:	cbnz	w0, 30564 <mpfr_sin_cos@@Base+0x4fc>
   304f8:	ldr	x8, [x27]
   304fc:	ldur	x9, [x29, #-16]
   30500:	subs	x8, x8, x26
   30504:	csel	x8, x8, xzr, gt
   30508:	cmp	x9, #0x1
   3050c:	add	x23, x8, x23
   30510:	b.ne	30468 <mpfr_sin_cos@@Base+0x400>  // b.any
   30514:	ldur	x8, [x29, #-32]
   30518:	ldur	x9, [x29, #-8]
   3051c:	sub	x10, x8, #0x1
   30520:	add	x8, x8, #0x3e
   30524:	cmp	x10, #0x0
   30528:	csel	x8, x8, x10, lt  // lt = tstop
   3052c:	asr	x8, x8, #6
   30530:	ldr	x8, [x9, x8, lsl #3]
   30534:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   30538:	cmp	x8, x9
   3053c:	cset	w8, eq  // eq = none
   30540:	lsl	x23, x23, x8
   30544:	b	30468 <mpfr_sin_cos@@Base+0x400>
   30548:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3054c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30550:	mov	w1, #0xd2                  	// #210
   30554:	add	x0, x0, #0x705
   30558:	add	x2, x2, #0x4df
   3055c:	bl	cb90 <mpfr_assert_fail@plt>
   30560:	b	30478 <mpfr_sin_cos@@Base+0x410>
   30564:	ldr	w19, [sp, #36]
   30568:	ldur	w3, [x29, #-24]
   3056c:	sub	x1, x29, #0x20
   30570:	mov	x0, x27
   30574:	mov	w2, w19
   30578:	bl	c6f0 <mpfr_set4@plt>
   3057c:	ldr	w3, [sp, #72]
   30580:	mov	w24, w0
   30584:	ldr	x0, [sp, #48]
   30588:	add	x1, sp, #0x40
   3058c:	mov	w2, w19
   30590:	bl	c6f0 <mpfr_set4@plt>
   30594:	mov	w25, w0
   30598:	sub	x0, x29, #0x20
   3059c:	bl	c110 <mpfr_clear@plt>
   305a0:	add	x0, sp, #0x40
   305a4:	bl	c110 <mpfr_clear@plt>
   305a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   305ac:	ldr	x1, [x0, #2656]
   305b0:	add	x0, x0, #0xa60
   305b4:	blr	x1
   305b8:	ldr	x8, [sp, #56]
   305bc:	ldr	w9, [sp, #12]
   305c0:	str	w9, [x8, x0]
   305c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   305c8:	ldr	x1, [x0, #2592]
   305cc:	add	x0, x0, #0xa20
   305d0:	blr	x1
   305d4:	ldr	x11, [sp, #16]
   305d8:	str	x11, [x8, x0]
   305dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   305e0:	ldr	x1, [x0, #2624]
   305e4:	add	x0, x0, #0xa40
   305e8:	blr	x1
   305ec:	ldr	x10, [sp, #24]
   305f0:	str	x10, [x8, x0]
   305f4:	ldr	x8, [x27, #16]
   305f8:	cmp	x8, x10
   305fc:	b.gt	307d4 <mpfr_sin_cos@@Base+0x76c>
   30600:	cmp	x8, x11
   30604:	b.lt	307d4 <mpfr_sin_cos@@Base+0x76c>  // b.tstop
   30608:	cbz	w24, 30628 <mpfr_sin_cos@@Base+0x5c0>
   3060c:	orr	w8, w9, #0x8
   30610:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30614:	ldr	x1, [x0, #2656]
   30618:	add	x0, x0, #0xa60
   3061c:	blr	x1
   30620:	ldr	x9, [sp, #56]
   30624:	str	w8, [x9, x0]
   30628:	ldr	x8, [sp, #48]
   3062c:	ldr	x8, [x8, #16]
   30630:	cmp	x8, x11
   30634:	b.lt	30818 <mpfr_sin_cos@@Base+0x7b0>  // b.tstop
   30638:	cmp	x8, x10
   3063c:	b.gt	30818 <mpfr_sin_cos@@Base+0x7b0>
   30640:	cbz	w25, 3068c <mpfr_sin_cos@@Base+0x624>
   30644:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30648:	ldr	x1, [x0, #2656]
   3064c:	add	x0, x0, #0xa60
   30650:	blr	x1
   30654:	ldr	x9, [sp, #56]
   30658:	ldr	w8, [x9, x0]
   3065c:	orr	w8, w8, #0x8
   30660:	str	w8, [x9, x0]
   30664:	cmp	w24, #0x1
   30668:	mov	w8, #0x1                   	// #1
   3066c:	cinc	w8, w8, lt  // lt = tstop
   30670:	cmp	w24, #0x0
   30674:	csel	w8, wzr, w8, eq  // eq = none
   30678:	cmp	w25, #0x0
   3067c:	cset	w9, eq  // eq = none
   30680:	b.le	306a0 <mpfr_sin_cos@@Base+0x638>
   30684:	mov	w10, #0x4                   	// #4
   30688:	b	306a4 <mpfr_sin_cos@@Base+0x63c>
   3068c:	cmp	w24, #0x1
   30690:	mov	w9, #0x1                   	// #1
   30694:	cinc	w8, w9, lt  // lt = tstop
   30698:	cmp	w24, #0x0
   3069c:	csel	w8, wzr, w8, eq  // eq = none
   306a0:	mov	w10, #0x8                   	// #8
   306a4:	cmp	w9, #0x0
   306a8:	csel	w9, wzr, w10, ne  // ne = any
   306ac:	orr	w8, w9, w8
   306b0:	cbz	w8, 306d4 <mpfr_sin_cos@@Base+0x66c>
   306b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   306b8:	ldr	x1, [x0, #2656]
   306bc:	add	x0, x0, #0xa60
   306c0:	blr	x1
   306c4:	ldr	x10, [sp, #56]
   306c8:	ldr	w9, [x10, x0]
   306cc:	orr	w9, w9, #0x8
   306d0:	str	w9, [x10, x0]
   306d4:	ldp	x20, x19, [sp, #208]
   306d8:	ldp	x22, x21, [sp, #192]
   306dc:	ldp	x24, x23, [sp, #176]
   306e0:	ldp	x26, x25, [sp, #160]
   306e4:	ldp	x28, x27, [sp, #144]
   306e8:	ldp	x29, x30, [sp, #128]
   306ec:	mov	w0, w8
   306f0:	add	sp, sp, #0xe0
   306f4:	ret
   306f8:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   306fc:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30700:	add	x0, x0, #0x705
   30704:	add	x2, x2, #0x70f
   30708:	mov	w1, #0x28                  	// #40
   3070c:	bl	cb90 <mpfr_assert_fail@plt>
   30710:	b	300a0 <mpfr_sin_cos@@Base+0x38>
   30714:	and	x8, x28, #0xfffffffffffffffe
   30718:	cmp	x8, x19
   3071c:	b.ne	30794 <mpfr_sin_cos@@Base+0x72c>  // b.any
   30720:	ldr	x8, [sp, #48]
   30724:	str	x19, [x23, #16]
   30728:	str	x19, [x8, #16]
   3072c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30730:	ldr	x1, [x0, #2656]
   30734:	add	x0, x0, #0xa60
   30738:	blr	x1
   3073c:	mrs	x9, tpidr_el0
   30740:	ldr	w10, [x9, x0]
   30744:	mov	w8, wzr
   30748:	orr	w10, w10, #0x4
   3074c:	str	w10, [x9, x0]
   30750:	b	306d4 <mpfr_sin_cos@@Base+0x66c>
   30754:	mov	x8, xzr
   30758:	b	30140 <mpfr_sin_cos@@Base+0xd8>
   3075c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30760:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   30764:	add	x0, x0, #0x705
   30768:	add	x2, x2, #0x90d
   3076c:	mov	w1, #0x47                  	// #71
   30770:	mov	x23, x12
   30774:	mov	x24, x13
   30778:	mov	w25, w14
   3077c:	bl	cb90 <mpfr_assert_fail@plt>
   30780:	ldr	x28, [x22, #16]
   30784:	mov	w14, w25
   30788:	mov	x13, x24
   3078c:	mov	x12, x23
   30790:	b	30134 <mpfr_sin_cos@@Base+0xcc>
   30794:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   30798:	str	x8, [x23, #16]
   3079c:	ldr	w8, [x22, #8]
   307a0:	ldr	x0, [sp, #48]
   307a4:	ldr	w3, [sp, #36]
   307a8:	mov	w1, #0x1                   	// #1
   307ac:	mov	x2, xzr
   307b0:	str	w8, [x23, #8]
   307b4:	bl	c640 <mpfr_set_ui_2exp@plt>
   307b8:	cmp	w0, #0x1
   307bc:	mov	w8, #0x4                   	// #4
   307c0:	mov	w9, #0x8                   	// #8
   307c4:	csel	w8, w9, w8, lt  // lt = tstop
   307c8:	cmp	w0, #0x0
   307cc:	csel	w8, wzr, w8, eq  // eq = none
   307d0:	b	306d4 <mpfr_sin_cos@@Base+0x66c>
   307d4:	ldr	w2, [sp, #36]
   307d8:	mov	x0, x27
   307dc:	mov	w1, w24
   307e0:	bl	cb80 <mpfr_check_range@plt>
   307e4:	mov	w24, w0
   307e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   307ec:	ldr	x1, [x0, #2592]
   307f0:	add	x0, x0, #0xa20
   307f4:	blr	x1
   307f8:	ldr	x8, [sp, #56]
   307fc:	ldr	x11, [x8, x0]
   30800:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30804:	ldr	x1, [x0, #2624]
   30808:	add	x0, x0, #0xa40
   3080c:	blr	x1
   30810:	ldr	x10, [x8, x0]
   30814:	b	30628 <mpfr_sin_cos@@Base+0x5c0>
   30818:	ldr	x0, [sp, #48]
   3081c:	ldr	w2, [sp, #36]
   30820:	mov	w1, w25
   30824:	bl	cb80 <mpfr_check_range@plt>
   30828:	mov	w25, w0
   3082c:	b	30664 <mpfr_sin_cos@@Base+0x5fc>
   30830:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   30834:	ldr	x1, [x1, #3944]
   30838:	ldr	x0, [sp, #48]
   3083c:	ldr	w4, [sp, #36]
   30840:	mov	w3, wzr
   30844:	stp	x13, x12, [sp, #16]
   30848:	mov	w24, w14
   3084c:	bl	c590 <mpfr_round_near_x@plt>
   30850:	ldp	x13, x12, [sp, #16]
   30854:	mov	w14, w24
   30858:	cbz	w0, 30208 <mpfr_sin_cos@@Base+0x1a0>
   3085c:	ldr	x8, [sp, #40]
   30860:	add	x2, x21, #0x2
   30864:	ldr	x8, [x8]
   30868:	add	x8, x8, #0x1
   3086c:	cmp	x2, x8
   30870:	b.ls	30208 <mpfr_sin_cos@@Base+0x1a0>  // b.plast
   30874:	mov	w25, w0
   30878:	ldr	x0, [sp, #40]
   3087c:	ldr	w4, [sp, #36]
   30880:	mov	w3, wzr
   30884:	mov	x1, x0
   30888:	bl	c590 <mpfr_round_near_x@plt>
   3088c:	ldp	x13, x12, [sp, #16]
   30890:	mov	w14, w24
   30894:	mov	w24, w0
   30898:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3089c:	ldr	x1, [x0, #2656]
   308a0:	add	x0, x0, #0xa60
   308a4:	blr	x1
   308a8:	cbz	w24, 30208 <mpfr_sin_cos@@Base+0x1a0>
   308ac:	ldr	x8, [sp, #56]
   308b0:	ldr	x27, [sp, #40]
   308b4:	ldr	w8, [x8, x0]
   308b8:	orr	w14, w8, w14
   308bc:	str	w14, [sp, #12]
   308c0:	b	305a8 <mpfr_sin_cos@@Base+0x540>

00000000000308c4 <mpfr_sincos_fast@@Base>:
   308c4:	sub	sp, sp, #0x190
   308c8:	stp	x26, x25, [sp, #336]
   308cc:	stp	x22, x21, [sp, #368]
   308d0:	stp	x20, x19, [sp, #384]
   308d4:	mov	w25, w3
   308d8:	mov	x20, x1
   308dc:	mov	x21, x0
   308e0:	cmp	x0, x1
   308e4:	mov	x22, x2
   308e8:	stp	x29, x30, [sp, #304]
   308ec:	stp	x28, x27, [sp, #320]
   308f0:	stp	x24, x23, [sp, #352]
   308f4:	add	x29, sp, #0x130
   308f8:	b.eq	30918 <mpfr_sincos_fast@@Base+0x54>  // b.none
   308fc:	cbz	x21, 30934 <mpfr_sincos_fast@@Base+0x70>
   30900:	ldr	x19, [x21]
   30904:	cbz	x20, 30938 <mpfr_sincos_fast@@Base+0x74>
   30908:	ldr	x8, [x20]
   3090c:	cmp	x19, x8
   30910:	csel	x19, x8, x19, lt  // lt = tstop
   30914:	b	30938 <mpfr_sincos_fast@@Base+0x74>
   30918:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3091c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30920:	add	x0, x0, #0x705
   30924:	add	x2, x2, #0x716
   30928:	mov	w1, #0x247                 	// #583
   3092c:	bl	cb90 <mpfr_assert_fail@plt>
   30930:	cbnz	x21, 30900 <mpfr_sincos_fast@@Base+0x3c>
   30934:	ldr	x19, [x20]
   30938:	subs	x23, x19, #0x1
   3093c:	b.eq	30d70 <mpfr_sincos_fast@@Base+0x4ac>  // b.none
   30940:	b.le	30d78 <mpfr_sincos_fast@@Base+0x4b4>
   30944:	clz	x8, x23
   30948:	mov	w9, #0x49                  	// #73
   3094c:	sub	x8, x9, x8
   30950:	mov	x27, #0xfffffffffffffeff    	// #-257
   30954:	movk	x27, #0x7fff, lsl #48
   30958:	add	x23, x8, x19
   3095c:	cmp	x23, x27
   30960:	b.gt	30d94 <mpfr_sincos_fast@@Base+0x4d0>
   30964:	sub	x8, x23, #0x1
   30968:	add	x9, x23, #0x3e
   3096c:	cmp	x8, #0x0
   30970:	csel	x8, x9, x8, lt  // lt = tstop
   30974:	asr	x8, x8, #6
   30978:	cmp	x23, #0x201
   3097c:	add	x19, x8, #0x1
   30980:	b.lt	30994 <mpfr_sincos_fast@@Base+0xd0>  // b.tstop
   30984:	lsl	x24, x19, #4
   30988:	mov	x0, x24
   3098c:	bl	cd50 <mpfr_allocate_func@plt>
   30990:	b	309a0 <mpfr_sincos_fast@@Base+0xdc>
   30994:	add	x8, sp, #0x38
   30998:	mov	x24, xzr
   3099c:	add	x0, x8, #0x10
   309a0:	cmp	w25, #0x0
   309a4:	stp	x24, x0, [sp, #56]
   309a8:	mov	w28, #0x1                   	// #1
   309ac:	add	x8, x0, x19, lsl #3
   309b0:	str	w25, [sp, #12]
   309b4:	mov	w24, #0x40                  	// #64
   309b8:	cset	w25, eq  // eq = none
   309bc:	stur	x0, [x29, #-48]
   309c0:	stur	w28, [x29, #-64]
   309c4:	stur	x23, [x29, #-104]
   309c8:	stp	x8, x23, [x29, #-80]
   309cc:	stur	w28, [x29, #-96]
   309d0:	ldr	w8, [x22, #8]
   309d4:	cmp	w8, #0x1
   309d8:	b.lt	309fc <mpfr_sincos_fast@@Base+0x138>  // b.tstop
   309dc:	mov	w1, #0xed51                	// #60753
   309e0:	movk	w1, #0x6487, lsl #16
   309e4:	mov	x2, #0xffffffffffffffe1    	// #-31
   309e8:	mov	x0, x22
   309ec:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   309f0:	cmp	w0, #0x0
   309f4:	b.le	30ae0 <mpfr_sincos_fast@@Base+0x21c>
   309f8:	ldr	w8, [x22, #8]
   309fc:	tbnz	w8, #31, 30a90 <mpfr_sincos_fast@@Base+0x1cc>
   30a00:	sub	x0, x29, #0x28
   30a04:	mov	x1, x23
   30a08:	bl	cad0 <mpfr_init2@plt>
   30a0c:	ldr	x8, [x22, #16]
   30a10:	add	x0, sp, #0x10
   30a14:	bic	x8, x8, x8, asr #63
   30a18:	add	x1, x8, x23
   30a1c:	bl	cad0 <mpfr_init2@plt>
   30a20:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   30a24:	ldr	x1, [x0, #2704]
   30a28:	add	x0, x0, #0xa90
   30a2c:	blr	x1
   30a30:	mrs	x8, tpidr_el0
   30a34:	add	x1, x8, x0
   30a38:	add	x0, sp, #0x10
   30a3c:	mov	w2, wzr
   30a40:	bl	c3e0 <mpfr_cache@plt>
   30a44:	add	x0, sp, #0x10
   30a48:	add	x1, sp, #0x10
   30a4c:	mov	w2, #0x1                   	// #1
   30a50:	mov	w3, wzr
   30a54:	bl	c950 <mpfr_div_2ui@plt>
   30a58:	sub	x0, x29, #0x28
   30a5c:	add	x1, sp, #0x30
   30a60:	add	x3, sp, #0x10
   30a64:	mov	x2, x22
   30a68:	mov	w4, wzr
   30a6c:	bl	c560 <mpfr_remquo@plt>
   30a70:	ldur	w8, [x29, #-32]
   30a74:	tbnz	w8, #31, 30af8 <mpfr_sincos_fast@@Base+0x234>
   30a78:	sub	x0, x29, #0x48
   30a7c:	sub	x1, x29, #0x68
   30a80:	sub	x2, x29, #0x28
   30a84:	bl	30d98 <mpfr_sincos_fast@@Base+0x4d4>
   30a88:	mov	w26, w0
   30a8c:	b	30b2c <mpfr_sincos_fast@@Base+0x268>
   30a90:	mov	x1, #0xffffffffffff12af    	// #-60753
   30a94:	movk	x1, #0x9b78, lsl #16
   30a98:	mov	x2, #0xffffffffffffffe1    	// #-31
   30a9c:	mov	x0, x22
   30aa0:	bl	c430 <mpfr_cmp_si_2exp@plt>
   30aa4:	tbnz	w0, #31, 30a00 <mpfr_sincos_fast@@Base+0x13c>
   30aa8:	ldr	x8, [x22]
   30aac:	stur	w28, [x29, #-32]
   30ab0:	sub	x0, x29, #0x48
   30ab4:	sub	x1, x29, #0x68
   30ab8:	stur	x8, [x29, #-40]
   30abc:	ldr	q0, [x22, #16]
   30ac0:	sub	x2, x29, #0x28
   30ac4:	stur	q0, [x29, #-24]
   30ac8:	bl	30d98 <mpfr_sincos_fast@@Base+0x4d4>
   30acc:	ldur	w8, [x29, #-64]
   30ad0:	sxtw	x26, w0
   30ad4:	neg	w8, w8
   30ad8:	stur	w8, [x29, #-64]
   30adc:	b	30b90 <mpfr_sincos_fast@@Base+0x2cc>
   30ae0:	sub	x0, x29, #0x48
   30ae4:	sub	x1, x29, #0x68
   30ae8:	mov	x2, x22
   30aec:	bl	30d98 <mpfr_sincos_fast@@Base+0x4d4>
   30af0:	sxtw	x26, w0
   30af4:	b	30b90 <mpfr_sincos_fast@@Base+0x2cc>
   30af8:	sub	x0, x29, #0x28
   30afc:	sub	x1, x29, #0x28
   30b00:	mov	w2, wzr
   30b04:	bl	be20 <mpfr_neg@plt>
   30b08:	sub	x0, x29, #0x48
   30b0c:	sub	x1, x29, #0x68
   30b10:	sub	x2, x29, #0x28
   30b14:	bl	30d98 <mpfr_sincos_fast@@Base+0x4d4>
   30b18:	mov	w26, w0
   30b1c:	sub	x0, x29, #0x48
   30b20:	sub	x1, x29, #0x48
   30b24:	mov	w2, wzr
   30b28:	bl	be20 <mpfr_neg@plt>
   30b2c:	ldr	x8, [sp, #48]
   30b30:	sxtw	x19, w26
   30b34:	tbz	w8, #1, 30b5c <mpfr_sincos_fast@@Base+0x298>
   30b38:	sub	x0, x29, #0x48
   30b3c:	sub	x1, x29, #0x48
   30b40:	mov	w2, wzr
   30b44:	bl	be20 <mpfr_neg@plt>
   30b48:	sub	x0, x29, #0x68
   30b4c:	sub	x1, x29, #0x68
   30b50:	mov	w2, wzr
   30b54:	bl	be20 <mpfr_neg@plt>
   30b58:	ldr	x8, [sp, #48]
   30b5c:	add	x26, x19, #0x1
   30b60:	tbz	w8, #0, 30b80 <mpfr_sincos_fast@@Base+0x2bc>
   30b64:	sub	x0, x29, #0x48
   30b68:	sub	x1, x29, #0x48
   30b6c:	mov	w2, wzr
   30b70:	bl	be20 <mpfr_neg@plt>
   30b74:	sub	x0, x29, #0x48
   30b78:	sub	x1, x29, #0x68
   30b7c:	bl	c4f0 <mpfr_swap@plt>
   30b80:	sub	x0, x29, #0x28
   30b84:	bl	c110 <mpfr_clear@plt>
   30b88:	add	x0, sp, #0x10
   30b8c:	bl	c110 <mpfr_clear@plt>
   30b90:	ldur	x19, [x29, #-88]
   30b94:	cbz	x21, 30be0 <mpfr_sincos_fast@@Base+0x31c>
   30b98:	ldur	x8, [x29, #-56]
   30b9c:	add	x9, x27, #0x105
   30ba0:	cmp	x8, x9
   30ba4:	b.lt	30c2c <mpfr_sincos_fast@@Base+0x368>  // b.tstop
   30ba8:	ldur	x9, [x29, #-72]
   30bac:	sub	x10, x23, x26
   30bb0:	ldr	x11, [x21]
   30bb4:	add	x2, x10, x8
   30bb8:	sub	x8, x9, #0x1
   30bbc:	ldur	x0, [x29, #-48]
   30bc0:	add	x9, x9, #0x3e
   30bc4:	cmp	x8, #0x0
   30bc8:	csel	x8, x9, x8, lt  // lt = tstop
   30bcc:	asr	x8, x8, #6
   30bd0:	add	x1, x8, #0x1
   30bd4:	add	x3, x11, x25
   30bd8:	bl	c3d0 <mpfr_round_p@plt>
   30bdc:	cbz	w0, 30c2c <mpfr_sincos_fast@@Base+0x368>
   30be0:	cbz	x20, 30cc4 <mpfr_sincos_fast@@Base+0x400>
   30be4:	ldur	x8, [x29, #-88]
   30be8:	add	x9, x27, #0x105
   30bec:	cmp	x8, x9
   30bf0:	b.lt	30c2c <mpfr_sincos_fast@@Base+0x368>  // b.tstop
   30bf4:	ldur	x8, [x29, #-104]
   30bf8:	sub	x9, x23, x26
   30bfc:	ldr	x10, [x20]
   30c00:	add	x2, x9, x19
   30c04:	sub	x9, x8, #0x1
   30c08:	ldur	x0, [x29, #-80]
   30c0c:	add	x8, x8, #0x3e
   30c10:	cmp	x9, #0x0
   30c14:	csel	x8, x8, x9, lt  // lt = tstop
   30c18:	asr	x8, x8, #6
   30c1c:	add	x1, x8, #0x1
   30c20:	add	x3, x10, x25
   30c24:	bl	c3d0 <mpfr_round_p@plt>
   30c28:	cbnz	w0, 30cc4 <mpfr_sincos_fast@@Base+0x400>
   30c2c:	sub	x8, x27, x23
   30c30:	cmp	x24, x8
   30c34:	b.gt	30ca8 <mpfr_sincos_fast@@Base+0x3e4>
   30c38:	add	x23, x23, x24
   30c3c:	cmp	x23, #0x0
   30c40:	cinc	x8, x23, lt  // lt = tstop
   30c44:	cmp	x23, x27
   30c48:	b.gt	30d94 <mpfr_sincos_fast@@Base+0x4d0>
   30c4c:	asr	x24, x8, #1
   30c50:	sub	x8, x23, #0x1
   30c54:	add	x9, x23, #0x3e
   30c58:	cmp	x8, #0x0
   30c5c:	ldr	x1, [sp, #56]
   30c60:	csel	x8, x9, x8, lt  // lt = tstop
   30c64:	asr	x8, x8, #6
   30c68:	add	x19, x8, #0x1
   30c6c:	lsl	x2, x19, #4
   30c70:	str	x2, [sp, #56]
   30c74:	cbz	x1, 30c84 <mpfr_sincos_fast@@Base+0x3c0>
   30c78:	ldr	x0, [sp, #64]
   30c7c:	bl	c260 <mpfr_reallocate_func@plt>
   30c80:	b	30c8c <mpfr_sincos_fast@@Base+0x3c8>
   30c84:	mov	x0, x2
   30c88:	bl	cd50 <mpfr_allocate_func@plt>
   30c8c:	add	x8, x0, x19, lsl #3
   30c90:	str	x0, [sp, #64]
   30c94:	stur	x0, [x29, #-48]
   30c98:	stur	w28, [x29, #-64]
   30c9c:	stur	x23, [x29, #-104]
   30ca0:	stp	x8, x23, [x29, #-80]
   30ca4:	b	309cc <mpfr_sincos_fast@@Base+0x108>
   30ca8:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30cac:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   30cb0:	mov	w1, #0x28f                 	// #655
   30cb4:	add	x0, x0, #0x705
   30cb8:	add	x2, x2, #0x9c6
   30cbc:	bl	cb90 <mpfr_assert_fail@plt>
   30cc0:	b	30c38 <mpfr_sincos_fast@@Base+0x374>
   30cc4:	cbz	x21, 30d04 <mpfr_sincos_fast@@Base+0x440>
   30cc8:	ldr	w19, [sp, #12]
   30ccc:	ldur	w3, [x29, #-64]
   30cd0:	sub	x1, x29, #0x48
   30cd4:	mov	x0, x21
   30cd8:	mov	w2, w19
   30cdc:	bl	c6f0 <mpfr_set4@plt>
   30ce0:	mov	w21, w0
   30ce4:	cbz	x20, 30d0c <mpfr_sincos_fast@@Base+0x448>
   30ce8:	ldur	w3, [x29, #-96]
   30cec:	sub	x1, x29, #0x68
   30cf0:	mov	x0, x20
   30cf4:	mov	w2, w19
   30cf8:	bl	c6f0 <mpfr_set4@plt>
   30cfc:	mov	w19, w0
   30d00:	b	30d10 <mpfr_sincos_fast@@Base+0x44c>
   30d04:	ldr	w19, [sp, #12]
   30d08:	cbnz	x20, 30ce8 <mpfr_sincos_fast@@Base+0x424>
   30d0c:	mov	w19, wzr
   30d10:	ldr	x1, [sp, #56]
   30d14:	cbz	x1, 30d20 <mpfr_sincos_fast@@Base+0x45c>
   30d18:	ldr	x0, [sp, #64]
   30d1c:	bl	cc80 <mpfr_free_func@plt>
   30d20:	cmp	w21, #0x1
   30d24:	mov	w8, #0x1                   	// #1
   30d28:	cinc	w8, w8, lt  // lt = tstop
   30d2c:	cmp	w21, #0x0
   30d30:	mov	w9, #0x4                   	// #4
   30d34:	mov	w10, #0x8                   	// #8
   30d38:	csel	w8, wzr, w8, eq  // eq = none
   30d3c:	cmp	w19, #0x1
   30d40:	csel	w9, w10, w9, lt  // lt = tstop
   30d44:	cmp	w19, #0x0
   30d48:	ldp	x20, x19, [sp, #384]
   30d4c:	ldp	x22, x21, [sp, #368]
   30d50:	ldp	x24, x23, [sp, #352]
   30d54:	ldp	x26, x25, [sp, #336]
   30d58:	ldp	x28, x27, [sp, #320]
   30d5c:	ldp	x29, x30, [sp, #304]
   30d60:	csel	w9, wzr, w9, eq  // eq = none
   30d64:	orr	w0, w9, w8
   30d68:	add	sp, sp, #0x190
   30d6c:	ret
   30d70:	mov	w8, #0x9                   	// #9
   30d74:	b	30950 <mpfr_sincos_fast@@Base+0x8c>
   30d78:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30d7c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   30d80:	add	x0, x0, #0x705
   30d84:	add	x2, x2, #0x71d
   30d88:	mov	w1, #0x24e                 	// #590
   30d8c:	bl	cb90 <mpfr_assert_fail@plt>
   30d90:	b	30944 <mpfr_sincos_fast@@Base+0x80>
   30d94:	bl	c940 <mpfr_abort_prec_max@plt>
   30d98:	stp	x29, x30, [sp, #-96]!
   30d9c:	stp	x28, x27, [sp, #16]
   30da0:	stp	x26, x25, [sp, #32]
   30da4:	stp	x24, x23, [sp, #48]
   30da8:	stp	x22, x21, [sp, #64]
   30dac:	stp	x20, x19, [sp, #80]
   30db0:	mov	x29, sp
   30db4:	sub	sp, sp, #0x1, lsl #12
   30db8:	sub	sp, sp, #0x590
   30dbc:	stp	x0, x1, [sp]
   30dc0:	ldr	x8, [x2]
   30dc4:	ldr	x25, [x0]
   30dc8:	add	x0, sp, #0xe8
   30dcc:	mov	x19, x2
   30dd0:	mov	x1, x8
   30dd4:	bl	cad0 <mpfr_init2@plt>
   30dd8:	add	x0, sp, #0x168
   30ddc:	bl	c040 <mpfr_mpz_init@plt>
   30de0:	add	x0, sp, #0x158
   30de4:	bl	c040 <mpfr_mpz_init@plt>
   30de8:	add	x0, sp, #0x148
   30dec:	bl	c040 <mpfr_mpz_init@plt>
   30df0:	add	x0, sp, #0x138
   30df4:	bl	c040 <mpfr_mpz_init@plt>
   30df8:	add	x0, sp, #0x128
   30dfc:	bl	c040 <mpfr_mpz_init@plt>
   30e00:	add	x0, sp, #0x118
   30e04:	bl	c040 <mpfr_mpz_init@plt>
   30e08:	add	x0, sp, #0x108
   30e0c:	bl	c040 <mpfr_mpz_init@plt>
   30e10:	ldr	w3, [x19, #8]
   30e14:	add	x0, sp, #0xe8
   30e18:	mov	x1, x19
   30e1c:	mov	w2, wzr
   30e20:	bl	c6f0 <mpfr_set4@plt>
   30e24:	add	x0, sp, #0x168
   30e28:	mov	w1, #0x1                   	// #1
   30e2c:	bl	bd60 <__gmpz_set_ui@plt>
   30e30:	add	x0, sp, #0x158
   30e34:	mov	x1, xzr
   30e38:	bl	bd60 <__gmpz_set_ui@plt>
   30e3c:	add	x0, sp, #0x148
   30e40:	mov	w1, #0x1                   	// #1
   30e44:	bl	bd60 <__gmpz_set_ui@plt>
   30e48:	add	x0, sp, #0xe8
   30e4c:	bl	c760 <mpfr_sgn@plt>
   30e50:	mov	w22, wzr
   30e54:	cmp	x25, #0x1
   30e58:	mov	x21, xzr
   30e5c:	b.lt	318c0 <mpfr_sincos_fast@@Base+0xffc>  // b.tstop
   30e60:	cbz	w0, 318c0 <mpfr_sincos_fast@@Base+0xffc>
   30e64:	add	x13, sp, #0x1, lsl #12
   30e68:	add	x13, x13, #0x188
   30e6c:	add	x8, sp, #0xd88
   30e70:	add	x14, sp, #0x988
   30e74:	add	x13, x13, #0x10
   30e78:	add	x8, x8, #0x10
   30e7c:	add	x9, sp, #0x178
   30e80:	stp	x8, x13, [sp, #32]
   30e84:	add	x8, x14, #0x10
   30e88:	add	x10, sp, #0x378
   30e8c:	stp	x8, x25, [sp, #104]
   30e90:	add	x8, x9, #0x8
   30e94:	add	x11, sp, #0x578
   30e98:	str	x8, [sp, #168]
   30e9c:	sub	x8, x10, #0x8
   30ea0:	add	x12, sp, #0x778
   30ea4:	str	x8, [sp, #96]
   30ea8:	sub	x8, x11, #0x8
   30eac:	mov	x21, xzr
   30eb0:	mov	x22, xzr
   30eb4:	lsr	x24, x25, #1
   30eb8:	mov	w23, #0x1                   	// #1
   30ebc:	str	x8, [sp, #88]
   30ec0:	sub	x8, x12, #0x8
   30ec4:	mov	w20, #0x1                   	// #1
   30ec8:	str	x8, [sp, #80]
   30ecc:	str	x24, [sp, #16]
   30ed0:	cmp	x20, x24
   30ed4:	lsl	x19, x20, #1
   30ed8:	b.le	30f28 <mpfr_sincos_fast@@Base+0x664>
   30edc:	add	x0, sp, #0x128
   30ee0:	add	x1, sp, #0xe8
   30ee4:	bl	cb10 <mpfr_get_z_2exp@plt>
   30ee8:	mvn	x8, x0
   30eec:	add	x0, sp, #0x138
   30ef0:	mov	w1, #0x1                   	// #1
   30ef4:	add	x28, x20, x8
   30ef8:	bl	bd60 <__gmpz_set_ui@plt>
   30efc:	add	x0, sp, #0x118
   30f00:	mov	w1, #0x1                   	// #1
   30f04:	bl	bd60 <__gmpz_set_ui@plt>
   30f08:	add	x0, sp, #0x118
   30f0c:	add	x1, sp, #0x118
   30f10:	mov	x2, x28
   30f14:	bl	c290 <__gmpz_mul_2exp@plt>
   30f18:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   30f1c:	str	w23, [sp, #240]
   30f20:	str	x8, [sp, #248]
   30f24:	b	3169c <mpfr_sincos_fast@@Base+0xdd8>
   30f28:	add	x0, sp, #0xe8
   30f2c:	add	x1, sp, #0xe8
   30f30:	mov	x2, x20
   30f34:	mov	w3, wzr
   30f38:	bl	c320 <mpfr_mul_2ui@plt>
   30f3c:	add	x0, sp, #0x108
   30f40:	add	x1, sp, #0xe8
   30f44:	mov	w2, #0x1                   	// #1
   30f48:	bl	beb0 <mpfr_get_z@plt>
   30f4c:	ldr	w8, [sp, #268]
   30f50:	cbz	w8, 31828 <mpfr_sincos_fast@@Base+0xf64>
   30f54:	add	x0, sp, #0xe8
   30f58:	add	x1, sp, #0xe8
   30f5c:	add	x2, sp, #0x108
   30f60:	mov	w3, wzr
   30f64:	bl	be10 <mpfr_sub_z@plt>
   30f68:	ldr	w8, [sp, #268]
   30f6c:	cbz	w8, 31848 <mpfr_sincos_fast@@Base+0xf84>
   30f70:	add	x0, sp, #0x978
   30f74:	stp	x21, x20, [sp, #56]
   30f78:	mov	x21, x24
   30f7c:	str	x19, [sp, #72]
   30f80:	sub	x26, x19, #0x1
   30f84:	bl	c040 <mpfr_mpz_init@plt>
   30f88:	add	x0, sp, #0x108
   30f8c:	mov	x1, xzr
   30f90:	bl	bb50 <__gmpz_scan1@plt>
   30f94:	mov	x19, x0
   30f98:	add	x0, sp, #0x978
   30f9c:	add	x1, sp, #0x108
   30fa0:	mov	x2, x19
   30fa4:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   30fa8:	add	x0, sp, #0x978
   30fac:	add	x1, sp, #0x978
   30fb0:	add	x2, sp, #0x978
   30fb4:	bl	c090 <__gmpz_mul@plt>
   30fb8:	add	x0, sp, #0x1, lsl #12
   30fbc:	sub	x19, x26, x19
   30fc0:	add	x0, x0, #0x188
   30fc4:	lsl	x24, x19, #1
   30fc8:	bl	c040 <mpfr_mpz_init@plt>
   30fcc:	add	x0, sp, #0x1, lsl #12
   30fd0:	add	x0, x0, #0x188
   30fd4:	mov	w1, #0x6                   	// #6
   30fd8:	bl	bd60 <__gmpz_set_ui@plt>
   30fdc:	add	x0, sp, #0xd88
   30fe0:	bl	c040 <mpfr_mpz_init@plt>
   30fe4:	add	x0, sp, #0xd88
   30fe8:	mov	w1, #0x6                   	// #6
   30fec:	bl	bd60 <__gmpz_set_ui@plt>
   30ff0:	add	x0, sp, #0x988
   30ff4:	bl	c040 <mpfr_mpz_init@plt>
   30ff8:	add	x0, sp, #0x988
   30ffc:	add	x1, sp, #0x978
   31000:	bl	c050 <__gmpz_set@plt>
   31004:	ldr	x0, [sp, #40]
   31008:	bl	c040 <mpfr_mpz_init@plt>
   3100c:	ldr	x0, [sp, #32]
   31010:	bl	c040 <mpfr_mpz_init@plt>
   31014:	ldr	x20, [sp, #104]
   31018:	mov	x0, x20
   3101c:	bl	c040 <mpfr_mpz_init@plt>
   31020:	add	x1, sp, #0x978
   31024:	add	x2, sp, #0x978
   31028:	mov	x0, x20
   3102c:	bl	c090 <__gmpz_mul@plt>
   31030:	ldr	w8, [sp, #2460]
   31034:	ldr	x9, [sp, #2464]
   31038:	add	x0, sp, #0x1, lsl #12
   3103c:	add	x1, sp, #0x1, lsl #12
   31040:	cmp	w8, #0x0
   31044:	cneg	w8, w8, mi  // mi = first
   31048:	add	x9, x9, w8, uxtw #3
   3104c:	ldur	x9, [x9, #-8]
   31050:	lsl	x8, x8, #6
   31054:	add	x0, x0, #0x188
   31058:	add	x1, x1, #0x188
   3105c:	clz	x9, x9
   31060:	sub	x20, x8, x9
   31064:	mov	x2, x24
   31068:	str	x20, [sp, #384]
   3106c:	str	x24, [sp, #192]
   31070:	bl	c290 <__gmpz_mul_2exp@plt>
   31074:	add	x0, sp, #0x1, lsl #12
   31078:	add	x1, sp, #0x1, lsl #12
   3107c:	add	x0, x0, #0x188
   31080:	add	x1, x1, #0x188
   31084:	add	x2, sp, #0x978
   31088:	bl	be90 <__gmpz_sub@plt>
   3108c:	ldr	w8, [sp, #2428]
   31090:	ldr	w10, [sp, #268]
   31094:	ldr	x9, [sp, #2432]
   31098:	ldr	x11, [sp, #272]
   3109c:	cmp	w8, #0x0
   310a0:	cneg	w8, w8, mi  // mi = first
   310a4:	cmp	w10, #0x0
   310a8:	str	x23, [sp, #1912]
   310ac:	add	x9, x9, w8, uxtw #3
   310b0:	cneg	w10, w10, mi  // mi = first
   310b4:	ldur	x9, [x9, #-8]
   310b8:	add	x11, x11, w10, uxtw #3
   310bc:	ldur	x11, [x11, #-8]
   310c0:	add	x12, x26, x19, lsl #1
   310c4:	clz	x9, x9
   310c8:	add	x9, x12, x9
   310cc:	clz	x11, x11
   310d0:	sub	x10, x11, x10, lsl #6
   310d4:	sub	x8, x9, x8, lsl #6
   310d8:	add	x8, x8, x10
   310dc:	cmp	x8, x25
   310e0:	str	x26, [sp, #48]
   310e4:	str	x8, [sp, #1400]
   310e8:	b.ge	314e8 <mpfr_sincos_fast@@Base+0xc24>  // b.tcont
   310ec:	mov	w24, wzr
   310f0:	lsl	x8, x19, #2
   310f4:	mov	w9, #0x2                   	// #2
   310f8:	mov	w26, #0x2                   	// #2
   310fc:	str	x22, [sp, #24]
   31100:	stp	x8, x20, [sp, #128]
   31104:	sxtw	x20, w24
   31108:	add	x21, x20, #0x2
   3110c:	mov	x28, x25
   31110:	cmp	w21, w26
   31114:	add	w24, w24, #0x1
   31118:	str	x9, [sp, #152]
   3111c:	b.ge	31138 <mpfr_sincos_fast@@Base+0x874>  // b.tcont
   31120:	ldr	x25, [sp, #136]
   31124:	str	w26, [sp, #148]
   31128:	sxtw	x22, w24
   3112c:	add	x21, sp, #0x378
   31130:	add	x26, sp, #0xd88
   31134:	b	311b4 <mpfr_sincos_fast@@Base+0x8f0>
   31138:	add	x8, sp, #0x1, lsl #12
   3113c:	add	x8, x8, #0x188
   31140:	add	w26, w26, #0x1
   31144:	add	x0, x8, x21, lsl #4
   31148:	str	w26, [sp, #148]
   3114c:	bl	c040 <mpfr_mpz_init@plt>
   31150:	add	x26, sp, #0xd88
   31154:	add	x0, x26, x21, lsl #4
   31158:	bl	c040 <mpfr_mpz_init@plt>
   3115c:	add	x25, sp, #0x988
   31160:	add	x19, x25, x21, lsl #4
   31164:	mov	x0, x19
   31168:	bl	c040 <mpfr_mpz_init@plt>
   3116c:	add	x1, x25, w24, sxtw #4
   31170:	mov	x0, x19
   31174:	mov	x2, x1
   31178:	sxtw	x22, w24
   3117c:	bl	c090 <__gmpz_mul@plt>
   31180:	ldr	w8, [x19, #4]
   31184:	ldr	x9, [x19, #8]
   31188:	cmp	w8, #0x0
   3118c:	cneg	w8, w8, mi  // mi = first
   31190:	add	x9, x9, w8, uxtw #3
   31194:	ldur	x9, [x9, #-8]
   31198:	lsl	x8, x8, #6
   3119c:	clz	x9, x9
   311a0:	sub	x8, x8, x9
   311a4:	add	x9, sp, #0x178
   311a8:	str	x8, [x9, x21, lsl #3]
   311ac:	ldr	x25, [sp, #384]
   311b0:	add	x21, sp, #0x378
   311b4:	add	x8, sp, #0x778
   311b8:	str	x22, [sp, #160]
   311bc:	str	x23, [x8, x22, lsl #3]
   311c0:	add	x19, x26, x22, lsl #4
   311c4:	ldr	x22, [sp, #152]
   311c8:	mov	x0, x19
   311cc:	lsl	x23, x22, #1
   311d0:	orr	x1, x23, #0x2
   311d4:	bl	bd60 <__gmpz_set_ui@plt>
   311d8:	orr	x2, x23, #0x3
   311dc:	mov	x0, x19
   311e0:	mov	x1, x19
   311e4:	bl	c1a0 <__gmpz_mul_ui@plt>
   311e8:	ldr	x9, [sp, #160]
   311ec:	add	x8, sp, #0x1, lsl #12
   311f0:	ldr	x2, [sp, #192]
   311f4:	add	x8, x8, #0x188
   311f8:	add	x26, x8, x9, lsl #4
   311fc:	add	x27, sp, #0x1, lsl #12
   31200:	mov	x0, x26
   31204:	mov	x1, x19
   31208:	add	x27, x27, #0x188
   3120c:	bl	c290 <__gmpz_mul_2exp@plt>
   31210:	add	x2, sp, #0x978
   31214:	mov	x0, x26
   31218:	mov	x1, x26
   3121c:	bl	be90 <__gmpz_sub@plt>
   31220:	mov	x0, x19
   31224:	mov	x1, x19
   31228:	mov	x2, x23
   3122c:	bl	c1a0 <__gmpz_mul_ui@plt>
   31230:	mov	w2, #0x1                   	// #1
   31234:	bfi	x2, x22, #1, #63
   31238:	ldr	x22, [sp, #160]
   3123c:	mov	x0, x19
   31240:	mov	x1, x19
   31244:	bl	c1a0 <__gmpz_mul_ui@plt>
   31248:	ldr	w8, [x19, #4]
   3124c:	ldr	x9, [x19, #8]
   31250:	mvn	x10, x25
   31254:	str	x25, [sp, #136]
   31258:	cmp	w8, #0x0
   3125c:	cneg	w8, w8, mi  // mi = first
   31260:	add	x9, x9, w8, uxtw #3
   31264:	ldur	x9, [x9, #-8]
   31268:	lsl	x8, x8, #6
   3126c:	clz	x9, x9
   31270:	sub	x8, x8, x9
   31274:	ldr	x9, [sp, #128]
   31278:	add	x9, x9, x10
   3127c:	add	x8, x9, x8
   31280:	add	x9, sp, #0x578
   31284:	str	x8, [x9, x22, lsl #3]
   31288:	cbz	w24, 31294 <mpfr_sincos_fast@@Base+0x9d0>
   3128c:	ldr	x9, [x21, x20, lsl #3]
   31290:	add	x8, x9, x8
   31294:	ldr	x9, [sp, #152]
   31298:	mov	x25, x28
   3129c:	str	x8, [x21, x22, lsl #3]
   312a0:	add	x9, x9, #0x2
   312a4:	tbnz	w9, #1, 31400 <mpfr_sincos_fast@@Base+0xb3c>
   312a8:	lsl	x8, x22, #4
   312ac:	str	x8, [sp, #184]
   312b0:	sub	x8, x22, #0x1
   312b4:	str	x8, [sp, #176]
   312b8:	ldp	x8, x26, [sp, #96]
   312bc:	add	x20, sp, #0x1, lsl #12
   312c0:	mov	x27, xzr
   312c4:	add	x20, x20, #0x188
   312c8:	add	x10, x8, x22, lsl #3
   312cc:	ldr	x8, [sp, #88]
   312d0:	add	x21, sp, #0xd88
   312d4:	mov	x11, x9
   312d8:	str	x9, [sp, #120]
   312dc:	add	x28, x8, x22, lsl #3
   312e0:	ldr	x8, [sp, #80]
   312e4:	add	x22, x8, x22, lsl #3
   312e8:	ldr	x24, [sp, #184]
   312ec:	lsr	x8, x11, #1
   312f0:	mov	x2, x26
   312f4:	str	x10, [sp, #224]
   312f8:	add	x19, x20, x24
   312fc:	mov	x0, x19
   31300:	mov	x1, x19
   31304:	add	x25, x27, #0x1
   31308:	stp	x8, x11, [sp, #200]
   3130c:	bl	c090 <__gmpz_mul@plt>
   31310:	sub	x23, x19, #0x10
   31314:	add	x24, x21, x24
   31318:	mov	x0, x23
   3131c:	mov	x1, x23
   31320:	mov	x2, x24
   31324:	bl	c090 <__gmpz_mul@plt>
   31328:	ldr	x8, [sp, #192]
   3132c:	str	x25, [sp, #216]
   31330:	mov	x0, x23
   31334:	mov	x1, x23
   31338:	lsl	x25, x8, x25
   3133c:	mov	x2, x25
   31340:	bl	c290 <__gmpz_mul_2exp@plt>
   31344:	mov	x0, x23
   31348:	mov	x1, x23
   3134c:	mov	x2, x19
   31350:	bl	ca10 <__gmpz_add@plt>
   31354:	sub	x0, x24, #0x10
   31358:	mov	x1, x0
   3135c:	mov	x2, x24
   31360:	bl	c090 <__gmpz_mul@plt>
   31364:	ldr	x8, [x22]
   31368:	ldr	w9, [x24, #4]
   3136c:	ldr	x10, [x24, #8]
   31370:	ldr	x11, [sp, #168]
   31374:	add	x8, x8, #0x1
   31378:	cmp	w9, #0x0
   3137c:	str	x8, [x22]
   31380:	cneg	w8, w9, mi  // mi = first
   31384:	add	x9, x10, w8, uxtw #3
   31388:	ldur	x9, [x9, #-8]
   3138c:	ldr	x11, [x11, x27, lsl #3]
   31390:	ldr	x10, [x28]
   31394:	clz	x9, x9
   31398:	mvn	x11, x11
   3139c:	sub	x9, x25, x9
   313a0:	add	x9, x9, x11
   313a4:	add	x8, x9, x8, lsl #6
   313a8:	ldr	x9, [sp, #176]
   313ac:	add	x8, x8, x10
   313b0:	ldr	x10, [sp, #224]
   313b4:	str	x8, [x28]
   313b8:	cmp	x9, x27
   313bc:	b.eq	313c8 <mpfr_sincos_fast@@Base+0xb04>  // b.none
   313c0:	ldur	x9, [x10, #-8]
   313c4:	add	x8, x9, x8
   313c8:	ldp	x11, x9, [sp, #200]
   313cc:	ldr	x27, [sp, #216]
   313d0:	str	x8, [x10], #-8
   313d4:	add	x26, x26, #0x10
   313d8:	sub	x20, x20, #0x10
   313dc:	sub	x21, x21, #0x10
   313e0:	sub	x28, x28, #0x8
   313e4:	sub	x22, x22, #0x8
   313e8:	tbz	w9, #2, 312e8 <mpfr_sincos_fast@@Base+0xa24>
   313ec:	ldr	x9, [sp, #160]
   313f0:	sub	w24, w9, w27
   313f4:	ldp	x25, x9, [sp, #112]
   313f8:	add	x27, sp, #0x1, lsl #12
   313fc:	add	x27, x27, #0x188
   31400:	ldr	w26, [sp, #148]
   31404:	cmp	x8, x25
   31408:	mov	w23, #0x1                   	// #1
   3140c:	b.lt	31104 <mpfr_sincos_fast@@Base+0x840>  // b.tstop
   31410:	ldr	x8, [sp, #152]
   31414:	cmp	w24, #0x1
   31418:	orr	x11, x8, #0x1
   3141c:	b.lt	31500 <mpfr_sincos_fast@@Base+0xc3c>  // b.tstop
   31420:	add	x23, x27, w24, uxtw #4
   31424:	add	x9, sp, #0xd88
   31428:	ldr	x27, [sp, #192]
   3142c:	add	x26, x9, w24, uxtw #4
   31430:	add	x9, sp, #0x778
   31434:	mov	w8, w24
   31438:	add	x25, x9, w24, uxtw #3
   3143c:	mov	x21, xzr
   31440:	mov	w20, #0x1                   	// #1
   31444:	add	x22, x8, #0x1
   31448:	mov	x24, x25
   3144c:	add	x28, sp, #0x988
   31450:	str	x11, [sp, #224]
   31454:	ldr	x8, [x24, #-8]!
   31458:	mov	x0, x23
   3145c:	mov	x1, x23
   31460:	add	x2, x28, x8, lsl #4
   31464:	bl	c090 <__gmpz_mul@plt>
   31468:	sub	x19, x23, #0x10
   3146c:	mov	x0, x19
   31470:	mov	x1, x19
   31474:	mov	x2, x26
   31478:	bl	c090 <__gmpz_mul@plt>
   3147c:	ldr	x8, [x25]
   31480:	mov	x0, x19
   31484:	mov	x1, x19
   31488:	lsl	x8, x20, x8
   3148c:	add	x21, x8, x21
   31490:	mul	x2, x21, x27
   31494:	bl	c290 <__gmpz_mul_2exp@plt>
   31498:	mov	x0, x19
   3149c:	mov	x1, x19
   314a0:	mov	x2, x23
   314a4:	bl	ca10 <__gmpz_add@plt>
   314a8:	sub	x23, x26, #0x10
   314ac:	mov	x0, x23
   314b0:	mov	x1, x23
   314b4:	mov	x2, x26
   314b8:	bl	c090 <__gmpz_mul@plt>
   314bc:	sub	x22, x22, #0x1
   314c0:	cmp	x22, #0x1
   314c4:	mov	x25, x24
   314c8:	mov	x26, x23
   314cc:	mov	x23, x19
   314d0:	b.gt	31454 <mpfr_sincos_fast@@Base+0xb90>
   314d4:	ldp	x10, x21, [sp, #48]
   314d8:	ldp	x24, x22, [sp, #16]
   314dc:	ldr	w26, [sp, #148]
   314e0:	ldr	x11, [sp, #224]
   314e4:	b	3150c <mpfr_sincos_fast@@Base+0xc48>
   314e8:	ldr	x27, [sp, #192]
   314ec:	mov	x24, x21
   314f0:	ldp	x10, x21, [sp, #48]
   314f4:	mov	w26, #0x2                   	// #2
   314f8:	mov	w11, #0x1                   	// #1
   314fc:	b	3150c <mpfr_sincos_fast@@Base+0xc48>
   31500:	ldp	x10, x21, [sp, #48]
   31504:	ldp	x24, x22, [sp, #16]
   31508:	ldr	x27, [sp, #192]
   3150c:	ldr	w8, [sp, #3468]
   31510:	ldr	x9, [sp, #3472]
   31514:	ldr	x25, [sp, #112]
   31518:	add	x0, sp, #0x138
   3151c:	cmp	w8, #0x0
   31520:	cneg	w8, w8, mi  // mi = first
   31524:	add	x9, x9, w8, uxtw #3
   31528:	ldur	x9, [x9, #-8]
   3152c:	lsl	x8, x8, #6
   31530:	add	x1, sp, #0xd88
   31534:	madd	x20, x11, x27, x10
   31538:	clz	x9, x9
   3153c:	sub	x8, x8, x9
   31540:	subs	x8, x8, x25
   31544:	csel	x19, x8, xzr, gt
   31548:	mov	x2, x19
   3154c:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   31550:	ldr	w8, [sp, #4492]
   31554:	ldr	x9, [sp, #4496]
   31558:	add	x20, x20, x19
   3155c:	add	x0, sp, #0x1, lsl #12
   31560:	cmp	w8, #0x0
   31564:	cneg	w8, w8, mi  // mi = first
   31568:	add	x9, x9, w8, uxtw #3
   3156c:	ldur	x9, [x9, #-8]
   31570:	lsl	x8, x8, #6
   31574:	add	x1, sp, #0x1, lsl #12
   31578:	add	x0, x0, #0x188
   3157c:	clz	x9, x9
   31580:	sub	x8, x8, x9
   31584:	subs	x8, x8, x25
   31588:	csel	x19, x8, xzr, gt
   3158c:	add	x1, x1, #0x188
   31590:	mov	x2, x19
   31594:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   31598:	add	x1, sp, #0x1, lsl #12
   3159c:	add	x0, sp, #0x128
   315a0:	add	x1, x1, #0x188
   315a4:	add	x2, sp, #0x108
   315a8:	sub	x20, x20, x19
   315ac:	bl	c090 <__gmpz_mul@plt>
   315b0:	ldr	w8, [sp, #300]
   315b4:	ldr	x9, [sp, #304]
   315b8:	add	x0, sp, #0x128
   315bc:	add	x1, sp, #0x128
   315c0:	cmp	w8, #0x0
   315c4:	cneg	w8, w8, mi  // mi = first
   315c8:	add	x9, x9, w8, uxtw #3
   315cc:	ldur	x9, [x9, #-8]
   315d0:	lsl	x8, x8, #6
   315d4:	clz	x9, x9
   315d8:	sub	x8, x8, x9
   315dc:	subs	x8, x8, x25
   315e0:	csel	x19, x8, xzr, gt
   315e4:	mov	x2, x19
   315e8:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   315ec:	add	x0, sp, #0x978
   315f0:	sub	x28, x20, x19
   315f4:	bl	c210 <mpfr_mpz_clear@plt>
   315f8:	cmp	w26, #0x1
   315fc:	b.lt	31640 <mpfr_sincos_fast@@Base+0xd7c>  // b.tstop
   31600:	add	x19, sp, #0x1, lsl #12
   31604:	mov	w20, w26
   31608:	add	x23, sp, #0x988
   3160c:	add	x26, sp, #0xd88
   31610:	add	x19, x19, #0x188
   31614:	mov	x0, x19
   31618:	bl	c210 <mpfr_mpz_clear@plt>
   3161c:	mov	x0, x26
   31620:	bl	c210 <mpfr_mpz_clear@plt>
   31624:	mov	x0, x23
   31628:	bl	c210 <mpfr_mpz_clear@plt>
   3162c:	subs	x20, x20, #0x1
   31630:	add	x23, x23, #0x10
   31634:	add	x26, x26, #0x10
   31638:	add	x19, x19, #0x10
   3163c:	b.ne	31614 <mpfr_sincos_fast@@Base+0xd50>  // b.any
   31640:	add	x0, sp, #0x138
   31644:	mov	w1, #0x2                   	// #2
   31648:	bl	cbb0 <__gmpz_sizeinbase@plt>
   3164c:	add	x8, x0, x28
   31650:	cmp	x8, x25
   31654:	b.cc	31874 <mpfr_sincos_fast@@Base+0xfb0>  // b.lo, b.ul, b.last
   31658:	add	x0, sp, #0x118
   3165c:	add	x1, sp, #0x138
   31660:	add	x2, sp, #0x138
   31664:	bl	c090 <__gmpz_mul@plt>
   31668:	lsl	x2, x28, #1
   3166c:	add	x0, sp, #0x118
   31670:	add	x1, sp, #0x118
   31674:	bl	c290 <__gmpz_mul_2exp@plt>
   31678:	add	x0, sp, #0x118
   3167c:	add	x1, sp, #0x128
   31680:	add	x2, sp, #0x128
   31684:	bl	c8d0 <__gmpz_submul@plt>
   31688:	add	x0, sp, #0x118
   3168c:	add	x1, sp, #0x118
   31690:	bl	bd10 <__gmpz_sqrt@plt>
   31694:	ldp	x20, x19, [sp, #64]
   31698:	mov	w23, #0x1                   	// #1
   3169c:	cmp	x20, #0x1
   316a0:	b.ne	316d0 <mpfr_sincos_fast@@Base+0xe0c>  // b.any
   316a4:	add	x0, sp, #0x168
   316a8:	add	x1, sp, #0x138
   316ac:	bl	c180 <__gmpz_swap@plt>
   316b0:	add	x0, sp, #0x158
   316b4:	add	x1, sp, #0x128
   316b8:	bl	c180 <__gmpz_swap@plt>
   316bc:	add	x0, sp, #0x148
   316c0:	add	x1, sp, #0x118
   316c4:	bl	c180 <__gmpz_swap@plt>
   316c8:	mov	x21, x28
   316cc:	b	31828 <mpfr_sincos_fast@@Base+0xf64>
   316d0:	add	x0, sp, #0x108
   316d4:	add	x1, sp, #0x158
   316d8:	add	x2, sp, #0x148
   316dc:	bl	ca10 <__gmpz_add@plt>
   316e0:	add	x0, sp, #0x148
   316e4:	add	x1, sp, #0x148
   316e8:	add	x2, sp, #0x118
   316ec:	bl	c090 <__gmpz_mul@plt>
   316f0:	add	x0, sp, #0x118
   316f4:	add	x1, sp, #0x118
   316f8:	add	x2, sp, #0x128
   316fc:	bl	ca10 <__gmpz_add@plt>
   31700:	add	x0, sp, #0x128
   31704:	add	x1, sp, #0x158
   31708:	add	x2, sp, #0x128
   3170c:	bl	c090 <__gmpz_mul@plt>
   31710:	add	x0, sp, #0x108
   31714:	add	x1, sp, #0x108
   31718:	add	x2, sp, #0x118
   3171c:	bl	c090 <__gmpz_mul@plt>
   31720:	add	x0, sp, #0x158
   31724:	add	x1, sp, #0x108
   31728:	add	x2, sp, #0x128
   3172c:	bl	be90 <__gmpz_sub@plt>
   31730:	add	x0, sp, #0x158
   31734:	add	x1, sp, #0x158
   31738:	add	x2, sp, #0x148
   3173c:	bl	be90 <__gmpz_sub@plt>
   31740:	add	x0, sp, #0x148
   31744:	add	x1, sp, #0x148
   31748:	add	x2, sp, #0x128
   3174c:	bl	be90 <__gmpz_sub@plt>
   31750:	add	x0, sp, #0x168
   31754:	add	x1, sp, #0x168
   31758:	add	x2, sp, #0x138
   3175c:	bl	c090 <__gmpz_mul@plt>
   31760:	ldr	w8, [sp, #364]
   31764:	ldr	x9, [sp, #368]
   31768:	mov	x26, x19
   3176c:	add	x0, sp, #0x168
   31770:	cmp	w8, #0x0
   31774:	cneg	w8, w8, mi  // mi = first
   31778:	add	x9, x9, w8, uxtw #3
   3177c:	ldur	x9, [x9, #-8]
   31780:	lsl	x8, x8, #6
   31784:	add	x1, sp, #0x168
   31788:	add	x20, x28, x21
   3178c:	clz	x9, x9
   31790:	sub	x8, x8, x9
   31794:	subs	x8, x8, x25
   31798:	csel	x19, x8, xzr, gt
   3179c:	mov	x2, x19
   317a0:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   317a4:	ldr	w8, [sp, #348]
   317a8:	ldr	w10, [sp, #332]
   317ac:	ldr	x9, [sp, #352]
   317b0:	ldr	x11, [sp, #336]
   317b4:	cmp	w8, #0x0
   317b8:	cneg	w8, w8, mi  // mi = first
   317bc:	cmp	w10, #0x0
   317c0:	add	x9, x9, w8, uxtw #3
   317c4:	cneg	w10, w10, mi  // mi = first
   317c8:	ldur	x9, [x9, #-8]
   317cc:	add	x11, x11, w10, uxtw #3
   317d0:	ldur	x11, [x11, #-8]
   317d4:	lsl	x8, x8, #6
   317d8:	clz	x9, x9
   317dc:	sub	x8, x8, x9
   317e0:	clz	x9, x11
   317e4:	lsl	x10, x10, #6
   317e8:	sub	x9, x10, x9
   317ec:	cmp	x8, x9
   317f0:	csel	x8, x8, x9, cc  // cc = lo, ul, last
   317f4:	subs	x8, x8, x25
   317f8:	add	x20, x20, x19
   317fc:	csel	x19, xzr, x8, cc  // cc = lo, ul, last
   31800:	add	x0, sp, #0x158
   31804:	add	x1, sp, #0x158
   31808:	mov	x2, x19
   3180c:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   31810:	add	x0, sp, #0x148
   31814:	add	x1, sp, #0x148
   31818:	mov	x2, x19
   3181c:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   31820:	sub	x21, x20, x19
   31824:	mov	x19, x26
   31828:	add	x0, sp, #0xe8
   3182c:	add	x22, x22, #0x1
   31830:	bl	c760 <mpfr_sgn@plt>
   31834:	cmp	x19, x25
   31838:	b.gt	31890 <mpfr_sincos_fast@@Base+0xfcc>
   3183c:	mov	x20, x19
   31840:	cbnz	w0, 30ed0 <mpfr_sincos_fast@@Base+0x60c>
   31844:	b	31890 <mpfr_sincos_fast@@Base+0xfcc>
   31848:	add	x0, sp, #0x138
   3184c:	mov	w1, #0x1                   	// #1
   31850:	bl	bd60 <__gmpz_set_ui@plt>
   31854:	add	x0, sp, #0x128
   31858:	mov	w1, #0x1                   	// #1
   3185c:	bl	bd60 <__gmpz_set_ui@plt>
   31860:	add	x0, sp, #0x118
   31864:	mov	w1, #0x1                   	// #1
   31868:	bl	bd60 <__gmpz_set_ui@plt>
   3186c:	mov	x28, xzr
   31870:	b	3169c <mpfr_sincos_fast@@Base+0xdd8>
   31874:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   31878:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3187c:	mov	w1, #0x1be                 	// #446
   31880:	add	x0, x0, #0x705
   31884:	add	x2, x2, #0x725
   31888:	bl	cb90 <mpfr_assert_fail@plt>
   3188c:	b	31658 <mpfr_sincos_fast@@Base+0xd94>
   31890:	mov	w8, #0xb                   	// #11
   31894:	mul	x8, x22, x8
   31898:	cmp	x8, #0x2
   3189c:	b.cc	318bc <mpfr_sincos_fast@@Base+0xff8>  // b.lo, b.ul, b.last
   318a0:	mov	w22, wzr
   318a4:	add	x9, x8, #0x1
   318a8:	lsr	x8, x9, #1
   318ac:	cmp	x9, #0x3
   318b0:	add	w22, w22, #0x1
   318b4:	b.hi	318a4 <mpfr_sincos_fast@@Base+0xfe0>  // b.pmore
   318b8:	b	318c0 <mpfr_sincos_fast@@Base+0xffc>
   318bc:	mov	w22, wzr
   318c0:	ldr	x19, [sp]
   318c4:	add	x1, sp, #0x158
   318c8:	mov	w2, wzr
   318cc:	mov	x0, x19
   318d0:	bl	c2b0 <mpfr_set_z@plt>
   318d4:	add	x2, sp, #0x168
   318d8:	mov	x0, x19
   318dc:	mov	x1, x19
   318e0:	mov	w3, wzr
   318e4:	bl	cce0 <mpfr_div_z@plt>
   318e8:	mov	x0, x19
   318ec:	mov	x1, x19
   318f0:	mov	x2, x21
   318f4:	mov	w3, wzr
   318f8:	bl	c950 <mpfr_div_2ui@plt>
   318fc:	ldr	x19, [sp, #8]
   31900:	add	x1, sp, #0x148
   31904:	mov	w2, wzr
   31908:	mov	x0, x19
   3190c:	bl	c2b0 <mpfr_set_z@plt>
   31910:	add	x2, sp, #0x168
   31914:	mov	x0, x19
   31918:	mov	x1, x19
   3191c:	mov	w3, wzr
   31920:	bl	cce0 <mpfr_div_z@plt>
   31924:	mov	x0, x19
   31928:	mov	x1, x19
   3192c:	mov	x2, x21
   31930:	mov	w3, wzr
   31934:	bl	c950 <mpfr_div_2ui@plt>
   31938:	add	x0, sp, #0x168
   3193c:	bl	c210 <mpfr_mpz_clear@plt>
   31940:	add	x0, sp, #0x158
   31944:	bl	c210 <mpfr_mpz_clear@plt>
   31948:	add	x0, sp, #0x148
   3194c:	bl	c210 <mpfr_mpz_clear@plt>
   31950:	add	x0, sp, #0x138
   31954:	bl	c210 <mpfr_mpz_clear@plt>
   31958:	add	x0, sp, #0x128
   3195c:	bl	c210 <mpfr_mpz_clear@plt>
   31960:	add	x0, sp, #0x118
   31964:	bl	c210 <mpfr_mpz_clear@plt>
   31968:	add	x0, sp, #0x108
   3196c:	bl	c210 <mpfr_mpz_clear@plt>
   31970:	add	x0, sp, #0xe8
   31974:	bl	c110 <mpfr_clear@plt>
   31978:	mov	w0, w22
   3197c:	add	sp, sp, #0x1, lsl #12
   31980:	add	sp, sp, #0x590
   31984:	ldp	x20, x19, [sp, #80]
   31988:	ldp	x22, x21, [sp, #64]
   3198c:	ldp	x24, x23, [sp, #48]
   31990:	ldp	x26, x25, [sp, #32]
   31994:	ldp	x28, x27, [sp, #16]
   31998:	ldp	x29, x30, [sp], #96
   3199c:	ret

00000000000319a0 <mpfr_set_nan@@Base>:
   319a0:	stp	x29, x30, [sp, #-16]!
   319a4:	mov	x8, #0x2                   	// #2
   319a8:	movk	x8, #0x8000, lsl #48
   319ac:	mov	x29, sp
   319b0:	str	x8, [x0, #16]
   319b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   319b8:	ldr	x1, [x0, #2656]
   319bc:	add	x0, x0, #0xa60
   319c0:	blr	x1
   319c4:	mrs	x8, tpidr_el0
   319c8:	ldr	w9, [x8, x0]
   319cc:	orr	w9, w9, #0x4
   319d0:	str	w9, [x8, x0]
   319d4:	ldp	x29, x30, [sp], #16
   319d8:	ret

00000000000319dc <mpfr_set_inf@@Base>:
   319dc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   319e0:	cmp	w1, #0x0
   319e4:	mov	w9, #0x1                   	// #1
   319e8:	str	x8, [x0, #16]
   319ec:	cneg	w8, w9, lt  // lt = tstop
   319f0:	str	w8, [x0, #8]
   319f4:	ret

00000000000319f8 <mpfr_set_zero@@Base>:
   319f8:	mov	w8, #0x1                   	// #1
   319fc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   31a00:	str	w8, [x0, #8]
   31a04:	str	x9, [x0, #16]
   31a08:	tbnz	w1, #31, 31a10 <mpfr_set_zero@@Base+0x18>
   31a0c:	ret
   31a10:	mov	w8, #0xffffffff            	// #-1
   31a14:	str	w8, [x0, #8]
   31a18:	ret

0000000000031a1c <mpfr_powerof2_raw@@Base>:
   31a1c:	ldr	x8, [x0]
   31a20:	ldr	x9, [x0, #24]
   31a24:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   31a28:	sub	x10, x8, #0x1
   31a2c:	add	x8, x8, #0x3e
   31a30:	cmp	x10, #0x0
   31a34:	csel	x8, x8, x10, lt  // lt = tstop
   31a38:	asr	x8, x8, #6
   31a3c:	ldr	x10, [x9, x8, lsl #3]
   31a40:	cmp	x10, x11
   31a44:	b.ne	31a60 <mpfr_powerof2_raw@@Base+0x44>  // b.any
   31a48:	sub	x9, x9, #0x8
   31a4c:	subs	x10, x8, #0x1
   31a50:	b.lt	31a68 <mpfr_powerof2_raw@@Base+0x4c>  // b.tstop
   31a54:	ldr	x11, [x9, x8, lsl #3]
   31a58:	mov	x8, x10
   31a5c:	cbz	x11, 31a4c <mpfr_powerof2_raw@@Base+0x30>
   31a60:	mov	w0, wzr
   31a64:	ret
   31a68:	mov	w0, #0x1                   	// #1
   31a6c:	ret

0000000000031a70 <mpfr_powerof2_raw2@@Base>:
   31a70:	add	x8, x0, x1, lsl #3
   31a74:	ldur	x8, [x8, #-8]
   31a78:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   31a7c:	cmp	x8, x9
   31a80:	b.ne	31aa0 <mpfr_powerof2_raw2@@Base+0x30>  // b.any
   31a84:	sub	x8, x0, #0x10
   31a88:	sub	x9, x1, #0x1
   31a8c:	cmp	x9, #0x1
   31a90:	b.lt	31aa8 <mpfr_powerof2_raw2@@Base+0x38>  // b.tstop
   31a94:	ldr	x10, [x8, x1, lsl #3]
   31a98:	mov	x1, x9
   31a9c:	cbz	x10, 31a88 <mpfr_powerof2_raw2@@Base+0x18>
   31aa0:	mov	w0, wzr
   31aa4:	ret
   31aa8:	mov	w0, #0x1                   	// #1
   31aac:	ret

0000000000031ab0 <mpfr_gamma@@Base>:
   31ab0:	sub	sp, sp, #0x1b0
   31ab4:	stp	x29, x30, [sp, #336]
   31ab8:	stp	x28, x27, [sp, #352]
   31abc:	stp	x26, x25, [sp, #368]
   31ac0:	stp	x24, x23, [sp, #384]
   31ac4:	stp	x22, x21, [sp, #400]
   31ac8:	stp	x20, x19, [sp, #416]
   31acc:	ldr	x9, [x1, #16]
   31ad0:	mov	x25, #0x2                   	// #2
   31ad4:	movk	x25, #0x8000, lsl #48
   31ad8:	add	x8, x25, #0x2
   31adc:	mov	x21, x1
   31ae0:	cmp	x9, x8
   31ae4:	mov	x19, x0
   31ae8:	add	x29, sp, #0x150
   31aec:	b.lt	327dc <mpfr_gamma@@Base+0xd2c>  // b.tstop
   31af0:	ldr	x8, [x21]
   31af4:	ldr	x10, [x19]
   31af8:	mov	w22, w2
   31afc:	cmp	x8, x10
   31b00:	csel	x8, x8, x10, gt
   31b04:	neg	x8, x8, lsl #1
   31b08:	cmp	x9, x8
   31b0c:	b.le	31dd4 <mpfr_gamma@@Base+0x324>
   31b10:	mov	x0, x21
   31b14:	bl	c200 <mpfr_integer_p@plt>
   31b18:	mov	w23, w0
   31b1c:	cbz	w0, 31b28 <mpfr_gamma@@Base+0x78>
   31b20:	ldr	w8, [x21, #8]
   31b24:	tbnz	w8, #31, 32860 <mpfr_gamma@@Base+0xdb0>
   31b28:	mov	w1, #0x1                   	// #1
   31b2c:	mov	x0, x21
   31b30:	mov	x2, xzr
   31b34:	str	w22, [sp, #12]
   31b38:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   31b3c:	cbz	w0, 31e74 <mpfr_gamma@@Base+0x3c4>
   31b40:	mov	w22, w0
   31b44:	cbz	w23, 31d34 <mpfr_gamma@@Base+0x284>
   31b48:	mov	x0, x21
   31b4c:	mov	w1, wzr
   31b50:	bl	bf00 <mpfr_fits_ulong_p@plt>
   31b54:	cbz	w0, 31d34 <mpfr_gamma@@Base+0x284>
   31b58:	ldr	x26, [x19]
   31b5c:	mov	x0, x21
   31b60:	mov	w1, wzr
   31b64:	bl	bd50 <mpfr_get_ui@plt>
   31b68:	mov	w8, #0x68d8                	// #26840
   31b6c:	movk	w8, #0x2ab, lsl #16
   31b70:	cmp	x0, x8
   31b74:	b.hi	31d34 <mpfr_gamma@@Base+0x284>  // b.pmore
   31b78:	sub	x23, x0, #0x1
   31b7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31b80:	ldr	x1, [x0, #2656]
   31b84:	add	x0, x0, #0xa60
   31b88:	blr	x1
   31b8c:	mrs	x27, tpidr_el0
   31b90:	ldr	w28, [x27, x0]
   31b94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31b98:	ldr	x1, [x0, #2592]
   31b9c:	add	x0, x0, #0xa20
   31ba0:	blr	x1
   31ba4:	ldr	x9, [x27, x0]
   31ba8:	mov	x8, x0
   31bac:	str	x9, [sp]
   31bb0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31bb4:	ldr	x1, [x0, #2624]
   31bb8:	add	x0, x0, #0xa40
   31bbc:	blr	x1
   31bc0:	ldr	x20, [x27, x0]
   31bc4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   31bc8:	str	x9, [x27, x8]
   31bcc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   31bd0:	str	x8, [x27, x0]
   31bd4:	add	x0, sp, #0x28
   31bd8:	mov	w1, #0x26                  	// #38
   31bdc:	bl	cad0 <mpfr_init2@plt>
   31be0:	sub	x0, x29, #0x28
   31be4:	mov	w1, #0x26                  	// #38
   31be8:	bl	cad0 <mpfr_init2@plt>
   31bec:	add	x0, sp, #0x28
   31bf0:	mov	w3, #0x1                   	// #1
   31bf4:	mov	x1, x23
   31bf8:	mov	x2, xzr
   31bfc:	bl	c640 <mpfr_set_ui_2exp@plt>
   31c00:	adrp	x1, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   31c04:	add	x1, x1, #0x79d
   31c08:	sub	x0, x29, #0x28
   31c0c:	bl	c3a0 <mpfr_set_str_binary@plt>
   31c10:	add	x0, sp, #0x28
   31c14:	add	x1, sp, #0x28
   31c18:	sub	x2, x29, #0x28
   31c1c:	mov	w3, #0x1                   	// #1
   31c20:	bl	c670 <mpfr_div@plt>
   31c24:	add	x0, sp, #0x28
   31c28:	add	x1, sp, #0x28
   31c2c:	mov	w3, #0x1                   	// #1
   31c30:	mov	x2, x23
   31c34:	bl	c020 <mpfr_pow_ui@plt>
   31c38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31c3c:	ldr	x1, [x0, #2704]
   31c40:	add	x0, x0, #0xa90
   31c44:	blr	x1
   31c48:	add	x1, x27, x0
   31c4c:	sub	x0, x29, #0x28
   31c50:	mov	w2, #0x1                   	// #1
   31c54:	bl	c3e0 <mpfr_cache@plt>
   31c58:	lsl	x2, x23, #1
   31c5c:	sub	x0, x29, #0x28
   31c60:	sub	x1, x29, #0x28
   31c64:	mov	w3, #0x1                   	// #1
   31c68:	bl	bb10 <mpfr_mul_ui@plt>
   31c6c:	sub	x0, x29, #0x28
   31c70:	sub	x1, x29, #0x28
   31c74:	mov	w2, #0x1                   	// #1
   31c78:	bl	c990 <mpfr_sqrt@plt>
   31c7c:	add	x0, sp, #0x28
   31c80:	add	x1, sp, #0x28
   31c84:	sub	x2, x29, #0x28
   31c88:	mov	w3, #0x1                   	// #1
   31c8c:	bl	be00 <mpfr_mul@plt>
   31c90:	add	x0, sp, #0x28
   31c94:	add	x1, sp, #0x28
   31c98:	mov	w2, #0x1                   	// #1
   31c9c:	bl	c270 <mpfr_log2@plt>
   31ca0:	add	x0, sp, #0x28
   31ca4:	mov	w1, #0x2                   	// #2
   31ca8:	bl	bd50 <mpfr_get_ui@plt>
   31cac:	cmp	x23, #0x2
   31cb0:	mov	x24, x0
   31cb4:	b.cc	31cd0 <mpfr_gamma@@Base+0x220>  // b.lo, b.ul, b.last
   31cb8:	mov	w8, #0x2                   	// #2
   31cbc:	udiv	x9, x23, x8
   31cc0:	lsl	x8, x8, #1
   31cc4:	cmp	x8, x23
   31cc8:	sub	x24, x24, x9
   31ccc:	b.ls	31cbc <mpfr_gamma@@Base+0x20c>  // b.plast
   31cd0:	add	x0, sp, #0x28
   31cd4:	bl	c110 <mpfr_clear@plt>
   31cd8:	sub	x0, x29, #0x28
   31cdc:	bl	c110 <mpfr_clear@plt>
   31ce0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31ce4:	ldr	x1, [x0, #2656]
   31ce8:	add	x0, x0, #0xa60
   31cec:	blr	x1
   31cf0:	str	w28, [x27, x0]
   31cf4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31cf8:	ldr	x1, [x0, #2592]
   31cfc:	add	x0, x0, #0xa20
   31d00:	blr	x1
   31d04:	ldr	x8, [sp]
   31d08:	str	x8, [x27, x0]
   31d0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31d10:	ldr	x1, [x0, #2624]
   31d14:	add	x0, x0, #0xa40
   31d18:	blr	x1
   31d1c:	ldr	w8, [sp, #12]
   31d20:	str	x20, [x27, x0]
   31d24:	cmp	w8, #0x0
   31d28:	cinc	x8, x26, eq  // eq = none
   31d2c:	cmp	x24, x8
   31d30:	b.ls	32258 <mpfr_gamma@@Base+0x7a8>  // b.plast
   31d34:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31d38:	ldr	x1, [x0, #2656]
   31d3c:	add	x0, x0, #0xa60
   31d40:	blr	x1
   31d44:	mrs	x26, tpidr_el0
   31d48:	ldr	w28, [x26, x0]
   31d4c:	str	w28, [sp, #16]
   31d50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31d54:	ldr	x1, [x0, #2592]
   31d58:	add	x0, x0, #0xa20
   31d5c:	blr	x1
   31d60:	ldr	x27, [x26, x0]
   31d64:	mov	x8, x0
   31d68:	str	x27, [sp, #24]
   31d6c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31d70:	ldr	x1, [x0, #2624]
   31d74:	add	x0, x0, #0xa40
   31d78:	blr	x1
   31d7c:	ldr	x24, [x26, x0]
   31d80:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   31d84:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   31d88:	cmp	w22, #0x1
   31d8c:	str	x9, [x26, x8]
   31d90:	str	x24, [sp, #32]
   31d94:	str	x10, [x26, x0]
   31d98:	b.lt	31f38 <mpfr_gamma@@Base+0x488>  // b.tstop
   31d9c:	ldr	x8, [x21, #16]
   31da0:	cmp	x8, #0x19
   31da4:	b.gt	320dc <mpfr_gamma@@Base+0x62c>
   31da8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31dac:	ldr	x1, [x0, #2592]
   31db0:	add	x0, x0, #0xa20
   31db4:	blr	x1
   31db8:	str	x27, [x26, x0]
   31dbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31dc0:	ldr	x1, [x0, #2624]
   31dc4:	add	x0, x0, #0xa40
   31dc8:	blr	x1
   31dcc:	str	x24, [x26, x0]
   31dd0:	b	32230 <mpfr_gamma@@Base+0x780>
   31dd4:	ldr	w28, [x21, #8]
   31dd8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31ddc:	ldr	x1, [x0, #2656]
   31de0:	add	x0, x0, #0xa60
   31de4:	blr	x1
   31de8:	mrs	x24, tpidr_el0
   31dec:	ldr	w25, [x24, x0]
   31df0:	str	w25, [sp, #16]
   31df4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31df8:	ldr	x1, [x0, #2592]
   31dfc:	add	x0, x0, #0xa20
   31e00:	blr	x1
   31e04:	ldr	x26, [x24, x0]
   31e08:	mov	x8, x0
   31e0c:	str	x26, [sp, #24]
   31e10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31e14:	ldr	x1, [x0, #2624]
   31e18:	add	x0, x0, #0xa40
   31e1c:	blr	x1
   31e20:	ldr	x27, [x24, x0]
   31e24:	mov	x12, #0x2                   	// #2
   31e28:	movk	x12, #0xc000, lsl #48
   31e2c:	mov	w20, wzr
   31e30:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   31e34:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   31e38:	cmp	x9, x12
   31e3c:	str	x10, [x24, x8]
   31e40:	str	x27, [sp, #32]
   31e44:	str	x11, [x24, x0]
   31e48:	b.ne	31e90 <mpfr_gamma@@Base+0x3e0>  // b.any
   31e4c:	cmp	w28, #0x1
   31e50:	b.lt	31e90 <mpfr_gamma@@Base+0x3e0>  // b.tstop
   31e54:	orr	w8, w22, #0x2
   31e58:	cmp	w8, #0x3
   31e5c:	b.ne	31e8c <mpfr_gamma@@Base+0x3dc>  // b.any
   31e60:	mov	x0, x21
   31e64:	bl	bfb0 <mpfr_powerof2_raw@plt>
   31e68:	cmp	w0, #0x0
   31e6c:	cset	w20, ne  // ne = any
   31e70:	b	31e90 <mpfr_gamma@@Base+0x3e0>
   31e74:	ldr	w3, [sp, #12]
   31e78:	mov	w1, #0x1                   	// #1
   31e7c:	mov	x0, x19
   31e80:	mov	x2, xzr
   31e84:	bl	c640 <mpfr_set_ui_2exp@plt>
   31e88:	b	32268 <mpfr_gamma@@Base+0x7b8>
   31e8c:	mov	w20, wzr
   31e90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   31e94:	ldr	x1, [x0, #2656]
   31e98:	add	x0, x0, #0xa60
   31e9c:	blr	x1
   31ea0:	mov	x23, x0
   31ea4:	str	wzr, [x24, x0]
   31ea8:	mov	w1, #0x1                   	// #1
   31eac:	mov	x0, x19
   31eb0:	mov	x2, x21
   31eb4:	mov	w3, w22
   31eb8:	bl	c350 <mpfr_ui_div@plt>
   31ebc:	mov	w21, w22
   31ec0:	cbz	w0, 31ee8 <mpfr_gamma@@Base+0x438>
   31ec4:	ldr	w8, [x24, x23]
   31ec8:	mov	w22, w0
   31ecc:	tst	w8, #0x2
   31ed0:	cset	w9, eq  // eq = none
   31ed4:	orr	w9, w20, w9
   31ed8:	tbnz	w9, #0, 32070 <mpfr_gamma@@Base+0x5c0>
   31edc:	orr	w25, w8, w25
   31ee0:	str	w25, [sp, #16]
   31ee4:	b	32070 <mpfr_gamma@@Base+0x5c0>
   31ee8:	tst	w21, #0xfffffffd
   31eec:	mov	w11, w21
   31ef0:	b.eq	32068 <mpfr_gamma@@Base+0x5b8>  // b.none
   31ef4:	cmp	w11, #0x1
   31ef8:	cset	w9, eq  // eq = none
   31efc:	cmp	w28, #0x0
   31f00:	cset	w8, gt
   31f04:	cset	w10, lt  // lt = tstop
   31f08:	cmp	w11, #0x4
   31f0c:	mov	w21, w11
   31f10:	and	w10, w9, w10
   31f14:	cset	w9, eq  // eq = none
   31f18:	mov	w22, #0x1                   	// #1
   31f1c:	tbnz	w10, #0, 32070 <mpfr_gamma@@Base+0x5c0>
   31f20:	and	w8, w9, w8
   31f24:	tbnz	w8, #0, 32070 <mpfr_gamma@@Base+0x5c0>
   31f28:	mov	x0, x19
   31f2c:	bl	be80 <mpfr_nextbelow@plt>
   31f30:	mov	w22, #0xffffffff            	// #-1
   31f34:	b	32070 <mpfr_gamma@@Base+0x5c0>
   31f38:	ldr	w9, [x21, #8]
   31f3c:	tbz	w9, #31, 3237c <mpfr_gamma@@Base+0x8cc>
   31f40:	sub	x0, x29, #0x28
   31f44:	mov	w1, #0x35                  	// #53
   31f48:	bl	cad0 <mpfr_init2@plt>
   31f4c:	sub	x0, x29, #0x68
   31f50:	mov	w1, #0x35                  	// #53
   31f54:	bl	cad0 <mpfr_init2@plt>
   31f58:	sub	x0, x29, #0x88
   31f5c:	mov	w1, #0x35                  	// #53
   31f60:	bl	cad0 <mpfr_init2@plt>
   31f64:	sub	x0, x29, #0x28
   31f68:	mov	w1, #0x2                   	// #2
   31f6c:	mov	w3, #0x3                   	// #3
   31f70:	mov	x2, x21
   31f74:	mov	w20, #0x2                   	// #2
   31f78:	bl	caa0 <mpfr_ui_sub@plt>
   31f7c:	sub	x0, x29, #0x28
   31f80:	sub	x1, x29, #0x28
   31f84:	mov	w2, #0x3                   	// #3
   31f88:	bl	c130 <mpfr_log@plt>
   31f8c:	sub	x0, x29, #0x28
   31f90:	sub	x1, x29, #0x28
   31f94:	mov	w2, #0x1                   	// #1
   31f98:	mov	w3, #0x3                   	// #3
   31f9c:	bl	c580 <mpfr_sub_ui@plt>
   31fa0:	sub	x0, x29, #0x28
   31fa4:	sub	x1, x29, #0x28
   31fa8:	mov	w3, #0x2                   	// #2
   31fac:	mov	x2, x21
   31fb0:	bl	be00 <mpfr_mul@plt>
   31fb4:	ldr	x8, [x21, #16]
   31fb8:	ldr	x9, [x21]
   31fbc:	sub	x0, x29, #0x68
   31fc0:	sub	x10, x20, x8
   31fc4:	cmp	x8, #0x1
   31fc8:	csinc	x8, x10, xzr, le
   31fcc:	add	x8, x9, x8
   31fd0:	add	x22, x8, #0x11
   31fd4:	mov	x1, x22
   31fd8:	bl	bf80 <mpfr_set_prec@plt>
   31fdc:	sub	x0, x29, #0x88
   31fe0:	mov	x1, x22
   31fe4:	bl	bf80 <mpfr_set_prec@plt>
   31fe8:	sub	x0, x29, #0x68
   31fec:	mov	w1, #0x2                   	// #2
   31ff0:	mov	x2, x21
   31ff4:	mov	w3, wzr
   31ff8:	bl	caa0 <mpfr_ui_sub@plt>
   31ffc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32000:	ldr	x1, [x0, #2704]
   32004:	add	x0, x0, #0xa90
   32008:	blr	x1
   3200c:	add	x1, x26, x0
   32010:	sub	x0, x29, #0x88
   32014:	mov	w2, wzr
   32018:	bl	c3e0 <mpfr_cache@plt>
   3201c:	sub	x0, x29, #0x88
   32020:	sub	x1, x29, #0x88
   32024:	sub	x2, x29, #0x68
   32028:	mov	w3, wzr
   3202c:	bl	be00 <mpfr_mul@plt>
   32030:	sub	x0, x29, #0x68
   32034:	sub	x1, x29, #0x88
   32038:	mov	w2, wzr
   3203c:	bl	c4a0 <mpfr_sin@plt>
   32040:	ldur	x8, [x29, #-88]
   32044:	mov	x9, #0x2                   	// #2
   32048:	movk	x9, #0x8000, lsl #48
   3204c:	cmp	x8, x9
   32050:	b.gt	32270 <mpfr_gamma@@Base+0x7c0>
   32054:	cmp	x8, x25
   32058:	b.ne	32060 <mpfr_gamma@@Base+0x5b0>  // b.any
   3205c:	bl	bd40 <mpfr_set_erangeflag@plt>
   32060:	mov	w22, wzr
   32064:	b	32278 <mpfr_gamma@@Base+0x7c8>
   32068:	mov	w21, w11
   3206c:	mov	w22, #0x1                   	// #1
   32070:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32074:	ldr	x1, [x0, #2656]
   32078:	add	x0, x0, #0xa60
   3207c:	blr	x1
   32080:	str	w25, [x24, x0]
   32084:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32088:	ldr	x1, [x0, #2592]
   3208c:	add	x0, x0, #0xa20
   32090:	blr	x1
   32094:	str	x26, [x24, x0]
   32098:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3209c:	ldr	x1, [x0, #2624]
   320a0:	add	x0, x0, #0xa40
   320a4:	blr	x1
   320a8:	str	x27, [x24, x0]
   320ac:	ldr	x8, [x19, #16]
   320b0:	cmp	x8, x27
   320b4:	b.gt	3282c <mpfr_gamma@@Base+0xd7c>
   320b8:	cmp	x8, x26
   320bc:	b.lt	3282c <mpfr_gamma@@Base+0xd7c>  // b.tstop
   320c0:	orr	w8, w25, #0x8
   320c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   320c8:	ldr	x1, [x0, #2656]
   320cc:	add	x0, x0, #0xa60
   320d0:	blr	x1
   320d4:	str	w8, [x24, x0]
   320d8:	b	32888 <mpfr_gamma@@Base+0xdd8>
   320dc:	add	x8, sp, #0x28
   320e0:	mov	w9, #0x35                  	// #53
   320e4:	adrp	x1, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   320e8:	mov	w10, #0x1                   	// #1
   320ec:	add	x11, x8, #0x10
   320f0:	stur	x9, [x29, #-40]
   320f4:	stur	x9, [x29, #-72]
   320f8:	stur	x9, [x29, #-104]
   320fc:	add	x9, x8, #0x18
   32100:	add	x8, x8, #0x20
   32104:	add	x1, x1, #0x758
   32108:	sub	x0, x29, #0x68
   3210c:	stur	w10, [x29, #-32]
   32110:	stur	w10, [x29, #-64]
   32114:	stp	xzr, x11, [sp, #40]
   32118:	stur	x11, [x29, #-16]
   3211c:	stur	x9, [x29, #-48]
   32120:	stur	x8, [x29, #-80]
   32124:	stur	w10, [x29, #-96]
   32128:	bl	c3a0 <mpfr_set_str_binary@plt>
   3212c:	sub	x0, x29, #0x28
   32130:	sub	x2, x29, #0x68
   32134:	mov	w3, #0x1                   	// #1
   32138:	mov	x1, x21
   3213c:	bl	be00 <mpfr_mul@plt>
   32140:	sub	x0, x29, #0x48
   32144:	mov	w2, #0x2                   	// #2
   32148:	mov	w3, #0x1                   	// #1
   3214c:	mov	x1, x21
   32150:	bl	c580 <mpfr_sub_ui@plt>
   32154:	sub	x0, x29, #0x28
   32158:	sub	x1, x29, #0x28
   3215c:	sub	x2, x29, #0x48
   32160:	mov	w3, #0x1                   	// #1
   32164:	bl	be40 <mpfr_pow@plt>
   32168:	sub	x0, x29, #0x28
   3216c:	sub	x1, x29, #0x28
   32170:	sub	x2, x29, #0x68
   32174:	mov	w3, #0x1                   	// #1
   32178:	bl	be00 <mpfr_mul@plt>
   3217c:	sub	x0, x29, #0x28
   32180:	sub	x1, x29, #0x28
   32184:	sub	x2, x29, #0x68
   32188:	mov	w3, #0x1                   	// #1
   3218c:	bl	be00 <mpfr_mul@plt>
   32190:	sub	x0, x29, #0x28
   32194:	sub	x1, x29, #0x28
   32198:	mov	w3, #0x1                   	// #1
   3219c:	mov	x2, x21
   321a0:	bl	be00 <mpfr_mul@plt>
   321a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   321a8:	ldr	x1, [x0, #2656]
   321ac:	add	x0, x0, #0xa60
   321b0:	blr	x1
   321b4:	mov	x22, x0
   321b8:	str	wzr, [x26, x0]
   321bc:	sub	x0, x29, #0x28
   321c0:	sub	x1, x29, #0x28
   321c4:	mov	w2, #0x1                   	// #1
   321c8:	mov	w3, #0x1                   	// #1
   321cc:	bl	c320 <mpfr_mul_2ui@plt>
   321d0:	ldr	w22, [x26, x22]
   321d4:	ldr	x1, [sp, #40]
   321d8:	ldur	x20, [x29, #-24]
   321dc:	cbz	x1, 321e8 <mpfr_gamma@@Base+0x738>
   321e0:	ldr	x0, [sp, #48]
   321e4:	bl	cc80 <mpfr_free_func@plt>
   321e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   321ec:	ldr	x1, [x0, #2656]
   321f0:	add	x0, x0, #0xa60
   321f4:	blr	x1
   321f8:	str	w28, [x26, x0]
   321fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32200:	ldr	x1, [x0, #2592]
   32204:	add	x0, x0, #0xa20
   32208:	blr	x1
   3220c:	str	x27, [x26, x0]
   32210:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32214:	ldr	x1, [x0, #2624]
   32218:	add	x0, x0, #0xa40
   3221c:	blr	x1
   32220:	str	x24, [x26, x0]
   32224:	tbnz	w22, #1, 32244 <mpfr_gamma@@Base+0x794>
   32228:	cmp	x20, x24
   3222c:	b.gt	32244 <mpfr_gamma@@Base+0x794>
   32230:	ldr	w2, [sp, #12]
   32234:	mov	x0, x19
   32238:	mov	x1, x21
   3223c:	bl	32908 <mpfr_gamma@@Base+0xe58>
   32240:	b	32268 <mpfr_gamma@@Base+0x7b8>
   32244:	ldr	w1, [sp, #12]
   32248:	mov	w2, #0x1                   	// #1
   3224c:	mov	x0, x19
   32250:	bl	bff0 <mpfr_overflow@plt>
   32254:	b	32268 <mpfr_gamma@@Base+0x7b8>
   32258:	ldr	w2, [sp, #12]
   3225c:	mov	x0, x19
   32260:	mov	x1, x23
   32264:	bl	c730 <mpfr_fac_ui@plt>
   32268:	mov	w22, w0
   3226c:	b	32888 <mpfr_gamma@@Base+0xdd8>
   32270:	ldur	w8, [x29, #-96]
   32274:	neg	w22, w8
   32278:	sub	x0, x29, #0x68
   3227c:	sub	x1, x29, #0x68
   32280:	mov	w3, #0x1                   	// #1
   32284:	mov	w2, wzr
   32288:	bl	c6f0 <mpfr_set4@plt>
   3228c:	sub	x0, x29, #0x88
   32290:	sub	x1, x29, #0x88
   32294:	mov	w2, #0x3                   	// #3
   32298:	mov	w3, #0x2                   	// #2
   3229c:	bl	bb10 <mpfr_mul_ui@plt>
   322a0:	sub	x0, x29, #0x88
   322a4:	sub	x1, x29, #0x88
   322a8:	mov	w2, #0x1                   	// #1
   322ac:	mov	w3, #0x2                   	// #2
   322b0:	bl	c2d0 <mpfr_add_ui@plt>
   322b4:	ldur	x2, [x29, #-104]
   322b8:	sub	x0, x29, #0x88
   322bc:	sub	x1, x29, #0x88
   322c0:	mov	w3, #0x2                   	// #2
   322c4:	bl	c950 <mpfr_div_2ui@plt>
   322c8:	sub	x0, x29, #0x88
   322cc:	sub	x1, x29, #0x68
   322d0:	mov	w2, #0x1                   	// #1
   322d4:	bl	c9f0 <mpfr_cmp3@plt>
   322d8:	tbnz	w0, #31, 322f8 <mpfr_gamma@@Base+0x848>
   322dc:	sub	x0, x29, #0x28
   322e0:	bl	c110 <mpfr_clear@plt>
   322e4:	sub	x0, x29, #0x68
   322e8:	bl	c110 <mpfr_clear@plt>
   322ec:	sub	x0, x29, #0x88
   322f0:	bl	c110 <mpfr_clear@plt>
   322f4:	b	32378 <mpfr_gamma@@Base+0x8c8>
   322f8:	sub	x0, x29, #0x68
   322fc:	sub	x1, x29, #0x68
   32300:	sub	x2, x29, #0x88
   32304:	mov	w3, #0x1                   	// #1
   32308:	bl	bc20 <mpfr_sub@plt>
   3230c:	sub	x0, x29, #0x68
   32310:	sub	x2, x29, #0x68
   32314:	mov	w1, #0xc                   	// #12
   32318:	mov	w3, #0x2                   	// #2
   3231c:	bl	c350 <mpfr_ui_div@plt>
   32320:	sub	x0, x29, #0x68
   32324:	sub	x1, x29, #0x68
   32328:	mov	w2, #0x2                   	// #2
   3232c:	bl	c270 <mpfr_log2@plt>
   32330:	sub	x0, x29, #0x28
   32334:	sub	x1, x29, #0x68
   32338:	sub	x2, x29, #0x28
   3233c:	mov	w3, #0x2                   	// #2
   32340:	bl	c240 <mpfr_add@plt>
   32344:	sub	x1, x27, #0x2
   32348:	sub	x0, x29, #0x28
   3234c:	mov	x2, xzr
   32350:	bl	c430 <mpfr_cmp_si_2exp@plt>
   32354:	mov	w23, w0
   32358:	sub	x0, x29, #0x28
   3235c:	bl	c110 <mpfr_clear@plt>
   32360:	sub	x0, x29, #0x68
   32364:	bl	c110 <mpfr_clear@plt>
   32368:	sub	x0, x29, #0x88
   3236c:	bl	c110 <mpfr_clear@plt>
   32370:	cmp	w23, #0x0
   32374:	b.le	32784 <mpfr_gamma@@Base+0xcd4>
   32378:	ldr	w9, [x21, #8]
   3237c:	ldr	x8, [x19]
   32380:	cmp	w9, #0x1
   32384:	b.lt	32398 <mpfr_gamma@@Base+0x8e8>  // b.tstop
   32388:	ldr	x9, [x21]
   3238c:	ldr	x10, [x21, #16]
   32390:	sub	x11, x9, x10
   32394:	b	323b0 <mpfr_gamma@@Base+0x900>
   32398:	ldr	x10, [x21, #16]
   3239c:	ldr	x9, [x21]
   323a0:	neg	x11, x10
   323a4:	and	x11, x11, x10, asr #63
   323a8:	add	x11, x9, x11
   323ac:	add	x11, x11, #0x1
   323b0:	cmp	x8, x11
   323b4:	mov	w12, #0x2                   	// #2
   323b8:	csel	x8, x11, x8, lt  // lt = tstop
   323bc:	sub	x11, x12, x10
   323c0:	cmp	x10, #0x1
   323c4:	csinc	x10, x11, xzr, le
   323c8:	add	x9, x10, x9
   323cc:	cmp	x8, x9
   323d0:	csel	x20, x9, x8, lt  // lt = tstop
   323d4:	subs	x22, x20, #0x1
   323d8:	b.eq	328ac <mpfr_gamma@@Base+0xdfc>  // b.none
   323dc:	b.le	328cc <mpfr_gamma@@Base+0xe1c>
   323e0:	clz	x8, x22
   323e4:	mov	w9, #0x40                  	// #64
   323e8:	sub	x8, x9, x8
   323ec:	add	x22, x8, x20
   323f0:	add	x27, x22, #0x14
   323f4:	cmp	x27, #0x1
   323f8:	b.eq	328b4 <mpfr_gamma@@Base+0xe04>  // b.none
   323fc:	cmn	x22, #0x13
   32400:	b.le	328e8 <mpfr_gamma@@Base+0xe38>
   32404:	add	x8, x22, #0x13
   32408:	clz	x8, x8
   3240c:	mov	w9, #0x40                  	// #64
   32410:	sub	x8, x9, x8
   32414:	add	x8, x8, x27
   32418:	sub	x23, x25, #0x117
   3241c:	cmp	x8, x23
   32420:	b.gt	32904 <mpfr_gamma@@Base+0xe54>
   32424:	add	x9, x8, #0x13
   32428:	add	x10, x8, #0x52
   3242c:	cmp	x9, #0x0
   32430:	csel	x9, x10, x9, lt  // lt = tstop
   32434:	asr	x9, x9, #6
   32438:	add	x20, x8, #0x14
   3243c:	cmp	x8, #0xed
   32440:	add	x24, x9, #0x1
   32444:	b.lt	32458 <mpfr_gamma@@Base+0x9a8>  // b.tstop
   32448:	lsl	x0, x24, #5
   3244c:	str	x0, [sp, #40]
   32450:	bl	cd50 <mpfr_allocate_func@plt>
   32454:	b	32464 <mpfr_gamma@@Base+0x9b4>
   32458:	add	x8, sp, #0x28
   3245c:	add	x0, x8, #0x10
   32460:	str	xzr, [sp, #40]
   32464:	add	x8, x0, x24, lsl #3
   32468:	stp	x8, x20, [x29, #-80]
   3246c:	mov	w8, #0x18                  	// #24
   32470:	str	x0, [sp, #48]
   32474:	stur	x0, [x29, #-16]
   32478:	mov	w28, #0x1                   	// #1
   3247c:	add	x9, x0, x24, lsl #4
   32480:	madd	x8, x24, x8, x0
   32484:	sub	x0, x29, #0x98
   32488:	stur	x20, [x29, #-136]
   3248c:	stur	w28, [x29, #-32]
   32490:	stur	w28, [x29, #-96]
   32494:	stp	x9, x20, [x29, #-112]
   32498:	stur	w28, [x29, #-128]
   3249c:	stp	x8, x20, [x29, #-48]
   324a0:	stur	w28, [x29, #-64]
   324a4:	bl	c040 <mpfr_mpz_init@plt>
   324a8:	cmp	x22, x23
   324ac:	ldr	w22, [sp, #12]
   324b0:	b.gt	32904 <mpfr_gamma@@Base+0xe54>
   324b4:	ldr	x1, [sp, #40]
   324b8:	cmp	w22, #0x0
   324bc:	mov	w24, #0x40                  	// #64
   324c0:	cset	w23, eq  // eq = none
   324c4:	sub	x8, x27, #0x1
   324c8:	add	x9, x27, #0x3e
   324cc:	cmp	x8, #0x0
   324d0:	csel	x8, x9, x8, lt  // lt = tstop
   324d4:	asr	x8, x8, #6
   324d8:	add	x20, x8, #0x1
   324dc:	lsl	x2, x20, #5
   324e0:	str	x2, [sp, #40]
   324e4:	cbz	x1, 324f4 <mpfr_gamma@@Base+0xa44>
   324e8:	ldr	x0, [sp, #48]
   324ec:	bl	c260 <mpfr_reallocate_func@plt>
   324f0:	b	324fc <mpfr_gamma@@Base+0xa4c>
   324f4:	mov	x0, x2
   324f8:	bl	cd50 <mpfr_allocate_func@plt>
   324fc:	mov	w10, #0x18                  	// #24
   32500:	str	x0, [sp, #48]
   32504:	stur	x0, [x29, #-16]
   32508:	add	x8, x0, x20, lsl #3
   3250c:	add	x9, x0, x20, lsl #4
   32510:	madd	x10, x20, x10, x0
   32514:	sub	x0, x29, #0x28
   32518:	mov	w1, #0x2                   	// #2
   3251c:	mov	x2, x21
   32520:	mov	w3, wzr
   32524:	stp	x10, x27, [x29, #-48]
   32528:	stur	w28, [x29, #-32]
   3252c:	stp	x9, x27, [x29, #-112]
   32530:	stur	w28, [x29, #-96]
   32534:	stur	x27, [x29, #-136]
   32538:	stur	w28, [x29, #-128]
   3253c:	stp	x8, x27, [x29, #-80]
   32540:	stur	w28, [x29, #-64]
   32544:	bl	caa0 <mpfr_ui_sub@plt>
   32548:	sub	x0, x29, #0x68
   3254c:	sub	x1, x29, #0x28
   32550:	mov	w2, wzr
   32554:	bl	c800 <mpfr_gamma@plt>
   32558:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3255c:	ldr	x1, [x0, #2704]
   32560:	add	x0, x0, #0xa90
   32564:	blr	x1
   32568:	add	x1, x26, x0
   3256c:	sub	x0, x29, #0x88
   32570:	mov	w2, wzr
   32574:	bl	c3e0 <mpfr_cache@plt>
   32578:	sub	x0, x29, #0x48
   3257c:	sub	x1, x29, #0x88
   32580:	sub	x2, x29, #0x28
   32584:	mov	w3, wzr
   32588:	bl	be00 <mpfr_mul@plt>
   3258c:	ldur	x20, [x29, #-56]
   32590:	sub	x0, x29, #0x48
   32594:	sub	x1, x29, #0x48
   32598:	mov	w2, wzr
   3259c:	bl	c4a0 <mpfr_sin@plt>
   325a0:	ldur	x8, [x29, #-88]
   325a4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   325a8:	cmp	x8, x9
   325ac:	b.ne	32608 <mpfr_gamma@@Base+0xb58>  // b.any
   325b0:	add	x2, sp, #0x10
   325b4:	sub	x3, x29, #0x68
   325b8:	sub	x4, x29, #0x88
   325bc:	mov	x0, x19
   325c0:	mov	x1, x21
   325c4:	mov	w5, w22
   325c8:	bl	33728 <mpfr_gamma@@Base+0x1c78>
   325cc:	cbnz	w0, 326ec <mpfr_gamma@@Base+0xc3c>
   325d0:	sub	x8, x25, x27
   325d4:	sub	x8, x8, #0x103
   325d8:	cmp	x24, x8
   325dc:	b.gt	326bc <mpfr_gamma@@Base+0xc0c>
   325e0:	add	x27, x27, x24
   325e4:	ldr	x1, [sp, #40]
   325e8:	ldr	w22, [sp, #12]
   325ec:	cmp	x27, #0x0
   325f0:	sub	x8, x25, #0x103
   325f4:	cinc	x9, x27, lt  // lt = tstop
   325f8:	cmp	x27, x8
   325fc:	asr	x24, x9, #1
   32600:	b.le	324c4 <mpfr_gamma@@Base+0xa14>
   32604:	b	32904 <mpfr_gamma@@Base+0xe54>
   32608:	ldur	x22, [x29, #-56]
   3260c:	sub	x0, x29, #0x28
   32610:	mov	w2, #0x1                   	// #1
   32614:	mov	x1, x21
   32618:	mov	w3, wzr
   3261c:	bl	c580 <mpfr_sub_ui@plt>
   32620:	sub	x0, x29, #0x28
   32624:	sub	x1, x29, #0x88
   32628:	sub	x2, x29, #0x28
   3262c:	mov	w3, wzr
   32630:	bl	be00 <mpfr_mul@plt>
   32634:	sub	x0, x29, #0x48
   32638:	sub	x1, x29, #0x48
   3263c:	sub	x2, x29, #0x68
   32640:	mov	w3, wzr
   32644:	bl	be00 <mpfr_mul@plt>
   32648:	sub	x0, x29, #0x48
   3264c:	sub	x1, x29, #0x28
   32650:	sub	x2, x29, #0x48
   32654:	mov	w3, wzr
   32658:	bl	c670 <mpfr_div@plt>
   3265c:	ldur	x8, [x29, #-56]
   32660:	add	x9, x25, #0x2
   32664:	cmp	x8, x9
   32668:	b.lt	325d0 <mpfr_gamma@@Base+0xb20>  // b.tstop
   3266c:	ldur	x9, [x29, #-72]
   32670:	sub	x8, x20, x22
   32674:	add	x8, x8, #0x1
   32678:	add	x10, x8, #0x4
   3267c:	cmp	x8, #0x3
   32680:	mov	w8, #0x6                   	// #6
   32684:	csel	x8, x8, x10, lt  // lt = tstop
   32688:	sub	x10, x9, #0x1
   3268c:	add	x9, x9, #0x3e
   32690:	cmp	x10, #0x0
   32694:	csel	x9, x9, x10, lt  // lt = tstop
   32698:	ldr	x10, [x19]
   3269c:	ldur	x0, [x29, #-48]
   326a0:	sub	x2, x27, x8
   326a4:	asr	x8, x9, #6
   326a8:	add	x1, x8, #0x1
   326ac:	add	x3, x10, x23
   326b0:	bl	c3d0 <mpfr_round_p@plt>
   326b4:	cbnz	w0, 326d8 <mpfr_gamma@@Base+0xc28>
   326b8:	b	325d0 <mpfr_gamma@@Base+0xb20>
   326bc:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   326c0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   326c4:	mov	w1, #0x1d2                 	// #466
   326c8:	add	x0, x0, #0x317
   326cc:	add	x2, x2, #0x37a
   326d0:	bl	cb90 <mpfr_assert_fail@plt>
   326d4:	b	325e0 <mpfr_gamma@@Base+0xb30>
   326d8:	ldur	w3, [x29, #-64]
   326dc:	ldr	w2, [sp, #12]
   326e0:	sub	x1, x29, #0x48
   326e4:	mov	x0, x19
   326e8:	bl	c6f0 <mpfr_set4@plt>
   326ec:	ldr	x1, [sp, #40]
   326f0:	mov	w22, w0
   326f4:	cbz	x1, 32700 <mpfr_gamma@@Base+0xc50>
   326f8:	ldr	x0, [sp, #48]
   326fc:	bl	cc80 <mpfr_free_func@plt>
   32700:	sub	x0, x29, #0x98
   32704:	bl	c210 <mpfr_mpz_clear@plt>
   32708:	ldr	w8, [sp, #16]
   3270c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32710:	ldr	x1, [x0, #2656]
   32714:	add	x0, x0, #0xa60
   32718:	blr	x1
   3271c:	ldr	x9, [sp, #24]
   32720:	str	w8, [x26, x0]
   32724:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32728:	ldr	x1, [x0, #2592]
   3272c:	add	x0, x0, #0xa20
   32730:	blr	x1
   32734:	ldr	x11, [sp, #32]
   32738:	str	x9, [x26, x0]
   3273c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32740:	ldr	x1, [x0, #2624]
   32744:	add	x0, x0, #0xa40
   32748:	blr	x1
   3274c:	str	x11, [x26, x0]
   32750:	ldr	x10, [x19, #16]
   32754:	cmp	x10, x11
   32758:	b.gt	328bc <mpfr_gamma@@Base+0xe0c>
   3275c:	cmp	x10, x9
   32760:	b.lt	328bc <mpfr_gamma@@Base+0xe0c>  // b.tstop
   32764:	cbz	w22, 32888 <mpfr_gamma@@Base+0xdd8>
   32768:	orr	w8, w8, #0x8
   3276c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32770:	ldr	x1, [x0, #2656]
   32774:	add	x0, x0, #0xa60
   32778:	blr	x1
   3277c:	str	w8, [x26, x0]
   32780:	b	32888 <mpfr_gamma@@Base+0xdd8>
   32784:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32788:	ldr	x1, [x0, #2656]
   3278c:	add	x0, x0, #0xa60
   32790:	blr	x1
   32794:	str	w28, [x26, x0]
   32798:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3279c:	ldr	x1, [x0, #2592]
   327a0:	add	x0, x0, #0xa20
   327a4:	blr	x1
   327a8:	str	x27, [x26, x0]
   327ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   327b0:	ldr	x1, [x0, #2624]
   327b4:	add	x0, x0, #0xa40
   327b8:	blr	x1
   327bc:	ldr	w8, [sp, #12]
   327c0:	str	x24, [x26, x0]
   327c4:	mov	x0, x19
   327c8:	mov	w2, w22
   327cc:	cmp	w8, #0x0
   327d0:	csinc	w1, w8, wzr, ne  // ne = any
   327d4:	bl	c420 <mpfr_underflow@plt>
   327d8:	b	32268 <mpfr_gamma@@Base+0x7b8>
   327dc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   327e0:	cmp	x9, x8
   327e4:	b.eq	32840 <mpfr_gamma@@Base+0xd90>  // b.none
   327e8:	mov	x8, #0x2                   	// #2
   327ec:	movk	x8, #0x8000, lsl #48
   327f0:	cmp	x9, x8
   327f4:	b.eq	32860 <mpfr_gamma@@Base+0xdb0>  // b.none
   327f8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   327fc:	str	x8, [x19, #16]
   32800:	ldr	w8, [x21, #8]
   32804:	str	w8, [x19, #8]
   32808:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3280c:	ldr	x1, [x0, #2656]
   32810:	add	x0, x0, #0xa60
   32814:	blr	x1
   32818:	mrs	x8, tpidr_el0
   3281c:	ldr	w9, [x8, x0]
   32820:	mov	w22, wzr
   32824:	orr	w9, w9, #0x20
   32828:	b	32884 <mpfr_gamma@@Base+0xdd4>
   3282c:	mov	x0, x19
   32830:	mov	w1, w22
   32834:	mov	w2, w21
   32838:	bl	cb80 <mpfr_check_range@plt>
   3283c:	b	32268 <mpfr_gamma@@Base+0x7b8>
   32840:	ldr	w8, [x21, #8]
   32844:	tbnz	w8, #31, 32860 <mpfr_gamma@@Base+0xdb0>
   32848:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3284c:	mov	w9, #0x1                   	// #1
   32850:	mov	w22, wzr
   32854:	str	x8, [x19, #16]
   32858:	str	w9, [x19, #8]
   3285c:	b	32888 <mpfr_gamma@@Base+0xdd8>
   32860:	str	x25, [x19, #16]
   32864:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32868:	ldr	x1, [x0, #2656]
   3286c:	add	x0, x0, #0xa60
   32870:	blr	x1
   32874:	mrs	x8, tpidr_el0
   32878:	ldr	w9, [x8, x0]
   3287c:	mov	w22, wzr
   32880:	orr	w9, w9, #0x4
   32884:	str	w9, [x8, x0]
   32888:	mov	w0, w22
   3288c:	ldp	x20, x19, [sp, #416]
   32890:	ldp	x22, x21, [sp, #400]
   32894:	ldp	x24, x23, [sp, #384]
   32898:	ldp	x26, x25, [sp, #368]
   3289c:	ldp	x28, x27, [sp, #352]
   328a0:	ldp	x29, x30, [sp, #336]
   328a4:	add	sp, sp, #0x1b0
   328a8:	ret
   328ac:	mov	x8, xzr
   328b0:	b	323ec <mpfr_gamma@@Base+0x93c>
   328b4:	mov	x8, xzr
   328b8:	b	32414 <mpfr_gamma@@Base+0x964>
   328bc:	ldr	w2, [sp, #12]
   328c0:	mov	x0, x19
   328c4:	mov	w1, w22
   328c8:	b	32838 <mpfr_gamma@@Base+0xd88>
   328cc:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   328d0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   328d4:	add	x0, x0, #0x317
   328d8:	add	x2, x2, #0x78e
   328dc:	mov	w1, #0x18f                 	// #399
   328e0:	bl	cb90 <mpfr_assert_fail@plt>
   328e4:	b	323e0 <mpfr_gamma@@Base+0x930>
   328e8:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   328ec:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   328f0:	add	x0, x0, #0x317
   328f4:	add	x2, x2, #0x78e
   328f8:	mov	w1, #0x192                 	// #402
   328fc:	bl	cb90 <mpfr_assert_fail@plt>
   32900:	b	32404 <mpfr_gamma@@Base+0x954>
   32904:	bl	c940 <mpfr_abort_prec_max@plt>
   32908:	sub	sp, sp, #0x1b0
   3290c:	stp	x28, x27, [sp, #352]
   32910:	mov	x28, x1
   32914:	stp	x20, x19, [sp, #416]
   32918:	str	w2, [sp, #68]
   3291c:	mov	x20, x0
   32920:	mov	w1, #0x1                   	// #1
   32924:	mov	x0, x28
   32928:	mov	x2, xzr
   3292c:	str	d8, [sp, #320]
   32930:	stp	x29, x30, [sp, #336]
   32934:	stp	x26, x25, [sp, #368]
   32938:	stp	x24, x23, [sp, #384]
   3293c:	stp	x22, x21, [sp, #400]
   32940:	add	x29, sp, #0x140
   32944:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   32948:	mov	w19, w0
   3294c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32950:	ldr	x1, [x0, #2656]
   32954:	add	x0, x0, #0xa60
   32958:	blr	x1
   3295c:	mrs	x12, tpidr_el0
   32960:	ldr	w8, [x12, x0]
   32964:	str	w8, [sp, #128]
   32968:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3296c:	ldr	x1, [x0, #2592]
   32970:	add	x0, x0, #0xa20
   32974:	blr	x1
   32978:	ldr	x9, [x12, x0]
   3297c:	mov	x8, x0
   32980:	str	x9, [sp, #136]
   32984:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32988:	ldr	x1, [x0, #2624]
   3298c:	add	x0, x0, #0xa40
   32990:	blr	x1
   32994:	ldr	x9, [x12, x0]
   32998:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   3299c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   329a0:	str	x10, [x12, x8]
   329a4:	str	x9, [sp, #144]
   329a8:	str	x11, [x12, x0]
   329ac:	ldr	x23, [x20]
   329b0:	sub	x0, x29, #0x28
   329b4:	mov	w1, #0x1                   	// #1
   329b8:	str	x12, [sp, #120]
   329bc:	bl	cad0 <mpfr_init2@plt>
   329c0:	sub	x0, x29, #0x48
   329c4:	mov	w1, #0x1                   	// #1
   329c8:	bl	cad0 <mpfr_init2@plt>
   329cc:	sub	x0, x29, #0x68
   329d0:	mov	w1, #0x1                   	// #1
   329d4:	bl	cad0 <mpfr_init2@plt>
   329d8:	sub	x0, x29, #0x88
   329dc:	mov	w1, #0x1                   	// #1
   329e0:	bl	cad0 <mpfr_init2@plt>
   329e4:	add	x0, sp, #0x98
   329e8:	mov	w1, #0x1                   	// #1
   329ec:	bl	cad0 <mpfr_init2@plt>
   329f0:	str	x28, [x29, #8]
   329f4:	str	x20, [sp, #56]
   329f8:	tbnz	w19, #31, 332c4 <mpfr_gamma@@Base+0x1814>
   329fc:	subs	x19, x23, #0x1
   32a00:	b.eq	33698 <mpfr_gamma@@Base+0x1be8>  // b.none
   32a04:	b.le	336a0 <mpfr_gamma@@Base+0x1bf0>
   32a08:	clz	x8, x19
   32a0c:	mov	w9, #0x40                  	// #64
   32a10:	sub	x8, x9, x8
   32a14:	add	x19, x8, x23
   32a18:	subs	x20, x19, #0x1
   32a1c:	b.eq	336bc <mpfr_gamma@@Base+0x1c0c>  // b.none
   32a20:	b.le	336c4 <mpfr_gamma@@Base+0x1c14>
   32a24:	clz	x8, x20
   32a28:	mov	w9, #0x4d                  	// #77
   32a2c:	sub	x8, x9, x8
   32a30:	add	x24, x8, x19
   32a34:	ldr	w8, [sp, #68]
   32a38:	mov	w19, #0x40                  	// #64
   32a3c:	fmov	d8, #2.500000000000000000e+00
   32a40:	mov	w22, #0x80000000            	// #-2147483648
   32a44:	cmp	w8, #0x0
   32a48:	cinc	x8, x23, eq  // eq = none
   32a4c:	str	x8, [sp]
   32a50:	sub	x0, x29, #0x28
   32a54:	mov	w1, #0x35                  	// #53
   32a58:	bl	bf80 <mpfr_set_prec@plt>
   32a5c:	cmp	x24, #0x64
   32a60:	b.gt	32a70 <mpfr_gamma@@Base+0xfc0>
   32a64:	sub	x0, x29, #0x28
   32a68:	mov	w1, #0x266                 	// #614
   32a6c:	b	32ad8 <mpfr_gamma@@Base+0x1028>
   32a70:	cmp	x24, #0x1f4
   32a74:	b.gt	32a84 <mpfr_gamma@@Base+0xfd4>
   32a78:	sub	x0, x29, #0x28
   32a7c:	mov	w1, #0x333                 	// #819
   32a80:	b	32ad8 <mpfr_gamma@@Base+0x1028>
   32a84:	cmp	x24, #0x3e8
   32a88:	b.gt	32a98 <mpfr_gamma@@Base+0xfe8>
   32a8c:	sub	x0, x29, #0x28
   32a90:	mov	w1, #0x533                 	// #1331
   32a94:	b	32ad8 <mpfr_gamma@@Base+0x1028>
   32a98:	cmp	x24, #0x7d0
   32a9c:	b.gt	32aac <mpfr_gamma@@Base+0xffc>
   32aa0:	sub	x0, x29, #0x28
   32aa4:	mov	w1, #0x6cd                 	// #1741
   32aa8:	b	32ad8 <mpfr_gamma@@Base+0x1028>
   32aac:	mov	w8, #0x1388                	// #5000
   32ab0:	cmp	x24, x8
   32ab4:	b.gt	32ac4 <mpfr_gamma@@Base+0x1014>
   32ab8:	sub	x0, x29, #0x28
   32abc:	mov	w1, #0x8cd                 	// #2253
   32ac0:	b	32ad8 <mpfr_gamma@@Base+0x1028>
   32ac4:	mov	w8, #0x2710                	// #10000
   32ac8:	sub	x0, x29, #0x28
   32acc:	cmp	x24, x8
   32ad0:	b.gt	3329c <mpfr_gamma@@Base+0x17ec>
   32ad4:	mov	w1, #0xd9a                 	// #3482
   32ad8:	mov	x2, #0xfffffffffffffff6    	// #-10
   32adc:	mov	w3, wzr
   32ae0:	bl	c640 <mpfr_set_ui_2exp@plt>
   32ae4:	sub	x0, x29, #0x28
   32ae8:	mov	w1, #0x4                   	// #4
   32aec:	mov	x2, #0xfffffffffffffffc    	// #-4
   32af0:	mov	w3, #0x2                   	// #2
   32af4:	bl	c640 <mpfr_set_ui_2exp@plt>
   32af8:	sub	x0, x29, #0x28
   32afc:	sub	x1, x29, #0x28
   32b00:	mov	w3, #0x2                   	// #2
   32b04:	mov	x2, x24
   32b08:	bl	bb10 <mpfr_mul_ui@plt>
   32b0c:	sub	x1, x29, #0x28
   32b10:	mov	w2, #0x1                   	// #1
   32b14:	mov	x0, x28
   32b18:	bl	c9f0 <mpfr_cmp3@plt>
   32b1c:	tbnz	w0, #31, 32b28 <mpfr_gamma@@Base+0x1078>
   32b20:	mov	w27, #0x3                   	// #3
   32b24:	b	32b54 <mpfr_gamma@@Base+0x10a4>
   32b28:	sub	x0, x29, #0x28
   32b2c:	sub	x1, x29, #0x28
   32b30:	mov	w3, #0x2                   	// #2
   32b34:	mov	x2, x28
   32b38:	bl	bc20 <mpfr_sub@plt>
   32b3c:	sub	x0, x29, #0x28
   32b40:	mov	w1, #0x2                   	// #2
   32b44:	bl	bd50 <mpfr_get_ui@plt>
   32b48:	cmp	x0, #0x3
   32b4c:	mov	w8, #0x3                   	// #3
   32b50:	csel	x27, x0, x8, hi  // hi = pmore
   32b54:	sub	x0, x29, #0x28
   32b58:	mov	x1, x24
   32b5c:	str	x19, [sp, #8]
   32b60:	bl	bf80 <mpfr_set_prec@plt>
   32b64:	sub	x0, x29, #0x48
   32b68:	mov	x1, x24
   32b6c:	bl	bf80 <mpfr_set_prec@plt>
   32b70:	sub	x0, x29, #0x68
   32b74:	mov	x1, x24
   32b78:	bl	bf80 <mpfr_set_prec@plt>
   32b7c:	sub	x0, x29, #0x88
   32b80:	mov	x1, x24
   32b84:	bl	bf80 <mpfr_set_prec@plt>
   32b88:	add	x0, sp, #0x98
   32b8c:	mov	x1, x24
   32b90:	bl	bf80 <mpfr_set_prec@plt>
   32b94:	add	x0, sp, #0x98
   32b98:	mov	x1, x28
   32b9c:	mov	x2, x27
   32ba0:	mov	w3, wzr
   32ba4:	bl	c2d0 <mpfr_add_ui@plt>
   32ba8:	sub	x0, x29, #0x28
   32bac:	add	x1, sp, #0x98
   32bb0:	mov	w2, wzr
   32bb4:	bl	c130 <mpfr_log@plt>
   32bb8:	sub	x0, x29, #0x48
   32bbc:	add	x1, sp, #0x98
   32bc0:	mov	w2, #0x1                   	// #1
   32bc4:	mov	w3, wzr
   32bc8:	bl	c320 <mpfr_mul_2ui@plt>
   32bcc:	sub	x0, x29, #0x48
   32bd0:	sub	x1, x29, #0x48
   32bd4:	mov	w2, #0x1                   	// #1
   32bd8:	mov	w3, wzr
   32bdc:	bl	c580 <mpfr_sub_ui@plt>
   32be0:	sub	x0, x29, #0x28
   32be4:	sub	x1, x29, #0x28
   32be8:	sub	x2, x29, #0x48
   32bec:	mov	w3, wzr
   32bf0:	bl	be00 <mpfr_mul@plt>
   32bf4:	sub	x0, x29, #0x28
   32bf8:	sub	x1, x29, #0x28
   32bfc:	mov	w2, #0x1                   	// #1
   32c00:	mov	w3, wzr
   32c04:	bl	c950 <mpfr_div_2ui@plt>
   32c08:	sub	x0, x29, #0x28
   32c0c:	sub	x1, x29, #0x28
   32c10:	add	x2, sp, #0x98
   32c14:	mov	w3, wzr
   32c18:	bl	bc20 <mpfr_sub@plt>
   32c1c:	sub	x0, x29, #0x68
   32c20:	add	x2, sp, #0x98
   32c24:	mov	w1, #0x1                   	// #1
   32c28:	mov	w3, wzr
   32c2c:	bl	c350 <mpfr_ui_div@plt>
   32c30:	sub	x0, x29, #0x48
   32c34:	sub	x1, x29, #0x68
   32c38:	mov	w2, #0xc                   	// #12
   32c3c:	mov	w3, wzr
   32c40:	bl	ccc0 <mpfr_div_ui@plt>
   32c44:	ldur	w3, [x29, #-64]
   32c48:	sub	x0, x29, #0x88
   32c4c:	sub	x1, x29, #0x48
   32c50:	mov	w2, wzr
   32c54:	bl	c6f0 <mpfr_set4@plt>
   32c58:	sub	x0, x29, #0x28
   32c5c:	sub	x1, x29, #0x28
   32c60:	sub	x2, x29, #0x88
   32c64:	mov	w3, wzr
   32c68:	bl	c240 <mpfr_add@plt>
   32c6c:	sub	x0, x29, #0x68
   32c70:	sub	x1, x29, #0x68
   32c74:	sub	x2, x29, #0x68
   32c78:	mov	w3, wzr
   32c7c:	bl	be00 <mpfr_mul@plt>
   32c80:	ldur	x8, [x29, #-120]
   32c84:	ldur	x9, [x29, #-24]
   32c88:	add	x8, x8, x24
   32c8c:	cmp	x8, x9
   32c90:	b.ge	32c9c <mpfr_gamma@@Base+0x11ec>  // b.tcont
   32c94:	mov	w23, #0x2                   	// #2
   32c98:	b	32dc0 <mpfr_gamma@@Base+0x1310>
   32c9c:	mov	w21, #0x5                   	// #5
   32ca0:	mov	w23, #0x2                   	// #2
   32ca4:	sub	x0, x29, #0x48
   32ca8:	sub	x1, x29, #0x48
   32cac:	sub	x2, x29, #0x68
   32cb0:	mov	w3, wzr
   32cb4:	bl	be00 <mpfr_mul@plt>
   32cb8:	sub	x19, x21, #0x1
   32cbc:	sub	x2, x21, #0x3
   32cc0:	cmp	x23, x22
   32cc4:	sub	x20, x21, #0x4
   32cc8:	b.hi	32d00 <mpfr_gamma@@Base+0x1250>  // b.pmore
   32ccc:	mul	x2, x2, x20
   32cd0:	sub	x0, x29, #0x48
   32cd4:	sub	x1, x29, #0x48
   32cd8:	mov	w3, wzr
   32cdc:	bl	bb10 <mpfr_mul_ui@plt>
   32ce0:	sub	x8, x21, #0x2
   32ce4:	mul	x2, x8, x19
   32ce8:	sub	x0, x29, #0x48
   32cec:	sub	x1, x29, #0x48
   32cf0:	mov	w3, wzr
   32cf4:	bl	ccc0 <mpfr_div_ui@plt>
   32cf8:	mul	x2, x21, x19
   32cfc:	b	32d64 <mpfr_gamma@@Base+0x12b4>
   32d00:	sub	x0, x29, #0x48
   32d04:	sub	x1, x29, #0x48
   32d08:	mov	w3, wzr
   32d0c:	bl	bb10 <mpfr_mul_ui@plt>
   32d10:	sub	x0, x29, #0x48
   32d14:	sub	x1, x29, #0x48
   32d18:	mov	x2, x20
   32d1c:	mov	w3, wzr
   32d20:	bl	bb10 <mpfr_mul_ui@plt>
   32d24:	sub	x0, x29, #0x48
   32d28:	sub	x1, x29, #0x48
   32d2c:	mov	x2, x19
   32d30:	mov	w3, wzr
   32d34:	bl	ccc0 <mpfr_div_ui@plt>
   32d38:	sub	x2, x21, #0x2
   32d3c:	sub	x0, x29, #0x48
   32d40:	sub	x1, x29, #0x48
   32d44:	mov	w3, wzr
   32d48:	bl	ccc0 <mpfr_div_ui@plt>
   32d4c:	sub	x0, x29, #0x48
   32d50:	sub	x1, x29, #0x48
   32d54:	mov	x2, x19
   32d58:	mov	w3, wzr
   32d5c:	bl	ccc0 <mpfr_div_ui@plt>
   32d60:	mov	x2, x21
   32d64:	sub	x0, x29, #0x48
   32d68:	sub	x1, x29, #0x48
   32d6c:	mov	w3, wzr
   32d70:	bl	ccc0 <mpfr_div_ui@plt>
   32d74:	mov	x0, x23
   32d78:	bl	c880 <mpfr_bernoulli_cache@plt>
   32d7c:	mov	x2, x0
   32d80:	sub	x0, x29, #0x88
   32d84:	sub	x1, x29, #0x48
   32d88:	mov	w3, wzr
   32d8c:	bl	c520 <mpfr_mul_z@plt>
   32d90:	sub	x0, x29, #0x28
   32d94:	sub	x1, x29, #0x28
   32d98:	sub	x2, x29, #0x88
   32d9c:	mov	w3, wzr
   32da0:	bl	c240 <mpfr_add@plt>
   32da4:	ldur	x8, [x29, #-120]
   32da8:	ldur	x9, [x29, #-24]
   32dac:	add	x23, x23, #0x1
   32db0:	add	x21, x21, #0x2
   32db4:	add	x8, x8, x24
   32db8:	cmp	x8, x9
   32dbc:	b.ge	32ca4 <mpfr_gamma@@Base+0x11f4>  // b.tcont
   32dc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   32dc4:	ldr	x1, [x0, #2704]
   32dc8:	add	x0, x0, #0xa90
   32dcc:	blr	x1
   32dd0:	ldr	x8, [sp, #120]
   32dd4:	mov	w2, wzr
   32dd8:	add	x1, x8, x0
   32ddc:	sub	x0, x29, #0x88
   32de0:	bl	c3e0 <mpfr_cache@plt>
   32de4:	sub	x0, x29, #0x88
   32de8:	sub	x1, x29, #0x88
   32dec:	mov	w2, #0x1                   	// #1
   32df0:	mov	w3, wzr
   32df4:	bl	c320 <mpfr_mul_2ui@plt>
   32df8:	ldr	w3, [x28, #8]
   32dfc:	sub	x0, x29, #0x48
   32e00:	mov	x1, x28
   32e04:	mov	w2, wzr
   32e08:	bl	c6f0 <mpfr_set4@plt>
   32e0c:	mov	w8, #0x2                   	// #2
   32e10:	mov	w0, #0x40                  	// #64
   32e14:	mov	w25, #0x20                  	// #32
   32e18:	mov	w19, #0x3                   	// #3
   32e1c:	mov	x9, x8
   32e20:	mul	x8, x19, x19
   32e24:	add	x19, x19, #0x1
   32e28:	add	x25, x25, #0x10
   32e2c:	add	x0, x0, #0x20
   32e30:	cmp	x8, x27
   32e34:	add	x8, x9, #0x1
   32e38:	b.cc	32e1c <mpfr_gamma@@Base+0x136c>  // b.lo, b.ul, b.last
   32e3c:	str	x9, [sp, #88]
   32e40:	str	x0, [sp, #32]
   32e44:	bl	cd50 <mpfr_allocate_func@plt>
   32e48:	sub	x26, x19, #0x2
   32e4c:	mov	x21, x0
   32e50:	cmp	x26, #0x2
   32e54:	sub	x22, x19, #0x1
   32e58:	str	x19, [sp, #104]
   32e5c:	b.cs	32e74 <mpfr_gamma@@Base+0x13c4>  // b.hs, b.nlast
   32e60:	add	x0, x21, #0x40
   32e64:	mov	x1, x28
   32e68:	mov	w2, wzr
   32e6c:	bl	c450 <mpfr_sqr@plt>
   32e70:	b	32efc <mpfr_gamma@@Base+0x144c>
   32e74:	add	x19, x21, #0x40
   32e78:	mov	w20, #0x2                   	// #2
   32e7c:	mov	x0, x19
   32e80:	mov	x1, x24
   32e84:	bl	cad0 <mpfr_init2@plt>
   32e88:	add	x20, x20, #0x1
   32e8c:	cmp	x20, x26
   32e90:	add	x19, x19, #0x20
   32e94:	b.ls	32e7c <mpfr_gamma@@Base+0x13cc>  // b.plast
   32e98:	add	x0, x21, #0x40
   32e9c:	mov	x1, x28
   32ea0:	mov	w2, wzr
   32ea4:	bl	c450 <mpfr_sqr@plt>
   32ea8:	cmp	x26, #0x3
   32eac:	b.cc	32efc <mpfr_gamma@@Base+0x144c>  // b.lo, b.ul, b.last
   32eb0:	add	x19, x21, #0x60
   32eb4:	mov	w20, #0x3                   	// #3
   32eb8:	tbnz	w20, #0, 32ed8 <mpfr_gamma@@Base+0x1428>
   32ebc:	lsl	x8, x20, #4
   32ec0:	and	x8, x8, #0xffffffffffffffe0
   32ec4:	add	x1, x21, x8
   32ec8:	mov	x0, x19
   32ecc:	mov	w2, wzr
   32ed0:	bl	c450 <mpfr_sqr@plt>
   32ed4:	b	32eec <mpfr_gamma@@Base+0x143c>
   32ed8:	sub	x1, x19, #0x20
   32edc:	mov	x0, x19
   32ee0:	mov	x2, x28
   32ee4:	mov	w3, wzr
   32ee8:	bl	be00 <mpfr_mul@plt>
   32eec:	add	x20, x20, #0x1
   32ef0:	cmp	x20, x26
   32ef4:	add	x19, x19, #0x20
   32ef8:	b.ls	32eb8 <mpfr_gamma@@Base+0x1408>  // b.plast
   32efc:	mov	x0, x25
   32f00:	str	x24, [sp, #48]
   32f04:	bl	cd50 <mpfr_allocate_func@plt>
   32f08:	mov	x24, x0
   32f0c:	mov	x19, xzr
   32f10:	mov	x20, x0
   32f14:	mov	x0, x20
   32f18:	bl	c040 <mpfr_mpz_init@plt>
   32f1c:	add	x19, x19, #0x1
   32f20:	cmp	x19, x26
   32f24:	add	x20, x20, #0x10
   32f28:	b.ls	32f14 <mpfr_gamma@@Base+0x1464>  // b.plast
   32f2c:	cmp	x22, x27
   32f30:	stp	x25, x21, [sp, #16]
   32f34:	str	x23, [sp, #40]
   32f38:	b.ls	32f44 <mpfr_gamma@@Base+0x1494>  // b.plast
   32f3c:	mov	w25, #0x1                   	// #1
   32f40:	b	3309c <mpfr_gamma@@Base+0x15ec>
   32f44:	add	x8, x24, #0x10
   32f48:	str	x8, [sp, #80]
   32f4c:	add	x8, x21, #0x20
   32f50:	ldr	x21, [sp, #104]
   32f54:	mov	w25, #0x1                   	// #1
   32f58:	str	x8, [sp, #72]
   32f5c:	str	x27, [sp, #96]
   32f60:	mov	w1, #0x1                   	// #1
   32f64:	mov	x0, x24
   32f68:	str	x22, [sp, #112]
   32f6c:	bl	bd60 <__gmpz_set_ui@plt>
   32f70:	cmp	x21, #0x2
   32f74:	b.ne	32f8c <mpfr_gamma@@Base+0x14dc>  // b.any
   32f78:	sub	x0, x29, #0x68
   32f7c:	mov	x1, x24
   32f80:	mov	w2, wzr
   32f84:	bl	c2b0 <mpfr_set_z@plt>
   32f88:	b	33078 <mpfr_gamma@@Base+0x15c8>
   32f8c:	mov	x21, xzr
   32f90:	mov	x22, xzr
   32f94:	mov	x19, x24
   32f98:	add	x27, x22, #0x1
   32f9c:	add	x0, x24, x27, lsl #4
   32fa0:	add	x1, x24, x22, lsl #4
   32fa4:	bl	c050 <__gmpz_set@plt>
   32fa8:	add	x20, x22, x25
   32fac:	cbz	x22, 32fe8 <mpfr_gamma@@Base+0x1538>
   32fb0:	mov	x28, x21
   32fb4:	mov	x23, x19
   32fb8:	mov	x0, x23
   32fbc:	mov	x1, x23
   32fc0:	mov	x2, x20
   32fc4:	bl	c1a0 <__gmpz_mul_ui@plt>
   32fc8:	sub	x22, x23, #0x10
   32fcc:	mov	x0, x23
   32fd0:	mov	x1, x23
   32fd4:	mov	x2, x22
   32fd8:	bl	ca10 <__gmpz_add@plt>
   32fdc:	adds	x28, x28, #0x1
   32fe0:	mov	x23, x22
   32fe4:	b.cc	32fb8 <mpfr_gamma@@Base+0x1508>  // b.lo, b.ul, b.last
   32fe8:	mov	x0, x24
   32fec:	mov	x1, x24
   32ff0:	mov	x2, x20
   32ff4:	bl	c1a0 <__gmpz_mul_ui@plt>
   32ff8:	add	x19, x19, #0x10
   32ffc:	cmp	x26, x27
   33000:	sub	x21, x21, #0x1
   33004:	mov	x22, x27
   33008:	b.ne	32f98 <mpfr_gamma@@Base+0x14e8>  // b.any
   3300c:	sub	x0, x29, #0x68
   33010:	mov	x1, x24
   33014:	mov	w2, wzr
   33018:	bl	c2b0 <mpfr_set_z@plt>
   3301c:	ldp	x27, x21, [sp, #96]
   33020:	ldr	x28, [x29, #8]
   33024:	cmp	x21, #0x2
   33028:	b.eq	33078 <mpfr_gamma@@Base+0x15c8>  // b.none
   3302c:	ldp	x22, x20, [sp, #72]
   33030:	ldr	x23, [sp, #88]
   33034:	mov	x19, xzr
   33038:	cmp	x19, #0x0
   3303c:	csel	x1, x28, x22, eq  // eq = none
   33040:	add	x0, sp, #0x98
   33044:	mov	x2, x20
   33048:	mov	w3, wzr
   3304c:	bl	c520 <mpfr_mul_z@plt>
   33050:	sub	x0, x29, #0x68
   33054:	sub	x1, x29, #0x68
   33058:	add	x2, sp, #0x98
   3305c:	mov	w3, wzr
   33060:	bl	c240 <mpfr_add@plt>
   33064:	sub	x23, x23, #0x1
   33068:	add	x20, x20, #0x10
   3306c:	add	x22, x22, #0x20
   33070:	sub	x19, x19, #0x1
   33074:	cbnz	x23, 33038 <mpfr_gamma@@Base+0x1588>
   33078:	sub	x0, x29, #0x48
   3307c:	sub	x1, x29, #0x48
   33080:	sub	x2, x29, #0x68
   33084:	mov	w3, wzr
   33088:	bl	be00 <mpfr_mul@plt>
   3308c:	ldr	x25, [sp, #112]
   33090:	add	x22, x25, x26
   33094:	cmp	x22, x27
   33098:	b.ls	32f60 <mpfr_gamma@@Base+0x14b0>  // b.plast
   3309c:	mov	x19, xzr
   330a0:	mov	x20, x24
   330a4:	mov	x0, x20
   330a8:	bl	c210 <mpfr_mpz_clear@plt>
   330ac:	add	x19, x19, #0x1
   330b0:	cmp	x19, x26
   330b4:	add	x20, x20, #0x10
   330b8:	b.ls	330a4 <mpfr_gamma@@Base+0x15f4>  // b.plast
   330bc:	ldr	x1, [sp, #16]
   330c0:	mov	x0, x24
   330c4:	bl	cc80 <mpfr_free_func@plt>
   330c8:	ldr	x21, [sp, #40]
   330cc:	ldr	x23, [sp, #24]
   330d0:	cmp	x26, #0x2
   330d4:	mov	w22, #0x80000000            	// #-2147483648
   330d8:	b.cc	330fc <mpfr_gamma@@Base+0x164c>  // b.lo, b.ul, b.last
   330dc:	add	x19, x23, #0x40
   330e0:	mov	w20, #0x2                   	// #2
   330e4:	mov	x0, x19
   330e8:	bl	c110 <mpfr_clear@plt>
   330ec:	add	x20, x20, #0x1
   330f0:	cmp	x20, x26
   330f4:	add	x19, x19, #0x20
   330f8:	b.ls	330e4 <mpfr_gamma@@Base+0x1634>  // b.plast
   330fc:	ldr	x1, [sp, #32]
   33100:	mov	x0, x23
   33104:	bl	cc80 <mpfr_free_func@plt>
   33108:	ldr	x24, [sp, #48]
   3310c:	cmp	x25, x27
   33110:	b.cs	33148 <mpfr_gamma@@Base+0x1698>  // b.hs, b.nlast
   33114:	sub	x0, x29, #0x68
   33118:	mov	x1, x28
   3311c:	mov	x2, x25
   33120:	mov	w3, wzr
   33124:	bl	c2d0 <mpfr_add_ui@plt>
   33128:	sub	x0, x29, #0x48
   3312c:	sub	x1, x29, #0x48
   33130:	sub	x2, x29, #0x68
   33134:	mov	w3, wzr
   33138:	bl	be00 <mpfr_mul@plt>
   3313c:	add	x25, x25, #0x1
   33140:	cmp	x27, x25
   33144:	b.ne	33114 <mpfr_gamma@@Base+0x1664>  // b.any
   33148:	sub	x0, x29, #0x48
   3314c:	sub	x1, x29, #0x48
   33150:	sub	x2, x29, #0x48
   33154:	mov	w3, wzr
   33158:	bl	be00 <mpfr_mul@plt>
   3315c:	sub	x0, x29, #0x88
   33160:	sub	x1, x29, #0x88
   33164:	sub	x2, x29, #0x48
   33168:	mov	w3, wzr
   3316c:	bl	c670 <mpfr_div@plt>
   33170:	ldur	x20, [x29, #-24]
   33174:	sub	x0, x29, #0x28
   33178:	sub	x1, x29, #0x28
   3317c:	mov	w2, wzr
   33180:	bl	c7a0 <mpfr_exp@plt>
   33184:	ldur	x8, [x29, #-24]
   33188:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3318c:	cmp	x8, x9
   33190:	b.ne	331e0 <mpfr_gamma@@Base+0x1730>  // b.any
   33194:	ldr	x0, [sp, #56]
   33198:	ldr	w5, [sp, #68]
   3319c:	add	x2, sp, #0x80
   331a0:	sub	x3, x29, #0x28
   331a4:	sub	x4, x29, #0x48
   331a8:	mov	x1, x28
   331ac:	bl	33728 <mpfr_gamma@@Base+0x1c78>
   331b0:	cbnz	w0, 33678 <mpfr_gamma@@Base+0x1bc8>
   331b4:	ldr	x19, [sp, #8]
   331b8:	mov	x8, #0xfffffffffffffeff    	// #-257
   331bc:	movk	x8, #0x7fff, lsl #48
   331c0:	sub	x8, x8, x24
   331c4:	cmp	x19, x8
   331c8:	b.gt	332a8 <mpfr_gamma@@Base+0x17f8>
   331cc:	add	x24, x24, x19
   331d0:	cmp	x24, #0x0
   331d4:	cinc	x8, x24, lt  // lt = tstop
   331d8:	asr	x19, x8, #1
   331dc:	b	32a50 <mpfr_gamma@@Base+0xfa0>
   331e0:	sub	x0, x29, #0x48
   331e4:	sub	x1, x29, #0x88
   331e8:	mov	w2, wzr
   331ec:	bl	c990 <mpfr_sqrt@plt>
   331f0:	sub	x0, x29, #0x28
   331f4:	sub	x1, x29, #0x28
   331f8:	sub	x2, x29, #0x48
   331fc:	mov	w3, wzr
   33200:	bl	be00 <mpfr_mul@plt>
   33204:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   33208:	movk	x8, #0xcccd
   3320c:	umulh	x8, x21, x8
   33210:	lsr	x9, x8, #2
   33214:	lsl	x9, x9, #1
   33218:	add	x8, x9, x8, lsr #2
   3321c:	add	x0, x8, #0x12
   33220:	bl	bd20 <__gmpfr_int_ceil_log2@plt>
   33224:	ucvtf	d0, x27
   33228:	fadd	d0, d0, d0
   3322c:	fadd	d0, d0, d8
   33230:	mov	w19, w0
   33234:	bl	c9b0 <__gmpfr_ceil_log2@plt>
   33238:	ldur	x8, [x29, #-24]
   3323c:	mov	x9, #0xfffffffffffffeff    	// #-257
   33240:	movk	x9, #0x7fff, lsl #48
   33244:	add	x9, x9, #0x105
   33248:	cmp	x8, x9
   3324c:	b.lt	331b4 <mpfr_gamma@@Base+0x1704>  // b.tstop
   33250:	ldur	x10, [x29, #-40]
   33254:	add	w9, w19, #0x2
   33258:	add	x9, x20, w9, sxtw
   3325c:	ldur	x8, [x29, #-16]
   33260:	cmp	x9, x0
   33264:	sub	x11, x10, #0x1
   33268:	csel	x9, x0, x9, lt  // lt = tstop
   3326c:	add	x10, x10, #0x3e
   33270:	cmp	x11, #0x0
   33274:	ldr	x3, [sp]
   33278:	csel	x10, x10, x11, lt  // lt = tstop
   3327c:	mvn	x9, x9
   33280:	asr	x10, x10, #6
   33284:	add	x1, x10, #0x1
   33288:	add	x2, x24, x9
   3328c:	mov	x0, x8
   33290:	bl	c3d0 <mpfr_round_p@plt>
   33294:	cbnz	w0, 3358c <mpfr_gamma@@Base+0x1adc>
   33298:	b	331b4 <mpfr_gamma@@Base+0x1704>
   3329c:	mov	w1, #0x9                   	// #9
   332a0:	mov	x2, #0xffffffffffffffff    	// #-1
   332a4:	b	32adc <mpfr_gamma@@Base+0x102c>
   332a8:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   332ac:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   332b0:	mov	w1, #0x2b8                 	// #696
   332b4:	add	x0, x0, #0x7c5
   332b8:	add	x2, x2, #0x9c6
   332bc:	bl	cb90 <mpfr_assert_fail@plt>
   332c0:	b	331cc <mpfr_gamma@@Base+0x171c>
   332c4:	subs	x19, x23, #0x1
   332c8:	b.eq	336e0 <mpfr_gamma@@Base+0x1c30>  // b.none
   332cc:	b.le	336e8 <mpfr_gamma@@Base+0x1c38>
   332d0:	clz	x8, x19
   332d4:	mov	w9, #0x40                  	// #64
   332d8:	sub	x8, x9, x8
   332dc:	add	x19, x8, x23
   332e0:	subs	x20, x19, #0x1
   332e4:	b.eq	33704 <mpfr_gamma@@Base+0x1c54>  // b.none
   332e8:	b.le	3370c <mpfr_gamma@@Base+0x1c5c>
   332ec:	clz	x8, x20
   332f0:	mov	w9, #0x4e                  	// #78
   332f4:	sub	x8, x9, x8
   332f8:	add	x22, x8, x19
   332fc:	ldr	w8, [sp, #68]
   33300:	adrp	x25, 59000 <mpfr_free_pool@@Base+0x387c>
   33304:	mov	w19, #0x40                  	// #64
   33308:	mov	w20, #0x2                   	// #2
   3330c:	cmp	w8, #0x0
   33310:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33314:	ldr	d8, [x8, #1872]
   33318:	mov	w21, #0x3                   	// #3
   3331c:	mov	w26, #0x1                   	// #1
   33320:	cinc	x23, x23, eq  // eq = none
   33324:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   33328:	add	x25, x25, #0x9c6
   3332c:	sub	x0, x29, #0x28
   33330:	mov	x1, x22
   33334:	bl	bf80 <mpfr_set_prec@plt>
   33338:	sub	x0, x29, #0x48
   3333c:	mov	x1, x22
   33340:	bl	bf80 <mpfr_set_prec@plt>
   33344:	sub	x0, x29, #0x68
   33348:	mov	x1, x22
   3334c:	bl	bf80 <mpfr_set_prec@plt>
   33350:	sub	x0, x29, #0x88
   33354:	mov	x1, x22
   33358:	bl	bf80 <mpfr_set_prec@plt>
   3335c:	sub	x0, x29, #0x28
   33360:	mov	w1, #0x2                   	// #2
   33364:	mov	w3, #0x3                   	// #3
   33368:	mov	x2, x28
   3336c:	bl	caa0 <mpfr_ui_sub@plt>
   33370:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   33374:	ldr	x1, [x0, #2704]
   33378:	add	x0, x0, #0xa90
   3337c:	blr	x1
   33380:	ldr	x8, [sp, #120]
   33384:	mov	w2, wzr
   33388:	add	x1, x8, x0
   3338c:	sub	x0, x29, #0x48
   33390:	bl	c3e0 <mpfr_cache@plt>
   33394:	sub	x0, x29, #0x68
   33398:	sub	x1, x29, #0x28
   3339c:	mov	w2, wzr
   333a0:	bl	c650 <mpfr_lngamma@plt>
   333a4:	ldur	x8, [x29, #-88]
   333a8:	cmp	x8, x27
   333ac:	b.ne	333b8 <mpfr_gamma@@Base+0x1908>  // b.any
   333b0:	mov	w28, #0x1                   	// #1
   333b4:	b	333e4 <mpfr_gamma@@Base+0x1934>
   333b8:	ldur	x24, [x29, #-24]
   333bc:	scvtf	d0, x24
   333c0:	fmul	d0, d0, d8
   333c4:	bl	c9b0 <__gmpfr_ceil_log2@plt>
   333c8:	ldur	x8, [x29, #-88]
   333cc:	add	x9, x24, x0
   333d0:	sub	x8, x9, x8
   333d4:	add	x9, x8, #0x1
   333d8:	add	x8, x8, #0x2
   333dc:	cmp	x9, #0x0
   333e0:	csel	x28, xzr, x8, lt  // lt = tstop
   333e4:	sub	x0, x29, #0x28
   333e8:	sub	x1, x29, #0x28
   333ec:	sub	x2, x29, #0x48
   333f0:	mov	w3, wzr
   333f4:	bl	be00 <mpfr_mul@plt>
   333f8:	ldur	x24, [x29, #-24]
   333fc:	sub	x0, x29, #0x28
   33400:	sub	x1, x29, #0x28
   33404:	mov	w2, wzr
   33408:	bl	c4a0 <mpfr_sin@plt>
   3340c:	ldur	x8, [x29, #-24]
   33410:	ldr	x1, [x29, #8]
   33414:	sub	x0, x29, #0x88
   33418:	mov	w2, #0x1                   	// #1
   3341c:	sub	x8, x24, x8
   33420:	add	x9, x8, #0x3
   33424:	add	x8, x8, #0x6
   33428:	cmp	x9, #0x0
   3342c:	mov	w3, wzr
   33430:	csel	x24, x20, x8, lt  // lt = tstop
   33434:	bl	c580 <mpfr_sub_ui@plt>
   33438:	sub	x0, x29, #0x88
   3343c:	sub	x1, x29, #0x88
   33440:	sub	x2, x29, #0x48
   33444:	mov	w3, wzr
   33448:	bl	be00 <mpfr_mul@plt>
   3344c:	sub	x0, x29, #0x88
   33450:	sub	x1, x29, #0x88
   33454:	sub	x2, x29, #0x28
   33458:	mov	w3, wzr
   3345c:	bl	c670 <mpfr_div@plt>
   33460:	sub	x0, x29, #0x88
   33464:	sub	x1, x29, #0x88
   33468:	mov	w3, #0x1                   	// #1
   3346c:	mov	w2, wzr
   33470:	bl	c6f0 <mpfr_set4@plt>
   33474:	cmp	x24, #0x2
   33478:	sub	x0, x29, #0x88
   3347c:	sub	x1, x29, #0x88
   33480:	mov	w2, wzr
   33484:	csinc	x24, x21, x24, lt  // lt = tstop
   33488:	bl	c130 <mpfr_log@plt>
   3348c:	add	x8, x24, #0x2
   33490:	cmp	x8, x22
   33494:	b.le	334a0 <mpfr_gamma@@Base+0x19f0>
   33498:	add	x22, x8, x22
   3349c:	b	33508 <mpfr_gamma@@Base+0x1a58>
   334a0:	ldur	x8, [x29, #-120]
   334a4:	ldur	x9, [x29, #-88]
   334a8:	sub	x0, x29, #0x28
   334ac:	sub	x1, x29, #0x88
   334b0:	sub	x10, x26, x8
   334b4:	cmp	x8, x27
   334b8:	csel	x10, xzr, x10, eq  // eq = none
   334bc:	add	x10, x10, x24
   334c0:	csel	x8, xzr, x8, eq  // eq = none
   334c4:	cmp	x10, #0x0
   334c8:	add	x24, x9, x28
   334cc:	csinc	x9, xzr, x10, lt  // lt = tstop
   334d0:	sub	x2, x29, #0x68
   334d4:	mov	w3, wzr
   334d8:	add	x28, x9, x8
   334dc:	bl	bc20 <mpfr_sub@plt>
   334e0:	ldur	x8, [x29, #-24]
   334e4:	cmp	x28, x24
   334e8:	mov	x9, #0xfffffffffffffeff    	// #-257
   334ec:	movk	x9, #0x7fff, lsl #48
   334f0:	csel	x10, x24, x28, lt  // lt = tstop
   334f4:	add	x9, x9, #0x105
   334f8:	sub	x10, x10, x8
   334fc:	cmp	x8, x9
   33500:	add	x8, x10, #0x1
   33504:	b.ge	33510 <mpfr_gamma@@Base+0x1a60>  // b.tcont
   33508:	ldr	x28, [x29, #8]
   3350c:	b	3354c <mpfr_gamma@@Base+0x1a9c>
   33510:	ldur	x9, [x29, #-40]
   33514:	cmp	x8, #0x0
   33518:	ldur	x0, [x29, #-16]
   3351c:	csinc	x8, xzr, x8, lt  // lt = tstop
   33520:	sub	x10, x9, #0x1
   33524:	add	x9, x9, #0x3e
   33528:	cmp	x10, #0x0
   3352c:	csel	x9, x9, x10, lt  // lt = tstop
   33530:	asr	x9, x9, #6
   33534:	add	x1, x9, #0x1
   33538:	sub	x2, x22, x8
   3353c:	mov	x3, x23
   33540:	bl	c3d0 <mpfr_round_p@plt>
   33544:	ldr	x28, [x29, #8]
   33548:	cbnz	w0, 3358c <mpfr_gamma@@Base+0x1adc>
   3354c:	mov	x8, #0xfffffffffffffeff    	// #-257
   33550:	movk	x8, #0x7fff, lsl #48
   33554:	sub	x8, x8, x22
   33558:	cmp	x19, x8
   3355c:	b.gt	33574 <mpfr_gamma@@Base+0x1ac4>
   33560:	add	x22, x22, x19
   33564:	cmp	x22, #0x0
   33568:	cinc	x8, x22, lt  // lt = tstop
   3356c:	asr	x19, x8, #1
   33570:	b	3332c <mpfr_gamma@@Base+0x187c>
   33574:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33578:	mov	w1, #0x1a5                 	// #421
   3357c:	add	x0, x0, #0x7c5
   33580:	mov	x2, x25
   33584:	bl	cb90 <mpfr_assert_fail@plt>
   33588:	b	33560 <mpfr_gamma@@Base+0x1ab0>
   3358c:	ldr	x20, [sp, #56]
   33590:	ldur	w3, [x29, #-32]
   33594:	ldr	w2, [sp, #68]
   33598:	sub	x1, x29, #0x28
   3359c:	mov	x0, x20
   335a0:	bl	c6f0 <mpfr_set4@plt>
   335a4:	mov	w19, w0
   335a8:	sub	x0, x29, #0x28
   335ac:	bl	c110 <mpfr_clear@plt>
   335b0:	sub	x0, x29, #0x48
   335b4:	bl	c110 <mpfr_clear@plt>
   335b8:	sub	x0, x29, #0x68
   335bc:	bl	c110 <mpfr_clear@plt>
   335c0:	sub	x0, x29, #0x88
   335c4:	bl	c110 <mpfr_clear@plt>
   335c8:	add	x0, sp, #0x98
   335cc:	bl	c110 <mpfr_clear@plt>
   335d0:	ldr	w8, [sp, #128]
   335d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   335d8:	ldr	x1, [x0, #2656]
   335dc:	add	x0, x0, #0xa60
   335e0:	blr	x1
   335e4:	ldr	x10, [sp, #120]
   335e8:	ldr	x9, [sp, #136]
   335ec:	str	w8, [x10, x0]
   335f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   335f4:	ldr	x1, [x0, #2592]
   335f8:	add	x0, x0, #0xa20
   335fc:	blr	x1
   33600:	ldr	x11, [sp, #144]
   33604:	str	x9, [x10, x0]
   33608:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3360c:	ldr	x1, [x0, #2624]
   33610:	add	x0, x0, #0xa40
   33614:	blr	x1
   33618:	str	x11, [x10, x0]
   3361c:	ldr	x10, [x20, #16]
   33620:	cmp	x10, x11
   33624:	b.gt	33680 <mpfr_gamma@@Base+0x1bd0>
   33628:	cmp	x10, x9
   3362c:	b.lt	33680 <mpfr_gamma@@Base+0x1bd0>  // b.tstop
   33630:	cbz	w19, 33650 <mpfr_gamma@@Base+0x1ba0>
   33634:	orr	w8, w8, #0x8
   33638:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3363c:	ldr	x1, [x0, #2656]
   33640:	add	x0, x0, #0xa60
   33644:	blr	x1
   33648:	ldr	x9, [sp, #120]
   3364c:	str	w8, [x9, x0]
   33650:	mov	w0, w19
   33654:	ldp	x20, x19, [sp, #416]
   33658:	ldp	x22, x21, [sp, #400]
   3365c:	ldp	x24, x23, [sp, #384]
   33660:	ldp	x26, x25, [sp, #368]
   33664:	ldp	x28, x27, [sp, #352]
   33668:	ldp	x29, x30, [sp, #336]
   3366c:	ldr	d8, [sp, #320]
   33670:	add	sp, sp, #0x1b0
   33674:	ret
   33678:	ldr	x20, [sp, #56]
   3367c:	b	335a4 <mpfr_gamma@@Base+0x1af4>
   33680:	ldr	w2, [sp, #68]
   33684:	mov	x0, x20
   33688:	mov	w1, w19
   3368c:	bl	cb80 <mpfr_check_range@plt>
   33690:	mov	w19, w0
   33694:	b	33650 <mpfr_gamma@@Base+0x1ba0>
   33698:	mov	x8, xzr
   3369c:	b	32a14 <mpfr_gamma@@Base+0xf64>
   336a0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   336a4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   336a8:	add	x0, x0, #0x7c5
   336ac:	add	x2, x2, #0x490
   336b0:	mov	w1, #0x1b0                 	// #432
   336b4:	bl	cb90 <mpfr_assert_fail@plt>
   336b8:	b	32a08 <mpfr_gamma@@Base+0xf58>
   336bc:	mov	w8, #0xd                   	// #13
   336c0:	b	32a30 <mpfr_gamma@@Base+0xf80>
   336c4:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   336c8:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   336cc:	add	x0, x0, #0x7c5
   336d0:	add	x2, x2, #0x71d
   336d4:	mov	w1, #0x1b1                 	// #433
   336d8:	bl	cb90 <mpfr_assert_fail@plt>
   336dc:	b	32a24 <mpfr_gamma@@Base+0xf74>
   336e0:	mov	x8, xzr
   336e4:	b	332dc <mpfr_gamma@@Base+0x182c>
   336e8:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   336ec:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   336f0:	add	x0, x0, #0x7c5
   336f4:	add	x2, x2, #0x490
   336f8:	mov	w1, #0x14a                 	// #330
   336fc:	bl	cb90 <mpfr_assert_fail@plt>
   33700:	b	332d0 <mpfr_gamma@@Base+0x1820>
   33704:	mov	w8, #0xe                   	// #14
   33708:	b	332f8 <mpfr_gamma@@Base+0x1848>
   3370c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33710:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33714:	add	x0, x0, #0x7c5
   33718:	add	x2, x2, #0x71d
   3371c:	mov	w1, #0x14b                 	// #331
   33720:	bl	cb90 <mpfr_assert_fail@plt>
   33724:	b	332ec <mpfr_gamma@@Base+0x183c>
   33728:	sub	sp, sp, #0x130
   3372c:	stp	x29, x30, [sp, #208]
   33730:	str	x28, [sp, #224]
   33734:	stp	x26, x25, [sp, #240]
   33738:	stp	x24, x23, [sp, #256]
   3373c:	stp	x22, x21, [sp, #272]
   33740:	stp	x20, x19, [sp, #288]
   33744:	add	x29, sp, #0xd0
   33748:	mov	w23, w5
   3374c:	mov	x21, x4
   33750:	mov	x22, x3
   33754:	mov	x19, x2
   33758:	mov	x2, x1
   3375c:	mov	x20, x0
   33760:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   33764:	ldr	x1, [x0, #2656]
   33768:	add	x0, x0, #0xa60
   3376c:	blr	x1
   33770:	mrs	x25, tpidr_el0
   33774:	mov	x24, x0
   33778:	str	wzr, [x25, x0]
   3377c:	add	x1, x29, #0x1c
   33780:	mov	w3, #0x3                   	// #3
   33784:	mov	x0, x22
   33788:	bl	c140 <mpfr_lgamma@plt>
   3378c:	ldr	w24, [x25, x24]
   33790:	cbz	w0, 3392c <mpfr_gamma@@Base+0x1e7c>
   33794:	ldr	w3, [x22, #8]
   33798:	tbnz	w24, #1, 33948 <mpfr_gamma@@Base+0x1e98>
   3379c:	mov	x0, x21
   337a0:	mov	x1, x22
   337a4:	mov	w2, wzr
   337a8:	bl	c6f0 <mpfr_set4@plt>
   337ac:	mov	x0, x21
   337b0:	bl	c1c0 <mpfr_nextabove@plt>
   337b4:	ldr	w8, [x29, #28]
   337b8:	ldr	x24, [x20]
   337bc:	cmp	w23, #0x3
   337c0:	mov	w9, #0x2                   	// #2
   337c4:	mov	w10, #0x3                   	// #3
   337c8:	csel	w9, w9, w23, eq  // eq = none
   337cc:	cmp	w23, #0x2
   337d0:	mov	x11, #0x7fffffffffffff00    	// #9223372036854775552
   337d4:	csel	w9, w10, w9, eq  // eq = none
   337d8:	cmp	w8, #0x0
   337dc:	csel	w23, w9, w23, lt  // lt = tstop
   337e0:	cmp	x24, x11
   337e4:	b.ge	339b0 <mpfr_gamma@@Base+0x1f00>  // b.tcont
   337e8:	sub	x8, x24, #0x1
   337ec:	add	x9, x24, #0x3e
   337f0:	cmp	x8, #0x0
   337f4:	csel	x8, x9, x8, lt  // lt = tstop
   337f8:	asr	x8, x8, #6
   337fc:	cmp	x24, #0x201
   33800:	add	x26, x8, #0x1
   33804:	b.lt	33818 <mpfr_gamma@@Base+0x1d68>  // b.tstop
   33808:	lsl	x0, x26, #4
   3380c:	str	x0, [sp]
   33810:	bl	cd50 <mpfr_allocate_func@plt>
   33814:	b	33824 <mpfr_gamma@@Base+0x1d74>
   33818:	mov	x8, sp
   3381c:	add	x0, x8, #0x10
   33820:	str	xzr, [sp]
   33824:	mov	w8, #0x1                   	// #1
   33828:	add	x9, x0, x26, lsl #3
   3382c:	str	x0, [sp, #8]
   33830:	stur	x0, [x29, #-8]
   33834:	stur	x24, [x29, #-64]
   33838:	stur	w8, [x29, #-24]
   3383c:	stp	x9, x24, [x29, #-40]
   33840:	stur	w8, [x29, #-56]
   33844:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   33848:	ldr	x1, [x0, #2656]
   3384c:	add	x0, x0, #0xa60
   33850:	blr	x1
   33854:	mov	x24, x0
   33858:	str	wzr, [x25, x0]
   3385c:	sub	x0, x29, #0x20
   33860:	mov	x1, x22
   33864:	mov	w2, w23
   33868:	bl	c7a0 <mpfr_exp@plt>
   3386c:	ldr	w26, [x25, x24]
   33870:	mov	w22, w0
   33874:	sub	x0, x29, #0x40
   33878:	mov	x1, x21
   3387c:	mov	w2, w23
   33880:	str	wzr, [x25, x24]
   33884:	bl	c7a0 <mpfr_exp@plt>
   33888:	ldr	w21, [x25, x24]
   3388c:	mov	w23, w0
   33890:	sub	x0, x29, #0x20
   33894:	sub	x1, x29, #0x40
   33898:	bl	cab0 <mpfr_equal_p@plt>
   3389c:	cmp	w26, w21
   338a0:	mov	w21, wzr
   338a4:	b.ne	338f8 <mpfr_gamma@@Base+0x1e48>  // b.any
   338a8:	cbz	w0, 338f8 <mpfr_gamma@@Base+0x1e48>
   338ac:	cmp	w22, #0x0
   338b0:	cset	w8, gt
   338b4:	cmp	w23, #0x0
   338b8:	cset	w9, gt
   338bc:	and	w8, w8, w9
   338c0:	tbnz	w8, #0, 338cc <mpfr_gamma@@Base+0x1e1c>
   338c4:	and	w8, w23, w22
   338c8:	tbz	w8, #31, 33994 <mpfr_gamma@@Base+0x1ee4>
   338cc:	ldr	w3, [x29, #28]
   338d0:	sub	x1, x29, #0x20
   338d4:	mov	x0, x20
   338d8:	mov	w2, wzr
   338dc:	bl	c6f0 <mpfr_set4@plt>
   338e0:	ldr	w8, [x29, #28]
   338e4:	ldr	w9, [x19]
   338e8:	cmp	w8, #0x0
   338ec:	orr	w8, w9, w26
   338f0:	cneg	w21, w22, lt  // lt = tstop
   338f4:	str	w8, [x19]
   338f8:	ldr	x1, [sp]
   338fc:	cbz	x1, 33908 <mpfr_gamma@@Base+0x1e58>
   33900:	ldr	x0, [sp, #8]
   33904:	bl	cc80 <mpfr_free_func@plt>
   33908:	mov	w0, w21
   3390c:	ldp	x20, x19, [sp, #288]
   33910:	ldp	x22, x21, [sp, #272]
   33914:	ldp	x24, x23, [sp, #256]
   33918:	ldp	x26, x25, [sp, #240]
   3391c:	ldr	x28, [sp, #224]
   33920:	ldp	x29, x30, [sp, #208]
   33924:	add	sp, sp, #0x130
   33928:	ret
   3392c:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33930:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33934:	add	x0, x0, #0x7c5
   33938:	add	x2, x2, #0x7d1
   3393c:	mov	w1, #0x4b                  	// #75
   33940:	bl	cb90 <mpfr_assert_fail@plt>
   33944:	b	33794 <mpfr_gamma@@Base+0x1ce4>
   33948:	ldr	w8, [x19]
   3394c:	cmp	w3, #0x1
   33950:	b.lt	33970 <mpfr_gamma@@Base+0x1ec0>  // b.tstop
   33954:	orr	w8, w8, #0x2
   33958:	str	w8, [x19]
   3395c:	ldr	w2, [x29, #28]
   33960:	mov	x0, x20
   33964:	mov	w1, w23
   33968:	bl	bff0 <mpfr_overflow@plt>
   3396c:	b	3398c <mpfr_gamma@@Base+0x1edc>
   33970:	orr	w8, w8, #0x1
   33974:	str	w8, [x19]
   33978:	ldr	w2, [x29, #28]
   3397c:	cmp	w23, #0x0
   33980:	csinc	w1, w23, wzr, ne  // ne = any
   33984:	mov	x0, x20
   33988:	bl	c420 <mpfr_underflow@plt>
   3398c:	mov	w21, w0
   33990:	b	33908 <mpfr_gamma@@Base+0x1e58>
   33994:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33998:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3399c:	add	x0, x0, #0x7c5
   339a0:	add	x2, x2, #0x7dc
   339a4:	mov	w1, #0x69                  	// #105
   339a8:	bl	cb90 <mpfr_assert_fail@plt>
   339ac:	b	338cc <mpfr_gamma@@Base+0x1e1c>
   339b0:	bl	c940 <mpfr_abort_prec_max@plt>

00000000000339b4 <mpfr_set_ld@@Base>:
   339b4:	sub	sp, sp, #0x1d0
   339b8:	stp	x29, x30, [sp, #368]
   339bc:	add	x29, sp, #0x170
   339c0:	str	x28, [sp, #384]
   339c4:	stp	x26, x25, [sp, #400]
   339c8:	stp	x24, x23, [sp, #416]
   339cc:	stp	x22, x21, [sp, #432]
   339d0:	stp	x20, x19, [sp, #448]
   339d4:	stur	q0, [x29, #-80]
   339d8:	ldur	x8, [x29, #-72]
   339dc:	mov	w20, w1
   339e0:	mov	x19, x0
   339e4:	mvn	x9, x8
   339e8:	tst	x9, #0x7fff000000000000
   339ec:	b.ne	33a40 <mpfr_set_ld@@Base+0x8c>  // b.any
   339f0:	ldur	x9, [x29, #-80]
   339f4:	lsr	x10, x9, #32
   339f8:	orr	w9, w10, w9
   339fc:	orr	w9, w9, w8
   33a00:	ubfx	x8, x8, #32, #16
   33a04:	orr	w8, w8, w9
   33a08:	cbz	w8, 33a40 <mpfr_set_ld@@Base+0x8c>
   33a0c:	mov	x8, #0x2                   	// #2
   33a10:	movk	x8, #0x8000, lsl #48
   33a14:	str	x8, [x19, #16]
   33a18:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   33a1c:	ldr	x1, [x0, #2656]
   33a20:	add	x0, x0, #0xa60
   33a24:	blr	x1
   33a28:	mrs	x8, tpidr_el0
   33a2c:	ldr	w9, [x8, x0]
   33a30:	mov	w21, wzr
   33a34:	orr	w9, w9, #0x4
   33a38:	str	w9, [x8, x0]
   33a3c:	b	33a88 <mpfr_set_ld@@Base+0xd4>
   33a40:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33a44:	ldr	q1, [x8, #2080]
   33a48:	str	q0, [sp, #176]
   33a4c:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33a50:	cmp	w0, #0x0
   33a54:	b.le	33a60 <mpfr_set_ld@@Base+0xac>
   33a58:	mov	w1, #0x1                   	// #1
   33a5c:	b	33a7c <mpfr_set_ld@@Base+0xc8>
   33a60:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33a64:	ldr	q1, [x8, #2096]
   33a68:	ldr	q0, [sp, #176]
   33a6c:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33a70:	cmp	w0, #0x0
   33a74:	b.ge	33aac <mpfr_set_ld@@Base+0xf8>  // b.tcont
   33a78:	mov	w1, #0xffffffff            	// #-1
   33a7c:	mov	x0, x19
   33a80:	bl	c600 <mpfr_set_inf@plt>
   33a84:	mov	w21, wzr
   33a88:	mov	w0, w21
   33a8c:	ldp	x20, x19, [sp, #448]
   33a90:	ldp	x22, x21, [sp, #432]
   33a94:	ldp	x24, x23, [sp, #416]
   33a98:	ldp	x26, x25, [sp, #400]
   33a9c:	ldr	x28, [sp, #384]
   33aa0:	ldp	x29, x30, [sp, #368]
   33aa4:	add	sp, sp, #0x1d0
   33aa8:	ret
   33aac:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33ab0:	ldr	q1, [x8, #2112]
   33ab4:	ldr	q0, [sp, #176]
   33ab8:	stur	q1, [x29, #-112]
   33abc:	bl	56348 <mpfr_free_pool@@Base+0xbc4>
   33ac0:	cbnz	w0, 33ae0 <mpfr_set_ld@@Base+0x12c>
   33ac4:	ldr	q0, [sp, #176]
   33ac8:	bl	57af0 <mpfr_free_pool@@Base+0x236c>
   33acc:	mov	x0, x19
   33ad0:	mov	w1, w20
   33ad4:	bl	bef0 <mpfr_set_d@plt>
   33ad8:	mov	w21, w0
   33adc:	b	33a88 <mpfr_set_ld@@Base+0xd4>
   33ae0:	sub	x0, x29, #0x20
   33ae4:	mov	w1, #0x71                  	// #113
   33ae8:	bl	cad0 <mpfr_init2@plt>
   33aec:	sub	x0, x29, #0x40
   33af0:	mov	w1, #0x35                  	// #53
   33af4:	bl	cad0 <mpfr_init2@plt>
   33af8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   33afc:	ldr	x1, [x0, #2656]
   33b00:	add	x0, x0, #0xa60
   33b04:	blr	x1
   33b08:	mrs	x22, tpidr_el0
   33b0c:	ldr	w23, [x22, x0]
   33b10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   33b14:	ldr	x1, [x0, #2592]
   33b18:	add	x0, x0, #0xa20
   33b1c:	blr	x1
   33b20:	ldr	x24, [x22, x0]
   33b24:	mov	x8, x0
   33b28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   33b2c:	ldr	x1, [x0, #2624]
   33b30:	add	x0, x0, #0xa40
   33b34:	blr	x1
   33b38:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   33b3c:	str	x9, [x22, x8]
   33b40:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33b44:	ldr	q0, [x8, #2128]
   33b48:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33b4c:	ldr	x25, [x22, x0]
   33b50:	mov	w21, wzr
   33b54:	stur	q0, [x29, #-160]
   33b58:	ldr	q0, [x8, #2160]
   33b5c:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33b60:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   33b64:	stur	q0, [x29, #-144]
   33b68:	ldr	q0, [x8, #2208]
   33b6c:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33b70:	str	q0, [sp, #128]
   33b74:	ldr	q0, [x8, #2240]
   33b78:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33b7c:	str	q0, [sp, #112]
   33b80:	ldr	q0, [x8, #2272]
   33b84:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33b88:	str	q0, [sp, #96]
   33b8c:	ldr	q0, [x8, #2288]
   33b90:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33b94:	str	q0, [sp, #80]
   33b98:	ldr	q0, [x8, #2320]
   33b9c:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33ba0:	str	q0, [sp, #64]
   33ba4:	ldr	q0, [x8, #2304]
   33ba8:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33bac:	str	q0, [sp, #48]
   33bb0:	ldr	q0, [x8, #2176]
   33bb4:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33bb8:	stur	q0, [x29, #-176]
   33bbc:	ldr	q0, [x8, #2256]
   33bc0:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33bc4:	str	q0, [sp, #32]
   33bc8:	ldr	q0, [x8, #2224]
   33bcc:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33bd0:	str	q0, [sp, #16]
   33bd4:	ldr	q0, [x8, #2192]
   33bd8:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   33bdc:	str	q0, [sp]
   33be0:	ldr	q0, [x8, #2144]
   33be4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   33be8:	str	x8, [x22, x0]
   33bec:	str	q0, [sp, #160]
   33bf0:	ldr	q0, [sp, #176]
   33bf4:	stur	x26, [x29, #-16]
   33bf8:	ldur	q1, [x29, #-160]
   33bfc:	stur	q0, [x29, #-96]
   33c00:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33c04:	cmp	w0, #0x0
   33c08:	b.gt	33e2c <mpfr_set_ld@@Base+0x478>
   33c0c:	ldur	q0, [x29, #-96]
   33c10:	ldr	q1, [sp, #160]
   33c14:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33c18:	cmp	w0, #0x0
   33c1c:	b.lt	33e2c <mpfr_set_ld@@Base+0x478>  // b.tstop
   33c20:	ldur	q0, [x29, #-144]
   33c24:	ldur	q1, [x29, #-96]
   33c28:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33c2c:	stur	q0, [x29, #-128]
   33c30:	ldp	q1, q0, [x29, #-112]
   33c34:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33c38:	ldur	q0, [x29, #-128]
   33c3c:	cmp	w0, #0x0
   33c40:	b.lt	33c48 <mpfr_set_ld@@Base+0x294>  // b.tstop
   33c44:	ldur	q0, [x29, #-96]
   33c48:	ldur	q1, [x29, #-176]
   33c4c:	str	q0, [sp, #144]
   33c50:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33c54:	cmp	w0, #0x0
   33c58:	b.ge	33fe8 <mpfr_set_ld@@Base+0x634>  // b.tcont
   33c5c:	ldr	q0, [sp, #144]
   33c60:	ldr	q1, [sp]
   33c64:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33c68:	cmp	w0, #0x0
   33c6c:	b.gt	33ca8 <mpfr_set_ld@@Base+0x2f4>
   33c70:	ldur	q0, [x29, #-96]
   33c74:	ldr	q1, [sp, #128]
   33c78:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33c7c:	sub	x0, x29, #0x20
   33c80:	sub	x1, x29, #0x20
   33c84:	mov	w2, #0x2000                	// #8192
   33c88:	mov	w3, #0x1                   	// #1
   33c8c:	stur	q0, [x29, #-96]
   33c90:	sub	w21, w21, #0x2, lsl #12
   33c94:	bl	bc40 <mpfr_mul_2si@plt>
   33c98:	ldur	q0, [x29, #-144]
   33c9c:	ldur	q1, [x29, #-96]
   33ca0:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33ca4:	stur	q0, [x29, #-128]
   33ca8:	ldp	q1, q0, [x29, #-112]
   33cac:	stur	q0, [x29, #-96]
   33cb0:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33cb4:	ldur	q0, [x29, #-128]
   33cb8:	cmp	w0, #0x0
   33cbc:	b.lt	33cc4 <mpfr_set_ld@@Base+0x310>  // b.tstop
   33cc0:	ldur	q0, [x29, #-96]
   33cc4:	ldr	q1, [sp, #16]
   33cc8:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33ccc:	cmp	w0, #0x0
   33cd0:	b.gt	33d0c <mpfr_set_ld@@Base+0x358>
   33cd4:	ldur	q0, [x29, #-96]
   33cd8:	ldr	q1, [sp, #112]
   33cdc:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33ce0:	sub	x0, x29, #0x20
   33ce4:	sub	x1, x29, #0x20
   33ce8:	mov	w2, #0x1000                	// #4096
   33cec:	mov	w3, #0x1                   	// #1
   33cf0:	stur	q0, [x29, #-96]
   33cf4:	sub	w21, w21, #0x1, lsl #12
   33cf8:	bl	bc40 <mpfr_mul_2si@plt>
   33cfc:	ldur	q0, [x29, #-144]
   33d00:	ldur	q1, [x29, #-96]
   33d04:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33d08:	stur	q0, [x29, #-128]
   33d0c:	ldp	q1, q0, [x29, #-112]
   33d10:	stur	q0, [x29, #-96]
   33d14:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33d18:	ldur	q0, [x29, #-128]
   33d1c:	cmp	w0, #0x0
   33d20:	b.lt	33d28 <mpfr_set_ld@@Base+0x374>  // b.tstop
   33d24:	ldur	q0, [x29, #-96]
   33d28:	ldr	q1, [sp, #32]
   33d2c:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33d30:	cmp	w0, #0x0
   33d34:	b.gt	33d70 <mpfr_set_ld@@Base+0x3bc>
   33d38:	ldur	q0, [x29, #-96]
   33d3c:	ldr	q1, [sp, #96]
   33d40:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33d44:	sub	x0, x29, #0x20
   33d48:	sub	x1, x29, #0x20
   33d4c:	mov	w2, #0x800                 	// #2048
   33d50:	mov	w3, #0x1                   	// #1
   33d54:	stur	q0, [x29, #-96]
   33d58:	sub	w21, w21, #0x800
   33d5c:	bl	bc40 <mpfr_mul_2si@plt>
   33d60:	ldur	q0, [x29, #-144]
   33d64:	ldur	q1, [x29, #-96]
   33d68:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33d6c:	stur	q0, [x29, #-128]
   33d70:	ldp	q1, q0, [x29, #-112]
   33d74:	stur	q0, [x29, #-96]
   33d78:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33d7c:	ldur	q0, [x29, #-128]
   33d80:	cmp	w0, #0x0
   33d84:	b.lt	33d8c <mpfr_set_ld@@Base+0x3d8>  // b.tstop
   33d88:	ldur	q0, [x29, #-96]
   33d8c:	ldur	q1, [x29, #-176]
   33d90:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33d94:	cmp	w0, #0x0
   33d98:	b.gt	33dd4 <mpfr_set_ld@@Base+0x420>
   33d9c:	ldur	q0, [x29, #-96]
   33da0:	ldr	q1, [sp, #80]
   33da4:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33da8:	sub	x0, x29, #0x20
   33dac:	sub	x1, x29, #0x20
   33db0:	mov	w2, #0x400                 	// #1024
   33db4:	mov	w3, #0x1                   	// #1
   33db8:	stur	q0, [x29, #-96]
   33dbc:	sub	w21, w21, #0x400
   33dc0:	bl	bc40 <mpfr_mul_2si@plt>
   33dc4:	ldur	q0, [x29, #-144]
   33dc8:	ldur	q1, [x29, #-96]
   33dcc:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33dd0:	stur	q0, [x29, #-128]
   33dd4:	ldp	q1, q0, [x29, #-112]
   33dd8:	stur	q0, [x29, #-96]
   33ddc:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33de0:	ldur	q0, [x29, #-128]
   33de4:	cmp	w0, #0x0
   33de8:	b.lt	33df0 <mpfr_set_ld@@Base+0x43c>  // b.tstop
   33dec:	ldur	q0, [x29, #-96]
   33df0:	ldr	q1, [sp, #48]
   33df4:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   33df8:	cmp	w0, #0x0
   33dfc:	b.gt	33fe0 <mpfr_set_ld@@Base+0x62c>
   33e00:	ldur	q0, [x29, #-96]
   33e04:	ldr	q1, [sp, #64]
   33e08:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33e0c:	sub	x0, x29, #0x20
   33e10:	sub	x1, x29, #0x20
   33e14:	mov	w2, #0x200                 	// #512
   33e18:	mov	w3, #0x1                   	// #1
   33e1c:	stur	q0, [x29, #-96]
   33e20:	sub	w21, w21, #0x200
   33e24:	bl	bc40 <mpfr_mul_2si@plt>
   33e28:	b	3406c <mpfr_set_ld@@Base+0x6b8>
   33e2c:	ldur	q0, [x29, #-144]
   33e30:	ldur	q1, [x29, #-96]
   33e34:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33e38:	stur	q0, [x29, #-128]
   33e3c:	ldp	q1, q0, [x29, #-112]
   33e40:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33e44:	ldur	q0, [x29, #-128]
   33e48:	cmp	w0, #0x0
   33e4c:	b.lt	33e54 <mpfr_set_ld@@Base+0x4a0>  // b.tstop
   33e50:	ldur	q0, [x29, #-96]
   33e54:	ldr	q1, [sp, #128]
   33e58:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33e5c:	tbnz	w0, #31, 33e98 <mpfr_set_ld@@Base+0x4e4>
   33e60:	ldur	q0, [x29, #-96]
   33e64:	ldr	q1, [sp]
   33e68:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33e6c:	sub	x0, x29, #0x20
   33e70:	sub	x1, x29, #0x20
   33e74:	mov	w2, #0x2000                	// #8192
   33e78:	mov	w3, #0x1                   	// #1
   33e7c:	stur	q0, [x29, #-96]
   33e80:	add	w21, w21, #0x2, lsl #12
   33e84:	bl	c470 <mpfr_div_2si@plt>
   33e88:	ldur	q0, [x29, #-144]
   33e8c:	ldur	q1, [x29, #-96]
   33e90:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33e94:	stur	q0, [x29, #-128]
   33e98:	ldp	q1, q0, [x29, #-112]
   33e9c:	stur	q0, [x29, #-96]
   33ea0:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33ea4:	ldur	q0, [x29, #-128]
   33ea8:	cmp	w0, #0x0
   33eac:	b.lt	33eb4 <mpfr_set_ld@@Base+0x500>  // b.tstop
   33eb0:	ldur	q0, [x29, #-96]
   33eb4:	ldr	q1, [sp, #112]
   33eb8:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33ebc:	tbnz	w0, #31, 33ef8 <mpfr_set_ld@@Base+0x544>
   33ec0:	ldur	q0, [x29, #-96]
   33ec4:	ldr	q1, [sp, #16]
   33ec8:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33ecc:	sub	x0, x29, #0x20
   33ed0:	sub	x1, x29, #0x20
   33ed4:	mov	w2, #0x1000                	// #4096
   33ed8:	mov	w3, #0x1                   	// #1
   33edc:	stur	q0, [x29, #-96]
   33ee0:	add	w21, w21, #0x1, lsl #12
   33ee4:	bl	c470 <mpfr_div_2si@plt>
   33ee8:	ldur	q0, [x29, #-144]
   33eec:	ldur	q1, [x29, #-96]
   33ef0:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33ef4:	stur	q0, [x29, #-128]
   33ef8:	ldp	q1, q0, [x29, #-112]
   33efc:	stur	q0, [x29, #-96]
   33f00:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33f04:	ldur	q0, [x29, #-128]
   33f08:	cmp	w0, #0x0
   33f0c:	b.lt	33f14 <mpfr_set_ld@@Base+0x560>  // b.tstop
   33f10:	ldur	q0, [x29, #-96]
   33f14:	ldr	q1, [sp, #96]
   33f18:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33f1c:	tbnz	w0, #31, 33f58 <mpfr_set_ld@@Base+0x5a4>
   33f20:	ldur	q0, [x29, #-96]
   33f24:	ldr	q1, [sp, #32]
   33f28:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33f2c:	sub	x0, x29, #0x20
   33f30:	sub	x1, x29, #0x20
   33f34:	mov	w2, #0x800                 	// #2048
   33f38:	mov	w3, #0x1                   	// #1
   33f3c:	stur	q0, [x29, #-96]
   33f40:	add	w21, w21, #0x800
   33f44:	bl	c470 <mpfr_div_2si@plt>
   33f48:	ldur	q0, [x29, #-144]
   33f4c:	ldur	q1, [x29, #-96]
   33f50:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33f54:	stur	q0, [x29, #-128]
   33f58:	ldp	q1, q0, [x29, #-112]
   33f5c:	stur	q0, [x29, #-96]
   33f60:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33f64:	ldur	q0, [x29, #-128]
   33f68:	cmp	w0, #0x0
   33f6c:	b.lt	33f74 <mpfr_set_ld@@Base+0x5c0>  // b.tstop
   33f70:	ldur	q0, [x29, #-96]
   33f74:	ldr	q1, [sp, #80]
   33f78:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33f7c:	tbnz	w0, #31, 33fb8 <mpfr_set_ld@@Base+0x604>
   33f80:	ldur	q0, [x29, #-96]
   33f84:	ldur	q1, [x29, #-176]
   33f88:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   33f8c:	sub	x0, x29, #0x20
   33f90:	sub	x1, x29, #0x20
   33f94:	mov	w2, #0x400                 	// #1024
   33f98:	mov	w3, #0x1                   	// #1
   33f9c:	stur	q0, [x29, #-96]
   33fa0:	add	w21, w21, #0x400
   33fa4:	bl	c470 <mpfr_div_2si@plt>
   33fa8:	ldur	q0, [x29, #-144]
   33fac:	ldur	q1, [x29, #-96]
   33fb0:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   33fb4:	stur	q0, [x29, #-128]
   33fb8:	ldp	q1, q0, [x29, #-112]
   33fbc:	stur	q0, [x29, #-96]
   33fc0:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33fc4:	ldur	q0, [x29, #-128]
   33fc8:	cmp	w0, #0x0
   33fcc:	b.lt	33fd4 <mpfr_set_ld@@Base+0x620>  // b.tstop
   33fd0:	ldur	q0, [x29, #-96]
   33fd4:	ldr	q1, [sp, #64]
   33fd8:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   33fdc:	tbz	w0, #31, 34044 <mpfr_set_ld@@Base+0x690>
   33fe0:	ldp	q1, q0, [x29, #-112]
   33fe4:	b	34074 <mpfr_set_ld@@Base+0x6c0>
   33fe8:	ldur	q0, [x29, #-96]
   33fec:	bl	57af0 <mpfr_free_pool@@Base+0x236c>
   33ff0:	sub	x0, x29, #0x40
   33ff4:	mov	w1, #0x1                   	// #1
   33ff8:	bl	bef0 <mpfr_set_d@plt>
   33ffc:	sub	x0, x29, #0x20
   34000:	sub	x1, x29, #0x20
   34004:	sub	x2, x29, #0x40
   34008:	mov	w3, #0x1                   	// #1
   3400c:	bl	c240 <mpfr_add@plt>
   34010:	cbnz	w0, 3408c <mpfr_set_ld@@Base+0x6d8>
   34014:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34018:	ldr	x1, [x0, #2720]
   3401c:	add	x0, x0, #0xaa0
   34020:	blr	x1
   34024:	ldr	w1, [x22, x0]
   34028:	sub	x0, x29, #0x40
   3402c:	bl	bde0 <mpfr_get_d@plt>
   34030:	bl	579a0 <mpfr_free_pool@@Base+0x221c>
   34034:	mov	v1.16b, v0.16b
   34038:	ldur	q0, [x29, #-96]
   3403c:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   34040:	b	34070 <mpfr_set_ld@@Base+0x6bc>
   34044:	ldur	q0, [x29, #-96]
   34048:	ldr	q1, [sp, #48]
   3404c:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   34050:	sub	x0, x29, #0x20
   34054:	sub	x1, x29, #0x20
   34058:	mov	w2, #0x200                 	// #512
   3405c:	mov	w3, #0x1                   	// #1
   34060:	stur	q0, [x29, #-96]
   34064:	add	w21, w21, #0x200
   34068:	bl	c470 <mpfr_div_2si@plt>
   3406c:	ldur	q0, [x29, #-96]
   34070:	ldur	q1, [x29, #-112]
   34074:	stur	q0, [x29, #-96]
   34078:	ldur	q0, [x29, #-96]
   3407c:	bl	56348 <mpfr_free_pool@@Base+0xbc4>
   34080:	ldur	q0, [x29, #-96]
   34084:	cbnz	w0, 33bf8 <mpfr_set_ld@@Base+0x244>
   34088:	b	340f4 <mpfr_set_ld@@Base+0x740>
   3408c:	sub	x0, x29, #0x20
   34090:	bl	cbe0 <mpfr_number_p@plt>
   34094:	cbz	w0, 340f4 <mpfr_set_ld@@Base+0x740>
   34098:	ldr	x9, [x19]
   3409c:	ldur	x8, [x29, #-32]
   340a0:	add	x1, x9, #0x1
   340a4:	cmp	x8, x1
   340a8:	b.eq	340bc <mpfr_set_ld@@Base+0x708>  // b.none
   340ac:	sub	x0, x29, #0x20
   340b0:	bl	bf80 <mpfr_set_prec@plt>
   340b4:	mov	w21, wzr
   340b8:	b	33bf0 <mpfr_set_ld@@Base+0x23c>
   340bc:	ldur	x8, [x29, #-8]
   340c0:	mvn	w10, w9
   340c4:	mov	x11, #0x100000000           	// #4294967296
   340c8:	lsl	x10, x11, x10
   340cc:	ldr	x9, [x8]
   340d0:	asr	x10, x10, #32
   340d4:	cbnz	w20, 340ec <mpfr_set_ld@@Base+0x738>
   340d8:	ldur	w11, [x29, #-24]
   340dc:	and	x12, x9, x10
   340e0:	cmp	x12, x11, lsr #31
   340e4:	mov	w11, #0x2                   	// #2
   340e8:	cinc	w20, w11, eq  // eq = none
   340ec:	orr	x9, x9, x10
   340f0:	str	x9, [x8]
   340f4:	sxtw	x2, w21
   340f8:	sub	x1, x29, #0x20
   340fc:	mov	x0, x19
   34100:	mov	w3, w20
   34104:	bl	bc40 <mpfr_mul_2si@plt>
   34108:	mov	w21, w0
   3410c:	sub	x0, x29, #0x20
   34110:	bl	c110 <mpfr_clear@plt>
   34114:	sub	x0, x29, #0x40
   34118:	bl	c110 <mpfr_clear@plt>
   3411c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34120:	ldr	x1, [x0, #2656]
   34124:	add	x0, x0, #0xa60
   34128:	blr	x1
   3412c:	str	w23, [x22, x0]
   34130:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34134:	ldr	x1, [x0, #2592]
   34138:	add	x0, x0, #0xa20
   3413c:	blr	x1
   34140:	str	x24, [x22, x0]
   34144:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34148:	ldr	x1, [x0, #2624]
   3414c:	add	x0, x0, #0xa40
   34150:	blr	x1
   34154:	str	x25, [x22, x0]
   34158:	ldr	x8, [x19, #16]
   3415c:	cmp	x8, x25
   34160:	b.gt	3418c <mpfr_set_ld@@Base+0x7d8>
   34164:	cmp	x8, x24
   34168:	b.lt	3418c <mpfr_set_ld@@Base+0x7d8>  // b.tstop
   3416c:	cbz	w21, 33a88 <mpfr_set_ld@@Base+0xd4>
   34170:	orr	w8, w23, #0x8
   34174:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34178:	ldr	x1, [x0, #2656]
   3417c:	add	x0, x0, #0xa60
   34180:	blr	x1
   34184:	str	w8, [x22, x0]
   34188:	b	33a88 <mpfr_set_ld@@Base+0xd4>
   3418c:	mov	x0, x19
   34190:	mov	w1, w21
   34194:	mov	w2, w20
   34198:	bl	cb80 <mpfr_check_range@plt>
   3419c:	b	33ad8 <mpfr_set_ld@@Base+0x124>

00000000000341a0 <mpfr_get_ld@@Base>:
   341a0:	sub	sp, sp, #0xb0
   341a4:	stp	x29, x30, [sp, #104]
   341a8:	stp	x24, x23, [sp, #128]
   341ac:	stp	x22, x21, [sp, #144]
   341b0:	stp	x20, x19, [sp, #160]
   341b4:	ldr	x8, [x0, #16]
   341b8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   341bc:	mov	x19, x0
   341c0:	mov	w20, w1
   341c4:	cmp	x8, x9
   341c8:	str	d8, [sp, #96]
   341cc:	str	x25, [sp, #120]
   341d0:	add	x29, sp, #0x60
   341d4:	b.le	34430 <mpfr_get_ld@@Base+0x290>
   341d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   341dc:	ldr	x1, [x0, #2656]
   341e0:	add	x0, x0, #0xa60
   341e4:	blr	x1
   341e8:	mrs	x21, tpidr_el0
   341ec:	ldr	w22, [x21, x0]
   341f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   341f4:	ldr	x1, [x0, #2592]
   341f8:	add	x0, x0, #0xa20
   341fc:	blr	x1
   34200:	ldr	x23, [x21, x0]
   34204:	mov	x8, x0
   34208:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3420c:	ldr	x1, [x0, #2624]
   34210:	add	x0, x0, #0xa40
   34214:	blr	x1
   34218:	ldr	x24, [x21, x0]
   3421c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   34220:	str	x9, [x21, x8]
   34224:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   34228:	str	x8, [x21, x0]
   3422c:	sub	x0, x29, #0x20
   34230:	mov	w1, #0x71                  	// #113
   34234:	bl	cad0 <mpfr_init2@plt>
   34238:	add	x0, sp, #0x20
   3423c:	mov	w1, #0x71                  	// #113
   34240:	bl	cad0 <mpfr_init2@plt>
   34244:	ldr	w3, [x19, #8]
   34248:	sub	x0, x29, #0x20
   3424c:	mov	x1, x19
   34250:	mov	w2, w20
   34254:	bl	c6f0 <mpfr_set4@plt>
   34258:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3425c:	ldur	x20, [x29, #-16]
   34260:	ldur	w19, [x29, #-24]
   34264:	ldr	q0, [x8, #2112]
   34268:	mov	w8, #0x1                   	// #1
   3426c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   34270:	stur	xzr, [x29, #-16]
   34274:	str	q0, [sp, #16]
   34278:	stur	w8, [x29, #-24]
   3427c:	sub	x0, x29, #0x20
   34280:	mov	w1, wzr
   34284:	bl	bde0 <mpfr_get_d@plt>
   34288:	mov	v8.16b, v0.16b
   3428c:	bl	579a0 <mpfr_free_pool@@Base+0x221c>
   34290:	mov	v1.16b, v0.16b
   34294:	ldr	q0, [sp, #16]
   34298:	bl	55820 <mpfr_free_pool@@Base+0x9c>
   3429c:	str	q0, [sp, #16]
   342a0:	add	x0, sp, #0x20
   342a4:	mov	v0.16b, v8.16b
   342a8:	mov	w1, wzr
   342ac:	bl	bef0 <mpfr_set_d@plt>
   342b0:	sub	x0, x29, #0x20
   342b4:	sub	x1, x29, #0x20
   342b8:	add	x2, sp, #0x20
   342bc:	mov	w3, wzr
   342c0:	bl	bc20 <mpfr_sub@plt>
   342c4:	ldur	x8, [x29, #-16]
   342c8:	cmp	x8, x25
   342cc:	b.ne	3427c <mpfr_get_ld@@Base+0xdc>  // b.any
   342d0:	add	x0, sp, #0x20
   342d4:	bl	c110 <mpfr_clear@plt>
   342d8:	sub	x0, x29, #0x20
   342dc:	bl	c110 <mpfr_clear@plt>
   342e0:	cbz	x20, 34328 <mpfr_get_ld@@Base+0x188>
   342e4:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   342e8:	ldr	q1, [x8, #2336]
   342ec:	ldr	q0, [sp, #16]
   342f0:	str	q1, [sp]
   342f4:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   342f8:	cmp	w0, #0x0
   342fc:	b.ge	34330 <mpfr_get_ld@@Base+0x190>  // b.tcont
   34300:	ldr	q0, [sp, #16]
   34304:	mov	v1.16b, v0.16b
   34308:	bl	55820 <mpfr_free_pool@@Base+0x9c>
   3430c:	ldr	q1, [sp]
   34310:	str	q0, [sp, #16]
   34314:	sub	x20, x20, #0x1
   34318:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   3431c:	ldr	q0, [sp, #16]
   34320:	tbnz	w0, #31, 34304 <mpfr_get_ld@@Base+0x164>
   34324:	b	34334 <mpfr_get_ld@@Base+0x194>
   34328:	ldr	q0, [sp, #16]
   3432c:	b	343ac <mpfr_get_ld@@Base+0x20c>
   34330:	ldr	q0, [sp, #16]
   34334:	cmp	x20, #0x0
   34338:	adrp	x9, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3433c:	cset	w8, gt
   34340:	add	x9, x9, #0x960
   34344:	ldr	q1, [x9, w8, uxtw #4]
   34348:	cneg	x20, x20, mi  // mi = first
   3434c:	stp	q1, q0, [sp]
   34350:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   34354:	tst	x20, #0x1
   34358:	mov	v1.16b, v0.16b
   3435c:	b.ne	34364 <mpfr_get_ld@@Base+0x1c4>  // b.any
   34360:	ldr	q1, [sp, #16]
   34364:	lsr	x20, x20, #1
   34368:	cbz	x20, 343a8 <mpfr_get_ld@@Base+0x208>
   3436c:	ldr	q0, [sp]
   34370:	str	q1, [sp, #16]
   34374:	mov	v1.16b, v0.16b
   34378:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   3437c:	mov	v1.16b, v0.16b
   34380:	ldr	q0, [sp, #16]
   34384:	str	q1, [sp]
   34388:	bl	566d8 <mpfr_free_pool@@Base+0xf54>
   3438c:	tst	x20, #0x1
   34390:	b.ne	34398 <mpfr_get_ld@@Base+0x1f8>  // b.any
   34394:	ldr	q0, [sp, #16]
   34398:	asr	x20, x20, #1
   3439c:	mov	v1.16b, v0.16b
   343a0:	cbnz	x20, 3436c <mpfr_get_ld@@Base+0x1cc>
   343a4:	b	343ac <mpfr_get_ld@@Base+0x20c>
   343a8:	mov	v0.16b, v1.16b
   343ac:	str	q0, [sp, #16]
   343b0:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   343b4:	ldr	q0, [x8, #2160]
   343b8:	ldr	q1, [sp, #16]
   343bc:	bl	56ec0 <mpfr_free_pool@@Base+0x173c>
   343c0:	ldr	q1, [sp, #16]
   343c4:	cmp	w19, #0x0
   343c8:	b.ge	343d0 <mpfr_get_ld@@Base+0x230>  // b.tcont
   343cc:	mov	v1.16b, v0.16b
   343d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   343d4:	ldr	x1, [x0, #2656]
   343d8:	add	x0, x0, #0xa60
   343dc:	blr	x1
   343e0:	str	w22, [x21, x0]
   343e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   343e8:	ldr	x1, [x0, #2592]
   343ec:	add	x0, x0, #0xa20
   343f0:	blr	x1
   343f4:	str	x23, [x21, x0]
   343f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   343fc:	ldr	x1, [x0, #2624]
   34400:	add	x0, x0, #0xa40
   34404:	blr	x1
   34408:	str	x24, [x21, x0]
   3440c:	ldp	x20, x19, [sp, #160]
   34410:	ldp	x22, x21, [sp, #144]
   34414:	ldp	x24, x23, [sp, #128]
   34418:	ldr	x25, [sp, #120]
   3441c:	ldp	x29, x30, [sp, #104]
   34420:	ldr	d8, [sp, #96]
   34424:	mov	v0.16b, v1.16b
   34428:	add	sp, sp, #0xb0
   3442c:	ret
   34430:	mov	x0, x19
   34434:	mov	w1, w20
   34438:	bl	bde0 <mpfr_get_d@plt>
   3443c:	bl	579a0 <mpfr_free_pool@@Base+0x221c>
   34440:	mov	v1.16b, v0.16b
   34444:	b	3440c <mpfr_get_ld@@Base+0x26c>

0000000000034448 <mpfr_get_ld_2exp@@Base>:
   34448:	sub	sp, sp, #0x70
   3444c:	stp	x29, x30, [sp, #64]
   34450:	stp	x22, x21, [sp, #80]
   34454:	stp	x20, x19, [sp, #96]
   34458:	ldr	x8, [x1, #16]
   3445c:	mov	x22, #0x4                   	// #4
   34460:	movk	x22, #0x8000, lsl #48
   34464:	mov	x20, x1
   34468:	cmp	x8, x22
   3446c:	mov	x19, x0
   34470:	add	x29, sp, #0x40
   34474:	b.lt	34574 <mpfr_get_ld_2exp@@Base+0x12c>  // b.tstop
   34478:	ldr	x8, [x20]
   3447c:	add	x0, sp, #0x20
   34480:	mov	w1, w2
   34484:	str	x8, [sp, #32]
   34488:	ldr	w8, [x20, #8]
   3448c:	str	w8, [sp, #40]
   34490:	ldr	x8, [x20, #24]
   34494:	stp	xzr, x8, [sp, #48]
   34498:	bl	c5d0 <mpfr_get_ld@plt>
   3449c:	ldr	x21, [x20, #16]
   344a0:	cmp	x21, x22
   344a4:	b.ge	344b0 <mpfr_get_ld_2exp@@Base+0x68>  // b.tcont
   344a8:	mov	x20, xzr
   344ac:	b	34550 <mpfr_get_ld_2exp@@Base+0x108>
   344b0:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   344b4:	ldr	q1, [x8, #2336]
   344b8:	stp	q1, q0, [sp]
   344bc:	bl	56348 <mpfr_free_pool@@Base+0xbc4>
   344c0:	adrp	x22, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   344c4:	cbnz	w0, 344f4 <mpfr_get_ld_2exp@@Base+0xac>
   344c8:	ldr	q0, [x22, #2384]
   344cc:	add	x20, x21, #0x1
   344d0:	ldr	q1, [x22, #2384]
   344d4:	str	q0, [sp, #16]
   344d8:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   344dc:	tbnz	w0, #31, 34518 <mpfr_get_ld_2exp@@Base+0xd0>
   344e0:	ldp	q1, q0, [sp]
   344e4:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   344e8:	ldr	q0, [sp, #16]
   344ec:	tbnz	w0, #31, 34550 <mpfr_get_ld_2exp@@Base+0x108>
   344f0:	b	3451c <mpfr_get_ld_2exp@@Base+0xd4>
   344f4:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   344f8:	ldr	q1, [x8, #2352]
   344fc:	ldr	q0, [sp, #16]
   34500:	bl	56348 <mpfr_free_pool@@Base+0xbc4>
   34504:	cbnz	w0, 34568 <mpfr_get_ld_2exp@@Base+0x120>
   34508:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3450c:	ldr	q0, [x8, #2368]
   34510:	add	x20, x21, #0x1
   34514:	b	3451c <mpfr_get_ld_2exp@@Base+0xd4>
   34518:	ldr	q0, [sp, #16]
   3451c:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   34520:	ldr	q1, [x8, #2368]
   34524:	str	q0, [sp, #16]
   34528:	bl	56598 <mpfr_free_pool@@Base+0xe14>
   3452c:	cmp	w0, #0x0
   34530:	b.gt	34588 <mpfr_get_ld_2exp@@Base+0x140>
   34534:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   34538:	ldr	q1, [x8, #2352]
   3453c:	ldr	q0, [sp, #16]
   34540:	bl	56450 <mpfr_free_pool@@Base+0xccc>
   34544:	cmp	w0, #0x0
   34548:	b.le	34588 <mpfr_get_ld_2exp@@Base+0x140>
   3454c:	ldr	q0, [sp, #16]
   34550:	str	x20, [x19]
   34554:	ldp	x20, x19, [sp, #96]
   34558:	ldp	x22, x21, [sp, #80]
   3455c:	ldp	x29, x30, [sp, #64]
   34560:	add	sp, sp, #0x70
   34564:	ret
   34568:	ldr	q0, [sp, #16]
   3456c:	mov	x20, x21
   34570:	b	344d0 <mpfr_get_ld_2exp@@Base+0x88>
   34574:	mov	x0, x19
   34578:	mov	x1, x20
   3457c:	bl	cc20 <mpfr_get_d_2exp@plt>
   34580:	bl	579a0 <mpfr_free_pool@@Base+0x221c>
   34584:	b	34554 <mpfr_get_ld_2exp@@Base+0x10c>
   34588:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3458c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   34590:	add	x0, x0, #0x980
   34594:	add	x2, x2, #0x24e
   34598:	mov	w1, #0x10f                 	// #271
   3459c:	bl	cb90 <mpfr_assert_fail@plt>
   345a0:	b	3454c <mpfr_get_ld_2exp@@Base+0x104>

00000000000345a4 <mpfr_cbrt@@Base>:
   345a4:	sub	sp, sp, #0x70
   345a8:	stp	x29, x30, [sp, #16]
   345ac:	stp	x28, x27, [sp, #32]
   345b0:	stp	x26, x25, [sp, #48]
   345b4:	stp	x24, x23, [sp, #64]
   345b8:	stp	x22, x21, [sp, #80]
   345bc:	stp	x20, x19, [sp, #96]
   345c0:	ldr	x8, [x1, #16]
   345c4:	mov	x9, #0x2                   	// #2
   345c8:	movk	x9, #0x8000, lsl #48
   345cc:	add	x10, x9, #0x2
   345d0:	mov	x21, x1
   345d4:	cmp	x8, x10
   345d8:	mov	x19, x0
   345dc:	add	x29, sp, #0x10
   345e0:	b.lt	348d4 <mpfr_cbrt@@Base+0x330>  // b.tstop
   345e4:	mov	w20, w2
   345e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   345ec:	ldr	x1, [x0, #2656]
   345f0:	add	x0, x0, #0xa60
   345f4:	blr	x1
   345f8:	mrs	x24, tpidr_el0
   345fc:	ldr	w25, [x24, x0]
   34600:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34604:	ldr	x1, [x0, #2592]
   34608:	add	x0, x0, #0xa20
   3460c:	blr	x1
   34610:	ldr	x26, [x24, x0]
   34614:	mov	x8, x0
   34618:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3461c:	ldr	x1, [x0, #2624]
   34620:	add	x0, x0, #0xa40
   34624:	blr	x1
   34628:	ldr	x27, [x24, x0]
   3462c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   34630:	str	x9, [x24, x8]
   34634:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   34638:	str	x8, [x24, x0]
   3463c:	mov	x0, sp
   34640:	bl	c040 <mpfr_mpz_init@plt>
   34644:	mov	x0, sp
   34648:	mov	x1, x21
   3464c:	bl	cb10 <mpfr_get_z_2exp@plt>
   34650:	ldr	w28, [x21, #8]
   34654:	ldr	w8, [sp, #4]
   34658:	mov	x21, x0
   3465c:	tbz	w28, #31, 34668 <mpfr_cbrt@@Base+0xc4>
   34660:	neg	w8, w8
   34664:	str	w8, [sp, #4]
   34668:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   3466c:	movk	x9, #0x5556
   34670:	smulh	x12, x21, x9
   34674:	add	x12, x12, x12, lsr #63
   34678:	add	x12, x12, x12, lsl #1
   3467c:	ldr	x10, [sp, #8]
   34680:	sub	x12, x21, x12
   34684:	add	x13, x12, #0x3
   34688:	cmp	x12, #0x0
   3468c:	csel	x22, x13, x12, lt  // lt = tstop
   34690:	cmp	w8, #0x0
   34694:	cneg	w8, w8, mi  // mi = first
   34698:	add	x10, x10, w8, uxtw #3
   3469c:	ldur	x10, [x10, #-8]
   346a0:	ldr	x11, [x19]
   346a4:	cmp	w20, #0x0
   346a8:	clz	x10, x10
   346ac:	cinc	x23, x11, eq  // eq = none
   346b0:	sub	x10, x10, x22
   346b4:	add	x11, x23, x23, lsl #1
   346b8:	sub	x8, x10, x8, lsl #6
   346bc:	add	x8, x8, x11
   346c0:	smulh	x8, x8, x9
   346c4:	add	x8, x8, x8, lsr #63
   346c8:	add	x8, x8, x8, lsl #1
   346cc:	adds	x8, x8, x22
   346d0:	b.mi	346dc <mpfr_cbrt@@Base+0x138>  // b.first
   346d4:	mov	x22, x8
   346d8:	b	346e4 <mpfr_cbrt@@Base+0x140>
   346dc:	cmp	x22, #0x1
   346e0:	b.lt	346f8 <mpfr_cbrt@@Base+0x154>  // b.tstop
   346e4:	mov	x0, sp
   346e8:	mov	x1, sp
   346ec:	mov	x2, x22
   346f0:	bl	c290 <__gmpz_mul_2exp@plt>
   346f4:	sub	x21, x21, x22
   346f8:	mov	x0, sp
   346fc:	mov	x1, sp
   34700:	mov	w2, #0x3                   	// #3
   34704:	bl	c340 <__gmpz_root@plt>
   34708:	ldr	w8, [sp, #4]
   3470c:	ldr	x9, [sp, #8]
   34710:	cmp	w8, #0x0
   34714:	cneg	w8, w8, mi  // mi = first
   34718:	add	x9, x9, w8, uxtw #3
   3471c:	ldur	x9, [x9, #-8]
   34720:	lsl	x8, x8, #6
   34724:	clz	x9, x9
   34728:	sub	x8, x8, x9
   3472c:	sub	x22, x8, x23
   34730:	cmp	x22, #0x1
   34734:	b.lt	34770 <mpfr_cbrt@@Base+0x1cc>  // b.tstop
   34738:	cbz	w0, 3477c <mpfr_cbrt@@Base+0x1d8>
   3473c:	mov	x0, sp
   34740:	mov	x1, xzr
   34744:	bl	bb50 <__gmpz_scan1@plt>
   34748:	mov	x23, x0
   3474c:	mov	x0, sp
   34750:	mov	x1, sp
   34754:	mov	x2, x22
   34758:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   3475c:	add	x8, x22, x22, lsl #1
   34760:	cmp	x23, x22
   34764:	add	x21, x8, x21
   34768:	b.ge	34774 <mpfr_cbrt@@Base+0x1d0>  // b.tcont
   3476c:	b	34794 <mpfr_cbrt@@Base+0x1f0>
   34770:	cbz	w0, 34794 <mpfr_cbrt@@Base+0x1f0>
   34774:	mov	w22, wzr
   34778:	b	347f8 <mpfr_cbrt@@Base+0x254>
   3477c:	mov	x0, sp
   34780:	mov	x1, sp
   34784:	mov	x2, x22
   34788:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   3478c:	add	x8, x22, x22, lsl #1
   34790:	add	x21, x8, x21
   34794:	cmp	w20, #0x3
   34798:	mov	w8, #0x2                   	// #2
   3479c:	mov	w9, #0x3                   	// #3
   347a0:	csel	w8, w8, w20, eq  // eq = none
   347a4:	cmp	w20, #0x2
   347a8:	csel	w8, w9, w8, eq  // eq = none
   347ac:	cmp	w28, #0x0
   347b0:	csel	w20, w8, w20, lt  // lt = tstop
   347b4:	cmp	w20, #0x4
   347b8:	b.eq	347d8 <mpfr_cbrt@@Base+0x234>  // b.none
   347bc:	cmp	w20, #0x2
   347c0:	b.eq	347d8 <mpfr_cbrt@@Base+0x234>  // b.none
   347c4:	cbnz	w20, 347f4 <mpfr_cbrt@@Base+0x250>
   347c8:	mov	x0, sp
   347cc:	mov	x1, xzr
   347d0:	bl	c080 <__gmpz_tstbit@plt>
   347d4:	cbz	w0, 347f0 <mpfr_cbrt@@Base+0x24c>
   347d8:	mov	x0, sp
   347dc:	mov	x1, sp
   347e0:	mov	w2, #0x1                   	// #1
   347e4:	mov	w22, #0x1                   	// #1
   347e8:	bl	c3c0 <__gmpz_add_ui@plt>
   347ec:	b	347f8 <mpfr_cbrt@@Base+0x254>
   347f0:	mov	w20, wzr
   347f4:	mov	w22, #0xffffffff            	// #-1
   347f8:	mov	x1, sp
   347fc:	mov	x0, x19
   34800:	mov	w2, wzr
   34804:	bl	c2b0 <mpfr_set_z@plt>
   34808:	ldr	x8, [x19, #16]
   3480c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   34810:	movk	x9, #0x5556
   34814:	smulh	x9, x21, x9
   34818:	add	x9, x9, x9, lsr #63
   3481c:	add	w22, w0, w22
   34820:	add	x8, x8, x9
   34824:	str	x8, [x19, #16]
   34828:	tbz	w28, #31, 3483c <mpfr_cbrt@@Base+0x298>
   3482c:	ldr	w8, [x19, #8]
   34830:	neg	w22, w22
   34834:	neg	w8, w8
   34838:	str	w8, [x19, #8]
   3483c:	mov	x0, sp
   34840:	bl	c210 <mpfr_mpz_clear@plt>
   34844:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34848:	ldr	x1, [x0, #2656]
   3484c:	add	x0, x0, #0xa60
   34850:	blr	x1
   34854:	str	w25, [x24, x0]
   34858:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3485c:	ldr	x1, [x0, #2592]
   34860:	add	x0, x0, #0xa20
   34864:	blr	x1
   34868:	str	x26, [x24, x0]
   3486c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34870:	ldr	x1, [x0, #2624]
   34874:	add	x0, x0, #0xa40
   34878:	blr	x1
   3487c:	str	x27, [x24, x0]
   34880:	ldr	x8, [x19, #16]
   34884:	cmp	x8, x27
   34888:	b.gt	34908 <mpfr_cbrt@@Base+0x364>
   3488c:	cmp	x8, x26
   34890:	b.lt	34908 <mpfr_cbrt@@Base+0x364>  // b.tstop
   34894:	cbz	w22, 348b0 <mpfr_cbrt@@Base+0x30c>
   34898:	orr	w8, w25, #0x8
   3489c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   348a0:	ldr	x1, [x0, #2656]
   348a4:	add	x0, x0, #0xa60
   348a8:	blr	x1
   348ac:	str	w8, [x24, x0]
   348b0:	mov	w0, w22
   348b4:	ldp	x20, x19, [sp, #96]
   348b8:	ldp	x22, x21, [sp, #80]
   348bc:	ldp	x24, x23, [sp, #64]
   348c0:	ldp	x26, x25, [sp, #48]
   348c4:	ldp	x28, x27, [sp, #32]
   348c8:	ldp	x29, x30, [sp, #16]
   348cc:	add	sp, sp, #0x70
   348d0:	ret
   348d4:	cmp	x8, x9
   348d8:	b.ne	34920 <mpfr_cbrt@@Base+0x37c>  // b.any
   348dc:	str	x9, [x19, #16]
   348e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   348e4:	ldr	x1, [x0, #2656]
   348e8:	add	x0, x0, #0xa60
   348ec:	blr	x1
   348f0:	mrs	x8, tpidr_el0
   348f4:	ldr	w9, [x8, x0]
   348f8:	mov	w22, wzr
   348fc:	orr	w9, w9, #0x4
   34900:	str	w9, [x8, x0]
   34904:	b	348b0 <mpfr_cbrt@@Base+0x30c>
   34908:	mov	x0, x19
   3490c:	mov	w1, w22
   34910:	mov	w2, w20
   34914:	bl	cb80 <mpfr_check_range@plt>
   34918:	mov	w22, w0
   3491c:	b	348b0 <mpfr_cbrt@@Base+0x30c>
   34920:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   34924:	cmp	x8, x9
   34928:	b.ne	34938 <mpfr_cbrt@@Base+0x394>  // b.any
   3492c:	mov	w22, wzr
   34930:	str	x9, [x19, #16]
   34934:	b	34944 <mpfr_cbrt@@Base+0x3a0>
   34938:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3493c:	mov	w22, wzr
   34940:	str	x8, [x19, #16]
   34944:	ldr	w8, [x21, #8]
   34948:	str	w8, [x19, #8]
   3494c:	b	348b0 <mpfr_cbrt@@Base+0x30c>

0000000000034950 <mpfr_fits_sshort_p@@Base>:
   34950:	sub	sp, sp, #0x60
   34954:	stp	x29, x30, [sp, #32]
   34958:	stp	x24, x23, [sp, #48]
   3495c:	stp	x22, x21, [sp, #64]
   34960:	stp	x20, x19, [sp, #80]
   34964:	ldr	x23, [x0, #16]
   34968:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3496c:	add	x29, sp, #0x20
   34970:	cmp	x23, x8
   34974:	b.le	34a64 <mpfr_fits_sshort_p@@Base+0x114>
   34978:	cmp	x23, #0x1
   3497c:	b.lt	34a04 <mpfr_fits_sshort_p@@Base+0xb4>  // b.tstop
   34980:	ldr	w24, [x0, #8]
   34984:	mov	w8, #0xf                   	// #15
   34988:	mov	x19, x0
   3498c:	cmp	w24, #0x0
   34990:	cinc	w8, w8, lt  // lt = tstop
   34994:	sub	w9, w8, #0x1
   34998:	cmp	x23, w9, sxtw
   3499c:	b.le	34a04 <mpfr_fits_sshort_p@@Base+0xb4>
   349a0:	add	w9, w8, #0x1
   349a4:	cmp	x23, x9
   349a8:	b.ge	34a24 <mpfr_fits_sshort_p@@Base+0xd4>  // b.tcont
   349ac:	mov	w20, w1
   349b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   349b4:	ldr	x1, [x0, #2656]
   349b8:	add	x0, x0, #0xa60
   349bc:	blr	x1
   349c0:	mrs	x21, tpidr_el0
   349c4:	ldr	w22, [x21, x0]
   349c8:	mov	w1, w8
   349cc:	mov	x0, sp
   349d0:	bl	cad0 <mpfr_init2@plt>
   349d4:	ldr	w3, [x19, #8]
   349d8:	cmp	w20, #0x5
   349dc:	mov	w8, #0x4                   	// #4
   349e0:	csel	w2, w8, w20, eq  // eq = none
   349e4:	mov	x0, sp
   349e8:	mov	x1, x19
   349ec:	bl	c6f0 <mpfr_set4@plt>
   349f0:	tbnz	w24, #31, 34a2c <mpfr_fits_sshort_p@@Base+0xdc>
   349f4:	ldr	x8, [sp, #16]
   349f8:	cmp	x8, x23
   349fc:	cset	w19, eq  // eq = none
   34a00:	b	34a44 <mpfr_fits_sshort_p@@Base+0xf4>
   34a04:	mov	w19, #0x1                   	// #1
   34a08:	mov	w0, w19
   34a0c:	ldp	x20, x19, [sp, #80]
   34a10:	ldp	x22, x21, [sp, #64]
   34a14:	ldp	x24, x23, [sp, #48]
   34a18:	ldp	x29, x30, [sp, #32]
   34a1c:	add	sp, sp, #0x60
   34a20:	ret
   34a24:	mov	w19, wzr
   34a28:	b	34a08 <mpfr_fits_sshort_p@@Base+0xb8>
   34a2c:	mov	x0, sp
   34a30:	mov	x1, #0xffffffffffff8000    	// #-32768
   34a34:	mov	x2, xzr
   34a38:	bl	c430 <mpfr_cmp_si_2exp@plt>
   34a3c:	mvn	w8, w0
   34a40:	lsr	w19, w8, #31
   34a44:	mov	x0, sp
   34a48:	bl	c110 <mpfr_clear@plt>
   34a4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34a50:	ldr	x1, [x0, #2656]
   34a54:	add	x0, x0, #0xa60
   34a58:	blr	x1
   34a5c:	str	w22, [x21, x0]
   34a60:	b	34a08 <mpfr_fits_sshort_p@@Base+0xb8>
   34a64:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34a68:	cmp	x23, x8
   34a6c:	cset	w19, eq  // eq = none
   34a70:	b	34a08 <mpfr_fits_sshort_p@@Base+0xb8>

0000000000034a74 <mpfr_fits_sint_p@@Base>:
   34a74:	sub	sp, sp, #0x60
   34a78:	stp	x29, x30, [sp, #32]
   34a7c:	stp	x24, x23, [sp, #48]
   34a80:	stp	x22, x21, [sp, #64]
   34a84:	stp	x20, x19, [sp, #80]
   34a88:	ldr	x23, [x0, #16]
   34a8c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   34a90:	add	x29, sp, #0x20
   34a94:	cmp	x23, x8
   34a98:	b.le	34b88 <mpfr_fits_sint_p@@Base+0x114>
   34a9c:	cmp	x23, #0x1
   34aa0:	b.lt	34b28 <mpfr_fits_sint_p@@Base+0xb4>  // b.tstop
   34aa4:	ldr	w24, [x0, #8]
   34aa8:	mov	w8, #0x1f                  	// #31
   34aac:	mov	x19, x0
   34ab0:	cmp	w24, #0x0
   34ab4:	cinc	w8, w8, lt  // lt = tstop
   34ab8:	sub	w9, w8, #0x1
   34abc:	cmp	x23, w9, sxtw
   34ac0:	b.le	34b28 <mpfr_fits_sint_p@@Base+0xb4>
   34ac4:	add	w9, w8, #0x1
   34ac8:	cmp	x23, x9
   34acc:	b.ge	34b48 <mpfr_fits_sint_p@@Base+0xd4>  // b.tcont
   34ad0:	mov	w20, w1
   34ad4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34ad8:	ldr	x1, [x0, #2656]
   34adc:	add	x0, x0, #0xa60
   34ae0:	blr	x1
   34ae4:	mrs	x21, tpidr_el0
   34ae8:	ldr	w22, [x21, x0]
   34aec:	mov	w1, w8
   34af0:	mov	x0, sp
   34af4:	bl	cad0 <mpfr_init2@plt>
   34af8:	ldr	w3, [x19, #8]
   34afc:	cmp	w20, #0x5
   34b00:	mov	w8, #0x4                   	// #4
   34b04:	csel	w2, w8, w20, eq  // eq = none
   34b08:	mov	x0, sp
   34b0c:	mov	x1, x19
   34b10:	bl	c6f0 <mpfr_set4@plt>
   34b14:	tbnz	w24, #31, 34b50 <mpfr_fits_sint_p@@Base+0xdc>
   34b18:	ldr	x8, [sp, #16]
   34b1c:	cmp	x8, x23
   34b20:	cset	w19, eq  // eq = none
   34b24:	b	34b68 <mpfr_fits_sint_p@@Base+0xf4>
   34b28:	mov	w19, #0x1                   	// #1
   34b2c:	mov	w0, w19
   34b30:	ldp	x20, x19, [sp, #80]
   34b34:	ldp	x22, x21, [sp, #64]
   34b38:	ldp	x24, x23, [sp, #48]
   34b3c:	ldp	x29, x30, [sp, #32]
   34b40:	add	sp, sp, #0x60
   34b44:	ret
   34b48:	mov	w19, wzr
   34b4c:	b	34b2c <mpfr_fits_sint_p@@Base+0xb8>
   34b50:	mov	x0, sp
   34b54:	mov	x1, #0xffffffff80000000    	// #-2147483648
   34b58:	mov	x2, xzr
   34b5c:	bl	c430 <mpfr_cmp_si_2exp@plt>
   34b60:	mvn	w8, w0
   34b64:	lsr	w19, w8, #31
   34b68:	mov	x0, sp
   34b6c:	bl	c110 <mpfr_clear@plt>
   34b70:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34b74:	ldr	x1, [x0, #2656]
   34b78:	add	x0, x0, #0xa60
   34b7c:	blr	x1
   34b80:	str	w22, [x21, x0]
   34b84:	b	34b2c <mpfr_fits_sint_p@@Base+0xb8>
   34b88:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34b8c:	cmp	x23, x8
   34b90:	cset	w19, eq  // eq = none
   34b94:	b	34b2c <mpfr_fits_sint_p@@Base+0xb8>

0000000000034b98 <mpfr_fits_slong_p@@Base>:
   34b98:	sub	sp, sp, #0x60
   34b9c:	stp	x29, x30, [sp, #32]
   34ba0:	stp	x24, x23, [sp, #48]
   34ba4:	stp	x22, x21, [sp, #64]
   34ba8:	stp	x20, x19, [sp, #80]
   34bac:	ldr	x23, [x0, #16]
   34bb0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   34bb4:	add	x29, sp, #0x20
   34bb8:	cmp	x23, x8
   34bbc:	b.le	34cac <mpfr_fits_slong_p@@Base+0x114>
   34bc0:	cmp	x23, #0x1
   34bc4:	b.lt	34c4c <mpfr_fits_slong_p@@Base+0xb4>  // b.tstop
   34bc8:	ldr	w24, [x0, #8]
   34bcc:	mov	w8, #0x3f                  	// #63
   34bd0:	mov	x19, x0
   34bd4:	cmp	w24, #0x0
   34bd8:	cinc	w8, w8, lt  // lt = tstop
   34bdc:	sub	w9, w8, #0x1
   34be0:	cmp	x23, w9, sxtw
   34be4:	b.le	34c4c <mpfr_fits_slong_p@@Base+0xb4>
   34be8:	add	w9, w8, #0x1
   34bec:	cmp	x23, x9
   34bf0:	b.ge	34c6c <mpfr_fits_slong_p@@Base+0xd4>  // b.tcont
   34bf4:	mov	w20, w1
   34bf8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34bfc:	ldr	x1, [x0, #2656]
   34c00:	add	x0, x0, #0xa60
   34c04:	blr	x1
   34c08:	mrs	x21, tpidr_el0
   34c0c:	ldr	w22, [x21, x0]
   34c10:	mov	w1, w8
   34c14:	mov	x0, sp
   34c18:	bl	cad0 <mpfr_init2@plt>
   34c1c:	ldr	w3, [x19, #8]
   34c20:	cmp	w20, #0x5
   34c24:	mov	w8, #0x4                   	// #4
   34c28:	csel	w2, w8, w20, eq  // eq = none
   34c2c:	mov	x0, sp
   34c30:	mov	x1, x19
   34c34:	bl	c6f0 <mpfr_set4@plt>
   34c38:	tbnz	w24, #31, 34c74 <mpfr_fits_slong_p@@Base+0xdc>
   34c3c:	ldr	x8, [sp, #16]
   34c40:	cmp	x8, x23
   34c44:	cset	w19, eq  // eq = none
   34c48:	b	34c8c <mpfr_fits_slong_p@@Base+0xf4>
   34c4c:	mov	w19, #0x1                   	// #1
   34c50:	mov	w0, w19
   34c54:	ldp	x20, x19, [sp, #80]
   34c58:	ldp	x22, x21, [sp, #64]
   34c5c:	ldp	x24, x23, [sp, #48]
   34c60:	ldp	x29, x30, [sp, #32]
   34c64:	add	sp, sp, #0x60
   34c68:	ret
   34c6c:	mov	w19, wzr
   34c70:	b	34c50 <mpfr_fits_slong_p@@Base+0xb8>
   34c74:	mov	x0, sp
   34c78:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   34c7c:	mov	x2, xzr
   34c80:	bl	c430 <mpfr_cmp_si_2exp@plt>
   34c84:	mvn	w8, w0
   34c88:	lsr	w19, w8, #31
   34c8c:	mov	x0, sp
   34c90:	bl	c110 <mpfr_clear@plt>
   34c94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34c98:	ldr	x1, [x0, #2656]
   34c9c:	add	x0, x0, #0xa60
   34ca0:	blr	x1
   34ca4:	str	w22, [x21, x0]
   34ca8:	b	34c50 <mpfr_fits_slong_p@@Base+0xb8>
   34cac:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34cb0:	cmp	x23, x8
   34cb4:	cset	w19, eq  // eq = none
   34cb8:	b	34c50 <mpfr_fits_slong_p@@Base+0xb8>

0000000000034cbc <mpfr_fits_ushort_p@@Base>:
   34cbc:	sub	sp, sp, #0x60
   34cc0:	stp	x29, x30, [sp, #32]
   34cc4:	stp	x24, x23, [sp, #48]
   34cc8:	stp	x22, x21, [sp, #64]
   34ccc:	stp	x20, x19, [sp, #80]
   34cd0:	ldr	x22, [x0, #16]
   34cd4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   34cd8:	add	x29, sp, #0x20
   34cdc:	cmp	x22, x8
   34ce0:	b.le	34dbc <mpfr_fits_ushort_p@@Base+0x100>
   34ce4:	ldr	w8, [x0, #8]
   34ce8:	mov	x19, x0
   34cec:	mov	w20, w1
   34cf0:	tbnz	w8, #31, 34d64 <mpfr_fits_ushort_p@@Base+0xa8>
   34cf4:	cmp	x22, #0xf
   34cf8:	b.le	34d9c <mpfr_fits_ushort_p@@Base+0xe0>
   34cfc:	cmp	x22, #0x10
   34d00:	b.ne	34d6c <mpfr_fits_ushort_p@@Base+0xb0>  // b.any
   34d04:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34d08:	ldr	x1, [x0, #2656]
   34d0c:	add	x0, x0, #0xa60
   34d10:	blr	x1
   34d14:	mrs	x23, tpidr_el0
   34d18:	ldr	w24, [x23, x0]
   34d1c:	mov	x21, x0
   34d20:	mov	x0, sp
   34d24:	mov	w1, #0x10                  	// #16
   34d28:	bl	cad0 <mpfr_init2@plt>
   34d2c:	ldr	w3, [x19, #8]
   34d30:	cmp	w20, #0x5
   34d34:	mov	w8, #0x2                   	// #2
   34d38:	csel	w2, w8, w20, eq  // eq = none
   34d3c:	mov	x0, sp
   34d40:	mov	x1, x19
   34d44:	bl	c6f0 <mpfr_set4@plt>
   34d48:	ldr	x8, [sp, #16]
   34d4c:	mov	x0, sp
   34d50:	cmp	x8, x22
   34d54:	cset	w19, eq  // eq = none
   34d58:	bl	c110 <mpfr_clear@plt>
   34d5c:	str	w24, [x23, x21]
   34d60:	b	34da0 <mpfr_fits_ushort_p@@Base+0xe4>
   34d64:	cmp	x22, #0x0
   34d68:	b.le	34d74 <mpfr_fits_ushort_p@@Base+0xb8>
   34d6c:	mov	w19, wzr
   34d70:	b	34da0 <mpfr_fits_ushort_p@@Base+0xe4>
   34d74:	cbz	w20, 34d88 <mpfr_fits_ushort_p@@Base+0xcc>
   34d78:	sub	w8, w20, #0x1
   34d7c:	cmp	w8, #0x2
   34d80:	cset	w19, cc  // cc = lo, ul, last
   34d84:	b	34da0 <mpfr_fits_ushort_p@@Base+0xe4>
   34d88:	tbnz	x22, #63, 34d9c <mpfr_fits_ushort_p@@Base+0xe0>
   34d8c:	mov	x0, x19
   34d90:	bl	bfb0 <mpfr_powerof2_raw@plt>
   34d94:	mov	w19, w0
   34d98:	b	34da0 <mpfr_fits_ushort_p@@Base+0xe4>
   34d9c:	mov	w19, #0x1                   	// #1
   34da0:	mov	w0, w19
   34da4:	ldp	x20, x19, [sp, #80]
   34da8:	ldp	x22, x21, [sp, #64]
   34dac:	ldp	x24, x23, [sp, #48]
   34db0:	ldp	x29, x30, [sp, #32]
   34db4:	add	sp, sp, #0x60
   34db8:	ret
   34dbc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34dc0:	cmp	x22, x8
   34dc4:	cset	w19, eq  // eq = none
   34dc8:	b	34da0 <mpfr_fits_ushort_p@@Base+0xe4>

0000000000034dcc <mpfr_fits_uint_p@@Base>:
   34dcc:	sub	sp, sp, #0x60
   34dd0:	stp	x29, x30, [sp, #32]
   34dd4:	stp	x24, x23, [sp, #48]
   34dd8:	stp	x22, x21, [sp, #64]
   34ddc:	stp	x20, x19, [sp, #80]
   34de0:	ldr	x22, [x0, #16]
   34de4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   34de8:	add	x29, sp, #0x20
   34dec:	cmp	x22, x8
   34df0:	b.le	34ecc <mpfr_fits_uint_p@@Base+0x100>
   34df4:	ldr	w8, [x0, #8]
   34df8:	mov	x19, x0
   34dfc:	mov	w20, w1
   34e00:	tbnz	w8, #31, 34e74 <mpfr_fits_uint_p@@Base+0xa8>
   34e04:	cmp	x22, #0x1f
   34e08:	b.le	34eac <mpfr_fits_uint_p@@Base+0xe0>
   34e0c:	cmp	x22, #0x20
   34e10:	b.ne	34e7c <mpfr_fits_uint_p@@Base+0xb0>  // b.any
   34e14:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34e18:	ldr	x1, [x0, #2656]
   34e1c:	add	x0, x0, #0xa60
   34e20:	blr	x1
   34e24:	mrs	x23, tpidr_el0
   34e28:	ldr	w24, [x23, x0]
   34e2c:	mov	x21, x0
   34e30:	mov	x0, sp
   34e34:	mov	w1, #0x20                  	// #32
   34e38:	bl	cad0 <mpfr_init2@plt>
   34e3c:	ldr	w3, [x19, #8]
   34e40:	cmp	w20, #0x5
   34e44:	mov	w8, #0x2                   	// #2
   34e48:	csel	w2, w8, w20, eq  // eq = none
   34e4c:	mov	x0, sp
   34e50:	mov	x1, x19
   34e54:	bl	c6f0 <mpfr_set4@plt>
   34e58:	ldr	x8, [sp, #16]
   34e5c:	mov	x0, sp
   34e60:	cmp	x8, x22
   34e64:	cset	w19, eq  // eq = none
   34e68:	bl	c110 <mpfr_clear@plt>
   34e6c:	str	w24, [x23, x21]
   34e70:	b	34eb0 <mpfr_fits_uint_p@@Base+0xe4>
   34e74:	cmp	x22, #0x0
   34e78:	b.le	34e84 <mpfr_fits_uint_p@@Base+0xb8>
   34e7c:	mov	w19, wzr
   34e80:	b	34eb0 <mpfr_fits_uint_p@@Base+0xe4>
   34e84:	cbz	w20, 34e98 <mpfr_fits_uint_p@@Base+0xcc>
   34e88:	sub	w8, w20, #0x1
   34e8c:	cmp	w8, #0x2
   34e90:	cset	w19, cc  // cc = lo, ul, last
   34e94:	b	34eb0 <mpfr_fits_uint_p@@Base+0xe4>
   34e98:	tbnz	x22, #63, 34eac <mpfr_fits_uint_p@@Base+0xe0>
   34e9c:	mov	x0, x19
   34ea0:	bl	bfb0 <mpfr_powerof2_raw@plt>
   34ea4:	mov	w19, w0
   34ea8:	b	34eb0 <mpfr_fits_uint_p@@Base+0xe4>
   34eac:	mov	w19, #0x1                   	// #1
   34eb0:	mov	w0, w19
   34eb4:	ldp	x20, x19, [sp, #80]
   34eb8:	ldp	x22, x21, [sp, #64]
   34ebc:	ldp	x24, x23, [sp, #48]
   34ec0:	ldp	x29, x30, [sp, #32]
   34ec4:	add	sp, sp, #0x60
   34ec8:	ret
   34ecc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34ed0:	cmp	x22, x8
   34ed4:	cset	w19, eq  // eq = none
   34ed8:	b	34eb0 <mpfr_fits_uint_p@@Base+0xe4>

0000000000034edc <mpfr_fits_ulong_p@@Base>:
   34edc:	sub	sp, sp, #0x60
   34ee0:	stp	x29, x30, [sp, #32]
   34ee4:	stp	x24, x23, [sp, #48]
   34ee8:	stp	x22, x21, [sp, #64]
   34eec:	stp	x20, x19, [sp, #80]
   34ef0:	ldr	x22, [x0, #16]
   34ef4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   34ef8:	add	x29, sp, #0x20
   34efc:	cmp	x22, x8
   34f00:	b.le	34fdc <mpfr_fits_ulong_p@@Base+0x100>
   34f04:	ldr	w8, [x0, #8]
   34f08:	mov	x19, x0
   34f0c:	mov	w20, w1
   34f10:	tbnz	w8, #31, 34f84 <mpfr_fits_ulong_p@@Base+0xa8>
   34f14:	cmp	x22, #0x3f
   34f18:	b.le	34fbc <mpfr_fits_ulong_p@@Base+0xe0>
   34f1c:	cmp	x22, #0x40
   34f20:	b.ne	34f8c <mpfr_fits_ulong_p@@Base+0xb0>  // b.any
   34f24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   34f28:	ldr	x1, [x0, #2656]
   34f2c:	add	x0, x0, #0xa60
   34f30:	blr	x1
   34f34:	mrs	x23, tpidr_el0
   34f38:	ldr	w24, [x23, x0]
   34f3c:	mov	x21, x0
   34f40:	mov	x0, sp
   34f44:	mov	w1, #0x40                  	// #64
   34f48:	bl	cad0 <mpfr_init2@plt>
   34f4c:	ldr	w3, [x19, #8]
   34f50:	cmp	w20, #0x5
   34f54:	mov	w8, #0x2                   	// #2
   34f58:	csel	w2, w8, w20, eq  // eq = none
   34f5c:	mov	x0, sp
   34f60:	mov	x1, x19
   34f64:	bl	c6f0 <mpfr_set4@plt>
   34f68:	ldr	x8, [sp, #16]
   34f6c:	mov	x0, sp
   34f70:	cmp	x8, x22
   34f74:	cset	w19, eq  // eq = none
   34f78:	bl	c110 <mpfr_clear@plt>
   34f7c:	str	w24, [x23, x21]
   34f80:	b	34fc0 <mpfr_fits_ulong_p@@Base+0xe4>
   34f84:	cmp	x22, #0x0
   34f88:	b.le	34f94 <mpfr_fits_ulong_p@@Base+0xb8>
   34f8c:	mov	w19, wzr
   34f90:	b	34fc0 <mpfr_fits_ulong_p@@Base+0xe4>
   34f94:	cbz	w20, 34fa8 <mpfr_fits_ulong_p@@Base+0xcc>
   34f98:	sub	w8, w20, #0x1
   34f9c:	cmp	w8, #0x2
   34fa0:	cset	w19, cc  // cc = lo, ul, last
   34fa4:	b	34fc0 <mpfr_fits_ulong_p@@Base+0xe4>
   34fa8:	tbnz	x22, #63, 34fbc <mpfr_fits_ulong_p@@Base+0xe0>
   34fac:	mov	x0, x19
   34fb0:	bl	bfb0 <mpfr_powerof2_raw@plt>
   34fb4:	mov	w19, w0
   34fb8:	b	34fc0 <mpfr_fits_ulong_p@@Base+0xe4>
   34fbc:	mov	w19, #0x1                   	// #1
   34fc0:	mov	w0, w19
   34fc4:	ldp	x20, x19, [sp, #80]
   34fc8:	ldp	x22, x21, [sp, #64]
   34fcc:	ldp	x24, x23, [sp, #48]
   34fd0:	ldp	x29, x30, [sp, #32]
   34fd4:	add	sp, sp, #0x60
   34fd8:	ret
   34fdc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   34fe0:	cmp	x22, x8
   34fe4:	cset	w19, eq  // eq = none
   34fe8:	b	34fc0 <mpfr_fits_ulong_p@@Base+0xe4>

0000000000034fec <mpfr_fits_uintmax_p@@Base>:
   34fec:	sub	sp, sp, #0x60
   34ff0:	stp	x29, x30, [sp, #32]
   34ff4:	stp	x24, x23, [sp, #48]
   34ff8:	stp	x22, x21, [sp, #64]
   34ffc:	stp	x20, x19, [sp, #80]
   35000:	ldr	x22, [x0, #16]
   35004:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35008:	add	x29, sp, #0x20
   3500c:	cmp	x22, x8
   35010:	b.le	350ec <mpfr_fits_uintmax_p@@Base+0x100>
   35014:	ldr	w8, [x0, #8]
   35018:	mov	x19, x0
   3501c:	mov	w20, w1
   35020:	tbnz	w8, #31, 35094 <mpfr_fits_uintmax_p@@Base+0xa8>
   35024:	cmp	x22, #0x3f
   35028:	b.le	350cc <mpfr_fits_uintmax_p@@Base+0xe0>
   3502c:	cmp	x22, #0x40
   35030:	b.ne	3509c <mpfr_fits_uintmax_p@@Base+0xb0>  // b.any
   35034:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35038:	ldr	x1, [x0, #2656]
   3503c:	add	x0, x0, #0xa60
   35040:	blr	x1
   35044:	mrs	x23, tpidr_el0
   35048:	ldr	w24, [x23, x0]
   3504c:	mov	x21, x0
   35050:	mov	x0, sp
   35054:	mov	w1, #0x40                  	// #64
   35058:	bl	cad0 <mpfr_init2@plt>
   3505c:	ldr	w3, [x19, #8]
   35060:	cmp	w20, #0x5
   35064:	mov	w8, #0x2                   	// #2
   35068:	csel	w2, w8, w20, eq  // eq = none
   3506c:	mov	x0, sp
   35070:	mov	x1, x19
   35074:	bl	c6f0 <mpfr_set4@plt>
   35078:	ldr	x8, [sp, #16]
   3507c:	mov	x0, sp
   35080:	cmp	x8, x22
   35084:	cset	w19, eq  // eq = none
   35088:	bl	c110 <mpfr_clear@plt>
   3508c:	str	w24, [x23, x21]
   35090:	b	350d0 <mpfr_fits_uintmax_p@@Base+0xe4>
   35094:	cmp	x22, #0x0
   35098:	b.le	350a4 <mpfr_fits_uintmax_p@@Base+0xb8>
   3509c:	mov	w19, wzr
   350a0:	b	350d0 <mpfr_fits_uintmax_p@@Base+0xe4>
   350a4:	cbz	w20, 350b8 <mpfr_fits_uintmax_p@@Base+0xcc>
   350a8:	sub	w8, w20, #0x1
   350ac:	cmp	w8, #0x2
   350b0:	cset	w19, cc  // cc = lo, ul, last
   350b4:	b	350d0 <mpfr_fits_uintmax_p@@Base+0xe4>
   350b8:	tbnz	x22, #63, 350cc <mpfr_fits_uintmax_p@@Base+0xe0>
   350bc:	mov	x0, x19
   350c0:	bl	bfb0 <mpfr_powerof2_raw@plt>
   350c4:	mov	w19, w0
   350c8:	b	350d0 <mpfr_fits_uintmax_p@@Base+0xe4>
   350cc:	mov	w19, #0x1                   	// #1
   350d0:	mov	w0, w19
   350d4:	ldp	x20, x19, [sp, #80]
   350d8:	ldp	x22, x21, [sp, #64]
   350dc:	ldp	x24, x23, [sp, #48]
   350e0:	ldp	x29, x30, [sp, #32]
   350e4:	add	sp, sp, #0x60
   350e8:	ret
   350ec:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   350f0:	cmp	x22, x8
   350f4:	cset	w19, eq  // eq = none
   350f8:	b	350d0 <mpfr_fits_uintmax_p@@Base+0xe4>

00000000000350fc <mpfr_fits_intmax_p@@Base>:
   350fc:	sub	sp, sp, #0x90
   35100:	stp	x29, x30, [sp, #64]
   35104:	stp	x24, x23, [sp, #96]
   35108:	stp	x22, x21, [sp, #112]
   3510c:	stp	x20, x19, [sp, #128]
   35110:	ldr	x24, [x0, #16]
   35114:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   35118:	str	x25, [sp, #80]
   3511c:	add	x29, sp, #0x40
   35120:	cmp	x24, x8
   35124:	b.le	35240 <mpfr_fits_intmax_p@@Base+0x144>
   35128:	cmp	x24, #0x1
   3512c:	b.lt	351b8 <mpfr_fits_intmax_p@@Base+0xbc>  // b.tstop
   35130:	ldr	w25, [x0, #8]
   35134:	mov	w8, #0x3f                  	// #63
   35138:	mov	x19, x0
   3513c:	cmp	w25, #0x0
   35140:	cinc	w8, w8, lt  // lt = tstop
   35144:	sub	w9, w8, #0x1
   35148:	cmp	x24, w9, sxtw
   3514c:	b.le	351b8 <mpfr_fits_intmax_p@@Base+0xbc>
   35150:	add	w9, w8, #0x1
   35154:	cmp	x24, x9
   35158:	b.ge	351dc <mpfr_fits_intmax_p@@Base+0xe0>  // b.tcont
   3515c:	mov	w20, w1
   35160:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35164:	ldr	x1, [x0, #2656]
   35168:	add	x0, x0, #0xa60
   3516c:	blr	x1
   35170:	mrs	x22, tpidr_el0
   35174:	ldr	w23, [x22, x0]
   35178:	mov	w21, w8
   3517c:	add	x0, sp, #0x20
   35180:	mov	x1, x21
   35184:	bl	cad0 <mpfr_init2@plt>
   35188:	ldr	w3, [x19, #8]
   3518c:	cmp	w20, #0x5
   35190:	mov	w8, #0x4                   	// #4
   35194:	csel	w2, w8, w20, eq  // eq = none
   35198:	add	x0, sp, #0x20
   3519c:	mov	x1, x19
   351a0:	bl	c6f0 <mpfr_set4@plt>
   351a4:	tbnz	w25, #31, 351e4 <mpfr_fits_intmax_p@@Base+0xe8>
   351a8:	ldr	x8, [sp, #48]
   351ac:	cmp	x8, x24
   351b0:	cset	w19, eq  // eq = none
   351b4:	b	35220 <mpfr_fits_intmax_p@@Base+0x124>
   351b8:	mov	w19, #0x1                   	// #1
   351bc:	mov	w0, w19
   351c0:	ldp	x20, x19, [sp, #128]
   351c4:	ldp	x22, x21, [sp, #112]
   351c8:	ldp	x24, x23, [sp, #96]
   351cc:	ldr	x25, [sp, #80]
   351d0:	ldp	x29, x30, [sp, #64]
   351d4:	add	sp, sp, #0x90
   351d8:	ret
   351dc:	mov	w19, wzr
   351e0:	b	351bc <mpfr_fits_intmax_p@@Base+0xc0>
   351e4:	mov	x0, sp
   351e8:	mov	x1, x21
   351ec:	bl	cad0 <mpfr_init2@plt>
   351f0:	mov	x0, sp
   351f4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   351f8:	mov	w2, wzr
   351fc:	bl	c120 <__gmpfr_set_sj@plt>
   35200:	add	x0, sp, #0x20
   35204:	mov	x1, sp
   35208:	mov	w2, #0x1                   	// #1
   3520c:	bl	c9f0 <mpfr_cmp3@plt>
   35210:	mvn	w8, w0
   35214:	mov	x0, sp
   35218:	lsr	w19, w8, #31
   3521c:	bl	c110 <mpfr_clear@plt>
   35220:	add	x0, sp, #0x20
   35224:	bl	c110 <mpfr_clear@plt>
   35228:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3522c:	ldr	x1, [x0, #2656]
   35230:	add	x0, x0, #0xa60
   35234:	blr	x1
   35238:	str	w23, [x22, x0]
   3523c:	b	351bc <mpfr_fits_intmax_p@@Base+0xc0>
   35240:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   35244:	cmp	x24, x8
   35248:	cset	w19, eq  // eq = none
   3524c:	b	351bc <mpfr_fits_intmax_p@@Base+0xc0>

0000000000035250 <mpfr_get_si@@Base>:
   35250:	sub	sp, sp, #0x70
   35254:	stp	x29, x30, [sp, #32]
   35258:	stp	x26, x25, [sp, #48]
   3525c:	stp	x24, x23, [sp, #64]
   35260:	stp	x22, x21, [sp, #80]
   35264:	stp	x20, x19, [sp, #96]
   35268:	add	x29, sp, #0x20
   3526c:	mov	w20, w1
   35270:	mov	x19, x0
   35274:	bl	c7e0 <mpfr_fits_slong_p@plt>
   35278:	cbz	w0, 353c0 <mpfr_get_si@@Base+0x170>
   3527c:	ldr	x8, [x19, #16]
   35280:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   35284:	cmp	x8, x25
   35288:	b.ne	35294 <mpfr_get_si@@Base+0x44>  // b.any
   3528c:	mov	x19, xzr
   35290:	b	353a0 <mpfr_get_si@@Base+0x150>
   35294:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35298:	ldr	x1, [x0, #2656]
   3529c:	add	x0, x0, #0xa60
   352a0:	blr	x1
   352a4:	mrs	x22, tpidr_el0
   352a8:	ldr	w26, [x22, x0]
   352ac:	mov	x21, x0
   352b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   352b4:	ldr	x1, [x0, #2592]
   352b8:	add	x0, x0, #0xa20
   352bc:	blr	x1
   352c0:	ldr	x23, [x22, x0]
   352c4:	mov	x8, x0
   352c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   352cc:	ldr	x1, [x0, #2624]
   352d0:	add	x0, x0, #0xa40
   352d4:	blr	x1
   352d8:	ldr	x24, [x22, x0]
   352dc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   352e0:	str	x9, [x22, x8]
   352e4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   352e8:	str	x8, [x22, x0]
   352ec:	mov	x0, sp
   352f0:	mov	w1, #0x3f                  	// #63
   352f4:	bl	cad0 <mpfr_init2@plt>
   352f8:	mov	x0, sp
   352fc:	mov	x1, x19
   35300:	mov	w2, w20
   35304:	bl	c360 <mpfr_rint@plt>
   35308:	ldr	x8, [sp, #16]
   3530c:	ldr	w9, [x22, x21]
   35310:	cmp	x8, x25
   35314:	orr	w20, w9, w26
   35318:	b.eq	35408 <mpfr_get_si@@Base+0x1b8>  // b.none
   3531c:	ldr	x9, [sp]
   35320:	ldr	x10, [sp, #24]
   35324:	neg	x8, x8
   35328:	sub	x11, x9, #0x1
   3532c:	add	x9, x9, #0x3e
   35330:	cmp	x11, #0x0
   35334:	csel	x9, x9, x11, lt  // lt = tstop
   35338:	asr	x9, x9, #6
   3533c:	ldr	x9, [x10, x9, lsl #3]
   35340:	ldr	w10, [x19, #8]
   35344:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   35348:	lsr	x8, x9, x8
   3534c:	cmp	x8, #0x0
   35350:	csneg	x9, x11, x8, lt  // lt = tstop
   35354:	cmp	w10, #0x0
   35358:	csel	x19, x8, x9, gt
   3535c:	mov	x0, sp
   35360:	bl	c110 <mpfr_clear@plt>
   35364:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35368:	ldr	x1, [x0, #2656]
   3536c:	add	x0, x0, #0xa60
   35370:	blr	x1
   35374:	str	w20, [x22, x0]
   35378:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3537c:	ldr	x1, [x0, #2592]
   35380:	add	x0, x0, #0xa20
   35384:	blr	x1
   35388:	str	x23, [x22, x0]
   3538c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35390:	ldr	x1, [x0, #2624]
   35394:	add	x0, x0, #0xa40
   35398:	blr	x1
   3539c:	str	x24, [x22, x0]
   353a0:	mov	x0, x19
   353a4:	ldp	x20, x19, [sp, #96]
   353a8:	ldp	x22, x21, [sp, #80]
   353ac:	ldp	x24, x23, [sp, #64]
   353b0:	ldp	x26, x25, [sp, #48]
   353b4:	ldp	x29, x30, [sp, #32]
   353b8:	add	sp, sp, #0x70
   353bc:	ret
   353c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   353c4:	ldr	x1, [x0, #2656]
   353c8:	add	x0, x0, #0xa60
   353cc:	blr	x1
   353d0:	mrs	x8, tpidr_el0
   353d4:	ldr	w9, [x8, x0]
   353d8:	orr	w9, w9, #0x10
   353dc:	str	w9, [x8, x0]
   353e0:	ldr	x8, [x19, #16]
   353e4:	mov	x9, #0x2                   	// #2
   353e8:	movk	x9, #0x8000, lsl #48
   353ec:	cmp	x8, x9
   353f0:	b.eq	3528c <mpfr_get_si@@Base+0x3c>  // b.none
   353f4:	ldr	w8, [x19, #8]
   353f8:	cmp	w8, #0x0
   353fc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   35400:	cinv	x19, x8, ge  // ge = tcont
   35404:	b	353a0 <mpfr_get_si@@Base+0x150>
   35408:	mov	x19, xzr
   3540c:	b	3535c <mpfr_get_si@@Base+0x10c>

0000000000035410 <mpfr_get_ui@@Base>:
   35410:	sub	sp, sp, #0x70
   35414:	stp	x29, x30, [sp, #32]
   35418:	stp	x26, x25, [sp, #48]
   3541c:	stp	x24, x23, [sp, #64]
   35420:	stp	x22, x21, [sp, #80]
   35424:	stp	x20, x19, [sp, #96]
   35428:	add	x29, sp, #0x20
   3542c:	mov	w20, w1
   35430:	mov	x19, x0
   35434:	bl	bf00 <mpfr_fits_ulong_p@plt>
   35438:	cbz	w0, 35570 <mpfr_get_ui@@Base+0x160>
   3543c:	ldr	x8, [x19, #16]
   35440:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   35444:	cmp	x8, x25
   35448:	b.ne	35454 <mpfr_get_ui@@Base+0x44>  // b.any
   3544c:	mov	x19, xzr
   35450:	b	35550 <mpfr_get_ui@@Base+0x140>
   35454:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35458:	ldr	x1, [x0, #2656]
   3545c:	add	x0, x0, #0xa60
   35460:	blr	x1
   35464:	mrs	x22, tpidr_el0
   35468:	ldr	w26, [x22, x0]
   3546c:	mov	x21, x0
   35470:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35474:	ldr	x1, [x0, #2592]
   35478:	add	x0, x0, #0xa20
   3547c:	blr	x1
   35480:	ldr	x23, [x22, x0]
   35484:	mov	x8, x0
   35488:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3548c:	ldr	x1, [x0, #2624]
   35490:	add	x0, x0, #0xa40
   35494:	blr	x1
   35498:	ldr	x24, [x22, x0]
   3549c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   354a0:	str	x9, [x22, x8]
   354a4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   354a8:	str	x8, [x22, x0]
   354ac:	mov	x0, sp
   354b0:	mov	w1, #0x40                  	// #64
   354b4:	bl	cad0 <mpfr_init2@plt>
   354b8:	mov	x0, sp
   354bc:	mov	x1, x19
   354c0:	mov	w2, w20
   354c4:	bl	c360 <mpfr_rint@plt>
   354c8:	ldr	x8, [sp, #16]
   354cc:	ldr	w9, [x22, x21]
   354d0:	cmp	x8, x25
   354d4:	orr	w20, w9, w26
   354d8:	b.ne	354e4 <mpfr_get_ui@@Base+0xd4>  // b.any
   354dc:	mov	x19, xzr
   354e0:	b	3550c <mpfr_get_ui@@Base+0xfc>
   354e4:	ldr	x9, [sp]
   354e8:	ldr	x10, [sp, #24]
   354ec:	neg	x8, x8
   354f0:	sub	x11, x9, #0x1
   354f4:	add	x9, x9, #0x3e
   354f8:	cmp	x11, #0x0
   354fc:	csel	x9, x9, x11, lt  // lt = tstop
   35500:	asr	x9, x9, #6
   35504:	ldr	x9, [x10, x9, lsl #3]
   35508:	lsr	x19, x9, x8
   3550c:	mov	x0, sp
   35510:	bl	c110 <mpfr_clear@plt>
   35514:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35518:	ldr	x1, [x0, #2656]
   3551c:	add	x0, x0, #0xa60
   35520:	blr	x1
   35524:	str	w20, [x22, x0]
   35528:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3552c:	ldr	x1, [x0, #2592]
   35530:	add	x0, x0, #0xa20
   35534:	blr	x1
   35538:	str	x23, [x22, x0]
   3553c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35540:	ldr	x1, [x0, #2624]
   35544:	add	x0, x0, #0xa40
   35548:	blr	x1
   3554c:	str	x24, [x22, x0]
   35550:	mov	x0, x19
   35554:	ldp	x20, x19, [sp, #96]
   35558:	ldp	x22, x21, [sp, #80]
   3555c:	ldp	x24, x23, [sp, #64]
   35560:	ldp	x26, x25, [sp, #48]
   35564:	ldp	x29, x30, [sp, #32]
   35568:	add	sp, sp, #0x70
   3556c:	ret
   35570:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35574:	ldr	x1, [x0, #2656]
   35578:	add	x0, x0, #0xa60
   3557c:	blr	x1
   35580:	mrs	x8, tpidr_el0
   35584:	ldr	w9, [x8, x0]
   35588:	orr	w9, w9, #0x10
   3558c:	str	w9, [x8, x0]
   35590:	ldr	x8, [x19, #16]
   35594:	mov	x9, #0x2                   	// #2
   35598:	movk	x9, #0x8000, lsl #48
   3559c:	cmp	x8, x9
   355a0:	b.eq	3544c <mpfr_get_ui@@Base+0x3c>  // b.none
   355a4:	ldr	w8, [x19, #8]
   355a8:	mov	w9, #0xffffffff            	// #-1
   355ac:	eor	w8, w9, w8, asr #31
   355b0:	sxtw	x19, w8
   355b4:	b	35550 <mpfr_get_ui@@Base+0x140>

00000000000355b8 <mpfr_zeta@@Base>:
   355b8:	stp	x29, x30, [sp, #-96]!
   355bc:	stp	x28, x27, [sp, #16]
   355c0:	stp	x26, x25, [sp, #32]
   355c4:	stp	x24, x23, [sp, #48]
   355c8:	stp	x22, x21, [sp, #64]
   355cc:	stp	x20, x19, [sp, #80]
   355d0:	mov	x29, sp
   355d4:	sub	sp, sp, #0x1a0
   355d8:	ldr	x8, [x1, #16]
   355dc:	mov	x25, #0xfffffffffffffeff    	// #-257
   355e0:	movk	x25, #0x7fff, lsl #48
   355e4:	add	x9, x25, #0x105
   355e8:	mov	w20, w2
   355ec:	mov	x21, x1
   355f0:	cmp	x8, x9
   355f4:	mov	x19, x0
   355f8:	b.lt	36028 <mpfr_zeta@@Base+0xa70>  // b.tstop
   355fc:	ldr	x9, [x19]
   35600:	ldr	w26, [x21, #8]
   35604:	add	x10, x8, #0x1
   35608:	neg	x9, x9
   3560c:	cmp	x10, x9
   35610:	b.ge	356a8 <mpfr_zeta@@Base+0xf0>  // b.tcont
   35614:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35618:	ldr	x1, [x0, #2656]
   3561c:	add	x0, x0, #0xa60
   35620:	blr	x1
   35624:	mrs	x22, tpidr_el0
   35628:	ldr	w23, [x22, x0]
   3562c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35630:	ldr	x1, [x0, #2592]
   35634:	add	x0, x0, #0xa20
   35638:	blr	x1
   3563c:	ldr	x24, [x22, x0]
   35640:	mov	x8, x0
   35644:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35648:	ldr	x1, [x0, #2624]
   3564c:	add	x0, x0, #0xa40
   35650:	blr	x1
   35654:	ldr	x25, [x22, x0]
   35658:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3565c:	str	x9, [x22, x8]
   35660:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   35664:	str	x8, [x22, x0]
   35668:	mov	x1, #0xffffffffffffffff    	// #-1
   3566c:	mov	x2, #0xffffffffffffffff    	// #-1
   35670:	mov	x0, x19
   35674:	mov	w3, w20
   35678:	bl	bb40 <mpfr_set_si_2exp@plt>
   3567c:	cmp	w20, #0x4
   35680:	mov	w8, #0x3                   	// #3
   35684:	csel	w20, w8, w20, eq  // eq = none
   35688:	sub	w8, w20, #0x1
   3568c:	cmp	w8, #0x1
   35690:	b.hi	35748 <mpfr_zeta@@Base+0x190>  // b.pmore
   35694:	tbz	w26, #31, 35748 <mpfr_zeta@@Base+0x190>
   35698:	mov	x0, x19
   3569c:	bl	c1c0 <mpfr_nextabove@plt>
   356a0:	mov	w21, #0x1                   	// #1
   356a4:	b	357e4 <mpfr_zeta@@Base+0x22c>
   356a8:	tbnz	w26, #31, 35768 <mpfr_zeta@@Base+0x1b0>
   356ac:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   356b0:	ldr	x1, [x1, #3944]
   356b4:	mov	w2, #0x1                   	// #1
   356b8:	mov	x0, x21
   356bc:	mov	w22, #0x1                   	// #1
   356c0:	bl	c9f0 <mpfr_cmp3@plt>
   356c4:	mrs	x24, tpidr_el0
   356c8:	cbz	w0, 3579c <mpfr_zeta@@Base+0x1e4>
   356cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   356d0:	ldr	x1, [x0, #2656]
   356d4:	add	x0, x0, #0xa60
   356d8:	blr	x1
   356dc:	ldr	w27, [x24, x0]
   356e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   356e4:	ldr	x1, [x0, #2592]
   356e8:	add	x0, x0, #0xa20
   356ec:	blr	x1
   356f0:	ldr	x22, [x24, x0]
   356f4:	mov	x8, x0
   356f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   356fc:	ldr	x1, [x0, #2624]
   35700:	add	x0, x0, #0xa40
   35704:	blr	x1
   35708:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3570c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   35710:	ldr	x23, [x24, x0]
   35714:	str	x9, [x24, x8]
   35718:	str	x10, [x24, x0]
   3571c:	ldr	w9, [x21, #8]
   35720:	ldr	x8, [x21, #16]
   35724:	cmp	w9, #0x1
   35728:	b.lt	35850 <mpfr_zeta@@Base+0x298>  // b.tstop
   3572c:	tbnz	x8, #63, 35850 <mpfr_zeta@@Base+0x298>
   35730:	mov	x0, x19
   35734:	mov	x1, x21
   35738:	mov	w2, w20
   3573c:	bl	360cc <mpfr_zeta@@Base+0xb14>
   35740:	mov	w21, w0
   35744:	b	35f98 <mpfr_zeta@@Base+0x9e0>
   35748:	cmp	w20, #0x3
   3574c:	b.ne	357c8 <mpfr_zeta@@Base+0x210>  // b.any
   35750:	cmp	w26, #0x1
   35754:	b.lt	357c8 <mpfr_zeta@@Base+0x210>  // b.tstop
   35758:	mov	x0, x19
   3575c:	bl	be80 <mpfr_nextbelow@plt>
   35760:	mov	w21, #0xffffffff            	// #-1
   35764:	b	357e4 <mpfr_zeta@@Base+0x22c>
   35768:	ldp	q1, q0, [x21]
   3576c:	sub	x8, x8, #0x1
   35770:	add	x0, sp, #0x80
   35774:	stp	q1, q0, [sp, #128]
   35778:	str	x8, [sp, #144]
   3577c:	bl	c200 <mpfr_integer_p@plt>
   35780:	cbz	w0, 356ac <mpfr_zeta@@Base+0xf4>
   35784:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   35788:	mov	w9, #0x1                   	// #1
   3578c:	mov	w21, wzr
   35790:	str	x8, [x19, #16]
   35794:	str	w9, [x19, #8]
   35798:	b	36004 <mpfr_zeta@@Base+0xa4c>
   3579c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   357a0:	str	x8, [x19, #16]
   357a4:	str	w22, [x19, #8]
   357a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   357ac:	ldr	x1, [x0, #2656]
   357b0:	add	x0, x0, #0xa60
   357b4:	blr	x1
   357b8:	ldr	w8, [x24, x0]
   357bc:	mov	w21, wzr
   357c0:	orr	w8, w8, #0x20
   357c4:	b	36000 <mpfr_zeta@@Base+0xa48>
   357c8:	cmp	w20, #0x2
   357cc:	mov	w21, #0x1                   	// #1
   357d0:	b.eq	357e4 <mpfr_zeta@@Base+0x22c>  // b.none
   357d4:	cmp	w26, #0x0
   357d8:	cneg	w8, w21, le
   357dc:	cmp	w20, #0x3
   357e0:	csinv	w21, w8, wzr, ne  // ne = any
   357e4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   357e8:	ldr	x1, [x0, #2656]
   357ec:	add	x0, x0, #0xa60
   357f0:	blr	x1
   357f4:	str	w23, [x22, x0]
   357f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   357fc:	ldr	x1, [x0, #2592]
   35800:	add	x0, x0, #0xa20
   35804:	blr	x1
   35808:	str	x24, [x22, x0]
   3580c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35810:	ldr	x1, [x0, #2624]
   35814:	add	x0, x0, #0xa40
   35818:	blr	x1
   3581c:	str	x25, [x22, x0]
   35820:	ldr	x8, [x19, #16]
   35824:	cmp	x8, x25
   35828:	b.gt	3605c <mpfr_zeta@@Base+0xaa4>
   3582c:	cmp	x8, x24
   35830:	b.lt	3605c <mpfr_zeta@@Base+0xaa4>  // b.tstop
   35834:	orr	w8, w23, #0x8
   35838:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3583c:	ldr	x1, [x0, #2656]
   35840:	add	x0, x0, #0xa60
   35844:	blr	x1
   35848:	str	w8, [x22, x0]
   3584c:	b	36004 <mpfr_zeta@@Base+0xa4c>
   35850:	stp	x23, x22, [sp, #24]
   35854:	ldr	x22, [x19]
   35858:	ldr	x23, [x21]
   3585c:	cmp	x8, #0x0
   35860:	add	x1, sp, #0x80
   35864:	sub	x2, x29, #0x28
   35868:	sub	x3, x29, #0x48
   3586c:	mov	w0, #0x40                  	// #64
   35870:	mov	x4, xzr
   35874:	csneg	x26, xzr, x8, gt
   35878:	bl	ccb0 <mpfr_inits2@plt>
   3587c:	mov	w1, #0x1                   	// #1
   35880:	mov	x0, x21
   35884:	mov	x2, xzr
   35888:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   3588c:	tbnz	w0, #31, 358a8 <mpfr_zeta@@Base+0x2f0>
   35890:	add	x0, sp, #0x80
   35894:	mov	w2, #0x1                   	// #1
   35898:	mov	w3, #0x2                   	// #2
   3589c:	mov	x1, x21
   358a0:	bl	c580 <mpfr_sub_ui@plt>
   358a4:	b	358bc <mpfr_zeta@@Base+0x304>
   358a8:	add	x0, sp, #0x80
   358ac:	mov	w1, #0x1                   	// #1
   358b0:	mov	w3, #0x2                   	// #2
   358b4:	mov	x2, x21
   358b8:	bl	caa0 <mpfr_ui_sub@plt>
   358bc:	mov	x8, #0xfffffffffffffff2    	// #-14
   358c0:	sub	x2, x8, x22
   358c4:	sub	x0, x29, #0x28
   358c8:	mov	w1, #0x1                   	// #1
   358cc:	mov	w3, #0x2                   	// #2
   358d0:	add	x26, x23, x26
   358d4:	bl	c640 <mpfr_set_ui_2exp@plt>
   358d8:	ldr	x8, [sp, #144]
   358dc:	add	x23, x22, #0xe
   358e0:	add	x0, sp, #0x80
   358e4:	cmp	x8, x23
   358e8:	b.ge	35900 <mpfr_zeta@@Base+0x348>  // b.tcont
   358ec:	mov	w1, #0x1                   	// #1
   358f0:	mov	w3, #0x2                   	// #2
   358f4:	mov	x2, x23
   358f8:	bl	c640 <mpfr_set_ui_2exp@plt>
   358fc:	b	35910 <mpfr_zeta@@Base+0x358>
   35900:	add	x1, sp, #0x80
   35904:	mov	w2, #0x1                   	// #1
   35908:	mov	w3, #0x2                   	// #2
   3590c:	bl	c320 <mpfr_mul_2ui@plt>
   35910:	sub	x0, x29, #0x28
   35914:	sub	x1, x29, #0x28
   35918:	mov	w2, #0x1                   	// #1
   3591c:	mov	w3, #0x2                   	// #2
   35920:	add	x26, x26, #0x2
   35924:	bl	c2d0 <mpfr_add_ui@plt>
   35928:	add	x0, sp, #0x80
   3592c:	add	x1, sp, #0x80
   35930:	sub	x2, x29, #0x28
   35934:	mov	w3, #0x2                   	// #2
   35938:	bl	be00 <mpfr_mul@plt>
   3593c:	sub	x0, x29, #0x48
   35940:	add	x1, sp, #0x80
   35944:	mov	w2, #0x1                   	// #1
   35948:	mov	w3, #0x2                   	// #2
   3594c:	bl	c2d0 <mpfr_add_ui@plt>
   35950:	ldur	x8, [x29, #-56]
   35954:	cmp	x8, #0x3
   35958:	b.gt	35974 <mpfr_zeta@@Base+0x3bc>
   3595c:	add	x0, sp, #0x80
   35960:	mov	w1, #0x8                   	// #8
   35964:	mov	w3, #0x2                   	// #2
   35968:	mov	x2, xzr
   3596c:	bl	c640 <mpfr_set_ui_2exp@plt>
   35970:	b	35988 <mpfr_zeta@@Base+0x3d0>
   35974:	ldur	w3, [x29, #-64]
   35978:	add	x0, sp, #0x80
   3597c:	sub	x1, x29, #0x48
   35980:	mov	w2, #0x2                   	// #2
   35984:	bl	c6f0 <mpfr_set4@plt>
   35988:	add	x0, sp, #0x80
   3598c:	add	x1, sp, #0x80
   35990:	mov	w3, #0x2                   	// #2
   35994:	mov	x2, x23
   35998:	bl	c950 <mpfr_div_2ui@plt>
   3599c:	add	x0, sp, #0x80
   359a0:	add	x1, sp, #0x80
   359a4:	mov	w2, #0x1                   	// #1
   359a8:	mov	w3, #0x2                   	// #2
   359ac:	bl	c2d0 <mpfr_add_ui@plt>
   359b0:	add	x0, sp, #0x80
   359b4:	add	x1, sp, #0x80
   359b8:	sub	x2, x29, #0x28
   359bc:	mov	w3, #0x2                   	// #2
   359c0:	bl	be00 <mpfr_mul@plt>
   359c4:	sub	x0, x29, #0x28
   359c8:	sub	x1, x29, #0x48
   359cc:	mov	w2, #0xd                   	// #13
   359d0:	mov	w3, #0x2                   	// #2
   359d4:	bl	c2d0 <mpfr_add_ui@plt>
   359d8:	sub	x0, x29, #0x28
   359dc:	sub	x1, x29, #0x28
   359e0:	add	x2, sp, #0x80
   359e4:	mov	w3, #0x2                   	// #2
   359e8:	bl	be00 <mpfr_mul@plt>
   359ec:	add	x0, sp, #0x80
   359f0:	add	x1, sp, #0x80
   359f4:	mov	w2, #0x2                   	// #2
   359f8:	bl	c450 <mpfr_sqr@plt>
   359fc:	sub	x0, x29, #0x28
   35a00:	sub	x1, x29, #0x28
   35a04:	add	x2, sp, #0x80
   35a08:	mov	w3, #0x2                   	// #2
   35a0c:	bl	be00 <mpfr_mul@plt>
   35a10:	ldur	x23, [x29, #-24]
   35a14:	add	x0, sp, #0x80
   35a18:	sub	x1, x29, #0x28
   35a1c:	sub	x2, x29, #0x48
   35a20:	mov	x3, xzr
   35a24:	bl	c250 <mpfr_clears@plt>
   35a28:	add	x8, x23, x22
   35a2c:	cmp	x8, x26
   35a30:	csel	x8, x8, x26, gt
   35a34:	sub	x9, x25, #0xa
   35a38:	cmp	x8, x9
   35a3c:	str	x23, [sp, #16]
   35a40:	b.gt	360c8 <mpfr_zeta@@Base+0xb10>
   35a44:	add	x9, x8, #0x9
   35a48:	add	x10, x8, #0x48
   35a4c:	cmp	x9, #0x0
   35a50:	csel	x9, x10, x9, lt  // lt = tstop
   35a54:	asr	x9, x9, #6
   35a58:	add	x23, x8, #0xa
   35a5c:	cmp	x8, #0xf7
   35a60:	add	x28, x9, #0x1
   35a64:	str	w27, [sp, #44]
   35a68:	str	x22, [sp, #48]
   35a6c:	b.lt	35a80 <mpfr_zeta@@Base+0x4c8>  // b.tstop
   35a70:	lsl	x0, x28, #5
   35a74:	str	x0, [sp, #128]
   35a78:	bl	cd50 <mpfr_allocate_func@plt>
   35a7c:	b	35a8c <mpfr_zeta@@Base+0x4d4>
   35a80:	add	x8, sp, #0x80
   35a84:	add	x0, x8, #0x10
   35a88:	str	xzr, [sp, #128]
   35a8c:	mov	w11, #0x40                  	// #64
   35a90:	str	x0, [sp, #136]
   35a94:	stur	x23, [x29, #-40]
   35a98:	stur	x0, [x29, #-16]
   35a9c:	stur	x23, [x29, #-72]
   35aa0:	stur	x23, [x29, #-104]
   35aa4:	add	x9, x0, x28, lsl #4
   35aa8:	stur	x23, [x29, #-136]
   35aac:	str	x11, [sp, #56]
   35ab0:	adrp	x22, 70000 <__gmpfr_l2b@@Base+0x2e0>
   35ab4:	ldr	x22, [x22, #3944]
   35ab8:	stur	x9, [x29, #-80]
   35abc:	ldr	x9, [sp, #48]
   35ac0:	add	x8, x0, x28, lsl #3
   35ac4:	mov	w10, #0x18                  	// #24
   35ac8:	cmp	w20, #0x0
   35acc:	mov	w27, #0x1                   	// #1
   35ad0:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   35ad4:	stur	x8, [x29, #-48]
   35ad8:	madd	x8, x28, x10, x0
   35adc:	cinc	x9, x9, eq  // eq = none
   35ae0:	stur	w27, [x29, #-32]
   35ae4:	stur	w27, [x29, #-64]
   35ae8:	stur	w27, [x29, #-96]
   35aec:	stur	w27, [x29, #-128]
   35af0:	str	x9, [sp, #8]
   35af4:	stur	x8, [x29, #-112]
   35af8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35afc:	ldr	x1, [x0, #2704]
   35b00:	add	x0, x0, #0xa90
   35b04:	blr	x1
   35b08:	add	x1, x24, x0
   35b0c:	sub	x0, x29, #0x88
   35b10:	mov	w2, #0x3                   	// #3
   35b14:	bl	c3e0 <mpfr_cache@plt>
   35b18:	sub	x0, x29, #0x48
   35b1c:	mov	x1, x22
   35b20:	mov	x2, x21
   35b24:	mov	w3, wzr
   35b28:	bl	bc20 <mpfr_sub@plt>
   35b2c:	sub	x0, x29, #0x68
   35b30:	sub	x1, x29, #0x48
   35b34:	mov	w2, wzr
   35b38:	bl	c800 <mpfr_gamma@plt>
   35b3c:	ldur	x8, [x29, #-88]
   35b40:	mov	x28, #0x8000000000000003    	// #-9223372036854775805
   35b44:	sub	x0, x29, #0x28
   35b48:	sub	x1, x29, #0x48
   35b4c:	cmp	x8, x26
   35b50:	b.ne	35c9c <mpfr_zeta@@Base+0x6e4>  // b.any
   35b54:	sub	x3, x29, #0x68
   35b58:	sub	x4, x29, #0x88
   35b5c:	mov	w5, #0x3                   	// #3
   35b60:	mov	x2, x21
   35b64:	bl	36b44 <mpfr_zeta@@Base+0x158c>
   35b68:	ldur	x8, [x29, #-24]
   35b6c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35b70:	ldr	x1, [x0, #2624]
   35b74:	add	x0, x0, #0xa40
   35b78:	blr	x1
   35b7c:	cmp	x8, x28
   35b80:	b.eq	35eac <mpfr_zeta@@Base+0x8f4>  // b.none
   35b84:	ldr	x9, [x24, x0]
   35b88:	cmp	x8, x9
   35b8c:	b.eq	35eac <mpfr_zeta@@Base+0x8f4>  // b.none
   35b90:	ldur	x1, [x29, #-40]
   35b94:	add	x0, sp, #0x60
   35b98:	bl	cad0 <mpfr_init2@plt>
   35b9c:	add	x0, sp, #0x60
   35ba0:	sub	x1, x29, #0x48
   35ba4:	sub	x3, x29, #0x68
   35ba8:	sub	x4, x29, #0x88
   35bac:	mov	w5, #0x2                   	// #2
   35bb0:	mov	x2, x21
   35bb4:	bl	36b44 <mpfr_zeta@@Base+0x158c>
   35bb8:	ldr	x8, [sp, #112]
   35bbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35bc0:	ldr	x1, [x0, #2624]
   35bc4:	add	x0, x0, #0xa40
   35bc8:	blr	x1
   35bcc:	cmp	x8, x28
   35bd0:	b.eq	35c3c <mpfr_zeta@@Base+0x684>  // b.none
   35bd4:	ldr	x9, [x24, x0]
   35bd8:	cmp	x8, x9
   35bdc:	b.eq	35c3c <mpfr_zeta@@Base+0x684>  // b.none
   35be0:	ldr	x28, [sp, #48]
   35be4:	add	x0, sp, #0x40
   35be8:	mov	x1, x28
   35bec:	bl	cad0 <mpfr_init2@plt>
   35bf0:	ldur	w3, [x29, #-32]
   35bf4:	add	x0, sp, #0x40
   35bf8:	sub	x1, x29, #0x28
   35bfc:	mov	w2, w20
   35c00:	bl	c6f0 <mpfr_set4@plt>
   35c04:	add	x0, sp, #0x60
   35c08:	mov	x1, x28
   35c0c:	mov	w2, w20
   35c10:	bl	c9d0 <mpfr_prec_round@plt>
   35c14:	add	x0, sp, #0x40
   35c18:	add	x1, sp, #0x60
   35c1c:	mov	w2, #0x1                   	// #1
   35c20:	bl	c9f0 <mpfr_cmp3@plt>
   35c24:	mov	w28, w0
   35c28:	add	x0, sp, #0x60
   35c2c:	bl	c110 <mpfr_clear@plt>
   35c30:	add	x0, sp, #0x40
   35c34:	bl	c110 <mpfr_clear@plt>
   35c38:	cbz	w28, 35f08 <mpfr_zeta@@Base+0x950>
   35c3c:	ldr	x26, [sp, #56]
   35c40:	sub	x8, x25, x23
   35c44:	cmp	x26, x8
   35c48:	b.gt	35e74 <mpfr_zeta@@Base+0x8bc>
   35c4c:	add	x23, x23, x26
   35c50:	cmp	x23, #0x0
   35c54:	cinc	x8, x23, lt  // lt = tstop
   35c58:	cmp	x23, x25
   35c5c:	b.gt	360c8 <mpfr_zeta@@Base+0xb10>
   35c60:	asr	x8, x8, #1
   35c64:	str	x8, [sp, #56]
   35c68:	sub	x8, x23, #0x1
   35c6c:	add	x9, x23, #0x3e
   35c70:	cmp	x8, #0x0
   35c74:	ldr	x1, [sp, #128]
   35c78:	csel	x8, x9, x8, lt  // lt = tstop
   35c7c:	asr	x8, x8, #6
   35c80:	add	x28, x8, #0x1
   35c84:	lsl	x2, x28, #5
   35c88:	str	x2, [sp, #128]
   35c8c:	cbz	x1, 35e2c <mpfr_zeta@@Base+0x874>
   35c90:	ldr	x0, [sp, #136]
   35c94:	bl	c260 <mpfr_reallocate_func@plt>
   35c98:	b	35e34 <mpfr_zeta@@Base+0x87c>
   35c9c:	mov	w2, wzr
   35ca0:	bl	360cc <mpfr_zeta@@Base+0xb14>
   35ca4:	sub	x0, x29, #0x28
   35ca8:	sub	x1, x29, #0x28
   35cac:	sub	x2, x29, #0x68
   35cb0:	mov	w3, wzr
   35cb4:	bl	be00 <mpfr_mul@plt>
   35cb8:	sub	x0, x29, #0x68
   35cbc:	sub	x1, x29, #0x88
   35cc0:	mov	w2, #0x1                   	// #1
   35cc4:	mov	w3, wzr
   35cc8:	bl	c320 <mpfr_mul_2ui@plt>
   35ccc:	sub	x0, x29, #0x48
   35cd0:	sub	x1, x29, #0x48
   35cd4:	mov	w2, wzr
   35cd8:	bl	be20 <mpfr_neg@plt>
   35cdc:	sub	x0, x29, #0x68
   35ce0:	sub	x1, x29, #0x68
   35ce4:	sub	x2, x29, #0x48
   35ce8:	mov	w3, wzr
   35cec:	bl	be40 <mpfr_pow@plt>
   35cf0:	sub	x0, x29, #0x28
   35cf4:	sub	x1, x29, #0x28
   35cf8:	sub	x2, x29, #0x68
   35cfc:	mov	w3, wzr
   35d00:	bl	be00 <mpfr_mul@plt>
   35d04:	sub	x0, x29, #0x28
   35d08:	sub	x1, x29, #0x28
   35d0c:	mov	w2, #0x1                   	// #1
   35d10:	mov	w3, wzr
   35d14:	bl	c320 <mpfr_mul_2ui@plt>
   35d18:	sub	x0, x29, #0x68
   35d1c:	sub	x2, x29, #0x88
   35d20:	mov	x1, x21
   35d24:	mov	w3, wzr
   35d28:	bl	be00 <mpfr_mul@plt>
   35d2c:	sub	x0, x29, #0x88
   35d30:	sub	x1, x29, #0x68
   35d34:	mov	w2, #0x1                   	// #1
   35d38:	mov	w3, wzr
   35d3c:	bl	c950 <mpfr_div_2ui@plt>
   35d40:	sub	x0, x29, #0x68
   35d44:	sub	x1, x29, #0x88
   35d48:	mov	w2, wzr
   35d4c:	bl	c4a0 <mpfr_sin@plt>
   35d50:	ldur	x28, [x29, #-88]
   35d54:	tbz	x28, #63, 35dd4 <mpfr_zeta@@Base+0x81c>
   35d58:	neg	x8, x28
   35d5c:	sub	x9, x25, x23
   35d60:	cmp	x9, x8
   35d64:	b.le	35e90 <mpfr_zeta@@Base+0x8d8>
   35d68:	sub	x1, x23, x28
   35d6c:	add	x0, sp, #0x40
   35d70:	bl	cad0 <mpfr_init2@plt>
   35d74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35d78:	ldr	x1, [x0, #2704]
   35d7c:	add	x0, x0, #0xa90
   35d80:	blr	x1
   35d84:	add	x1, x24, x0
   35d88:	add	x0, sp, #0x40
   35d8c:	mov	w2, #0x3                   	// #3
   35d90:	bl	c3e0 <mpfr_cache@plt>
   35d94:	add	x0, sp, #0x40
   35d98:	add	x2, sp, #0x40
   35d9c:	mov	x1, x21
   35da0:	mov	w3, wzr
   35da4:	bl	be00 <mpfr_mul@plt>
   35da8:	add	x0, sp, #0x40
   35dac:	add	x1, sp, #0x40
   35db0:	mov	w2, #0x1                   	// #1
   35db4:	mov	w3, wzr
   35db8:	bl	c950 <mpfr_div_2ui@plt>
   35dbc:	sub	x0, x29, #0x68
   35dc0:	add	x1, sp, #0x40
   35dc4:	mov	w2, wzr
   35dc8:	bl	c4a0 <mpfr_sin@plt>
   35dcc:	add	x0, sp, #0x40
   35dd0:	bl	c110 <mpfr_clear@plt>
   35dd4:	sub	x0, x29, #0x28
   35dd8:	sub	x1, x29, #0x28
   35ddc:	sub	x2, x29, #0x68
   35de0:	mov	w3, wzr
   35de4:	bl	be00 <mpfr_mul@plt>
   35de8:	ldur	x8, [x29, #-24]
   35dec:	add	x9, x25, #0x105
   35df0:	cmp	x8, x9
   35df4:	b.lt	35c3c <mpfr_zeta@@Base+0x684>  // b.tstop
   35df8:	ldur	x8, [x29, #-40]
   35dfc:	ldur	x0, [x29, #-16]
   35e00:	sub	x9, x8, #0x1
   35e04:	add	x8, x8, #0x3e
   35e08:	cmp	x9, #0x0
   35e0c:	csel	x8, x8, x9, lt  // lt = tstop
   35e10:	asr	x8, x8, #6
   35e14:	add	x1, x8, #0x1
   35e18:	ldp	x3, x8, [sp, #8]
   35e1c:	sub	x2, x23, x8
   35e20:	bl	c3d0 <mpfr_round_p@plt>
   35e24:	cbnz	w0, 35f68 <mpfr_zeta@@Base+0x9b0>
   35e28:	b	35c3c <mpfr_zeta@@Base+0x684>
   35e2c:	mov	x0, x2
   35e30:	bl	cd50 <mpfr_allocate_func@plt>
   35e34:	mov	w10, #0x18                  	// #24
   35e38:	add	x8, x0, x28, lsl #3
   35e3c:	add	x9, x0, x28, lsl #4
   35e40:	madd	x10, x28, x10, x0
   35e44:	str	x0, [sp, #136]
   35e48:	stur	x0, [x29, #-16]
   35e4c:	stp	x8, x23, [x29, #-48]
   35e50:	stur	w27, [x29, #-32]
   35e54:	stp	x9, x23, [x29, #-80]
   35e58:	stur	w27, [x29, #-64]
   35e5c:	stp	x10, x23, [x29, #-112]
   35e60:	stur	w27, [x29, #-96]
   35e64:	stur	x23, [x29, #-136]
   35e68:	stur	w27, [x29, #-128]
   35e6c:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   35e70:	b	35af8 <mpfr_zeta@@Base+0x540>
   35e74:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   35e78:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   35e7c:	mov	w1, #0x290                 	// #656
   35e80:	add	x0, x0, #0x9b0
   35e84:	add	x2, x2, #0x9f9
   35e88:	bl	cb90 <mpfr_assert_fail@plt>
   35e8c:	b	35c4c <mpfr_zeta@@Base+0x694>
   35e90:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   35e94:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   35e98:	mov	w1, #0x281                 	// #641
   35e9c:	add	x0, x0, #0x9b0
   35ea0:	add	x2, x2, #0x9b7
   35ea4:	bl	cb90 <mpfr_assert_fail@plt>
   35ea8:	b	35d68 <mpfr_zeta@@Base+0x7b0>
   35eac:	sub	x0, x29, #0x48
   35eb0:	mov	w2, #0x2                   	// #2
   35eb4:	mov	x1, x21
   35eb8:	mov	w3, wzr
   35ebc:	bl	c950 <mpfr_div_2ui@plt>
   35ec0:	sub	x0, x29, #0x48
   35ec4:	sub	x1, x29, #0x48
   35ec8:	mov	w2, wzr
   35ecc:	bl	bf70 <mpfr_frac@plt>
   35ed0:	sub	x0, x29, #0x48
   35ed4:	mov	x1, #0xffffffffffffffff    	// #-1
   35ed8:	mov	x2, #0xffffffffffffffff    	// #-1
   35edc:	bl	c430 <mpfr_cmp_si_2exp@plt>
   35ee0:	cmp	w0, #0x1
   35ee4:	mov	w8, #0x1                   	// #1
   35ee8:	cneg	w2, w8, ge  // ge = tcont
   35eec:	mov	x0, x19
   35ef0:	mov	w1, w20
   35ef4:	bl	bff0 <mpfr_overflow@plt>
   35ef8:	ldr	w27, [sp, #44]
   35efc:	mov	w21, w0
   35f00:	orr	w27, w27, #0x2
   35f04:	b	35f84 <mpfr_zeta@@Base+0x9cc>
   35f08:	sub	x0, x29, #0x48
   35f0c:	mov	w2, #0x2                   	// #2
   35f10:	mov	x1, x21
   35f14:	mov	w3, wzr
   35f18:	bl	c950 <mpfr_div_2ui@plt>
   35f1c:	sub	x0, x29, #0x48
   35f20:	sub	x1, x29, #0x48
   35f24:	mov	w2, wzr
   35f28:	bl	bf70 <mpfr_frac@plt>
   35f2c:	sub	x0, x29, #0x48
   35f30:	mov	x1, #0xffffffffffffffff    	// #-1
   35f34:	mov	x2, #0xffffffffffffffff    	// #-1
   35f38:	bl	c430 <mpfr_cmp_si_2exp@plt>
   35f3c:	cmp	w0, #0x1
   35f40:	b.lt	35f54 <mpfr_zeta@@Base+0x99c>  // b.tstop
   35f44:	sub	x0, x29, #0x28
   35f48:	sub	x1, x29, #0x28
   35f4c:	mov	w2, w20
   35f50:	bl	be20 <mpfr_neg@plt>
   35f54:	sub	x0, x29, #0x28
   35f58:	sub	x1, x29, #0x28
   35f5c:	mov	w2, #0x1                   	// #1
   35f60:	mov	w3, w20
   35f64:	bl	c320 <mpfr_mul_2ui@plt>
   35f68:	ldur	w3, [x29, #-32]
   35f6c:	sub	x1, x29, #0x28
   35f70:	mov	x0, x19
   35f74:	mov	w2, w20
   35f78:	bl	c6f0 <mpfr_set4@plt>
   35f7c:	ldr	w27, [sp, #44]
   35f80:	mov	w21, w0
   35f84:	ldr	x1, [sp, #128]
   35f88:	ldp	x23, x22, [sp, #24]
   35f8c:	cbz	x1, 35f98 <mpfr_zeta@@Base+0x9e0>
   35f90:	ldr	x0, [sp, #136]
   35f94:	bl	cc80 <mpfr_free_func@plt>
   35f98:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35f9c:	ldr	x1, [x0, #2656]
   35fa0:	add	x0, x0, #0xa60
   35fa4:	blr	x1
   35fa8:	str	w27, [x24, x0]
   35fac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35fb0:	ldr	x1, [x0, #2592]
   35fb4:	add	x0, x0, #0xa20
   35fb8:	blr	x1
   35fbc:	str	x22, [x24, x0]
   35fc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35fc4:	ldr	x1, [x0, #2624]
   35fc8:	add	x0, x0, #0xa40
   35fcc:	blr	x1
   35fd0:	str	x23, [x24, x0]
   35fd4:	ldr	x8, [x19, #16]
   35fd8:	cmp	x8, x23
   35fdc:	b.gt	3605c <mpfr_zeta@@Base+0xaa4>
   35fe0:	cmp	x8, x22
   35fe4:	b.lt	3605c <mpfr_zeta@@Base+0xaa4>  // b.tstop
   35fe8:	cbz	w21, 36004 <mpfr_zeta@@Base+0xa4c>
   35fec:	orr	w8, w27, #0x8
   35ff0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   35ff4:	ldr	x1, [x0, #2656]
   35ff8:	add	x0, x0, #0xa60
   35ffc:	blr	x1
   36000:	str	w8, [x24, x0]
   36004:	mov	w0, w21
   36008:	add	sp, sp, #0x1a0
   3600c:	ldp	x20, x19, [sp, #80]
   36010:	ldp	x22, x21, [sp, #64]
   36014:	ldp	x24, x23, [sp, #48]
   36018:	ldp	x26, x25, [sp, #32]
   3601c:	ldp	x28, x27, [sp, #16]
   36020:	ldp	x29, x30, [sp], #96
   36024:	ret
   36028:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3602c:	cmp	x8, x9
   36030:	b.eq	36070 <mpfr_zeta@@Base+0xab8>  // b.none
   36034:	mov	x9, #0x2                   	// #2
   36038:	movk	x9, #0x8000, lsl #48
   3603c:	cmp	x8, x9
   36040:	b.eq	36098 <mpfr_zeta@@Base+0xae0>  // b.none
   36044:	mov	x1, #0xffffffffffffffff    	// #-1
   36048:	mov	x2, #0xffffffffffffffff    	// #-1
   3604c:	mov	x0, x19
   36050:	mov	w3, w20
   36054:	bl	bb40 <mpfr_set_si_2exp@plt>
   36058:	b	36090 <mpfr_zeta@@Base+0xad8>
   3605c:	mov	x0, x19
   36060:	mov	w1, w21
   36064:	mov	w2, w20
   36068:	bl	cb80 <mpfr_check_range@plt>
   3606c:	b	36090 <mpfr_zeta@@Base+0xad8>
   36070:	ldr	w8, [x21, #8]
   36074:	cmp	w8, #0x1
   36078:	b.lt	36098 <mpfr_zeta@@Base+0xae0>  // b.tstop
   3607c:	mov	w1, #0x1                   	// #1
   36080:	mov	x0, x19
   36084:	mov	x2, xzr
   36088:	mov	w3, wzr
   3608c:	bl	c640 <mpfr_set_ui_2exp@plt>
   36090:	mov	w21, w0
   36094:	b	36004 <mpfr_zeta@@Base+0xa4c>
   36098:	add	x8, x25, #0x103
   3609c:	str	x8, [x19, #16]
   360a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   360a4:	ldr	x1, [x0, #2656]
   360a8:	add	x0, x0, #0xa60
   360ac:	blr	x1
   360b0:	mrs	x8, tpidr_el0
   360b4:	ldr	w9, [x8, x0]
   360b8:	mov	w21, wzr
   360bc:	orr	w9, w9, #0x4
   360c0:	str	w9, [x8, x0]
   360c4:	b	36004 <mpfr_zeta@@Base+0xa4c>
   360c8:	bl	c940 <mpfr_abort_prec_max@plt>
   360cc:	stp	d15, d14, [sp, #-160]!
   360d0:	stp	d13, d12, [sp, #16]
   360d4:	stp	d11, d10, [sp, #32]
   360d8:	stp	d9, d8, [sp, #48]
   360dc:	stp	x29, x30, [sp, #64]
   360e0:	stp	x28, x27, [sp, #80]
   360e4:	stp	x26, x25, [sp, #96]
   360e8:	stp	x24, x23, [sp, #112]
   360ec:	stp	x22, x21, [sp, #128]
   360f0:	stp	x20, x19, [sp, #144]
   360f4:	mov	x29, sp
   360f8:	sub	sp, sp, #0x290
   360fc:	ldr	x8, [x1, #16]
   36100:	ldr	x23, [x0]
   36104:	ldr	x20, [x1]
   36108:	mov	x28, x1
   3610c:	mov	x21, x0
   36110:	cmp	x8, #0x4
   36114:	mov	w27, w2
   36118:	b.lt	36148 <mpfr_zeta@@Base+0xb90>  // b.tstop
   3611c:	sub	x9, x8, #0x1
   36120:	mov	w10, #0x1                   	// #1
   36124:	cmp	x8, #0x3f
   36128:	lsl	x8, x10, x9
   3612c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   36130:	csel	x2, x9, x8, gt
   36134:	cmp	x2, #0x1
   36138:	b.lt	36148 <mpfr_zeta@@Base+0xb90>  // b.tstop
   3613c:	add	x8, x23, #0x1
   36140:	cmp	x2, x8
   36144:	b.hi	36b1c <mpfr_zeta@@Base+0x1564>  // b.pmore
   36148:	subs	x19, x23, #0x1
   3614c:	b.eq	36af8 <mpfr_zeta@@Base+0x1540>  // b.none
   36150:	b.le	36b00 <mpfr_zeta@@Base+0x1548>
   36154:	clz	x8, x19
   36158:	mov	w9, #0x40                  	// #64
   3615c:	sub	x8, x9, x8
   36160:	ldr	x9, [x28, #16]
   36164:	mov	x26, #0xfffffffffffffeff    	// #-257
   36168:	add	x8, x23, x8
   3616c:	add	x0, sp, #0xf8
   36170:	cmp	x20, x9
   36174:	csel	x1, x20, x9, gt
   36178:	movk	x26, #0x7fff, lsl #48
   3617c:	add	x24, x8, #0xa
   36180:	bl	cad0 <mpfr_init2@plt>
   36184:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
   36188:	ldr	x2, [x2, #3944]
   3618c:	add	x0, sp, #0xf8
   36190:	mov	x1, x28
   36194:	mov	w3, wzr
   36198:	bl	bc20 <mpfr_sub@plt>
   3619c:	adrp	x10, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   361a0:	adrp	x11, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   361a4:	adrp	x12, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   361a8:	adrp	x13, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   361ac:	add	x8, sp, #0x68
   361b0:	ldr	d10, [x10, #2448]
   361b4:	ldr	d11, [x11, #2456]
   361b8:	ldr	d12, [x12, #2464]
   361bc:	ldr	d13, [x13, #2472]
   361c0:	sub	x9, x29, #0xb8
   361c4:	add	x10, x8, #0x10
   361c8:	mov	w14, #0x1                   	// #1
   361cc:	cmp	w27, #0x0
   361d0:	stp	xzr, x10, [sp, #104]
   361d4:	str	x10, [sp, #400]
   361d8:	add	x10, x8, #0x20
   361dc:	add	x9, x9, #0x10
   361e0:	mov	w25, #0x40                  	// #64
   361e4:	fmov	d9, #-1.000000000000000000e+00
   361e8:	add	x11, x8, #0x18
   361ec:	add	x8, x8, #0x28
   361f0:	str	x9, [sp, #64]
   361f4:	cinc	x9, x23, eq  // eq = none
   361f8:	stp	x10, x14, [sp, #336]
   361fc:	mov	w10, #0x40                  	// #64
   36200:	str	w14, [sp, #384]
   36204:	str	w14, [sp, #352]
   36208:	str	w14, [sp, #320]
   3620c:	str	x14, [sp, #280]
   36210:	str	w14, [sp, #288]
   36214:	str	x9, [sp, #72]
   36218:	stp	x11, x14, [sp, #368]
   3621c:	stp	x8, x14, [sp, #304]
   36220:	ldr	x8, [sp, #264]
   36224:	sub	x11, x24, #0x3
   36228:	sub	x9, x24, #0x2
   3622c:	cmp	x11, #0x0
   36230:	csel	x9, x9, x11, lt  // lt = tstop
   36234:	neg	x9, x9, asr #1
   36238:	cmp	x8, x9
   3623c:	str	x10, [sp, #48]
   36240:	str	x11, [sp, #80]
   36244:	b.le	362bc <mpfr_zeta@@Base+0xd04>
   36248:	scvtf	d14, x24
   3624c:	mov	x0, x28
   36250:	mov	w1, wzr
   36254:	fmul	d15, d14, d10
   36258:	bl	bde0 <mpfr_get_d@plt>
   3625c:	mov	v8.16b, v0.16b
   36260:	fadd	d15, d15, d11
   36264:	bl	bd80 <__gmpfr_floor_log2@plt>
   36268:	scvtf	d0, x0
   3626c:	fmul	d0, d0, d10
   36270:	adrp	x23, 70000 <__gmpfr_l2b@@Base+0x2e0>
   36274:	fsub	d0, d12, d0
   36278:	ldr	x23, [x23, #3944]
   3627c:	fmul	d0, d8, d0
   36280:	fadd	d0, d15, d0
   36284:	fcmp	d0, #0.0
   36288:	b.ls	3630c <mpfr_zeta@@Base+0xd54>  // b.plast
   3628c:	fcvtzs	w8, d0
   36290:	cmp	w8, #0x0
   36294:	cinc	w8, w8, lt  // lt = tstop
   36298:	asr	w8, w8, #1
   3629c:	add	w8, w8, #0x1
   362a0:	scvtf	d0, w8
   362a4:	fadd	d0, d0, d0
   362a8:	fadd	d0, d8, d0
   362ac:	fadd	d0, d0, d9
   362b0:	fdiv	d8, d0, d13
   362b4:	str	x8, [sp, #88]
   362b8:	b	36320 <mpfr_zeta@@Base+0xd68>
   362bc:	adrp	x23, 70000 <__gmpfr_l2b@@Base+0x2e0>
   362c0:	add	x8, x24, #0x3
   362c4:	ldr	x23, [x23, #3944]
   362c8:	cmp	x8, x20
   362cc:	csel	x19, x8, x20, gt
   362d0:	cmp	x19, x26
   362d4:	b.gt	36b40 <mpfr_zeta@@Base+0x1588>
   362d8:	sub	x8, x19, #0x1
   362dc:	add	x9, x19, #0x3e
   362e0:	cmp	x8, #0x0
   362e4:	ldr	x1, [sp, #104]
   362e8:	csel	x8, x9, x8, lt  // lt = tstop
   362ec:	asr	x8, x8, #6
   362f0:	add	x22, x8, #0x1
   362f4:	lsl	x2, x22, #5
   362f8:	str	x2, [sp, #104]
   362fc:	cbz	x1, 363e4 <mpfr_zeta@@Base+0xe2c>
   36300:	ldr	x0, [sp, #112]
   36304:	bl	c260 <mpfr_reallocate_func@plt>
   36308:	b	363ec <mpfr_zeta@@Base+0xe34>
   3630c:	fadd	d0, d14, d9
   36310:	fdiv	d0, d0, d8
   36314:	bl	bbf0 <__gmpfr_ceil_exp2@plt>
   36318:	mov	v8.16b, v0.16b
   3631c:	str	xzr, [sp, #88]
   36320:	subs	x19, x24, #0x1
   36324:	b.eq	36a4c <mpfr_zeta@@Base+0x1494>  // b.none
   36328:	b.le	36a54 <mpfr_zeta@@Base+0x149c>
   3632c:	clz	x8, x19
   36330:	sub	w8, w25, w8
   36334:	add	w8, w8, w8, lsl #1
   36338:	ldr	x19, [sp, #88]
   3633c:	cmp	w8, #0x0
   36340:	cinc	w8, w8, lt  // lt = tstop
   36344:	asr	w8, w8, #1
   36348:	add	w8, w8, #0x4
   3634c:	add	w9, w19, #0x1
   36350:	add	x8, x24, w8, sxtw
   36354:	cmp	x8, x20
   36358:	sbfiz	x0, x9, #5, #32
   3635c:	csel	x25, x20, x8, lt  // lt = tstop
   36360:	str	x9, [sp, #56]
   36364:	str	x0, [sp, #24]
   36368:	bl	cd50 <mpfr_allocate_func@plt>
   3636c:	cmp	w19, #0x1
   36370:	str	x0, [sp, #96]
   36374:	b.lt	363a4 <mpfr_zeta@@Base+0xdec>  // b.tstop
   36378:	ldr	x8, [sp, #56]
   3637c:	ldr	x9, [sp, #96]
   36380:	mov	w8, w8
   36384:	add	x22, x9, #0x20
   36388:	sub	x19, x8, #0x1
   3638c:	mov	x0, x22
   36390:	mov	x1, x25
   36394:	bl	cad0 <mpfr_init2@plt>
   36398:	subs	x19, x19, #0x1
   3639c:	add	x22, x22, #0x20
   363a0:	b.ne	3638c <mpfr_zeta@@Base+0xdd4>  // b.any
   363a4:	cmp	x25, x26
   363a8:	b.gt	36b40 <mpfr_zeta@@Base+0x1588>
   363ac:	sub	x8, x25, #0x1
   363b0:	add	x9, x25, #0x3e
   363b4:	cmp	x8, #0x0
   363b8:	ldr	x1, [sp, #104]
   363bc:	csel	x8, x9, x8, lt  // lt = tstop
   363c0:	asr	x8, x8, #6
   363c4:	add	x19, x8, #0x1
   363c8:	lsl	x2, x19, #5
   363cc:	str	x2, [sp, #104]
   363d0:	stp	x24, x20, [sp, #32]
   363d4:	cbz	x1, 36478 <mpfr_zeta@@Base+0xec0>
   363d8:	ldr	x0, [sp, #112]
   363dc:	bl	c260 <mpfr_reallocate_func@plt>
   363e0:	b	36480 <mpfr_zeta@@Base+0xec8>
   363e4:	mov	x0, x2
   363e8:	bl	cd50 <mpfr_allocate_func@plt>
   363ec:	mov	w10, #0x18                  	// #24
   363f0:	str	x0, [sp, #112]
   363f4:	str	x0, [sp, #400]
   363f8:	mov	w11, #0x1                   	// #1
   363fc:	add	x8, x0, x22, lsl #3
   36400:	add	x9, x0, x22, lsl #4
   36404:	madd	x10, x22, x10, x0
   36408:	add	x0, sp, #0x138
   3640c:	add	x2, sp, #0xf8
   36410:	mov	x1, x23
   36414:	mov	w3, wzr
   36418:	str	w11, [sp, #384]
   3641c:	str	w11, [sp, #352]
   36420:	str	x19, [sp, #280]
   36424:	str	w11, [sp, #320]
   36428:	stp	x8, x19, [sp, #368]
   3642c:	stp	x9, x19, [sp, #336]
   36430:	stp	x10, x19, [sp, #304]
   36434:	str	w11, [sp, #288]
   36438:	bl	c670 <mpfr_div@plt>
   3643c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36440:	ldr	x1, [x0, #2688]
   36444:	add	x0, x0, #0xa80
   36448:	blr	x1
   3644c:	mrs	x8, tpidr_el0
   36450:	add	x1, x8, x0
   36454:	add	x0, sp, #0x118
   36458:	mov	w2, wzr
   3645c:	bl	c3e0 <mpfr_cache@plt>
   36460:	add	x0, sp, #0x138
   36464:	add	x1, sp, #0x138
   36468:	add	x2, sp, #0x118
   3646c:	mov	w3, wzr
   36470:	bl	c240 <mpfr_add@plt>
   36474:	b	369ec <mpfr_zeta@@Base+0x1434>
   36478:	mov	x0, x2
   3647c:	bl	cd50 <mpfr_allocate_func@plt>
   36480:	ldr	x12, [sp, #88]
   36484:	mov	w10, #0x18                  	// #24
   36488:	add	x8, x0, x19, lsl #3
   3648c:	add	x9, x0, x19, lsl #4
   36490:	madd	x10, x19, x10, x0
   36494:	mov	w11, #0x1                   	// #1
   36498:	cmp	w12, #0x1
   3649c:	str	x0, [sp, #112]
   364a0:	str	x0, [sp, #400]
   364a4:	stp	x8, x25, [sp, #368]
   364a8:	str	w11, [sp, #384]
   364ac:	stp	x9, x25, [sp, #336]
   364b0:	str	w11, [sp, #352]
   364b4:	stp	x10, x25, [sp, #304]
   364b8:	str	w11, [sp, #320]
   364bc:	str	x25, [sp, #280]
   364c0:	str	w11, [sp, #288]
   364c4:	b.lt	36614 <mpfr_zeta@@Base+0x105c>  // b.tstop
   364c8:	ldr	x22, [sp, #96]
   364cc:	str	x28, [sp]
   364d0:	str	w27, [sp, #12]
   364d4:	str	x21, [sp, #16]
   364d8:	ldr	x1, [x22, #32]!
   364dc:	sub	x0, x29, #0xf8
   364e0:	bl	cad0 <mpfr_init2@plt>
   364e4:	mov	w2, #0xc                   	// #12
   364e8:	mov	x0, x22
   364ec:	mov	x1, x23
   364f0:	mov	w3, wzr
   364f4:	bl	ccc0 <mpfr_div_ui@plt>
   364f8:	ldr	x8, [sp, #88]
   364fc:	cmp	w8, #0x1
   36500:	b.eq	365ec <mpfr_zeta@@Base+0x1034>  // b.none
   36504:	ldr	x8, [sp, #56]
   36508:	mov	x21, xzr
   3650c:	mov	w23, #0xc                   	// #12
   36510:	mov	w19, #0x2                   	// #2
   36514:	mov	w25, w8
   36518:	ldr	x8, [sp, #96]
   3651c:	mov	w27, #0x2                   	// #2
   36520:	add	x26, x8, #0x40
   36524:	sub	x1, x27, #0x1
   36528:	sub	x0, x29, #0xf8
   3652c:	mov	x2, xzr
   36530:	mov	w3, wzr
   36534:	bl	c640 <mpfr_set_ui_2exp@plt>
   36538:	mov	w8, #0xc                   	// #12
   3653c:	orr	w9, wzr, #0x6
   36540:	madd	w2, w27, w8, w9
   36544:	sub	x0, x29, #0xf8
   36548:	sub	x1, x29, #0xf8
   3654c:	mov	w3, wzr
   36550:	bl	ccc0 <mpfr_div_ui@plt>
   36554:	cmp	x27, #0x3
   36558:	b.cc	365ac <mpfr_zeta@@Base+0xff4>  // b.lo, b.ul, b.last
   3655c:	mov	w20, w19
   36560:	mov	w28, w23
   36564:	mov	x22, x26
   36568:	mov	x24, x21
   3656c:	mul	w8, w28, w20
   36570:	sxtw	x2, w8
   36574:	sub	x0, x29, #0xf8
   36578:	sub	x1, x29, #0xf8
   3657c:	mov	w3, wzr
   36580:	bl	ccc0 <mpfr_div_ui@plt>
   36584:	sub	x0, x29, #0xf8
   36588:	sub	x1, x29, #0xf8
   3658c:	mov	x2, x22
   36590:	mov	w3, wzr
   36594:	bl	c240 <mpfr_add@plt>
   36598:	sub	x24, x24, #0x1
   3659c:	add	x22, x22, #0x20
   365a0:	sub	w28, w28, #0x8
   365a4:	sub	w20, w20, #0x2
   365a8:	cbnz	x24, 3656c <mpfr_zeta@@Base+0xfb4>
   365ac:	ldr	x8, [sp, #96]
   365b0:	sub	x1, x29, #0xf8
   365b4:	mov	w2, #0x18                  	// #24
   365b8:	mov	w3, wzr
   365bc:	add	x22, x8, x27, lsl #5
   365c0:	mov	x0, x22
   365c4:	bl	ccc0 <mpfr_div_ui@plt>
   365c8:	ldr	w8, [x22, #8]
   365cc:	add	x27, x27, #0x1
   365d0:	add	x21, x21, #0x1
   365d4:	add	w23, w23, #0x8
   365d8:	cmp	x27, x25
   365dc:	neg	w8, w8
   365e0:	add	w19, w19, #0x2
   365e4:	str	w8, [x22, #8]
   365e8:	b.ne	36524 <mpfr_zeta@@Base+0xf6c>  // b.any
   365ec:	sub	x0, x29, #0xf8
   365f0:	bl	c110 <mpfr_clear@plt>
   365f4:	adrp	x23, 70000 <__gmpfr_l2b@@Base+0x2e0>
   365f8:	ldr	x25, [sp, #312]
   365fc:	ldr	x21, [sp, #16]
   36600:	ldr	w27, [sp, #12]
   36604:	ldr	x28, [sp]
   36608:	ldr	x23, [x23, #3944]
   3660c:	mov	x26, #0xfffffffffffffeff    	// #-257
   36610:	movk	x26, #0x7fff, lsl #48
   36614:	cmp	x25, x26
   36618:	b.gt	36b40 <mpfr_zeta@@Base+0x1588>
   3661c:	sub	x8, x25, #0x1
   36620:	add	x9, x25, #0x3e
   36624:	cmp	x8, #0x0
   36628:	csel	x8, x9, x8, lt  // lt = tstop
   3662c:	fcvtzs	w19, d8
   36630:	asr	x8, x8, #6
   36634:	add	w24, w19, #0x1
   36638:	cmp	x25, #0x201
   3663c:	add	x20, x8, #0x1
   36640:	b.lt	36654 <mpfr_zeta@@Base+0x109c>  // b.tstop
   36644:	lsl	x22, x20, #4
   36648:	mov	x0, x22
   3664c:	bl	cd50 <mpfr_allocate_func@plt>
   36650:	b	3665c <mpfr_zeta@@Base+0x10a4>
   36654:	ldr	x0, [sp, #64]
   36658:	mov	x22, xzr
   3665c:	stp	x22, x0, [x29, #-184]
   36660:	stp	x0, x25, [x29, #-224]
   36664:	mov	w9, #0x1                   	// #1
   36668:	add	x8, x0, x20, lsl #3
   3666c:	sub	x0, x29, #0xd8
   36670:	mov	x1, x28
   36674:	mov	w2, wzr
   36678:	stur	x25, [x29, #-248]
   3667c:	stur	w9, [x29, #-240]
   36680:	stur	x8, [x29, #-192]
   36684:	mov	w20, #0x1                   	// #1
   36688:	stur	w9, [x29, #-208]
   3668c:	bl	be20 <mpfr_neg@plt>
   36690:	sxtw	x25, w24
   36694:	sub	x0, x29, #0xf8
   36698:	sub	x2, x29, #0xd8
   3669c:	mov	x1, x25
   366a0:	mov	w3, wzr
   366a4:	bl	ca60 <mpfr_ui_pow@plt>
   366a8:	sub	x0, x29, #0xf8
   366ac:	sub	x1, x29, #0xf8
   366b0:	mov	w2, #0x1                   	// #1
   366b4:	mov	w3, wzr
   366b8:	bl	c950 <mpfr_div_2ui@plt>
   366bc:	ldur	w3, [x29, #-240]
   366c0:	add	x0, sp, #0x138
   366c4:	sub	x1, x29, #0xf8
   366c8:	mov	w2, wzr
   366cc:	bl	c6f0 <mpfr_set4@plt>
   366d0:	cmp	w19, #0x2
   366d4:	b.lt	36710 <mpfr_zeta@@Base+0x1158>  // b.tstop
   366d8:	add	x19, x25, #0x1
   366dc:	sub	x1, x19, #0x2
   366e0:	sub	x0, x29, #0xf8
   366e4:	sub	x2, x29, #0xd8
   366e8:	mov	w3, wzr
   366ec:	bl	ca60 <mpfr_ui_pow@plt>
   366f0:	add	x0, sp, #0x138
   366f4:	add	x1, sp, #0x138
   366f8:	sub	x2, x29, #0xf8
   366fc:	mov	w3, wzr
   36700:	bl	c240 <mpfr_add@plt>
   36704:	sub	x19, x19, #0x1
   36708:	cmp	x19, #0x3
   3670c:	b.gt	366dc <mpfr_zeta@@Base+0x1124>
   36710:	add	x0, sp, #0x138
   36714:	add	x1, sp, #0x138
   36718:	mov	x2, x23
   3671c:	mov	w3, wzr
   36720:	bl	c240 <mpfr_add@plt>
   36724:	ldur	x1, [x29, #-184]
   36728:	cbz	x1, 36734 <mpfr_zeta@@Base+0x117c>
   3672c:	ldur	x0, [x29, #-176]
   36730:	bl	cc80 <mpfr_free_func@plt>
   36734:	ldr	x8, [sp, #88]
   36738:	cbz	w8, 3677c <mpfr_zeta@@Base+0x11c4>
   3673c:	ldr	x19, [sp, #376]
   36740:	cmp	x19, x26
   36744:	b.gt	36b40 <mpfr_zeta@@Base+0x1588>
   36748:	sub	x8, x19, #0x1
   3674c:	add	x9, x19, #0x3e
   36750:	cmp	x8, #0x0
   36754:	csel	x8, x9, x8, lt  // lt = tstop
   36758:	asr	x8, x8, #6
   3675c:	add	x20, x8, #0x1
   36760:	add	x8, x20, x20, lsl #1
   36764:	cmp	x8, #0x11
   36768:	b.lt	3678c <mpfr_zeta@@Base+0x11d4>  // b.tstop
   3676c:	lsl	x22, x8, #3
   36770:	mov	x0, x22
   36774:	bl	cd50 <mpfr_allocate_func@plt>
   36778:	b	36794 <mpfr_zeta@@Base+0x11dc>
   3677c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   36780:	str	x8, [sp, #392]
   36784:	str	w20, [sp, #384]
   36788:	b	36940 <mpfr_zeta@@Base+0x1388>
   3678c:	ldr	x0, [sp, #64]
   36790:	mov	x22, xzr
   36794:	stur	x19, [x29, #-248]
   36798:	stp	x0, x19, [x29, #-224]
   3679c:	add	x8, x0, x20, lsl #3
   367a0:	stur	x19, [x29, #-40]
   367a4:	ldr	x19, [sp, #88]
   367a8:	stur	x8, [x29, #-192]
   367ac:	ldr	x8, [sp, #96]
   367b0:	mov	w10, #0x1                   	// #1
   367b4:	stur	w10, [x29, #-240]
   367b8:	stur	w10, [x29, #-208]
   367bc:	add	x9, x0, x20, lsl #4
   367c0:	stur	w10, [x29, #-32]
   367c4:	sxtw	x10, w19
   367c8:	stp	x22, x0, [x29, #-184]
   367cc:	stur	x9, [x29, #-16]
   367d0:	add	x22, x8, x10, lsl #5
   367d4:	ldr	w3, [x22, #8]
   367d8:	sub	x0, x29, #0xd8
   367dc:	mov	x1, x22
   367e0:	mov	w2, wzr
   367e4:	bl	c6f0 <mpfr_set4@plt>
   367e8:	cmp	w19, #0x2
   367ec:	b.lt	368c8 <mpfr_zeta@@Base+0x1310>  // b.tstop
   367f0:	ldr	x9, [sp, #88]
   367f4:	mul	w26, w24, w24
   367f8:	sub	x22, x22, #0x20
   367fc:	lsl	w8, w9, #1
   36800:	mov	w9, w9
   36804:	sxtw	x8, w8
   36808:	sub	x19, x9, #0x1
   3680c:	sub	x24, x8, #0x3
   36810:	add	x2, x24, #0x1
   36814:	sub	x0, x29, #0xf8
   36818:	mov	x1, x28
   3681c:	mov	w3, wzr
   36820:	bl	c2d0 <mpfr_add_ui@plt>
   36824:	sub	x0, x29, #0xd8
   36828:	sub	x1, x29, #0xd8
   3682c:	sub	x2, x29, #0xf8
   36830:	mov	w3, wzr
   36834:	bl	be00 <mpfr_mul@plt>
   36838:	sub	x0, x29, #0xf8
   3683c:	mov	x1, x28
   36840:	mov	x2, x24
   36844:	mov	w3, wzr
   36848:	bl	c2d0 <mpfr_add_ui@plt>
   3684c:	sub	x0, x29, #0xd8
   36850:	sub	x1, x29, #0xd8
   36854:	sub	x2, x29, #0xf8
   36858:	mov	w3, wzr
   3685c:	bl	be00 <mpfr_mul@plt>
   36860:	sub	x0, x29, #0xd8
   36864:	sub	x1, x29, #0xd8
   36868:	mov	x2, x26
   3686c:	mov	w3, wzr
   36870:	bl	ccc0 <mpfr_div_ui@plt>
   36874:	sub	x0, x29, #0xd8
   36878:	sub	x1, x29, #0xd8
   3687c:	mov	x2, x22
   36880:	mov	w3, wzr
   36884:	bl	c240 <mpfr_add@plt>
   36888:	sub	x0, x29, #0xd8
   3688c:	mov	x1, x22
   36890:	bl	ca00 <mpfr_cmpabs@plt>
   36894:	cmp	w0, #0x1
   36898:	b.ge	368b0 <mpfr_zeta@@Base+0x12f8>  // b.tcont
   3689c:	sub	x19, x19, #0x1
   368a0:	sub	x22, x22, #0x20
   368a4:	sub	x24, x24, #0x2
   368a8:	cbnz	x19, 36810 <mpfr_zeta@@Base+0x1258>
   368ac:	b	368c8 <mpfr_zeta@@Base+0x1310>
   368b0:	ldr	w3, [x22, #8]
   368b4:	sub	x0, x29, #0xd8
   368b8:	mov	x1, x22
   368bc:	mov	w2, wzr
   368c0:	bl	c6f0 <mpfr_set4@plt>
   368c4:	b	3689c <mpfr_zeta@@Base+0x12e4>
   368c8:	sub	x0, x29, #0xd8
   368cc:	sub	x1, x29, #0xd8
   368d0:	mov	x2, x28
   368d4:	mov	w3, wzr
   368d8:	bl	be00 <mpfr_mul@plt>
   368dc:	sub	x0, x29, #0xf8
   368e0:	mov	x1, x28
   368e4:	mov	x2, x23
   368e8:	mov	w3, wzr
   368ec:	bl	c240 <mpfr_add@plt>
   368f0:	sub	x0, x29, #0xf8
   368f4:	sub	x1, x29, #0xf8
   368f8:	mov	w2, wzr
   368fc:	bl	be20 <mpfr_neg@plt>
   36900:	sub	x0, x29, #0x28
   36904:	sub	x2, x29, #0xf8
   36908:	mov	x1, x25
   3690c:	mov	w3, wzr
   36910:	bl	ca60 <mpfr_ui_pow@plt>
   36914:	add	x0, sp, #0x178
   36918:	sub	x1, x29, #0xd8
   3691c:	sub	x2, x29, #0x28
   36920:	mov	w3, wzr
   36924:	bl	be00 <mpfr_mul@plt>
   36928:	ldur	x1, [x29, #-184]
   3692c:	mov	x26, #0xfffffffffffffeff    	// #-257
   36930:	movk	x26, #0x7fff, lsl #48
   36934:	cbz	x1, 36940 <mpfr_zeta@@Base+0x1388>
   36938:	ldur	x0, [x29, #-176]
   3693c:	bl	cc80 <mpfr_free_func@plt>
   36940:	add	x0, sp, #0x158
   36944:	add	x2, sp, #0xf8
   36948:	mov	x1, x23
   3694c:	mov	w3, wzr
   36950:	bl	c670 <mpfr_div@plt>
   36954:	add	x0, sp, #0x118
   36958:	add	x2, sp, #0xf8
   3695c:	mov	x1, x25
   36960:	mov	w3, wzr
   36964:	bl	ca60 <mpfr_ui_pow@plt>
   36968:	add	x0, sp, #0x158
   3696c:	add	x1, sp, #0x158
   36970:	add	x2, sp, #0x118
   36974:	mov	w3, wzr
   36978:	bl	c670 <mpfr_div@plt>
   3697c:	add	x0, sp, #0x138
   36980:	add	x1, sp, #0x138
   36984:	add	x2, sp, #0x158
   36988:	mov	w3, wzr
   3698c:	bl	c240 <mpfr_add@plt>
   36990:	add	x0, sp, #0x138
   36994:	add	x1, sp, #0x138
   36998:	add	x2, sp, #0x178
   3699c:	mov	w3, wzr
   369a0:	bl	c240 <mpfr_add@plt>
   369a4:	ldr	x8, [sp, #88]
   369a8:	ldp	x24, x20, [sp, #32]
   369ac:	cmp	w8, #0x1
   369b0:	b.lt	369dc <mpfr_zeta@@Base+0x1424>  // b.tstop
   369b4:	ldr	x8, [sp, #56]
   369b8:	ldr	x9, [sp, #96]
   369bc:	mov	w8, w8
   369c0:	add	x22, x9, #0x20
   369c4:	sub	x19, x8, #0x1
   369c8:	mov	x0, x22
   369cc:	bl	c110 <mpfr_clear@plt>
   369d0:	subs	x19, x19, #0x1
   369d4:	add	x22, x22, #0x20
   369d8:	b.ne	369c8 <mpfr_zeta@@Base+0x1410>  // b.any
   369dc:	ldr	x0, [sp, #96]
   369e0:	ldr	x1, [sp, #24]
   369e4:	bl	cc80 <mpfr_free_func@plt>
   369e8:	mov	w25, #0x40                  	// #64
   369ec:	ldr	x8, [sp, #328]
   369f0:	add	x9, x26, #0x105
   369f4:	cmp	x8, x9
   369f8:	b.lt	36a28 <mpfr_zeta@@Base+0x1470>  // b.tstop
   369fc:	ldr	x8, [sp, #312]
   36a00:	ldr	x0, [sp, #336]
   36a04:	ldp	x3, x2, [sp, #72]
   36a08:	sub	x9, x8, #0x1
   36a0c:	add	x8, x8, #0x3e
   36a10:	cmp	x9, #0x0
   36a14:	csel	x8, x8, x9, lt  // lt = tstop
   36a18:	asr	x8, x8, #6
   36a1c:	add	x1, x8, #0x1
   36a20:	bl	c3d0 <mpfr_round_p@plt>
   36a24:	cbnz	w0, 36a94 <mpfr_zeta@@Base+0x14dc>
   36a28:	ldr	x9, [sp, #48]
   36a2c:	sub	x8, x26, x24
   36a30:	cmp	x9, x8
   36a34:	b.gt	36a70 <mpfr_zeta@@Base+0x14b8>
   36a38:	add	x24, x24, x9
   36a3c:	cmp	x24, #0x0
   36a40:	cinc	x8, x24, lt  // lt = tstop
   36a44:	asr	x10, x8, #1
   36a48:	b	36220 <mpfr_zeta@@Base+0xc68>
   36a4c:	mov	w8, wzr
   36a50:	b	36334 <mpfr_zeta@@Base+0xd7c>
   36a54:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   36a58:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   36a5c:	mov	w1, #0xef                  	// #239
   36a60:	add	x0, x0, #0x9b0
   36a64:	add	x2, x2, #0xa4c
   36a68:	bl	cb90 <mpfr_assert_fail@plt>
   36a6c:	b	3632c <mpfr_zeta@@Base+0xd74>
   36a70:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   36a74:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   36a78:	mov	w1, #0x112                 	// #274
   36a7c:	add	x0, x0, #0x9b0
   36a80:	add	x2, x2, #0xa54
   36a84:	mov	x19, x9
   36a88:	bl	cb90 <mpfr_assert_fail@plt>
   36a8c:	mov	x9, x19
   36a90:	b	36a38 <mpfr_zeta@@Base+0x1480>
   36a94:	ldr	w3, [sp, #320]
   36a98:	add	x1, sp, #0x138
   36a9c:	mov	x0, x21
   36aa0:	mov	w2, w27
   36aa4:	bl	c6f0 <mpfr_set4@plt>
   36aa8:	ldr	x1, [sp, #104]
   36aac:	mov	w22, w0
   36ab0:	cbz	x1, 36abc <mpfr_zeta@@Base+0x1504>
   36ab4:	ldr	x0, [sp, #112]
   36ab8:	bl	cc80 <mpfr_free_func@plt>
   36abc:	add	x0, sp, #0xf8
   36ac0:	bl	c110 <mpfr_clear@plt>
   36ac4:	mov	w0, w22
   36ac8:	add	sp, sp, #0x290
   36acc:	ldp	x20, x19, [sp, #144]
   36ad0:	ldp	x22, x21, [sp, #128]
   36ad4:	ldp	x24, x23, [sp, #112]
   36ad8:	ldp	x26, x25, [sp, #96]
   36adc:	ldp	x28, x27, [sp, #80]
   36ae0:	ldp	x29, x30, [sp, #64]
   36ae4:	ldp	d9, d8, [sp, #48]
   36ae8:	ldp	d11, d10, [sp, #32]
   36aec:	ldp	d13, d12, [sp, #16]
   36af0:	ldp	d15, d14, [sp], #160
   36af4:	ret
   36af8:	mov	x8, xzr
   36afc:	b	36160 <mpfr_zeta@@Base+0xba8>
   36b00:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   36b04:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   36b08:	add	x0, x0, #0x9b0
   36b0c:	add	x2, x2, #0xa40
   36b10:	mov	w1, #0xb6                  	// #182
   36b14:	bl	cb90 <mpfr_assert_fail@plt>
   36b18:	b	36154 <mpfr_zeta@@Base+0xb9c>
   36b1c:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   36b20:	ldr	x1, [x1, #3944]
   36b24:	mov	w3, #0x1                   	// #1
   36b28:	mov	x0, x21
   36b2c:	mov	w4, w27
   36b30:	bl	c590 <mpfr_round_near_x@plt>
   36b34:	mov	w22, w0
   36b38:	cbnz	w0, 36ac4 <mpfr_zeta@@Base+0x150c>
   36b3c:	b	36148 <mpfr_zeta@@Base+0xb90>
   36b40:	bl	c940 <mpfr_abort_prec_max@plt>
   36b44:	sub	sp, sp, #0x50
   36b48:	stp	x22, x21, [sp, #48]
   36b4c:	mov	x21, x0
   36b50:	mov	x0, sp
   36b54:	stp	x29, x30, [sp, #16]
   36b58:	stp	x24, x23, [sp, #32]
   36b5c:	stp	x20, x19, [sp, #64]
   36b60:	add	x29, sp, #0x10
   36b64:	mov	w20, w5
   36b68:	mov	x19, x4
   36b6c:	mov	x22, x3
   36b70:	mov	x24, x2
   36b74:	mov	x23, x1
   36b78:	bl	c040 <mpfr_mpz_init@plt>
   36b7c:	mov	x0, sp
   36b80:	mov	w2, #0x3                   	// #3
   36b84:	mov	x1, x24
   36b88:	bl	beb0 <mpfr_get_z@plt>
   36b8c:	mov	x0, sp
   36b90:	mov	x1, xzr
   36b94:	bl	c080 <__gmpz_tstbit@plt>
   36b98:	cbz	w0, 36bd8 <mpfr_zeta@@Base+0x1620>
   36b9c:	cmp	w20, #0x3
   36ba0:	b.ne	36bac <mpfr_zeta@@Base+0x15f4>  // b.any
   36ba4:	mov	x0, x19
   36ba8:	bl	c1c0 <mpfr_nextabove@plt>
   36bac:	cmp	w20, #0x3
   36bb0:	mov	w8, #0x2                   	// #2
   36bb4:	csel	w8, w8, w20, eq  // eq = none
   36bb8:	cmp	w20, #0x2
   36bbc:	mov	w9, #0x3                   	// #3
   36bc0:	csel	w3, w9, w8, eq  // eq = none
   36bc4:	mov	x0, x22
   36bc8:	mov	x1, x19
   36bcc:	mov	x2, x24
   36bd0:	bl	be00 <mpfr_mul@plt>
   36bd4:	b	36bfc <mpfr_zeta@@Base+0x1644>
   36bd8:	mov	x0, x22
   36bdc:	mov	x1, x19
   36be0:	mov	x2, x24
   36be4:	mov	w3, w20
   36be8:	bl	be00 <mpfr_mul@plt>
   36bec:	cmp	w20, #0x3
   36bf0:	b.ne	36bfc <mpfr_zeta@@Base+0x1644>  // b.any
   36bf4:	mov	x0, x19
   36bf8:	bl	c1c0 <mpfr_nextabove@plt>
   36bfc:	mov	w2, #0x1                   	// #1
   36c00:	mov	x0, x22
   36c04:	mov	x1, x22
   36c08:	mov	w3, wzr
   36c0c:	bl	c950 <mpfr_div_2ui@plt>
   36c10:	mov	x0, sp
   36c14:	mov	w1, #0x1                   	// #1
   36c18:	bl	c080 <__gmpz_tstbit@plt>
   36c1c:	cbz	w0, 36c5c <mpfr_zeta@@Base+0x16a4>
   36c20:	cmp	w20, #0x3
   36c24:	mov	w8, #0x2                   	// #2
   36c28:	csel	w8, w8, w20, eq  // eq = none
   36c2c:	cmp	w20, #0x2
   36c30:	mov	w9, #0x3                   	// #3
   36c34:	csel	w2, w9, w8, eq  // eq = none
   36c38:	mov	x0, x22
   36c3c:	mov	x1, x22
   36c40:	bl	c4a0 <mpfr_sin@plt>
   36c44:	mov	w3, #0x1                   	// #1
   36c48:	mov	x0, x22
   36c4c:	mov	x1, x22
   36c50:	mov	w2, wzr
   36c54:	bl	c6f0 <mpfr_set4@plt>
   36c58:	b	36c6c <mpfr_zeta@@Base+0x16b4>
   36c5c:	mov	x0, x22
   36c60:	mov	x1, x22
   36c64:	mov	w2, w20
   36c68:	bl	c4a0 <mpfr_sin@plt>
   36c6c:	mov	x0, sp
   36c70:	bl	c210 <mpfr_mpz_clear@plt>
   36c74:	mov	x0, x21
   36c78:	mov	x1, x23
   36c7c:	mov	w2, w20
   36c80:	bl	360cc <mpfr_zeta@@Base+0xb14>
   36c84:	mov	x0, x21
   36c88:	mov	x1, x21
   36c8c:	mov	x2, x22
   36c90:	mov	w3, w20
   36c94:	bl	be00 <mpfr_mul@plt>
   36c98:	mov	x0, x21
   36c9c:	mov	x1, x21
   36ca0:	mov	w2, w20
   36ca4:	bl	c130 <mpfr_log@plt>
   36ca8:	mov	x0, x22
   36cac:	mov	x1, x23
   36cb0:	mov	w2, w20
   36cb4:	bl	c650 <mpfr_lngamma@plt>
   36cb8:	mov	x0, x21
   36cbc:	mov	x1, x21
   36cc0:	mov	x2, x22
   36cc4:	mov	w3, w20
   36cc8:	bl	c240 <mpfr_add@plt>
   36ccc:	cmp	w20, #0x3
   36cd0:	mov	w8, #0x2                   	// #2
   36cd4:	csel	w8, w8, w20, eq  // eq = none
   36cd8:	cmp	w20, #0x2
   36cdc:	mov	w9, #0x3                   	// #3
   36ce0:	csel	w24, w9, w8, eq  // eq = none
   36ce4:	mov	w2, #0x1                   	// #1
   36ce8:	mov	x0, x22
   36cec:	mov	x1, x19
   36cf0:	mov	w3, w24
   36cf4:	bl	c320 <mpfr_mul_2ui@plt>
   36cf8:	mov	x0, x22
   36cfc:	mov	x1, x22
   36d00:	mov	w2, w24
   36d04:	bl	c130 <mpfr_log@plt>
   36d08:	mov	x0, x22
   36d0c:	mov	x1, x22
   36d10:	mov	x2, x23
   36d14:	mov	w3, w24
   36d18:	bl	be00 <mpfr_mul@plt>
   36d1c:	mov	x0, x21
   36d20:	mov	x1, x21
   36d24:	mov	x2, x22
   36d28:	mov	w3, w20
   36d2c:	bl	bc20 <mpfr_sub@plt>
   36d30:	mov	x0, x21
   36d34:	mov	x1, x21
   36d38:	mov	w2, w20
   36d3c:	bl	c7a0 <mpfr_exp@plt>
   36d40:	cmp	w20, #0x3
   36d44:	b.ne	36d50 <mpfr_zeta@@Base+0x1798>  // b.any
   36d48:	mov	x0, x19
   36d4c:	bl	be80 <mpfr_nextbelow@plt>
   36d50:	ldp	x20, x19, [sp, #64]
   36d54:	ldp	x22, x21, [sp, #48]
   36d58:	ldp	x24, x23, [sp, #32]
   36d5c:	ldp	x29, x30, [sp, #16]
   36d60:	add	sp, sp, #0x50
   36d64:	ret

0000000000036d68 <mpfr_cmp_d@@Base>:
   36d68:	sub	sp, sp, #0x80
   36d6c:	stp	x29, x30, [sp, #48]
   36d70:	stp	x26, x25, [sp, #64]
   36d74:	stp	x24, x23, [sp, #80]
   36d78:	stp	x22, x21, [sp, #96]
   36d7c:	stp	x20, x19, [sp, #112]
   36d80:	add	x29, sp, #0x30
   36d84:	mov	x19, x0
   36d88:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36d8c:	ldr	x1, [x0, #2656]
   36d90:	add	x0, x0, #0xa60
   36d94:	blr	x1
   36d98:	mrs	x23, tpidr_el0
   36d9c:	ldr	w24, [x23, x0]
   36da0:	mov	x20, x0
   36da4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36da8:	ldr	x1, [x0, #2592]
   36dac:	add	x0, x0, #0xa20
   36db0:	blr	x1
   36db4:	ldr	x25, [x23, x0]
   36db8:	mov	x21, x0
   36dbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36dc0:	ldr	x1, [x0, #2624]
   36dc4:	add	x0, x0, #0xa40
   36dc8:	blr	x1
   36dcc:	ldr	x26, [x23, x0]
   36dd0:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   36dd4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   36dd8:	mov	x22, x0
   36ddc:	mov	w10, #0x35                  	// #53
   36de0:	add	x11, sp, #0x8
   36de4:	str	x8, [x23, x21]
   36de8:	str	x9, [x23, x0]
   36dec:	mov	w8, #0x1                   	// #1
   36df0:	add	x0, sp, #0x10
   36df4:	mov	w1, wzr
   36df8:	str	x10, [sp, #16]
   36dfc:	str	x11, [sp, #40]
   36e00:	str	w8, [sp, #24]
   36e04:	bl	bef0 <mpfr_set_d@plt>
   36e08:	add	x1, sp, #0x10
   36e0c:	mov	w2, #0x1                   	// #1
   36e10:	mov	x0, x19
   36e14:	str	wzr, [x23, x20]
   36e18:	bl	c9f0 <mpfr_cmp3@plt>
   36e1c:	ldr	w8, [x23, x20]
   36e20:	str	x25, [x23, x21]
   36e24:	str	x26, [x23, x22]
   36e28:	ldp	x22, x21, [sp, #96]
   36e2c:	orr	w8, w8, w24
   36e30:	str	w8, [x23, x20]
   36e34:	ldp	x20, x19, [sp, #112]
   36e38:	ldp	x24, x23, [sp, #80]
   36e3c:	ldp	x26, x25, [sp, #64]
   36e40:	ldp	x29, x30, [sp, #48]
   36e44:	add	sp, sp, #0x80
   36e48:	ret

0000000000036e4c <mpfr_erf@@Base>:
   36e4c:	str	d12, [sp, #-144]!
   36e50:	stp	d11, d10, [sp, #16]
   36e54:	stp	d9, d8, [sp, #32]
   36e58:	stp	x29, x30, [sp, #48]
   36e5c:	stp	x28, x27, [sp, #64]
   36e60:	stp	x26, x25, [sp, #80]
   36e64:	stp	x24, x23, [sp, #96]
   36e68:	stp	x22, x21, [sp, #112]
   36e6c:	stp	x20, x19, [sp, #128]
   36e70:	mov	x29, sp
   36e74:	sub	sp, sp, #0x190
   36e78:	ldr	x9, [x1, #16]
   36e7c:	mov	x10, #0xfffffffffffffeff    	// #-257
   36e80:	movk	x10, #0x7fff, lsl #48
   36e84:	add	x8, x10, #0x105
   36e88:	mov	x21, x1
   36e8c:	cmp	x9, x8
   36e90:	mov	x27, x0
   36e94:	b.lt	37628 <mpfr_erf@@Base+0x7dc>  // b.tstop
   36e98:	mov	w28, w2
   36e9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36ea0:	ldr	x1, [x0, #2656]
   36ea4:	add	x0, x0, #0xa60
   36ea8:	blr	x1
   36eac:	mrs	x26, tpidr_el0
   36eb0:	ldr	w19, [x26, x0]
   36eb4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36eb8:	ldr	x1, [x0, #2592]
   36ebc:	add	x0, x0, #0xa20
   36ec0:	blr	x1
   36ec4:	ldr	x20, [x26, x0]
   36ec8:	mov	x8, x0
   36ecc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36ed0:	ldr	x1, [x0, #2624]
   36ed4:	add	x0, x0, #0xa40
   36ed8:	blr	x1
   36edc:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   36ee0:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   36ee4:	ldr	x24, [x26, x0]
   36ee8:	str	x10, [x26, x8]
   36eec:	str	x11, [x26, x0]
   36ef0:	ldr	x8, [x27]
   36ef4:	cmp	x8, #0x0
   36ef8:	cinc	x10, x8, lt  // lt = tstop
   36efc:	neg	x10, x10, asr #1
   36f00:	cmp	x9, x10
   36f04:	b.ge	3708c <mpfr_erf@@Base+0x240>  // b.tcont
   36f08:	add	x1, x8, #0x11
   36f0c:	add	x0, sp, #0x78
   36f10:	bl	cad0 <mpfr_init2@plt>
   36f14:	ldr	x8, [x27]
   36f18:	sub	x0, x29, #0x28
   36f1c:	add	x1, x8, #0x11
   36f20:	bl	cad0 <mpfr_init2@plt>
   36f24:	add	x0, sp, #0x78
   36f28:	mov	w3, #0x2                   	// #2
   36f2c:	mov	x1, x21
   36f30:	mov	x2, x21
   36f34:	mov	w23, #0x2                   	// #2
   36f38:	bl	be00 <mpfr_mul@plt>
   36f3c:	add	x0, sp, #0x78
   36f40:	add	x1, sp, #0x78
   36f44:	mov	w2, #0x3                   	// #3
   36f48:	mov	w3, #0x2                   	// #2
   36f4c:	bl	ccc0 <mpfr_div_ui@plt>
   36f50:	add	x0, sp, #0x78
   36f54:	add	x2, sp, #0x78
   36f58:	mov	w1, #0x1                   	// #1
   36f5c:	mov	w3, #0x1                   	// #1
   36f60:	bl	caa0 <mpfr_ui_sub@plt>
   36f64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   36f68:	ldr	x1, [x0, #2704]
   36f6c:	add	x0, x0, #0xa90
   36f70:	blr	x1
   36f74:	add	x22, x26, x0
   36f78:	sub	x0, x29, #0x28
   36f7c:	mov	w2, #0x2                   	// #2
   36f80:	mov	x1, x22
   36f84:	bl	c3e0 <mpfr_cache@plt>
   36f88:	sub	x0, x29, #0x28
   36f8c:	sub	x1, x29, #0x28
   36f90:	mov	w2, #0x2                   	// #2
   36f94:	bl	c990 <mpfr_sqrt@plt>
   36f98:	add	x0, sp, #0x78
   36f9c:	add	x1, sp, #0x78
   36fa0:	sub	x2, x29, #0x28
   36fa4:	mov	w3, #0x1                   	// #1
   36fa8:	bl	c670 <mpfr_div@plt>
   36fac:	add	x0, sp, #0x78
   36fb0:	add	x1, sp, #0x78
   36fb4:	mov	w2, #0x1                   	// #1
   36fb8:	mov	w3, #0x1                   	// #1
   36fbc:	bl	c320 <mpfr_mul_2ui@plt>
   36fc0:	add	x0, sp, #0x78
   36fc4:	add	x1, sp, #0x78
   36fc8:	mov	w3, #0x1                   	// #1
   36fcc:	mov	x2, x21
   36fd0:	bl	be00 <mpfr_mul@plt>
   36fd4:	sub	x0, x29, #0x28
   36fd8:	mov	w2, #0x3                   	// #3
   36fdc:	mov	x1, x22
   36fe0:	bl	c3e0 <mpfr_cache@plt>
   36fe4:	sub	x0, x29, #0x28
   36fe8:	sub	x1, x29, #0x28
   36fec:	mov	w2, #0x3                   	// #3
   36ff0:	bl	c990 <mpfr_sqrt@plt>
   36ff4:	sub	x0, x29, #0x28
   36ff8:	sub	x1, x29, #0x28
   36ffc:	mov	w2, #0x1                   	// #1
   37000:	mov	w3, #0x3                   	// #3
   37004:	bl	c950 <mpfr_div_2ui@plt>
   37008:	ldr	w8, [x21, #8]
   3700c:	sub	x0, x29, #0x28
   37010:	sub	x2, x29, #0x28
   37014:	mov	x1, x21
   37018:	cmp	w8, #0x0
   3701c:	cinc	w3, w23, le
   37020:	bl	c670 <mpfr_div@plt>
   37024:	ldr	x1, [x27]
   37028:	add	x0, sp, #0x78
   3702c:	mov	w2, w28
   37030:	bl	c9d0 <mpfr_prec_round@plt>
   37034:	ldr	x1, [x27]
   37038:	mov	w22, w0
   3703c:	sub	x0, x29, #0x28
   37040:	mov	w2, w28
   37044:	bl	c9d0 <mpfr_prec_round@plt>
   37048:	cmp	w22, #0x0
   3704c:	cset	w8, gt
   37050:	csinv	w8, w8, wzr, ge  // ge = tcont
   37054:	cmp	w0, #0x0
   37058:	cset	w9, gt
   3705c:	csinv	w9, w9, wzr, ge  // ge = tcont
   37060:	cmp	w8, w9
   37064:	b.ne	3707c <mpfr_erf@@Base+0x230>  // b.any
   37068:	add	x0, sp, #0x78
   3706c:	sub	x1, x29, #0x28
   37070:	mov	w2, #0x1                   	// #1
   37074:	bl	c9f0 <mpfr_cmp3@plt>
   37078:	cbz	w0, 37600 <mpfr_erf@@Base+0x7b4>
   3707c:	add	x0, sp, #0x78
   37080:	bl	c110 <mpfr_clear@plt>
   37084:	sub	x0, x29, #0x28
   37088:	bl	c110 <mpfr_clear@plt>
   3708c:	mov	w8, #0x35                  	// #53
   37090:	add	x9, x29, #0x8
   37094:	mov	w10, #0x1                   	// #1
   37098:	str	x8, [sp, #56]
   3709c:	str	x9, [sp, #80]
   370a0:	str	w10, [sp, #64]
   370a4:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
   370a8:	ldr	x2, [x2, #4048]
   370ac:	add	x0, sp, #0x38
   370b0:	mov	w3, #0x1                   	// #1
   370b4:	mov	x1, x21
   370b8:	bl	c670 <mpfr_div@plt>
   370bc:	add	x0, sp, #0x38
   370c0:	add	x1, sp, #0x38
   370c4:	mov	w3, #0x1                   	// #1
   370c8:	mov	x2, x21
   370cc:	bl	be00 <mpfr_mul@plt>
   370d0:	ldr	x8, [x27]
   370d4:	add	x0, sp, #0x38
   370d8:	mov	x2, xzr
   370dc:	add	x1, x8, #0x1
   370e0:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   370e4:	cmp	w0, #0x1
   370e8:	b.ge	37688 <mpfr_erf@@Base+0x83c>  // b.tcont
   370ec:	mov	x0, x21
   370f0:	mov	w1, wzr
   370f4:	str	x20, [sp, #16]
   370f8:	str	w19, [sp, #28]
   370fc:	bl	bde0 <mpfr_get_d@plt>
   37100:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   37104:	ldr	d1, [x8, #2448]
   37108:	ldr	x23, [x27]
   3710c:	fmul	d8, d0, d0
   37110:	str	x24, [sp, #8]
   37114:	fdiv	d0, d8, d1
   37118:	subs	x19, x23, #0x1
   3711c:	fcvtzs	x20, d0
   37120:	b.eq	376c8 <mpfr_erf@@Base+0x87c>  // b.none
   37124:	b.le	376d0 <mpfr_erf@@Base+0x884>
   37128:	clz	x8, x19
   3712c:	mov	w9, #0x40                  	// #64
   37130:	sub	x8, x9, x8
   37134:	add	x9, x20, x23
   37138:	add	x8, x9, x8
   3713c:	add	x25, x8, #0x8
   37140:	mov	x8, #0xfffffffffffffeff    	// #-257
   37144:	movk	x8, #0x7fff, lsl #48
   37148:	cmp	x25, x8
   3714c:	b.gt	37758 <mpfr_erf@@Base+0x90c>
   37150:	sub	x8, x25, #0x1
   37154:	add	x9, x25, #0x3e
   37158:	cmp	x8, #0x0
   3715c:	csel	x8, x9, x8, lt  // lt = tstop
   37160:	asr	x8, x8, #6
   37164:	cmp	x25, #0x101
   37168:	add	x24, x8, #0x1
   3716c:	str	x27, [sp, #32]
   37170:	b.lt	37184 <mpfr_erf@@Base+0x338>  // b.tstop
   37174:	lsl	x22, x24, #5
   37178:	mov	x0, x22
   3717c:	bl	cd50 <mpfr_allocate_func@plt>
   37180:	b	37190 <mpfr_erf@@Base+0x344>
   37184:	add	x8, sp, #0x78
   37188:	mov	x22, xzr
   3718c:	add	x0, x8, #0x10
   37190:	add	x8, x0, x24, lsl #3
   37194:	add	x9, x0, x24, lsl #4
   37198:	mov	w10, #0x18                  	// #24
   3719c:	cmp	w28, #0x0
   371a0:	str	w28, [sp, #52]
   371a4:	mov	w19, #0x1                   	// #1
   371a8:	mov	w11, #0x40                  	// #64
   371ac:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   371b0:	fmov	d9, #8.000000000000000000e+00
   371b4:	fmov	d10, #1.000000000000000000e+00
   371b8:	fmov	d11, #5.000000000000000000e-01
   371bc:	mov	x27, #0x3ef0000000000000    	// #4535124824762089472
   371c0:	stp	x8, x25, [x29, #-48]
   371c4:	stp	x9, x25, [x29, #-80]
   371c8:	madd	x8, x24, x10, x0
   371cc:	cinc	x9, x23, eq  // eq = none
   371d0:	stp	x22, x0, [sp, #120]
   371d4:	stur	x0, [x29, #-16]
   371d8:	stur	x25, [x29, #-104]
   371dc:	stur	x25, [x29, #-136]
   371e0:	str	x11, [sp]
   371e4:	stur	w19, [x29, #-32]
   371e8:	stur	w19, [x29, #-64]
   371ec:	stur	w19, [x29, #-96]
   371f0:	stur	w19, [x29, #-128]
   371f4:	str	x9, [sp, #40]
   371f8:	stur	x8, [x29, #-112]
   371fc:	sub	x0, x29, #0x28
   37200:	mov	w3, #0x2                   	// #2
   37204:	mov	x1, x21
   37208:	mov	x2, x21
   3720c:	bl	be00 <mpfr_mul@plt>
   37210:	sub	x0, x29, #0x48
   37214:	mov	w1, #0x1                   	// #1
   37218:	mov	x2, xzr
   3721c:	mov	w3, wzr
   37220:	bl	c640 <mpfr_set_ui_2exp@plt>
   37224:	sub	x0, x29, #0x68
   37228:	mov	w1, #0x1                   	// #1
   3722c:	mov	x2, xzr
   37230:	mov	w3, wzr
   37234:	bl	c640 <mpfr_set_ui_2exp@plt>
   37238:	add	x0, sp, #0x58
   3723c:	mov	w1, #0x35                  	// #53
   37240:	bl	cad0 <mpfr_init2@plt>
   37244:	str	x28, [sp, #104]
   37248:	neg	x28, x25
   3724c:	mov	w23, #0x1                   	// #1
   37250:	str	w19, [sp, #96]
   37254:	sub	x0, x29, #0x68
   37258:	sub	x1, x29, #0x28
   3725c:	sub	x2, x29, #0x68
   37260:	mov	w3, #0x2                   	// #2
   37264:	bl	be00 <mpfr_mul@plt>
   37268:	mov	w2, w23
   3726c:	sub	x0, x29, #0x68
   37270:	sub	x1, x29, #0x68
   37274:	mov	w3, #0x2                   	// #2
   37278:	bl	ccc0 <mpfr_div_ui@plt>
   3727c:	mov	w2, #0x1                   	// #1
   37280:	bfi	w2, w23, #1, #31
   37284:	sub	x0, x29, #0x88
   37288:	sub	x1, x29, #0x68
   3728c:	mov	w3, #0x2                   	// #2
   37290:	bl	ccc0 <mpfr_div_ui@plt>
   37294:	ldur	x24, [x29, #-56]
   37298:	sub	x0, x29, #0x48
   3729c:	sub	x1, x29, #0x48
   372a0:	sub	x2, x29, #0x88
   372a4:	mov	w3, wzr
   372a8:	tbnz	w23, #0, 372b4 <mpfr_erf@@Base+0x468>
   372ac:	bl	c240 <mpfr_add@plt>
   372b0:	b	372b8 <mpfr_erf@@Base+0x46c>
   372b4:	bl	bc20 <mpfr_sub@plt>
   372b8:	ldur	x22, [x29, #-56]
   372bc:	ldur	x19, [x29, #-120]
   372c0:	ucvtf	d12, w23
   372c4:	fcmp	d8, d12
   372c8:	sub	x20, x19, x22
   372cc:	b.hi	372d8 <mpfr_erf@@Base+0x48c>  // b.pmore
   372d0:	cmp	x20, x28
   372d4:	b.lt	37358 <mpfr_erf@@Base+0x50c>  // b.tstop
   372d8:	sub	x2, x24, x22
   372dc:	add	x0, sp, #0x58
   372e0:	add	x1, sp, #0x58
   372e4:	mov	w3, #0x2                   	// #2
   372e8:	bl	bc40 <mpfr_mul_2si@plt>
   372ec:	fmul	d0, d12, d9
   372f0:	cmp	x20, #0x1
   372f4:	fadd	d0, d0, d10
   372f8:	b.ge	37344 <mpfr_erf@@Base+0x4f8>  // b.tcont
   372fc:	cmn	x20, #0x10
   37300:	b.gt	37318 <mpfr_erf@@Base+0x4cc>
   37304:	fmov	d1, x27
   37308:	cmn	x20, #0x1f
   3730c:	add	x20, x20, #0x10
   37310:	fmul	d0, d0, d1
   37314:	b.lt	37304 <mpfr_erf@@Base+0x4b8>  // b.tstop
   37318:	cbz	x20, 37328 <mpfr_erf@@Base+0x4dc>
   3731c:	adds	x20, x20, #0x1
   37320:	fmul	d0, d0, d11
   37324:	b.cc	3731c <mpfr_erf@@Base+0x4d0>  // b.lo, b.ul, b.last
   37328:	fadd	d0, d0, d11
   3732c:	add	x0, sp, #0x58
   37330:	add	x1, sp, #0x58
   37334:	mov	w2, #0x2                   	// #2
   37338:	bl	c400 <mpfr_add_d@plt>
   3733c:	add	w23, w23, #0x1
   37340:	b	37254 <mpfr_erf@@Base+0x408>
   37344:	sub	x8, x22, x19
   37348:	adds	x8, x8, #0x1
   3734c:	fadd	d0, d0, d0
   37350:	b.cc	37348 <mpfr_erf@@Base+0x4fc>  // b.lo, b.ul, b.last
   37354:	b	37328 <mpfr_erf@@Base+0x4dc>
   37358:	sub	x0, x29, #0x48
   3735c:	sub	x2, x29, #0x48
   37360:	mov	w3, #0x2                   	// #2
   37364:	mov	x1, x21
   37368:	bl	be00 <mpfr_mul@plt>
   3736c:	ldur	x8, [x29, #-56]
   37370:	add	x8, x8, #0x1
   37374:	stur	x8, [x29, #-56]
   37378:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3737c:	ldr	x1, [x0, #2704]
   37380:	add	x0, x0, #0xa90
   37384:	blr	x1
   37388:	add	x1, x26, x0
   3738c:	sub	x0, x29, #0x68
   37390:	mov	w2, #0x1                   	// #1
   37394:	bl	c3e0 <mpfr_cache@plt>
   37398:	sub	x0, x29, #0x68
   3739c:	sub	x1, x29, #0x68
   373a0:	mov	w2, #0x1                   	// #1
   373a4:	bl	c990 <mpfr_sqrt@plt>
   373a8:	sub	x0, x29, #0x48
   373ac:	sub	x1, x29, #0x48
   373b0:	sub	x2, x29, #0x68
   373b4:	mov	w3, wzr
   373b8:	bl	c670 <mpfr_div@plt>
   373bc:	add	x0, sp, #0x58
   373c0:	add	x1, sp, #0x58
   373c4:	mov	w2, #0x2                   	// #2
   373c8:	mov	w3, #0x2                   	// #2
   373cc:	bl	c320 <mpfr_mul_2ui@plt>
   373d0:	add	x0, sp, #0x58
   373d4:	add	x1, sp, #0x58
   373d8:	mov	w2, #0xb                   	// #11
   373dc:	mov	w3, #0x2                   	// #2
   373e0:	bl	c2d0 <mpfr_add_ui@plt>
   373e4:	ldr	x20, [sp, #104]
   373e8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   373ec:	cmp	x20, x8
   373f0:	b.eq	374ac <mpfr_erf@@Base+0x660>  // b.none
   373f4:	add	x0, sp, #0x58
   373f8:	bl	c110 <mpfr_clear@plt>
   373fc:	ldur	x8, [x29, #-56]
   37400:	mov	x19, #0xfffffffffffffeff    	// #-257
   37404:	ldr	w28, [sp, #52]
   37408:	movk	x19, #0x7fff, lsl #48
   3740c:	add	x9, x19, #0x105
   37410:	cmp	x8, x9
   37414:	b.lt	37448 <mpfr_erf@@Base+0x5fc>  // b.tstop
   37418:	ldur	x8, [x29, #-72]
   3741c:	ldur	x0, [x29, #-48]
   37420:	ldr	x3, [sp, #40]
   37424:	sub	x2, x25, x20
   37428:	sub	x9, x8, #0x1
   3742c:	add	x8, x8, #0x3e
   37430:	cmp	x9, #0x0
   37434:	csel	x8, x8, x9, lt  // lt = tstop
   37438:	asr	x8, x8, #6
   3743c:	add	x1, x8, #0x1
   37440:	bl	c3d0 <mpfr_round_p@plt>
   37444:	cbnz	w0, 37530 <mpfr_erf@@Base+0x6e4>
   37448:	ldr	x20, [sp]
   3744c:	sub	x8, x19, x25
   37450:	cmp	x20, x8
   37454:	b.gt	37514 <mpfr_erf@@Base+0x6c8>
   37458:	add	x25, x25, x20
   3745c:	cmp	x25, #0x0
   37460:	cinc	x8, x25, lt  // lt = tstop
   37464:	cmp	x25, x19
   37468:	mov	w19, #0x1                   	// #1
   3746c:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   37470:	b.gt	37758 <mpfr_erf@@Base+0x90c>
   37474:	asr	x22, x8, #1
   37478:	sub	x8, x25, #0x1
   3747c:	add	x9, x25, #0x3e
   37480:	cmp	x8, #0x0
   37484:	ldr	x1, [sp, #120]
   37488:	csel	x8, x9, x8, lt  // lt = tstop
   3748c:	asr	x8, x8, #6
   37490:	add	x20, x8, #0x1
   37494:	lsl	x2, x20, #5
   37498:	str	x2, [sp, #120]
   3749c:	cbz	x1, 374cc <mpfr_erf@@Base+0x680>
   374a0:	ldr	x0, [sp, #128]
   374a4:	bl	c260 <mpfr_reallocate_func@plt>
   374a8:	b	374d4 <mpfr_erf@@Base+0x688>
   374ac:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   374b0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   374b4:	mov	w1, #0xf7                  	// #247
   374b8:	add	x0, x0, #0xa97
   374bc:	add	x2, x2, #0xa9d
   374c0:	bl	cb90 <mpfr_assert_fail@plt>
   374c4:	ldr	x20, [sp, #104]
   374c8:	b	373f4 <mpfr_erf@@Base+0x5a8>
   374cc:	mov	x0, x2
   374d0:	bl	cd50 <mpfr_allocate_func@plt>
   374d4:	mov	w10, #0x18                  	// #24
   374d8:	add	x8, x0, x20, lsl #3
   374dc:	add	x9, x0, x20, lsl #4
   374e0:	madd	x10, x20, x10, x0
   374e4:	str	x22, [sp]
   374e8:	str	x0, [sp, #128]
   374ec:	stur	x0, [x29, #-16]
   374f0:	stp	x8, x25, [x29, #-48]
   374f4:	stur	w19, [x29, #-32]
   374f8:	stp	x9, x25, [x29, #-80]
   374fc:	stur	w19, [x29, #-64]
   37500:	stp	x10, x25, [x29, #-112]
   37504:	stur	w19, [x29, #-96]
   37508:	stur	x25, [x29, #-136]
   3750c:	stur	w19, [x29, #-128]
   37510:	b	371fc <mpfr_erf@@Base+0x3b0>
   37514:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   37518:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3751c:	mov	w1, #0xff                  	// #255
   37520:	add	x0, x0, #0xa97
   37524:	add	x2, x2, #0x4df
   37528:	bl	cb90 <mpfr_assert_fail@plt>
   3752c:	b	37458 <mpfr_erf@@Base+0x60c>
   37530:	ldr	x27, [sp, #32]
   37534:	ldur	w3, [x29, #-64]
   37538:	sub	x1, x29, #0x48
   3753c:	mov	w2, w28
   37540:	mov	x0, x27
   37544:	bl	c6f0 <mpfr_set4@plt>
   37548:	ldr	x1, [sp, #120]
   3754c:	mov	w22, w0
   37550:	cbz	x1, 3755c <mpfr_erf@@Base+0x710>
   37554:	ldr	x0, [sp, #128]
   37558:	bl	cc80 <mpfr_free_func@plt>
   3755c:	ldr	w19, [sp, #28]
   37560:	ldp	x24, x20, [sp, #8]
   37564:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   37568:	ldr	x1, [x0, #2656]
   3756c:	add	x0, x0, #0xa60
   37570:	blr	x1
   37574:	str	w19, [x26, x0]
   37578:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3757c:	ldr	x1, [x0, #2592]
   37580:	add	x0, x0, #0xa20
   37584:	blr	x1
   37588:	str	x20, [x26, x0]
   3758c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   37590:	ldr	x1, [x0, #2624]
   37594:	add	x0, x0, #0xa40
   37598:	blr	x1
   3759c:	str	x24, [x26, x0]
   375a0:	ldr	x8, [x27, #16]
   375a4:	cmp	x8, x24
   375a8:	b.gt	37674 <mpfr_erf@@Base+0x828>
   375ac:	cmp	x8, x20
   375b0:	b.lt	37674 <mpfr_erf@@Base+0x828>  // b.tstop
   375b4:	cbz	w22, 375d0 <mpfr_erf@@Base+0x784>
   375b8:	orr	w8, w19, #0x8
   375bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   375c0:	ldr	x1, [x0, #2656]
   375c4:	add	x0, x0, #0xa60
   375c8:	blr	x1
   375cc:	str	w8, [x26, x0]
   375d0:	mov	w0, w22
   375d4:	add	sp, sp, #0x190
   375d8:	ldp	x20, x19, [sp, #128]
   375dc:	ldp	x22, x21, [sp, #112]
   375e0:	ldp	x24, x23, [sp, #96]
   375e4:	ldp	x26, x25, [sp, #80]
   375e8:	ldp	x28, x27, [sp, #64]
   375ec:	ldp	x29, x30, [sp, #48]
   375f0:	ldp	d9, d8, [sp, #32]
   375f4:	ldp	d11, d10, [sp, #16]
   375f8:	ldr	d12, [sp], #144
   375fc:	ret
   37600:	ldur	w3, [x29, #-32]
   37604:	sub	x1, x29, #0x28
   37608:	mov	x0, x27
   3760c:	mov	w2, w28
   37610:	bl	c6f0 <mpfr_set4@plt>
   37614:	add	x0, sp, #0x78
   37618:	bl	c110 <mpfr_clear@plt>
   3761c:	sub	x0, x29, #0x28
   37620:	bl	c110 <mpfr_clear@plt>
   37624:	b	37564 <mpfr_erf@@Base+0x718>
   37628:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3762c:	cmp	x9, x8
   37630:	b.eq	3771c <mpfr_erf@@Base+0x8d0>  // b.none
   37634:	mov	x8, #0x2                   	// #2
   37638:	movk	x8, #0x8000, lsl #48
   3763c:	cmp	x9, x8
   37640:	b.ne	37734 <mpfr_erf@@Base+0x8e8>  // b.any
   37644:	add	x8, x10, #0x103
   37648:	str	x8, [x27, #16]
   3764c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   37650:	ldr	x1, [x0, #2656]
   37654:	add	x0, x0, #0xa60
   37658:	blr	x1
   3765c:	mrs	x8, tpidr_el0
   37660:	ldr	w9, [x8, x0]
   37664:	mov	w22, wzr
   37668:	orr	w9, w9, #0x4
   3766c:	str	w9, [x8, x0]
   37670:	b	375d0 <mpfr_erf@@Base+0x784>
   37674:	mov	x0, x27
   37678:	mov	w1, w22
   3767c:	mov	w2, w28
   37680:	bl	cb80 <mpfr_check_range@plt>
   37684:	b	37748 <mpfr_erf@@Base+0x8fc>
   37688:	ldr	w22, [x21, #8]
   3768c:	cmp	w22, #0x0
   37690:	b.le	376ec <mpfr_erf@@Base+0x8a0>
   37694:	cmp	w28, #0x4
   37698:	b.hi	37700 <mpfr_erf@@Base+0x8b4>  // b.pmore
   3769c:	mov	w8, #0x1                   	// #1
   376a0:	lsl	w8, w8, w28
   376a4:	mov	w9, #0x15                  	// #21
   376a8:	tst	w8, w9
   376ac:	b.eq	37700 <mpfr_erf@@Base+0x8b4>  // b.none
   376b0:	mov	w3, w28
   376b4:	sxtw	x1, w22
   376b8:	mov	x0, x27
   376bc:	mov	x2, xzr
   376c0:	bl	bb40 <mpfr_set_si_2exp@plt>
   376c4:	b	37564 <mpfr_erf@@Base+0x718>
   376c8:	mov	x8, xzr
   376cc:	b	37134 <mpfr_erf@@Base+0x2e8>
   376d0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   376d4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   376d8:	add	x0, x0, #0xa97
   376dc:	add	x2, x2, #0x444
   376e0:	mov	w1, #0xc6                  	// #198
   376e4:	bl	cb90 <mpfr_assert_fail@plt>
   376e8:	b	37128 <mpfr_erf@@Base+0x2dc>
   376ec:	cbz	w28, 376b0 <mpfr_erf@@Base+0x864>
   376f0:	cmp	w28, #0x3
   376f4:	b.eq	37750 <mpfr_erf@@Base+0x904>  // b.none
   376f8:	cmp	w28, #0x4
   376fc:	b.eq	376b0 <mpfr_erf@@Base+0x864>  // b.none
   37700:	mov	x0, x27
   37704:	mov	x1, xzr
   37708:	neg	w22, w22
   3770c:	bl	c170 <mpfr_setmax@plt>
   37710:	ldr	w8, [x21, #8]
   37714:	str	w8, [x27, #8]
   37718:	b	37564 <mpfr_erf@@Base+0x718>
   3771c:	ldrsw	x1, [x21, #8]
   37720:	mov	x0, x27
   37724:	mov	x2, xzr
   37728:	mov	w3, wzr
   3772c:	bl	bb40 <mpfr_set_si_2exp@plt>
   37730:	b	37748 <mpfr_erf@@Base+0x8fc>
   37734:	ldr	w3, [x21, #8]
   37738:	mov	x0, x27
   3773c:	mov	x1, x21
   37740:	mov	w2, wzr
   37744:	bl	c6f0 <mpfr_set4@plt>
   37748:	mov	w22, w0
   3774c:	b	375d0 <mpfr_erf@@Base+0x784>
   37750:	mov	w3, #0x2                   	// #2
   37754:	b	376b4 <mpfr_erf@@Base+0x868>
   37758:	bl	c940 <mpfr_abort_prec_max@plt>

000000000003775c <mpfr_inits@@Base>:
   3775c:	sub	sp, sp, #0xf0
   37760:	stp	x29, x30, [sp, #224]
   37764:	add	x29, sp, #0xe0
   37768:	mov	x8, #0xffffffffffffffc8    	// #-56
   3776c:	mov	x9, sp
   37770:	sub	x10, x29, #0x58
   37774:	movk	x8, #0xff80, lsl #32
   37778:	add	x11, x29, #0x10
   3777c:	add	x9, x9, #0x80
   37780:	add	x10, x10, #0x38
   37784:	stp	x1, x2, [x29, #-88]
   37788:	stp	x3, x4, [x29, #-72]
   3778c:	stp	x5, x6, [x29, #-56]
   37790:	stur	x7, [x29, #-40]
   37794:	stp	q0, q1, [sp]
   37798:	stp	q2, q3, [sp, #32]
   3779c:	stp	q4, q5, [sp, #64]
   377a0:	stp	q6, q7, [sp, #96]
   377a4:	stp	x9, x8, [x29, #-16]
   377a8:	stp	x11, x10, [x29, #-32]
   377ac:	cbz	x0, 377ec <mpfr_inits@@Base+0x90>
   377b0:	bl	bc80 <mpfr_init@plt>
   377b4:	ldursw	x8, [x29, #-8]
   377b8:	tbz	w8, #31, 377d8 <mpfr_inits@@Base+0x7c>
   377bc:	add	w9, w8, #0x8
   377c0:	cmn	w8, #0x8
   377c4:	stur	w9, [x29, #-8]
   377c8:	b.gt	377d8 <mpfr_inits@@Base+0x7c>
   377cc:	ldur	x9, [x29, #-24]
   377d0:	add	x8, x9, x8
   377d4:	b	377e4 <mpfr_inits@@Base+0x88>
   377d8:	ldur	x8, [x29, #-32]
   377dc:	add	x9, x8, #0x8
   377e0:	stur	x9, [x29, #-32]
   377e4:	ldr	x0, [x8]
   377e8:	cbnz	x0, 377b0 <mpfr_inits@@Base+0x54>
   377ec:	ldp	x29, x30, [sp, #224]
   377f0:	add	sp, sp, #0xf0
   377f4:	ret

00000000000377f8 <mpfr_inits2@@Base>:
   377f8:	sub	sp, sp, #0xf0
   377fc:	stp	x29, x30, [sp, #208]
   37800:	add	x29, sp, #0xd0
   37804:	mov	x8, #0xffffffffffffffd0    	// #-48
   37808:	mov	x9, sp
   3780c:	sub	x10, x29, #0x50
   37810:	movk	x8, #0xff80, lsl #32
   37814:	add	x11, x29, #0x20
   37818:	add	x9, x9, #0x80
   3781c:	add	x10, x10, #0x30
   37820:	str	x19, [sp, #224]
   37824:	stp	x2, x3, [x29, #-80]
   37828:	stp	x4, x5, [x29, #-64]
   3782c:	stp	x6, x7, [x29, #-48]
   37830:	stp	q1, q2, [sp, #16]
   37834:	stp	q3, q4, [sp, #48]
   37838:	str	q0, [sp]
   3783c:	stp	q5, q6, [sp, #80]
   37840:	str	q7, [sp, #112]
   37844:	stp	x9, x8, [x29, #-16]
   37848:	stp	x11, x10, [x29, #-32]
   3784c:	cbz	x1, 37898 <mpfr_inits2@@Base+0xa0>
   37850:	mov	x19, x0
   37854:	mov	x0, x1
   37858:	mov	x1, x19
   3785c:	bl	cad0 <mpfr_init2@plt>
   37860:	ldursw	x8, [x29, #-8]
   37864:	tbz	w8, #31, 37884 <mpfr_inits2@@Base+0x8c>
   37868:	add	w9, w8, #0x8
   3786c:	cmn	w8, #0x8
   37870:	stur	w9, [x29, #-8]
   37874:	b.gt	37884 <mpfr_inits2@@Base+0x8c>
   37878:	ldur	x9, [x29, #-24]
   3787c:	add	x8, x9, x8
   37880:	b	37890 <mpfr_inits2@@Base+0x98>
   37884:	ldur	x8, [x29, #-32]
   37888:	add	x9, x8, #0x8
   3788c:	stur	x9, [x29, #-32]
   37890:	ldr	x1, [x8]
   37894:	cbnz	x1, 37854 <mpfr_inits2@@Base+0x5c>
   37898:	ldr	x19, [sp, #224]
   3789c:	ldp	x29, x30, [sp, #208]
   378a0:	add	sp, sp, #0xf0
   378a4:	ret

00000000000378a8 <mpfr_clears@@Base>:
   378a8:	sub	sp, sp, #0xf0
   378ac:	stp	x29, x30, [sp, #224]
   378b0:	add	x29, sp, #0xe0
   378b4:	mov	x8, #0xffffffffffffffc8    	// #-56
   378b8:	mov	x9, sp
   378bc:	sub	x10, x29, #0x58
   378c0:	movk	x8, #0xff80, lsl #32
   378c4:	add	x11, x29, #0x10
   378c8:	add	x9, x9, #0x80
   378cc:	add	x10, x10, #0x38
   378d0:	stp	x1, x2, [x29, #-88]
   378d4:	stp	x3, x4, [x29, #-72]
   378d8:	stp	x5, x6, [x29, #-56]
   378dc:	stur	x7, [x29, #-40]
   378e0:	stp	q0, q1, [sp]
   378e4:	stp	q2, q3, [sp, #32]
   378e8:	stp	q4, q5, [sp, #64]
   378ec:	stp	q6, q7, [sp, #96]
   378f0:	stp	x9, x8, [x29, #-16]
   378f4:	stp	x11, x10, [x29, #-32]
   378f8:	cbz	x0, 37938 <mpfr_clears@@Base+0x90>
   378fc:	bl	c110 <mpfr_clear@plt>
   37900:	ldursw	x8, [x29, #-8]
   37904:	tbz	w8, #31, 37924 <mpfr_clears@@Base+0x7c>
   37908:	add	w9, w8, #0x8
   3790c:	cmn	w8, #0x8
   37910:	stur	w9, [x29, #-8]
   37914:	b.gt	37924 <mpfr_clears@@Base+0x7c>
   37918:	ldur	x9, [x29, #-24]
   3791c:	add	x8, x9, x8
   37920:	b	37930 <mpfr_clears@@Base+0x88>
   37924:	ldur	x8, [x29, #-32]
   37928:	add	x9, x8, #0x8
   3792c:	stur	x9, [x29, #-32]
   37930:	ldr	x0, [x8]
   37934:	cbnz	x0, 378fc <mpfr_clears@@Base+0x54>
   37938:	ldp	x29, x30, [sp, #224]
   3793c:	add	sp, sp, #0xf0
   37940:	ret

0000000000037944 <mpfr_sgn@@Base>:
   37944:	stp	x29, x30, [sp, #-16]!
   37948:	ldr	x8, [x0, #16]
   3794c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   37950:	mov	x29, sp
   37954:	cmp	x8, x9
   37958:	b.le	37968 <mpfr_sgn@@Base+0x24>
   3795c:	ldr	w0, [x0, #8]
   37960:	ldp	x29, x30, [sp], #16
   37964:	ret
   37968:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3796c:	cmp	x8, x9
   37970:	b.ne	3797c <mpfr_sgn@@Base+0x38>  // b.any
   37974:	mov	w0, wzr
   37978:	b	37960 <mpfr_sgn@@Base+0x1c>
   3797c:	mov	x9, #0x2                   	// #2
   37980:	movk	x9, #0x8000, lsl #48
   37984:	cmp	x8, x9
   37988:	b.ne	3795c <mpfr_sgn@@Base+0x18>  // b.any
   3798c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   37990:	ldr	x1, [x0, #2656]
   37994:	add	x0, x0, #0xa60
   37998:	blr	x1
   3799c:	mov	x8, x0
   379a0:	mrs	x9, tpidr_el0
   379a4:	ldr	w10, [x9, x8]
   379a8:	mov	w0, wzr
   379ac:	orr	w10, w10, #0x10
   379b0:	str	w10, [x9, x8]
   379b4:	b	37960 <mpfr_sgn@@Base+0x1c>

00000000000379b8 <mpfr_check@@Base>:
   379b8:	stp	x29, x30, [sp, #-16]!
   379bc:	ldr	w8, [x0, #8]
   379c0:	mov	x29, sp
   379c4:	cmp	w8, #0x1
   379c8:	b.eq	379d4 <mpfr_check@@Base+0x1c>  // b.none
   379cc:	cmn	w8, #0x1
   379d0:	b.ne	37a60 <mpfr_check@@Base+0xa8>  // b.any
   379d4:	ldr	x10, [x0]
   379d8:	mov	x12, #0xfffffffffffffeff    	// #-257
   379dc:	movk	x12, #0x7fff, lsl #48
   379e0:	sub	x11, x10, #0x1
   379e4:	cmp	x11, x12
   379e8:	b.cs	37a60 <mpfr_check@@Base+0xa8>  // b.hs, b.nlast
   379ec:	ldr	x9, [x0, #24]
   379f0:	cbz	x9, 37a60 <mpfr_check@@Base+0xa8>
   379f4:	ldur	x13, [x9, #-8]
   379f8:	mov	w8, wzr
   379fc:	cmp	x13, #0x1
   37a00:	b.lt	37a64 <mpfr_check@@Base+0xac>  // b.tstop
   37a04:	lsl	x14, x13, #6
   37a08:	cmp	x10, x14
   37a0c:	b.gt	37a64 <mpfr_check@@Base+0xac>
   37a10:	mov	x8, xzr
   37a14:	ldr	xzr, [x9, x8, lsl #3]
   37a18:	add	x8, x8, #0x1
   37a1c:	cmp	x13, x8
   37a20:	b.ne	37a14 <mpfr_check@@Base+0x5c>  // b.any
   37a24:	ldr	x8, [x0, #16]
   37a28:	add	x12, x12, #0x105
   37a2c:	cmp	x8, x12
   37a30:	b.ge	37a48 <mpfr_check@@Base+0x90>  // b.tcont
   37a34:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   37a38:	add	x8, x8, x9
   37a3c:	cmp	x8, #0x3
   37a40:	cset	w8, cc  // cc = lo, ul, last
   37a44:	b	37a64 <mpfr_check@@Base+0xac>
   37a48:	add	x12, x11, #0x3f
   37a4c:	cmp	x11, #0x0
   37a50:	csel	x11, x12, x11, lt  // lt = tstop
   37a54:	asr	x11, x11, #6
   37a58:	ldr	x11, [x9, x11, lsl #3]
   37a5c:	tbnz	x11, #63, 37a70 <mpfr_check@@Base+0xb8>
   37a60:	mov	w8, wzr
   37a64:	mov	w0, w8
   37a68:	ldp	x29, x30, [sp], #16
   37a6c:	ret
   37a70:	add	x11, x10, #0x3f
   37a74:	cmp	x10, #0x0
   37a78:	csel	x11, x11, x10, lt  // lt = tstop
   37a7c:	and	x11, x11, #0xffffffffffffffc0
   37a80:	sub	x10, x10, x11
   37a84:	cbz	w10, 37aa0 <mpfr_check@@Base+0xe8>
   37a88:	ldr	x9, [x9]
   37a8c:	neg	x10, x10
   37a90:	mov	x11, #0xffffffffffffffff    	// #-1
   37a94:	lsl	x10, x11, x10
   37a98:	bics	xzr, x9, x10
   37a9c:	b.ne	37a60 <mpfr_check@@Base+0xa8>  // b.any
   37aa0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   37aa4:	ldr	x1, [x0, #2592]
   37aa8:	add	x0, x0, #0xa20
   37aac:	blr	x1
   37ab0:	mrs	x9, tpidr_el0
   37ab4:	ldr	x10, [x9, x0]
   37ab8:	cmp	x8, x10
   37abc:	cset	w10, ge  // ge = tcont
   37ac0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   37ac4:	ldr	x1, [x0, #2624]
   37ac8:	add	x0, x0, #0xa40
   37acc:	blr	x1
   37ad0:	ldr	x9, [x9, x0]
   37ad4:	cmp	x8, x9
   37ad8:	cset	w8, le
   37adc:	and	w8, w10, w8
   37ae0:	b	37a64 <mpfr_check@@Base+0xac>

0000000000037ae4 <mpfr_sub1sp@@Base>:
   37ae4:	stp	x29, x30, [sp, #-96]!
   37ae8:	stp	x28, x27, [sp, #16]
   37aec:	stp	x26, x25, [sp, #32]
   37af0:	stp	x24, x23, [sp, #48]
   37af4:	stp	x22, x21, [sp, #64]
   37af8:	stp	x20, x19, [sp, #80]
   37afc:	mov	x29, sp
   37b00:	sub	sp, sp, #0x30
   37b04:	ldr	x28, [x1]
   37b08:	mov	w20, w3
   37b0c:	mov	x21, x2
   37b10:	mov	x19, x0
   37b14:	cmp	x28, #0x3f
   37b18:	b.gt	37b6c <mpfr_sub1sp@@Base+0x88>
   37b1c:	ldp	x8, x13, [x21, #16]
   37b20:	ldp	x10, x11, [x1, #16]
   37b24:	ldr	x9, [x19, #24]
   37b28:	cmp	x10, x8
   37b2c:	b.ne	37c70 <mpfr_sub1sp@@Base+0x18c>  // b.any
   37b30:	ldr	x8, [x11]
   37b34:	ldr	x11, [x13]
   37b38:	subs	x8, x8, x11
   37b3c:	b.eq	38004 <mpfr_sub1sp@@Base+0x520>  // b.none
   37b40:	ldr	w11, [x1, #8]
   37b44:	cneg	x8, x8, cc  // cc = lo, ul, last
   37b48:	clz	x14, x8
   37b4c:	lsl	x8, x8, x14
   37b50:	cneg	w2, w11, cc  // cc = lo, ul, last
   37b54:	mov	x12, xzr
   37b58:	mov	x13, xzr
   37b5c:	str	w2, [x19, #8]
   37b60:	str	x8, [x9]
   37b64:	sub	x10, x10, x14
   37b68:	b	38054 <mpfr_sub1sp@@Base+0x570>
   37b6c:	cmp	x28, #0x40
   37b70:	b.eq	37c18 <mpfr_sub1sp@@Base+0x134>  // b.none
   37b74:	cmp	x28, #0x7f
   37b78:	b.gt	37c18 <mpfr_sub1sp@@Base+0x134>
   37b7c:	ldp	x10, x11, [x21, #16]
   37b80:	ldp	x8, x13, [x1, #16]
   37b84:	ldr	x9, [x19, #24]
   37b88:	cmp	x8, x10
   37b8c:	b.ne	37e38 <mpfr_sub1sp@@Base+0x354>  // b.any
   37b90:	ldp	x10, x13, [x13]
   37b94:	ldp	x11, x12, [x11]
   37b98:	subs	x11, x10, x11
   37b9c:	sub	x12, x13, x12
   37ba0:	cset	w10, cc  // cc = lo, ul, last
   37ba4:	sub	x10, x12, x10
   37ba8:	orr	x12, x10, x11
   37bac:	cbz	x12, 38000 <mpfr_sub1sp@@Base+0x51c>
   37bb0:	ldr	w12, [x1, #8]
   37bb4:	cmp	x10, x13
   37bb8:	b.cc	37bd0 <mpfr_sub1sp@@Base+0xec>  // b.lo, b.ul, b.last
   37bbc:	cmp	x11, #0x0
   37bc0:	csetm	x13, ne  // ne = any
   37bc4:	neg	w12, w12
   37bc8:	neg	x11, x11
   37bcc:	sub	x10, x13, x10
   37bd0:	cmp	x10, #0x0
   37bd4:	str	w12, [x19, #8]
   37bd8:	sub	x13, x8, #0x40
   37bdc:	csel	x12, x11, x10, eq  // eq = none
   37be0:	csel	x14, xzr, x11, eq  // eq = none
   37be4:	clz	x11, x12
   37be8:	csel	x10, x13, x8, eq  // eq = none
   37bec:	mov	x13, xzr
   37bf0:	mov	x15, xzr
   37bf4:	cbz	x11, 38284 <mpfr_sub1sp@@Base+0x7a0>
   37bf8:	lsl	x8, x12, x11
   37bfc:	neg	x12, x11
   37c00:	lsr	x12, x14, x12
   37c04:	lsl	x14, x14, x11
   37c08:	orr	x12, x12, x8
   37c0c:	stp	x14, x12, [x9]
   37c10:	sub	x10, x10, x11
   37c14:	b	38288 <mpfr_sub1sp@@Base+0x7a4>
   37c18:	cmp	x28, #0x40
   37c1c:	b.ne	37d20 <mpfr_sub1sp@@Base+0x23c>  // b.any
   37c20:	ldp	x11, x13, [x21, #16]
   37c24:	ldp	x10, x8, [x1, #16]
   37c28:	ldr	x9, [x19, #24]
   37c2c:	cmp	x10, x11
   37c30:	b.ne	37f2c <mpfr_sub1sp@@Base+0x448>  // b.any
   37c34:	ldr	x8, [x8]
   37c38:	ldr	x11, [x13]
   37c3c:	subs	x8, x8, x11
   37c40:	b.eq	38004 <mpfr_sub1sp@@Base+0x520>  // b.none
   37c44:	ldr	w13, [x1, #8]
   37c48:	cneg	x8, x8, cc  // cc = lo, ul, last
   37c4c:	clz	x14, x8
   37c50:	lsl	x8, x8, x14
   37c54:	cneg	w2, w13, cc  // cc = lo, ul, last
   37c58:	mov	x11, xzr
   37c5c:	mov	x12, xzr
   37c60:	str	w2, [x19, #8]
   37c64:	str	x8, [x9]
   37c68:	sub	x10, x10, x14
   37c6c:	b	38b84 <mpfr_sub1sp@@Base+0x10a0>
   37c70:	ldr	w15, [x1, #8]
   37c74:	csel	x12, x11, x13, gt
   37c78:	csel	x14, x13, x11, gt
   37c7c:	csel	x11, x8, x10, gt
   37c80:	csel	x10, x10, x8, gt
   37c84:	mov	w8, #0x40                  	// #64
   37c88:	neg	x16, x28
   37c8c:	mov	w17, #0x1                   	// #1
   37c90:	sub	x13, x10, x11
   37c94:	sub	x11, x8, x28
   37c98:	cneg	w2, w15, le
   37c9c:	cmp	x13, #0x3f
   37ca0:	lsl	x8, x17, x16
   37ca4:	str	w2, [x19, #8]
   37ca8:	b.hi	37e1c <mpfr_sub1sp@@Base+0x338>  // b.pmore
   37cac:	ldr	x14, [x14]
   37cb0:	ldr	x12, [x12]
   37cb4:	neg	x16, x13
   37cb8:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   37cbc:	lsl	x16, x14, x16
   37cc0:	lsr	x13, x14, x13
   37cc4:	cmp	x16, #0x0
   37cc8:	sub	x12, x12, x13
   37ccc:	cset	w13, ne  // ne = any
   37cd0:	sub	x12, x12, x13
   37cd4:	clz	x13, x12
   37cd8:	neg	x14, x16
   37cdc:	neg	x18, x13
   37ce0:	lsl	x16, x12, x13
   37ce4:	cmp	x13, #0x0
   37ce8:	sub	x10, x10, x13
   37cec:	lsl	x13, x14, x13
   37cf0:	lsr	x14, x14, x18
   37cf4:	orr	x14, x14, x16
   37cf8:	sub	x15, x8, #0x1
   37cfc:	lsr	x17, x17, x28
   37d00:	csel	x14, x12, x14, eq  // eq = none
   37d04:	neg	x8, x8
   37d08:	and	x12, x14, x17
   37d0c:	and	x15, x14, x15
   37d10:	and	x8, x14, x8
   37d14:	eor	x14, x15, x12
   37d18:	orr	x13, x14, x13
   37d1c:	b	38050 <mpfr_sub1sp@@Base+0x56c>
   37d20:	sub	x8, x28, #0x81
   37d24:	cmp	x8, #0x3e
   37d28:	b.hi	37fb0 <mpfr_sub1sp@@Base+0x4cc>  // b.pmore
   37d2c:	ldp	x13, x11, [x21, #16]
   37d30:	ldp	x9, x8, [x1, #16]
   37d34:	ldr	x10, [x19, #24]
   37d38:	cmp	x9, x13
   37d3c:	b.ne	38134 <mpfr_sub1sp@@Base+0x650>  // b.any
   37d40:	ldr	x13, [x8]
   37d44:	ldr	x16, [x11, #16]
   37d48:	ldp	x12, x11, [x11]
   37d4c:	ldp	x8, x15, [x8, #8]
   37d50:	subs	x14, x13, x12
   37d54:	sub	x13, x15, x16
   37d58:	cset	w16, cc  // cc = lo, ul, last
   37d5c:	subs	x8, x8, x11
   37d60:	cset	w17, eq  // eq = none
   37d64:	cset	w11, cc  // cc = lo, ul, last
   37d68:	sub	x12, x8, x16
   37d6c:	and	w8, w16, w17
   37d70:	orr	w8, w11, w8
   37d74:	sub	x13, x13, x8
   37d78:	orr	x8, x12, x14
   37d7c:	orr	x8, x8, x13
   37d80:	cbz	x8, 38004 <mpfr_sub1sp@@Base+0x520>
   37d84:	ldr	w8, [x1, #8]
   37d88:	cmp	x13, x15
   37d8c:	b.cc	37db4 <mpfr_sub1sp@@Base+0x2d0>  // b.lo, b.ul, b.last
   37d90:	cmp	x14, #0x0
   37d94:	csetm	x11, ne  // ne = any
   37d98:	sub	x12, x11, x12
   37d9c:	orr	x11, x12, x14
   37da0:	cmp	x11, #0x0
   37da4:	csetm	x11, ne  // ne = any
   37da8:	neg	w8, w8
   37dac:	neg	x14, x14
   37db0:	sub	x13, x11, x13
   37db4:	str	w8, [x19, #8]
   37db8:	cbnz	x13, 37ddc <mpfr_sub1sp@@Base+0x2f8>
   37dbc:	cmp	x12, #0x0
   37dc0:	mov	x8, #0xffffffffffffffc0    	// #-64
   37dc4:	mov	x11, #0xffffffffffffff80    	// #-128
   37dc8:	csel	x8, x11, x8, eq  // eq = none
   37dcc:	csel	x13, x14, x12, eq  // eq = none
   37dd0:	csel	x12, xzr, x14, eq  // eq = none
   37dd4:	add	x9, x8, x9
   37dd8:	mov	x14, xzr
   37ddc:	mov	x15, xzr
   37de0:	mov	x16, xzr
   37de4:	clz	x8, x13
   37de8:	cbz	x8, 38678 <mpfr_sub1sp@@Base+0xb94>
   37dec:	lsl	x11, x13, x8
   37df0:	neg	x13, x8
   37df4:	lsl	x17, x12, x8
   37df8:	lsr	x12, x12, x13
   37dfc:	lsr	x18, x14, x13
   37e00:	lsl	x14, x14, x8
   37e04:	orr	x13, x12, x11
   37e08:	orr	x12, x18, x17
   37e0c:	stp	x12, x13, [x10, #8]
   37e10:	str	x14, [x10]
   37e14:	sub	x9, x9, x8
   37e18:	b	38680 <mpfr_sub1sp@@Base+0xb9c>
   37e1c:	ldr	x12, [x12]
   37e20:	mov	x15, #0x8000000000000001    	// #-9223372036854775807
   37e24:	cmp	x12, x15
   37e28:	b.cc	38020 <mpfr_sub1sp@@Base+0x53c>  // b.lo, b.ul, b.last
   37e2c:	sub	x8, x12, x8
   37e30:	mov	w12, #0x1                   	// #1
   37e34:	b	3804c <mpfr_sub1sp@@Base+0x568>
   37e38:	ldr	w14, [x1, #8]
   37e3c:	csel	x12, x13, x11, gt
   37e40:	csel	x15, x11, x13, gt
   37e44:	csel	x11, x10, x8, gt
   37e48:	csel	x10, x8, x10, gt
   37e4c:	mov	w8, #0x80                  	// #128
   37e50:	neg	x13, x28
   37e54:	mov	w17, #0x1                   	// #1
   37e58:	sub	x16, x10, x11
   37e5c:	sub	x11, x8, x28
   37e60:	lsl	x8, x17, x13
   37e64:	cneg	w13, w14, le
   37e68:	cmp	x16, #0x3f
   37e6c:	str	w13, [x19, #8]
   37e70:	sub	x13, x8, #0x1
   37e74:	b.hi	3811c <mpfr_sub1sp@@Base+0x638>  // b.pmore
   37e78:	ldp	x15, x17, [x15]
   37e7c:	ldp	x18, x12, [x12]
   37e80:	neg	x14, x16
   37e84:	lsl	x0, x17, x14
   37e88:	lsr	x1, x15, x16
   37e8c:	lsr	x16, x17, x16
   37e90:	orr	x17, x1, x0
   37e94:	sub	x16, x12, x16
   37e98:	subs	x12, x18, x17
   37e9c:	cset	w17, cc  // cc = lo, ul, last
   37ea0:	lsl	x15, x15, x14
   37ea4:	sub	x14, x16, x17
   37ea8:	cbz	x15, 37ec0 <mpfr_sub1sp@@Base+0x3dc>
   37eac:	cmp	x12, #0x0
   37eb0:	cset	w16, eq  // eq = none
   37eb4:	sub	x12, x12, #0x1
   37eb8:	sub	x14, x14, x16
   37ebc:	neg	x15, x15
   37ec0:	cmp	x14, #0x0
   37ec4:	sub	x17, x10, #0x40
   37ec8:	csel	x16, xzr, x12, eq  // eq = none
   37ecc:	csel	x12, x12, x14, eq  // eq = none
   37ed0:	clz	x14, x12
   37ed4:	csel	x10, x17, x10, eq  // eq = none
   37ed8:	cbz	x14, 37f00 <mpfr_sub1sp@@Base+0x41c>
   37edc:	neg	x17, x14
   37ee0:	lsl	x12, x12, x14
   37ee4:	lsl	x18, x16, x14
   37ee8:	lsr	x16, x16, x17
   37eec:	lsr	x17, x15, x17
   37ef0:	lsl	x15, x15, x14
   37ef4:	orr	x12, x16, x12
   37ef8:	orr	x16, x17, x18
   37efc:	sub	x10, x10, x14
   37f00:	mov	w14, #0x7f                  	// #127
   37f04:	mov	w17, #0x1                   	// #1
   37f08:	and	x18, x16, x13
   37f0c:	neg	x8, x8
   37f10:	sub	x13, x14, x28
   37f14:	and	x14, x16, x8
   37f18:	lsl	x8, x17, x13
   37f1c:	and	x13, x16, x8
   37f20:	eor	x8, x18, x13
   37f24:	orr	x15, x8, x15
   37f28:	b	38508 <mpfr_sub1sp@@Base+0xa24>
   37f2c:	ldr	w14, [x1, #8]
   37f30:	csel	x15, x11, x10, gt
   37f34:	csel	x10, x10, x11, gt
   37f38:	sub	x11, x10, x15
   37f3c:	csel	x12, x8, x13, gt
   37f40:	csel	x8, x13, x8, gt
   37f44:	cneg	w2, w14, le
   37f48:	cmp	x11, #0x3f
   37f4c:	str	w2, [x19, #8]
   37f50:	b.hi	38200 <mpfr_sub1sp@@Base+0x71c>  // b.pmore
   37f54:	ldr	x8, [x8]
   37f58:	ldr	x14, [x12]
   37f5c:	neg	x13, x11
   37f60:	lsl	x12, x8, x13
   37f64:	lsr	x8, x8, x11
   37f68:	cmp	x12, #0x0
   37f6c:	cset	w11, ne  // ne = any
   37f70:	sub	x8, x14, x8
   37f74:	subs	x8, x8, x11
   37f78:	b.eq	38510 <mpfr_sub1sp@@Base+0xa2c>  // b.none
   37f7c:	neg	x11, x12
   37f80:	clz	x12, x8
   37f84:	neg	x14, x12
   37f88:	lsl	x13, x8, x12
   37f8c:	cmp	x12, #0x0
   37f90:	lsl	x15, x11, x12
   37f94:	sub	x10, x10, x12
   37f98:	lsr	x12, x11, x14
   37f9c:	orr	x12, x12, x13
   37fa0:	and	x11, x15, #0x8000000000000000
   37fa4:	csel	x8, x8, x12, eq  // eq = none
   37fa8:	and	x12, x15, #0x7fffffffffffffff
   37fac:	b	38b80 <mpfr_sub1sp@@Base+0x109c>
   37fb0:	ldr	x8, [x1, #16]
   37fb4:	ldr	x26, [x21, #16]
   37fb8:	sub	x9, x28, #0x1
   37fbc:	add	x10, x28, #0x3e
   37fc0:	cmp	x9, #0x0
   37fc4:	csel	x9, x10, x9, lt  // lt = tstop
   37fc8:	asr	x14, x9, #6
   37fcc:	cmp	x8, x26
   37fd0:	stur	xzr, [x29, #-8]
   37fd4:	b.ne	38224 <mpfr_sub1sp@@Base+0x740>  // b.any
   37fd8:	ldr	x9, [x1, #24]
   37fdc:	ldr	x10, [x21, #24]
   37fe0:	mov	x11, x14
   37fe4:	ldr	x12, [x9, x11, lsl #3]
   37fe8:	ldr	x13, [x10, x11, lsl #3]
   37fec:	cmp	x12, x13
   37ff0:	b.ne	3828c <mpfr_sub1sp@@Base+0x7a8>  // b.any
   37ff4:	cmp	x11, #0x0
   37ff8:	sub	x11, x11, #0x1
   37ffc:	b.gt	37fe4 <mpfr_sub1sp@@Base+0x500>
   38000:	mov	w8, wzr
   38004:	cmp	w20, #0x3
   38008:	mov	w9, #0xffffffff            	// #-1
   3800c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   38010:	cneg	w9, w9, ne  // ne = any
   38014:	str	w9, [x19, #8]
   38018:	str	x10, [x19, #16]
   3801c:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   38020:	cmp	x28, #0x3f
   38024:	mov	w12, #0x1                   	// #1
   38028:	b.lt	38044 <mpfr_sub1sp@@Base+0x560>  // b.tstop
   3802c:	cmp	x13, #0x40
   38030:	b.hi	38044 <mpfr_sub1sp@@Base+0x560>  // b.pmore
   38034:	ldr	x12, [x14]
   38038:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3803c:	cmp	x12, x13
   38040:	cset	w12, eq  // eq = none
   38044:	neg	x8, x8
   38048:	sub	x10, x10, #0x1
   3804c:	mov	w13, #0x1                   	// #1
   38050:	str	x8, [x9]
   38054:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38058:	ldr	x1, [x0, #2592]
   3805c:	add	x0, x0, #0xa20
   38060:	blr	x1
   38064:	mrs	x14, tpidr_el0
   38068:	ldr	x15, [x14, x0]
   3806c:	cmp	x10, x15
   38070:	b.lt	38cd8 <mpfr_sub1sp@@Base+0x11f4>  // b.tstop
   38074:	mov	w8, wzr
   38078:	cmp	w20, #0x5
   3807c:	str	x10, [x19, #16]
   38080:	b.eq	38d48 <mpfr_sub1sp@@Base+0x1264>  // b.none
   38084:	orr	x15, x13, x12
   38088:	cbz	x15, 38d48 <mpfr_sub1sp@@Base+0x1264>
   3808c:	cmp	w20, #0x1
   38090:	b.eq	380f8 <mpfr_sub1sp@@Base+0x614>  // b.none
   38094:	cbnz	w20, 380ec <mpfr_sub1sp@@Base+0x608>
   38098:	cbz	x12, 380f8 <mpfr_sub1sp@@Base+0x614>
   3809c:	cbnz	x13, 380ac <mpfr_sub1sp@@Base+0x5c8>
   380a0:	ldr	x8, [x9]
   380a4:	lsr	x8, x8, x11
   380a8:	tbz	w8, #0, 380f8 <mpfr_sub1sp@@Base+0x614>
   380ac:	ldr	x8, [x9]
   380b0:	mov	w12, #0x1                   	// #1
   380b4:	lsl	x11, x12, x11
   380b8:	adds	x8, x8, x11
   380bc:	str	x8, [x9]
   380c0:	b.eq	38d30 <mpfr_sub1sp@@Base+0x124c>  // b.none
   380c4:	cbz	w2, 38d44 <mpfr_sub1sp@@Base+0x1260>
   380c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   380cc:	ldr	x1, [x0, #2656]
   380d0:	add	x0, x0, #0xa60
   380d4:	blr	x1
   380d8:	ldr	w8, [x14, x0]
   380dc:	orr	w8, w8, #0x8
   380e0:	str	w8, [x14, x0]
   380e4:	mov	w8, w2
   380e8:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   380ec:	add	w8, w20, w2, lsr #31
   380f0:	cmp	w8, #0x3
   380f4:	b.ne	380ac <mpfr_sub1sp@@Base+0x5c8>  // b.any
   380f8:	cbz	w2, 38d44 <mpfr_sub1sp@@Base+0x1260>
   380fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38100:	ldr	x1, [x0, #2656]
   38104:	add	x0, x0, #0xa60
   38108:	blr	x1
   3810c:	ldr	w8, [x14, x0]
   38110:	orr	w8, w8, #0x8
   38114:	str	w8, [x14, x0]
   38118:	b	38c38 <mpfr_sub1sp@@Base+0x1154>
   3811c:	cmp	x16, #0x7f
   38120:	b.hi	3823c <mpfr_sub1sp@@Base+0x758>  // b.pmore
   38124:	cmp	x16, #0x40
   38128:	b.ne	38480 <mpfr_sub1sp@@Base+0x99c>  // b.any
   3812c:	ldp	x14, x17, [x15]
   38130:	b	38498 <mpfr_sub1sp@@Base+0x9b4>
   38134:	ldr	w14, [x1, #8]
   38138:	csel	x17, x11, x8, gt
   3813c:	csel	x12, x8, x11, gt
   38140:	csel	x8, x13, x9, gt
   38144:	csel	x9, x9, x13, gt
   38148:	neg	x13, x28
   3814c:	mov	w15, #0x1                   	// #1
   38150:	mov	w11, #0xc0                  	// #192
   38154:	sub	x16, x9, x8
   38158:	lsl	x8, x15, x13
   3815c:	sub	x11, x11, x28
   38160:	cneg	w13, w14, le
   38164:	cmp	x16, #0x3f
   38168:	sub	x14, x8, #0x1
   3816c:	str	w13, [x19, #8]
   38170:	b.hi	3842c <mpfr_sub1sp@@Base+0x948>  // b.pmore
   38174:	ldp	x13, x15, [x17]
   38178:	ldr	x0, [x17, #16]
   3817c:	neg	x18, x16
   38180:	ldr	x3, [x12, #16]
   38184:	lsl	x17, x13, x18
   38188:	lsl	x1, x15, x18
   3818c:	lsr	x13, x13, x16
   38190:	lsl	x18, x0, x18
   38194:	lsr	x15, x15, x16
   38198:	lsr	x16, x0, x16
   3819c:	ldp	x0, x2, [x12]
   381a0:	orr	x12, x1, x13
   381a4:	orr	x13, x18, x15
   381a8:	sub	x16, x3, x16
   381ac:	subs	x15, x0, x12
   381b0:	sub	x13, x2, x13
   381b4:	cset	w18, cc  // cc = lo, ul, last
   381b8:	sub	x12, x13, x18
   381bc:	cmp	x12, x2
   381c0:	cset	w0, eq  // eq = none
   381c4:	cset	w13, hi  // hi = pmore
   381c8:	and	w18, w18, w0
   381cc:	orr	w13, w13, w18
   381d0:	sub	x13, x16, x13
   381d4:	cbz	x17, 38684 <mpfr_sub1sp@@Base+0xba0>
   381d8:	cmp	x15, #0x0
   381dc:	orr	x16, x12, x15
   381e0:	cset	w18, eq  // eq = none
   381e4:	cmp	x16, #0x0
   381e8:	cset	w16, eq  // eq = none
   381ec:	sub	x15, x15, #0x1
   381f0:	sub	x12, x12, x18
   381f4:	sub	x13, x13, x16
   381f8:	neg	x16, x17
   381fc:	b	38688 <mpfr_sub1sp@@Base+0xba4>
   38200:	ldr	x13, [x12]
   38204:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
   38208:	cmp	x13, x12
   3820c:	b.cc	38448 <mpfr_sub1sp@@Base+0x964>  // b.lo, b.ul, b.last
   38210:	cmp	x11, #0x40
   38214:	b.ls	38564 <mpfr_sub1sp@@Base+0xa80>  // b.plast
   38218:	mov	w11, #0x1                   	// #1
   3821c:	mov	w12, #0x1                   	// #1
   38220:	b	38578 <mpfr_sub1sp@@Base+0xa94>
   38224:	b.ge	38290 <mpfr_sub1sp@@Base+0x7ac>  // b.tcont
   38228:	ldr	w9, [x1, #8]
   3822c:	mov	x10, x8
   38230:	mov	x27, x1
   38234:	neg	w9, w9
   38238:	b	382a4 <mpfr_sub1sp@@Base+0x7c0>
   3823c:	ldp	x13, x12, [x12]
   38240:	subs	x14, x13, x8
   38244:	cset	w13, cc  // cc = lo, ul, last
   38248:	subs	x12, x12, x13
   3824c:	b.mi	38524 <mpfr_sub1sp@@Base+0xa40>  // b.first
   38250:	cmp	x28, #0x7f
   38254:	mov	w13, #0x1                   	// #1
   38258:	b.lt	386ec <mpfr_sub1sp@@Base+0xc08>  // b.tstop
   3825c:	cmp	x16, #0x80
   38260:	b.hi	386ec <mpfr_sub1sp@@Base+0xc08>  // b.pmore
   38264:	ldr	x12, [x15, #8]
   38268:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3826c:	cmp	x12, x13
   38270:	b.ne	386e8 <mpfr_sub1sp@@Base+0xc04>  // b.any
   38274:	ldr	x12, [x15]
   38278:	cmp	x12, #0x0
   3827c:	cset	w13, eq  // eq = none
   38280:	b	386ec <mpfr_sub1sp@@Base+0xc08>
   38284:	stp	x14, x12, [x9]
   38288:	b	38700 <mpfr_sub1sp@@Base+0xc1c>
   3828c:	b.ls	38228 <mpfr_sub1sp@@Base+0x744>  // b.plast
   38290:	ldr	w9, [x1, #8]
   38294:	mov	x10, x26
   38298:	mov	x26, x8
   3829c:	mov	x27, x21
   382a0:	mov	x21, x1
   382a4:	sub	x25, x26, x10
   382a8:	add	x22, x14, #0x1
   382ac:	cmp	x25, #0x1
   382b0:	str	w9, [x19, #8]
   382b4:	stur	x14, [x29, #-16]
   382b8:	b.hi	383a4 <mpfr_sub1sp@@Base+0x8c0>  // b.pmore
   382bc:	cbz	x25, 3852c <mpfr_sub1sp@@Base+0xa48>
   382c0:	ldr	x24, [x21, #24]
   382c4:	ldr	x25, [x27, #24]
   382c8:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   382cc:	ldr	x9, [x24, x14, lsl #3]
   382d0:	ldr	x8, [x25, x14, lsl #3]
   382d4:	sub	x9, x9, x8, lsr #1
   382d8:	cmp	x9, x10
   382dc:	b.cc	385bc <mpfr_sub1sp@@Base+0xad8>  // b.lo, b.ul, b.last
   382e0:	ldr	x9, [x25]
   382e4:	neg	w8, w28
   382e8:	ldr	x11, [x19, #24]
   382ec:	mov	w10, #0x1                   	// #1
   382f0:	and	x8, x8, #0x3f
   382f4:	lsl	x1, x22, #3
   382f8:	lsl	x28, x10, x8
   382fc:	cmp	x1, #0x4, lsl #12
   38300:	and	x9, x9, x28
   38304:	neg	x21, x28
   38308:	stur	x11, [x29, #-48]
   3830c:	stp	x9, x8, [x29, #-32]
   38310:	b.hi	390d4 <mpfr_sub1sp@@Base+0x15f0>  // b.pmore
   38314:	add	x9, x1, #0xf
   38318:	mov	x8, sp
   3831c:	and	x9, x9, #0xfffffffffffffff0
   38320:	sub	x23, x8, x9
   38324:	mov	sp, x23
   38328:	mov	w3, #0x1                   	// #1
   3832c:	mov	x0, x23
   38330:	mov	x1, x25
   38334:	mov	x2, x22
   38338:	bl	bd90 <__gmpn_rshift@plt>
   3833c:	ldr	x8, [x23]
   38340:	ldur	x0, [x29, #-48]
   38344:	mov	x1, x24
   38348:	mov	x2, x23
   3834c:	and	x8, x8, x21
   38350:	mov	x3, x22
   38354:	str	x8, [x23]
   38358:	bl	bf10 <__gmpn_sub_n@plt>
   3835c:	ldur	x8, [x29, #-32]
   38360:	str	x26, [x19, #16]
   38364:	cbz	x8, 38668 <mpfr_sub1sp@@Base+0xb84>
   38368:	cmp	w20, #0x5
   3836c:	b.eq	39190 <mpfr_sub1sp@@Base+0x16ac>  // b.none
   38370:	mov	x24, xzr
   38374:	cbnz	w20, 391b4 <mpfr_sub1sp@@Base+0x16d0>
   38378:	ldur	x21, [x29, #-48]
   3837c:	mov	x10, #0xffffffffffffffff    	// #-1
   38380:	mov	w8, wzr
   38384:	ldr	x9, [x21]
   38388:	tst	x9, x28
   3838c:	mov	x9, #0xffffffffffffffff    	// #-1
   38390:	mov	w28, #0x1                   	// #1
   38394:	stp	x10, x9, [x29, #-40]
   38398:	ldur	x10, [x29, #-16]
   3839c:	b.ne	391ec <mpfr_sub1sp@@Base+0x1708>  // b.any
   383a0:	b	388e0 <mpfr_sub1sp@@Base+0xdfc>
   383a4:	subs	x10, x28, x25
   383a8:	b.ls	38dd4 <mpfr_sub1sp@@Base+0x12f0>  // b.plast
   383ac:	neg	w8, w28
   383b0:	lsl	x1, x22, #3
   383b4:	cmp	x1, #0x4, lsl #12
   383b8:	and	x8, x8, #0x3f
   383bc:	stur	x8, [x29, #-24]
   383c0:	stur	x10, [x29, #-48]
   383c4:	b.hi	38e6c <mpfr_sub1sp@@Base+0x1388>  // b.pmore
   383c8:	add	x9, x1, #0xf
   383cc:	mov	x8, sp
   383d0:	and	x9, x9, #0xfffffffffffffff0
   383d4:	sub	x23, x8, x9
   383d8:	mov	sp, x23
   383dc:	ands	x3, x25, #0x3f
   383e0:	lsr	x24, x25, #6
   383e4:	b.eq	38e7c <mpfr_sub1sp@@Base+0x1398>  // b.none
   383e8:	ldr	x1, [x27, #24]
   383ec:	cbnz	x24, 38f2c <mpfr_sub1sp@@Base+0x1448>
   383f0:	mov	x0, x23
   383f4:	mov	x2, x22
   383f8:	bl	bd90 <__gmpn_rshift@plt>
   383fc:	ldp	x14, x13, [x29, #-24]
   38400:	cbz	x14, 38eac <mpfr_sub1sp@@Base+0x13c8>
   38404:	ldr	x9, [x23]
   38408:	sub	x8, x14, #0x1
   3840c:	mov	w24, #0x1                   	// #1
   38410:	lsl	x10, x24, x8
   38414:	sub	x11, x10, #0x1
   38418:	tst	x9, x11
   3841c:	and	x15, x9, x10
   38420:	b.eq	38548 <mpfr_sub1sp@@Base+0xa64>  // b.none
   38424:	mov	x28, x15
   38428:	b	38820 <mpfr_sub1sp@@Base+0xd3c>
   3842c:	cmp	x16, #0x7f
   38430:	b.hi	38580 <mpfr_sub1sp@@Base+0xa9c>  // b.pmore
   38434:	subs	x13, x16, #0x40
   38438:	b.ne	38938 <mpfr_sub1sp@@Base+0xe54>  // b.any
   3843c:	ldp	x16, x15, [x17]
   38440:	ldr	x17, [x17, #16]
   38444:	b	38960 <mpfr_sub1sp@@Base+0xe7c>
   38448:	cmp	x11, #0x40
   3844c:	sub	x10, x10, #0x1
   38450:	b.ne	385a8 <mpfr_sub1sp@@Base+0xac4>  // b.any
   38454:	ldr	x8, [x8]
   38458:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
   3845c:	cmp	x8, x11
   38460:	b.cc	38ae8 <mpfr_sub1sp@@Base+0x1004>  // b.lo, b.ul, b.last
   38464:	neg	x11, x8
   38468:	lsr	x13, x11, #62
   3846c:	cmp	x13, #0x0
   38470:	mov	x8, #0xfffffffffffffffe    	// #-2
   38474:	lsl	x12, x11, #2
   38478:	cset	w11, ne  // ne = any
   3847c:	b	38b80 <mpfr_sub1sp@@Base+0x109c>
   38480:	ldp	x14, x17, [x15]
   38484:	neg	x15, x16
   38488:	cmp	x14, #0x0
   3848c:	lsl	x15, x17, x15
   38490:	cset	w14, ne  // ne = any
   38494:	orr	x14, x15, x14
   38498:	lsr	x15, x17, x16
   3849c:	ldp	x16, x12, [x12]
   384a0:	cmp	x14, #0x0
   384a4:	cinc	x18, x15, ne  // ne = any
   384a8:	cset	w17, ne  // ne = any
   384ac:	subs	x15, x16, x18
   384b0:	cset	w16, cc  // cc = lo, ul, last
   384b4:	cmp	x18, #0x0
   384b8:	sub	x12, x12, x16
   384bc:	cset	w16, eq  // eq = none
   384c0:	and	w16, w17, w16
   384c4:	sub	x12, x12, x16
   384c8:	neg	x16, x14
   384cc:	tbnz	x12, #63, 384e0 <mpfr_sub1sp@@Base+0x9fc>
   384d0:	extr	x12, x12, x15, #63
   384d4:	extr	x15, x15, x16, #63
   384d8:	lsl	x16, x16, #1
   384dc:	sub	x10, x10, #0x1
   384e0:	mov	w14, #0x7f                  	// #127
   384e4:	mov	w17, #0x1                   	// #1
   384e8:	and	x18, x15, x13
   384ec:	neg	x8, x8
   384f0:	sub	x13, x14, x28
   384f4:	and	x14, x15, x8
   384f8:	lsl	x8, x17, x13
   384fc:	and	x13, x15, x8
   38500:	eor	x8, x18, x13
   38504:	orr	x15, x8, x16
   38508:	stp	x14, x12, [x9]
   3850c:	b	38700 <mpfr_sub1sp@@Base+0xc1c>
   38510:	mov	x11, xzr
   38514:	mov	x12, xzr
   38518:	sub	x10, x10, #0x40
   3851c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   38520:	b	38b80 <mpfr_sub1sp@@Base+0x109c>
   38524:	mov	w13, #0x1                   	// #1
   38528:	b	386f8 <mpfr_sub1sp@@Base+0xc14>
   3852c:	ldr	x23, [x19, #24]
   38530:	ldr	x1, [x21, #24]
   38534:	ldr	x2, [x27, #24]
   38538:	mov	x3, x22
   3853c:	mov	x0, x23
   38540:	bl	bf10 <__gmpn_sub_n@plt>
   38544:	b	38618 <mpfr_sub1sp@@Base+0xb34>
   38548:	add	x8, x8, x28
   3854c:	sub	x10, x8, x25
   38550:	cmp	x10, x28
   38554:	b.le	387d4 <mpfr_sub1sp@@Base+0xcf0>
   38558:	mov	x28, x15
   3855c:	mov	w24, wzr
   38560:	b	38820 <mpfr_sub1sp@@Base+0xd3c>
   38564:	ldr	x8, [x8]
   38568:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3856c:	cmp	x8, x11
   38570:	cset	w11, eq  // eq = none
   38574:	cset	w12, ne  // ne = any
   38578:	sub	x8, x13, #0x1
   3857c:	b	38b80 <mpfr_sub1sp@@Base+0x109c>
   38580:	cmp	x16, #0xbf
   38584:	b.hi	38af4 <mpfr_sub1sp@@Base+0x1010>  // b.pmore
   38588:	cmp	x16, #0x80
   3858c:	b.ne	38c40 <mpfr_sub1sp@@Base+0x115c>  // b.any
   38590:	ldp	x15, x18, [x17]
   38594:	ldr	x13, [x17, #16]
   38598:	cmp	x15, #0x0
   3859c:	cset	w15, ne  // ne = any
   385a0:	orr	x17, x18, x15
   385a4:	b	38c68 <mpfr_sub1sp@@Base+0x1184>
   385a8:	cmp	x11, #0x41
   385ac:	b.ls	38b68 <mpfr_sub1sp@@Base+0x1084>  // b.plast
   385b0:	mov	w11, #0x1                   	// #1
   385b4:	mov	w12, #0x1                   	// #1
   385b8:	b	38b7c <mpfr_sub1sp@@Base+0x1098>
   385bc:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   385c0:	cmp	x9, x10
   385c4:	b.eq	390e8 <mpfr_sub1sp@@Base+0x1604>  // b.none
   385c8:	ldr	x23, [x19, #24]
   385cc:	lsl	x1, x22, #3
   385d0:	cmp	x1, #0x4, lsl #12
   385d4:	b.hi	39120 <mpfr_sub1sp@@Base+0x163c>  // b.pmore
   385d8:	add	x9, x1, #0xf
   385dc:	mov	x8, sp
   385e0:	and	x9, x9, #0xfffffffffffffff0
   385e4:	sub	x21, x8, x9
   385e8:	mov	sp, x21
   385ec:	mov	w3, #0x1                   	// #1
   385f0:	mov	x0, x21
   385f4:	mov	x1, x24
   385f8:	mov	x2, x22
   385fc:	bl	bd70 <__gmpn_lshift@plt>
   38600:	mov	x0, x23
   38604:	mov	x1, x21
   38608:	mov	x2, x25
   3860c:	mov	x3, x22
   38610:	bl	bf10 <__gmpn_sub_n@plt>
   38614:	sub	x26, x26, #0x1
   38618:	ldur	x9, [x29, #-16]
   3861c:	ldr	x8, [x23, x9, lsl #3]
   38620:	cbz	x8, 38f74 <mpfr_sub1sp@@Base+0x1490>
   38624:	clz	x21, x8
   38628:	cbz	x21, 38644 <mpfr_sub1sp@@Base+0xb60>
   3862c:	mov	x0, x23
   38630:	mov	x1, x23
   38634:	mov	x2, x22
   38638:	mov	w3, w21
   3863c:	bl	bd70 <__gmpn_lshift@plt>
   38640:	sub	x26, x26, x21
   38644:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38648:	ldr	x1, [x0, #2592]
   3864c:	add	x0, x0, #0xa20
   38650:	blr	x1
   38654:	mrs	x21, tpidr_el0
   38658:	ldr	x8, [x21, x0]
   3865c:	cmp	x26, x8
   38660:	b.lt	38fb4 <mpfr_sub1sp@@Base+0x14d0>  // b.tstop
   38664:	str	x26, [x19, #16]
   38668:	ldur	x0, [x29, #-8]
   3866c:	cbz	x0, 38d44 <mpfr_sub1sp@@Base+0x1260>
   38670:	bl	c460 <mpfr_tmp_free@plt>
   38674:	b	38d44 <mpfr_sub1sp@@Base+0x1260>
   38678:	stp	x12, x13, [x10, #8]
   3867c:	str	x14, [x10]
   38680:	b	38a04 <mpfr_sub1sp@@Base+0xf20>
   38684:	mov	x16, xzr
   38688:	cbnz	x13, 386ac <mpfr_sub1sp@@Base+0xbc8>
   3868c:	cmp	x12, #0x0
   38690:	mov	x17, #0xffffffffffffffc0    	// #-64
   38694:	mov	x18, #0xffffffffffffff80    	// #-128
   38698:	csel	x13, x15, x12, eq  // eq = none
   3869c:	csel	x12, xzr, x15, eq  // eq = none
   386a0:	csel	x15, x18, x17, eq  // eq = none
   386a4:	add	x9, x15, x9
   386a8:	mov	x15, xzr
   386ac:	clz	x17, x13
   386b0:	cbz	x17, 389d4 <mpfr_sub1sp@@Base+0xef0>
   386b4:	neg	x18, x17
   386b8:	lsl	x13, x13, x17
   386bc:	lsl	x0, x12, x17
   386c0:	lsl	x1, x15, x17
   386c4:	lsr	x12, x12, x18
   386c8:	lsr	x15, x15, x18
   386cc:	lsr	x18, x16, x18
   386d0:	lsl	x16, x16, x17
   386d4:	orr	x13, x12, x13
   386d8:	orr	x12, x15, x0
   386dc:	orr	x15, x18, x1
   386e0:	sub	x9, x9, x17
   386e4:	b	389d4 <mpfr_sub1sp@@Base+0xef0>
   386e8:	mov	x13, xzr
   386ec:	neg	x14, x8
   386f0:	mov	x12, #0xffffffffffffffff    	// #-1
   386f4:	sub	x10, x10, #0x1
   386f8:	stp	x14, x12, [x9]
   386fc:	mov	w15, #0x1                   	// #1
   38700:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38704:	ldr	x1, [x0, #2592]
   38708:	add	x0, x0, #0xa20
   3870c:	blr	x1
   38710:	mrs	x16, tpidr_el0
   38714:	ldr	x8, [x16, x0]
   38718:	cmp	x10, x8
   3871c:	b.lt	38cfc <mpfr_sub1sp@@Base+0x1218>  // b.tstop
   38720:	mov	w8, wzr
   38724:	cmp	w20, #0x5
   38728:	str	x10, [x19, #16]
   3872c:	b.eq	38d48 <mpfr_sub1sp@@Base+0x1264>  // b.none
   38730:	orr	x12, x15, x13
   38734:	cbz	x12, 38d48 <mpfr_sub1sp@@Base+0x1264>
   38738:	cmp	w20, #0x1
   3873c:	b.eq	387a8 <mpfr_sub1sp@@Base+0xcc4>  // b.none
   38740:	cbnz	w20, 38798 <mpfr_sub1sp@@Base+0xcb4>
   38744:	cbz	x13, 387a8 <mpfr_sub1sp@@Base+0xcc4>
   38748:	cbnz	x15, 38758 <mpfr_sub1sp@@Base+0xc74>
   3874c:	ldr	x8, [x9]
   38750:	lsr	x8, x8, x11
   38754:	tbz	w8, #0, 387a8 <mpfr_sub1sp@@Base+0xcc4>
   38758:	ldp	x8, x13, [x9]
   3875c:	mov	w12, #0x1                   	// #1
   38760:	lsl	x11, x12, x11
   38764:	adds	x8, x8, x11
   38768:	str	x8, [x9]
   3876c:	cinc	x8, x13, eq  // eq = none
   38770:	str	x8, [x9, #8]
   38774:	cbz	x8, 38d98 <mpfr_sub1sp@@Base+0x12b4>
   38778:	ldr	w8, [x19, #8]
   3877c:	cbz	w8, 38d48 <mpfr_sub1sp@@Base+0x1264>
   38780:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38784:	ldr	x1, [x0, #2656]
   38788:	add	x0, x0, #0xa60
   3878c:	blr	x1
   38790:	ldr	w9, [x16, x0]
   38794:	b	387c8 <mpfr_sub1sp@@Base+0xce4>
   38798:	ldr	w8, [x19, #8]
   3879c:	add	w8, w20, w8, lsr #31
   387a0:	cmp	w8, #0x3
   387a4:	b.ne	38758 <mpfr_sub1sp@@Base+0xc74>  // b.any
   387a8:	ldr	w8, [x19, #8]
   387ac:	cbz	w8, 38d48 <mpfr_sub1sp@@Base+0x1264>
   387b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   387b4:	ldr	x1, [x0, #2656]
   387b8:	add	x0, x0, #0xa60
   387bc:	blr	x1
   387c0:	ldr	w9, [x16, x0]
   387c4:	neg	w8, w8
   387c8:	orr	w9, w9, #0x8
   387cc:	str	w9, [x16, x0]
   387d0:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   387d4:	ldr	x9, [x27, #24]
   387d8:	add	x8, x10, #0x3f
   387dc:	cmp	x10, #0x0
   387e0:	csel	x8, x8, x10, lt  // lt = tstop
   387e4:	sub	x8, x13, x8, asr #6
   387e8:	ldr	x11, [x9, x8, lsl #3]
   387ec:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   387f0:	lsr	x10, x12, x10
   387f4:	sub	x10, x10, #0x1
   387f8:	tst	x11, x10
   387fc:	b.ne	38818 <mpfr_sub1sp@@Base+0xd34>  // b.any
   38800:	sub	x9, x9, #0x8
   38804:	subs	x10, x8, #0x1
   38808:	b.lt	38558 <mpfr_sub1sp@@Base+0xa74>  // b.tstop
   3880c:	ldr	x11, [x9, x8, lsl #3]
   38810:	mov	x8, x10
   38814:	cbz	x11, 38804 <mpfr_sub1sp@@Base+0xd20>
   38818:	mov	x28, x15
   3881c:	mov	w24, #0x1                   	// #1
   38820:	ldr	x1, [x21, #24]
   38824:	ldr	x8, [x23, x13, lsl #3]
   38828:	ldr	x9, [x1, x13, lsl #3]
   3882c:	sub	x8, x9, x8
   38830:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   38834:	cmp	x8, x9
   38838:	csetm	x8, hi  // hi = pmore
   3883c:	stur	x8, [x29, #-32]
   38840:	b.hi	3889c <mpfr_sub1sp@@Base+0xdb8>  // b.pmore
   38844:	stur	x8, [x29, #-40]
   38848:	cbz	w24, 388a0 <mpfr_sub1sp@@Base+0xdbc>
   3884c:	ldur	x10, [x29, #-48]
   38850:	ldr	x9, [x27, #24]
   38854:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   38858:	mov	w13, #0x1                   	// #1
   3885c:	add	x11, x10, #0x1
   38860:	add	x8, x10, #0x40
   38864:	cmp	x11, #0x0
   38868:	csinc	x8, x8, x10, lt  // lt = tstop
   3886c:	ldur	x10, [x29, #-16]
   38870:	lsr	x11, x12, x11
   38874:	sub	x8, x10, x8, asr #6
   38878:	ldr	x10, [x9, x8, lsl #3]
   3887c:	and	x12, x10, x11
   38880:	stp	x12, x13, [x29, #-40]
   38884:	cbz	x12, 38894 <mpfr_sub1sp@@Base+0xdb0>
   38888:	sub	x11, x11, #0x1
   3888c:	and	x10, x10, x11
   38890:	cbz	x10, 39424 <mpfr_sub1sp@@Base+0x1940>
   38894:	ldur	x14, [x29, #-24]
   38898:	b	388a0 <mpfr_sub1sp@@Base+0xdbc>
   3889c:	stur	x8, [x29, #-40]
   388a0:	ldr	x8, [x23]
   388a4:	mov	w9, #0x1                   	// #1
   388a8:	lsl	x25, x9, x14
   388ac:	neg	x9, x25
   388b0:	and	x8, x8, x9
   388b4:	str	x8, [x23]
   388b8:	ldr	x21, [x19, #24]
   388bc:	mov	x2, x23
   388c0:	mov	x3, x22
   388c4:	mov	x0, x21
   388c8:	bl	bf10 <__gmpn_sub_n@plt>
   388cc:	ldur	x10, [x29, #-16]
   388d0:	ldr	x8, [x21, x10, lsl #3]
   388d4:	tbz	x8, #63, 38ee8 <mpfr_sub1sp@@Base+0x1404>
   388d8:	cmp	w20, #0x5
   388dc:	b.ne	38f18 <mpfr_sub1sp@@Base+0x1434>  // b.any
   388e0:	ldr	x8, [x21, x10, lsl #3]
   388e4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   388e8:	cmp	x8, x9
   388ec:	b.eq	38db4 <mpfr_sub1sp@@Base+0x12d0>  // b.none
   388f0:	orr	x8, x28, x24
   388f4:	cmp	x8, #0x0
   388f8:	cset	w20, ne  // ne = any
   388fc:	str	x26, [x19, #16]
   38900:	ldur	x0, [x29, #-8]
   38904:	cbnz	x0, 38dac <mpfr_sub1sp@@Base+0x12c8>
   38908:	ldr	w8, [x19, #8]
   3890c:	mul	w8, w8, w20
   38910:	cbz	w8, 38d48 <mpfr_sub1sp@@Base+0x1264>
   38914:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38918:	ldr	x1, [x0, #2656]
   3891c:	add	x0, x0, #0xa60
   38920:	blr	x1
   38924:	mrs	x9, tpidr_el0
   38928:	ldr	w10, [x9, x0]
   3892c:	orr	w10, w10, #0x8
   38930:	str	w10, [x9, x0]
   38934:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   38938:	ldp	x18, x15, [x17]
   3893c:	ldr	x17, [x17, #16]
   38940:	neg	x0, x16
   38944:	cmp	x18, #0x0
   38948:	lsl	x1, x15, x0
   3894c:	lsl	x18, x17, x0
   38950:	lsr	x15, x15, x16
   38954:	cset	w16, ne  // ne = any
   38958:	orr	x16, x1, x16
   3895c:	orr	x15, x18, x15
   38960:	ldp	x0, x18, [x12]
   38964:	lsr	x13, x17, x13
   38968:	ldr	x17, [x12, #16]
   3896c:	subs	x15, x0, x15
   38970:	sub	x12, x18, x13
   38974:	cset	w13, cc  // cc = lo, ul, last
   38978:	sub	x12, x12, x13
   3897c:	cmp	x12, x18
   38980:	cset	w0, eq  // eq = none
   38984:	cset	w18, hi  // hi = pmore
   38988:	and	w13, w13, w0
   3898c:	orr	w13, w18, w13
   38990:	sub	x13, x17, x13
   38994:	cbz	x16, 389bc <mpfr_sub1sp@@Base+0xed8>
   38998:	cmp	x15, #0x0
   3899c:	orr	x17, x12, x15
   389a0:	cset	w18, eq  // eq = none
   389a4:	cmp	x17, #0x0
   389a8:	cset	w17, eq  // eq = none
   389ac:	sub	x15, x15, #0x1
   389b0:	sub	x12, x12, x18
   389b4:	sub	x13, x13, x17
   389b8:	neg	x16, x16
   389bc:	tbnz	x13, #63, 389d4 <mpfr_sub1sp@@Base+0xef0>
   389c0:	extr	x13, x13, x12, #63
   389c4:	extr	x12, x12, x15, #63
   389c8:	extr	x15, x15, x16, #63
   389cc:	lsl	x16, x16, #1
   389d0:	sub	x9, x9, #0x1
   389d4:	mov	w17, #0xbf                  	// #191
   389d8:	mov	w18, #0x1                   	// #1
   389dc:	neg	x8, x8
   389e0:	sub	x17, x17, x28
   389e4:	and	x0, x15, x14
   389e8:	and	x14, x15, x8
   389ec:	lsl	x8, x18, x17
   389f0:	and	x15, x15, x8
   389f4:	eor	x8, x0, x15
   389f8:	stp	x12, x13, [x10, #8]
   389fc:	orr	x16, x8, x16
   38a00:	str	x14, [x10]
   38a04:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38a08:	ldr	x1, [x0, #2592]
   38a0c:	add	x0, x0, #0xa20
   38a10:	blr	x1
   38a14:	mrs	x17, tpidr_el0
   38a18:	ldr	x8, [x17, x0]
   38a1c:	cmp	x9, x8
   38a20:	b.lt	38d6c <mpfr_sub1sp@@Base+0x1288>  // b.tstop
   38a24:	mov	w8, wzr
   38a28:	cmp	w20, #0x5
   38a2c:	str	x9, [x19, #16]
   38a30:	b.eq	38d48 <mpfr_sub1sp@@Base+0x1264>  // b.none
   38a34:	orr	x12, x16, x15
   38a38:	cbz	x12, 38d48 <mpfr_sub1sp@@Base+0x1264>
   38a3c:	cmp	w20, #0x1
   38a40:	b.eq	38abc <mpfr_sub1sp@@Base+0xfd8>  // b.none
   38a44:	cbnz	w20, 38aac <mpfr_sub1sp@@Base+0xfc8>
   38a48:	cbz	x15, 38abc <mpfr_sub1sp@@Base+0xfd8>
   38a4c:	cbnz	x16, 38a5c <mpfr_sub1sp@@Base+0xf78>
   38a50:	ldr	x8, [x10]
   38a54:	lsr	x8, x8, x11
   38a58:	tbz	w8, #0, 38abc <mpfr_sub1sp@@Base+0xfd8>
   38a5c:	ldp	x12, x13, [x10]
   38a60:	mov	w8, #0x1                   	// #1
   38a64:	lsl	x8, x8, x11
   38a68:	ldr	x14, [x10, #16]
   38a6c:	adds	x8, x12, x8
   38a70:	cinc	x11, x13, eq  // eq = none
   38a74:	stp	x8, x11, [x10]
   38a78:	orr	x8, x11, x8
   38a7c:	cmp	x8, #0x0
   38a80:	cinc	x8, x14, eq  // eq = none
   38a84:	str	x8, [x10, #16]
   38a88:	cbz	x8, 390c0 <mpfr_sub1sp@@Base+0x15dc>
   38a8c:	ldr	w8, [x19, #8]
   38a90:	cbz	w8, 38d48 <mpfr_sub1sp@@Base+0x1264>
   38a94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38a98:	ldr	x1, [x0, #2656]
   38a9c:	add	x0, x0, #0xa60
   38aa0:	blr	x1
   38aa4:	ldr	w9, [x17, x0]
   38aa8:	b	38adc <mpfr_sub1sp@@Base+0xff8>
   38aac:	ldr	w8, [x19, #8]
   38ab0:	add	w8, w20, w8, lsr #31
   38ab4:	cmp	w8, #0x3
   38ab8:	b.ne	38a5c <mpfr_sub1sp@@Base+0xf78>  // b.any
   38abc:	ldr	w8, [x19, #8]
   38ac0:	cbz	w8, 38d48 <mpfr_sub1sp@@Base+0x1264>
   38ac4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38ac8:	ldr	x1, [x0, #2656]
   38acc:	add	x0, x0, #0xa60
   38ad0:	blr	x1
   38ad4:	ldr	w9, [x17, x0]
   38ad8:	neg	w8, w8
   38adc:	orr	w9, w9, #0x8
   38ae0:	str	w9, [x17, x0]
   38ae4:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   38ae8:	mov	x11, xzr
   38aec:	mov	x12, xzr
   38af0:	b	38b7c <mpfr_sub1sp@@Base+0x1098>
   38af4:	ldp	x13, x15, [x12]
   38af8:	ldr	x18, [x12, #16]
   38afc:	subs	x14, x13, x8
   38b00:	cset	w13, cc  // cc = lo, ul, last
   38b04:	sub	x12, x15, x13
   38b08:	cmp	x12, x15
   38b0c:	cset	w13, hi  // hi = pmore
   38b10:	subs	x13, x18, x13
   38b14:	b.mi	38cb4 <mpfr_sub1sp@@Base+0x11d0>  // b.first
   38b18:	cmp	x28, #0xbf
   38b1c:	mov	w15, #0x1                   	// #1
   38b20:	b.lt	38b48 <mpfr_sub1sp@@Base+0x1064>  // b.tstop
   38b24:	cmp	x16, #0xc0
   38b28:	b.hi	38b48 <mpfr_sub1sp@@Base+0x1064>  // b.pmore
   38b2c:	ldr	x12, [x17, #16]
   38b30:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   38b34:	cmp	x12, x13
   38b38:	b.ne	38b44 <mpfr_sub1sp@@Base+0x1060>  // b.any
   38b3c:	ldr	x12, [x17, #8]
   38b40:	cbz	x12, 38cc8 <mpfr_sub1sp@@Base+0x11e4>
   38b44:	mov	x15, xzr
   38b48:	neg	x14, x8
   38b4c:	mov	x12, #0xffffffffffffffff    	// #-1
   38b50:	sub	x9, x9, #0x1
   38b54:	mov	w16, #0x1                   	// #1
   38b58:	stp	x14, x12, [x10]
   38b5c:	str	x12, [x10, #16]
   38b60:	mov	x13, #0xffffffffffffffff    	// #-1
   38b64:	b	38a04 <mpfr_sub1sp@@Base+0xf20>
   38b68:	ldr	x8, [x8]
   38b6c:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   38b70:	cmp	x8, x11
   38b74:	cset	w11, eq  // eq = none
   38b78:	cset	w12, hi  // hi = pmore
   38b7c:	mov	x8, #0xffffffffffffffff    	// #-1
   38b80:	str	x8, [x9]
   38b84:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38b88:	ldr	x1, [x0, #2592]
   38b8c:	add	x0, x0, #0xa20
   38b90:	blr	x1
   38b94:	mrs	x13, tpidr_el0
   38b98:	ldr	x14, [x13, x0]
   38b9c:	cmp	x10, x14
   38ba0:	b.lt	38d24 <mpfr_sub1sp@@Base+0x1240>  // b.tstop
   38ba4:	mov	w8, wzr
   38ba8:	cmp	w20, #0x5
   38bac:	str	x10, [x19, #16]
   38bb0:	b.eq	38d48 <mpfr_sub1sp@@Base+0x1264>  // b.none
   38bb4:	orr	x14, x12, x11
   38bb8:	cbz	x14, 38d48 <mpfr_sub1sp@@Base+0x1264>
   38bbc:	cmp	w20, #0x1
   38bc0:	b.eq	38c18 <mpfr_sub1sp@@Base+0x1134>  // b.none
   38bc4:	cbnz	w20, 38c0c <mpfr_sub1sp@@Base+0x1128>
   38bc8:	cbz	x11, 38c18 <mpfr_sub1sp@@Base+0x1134>
   38bcc:	cbnz	x12, 38bd8 <mpfr_sub1sp@@Base+0x10f4>
   38bd0:	ldrb	w8, [x9]
   38bd4:	tbz	w8, #0, 38c18 <mpfr_sub1sp@@Base+0x1134>
   38bd8:	ldr	x8, [x9]
   38bdc:	adds	x8, x8, #0x1
   38be0:	str	x8, [x9]
   38be4:	b.cs	38f5c <mpfr_sub1sp@@Base+0x1478>  // b.hs, b.nlast
   38be8:	cbz	w2, 38d44 <mpfr_sub1sp@@Base+0x1260>
   38bec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38bf0:	ldr	x1, [x0, #2656]
   38bf4:	add	x0, x0, #0xa60
   38bf8:	blr	x1
   38bfc:	ldr	w8, [x13, x0]
   38c00:	orr	w8, w8, #0x8
   38c04:	str	w8, [x13, x0]
   38c08:	b	380e4 <mpfr_sub1sp@@Base+0x600>
   38c0c:	add	w8, w20, w2, lsr #31
   38c10:	cmp	w8, #0x3
   38c14:	b.ne	38bd8 <mpfr_sub1sp@@Base+0x10f4>  // b.any
   38c18:	cbz	w2, 38d44 <mpfr_sub1sp@@Base+0x1260>
   38c1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38c20:	ldr	x1, [x0, #2656]
   38c24:	add	x0, x0, #0xa60
   38c28:	blr	x1
   38c2c:	ldr	w8, [x13, x0]
   38c30:	orr	w8, w8, #0x8
   38c34:	str	w8, [x13, x0]
   38c38:	neg	w8, w2
   38c3c:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   38c40:	ldp	x15, x13, [x17, #8]
   38c44:	ldr	x17, [x17]
   38c48:	neg	x18, x16
   38c4c:	cmp	x15, #0x0
   38c50:	lsl	x18, x13, x18
   38c54:	cset	w15, ne  // ne = any
   38c58:	cmp	x17, #0x0
   38c5c:	orr	x15, x18, x15
   38c60:	cset	w17, ne  // ne = any
   38c64:	orr	x17, x15, x17
   38c68:	lsr	x13, x13, x16
   38c6c:	ldp	x16, x18, [x12]
   38c70:	cmp	x17, #0x0
   38c74:	cset	w0, ne  // ne = any
   38c78:	sub	x13, x16, x13
   38c7c:	sub	x15, x13, x0
   38c80:	cmp	x15, x16
   38c84:	cset	w16, eq  // eq = none
   38c88:	cset	w13, hi  // hi = pmore
   38c8c:	and	w16, w0, w16
   38c90:	orr	w13, w13, w16
   38c94:	ldr	x16, [x12, #16]
   38c98:	sub	x12, x18, x13
   38c9c:	cmp	x12, x18
   38ca0:	cset	w13, hi  // hi = pmore
   38ca4:	subs	x13, x16, x13
   38ca8:	neg	x16, x17
   38cac:	b.pl	389c0 <mpfr_sub1sp@@Base+0xedc>  // b.nfrst
   38cb0:	b	389d4 <mpfr_sub1sp@@Base+0xef0>
   38cb4:	mov	w15, #0x1                   	// #1
   38cb8:	mov	w16, #0x1                   	// #1
   38cbc:	stp	x14, x12, [x10]
   38cc0:	str	x13, [x10, #16]
   38cc4:	b	38a04 <mpfr_sub1sp@@Base+0xf20>
   38cc8:	ldr	x12, [x17]
   38ccc:	cmp	x12, #0x0
   38cd0:	cset	w15, eq  // eq = none
   38cd4:	b	38b48 <mpfr_sub1sp@@Base+0x1064>
   38cd8:	cbnz	w20, 38ff4 <mpfr_sub1sp@@Base+0x1510>
   38cdc:	sub	x9, x15, #0x1
   38ce0:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   38ce4:	cmp	x10, x9
   38ce8:	cset	w9, lt  // lt = tstop
   38cec:	cmp	x8, x11
   38cf0:	cset	w8, eq  // eq = none
   38cf4:	orr	w20, w8, w9
   38cf8:	b	38ff4 <mpfr_sub1sp@@Base+0x1510>
   38cfc:	cbnz	w20, 38ff0 <mpfr_sub1sp@@Base+0x150c>
   38d00:	sub	x8, x8, #0x1
   38d04:	cmp	x10, x8
   38d08:	b.lt	38fec <mpfr_sub1sp@@Base+0x1508>  // b.tstop
   38d0c:	mov	w20, wzr
   38d10:	cbnz	x14, 38ff0 <mpfr_sub1sp@@Base+0x150c>
   38d14:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   38d18:	cmp	x12, x8
   38d1c:	b.eq	38fec <mpfr_sub1sp@@Base+0x1508>  // b.none
   38d20:	b	38ff0 <mpfr_sub1sp@@Base+0x150c>
   38d24:	cbnz	w20, 38ff4 <mpfr_sub1sp@@Base+0x1510>
   38d28:	sub	x9, x14, #0x1
   38d2c:	b	38ce0 <mpfr_sub1sp@@Base+0x11fc>
   38d30:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   38d34:	add	x10, x10, #0x1
   38d38:	str	x8, [x9]
   38d3c:	str	x10, [x19, #16]
   38d40:	cbnz	w2, 380c8 <mpfr_sub1sp@@Base+0x5e4>
   38d44:	mov	w8, wzr
   38d48:	mov	w0, w8
   38d4c:	mov	sp, x29
   38d50:	ldp	x20, x19, [sp, #80]
   38d54:	ldp	x22, x21, [sp, #64]
   38d58:	ldp	x24, x23, [sp, #48]
   38d5c:	ldp	x26, x25, [sp, #32]
   38d60:	ldp	x28, x27, [sp, #16]
   38d64:	ldp	x29, x30, [sp], #96
   38d68:	ret
   38d6c:	cbnz	w20, 38ff0 <mpfr_sub1sp@@Base+0x150c>
   38d70:	sub	x8, x8, #0x1
   38d74:	cmp	x9, x8
   38d78:	b.lt	38fec <mpfr_sub1sp@@Base+0x1508>  // b.tstop
   38d7c:	orr	x8, x12, x14
   38d80:	mov	w20, wzr
   38d84:	cbnz	x8, 38ff0 <mpfr_sub1sp@@Base+0x150c>
   38d88:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   38d8c:	cmp	x13, x8
   38d90:	b.eq	38fec <mpfr_sub1sp@@Base+0x1508>  // b.none
   38d94:	b	38ff0 <mpfr_sub1sp@@Base+0x150c>
   38d98:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   38d9c:	add	x10, x10, #0x1
   38da0:	str	x8, [x9, #8]
   38da4:	str	x10, [x19, #16]
   38da8:	b	38778 <mpfr_sub1sp@@Base+0xc94>
   38dac:	bl	c460 <mpfr_tmp_free@plt>
   38db0:	b	38908 <mpfr_sub1sp@@Base+0xe24>
   38db4:	mov	x8, x10
   38db8:	subs	x9, x8, #0x1
   38dbc:	b.lt	39008 <mpfr_sub1sp@@Base+0x1524>  // b.tstop
   38dc0:	add	x8, x21, x8, lsl #3
   38dc4:	ldur	x10, [x8, #-8]
   38dc8:	mov	x8, x9
   38dcc:	cbz	x10, 38db8 <mpfr_sub1sp@@Base+0x12d4>
   38dd0:	b	388f0 <mpfr_sub1sp@@Base+0xe0c>
   38dd4:	mov	x8, x21
   38dd8:	ldr	x21, [x19, #24]
   38ddc:	neg	w10, w28
   38de0:	cmp	x28, x25
   38de4:	and	x10, x10, #0x3f
   38de8:	stur	x10, [x29, #-24]
   38dec:	b.eq	39250 <mpfr_sub1sp@@Base+0x176c>  // b.none
   38df0:	add	x9, x28, #0x1
   38df4:	cmp	x25, x9
   38df8:	cset	w10, eq  // eq = none
   38dfc:	stur	x10, [x29, #-40]
   38e00:	mov	x10, #0xffffffffffffffff    	// #-1
   38e04:	stur	x10, [x29, #-32]
   38e08:	cbnz	w20, 38e14 <mpfr_sub1sp@@Base+0x1330>
   38e0c:	cmp	x25, x9
   38e10:	b.eq	392a0 <mpfr_sub1sp@@Base+0x17bc>  // b.none
   38e14:	ldr	x1, [x8, #24]
   38e18:	cmp	x21, x1
   38e1c:	b.eq	38e2c <mpfr_sub1sp@@Base+0x1348>  // b.none
   38e20:	lsl	x2, x22, #3
   38e24:	mov	x0, x21
   38e28:	bl	bad0 <memcpy@plt>
   38e2c:	mov	x28, xzr
   38e30:	mov	w24, #0x1                   	// #1
   38e34:	cbz	w20, 38f24 <mpfr_sub1sp@@Base+0x1440>
   38e38:	cmp	w20, #0x5
   38e3c:	b.eq	38f24 <mpfr_sub1sp@@Base+0x1440>  // b.none
   38e40:	ldr	w8, [x19, #8]
   38e44:	ldur	x10, [x29, #-16]
   38e48:	mov	x28, xzr
   38e4c:	mov	w24, #0x1                   	// #1
   38e50:	add	w8, w20, w8, lsr #31
   38e54:	cmp	w8, #0x3
   38e58:	csinc	w20, w20, wzr, ne  // ne = any
   38e5c:	cmp	w20, #0x1
   38e60:	mov	w8, #0x1                   	// #1
   38e64:	b.ne	388e0 <mpfr_sub1sp@@Base+0xdfc>  // b.any
   38e68:	b	391ec <mpfr_sub1sp@@Base+0x1708>
   38e6c:	sub	x0, x29, #0x8
   38e70:	bl	be70 <mpfr_tmp_allocate@plt>
   38e74:	mov	x23, x0
   38e78:	b	383dc <mpfr_sub1sp@@Base+0x8f8>
   38e7c:	ldr	x8, [x27, #24]
   38e80:	add	x1, x8, x24, lsl #3
   38e84:	cmp	x1, x23
   38e88:	b.eq	38e9c <mpfr_sub1sp@@Base+0x13b8>  // b.none
   38e8c:	sub	x8, x22, x24
   38e90:	lsl	x2, x8, #3
   38e94:	mov	x0, x23
   38e98:	bl	bad0 <memcpy@plt>
   38e9c:	add	x8, x23, x22, lsl #3
   38ea0:	sub	x0, x8, x24, lsl #3
   38ea4:	lsl	x2, x24, #3
   38ea8:	b	38f50 <mpfr_sub1sp@@Base+0x146c>
   38eac:	ldur	x12, [x29, #-48]
   38eb0:	ldr	x9, [x27, #24]
   38eb4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   38eb8:	add	x8, x12, #0x3f
   38ebc:	cmp	x12, #0x0
   38ec0:	csel	x8, x8, x12, lt  // lt = tstop
   38ec4:	sub	x8, x13, x8, asr #6
   38ec8:	ldr	x10, [x9, x8, lsl #3]
   38ecc:	lsr	x11, x11, x12
   38ed0:	sub	x12, x11, #0x1
   38ed4:	tst	x10, x12
   38ed8:	and	x28, x10, x11
   38edc:	b.eq	390a0 <mpfr_sub1sp@@Base+0x15bc>  // b.none
   38ee0:	mov	w24, #0x1                   	// #1
   38ee4:	b	39158 <mpfr_sub1sp@@Base+0x1674>
   38ee8:	mov	w3, #0x1                   	// #1
   38eec:	mov	x0, x21
   38ef0:	mov	x1, x21
   38ef4:	mov	x2, x22
   38ef8:	mov	x23, x21
   38efc:	bl	bd70 <__gmpn_lshift@plt>
   38f00:	cbnz	x28, 392c4 <mpfr_sub1sp@@Base+0x17e0>
   38f04:	ldp	x28, x24, [x29, #-40]
   38f08:	ldur	x10, [x29, #-16]
   38f0c:	sub	x26, x26, #0x1
   38f10:	mov	x21, x23
   38f14:	b	388d8 <mpfr_sub1sp@@Base+0xdf4>
   38f18:	cbnz	w20, 3931c <mpfr_sub1sp@@Base+0x1838>
   38f1c:	cbnz	x28, 39304 <mpfr_sub1sp@@Base+0x1820>
   38f20:	mov	w20, wzr
   38f24:	ldur	x10, [x29, #-16]
   38f28:	b	388e0 <mpfr_sub1sp@@Base+0xdfc>
   38f2c:	add	x1, x1, x24, lsl #3
   38f30:	lsl	x8, x24, #3
   38f34:	sub	x2, x22, x24
   38f38:	mov	x0, x23
   38f3c:	stur	x8, [x29, #-32]
   38f40:	bl	bd90 <__gmpn_rshift@plt>
   38f44:	ldur	x2, [x29, #-32]
   38f48:	add	x8, x23, x22, lsl #3
   38f4c:	sub	x0, x8, x24, lsl #3
   38f50:	mov	w1, wzr
   38f54:	bl	c1b0 <memset@plt>
   38f58:	b	383fc <mpfr_sub1sp@@Base+0x918>
   38f5c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   38f60:	add	x10, x10, #0x1
   38f64:	str	x8, [x9]
   38f68:	str	x10, [x19, #16]
   38f6c:	cbnz	w2, 38bec <mpfr_sub1sp@@Base+0x1108>
   38f70:	b	38d44 <mpfr_sub1sp@@Base+0x1260>
   38f74:	mov	x24, xzr
   38f78:	mov	x22, xzr
   38f7c:	sub	x8, x9, #0x1
   38f80:	ldr	x9, [x23, x8, lsl #3]
   38f84:	add	x22, x22, #0x40
   38f88:	sub	x24, x24, #0x8
   38f8c:	sub	x8, x8, #0x1
   38f90:	cbz	x9, 38f80 <mpfr_sub1sp@@Base+0x149c>
   38f94:	clz	x21, x9
   38f98:	sub	x0, x23, x24
   38f9c:	add	x2, x8, #0x2
   38fa0:	mov	x1, x23
   38fa4:	cbz	x21, 39134 <mpfr_sub1sp@@Base+0x1650>
   38fa8:	mov	w3, w21
   38fac:	bl	bd70 <__gmpn_lshift@plt>
   38fb0:	b	39138 <mpfr_sub1sp@@Base+0x1654>
   38fb4:	ldur	x0, [x29, #-8]
   38fb8:	cbnz	x0, 39344 <mpfr_sub1sp@@Base+0x1860>
   38fbc:	cbnz	w20, 38ff0 <mpfr_sub1sp@@Base+0x150c>
   38fc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   38fc4:	ldr	x1, [x0, #2592]
   38fc8:	add	x0, x0, #0xa20
   38fcc:	blr	x1
   38fd0:	ldr	x8, [x21, x0]
   38fd4:	sub	x8, x8, #0x1
   38fd8:	cmp	x26, x8
   38fdc:	b.lt	38fec <mpfr_sub1sp@@Base+0x1508>  // b.tstop
   38fe0:	mov	x0, x19
   38fe4:	bl	bfb0 <mpfr_powerof2_raw@plt>
   38fe8:	cbz	w0, 39248 <mpfr_sub1sp@@Base+0x1764>
   38fec:	mov	w20, #0x1                   	// #1
   38ff0:	ldr	w2, [x19, #8]
   38ff4:	mov	x0, x19
   38ff8:	mov	w1, w20
   38ffc:	bl	c420 <mpfr_underflow@plt>
   39000:	mov	w8, w0
   39004:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   39008:	cbz	x28, 39014 <mpfr_sub1sp@@Base+0x1530>
   3900c:	cmp	w20, #0x1
   39010:	b.ne	3902c <mpfr_sub1sp@@Base+0x1548>  // b.any
   39014:	ldur	x8, [x29, #-32]
   39018:	cbz	x8, 388f0 <mpfr_sub1sp@@Base+0xe0c>
   3901c:	ldur	x8, [x29, #-40]
   39020:	cbz	x8, 388f0 <mpfr_sub1sp@@Base+0xe0c>
   39024:	cbnz	x28, 388f0 <mpfr_sub1sp@@Base+0xe0c>
   39028:	cbnz	w20, 388f0 <mpfr_sub1sp@@Base+0xe0c>
   3902c:	ldur	x10, [x29, #-24]
   39030:	ldr	x8, [x21]
   39034:	mov	w9, #0x1                   	// #1
   39038:	mov	x11, x21
   3903c:	lsl	x9, x9, x10
   39040:	subs	x8, x8, x9
   39044:	str	x8, [x21]
   39048:	b.cs	39074 <mpfr_sub1sp@@Base+0x1590>  // b.hs, b.nlast
   3904c:	mov	w8, #0x1                   	// #1
   39050:	ldur	x9, [x29, #-16]
   39054:	cmp	x8, x9
   39058:	b.gt	39074 <mpfr_sub1sp@@Base+0x1590>
   3905c:	ldr	x9, [x11, x8, lsl #3]
   39060:	mov	x12, x11
   39064:	sub	x10, x9, #0x1
   39068:	str	x10, [x11, x8, lsl #3]
   3906c:	add	x8, x8, #0x1
   39070:	cbz	x9, 39050 <mpfr_sub1sp@@Base+0x156c>
   39074:	ldur	x10, [x29, #-16]
   39078:	cmp	w20, #0x0
   3907c:	mov	w9, #0xffffffff            	// #-1
   39080:	cneg	w9, w9, ne  // ne = any
   39084:	ldr	x8, [x11, x10, lsl #3]
   39088:	cmp	x24, #0x0
   3908c:	sub	x26, x26, #0x1
   39090:	csel	w20, wzr, w9, eq  // eq = none
   39094:	orr	x8, x8, #0x8000000000000000
   39098:	str	x8, [x11, x10, lsl #3]
   3909c:	b	388fc <mpfr_sub1sp@@Base+0xe18>
   390a0:	sub	x9, x9, #0x8
   390a4:	subs	x10, x8, #0x1
   390a8:	b.lt	39154 <mpfr_sub1sp@@Base+0x1670>  // b.tstop
   390ac:	ldr	x11, [x9, x8, lsl #3]
   390b0:	mov	w24, #0x1                   	// #1
   390b4:	mov	x8, x10
   390b8:	cbz	x11, 390a4 <mpfr_sub1sp@@Base+0x15c0>
   390bc:	b	39158 <mpfr_sub1sp@@Base+0x1674>
   390c0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   390c4:	add	x9, x9, #0x1
   390c8:	str	x8, [x10, #16]
   390cc:	str	x9, [x19, #16]
   390d0:	b	38a8c <mpfr_sub1sp@@Base+0xfa8>
   390d4:	sub	x0, x29, #0x8
   390d8:	bl	be70 <mpfr_tmp_allocate@plt>
   390dc:	ldr	x25, [x27, #24]
   390e0:	mov	x23, x0
   390e4:	b	38328 <mpfr_sub1sp@@Base+0x844>
   390e8:	sub	x9, x25, #0x8
   390ec:	sub	x10, x24, #0x8
   390f0:	mov	x11, x14
   390f4:	subs	x13, x11, #0x1
   390f8:	lsl	x12, x8, #63
   390fc:	b.lt	39160 <mpfr_sub1sp@@Base+0x167c>  // b.tstop
   39100:	ldr	x8, [x9, x11, lsl #3]
   39104:	ldr	x11, [x10, x11, lsl #3]
   39108:	orr	x12, x12, x8, lsr #1
   3910c:	cmp	x11, x12
   39110:	mov	x11, x13
   39114:	b.eq	390f4 <mpfr_sub1sp@@Base+0x1610>  // b.none
   39118:	b.hi	382e0 <mpfr_sub1sp@@Base+0x7fc>  // b.pmore
   3911c:	b	385c8 <mpfr_sub1sp@@Base+0xae4>
   39120:	sub	x0, x29, #0x8
   39124:	bl	be70 <mpfr_tmp_allocate@plt>
   39128:	ldr	x24, [x21, #24]
   3912c:	mov	x21, x0
   39130:	b	385ec <mpfr_sub1sp@@Base+0xb08>
   39134:	bl	bba0 <__gmpn_copyd@plt>
   39138:	neg	x2, x24
   3913c:	mov	x0, x23
   39140:	mov	w1, wzr
   39144:	bl	c1b0 <memset@plt>
   39148:	orr	x8, x21, x22
   3914c:	sub	x26, x26, x8
   39150:	b	38644 <mpfr_sub1sp@@Base+0xb60>
   39154:	mov	w24, wzr
   39158:	ldp	x14, x13, [x29, #-24]
   3915c:	b	38820 <mpfr_sub1sp@@Base+0xd3c>
   39160:	ldr	x20, [x19, #24]
   39164:	cbnz	x12, 393c0 <mpfr_sub1sp@@Base+0x18dc>
   39168:	ldur	x21, [x29, #-16]
   3916c:	mov	x0, x20
   39170:	mov	w1, wzr
   39174:	lsl	x2, x21, #3
   39178:	bl	c1b0 <memset@plt>
   3917c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   39180:	str	x8, [x20, x21, lsl #3]
   39184:	mov	w8, wzr
   39188:	str	x26, [x19, #16]
   3918c:	b	38d48 <mpfr_sub1sp@@Base+0x1264>
   39190:	ldur	x10, [x29, #-16]
   39194:	ldur	x21, [x29, #-48]
   39198:	mov	x8, #0xffffffffffffffff    	// #-1
   3919c:	stur	x8, [x29, #-32]
   391a0:	mov	x8, #0xffffffffffffffff    	// #-1
   391a4:	mov	x24, xzr
   391a8:	mov	w28, #0x1                   	// #1
   391ac:	stur	x8, [x29, #-40]
   391b0:	b	388e0 <mpfr_sub1sp@@Base+0xdfc>
   391b4:	ldr	w8, [x19, #8]
   391b8:	ldur	x10, [x29, #-16]
   391bc:	ldur	x21, [x29, #-48]
   391c0:	mov	x9, #0xffffffffffffffff    	// #-1
   391c4:	add	w8, w20, w8, lsr #31
   391c8:	cmp	w8, #0x3
   391cc:	csinc	w20, w20, wzr, ne  // ne = any
   391d0:	mov	w28, #0x1                   	// #1
   391d4:	stur	x9, [x29, #-40]
   391d8:	cmp	w20, #0x1
   391dc:	mov	w8, #0x1                   	// #1
   391e0:	mov	x9, #0xffffffffffffffff    	// #-1
   391e4:	stur	x9, [x29, #-32]
   391e8:	b.ne	388e0 <mpfr_sub1sp@@Base+0xdfc>  // b.any
   391ec:	ldur	x11, [x29, #-24]
   391f0:	ldr	x10, [x21]
   391f4:	mov	w9, #0x1                   	// #1
   391f8:	mov	x13, x21
   391fc:	lsl	x9, x9, x11
   39200:	subs	x10, x10, x9
   39204:	str	x10, [x21]
   39208:	b.cs	39234 <mpfr_sub1sp@@Base+0x1750>  // b.hs, b.nlast
   3920c:	mov	w10, #0x1                   	// #1
   39210:	ldur	x11, [x29, #-16]
   39214:	cmp	x10, x11
   39218:	b.gt	39234 <mpfr_sub1sp@@Base+0x1750>
   3921c:	ldr	x11, [x13, x10, lsl #3]
   39220:	mov	x14, x13
   39224:	sub	x12, x11, #0x1
   39228:	str	x12, [x13, x10, lsl #3]
   3922c:	add	x10, x10, #0x1
   39230:	cbz	x11, 39210 <mpfr_sub1sp@@Base+0x172c>
   39234:	ldur	x10, [x29, #-16]
   39238:	ldr	x10, [x13, x10, lsl #3]
   3923c:	tbz	x10, #63, 39350 <mpfr_sub1sp@@Base+0x186c>
   39240:	mov	w20, #0xffffffff            	// #-1
   39244:	b	388fc <mpfr_sub1sp@@Base+0xe18>
   39248:	mov	w20, wzr
   3924c:	b	38ff0 <mpfr_sub1sp@@Base+0x150c>
   39250:	ldr	x10, [x27, #24]
   39254:	ldur	x11, [x29, #-16]
   39258:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3925c:	ldr	x11, [x10, x11, lsl #3]
   39260:	cmp	x11, x12
   39264:	and	x11, x11, #0x4000000000000000
   39268:	stur	x11, [x29, #-40]
   3926c:	b.eq	394ac <mpfr_sub1sp@@Base+0x19c8>  // b.none
   39270:	mov	w24, #0x1                   	// #1
   39274:	ldr	x1, [x8, #24]
   39278:	cmp	w20, #0x5
   3927c:	b.ne	393d8 <mpfr_sub1sp@@Base+0x18f4>  // b.any
   39280:	cmp	x21, x1
   39284:	b.eq	39294 <mpfr_sub1sp@@Base+0x17b0>  // b.none
   39288:	lsl	x2, x22, #3
   3928c:	mov	x0, x21
   39290:	bl	bad0 <memcpy@plt>
   39294:	mov	w8, #0x5                   	// #5
   39298:	mov	w28, #0x1                   	// #1
   3929c:	b	391ec <mpfr_sub1sp@@Base+0x1708>
   392a0:	ldr	x9, [x27, #24]
   392a4:	ldur	x10, [x29, #-16]
   392a8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   392ac:	ldr	x10, [x9, x10, lsl #3]
   392b0:	cmp	x10, x11
   392b4:	b.eq	393fc <mpfr_sub1sp@@Base+0x1918>  // b.none
   392b8:	mov	w9, #0x1                   	// #1
   392bc:	stur	x9, [x29, #-32]
   392c0:	b	38e14 <mpfr_sub1sp@@Base+0x1330>
   392c4:	ldr	x8, [x23]
   392c8:	mov	x9, x23
   392cc:	subs	x8, x8, x25
   392d0:	str	x8, [x23]
   392d4:	b.cs	38f04 <mpfr_sub1sp@@Base+0x1420>  // b.hs, b.nlast
   392d8:	mov	w8, #0x1                   	// #1
   392dc:	ldur	x9, [x29, #-16]
   392e0:	cmp	x8, x9
   392e4:	b.gt	38f04 <mpfr_sub1sp@@Base+0x1420>
   392e8:	ldr	x9, [x23, x8, lsl #3]
   392ec:	mov	x11, x23
   392f0:	sub	x10, x9, #0x1
   392f4:	str	x10, [x23, x8, lsl #3]
   392f8:	add	x8, x8, #0x1
   392fc:	cbz	x9, 392dc <mpfr_sub1sp@@Base+0x17f8>
   39300:	b	38f04 <mpfr_sub1sp@@Base+0x1420>
   39304:	mov	w8, wzr
   39308:	cbnz	x24, 391ec <mpfr_sub1sp@@Base+0x1708>
   3930c:	ldr	x9, [x21]
   39310:	mov	w20, wzr
   39314:	tst	x9, x25
   39318:	b	38398 <mpfr_sub1sp@@Base+0x8b4>
   3931c:	ldr	w8, [x19, #8]
   39320:	add	w8, w20, w8, lsr #31
   39324:	cmp	w8, #0x3
   39328:	orr	x8, x28, x24
   3932c:	csinc	w20, w20, wzr, ne  // ne = any
   39330:	cbz	x8, 38f24 <mpfr_sub1sp@@Base+0x1440>
   39334:	cmp	w20, #0x1
   39338:	b.ne	38f24 <mpfr_sub1sp@@Base+0x1440>  // b.any
   3933c:	mov	w8, #0x1                   	// #1
   39340:	b	391ec <mpfr_sub1sp@@Base+0x1708>
   39344:	bl	c460 <mpfr_tmp_free@plt>
   39348:	cbnz	w20, 38ff0 <mpfr_sub1sp@@Base+0x150c>
   3934c:	b	38fc0 <mpfr_sub1sp@@Base+0x14dc>
   39350:	ldr	x10, [x13]
   39354:	ldur	x11, [x29, #-16]
   39358:	sub	x26, x26, #0x1
   3935c:	mov	x12, x13
   39360:	lsl	x10, x10, #1
   39364:	str	x10, [x13]
   39368:	ldr	x10, [x13, x11, lsl #3]
   3936c:	orr	x10, x10, #0x8000000000000000
   39370:	str	x10, [x13, x11, lsl #3]
   39374:	cbnz	x28, 39380 <mpfr_sub1sp@@Base+0x189c>
   39378:	cmp	w8, #0x1
   3937c:	b.eq	39398 <mpfr_sub1sp@@Base+0x18b4>  // b.none
   39380:	ldur	x10, [x29, #-40]
   39384:	cbnz	x10, 3938c <mpfr_sub1sp@@Base+0x18a8>
   39388:	cbz	w8, 39398 <mpfr_sub1sp@@Base+0x18b4>
   3938c:	mov	w10, #0xffffffff            	// #-1
   39390:	cbnz	x24, 393b0 <mpfr_sub1sp@@Base+0x18cc>
   39394:	cbz	x28, 393b0 <mpfr_sub1sp@@Base+0x18cc>
   39398:	ldr	x10, [x13]
   3939c:	cmp	w8, #0x0
   393a0:	mov	w11, #0x1                   	// #1
   393a4:	orr	x9, x10, x9
   393a8:	cneg	w10, w11, ne  // ne = any
   393ac:	str	x9, [x13]
   393b0:	cmp	w8, #0x1
   393b4:	ccmp	x24, #0x0, #0x0, eq  // eq = none
   393b8:	csel	w20, wzr, w10, eq  // eq = none
   393bc:	b	388fc <mpfr_sub1sp@@Base+0xe18>
   393c0:	lsl	x2, x22, #3
   393c4:	mov	w1, #0xff                  	// #255
   393c8:	mov	x0, x20
   393cc:	bl	c1b0 <memset@plt>
   393d0:	sub	x26, x26, #0x1
   393d4:	b	39184 <mpfr_sub1sp@@Base+0x16a0>
   393d8:	cbnz	w20, 39458 <mpfr_sub1sp@@Base+0x1974>
   393dc:	cbz	x24, 394d0 <mpfr_sub1sp@@Base+0x19ec>
   393e0:	cmp	x21, x1
   393e4:	b.eq	393f4 <mpfr_sub1sp@@Base+0x1910>  // b.none
   393e8:	lsl	x2, x22, #3
   393ec:	mov	x0, x21
   393f0:	bl	bad0 <memcpy@plt>
   393f4:	mov	w8, wzr
   393f8:	b	39298 <mpfr_sub1sp@@Base+0x17b4>
   393fc:	mov	w10, #0x1                   	// #1
   39400:	stur	x10, [x29, #-32]
   39404:	ldur	x10, [x29, #-16]
   39408:	sub	x9, x9, #0x8
   3940c:	subs	x11, x10, #0x1
   39410:	b.lt	39448 <mpfr_sub1sp@@Base+0x1964>  // b.tstop
   39414:	ldr	x12, [x9, x10, lsl #3]
   39418:	mov	x10, x11
   3941c:	cbz	x12, 3940c <mpfr_sub1sp@@Base+0x1928>
   39420:	b	38e14 <mpfr_sub1sp@@Base+0x1330>
   39424:	sub	x9, x9, #0x8
   39428:	mov	w10, #0x1                   	// #1
   3942c:	stur	x10, [x29, #-32]
   39430:	subs	x10, x8, #0x1
   39434:	b.lt	39450 <mpfr_sub1sp@@Base+0x196c>  // b.tstop
   39438:	ldr	x11, [x9, x8, lsl #3]
   3943c:	mov	x8, x10
   39440:	cbz	x11, 39430 <mpfr_sub1sp@@Base+0x194c>
   39444:	b	38894 <mpfr_sub1sp@@Base+0xdb0>
   39448:	stur	xzr, [x29, #-32]
   3944c:	b	38e14 <mpfr_sub1sp@@Base+0x1330>
   39450:	stur	xzr, [x29, #-32]
   39454:	b	38894 <mpfr_sub1sp@@Base+0xdb0>
   39458:	add	w8, w20, w9, lsr #31
   3945c:	cmp	w8, #0x3
   39460:	csinc	w20, w20, wzr, ne  // ne = any
   39464:	cmp	w20, #0x1
   39468:	b.ne	39488 <mpfr_sub1sp@@Base+0x19a4>  // b.any
   3946c:	cmp	x21, x1
   39470:	b.eq	39480 <mpfr_sub1sp@@Base+0x199c>  // b.none
   39474:	lsl	x2, x22, #3
   39478:	mov	x0, x21
   3947c:	bl	bad0 <memcpy@plt>
   39480:	mov	w28, #0x1                   	// #1
   39484:	b	3933c <mpfr_sub1sp@@Base+0x1858>
   39488:	cmp	x21, x1
   3948c:	b.eq	3949c <mpfr_sub1sp@@Base+0x19b8>  // b.none
   39490:	lsl	x2, x22, #3
   39494:	mov	x0, x21
   39498:	bl	bad0 <memcpy@plt>
   3949c:	mov	x8, #0xffffffffffffffff    	// #-1
   394a0:	stur	x8, [x29, #-32]
   394a4:	mov	w28, #0x1                   	// #1
   394a8:	b	38f24 <mpfr_sub1sp@@Base+0x1440>
   394ac:	ldur	x11, [x29, #-16]
   394b0:	sub	x10, x10, #0x8
   394b4:	mov	w24, #0x1                   	// #1
   394b8:	subs	x12, x11, #0x1
   394bc:	b.lt	39500 <mpfr_sub1sp@@Base+0x1a1c>  // b.tstop
   394c0:	ldr	x13, [x10, x11, lsl #3]
   394c4:	mov	x11, x12
   394c8:	cbz	x13, 394b8 <mpfr_sub1sp@@Base+0x19d4>
   394cc:	b	39274 <mpfr_sub1sp@@Base+0x1790>
   394d0:	ldr	x8, [x1]
   394d4:	ldur	x9, [x29, #-24]
   394d8:	lsr	x8, x8, x9
   394dc:	tbnz	w8, #0, 393e0 <mpfr_sub1sp@@Base+0x18fc>
   394e0:	cmp	x21, x1
   394e4:	b.eq	394f4 <mpfr_sub1sp@@Base+0x1a10>  // b.none
   394e8:	lsl	x2, x22, #3
   394ec:	mov	x0, x21
   394f0:	bl	bad0 <memcpy@plt>
   394f4:	mov	x24, xzr
   394f8:	mov	w20, wzr
   394fc:	b	3949c <mpfr_sub1sp@@Base+0x19b8>
   39500:	mov	x24, xzr
   39504:	b	39274 <mpfr_sub1sp@@Base+0x1790>

0000000000039508 <mpfr_get_version@@Base>:
   39508:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3950c:	add	x0, x0, #0xad9
   39510:	ret

0000000000039514 <mpfr_mpn_exp@@Base>:
   39514:	stp	x29, x30, [sp, #-96]!
   39518:	stp	x28, x27, [sp, #16]
   3951c:	stp	x26, x25, [sp, #32]
   39520:	stp	x24, x23, [sp, #48]
   39524:	stp	x22, x21, [sp, #64]
   39528:	stp	x20, x19, [sp, #80]
   3952c:	mov	x29, sp
   39530:	sub	sp, sp, #0x70
   39534:	mov	x20, x4
   39538:	mov	w23, w2
   3953c:	mov	x21, x1
   39540:	cmp	x3, #0x0
   39544:	mov	x22, x0
   39548:	stur	x3, [x29, #-48]
   3954c:	b.le	39888 <mpfr_mpn_exp@@Base+0x374>
   39550:	sub	w8, w23, #0x2
   39554:	cmp	w8, #0x3d
   39558:	b.cs	398a4 <mpfr_mpn_exp@@Base+0x390>  // b.hs, b.nlast
   3955c:	sxtw	x8, w23
   39560:	lsl	x19, x20, #4
   39564:	clz	x23, x8
   39568:	cmp	x19, #0x4, lsl #12
   3956c:	lsl	x8, x8, x23
   39570:	stur	xzr, [x29, #-8]
   39574:	stur	x8, [x29, #-72]
   39578:	stur	x21, [x29, #-112]
   3957c:	b.hi	398c0 <mpfr_mpn_exp@@Base+0x3ac>  // b.pmore
   39580:	add	x9, x19, #0xf
   39584:	mov	x8, sp
   39588:	and	x9, x9, #0xfffffffffffffff0
   3958c:	sub	x28, x8, x9
   39590:	mov	sp, x28
   39594:	ldur	x8, [x29, #-72]
   39598:	sub	x21, x20, #0x1
   3959c:	lsl	x2, x21, #3
   395a0:	mov	x0, x22
   395a4:	mov	w1, wzr
   395a8:	str	x8, [x22, x21, lsl #3]
   395ac:	bl	c1b0 <memset@plt>
   395b0:	ldur	x9, [x29, #-48]
   395b4:	add	x8, x23, x21, lsl #6
   395b8:	mov	x0, x28
   395bc:	mov	w1, wzr
   395c0:	clz	x24, x9
   395c4:	mov	w9, #0x40                  	// #64
   395c8:	mov	x2, x19
   395cc:	stur	x21, [x29, #-104]
   395d0:	neg	x25, x8
   395d4:	sub	x27, x9, x24
   395d8:	bl	c1b0 <memset@plt>
   395dc:	cmp	w24, #0x3e
   395e0:	stur	x27, [x29, #-56]
   395e4:	b.hi	39804 <mpfr_mpn_exp@@Base+0x2f0>  // b.pmore
   395e8:	lsl	x8, x20, #1
   395ec:	lsl	x10, x20, #6
   395f0:	stur	x10, [x29, #-64]
   395f4:	add	x12, x28, x20, lsl #3
   395f8:	lsl	x10, x20, #3
   395fc:	sub	x8, x8, #0x1
   39600:	mov	w9, #0x3e                  	// #62
   39604:	stur	x10, [x29, #-96]
   39608:	mov	w10, #0x40                  	// #64
   3960c:	mov	w11, #0x3f                  	// #63
   39610:	stp	x12, x8, [x29, #-24]
   39614:	sub	x8, x12, #0x8
   39618:	sub	w21, w9, w24
   3961c:	stur	x8, [x29, #-40]
   39620:	sub	x8, x10, x23
   39624:	sub	w26, w11, w24
   39628:	mov	w23, w27
   3962c:	stur	wzr, [x29, #-84]
   39630:	stur	wzr, [x29, #-28]
   39634:	stur	x8, [x29, #-80]
   39638:	mov	x0, x22
   3963c:	mov	x1, xzr
   39640:	bl	caf0 <__gmpn_scan1@plt>
   39644:	lsr	x24, x0, #6
   39648:	mov	x27, x28
   3964c:	add	x28, x28, x24, lsl #4
   39650:	add	x1, x22, x24, lsl #3
   39654:	sub	x2, x20, x0, lsr #6
   39658:	mov	x0, x28
   3965c:	bl	c410 <__gmpn_sqr@plt>
   39660:	mov	x8, #0x4000000000000000    	// #4611686018427387904
   39664:	cmn	x25, x8
   39668:	b.mi	3985c <mpfr_mpn_exp@@Base+0x348>  // b.first
   3966c:	ldur	x8, [x29, #-64]
   39670:	add	x19, x8, x25, lsl #1
   39674:	tbnz	x25, #63, 39688 <mpfr_mpn_exp@@Base+0x174>
   39678:	lsl	x8, x25, #1
   3967c:	cmp	x19, x8
   39680:	b.cc	3985c <mpfr_mpn_exp@@Base+0x348>  // b.lo, b.ul, b.last
   39684:	tbnz	x19, #63, 3985c <mpfr_mpn_exp@@Base+0x348>
   39688:	ldur	x8, [x29, #-16]
   3968c:	ldr	x8, [x27, x8, lsl #3]
   39690:	tbnz	x8, #63, 396e4 <mpfr_mpn_exp@@Base+0x1d0>
   39694:	ldur	x1, [x29, #-24]
   39698:	mov	w3, #0x1                   	// #1
   3969c:	mov	x0, x22
   396a0:	mov	x2, x20
   396a4:	bl	bd70 <__gmpn_lshift@plt>
   396a8:	ldur	x0, [x29, #-40]
   396ac:	mov	w2, #0x1                   	// #1
   396b0:	mov	w3, #0x1                   	// #1
   396b4:	mov	x1, x0
   396b8:	bl	bd70 <__gmpn_lshift@plt>
   396bc:	ldr	x8, [x22]
   396c0:	ldur	x25, [x29, #-56]
   396c4:	sub	x19, x19, #0x1
   396c8:	orr	x8, x8, x0
   396cc:	str	x8, [x22]
   396d0:	ldur	w8, [x29, #-28]
   396d4:	cmp	x25, w23, uxtw
   396d8:	cinc	w8, w8, ne  // ne = any
   396dc:	stur	w8, [x29, #-28]
   396e0:	b	39700 <mpfr_mpn_exp@@Base+0x1ec>
   396e4:	ldur	x1, [x29, #-24]
   396e8:	ldur	x25, [x29, #-56]
   396ec:	cmp	x1, x22
   396f0:	b.eq	39700 <mpfr_mpn_exp@@Base+0x1ec>  // b.none
   396f4:	ldur	x2, [x29, #-96]
   396f8:	mov	x0, x22
   396fc:	bl	bad0 <memcpy@plt>
   39700:	cmp	x25, w23, uxtw
   39704:	b.ne	3972c <mpfr_mpn_exp@@Base+0x218>  // b.any
   39708:	lsl	x24, x24, #1
   3970c:	cmp	x24, x20
   39710:	b.hi	3972c <mpfr_mpn_exp@@Base+0x218>  // b.pmore
   39714:	mov	x0, x28
   39718:	mov	x1, xzr
   3971c:	bl	caf0 <__gmpn_scan1@plt>
   39720:	sub	x8, x20, x24
   39724:	cmp	x0, x8, lsl #6
   39728:	csel	w23, w21, w23, cc  // cc = lo, ul, last
   3972c:	ldur	x8, [x29, #-48]
   39730:	mov	x28, x27
   39734:	lsr	x8, x8, x21
   39738:	tbz	w8, #0, 397ec <mpfr_mpn_exp@@Base+0x2d8>
   3973c:	ldur	x24, [x29, #-40]
   39740:	ldur	x3, [x29, #-72]
   39744:	mov	x1, x22
   39748:	mov	x2, x20
   3974c:	mov	x0, x24
   39750:	bl	cd90 <__gmpn_mul_1@plt>
   39754:	ldur	x8, [x29, #-16]
   39758:	str	x0, [x28, x8, lsl #3]
   3975c:	ldur	x8, [x29, #-80]
   39760:	add	x19, x19, x8
   39764:	tbnz	x0, #63, 397a8 <mpfr_mpn_exp@@Base+0x294>
   39768:	ldur	x1, [x29, #-24]
   3976c:	mov	w3, #0x1                   	// #1
   39770:	mov	x0, x22
   39774:	mov	x2, x20
   39778:	bl	bd70 <__gmpn_lshift@plt>
   3977c:	mov	w2, #0x1                   	// #1
   39780:	mov	w3, #0x1                   	// #1
   39784:	mov	x0, x24
   39788:	mov	x1, x24
   3978c:	bl	bd70 <__gmpn_lshift@plt>
   39790:	ldr	x8, [x22]
   39794:	sub	x19, x19, #0x1
   39798:	orr	x8, x8, x0
   3979c:	str	x8, [x22]
   397a0:	mov	w8, w23
   397a4:	b	397d4 <mpfr_mpn_exp@@Base+0x2c0>
   397a8:	ldur	x1, [x29, #-24]
   397ac:	cmp	x1, x22
   397b0:	b.eq	397c0 <mpfr_mpn_exp@@Base+0x2ac>  // b.none
   397b4:	ldur	x2, [x29, #-96]
   397b8:	mov	x0, x22
   397bc:	bl	bad0 <memcpy@plt>
   397c0:	ldur	w9, [x29, #-84]
   397c4:	cmp	x25, w23, uxtw
   397c8:	mov	w8, w23
   397cc:	cinc	w9, w9, ne  // ne = any
   397d0:	stur	w9, [x29, #-84]
   397d4:	cmp	x25, x8
   397d8:	b.ne	397ec <mpfr_mpn_exp@@Base+0x2d8>  // b.any
   397dc:	ldur	x8, [x29, #-104]
   397e0:	ldr	x8, [x28, x8, lsl #3]
   397e4:	cmp	x8, #0x0
   397e8:	csel	w23, w23, w21, eq  // eq = none
   397ec:	sub	w26, w26, #0x1
   397f0:	cmp	w26, #0x0
   397f4:	sub	x21, x21, #0x1
   397f8:	mov	x25, x19
   397fc:	b.gt	39638 <mpfr_mpn_exp@@Base+0x124>
   39800:	b	39818 <mpfr_mpn_exp@@Base+0x304>
   39804:	mov	w8, wzr
   39808:	mov	w23, w27
   3980c:	stur	wzr, [x29, #-28]
   39810:	stur	wzr, [x29, #-84]
   39814:	mov	x19, x25
   39818:	ldur	x0, [x29, #-8]
   3981c:	cbnz	x0, 398d4 <mpfr_mpn_exp@@Base+0x3c0>
   39820:	ldur	x8, [x29, #-56]
   39824:	cmp	x8, w23, uxtw
   39828:	ldur	x8, [x29, #-112]
   3982c:	str	x19, [x8]
   39830:	b.ne	3983c <mpfr_mpn_exp@@Base+0x328>  // b.any
   39834:	mov	x0, #0xffffffffffffffff    	// #-1
   39838:	b	39868 <mpfr_mpn_exp@@Base+0x354>
   3983c:	ldur	w8, [x29, #-28]
   39840:	ldur	w9, [x29, #-84]
   39844:	cmp	w8, #0x0
   39848:	cinc	w8, w8, lt  // lt = tstop
   3984c:	add	w9, w23, w9
   39850:	add	w8, w9, w8, asr #1
   39854:	add	w0, w8, #0x3
   39858:	b	39868 <mpfr_mpn_exp@@Base+0x354>
   3985c:	ldur	x0, [x29, #-8]
   39860:	cbnz	x0, 398dc <mpfr_mpn_exp@@Base+0x3c8>
   39864:	mov	x0, #0xfffffffffffffffe    	// #-2
   39868:	mov	sp, x29
   3986c:	ldp	x20, x19, [sp, #80]
   39870:	ldp	x22, x21, [sp, #64]
   39874:	ldp	x24, x23, [sp, #48]
   39878:	ldp	x26, x25, [sp, #32]
   3987c:	ldp	x28, x27, [sp, #16]
   39880:	ldp	x29, x30, [sp], #96
   39884:	ret
   39888:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3988c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   39890:	add	x0, x0, #0xadf
   39894:	add	x2, x2, #0xae9
   39898:	mov	w1, #0x36                  	// #54
   3989c:	bl	cb90 <mpfr_assert_fail@plt>
   398a0:	b	39550 <mpfr_mpn_exp@@Base+0x3c>
   398a4:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   398a8:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   398ac:	add	x0, x0, #0xadf
   398b0:	add	x2, x2, #0xaef
   398b4:	mov	w1, #0x37                  	// #55
   398b8:	bl	cb90 <mpfr_assert_fail@plt>
   398bc:	b	3955c <mpfr_mpn_exp@@Base+0x48>
   398c0:	sub	x0, x29, #0x8
   398c4:	mov	x1, x19
   398c8:	bl	be70 <mpfr_tmp_allocate@plt>
   398cc:	mov	x28, x0
   398d0:	b	39594 <mpfr_mpn_exp@@Base+0x80>
   398d4:	bl	c460 <mpfr_tmp_free@plt>
   398d8:	b	39820 <mpfr_mpn_exp@@Base+0x30c>
   398dc:	bl	c460 <mpfr_tmp_free@plt>
   398e0:	b	39864 <mpfr_mpn_exp@@Base+0x350>

00000000000398e4 <mpfr_assert_fail@@Base>:
   398e4:	stp	x29, x30, [sp, #-48]!
   398e8:	str	x21, [sp, #16]
   398ec:	stp	x20, x19, [sp, #32]
   398f0:	adrp	x21, 70000 <__gmpfr_l2b@@Base+0x2e0>
   398f4:	ldr	x21, [x21, #3976]
   398f8:	mov	x19, x2
   398fc:	mov	x29, sp
   39900:	cbz	x0, 39940 <mpfr_assert_fail@@Base+0x5c>
   39904:	ldrb	w8, [x0]
   39908:	mov	x2, x0
   3990c:	cbz	w8, 39940 <mpfr_assert_fail@@Base+0x5c>
   39910:	ldr	x0, [x21]
   39914:	mov	w20, w1
   39918:	adrp	x1, 5e000 <mpfr_bases@@Base+0x4f8>
   3991c:	add	x1, x1, #0x310
   39920:	bl	cd40 <fprintf@plt>
   39924:	cmn	w20, #0x1
   39928:	b.eq	39940 <mpfr_assert_fail@@Base+0x5c>  // b.none
   3992c:	ldr	x0, [x21]
   39930:	adrp	x1, 5e000 <mpfr_bases@@Base+0x4f8>
   39934:	add	x1, x1, #0x314
   39938:	mov	w2, w20
   3993c:	bl	cd40 <fprintf@plt>
   39940:	ldr	x0, [x21]
   39944:	adrp	x1, 5e000 <mpfr_bases@@Base+0x4f8>
   39948:	add	x1, x1, #0x319
   3994c:	mov	x2, x19
   39950:	bl	cd40 <fprintf@plt>
   39954:	bl	c440 <abort@plt>

0000000000039958 <mpfr_allocate_func@@Base>:
   39958:	sub	sp, sp, #0x30
   3995c:	stp	x29, x30, [sp, #16]
   39960:	add	x29, sp, #0x10
   39964:	str	x19, [sp, #32]
   39968:	mov	x19, x0
   3996c:	add	x0, x29, #0x18
   39970:	add	x1, sp, #0x8
   39974:	mov	x2, sp
   39978:	bl	bd00 <__gmp_get_memory_functions@plt>
   3997c:	ldr	x8, [x29, #24]
   39980:	mov	x0, x19
   39984:	blr	x8
   39988:	ldr	x19, [sp, #32]
   3998c:	ldp	x29, x30, [sp, #16]
   39990:	add	sp, sp, #0x30
   39994:	ret

0000000000039998 <mpfr_reallocate_func@@Base>:
   39998:	sub	sp, sp, #0x40
   3999c:	stp	x29, x30, [sp, #16]
   399a0:	add	x29, sp, #0x10
   399a4:	str	x21, [sp, #32]
   399a8:	stp	x20, x19, [sp, #48]
   399ac:	mov	x19, x2
   399b0:	mov	x20, x1
   399b4:	mov	x21, x0
   399b8:	add	x0, x29, #0x18
   399bc:	add	x1, sp, #0x8
   399c0:	mov	x2, sp
   399c4:	bl	bd00 <__gmp_get_memory_functions@plt>
   399c8:	ldr	x8, [sp, #8]
   399cc:	mov	x0, x21
   399d0:	mov	x1, x20
   399d4:	mov	x2, x19
   399d8:	blr	x8
   399dc:	ldp	x20, x19, [sp, #48]
   399e0:	ldr	x21, [sp, #32]
   399e4:	ldp	x29, x30, [sp, #16]
   399e8:	add	sp, sp, #0x40
   399ec:	ret

00000000000399f0 <mpfr_free_func@@Base>:
   399f0:	sub	sp, sp, #0x40
   399f4:	stp	x29, x30, [sp, #32]
   399f8:	add	x29, sp, #0x20
   399fc:	stp	x20, x19, [sp, #48]
   39a00:	mov	x19, x1
   39a04:	mov	x20, x0
   39a08:	sub	x0, x29, #0x8
   39a0c:	add	x1, sp, #0x10
   39a10:	add	x2, sp, #0x8
   39a14:	bl	bd00 <__gmp_get_memory_functions@plt>
   39a18:	ldr	x8, [sp, #8]
   39a1c:	mov	x0, x20
   39a20:	mov	x1, x19
   39a24:	blr	x8
   39a28:	ldp	x20, x19, [sp, #48]
   39a2c:	ldp	x29, x30, [sp, #32]
   39a30:	add	sp, sp, #0x40
   39a34:	ret

0000000000039a38 <mpfr_tmp_allocate@@Base>:
   39a38:	sub	sp, sp, #0x40
   39a3c:	stp	x29, x30, [sp, #16]
   39a40:	add	x29, sp, #0x10
   39a44:	stp	x20, x19, [sp, #48]
   39a48:	mov	x19, x1
   39a4c:	mov	x20, x0
   39a50:	add	x0, x29, #0x18
   39a54:	add	x1, sp, #0x8
   39a58:	mov	x2, sp
   39a5c:	str	x21, [sp, #32]
   39a60:	bl	bd00 <__gmp_get_memory_functions@plt>
   39a64:	ldr	x8, [x29, #24]
   39a68:	mov	w0, #0x18                  	// #24
   39a6c:	blr	x8
   39a70:	mov	x21, x0
   39a74:	add	x0, x29, #0x18
   39a78:	add	x1, sp, #0x8
   39a7c:	mov	x2, sp
   39a80:	bl	bd00 <__gmp_get_memory_functions@plt>
   39a84:	ldr	x8, [x29, #24]
   39a88:	mov	x0, x19
   39a8c:	blr	x8
   39a90:	stp	x0, x19, [x21]
   39a94:	ldr	x8, [x20]
   39a98:	str	x8, [x21, #16]
   39a9c:	str	x21, [x20]
   39aa0:	ldr	x0, [x21]
   39aa4:	ldp	x20, x19, [sp, #48]
   39aa8:	ldr	x21, [sp, #32]
   39aac:	ldp	x29, x30, [sp, #16]
   39ab0:	add	sp, sp, #0x40
   39ab4:	ret

0000000000039ab8 <mpfr_tmp_free@@Base>:
   39ab8:	sub	sp, sp, #0x40
   39abc:	stp	x29, x30, [sp, #16]
   39ac0:	str	x21, [sp, #32]
   39ac4:	stp	x20, x19, [sp, #48]
   39ac8:	add	x29, sp, #0x10
   39acc:	cbz	x0, 39b24 <mpfr_tmp_free@@Base+0x6c>
   39ad0:	mov	x19, x0
   39ad4:	ldp	x20, x21, [x19]
   39ad8:	add	x0, x29, #0x18
   39adc:	add	x1, sp, #0x8
   39ae0:	mov	x2, sp
   39ae4:	bl	bd00 <__gmp_get_memory_functions@plt>
   39ae8:	ldr	x8, [sp]
   39aec:	mov	x0, x20
   39af0:	mov	x1, x21
   39af4:	blr	x8
   39af8:	ldr	x20, [x19, #16]
   39afc:	add	x0, x29, #0x18
   39b00:	add	x1, sp, #0x8
   39b04:	mov	x2, sp
   39b08:	bl	bd00 <__gmp_get_memory_functions@plt>
   39b0c:	ldr	x8, [sp]
   39b10:	mov	w1, #0x18                  	// #24
   39b14:	mov	x0, x19
   39b18:	blr	x8
   39b1c:	mov	x19, x20
   39b20:	cbnz	x20, 39ad4 <mpfr_tmp_free@@Base+0x1c>
   39b24:	ldp	x20, x19, [sp, #48]
   39b28:	ldr	x21, [sp, #32]
   39b2c:	ldp	x29, x30, [sp, #16]
   39b30:	add	sp, sp, #0x40
   39b34:	ret

0000000000039b38 <mpfr_sum@@Base>:
   39b38:	stp	x29, x30, [sp, #-16]!
   39b3c:	cmp	x2, #0x3
   39b40:	mov	x29, sp
   39b44:	b.cc	39c3c <mpfr_sum@@Base+0x104>  // b.lo, b.ul, b.last
   39b48:	mov	x9, #0x4                   	// #4
   39b4c:	cmp	w3, #0x3
   39b50:	mov	w13, #0xffffffff            	// #-1
   39b54:	mov	x14, #0x2                   	// #2
   39b58:	mov	w8, wzr
   39b5c:	mov	w10, wzr
   39b60:	mov	x5, xzr
   39b64:	mov	x11, xzr
   39b68:	movk	x9, #0x8000, lsl #48
   39b6c:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   39b70:	mov	x12, #0x8000000000000003    	// #-9223372036854775805
   39b74:	cneg	w13, w13, ne  // ne = any
   39b78:	movk	x14, #0x8000, lsl #48
   39b7c:	ldr	x15, [x1, x11, lsl #3]
   39b80:	ldr	x16, [x15, #16]
   39b84:	cmp	x16, x9
   39b88:	b.lt	39ba8 <mpfr_sum@@Base+0x70>  // b.tstop
   39b8c:	cmp	x16, x4
   39b90:	csel	x4, x16, x4, gt
   39b94:	add	x5, x5, #0x1
   39b98:	add	x11, x11, #0x1
   39b9c:	cmp	x2, x11
   39ba0:	b.ne	39b7c <mpfr_sum@@Base+0x44>  // b.any
   39ba4:	b	39bf8 <mpfr_sum@@Base+0xc0>
   39ba8:	cmp	x16, x12
   39bac:	b.eq	39bd4 <mpfr_sum@@Base+0x9c>  // b.none
   39bb0:	cmp	x16, x14
   39bb4:	b.eq	39c10 <mpfr_sum@@Base+0xd8>  // b.none
   39bb8:	cbnz	x5, 39b98 <mpfr_sum@@Base+0x60>
   39bbc:	ldr	w15, [x15, #8]
   39bc0:	mov	x5, xzr
   39bc4:	cbz	w8, 39bf0 <mpfr_sum@@Base+0xb8>
   39bc8:	cmp	w15, w8
   39bcc:	csel	w8, w8, w13, eq  // eq = none
   39bd0:	b	39b98 <mpfr_sum@@Base+0x60>
   39bd4:	ldr	w15, [x15, #8]
   39bd8:	cbz	w10, 39be8 <mpfr_sum@@Base+0xb0>
   39bdc:	cmp	w15, w10
   39be0:	b.eq	39b98 <mpfr_sum@@Base+0x60>  // b.none
   39be4:	b	39c10 <mpfr_sum@@Base+0xd8>
   39be8:	mov	w10, w15
   39bec:	b	39b98 <mpfr_sum@@Base+0x60>
   39bf0:	mov	w8, w15
   39bf4:	b	39b98 <mpfr_sum@@Base+0x60>
   39bf8:	cbnz	w10, 39c64 <mpfr_sum@@Base+0x12c>
   39bfc:	cbz	x5, 39c74 <mpfr_sum@@Base+0x13c>
   39c00:	cmp	x5, #0x2
   39c04:	b.ls	39c84 <mpfr_sum@@Base+0x14c>  // b.plast
   39c08:	ldp	x29, x30, [sp], #16
   39c0c:	b	39d20 <mpfr_sum@@Base+0x1e8>
   39c10:	sub	x8, x9, #0x2
   39c14:	str	x8, [x0, #16]
   39c18:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   39c1c:	ldr	x1, [x0, #2656]
   39c20:	add	x0, x0, #0xa60
   39c24:	blr	x1
   39c28:	mrs	x8, tpidr_el0
   39c2c:	ldr	w9, [x8, x0]
   39c30:	orr	w9, w9, #0x4
   39c34:	str	w9, [x8, x0]
   39c38:	b	39cf8 <mpfr_sum@@Base+0x1c0>
   39c3c:	cbz	x2, 39ce8 <mpfr_sum@@Base+0x1b0>
   39c40:	ldr	x8, [x1]
   39c44:	cmp	x2, #0x1
   39c48:	b.ne	39d04 <mpfr_sum@@Base+0x1cc>  // b.any
   39c4c:	ldr	w9, [x8, #8]
   39c50:	mov	x1, x8
   39c54:	mov	w2, w3
   39c58:	mov	w3, w9
   39c5c:	ldp	x29, x30, [sp], #16
   39c60:	b	c6f0 <mpfr_set4@plt>
   39c64:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   39c68:	str	x8, [x0, #16]
   39c6c:	str	w10, [x0, #8]
   39c70:	b	39cf8 <mpfr_sum@@Base+0x1c0>
   39c74:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   39c78:	str	x9, [x0, #16]
   39c7c:	str	w8, [x0, #8]
   39c80:	b	39cf8 <mpfr_sum@@Base+0x1c0>
   39c84:	cbz	x2, 39ccc <mpfr_sum@@Base+0x194>
   39c88:	mov	x10, xzr
   39c8c:	mov	x11, #0xffffffffffffffff    	// #-1
   39c90:	ldr	x8, [x1, x10, lsl #3]
   39c94:	ldr	x12, [x8, #16]
   39c98:	cmp	x12, x9
   39c9c:	b.ge	39ca8 <mpfr_sum@@Base+0x170>  // b.tcont
   39ca0:	mov	x4, x11
   39ca4:	b	39cbc <mpfr_sum@@Base+0x184>
   39ca8:	cmp	x5, #0x1
   39cac:	b.eq	39c4c <mpfr_sum@@Base+0x114>  // b.none
   39cb0:	cmn	x11, #0x1
   39cb4:	mov	x4, x10
   39cb8:	b.ne	39d10 <mpfr_sum@@Base+0x1d8>  // b.any
   39cbc:	add	x10, x10, #0x1
   39cc0:	cmp	x2, x10
   39cc4:	mov	x11, x4
   39cc8:	b.ne	39c90 <mpfr_sum@@Base+0x158>  // b.any
   39ccc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   39cd0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   39cd4:	add	x0, x0, #0x339
   39cd8:	add	x2, x2, #0x7da
   39cdc:	mov	w1, #0x564                 	// #1380
   39ce0:	bl	cb90 <mpfr_assert_fail@plt>
   39ce4:	b	39cf8 <mpfr_sum@@Base+0x1c0>
   39ce8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   39cec:	mov	w9, #0x1                   	// #1
   39cf0:	str	x8, [x0, #16]
   39cf4:	str	w9, [x0, #8]
   39cf8:	mov	w0, wzr
   39cfc:	ldp	x29, x30, [sp], #16
   39d00:	ret
   39d04:	ldr	x2, [x1, #8]
   39d08:	mov	x1, x8
   39d0c:	b	39d18 <mpfr_sum@@Base+0x1e0>
   39d10:	ldr	x1, [x1, x11, lsl #3]
   39d14:	mov	x2, x8
   39d18:	ldp	x29, x30, [sp], #16
   39d1c:	b	c240 <mpfr_add@plt>
   39d20:	stp	x29, x30, [sp, #-96]!
   39d24:	stp	x28, x27, [sp, #16]
   39d28:	stp	x26, x25, [sp, #32]
   39d2c:	stp	x24, x23, [sp, #48]
   39d30:	stp	x22, x21, [sp, #64]
   39d34:	stp	x20, x19, [sp, #80]
   39d38:	mov	x29, sp
   39d3c:	sub	sp, sp, #0xa0
   39d40:	stp	x1, x2, [x29, #-64]
   39d44:	stur	x4, [x29, #-8]
   39d48:	ldr	x21, [x0, #24]
   39d4c:	mov	x20, x4
   39d50:	mov	x22, x0
   39d54:	subs	x19, x5, #0x1
   39d58:	stur	w3, [x29, #-44]
   39d5c:	b.eq	3a4b4 <mpfr_sum@@Base+0x97c>  // b.none
   39d60:	cbz	x5, 3a518 <mpfr_sum@@Base+0x9e0>
   39d64:	clz	x8, x19
   39d68:	mov	w9, #0x40                  	// #64
   39d6c:	sub	w8, w9, w8
   39d70:	ldr	x27, [x22]
   39d74:	add	w19, w8, #0x1
   39d78:	sxtw	x9, w8
   39d7c:	stur	x9, [x29, #-40]
   39d80:	add	x8, x27, w8, sxtw
   39d84:	add	x8, x8, w19, sxtw
   39d88:	add	x10, x8, #0x1
   39d8c:	add	x11, x8, #0x40
   39d90:	cmp	x10, #0x0
   39d94:	csinc	x8, x11, x8, lt  // lt = tstop
   39d98:	asr	x24, x8, #6
   39d9c:	mvn	x9, x27
   39da0:	add	x28, x24, #0x1
   39da4:	lsl	x23, x28, #6
   39da8:	add	x8, x9, x28, lsl #6
   39dac:	add	x9, x8, #0x3f
   39db0:	cmp	x8, #0x0
   39db4:	sub	x25, x23, w19, sxtw
   39db8:	csel	x8, x9, x8, lt  // lt = tstop
   39dbc:	add	x9, x25, #0x3e
   39dc0:	add	x10, x25, #0x7d
   39dc4:	asr	x8, x8, #6
   39dc8:	cmp	x9, #0x0
   39dcc:	stur	x8, [x29, #-96]
   39dd0:	add	x11, x8, #0x1
   39dd4:	csel	x8, x10, x9, lt  // lt = tstop
   39dd8:	asr	x8, x8, #6
   39ddc:	stur	x22, [x29, #-80]
   39de0:	stur	x8, [x29, #-104]
   39de4:	add	x22, x8, #0x1
   39de8:	add	x8, x11, x28
   39dec:	add	x8, x8, x22
   39df0:	lsl	x1, x8, #3
   39df4:	cmp	x1, #0x4, lsl #12
   39df8:	stur	x11, [x29, #-88]
   39dfc:	stur	xzr, [x29, #-16]
   39e00:	b.hi	3a4bc <mpfr_sum@@Base+0x984>  // b.pmore
   39e04:	add	x9, x1, #0xf
   39e08:	mov	x8, sp
   39e0c:	and	x9, x9, #0xfffffffffffffff0
   39e10:	sub	x26, x8, x9
   39e14:	mov	sp, x26
   39e18:	add	x22, x26, x22, lsl #3
   39e1c:	lsl	x2, x28, #3
   39e20:	mov	x0, x22
   39e24:	mov	w1, wzr
   39e28:	bl	c1b0 <memset@plt>
   39e2c:	orr	x8, x25, #0x8000000000000000
   39e30:	cmp	x8, x20
   39e34:	b.gt	3a4cc <mpfr_sum@@Base+0x994>
   39e38:	sub	x5, x20, x25
   39e3c:	stur	x5, [x29, #-24]
   39e40:	add	x8, x27, #0x3
   39e44:	sub	sp, sp, #0x30
   39e48:	sub	x11, x29, #0x20
   39e4c:	stp	x8, x11, [sp, #8]
   39e50:	ldur	x8, [x29, #-40]
   39e54:	ldp	x3, x4, [x29, #-64]
   39e58:	sub	x9, x29, #0x8
   39e5c:	sub	x10, x29, #0x18
   39e60:	mov	x0, x22
   39e64:	mov	x1, x28
   39e68:	mov	x2, x23
   39e6c:	mov	x6, x20
   39e70:	mov	x7, x26
   39e74:	stp	x10, x9, [sp, #24]
   39e78:	str	w8, [sp]
   39e7c:	bl	3aa78 <mpfr_sum@@Base+0xf40>
   39e80:	add	sp, sp, #0x30
   39e84:	cbz	x0, 3a4e8 <mpfr_sum@@Base+0x9b0>
   39e88:	ldr	x25, [x22, x24, lsl #3]
   39e8c:	ldp	x8, x18, [x29, #-32]
   39e90:	ldur	w16, [x29, #-44]
   39e94:	mov	w9, #0xffffffff            	// #-1
   39e98:	cmp	x25, #0x0
   39e9c:	mov	x23, x0
   39ea0:	cneg	w2, w9, ge  // ge = tcont
   39ea4:	cmp	w16, #0x5
   39ea8:	sub	x1, x8, x27
   39eac:	stur	x25, [x29, #-72]
   39eb0:	b.ne	39ef0 <mpfr_sum@@Base+0x3b8>  // b.any
   39eb4:	subs	x8, x1, x18
   39eb8:	b.le	39f34 <mpfr_sum@@Base+0x3fc>
   39ebc:	add	x9, x8, #0x3f
   39ec0:	cmp	x8, #0x0
   39ec4:	csel	x9, x9, x8, lt  // lt = tstop
   39ec8:	and	x10, x9, #0xffffffffffffffc0
   39ecc:	sub	x8, x8, x10
   39ed0:	cmp	w8, #0x1
   39ed4:	asr	x9, x9, #6
   39ed8:	b.lt	3a018 <mpfr_sum@@Base+0x4e0>  // b.tstop
   39edc:	ldr	x9, [x22, x9, lsl #3]
   39ee0:	sub	w8, w8, #0x1
   39ee4:	lsr	x8, x9, x8
   39ee8:	and	x24, x8, #0x1
   39eec:	b	3a024 <mpfr_sum@@Base+0x4ec>
   39ef0:	subs	x12, x1, x18
   39ef4:	b.le	39f40 <mpfr_sum@@Base+0x408>
   39ef8:	add	x8, x12, #0x3f
   39efc:	cmp	x12, #0x0
   39f00:	csel	x9, x8, x12, lt  // lt = tstop
   39f04:	asr	x8, x9, #6
   39f08:	ldr	x11, [x22, x8, lsl #3]
   39f0c:	and	x9, x9, #0xffffffffffffffc0
   39f10:	sub	x9, x12, x9
   39f14:	cmp	w9, #0x1
   39f18:	lsr	x10, x11, x9
   39f1c:	and	x0, x10, #0x1
   39f20:	b.lt	3a030 <mpfr_sum@@Base+0x4f8>  // b.tstop
   39f24:	sub	w10, w9, #0x1
   39f28:	lsr	x10, x11, x10
   39f2c:	and	x17, x10, #0x1
   39f30:	b	3a03c <mpfr_sum@@Base+0x504>
   39f34:	ldur	x14, [x29, #-80]
   39f38:	mov	w24, wzr
   39f3c:	b	3a028 <mpfr_sum@@Base+0x4f0>
   39f40:	b.ne	39f50 <mpfr_sum@@Base+0x418>  // b.any
   39f44:	ldr	x8, [x22]
   39f48:	and	x0, x8, #0x1
   39f4c:	b	39f54 <mpfr_sum@@Base+0x41c>
   39f50:	mov	x0, xzr
   39f54:	ldur	x3, [x29, #-8]
   39f58:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   39f5c:	mov	x17, xzr
   39f60:	cmp	x3, x8
   39f64:	cset	w14, ne  // ne = any
   39f68:	mov	w20, w14
   39f6c:	mov	x24, x17
   39f70:	cbz	w14, 3a444 <mpfr_sum@@Base+0x90c>
   39f74:	ldur	x8, [x29, #-40]
   39f78:	ldur	x25, [x29, #-88]
   39f7c:	add	x28, x22, x28, lsl #3
   39f80:	stp	x1, x17, [x29, #-120]
   39f84:	add	x8, x3, x8
   39f88:	subs	x8, x8, x18
   39f8c:	lsl	x10, x25, #6
   39f90:	stur	w2, [x29, #-124]
   39f94:	stur	x0, [x29, #-152]
   39f98:	stur	x18, [x29, #-136]
   39f9c:	stur	w14, [x29, #-140]
   39fa0:	stur	x10, [x29, #-104]
   39fa4:	b.ge	39fcc <mpfr_sum@@Base+0x494>  // b.tcont
   39fa8:	sxtw	x8, w19
   39fac:	sub	x19, x10, x8
   39fb0:	orr	x8, x19, #0x8000000000000000
   39fb4:	cmp	x3, x8
   39fb8:	b.lt	3a534 <mpfr_sum@@Base+0x9fc>  // b.tstop
   39fbc:	sub	x19, x3, x19
   39fc0:	mov	x20, x25
   39fc4:	mov	x24, x3
   39fc8:	b	3a160 <mpfr_sum@@Base+0x628>
   39fcc:	add	x9, x8, #0x2
   39fd0:	add	x8, x8, #0x41
   39fd4:	cmp	x9, #0x0
   39fd8:	csel	x8, x8, x9, lt  // lt = tstop
   39fdc:	asr	x8, x8, #6
   39fe0:	subs	w9, w9, w8, lsl #6
   39fe4:	stur	x3, [x29, #-160]
   39fe8:	b.eq	3a110 <mpfr_sum@@Base+0x5d8>  // b.none
   39fec:	add	x2, x8, #0x1
   39ff0:	mov	w8, #0x40                  	// #64
   39ff4:	sub	w19, w8, w9
   39ff8:	sub	x20, x25, x2
   39ffc:	add	x0, x28, x20, lsl #3
   3a000:	mov	x1, x22
   3a004:	mov	w3, w19
   3a008:	mov	x24, x18
   3a00c:	bl	bd70 <__gmpn_lshift@plt>
   3a010:	mov	x18, x24
   3a014:	b	3a140 <mpfr_sum@@Base+0x608>
   3a018:	add	x8, x22, x9, lsl #3
   3a01c:	ldur	x8, [x8, #-8]
   3a020:	lsr	x24, x8, #63
   3a024:	ldur	x14, [x29, #-80]
   3a028:	stur	wzr, [x29, #-40]
   3a02c:	b	3a5d8 <mpfr_sum@@Base+0xaa0>
   3a030:	add	x10, x22, x8, lsl #3
   3a034:	ldur	x10, [x10, #-8]
   3a038:	lsr	x17, x10, #63
   3a03c:	ldur	x3, [x29, #-8]
   3a040:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3a044:	cmp	x3, x10
   3a048:	b.ne	3a080 <mpfr_sum@@Base+0x548>  // b.any
   3a04c:	cbz	x17, 3a060 <mpfr_sum@@Base+0x528>
   3a050:	mov	w24, #0x1                   	// #1
   3a054:	mov	w20, #0x1                   	// #1
   3a058:	cbnz	w16, 3a444 <mpfr_sum@@Base+0x90c>
   3a05c:	cbnz	x0, 3a444 <mpfr_sum@@Base+0x90c>
   3a060:	cmp	w9, #0x2
   3a064:	b.lt	3a0ac <mpfr_sum@@Base+0x574>  // b.tstop
   3a068:	sub	w9, w9, #0x1
   3a06c:	mov	x10, #0xffffffffffffffff    	// #-1
   3a070:	lsl	x9, x10, x9
   3a074:	bics	xzr, x11, x9
   3a078:	b.ne	3a43c <mpfr_sum@@Base+0x904>  // b.any
   3a07c:	b	3a0b0 <mpfr_sum@@Base+0x578>
   3a080:	ldur	x10, [x29, #-40]
   3a084:	cmp	w9, #0x1
   3a088:	sub	x10, x1, x10
   3a08c:	sub	x10, x10, x3
   3a090:	b.eq	3a0e8 <mpfr_sum@@Base+0x5b0>  // b.none
   3a094:	cbnz	w9, 3a0fc <mpfr_sum@@Base+0x5c4>
   3a098:	sub	x8, x8, #0x1
   3a09c:	ldr	x11, [x22, x8, lsl #3]
   3a0a0:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
   3a0a4:	mov	w9, #0x40                  	// #64
   3a0a8:	b	3a360 <mpfr_sum@@Base+0x828>
   3a0ac:	cbz	w9, 3a340 <mpfr_sum@@Base+0x808>
   3a0b0:	cmp	x8, #0x1
   3a0b4:	b.lt	3a2e4 <mpfr_sum@@Base+0x7ac>  // b.tstop
   3a0b8:	ldur	x9, [x29, #-104]
   3a0bc:	add	x10, x26, x9, lsl #3
   3a0c0:	ldr	x11, [x10, x8, lsl #3]
   3a0c4:	cmp	x11, #0x0
   3a0c8:	cset	w9, eq  // eq = none
   3a0cc:	cmp	x8, #0x2
   3a0d0:	b.lt	3a0dc <mpfr_sum@@Base+0x5a4>  // b.tstop
   3a0d4:	sub	x8, x8, #0x1
   3a0d8:	tbnz	w9, #0, 3a0c0 <mpfr_sum@@Base+0x588>
   3a0dc:	cmp	x11, #0x0
   3a0e0:	cset	w8, ne  // ne = any
   3a0e4:	b	3a2ec <mpfr_sum@@Base+0x7b4>
   3a0e8:	cmp	x12, #0x40
   3a0ec:	b.lt	3a354 <mpfr_sum@@Base+0x81c>  // b.tstop
   3a0f0:	sub	x8, x8, #0x1
   3a0f4:	ldr	x11, [x22, x8, lsl #3]
   3a0f8:	b	3a358 <mpfr_sum@@Base+0x820>
   3a0fc:	sub	w12, w9, #0x1
   3a100:	mov	x13, #0xffffffffffffffff    	// #-1
   3a104:	lsl	x12, x13, x12
   3a108:	mvn	x12, x12
   3a10c:	b	3a360 <mpfr_sum@@Base+0x828>
   3a110:	sub	x20, x25, x8
   3a114:	cmp	x20, #0x1
   3a118:	b.lt	3a13c <mpfr_sum@@Base+0x604>  // b.tstop
   3a11c:	add	x0, x28, x20, lsl #3
   3a120:	cmp	x0, x22
   3a124:	b.eq	3a13c <mpfr_sum@@Base+0x604>  // b.none
   3a128:	lsl	x2, x8, #3
   3a12c:	mov	x1, x22
   3a130:	mov	x19, x18
   3a134:	bl	bad0 <memcpy@plt>
   3a138:	mov	x18, x19
   3a13c:	mov	w19, wzr
   3a140:	lsl	x8, x20, #6
   3a144:	add	x19, x8, w19, uxtw
   3a148:	orr	x8, x19, #0x8000000000000000
   3a14c:	cmp	x18, x8
   3a150:	b.lt	3a55c <mpfr_sum@@Base+0xa24>  // b.tstop
   3a154:	ldur	x25, [x29, #-88]
   3a158:	ldur	x24, [x29, #-160]
   3a15c:	sub	x19, x18, x19
   3a160:	lsl	x2, x20, #3
   3a164:	mov	x0, x28
   3a168:	mov	w1, wzr
   3a16c:	bl	c1b0 <memset@plt>
   3a170:	sub	sp, sp, #0x30
   3a174:	ldur	x8, [x29, #-40]
   3a178:	ldur	x2, [x29, #-104]
   3a17c:	ldp	x3, x4, [x29, #-64]
   3a180:	mov	w20, #0x1                   	// #1
   3a184:	mov	x0, x28
   3a188:	mov	x1, x25
   3a18c:	mov	x5, x19
   3a190:	mov	x6, x24
   3a194:	mov	x7, x26
   3a198:	stp	xzr, xzr, [sp, #24]
   3a19c:	stp	x20, xzr, [sp, #8]
   3a1a0:	str	w8, [sp]
   3a1a4:	bl	3aa78 <mpfr_sum@@Base+0xf40>
   3a1a8:	add	sp, sp, #0x30
   3a1ac:	cbz	x0, 3a1dc <mpfr_sum@@Base+0x6a4>
   3a1b0:	ldur	x8, [x29, #-96]
   3a1b4:	ldp	x14, x15, [x29, #-80]
   3a1b8:	ldur	w12, [x29, #-44]
   3a1bc:	ldp	x1, x24, [x29, #-120]
   3a1c0:	ldr	x8, [x28, x8, lsl #3]
   3a1c4:	ldur	x18, [x29, #-136]
   3a1c8:	ldur	w2, [x29, #-124]
   3a1cc:	ldur	w16, [x29, #-140]
   3a1d0:	cmp	x8, #0x0
   3a1d4:	cneg	w8, w20, lt  // lt = tstop
   3a1d8:	b	3a218 <mpfr_sum@@Base+0x6e0>
   3a1dc:	ldur	w16, [x29, #-140]
   3a1e0:	ldur	w12, [x29, #-44]
   3a1e4:	ldur	w2, [x29, #-124]
   3a1e8:	ldur	x15, [x29, #-72]
   3a1ec:	cmp	w16, #0x1
   3a1f0:	b.ne	3a1fc <mpfr_sum@@Base+0x6c4>  // b.any
   3a1f4:	mov	w8, wzr
   3a1f8:	b	3a20c <mpfr_sum@@Base+0x6d4>
   3a1fc:	ldur	x8, [x29, #-152]
   3a200:	cmp	x8, #0x0
   3a204:	mov	w8, #0xffffffff            	// #-1
   3a208:	cneg	w8, w8, ne  // ne = any
   3a20c:	ldur	x14, [x29, #-80]
   3a210:	ldp	x1, x24, [x29, #-120]
   3a214:	ldur	x18, [x29, #-136]
   3a218:	cmp	w12, #0x3
   3a21c:	b.eq	3a240 <mpfr_sum@@Base+0x708>  // b.none
   3a220:	lsr	x9, x15, #63
   3a224:	cmp	w12, #0x1
   3a228:	eor	w9, w9, #0x1
   3a22c:	b.ne	3a234 <mpfr_sum@@Base+0x6fc>  // b.any
   3a230:	tbnz	w9, #0, 3a240 <mpfr_sum@@Base+0x708>
   3a234:	cmp	w12, #0x4
   3a238:	b.ne	3a304 <mpfr_sum@@Base+0x7cc>  // b.any
   3a23c:	tbz	x15, #63, 3a304 <mpfr_sum@@Base+0x7cc>
   3a240:	cmp	w8, #0x0
   3a244:	csetm	w9, ne  // ne = any
   3a248:	cmp	w16, #0x2
   3a24c:	stur	w9, [x29, #-40]
   3a250:	b.ne	3a270 <mpfr_sum@@Base+0x738>  // b.any
   3a254:	cmp	x24, #0x0
   3a258:	mov	w9, #0x1                   	// #1
   3a25c:	cneg	w10, w9, ne  // ne = any
   3a260:	cmp	w8, w10
   3a264:	b.ne	3a270 <mpfr_sum@@Base+0x738>  // b.any
   3a268:	sub	w24, w9, w24
   3a26c:	b	3a5d8 <mpfr_sum@@Base+0xaa0>
   3a270:	cmp	w12, #0x3
   3a274:	b.eq	3a298 <mpfr_sum@@Base+0x760>  // b.none
   3a278:	cmp	w12, #0x1
   3a27c:	cset	w9, eq  // eq = none
   3a280:	cmp	w12, #0x4
   3a284:	cset	w10, eq  // eq = none
   3a288:	cmp	x15, #0x0
   3a28c:	csel	w9, w10, w9, lt  // lt = tstop
   3a290:	cmp	w9, #0x1
   3a294:	b.ne	3a2a8 <mpfr_sum@@Base+0x770>  // b.any
   3a298:	cmn	w8, #0x1
   3a29c:	b.ne	3a2a8 <mpfr_sum@@Base+0x770>  // b.any
   3a2a0:	sub	w24, w24, #0x1
   3a2a4:	b	3a5d8 <mpfr_sum@@Base+0xaa0>
   3a2a8:	cmp	x15, #0x0
   3a2ac:	cset	w9, lt  // lt = tstop
   3a2b0:	cmp	w12, #0x1
   3a2b4:	cset	w10, eq  // eq = none
   3a2b8:	cmp	w12, #0x2
   3a2bc:	b.eq	3a2d4 <mpfr_sum@@Base+0x79c>  // b.none
   3a2c0:	and	w9, w10, w9
   3a2c4:	tbnz	w9, #0, 3a2d4 <mpfr_sum@@Base+0x79c>
   3a2c8:	cmp	w12, #0x4
   3a2cc:	b.ne	3a5d8 <mpfr_sum@@Base+0xaa0>  // b.any
   3a2d0:	tbnz	x15, #63, 3a5d8 <mpfr_sum@@Base+0xaa0>
   3a2d4:	cmp	w8, #0x1
   3a2d8:	b.ne	3a5d8 <mpfr_sum@@Base+0xaa0>  // b.any
   3a2dc:	add	w24, w24, #0x1
   3a2e0:	b	3a5d8 <mpfr_sum@@Base+0xaa0>
   3a2e4:	mov	w8, wzr
   3a2e8:	mov	w9, #0x1                   	// #1
   3a2ec:	cmp	x17, #0x0
   3a2f0:	cset	w10, ne  // ne = any
   3a2f4:	tst	w10, w9
   3a2f8:	csel	x24, xzr, x17, ne  // ne = any
   3a2fc:	csinc	w20, w8, wzr, eq  // eq = none
   3a300:	b	3a444 <mpfr_sum@@Base+0x90c>
   3a304:	cmp	w12, #0x4
   3a308:	cset	w11, eq  // eq = none
   3a30c:	cmp	w12, #0x1
   3a310:	cset	w10, eq  // eq = none
   3a314:	cmp	x15, #0x0
   3a318:	and	w11, w11, w9
   3a31c:	cset	w9, lt  // lt = tstop
   3a320:	tbnz	w11, #0, 3a4a8 <mpfr_sum@@Base+0x970>
   3a324:	cmp	w12, #0x2
   3a328:	b.eq	3a4a8 <mpfr_sum@@Base+0x970>  // b.none
   3a32c:	and	w9, w10, w9
   3a330:	cbnz	w9, 3a4a8 <mpfr_sum@@Base+0x970>
   3a334:	cmp	w16, #0x1
   3a338:	cneg	w9, w8, eq  // eq = none
   3a33c:	b	3a248 <mpfr_sum@@Base+0x710>
   3a340:	sub	x8, x8, #0x1
   3a344:	ldr	x9, [x22, x8, lsl #3]
   3a348:	tst	x9, #0x7fffffffffffffff
   3a34c:	b.ne	3a43c <mpfr_sum@@Base+0x904>  // b.any
   3a350:	b	3a0b0 <mpfr_sum@@Base+0x578>
   3a354:	mov	x11, xzr
   3a358:	mov	x12, #0xffffffffffffffff    	// #-1
   3a35c:	mov	w9, #0x41                  	// #65
   3a360:	subs	x13, x9, x10
   3a364:	csel	x15, x13, xzr, gt
   3a368:	sub	x14, x10, x9
   3a36c:	lsr	x13, x12, x15
   3a370:	lsr	x11, x11, x15
   3a374:	csel	x12, xzr, x14, gt
   3a378:	ands	x11, x11, x13
   3a37c:	b.eq	3a394 <mpfr_sum@@Base+0x85c>  // b.none
   3a380:	cmp	x11, x13
   3a384:	b.ne	3a43c <mpfr_sum@@Base+0x904>  // b.any
   3a388:	cbz	x17, 3a3b4 <mpfr_sum@@Base+0x87c>
   3a38c:	mov	w14, #0x1                   	// #1
   3a390:	b	3a3c0 <mpfr_sum@@Base+0x888>
   3a394:	mov	x11, xzr
   3a398:	cbz	x17, 3a3ac <mpfr_sum@@Base+0x874>
   3a39c:	cmp	w16, #0x0
   3a3a0:	cset	w13, eq  // eq = none
   3a3a4:	lsl	w14, w13, #1
   3a3a8:	b	3a3c4 <mpfr_sum@@Base+0x88c>
   3a3ac:	mov	w14, #0x1                   	// #1
   3a3b0:	b	3a3c4 <mpfr_sum@@Base+0x88c>
   3a3b4:	cmp	w16, #0x0
   3a3b8:	cset	w11, eq  // eq = none
   3a3bc:	lsl	w14, w11, #1
   3a3c0:	mov	x11, #0xffffffffffffffff    	// #-1
   3a3c4:	mov	w20, #0x1                   	// #1
   3a3c8:	cbz	x12, 39f6c <mpfr_sum@@Base+0x434>
   3a3cc:	cbz	w14, 39f6c <mpfr_sum@@Base+0x434>
   3a3d0:	ldur	x12, [x29, #-104]
   3a3d4:	cmp	x9, x10
   3a3d8:	csel	x10, x9, x10, gt
   3a3dc:	sub	x9, x10, x9
   3a3e0:	add	x12, x26, x12, lsl #3
   3a3e4:	sub	x9, x9, #0x40
   3a3e8:	cbz	x8, 3a420 <mpfr_sum@@Base+0x8e8>
   3a3ec:	ldr	x10, [x12, x8, lsl #3]
   3a3f0:	add	x13, x9, #0x40
   3a3f4:	cmp	x13, #0x3f
   3a3f8:	b.le	3a428 <mpfr_sum@@Base+0x8f0>
   3a3fc:	cbz	x9, 3a410 <mpfr_sum@@Base+0x8d8>
   3a400:	sub	x8, x8, #0x1
   3a404:	cmp	x10, x11
   3a408:	sub	x9, x9, #0x40
   3a40c:	b.eq	3a3e8 <mpfr_sum@@Base+0x8b0>  // b.none
   3a410:	cmp	x10, x11
   3a414:	csel	w14, w14, wzr, eq  // eq = none
   3a418:	mov	w20, #0x1                   	// #1
   3a41c:	b	39f6c <mpfr_sum@@Base+0x434>
   3a420:	cbnz	x11, 3a43c <mpfr_sum@@Base+0x904>
   3a424:	b	39f74 <mpfr_sum@@Base+0x43c>
   3a428:	neg	w8, w9
   3a42c:	lsr	x9, x10, x8
   3a430:	lsr	x8, x11, x8
   3a434:	cmp	x9, x8
   3a438:	b.eq	39f74 <mpfr_sum@@Base+0x43c>  // b.none
   3a43c:	mov	w20, #0x1                   	// #1
   3a440:	mov	x24, x17
   3a444:	cmp	w16, #0x4
   3a448:	b.hi	3a580 <mpfr_sum@@Base+0xa48>  // b.pmore
   3a44c:	adrp	x9, 5e000 <mpfr_bases@@Base+0x4f8>
   3a450:	mov	w8, w16
   3a454:	add	x9, x9, #0x334
   3a458:	adr	x10, 3a470 <mpfr_sum@@Base+0x938>
   3a45c:	ldrb	w11, [x9, x8]
   3a460:	add	x10, x10, x11, lsl #2
   3a464:	ldur	x14, [x29, #-80]
   3a468:	mov	w8, wzr
   3a46c:	br	x10
   3a470:	cmp	x25, #0x0
   3a474:	cset	w8, lt  // lt = tstop
   3a478:	cmp	w20, #0x0
   3a47c:	cset	w9, ne  // ne = any
   3a480:	and	w8, w8, w9
   3a484:	b	3a5b8 <mpfr_sum@@Base+0xa80>
   3a488:	mov	w8, w20
   3a48c:	b	3a5b8 <mpfr_sum@@Base+0xa80>
   3a490:	cmp	x25, #0x0
   3a494:	cset	w8, ge  // ge = tcont
   3a498:	cmp	w20, #0x0
   3a49c:	cset	w9, ne  // ne = any
   3a4a0:	and	w8, w9, w8
   3a4a4:	b	3a5b8 <mpfr_sum@@Base+0xa80>
   3a4a8:	cmp	w8, #0x0
   3a4ac:	cset	w9, ne  // ne = any
   3a4b0:	b	3a248 <mpfr_sum@@Base+0x710>
   3a4b4:	mov	w8, wzr
   3a4b8:	b	39d70 <mpfr_sum@@Base+0x238>
   3a4bc:	sub	x0, x29, #0x10
   3a4c0:	bl	be70 <mpfr_tmp_allocate@plt>
   3a4c4:	mov	x26, x0
   3a4c8:	b	39e18 <mpfr_sum@@Base+0x2e0>
   3a4cc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3a4d0:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3a4d4:	add	x0, x0, #0x339
   3a4d8:	add	x2, x2, #0x348
   3a4dc:	mov	w1, #0x278                 	// #632
   3a4e0:	bl	cb90 <mpfr_assert_fail@plt>
   3a4e4:	b	39e38 <mpfr_sum@@Base+0x300>
   3a4e8:	ldur	w8, [x29, #-44]
   3a4ec:	ldur	x10, [x29, #-80]
   3a4f0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3a4f4:	cmp	w8, #0x3
   3a4f8:	mov	w8, #0xffffffff            	// #-1
   3a4fc:	cneg	w8, w8, ne  // ne = any
   3a500:	str	w8, [x10, #8]
   3a504:	str	x9, [x10, #16]
   3a508:	ldur	x0, [x29, #-16]
   3a50c:	cbnz	x0, 3aa4c <mpfr_sum@@Base+0xf14>
   3a510:	mov	w22, wzr
   3a514:	b	3a958 <mpfr_sum@@Base+0xe20>
   3a518:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3a51c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3a520:	add	x0, x0, #0x339
   3a524:	add	x2, x2, #0x33f
   3a528:	mov	w1, #0x22f                 	// #559
   3a52c:	bl	cb90 <mpfr_assert_fail@plt>
   3a530:	b	39d64 <mpfr_sum@@Base+0x22c>
   3a534:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3a538:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3a53c:	add	x0, x0, #0x339
   3a540:	add	x2, x2, #0x348
   3a544:	mov	w1, #0x3ec                 	// #1004
   3a548:	mov	x25, x3
   3a54c:	bl	cb90 <mpfr_assert_fail@plt>
   3a550:	mov	x3, x25
   3a554:	ldur	x25, [x29, #-88]
   3a558:	b	39fbc <mpfr_sum@@Base+0x484>
   3a55c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3a560:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3a564:	add	x0, x0, #0x339
   3a568:	add	x2, x2, #0x388
   3a56c:	mov	w1, #0x3de                 	// #990
   3a570:	mov	x24, x18
   3a574:	bl	cb90 <mpfr_assert_fail@plt>
   3a578:	mov	x18, x24
   3a57c:	b	3a154 <mpfr_sum@@Base+0x61c>
   3a580:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3a584:	mov	w28, w2
   3a588:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3a58c:	add	x0, x0, #0x339
   3a590:	add	x2, x2, #0x377
   3a594:	mov	x26, x1
   3a598:	mov	w1, #0x390                 	// #912
   3a59c:	mov	x19, x18
   3a5a0:	bl	cb90 <mpfr_assert_fail@plt>
   3a5a4:	ldur	x14, [x29, #-80]
   3a5a8:	mov	w2, w28
   3a5ac:	mov	x1, x26
   3a5b0:	mov	x18, x19
   3a5b4:	mov	w8, w24
   3a5b8:	cmp	w20, #0x0
   3a5bc:	cset	w9, ne  // ne = any
   3a5c0:	cmp	w8, #0x0
   3a5c4:	cset	w10, eq  // eq = none
   3a5c8:	tst	w9, w10
   3a5cc:	csel	w24, wzr, w8, ne  // ne = any
   3a5d0:	csinv	w8, w20, wzr, eq  // eq = none
   3a5d4:	stur	w8, [x29, #-40]
   3a5d8:	sub	x8, x27, #0x1
   3a5dc:	add	x9, x27, #0x3e
   3a5e0:	cmp	x8, #0x0
   3a5e4:	add	x10, x23, #0x3f
   3a5e8:	csel	x8, x9, x8, lt  // lt = tstop
   3a5ec:	cmp	x23, #0x0
   3a5f0:	asr	x20, x8, #6
   3a5f4:	csel	x8, x10, x23, lt  // lt = tstop
   3a5f8:	and	x9, x8, #0xffffffffffffffc0
   3a5fc:	add	x25, x20, #0x1
   3a600:	subs	x8, x1, x18
   3a604:	sub	x23, x23, x9
   3a608:	str	w2, [x14, #8]
   3a60c:	b.le	3a97c <mpfr_sum@@Base+0xe44>
   3a610:	add	x9, x8, #0x3f
   3a614:	cmp	x8, #0x0
   3a618:	csel	x8, x9, x8, lt  // lt = tstop
   3a61c:	mov	x28, x27
   3a620:	mov	x27, x22
   3a624:	mov	x22, x14
   3a628:	asr	x19, x8, #6
   3a62c:	cbz	w23, 3aa30 <mpfr_sum@@Base+0xef8>
   3a630:	ldur	x8, [x29, #-32]
   3a634:	mov	x0, x21
   3a638:	mov	x2, x25
   3a63c:	mov	w3, w23
   3a640:	sub	x8, x8, x18
   3a644:	add	x9, x8, #0x3f
   3a648:	cmp	x8, #0x0
   3a64c:	csel	x8, x9, x8, lt  // lt = tstop
   3a650:	asr	x8, x8, #6
   3a654:	sub	x26, x8, x20
   3a658:	add	x1, x27, x26, lsl #3
   3a65c:	bl	bd70 <__gmpn_lshift@plt>
   3a660:	cmp	x26, x19
   3a664:	b.eq	3a680 <mpfr_sum@@Base+0xb48>  // b.none
   3a668:	ldr	x8, [x27, x19, lsl #3]
   3a66c:	ldr	x9, [x21]
   3a670:	neg	x10, x23
   3a674:	lsr	x8, x8, x10
   3a678:	orr	x8, x9, x8
   3a67c:	str	x8, [x21]
   3a680:	cmp	x28, #0x1
   3a684:	b.eq	3a9dc <mpfr_sum@@Base+0xea4>  // b.none
   3a688:	lsl	x8, x25, #6
   3a68c:	sub	x9, x8, x28
   3a690:	ldur	x8, [x29, #-72]
   3a694:	mov	x19, x22
   3a698:	tbnz	x8, #63, 3a6fc <mpfr_sum@@Base+0xbc4>
   3a69c:	ldr	x10, [x21]
   3a6a0:	mov	w8, #0x1                   	// #1
   3a6a4:	ldur	w22, [x29, #-40]
   3a6a8:	lsl	x8, x8, x9
   3a6ac:	neg	x11, x8
   3a6b0:	and	x10, x10, x11
   3a6b4:	cmp	w24, #0x1
   3a6b8:	str	x10, [x21]
   3a6bc:	b.lt	3a81c <mpfr_sum@@Base+0xce4>  // b.tstop
   3a6c0:	and	x9, x9, #0xffffffff
   3a6c4:	lsl	x9, x24, x9
   3a6c8:	cbz	x9, 3a7cc <mpfr_sum@@Base+0xc94>
   3a6cc:	adds	x9, x10, x9
   3a6d0:	str	x9, [x21]
   3a6d4:	b.cc	3a8ec <mpfr_sum@@Base+0xdb4>  // b.lo, b.ul, b.last
   3a6d8:	mov	w9, #0x1                   	// #1
   3a6dc:	cmp	x9, x20
   3a6e0:	b.gt	3a804 <mpfr_sum@@Base+0xccc>
   3a6e4:	ldr	x10, [x21, x9, lsl #3]
   3a6e8:	adds	x10, x10, #0x1
   3a6ec:	str	x10, [x21, x9, lsl #3]
   3a6f0:	add	x9, x9, #0x1
   3a6f4:	b.cs	3a6dc <mpfr_sum@@Base+0xba4>  // b.hs, b.nlast
   3a6f8:	b	3a81c <mpfr_sum@@Base+0xce4>
   3a6fc:	cmp	w24, #0x1
   3a700:	b.gt	3a764 <mpfr_sum@@Base+0xc2c>
   3a704:	mov	w8, #0x1                   	// #1
   3a708:	ldr	x10, [x21]
   3a70c:	sub	w8, w8, w24
   3a710:	mov	x11, #0xffffffffffffffff    	// #-1
   3a714:	sxtw	x8, w8
   3a718:	lsl	x8, x8, x9
   3a71c:	lsl	x9, x11, x9
   3a720:	bic	x9, x9, x10
   3a724:	adds	x9, x9, x8
   3a728:	str	x9, [x21]
   3a72c:	b.cs	3a738 <mpfr_sum@@Base+0xc00>  // b.hs, b.nlast
   3a730:	tbz	w24, #31, 3a898 <mpfr_sum@@Base+0xd60>
   3a734:	cbnz	x8, 3a898 <mpfr_sum@@Base+0xd60>
   3a738:	ldur	w22, [x29, #-40]
   3a73c:	add	x8, x28, #0x3e
   3a740:	cmp	x8, #0x7f
   3a744:	b.cs	3a884 <mpfr_sum@@Base+0xd4c>  // b.hs, b.nlast
   3a748:	ldr	x8, [x21, x20, lsl #3]
   3a74c:	orr	x8, x8, #0x8000000000000000
   3a750:	str	x8, [x21, x20, lsl #3]
   3a754:	ldur	x8, [x29, #-32]
   3a758:	add	x8, x8, #0x1
   3a75c:	stur	x8, [x29, #-32]
   3a760:	b	3a8ec <mpfr_sum@@Base+0xdb4>
   3a764:	ldr	x10, [x21]
   3a768:	mov	w8, #0x1                   	// #1
   3a76c:	lsl	x9, x8, x9
   3a770:	sub	x11, x9, #0x1
   3a774:	orr	x10, x10, x11
   3a778:	mvn	x11, x10
   3a77c:	sub	x9, x11, x9
   3a780:	cmn	x10, #0x1
   3a784:	str	x9, [x21]
   3a788:	b.ne	3a7b4 <mpfr_sum@@Base+0xc7c>  // b.any
   3a78c:	mov	x8, xzr
   3a790:	add	x9, x21, x8, lsl #3
   3a794:	ldr	x9, [x9, #8]
   3a798:	add	x8, x8, #0x1
   3a79c:	cmn	x9, #0x1
   3a7a0:	b.eq	3a790 <mpfr_sum@@Base+0xc58>  // b.none
   3a7a4:	mov	x10, #0xfffffffffffffffe    	// #-2
   3a7a8:	sub	x9, x10, x9
   3a7ac:	str	x9, [x21, x8, lsl #3]
   3a7b0:	add	x8, x8, #0x1
   3a7b4:	cmp	x20, x8
   3a7b8:	b.ge	3a86c <mpfr_sum@@Base+0xd34>  // b.tcont
   3a7bc:	ldr	x8, [x21, x20, lsl #3]
   3a7c0:	ldur	w22, [x29, #-40]
   3a7c4:	tbnz	x8, #63, 3a8ec <mpfr_sum@@Base+0xdb4>
   3a7c8:	b	3a858 <mpfr_sum@@Base+0xd20>
   3a7cc:	ldr	x9, [x21, #8]
   3a7d0:	adds	x9, x9, #0x1
   3a7d4:	str	x9, [x21, #8]
   3a7d8:	b.cc	3a8ec <mpfr_sum@@Base+0xdb4>  // b.lo, b.ul, b.last
   3a7dc:	mov	w9, #0x2                   	// #2
   3a7e0:	sub	x10, x9, #0x1
   3a7e4:	cmp	x10, x20
   3a7e8:	b.ge	3a804 <mpfr_sum@@Base+0xccc>  // b.tcont
   3a7ec:	ldr	x10, [x21, x9, lsl #3]
   3a7f0:	adds	x10, x10, #0x1
   3a7f4:	str	x10, [x21, x9, lsl #3]
   3a7f8:	add	x9, x9, #0x1
   3a7fc:	b.cs	3a7e0 <mpfr_sum@@Base+0xca8>  // b.hs, b.nlast
   3a800:	b	3a81c <mpfr_sum@@Base+0xce4>
   3a804:	ldr	x9, [x21, x20, lsl #3]
   3a808:	orr	x9, x9, #0x8000000000000000
   3a80c:	str	x9, [x21, x20, lsl #3]
   3a810:	ldur	x9, [x29, #-32]
   3a814:	add	x9, x9, #0x1
   3a818:	stur	x9, [x29, #-32]
   3a81c:	tbz	w24, #31, 3a8ec <mpfr_sum@@Base+0xdb4>
   3a820:	ldr	x9, [x21]
   3a824:	subs	x8, x9, x8
   3a828:	str	x8, [x21]
   3a82c:	b.cs	3a850 <mpfr_sum@@Base+0xd18>  // b.hs, b.nlast
   3a830:	mov	w8, #0x1                   	// #1
   3a834:	cmp	x8, x20
   3a838:	b.gt	3a850 <mpfr_sum@@Base+0xd18>
   3a83c:	ldr	x9, [x21, x8, lsl #3]
   3a840:	sub	x10, x9, #0x1
   3a844:	str	x10, [x21, x8, lsl #3]
   3a848:	add	x8, x8, #0x1
   3a84c:	cbz	x9, 3a834 <mpfr_sum@@Base+0xcfc>
   3a850:	ldr	x8, [x21, x20, lsl #3]
   3a854:	tbnz	x8, #63, 3a8ec <mpfr_sum@@Base+0xdb4>
   3a858:	orr	x8, x8, #0x8000000000000000
   3a85c:	str	x8, [x21, x20, lsl #3]
   3a860:	ldur	x8, [x29, #-32]
   3a864:	sub	x8, x8, #0x1
   3a868:	b	3a75c <mpfr_sum@@Base+0xc24>
   3a86c:	add	x0, x21, x8, lsl #3
   3a870:	sub	x2, x25, x8
   3a874:	mov	x1, x0
   3a878:	bl	bec0 <__gmpn_com@plt>
   3a87c:	ldur	w22, [x29, #-40]
   3a880:	b	3a8ec <mpfr_sum@@Base+0xdb4>
   3a884:	mov	x8, x21
   3a888:	ldr	x10, [x8, #8]!
   3a88c:	cbz	x10, 3a8b4 <mpfr_sum@@Base+0xd7c>
   3a890:	mov	x9, x20
   3a894:	b	3a8d0 <mpfr_sum@@Base+0xd98>
   3a898:	ldur	w22, [x29, #-40]
   3a89c:	cmp	x28, #0x41
   3a8a0:	b.lt	3a8ec <mpfr_sum@@Base+0xdb4>  // b.tstop
   3a8a4:	add	x0, x21, #0x8
   3a8a8:	mov	x1, x0
   3a8ac:	mov	x2, x20
   3a8b0:	b	3a8e8 <mpfr_sum@@Base+0xdb0>
   3a8b4:	mov	x9, x20
   3a8b8:	subs	x9, x9, #0x1
   3a8bc:	str	xzr, [x8]
   3a8c0:	b.eq	3a748 <mpfr_sum@@Base+0xc10>  // b.none
   3a8c4:	ldr	x10, [x8, #8]!
   3a8c8:	cbz	x10, 3a8b8 <mpfr_sum@@Base+0xd80>
   3a8cc:	sub	x21, x8, #0x8
   3a8d0:	neg	x10, x10
   3a8d4:	subs	x2, x9, #0x1
   3a8d8:	str	x10, [x8]
   3a8dc:	b.eq	3a8ec <mpfr_sum@@Base+0xdb4>  // b.none
   3a8e0:	add	x0, x8, #0x8
   3a8e4:	add	x1, x21, #0x10
   3a8e8:	bl	bec0 <__gmpn_com@plt>
   3a8ec:	ldur	x8, [x29, #-32]
   3a8f0:	str	x8, [x19, #16]
   3a8f4:	ldur	x0, [x29, #-16]
   3a8f8:	cbnz	x0, 3aa0c <mpfr_sum@@Base+0xed4>
   3a8fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3a900:	ldr	x1, [x0, #2592]
   3a904:	add	x0, x0, #0xa20
   3a908:	blr	x1
   3a90c:	mrs	x9, tpidr_el0
   3a910:	ldr	x10, [x9, x0]
   3a914:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3a918:	ldr	x1, [x0, #2624]
   3a91c:	add	x0, x0, #0xa40
   3a920:	blr	x1
   3a924:	cmp	x8, x10
   3a928:	b.lt	3aa18 <mpfr_sum@@Base+0xee0>  // b.tstop
   3a92c:	ldr	x10, [x9, x0]
   3a930:	cmp	x8, x10
   3a934:	b.gt	3aa18 <mpfr_sum@@Base+0xee0>
   3a938:	cbz	w22, 3a958 <mpfr_sum@@Base+0xe20>
   3a93c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3a940:	ldr	x1, [x0, #2656]
   3a944:	add	x0, x0, #0xa60
   3a948:	blr	x1
   3a94c:	ldr	w8, [x9, x0]
   3a950:	orr	w8, w8, #0x8
   3a954:	str	w8, [x9, x0]
   3a958:	mov	w0, w22
   3a95c:	mov	sp, x29
   3a960:	ldp	x20, x19, [sp, #80]
   3a964:	ldp	x22, x21, [sp, #64]
   3a968:	ldp	x24, x23, [sp, #48]
   3a96c:	ldp	x26, x25, [sp, #32]
   3a970:	ldp	x28, x27, [sp, #16]
   3a974:	ldp	x29, x30, [sp], #96
   3a978:	ret
   3a97c:	ldur	x8, [x29, #-32]
   3a980:	mov	x1, x22
   3a984:	mov	x28, x27
   3a988:	mov	x22, x14
   3a98c:	sub	x8, x8, x18
   3a990:	add	x9, x8, #0x3f
   3a994:	add	x10, x8, #0x7e
   3a998:	cmp	x9, #0x0
   3a99c:	csel	x9, x10, x9, lt  // lt = tstop
   3a9a0:	asr	x26, x9, #6
   3a9a4:	cbz	w23, 3aa54 <mpfr_sum@@Base+0xf1c>
   3a9a8:	add	x8, x21, x25, lsl #3
   3a9ac:	sub	x0, x8, x26, lsl #3
   3a9b0:	mov	x2, x26
   3a9b4:	mov	w3, w23
   3a9b8:	bl	bd70 <__gmpn_lshift@plt>
   3a9bc:	cmp	x20, x26
   3a9c0:	b.lt	3a680 <mpfr_sum@@Base+0xb48>  // b.tstop
   3a9c4:	sub	x8, x25, x26
   3a9c8:	lsl	x2, x8, #3
   3a9cc:	mov	x0, x21
   3a9d0:	mov	w1, wzr
   3a9d4:	bl	c1b0 <memset@plt>
   3a9d8:	b	3a680 <mpfr_sum@@Base+0xb48>
   3a9dc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3a9e0:	ldur	x10, [x29, #-72]
   3a9e4:	str	x8, [x21]
   3a9e8:	ldur	x9, [x29, #-32]
   3a9ec:	mov	w8, #0x1                   	// #1
   3a9f0:	sub	w8, w8, w24
   3a9f4:	cmp	x10, #0x0
   3a9f8:	mov	x19, x22
   3a9fc:	ldur	w22, [x29, #-40]
   3aa00:	csel	w8, w8, w24, lt  // lt = tstop
   3aa04:	add	x8, x9, w8, sxtw
   3aa08:	b	3a75c <mpfr_sum@@Base+0xc24>
   3aa0c:	bl	c460 <mpfr_tmp_free@plt>
   3aa10:	ldr	x8, [x19, #16]
   3aa14:	b	3a8fc <mpfr_sum@@Base+0xdc4>
   3aa18:	ldur	w2, [x29, #-44]
   3aa1c:	mov	x0, x19
   3aa20:	mov	w1, w22
   3aa24:	bl	cb80 <mpfr_check_range@plt>
   3aa28:	mov	w22, w0
   3aa2c:	b	3a958 <mpfr_sum@@Base+0xe20>
   3aa30:	add	x1, x27, x19, lsl #3
   3aa34:	cmp	x21, x1
   3aa38:	b.eq	3a680 <mpfr_sum@@Base+0xb48>  // b.none
   3aa3c:	lsl	x2, x25, #3
   3aa40:	mov	x0, x21
   3aa44:	bl	bad0 <memcpy@plt>
   3aa48:	b	3a680 <mpfr_sum@@Base+0xb48>
   3aa4c:	bl	c460 <mpfr_tmp_free@plt>
   3aa50:	b	3a510 <mpfr_sum@@Base+0x9d8>
   3aa54:	cmp	x8, #0x1
   3aa58:	b.lt	3a9bc <mpfr_sum@@Base+0xe84>  // b.tstop
   3aa5c:	add	x8, x21, x25, lsl #3
   3aa60:	sub	x0, x8, x26, lsl #3
   3aa64:	cmp	x0, x1
   3aa68:	b.eq	3a9bc <mpfr_sum@@Base+0xe84>  // b.none
   3aa6c:	lsl	x2, x26, #3
   3aa70:	bl	bad0 <memcpy@plt>
   3aa74:	b	3a9bc <mpfr_sum@@Base+0xe84>
   3aa78:	sub	sp, sp, #0xf0
   3aa7c:	stp	x29, x30, [sp, #144]
   3aa80:	add	x29, sp, #0x90
   3aa84:	ldr	x8, [x29, #128]
   3aa88:	ldrsw	x9, [x29, #96]
   3aa8c:	mov	x14, #0x4                   	// #4
   3aa90:	stp	x28, x27, [sp, #160]
   3aa94:	str	x8, [sp, #16]
   3aa98:	ldr	x8, [x29, #120]
   3aa9c:	stp	x24, x23, [sp, #192]
   3aaa0:	stp	x22, x21, [sp, #208]
   3aaa4:	stp	x20, x19, [sp, #224]
   3aaa8:	str	x8, [sp, #8]
   3aaac:	ldr	x8, [x29, #112]
   3aab0:	mov	x28, x7
   3aab4:	mov	x27, x5
   3aab8:	mov	x20, x4
   3aabc:	str	x8, [sp, #24]
   3aac0:	ldr	x8, [x29, #104]
   3aac4:	mov	x21, x3
   3aac8:	mov	x19, x1
   3aacc:	mov	x24, x0
   3aad0:	str	x8, [sp, #56]
   3aad4:	sub	x8, x1, #0x1
   3aad8:	stur	x8, [x29, #-56]
   3aadc:	lsl	x8, x1, #6
   3aae0:	str	x8, [sp, #32]
   3aae4:	add	w8, w9, #0x1
   3aae8:	sub	x8, x2, w8, sxtw
   3aaec:	sub	x23, x0, #0x10
   3aaf0:	movk	x14, #0x8000, lsl #48
   3aaf4:	str	x8, [sp, #48]
   3aaf8:	orr	x8, x8, #0x8000000000000000
   3aafc:	stp	x26, x25, [sp, #176]
   3ab00:	stur	x6, [x29, #-16]
   3ab04:	str	x9, [sp, #72]
   3ab08:	stur	x2, [x29, #-64]
   3ab0c:	str	x8, [sp, #40]
   3ab10:	stp	x7, x1, [x29, #-48]
   3ab14:	stur	x0, [x29, #-32]
   3ab18:	str	x23, [sp, #64]
   3ab1c:	cbz	x20, 3ae40 <mpfr_sum@@Base+0x1308>
   3ab20:	mov	x23, xzr
   3ab24:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3ab28:	stur	x8, [x29, #-8]
   3ab2c:	stur	x27, [x29, #-24]
   3ab30:	ldr	x8, [x21, x23, lsl #3]
   3ab34:	ldr	x9, [x8, #16]
   3ab38:	cmp	x9, x14
   3ab3c:	b.lt	3ae18 <mpfr_sum@@Base+0x12e0>  // b.tstop
   3ab40:	ldr	x10, [x8]
   3ab44:	ldr	x25, [x8, #24]
   3ab48:	sub	x8, x10, #0x1
   3ab4c:	add	x11, x10, #0x3e
   3ab50:	cmp	x8, #0x0
   3ab54:	csel	x8, x11, x8, lt  // lt = tstop
   3ab58:	asr	x8, x8, #6
   3ab5c:	add	x26, x8, #0x1
   3ab60:	sub	x8, x9, x26, lsl #6
   3ab64:	subs	x8, x8, x27
   3ab68:	b.mi	3aba8 <mpfr_sum@@Base+0x1070>  // b.first
   3ab6c:	sub	x22, x19, x8, lsr #6
   3ab70:	cmp	x22, #0x1
   3ab74:	b.lt	3ae18 <mpfr_sum@@Base+0x12e0>  // b.tstop
   3ab78:	ldur	x10, [x29, #-16]
   3ab7c:	subs	x9, x9, x10
   3ab80:	b.le	3ac68 <mpfr_sum@@Base+0x1130>
   3ab84:	add	x10, x9, #0x3f
   3ab88:	cmp	x9, #0x0
   3ab8c:	csel	x10, x10, x9, lt  // lt = tstop
   3ab90:	sub	x26, x26, x10, asr #6
   3ab94:	cmp	x26, #0x1
   3ab98:	b.lt	3ae18 <mpfr_sum@@Base+0x12e0>  // b.tstop
   3ab9c:	asr	x10, x10, #6
   3aba0:	sub	w27, w9, w10, lsl #6
   3aba4:	b	3ac6c <mpfr_sum@@Base+0x1134>
   3aba8:	cmp	x9, x27
   3abac:	b.le	3acc0 <mpfr_sum@@Base+0x1188>
   3abb0:	sub	x10, x9, x10
   3abb4:	cmp	x10, x27
   3abb8:	ldur	x10, [x29, #-8]
   3abbc:	add	x11, x8, #0x3f
   3abc0:	csel	x10, x27, x10, lt  // lt = tstop
   3abc4:	cmp	x8, #0x0
   3abc8:	stur	x10, [x29, #-8]
   3abcc:	csel	x10, x11, x8, lt  // lt = tstop
   3abd0:	ldur	x11, [x29, #-16]
   3abd4:	add	x26, x26, x10, asr #6
   3abd8:	subs	x9, x9, x11
   3abdc:	asr	x11, x10, #6
   3abe0:	and	x10, x10, #0xffffffffffffffc0
   3abe4:	sub	x25, x25, x11, lsl #3
   3abe8:	sub	x22, x8, x10
   3abec:	b.le	3acdc <mpfr_sum@@Base+0x11a4>
   3abf0:	add	x8, x9, #0x3f
   3abf4:	cmp	x9, #0x0
   3abf8:	csel	x8, x8, x9, lt  // lt = tstop
   3abfc:	asr	x10, x8, #6
   3ac00:	sub	x26, x26, x8, asr #6
   3ac04:	sub	w27, w9, w10, lsl #6
   3ac08:	cbz	x22, 3ace4 <mpfr_sum@@Base+0x11ac>
   3ac0c:	neg	w3, w22
   3ac10:	mov	x0, x28
   3ac14:	mov	x1, x25
   3ac18:	mov	x2, x26
   3ac1c:	bl	bd90 <__gmpn_rshift@plt>
   3ac20:	sub	w8, w27, w22
   3ac24:	cmp	w8, #0x3f
   3ac28:	sub	w9, w8, #0x40
   3ac2c:	cset	w10, gt
   3ac30:	csel	w8, w9, w8, gt
   3ac34:	sub	x26, x26, x10
   3ac38:	mov	w27, wzr
   3ac3c:	cbz	w8, 3ac5c <mpfr_sum@@Base+0x1124>
   3ac40:	add	x9, x28, x26, lsl #3
   3ac44:	ldur	x10, [x9, #-8]
   3ac48:	neg	w8, w8
   3ac4c:	mov	x11, #0xffffffffffffffff    	// #-1
   3ac50:	lsl	x8, x11, x8
   3ac54:	bic	x8, x10, x8
   3ac58:	stur	x8, [x9, #-8]
   3ac5c:	mov	x22, x19
   3ac60:	mov	x25, x28
   3ac64:	b	3acb4 <mpfr_sum@@Base+0x117c>
   3ac68:	mov	w27, wzr
   3ac6c:	lsr	x9, x8, #6
   3ac70:	and	x28, x8, #0x3f
   3ac74:	add	x24, x24, x9, lsl #3
   3ac78:	cbz	x28, 3acd4 <mpfr_sum@@Base+0x119c>
   3ac7c:	ldur	x19, [x29, #-48]
   3ac80:	mov	x1, x25
   3ac84:	mov	x2, x26
   3ac88:	mov	w3, w28
   3ac8c:	mov	x0, x19
   3ac90:	bl	bd70 <__gmpn_lshift@plt>
   3ac94:	subs	w27, w27, w28
   3ac98:	b.pl	3aca8 <mpfr_sum@@Base+0x1170>  // b.nfrst
   3ac9c:	str	x0, [x19, x26, lsl #3]
   3aca0:	add	x26, x26, #0x1
   3aca4:	add	w27, w27, #0x40
   3aca8:	mov	x25, x19
   3acac:	mov	x28, x19
   3acb0:	ldur	x19, [x29, #-40]
   3acb4:	mov	x14, #0x4                   	// #4
   3acb8:	movk	x14, #0x8000, lsl #48
   3acbc:	b	3ace8 <mpfr_sum@@Base+0x11b0>
   3acc0:	ldur	x8, [x29, #-8]
   3acc4:	cmp	x9, x8
   3acc8:	csel	x8, x9, x8, gt
   3accc:	stur	x8, [x29, #-8]
   3acd0:	b	3ae18 <mpfr_sum@@Base+0x12e0>
   3acd4:	ldp	x28, x19, [x29, #-48]
   3acd8:	b	3ace8 <mpfr_sum@@Base+0x11b0>
   3acdc:	mov	w27, wzr
   3ace0:	cbnz	x22, 3ac0c <mpfr_sum@@Base+0x10d4>
   3ace4:	mov	x22, x19
   3ace8:	ldr	x8, [x21, x23, lsl #3]
   3acec:	cmp	w27, #0x0
   3acf0:	cset	w9, ne  // ne = any
   3acf4:	sub	x26, x26, x9
   3acf8:	ldr	w8, [x8, #8]
   3acfc:	cmp	w8, #0x1
   3ad00:	b.lt	3ad8c <mpfr_sum@@Base+0x1254>  // b.tstop
   3ad04:	cmp	x26, #0x1
   3ad08:	b.lt	3ae28 <mpfr_sum@@Base+0x12f0>  // b.tstop
   3ad0c:	mov	x0, x24
   3ad10:	mov	x1, x24
   3ad14:	mov	x2, x25
   3ad18:	mov	x3, x26
   3ad1c:	bl	c5f0 <__gmpn_add_n@plt>
   3ad20:	mov	x14, #0x4                   	// #4
   3ad24:	movk	x14, #0x8000, lsl #48
   3ad28:	cbz	w27, 3ad44 <mpfr_sum@@Base+0x120c>
   3ad2c:	ldr	x8, [x25, x26, lsl #3]
   3ad30:	neg	w9, w27
   3ad34:	mov	x10, #0xffffffffffffffff    	// #-1
   3ad38:	lsl	x9, x10, x9
   3ad3c:	bic	x8, x8, x9
   3ad40:	add	x0, x8, x0
   3ad44:	ldur	x27, [x29, #-24]
   3ad48:	subs	x8, x22, x26
   3ad4c:	b.le	3ae14 <mpfr_sum@@Base+0x12dc>
   3ad50:	add	x9, x24, x26, lsl #3
   3ad54:	ldr	x10, [x9]
   3ad58:	adds	x10, x10, x0
   3ad5c:	str	x10, [x9]
   3ad60:	b.cc	3ae14 <mpfr_sum@@Base+0x12dc>  // b.lo, b.ul, b.last
   3ad64:	ldur	x24, [x29, #-32]
   3ad68:	mov	w10, #0x1                   	// #1
   3ad6c:	cmp	x10, x8
   3ad70:	b.ge	3ae18 <mpfr_sum@@Base+0x12e0>  // b.tcont
   3ad74:	ldr	x11, [x9, x10, lsl #3]
   3ad78:	adds	x11, x11, #0x1
   3ad7c:	str	x11, [x9, x10, lsl #3]
   3ad80:	add	x10, x10, #0x1
   3ad84:	b.cs	3ad6c <mpfr_sum@@Base+0x1234>  // b.hs, b.nlast
   3ad88:	b	3ae18 <mpfr_sum@@Base+0x12e0>
   3ad8c:	cmp	x26, #0x1
   3ad90:	b.lt	3ae34 <mpfr_sum@@Base+0x12fc>  // b.tstop
   3ad94:	mov	x0, x24
   3ad98:	mov	x1, x24
   3ad9c:	mov	x2, x25
   3ada0:	mov	x3, x26
   3ada4:	bl	bf10 <__gmpn_sub_n@plt>
   3ada8:	mov	x14, #0x4                   	// #4
   3adac:	movk	x14, #0x8000, lsl #48
   3adb0:	cbz	w27, 3adcc <mpfr_sum@@Base+0x1294>
   3adb4:	ldr	x8, [x25, x26, lsl #3]
   3adb8:	neg	w9, w27
   3adbc:	mov	x10, #0xffffffffffffffff    	// #-1
   3adc0:	lsl	x9, x10, x9
   3adc4:	bic	x8, x8, x9
   3adc8:	add	x0, x8, x0
   3adcc:	ldur	x27, [x29, #-24]
   3add0:	subs	x8, x22, x26
   3add4:	b.le	3ae14 <mpfr_sum@@Base+0x12dc>
   3add8:	add	x9, x24, x26, lsl #3
   3addc:	ldr	x10, [x9]
   3ade0:	subs	x10, x10, x0
   3ade4:	str	x10, [x9]
   3ade8:	b.cs	3ae14 <mpfr_sum@@Base+0x12dc>  // b.hs, b.nlast
   3adec:	ldur	x24, [x29, #-32]
   3adf0:	mov	w10, #0x1                   	// #1
   3adf4:	cmp	x10, x8
   3adf8:	b.ge	3ae18 <mpfr_sum@@Base+0x12e0>  // b.tcont
   3adfc:	ldr	x11, [x9, x10, lsl #3]
   3ae00:	sub	x12, x11, #0x1
   3ae04:	str	x12, [x9, x10, lsl #3]
   3ae08:	add	x10, x10, #0x1
   3ae0c:	cbz	x11, 3adf4 <mpfr_sum@@Base+0x12bc>
   3ae10:	b	3ae18 <mpfr_sum@@Base+0x12e0>
   3ae14:	ldur	x24, [x29, #-32]
   3ae18:	add	x23, x23, #0x1
   3ae1c:	cmp	x23, x20
   3ae20:	b.ne	3ab30 <mpfr_sum@@Base+0xff8>  // b.any
   3ae24:	b	3ae48 <mpfr_sum@@Base+0x1310>
   3ae28:	mov	x0, xzr
   3ae2c:	cbnz	w27, 3ad2c <mpfr_sum@@Base+0x11f4>
   3ae30:	b	3ad44 <mpfr_sum@@Base+0x120c>
   3ae34:	mov	x0, xzr
   3ae38:	cbnz	w27, 3adb4 <mpfr_sum@@Base+0x127c>
   3ae3c:	b	3adcc <mpfr_sum@@Base+0x1294>
   3ae40:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3ae44:	stur	x8, [x29, #-8]
   3ae48:	ldur	x8, [x29, #-56]
   3ae4c:	cmp	x19, #0x1
   3ae50:	ldr	x8, [x24, x8, lsl #3]
   3ae54:	b.lt	3aea4 <mpfr_sum@@Base+0x136c>  // b.tstop
   3ae58:	ldr	x23, [sp, #64]
   3ae5c:	asr	x9, x8, #63
   3ae60:	cmp	x8, x9
   3ae64:	mov	x10, xzr
   3ae68:	b.ne	3ae94 <mpfr_sum@@Base+0x135c>  // b.any
   3ae6c:	mov	x11, x19
   3ae70:	sub	x12, x11, #0x1
   3ae74:	cmp	x12, #0x1
   3ae78:	b.lt	3aed8 <mpfr_sum@@Base+0x13a0>  // b.tstop
   3ae7c:	ldr	x13, [x23, x11, lsl #3]
   3ae80:	add	x10, x10, #0x40
   3ae84:	mov	x11, x12
   3ae88:	cmp	x13, x9
   3ae8c:	b.eq	3ae70 <mpfr_sum@@Base+0x1338>  // b.none
   3ae90:	mov	x8, x13
   3ae94:	eor	x8, x8, x9
   3ae98:	clz	x8, x8
   3ae9c:	add	x0, x8, x10
   3aea0:	b	3aee0 <mpfr_sum@@Base+0x13a8>
   3aea4:	mov	x0, xzr
   3aea8:	tbnz	x8, #63, 3aee0 <mpfr_sum@@Base+0x13a8>
   3aeac:	ldur	x22, [x29, #-8]
   3aeb0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3aeb4:	cmp	x22, x8
   3aeb8:	b.eq	3aff8 <mpfr_sum@@Base+0x14c0>  // b.none
   3aebc:	ldr	x8, [sp, #40]
   3aec0:	cmp	x22, x8
   3aec4:	b.lt	3afb4 <mpfr_sum@@Base+0x147c>  // b.tstop
   3aec8:	ldr	x8, [sp, #48]
   3aecc:	stur	x22, [x29, #-16]
   3aed0:	sub	x27, x22, x8
   3aed4:	b	3ab1c <mpfr_sum@@Base+0xfe4>
   3aed8:	ldr	x0, [sp, #32]
   3aedc:	tbz	x8, #63, 3aeac <mpfr_sum@@Base+0x1374>
   3aee0:	ldur	x8, [x29, #-64]
   3aee4:	ldur	x12, [x29, #-8]
   3aee8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3aeec:	add	x8, x27, x8
   3aef0:	cmp	x12, x9
   3aef4:	sub	x8, x8, x0
   3aef8:	b.eq	3afd8 <mpfr_sum@@Base+0x14a0>  // b.none
   3aefc:	ldr	x9, [sp, #72]
   3af00:	add	x9, x12, x9
   3af04:	subs	x10, x8, x9
   3af08:	b.lt	3af18 <mpfr_sum@@Base+0x13e0>  // b.tstop
   3af0c:	ldr	x11, [sp, #56]
   3af10:	cmp	x10, x11
   3af14:	b.cs	3afd8 <mpfr_sum@@Base+0x14a0>  // b.hs, b.nlast
   3af18:	sub	x8, x9, x8
   3af1c:	cmp	x8, #0x0
   3af20:	csneg	x8, xzr, x8, le
   3af24:	add	x8, x0, x8
   3af28:	mov	x9, x19
   3af2c:	sub	x19, x8, #0x2
   3af30:	add	x8, x8, #0x3d
   3af34:	cmp	x19, #0x0
   3af38:	csel	x8, x8, x19, lt  // lt = tstop
   3af3c:	asr	x22, x8, #6
   3af40:	sub	w3, w19, w22, lsl #6
   3af44:	add	x0, x24, x22, lsl #3
   3af48:	sub	x2, x9, x8, asr #6
   3af4c:	mov	x1, x24
   3af50:	cbz	w3, 3af90 <mpfr_sum@@Base+0x1458>
   3af54:	bl	bd70 <__gmpn_lshift@plt>
   3af58:	lsl	x2, x22, #3
   3af5c:	mov	x0, x24
   3af60:	mov	w1, wzr
   3af64:	bl	c1b0 <memset@plt>
   3af68:	orr	x8, x19, #0x8000000000000000
   3af6c:	cmp	x27, x8
   3af70:	b.lt	3af98 <mpfr_sum@@Base+0x1460>  // b.tstop
   3af74:	ldur	x8, [x29, #-8]
   3af78:	sub	x27, x27, x19
   3af7c:	ldur	x19, [x29, #-40]
   3af80:	mov	x14, #0x4                   	// #4
   3af84:	stur	x8, [x29, #-16]
   3af88:	movk	x14, #0x8000, lsl #48
   3af8c:	b	3ab1c <mpfr_sum@@Base+0xfe4>
   3af90:	bl	bba0 <__gmpn_copyd@plt>
   3af94:	b	3af58 <mpfr_sum@@Base+0x1420>
   3af98:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3af9c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3afa0:	mov	w1, #0x1f3                 	// #499
   3afa4:	add	x0, x0, #0x339
   3afa8:	add	x2, x2, #0x388
   3afac:	bl	cb90 <mpfr_assert_fail@plt>
   3afb0:	b	3af74 <mpfr_sum@@Base+0x143c>
   3afb4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3afb8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3afbc:	mov	w1, #0x200                 	// #512
   3afc0:	add	x0, x0, #0x339
   3afc4:	add	x2, x2, #0x3b7
   3afc8:	bl	cb90 <mpfr_assert_fail@plt>
   3afcc:	mov	x14, #0x4                   	// #4
   3afd0:	movk	x14, #0x8000, lsl #48
   3afd4:	b	3aec8 <mpfr_sum@@Base+0x1390>
   3afd8:	ldr	x9, [sp, #24]
   3afdc:	cbz	x9, 3affc <mpfr_sum@@Base+0x14c4>
   3afe0:	str	x8, [x9]
   3afe4:	ldr	x8, [sp, #8]
   3afe8:	str	x27, [x8]
   3afec:	ldr	x8, [sp, #16]
   3aff0:	str	x12, [x8]
   3aff4:	b	3affc <mpfr_sum@@Base+0x14c4>
   3aff8:	mov	x0, xzr
   3affc:	ldp	x20, x19, [sp, #224]
   3b000:	ldp	x22, x21, [sp, #208]
   3b004:	ldp	x24, x23, [sp, #192]
   3b008:	ldp	x26, x25, [sp, #176]
   3b00c:	ldp	x28, x27, [sp, #160]
   3b010:	ldp	x29, x30, [sp, #144]
   3b014:	add	sp, sp, #0xf0
   3b018:	ret

000000000003b01c <mpfr_add1sp@@Base>:
   3b01c:	stp	x29, x30, [sp, #-96]!
   3b020:	stp	x28, x27, [sp, #16]
   3b024:	stp	x26, x25, [sp, #32]
   3b028:	stp	x24, x23, [sp, #48]
   3b02c:	stp	x22, x21, [sp, #64]
   3b030:	stp	x20, x19, [sp, #80]
   3b034:	mov	x29, sp
   3b038:	sub	sp, sp, #0x40
   3b03c:	stur	xzr, [x29, #-8]
   3b040:	ldr	w8, [x1, #8]
   3b044:	mov	w20, w3
   3b048:	mov	x19, x0
   3b04c:	str	w8, [x0, #8]
   3b050:	ldr	x23, [x1]
   3b054:	cmp	x23, #0x3f
   3b058:	b.gt	3b0a4 <mpfr_add1sp@@Base+0x88>
   3b05c:	ldp	x12, x15, [x2, #16]
   3b060:	ldp	x9, x14, [x1, #16]
   3b064:	ldr	x10, [x19, #24]
   3b068:	mov	w11, #0x40                  	// #64
   3b06c:	sub	x11, x11, x23
   3b070:	cmp	x9, x12
   3b074:	b.ne	3b15c <mpfr_add1sp@@Base+0x140>  // b.any
   3b078:	ldr	x15, [x15]
   3b07c:	ldr	x14, [x14]
   3b080:	add	x12, x9, #0x1
   3b084:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3b088:	lsr	x15, x15, #1
   3b08c:	add	x14, x15, x14, lsr #1
   3b090:	lsr	x9, x9, x23
   3b094:	and	x15, x14, x9
   3b098:	mov	x13, xzr
   3b09c:	eor	x9, x15, x14
   3b0a0:	b	3b438 <mpfr_add1sp@@Base+0x41c>
   3b0a4:	cmp	x23, #0x40
   3b0a8:	b.eq	3b118 <mpfr_add1sp@@Base+0xfc>  // b.none
   3b0ac:	cmp	x23, #0x7f
   3b0b0:	b.gt	3b118 <mpfr_add1sp@@Base+0xfc>
   3b0b4:	ldp	x15, x13, [x2, #16]
   3b0b8:	ldp	x9, x12, [x1, #16]
   3b0bc:	ldr	x10, [x19, #24]
   3b0c0:	mov	w11, #0x80                  	// #128
   3b0c4:	sub	x11, x11, x23
   3b0c8:	cmp	x9, x15
   3b0cc:	b.ne	3b2b8 <mpfr_add1sp@@Base+0x29c>  // b.any
   3b0d0:	ldp	x15, x16, [x12]
   3b0d4:	ldp	x12, x13, [x13]
   3b0d8:	mov	w17, #0x7f                  	// #127
   3b0dc:	sub	x17, x17, x23
   3b0e0:	mov	w18, #0x1                   	// #1
   3b0e4:	adds	x15, x12, x15
   3b0e8:	add	x12, x9, #0x1
   3b0ec:	add	x9, x13, x16
   3b0f0:	cinc	x9, x9, cs  // cs = hs, nlast
   3b0f4:	lsl	x17, x18, x17
   3b0f8:	extr	x15, x9, x15, #1
   3b0fc:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3b100:	and	x16, x15, x17
   3b104:	bfxil	x13, x9, #1, #63
   3b108:	eor	x9, x16, x15
   3b10c:	mov	x14, xzr
   3b110:	stp	x9, x13, [x10]
   3b114:	b	3b858 <mpfr_add1sp@@Base+0x83c>
   3b118:	cmp	x23, #0x40
   3b11c:	b.ne	3b1bc <mpfr_add1sp@@Base+0x1a0>  // b.any
   3b120:	ldp	x13, x15, [x2, #16]
   3b124:	ldp	x11, x14, [x1, #16]
   3b128:	ldr	x10, [x19, #24]
   3b12c:	cmp	x11, x13
   3b130:	b.ne	3b31c <mpfr_add1sp@@Base+0x300>  // b.any
   3b134:	ldr	x9, [x14]
   3b138:	ldr	x13, [x15]
   3b13c:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   3b140:	mov	x12, xzr
   3b144:	add	x11, x11, #0x1
   3b148:	add	x9, x13, x9
   3b14c:	bfxil	x15, x9, #1, #63
   3b150:	and	x14, x9, #0x1
   3b154:	str	x15, [x10]
   3b158:	b	3b770 <mpfr_add1sp@@Base+0x754>
   3b15c:	csel	x13, x12, x9, gt
   3b160:	csel	x12, x9, x12, gt
   3b164:	mov	x9, #0xffffffffffffffff    	// #-1
   3b168:	csel	x16, x15, x14, gt
   3b16c:	csel	x14, x14, x15, gt
   3b170:	sub	x15, x12, x13
   3b174:	lsl	x9, x9, x11
   3b178:	cmp	x15, x11
   3b17c:	mvn	x13, x9
   3b180:	b.cs	3b25c <mpfr_add1sp@@Base+0x240>  // b.hs, b.nlast
   3b184:	ldr	x16, [x16]
   3b188:	ldr	x14, [x14]
   3b18c:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   3b190:	lsr	x18, x17, x23
   3b194:	lsr	x15, x16, x15
   3b198:	adds	x14, x15, x14
   3b19c:	bfxil	x17, x14, #1, #63
   3b1a0:	csel	x14, x17, x14, cs  // cs = hs, nlast
   3b1a4:	and	x15, x14, x18
   3b1a8:	and	x13, x14, x13
   3b1ac:	cinc	x12, x12, cs  // cs = hs, nlast
   3b1b0:	eor	x13, x13, x15
   3b1b4:	and	x9, x14, x9
   3b1b8:	b	3b438 <mpfr_add1sp@@Base+0x41c>
   3b1bc:	sub	x9, x23, #0x81
   3b1c0:	cmp	x9, #0x3e
   3b1c4:	b.hi	3b36c <mpfr_add1sp@@Base+0x350>  // b.pmore
   3b1c8:	ldp	x13, x14, [x2, #16]
   3b1cc:	ldp	x9, x12, [x1, #16]
   3b1d0:	ldr	x10, [x19, #24]
   3b1d4:	mov	w11, #0xc0                  	// #192
   3b1d8:	sub	x11, x11, x23
   3b1dc:	cmp	x9, x13
   3b1e0:	b.ne	3b560 <mpfr_add1sp@@Base+0x544>  // b.any
   3b1e4:	mov	w17, #0xbf                  	// #191
   3b1e8:	mov	w18, #0x1                   	// #1
   3b1ec:	sub	x17, x17, x23
   3b1f0:	ldp	x15, x16, [x12]
   3b1f4:	lsl	x17, x18, x17
   3b1f8:	ldp	x18, x0, [x14]
   3b1fc:	ldr	x1, [x12, #16]
   3b200:	add	x12, x9, #0x1
   3b204:	ldr	x14, [x14, #16]
   3b208:	adds	x15, x18, x15
   3b20c:	add	x9, x0, x16
   3b210:	cinc	x9, x9, cs  // cs = hs, nlast
   3b214:	cset	w18, cs  // cs = hs, nlast
   3b218:	cmp	x9, x16
   3b21c:	cset	w16, eq  // eq = none
   3b220:	and	w16, w18, w16
   3b224:	cset	w18, cc  // cc = lo, ul, last
   3b228:	add	x14, x14, x1
   3b22c:	orr	w16, w18, w16
   3b230:	extr	x0, x9, x15, #1
   3b234:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   3b238:	and	x15, x0, x17
   3b23c:	add	x14, x14, x16
   3b240:	eor	x17, x15, x0
   3b244:	bfxil	x18, x14, #1, #63
   3b248:	extr	x9, x14, x9, #1
   3b24c:	mov	x13, xzr
   3b250:	stp	x9, x18, [x10, #8]
   3b254:	str	x17, [x10]
   3b258:	b	3bb3c <mpfr_add1sp@@Base+0xb20>
   3b25c:	cmp	x15, #0x3f
   3b260:	b.hi	3b42c <mpfr_add1sp@@Base+0x410>  // b.pmore
   3b264:	ldr	x17, [x16]
   3b268:	ldr	x14, [x14]
   3b26c:	neg	x18, x15
   3b270:	lsr	x15, x17, x15
   3b274:	adds	x16, x14, x15
   3b278:	lsl	x14, x17, x18
   3b27c:	b.cc	3b298 <mpfr_add1sp@@Base+0x27c>  // b.lo, b.ul, b.last
   3b280:	mov	x17, #0x8000000000000000    	// #-9223372036854775808
   3b284:	and	x15, x16, #0x1
   3b288:	bfxil	x17, x16, #1, #63
   3b28c:	orr	x14, x15, x14
   3b290:	add	x12, x12, #0x1
   3b294:	mov	x16, x17
   3b298:	mov	x15, #0x8000000000000000    	// #-9223372036854775808
   3b29c:	lsr	x15, x15, x23
   3b2a0:	and	x13, x16, x13
   3b2a4:	and	x15, x16, x15
   3b2a8:	eor	x13, x13, x15
   3b2ac:	orr	x13, x13, x14
   3b2b0:	and	x9, x16, x9
   3b2b4:	b	3b438 <mpfr_add1sp@@Base+0x41c>
   3b2b8:	csel	x16, x13, x12, gt
   3b2bc:	csel	x14, x12, x13, gt
   3b2c0:	csel	x13, x15, x9, gt
   3b2c4:	csel	x12, x9, x15, gt
   3b2c8:	mov	x9, #0xffffffffffffffff    	// #-1
   3b2cc:	sub	x15, x12, x13
   3b2d0:	lsl	x9, x9, x11
   3b2d4:	cmp	x15, #0x3f
   3b2d8:	mvn	x13, x9
   3b2dc:	b.hi	3b500 <mpfr_add1sp@@Base+0x4e4>  // b.pmore
   3b2e0:	ldp	x17, x16, [x16]
   3b2e4:	ldp	x0, x1, [x14]
   3b2e8:	neg	x18, x15
   3b2ec:	lsl	x14, x16, x18
   3b2f0:	lsr	x2, x17, x15
   3b2f4:	lsr	x15, x16, x15
   3b2f8:	orr	x14, x14, x2
   3b2fc:	adds	x14, x14, x0
   3b300:	add	x15, x1, x15
   3b304:	cinc	x16, x15, cs  // cs = hs, nlast
   3b308:	cmp	x16, x1
   3b30c:	lsl	x15, x17, x18
   3b310:	b.cc	3b814 <mpfr_add1sp@@Base+0x7f8>  // b.lo, b.ul, b.last
   3b314:	str	x16, [x10, #8]
   3b318:	b	3b830 <mpfr_add1sp@@Base+0x814>
   3b31c:	csel	x9, x14, x15, gt
   3b320:	csel	x12, x15, x14, gt
   3b324:	csel	x14, x13, x11, gt
   3b328:	csel	x11, x11, x13, gt
   3b32c:	sub	x13, x11, x14
   3b330:	cmp	x13, #0x3f
   3b334:	b.hi	3b604 <mpfr_add1sp@@Base+0x5e8>  // b.pmore
   3b338:	ldr	x12, [x12]
   3b33c:	ldr	x9, [x9]
   3b340:	lsr	x14, x12, x13
   3b344:	neg	x13, x13
   3b348:	adds	x9, x14, x9
   3b34c:	lsl	x12, x12, x13
   3b350:	b.cc	3b730 <mpfr_add1sp@@Base+0x714>  // b.lo, b.ul, b.last
   3b354:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3b358:	bfxil	x13, x9, #1, #63
   3b35c:	and	x14, x9, #0x1
   3b360:	str	x13, [x10]
   3b364:	add	x11, x11, #0x1
   3b368:	b	3b770 <mpfr_add1sp@@Base+0x754>
   3b36c:	ldr	x9, [x1, #16]
   3b370:	ldr	x10, [x2, #16]
   3b374:	ldr	w8, [x1, #8]
   3b378:	sub	x26, x23, #0x1
   3b37c:	add	x11, x23, #0x3e
   3b380:	cmp	x9, x10
   3b384:	csel	x27, x1, x2, lt  // lt = tstop
   3b388:	csel	x25, x10, x9, lt  // lt = tstop
   3b38c:	ldr	x9, [x27, #16]
   3b390:	csel	x10, x2, x1, lt  // lt = tstop
   3b394:	cmp	x26, #0x0
   3b398:	lsr	w12, w8, #31
   3b39c:	csel	x8, x11, x26, lt  // lt = tstop
   3b3a0:	asr	x22, x8, #6
   3b3a4:	neg	w8, w23
   3b3a8:	add	x21, x22, #0x1
   3b3ac:	subs	x28, x25, x9
   3b3b0:	and	w8, w8, #0x3f
   3b3b4:	stur	x8, [x29, #-16]
   3b3b8:	b.eq	3b63c <mpfr_add1sp@@Base+0x620>  // b.none
   3b3bc:	subs	x24, x23, x28
   3b3c0:	stur	x10, [x29, #-32]
   3b3c4:	b.ls	3bcd8 <mpfr_add1sp@@Base+0xcbc>  // b.plast
   3b3c8:	cmp	x22, #0x7ff
   3b3cc:	lsl	x1, x21, #3
   3b3d0:	stur	x22, [x29, #-40]
   3b3d4:	stur	x25, [x29, #-24]
   3b3d8:	stur	w12, [x29, #-44]
   3b3dc:	b.hi	3bd04 <mpfr_add1sp@@Base+0xce8>  // b.pmore
   3b3e0:	add	x9, x1, #0xf
   3b3e4:	mov	x8, sp
   3b3e8:	and	x9, x9, #0xfffffffffffffff0
   3b3ec:	sub	x22, x8, x9
   3b3f0:	mov	sp, x22
   3b3f4:	ands	x3, x28, #0x3f
   3b3f8:	lsr	x25, x28, #6
   3b3fc:	b.eq	3bd14 <mpfr_add1sp@@Base+0xcf8>  // b.none
   3b400:	ldr	x1, [x27, #24]
   3b404:	cbnz	x25, 3bdcc <mpfr_add1sp@@Base+0xdb0>
   3b408:	mov	x0, x22
   3b40c:	mov	x2, x21
   3b410:	bl	bd90 <__gmpn_rshift@plt>
   3b414:	ldur	x13, [x29, #-16]
   3b418:	cmp	w20, #0x5
   3b41c:	b.ne	3b700 <mpfr_add1sp@@Base+0x6e4>  // b.any
   3b420:	mov	x26, xzr
   3b424:	mov	x27, xzr
   3b428:	b	3b9f4 <mpfr_add1sp@@Base+0x9d8>
   3b42c:	ldr	x9, [x14]
   3b430:	mov	x15, xzr
   3b434:	mov	w13, #0x1                   	// #1
   3b438:	str	x9, [x10]
   3b43c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b440:	ldr	x1, [x0, #2624]
   3b444:	add	x0, x0, #0xa40
   3b448:	blr	x1
   3b44c:	mrs	x14, tpidr_el0
   3b450:	ldr	x9, [x14, x0]
   3b454:	cmp	x12, x9
   3b458:	b.gt	3bcc0 <mpfr_add1sp@@Base+0xca4>
   3b45c:	mov	w9, wzr
   3b460:	cmp	w20, #0x5
   3b464:	str	x12, [x19, #16]
   3b468:	b.eq	3bbe4 <mpfr_add1sp@@Base+0xbc8>  // b.none
   3b46c:	orr	x16, x13, x15
   3b470:	cbz	x16, 3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3b474:	cmp	w20, #0x1
   3b478:	b.eq	3b4dc <mpfr_add1sp@@Base+0x4c0>  // b.none
   3b47c:	cbnz	w20, 3b4d0 <mpfr_add1sp@@Base+0x4b4>
   3b480:	cbz	x15, 3b4dc <mpfr_add1sp@@Base+0x4c0>
   3b484:	cbnz	x13, 3b494 <mpfr_add1sp@@Base+0x478>
   3b488:	ldr	x9, [x10]
   3b48c:	lsr	x9, x9, x11
   3b490:	tbz	w9, #0, 3b4dc <mpfr_add1sp@@Base+0x4c0>
   3b494:	ldr	x9, [x10]
   3b498:	mov	w13, #0x1                   	// #1
   3b49c:	lsl	x11, x13, x11
   3b4a0:	adds	x9, x9, x11
   3b4a4:	str	x9, [x10]
   3b4a8:	b.eq	3bc3c <mpfr_add1sp@@Base+0xc20>  // b.none
   3b4ac:	cbz	w8, 3bbe0 <mpfr_add1sp@@Base+0xbc4>
   3b4b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b4b4:	ldr	x1, [x0, #2656]
   3b4b8:	add	x0, x0, #0xa60
   3b4bc:	blr	x1
   3b4c0:	ldr	w9, [x14, x0]
   3b4c4:	orr	w9, w9, #0x8
   3b4c8:	str	w9, [x14, x0]
   3b4cc:	b	3b8f0 <mpfr_add1sp@@Base+0x8d4>
   3b4d0:	add	w9, w20, w8, lsr #31
   3b4d4:	cmp	w9, #0x3
   3b4d8:	b.ne	3b494 <mpfr_add1sp@@Base+0x478>  // b.any
   3b4dc:	cbz	w8, 3bbe0 <mpfr_add1sp@@Base+0xbc4>
   3b4e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b4e4:	ldr	x1, [x0, #2656]
   3b4e8:	add	x0, x0, #0xa60
   3b4ec:	blr	x1
   3b4f0:	ldr	w9, [x14, x0]
   3b4f4:	orr	w9, w9, #0x8
   3b4f8:	str	w9, [x14, x0]
   3b4fc:	b	3b924 <mpfr_add1sp@@Base+0x908>
   3b500:	cmp	x15, #0x7f
   3b504:	b.hi	3b620 <mpfr_add1sp@@Base+0x604>  // b.pmore
   3b508:	ldp	x18, x16, [x16]
   3b50c:	ldp	x0, x1, [x14]
   3b510:	neg	x17, x15
   3b514:	cmp	x15, #0x40
   3b518:	lsl	x14, x16, x17
   3b51c:	lsr	x15, x16, x15
   3b520:	csel	x16, xzr, x14, eq  // eq = none
   3b524:	adds	x14, x15, x0
   3b528:	cinc	x17, x1, cs  // cs = hs, nlast
   3b52c:	orr	x15, x16, x18
   3b530:	cbz	x17, 3b810 <mpfr_add1sp@@Base+0x7f4>
   3b534:	mov	w16, #0x7f                  	// #127
   3b538:	mov	w18, #0x1                   	// #1
   3b53c:	sub	x16, x16, x23
   3b540:	lsl	x16, x18, x16
   3b544:	and	x13, x14, x13
   3b548:	and	x16, x14, x16
   3b54c:	and	x9, x14, x9
   3b550:	eor	x13, x13, x16
   3b554:	orr	x14, x13, x15
   3b558:	stp	x9, x17, [x10]
   3b55c:	b	3b858 <mpfr_add1sp@@Base+0x83c>
   3b560:	csel	x17, x14, x12, gt
   3b564:	csel	x16, x12, x14, gt
   3b568:	csel	x14, x13, x9, gt
   3b56c:	csel	x12, x9, x13, gt
   3b570:	mov	x9, #0xffffffffffffffff    	// #-1
   3b574:	sub	x15, x12, x14
   3b578:	lsl	x9, x9, x11
   3b57c:	cmp	x15, #0x3f
   3b580:	mvn	x13, x9
   3b584:	b.hi	3b740 <mpfr_add1sp@@Base+0x724>  // b.pmore
   3b588:	ldp	x18, x0, [x17]
   3b58c:	ldr	x17, [x17, #16]
   3b590:	neg	x1, x15
   3b594:	ldr	x4, [x16, #16]
   3b598:	lsl	x14, x18, x1
   3b59c:	lsl	x2, x0, x1
   3b5a0:	lsr	x18, x18, x15
   3b5a4:	lsl	x1, x17, x1
   3b5a8:	lsr	x0, x0, x15
   3b5ac:	lsr	x17, x17, x15
   3b5b0:	ldp	x15, x3, [x16]
   3b5b4:	orr	x16, x2, x18
   3b5b8:	orr	x18, x1, x0
   3b5bc:	add	x17, x4, x17
   3b5c0:	adds	x15, x16, x15
   3b5c4:	add	x16, x18, x3
   3b5c8:	cinc	x16, x16, cs  // cs = hs, nlast
   3b5cc:	cset	w18, cs  // cs = hs, nlast
   3b5d0:	cmp	x16, x3
   3b5d4:	cset	w1, eq  // eq = none
   3b5d8:	cset	w0, cc  // cc = lo, ul, last
   3b5dc:	and	w18, w18, w1
   3b5e0:	orr	w18, w0, w18
   3b5e4:	add	x17, x17, x18
   3b5e8:	cmp	x17, x4
   3b5ec:	cset	w0, eq  // eq = none
   3b5f0:	b.cc	3b974 <mpfr_add1sp@@Base+0x958>  // b.lo, b.ul, b.last
   3b5f4:	and	w18, w18, w0
   3b5f8:	cbnz	w18, 3b974 <mpfr_add1sp@@Base+0x958>
   3b5fc:	stp	x16, x17, [x10, #8]
   3b600:	b	3b994 <mpfr_add1sp@@Base+0x978>
   3b604:	cmp	x13, #0x40
   3b608:	b.ne	3b75c <mpfr_add1sp@@Base+0x740>  // b.any
   3b60c:	ldr	x12, [x12]
   3b610:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   3b614:	cmp	x12, x14
   3b618:	cset	w12, ne  // ne = any
   3b61c:	b	3b760 <mpfr_add1sp@@Base+0x744>
   3b620:	ldr	x9, [x14]
   3b624:	mov	x16, xzr
   3b628:	str	x9, [x10]
   3b62c:	ldr	x9, [x14, #8]
   3b630:	mov	w14, #0x1                   	// #1
   3b634:	str	x9, [x10, #8]
   3b638:	b	3b858 <mpfr_add1sp@@Base+0x83c>
   3b63c:	ldr	x23, [x19, #24]
   3b640:	ldr	x1, [x10, #24]
   3b644:	ldr	x2, [x27, #24]
   3b648:	mov	x3, x21
   3b64c:	mov	x0, x23
   3b650:	mov	w28, w12
   3b654:	mov	x26, x22
   3b658:	add	x25, x25, #0x1
   3b65c:	bl	c5f0 <__gmpn_add_n@plt>
   3b660:	ldr	x22, [x23]
   3b664:	mov	w3, #0x1                   	// #1
   3b668:	mov	x0, x23
   3b66c:	mov	x1, x23
   3b670:	mov	x2, x21
   3b674:	mov	w24, #0x1                   	// #1
   3b678:	bl	bd90 <__gmpn_rshift@plt>
   3b67c:	ldr	x8, [x23, x26, lsl #3]
   3b680:	ldur	x12, [x29, #-16]
   3b684:	cmp	w20, #0x5
   3b688:	orr	x8, x8, #0x8000000000000000
   3b68c:	str	x8, [x23, x26, lsl #3]
   3b690:	ldr	x8, [x23]
   3b694:	lsl	x9, x24, x12
   3b698:	neg	x10, x9
   3b69c:	and	x10, x8, x10
   3b6a0:	str	x10, [x23]
   3b6a4:	b.eq	3ba38 <mpfr_add1sp@@Base+0xa1c>  // b.none
   3b6a8:	tst	x22, x9
   3b6ac:	b.eq	3ba38 <mpfr_add1sp@@Base+0xa1c>  // b.none
   3b6b0:	cbnz	w20, 3be40 <mpfr_add1sp@@Base+0xe24>
   3b6b4:	tst	x8, x9
   3b6b8:	b.eq	3bcfc <mpfr_add1sp@@Base+0xce0>  // b.none
   3b6bc:	mov	x11, x26
   3b6c0:	ldr	x8, [x23]
   3b6c4:	mov	w21, #0x1                   	// #1
   3b6c8:	lsl	x9, x21, x12
   3b6cc:	adds	x8, x8, x9
   3b6d0:	str	x8, [x23]
   3b6d4:	b.cc	3ba3c <mpfr_add1sp@@Base+0xa20>  // b.lo, b.ul, b.last
   3b6d8:	mov	w8, #0x1                   	// #1
   3b6dc:	cmp	x8, x11
   3b6e0:	b.gt	3bc28 <mpfr_add1sp@@Base+0xc0c>
   3b6e4:	ldr	x9, [x23, x8, lsl #3]
   3b6e8:	mov	w21, #0x1                   	// #1
   3b6ec:	adds	x9, x9, #0x1
   3b6f0:	str	x9, [x23, x8, lsl #3]
   3b6f4:	add	x8, x8, #0x1
   3b6f8:	b.cs	3b6dc <mpfr_add1sp@@Base+0x6c0>  // b.hs, b.nlast
   3b6fc:	b	3ba3c <mpfr_add1sp@@Base+0xa20>
   3b700:	ldur	x10, [x29, #-40]
   3b704:	cbz	w13, 3b9c0 <mpfr_add1sp@@Base+0x9a4>
   3b708:	ldr	x8, [x22]
   3b70c:	sub	w9, w13, #0x1
   3b710:	mov	w10, #0x1                   	// #1
   3b714:	lsl	x9, x10, x9
   3b718:	sub	x10, x9, #0x1
   3b71c:	tst	x8, x10
   3b720:	and	x14, x8, x9
   3b724:	b.eq	3be20 <mpfr_add1sp@@Base+0xe04>  // b.none
   3b728:	mov	x26, x14
   3b72c:	b	3b9f0 <mpfr_add1sp@@Base+0x9d4>
   3b730:	str	x9, [x10]
   3b734:	and	x14, x12, #0x8000000000000000
   3b738:	and	x12, x12, #0x7fffffffffffffff
   3b73c:	b	3b770 <mpfr_add1sp@@Base+0x754>
   3b740:	cmp	x15, #0x7f
   3b744:	b.hi	3b92c <mpfr_add1sp@@Base+0x910>  // b.pmore
   3b748:	subs	x18, x15, #0x40
   3b74c:	b.ne	3ba94 <mpfr_add1sp@@Base+0xa78>  // b.any
   3b750:	ldp	x14, x15, [x17]
   3b754:	ldr	x0, [x17, #16]
   3b758:	b	3bab4 <mpfr_add1sp@@Base+0xa98>
   3b75c:	mov	w12, #0x1                   	// #1
   3b760:	ldr	x9, [x9]
   3b764:	cmp	x13, #0x40
   3b768:	cset	w14, eq  // eq = none
   3b76c:	str	x9, [x10]
   3b770:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b774:	ldr	x1, [x0, #2624]
   3b778:	add	x0, x0, #0xa40
   3b77c:	blr	x1
   3b780:	mrs	x13, tpidr_el0
   3b784:	ldr	x9, [x13, x0]
   3b788:	cmp	x11, x9
   3b78c:	b.gt	3bcc0 <mpfr_add1sp@@Base+0xca4>
   3b790:	mov	w9, wzr
   3b794:	cmp	w20, #0x5
   3b798:	str	x11, [x19, #16]
   3b79c:	b.eq	3bbe4 <mpfr_add1sp@@Base+0xbc8>  // b.none
   3b7a0:	orr	x15, x12, x14
   3b7a4:	cbz	x15, 3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3b7a8:	cmp	w20, #0x1
   3b7ac:	b.eq	3b904 <mpfr_add1sp@@Base+0x8e8>  // b.none
   3b7b0:	cbnz	w20, 3b7c8 <mpfr_add1sp@@Base+0x7ac>
   3b7b4:	cbz	x14, 3b904 <mpfr_add1sp@@Base+0x8e8>
   3b7b8:	cbnz	x12, 3b7d4 <mpfr_add1sp@@Base+0x7b8>
   3b7bc:	ldrb	w9, [x10]
   3b7c0:	tbnz	w9, #0, 3b7d4 <mpfr_add1sp@@Base+0x7b8>
   3b7c4:	b	3b904 <mpfr_add1sp@@Base+0x8e8>
   3b7c8:	add	w9, w20, w8, lsr #31
   3b7cc:	cmp	w9, #0x3
   3b7d0:	b.eq	3b904 <mpfr_add1sp@@Base+0x8e8>  // b.none
   3b7d4:	ldr	x9, [x10]
   3b7d8:	adds	x9, x9, #0x1
   3b7dc:	str	x9, [x10]
   3b7e0:	b.cc	3b8d0 <mpfr_add1sp@@Base+0x8b4>  // b.lo, b.ul, b.last
   3b7e4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3b7e8:	str	x9, [x10]
   3b7ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b7f0:	ldr	x1, [x0, #2624]
   3b7f4:	add	x0, x0, #0xa40
   3b7f8:	blr	x1
   3b7fc:	ldr	x9, [x13, x0]
   3b800:	cmp	x11, x9
   3b804:	b.ge	3bcc0 <mpfr_add1sp@@Base+0xca4>  // b.tcont
   3b808:	add	x9, x11, #0x1
   3b80c:	b	3bcb4 <mpfr_add1sp@@Base+0xc98>
   3b810:	mov	x16, xzr
   3b814:	mov	x18, #0x8000000000000000    	// #-9223372036854775808
   3b818:	and	x17, x14, #0x1
   3b81c:	bfxil	x18, x16, #1, #63
   3b820:	extr	x14, x16, x14, #1
   3b824:	orr	x15, x17, x15
   3b828:	str	x18, [x10, #8]
   3b82c:	add	x12, x12, #0x1
   3b830:	mov	w16, #0x7f                  	// #127
   3b834:	mov	w17, #0x1                   	// #1
   3b838:	sub	x16, x16, x23
   3b83c:	lsl	x16, x17, x16
   3b840:	and	x13, x14, x13
   3b844:	and	x16, x14, x16
   3b848:	and	x9, x14, x9
   3b84c:	eor	x13, x13, x16
   3b850:	orr	x14, x13, x15
   3b854:	str	x9, [x10]
   3b858:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b85c:	ldr	x1, [x0, #2624]
   3b860:	add	x0, x0, #0xa40
   3b864:	blr	x1
   3b868:	mrs	x13, tpidr_el0
   3b86c:	ldr	x9, [x13, x0]
   3b870:	cmp	x12, x9
   3b874:	b.gt	3bcc0 <mpfr_add1sp@@Base+0xca4>
   3b878:	mov	w9, wzr
   3b87c:	cmp	w20, #0x5
   3b880:	str	x12, [x19, #16]
   3b884:	b.eq	3bbe4 <mpfr_add1sp@@Base+0xbc8>  // b.none
   3b888:	orr	x15, x14, x16
   3b88c:	cbz	x15, 3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3b890:	cmp	w20, #0x1
   3b894:	b.eq	3b904 <mpfr_add1sp@@Base+0x8e8>  // b.none
   3b898:	cbnz	w20, 3b8f8 <mpfr_add1sp@@Base+0x8dc>
   3b89c:	cbz	x16, 3b904 <mpfr_add1sp@@Base+0x8e8>
   3b8a0:	cbnz	x14, 3b8b0 <mpfr_add1sp@@Base+0x894>
   3b8a4:	ldr	x9, [x10]
   3b8a8:	lsr	x9, x9, x11
   3b8ac:	tbz	w9, #0, 3b904 <mpfr_add1sp@@Base+0x8e8>
   3b8b0:	ldp	x9, x15, [x10]
   3b8b4:	mov	w14, #0x1                   	// #1
   3b8b8:	lsl	x11, x14, x11
   3b8bc:	adds	x9, x9, x11
   3b8c0:	str	x9, [x10]
   3b8c4:	cinc	x9, x15, eq  // eq = none
   3b8c8:	str	x9, [x10, #8]
   3b8cc:	cbz	x9, 3bc8c <mpfr_add1sp@@Base+0xc70>
   3b8d0:	cbz	w8, 3bbe0 <mpfr_add1sp@@Base+0xbc4>
   3b8d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b8d8:	ldr	x1, [x0, #2656]
   3b8dc:	add	x0, x0, #0xa60
   3b8e0:	blr	x1
   3b8e4:	ldr	w9, [x13, x0]
   3b8e8:	orr	w9, w9, #0x8
   3b8ec:	str	w9, [x13, x0]
   3b8f0:	mov	w9, w8
   3b8f4:	b	3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3b8f8:	add	w9, w20, w8, lsr #31
   3b8fc:	cmp	w9, #0x3
   3b900:	b.ne	3b8b0 <mpfr_add1sp@@Base+0x894>  // b.any
   3b904:	cbz	w8, 3bbe0 <mpfr_add1sp@@Base+0xbc4>
   3b908:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3b90c:	ldr	x1, [x0, #2656]
   3b910:	add	x0, x0, #0xa60
   3b914:	blr	x1
   3b918:	ldr	w9, [x13, x0]
   3b91c:	orr	w9, w9, #0x8
   3b920:	str	w9, [x13, x0]
   3b924:	neg	w9, w8
   3b928:	b	3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3b92c:	cmp	x15, #0xbf
   3b930:	b.hi	3bb1c <mpfr_add1sp@@Base+0xb00>  // b.pmore
   3b934:	ldp	x2, x14, [x17, #8]
   3b938:	ldp	x0, x1, [x16]
   3b93c:	neg	x18, x15
   3b940:	cmp	x15, #0x80
   3b944:	lsl	x18, x14, x18
   3b948:	lsr	x14, x14, x15
   3b94c:	csel	x18, xzr, x18, eq  // eq = none
   3b950:	adds	x15, x0, x14
   3b954:	ldr	x14, [x17]
   3b958:	ldr	x17, [x16, #16]
   3b95c:	cset	w16, cs  // cs = hs, nlast
   3b960:	orr	x18, x18, x2
   3b964:	adds	x16, x1, x16
   3b968:	cinc	x17, x17, cs  // cs = hs, nlast
   3b96c:	orr	x14, x18, x14
   3b970:	cbnz	x17, 3baec <mpfr_add1sp@@Base+0xad0>
   3b974:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3b978:	and	x18, x15, #0x1
   3b97c:	extr	x15, x16, x15, #1
   3b980:	extr	x16, x17, x16, #1
   3b984:	bfxil	x0, x17, #1, #63
   3b988:	orr	x14, x18, x14
   3b98c:	stp	x16, x0, [x10, #8]
   3b990:	add	x12, x12, #0x1
   3b994:	mov	w16, #0xbf                  	// #191
   3b998:	mov	w17, #0x1                   	// #1
   3b99c:	sub	x16, x16, x23
   3b9a0:	lsl	x16, x17, x16
   3b9a4:	and	x13, x15, x13
   3b9a8:	and	x9, x15, x9
   3b9ac:	and	x15, x15, x16
   3b9b0:	eor	x13, x13, x15
   3b9b4:	orr	x13, x13, x14
   3b9b8:	str	x9, [x10]
   3b9bc:	b	3bb3c <mpfr_add1sp@@Base+0xb20>
   3b9c0:	ldr	x9, [x27, #24]
   3b9c4:	add	x8, x24, #0x3f
   3b9c8:	cmp	x24, #0x0
   3b9cc:	csel	x8, x8, x24, lt  // lt = tstop
   3b9d0:	sub	x8, x10, x8, asr #6
   3b9d4:	ldr	x10, [x9, x8, lsl #3]
   3b9d8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3b9dc:	lsr	x11, x11, x24
   3b9e0:	sub	x12, x11, #0x1
   3b9e4:	tst	x10, x12
   3b9e8:	and	x26, x10, x11
   3b9ec:	b.eq	3bc08 <mpfr_add1sp@@Base+0xbec>  // b.none
   3b9f0:	mov	w27, #0x1                   	// #1
   3b9f4:	ldr	x8, [x22]
   3b9f8:	mov	w9, #0x1                   	// #1
   3b9fc:	lsl	x24, x9, x13
   3ba00:	neg	x25, x24
   3ba04:	and	x8, x8, x25
   3ba08:	str	x8, [x22]
   3ba0c:	ldur	x8, [x29, #-32]
   3ba10:	ldr	x23, [x19, #24]
   3ba14:	mov	x2, x22
   3ba18:	mov	x3, x21
   3ba1c:	ldr	x1, [x8, #24]
   3ba20:	mov	x0, x23
   3ba24:	bl	c5f0 <__gmpn_add_n@plt>
   3ba28:	cbnz	x0, 3bd44 <mpfr_add1sp@@Base+0xd28>
   3ba2c:	ldur	x25, [x29, #-24]
   3ba30:	cmp	w20, #0x5
   3ba34:	b.ne	3bd94 <mpfr_add1sp@@Base+0xd78>  // b.any
   3ba38:	mov	w21, wzr
   3ba3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3ba40:	ldr	x1, [x0, #2624]
   3ba44:	add	x0, x0, #0xa40
   3ba48:	blr	x1
   3ba4c:	mrs	x22, tpidr_el0
   3ba50:	ldr	x8, [x22, x0]
   3ba54:	cmp	x25, x8
   3ba58:	b.gt	3bc6c <mpfr_add1sp@@Base+0xc50>
   3ba5c:	str	x25, [x19, #16]
   3ba60:	ldur	x0, [x29, #-8]
   3ba64:	cbnz	x0, 3bc84 <mpfr_add1sp@@Base+0xc68>
   3ba68:	ldr	w8, [x19, #8]
   3ba6c:	mul	w9, w8, w21
   3ba70:	cbz	w9, 3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3ba74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3ba78:	ldr	x1, [x0, #2656]
   3ba7c:	add	x0, x0, #0xa60
   3ba80:	blr	x1
   3ba84:	ldr	w8, [x22, x0]
   3ba88:	orr	w8, w8, #0x8
   3ba8c:	str	w8, [x22, x0]
   3ba90:	b	3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3ba94:	ldp	x14, x0, [x17, #8]
   3ba98:	ldr	x17, [x17]
   3ba9c:	neg	x1, x15
   3baa0:	lsl	x2, x14, x1
   3baa4:	lsl	x1, x0, x1
   3baa8:	lsr	x15, x14, x15
   3baac:	orr	x14, x2, x17
   3bab0:	orr	x15, x1, x15
   3bab4:	ldp	x17, x1, [x16]
   3bab8:	lsr	x18, x0, x18
   3babc:	ldr	x0, [x16, #16]
   3bac0:	adds	x15, x17, x15
   3bac4:	add	x16, x1, x18
   3bac8:	cinc	x16, x16, cs  // cs = hs, nlast
   3bacc:	cset	w17, cs  // cs = hs, nlast
   3bad0:	cmp	x16, x1
   3bad4:	cset	w1, eq  // eq = none
   3bad8:	cset	w18, cc  // cc = lo, ul, last
   3badc:	and	w17, w17, w1
   3bae0:	orr	w17, w18, w17
   3bae4:	adds	x17, x0, x17
   3bae8:	b.eq	3b974 <mpfr_add1sp@@Base+0x958>  // b.none
   3baec:	mov	w18, #0xbf                  	// #191
   3baf0:	mov	w0, #0x1                   	// #1
   3baf4:	and	x9, x15, x9
   3baf8:	sub	x18, x18, x23
   3bafc:	stp	x9, x16, [x10]
   3bb00:	lsl	x9, x0, x18
   3bb04:	and	x13, x15, x13
   3bb08:	and	x15, x15, x9
   3bb0c:	eor	x9, x13, x15
   3bb10:	orr	x13, x9, x14
   3bb14:	str	x17, [x10, #16]
   3bb18:	b	3bb3c <mpfr_add1sp@@Base+0xb20>
   3bb1c:	ldr	x9, [x16]
   3bb20:	mov	x15, xzr
   3bb24:	mov	w13, #0x1                   	// #1
   3bb28:	str	x9, [x10]
   3bb2c:	ldr	x9, [x16, #8]
   3bb30:	str	x9, [x10, #8]
   3bb34:	ldr	x9, [x16, #16]
   3bb38:	str	x9, [x10, #16]
   3bb3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3bb40:	ldr	x1, [x0, #2624]
   3bb44:	add	x0, x0, #0xa40
   3bb48:	blr	x1
   3bb4c:	mrs	x14, tpidr_el0
   3bb50:	ldr	x9, [x14, x0]
   3bb54:	cmp	x12, x9
   3bb58:	b.gt	3bcc0 <mpfr_add1sp@@Base+0xca4>
   3bb5c:	mov	w9, wzr
   3bb60:	cmp	w20, #0x5
   3bb64:	str	x12, [x19, #16]
   3bb68:	b.eq	3bbe4 <mpfr_add1sp@@Base+0xbc8>  // b.none
   3bb6c:	orr	x16, x15, x13
   3bb70:	cbz	x16, 3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3bb74:	cmp	w20, #0x1
   3bb78:	b.eq	3bbdc <mpfr_add1sp@@Base+0xbc0>  // b.none
   3bb7c:	cbnz	w20, 3bbd0 <mpfr_add1sp@@Base+0xbb4>
   3bb80:	cbz	x15, 3bbdc <mpfr_add1sp@@Base+0xbc0>
   3bb84:	cbnz	x13, 3bb94 <mpfr_add1sp@@Base+0xb78>
   3bb88:	ldr	x9, [x10]
   3bb8c:	lsr	x9, x9, x11
   3bb90:	tbz	w9, #0, 3bbdc <mpfr_add1sp@@Base+0xbc0>
   3bb94:	ldp	x13, x15, [x10]
   3bb98:	mov	w9, #0x1                   	// #1
   3bb9c:	lsl	x9, x9, x11
   3bba0:	ldr	x16, [x10, #16]
   3bba4:	adds	x9, x13, x9
   3bba8:	cinc	x11, x15, eq  // eq = none
   3bbac:	stp	x9, x11, [x10]
   3bbb0:	orr	x9, x11, x9
   3bbb4:	cmp	x9, #0x0
   3bbb8:	cinc	x9, x16, eq  // eq = none
   3bbbc:	str	x9, [x10, #16]
   3bbc0:	cbnz	x9, 3b4ac <mpfr_add1sp@@Base+0x490>
   3bbc4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3bbc8:	str	x9, [x10, #16]
   3bbcc:	b	3bc44 <mpfr_add1sp@@Base+0xc28>
   3bbd0:	add	w9, w20, w8, lsr #31
   3bbd4:	cmp	w9, #0x3
   3bbd8:	b.ne	3bb94 <mpfr_add1sp@@Base+0xb78>  // b.any
   3bbdc:	cbnz	w8, 3b4e0 <mpfr_add1sp@@Base+0x4c4>
   3bbe0:	mov	w9, wzr
   3bbe4:	mov	w0, w9
   3bbe8:	mov	sp, x29
   3bbec:	ldp	x20, x19, [sp, #80]
   3bbf0:	ldp	x22, x21, [sp, #64]
   3bbf4:	ldp	x24, x23, [sp, #48]
   3bbf8:	ldp	x26, x25, [sp, #32]
   3bbfc:	ldp	x28, x27, [sp, #16]
   3bc00:	ldp	x29, x30, [sp], #96
   3bc04:	ret
   3bc08:	sub	x9, x9, #0x8
   3bc0c:	mov	w27, #0x1                   	// #1
   3bc10:	subs	x10, x8, #0x1
   3bc14:	b.lt	3b424 <mpfr_add1sp@@Base+0x408>  // b.tstop
   3bc18:	ldr	x11, [x9, x8, lsl #3]
   3bc1c:	mov	x8, x10
   3bc20:	cbz	x11, 3bc10 <mpfr_add1sp@@Base+0xbf4>
   3bc24:	b	3b9f4 <mpfr_add1sp@@Base+0x9d8>
   3bc28:	add	x25, x25, #0x1
   3bc2c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3bc30:	mov	w21, #0x1                   	// #1
   3bc34:	str	x8, [x23, x11, lsl #3]
   3bc38:	b	3ba3c <mpfr_add1sp@@Base+0xa20>
   3bc3c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3bc40:	str	x9, [x10]
   3bc44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3bc48:	ldr	x1, [x0, #2624]
   3bc4c:	add	x0, x0, #0xa40
   3bc50:	blr	x1
   3bc54:	ldr	x9, [x14, x0]
   3bc58:	cmp	x12, x9
   3bc5c:	b.ge	3bcc0 <mpfr_add1sp@@Base+0xca4>  // b.tcont
   3bc60:	add	x9, x12, #0x1
   3bc64:	str	x9, [x19, #16]
   3bc68:	b	3b4ac <mpfr_add1sp@@Base+0x490>
   3bc6c:	ldur	x0, [x29, #-8]
   3bc70:	cbnz	x0, 3be68 <mpfr_add1sp@@Base+0xe4c>
   3bc74:	ldr	w2, [x19, #8]
   3bc78:	mov	x0, x19
   3bc7c:	mov	w1, w20
   3bc80:	b	3bccc <mpfr_add1sp@@Base+0xcb0>
   3bc84:	bl	c460 <mpfr_tmp_free@plt>
   3bc88:	b	3ba68 <mpfr_add1sp@@Base+0xa4c>
   3bc8c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3bc90:	str	x9, [x10, #8]
   3bc94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3bc98:	ldr	x1, [x0, #2624]
   3bc9c:	add	x0, x0, #0xa40
   3bca0:	blr	x1
   3bca4:	ldr	x9, [x13, x0]
   3bca8:	cmp	x12, x9
   3bcac:	b.ge	3bcc0 <mpfr_add1sp@@Base+0xca4>  // b.tcont
   3bcb0:	add	x9, x12, #0x1
   3bcb4:	str	x9, [x19, #16]
   3bcb8:	cbnz	w8, 3b8d4 <mpfr_add1sp@@Base+0x8b8>
   3bcbc:	b	3bbe0 <mpfr_add1sp@@Base+0xbc4>
   3bcc0:	mov	x0, x19
   3bcc4:	mov	w1, w20
   3bcc8:	mov	w2, w8
   3bccc:	bl	bff0 <mpfr_overflow@plt>
   3bcd0:	mov	w9, w0
   3bcd4:	b	3bbe4 <mpfr_add1sp@@Base+0xbc8>
   3bcd8:	cmp	w20, #0x5
   3bcdc:	b.ne	3be70 <mpfr_add1sp@@Base+0xe54>  // b.any
   3bce0:	ldur	x8, [x29, #-32]
   3bce4:	ldr	x0, [x19, #24]
   3bce8:	ldr	x1, [x8, #24]
   3bcec:	cmp	x0, x1
   3bcf0:	b.eq	3bcfc <mpfr_add1sp@@Base+0xce0>  // b.none
   3bcf4:	lsl	x2, x21, #3
   3bcf8:	bl	bad0 <memcpy@plt>
   3bcfc:	mov	w21, #0xffffffff            	// #-1
   3bd00:	b	3ba3c <mpfr_add1sp@@Base+0xa20>
   3bd04:	sub	x0, x29, #0x8
   3bd08:	bl	be70 <mpfr_tmp_allocate@plt>
   3bd0c:	mov	x22, x0
   3bd10:	b	3b3f4 <mpfr_add1sp@@Base+0x3d8>
   3bd14:	ldr	x8, [x27, #24]
   3bd18:	add	x1, x8, x25, lsl #3
   3bd1c:	cmp	x1, x22
   3bd20:	b.eq	3bd34 <mpfr_add1sp@@Base+0xd18>  // b.none
   3bd24:	sub	x8, x21, x25
   3bd28:	lsl	x2, x8, #3
   3bd2c:	mov	x0, x22
   3bd30:	bl	bad0 <memcpy@plt>
   3bd34:	add	x8, x22, x21, lsl #3
   3bd38:	sub	x0, x8, x25, lsl #3
   3bd3c:	lsl	x2, x25, #3
   3bd40:	b	3bdf4 <mpfr_add1sp@@Base+0xdd8>
   3bd44:	ldr	x8, [x23]
   3bd48:	mov	w3, #0x1                   	// #1
   3bd4c:	mov	x0, x23
   3bd50:	mov	x1, x23
   3bd54:	mov	x2, x21
   3bd58:	and	x22, x8, x24
   3bd5c:	bl	bd90 <__gmpn_rshift@plt>
   3bd60:	ldur	x9, [x29, #-40]
   3bd64:	orr	x27, x26, x27
   3bd68:	mov	x26, x22
   3bd6c:	ldr	x8, [x23, x9, lsl #3]
   3bd70:	orr	x8, x8, #0x8000000000000000
   3bd74:	str	x8, [x23, x9, lsl #3]
   3bd78:	ldr	x8, [x23]
   3bd7c:	ldur	x9, [x29, #-24]
   3bd80:	and	x8, x8, x25
   3bd84:	add	x9, x9, #0x1
   3bd88:	stur	x9, [x29, #-24]
   3bd8c:	str	x8, [x23]
   3bd90:	b	3ba2c <mpfr_add1sp@@Base+0xa10>
   3bd94:	cbz	w20, 3be00 <mpfr_add1sp@@Base+0xde4>
   3bd98:	ldur	w8, [x29, #-44]
   3bd9c:	add	w9, w8, w20
   3bda0:	orr	x8, x27, x26
   3bda4:	cmp	w9, #0x3
   3bda8:	csinc	w20, w20, wzr, ne  // ne = any
   3bdac:	cmp	x8, #0x0
   3bdb0:	csetm	w21, ne  // ne = any
   3bdb4:	cmp	w20, #0x1
   3bdb8:	b.eq	3be60 <mpfr_add1sp@@Base+0xe44>  // b.none
   3bdbc:	ldp	x25, x12, [x29, #-24]
   3bdc0:	ldur	x11, [x29, #-40]
   3bdc4:	cbnz	x8, 3b6c0 <mpfr_add1sp@@Base+0x6a4>
   3bdc8:	b	3ba3c <mpfr_add1sp@@Base+0xa20>
   3bdcc:	add	x1, x1, x25, lsl #3
   3bdd0:	sub	x2, x21, x25
   3bdd4:	mov	x0, x22
   3bdd8:	stur	x23, [x29, #-56]
   3bddc:	lsl	x23, x25, #3
   3bde0:	bl	bd90 <__gmpn_rshift@plt>
   3bde4:	mov	x2, x23
   3bde8:	ldur	x23, [x29, #-56]
   3bdec:	add	x8, x22, x21, lsl #3
   3bdf0:	sub	x0, x8, x25, lsl #3
   3bdf4:	mov	w1, wzr
   3bdf8:	bl	c1b0 <memset@plt>
   3bdfc:	b	3b414 <mpfr_add1sp@@Base+0x3f8>
   3be00:	cmp	x27, #0x0
   3be04:	csetm	w21, ne  // ne = any
   3be08:	cbz	x26, 3be5c <mpfr_add1sp@@Base+0xe40>
   3be0c:	cbz	x27, 3bef0 <mpfr_add1sp@@Base+0xed4>
   3be10:	mov	w20, wzr
   3be14:	ldp	x25, x12, [x29, #-24]
   3be18:	ldur	x11, [x29, #-40]
   3be1c:	b	3b6c0 <mpfr_add1sp@@Base+0x6a4>
   3be20:	add	x8, x26, x13
   3be24:	sub	x10, x8, x28
   3be28:	cmp	x10, x23
   3be2c:	b.le	3beb8 <mpfr_add1sp@@Base+0xe9c>
   3be30:	mov	x27, xzr
   3be34:	ldur	x13, [x29, #-16]
   3be38:	mov	x26, x14
   3be3c:	b	3b9f4 <mpfr_add1sp@@Base+0x9d8>
   3be40:	add	w8, w28, w20
   3be44:	cmp	w8, #0x3
   3be48:	csinc	w20, w20, wzr, ne  // ne = any
   3be4c:	cmp	w20, #0x1
   3be50:	b.eq	3bcfc <mpfr_add1sp@@Base+0xce0>  // b.none
   3be54:	ldur	x12, [x29, #-16]
   3be58:	b	3b6bc <mpfr_add1sp@@Base+0x6a0>
   3be5c:	mov	w20, wzr
   3be60:	ldur	x25, [x29, #-24]
   3be64:	b	3ba3c <mpfr_add1sp@@Base+0xa20>
   3be68:	bl	c460 <mpfr_tmp_free@plt>
   3be6c:	b	3bc74 <mpfr_add1sp@@Base+0xc58>
   3be70:	cmp	x23, x28
   3be74:	b.cs	3bf28 <mpfr_add1sp@@Base+0xf0c>  // b.hs, b.nlast
   3be78:	cmp	w20, #0x2
   3be7c:	b.cc	3bce0 <mpfr_add1sp@@Base+0xcc4>  // b.lo, b.ul, b.last
   3be80:	add	w8, w12, w20
   3be84:	cmp	w8, #0x3
   3be88:	b.eq	3bce0 <mpfr_add1sp@@Base+0xcc4>  // b.none
   3be8c:	ldur	x8, [x29, #-32]
   3be90:	ldr	x23, [x19, #24]
   3be94:	ldr	x1, [x8, #24]
   3be98:	cmp	x23, x1
   3be9c:	b.eq	3beac <mpfr_add1sp@@Base+0xe90>  // b.none
   3bea0:	lsl	x2, x21, #3
   3bea4:	mov	x0, x23
   3bea8:	bl	bad0 <memcpy@plt>
   3beac:	ldur	x12, [x29, #-16]
   3beb0:	mov	x11, x22
   3beb4:	b	3b6c0 <mpfr_add1sp@@Base+0x6a4>
   3beb8:	ldur	x11, [x29, #-40]
   3bebc:	ldr	x9, [x27, #24]
   3bec0:	add	x8, x10, #0x3f
   3bec4:	cmp	x10, #0x0
   3bec8:	csel	x8, x8, x10, lt  // lt = tstop
   3becc:	sub	x8, x11, x8, asr #6
   3bed0:	ldr	x11, [x9, x8, lsl #3]
   3bed4:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
   3bed8:	lsr	x10, x12, x10
   3bedc:	sub	x10, x10, #0x1
   3bee0:	tst	x11, x10
   3bee4:	b.eq	3bf08 <mpfr_add1sp@@Base+0xeec>  // b.none
   3bee8:	mov	w27, #0x1                   	// #1
   3beec:	b	3be34 <mpfr_add1sp@@Base+0xe18>
   3bef0:	ldr	x8, [x23]
   3bef4:	mov	w20, wzr
   3bef8:	tst	x8, x24
   3befc:	b.ne	3be14 <mpfr_add1sp@@Base+0xdf8>  // b.any
   3bf00:	mov	w21, #0xffffffff            	// #-1
   3bf04:	b	3be60 <mpfr_add1sp@@Base+0xe44>
   3bf08:	sub	x9, x9, #0x8
   3bf0c:	subs	x10, x8, #0x1
   3bf10:	b.lt	3be30 <mpfr_add1sp@@Base+0xe14>  // b.tstop
   3bf14:	ldr	x11, [x9, x8, lsl #3]
   3bf18:	mov	x8, x10
   3bf1c:	cbz	x11, 3bf0c <mpfr_add1sp@@Base+0xef0>
   3bf20:	ldur	x13, [x29, #-16]
   3bf24:	b	3b728 <mpfr_add1sp@@Base+0x70c>
   3bf28:	cmp	w20, #0x1
   3bf2c:	b.eq	3bce0 <mpfr_add1sp@@Base+0xcc4>  // b.none
   3bf30:	cbnz	w20, 3be80 <mpfr_add1sp@@Base+0xe64>
   3bf34:	ldr	x8, [x27, #24]
   3bf38:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3bf3c:	ldr	x9, [x8, x22, lsl #3]
   3bf40:	cmp	x9, x10
   3bf44:	b.ne	3be8c <mpfr_add1sp@@Base+0xe70>  // b.any
   3bf48:	sub	x8, x8, #0x8
   3bf4c:	mov	x9, x22
   3bf50:	subs	x10, x9, #0x1
   3bf54:	b.lt	3bf68 <mpfr_add1sp@@Base+0xf4c>  // b.tstop
   3bf58:	ldr	x11, [x8, x9, lsl #3]
   3bf5c:	mov	x9, x10
   3bf60:	cbz	x11, 3bf50 <mpfr_add1sp@@Base+0xf34>
   3bf64:	b	3be8c <mpfr_add1sp@@Base+0xe70>
   3bf68:	ldur	x8, [x29, #-32]
   3bf6c:	ldur	x9, [x29, #-16]
   3bf70:	ldr	x8, [x8, #24]
   3bf74:	ldr	x8, [x8]
   3bf78:	lsr	x8, x8, x9
   3bf7c:	tbnz	w8, #0, 3be8c <mpfr_add1sp@@Base+0xe70>
   3bf80:	b	3bce0 <mpfr_add1sp@@Base+0xcc4>

000000000003bf84 <mpfr_free_cache@@Base>:
   3bf84:	stp	x29, x30, [sp, #-16]!
   3bf88:	mov	x29, sp
   3bf8c:	bl	c060 <mpfr_bernoulli_freecache@plt>
   3bf90:	bl	c2a0 <mpfr_free_pool@plt>
   3bf94:	ldp	x29, x30, [sp], #16
   3bf98:	b	3bf9c <mpfr_free_cache@@Base+0x18>
   3bf9c:	stp	x29, x30, [sp, #-32]!
   3bfa0:	str	x19, [sp, #16]
   3bfa4:	mov	x29, sp
   3bfa8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3bfac:	ldr	x1, [x0, #2704]
   3bfb0:	add	x0, x0, #0xa90
   3bfb4:	blr	x1
   3bfb8:	mrs	x19, tpidr_el0
   3bfbc:	add	x0, x19, x0
   3bfc0:	bl	bf20 <mpfr_clear_cache@plt>
   3bfc4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3bfc8:	ldr	x1, [x0, #2640]
   3bfcc:	add	x0, x0, #0xa50
   3bfd0:	blr	x1
   3bfd4:	add	x0, x19, x0
   3bfd8:	bl	bf20 <mpfr_clear_cache@plt>
   3bfdc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3bfe0:	ldr	x1, [x0, #2688]
   3bfe4:	add	x0, x0, #0xa80
   3bfe8:	blr	x1
   3bfec:	add	x0, x19, x0
   3bff0:	bl	bf20 <mpfr_clear_cache@plt>
   3bff4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3bff8:	ldr	x1, [x0, #2672]
   3bffc:	add	x0, x0, #0xa70
   3c000:	blr	x1
   3c004:	add	x0, x19, x0
   3c008:	ldr	x19, [sp, #16]
   3c00c:	ldp	x29, x30, [sp], #32
   3c010:	b	bf20 <mpfr_clear_cache@plt>

000000000003c014 <mpfr_free_cache2@@Base>:
   3c014:	tbnz	w0, #0, 3c01c <mpfr_free_cache2@@Base+0x8>
   3c018:	ret
   3c01c:	stp	x29, x30, [sp, #-16]!
   3c020:	mov	x29, sp
   3c024:	bl	c060 <mpfr_bernoulli_freecache@plt>
   3c028:	bl	c2a0 <mpfr_free_pool@plt>
   3c02c:	ldp	x29, x30, [sp], #16
   3c030:	b	3bf9c <mpfr_free_cache@@Base+0x18>

000000000003c034 <mpfr_mp_memory_cleanup@@Base>:
   3c034:	stp	x29, x30, [sp, #-16]!
   3c038:	mov	x29, sp
   3c03c:	bl	c060 <mpfr_bernoulli_freecache@plt>
   3c040:	bl	c2a0 <mpfr_free_pool@plt>
   3c044:	bl	3bf9c <mpfr_free_cache@@Base+0x18>
   3c048:	mov	w0, wzr
   3c04c:	ldp	x29, x30, [sp], #16
   3c050:	ret

000000000003c054 <mpfr_add_si@@Base>:
   3c054:	tbnz	x2, #63, 3c05c <mpfr_add_si@@Base+0x8>
   3c058:	b	c2d0 <mpfr_add_ui@plt>
   3c05c:	neg	x2, x2
   3c060:	b	c580 <mpfr_sub_ui@plt>

000000000003c064 <mpfr_sub_si@@Base>:
   3c064:	tbnz	x2, #63, 3c06c <mpfr_sub_si@@Base+0x8>
   3c068:	b	c580 <mpfr_sub_ui@plt>
   3c06c:	neg	x2, x2
   3c070:	b	c2d0 <mpfr_add_ui@plt>

000000000003c074 <mpfr_si_sub@@Base>:
   3c074:	stp	x29, x30, [sp, #-32]!
   3c078:	str	x19, [sp, #16]
   3c07c:	mov	x19, x0
   3c080:	mov	x29, sp
   3c084:	tbnz	x1, #63, 3c098 <mpfr_si_sub@@Base+0x24>
   3c088:	mov	x0, x19
   3c08c:	ldr	x19, [sp, #16]
   3c090:	ldp	x29, x30, [sp], #32
   3c094:	b	caa0 <mpfr_ui_sub@plt>
   3c098:	cmp	w3, #0x3
   3c09c:	mov	w9, #0x2                   	// #2
   3c0a0:	neg	x8, x1
   3c0a4:	csel	w9, w9, w3, eq  // eq = none
   3c0a8:	cmp	w3, #0x2
   3c0ac:	mov	w10, #0x3                   	// #3
   3c0b0:	csel	w3, w10, w9, eq  // eq = none
   3c0b4:	mov	x0, x19
   3c0b8:	mov	x1, x2
   3c0bc:	mov	x2, x8
   3c0c0:	bl	c2d0 <mpfr_add_ui@plt>
   3c0c4:	ldr	w8, [x19, #8]
   3c0c8:	neg	w0, w0
   3c0cc:	neg	w8, w8
   3c0d0:	str	w8, [x19, #8]
   3c0d4:	ldr	x19, [sp, #16]
   3c0d8:	ldp	x29, x30, [sp], #32
   3c0dc:	ret

000000000003c0e0 <mpfr_mul_si@@Base>:
   3c0e0:	stp	x29, x30, [sp, #-32]!
   3c0e4:	str	x19, [sp, #16]
   3c0e8:	mov	x19, x0
   3c0ec:	mov	x29, sp
   3c0f0:	tbnz	x2, #63, 3c104 <mpfr_mul_si@@Base+0x24>
   3c0f4:	mov	x0, x19
   3c0f8:	ldr	x19, [sp, #16]
   3c0fc:	ldp	x29, x30, [sp], #32
   3c100:	b	bb10 <mpfr_mul_ui@plt>
   3c104:	cmp	w3, #0x3
   3c108:	mov	w8, #0x2                   	// #2
   3c10c:	csel	w8, w8, w3, eq  // eq = none
   3c110:	cmp	w3, #0x2
   3c114:	mov	w9, #0x3                   	// #3
   3c118:	neg	x2, x2
   3c11c:	csel	w3, w9, w8, eq  // eq = none
   3c120:	mov	x0, x19
   3c124:	bl	bb10 <mpfr_mul_ui@plt>
   3c128:	ldr	w8, [x19, #8]
   3c12c:	neg	w0, w0
   3c130:	neg	w8, w8
   3c134:	str	w8, [x19, #8]
   3c138:	ldr	x19, [sp, #16]
   3c13c:	ldp	x29, x30, [sp], #32
   3c140:	ret

000000000003c144 <mpfr_div_si@@Base>:
   3c144:	stp	x29, x30, [sp, #-32]!
   3c148:	str	x19, [sp, #16]
   3c14c:	mov	x19, x0
   3c150:	mov	x29, sp
   3c154:	tbnz	x2, #63, 3c168 <mpfr_div_si@@Base+0x24>
   3c158:	mov	x0, x19
   3c15c:	ldr	x19, [sp, #16]
   3c160:	ldp	x29, x30, [sp], #32
   3c164:	b	ccc0 <mpfr_div_ui@plt>
   3c168:	cmp	w3, #0x3
   3c16c:	mov	w8, #0x2                   	// #2
   3c170:	csel	w8, w8, w3, eq  // eq = none
   3c174:	cmp	w3, #0x2
   3c178:	mov	w9, #0x3                   	// #3
   3c17c:	neg	x2, x2
   3c180:	csel	w3, w9, w8, eq  // eq = none
   3c184:	mov	x0, x19
   3c188:	bl	ccc0 <mpfr_div_ui@plt>
   3c18c:	ldr	w8, [x19, #8]
   3c190:	neg	w0, w0
   3c194:	neg	w8, w8
   3c198:	str	w8, [x19, #8]
   3c19c:	ldr	x19, [sp, #16]
   3c1a0:	ldp	x29, x30, [sp], #32
   3c1a4:	ret

000000000003c1a8 <mpfr_si_div@@Base>:
   3c1a8:	stp	x29, x30, [sp, #-32]!
   3c1ac:	str	x19, [sp, #16]
   3c1b0:	mov	x19, x0
   3c1b4:	mov	x29, sp
   3c1b8:	tbnz	x1, #63, 3c1cc <mpfr_si_div@@Base+0x24>
   3c1bc:	mov	x0, x19
   3c1c0:	ldr	x19, [sp, #16]
   3c1c4:	ldp	x29, x30, [sp], #32
   3c1c8:	b	c350 <mpfr_ui_div@plt>
   3c1cc:	cmp	w3, #0x3
   3c1d0:	mov	w8, #0x2                   	// #2
   3c1d4:	csel	w8, w8, w3, eq  // eq = none
   3c1d8:	cmp	w3, #0x2
   3c1dc:	mov	w9, #0x3                   	// #3
   3c1e0:	neg	x1, x1
   3c1e4:	csel	w3, w9, w8, eq  // eq = none
   3c1e8:	mov	x0, x19
   3c1ec:	bl	c350 <mpfr_ui_div@plt>
   3c1f0:	ldr	w8, [x19, #8]
   3c1f4:	neg	w0, w0
   3c1f8:	neg	w8, w8
   3c1fc:	str	w8, [x19, #8]
   3c200:	ldr	x19, [sp, #16]
   3c204:	ldp	x29, x30, [sp], #32
   3c208:	ret

000000000003c20c <mpfr_cmp_ld@@Base>:
   3c20c:	sub	sp, sp, #0x70
   3c210:	stp	x29, x30, [sp, #48]
   3c214:	stp	x24, x23, [sp, #64]
   3c218:	stp	x22, x21, [sp, #80]
   3c21c:	stp	x20, x19, [sp, #96]
   3c220:	add	x29, sp, #0x30
   3c224:	str	q0, [sp]
   3c228:	mov	x19, x0
   3c22c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c230:	ldr	x1, [x0, #2656]
   3c234:	add	x0, x0, #0xa60
   3c238:	blr	x1
   3c23c:	mrs	x21, tpidr_el0
   3c240:	ldr	w24, [x21, x0]
   3c244:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c248:	ldr	x1, [x0, #2592]
   3c24c:	add	x0, x0, #0xa20
   3c250:	blr	x1
   3c254:	ldr	x22, [x21, x0]
   3c258:	mov	x8, x0
   3c25c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c260:	ldr	x1, [x0, #2624]
   3c264:	add	x0, x0, #0xa40
   3c268:	blr	x1
   3c26c:	ldr	x23, [x21, x0]
   3c270:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3c274:	str	x9, [x21, x8]
   3c278:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3c27c:	str	x8, [x21, x0]
   3c280:	add	x0, sp, #0x10
   3c284:	mov	w1, #0x71                  	// #113
   3c288:	bl	cad0 <mpfr_init2@plt>
   3c28c:	ldr	q0, [sp]
   3c290:	add	x0, sp, #0x10
   3c294:	mov	w1, wzr
   3c298:	bl	bb00 <mpfr_set_ld@plt>
   3c29c:	cbz	w0, 3c2bc <mpfr_cmp_ld@@Base+0xb0>
   3c2a0:	add	x0, sp, #0x10
   3c2a4:	mov	w1, #0x832                 	// #2098
   3c2a8:	bl	bf80 <mpfr_set_prec@plt>
   3c2ac:	ldr	q0, [sp]
   3c2b0:	add	x0, sp, #0x10
   3c2b4:	mov	w1, wzr
   3c2b8:	bl	bb00 <mpfr_set_ld@plt>
   3c2bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c2c0:	ldr	x1, [x0, #2656]
   3c2c4:	add	x0, x0, #0xa60
   3c2c8:	blr	x1
   3c2cc:	mov	x20, x0
   3c2d0:	str	wzr, [x21, x0]
   3c2d4:	add	x1, sp, #0x10
   3c2d8:	mov	w2, #0x1                   	// #1
   3c2dc:	mov	x0, x19
   3c2e0:	bl	c9f0 <mpfr_cmp3@plt>
   3c2e4:	ldr	w8, [x21, x20]
   3c2e8:	mov	w19, w0
   3c2ec:	add	x0, sp, #0x10
   3c2f0:	orr	w24, w8, w24
   3c2f4:	bl	c110 <mpfr_clear@plt>
   3c2f8:	str	w24, [x21, x20]
   3c2fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c300:	ldr	x1, [x0, #2592]
   3c304:	add	x0, x0, #0xa20
   3c308:	blr	x1
   3c30c:	str	x22, [x21, x0]
   3c310:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c314:	ldr	x1, [x0, #2624]
   3c318:	add	x0, x0, #0xa40
   3c31c:	blr	x1
   3c320:	str	x23, [x21, x0]
   3c324:	mov	w0, w19
   3c328:	ldp	x20, x19, [sp, #96]
   3c32c:	ldp	x22, x21, [sp, #80]
   3c330:	ldp	x24, x23, [sp, #64]
   3c334:	ldp	x29, x30, [sp, #48]
   3c338:	add	sp, sp, #0x70
   3c33c:	ret

000000000003c340 <mpfr_set_ui_2exp@@Base>:
   3c340:	stp	x29, x30, [sp, #-64]!
   3c344:	stp	x20, x19, [sp, #48]
   3c348:	mov	x20, x0
   3c34c:	mov	w8, #0x1                   	// #1
   3c350:	str	x23, [sp, #16]
   3c354:	stp	x22, x21, [sp, #32]
   3c358:	mov	x29, sp
   3c35c:	str	w8, [x0, #8]
   3c360:	cbz	x1, 3c43c <mpfr_set_ui_2exp@@Base+0xfc>
   3c364:	str	wzr, [x29, #28]
   3c368:	ldr	x8, [x20]
   3c36c:	ldr	x0, [x20, #24]
   3c370:	clz	x23, x1
   3c374:	mov	x22, x2
   3c378:	sub	x10, x8, #0x1
   3c37c:	add	x8, x8, #0x3e
   3c380:	cmp	x10, #0x0
   3c384:	csel	x8, x8, x10, lt  // lt = tstop
   3c388:	asr	x8, x8, #6
   3c38c:	lsl	x9, x1, x23
   3c390:	lsl	x2, x8, #3
   3c394:	add	x21, x0, x8, lsl #3
   3c398:	mov	w1, wzr
   3c39c:	mov	w19, w3
   3c3a0:	str	x9, [x21]
   3c3a4:	bl	c1b0 <memset@plt>
   3c3a8:	ldr	x4, [x20]
   3c3ac:	mov	w8, #0x40                  	// #64
   3c3b0:	sub	x2, x8, x23
   3c3b4:	add	x22, x2, x22
   3c3b8:	cmp	x4, x2
   3c3bc:	b.lt	3c44c <mpfr_set_ui_2exp@@Base+0x10c>  // b.tstop
   3c3c0:	str	x22, [x20, #16]
   3c3c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c3c8:	ldr	x1, [x0, #2592]
   3c3cc:	add	x0, x0, #0xa20
   3c3d0:	blr	x1
   3c3d4:	mrs	x9, tpidr_el0
   3c3d8:	ldr	x10, [x9, x0]
   3c3dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c3e0:	ldr	x1, [x0, #2624]
   3c3e4:	add	x0, x0, #0xa40
   3c3e8:	blr	x1
   3c3ec:	ldr	w8, [x29, #28]
   3c3f0:	cmp	x22, x10
   3c3f4:	b.lt	3c478 <mpfr_set_ui_2exp@@Base+0x138>  // b.tstop
   3c3f8:	ldr	x10, [x9, x0]
   3c3fc:	cmp	x22, x10
   3c400:	b.gt	3c478 <mpfr_set_ui_2exp@@Base+0x138>
   3c404:	cbz	w8, 3c424 <mpfr_set_ui_2exp@@Base+0xe4>
   3c408:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c40c:	ldr	x1, [x0, #2656]
   3c410:	add	x0, x0, #0xa60
   3c414:	blr	x1
   3c418:	ldr	w10, [x9, x0]
   3c41c:	orr	w10, w10, #0x8
   3c420:	str	w10, [x9, x0]
   3c424:	ldp	x20, x19, [sp, #48]
   3c428:	ldp	x22, x21, [sp, #32]
   3c42c:	ldr	x23, [sp, #16]
   3c430:	mov	w0, w8
   3c434:	ldp	x29, x30, [sp], #64
   3c438:	ret
   3c43c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3c440:	mov	w8, wzr
   3c444:	str	x9, [x20, #16]
   3c448:	b	3c424 <mpfr_set_ui_2exp@@Base+0xe4>
   3c44c:	add	x6, x29, #0x1c
   3c450:	mov	x0, x21
   3c454:	mov	x1, x21
   3c458:	mov	w3, wzr
   3c45c:	mov	w5, w19
   3c460:	bl	ca70 <mpfr_round_raw@plt>
   3c464:	cbz	w0, 3c3c0 <mpfr_set_ui_2exp@@Base+0x80>
   3c468:	add	x22, x22, #0x1
   3c46c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3c470:	str	x8, [x21]
   3c474:	b	3c3c0 <mpfr_set_ui_2exp@@Base+0x80>
   3c478:	mov	x0, x20
   3c47c:	mov	w1, w8
   3c480:	mov	w2, w19
   3c484:	bl	cb80 <mpfr_check_range@plt>
   3c488:	mov	w8, w0
   3c48c:	b	3c424 <mpfr_set_ui_2exp@@Base+0xe4>

000000000003c490 <mpfr_set_si_2exp@@Base>:
   3c490:	stp	x29, x30, [sp, #-80]!
   3c494:	stp	x20, x19, [sp, #64]
   3c498:	mov	x20, x0
   3c49c:	str	x25, [sp, #16]
   3c4a0:	stp	x24, x23, [sp, #32]
   3c4a4:	stp	x22, x21, [sp, #48]
   3c4a8:	mov	x29, sp
   3c4ac:	cbz	x1, 3c58c <mpfr_set_si_2exp@@Base+0xfc>
   3c4b0:	str	wzr, [x29, #28]
   3c4b4:	ldr	x8, [x20]
   3c4b8:	ldr	x0, [x20, #24]
   3c4bc:	mov	x23, x2
   3c4c0:	mov	x21, x1
   3c4c4:	sub	x9, x8, #0x1
   3c4c8:	add	x8, x8, #0x3e
   3c4cc:	cmp	x9, #0x0
   3c4d0:	csel	x8, x8, x9, lt  // lt = tstop
   3c4d4:	cmp	x1, #0x0
   3c4d8:	cneg	x9, x1, mi  // mi = first
   3c4dc:	asr	x8, x8, #6
   3c4e0:	clz	x24, x9
   3c4e4:	lsl	x2, x8, #3
   3c4e8:	lsl	x9, x9, x24
   3c4ec:	add	x22, x0, x8, lsl #3
   3c4f0:	mov	w8, #0xffffffff            	// #-1
   3c4f4:	mov	w1, wzr
   3c4f8:	mov	w19, w3
   3c4fc:	str	x9, [x22]
   3c500:	cneg	w25, w8, ge  // ge = tcont
   3c504:	bl	c1b0 <memset@plt>
   3c508:	ldr	x4, [x20]
   3c50c:	mov	w8, #0x40                  	// #64
   3c510:	sub	x2, x8, x24
   3c514:	add	x23, x2, x23
   3c518:	cmp	x4, x2
   3c51c:	str	w25, [x20, #8]
   3c520:	b.lt	3c5bc <mpfr_set_si_2exp@@Base+0x12c>  // b.tstop
   3c524:	str	x23, [x20, #16]
   3c528:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c52c:	ldr	x1, [x0, #2592]
   3c530:	add	x0, x0, #0xa20
   3c534:	blr	x1
   3c538:	mrs	x9, tpidr_el0
   3c53c:	ldr	x10, [x9, x0]
   3c540:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c544:	ldr	x1, [x0, #2624]
   3c548:	add	x0, x0, #0xa40
   3c54c:	blr	x1
   3c550:	ldr	w8, [x29, #28]
   3c554:	cmp	x23, x10
   3c558:	b.lt	3c5e8 <mpfr_set_si_2exp@@Base+0x158>  // b.tstop
   3c55c:	ldr	x10, [x9, x0]
   3c560:	cmp	x23, x10
   3c564:	b.gt	3c5e8 <mpfr_set_si_2exp@@Base+0x158>
   3c568:	cbz	w8, 3c5a0 <mpfr_set_si_2exp@@Base+0x110>
   3c56c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c570:	ldr	x1, [x0, #2656]
   3c574:	add	x0, x0, #0xa60
   3c578:	blr	x1
   3c57c:	ldr	w10, [x9, x0]
   3c580:	orr	w10, w10, #0x8
   3c584:	str	w10, [x9, x0]
   3c588:	b	3c5a0 <mpfr_set_si_2exp@@Base+0x110>
   3c58c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3c590:	mov	w10, #0x1                   	// #1
   3c594:	mov	w8, wzr
   3c598:	str	x9, [x20, #16]
   3c59c:	str	w10, [x20, #8]
   3c5a0:	ldp	x20, x19, [sp, #64]
   3c5a4:	ldp	x22, x21, [sp, #48]
   3c5a8:	ldp	x24, x23, [sp, #32]
   3c5ac:	ldr	x25, [sp, #16]
   3c5b0:	mov	w0, w8
   3c5b4:	ldp	x29, x30, [sp], #80
   3c5b8:	ret
   3c5bc:	lsr	x3, x21, #63
   3c5c0:	add	x6, x29, #0x1c
   3c5c4:	mov	x0, x22
   3c5c8:	mov	x1, x22
   3c5cc:	mov	w5, w19
   3c5d0:	bl	ca70 <mpfr_round_raw@plt>
   3c5d4:	cbz	w0, 3c524 <mpfr_set_si_2exp@@Base+0x94>
   3c5d8:	add	x23, x23, #0x1
   3c5dc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3c5e0:	str	x8, [x22]
   3c5e4:	b	3c524 <mpfr_set_si_2exp@@Base+0x94>
   3c5e8:	mov	x0, x20
   3c5ec:	mov	w1, w8
   3c5f0:	mov	w2, w19
   3c5f4:	bl	cb80 <mpfr_check_range@plt>
   3c5f8:	mov	w8, w0
   3c5fc:	b	3c5a0 <mpfr_set_si_2exp@@Base+0x110>

000000000003c600 <__gmpfr_set_uj@@Base>:
   3c600:	mov	w3, w2
   3c604:	mov	x2, xzr
   3c608:	b	c0a0 <__gmpfr_set_uj_2exp@plt>

000000000003c60c <__gmpfr_set_uj_2exp@@Base>:
   3c60c:	sub	sp, sp, #0x40
   3c610:	mov	x9, x0
   3c614:	stp	x29, x30, [sp, #48]
   3c618:	add	x29, sp, #0x30
   3c61c:	cbz	x1, 3c6a8 <__gmpfr_set_uj_2exp@@Base+0x9c>
   3c620:	mov	w10, #0x40                  	// #64
   3c624:	sub	x11, x29, #0x8
   3c628:	clz	x13, x1
   3c62c:	mov	w12, #0x1                   	// #1
   3c630:	str	x10, [sp, #8]
   3c634:	str	x11, [sp, #32]
   3c638:	lsl	x10, x1, x13
   3c63c:	sub	x11, x2, x13
   3c640:	mov	w8, w3
   3c644:	str	w12, [sp, #16]
   3c648:	stur	x10, [x29, #-8]
   3c64c:	add	x10, x11, #0x40
   3c650:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c654:	ldr	x1, [x0, #2592]
   3c658:	add	x0, x0, #0xa20
   3c65c:	blr	x1
   3c660:	mrs	x12, tpidr_el0
   3c664:	ldr	x11, [x12, x0]
   3c668:	cmp	x10, x11
   3c66c:	b.lt	3c6c8 <__gmpfr_set_uj_2exp@@Base+0xbc>  // b.tstop
   3c670:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c674:	ldr	x1, [x0, #2624]
   3c678:	add	x0, x0, #0xa40
   3c67c:	blr	x1
   3c680:	ldr	x11, [x12, x0]
   3c684:	cmp	x10, x11
   3c688:	b.gt	3c6f0 <__gmpfr_set_uj_2exp@@Base+0xe4>
   3c68c:	add	x1, sp, #0x8
   3c690:	mov	w3, #0x1                   	// #1
   3c694:	mov	x0, x9
   3c698:	mov	w2, w8
   3c69c:	str	x10, [sp, #24]
   3c6a0:	bl	c6f0 <mpfr_set4@plt>
   3c6a4:	b	3c6bc <__gmpfr_set_uj_2exp@@Base+0xb0>
   3c6a8:	mov	w8, #0x1                   	// #1
   3c6ac:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3c6b0:	mov	w0, wzr
   3c6b4:	str	w8, [x9, #8]
   3c6b8:	str	x10, [x9, #16]
   3c6bc:	ldp	x29, x30, [sp, #48]
   3c6c0:	add	sp, sp, #0x40
   3c6c4:	ret
   3c6c8:	cbnz	w8, 3c70c <__gmpfr_set_uj_2exp@@Base+0x100>
   3c6cc:	add	x8, x10, #0x1
   3c6d0:	cmp	x8, x11
   3c6d4:	str	x9, [sp]
   3c6d8:	b.lt	3c6e8 <__gmpfr_set_uj_2exp@@Base+0xdc>  // b.tstop
   3c6dc:	add	x0, sp, #0x8
   3c6e0:	bl	bfb0 <mpfr_powerof2_raw@plt>
   3c6e4:	cbz	w0, 3c704 <__gmpfr_set_uj_2exp@@Base+0xf8>
   3c6e8:	mov	w8, #0x1                   	// #1
   3c6ec:	b	3c708 <__gmpfr_set_uj_2exp@@Base+0xfc>
   3c6f0:	mov	w2, #0x1                   	// #1
   3c6f4:	mov	x0, x9
   3c6f8:	mov	w1, w8
   3c6fc:	bl	bff0 <mpfr_overflow@plt>
   3c700:	b	3c6bc <__gmpfr_set_uj_2exp@@Base+0xb0>
   3c704:	mov	w8, wzr
   3c708:	ldr	x9, [sp]
   3c70c:	mov	w2, #0x1                   	// #1
   3c710:	mov	x0, x9
   3c714:	mov	w1, w8
   3c718:	bl	c420 <mpfr_underflow@plt>
   3c71c:	b	3c6bc <__gmpfr_set_uj_2exp@@Base+0xb0>

000000000003c720 <__gmpfr_set_sj@@Base>:
   3c720:	mov	w3, w2
   3c724:	mov	x2, xzr
   3c728:	b	c980 <__gmpfr_set_sj_2exp@plt>

000000000003c72c <__gmpfr_set_sj_2exp@@Base>:
   3c72c:	stp	x29, x30, [sp, #-32]!
   3c730:	str	x19, [sp, #16]
   3c734:	mov	x19, x0
   3c738:	mov	x29, sp
   3c73c:	tbnz	x1, #63, 3c750 <__gmpfr_set_sj_2exp@@Base+0x24>
   3c740:	mov	x0, x19
   3c744:	ldr	x19, [sp, #16]
   3c748:	ldp	x29, x30, [sp], #32
   3c74c:	b	c0a0 <__gmpfr_set_uj_2exp@plt>
   3c750:	cmp	w3, #0x3
   3c754:	mov	w8, #0x2                   	// #2
   3c758:	csel	w8, w8, w3, eq  // eq = none
   3c75c:	cmp	w3, #0x2
   3c760:	mov	w9, #0x3                   	// #3
   3c764:	neg	x1, x1
   3c768:	csel	w3, w9, w8, eq  // eq = none
   3c76c:	mov	x0, x19
   3c770:	bl	c0a0 <__gmpfr_set_uj_2exp@plt>
   3c774:	ldr	w8, [x19, #8]
   3c778:	neg	w0, w0
   3c77c:	neg	w8, w8
   3c780:	str	w8, [x19, #8]
   3c784:	ldr	x19, [sp, #16]
   3c788:	ldp	x29, x30, [sp], #32
   3c78c:	ret

000000000003c790 <__gmpfr_mpfr_get_sj@@Base>:
   3c790:	sub	sp, sp, #0x60
   3c794:	stp	x29, x30, [sp, #32]
   3c798:	stp	x24, x23, [sp, #48]
   3c79c:	stp	x22, x21, [sp, #64]
   3c7a0:	stp	x20, x19, [sp, #80]
   3c7a4:	add	x29, sp, #0x20
   3c7a8:	mov	w20, w1
   3c7ac:	mov	x19, x0
   3c7b0:	bl	bc70 <mpfr_fits_intmax_p@plt>
   3c7b4:	cbz	w0, 3c9d4 <__gmpfr_mpfr_get_sj@@Base+0x244>
   3c7b8:	ldr	x8, [x19, #16]
   3c7bc:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3c7c0:	cmp	x8, x9
   3c7c4:	b.ne	3c7d0 <__gmpfr_mpfr_get_sj@@Base+0x40>  // b.any
   3c7c8:	mov	x19, xzr
   3c7cc:	b	3c9b8 <__gmpfr_mpfr_get_sj@@Base+0x228>
   3c7d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c7d4:	ldr	x1, [x0, #2656]
   3c7d8:	add	x0, x0, #0xa60
   3c7dc:	blr	x1
   3c7e0:	mrs	x21, tpidr_el0
   3c7e4:	ldr	w24, [x21, x0]
   3c7e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c7ec:	ldr	x1, [x0, #2592]
   3c7f0:	add	x0, x0, #0xa20
   3c7f4:	blr	x1
   3c7f8:	ldr	x22, [x21, x0]
   3c7fc:	mov	x8, x0
   3c800:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c804:	ldr	x1, [x0, #2624]
   3c808:	add	x0, x0, #0xa40
   3c80c:	blr	x1
   3c810:	ldr	x23, [x21, x0]
   3c814:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3c818:	str	x9, [x21, x8]
   3c81c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3c820:	str	x8, [x21, x0]
   3c824:	mov	x0, sp
   3c828:	mov	w1, #0x3f                  	// #63
   3c82c:	bl	cad0 <mpfr_init2@plt>
   3c830:	mov	x0, sp
   3c834:	mov	x1, x19
   3c838:	mov	w2, w20
   3c83c:	bl	c360 <mpfr_rint@plt>
   3c840:	ldr	x8, [sp, #16]
   3c844:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   3c848:	orr	x9, x8, #0x1
   3c84c:	cmp	x9, x10
   3c850:	b.eq	3ca1c <__gmpfr_mpfr_get_sj@@Base+0x28c>  // b.none
   3c854:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c858:	ldr	x1, [x0, #2656]
   3c85c:	add	x0, x0, #0xa60
   3c860:	blr	x1
   3c864:	ldr	w9, [x21, x0]
   3c868:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3c86c:	cmp	x8, x10
   3c870:	orr	w20, w9, w24
   3c874:	b.eq	3c970 <__gmpfr_mpfr_get_sj@@Base+0x1e0>  // b.none
   3c878:	mov	x10, #0x1                   	// #1
   3c87c:	lsl	x9, x8, #32
   3c880:	movk	x10, #0x40, lsl #32
   3c884:	cmp	x9, x10
   3c888:	b.ge	3ca3c <__gmpfr_mpfr_get_sj@@Base+0x2ac>  // b.tcont
   3c88c:	ldr	w10, [sp, #8]
   3c890:	mov	x11, #0x1                   	// #1
   3c894:	movk	x11, #0x3f, lsl #32
   3c898:	cmp	x9, x11
   3c89c:	b.ge	3ca58 <__gmpfr_mpfr_get_sj@@Base+0x2c8>  // b.tcont
   3c8a0:	ldr	x11, [sp]
   3c8a4:	ldr	x9, [sp, #24]
   3c8a8:	sub	x12, x11, #0x1
   3c8ac:	add	x11, x11, #0x3e
   3c8b0:	cmp	x12, #0x0
   3c8b4:	csel	x11, x11, x12, lt  // lt = tstop
   3c8b8:	asr	x11, x11, #6
   3c8bc:	cmp	w11, #0x0
   3c8c0:	cset	w12, ge  // ge = tcont
   3c8c4:	cmp	w8, #0x0
   3c8c8:	cset	w13, gt
   3c8cc:	cmp	w10, #0x0
   3c8d0:	and	w10, w13, w12
   3c8d4:	b.le	3c924 <__gmpfr_mpfr_get_sj@@Base+0x194>
   3c8d8:	cbz	w10, 3c970 <__gmpfr_mpfr_get_sj@@Base+0x1e0>
   3c8dc:	and	x10, x11, #0xffffffff
   3c8e0:	mov	w11, #0x40                  	// #64
   3c8e4:	mov	x19, xzr
   3c8e8:	sub	w11, w11, w8
   3c8ec:	ldr	x12, [x9, x10, lsl #3]
   3c8f0:	cmp	w8, #0x3f
   3c8f4:	lsl	x13, x12, x8
   3c8f8:	lsr	x12, x12, x11
   3c8fc:	csel	x12, x13, x12, gt
   3c900:	cmp	w8, #0x41
   3c904:	add	x19, x12, x19
   3c908:	b.lt	3c974 <__gmpfr_mpfr_get_sj@@Base+0x1e4>  // b.tstop
   3c90c:	sub	w8, w8, #0x40
   3c910:	cmp	x10, #0x0
   3c914:	sub	x10, x10, #0x1
   3c918:	add	w11, w11, #0x40
   3c91c:	b.gt	3c8ec <__gmpfr_mpfr_get_sj@@Base+0x15c>
   3c920:	b	3c974 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3c924:	cbz	w10, 3c970 <__gmpfr_mpfr_get_sj@@Base+0x1e0>
   3c928:	and	x10, x11, #0xffffffff
   3c92c:	mov	w11, #0x40                  	// #64
   3c930:	mov	x19, xzr
   3c934:	sub	w11, w11, w8
   3c938:	ldr	x12, [x9, x10, lsl #3]
   3c93c:	cmp	w8, #0x3f
   3c940:	lsl	x13, x12, x8
   3c944:	lsr	x12, x12, x11
   3c948:	csel	x12, x13, x12, gt
   3c94c:	cmp	w8, #0x41
   3c950:	sub	x19, x19, x12
   3c954:	b.lt	3c974 <__gmpfr_mpfr_get_sj@@Base+0x1e4>  // b.tstop
   3c958:	sub	w8, w8, #0x40
   3c95c:	cmp	x10, #0x0
   3c960:	sub	x10, x10, #0x1
   3c964:	add	w11, w11, #0x40
   3c968:	b.gt	3c938 <__gmpfr_mpfr_get_sj@@Base+0x1a8>
   3c96c:	b	3c974 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3c970:	mov	x19, xzr
   3c974:	mov	x0, sp
   3c978:	bl	c110 <mpfr_clear@plt>
   3c97c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c980:	ldr	x1, [x0, #2656]
   3c984:	add	x0, x0, #0xa60
   3c988:	blr	x1
   3c98c:	str	w20, [x21, x0]
   3c990:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c994:	ldr	x1, [x0, #2592]
   3c998:	add	x0, x0, #0xa20
   3c99c:	blr	x1
   3c9a0:	str	x22, [x21, x0]
   3c9a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c9a8:	ldr	x1, [x0, #2624]
   3c9ac:	add	x0, x0, #0xa40
   3c9b0:	blr	x1
   3c9b4:	str	x23, [x21, x0]
   3c9b8:	mov	x0, x19
   3c9bc:	ldp	x20, x19, [sp, #80]
   3c9c0:	ldp	x22, x21, [sp, #64]
   3c9c4:	ldp	x24, x23, [sp, #48]
   3c9c8:	ldp	x29, x30, [sp, #32]
   3c9cc:	add	sp, sp, #0x60
   3c9d0:	ret
   3c9d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3c9d8:	ldr	x1, [x0, #2656]
   3c9dc:	add	x0, x0, #0xa60
   3c9e0:	blr	x1
   3c9e4:	mrs	x8, tpidr_el0
   3c9e8:	ldr	w9, [x8, x0]
   3c9ec:	orr	w9, w9, #0x10
   3c9f0:	str	w9, [x8, x0]
   3c9f4:	ldr	x8, [x19, #16]
   3c9f8:	mov	x9, #0x2                   	// #2
   3c9fc:	movk	x9, #0x8000, lsl #48
   3ca00:	cmp	x8, x9
   3ca04:	b.eq	3c7c8 <__gmpfr_mpfr_get_sj@@Base+0x38>  // b.none
   3ca08:	ldr	w8, [x19, #8]
   3ca0c:	cmp	w8, #0x0
   3ca10:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3ca14:	cinv	x19, x8, ge  // ge = tcont
   3ca18:	b	3c9b8 <__gmpfr_mpfr_get_sj@@Base+0x228>
   3ca1c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3ca20:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ca24:	add	x0, x0, #0x3e7
   3ca28:	add	x2, x2, #0x3f0
   3ca2c:	mov	w1, #0x3e                  	// #62
   3ca30:	bl	cb90 <mpfr_assert_fail@plt>
   3ca34:	ldr	x8, [sp, #16]
   3ca38:	b	3c854 <__gmpfr_mpfr_get_sj@@Base+0xc4>
   3ca3c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3ca40:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ca44:	add	x0, x0, #0x3e7
   3ca48:	add	x2, x2, #0x467
   3ca4c:	mov	w1, #0x4b                  	// #75
   3ca50:	bl	cb90 <mpfr_assert_fail@plt>
   3ca54:	ldr	w10, [sp, #8]
   3ca58:	tbz	w10, #31, 3ca70 <__gmpfr_mpfr_get_sj@@Base+0x2e0>
   3ca5c:	mov	x0, sp
   3ca60:	bl	bfb0 <mpfr_powerof2_raw@plt>
   3ca64:	cbz	w0, 3ca70 <__gmpfr_mpfr_get_sj@@Base+0x2e0>
   3ca68:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   3ca6c:	b	3c974 <__gmpfr_mpfr_get_sj@@Base+0x1e4>
   3ca70:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3ca74:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ca78:	add	x0, x0, #0x3e7
   3ca7c:	add	x2, x2, #0x484
   3ca80:	mov	w1, #0x53                  	// #83
   3ca84:	bl	cb90 <mpfr_assert_fail@plt>
   3ca88:	b	3ca68 <__gmpfr_mpfr_get_sj@@Base+0x2d8>

000000000003ca8c <__gmpfr_mpfr_get_uj@@Base>:
   3ca8c:	sub	sp, sp, #0x60
   3ca90:	stp	x29, x30, [sp, #32]
   3ca94:	stp	x24, x23, [sp, #48]
   3ca98:	stp	x22, x21, [sp, #64]
   3ca9c:	stp	x20, x19, [sp, #80]
   3caa0:	add	x29, sp, #0x20
   3caa4:	mov	w20, w1
   3caa8:	mov	x19, x0
   3caac:	bl	c0b0 <mpfr_fits_uintmax_p@plt>
   3cab0:	cbz	w0, 3cc4c <__gmpfr_mpfr_get_uj@@Base+0x1c0>
   3cab4:	ldr	x8, [x19, #16]
   3cab8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3cabc:	cmp	x8, x9
   3cac0:	b.ne	3cacc <__gmpfr_mpfr_get_uj@@Base+0x40>  // b.any
   3cac4:	mov	x19, xzr
   3cac8:	b	3cc30 <__gmpfr_mpfr_get_uj@@Base+0x1a4>
   3cacc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cad0:	ldr	x1, [x0, #2656]
   3cad4:	add	x0, x0, #0xa60
   3cad8:	blr	x1
   3cadc:	mrs	x21, tpidr_el0
   3cae0:	ldr	w24, [x21, x0]
   3cae4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cae8:	ldr	x1, [x0, #2592]
   3caec:	add	x0, x0, #0xa20
   3caf0:	blr	x1
   3caf4:	ldr	x22, [x21, x0]
   3caf8:	mov	x8, x0
   3cafc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cb00:	ldr	x1, [x0, #2624]
   3cb04:	add	x0, x0, #0xa40
   3cb08:	blr	x1
   3cb0c:	ldr	x23, [x21, x0]
   3cb10:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3cb14:	str	x9, [x21, x8]
   3cb18:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   3cb1c:	str	x8, [x21, x0]
   3cb20:	mov	x0, sp
   3cb24:	mov	w1, #0x40                  	// #64
   3cb28:	bl	cad0 <mpfr_init2@plt>
   3cb2c:	mov	x0, sp
   3cb30:	mov	x1, x19
   3cb34:	mov	w2, w20
   3cb38:	bl	c360 <mpfr_rint@plt>
   3cb3c:	ldr	x8, [sp, #16]
   3cb40:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   3cb44:	orr	x9, x8, #0x1
   3cb48:	cmp	x9, x10
   3cb4c:	b.eq	3cc94 <__gmpfr_mpfr_get_uj@@Base+0x208>  // b.none
   3cb50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cb54:	ldr	x1, [x0, #2656]
   3cb58:	add	x0, x0, #0xa60
   3cb5c:	blr	x1
   3cb60:	ldr	w9, [x21, x0]
   3cb64:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   3cb68:	cmp	x8, x10
   3cb6c:	orr	w20, w9, w24
   3cb70:	b.eq	3cbe8 <__gmpfr_mpfr_get_uj@@Base+0x15c>  // b.none
   3cb74:	ldr	w9, [sp, #8]
   3cb78:	cmp	w9, #0x0
   3cb7c:	b.le	3ccb4 <__gmpfr_mpfr_get_uj@@Base+0x228>
   3cb80:	ldr	x9, [sp, #24]
   3cb84:	cmp	w8, #0x41
   3cb88:	b.ge	3ccd4 <__gmpfr_mpfr_get_uj@@Base+0x248>  // b.tcont
   3cb8c:	ldr	x10, [sp]
   3cb90:	sub	x11, x10, #0x1
   3cb94:	add	x10, x10, #0x3e
   3cb98:	cmp	x11, #0x0
   3cb9c:	csel	x10, x10, x11, lt  // lt = tstop
   3cba0:	asr	x10, x10, #6
   3cba4:	tbnz	w10, #31, 3cbe8 <__gmpfr_mpfr_get_uj@@Base+0x15c>
   3cba8:	mov	w11, #0x40                  	// #64
   3cbac:	mov	x19, xzr
   3cbb0:	and	x10, x10, #0xffffffff
   3cbb4:	sub	w11, w11, w8
   3cbb8:	ldr	x12, [x9, x10, lsl #3]
   3cbbc:	cmp	w8, #0x3f
   3cbc0:	lsl	x13, x12, x8
   3cbc4:	lsr	x12, x12, x11
   3cbc8:	csel	x12, x13, x12, gt
   3cbcc:	sub	w8, w8, #0x40
   3cbd0:	cmp	x10, #0x0
   3cbd4:	sub	x10, x10, #0x1
   3cbd8:	add	x19, x12, x19
   3cbdc:	add	w11, w11, #0x40
   3cbe0:	b.gt	3cbb8 <__gmpfr_mpfr_get_uj@@Base+0x12c>
   3cbe4:	b	3cbec <__gmpfr_mpfr_get_uj@@Base+0x160>
   3cbe8:	mov	x19, xzr
   3cbec:	mov	x0, sp
   3cbf0:	bl	c110 <mpfr_clear@plt>
   3cbf4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cbf8:	ldr	x1, [x0, #2656]
   3cbfc:	add	x0, x0, #0xa60
   3cc00:	blr	x1
   3cc04:	str	w20, [x21, x0]
   3cc08:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cc0c:	ldr	x1, [x0, #2592]
   3cc10:	add	x0, x0, #0xa20
   3cc14:	blr	x1
   3cc18:	str	x22, [x21, x0]
   3cc1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cc20:	ldr	x1, [x0, #2624]
   3cc24:	add	x0, x0, #0xa40
   3cc28:	blr	x1
   3cc2c:	str	x23, [x21, x0]
   3cc30:	mov	x0, x19
   3cc34:	ldp	x20, x19, [sp, #80]
   3cc38:	ldp	x22, x21, [sp, #64]
   3cc3c:	ldp	x24, x23, [sp, #48]
   3cc40:	ldp	x29, x30, [sp, #32]
   3cc44:	add	sp, sp, #0x60
   3cc48:	ret
   3cc4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cc50:	ldr	x1, [x0, #2656]
   3cc54:	add	x0, x0, #0xa60
   3cc58:	blr	x1
   3cc5c:	mrs	x8, tpidr_el0
   3cc60:	ldr	w9, [x8, x0]
   3cc64:	orr	w9, w9, #0x10
   3cc68:	str	w9, [x8, x0]
   3cc6c:	ldr	x8, [x19, #16]
   3cc70:	mov	x9, #0x2                   	// #2
   3cc74:	movk	x9, #0x8000, lsl #48
   3cc78:	cmp	x8, x9
   3cc7c:	b.eq	3cac4 <__gmpfr_mpfr_get_uj@@Base+0x38>  // b.none
   3cc80:	ldr	w8, [x19, #8]
   3cc84:	mov	w9, #0xffffffff            	// #-1
   3cc88:	eor	w8, w9, w8, asr #31
   3cc8c:	sxtw	x19, w8
   3cc90:	b	3cc30 <__gmpfr_mpfr_get_uj@@Base+0x1a4>
   3cc94:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3cc98:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3cc9c:	add	x0, x0, #0x4b5
   3cca0:	add	x2, x2, #0x3f0
   3cca4:	mov	w1, #0x3c                  	// #60
   3cca8:	bl	cb90 <mpfr_assert_fail@plt>
   3ccac:	ldr	x8, [sp, #16]
   3ccb0:	b	3cb50 <__gmpfr_mpfr_get_uj@@Base+0xc4>
   3ccb4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3ccb8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ccbc:	add	x0, x0, #0x4b5
   3ccc0:	add	x2, x2, #0x4be
   3ccc4:	mov	w1, #0x47                  	// #71
   3ccc8:	bl	cb90 <mpfr_assert_fail@plt>
   3cccc:	ldr	x8, [sp, #16]
   3ccd0:	b	3cb80 <__gmpfr_mpfr_get_uj@@Base+0xf4>
   3ccd4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3ccd8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ccdc:	add	x0, x0, #0x4b5
   3cce0:	add	x2, x2, #0x4d6
   3cce4:	mov	w1, #0x4a                  	// #74
   3cce8:	mov	x19, x8
   3ccec:	mov	x24, x9
   3ccf0:	bl	cb90 <mpfr_assert_fail@plt>
   3ccf4:	mov	x9, x24
   3ccf8:	mov	x8, x19
   3ccfc:	b	3cb8c <__gmpfr_mpfr_get_uj@@Base+0x100>

000000000003cd00 <mpfr_get_z@@Base>:
   3cd00:	sub	sp, sp, #0x70
   3cd04:	stp	x29, x30, [sp, #32]
   3cd08:	stp	x26, x25, [sp, #48]
   3cd0c:	stp	x24, x23, [sp, #64]
   3cd10:	stp	x22, x21, [sp, #80]
   3cd14:	stp	x20, x19, [sp, #96]
   3cd18:	ldr	x26, [x1, #16]
   3cd1c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3cd20:	mov	x19, x0
   3cd24:	add	x29, sp, #0x20
   3cd28:	cmp	x26, x8
   3cd2c:	b.le	3cea8 <mpfr_get_z@@Base+0x1a8>
   3cd30:	mov	w20, w2
   3cd34:	mov	x21, x1
   3cd38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cd3c:	ldr	x1, [x0, #2656]
   3cd40:	add	x0, x0, #0xa60
   3cd44:	blr	x1
   3cd48:	mrs	x22, tpidr_el0
   3cd4c:	ldr	w25, [x22, x0]
   3cd50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cd54:	ldr	x1, [x0, #2592]
   3cd58:	add	x0, x0, #0xa20
   3cd5c:	blr	x1
   3cd60:	ldr	x23, [x22, x0]
   3cd64:	mov	x8, x0
   3cd68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cd6c:	ldr	x1, [x0, #2624]
   3cd70:	add	x0, x0, #0xa40
   3cd74:	blr	x1
   3cd78:	ldr	x24, [x22, x0]
   3cd7c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3cd80:	str	x9, [x22, x8]
   3cd84:	mov	x8, #0x7fffffffffffff00    	// #9223372036854775552
   3cd88:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   3cd8c:	cmp	x26, x8
   3cd90:	str	x10, [x22, x0]
   3cd94:	b.ge	3cec8 <mpfr_get_z@@Base+0x1c8>  // b.tcont
   3cd98:	cmp	x26, #0x1
   3cd9c:	csinc	x1, x26, xzr, gt
   3cda0:	mov	x0, sp
   3cda4:	bl	cad0 <mpfr_init2@plt>
   3cda8:	mov	x0, sp
   3cdac:	mov	x1, x21
   3cdb0:	mov	w2, w20
   3cdb4:	bl	c360 <mpfr_rint@plt>
   3cdb8:	mov	w20, w0
   3cdbc:	cmp	w0, #0x1
   3cdc0:	b.eq	3cdcc <mpfr_get_z@@Base+0xcc>  // b.none
   3cdc4:	cmn	w20, #0x1
   3cdc8:	b.ne	3cde4 <mpfr_get_z@@Base+0xe4>  // b.any
   3cdcc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3cdd0:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3cdd4:	add	x0, x0, #0x4ef
   3cdd8:	add	x2, x2, #0x53c
   3cddc:	mov	w1, #0x35                  	// #53
   3cde0:	bl	cb90 <mpfr_assert_fail@plt>
   3cde4:	ldr	x8, [sp, #16]
   3cde8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3cdec:	orr	x8, x8, #0x1
   3cdf0:	cmp	x8, x9
   3cdf4:	b.eq	3cee4 <mpfr_get_z@@Base+0x1e4>  // b.none
   3cdf8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cdfc:	ldr	x1, [x0, #2656]
   3ce00:	add	x0, x0, #0xa60
   3ce04:	blr	x1
   3ce08:	ldr	w8, [x22, x0]
   3ce0c:	mov	x1, sp
   3ce10:	mov	x0, x19
   3ce14:	orr	w21, w8, w25
   3ce18:	bl	cb10 <mpfr_get_z_2exp@plt>
   3ce1c:	mov	x2, x0
   3ce20:	tbnz	x0, #63, 3ce34 <mpfr_get_z@@Base+0x134>
   3ce24:	mov	x0, x19
   3ce28:	mov	x1, x19
   3ce2c:	bl	c290 <__gmpz_mul_2exp@plt>
   3ce30:	b	3ce44 <mpfr_get_z@@Base+0x144>
   3ce34:	neg	x2, x2
   3ce38:	mov	x0, x19
   3ce3c:	mov	x1, x19
   3ce40:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   3ce44:	mov	x0, sp
   3ce48:	bl	c110 <mpfr_clear@plt>
   3ce4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3ce50:	ldr	x1, [x0, #2656]
   3ce54:	add	x0, x0, #0xa60
   3ce58:	blr	x1
   3ce5c:	str	w21, [x22, x0]
   3ce60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3ce64:	ldr	x1, [x0, #2592]
   3ce68:	add	x0, x0, #0xa20
   3ce6c:	blr	x1
   3ce70:	str	x23, [x22, x0]
   3ce74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3ce78:	ldr	x1, [x0, #2624]
   3ce7c:	add	x0, x0, #0xa40
   3ce80:	blr	x1
   3ce84:	str	x24, [x22, x0]
   3ce88:	mov	w0, w20
   3ce8c:	ldp	x20, x19, [sp, #96]
   3ce90:	ldp	x22, x21, [sp, #80]
   3ce94:	ldp	x24, x23, [sp, #64]
   3ce98:	ldp	x26, x25, [sp, #48]
   3ce9c:	ldp	x29, x30, [sp, #32]
   3cea0:	add	sp, sp, #0x70
   3cea4:	ret
   3cea8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3ceac:	cmp	x26, x8
   3ceb0:	b.ne	3cf00 <mpfr_get_z@@Base+0x200>  // b.any
   3ceb4:	mov	x0, x19
   3ceb8:	mov	x1, xzr
   3cebc:	bl	bd60 <__gmpz_set_ui@plt>
   3cec0:	mov	w20, wzr
   3cec4:	b	3ce88 <mpfr_get_z@@Base+0x188>
   3cec8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3cecc:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ced0:	add	x0, x0, #0x4ef
   3ced4:	add	x2, x2, #0x4f7
   3ced8:	mov	w1, #0x31                  	// #49
   3cedc:	bl	cb90 <mpfr_assert_fail@plt>
   3cee0:	b	3cd98 <mpfr_get_z@@Base+0x98>
   3cee4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3cee8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ceec:	add	x0, x0, #0x4ef
   3cef0:	add	x2, x2, #0x554
   3cef4:	mov	w1, #0x37                  	// #55
   3cef8:	bl	cb90 <mpfr_assert_fail@plt>
   3cefc:	b	3cdf8 <mpfr_get_z@@Base+0xf8>
   3cf00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cf04:	ldr	x1, [x0, #2656]
   3cf08:	add	x0, x0, #0xa60
   3cf0c:	blr	x1
   3cf10:	mrs	x8, tpidr_el0
   3cf14:	ldr	w9, [x8, x0]
   3cf18:	orr	w9, w9, #0x10
   3cf1c:	str	w9, [x8, x0]
   3cf20:	b	3ceb4 <mpfr_get_z@@Base+0x1b4>

000000000003cf24 <mpfr_zero_p@@Base>:
   3cf24:	ldr	x8, [x0, #16]
   3cf28:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3cf2c:	cmp	x8, x9
   3cf30:	cset	w0, eq  // eq = none
   3cf34:	ret

000000000003cf38 <mpfr_clear_cache@@Base>:
   3cf38:	stp	x29, x30, [sp, #-32]!
   3cf3c:	ldr	x8, [x0]
   3cf40:	str	x19, [sp, #16]
   3cf44:	mov	x29, sp
   3cf48:	cbnz	x8, 3cf58 <mpfr_clear_cache@@Base+0x20>
   3cf4c:	ldr	x19, [sp, #16]
   3cf50:	ldp	x29, x30, [sp], #32
   3cf54:	ret
   3cf58:	mov	x19, x0
   3cf5c:	bl	c110 <mpfr_clear@plt>
   3cf60:	str	xzr, [x19]
   3cf64:	b	3cf4c <mpfr_clear_cache@@Base+0x14>

000000000003cf68 <mpfr_cache@@Base>:
   3cf68:	stp	x29, x30, [sp, #-96]!
   3cf6c:	stp	x28, x27, [sp, #16]
   3cf70:	stp	x26, x25, [sp, #32]
   3cf74:	stp	x24, x23, [sp, #48]
   3cf78:	stp	x22, x21, [sp, #64]
   3cf7c:	stp	x20, x19, [sp, #80]
   3cf80:	ldr	x22, [x0]
   3cf84:	mov	x29, sp
   3cf88:	mov	w19, w2
   3cf8c:	mov	x20, x0
   3cf90:	mov	x21, x1
   3cf94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cf98:	ldr	x1, [x0, #2656]
   3cf9c:	add	x0, x0, #0xa60
   3cfa0:	blr	x1
   3cfa4:	mrs	x25, tpidr_el0
   3cfa8:	ldr	w26, [x25, x0]
   3cfac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cfb0:	ldr	x1, [x0, #2592]
   3cfb4:	add	x0, x0, #0xa20
   3cfb8:	blr	x1
   3cfbc:	ldr	x27, [x25, x0]
   3cfc0:	mov	x8, x0
   3cfc4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3cfc8:	ldr	x1, [x0, #2624]
   3cfcc:	add	x0, x0, #0xa40
   3cfd0:	blr	x1
   3cfd4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   3cfd8:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   3cfdc:	ldr	x28, [x25, x0]
   3cfe0:	str	x9, [x25, x8]
   3cfe4:	str	x10, [x25, x0]
   3cfe8:	ldr	x24, [x21]
   3cfec:	cmp	x22, x24
   3cff0:	b.gt	3d310 <mpfr_cache@@Base+0x3a8>
   3cff4:	ldr	w22, [x21, #8]
   3cff8:	cmp	w22, #0x0
   3cffc:	b.le	3d358 <mpfr_cache@@Base+0x3f0>
   3d000:	ldr	x8, [x21, #16]
   3d004:	ldr	x12, [x20]
   3d008:	sub	x9, x24, #0x1
   3d00c:	add	x10, x24, #0x3e
   3d010:	cmp	x9, #0x0
   3d014:	csel	x9, x10, x9, lt  // lt = tstop
   3d018:	str	x8, [x20, #16]
   3d01c:	sub	x8, x12, #0x1
   3d020:	ldr	x23, [x20, #24]
   3d024:	asr	x13, x9, #6
   3d028:	add	x9, x12, #0x3e
   3d02c:	cmp	x8, #0x0
   3d030:	csel	x8, x9, x8, lt  // lt = tstop
   3d034:	asr	x9, x8, #6
   3d038:	add	x17, x13, #0x1
   3d03c:	cmp	x12, x24
   3d040:	add	x11, x9, #0x1
   3d044:	str	w22, [x20, #8]
   3d048:	b.ge	3d378 <mpfr_cache@@Base+0x410>  // b.tcont
   3d04c:	ldr	x14, [x21, #24]
   3d050:	neg	w8, w12
   3d054:	ands	x15, x8, #0x3f
   3d058:	mvn	x10, x9
   3d05c:	add	x8, x14, x17, lsl #3
   3d060:	add	x1, x8, x10, lsl #3
   3d064:	b.eq	3d3d4 <mpfr_cache@@Base+0x46c>  // b.none
   3d068:	ldr	x16, [x1]
   3d06c:	sub	x15, x15, #0x1
   3d070:	mov	w18, #0x1                   	// #1
   3d074:	lsl	x18, x18, x15
   3d078:	sub	x0, x18, #0x1
   3d07c:	and	x15, x16, x18
   3d080:	and	x16, x16, x0
   3d084:	cbz	w19, 3d0c0 <mpfr_cache@@Base+0x158>
   3d088:	cbz	x15, 3d0c0 <mpfr_cache@@Base+0x158>
   3d08c:	lsl	x24, x18, #1
   3d090:	cmp	w19, #0x5
   3d094:	b.eq	3d180 <mpfr_cache@@Base+0x218>  // b.none
   3d098:	cmp	w19, #0x1
   3d09c:	b.eq	3d0f8 <mpfr_cache@@Base+0x190>  // b.none
   3d0a0:	cbnz	w19, 3d0ec <mpfr_cache@@Base+0x184>
   3d0a4:	cbz	x15, 3d0f8 <mpfr_cache@@Base+0x190>
   3d0a8:	cbnz	x16, 3d110 <mpfr_cache@@Base+0x1a8>
   3d0ac:	ldr	w15, [x21, #32]
   3d0b0:	cbz	w15, 3d438 <mpfr_cache@@Base+0x4d0>
   3d0b4:	tbnz	w15, #31, 3d110 <mpfr_cache@@Base+0x1a8>
   3d0b8:	neg	w22, w22
   3d0bc:	b	3d184 <mpfr_cache@@Base+0x21c>
   3d0c0:	cbnz	x16, 3d08c <mpfr_cache@@Base+0x124>
   3d0c4:	sub	x17, x17, x11
   3d0c8:	cbz	x17, 3d08c <mpfr_cache@@Base+0x124>
   3d0cc:	mvn	x16, x9
   3d0d0:	add	x17, x16, x13
   3d0d4:	ldr	x16, [x14, x17, lsl #3]
   3d0d8:	subs	x17, x17, #0x1
   3d0dc:	cset	w0, cs  // cs = hs, nlast
   3d0e0:	cbnz	x16, 3d08c <mpfr_cache@@Base+0x124>
   3d0e4:	tbnz	w0, #0, 3d0d4 <mpfr_cache@@Base+0x16c>
   3d0e8:	b	3d08c <mpfr_cache@@Base+0x124>
   3d0ec:	add	w17, w19, w22, lsr #31
   3d0f0:	cmp	w17, #0x3
   3d0f4:	b.ne	3d108 <mpfr_cache@@Base+0x1a0>  // b.any
   3d0f8:	orr	x8, x16, x15
   3d0fc:	cmp	x8, #0x0
   3d100:	csneg	w22, wzr, w22, eq  // eq = none
   3d104:	b	3d184 <mpfr_cache@@Base+0x21c>
   3d108:	orr	x15, x16, x15
   3d10c:	cbz	x15, 3d180 <mpfr_cache@@Base+0x218>
   3d110:	ldr	x11, [x1]
   3d114:	adds	x11, x11, x24
   3d118:	str	x11, [x23]
   3d11c:	b.cc	3d2a0 <mpfr_cache@@Base+0x338>  // b.lo, b.ul, b.last
   3d120:	sub	x13, x13, x9
   3d124:	add	x13, x14, x13, lsl #3
   3d128:	mov	x12, xzr
   3d12c:	add	x11, x23, #0x8
   3d130:	add	x13, x13, #0x8
   3d134:	add	x14, x12, #0x1
   3d138:	cmp	x14, x9
   3d13c:	b.gt	3d2cc <mpfr_cache@@Base+0x364>
   3d140:	ldr	x15, [x13, x12, lsl #3]
   3d144:	mov	x12, x14
   3d148:	adds	x15, x15, #0x1
   3d14c:	str	x15, [x11], #8
   3d150:	b.cs	3d134 <mpfr_cache@@Base+0x1cc>  // b.hs, b.nlast
   3d154:	cmp	x1, x23
   3d158:	b.eq	3d198 <mpfr_cache@@Base+0x230>  // b.none
   3d15c:	cmp	x14, x9
   3d160:	b.ge	3d198 <mpfr_cache@@Base+0x230>  // b.tcont
   3d164:	add	x9, x10, x14
   3d168:	add	x9, x9, #0x1
   3d16c:	ldr	x10, [x8, x9, lsl #3]
   3d170:	adds	x9, x9, #0x1
   3d174:	str	x10, [x11], #8
   3d178:	b.cc	3d16c <mpfr_cache@@Base+0x204>  // b.lo, b.ul, b.last
   3d17c:	b	3d198 <mpfr_cache@@Base+0x230>
   3d180:	mov	w22, wzr
   3d184:	cmp	x23, x1
   3d188:	b.eq	3d198 <mpfr_cache@@Base+0x230>  // b.none
   3d18c:	lsl	x2, x11, #3
   3d190:	mov	x0, x23
   3d194:	bl	bad0 <memcpy@plt>
   3d198:	ldr	x8, [x23]
   3d19c:	neg	x9, x24
   3d1a0:	and	x8, x8, x9
   3d1a4:	str	x8, [x23]
   3d1a8:	ldr	w21, [x21, #32]
   3d1ac:	cbz	w21, 3d214 <mpfr_cache@@Base+0x2ac>
   3d1b0:	sub	w8, w19, #0x1
   3d1b4:	cmp	w8, #0x3
   3d1b8:	b.hi	3d20c <mpfr_cache@@Base+0x2a4>  // b.pmore
   3d1bc:	adrp	x9, 5e000 <mpfr_bases@@Base+0x4f8>
   3d1c0:	add	x9, x9, #0x5cb
   3d1c4:	adr	x10, 3d1d4 <mpfr_cache@@Base+0x26c>
   3d1c8:	ldrb	w11, [x9, x8]
   3d1cc:	add	x10, x10, x11, lsl #2
   3d1d0:	br	x10
   3d1d4:	cbnz	w22, 3d214 <mpfr_cache@@Base+0x2ac>
   3d1d8:	cmp	w21, #0x1
   3d1dc:	mov	w22, w21
   3d1e0:	b.lt	3d214 <mpfr_cache@@Base+0x2ac>  // b.tstop
   3d1e4:	mov	x0, x20
   3d1e8:	bl	be80 <mpfr_nextbelow@plt>
   3d1ec:	b	3d204 <mpfr_cache@@Base+0x29c>
   3d1f0:	cbnz	w22, 3d214 <mpfr_cache@@Base+0x2ac>
   3d1f4:	mov	w22, w21
   3d1f8:	tbz	w21, #31, 3d214 <mpfr_cache@@Base+0x2ac>
   3d1fc:	mov	x0, x20
   3d200:	bl	c1c0 <mpfr_nextabove@plt>
   3d204:	neg	w22, w21
   3d208:	b	3d214 <mpfr_cache@@Base+0x2ac>
   3d20c:	cmp	w22, #0x0
   3d210:	csel	w22, w21, w22, eq  // eq = none
   3d214:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d218:	ldr	x1, [x0, #2656]
   3d21c:	add	x0, x0, #0xa60
   3d220:	blr	x1
   3d224:	str	w26, [x25, x0]
   3d228:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d22c:	ldr	x1, [x0, #2592]
   3d230:	add	x0, x0, #0xa20
   3d234:	blr	x1
   3d238:	str	x27, [x25, x0]
   3d23c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d240:	ldr	x1, [x0, #2624]
   3d244:	add	x0, x0, #0xa40
   3d248:	blr	x1
   3d24c:	str	x28, [x25, x0]
   3d250:	ldr	x8, [x20, #16]
   3d254:	cmp	x8, x28
   3d258:	b.gt	3d3ac <mpfr_cache@@Base+0x444>
   3d25c:	cmp	x8, x27
   3d260:	b.lt	3d3ac <mpfr_cache@@Base+0x444>  // b.tstop
   3d264:	cbz	w22, 3d280 <mpfr_cache@@Base+0x318>
   3d268:	orr	w8, w26, #0x8
   3d26c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d270:	ldr	x1, [x0, #2656]
   3d274:	add	x0, x0, #0xa60
   3d278:	blr	x1
   3d27c:	str	w8, [x25, x0]
   3d280:	mov	w0, w22
   3d284:	ldp	x20, x19, [sp, #80]
   3d288:	ldp	x22, x21, [sp, #64]
   3d28c:	ldp	x24, x23, [sp, #48]
   3d290:	ldp	x26, x25, [sp, #32]
   3d294:	ldp	x28, x27, [sp, #16]
   3d298:	ldp	x29, x30, [sp], #96
   3d29c:	ret
   3d2a0:	cmp	x12, #0x41
   3d2a4:	b.lt	3d198 <mpfr_cache@@Base+0x230>  // b.tstop
   3d2a8:	cmp	x1, x23
   3d2ac:	b.eq	3d198 <mpfr_cache@@Base+0x230>  // b.none
   3d2b0:	add	x9, x10, #0x1
   3d2b4:	add	x10, x23, #0x8
   3d2b8:	ldr	x11, [x8, x9, lsl #3]
   3d2bc:	adds	x9, x9, #0x1
   3d2c0:	str	x11, [x10], #8
   3d2c4:	b.cc	3d2b8 <mpfr_cache@@Base+0x350>  // b.lo, b.ul, b.last
   3d2c8:	b	3d198 <mpfr_cache@@Base+0x230>
   3d2cc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d2d0:	str	x8, [x23, x9, lsl #3]
   3d2d4:	ldr	x8, [x20, #16]
   3d2d8:	add	x9, x8, #0x1
   3d2dc:	str	x9, [x20, #16]
   3d2e0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d2e4:	ldr	x1, [x0, #2624]
   3d2e8:	add	x0, x0, #0xa40
   3d2ec:	blr	x1
   3d2f0:	ldr	x9, [x25, x0]
   3d2f4:	cmp	x8, x9
   3d2f8:	b.lt	3d198 <mpfr_cache@@Base+0x230>  // b.tstop
   3d2fc:	mov	x0, x20
   3d300:	mov	w1, w19
   3d304:	mov	w2, w22
   3d308:	bl	bff0 <mpfr_overflow@plt>
   3d30c:	b	3d198 <mpfr_cache@@Base+0x230>
   3d310:	cbz	x24, 3d424 <mpfr_cache@@Base+0x4bc>
   3d314:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   3d318:	movk	x8, #0x6667
   3d31c:	smulh	x8, x24, x8
   3d320:	asr	x9, x8, #2
   3d324:	add	x8, x9, x8, lsr #63
   3d328:	add	x8, x8, x24
   3d32c:	cmp	x8, x22
   3d330:	csel	x24, x22, x8, lt  // lt = tstop
   3d334:	mov	x0, x21
   3d338:	mov	x1, x24
   3d33c:	bl	bf80 <mpfr_set_prec@plt>
   3d340:	ldr	x8, [x21, #40]
   3d344:	mov	x0, x21
   3d348:	mov	w1, wzr
   3d34c:	blr	x8
   3d350:	str	w0, [x21, #32]
   3d354:	b	3cff4 <mpfr_cache@@Base+0x8c>
   3d358:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3d35c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3d360:	add	x0, x0, #0x5cf
   3d364:	add	x2, x2, #0x5d7
   3d368:	mov	w1, #0x76                  	// #118
   3d36c:	bl	cb90 <mpfr_assert_fail@plt>
   3d370:	ldr	w22, [x21, #8]
   3d374:	b	3d000 <mpfr_cache@@Base+0x98>
   3d378:	ldr	x1, [x21, #24]
   3d37c:	sub	x22, x11, x17
   3d380:	add	x0, x23, x22, lsl #3
   3d384:	cmp	x0, x1
   3d388:	b.eq	3d394 <mpfr_cache@@Base+0x42c>  // b.none
   3d38c:	lsl	x2, x17, #3
   3d390:	bl	bad0 <memcpy@plt>
   3d394:	lsl	x2, x22, #3
   3d398:	mov	x0, x23
   3d39c:	mov	w1, wzr
   3d3a0:	bl	c1b0 <memset@plt>
   3d3a4:	mov	w22, wzr
   3d3a8:	b	3d1a8 <mpfr_cache@@Base+0x240>
   3d3ac:	mov	x0, x20
   3d3b0:	mov	w1, w22
   3d3b4:	mov	w2, w19
   3d3b8:	ldp	x20, x19, [sp, #80]
   3d3bc:	ldp	x22, x21, [sp, #64]
   3d3c0:	ldp	x24, x23, [sp, #48]
   3d3c4:	ldp	x26, x25, [sp, #32]
   3d3c8:	ldp	x28, x27, [sp, #16]
   3d3cc:	ldp	x29, x30, [sp], #96
   3d3d0:	b	cb80 <mpfr_check_range@plt>
   3d3d4:	ldur	x16, [x1, #-8]
   3d3d8:	and	x15, x16, #0x8000000000000000
   3d3dc:	and	x16, x16, #0x7fffffffffffffff
   3d3e0:	cbz	w19, 3d3f0 <mpfr_cache@@Base+0x488>
   3d3e4:	cbz	x15, 3d3f0 <mpfr_cache@@Base+0x488>
   3d3e8:	mov	w24, #0x1                   	// #1
   3d3ec:	b	3d090 <mpfr_cache@@Base+0x128>
   3d3f0:	mov	w24, #0x1                   	// #1
   3d3f4:	cbnz	x16, 3d090 <mpfr_cache@@Base+0x128>
   3d3f8:	sub	x17, x13, x11
   3d3fc:	cbz	x17, 3d090 <mpfr_cache@@Base+0x128>
   3d400:	sub	x16, x13, x9
   3d404:	sub	x17, x16, #0x2
   3d408:	mov	w24, #0x1                   	// #1
   3d40c:	ldr	x16, [x14, x17, lsl #3]
   3d410:	subs	x17, x17, #0x1
   3d414:	cset	w18, cs  // cs = hs, nlast
   3d418:	cbnz	x16, 3d090 <mpfr_cache@@Base+0x128>
   3d41c:	tbnz	w18, #0, 3d40c <mpfr_cache@@Base+0x4a4>
   3d420:	b	3d090 <mpfr_cache@@Base+0x128>
   3d424:	mov	x0, x21
   3d428:	mov	x1, x22
   3d42c:	bl	cad0 <mpfr_init2@plt>
   3d430:	mov	x8, xzr
   3d434:	b	3d32c <mpfr_cache@@Base+0x3c4>
   3d438:	ldr	x15, [x1]
   3d43c:	tst	x15, x24
   3d440:	b.ne	3d110 <mpfr_cache@@Base+0x1a8>  // b.any
   3d444:	b	3d0b8 <mpfr_cache@@Base+0x150>

000000000003d448 <mpfr_sqr@@Base>:
   3d448:	stp	x29, x30, [sp, #-96]!
   3d44c:	stp	x28, x27, [sp, #16]
   3d450:	stp	x26, x25, [sp, #32]
   3d454:	stp	x24, x23, [sp, #48]
   3d458:	stp	x22, x21, [sp, #64]
   3d45c:	stp	x20, x19, [sp, #80]
   3d460:	mov	x29, sp
   3d464:	sub	sp, sp, #0x40
   3d468:	ldr	x26, [x1, #16]
   3d46c:	mov	x8, #0x2                   	// #2
   3d470:	movk	x8, #0x8000, lsl #48
   3d474:	add	x9, x8, #0x2
   3d478:	cmp	x26, x9
   3d47c:	mov	x19, x0
   3d480:	b.lt	3dbc0 <mpfr_sqr@@Base+0x778>  // b.tstop
   3d484:	ldr	x21, [x19]
   3d488:	ldr	x8, [x1]
   3d48c:	mov	w20, w2
   3d490:	mov	x22, x1
   3d494:	cmp	x21, #0x3f
   3d498:	b.gt	3d594 <mpfr_sqr@@Base+0x14c>
   3d49c:	cmp	x8, #0x40
   3d4a0:	b.gt	3d594 <mpfr_sqr@@Base+0x14c>
   3d4a4:	ldr	x8, [x22, #24]
   3d4a8:	ldr	x10, [x19, #24]
   3d4ac:	neg	x9, x21
   3d4b0:	mov	w12, #0x1                   	// #1
   3d4b4:	ldr	x8, [x8]
   3d4b8:	lsl	x11, x12, x9
   3d4bc:	lsl	x9, x26, #1
   3d4c0:	umulh	x15, x8, x8
   3d4c4:	mul	x14, x8, x8
   3d4c8:	tbnz	x15, #63, 3d4d8 <mpfr_sqr@@Base+0x90>
   3d4cc:	sub	x9, x9, #0x1
   3d4d0:	extr	x15, x15, x14, #63
   3d4d4:	lsl	x14, x14, #1
   3d4d8:	neg	x16, x11
   3d4dc:	and	x8, x15, x16
   3d4e0:	str	x8, [x10]
   3d4e4:	str	w12, [x19, #8]
   3d4e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d4ec:	ldr	x1, [x0, #2624]
   3d4f0:	add	x0, x0, #0xa40
   3d4f4:	blr	x1
   3d4f8:	mrs	x12, tpidr_el0
   3d4fc:	ldr	x13, [x12, x0]
   3d500:	cmp	x9, x13
   3d504:	b.gt	3dbac <mpfr_sqr@@Base+0x764>
   3d508:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
   3d50c:	sub	x17, x11, #0x1
   3d510:	lsr	x13, x13, x21
   3d514:	and	x13, x15, x13
   3d518:	and	x15, x15, x17
   3d51c:	eor	x15, x15, x13
   3d520:	orr	x14, x15, x14
   3d524:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d528:	ldr	x1, [x0, #2592]
   3d52c:	add	x0, x0, #0xa20
   3d530:	blr	x1
   3d534:	ldr	x15, [x12, x0]
   3d538:	cmp	x9, x15
   3d53c:	b.lt	3dc14 <mpfr_sqr@@Base+0x7cc>  // b.tstop
   3d540:	mov	w8, wzr
   3d544:	cmp	w20, #0x5
   3d548:	str	x9, [x19, #16]
   3d54c:	b.eq	3db88 <mpfr_sqr@@Base+0x740>  // b.none
   3d550:	orr	x15, x14, x13
   3d554:	cbz	x15, 3db88 <mpfr_sqr@@Base+0x740>
   3d558:	cmp	w20, #0x3
   3d55c:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d560:	cmp	w20, #0x1
   3d564:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d568:	cbnz	w20, 3d580 <mpfr_sqr@@Base+0x138>
   3d56c:	cbz	x13, 3d7ac <mpfr_sqr@@Base+0x364>
   3d570:	cbnz	x14, 3d580 <mpfr_sqr@@Base+0x138>
   3d574:	ldr	x8, [x10]
   3d578:	tst	x8, x11
   3d57c:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d580:	ldr	x8, [x10]
   3d584:	adds	x8, x8, x11
   3d588:	str	x8, [x10]
   3d58c:	b.ne	3db68 <mpfr_sqr@@Base+0x720>  // b.any
   3d590:	b	3db3c <mpfr_sqr@@Base+0x6f4>
   3d594:	sub	x9, x21, #0x41
   3d598:	cmp	x9, #0x3e
   3d59c:	b.hi	3d700 <mpfr_sqr@@Base+0x2b8>  // b.pmore
   3d5a0:	sub	x9, x8, #0x41
   3d5a4:	cmp	x9, #0x3f
   3d5a8:	b.hi	3d700 <mpfr_sqr@@Base+0x2b8>  // b.pmore
   3d5ac:	ldr	x8, [x22, #24]
   3d5b0:	neg	x10, x21
   3d5b4:	mov	w13, #0x1                   	// #1
   3d5b8:	ldr	x9, [x19, #24]
   3d5bc:	ldp	x12, x11, [x8]
   3d5c0:	lsl	x10, x13, x10
   3d5c4:	umulh	x8, x11, x11
   3d5c8:	umulh	x16, x11, x12
   3d5cc:	mul	x15, x11, x11
   3d5d0:	adds	x15, x15, x16, lsl #1
   3d5d4:	sub	x14, x10, #0x1
   3d5d8:	add	x8, x8, x16, lsr #63
   3d5dc:	add	x16, x15, #0x2
   3d5e0:	and	x16, x16, x14, lsr #2
   3d5e4:	cinc	x8, x8, cs  // cs = hs, nlast
   3d5e8:	cmp	x16, #0x2
   3d5ec:	b.ls	3dc50 <mpfr_sqr@@Base+0x808>  // b.plast
   3d5f0:	mov	w16, #0x1                   	// #1
   3d5f4:	lsl	x11, x26, #1
   3d5f8:	tbnz	x8, #63, 3d60c <mpfr_sqr@@Base+0x1c4>
   3d5fc:	sub	x11, x11, #0x1
   3d600:	extr	x8, x8, x15, #63
   3d604:	extr	x15, x15, x16, #63
   3d608:	lsl	x16, x16, #1
   3d60c:	neg	x18, x10
   3d610:	mov	w2, #0x1                   	// #1
   3d614:	and	x17, x15, x18
   3d618:	stp	x17, x8, [x9]
   3d61c:	str	w2, [x19, #8]
   3d620:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d624:	ldr	x1, [x0, #2624]
   3d628:	add	x0, x0, #0xa40
   3d62c:	blr	x1
   3d630:	mrs	x12, tpidr_el0
   3d634:	ldr	x0, [x12, x0]
   3d638:	cmp	x11, x0
   3d63c:	b.gt	3dbac <mpfr_sqr@@Base+0x764>
   3d640:	mov	w0, #0x7f                  	// #127
   3d644:	and	x1, x15, x14
   3d648:	sub	x14, x0, x21
   3d64c:	lsl	x14, x2, x14
   3d650:	and	x14, x15, x14
   3d654:	eor	x15, x1, x14
   3d658:	orr	x13, x16, x13
   3d65c:	orr	x13, x13, x15
   3d660:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d664:	ldr	x1, [x0, #2592]
   3d668:	add	x0, x0, #0xa20
   3d66c:	blr	x1
   3d670:	ldr	x15, [x12, x0]
   3d674:	cmp	x11, x15
   3d678:	b.lt	3dc80 <mpfr_sqr@@Base+0x838>  // b.tstop
   3d67c:	mov	w8, wzr
   3d680:	cmp	w20, #0x5
   3d684:	str	x11, [x19, #16]
   3d688:	b.eq	3db88 <mpfr_sqr@@Base+0x740>  // b.none
   3d68c:	orr	x15, x13, x14
   3d690:	cbz	x15, 3db88 <mpfr_sqr@@Base+0x740>
   3d694:	cmp	w20, #0x3
   3d698:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d69c:	cmp	w20, #0x1
   3d6a0:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d6a4:	cbnz	w20, 3d6bc <mpfr_sqr@@Base+0x274>
   3d6a8:	cbz	x14, 3d7ac <mpfr_sqr@@Base+0x364>
   3d6ac:	cbnz	x13, 3d6bc <mpfr_sqr@@Base+0x274>
   3d6b0:	ldr	x8, [x9]
   3d6b4:	tst	x8, x10
   3d6b8:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d6bc:	ldp	x8, x13, [x9]
   3d6c0:	adds	x8, x8, x10
   3d6c4:	str	x8, [x9]
   3d6c8:	cinc	x8, x13, eq  // eq = none
   3d6cc:	str	x8, [x9, #8]
   3d6d0:	cbnz	x8, 3db68 <mpfr_sqr@@Base+0x720>
   3d6d4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d6d8:	str	x8, [x9, #8]
   3d6dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d6e0:	ldr	x1, [x0, #2624]
   3d6e4:	add	x0, x0, #0xa40
   3d6e8:	blr	x1
   3d6ec:	ldr	x8, [x12, x0]
   3d6f0:	cmp	x11, x8
   3d6f4:	b.ge	3dbac <mpfr_sqr@@Base+0x764>  // b.tcont
   3d6f8:	add	x8, x11, #0x1
   3d6fc:	b	3db64 <mpfr_sqr@@Base+0x71c>
   3d700:	cmp	x21, #0x40
   3d704:	b.ne	3d7d0 <mpfr_sqr@@Base+0x388>  // b.any
   3d708:	cmp	x8, #0x40
   3d70c:	b.gt	3d7d0 <mpfr_sqr@@Base+0x388>
   3d710:	ldr	x8, [x22, #24]
   3d714:	ldr	x10, [x19, #24]
   3d718:	lsl	x9, x26, #1
   3d71c:	ldr	x11, [x8]
   3d720:	umulh	x8, x11, x11
   3d724:	mul	x11, x11, x11
   3d728:	tbnz	x8, #63, 3d738 <mpfr_sqr@@Base+0x2f0>
   3d72c:	sub	x9, x9, #0x1
   3d730:	extr	x8, x8, x11, #63
   3d734:	lsl	x11, x11, #1
   3d738:	mov	w12, #0x1                   	// #1
   3d73c:	str	x8, [x10]
   3d740:	str	w12, [x19, #8]
   3d744:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d748:	ldr	x1, [x0, #2624]
   3d74c:	add	x0, x0, #0xa40
   3d750:	blr	x1
   3d754:	mrs	x12, tpidr_el0
   3d758:	ldr	x13, [x12, x0]
   3d75c:	cmp	x9, x13
   3d760:	b.gt	3dbac <mpfr_sqr@@Base+0x764>
   3d764:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d768:	ldr	x1, [x0, #2592]
   3d76c:	add	x0, x0, #0xa20
   3d770:	blr	x1
   3d774:	ldr	x13, [x12, x0]
   3d778:	cmp	x9, x13
   3d77c:	b.lt	3dcec <mpfr_sqr@@Base+0x8a4>  // b.tstop
   3d780:	mov	w8, wzr
   3d784:	cmp	w20, #0x5
   3d788:	str	x9, [x19, #16]
   3d78c:	b.eq	3db88 <mpfr_sqr@@Base+0x740>  // b.none
   3d790:	cbz	x11, 3db88 <mpfr_sqr@@Base+0x740>
   3d794:	cmp	w20, #0x3
   3d798:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d79c:	cmp	w20, #0x1
   3d7a0:	b.eq	3d7ac <mpfr_sqr@@Base+0x364>  // b.none
   3d7a4:	cbnz	w20, 3db2c <mpfr_sqr@@Base+0x6e4>
   3d7a8:	tbnz	x11, #63, 3db1c <mpfr_sqr@@Base+0x6d4>
   3d7ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d7b0:	ldr	x1, [x0, #2656]
   3d7b4:	add	x0, x0, #0xa60
   3d7b8:	blr	x1
   3d7bc:	ldr	w8, [x12, x0]
   3d7c0:	orr	w8, w8, #0x8
   3d7c4:	str	w8, [x12, x0]
   3d7c8:	mov	w8, #0xffffffff            	// #-1
   3d7cc:	b	3db88 <mpfr_sqr@@Base+0x740>
   3d7d0:	sub	x9, x21, #0x81
   3d7d4:	cmp	x9, #0x3e
   3d7d8:	b.hi	3d9bc <mpfr_sqr@@Base+0x574>  // b.pmore
   3d7dc:	sub	x9, x8, #0x81
   3d7e0:	cmp	x9, #0x3f
   3d7e4:	b.hi	3d9bc <mpfr_sqr@@Base+0x574>  // b.pmore
   3d7e8:	ldr	x1, [x22, #24]
   3d7ec:	neg	x8, x21
   3d7f0:	mov	w10, #0x1                   	// #1
   3d7f4:	lsl	x23, x10, x8
   3d7f8:	ldp	x11, x9, [x1, #8]
   3d7fc:	ldr	x8, [x1]
   3d800:	umulh	x8, x9, x8
   3d804:	umulh	x12, x9, x11
   3d808:	mul	x13, x11, x9
   3d80c:	adds	x8, x8, x13
   3d810:	ldr	x22, [x19, #24]
   3d814:	umulh	x14, x11, x11
   3d818:	cinc	x13, x12, cs  // cs = hs, nlast
   3d81c:	adds	x12, x14, x8, lsl #1
   3d820:	sub	x24, x23, #0x1
   3d824:	mul	x10, x9, x9
   3d828:	extr	x8, x13, x8, #63
   3d82c:	add	x15, x12, #0x4
   3d830:	add	x11, x8, x10
   3d834:	and	x15, x15, x24, lsr #2
   3d838:	cinc	x8, x11, cs  // cs = hs, nlast
   3d83c:	cmp	x15, #0x5
   3d840:	b.cc	3dd40 <mpfr_sqr@@Base+0x8f8>  // b.lo, b.ul, b.last
   3d844:	cmp	x12, x14
   3d848:	cset	w15, cc  // cc = lo, ul, last
   3d84c:	cmp	x8, #0x0
   3d850:	lsr	x13, x13, #63
   3d854:	cset	w16, eq  // eq = none
   3d858:	cmp	x11, x10
   3d85c:	and	w10, w15, w16
   3d860:	cinc	x11, x13, cc  // cc = lo, ul, last
   3d864:	add	x10, x11, x10
   3d868:	umulh	x9, x9, x9
   3d86c:	mov	w14, #0x1                   	// #1
   3d870:	add	x10, x10, x9
   3d874:	mov	w15, #0x1                   	// #1
   3d878:	lsl	x9, x26, #1
   3d87c:	tbnz	x10, #63, 3d894 <mpfr_sqr@@Base+0x44c>
   3d880:	sub	x9, x9, #0x1
   3d884:	extr	x10, x10, x8, #63
   3d888:	extr	x8, x8, x12, #63
   3d88c:	extr	x12, x12, x15, #63
   3d890:	lsl	x15, x15, #1
   3d894:	neg	x17, x23
   3d898:	mov	w13, #0x1                   	// #1
   3d89c:	and	x16, x12, x17
   3d8a0:	stp	x8, x10, [x22, #8]
   3d8a4:	str	x16, [x22]
   3d8a8:	str	w13, [x19, #8]
   3d8ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d8b0:	ldr	x1, [x0, #2624]
   3d8b4:	add	x0, x0, #0xa40
   3d8b8:	blr	x1
   3d8bc:	mrs	x11, tpidr_el0
   3d8c0:	ldr	x18, [x11, x0]
   3d8c4:	cmp	x9, x18
   3d8c8:	b.gt	3dbac <mpfr_sqr@@Base+0x764>
   3d8cc:	mov	w18, #0xbf                  	// #191
   3d8d0:	sub	x18, x18, x21
   3d8d4:	lsl	x13, x13, x18
   3d8d8:	and	x0, x12, x24
   3d8dc:	and	x13, x12, x13
   3d8e0:	eor	x12, x0, x13
   3d8e4:	orr	x14, x15, x14
   3d8e8:	orr	x12, x14, x12
   3d8ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d8f0:	ldr	x1, [x0, #2592]
   3d8f4:	add	x0, x0, #0xa20
   3d8f8:	blr	x1
   3d8fc:	ldr	x14, [x11, x0]
   3d900:	cmp	x9, x14
   3d904:	b.lt	3dd60 <mpfr_sqr@@Base+0x918>  // b.tstop
   3d908:	mov	w8, wzr
   3d90c:	cmp	w20, #0x5
   3d910:	str	x9, [x19, #16]
   3d914:	b.eq	3db88 <mpfr_sqr@@Base+0x740>  // b.none
   3d918:	orr	x10, x12, x13
   3d91c:	cbz	x10, 3db88 <mpfr_sqr@@Base+0x740>
   3d920:	cmp	w20, #0x3
   3d924:	b.eq	3dafc <mpfr_sqr@@Base+0x6b4>  // b.none
   3d928:	cmp	w20, #0x1
   3d92c:	b.eq	3dafc <mpfr_sqr@@Base+0x6b4>  // b.none
   3d930:	cbnz	w20, 3d948 <mpfr_sqr@@Base+0x500>
   3d934:	cbz	x13, 3dafc <mpfr_sqr@@Base+0x6b4>
   3d938:	cbnz	x12, 3d948 <mpfr_sqr@@Base+0x500>
   3d93c:	ldr	x8, [x22]
   3d940:	tst	x8, x23
   3d944:	b.eq	3dafc <mpfr_sqr@@Base+0x6b4>  // b.none
   3d948:	ldp	x8, x10, [x22]
   3d94c:	ldr	x12, [x22, #16]
   3d950:	adds	x8, x8, x23
   3d954:	cinc	x10, x10, eq  // eq = none
   3d958:	stp	x8, x10, [x22]
   3d95c:	orr	x8, x10, x8
   3d960:	cmp	x8, #0x0
   3d964:	cinc	x8, x12, eq  // eq = none
   3d968:	str	x8, [x22, #16]
   3d96c:	cbnz	x8, 3d99c <mpfr_sqr@@Base+0x554>
   3d970:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3d974:	str	x8, [x22, #16]
   3d978:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d97c:	ldr	x1, [x0, #2624]
   3d980:	add	x0, x0, #0xa40
   3d984:	blr	x1
   3d988:	ldr	x8, [x11, x0]
   3d98c:	cmp	x9, x8
   3d990:	b.ge	3dbac <mpfr_sqr@@Base+0x764>  // b.tcont
   3d994:	add	x8, x9, #0x1
   3d998:	str	x8, [x19, #16]
   3d99c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3d9a0:	ldr	x1, [x0, #2656]
   3d9a4:	add	x0, x0, #0xa60
   3d9a8:	blr	x1
   3d9ac:	ldr	w8, [x11, x0]
   3d9b0:	orr	w8, w8, #0x8
   3d9b4:	str	w8, [x11, x0]
   3d9b8:	b	3db84 <mpfr_sqr@@Base+0x73c>
   3d9bc:	lsl	x23, x8, #1
   3d9c0:	mov	x9, #0x7fffffffffffff00    	// #9223372036854775552
   3d9c4:	cmp	x23, x9
   3d9c8:	b.cs	3dda8 <mpfr_sqr@@Base+0x960>  // b.hs, b.nlast
   3d9cc:	sub	x9, x8, #0x1
   3d9d0:	add	x10, x8, #0x3e
   3d9d4:	sub	x11, x23, #0x1
   3d9d8:	cmp	x9, #0x0
   3d9dc:	add	x12, x23, #0x3e
   3d9e0:	csel	x10, x10, x9, lt  // lt = tstop
   3d9e4:	cmp	x11, #0x0
   3d9e8:	csel	x9, x12, x11, lt  // lt = tstop
   3d9ec:	cmp	x8, #0x501
   3d9f0:	b.ge	3ddc8 <mpfr_sqr@@Base+0x980>  // b.tcont
   3d9f4:	asr	x8, x10, #6
   3d9f8:	add	x2, x8, #0x1
   3d9fc:	asr	x9, x9, #6
   3da00:	lsl	x1, x2, #4
   3da04:	add	x24, x9, #0x1
   3da08:	cmp	x1, #0x4, lsl #12
   3da0c:	lsl	x28, x2, #1
   3da10:	stur	xzr, [x29, #-48]
   3da14:	b.hi	3dde0 <mpfr_sqr@@Base+0x998>  // b.pmore
   3da18:	add	x9, x1, #0xf
   3da1c:	mov	x8, sp
   3da20:	and	x9, x9, #0xfffffffffffffff0
   3da24:	sub	x25, x8, x9
   3da28:	mov	sp, x25
   3da2c:	ldr	x1, [x22, #24]
   3da30:	mov	x0, x25
   3da34:	bl	c410 <__gmpn_sqr@plt>
   3da38:	add	x8, x25, x28, lsl #3
   3da3c:	ldur	x27, [x8, #-8]
   3da40:	sub	x8, x28, x24
   3da44:	add	x1, x25, x8, lsl #3
   3da48:	tbz	x27, #63, 3ddf8 <mpfr_sqr@@Base+0x9b0>
   3da4c:	ldr	x0, [x19, #24]
   3da50:	sub	x6, x29, #0x34
   3da54:	mov	x2, x23
   3da58:	mov	w3, wzr
   3da5c:	mov	x4, x21
   3da60:	mov	w5, w20
   3da64:	bl	ca70 <mpfr_round_raw@plt>
   3da68:	mov	w21, w0
   3da6c:	cbnz	w0, 3de14 <mpfr_sqr@@Base+0x9cc>
   3da70:	ldur	x0, [x29, #-48]
   3da74:	lsl	x23, x26, #1
   3da78:	lsr	x24, x27, #63
   3da7c:	cbnz	x0, 3de3c <mpfr_sqr@@Base+0x9f4>
   3da80:	add	x8, x23, x24
   3da84:	add	x8, x8, w21, sxtw
   3da88:	sub	x8, x8, #0x1
   3da8c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3da90:	ldr	x1, [x0, #2624]
   3da94:	add	x0, x0, #0xa40
   3da98:	blr	x1
   3da9c:	mrs	x9, tpidr_el0
   3daa0:	ldr	x10, [x9, x0]
   3daa4:	cmp	x8, x10
   3daa8:	b.gt	3dbac <mpfr_sqr@@Base+0x764>
   3daac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3dab0:	ldr	x1, [x0, #2592]
   3dab4:	add	x0, x0, #0xa20
   3dab8:	blr	x1
   3dabc:	ldr	x10, [x9, x0]
   3dac0:	cmp	x8, x10
   3dac4:	b.lt	3de68 <mpfr_sqr@@Base+0xa20>  // b.tstop
   3dac8:	str	x8, [x19, #16]
   3dacc:	mov	w8, #0x1                   	// #1
   3dad0:	str	w8, [x19, #8]
   3dad4:	ldur	w8, [x29, #-52]
   3dad8:	cbz	w8, 3db88 <mpfr_sqr@@Base+0x740>
   3dadc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3dae0:	ldr	x1, [x0, #2656]
   3dae4:	add	x0, x0, #0xa60
   3dae8:	blr	x1
   3daec:	ldr	w10, [x9, x0]
   3daf0:	orr	w10, w10, #0x8
   3daf4:	str	w10, [x9, x0]
   3daf8:	b	3db88 <mpfr_sqr@@Base+0x740>
   3dafc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3db00:	ldr	x1, [x0, #2656]
   3db04:	add	x0, x0, #0xa60
   3db08:	blr	x1
   3db0c:	ldr	w8, [x11, x0]
   3db10:	orr	w8, w8, #0x8
   3db14:	str	w8, [x11, x0]
   3db18:	b	3d7c8 <mpfr_sqr@@Base+0x380>
   3db1c:	and	x8, x11, #0x7fffffffffffffff
   3db20:	cbnz	x8, 3db2c <mpfr_sqr@@Base+0x6e4>
   3db24:	ldrb	w8, [x10]
   3db28:	tbz	w8, #0, 3d7ac <mpfr_sqr@@Base+0x364>
   3db2c:	ldr	x8, [x10]
   3db30:	adds	x8, x8, #0x1
   3db34:	str	x8, [x10]
   3db38:	b.cc	3db68 <mpfr_sqr@@Base+0x720>  // b.lo, b.ul, b.last
   3db3c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3db40:	str	x8, [x10]
   3db44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3db48:	ldr	x1, [x0, #2624]
   3db4c:	add	x0, x0, #0xa40
   3db50:	blr	x1
   3db54:	ldr	x8, [x12, x0]
   3db58:	cmp	x9, x8
   3db5c:	b.ge	3dbac <mpfr_sqr@@Base+0x764>  // b.tcont
   3db60:	add	x8, x9, #0x1
   3db64:	str	x8, [x19, #16]
   3db68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3db6c:	ldr	x1, [x0, #2656]
   3db70:	add	x0, x0, #0xa60
   3db74:	blr	x1
   3db78:	ldr	w8, [x12, x0]
   3db7c:	orr	w8, w8, #0x8
   3db80:	str	w8, [x12, x0]
   3db84:	mov	w8, #0x1                   	// #1
   3db88:	mov	w0, w8
   3db8c:	mov	sp, x29
   3db90:	ldp	x20, x19, [sp, #80]
   3db94:	ldp	x22, x21, [sp, #64]
   3db98:	ldp	x24, x23, [sp, #48]
   3db9c:	ldp	x26, x25, [sp, #32]
   3dba0:	ldp	x28, x27, [sp, #16]
   3dba4:	ldp	x29, x30, [sp], #96
   3dba8:	ret
   3dbac:	mov	w2, #0x1                   	// #1
   3dbb0:	mov	x0, x19
   3dbb4:	mov	w1, w20
   3dbb8:	bl	bff0 <mpfr_overflow@plt>
   3dbbc:	b	3dea8 <mpfr_sqr@@Base+0xa60>
   3dbc0:	cmp	x26, x8
   3dbc4:	b.ne	3dbf0 <mpfr_sqr@@Base+0x7a8>  // b.any
   3dbc8:	str	x8, [x19, #16]
   3dbcc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3dbd0:	ldr	x1, [x0, #2656]
   3dbd4:	add	x0, x0, #0xa60
   3dbd8:	blr	x1
   3dbdc:	mrs	x9, tpidr_el0
   3dbe0:	ldr	w10, [x9, x0]
   3dbe4:	mov	w8, wzr
   3dbe8:	orr	w10, w10, #0x4
   3dbec:	b	3daf4 <mpfr_sqr@@Base+0x6ac>
   3dbf0:	mov	w9, #0x1                   	// #1
   3dbf4:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   3dbf8:	str	w9, [x19, #8]
   3dbfc:	cmp	x26, x10
   3dc00:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3dc04:	csel	x9, x26, x9, eq  // eq = none
   3dc08:	mov	w8, wzr
   3dc0c:	str	x9, [x19, #16]
   3dc10:	b	3db88 <mpfr_sqr@@Base+0x740>
   3dc14:	cmp	x8, x16
   3dc18:	sub	x15, x15, #0x1
   3dc1c:	b.ne	3dcc4 <mpfr_sqr@@Base+0x87c>  // b.any
   3dc20:	cmp	x9, x15
   3dc24:	b.ne	3dcc4 <mpfr_sqr@@Base+0x87c>  // b.any
   3dc28:	cbnz	w20, 3dc30 <mpfr_sqr@@Base+0x7e8>
   3dc2c:	cbnz	x13, 3d540 <mpfr_sqr@@Base+0xf8>
   3dc30:	cbz	w20, 3dcc8 <mpfr_sqr@@Base+0x880>
   3dc34:	cmp	w20, #0x4
   3dc38:	b.eq	3dc44 <mpfr_sqr@@Base+0x7fc>  // b.none
   3dc3c:	cmp	w20, #0x2
   3dc40:	b.ne	3de98 <mpfr_sqr@@Base+0xa50>  // b.any
   3dc44:	orr	x8, x14, x13
   3dc48:	cbnz	x8, 3d540 <mpfr_sqr@@Base+0xf8>
   3dc4c:	b	3de98 <mpfr_sqr@@Base+0xa50>
   3dc50:	mul	x11, x12, x11
   3dc54:	umulh	x16, x12, x12
   3dc58:	mul	x13, x12, x12
   3dc5c:	adds	x12, x16, x11
   3dc60:	cset	w16, cs  // cs = hs, nlast
   3dc64:	adds	x15, x15, x16
   3dc68:	cinc	x8, x8, cs  // cs = hs, nlast
   3dc6c:	adds	x16, x12, x11
   3dc70:	cset	w11, cs  // cs = hs, nlast
   3dc74:	adds	x15, x15, x11
   3dc78:	cinc	x8, x8, cs  // cs = hs, nlast
   3dc7c:	b	3d5f4 <mpfr_sqr@@Base+0x1ac>
   3dc80:	cmp	x17, x18
   3dc84:	sub	x15, x15, #0x1
   3dc88:	b.ne	3dd18 <mpfr_sqr@@Base+0x8d0>  // b.any
   3dc8c:	cmn	x8, #0x1
   3dc90:	b.ne	3dd18 <mpfr_sqr@@Base+0x8d0>  // b.any
   3dc94:	cmp	x11, x15
   3dc98:	b.ne	3dd18 <mpfr_sqr@@Base+0x8d0>  // b.any
   3dc9c:	cbnz	w20, 3dca4 <mpfr_sqr@@Base+0x85c>
   3dca0:	cbnz	x14, 3d67c <mpfr_sqr@@Base+0x234>
   3dca4:	cbz	w20, 3dd1c <mpfr_sqr@@Base+0x8d4>
   3dca8:	cmp	w20, #0x4
   3dcac:	b.eq	3dcb8 <mpfr_sqr@@Base+0x870>  // b.none
   3dcb0:	cmp	w20, #0x2
   3dcb4:	b.ne	3de98 <mpfr_sqr@@Base+0xa50>  // b.any
   3dcb8:	orr	x8, x13, x14
   3dcbc:	cbnz	x8, 3d67c <mpfr_sqr@@Base+0x234>
   3dcc0:	b	3de98 <mpfr_sqr@@Base+0xa50>
   3dcc4:	cbnz	w20, 3de98 <mpfr_sqr@@Base+0xa50>
   3dcc8:	cmp	x9, x15
   3dccc:	b.lt	3de94 <mpfr_sqr@@Base+0xa4c>  // b.tstop
   3dcd0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3dcd4:	cmp	x8, x9
   3dcd8:	mov	w20, wzr
   3dcdc:	b.ne	3de98 <mpfr_sqr@@Base+0xa50>  // b.any
   3dce0:	orr	x8, x14, x13
   3dce4:	cbz	x8, 3de94 <mpfr_sqr@@Base+0xa4c>
   3dce8:	b	3de98 <mpfr_sqr@@Base+0xa50>
   3dcec:	cmn	x8, #0x1
   3dcf0:	sub	x13, x13, #0x1
   3dcf4:	b.ne	3de44 <mpfr_sqr@@Base+0x9fc>  // b.any
   3dcf8:	cmp	x9, x13
   3dcfc:	b.ne	3de44 <mpfr_sqr@@Base+0x9fc>  // b.any
   3dd00:	cbz	w20, 3de48 <mpfr_sqr@@Base+0xa00>
   3dd04:	cmp	w20, #0x2
   3dd08:	b.eq	3d780 <mpfr_sqr@@Base+0x338>  // b.none
   3dd0c:	cmp	w20, #0x4
   3dd10:	b.eq	3d780 <mpfr_sqr@@Base+0x338>  // b.none
   3dd14:	b	3de98 <mpfr_sqr@@Base+0xa50>
   3dd18:	cbnz	w20, 3de98 <mpfr_sqr@@Base+0xa50>
   3dd1c:	cmp	x11, x15
   3dd20:	b.lt	3de94 <mpfr_sqr@@Base+0xa4c>  // b.tstop
   3dd24:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3dd28:	cmp	x8, x9
   3dd2c:	b.ne	3ded0 <mpfr_sqr@@Base+0xa88>  // b.any
   3dd30:	orr	x8, x13, x14
   3dd34:	orr	x8, x8, x17
   3dd38:	cbnz	x8, 3ded0 <mpfr_sqr@@Base+0xa88>
   3dd3c:	b	3de94 <mpfr_sqr@@Base+0xa4c>
   3dd40:	sub	x0, x29, #0x30
   3dd44:	mov	w2, #0x3                   	// #3
   3dd48:	bl	c410 <__gmpn_sqr@plt>
   3dd4c:	ldp	x11, x9, [x29, #-48]
   3dd50:	ldp	x8, x10, [x29, #-16]
   3dd54:	ldp	x15, x12, [x29, #-32]
   3dd58:	orr	x14, x11, x9
   3dd5c:	b	3d878 <mpfr_sqr@@Base+0x430>
   3dd60:	cmp	x16, x17
   3dd64:	sub	x14, x14, #0x1
   3dd68:	b.ne	3de88 <mpfr_sqr@@Base+0xa40>  // b.any
   3dd6c:	and	x15, x8, x10
   3dd70:	cmn	x15, #0x1
   3dd74:	b.ne	3de88 <mpfr_sqr@@Base+0xa40>  // b.any
   3dd78:	cmp	x9, x14
   3dd7c:	b.ne	3de88 <mpfr_sqr@@Base+0xa40>  // b.any
   3dd80:	cbnz	w20, 3dd88 <mpfr_sqr@@Base+0x940>
   3dd84:	cbnz	x13, 3d908 <mpfr_sqr@@Base+0x4c0>
   3dd88:	cbz	w20, 3de8c <mpfr_sqr@@Base+0xa44>
   3dd8c:	cmp	w20, #0x4
   3dd90:	b.eq	3dd9c <mpfr_sqr@@Base+0x954>  // b.none
   3dd94:	cmp	w20, #0x2
   3dd98:	b.ne	3de98 <mpfr_sqr@@Base+0xa50>  // b.any
   3dd9c:	orr	x8, x12, x13
   3dda0:	cbnz	x8, 3d908 <mpfr_sqr@@Base+0x4c0>
   3dda4:	b	3de98 <mpfr_sqr@@Base+0xa50>
   3dda8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3ddac:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3ddb0:	add	x0, x0, #0x5f6
   3ddb4:	add	x2, x2, #0x5fc
   3ddb8:	mov	w1, #0x22a                 	// #554
   3ddbc:	bl	cb90 <mpfr_assert_fail@plt>
   3ddc0:	ldr	x8, [x22]
   3ddc4:	b	3d9cc <mpfr_sqr@@Base+0x584>
   3ddc8:	mov	x0, x19
   3ddcc:	mov	x1, x22
   3ddd0:	mov	x2, x22
   3ddd4:	mov	w3, w20
   3ddd8:	bl	be00 <mpfr_mul@plt>
   3dddc:	b	3dea8 <mpfr_sqr@@Base+0xa60>
   3dde0:	sub	x0, x29, #0x30
   3dde4:	mov	x25, x2
   3dde8:	bl	be70 <mpfr_tmp_allocate@plt>
   3ddec:	mov	x2, x25
   3ddf0:	mov	x25, x0
   3ddf4:	b	3da2c <mpfr_sqr@@Base+0x5e4>
   3ddf8:	mov	w3, #0x1                   	// #1
   3ddfc:	mov	x0, x1
   3de00:	mov	x2, x24
   3de04:	mov	x25, x1
   3de08:	bl	bd70 <__gmpn_lshift@plt>
   3de0c:	mov	x1, x25
   3de10:	b	3da4c <mpfr_sqr@@Base+0x604>
   3de14:	ldr	x8, [x19]
   3de18:	ldr	x9, [x19, #24]
   3de1c:	sub	x10, x8, #0x1
   3de20:	add	x8, x8, #0x3e
   3de24:	cmp	x10, #0x0
   3de28:	csel	x8, x8, x10, lt  // lt = tstop
   3de2c:	asr	x8, x8, #6
   3de30:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3de34:	str	x10, [x9, x8, lsl #3]
   3de38:	b	3da70 <mpfr_sqr@@Base+0x628>
   3de3c:	bl	c460 <mpfr_tmp_free@plt>
   3de40:	b	3da80 <mpfr_sqr@@Base+0x638>
   3de44:	cbnz	w20, 3de98 <mpfr_sqr@@Base+0xa50>
   3de48:	cmp	x9, x13
   3de4c:	b.lt	3de94 <mpfr_sqr@@Base+0xa4c>  // b.tstop
   3de50:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3de54:	cmp	x8, x9
   3de58:	mov	w20, wzr
   3de5c:	b.ne	3de98 <mpfr_sqr@@Base+0xa50>  // b.any
   3de60:	cbz	x11, 3de94 <mpfr_sqr@@Base+0xa4c>
   3de64:	b	3de98 <mpfr_sqr@@Base+0xa50>
   3de68:	cbnz	w20, 3de98 <mpfr_sqr@@Base+0xa50>
   3de6c:	orr	x8, x24, x23
   3de70:	cmp	x8, x10
   3de74:	b.lt	3de94 <mpfr_sqr@@Base+0xa4c>  // b.tstop
   3de78:	mov	x0, x22
   3de7c:	bl	bfb0 <mpfr_powerof2_raw@plt>
   3de80:	cbnz	w0, 3de94 <mpfr_sqr@@Base+0xa4c>
   3de84:	b	3ded0 <mpfr_sqr@@Base+0xa88>
   3de88:	cbnz	w20, 3de98 <mpfr_sqr@@Base+0xa50>
   3de8c:	cmp	x9, x14
   3de90:	b.ge	3deb0 <mpfr_sqr@@Base+0xa68>  // b.tcont
   3de94:	mov	w20, #0x1                   	// #1
   3de98:	mov	w2, #0x1                   	// #1
   3de9c:	mov	x0, x19
   3dea0:	mov	w1, w20
   3dea4:	bl	c420 <mpfr_underflow@plt>
   3dea8:	mov	w8, w0
   3deac:	b	3db88 <mpfr_sqr@@Base+0x740>
   3deb0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3deb4:	cmp	x10, x9
   3deb8:	mov	w20, wzr
   3debc:	b.ne	3de98 <mpfr_sqr@@Base+0xa50>  // b.any
   3dec0:	cbnz	x8, 3de98 <mpfr_sqr@@Base+0xa50>
   3dec4:	orr	x8, x12, x13
   3dec8:	orr	x8, x8, x16
   3decc:	cbz	x8, 3de94 <mpfr_sqr@@Base+0xa4c>
   3ded0:	mov	w20, wzr
   3ded4:	b	3de98 <mpfr_sqr@@Base+0xa50>

000000000003ded8 <__gmpfr_int_ceil_log2@@Base>:
   3ded8:	stp	x29, x30, [sp, #-32]!
   3dedc:	str	x19, [sp, #16]
   3dee0:	subs	x19, x0, #0x1
   3dee4:	mov	x29, sp
   3dee8:	b.eq	3df08 <__gmpfr_int_ceil_log2@@Base+0x30>  // b.none
   3deec:	cbz	x0, 3df10 <__gmpfr_int_ceil_log2@@Base+0x38>
   3def0:	clz	x8, x19
   3def4:	mov	w9, #0x40                  	// #64
   3def8:	sub	w0, w9, w8
   3defc:	ldr	x19, [sp, #16]
   3df00:	ldp	x29, x30, [sp], #32
   3df04:	ret
   3df08:	mov	w0, wzr
   3df0c:	b	3defc <__gmpfr_int_ceil_log2@@Base+0x24>
   3df10:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3df14:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3df18:	add	x0, x0, #0x648
   3df1c:	add	x2, x2, #0x658
   3df20:	mov	w1, #0x24                  	// #36
   3df24:	bl	cb90 <mpfr_assert_fail@plt>
   3df28:	b	3def0 <__gmpfr_int_ceil_log2@@Base+0x18>

000000000003df2c <__gmpfr_isqrt@@Base>:
   3df2c:	mov	w8, #0x1                   	// #1
   3df30:	cmp	x0, #0x2
   3df34:	b.cc	3df4c <__gmpfr_isqrt@@Base+0x20>  // b.lo, b.ul, b.last
   3df38:	mov	x9, x0
   3df3c:	cmp	x9, #0x7
   3df40:	lsr	x9, x9, #2
   3df44:	lsl	x8, x8, #1
   3df48:	b.hi	3df3c <__gmpfr_isqrt@@Base+0x10>  // b.pmore
   3df4c:	udiv	x9, x0, x8
   3df50:	add	x8, x9, x8
   3df54:	lsr	x8, x8, #1
   3df58:	mul	x9, x8, x8
   3df5c:	cmp	x9, x0
   3df60:	b.hi	3df4c <__gmpfr_isqrt@@Base+0x20>  // b.pmore
   3df64:	add	x10, x8, #0x2
   3df68:	mul	x10, x10, x8
   3df6c:	cmp	x9, x10
   3df70:	b.hi	3df7c <__gmpfr_isqrt@@Base+0x50>  // b.pmore
   3df74:	cmp	x10, x0
   3df78:	b.cc	3df4c <__gmpfr_isqrt@@Base+0x20>  // b.lo, b.ul, b.last
   3df7c:	mov	x0, x8
   3df80:	ret

000000000003df84 <__gmpfr_cuberoot@@Base>:
   3df84:	mov	w8, #0x1                   	// #1
   3df88:	cmp	x0, #0x4
   3df8c:	b.cc	3dff4 <__gmpfr_cuberoot@@Base+0x70>  // b.lo, b.ul, b.last
   3df90:	mov	x10, x0
   3df94:	mov	x9, x8
   3df98:	cmp	x10, #0x1f
   3df9c:	lsr	x10, x10, #3
   3dfa0:	lsl	x8, x8, #1
   3dfa4:	b.hi	3df94 <__gmpfr_cuberoot@@Base+0x10>  // b.pmore
   3dfa8:	cmp	x0, #0x100
   3dfac:	b.cc	3dff4 <__gmpfr_cuberoot@@Base+0x70>  // b.lo, b.ul, b.last
   3dfb0:	mul	x8, x8, x8
   3dfb4:	udiv	x8, x0, x8
   3dfb8:	add	x8, x8, x9, lsl #2
   3dfbc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3dfc0:	movk	x9, #0xaaab
   3dfc4:	umulh	x8, x8, x9
   3dfc8:	lsr	x8, x8, #1
   3dfcc:	mul	x10, x8, x8
   3dfd0:	udiv	x10, x0, x10
   3dfd4:	add	x8, x10, x8, lsl #1
   3dfd8:	umulh	x8, x8, x9
   3dfdc:	lsr	x8, x8, #1
   3dfe0:	mul	x10, x8, x8
   3dfe4:	udiv	x10, x0, x10
   3dfe8:	add	x8, x10, x8, lsl #1
   3dfec:	umulh	x8, x8, x9
   3dff0:	lsr	x8, x8, #1
   3dff4:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3dff8:	movk	x9, #0xaaab
   3dffc:	mul	x10, x8, x8
   3e000:	udiv	x10, x0, x10
   3e004:	add	x8, x10, x8, lsl #1
   3e008:	umulh	x8, x8, x9
   3e00c:	lsr	x8, x8, #1
   3e010:	mul	x10, x8, x8
   3e014:	mul	x10, x10, x8
   3e018:	cmp	x10, x0
   3e01c:	b.hi	3dffc <__gmpfr_cuberoot@@Base+0x78>  // b.pmore
   3e020:	add	x11, x8, #0x1
   3e024:	mul	x12, x11, x11
   3e028:	mul	x11, x12, x11
   3e02c:	cmp	x10, x11
   3e030:	b.hi	3e03c <__gmpfr_cuberoot@@Base+0xb8>  // b.pmore
   3e034:	cmp	x11, x0
   3e038:	b.ls	3dffc <__gmpfr_cuberoot@@Base+0x78>  // b.plast
   3e03c:	mov	x0, x8
   3e040:	ret

000000000003e044 <mpfr_strtofr@@Base>:
   3e044:	sub	sp, sp, #0xb0
   3e048:	stp	x24, x23, [sp, #128]
   3e04c:	stp	x22, x21, [sp, #144]
   3e050:	stp	x20, x19, [sp, #160]
   3e054:	mov	w22, w4
   3e058:	mov	w24, w3
   3e05c:	mov	x19, x2
   3e060:	mov	x20, x1
   3e064:	mov	x21, x0
   3e068:	stp	x29, x30, [sp, #80]
   3e06c:	stp	x28, x27, [sp, #96]
   3e070:	stp	x26, x25, [sp, #112]
   3e074:	add	x29, sp, #0x50
   3e078:	cbz	w3, 3e088 <mpfr_strtofr@@Base+0x44>
   3e07c:	sub	w8, w24, #0x2
   3e080:	cmp	w8, #0x3d
   3e084:	b.cs	3e6dc <mpfr_strtofr@@Base+0x698>  // b.hs, b.nlast
   3e088:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3e08c:	mov	w9, #0x1                   	// #1
   3e090:	str	x8, [x21, #16]
   3e094:	str	w9, [x21, #8]
   3e098:	bl	bf50 <localeconv@plt>
   3e09c:	ldr	x8, [x0]
   3e0a0:	ldrb	w8, [x8, #1]
   3e0a4:	cbz	w8, 3e0b0 <mpfr_strtofr@@Base+0x6c>
   3e0a8:	mov	w28, #0x2e                  	// #46
   3e0ac:	b	3e0bc <mpfr_strtofr@@Base+0x78>
   3e0b0:	bl	bf50 <localeconv@plt>
   3e0b4:	ldr	x8, [x0]
   3e0b8:	ldrb	w28, [x8]
   3e0bc:	str	xzr, [sp, #24]
   3e0c0:	bl	c680 <__ctype_b_loc@plt>
   3e0c4:	ldr	x9, [x0]
   3e0c8:	mov	x23, x0
   3e0cc:	mov	x27, x20
   3e0d0:	ldrb	w8, [x27], #1
   3e0d4:	ldrh	w10, [x9, x8, lsl #1]
   3e0d8:	tbnz	w10, #13, 3e0d0 <mpfr_strtofr@@Base+0x8c>
   3e0dc:	cmp	w8, #0x2d
   3e0e0:	cset	w9, eq  // eq = none
   3e0e4:	str	w9, [sp, #16]
   3e0e8:	mov	x9, x27
   3e0ec:	ldrb	w10, [x9, #-1]!
   3e0f0:	cmp	w10, #0x2b
   3e0f4:	b.eq	3e104 <mpfr_strtofr@@Base+0xc0>  // b.none
   3e0f8:	cmp	w10, #0x2d
   3e0fc:	b.eq	3e104 <mpfr_strtofr@@Base+0xc0>  // b.none
   3e100:	mov	x27, x9
   3e104:	adrp	x11, 5e000 <mpfr_bases@@Base+0x4f8>
   3e108:	mov	x10, xzr
   3e10c:	mov	w9, #0x5                   	// #5
   3e110:	add	x11, x11, #0x68f
   3e114:	cmp	x10, #0x5
   3e118:	b.eq	3e278 <mpfr_strtofr@@Base+0x234>  // b.none
   3e11c:	ldrb	w12, [x27, x10]
   3e120:	ldrb	w13, [x11, x10]
   3e124:	add	x10, x10, #0x1
   3e128:	sub	w14, w12, #0x41
   3e12c:	add	w15, w12, #0x20
   3e130:	cmp	w14, #0x1a
   3e134:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   3e138:	cmp	w13, w12, uxtb
   3e13c:	b.eq	3e114 <mpfr_strtofr@@Base+0xd0>  // b.none
   3e140:	cmp	w24, #0x10
   3e144:	b.gt	3e184 <mpfr_strtofr@@Base+0x140>
   3e148:	adrp	x11, 5e000 <mpfr_bases@@Base+0x4f8>
   3e14c:	mov	x10, xzr
   3e150:	mov	w9, #0x3                   	// #3
   3e154:	add	x11, x11, #0x695
   3e158:	cmp	x10, #0x3
   3e15c:	b.eq	3e278 <mpfr_strtofr@@Base+0x234>  // b.none
   3e160:	ldrb	w12, [x27, x10]
   3e164:	ldrb	w13, [x11, x10]
   3e168:	add	x10, x10, #0x1
   3e16c:	sub	w14, w12, #0x41
   3e170:	add	w15, w12, #0x20
   3e174:	cmp	w14, #0x1a
   3e178:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   3e17c:	cmp	w13, w12, uxtb
   3e180:	b.eq	3e158 <mpfr_strtofr@@Base+0x114>  // b.none
   3e184:	adrp	x11, 5e000 <mpfr_bases@@Base+0x4f8>
   3e188:	mov	x10, xzr
   3e18c:	mov	w9, #0x5                   	// #5
   3e190:	add	x11, x11, #0x699
   3e194:	cmp	x10, #0x5
   3e198:	b.eq	3e29c <mpfr_strtofr@@Base+0x258>  // b.none
   3e19c:	ldrb	w12, [x27, x10]
   3e1a0:	ldrb	w13, [x11, x10]
   3e1a4:	add	x10, x10, #0x1
   3e1a8:	sub	w14, w12, #0x41
   3e1ac:	add	w15, w12, #0x20
   3e1b0:	cmp	w14, #0x1a
   3e1b4:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   3e1b8:	cmp	w13, w12, uxtb
   3e1bc:	b.eq	3e194 <mpfr_strtofr@@Base+0x150>  // b.none
   3e1c0:	cmp	w24, #0x10
   3e1c4:	b.gt	3e240 <mpfr_strtofr@@Base+0x1fc>
   3e1c8:	adrp	x11, 5e000 <mpfr_bases@@Base+0x4f8>
   3e1cc:	mov	x10, xzr
   3e1d0:	mov	w9, #0x8                   	// #8
   3e1d4:	add	x11, x11, #0x69f
   3e1d8:	cmp	x10, #0x8
   3e1dc:	b.eq	3e29c <mpfr_strtofr@@Base+0x258>  // b.none
   3e1e0:	ldrb	w12, [x27, x10]
   3e1e4:	ldrb	w13, [x11, x10]
   3e1e8:	add	x10, x10, #0x1
   3e1ec:	sub	w14, w12, #0x41
   3e1f0:	add	w15, w12, #0x20
   3e1f4:	cmp	w14, #0x1a
   3e1f8:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   3e1fc:	cmp	w13, w12, uxtb
   3e200:	b.eq	3e1d8 <mpfr_strtofr@@Base+0x194>  // b.none
   3e204:	adrp	x11, 5e000 <mpfr_bases@@Base+0x4f8>
   3e208:	mov	x10, xzr
   3e20c:	mov	w9, #0x3                   	// #3
   3e210:	add	x11, x11, #0x6a8
   3e214:	cmp	x10, #0x3
   3e218:	b.eq	3e29c <mpfr_strtofr@@Base+0x258>  // b.none
   3e21c:	ldrb	w12, [x27, x10]
   3e220:	ldrb	w13, [x11, x10]
   3e224:	add	x10, x10, #0x1
   3e228:	sub	w14, w12, #0x41
   3e22c:	add	w15, w12, #0x20
   3e230:	cmp	w14, #0x1a
   3e234:	csel	w12, w15, w12, cc  // cc = lo, ul, last
   3e238:	cmp	w13, w12, uxtb
   3e23c:	b.eq	3e214 <mpfr_strtofr@@Base+0x1d0>  // b.none
   3e240:	tst	w24, #0xffffffef
   3e244:	str	x19, [sp, #8]
   3e248:	str	w22, [sp, #4]
   3e24c:	b.ne	3e364 <mpfr_strtofr@@Base+0x320>  // b.any
   3e250:	ldrb	w8, [x27]
   3e254:	cmp	w8, #0x30
   3e258:	b.ne	3e364 <mpfr_strtofr@@Base+0x320>  // b.any
   3e25c:	ldrb	w8, [x27, #1]
   3e260:	orr	w8, w8, #0x20
   3e264:	cmp	w8, #0x78
   3e268:	b.ne	3e364 <mpfr_strtofr@@Base+0x320>  // b.any
   3e26c:	add	x22, x27, #0x2
   3e270:	mov	w19, #0x10                  	// #16
   3e274:	b	3e3a8 <mpfr_strtofr@@Base+0x364>
   3e278:	add	x20, x27, x9
   3e27c:	ldrb	w8, [x20]
   3e280:	cmp	w8, #0x28
   3e284:	b.ne	3e308 <mpfr_strtofr@@Base+0x2c4>  // b.any
   3e288:	ldrb	w9, [x20, #1]
   3e28c:	cmp	w9, #0x29
   3e290:	b.ne	3e2c0 <mpfr_strtofr@@Base+0x27c>  // b.any
   3e294:	mov	x8, x20
   3e298:	b	3e304 <mpfr_strtofr@@Base+0x2c0>
   3e29c:	cmp	w8, #0x2d
   3e2a0:	mov	w8, #0xffffffff            	// #-1
   3e2a4:	mov	w23, wzr
   3e2a8:	add	x20, x27, x9
   3e2ac:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3e2b0:	cneg	w8, w8, ne  // ne = any
   3e2b4:	str	x9, [x21, #16]
   3e2b8:	str	w8, [x21, #8]
   3e2bc:	b	3e338 <mpfr_strtofr@@Base+0x2f4>
   3e2c0:	mov	x8, x20
   3e2c4:	and	w10, w9, #0xffffffdf
   3e2c8:	sub	w10, w10, #0x41
   3e2cc:	and	w10, w10, #0xff
   3e2d0:	cmp	w10, #0x1a
   3e2d4:	b.cc	3e2f4 <mpfr_strtofr@@Base+0x2b0>  // b.lo, b.ul, b.last
   3e2d8:	and	w10, w9, #0xff
   3e2dc:	cmp	w10, #0x5f
   3e2e0:	b.eq	3e2f4 <mpfr_strtofr@@Base+0x2b0>  // b.none
   3e2e4:	sub	w9, w9, #0x30
   3e2e8:	and	w9, w9, #0xff
   3e2ec:	cmp	w9, #0x9
   3e2f0:	b.hi	3e308 <mpfr_strtofr@@Base+0x2c4>  // b.pmore
   3e2f4:	ldrb	w9, [x8, #2]
   3e2f8:	add	x8, x8, #0x1
   3e2fc:	cmp	w9, #0x29
   3e300:	b.ne	3e2c4 <mpfr_strtofr@@Base+0x280>  // b.any
   3e304:	add	x20, x8, #0x2
   3e308:	mov	x8, #0x2                   	// #2
   3e30c:	movk	x8, #0x8000, lsl #48
   3e310:	str	x8, [x21, #16]
   3e314:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3e318:	ldr	x1, [x0, #2656]
   3e31c:	add	x0, x0, #0xa60
   3e320:	blr	x1
   3e324:	mrs	x8, tpidr_el0
   3e328:	ldr	w9, [x8, x0]
   3e32c:	mov	w23, wzr
   3e330:	orr	w9, w9, #0x4
   3e334:	str	w9, [x8, x0]
   3e338:	cbz	x19, 3e340 <mpfr_strtofr@@Base+0x2fc>
   3e33c:	str	x20, [x19]
   3e340:	mov	w0, w23
   3e344:	ldp	x20, x19, [sp, #160]
   3e348:	ldp	x22, x21, [sp, #144]
   3e34c:	ldp	x24, x23, [sp, #128]
   3e350:	ldp	x26, x25, [sp, #112]
   3e354:	ldp	x28, x27, [sp, #96]
   3e358:	ldp	x29, x30, [sp, #80]
   3e35c:	add	sp, sp, #0xb0
   3e360:	ret
   3e364:	tst	w24, #0xfffffffd
   3e368:	b.ne	3e394 <mpfr_strtofr@@Base+0x350>  // b.any
   3e36c:	ldrb	w8, [x27]
   3e370:	cmp	w8, #0x30
   3e374:	b.ne	3e394 <mpfr_strtofr@@Base+0x350>  // b.any
   3e378:	ldrb	w8, [x27, #1]
   3e37c:	orr	w8, w8, #0x20
   3e380:	cmp	w8, #0x62
   3e384:	b.ne	3e394 <mpfr_strtofr@@Base+0x350>  // b.any
   3e388:	add	x22, x27, #0x2
   3e38c:	mov	w19, #0x2                   	// #2
   3e390:	b	3e3a8 <mpfr_strtofr@@Base+0x364>
   3e394:	cmp	w24, #0x0
   3e398:	mov	w8, #0xa                   	// #10
   3e39c:	csel	w19, w8, w24, eq  // eq = none
   3e3a0:	mov	x22, x27
   3e3a4:	mov	x27, xzr
   3e3a8:	mov	x0, x22
   3e3ac:	str	w19, [sp, #20]
   3e3b0:	bl	bb70 <strlen@plt>
   3e3b4:	add	x0, x0, #0x1
   3e3b8:	str	x0, [sp, #48]
   3e3bc:	bl	cd50 <mpfr_allocate_func@plt>
   3e3c0:	add	x8, sp, #0x10
   3e3c4:	cmp	w19, #0x24
   3e3c8:	mov	w9, #0xffffffa9            	// #-87
   3e3cc:	mov	w10, #0xffffffc3            	// #-61
   3e3d0:	mov	x24, x0
   3e3d4:	add	x8, x8, #0x28
   3e3d8:	csel	w9, w10, w9, gt
   3e3dc:	str	x0, [sp, #24]
   3e3e0:	mov	w10, wzr
   3e3e4:	mov	x26, x22
   3e3e8:	mov	x22, x27
   3e3ec:	stp	xzr, xzr, [x8]
   3e3f0:	add	x11, x26, #0x1
   3e3f4:	mov	w12, w10
   3e3f8:	mov	x26, x11
   3e3fc:	ldurb	w11, [x11, #-1]
   3e400:	mov	w10, w12
   3e404:	cmp	w11, #0x2e
   3e408:	b.eq	3e414 <mpfr_strtofr@@Base+0x3d0>  // b.none
   3e40c:	cmp	w11, w28
   3e410:	b.ne	3e424 <mpfr_strtofr@@Base+0x3e0>  // b.any
   3e414:	add	x11, x26, #0x1
   3e418:	mov	w12, #0x1                   	// #1
   3e41c:	cbz	w10, 3e3f8 <mpfr_strtofr@@Base+0x3b4>
   3e420:	b	3e474 <mpfr_strtofr@@Base+0x430>
   3e424:	sub	w12, w11, #0x30
   3e428:	cmp	w12, #0xa
   3e42c:	b.cc	3e454 <mpfr_strtofr@@Base+0x410>  // b.lo, b.ul, b.last
   3e430:	sub	w12, w11, #0x61
   3e434:	cmp	w12, #0x19
   3e438:	b.hi	3e444 <mpfr_strtofr@@Base+0x400>  // b.pmore
   3e43c:	add	w12, w9, w11
   3e440:	b	3e454 <mpfr_strtofr@@Base+0x410>
   3e444:	sub	w12, w11, #0x41
   3e448:	cmp	w12, #0x19
   3e44c:	b.hi	3e474 <mpfr_strtofr@@Base+0x430>  // b.pmore
   3e450:	sub	w12, w11, #0x37
   3e454:	cmp	w12, w19
   3e458:	b.ge	3e474 <mpfr_strtofr@@Base+0x430>  // b.tcont
   3e45c:	strb	w12, [x24], #1
   3e460:	cbnz	w10, 3e3f0 <mpfr_strtofr@@Base+0x3ac>
   3e464:	ldr	x11, [sp, #56]
   3e468:	add	x11, x11, #0x1
   3e46c:	str	x11, [sp, #56]
   3e470:	b	3e3f0 <mpfr_strtofr@@Base+0x3ac>
   3e474:	ldr	x25, [sp, #24]
   3e478:	subs	x27, x24, x25
   3e47c:	str	x27, [sp, #40]
   3e480:	b.ne	3e49c <mpfr_strtofr@@Base+0x458>  // b.any
   3e484:	mov	x24, x25
   3e488:	cbnz	x22, 3e3e0 <mpfr_strtofr@@Base+0x39c>
   3e48c:	ldr	x19, [sp, #8]
   3e490:	mov	w23, #0xffffffff            	// #-1
   3e494:	cbnz	x25, 3e660 <mpfr_strtofr@@Base+0x61c>
   3e498:	b	3e674 <mpfr_strtofr@@Base+0x630>
   3e49c:	mov	x20, x26
   3e4a0:	ldrb	w8, [x20, #-1]!
   3e4a4:	cmp	w8, #0x40
   3e4a8:	b.eq	3e4c0 <mpfr_strtofr@@Base+0x47c>  // b.none
   3e4ac:	cmp	w19, #0xa
   3e4b0:	b.gt	3e514 <mpfr_strtofr@@Base+0x4d0>
   3e4b4:	orr	w9, w8, #0x20
   3e4b8:	cmp	w9, #0x65
   3e4bc:	b.ne	3e514 <mpfr_strtofr@@Base+0x4d0>  // b.any
   3e4c0:	ldr	x9, [x23]
   3e4c4:	ldrb	w10, [x26]
   3e4c8:	ldrh	w9, [x9, x10, lsl #1]
   3e4cc:	tbnz	w9, #13, 3e514 <mpfr_strtofr@@Base+0x4d0>
   3e4d0:	sub	x1, x29, #0x8
   3e4d4:	mov	w2, #0xa                   	// #10
   3e4d8:	mov	x0, x26
   3e4dc:	bl	c6a0 <strtol@plt>
   3e4e0:	ldur	x9, [x29, #-8]
   3e4e4:	ldr	x8, [sp, #56]
   3e4e8:	cmp	x9, x26
   3e4ec:	csel	x20, x20, x9, eq  // eq = none
   3e4f0:	tbnz	x0, #63, 3e56c <mpfr_strtofr@@Base+0x528>
   3e4f4:	ldr	x19, [sp, #8]
   3e4f8:	tbnz	x8, #63, 3e574 <mpfr_strtofr@@Base+0x530>
   3e4fc:	add	x8, x8, x0
   3e500:	mov	w9, #0x1                   	// #1
   3e504:	cmp	x8, #0x0
   3e508:	csel	x8, x0, x8, lt  // lt = tstop
   3e50c:	cinc	w23, w9, lt  // lt = tstop
   3e510:	b	3e5b4 <mpfr_strtofr@@Base+0x570>
   3e514:	cmp	w19, #0x2
   3e518:	b.eq	3e524 <mpfr_strtofr@@Base+0x4e0>  // b.none
   3e51c:	cmp	w19, #0x10
   3e520:	b.ne	3e560 <mpfr_strtofr@@Base+0x51c>  // b.any
   3e524:	orr	w8, w8, #0x20
   3e528:	cmp	w8, #0x70
   3e52c:	b.ne	3e560 <mpfr_strtofr@@Base+0x51c>  // b.any
   3e530:	ldr	x8, [x23]
   3e534:	ldrb	w9, [x26]
   3e538:	ldrh	w8, [x8, x9, lsl #1]
   3e53c:	tbnz	w8, #13, 3e560 <mpfr_strtofr@@Base+0x51c>
   3e540:	sub	x1, x29, #0x8
   3e544:	mov	w2, #0xa                   	// #10
   3e548:	mov	x0, x26
   3e54c:	bl	c6a0 <strtol@plt>
   3e550:	ldur	x8, [x29, #-8]
   3e554:	str	x0, [sp, #64]
   3e558:	cmp	x8, x26
   3e55c:	csel	x20, x20, x8, eq  // eq = none
   3e560:	ldr	x19, [sp, #8]
   3e564:	mov	w23, #0x1                   	// #1
   3e568:	b	3e5b8 <mpfr_strtofr@@Base+0x574>
   3e56c:	ldr	x19, [sp, #8]
   3e570:	tbnz	x8, #63, 3e580 <mpfr_strtofr@@Base+0x53c>
   3e574:	add	x8, x8, x0
   3e578:	mov	w23, #0x1                   	// #1
   3e57c:	b	3e5b4 <mpfr_strtofr@@Base+0x570>
   3e580:	add	x8, x8, x0
   3e584:	neg	x9, x0
   3e588:	neg	x12, x8
   3e58c:	mov	w10, #0x3                   	// #3
   3e590:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
   3e594:	cmp	x12, x9
   3e598:	csinc	w9, w10, wzr, cc  // cc = lo, ul, last
   3e59c:	cmn	x8, x11
   3e5a0:	csneg	x11, x0, x8, ne  // ne = any
   3e5a4:	csel	w10, w9, w10, eq  // eq = none
   3e5a8:	cmp	x12, #0x0
   3e5ac:	csel	x8, x11, x8, lt  // lt = tstop
   3e5b0:	csel	w23, w10, w9, lt  // lt = tstop
   3e5b4:	str	x8, [sp, #56]
   3e5b8:	mov	x9, xzr
   3e5bc:	add	x8, x25, x27
   3e5c0:	mov	x10, #0xffffffffffffffff    	// #-1
   3e5c4:	ldrb	w11, [x25, x9]
   3e5c8:	cbnz	w11, 3e5f4 <mpfr_strtofr@@Base+0x5b0>
   3e5cc:	ldr	x11, [sp, #56]
   3e5d0:	add	x9, x9, #0x1
   3e5d4:	add	x12, x27, x10
   3e5d8:	cmp	x27, x9
   3e5dc:	sub	x11, x11, #0x1
   3e5e0:	sub	x10, x10, #0x1
   3e5e4:	str	x12, [sp, #40]
   3e5e8:	str	x11, [sp, #56]
   3e5ec:	b.ne	3e5c4 <mpfr_strtofr@@Base+0x580>  // b.any
   3e5f0:	b	3e62c <mpfr_strtofr@@Base+0x5e8>
   3e5f4:	mov	x11, xzr
   3e5f8:	sub	x10, x24, #0x1
   3e5fc:	add	x8, x25, x9
   3e600:	sub	x12, x27, x9
   3e604:	ldrb	w13, [x10, x11]
   3e608:	cbnz	w13, 3e658 <mpfr_strtofr@@Base+0x614>
   3e60c:	add	x14, x27, x11
   3e610:	add	x13, x12, x11
   3e614:	sub	x14, x14, #0x1
   3e618:	sub	x11, x11, #0x1
   3e61c:	sub	x13, x13, #0x1
   3e620:	cmp	x14, x9
   3e624:	str	x13, [sp, #40]
   3e628:	b.ne	3e604 <mpfr_strtofr@@Base+0x5c0>  // b.any
   3e62c:	str	x8, [sp, #32]
   3e630:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3e634:	str	x8, [x21, #16]
   3e638:	ldr	w8, [sp, #16]
   3e63c:	mov	w23, wzr
   3e640:	cmp	w8, #0x0
   3e644:	mov	w8, #0x1                   	// #1
   3e648:	cneg	w8, w8, ne  // ne = any
   3e64c:	str	w8, [x21, #8]
   3e650:	cbnz	x25, 3e660 <mpfr_strtofr@@Base+0x61c>
   3e654:	b	3e674 <mpfr_strtofr@@Base+0x630>
   3e658:	str	x8, [sp, #32]
   3e65c:	cbz	x25, 3e674 <mpfr_strtofr@@Base+0x630>
   3e660:	cmp	w23, #0x1
   3e664:	b.eq	3e674 <mpfr_strtofr@@Base+0x630>  // b.none
   3e668:	ldr	x1, [sp, #48]
   3e66c:	mov	x0, x25
   3e670:	bl	cc80 <mpfr_free_func@plt>
   3e674:	cmp	w23, #0x1
   3e678:	b.eq	3e694 <mpfr_strtofr@@Base+0x650>  // b.none
   3e67c:	cmp	w23, #0x2
   3e680:	b.eq	3e6b8 <mpfr_strtofr@@Base+0x674>  // b.none
   3e684:	cmn	w23, #0x1
   3e688:	b.ne	3e338 <mpfr_strtofr@@Base+0x2f4>  // b.any
   3e68c:	mov	w23, wzr
   3e690:	b	3e338 <mpfr_strtofr@@Base+0x2f4>
   3e694:	ldr	w2, [sp, #4]
   3e698:	add	x1, sp, #0x10
   3e69c:	mov	x0, x21
   3e6a0:	bl	3e6f8 <mpfr_strtofr@@Base+0x6b4>
   3e6a4:	ldr	x1, [sp, #48]
   3e6a8:	mov	w23, w0
   3e6ac:	mov	x0, x25
   3e6b0:	bl	cc80 <mpfr_free_func@plt>
   3e6b4:	b	3e338 <mpfr_strtofr@@Base+0x2f4>
   3e6b8:	ldr	w8, [sp, #16]
   3e6bc:	ldr	w1, [sp, #4]
   3e6c0:	mov	x0, x21
   3e6c4:	cmp	w8, #0x0
   3e6c8:	mov	w8, #0x1                   	// #1
   3e6cc:	cneg	w2, w8, ne  // ne = any
   3e6d0:	bl	bff0 <mpfr_overflow@plt>
   3e6d4:	mov	w23, w0
   3e6d8:	b	3e338 <mpfr_strtofr@@Base+0x2f4>
   3e6dc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3e6e0:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3e6e4:	add	x0, x0, #0x65e
   3e6e8:	add	x2, x2, #0x668
   3e6ec:	mov	w1, #0x3b0                 	// #944
   3e6f0:	bl	cb90 <mpfr_assert_fail@plt>
   3e6f4:	b	3e088 <mpfr_strtofr@@Base+0x44>
   3e6f8:	stp	x29, x30, [sp, #-96]!
   3e6fc:	stp	x28, x27, [sp, #16]
   3e700:	stp	x26, x25, [sp, #32]
   3e704:	stp	x24, x23, [sp, #48]
   3e708:	stp	x22, x21, [sp, #64]
   3e70c:	stp	x20, x19, [sp, #80]
   3e710:	mov	x29, sp
   3e714:	sub	sp, sp, #0x70
   3e718:	ldr	x23, [x0]
   3e71c:	mov	w22, w2
   3e720:	mov	x20, x0
   3e724:	mov	x21, x1
   3e728:	subs	x19, x23, #0x1
   3e72c:	b.eq	3f1c0 <mpfr_strtofr@@Base+0x117c>  // b.none
   3e730:	b.le	3f1c8 <mpfr_strtofr@@Base+0x1184>
   3e734:	clz	x8, x19
   3e738:	mov	w9, #0x40                  	// #64
   3e73c:	sub	x8, x9, x8
   3e740:	cmp	w22, #0x0
   3e744:	add	x9, x8, x23
   3e748:	cinc	x8, x23, eq  // eq = none
   3e74c:	stur	x8, [x29, #-72]
   3e750:	mov	w8, #0x40                  	// #64
   3e754:	stp	x20, x21, [x29, #-88]
   3e758:	stur	xzr, [x29, #-8]
   3e75c:	stur	w22, [x29, #-92]
   3e760:	stur	x23, [x29, #-104]
   3e764:	stur	x8, [x29, #-56]
   3e768:	sub	x8, x9, #0x1
   3e76c:	mov	x25, x9
   3e770:	add	x9, x9, #0x3e
   3e774:	cmp	x8, #0x0
   3e778:	csel	x8, x9, x8, lt  // lt = tstop
   3e77c:	asr	x8, x8, #6
   3e780:	add	x20, x8, #0x1
   3e784:	mov	w22, #0x8                   	// #8
   3e788:	bfi	x22, x20, #4, #60
   3e78c:	add	x1, x22, #0x8
   3e790:	cmp	x1, #0x4, lsl #12
   3e794:	lsl	x19, x20, #6
   3e798:	stur	x8, [x29, #-40]
   3e79c:	b.hi	3ef98 <mpfr_strtofr@@Base+0xf54>  // b.pmore
   3e7a0:	add	x9, x1, #0xf
   3e7a4:	mov	x8, sp
   3e7a8:	and	x9, x9, #0xfffffffffffffff0
   3e7ac:	sub	x0, x8, x9
   3e7b0:	mov	sp, x0
   3e7b4:	ldr	w3, [x21, #4]
   3e7b8:	adrp	x9, 5e000 <mpfr_bases@@Base+0x4f8>
   3e7bc:	add	x9, x9, #0x6b8
   3e7c0:	stur	x19, [x29, #-24]
   3e7c4:	sub	w8, w3, #0x2
   3e7c8:	add	x8, x9, w8, sxtw #3
   3e7cc:	ldp	w8, w9, [x8]
   3e7d0:	add	x28, x0, x20, lsl #3
   3e7d4:	mov	x27, x0
   3e7d8:	mov	x0, x28
   3e7dc:	sdiv	x10, x19, x9
   3e7e0:	msub	x11, x10, x9, x19
   3e7e4:	madd	x11, x11, x8, x9
   3e7e8:	sub	x11, x11, #0x1
   3e7ec:	udiv	x9, x11, x9
   3e7f0:	ldp	x1, x11, [x21, #16]
   3e7f4:	madd	x8, x10, x8, x9
   3e7f8:	add	x9, x8, #0x1
   3e7fc:	cmp	x9, x11
   3e800:	csinc	x19, x11, x8, hi  // hi = pmore
   3e804:	mov	x2, x19
   3e808:	bl	bc30 <__gmpn_set_str@plt>
   3e80c:	ldr	x8, [x21, #24]
   3e810:	sub	x2, x0, #0x1
   3e814:	ldr	x9, [x28, x2, lsl #3]
   3e818:	mov	x26, x0
   3e81c:	cmp	x19, x8
   3e820:	cset	w10, eq  // eq = none
   3e824:	mov	x24, x20
   3e828:	subs	x23, x20, x0
   3e82c:	clz	x20, x9
   3e830:	stur	w10, [x29, #-28]
   3e834:	b.mi	3e88c <mpfr_strtofr@@Base+0x848>  // b.first
   3e838:	cbz	w20, 3e850 <mpfr_strtofr@@Base+0x80c>
   3e83c:	add	x0, x28, x23, lsl #3
   3e840:	mov	x1, x28
   3e844:	mov	x2, x26
   3e848:	mov	w3, w20
   3e84c:	bl	bd70 <__gmpn_lshift@plt>
   3e850:	cmp	x23, #0x1
   3e854:	b.lt	3e87c <mpfr_strtofr@@Base+0x838>  // b.tstop
   3e858:	cbnz	w20, 3e86c <mpfr_strtofr@@Base+0x828>
   3e85c:	add	x0, x28, x23, lsl #3
   3e860:	mov	x1, x28
   3e864:	mov	x2, x26
   3e868:	bl	bba0 <__gmpn_copyd@plt>
   3e86c:	lsl	x2, x23, #3
   3e870:	mov	x0, x28
   3e874:	mov	w1, wzr
   3e878:	bl	c1b0 <memset@plt>
   3e87c:	lsl	x9, x23, #6
   3e880:	mov	x8, x20
   3e884:	mov	x20, x9
   3e888:	b	3e924 <mpfr_strtofr@@Base+0x8e0>
   3e88c:	cmp	x19, x8
   3e890:	cbz	w20, 3e8b4 <mpfr_strtofr@@Base+0x870>
   3e894:	mov	x21, x25
   3e898:	b.ne	3e8cc <mpfr_strtofr@@Base+0x888>  // b.any
   3e89c:	cmn	x23, #0x1
   3e8a0:	b.eq	3e8e8 <mpfr_strtofr@@Base+0x8a4>  // b.none
   3e8a4:	ldr	x8, [x28]
   3e8a8:	cmp	x8, #0x0
   3e8ac:	cset	w25, eq  // eq = none
   3e8b0:	b	3e8ec <mpfr_strtofr@@Base+0x8a8>
   3e8b4:	b.ne	3e8d4 <mpfr_strtofr@@Base+0x890>  // b.any
   3e8b8:	ldr	x8, [x28]
   3e8bc:	cmp	x8, #0x0
   3e8c0:	cset	w8, eq  // eq = none
   3e8c4:	stur	w8, [x29, #-28]
   3e8c8:	b	3e8d8 <mpfr_strtofr@@Base+0x894>
   3e8cc:	mov	w25, wzr
   3e8d0:	b	3e8ec <mpfr_strtofr@@Base+0x8a8>
   3e8d4:	stur	wzr, [x29, #-28]
   3e8d8:	add	x1, x28, #0x8
   3e8dc:	mov	x0, x28
   3e8e0:	bl	c570 <__gmpn_copyi@plt>
   3e8e4:	b	3e920 <mpfr_strtofr@@Base+0x8dc>
   3e8e8:	mov	w25, #0x1                   	// #1
   3e8ec:	mvn	x8, x23
   3e8f0:	add	x1, x28, x8, lsl #3
   3e8f4:	mov	w8, #0x40                  	// #64
   3e8f8:	sub	w3, w8, w20
   3e8fc:	mov	x0, x28
   3e900:	mov	x2, x26
   3e904:	bl	bd90 <__gmpn_rshift@plt>
   3e908:	cmp	x0, #0x0
   3e90c:	cset	w8, eq  // eq = none
   3e910:	and	w8, w25, w8
   3e914:	mov	x25, x21
   3e918:	ldur	x21, [x29, #-80]
   3e91c:	stur	w8, [x29, #-28]
   3e920:	lsl	x8, x23, #6
   3e924:	ldr	w2, [x21, #4]
   3e928:	add	x20, x20, x8
   3e92c:	neg	x26, x20
   3e930:	mov	x23, x24
   3e934:	sub	w8, w2, #0x1
   3e938:	tst	w2, w8
   3e93c:	b.ne	3e97c <mpfr_strtofr@@Base+0x938>  // b.any
   3e940:	ldr	x8, [x21, #40]
   3e944:	sxtw	x9, w2
   3e948:	clz	x9, x9
   3e94c:	mov	w10, #0x3f                  	// #63
   3e950:	cmp	x19, #0x0
   3e954:	sub	w9, w10, w9
   3e958:	b.gt	3e9d8 <mpfr_strtofr@@Base+0x994>
   3e95c:	tbnz	x8, #63, 3e9d8 <mpfr_strtofr@@Base+0x994>
   3e960:	ldur	x24, [x29, #-24]
   3e964:	sub	x10, x8, x19
   3e968:	cmp	x10, x8
   3e96c:	mov	w8, #0xe                   	// #14
   3e970:	b.cc	3eed0 <mpfr_strtofr@@Base+0xe8c>  // b.lo, b.ul, b.last
   3e974:	tbz	x10, #63, 3eabc <mpfr_strtofr@@Base+0xa78>
   3e978:	b	3eed0 <mpfr_strtofr@@Base+0xe8c>
   3e97c:	ldr	x8, [x21, #40]
   3e980:	lsl	x9, x23, #1
   3e984:	stur	x9, [x29, #-64]
   3e988:	cmp	x8, x19
   3e98c:	b.le	3ea04 <mpfr_strtofr@@Base+0x9c0>
   3e990:	cmp	x22, #0x4, lsl #12
   3e994:	b.hi	3efc4 <mpfr_strtofr@@Base+0xf80>  // b.pmore
   3e998:	add	x10, x22, #0xf
   3e99c:	mov	x9, sp
   3e9a0:	and	x10, x10, #0xfffffffffffffff0
   3e9a4:	sub	x9, x9, x10
   3e9a8:	stur	x9, [x29, #-48]
   3e9ac:	mov	sp, x9
   3e9b0:	sub	x3, x8, x19
   3e9b4:	sub	x1, x29, #0x10
   3e9b8:	mov	x0, x27
   3e9bc:	mov	x4, x23
   3e9c0:	bl	cc30 <mpfr_mpn_exp@plt>
   3e9c4:	mov	x19, x0
   3e9c8:	cmn	w19, #0x2
   3e9cc:	b.ne	3ea6c <mpfr_strtofr@@Base+0xa28>  // b.any
   3e9d0:	ldur	x24, [x29, #-24]
   3e9d4:	b	3eb28 <mpfr_strtofr@@Base+0xae4>
   3e9d8:	ldur	x24, [x29, #-24]
   3e9dc:	cmp	x19, #0x1
   3e9e0:	b.lt	3eab8 <mpfr_strtofr@@Base+0xa74>  // b.tstop
   3e9e4:	tbz	x8, #63, 3eab8 <mpfr_strtofr@@Base+0xa74>
   3e9e8:	neg	x10, x8
   3e9ec:	sub	x8, x19, x8
   3e9f0:	cmp	x8, x10
   3e9f4:	b.cc	3f098 <mpfr_strtofr@@Base+0x1054>  // b.lo, b.ul, b.last
   3e9f8:	tbnz	x8, #63, 3f098 <mpfr_strtofr@@Base+0x1054>
   3e9fc:	neg	x10, x8
   3ea00:	b	3eafc <mpfr_strtofr@@Base+0xab8>
   3ea04:	b.ge	3eadc <mpfr_strtofr@@Base+0xa98>  // b.tcont
   3ea08:	mov	w8, #0x18                  	// #24
   3ea0c:	orr	x9, xzr, #0x8
   3ea10:	madd	x1, x23, x8, x9
   3ea14:	mov	x24, x27
   3ea18:	cmp	x1, #0x4, lsl #12
   3ea1c:	b.hi	3efe0 <mpfr_strtofr@@Base+0xf9c>  // b.pmore
   3ea20:	add	x9, x1, #0xf
   3ea24:	mov	x8, sp
   3ea28:	and	x9, x9, #0xfffffffffffffff0
   3ea2c:	sub	x28, x8, x9
   3ea30:	mov	sp, x28
   3ea34:	lsl	x2, x23, #3
   3ea38:	mov	x0, x24
   3ea3c:	mov	w1, wzr
   3ea40:	bl	c1b0 <memset@plt>
   3ea44:	ldr	x8, [x21, #40]
   3ea48:	tbnz	x19, #63, 3ec1c <mpfr_strtofr@@Base+0xbd8>
   3ea4c:	cmp	x8, #0x0
   3ea50:	b.gt	3ec40 <mpfr_strtofr@@Base+0xbfc>
   3ea54:	sub	x3, x19, x8
   3ea58:	cmp	x3, x19
   3ea5c:	mov	w8, #0x11                  	// #17
   3ea60:	b.cc	3ef50 <mpfr_strtofr@@Base+0xf0c>  // b.lo, b.ul, b.last
   3ea64:	tbz	x3, #63, 3ec44 <mpfr_strtofr@@Base+0xc00>
   3ea68:	b	3ef50 <mpfr_strtofr@@Base+0xf0c>
   3ea6c:	ldur	x0, [x29, #-48]
   3ea70:	mov	x1, x28
   3ea74:	mov	x2, x27
   3ea78:	mov	x3, x23
   3ea7c:	bl	c4c0 <__gmpn_mul_n@plt>
   3ea80:	ldur	x8, [x29, #-16]
   3ea84:	cmn	w19, #0x1
   3ea88:	mov	w10, #0x1                   	// #1
   3ea8c:	cset	w9, eq  // eq = none
   3ea90:	csinc	x19, x10, x19, eq  // eq = none
   3ea94:	cmn	x25, #0x7e
   3ea98:	b.lt	3ebbc <mpfr_strtofr@@Base+0xb78>  // b.tstop
   3ea9c:	tbnz	x8, #63, 3ebbc <mpfr_strtofr@@Base+0xb78>
   3eaa0:	ldur	x24, [x29, #-24]
   3eaa4:	adds	x10, x8, x24
   3eaa8:	mov	w8, #0xe                   	// #14
   3eaac:	b.cs	3eed0 <mpfr_strtofr@@Base+0xe8c>  // b.hs, b.nlast
   3eab0:	tbz	x10, #63, 3ec88 <mpfr_strtofr@@Base+0xc44>
   3eab4:	b	3eed0 <mpfr_strtofr@@Base+0xe8c>
   3eab8:	sub	x10, x8, x19
   3eabc:	cmp	x10, #0x1
   3eac0:	b.lt	3eaec <mpfr_strtofr@@Base+0xaa8>  // b.tstop
   3eac4:	sxtw	x8, w9
   3eac8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   3eacc:	sdiv	x9, x9, x8
   3ead0:	cmp	x9, x10
   3ead4:	b.gt	3eb10 <mpfr_strtofr@@Base+0xacc>
   3ead8:	b	3f0f8 <mpfr_strtofr@@Base+0x10b4>
   3eadc:	ldur	w8, [x29, #-28]
   3eae0:	mov	x19, xzr
   3eae4:	ldur	x24, [x29, #-24]
   3eae8:	b	3ed94 <mpfr_strtofr@@Base+0xd50>
   3eaec:	tbnz	x10, #63, 3eafc <mpfr_strtofr@@Base+0xab8>
   3eaf0:	mov	x10, xzr
   3eaf4:	sxtw	x8, w9
   3eaf8:	b	3eb10 <mpfr_strtofr@@Base+0xacc>
   3eafc:	sxtw	x8, w9
   3eb00:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3eb04:	sdiv	x9, x9, x8
   3eb08:	cmp	x9, x10
   3eb0c:	b.ge	3f098 <mpfr_strtofr@@Base+0x1054>  // b.tcont
   3eb10:	ldr	x9, [x21, #48]
   3eb14:	mul	x8, x10, x8
   3eb18:	tbnz	x8, #63, 3eb30 <mpfr_strtofr@@Base+0xaec>
   3eb1c:	tbnz	x9, #63, 3eb34 <mpfr_strtofr@@Base+0xaf0>
   3eb20:	adds	x8, x8, x9
   3eb24:	b.pl	3eb38 <mpfr_strtofr@@Base+0xaf4>  // b.nfrst
   3eb28:	mov	w8, #0xe                   	// #14
   3eb2c:	b	3eed0 <mpfr_strtofr@@Base+0xe8c>
   3eb30:	tbnz	x9, #63, 3ebf4 <mpfr_strtofr@@Base+0xbb0>
   3eb34:	add	x8, x9, x8
   3eb38:	orr	x9, x8, x26
   3eb3c:	tbnz	x9, #63, 3eb70 <mpfr_strtofr@@Base+0xb2c>
   3eb40:	sub	x9, x8, x20
   3eb44:	cmp	x9, x26
   3eb48:	mov	w8, #0xe                   	// #14
   3eb4c:	b.cc	3eed0 <mpfr_strtofr@@Base+0xe8c>  // b.lo, b.ul, b.last
   3eb50:	mov	x10, #0xfffffffffffffffd    	// #-3
   3eb54:	movk	x10, #0x7fff, lsl #48
   3eb58:	cmp	x9, x10
   3eb5c:	b.hi	3eed0 <mpfr_strtofr@@Base+0xe8c>  // b.pmore
   3eb60:	ldur	w8, [x29, #-28]
   3eb64:	mov	x19, xzr
   3eb68:	mov	x26, x9
   3eb6c:	b	3ed94 <mpfr_strtofr@@Base+0xd50>
   3eb70:	tst	x8, x26
   3eb74:	sub	x26, x8, x20
   3eb78:	b.ge	3ebb0 <mpfr_strtofr@@Base+0xb6c>  // b.tcont
   3eb7c:	neg	x8, x26
   3eb80:	cmp	x20, x8
   3eb84:	b.hi	3f098 <mpfr_strtofr@@Base+0x1054>  // b.pmore
   3eb88:	mov	x9, #0xfffffffffffffffd    	// #-3
   3eb8c:	movk	x9, #0x7fff, lsl #48
   3eb90:	cmp	x8, x9
   3eb94:	b.ls	3ebb0 <mpfr_strtofr@@Base+0xb6c>  // b.plast
   3eb98:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
   3eb9c:	cmp	x8, x9
   3eba0:	b.ne	3f098 <mpfr_strtofr@@Base+0x1054>  // b.any
   3eba4:	mov	x8, #0xfffffffffffffffd    	// #-3
   3eba8:	movk	x8, #0x7fff, lsl #48
   3ebac:	add	x26, x8, #0x5
   3ebb0:	ldur	w8, [x29, #-28]
   3ebb4:	mov	x19, xzr
   3ebb8:	b	3ed94 <mpfr_strtofr@@Base+0xd50>
   3ebbc:	ldur	x24, [x29, #-24]
   3ebc0:	cmn	x25, #0x7f
   3ebc4:	b.gt	3ec84 <mpfr_strtofr@@Base+0xc40>
   3ebc8:	tbz	x8, #63, 3ec84 <mpfr_strtofr@@Base+0xc40>
   3ebcc:	add	x10, x8, x24
   3ebd0:	neg	x11, x8
   3ebd4:	neg	x8, x10
   3ebd8:	cmp	x8, x11
   3ebdc:	b.cc	3eecc <mpfr_strtofr@@Base+0xe88>  // b.lo, b.ul, b.last
   3ebe0:	tbz	x8, #63, 3ec88 <mpfr_strtofr@@Base+0xc44>
   3ebe4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3ebe8:	cmp	x8, x10
   3ebec:	b.eq	3ec88 <mpfr_strtofr@@Base+0xc44>  // b.none
   3ebf0:	b	3eecc <mpfr_strtofr@@Base+0xe88>
   3ebf4:	neg	x10, x8
   3ebf8:	add	x8, x8, x9
   3ebfc:	neg	x9, x8
   3ec00:	cmp	x9, x10
   3ec04:	b.cc	3f098 <mpfr_strtofr@@Base+0x1054>  // b.lo, b.ul, b.last
   3ec08:	tbz	x9, #63, 3eb38 <mpfr_strtofr@@Base+0xaf4>
   3ec0c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   3ec10:	cmp	x9, x8
   3ec14:	b.eq	3eb38 <mpfr_strtofr@@Base+0xaf4>  // b.none
   3ec18:	b	3f098 <mpfr_strtofr@@Base+0x1054>
   3ec1c:	cmp	x8, #0x1
   3ec20:	b.lt	3ec40 <mpfr_strtofr@@Base+0xbfc>  // b.tstop
   3ec24:	neg	x9, x19
   3ec28:	sub	x8, x8, x19
   3ec2c:	cmp	x8, x9
   3ec30:	b.cc	3ef4c <mpfr_strtofr@@Base+0xf08>  // b.lo, b.ul, b.last
   3ec34:	tbnz	x8, #63, 3ef40 <mpfr_strtofr@@Base+0xefc>
   3ec38:	neg	x3, x8
   3ec3c:	b	3ec44 <mpfr_strtofr@@Base+0xc00>
   3ec40:	sub	x3, x19, x8
   3ec44:	ldur	x8, [x29, #-64]
   3ec48:	stur	x3, [x29, #-16]
   3ec4c:	ldr	w2, [x21, #4]
   3ec50:	sub	x1, x29, #0x10
   3ec54:	add	x27, x28, x8, lsl #3
   3ec58:	add	x22, x27, #0x8
   3ec5c:	mov	x0, x22
   3ec60:	mov	x4, x23
   3ec64:	bl	cc30 <mpfr_mpn_exp@plt>
   3ec68:	mov	x19, x0
   3ec6c:	cmn	w19, #0x2
   3ec70:	b.eq	3ee44 <mpfr_strtofr@@Base+0xe00>  // b.none
   3ec74:	cmn	w19, #0x1
   3ec78:	b.ne	3ecb8 <mpfr_strtofr@@Base+0xc74>  // b.any
   3ec7c:	mov	x19, xzr
   3ec80:	b	3ecbc <mpfr_strtofr@@Base+0xc78>
   3ec84:	add	x10, x8, x24
   3ec88:	orr	x8, x10, x26
   3ec8c:	stur	x10, [x29, #-16]
   3ec90:	tbnz	x8, #63, 3ed1c <mpfr_strtofr@@Base+0xcd8>
   3ec94:	sub	x22, x10, x20
   3ec98:	cmp	x22, x26
   3ec9c:	mov	w8, #0xe                   	// #14
   3eca0:	b.cc	3eed0 <mpfr_strtofr@@Base+0xe8c>  // b.lo, b.ul, b.last
   3eca4:	mov	x10, #0xfffffffffffffffd    	// #-3
   3eca8:	movk	x10, #0x7fff, lsl #48
   3ecac:	cmp	x22, x10
   3ecb0:	b.ls	3ed28 <mpfr_strtofr@@Base+0xce4>  // b.plast
   3ecb4:	b	3eed0 <mpfr_strtofr@@Base+0xe8c>
   3ecb8:	stur	wzr, [x29, #-28]
   3ecbc:	ldur	x8, [x29, #-16]
   3ecc0:	cmn	x25, #0x7e
   3ecc4:	b.lt	3ece4 <mpfr_strtofr@@Base+0xca0>  // b.tstop
   3ecc8:	tbnz	x8, #63, 3ece4 <mpfr_strtofr@@Base+0xca0>
   3eccc:	ldur	x9, [x29, #-24]
   3ecd0:	adds	x9, x8, x9
   3ecd4:	mov	w8, #0x11                  	// #17
   3ecd8:	b.cs	3ef50 <mpfr_strtofr@@Base+0xf0c>  // b.hs, b.nlast
   3ecdc:	tbz	x9, #63, 3ee00 <mpfr_strtofr@@Base+0xdbc>
   3ece0:	b	3ef50 <mpfr_strtofr@@Base+0xf0c>
   3ece4:	cmn	x25, #0x7f
   3ece8:	b.gt	3edf8 <mpfr_strtofr@@Base+0xdb4>
   3ecec:	tbz	x8, #63, 3edf8 <mpfr_strtofr@@Base+0xdb4>
   3ecf0:	ldur	x9, [x29, #-24]
   3ecf4:	neg	x10, x8
   3ecf8:	add	x9, x8, x9
   3ecfc:	neg	x8, x9
   3ed00:	cmp	x8, x10
   3ed04:	b.cc	3ef4c <mpfr_strtofr@@Base+0xf08>  // b.lo, b.ul, b.last
   3ed08:	tbz	x8, #63, 3ee00 <mpfr_strtofr@@Base+0xdbc>
   3ed0c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3ed10:	cmp	x8, x9
   3ed14:	b.eq	3ee00 <mpfr_strtofr@@Base+0xdbc>  // b.none
   3ed18:	b	3ef4c <mpfr_strtofr@@Base+0xf08>
   3ed1c:	tst	x10, x26
   3ed20:	sub	x22, x10, x20
   3ed24:	b.lt	3ee94 <mpfr_strtofr@@Base+0xe50>  // b.tstop
   3ed28:	ldur	x10, [x29, #-48]
   3ed2c:	ldur	x8, [x29, #-64]
   3ed30:	ldur	w11, [x29, #-28]
   3ed34:	add	x8, x10, x8, lsl #3
   3ed38:	ldur	x8, [x8, #-8]
   3ed3c:	and	w20, w11, w9
   3ed40:	tbnz	x8, #63, 3ed80 <mpfr_strtofr@@Base+0xd3c>
   3ed44:	ldur	x8, [x29, #-40]
   3ed48:	mov	w3, #0x1                   	// #1
   3ed4c:	add	x0, x10, x8, lsl #3
   3ed50:	add	x2, x8, #0x2
   3ed54:	mov	x1, x0
   3ed58:	bl	bd70 <__gmpn_lshift@plt>
   3ed5c:	sub	x26, x22, #0x1
   3ed60:	cbz	w20, 3ed88 <mpfr_strtofr@@Base+0xd44>
   3ed64:	ldur	x28, [x29, #-48]
   3ed68:	mov	x1, xzr
   3ed6c:	mov	x0, x28
   3ed70:	bl	caf0 <__gmpn_scan1@plt>
   3ed74:	cmp	x0, x24
   3ed78:	cset	w8, cs  // cs = hs, nlast
   3ed7c:	b	3ed90 <mpfr_strtofr@@Base+0xd4c>
   3ed80:	mov	x26, x22
   3ed84:	cbnz	w20, 3ed64 <mpfr_strtofr@@Base+0xd20>
   3ed88:	ldur	x28, [x29, #-48]
   3ed8c:	mov	w8, wzr
   3ed90:	add	x28, x28, x23, lsl #3
   3ed94:	stur	x28, [x29, #-48]
   3ed98:	cbnz	w8, 3f014 <mpfr_strtofr@@Base+0xfd0>
   3ed9c:	ldur	x3, [x29, #-72]
   3eda0:	sxtw	x8, w19
   3eda4:	mvn	x8, x8
   3eda8:	add	x2, x24, x8
   3edac:	mov	x0, x28
   3edb0:	mov	x1, x23
   3edb4:	bl	c3d0 <mpfr_round_p@plt>
   3edb8:	cbnz	w0, 3f014 <mpfr_strtofr@@Base+0xfd0>
   3edbc:	mov	x8, #0xfffffffffffffffd    	// #-3
   3edc0:	ldur	x9, [x29, #-56]
   3edc4:	movk	x8, #0x7fff, lsl #48
   3edc8:	sub	x8, x8, x25
   3edcc:	sub	x8, x8, #0xfe
   3edd0:	cmp	x9, x8
   3edd4:	b.gt	3efa4 <mpfr_strtofr@@Base+0xf60>
   3edd8:	add	x9, x25, x9
   3eddc:	cmp	x9, #0x0
   3ede0:	cinc	x10, x9, lt  // lt = tstop
   3ede4:	mov	w8, wzr
   3ede8:	asr	x10, x10, #1
   3edec:	stur	x10, [x29, #-56]
   3edf0:	cbz	w8, 3e768 <mpfr_strtofr@@Base+0x724>
   3edf4:	b	3eff0 <mpfr_strtofr@@Base+0xfac>
   3edf8:	ldur	x9, [x29, #-24]
   3edfc:	add	x9, x8, x9
   3ee00:	stur	x9, [x29, #-16]
   3ee04:	tbnz	x26, #63, 3ee34 <mpfr_strtofr@@Base+0xdf0>
   3ee08:	cmp	x9, #0x0
   3ee0c:	b.gt	3ee4c <mpfr_strtofr@@Base+0xe08>
   3ee10:	sub	x20, x26, x9
   3ee14:	cmp	x20, x26
   3ee18:	mov	w8, #0xe                   	// #14
   3ee1c:	b.cc	3ef50 <mpfr_strtofr@@Base+0xf0c>  // b.lo, b.ul, b.last
   3ee20:	mov	x9, #0xfffffffffffffffd    	// #-3
   3ee24:	movk	x9, #0x7fff, lsl #48
   3ee28:	cmp	x20, x9
   3ee2c:	b.ls	3ee50 <mpfr_strtofr@@Base+0xe0c>  // b.plast
   3ee30:	b	3ef50 <mpfr_strtofr@@Base+0xf0c>
   3ee34:	cmp	x9, #0x1
   3ee38:	b.lt	3ee4c <mpfr_strtofr@@Base+0xe08>  // b.tstop
   3ee3c:	adds	x8, x9, x20
   3ee40:	b.cc	3ef64 <mpfr_strtofr@@Base+0xf20>  // b.lo, b.ul, b.last
   3ee44:	mov	w8, #0x11                  	// #17
   3ee48:	b	3ef50 <mpfr_strtofr@@Base+0xf0c>
   3ee4c:	sub	x20, x26, x9
   3ee50:	ldur	x4, [x29, #-64]
   3ee54:	add	x0, x28, x23, lsl #3
   3ee58:	mov	x3, x24
   3ee5c:	mov	x1, x28
   3ee60:	mov	x2, xzr
   3ee64:	mov	x5, x22
   3ee68:	mov	x6, x23
   3ee6c:	mov	x24, x0
   3ee70:	bl	bb20 <__gmpn_tdiv_qr@plt>
   3ee74:	ldur	w8, [x29, #-28]
   3ee78:	cbz	w8, 3eedc <mpfr_strtofr@@Base+0xe98>
   3ee7c:	mov	x0, x28
   3ee80:	mov	x1, x23
   3ee84:	bl	c8b0 <__gmpn_popcount@plt>
   3ee88:	cmp	x0, #0x0
   3ee8c:	cset	w9, eq  // eq = none
   3ee90:	b	3eee0 <mpfr_strtofr@@Base+0xe9c>
   3ee94:	neg	x8, x22
   3ee98:	cmp	x20, x8
   3ee9c:	b.hi	3eecc <mpfr_strtofr@@Base+0xe88>  // b.pmore
   3eea0:	mov	x10, #0xfffffffffffffffd    	// #-3
   3eea4:	movk	x10, #0x7fff, lsl #48
   3eea8:	cmp	x8, x10
   3eeac:	b.ls	3ed28 <mpfr_strtofr@@Base+0xce4>  // b.plast
   3eeb0:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
   3eeb4:	cmp	x8, x10
   3eeb8:	b.ne	3eecc <mpfr_strtofr@@Base+0xe88>  // b.any
   3eebc:	mov	x8, #0xfffffffffffffffd    	// #-3
   3eec0:	movk	x8, #0x7fff, lsl #48
   3eec4:	add	x22, x8, #0x5
   3eec8:	b	3ed28 <mpfr_strtofr@@Base+0xce4>
   3eecc:	mov	w8, #0x11                  	// #17
   3eed0:	mov	x9, x25
   3eed4:	cbz	w8, 3e768 <mpfr_strtofr@@Base+0x724>
   3eed8:	b	3eff0 <mpfr_strtofr@@Base+0xfac>
   3eedc:	mov	w9, wzr
   3eee0:	ldr	x8, [x27]
   3eee4:	add	x19, x19, #0x1
   3eee8:	cmp	x8, #0x1
   3eeec:	b.ne	3ef08 <mpfr_strtofr@@Base+0xec4>  // b.any
   3eef0:	cbz	w9, 3ef10 <mpfr_strtofr@@Base+0xecc>
   3eef4:	ldrb	w8, [x24]
   3eef8:	mov	x0, x24
   3eefc:	tst	w8, #0x1
   3ef00:	cset	w22, eq  // eq = none
   3ef04:	b	3ef18 <mpfr_strtofr@@Base+0xed4>
   3ef08:	mov	w8, w9
   3ef0c:	b	3ef34 <mpfr_strtofr@@Base+0xef0>
   3ef10:	mov	w22, wzr
   3ef14:	mov	x0, x24
   3ef18:	ldur	x8, [x29, #-40]
   3ef1c:	mov	w3, #0x1                   	// #1
   3ef20:	mov	x1, x0
   3ef24:	add	x2, x8, #0x2
   3ef28:	bl	bd90 <__gmpn_rshift@plt>
   3ef2c:	add	x20, x20, #0x1
   3ef30:	mov	w8, w22
   3ef34:	mov	x26, x20
   3ef38:	mov	x28, x24
   3ef3c:	b	3eae4 <mpfr_strtofr@@Base+0xaa0>
   3ef40:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   3ef44:	cmp	x8, x3
   3ef48:	b.eq	3ec44 <mpfr_strtofr@@Base+0xc00>  // b.none
   3ef4c:	mov	w8, #0xe                   	// #14
   3ef50:	ldur	x24, [x29, #-24]
   3ef54:	stur	x28, [x29, #-48]
   3ef58:	mov	x9, x25
   3ef5c:	cbz	w8, 3e768 <mpfr_strtofr@@Base+0x724>
   3ef60:	b	3eff0 <mpfr_strtofr@@Base+0xfac>
   3ef64:	mov	x9, #0xfffffffffffffffd    	// #-3
   3ef68:	movk	x9, #0x7fff, lsl #48
   3ef6c:	cmp	x8, x9
   3ef70:	b.ls	3ef90 <mpfr_strtofr@@Base+0xf4c>  // b.plast
   3ef74:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
   3ef78:	cmp	x8, x9
   3ef7c:	b.ne	3ee44 <mpfr_strtofr@@Base+0xe00>  // b.any
   3ef80:	mov	x8, #0xfffffffffffffffd    	// #-3
   3ef84:	movk	x8, #0x7fff, lsl #48
   3ef88:	add	x20, x8, #0x5
   3ef8c:	b	3ee50 <mpfr_strtofr@@Base+0xe0c>
   3ef90:	neg	x20, x8
   3ef94:	b	3ee50 <mpfr_strtofr@@Base+0xe0c>
   3ef98:	sub	x0, x29, #0x8
   3ef9c:	bl	be70 <mpfr_tmp_allocate@plt>
   3efa0:	b	3e7b4 <mpfr_strtofr@@Base+0x770>
   3efa4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3efa8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   3efac:	mov	w1, #0x372                 	// #882
   3efb0:	add	x0, x0, #0x65e
   3efb4:	add	x2, x2, #0x922
   3efb8:	bl	cb90 <mpfr_assert_fail@plt>
   3efbc:	ldur	x9, [x29, #-56]
   3efc0:	b	3edd8 <mpfr_strtofr@@Base+0xd94>
   3efc4:	sub	x0, x29, #0x8
   3efc8:	mov	x1, x22
   3efcc:	bl	be70 <mpfr_tmp_allocate@plt>
   3efd0:	ldr	w2, [x21, #4]
   3efd4:	ldr	x8, [x21, #40]
   3efd8:	stur	x0, [x29, #-48]
   3efdc:	b	3e9b0 <mpfr_strtofr@@Base+0x96c>
   3efe0:	sub	x0, x29, #0x8
   3efe4:	bl	be70 <mpfr_tmp_allocate@plt>
   3efe8:	mov	x28, x0
   3efec:	b	3ea34 <mpfr_strtofr@@Base+0x9f0>
   3eff0:	cmp	w8, #0x11
   3eff4:	b.eq	3f098 <mpfr_strtofr@@Base+0x1054>  // b.none
   3eff8:	cmp	w8, #0xe
   3effc:	b.eq	3f0f8 <mpfr_strtofr@@Base+0x10b4>  // b.none
   3f000:	ldur	x19, [x29, #-88]
   3f004:	ldur	w20, [x29, #-92]
   3f008:	cmp	w8, #0x4
   3f00c:	b.eq	3f01c <mpfr_strtofr@@Base+0xfd8>  // b.none
   3f010:	b	3f19c <mpfr_strtofr@@Base+0x1158>
   3f014:	ldur	x19, [x29, #-88]
   3f018:	ldur	w20, [x29, #-92]
   3f01c:	ldr	x0, [x19, #24]
   3f020:	ldr	w3, [x21]
   3f024:	ldur	x1, [x29, #-48]
   3f028:	ldur	x4, [x29, #-104]
   3f02c:	sub	x6, x29, #0x10
   3f030:	mov	x2, x24
   3f034:	mov	w5, w20
   3f038:	bl	ca70 <mpfr_round_raw@plt>
   3f03c:	cbz	w0, 3f068 <mpfr_strtofr@@Base+0x1024>
   3f040:	ldr	x8, [x19]
   3f044:	ldr	x9, [x19, #24]
   3f048:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   3f04c:	add	x26, x26, #0x1
   3f050:	sub	x11, x8, #0x1
   3f054:	add	x8, x8, #0x3e
   3f058:	cmp	x11, #0x0
   3f05c:	csel	x8, x8, x11, lt  // lt = tstop
   3f060:	asr	x8, x8, #6
   3f064:	str	x10, [x9, x8, lsl #3]
   3f068:	ldr	w8, [x21]
   3f06c:	mov	w9, #0x1                   	// #1
   3f070:	cmp	w8, #0x0
   3f074:	cneg	w9, w9, ne  // ne = any
   3f078:	cmn	x25, #0x7e
   3f07c:	str	w9, [x19, #8]
   3f080:	b.lt	3f0c4 <mpfr_strtofr@@Base+0x1080>  // b.tstop
   3f084:	tbnz	x26, #63, 3f0c4 <mpfr_strtofr@@Base+0x1080>
   3f088:	adds	x9, x26, x24
   3f08c:	b.cs	3f104 <mpfr_strtofr@@Base+0x10c0>  // b.hs, b.nlast
   3f090:	tbz	x9, #63, 3f12c <mpfr_strtofr@@Base+0x10e8>
   3f094:	b	3f104 <mpfr_strtofr@@Base+0x10c0>
   3f098:	ldr	w8, [x21]
   3f09c:	ldur	x19, [x29, #-88]
   3f0a0:	ldur	w20, [x29, #-92]
   3f0a4:	cmp	w20, #0x0
   3f0a8:	csinc	w1, w20, wzr, ne  // ne = any
   3f0ac:	cmp	w8, #0x0
   3f0b0:	mov	w8, #0x1                   	// #1
   3f0b4:	cneg	w2, w8, ne  // ne = any
   3f0b8:	mov	x0, x19
   3f0bc:	bl	c420 <mpfr_underflow@plt>
   3f0c0:	b	3f11c <mpfr_strtofr@@Base+0x10d8>
   3f0c4:	cmn	x25, #0x7f
   3f0c8:	b.gt	3f128 <mpfr_strtofr@@Base+0x10e4>
   3f0cc:	tbz	x26, #63, 3f128 <mpfr_strtofr@@Base+0x10e4>
   3f0d0:	add	x9, x26, x24
   3f0d4:	neg	x11, x26
   3f0d8:	neg	x10, x9
   3f0dc:	cmp	x10, x11
   3f0e0:	b.cc	3f0a4 <mpfr_strtofr@@Base+0x1060>  // b.lo, b.ul, b.last
   3f0e4:	tbz	x10, #63, 3f12c <mpfr_strtofr@@Base+0x10e8>
   3f0e8:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   3f0ec:	cmp	x10, x9
   3f0f0:	b.ne	3f0a4 <mpfr_strtofr@@Base+0x1060>  // b.any
   3f0f4:	b	3f12c <mpfr_strtofr@@Base+0x10e8>
   3f0f8:	ldr	w8, [x21]
   3f0fc:	ldur	x19, [x29, #-88]
   3f100:	ldur	w20, [x29, #-92]
   3f104:	cmp	w8, #0x0
   3f108:	mov	w8, #0x1                   	// #1
   3f10c:	cneg	w2, w8, ne  // ne = any
   3f110:	mov	x0, x19
   3f114:	mov	w1, w20
   3f118:	bl	bff0 <mpfr_overflow@plt>
   3f11c:	mov	w8, w0
   3f120:	stur	w0, [x29, #-16]
   3f124:	b	3f194 <mpfr_strtofr@@Base+0x1150>
   3f128:	add	x9, x26, x24
   3f12c:	str	x9, [x19, #16]
   3f130:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f134:	ldr	x1, [x0, #2592]
   3f138:	add	x0, x0, #0xa20
   3f13c:	blr	x1
   3f140:	mrs	x10, tpidr_el0
   3f144:	ldr	x11, [x10, x0]
   3f148:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f14c:	ldr	x1, [x0, #2624]
   3f150:	add	x0, x0, #0xa40
   3f154:	blr	x1
   3f158:	ldur	w8, [x29, #-16]
   3f15c:	cmp	x9, x11
   3f160:	b.lt	3f1f0 <mpfr_strtofr@@Base+0x11ac>  // b.tstop
   3f164:	ldr	x11, [x10, x0]
   3f168:	cmp	x9, x11
   3f16c:	b.gt	3f1f0 <mpfr_strtofr@@Base+0x11ac>
   3f170:	cbz	w8, 3f190 <mpfr_strtofr@@Base+0x114c>
   3f174:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f178:	ldr	x1, [x0, #2656]
   3f17c:	add	x0, x0, #0xa60
   3f180:	blr	x1
   3f184:	ldr	w9, [x10, x0]
   3f188:	orr	w9, w9, #0x8
   3f18c:	str	w9, [x10, x0]
   3f190:	stur	w8, [x29, #-16]
   3f194:	ldur	x0, [x29, #-8]
   3f198:	cbnz	x0, 3f1e4 <mpfr_strtofr@@Base+0x11a0>
   3f19c:	mov	w0, w8
   3f1a0:	mov	sp, x29
   3f1a4:	ldp	x20, x19, [sp, #80]
   3f1a8:	ldp	x22, x21, [sp, #64]
   3f1ac:	ldp	x24, x23, [sp, #48]
   3f1b0:	ldp	x26, x25, [sp, #32]
   3f1b4:	ldp	x28, x27, [sp, #16]
   3f1b8:	ldp	x29, x30, [sp], #96
   3f1bc:	ret
   3f1c0:	mov	x8, xzr
   3f1c4:	b	3e740 <mpfr_strtofr@@Base+0x6fc>
   3f1c8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3f1cc:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   3f1d0:	add	x0, x0, #0x65e
   3f1d4:	add	x2, x2, #0x6ac
   3f1d8:	mov	w1, #0x1d4                 	// #468
   3f1dc:	bl	cb90 <mpfr_assert_fail@plt>
   3f1e0:	b	3e734 <mpfr_strtofr@@Base+0x6f0>
   3f1e4:	bl	c460 <mpfr_tmp_free@plt>
   3f1e8:	ldur	w8, [x29, #-16]
   3f1ec:	b	3f19c <mpfr_strtofr@@Base+0x1158>
   3f1f0:	mov	x0, x19
   3f1f4:	mov	w1, w8
   3f1f8:	mov	w2, w20
   3f1fc:	bl	cb80 <mpfr_check_range@plt>
   3f200:	mov	w8, w0
   3f204:	b	3f190 <mpfr_strtofr@@Base+0x114c>

000000000003f208 <mpfr_pow_z@@Base>:
   3f208:	sub	sp, sp, #0xe0
   3f20c:	stp	x29, x30, [sp, #128]
   3f210:	stp	x28, x27, [sp, #144]
   3f214:	stp	x26, x25, [sp, #160]
   3f218:	stp	x24, x23, [sp, #176]
   3f21c:	stp	x22, x21, [sp, #192]
   3f220:	stp	x20, x19, [sp, #208]
   3f224:	ldr	w10, [x2, #4]
   3f228:	mov	w27, w3
   3f22c:	mov	x19, x0
   3f230:	add	x29, sp, #0x80
   3f234:	cmp	w10, #0x0
   3f238:	cset	w8, ne  // ne = any
   3f23c:	cbz	w10, 3f5ac <mpfr_pow_z@@Base+0x3a4>
   3f240:	ldr	x9, [x1, #16]
   3f244:	mov	x12, #0x2                   	// #2
   3f248:	movk	x12, #0x8000, lsl #48
   3f24c:	add	x11, x12, #0x2
   3f250:	mov	x21, x2
   3f254:	mov	x22, x1
   3f258:	cmp	x9, x11
   3f25c:	b.lt	3f5c4 <mpfr_pow_z@@Base+0x3bc>  // b.tstop
   3f260:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f264:	ldr	x1, [x0, #2656]
   3f268:	add	x0, x0, #0xa60
   3f26c:	blr	x1
   3f270:	mrs	x28, tpidr_el0
   3f274:	ldr	w26, [x28, x0]
   3f278:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f27c:	ldr	x1, [x0, #2592]
   3f280:	add	x0, x0, #0xa20
   3f284:	blr	x1
   3f288:	ldr	x20, [x28, x0]
   3f28c:	mov	x8, x0
   3f290:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f294:	ldr	x1, [x0, #2624]
   3f298:	add	x0, x0, #0xa40
   3f29c:	blr	x1
   3f2a0:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   3f2a4:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   3f2a8:	ldr	x24, [x28, x0]
   3f2ac:	str	x10, [x28, x8]
   3f2b0:	str	x11, [x28, x0]
   3f2b4:	ldrsw	x1, [x22, #8]
   3f2b8:	sub	x2, x9, #0x1
   3f2bc:	mov	x0, x22
   3f2c0:	bl	c430 <mpfr_cmp_si_2exp@plt>
   3f2c4:	cbz	w0, 3f5f8 <mpfr_pow_z@@Base+0x3f0>
   3f2c8:	ldr	w8, [x21, #4]
   3f2cc:	cmp	w8, #0x1
   3f2d0:	b.lt	3f30c <mpfr_pow_z@@Base+0x104>  // b.tstop
   3f2d4:	mov	w4, #0x1                   	// #1
   3f2d8:	mov	x0, x19
   3f2dc:	mov	x1, x22
   3f2e0:	mov	x2, x21
   3f2e4:	mov	w3, w27
   3f2e8:	bl	3f998 <mpfr_pow_z@@Base+0x790>
   3f2ec:	mov	w21, w0
   3f2f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f2f4:	ldr	x1, [x0, #2656]
   3f2f8:	add	x0, x0, #0xa60
   3f2fc:	blr	x1
   3f300:	ldr	w8, [x28, x0]
   3f304:	orr	w26, w8, w26
   3f308:	b	3f51c <mpfr_pow_z@@Base+0x314>
   3f30c:	ldr	x9, [x21, #8]
   3f310:	neg	w8, w8
   3f314:	ldr	x23, [x19]
   3f318:	str	x24, [sp, #16]
   3f31c:	add	x9, x9, w8, uxtw #3
   3f320:	ldur	x9, [x9, #-8]
   3f324:	lsl	x8, x8, #6
   3f328:	subs	x25, x23, #0x1
   3f32c:	clz	x9, x9
   3f330:	sub	x24, x8, x9
   3f334:	b.eq	3f784 <mpfr_pow_z@@Base+0x57c>  // b.none
   3f338:	b.le	3f800 <mpfr_pow_z@@Base+0x5f8>
   3f33c:	clz	x8, x25
   3f340:	mov	w9, #0x40                  	// #64
   3f344:	sub	x8, x9, x8
   3f348:	add	x9, x23, x24
   3f34c:	add	x8, x9, x8
   3f350:	add	x23, x8, #0x3
   3f354:	sub	x0, x29, #0x20
   3f358:	mov	x1, x23
   3f35c:	str	x20, [sp, #24]
   3f360:	bl	cad0 <mpfr_init2@plt>
   3f364:	ldr	x8, [x22, #16]
   3f368:	cmp	x8, #0x1
   3f36c:	b.lt	3f384 <mpfr_pow_z@@Base+0x17c>  // b.tstop
   3f370:	ldr	w8, [x22, #8]
   3f374:	cmp	w8, #0x0
   3f378:	mov	w8, #0x2                   	// #2
   3f37c:	cinc	w3, w8, le
   3f380:	b	3f388 <mpfr_pow_z@@Base+0x180>
   3f384:	mov	w3, #0x1                   	// #1
   3f388:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f38c:	ldr	x1, [x0, #2656]
   3f390:	add	x0, x0, #0xa60
   3f394:	blr	x1
   3f398:	mov	x25, x0
   3f39c:	str	wzr, [x28, x0]
   3f3a0:	sub	x0, x29, #0x20
   3f3a4:	mov	w1, #0x1                   	// #1
   3f3a8:	mov	x2, x22
   3f3ac:	str	w3, [sp, #4]
   3f3b0:	bl	c350 <mpfr_ui_div@plt>
   3f3b4:	ldrb	w8, [x28, x25]
   3f3b8:	tbnz	w8, #1, 3f634 <mpfr_pow_z@@Base+0x42c>
   3f3bc:	mov	x8, #0xfffffffffffffffe    	// #-2
   3f3c0:	cmp	w27, #0x0
   3f3c4:	mov	w9, #0x40                  	// #64
   3f3c8:	sub	x25, x8, x24
   3f3cc:	cset	w24, eq  // eq = none
   3f3d0:	str	x9, [sp, #8]
   3f3d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f3d8:	ldr	x1, [x0, #2656]
   3f3dc:	add	x0, x0, #0xa60
   3f3e0:	blr	x1
   3f3e4:	mov	w20, w27
   3f3e8:	mov	x27, x0
   3f3ec:	str	wzr, [x28, x0]
   3f3f0:	sub	x0, x29, #0x20
   3f3f4:	sub	x1, x29, #0x20
   3f3f8:	mov	x2, x21
   3f3fc:	mov	w3, w20
   3f400:	mov	w4, wzr
   3f404:	bl	3f998 <mpfr_pow_z@@Base+0x790>
   3f408:	ldr	w8, [x28, x27]
   3f40c:	mov	w27, w20
   3f410:	tbnz	w8, #1, 3f634 <mpfr_pow_z@@Base+0x42c>
   3f414:	tbnz	w8, #0, 3f78c <mpfr_pow_z@@Base+0x584>
   3f418:	ldur	x8, [x29, #-16]
   3f41c:	mov	x9, #0x2                   	// #2
   3f420:	movk	x9, #0x8000, lsl #48
   3f424:	add	x9, x9, #0x2
   3f428:	cmp	x8, x9
   3f42c:	b.lt	3f464 <mpfr_pow_z@@Base+0x25c>  // b.tstop
   3f430:	ldur	x8, [x29, #-32]
   3f434:	ldr	x9, [x19]
   3f438:	ldur	x0, [x29, #-8]
   3f43c:	add	x2, x25, x23
   3f440:	sub	x10, x8, #0x1
   3f444:	add	x8, x8, #0x3e
   3f448:	cmp	x10, #0x0
   3f44c:	csel	x8, x8, x10, lt  // lt = tstop
   3f450:	asr	x8, x8, #6
   3f454:	add	x1, x8, #0x1
   3f458:	add	x3, x9, x24
   3f45c:	bl	c3d0 <mpfr_round_p@plt>
   3f460:	cbnz	w0, 3f4f8 <mpfr_pow_z@@Base+0x2f0>
   3f464:	mov	x8, #0x2                   	// #2
   3f468:	ldr	x27, [sp, #8]
   3f46c:	movk	x8, #0x8000, lsl #48
   3f470:	sub	x8, x8, x23
   3f474:	sub	x8, x8, #0x103
   3f478:	cmp	x27, x8
   3f47c:	b.gt	3f4dc <mpfr_pow_z@@Base+0x2d4>
   3f480:	add	x23, x27, x23
   3f484:	cmp	x23, #0x0
   3f488:	cinc	x8, x23, lt  // lt = tstop
   3f48c:	asr	x8, x8, #1
   3f490:	sub	x0, x29, #0x20
   3f494:	mov	x1, x23
   3f498:	str	x8, [sp, #8]
   3f49c:	bl	bf80 <mpfr_set_prec@plt>
   3f4a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f4a4:	ldr	x1, [x0, #2656]
   3f4a8:	add	x0, x0, #0xa60
   3f4ac:	blr	x1
   3f4b0:	ldr	w3, [sp, #4]
   3f4b4:	mov	x27, x0
   3f4b8:	str	wzr, [x28, x0]
   3f4bc:	sub	x0, x29, #0x20
   3f4c0:	mov	w1, #0x1                   	// #1
   3f4c4:	mov	x2, x22
   3f4c8:	bl	c350 <mpfr_ui_div@plt>
   3f4cc:	ldrb	w8, [x28, x27]
   3f4d0:	mov	w27, w20
   3f4d4:	tbz	w8, #1, 3f3d4 <mpfr_pow_z@@Base+0x1cc>
   3f4d8:	b	3f634 <mpfr_pow_z@@Base+0x42c>
   3f4dc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3f4e0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   3f4e4:	mov	w1, #0x169                 	// #361
   3f4e8:	add	x0, x0, #0x8a0
   3f4ec:	add	x2, x2, #0xe2
   3f4f0:	bl	cb90 <mpfr_assert_fail@plt>
   3f4f4:	b	3f480 <mpfr_pow_z@@Base+0x278>
   3f4f8:	ldur	w3, [x29, #-24]
   3f4fc:	sub	x1, x29, #0x20
   3f500:	mov	x0, x19
   3f504:	mov	w2, w27
   3f508:	bl	c6f0 <mpfr_set4@plt>
   3f50c:	mov	w21, w0
   3f510:	sub	x0, x29, #0x20
   3f514:	bl	c110 <mpfr_clear@plt>
   3f518:	ldp	x24, x20, [sp, #16]
   3f51c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f520:	ldr	x1, [x0, #2656]
   3f524:	add	x0, x0, #0xa60
   3f528:	blr	x1
   3f52c:	str	w26, [x28, x0]
   3f530:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f534:	ldr	x1, [x0, #2592]
   3f538:	add	x0, x0, #0xa20
   3f53c:	blr	x1
   3f540:	str	x20, [x28, x0]
   3f544:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f548:	ldr	x1, [x0, #2624]
   3f54c:	add	x0, x0, #0xa40
   3f550:	blr	x1
   3f554:	str	x24, [x28, x0]
   3f558:	ldr	x8, [x19, #16]
   3f55c:	cmp	x8, x24
   3f560:	b.gt	3f620 <mpfr_pow_z@@Base+0x418>
   3f564:	cmp	x8, x20
   3f568:	b.lt	3f620 <mpfr_pow_z@@Base+0x418>  // b.tstop
   3f56c:	cbz	w21, 3f588 <mpfr_pow_z@@Base+0x380>
   3f570:	orr	w8, w26, #0x8
   3f574:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f578:	ldr	x1, [x0, #2656]
   3f57c:	add	x0, x0, #0xa60
   3f580:	blr	x1
   3f584:	str	w8, [x28, x0]
   3f588:	mov	w0, w21
   3f58c:	ldp	x20, x19, [sp, #208]
   3f590:	ldp	x22, x21, [sp, #192]
   3f594:	ldp	x24, x23, [sp, #176]
   3f598:	ldp	x26, x25, [sp, #160]
   3f59c:	ldp	x28, x27, [sp, #144]
   3f5a0:	ldp	x29, x30, [sp, #128]
   3f5a4:	add	sp, sp, #0xe0
   3f5a8:	ret
   3f5ac:	mov	w1, #0x1                   	// #1
   3f5b0:	mov	x0, x19
   3f5b4:	mov	x2, xzr
   3f5b8:	mov	w3, w27
   3f5bc:	bl	c640 <mpfr_set_ui_2exp@plt>
   3f5c0:	b	3f938 <mpfr_pow_z@@Base+0x730>
   3f5c4:	cmp	x9, x12
   3f5c8:	b.ne	3f6a4 <mpfr_pow_z@@Base+0x49c>  // b.any
   3f5cc:	str	x12, [x19, #16]
   3f5d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f5d4:	ldr	x1, [x0, #2656]
   3f5d8:	add	x0, x0, #0xa60
   3f5dc:	blr	x1
   3f5e0:	mrs	x8, tpidr_el0
   3f5e4:	ldr	w9, [x8, x0]
   3f5e8:	mov	w21, wzr
   3f5ec:	orr	w9, w9, #0x4
   3f5f0:	str	w9, [x8, x0]
   3f5f4:	b	3f588 <mpfr_pow_z@@Base+0x380>
   3f5f8:	ldr	x8, [x21, #8]
   3f5fc:	ldr	w9, [x21, #4]
   3f600:	ldr	x23, [x22, #16]
   3f604:	ldr	w8, [x8]
   3f608:	cmp	w9, #0x0
   3f60c:	cset	w9, ne  // ne = any
   3f610:	tst	w8, w9
   3f614:	b.eq	3f6e8 <mpfr_pow_z@@Base+0x4e0>  // b.none
   3f618:	ldrsw	x1, [x22, #8]
   3f61c:	b	3f6ec <mpfr_pow_z@@Base+0x4e4>
   3f620:	mov	x0, x19
   3f624:	mov	w1, w21
   3f628:	mov	w2, w27
   3f62c:	bl	cb80 <mpfr_check_range@plt>
   3f630:	b	3f938 <mpfr_pow_z@@Base+0x730>
   3f634:	sub	x0, x29, #0x20
   3f638:	bl	c110 <mpfr_clear@plt>
   3f63c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f640:	ldr	x1, [x0, #2656]
   3f644:	add	x0, x0, #0xa60
   3f648:	blr	x1
   3f64c:	str	w26, [x28, x0]
   3f650:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f654:	ldr	x1, [x0, #2592]
   3f658:	add	x0, x0, #0xa20
   3f65c:	blr	x1
   3f660:	ldr	x8, [sp, #24]
   3f664:	str	x8, [x28, x0]
   3f668:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f66c:	ldr	x1, [x0, #2624]
   3f670:	add	x0, x0, #0xa40
   3f674:	blr	x1
   3f678:	ldr	x8, [sp, #16]
   3f67c:	str	x8, [x28, x0]
   3f680:	ldr	x8, [x21, #8]
   3f684:	ldr	w9, [x21, #4]
   3f688:	ldr	w8, [x8]
   3f68c:	cmp	w9, #0x0
   3f690:	cset	w9, ne  // ne = any
   3f694:	tst	w8, w9
   3f698:	b.eq	3f81c <mpfr_pow_z@@Base+0x614>  // b.none
   3f69c:	ldr	w2, [x22, #8]
   3f6a0:	b	3f820 <mpfr_pow_z@@Base+0x618>
   3f6a4:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   3f6a8:	cmp	x9, x11
   3f6ac:	b.ne	3f830 <mpfr_pow_z@@Base+0x628>  // b.any
   3f6b0:	cmp	w10, #0x0
   3f6b4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   3f6b8:	csel	x9, x11, x9, gt
   3f6bc:	str	x9, [x19, #16]
   3f6c0:	ldr	w10, [x22, #8]
   3f6c4:	mov	w9, #0x1                   	// #1
   3f6c8:	tbz	w10, #31, 3f6dc <mpfr_pow_z@@Base+0x4d4>
   3f6cc:	ldr	x10, [x21, #8]
   3f6d0:	ldr	w10, [x10]
   3f6d4:	tst	w10, w8
   3f6d8:	cneg	w9, w9, ne  // ne = any
   3f6dc:	mov	w21, wzr
   3f6e0:	str	w9, [x19, #8]
   3f6e4:	b	3f588 <mpfr_pow_z@@Base+0x380>
   3f6e8:	mov	w1, #0x1                   	// #1
   3f6ec:	mov	x0, x19
   3f6f0:	mov	x2, xzr
   3f6f4:	mov	w3, w27
   3f6f8:	bl	bb40 <mpfr_set_si_2exp@plt>
   3f6fc:	sub	x0, x29, #0x20
   3f700:	bl	c040 <mpfr_mpz_init@plt>
   3f704:	sub	x2, x23, #0x1
   3f708:	sub	x0, x29, #0x20
   3f70c:	mov	x1, x21
   3f710:	bl	c6d0 <__gmpz_mul_si@plt>
   3f714:	sub	x0, x29, #0x20
   3f718:	sub	x1, x29, #0x20
   3f71c:	mov	w2, #0x1                   	// #1
   3f720:	bl	c3c0 <__gmpz_add_ui@plt>
   3f724:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f728:	ldr	x1, [x0, #2592]
   3f72c:	add	x0, x0, #0xa20
   3f730:	blr	x1
   3f734:	ldr	x1, [x28, x0]
   3f738:	sub	x0, x29, #0x20
   3f73c:	bl	c850 <__gmpz_cmp_si@plt>
   3f740:	tbnz	w0, #31, 3f948 <mpfr_pow_z@@Base+0x740>
   3f744:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f748:	ldr	x1, [x0, #2624]
   3f74c:	add	x0, x0, #0xa40
   3f750:	blr	x1
   3f754:	ldr	x1, [x28, x0]
   3f758:	sub	x0, x29, #0x20
   3f75c:	bl	c850 <__gmpz_cmp_si@plt>
   3f760:	cmp	w0, #0x1
   3f764:	b.ge	3f964 <mpfr_pow_z@@Base+0x75c>  // b.tcont
   3f768:	sub	x0, x29, #0x20
   3f76c:	bl	bae0 <__gmpz_get_si@plt>
   3f770:	mov	w21, wzr
   3f774:	str	x0, [x19, #16]
   3f778:	sub	x0, x29, #0x20
   3f77c:	bl	c210 <mpfr_mpz_clear@plt>
   3f780:	b	3f2f0 <mpfr_pow_z@@Base+0xe8>
   3f784:	mov	x8, xzr
   3f788:	b	3f348 <mpfr_pow_z@@Base+0x140>
   3f78c:	sub	x0, x29, #0x20
   3f790:	bl	c110 <mpfr_clear@plt>
   3f794:	cbz	w27, 3f844 <mpfr_pow_z@@Base+0x63c>
   3f798:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f79c:	ldr	x1, [x0, #2656]
   3f7a0:	add	x0, x0, #0xa60
   3f7a4:	blr	x1
   3f7a8:	str	w26, [x28, x0]
   3f7ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f7b0:	ldr	x1, [x0, #2592]
   3f7b4:	add	x0, x0, #0xa20
   3f7b8:	blr	x1
   3f7bc:	ldr	x8, [sp, #24]
   3f7c0:	str	x8, [x28, x0]
   3f7c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f7c8:	ldr	x1, [x0, #2624]
   3f7cc:	add	x0, x0, #0xa40
   3f7d0:	blr	x1
   3f7d4:	ldr	x8, [sp, #16]
   3f7d8:	str	x8, [x28, x0]
   3f7dc:	ldr	x8, [x21, #8]
   3f7e0:	ldr	w9, [x21, #4]
   3f7e4:	ldr	w8, [x8]
   3f7e8:	cmp	w9, #0x0
   3f7ec:	cset	w9, ne  // ne = any
   3f7f0:	tst	w8, w9
   3f7f4:	b.eq	3f928 <mpfr_pow_z@@Base+0x720>  // b.none
   3f7f8:	ldr	w2, [x22, #8]
   3f7fc:	b	3f92c <mpfr_pow_z@@Base+0x724>
   3f800:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3f804:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   3f808:	add	x0, x0, #0x8a0
   3f80c:	add	x2, x2, #0xb6
   3f810:	mov	w1, #0x118                 	// #280
   3f814:	bl	cb90 <mpfr_assert_fail@plt>
   3f818:	b	3f33c <mpfr_pow_z@@Base+0x134>
   3f81c:	mov	w2, #0x1                   	// #1
   3f820:	mov	x0, x19
   3f824:	mov	w1, w27
   3f828:	bl	bff0 <mpfr_overflow@plt>
   3f82c:	b	3f938 <mpfr_pow_z@@Base+0x730>
   3f830:	cmp	w10, #0x1
   3f834:	b.lt	3f8cc <mpfr_pow_z@@Base+0x6c4>  // b.tstop
   3f838:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   3f83c:	str	x8, [x19, #16]
   3f840:	b	3f8f4 <mpfr_pow_z@@Base+0x6ec>
   3f844:	add	x0, sp, #0x40
   3f848:	mov	w1, #0x2                   	// #2
   3f84c:	bl	cad0 <mpfr_init2@plt>
   3f850:	ldr	w8, [x21, #4]
   3f854:	add	x0, sp, #0x20
   3f858:	cmp	w8, #0x0
   3f85c:	cneg	w8, w8, mi  // mi = first
   3f860:	lsl	w1, w8, #6
   3f864:	bl	cad0 <mpfr_init2@plt>
   3f868:	add	x0, sp, #0x20
   3f86c:	mov	x1, x21
   3f870:	mov	w2, wzr
   3f874:	bl	c2b0 <mpfr_set_z@plt>
   3f878:	cbnz	w0, 3f97c <mpfr_pow_z@@Base+0x774>
   3f87c:	add	x0, sp, #0x40
   3f880:	add	x2, sp, #0x20
   3f884:	mov	w4, #0x1                   	// #1
   3f888:	mov	x1, x22
   3f88c:	mov	w3, wzr
   3f890:	mov	x5, xzr
   3f894:	bl	c740 <mpfr_pow_general@plt>
   3f898:	mov	w21, w0
   3f89c:	add	x0, sp, #0x20
   3f8a0:	bl	c110 <mpfr_clear@plt>
   3f8a4:	ldr	w3, [sp, #72]
   3f8a8:	add	x1, sp, #0x40
   3f8ac:	mov	x0, x19
   3f8b0:	mov	w2, wzr
   3f8b4:	bl	c6f0 <mpfr_set4@plt>
   3f8b8:	add	x0, sp, #0x40
   3f8bc:	bl	c110 <mpfr_clear@plt>
   3f8c0:	mov	w27, wzr
   3f8c4:	orr	w26, w26, #0x1
   3f8c8:	b	3f518 <mpfr_pow_z@@Base+0x310>
   3f8cc:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   3f8d0:	str	x8, [x19, #16]
   3f8d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3f8d8:	ldr	x1, [x0, #2656]
   3f8dc:	add	x0, x0, #0xa60
   3f8e0:	blr	x1
   3f8e4:	mrs	x8, tpidr_el0
   3f8e8:	ldr	w9, [x8, x0]
   3f8ec:	orr	w9, w9, #0x20
   3f8f0:	str	w9, [x8, x0]
   3f8f4:	ldr	w8, [x22, #8]
   3f8f8:	cmp	w8, #0x1
   3f8fc:	b.lt	3f908 <mpfr_pow_z@@Base+0x700>  // b.tstop
   3f900:	add	x8, x19, #0x8
   3f904:	b	3f918 <mpfr_pow_z@@Base+0x710>
   3f908:	ldr	x8, [x21, #8]
   3f90c:	ldrb	w9, [x8]
   3f910:	add	x8, x19, #0x8
   3f914:	tbnz	w9, #0, 3f940 <mpfr_pow_z@@Base+0x738>
   3f918:	mov	w9, #0x1                   	// #1
   3f91c:	mov	w21, wzr
   3f920:	str	w9, [x8]
   3f924:	b	3f588 <mpfr_pow_z@@Base+0x380>
   3f928:	mov	w2, #0x1                   	// #1
   3f92c:	mov	x0, x19
   3f930:	mov	w1, w20
   3f934:	bl	c420 <mpfr_underflow@plt>
   3f938:	mov	w21, w0
   3f93c:	b	3f588 <mpfr_pow_z@@Base+0x380>
   3f940:	mov	w9, #0xffffffff            	// #-1
   3f944:	b	3f91c <mpfr_pow_z@@Base+0x714>
   3f948:	ldr	w2, [x19, #8]
   3f94c:	cmp	w27, #0x0
   3f950:	csinc	w27, w27, wzr, ne  // ne = any
   3f954:	mov	x0, x19
   3f958:	mov	w1, w27
   3f95c:	bl	c420 <mpfr_underflow@plt>
   3f960:	b	3f974 <mpfr_pow_z@@Base+0x76c>
   3f964:	ldr	w2, [x19, #8]
   3f968:	mov	x0, x19
   3f96c:	mov	w1, w27
   3f970:	bl	bff0 <mpfr_overflow@plt>
   3f974:	mov	w21, w0
   3f978:	b	3f778 <mpfr_pow_z@@Base+0x570>
   3f97c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3f980:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   3f984:	add	x0, x0, #0x8a0
   3f988:	add	x2, x2, #0xde0
   3f98c:	mov	w1, #0x155                 	// #341
   3f990:	bl	cb90 <mpfr_assert_fail@plt>
   3f994:	b	3f87c <mpfr_pow_z@@Base+0x674>
   3f998:	sub	sp, sp, #0x130
   3f99c:	stp	x22, x21, [sp, #272]
   3f9a0:	stp	x20, x19, [sp, #288]
   3f9a4:	mov	x20, x1
   3f9a8:	mov	x21, x0
   3f9ac:	mov	w1, #0x1                   	// #1
   3f9b0:	mov	x0, x2
   3f9b4:	stp	x29, x30, [sp, #208]
   3f9b8:	stp	x28, x27, [sp, #224]
   3f9bc:	stp	x26, x25, [sp, #240]
   3f9c0:	stp	x24, x23, [sp, #256]
   3f9c4:	add	x29, sp, #0xd0
   3f9c8:	mov	w26, w4
   3f9cc:	mov	w19, w3
   3f9d0:	mov	x22, x2
   3f9d4:	bl	bcb0 <__gmpz_cmpabs_ui@plt>
   3f9d8:	cbz	w0, 3fcd8 <mpfr_pow_z@@Base+0xad0>
   3f9dc:	ldr	q0, [x22]
   3f9e0:	str	x22, [sp]
   3f9e4:	stur	q0, [x29, #-64]
   3f9e8:	ldur	w8, [x29, #-60]
   3f9ec:	cmp	w8, #0x0
   3f9f0:	cneg	w8, w8, mi  // mi = first
   3f9f4:	stur	w8, [x29, #-60]
   3f9f8:	ldr	w9, [x22, #4]
   3f9fc:	ldr	x10, [x22, #8]
   3fa00:	ldr	x8, [x20, #16]
   3fa04:	cmp	w9, #0x0
   3fa08:	cneg	w11, w9, mi  // mi = first
   3fa0c:	add	x9, x10, w11, uxtw #3
   3fa10:	ldur	x9, [x9, #-8]
   3fa14:	cmp	x8, #0x0
   3fa18:	lsl	x10, x11, #6
   3fa1c:	clz	x9, x9
   3fa20:	b.le	3fa2c <mpfr_pow_z@@Base+0x824>
   3fa24:	mov	w24, #0x1                   	// #1
   3fa28:	b	3fa3c <mpfr_pow_z@@Base+0x834>
   3fa2c:	ldr	w11, [x20, #8]
   3fa30:	cmp	w11, #0x0
   3fa34:	mov	w11, #0x2                   	// #2
   3fa38:	cinc	w24, w11, le
   3fa3c:	ldr	x22, [x21]
   3fa40:	cmp	x8, #0x0
   3fa44:	mov	w8, #0x2                   	// #2
   3fa48:	sub	x23, x10, x9
   3fa4c:	cinc	w25, w8, gt
   3fa50:	cbz	w26, 3fa80 <mpfr_pow_z@@Base+0x878>
   3fa54:	cmp	x22, #0x1
   3fa58:	b.eq	3fd44 <mpfr_pow_z@@Base+0xb3c>  // b.none
   3fa5c:	mov	x8, x22
   3fa60:	b.le	3fd4c <mpfr_pow_z@@Base+0xb44>
   3fa64:	sub	x8, x8, #0x1
   3fa68:	clz	x8, x8
   3fa6c:	mov	w9, #0x40                  	// #64
   3fa70:	sub	x8, x9, x8
   3fa74:	add	x9, x23, x22
   3fa78:	add	x8, x9, x8
   3fa7c:	add	x22, x8, #0x3
   3fa80:	sub	x0, x29, #0x28
   3fa84:	mov	x1, x22
   3fa88:	bl	cad0 <mpfr_init2@plt>
   3fa8c:	mvn	x8, x23
   3fa90:	str	x8, [sp, #32]
   3fa94:	mov	x8, x23
   3fa98:	str	x8, [sp, #64]
   3fa9c:	sub	x8, x8, #0x3
   3faa0:	sub	x23, x23, #0x2
   3faa4:	str	x8, [sp, #40]
   3faa8:	cmp	w19, #0x0
   3faac:	mov	w8, #0x40                  	// #64
   3fab0:	str	w19, [sp, #60]
   3fab4:	stp	x23, x8, [sp, #8]
   3fab8:	mrs	x19, tpidr_el0
   3fabc:	mov	w27, #0x27                  	// #39
   3fac0:	cset	w8, eq  // eq = none
   3fac4:	str	x8, [sp, #24]
   3fac8:	str	w26, [sp, #76]
   3facc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3fad0:	ldr	x1, [x0, #2656]
   3fad4:	add	x0, x0, #0xa60
   3fad8:	blr	x1
   3fadc:	str	wzr, [x19, x0]
   3fae0:	sub	x0, x29, #0x28
   3fae4:	mov	x1, x20
   3fae8:	mov	x2, x20
   3faec:	mov	w3, w25
   3faf0:	bl	be00 <mpfr_mul@plt>
   3faf4:	mov	w28, w0
   3faf8:	sub	x0, x29, #0x40
   3fafc:	mov	x1, x23
   3fb00:	bl	c080 <__gmpz_tstbit@plt>
   3fb04:	str	x22, [sp, #48]
   3fb08:	cbz	w0, 3fb24 <mpfr_pow_z@@Base+0x91c>
   3fb0c:	sub	x0, x29, #0x28
   3fb10:	sub	x1, x29, #0x28
   3fb14:	mov	x2, x20
   3fb18:	mov	w3, w24
   3fb1c:	bl	be00 <mpfr_mul@plt>
   3fb20:	orr	w28, w0, w28
   3fb24:	ldr	x8, [sp, #64]
   3fb28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3fb2c:	ldr	x1, [x0, #2656]
   3fb30:	add	x0, x0, #0xa60
   3fb34:	blr	x1
   3fb38:	ldr	w22, [x19, x0]
   3fb3c:	mov	x26, x21
   3fb40:	cmp	x8, #0x3
   3fb44:	b.lt	3fbb8 <mpfr_pow_z@@Base+0x9b0>  // b.tstop
   3fb48:	and	w8, w22, w27
   3fb4c:	cbnz	w8, 3fbb8 <mpfr_pow_z@@Base+0x9b0>
   3fb50:	ldr	x21, [sp, #40]
   3fb54:	sub	x0, x29, #0x28
   3fb58:	sub	x1, x29, #0x28
   3fb5c:	sub	x2, x29, #0x28
   3fb60:	mov	w3, w25
   3fb64:	bl	be00 <mpfr_mul@plt>
   3fb68:	orr	w28, w0, w28
   3fb6c:	sub	x0, x29, #0x40
   3fb70:	mov	x1, x21
   3fb74:	bl	c080 <__gmpz_tstbit@plt>
   3fb78:	cbz	w0, 3fb94 <mpfr_pow_z@@Base+0x98c>
   3fb7c:	sub	x0, x29, #0x28
   3fb80:	sub	x1, x29, #0x28
   3fb84:	mov	x2, x20
   3fb88:	mov	w3, w24
   3fb8c:	bl	be00 <mpfr_mul@plt>
   3fb90:	orr	w28, w0, w28
   3fb94:	subs	x21, x21, #0x1
   3fb98:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3fb9c:	ldr	x1, [x0, #2656]
   3fba0:	add	x0, x0, #0xa60
   3fba4:	blr	x1
   3fba8:	ldr	w22, [x19, x0]
   3fbac:	b.lt	3fbb8 <mpfr_pow_z@@Base+0x9b0>  // b.tstop
   3fbb0:	and	w8, w22, w27
   3fbb4:	cbz	w8, 3fb54 <mpfr_pow_z@@Base+0x94c>
   3fbb8:	mov	x21, x26
   3fbbc:	ldr	w26, [sp, #76]
   3fbc0:	tst	w22, #0x3
   3fbc4:	b.ne	3fc88 <mpfr_pow_z@@Base+0xa80>  // b.any
   3fbc8:	cbz	w26, 3fc88 <mpfr_pow_z@@Base+0xa80>
   3fbcc:	cbz	w28, 3fc88 <mpfr_pow_z@@Base+0xa80>
   3fbd0:	ldur	x8, [x29, #-24]
   3fbd4:	mov	x9, #0xfffffffffffffeff    	// #-257
   3fbd8:	movk	x9, #0x7fff, lsl #48
   3fbdc:	add	x9, x9, #0x105
   3fbe0:	cmp	x8, x9
   3fbe4:	b.lt	3fc28 <mpfr_pow_z@@Base+0xa20>  // b.tstop
   3fbe8:	ldur	x8, [x29, #-40]
   3fbec:	ldr	x9, [sp, #48]
   3fbf0:	ldr	x10, [sp, #32]
   3fbf4:	ldur	x0, [x29, #-16]
   3fbf8:	add	x2, x9, x10
   3fbfc:	sub	x10, x8, #0x1
   3fc00:	add	x8, x8, #0x3e
   3fc04:	cmp	x10, #0x0
   3fc08:	csel	x8, x8, x10, lt  // lt = tstop
   3fc0c:	asr	x8, x8, #6
   3fc10:	ldr	x9, [x21]
   3fc14:	add	x1, x8, #0x1
   3fc18:	ldr	x8, [sp, #24]
   3fc1c:	add	x3, x9, x8
   3fc20:	bl	c3d0 <mpfr_round_p@plt>
   3fc24:	cbnz	w0, 3fc88 <mpfr_pow_z@@Base+0xa80>
   3fc28:	ldr	x22, [sp, #48]
   3fc2c:	ldr	x23, [sp, #16]
   3fc30:	mov	x8, #0xfffffffffffffeff    	// #-257
   3fc34:	movk	x8, #0x7fff, lsl #48
   3fc38:	sub	x8, x8, x22
   3fc3c:	cmp	x23, x8
   3fc40:	b.gt	3fc6c <mpfr_pow_z@@Base+0xa64>
   3fc44:	add	x22, x22, x23
   3fc48:	cmp	x22, #0x0
   3fc4c:	cinc	x8, x22, lt  // lt = tstop
   3fc50:	asr	x8, x8, #1
   3fc54:	sub	x0, x29, #0x28
   3fc58:	mov	x1, x22
   3fc5c:	str	x8, [sp, #16]
   3fc60:	bl	bf80 <mpfr_set_prec@plt>
   3fc64:	ldr	x23, [sp, #8]
   3fc68:	b	3facc <mpfr_pow_z@@Base+0x8c4>
   3fc6c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3fc70:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   3fc74:	mov	w1, #0x64                  	// #100
   3fc78:	add	x0, x0, #0x8a0
   3fc7c:	add	x2, x2, #0x922
   3fc80:	bl	cb90 <mpfr_assert_fail@plt>
   3fc84:	b	3fc44 <mpfr_pow_z@@Base+0xa3c>
   3fc88:	tbnz	w22, #1, 3fcf4 <mpfr_pow_z@@Base+0xaec>
   3fc8c:	ldr	w10, [sp, #60]
   3fc90:	tbnz	w22, #0, 3fd1c <mpfr_pow_z@@Base+0xb14>
   3fc94:	ldur	w3, [x29, #-32]
   3fc98:	sub	x1, x29, #0x28
   3fc9c:	mov	x0, x21
   3fca0:	mov	w2, w10
   3fca4:	bl	c6f0 <mpfr_set4@plt>
   3fca8:	mov	w20, w0
   3fcac:	sub	x0, x29, #0x28
   3fcb0:	bl	c110 <mpfr_clear@plt>
   3fcb4:	mov	w0, w20
   3fcb8:	ldp	x20, x19, [sp, #288]
   3fcbc:	ldp	x22, x21, [sp, #272]
   3fcc0:	ldp	x24, x23, [sp, #256]
   3fcc4:	ldp	x26, x25, [sp, #240]
   3fcc8:	ldp	x28, x27, [sp, #224]
   3fccc:	ldp	x29, x30, [sp, #208]
   3fcd0:	add	sp, sp, #0x130
   3fcd4:	ret
   3fcd8:	ldr	w3, [x20, #8]
   3fcdc:	mov	x0, x21
   3fce0:	mov	x1, x20
   3fce4:	mov	w2, w19
   3fce8:	bl	c6f0 <mpfr_set4@plt>
   3fcec:	mov	w20, w0
   3fcf0:	b	3fcb4 <mpfr_pow_z@@Base+0xaac>
   3fcf4:	ldur	x8, [x29, #-56]
   3fcf8:	ldur	w9, [x29, #-60]
   3fcfc:	ldr	w1, [sp, #60]
   3fd00:	ldr	w8, [x8]
   3fd04:	cmp	w9, #0x0
   3fd08:	cset	w9, ne  // ne = any
   3fd0c:	tst	w8, w9
   3fd10:	b.eq	3fd6c <mpfr_pow_z@@Base+0xb64>  // b.none
   3fd14:	ldr	w2, [x20, #8]
   3fd18:	b	3fd70 <mpfr_pow_z@@Base+0xb68>
   3fd1c:	cbz	w10, 3fd7c <mpfr_pow_z@@Base+0xb74>
   3fd20:	ldur	x8, [x29, #-56]
   3fd24:	ldur	w9, [x29, #-60]
   3fd28:	ldr	w8, [x8]
   3fd2c:	cmp	w9, #0x0
   3fd30:	cset	w9, ne  // ne = any
   3fd34:	tst	w8, w9
   3fd38:	b.eq	3fe18 <mpfr_pow_z@@Base+0xc10>  // b.none
   3fd3c:	ldr	w2, [x20, #8]
   3fd40:	b	3fe1c <mpfr_pow_z@@Base+0xc14>
   3fd44:	mov	x8, xzr
   3fd48:	b	3fa74 <mpfr_pow_z@@Base+0x86c>
   3fd4c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3fd50:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   3fd54:	add	x0, x0, #0x8a0
   3fd58:	add	x2, x2, #0xe01
   3fd5c:	mov	w1, #0x42                  	// #66
   3fd60:	bl	cb90 <mpfr_assert_fail@plt>
   3fd64:	ldr	x8, [x21]
   3fd68:	b	3fa64 <mpfr_pow_z@@Base+0x85c>
   3fd6c:	mov	w2, #0x1                   	// #1
   3fd70:	mov	x0, x21
   3fd74:	bl	bff0 <mpfr_overflow@plt>
   3fd78:	b	3fca8 <mpfr_pow_z@@Base+0xaa0>
   3fd7c:	sub	x0, x29, #0x60
   3fd80:	mov	w1, #0x2                   	// #2
   3fd84:	bl	cad0 <mpfr_init2@plt>
   3fd88:	ldr	x22, [sp]
   3fd8c:	add	x0, sp, #0x50
   3fd90:	ldr	w8, [x22, #4]
   3fd94:	cmp	w8, #0x0
   3fd98:	cneg	w8, w8, mi  // mi = first
   3fd9c:	lsl	w1, w8, #6
   3fda0:	bl	cad0 <mpfr_init2@plt>
   3fda4:	add	x0, sp, #0x50
   3fda8:	mov	x1, x22
   3fdac:	mov	w2, wzr
   3fdb0:	bl	c2b0 <mpfr_set_z@plt>
   3fdb4:	cbnz	w0, 3fe2c <mpfr_pow_z@@Base+0xc24>
   3fdb8:	sub	x0, x29, #0x60
   3fdbc:	add	x2, sp, #0x50
   3fdc0:	mov	w4, #0x1                   	// #1
   3fdc4:	mov	x1, x20
   3fdc8:	mov	w3, wzr
   3fdcc:	mov	x5, xzr
   3fdd0:	bl	c740 <mpfr_pow_general@plt>
   3fdd4:	mov	w20, w0
   3fdd8:	add	x0, sp, #0x50
   3fddc:	bl	c110 <mpfr_clear@plt>
   3fde0:	ldur	w3, [x29, #-88]
   3fde4:	sub	x1, x29, #0x60
   3fde8:	mov	x0, x21
   3fdec:	mov	w2, wzr
   3fdf0:	bl	c6f0 <mpfr_set4@plt>
   3fdf4:	sub	x0, x29, #0x60
   3fdf8:	bl	c110 <mpfr_clear@plt>
   3fdfc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   3fe00:	ldr	x1, [x0, #2656]
   3fe04:	add	x0, x0, #0xa60
   3fe08:	blr	x1
   3fe0c:	mov	w8, #0x9                   	// #9
   3fe10:	str	w8, [x19, x0]
   3fe14:	b	3fcac <mpfr_pow_z@@Base+0xaa4>
   3fe18:	mov	w2, #0x1                   	// #1
   3fe1c:	mov	x0, x21
   3fe20:	mov	w1, w10
   3fe24:	bl	c420 <mpfr_underflow@plt>
   3fe28:	b	3fca8 <mpfr_pow_z@@Base+0xaa0>
   3fe2c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   3fe30:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   3fe34:	add	x0, x0, #0x8a0
   3fe38:	add	x2, x2, #0xde0
   3fe3c:	mov	w1, #0x85                  	// #133
   3fe40:	bl	cb90 <mpfr_assert_fail@plt>
   3fe44:	b	3fdb8 <mpfr_pow_z@@Base+0xbb0>

000000000003fe48 <mpfr_mulhigh_n@@Base>:
   3fe48:	sub	sp, sp, #0x70
   3fe4c:	stp	x24, x23, [sp, #64]
   3fe50:	stp	x22, x21, [sp, #80]
   3fe54:	stp	x20, x19, [sp, #96]
   3fe58:	mov	x19, x3
   3fe5c:	mov	x22, x2
   3fe60:	mov	x23, x1
   3fe64:	cmp	x3, #0x10
   3fe68:	mov	x20, x0
   3fe6c:	stp	x29, x30, [sp, #16]
   3fe70:	stp	x28, x27, [sp, #32]
   3fe74:	stp	x26, x25, [sp, #48]
   3fe78:	add	x29, sp, #0x10
   3fe7c:	b.hi	3ffdc <mpfr_mulhigh_n@@Base+0x194>  // b.pmore
   3fe80:	adrp	x8, 5e000 <mpfr_bases@@Base+0x4f8>
   3fe84:	add	x8, x8, #0x8ca
   3fe88:	ldrsh	x21, [x8, x19, lsl #1]
   3fe8c:	tbnz	x21, #63, 3fff8 <mpfr_mulhigh_n@@Base+0x1b0>
   3fe90:	cbz	x21, 3fed0 <mpfr_mulhigh_n@@Base+0x88>
   3fe94:	mov	w8, #0x2101                	// #8449
   3fe98:	cmp	x19, x8
   3fe9c:	b.lt	3ff00 <mpfr_mulhigh_n@@Base+0xb8>  // b.tstop
   3fea0:	mov	x0, x20
   3fea4:	mov	x1, x23
   3fea8:	mov	x2, x22
   3feac:	mov	x3, x19
   3feb0:	ldp	x20, x19, [sp, #96]
   3feb4:	ldp	x22, x21, [sp, #80]
   3feb8:	ldp	x24, x23, [sp, #64]
   3febc:	ldp	x26, x25, [sp, #48]
   3fec0:	ldp	x28, x27, [sp, #32]
   3fec4:	ldp	x29, x30, [sp, #16]
   3fec8:	add	sp, sp, #0x70
   3fecc:	b	c4c0 <__gmpn_mul_n@plt>
   3fed0:	mov	x0, x20
   3fed4:	mov	x1, x23
   3fed8:	mov	x2, x22
   3fedc:	mov	x3, x19
   3fee0:	ldp	x20, x19, [sp, #96]
   3fee4:	ldp	x22, x21, [sp, #80]
   3fee8:	ldp	x24, x23, [sp, #64]
   3feec:	ldp	x26, x25, [sp, #48]
   3fef0:	ldp	x28, x27, [sp, #32]
   3fef4:	ldp	x29, x30, [sp, #16]
   3fef8:	add	sp, sp, #0x70
   3fefc:	b	4002c <mpfr_mulhigh_n@@Base+0x1e4>
   3ff00:	sub	x24, x19, x21
   3ff04:	add	x0, x20, x24, lsl #4
   3ff08:	add	x1, x23, x24, lsl #3
   3ff0c:	add	x2, x22, x24, lsl #3
   3ff10:	mov	x3, x21
   3ff14:	bl	c4c0 <__gmpn_mul_n@plt>
   3ff18:	add	x1, x23, x21, lsl #3
   3ff1c:	mov	x0, x20
   3ff20:	mov	x2, x22
   3ff24:	mov	x3, x24
   3ff28:	bl	bd30 <mpfr_mulhigh_n@plt>
   3ff2c:	add	x28, x20, x19, lsl #3
   3ff30:	add	x8, x20, x24, lsl #3
   3ff34:	sub	x25, x28, #0x8
   3ff38:	sub	x26, x8, #0x8
   3ff3c:	add	x27, x24, #0x1
   3ff40:	mov	x0, x25
   3ff44:	mov	x1, x25
   3ff48:	mov	x2, x26
   3ff4c:	mov	x3, x27
   3ff50:	bl	c5f0 <__gmpn_add_n@plt>
   3ff54:	str	x0, [sp, #8]
   3ff58:	add	x2, x22, x21, lsl #3
   3ff5c:	mov	x0, x20
   3ff60:	mov	x1, x23
   3ff64:	mov	x3, x24
   3ff68:	bl	bd30 <mpfr_mulhigh_n@plt>
   3ff6c:	mov	x0, x25
   3ff70:	mov	x1, x25
   3ff74:	mov	x2, x26
   3ff78:	mov	x3, x27
   3ff7c:	bl	c5f0 <__gmpn_add_n@plt>
   3ff80:	ldr	x9, [sp, #8]
   3ff84:	ldr	x8, [x28, x24, lsl #3]
   3ff88:	add	x9, x0, x9
   3ff8c:	adds	x8, x8, x9
   3ff90:	str	x8, [x28, x24, lsl #3]
   3ff94:	b.cc	3ffbc <mpfr_mulhigh_n@@Base+0x174>  // b.lo, b.ul, b.last
   3ff98:	mov	w8, #0x1                   	// #1
   3ff9c:	sub	x8, x8, x21
   3ffa0:	add	x9, x20, x19, lsl #4
   3ffa4:	cbz	x8, 3ffbc <mpfr_mulhigh_n@@Base+0x174>
   3ffa8:	ldr	x10, [x9, x8, lsl #3]
   3ffac:	adds	x10, x10, #0x1
   3ffb0:	str	x10, [x9, x8, lsl #3]
   3ffb4:	add	x8, x8, #0x1
   3ffb8:	b.cs	3ffa4 <mpfr_mulhigh_n@@Base+0x15c>  // b.hs, b.nlast
   3ffbc:	ldp	x20, x19, [sp, #96]
   3ffc0:	ldp	x22, x21, [sp, #80]
   3ffc4:	ldp	x24, x23, [sp, #64]
   3ffc8:	ldp	x26, x25, [sp, #48]
   3ffcc:	ldp	x28, x27, [sp, #32]
   3ffd0:	ldp	x29, x30, [sp, #16]
   3ffd4:	add	sp, sp, #0x70
   3ffd8:	ret
   3ffdc:	add	x8, x19, #0x3
   3ffe0:	cmp	x19, #0x0
   3ffe4:	csel	x8, x8, x19, lt  // lt = tstop
   3ffe8:	asr	x9, x8, #2
   3ffec:	lsl	x9, x9, #1
   3fff0:	add	x21, x9, x8, asr #2
   3fff4:	tbz	x21, #63, 3fe90 <mpfr_mulhigh_n@@Base+0x48>
   3fff8:	mov	x0, x20
   3fffc:	mov	x1, x23
   40000:	mov	x2, x19
   40004:	mov	x3, x22
   40008:	mov	x4, x19
   4000c:	ldp	x20, x19, [sp, #96]
   40010:	ldp	x22, x21, [sp, #80]
   40014:	ldp	x24, x23, [sp, #64]
   40018:	ldp	x26, x25, [sp, #48]
   4001c:	ldp	x28, x27, [sp, #32]
   40020:	ldp	x29, x30, [sp, #16]
   40024:	add	sp, sp, #0x70
   40028:	b	c7f0 <__gmpn_mul@plt>
   4002c:	stp	x29, x30, [sp, #-80]!
   40030:	lsl	x8, x3, #3
   40034:	stp	x24, x23, [sp, #32]
   40038:	stp	x22, x21, [sp, #48]
   4003c:	stp	x20, x19, [sp, #64]
   40040:	sub	x8, x8, #0x8
   40044:	ldr	x9, [x2]
   40048:	ldr	x10, [x1, x8]
   4004c:	cmp	x3, #0x2
   40050:	add	x21, x0, x8
   40054:	umulh	x8, x10, x9
   40058:	mul	x9, x9, x10
   4005c:	str	x25, [sp, #16]
   40060:	mov	x29, sp
   40064:	str	x8, [x0, x3, lsl #3]
   40068:	str	x9, [x21]
   4006c:	b.lt	400b4 <mpfr_mulhigh_n@@Base+0x26c>  // b.tstop
   40070:	add	x8, x1, x3, lsl #3
   40074:	mov	x19, x3
   40078:	mov	x20, x2
   4007c:	add	x24, x0, x3, lsl #3
   40080:	sub	x22, x8, #0x10
   40084:	mov	w25, #0x1                   	// #1
   40088:	ldr	x3, [x20, x25, lsl #3]
   4008c:	add	x23, x25, #0x1
   40090:	mov	x0, x21
   40094:	mov	x1, x22
   40098:	mov	x2, x23
   4009c:	bl	cd30 <__gmpn_addmul_1@plt>
   400a0:	str	x0, [x24, x25, lsl #3]
   400a4:	cmp	x19, x23
   400a8:	sub	x22, x22, #0x8
   400ac:	mov	x25, x23
   400b0:	b.ne	40088 <mpfr_mulhigh_n@@Base+0x240>  // b.any
   400b4:	ldp	x20, x19, [sp, #64]
   400b8:	ldp	x22, x21, [sp, #48]
   400bc:	ldp	x24, x23, [sp, #32]
   400c0:	ldr	x25, [sp, #16]
   400c4:	ldp	x29, x30, [sp], #80
   400c8:	ret

00000000000400cc <mpfr_sqrhigh_n@@Base>:
   400cc:	stp	x29, x30, [sp, #-80]!
   400d0:	stp	x22, x21, [sp, #48]
   400d4:	stp	x20, x19, [sp, #64]
   400d8:	mov	x19, x2
   400dc:	mov	x22, x1
   400e0:	cmp	x2, #0x10
   400e4:	mov	x20, x0
   400e8:	stp	x26, x25, [sp, #16]
   400ec:	stp	x24, x23, [sp, #32]
   400f0:	mov	x29, sp
   400f4:	b.hi	401e8 <mpfr_sqrhigh_n@@Base+0x11c>  // b.pmore
   400f8:	adrp	x8, 5e000 <mpfr_bases@@Base+0x4f8>
   400fc:	add	x8, x8, #0x8ca
   40100:	ldrsh	x21, [x8, x19, lsl #1]
   40104:	tbnz	x21, #63, 40200 <mpfr_sqrhigh_n@@Base+0x134>
   40108:	cbz	x21, 401c0 <mpfr_sqrhigh_n@@Base+0xf4>
   4010c:	sub	x23, x19, x21
   40110:	add	x0, x20, x23, lsl #4
   40114:	add	x1, x22, x23, lsl #3
   40118:	mov	x2, x21
   4011c:	bl	c410 <__gmpn_sqr@plt>
   40120:	add	x2, x22, x21, lsl #3
   40124:	mov	x0, x20
   40128:	mov	x1, x22
   4012c:	mov	x3, x23
   40130:	bl	bd30 <mpfr_mulhigh_n@plt>
   40134:	add	x8, x20, x23, lsl #3
   40138:	sub	x22, x8, #0x8
   4013c:	add	x24, x23, #0x1
   40140:	mov	w3, #0x1                   	// #1
   40144:	mov	x0, x22
   40148:	mov	x1, x22
   4014c:	mov	x2, x24
   40150:	bl	bd70 <__gmpn_lshift@plt>
   40154:	add	x26, x20, x19, lsl #3
   40158:	mov	x25, x0
   4015c:	sub	x0, x26, #0x8
   40160:	mov	x1, x0
   40164:	mov	x2, x22
   40168:	mov	x3, x24
   4016c:	bl	c5f0 <__gmpn_add_n@plt>
   40170:	ldr	x8, [x26, x23, lsl #3]
   40174:	add	x9, x0, x25
   40178:	adds	x8, x8, x9
   4017c:	str	x8, [x26, x23, lsl #3]
   40180:	b.cc	401a8 <mpfr_sqrhigh_n@@Base+0xdc>  // b.lo, b.ul, b.last
   40184:	mov	w8, #0x1                   	// #1
   40188:	sub	x8, x8, x21
   4018c:	add	x9, x20, x19, lsl #4
   40190:	cbz	x8, 401a8 <mpfr_sqrhigh_n@@Base+0xdc>
   40194:	ldr	x10, [x9, x8, lsl #3]
   40198:	adds	x10, x10, #0x1
   4019c:	str	x10, [x9, x8, lsl #3]
   401a0:	add	x8, x8, #0x1
   401a4:	b.cs	40190 <mpfr_sqrhigh_n@@Base+0xc4>  // b.hs, b.nlast
   401a8:	ldp	x20, x19, [sp, #64]
   401ac:	ldp	x22, x21, [sp, #48]
   401b0:	ldp	x24, x23, [sp, #32]
   401b4:	ldp	x26, x25, [sp, #16]
   401b8:	ldp	x29, x30, [sp], #80
   401bc:	ret
   401c0:	mov	x0, x20
   401c4:	mov	x1, x22
   401c8:	mov	x2, x22
   401cc:	mov	x3, x19
   401d0:	ldp	x20, x19, [sp, #64]
   401d4:	ldp	x22, x21, [sp, #48]
   401d8:	ldp	x24, x23, [sp, #32]
   401dc:	ldp	x26, x25, [sp, #16]
   401e0:	ldp	x29, x30, [sp], #80
   401e4:	b	4002c <mpfr_mulhigh_n@@Base+0x1e4>
   401e8:	add	x8, x19, #0x4
   401ec:	add	x9, x19, #0x5
   401f0:	cmp	x8, #0x0
   401f4:	csel	x8, x9, x8, lt  // lt = tstop
   401f8:	asr	x21, x8, #1
   401fc:	tbz	x21, #63, 40108 <mpfr_sqrhigh_n@@Base+0x3c>
   40200:	mov	x0, x20
   40204:	mov	x1, x22
   40208:	mov	x2, x19
   4020c:	ldp	x20, x19, [sp, #64]
   40210:	ldp	x22, x21, [sp, #48]
   40214:	ldp	x24, x23, [sp, #32]
   40218:	ldp	x26, x25, [sp, #16]
   4021c:	ldp	x29, x30, [sp], #80
   40220:	b	c410 <__gmpn_sqr@plt>

0000000000040224 <mpfr_divhigh_n@@Base>:
   40224:	stp	x29, x30, [sp, #-96]!
   40228:	stp	x28, x27, [sp, #16]
   4022c:	stp	x26, x25, [sp, #32]
   40230:	stp	x24, x23, [sp, #48]
   40234:	stp	x22, x21, [sp, #64]
   40238:	stp	x20, x19, [sp, #80]
   4023c:	mov	x29, sp
   40240:	sub	sp, sp, #0x20
   40244:	mov	x19, x3
   40248:	mov	x20, x2
   4024c:	mov	x24, x1
   40250:	cmp	x3, #0x10
   40254:	mov	x21, x0
   40258:	b.hi	40400 <mpfr_divhigh_n@@Base+0x1dc>  // b.pmore
   4025c:	adrp	x8, 5e000 <mpfr_bases@@Base+0x4f8>
   40260:	add	x8, x8, #0x8a8
   40264:	ldrsh	x22, [x8, x19, lsl #1]
   40268:	cbz	x22, 40418 <mpfr_divhigh_n@@Base+0x1f4>
   4026c:	cmp	x22, x19
   40270:	b.ne	40298 <mpfr_divhigh_n@@Base+0x74>  // b.any
   40274:	lsl	x3, x19, #1
   40278:	mov	x0, x21
   4027c:	mov	x1, xzr
   40280:	mov	x2, x24
   40284:	mov	x4, x20
   40288:	mov	x5, x19
   4028c:	bl	cd10 <__gmpn_divrem@plt>
   40290:	mov	x23, x0
   40294:	b	40738 <mpfr_divhigh_n@@Base+0x514>
   40298:	sub	x26, x19, x22
   4029c:	add	x25, x21, x26, lsl #3
   402a0:	lsl	x3, x22, #1
   402a4:	add	x2, x24, x26, lsl #4
   402a8:	add	x4, x20, x26, lsl #3
   402ac:	mov	x0, x25
   402b0:	mov	x1, xzr
   402b4:	mov	x5, x22
   402b8:	stur	xzr, [x29, #-8]
   402bc:	bl	cd10 <__gmpn_divrem@plt>
   402c0:	lsl	x1, x26, #4
   402c4:	cmp	x1, #0x4, lsl #12
   402c8:	mov	x23, x0
   402cc:	b.hi	4075c <mpfr_divhigh_n@@Base+0x538>  // b.pmore
   402d0:	add	x9, x1, #0xf
   402d4:	mov	x8, sp
   402d8:	and	x9, x9, #0xfffffffffffffff0
   402dc:	sub	x27, x8, x9
   402e0:	mov	sp, x27
   402e4:	add	x1, x21, x22, lsl #3
   402e8:	mov	x0, x27
   402ec:	mov	x2, x20
   402f0:	mov	x3, x26
   402f4:	stur	x21, [x29, #-16]
   402f8:	bl	bd30 <mpfr_mulhigh_n@plt>
   402fc:	add	x28, x24, x19, lsl #3
   40300:	add	x2, x27, x26, lsl #3
   40304:	mov	x0, x28
   40308:	mov	x1, x28
   4030c:	mov	x3, x26
   40310:	bl	bf10 <__gmpn_sub_n@plt>
   40314:	mov	x27, x0
   40318:	cbz	x23, 40334 <mpfr_divhigh_n@@Base+0x110>
   4031c:	mov	x0, x28
   40320:	mov	x1, x28
   40324:	mov	x2, x20
   40328:	mov	x3, x26
   4032c:	bl	bf10 <__gmpn_sub_n@plt>
   40330:	add	x27, x0, x27
   40334:	cbz	x27, 4039c <mpfr_divhigh_n@@Base+0x178>
   40338:	add	x28, x24, x26, lsl #3
   4033c:	ldr	x8, [x25]
   40340:	sub	x9, x8, #0x1
   40344:	str	x9, [x25]
   40348:	cbnz	x8, 4036c <mpfr_divhigh_n@@Base+0x148>
   4034c:	mov	w8, #0x1                   	// #1
   40350:	cmp	x8, x22
   40354:	b.ge	40394 <mpfr_divhigh_n@@Base+0x170>  // b.tcont
   40358:	ldr	x9, [x25, x8, lsl #3]
   4035c:	sub	x10, x9, #0x1
   40360:	str	x10, [x25, x8, lsl #3]
   40364:	add	x8, x8, #0x1
   40368:	cbz	x9, 40350 <mpfr_divhigh_n@@Base+0x12c>
   4036c:	mov	x8, xzr
   40370:	mov	x0, x28
   40374:	mov	x1, x28
   40378:	mov	x2, x20
   4037c:	mov	x3, x19
   40380:	sub	x23, x23, x8
   40384:	bl	c5f0 <__gmpn_add_n@plt>
   40388:	subs	x27, x27, x0
   4038c:	b.ne	4033c <mpfr_divhigh_n@@Base+0x118>  // b.any
   40390:	b	4039c <mpfr_divhigh_n@@Base+0x178>
   40394:	mov	w8, #0x1                   	// #1
   40398:	b	40370 <mpfr_divhigh_n@@Base+0x14c>
   4039c:	ldur	x19, [x29, #-16]
   403a0:	add	x1, x24, x22, lsl #3
   403a4:	add	x2, x20, x22, lsl #3
   403a8:	mov	x3, x26
   403ac:	mov	x0, x19
   403b0:	bl	c1e0 <mpfr_divhigh_n@plt>
   403b4:	ldr	x8, [x19, x26, lsl #3]
   403b8:	adds	x8, x8, x0
   403bc:	str	x8, [x19, x26, lsl #3]
   403c0:	b.cc	403e8 <mpfr_divhigh_n@@Base+0x1c4>  // b.lo, b.ul, b.last
   403c4:	mov	w8, #0x1                   	// #1
   403c8:	mov	w9, #0x1                   	// #1
   403cc:	cmp	x9, x22
   403d0:	b.ge	403ec <mpfr_divhigh_n@@Base+0x1c8>  // b.tcont
   403d4:	ldr	x10, [x25, x9, lsl #3]
   403d8:	adds	x10, x10, #0x1
   403dc:	str	x10, [x25, x9, lsl #3]
   403e0:	add	x9, x9, #0x1
   403e4:	b.cs	403cc <mpfr_divhigh_n@@Base+0x1a8>  // b.hs, b.nlast
   403e8:	mov	x8, xzr
   403ec:	ldur	x0, [x29, #-8]
   403f0:	add	x23, x8, x23
   403f4:	cbz	x0, 40738 <mpfr_divhigh_n@@Base+0x514>
   403f8:	bl	c460 <mpfr_tmp_free@plt>
   403fc:	b	40738 <mpfr_divhigh_n@@Base+0x514>
   40400:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   40404:	movk	x8, #0x5556
   40408:	smulh	x8, x19, x8
   4040c:	add	x8, x8, x8, lsr #63
   40410:	lsl	x22, x8, #1
   40414:	cbnz	x22, 4026c <mpfr_divhigh_n@@Base+0x48>
   40418:	add	x8, x24, x19, lsl #4
   4041c:	add	x22, x24, x19, lsl #3
   40420:	sub	x8, x8, #0x8
   40424:	mov	x9, x19
   40428:	subs	x10, x9, #0x1
   4042c:	b.lt	4044c <mpfr_divhigh_n@@Base+0x228>  // b.tstop
   40430:	add	x9, x20, x9, lsl #3
   40434:	ldr	x11, [x8], #-8
   40438:	ldur	x9, [x9, #-8]
   4043c:	cmp	x11, x9
   40440:	mov	x9, x10
   40444:	b.eq	40428 <mpfr_divhigh_n@@Base+0x204>  // b.none
   40448:	b.ls	40468 <mpfr_divhigh_n@@Base+0x244>  // b.plast
   4044c:	mov	x0, x22
   40450:	mov	x1, x22
   40454:	mov	x2, x20
   40458:	mov	x3, x19
   4045c:	bl	bf10 <__gmpn_sub_n@plt>
   40460:	mov	w23, #0x1                   	// #1
   40464:	b	4046c <mpfr_divhigh_n@@Base+0x248>
   40468:	mov	x23, xzr
   4046c:	add	x8, x20, x19, lsl #3
   40470:	ldur	x26, [x8, #-8]
   40474:	cmp	x19, #0x1
   40478:	b.ne	404c8 <mpfr_divhigh_n@@Base+0x2a4>  // b.any
   4047c:	lsr	x8, x26, #32
   40480:	mvn	x10, x26
   40484:	udiv	x13, x10, x8
   40488:	and	x9, x26, #0xffffffff
   4048c:	msub	w10, w13, w8, w10
   40490:	mov	w12, #0xffffffff            	// #-1
   40494:	mul	x11, x13, x9
   40498:	bfi	x12, x10, #32, #32
   4049c:	cmp	x12, x11
   404a0:	b.cs	40518 <mpfr_divhigh_n@@Base+0x2f4>  // b.hs, b.nlast
   404a4:	add	x12, x12, x26
   404a8:	cmp	x12, x26
   404ac:	sub	x10, x13, #0x1
   404b0:	b.cc	4051c <mpfr_divhigh_n@@Base+0x2f8>  // b.lo, b.ul, b.last
   404b4:	cmp	x12, x11
   404b8:	b.cs	4051c <mpfr_divhigh_n@@Base+0x2f8>  // b.hs, b.nlast
   404bc:	sub	x10, x13, #0x2
   404c0:	add	x12, x12, x26
   404c4:	b	4051c <mpfr_divhigh_n@@Base+0x2f8>
   404c8:	ldur	x27, [x8, #-16]
   404cc:	lsr	x8, x26, #32
   404d0:	mvn	x10, x26
   404d4:	udiv	x13, x10, x8
   404d8:	and	x9, x26, #0xffffffff
   404dc:	msub	w10, w13, w8, w10
   404e0:	mov	w12, #0xffffffff            	// #-1
   404e4:	mul	x11, x13, x9
   404e8:	bfi	x12, x10, #32, #32
   404ec:	cmp	x12, x11
   404f0:	b.cs	40564 <mpfr_divhigh_n@@Base+0x340>  // b.hs, b.nlast
   404f4:	add	x12, x12, x26
   404f8:	cmp	x12, x26
   404fc:	sub	x10, x13, #0x1
   40500:	b.cc	40568 <mpfr_divhigh_n@@Base+0x344>  // b.lo, b.ul, b.last
   40504:	cmp	x12, x11
   40508:	b.cs	40568 <mpfr_divhigh_n@@Base+0x344>  // b.hs, b.nlast
   4050c:	sub	x10, x13, #0x2
   40510:	add	x12, x12, x26
   40514:	b	40568 <mpfr_divhigh_n@@Base+0x344>
   40518:	mov	x10, x13
   4051c:	sub	x12, x12, x11
   40520:	udiv	x11, x12, x8
   40524:	msub	w12, w11, w8, w12
   40528:	mul	x8, x11, x9
   4052c:	mov	w9, #0xffffffff            	// #-1
   40530:	bfi	x9, x12, #32, #32
   40534:	cmp	x9, x8
   40538:	b.cs	40554 <mpfr_divhigh_n@@Base+0x330>  // b.hs, b.nlast
   4053c:	add	x9, x9, x26
   40540:	cmp	x9, x8
   40544:	ccmp	x9, x26, #0x0, cc  // cc = lo, ul, last
   40548:	mov	x8, #0xfffffffffffffffe    	// #-2
   4054c:	cinc	x8, x8, cc  // cc = lo, ul, last
   40550:	add	x11, x8, x11
   40554:	ldr	x8, [x22]
   40558:	orr	x9, x11, x10, lsl #32
   4055c:	umulh	x9, x8, x9
   40560:	b	40730 <mpfr_divhigh_n@@Base+0x50c>
   40564:	mov	x10, x13
   40568:	sub	x12, x12, x11
   4056c:	udiv	x11, x12, x8
   40570:	msub	w12, w11, w8, w12
   40574:	mul	x8, x11, x9
   40578:	mov	w9, #0xffffffff            	// #-1
   4057c:	bfi	x9, x12, #32, #32
   40580:	cmp	x9, x8
   40584:	b.cs	405a0 <mpfr_divhigh_n@@Base+0x37c>  // b.hs, b.nlast
   40588:	add	x9, x9, x26
   4058c:	cmp	x9, x8
   40590:	ccmp	x9, x26, #0x0, cc  // cc = lo, ul, last
   40594:	mov	x8, #0xfffffffffffffffe    	// #-2
   40598:	cinc	x8, x8, cc  // cc = lo, ul, last
   4059c:	add	x11, x8, x11
   405a0:	orr	x8, x11, x10, lsl #32
   405a4:	mul	x9, x8, x26
   405a8:	adds	x9, x9, x27
   405ac:	b.cc	405c8 <mpfr_divhigh_n@@Base+0x3a4>  // b.lo, b.ul, b.last
   405b0:	subs	x9, x9, x26
   405b4:	cset	w10, cs  // cs = hs, nlast
   405b8:	csel	x11, x26, xzr, cs  // cs = hs, nlast
   405bc:	mvn	x10, x10
   405c0:	add	x8, x10, x8
   405c4:	sub	x9, x9, x11
   405c8:	umulh	x10, x27, x8
   405cc:	adds	x9, x10, x9
   405d0:	stp	x23, x22, [x29, #-32]
   405d4:	stur	x21, [x29, #-16]
   405d8:	b.cc	40600 <mpfr_divhigh_n@@Base+0x3dc>  // b.lo, b.ul, b.last
   405dc:	cmp	x9, x26
   405e0:	sub	x28, x8, #0x1
   405e4:	b.cc	40604 <mpfr_divhigh_n@@Base+0x3e0>  // b.lo, b.ul, b.last
   405e8:	mul	x10, x8, x27
   405ec:	cmp	x9, x26
   405f0:	sub	x8, x8, #0x2
   405f4:	ccmp	x10, x27, #0x2, ls  // ls = plast
   405f8:	csel	x28, x28, x8, cc  // cc = lo, ul, last
   405fc:	b	40604 <mpfr_divhigh_n@@Base+0x3e0>
   40600:	mov	x28, x8
   40604:	cmp	x19, #0x2
   40608:	b.lt	40720 <mpfr_divhigh_n@@Base+0x4fc>  // b.tstop
   4060c:	ldur	x8, [x29, #-24]
   40610:	sub	x25, x8, #0x8
   40614:	add	x8, x24, x19, lsl #4
   40618:	sub	x22, x8, #0x8
   4061c:	ldur	x8, [x29, #-16]
   40620:	sub	x23, x8, #0x8
   40624:	ldr	x8, [x22]
   40628:	cmp	x8, x26
   4062c:	b.hi	406e4 <mpfr_divhigh_n@@Base+0x4c0>  // b.pmore
   40630:	ldur	x9, [x22, #-8]
   40634:	cmp	x8, x26
   40638:	b.ne	40644 <mpfr_divhigh_n@@Base+0x420>  // b.any
   4063c:	cmp	x9, x27
   40640:	b.cs	406e4 <mpfr_divhigh_n@@Base+0x4c0>  // b.hs, b.nlast
   40644:	umulh	x10, x8, x28
   40648:	mul	x11, x8, x28
   4064c:	adds	x13, x11, x9
   40650:	adc	x8, x10, x8
   40654:	msub	x9, x8, x26, x9
   40658:	ldur	x12, [x22, #-16]
   4065c:	subs	x14, x12, x27
   40660:	sbc	x9, x9, x26
   40664:	umulh	x10, x27, x8
   40668:	mul	x11, x8, x27
   4066c:	subs	x12, x14, x11
   40670:	sbc	x9, x9, x10
   40674:	cmp	x9, x13
   40678:	cset	w10, cs  // cs = hs, nlast
   4067c:	csetm	x11, cs  // cs = hs, nlast
   40680:	sub	x10, x8, x10
   40684:	and	x13, x26, x11
   40688:	and	x11, x27, x11
   4068c:	adds	x8, x12, x11
   40690:	adc	x9, x9, x13
   40694:	cmp	x9, x26
   40698:	add	x24, x10, #0x1
   4069c:	b.cs	406ec <mpfr_divhigh_n@@Base+0x4c8>  // b.hs, b.nlast
   406a0:	mov	x0, x25
   406a4:	mov	x1, x20
   406a8:	mov	x2, x19
   406ac:	mov	x3, x24
   406b0:	sub	x21, x19, #0x1
   406b4:	bl	c510 <__gmpn_submul_1@plt>
   406b8:	ldr	x8, [x22]
   406bc:	cmp	x0, x8
   406c0:	b.hi	40704 <mpfr_divhigh_n@@Base+0x4e0>  // b.pmore
   406c4:	add	x8, x21, #0x1
   406c8:	str	x24, [x23, x19, lsl #3]
   406cc:	add	x20, x20, #0x8
   406d0:	cmp	x8, #0x2
   406d4:	sub	x22, x22, #0x8
   406d8:	mov	x19, x21
   406dc:	b.gt	40624 <mpfr_divhigh_n@@Base+0x400>
   406e0:	b	40720 <mpfr_divhigh_n@@Base+0x4fc>
   406e4:	mov	x24, #0xffffffffffffffff    	// #-1
   406e8:	b	406a0 <mpfr_divhigh_n@@Base+0x47c>
   406ec:	cset	w9, hi  // hi = pmore
   406f0:	cmp	x8, x27
   406f4:	cset	w8, cs  // cs = hs, nlast
   406f8:	orr	w8, w8, w9
   406fc:	add	x24, x24, x8
   40700:	b	406a0 <mpfr_divhigh_n@@Base+0x47c>
   40704:	mov	x0, x25
   40708:	mov	x1, x25
   4070c:	mov	x2, x20
   40710:	mov	x3, x19
   40714:	bl	c5f0 <__gmpn_add_n@plt>
   40718:	sub	x24, x24, #0x1
   4071c:	b	406c4 <mpfr_divhigh_n@@Base+0x4a0>
   40720:	ldp	x8, x21, [x29, #-24]
   40724:	ldur	x23, [x29, #-32]
   40728:	ldr	x8, [x8]
   4072c:	umulh	x9, x8, x28
   40730:	add	x8, x9, x8
   40734:	str	x8, [x21]
   40738:	mov	x0, x23
   4073c:	mov	sp, x29
   40740:	ldp	x20, x19, [sp, #80]
   40744:	ldp	x22, x21, [sp, #64]
   40748:	ldp	x24, x23, [sp, #48]
   4074c:	ldp	x26, x25, [sp, #32]
   40750:	ldp	x28, x27, [sp, #16]
   40754:	ldp	x29, x30, [sp], #96
   40758:	ret
   4075c:	sub	x0, x29, #0x8
   40760:	bl	be70 <mpfr_tmp_allocate@plt>
   40764:	mov	x27, x0
   40768:	b	402e4 <mpfr_divhigh_n@@Base+0xc0>

000000000004076c <mpfr_get_f@@Base>:
   4076c:	sub	sp, sp, #0x70
   40770:	stp	x29, x30, [sp, #32]
   40774:	stp	x24, x23, [sp, #64]
   40778:	stp	x22, x21, [sp, #80]
   4077c:	stp	x20, x19, [sp, #96]
   40780:	ldr	x8, [x1, #16]
   40784:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   40788:	mov	x20, x1
   4078c:	mov	x19, x0
   40790:	cmp	x8, x9
   40794:	str	x25, [sp, #48]
   40798:	add	x29, sp, #0x20
   4079c:	b.le	40980 <mpfr_get_f@@Base+0x214>
   407a0:	ldr	x10, [x20]
   407a4:	ldrsw	x25, [x19]
   407a8:	ldr	x21, [x19, #16]
   407ac:	sub	x9, x10, #0x1
   407b0:	add	x11, x10, #0x3e
   407b4:	cmp	x9, #0x0
   407b8:	csel	x9, x11, x9, lt  // lt = tstop
   407bc:	add	x11, x8, #0x3f
   407c0:	cmp	x8, #0x0
   407c4:	csel	x11, x11, x8, lt  // lt = tstop
   407c8:	and	w11, w11, #0xffffffc0
   407cc:	sub	w8, w8, w11
   407d0:	cmp	w8, #0x0
   407d4:	cset	w11, gt
   407d8:	lsl	w11, w11, #6
   407dc:	sub	w8, w11, w8
   407e0:	add	x10, x10, w8, sxtw
   407e4:	cmp	x10, x25, lsl #6
   407e8:	sxtw	x22, w8
   407ec:	b.le	40880 <mpfr_get_f@@Base+0x114>
   407f0:	lsl	x8, x25, #6
   407f4:	sub	x1, x8, x22
   407f8:	mov	x0, sp
   407fc:	mov	w23, w2
   40800:	bl	cad0 <mpfr_init2@plt>
   40804:	ldr	x8, [sp]
   40808:	sub	x9, x8, #0x1
   4080c:	add	x8, x8, #0x3e
   40810:	cmp	x9, #0x0
   40814:	csel	x8, x8, x9, lt  // lt = tstop
   40818:	asr	x8, x8, #6
   4081c:	add	x22, x8, #0x1
   40820:	cmp	x22, x25
   40824:	b.ne	409b0 <mpfr_get_f@@Base+0x244>  // b.any
   40828:	ldr	w3, [x20, #8]
   4082c:	mov	x0, sp
   40830:	mov	x1, x20
   40834:	mov	w2, w23
   40838:	bl	c6f0 <mpfr_set4@plt>
   4083c:	ldp	x8, x1, [sp, #16]
   40840:	mov	w23, w0
   40844:	add	x9, x8, #0x3f
   40848:	cmp	x8, #0x0
   4084c:	csel	x9, x9, x8, lt  // lt = tstop
   40850:	and	w9, w9, #0xffffffc0
   40854:	sub	w8, w8, w9
   40858:	cmp	w8, #0x0
   4085c:	cset	w9, gt
   40860:	lsl	w9, w9, #6
   40864:	subs	w24, w9, w8
   40868:	b.eq	408cc <mpfr_get_f@@Base+0x160>  // b.none
   4086c:	mov	x0, x21
   40870:	mov	x2, x22
   40874:	mov	w3, w24
   40878:	bl	bd90 <__gmpn_rshift@plt>
   4087c:	b	408e0 <mpfr_get_f@@Base+0x174>
   40880:	asr	x8, x9, #6
   40884:	cmp	x8, x25
   40888:	add	x23, x8, #0x1
   4088c:	b.ge	409cc <mpfr_get_f@@Base+0x260>  // b.tcont
   40890:	ldr	x1, [x20, #24]
   40894:	sub	x24, x25, x23
   40898:	add	x0, x21, x24, lsl #3
   4089c:	cbz	w22, 40908 <mpfr_get_f@@Base+0x19c>
   408a0:	mov	x2, x23
   408a4:	mov	w3, w22
   408a8:	bl	bd90 <__gmpn_rshift@plt>
   408ac:	cmp	x24, #0x0
   408b0:	mov	x23, x0
   408b4:	b.gt	408bc <mpfr_get_f@@Base+0x150>
   408b8:	cbnz	x23, 40a6c <mpfr_get_f@@Base+0x300>
   408bc:	subs	x24, x24, #0x1
   408c0:	b.lt	40930 <mpfr_get_f@@Base+0x1c4>  // b.tstop
   408c4:	str	x23, [x21, x24, lsl #3]
   408c8:	b	40918 <mpfr_get_f@@Base+0x1ac>
   408cc:	cmp	x21, x1
   408d0:	b.eq	408e0 <mpfr_get_f@@Base+0x174>  // b.none
   408d4:	lsl	x2, x22, #3
   408d8:	mov	x0, x21
   408dc:	bl	bad0 <memcpy@plt>
   408e0:	ldr	x8, [sp, #16]
   408e4:	mov	x0, sp
   408e8:	add	x8, x8, w24, sxtw
   408ec:	add	x9, x8, #0x3f
   408f0:	cmp	x8, #0x0
   408f4:	csel	x8, x9, x8, lt  // lt = tstop
   408f8:	asr	x8, x8, #6
   408fc:	str	x8, [x19, #8]
   40900:	bl	c110 <mpfr_clear@plt>
   40904:	b	40950 <mpfr_get_f@@Base+0x1e4>
   40908:	cmp	x0, x1
   4090c:	b.eq	40918 <mpfr_get_f@@Base+0x1ac>  // b.none
   40910:	lsl	x2, x23, #3
   40914:	bl	bad0 <memcpy@plt>
   40918:	cmp	x24, #0x1
   4091c:	b.lt	40930 <mpfr_get_f@@Base+0x1c4>  // b.tstop
   40920:	lsl	x2, x24, #3
   40924:	mov	x0, x21
   40928:	mov	w1, wzr
   4092c:	bl	c1b0 <memset@plt>
   40930:	ldr	x8, [x20, #16]
   40934:	mov	w23, wzr
   40938:	add	x8, x8, x22
   4093c:	add	x9, x8, #0x3f
   40940:	cmp	x8, #0x0
   40944:	csel	x8, x9, x8, lt  // lt = tstop
   40948:	asr	x8, x8, #6
   4094c:	str	x8, [x19, #8]
   40950:	ldr	w8, [x20, #8]
   40954:	cmp	w8, #0x0
   40958:	cneg	w8, w25, lt  // lt = tstop
   4095c:	str	w8, [x19, #4]
   40960:	mov	w0, w23
   40964:	ldp	x20, x19, [sp, #96]
   40968:	ldp	x22, x21, [sp, #80]
   4096c:	ldp	x24, x23, [sp, #64]
   40970:	ldr	x25, [sp, #48]
   40974:	ldp	x29, x30, [sp, #32]
   40978:	add	sp, sp, #0x70
   4097c:	ret
   40980:	mov	x9, #0x2                   	// #2
   40984:	movk	x9, #0x8000, lsl #48
   40988:	cmp	x8, x9
   4098c:	b.eq	409e8 <mpfr_get_f@@Base+0x27c>  // b.none
   40990:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   40994:	cmp	x8, x9
   40998:	b.ne	40a10 <mpfr_get_f@@Base+0x2a4>  // b.any
   4099c:	mov	x0, x19
   409a0:	mov	x1, xzr
   409a4:	bl	c220 <__gmpf_set_ui@plt>
   409a8:	mov	w23, wzr
   409ac:	b	40960 <mpfr_get_f@@Base+0x1f4>
   409b0:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   409b4:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   409b8:	add	x0, x0, #0x8ec
   409bc:	add	x2, x2, #0x910
   409c0:	mov	w1, #0x7c                  	// #124
   409c4:	bl	cb90 <mpfr_assert_fail@plt>
   409c8:	b	40828 <mpfr_get_f@@Base+0xbc>
   409cc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   409d0:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   409d4:	add	x0, x0, #0x8ec
   409d8:	add	x2, x2, #0x8f4
   409dc:	mov	w1, #0x61                  	// #97
   409e0:	bl	cb90 <mpfr_assert_fail@plt>
   409e4:	b	40890 <mpfr_get_f@@Base+0x124>
   409e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   409ec:	ldr	x1, [x0, #2656]
   409f0:	add	x0, x0, #0xa60
   409f4:	blr	x1
   409f8:	mrs	x8, tpidr_el0
   409fc:	ldr	w9, [x8, x0]
   40a00:	mov	w23, wzr
   40a04:	orr	w9, w9, #0x10
   40a08:	str	w9, [x8, x0]
   40a0c:	b	40960 <mpfr_get_f@@Base+0x1f4>
   40a10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   40a14:	ldr	x1, [x0, #2656]
   40a18:	add	x0, x0, #0xa60
   40a1c:	blr	x1
   40a20:	mrs	x8, tpidr_el0
   40a24:	ldr	w9, [x8, x0]
   40a28:	orr	w9, w9, #0x10
   40a2c:	str	w9, [x8, x0]
   40a30:	ldr	w8, [x19]
   40a34:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   40a38:	str	x9, [x19, #8]
   40a3c:	cmp	w8, #0x1
   40a40:	str	w8, [x19, #4]
   40a44:	b.lt	40a58 <mpfr_get_f@@Base+0x2ec>  // b.tstop
   40a48:	ldr	x0, [x19, #16]
   40a4c:	lsl	x2, x8, #3
   40a50:	mov	w1, #0xff                  	// #255
   40a54:	bl	c1b0 <memset@plt>
   40a58:	ldr	w8, [x20, #8]
   40a5c:	cmp	w8, #0x0
   40a60:	b.le	40a88 <mpfr_get_f@@Base+0x31c>
   40a64:	mov	w23, #0xffffffff            	// #-1
   40a68:	b	40960 <mpfr_get_f@@Base+0x1f4>
   40a6c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   40a70:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   40a74:	add	x0, x0, #0x8ec
   40a78:	add	x2, x2, #0x8fd
   40a7c:	mov	w1, #0x68                  	// #104
   40a80:	bl	cb90 <mpfr_assert_fail@plt>
   40a84:	b	408bc <mpfr_get_f@@Base+0x150>
   40a88:	mov	x0, x19
   40a8c:	mov	x1, x19
   40a90:	bl	c720 <__gmpf_neg@plt>
   40a94:	mov	w23, #0x1                   	// #1
   40a98:	b	40960 <mpfr_get_f@@Base+0x1f4>

0000000000040a9c <mpfr_round_p@@Base>:
   40a9c:	lsl	x9, x1, #6
   40aa0:	cmp	x9, x3
   40aa4:	mov	w8, wzr
   40aa8:	b.le	40b3c <mpfr_round_p@@Base+0xa0>
   40aac:	cmp	x2, #0x1
   40ab0:	b.lt	40b3c <mpfr_round_p@@Base+0xa0>  // b.tstop
   40ab4:	cmp	x2, x3
   40ab8:	b.ls	40b3c <mpfr_round_p@@Base+0xa0>  // b.plast
   40abc:	cmp	x9, x2
   40ac0:	add	x8, x3, #0x3f
   40ac4:	csel	x9, x9, x2, cc  // cc = lo, ul, last
   40ac8:	cmp	x3, #0x0
   40acc:	mov	x12, #0xffffffffffffffff    	// #-1
   40ad0:	csel	x8, x8, x3, lt  // lt = tstop
   40ad4:	add	x10, x9, #0x3f
   40ad8:	cmp	x9, #0x0
   40adc:	and	x11, x8, #0xffffffffffffffc0
   40ae0:	csel	x10, x10, x9, lt  // lt = tstop
   40ae4:	eor	x13, x12, x8, asr #6
   40ae8:	sub	x14, x3, x11
   40aec:	asr	x11, x10, #6
   40af0:	add	x10, x13, x1
   40af4:	add	x10, x0, x10, lsl #3
   40af8:	ldr	x13, [x10], #-8
   40afc:	neg	x16, x14
   40b00:	lsl	x16, x12, x16
   40b04:	cmp	w14, #0x0
   40b08:	csinv	x12, x12, x16, eq  // eq = none
   40b0c:	sub	x15, x11, x8, asr #6
   40b10:	and	x13, x13, x12
   40b14:	cbnz	x15, 40b44 <mpfr_round_p@@Base+0xa8>
   40b18:	and	x8, x9, #0x3f
   40b1c:	neg	x8, x8
   40b20:	lsr	x9, x13, x8
   40b24:	lsr	x8, x12, x8
   40b28:	cmp	x9, #0x0
   40b2c:	cset	w10, ne  // ne = any
   40b30:	cmp	x9, x8
   40b34:	cset	w8, ne  // ne = any
   40b38:	and	w8, w8, w10
   40b3c:	mov	w0, w8
   40b40:	ret
   40b44:	asr	x8, x8, #6
   40b48:	cbz	x13, 40b5c <mpfr_round_p@@Base+0xc0>
   40b4c:	cmp	x13, x12
   40b50:	b.eq	40b84 <mpfr_round_p@@Base+0xe8>  // b.none
   40b54:	mov	w8, #0x1                   	// #1
   40b58:	b	40b3c <mpfr_round_p@@Base+0xa0>
   40b5c:	mvn	x12, x11
   40b60:	sub	x8, x8, x11
   40b64:	add	x11, x12, x1
   40b68:	add	x12, x8, #0x1
   40b6c:	mov	w8, #0x1                   	// #1
   40b70:	cbz	x12, 40bb0 <mpfr_round_p@@Base+0x114>
   40b74:	ldr	x13, [x10], #-8
   40b78:	add	x12, x12, #0x1
   40b7c:	cbz	x13, 40b70 <mpfr_round_p@@Base+0xd4>
   40b80:	b	40b3c <mpfr_round_p@@Base+0xa0>
   40b84:	mvn	x12, x11
   40b88:	sub	x8, x8, x11
   40b8c:	add	x12, x12, x1
   40b90:	add	x13, x8, #0x1
   40b94:	cbz	x13, 40bdc <mpfr_round_p@@Base+0x140>
   40b98:	ldr	x8, [x10], #-8
   40b9c:	add	x13, x13, #0x1
   40ba0:	cmn	x8, #0x1
   40ba4:	mov	w8, #0x1                   	// #1
   40ba8:	b.eq	40b94 <mpfr_round_p@@Base+0xf8>  // b.none
   40bac:	b	40b3c <mpfr_round_p@@Base+0xa0>
   40bb0:	add	x8, x9, #0x3f
   40bb4:	cmp	x9, #0x0
   40bb8:	csel	x8, x8, x9, lt  // lt = tstop
   40bbc:	and	x8, x8, #0xffffffffffffffc0
   40bc0:	sub	x8, x9, x8
   40bc4:	cbz	w8, 40b3c <mpfr_round_p@@Base+0xa0>
   40bc8:	ldr	x9, [x0, x11, lsl #3]
   40bcc:	neg	x8, x8
   40bd0:	lsr	x8, x9, x8
   40bd4:	cmp	x8, #0x0
   40bd8:	b	40bfc <mpfr_round_p@@Base+0x160>
   40bdc:	sub	x8, x9, x11, lsl #6
   40be0:	cbz	w8, 40b3c <mpfr_round_p@@Base+0xa0>
   40be4:	ldr	x9, [x0, x12, lsl #3]
   40be8:	neg	x8, x8
   40bec:	mov	x10, #0xffffffffffffffff    	// #-1
   40bf0:	lsr	x9, x9, x8
   40bf4:	lsr	x8, x10, x8
   40bf8:	cmp	x9, x8
   40bfc:	cset	w8, ne  // ne = any
   40c00:	b	40b3c <mpfr_round_p@@Base+0xa0>

0000000000040c04 <mpfr_erfc@@Base>:
   40c04:	sub	sp, sp, #0x100
   40c08:	stp	x28, x27, [sp, #176]
   40c0c:	mov	x28, #0x4                   	// #4
   40c10:	stp	x29, x30, [sp, #160]
   40c14:	stp	x26, x25, [sp, #192]
   40c18:	stp	x24, x23, [sp, #208]
   40c1c:	stp	x22, x21, [sp, #224]
   40c20:	stp	x20, x19, [sp, #240]
   40c24:	add	x29, sp, #0xa0
   40c28:	mov	w20, w2
   40c2c:	mov	x21, x1
   40c30:	mov	x19, x0
   40c34:	movk	x28, #0x8000, lsl #48
   40c38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   40c3c:	ldr	x1, [x0, #2592]
   40c40:	add	x0, x0, #0xa20
   40c44:	blr	x1
   40c48:	ldr	x8, [x21, #16]
   40c4c:	mrs	x23, tpidr_el0
   40c50:	cmp	x8, x28
   40c54:	b.lt	4147c <mpfr_erfc@@Base+0x878>  // b.tstop
   40c58:	ldr	w9, [x21, #8]
   40c5c:	ldr	x24, [x23, x0]
   40c60:	cmp	w9, #0x1
   40c64:	b.lt	40cd4 <mpfr_erfc@@Base+0xd0>  // b.tstop
   40c68:	mov	x8, #0xffffffffc0000001    	// #-1073741823
   40c6c:	cmp	x24, x8
   40c70:	b.lt	40c88 <mpfr_erfc@@Base+0x84>  // b.tstop
   40c74:	mov	w1, #0x6a92                	// #27282
   40c78:	mov	x0, x21
   40c7c:	mov	x2, xzr
   40c80:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   40c84:	tbz	w0, #31, 40ca0 <mpfr_erfc@@Base+0x9c>
   40c88:	mov	w1, #0x2646                	// #9798
   40c8c:	movk	w1, #0x6a91, lsl #16
   40c90:	mov	x0, x21
   40c94:	mov	x2, xzr
   40c98:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   40c9c:	tbnz	w0, #31, 40cbc <mpfr_erfc@@Base+0xb8>
   40ca0:	cmp	w20, #0x0
   40ca4:	csinc	w1, w20, wzr, ne  // ne = any
   40ca8:	mov	w2, #0x1                   	// #1
   40cac:	mov	x0, x19
   40cb0:	bl	c420 <mpfr_underflow@plt>
   40cb4:	mov	w22, w0
   40cb8:	b	4140c <mpfr_erfc@@Base+0x808>
   40cbc:	ldr	w9, [x21, #8]
   40cc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   40cc4:	ldr	x1, [x0, #2592]
   40cc8:	add	x0, x0, #0xa20
   40ccc:	blr	x1
   40cd0:	ldr	x24, [x23, x0]
   40cd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   40cd8:	ldr	x1, [x0, #2656]
   40cdc:	add	x0, x0, #0xa60
   40ce0:	blr	x1
   40ce4:	ldr	w27, [x23, x0]
   40ce8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   40cec:	ldr	x1, [x0, #2624]
   40cf0:	add	x0, x0, #0xa40
   40cf4:	blr	x1
   40cf8:	ldr	x25, [x23, x0]
   40cfc:	mov	x8, x0
   40d00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   40d04:	ldr	x1, [x0, #2592]
   40d08:	add	x0, x0, #0xa20
   40d0c:	blr	x1
   40d10:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   40d14:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   40d18:	str	x10, [x23, x0]
   40d1c:	str	x11, [x23, x8]
   40d20:	tbnz	w9, #31, 4122c <mpfr_erfc@@Base+0x628>
   40d24:	ldr	x8, [x21, #16]
   40d28:	cmn	x8, #0x2
   40d2c:	b.gt	40d44 <mpfr_erfc@@Base+0x140>
   40d30:	ldr	x9, [x19]
   40d34:	mvn	x2, x8
   40d38:	add	x8, x9, #0x1
   40d3c:	cmp	x8, x2
   40d40:	b.cc	41528 <mpfr_erfc@@Base+0x924>  // b.lo, b.ul, b.last
   40d44:	ldr	x22, [x19]
   40d48:	cmp	x22, #0x1
   40d4c:	b.eq	414d4 <mpfr_erfc@@Base+0x8d0>  // b.none
   40d50:	mov	x8, x22
   40d54:	b.le	414dc <mpfr_erfc@@Base+0x8d8>
   40d58:	sub	x8, x8, #0x1
   40d5c:	clz	x8, x8
   40d60:	mov	w9, #0x40                  	// #64
   40d64:	sub	x8, x9, x8
   40d68:	ldr	x9, [x21, #16]
   40d6c:	add	x8, x22, x8
   40d70:	add	x0, sp, #0x20
   40d74:	str	x25, [sp, #16]
   40d78:	lsl	x10, x9, #1
   40d7c:	cmp	x9, #0x0
   40d80:	csel	x9, x10, xzr, gt
   40d84:	add	x8, x8, x9
   40d88:	add	x22, x8, #0x3
   40d8c:	mov	x1, x22
   40d90:	bl	cad0 <mpfr_init2@plt>
   40d94:	cmp	w20, #0x0
   40d98:	cset	w8, eq  // eq = none
   40d9c:	str	x8, [sp, #8]
   40da0:	mov	w8, #0x40                  	// #64
   40da4:	str	x8, [sp, #24]
   40da8:	ldr	w8, [x21, #8]
   40dac:	cmp	w8, #0x1
   40db0:	b.lt	40de0 <mpfr_erfc@@Base+0x1dc>  // b.tstop
   40db4:	ldr	x8, [x21, #16]
   40db8:	subs	x26, x22, #0x1
   40dbc:	lsl	x8, x8, #1
   40dc0:	sub	x25, x8, #0x2
   40dc4:	b.eq	411c4 <mpfr_erfc@@Base+0x5c0>  // b.none
   40dc8:	b.le	411cc <mpfr_erfc@@Base+0x5c8>
   40dcc:	clz	x8, x26
   40dd0:	mov	w9, #0x40                  	// #64
   40dd4:	sub	x8, x9, x8
   40dd8:	cmp	x25, x8
   40ddc:	b.ge	40e64 <mpfr_erfc@@Base+0x260>  // b.tcont
   40de0:	add	x0, sp, #0x20
   40de4:	mov	x1, x21
   40de8:	mov	w2, wzr
   40dec:	bl	c280 <mpfr_erf@plt>
   40df0:	ldr	x25, [sp, #48]
   40df4:	add	x0, sp, #0x20
   40df8:	add	x2, sp, #0x20
   40dfc:	mov	w1, #0x1                   	// #1
   40e00:	mov	w3, wzr
   40e04:	bl	caa0 <mpfr_ui_sub@plt>
   40e08:	ldr	x8, [sp, #48]
   40e0c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   40e10:	cmp	x8, x9
   40e14:	b.ne	40e54 <mpfr_erfc@@Base+0x250>  // b.any
   40e18:	lsl	x22, x22, #1
   40e1c:	ldr	x25, [sp, #24]
   40e20:	sub	x8, x28, x22
   40e24:	sub	x8, x8, #0x105
   40e28:	cmp	x25, x8
   40e2c:	b.gt	411e8 <mpfr_erfc@@Base+0x5e4>
   40e30:	add	x22, x22, x25
   40e34:	cmp	x22, #0x0
   40e38:	cinc	x8, x22, lt  // lt = tstop
   40e3c:	asr	x8, x8, #1
   40e40:	add	x0, sp, #0x20
   40e44:	mov	x1, x22
   40e48:	str	x8, [sp, #24]
   40e4c:	bl	bf80 <mpfr_set_prec@plt>
   40e50:	b	40da8 <mpfr_erfc@@Base+0x1a4>
   40e54:	sub	x9, x25, x8
   40e58:	bic	x9, x9, x9, asr #63
   40e5c:	add	x25, x9, #0x1
   40e60:	b	41180 <mpfr_erfc@@Base+0x57c>
   40e64:	ldr	x26, [sp, #32]
   40e68:	sub	x0, x29, #0x20
   40e6c:	str	w27, [sp, #4]
   40e70:	mov	x1, x26
   40e74:	bl	cad0 <mpfr_init2@plt>
   40e78:	sub	x0, x29, #0x40
   40e7c:	mov	x1, x26
   40e80:	bl	cad0 <mpfr_init2@plt>
   40e84:	add	x0, sp, #0x40
   40e88:	mov	w1, #0x1f                  	// #31
   40e8c:	bl	cad0 <mpfr_init2@plt>
   40e90:	sub	x0, x29, #0x40
   40e94:	mov	w3, #0x3                   	// #3
   40e98:	mov	x1, x21
   40e9c:	mov	x2, x21
   40ea0:	bl	be00 <mpfr_mul@plt>
   40ea4:	sub	x0, x29, #0x40
   40ea8:	sub	x2, x29, #0x40
   40eac:	mov	w1, #0x1                   	// #1
   40eb0:	mov	w3, #0x2                   	// #2
   40eb4:	bl	c350 <mpfr_ui_div@plt>
   40eb8:	sub	x0, x29, #0x40
   40ebc:	sub	x1, x29, #0x40
   40ec0:	mov	w2, #0x1                   	// #1
   40ec4:	mov	w3, #0x2                   	// #2
   40ec8:	bl	c950 <mpfr_div_2ui@plt>
   40ecc:	sub	x0, x29, #0x20
   40ed0:	mov	w1, #0x1                   	// #1
   40ed4:	mov	x2, xzr
   40ed8:	mov	w3, wzr
   40edc:	bl	c640 <mpfr_set_ui_2exp@plt>
   40ee0:	ldur	w3, [x29, #-24]
   40ee4:	add	x0, sp, #0x20
   40ee8:	sub	x1, x29, #0x20
   40eec:	mov	w2, wzr
   40ef0:	bl	c6f0 <mpfr_set4@plt>
   40ef4:	mov	w8, #0x1                   	// #1
   40ef8:	str	w8, [sp, #72]
   40efc:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   40f00:	mov	w27, #0x1                   	// #1
   40f04:	mov	w28, #0xe                   	// #14
   40f08:	mov	w25, #0x1                   	// #1
   40f0c:	str	x8, [sp, #80]
   40f10:	sub	x0, x29, #0x20
   40f14:	sub	x1, x29, #0x20
   40f18:	mov	w3, #0x2                   	// #2
   40f1c:	mov	x2, x27
   40f20:	bl	bb10 <mpfr_mul_ui@plt>
   40f24:	sub	x0, x29, #0x20
   40f28:	sub	x1, x29, #0x20
   40f2c:	sub	x2, x29, #0x40
   40f30:	mov	w3, #0x2                   	// #2
   40f34:	bl	be00 <mpfr_mul@plt>
   40f38:	ldr	x8, [sp, #48]
   40f3c:	ldur	x9, [x29, #-16]
   40f40:	add	x0, sp, #0x40
   40f44:	add	x1, sp, #0x40
   40f48:	mov	w3, #0x2                   	// #2
   40f4c:	sub	x2, x8, x9
   40f50:	bl	bc40 <mpfr_mul_2si@plt>
   40f54:	add	x0, sp, #0x40
   40f58:	add	x1, sp, #0x40
   40f5c:	mov	w3, #0x2                   	// #2
   40f60:	mov	x2, x28
   40f64:	bl	c2d0 <mpfr_add_ui@plt>
   40f68:	ldr	x8, [sp, #48]
   40f6c:	ldur	x9, [x29, #-16]
   40f70:	add	x0, sp, #0x40
   40f74:	add	x1, sp, #0x40
   40f78:	mov	w3, #0x2                   	// #2
   40f7c:	sub	x2, x8, x9
   40f80:	bl	c470 <mpfr_div_2si@plt>
   40f84:	ldur	x8, [x29, #-16]
   40f88:	ldr	x9, [sp, #48]
   40f8c:	add	x8, x8, x26
   40f90:	cmp	x8, x9
   40f94:	b.le	40fc8 <mpfr_erfc@@Base+0x3c4>
   40f98:	add	x0, sp, #0x20
   40f9c:	add	x1, sp, #0x20
   40fa0:	sub	x2, x29, #0x20
   40fa4:	mov	w3, wzr
   40fa8:	tbnz	w25, #0, 40fb4 <mpfr_erfc@@Base+0x3b0>
   40fac:	bl	c240 <mpfr_add@plt>
   40fb0:	b	40fb8 <mpfr_erfc@@Base+0x3b4>
   40fb4:	bl	bc20 <mpfr_sub@plt>
   40fb8:	add	x25, x25, #0x1
   40fbc:	add	x28, x28, #0xe
   40fc0:	add	x27, x27, #0x2
   40fc4:	b	40f10 <mpfr_erfc@@Base+0x30c>
   40fc8:	add	x0, sp, #0x40
   40fcc:	add	x1, sp, #0x40
   40fd0:	mov	w2, #0x1                   	// #1
   40fd4:	mov	w3, #0x2                   	// #2
   40fd8:	bl	c2d0 <mpfr_add_ui@plt>
   40fdc:	sub	x0, x29, #0x20
   40fe0:	mov	w3, #0x2                   	// #2
   40fe4:	mov	x1, x21
   40fe8:	mov	x2, x21
   40fec:	bl	be00 <mpfr_mul@plt>
   40ff0:	add	x0, sp, #0x40
   40ff4:	add	x1, sp, #0x40
   40ff8:	mov	w2, #0x3                   	// #3
   40ffc:	mov	w3, #0x2                   	// #2
   41000:	bl	c950 <mpfr_div_2ui@plt>
   41004:	add	x0, sp, #0x40
   41008:	add	x1, sp, #0x40
   4100c:	sub	x2, x29, #0x20
   41010:	mov	w3, #0x2                   	// #2
   41014:	bl	c240 <mpfr_add@plt>
   41018:	add	x0, sp, #0x40
   4101c:	add	x1, sp, #0x40
   41020:	mov	w2, #0x3                   	// #3
   41024:	mov	w3, #0x2                   	// #2
   41028:	bl	c320 <mpfr_mul_2ui@plt>
   4102c:	sub	x0, x29, #0x20
   41030:	sub	x1, x29, #0x20
   41034:	mov	w2, #0x2                   	// #2
   41038:	bl	c7a0 <mpfr_exp@plt>
   4103c:	sub	x0, x29, #0x20
   41040:	sub	x1, x29, #0x20
   41044:	mov	x2, x21
   41048:	mov	w3, wzr
   4104c:	bl	be00 <mpfr_mul@plt>
   41050:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41054:	ldr	x1, [x0, #2704]
   41058:	add	x0, x0, #0xa90
   4105c:	blr	x1
   41060:	add	x1, x23, x0
   41064:	sub	x0, x29, #0x40
   41068:	mov	w2, #0x1                   	// #1
   4106c:	bl	c3e0 <mpfr_cache@plt>
   41070:	sub	x0, x29, #0x40
   41074:	sub	x1, x29, #0x40
   41078:	mov	w2, wzr
   4107c:	bl	c990 <mpfr_sqrt@plt>
   41080:	sub	x0, x29, #0x20
   41084:	sub	x1, x29, #0x20
   41088:	sub	x2, x29, #0x40
   4108c:	mov	w3, wzr
   41090:	bl	be00 <mpfr_mul@plt>
   41094:	add	x0, sp, #0x20
   41098:	add	x1, sp, #0x20
   4109c:	sub	x2, x29, #0x20
   410a0:	mov	w3, wzr
   410a4:	bl	c670 <mpfr_div@plt>
   410a8:	ldr	x8, [sp, #48]
   410ac:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   410b0:	cmp	x8, x9
   410b4:	b.ne	4113c <mpfr_erfc@@Base+0x538>  // b.any
   410b8:	sub	x0, x29, #0x20
   410bc:	mov	w3, #0x3                   	// #3
   410c0:	mov	x1, x21
   410c4:	mov	x2, x21
   410c8:	bl	be00 <mpfr_mul@plt>
   410cc:	sub	x0, x29, #0x20
   410d0:	sub	x1, x29, #0x20
   410d4:	mov	w2, #0x2                   	// #2
   410d8:	bl	be20 <mpfr_neg@plt>
   410dc:	sub	x0, x29, #0x20
   410e0:	sub	x1, x29, #0x20
   410e4:	mov	w2, #0x2                   	// #2
   410e8:	bl	c7a0 <mpfr_exp@plt>
   410ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   410f0:	ldr	x1, [x0, #2704]
   410f4:	add	x0, x0, #0xa90
   410f8:	blr	x1
   410fc:	add	x1, x23, x0
   41100:	sub	x0, x29, #0x40
   41104:	mov	w2, #0x3                   	// #3
   41108:	bl	c3e0 <mpfr_cache@plt>
   4110c:	sub	x0, x29, #0x40
   41110:	sub	x1, x29, #0x40
   41114:	mov	w3, #0x3                   	// #3
   41118:	mov	x2, x21
   4111c:	bl	be00 <mpfr_mul@plt>
   41120:	add	x0, sp, #0x20
   41124:	sub	x1, x29, #0x20
   41128:	sub	x2, x29, #0x40
   4112c:	mov	w3, wzr
   41130:	bl	c670 <mpfr_div@plt>
   41134:	mov	x25, xzr
   41138:	b	41154 <mpfr_erfc@@Base+0x550>
   4113c:	add	x0, sp, #0x40
   41140:	add	x1, sp, #0x40
   41144:	mov	w2, #0x7                   	// #7
   41148:	mov	w3, #0x2                   	// #2
   4114c:	bl	c2d0 <mpfr_add_ui@plt>
   41150:	ldr	x25, [sp, #80]
   41154:	ldr	w27, [sp, #4]
   41158:	mov	x28, #0x4                   	// #4
   4115c:	sub	x0, x29, #0x20
   41160:	movk	x28, #0x8000, lsl #48
   41164:	bl	c110 <mpfr_clear@plt>
   41168:	sub	x0, x29, #0x40
   4116c:	bl	c110 <mpfr_clear@plt>
   41170:	add	x0, sp, #0x40
   41174:	bl	c110 <mpfr_clear@plt>
   41178:	cbz	x25, 41430 <mpfr_erfc@@Base+0x82c>
   4117c:	ldr	x8, [sp, #48]
   41180:	cmp	x8, x28
   41184:	b.lt	40e1c <mpfr_erfc@@Base+0x218>  // b.tstop
   41188:	ldr	x8, [sp, #32]
   4118c:	ldr	x9, [x19]
   41190:	ldr	x0, [sp, #56]
   41194:	sub	x2, x22, x25
   41198:	sub	x10, x8, #0x1
   4119c:	add	x8, x8, #0x3e
   411a0:	cmp	x10, #0x0
   411a4:	csel	x8, x8, x10, lt  // lt = tstop
   411a8:	asr	x8, x8, #6
   411ac:	add	x1, x8, #0x1
   411b0:	ldr	x8, [sp, #8]
   411b4:	add	x3, x9, x8
   411b8:	bl	c3d0 <mpfr_round_p@plt>
   411bc:	cbnz	w0, 41204 <mpfr_erfc@@Base+0x600>
   411c0:	b	40e1c <mpfr_erfc@@Base+0x218>
   411c4:	mov	x8, xzr
   411c8:	b	40dd8 <mpfr_erfc@@Base+0x1d4>
   411cc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   411d0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   411d4:	mov	w1, #0xee                  	// #238
   411d8:	add	x0, x0, #0x93b
   411dc:	add	x2, x2, #0x90d
   411e0:	bl	cb90 <mpfr_assert_fail@plt>
   411e4:	b	40dcc <mpfr_erfc@@Base+0x1c8>
   411e8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   411ec:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   411f0:	mov	w1, #0x10a                 	// #266
   411f4:	add	x0, x0, #0x93b
   411f8:	add	x2, x2, #0x922
   411fc:	bl	cb90 <mpfr_assert_fail@plt>
   41200:	b	40e30 <mpfr_erfc@@Base+0x22c>
   41204:	ldr	w3, [sp, #40]
   41208:	add	x1, sp, #0x20
   4120c:	mov	x0, x19
   41210:	mov	w2, w20
   41214:	bl	c6f0 <mpfr_set4@plt>
   41218:	mov	w22, w0
   4121c:	add	x0, sp, #0x20
   41220:	bl	c110 <mpfr_clear@plt>
   41224:	ldr	x25, [sp, #16]
   41228:	b	413a0 <mpfr_erfc@@Base+0x79c>
   4122c:	ldr	x22, [x21, #16]
   41230:	ldr	x8, [x19]
   41234:	cmp	x22, #0x2
   41238:	b.lt	41244 <mpfr_erfc@@Base+0x640>  // b.tstop
   4123c:	cmp	x8, #0x8
   41240:	b.lt	41350 <mpfr_erfc@@Base+0x74c>  // b.tstop
   41244:	cmp	x22, #0x2
   41248:	b.le	41254 <mpfr_erfc@@Base+0x650>
   4124c:	cmp	x8, #0x1a
   41250:	b.lt	41350 <mpfr_erfc@@Base+0x74c>  // b.tstop
   41254:	cmp	x8, #0x78
   41258:	b.gt	41274 <mpfr_erfc@@Base+0x670>
   4125c:	mov	x1, #0xfffffffffffffff7    	// #-9
   41260:	mov	x0, x21
   41264:	mov	x2, xzr
   41268:	bl	c430 <mpfr_cmp_si_2exp@plt>
   4126c:	cmp	w0, #0x1
   41270:	b.lt	41350 <mpfr_erfc@@Base+0x74c>  // b.tstop
   41274:	mov	x1, #0xffffffffffff956e    	// #-27282
   41278:	mov	x0, x21
   4127c:	mov	x2, xzr
   41280:	bl	c430 <mpfr_cmp_si_2exp@plt>
   41284:	cmp	w0, #0x0
   41288:	b.le	41350 <mpfr_erfc@@Base+0x74c>
   4128c:	cmp	x22, #0x3
   41290:	b.lt	40d24 <mpfr_erfc@@Base+0x120>  // b.tstop
   41294:	sub	x0, x29, #0x20
   41298:	mov	w1, #0x20                  	// #32
   4129c:	bl	cad0 <mpfr_init2@plt>
   412a0:	sub	x0, x29, #0x40
   412a4:	mov	w1, #0x20                  	// #32
   412a8:	bl	cad0 <mpfr_init2@plt>
   412ac:	adrp	x1, 5e000 <mpfr_bases@@Base+0x4f8>
   412b0:	add	x1, x1, #0x919
   412b4:	sub	x0, x29, #0x20
   412b8:	bl	c3a0 <mpfr_set_str_binary@plt>
   412bc:	sub	x0, x29, #0x40
   412c0:	mov	w2, #0x1                   	// #1
   412c4:	mov	x1, x21
   412c8:	bl	c450 <mpfr_sqr@plt>
   412cc:	sub	x0, x29, #0x20
   412d0:	sub	x1, x29, #0x20
   412d4:	sub	x2, x29, #0x40
   412d8:	mov	w3, #0x1                   	// #1
   412dc:	bl	be00 <mpfr_mul@plt>
   412e0:	sub	x0, x29, #0x40
   412e4:	mov	w2, #0x1                   	// #1
   412e8:	mov	x1, x21
   412ec:	bl	be20 <mpfr_neg@plt>
   412f0:	sub	x0, x29, #0x40
   412f4:	sub	x1, x29, #0x40
   412f8:	mov	w2, #0x1                   	// #1
   412fc:	bl	c270 <mpfr_log2@plt>
   41300:	sub	x0, x29, #0x20
   41304:	sub	x1, x29, #0x20
   41308:	sub	x2, x29, #0x40
   4130c:	mov	w3, #0x1                   	// #1
   41310:	bl	c240 <mpfr_add@plt>
   41314:	ldr	x1, [x19]
   41318:	sub	x0, x29, #0x40
   4131c:	mov	w3, #0x2                   	// #2
   41320:	mov	x2, xzr
   41324:	bl	bb40 <mpfr_set_si_2exp@plt>
   41328:	sub	x0, x29, #0x20
   4132c:	sub	x1, x29, #0x40
   41330:	mov	w2, #0x1                   	// #1
   41334:	bl	c9f0 <mpfr_cmp3@plt>
   41338:	mov	w22, w0
   4133c:	sub	x0, x29, #0x20
   41340:	bl	c110 <mpfr_clear@plt>
   41344:	sub	x0, x29, #0x40
   41348:	bl	c110 <mpfr_clear@plt>
   4134c:	tbnz	w22, #31, 40d24 <mpfr_erfc@@Base+0x120>
   41350:	mov	w1, #0x2                   	// #2
   41354:	mov	x0, x19
   41358:	mov	x2, xzr
   4135c:	mov	w3, wzr
   41360:	bl	c640 <mpfr_set_ui_2exp@plt>
   41364:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41368:	ldr	x1, [x0, #2656]
   4136c:	add	x0, x0, #0xa60
   41370:	blr	x1
   41374:	ldr	w8, [x23, x0]
   41378:	orr	w9, w20, #0x2
   4137c:	cmp	w9, #0x3
   41380:	orr	w8, w8, #0x8
   41384:	str	w8, [x23, x0]
   41388:	b.ne	4139c <mpfr_erfc@@Base+0x798>  // b.any
   4138c:	mov	x0, x19
   41390:	bl	be80 <mpfr_nextbelow@plt>
   41394:	mov	w22, #0xffffffff            	// #-1
   41398:	b	413a0 <mpfr_erfc@@Base+0x79c>
   4139c:	mov	w22, #0x1                   	// #1
   413a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   413a4:	ldr	x1, [x0, #2656]
   413a8:	add	x0, x0, #0xa60
   413ac:	blr	x1
   413b0:	str	w27, [x23, x0]
   413b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   413b8:	ldr	x1, [x0, #2592]
   413bc:	add	x0, x0, #0xa20
   413c0:	blr	x1
   413c4:	str	x24, [x23, x0]
   413c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   413cc:	ldr	x1, [x0, #2624]
   413d0:	add	x0, x0, #0xa40
   413d4:	blr	x1
   413d8:	str	x25, [x23, x0]
   413dc:	ldr	x8, [x19, #16]
   413e0:	cmp	x8, x25
   413e4:	b.gt	414c0 <mpfr_erfc@@Base+0x8bc>
   413e8:	cmp	x8, x24
   413ec:	b.lt	414c0 <mpfr_erfc@@Base+0x8bc>  // b.tstop
   413f0:	cbz	w22, 4140c <mpfr_erfc@@Base+0x808>
   413f4:	orr	w8, w27, #0x8
   413f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   413fc:	ldr	x1, [x0, #2656]
   41400:	add	x0, x0, #0xa60
   41404:	blr	x1
   41408:	str	w8, [x23, x0]
   4140c:	mov	w0, w22
   41410:	ldp	x20, x19, [sp, #240]
   41414:	ldp	x22, x21, [sp, #224]
   41418:	ldp	x24, x23, [sp, #208]
   4141c:	ldp	x26, x25, [sp, #192]
   41420:	ldp	x28, x27, [sp, #176]
   41424:	ldp	x29, x30, [sp, #160]
   41428:	add	sp, sp, #0x100
   4142c:	ret
   41430:	add	x0, sp, #0x20
   41434:	bl	c110 <mpfr_clear@plt>
   41438:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4143c:	ldr	x1, [x0, #2656]
   41440:	add	x0, x0, #0xa60
   41444:	blr	x1
   41448:	str	w27, [x23, x0]
   4144c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41450:	ldr	x1, [x0, #2592]
   41454:	add	x0, x0, #0xa20
   41458:	blr	x1
   4145c:	str	x24, [x23, x0]
   41460:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41464:	ldr	x1, [x0, #2624]
   41468:	add	x0, x0, #0xa40
   4146c:	blr	x1
   41470:	ldr	x8, [sp, #16]
   41474:	str	x8, [x23, x0]
   41478:	b	40ca0 <mpfr_erfc@@Base+0x9c>
   4147c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   41480:	cmp	x8, x9
   41484:	b.eq	414fc <mpfr_erfc@@Base+0x8f8>  // b.none
   41488:	mov	x9, #0x2                   	// #2
   4148c:	movk	x9, #0x8000, lsl #48
   41490:	cmp	x8, x9
   41494:	b.ne	41510 <mpfr_erfc@@Base+0x90c>  // b.any
   41498:	sub	x8, x28, #0x2
   4149c:	str	x8, [x19, #16]
   414a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   414a4:	ldr	x1, [x0, #2656]
   414a8:	add	x0, x0, #0xa60
   414ac:	blr	x1
   414b0:	ldr	w8, [x23, x0]
   414b4:	mov	w22, wzr
   414b8:	orr	w8, w8, #0x4
   414bc:	b	41408 <mpfr_erfc@@Base+0x804>
   414c0:	mov	x0, x19
   414c4:	mov	w1, w22
   414c8:	mov	w2, w20
   414cc:	bl	cb80 <mpfr_check_range@plt>
   414d0:	b	40cb4 <mpfr_erfc@@Base+0xb0>
   414d4:	mov	x8, xzr
   414d8:	b	40d68 <mpfr_erfc@@Base+0x164>
   414dc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   414e0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   414e4:	add	x0, x0, #0x93b
   414e8:	add	x2, x2, #0xe01
   414ec:	mov	w1, #0xe2                  	// #226
   414f0:	bl	cb90 <mpfr_assert_fail@plt>
   414f4:	ldr	x8, [x19]
   414f8:	b	40d58 <mpfr_erfc@@Base+0x154>
   414fc:	ldr	w8, [x21, #8]
   41500:	cmp	w8, #0x1
   41504:	cset	w8, lt  // lt = tstop
   41508:	lsl	x1, x8, #1
   4150c:	b	41514 <mpfr_erfc@@Base+0x910>
   41510:	mov	w1, #0x1                   	// #1
   41514:	mov	x0, x19
   41518:	mov	x2, xzr
   4151c:	mov	w3, w20
   41520:	bl	c640 <mpfr_set_ui_2exp@plt>
   41524:	b	40cb4 <mpfr_erfc@@Base+0xb0>
   41528:	ldr	w8, [x21, #8]
   4152c:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   41530:	ldr	x1, [x1, #3944]
   41534:	mov	x0, x19
   41538:	lsr	w3, w8, #31
   4153c:	mov	w4, w20
   41540:	bl	c590 <mpfr_round_near_x@plt>
   41544:	mov	w22, w0
   41548:	cbnz	w0, 413a0 <mpfr_erfc@@Base+0x79c>
   4154c:	b	40d44 <mpfr_erfc@@Base+0x140>

0000000000041550 <mpfr_atan2@@Base>:
   41550:	sub	sp, sp, #0xc0
   41554:	stp	x29, x30, [sp, #96]
   41558:	stp	x28, x27, [sp, #112]
   4155c:	stp	x26, x25, [sp, #128]
   41560:	stp	x24, x23, [sp, #144]
   41564:	stp	x22, x21, [sp, #160]
   41568:	stp	x20, x19, [sp, #176]
   4156c:	ldr	x8, [x2, #16]
   41570:	mov	x11, #0x4                   	// #4
   41574:	movk	x11, #0x8000, lsl #48
   41578:	mov	w20, w3
   4157c:	mov	x22, x2
   41580:	mov	x21, x1
   41584:	cmp	x8, x11
   41588:	mov	x19, x0
   4158c:	add	x29, sp, #0x60
   41590:	b.lt	419fc <mpfr_atan2@@Base+0x4ac>  // b.tstop
   41594:	ldr	x9, [x21, #16]
   41598:	cmp	x9, x11
   4159c:	b.lt	41a0c <mpfr_atan2@@Base+0x4bc>  // b.tstop
   415a0:	ldr	w8, [x22, #8]
   415a4:	mrs	x27, tpidr_el0
   415a8:	cmp	w8, #0x1
   415ac:	b.lt	415bc <mpfr_atan2@@Base+0x6c>  // b.tstop
   415b0:	mov	x0, x22
   415b4:	bl	bfb0 <mpfr_powerof2_raw@plt>
   415b8:	cbnz	w0, 41a80 <mpfr_atan2@@Base+0x530>
   415bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   415c0:	ldr	x1, [x0, #2656]
   415c4:	add	x0, x0, #0xa60
   415c8:	blr	x1
   415cc:	ldr	w28, [x27, x0]
   415d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   415d4:	ldr	x1, [x0, #2592]
   415d8:	add	x0, x0, #0xa20
   415dc:	blr	x1
   415e0:	ldr	x24, [x27, x0]
   415e4:	mov	x8, x0
   415e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   415ec:	ldr	x1, [x0, #2624]
   415f0:	add	x0, x0, #0xa40
   415f4:	blr	x1
   415f8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   415fc:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   41600:	ldr	x25, [x27, x0]
   41604:	str	x9, [x27, x8]
   41608:	str	x10, [x27, x0]
   4160c:	ldr	x8, [x19]
   41610:	cmp	x8, #0x1
   41614:	add	x23, x8, #0x3
   41618:	b.eq	41a58 <mpfr_atan2@@Base+0x508>  // b.none
   4161c:	b.le	41a60 <mpfr_atan2@@Base+0x510>
   41620:	sub	x8, x8, #0x1
   41624:	clz	x8, x8
   41628:	mov	w9, #0x40                  	// #64
   4162c:	sub	x8, x9, x8
   41630:	add	x23, x23, x8
   41634:	sub	x0, x29, #0x20
   41638:	mov	x1, x23
   4163c:	bl	cad0 <mpfr_init2@plt>
   41640:	ldr	w8, [x22, #8]
   41644:	cmp	w8, #0x1
   41648:	b.lt	41788 <mpfr_atan2@@Base+0x238>  // b.tstop
   4164c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41650:	ldr	x1, [x0, #2656]
   41654:	add	x0, x0, #0xa60
   41658:	blr	x1
   4165c:	str	wzr, [x27, x0]
   41660:	sub	x0, x29, #0x20
   41664:	mov	x1, x21
   41668:	mov	x2, x22
   4166c:	mov	w3, wzr
   41670:	bl	c670 <mpfr_div@plt>
   41674:	cbz	w0, 41950 <mpfr_atan2@@Base+0x400>
   41678:	cmp	w20, #0x0
   4167c:	mov	w8, #0x40                  	// #64
   41680:	cset	w26, eq  // eq = none
   41684:	str	x8, [sp, #24]
   41688:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4168c:	ldr	x1, [x0, #2656]
   41690:	add	x0, x0, #0xa60
   41694:	blr	x1
   41698:	ldrb	w8, [x27, x0]
   4169c:	tbnz	w8, #0, 41b04 <mpfr_atan2@@Base+0x5b4>
   416a0:	sub	x0, x29, #0x20
   416a4:	sub	x1, x29, #0x20
   416a8:	mov	w2, wzr
   416ac:	bl	c6e0 <mpfr_atan@plt>
   416b0:	ldur	x8, [x29, #-16]
   416b4:	mov	x9, #0x4                   	// #4
   416b8:	movk	x9, #0x8000, lsl #48
   416bc:	cmp	x8, x9
   416c0:	b.lt	416f8 <mpfr_atan2@@Base+0x1a8>  // b.tstop
   416c4:	ldur	x8, [x29, #-32]
   416c8:	ldr	x9, [x19]
   416cc:	ldur	x0, [x29, #-8]
   416d0:	sub	x2, x23, #0x2
   416d4:	sub	x10, x8, #0x1
   416d8:	add	x8, x8, #0x3e
   416dc:	cmp	x10, #0x0
   416e0:	csel	x8, x8, x10, lt  // lt = tstop
   416e4:	asr	x8, x8, #6
   416e8:	add	x1, x8, #0x1
   416ec:	add	x3, x9, x26
   416f0:	bl	c3d0 <mpfr_round_p@plt>
   416f4:	cbnz	w0, 41938 <mpfr_atan2@@Base+0x3e8>
   416f8:	mov	x8, #0x4                   	// #4
   416fc:	ldr	x9, [sp, #24]
   41700:	movk	x8, #0x8000, lsl #48
   41704:	sub	x8, x8, x23
   41708:	sub	x8, x8, #0x105
   4170c:	cmp	x9, x8
   41710:	mov	x8, x9
   41714:	b.gt	41768 <mpfr_atan2@@Base+0x218>
   41718:	add	x23, x23, x8
   4171c:	cmp	x23, #0x0
   41720:	cinc	x8, x23, lt  // lt = tstop
   41724:	asr	x8, x8, #1
   41728:	sub	x0, x29, #0x20
   4172c:	mov	x1, x23
   41730:	str	x8, [sp, #24]
   41734:	bl	bf80 <mpfr_set_prec@plt>
   41738:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4173c:	ldr	x1, [x0, #2656]
   41740:	add	x0, x0, #0xa60
   41744:	blr	x1
   41748:	str	wzr, [x27, x0]
   4174c:	sub	x0, x29, #0x20
   41750:	mov	x1, x21
   41754:	mov	x2, x22
   41758:	mov	w3, wzr
   4175c:	bl	c670 <mpfr_div@plt>
   41760:	cbnz	w0, 41688 <mpfr_atan2@@Base+0x138>
   41764:	b	41950 <mpfr_atan2@@Base+0x400>
   41768:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4176c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   41770:	mov	w1, #0xef                  	// #239
   41774:	add	x0, x0, #0x942
   41778:	add	x2, x2, #0x922
   4177c:	bl	cb90 <mpfr_assert_fail@plt>
   41780:	ldr	x8, [sp, #24]
   41784:	b	41718 <mpfr_atan2@@Base+0x1c8>
   41788:	add	x0, sp, #0x20
   4178c:	mov	x1, x23
   41790:	bl	cad0 <mpfr_init2@plt>
   41794:	cmp	w20, #0x0
   41798:	mov	w8, #0x40                  	// #64
   4179c:	str	w20, [sp, #20]
   417a0:	str	x8, [sp, #8]
   417a4:	mov	w20, #0x1                   	// #1
   417a8:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   417ac:	cset	w8, eq  // eq = none
   417b0:	str	x8, [sp, #24]
   417b4:	sub	x0, x29, #0x20
   417b8:	mov	x1, x21
   417bc:	mov	x2, x22
   417c0:	mov	w3, wzr
   417c4:	bl	c670 <mpfr_div@plt>
   417c8:	sub	x0, x29, #0x20
   417cc:	sub	x1, x29, #0x20
   417d0:	mov	w2, wzr
   417d4:	stur	w20, [x29, #-24]
   417d8:	bl	c6e0 <mpfr_atan@plt>
   417dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   417e0:	ldr	x1, [x0, #2704]
   417e4:	add	x0, x0, #0xa90
   417e8:	blr	x1
   417ec:	add	x1, x27, x0
   417f0:	add	x0, sp, #0x20
   417f4:	mov	w2, wzr
   417f8:	bl	c3e0 <mpfr_cache@plt>
   417fc:	ldur	x8, [x29, #-16]
   41800:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41804:	ldr	x1, [x0, #2592]
   41808:	add	x0, x0, #0xa20
   4180c:	blr	x1
   41810:	ldr	x9, [x27, x0]
   41814:	cmp	x8, x26
   41818:	sub	x0, x29, #0x20
   4181c:	add	x1, sp, #0x20
   41820:	sub	x9, x9, #0x1
   41824:	sub	x2, x29, #0x20
   41828:	mov	w3, wzr
   4182c:	csel	x20, x9, x8, eq  // eq = none
   41830:	bl	bc20 <mpfr_sub@plt>
   41834:	ldr	w8, [x21, #8]
   41838:	tbz	w8, #31, 41848 <mpfr_atan2@@Base+0x2f8>
   4183c:	ldur	w8, [x29, #-24]
   41840:	neg	w8, w8
   41844:	stur	w8, [x29, #-24]
   41848:	ldur	x9, [x29, #-16]
   4184c:	ldr	x8, [sp, #48]
   41850:	mvn	x10, x9
   41854:	sub	x11, x20, x9
   41858:	add	x8, x8, x10
   4185c:	add	x10, x11, #0x1
   41860:	cmp	x8, x10
   41864:	mov	x10, #0x4                   	// #4
   41868:	movk	x10, #0x8000, lsl #48
   4186c:	csinc	x8, x8, x11, gt
   41870:	cmp	x9, x10
   41874:	b.lt	418bc <mpfr_atan2@@Base+0x36c>  // b.tstop
   41878:	ldur	x9, [x29, #-32]
   4187c:	cmp	x8, #0x0
   41880:	csinv	x8, x8, xzr, ge  // ge = tcont
   41884:	sub	x8, x23, x8
   41888:	sub	x2, x8, #0x2
   4188c:	sub	x8, x9, #0x1
   41890:	add	x9, x9, #0x3e
   41894:	cmp	x8, #0x0
   41898:	csel	x8, x9, x8, lt  // lt = tstop
   4189c:	asr	x8, x8, #6
   418a0:	ldr	x10, [x19]
   418a4:	add	x1, x8, #0x1
   418a8:	ldr	x8, [sp, #24]
   418ac:	ldur	x0, [x29, #-8]
   418b0:	add	x3, x10, x8
   418b4:	bl	c3d0 <mpfr_round_p@plt>
   418b8:	cbnz	w0, 4192c <mpfr_atan2@@Base+0x3dc>
   418bc:	mov	x8, #0x4                   	// #4
   418c0:	ldr	x20, [sp, #8]
   418c4:	movk	x8, #0x8000, lsl #48
   418c8:	sub	x8, x8, x23
   418cc:	sub	x8, x8, #0x105
   418d0:	cmp	x20, x8
   418d4:	b.gt	41910 <mpfr_atan2@@Base+0x3c0>
   418d8:	add	x23, x23, x20
   418dc:	cmp	x23, #0x0
   418e0:	cinc	x8, x23, lt  // lt = tstop
   418e4:	asr	x8, x8, #1
   418e8:	sub	x0, x29, #0x20
   418ec:	mov	x1, x23
   418f0:	str	x8, [sp, #8]
   418f4:	bl	bf80 <mpfr_set_prec@plt>
   418f8:	add	x0, sp, #0x20
   418fc:	mov	x1, x23
   41900:	bl	bf80 <mpfr_set_prec@plt>
   41904:	mov	w20, #0x1                   	// #1
   41908:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   4190c:	b	417b4 <mpfr_atan2@@Base+0x264>
   41910:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   41914:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   41918:	mov	w1, #0x10b                 	// #267
   4191c:	add	x0, x0, #0x942
   41920:	add	x2, x2, #0x922
   41924:	bl	cb90 <mpfr_assert_fail@plt>
   41928:	b	418d8 <mpfr_atan2@@Base+0x388>
   4192c:	add	x0, sp, #0x20
   41930:	bl	c110 <mpfr_clear@plt>
   41934:	ldr	w20, [sp, #20]
   41938:	ldur	w3, [x29, #-24]
   4193c:	sub	x1, x29, #0x20
   41940:	mov	x0, x19
   41944:	mov	w2, w20
   41948:	bl	c6f0 <mpfr_set4@plt>
   4194c:	b	41960 <mpfr_atan2@@Base+0x410>
   41950:	sub	x1, x29, #0x20
   41954:	mov	x0, x19
   41958:	mov	w2, w20
   4195c:	bl	c6e0 <mpfr_atan@plt>
   41960:	mov	w22, w0
   41964:	sub	x0, x29, #0x20
   41968:	bl	c110 <mpfr_clear@plt>
   4196c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41970:	ldr	x1, [x0, #2656]
   41974:	add	x0, x0, #0xa60
   41978:	blr	x1
   4197c:	str	w28, [x27, x0]
   41980:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41984:	ldr	x1, [x0, #2592]
   41988:	add	x0, x0, #0xa20
   4198c:	blr	x1
   41990:	str	x24, [x27, x0]
   41994:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41998:	ldr	x1, [x0, #2624]
   4199c:	add	x0, x0, #0xa40
   419a0:	blr	x1
   419a4:	str	x25, [x27, x0]
   419a8:	ldr	x8, [x19, #16]
   419ac:	cmp	x8, x25
   419b0:	b.gt	41e34 <mpfr_atan2@@Base+0x8e4>
   419b4:	cmp	x8, x24
   419b8:	b.lt	41e34 <mpfr_atan2@@Base+0x8e4>  // b.tstop
   419bc:	cbz	w22, 419d8 <mpfr_atan2@@Base+0x488>
   419c0:	orr	w8, w28, #0x8
   419c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   419c8:	ldr	x1, [x0, #2656]
   419cc:	add	x0, x0, #0xa60
   419d0:	blr	x1
   419d4:	str	w8, [x27, x0]
   419d8:	mov	w0, w22
   419dc:	ldp	x20, x19, [sp, #176]
   419e0:	ldp	x22, x21, [sp, #160]
   419e4:	ldp	x24, x23, [sp, #144]
   419e8:	ldp	x26, x25, [sp, #128]
   419ec:	ldp	x28, x27, [sp, #112]
   419f0:	ldp	x29, x30, [sp, #96]
   419f4:	add	sp, sp, #0xc0
   419f8:	ret
   419fc:	sub	x9, x11, #0x2
   41a00:	cmp	x8, x9
   41a04:	b.eq	41a28 <mpfr_atan2@@Base+0x4d8>  // b.none
   41a08:	ldr	x9, [x21, #16]
   41a0c:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   41a10:	cmp	x9, x10
   41a14:	b.eq	41ba4 <mpfr_atan2@@Base+0x654>  // b.none
   41a18:	mov	x10, #0x2                   	// #2
   41a1c:	movk	x10, #0x8000, lsl #48
   41a20:	cmp	x9, x10
   41a24:	b.ne	41adc <mpfr_atan2@@Base+0x58c>  // b.any
   41a28:	sub	x8, x11, #0x2
   41a2c:	str	x8, [x19, #16]
   41a30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41a34:	ldr	x1, [x0, #2656]
   41a38:	add	x0, x0, #0xa60
   41a3c:	blr	x1
   41a40:	mrs	x8, tpidr_el0
   41a44:	ldr	w9, [x8, x0]
   41a48:	mov	w22, wzr
   41a4c:	orr	w9, w9, #0x4
   41a50:	str	w9, [x8, x0]
   41a54:	b	419d8 <mpfr_atan2@@Base+0x488>
   41a58:	mov	x8, xzr
   41a5c:	b	41630 <mpfr_atan2@@Base+0xe0>
   41a60:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   41a64:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   41a68:	add	x0, x0, #0x942
   41a6c:	add	x2, x2, #0x992
   41a70:	mov	w1, #0xb7                  	// #183
   41a74:	bl	cb90 <mpfr_assert_fail@plt>
   41a78:	ldr	x8, [x19]
   41a7c:	b	41620 <mpfr_atan2@@Base+0xd0>
   41a80:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41a84:	ldr	x1, [x0, #2656]
   41a88:	add	x0, x0, #0xa60
   41a8c:	blr	x1
   41a90:	ldr	x1, [x21]
   41a94:	ldr	w23, [x27, x0]
   41a98:	sub	x0, x29, #0x20
   41a9c:	bl	cad0 <mpfr_init2@plt>
   41aa0:	ldr	x8, [x22, #16]
   41aa4:	sub	x0, x29, #0x20
   41aa8:	mov	x1, x21
   41aac:	mov	w3, wzr
   41ab0:	sub	x2, x8, #0x1
   41ab4:	bl	c470 <mpfr_div_2si@plt>
   41ab8:	cbnz	w0, 41e4c <mpfr_atan2@@Base+0x8fc>
   41abc:	sub	x1, x29, #0x20
   41ac0:	mov	x0, x19
   41ac4:	mov	w2, w20
   41ac8:	bl	c6e0 <mpfr_atan@plt>
   41acc:	mov	w22, w0
   41ad0:	sub	x0, x29, #0x20
   41ad4:	bl	c110 <mpfr_clear@plt>
   41ad8:	b	419d8 <mpfr_atan2@@Base+0x488>
   41adc:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   41ae0:	cmp	x8, x10
   41ae4:	b.ne	41b78 <mpfr_atan2@@Base+0x628>  // b.any
   41ae8:	ldr	w8, [x21, #8]
   41aec:	mov	w1, #0x1                   	// #1
   41af0:	lsr	w2, w8, #31
   41af4:	mov	x0, x19
   41af8:	mov	w3, w20
   41afc:	bl	41e6c <mpfr_atan2@@Base+0x91c>
   41b00:	b	41e44 <mpfr_atan2@@Base+0x8f4>
   41b04:	ldur	x8, [x29, #-16]
   41b08:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   41b0c:	ldur	w21, [x29, #-24]
   41b10:	sub	x0, x29, #0x20
   41b14:	cmp	x8, x9
   41b18:	cset	w8, eq  // eq = none
   41b1c:	cmp	w20, #0x0
   41b20:	csel	w20, w8, w20, eq  // eq = none
   41b24:	bl	c110 <mpfr_clear@plt>
   41b28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41b2c:	ldr	x1, [x0, #2656]
   41b30:	add	x0, x0, #0xa60
   41b34:	blr	x1
   41b38:	str	w28, [x27, x0]
   41b3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41b40:	ldr	x1, [x0, #2592]
   41b44:	add	x0, x0, #0xa20
   41b48:	blr	x1
   41b4c:	str	x24, [x27, x0]
   41b50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41b54:	ldr	x1, [x0, #2624]
   41b58:	add	x0, x0, #0xa40
   41b5c:	blr	x1
   41b60:	str	x25, [x27, x0]
   41b64:	mov	x0, x19
   41b68:	mov	w1, w20
   41b6c:	mov	w2, w21
   41b70:	bl	c420 <mpfr_underflow@plt>
   41b74:	b	41e44 <mpfr_atan2@@Base+0x8f4>
   41b78:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   41b7c:	cmp	x9, x10
   41b80:	b.ne	41ba4 <mpfr_atan2@@Base+0x654>  // b.any
   41b84:	cmp	x8, x10
   41b88:	b.ne	41ae8 <mpfr_atan2@@Base+0x598>  // b.any
   41b8c:	ldr	w8, [x22, #8]
   41b90:	cmp	w8, #0x1
   41b94:	b.lt	41c3c <mpfr_atan2@@Base+0x6ec>  // b.tstop
   41b98:	ldr	w8, [x21, #8]
   41b9c:	mov	w1, #0x2                   	// #2
   41ba0:	b	41af0 <mpfr_atan2@@Base+0x5a0>
   41ba4:	ldr	w8, [x22, #8]
   41ba8:	tbnz	w8, #31, 41bc4 <mpfr_atan2@@Base+0x674>
   41bac:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   41bb0:	str	x8, [x19, #16]
   41bb4:	ldr	w8, [x21, #8]
   41bb8:	mov	w22, wzr
   41bbc:	str	w8, [x19, #8]
   41bc0:	b	419d8 <mpfr_atan2@@Base+0x488>
   41bc4:	ldr	w8, [x21, #8]
   41bc8:	tbnz	w8, #31, 41bf4 <mpfr_atan2@@Base+0x6a4>
   41bcc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41bd0:	ldr	x1, [x0, #2704]
   41bd4:	add	x0, x0, #0xa90
   41bd8:	blr	x1
   41bdc:	mrs	x8, tpidr_el0
   41be0:	add	x1, x8, x0
   41be4:	mov	x0, x19
   41be8:	mov	w2, w20
   41bec:	bl	c3e0 <mpfr_cache@plt>
   41bf0:	b	41e44 <mpfr_atan2@@Base+0x8f4>
   41bf4:	cmp	w20, #0x3
   41bf8:	mov	w8, #0x2                   	// #2
   41bfc:	csel	w8, w8, w20, eq  // eq = none
   41c00:	cmp	w20, #0x2
   41c04:	mov	w9, #0x3                   	// #3
   41c08:	csel	w2, w9, w8, eq  // eq = none
   41c0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41c10:	ldr	x1, [x0, #2704]
   41c14:	add	x0, x0, #0xa90
   41c18:	blr	x1
   41c1c:	mrs	x8, tpidr_el0
   41c20:	add	x1, x8, x0
   41c24:	mov	x0, x19
   41c28:	bl	c3e0 <mpfr_cache@plt>
   41c2c:	ldr	w8, [x19, #8]
   41c30:	neg	w22, w0
   41c34:	neg	w8, w8
   41c38:	b	41bbc <mpfr_atan2@@Base+0x66c>
   41c3c:	ldr	x8, [x19]
   41c40:	add	x22, x8, #0xa
   41c44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41c48:	ldr	x1, [x0, #2656]
   41c4c:	add	x0, x0, #0xa60
   41c50:	blr	x1
   41c54:	mrs	x25, tpidr_el0
   41c58:	ldr	w27, [x25, x0]
   41c5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41c60:	ldr	x1, [x0, #2592]
   41c64:	add	x0, x0, #0xa20
   41c68:	blr	x1
   41c6c:	ldr	x28, [x25, x0]
   41c70:	mov	x8, x0
   41c74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41c78:	ldr	x1, [x0, #2624]
   41c7c:	add	x0, x0, #0xa40
   41c80:	blr	x1
   41c84:	ldr	x23, [x25, x0]
   41c88:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   41c8c:	str	x9, [x25, x8]
   41c90:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   41c94:	str	x8, [x25, x0]
   41c98:	sub	x0, x29, #0x20
   41c9c:	mov	x1, x22
   41ca0:	bl	cad0 <mpfr_init2@plt>
   41ca4:	cmp	w20, #0x0
   41ca8:	mov	w26, #0x40                  	// #64
   41cac:	cset	w24, eq  // eq = none
   41cb0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41cb4:	ldr	x1, [x0, #2704]
   41cb8:	add	x0, x0, #0xa90
   41cbc:	blr	x1
   41cc0:	add	x1, x25, x0
   41cc4:	sub	x0, x29, #0x20
   41cc8:	mov	w2, wzr
   41ccc:	bl	c3e0 <mpfr_cache@plt>
   41cd0:	sub	x0, x29, #0x20
   41cd4:	sub	x1, x29, #0x20
   41cd8:	mov	w2, #0x3                   	// #3
   41cdc:	mov	w3, wzr
   41ce0:	bl	bb10 <mpfr_mul_ui@plt>
   41ce4:	sub	x0, x29, #0x20
   41ce8:	sub	x1, x29, #0x20
   41cec:	mov	w2, #0x2                   	// #2
   41cf0:	mov	w3, wzr
   41cf4:	bl	c950 <mpfr_div_2ui@plt>
   41cf8:	ldur	x8, [x29, #-16]
   41cfc:	mov	x9, #0x4                   	// #4
   41d00:	movk	x9, #0x8000, lsl #48
   41d04:	cmp	x8, x9
   41d08:	b.lt	41d48 <mpfr_atan2@@Base+0x7f8>  // b.tstop
   41d0c:	ldur	x8, [x29, #-32]
   41d10:	ldr	x9, [x19]
   41d14:	ldur	x0, [x29, #-8]
   41d18:	sub	x10, x8, #0x1
   41d1c:	add	x11, x8, #0x3e
   41d20:	cmp	x10, #0x0
   41d24:	sub	x2, x8, #0x2
   41d28:	csel	x8, x11, x10, lt  // lt = tstop
   41d2c:	asr	x8, x8, #6
   41d30:	add	x1, x8, #0x1
   41d34:	add	x3, x9, x24
   41d38:	bl	c3d0 <mpfr_round_p@plt>
   41d3c:	mov	x9, #0x4                   	// #4
   41d40:	movk	x9, #0x8000, lsl #48
   41d44:	cbnz	w0, 41d94 <mpfr_atan2@@Base+0x844>
   41d48:	sub	x8, x9, x22
   41d4c:	sub	x8, x8, #0x105
   41d50:	cmp	x26, x8
   41d54:	b.gt	41d78 <mpfr_atan2@@Base+0x828>
   41d58:	add	x22, x22, x26
   41d5c:	cmp	x22, #0x0
   41d60:	cinc	x8, x22, lt  // lt = tstop
   41d64:	sub	x0, x29, #0x20
   41d68:	mov	x1, x22
   41d6c:	asr	x26, x8, #1
   41d70:	bl	bf80 <mpfr_set_prec@plt>
   41d74:	b	41cb0 <mpfr_atan2@@Base+0x760>
   41d78:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   41d7c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   41d80:	mov	w1, #0x88                  	// #136
   41d84:	add	x0, x0, #0x942
   41d88:	add	x2, x2, #0x94a
   41d8c:	bl	cb90 <mpfr_assert_fail@plt>
   41d90:	b	41d58 <mpfr_atan2@@Base+0x808>
   41d94:	ldr	w8, [x21, #8]
   41d98:	ldur	w3, [x29, #-24]
   41d9c:	tbz	w8, #31, 41da8 <mpfr_atan2@@Base+0x858>
   41da0:	neg	w3, w3
   41da4:	stur	w3, [x29, #-24]
   41da8:	sub	x1, x29, #0x20
   41dac:	mov	x0, x19
   41db0:	mov	w2, w20
   41db4:	bl	c6f0 <mpfr_set4@plt>
   41db8:	mov	w22, w0
   41dbc:	sub	x0, x29, #0x20
   41dc0:	bl	c110 <mpfr_clear@plt>
   41dc4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41dc8:	ldr	x1, [x0, #2656]
   41dcc:	add	x0, x0, #0xa60
   41dd0:	blr	x1
   41dd4:	str	w27, [x25, x0]
   41dd8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41ddc:	ldr	x1, [x0, #2592]
   41de0:	add	x0, x0, #0xa20
   41de4:	blr	x1
   41de8:	str	x28, [x25, x0]
   41dec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41df0:	ldr	x1, [x0, #2624]
   41df4:	add	x0, x0, #0xa40
   41df8:	blr	x1
   41dfc:	str	x23, [x25, x0]
   41e00:	ldr	x8, [x19, #16]
   41e04:	cmp	x8, x23
   41e08:	b.gt	41e34 <mpfr_atan2@@Base+0x8e4>
   41e0c:	cmp	x8, x28
   41e10:	b.lt	41e34 <mpfr_atan2@@Base+0x8e4>  // b.tstop
   41e14:	cbz	w22, 419d8 <mpfr_atan2@@Base+0x488>
   41e18:	orr	w8, w27, #0x8
   41e1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41e20:	ldr	x1, [x0, #2656]
   41e24:	add	x0, x0, #0xa60
   41e28:	blr	x1
   41e2c:	str	w8, [x25, x0]
   41e30:	b	419d8 <mpfr_atan2@@Base+0x488>
   41e34:	mov	x0, x19
   41e38:	mov	w1, w22
   41e3c:	mov	w2, w20
   41e40:	bl	cb80 <mpfr_check_range@plt>
   41e44:	mov	w22, w0
   41e48:	b	419d8 <mpfr_atan2@@Base+0x488>
   41e4c:	sub	x0, x29, #0x20
   41e50:	bl	c110 <mpfr_clear@plt>
   41e54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41e58:	ldr	x1, [x0, #2656]
   41e5c:	add	x0, x0, #0xa60
   41e60:	blr	x1
   41e64:	str	w23, [x27, x0]
   41e68:	b	415bc <mpfr_atan2@@Base+0x6c>
   41e6c:	stp	x29, x30, [sp, #-80]!
   41e70:	stp	x26, x25, [sp, #16]
   41e74:	stp	x24, x23, [sp, #32]
   41e78:	stp	x22, x21, [sp, #48]
   41e7c:	stp	x20, x19, [sp, #64]
   41e80:	mov	x29, sp
   41e84:	mov	w19, w3
   41e88:	mov	w21, w1
   41e8c:	mov	x20, x0
   41e90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41e94:	ldr	x1, [x0, #2656]
   41e98:	add	x0, x0, #0xa60
   41e9c:	blr	x1
   41ea0:	mrs	x23, tpidr_el0
   41ea4:	ldr	w24, [x23, x0]
   41ea8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41eac:	ldr	x1, [x0, #2592]
   41eb0:	add	x0, x0, #0xa20
   41eb4:	blr	x1
   41eb8:	ldr	x25, [x23, x0]
   41ebc:	mov	x8, x0
   41ec0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41ec4:	ldr	x1, [x0, #2624]
   41ec8:	add	x0, x0, #0xa40
   41ecc:	blr	x1
   41ed0:	ldr	x26, [x23, x0]
   41ed4:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   41ed8:	str	x9, [x23, x8]
   41edc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   41ee0:	str	x8, [x23, x0]
   41ee4:	cbz	w2, 41f30 <mpfr_atan2@@Base+0x9e0>
   41ee8:	cmp	w19, #0x3
   41eec:	mov	w8, #0x2                   	// #2
   41ef0:	csel	w8, w8, w19, eq  // eq = none
   41ef4:	cmp	w19, #0x2
   41ef8:	mov	w9, #0x3                   	// #3
   41efc:	csel	w2, w9, w8, eq  // eq = none
   41f00:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41f04:	ldr	x1, [x0, #2704]
   41f08:	add	x0, x0, #0xa90
   41f0c:	blr	x1
   41f10:	add	x1, x23, x0
   41f14:	mov	x0, x20
   41f18:	bl	c3e0 <mpfr_cache@plt>
   41f1c:	ldr	w8, [x20, #8]
   41f20:	neg	w22, w0
   41f24:	neg	w8, w8
   41f28:	str	w8, [x20, #8]
   41f2c:	b	41f54 <mpfr_atan2@@Base+0xa04>
   41f30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41f34:	ldr	x1, [x0, #2704]
   41f38:	add	x0, x0, #0xa90
   41f3c:	blr	x1
   41f40:	add	x1, x23, x0
   41f44:	mov	x0, x20
   41f48:	mov	w2, w19
   41f4c:	bl	c3e0 <mpfr_cache@plt>
   41f50:	mov	w22, w0
   41f54:	sxtw	x2, w21
   41f58:	mov	x0, x20
   41f5c:	mov	x1, x20
   41f60:	mov	w3, w19
   41f64:	bl	c950 <mpfr_div_2ui@plt>
   41f68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41f6c:	ldr	x1, [x0, #2656]
   41f70:	add	x0, x0, #0xa60
   41f74:	blr	x1
   41f78:	str	w24, [x23, x0]
   41f7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41f80:	ldr	x1, [x0, #2592]
   41f84:	add	x0, x0, #0xa20
   41f88:	blr	x1
   41f8c:	str	x25, [x23, x0]
   41f90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41f94:	ldr	x1, [x0, #2624]
   41f98:	add	x0, x0, #0xa40
   41f9c:	blr	x1
   41fa0:	str	x26, [x23, x0]
   41fa4:	ldr	x8, [x20, #16]
   41fa8:	cmp	x8, x26
   41fac:	b.gt	41ff0 <mpfr_atan2@@Base+0xaa0>
   41fb0:	cmp	x8, x25
   41fb4:	b.lt	41ff0 <mpfr_atan2@@Base+0xaa0>  // b.tstop
   41fb8:	cbz	w22, 41fd4 <mpfr_atan2@@Base+0xa84>
   41fbc:	orr	w8, w24, #0x8
   41fc0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   41fc4:	ldr	x1, [x0, #2656]
   41fc8:	add	x0, x0, #0xa60
   41fcc:	blr	x1
   41fd0:	str	w8, [x23, x0]
   41fd4:	mov	w0, w22
   41fd8:	ldp	x20, x19, [sp, #64]
   41fdc:	ldp	x22, x21, [sp, #48]
   41fe0:	ldp	x24, x23, [sp, #32]
   41fe4:	ldp	x26, x25, [sp, #16]
   41fe8:	ldp	x29, x30, [sp], #80
   41fec:	ret
   41ff0:	mov	x0, x20
   41ff4:	mov	w1, w22
   41ff8:	mov	w2, w19
   41ffc:	ldp	x20, x19, [sp, #64]
   42000:	ldp	x22, x21, [sp, #48]
   42004:	ldp	x24, x23, [sp, #32]
   42008:	ldp	x26, x25, [sp, #16]
   4200c:	ldp	x29, x30, [sp], #80
   42010:	b	cb80 <mpfr_check_range@plt>

0000000000042014 <mpfr_subnormalize@@Base>:
   42014:	sub	sp, sp, #0x70
   42018:	stp	x29, x30, [sp, #32]
   4201c:	stp	x24, x23, [sp, #64]
   42020:	stp	x22, x21, [sp, #80]
   42024:	stp	x20, x19, [sp, #96]
   42028:	ldr	x8, [x0, #16]
   4202c:	mov	x9, #0x4                   	// #4
   42030:	movk	x9, #0x8000, lsl #48
   42034:	str	x25, [sp, #48]
   42038:	mov	w19, w1
   4203c:	cmp	x8, x9
   42040:	mrs	x23, tpidr_el0
   42044:	add	x29, sp, #0x20
   42048:	b.lt	4207c <mpfr_subnormalize@@Base+0x68>  // b.tstop
   4204c:	mov	w21, w2
   42050:	mov	x20, x0
   42054:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42058:	ldr	x1, [x0, #2592]
   4205c:	add	x0, x0, #0xa20
   42060:	blr	x1
   42064:	ldr	x9, [x23, x0]
   42068:	ldr	x10, [x20]
   4206c:	add	x10, x9, x10
   42070:	sub	x10, x10, #0x1
   42074:	cmp	x8, x10
   42078:	b.lt	420bc <mpfr_subnormalize@@Base+0xa8>  // b.tstop
   4207c:	cbz	w19, 4209c <mpfr_subnormalize@@Base+0x88>
   42080:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42084:	ldr	x1, [x0, #2656]
   42088:	add	x0, x0, #0xa60
   4208c:	blr	x1
   42090:	ldr	w8, [x23, x0]
   42094:	orr	w8, w8, #0x8
   42098:	str	w8, [x23, x0]
   4209c:	mov	w0, w19
   420a0:	ldp	x20, x19, [sp, #96]
   420a4:	ldp	x22, x21, [sp, #80]
   420a8:	ldp	x24, x23, [sp, #64]
   420ac:	ldr	x25, [sp, #48]
   420b0:	ldp	x29, x30, [sp, #32]
   420b4:	add	sp, sp, #0x70
   420b8:	ret
   420bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   420c0:	ldr	x1, [x0, #2656]
   420c4:	add	x0, x0, #0xa60
   420c8:	blr	x1
   420cc:	ldr	w10, [x23, x0]
   420d0:	subs	x8, x8, x9
   420d4:	orr	w10, w10, #0x1
   420d8:	str	w10, [x23, x0]
   420dc:	ldr	w24, [x20, #8]
   420e0:	b.ne	421a8 <mpfr_subnormalize@@Base+0x194>  // b.any
   420e4:	mov	x0, x20
   420e8:	bl	bfb0 <mpfr_powerof2_raw@plt>
   420ec:	cbnz	w0, 4207c <mpfr_subnormalize@@Base+0x68>
   420f0:	cmp	w21, #0x1
   420f4:	b.eq	422cc <mpfr_subnormalize@@Base+0x2b8>  // b.none
   420f8:	cbnz	w21, 422bc <mpfr_subnormalize@@Base+0x2a8>
   420fc:	ldr	x8, [x20]
   42100:	sub	x10, x8, #0x1
   42104:	add	x9, x8, #0x3e
   42108:	ldr	x8, [x20, #24]
   4210c:	cmp	x10, #0x0
   42110:	csel	x10, x9, x10, lt  // lt = tstop
   42114:	asr	x10, x10, #6
   42118:	ldr	x11, [x8, x10, lsl #3]
   4211c:	tbz	x11, #62, 422cc <mpfr_subnormalize@@Base+0x2b8>
   42120:	cmp	x9, #0x7f
   42124:	and	x9, x11, #0x3fffffffffffffff
   42128:	b.cc	42144 <mpfr_subnormalize@@Base+0x130>  // b.lo, b.ul, b.last
   4212c:	cbnz	x9, 42144 <mpfr_subnormalize@@Base+0x130>
   42130:	sub	x10, x10, #0x1
   42134:	ldr	x9, [x8, x10, lsl #3]
   42138:	cbz	x10, 42144 <mpfr_subnormalize@@Base+0x130>
   4213c:	sub	x10, x10, #0x1
   42140:	cbz	x9, 42134 <mpfr_subnormalize@@Base+0x120>
   42144:	cbnz	x9, 42168 <mpfr_subnormalize@@Base+0x154>
   42148:	cmp	w19, #0x0
   4214c:	cset	w8, gt
   42150:	cmp	w24, #0x0
   42154:	cset	w9, gt
   42158:	and	w8, w8, w9
   4215c:	tbnz	w8, #0, 422cc <mpfr_subnormalize@@Base+0x2b8>
   42160:	and	w8, w24, w19
   42164:	tbnz	w8, #31, 422cc <mpfr_subnormalize@@Base+0x2b8>
   42168:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4216c:	ldr	x1, [x0, #2592]
   42170:	add	x0, x0, #0xa20
   42174:	blr	x1
   42178:	ldr	x8, [x23, x0]
   4217c:	mov	x0, x20
   42180:	add	x1, x8, #0x1
   42184:	bl	c310 <mpfr_setmin@plt>
   42188:	cbz	w24, 422f4 <mpfr_subnormalize@@Base+0x2e0>
   4218c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42190:	ldr	x1, [x0, #2656]
   42194:	add	x0, x0, #0xa60
   42198:	blr	x1
   4219c:	ldr	w8, [x23, x0]
   421a0:	mov	w19, w24
   421a4:	b	42094 <mpfr_subnormalize@@Base+0x80>
   421a8:	add	x1, x8, #0x1
   421ac:	mov	x0, sp
   421b0:	bl	cad0 <mpfr_init2@plt>
   421b4:	ldr	x8, [x20, #16]
   421b8:	str	w24, [sp, #8]
   421bc:	ldr	x12, [sp]
   421c0:	ldr	x22, [sp, #24]
   421c4:	str	x8, [sp, #16]
   421c8:	ldr	x8, [x20]
   421cc:	sub	x9, x12, #0x1
   421d0:	add	x10, x12, #0x3e
   421d4:	sub	x11, x8, #0x1
   421d8:	add	x13, x8, #0x3e
   421dc:	cmp	x11, #0x0
   421e0:	csel	x11, x13, x11, lt  // lt = tstop
   421e4:	cmp	x9, #0x0
   421e8:	csel	x9, x10, x9, lt  // lt = tstop
   421ec:	asr	x13, x11, #6
   421f0:	asr	x9, x9, #6
   421f4:	add	x17, x13, #0x1
   421f8:	cmp	x12, x8
   421fc:	add	x11, x9, #0x1
   42200:	b.ge	42484 <mpfr_subnormalize@@Base+0x470>  // b.tcont
   42204:	ldr	x14, [x20, #24]
   42208:	neg	w8, w12
   4220c:	ands	x15, x8, #0x3f
   42210:	mvn	x10, x9
   42214:	add	x8, x14, x17, lsl #3
   42218:	add	x1, x8, x10, lsl #3
   4221c:	b.eq	424c0 <mpfr_subnormalize@@Base+0x4ac>  // b.none
   42220:	ldr	x16, [x1]
   42224:	sub	x15, x15, #0x1
   42228:	mov	w18, #0x1                   	// #1
   4222c:	lsl	x18, x18, x15
   42230:	sub	x0, x18, #0x1
   42234:	and	x15, x16, x18
   42238:	and	x16, x16, x0
   4223c:	cbz	w21, 42244 <mpfr_subnormalize@@Base+0x230>
   42240:	cbnz	x15, 4226c <mpfr_subnormalize@@Base+0x258>
   42244:	cbnz	x16, 4226c <mpfr_subnormalize@@Base+0x258>
   42248:	sub	x17, x17, x11
   4224c:	cbz	x17, 4226c <mpfr_subnormalize@@Base+0x258>
   42250:	mvn	x16, x9
   42254:	add	x17, x16, x13
   42258:	ldr	x16, [x14, x17, lsl #3]
   4225c:	subs	x17, x17, #0x1
   42260:	cset	w0, cs  // cs = hs, nlast
   42264:	cbnz	x16, 4226c <mpfr_subnormalize@@Base+0x258>
   42268:	tbnz	w0, #0, 42258 <mpfr_subnormalize@@Base+0x244>
   4226c:	lsl	x25, x18, #1
   42270:	cmp	w21, #0x5
   42274:	b.eq	42374 <mpfr_subnormalize@@Base+0x360>  // b.none
   42278:	cmp	w21, #0x1
   4227c:	b.eq	422ac <mpfr_subnormalize@@Base+0x298>  // b.none
   42280:	cbnz	w21, 422a0 <mpfr_subnormalize@@Base+0x28c>
   42284:	cbz	x15, 422ac <mpfr_subnormalize@@Base+0x298>
   42288:	cbnz	x16, 42304 <mpfr_subnormalize@@Base+0x2f0>
   4228c:	ldr	x15, [x1]
   42290:	tst	x15, x25
   42294:	b.eq	42548 <mpfr_subnormalize@@Base+0x534>  // b.none
   42298:	lsl	w24, w24, #1
   4229c:	b	42304 <mpfr_subnormalize@@Base+0x2f0>
   422a0:	add	w17, w21, w24, lsr #31
   422a4:	cmp	w17, #0x3
   422a8:	b.ne	422fc <mpfr_subnormalize@@Base+0x2e8>  // b.any
   422ac:	orr	x8, x16, x15
   422b0:	cmp	x8, #0x0
   422b4:	csneg	w24, wzr, w24, eq  // eq = none
   422b8:	b	42378 <mpfr_subnormalize@@Base+0x364>
   422bc:	ldr	w8, [x20, #8]
   422c0:	add	w8, w21, w8, lsr #31
   422c4:	cmp	w8, #0x3
   422c8:	b.ne	42168 <mpfr_subnormalize@@Base+0x154>  // b.any
   422cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   422d0:	ldr	x1, [x0, #2592]
   422d4:	add	x0, x0, #0xa20
   422d8:	blr	x1
   422dc:	ldr	x1, [x23, x0]
   422e0:	mov	x0, x20
   422e4:	bl	c310 <mpfr_setmin@plt>
   422e8:	cbz	w24, 422f4 <mpfr_subnormalize@@Base+0x2e0>
   422ec:	neg	w19, w24
   422f0:	b	42080 <mpfr_subnormalize@@Base+0x6c>
   422f4:	mov	w19, wzr
   422f8:	b	4209c <mpfr_subnormalize@@Base+0x88>
   422fc:	orr	x15, x16, x15
   42300:	cbz	x15, 42374 <mpfr_subnormalize@@Base+0x360>
   42304:	ldr	x11, [x1]
   42308:	adds	x11, x11, x25
   4230c:	str	x11, [x22]
   42310:	b.cc	42434 <mpfr_subnormalize@@Base+0x420>  // b.lo, b.ul, b.last
   42314:	sub	x13, x13, x9
   42318:	add	x13, x14, x13, lsl #3
   4231c:	mov	x12, xzr
   42320:	add	x11, x22, #0x8
   42324:	add	x13, x13, #0x8
   42328:	add	x14, x12, #0x1
   4232c:	cmp	x14, x9
   42330:	b.gt	42460 <mpfr_subnormalize@@Base+0x44c>
   42334:	ldr	x15, [x13, x12, lsl #3]
   42338:	mov	x12, x14
   4233c:	adds	x15, x15, #0x1
   42340:	str	x15, [x11], #8
   42344:	b.cs	42328 <mpfr_subnormalize@@Base+0x314>  // b.hs, b.nlast
   42348:	cmp	x1, x22
   4234c:	b.eq	4238c <mpfr_subnormalize@@Base+0x378>  // b.none
   42350:	cmp	x14, x9
   42354:	b.ge	4238c <mpfr_subnormalize@@Base+0x378>  // b.tcont
   42358:	add	x9, x10, x14
   4235c:	add	x9, x9, #0x1
   42360:	ldr	x10, [x8, x9, lsl #3]
   42364:	adds	x9, x9, #0x1
   42368:	str	x10, [x11], #8
   4236c:	b.cc	42360 <mpfr_subnormalize@@Base+0x34c>  // b.lo, b.ul, b.last
   42370:	b	4238c <mpfr_subnormalize@@Base+0x378>
   42374:	mov	w24, wzr
   42378:	cmp	x22, x1
   4237c:	b.eq	4238c <mpfr_subnormalize@@Base+0x378>  // b.none
   42380:	lsl	x2, x11, #3
   42384:	mov	x0, x22
   42388:	bl	bad0 <memcpy@plt>
   4238c:	ldr	x8, [x22]
   42390:	neg	x9, x25
   42394:	and	x8, x8, x9
   42398:	str	x8, [x22]
   4239c:	cbz	w19, 424b8 <mpfr_subnormalize@@Base+0x4a4>
   423a0:	cbz	w21, 423e0 <mpfr_subnormalize@@Base+0x3cc>
   423a4:	cmp	w24, #0x0
   423a8:	csel	w19, w19, w24, eq  // eq = none
   423ac:	ldr	w3, [sp, #8]
   423b0:	mov	x1, sp
   423b4:	mov	x0, x20
   423b8:	mov	w2, w21
   423bc:	bl	c6f0 <mpfr_set4@plt>
   423c0:	cbnz	w0, 424dc <mpfr_subnormalize@@Base+0x4c8>
   423c4:	ldr	x8, [x20, #16]
   423c8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   423cc:	cmp	x8, x9
   423d0:	b.le	424f8 <mpfr_subnormalize@@Base+0x4e4>
   423d4:	mov	x0, sp
   423d8:	bl	c110 <mpfr_clear@plt>
   423dc:	b	4207c <mpfr_subnormalize@@Base+0x68>
   423e0:	cmp	w24, #0x2
   423e4:	b.eq	423f0 <mpfr_subnormalize@@Base+0x3dc>  // b.none
   423e8:	cmn	w24, #0x2
   423ec:	b.ne	423a4 <mpfr_subnormalize@@Base+0x390>  // b.any
   423f0:	cmp	w24, #0x0
   423f4:	cset	w8, gt
   423f8:	csinv	w8, w8, wzr, ge  // ge = tcont
   423fc:	cmp	w19, #0x0
   42400:	cset	w9, gt
   42404:	csinv	w9, w9, wzr, ge  // ge = tcont
   42408:	cmp	w8, w9
   4240c:	b.ne	424b8 <mpfr_subnormalize@@Base+0x4a4>  // b.any
   42410:	ldr	w9, [x20, #8]
   42414:	mov	x0, sp
   42418:	cmp	w9, #0x0
   4241c:	cset	w9, ne  // ne = any
   42420:	csinv	w9, w9, wzr, ge  // ge = tcont
   42424:	cmp	w8, w9
   42428:	b.ne	42478 <mpfr_subnormalize@@Base+0x464>  // b.any
   4242c:	bl	c4b0 <mpfr_nexttozero@plt>
   42430:	b	4247c <mpfr_subnormalize@@Base+0x468>
   42434:	cmp	x12, #0x41
   42438:	b.lt	4238c <mpfr_subnormalize@@Base+0x378>  // b.tstop
   4243c:	cmp	x1, x22
   42440:	b.eq	4238c <mpfr_subnormalize@@Base+0x378>  // b.none
   42444:	add	x9, x10, #0x1
   42448:	add	x10, x22, #0x8
   4244c:	ldr	x11, [x8, x9, lsl #3]
   42450:	adds	x9, x9, #0x1
   42454:	str	x11, [x10], #8
   42458:	b.cc	4244c <mpfr_subnormalize@@Base+0x438>  // b.lo, b.ul, b.last
   4245c:	b	4238c <mpfr_subnormalize@@Base+0x378>
   42460:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   42464:	str	x8, [x22, x9, lsl #3]
   42468:	ldr	x8, [sp, #16]
   4246c:	add	x8, x8, #0x1
   42470:	str	x8, [sp, #16]
   42474:	b	4238c <mpfr_subnormalize@@Base+0x378>
   42478:	bl	c6c0 <mpfr_nexttoinf@plt>
   4247c:	neg	w19, w24
   42480:	b	423ac <mpfr_subnormalize@@Base+0x398>
   42484:	ldr	x1, [x20, #24]
   42488:	sub	x24, x11, x17
   4248c:	add	x0, x22, x24, lsl #3
   42490:	cmp	x0, x1
   42494:	b.eq	424a0 <mpfr_subnormalize@@Base+0x48c>  // b.none
   42498:	lsl	x2, x17, #3
   4249c:	bl	bad0 <memcpy@plt>
   424a0:	lsl	x2, x24, #3
   424a4:	mov	x0, x22
   424a8:	mov	w1, wzr
   424ac:	bl	c1b0 <memset@plt>
   424b0:	mov	w24, wzr
   424b4:	cbnz	w19, 423a0 <mpfr_subnormalize@@Base+0x38c>
   424b8:	mov	w19, w24
   424bc:	b	423ac <mpfr_subnormalize@@Base+0x398>
   424c0:	ldur	x16, [x1, #-8]
   424c4:	and	x15, x16, #0x8000000000000000
   424c8:	and	x16, x16, #0x7fffffffffffffff
   424cc:	cbz	w21, 42514 <mpfr_subnormalize@@Base+0x500>
   424d0:	cbz	x15, 42514 <mpfr_subnormalize@@Base+0x500>
   424d4:	mov	w25, #0x1                   	// #1
   424d8:	b	42270 <mpfr_subnormalize@@Base+0x25c>
   424dc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   424e0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   424e4:	add	x0, x0, #0x9ad
   424e8:	add	x2, x2, #0xdd5
   424ec:	mov	w1, #0xa0                  	// #160
   424f0:	bl	cb90 <mpfr_assert_fail@plt>
   424f4:	b	423c4 <mpfr_subnormalize@@Base+0x3b0>
   424f8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   424fc:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   42500:	add	x0, x0, #0x9ad
   42504:	add	x2, x2, #0x9b9
   42508:	mov	w1, #0xa1                  	// #161
   4250c:	bl	cb90 <mpfr_assert_fail@plt>
   42510:	b	423d4 <mpfr_subnormalize@@Base+0x3c0>
   42514:	mov	w25, #0x1                   	// #1
   42518:	cbnz	x16, 42270 <mpfr_subnormalize@@Base+0x25c>
   4251c:	sub	x17, x13, x11
   42520:	cbz	x17, 42270 <mpfr_subnormalize@@Base+0x25c>
   42524:	sub	x16, x13, x9
   42528:	sub	x17, x16, #0x2
   4252c:	mov	w25, #0x1                   	// #1
   42530:	ldr	x16, [x14, x17, lsl #3]
   42534:	subs	x17, x17, #0x1
   42538:	cset	w18, cs  // cs = hs, nlast
   4253c:	cbnz	x16, 42270 <mpfr_subnormalize@@Base+0x25c>
   42540:	tbnz	w18, #0, 42530 <mpfr_subnormalize@@Base+0x51c>
   42544:	b	42270 <mpfr_subnormalize@@Base+0x25c>
   42548:	neg	w24, w24, lsl #1
   4254c:	b	42378 <mpfr_subnormalize@@Base+0x364>

0000000000042550 <mpfr_const_catalan_internal@@Base>:
   42550:	sub	sp, sp, #0x190
   42554:	stp	x29, x30, [sp, #304]
   42558:	stp	x28, x27, [sp, #320]
   4255c:	stp	x26, x25, [sp, #336]
   42560:	stp	x24, x23, [sp, #352]
   42564:	stp	x22, x21, [sp, #368]
   42568:	stp	x20, x19, [sp, #384]
   4256c:	ldr	x22, [x0]
   42570:	mov	x19, x0
   42574:	mov	w20, w1
   42578:	add	x29, sp, #0x130
   4257c:	subs	x21, x22, #0x1
   42580:	b.eq	4289c <mpfr_const_catalan_internal@@Base+0x34c>  // b.none
   42584:	b.le	428a4 <mpfr_const_catalan_internal@@Base+0x354>
   42588:	clz	x8, x21
   4258c:	mov	w9, #0x40                  	// #64
   42590:	sub	x8, x9, x8
   42594:	mov	x24, #0xfffffffffffffeff    	// #-257
   42598:	movk	x24, #0x7fff, lsl #48
   4259c:	add	x8, x8, x22
   425a0:	sub	x9, x24, #0x7
   425a4:	cmp	x8, x9
   425a8:	b.gt	428c0 <mpfr_const_catalan_internal@@Base+0x370>
   425ac:	add	x9, x8, #0x6
   425b0:	add	x10, x8, #0x45
   425b4:	cmp	x9, #0x0
   425b8:	csel	x9, x10, x9, lt  // lt = tstop
   425bc:	asr	x9, x9, #6
   425c0:	add	x23, x9, #0x1
   425c4:	add	x9, x23, x23, lsl #1
   425c8:	cmp	x9, #0x11
   425cc:	add	x25, x8, #0x7
   425d0:	b.lt	425e4 <mpfr_const_catalan_internal@@Base+0x94>  // b.tstop
   425d4:	lsl	x21, x9, #3
   425d8:	mov	x0, x21
   425dc:	bl	cd50 <mpfr_allocate_func@plt>
   425e0:	b	425f0 <mpfr_const_catalan_internal@@Base+0xa0>
   425e4:	add	x8, sp, #0x8
   425e8:	mov	x21, xzr
   425ec:	add	x0, x8, #0x10
   425f0:	stp	x21, x0, [sp, #8]
   425f4:	stur	x0, [x29, #-16]
   425f8:	mov	w26, #0x1                   	// #1
   425fc:	add	x8, x0, x23, lsl #3
   42600:	add	x9, x0, x23, lsl #4
   42604:	sub	x0, x29, #0x78
   42608:	stur	x25, [x29, #-104]
   4260c:	stur	w26, [x29, #-32]
   42610:	stp	x8, x25, [x29, #-48]
   42614:	stur	w26, [x29, #-64]
   42618:	stp	x9, x25, [x29, #-80]
   4261c:	stur	w26, [x29, #-96]
   42620:	bl	c040 <mpfr_mpz_init@plt>
   42624:	sub	x0, x29, #0x88
   42628:	bl	c040 <mpfr_mpz_init@plt>
   4262c:	add	x0, sp, #0x98
   42630:	bl	c040 <mpfr_mpz_init@plt>
   42634:	cmp	w20, #0x0
   42638:	adrp	x21, 5e000 <mpfr_bases@@Base+0x4f8>
   4263c:	adrp	x23, 57000 <mpfr_free_pool@@Base+0x187c>
   42640:	mov	w28, #0x40                  	// #64
   42644:	mrs	x27, tpidr_el0
   42648:	add	x21, x21, #0xa07
   4264c:	cinc	x22, x22, eq  // eq = none
   42650:	add	x23, x23, #0xff6
   42654:	sub	x0, x29, #0x28
   42658:	mov	w1, #0x3                   	// #3
   4265c:	mov	w2, #0x2                   	// #2
   42660:	bl	c890 <mpfr_sqrt_ui@plt>
   42664:	sub	x0, x29, #0x28
   42668:	sub	x1, x29, #0x28
   4266c:	mov	w2, #0x2                   	// #2
   42670:	mov	w3, #0x2                   	// #2
   42674:	bl	c2d0 <mpfr_add_ui@plt>
   42678:	sub	x0, x29, #0x28
   4267c:	sub	x1, x29, #0x28
   42680:	mov	w2, #0x2                   	// #2
   42684:	bl	c130 <mpfr_log@plt>
   42688:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4268c:	ldr	x1, [x0, #2704]
   42690:	add	x0, x0, #0xa90
   42694:	blr	x1
   42698:	add	x1, x27, x0
   4269c:	sub	x0, x29, #0x48
   426a0:	mov	w2, #0x2                   	// #2
   426a4:	bl	c3e0 <mpfr_cache@plt>
   426a8:	sub	x0, x29, #0x28
   426ac:	sub	x1, x29, #0x28
   426b0:	sub	x2, x29, #0x48
   426b4:	mov	w3, wzr
   426b8:	bl	be00 <mpfr_mul@plt>
   426bc:	sub	x8, x25, #0x1
   426c0:	cmp	x8, #0x0
   426c4:	csel	x8, x25, x8, lt  // lt = tstop
   426c8:	asr	x4, x8, #1
   426cc:	sub	x0, x29, #0x78
   426d0:	sub	x1, x29, #0x88
   426d4:	add	x2, sp, #0x98
   426d8:	mov	x3, xzr
   426dc:	bl	428f8 <mpfr_const_catalan@@Base+0x34>
   426e0:	sub	x0, x29, #0x78
   426e4:	sub	x1, x29, #0x78
   426e8:	mov	w2, #0x3                   	// #3
   426ec:	bl	c1a0 <__gmpz_mul_ui@plt>
   426f0:	sub	x0, x29, #0x48
   426f4:	sub	x1, x29, #0x78
   426f8:	mov	w2, #0x2                   	// #2
   426fc:	bl	c2b0 <mpfr_set_z@plt>
   42700:	sub	x0, x29, #0x68
   42704:	add	x1, sp, #0x98
   42708:	mov	w2, #0x3                   	// #3
   4270c:	bl	c2b0 <mpfr_set_z@plt>
   42710:	sub	x0, x29, #0x48
   42714:	sub	x1, x29, #0x48
   42718:	sub	x2, x29, #0x68
   4271c:	mov	w3, wzr
   42720:	bl	c670 <mpfr_div@plt>
   42724:	sub	x0, x29, #0x28
   42728:	sub	x1, x29, #0x28
   4272c:	sub	x2, x29, #0x48
   42730:	mov	w3, wzr
   42734:	bl	c240 <mpfr_add@plt>
   42738:	sub	x0, x29, #0x28
   4273c:	sub	x1, x29, #0x28
   42740:	mov	w2, #0x3                   	// #3
   42744:	mov	w3, wzr
   42748:	bl	c950 <mpfr_div_2ui@plt>
   4274c:	ldur	x8, [x29, #-24]
   42750:	add	x9, x24, #0x105
   42754:	cmp	x8, x9
   42758:	b.lt	4278c <mpfr_const_catalan_internal@@Base+0x23c>  // b.tstop
   4275c:	ldur	x8, [x29, #-40]
   42760:	ldur	x0, [x29, #-16]
   42764:	sub	x2, x25, #0x5
   42768:	mov	x3, x22
   4276c:	sub	x9, x8, #0x1
   42770:	add	x8, x8, #0x3e
   42774:	cmp	x9, #0x0
   42778:	csel	x8, x8, x9, lt  // lt = tstop
   4277c:	asr	x8, x8, #6
   42780:	add	x1, x8, #0x1
   42784:	bl	c3d0 <mpfr_round_p@plt>
   42788:	cbnz	w0, 42838 <mpfr_const_catalan_internal@@Base+0x2e8>
   4278c:	sub	x8, x24, x25
   42790:	cmp	x28, x8
   42794:	b.gt	42824 <mpfr_const_catalan_internal@@Base+0x2d4>
   42798:	add	x25, x25, x28
   4279c:	cmp	x25, #0x0
   427a0:	cinc	x8, x25, lt  // lt = tstop
   427a4:	cmp	x25, x24
   427a8:	b.gt	428c0 <mpfr_const_catalan_internal@@Base+0x370>
   427ac:	asr	x28, x8, #1
   427b0:	sub	x8, x25, #0x1
   427b4:	add	x9, x25, #0x3e
   427b8:	cmp	x8, #0x0
   427bc:	csel	x8, x9, x8, lt  // lt = tstop
   427c0:	ldr	x1, [sp, #8]
   427c4:	asr	x8, x8, #6
   427c8:	add	x8, x8, #0x1
   427cc:	str	x8, [sp]
   427d0:	add	x8, x8, x8, lsl #1
   427d4:	lsl	x2, x8, #3
   427d8:	str	x2, [sp, #8]
   427dc:	cbz	x1, 427ec <mpfr_const_catalan_internal@@Base+0x29c>
   427e0:	ldr	x0, [sp, #16]
   427e4:	bl	c260 <mpfr_reallocate_func@plt>
   427e8:	b	427f4 <mpfr_const_catalan_internal@@Base+0x2a4>
   427ec:	mov	x0, x2
   427f0:	bl	cd50 <mpfr_allocate_func@plt>
   427f4:	ldr	x9, [sp]
   427f8:	str	x0, [sp, #16]
   427fc:	stur	x0, [x29, #-16]
   42800:	stur	w26, [x29, #-32]
   42804:	add	x8, x0, x9, lsl #3
   42808:	add	x9, x0, x9, lsl #4
   4280c:	stur	w26, [x29, #-64]
   42810:	stur	x25, [x29, #-104]
   42814:	stp	x8, x25, [x29, #-48]
   42818:	stp	x9, x25, [x29, #-80]
   4281c:	stur	w26, [x29, #-96]
   42820:	b	42654 <mpfr_const_catalan_internal@@Base+0x104>
   42824:	mov	w1, #0x8d                  	// #141
   42828:	mov	x0, x21
   4282c:	mov	x2, x23
   42830:	bl	cb90 <mpfr_assert_fail@plt>
   42834:	b	42798 <mpfr_const_catalan_internal@@Base+0x248>
   42838:	ldur	w3, [x29, #-32]
   4283c:	sub	x1, x29, #0x28
   42840:	mov	x0, x19
   42844:	mov	w2, w20
   42848:	bl	c6f0 <mpfr_set4@plt>
   4284c:	ldr	x1, [sp, #8]
   42850:	mov	w19, w0
   42854:	cbz	x1, 42860 <mpfr_const_catalan_internal@@Base+0x310>
   42858:	ldr	x0, [sp, #16]
   4285c:	bl	cc80 <mpfr_free_func@plt>
   42860:	sub	x0, x29, #0x78
   42864:	bl	c210 <mpfr_mpz_clear@plt>
   42868:	sub	x0, x29, #0x88
   4286c:	bl	c210 <mpfr_mpz_clear@plt>
   42870:	add	x0, sp, #0x98
   42874:	bl	c210 <mpfr_mpz_clear@plt>
   42878:	mov	w0, w19
   4287c:	ldp	x20, x19, [sp, #384]
   42880:	ldp	x22, x21, [sp, #368]
   42884:	ldp	x24, x23, [sp, #352]
   42888:	ldp	x26, x25, [sp, #336]
   4288c:	ldp	x28, x27, [sp, #320]
   42890:	ldp	x29, x30, [sp, #304]
   42894:	add	sp, sp, #0x190
   42898:	ret
   4289c:	mov	x8, xzr
   428a0:	b	42594 <mpfr_const_catalan_internal@@Base+0x44>
   428a4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   428a8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   428ac:	add	x0, x0, #0xa07
   428b0:	add	x2, x2, #0xa17
   428b4:	mov	w1, #0x74                  	// #116
   428b8:	bl	cb90 <mpfr_assert_fail@plt>
   428bc:	b	42588 <mpfr_const_catalan_internal@@Base+0x38>
   428c0:	bl	c940 <mpfr_abort_prec_max@plt>

00000000000428c4 <mpfr_const_catalan@@Base>:
   428c4:	stp	x29, x30, [sp, #-16]!
   428c8:	mov	x29, sp
   428cc:	mov	w2, w1
   428d0:	mov	x8, x0
   428d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   428d8:	ldr	x1, [x0, #2672]
   428dc:	add	x0, x0, #0xa70
   428e0:	blr	x1
   428e4:	mrs	x9, tpidr_el0
   428e8:	add	x1, x9, x0
   428ec:	mov	x0, x8
   428f0:	ldp	x29, x30, [sp], #16
   428f4:	b	c3e0 <mpfr_cache@plt>
   428f8:	sub	sp, sp, #0x70
   428fc:	add	x8, x3, #0x1
   42900:	stp	x24, x23, [sp, #64]
   42904:	stp	x22, x21, [sp, #80]
   42908:	stp	x20, x19, [sp, #96]
   4290c:	mov	x23, x3
   42910:	mov	x20, x2
   42914:	mov	x19, x1
   42918:	cmp	x8, x4
   4291c:	mov	x21, x0
   42920:	stp	x29, x30, [sp, #48]
   42924:	add	x29, sp, #0x30
   42928:	b.ne	42978 <mpfr_const_catalan@@Base+0xb4>  // b.any
   4292c:	cbz	x23, 42a4c <mpfr_const_catalan@@Base+0x188>
   42930:	lsl	x8, x23, #1
   42934:	sub	x1, x8, #0x1
   42938:	mov	x0, x19
   4293c:	bl	bd60 <__gmpz_set_ui@plt>
   42940:	mov	x0, x19
   42944:	mov	x1, x19
   42948:	mov	x2, x23
   4294c:	bl	c1a0 <__gmpz_mul_ui@plt>
   42950:	mov	w1, #0x1                   	// #1
   42954:	bfi	x1, x23, #1, #63
   42958:	mov	w2, #0x2                   	// #2
   4295c:	mov	x0, x20
   42960:	bl	c530 <__gmpz_ui_pow_ui@plt>
   42964:	mov	w2, #0x1                   	// #1
   42968:	mov	x0, x20
   4296c:	mov	x1, x20
   42970:	bl	c290 <__gmpz_mul_2exp@plt>
   42974:	b	42a64 <mpfr_const_catalan@@Base+0x1a0>
   42978:	add	x8, x4, x23
   4297c:	lsr	x24, x8, #1
   42980:	mov	x22, x4
   42984:	mov	x0, x21
   42988:	mov	x1, x19
   4298c:	mov	x2, x20
   42990:	mov	x3, x23
   42994:	mov	x4, x24
   42998:	bl	428f8 <mpfr_const_catalan@@Base+0x34>
   4299c:	sub	x0, x29, #0x10
   429a0:	bl	c040 <mpfr_mpz_init@plt>
   429a4:	add	x0, sp, #0x10
   429a8:	bl	c040 <mpfr_mpz_init@plt>
   429ac:	mov	x0, sp
   429b0:	bl	c040 <mpfr_mpz_init@plt>
   429b4:	sub	x0, x29, #0x10
   429b8:	add	x1, sp, #0x10
   429bc:	mov	x2, sp
   429c0:	mov	x3, x24
   429c4:	mov	x4, x22
   429c8:	bl	428f8 <mpfr_const_catalan@@Base+0x34>
   429cc:	mov	x2, sp
   429d0:	mov	x0, x21
   429d4:	mov	x1, x21
   429d8:	bl	c090 <__gmpz_mul@plt>
   429dc:	sub	x0, x29, #0x10
   429e0:	sub	x1, x29, #0x10
   429e4:	mov	x2, x19
   429e8:	bl	c090 <__gmpz_mul@plt>
   429ec:	sub	x2, x29, #0x10
   429f0:	mov	x0, x21
   429f4:	mov	x1, x21
   429f8:	bl	ca10 <__gmpz_add@plt>
   429fc:	add	x2, sp, #0x10
   42a00:	mov	x0, x19
   42a04:	mov	x1, x19
   42a08:	bl	c090 <__gmpz_mul@plt>
   42a0c:	mov	x2, sp
   42a10:	mov	x0, x20
   42a14:	mov	x1, x20
   42a18:	bl	c090 <__gmpz_mul@plt>
   42a1c:	sub	x0, x29, #0x10
   42a20:	bl	c210 <mpfr_mpz_clear@plt>
   42a24:	add	x0, sp, #0x10
   42a28:	bl	c210 <mpfr_mpz_clear@plt>
   42a2c:	mov	x0, sp
   42a30:	bl	c210 <mpfr_mpz_clear@plt>
   42a34:	ldp	x20, x19, [sp, #96]
   42a38:	ldp	x22, x21, [sp, #80]
   42a3c:	ldp	x24, x23, [sp, #64]
   42a40:	ldp	x29, x30, [sp, #48]
   42a44:	add	sp, sp, #0x70
   42a48:	ret
   42a4c:	mov	w1, #0x1                   	// #1
   42a50:	mov	x0, x19
   42a54:	bl	bd60 <__gmpz_set_ui@plt>
   42a58:	mov	w1, #0x1                   	// #1
   42a5c:	mov	x0, x20
   42a60:	bl	bd60 <__gmpz_set_ui@plt>
   42a64:	mov	x0, x21
   42a68:	mov	x1, x19
   42a6c:	ldp	x20, x19, [sp, #96]
   42a70:	ldp	x22, x21, [sp, #80]
   42a74:	ldp	x24, x23, [sp, #64]
   42a78:	ldp	x29, x30, [sp, #48]
   42a7c:	add	sp, sp, #0x70
   42a80:	b	c050 <__gmpz_set@plt>

0000000000042a84 <mpfr_rootn_ui@@Base>:
   42a84:	sub	sp, sp, #0x1b0
   42a88:	stp	x22, x21, [sp, #400]
   42a8c:	stp	x20, x19, [sp, #416]
   42a90:	mov	w20, w3
   42a94:	mov	x21, x2
   42a98:	mov	x22, x1
   42a9c:	cmp	x2, #0x1
   42aa0:	mov	x19, x0
   42aa4:	stp	x29, x30, [sp, #336]
   42aa8:	stp	x28, x27, [sp, #352]
   42aac:	stp	x26, x25, [sp, #368]
   42ab0:	stp	x24, x23, [sp, #384]
   42ab4:	add	x29, sp, #0x150
   42ab8:	b.ls	4314c <mpfr_rootn_ui@@Base+0x6c8>  // b.plast
   42abc:	ldr	x8, [x22, #16]
   42ac0:	mov	x26, #0x2                   	// #2
   42ac4:	movk	x26, #0x8000, lsl #48
   42ac8:	add	x9, x26, #0x2
   42acc:	cmp	x8, x9
   42ad0:	b.lt	4318c <mpfr_rootn_ui@@Base+0x708>  // b.tstop
   42ad4:	tbnz	w21, #0, 42ae0 <mpfr_rootn_ui@@Base+0x5c>
   42ad8:	ldr	w8, [x22, #8]
   42adc:	tbnz	w8, #31, 431f8 <mpfr_rootn_ui@@Base+0x774>
   42ae0:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   42ae4:	ldr	x1, [x1, #3944]
   42ae8:	mov	x0, x22
   42aec:	bl	ca00 <mpfr_cmpabs@plt>
   42af0:	cbz	w0, 43150 <mpfr_rootn_ui@@Base+0x6cc>
   42af4:	cmp	x21, #0x65
   42af8:	b.cc	42b80 <mpfr_rootn_ui@@Base+0xfc>  // b.lo, b.ul, b.last
   42afc:	ldr	x8, [x22]
   42b00:	mov	w9, #0x1                   	// #1
   42b04:	stur	w9, [x29, #-32]
   42b08:	stur	x8, [x29, #-40]
   42b0c:	ldr	q0, [x22, #16]
   42b10:	stur	q0, [x29, #-24]
   42b14:	ldr	x10, [x19]
   42b18:	fmov	x8, d0
   42b1c:	subs	x9, x8, #0x1
   42b20:	add	x27, x10, #0xa
   42b24:	b.lt	42b40 <mpfr_rootn_ui@@Base+0xbc>  // b.tstop
   42b28:	clz	x9, x9
   42b2c:	mov	w10, #0x40                  	// #64
   42b30:	sub	x9, x10, x9
   42b34:	cmp	x8, #0x1
   42b38:	csel	x8, xzr, x9, eq  // eq = none
   42b3c:	add	x27, x8, x27
   42b40:	sub	x8, x26, #0x103
   42b44:	cmp	x27, x8
   42b48:	str	x8, [sp, #8]
   42b4c:	b.gt	43244 <mpfr_rootn_ui@@Base+0x7c0>
   42b50:	cmp	x27, #0x401
   42b54:	b.lt	42cec <mpfr_rootn_ui@@Base+0x268>  // b.tstop
   42b58:	sub	x8, x27, #0x1
   42b5c:	add	x9, x27, #0x3e
   42b60:	cmp	x8, #0x0
   42b64:	csel	x8, x9, x8, lt  // lt = tstop
   42b68:	asr	x8, x8, #6
   42b6c:	lsl	x8, x8, #3
   42b70:	add	x23, x8, #0x8
   42b74:	mov	x0, x23
   42b78:	bl	cd50 <mpfr_allocate_func@plt>
   42b7c:	b	42cf8 <mpfr_rootn_ui@@Base+0x274>
   42b80:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42b84:	ldr	x1, [x0, #2656]
   42b88:	add	x0, x0, #0xa60
   42b8c:	blr	x1
   42b90:	mrs	x24, tpidr_el0
   42b94:	ldr	w8, [x24, x0]
   42b98:	str	w8, [sp, #48]
   42b9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42ba0:	ldr	x1, [x0, #2592]
   42ba4:	add	x0, x0, #0xa20
   42ba8:	blr	x1
   42bac:	ldr	x9, [x24, x0]
   42bb0:	mov	x8, x0
   42bb4:	str	x9, [sp, #40]
   42bb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42bbc:	ldr	x1, [x0, #2624]
   42bc0:	add	x0, x0, #0xa40
   42bc4:	blr	x1
   42bc8:	ldr	x27, [x24, x0]
   42bcc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   42bd0:	str	x9, [x24, x8]
   42bd4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   42bd8:	str	x8, [x24, x0]
   42bdc:	add	x0, sp, #0x78
   42be0:	bl	c040 <mpfr_mpz_init@plt>
   42be4:	add	x0, sp, #0x78
   42be8:	mov	x1, x22
   42bec:	bl	cb10 <mpfr_get_z_2exp@plt>
   42bf0:	ldr	w28, [x22, #8]
   42bf4:	ldr	w8, [sp, #124]
   42bf8:	mov	x22, x0
   42bfc:	tbz	w28, #31, 42c08 <mpfr_rootn_ui@@Base+0x184>
   42c00:	neg	w8, w8
   42c04:	str	w8, [sp, #124]
   42c08:	ldr	x10, [sp, #128]
   42c0c:	cmp	w8, #0x0
   42c10:	sdiv	x9, x22, x21
   42c14:	cneg	w8, w8, mi  // mi = first
   42c18:	msub	x9, x9, x21, x22
   42c1c:	add	x10, x10, w8, uxtw #3
   42c20:	and	x11, x21, x9, asr #63
   42c24:	ldur	x10, [x10, #-8]
   42c28:	add	x9, x11, x9
   42c2c:	ldr	x11, [x19]
   42c30:	cmp	w20, #0x0
   42c34:	lsl	x8, x8, #6
   42c38:	clz	x10, x10
   42c3c:	cinc	x26, x11, eq  // eq = none
   42c40:	sub	x8, x8, x10
   42c44:	add	x8, x8, x9
   42c48:	mul	x10, x26, x21
   42c4c:	subs	x8, x10, x8
   42c50:	b.ls	42c5c <mpfr_rootn_ui@@Base+0x1d8>  // b.plast
   42c54:	udiv	x8, x8, x21
   42c58:	b	42c60 <mpfr_rootn_ui@@Base+0x1dc>
   42c5c:	mov	x8, xzr
   42c60:	madd	x23, x8, x21, x9
   42c64:	add	x0, sp, #0x78
   42c68:	add	x1, sp, #0x78
   42c6c:	mov	x2, x23
   42c70:	bl	c290 <__gmpz_mul_2exp@plt>
   42c74:	add	x0, sp, #0x78
   42c78:	add	x1, sp, #0x78
   42c7c:	mov	x2, x21
   42c80:	sub	x25, x22, x23
   42c84:	bl	c340 <__gmpz_root@plt>
   42c88:	ldr	w8, [sp, #124]
   42c8c:	ldr	x9, [sp, #128]
   42c90:	cmp	w8, #0x0
   42c94:	cneg	w8, w8, mi  // mi = first
   42c98:	add	x9, x9, w8, uxtw #3
   42c9c:	ldur	x9, [x9, #-8]
   42ca0:	lsl	x8, x8, #6
   42ca4:	clz	x9, x9
   42ca8:	sub	x8, x8, x9
   42cac:	sub	x22, x8, x26
   42cb0:	cmp	x22, #0x1
   42cb4:	b.lt	43010 <mpfr_rootn_ui@@Base+0x58c>  // b.tstop
   42cb8:	cbz	w0, 4301c <mpfr_rootn_ui@@Base+0x598>
   42cbc:	add	x0, sp, #0x78
   42cc0:	mov	x1, xzr
   42cc4:	bl	bb50 <__gmpz_scan1@plt>
   42cc8:	mov	x23, x0
   42ccc:	add	x0, sp, #0x78
   42cd0:	add	x1, sp, #0x78
   42cd4:	mov	x2, x22
   42cd8:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   42cdc:	cmp	x23, x22
   42ce0:	madd	x25, x22, x21, x25
   42ce4:	b.ge	43014 <mpfr_rootn_ui@@Base+0x590>  // b.tcont
   42ce8:	b	43030 <mpfr_rootn_ui@@Base+0x5ac>
   42cec:	add	x8, sp, #0x78
   42cf0:	mov	x23, xzr
   42cf4:	add	x0, x8, #0x10
   42cf8:	mov	w8, #0x1                   	// #1
   42cfc:	stp	x23, x0, [sp, #120]
   42d00:	stur	x27, [x29, #-72]
   42d04:	stur	x0, [x29, #-48]
   42d08:	stur	w8, [x29, #-64]
   42d0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42d10:	ldr	x1, [x0, #2656]
   42d14:	add	x0, x0, #0xa60
   42d18:	blr	x1
   42d1c:	mrs	x28, tpidr_el0
   42d20:	ldr	w8, [x28, x0]
   42d24:	str	w8, [sp, #40]
   42d28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42d2c:	ldr	x1, [x0, #2592]
   42d30:	add	x0, x0, #0xa20
   42d34:	blr	x1
   42d38:	ldr	x9, [x28, x0]
   42d3c:	mov	x8, x0
   42d40:	str	x9, [sp, #32]
   42d44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42d48:	ldr	x1, [x0, #2624]
   42d4c:	add	x0, x0, #0xa40
   42d50:	blr	x1
   42d54:	ldr	x9, [x28, x0]
   42d58:	cmp	w20, #0x0
   42d5c:	mov	w24, wzr
   42d60:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   42d64:	str	x9, [sp, #24]
   42d68:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   42d6c:	str	x9, [x28, x8]
   42d70:	cset	w8, eq  // eq = none
   42d74:	str	x8, [sp, #48]
   42d78:	mov	w8, #0x40                  	// #64
   42d7c:	str	x10, [x28, x0]
   42d80:	str	x8, [sp, #16]
   42d84:	sub	x0, x29, #0x48
   42d88:	sub	x1, x29, #0x28
   42d8c:	mov	w2, wzr
   42d90:	bl	c130 <mpfr_log@plt>
   42d94:	sub	x0, x29, #0x48
   42d98:	sub	x1, x29, #0x48
   42d9c:	mov	x2, x21
   42da0:	mov	w3, wzr
   42da4:	bl	ccc0 <mpfr_div_ui@plt>
   42da8:	ldur	x25, [x29, #-56]
   42dac:	sub	x0, x29, #0x48
   42db0:	sub	x1, x29, #0x48
   42db4:	mov	w2, wzr
   42db8:	bl	c7a0 <mpfr_exp@plt>
   42dbc:	ldur	x8, [x29, #-56]
   42dc0:	add	x9, x26, #0x2
   42dc4:	cmp	x8, x9
   42dc8:	b.lt	42e18 <mpfr_rootn_ui@@Base+0x394>  // b.tstop
   42dcc:	ldur	x9, [x29, #-72]
   42dd0:	cmn	x25, #0x2
   42dd4:	mov	w11, #0x1                   	// #1
   42dd8:	add	w8, w25, #0x3
   42ddc:	cinc	x11, x11, eq  // eq = none
   42de0:	csel	x8, x8, x11, gt
   42de4:	sub	x2, x27, w8, uxtw
   42de8:	sub	x8, x9, #0x1
   42dec:	add	x9, x9, #0x3e
   42df0:	cmp	x8, #0x0
   42df4:	csel	x8, x9, x8, lt  // lt = tstop
   42df8:	asr	x8, x8, #6
   42dfc:	ldr	x10, [x19]
   42e00:	add	x1, x8, #0x1
   42e04:	ldr	x8, [sp, #48]
   42e08:	ldur	x0, [x29, #-48]
   42e0c:	add	x3, x10, x8
   42e10:	bl	c3d0 <mpfr_round_p@plt>
   42e14:	cbnz	w0, 42f68 <mpfr_rootn_ui@@Base+0x4e4>
   42e18:	ldr	x8, [x19]
   42e1c:	ldr	x9, [sp, #48]
   42e20:	add	x0, sp, #0x58
   42e24:	add	x1, x8, x9
   42e28:	bl	cad0 <mpfr_init2@plt>
   42e2c:	ldr	x1, [x22]
   42e30:	add	x0, sp, #0x38
   42e34:	bl	cad0 <mpfr_init2@plt>
   42e38:	ldur	w3, [x29, #-64]
   42e3c:	add	x0, sp, #0x58
   42e40:	sub	x1, x29, #0x48
   42e44:	mov	w2, wzr
   42e48:	bl	c6f0 <mpfr_set4@plt>
   42e4c:	add	x0, sp, #0x38
   42e50:	add	x1, sp, #0x58
   42e54:	mov	x2, x21
   42e58:	mov	w3, wzr
   42e5c:	bl	c020 <mpfr_pow_ui@plt>
   42e60:	cbz	w0, 42e70 <mpfr_rootn_ui@@Base+0x3ec>
   42e64:	mov	w23, w0
   42e68:	mov	w24, wzr
   42e6c:	b	42ea8 <mpfr_rootn_ui@@Base+0x424>
   42e70:	add	x0, sp, #0x38
   42e74:	sub	x1, x29, #0x28
   42e78:	bl	cab0 <mpfr_equal_p@plt>
   42e7c:	cbz	w0, 42ea0 <mpfr_rootn_ui@@Base+0x41c>
   42e80:	ldr	w3, [x22, #8]
   42e84:	add	x1, sp, #0x58
   42e88:	mov	x0, x19
   42e8c:	mov	w2, w20
   42e90:	bl	c6f0 <mpfr_set4@plt>
   42e94:	mov	w23, w0
   42e98:	mov	w24, #0x1                   	// #1
   42e9c:	b	42ea8 <mpfr_rootn_ui@@Base+0x424>
   42ea0:	mov	w24, wzr
   42ea4:	mov	w23, wzr
   42ea8:	add	x0, sp, #0x38
   42eac:	bl	c110 <mpfr_clear@plt>
   42eb0:	add	x0, sp, #0x58
   42eb4:	bl	c110 <mpfr_clear@plt>
   42eb8:	tbnz	w24, #0, 42f68 <mpfr_rootn_ui@@Base+0x4e4>
   42ebc:	ldr	x9, [sp, #16]
   42ec0:	sub	x8, x26, x27
   42ec4:	sub	x8, x8, #0x103
   42ec8:	cmp	x9, x8
   42ecc:	mov	x8, x9
   42ed0:	b.gt	42f48 <mpfr_rootn_ui@@Base+0x4c4>
   42ed4:	ldr	x9, [sp, #8]
   42ed8:	add	x27, x27, x8
   42edc:	cmp	x27, #0x0
   42ee0:	cinc	x8, x27, lt  // lt = tstop
   42ee4:	cmp	x27, x9
   42ee8:	b.gt	43244 <mpfr_rootn_ui@@Base+0x7c0>
   42eec:	asr	x8, x8, #1
   42ef0:	str	x8, [sp, #16]
   42ef4:	sub	x8, x27, #0x1
   42ef8:	add	x9, x27, #0x3e
   42efc:	cmp	x8, #0x0
   42f00:	ldr	x1, [sp, #120]
   42f04:	csel	x8, x9, x8, lt  // lt = tstop
   42f08:	asr	x8, x8, #6
   42f0c:	lsl	x8, x8, #3
   42f10:	add	x2, x8, #0x8
   42f14:	str	x2, [sp, #120]
   42f18:	cbz	x1, 42f28 <mpfr_rootn_ui@@Base+0x4a4>
   42f1c:	ldr	x0, [sp, #128]
   42f20:	bl	c260 <mpfr_reallocate_func@plt>
   42f24:	b	42f30 <mpfr_rootn_ui@@Base+0x4ac>
   42f28:	mov	x0, x2
   42f2c:	bl	cd50 <mpfr_allocate_func@plt>
   42f30:	mov	w8, #0x1                   	// #1
   42f34:	str	x0, [sp, #128]
   42f38:	stur	x27, [x29, #-72]
   42f3c:	stur	x0, [x29, #-48]
   42f40:	stur	w8, [x29, #-64]
   42f44:	b	42d84 <mpfr_rootn_ui@@Base+0x300>
   42f48:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   42f4c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   42f50:	mov	w1, #0x11d                 	// #285
   42f54:	add	x0, x0, #0xa20
   42f58:	add	x2, x2, #0x9c6
   42f5c:	bl	cb90 <mpfr_assert_fail@plt>
   42f60:	ldr	x8, [sp, #16]
   42f64:	b	42ed4 <mpfr_rootn_ui@@Base+0x450>
   42f68:	cbnz	w24, 42f84 <mpfr_rootn_ui@@Base+0x500>
   42f6c:	ldr	w3, [x22, #8]
   42f70:	sub	x1, x29, #0x48
   42f74:	mov	x0, x19
   42f78:	mov	w2, w20
   42f7c:	bl	c6f0 <mpfr_set4@plt>
   42f80:	mov	w23, w0
   42f84:	ldr	x1, [sp, #120]
   42f88:	cbz	x1, 42f94 <mpfr_rootn_ui@@Base+0x510>
   42f8c:	ldr	x0, [sp, #128]
   42f90:	bl	cc80 <mpfr_free_func@plt>
   42f94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42f98:	ldr	x1, [x0, #2656]
   42f9c:	add	x0, x0, #0xa60
   42fa0:	blr	x1
   42fa4:	ldr	w9, [sp, #40]
   42fa8:	str	w9, [x28, x0]
   42fac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42fb0:	ldr	x1, [x0, #2592]
   42fb4:	add	x0, x0, #0xa20
   42fb8:	blr	x1
   42fbc:	ldr	x10, [sp, #32]
   42fc0:	str	x10, [x28, x0]
   42fc4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42fc8:	ldr	x1, [x0, #2624]
   42fcc:	add	x0, x0, #0xa40
   42fd0:	blr	x1
   42fd4:	ldr	x11, [sp, #24]
   42fd8:	str	x11, [x28, x0]
   42fdc:	ldr	x8, [x19, #16]
   42fe0:	cmp	x8, x11
   42fe4:	b.gt	431c8 <mpfr_rootn_ui@@Base+0x744>
   42fe8:	cmp	x8, x10
   42fec:	b.lt	431c8 <mpfr_rootn_ui@@Base+0x744>  // b.tstop
   42ff0:	cbz	w23, 43168 <mpfr_rootn_ui@@Base+0x6e4>
   42ff4:	orr	w8, w9, #0x8
   42ff8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   42ffc:	ldr	x1, [x0, #2656]
   43000:	add	x0, x0, #0xa60
   43004:	blr	x1
   43008:	str	w8, [x28, x0]
   4300c:	b	43168 <mpfr_rootn_ui@@Base+0x6e4>
   43010:	cbz	w0, 43030 <mpfr_rootn_ui@@Base+0x5ac>
   43014:	mov	w22, wzr
   43018:	b	43094 <mpfr_rootn_ui@@Base+0x610>
   4301c:	add	x0, sp, #0x78
   43020:	add	x1, sp, #0x78
   43024:	mov	x2, x22
   43028:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   4302c:	madd	x25, x22, x21, x25
   43030:	cmp	w20, #0x3
   43034:	mov	w8, #0x2                   	// #2
   43038:	mov	w9, #0x3                   	// #3
   4303c:	csel	w8, w8, w20, eq  // eq = none
   43040:	cmp	w20, #0x2
   43044:	csel	w8, w9, w8, eq  // eq = none
   43048:	cmp	w28, #0x0
   4304c:	csel	w20, w8, w20, lt  // lt = tstop
   43050:	cmp	w20, #0x4
   43054:	b.eq	43074 <mpfr_rootn_ui@@Base+0x5f0>  // b.none
   43058:	cmp	w20, #0x2
   4305c:	b.eq	43074 <mpfr_rootn_ui@@Base+0x5f0>  // b.none
   43060:	cbnz	w20, 43090 <mpfr_rootn_ui@@Base+0x60c>
   43064:	add	x0, sp, #0x78
   43068:	mov	x1, xzr
   4306c:	bl	c080 <__gmpz_tstbit@plt>
   43070:	cbz	w0, 4308c <mpfr_rootn_ui@@Base+0x608>
   43074:	add	x0, sp, #0x78
   43078:	add	x1, sp, #0x78
   4307c:	mov	w2, #0x1                   	// #1
   43080:	mov	w22, #0x1                   	// #1
   43084:	bl	c3c0 <__gmpz_add_ui@plt>
   43088:	b	43094 <mpfr_rootn_ui@@Base+0x610>
   4308c:	mov	w20, wzr
   43090:	mov	w22, #0xffffffff            	// #-1
   43094:	add	x1, sp, #0x78
   43098:	mov	x0, x19
   4309c:	mov	w2, wzr
   430a0:	bl	c2b0 <mpfr_set_z@plt>
   430a4:	ldr	x8, [x19, #16]
   430a8:	sdiv	x9, x25, x21
   430ac:	add	w23, w0, w22
   430b0:	add	x8, x9, x8
   430b4:	str	x8, [x19, #16]
   430b8:	tbz	w28, #31, 430cc <mpfr_rootn_ui@@Base+0x648>
   430bc:	ldr	w8, [x19, #8]
   430c0:	neg	w23, w23
   430c4:	neg	w8, w8
   430c8:	str	w8, [x19, #8]
   430cc:	add	x0, sp, #0x78
   430d0:	bl	c210 <mpfr_mpz_clear@plt>
   430d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   430d8:	ldr	x1, [x0, #2656]
   430dc:	add	x0, x0, #0xa60
   430e0:	blr	x1
   430e4:	ldr	w9, [sp, #48]
   430e8:	str	w9, [x24, x0]
   430ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   430f0:	ldr	x1, [x0, #2592]
   430f4:	add	x0, x0, #0xa20
   430f8:	blr	x1
   430fc:	ldr	x10, [sp, #40]
   43100:	str	x10, [x24, x0]
   43104:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43108:	ldr	x1, [x0, #2624]
   4310c:	add	x0, x0, #0xa40
   43110:	blr	x1
   43114:	str	x27, [x24, x0]
   43118:	ldr	x8, [x19, #16]
   4311c:	cmp	x8, x27
   43120:	b.gt	431c8 <mpfr_rootn_ui@@Base+0x744>
   43124:	cmp	x8, x10
   43128:	b.lt	431c8 <mpfr_rootn_ui@@Base+0x744>  // b.tstop
   4312c:	cbz	w23, 43168 <mpfr_rootn_ui@@Base+0x6e4>
   43130:	orr	w8, w9, #0x8
   43134:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43138:	ldr	x1, [x0, #2656]
   4313c:	add	x0, x0, #0xa60
   43140:	blr	x1
   43144:	str	w8, [x24, x0]
   43148:	b	43168 <mpfr_rootn_ui@@Base+0x6e4>
   4314c:	cbz	x21, 431dc <mpfr_rootn_ui@@Base+0x758>
   43150:	ldr	w3, [x22, #8]
   43154:	mov	x0, x19
   43158:	mov	x1, x22
   4315c:	mov	w2, w20
   43160:	bl	c6f0 <mpfr_set4@plt>
   43164:	mov	w23, w0
   43168:	mov	w0, w23
   4316c:	ldp	x20, x19, [sp, #416]
   43170:	ldp	x22, x21, [sp, #400]
   43174:	ldp	x24, x23, [sp, #384]
   43178:	ldp	x26, x25, [sp, #368]
   4317c:	ldp	x28, x27, [sp, #352]
   43180:	ldp	x29, x30, [sp, #336]
   43184:	add	sp, sp, #0x1b0
   43188:	ret
   4318c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   43190:	cmp	x8, x9
   43194:	b.eq	431ec <mpfr_rootn_ui@@Base+0x768>  // b.none
   43198:	mov	x9, #0x2                   	// #2
   4319c:	movk	x9, #0x8000, lsl #48
   431a0:	cmp	x8, x9
   431a4:	b.eq	431f8 <mpfr_rootn_ui@@Base+0x774>  // b.none
   431a8:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   431ac:	str	x8, [x19, #16]
   431b0:	tbz	w21, #0, 43224 <mpfr_rootn_ui@@Base+0x7a0>
   431b4:	ldr	w8, [x22, #8]
   431b8:	cmp	w8, #0x1
   431bc:	b.ge	43224 <mpfr_rootn_ui@@Base+0x7a0>  // b.tcont
   431c0:	mov	w8, #0xffffffff            	// #-1
   431c4:	b	43228 <mpfr_rootn_ui@@Base+0x7a4>
   431c8:	mov	x0, x19
   431cc:	mov	w1, w23
   431d0:	mov	w2, w20
   431d4:	bl	cb80 <mpfr_check_range@plt>
   431d8:	b	43164 <mpfr_rootn_ui@@Base+0x6e0>
   431dc:	mov	x8, #0x2                   	// #2
   431e0:	movk	x8, #0x8000, lsl #48
   431e4:	str	x8, [x19, #16]
   431e8:	b	431fc <mpfr_rootn_ui@@Base+0x778>
   431ec:	ldr	w8, [x22, #8]
   431f0:	tbnz	w21, #0, 43230 <mpfr_rootn_ui@@Base+0x7ac>
   431f4:	tbz	w8, #31, 43230 <mpfr_rootn_ui@@Base+0x7ac>
   431f8:	str	x26, [x19, #16]
   431fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43200:	ldr	x1, [x0, #2656]
   43204:	add	x0, x0, #0xa60
   43208:	blr	x1
   4320c:	mrs	x8, tpidr_el0
   43210:	ldr	w9, [x8, x0]
   43214:	mov	w23, wzr
   43218:	orr	w9, w9, #0x4
   4321c:	str	w9, [x8, x0]
   43220:	b	43168 <mpfr_rootn_ui@@Base+0x6e4>
   43224:	mov	w8, #0x1                   	// #1
   43228:	mov	w23, wzr
   4322c:	b	4323c <mpfr_rootn_ui@@Base+0x7b8>
   43230:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   43234:	mov	w23, wzr
   43238:	str	x9, [x19, #16]
   4323c:	str	w8, [x19, #8]
   43240:	b	43168 <mpfr_rootn_ui@@Base+0x6e4>
   43244:	bl	c940 <mpfr_abort_prec_max@plt>

0000000000043248 <mpfr_root@@Base>:
   43248:	stp	x29, x30, [sp, #-16]!
   4324c:	cmp	x2, #0x1
   43250:	mov	x29, sp
   43254:	b.ls	43270 <mpfr_root@@Base+0x28>  // b.plast
   43258:	ldr	x9, [x1, #16]
   4325c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   43260:	cmp	x9, x8
   43264:	b.eq	43288 <mpfr_root@@Base+0x40>  // b.none
   43268:	ldp	x29, x30, [sp], #16
   4326c:	b	c700 <mpfr_rootn_ui@plt>
   43270:	cbz	x2, 43298 <mpfr_root@@Base+0x50>
   43274:	ldr	w8, [x1, #8]
   43278:	mov	w2, w3
   4327c:	mov	w3, w8
   43280:	ldp	x29, x30, [sp], #16
   43284:	b	c6f0 <mpfr_set4@plt>
   43288:	str	x8, [x0, #16]
   4328c:	ldr	w8, [x1, #8]
   43290:	str	w8, [x0, #8]
   43294:	b	432c4 <mpfr_root@@Base+0x7c>
   43298:	mov	x8, #0x2                   	// #2
   4329c:	movk	x8, #0x8000, lsl #48
   432a0:	str	x8, [x0, #16]
   432a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   432a8:	ldr	x1, [x0, #2656]
   432ac:	add	x0, x0, #0xa60
   432b0:	blr	x1
   432b4:	mrs	x8, tpidr_el0
   432b8:	ldr	w9, [x8, x0]
   432bc:	orr	w9, w9, #0x4
   432c0:	str	w9, [x8, x0]
   432c4:	mov	w0, wzr
   432c8:	ldp	x29, x30, [sp], #16
   432cc:	ret

00000000000432d0 <mpfr_sec@@Base>:
   432d0:	sub	sp, sp, #0x90
   432d4:	stp	x29, x30, [sp, #48]
   432d8:	stp	x28, x27, [sp, #64]
   432dc:	stp	x26, x25, [sp, #80]
   432e0:	stp	x24, x23, [sp, #96]
   432e4:	stp	x22, x21, [sp, #112]
   432e8:	stp	x20, x19, [sp, #128]
   432ec:	ldr	x9, [x1, #16]
   432f0:	mov	x8, #0x2                   	// #2
   432f4:	movk	x8, #0x8000, lsl #48
   432f8:	add	x8, x8, #0x2
   432fc:	mov	w19, w2
   43300:	cmp	x9, x8
   43304:	mov	x20, x0
   43308:	add	x29, sp, #0x30
   4330c:	b.lt	435e0 <mpfr_sec@@Base+0x310>  // b.tstop
   43310:	mov	x21, x1
   43314:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43318:	ldr	x1, [x0, #2656]
   4331c:	add	x0, x0, #0xa60
   43320:	blr	x1
   43324:	mrs	x27, tpidr_el0
   43328:	ldr	w28, [x27, x0]
   4332c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43330:	ldr	x1, [x0, #2592]
   43334:	add	x0, x0, #0xa20
   43338:	blr	x1
   4333c:	ldr	x26, [x27, x0]
   43340:	mov	x8, x0
   43344:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43348:	ldr	x1, [x0, #2624]
   4334c:	add	x0, x0, #0xa40
   43350:	blr	x1
   43354:	ldr	x25, [x27, x0]
   43358:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4335c:	str	x10, [x27, x8]
   43360:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   43364:	str	x8, [x27, x0]
   43368:	tbz	x9, #63, 43380 <mpfr_sec@@Base+0xb0>
   4336c:	ldr	x8, [x20]
   43370:	neg	x2, x9, lsl #1
   43374:	add	x8, x8, #0x1
   43378:	cmp	x2, x8
   4337c:	b.hi	43668 <mpfr_sec@@Base+0x398>  // b.pmore
   43380:	ldr	x24, [x20]
   43384:	subs	x22, x24, #0x1
   43388:	b.eq	43630 <mpfr_sec@@Base+0x360>  // b.none
   4338c:	b.le	43638 <mpfr_sec@@Base+0x368>
   43390:	clz	x8, x22
   43394:	mov	w9, #0x40                  	// #64
   43398:	sub	x8, x9, x8
   4339c:	add	x8, x24, x8
   433a0:	add	x22, x8, #0x3
   433a4:	add	x0, sp, #0x10
   433a8:	mov	x1, x22
   433ac:	bl	cad0 <mpfr_init2@plt>
   433b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   433b4:	ldr	x1, [x0, #2656]
   433b8:	add	x0, x0, #0xa60
   433bc:	blr	x1
   433c0:	mov	x23, x0
   433c4:	str	wzr, [x27, x0]
   433c8:	add	x0, sp, #0x10
   433cc:	mov	w2, #0x1                   	// #1
   433d0:	mov	x1, x21
   433d4:	bl	c480 <mpfr_cos@plt>
   433d8:	ldrb	w8, [x27, x23]
   433dc:	tbnz	w8, #1, 43580 <mpfr_sec@@Base+0x2b0>
   433e0:	cmp	w19, #0x0
   433e4:	mov	w23, #0x40                  	// #64
   433e8:	cinc	x24, x24, eq  // eq = none
   433ec:	add	x0, sp, #0x10
   433f0:	add	x2, sp, #0x10
   433f4:	mov	w1, #0x1                   	// #1
   433f8:	mov	w3, wzr
   433fc:	bl	c350 <mpfr_ui_div@plt>
   43400:	ldr	x8, [sp, #32]
   43404:	mov	x9, #0x2                   	// #2
   43408:	movk	x9, #0x8000, lsl #48
   4340c:	add	x9, x9, #0x2
   43410:	cmp	x8, x9
   43414:	b.lt	43448 <mpfr_sec@@Base+0x178>  // b.tstop
   43418:	ldr	x8, [sp, #16]
   4341c:	ldr	x0, [sp, #40]
   43420:	sub	x2, x22, #0x2
   43424:	mov	x3, x24
   43428:	sub	x9, x8, #0x1
   4342c:	add	x8, x8, #0x3e
   43430:	cmp	x9, #0x0
   43434:	csel	x8, x8, x9, lt  // lt = tstop
   43438:	asr	x8, x8, #6
   4343c:	add	x1, x8, #0x1
   43440:	bl	c3d0 <mpfr_round_p@plt>
   43444:	cbnz	w0, 434d0 <mpfr_sec@@Base+0x200>
   43448:	mov	x8, #0x2                   	// #2
   4344c:	movk	x8, #0x8000, lsl #48
   43450:	sub	x8, x8, x22
   43454:	sub	x8, x8, #0x103
   43458:	cmp	x23, x8
   4345c:	b.gt	434b4 <mpfr_sec@@Base+0x1e4>
   43460:	add	x22, x22, x23
   43464:	cmp	x22, #0x0
   43468:	cinc	x8, x22, lt  // lt = tstop
   4346c:	add	x0, sp, #0x10
   43470:	mov	x1, x22
   43474:	asr	x23, x8, #1
   43478:	bl	bf80 <mpfr_set_prec@plt>
   4347c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43480:	ldr	x1, [x0, #2656]
   43484:	add	x0, x0, #0xa60
   43488:	blr	x1
   4348c:	str	x0, [sp, #8]
   43490:	str	wzr, [x27, x0]
   43494:	add	x0, sp, #0x10
   43498:	mov	w2, #0x1                   	// #1
   4349c:	mov	x1, x21
   434a0:	bl	c480 <mpfr_cos@plt>
   434a4:	ldr	x8, [sp, #8]
   434a8:	ldrb	w8, [x27, x8]
   434ac:	tbz	w8, #1, 433ec <mpfr_sec@@Base+0x11c>
   434b0:	b	43580 <mpfr_sec@@Base+0x2b0>
   434b4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   434b8:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   434bc:	mov	w1, #0x5f                  	// #95
   434c0:	add	x0, x0, #0xa27
   434c4:	add	x2, x2, #0x4df
   434c8:	bl	cb90 <mpfr_assert_fail@plt>
   434cc:	b	43460 <mpfr_sec@@Base+0x190>
   434d0:	ldr	w3, [sp, #24]
   434d4:	add	x1, sp, #0x10
   434d8:	mov	x0, x20
   434dc:	mov	w2, w19
   434e0:	bl	c6f0 <mpfr_set4@plt>
   434e4:	mov	w22, w0
   434e8:	add	x0, sp, #0x10
   434ec:	bl	c110 <mpfr_clear@plt>
   434f0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   434f4:	ldr	x1, [x0, #2656]
   434f8:	add	x0, x0, #0xa60
   434fc:	blr	x1
   43500:	str	w28, [x27, x0]
   43504:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43508:	ldr	x1, [x0, #2592]
   4350c:	add	x0, x0, #0xa20
   43510:	blr	x1
   43514:	str	x26, [x27, x0]
   43518:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4351c:	ldr	x1, [x0, #2624]
   43520:	add	x0, x0, #0xa40
   43524:	blr	x1
   43528:	str	x25, [x27, x0]
   4352c:	ldr	x8, [x20, #16]
   43530:	cmp	x8, x25
   43534:	b.gt	43654 <mpfr_sec@@Base+0x384>
   43538:	cmp	x8, x26
   4353c:	b.lt	43654 <mpfr_sec@@Base+0x384>  // b.tstop
   43540:	cbz	w22, 4355c <mpfr_sec@@Base+0x28c>
   43544:	orr	w8, w28, #0x8
   43548:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4354c:	ldr	x1, [x0, #2656]
   43550:	add	x0, x0, #0xa60
   43554:	blr	x1
   43558:	str	w8, [x27, x0]
   4355c:	mov	w0, w22
   43560:	ldp	x20, x19, [sp, #128]
   43564:	ldp	x22, x21, [sp, #112]
   43568:	ldp	x24, x23, [sp, #96]
   4356c:	ldp	x26, x25, [sp, #80]
   43570:	ldp	x28, x27, [sp, #64]
   43574:	ldp	x29, x30, [sp, #48]
   43578:	add	sp, sp, #0x90
   4357c:	ret
   43580:	ldr	w21, [sp, #24]
   43584:	add	x0, sp, #0x10
   43588:	bl	c110 <mpfr_clear@plt>
   4358c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43590:	ldr	x1, [x0, #2656]
   43594:	add	x0, x0, #0xa60
   43598:	blr	x1
   4359c:	str	w28, [x27, x0]
   435a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   435a4:	ldr	x1, [x0, #2592]
   435a8:	add	x0, x0, #0xa20
   435ac:	blr	x1
   435b0:	str	x26, [x27, x0]
   435b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   435b8:	ldr	x1, [x0, #2624]
   435bc:	add	x0, x0, #0xa40
   435c0:	blr	x1
   435c4:	cmp	w19, #0x0
   435c8:	str	x25, [x27, x0]
   435cc:	csinc	w1, w19, wzr, ne  // ne = any
   435d0:	mov	x0, x20
   435d4:	mov	w2, w21
   435d8:	bl	c420 <mpfr_underflow@plt>
   435dc:	b	436a0 <mpfr_sec@@Base+0x3d0>
   435e0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   435e4:	cmp	x9, x8
   435e8:	b.eq	435fc <mpfr_sec@@Base+0x32c>  // b.none
   435ec:	mov	x8, #0x2                   	// #2
   435f0:	movk	x8, #0x8000, lsl #48
   435f4:	cmp	x9, x8
   435f8:	b.ne	4368c <mpfr_sec@@Base+0x3bc>  // b.any
   435fc:	mov	x8, #0x2                   	// #2
   43600:	movk	x8, #0x8000, lsl #48
   43604:	str	x8, [x20, #16]
   43608:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4360c:	ldr	x1, [x0, #2656]
   43610:	add	x0, x0, #0xa60
   43614:	blr	x1
   43618:	mrs	x8, tpidr_el0
   4361c:	ldr	w9, [x8, x0]
   43620:	mov	w22, wzr
   43624:	orr	w9, w9, #0x4
   43628:	str	w9, [x8, x0]
   4362c:	b	4355c <mpfr_sec@@Base+0x28c>
   43630:	mov	x8, xzr
   43634:	b	4339c <mpfr_sec@@Base+0xcc>
   43638:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4363c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   43640:	add	x0, x0, #0xa27
   43644:	add	x2, x2, #0x490
   43648:	mov	w1, #0x43                  	// #67
   4364c:	bl	cb90 <mpfr_assert_fail@plt>
   43650:	b	43390 <mpfr_sec@@Base+0xc0>
   43654:	mov	x0, x20
   43658:	mov	w1, w22
   4365c:	mov	w2, w19
   43660:	bl	cb80 <mpfr_check_range@plt>
   43664:	b	436a0 <mpfr_sec@@Base+0x3d0>
   43668:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   4366c:	ldr	x1, [x1, #3944]
   43670:	mov	w3, #0x1                   	// #1
   43674:	mov	x0, x20
   43678:	mov	w4, w19
   4367c:	bl	c590 <mpfr_round_near_x@plt>
   43680:	mov	w22, w0
   43684:	cbnz	w0, 434f0 <mpfr_sec@@Base+0x220>
   43688:	b	43380 <mpfr_sec@@Base+0xb0>
   4368c:	mov	w1, #0x1                   	// #1
   43690:	mov	x0, x20
   43694:	mov	x2, xzr
   43698:	mov	w3, w19
   4369c:	bl	c640 <mpfr_set_ui_2exp@plt>
   436a0:	mov	w22, w0
   436a4:	b	4355c <mpfr_sec@@Base+0x28c>

00000000000436a8 <mpfr_csc@@Base>:
   436a8:	sub	sp, sp, #0x90
   436ac:	stp	x29, x30, [sp, #48]
   436b0:	stp	x28, x27, [sp, #64]
   436b4:	stp	x26, x25, [sp, #80]
   436b8:	stp	x24, x23, [sp, #96]
   436bc:	stp	x22, x21, [sp, #112]
   436c0:	stp	x20, x19, [sp, #128]
   436c4:	ldr	x9, [x1, #16]
   436c8:	mov	x10, #0x2                   	// #2
   436cc:	movk	x10, #0x8000, lsl #48
   436d0:	add	x8, x10, #0x2
   436d4:	mov	x21, x1
   436d8:	cmp	x9, x8
   436dc:	mov	x19, x0
   436e0:	add	x29, sp, #0x30
   436e4:	b.lt	439f4 <mpfr_csc@@Base+0x34c>  // b.tstop
   436e8:	mov	w20, w2
   436ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   436f0:	ldr	x1, [x0, #2656]
   436f4:	add	x0, x0, #0xa60
   436f8:	blr	x1
   436fc:	mrs	x27, tpidr_el0
   43700:	ldr	w28, [x27, x0]
   43704:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43708:	ldr	x1, [x0, #2592]
   4370c:	add	x0, x0, #0xa20
   43710:	blr	x1
   43714:	ldr	x26, [x27, x0]
   43718:	mov	x8, x0
   4371c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43720:	ldr	x1, [x0, #2624]
   43724:	add	x0, x0, #0xa40
   43728:	blr	x1
   4372c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   43730:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   43734:	ldr	x25, [x27, x0]
   43738:	str	x10, [x27, x8]
   4373c:	str	x11, [x27, x0]
   43740:	ldr	x8, [x21]
   43744:	ldr	x24, [x19]
   43748:	cmp	x8, x24
   4374c:	csel	x8, x8, x24, gt
   43750:	neg	x8, x8, lsl #1
   43754:	cmp	x9, x8
   43758:	b.le	438a8 <mpfr_csc@@Base+0x200>
   4375c:	subs	x22, x24, #0x1
   43760:	b.eq	43ab0 <mpfr_csc@@Base+0x408>  // b.none
   43764:	b.le	43ab8 <mpfr_csc@@Base+0x410>
   43768:	clz	x8, x22
   4376c:	mov	w9, #0x40                  	// #64
   43770:	sub	x8, x9, x8
   43774:	add	x8, x24, x8
   43778:	add	x22, x8, #0x3
   4377c:	add	x0, sp, #0x10
   43780:	mov	x1, x22
   43784:	bl	cad0 <mpfr_init2@plt>
   43788:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4378c:	ldr	x1, [x0, #2656]
   43790:	add	x0, x0, #0xa60
   43794:	blr	x1
   43798:	mov	x23, x0
   4379c:	str	wzr, [x27, x0]
   437a0:	add	x0, sp, #0x10
   437a4:	mov	w2, #0x1                   	// #1
   437a8:	mov	x1, x21
   437ac:	bl	c4a0 <mpfr_sin@plt>
   437b0:	ldrb	w8, [x27, x23]
   437b4:	tbnz	w8, #1, 43a4c <mpfr_csc@@Base+0x3a4>
   437b8:	cmp	w20, #0x0
   437bc:	mov	w23, #0x40                  	// #64
   437c0:	cinc	x24, x24, eq  // eq = none
   437c4:	add	x0, sp, #0x10
   437c8:	add	x2, sp, #0x10
   437cc:	mov	w1, #0x1                   	// #1
   437d0:	mov	w3, wzr
   437d4:	bl	c350 <mpfr_ui_div@plt>
   437d8:	ldr	x8, [sp, #32]
   437dc:	mov	x9, #0x2                   	// #2
   437e0:	movk	x9, #0x8000, lsl #48
   437e4:	add	x9, x9, #0x2
   437e8:	cmp	x8, x9
   437ec:	b.lt	43820 <mpfr_csc@@Base+0x178>  // b.tstop
   437f0:	ldr	x8, [sp, #16]
   437f4:	ldr	x0, [sp, #40]
   437f8:	sub	x2, x22, #0x2
   437fc:	mov	x3, x24
   43800:	sub	x9, x8, #0x1
   43804:	add	x8, x8, #0x3e
   43808:	cmp	x9, #0x0
   4380c:	csel	x8, x8, x9, lt  // lt = tstop
   43810:	asr	x8, x8, #6
   43814:	add	x1, x8, #0x1
   43818:	bl	c3d0 <mpfr_round_p@plt>
   4381c:	cbnz	w0, 438e4 <mpfr_csc@@Base+0x23c>
   43820:	mov	x8, #0x2                   	// #2
   43824:	movk	x8, #0x8000, lsl #48
   43828:	sub	x8, x8, x22
   4382c:	sub	x8, x8, #0x103
   43830:	cmp	x23, x8
   43834:	b.gt	4388c <mpfr_csc@@Base+0x1e4>
   43838:	add	x22, x22, x23
   4383c:	cmp	x22, #0x0
   43840:	cinc	x8, x22, lt  // lt = tstop
   43844:	add	x0, sp, #0x10
   43848:	mov	x1, x22
   4384c:	asr	x23, x8, #1
   43850:	bl	bf80 <mpfr_set_prec@plt>
   43854:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43858:	ldr	x1, [x0, #2656]
   4385c:	add	x0, x0, #0xa60
   43860:	blr	x1
   43864:	str	x0, [sp, #8]
   43868:	str	wzr, [x27, x0]
   4386c:	add	x0, sp, #0x10
   43870:	mov	w2, #0x1                   	// #1
   43874:	mov	x1, x21
   43878:	bl	c4a0 <mpfr_sin@plt>
   4387c:	ldr	x8, [sp, #8]
   43880:	ldrb	w8, [x27, x8]
   43884:	tbz	w8, #1, 437c4 <mpfr_csc@@Base+0x11c>
   43888:	b	43a4c <mpfr_csc@@Base+0x3a4>
   4388c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   43890:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   43894:	mov	w1, #0x5f                  	// #95
   43898:	add	x0, x0, #0xa27
   4389c:	add	x2, x2, #0x4df
   438a0:	bl	cb90 <mpfr_assert_fail@plt>
   438a4:	b	43838 <mpfr_csc@@Base+0x190>
   438a8:	ldr	w22, [x21, #8]
   438ac:	mov	w1, #0x1                   	// #1
   438b0:	mov	x0, x19
   438b4:	mov	x2, x21
   438b8:	mov	w3, w20
   438bc:	bl	c350 <mpfr_ui_div@plt>
   438c0:	cbz	w0, 43994 <mpfr_csc@@Base+0x2ec>
   438c4:	mov	w21, w0
   438c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   438cc:	ldr	x1, [x0, #2656]
   438d0:	add	x0, x0, #0xa60
   438d4:	blr	x1
   438d8:	ldr	w8, [x27, x0]
   438dc:	orr	w28, w8, w28
   438e0:	b	43904 <mpfr_csc@@Base+0x25c>
   438e4:	ldr	w3, [sp, #24]
   438e8:	add	x1, sp, #0x10
   438ec:	mov	x0, x19
   438f0:	mov	w2, w20
   438f4:	bl	c6f0 <mpfr_set4@plt>
   438f8:	mov	w21, w0
   438fc:	add	x0, sp, #0x10
   43900:	bl	c110 <mpfr_clear@plt>
   43904:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43908:	ldr	x1, [x0, #2656]
   4390c:	add	x0, x0, #0xa60
   43910:	blr	x1
   43914:	str	w28, [x27, x0]
   43918:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4391c:	ldr	x1, [x0, #2592]
   43920:	add	x0, x0, #0xa20
   43924:	blr	x1
   43928:	str	x26, [x27, x0]
   4392c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43930:	ldr	x1, [x0, #2624]
   43934:	add	x0, x0, #0xa40
   43938:	blr	x1
   4393c:	str	x25, [x27, x0]
   43940:	ldr	x8, [x19, #16]
   43944:	cmp	x8, x25
   43948:	b.gt	43a38 <mpfr_csc@@Base+0x390>
   4394c:	cmp	x8, x26
   43950:	b.lt	43a38 <mpfr_csc@@Base+0x390>  // b.tstop
   43954:	cbz	w21, 43970 <mpfr_csc@@Base+0x2c8>
   43958:	orr	w8, w28, #0x8
   4395c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43960:	ldr	x1, [x0, #2656]
   43964:	add	x0, x0, #0xa60
   43968:	blr	x1
   4396c:	str	w8, [x27, x0]
   43970:	mov	w0, w21
   43974:	ldp	x20, x19, [sp, #128]
   43978:	ldp	x22, x21, [sp, #112]
   4397c:	ldp	x24, x23, [sp, #96]
   43980:	ldp	x26, x25, [sp, #80]
   43984:	ldp	x28, x27, [sp, #64]
   43988:	ldp	x29, x30, [sp, #48]
   4398c:	add	sp, sp, #0x90
   43990:	ret
   43994:	cmp	w22, #0x0
   43998:	mov	w8, #0x2                   	// #2
   4399c:	cinc	w8, w8, le
   439a0:	cmp	w20, #0x4
   439a4:	csel	w20, w8, w20, eq  // eq = none
   439a8:	cmp	w20, #0x3
   439ac:	b.eq	439d4 <mpfr_csc@@Base+0x32c>  // b.none
   439b0:	cmp	w20, #0x2
   439b4:	b.ne	439ec <mpfr_csc@@Base+0x344>  // b.any
   439b8:	cmp	w22, #0x1
   439bc:	b.lt	439c8 <mpfr_csc@@Base+0x320>  // b.tstop
   439c0:	mov	x0, x19
   439c4:	bl	c1c0 <mpfr_nextabove@plt>
   439c8:	mov	w20, #0x2                   	// #2
   439cc:	mov	w21, #0x1                   	// #1
   439d0:	b	438c8 <mpfr_csc@@Base+0x220>
   439d4:	tbz	w22, #31, 439e0 <mpfr_csc@@Base+0x338>
   439d8:	mov	x0, x19
   439dc:	bl	be80 <mpfr_nextbelow@plt>
   439e0:	mov	w20, #0x3                   	// #3
   439e4:	mov	w21, #0xffffffff            	// #-1
   439e8:	b	438c8 <mpfr_csc@@Base+0x220>
   439ec:	neg	w21, w22
   439f0:	b	438c8 <mpfr_csc@@Base+0x220>
   439f4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   439f8:	cmp	x9, x8
   439fc:	b.eq	43a10 <mpfr_csc@@Base+0x368>  // b.none
   43a00:	mov	x8, #0x2                   	// #2
   43a04:	movk	x8, #0x8000, lsl #48
   43a08:	cmp	x9, x8
   43a0c:	b.ne	43ad4 <mpfr_csc@@Base+0x42c>  // b.any
   43a10:	str	x10, [x19, #16]
   43a14:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43a18:	ldr	x1, [x0, #2656]
   43a1c:	add	x0, x0, #0xa60
   43a20:	blr	x1
   43a24:	mrs	x8, tpidr_el0
   43a28:	ldr	w9, [x8, x0]
   43a2c:	mov	w21, wzr
   43a30:	orr	w9, w9, #0x4
   43a34:	b	43b04 <mpfr_csc@@Base+0x45c>
   43a38:	mov	x0, x19
   43a3c:	mov	w1, w21
   43a40:	mov	w2, w20
   43a44:	bl	cb80 <mpfr_check_range@plt>
   43a48:	b	43aa8 <mpfr_csc@@Base+0x400>
   43a4c:	ldr	w21, [sp, #24]
   43a50:	add	x0, sp, #0x10
   43a54:	bl	c110 <mpfr_clear@plt>
   43a58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43a5c:	ldr	x1, [x0, #2656]
   43a60:	add	x0, x0, #0xa60
   43a64:	blr	x1
   43a68:	str	w28, [x27, x0]
   43a6c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43a70:	ldr	x1, [x0, #2592]
   43a74:	add	x0, x0, #0xa20
   43a78:	blr	x1
   43a7c:	str	x26, [x27, x0]
   43a80:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43a84:	ldr	x1, [x0, #2624]
   43a88:	add	x0, x0, #0xa40
   43a8c:	blr	x1
   43a90:	cmp	w20, #0x0
   43a94:	str	x25, [x27, x0]
   43a98:	csinc	w1, w20, wzr, ne  // ne = any
   43a9c:	mov	x0, x19
   43aa0:	mov	w2, w21
   43aa4:	bl	c420 <mpfr_underflow@plt>
   43aa8:	mov	w21, w0
   43aac:	b	43970 <mpfr_csc@@Base+0x2c8>
   43ab0:	mov	x8, xzr
   43ab4:	b	43774 <mpfr_csc@@Base+0xcc>
   43ab8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   43abc:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   43ac0:	add	x0, x0, #0xa27
   43ac4:	add	x2, x2, #0x490
   43ac8:	mov	w1, #0x43                  	// #67
   43acc:	bl	cb90 <mpfr_assert_fail@plt>
   43ad0:	b	43768 <mpfr_csc@@Base+0xc0>
   43ad4:	ldr	w8, [x21, #8]
   43ad8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   43adc:	str	x9, [x19, #16]
   43ae0:	str	w8, [x19, #8]
   43ae4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43ae8:	ldr	x1, [x0, #2656]
   43aec:	add	x0, x0, #0xa60
   43af0:	blr	x1
   43af4:	mrs	x8, tpidr_el0
   43af8:	ldr	w9, [x8, x0]
   43afc:	mov	w21, wzr
   43b00:	orr	w9, w9, #0x20
   43b04:	str	w9, [x8, x0]
   43b08:	b	43970 <mpfr_csc@@Base+0x2c8>

0000000000043b0c <mpfr_cot@@Base>:
   43b0c:	sub	sp, sp, #0x90
   43b10:	stp	x29, x30, [sp, #48]
   43b14:	stp	x28, x27, [sp, #64]
   43b18:	stp	x26, x25, [sp, #80]
   43b1c:	stp	x24, x23, [sp, #96]
   43b20:	stp	x22, x21, [sp, #112]
   43b24:	stp	x20, x19, [sp, #128]
   43b28:	ldr	x9, [x1, #16]
   43b2c:	mov	x10, #0x2                   	// #2
   43b30:	movk	x10, #0x8000, lsl #48
   43b34:	add	x8, x10, #0x2
   43b38:	mov	x21, x1
   43b3c:	cmp	x9, x8
   43b40:	mov	x19, x0
   43b44:	add	x29, sp, #0x30
   43b48:	b.lt	43ec4 <mpfr_cot@@Base+0x3b8>  // b.tstop
   43b4c:	mov	w20, w2
   43b50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43b54:	ldr	x1, [x0, #2656]
   43b58:	add	x0, x0, #0xa60
   43b5c:	blr	x1
   43b60:	mrs	x27, tpidr_el0
   43b64:	ldr	w28, [x27, x0]
   43b68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43b6c:	ldr	x1, [x0, #2592]
   43b70:	add	x0, x0, #0xa20
   43b74:	blr	x1
   43b78:	ldr	x26, [x27, x0]
   43b7c:	mov	x8, x0
   43b80:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43b84:	ldr	x1, [x0, #2624]
   43b88:	add	x0, x0, #0xa40
   43b8c:	blr	x1
   43b90:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   43b94:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   43b98:	ldr	x25, [x27, x0]
   43b9c:	str	x10, [x27, x8]
   43ba0:	str	x11, [x27, x0]
   43ba4:	ldr	x8, [x21]
   43ba8:	ldr	x24, [x19]
   43bac:	cmp	x8, x24
   43bb0:	csel	x8, x8, x24, gt
   43bb4:	neg	x8, x8, lsl #1
   43bb8:	cmp	x9, x8
   43bbc:	b.ge	43c0c <mpfr_cot@@Base+0x100>  // b.tcont
   43bc0:	ldrsw	x22, [x21, #8]
   43bc4:	mov	x8, #0x2                   	// #2
   43bc8:	movk	x8, #0xc000, lsl #48
   43bcc:	cmp	x9, x8
   43bd0:	b.ne	43d7c <mpfr_cot@@Base+0x270>  // b.any
   43bd4:	mov	x0, x21
   43bd8:	bl	bfb0 <mpfr_powerof2_raw@plt>
   43bdc:	cbz	w0, 43d7c <mpfr_cot@@Base+0x270>
   43be0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43be4:	ldr	x1, [x0, #2624]
   43be8:	add	x0, x0, #0xa40
   43bec:	blr	x1
   43bf0:	ldr	x2, [x27, x0]
   43bf4:	mov	x0, x19
   43bf8:	mov	x1, x22
   43bfc:	mov	w3, wzr
   43c00:	bl	bb40 <mpfr_set_si_2exp@plt>
   43c04:	mov	w23, #0x1                   	// #1
   43c08:	b	43da0 <mpfr_cot@@Base+0x294>
   43c0c:	subs	x22, x24, #0x1
   43c10:	b.eq	43f80 <mpfr_cot@@Base+0x474>  // b.none
   43c14:	b.le	43f88 <mpfr_cot@@Base+0x47c>
   43c18:	clz	x8, x22
   43c1c:	mov	w9, #0x40                  	// #64
   43c20:	sub	x8, x9, x8
   43c24:	add	x8, x24, x8
   43c28:	add	x22, x8, #0x3
   43c2c:	add	x0, sp, #0x10
   43c30:	mov	x1, x22
   43c34:	bl	cad0 <mpfr_init2@plt>
   43c38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43c3c:	ldr	x1, [x0, #2656]
   43c40:	add	x0, x0, #0xa60
   43c44:	blr	x1
   43c48:	mov	x23, x0
   43c4c:	str	wzr, [x27, x0]
   43c50:	add	x0, sp, #0x10
   43c54:	mov	w2, #0x1                   	// #1
   43c58:	mov	x1, x21
   43c5c:	bl	bc90 <mpfr_tan@plt>
   43c60:	ldrb	w8, [x27, x23]
   43c64:	tbnz	w8, #1, 43f1c <mpfr_cot@@Base+0x410>
   43c68:	cmp	w20, #0x0
   43c6c:	mov	w23, #0x40                  	// #64
   43c70:	cinc	x24, x24, eq  // eq = none
   43c74:	add	x0, sp, #0x10
   43c78:	add	x2, sp, #0x10
   43c7c:	mov	w1, #0x1                   	// #1
   43c80:	mov	w3, wzr
   43c84:	bl	c350 <mpfr_ui_div@plt>
   43c88:	ldr	x8, [sp, #32]
   43c8c:	mov	x9, #0x2                   	// #2
   43c90:	movk	x9, #0x8000, lsl #48
   43c94:	add	x9, x9, #0x2
   43c98:	cmp	x8, x9
   43c9c:	b.lt	43cd0 <mpfr_cot@@Base+0x1c4>  // b.tstop
   43ca0:	ldr	x8, [sp, #16]
   43ca4:	ldr	x0, [sp, #40]
   43ca8:	sub	x2, x22, #0x2
   43cac:	mov	x3, x24
   43cb0:	sub	x9, x8, #0x1
   43cb4:	add	x8, x8, #0x3e
   43cb8:	cmp	x9, #0x0
   43cbc:	csel	x8, x8, x9, lt  // lt = tstop
   43cc0:	asr	x8, x8, #6
   43cc4:	add	x1, x8, #0x1
   43cc8:	bl	c3d0 <mpfr_round_p@plt>
   43ccc:	cbnz	w0, 43d58 <mpfr_cot@@Base+0x24c>
   43cd0:	mov	x8, #0x2                   	// #2
   43cd4:	movk	x8, #0x8000, lsl #48
   43cd8:	sub	x8, x8, x22
   43cdc:	sub	x8, x8, #0x103
   43ce0:	cmp	x23, x8
   43ce4:	b.gt	43d3c <mpfr_cot@@Base+0x230>
   43ce8:	add	x22, x22, x23
   43cec:	cmp	x22, #0x0
   43cf0:	cinc	x8, x22, lt  // lt = tstop
   43cf4:	add	x0, sp, #0x10
   43cf8:	mov	x1, x22
   43cfc:	asr	x23, x8, #1
   43d00:	bl	bf80 <mpfr_set_prec@plt>
   43d04:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43d08:	ldr	x1, [x0, #2656]
   43d0c:	add	x0, x0, #0xa60
   43d10:	blr	x1
   43d14:	str	x0, [sp, #8]
   43d18:	str	wzr, [x27, x0]
   43d1c:	add	x0, sp, #0x10
   43d20:	mov	w2, #0x1                   	// #1
   43d24:	mov	x1, x21
   43d28:	bl	bc90 <mpfr_tan@plt>
   43d2c:	ldr	x8, [sp, #8]
   43d30:	ldrb	w8, [x27, x8]
   43d34:	tbz	w8, #1, 43c74 <mpfr_cot@@Base+0x168>
   43d38:	b	43f1c <mpfr_cot@@Base+0x410>
   43d3c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   43d40:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   43d44:	mov	w1, #0x5f                  	// #95
   43d48:	add	x0, x0, #0xa27
   43d4c:	add	x2, x2, #0x4df
   43d50:	bl	cb90 <mpfr_assert_fail@plt>
   43d54:	b	43ce8 <mpfr_cot@@Base+0x1dc>
   43d58:	ldr	w3, [sp, #24]
   43d5c:	add	x1, sp, #0x10
   43d60:	mov	x0, x19
   43d64:	mov	w2, w20
   43d68:	bl	c6f0 <mpfr_set4@plt>
   43d6c:	mov	w21, w0
   43d70:	add	x0, sp, #0x10
   43d74:	bl	c110 <mpfr_clear@plt>
   43d78:	b	43e0c <mpfr_cot@@Base+0x300>
   43d7c:	mov	w1, #0x1                   	// #1
   43d80:	mov	x0, x19
   43d84:	mov	x2, x21
   43d88:	mov	w3, w20
   43d8c:	bl	c350 <mpfr_ui_div@plt>
   43d90:	cbz	w0, 43d9c <mpfr_cot@@Base+0x290>
   43d94:	mov	w21, w0
   43d98:	b	43df4 <mpfr_cot@@Base+0x2e8>
   43d9c:	mov	w23, wzr
   43da0:	cmp	w22, #0x0
   43da4:	mov	w8, #0x2                   	// #2
   43da8:	cinc	w8, w8, le
   43dac:	cmp	w20, #0x4
   43db0:	csel	w20, w8, w20, eq  // eq = none
   43db4:	cmp	w20, #0x2
   43db8:	b.ne	43dc4 <mpfr_cot@@Base+0x2b8>  // b.any
   43dbc:	tbz	w22, #31, 43dd8 <mpfr_cot@@Base+0x2cc>
   43dc0:	b	43dd0 <mpfr_cot@@Base+0x2c4>
   43dc4:	tbz	w22, #31, 43e9c <mpfr_cot@@Base+0x390>
   43dc8:	cmp	w20, #0x1
   43dcc:	b.ne	43e9c <mpfr_cot@@Base+0x390>  // b.any
   43dd0:	mov	x0, x19
   43dd4:	bl	c1c0 <mpfr_nextabove@plt>
   43dd8:	mov	w21, #0x1                   	// #1
   43ddc:	cbz	w23, 43df4 <mpfr_cot@@Base+0x2e8>
   43de0:	mov	w2, #0x1                   	// #1
   43de4:	mov	x0, x19
   43de8:	mov	x1, x19
   43dec:	mov	w3, w20
   43df0:	bl	c320 <mpfr_mul_2ui@plt>
   43df4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43df8:	ldr	x1, [x0, #2656]
   43dfc:	add	x0, x0, #0xa60
   43e00:	blr	x1
   43e04:	ldr	w8, [x27, x0]
   43e08:	orr	w28, w8, w28
   43e0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43e10:	ldr	x1, [x0, #2656]
   43e14:	add	x0, x0, #0xa60
   43e18:	blr	x1
   43e1c:	str	w28, [x27, x0]
   43e20:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43e24:	ldr	x1, [x0, #2592]
   43e28:	add	x0, x0, #0xa20
   43e2c:	blr	x1
   43e30:	str	x26, [x27, x0]
   43e34:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43e38:	ldr	x1, [x0, #2624]
   43e3c:	add	x0, x0, #0xa40
   43e40:	blr	x1
   43e44:	str	x25, [x27, x0]
   43e48:	ldr	x8, [x19, #16]
   43e4c:	cmp	x8, x25
   43e50:	b.gt	43f08 <mpfr_cot@@Base+0x3fc>
   43e54:	cmp	x8, x26
   43e58:	b.lt	43f08 <mpfr_cot@@Base+0x3fc>  // b.tstop
   43e5c:	cbz	w21, 43e78 <mpfr_cot@@Base+0x36c>
   43e60:	orr	w8, w28, #0x8
   43e64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43e68:	ldr	x1, [x0, #2656]
   43e6c:	add	x0, x0, #0xa60
   43e70:	blr	x1
   43e74:	str	w8, [x27, x0]
   43e78:	mov	w0, w21
   43e7c:	ldp	x20, x19, [sp, #128]
   43e80:	ldp	x22, x21, [sp, #112]
   43e84:	ldp	x24, x23, [sp, #96]
   43e88:	ldp	x26, x25, [sp, #80]
   43e8c:	ldp	x28, x27, [sp, #64]
   43e90:	ldp	x29, x30, [sp, #48]
   43e94:	add	sp, sp, #0x90
   43e98:	ret
   43e9c:	orr	w8, w20, #0x2
   43ea0:	cmp	w8, #0x3
   43ea4:	csinv	w21, w22, wzr, ne  // ne = any
   43ea8:	b.ne	43ddc <mpfr_cot@@Base+0x2d0>  // b.any
   43eac:	cmp	w22, #0x1
   43eb0:	b.lt	43ddc <mpfr_cot@@Base+0x2d0>  // b.tstop
   43eb4:	mov	x0, x19
   43eb8:	bl	be80 <mpfr_nextbelow@plt>
   43ebc:	mov	w21, #0xffffffff            	// #-1
   43ec0:	b	43ddc <mpfr_cot@@Base+0x2d0>
   43ec4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   43ec8:	cmp	x9, x8
   43ecc:	b.eq	43ee0 <mpfr_cot@@Base+0x3d4>  // b.none
   43ed0:	mov	x8, #0x2                   	// #2
   43ed4:	movk	x8, #0x8000, lsl #48
   43ed8:	cmp	x9, x8
   43edc:	b.ne	43fa4 <mpfr_cot@@Base+0x498>  // b.any
   43ee0:	str	x10, [x19, #16]
   43ee4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43ee8:	ldr	x1, [x0, #2656]
   43eec:	add	x0, x0, #0xa60
   43ef0:	blr	x1
   43ef4:	mrs	x8, tpidr_el0
   43ef8:	ldr	w9, [x8, x0]
   43efc:	mov	w21, wzr
   43f00:	orr	w9, w9, #0x4
   43f04:	b	43fd4 <mpfr_cot@@Base+0x4c8>
   43f08:	mov	x0, x19
   43f0c:	mov	w1, w21
   43f10:	mov	w2, w20
   43f14:	bl	cb80 <mpfr_check_range@plt>
   43f18:	b	43f78 <mpfr_cot@@Base+0x46c>
   43f1c:	ldr	w21, [sp, #24]
   43f20:	add	x0, sp, #0x10
   43f24:	bl	c110 <mpfr_clear@plt>
   43f28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43f2c:	ldr	x1, [x0, #2656]
   43f30:	add	x0, x0, #0xa60
   43f34:	blr	x1
   43f38:	str	w28, [x27, x0]
   43f3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43f40:	ldr	x1, [x0, #2592]
   43f44:	add	x0, x0, #0xa20
   43f48:	blr	x1
   43f4c:	str	x26, [x27, x0]
   43f50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43f54:	ldr	x1, [x0, #2624]
   43f58:	add	x0, x0, #0xa40
   43f5c:	blr	x1
   43f60:	cmp	w20, #0x0
   43f64:	str	x25, [x27, x0]
   43f68:	csinc	w1, w20, wzr, ne  // ne = any
   43f6c:	mov	x0, x19
   43f70:	mov	w2, w21
   43f74:	bl	c420 <mpfr_underflow@plt>
   43f78:	mov	w21, w0
   43f7c:	b	43e78 <mpfr_cot@@Base+0x36c>
   43f80:	mov	x8, xzr
   43f84:	b	43c24 <mpfr_cot@@Base+0x118>
   43f88:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   43f8c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   43f90:	add	x0, x0, #0xa27
   43f94:	add	x2, x2, #0x490
   43f98:	mov	w1, #0x43                  	// #67
   43f9c:	bl	cb90 <mpfr_assert_fail@plt>
   43fa0:	b	43c18 <mpfr_cot@@Base+0x10c>
   43fa4:	ldr	w8, [x21, #8]
   43fa8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   43fac:	str	x9, [x19, #16]
   43fb0:	str	w8, [x19, #8]
   43fb4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   43fb8:	ldr	x1, [x0, #2656]
   43fbc:	add	x0, x0, #0xa60
   43fc0:	blr	x1
   43fc4:	mrs	x8, tpidr_el0
   43fc8:	ldr	w9, [x8, x0]
   43fcc:	mov	w21, wzr
   43fd0:	orr	w9, w9, #0x20
   43fd4:	str	w9, [x8, x0]
   43fd8:	b	43e78 <mpfr_cot@@Base+0x36c>

0000000000043fdc <mpfr_eint@@Base>:
   43fdc:	str	d10, [sp, #-128]!
   43fe0:	stp	d9, d8, [sp, #16]
   43fe4:	stp	x29, x30, [sp, #32]
   43fe8:	stp	x28, x27, [sp, #48]
   43fec:	stp	x26, x25, [sp, #64]
   43ff0:	stp	x24, x23, [sp, #80]
   43ff4:	stp	x22, x21, [sp, #96]
   43ff8:	stp	x20, x19, [sp, #112]
   43ffc:	mov	x29, sp
   44000:	sub	sp, sp, #0x1e0
   44004:	ldr	x8, [x1, #16]
   44008:	mov	x10, #0x4                   	// #4
   4400c:	movk	x10, #0x8000, lsl #48
   44010:	mov	x21, x1
   44014:	cmp	x8, x10
   44018:	mov	x19, x0
   4401c:	b.lt	44b14 <mpfr_eint@@Base+0xb38>  // b.tstop
   44020:	ldr	x9, [x21]
   44024:	mov	w10, #0x1                   	// #1
   44028:	mov	w26, w2
   4402c:	str	x9, [sp, #72]
   44030:	ldr	x9, [x21, #24]
   44034:	str	w10, [sp, #80]
   44038:	stp	x8, x9, [sp, #88]
   4403c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44040:	ldr	x1, [x0, #2656]
   44044:	add	x0, x0, #0xa60
   44048:	blr	x1
   4404c:	mrs	x20, tpidr_el0
   44050:	ldr	w25, [x20, x0]
   44054:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44058:	ldr	x1, [x0, #2592]
   4405c:	add	x0, x0, #0xa20
   44060:	blr	x1
   44064:	ldr	x28, [x20, x0]
   44068:	mov	x8, x0
   4406c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44070:	ldr	x1, [x0, #2624]
   44074:	add	x0, x0, #0xa40
   44078:	blr	x1
   4407c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   44080:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   44084:	ldr	x24, [x20, x0]
   44088:	str	x9, [x20, x8]
   4408c:	str	x10, [x20, x0]
   44090:	ldr	x22, [x19]
   44094:	cmp	x22, #0x1
   44098:	b.eq	44b5c <mpfr_eint@@Base+0xb80>  // b.none
   4409c:	mov	x8, x22
   440a0:	b.le	44b64 <mpfr_eint@@Base+0xb88>
   440a4:	sub	x8, x8, #0x1
   440a8:	clz	x8, x8
   440ac:	mov	w9, #0x80                  	// #128
   440b0:	sub	w8, w9, w8, lsl #1
   440b4:	sxtw	x23, w8
   440b8:	add	x0, sp, #0x88
   440bc:	mov	w1, #0x40                  	// #64
   440c0:	bl	cad0 <mpfr_init2@plt>
   440c4:	add	x0, sp, #0x68
   440c8:	mov	w1, #0x40                  	// #64
   440cc:	bl	cad0 <mpfr_init2@plt>
   440d0:	ldr	w8, [x21, #8]
   440d4:	cmp	w8, #0x1
   440d8:	b.lt	441a4 <mpfr_eint@@Base+0x1c8>  // b.tstop
   440dc:	add	x0, sp, #0x88
   440e0:	mov	w2, #0x2                   	// #2
   440e4:	mov	x1, x21
   440e8:	bl	c130 <mpfr_log@plt>
   440ec:	add	x0, sp, #0x68
   440f0:	add	x2, sp, #0x88
   440f4:	mov	w3, #0x3                   	// #3
   440f8:	mov	x1, x21
   440fc:	bl	bc20 <mpfr_sub@plt>
   44100:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
   44104:	ldr	x2, [x2, #4048]
   44108:	add	x0, sp, #0x68
   4410c:	add	x1, sp, #0x68
   44110:	mov	w3, #0x3                   	// #3
   44114:	bl	c670 <mpfr_div@plt>
   44118:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4411c:	ldr	x1, [x0, #2624]
   44120:	add	x0, x0, #0xa40
   44124:	blr	x1
   44128:	ldr	x1, [x20, x0]
   4412c:	add	x0, sp, #0x68
   44130:	mov	x2, xzr
   44134:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   44138:	tbnz	w0, #31, 441a0 <mpfr_eint@@Base+0x1c4>
   4413c:	add	x0, sp, #0x88
   44140:	bl	c110 <mpfr_clear@plt>
   44144:	add	x0, sp, #0x68
   44148:	bl	c110 <mpfr_clear@plt>
   4414c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44150:	ldr	x1, [x0, #2656]
   44154:	add	x0, x0, #0xa60
   44158:	blr	x1
   4415c:	str	w25, [x20, x0]
   44160:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44164:	ldr	x1, [x0, #2592]
   44168:	add	x0, x0, #0xa20
   4416c:	blr	x1
   44170:	str	x28, [x20, x0]
   44174:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44178:	ldr	x1, [x0, #2624]
   4417c:	add	x0, x0, #0xa40
   44180:	blr	x1
   44184:	str	x24, [x20, x0]
   44188:	mov	w2, #0x1                   	// #1
   4418c:	mov	x0, x19
   44190:	mov	w1, w26
   44194:	bl	bff0 <mpfr_overflow@plt>
   44198:	mov	w21, w0
   4419c:	b	44a84 <mpfr_eint@@Base+0xaa8>
   441a0:	ldr	w8, [x21, #8]
   441a4:	str	w25, [x29, #12]
   441a8:	add	x9, x22, x23
   441ac:	add	x25, x9, #0x6
   441b0:	tbnz	w8, #31, 4422c <mpfr_eint@@Base+0x250>
   441b4:	cmp	w8, #0x1
   441b8:	b.lt	4427c <mpfr_eint@@Base+0x2a0>  // b.tstop
   441bc:	ldr	x8, [x21, #16]
   441c0:	cmn	x8, #0x1
   441c4:	b.ne	4427c <mpfr_eint@@Base+0x2a0>  // b.any
   441c8:	sub	x0, x29, #0xd8
   441cc:	mov	w1, #0x20                  	// #32
   441d0:	mov	w22, #0x20                  	// #32
   441d4:	bl	cad0 <mpfr_init2@plt>
   441d8:	mov	w1, #0xa54b                	// #42315
   441dc:	sub	x0, x29, #0xd8
   441e0:	movk	w1, #0x5f5c, lsl #16
   441e4:	mov	x2, #0xffffffffffffffe0    	// #-32
   441e8:	mov	w3, wzr
   441ec:	bl	c640 <mpfr_set_ui_2exp@plt>
   441f0:	sub	x0, x29, #0xd8
   441f4:	sub	x2, x29, #0xd8
   441f8:	mov	x1, x21
   441fc:	mov	w3, wzr
   44200:	bl	bc20 <mpfr_sub@plt>
   44204:	ldur	x8, [x29, #-200]
   44208:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4420c:	sub	x0, x29, #0xd8
   44210:	neg	x10, x8
   44214:	and	x10, x10, x8, asr #63
   44218:	cmp	x8, x9
   4421c:	csel	x8, x22, x10, eq  // eq = none
   44220:	add	x25, x8, x25
   44224:	bl	c110 <mpfr_clear@plt>
   44228:	b	4427c <mpfr_eint@@Base+0x2a0>
   4422c:	ldr	x8, [x21, #16]
   44230:	cmp	x8, #0x1
   44234:	b.lt	4427c <mpfr_eint@@Base+0x2a0>  // b.tstop
   44238:	adrp	x2, 70000 <__gmpfr_l2b@@Base+0x2e0>
   4423c:	ldr	x2, [x2, #3992]
   44240:	add	x0, sp, #0x68
   44244:	mov	w3, #0x2                   	// #2
   44248:	mov	x1, x21
   4424c:	bl	c670 <mpfr_div@plt>
   44250:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44254:	ldr	x1, [x0, #2592]
   44258:	add	x0, x0, #0xa20
   4425c:	blr	x1
   44260:	ldr	x1, [x20, x0]
   44264:	add	x0, sp, #0x68
   44268:	mov	x2, xzr
   4426c:	bl	c430 <mpfr_cmp_si_2exp@plt>
   44270:	tbnz	w0, #31, 44ab0 <mpfr_eint@@Base+0xad4>
   44274:	ldr	w8, [x21, #8]
   44278:	b	441b4 <mpfr_eint@@Base+0x1d8>
   4427c:	add	x0, sp, #0x88
   44280:	mov	x1, x25
   44284:	bl	bf80 <mpfr_set_prec@plt>
   44288:	add	x0, sp, #0x68
   4428c:	mov	x1, x25
   44290:	bl	bf80 <mpfr_set_prec@plt>
   44294:	adrp	x9, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   44298:	sub	x8, x29, #0xd8
   4429c:	ldr	d10, [x9, #2448]
   442a0:	add	x10, x8, #0x10
   442a4:	cmp	w26, #0x0
   442a8:	str	x10, [sp, #40]
   442ac:	add	x10, x8, #0x18
   442b0:	add	x8, x8, #0x20
   442b4:	mov	w22, #0x40                  	// #64
   442b8:	fmov	d8, #5.000000000000000000e-01
   442bc:	fmov	d9, #1.000000000000000000e+00
   442c0:	mov	w23, #0x1f                  	// #31
   442c4:	stp	x8, x10, [sp, #24]
   442c8:	cset	w8, eq  // eq = none
   442cc:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   442d0:	str	x8, [sp, #56]
   442d4:	ldr	x8, [x21, #16]
   442d8:	str	x25, [sp, #64]
   442dc:	str	x22, [sp, #16]
   442e0:	cmp	x8, #0x1
   442e4:	b.lt	444d4 <mpfr_eint@@Base+0x4f8>  // b.tstop
   442e8:	scvtf	d1, x8
   442ec:	scvtf	d0, x25
   442f0:	fmul	d1, d1, d8
   442f4:	fadd	d0, d1, d0
   442f8:	fmul	d0, d0, d10
   442fc:	fadd	d0, d0, d9
   44300:	add	x0, sp, #0x48
   44304:	bl	bda0 <mpfr_cmp_d@plt>
   44308:	cmp	w0, #0x0
   4430c:	b.le	444d0 <mpfr_eint@@Base+0x4f4>
   44310:	ldr	x23, [sp, #136]
   44314:	add	x0, sp, #0xc8
   44318:	str	x24, [sp, #48]
   4431c:	mov	x1, x23
   44320:	bl	cad0 <mpfr_init2@plt>
   44324:	add	x0, sp, #0xe8
   44328:	mov	x1, x23
   4432c:	bl	cad0 <mpfr_init2@plt>
   44330:	add	x0, sp, #0xa8
   44334:	mov	w1, #0x1f                  	// #31
   44338:	bl	cad0 <mpfr_init2@plt>
   4433c:	add	x0, sp, #0xe8
   44340:	mov	w1, #0x1                   	// #1
   44344:	mov	x2, x21
   44348:	mov	w3, wzr
   4434c:	bl	c350 <mpfr_ui_div@plt>
   44350:	add	x0, sp, #0xc8
   44354:	mov	w1, #0x1                   	// #1
   44358:	mov	x2, xzr
   4435c:	mov	w3, wzr
   44360:	bl	c640 <mpfr_set_ui_2exp@plt>
   44364:	ldr	w3, [sp, #208]
   44368:	add	x0, sp, #0x88
   4436c:	add	x1, sp, #0xc8
   44370:	mov	w2, wzr
   44374:	bl	c6f0 <mpfr_set4@plt>
   44378:	ldr	x8, [sp, #216]
   4437c:	ldr	x9, [sp, #152]
   44380:	mov	w10, #0x1                   	// #1
   44384:	str	w10, [sp, #176]
   44388:	add	x8, x8, x23
   4438c:	cmp	x8, x9
   44390:	str	x27, [sp, #184]
   44394:	b.le	44444 <mpfr_eint@@Base+0x468>
   44398:	mov	w24, #0x6                   	// #6
   4439c:	mov	w25, #0x1                   	// #1
   443a0:	add	x0, sp, #0xc8
   443a4:	add	x1, sp, #0xc8
   443a8:	add	x2, sp, #0xe8
   443ac:	mov	w3, wzr
   443b0:	bl	be00 <mpfr_mul@plt>
   443b4:	add	x0, sp, #0xc8
   443b8:	add	x1, sp, #0xc8
   443bc:	mov	x2, x25
   443c0:	mov	w3, wzr
   443c4:	bl	bb10 <mpfr_mul_ui@plt>
   443c8:	ldr	x8, [sp, #152]
   443cc:	ldr	x9, [sp, #216]
   443d0:	add	x0, sp, #0xa8
   443d4:	add	x1, sp, #0xa8
   443d8:	mov	w3, #0x2                   	// #2
   443dc:	sub	x2, x8, x9
   443e0:	bl	bc40 <mpfr_mul_2si@plt>
   443e4:	add	x0, sp, #0xa8
   443e8:	add	x1, sp, #0xa8
   443ec:	mov	w3, #0x2                   	// #2
   443f0:	mov	x2, x24
   443f4:	bl	c2d0 <mpfr_add_ui@plt>
   443f8:	ldr	x8, [sp, #152]
   443fc:	ldr	x9, [sp, #216]
   44400:	add	x0, sp, #0xa8
   44404:	add	x1, sp, #0xa8
   44408:	mov	w3, #0x2                   	// #2
   4440c:	sub	x2, x8, x9
   44410:	bl	c470 <mpfr_div_2si@plt>
   44414:	add	x0, sp, #0x88
   44418:	add	x1, sp, #0x88
   4441c:	add	x2, sp, #0xc8
   44420:	mov	w3, wzr
   44424:	bl	c240 <mpfr_add@plt>
   44428:	ldr	x8, [sp, #216]
   4442c:	ldr	x9, [sp, #152]
   44430:	add	x25, x25, #0x1
   44434:	add	x24, x24, #0x6
   44438:	add	x8, x8, x23
   4443c:	cmp	x8, x9
   44440:	b.gt	443a0 <mpfr_eint@@Base+0x3c4>
   44444:	add	x0, sp, #0x88
   44448:	add	x1, sp, #0x88
   4444c:	add	x2, sp, #0xe8
   44450:	mov	w3, wzr
   44454:	bl	be00 <mpfr_mul@plt>
   44458:	add	x0, sp, #0xc8
   4445c:	mov	x1, x21
   44460:	mov	w2, wzr
   44464:	bl	c7a0 <mpfr_exp@plt>
   44468:	add	x0, sp, #0x88
   4446c:	add	x1, sp, #0x88
   44470:	add	x2, sp, #0xc8
   44474:	mov	w3, wzr
   44478:	bl	be00 <mpfr_mul@plt>
   4447c:	add	x0, sp, #0xa8
   44480:	add	x1, sp, #0xa8
   44484:	mov	w2, #0x2                   	// #2
   44488:	mov	w3, #0x2                   	// #2
   4448c:	bl	c320 <mpfr_mul_2ui@plt>
   44490:	add	x0, sp, #0xa8
   44494:	add	x1, sp, #0xa8
   44498:	mov	w2, #0x8                   	// #8
   4449c:	mov	w3, #0x2                   	// #2
   444a0:	bl	c2d0 <mpfr_add_ui@plt>
   444a4:	ldr	x22, [sp, #184]
   444a8:	add	x0, sp, #0xc8
   444ac:	bl	c110 <mpfr_clear@plt>
   444b0:	add	x0, sp, #0xe8
   444b4:	bl	c110 <mpfr_clear@plt>
   444b8:	add	x0, sp, #0xa8
   444bc:	bl	c110 <mpfr_clear@plt>
   444c0:	ldr	x8, [sp, #152]
   444c4:	ldr	x24, [sp, #48]
   444c8:	ldr	x25, [sp, #64]
   444cc:	b	44944 <mpfr_eint@@Base+0x968>
   444d0:	ldr	x8, [x21, #16]
   444d4:	ldr	x25, [sp, #136]
   444d8:	neg	x9, x25
   444dc:	cmp	x8, x9
   444e0:	b.le	4486c <mpfr_eint@@Base+0x890>
   444e4:	sub	x0, x29, #0x28
   444e8:	str	x24, [sp, #48]
   444ec:	str	x28, [sp, #8]
   444f0:	str	w26, [x29, #8]
   444f4:	bl	c040 <mpfr_mpz_init@plt>
   444f8:	sub	x0, x29, #0x38
   444fc:	bl	c040 <mpfr_mpz_init@plt>
   44500:	sub	x0, x29, #0x48
   44504:	bl	c040 <mpfr_mpz_init@plt>
   44508:	sub	x0, x29, #0x18
   4450c:	bl	c040 <mpfr_mpz_init@plt>
   44510:	ldr	x8, [sp, #40]
   44514:	mov	w9, #0x1                   	// #1
   44518:	sub	x0, x29, #0x18
   4451c:	mov	x1, x21
   44520:	stp	xzr, x8, [x29, #-216]
   44524:	str	x8, [sp, #256]
   44528:	ldr	x8, [sp, #32]
   4452c:	str	w9, [sp, #240]
   44530:	str	w9, [sp, #208]
   44534:	str	x23, [sp, #168]
   44538:	stp	x8, x23, [sp, #224]
   4453c:	ldr	x8, [sp, #24]
   44540:	str	w9, [sp, #176]
   44544:	stp	x8, x23, [sp, #192]
   44548:	bl	cb10 <mpfr_get_z_2exp@plt>
   4454c:	ldr	x8, [x21]
   44550:	mov	x23, x0
   44554:	subs	x2, x8, x25
   44558:	b.le	4456c <mpfr_eint@@Base+0x590>
   4455c:	sub	x0, x29, #0x18
   44560:	sub	x1, x29, #0x18
   44564:	add	x23, x2, x23
   44568:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   4456c:	sub	x0, x29, #0x18
   44570:	mov	x1, xzr
   44574:	bl	bb50 <__gmpz_scan1@plt>
   44578:	mov	x24, x0
   4457c:	sub	x0, x29, #0x18
   44580:	sub	x1, x29, #0x18
   44584:	mov	x2, x24
   44588:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   4458c:	sub	x0, x29, #0x38
   44590:	mov	w1, #0x1                   	// #1
   44594:	add	x27, x24, x23
   44598:	bl	bd60 <__gmpz_set_ui@plt>
   4459c:	sub	x0, x29, #0x38
   445a0:	sub	x1, x29, #0x38
   445a4:	mov	x2, x25
   445a8:	bl	c290 <__gmpz_mul_2exp@plt>
   445ac:	mov	w8, #0x1                   	// #1
   445b0:	str	w8, [sp, #240]
   445b4:	str	w8, [sp, #176]
   445b8:	sub	x8, x27, x25
   445bc:	mov	x26, xzr
   445c0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   445c4:	sub	x28, x25, #0x1
   445c8:	add	x22, x8, #0x1
   445cc:	neg	x23, x27
   445d0:	str	x9, [sp, #248]
   445d4:	str	x9, [sp, #184]
   445d8:	add	x0, sp, #0xe8
   445dc:	add	x1, sp, #0xe8
   445e0:	mov	w3, #0x2                   	// #2
   445e4:	mov	x2, x28
   445e8:	add	x24, x26, #0x1
   445ec:	bl	c320 <mpfr_mul_2ui@plt>
   445f0:	ldur	w8, [x29, #-52]
   445f4:	tbnz	w8, #31, 44610 <mpfr_eint@@Base+0x634>
   445f8:	add	x0, sp, #0xe8
   445fc:	add	x1, sp, #0xe8
   44600:	sub	x2, x29, #0x38
   44604:	mov	w3, #0x2                   	// #2
   44608:	bl	c4d0 <mpfr_add_z@plt>
   4460c:	b	44624 <mpfr_eint@@Base+0x648>
   44610:	add	x0, sp, #0xe8
   44614:	add	x1, sp, #0xe8
   44618:	sub	x2, x29, #0x38
   4461c:	mov	w3, #0x2                   	// #2
   44620:	bl	be10 <mpfr_sub_z@plt>
   44624:	ldur	w8, [x29, #-20]
   44628:	ldur	x9, [x29, #-16]
   4462c:	add	x0, sp, #0xe8
   44630:	add	x1, sp, #0xe8
   44634:	cmp	w8, #0x0
   44638:	cneg	w8, w8, mi  // mi = first
   4463c:	add	x9, x9, w8, uxtw #3
   44640:	ldur	x9, [x9, #-8]
   44644:	mov	w3, #0x2                   	// #2
   44648:	clz	x9, x9
   4464c:	sub	x9, x22, x9
   44650:	add	x2, x9, x8, lsl #6
   44654:	bl	bc40 <mpfr_mul_2si@plt>
   44658:	add	x0, sp, #0xe8
   4465c:	add	x1, sp, #0xe8
   44660:	mov	w3, #0x2                   	// #2
   44664:	mov	x2, x24
   44668:	bl	ccc0 <mpfr_div_ui@plt>
   4466c:	add	x0, sp, #0xe8
   44670:	add	x1, sp, #0xe8
   44674:	mov	w2, #0x1                   	// #1
   44678:	mov	w3, #0x2                   	// #2
   4467c:	bl	c2d0 <mpfr_add_ui@plt>
   44680:	sub	x0, x29, #0x38
   44684:	sub	x1, x29, #0x38
   44688:	sub	x2, x29, #0x18
   4468c:	bl	c090 <__gmpz_mul@plt>
   44690:	sub	x0, x29, #0x38
   44694:	sub	x1, x29, #0x38
   44698:	tbnz	x27, #63, 446a8 <mpfr_eint@@Base+0x6cc>
   4469c:	mov	x2, x27
   446a0:	bl	c290 <__gmpz_mul_2exp@plt>
   446a4:	b	446b0 <mpfr_eint@@Base+0x6d4>
   446a8:	mov	x2, x23
   446ac:	bl	c790 <__gmpz_tdiv_q_2exp@plt>
   446b0:	sub	x0, x29, #0x38
   446b4:	sub	x1, x29, #0x38
   446b8:	mov	x2, x24
   446bc:	bl	c0e0 <__gmpz_tdiv_q_ui@plt>
   446c0:	sub	x0, x29, #0x48
   446c4:	sub	x1, x29, #0x38
   446c8:	mov	x2, x24
   446cc:	bl	c0e0 <__gmpz_tdiv_q_ui@plt>
   446d0:	sub	x0, x29, #0x28
   446d4:	sub	x1, x29, #0x28
   446d8:	sub	x2, x29, #0x48
   446dc:	bl	ca10 <__gmpz_add@plt>
   446e0:	add	x0, sp, #0xc8
   446e4:	add	x1, sp, #0xe8
   446e8:	mov	w3, #0x2                   	// #2
   446ec:	mov	x2, x24
   446f0:	bl	ccc0 <mpfr_div_ui@plt>
   446f4:	add	x0, sp, #0xc8
   446f8:	add	x1, sp, #0xc8
   446fc:	mov	w2, #0x1                   	// #1
   44700:	mov	w3, #0x2                   	// #2
   44704:	bl	c2d0 <mpfr_add_ui@plt>
   44708:	add	x0, sp, #0xa8
   4470c:	add	x1, sp, #0xa8
   44710:	add	x2, sp, #0xc8
   44714:	mov	w3, #0x2                   	// #2
   44718:	bl	c240 <mpfr_add@plt>
   4471c:	ldur	w8, [x29, #-52]
   44720:	cbz	w8, 44748 <mpfr_eint@@Base+0x76c>
   44724:	ldur	x9, [x29, #-48]
   44728:	cmp	w8, #0x0
   4472c:	cneg	w10, w8, mi  // mi = first
   44730:	add	x9, x9, w10, uxtw #3
   44734:	ldur	x9, [x9, #-8]
   44738:	lsl	x10, x10, #6
   4473c:	clz	x9, x9
   44740:	sub	x9, x10, x9
   44744:	b	4474c <mpfr_eint@@Base+0x770>
   44748:	mov	x9, xzr
   4474c:	ldr	x10, [sp, #184]
   44750:	add	x26, x26, #0x1
   44754:	cmp	x9, x10
   44758:	b.ge	445d8 <mpfr_eint@@Base+0x5fc>  // b.tcont
   4475c:	cmp	w8, #0x0
   44760:	cneg	w8, w8, mi  // mi = first
   44764:	add	x0, sp, #0xe8
   44768:	add	x1, sp, #0xe8
   4476c:	sub	x2, x29, #0x38
   44770:	mov	w3, #0x2                   	// #2
   44774:	stur	w8, [x29, #-52]
   44778:	bl	c4d0 <mpfr_add_z@plt>
   4477c:	add	x0, sp, #0xe8
   44780:	add	x1, sp, #0xe8
   44784:	mov	w3, #0x2                   	// #2
   44788:	mov	x2, x26
   4478c:	bl	ccc0 <mpfr_div_ui@plt>
   44790:	add	x0, sp, #0xc8
   44794:	mov	w2, #0x2                   	// #2
   44798:	mov	w3, #0x1                   	// #1
   4479c:	mov	x1, x21
   447a0:	bl	c6f0 <mpfr_set4@plt>
   447a4:	add	x0, sp, #0xe8
   447a8:	add	x1, sp, #0xe8
   447ac:	add	x2, sp, #0xc8
   447b0:	mov	w3, #0x2                   	// #2
   447b4:	bl	be00 <mpfr_mul@plt>
   447b8:	add	x0, sp, #0xc8
   447bc:	add	x2, sp, #0xc8
   447c0:	mov	w3, #0x3                   	// #3
   447c4:	mov	x1, x26
   447c8:	bl	caa0 <mpfr_ui_sub@plt>
   447cc:	ldr	w8, [sp, #208]
   447d0:	tbnz	w8, #31, 4482c <mpfr_eint@@Base+0x850>
   447d4:	add	x0, sp, #0xe8
   447d8:	add	x1, sp, #0xe8
   447dc:	add	x2, sp, #0xc8
   447e0:	mov	w3, #0x2                   	// #2
   447e4:	bl	c670 <mpfr_div@plt>
   447e8:	add	x0, sp, #0xa8
   447ec:	add	x1, sp, #0xa8
   447f0:	add	x2, sp, #0xe8
   447f4:	mov	w3, #0x2                   	// #2
   447f8:	bl	c240 <mpfr_add@plt>
   447fc:	add	x0, sp, #0x88
   44800:	sub	x1, x29, #0x28
   44804:	mov	w2, wzr
   44808:	bl	c2b0 <mpfr_set_z@plt>
   4480c:	add	x0, sp, #0x88
   44810:	add	x1, sp, #0x88
   44814:	mov	x2, x25
   44818:	mov	w3, wzr
   4481c:	bl	c950 <mpfr_div_2ui@plt>
   44820:	ldr	x8, [sp, #184]
   44824:	ldr	x9, [sp, #152]
   44828:	sub	x25, x8, x9
   4482c:	ldr	w26, [x29, #8]
   44830:	ldr	x28, [sp, #8]
   44834:	ldr	x24, [sp, #48]
   44838:	ldur	x1, [x29, #-216]
   4483c:	cbz	x1, 44848 <mpfr_eint@@Base+0x86c>
   44840:	ldur	x0, [x29, #-208]
   44844:	bl	cc80 <mpfr_free_func@plt>
   44848:	sub	x0, x29, #0x28
   4484c:	bl	c210 <mpfr_mpz_clear@plt>
   44850:	sub	x0, x29, #0x38
   44854:	bl	c210 <mpfr_mpz_clear@plt>
   44858:	sub	x0, x29, #0x48
   4485c:	bl	c210 <mpfr_mpz_clear@plt>
   44860:	sub	x0, x29, #0x18
   44864:	bl	c210 <mpfr_mpz_clear@plt>
   44868:	b	44884 <mpfr_eint@@Base+0x8a8>
   4486c:	ldr	w3, [x21, #8]
   44870:	add	x0, sp, #0x88
   44874:	mov	x1, x21
   44878:	mov	w2, wzr
   4487c:	bl	c6f0 <mpfr_set4@plt>
   44880:	mov	x25, xzr
   44884:	ldr	x22, [sp, #152]
   44888:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4488c:	ldr	x1, [x0, #2688]
   44890:	add	x0, x0, #0xa80
   44894:	blr	x1
   44898:	add	x1, x20, x0
   4489c:	add	x0, sp, #0x68
   448a0:	mov	w2, wzr
   448a4:	bl	c3e0 <mpfr_cache@plt>
   448a8:	add	x0, sp, #0x88
   448ac:	add	x1, sp, #0x88
   448b0:	add	x2, sp, #0x68
   448b4:	mov	w3, wzr
   448b8:	bl	c240 <mpfr_add@plt>
   448bc:	ldr	x9, [sp, #152]
   448c0:	ldr	x10, [sp, #120]
   448c4:	add	x8, x22, x25
   448c8:	cmp	x8, #0x0
   448cc:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   448d0:	csinv	x8, x8, xzr, ge  // ge = tcont
   448d4:	cmp	x9, x25
   448d8:	csel	x22, x10, x9, eq  // eq = none
   448dc:	sub	x8, x8, x22
   448e0:	add	x8, x8, #0x2
   448e4:	add	x0, sp, #0x68
   448e8:	add	x1, sp, #0x48
   448ec:	mov	w2, wzr
   448f0:	bic	x23, x8, x8, asr #63
   448f4:	bl	c130 <mpfr_log@plt>
   448f8:	add	x0, sp, #0x88
   448fc:	add	x1, sp, #0x88
   44900:	add	x2, sp, #0x68
   44904:	mov	w3, wzr
   44908:	bl	c240 <mpfr_add@plt>
   4490c:	ldr	x9, [sp, #120]
   44910:	add	x10, x22, x23
   44914:	ldr	x8, [sp, #152]
   44918:	add	x11, x10, #0x1
   4491c:	cmp	x9, x11
   44920:	csinc	x11, x9, x10, gt
   44924:	cmp	x9, x25
   44928:	csinc	x9, x11, x10, ne  // ne = any
   4492c:	cmp	x8, x25
   44930:	ldr	x25, [sp, #64]
   44934:	sub	x9, x9, x8
   44938:	bic	x9, x9, x9, asr #63
   4493c:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   44940:	csel	x22, x25, x9, eq  // eq = none
   44944:	mov	x23, #0x4                   	// #4
   44948:	movk	x23, #0x8000, lsl #48
   4494c:	cmp	x8, x23
   44950:	b.lt	4498c <mpfr_eint@@Base+0x9b0>  // b.tstop
   44954:	ldr	x8, [sp, #136]
   44958:	ldr	x9, [x19]
   4495c:	ldr	x0, [sp, #160]
   44960:	sub	x2, x25, x22
   44964:	sub	x10, x8, #0x1
   44968:	add	x8, x8, #0x3e
   4496c:	cmp	x10, #0x0
   44970:	csel	x8, x8, x10, lt  // lt = tstop
   44974:	asr	x8, x8, #6
   44978:	add	x1, x8, #0x1
   4497c:	ldr	x8, [sp, #56]
   44980:	add	x3, x9, x8
   44984:	bl	c3d0 <mpfr_round_p@plt>
   44988:	cbnz	w0, 449ec <mpfr_eint@@Base+0xa10>
   4498c:	ldr	x22, [sp, #16]
   44990:	sub	x8, x23, x25
   44994:	sub	x8, x8, #0x105
   44998:	cmp	x22, x8
   4499c:	b.gt	449d0 <mpfr_eint@@Base+0x9f4>
   449a0:	add	x25, x25, x22
   449a4:	cmp	x25, #0x0
   449a8:	cinc	x8, x25, lt  // lt = tstop
   449ac:	add	x0, sp, #0x88
   449b0:	mov	x1, x25
   449b4:	asr	x22, x8, #1
   449b8:	bl	bf80 <mpfr_set_prec@plt>
   449bc:	add	x0, sp, #0x68
   449c0:	mov	x1, x25
   449c4:	bl	bf80 <mpfr_set_prec@plt>
   449c8:	mov	w23, #0x1f                  	// #31
   449cc:	b	442d4 <mpfr_eint@@Base+0x2f8>
   449d0:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   449d4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   449d8:	mov	w1, #0x159                 	// #345
   449dc:	add	x0, x0, #0xa37
   449e0:	add	x2, x2, #0x922
   449e4:	bl	cb90 <mpfr_assert_fail@plt>
   449e8:	b	449a0 <mpfr_eint@@Base+0x9c4>
   449ec:	ldr	w3, [sp, #144]
   449f0:	add	x1, sp, #0x88
   449f4:	mov	x0, x19
   449f8:	mov	w2, w26
   449fc:	bl	c6f0 <mpfr_set4@plt>
   44a00:	mov	w21, w0
   44a04:	add	x0, sp, #0x88
   44a08:	bl	c110 <mpfr_clear@plt>
   44a0c:	add	x0, sp, #0x68
   44a10:	bl	c110 <mpfr_clear@plt>
   44a14:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44a18:	ldr	x1, [x0, #2656]
   44a1c:	add	x0, x0, #0xa60
   44a20:	blr	x1
   44a24:	ldr	w9, [x29, #12]
   44a28:	str	w9, [x20, x0]
   44a2c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44a30:	ldr	x1, [x0, #2592]
   44a34:	add	x0, x0, #0xa20
   44a38:	blr	x1
   44a3c:	str	x28, [x20, x0]
   44a40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44a44:	ldr	x1, [x0, #2624]
   44a48:	add	x0, x0, #0xa40
   44a4c:	blr	x1
   44a50:	str	x24, [x20, x0]
   44a54:	ldr	x8, [x19, #16]
   44a58:	cmp	x8, x24
   44a5c:	b.gt	44b84 <mpfr_eint@@Base+0xba8>
   44a60:	cmp	x8, x28
   44a64:	b.lt	44b84 <mpfr_eint@@Base+0xba8>  // b.tstop
   44a68:	cbz	w21, 44a84 <mpfr_eint@@Base+0xaa8>
   44a6c:	orr	w8, w9, #0x8
   44a70:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44a74:	ldr	x1, [x0, #2656]
   44a78:	add	x0, x0, #0xa60
   44a7c:	blr	x1
   44a80:	str	w8, [x20, x0]
   44a84:	mov	w0, w21
   44a88:	add	sp, sp, #0x1e0
   44a8c:	ldp	x20, x19, [sp, #112]
   44a90:	ldp	x22, x21, [sp, #96]
   44a94:	ldp	x24, x23, [sp, #80]
   44a98:	ldp	x26, x25, [sp, #64]
   44a9c:	ldp	x28, x27, [sp, #48]
   44aa0:	ldp	x29, x30, [sp, #32]
   44aa4:	ldp	d9, d8, [sp, #16]
   44aa8:	ldr	d10, [sp], #128
   44aac:	ret
   44ab0:	add	x0, sp, #0x88
   44ab4:	bl	c110 <mpfr_clear@plt>
   44ab8:	add	x0, sp, #0x68
   44abc:	bl	c110 <mpfr_clear@plt>
   44ac0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44ac4:	ldr	x1, [x0, #2656]
   44ac8:	add	x0, x0, #0xa60
   44acc:	blr	x1
   44ad0:	ldr	w8, [x29, #12]
   44ad4:	str	w8, [x20, x0]
   44ad8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44adc:	ldr	x1, [x0, #2592]
   44ae0:	add	x0, x0, #0xa20
   44ae4:	blr	x1
   44ae8:	str	x28, [x20, x0]
   44aec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44af0:	ldr	x1, [x0, #2624]
   44af4:	add	x0, x0, #0xa40
   44af8:	blr	x1
   44afc:	str	x24, [x20, x0]
   44b00:	mov	w2, #0xffffffff            	// #-1
   44b04:	mov	x0, x19
   44b08:	mov	w1, w26
   44b0c:	bl	c420 <mpfr_underflow@plt>
   44b10:	b	44198 <mpfr_eint@@Base+0x1bc>
   44b14:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   44b18:	cmp	x8, x9
   44b1c:	b.eq	44b98 <mpfr_eint@@Base+0xbbc>  // b.none
   44b20:	mov	x9, #0x2                   	// #2
   44b24:	movk	x9, #0x8000, lsl #48
   44b28:	cmp	x8, x9
   44b2c:	b.ne	44bb4 <mpfr_eint@@Base+0xbd8>  // b.any
   44b30:	sub	x8, x10, #0x2
   44b34:	str	x8, [x19, #16]
   44b38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44b3c:	ldr	x1, [x0, #2656]
   44b40:	add	x0, x0, #0xa60
   44b44:	blr	x1
   44b48:	mrs	x8, tpidr_el0
   44b4c:	ldr	w9, [x8, x0]
   44b50:	mov	w21, wzr
   44b54:	orr	w9, w9, #0x4
   44b58:	b	44be4 <mpfr_eint@@Base+0xc08>
   44b5c:	mov	x23, xzr
   44b60:	b	440b8 <mpfr_eint@@Base+0xdc>
   44b64:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   44b68:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   44b6c:	add	x0, x0, #0xa37
   44b70:	add	x2, x2, #0xe01
   44b74:	mov	w1, #0xfa                  	// #250
   44b78:	bl	cb90 <mpfr_assert_fail@plt>
   44b7c:	ldr	x8, [x19]
   44b80:	b	440a4 <mpfr_eint@@Base+0xc8>
   44b84:	mov	x0, x19
   44b88:	mov	w1, w21
   44b8c:	mov	w2, w26
   44b90:	bl	cb80 <mpfr_check_range@plt>
   44b94:	b	44198 <mpfr_eint@@Base+0x1bc>
   44b98:	ldr	w8, [x21, #8]
   44b9c:	cmp	w8, #0x1
   44ba0:	b.lt	44bec <mpfr_eint@@Base+0xc10>  // b.tstop
   44ba4:	mov	w21, wzr
   44ba8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   44bac:	mov	w9, #0x1                   	// #1
   44bb0:	b	44bf8 <mpfr_eint@@Base+0xc1c>
   44bb4:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   44bb8:	mov	w9, #0xffffffff            	// #-1
   44bbc:	str	x8, [x19, #16]
   44bc0:	str	w9, [x19, #8]
   44bc4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44bc8:	ldr	x1, [x0, #2656]
   44bcc:	add	x0, x0, #0xa60
   44bd0:	blr	x1
   44bd4:	mrs	x8, tpidr_el0
   44bd8:	ldr	w9, [x8, x0]
   44bdc:	mov	w21, wzr
   44be0:	orr	w9, w9, #0x20
   44be4:	str	w9, [x8, x0]
   44be8:	b	44a84 <mpfr_eint@@Base+0xaa8>
   44bec:	mov	w21, wzr
   44bf0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   44bf4:	mov	w9, #0xffffffff            	// #-1
   44bf8:	str	x8, [x19, #16]
   44bfc:	str	w9, [x19, #8]
   44c00:	b	44a84 <mpfr_eint@@Base+0xaa8>

0000000000044c04 <mpfr_sech@@Base>:
   44c04:	sub	sp, sp, #0x90
   44c08:	stp	x29, x30, [sp, #48]
   44c0c:	stp	x28, x27, [sp, #64]
   44c10:	stp	x26, x25, [sp, #80]
   44c14:	stp	x24, x23, [sp, #96]
   44c18:	stp	x22, x21, [sp, #112]
   44c1c:	stp	x20, x19, [sp, #128]
   44c20:	ldr	x9, [x1, #16]
   44c24:	mov	x8, #0x4                   	// #4
   44c28:	movk	x8, #0x8000, lsl #48
   44c2c:	mov	w19, w2
   44c30:	cmp	x9, x8
   44c34:	mov	x20, x0
   44c38:	add	x29, sp, #0x30
   44c3c:	b.lt	44f10 <mpfr_sech@@Base+0x30c>  // b.tstop
   44c40:	mov	x21, x1
   44c44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44c48:	ldr	x1, [x0, #2656]
   44c4c:	add	x0, x0, #0xa60
   44c50:	blr	x1
   44c54:	mrs	x27, tpidr_el0
   44c58:	ldr	w28, [x27, x0]
   44c5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44c60:	ldr	x1, [x0, #2592]
   44c64:	add	x0, x0, #0xa20
   44c68:	blr	x1
   44c6c:	ldr	x26, [x27, x0]
   44c70:	mov	x8, x0
   44c74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44c78:	ldr	x1, [x0, #2624]
   44c7c:	add	x0, x0, #0xa40
   44c80:	blr	x1
   44c84:	ldr	x25, [x27, x0]
   44c88:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   44c8c:	str	x10, [x27, x8]
   44c90:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   44c94:	str	x8, [x27, x0]
   44c98:	tbz	x9, #63, 44cb4 <mpfr_sech@@Base+0xb0>
   44c9c:	ldr	x8, [x20]
   44ca0:	mov	w10, #0x1                   	// #1
   44ca4:	sub	x2, x10, x9, lsl #1
   44ca8:	add	x8, x8, #0x1
   44cac:	cmp	x2, x8
   44cb0:	b.hi	44f9c <mpfr_sech@@Base+0x398>  // b.pmore
   44cb4:	ldr	x24, [x20]
   44cb8:	subs	x22, x24, #0x1
   44cbc:	b.eq	44f64 <mpfr_sech@@Base+0x360>  // b.none
   44cc0:	b.le	44f6c <mpfr_sech@@Base+0x368>
   44cc4:	clz	x8, x22
   44cc8:	mov	w9, #0x40                  	// #64
   44ccc:	sub	x8, x9, x8
   44cd0:	add	x8, x24, x8
   44cd4:	add	x22, x8, #0x3
   44cd8:	add	x0, sp, #0x10
   44cdc:	mov	x1, x22
   44ce0:	bl	cad0 <mpfr_init2@plt>
   44ce4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44ce8:	ldr	x1, [x0, #2656]
   44cec:	add	x0, x0, #0xa60
   44cf0:	blr	x1
   44cf4:	mov	x23, x0
   44cf8:	str	wzr, [x27, x0]
   44cfc:	add	x0, sp, #0x10
   44d00:	mov	w2, #0x1                   	// #1
   44d04:	mov	x1, x21
   44d08:	bl	bbb0 <mpfr_cosh@plt>
   44d0c:	ldrb	w8, [x27, x23]
   44d10:	tbnz	w8, #1, 44eb0 <mpfr_sech@@Base+0x2ac>
   44d14:	cmp	w19, #0x0
   44d18:	mov	w23, #0x40                  	// #64
   44d1c:	cinc	x24, x24, eq  // eq = none
   44d20:	add	x0, sp, #0x10
   44d24:	add	x2, sp, #0x10
   44d28:	mov	w1, #0x1                   	// #1
   44d2c:	mov	w3, wzr
   44d30:	bl	c350 <mpfr_ui_div@plt>
   44d34:	ldr	x8, [sp, #32]
   44d38:	mov	x9, #0x4                   	// #4
   44d3c:	movk	x9, #0x8000, lsl #48
   44d40:	cmp	x8, x9
   44d44:	b.lt	44d78 <mpfr_sech@@Base+0x174>  // b.tstop
   44d48:	ldr	x8, [sp, #16]
   44d4c:	ldr	x0, [sp, #40]
   44d50:	sub	x2, x22, #0x2
   44d54:	mov	x3, x24
   44d58:	sub	x9, x8, #0x1
   44d5c:	add	x8, x8, #0x3e
   44d60:	cmp	x9, #0x0
   44d64:	csel	x8, x8, x9, lt  // lt = tstop
   44d68:	asr	x8, x8, #6
   44d6c:	add	x1, x8, #0x1
   44d70:	bl	c3d0 <mpfr_round_p@plt>
   44d74:	cbnz	w0, 44e00 <mpfr_sech@@Base+0x1fc>
   44d78:	mov	x8, #0x4                   	// #4
   44d7c:	movk	x8, #0x8000, lsl #48
   44d80:	sub	x8, x8, x22
   44d84:	sub	x8, x8, #0x105
   44d88:	cmp	x23, x8
   44d8c:	b.gt	44de4 <mpfr_sech@@Base+0x1e0>
   44d90:	add	x22, x22, x23
   44d94:	cmp	x22, #0x0
   44d98:	cinc	x8, x22, lt  // lt = tstop
   44d9c:	add	x0, sp, #0x10
   44da0:	mov	x1, x22
   44da4:	asr	x23, x8, #1
   44da8:	bl	bf80 <mpfr_set_prec@plt>
   44dac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44db0:	ldr	x1, [x0, #2656]
   44db4:	add	x0, x0, #0xa60
   44db8:	blr	x1
   44dbc:	str	x0, [sp, #8]
   44dc0:	str	wzr, [x27, x0]
   44dc4:	add	x0, sp, #0x10
   44dc8:	mov	w2, #0x1                   	// #1
   44dcc:	mov	x1, x21
   44dd0:	bl	bbb0 <mpfr_cosh@plt>
   44dd4:	ldr	x8, [sp, #8]
   44dd8:	ldrb	w8, [x27, x8]
   44ddc:	tbz	w8, #1, 44d20 <mpfr_sech@@Base+0x11c>
   44de0:	b	44eb0 <mpfr_sech@@Base+0x2ac>
   44de4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   44de8:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   44dec:	mov	w1, #0x5f                  	// #95
   44df0:	add	x0, x0, #0xa27
   44df4:	add	x2, x2, #0x4df
   44df8:	bl	cb90 <mpfr_assert_fail@plt>
   44dfc:	b	44d90 <mpfr_sech@@Base+0x18c>
   44e00:	ldr	w3, [sp, #24]
   44e04:	add	x1, sp, #0x10
   44e08:	mov	x0, x20
   44e0c:	mov	w2, w19
   44e10:	bl	c6f0 <mpfr_set4@plt>
   44e14:	mov	w22, w0
   44e18:	add	x0, sp, #0x10
   44e1c:	bl	c110 <mpfr_clear@plt>
   44e20:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44e24:	ldr	x1, [x0, #2656]
   44e28:	add	x0, x0, #0xa60
   44e2c:	blr	x1
   44e30:	str	w28, [x27, x0]
   44e34:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44e38:	ldr	x1, [x0, #2592]
   44e3c:	add	x0, x0, #0xa20
   44e40:	blr	x1
   44e44:	str	x26, [x27, x0]
   44e48:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44e4c:	ldr	x1, [x0, #2624]
   44e50:	add	x0, x0, #0xa40
   44e54:	blr	x1
   44e58:	str	x25, [x27, x0]
   44e5c:	ldr	x8, [x20, #16]
   44e60:	cmp	x8, x25
   44e64:	b.gt	44f88 <mpfr_sech@@Base+0x384>
   44e68:	cmp	x8, x26
   44e6c:	b.lt	44f88 <mpfr_sech@@Base+0x384>  // b.tstop
   44e70:	cbz	w22, 44e8c <mpfr_sech@@Base+0x288>
   44e74:	orr	w8, w28, #0x8
   44e78:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44e7c:	ldr	x1, [x0, #2656]
   44e80:	add	x0, x0, #0xa60
   44e84:	blr	x1
   44e88:	str	w8, [x27, x0]
   44e8c:	mov	w0, w22
   44e90:	ldp	x20, x19, [sp, #128]
   44e94:	ldp	x22, x21, [sp, #112]
   44e98:	ldp	x24, x23, [sp, #96]
   44e9c:	ldp	x26, x25, [sp, #80]
   44ea0:	ldp	x28, x27, [sp, #64]
   44ea4:	ldp	x29, x30, [sp, #48]
   44ea8:	add	sp, sp, #0x90
   44eac:	ret
   44eb0:	ldr	w21, [sp, #24]
   44eb4:	add	x0, sp, #0x10
   44eb8:	bl	c110 <mpfr_clear@plt>
   44ebc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44ec0:	ldr	x1, [x0, #2656]
   44ec4:	add	x0, x0, #0xa60
   44ec8:	blr	x1
   44ecc:	str	w28, [x27, x0]
   44ed0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44ed4:	ldr	x1, [x0, #2592]
   44ed8:	add	x0, x0, #0xa20
   44edc:	blr	x1
   44ee0:	str	x26, [x27, x0]
   44ee4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44ee8:	ldr	x1, [x0, #2624]
   44eec:	add	x0, x0, #0xa40
   44ef0:	blr	x1
   44ef4:	cmp	w19, #0x0
   44ef8:	str	x25, [x27, x0]
   44efc:	csinc	w1, w19, wzr, ne  // ne = any
   44f00:	mov	x0, x20
   44f04:	mov	w2, w21
   44f08:	bl	c420 <mpfr_underflow@plt>
   44f0c:	b	44fec <mpfr_sech@@Base+0x3e8>
   44f10:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   44f14:	cmp	x9, x8
   44f18:	b.eq	44fc0 <mpfr_sech@@Base+0x3bc>  // b.none
   44f1c:	mov	x8, #0x2                   	// #2
   44f20:	movk	x8, #0x8000, lsl #48
   44f24:	cmp	x9, x8
   44f28:	b.ne	44fd8 <mpfr_sech@@Base+0x3d4>  // b.any
   44f2c:	mov	x8, #0x4                   	// #4
   44f30:	movk	x8, #0x8000, lsl #48
   44f34:	sub	x8, x8, #0x2
   44f38:	str	x8, [x20, #16]
   44f3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   44f40:	ldr	x1, [x0, #2656]
   44f44:	add	x0, x0, #0xa60
   44f48:	blr	x1
   44f4c:	mrs	x8, tpidr_el0
   44f50:	ldr	w9, [x8, x0]
   44f54:	mov	w22, wzr
   44f58:	orr	w9, w9, #0x4
   44f5c:	str	w9, [x8, x0]
   44f60:	b	44e8c <mpfr_sech@@Base+0x288>
   44f64:	mov	x8, xzr
   44f68:	b	44cd0 <mpfr_sech@@Base+0xcc>
   44f6c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   44f70:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   44f74:	add	x0, x0, #0xa27
   44f78:	add	x2, x2, #0x490
   44f7c:	mov	w1, #0x43                  	// #67
   44f80:	bl	cb90 <mpfr_assert_fail@plt>
   44f84:	b	44cc4 <mpfr_sech@@Base+0xc0>
   44f88:	mov	x0, x20
   44f8c:	mov	w1, w22
   44f90:	mov	w2, w19
   44f94:	bl	cb80 <mpfr_check_range@plt>
   44f98:	b	44fec <mpfr_sech@@Base+0x3e8>
   44f9c:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   44fa0:	ldr	x1, [x1, #3944]
   44fa4:	mov	x0, x20
   44fa8:	mov	w3, wzr
   44fac:	mov	w4, w19
   44fb0:	bl	c590 <mpfr_round_near_x@plt>
   44fb4:	mov	w22, w0
   44fb8:	cbnz	w0, 44e20 <mpfr_sech@@Base+0x21c>
   44fbc:	b	44cb4 <mpfr_sech@@Base+0xb0>
   44fc0:	mov	w8, #0x1                   	// #1
   44fc4:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   44fc8:	mov	w22, wzr
   44fcc:	str	w8, [x20, #8]
   44fd0:	str	x9, [x20, #16]
   44fd4:	b	44e8c <mpfr_sech@@Base+0x288>
   44fd8:	mov	w1, #0x1                   	// #1
   44fdc:	mov	x0, x20
   44fe0:	mov	x2, xzr
   44fe4:	mov	w3, w19
   44fe8:	bl	c640 <mpfr_set_ui_2exp@plt>
   44fec:	mov	w22, w0
   44ff0:	b	44e8c <mpfr_sech@@Base+0x288>

0000000000044ff4 <mpfr_csch@@Base>:
   44ff4:	sub	sp, sp, #0x90
   44ff8:	stp	x29, x30, [sp, #48]
   44ffc:	stp	x28, x27, [sp, #64]
   45000:	stp	x26, x25, [sp, #80]
   45004:	stp	x24, x23, [sp, #96]
   45008:	stp	x22, x21, [sp, #112]
   4500c:	stp	x20, x19, [sp, #128]
   45010:	ldr	x9, [x1, #16]
   45014:	mov	x10, #0x2                   	// #2
   45018:	movk	x10, #0x8000, lsl #48
   4501c:	add	x8, x10, #0x2
   45020:	mov	x21, x1
   45024:	cmp	x9, x8
   45028:	mov	x19, x0
   4502c:	add	x29, sp, #0x30
   45030:	b.lt	4534c <mpfr_csch@@Base+0x358>  // b.tstop
   45034:	mov	w20, w2
   45038:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4503c:	ldr	x1, [x0, #2656]
   45040:	add	x0, x0, #0xa60
   45044:	blr	x1
   45048:	mrs	x27, tpidr_el0
   4504c:	ldr	w28, [x27, x0]
   45050:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45054:	ldr	x1, [x0, #2592]
   45058:	add	x0, x0, #0xa20
   4505c:	blr	x1
   45060:	ldr	x26, [x27, x0]
   45064:	mov	x8, x0
   45068:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4506c:	ldr	x1, [x0, #2624]
   45070:	add	x0, x0, #0xa40
   45074:	blr	x1
   45078:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4507c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   45080:	ldr	x25, [x27, x0]
   45084:	str	x10, [x27, x8]
   45088:	str	x11, [x27, x0]
   4508c:	ldr	x8, [x21]
   45090:	ldr	x24, [x19]
   45094:	cmp	x8, x24
   45098:	csel	x8, x8, x24, gt
   4509c:	neg	x8, x8, lsl #1
   450a0:	cmp	x9, x8
   450a4:	b.le	451f4 <mpfr_csch@@Base+0x200>
   450a8:	subs	x22, x24, #0x1
   450ac:	b.eq	45418 <mpfr_csch@@Base+0x424>  // b.none
   450b0:	b.le	45420 <mpfr_csch@@Base+0x42c>
   450b4:	clz	x8, x22
   450b8:	mov	w9, #0x40                  	// #64
   450bc:	sub	x8, x9, x8
   450c0:	add	x8, x24, x8
   450c4:	add	x22, x8, #0x3
   450c8:	add	x0, sp, #0x10
   450cc:	mov	x1, x22
   450d0:	bl	cad0 <mpfr_init2@plt>
   450d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   450d8:	ldr	x1, [x0, #2656]
   450dc:	add	x0, x0, #0xa60
   450e0:	blr	x1
   450e4:	mov	x23, x0
   450e8:	str	wzr, [x27, x0]
   450ec:	add	x0, sp, #0x10
   450f0:	mov	w2, #0x1                   	// #1
   450f4:	mov	x1, x21
   450f8:	bl	c380 <mpfr_sinh@plt>
   450fc:	ldrb	w8, [x27, x23]
   45100:	tbnz	w8, #1, 45390 <mpfr_csch@@Base+0x39c>
   45104:	cmp	w20, #0x0
   45108:	mov	w23, #0x40                  	// #64
   4510c:	cinc	x24, x24, eq  // eq = none
   45110:	add	x0, sp, #0x10
   45114:	add	x2, sp, #0x10
   45118:	mov	w1, #0x1                   	// #1
   4511c:	mov	w3, wzr
   45120:	bl	c350 <mpfr_ui_div@plt>
   45124:	ldr	x8, [sp, #32]
   45128:	mov	x9, #0x2                   	// #2
   4512c:	movk	x9, #0x8000, lsl #48
   45130:	add	x9, x9, #0x2
   45134:	cmp	x8, x9
   45138:	b.lt	4516c <mpfr_csch@@Base+0x178>  // b.tstop
   4513c:	ldr	x8, [sp, #16]
   45140:	ldr	x0, [sp, #40]
   45144:	sub	x2, x22, #0x2
   45148:	mov	x3, x24
   4514c:	sub	x9, x8, #0x1
   45150:	add	x8, x8, #0x3e
   45154:	cmp	x9, #0x0
   45158:	csel	x8, x8, x9, lt  // lt = tstop
   4515c:	asr	x8, x8, #6
   45160:	add	x1, x8, #0x1
   45164:	bl	c3d0 <mpfr_round_p@plt>
   45168:	cbnz	w0, 45218 <mpfr_csch@@Base+0x224>
   4516c:	mov	x8, #0x2                   	// #2
   45170:	movk	x8, #0x8000, lsl #48
   45174:	sub	x8, x8, x22
   45178:	sub	x8, x8, #0x103
   4517c:	cmp	x23, x8
   45180:	b.gt	451d8 <mpfr_csch@@Base+0x1e4>
   45184:	add	x22, x22, x23
   45188:	cmp	x22, #0x0
   4518c:	cinc	x8, x22, lt  // lt = tstop
   45190:	add	x0, sp, #0x10
   45194:	mov	x1, x22
   45198:	asr	x23, x8, #1
   4519c:	bl	bf80 <mpfr_set_prec@plt>
   451a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   451a4:	ldr	x1, [x0, #2656]
   451a8:	add	x0, x0, #0xa60
   451ac:	blr	x1
   451b0:	str	x0, [sp, #8]
   451b4:	str	wzr, [x27, x0]
   451b8:	add	x0, sp, #0x10
   451bc:	mov	w2, #0x1                   	// #1
   451c0:	mov	x1, x21
   451c4:	bl	c380 <mpfr_sinh@plt>
   451c8:	ldr	x8, [sp, #8]
   451cc:	ldrb	w8, [x27, x8]
   451d0:	tbz	w8, #1, 45110 <mpfr_csch@@Base+0x11c>
   451d4:	b	45390 <mpfr_csch@@Base+0x39c>
   451d8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   451dc:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   451e0:	mov	w1, #0x5f                  	// #95
   451e4:	add	x0, x0, #0xa27
   451e8:	add	x2, x2, #0x4df
   451ec:	bl	cb90 <mpfr_assert_fail@plt>
   451f0:	b	45184 <mpfr_csch@@Base+0x190>
   451f4:	ldr	w22, [x21, #8]
   451f8:	mov	w1, #0x1                   	// #1
   451fc:	mov	x0, x19
   45200:	mov	x2, x21
   45204:	mov	w3, w20
   45208:	bl	c350 <mpfr_ui_div@plt>
   4520c:	cbz	w0, 4523c <mpfr_csch@@Base+0x248>
   45210:	mov	w21, w0
   45214:	b	4527c <mpfr_csch@@Base+0x288>
   45218:	ldr	w3, [sp, #24]
   4521c:	add	x1, sp, #0x10
   45220:	mov	x0, x19
   45224:	mov	w2, w20
   45228:	bl	c6f0 <mpfr_set4@plt>
   4522c:	mov	w21, w0
   45230:	add	x0, sp, #0x10
   45234:	bl	c110 <mpfr_clear@plt>
   45238:	b	45294 <mpfr_csch@@Base+0x2a0>
   4523c:	cmp	w22, #0x0
   45240:	mov	w8, #0x2                   	// #2
   45244:	cinc	w8, w8, le
   45248:	cmp	w20, #0x4
   4524c:	csel	w20, w8, w20, eq  // eq = none
   45250:	cmp	w20, #0x2
   45254:	b.ne	45264 <mpfr_csch@@Base+0x270>  // b.any
   45258:	tbnz	w22, #31, 45270 <mpfr_csch@@Base+0x27c>
   4525c:	mov	w20, #0x2                   	// #2
   45260:	b	45278 <mpfr_csch@@Base+0x284>
   45264:	tbz	w22, #31, 45324 <mpfr_csch@@Base+0x330>
   45268:	cmp	w20, #0x1
   4526c:	b.ne	45324 <mpfr_csch@@Base+0x330>  // b.any
   45270:	mov	x0, x19
   45274:	bl	c1c0 <mpfr_nextabove@plt>
   45278:	mov	w21, #0x1                   	// #1
   4527c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45280:	ldr	x1, [x0, #2656]
   45284:	add	x0, x0, #0xa60
   45288:	blr	x1
   4528c:	ldr	w8, [x27, x0]
   45290:	orr	w28, w8, w28
   45294:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45298:	ldr	x1, [x0, #2656]
   4529c:	add	x0, x0, #0xa60
   452a0:	blr	x1
   452a4:	str	w28, [x27, x0]
   452a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   452ac:	ldr	x1, [x0, #2592]
   452b0:	add	x0, x0, #0xa20
   452b4:	blr	x1
   452b8:	str	x26, [x27, x0]
   452bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   452c0:	ldr	x1, [x0, #2624]
   452c4:	add	x0, x0, #0xa40
   452c8:	blr	x1
   452cc:	str	x25, [x27, x0]
   452d0:	ldr	x8, [x19, #16]
   452d4:	cmp	x8, x25
   452d8:	b.gt	4537c <mpfr_csch@@Base+0x388>
   452dc:	cmp	x8, x26
   452e0:	b.lt	4537c <mpfr_csch@@Base+0x388>  // b.tstop
   452e4:	cbz	w21, 45300 <mpfr_csch@@Base+0x30c>
   452e8:	orr	w8, w28, #0x8
   452ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   452f0:	ldr	x1, [x0, #2656]
   452f4:	add	x0, x0, #0xa60
   452f8:	blr	x1
   452fc:	str	w8, [x27, x0]
   45300:	mov	w0, w21
   45304:	ldp	x20, x19, [sp, #128]
   45308:	ldp	x22, x21, [sp, #112]
   4530c:	ldp	x24, x23, [sp, #96]
   45310:	ldp	x26, x25, [sp, #80]
   45314:	ldp	x28, x27, [sp, #64]
   45318:	ldp	x29, x30, [sp, #48]
   4531c:	add	sp, sp, #0x90
   45320:	ret
   45324:	orr	w8, w20, #0x2
   45328:	cmp	w8, #0x3
   4532c:	csinv	w21, w22, wzr, ne  // ne = any
   45330:	b.ne	4527c <mpfr_csch@@Base+0x288>  // b.any
   45334:	cmp	w22, #0x1
   45338:	b.lt	4527c <mpfr_csch@@Base+0x288>  // b.tstop
   4533c:	mov	x0, x19
   45340:	bl	be80 <mpfr_nextbelow@plt>
   45344:	mov	w21, #0xffffffff            	// #-1
   45348:	b	4527c <mpfr_csch@@Base+0x288>
   4534c:	cmp	x9, x10
   45350:	b.ne	453f4 <mpfr_csch@@Base+0x400>  // b.any
   45354:	str	x10, [x19, #16]
   45358:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4535c:	ldr	x1, [x0, #2656]
   45360:	add	x0, x0, #0xa60
   45364:	blr	x1
   45368:	mrs	x8, tpidr_el0
   4536c:	ldr	w9, [x8, x0]
   45370:	mov	w21, wzr
   45374:	orr	w9, w9, #0x4
   45378:	b	45460 <mpfr_csch@@Base+0x46c>
   4537c:	mov	x0, x19
   45380:	mov	w1, w21
   45384:	mov	w2, w20
   45388:	bl	cb80 <mpfr_check_range@plt>
   4538c:	b	453ec <mpfr_csch@@Base+0x3f8>
   45390:	ldr	w21, [sp, #24]
   45394:	add	x0, sp, #0x10
   45398:	bl	c110 <mpfr_clear@plt>
   4539c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   453a0:	ldr	x1, [x0, #2656]
   453a4:	add	x0, x0, #0xa60
   453a8:	blr	x1
   453ac:	str	w28, [x27, x0]
   453b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   453b4:	ldr	x1, [x0, #2592]
   453b8:	add	x0, x0, #0xa20
   453bc:	blr	x1
   453c0:	str	x26, [x27, x0]
   453c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   453c8:	ldr	x1, [x0, #2624]
   453cc:	add	x0, x0, #0xa40
   453d0:	blr	x1
   453d4:	cmp	w20, #0x0
   453d8:	str	x25, [x27, x0]
   453dc:	csinc	w1, w20, wzr, ne  // ne = any
   453e0:	mov	x0, x19
   453e4:	mov	w2, w21
   453e8:	bl	c420 <mpfr_underflow@plt>
   453ec:	mov	w21, w0
   453f0:	b	45300 <mpfr_csch@@Base+0x30c>
   453f4:	ldr	w10, [x21, #8]
   453f8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   453fc:	cmp	x9, x8
   45400:	str	w10, [x19, #8]
   45404:	b.ne	4543c <mpfr_csch@@Base+0x448>  // b.any
   45408:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4540c:	mov	w21, wzr
   45410:	str	x8, [x19, #16]
   45414:	b	45300 <mpfr_csch@@Base+0x30c>
   45418:	mov	x8, xzr
   4541c:	b	450c0 <mpfr_csch@@Base+0xcc>
   45420:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   45424:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   45428:	add	x0, x0, #0xa27
   4542c:	add	x2, x2, #0x490
   45430:	mov	w1, #0x43                  	// #67
   45434:	bl	cb90 <mpfr_assert_fail@plt>
   45438:	b	450b4 <mpfr_csch@@Base+0xc0>
   4543c:	str	x8, [x19, #16]
   45440:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45444:	ldr	x1, [x0, #2656]
   45448:	add	x0, x0, #0xa60
   4544c:	blr	x1
   45450:	mrs	x8, tpidr_el0
   45454:	ldr	w9, [x8, x0]
   45458:	mov	w21, wzr
   4545c:	orr	w9, w9, #0x20
   45460:	str	w9, [x8, x0]
   45464:	b	45300 <mpfr_csch@@Base+0x30c>

0000000000045468 <mpfr_coth@@Base>:
   45468:	sub	sp, sp, #0x90
   4546c:	stp	x29, x30, [sp, #48]
   45470:	stp	x28, x27, [sp, #64]
   45474:	stp	x26, x25, [sp, #80]
   45478:	stp	x24, x23, [sp, #96]
   4547c:	stp	x22, x21, [sp, #112]
   45480:	stp	x20, x19, [sp, #128]
   45484:	ldr	x9, [x1, #16]
   45488:	mov	x10, #0x2                   	// #2
   4548c:	movk	x10, #0x8000, lsl #48
   45490:	add	x8, x10, #0x2
   45494:	mov	w20, w2
   45498:	mov	x21, x1
   4549c:	cmp	x9, x8
   454a0:	mov	x19, x0
   454a4:	add	x29, sp, #0x30
   454a8:	b.lt	45748 <mpfr_coth@@Base+0x2e0>  // b.tstop
   454ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   454b0:	ldr	x1, [x0, #2656]
   454b4:	add	x0, x0, #0xa60
   454b8:	blr	x1
   454bc:	mrs	x27, tpidr_el0
   454c0:	ldr	w28, [x27, x0]
   454c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   454c8:	ldr	x1, [x0, #2592]
   454cc:	add	x0, x0, #0xa20
   454d0:	blr	x1
   454d4:	ldr	x26, [x27, x0]
   454d8:	mov	x8, x0
   454dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   454e0:	ldr	x1, [x0, #2624]
   454e4:	add	x0, x0, #0xa40
   454e8:	blr	x1
   454ec:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   454f0:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   454f4:	ldr	x24, [x27, x0]
   454f8:	str	x10, [x27, x8]
   454fc:	str	x11, [x27, x0]
   45500:	ldr	x8, [x21]
   45504:	ldr	x25, [x19]
   45508:	cmp	x8, x25
   4550c:	csel	x8, x8, x25, gt
   45510:	neg	x8, x8, lsl #1
   45514:	cmp	x9, x8
   45518:	b.ge	45558 <mpfr_coth@@Base+0xf0>  // b.tcont
   4551c:	ldr	w22, [x21, #8]
   45520:	mov	w1, #0x1                   	// #1
   45524:	mov	x0, x19
   45528:	mov	x2, x21
   4552c:	mov	w3, w20
   45530:	bl	c350 <mpfr_ui_div@plt>
   45534:	cbz	w0, 456e8 <mpfr_coth@@Base+0x280>
   45538:	mov	w21, w0
   4553c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45540:	ldr	x1, [x0, #2656]
   45544:	add	x0, x0, #0xa60
   45548:	blr	x1
   4554c:	ldr	w8, [x27, x0]
   45550:	orr	w28, w8, w28
   45554:	b	45890 <mpfr_coth@@Base+0x428>
   45558:	subs	x22, x25, #0x1
   4555c:	b.eq	45808 <mpfr_coth@@Base+0x3a0>  // b.none
   45560:	b.le	45810 <mpfr_coth@@Base+0x3a8>
   45564:	clz	x8, x22
   45568:	mov	w9, #0x40                  	// #64
   4556c:	sub	x8, x9, x8
   45570:	add	x8, x25, x8
   45574:	add	x22, x8, #0x3
   45578:	add	x0, sp, #0x10
   4557c:	mov	x1, x22
   45580:	bl	cad0 <mpfr_init2@plt>
   45584:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45588:	ldr	x1, [x0, #2656]
   4558c:	add	x0, x0, #0xa60
   45590:	blr	x1
   45594:	mov	x23, x0
   45598:	str	wzr, [x27, x0]
   4559c:	add	x0, sp, #0x10
   455a0:	mov	w2, #0x1                   	// #1
   455a4:	mov	x1, x21
   455a8:	bl	bbc0 <mpfr_tanh@plt>
   455ac:	ldrb	w8, [x27, x23]
   455b0:	tbnz	w8, #1, 45778 <mpfr_coth@@Base+0x310>
   455b4:	cmp	w20, #0x0
   455b8:	neg	x8, x25
   455bc:	mov	w23, #0x40                  	// #64
   455c0:	cinc	x25, x25, eq  // eq = none
   455c4:	str	x8, [sp, #8]
   455c8:	add	x0, sp, #0x10
   455cc:	add	x2, sp, #0x10
   455d0:	mov	w1, #0x1                   	// #1
   455d4:	mov	w3, wzr
   455d8:	bl	c350 <mpfr_ui_div@plt>
   455dc:	ldr	x8, [sp, #32]
   455e0:	mov	x9, #0x2                   	// #2
   455e4:	movk	x9, #0x8000, lsl #48
   455e8:	add	x9, x9, #0x2
   455ec:	cmp	x8, x9
   455f0:	b.lt	45660 <mpfr_coth@@Base+0x1f8>  // b.tstop
   455f4:	ldr	x8, [sp, #16]
   455f8:	ldr	x0, [sp, #40]
   455fc:	sub	x2, x22, #0x2
   45600:	mov	x3, x25
   45604:	sub	x9, x8, #0x1
   45608:	add	x8, x8, #0x3e
   4560c:	cmp	x9, #0x0
   45610:	csel	x8, x8, x9, lt  // lt = tstop
   45614:	asr	x8, x8, #6
   45618:	add	x1, x8, #0x1
   4561c:	bl	c3d0 <mpfr_round_p@plt>
   45620:	cbnz	w0, 45870 <mpfr_coth@@Base+0x408>
   45624:	ldr	x8, [sp, #32]
   45628:	cmp	x8, #0x1
   4562c:	b.ne	45660 <mpfr_coth@@Base+0x1f8>  // b.any
   45630:	ldrsw	x2, [sp, #24]
   45634:	add	x0, sp, #0x10
   45638:	add	x1, sp, #0x10
   4563c:	mov	w3, wzr
   45640:	bl	c100 <mpfr_sub_si@plt>
   45644:	ldr	x8, [sp, #32]
   45648:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4564c:	cmp	x8, x9
   45650:	b.eq	4585c <mpfr_coth@@Base+0x3f4>  // b.none
   45654:	ldr	x9, [sp, #8]
   45658:	cmp	x8, x9
   4565c:	b.le	4585c <mpfr_coth@@Base+0x3f4>
   45660:	mov	x8, #0x2                   	// #2
   45664:	movk	x8, #0x8000, lsl #48
   45668:	sub	x8, x8, x22
   4566c:	sub	x8, x8, #0x103
   45670:	cmp	x23, x8
   45674:	b.gt	456cc <mpfr_coth@@Base+0x264>
   45678:	add	x22, x22, x23
   4567c:	cmp	x22, #0x0
   45680:	cinc	x8, x22, lt  // lt = tstop
   45684:	add	x0, sp, #0x10
   45688:	mov	x1, x22
   4568c:	asr	x23, x8, #1
   45690:	bl	bf80 <mpfr_set_prec@plt>
   45694:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45698:	ldr	x1, [x0, #2656]
   4569c:	add	x0, x0, #0xa60
   456a0:	blr	x1
   456a4:	str	x0, [sp]
   456a8:	str	wzr, [x27, x0]
   456ac:	add	x0, sp, #0x10
   456b0:	mov	w2, #0x1                   	// #1
   456b4:	mov	x1, x21
   456b8:	bl	bbc0 <mpfr_tanh@plt>
   456bc:	ldr	x8, [sp]
   456c0:	ldrb	w8, [x27, x8]
   456c4:	tbz	w8, #1, 455c8 <mpfr_coth@@Base+0x160>
   456c8:	b	45778 <mpfr_coth@@Base+0x310>
   456cc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   456d0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   456d4:	mov	w1, #0x5f                  	// #95
   456d8:	add	x0, x0, #0xa27
   456dc:	add	x2, x2, #0x4df
   456e0:	bl	cb90 <mpfr_assert_fail@plt>
   456e4:	b	45678 <mpfr_coth@@Base+0x210>
   456e8:	cmp	w22, #0x0
   456ec:	mov	w8, #0x2                   	// #2
   456f0:	cinc	w8, w8, le
   456f4:	cmp	w20, #0x4
   456f8:	csel	w20, w8, w20, eq  // eq = none
   456fc:	cmp	w20, #0x3
   45700:	b.eq	45728 <mpfr_coth@@Base+0x2c0>  // b.none
   45704:	cmp	w20, #0x2
   45708:	b.ne	45740 <mpfr_coth@@Base+0x2d8>  // b.any
   4570c:	cmp	w22, #0x1
   45710:	b.lt	4571c <mpfr_coth@@Base+0x2b4>  // b.tstop
   45714:	mov	x0, x19
   45718:	bl	c1c0 <mpfr_nextabove@plt>
   4571c:	mov	w20, #0x2                   	// #2
   45720:	mov	w21, #0x1                   	// #1
   45724:	b	4553c <mpfr_coth@@Base+0xd4>
   45728:	tbz	w22, #31, 45734 <mpfr_coth@@Base+0x2cc>
   4572c:	mov	x0, x19
   45730:	bl	be80 <mpfr_nextbelow@plt>
   45734:	mov	w20, #0x3                   	// #3
   45738:	mov	w21, #0xffffffff            	// #-1
   4573c:	b	4553c <mpfr_coth@@Base+0xd4>
   45740:	neg	w21, w22
   45744:	b	4553c <mpfr_coth@@Base+0xd4>
   45748:	cmp	x9, x10
   4574c:	b.ne	457d8 <mpfr_coth@@Base+0x370>  // b.any
   45750:	str	x10, [x19, #16]
   45754:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45758:	ldr	x1, [x0, #2656]
   4575c:	add	x0, x0, #0xa60
   45760:	blr	x1
   45764:	mrs	x8, tpidr_el0
   45768:	ldr	w9, [x8, x0]
   4576c:	mov	w21, wzr
   45770:	orr	w9, w9, #0x4
   45774:	b	45854 <mpfr_coth@@Base+0x3ec>
   45778:	ldr	w21, [sp, #24]
   4577c:	add	x0, sp, #0x10
   45780:	bl	c110 <mpfr_clear@plt>
   45784:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45788:	ldr	x1, [x0, #2656]
   4578c:	add	x0, x0, #0xa60
   45790:	blr	x1
   45794:	str	w28, [x27, x0]
   45798:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4579c:	ldr	x1, [x0, #2592]
   457a0:	add	x0, x0, #0xa20
   457a4:	blr	x1
   457a8:	str	x26, [x27, x0]
   457ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   457b0:	ldr	x1, [x0, #2624]
   457b4:	add	x0, x0, #0xa40
   457b8:	blr	x1
   457bc:	cmp	w20, #0x0
   457c0:	str	x24, [x27, x0]
   457c4:	csinc	w1, w20, wzr, ne  // ne = any
   457c8:	mov	x0, x19
   457cc:	mov	w2, w21
   457d0:	bl	c420 <mpfr_underflow@plt>
   457d4:	b	45930 <mpfr_coth@@Base+0x4c8>
   457d8:	ldr	w8, [x21, #8]
   457dc:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   457e0:	cmp	x9, x10
   457e4:	b.ne	4582c <mpfr_coth@@Base+0x3c4>  // b.any
   457e8:	cmp	w8, #0x1
   457ec:	mov	x8, #0xffffffffffffffff    	// #-1
   457f0:	cneg	x1, x8, ge  // ge = tcont
   457f4:	mov	x0, x19
   457f8:	mov	x2, xzr
   457fc:	mov	w3, w20
   45800:	bl	bb40 <mpfr_set_si_2exp@plt>
   45804:	b	45930 <mpfr_coth@@Base+0x4c8>
   45808:	mov	x8, xzr
   4580c:	b	45570 <mpfr_coth@@Base+0x108>
   45810:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   45814:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   45818:	add	x0, x0, #0xa27
   4581c:	add	x2, x2, #0x490
   45820:	mov	w1, #0x43                  	// #67
   45824:	bl	cb90 <mpfr_assert_fail@plt>
   45828:	b	45564 <mpfr_coth@@Base+0xfc>
   4582c:	str	w8, [x19, #8]
   45830:	str	x10, [x19, #16]
   45834:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45838:	ldr	x1, [x0, #2656]
   4583c:	add	x0, x0, #0xa60
   45840:	blr	x1
   45844:	mrs	x8, tpidr_el0
   45848:	ldr	w9, [x8, x0]
   4584c:	mov	w21, wzr
   45850:	orr	w9, w9, #0x20
   45854:	str	w9, [x8, x0]
   45858:	b	458fc <mpfr_coth@@Base+0x494>
   4585c:	ldrsw	x2, [sp, #24]
   45860:	add	x0, sp, #0x10
   45864:	add	x1, sp, #0x10
   45868:	mov	w3, wzr
   4586c:	bl	c840 <mpfr_add_si@plt>
   45870:	ldr	w3, [sp, #24]
   45874:	add	x1, sp, #0x10
   45878:	mov	x0, x19
   4587c:	mov	w2, w20
   45880:	bl	c6f0 <mpfr_set4@plt>
   45884:	mov	w21, w0
   45888:	add	x0, sp, #0x10
   4588c:	bl	c110 <mpfr_clear@plt>
   45890:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45894:	ldr	x1, [x0, #2656]
   45898:	add	x0, x0, #0xa60
   4589c:	blr	x1
   458a0:	str	w28, [x27, x0]
   458a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   458a8:	ldr	x1, [x0, #2592]
   458ac:	add	x0, x0, #0xa20
   458b0:	blr	x1
   458b4:	str	x26, [x27, x0]
   458b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   458bc:	ldr	x1, [x0, #2624]
   458c0:	add	x0, x0, #0xa40
   458c4:	blr	x1
   458c8:	str	x24, [x27, x0]
   458cc:	ldr	x8, [x19, #16]
   458d0:	cmp	x8, x24
   458d4:	b.gt	45920 <mpfr_coth@@Base+0x4b8>
   458d8:	cmp	x8, x26
   458dc:	b.lt	45920 <mpfr_coth@@Base+0x4b8>  // b.tstop
   458e0:	cbz	w21, 458fc <mpfr_coth@@Base+0x494>
   458e4:	orr	w8, w28, #0x8
   458e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   458ec:	ldr	x1, [x0, #2656]
   458f0:	add	x0, x0, #0xa60
   458f4:	blr	x1
   458f8:	str	w8, [x27, x0]
   458fc:	mov	w0, w21
   45900:	ldp	x20, x19, [sp, #128]
   45904:	ldp	x22, x21, [sp, #112]
   45908:	ldp	x24, x23, [sp, #96]
   4590c:	ldp	x26, x25, [sp, #80]
   45910:	ldp	x28, x27, [sp, #64]
   45914:	ldp	x29, x30, [sp, #48]
   45918:	add	sp, sp, #0x90
   4591c:	ret
   45920:	mov	x0, x19
   45924:	mov	w1, w21
   45928:	mov	w2, w20
   4592c:	bl	cb80 <mpfr_check_range@plt>
   45930:	mov	w21, w0
   45934:	b	458fc <mpfr_coth@@Base+0x494>

0000000000045938 <mpfr_round_near_x@@Base>:
   45938:	stp	x29, x30, [sp, #-96]!
   4593c:	str	x27, [sp, #16]
   45940:	stp	x26, x25, [sp, #32]
   45944:	stp	x24, x23, [sp, #48]
   45948:	stp	x22, x21, [sp, #64]
   4594c:	stp	x20, x19, [sp, #80]
   45950:	mov	x29, sp
   45954:	mov	w22, w3
   45958:	mov	x24, x1
   4595c:	mov	x19, x0
   45960:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45964:	ldr	x1, [x0, #2656]
   45968:	add	x0, x0, #0xa60
   4596c:	blr	x1
   45970:	ldr	x9, [x19]
   45974:	cmp	w4, #0x5
   45978:	csinc	w21, w4, wzr, ne  // ne = any
   4597c:	add	x8, x9, #0x1
   45980:	cmp	x8, x2
   45984:	b.cs	45ab0 <mpfr_round_near_x@@Base+0x178>  // b.hs, b.nlast
   45988:	ldr	x8, [x24]
   4598c:	mrs	x25, tpidr_el0
   45990:	ldr	w26, [x25, x0]
   45994:	cmp	x8, x2
   45998:	b.cc	459d0 <mpfr_round_near_x@@Base+0x98>  // b.lo, b.ul, b.last
   4599c:	sub	x10, x8, #0x1
   459a0:	ldr	x0, [x24, #24]
   459a4:	add	x8, x8, #0x3e
   459a8:	cmp	x10, #0x0
   459ac:	csel	x8, x8, x10, lt  // lt = tstop
   459b0:	cmp	w21, #0x0
   459b4:	asr	x8, x8, #6
   459b8:	add	x1, x8, #0x1
   459bc:	cinc	x3, x9, eq  // eq = none
   459c0:	bl	c3d0 <mpfr_round_p@plt>
   459c4:	cbz	w0, 45ab0 <mpfr_round_near_x@@Base+0x178>
   459c8:	ldr	x8, [x24]
   459cc:	ldr	x9, [x19]
   459d0:	ldr	x10, [x24, #16]
   459d4:	sub	x11, x8, #0x1
   459d8:	add	x12, x8, #0x3e
   459dc:	sub	x14, x9, #0x1
   459e0:	cmp	x11, #0x0
   459e4:	ldr	w20, [x24, #8]
   459e8:	ldr	x23, [x19, #24]
   459ec:	csel	x11, x12, x11, lt  // lt = tstop
   459f0:	add	x12, x9, #0x3e
   459f4:	cmp	x14, #0x0
   459f8:	asr	x13, x11, #6
   459fc:	csel	x11, x12, x14, lt  // lt = tstop
   45a00:	str	x10, [x19, #16]
   45a04:	asr	x10, x11, #6
   45a08:	add	x17, x13, #0x1
   45a0c:	cmp	x9, x8
   45a10:	add	x12, x10, #0x1
   45a14:	str	w20, [x19, #8]
   45a18:	b.ge	45c58 <mpfr_round_near_x@@Base+0x320>  // b.tcont
   45a1c:	ldr	x14, [x24, #24]
   45a20:	neg	w8, w9
   45a24:	ands	x15, x8, #0x3f
   45a28:	mvn	x11, x10
   45a2c:	add	x8, x14, x17, lsl #3
   45a30:	add	x1, x8, x11, lsl #3
   45a34:	b.eq	45d10 <mpfr_round_near_x@@Base+0x3d8>  // b.none
   45a38:	ldr	x16, [x1]
   45a3c:	sub	x15, x15, #0x1
   45a40:	mov	w18, #0x1                   	// #1
   45a44:	lsl	x18, x18, x15
   45a48:	sub	x0, x18, #0x1
   45a4c:	and	x15, x16, x18
   45a50:	and	x16, x16, x0
   45a54:	cbz	w21, 45a5c <mpfr_round_near_x@@Base+0x124>
   45a58:	cbnz	x15, 45a84 <mpfr_round_near_x@@Base+0x14c>
   45a5c:	cbnz	x16, 45a84 <mpfr_round_near_x@@Base+0x14c>
   45a60:	sub	x17, x17, x12
   45a64:	cbz	x17, 45a84 <mpfr_round_near_x@@Base+0x14c>
   45a68:	mvn	x16, x10
   45a6c:	add	x17, x16, x13
   45a70:	ldr	x16, [x14, x17, lsl #3]
   45a74:	subs	x17, x17, #0x1
   45a78:	cset	w0, cs  // cs = hs, nlast
   45a7c:	cbnz	x16, 45a84 <mpfr_round_near_x@@Base+0x14c>
   45a80:	tbnz	w0, #0, 45a70 <mpfr_round_near_x@@Base+0x138>
   45a84:	lsl	x27, x18, #1
   45a88:	cmp	w21, #0x5
   45a8c:	b.eq	45b54 <mpfr_round_near_x@@Base+0x21c>  // b.none
   45a90:	cmp	w21, #0x1
   45a94:	b.eq	45ac4 <mpfr_round_near_x@@Base+0x18c>  // b.none
   45a98:	cbnz	w21, 45ab8 <mpfr_round_near_x@@Base+0x180>
   45a9c:	cbz	x15, 45ac4 <mpfr_round_near_x@@Base+0x18c>
   45aa0:	cbnz	w22, 45adc <mpfr_round_near_x@@Base+0x1a4>
   45aa4:	cbnz	x16, 45adc <mpfr_round_near_x@@Base+0x1a4>
   45aa8:	neg	w24, w20
   45aac:	b	45b58 <mpfr_round_near_x@@Base+0x220>
   45ab0:	mov	w24, wzr
   45ab4:	b	45cf0 <mpfr_round_near_x@@Base+0x3b8>
   45ab8:	add	w17, w21, w20, lsr #31
   45abc:	cmp	w17, #0x3
   45ac0:	b.ne	45ad4 <mpfr_round_near_x@@Base+0x19c>  // b.any
   45ac4:	orr	x8, x16, x15
   45ac8:	cmp	x8, #0x0
   45acc:	csneg	w24, wzr, w20, eq  // eq = none
   45ad0:	b	45b58 <mpfr_round_near_x@@Base+0x220>
   45ad4:	orr	x15, x16, x15
   45ad8:	cbz	x15, 45b54 <mpfr_round_near_x@@Base+0x21c>
   45adc:	ldr	x12, [x1]
   45ae0:	adds	x12, x12, x27
   45ae4:	str	x12, [x23]
   45ae8:	b.cc	45bd0 <mpfr_round_near_x@@Base+0x298>  // b.lo, b.ul, b.last
   45aec:	sub	x13, x13, x10
   45af0:	add	x13, x14, x13, lsl #3
   45af4:	mov	x12, xzr
   45af8:	add	x9, x23, #0x8
   45afc:	add	x14, x13, #0x8
   45b00:	add	x13, x12, #0x1
   45b04:	cmp	x13, x10
   45b08:	b.gt	45c10 <mpfr_round_near_x@@Base+0x2d8>
   45b0c:	ldr	x15, [x14, x12, lsl #3]
   45b10:	mov	x12, x13
   45b14:	adds	x15, x15, #0x1
   45b18:	str	x15, [x9], #8
   45b1c:	b.cs	45b00 <mpfr_round_near_x@@Base+0x1c8>  // b.hs, b.nlast
   45b20:	cmp	x1, x23
   45b24:	mov	w24, w20
   45b28:	b.eq	45b6c <mpfr_round_near_x@@Base+0x234>  // b.none
   45b2c:	cmp	x13, x10
   45b30:	mov	w24, w20
   45b34:	b.ge	45b6c <mpfr_round_near_x@@Base+0x234>  // b.tcont
   45b38:	add	x10, x11, x13
   45b3c:	add	x10, x10, #0x1
   45b40:	ldr	x11, [x8, x10, lsl #3]
   45b44:	adds	x10, x10, #0x1
   45b48:	str	x11, [x9], #8
   45b4c:	b.cc	45b40 <mpfr_round_near_x@@Base+0x208>  // b.lo, b.ul, b.last
   45b50:	b	45c00 <mpfr_round_near_x@@Base+0x2c8>
   45b54:	mov	w24, wzr
   45b58:	cmp	x23, x1
   45b5c:	b.eq	45b6c <mpfr_round_near_x@@Base+0x234>  // b.none
   45b60:	lsl	x2, x12, #3
   45b64:	mov	x0, x23
   45b68:	bl	bad0 <memcpy@plt>
   45b6c:	ldr	x8, [x23]
   45b70:	neg	x9, x27
   45b74:	and	x8, x8, x9
   45b78:	str	x8, [x23]
   45b7c:	cbnz	w24, 45cd4 <mpfr_round_near_x@@Base+0x39c>
   45b80:	cbz	w22, 45c88 <mpfr_round_near_x@@Base+0x350>
   45b84:	cmp	w21, #0x4
   45b88:	b.eq	45b9c <mpfr_round_near_x@@Base+0x264>  // b.none
   45b8c:	mvn	w8, w20
   45b90:	add	w8, w21, w8, lsr #31
   45b94:	cmp	w8, #0x3
   45b98:	b.ne	45c08 <mpfr_round_near_x@@Base+0x2d0>  // b.any
   45b9c:	mov	x0, x19
   45ba0:	bl	c6c0 <mpfr_nexttoinf@plt>
   45ba4:	ldr	x8, [x19, #16]
   45ba8:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   45bac:	cmp	x8, x9
   45bb0:	b.ne	45ccc <mpfr_round_near_x@@Base+0x394>  // b.any
   45bb4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45bb8:	ldr	x1, [x0, #2656]
   45bbc:	add	x0, x0, #0xa60
   45bc0:	blr	x1
   45bc4:	ldr	w8, [x25, x0]
   45bc8:	orr	w8, w8, #0x2
   45bcc:	b	45d78 <mpfr_round_near_x@@Base+0x440>
   45bd0:	cmp	x9, #0x41
   45bd4:	mov	w24, w20
   45bd8:	b.lt	45b6c <mpfr_round_near_x@@Base+0x234>  // b.tstop
   45bdc:	cmp	x1, x23
   45be0:	mov	w24, w20
   45be4:	b.eq	45b6c <mpfr_round_near_x@@Base+0x234>  // b.none
   45be8:	add	x9, x11, #0x1
   45bec:	add	x10, x23, #0x8
   45bf0:	ldr	x11, [x8, x9, lsl #3]
   45bf4:	adds	x9, x9, #0x1
   45bf8:	str	x11, [x10], #8
   45bfc:	b.cc	45bf0 <mpfr_round_near_x@@Base+0x2b8>  // b.lo, b.ul, b.last
   45c00:	mov	w24, w20
   45c04:	b	45b6c <mpfr_round_near_x@@Base+0x234>
   45c08:	neg	w20, w20
   45c0c:	b	45ccc <mpfr_round_near_x@@Base+0x394>
   45c10:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   45c14:	str	x8, [x23, x10, lsl #3]
   45c18:	ldr	x8, [x19, #16]
   45c1c:	add	x9, x8, #0x1
   45c20:	str	x9, [x19, #16]
   45c24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45c28:	ldr	x1, [x0, #2624]
   45c2c:	add	x0, x0, #0xa40
   45c30:	blr	x1
   45c34:	ldr	x9, [x25, x0]
   45c38:	mov	w24, w20
   45c3c:	cmp	x8, x9
   45c40:	b.lt	45b6c <mpfr_round_near_x@@Base+0x234>  // b.tstop
   45c44:	mov	x0, x19
   45c48:	mov	w1, w21
   45c4c:	mov	w2, w20
   45c50:	bl	bff0 <mpfr_overflow@plt>
   45c54:	b	45c00 <mpfr_round_near_x@@Base+0x2c8>
   45c58:	ldr	x1, [x24, #24]
   45c5c:	sub	x24, x12, x17
   45c60:	add	x0, x23, x24, lsl #3
   45c64:	cmp	x0, x1
   45c68:	b.eq	45c74 <mpfr_round_near_x@@Base+0x33c>  // b.none
   45c6c:	lsl	x2, x17, #3
   45c70:	bl	bad0 <memcpy@plt>
   45c74:	lsl	x2, x24, #3
   45c78:	mov	x0, x23
   45c7c:	mov	w1, wzr
   45c80:	bl	c1b0 <memset@plt>
   45c84:	cbnz	w22, 45b84 <mpfr_round_near_x@@Base+0x24c>
   45c88:	cmp	w21, #0x1
   45c8c:	b.eq	45c9c <mpfr_round_near_x@@Base+0x364>  // b.none
   45c90:	add	w8, w21, w20, lsr #31
   45c94:	cmp	w8, #0x3
   45c98:	b.ne	45ccc <mpfr_round_near_x@@Base+0x394>  // b.any
   45c9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45ca0:	ldr	x1, [x0, #2656]
   45ca4:	add	x0, x0, #0xa60
   45ca8:	blr	x1
   45cac:	str	w26, [x25, x0]
   45cb0:	mov	x0, x19
   45cb4:	neg	w20, w20
   45cb8:	bl	c4b0 <mpfr_nexttozero@plt>
   45cbc:	ldr	x8, [x19, #16]
   45cc0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   45cc4:	cmp	x8, x9
   45cc8:	b.eq	45d60 <mpfr_round_near_x@@Base+0x428>  // b.none
   45ccc:	mov	w24, w20
   45cd0:	cbz	w20, 45cf0 <mpfr_round_near_x@@Base+0x3b8>
   45cd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45cd8:	ldr	x1, [x0, #2656]
   45cdc:	add	x0, x0, #0xa60
   45ce0:	blr	x1
   45ce4:	ldr	w8, [x25, x0]
   45ce8:	orr	w8, w8, #0x8
   45cec:	str	w8, [x25, x0]
   45cf0:	mov	w0, w24
   45cf4:	ldp	x20, x19, [sp, #80]
   45cf8:	ldp	x22, x21, [sp, #64]
   45cfc:	ldp	x24, x23, [sp, #48]
   45d00:	ldp	x26, x25, [sp, #32]
   45d04:	ldr	x27, [sp, #16]
   45d08:	ldp	x29, x30, [sp], #96
   45d0c:	ret
   45d10:	ldur	x16, [x1, #-8]
   45d14:	and	x15, x16, #0x8000000000000000
   45d18:	and	x16, x16, #0x7fffffffffffffff
   45d1c:	cbz	w21, 45d2c <mpfr_round_near_x@@Base+0x3f4>
   45d20:	cbz	x15, 45d2c <mpfr_round_near_x@@Base+0x3f4>
   45d24:	mov	w27, #0x1                   	// #1
   45d28:	b	45a88 <mpfr_round_near_x@@Base+0x150>
   45d2c:	mov	w27, #0x1                   	// #1
   45d30:	cbnz	x16, 45a88 <mpfr_round_near_x@@Base+0x150>
   45d34:	sub	x17, x13, x12
   45d38:	cbz	x17, 45a88 <mpfr_round_near_x@@Base+0x150>
   45d3c:	sub	x16, x13, x10
   45d40:	sub	x17, x16, #0x2
   45d44:	mov	w27, #0x1                   	// #1
   45d48:	ldr	x16, [x14, x17, lsl #3]
   45d4c:	subs	x17, x17, #0x1
   45d50:	cset	w18, cs  // cs = hs, nlast
   45d54:	cbnz	x16, 45a88 <mpfr_round_near_x@@Base+0x150>
   45d58:	tbnz	w18, #0, 45d48 <mpfr_round_near_x@@Base+0x410>
   45d5c:	b	45a88 <mpfr_round_near_x@@Base+0x150>
   45d60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45d64:	ldr	x1, [x0, #2656]
   45d68:	add	x0, x0, #0xa60
   45d6c:	blr	x1
   45d70:	ldr	w8, [x25, x0]
   45d74:	orr	w8, w8, #0x1
   45d78:	str	w8, [x25, x0]
   45d7c:	b	45ccc <mpfr_round_near_x@@Base+0x394>

0000000000045d80 <mpfr_abort_prec_max@@Base>:
   45d80:	stp	x29, x30, [sp, #-16]!
   45d84:	adrp	x8, 70000 <__gmpfr_l2b@@Base+0x2e0>
   45d88:	ldr	x8, [x8, #3976]
   45d8c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   45d90:	add	x0, x0, #0xa58
   45d94:	mov	w1, #0x21                  	// #33
   45d98:	ldr	x3, [x8]
   45d9c:	mov	w2, #0x1                   	// #1
   45da0:	mov	x29, sp
   45da4:	bl	c920 <fwrite@plt>
   45da8:	bl	c440 <abort@plt>

0000000000045dac <mpfr_custom_get_size@@Base>:
   45dac:	sub	x8, x0, #0x1
   45db0:	add	x9, x0, #0x3e
   45db4:	cmp	x8, #0x0
   45db8:	csel	x8, x9, x8, lt  // lt = tstop
   45dbc:	asr	x8, x8, #6
   45dc0:	lsl	x8, x8, #3
   45dc4:	add	x0, x8, #0x8
   45dc8:	ret

0000000000045dcc <mpfr_custom_init@@Base>:
   45dcc:	ret

0000000000045dd0 <mpfr_custom_get_significand@@Base>:
   45dd0:	ldr	x0, [x0, #24]
   45dd4:	ret

0000000000045dd8 <mpfr_custom_get_exp@@Base>:
   45dd8:	ldr	x0, [x0, #16]
   45ddc:	ret

0000000000045de0 <mpfr_custom_move@@Base>:
   45de0:	str	x1, [x0, #24]
   45de4:	ret

0000000000045de8 <mpfr_custom_init_set@@Base>:
   45de8:	cmp	w1, #0x0
   45dec:	mov	w8, #0x1                   	// #1
   45df0:	cneg	w9, w1, mi  // mi = first
   45df4:	cneg	w8, w8, lt  // lt = tstop
   45df8:	cmp	w9, #0x3
   45dfc:	b.ne	45e10 <mpfr_custom_init_set@@Base+0x28>  // b.any
   45e00:	str	x3, [x0]
   45e04:	str	w8, [x0, #8]
   45e08:	stp	x2, x4, [x0, #16]
   45e0c:	ret
   45e10:	cbz	w9, 45e28 <mpfr_custom_init_set@@Base+0x40>
   45e14:	cmp	w9, #0x1
   45e18:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   45e1c:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   45e20:	csel	x2, x10, x9, eq  // eq = none
   45e24:	b	45e00 <mpfr_custom_init_set@@Base+0x18>
   45e28:	mov	x2, #0x2                   	// #2
   45e2c:	movk	x2, #0x8000, lsl #48
   45e30:	b	45e00 <mpfr_custom_init_set@@Base+0x18>

0000000000045e34 <mpfr_custom_get_kind@@Base>:
   45e34:	ldr	x8, [x0, #16]
   45e38:	mov	x9, #0x4                   	// #4
   45e3c:	movk	x9, #0x8000, lsl #48
   45e40:	cmp	x8, x9
   45e44:	b.lt	45e54 <mpfr_custom_get_kind@@Base+0x20>  // b.tstop
   45e48:	ldr	w8, [x0, #8]
   45e4c:	add	w0, w8, w8, lsl #1
   45e50:	ret
   45e54:	mov	x9, #0x2                   	// #2
   45e58:	movk	x9, #0x8000, lsl #48
   45e5c:	cmp	x8, x9
   45e60:	b.eq	45e78 <mpfr_custom_get_kind@@Base+0x44>  // b.none
   45e64:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   45e68:	cmp	x8, x9
   45e6c:	b.ne	45e80 <mpfr_custom_get_kind@@Base+0x4c>  // b.any
   45e70:	ldr	w0, [x0, #8]
   45e74:	ret
   45e78:	mov	w0, wzr
   45e7c:	ret
   45e80:	ldr	w8, [x0, #8]
   45e84:	lsl	w0, w8, #1
   45e88:	ret

0000000000045e8c <mpfr_lngamma@@Base>:
   45e8c:	stp	x29, x30, [sp, #-48]!
   45e90:	stp	x22, x21, [sp, #16]
   45e94:	stp	x20, x19, [sp, #32]
   45e98:	ldr	x8, [x1, #16]
   45e9c:	mov	x22, #0x2                   	// #2
   45ea0:	movk	x22, #0x8000, lsl #48
   45ea4:	add	x9, x22, #0x2
   45ea8:	cmp	x8, x9
   45eac:	mov	x19, x0
   45eb0:	mov	x29, sp
   45eb4:	b.lt	45f08 <mpfr_lngamma@@Base+0x7c>  // b.tstop
   45eb8:	ldr	w8, [x1, #8]
   45ebc:	mov	w20, w2
   45ec0:	mov	x21, x1
   45ec4:	tbz	w8, #31, 45ee8 <mpfr_lngamma@@Base+0x5c>
   45ec8:	mov	x0, x21
   45ecc:	bl	c200 <mpfr_integer_p@plt>
   45ed0:	cbnz	w0, 45f04 <mpfr_lngamma@@Base+0x78>
   45ed4:	ldr	w8, [x21, #8]
   45ed8:	tbz	w8, #31, 45ee8 <mpfr_lngamma@@Base+0x5c>
   45edc:	mov	x0, x21
   45ee0:	bl	45f8c <mpfr_lngamma@@Base+0x100>
   45ee4:	cbz	w0, 45f24 <mpfr_lngamma@@Base+0x98>
   45ee8:	mov	x0, x19
   45eec:	mov	x1, x21
   45ef0:	mov	w2, w20
   45ef4:	ldp	x20, x19, [sp, #32]
   45ef8:	ldp	x22, x21, [sp, #16]
   45efc:	ldp	x29, x30, [sp], #48
   45f00:	b	45fec <mpfr_lngamma@@Base+0x160>
   45f04:	ldr	x8, [x21, #16]
   45f08:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   45f0c:	cmp	x8, x9
   45f10:	b.eq	45f7c <mpfr_lngamma@@Base+0xf0>  // b.none
   45f14:	mov	x10, #0x2                   	// #2
   45f18:	movk	x10, #0x8000, lsl #48
   45f1c:	cmp	x8, x10
   45f20:	b.ne	45f5c <mpfr_lngamma@@Base+0xd0>  // b.any
   45f24:	str	x22, [x19, #16]
   45f28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45f2c:	ldr	x1, [x0, #2656]
   45f30:	add	x0, x0, #0xa60
   45f34:	blr	x1
   45f38:	mrs	x8, tpidr_el0
   45f3c:	ldr	w9, [x8, x0]
   45f40:	orr	w9, w9, #0x4
   45f44:	str	w9, [x8, x0]
   45f48:	ldp	x20, x19, [sp, #32]
   45f4c:	ldp	x22, x21, [sp, #16]
   45f50:	mov	w0, wzr
   45f54:	ldp	x29, x30, [sp], #48
   45f58:	ret
   45f5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   45f60:	ldr	x1, [x0, #2656]
   45f64:	add	x0, x0, #0xa60
   45f68:	blr	x1
   45f6c:	mrs	x8, tpidr_el0
   45f70:	ldr	w10, [x8, x0]
   45f74:	orr	w10, w10, #0x20
   45f78:	str	w10, [x8, x0]
   45f7c:	mov	w8, #0x1                   	// #1
   45f80:	str	x9, [x19, #16]
   45f84:	str	w8, [x19, #8]
   45f88:	b	45f48 <mpfr_lngamma@@Base+0xbc>
   45f8c:	ldr	x8, [x0, #16]
   45f90:	cmp	x8, #0x1
   45f94:	b.lt	45fa4 <mpfr_lngamma@@Base+0x118>  // b.tstop
   45f98:	ldr	x9, [x0]
   45f9c:	cmp	x8, x9
   45fa0:	b.le	45fac <mpfr_lngamma@@Base+0x120>
   45fa4:	mov	w0, wzr
   45fa8:	ret
   45fac:	sub	x10, x9, #0x1
   45fb0:	add	x9, x9, #0x3e
   45fb4:	cmp	x10, #0x0
   45fb8:	csel	x9, x9, x10, lt  // lt = tstop
   45fbc:	and	x9, x9, #0xffffffffffffffc0
   45fc0:	sub	x8, x9, x8
   45fc4:	ldr	x11, [x0, #24]
   45fc8:	add	x9, x8, #0x40
   45fcc:	add	x8, x8, #0x7f
   45fd0:	cmp	x9, #0x0
   45fd4:	csel	x8, x8, x9, lt  // lt = tstop
   45fd8:	asr	x8, x8, #6
   45fdc:	ldr	x8, [x11, x8, lsl #3]
   45fe0:	lsr	x8, x8, x9
   45fe4:	and	w0, w8, #0x1
   45fe8:	ret
   45fec:	sub	sp, sp, #0x1c0
   45ff0:	stp	x28, x27, [sp, #368]
   45ff4:	mov	x28, x1
   45ff8:	str	w2, [sp, #140]
   45ffc:	mov	x27, x0
   46000:	mov	w1, #0x1                   	// #1
   46004:	mov	x0, x28
   46008:	mov	x2, xzr
   4600c:	stp	d9, d8, [sp, #336]
   46010:	stp	x29, x30, [sp, #352]
   46014:	stp	x26, x25, [sp, #384]
   46018:	stp	x24, x23, [sp, #400]
   4601c:	stp	x22, x21, [sp, #416]
   46020:	stp	x20, x19, [sp, #432]
   46024:	add	x29, sp, #0x150
   46028:	mov	w19, #0x1                   	// #1
   4602c:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   46030:	mov	w22, w0
   46034:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46038:	ldr	x1, [x0, #2656]
   4603c:	add	x0, x0, #0xa60
   46040:	blr	x1
   46044:	mrs	x10, tpidr_el0
   46048:	ldr	w20, [x10, x0]
   4604c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46050:	ldr	x1, [x0, #2592]
   46054:	add	x0, x0, #0xa20
   46058:	blr	x1
   4605c:	ldr	x21, [x10, x0]
   46060:	mov	x8, x0
   46064:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46068:	ldr	x1, [x0, #2624]
   4606c:	add	x0, x0, #0xa40
   46070:	blr	x1
   46074:	ldr	x23, [x10, x0]
   46078:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4607c:	str	x9, [x10, x8]
   46080:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   46084:	str	x10, [sp, #152]
   46088:	str	x8, [x10, x0]
   4608c:	cbz	w22, 46180 <mpfr_lngamma@@Base+0x2f4>
   46090:	cmp	w22, #0x1
   46094:	b.lt	462b8 <mpfr_lngamma@@Base+0x42c>  // b.tstop
   46098:	mov	w1, #0x2                   	// #2
   4609c:	mov	x0, x28
   460a0:	mov	x2, xzr
   460a4:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   460a8:	cbz	w0, 46180 <mpfr_lngamma@@Base+0x2f4>
   460ac:	ldr	x8, [x27]
   460b0:	ldr	x9, [x28, #16]
   460b4:	add	x10, x8, #0x2
   460b8:	cmp	x9, x10
   460bc:	b.lt	462b8 <mpfr_lngamma@@Base+0x42c>  // b.tstop
   460c0:	add	x9, x8, #0xa
   460c4:	cmp	x8, #0x33
   460c8:	mov	w8, #0x3e                  	// #62
   460cc:	csel	x1, x9, x8, gt
   460d0:	sub	x0, x29, #0x48
   460d4:	bl	cad0 <mpfr_init2@plt>
   460d8:	sub	x0, x29, #0x48
   460dc:	mov	w2, #0x2                   	// #2
   460e0:	mov	x1, x28
   460e4:	bl	c130 <mpfr_log@plt>
   460e8:	sub	x0, x29, #0x48
   460ec:	sub	x1, x29, #0x48
   460f0:	mov	w2, #0x1                   	// #1
   460f4:	mov	w3, #0x2                   	// #2
   460f8:	bl	c580 <mpfr_sub_ui@plt>
   460fc:	sub	x0, x29, #0x48
   46100:	sub	x2, x29, #0x48
   46104:	mov	w3, #0x2                   	// #2
   46108:	mov	x1, x28
   4610c:	bl	be00 <mpfr_mul@plt>
   46110:	ldur	x8, [x29, #-56]
   46114:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   46118:	cmp	x8, x9
   4611c:	b.ne	461d4 <mpfr_lngamma@@Base+0x348>  // b.any
   46120:	sub	x0, x29, #0x48
   46124:	bl	c110 <mpfr_clear@plt>
   46128:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4612c:	ldr	x1, [x0, #2656]
   46130:	add	x0, x0, #0xa60
   46134:	blr	x1
   46138:	ldr	x8, [sp, #152]
   4613c:	str	w20, [x8, x0]
   46140:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46144:	ldr	x1, [x0, #2592]
   46148:	add	x0, x0, #0xa20
   4614c:	blr	x1
   46150:	str	x21, [x8, x0]
   46154:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46158:	ldr	x1, [x0, #2624]
   4615c:	add	x0, x0, #0xa40
   46160:	blr	x1
   46164:	ldr	w1, [sp, #140]
   46168:	str	x23, [x8, x0]
   4616c:	mov	w2, #0x1                   	// #1
   46170:	mov	x0, x27
   46174:	bl	bff0 <mpfr_overflow@plt>
   46178:	mov	w26, w0
   4617c:	b	47198 <mpfr_lngamma@@Base+0x130c>
   46180:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46184:	ldr	x1, [x0, #2656]
   46188:	add	x0, x0, #0xa60
   4618c:	blr	x1
   46190:	ldr	x8, [sp, #152]
   46194:	str	w20, [x8, x0]
   46198:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4619c:	ldr	x1, [x0, #2592]
   461a0:	add	x0, x0, #0xa20
   461a4:	blr	x1
   461a8:	str	x21, [x8, x0]
   461ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   461b0:	ldr	x1, [x0, #2624]
   461b4:	add	x0, x0, #0xa40
   461b8:	blr	x1
   461bc:	str	x23, [x8, x0]
   461c0:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   461c4:	mov	w26, wzr
   461c8:	str	w19, [x27, #8]
   461cc:	str	x8, [x27, #16]
   461d0:	b	47198 <mpfr_lngamma@@Base+0x130c>
   461d4:	mov	x9, #0xfffffffffffffeff    	// #-257
   461d8:	movk	x9, #0x7fff, lsl #48
   461dc:	add	x9, x9, #0x105
   461e0:	cmp	x8, x9
   461e4:	b.lt	462b0 <mpfr_lngamma@@Base+0x424>  // b.tstop
   461e8:	ldur	x9, [x29, #-72]
   461ec:	sub	x8, x8, x9
   461f0:	cmp	x8, #0x3e
   461f4:	b.lt	462b0 <mpfr_lngamma@@Base+0x424>  // b.tstop
   461f8:	sub	x8, x9, #0x1
   461fc:	add	x10, x9, #0x3e
   46200:	cmp	x8, #0x0
   46204:	csel	x8, x10, x8, lt  // lt = tstop
   46208:	ldr	w10, [sp, #140]
   4620c:	sub	x2, x9, #0x3
   46210:	ldr	x9, [x27]
   46214:	ldur	x0, [x29, #-48]
   46218:	cmp	w10, #0x0
   4621c:	asr	x8, x8, #6
   46220:	add	x1, x8, #0x1
   46224:	cinc	x3, x9, eq  // eq = none
   46228:	bl	c3d0 <mpfr_round_p@plt>
   4622c:	cbz	w0, 462b0 <mpfr_lngamma@@Base+0x424>
   46230:	ldur	w3, [x29, #-64]
   46234:	ldr	w2, [sp, #140]
   46238:	sub	x1, x29, #0x48
   4623c:	mov	x0, x27
   46240:	bl	c6f0 <mpfr_set4@plt>
   46244:	mov	w26, w0
   46248:	sub	x0, x29, #0x48
   4624c:	bl	c110 <mpfr_clear@plt>
   46250:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46254:	ldr	x1, [x0, #2656]
   46258:	add	x0, x0, #0xa60
   4625c:	blr	x1
   46260:	ldr	x8, [sp, #152]
   46264:	str	w20, [x8, x0]
   46268:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4626c:	ldr	x1, [x0, #2592]
   46270:	add	x0, x0, #0xa20
   46274:	blr	x1
   46278:	str	x21, [x8, x0]
   4627c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46280:	ldr	x1, [x0, #2624]
   46284:	add	x0, x0, #0xa40
   46288:	blr	x1
   4628c:	str	x23, [x8, x0]
   46290:	ldr	x8, [x27, #16]
   46294:	cmp	x8, x23
   46298:	b.gt	4724c <mpfr_lngamma@@Base+0x13c0>
   4629c:	cmp	x8, x21
   462a0:	b.lt	4724c <mpfr_lngamma@@Base+0x13c0>  // b.tstop
   462a4:	cbz	w26, 47198 <mpfr_lngamma@@Base+0x130c>
   462a8:	orr	w8, w20, #0x8
   462ac:	b	47180 <mpfr_lngamma@@Base+0x12f4>
   462b0:	sub	x0, x29, #0x48
   462b4:	bl	c110 <mpfr_clear@plt>
   462b8:	stp	x23, x21, [sp, #72]
   462bc:	ldr	x23, [x27]
   462c0:	ldr	x8, [x28, #16]
   462c4:	str	w20, [sp, #92]
   462c8:	neg	x9, x23
   462cc:	cmp	x8, x9
   462d0:	b.gt	4651c <mpfr_lngamma@@Base+0x690>
   462d4:	adrp	x24, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   462d8:	adrp	x25, 59000 <mpfr_free_pool@@Base+0x387c>
   462dc:	add	x23, x23, #0xe
   462e0:	mov	w20, #0x40                  	// #64
   462e4:	mov	w21, #0x2                   	// #2
   462e8:	add	x24, x24, #0x7c7
   462ec:	add	x25, x25, #0x922
   462f0:	sub	x0, x29, #0x28
   462f4:	mov	x1, x23
   462f8:	bl	cad0 <mpfr_init2@plt>
   462fc:	ldr	w8, [x28, #8]
   46300:	cmp	w8, #0x1
   46304:	b.lt	46328 <mpfr_lngamma@@Base+0x49c>  // b.tstop
   46308:	sub	x0, x29, #0x28
   4630c:	mov	w2, #0x2                   	// #2
   46310:	mov	x1, x28
   46314:	bl	c130 <mpfr_log@plt>
   46318:	ldur	x1, [x29, #-40]
   4631c:	sub	x0, x29, #0x68
   46320:	bl	cad0 <mpfr_init2@plt>
   46324:	b	46360 <mpfr_lngamma@@Base+0x4d4>
   46328:	ldr	x1, [x28]
   4632c:	sub	x0, x29, #0x68
   46330:	bl	cad0 <mpfr_init2@plt>
   46334:	sub	x0, x29, #0x68
   46338:	mov	x1, x28
   4633c:	mov	w2, wzr
   46340:	bl	be20 <mpfr_neg@plt>
   46344:	sub	x0, x29, #0x28
   46348:	sub	x1, x29, #0x68
   4634c:	mov	w2, #0x2                   	// #2
   46350:	bl	c130 <mpfr_log@plt>
   46354:	ldur	x1, [x29, #-40]
   46358:	sub	x0, x29, #0x68
   4635c:	bl	bf80 <mpfr_set_prec@plt>
   46360:	sub	x0, x29, #0x28
   46364:	sub	x1, x29, #0x28
   46368:	mov	w2, #0x3                   	// #3
   4636c:	bl	be20 <mpfr_neg@plt>
   46370:	ldur	w3, [x29, #-32]
   46374:	sub	x0, x29, #0x68
   46378:	sub	x1, x29, #0x28
   4637c:	mov	w2, #0x3                   	// #3
   46380:	bl	c6f0 <mpfr_set4@plt>
   46384:	sub	x0, x29, #0x68
   46388:	bl	c1c0 <mpfr_nextabove@plt>
   4638c:	ldur	x1, [x29, #-40]
   46390:	sub	x0, x29, #0x88
   46394:	bl	cad0 <mpfr_init2@plt>
   46398:	ldr	w8, [x28, #8]
   4639c:	cmp	w8, #0x0
   463a0:	cinc	w2, w21, le
   463a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   463a8:	ldr	x1, [x0, #2688]
   463ac:	add	x0, x0, #0xa80
   463b0:	blr	x1
   463b4:	ldr	x8, [sp, #152]
   463b8:	add	x19, x8, x0
   463bc:	sub	x0, x29, #0x88
   463c0:	mov	x1, x19
   463c4:	bl	c3e0 <mpfr_cache@plt>
   463c8:	sub	x0, x29, #0x88
   463cc:	sub	x1, x29, #0x88
   463d0:	mov	w3, #0x3                   	// #3
   463d4:	mov	x2, x28
   463d8:	bl	be00 <mpfr_mul@plt>
   463dc:	sub	x0, x29, #0x28
   463e0:	sub	x1, x29, #0x28
   463e4:	sub	x2, x29, #0x88
   463e8:	mov	w3, #0x3                   	// #3
   463ec:	bl	bc20 <mpfr_sub@plt>
   463f0:	ldr	w8, [x28, #8]
   463f4:	sub	x0, x29, #0x88
   463f8:	mov	x1, x19
   463fc:	cmp	w8, #0x0
   46400:	cinc	w2, w21, gt
   46404:	bl	c3e0 <mpfr_cache@plt>
   46408:	sub	x0, x29, #0x88
   4640c:	sub	x1, x29, #0x88
   46410:	mov	w3, #0x2                   	// #2
   46414:	mov	x2, x28
   46418:	bl	be00 <mpfr_mul@plt>
   4641c:	sub	x0, x29, #0x68
   46420:	sub	x1, x29, #0x68
   46424:	sub	x2, x29, #0x88
   46428:	mov	w3, #0x3                   	// #3
   4642c:	bl	bc20 <mpfr_sub@plt>
   46430:	sub	x0, x29, #0x88
   46434:	mov	w3, #0x2                   	// #2
   46438:	mov	x1, x28
   4643c:	mov	x2, x28
   46440:	bl	be00 <mpfr_mul@plt>
   46444:	sub	x0, x29, #0x68
   46448:	sub	x1, x29, #0x68
   4644c:	sub	x2, x29, #0x88
   46450:	mov	w3, #0x2                   	// #2
   46454:	bl	c240 <mpfr_add@plt>
   46458:	ldr	w19, [sp, #140]
   4645c:	ldr	x1, [x27]
   46460:	sub	x0, x29, #0x28
   46464:	mov	w2, w19
   46468:	bl	c9d0 <mpfr_prec_round@plt>
   4646c:	ldr	x1, [x27]
   46470:	mov	w26, w0
   46474:	sub	x0, x29, #0x68
   46478:	mov	w2, w19
   4647c:	bl	c9d0 <mpfr_prec_round@plt>
   46480:	cmp	w26, #0x0
   46484:	cset	w8, gt
   46488:	csinv	w8, w8, wzr, ge  // ge = tcont
   4648c:	cmp	w0, #0x0
   46490:	cset	w9, gt
   46494:	csinv	w9, w9, wzr, ge  // ge = tcont
   46498:	cmp	w8, w9
   4649c:	b.ne	464b4 <mpfr_lngamma@@Base+0x628>  // b.any
   464a0:	sub	x0, x29, #0x28
   464a4:	sub	x1, x29, #0x68
   464a8:	mov	w2, #0x1                   	// #1
   464ac:	bl	c9f0 <mpfr_cmp3@plt>
   464b0:	cbz	w0, 471c0 <mpfr_lngamma@@Base+0x1334>
   464b4:	sub	x0, x29, #0x28
   464b8:	bl	c110 <mpfr_clear@plt>
   464bc:	sub	x0, x29, #0x68
   464c0:	bl	c110 <mpfr_clear@plt>
   464c4:	sub	x0, x29, #0x88
   464c8:	bl	c110 <mpfr_clear@plt>
   464cc:	mov	x8, #0xfffffffffffffeff    	// #-257
   464d0:	movk	x8, #0x7fff, lsl #48
   464d4:	sub	x8, x8, x23
   464d8:	cmp	x20, x8
   464dc:	b.gt	46504 <mpfr_lngamma@@Base+0x678>
   464e0:	ldr	x8, [x28, #16]
   464e4:	add	x23, x23, x20
   464e8:	cmp	x23, #0x0
   464ec:	cinc	x9, x23, lt  // lt = tstop
   464f0:	neg	x8, x8
   464f4:	cmp	x23, x8
   464f8:	asr	x20, x9, #1
   464fc:	b.le	462f0 <mpfr_lngamma@@Base+0x464>
   46500:	b	46518 <mpfr_lngamma@@Base+0x68c>
   46504:	mov	w1, #0x131                 	// #305
   46508:	mov	x0, x24
   4650c:	mov	x2, x25
   46510:	bl	cb90 <mpfr_assert_fail@plt>
   46514:	b	464e0 <mpfr_lngamma@@Base+0x654>
   46518:	ldr	x23, [x27]
   4651c:	sub	x0, x29, #0x28
   46520:	mov	w1, #0x1                   	// #1
   46524:	bl	cad0 <mpfr_init2@plt>
   46528:	sub	x0, x29, #0x48
   4652c:	mov	w1, #0x1                   	// #1
   46530:	bl	cad0 <mpfr_init2@plt>
   46534:	sub	x0, x29, #0x68
   46538:	mov	w1, #0x1                   	// #1
   4653c:	bl	cad0 <mpfr_init2@plt>
   46540:	sub	x0, x29, #0x88
   46544:	mov	w1, #0x1                   	// #1
   46548:	bl	cad0 <mpfr_init2@plt>
   4654c:	add	x0, sp, #0xa8
   46550:	mov	w1, #0x1                   	// #1
   46554:	bl	cad0 <mpfr_init2@plt>
   46558:	subs	x19, x23, #0x1
   4655c:	str	x27, [sp, #64]
   46560:	str	x28, [sp, #160]
   46564:	tbnz	w22, #31, 46e10 <mpfr_lngamma@@Base+0xf84>
   46568:	b.eq	47268 <mpfr_lngamma@@Base+0x13dc>  // b.none
   4656c:	b.le	47278 <mpfr_lngamma@@Base+0x13ec>
   46570:	clz	x8, x19
   46574:	mov	w9, #0x40                  	// #64
   46578:	sub	x8, x9, x8
   4657c:	add	x19, x8, x23
   46580:	subs	x20, x19, #0x1
   46584:	b.eq	47270 <mpfr_lngamma@@Base+0x13e4>  // b.none
   46588:	b.le	47294 <mpfr_lngamma@@Base+0x1408>
   4658c:	clz	x8, x20
   46590:	mov	w9, #0x4d                  	// #77
   46594:	sub	x8, x9, x8
   46598:	add	x22, x8, x19
   4659c:	ldr	w8, [sp, #140]
   465a0:	adrp	x9, 5e000 <mpfr_bases@@Base+0x4f8>
   465a4:	ldr	d9, [x9, #2696]
   465a8:	mov	w19, #0x40                  	// #64
   465ac:	cmp	w8, #0x0
   465b0:	adrp	x8, 5e000 <mpfr_bases@@Base+0x4f8>
   465b4:	ldr	d8, [x8, #2688]
   465b8:	mov	w20, #0x3                   	// #3
   465bc:	cinc	x10, x23, eq  // eq = none
   465c0:	mov	w21, #0x80000000            	// #-2147483648
   465c4:	str	x10, [sp, #16]
   465c8:	sub	x0, x29, #0x28
   465cc:	mov	w1, #0x35                  	// #53
   465d0:	bl	bf80 <mpfr_set_prec@plt>
   465d4:	cmp	x22, #0x64
   465d8:	b.gt	465e8 <mpfr_lngamma@@Base+0x75c>
   465dc:	sub	x0, x29, #0x28
   465e0:	mov	w1, #0x266                 	// #614
   465e4:	b	46650 <mpfr_lngamma@@Base+0x7c4>
   465e8:	cmp	x22, #0x1f4
   465ec:	b.gt	465fc <mpfr_lngamma@@Base+0x770>
   465f0:	sub	x0, x29, #0x28
   465f4:	mov	w1, #0x333                 	// #819
   465f8:	b	46650 <mpfr_lngamma@@Base+0x7c4>
   465fc:	cmp	x22, #0x3e8
   46600:	b.gt	46610 <mpfr_lngamma@@Base+0x784>
   46604:	sub	x0, x29, #0x28
   46608:	mov	w1, #0x533                 	// #1331
   4660c:	b	46650 <mpfr_lngamma@@Base+0x7c4>
   46610:	cmp	x22, #0x7d0
   46614:	b.gt	46624 <mpfr_lngamma@@Base+0x798>
   46618:	sub	x0, x29, #0x28
   4661c:	mov	w1, #0x6cd                 	// #1741
   46620:	b	46650 <mpfr_lngamma@@Base+0x7c4>
   46624:	mov	w8, #0x1388                	// #5000
   46628:	cmp	x22, x8
   4662c:	b.gt	4663c <mpfr_lngamma@@Base+0x7b0>
   46630:	sub	x0, x29, #0x28
   46634:	mov	w1, #0x8cd                 	// #2253
   46638:	b	46650 <mpfr_lngamma@@Base+0x7c4>
   4663c:	mov	w8, #0x2710                	// #10000
   46640:	sub	x0, x29, #0x28
   46644:	cmp	x22, x8
   46648:	b.gt	46de8 <mpfr_lngamma@@Base+0xf5c>
   4664c:	mov	w1, #0xd9a                 	// #3482
   46650:	mov	x2, #0xfffffffffffffff6    	// #-10
   46654:	mov	w3, wzr
   46658:	bl	c640 <mpfr_set_ui_2exp@plt>
   4665c:	sub	x0, x29, #0x28
   46660:	mov	w1, #0x4                   	// #4
   46664:	mov	x2, #0xfffffffffffffffc    	// #-4
   46668:	mov	w3, #0x2                   	// #2
   4666c:	bl	c640 <mpfr_set_ui_2exp@plt>
   46670:	sub	x0, x29, #0x28
   46674:	sub	x1, x29, #0x28
   46678:	mov	w3, #0x2                   	// #2
   4667c:	mov	x2, x22
   46680:	bl	bb10 <mpfr_mul_ui@plt>
   46684:	sub	x1, x29, #0x28
   46688:	mov	w2, #0x1                   	// #1
   4668c:	mov	x0, x28
   46690:	bl	c9f0 <mpfr_cmp3@plt>
   46694:	tbnz	w0, #31, 466a0 <mpfr_lngamma@@Base+0x814>
   46698:	mov	w27, #0x3                   	// #3
   4669c:	b	466c8 <mpfr_lngamma@@Base+0x83c>
   466a0:	sub	x0, x29, #0x28
   466a4:	sub	x1, x29, #0x28
   466a8:	mov	w3, #0x2                   	// #2
   466ac:	mov	x2, x28
   466b0:	bl	bc20 <mpfr_sub@plt>
   466b4:	sub	x0, x29, #0x28
   466b8:	mov	w1, #0x2                   	// #2
   466bc:	bl	bd50 <mpfr_get_ui@plt>
   466c0:	cmp	x0, #0x3
   466c4:	csel	x27, x0, x20, hi  // hi = pmore
   466c8:	sub	x0, x29, #0x28
   466cc:	mov	x1, x22
   466d0:	str	x19, [sp, #8]
   466d4:	bl	bf80 <mpfr_set_prec@plt>
   466d8:	sub	x0, x29, #0x48
   466dc:	mov	x1, x22
   466e0:	bl	bf80 <mpfr_set_prec@plt>
   466e4:	sub	x0, x29, #0x68
   466e8:	mov	x1, x22
   466ec:	bl	bf80 <mpfr_set_prec@plt>
   466f0:	sub	x0, x29, #0x88
   466f4:	mov	x1, x22
   466f8:	bl	bf80 <mpfr_set_prec@plt>
   466fc:	add	x0, sp, #0xa8
   46700:	mov	x1, x22
   46704:	bl	bf80 <mpfr_set_prec@plt>
   46708:	add	x0, sp, #0xa8
   4670c:	mov	x1, x28
   46710:	mov	x2, x27
   46714:	mov	w3, wzr
   46718:	bl	c2d0 <mpfr_add_ui@plt>
   4671c:	sub	x0, x29, #0x28
   46720:	add	x1, sp, #0xa8
   46724:	mov	w2, wzr
   46728:	bl	c130 <mpfr_log@plt>
   4672c:	sub	x0, x29, #0x48
   46730:	add	x1, sp, #0xa8
   46734:	mov	w2, #0x1                   	// #1
   46738:	mov	w3, wzr
   4673c:	bl	c320 <mpfr_mul_2ui@plt>
   46740:	sub	x0, x29, #0x48
   46744:	sub	x1, x29, #0x48
   46748:	mov	w2, #0x1                   	// #1
   4674c:	mov	w3, wzr
   46750:	bl	c580 <mpfr_sub_ui@plt>
   46754:	sub	x0, x29, #0x28
   46758:	sub	x1, x29, #0x28
   4675c:	sub	x2, x29, #0x48
   46760:	mov	w3, wzr
   46764:	bl	be00 <mpfr_mul@plt>
   46768:	sub	x0, x29, #0x28
   4676c:	sub	x1, x29, #0x28
   46770:	mov	w2, #0x1                   	// #1
   46774:	mov	w3, wzr
   46778:	bl	c950 <mpfr_div_2ui@plt>
   4677c:	sub	x0, x29, #0x28
   46780:	sub	x1, x29, #0x28
   46784:	add	x2, sp, #0xa8
   46788:	mov	w3, wzr
   4678c:	bl	bc20 <mpfr_sub@plt>
   46790:	sub	x0, x29, #0x68
   46794:	add	x2, sp, #0xa8
   46798:	mov	w1, #0x1                   	// #1
   4679c:	mov	w3, wzr
   467a0:	bl	c350 <mpfr_ui_div@plt>
   467a4:	sub	x0, x29, #0x48
   467a8:	sub	x1, x29, #0x68
   467ac:	mov	w2, #0xc                   	// #12
   467b0:	mov	w3, wzr
   467b4:	bl	ccc0 <mpfr_div_ui@plt>
   467b8:	ldur	w3, [x29, #-64]
   467bc:	sub	x0, x29, #0x88
   467c0:	sub	x1, x29, #0x48
   467c4:	mov	w2, wzr
   467c8:	bl	c6f0 <mpfr_set4@plt>
   467cc:	sub	x0, x29, #0x28
   467d0:	sub	x1, x29, #0x28
   467d4:	sub	x2, x29, #0x88
   467d8:	mov	w3, wzr
   467dc:	bl	c240 <mpfr_add@plt>
   467e0:	sub	x0, x29, #0x68
   467e4:	sub	x1, x29, #0x68
   467e8:	sub	x2, x29, #0x68
   467ec:	mov	w3, wzr
   467f0:	bl	be00 <mpfr_mul@plt>
   467f4:	ldur	x8, [x29, #-120]
   467f8:	ldur	x9, [x29, #-24]
   467fc:	add	x8, x8, x22
   46800:	cmp	x8, x9
   46804:	b.ge	46810 <mpfr_lngamma@@Base+0x984>  // b.tcont
   46808:	mov	w24, #0x2                   	// #2
   4680c:	b	46934 <mpfr_lngamma@@Base+0xaa8>
   46810:	mov	w19, #0x5                   	// #5
   46814:	mov	w24, #0x2                   	// #2
   46818:	sub	x0, x29, #0x48
   4681c:	sub	x1, x29, #0x48
   46820:	sub	x2, x29, #0x68
   46824:	mov	w3, wzr
   46828:	bl	be00 <mpfr_mul@plt>
   4682c:	sub	x23, x19, #0x1
   46830:	sub	x2, x19, #0x3
   46834:	cmp	x24, x21
   46838:	sub	x20, x19, #0x4
   4683c:	b.hi	46874 <mpfr_lngamma@@Base+0x9e8>  // b.pmore
   46840:	mul	x2, x2, x20
   46844:	sub	x0, x29, #0x48
   46848:	sub	x1, x29, #0x48
   4684c:	mov	w3, wzr
   46850:	bl	bb10 <mpfr_mul_ui@plt>
   46854:	sub	x8, x19, #0x2
   46858:	mul	x2, x8, x23
   4685c:	sub	x0, x29, #0x48
   46860:	sub	x1, x29, #0x48
   46864:	mov	w3, wzr
   46868:	bl	ccc0 <mpfr_div_ui@plt>
   4686c:	mul	x2, x19, x23
   46870:	b	468d8 <mpfr_lngamma@@Base+0xa4c>
   46874:	sub	x0, x29, #0x48
   46878:	sub	x1, x29, #0x48
   4687c:	mov	w3, wzr
   46880:	bl	bb10 <mpfr_mul_ui@plt>
   46884:	sub	x0, x29, #0x48
   46888:	sub	x1, x29, #0x48
   4688c:	mov	x2, x20
   46890:	mov	w3, wzr
   46894:	bl	bb10 <mpfr_mul_ui@plt>
   46898:	sub	x0, x29, #0x48
   4689c:	sub	x1, x29, #0x48
   468a0:	mov	x2, x23
   468a4:	mov	w3, wzr
   468a8:	bl	ccc0 <mpfr_div_ui@plt>
   468ac:	sub	x2, x19, #0x2
   468b0:	sub	x0, x29, #0x48
   468b4:	sub	x1, x29, #0x48
   468b8:	mov	w3, wzr
   468bc:	bl	ccc0 <mpfr_div_ui@plt>
   468c0:	sub	x0, x29, #0x48
   468c4:	sub	x1, x29, #0x48
   468c8:	mov	x2, x23
   468cc:	mov	w3, wzr
   468d0:	bl	ccc0 <mpfr_div_ui@plt>
   468d4:	mov	x2, x19
   468d8:	sub	x0, x29, #0x48
   468dc:	sub	x1, x29, #0x48
   468e0:	mov	w3, wzr
   468e4:	bl	ccc0 <mpfr_div_ui@plt>
   468e8:	mov	x0, x24
   468ec:	bl	c880 <mpfr_bernoulli_cache@plt>
   468f0:	mov	x2, x0
   468f4:	sub	x0, x29, #0x88
   468f8:	sub	x1, x29, #0x48
   468fc:	mov	w3, wzr
   46900:	bl	c520 <mpfr_mul_z@plt>
   46904:	sub	x0, x29, #0x28
   46908:	sub	x1, x29, #0x28
   4690c:	sub	x2, x29, #0x88
   46910:	mov	w3, wzr
   46914:	bl	c240 <mpfr_add@plt>
   46918:	ldur	x8, [x29, #-120]
   4691c:	ldur	x9, [x29, #-24]
   46920:	add	x24, x24, #0x1
   46924:	add	x19, x19, #0x2
   46928:	add	x8, x8, x22
   4692c:	cmp	x8, x9
   46930:	b.ge	46818 <mpfr_lngamma@@Base+0x98c>  // b.tcont
   46934:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46938:	ldr	x1, [x0, #2704]
   4693c:	add	x0, x0, #0xa90
   46940:	blr	x1
   46944:	ldr	x8, [sp, #152]
   46948:	mov	w2, wzr
   4694c:	add	x1, x8, x0
   46950:	sub	x0, x29, #0x88
   46954:	bl	c3e0 <mpfr_cache@plt>
   46958:	sub	x0, x29, #0x88
   4695c:	sub	x1, x29, #0x88
   46960:	mov	w2, #0x1                   	// #1
   46964:	mov	w3, wzr
   46968:	bl	c320 <mpfr_mul_2ui@plt>
   4696c:	ldr	w3, [x28, #8]
   46970:	sub	x0, x29, #0x48
   46974:	mov	x1, x28
   46978:	mov	w2, wzr
   4697c:	bl	c6f0 <mpfr_set4@plt>
   46980:	mov	w8, #0x2                   	// #2
   46984:	mov	w20, #0x40                  	// #64
   46988:	mov	w9, #0x20                  	// #32
   4698c:	mov	w21, #0x3                   	// #3
   46990:	mov	x23, x8
   46994:	mul	x8, x21, x21
   46998:	add	x21, x21, #0x1
   4699c:	add	x9, x9, #0x10
   469a0:	add	x20, x20, #0x20
   469a4:	cmp	x8, x27
   469a8:	add	x8, x23, #0x1
   469ac:	b.cc	46990 <mpfr_lngamma@@Base+0xb04>  // b.lo, b.ul, b.last
   469b0:	mov	x0, x20
   469b4:	str	x9, [sp, #56]
   469b8:	bl	cd50 <mpfr_allocate_func@plt>
   469bc:	sub	x26, x21, #0x2
   469c0:	mov	x25, x0
   469c4:	cmp	x26, #0x2
   469c8:	sub	x19, x21, #0x1
   469cc:	str	x21, [sp, #128]
   469d0:	str	x20, [sp, #24]
   469d4:	str	x23, [sp, #112]
   469d8:	b.cs	469f0 <mpfr_lngamma@@Base+0xb64>  // b.hs, b.nlast
   469dc:	add	x0, x25, #0x40
   469e0:	mov	x1, x28
   469e4:	mov	w2, wzr
   469e8:	bl	c450 <mpfr_sqr@plt>
   469ec:	b	46a78 <mpfr_lngamma@@Base+0xbec>
   469f0:	add	x20, x25, #0x40
   469f4:	mov	w21, #0x2                   	// #2
   469f8:	mov	x0, x20
   469fc:	mov	x1, x22
   46a00:	bl	cad0 <mpfr_init2@plt>
   46a04:	add	x21, x21, #0x1
   46a08:	cmp	x21, x26
   46a0c:	add	x20, x20, #0x20
   46a10:	b.ls	469f8 <mpfr_lngamma@@Base+0xb6c>  // b.plast
   46a14:	add	x0, x25, #0x40
   46a18:	mov	x1, x28
   46a1c:	mov	w2, wzr
   46a20:	bl	c450 <mpfr_sqr@plt>
   46a24:	cmp	x26, #0x3
   46a28:	b.cc	46a78 <mpfr_lngamma@@Base+0xbec>  // b.lo, b.ul, b.last
   46a2c:	add	x23, x25, #0x60
   46a30:	mov	w20, #0x3                   	// #3
   46a34:	tbnz	w20, #0, 46a54 <mpfr_lngamma@@Base+0xbc8>
   46a38:	lsl	x8, x20, #4
   46a3c:	and	x8, x8, #0xffffffffffffffe0
   46a40:	add	x1, x25, x8
   46a44:	mov	x0, x23
   46a48:	mov	w2, wzr
   46a4c:	bl	c450 <mpfr_sqr@plt>
   46a50:	b	46a68 <mpfr_lngamma@@Base+0xbdc>
   46a54:	sub	x1, x23, #0x20
   46a58:	mov	x0, x23
   46a5c:	mov	x2, x28
   46a60:	mov	w3, wzr
   46a64:	bl	be00 <mpfr_mul@plt>
   46a68:	add	x20, x20, #0x1
   46a6c:	cmp	x20, x26
   46a70:	add	x23, x23, #0x20
   46a74:	b.ls	46a34 <mpfr_lngamma@@Base+0xba8>  // b.plast
   46a78:	ldr	x0, [sp, #56]
   46a7c:	str	x25, [sp, #48]
   46a80:	bl	cd50 <mpfr_allocate_func@plt>
   46a84:	mov	x25, x0
   46a88:	mov	x21, xzr
   46a8c:	mov	x20, x0
   46a90:	mov	x0, x20
   46a94:	bl	c040 <mpfr_mpz_init@plt>
   46a98:	add	x21, x21, #0x1
   46a9c:	cmp	x21, x26
   46aa0:	add	x20, x20, #0x10
   46aa4:	b.ls	46a90 <mpfr_lngamma@@Base+0xc04>  // b.plast
   46aa8:	ldr	x23, [sp, #128]
   46aac:	cmp	x19, x27
   46ab0:	stp	x24, x22, [sp, #32]
   46ab4:	b.ls	46ac0 <mpfr_lngamma@@Base+0xc34>  // b.plast
   46ab8:	mov	w24, #0x1                   	// #1
   46abc:	b	46c18 <mpfr_lngamma@@Base+0xd8c>
   46ac0:	add	x8, x25, #0x10
   46ac4:	str	x8, [sp, #104]
   46ac8:	ldr	x8, [sp, #48]
   46acc:	mov	w24, #0x1                   	// #1
   46ad0:	str	x27, [sp, #120]
   46ad4:	add	x8, x8, #0x20
   46ad8:	str	x8, [sp, #96]
   46adc:	mov	w1, #0x1                   	// #1
   46ae0:	mov	x0, x25
   46ae4:	bl	bd60 <__gmpz_set_ui@plt>
   46ae8:	cmp	x23, #0x2
   46aec:	str	x19, [sp, #144]
   46af0:	b.ne	46b08 <mpfr_lngamma@@Base+0xc7c>  // b.any
   46af4:	sub	x0, x29, #0x68
   46af8:	mov	x1, x25
   46afc:	mov	w2, wzr
   46b00:	bl	c2b0 <mpfr_set_z@plt>
   46b04:	b	46bf4 <mpfr_lngamma@@Base+0xd68>
   46b08:	mov	x27, xzr
   46b0c:	mov	x19, xzr
   46b10:	mov	x23, x25
   46b14:	add	x21, x19, #0x1
   46b18:	add	x0, x25, x21, lsl #4
   46b1c:	add	x1, x25, x19, lsl #4
   46b20:	bl	c050 <__gmpz_set@plt>
   46b24:	add	x20, x19, x24
   46b28:	cbz	x19, 46b64 <mpfr_lngamma@@Base+0xcd8>
   46b2c:	mov	x28, x27
   46b30:	mov	x19, x23
   46b34:	mov	x0, x19
   46b38:	mov	x1, x19
   46b3c:	mov	x2, x20
   46b40:	bl	c1a0 <__gmpz_mul_ui@plt>
   46b44:	sub	x22, x19, #0x10
   46b48:	mov	x0, x19
   46b4c:	mov	x1, x19
   46b50:	mov	x2, x22
   46b54:	bl	ca10 <__gmpz_add@plt>
   46b58:	adds	x28, x28, #0x1
   46b5c:	mov	x19, x22
   46b60:	b.cc	46b34 <mpfr_lngamma@@Base+0xca8>  // b.lo, b.ul, b.last
   46b64:	mov	x0, x25
   46b68:	mov	x1, x25
   46b6c:	mov	x2, x20
   46b70:	bl	c1a0 <__gmpz_mul_ui@plt>
   46b74:	add	x23, x23, #0x10
   46b78:	cmp	x26, x21
   46b7c:	sub	x27, x27, #0x1
   46b80:	mov	x19, x21
   46b84:	b.ne	46b14 <mpfr_lngamma@@Base+0xc88>  // b.any
   46b88:	sub	x0, x29, #0x68
   46b8c:	mov	x1, x25
   46b90:	mov	w2, wzr
   46b94:	bl	c2b0 <mpfr_set_z@plt>
   46b98:	ldp	x27, x23, [sp, #120]
   46b9c:	ldr	x28, [sp, #160]
   46ba0:	cmp	x23, #0x2
   46ba4:	b.eq	46bf4 <mpfr_lngamma@@Base+0xd68>  // b.none
   46ba8:	ldp	x21, x20, [sp, #96]
   46bac:	ldr	x22, [sp, #112]
   46bb0:	mov	x19, xzr
   46bb4:	cmp	x19, #0x0
   46bb8:	csel	x1, x28, x21, eq  // eq = none
   46bbc:	add	x0, sp, #0xa8
   46bc0:	mov	x2, x20
   46bc4:	mov	w3, wzr
   46bc8:	bl	c520 <mpfr_mul_z@plt>
   46bcc:	sub	x0, x29, #0x68
   46bd0:	sub	x1, x29, #0x68
   46bd4:	add	x2, sp, #0xa8
   46bd8:	mov	w3, wzr
   46bdc:	bl	c240 <mpfr_add@plt>
   46be0:	sub	x22, x22, #0x1
   46be4:	add	x20, x20, #0x10
   46be8:	add	x21, x21, #0x20
   46bec:	sub	x19, x19, #0x1
   46bf0:	cbnz	x22, 46bb4 <mpfr_lngamma@@Base+0xd28>
   46bf4:	sub	x0, x29, #0x48
   46bf8:	sub	x1, x29, #0x48
   46bfc:	sub	x2, x29, #0x68
   46c00:	mov	w3, wzr
   46c04:	bl	be00 <mpfr_mul@plt>
   46c08:	ldr	x24, [sp, #144]
   46c0c:	add	x19, x24, x26
   46c10:	cmp	x19, x27
   46c14:	b.ls	46adc <mpfr_lngamma@@Base+0xc50>  // b.plast
   46c18:	mov	x23, x24
   46c1c:	mov	x19, xzr
   46c20:	mov	x20, x25
   46c24:	mov	x0, x20
   46c28:	bl	c210 <mpfr_mpz_clear@plt>
   46c2c:	add	x19, x19, #0x1
   46c30:	cmp	x19, x26
   46c34:	add	x20, x20, #0x10
   46c38:	b.ls	46c24 <mpfr_lngamma@@Base+0xd98>  // b.plast
   46c3c:	ldr	x1, [sp, #56]
   46c40:	mov	x0, x25
   46c44:	bl	cc80 <mpfr_free_func@plt>
   46c48:	ldp	x25, x22, [sp, #32]
   46c4c:	ldr	x24, [sp, #48]
   46c50:	cmp	x26, #0x2
   46c54:	mov	w21, #0x80000000            	// #-2147483648
   46c58:	b.cc	46c7c <mpfr_lngamma@@Base+0xdf0>  // b.lo, b.ul, b.last
   46c5c:	add	x20, x24, #0x40
   46c60:	mov	w19, #0x2                   	// #2
   46c64:	mov	x0, x20
   46c68:	bl	c110 <mpfr_clear@plt>
   46c6c:	add	x19, x19, #0x1
   46c70:	cmp	x19, x26
   46c74:	add	x20, x20, #0x20
   46c78:	b.ls	46c64 <mpfr_lngamma@@Base+0xdd8>  // b.plast
   46c7c:	ldr	x1, [sp, #24]
   46c80:	mov	x0, x24
   46c84:	bl	cc80 <mpfr_free_func@plt>
   46c88:	cmp	x23, x27
   46c8c:	b.cs	46cc4 <mpfr_lngamma@@Base+0xe38>  // b.hs, b.nlast
   46c90:	sub	x0, x29, #0x68
   46c94:	mov	x1, x28
   46c98:	mov	x2, x23
   46c9c:	mov	w3, wzr
   46ca0:	bl	c2d0 <mpfr_add_ui@plt>
   46ca4:	sub	x0, x29, #0x48
   46ca8:	sub	x1, x29, #0x48
   46cac:	sub	x2, x29, #0x68
   46cb0:	mov	w3, wzr
   46cb4:	bl	be00 <mpfr_mul@plt>
   46cb8:	add	x23, x23, #0x1
   46cbc:	cmp	x27, x23
   46cc0:	b.ne	46c90 <mpfr_lngamma@@Base+0xe04>  // b.any
   46cc4:	sub	x0, x29, #0x48
   46cc8:	sub	x1, x29, #0x48
   46ccc:	sub	x2, x29, #0x48
   46cd0:	mov	w3, wzr
   46cd4:	bl	be00 <mpfr_mul@plt>
   46cd8:	sub	x0, x29, #0x88
   46cdc:	sub	x1, x29, #0x88
   46ce0:	sub	x2, x29, #0x48
   46ce4:	mov	w3, wzr
   46ce8:	bl	c670 <mpfr_div@plt>
   46cec:	sub	x0, x29, #0x48
   46cf0:	sub	x1, x29, #0x88
   46cf4:	mov	w2, wzr
   46cf8:	bl	c130 <mpfr_log@plt>
   46cfc:	sub	x0, x29, #0x48
   46d00:	sub	x1, x29, #0x48
   46d04:	mov	w2, #0x1                   	// #1
   46d08:	mov	w3, wzr
   46d0c:	bl	c950 <mpfr_div_2ui@plt>
   46d10:	ldur	x19, [x29, #-56]
   46d14:	ucvtf	d0, x27
   46d18:	fmul	d0, d0, d8
   46d1c:	fadd	d0, d0, d9
   46d20:	bl	c9b0 <__gmpfr_ceil_log2@plt>
   46d24:	ldur	x20, [x29, #-24]
   46d28:	ucvtf	d0, x25
   46d2c:	mov	x8, #0x4048000000000000    	// #4631952216750555136
   46d30:	fadd	d0, d0, d0
   46d34:	fmov	d1, x8
   46d38:	fadd	d0, d0, d1
   46d3c:	add	x19, x0, x19
   46d40:	bl	c9b0 <__gmpfr_ceil_log2@plt>
   46d44:	add	x20, x0, x20
   46d48:	sub	x0, x29, #0x28
   46d4c:	sub	x1, x29, #0x28
   46d50:	sub	x2, x29, #0x48
   46d54:	mov	w3, wzr
   46d58:	bl	c240 <mpfr_add@plt>
   46d5c:	ldur	x8, [x29, #-24]
   46d60:	mov	x9, #0xfffffffffffffeff    	// #-257
   46d64:	movk	x9, #0x7fff, lsl #48
   46d68:	add	x9, x9, #0x105
   46d6c:	cmp	x8, x9
   46d70:	b.lt	46db8 <mpfr_lngamma@@Base+0xf2c>  // b.tstop
   46d74:	ldur	x9, [x29, #-40]
   46d78:	cmp	x19, x20
   46d7c:	csel	x10, x19, x20, gt
   46d80:	ldur	x0, [x29, #-16]
   46d84:	sub	x11, x9, #0x1
   46d88:	csinc	x10, x10, x20, ne  // ne = any
   46d8c:	add	x9, x9, #0x3e
   46d90:	cmp	x11, #0x0
   46d94:	ldr	x3, [sp, #16]
   46d98:	csel	x9, x9, x11, lt  // lt = tstop
   46d9c:	add	x8, x22, x8
   46da0:	mvn	x10, x10
   46da4:	asr	x9, x9, #6
   46da8:	add	x1, x9, #0x1
   46dac:	add	x2, x10, x8
   46db0:	bl	c3d0 <mpfr_round_p@plt>
   46db4:	cbnz	w0, 470d4 <mpfr_lngamma@@Base+0x1248>
   46db8:	ldr	x19, [sp, #8]
   46dbc:	mov	x8, #0xfffffffffffffeff    	// #-257
   46dc0:	movk	x8, #0x7fff, lsl #48
   46dc4:	sub	x8, x8, x22
   46dc8:	cmp	x19, x8
   46dcc:	b.gt	46df4 <mpfr_lngamma@@Base+0xf68>
   46dd0:	add	x22, x22, x19
   46dd4:	cmp	x22, #0x0
   46dd8:	cinc	x8, x22, lt  // lt = tstop
   46ddc:	asr	x19, x8, #1
   46de0:	mov	w20, #0x3                   	// #3
   46de4:	b	465c8 <mpfr_lngamma@@Base+0x73c>
   46de8:	mov	w1, #0x9                   	// #9
   46dec:	mov	x2, #0xffffffffffffffff    	// #-1
   46df0:	b	46654 <mpfr_lngamma@@Base+0x7c8>
   46df4:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   46df8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   46dfc:	mov	w1, #0x2b8                 	// #696
   46e00:	add	x0, x0, #0x7c7
   46e04:	add	x2, x2, #0x9c6
   46e08:	bl	cb90 <mpfr_assert_fail@plt>
   46e0c:	b	46dd0 <mpfr_lngamma@@Base+0xf44>
   46e10:	b.eq	472b0 <mpfr_lngamma@@Base+0x1424>  // b.none
   46e14:	b.le	472c0 <mpfr_lngamma@@Base+0x1434>
   46e18:	clz	x8, x19
   46e1c:	mov	w9, #0x40                  	// #64
   46e20:	sub	x8, x9, x8
   46e24:	add	x19, x8, x23
   46e28:	subs	x20, x19, #0x1
   46e2c:	b.eq	472b8 <mpfr_lngamma@@Base+0x142c>  // b.none
   46e30:	b.le	472dc <mpfr_lngamma@@Base+0x1450>
   46e34:	clz	x8, x20
   46e38:	mov	w9, #0x4e                  	// #78
   46e3c:	sub	x8, x9, x8
   46e40:	add	x22, x8, x19
   46e44:	ldr	w8, [sp, #140]
   46e48:	adrp	x25, 59000 <mpfr_free_pool@@Base+0x387c>
   46e4c:	mov	w19, #0x40                  	// #64
   46e50:	mov	w20, #0x2                   	// #2
   46e54:	cmp	w8, #0x0
   46e58:	adrp	x8, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   46e5c:	ldr	d8, [x8, #1872]
   46e60:	mov	w21, #0x3                   	// #3
   46e64:	mov	w26, #0x1                   	// #1
   46e68:	cinc	x23, x23, eq  // eq = none
   46e6c:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   46e70:	add	x25, x25, #0x9c6
   46e74:	sub	x0, x29, #0x28
   46e78:	mov	x1, x22
   46e7c:	bl	bf80 <mpfr_set_prec@plt>
   46e80:	sub	x0, x29, #0x48
   46e84:	mov	x1, x22
   46e88:	bl	bf80 <mpfr_set_prec@plt>
   46e8c:	sub	x0, x29, #0x68
   46e90:	mov	x1, x22
   46e94:	bl	bf80 <mpfr_set_prec@plt>
   46e98:	sub	x0, x29, #0x88
   46e9c:	mov	x1, x22
   46ea0:	bl	bf80 <mpfr_set_prec@plt>
   46ea4:	sub	x0, x29, #0x28
   46ea8:	mov	w1, #0x2                   	// #2
   46eac:	mov	w3, #0x3                   	// #3
   46eb0:	mov	x2, x28
   46eb4:	bl	caa0 <mpfr_ui_sub@plt>
   46eb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   46ebc:	ldr	x1, [x0, #2704]
   46ec0:	add	x0, x0, #0xa90
   46ec4:	blr	x1
   46ec8:	ldr	x8, [sp, #152]
   46ecc:	mov	w2, wzr
   46ed0:	add	x1, x8, x0
   46ed4:	sub	x0, x29, #0x48
   46ed8:	bl	c3e0 <mpfr_cache@plt>
   46edc:	sub	x0, x29, #0x68
   46ee0:	sub	x1, x29, #0x28
   46ee4:	mov	w2, wzr
   46ee8:	bl	c650 <mpfr_lngamma@plt>
   46eec:	ldur	x8, [x29, #-88]
   46ef0:	cmp	x8, x27
   46ef4:	b.ne	46f00 <mpfr_lngamma@@Base+0x1074>  // b.any
   46ef8:	mov	w28, #0x1                   	// #1
   46efc:	b	46f2c <mpfr_lngamma@@Base+0x10a0>
   46f00:	ldur	x24, [x29, #-24]
   46f04:	scvtf	d0, x24
   46f08:	fmul	d0, d0, d8
   46f0c:	bl	c9b0 <__gmpfr_ceil_log2@plt>
   46f10:	ldur	x8, [x29, #-88]
   46f14:	add	x9, x24, x0
   46f18:	sub	x8, x9, x8
   46f1c:	add	x9, x8, #0x1
   46f20:	add	x8, x8, #0x2
   46f24:	cmp	x9, #0x0
   46f28:	csel	x28, xzr, x8, lt  // lt = tstop
   46f2c:	sub	x0, x29, #0x28
   46f30:	sub	x1, x29, #0x28
   46f34:	sub	x2, x29, #0x48
   46f38:	mov	w3, wzr
   46f3c:	bl	be00 <mpfr_mul@plt>
   46f40:	ldur	x24, [x29, #-24]
   46f44:	sub	x0, x29, #0x28
   46f48:	sub	x1, x29, #0x28
   46f4c:	mov	w2, wzr
   46f50:	bl	c4a0 <mpfr_sin@plt>
   46f54:	ldur	x8, [x29, #-24]
   46f58:	ldr	x1, [sp, #160]
   46f5c:	sub	x0, x29, #0x88
   46f60:	mov	w2, #0x1                   	// #1
   46f64:	sub	x8, x24, x8
   46f68:	add	x9, x8, #0x3
   46f6c:	add	x8, x8, #0x6
   46f70:	cmp	x9, #0x0
   46f74:	mov	w3, wzr
   46f78:	csel	x24, x20, x8, lt  // lt = tstop
   46f7c:	bl	c580 <mpfr_sub_ui@plt>
   46f80:	sub	x0, x29, #0x88
   46f84:	sub	x1, x29, #0x88
   46f88:	sub	x2, x29, #0x48
   46f8c:	mov	w3, wzr
   46f90:	bl	be00 <mpfr_mul@plt>
   46f94:	sub	x0, x29, #0x88
   46f98:	sub	x1, x29, #0x88
   46f9c:	sub	x2, x29, #0x28
   46fa0:	mov	w3, wzr
   46fa4:	bl	c670 <mpfr_div@plt>
   46fa8:	sub	x0, x29, #0x88
   46fac:	sub	x1, x29, #0x88
   46fb0:	mov	w3, #0x1                   	// #1
   46fb4:	mov	w2, wzr
   46fb8:	bl	c6f0 <mpfr_set4@plt>
   46fbc:	cmp	x24, #0x2
   46fc0:	sub	x0, x29, #0x88
   46fc4:	sub	x1, x29, #0x88
   46fc8:	mov	w2, wzr
   46fcc:	csinc	x24, x21, x24, lt  // lt = tstop
   46fd0:	bl	c130 <mpfr_log@plt>
   46fd4:	add	x8, x24, #0x2
   46fd8:	cmp	x8, x22
   46fdc:	b.le	46fe8 <mpfr_lngamma@@Base+0x115c>
   46fe0:	add	x22, x8, x22
   46fe4:	b	47050 <mpfr_lngamma@@Base+0x11c4>
   46fe8:	ldur	x8, [x29, #-120]
   46fec:	ldur	x9, [x29, #-88]
   46ff0:	sub	x0, x29, #0x28
   46ff4:	sub	x1, x29, #0x88
   46ff8:	sub	x10, x26, x8
   46ffc:	cmp	x8, x27
   47000:	csel	x10, xzr, x10, eq  // eq = none
   47004:	add	x10, x10, x24
   47008:	csel	x8, xzr, x8, eq  // eq = none
   4700c:	cmp	x10, #0x0
   47010:	add	x24, x9, x28
   47014:	csinc	x9, xzr, x10, lt  // lt = tstop
   47018:	sub	x2, x29, #0x68
   4701c:	mov	w3, wzr
   47020:	add	x28, x9, x8
   47024:	bl	bc20 <mpfr_sub@plt>
   47028:	ldur	x8, [x29, #-24]
   4702c:	cmp	x28, x24
   47030:	mov	x9, #0xfffffffffffffeff    	// #-257
   47034:	movk	x9, #0x7fff, lsl #48
   47038:	csel	x10, x24, x28, lt  // lt = tstop
   4703c:	add	x9, x9, #0x105
   47040:	sub	x10, x10, x8
   47044:	cmp	x8, x9
   47048:	add	x8, x10, #0x1
   4704c:	b.ge	47058 <mpfr_lngamma@@Base+0x11cc>  // b.tcont
   47050:	ldr	x28, [sp, #160]
   47054:	b	47094 <mpfr_lngamma@@Base+0x1208>
   47058:	ldur	x9, [x29, #-40]
   4705c:	cmp	x8, #0x0
   47060:	ldur	x0, [x29, #-16]
   47064:	csinc	x8, xzr, x8, lt  // lt = tstop
   47068:	sub	x10, x9, #0x1
   4706c:	add	x9, x9, #0x3e
   47070:	cmp	x10, #0x0
   47074:	csel	x9, x9, x10, lt  // lt = tstop
   47078:	asr	x9, x9, #6
   4707c:	add	x1, x9, #0x1
   47080:	sub	x2, x22, x8
   47084:	mov	x3, x23
   47088:	bl	c3d0 <mpfr_round_p@plt>
   4708c:	ldr	x28, [sp, #160]
   47090:	cbnz	w0, 470d4 <mpfr_lngamma@@Base+0x1248>
   47094:	mov	x8, #0xfffffffffffffeff    	// #-257
   47098:	movk	x8, #0x7fff, lsl #48
   4709c:	sub	x8, x8, x22
   470a0:	cmp	x19, x8
   470a4:	b.gt	470bc <mpfr_lngamma@@Base+0x1230>
   470a8:	add	x22, x22, x19
   470ac:	cmp	x22, #0x0
   470b0:	cinc	x8, x22, lt  // lt = tstop
   470b4:	asr	x19, x8, #1
   470b8:	b	46e74 <mpfr_lngamma@@Base+0xfe8>
   470bc:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   470c0:	mov	w1, #0x1a5                 	// #421
   470c4:	add	x0, x0, #0x7c7
   470c8:	mov	x2, x25
   470cc:	bl	cb90 <mpfr_assert_fail@plt>
   470d0:	b	470a8 <mpfr_lngamma@@Base+0x121c>
   470d4:	ldr	x19, [sp, #64]
   470d8:	ldur	w3, [x29, #-32]
   470dc:	ldr	w2, [sp, #140]
   470e0:	sub	x1, x29, #0x28
   470e4:	mov	x0, x19
   470e8:	bl	c6f0 <mpfr_set4@plt>
   470ec:	mov	w26, w0
   470f0:	sub	x0, x29, #0x28
   470f4:	bl	c110 <mpfr_clear@plt>
   470f8:	sub	x0, x29, #0x48
   470fc:	bl	c110 <mpfr_clear@plt>
   47100:	sub	x0, x29, #0x68
   47104:	bl	c110 <mpfr_clear@plt>
   47108:	sub	x0, x29, #0x88
   4710c:	bl	c110 <mpfr_clear@plt>
   47110:	add	x0, sp, #0xa8
   47114:	bl	c110 <mpfr_clear@plt>
   47118:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4711c:	ldr	x1, [x0, #2656]
   47120:	add	x0, x0, #0xa60
   47124:	blr	x1
   47128:	ldr	x8, [sp, #152]
   4712c:	ldr	w9, [sp, #92]
   47130:	str	w9, [x8, x0]
   47134:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47138:	ldr	x1, [x0, #2592]
   4713c:	add	x0, x0, #0xa20
   47140:	blr	x1
   47144:	ldr	x10, [sp, #80]
   47148:	str	x10, [x8, x0]
   4714c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47150:	ldr	x1, [x0, #2624]
   47154:	add	x0, x0, #0xa40
   47158:	blr	x1
   4715c:	ldr	x11, [sp, #72]
   47160:	str	x11, [x8, x0]
   47164:	ldr	x8, [x19, #16]
   47168:	cmp	x8, x11
   4716c:	b.gt	47254 <mpfr_lngamma@@Base+0x13c8>
   47170:	cmp	x8, x10
   47174:	b.lt	47254 <mpfr_lngamma@@Base+0x13c8>  // b.tstop
   47178:	cbz	w26, 47198 <mpfr_lngamma@@Base+0x130c>
   4717c:	orr	w8, w9, #0x8
   47180:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47184:	ldr	x1, [x0, #2656]
   47188:	add	x0, x0, #0xa60
   4718c:	blr	x1
   47190:	ldr	x9, [sp, #152]
   47194:	str	w8, [x9, x0]
   47198:	mov	w0, w26
   4719c:	ldp	x20, x19, [sp, #432]
   471a0:	ldp	x22, x21, [sp, #416]
   471a4:	ldp	x24, x23, [sp, #400]
   471a8:	ldp	x26, x25, [sp, #384]
   471ac:	ldp	x28, x27, [sp, #368]
   471b0:	ldp	x29, x30, [sp, #352]
   471b4:	ldp	d9, d8, [sp, #336]
   471b8:	add	sp, sp, #0x1c0
   471bc:	ret
   471c0:	ldur	w3, [x29, #-96]
   471c4:	ldr	w2, [sp, #140]
   471c8:	sub	x1, x29, #0x68
   471cc:	mov	x0, x27
   471d0:	bl	c6f0 <mpfr_set4@plt>
   471d4:	sub	x0, x29, #0x28
   471d8:	bl	c110 <mpfr_clear@plt>
   471dc:	sub	x0, x29, #0x68
   471e0:	bl	c110 <mpfr_clear@plt>
   471e4:	sub	x0, x29, #0x88
   471e8:	bl	c110 <mpfr_clear@plt>
   471ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   471f0:	ldr	x1, [x0, #2656]
   471f4:	add	x0, x0, #0xa60
   471f8:	blr	x1
   471fc:	ldr	x8, [sp, #152]
   47200:	ldr	w9, [sp, #92]
   47204:	str	w9, [x8, x0]
   47208:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4720c:	ldr	x1, [x0, #2592]
   47210:	add	x0, x0, #0xa20
   47214:	blr	x1
   47218:	ldr	x10, [sp, #80]
   4721c:	str	x10, [x8, x0]
   47220:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47224:	ldr	x1, [x0, #2624]
   47228:	add	x0, x0, #0xa40
   4722c:	blr	x1
   47230:	ldr	x11, [sp, #72]
   47234:	str	x11, [x8, x0]
   47238:	ldr	x8, [x27, #16]
   4723c:	cmp	x8, x11
   47240:	b.gt	4724c <mpfr_lngamma@@Base+0x13c0>
   47244:	cmp	x8, x10
   47248:	b.ge	47178 <mpfr_lngamma@@Base+0x12ec>  // b.tcont
   4724c:	mov	x0, x27
   47250:	b	47258 <mpfr_lngamma@@Base+0x13cc>
   47254:	mov	x0, x19
   47258:	ldr	w2, [sp, #140]
   4725c:	mov	w1, w26
   47260:	bl	cb80 <mpfr_check_range@plt>
   47264:	b	46178 <mpfr_lngamma@@Base+0x2ec>
   47268:	mov	x8, xzr
   4726c:	b	4657c <mpfr_lngamma@@Base+0x6f0>
   47270:	mov	w8, #0xd                   	// #13
   47274:	b	46598 <mpfr_lngamma@@Base+0x70c>
   47278:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4727c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   47280:	add	x0, x0, #0x7c7
   47284:	add	x2, x2, #0x490
   47288:	mov	w1, #0x1b0                 	// #432
   4728c:	bl	cb90 <mpfr_assert_fail@plt>
   47290:	b	46570 <mpfr_lngamma@@Base+0x6e4>
   47294:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   47298:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4729c:	add	x0, x0, #0x7c7
   472a0:	add	x2, x2, #0x71d
   472a4:	mov	w1, #0x1b1                 	// #433
   472a8:	bl	cb90 <mpfr_assert_fail@plt>
   472ac:	b	4658c <mpfr_lngamma@@Base+0x700>
   472b0:	mov	x8, xzr
   472b4:	b	46e24 <mpfr_lngamma@@Base+0xf98>
   472b8:	mov	w8, #0xe                   	// #14
   472bc:	b	46e40 <mpfr_lngamma@@Base+0xfb4>
   472c0:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   472c4:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   472c8:	add	x0, x0, #0x7c7
   472cc:	add	x2, x2, #0x490
   472d0:	mov	w1, #0x14a                 	// #330
   472d4:	bl	cb90 <mpfr_assert_fail@plt>
   472d8:	b	46e18 <mpfr_lngamma@@Base+0xf8c>
   472dc:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   472e0:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   472e4:	add	x0, x0, #0x7c7
   472e8:	add	x2, x2, #0x71d
   472ec:	mov	w1, #0x14b                 	// #331
   472f0:	bl	cb90 <mpfr_assert_fail@plt>
   472f4:	b	46e34 <mpfr_lngamma@@Base+0xfa8>

00000000000472f8 <mpfr_lgamma@@Base>:
   472f8:	sub	sp, sp, #0xb0
   472fc:	mov	w8, #0x1                   	// #1
   47300:	stp	x29, x30, [sp, #80]
   47304:	stp	x28, x27, [sp, #96]
   47308:	stp	x26, x25, [sp, #112]
   4730c:	stp	x24, x23, [sp, #128]
   47310:	stp	x22, x21, [sp, #144]
   47314:	stp	x20, x19, [sp, #160]
   47318:	str	w8, [x1]
   4731c:	ldr	x9, [x2, #16]
   47320:	mov	x8, #0x2                   	// #2
   47324:	movk	x8, #0x8000, lsl #48
   47328:	add	x10, x8, #0x2
   4732c:	mov	x21, x2
   47330:	mov	x22, x1
   47334:	cmp	x9, x10
   47338:	mov	x19, x0
   4733c:	add	x29, sp, #0x50
   47340:	b.lt	47684 <mpfr_lgamma@@Base+0x38c>  // b.tstop
   47344:	ldr	w8, [x21, #8]
   47348:	mov	w20, w3
   4734c:	tbnz	w8, #31, 47368 <mpfr_lgamma@@Base+0x70>
   47350:	mov	x0, x19
   47354:	mov	x1, x21
   47358:	mov	w2, w20
   4735c:	bl	45fec <mpfr_lngamma@@Base+0x160>
   47360:	mov	w25, w0
   47364:	b	473a8 <mpfr_lgamma@@Base+0xb0>
   47368:	mov	x0, x21
   4736c:	bl	c200 <mpfr_integer_p@plt>
   47370:	cbz	w0, 473cc <mpfr_lgamma@@Base+0xd4>
   47374:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   47378:	mov	w9, #0x1                   	// #1
   4737c:	str	x8, [x19, #16]
   47380:	str	w9, [x19, #8]
   47384:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47388:	ldr	x1, [x0, #2656]
   4738c:	add	x0, x0, #0xa60
   47390:	blr	x1
   47394:	mrs	x8, tpidr_el0
   47398:	ldr	w9, [x8, x0]
   4739c:	mov	w25, wzr
   473a0:	orr	w9, w9, #0x20
   473a4:	str	w9, [x8, x0]
   473a8:	mov	w0, w25
   473ac:	ldp	x20, x19, [sp, #160]
   473b0:	ldp	x22, x21, [sp, #144]
   473b4:	ldp	x24, x23, [sp, #128]
   473b8:	ldp	x26, x25, [sp, #112]
   473bc:	ldp	x28, x27, [sp, #96]
   473c0:	ldp	x29, x30, [sp, #80]
   473c4:	add	sp, sp, #0xb0
   473c8:	ret
   473cc:	mov	x0, x21
   473d0:	bl	45f8c <mpfr_lngamma@@Base+0x100>
   473d4:	cbnz	w0, 473e0 <mpfr_lgamma@@Base+0xe8>
   473d8:	mov	w8, #0xffffffff            	// #-1
   473dc:	str	w8, [x22]
   473e0:	ldr	x8, [x19]
   473e4:	ldr	x9, [x21, #16]
   473e8:	neg	x10, x8
   473ec:	cmp	x9, x10
   473f0:	b.ge	47350 <mpfr_lgamma@@Base+0x58>  // b.tcont
   473f4:	add	x22, x8, #0xe
   473f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   473fc:	ldr	x1, [x0, #2656]
   47400:	add	x0, x0, #0xa60
   47404:	blr	x1
   47408:	mrs	x26, tpidr_el0
   4740c:	ldr	w8, [x26, x0]
   47410:	str	w8, [sp, #12]
   47414:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47418:	ldr	x1, [x0, #2592]
   4741c:	add	x0, x0, #0xa20
   47420:	blr	x1
   47424:	ldr	x9, [x26, x0]
   47428:	mov	x8, x0
   4742c:	str	x9, [sp]
   47430:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47434:	ldr	x1, [x0, #2624]
   47438:	add	x0, x0, #0xa40
   4743c:	blr	x1
   47440:	ldr	x23, [x26, x0]
   47444:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   47448:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   4744c:	mov	w24, #0x40                  	// #64
   47450:	str	x9, [x26, x8]
   47454:	str	x10, [x26, x0]
   47458:	sub	x0, x29, #0x20
   4745c:	mov	x1, x22
   47460:	bl	cad0 <mpfr_init2@plt>
   47464:	add	x0, sp, #0x10
   47468:	mov	x1, x22
   4746c:	bl	cad0 <mpfr_init2@plt>
   47470:	sub	x0, x29, #0x20
   47474:	mov	w2, #0x2                   	// #2
   47478:	mov	x1, x21
   4747c:	bl	be20 <mpfr_neg@plt>
   47480:	sub	x0, x29, #0x20
   47484:	sub	x1, x29, #0x20
   47488:	mov	w2, #0x2                   	// #2
   4748c:	bl	c130 <mpfr_log@plt>
   47490:	sub	x0, x29, #0x20
   47494:	sub	x1, x29, #0x20
   47498:	mov	w2, #0x3                   	// #3
   4749c:	bl	be20 <mpfr_neg@plt>
   474a0:	add	x0, sp, #0x10
   474a4:	mov	w2, #0x3                   	// #3
   474a8:	mov	x1, x21
   474ac:	bl	be20 <mpfr_neg@plt>
   474b0:	add	x0, sp, #0x10
   474b4:	add	x1, sp, #0x10
   474b8:	mov	w2, #0x3                   	// #3
   474bc:	bl	c130 <mpfr_log@plt>
   474c0:	add	x0, sp, #0x10
   474c4:	add	x1, sp, #0x10
   474c8:	mov	w2, #0x2                   	// #2
   474cc:	bl	be20 <mpfr_neg@plt>
   474d0:	add	x0, sp, #0x10
   474d4:	add	x1, sp, #0x10
   474d8:	mov	w3, #0x2                   	// #2
   474dc:	mov	x2, x21
   474e0:	bl	bc20 <mpfr_sub@plt>
   474e4:	ldr	x1, [x19]
   474e8:	sub	x0, x29, #0x20
   474ec:	mov	w2, w20
   474f0:	bl	c9d0 <mpfr_prec_round@plt>
   474f4:	ldr	x1, [x19]
   474f8:	mov	w25, w0
   474fc:	add	x0, sp, #0x10
   47500:	mov	w2, w20
   47504:	bl	c9d0 <mpfr_prec_round@plt>
   47508:	cmp	w25, #0x0
   4750c:	cset	w8, gt
   47510:	csinv	w8, w8, wzr, ge  // ge = tcont
   47514:	cmp	w0, #0x0
   47518:	cset	w9, gt
   4751c:	csinv	w9, w9, wzr, ge  // ge = tcont
   47520:	cmp	w8, w9
   47524:	b.ne	47554 <mpfr_lgamma@@Base+0x25c>  // b.any
   47528:	sub	x0, x29, #0x20
   4752c:	add	x1, sp, #0x10
   47530:	bl	cab0 <mpfr_equal_p@plt>
   47534:	cbz	w0, 47554 <mpfr_lgamma@@Base+0x25c>
   47538:	ldr	w3, [sp, #24]
   4753c:	add	x1, sp, #0x10
   47540:	mov	x0, x19
   47544:	mov	w2, w20
   47548:	bl	c6f0 <mpfr_set4@plt>
   4754c:	mov	w28, #0x1                   	// #1
   47550:	b	4755c <mpfr_lgamma@@Base+0x264>
   47554:	ldur	x27, [x29, #-16]
   47558:	mov	w28, wzr
   4755c:	sub	x0, x29, #0x20
   47560:	bl	c110 <mpfr_clear@plt>
   47564:	add	x0, sp, #0x10
   47568:	bl	c110 <mpfr_clear@plt>
   4756c:	cbnz	w28, 475c4 <mpfr_lgamma@@Base+0x2cc>
   47570:	ldr	x8, [x21, #16]
   47574:	add	x8, x8, x22
   47578:	cmp	x27, x8
   4757c:	b.lt	4763c <mpfr_lgamma@@Base+0x344>  // b.tstop
   47580:	subs	x25, x22, #0x1
   47584:	b.eq	475a0 <mpfr_lgamma@@Base+0x2a8>  // b.none
   47588:	b.le	475a8 <mpfr_lgamma@@Base+0x2b0>
   4758c:	clz	x8, x25
   47590:	sub	x8, x24, x8
   47594:	add	x8, x22, x8
   47598:	add	x22, x8, #0x3
   4759c:	b	47458 <mpfr_lgamma@@Base+0x160>
   475a0:	mov	x8, xzr
   475a4:	b	47594 <mpfr_lgamma@@Base+0x29c>
   475a8:	adrp	x0, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   475ac:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   475b0:	mov	w1, #0x35d                 	// #861
   475b4:	add	x0, x0, #0x7c7
   475b8:	add	x2, x2, #0x71d
   475bc:	bl	cb90 <mpfr_assert_fail@plt>
   475c0:	b	4758c <mpfr_lgamma@@Base+0x294>
   475c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   475c8:	ldr	x1, [x0, #2656]
   475cc:	add	x0, x0, #0xa60
   475d0:	blr	x1
   475d4:	ldr	w9, [sp, #12]
   475d8:	str	w9, [x26, x0]
   475dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   475e0:	ldr	x1, [x0, #2592]
   475e4:	add	x0, x0, #0xa20
   475e8:	blr	x1
   475ec:	ldr	x10, [sp]
   475f0:	str	x10, [x26, x0]
   475f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   475f8:	ldr	x1, [x0, #2624]
   475fc:	add	x0, x0, #0xa40
   47600:	blr	x1
   47604:	str	x23, [x26, x0]
   47608:	ldr	x8, [x19, #16]
   4760c:	cmp	x8, x23
   47610:	b.gt	47708 <mpfr_lgamma@@Base+0x410>
   47614:	cmp	x8, x10
   47618:	b.lt	47708 <mpfr_lgamma@@Base+0x410>  // b.tstop
   4761c:	cbz	w25, 473a8 <mpfr_lgamma@@Base+0xb0>
   47620:	orr	w8, w9, #0x8
   47624:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47628:	ldr	x1, [x0, #2656]
   4762c:	add	x0, x0, #0xa60
   47630:	blr	x1
   47634:	str	w8, [x26, x0]
   47638:	b	473a8 <mpfr_lgamma@@Base+0xb0>
   4763c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47640:	ldr	x1, [x0, #2656]
   47644:	add	x0, x0, #0xa60
   47648:	blr	x1
   4764c:	ldr	w8, [sp, #12]
   47650:	str	w8, [x26, x0]
   47654:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47658:	ldr	x1, [x0, #2592]
   4765c:	add	x0, x0, #0xa20
   47660:	blr	x1
   47664:	ldr	x8, [sp]
   47668:	str	x8, [x26, x0]
   4766c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47670:	ldr	x1, [x0, #2624]
   47674:	add	x0, x0, #0xa40
   47678:	blr	x1
   4767c:	str	x23, [x26, x0]
   47680:	b	47350 <mpfr_lgamma@@Base+0x58>
   47684:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   47688:	cmp	x9, x10
   4768c:	b.eq	476c8 <mpfr_lgamma@@Base+0x3d0>  // b.none
   47690:	mov	x10, #0x2                   	// #2
   47694:	movk	x10, #0x8000, lsl #48
   47698:	cmp	x9, x10
   4769c:	b.ne	476e8 <mpfr_lgamma@@Base+0x3f0>  // b.any
   476a0:	str	x8, [x19, #16]
   476a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   476a8:	ldr	x1, [x0, #2656]
   476ac:	add	x0, x0, #0xa60
   476b0:	blr	x1
   476b4:	mrs	x8, tpidr_el0
   476b8:	ldr	w9, [x8, x0]
   476bc:	mov	w25, wzr
   476c0:	orr	w9, w9, #0x4
   476c4:	b	473a4 <mpfr_lgamma@@Base+0xac>
   476c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   476cc:	ldr	x1, [x0, #2656]
   476d0:	add	x0, x0, #0xa60
   476d4:	blr	x1
   476d8:	mrs	x8, tpidr_el0
   476dc:	ldr	w9, [x8, x0]
   476e0:	orr	w9, w9, #0x20
   476e4:	str	w9, [x8, x0]
   476e8:	ldr	w8, [x21, #8]
   476ec:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   476f0:	mov	w10, #0x1                   	// #1
   476f4:	mov	w25, wzr
   476f8:	str	w8, [x22]
   476fc:	str	x9, [x19, #16]
   47700:	str	w10, [x19, #8]
   47704:	b	473a8 <mpfr_lgamma@@Base+0xb0>
   47708:	mov	x0, x19
   4770c:	mov	w1, w25
   47710:	mov	w2, w20
   47714:	bl	cb80 <mpfr_check_range@plt>
   47718:	b	47360 <mpfr_lgamma@@Base+0x68>

000000000004771c <mpfr_zeta_ui@@Base>:
   4771c:	sub	sp, sp, #0x110
   47720:	stp	x22, x21, [sp, #240]
   47724:	stp	x20, x19, [sp, #256]
   47728:	subs	x22, x1, #0x1
   4772c:	mov	x19, x0
   47730:	str	d8, [sp, #160]
   47734:	stp	x29, x30, [sp, #176]
   47738:	stp	x28, x27, [sp, #192]
   4773c:	stp	x26, x25, [sp, #208]
   47740:	stp	x24, x23, [sp, #224]
   47744:	add	x29, sp, #0xa0
   47748:	b.eq	47788 <mpfr_zeta_ui@@Base+0x6c>  // b.none
   4774c:	mov	w3, w2
   47750:	mov	x21, x1
   47754:	cbnz	x1, 477c0 <mpfr_zeta_ui@@Base+0xa4>
   47758:	mov	x0, x19
   4775c:	ldp	x20, x19, [sp, #256]
   47760:	ldp	x22, x21, [sp, #240]
   47764:	ldp	x24, x23, [sp, #224]
   47768:	ldp	x26, x25, [sp, #208]
   4776c:	ldp	x28, x27, [sp, #192]
   47770:	ldp	x29, x30, [sp, #176]
   47774:	ldr	d8, [sp, #160]
   47778:	mov	x1, #0xffffffffffffffff    	// #-1
   4777c:	mov	x2, #0xffffffffffffffff    	// #-1
   47780:	add	sp, sp, #0x110
   47784:	b	bb40 <mpfr_set_si_2exp@plt>
   47788:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4778c:	mov	w9, #0x1                   	// #1
   47790:	str	x8, [x19, #16]
   47794:	str	w9, [x19, #8]
   47798:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4779c:	ldr	x1, [x0, #2656]
   477a0:	add	x0, x0, #0xa60
   477a4:	blr	x1
   477a8:	mrs	x8, tpidr_el0
   477ac:	ldr	w9, [x8, x0]
   477b0:	mov	w21, wzr
   477b4:	orr	w9, w9, #0x20
   477b8:	str	w9, [x8, x0]
   477bc:	b	47e00 <mpfr_zeta_ui@@Base+0x6e4>
   477c0:	ldr	x20, [x19]
   477c4:	cmp	w3, #0x4
   477c8:	mov	w8, #0x2                   	// #2
   477cc:	csel	w24, w8, w3, eq  // eq = none
   477d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   477d4:	ldr	x1, [x0, #2656]
   477d8:	add	x0, x0, #0xa60
   477dc:	blr	x1
   477e0:	mrs	x28, tpidr_el0
   477e4:	ldr	w23, [x28, x0]
   477e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   477ec:	ldr	x1, [x0, #2592]
   477f0:	add	x0, x0, #0xa20
   477f4:	blr	x1
   477f8:	ldr	x25, [x28, x0]
   477fc:	mov	x8, x0
   47800:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47804:	ldr	x1, [x0, #2624]
   47808:	add	x0, x0, #0xa40
   4780c:	blr	x1
   47810:	ldr	x26, [x28, x0]
   47814:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   47818:	str	x9, [x28, x8]
   4781c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   47820:	cmp	x20, x21
   47824:	str	x8, [x28, x0]
   47828:	b.ls	478dc <mpfr_zeta_ui@@Base+0x1c0>  // b.plast
   4782c:	add	x0, sp, #0x38
   47830:	mov	w1, #0x1f                  	// #31
   47834:	bl	cad0 <mpfr_init2@plt>
   47838:	cmp	x20, #0x0
   4783c:	cinc	x8, x20, lt  // lt = tstop
   47840:	cmp	x21, x8, asr #1
   47844:	b.cc	47900 <mpfr_zeta_ui@@Base+0x1e4>  // b.lo, b.ul, b.last
   47848:	adrp	x1, 5e000 <mpfr_bases@@Base+0x4f8>
   4784c:	add	x1, x1, #0xa98
   47850:	add	x0, sp, #0x38
   47854:	bl	c3a0 <mpfr_set_str_binary@plt>
   47858:	add	x0, sp, #0x38
   4785c:	add	x1, sp, #0x38
   47860:	mov	w3, #0x1                   	// #1
   47864:	mov	x2, x21
   47868:	bl	bb10 <mpfr_mul_ui@plt>
   4786c:	add	x1, x20, #0x2
   47870:	add	x0, sp, #0x38
   47874:	mov	x2, xzr
   47878:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4787c:	tbnz	w0, #31, 47900 <mpfr_zeta_ui@@Base+0x1e4>
   47880:	add	x0, sp, #0x38
   47884:	bl	c110 <mpfr_clear@plt>
   47888:	mov	w1, #0x1                   	// #1
   4788c:	mov	w3, #0x1                   	// #1
   47890:	mov	x0, x19
   47894:	mov	x2, xzr
   47898:	bl	c640 <mpfr_set_ui_2exp@plt>
   4789c:	mov	w3, #0x1                   	// #1
   478a0:	mov	x0, x19
   478a4:	mov	x1, x19
   478a8:	mov	x2, x21
   478ac:	bl	c950 <mpfr_div_2ui@plt>
   478b0:	mov	w2, #0x1                   	// #1
   478b4:	mov	w3, #0x1                   	// #1
   478b8:	mov	x0, x19
   478bc:	mov	x1, x19
   478c0:	bl	c2d0 <mpfr_add_ui@plt>
   478c4:	cmp	w24, #0x2
   478c8:	b.ne	47d90 <mpfr_zeta_ui@@Base+0x674>  // b.any
   478cc:	mov	x0, x19
   478d0:	bl	c1c0 <mpfr_nextabove@plt>
   478d4:	mov	w21, #0x1                   	// #1
   478d8:	b	47d94 <mpfr_zeta_ui@@Base+0x678>
   478dc:	cmp	x21, #0x2
   478e0:	b.ne	47d64 <mpfr_zeta_ui@@Base+0x648>  // b.any
   478e4:	mov	w1, #0xd                   	// #13
   478e8:	mov	x2, #0xfffffffffffffffd    	// #-3
   478ec:	mov	x0, x19
   478f0:	mov	w3, w24
   478f4:	bl	c640 <mpfr_set_ui_2exp@plt>
   478f8:	mov	w21, w0
   478fc:	b	47d94 <mpfr_zeta_ui@@Base+0x678>
   47900:	sub	x0, x29, #0x38
   47904:	str	w23, [sp, #44]
   47908:	bl	c040 <mpfr_mpz_init@plt>
   4790c:	sub	x0, x29, #0x18
   47910:	bl	c040 <mpfr_mpz_init@plt>
   47914:	sub	x0, x29, #0x28
   47918:	bl	c040 <mpfr_mpz_init@plt>
   4791c:	sub	x0, x29, #0x48
   47920:	bl	c040 <mpfr_mpz_init@plt>
   47924:	subs	x23, x20, #0x1
   47928:	b.eq	47e64 <mpfr_zeta_ui@@Base+0x748>  // b.none
   4792c:	b.le	47e74 <mpfr_zeta_ui@@Base+0x758>
   47930:	clz	x8, x23
   47934:	mov	w9, #0x40                  	// #64
   47938:	sub	x8, x9, x8
   4793c:	add	x20, x8, x20
   47940:	subs	x23, x20, #0x1
   47944:	b.eq	47e6c <mpfr_zeta_ui@@Base+0x750>  // b.none
   47948:	b.le	47e90 <mpfr_zeta_ui@@Base+0x774>
   4794c:	clz	x8, x23
   47950:	mov	w9, #0x4f                  	// #79
   47954:	sub	x8, x9, x8
   47958:	adrp	x9, 5e000 <mpfr_bases@@Base+0x4f8>
   4795c:	ldr	d8, [x9, #2704]
   47960:	add	x27, x8, x20
   47964:	cmp	w24, #0x0
   47968:	mov	w8, #0x2                   	// #2
   4796c:	cset	w10, eq  // eq = none
   47970:	sub	x8, x8, x21
   47974:	stp	x26, x25, [sp, #24]
   47978:	str	w24, [sp, #12]
   4797c:	mov	w24, #0x40                  	// #64
   47980:	str	x10, [sp, #16]
   47984:	str	x8, [x29, #8]
   47988:	mov	w8, #0x40                  	// #64
   4798c:	scvtf	d0, x27
   47990:	fmul	d0, d0, d8
   47994:	fcvtzu	x26, d0
   47998:	adds	x23, x26, #0x1
   4799c:	add	x0, sp, #0x38
   479a0:	mov	x1, x27
   479a4:	str	x8, [sp]
   479a8:	cset	w20, cs  // cs = hs, nlast
   479ac:	str	x27, [sp, #48]
   479b0:	bl	bf80 <mpfr_set_prec@plt>
   479b4:	sub	x0, x29, #0x38
   479b8:	mov	x1, xzr
   479bc:	bl	bd60 <__gmpz_set_ui@plt>
   479c0:	sub	x0, x29, #0x28
   479c4:	mov	w1, #0x1                   	// #1
   479c8:	bl	bd60 <__gmpz_set_ui@plt>
   479cc:	lsl	x8, x23, #1
   479d0:	sub	x2, x8, #0x1
   479d4:	sub	x0, x29, #0x28
   479d8:	sub	x1, x29, #0x28
   479dc:	bl	c290 <__gmpz_mul_2exp@plt>
   479e0:	sub	x0, x29, #0x18
   479e4:	sub	x1, x29, #0x28
   479e8:	bl	c050 <__gmpz_set@plt>
   479ec:	tbnz	w20, #0, 47bb4 <mpfr_zeta_ui@@Base+0x498>
   479f0:	mov	x27, x23
   479f4:	clz	x8, x27
   479f8:	sub	x9, x24, x8
   479fc:	mul	x9, x9, x21
   47a00:	cmp	x9, #0x80
   47a04:	b.ls	47a38 <mpfr_zeta_ui@@Base+0x31c>  // b.plast
   47a08:	eor	x8, x8, #0x3f
   47a0c:	orr	x9, xzr, #0x1
   47a10:	sub	x0, x29, #0x18
   47a14:	mov	w1, #0x2                   	// #2
   47a18:	madd	x20, x8, x21, x9
   47a1c:	bl	cbb0 <__gmpz_sizeinbase@plt>
   47a20:	cmp	x20, x0
   47a24:	b.ls	47a74 <mpfr_zeta_ui@@Base+0x358>  // b.plast
   47a28:	sub	x0, x29, #0x48
   47a2c:	mov	x1, xzr
   47a30:	bl	bd60 <__gmpz_set_ui@plt>
   47a34:	b	47af4 <mpfr_zeta_ui@@Base+0x3d8>
   47a38:	mov	x2, x27
   47a3c:	cbz	x22, 47a68 <mpfr_zeta_ui@@Base+0x34c>
   47a40:	ldr	x25, [x29, #8]
   47a44:	mov	x8, #0xffffffffffffffff    	// #-1
   47a48:	udiv	x20, x8, x27
   47a4c:	mov	x2, x27
   47a50:	cmp	x2, x20
   47a54:	b.cs	47a98 <mpfr_zeta_ui@@Base+0x37c>  // b.hs, b.nlast
   47a58:	add	x25, x25, #0x1
   47a5c:	cmp	x25, #0x1
   47a60:	mul	x2, x2, x27
   47a64:	b.ne	47a50 <mpfr_zeta_ui@@Base+0x334>  // b.any
   47a68:	sub	x0, x29, #0x48
   47a6c:	sub	x1, x29, #0x18
   47a70:	b	47af0 <mpfr_zeta_ui@@Base+0x3d4>
   47a74:	sub	x0, x29, #0x48
   47a78:	mov	x1, x27
   47a7c:	mov	x2, x21
   47a80:	bl	c530 <__gmpz_ui_pow_ui@plt>
   47a84:	sub	x0, x29, #0x48
   47a88:	sub	x1, x29, #0x18
   47a8c:	sub	x2, x29, #0x48
   47a90:	bl	bbe0 <__gmpz_tdiv_q@plt>
   47a94:	b	47af4 <mpfr_zeta_ui@@Base+0x3d8>
   47a98:	sub	x0, x29, #0x48
   47a9c:	sub	x1, x29, #0x18
   47aa0:	bl	c0e0 <__gmpz_tdiv_q_ui@plt>
   47aa4:	mov	x2, x27
   47aa8:	cbz	x25, 47ae8 <mpfr_zeta_ui@@Base+0x3cc>
   47aac:	neg	x25, x25
   47ab0:	mov	x2, x27
   47ab4:	cmp	x2, x20
   47ab8:	b.cs	47acc <mpfr_zeta_ui@@Base+0x3b0>  // b.hs, b.nlast
   47abc:	subs	x25, x25, #0x1
   47ac0:	mul	x2, x2, x27
   47ac4:	b.ne	47ab4 <mpfr_zeta_ui@@Base+0x398>  // b.any
   47ac8:	b	47ae8 <mpfr_zeta_ui@@Base+0x3cc>
   47acc:	sub	x0, x29, #0x48
   47ad0:	sub	x1, x29, #0x48
   47ad4:	bl	c0e0 <__gmpz_tdiv_q_ui@plt>
   47ad8:	subs	x25, x25, #0x1
   47adc:	mov	x2, x27
   47ae0:	b.ne	47ab4 <mpfr_zeta_ui@@Base+0x398>  // b.any
   47ae4:	mov	x2, x27
   47ae8:	sub	x0, x29, #0x48
   47aec:	sub	x1, x29, #0x48
   47af0:	bl	c0e0 <__gmpz_tdiv_q_ui@plt>
   47af4:	sub	x0, x29, #0x38
   47af8:	sub	x1, x29, #0x38
   47afc:	sub	x2, x29, #0x48
   47b00:	tbnz	w27, #0, 47b0c <mpfr_zeta_ui@@Base+0x3f0>
   47b04:	bl	be90 <__gmpz_sub@plt>
   47b08:	b	47b10 <mpfr_zeta_ui@@Base+0x3f4>
   47b0c:	bl	ca10 <__gmpz_add@plt>
   47b10:	mov	w8, #0xf334                	// #62260
   47b14:	movk	w8, #0xb504, lsl #16
   47b18:	cmp	x27, x8
   47b1c:	b.hi	47b30 <mpfr_zeta_ui@@Base+0x414>  // b.pmore
   47b20:	lsl	x8, x27, #1
   47b24:	sub	x8, x8, #0x1
   47b28:	mul	x2, x8, x27
   47b2c:	b	47b48 <mpfr_zeta_ui@@Base+0x42c>
   47b30:	sub	x0, x29, #0x28
   47b34:	sub	x1, x29, #0x28
   47b38:	mov	x2, x27
   47b3c:	bl	c1a0 <__gmpz_mul_ui@plt>
   47b40:	lsl	x8, x27, #1
   47b44:	sub	x2, x8, #0x1
   47b48:	sub	x0, x29, #0x28
   47b4c:	sub	x1, x29, #0x28
   47b50:	bl	c1a0 <__gmpz_mul_ui@plt>
   47b54:	sub	x0, x29, #0x28
   47b58:	sub	x1, x29, #0x28
   47b5c:	mov	w2, #0x1                   	// #1
   47b60:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   47b64:	sub	x8, x23, x27
   47b68:	lsr	x9, x23, #32
   47b6c:	add	x2, x8, #0x1
   47b70:	cbnz	x9, 47b80 <mpfr_zeta_ui@@Base+0x464>
   47b74:	add	x8, x27, x26
   47b78:	mul	x2, x2, x8
   47b7c:	b	47b90 <mpfr_zeta_ui@@Base+0x474>
   47b80:	sub	x0, x29, #0x28
   47b84:	sub	x1, x29, #0x28
   47b88:	bl	c5c0 <__gmpz_divexact_ui@plt>
   47b8c:	add	x2, x27, x26
   47b90:	sub	x0, x29, #0x28
   47b94:	sub	x1, x29, #0x28
   47b98:	bl	c5c0 <__gmpz_divexact_ui@plt>
   47b9c:	sub	x0, x29, #0x18
   47ba0:	sub	x1, x29, #0x18
   47ba4:	sub	x2, x29, #0x28
   47ba8:	bl	ca10 <__gmpz_add@plt>
   47bac:	subs	x27, x27, #0x1
   47bb0:	b.ne	479f4 <mpfr_zeta_ui@@Base+0x2d8>  // b.any
   47bb4:	sub	x0, x29, #0x28
   47bb8:	sub	x1, x29, #0x38
   47bbc:	mov	x2, x22
   47bc0:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   47bc4:	add	x23, x26, #0x4
   47bc8:	sub	x0, x29, #0x38
   47bcc:	sub	x1, x29, #0x38
   47bd0:	sub	x2, x29, #0x28
   47bd4:	bl	ca10 <__gmpz_add@plt>
   47bd8:	sub	x0, x29, #0x28
   47bdc:	sub	x1, x29, #0x28
   47be0:	mov	x2, x22
   47be4:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   47be8:	ldur	w8, [x29, #-36]
   47bec:	add	x23, x23, #0x1
   47bf0:	cmp	w8, #0x0
   47bf4:	b.gt	47bc8 <mpfr_zeta_ui@@Base+0x4ac>
   47bf8:	ldr	x27, [sp, #48]
   47bfc:	sub	x0, x29, #0x38
   47c00:	sub	x1, x29, #0x38
   47c04:	mov	x2, x27
   47c08:	bl	c290 <__gmpz_mul_2exp@plt>
   47c0c:	sub	x0, x29, #0x38
   47c10:	sub	x1, x29, #0x38
   47c14:	sub	x2, x29, #0x18
   47c18:	bl	bbe0 <__gmpz_tdiv_q@plt>
   47c1c:	add	x0, sp, #0x38
   47c20:	sub	x1, x29, #0x38
   47c24:	mov	w2, wzr
   47c28:	bl	c2b0 <mpfr_set_z@plt>
   47c2c:	add	x0, sp, #0x38
   47c30:	add	x1, sp, #0x38
   47c34:	mov	x2, x27
   47c38:	mov	w3, wzr
   47c3c:	bl	c950 <mpfr_div_2ui@plt>
   47c40:	ldp	x26, x25, [sp, #24]
   47c44:	cbz	x23, 47cdc <mpfr_zeta_ui@@Base+0x5c0>
   47c48:	add	x8, x23, #0x1
   47c4c:	cmp	x8, #0x1
   47c50:	b.ls	47ce4 <mpfr_zeta_ui@@Base+0x5c8>  // b.plast
   47c54:	clz	x8, x23
   47c58:	sub	x8, x24, x8
   47c5c:	ldr	x9, [sp, #72]
   47c60:	mov	x10, #0xfffffffffffffeff    	// #-257
   47c64:	ldr	w23, [sp, #44]
   47c68:	movk	x10, #0x7fff, lsl #48
   47c6c:	add	x10, x10, #0x105
   47c70:	cmp	x9, x10
   47c74:	b.lt	47cb0 <mpfr_zeta_ui@@Base+0x594>  // b.tstop
   47c78:	ldr	x9, [sp, #56]
   47c7c:	sub	x2, x27, x8
   47c80:	ldr	x8, [x19]
   47c84:	ldr	x0, [sp, #80]
   47c88:	sub	x10, x9, #0x1
   47c8c:	add	x9, x9, #0x3e
   47c90:	cmp	x10, #0x0
   47c94:	csel	x9, x9, x10, lt  // lt = tstop
   47c98:	asr	x9, x9, #6
   47c9c:	add	x1, x9, #0x1
   47ca0:	ldr	x9, [sp, #16]
   47ca4:	add	x3, x8, x9
   47ca8:	bl	c3d0 <mpfr_round_p@plt>
   47cac:	cbnz	w0, 47d1c <mpfr_zeta_ui@@Base+0x600>
   47cb0:	ldr	x20, [sp]
   47cb4:	mov	x8, #0xfffffffffffffeff    	// #-257
   47cb8:	movk	x8, #0x7fff, lsl #48
   47cbc:	sub	x8, x8, x27
   47cc0:	cmp	x20, x8
   47cc4:	b.gt	47d00 <mpfr_zeta_ui@@Base+0x5e4>
   47cc8:	add	x27, x20, x27
   47ccc:	cmp	x27, #0x0
   47cd0:	cinc	x8, x27, lt  // lt = tstop
   47cd4:	asr	x8, x8, #1
   47cd8:	b	4798c <mpfr_zeta_ui@@Base+0x270>
   47cdc:	mov	x8, xzr
   47ce0:	b	47c5c <mpfr_zeta_ui@@Base+0x540>
   47ce4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   47ce8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   47cec:	mov	w1, #0xdc                  	// #220
   47cf0:	add	x0, x0, #0xab9
   47cf4:	add	x2, x2, #0xac3
   47cf8:	bl	cb90 <mpfr_assert_fail@plt>
   47cfc:	b	47c54 <mpfr_zeta_ui@@Base+0x538>
   47d00:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   47d04:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   47d08:	mov	w1, #0xe1                  	// #225
   47d0c:	add	x0, x0, #0xab9
   47d10:	add	x2, x2, #0xff6
   47d14:	bl	cb90 <mpfr_assert_fail@plt>
   47d18:	b	47cc8 <mpfr_zeta_ui@@Base+0x5ac>
   47d1c:	sub	x0, x29, #0x18
   47d20:	bl	c210 <mpfr_mpz_clear@plt>
   47d24:	sub	x0, x29, #0x28
   47d28:	bl	c210 <mpfr_mpz_clear@plt>
   47d2c:	sub	x0, x29, #0x48
   47d30:	bl	c210 <mpfr_mpz_clear@plt>
   47d34:	sub	x0, x29, #0x38
   47d38:	bl	c210 <mpfr_mpz_clear@plt>
   47d3c:	ldr	w24, [sp, #12]
   47d40:	ldr	w3, [sp, #64]
   47d44:	add	x1, sp, #0x38
   47d48:	mov	x0, x19
   47d4c:	mov	w2, w24
   47d50:	bl	c6f0 <mpfr_set4@plt>
   47d54:	mov	w21, w0
   47d58:	add	x0, sp, #0x38
   47d5c:	bl	c110 <mpfr_clear@plt>
   47d60:	b	47d94 <mpfr_zeta_ui@@Base+0x678>
   47d64:	orr	w8, w24, #0x2
   47d68:	cmp	w8, #0x3
   47d6c:	b.eq	47d7c <mpfr_zeta_ui@@Base+0x660>  // b.none
   47d70:	cbnz	w24, 47e28 <mpfr_zeta_ui@@Base+0x70c>
   47d74:	cmp	x20, x21
   47d78:	b.cs	47e28 <mpfr_zeta_ui@@Base+0x70c>  // b.hs, b.nlast
   47d7c:	mov	w1, #0x1                   	// #1
   47d80:	mov	x0, x19
   47d84:	mov	x2, xzr
   47d88:	mov	w3, w24
   47d8c:	bl	c640 <mpfr_set_ui_2exp@plt>
   47d90:	mov	w21, #0xffffffff            	// #-1
   47d94:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47d98:	ldr	x1, [x0, #2656]
   47d9c:	add	x0, x0, #0xa60
   47da0:	blr	x1
   47da4:	str	w23, [x28, x0]
   47da8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47dac:	ldr	x1, [x0, #2592]
   47db0:	add	x0, x0, #0xa20
   47db4:	blr	x1
   47db8:	str	x25, [x28, x0]
   47dbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47dc0:	ldr	x1, [x0, #2624]
   47dc4:	add	x0, x0, #0xa40
   47dc8:	blr	x1
   47dcc:	str	x26, [x28, x0]
   47dd0:	ldr	x8, [x19, #16]
   47dd4:	cmp	x8, x26
   47dd8:	b.gt	47e4c <mpfr_zeta_ui@@Base+0x730>
   47ddc:	cmp	x8, x25
   47de0:	b.lt	47e4c <mpfr_zeta_ui@@Base+0x730>  // b.tstop
   47de4:	cbz	w21, 47e00 <mpfr_zeta_ui@@Base+0x6e4>
   47de8:	orr	w8, w23, #0x8
   47dec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47df0:	ldr	x1, [x0, #2656]
   47df4:	add	x0, x0, #0xa60
   47df8:	blr	x1
   47dfc:	str	w8, [x28, x0]
   47e00:	mov	w0, w21
   47e04:	ldp	x20, x19, [sp, #256]
   47e08:	ldp	x22, x21, [sp, #240]
   47e0c:	ldp	x24, x23, [sp, #224]
   47e10:	ldp	x26, x25, [sp, #208]
   47e14:	ldp	x28, x27, [sp, #192]
   47e18:	ldp	x29, x30, [sp, #176]
   47e1c:	ldr	d8, [sp, #160]
   47e20:	add	sp, sp, #0x110
   47e24:	ret
   47e28:	mov	w1, #0x1                   	// #1
   47e2c:	mov	x0, x19
   47e30:	mov	x2, xzr
   47e34:	mov	w3, w24
   47e38:	mov	w21, #0x1                   	// #1
   47e3c:	bl	c640 <mpfr_set_ui_2exp@plt>
   47e40:	mov	x0, x19
   47e44:	bl	c1c0 <mpfr_nextabove@plt>
   47e48:	b	47d94 <mpfr_zeta_ui@@Base+0x678>
   47e4c:	mov	x0, x19
   47e50:	mov	w1, w21
   47e54:	mov	w2, w24
   47e58:	bl	cb80 <mpfr_check_range@plt>
   47e5c:	mov	w21, w0
   47e60:	b	47e00 <mpfr_zeta_ui@@Base+0x6e4>
   47e64:	mov	x8, xzr
   47e68:	b	4793c <mpfr_zeta_ui@@Base+0x220>
   47e6c:	mov	w8, #0xf                   	// #15
   47e70:	b	47958 <mpfr_zeta_ui@@Base+0x23c>
   47e74:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   47e78:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   47e7c:	add	x0, x0, #0xab9
   47e80:	add	x2, x2, #0xa0f
   47e84:	mov	w1, #0x6e                  	// #110
   47e88:	bl	cb90 <mpfr_assert_fail@plt>
   47e8c:	b	47930 <mpfr_zeta_ui@@Base+0x214>
   47e90:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   47e94:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   47e98:	add	x0, x0, #0xab9
   47e9c:	add	x2, x2, #0xa0f
   47ea0:	mov	w1, #0x70                  	// #112
   47ea4:	bl	cb90 <mpfr_assert_fail@plt>
   47ea8:	b	4794c <mpfr_zeta_ui@@Base+0x230>

0000000000047eac <mpfr_j0@@Base>:
   47eac:	mov	w3, w2
   47eb0:	mov	x2, x1
   47eb4:	mov	x1, xzr
   47eb8:	b	cc60 <mpfr_jn@plt>

0000000000047ebc <mpfr_jn@@Base>:
   47ebc:	stp	x29, x30, [sp, #-96]!
   47ec0:	stp	x28, x27, [sp, #16]
   47ec4:	stp	x26, x25, [sp, #32]
   47ec8:	stp	x24, x23, [sp, #48]
   47ecc:	stp	x22, x21, [sp, #64]
   47ed0:	stp	x20, x19, [sp, #80]
   47ed4:	mov	x29, sp
   47ed8:	sub	sp, sp, #0x220
   47edc:	ldr	x9, [x2, #16]
   47ee0:	mov	x10, #0xfffffffffffffeff    	// #-257
   47ee4:	movk	x10, #0x7fff, lsl #48
   47ee8:	cmp	x1, #0x0
   47eec:	add	x8, x10, #0x105
   47ef0:	mov	w21, w3
   47ef4:	mov	x26, x1
   47ef8:	cneg	x23, x1, mi  // mi = first
   47efc:	cmp	x9, x8
   47f00:	mov	x27, x0
   47f04:	str	x2, [sp, #96]
   47f08:	b.lt	48f6c <mpfr_jn@@Base+0x10b0>  // b.tstop
   47f0c:	mov	x11, x2
   47f10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47f14:	ldr	x1, [x0, #2656]
   47f18:	add	x0, x0, #0xa60
   47f1c:	blr	x1
   47f20:	mrs	x28, tpidr_el0
   47f24:	ldr	w19, [x28, x0]
   47f28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47f2c:	ldr	x1, [x0, #2592]
   47f30:	add	x0, x0, #0xa20
   47f34:	blr	x1
   47f38:	ldr	x25, [x28, x0]
   47f3c:	mov	x8, x0
   47f40:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47f44:	ldr	x1, [x0, #2624]
   47f48:	add	x0, x0, #0xa40
   47f4c:	blr	x1
   47f50:	ldr	x20, [x28, x0]
   47f54:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   47f58:	str	x10, [x28, x8]
   47f5c:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   47f60:	cmp	x26, #0x1
   47f64:	str	x8, [x28, x0]
   47f68:	b.eq	47fb4 <mpfr_jn@@Base+0xf8>  // b.none
   47f6c:	cbnz	x26, 47fe4 <mpfr_jn@@Base+0x128>
   47f70:	tbz	x9, #63, 47fe4 <mpfr_jn@@Base+0x128>
   47f74:	ldr	x8, [x27]
   47f78:	mov	w10, #0x2                   	// #2
   47f7c:	sub	x2, x10, x9, lsl #1
   47f80:	add	x8, x8, #0x1
   47f84:	cmp	x2, x8
   47f88:	b.ls	47fe4 <mpfr_jn@@Base+0x128>  // b.plast
   47f8c:	adrp	x1, 70000 <__gmpfr_l2b@@Base+0x2e0>
   47f90:	ldr	x1, [x1, #3944]
   47f94:	mov	x0, x27
   47f98:	mov	w3, wzr
   47f9c:	mov	w4, w21
   47fa0:	bl	c590 <mpfr_round_near_x@plt>
   47fa4:	ldr	x11, [sp, #96]
   47fa8:	cbz	w0, 47fe4 <mpfr_jn@@Base+0x128>
   47fac:	mov	w24, w0
   47fb0:	b	48ebc <mpfr_jn@@Base+0x1000>
   47fb4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   47fb8:	ldr	x1, [x0, #2656]
   47fbc:	add	x0, x0, #0xa60
   47fc0:	blr	x1
   47fc4:	str	wzr, [x28, x0]
   47fc8:	tbz	x9, #63, 47fe4 <mpfr_jn@@Base+0x128>
   47fcc:	ldr	x8, [x27]
   47fd0:	mov	w10, #0x3                   	// #3
   47fd4:	sub	x2, x10, x9, lsl #1
   47fd8:	add	x8, x8, #0x1
   47fdc:	cmp	x2, x8
   47fe0:	b.hi	4905c <mpfr_jn@@Base+0x11a0>  // b.pmore
   47fe4:	ldr	x8, [x11]
   47fe8:	ldr	x9, [x27]
   47fec:	mov	w22, #0x1                   	// #1
   47ff0:	str	w22, [sp, #256]
   47ff4:	str	x8, [sp, #248]
   47ff8:	ldr	q0, [x11, #16]
   47ffc:	cmp	x9, #0x0
   48000:	cinc	x8, x9, lt  // lt = tstop
   48004:	asr	x8, x8, #1
   48008:	add	x9, sp, #0x9
   4800c:	add	x1, x8, #0x3
   48010:	add	x0, sp, #0xf8
   48014:	mov	x2, xzr
   48018:	stur	q0, [x9, #255]
   4801c:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   48020:	cmp	w0, #0x1
   48024:	stp	w19, w21, [sp, #56]
   48028:	stp	x26, x28, [sp, #72]
   4802c:	str	x25, [sp, #64]
   48030:	str	x20, [sp, #48]
   48034:	b.lt	48760 <mpfr_jn@@Base+0x8a4>  // b.tstop
   48038:	sub	x0, x29, #0x48
   4803c:	bl	bc80 <mpfr_init@plt>
   48040:	ldr	x19, [x27]
   48044:	cmp	x19, #0x1
   48048:	b.eq	48fcc <mpfr_jn@@Base+0x1110>  // b.none
   4804c:	mov	x8, x19
   48050:	b.le	48fd4 <mpfr_jn@@Base+0x1118>
   48054:	sub	x8, x8, #0x1
   48058:	clz	x8, x8
   4805c:	mov	w9, #0x40                  	// #64
   48060:	sub	x8, x9, x8
   48064:	add	x8, x19, x8
   48068:	cmp	w21, #0x0
   4806c:	lsl	x9, x26, #1
   48070:	mov	w10, #0x1                   	// #1
   48074:	add	x25, x8, #0x4
   48078:	cset	w8, eq  // eq = none
   4807c:	mov	w22, #0x1                   	// #1
   48080:	mov	w11, #0x40                  	// #64
   48084:	mov	x24, #0xffffffffffffffff    	// #-1
   48088:	mov	w19, #0x2                   	// #2
   4808c:	str	x8, [sp, #24]
   48090:	bfi	x10, x26, #1, #63
   48094:	sub	x8, x9, #0x1
   48098:	str	x11, [sp, #8]
   4809c:	stp	x8, x10, [sp, #32]
   480a0:	sub	x0, x29, #0x48
   480a4:	mov	x1, x25
   480a8:	mov	x21, x27
   480ac:	bl	bf80 <mpfr_set_prec@plt>
   480b0:	sub	x0, x29, #0x28
   480b4:	mov	x1, x25
   480b8:	bl	cad0 <mpfr_init2@plt>
   480bc:	add	x0, sp, #0x68
   480c0:	mov	x1, x25
   480c4:	bl	cad0 <mpfr_init2@plt>
   480c8:	sub	x0, x29, #0x68
   480cc:	mov	x1, x25
   480d0:	bl	cad0 <mpfr_init2@plt>
   480d4:	sub	x0, x29, #0x88
   480d8:	mov	x1, x25
   480dc:	bl	cad0 <mpfr_init2@plt>
   480e0:	sub	x0, x29, #0xa8
   480e4:	mov	x1, x25
   480e8:	bl	cad0 <mpfr_init2@plt>
   480ec:	sub	x0, x29, #0xc8
   480f0:	mov	w1, #0x1f                  	// #31
   480f4:	bl	cad0 <mpfr_init2@plt>
   480f8:	sub	x0, x29, #0xe8
   480fc:	mov	w1, #0x1f                  	// #31
   48100:	bl	cad0 <mpfr_init2@plt>
   48104:	add	x0, sp, #0x118
   48108:	mov	w1, #0x1f                  	// #31
   4810c:	bl	cad0 <mpfr_init2@plt>
   48110:	ldr	x20, [sp, #96]
   48114:	sub	x0, x29, #0x28
   48118:	sub	x1, x29, #0x48
   4811c:	mov	w3, wzr
   48120:	mov	x2, x20
   48124:	bl	cca0 <mpfr_sin_cos@plt>
   48128:	ldr	w8, [x20, #8]
   4812c:	tbz	w8, #31, 48140 <mpfr_jn@@Base+0x284>
   48130:	sub	x0, x29, #0x28
   48134:	sub	x1, x29, #0x28
   48138:	mov	w2, wzr
   4813c:	bl	be20 <mpfr_neg@plt>
   48140:	sub	x0, x29, #0x88
   48144:	sub	x1, x29, #0x28
   48148:	sub	x2, x29, #0x48
   4814c:	mov	w3, wzr
   48150:	bl	c240 <mpfr_add@plt>
   48154:	sub	x0, x29, #0x48
   48158:	sub	x1, x29, #0x28
   4815c:	sub	x2, x29, #0x48
   48160:	mov	w3, wzr
   48164:	bl	bc20 <mpfr_sub@plt>
   48168:	sub	x0, x29, #0x28
   4816c:	sub	x1, x29, #0x88
   48170:	bl	c4f0 <mpfr_swap@plt>
   48174:	ldr	w8, [x20, #8]
   48178:	sub	x0, x29, #0xa8
   4817c:	mov	x2, x20
   48180:	mov	w3, wzr
   48184:	cmp	w8, #0x1
   48188:	cneg	x1, x24, ge  // ge = tcont
   4818c:	bl	c900 <mpfr_si_div@plt>
   48190:	sub	x0, x29, #0xa8
   48194:	sub	x1, x29, #0xa8
   48198:	mov	w2, #0x3                   	// #3
   4819c:	mov	w3, wzr
   481a0:	bl	c950 <mpfr_div_2ui@plt>
   481a4:	add	x0, sp, #0x68
   481a8:	mov	w1, #0x1                   	// #1
   481ac:	mov	x2, xzr
   481b0:	mov	w3, wzr
   481b4:	bl	c640 <mpfr_set_ui_2exp@plt>
   481b8:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   481bc:	sub	x0, x29, #0x88
   481c0:	mov	w1, #0x1                   	// #1
   481c4:	mov	x2, xzr
   481c8:	mov	w3, wzr
   481cc:	stur	w22, [x29, #-96]
   481d0:	stur	x24, [x29, #-88]
   481d4:	bl	c640 <mpfr_set_ui_2exp@plt>
   481d8:	stur	x24, [x29, #-184]
   481dc:	stur	x24, [x29, #-216]
   481e0:	ldp	x27, x24, [sp, #32]
   481e4:	mov	w20, wzr
   481e8:	stur	w22, [x29, #-192]
   481ec:	stur	w22, [x29, #-224]
   481f0:	mov	w28, #0x6                   	// #6
   481f4:	mov	w22, #0x2                   	// #2
   481f8:	str	wzr, [sp, #88]
   481fc:	sub	x0, x29, #0x88
   48200:	sub	x1, x29, #0x88
   48204:	mov	x2, x24
   48208:	mov	w3, wzr
   4820c:	sub	x26, x22, #0x1
   48210:	bl	c9c0 <mpfr_mul_si@plt>
   48214:	sub	x0, x29, #0x88
   48218:	sub	x1, x29, #0x88
   4821c:	mov	x2, x27
   48220:	mov	w3, wzr
   48224:	bl	c9c0 <mpfr_mul_si@plt>
   48228:	sub	x0, x29, #0x88
   4822c:	sub	x1, x29, #0x88
   48230:	mov	x2, x26
   48234:	mov	w3, wzr
   48238:	bl	ccc0 <mpfr_div_ui@plt>
   4823c:	sub	x0, x29, #0x88
   48240:	sub	x1, x29, #0x88
   48244:	sub	x2, x29, #0xa8
   48248:	mov	w3, wzr
   4824c:	bl	be00 <mpfr_mul@plt>
   48250:	ldur	w8, [x29, #-128]
   48254:	sub	x0, x29, #0xc8
   48258:	sub	x1, x29, #0x88
   4825c:	mov	x2, x28
   48260:	cmp	w8, #0x0
   48264:	cinc	w3, w19, le
   48268:	bl	bb10 <mpfr_mul_ui@plt>
   4826c:	sub	x0, x29, #0xc8
   48270:	sub	x1, x29, #0xc8
   48274:	mov	w3, #0x1                   	// #1
   48278:	mov	w2, wzr
   4827c:	bl	c6f0 <mpfr_set4@plt>
   48280:	add	x0, sp, #0x118
   48284:	sub	x1, x29, #0x88
   48288:	mov	w2, #0x2                   	// #2
   4828c:	mov	w3, #0x1                   	// #1
   48290:	bl	c6f0 <mpfr_set4@plt>
   48294:	add	x0, sp, #0x118
   48298:	add	x1, sp, #0x118
   4829c:	mov	w3, #0x2                   	// #2
   482a0:	mov	x2, x25
   482a4:	bl	c320 <mpfr_mul_2ui@plt>
   482a8:	add	x0, sp, #0x118
   482ac:	add	x1, sp, #0x118
   482b0:	sub	x2, x29, #0xc8
   482b4:	mov	w3, #0x2                   	// #2
   482b8:	bl	c240 <mpfr_add@plt>
   482bc:	cmp	w20, #0x2
   482c0:	b.lt	482fc <mpfr_jn@@Base+0x440>  // b.tstop
   482c4:	sub	x0, x29, #0xe8
   482c8:	sub	x1, x29, #0xe8
   482cc:	mov	w3, #0x2                   	// #2
   482d0:	mov	x2, x25
   482d4:	bl	c950 <mpfr_div_2ui@plt>
   482d8:	ldur	w8, [x29, #-128]
   482dc:	sub	x0, x29, #0xe8
   482e0:	sub	x1, x29, #0xe8
   482e4:	sub	x2, x29, #0x88
   482e8:	mov	w3, #0x2                   	// #2
   482ec:	cmp	w8, #0x1
   482f0:	b.lt	48338 <mpfr_jn@@Base+0x47c>  // b.tstop
   482f4:	bl	c240 <mpfr_add@plt>
   482f8:	b	4833c <mpfr_jn@@Base+0x480>
   482fc:	tbnz	w26, #0, 4831c <mpfr_jn@@Base+0x460>
   48300:	add	x0, sp, #0x68
   48304:	add	x1, sp, #0x68
   48308:	sub	x2, x29, #0x88
   4830c:	mov	w3, wzr
   48310:	tbnz	w26, #1, 4836c <mpfr_jn@@Base+0x4b0>
   48314:	bl	c240 <mpfr_add@plt>
   48318:	b	48370 <mpfr_jn@@Base+0x4b4>
   4831c:	sub	x0, x29, #0x68
   48320:	sub	x1, x29, #0x68
   48324:	sub	x2, x29, #0x88
   48328:	mov	w3, wzr
   4832c:	tbnz	w26, #1, 4837c <mpfr_jn@@Base+0x4c0>
   48330:	bl	c240 <mpfr_add@plt>
   48334:	b	48380 <mpfr_jn@@Base+0x4c4>
   48338:	bl	bc20 <mpfr_sub@plt>
   4833c:	sub	x0, x29, #0xe8
   48340:	sub	x1, x29, #0xe8
   48344:	mov	w3, #0x2                   	// #2
   48348:	mov	x2, x25
   4834c:	bl	c320 <mpfr_mul_2ui@plt>
   48350:	sub	x0, x29, #0xe8
   48354:	sub	x1, x29, #0xe8
   48358:	sub	x2, x29, #0xc8
   4835c:	mov	w3, #0x2                   	// #2
   48360:	add	w26, w20, #0x1
   48364:	bl	c240 <mpfr_add@plt>
   48368:	b	4840c <mpfr_jn@@Base+0x550>
   4836c:	bl	bc20 <mpfr_sub@plt>
   48370:	ldr	x8, [sp, #296]
   48374:	ldr	x9, [sp, #120]
   48378:	b	48388 <mpfr_jn@@Base+0x4cc>
   4837c:	bl	bc20 <mpfr_sub@plt>
   48380:	ldr	x8, [sp, #296]
   48384:	ldur	x9, [x29, #-88]
   48388:	sub	x0, x29, #0xe8
   4838c:	sub	x1, x29, #0xe8
   48390:	sub	x2, x29, #0xc8
   48394:	mov	w3, #0x2                   	// #2
   48398:	cmp	x8, x9
   4839c:	b.le	483ac <mpfr_jn@@Base+0x4f0>
   483a0:	bl	c240 <mpfr_add@plt>
   483a4:	mov	w26, wzr
   483a8:	b	483c0 <mpfr_jn@@Base+0x504>
   483ac:	mov	w26, #0x2                   	// #2
   483b0:	bl	c240 <mpfr_add@plt>
   483b4:	cmp	w20, #0x0
   483b8:	b.gt	4840c <mpfr_jn@@Base+0x550>
   483bc:	add	w26, w20, #0x1
   483c0:	ldr	x0, [sp, #96]
   483c4:	ldr	w8, [x0, #8]
   483c8:	cmp	w8, #0x1
   483cc:	b.lt	483e8 <mpfr_jn@@Base+0x52c>  // b.tstop
   483d0:	lsr	x1, x22, #1
   483d4:	mov	x2, xzr
   483d8:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   483dc:	tbnz	w0, #31, 48400 <mpfr_jn@@Base+0x544>
   483e0:	ldr	x0, [sp, #96]
   483e4:	ldr	w8, [x0, #8]
   483e8:	tbz	w8, #31, 4840c <mpfr_jn@@Base+0x550>
   483ec:	neg	x1, x22, lsr #1
   483f0:	mov	x2, xzr
   483f4:	bl	c430 <mpfr_cmp_si_2exp@plt>
   483f8:	cmp	w0, #0x1
   483fc:	b.lt	4840c <mpfr_jn@@Base+0x550>  // b.tstop
   48400:	mov	w26, #0x2                   	// #2
   48404:	mov	w8, #0x1                   	// #1
   48408:	str	w8, [sp, #88]
   4840c:	add	x24, x24, #0x2
   48410:	add	x22, x22, #0x1
   48414:	add	x28, x28, #0x6
   48418:	cmp	w26, #0x4
   4841c:	sub	x27, x27, #0x2
   48420:	mov	w20, w26
   48424:	b.lt	481fc <mpfr_jn@@Base+0x340>  // b.tstop
   48428:	ldr	x26, [sp, #72]
   4842c:	mov	x27, x21
   48430:	tbnz	w26, #0, 48484 <mpfr_jn@@Base+0x5c8>
   48434:	sub	x0, x29, #0x48
   48438:	sub	x1, x29, #0x48
   4843c:	sub	x2, x29, #0x68
   48440:	mov	w3, wzr
   48444:	bl	be00 <mpfr_mul@plt>
   48448:	sub	x0, x29, #0x28
   4844c:	sub	x1, x29, #0x28
   48450:	add	x2, sp, #0x68
   48454:	mov	w3, wzr
   48458:	bl	be00 <mpfr_mul@plt>
   4845c:	ldur	x8, [x29, #-56]
   48460:	ldur	x9, [x29, #-24]
   48464:	sub	x0, x29, #0x28
   48468:	sub	x1, x29, #0x28
   4846c:	sub	x2, x29, #0x48
   48470:	cmp	x9, x8
   48474:	mov	w3, wzr
   48478:	csel	x20, x9, x8, gt
   4847c:	bl	bc20 <mpfr_sub@plt>
   48480:	b	484d0 <mpfr_jn@@Base+0x614>
   48484:	sub	x0, x29, #0x48
   48488:	sub	x1, x29, #0x48
   4848c:	add	x2, sp, #0x68
   48490:	mov	w3, wzr
   48494:	bl	be00 <mpfr_mul@plt>
   48498:	sub	x0, x29, #0x28
   4849c:	sub	x1, x29, #0x28
   484a0:	sub	x2, x29, #0x68
   484a4:	mov	w3, wzr
   484a8:	bl	be00 <mpfr_mul@plt>
   484ac:	ldur	x8, [x29, #-56]
   484b0:	ldur	x9, [x29, #-24]
   484b4:	sub	x0, x29, #0x28
   484b8:	sub	x1, x29, #0x28
   484bc:	sub	x2, x29, #0x48
   484c0:	cmp	x9, x8
   484c4:	mov	w3, wzr
   484c8:	csel	x20, x9, x8, gt
   484cc:	bl	c240 <mpfr_add@plt>
   484d0:	ldr	x28, [sp, #80]
   484d4:	mov	x24, #0xffffffffffffffff    	// #-1
   484d8:	tbz	w26, #1, 484ec <mpfr_jn@@Base+0x630>
   484dc:	sub	x0, x29, #0x28
   484e0:	sub	x1, x29, #0x28
   484e4:	mov	w2, wzr
   484e8:	bl	be20 <mpfr_neg@plt>
   484ec:	ldur	x8, [x29, #-24]
   484f0:	ldr	x9, [sp, #120]
   484f4:	ldur	x10, [x29, #-88]
   484f8:	ldur	x11, [x29, #-216]
   484fc:	cmp	x8, x20
   48500:	csel	x8, x8, x20, gt
   48504:	cmp	x9, x10
   48508:	csel	x9, x10, x9, lt  // lt = tstop
   4850c:	cmp	x11, x8
   48510:	csel	x8, x8, x11, lt  // lt = tstop
   48514:	cmp	x8, x9
   48518:	csel	x20, x9, x8, lt  // lt = tstop
   4851c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48520:	ldr	x1, [x0, #2704]
   48524:	add	x0, x0, #0xa90
   48528:	blr	x1
   4852c:	add	x1, x28, x0
   48530:	sub	x0, x29, #0x48
   48534:	mov	w2, wzr
   48538:	bl	c3e0 <mpfr_cache@plt>
   4853c:	ldr	x21, [sp, #96]
   48540:	sub	x0, x29, #0x48
   48544:	sub	x1, x29, #0x48
   48548:	mov	w3, wzr
   4854c:	mov	x2, x21
   48550:	bl	be00 <mpfr_mul@plt>
   48554:	ldr	w8, [x21, #8]
   48558:	sub	x0, x29, #0x48
   4855c:	sub	x2, x29, #0x48
   48560:	mov	w3, wzr
   48564:	cmp	w8, #0x1
   48568:	cneg	x1, x24, ge  // ge = tcont
   4856c:	bl	c900 <mpfr_si_div@plt>
   48570:	sub	x0, x29, #0x48
   48574:	sub	x1, x29, #0x48
   48578:	mov	w2, wzr
   4857c:	bl	c990 <mpfr_sqrt@plt>
   48580:	ldur	w8, [x29, #-64]
   48584:	ldur	w9, [x29, #-32]
   48588:	sub	x0, x29, #0xc8
   4858c:	sub	x1, x29, #0x48
   48590:	sub	x2, x29, #0x28
   48594:	cmp	w8, w9
   48598:	cinc	w3, w19, ne  // ne = any
   4859c:	bl	be00 <mpfr_mul@plt>
   485a0:	sub	x0, x29, #0xc8
   485a4:	sub	x1, x29, #0xc8
   485a8:	mov	w2, #0x2                   	// #2
   485ac:	mov	w3, #0x1                   	// #1
   485b0:	bl	c6f0 <mpfr_set4@plt>
   485b4:	sub	x0, x29, #0xc8
   485b8:	sub	x1, x29, #0xc8
   485bc:	mov	w2, #0x3                   	// #3
   485c0:	mov	w3, #0x2                   	// #2
   485c4:	bl	bb10 <mpfr_mul_ui@plt>
   485c8:	ldur	x21, [x29, #-56]
   485cc:	sub	x0, x29, #0x48
   485d0:	sub	x1, x29, #0x48
   485d4:	sub	x2, x29, #0x28
   485d8:	mov	w3, wzr
   485dc:	bl	be00 <mpfr_mul@plt>
   485e0:	ldur	x8, [x29, #-184]
   485e4:	ldur	x9, [x29, #-56]
   485e8:	sub	x0, x29, #0x28
   485ec:	cmp	x8, x9
   485f0:	csel	x22, x8, x9, gt
   485f4:	bl	c110 <mpfr_clear@plt>
   485f8:	add	x0, sp, #0x68
   485fc:	bl	c110 <mpfr_clear@plt>
   48600:	sub	x0, x29, #0x68
   48604:	bl	c110 <mpfr_clear@plt>
   48608:	sub	x0, x29, #0x88
   4860c:	bl	c110 <mpfr_clear@plt>
   48610:	sub	x0, x29, #0xa8
   48614:	bl	c110 <mpfr_clear@plt>
   48618:	sub	x0, x29, #0xc8
   4861c:	bl	c110 <mpfr_clear@plt>
   48620:	sub	x0, x29, #0xe8
   48624:	bl	c110 <mpfr_clear@plt>
   48628:	add	x0, sp, #0x118
   4862c:	bl	c110 <mpfr_clear@plt>
   48630:	ldur	x8, [x29, #-56]
   48634:	mov	x9, #0xfffffffffffffeff    	// #-257
   48638:	movk	x9, #0x7fff, lsl #48
   4863c:	add	x9, x9, #0x105
   48640:	cmp	x8, x9
   48644:	b.lt	4869c <mpfr_jn@@Base+0x7e0>  // b.tstop
   48648:	add	x9, x20, x21
   4864c:	add	x10, x22, #0x1
   48650:	add	x9, x9, #0x3
   48654:	cmp	x10, x9
   48658:	ldur	x10, [x29, #-72]
   4865c:	add	x11, x22, #0x2
   48660:	csinc	x9, x11, x9, ge  // ge = tcont
   48664:	sub	x9, x25, x9
   48668:	add	x2, x9, x8
   4866c:	sub	x8, x10, #0x1
   48670:	add	x9, x10, #0x3e
   48674:	cmp	x8, #0x0
   48678:	csel	x8, x9, x8, lt  // lt = tstop
   4867c:	asr	x8, x8, #6
   48680:	ldr	x11, [x27]
   48684:	add	x1, x8, #0x1
   48688:	ldr	x8, [sp, #24]
   4868c:	ldur	x0, [x29, #-48]
   48690:	add	x3, x11, x8
   48694:	bl	c3d0 <mpfr_round_p@plt>
   48698:	cbnz	w0, 486f4 <mpfr_jn@@Base+0x838>
   4869c:	ldr	w8, [sp, #88]
   486a0:	cbnz	w8, 4910c <mpfr_jn@@Base+0x1250>
   486a4:	ldr	x21, [sp, #8]
   486a8:	mov	x8, #0xfffffffffffffeff    	// #-257
   486ac:	movk	x8, #0x7fff, lsl #48
   486b0:	sub	x8, x8, x25
   486b4:	cmp	x21, x8
   486b8:	mov	w22, #0x1                   	// #1
   486bc:	b.gt	486d8 <mpfr_jn@@Base+0x81c>
   486c0:	add	x25, x25, x21
   486c4:	cmp	x25, #0x0
   486c8:	cinc	x8, x25, lt  // lt = tstop
   486cc:	asr	x8, x8, #1
   486d0:	str	x8, [sp, #8]
   486d4:	b	480a0 <mpfr_jn@@Base+0x1e4>
   486d8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   486dc:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   486e0:	mov	w1, #0x106                 	// #262
   486e4:	add	x0, x0, #0xc26
   486e8:	add	x2, x2, #0x9c6
   486ec:	bl	cb90 <mpfr_assert_fail@plt>
   486f0:	b	486c0 <mpfr_jn@@Base+0x804>
   486f4:	tbz	w26, #0, 48720 <mpfr_jn@@Base+0x864>
   486f8:	ldr	x8, [sp, #96]
   486fc:	ldr	w8, [x8, #8]
   48700:	cmp	w8, #0x1
   48704:	b.ge	48720 <mpfr_jn@@Base+0x864>  // b.tcont
   48708:	ldr	w21, [sp, #60]
   4870c:	sub	x1, x29, #0x48
   48710:	mov	x0, x27
   48714:	mov	w2, w21
   48718:	bl	be20 <mpfr_neg@plt>
   4871c:	b	48738 <mpfr_jn@@Base+0x87c>
   48720:	ldr	w21, [sp, #60]
   48724:	ldur	w3, [x29, #-64]
   48728:	sub	x1, x29, #0x48
   4872c:	mov	x0, x27
   48730:	mov	w2, w21
   48734:	bl	c6f0 <mpfr_set4@plt>
   48738:	ldr	w19, [sp, #56]
   4873c:	ldr	x25, [sp, #64]
   48740:	ldr	x20, [sp, #48]
   48744:	mov	w24, w0
   48748:	sub	x0, x29, #0x48
   4874c:	mov	w22, #0x1                   	// #1
   48750:	bl	c110 <mpfr_clear@plt>
   48754:	cmp	w21, #0x5
   48758:	csinc	w24, w24, wzr, ne  // ne = any
   4875c:	cbnz	w24, 48ebc <mpfr_jn@@Base+0x1000>
   48760:	add	x8, sp, #0x68
   48764:	mov	w9, #0x20                  	// #32
   48768:	add	x10, x8, #0x10
   4876c:	stur	x9, [x29, #-104]
   48770:	stur	x9, [x29, #-136]
   48774:	stur	x9, [x29, #-168]
   48778:	add	x9, x8, #0x18
   4877c:	add	x8, x8, #0x20
   48780:	stur	w22, [x29, #-96]
   48784:	stur	w22, [x29, #-128]
   48788:	stp	xzr, x10, [sp, #104]
   4878c:	stur	x10, [x29, #-80]
   48790:	stur	x9, [x29, #-112]
   48794:	stur	x8, [x29, #-144]
   48798:	stur	w22, [x29, #-160]
   4879c:	cbz	x26, 48888 <mpfr_jn@@Base+0x9cc>
   487a0:	adrp	x1, 5e000 <mpfr_bases@@Base+0x4f8>
   487a4:	add	x1, x1, #0xadd
   487a8:	sub	x0, x29, #0x68
   487ac:	bl	c3a0 <mpfr_set_str_binary@plt>
   487b0:	ldr	x2, [sp, #96]
   487b4:	sub	x0, x29, #0x68
   487b8:	sub	x1, x29, #0x68
   487bc:	ldr	w8, [x2, #8]
   487c0:	cmp	w8, #0x1
   487c4:	b.lt	487d4 <mpfr_jn@@Base+0x918>  // b.tstop
   487c8:	mov	w3, #0x2                   	// #2
   487cc:	bl	be00 <mpfr_mul@plt>
   487d0:	b	487ec <mpfr_jn@@Base+0x930>
   487d4:	mov	w3, #0x3                   	// #3
   487d8:	bl	be00 <mpfr_mul@plt>
   487dc:	sub	x0, x29, #0x68
   487e0:	sub	x1, x29, #0x68
   487e4:	mov	w2, #0x2                   	// #2
   487e8:	bl	be20 <mpfr_neg@plt>
   487ec:	sub	x0, x29, #0x68
   487f0:	sub	x1, x29, #0x68
   487f4:	mov	w3, #0x2                   	// #2
   487f8:	mov	x2, x23
   487fc:	bl	ccc0 <mpfr_div_ui@plt>
   48800:	ldur	x8, [x29, #-88]
   48804:	neg	x9, x25
   48808:	cmp	x23, x9
   4880c:	b.ls	48874 <mpfr_jn@@Base+0x9b8>  // b.plast
   48810:	tbz	x8, #63, 48874 <mpfr_jn@@Base+0x9b8>
   48814:	ldr	x1, [sp, #104]
   48818:	cbz	x1, 48824 <mpfr_jn@@Base+0x968>
   4881c:	ldr	x0, [sp, #112]
   48820:	bl	cc80 <mpfr_free_func@plt>
   48824:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48828:	ldr	x1, [x0, #2656]
   4882c:	add	x0, x0, #0xa60
   48830:	blr	x1
   48834:	str	w19, [x28, x0]
   48838:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4883c:	ldr	x1, [x0, #2592]
   48840:	add	x0, x0, #0xa20
   48844:	blr	x1
   48848:	str	x25, [x28, x0]
   4884c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48850:	ldr	x1, [x0, #2624]
   48854:	add	x0, x0, #0xa40
   48858:	blr	x1
   4885c:	cmp	w21, #0x0
   48860:	csinc	w1, w21, wzr, ne  // ne = any
   48864:	str	x20, [x28, x0]
   48868:	tbnz	w26, #0, 48f2c <mpfr_jn@@Base+0x1070>
   4886c:	mov	w2, #0x1                   	// #1
   48870:	b	48f3c <mpfr_jn@@Base+0x1080>
   48874:	lsr	x9, x23, #62
   48878:	cbnz	x9, 48888 <mpfr_jn@@Base+0x9cc>
   4887c:	sdiv	x9, x25, x23
   48880:	cmp	x8, x9
   48884:	b.lt	48814 <mpfr_jn@@Base+0x958>  // b.tstop
   48888:	sub	x0, x29, #0x28
   4888c:	mov	w1, #0x20                  	// #32
   48890:	bl	cad0 <mpfr_init2@plt>
   48894:	sub	x0, x29, #0x48
   48898:	mov	w1, #0x20                  	// #32
   4889c:	bl	cad0 <mpfr_init2@plt>
   488a0:	sub	x0, x29, #0x28
   488a4:	cbz	x23, 48918 <mpfr_jn@@Base+0xa5c>
   488a8:	ldr	x1, [sp, #96]
   488ac:	mov	x2, x23
   488b0:	mov	w3, wzr
   488b4:	bl	ccc0 <mpfr_div_ui@plt>
   488b8:	sub	x0, x29, #0x28
   488bc:	sub	x1, x29, #0x28
   488c0:	mov	w2, wzr
   488c4:	bl	c450 <mpfr_sqr@plt>
   488c8:	sub	x0, x29, #0x28
   488cc:	sub	x1, x29, #0x28
   488d0:	mov	w2, #0x1                   	// #1
   488d4:	mov	w3, wzr
   488d8:	bl	c2d0 <mpfr_add_ui@plt>
   488dc:	sub	x0, x29, #0x28
   488e0:	sub	x1, x29, #0x28
   488e4:	mov	w2, wzr
   488e8:	bl	c990 <mpfr_sqrt@plt>
   488ec:	sub	x0, x29, #0x28
   488f0:	sub	x1, x29, #0x28
   488f4:	mov	w2, #0x1                   	// #1
   488f8:	mov	w3, wzr
   488fc:	bl	c580 <mpfr_sub_ui@plt>
   48900:	sub	x0, x29, #0x28
   48904:	sub	x1, x29, #0x28
   48908:	mov	x2, x23
   4890c:	mov	w3, wzr
   48910:	bl	bb10 <mpfr_mul_ui@plt>
   48914:	b	48928 <mpfr_jn@@Base+0xa6c>
   48918:	ldr	x1, [sp, #96]
   4891c:	mov	w3, #0x1                   	// #1
   48920:	mov	w2, wzr
   48924:	bl	c6f0 <mpfr_set4@plt>
   48928:	adrp	x1, 5e000 <mpfr_bases@@Base+0x4f8>
   4892c:	add	x1, x1, #0x919
   48930:	sub	x0, x29, #0x48
   48934:	bl	c3a0 <mpfr_set_str_binary@plt>
   48938:	sub	x0, x29, #0x28
   4893c:	sub	x1, x29, #0x28
   48940:	sub	x2, x29, #0x48
   48944:	mov	w3, wzr
   48948:	bl	be00 <mpfr_mul@plt>
   4894c:	sub	x0, x29, #0x28
   48950:	mov	w1, wzr
   48954:	bl	bf00 <mpfr_fits_ulong_p@plt>
   48958:	cbz	w0, 48970 <mpfr_jn@@Base+0xab4>
   4895c:	sub	x0, x29, #0x28
   48960:	mov	w1, wzr
   48964:	bl	bd50 <mpfr_get_ui@plt>
   48968:	mov	x20, x0
   4896c:	b	48974 <mpfr_jn@@Base+0xab8>
   48970:	mov	x20, #0xffffffffffffffff    	// #-1
   48974:	sub	x0, x29, #0x28
   48978:	bl	c110 <mpfr_clear@plt>
   4897c:	sub	x0, x29, #0x48
   48980:	bl	c110 <mpfr_clear@plt>
   48984:	ldr	x19, [x27]
   48988:	mov	x10, #0xfffffffffffffeff    	// #-257
   4898c:	movk	x10, #0x7fff, lsl #48
   48990:	sub	x8, x10, #0x81
   48994:	cmp	x20, x8
   48998:	str	x20, [sp, #32]
   4899c:	csel	x20, x20, x8, cc  // cc = lo, ul, last
   489a0:	cmp	x19, #0x1
   489a4:	b.eq	48ff4 <mpfr_jn@@Base+0x1138>  // b.none
   489a8:	mov	x8, x19
   489ac:	b.le	48ffc <mpfr_jn@@Base+0x1140>
   489b0:	sub	x8, x8, #0x1
   489b4:	clz	x8, x8
   489b8:	mov	w9, #0x80                  	// #128
   489bc:	sub	w8, w9, w8, lsl #1
   489c0:	sxtw	x8, w8
   489c4:	add	x9, x20, x19
   489c8:	add	x8, x9, x8
   489cc:	add	x8, x8, #0x3
   489d0:	ldr	x1, [sp, #104]
   489d4:	cmp	x8, x10
   489d8:	csel	x26, x8, x10, cc  // cc = lo, ul, last
   489dc:	cmp	w21, #0x0
   489e0:	cset	w8, eq  // eq = none
   489e4:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
   489e8:	mov	x22, #0xc000000000000001    	// #-4611686018427387903
   489ec:	str	x8, [sp, #88]
   489f0:	mov	w8, #0x40                  	// #64
   489f4:	str	wzr, [sp, #24]
   489f8:	str	x8, [sp, #40]
   489fc:	str	x27, [sp, #16]
   48a00:	sub	x8, x26, #0x1
   48a04:	add	x9, x26, #0x3e
   48a08:	cmp	x8, #0x0
   48a0c:	csel	x8, x9, x8, lt  // lt = tstop
   48a10:	asr	x8, x8, #6
   48a14:	add	x20, x8, #0x1
   48a18:	add	x8, x20, x20, lsl #1
   48a1c:	lsl	x2, x8, #3
   48a20:	str	x2, [sp, #104]
   48a24:	cbz	x1, 48a34 <mpfr_jn@@Base+0xb78>
   48a28:	ldr	x0, [sp, #112]
   48a2c:	bl	c260 <mpfr_reallocate_func@plt>
   48a30:	b	48a3c <mpfr_jn@@Base+0xb80>
   48a34:	mov	x0, x2
   48a38:	bl	cd50 <mpfr_allocate_func@plt>
   48a3c:	mov	w10, #0x1                   	// #1
   48a40:	add	x8, x0, x20, lsl #3
   48a44:	add	x9, x0, x20, lsl #4
   48a48:	str	x0, [sp, #112]
   48a4c:	stur	x0, [x29, #-80]
   48a50:	stur	w10, [x29, #-96]
   48a54:	stur	w10, [x29, #-128]
   48a58:	stur	x26, [x29, #-168]
   48a5c:	stp	x8, x26, [x29, #-112]
   48a60:	stp	x9, x26, [x29, #-144]
   48a64:	stur	w10, [x29, #-160]
   48a68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48a6c:	ldr	x1, [x0, #2656]
   48a70:	add	x0, x0, #0xa60
   48a74:	blr	x1
   48a78:	ldr	x20, [sp, #96]
   48a7c:	mov	x27, x0
   48a80:	str	wzr, [x28, x0]
   48a84:	sub	x0, x29, #0xa8
   48a88:	mov	x1, x20
   48a8c:	mov	x2, x23
   48a90:	mov	w3, wzr
   48a94:	bl	c020 <mpfr_pow_ui@plt>
   48a98:	sub	x0, x29, #0x68
   48a9c:	mov	x1, x20
   48aa0:	mov	x2, x20
   48aa4:	mov	w3, wzr
   48aa8:	bl	be00 <mpfr_mul@plt>
   48aac:	ldr	w8, [x28, x27]
   48ab0:	mov	w9, #0x2f                  	// #47
   48ab4:	sub	x0, x29, #0x68
   48ab8:	mov	w1, #0x2                   	// #2
   48abc:	and	w8, w8, w9
   48ac0:	str	w8, [x28, x27]
   48ac4:	bl	bd50 <mpfr_get_ui@plt>
   48ac8:	ldrb	w8, [x28, x27]
   48acc:	mov	x27, x0
   48ad0:	tbnz	w8, #4, 48d54 <mpfr_jn@@Base+0xe98>
   48ad4:	sub	x0, x29, #0x68
   48ad8:	sub	x1, x29, #0x68
   48adc:	mov	w2, #0x2                   	// #2
   48ae0:	mov	w3, wzr
   48ae4:	bl	c950 <mpfr_div_2ui@plt>
   48ae8:	sub	x0, x29, #0x88
   48aec:	mov	x1, x23
   48af0:	mov	w2, wzr
   48af4:	bl	c730 <mpfr_fac_ui@plt>
   48af8:	sub	x0, x29, #0xa8
   48afc:	sub	x1, x29, #0xa8
   48b00:	sub	x2, x29, #0x88
   48b04:	mov	w3, wzr
   48b08:	bl	c670 <mpfr_div@plt>
   48b0c:	ldr	x8, [sp, #72]
   48b10:	cbz	x8, 48b28 <mpfr_jn@@Base+0xc6c>
   48b14:	sub	x0, x29, #0xa8
   48b18:	sub	x1, x29, #0xa8
   48b1c:	mov	x2, x23
   48b20:	mov	w3, wzr
   48b24:	bl	c950 <mpfr_div_2ui@plt>
   48b28:	ldur	w3, [x29, #-160]
   48b2c:	sub	x0, x29, #0x88
   48b30:	sub	x1, x29, #0xa8
   48b34:	mov	w2, wzr
   48b38:	bl	c6f0 <mpfr_set4@plt>
   48b3c:	ldur	x8, [x29, #-120]
   48b40:	mov	x20, #0xfffffffffffffffe    	// #-2
   48b44:	mov	w25, #0x2                   	// #2
   48b48:	mov	w28, #0x1                   	// #1
   48b4c:	cmp	x8, x19
   48b50:	csel	x24, x22, x8, eq  // eq = none
   48b54:	sub	x0, x29, #0xa8
   48b58:	sub	x1, x29, #0xa8
   48b5c:	sub	x2, x29, #0x68
   48b60:	mov	w3, wzr
   48b64:	bl	be00 <mpfr_mul@plt>
   48b68:	sub	x0, x29, #0xa8
   48b6c:	sub	x1, x29, #0xa8
   48b70:	mov	w2, wzr
   48b74:	bl	be20 <mpfr_neg@plt>
   48b78:	cmp	x23, x20
   48b7c:	b.hi	48c2c <mpfr_jn@@Base+0xd70>  // b.pmore
   48b80:	add	x21, x23, x28
   48b84:	umulh	x8, x28, x21
   48b88:	cmp	xzr, x8
   48b8c:	b.eq	48bac <mpfr_jn@@Base+0xcf0>  // b.none
   48b90:	sub	x0, x29, #0xa8
   48b94:	sub	x1, x29, #0xa8
   48b98:	mov	x2, x28
   48b9c:	mov	w3, wzr
   48ba0:	bl	ccc0 <mpfr_div_ui@plt>
   48ba4:	mov	x2, x21
   48ba8:	b	48bb0 <mpfr_jn@@Base+0xcf4>
   48bac:	mul	x2, x21, x28
   48bb0:	sub	x0, x29, #0xa8
   48bb4:	sub	x1, x29, #0xa8
   48bb8:	mov	w3, wzr
   48bbc:	bl	ccc0 <mpfr_div_ui@plt>
   48bc0:	ldur	x8, [x29, #-120]
   48bc4:	ldur	x9, [x29, #-152]
   48bc8:	sub	x0, x29, #0x88
   48bcc:	sub	x1, x29, #0x88
   48bd0:	cmp	x8, x19
   48bd4:	csel	x8, x22, x9, eq  // eq = none
   48bd8:	cmp	x8, x24
   48bdc:	sub	x2, x29, #0xa8
   48be0:	mov	w3, wzr
   48be4:	csel	x24, x8, x24, gt
   48be8:	bl	c240 <mpfr_add@plt>
   48bec:	ldur	x8, [x29, #-120]
   48bf0:	ldur	x9, [x29, #-152]
   48bf4:	cmp	x8, x19
   48bf8:	csel	x8, x22, x8, eq  // eq = none
   48bfc:	add	x9, x9, x26
   48c00:	cmp	x8, x24
   48c04:	csel	x24, x8, x24, gt
   48c08:	cmp	x9, x8
   48c0c:	b.gt	48c1c <mpfr_jn@@Base+0xd60>
   48c10:	udiv	x9, x27, x25
   48c14:	cmp	x9, x21
   48c18:	b.cc	48c48 <mpfr_jn@@Base+0xd8c>  // b.lo, b.ul, b.last
   48c1c:	add	x28, x28, #0x1
   48c20:	add	x25, x25, #0x2
   48c24:	sub	x20, x20, #0x1
   48c28:	b	48b54 <mpfr_jn@@Base+0xc98>
   48c2c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48c30:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   48c34:	mov	w1, #0x10f                 	// #271
   48c38:	add	x0, x0, #0xacd
   48c3c:	add	x2, x2, #0xb38
   48c40:	bl	cb90 <mpfr_assert_fail@plt>
   48c44:	b	48b80 <mpfr_jn@@Base+0xcc4>
   48c48:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48c4c:	ldr	x1, [x0, #2656]
   48c50:	add	x0, x0, #0xa60
   48c54:	blr	x1
   48c58:	ldr	x9, [sp, #80]
   48c5c:	mov	x10, #0xfffffffffffffeff    	// #-257
   48c60:	cmn	x28, #0x1
   48c64:	sub	x21, x24, x8
   48c68:	ldr	w20, [x9, x0]
   48c6c:	movk	x10, #0x7fff, lsl #48
   48c70:	b.eq	48d70 <mpfr_jn@@Base+0xeb4>  // b.none
   48c74:	ldr	x27, [sp, #16]
   48c78:	ldr	x25, [sp, #64]
   48c7c:	cmn	x28, #0x2
   48c80:	b.eq	48d80 <mpfr_jn@@Base+0xec4>  // b.none
   48c84:	add	x8, x28, #0x1
   48c88:	clz	x8, x8
   48c8c:	mov	w9, #0x40                  	// #64
   48c90:	sub	w8, w9, w8
   48c94:	ldr	x28, [sp, #80]
   48c98:	lsl	w9, w8, #1
   48c9c:	add	w9, w9, #0x2
   48ca0:	sxtw	x24, w9
   48ca4:	tbnz	x21, #63, 48d30 <mpfr_jn@@Base+0xe74>
   48ca8:	cmn	w8, #0x1
   48cac:	b.lt	48d30 <mpfr_jn@@Base+0xe74>  // b.tstop
   48cb0:	sub	x8, x10, w9, sxtw
   48cb4:	cmp	x21, x8
   48cb8:	b.gt	48d30 <mpfr_jn@@Base+0xe74>
   48cbc:	ldur	x8, [x29, #-120]
   48cc0:	add	x9, x10, #0x105
   48cc4:	add	x21, x21, x24
   48cc8:	cmp	x8, x9
   48ccc:	b.lt	48dac <mpfr_jn@@Base+0xef0>  // b.tstop
   48cd0:	ldur	x8, [x29, #-136]
   48cd4:	ldr	x9, [x27]
   48cd8:	ldur	x0, [x29, #-112]
   48cdc:	sub	x2, x26, x21
   48ce0:	sub	x10, x8, #0x1
   48ce4:	add	x8, x8, #0x3e
   48ce8:	cmp	x10, #0x0
   48cec:	csel	x8, x8, x10, lt  // lt = tstop
   48cf0:	asr	x8, x8, #6
   48cf4:	add	x1, x8, #0x1
   48cf8:	ldr	x8, [sp, #88]
   48cfc:	add	x3, x9, x8
   48d00:	bl	c3d0 <mpfr_round_p@plt>
   48d04:	cbz	w0, 48da4 <mpfr_jn@@Base+0xee8>
   48d08:	tst	w20, #0x3
   48d0c:	b.eq	48e60 <mpfr_jn@@Base+0xfa4>  // b.none
   48d10:	ldr	x20, [sp, #32]
   48d14:	ldr	w8, [sp, #24]
   48d18:	cbnz	w8, 48e44 <mpfr_jn@@Base+0xf88>
   48d1c:	mov	x10, #0xfffffffffffffeff    	// #-257
   48d20:	mov	w8, #0x1                   	// #1
   48d24:	movk	x10, #0x7fff, lsl #48
   48d28:	str	w8, [sp, #24]
   48d2c:	b	48db0 <mpfr_jn@@Base+0xef4>
   48d30:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48d34:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   48d38:	mov	w1, #0x12b                 	// #299
   48d3c:	add	x0, x0, #0xacd
   48d40:	add	x2, x2, #0xb70
   48d44:	bl	cb90 <mpfr_assert_fail@plt>
   48d48:	mov	x10, #0xfffffffffffffeff    	// #-257
   48d4c:	movk	x10, #0x7fff, lsl #48
   48d50:	b	48cbc <mpfr_jn@@Base+0xe00>
   48d54:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48d58:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   48d5c:	mov	w1, #0xfc                  	// #252
   48d60:	add	x0, x0, #0xacd
   48d64:	add	x2, x2, #0xb19
   48d68:	bl	cb90 <mpfr_assert_fail@plt>
   48d6c:	b	48ad4 <mpfr_jn@@Base+0xc18>
   48d70:	ldr	x27, [sp, #16]
   48d74:	ldr	x25, [sp, #64]
   48d78:	mov	w8, wzr
   48d7c:	b	48c94 <mpfr_jn@@Base+0xdd8>
   48d80:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48d84:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   48d88:	mov	w1, #0x128                 	// #296
   48d8c:	add	x0, x0, #0xacd
   48d90:	add	x2, x2, #0xb64
   48d94:	bl	cb90 <mpfr_assert_fail@plt>
   48d98:	mov	x10, #0xfffffffffffffeff    	// #-257
   48d9c:	movk	x10, #0x7fff, lsl #48
   48da0:	b	48c84 <mpfr_jn@@Base+0xdc8>
   48da4:	mov	x10, #0xfffffffffffffeff    	// #-257
   48da8:	movk	x10, #0x7fff, lsl #48
   48dac:	ldr	x20, [sp, #32]
   48db0:	subs	x20, x21, x20
   48db4:	b.ls	48dc8 <mpfr_jn@@Base+0xf0c>  // b.plast
   48db8:	sub	x8, x10, x26
   48dbc:	cmp	x20, x8
   48dc0:	b.hi	48e20 <mpfr_jn@@Base+0xf64>  // b.pmore
   48dc4:	add	x26, x20, x26
   48dc8:	ldr	x20, [sp, #40]
   48dcc:	sub	x8, x10, x26
   48dd0:	cmp	x20, x8
   48dd4:	b.gt	48dfc <mpfr_jn@@Base+0xf40>
   48dd8:	add	x26, x26, x20
   48ddc:	ldr	x1, [sp, #104]
   48de0:	cmp	x26, #0x0
   48de4:	cinc	x8, x26, lt  // lt = tstop
   48de8:	cmp	x26, x10
   48dec:	asr	x8, x8, #1
   48df0:	str	x8, [sp, #40]
   48df4:	b.le	48a00 <mpfr_jn@@Base+0xb44>
   48df8:	b	49174 <mpfr_jn@@Base+0x12b8>
   48dfc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48e00:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   48e04:	mov	w1, #0x13f                 	// #319
   48e08:	add	x0, x0, #0xacd
   48e0c:	add	x2, x2, #0x922
   48e10:	bl	cb90 <mpfr_assert_fail@plt>
   48e14:	mov	x10, #0xfffffffffffffeff    	// #-257
   48e18:	movk	x10, #0x7fff, lsl #48
   48e1c:	b	48dd8 <mpfr_jn@@Base+0xf1c>
   48e20:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48e24:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   48e28:	mov	w1, #0x13e                 	// #318
   48e2c:	add	x0, x0, #0xacd
   48e30:	add	x2, x2, #0xbdc
   48e34:	bl	cb90 <mpfr_assert_fail@plt>
   48e38:	mov	x10, #0xfffffffffffffeff    	// #-257
   48e3c:	movk	x10, #0x7fff, lsl #48
   48e40:	b	48dc4 <mpfr_jn@@Base+0xf08>
   48e44:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48e48:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   48e4c:	mov	w1, #0x137                 	// #311
   48e50:	add	x0, x0, #0xacd
   48e54:	add	x2, x2, #0xbd0
   48e58:	bl	cb90 <mpfr_assert_fail@plt>
   48e5c:	b	48d1c <mpfr_jn@@Base+0xe60>
   48e60:	ldr	x8, [sp, #72]
   48e64:	ldr	x20, [sp, #48]
   48e68:	mvn	x8, x8
   48e6c:	tst	x8, #0x8000000000000001
   48e70:	b.ne	48e8c <mpfr_jn@@Base+0xfd0>  // b.any
   48e74:	ldr	w21, [sp, #60]
   48e78:	sub	x1, x29, #0x88
   48e7c:	mov	x0, x27
   48e80:	mov	w2, w21
   48e84:	bl	be20 <mpfr_neg@plt>
   48e88:	b	48ea4 <mpfr_jn@@Base+0xfe8>
   48e8c:	ldr	w21, [sp, #60]
   48e90:	ldur	w3, [x29, #-128]
   48e94:	sub	x1, x29, #0x88
   48e98:	mov	x0, x27
   48e9c:	mov	w2, w21
   48ea0:	bl	c6f0 <mpfr_set4@plt>
   48ea4:	ldr	w19, [sp, #56]
   48ea8:	ldr	x1, [sp, #104]
   48eac:	mov	w24, w0
   48eb0:	cbz	x1, 48ebc <mpfr_jn@@Base+0x1000>
   48eb4:	ldr	x0, [sp, #112]
   48eb8:	bl	cc80 <mpfr_free_func@plt>
   48ebc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48ec0:	ldr	x1, [x0, #2656]
   48ec4:	add	x0, x0, #0xa60
   48ec8:	blr	x1
   48ecc:	str	w19, [x28, x0]
   48ed0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48ed4:	ldr	x1, [x0, #2592]
   48ed8:	add	x0, x0, #0xa20
   48edc:	blr	x1
   48ee0:	str	x25, [x28, x0]
   48ee4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48ee8:	ldr	x1, [x0, #2624]
   48eec:	add	x0, x0, #0xa40
   48ef0:	blr	x1
   48ef4:	str	x20, [x28, x0]
   48ef8:	ldr	x8, [x27, #16]
   48efc:	cmp	x8, x20
   48f00:	b.gt	48fb8 <mpfr_jn@@Base+0x10fc>
   48f04:	cmp	x8, x25
   48f08:	b.lt	48fb8 <mpfr_jn@@Base+0x10fc>  // b.tstop
   48f0c:	cbz	w24, 48f48 <mpfr_jn@@Base+0x108c>
   48f10:	orr	w8, w19, #0x8
   48f14:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48f18:	ldr	x1, [x0, #2656]
   48f1c:	add	x0, x0, #0xa60
   48f20:	blr	x1
   48f24:	str	w8, [x28, x0]
   48f28:	b	48f48 <mpfr_jn@@Base+0x108c>
   48f2c:	ldr	x8, [sp, #96]
   48f30:	cmp	x26, #0x0
   48f34:	ldr	w8, [x8, #8]
   48f38:	cneg	w2, w8, le
   48f3c:	mov	x0, x27
   48f40:	bl	c420 <mpfr_underflow@plt>
   48f44:	mov	w24, w0
   48f48:	mov	w0, w24
   48f4c:	add	sp, sp, #0x220
   48f50:	ldp	x20, x19, [sp, #80]
   48f54:	ldp	x22, x21, [sp, #64]
   48f58:	ldp	x24, x23, [sp, #48]
   48f5c:	ldp	x26, x25, [sp, #32]
   48f60:	ldp	x28, x27, [sp, #16]
   48f64:	ldp	x29, x30, [sp], #96
   48f68:	ret
   48f6c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   48f70:	cmp	x9, x8
   48f74:	b.eq	4902c <mpfr_jn@@Base+0x1170>  // b.none
   48f78:	mov	x8, #0x2                   	// #2
   48f7c:	movk	x8, #0x8000, lsl #48
   48f80:	cmp	x9, x8
   48f84:	b.ne	49024 <mpfr_jn@@Base+0x1168>  // b.any
   48f88:	add	x8, x10, #0x103
   48f8c:	str	x8, [x27, #16]
   48f90:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   48f94:	ldr	x1, [x0, #2656]
   48f98:	add	x0, x0, #0xa60
   48f9c:	blr	x1
   48fa0:	mrs	x8, tpidr_el0
   48fa4:	ldr	w9, [x8, x0]
   48fa8:	mov	w24, wzr
   48fac:	orr	w9, w9, #0x4
   48fb0:	str	w9, [x8, x0]
   48fb4:	b	48f48 <mpfr_jn@@Base+0x108c>
   48fb8:	mov	x0, x27
   48fbc:	mov	w1, w24
   48fc0:	mov	w2, w21
   48fc4:	bl	cb80 <mpfr_check_range@plt>
   48fc8:	b	48f44 <mpfr_jn@@Base+0x1088>
   48fcc:	mov	x8, xzr
   48fd0:	b	48064 <mpfr_jn@@Base+0x1a8>
   48fd4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   48fd8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   48fdc:	add	x0, x0, #0xc26
   48fe0:	add	x2, x2, #0xaff
   48fe4:	mov	w1, #0x36                  	// #54
   48fe8:	bl	cb90 <mpfr_assert_fail@plt>
   48fec:	ldr	x8, [x27]
   48ff0:	b	48054 <mpfr_jn@@Base+0x198>
   48ff4:	mov	x8, xzr
   48ff8:	b	489c4 <mpfr_jn@@Base+0xb08>
   48ffc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   49000:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   49004:	add	x0, x0, #0xacd
   49008:	add	x2, x2, #0xaff
   4900c:	mov	w1, #0xed                  	// #237
   49010:	bl	cb90 <mpfr_assert_fail@plt>
   49014:	ldr	x8, [x27]
   49018:	mov	x10, #0xfffffffffffffeff    	// #-257
   4901c:	movk	x10, #0x7fff, lsl #48
   49020:	b	489b0 <mpfr_jn@@Base+0xaf4>
   49024:	cbz	x26, 49044 <mpfr_jn@@Base+0x1188>
   49028:	tbnz	w23, #0, 490ec <mpfr_jn@@Base+0x1230>
   4902c:	mov	w8, #0x1                   	// #1
   49030:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   49034:	mov	w24, wzr
   49038:	str	w8, [x27, #8]
   4903c:	str	x9, [x27, #16]
   49040:	b	48f48 <mpfr_jn@@Base+0x108c>
   49044:	mov	w1, #0x1                   	// #1
   49048:	mov	x0, x27
   4904c:	mov	x2, xzr
   49050:	mov	w3, w21
   49054:	bl	c640 <mpfr_set_ui_2exp@plt>
   49058:	b	48f44 <mpfr_jn@@Base+0x1088>
   4905c:	mov	x0, x27
   49060:	mov	x1, x11
   49064:	mov	w3, wzr
   49068:	mov	w4, w21
   4906c:	bl	c590 <mpfr_round_near_x@plt>
   49070:	ldr	x11, [sp, #96]
   49074:	cbz	w0, 47fe4 <mpfr_jn@@Base+0x128>
   49078:	mov	w24, w0
   4907c:	mov	w2, #0x1                   	// #1
   49080:	mov	x0, x27
   49084:	mov	x1, x27
   49088:	mov	w3, w21
   4908c:	mov	x26, x20
   49090:	mov	w23, w19
   49094:	mov	x19, x27
   49098:	bl	c950 <mpfr_div_2ui@plt>
   4909c:	mov	w22, w0
   490a0:	mov	w20, w21
   490a4:	cbnz	w21, 490b8 <mpfr_jn@@Base+0x11fc>
   490a8:	ldr	x8, [x19, #16]
   490ac:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   490b0:	cmp	x8, x9
   490b4:	b.eq	49144 <mpfr_jn@@Base+0x1288>  // b.none
   490b8:	cmp	w22, #0x0
   490bc:	csel	w24, w24, w22, eq  // eq = none
   490c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   490c4:	ldr	x1, [x0, #2656]
   490c8:	add	x0, x0, #0xa60
   490cc:	blr	x1
   490d0:	ldr	w8, [x28, x0]
   490d4:	mov	x27, x19
   490d8:	mov	w21, w20
   490dc:	mov	x20, x26
   490e0:	orr	w23, w8, w23
   490e4:	mov	w19, w23
   490e8:	b	48ebc <mpfr_jn@@Base+0x1000>
   490ec:	cmp	x26, #0x1
   490f0:	b.lt	49130 <mpfr_jn@@Base+0x1274>  // b.tstop
   490f4:	ldr	x1, [sp, #96]
   490f8:	mov	x0, x27
   490fc:	mov	w2, w21
   49100:	ldr	w3, [x1, #8]
   49104:	bl	c6f0 <mpfr_set4@plt>
   49108:	b	48f44 <mpfr_jn@@Base+0x1088>
   4910c:	sub	x0, x29, #0x48
   49110:	bl	c110 <mpfr_clear@plt>
   49114:	ldp	w19, w21, [sp, #56]
   49118:	ldr	x25, [sp, #64]
   4911c:	ldr	x20, [sp, #48]
   49120:	mov	w24, wzr
   49124:	mov	w22, #0x1                   	// #1
   49128:	cbnz	w24, 48ebc <mpfr_jn@@Base+0x1000>
   4912c:	b	48760 <mpfr_jn@@Base+0x8a4>
   49130:	ldr	x1, [sp, #96]
   49134:	mov	x0, x27
   49138:	mov	w2, w21
   4913c:	bl	be20 <mpfr_neg@plt>
   49140:	b	48f44 <mpfr_jn@@Base+0x1088>
   49144:	cbz	w22, 49178 <mpfr_jn@@Base+0x12bc>
   49148:	ldr	x8, [sp, #96]
   4914c:	cmp	w24, #0x0
   49150:	cset	w9, gt
   49154:	csinv	w9, w9, wzr, ge  // ge = tcont
   49158:	ldr	w8, [x8, #8]
   4915c:	cmp	w9, w8
   49160:	b.eq	490b8 <mpfr_jn@@Base+0x11fc>  // b.none
   49164:	mov	x0, x19
   49168:	bl	c6c0 <mpfr_nexttoinf@plt>
   4916c:	neg	w24, w22
   49170:	b	490c0 <mpfr_jn@@Base+0x1204>
   49174:	bl	c940 <mpfr_abort_prec_max@plt>
   49178:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4917c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   49180:	add	x0, x0, #0xacd
   49184:	add	x2, x2, #0xad2
   49188:	mov	w1, #0xa6                  	// #166
   4918c:	bl	cb90 <mpfr_assert_fail@plt>
   49190:	b	49148 <mpfr_jn@@Base+0x128c>

0000000000049194 <mpfr_j1@@Base>:
   49194:	mov	w3, w2
   49198:	mov	x2, x1
   4919c:	mov	w1, #0x1                   	// #1
   491a0:	b	cc60 <mpfr_jn@plt>

00000000000491a4 <mpfr_y0@@Base>:
   491a4:	mov	w3, w2
   491a8:	mov	x2, x1
   491ac:	mov	x1, xzr
   491b0:	b	c610 <mpfr_yn@plt>

00000000000491b4 <mpfr_yn@@Base>:
   491b4:	sub	sp, sp, #0x1f0
   491b8:	stp	x29, x30, [sp, #400]
   491bc:	stp	x28, x27, [sp, #416]
   491c0:	stp	x26, x25, [sp, #432]
   491c4:	stp	x24, x23, [sp, #448]
   491c8:	stp	x22, x21, [sp, #464]
   491cc:	stp	x20, x19, [sp, #480]
   491d0:	ldr	x9, [x2, #16]
   491d4:	mov	x19, #0x4                   	// #4
   491d8:	movk	x19, #0x8000, lsl #48
   491dc:	cmp	x1, #0x0
   491e0:	mov	x22, x2
   491e4:	mov	x20, x1
   491e8:	cneg	x23, x1, mi  // mi = first
   491ec:	cmp	x9, x19
   491f0:	mov	x27, x0
   491f4:	add	x29, sp, #0x190
   491f8:	b.lt	4a538 <mpfr_yn@@Base+0x1384>  // b.tstop
   491fc:	ldr	w8, [x22, #8]
   49200:	tbnz	w8, #31, 4a620 <mpfr_yn@@Base+0x146c>
   49204:	mov	w26, w3
   49208:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4920c:	ldr	x1, [x0, #2656]
   49210:	add	x0, x0, #0xa60
   49214:	blr	x1
   49218:	mrs	x28, tpidr_el0
   4921c:	ldr	w8, [x28, x0]
   49220:	str	w8, [sp, #76]
   49224:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   49228:	ldr	x1, [x0, #2592]
   4922c:	add	x0, x0, #0xa20
   49230:	blr	x1
   49234:	ldr	x10, [x28, x0]
   49238:	mov	x8, x0
   4923c:	str	x10, [sp, #64]
   49240:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   49244:	ldr	x1, [x0, #2624]
   49248:	add	x0, x0, #0xa40
   4924c:	blr	x1
   49250:	ldr	x10, [x28, x0]
   49254:	str	x10, [sp, #56]
   49258:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4925c:	str	x10, [x28, x8]
   49260:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   49264:	str	x8, [x28, x0]
   49268:	cbz	x20, 49388 <mpfr_yn@@Base+0x1d4>
   4926c:	cmp	x20, #0x1
   49270:	b.ne	49614 <mpfr_yn@@Base+0x460>  // b.any
   49274:	ldr	x8, [x27]
   49278:	add	x9, x9, #0x1
   4927c:	neg	x10, x8
   49280:	cmp	x9, x10
   49284:	b.ge	49614 <mpfr_yn@@Base+0x460>  // b.tcont
   49288:	add	x24, x8, #0xa
   4928c:	sub	x0, x29, #0x28
   49290:	mov	x1, x24
   49294:	bl	cad0 <mpfr_init2@plt>
   49298:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4929c:	ldr	x1, [x0, #2704]
   492a0:	add	x0, x0, #0xa90
   492a4:	blr	x1
   492a8:	add	x1, x28, x0
   492ac:	sub	x0, x29, #0x28
   492b0:	mov	w2, #0x2                   	// #2
   492b4:	bl	c3e0 <mpfr_cache@plt>
   492b8:	sub	x0, x29, #0x28
   492bc:	sub	x1, x29, #0x28
   492c0:	mov	w3, #0x2                   	// #2
   492c4:	mov	x2, x22
   492c8:	bl	be00 <mpfr_mul@plt>
   492cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   492d0:	ldr	x1, [x0, #2656]
   492d4:	add	x0, x0, #0xa60
   492d8:	blr	x1
   492dc:	mov	x25, x0
   492e0:	str	wzr, [x28, x0]
   492e4:	sub	x0, x29, #0x28
   492e8:	sub	x2, x29, #0x28
   492ec:	mov	w1, #0x2                   	// #2
   492f0:	mov	w3, #0x1                   	// #1
   492f4:	bl	c350 <mpfr_ui_div@plt>
   492f8:	ldrb	w8, [x28, x25]
   492fc:	tbnz	w8, #1, 4a670 <mpfr_yn@@Base+0x14bc>
   49300:	sub	x0, x29, #0x28
   49304:	sub	x1, x29, #0x28
   49308:	mov	w2, wzr
   4930c:	bl	be20 <mpfr_neg@plt>
   49310:	ldur	x8, [x29, #-24]
   49314:	cmp	x8, x19
   49318:	b.lt	4960c <mpfr_yn@@Base+0x458>  // b.tstop
   4931c:	ldur	x9, [x29, #-40]
   49320:	add	x10, x8, #0x2
   49324:	ldur	x0, [x29, #-16]
   49328:	cmp	x10, x9
   4932c:	mov	w10, #0x3                   	// #3
   49330:	sub	x8, x9, x8
   49334:	csinc	x8, x10, x8, ge  // ge = tcont
   49338:	sub	x10, x9, #0x1
   4933c:	add	x9, x9, #0x3e
   49340:	cmp	x10, #0x0
   49344:	csel	x9, x9, x10, lt  // lt = tstop
   49348:	ldr	x10, [x27]
   4934c:	sub	x2, x24, x8
   49350:	cmp	w26, #0x0
   49354:	asr	x8, x9, #6
   49358:	add	x1, x8, #0x1
   4935c:	cinc	x3, x10, eq  // eq = none
   49360:	bl	c3d0 <mpfr_round_p@plt>
   49364:	cbz	w0, 4960c <mpfr_yn@@Base+0x458>
   49368:	ldur	w3, [x29, #-32]
   4936c:	sub	x1, x29, #0x28
   49370:	mov	x0, x27
   49374:	mov	w2, w26
   49378:	bl	c6f0 <mpfr_set4@plt>
   4937c:	mov	w24, w0
   49380:	sub	x0, x29, #0x28
   49384:	b	495e4 <mpfr_yn@@Base+0x430>
   49388:	ldr	x8, [x27]
   4938c:	cmp	x8, #0x0
   49390:	cinc	x10, x8, lt  // lt = tstop
   49394:	neg	x10, x10, asr #1
   49398:	cmp	x9, x10
   4939c:	b.ge	49614 <mpfr_yn@@Base+0x460>  // b.tcont
   493a0:	add	x24, x8, #0xa
   493a4:	sub	x0, x29, #0x28
   493a8:	mov	x1, x24
   493ac:	bl	cad0 <mpfr_init2@plt>
   493b0:	sub	x0, x29, #0x48
   493b4:	mov	x1, x24
   493b8:	bl	cad0 <mpfr_init2@plt>
   493bc:	sub	x0, x29, #0x68
   493c0:	mov	x1, x24
   493c4:	bl	cad0 <mpfr_init2@plt>
   493c8:	sub	x0, x29, #0x88
   493cc:	mov	x1, x24
   493d0:	bl	cad0 <mpfr_init2@plt>
   493d4:	sub	x0, x29, #0x88
   493d8:	mov	w2, #0x3                   	// #3
   493dc:	mov	x1, x22
   493e0:	bl	c130 <mpfr_log@plt>
   493e4:	ldur	w3, [x29, #-128]
   493e8:	sub	x0, x29, #0x48
   493ec:	sub	x1, x29, #0x88
   493f0:	mov	w2, #0x2                   	// #2
   493f4:	bl	c6f0 <mpfr_set4@plt>
   493f8:	sub	x0, x29, #0x48
   493fc:	bl	c1c0 <mpfr_nextabove@plt>
   49400:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   49404:	ldr	x1, [x0, #2688]
   49408:	add	x0, x0, #0xa80
   4940c:	blr	x1
   49410:	add	x1, x28, x0
   49414:	sub	x0, x29, #0x68
   49418:	mov	w2, #0x3                   	// #3
   4941c:	bl	c3e0 <mpfr_cache@plt>
   49420:	sub	x0, x29, #0x28
   49424:	sub	x1, x29, #0x88
   49428:	sub	x2, x29, #0x68
   4942c:	mov	w3, #0x3                   	// #3
   49430:	bl	c240 <mpfr_add@plt>
   49434:	sub	x0, x29, #0x68
   49438:	bl	c1c0 <mpfr_nextabove@plt>
   4943c:	sub	x0, x29, #0x48
   49440:	sub	x1, x29, #0x48
   49444:	sub	x2, x29, #0x68
   49448:	mov	w3, #0x2                   	// #2
   4944c:	bl	c240 <mpfr_add@plt>
   49450:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   49454:	ldr	x1, [x0, #2640]
   49458:	add	x0, x0, #0xa50
   4945c:	blr	x1
   49460:	add	x1, x28, x0
   49464:	sub	x0, x29, #0x68
   49468:	mov	w2, #0x2                   	// #2
   4946c:	bl	c3e0 <mpfr_cache@plt>
   49470:	sub	x0, x29, #0x28
   49474:	sub	x1, x29, #0x28
   49478:	sub	x2, x29, #0x68
   4947c:	mov	w3, #0x3                   	// #3
   49480:	bl	bc20 <mpfr_sub@plt>
   49484:	sub	x0, x29, #0x68
   49488:	bl	be80 <mpfr_nextbelow@plt>
   4948c:	sub	x0, x29, #0x48
   49490:	sub	x1, x29, #0x48
   49494:	sub	x2, x29, #0x68
   49498:	mov	w3, #0x2                   	// #2
   4949c:	bl	bc20 <mpfr_sub@plt>
   494a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   494a4:	ldr	x1, [x0, #2704]
   494a8:	add	x0, x0, #0xa90
   494ac:	blr	x1
   494b0:	add	x1, x28, x0
   494b4:	sub	x0, x29, #0x68
   494b8:	mov	w2, #0x2                   	// #2
   494bc:	bl	c3e0 <mpfr_cache@plt>
   494c0:	sub	x0, x29, #0x28
   494c4:	sub	x1, x29, #0x28
   494c8:	sub	x2, x29, #0x68
   494cc:	mov	w3, #0x3                   	// #3
   494d0:	bl	c670 <mpfr_div@plt>
   494d4:	sub	x0, x29, #0x68
   494d8:	bl	be80 <mpfr_nextbelow@plt>
   494dc:	sub	x0, x29, #0x48
   494e0:	sub	x1, x29, #0x48
   494e4:	sub	x2, x29, #0x68
   494e8:	mov	w3, #0x3                   	// #3
   494ec:	bl	c670 <mpfr_div@plt>
   494f0:	sub	x0, x29, #0x28
   494f4:	sub	x1, x29, #0x28
   494f8:	mov	w2, #0x1                   	// #1
   494fc:	mov	w3, #0x3                   	// #3
   49500:	bl	c320 <mpfr_mul_2ui@plt>
   49504:	sub	x0, x29, #0x48
   49508:	sub	x1, x29, #0x48
   4950c:	mov	w2, #0x1                   	// #1
   49510:	mov	w3, #0x2                   	// #2
   49514:	bl	c320 <mpfr_mul_2ui@plt>
   49518:	sub	x0, x29, #0x68
   4951c:	mov	w3, #0x2                   	// #2
   49520:	mov	x1, x22
   49524:	mov	x2, x22
   49528:	bl	be00 <mpfr_mul@plt>
   4952c:	sub	x0, x29, #0x68
   49530:	sub	x1, x29, #0x68
   49534:	mov	w2, #0x3                   	// #3
   49538:	bl	be20 <mpfr_neg@plt>
   4953c:	sub	x0, x29, #0x68
   49540:	sub	x1, x29, #0x68
   49544:	mov	w2, #0x1                   	// #1
   49548:	mov	w3, #0x3                   	// #3
   4954c:	bl	c950 <mpfr_div_2ui@plt>
   49550:	sub	x0, x29, #0x68
   49554:	sub	x1, x29, #0x68
   49558:	sub	x2, x29, #0x88
   4955c:	mov	w3, #0x2                   	// #2
   49560:	bl	be00 <mpfr_mul@plt>
   49564:	sub	x0, x29, #0x48
   49568:	sub	x1, x29, #0x48
   4956c:	sub	x2, x29, #0x68
   49570:	mov	w3, #0x2                   	// #2
   49574:	bl	c240 <mpfr_add@plt>
   49578:	ldr	x1, [x27]
   4957c:	sub	x0, x29, #0x28
   49580:	mov	w2, w26
   49584:	bl	c9d0 <mpfr_prec_round@plt>
   49588:	ldr	x1, [x27]
   4958c:	mov	w24, w0
   49590:	sub	x0, x29, #0x48
   49594:	mov	w2, w26
   49598:	bl	c9d0 <mpfr_prec_round@plt>
   4959c:	cmp	w24, w0
   495a0:	b.ne	495ec <mpfr_yn@@Base+0x438>  // b.any
   495a4:	sub	x0, x29, #0x28
   495a8:	sub	x1, x29, #0x48
   495ac:	bl	cab0 <mpfr_equal_p@plt>
   495b0:	cbz	w0, 495ec <mpfr_yn@@Base+0x438>
   495b4:	ldur	w3, [x29, #-64]
   495b8:	sub	x1, x29, #0x48
   495bc:	mov	x0, x27
   495c0:	mov	w2, w26
   495c4:	bl	c6f0 <mpfr_set4@plt>
   495c8:	sub	x0, x29, #0x28
   495cc:	bl	c110 <mpfr_clear@plt>
   495d0:	sub	x0, x29, #0x48
   495d4:	bl	c110 <mpfr_clear@plt>
   495d8:	sub	x0, x29, #0x68
   495dc:	bl	c110 <mpfr_clear@plt>
   495e0:	sub	x0, x29, #0x88
   495e4:	bl	c110 <mpfr_clear@plt>
   495e8:	b	4a4bc <mpfr_yn@@Base+0x1308>
   495ec:	sub	x0, x29, #0x28
   495f0:	bl	c110 <mpfr_clear@plt>
   495f4:	sub	x0, x29, #0x48
   495f8:	bl	c110 <mpfr_clear@plt>
   495fc:	sub	x0, x29, #0x68
   49600:	bl	c110 <mpfr_clear@plt>
   49604:	sub	x0, x29, #0x88
   49608:	b	49610 <mpfr_yn@@Base+0x45c>
   4960c:	sub	x0, x29, #0x28
   49610:	bl	c110 <mpfr_clear@plt>
   49614:	ldr	x8, [x27]
   49618:	mov	x0, x22
   4961c:	mov	x2, xzr
   49620:	cmp	x8, #0x0
   49624:	cinc	x8, x8, lt  // lt = tstop
   49628:	asr	x8, x8, #1
   4962c:	add	x1, x8, #0x3
   49630:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   49634:	cmp	w0, #0x1
   49638:	stp	x28, x20, [sp, #80]
   4963c:	str	w26, [sp, #52]
   49640:	b.lt	49d50 <mpfr_yn@@Base+0xb9c>  // b.tstop
   49644:	sub	x0, x29, #0x48
   49648:	bl	bc80 <mpfr_init@plt>
   4964c:	ldr	x19, [x27]
   49650:	cmp	x19, #0x1
   49654:	b.eq	4a5ac <mpfr_yn@@Base+0x13f8>  // b.none
   49658:	mov	x8, x19
   4965c:	b.le	4a5b4 <mpfr_yn@@Base+0x1400>
   49660:	sub	x8, x8, #0x1
   49664:	clz	x8, x8
   49668:	mov	w9, #0x40                  	// #64
   4966c:	sub	x8, x9, x8
   49670:	add	x8, x19, x8
   49674:	cmp	w26, #0x0
   49678:	lsl	x9, x20, #1
   4967c:	mov	w24, #0x1                   	// #1
   49680:	mov	w10, #0x40                  	// #64
   49684:	add	x25, x8, #0x4
   49688:	cset	w8, eq  // eq = none
   4968c:	mov	w21, #0x1                   	// #1
   49690:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   49694:	mov	w19, #0x2                   	// #2
   49698:	stp	x10, x8, [sp, #16]
   4969c:	bfi	x24, x20, #1, #63
   496a0:	sub	x8, x9, #0x1
   496a4:	stp	x8, x27, [sp, #32]
   496a8:	str	x24, [sp, #8]
   496ac:	sub	x0, x29, #0x48
   496b0:	mov	x1, x25
   496b4:	bl	bf80 <mpfr_set_prec@plt>
   496b8:	sub	x0, x29, #0x28
   496bc:	mov	x1, x25
   496c0:	bl	cad0 <mpfr_init2@plt>
   496c4:	sub	x0, x29, #0x68
   496c8:	mov	x1, x25
   496cc:	bl	cad0 <mpfr_init2@plt>
   496d0:	sub	x0, x29, #0x88
   496d4:	mov	x1, x25
   496d8:	bl	cad0 <mpfr_init2@plt>
   496dc:	sub	x0, x29, #0xa8
   496e0:	mov	x1, x25
   496e4:	bl	cad0 <mpfr_init2@plt>
   496e8:	add	x0, sp, #0xc8
   496ec:	mov	x1, x25
   496f0:	bl	cad0 <mpfr_init2@plt>
   496f4:	add	x0, sp, #0xa8
   496f8:	mov	w1, #0x1f                  	// #31
   496fc:	bl	cad0 <mpfr_init2@plt>
   49700:	add	x0, sp, #0x88
   49704:	mov	w1, #0x1f                  	// #31
   49708:	bl	cad0 <mpfr_init2@plt>
   4970c:	add	x0, sp, #0x68
   49710:	mov	w1, #0x1f                  	// #31
   49714:	bl	cad0 <mpfr_init2@plt>
   49718:	sub	x0, x29, #0x28
   4971c:	sub	x1, x29, #0x48
   49720:	mov	x2, x22
   49724:	mov	w3, wzr
   49728:	bl	cca0 <mpfr_sin_cos@plt>
   4972c:	ldr	w8, [x22, #8]
   49730:	tbz	w8, #31, 49744 <mpfr_yn@@Base+0x590>
   49734:	sub	x0, x29, #0x28
   49738:	sub	x1, x29, #0x28
   4973c:	mov	w2, wzr
   49740:	bl	be20 <mpfr_neg@plt>
   49744:	sub	x0, x29, #0xa8
   49748:	sub	x1, x29, #0x28
   4974c:	sub	x2, x29, #0x48
   49750:	mov	w3, wzr
   49754:	bl	c240 <mpfr_add@plt>
   49758:	sub	x0, x29, #0x48
   4975c:	sub	x1, x29, #0x28
   49760:	sub	x2, x29, #0x48
   49764:	mov	w3, wzr
   49768:	bl	bc20 <mpfr_sub@plt>
   4976c:	sub	x0, x29, #0x28
   49770:	sub	x1, x29, #0xa8
   49774:	bl	c4f0 <mpfr_swap@plt>
   49778:	ldr	w8, [x22, #8]
   4977c:	add	x0, sp, #0xc8
   49780:	mov	x2, x22
   49784:	mov	w3, wzr
   49788:	cmp	w8, #0x1
   4978c:	mov	x8, #0xffffffffffffffff    	// #-1
   49790:	cneg	x1, x8, ge  // ge = tcont
   49794:	bl	c900 <mpfr_si_div@plt>
   49798:	add	x0, sp, #0xc8
   4979c:	add	x1, sp, #0xc8
   497a0:	mov	w2, #0x3                   	// #3
   497a4:	mov	w3, wzr
   497a8:	bl	c950 <mpfr_div_2ui@plt>
   497ac:	sub	x0, x29, #0x68
   497b0:	mov	w1, #0x1                   	// #1
   497b4:	mov	x2, xzr
   497b8:	mov	w3, wzr
   497bc:	bl	c640 <mpfr_set_ui_2exp@plt>
   497c0:	sub	x0, x29, #0xa8
   497c4:	mov	w1, #0x1                   	// #1
   497c8:	mov	x2, xzr
   497cc:	mov	w3, wzr
   497d0:	stur	w21, [x29, #-128]
   497d4:	stur	x28, [x29, #-120]
   497d8:	bl	c640 <mpfr_set_ui_2exp@plt>
   497dc:	ldr	x27, [sp, #32]
   497e0:	mov	w20, wzr
   497e4:	str	w21, [sp, #176]
   497e8:	str	x28, [sp, #184]
   497ec:	str	w21, [sp, #144]
   497f0:	str	x28, [sp, #152]
   497f4:	mov	w28, #0x6                   	// #6
   497f8:	mov	w21, #0x2                   	// #2
   497fc:	str	wzr, [sp, #96]
   49800:	sub	x0, x29, #0xa8
   49804:	sub	x1, x29, #0xa8
   49808:	mov	x2, x24
   4980c:	mov	w3, wzr
   49810:	sub	x26, x21, #0x1
   49814:	bl	c9c0 <mpfr_mul_si@plt>
   49818:	sub	x0, x29, #0xa8
   4981c:	sub	x1, x29, #0xa8
   49820:	mov	x2, x27
   49824:	mov	w3, wzr
   49828:	bl	c9c0 <mpfr_mul_si@plt>
   4982c:	sub	x0, x29, #0xa8
   49830:	sub	x1, x29, #0xa8
   49834:	mov	x2, x26
   49838:	mov	w3, wzr
   4983c:	bl	ccc0 <mpfr_div_ui@plt>
   49840:	sub	x0, x29, #0xa8
   49844:	sub	x1, x29, #0xa8
   49848:	add	x2, sp, #0xc8
   4984c:	mov	w3, wzr
   49850:	bl	be00 <mpfr_mul@plt>
   49854:	ldur	w8, [x29, #-160]
   49858:	add	x0, sp, #0xa8
   4985c:	sub	x1, x29, #0xa8
   49860:	mov	x2, x28
   49864:	cmp	w8, #0x0
   49868:	cinc	w3, w19, le
   4986c:	bl	bb10 <mpfr_mul_ui@plt>
   49870:	add	x0, sp, #0xa8
   49874:	add	x1, sp, #0xa8
   49878:	mov	w3, #0x1                   	// #1
   4987c:	mov	w2, wzr
   49880:	bl	c6f0 <mpfr_set4@plt>
   49884:	add	x0, sp, #0x68
   49888:	sub	x1, x29, #0xa8
   4988c:	mov	w2, #0x2                   	// #2
   49890:	mov	w3, #0x1                   	// #1
   49894:	bl	c6f0 <mpfr_set4@plt>
   49898:	add	x0, sp, #0x68
   4989c:	add	x1, sp, #0x68
   498a0:	mov	w3, #0x2                   	// #2
   498a4:	mov	x2, x25
   498a8:	bl	c320 <mpfr_mul_2ui@plt>
   498ac:	add	x0, sp, #0x68
   498b0:	add	x1, sp, #0x68
   498b4:	add	x2, sp, #0xa8
   498b8:	mov	w3, #0x2                   	// #2
   498bc:	bl	c240 <mpfr_add@plt>
   498c0:	cmp	w20, #0x2
   498c4:	b.lt	49900 <mpfr_yn@@Base+0x74c>  // b.tstop
   498c8:	add	x0, sp, #0x88
   498cc:	add	x1, sp, #0x88
   498d0:	mov	w3, #0x2                   	// #2
   498d4:	mov	x2, x25
   498d8:	bl	c950 <mpfr_div_2ui@plt>
   498dc:	ldur	w8, [x29, #-160]
   498e0:	add	x0, sp, #0x88
   498e4:	add	x1, sp, #0x88
   498e8:	sub	x2, x29, #0xa8
   498ec:	mov	w3, #0x2                   	// #2
   498f0:	cmp	w8, #0x1
   498f4:	b.lt	4993c <mpfr_yn@@Base+0x788>  // b.tstop
   498f8:	bl	c240 <mpfr_add@plt>
   498fc:	b	49940 <mpfr_yn@@Base+0x78c>
   49900:	tbnz	w26, #0, 49920 <mpfr_yn@@Base+0x76c>
   49904:	sub	x0, x29, #0x68
   49908:	sub	x1, x29, #0x68
   4990c:	sub	x2, x29, #0xa8
   49910:	mov	w3, wzr
   49914:	tbnz	w26, #1, 49970 <mpfr_yn@@Base+0x7bc>
   49918:	bl	c240 <mpfr_add@plt>
   4991c:	b	49974 <mpfr_yn@@Base+0x7c0>
   49920:	sub	x0, x29, #0x88
   49924:	sub	x1, x29, #0x88
   49928:	sub	x2, x29, #0xa8
   4992c:	mov	w3, wzr
   49930:	tbnz	w26, #1, 49980 <mpfr_yn@@Base+0x7cc>
   49934:	bl	c240 <mpfr_add@plt>
   49938:	b	49984 <mpfr_yn@@Base+0x7d0>
   4993c:	bl	bc20 <mpfr_sub@plt>
   49940:	add	x0, sp, #0x88
   49944:	add	x1, sp, #0x88
   49948:	mov	w3, #0x2                   	// #2
   4994c:	mov	x2, x25
   49950:	bl	c320 <mpfr_mul_2ui@plt>
   49954:	add	x0, sp, #0x88
   49958:	add	x1, sp, #0x88
   4995c:	add	x2, sp, #0xa8
   49960:	mov	w3, #0x2                   	// #2
   49964:	add	w26, w20, #0x1
   49968:	bl	c240 <mpfr_add@plt>
   4996c:	b	49a10 <mpfr_yn@@Base+0x85c>
   49970:	bl	bc20 <mpfr_sub@plt>
   49974:	ldr	x8, [sp, #120]
   49978:	ldur	x9, [x29, #-88]
   4997c:	b	4998c <mpfr_yn@@Base+0x7d8>
   49980:	bl	bc20 <mpfr_sub@plt>
   49984:	ldr	x8, [sp, #120]
   49988:	ldur	x9, [x29, #-120]
   4998c:	add	x0, sp, #0x88
   49990:	add	x1, sp, #0x88
   49994:	add	x2, sp, #0xa8
   49998:	mov	w3, #0x2                   	// #2
   4999c:	cmp	x8, x9
   499a0:	b.le	499b0 <mpfr_yn@@Base+0x7fc>
   499a4:	bl	c240 <mpfr_add@plt>
   499a8:	mov	w26, wzr
   499ac:	b	499c4 <mpfr_yn@@Base+0x810>
   499b0:	mov	w26, #0x2                   	// #2
   499b4:	bl	c240 <mpfr_add@plt>
   499b8:	cmp	w20, #0x0
   499bc:	b.gt	49a10 <mpfr_yn@@Base+0x85c>
   499c0:	add	w26, w20, #0x1
   499c4:	ldr	w8, [x22, #8]
   499c8:	cmp	w8, #0x1
   499cc:	b.lt	499e8 <mpfr_yn@@Base+0x834>  // b.tstop
   499d0:	lsr	x1, x21, #1
   499d4:	mov	x0, x22
   499d8:	mov	x2, xzr
   499dc:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   499e0:	tbnz	w0, #31, 49a04 <mpfr_yn@@Base+0x850>
   499e4:	ldr	w8, [x22, #8]
   499e8:	tbz	w8, #31, 49a10 <mpfr_yn@@Base+0x85c>
   499ec:	neg	x1, x21, lsr #1
   499f0:	mov	x0, x22
   499f4:	mov	x2, xzr
   499f8:	bl	c430 <mpfr_cmp_si_2exp@plt>
   499fc:	cmp	w0, #0x1
   49a00:	b.lt	49a10 <mpfr_yn@@Base+0x85c>  // b.tstop
   49a04:	mov	w26, #0x2                   	// #2
   49a08:	mov	w8, #0x1                   	// #1
   49a0c:	str	w8, [sp, #96]
   49a10:	add	x24, x24, #0x2
   49a14:	add	x21, x21, #0x1
   49a18:	add	x28, x28, #0x6
   49a1c:	cmp	w26, #0x4
   49a20:	sub	x27, x27, #0x2
   49a24:	mov	w20, w26
   49a28:	b.lt	49800 <mpfr_yn@@Base+0x64c>  // b.tstop
   49a2c:	ldr	x27, [sp, #40]
   49a30:	ldr	x21, [sp, #88]
   49a34:	tbnz	w21, #0, 49a88 <mpfr_yn@@Base+0x8d4>
   49a38:	sub	x0, x29, #0x48
   49a3c:	sub	x1, x29, #0x48
   49a40:	sub	x2, x29, #0x68
   49a44:	mov	w3, wzr
   49a48:	bl	be00 <mpfr_mul@plt>
   49a4c:	sub	x0, x29, #0x28
   49a50:	sub	x1, x29, #0x28
   49a54:	sub	x2, x29, #0x88
   49a58:	mov	w3, wzr
   49a5c:	bl	be00 <mpfr_mul@plt>
   49a60:	ldur	x8, [x29, #-56]
   49a64:	ldur	x9, [x29, #-24]
   49a68:	sub	x0, x29, #0x28
   49a6c:	sub	x1, x29, #0x28
   49a70:	sub	x2, x29, #0x48
   49a74:	cmp	x9, x8
   49a78:	mov	w3, wzr
   49a7c:	csel	x20, x9, x8, gt
   49a80:	bl	c240 <mpfr_add@plt>
   49a84:	b	49ad4 <mpfr_yn@@Base+0x920>
   49a88:	sub	x0, x29, #0x48
   49a8c:	sub	x1, x29, #0x48
   49a90:	sub	x2, x29, #0x88
   49a94:	mov	w3, wzr
   49a98:	bl	be00 <mpfr_mul@plt>
   49a9c:	sub	x0, x29, #0x28
   49aa0:	sub	x1, x29, #0x28
   49aa4:	sub	x2, x29, #0x68
   49aa8:	mov	w3, wzr
   49aac:	bl	be00 <mpfr_mul@plt>
   49ab0:	ldur	x8, [x29, #-56]
   49ab4:	ldur	x9, [x29, #-24]
   49ab8:	sub	x0, x29, #0x28
   49abc:	sub	x1, x29, #0x48
   49ac0:	sub	x2, x29, #0x28
   49ac4:	cmp	x9, x8
   49ac8:	mov	w3, wzr
   49acc:	csel	x20, x9, x8, gt
   49ad0:	bl	bc20 <mpfr_sub@plt>
   49ad4:	ldr	w26, [sp, #52]
   49ad8:	ldr	x28, [sp, #80]
   49adc:	tbz	w21, #1, 49af0 <mpfr_yn@@Base+0x93c>
   49ae0:	sub	x0, x29, #0x28
   49ae4:	sub	x1, x29, #0x28
   49ae8:	mov	w2, wzr
   49aec:	bl	be20 <mpfr_neg@plt>
   49af0:	ldur	x8, [x29, #-24]
   49af4:	ldur	x9, [x29, #-88]
   49af8:	ldur	x10, [x29, #-120]
   49afc:	ldr	x11, [sp, #152]
   49b00:	cmp	x8, x20
   49b04:	csel	x8, x8, x20, gt
   49b08:	cmp	x9, x10
   49b0c:	csel	x9, x10, x9, lt  // lt = tstop
   49b10:	cmp	x11, x8
   49b14:	csel	x8, x8, x11, lt  // lt = tstop
   49b18:	cmp	x8, x9
   49b1c:	csel	x20, x9, x8, lt  // lt = tstop
   49b20:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   49b24:	ldr	x1, [x0, #2704]
   49b28:	add	x0, x0, #0xa90
   49b2c:	blr	x1
   49b30:	add	x1, x28, x0
   49b34:	sub	x0, x29, #0x48
   49b38:	mov	w2, wzr
   49b3c:	bl	c3e0 <mpfr_cache@plt>
   49b40:	sub	x0, x29, #0x48
   49b44:	sub	x1, x29, #0x48
   49b48:	mov	x2, x22
   49b4c:	mov	w3, wzr
   49b50:	bl	be00 <mpfr_mul@plt>
   49b54:	ldr	w8, [x22, #8]
   49b58:	sub	x0, x29, #0x48
   49b5c:	sub	x2, x29, #0x48
   49b60:	mov	w3, wzr
   49b64:	cmp	w8, #0x1
   49b68:	mov	x8, #0xffffffffffffffff    	// #-1
   49b6c:	cneg	x1, x8, ge  // ge = tcont
   49b70:	bl	c900 <mpfr_si_div@plt>
   49b74:	sub	x0, x29, #0x48
   49b78:	sub	x1, x29, #0x48
   49b7c:	mov	w2, wzr
   49b80:	bl	c990 <mpfr_sqrt@plt>
   49b84:	ldur	w8, [x29, #-64]
   49b88:	ldur	w9, [x29, #-32]
   49b8c:	add	x0, sp, #0xa8
   49b90:	sub	x1, x29, #0x48
   49b94:	sub	x2, x29, #0x28
   49b98:	cmp	w8, w9
   49b9c:	cinc	w3, w19, ne  // ne = any
   49ba0:	bl	be00 <mpfr_mul@plt>
   49ba4:	add	x0, sp, #0xa8
   49ba8:	add	x1, sp, #0xa8
   49bac:	mov	w2, #0x2                   	// #2
   49bb0:	mov	w3, #0x1                   	// #1
   49bb4:	bl	c6f0 <mpfr_set4@plt>
   49bb8:	add	x0, sp, #0xa8
   49bbc:	add	x1, sp, #0xa8
   49bc0:	mov	w2, #0x3                   	// #3
   49bc4:	mov	w3, #0x2                   	// #2
   49bc8:	bl	bb10 <mpfr_mul_ui@plt>
   49bcc:	ldur	x21, [x29, #-56]
   49bd0:	sub	x0, x29, #0x48
   49bd4:	sub	x1, x29, #0x48
   49bd8:	sub	x2, x29, #0x28
   49bdc:	mov	w3, wzr
   49be0:	bl	be00 <mpfr_mul@plt>
   49be4:	ldr	x8, [sp, #184]
   49be8:	ldur	x9, [x29, #-56]
   49bec:	sub	x0, x29, #0x28
   49bf0:	cmp	x8, x9
   49bf4:	csel	x24, x8, x9, gt
   49bf8:	bl	c110 <mpfr_clear@plt>
   49bfc:	sub	x0, x29, #0x68
   49c00:	bl	c110 <mpfr_clear@plt>
   49c04:	sub	x0, x29, #0x88
   49c08:	bl	c110 <mpfr_clear@plt>
   49c0c:	sub	x0, x29, #0xa8
   49c10:	bl	c110 <mpfr_clear@plt>
   49c14:	add	x0, sp, #0xc8
   49c18:	bl	c110 <mpfr_clear@plt>
   49c1c:	add	x0, sp, #0xa8
   49c20:	bl	c110 <mpfr_clear@plt>
   49c24:	add	x0, sp, #0x88
   49c28:	bl	c110 <mpfr_clear@plt>
   49c2c:	add	x0, sp, #0x68
   49c30:	bl	c110 <mpfr_clear@plt>
   49c34:	ldur	x8, [x29, #-56]
   49c38:	mov	x9, #0x4                   	// #4
   49c3c:	movk	x9, #0x8000, lsl #48
   49c40:	cmp	x8, x9
   49c44:	b.lt	49c9c <mpfr_yn@@Base+0xae8>  // b.tstop
   49c48:	add	x9, x20, x21
   49c4c:	add	x10, x24, #0x1
   49c50:	add	x9, x9, #0x3
   49c54:	cmp	x10, x9
   49c58:	ldur	x10, [x29, #-72]
   49c5c:	add	x11, x24, #0x2
   49c60:	csinc	x9, x11, x9, ge  // ge = tcont
   49c64:	sub	x9, x25, x9
   49c68:	add	x2, x9, x8
   49c6c:	sub	x8, x10, #0x1
   49c70:	add	x9, x10, #0x3e
   49c74:	cmp	x8, #0x0
   49c78:	csel	x8, x9, x8, lt  // lt = tstop
   49c7c:	asr	x8, x8, #6
   49c80:	ldr	x11, [x27]
   49c84:	add	x1, x8, #0x1
   49c88:	ldr	x8, [sp, #24]
   49c8c:	ldur	x0, [x29, #-48]
   49c90:	add	x3, x11, x8
   49c94:	bl	c3d0 <mpfr_round_p@plt>
   49c98:	cbnz	w0, 49cfc <mpfr_yn@@Base+0xb48>
   49c9c:	ldr	w8, [sp, #96]
   49ca0:	cbnz	w8, 4a6d4 <mpfr_yn@@Base+0x1520>
   49ca4:	mov	x8, #0x4                   	// #4
   49ca8:	ldp	x24, x20, [sp, #8]
   49cac:	movk	x8, #0x8000, lsl #48
   49cb0:	sub	x8, x8, x25
   49cb4:	sub	x8, x8, #0x105
   49cb8:	cmp	x20, x8
   49cbc:	mov	w21, #0x1                   	// #1
   49cc0:	b.gt	49ce0 <mpfr_yn@@Base+0xb2c>
   49cc4:	add	x25, x25, x20
   49cc8:	cmp	x25, #0x0
   49ccc:	cinc	x8, x25, lt  // lt = tstop
   49cd0:	asr	x8, x8, #1
   49cd4:	str	x8, [sp, #16]
   49cd8:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
   49cdc:	b	496ac <mpfr_yn@@Base+0x4f8>
   49ce0:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   49ce4:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   49ce8:	mov	w1, #0x106                 	// #262
   49cec:	add	x0, x0, #0xc26
   49cf0:	add	x2, x2, #0x9c6
   49cf4:	bl	cb90 <mpfr_assert_fail@plt>
   49cf8:	b	49cc4 <mpfr_yn@@Base+0xb10>
   49cfc:	ldr	x20, [sp, #88]
   49d00:	tbz	w20, #0, 49d24 <mpfr_yn@@Base+0xb70>
   49d04:	ldr	w8, [x22, #8]
   49d08:	cmp	w8, #0x1
   49d0c:	b.ge	49d24 <mpfr_yn@@Base+0xb70>  // b.tcont
   49d10:	sub	x1, x29, #0x48
   49d14:	mov	x0, x27
   49d18:	mov	w2, w26
   49d1c:	bl	be20 <mpfr_neg@plt>
   49d20:	b	49d38 <mpfr_yn@@Base+0xb84>
   49d24:	ldur	w3, [x29, #-64]
   49d28:	sub	x1, x29, #0x48
   49d2c:	mov	x0, x27
   49d30:	mov	w2, w26
   49d34:	bl	c6f0 <mpfr_set4@plt>
   49d38:	mov	w24, w0
   49d3c:	sub	x0, x29, #0x48
   49d40:	bl	c110 <mpfr_clear@plt>
   49d44:	cmp	w26, #0x5
   49d48:	csinc	w24, w24, wzr, ne  // ne = any
   49d4c:	cbnz	w24, 4a4bc <mpfr_yn@@Base+0x1308>
   49d50:	sub	x0, x29, #0x68
   49d54:	bl	bc80 <mpfr_init@plt>
   49d58:	sub	x0, x29, #0x88
   49d5c:	bl	bc80 <mpfr_init@plt>
   49d60:	sub	x0, x29, #0xa8
   49d64:	bl	bc80 <mpfr_init@plt>
   49d68:	add	x0, sp, #0xc8
   49d6c:	bl	bc80 <mpfr_init@plt>
   49d70:	ldr	x19, [x27]
   49d74:	cmp	x19, #0x1
   49d78:	b.eq	4a5d4 <mpfr_yn@@Base+0x1420>  // b.none
   49d7c:	mov	x8, x19
   49d80:	b.le	4a5dc <mpfr_yn@@Base+0x1428>
   49d84:	sub	x8, x8, #0x1
   49d88:	clz	x8, x8
   49d8c:	mov	w9, #0x80                  	// #128
   49d90:	sub	w8, w9, w8, lsl #1
   49d94:	sxtw	x8, w8
   49d98:	add	x8, x19, x8
   49d9c:	add	x25, x23, x23, lsl #1
   49da0:	cmp	w26, #0x0
   49da4:	add	x28, x8, #0xd
   49da8:	add	x8, x25, #0x2
   49dac:	mov	w10, #0x40                  	// #64
   49db0:	cset	w9, eq  // eq = none
   49db4:	clz	x8, x8
   49db8:	sub	x21, x23, #0x1
   49dbc:	str	x9, [sp, #24]
   49dc0:	mov	w9, #0x40                  	// #64
   49dc4:	sub	x8, x10, x8
   49dc8:	stp	x9, x8, [sp, #8]
   49dcc:	str	x21, [sp]
   49dd0:	sub	x0, x29, #0x68
   49dd4:	mov	x1, x28
   49dd8:	bl	bf80 <mpfr_set_prec@plt>
   49ddc:	sub	x0, x29, #0x88
   49de0:	mov	x1, x28
   49de4:	bl	bf80 <mpfr_set_prec@plt>
   49de8:	sub	x0, x29, #0xa8
   49dec:	mov	x1, x28
   49df0:	bl	bf80 <mpfr_set_prec@plt>
   49df4:	add	x0, sp, #0xc8
   49df8:	mov	x1, x28
   49dfc:	bl	bf80 <mpfr_set_prec@plt>
   49e00:	sub	x0, x29, #0x68
   49e04:	mov	x1, x22
   49e08:	mov	x2, x22
   49e0c:	mov	w3, wzr
   49e10:	bl	be00 <mpfr_mul@plt>
   49e14:	sub	x0, x29, #0x68
   49e18:	sub	x1, x29, #0x68
   49e1c:	mov	w2, #0x2                   	// #2
   49e20:	mov	w3, wzr
   49e24:	bl	c950 <mpfr_div_2ui@plt>
   49e28:	sub	x0, x29, #0xa8
   49e2c:	mov	x1, x22
   49e30:	mov	x2, x23
   49e34:	mov	w3, wzr
   49e38:	bl	c020 <mpfr_pow_ui@plt>
   49e3c:	sub	x0, x29, #0xa8
   49e40:	sub	x1, x29, #0xa8
   49e44:	mov	x2, x23
   49e48:	mov	w3, wzr
   49e4c:	bl	c470 <mpfr_div_2si@plt>
   49e50:	cbz	x20, 49f24 <mpfr_yn@@Base+0xd70>
   49e54:	add	x0, sp, #0x88
   49e58:	bl	c040 <mpfr_mpz_init@plt>
   49e5c:	add	x0, sp, #0x88
   49e60:	mov	w1, #0x1                   	// #1
   49e64:	bl	bd60 <__gmpz_set_ui@plt>
   49e68:	sub	x0, x29, #0x88
   49e6c:	mov	w1, #0x1                   	// #1
   49e70:	mov	x2, xzr
   49e74:	mov	w3, wzr
   49e78:	bl	c640 <mpfr_set_ui_2exp@plt>
   49e7c:	ldur	x19, [x29, #-120]
   49e80:	cbz	x21, 49ef0 <mpfr_yn@@Base+0xd3c>
   49e84:	mov	w24, #0x1                   	// #1
   49e88:	mov	x26, x21
   49e8c:	sub	x0, x29, #0x88
   49e90:	sub	x1, x29, #0x88
   49e94:	sub	x2, x29, #0x68
   49e98:	mov	w3, wzr
   49e9c:	sub	x20, x26, #0x1
   49ea0:	bl	be00 <mpfr_mul@plt>
   49ea4:	add	x0, sp, #0x88
   49ea8:	add	x1, sp, #0x88
   49eac:	mov	x2, x24
   49eb0:	bl	c1a0 <__gmpz_mul_ui@plt>
   49eb4:	add	x0, sp, #0x88
   49eb8:	add	x1, sp, #0x88
   49ebc:	mov	x2, x26
   49ec0:	bl	c1a0 <__gmpz_mul_ui@plt>
   49ec4:	sub	x0, x29, #0x88
   49ec8:	sub	x1, x29, #0x88
   49ecc:	add	x2, sp, #0x88
   49ed0:	mov	w3, wzr
   49ed4:	bl	c4d0 <mpfr_add_z@plt>
   49ed8:	ldur	x8, [x29, #-120]
   49edc:	add	x24, x24, #0x1
   49ee0:	mov	x26, x20
   49ee4:	cmp	x8, x19
   49ee8:	csel	x19, x8, x19, gt
   49eec:	cbnz	x20, 49e8c <mpfr_yn@@Base+0xcd8>
   49ef0:	add	x0, sp, #0x88
   49ef4:	add	x1, sp, #0x88
   49ef8:	bl	bd10 <__gmpz_sqrt@plt>
   49efc:	sub	x0, x29, #0x88
   49f00:	sub	x1, x29, #0x88
   49f04:	add	x2, sp, #0x88
   49f08:	mov	w3, wzr
   49f0c:	bl	cce0 <mpfr_div_z@plt>
   49f10:	add	x0, sp, #0x88
   49f14:	bl	c210 <mpfr_mpz_clear@plt>
   49f18:	ldur	x8, [x29, #-120]
   49f1c:	sub	x19, x19, x8
   49f20:	b	49f38 <mpfr_yn@@Base+0xd84>
   49f24:	mov	w8, #0x1                   	// #1
   49f28:	stur	w8, [x29, #-128]
   49f2c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   49f30:	mov	x19, xzr
   49f34:	stur	x8, [x29, #-120]
   49f38:	sub	x0, x29, #0x88
   49f3c:	sub	x1, x29, #0x88
   49f40:	sub	x2, x29, #0xa8
   49f44:	mov	w3, wzr
   49f48:	bl	c670 <mpfr_div@plt>
   49f4c:	cmn	x25, #0x2
   49f50:	b.eq	4a3e4 <mpfr_yn@@Base+0x1230>  // b.none
   49f54:	cmn	x25, #0x3
   49f58:	b.eq	4a418 <mpfr_yn@@Base+0x1264>  // b.none
   49f5c:	ldr	x8, [sp, #16]
   49f60:	str	x8, [sp, #32]
   49f64:	sub	x0, x29, #0x68
   49f68:	sub	x1, x29, #0x68
   49f6c:	mov	w2, wzr
   49f70:	str	x19, [sp, #96]
   49f74:	bl	be20 <mpfr_neg@plt>
   49f78:	sub	x0, x29, #0x68
   49f7c:	mov	w1, #0x2                   	// #2
   49f80:	bl	bd50 <mpfr_get_ui@plt>
   49f84:	mov	x24, x0
   49f88:	cmn	x0, #0x3
   49f8c:	b.cs	4a3ec <mpfr_yn@@Base+0x1238>  // b.hs, b.nlast
   49f90:	add	x0, sp, #0x88
   49f94:	mov	x19, x25
   49f98:	mov	x21, x27
   49f9c:	bl	c040 <mpfr_mpz_init@plt>
   49fa0:	add	x0, sp, #0x88
   49fa4:	mov	x1, xzr
   49fa8:	bl	bd60 <__gmpz_set_ui@plt>
   49fac:	add	x0, sp, #0xa8
   49fb0:	bl	c040 <mpfr_mpz_init@plt>
   49fb4:	add	x0, sp, #0xa8
   49fb8:	mov	w1, #0x1                   	// #1
   49fbc:	bl	bd60 <__gmpz_set_ui@plt>
   49fc0:	cbz	x23, 4a004 <mpfr_yn@@Base+0xe50>
   49fc4:	mov	w26, #0x1                   	// #1
   49fc8:	add	x0, sp, #0x88
   49fcc:	add	x1, sp, #0x88
   49fd0:	mov	x2, x26
   49fd4:	bl	c1a0 <__gmpz_mul_ui@plt>
   49fd8:	add	x0, sp, #0x88
   49fdc:	add	x1, sp, #0x88
   49fe0:	add	x2, sp, #0xa8
   49fe4:	bl	ca10 <__gmpz_add@plt>
   49fe8:	add	x0, sp, #0xa8
   49fec:	add	x1, sp, #0xa8
   49ff0:	mov	x2, x26
   49ff4:	bl	c1a0 <__gmpz_mul_ui@plt>
   49ff8:	add	x26, x26, #0x1
   49ffc:	cmp	x26, x23
   4a000:	b.ls	49fc8 <mpfr_yn@@Base+0xe14>  // b.plast
   4a004:	ldr	x1, [sp, #200]
   4a008:	sub	x0, x29, #0x28
   4a00c:	add	x20, x24, #0x2
   4a010:	bl	cad0 <mpfr_init2@plt>
   4a014:	ldr	x1, [sp, #200]
   4a018:	sub	x0, x29, #0x48
   4a01c:	bl	cad0 <mpfr_init2@plt>
   4a020:	sub	x0, x29, #0x28
   4a024:	mov	x1, x23
   4a028:	mov	w2, wzr
   4a02c:	bl	c730 <mpfr_fac_ui@plt>
   4a030:	sub	x0, x29, #0x28
   4a034:	sub	x1, x29, #0xa8
   4a038:	sub	x2, x29, #0x28
   4a03c:	mov	w3, wzr
   4a040:	bl	c670 <mpfr_div@plt>
   4a044:	sub	x0, x29, #0x48
   4a048:	sub	x1, x29, #0x28
   4a04c:	add	x2, sp, #0x88
   4a050:	mov	w3, wzr
   4a054:	bl	c520 <mpfr_mul_z@plt>
   4a058:	add	x0, sp, #0xc8
   4a05c:	sub	x1, x29, #0x48
   4a060:	add	x2, sp, #0xa8
   4a064:	mov	w3, wzr
   4a068:	bl	cce0 <mpfr_div_z@plt>
   4a06c:	ldr	x25, [sp, #216]
   4a070:	mov	w27, #0x2                   	// #2
   4a074:	mov	w24, #0x1                   	// #1
   4a078:	sub	x0, x29, #0x28
   4a07c:	sub	x1, x29, #0x28
   4a080:	sub	x2, x29, #0x68
   4a084:	mov	w3, wzr
   4a088:	bl	be00 <mpfr_mul@plt>
   4a08c:	sub	x0, x29, #0x28
   4a090:	sub	x1, x29, #0x28
   4a094:	mov	x2, x24
   4a098:	mov	w3, wzr
   4a09c:	bl	ccc0 <mpfr_div_ui@plt>
   4a0a0:	add	x26, x23, x24
   4a0a4:	sub	x0, x29, #0x28
   4a0a8:	sub	x1, x29, #0x28
   4a0ac:	mov	x2, x26
   4a0b0:	mov	w3, wzr
   4a0b4:	bl	ccc0 <mpfr_div_ui@plt>
   4a0b8:	add	x0, sp, #0x88
   4a0bc:	add	x1, sp, #0x88
   4a0c0:	mov	x2, x24
   4a0c4:	bl	c1a0 <__gmpz_mul_ui@plt>
   4a0c8:	add	x0, sp, #0x88
   4a0cc:	add	x1, sp, #0x88
   4a0d0:	mov	x2, x26
   4a0d4:	bl	c1a0 <__gmpz_mul_ui@plt>
   4a0d8:	add	x2, x23, x27
   4a0dc:	add	x0, sp, #0x88
   4a0e0:	add	x1, sp, #0xa8
   4a0e4:	bl	cc90 <__gmpz_addmul_ui@plt>
   4a0e8:	add	x0, sp, #0xa8
   4a0ec:	add	x1, sp, #0xa8
   4a0f0:	mov	x2, x24
   4a0f4:	bl	c1a0 <__gmpz_mul_ui@plt>
   4a0f8:	add	x0, sp, #0xa8
   4a0fc:	add	x1, sp, #0xa8
   4a100:	mov	x2, x26
   4a104:	bl	c1a0 <__gmpz_mul_ui@plt>
   4a108:	sub	x0, x29, #0x48
   4a10c:	sub	x1, x29, #0x28
   4a110:	add	x2, sp, #0x88
   4a114:	mov	w3, wzr
   4a118:	bl	c520 <mpfr_mul_z@plt>
   4a11c:	sub	x0, x29, #0x48
   4a120:	sub	x1, x29, #0x48
   4a124:	add	x2, sp, #0xa8
   4a128:	mov	w3, wzr
   4a12c:	bl	cce0 <mpfr_div_z@plt>
   4a130:	ldur	x8, [x29, #-56]
   4a134:	add	x0, sp, #0xc8
   4a138:	add	x1, sp, #0xc8
   4a13c:	sub	x2, x29, #0x48
   4a140:	cmp	x8, x25
   4a144:	mov	w3, wzr
   4a148:	csel	x25, x8, x25, gt
   4a14c:	bl	c240 <mpfr_add@plt>
   4a150:	ldr	x8, [sp, #216]
   4a154:	ldur	x9, [x29, #-56]
   4a158:	ldur	x10, [x29, #-72]
   4a15c:	cmp	x8, x25
   4a160:	csel	x25, x8, x25, gt
   4a164:	add	x9, x10, x9
   4a168:	cmp	x9, x8
   4a16c:	b.ge	4a17c <mpfr_yn@@Base+0xfc8>  // b.tcont
   4a170:	udiv	x8, x20, x27
   4a174:	cmp	x8, x26
   4a178:	b.cc	4a188 <mpfr_yn@@Base+0xfd4>  // b.lo, b.ul, b.last
   4a17c:	add	x24, x24, #0x1
   4a180:	add	x27, x27, #0x2
   4a184:	b	4a078 <mpfr_yn@@Base+0xec4>
   4a188:	sub	x0, x29, #0x28
   4a18c:	bl	c110 <mpfr_clear@plt>
   4a190:	sub	x0, x29, #0x48
   4a194:	bl	c110 <mpfr_clear@plt>
   4a198:	add	x0, sp, #0x88
   4a19c:	bl	c210 <mpfr_mpz_clear@plt>
   4a1a0:	add	x0, sp, #0xa8
   4a1a4:	bl	c210 <mpfr_mpz_clear@plt>
   4a1a8:	ldr	x8, [sp, #216]
   4a1ac:	cmn	x24, #0x1
   4a1b0:	sub	x20, x25, x8
   4a1b4:	b.eq	4a408 <mpfr_yn@@Base+0x1254>  // b.none
   4a1b8:	cmn	x24, #0x2
   4a1bc:	mov	x27, x21
   4a1c0:	mov	x25, x19
   4a1c4:	b.eq	4a434 <mpfr_yn@@Base+0x1280>  // b.none
   4a1c8:	add	x8, x24, #0x1
   4a1cc:	clz	x8, x8
   4a1d0:	mov	w9, #0x83                  	// #131
   4a1d4:	sub	w8, w9, w8, lsl #1
   4a1d8:	sxtw	x8, w8
   4a1dc:	ldr	x10, [sp, #96]
   4a1e0:	ldr	x11, [sp, #32]
   4a1e4:	ldur	x9, [x29, #-120]
   4a1e8:	add	x20, x20, x8
   4a1ec:	sub	x0, x29, #0x88
   4a1f0:	add	x8, x10, x11
   4a1f4:	add	x19, x8, x9
   4a1f8:	sub	x1, x29, #0x88
   4a1fc:	add	x2, sp, #0xc8
   4a200:	mov	w3, wzr
   4a204:	add	x21, x19, #0x1
   4a208:	bl	c240 <mpfr_add@plt>
   4a20c:	ldr	x8, [sp, #216]
   4a210:	ldur	x9, [x29, #-120]
   4a214:	sub	x0, x29, #0xa8
   4a218:	mov	w2, #0x1                   	// #1
   4a21c:	add	x8, x20, x8
   4a220:	cmp	x8, x21
   4a224:	csinc	x8, x8, x19, gt
   4a228:	sub	x8, x8, x9
   4a22c:	add	x9, x8, #0x1
   4a230:	add	x8, x8, #0x2
   4a234:	cmp	x9, #0x0
   4a238:	mov	x1, x22
   4a23c:	mov	w3, wzr
   4a240:	csinc	x19, x8, xzr, ge  // ge = tcont
   4a244:	bl	c950 <mpfr_div_2ui@plt>
   4a248:	sub	x0, x29, #0xa8
   4a24c:	sub	x1, x29, #0xa8
   4a250:	mov	w2, wzr
   4a254:	bl	c130 <mpfr_log@plt>
   4a258:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a25c:	ldr	x1, [x0, #2688]
   4a260:	add	x0, x0, #0xa80
   4a264:	blr	x1
   4a268:	ldr	x24, [sp, #80]
   4a26c:	mov	w2, wzr
   4a270:	add	x1, x24, x0
   4a274:	add	x0, sp, #0xc8
   4a278:	bl	c3e0 <mpfr_cache@plt>
   4a27c:	ldur	x8, [x29, #-152]
   4a280:	ldr	x9, [sp, #216]
   4a284:	sub	x0, x29, #0xa8
   4a288:	sub	x1, x29, #0xa8
   4a28c:	add	x2, sp, #0xc8
   4a290:	cmp	x8, x9
   4a294:	mov	w3, wzr
   4a298:	csel	x20, x8, x9, gt
   4a29c:	bl	c240 <mpfr_add@plt>
   4a2a0:	ldur	x21, [x29, #-152]
   4a2a4:	sub	x0, x29, #0xa8
   4a2a8:	sub	x1, x29, #0xa8
   4a2ac:	mov	w2, #0x1                   	// #1
   4a2b0:	mov	w3, wzr
   4a2b4:	bl	c320 <mpfr_mul_2ui@plt>
   4a2b8:	add	x0, sp, #0xc8
   4a2bc:	mov	x1, x23
   4a2c0:	mov	x2, x22
   4a2c4:	mov	w3, wzr
   4a2c8:	bl	cc60 <mpfr_jn@plt>
   4a2cc:	sub	x0, x29, #0xa8
   4a2d0:	sub	x1, x29, #0xa8
   4a2d4:	add	x2, sp, #0xc8
   4a2d8:	mov	w3, wzr
   4a2dc:	bl	be00 <mpfr_mul@plt>
   4a2e0:	ldur	x8, [x29, #-120]
   4a2e4:	ldur	x9, [x29, #-152]
   4a2e8:	sub	x10, x20, x21
   4a2ec:	sub	x0, x29, #0xa8
   4a2f0:	add	x19, x8, x19
   4a2f4:	add	x8, x10, x9
   4a2f8:	sub	x1, x29, #0xa8
   4a2fc:	sub	x2, x29, #0x88
   4a300:	mov	w3, wzr
   4a304:	add	x20, x8, #0x4
   4a308:	bl	bc20 <mpfr_sub@plt>
   4a30c:	ldur	x8, [x29, #-152]
   4a310:	cmp	x19, x20
   4a314:	csel	x9, x19, x20, gt
   4a318:	sub	x8, x9, x8
   4a31c:	add	x19, x8, #0x1
   4a320:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a324:	ldr	x1, [x0, #2704]
   4a328:	add	x0, x0, #0xa90
   4a32c:	blr	x1
   4a330:	add	x1, x24, x0
   4a334:	sub	x0, x29, #0x68
   4a338:	mov	w2, wzr
   4a33c:	bl	c3e0 <mpfr_cache@plt>
   4a340:	sub	x0, x29, #0xa8
   4a344:	sub	x1, x29, #0xa8
   4a348:	sub	x2, x29, #0x68
   4a34c:	mov	w3, wzr
   4a350:	bl	c670 <mpfr_div@plt>
   4a354:	ldur	x8, [x29, #-152]
   4a358:	mov	x20, #0x4                   	// #4
   4a35c:	movk	x20, #0x8000, lsl #48
   4a360:	cmp	x8, x20
   4a364:	b.lt	4a3b0 <mpfr_yn@@Base+0x11fc>  // b.tstop
   4a368:	ldur	x9, [x29, #-168]
   4a36c:	add	x8, x19, #0x2
   4a370:	cmp	x19, #0x0
   4a374:	mov	w11, #0x2                   	// #2
   4a378:	csel	x8, x8, x11, ge  // ge = tcont
   4a37c:	sub	x2, x28, x8
   4a380:	sub	x8, x9, #0x1
   4a384:	add	x9, x9, #0x3e
   4a388:	cmp	x8, #0x0
   4a38c:	csel	x8, x9, x8, lt  // lt = tstop
   4a390:	asr	x8, x8, #6
   4a394:	ldr	x10, [x27]
   4a398:	add	x1, x8, #0x1
   4a39c:	ldr	x8, [sp, #24]
   4a3a0:	ldur	x0, [x29, #-144]
   4a3a4:	add	x3, x10, x8
   4a3a8:	bl	c3d0 <mpfr_round_p@plt>
   4a3ac:	cbnz	w0, 4a46c <mpfr_yn@@Base+0x12b8>
   4a3b0:	ldr	x19, [sp, #8]
   4a3b4:	sub	x8, x20, x28
   4a3b8:	ldr	x20, [sp, #88]
   4a3bc:	sub	x8, x8, #0x105
   4a3c0:	cmp	x19, x8
   4a3c4:	b.gt	4a450 <mpfr_yn@@Base+0x129c>
   4a3c8:	add	x28, x28, x19
   4a3cc:	cmp	x28, #0x0
   4a3d0:	ldr	x21, [sp]
   4a3d4:	cinc	x8, x28, lt  // lt = tstop
   4a3d8:	asr	x8, x8, #1
   4a3dc:	str	x8, [sp, #8]
   4a3e0:	b	49dd0 <mpfr_yn@@Base+0xc1c>
   4a3e4:	str	xzr, [sp, #32]
   4a3e8:	b	49f64 <mpfr_yn@@Base+0xdb0>
   4a3ec:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4a3f0:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4a3f4:	mov	w1, #0x5d                  	// #93
   4a3f8:	add	x0, x0, #0xc35
   4a3fc:	add	x2, x2, #0xc4d
   4a400:	bl	cb90 <mpfr_assert_fail@plt>
   4a404:	b	49f90 <mpfr_yn@@Base+0xddc>
   4a408:	mov	w8, #0x3                   	// #3
   4a40c:	mov	x27, x21
   4a410:	mov	x25, x19
   4a414:	b	4a1dc <mpfr_yn@@Base+0x1028>
   4a418:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4a41c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4a420:	mov	w1, #0x167                 	// #359
   4a424:	add	x0, x0, #0xc35
   4a428:	add	x2, x2, #0xc3a
   4a42c:	bl	cb90 <mpfr_assert_fail@plt>
   4a430:	b	49f5c <mpfr_yn@@Base+0xda8>
   4a434:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4a438:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4a43c:	mov	w1, #0x92                  	// #146
   4a440:	add	x0, x0, #0xc35
   4a444:	add	x2, x2, #0xb64
   4a448:	bl	cb90 <mpfr_assert_fail@plt>
   4a44c:	b	4a1c8 <mpfr_yn@@Base+0x1014>
   4a450:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4a454:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   4a458:	mov	w1, #0x196                 	// #406
   4a45c:	add	x0, x0, #0xc35
   4a460:	add	x2, x2, #0x922
   4a464:	bl	cb90 <mpfr_assert_fail@plt>
   4a468:	b	4a3c8 <mpfr_yn@@Base+0x1214>
   4a46c:	ldr	x10, [sp, #88]
   4a470:	ldur	w8, [x29, #-160]
   4a474:	ldr	w26, [sp, #52]
   4a478:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4a47c:	bics	xzr, x9, x10
   4a480:	cneg	w3, w8, eq  // eq = none
   4a484:	sub	x1, x29, #0xa8
   4a488:	mov	x0, x27
   4a48c:	mov	w2, w26
   4a490:	bl	c6f0 <mpfr_set4@plt>
   4a494:	mov	w24, w0
   4a498:	sub	x0, x29, #0x68
   4a49c:	bl	c110 <mpfr_clear@plt>
   4a4a0:	sub	x0, x29, #0x88
   4a4a4:	bl	c110 <mpfr_clear@plt>
   4a4a8:	sub	x0, x29, #0xa8
   4a4ac:	bl	c110 <mpfr_clear@plt>
   4a4b0:	add	x0, sp, #0xc8
   4a4b4:	bl	c110 <mpfr_clear@plt>
   4a4b8:	ldr	x28, [sp, #80]
   4a4bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a4c0:	ldr	x1, [x0, #2656]
   4a4c4:	add	x0, x0, #0xa60
   4a4c8:	blr	x1
   4a4cc:	ldr	w9, [sp, #76]
   4a4d0:	str	w9, [x28, x0]
   4a4d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a4d8:	ldr	x1, [x0, #2592]
   4a4dc:	add	x0, x0, #0xa20
   4a4e0:	blr	x1
   4a4e4:	ldr	x10, [sp, #64]
   4a4e8:	str	x10, [x28, x0]
   4a4ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a4f0:	ldr	x1, [x0, #2624]
   4a4f4:	add	x0, x0, #0xa40
   4a4f8:	blr	x1
   4a4fc:	ldr	x11, [sp, #56]
   4a500:	str	x11, [x28, x0]
   4a504:	ldr	x8, [x27, #16]
   4a508:	cmp	x8, x11
   4a50c:	b.gt	4a594 <mpfr_yn@@Base+0x13e0>
   4a510:	cmp	x8, x10
   4a514:	b.lt	4a594 <mpfr_yn@@Base+0x13e0>  // b.tstop
   4a518:	cbz	w24, 4a64c <mpfr_yn@@Base+0x1498>
   4a51c:	orr	w8, w9, #0x8
   4a520:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a524:	ldr	x1, [x0, #2656]
   4a528:	add	x0, x0, #0xa60
   4a52c:	blr	x1
   4a530:	str	w8, [x28, x0]
   4a534:	b	4a64c <mpfr_yn@@Base+0x1498>
   4a538:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4a53c:	cmp	x9, x8
   4a540:	b.eq	4a5fc <mpfr_yn@@Base+0x1448>  // b.none
   4a544:	mov	x8, #0x2                   	// #2
   4a548:	movk	x8, #0x8000, lsl #48
   4a54c:	cmp	x9, x8
   4a550:	b.eq	4a620 <mpfr_yn@@Base+0x146c>  // b.none
   4a554:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4a558:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4a55c:	str	x8, [x27, #16]
   4a560:	bics	xzr, x9, x20
   4a564:	mov	w8, #0x1                   	// #1
   4a568:	cneg	w8, w8, ne  // ne = any
   4a56c:	str	w8, [x27, #8]
   4a570:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a574:	ldr	x1, [x0, #2656]
   4a578:	add	x0, x0, #0xa60
   4a57c:	blr	x1
   4a580:	mrs	x8, tpidr_el0
   4a584:	ldr	w9, [x8, x0]
   4a588:	mov	w24, wzr
   4a58c:	orr	w9, w9, #0x20
   4a590:	b	4a648 <mpfr_yn@@Base+0x1494>
   4a594:	mov	x0, x27
   4a598:	mov	w1, w24
   4a59c:	mov	w2, w26
   4a5a0:	bl	cb80 <mpfr_check_range@plt>
   4a5a4:	mov	w24, w0
   4a5a8:	b	4a64c <mpfr_yn@@Base+0x1498>
   4a5ac:	mov	x8, xzr
   4a5b0:	b	49670 <mpfr_yn@@Base+0x4bc>
   4a5b4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4a5b8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4a5bc:	add	x0, x0, #0xc26
   4a5c0:	add	x2, x2, #0xaff
   4a5c4:	mov	w1, #0x36                  	// #54
   4a5c8:	bl	cb90 <mpfr_assert_fail@plt>
   4a5cc:	ldr	x8, [x27]
   4a5d0:	b	49660 <mpfr_yn@@Base+0x4ac>
   4a5d4:	mov	x8, xzr
   4a5d8:	b	49d98 <mpfr_yn@@Base+0xbe4>
   4a5dc:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4a5e0:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4a5e4:	add	x0, x0, #0xc35
   4a5e8:	add	x2, x2, #0xaff
   4a5ec:	mov	w1, #0x14c                 	// #332
   4a5f0:	bl	cb90 <mpfr_assert_fail@plt>
   4a5f4:	ldr	x8, [x27]
   4a5f8:	b	49d84 <mpfr_yn@@Base+0xbd0>
   4a5fc:	ldr	w8, [x22, #8]
   4a600:	cmp	w8, #0x1
   4a604:	b.lt	4a620 <mpfr_yn@@Base+0x146c>  // b.tstop
   4a608:	mov	w8, #0x1                   	// #1
   4a60c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4a610:	mov	w24, wzr
   4a614:	str	w8, [x27, #8]
   4a618:	str	x9, [x27, #16]
   4a61c:	b	4a64c <mpfr_yn@@Base+0x1498>
   4a620:	sub	x8, x19, #0x2
   4a624:	str	x8, [x27, #16]
   4a628:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a62c:	ldr	x1, [x0, #2656]
   4a630:	add	x0, x0, #0xa60
   4a634:	blr	x1
   4a638:	mrs	x8, tpidr_el0
   4a63c:	ldr	w9, [x8, x0]
   4a640:	mov	w24, wzr
   4a644:	orr	w9, w9, #0x4
   4a648:	str	w9, [x8, x0]
   4a64c:	mov	w0, w24
   4a650:	ldp	x20, x19, [sp, #480]
   4a654:	ldp	x22, x21, [sp, #464]
   4a658:	ldp	x24, x23, [sp, #448]
   4a65c:	ldp	x26, x25, [sp, #432]
   4a660:	ldp	x28, x27, [sp, #416]
   4a664:	ldp	x29, x30, [sp, #400]
   4a668:	add	sp, sp, #0x1f0
   4a66c:	ret
   4a670:	sub	x0, x29, #0x28
   4a674:	bl	c110 <mpfr_clear@plt>
   4a678:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a67c:	ldr	x1, [x0, #2656]
   4a680:	add	x0, x0, #0xa60
   4a684:	blr	x1
   4a688:	ldr	w8, [sp, #76]
   4a68c:	str	w8, [x28, x0]
   4a690:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a694:	ldr	x1, [x0, #2592]
   4a698:	add	x0, x0, #0xa20
   4a69c:	blr	x1
   4a6a0:	ldr	x8, [sp, #64]
   4a6a4:	str	x8, [x28, x0]
   4a6a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4a6ac:	ldr	x1, [x0, #2624]
   4a6b0:	add	x0, x0, #0xa40
   4a6b4:	blr	x1
   4a6b8:	ldr	x8, [sp, #56]
   4a6bc:	mov	w2, #0xffffffff            	// #-1
   4a6c0:	mov	w1, w26
   4a6c4:	str	x8, [x28, x0]
   4a6c8:	mov	x0, x27
   4a6cc:	bl	bff0 <mpfr_overflow@plt>
   4a6d0:	b	4a5a4 <mpfr_yn@@Base+0x13f0>
   4a6d4:	sub	x0, x29, #0x48
   4a6d8:	bl	c110 <mpfr_clear@plt>
   4a6dc:	ldr	x20, [sp, #88]
   4a6e0:	mov	w24, wzr
   4a6e4:	cbnz	w24, 4a4bc <mpfr_yn@@Base+0x1308>
   4a6e8:	b	49d50 <mpfr_yn@@Base+0xb9c>

000000000004a6ec <mpfr_y1@@Base>:
   4a6ec:	mov	w3, w2
   4a6f0:	mov	x2, x1
   4a6f4:	mov	w1, #0x1                   	// #1
   4a6f8:	b	c610 <mpfr_yn@plt>

000000000004a6fc <mpfr_remainder@@Base>:
   4a6fc:	mov	w5, w3
   4a700:	mov	x4, x2
   4a704:	mov	x3, x1
   4a708:	mov	x1, xzr
   4a70c:	mov	w2, wzr
   4a710:	b	4a714 <mpfr_remainder@@Base+0x18>
   4a714:	sub	sp, sp, #0xa0
   4a718:	stp	x29, x30, [sp, #64]
   4a71c:	stp	x28, x27, [sp, #80]
   4a720:	stp	x26, x25, [sp, #96]
   4a724:	stp	x24, x23, [sp, #112]
   4a728:	stp	x22, x21, [sp, #128]
   4a72c:	stp	x20, x19, [sp, #144]
   4a730:	ldr	x9, [x3, #16]
   4a734:	mov	x23, x3
   4a738:	mov	x8, #0x2                   	// #2
   4a73c:	ldr	w3, [x3, #8]
   4a740:	movk	x8, #0x8000, lsl #48
   4a744:	add	x11, x8, #0x2
   4a748:	mov	w27, w5
   4a74c:	mov	x25, x4
   4a750:	mov	x19, x1
   4a754:	cmp	x9, x11
   4a758:	mov	x22, x0
   4a75c:	add	x29, sp, #0x40
   4a760:	b.lt	4ab10 <mpfr_remainder@@Base+0x414>  // b.tstop
   4a764:	ldr	x10, [x25, #16]
   4a768:	cmp	x10, x11
   4a76c:	b.lt	4ab1c <mpfr_remainder@@Base+0x420>  // b.tstop
   4a770:	sub	x0, x29, #0x10
   4a774:	mov	w24, w2
   4a778:	str	w3, [sp, #12]
   4a77c:	bl	c040 <mpfr_mpz_init@plt>
   4a780:	add	x0, sp, #0x20
   4a784:	bl	c040 <mpfr_mpz_init@plt>
   4a788:	add	x0, sp, #0x10
   4a78c:	bl	c040 <mpfr_mpz_init@plt>
   4a790:	sub	x0, x29, #0x10
   4a794:	mov	x1, x23
   4a798:	bl	cb10 <mpfr_get_z_2exp@plt>
   4a79c:	mov	x23, x0
   4a7a0:	add	x0, sp, #0x20
   4a7a4:	mov	x1, x25
   4a7a8:	bl	cb10 <mpfr_get_z_2exp@plt>
   4a7ac:	ldur	w8, [x29, #-12]
   4a7b0:	ldr	w9, [sp, #36]
   4a7b4:	ldr	w25, [x25, #8]
   4a7b8:	mov	x26, x0
   4a7bc:	cmp	w8, #0x0
   4a7c0:	cneg	w8, w8, mi  // mi = first
   4a7c4:	cmp	w9, #0x0
   4a7c8:	stur	w8, [x29, #-12]
   4a7cc:	cneg	w8, w9, mi  // mi = first
   4a7d0:	add	x0, sp, #0x20
   4a7d4:	mov	x1, xzr
   4a7d8:	str	w8, [sp, #36]
   4a7dc:	bl	bb50 <__gmpz_scan1@plt>
   4a7e0:	mov	x2, x0
   4a7e4:	add	x28, x0, x26
   4a7e8:	add	x0, sp, #0x20
   4a7ec:	add	x1, sp, #0x20
   4a7f0:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   4a7f4:	subs	x20, x28, x23
   4a7f8:	b.ge	4a814 <mpfr_remainder@@Base+0x118>  // b.tcont
   4a7fc:	cbz	x19, 4a8c8 <mpfr_remainder@@Base+0x1cc>
   4a800:	mov	w2, #0x3f                  	// #63
   4a804:	add	x0, sp, #0x20
   4a808:	add	x1, sp, #0x20
   4a80c:	bl	c290 <__gmpz_mul_2exp@plt>
   4a810:	b	4a8cc <mpfr_remainder@@Base+0x1d0>
   4a814:	sub	x0, x29, #0x10
   4a818:	mov	w1, #0x2                   	// #2
   4a81c:	bl	cbb0 <__gmpz_sizeinbase@plt>
   4a820:	add	x21, x0, x23
   4a824:	add	x0, sp, #0x20
   4a828:	mov	w1, #0x2                   	// #2
   4a82c:	bl	cbb0 <__gmpz_sizeinbase@plt>
   4a830:	add	x8, x0, x28
   4a834:	cmp	x21, x8
   4a838:	b.ge	4a868 <mpfr_remainder@@Base+0x16c>  // b.tcont
   4a83c:	add	x0, sp, #0x10
   4a840:	sub	x1, x29, #0x10
   4a844:	bl	c050 <__gmpz_set@plt>
   4a848:	sub	x0, x29, #0x10
   4a84c:	mov	x1, xzr
   4a850:	bl	bd60 <__gmpz_set_ui@plt>
   4a854:	mov	w21, #0x1                   	// #1
   4a858:	cbz	w24, 4a894 <mpfr_remainder@@Base+0x198>
   4a85c:	mov	w26, wzr
   4a860:	cbnz	x19, 4a8a8 <mpfr_remainder@@Base+0x1ac>
   4a864:	b	4a99c <mpfr_remainder@@Base+0x2a0>
   4a868:	add	x0, sp, #0x20
   4a86c:	add	x1, sp, #0x20
   4a870:	mov	x2, x20
   4a874:	bl	c290 <__gmpz_mul_2exp@plt>
   4a878:	sub	x0, x29, #0x10
   4a87c:	add	x1, sp, #0x10
   4a880:	sub	x2, x29, #0x10
   4a884:	add	x3, sp, #0x20
   4a888:	bl	bb90 <__gmpz_tdiv_qr@plt>
   4a88c:	mov	w21, wzr
   4a890:	cbnz	w24, 4a85c <mpfr_remainder@@Base+0x160>
   4a894:	sub	x0, x29, #0x10
   4a898:	mov	x1, xzr
   4a89c:	bl	c080 <__gmpz_tstbit@plt>
   4a8a0:	mov	w26, w0
   4a8a4:	cbz	x19, 4a99c <mpfr_remainder@@Base+0x2a0>
   4a8a8:	sub	x0, x29, #0x10
   4a8ac:	sub	x1, x29, #0x10
   4a8b0:	mov	w2, #0x3f                  	// #63
   4a8b4:	bl	baf0 <__gmpz_tdiv_r_2exp@plt>
   4a8b8:	sub	x0, x29, #0x10
   4a8bc:	bl	bae0 <__gmpz_get_si@plt>
   4a8c0:	str	x0, [x19]
   4a8c4:	b	4a99c <mpfr_remainder@@Base+0x2a0>
   4a8c8:	cbz	w24, 4a958 <mpfr_remainder@@Base+0x25c>
   4a8cc:	add	x0, sp, #0x10
   4a8d0:	mov	w1, #0x2                   	// #2
   4a8d4:	bl	bd60 <__gmpz_set_ui@plt>
   4a8d8:	sub	x2, x23, x28
   4a8dc:	add	x0, sp, #0x10
   4a8e0:	add	x1, sp, #0x10
   4a8e4:	add	x3, sp, #0x20
   4a8e8:	bl	cc10 <__gmpz_powm_ui@plt>
   4a8ec:	add	x0, sp, #0x10
   4a8f0:	add	x1, sp, #0x10
   4a8f4:	sub	x2, x29, #0x10
   4a8f8:	bl	c090 <__gmpz_mul@plt>
   4a8fc:	add	x0, sp, #0x10
   4a900:	add	x1, sp, #0x10
   4a904:	add	x2, sp, #0x20
   4a908:	bl	c8f0 <__gmpz_mod@plt>
   4a90c:	cbz	x19, 4a94c <mpfr_remainder@@Base+0x250>
   4a910:	add	x0, sp, #0x20
   4a914:	add	x1, sp, #0x20
   4a918:	mov	w2, #0x3f                  	// #63
   4a91c:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   4a920:	sub	x0, x29, #0x10
   4a924:	add	x1, sp, #0x10
   4a928:	add	x2, sp, #0x10
   4a92c:	add	x3, sp, #0x20
   4a930:	bl	bb90 <__gmpz_tdiv_qr@plt>
   4a934:	sub	x0, x29, #0x10
   4a938:	bl	bae0 <__gmpz_get_si@plt>
   4a93c:	mov	w21, wzr
   4a940:	str	x0, [x19]
   4a944:	and	w26, w0, #0x1
   4a948:	b	4a99c <mpfr_remainder@@Base+0x2a0>
   4a94c:	cbz	w24, 4a960 <mpfr_remainder@@Base+0x264>
   4a950:	mov	w26, wzr
   4a954:	b	4a998 <mpfr_remainder@@Base+0x29c>
   4a958:	mov	w2, #0x1                   	// #1
   4a95c:	b	4a804 <mpfr_remainder@@Base+0x108>
   4a960:	add	x0, sp, #0x20
   4a964:	add	x1, sp, #0x20
   4a968:	mov	w2, #0x1                   	// #1
   4a96c:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   4a970:	add	x0, sp, #0x10
   4a974:	add	x1, sp, #0x20
   4a978:	bl	bf90 <__gmpz_cmpabs@plt>
   4a97c:	mvn	w8, w0
   4a980:	lsr	w26, w8, #31
   4a984:	tbnz	w0, #31, 4a998 <mpfr_remainder@@Base+0x29c>
   4a988:	add	x0, sp, #0x10
   4a98c:	add	x1, sp, #0x10
   4a990:	add	x2, sp, #0x20
   4a994:	bl	be90 <__gmpz_sub@plt>
   4a998:	mov	w21, wzr
   4a99c:	ldr	w8, [sp, #20]
   4a9a0:	cbz	w8, 4a9fc <mpfr_remainder@@Base+0x300>
   4a9a4:	cbnz	w24, 4aa90 <mpfr_remainder@@Base+0x394>
   4a9a8:	add	x0, sp, #0x10
   4a9ac:	add	x1, sp, #0x10
   4a9b0:	mov	w2, #0x1                   	// #1
   4a9b4:	bl	c290 <__gmpz_mul_2exp@plt>
   4a9b8:	cbz	w21, 4aa40 <mpfr_remainder@@Base+0x344>
   4a9bc:	add	x0, sp, #0x10
   4a9c0:	mov	w1, #0x2                   	// #2
   4a9c4:	bl	cbb0 <__gmpz_sizeinbase@plt>
   4a9c8:	add	x21, x0, x23
   4a9cc:	add	x0, sp, #0x20
   4a9d0:	mov	w1, #0x2                   	// #2
   4a9d4:	bl	cbb0 <__gmpz_sizeinbase@plt>
   4a9d8:	add	x8, x0, x28
   4a9dc:	cmp	x21, x8
   4a9e0:	b.ge	4aa30 <mpfr_remainder@@Base+0x334>  // b.tcont
   4a9e4:	add	x0, sp, #0x10
   4a9e8:	add	x1, sp, #0x10
   4a9ec:	mov	w2, #0x1                   	// #1
   4a9f0:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   4a9f4:	cbnz	w26, 4aa70 <mpfr_remainder@@Base+0x374>
   4a9f8:	b	4aa90 <mpfr_remainder@@Base+0x394>
   4a9fc:	ldr	w20, [sp, #12]
   4aa00:	mov	w8, #0x1                   	// #1
   4aa04:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4aa08:	str	w8, [x22, #8]
   4aa0c:	str	x9, [x22, #16]
   4aa10:	tbz	w20, #31, 4aa24 <mpfr_remainder@@Base+0x328>
   4aa14:	mov	x0, x22
   4aa18:	mov	x1, x22
   4aa1c:	mov	w2, wzr
   4aa20:	bl	be20 <mpfr_neg@plt>
   4aa24:	mov	w21, wzr
   4aa28:	cbnz	x19, 4aac4 <mpfr_remainder@@Base+0x3c8>
   4aa2c:	b	4aad4 <mpfr_remainder@@Base+0x3d8>
   4aa30:	add	x0, sp, #0x20
   4aa34:	add	x1, sp, #0x20
   4aa38:	mov	x2, x20
   4aa3c:	bl	c290 <__gmpz_mul_2exp@plt>
   4aa40:	add	x0, sp, #0x10
   4aa44:	add	x1, sp, #0x20
   4aa48:	bl	bf90 <__gmpz_cmpabs@plt>
   4aa4c:	mov	w24, w0
   4aa50:	add	x0, sp, #0x10
   4aa54:	add	x1, sp, #0x10
   4aa58:	mov	w2, #0x1                   	// #1
   4aa5c:	bl	c1d0 <__gmpz_fdiv_q_2exp@plt>
   4aa60:	cmp	w24, #0x0
   4aa64:	b.gt	4aa70 <mpfr_remainder@@Base+0x374>
   4aa68:	cbz	w26, 4aa90 <mpfr_remainder@@Base+0x394>
   4aa6c:	cbnz	w24, 4aa90 <mpfr_remainder@@Base+0x394>
   4aa70:	add	x0, sp, #0x10
   4aa74:	add	x1, sp, #0x10
   4aa78:	add	x2, sp, #0x20
   4aa7c:	bl	be90 <__gmpz_sub@plt>
   4aa80:	cbz	x19, 4aa90 <mpfr_remainder@@Base+0x394>
   4aa84:	ldr	x8, [x19]
   4aa88:	add	x8, x8, #0x1
   4aa8c:	str	x8, [x19]
   4aa90:	ldr	w20, [sp, #12]
   4aa94:	tbz	w20, #31, 4aaa4 <mpfr_remainder@@Base+0x3a8>
   4aa98:	ldr	w8, [sp, #20]
   4aa9c:	neg	w8, w8
   4aaa0:	str	w8, [sp, #20]
   4aaa4:	cmp	x28, x23
   4aaa8:	csel	x2, x28, x23, lt  // lt = tstop
   4aaac:	add	x1, sp, #0x10
   4aab0:	mov	x0, x22
   4aab4:	mov	w3, w27
   4aab8:	bl	c540 <mpfr_set_z_2exp@plt>
   4aabc:	mov	w21, w0
   4aac0:	cbz	x19, 4aad4 <mpfr_remainder@@Base+0x3d8>
   4aac4:	ldr	x8, [x19]
   4aac8:	cmp	w20, w25
   4aacc:	cneg	x8, x8, ne  // ne = any
   4aad0:	str	x8, [x19]
   4aad4:	sub	x0, x29, #0x10
   4aad8:	bl	c210 <mpfr_mpz_clear@plt>
   4aadc:	add	x0, sp, #0x20
   4aae0:	bl	c210 <mpfr_mpz_clear@plt>
   4aae4:	add	x0, sp, #0x10
   4aae8:	bl	c210 <mpfr_mpz_clear@plt>
   4aaec:	mov	w0, w21
   4aaf0:	ldp	x20, x19, [sp, #144]
   4aaf4:	ldp	x22, x21, [sp, #128]
   4aaf8:	ldp	x24, x23, [sp, #112]
   4aafc:	ldp	x26, x25, [sp, #96]
   4ab00:	ldp	x28, x27, [sp, #80]
   4ab04:	ldp	x29, x30, [sp, #64]
   4ab08:	add	sp, sp, #0xa0
   4ab0c:	ret
   4ab10:	cmp	x9, x8
   4ab14:	b.eq	4ab58 <mpfr_remainder@@Base+0x45c>  // b.none
   4ab18:	ldr	x10, [x25, #16]
   4ab1c:	mov	x11, #0x8000000000000003    	// #-9223372036854775805
   4ab20:	cmp	x9, x11
   4ab24:	b.eq	4ab58 <mpfr_remainder@@Base+0x45c>  // b.none
   4ab28:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   4ab2c:	add	x9, x10, x9
   4ab30:	cmp	x9, #0x1
   4ab34:	b.ls	4ab58 <mpfr_remainder@@Base+0x45c>  // b.plast
   4ab38:	cbz	x19, 4ab40 <mpfr_remainder@@Base+0x444>
   4ab3c:	str	xzr, [x19]
   4ab40:	mov	x0, x22
   4ab44:	mov	x1, x23
   4ab48:	mov	w2, w27
   4ab4c:	bl	c6f0 <mpfr_set4@plt>
   4ab50:	mov	w21, w0
   4ab54:	b	4aaec <mpfr_remainder@@Base+0x3f0>
   4ab58:	str	x8, [x22, #16]
   4ab5c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ab60:	ldr	x1, [x0, #2656]
   4ab64:	add	x0, x0, #0xa60
   4ab68:	blr	x1
   4ab6c:	mrs	x8, tpidr_el0
   4ab70:	ldr	w9, [x8, x0]
   4ab74:	mov	w21, wzr
   4ab78:	orr	w9, w9, #0x4
   4ab7c:	str	w9, [x8, x0]
   4ab80:	b	4aaec <mpfr_remainder@@Base+0x3f0>

000000000004ab84 <mpfr_remquo@@Base>:
   4ab84:	mov	w5, w4
   4ab88:	mov	x4, x3
   4ab8c:	mov	x3, x2
   4ab90:	mov	w2, wzr
   4ab94:	b	4a714 <mpfr_remainder@@Base+0x18>

000000000004ab98 <mpfr_fmod@@Base>:
   4ab98:	mov	w5, w3
   4ab9c:	mov	x4, x2
   4aba0:	mov	x3, x1
   4aba4:	mov	w2, #0x1                   	// #1
   4aba8:	mov	x1, xzr
   4abac:	b	4a714 <mpfr_remainder@@Base+0x18>

000000000004abb0 <mpfr_fmodquo@@Base>:
   4abb0:	mov	w5, w4
   4abb4:	mov	x4, x3
   4abb8:	mov	x3, x2
   4abbc:	mov	w2, #0x1                   	// #1
   4abc0:	b	4a714 <mpfr_remainder@@Base+0x18>

000000000004abc4 <mpfr_get_patches@@Base>:
   4abc4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4abc8:	add	x0, x0, #0x333
   4abcc:	ret

000000000004abd0 <mpfr_add_d@@Base>:
   4abd0:	sub	sp, sp, #0x90
   4abd4:	stp	x29, x30, [sp, #48]
   4abd8:	stp	x28, x27, [sp, #64]
   4abdc:	stp	x26, x25, [sp, #80]
   4abe0:	stp	x24, x23, [sp, #96]
   4abe4:	stp	x22, x21, [sp, #112]
   4abe8:	stp	x20, x19, [sp, #128]
   4abec:	add	x29, sp, #0x30
   4abf0:	mov	w19, w2
   4abf4:	mov	x21, x1
   4abf8:	mov	x20, x0
   4abfc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ac00:	ldr	x1, [x0, #2656]
   4ac04:	add	x0, x0, #0xa60
   4ac08:	blr	x1
   4ac0c:	mrs	x25, tpidr_el0
   4ac10:	ldr	w27, [x25, x0]
   4ac14:	mov	x22, x0
   4ac18:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ac1c:	ldr	x1, [x0, #2592]
   4ac20:	add	x0, x0, #0xa20
   4ac24:	blr	x1
   4ac28:	ldr	x26, [x25, x0]
   4ac2c:	mov	x23, x0
   4ac30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ac34:	ldr	x1, [x0, #2624]
   4ac38:	add	x0, x0, #0xa40
   4ac3c:	blr	x1
   4ac40:	ldr	x28, [x25, x0]
   4ac44:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4ac48:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4ac4c:	mov	x24, x0
   4ac50:	mov	w10, #0x35                  	// #53
   4ac54:	add	x11, sp, #0x8
   4ac58:	str	x8, [x25, x23]
   4ac5c:	str	x9, [x25, x0]
   4ac60:	mov	w8, #0x1                   	// #1
   4ac64:	add	x0, sp, #0x10
   4ac68:	mov	w1, w2
   4ac6c:	str	x10, [sp, #16]
   4ac70:	str	x11, [sp, #40]
   4ac74:	str	w8, [sp, #24]
   4ac78:	bl	bef0 <mpfr_set_d@plt>
   4ac7c:	add	x2, sp, #0x10
   4ac80:	mov	x0, x20
   4ac84:	mov	x1, x21
   4ac88:	mov	w3, w19
   4ac8c:	str	wzr, [x25, x22]
   4ac90:	bl	c240 <mpfr_add@plt>
   4ac94:	ldr	w8, [x25, x22]
   4ac98:	str	x26, [x25, x23]
   4ac9c:	str	x28, [x25, x24]
   4aca0:	orr	w9, w8, w27
   4aca4:	str	w9, [x25, x22]
   4aca8:	ldr	x10, [x20, #16]
   4acac:	mov	w8, w0
   4acb0:	cmp	x10, x28
   4acb4:	b.gt	4ad00 <mpfr_add_d@@Base+0x130>
   4acb8:	cmp	x10, x26
   4acbc:	b.lt	4ad00 <mpfr_add_d@@Base+0x130>  // b.tstop
   4acc0:	cbz	w8, 4acdc <mpfr_add_d@@Base+0x10c>
   4acc4:	orr	w9, w9, #0x8
   4acc8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4accc:	ldr	x1, [x0, #2656]
   4acd0:	add	x0, x0, #0xa60
   4acd4:	blr	x1
   4acd8:	str	w9, [x25, x0]
   4acdc:	ldp	x20, x19, [sp, #128]
   4ace0:	ldp	x22, x21, [sp, #112]
   4ace4:	ldp	x24, x23, [sp, #96]
   4ace8:	ldp	x26, x25, [sp, #80]
   4acec:	ldp	x28, x27, [sp, #64]
   4acf0:	ldp	x29, x30, [sp, #48]
   4acf4:	mov	w0, w8
   4acf8:	add	sp, sp, #0x90
   4acfc:	ret
   4ad00:	mov	x0, x20
   4ad04:	mov	w1, w8
   4ad08:	mov	w2, w19
   4ad0c:	bl	cb80 <mpfr_check_range@plt>
   4ad10:	mov	w8, w0
   4ad14:	b	4acdc <mpfr_add_d@@Base+0x10c>

000000000004ad18 <mpfr_sub_d@@Base>:
   4ad18:	sub	sp, sp, #0x90
   4ad1c:	stp	x29, x30, [sp, #48]
   4ad20:	stp	x28, x27, [sp, #64]
   4ad24:	stp	x26, x25, [sp, #80]
   4ad28:	stp	x24, x23, [sp, #96]
   4ad2c:	stp	x22, x21, [sp, #112]
   4ad30:	stp	x20, x19, [sp, #128]
   4ad34:	add	x29, sp, #0x30
   4ad38:	mov	w19, w2
   4ad3c:	mov	x21, x1
   4ad40:	mov	x20, x0
   4ad44:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ad48:	ldr	x1, [x0, #2656]
   4ad4c:	add	x0, x0, #0xa60
   4ad50:	blr	x1
   4ad54:	mrs	x25, tpidr_el0
   4ad58:	ldr	w27, [x25, x0]
   4ad5c:	mov	x22, x0
   4ad60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ad64:	ldr	x1, [x0, #2592]
   4ad68:	add	x0, x0, #0xa20
   4ad6c:	blr	x1
   4ad70:	ldr	x26, [x25, x0]
   4ad74:	mov	x23, x0
   4ad78:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ad7c:	ldr	x1, [x0, #2624]
   4ad80:	add	x0, x0, #0xa40
   4ad84:	blr	x1
   4ad88:	ldr	x28, [x25, x0]
   4ad8c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4ad90:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4ad94:	mov	x24, x0
   4ad98:	mov	w10, #0x35                  	// #53
   4ad9c:	add	x11, sp, #0x8
   4ada0:	str	x8, [x25, x23]
   4ada4:	str	x9, [x25, x0]
   4ada8:	mov	w8, #0x1                   	// #1
   4adac:	add	x0, sp, #0x10
   4adb0:	mov	w1, w2
   4adb4:	str	x10, [sp, #16]
   4adb8:	str	x11, [sp, #40]
   4adbc:	str	w8, [sp, #24]
   4adc0:	bl	bef0 <mpfr_set_d@plt>
   4adc4:	add	x2, sp, #0x10
   4adc8:	mov	x0, x20
   4adcc:	mov	x1, x21
   4add0:	mov	w3, w19
   4add4:	str	wzr, [x25, x22]
   4add8:	bl	bc20 <mpfr_sub@plt>
   4addc:	ldr	w8, [x25, x22]
   4ade0:	str	x26, [x25, x23]
   4ade4:	str	x28, [x25, x24]
   4ade8:	orr	w9, w8, w27
   4adec:	str	w9, [x25, x22]
   4adf0:	ldr	x10, [x20, #16]
   4adf4:	mov	w8, w0
   4adf8:	cmp	x10, x28
   4adfc:	b.gt	4ae48 <mpfr_sub_d@@Base+0x130>
   4ae00:	cmp	x10, x26
   4ae04:	b.lt	4ae48 <mpfr_sub_d@@Base+0x130>  // b.tstop
   4ae08:	cbz	w8, 4ae24 <mpfr_sub_d@@Base+0x10c>
   4ae0c:	orr	w9, w9, #0x8
   4ae10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ae14:	ldr	x1, [x0, #2656]
   4ae18:	add	x0, x0, #0xa60
   4ae1c:	blr	x1
   4ae20:	str	w9, [x25, x0]
   4ae24:	ldp	x20, x19, [sp, #128]
   4ae28:	ldp	x22, x21, [sp, #112]
   4ae2c:	ldp	x24, x23, [sp, #96]
   4ae30:	ldp	x26, x25, [sp, #80]
   4ae34:	ldp	x28, x27, [sp, #64]
   4ae38:	ldp	x29, x30, [sp, #48]
   4ae3c:	mov	w0, w8
   4ae40:	add	sp, sp, #0x90
   4ae44:	ret
   4ae48:	mov	x0, x20
   4ae4c:	mov	w1, w8
   4ae50:	mov	w2, w19
   4ae54:	bl	cb80 <mpfr_check_range@plt>
   4ae58:	mov	w8, w0
   4ae5c:	b	4ae24 <mpfr_sub_d@@Base+0x10c>

000000000004ae60 <mpfr_d_sub@@Base>:
   4ae60:	sub	sp, sp, #0x90
   4ae64:	stp	x29, x30, [sp, #48]
   4ae68:	stp	x28, x27, [sp, #64]
   4ae6c:	stp	x26, x25, [sp, #80]
   4ae70:	stp	x24, x23, [sp, #96]
   4ae74:	stp	x22, x21, [sp, #112]
   4ae78:	stp	x20, x19, [sp, #128]
   4ae7c:	add	x29, sp, #0x30
   4ae80:	mov	w19, w2
   4ae84:	mov	x21, x1
   4ae88:	mov	x20, x0
   4ae8c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ae90:	ldr	x1, [x0, #2656]
   4ae94:	add	x0, x0, #0xa60
   4ae98:	blr	x1
   4ae9c:	mrs	x25, tpidr_el0
   4aea0:	ldr	w27, [x25, x0]
   4aea4:	mov	x22, x0
   4aea8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4aeac:	ldr	x1, [x0, #2592]
   4aeb0:	add	x0, x0, #0xa20
   4aeb4:	blr	x1
   4aeb8:	ldr	x26, [x25, x0]
   4aebc:	mov	x23, x0
   4aec0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4aec4:	ldr	x1, [x0, #2624]
   4aec8:	add	x0, x0, #0xa40
   4aecc:	blr	x1
   4aed0:	ldr	x28, [x25, x0]
   4aed4:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4aed8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4aedc:	mov	x24, x0
   4aee0:	mov	w10, #0x35                  	// #53
   4aee4:	add	x11, sp, #0x8
   4aee8:	str	x8, [x25, x23]
   4aeec:	str	x9, [x25, x0]
   4aef0:	mov	w8, #0x1                   	// #1
   4aef4:	add	x0, sp, #0x10
   4aef8:	mov	w1, w2
   4aefc:	str	x10, [sp, #16]
   4af00:	str	x11, [sp, #40]
   4af04:	str	w8, [sp, #24]
   4af08:	bl	bef0 <mpfr_set_d@plt>
   4af0c:	add	x1, sp, #0x10
   4af10:	mov	x0, x20
   4af14:	mov	x2, x21
   4af18:	mov	w3, w19
   4af1c:	str	wzr, [x25, x22]
   4af20:	bl	bc20 <mpfr_sub@plt>
   4af24:	ldr	w8, [x25, x22]
   4af28:	str	x26, [x25, x23]
   4af2c:	str	x28, [x25, x24]
   4af30:	orr	w9, w8, w27
   4af34:	str	w9, [x25, x22]
   4af38:	ldr	x10, [x20, #16]
   4af3c:	mov	w8, w0
   4af40:	cmp	x10, x28
   4af44:	b.gt	4af90 <mpfr_d_sub@@Base+0x130>
   4af48:	cmp	x10, x26
   4af4c:	b.lt	4af90 <mpfr_d_sub@@Base+0x130>  // b.tstop
   4af50:	cbz	w8, 4af6c <mpfr_d_sub@@Base+0x10c>
   4af54:	orr	w9, w9, #0x8
   4af58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4af5c:	ldr	x1, [x0, #2656]
   4af60:	add	x0, x0, #0xa60
   4af64:	blr	x1
   4af68:	str	w9, [x25, x0]
   4af6c:	ldp	x20, x19, [sp, #128]
   4af70:	ldp	x22, x21, [sp, #112]
   4af74:	ldp	x24, x23, [sp, #96]
   4af78:	ldp	x26, x25, [sp, #80]
   4af7c:	ldp	x28, x27, [sp, #64]
   4af80:	ldp	x29, x30, [sp, #48]
   4af84:	mov	w0, w8
   4af88:	add	sp, sp, #0x90
   4af8c:	ret
   4af90:	mov	x0, x20
   4af94:	mov	w1, w8
   4af98:	mov	w2, w19
   4af9c:	bl	cb80 <mpfr_check_range@plt>
   4afa0:	mov	w8, w0
   4afa4:	b	4af6c <mpfr_d_sub@@Base+0x10c>

000000000004afa8 <mpfr_mul_d@@Base>:
   4afa8:	sub	sp, sp, #0x90
   4afac:	stp	x29, x30, [sp, #48]
   4afb0:	stp	x28, x27, [sp, #64]
   4afb4:	stp	x26, x25, [sp, #80]
   4afb8:	stp	x24, x23, [sp, #96]
   4afbc:	stp	x22, x21, [sp, #112]
   4afc0:	stp	x20, x19, [sp, #128]
   4afc4:	add	x29, sp, #0x30
   4afc8:	mov	w19, w2
   4afcc:	mov	x21, x1
   4afd0:	mov	x20, x0
   4afd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4afd8:	ldr	x1, [x0, #2656]
   4afdc:	add	x0, x0, #0xa60
   4afe0:	blr	x1
   4afe4:	mrs	x25, tpidr_el0
   4afe8:	ldr	w27, [x25, x0]
   4afec:	mov	x22, x0
   4aff0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4aff4:	ldr	x1, [x0, #2592]
   4aff8:	add	x0, x0, #0xa20
   4affc:	blr	x1
   4b000:	ldr	x26, [x25, x0]
   4b004:	mov	x23, x0
   4b008:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b00c:	ldr	x1, [x0, #2624]
   4b010:	add	x0, x0, #0xa40
   4b014:	blr	x1
   4b018:	ldr	x28, [x25, x0]
   4b01c:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4b020:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4b024:	mov	x24, x0
   4b028:	mov	w10, #0x35                  	// #53
   4b02c:	add	x11, sp, #0x8
   4b030:	str	x8, [x25, x23]
   4b034:	str	x9, [x25, x0]
   4b038:	mov	w8, #0x1                   	// #1
   4b03c:	add	x0, sp, #0x10
   4b040:	mov	w1, w2
   4b044:	str	x10, [sp, #16]
   4b048:	str	x11, [sp, #40]
   4b04c:	str	w8, [sp, #24]
   4b050:	bl	bef0 <mpfr_set_d@plt>
   4b054:	add	x2, sp, #0x10
   4b058:	mov	x0, x20
   4b05c:	mov	x1, x21
   4b060:	mov	w3, w19
   4b064:	str	wzr, [x25, x22]
   4b068:	bl	be00 <mpfr_mul@plt>
   4b06c:	ldr	w8, [x25, x22]
   4b070:	str	x26, [x25, x23]
   4b074:	str	x28, [x25, x24]
   4b078:	orr	w9, w8, w27
   4b07c:	str	w9, [x25, x22]
   4b080:	ldr	x10, [x20, #16]
   4b084:	mov	w8, w0
   4b088:	cmp	x10, x28
   4b08c:	b.gt	4b0d8 <mpfr_mul_d@@Base+0x130>
   4b090:	cmp	x10, x26
   4b094:	b.lt	4b0d8 <mpfr_mul_d@@Base+0x130>  // b.tstop
   4b098:	cbz	w8, 4b0b4 <mpfr_mul_d@@Base+0x10c>
   4b09c:	orr	w9, w9, #0x8
   4b0a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b0a4:	ldr	x1, [x0, #2656]
   4b0a8:	add	x0, x0, #0xa60
   4b0ac:	blr	x1
   4b0b0:	str	w9, [x25, x0]
   4b0b4:	ldp	x20, x19, [sp, #128]
   4b0b8:	ldp	x22, x21, [sp, #112]
   4b0bc:	ldp	x24, x23, [sp, #96]
   4b0c0:	ldp	x26, x25, [sp, #80]
   4b0c4:	ldp	x28, x27, [sp, #64]
   4b0c8:	ldp	x29, x30, [sp, #48]
   4b0cc:	mov	w0, w8
   4b0d0:	add	sp, sp, #0x90
   4b0d4:	ret
   4b0d8:	mov	x0, x20
   4b0dc:	mov	w1, w8
   4b0e0:	mov	w2, w19
   4b0e4:	bl	cb80 <mpfr_check_range@plt>
   4b0e8:	mov	w8, w0
   4b0ec:	b	4b0b4 <mpfr_mul_d@@Base+0x10c>

000000000004b0f0 <mpfr_div_d@@Base>:
   4b0f0:	sub	sp, sp, #0x90
   4b0f4:	stp	x29, x30, [sp, #48]
   4b0f8:	stp	x28, x27, [sp, #64]
   4b0fc:	stp	x26, x25, [sp, #80]
   4b100:	stp	x24, x23, [sp, #96]
   4b104:	stp	x22, x21, [sp, #112]
   4b108:	stp	x20, x19, [sp, #128]
   4b10c:	add	x29, sp, #0x30
   4b110:	mov	w19, w2
   4b114:	mov	x21, x1
   4b118:	mov	x20, x0
   4b11c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b120:	ldr	x1, [x0, #2656]
   4b124:	add	x0, x0, #0xa60
   4b128:	blr	x1
   4b12c:	mrs	x25, tpidr_el0
   4b130:	ldr	w27, [x25, x0]
   4b134:	mov	x22, x0
   4b138:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b13c:	ldr	x1, [x0, #2592]
   4b140:	add	x0, x0, #0xa20
   4b144:	blr	x1
   4b148:	ldr	x26, [x25, x0]
   4b14c:	mov	x23, x0
   4b150:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b154:	ldr	x1, [x0, #2624]
   4b158:	add	x0, x0, #0xa40
   4b15c:	blr	x1
   4b160:	ldr	x28, [x25, x0]
   4b164:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4b168:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4b16c:	mov	x24, x0
   4b170:	mov	w10, #0x35                  	// #53
   4b174:	add	x11, sp, #0x8
   4b178:	str	x8, [x25, x23]
   4b17c:	str	x9, [x25, x0]
   4b180:	mov	w8, #0x1                   	// #1
   4b184:	add	x0, sp, #0x10
   4b188:	mov	w1, w2
   4b18c:	str	x10, [sp, #16]
   4b190:	str	x11, [sp, #40]
   4b194:	str	w8, [sp, #24]
   4b198:	bl	bef0 <mpfr_set_d@plt>
   4b19c:	add	x2, sp, #0x10
   4b1a0:	mov	x0, x20
   4b1a4:	mov	x1, x21
   4b1a8:	mov	w3, w19
   4b1ac:	str	wzr, [x25, x22]
   4b1b0:	bl	c670 <mpfr_div@plt>
   4b1b4:	ldr	w8, [x25, x22]
   4b1b8:	str	x26, [x25, x23]
   4b1bc:	str	x28, [x25, x24]
   4b1c0:	orr	w9, w8, w27
   4b1c4:	str	w9, [x25, x22]
   4b1c8:	ldr	x10, [x20, #16]
   4b1cc:	mov	w8, w0
   4b1d0:	cmp	x10, x28
   4b1d4:	b.gt	4b220 <mpfr_div_d@@Base+0x130>
   4b1d8:	cmp	x10, x26
   4b1dc:	b.lt	4b220 <mpfr_div_d@@Base+0x130>  // b.tstop
   4b1e0:	cbz	w8, 4b1fc <mpfr_div_d@@Base+0x10c>
   4b1e4:	orr	w9, w9, #0x8
   4b1e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b1ec:	ldr	x1, [x0, #2656]
   4b1f0:	add	x0, x0, #0xa60
   4b1f4:	blr	x1
   4b1f8:	str	w9, [x25, x0]
   4b1fc:	ldp	x20, x19, [sp, #128]
   4b200:	ldp	x22, x21, [sp, #112]
   4b204:	ldp	x24, x23, [sp, #96]
   4b208:	ldp	x26, x25, [sp, #80]
   4b20c:	ldp	x28, x27, [sp, #64]
   4b210:	ldp	x29, x30, [sp, #48]
   4b214:	mov	w0, w8
   4b218:	add	sp, sp, #0x90
   4b21c:	ret
   4b220:	mov	x0, x20
   4b224:	mov	w1, w8
   4b228:	mov	w2, w19
   4b22c:	bl	cb80 <mpfr_check_range@plt>
   4b230:	mov	w8, w0
   4b234:	b	4b1fc <mpfr_div_d@@Base+0x10c>

000000000004b238 <mpfr_d_div@@Base>:
   4b238:	sub	sp, sp, #0x90
   4b23c:	stp	x29, x30, [sp, #48]
   4b240:	stp	x28, x27, [sp, #64]
   4b244:	stp	x26, x25, [sp, #80]
   4b248:	stp	x24, x23, [sp, #96]
   4b24c:	stp	x22, x21, [sp, #112]
   4b250:	stp	x20, x19, [sp, #128]
   4b254:	add	x29, sp, #0x30
   4b258:	mov	w19, w2
   4b25c:	mov	x21, x1
   4b260:	mov	x20, x0
   4b264:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b268:	ldr	x1, [x0, #2656]
   4b26c:	add	x0, x0, #0xa60
   4b270:	blr	x1
   4b274:	mrs	x25, tpidr_el0
   4b278:	ldr	w27, [x25, x0]
   4b27c:	mov	x22, x0
   4b280:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b284:	ldr	x1, [x0, #2592]
   4b288:	add	x0, x0, #0xa20
   4b28c:	blr	x1
   4b290:	ldr	x26, [x25, x0]
   4b294:	mov	x23, x0
   4b298:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b29c:	ldr	x1, [x0, #2624]
   4b2a0:	add	x0, x0, #0xa40
   4b2a4:	blr	x1
   4b2a8:	ldr	x28, [x25, x0]
   4b2ac:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4b2b0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   4b2b4:	mov	x24, x0
   4b2b8:	mov	w10, #0x35                  	// #53
   4b2bc:	add	x11, sp, #0x8
   4b2c0:	str	x8, [x25, x23]
   4b2c4:	str	x9, [x25, x0]
   4b2c8:	mov	w8, #0x1                   	// #1
   4b2cc:	add	x0, sp, #0x10
   4b2d0:	mov	w1, w2
   4b2d4:	str	x10, [sp, #16]
   4b2d8:	str	x11, [sp, #40]
   4b2dc:	str	w8, [sp, #24]
   4b2e0:	bl	bef0 <mpfr_set_d@plt>
   4b2e4:	add	x1, sp, #0x10
   4b2e8:	mov	x0, x20
   4b2ec:	mov	x2, x21
   4b2f0:	mov	w3, w19
   4b2f4:	str	wzr, [x25, x22]
   4b2f8:	bl	c670 <mpfr_div@plt>
   4b2fc:	ldr	w8, [x25, x22]
   4b300:	str	x26, [x25, x23]
   4b304:	str	x28, [x25, x24]
   4b308:	orr	w9, w8, w27
   4b30c:	str	w9, [x25, x22]
   4b310:	ldr	x10, [x20, #16]
   4b314:	mov	w8, w0
   4b318:	cmp	x10, x28
   4b31c:	b.gt	4b368 <mpfr_d_div@@Base+0x130>
   4b320:	cmp	x10, x26
   4b324:	b.lt	4b368 <mpfr_d_div@@Base+0x130>  // b.tstop
   4b328:	cbz	w8, 4b344 <mpfr_d_div@@Base+0x10c>
   4b32c:	orr	w9, w9, #0x8
   4b330:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b334:	ldr	x1, [x0, #2656]
   4b338:	add	x0, x0, #0xa60
   4b33c:	blr	x1
   4b340:	str	w9, [x25, x0]
   4b344:	ldp	x20, x19, [sp, #128]
   4b348:	ldp	x22, x21, [sp, #112]
   4b34c:	ldp	x24, x23, [sp, #96]
   4b350:	ldp	x26, x25, [sp, #80]
   4b354:	ldp	x28, x27, [sp, #64]
   4b358:	ldp	x29, x30, [sp, #48]
   4b35c:	mov	w0, w8
   4b360:	add	sp, sp, #0x90
   4b364:	ret
   4b368:	mov	x0, x20
   4b36c:	mov	w1, w8
   4b370:	mov	w2, w19
   4b374:	bl	cb80 <mpfr_check_range@plt>
   4b378:	mov	w8, w0
   4b37c:	b	4b344 <mpfr_d_div@@Base+0x10c>

000000000004b380 <mpfr_li2@@Base>:
   4b380:	sub	sp, sp, #0x140
   4b384:	stp	x29, x30, [sp, #224]
   4b388:	stp	x28, x27, [sp, #240]
   4b38c:	stp	x26, x25, [sp, #256]
   4b390:	stp	x24, x23, [sp, #272]
   4b394:	stp	x22, x21, [sp, #288]
   4b398:	stp	x20, x19, [sp, #304]
   4b39c:	ldr	x8, [x1, #16]
   4b3a0:	mov	x19, #0x4                   	// #4
   4b3a4:	movk	x19, #0x8000, lsl #48
   4b3a8:	mov	x21, x1
   4b3ac:	cmp	x8, x19
   4b3b0:	mov	x28, x0
   4b3b4:	add	x29, sp, #0xe0
   4b3b8:	b.lt	4b8d4 <mpfr_li2@@Base+0x554>  // b.tstop
   4b3bc:	ldr	w9, [x21, #8]
   4b3c0:	mov	w25, w2
   4b3c4:	cmp	w9, #0x1
   4b3c8:	b.lt	4b3f8 <mpfr_li2@@Base+0x78>  // b.tstop
   4b3cc:	tbz	x8, #63, 4b414 <mpfr_li2@@Base+0x94>
   4b3d0:	ldr	x9, [x28]
   4b3d4:	mov	w10, #0x1                   	// #1
   4b3d8:	sub	x2, x10, x8
   4b3dc:	add	x8, x9, #0x1
   4b3e0:	cmp	x2, x8
   4b3e4:	b.ls	4b414 <mpfr_li2@@Base+0x94>  // b.plast
   4b3e8:	mov	w3, #0x1                   	// #1
   4b3ec:	mov	x0, x28
   4b3f0:	mov	x1, x21
   4b3f4:	b	4c148 <mpfr_li2@@Base+0xdc8>
   4b3f8:	tbz	x8, #63, 4b414 <mpfr_li2@@Base+0x94>
   4b3fc:	ldr	x9, [x28]
   4b400:	mov	w10, #0x2                   	// #2
   4b404:	sub	x2, x10, x8
   4b408:	add	x8, x9, #0x1
   4b40c:	cmp	x2, x8
   4b410:	b.hi	4c13c <mpfr_li2@@Base+0xdbc>  // b.pmore
   4b414:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b418:	ldr	x1, [x0, #2656]
   4b41c:	add	x0, x0, #0xa60
   4b420:	blr	x1
   4b424:	mrs	x11, tpidr_el0
   4b428:	ldr	w8, [x11, x0]
   4b42c:	str	w8, [sp, #36]
   4b430:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b434:	ldr	x1, [x0, #2592]
   4b438:	add	x0, x0, #0xa20
   4b43c:	blr	x1
   4b440:	ldr	x9, [x11, x0]
   4b444:	mov	x8, x0
   4b448:	str	x9, [sp, #40]
   4b44c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b450:	ldr	x1, [x0, #2624]
   4b454:	add	x0, x0, #0xa40
   4b458:	blr	x1
   4b45c:	ldr	x9, [x11, x0]
   4b460:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   4b464:	str	x10, [x11, x0]
   4b468:	str	x11, [sp, #48]
   4b46c:	str	x9, [sp, #24]
   4b470:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4b474:	str	x9, [x11, x8]
   4b478:	ldr	x26, [x28]
   4b47c:	subs	x20, x26, #0x1
   4b480:	b.eq	4b920 <mpfr_li2@@Base+0x5a0>  // b.none
   4b484:	b.le	4b928 <mpfr_li2@@Base+0x5a8>
   4b488:	clz	x8, x20
   4b48c:	mov	w9, #0x40                  	// #64
   4b490:	sub	x8, x9, x8
   4b494:	add	x8, x26, x8
   4b498:	mov	x0, x21
   4b49c:	add	x22, x8, #0xd
   4b4a0:	bl	c760 <mpfr_sgn@plt>
   4b4a4:	cmp	w0, #0x1
   4b4a8:	b.lt	4b744 <mpfr_li2@@Base+0x3c4>  // b.tstop
   4b4ac:	mov	w1, #0x1                   	// #1
   4b4b0:	mov	x2, #0xffffffffffffffff    	// #-1
   4b4b4:	mov	x0, x21
   4b4b8:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4b4bc:	cmp	w0, #0x0
   4b4c0:	b.gt	4b744 <mpfr_li2@@Base+0x3c4>
   4b4c4:	sub	x0, x29, #0x48
   4b4c8:	mov	x1, x22
   4b4cc:	str	x28, [sp, #16]
   4b4d0:	bl	cad0 <mpfr_init2@plt>
   4b4d4:	sub	x0, x29, #0x28
   4b4d8:	mov	x1, x22
   4b4dc:	bl	cad0 <mpfr_init2@plt>
   4b4e0:	cmp	w25, #0x0
   4b4e4:	mov	w28, w25
   4b4e8:	mov	w20, #0x40                  	// #64
   4b4ec:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   4b4f0:	cinc	x26, x26, eq  // eq = none
   4b4f4:	mov	w24, #0x40                  	// #64
   4b4f8:	sub	x0, x29, #0x48
   4b4fc:	mov	w1, #0x1                   	// #1
   4b500:	mov	x2, x21
   4b504:	mov	w3, wzr
   4b508:	bl	caa0 <mpfr_ui_sub@plt>
   4b50c:	sub	x0, x29, #0x48
   4b510:	sub	x1, x29, #0x48
   4b514:	mov	w2, #0x2                   	// #2
   4b518:	bl	c130 <mpfr_log@plt>
   4b51c:	ldur	x8, [x29, #-56]
   4b520:	cmp	x8, x25
   4b524:	b.eq	4b5fc <mpfr_li2@@Base+0x27c>  // b.none
   4b528:	sub	x0, x29, #0x48
   4b52c:	sub	x1, x29, #0x48
   4b530:	mov	w2, wzr
   4b534:	bl	be20 <mpfr_neg@plt>
   4b538:	ldur	x23, [x29, #-56]
   4b53c:	sub	x0, x29, #0x28
   4b540:	sub	x1, x29, #0x48
   4b544:	mov	w2, #0x2                   	// #2
   4b548:	bl	4cdd0 <mpfr_li2@@Base+0x1a50>
   4b54c:	cbz	w0, 4b654 <mpfr_li2@@Base+0x2d4>
   4b550:	mov	w27, w0
   4b554:	cmp	w0, #0x0
   4b558:	b.le	4b65c <mpfr_li2@@Base+0x2dc>
   4b55c:	sxtw	x8, w27
   4b560:	clz	x8, x8
   4b564:	sub	x27, x20, x8
   4b568:	sub	x0, x29, #0x48
   4b56c:	sub	x1, x29, #0x48
   4b570:	mov	w2, #0x2                   	// #2
   4b574:	bl	c450 <mpfr_sqr@plt>
   4b578:	sub	x0, x29, #0x48
   4b57c:	sub	x1, x29, #0x48
   4b580:	mov	w2, #0x2                   	// #2
   4b584:	mov	w3, #0x2                   	// #2
   4b588:	bl	c950 <mpfr_div_2ui@plt>
   4b58c:	sub	x0, x29, #0x28
   4b590:	sub	x1, x29, #0x28
   4b594:	sub	x2, x29, #0x48
   4b598:	mov	w3, wzr
   4b59c:	bl	bc20 <mpfr_sub@plt>
   4b5a0:	mvn	x8, x23
   4b5a4:	ldur	x9, [x29, #-24]
   4b5a8:	and	x8, x8, x23, asr #63
   4b5ac:	cmp	x27, x8
   4b5b0:	csinc	x8, x8, x27, lt  // lt = tstop
   4b5b4:	cmp	x9, x19
   4b5b8:	sub	x8, x8, x9
   4b5bc:	b.lt	4b5fc <mpfr_li2@@Base+0x27c>  // b.tstop
   4b5c0:	ldur	x9, [x29, #-40]
   4b5c4:	cmp	x8, #0x0
   4b5c8:	ldur	x0, [x29, #-16]
   4b5cc:	csinv	x8, x8, xzr, ge  // ge = tcont
   4b5d0:	sub	x10, x9, #0x1
   4b5d4:	add	x9, x9, #0x3e
   4b5d8:	cmp	x10, #0x0
   4b5dc:	csel	x9, x9, x10, lt  // lt = tstop
   4b5e0:	sub	x8, x22, x8
   4b5e4:	asr	x9, x9, #6
   4b5e8:	add	x1, x9, #0x1
   4b5ec:	sub	x2, x8, #0x2
   4b5f0:	mov	x3, x26
   4b5f4:	bl	c3d0 <mpfr_round_p@plt>
   4b5f8:	cbnz	w0, 4b678 <mpfr_li2@@Base+0x2f8>
   4b5fc:	sub	x8, x19, x22
   4b600:	sub	x8, x8, #0x105
   4b604:	cmp	x24, x8
   4b608:	b.gt	4b638 <mpfr_li2@@Base+0x2b8>
   4b60c:	add	x22, x22, x24
   4b610:	cmp	x22, #0x0
   4b614:	cinc	x8, x22, lt  // lt = tstop
   4b618:	sub	x0, x29, #0x48
   4b61c:	mov	x1, x22
   4b620:	asr	x24, x8, #1
   4b624:	bl	bf80 <mpfr_set_prec@plt>
   4b628:	sub	x0, x29, #0x28
   4b62c:	mov	x1, x22
   4b630:	bl	bf80 <mpfr_set_prec@plt>
   4b634:	b	4b4f8 <mpfr_li2@@Base+0x178>
   4b638:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4b63c:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4b640:	mov	w1, #0x12a                 	// #298
   4b644:	add	x0, x0, #0xc76
   4b648:	add	x2, x2, #0x4df
   4b64c:	bl	cb90 <mpfr_assert_fail@plt>
   4b650:	b	4b60c <mpfr_li2@@Base+0x28c>
   4b654:	mov	x27, xzr
   4b658:	b	4b568 <mpfr_li2@@Base+0x1e8>
   4b65c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4b660:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4b664:	mov	w1, #0x11c                 	// #284
   4b668:	add	x0, x0, #0xc76
   4b66c:	add	x2, x2, #0xc85
   4b670:	bl	cb90 <mpfr_assert_fail@plt>
   4b674:	b	4b55c <mpfr_li2@@Base+0x1dc>
   4b678:	ldr	x20, [sp, #16]
   4b67c:	ldur	w3, [x29, #-32]
   4b680:	sub	x1, x29, #0x28
   4b684:	mov	w2, w28
   4b688:	mov	x0, x20
   4b68c:	bl	c6f0 <mpfr_set4@plt>
   4b690:	mov	w23, w0
   4b694:	sub	x0, x29, #0x48
   4b698:	bl	c110 <mpfr_clear@plt>
   4b69c:	sub	x0, x29, #0x28
   4b6a0:	bl	c110 <mpfr_clear@plt>
   4b6a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b6a8:	ldr	x1, [x0, #2656]
   4b6ac:	add	x0, x0, #0xa60
   4b6b0:	blr	x1
   4b6b4:	ldr	x9, [sp, #48]
   4b6b8:	ldr	w10, [sp, #36]
   4b6bc:	str	w10, [x9, x0]
   4b6c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b6c4:	ldr	x1, [x0, #2592]
   4b6c8:	add	x0, x0, #0xa20
   4b6cc:	blr	x1
   4b6d0:	ldr	x11, [sp, #40]
   4b6d4:	str	x11, [x9, x0]
   4b6d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b6dc:	ldr	x1, [x0, #2624]
   4b6e0:	add	x0, x0, #0xa40
   4b6e4:	blr	x1
   4b6e8:	ldr	x12, [sp, #24]
   4b6ec:	str	x12, [x9, x0]
   4b6f0:	ldr	x8, [x20, #16]
   4b6f4:	cmp	x8, x12
   4b6f8:	b.gt	4b944 <mpfr_li2@@Base+0x5c4>
   4b6fc:	cmp	x8, x11
   4b700:	b.lt	4b944 <mpfr_li2@@Base+0x5c4>  // b.tstop
   4b704:	cbz	w23, 4b720 <mpfr_li2@@Base+0x3a0>
   4b708:	orr	w8, w10, #0x8
   4b70c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b710:	ldr	x1, [x0, #2656]
   4b714:	add	x0, x0, #0xa60
   4b718:	blr	x1
   4b71c:	str	w8, [x9, x0]
   4b720:	mov	w0, w23
   4b724:	ldp	x20, x19, [sp, #304]
   4b728:	ldp	x22, x21, [sp, #288]
   4b72c:	ldp	x24, x23, [sp, #272]
   4b730:	ldp	x26, x25, [sp, #256]
   4b734:	ldp	x28, x27, [sp, #240]
   4b738:	ldp	x29, x30, [sp, #224]
   4b73c:	add	sp, sp, #0x140
   4b740:	ret
   4b744:	mov	w1, #0x1                   	// #1
   4b748:	mov	x0, x21
   4b74c:	mov	x2, xzr
   4b750:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4b754:	cbz	w0, 4b95c <mpfr_li2@@Base+0x5dc>
   4b758:	mov	w1, #0x2                   	// #2
   4b75c:	mov	x0, x21
   4b760:	mov	x2, xzr
   4b764:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4b768:	tbnz	w0, #31, 4bacc <mpfr_li2@@Base+0x74c>
   4b76c:	mov	w1, #0x26                  	// #38
   4b770:	mov	x0, x21
   4b774:	mov	x2, xzr
   4b778:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4b77c:	tbnz	w0, #31, 4c1b4 <mpfr_li2@@Base+0xe34>
   4b780:	ldr	x20, [x28]
   4b784:	mov	w1, #0x26                  	// #38
   4b788:	mov	x0, x21
   4b78c:	mov	x2, xzr
   4b790:	mov	x27, x28
   4b794:	add	x24, x20, #0x14
   4b798:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4b79c:	tbnz	w0, #31, 4cd40 <mpfr_li2@@Base+0x19c0>
   4b7a0:	sub	x0, x29, #0x28
   4b7a4:	mov	x1, x24
   4b7a8:	bl	cad0 <mpfr_init2@plt>
   4b7ac:	sub	x0, x29, #0x48
   4b7b0:	mov	x1, x24
   4b7b4:	bl	cad0 <mpfr_init2@plt>
   4b7b8:	sub	x0, x29, #0x28
   4b7bc:	mov	x1, x21
   4b7c0:	mov	w2, wzr
   4b7c4:	bl	c130 <mpfr_log@plt>
   4b7c8:	sub	x0, x29, #0x28
   4b7cc:	sub	x1, x29, #0x28
   4b7d0:	mov	w2, wzr
   4b7d4:	bl	c450 <mpfr_sqr@plt>
   4b7d8:	sub	x0, x29, #0x28
   4b7dc:	sub	x1, x29, #0x28
   4b7e0:	mov	w2, #0x1                   	// #1
   4b7e4:	mov	w3, wzr
   4b7e8:	bl	c950 <mpfr_div_2ui@plt>
   4b7ec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b7f0:	ldr	x1, [x0, #2704]
   4b7f4:	add	x0, x0, #0xa90
   4b7f8:	blr	x1
   4b7fc:	ldr	x8, [sp, #48]
   4b800:	mov	w2, wzr
   4b804:	add	x1, x8, x0
   4b808:	sub	x0, x29, #0x48
   4b80c:	bl	c3e0 <mpfr_cache@plt>
   4b810:	sub	x0, x29, #0x48
   4b814:	sub	x1, x29, #0x48
   4b818:	mov	w2, wzr
   4b81c:	bl	c450 <mpfr_sqr@plt>
   4b820:	sub	x0, x29, #0x48
   4b824:	sub	x1, x29, #0x48
   4b828:	mov	w2, #0x3                   	// #3
   4b82c:	mov	w3, wzr
   4b830:	bl	ccc0 <mpfr_div_ui@plt>
   4b834:	ldur	x8, [x29, #-24]
   4b838:	ldur	x9, [x29, #-56]
   4b83c:	cmp	x8, x9
   4b840:	b.le	4cd5c <mpfr_li2@@Base+0x19dc>
   4b844:	sub	x0, x29, #0x28
   4b848:	sub	x1, x29, #0x48
   4b84c:	sub	x2, x29, #0x28
   4b850:	mov	w3, wzr
   4b854:	bl	bc20 <mpfr_sub@plt>
   4b858:	ldur	x8, [x29, #-24]
   4b85c:	mov	w23, wzr
   4b860:	cmp	x8, x19
   4b864:	b.lt	4c15c <mpfr_li2@@Base+0xddc>  // b.tstop
   4b868:	ldr	x9, [x21, #16]
   4b86c:	sub	x8, x24, x8
   4b870:	mov	x28, x27
   4b874:	cmp	x9, x8
   4b878:	b.lt	4c1a0 <mpfr_li2@@Base+0xe20>  // b.tstop
   4b87c:	ldur	x8, [x29, #-40]
   4b880:	ldr	x9, [x28]
   4b884:	ldur	x0, [x29, #-16]
   4b888:	add	x2, x20, #0x10
   4b88c:	sub	x10, x8, #0x1
   4b890:	add	x8, x8, #0x3e
   4b894:	cmp	x10, #0x0
   4b898:	csel	x8, x8, x10, lt  // lt = tstop
   4b89c:	cmp	w25, #0x0
   4b8a0:	asr	x8, x8, #6
   4b8a4:	add	x1, x8, #0x1
   4b8a8:	cinc	x3, x9, eq  // eq = none
   4b8ac:	bl	c3d0 <mpfr_round_p@plt>
   4b8b0:	cbz	w0, 4c19c <mpfr_li2@@Base+0xe1c>
   4b8b4:	ldur	w3, [x29, #-32]
   4b8b8:	sub	x1, x29, #0x28
   4b8bc:	mov	x0, x28
   4b8c0:	mov	w2, w25
   4b8c4:	bl	c6f0 <mpfr_set4@plt>
   4b8c8:	cmp	w25, #0x5
   4b8cc:	csinc	w23, w0, wzr, ne  // ne = any
   4b8d0:	b	4c1a0 <mpfr_li2@@Base+0xe20>
   4b8d4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4b8d8:	cmp	x8, x9
   4b8dc:	b.eq	4bd8c <mpfr_li2@@Base+0xa0c>  // b.none
   4b8e0:	mov	x9, #0x2                   	// #2
   4b8e4:	movk	x9, #0x8000, lsl #48
   4b8e8:	cmp	x8, x9
   4b8ec:	b.ne	4bd98 <mpfr_li2@@Base+0xa18>  // b.any
   4b8f0:	sub	x8, x19, #0x2
   4b8f4:	str	x8, [x28, #16]
   4b8f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b8fc:	ldr	x1, [x0, #2656]
   4b900:	add	x0, x0, #0xa60
   4b904:	blr	x1
   4b908:	mrs	x8, tpidr_el0
   4b90c:	ldr	w9, [x8, x0]
   4b910:	mov	w23, wzr
   4b914:	orr	w9, w9, #0x4
   4b918:	str	w9, [x8, x0]
   4b91c:	b	4b720 <mpfr_li2@@Base+0x3a0>
   4b920:	mov	x8, xzr
   4b924:	b	4b494 <mpfr_li2@@Base+0x114>
   4b928:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4b92c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4b930:	add	x0, x0, #0xc76
   4b934:	add	x2, x2, #0xc7c
   4b938:	mov	w1, #0x106                 	// #262
   4b93c:	bl	cb90 <mpfr_assert_fail@plt>
   4b940:	b	4b488 <mpfr_li2@@Base+0x108>
   4b944:	mov	x0, x20
   4b948:	mov	w1, w23
   4b94c:	mov	w2, w28
   4b950:	bl	cb80 <mpfr_check_range@plt>
   4b954:	mov	w23, w0
   4b958:	b	4b720 <mpfr_li2@@Base+0x3a0>
   4b95c:	sub	x0, x29, #0x28
   4b960:	mov	x1, x22
   4b964:	bl	cad0 <mpfr_init2@plt>
   4b968:	cmp	w25, #0x0
   4b96c:	cinc	x23, x26, eq  // eq = none
   4b970:	ldr	x26, [sp, #48]
   4b974:	adrp	x21, 5e000 <mpfr_bases@@Base+0x4f8>
   4b978:	adrp	x24, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4b97c:	mov	w20, #0x40                  	// #64
   4b980:	add	x21, x21, #0xc76
   4b984:	add	x24, x24, #0x4df
   4b988:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4b98c:	ldr	x1, [x0, #2704]
   4b990:	add	x0, x0, #0xa90
   4b994:	blr	x1
   4b998:	add	x1, x26, x0
   4b99c:	sub	x0, x29, #0x28
   4b9a0:	mov	w2, #0x2                   	// #2
   4b9a4:	bl	c3e0 <mpfr_cache@plt>
   4b9a8:	sub	x0, x29, #0x28
   4b9ac:	sub	x1, x29, #0x28
   4b9b0:	mov	w2, wzr
   4b9b4:	bl	c450 <mpfr_sqr@plt>
   4b9b8:	sub	x0, x29, #0x28
   4b9bc:	sub	x1, x29, #0x28
   4b9c0:	mov	w2, #0x6                   	// #6
   4b9c4:	mov	w3, wzr
   4b9c8:	bl	ccc0 <mpfr_div_ui@plt>
   4b9cc:	ldur	x8, [x29, #-24]
   4b9d0:	cmp	x8, x19
   4b9d4:	b.lt	4ba08 <mpfr_li2@@Base+0x688>  // b.tstop
   4b9d8:	ldur	x8, [x29, #-40]
   4b9dc:	ldur	x0, [x29, #-16]
   4b9e0:	sub	x2, x22, #0x4
   4b9e4:	mov	x3, x23
   4b9e8:	sub	x9, x8, #0x1
   4b9ec:	add	x8, x8, #0x3e
   4b9f0:	cmp	x9, #0x0
   4b9f4:	csel	x8, x8, x9, lt  // lt = tstop
   4b9f8:	asr	x8, x8, #6
   4b9fc:	add	x1, x8, #0x1
   4ba00:	bl	c3d0 <mpfr_round_p@plt>
   4ba04:	cbnz	w0, 4ba4c <mpfr_li2@@Base+0x6cc>
   4ba08:	sub	x8, x19, x22
   4ba0c:	sub	x8, x8, #0x105
   4ba10:	cmp	x20, x8
   4ba14:	b.gt	4ba38 <mpfr_li2@@Base+0x6b8>
   4ba18:	add	x22, x22, x20
   4ba1c:	cmp	x22, #0x0
   4ba20:	cinc	x8, x22, lt  // lt = tstop
   4ba24:	sub	x0, x29, #0x28
   4ba28:	mov	x1, x22
   4ba2c:	asr	x20, x8, #1
   4ba30:	bl	bf80 <mpfr_set_prec@plt>
   4ba34:	b	4b988 <mpfr_li2@@Base+0x608>
   4ba38:	mov	w1, #0x147                 	// #327
   4ba3c:	mov	x0, x21
   4ba40:	mov	x2, x24
   4ba44:	bl	cb90 <mpfr_assert_fail@plt>
   4ba48:	b	4ba18 <mpfr_li2@@Base+0x698>
   4ba4c:	ldur	w3, [x29, #-32]
   4ba50:	sub	x1, x29, #0x28
   4ba54:	mov	x0, x28
   4ba58:	mov	w2, w25
   4ba5c:	bl	c6f0 <mpfr_set4@plt>
   4ba60:	mov	w23, w0
   4ba64:	sub	x0, x29, #0x28
   4ba68:	bl	c110 <mpfr_clear@plt>
   4ba6c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ba70:	ldr	x1, [x0, #2656]
   4ba74:	add	x0, x0, #0xa60
   4ba78:	blr	x1
   4ba7c:	ldr	w9, [sp, #36]
   4ba80:	str	w9, [x26, x0]
   4ba84:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ba88:	ldr	x1, [x0, #2592]
   4ba8c:	add	x0, x0, #0xa20
   4ba90:	blr	x1
   4ba94:	ldr	x10, [sp, #40]
   4ba98:	str	x10, [x26, x0]
   4ba9c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4baa0:	ldr	x1, [x0, #2624]
   4baa4:	add	x0, x0, #0xa40
   4baa8:	blr	x1
   4baac:	ldr	x11, [sp, #24]
   4bab0:	str	x11, [x26, x0]
   4bab4:	ldr	x8, [x28, #16]
   4bab8:	cmp	x8, x11
   4babc:	b.gt	4c520 <mpfr_li2@@Base+0x11a0>
   4bac0:	cmp	x8, x10
   4bac4:	b.ge	4be40 <mpfr_li2@@Base+0xac0>  // b.tcont
   4bac8:	b	4c520 <mpfr_li2@@Base+0x11a0>
   4bacc:	mov	w1, #0x1                   	// #1
   4bad0:	mov	x0, x21
   4bad4:	mov	x2, xzr
   4bad8:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4badc:	cmp	w0, #0x1
   4bae0:	str	w25, [sp, #12]
   4bae4:	b.lt	4be60 <mpfr_li2@@Base+0xae0>  // b.tstop
   4bae8:	sub	x0, x29, #0x28
   4baec:	mov	x1, x22
   4baf0:	bl	cad0 <mpfr_init2@plt>
   4baf4:	sub	x0, x29, #0x48
   4baf8:	mov	x1, x22
   4bafc:	bl	cad0 <mpfr_init2@plt>
   4bb00:	sub	x0, x29, #0x68
   4bb04:	mov	x1, x22
   4bb08:	bl	cad0 <mpfr_init2@plt>
   4bb0c:	add	x0, sp, #0x58
   4bb10:	mov	x1, x22
   4bb14:	bl	cad0 <mpfr_init2@plt>
   4bb18:	cmp	w25, #0x0
   4bb1c:	mov	w25, #0x40                  	// #64
   4bb20:	mov	w24, #0x1                   	// #1
   4bb24:	cinc	x8, x26, eq  // eq = none
   4bb28:	mov	w23, #0x40                  	// #64
   4bb2c:	str	x8, [sp, #16]
   4bb30:	sub	x0, x29, #0x68
   4bb34:	mov	w2, #0x2                   	// #2
   4bb38:	mov	x1, x21
   4bb3c:	bl	c130 <mpfr_log@plt>
   4bb40:	sub	x0, x29, #0x28
   4bb44:	sub	x1, x29, #0x68
   4bb48:	mov	w2, wzr
   4bb4c:	bl	4cdd0 <mpfr_li2@@Base+0x1a50>
   4bb50:	ldur	x20, [x29, #-24]
   4bb54:	mov	w27, w0
   4bb58:	sub	x0, x29, #0x48
   4bb5c:	sub	x1, x29, #0x68
   4bb60:	mov	w2, wzr
   4bb64:	bl	c450 <mpfr_sqr@plt>
   4bb68:	sub	x0, x29, #0x48
   4bb6c:	sub	x1, x29, #0x48
   4bb70:	mov	w2, #0x2                   	// #2
   4bb74:	mov	w3, wzr
   4bb78:	bl	c950 <mpfr_div_2ui@plt>
   4bb7c:	sub	x0, x29, #0x28
   4bb80:	sub	x1, x29, #0x28
   4bb84:	sub	x2, x29, #0x48
   4bb88:	mov	w3, wzr
   4bb8c:	bl	c240 <mpfr_add@plt>
   4bb90:	add	x0, sp, #0x58
   4bb94:	mov	w2, #0x1                   	// #1
   4bb98:	mov	x1, x21
   4bb9c:	mov	w3, wzr
   4bba0:	bl	c580 <mpfr_sub_ui@plt>
   4bba4:	sub	x0, x29, #0x48
   4bba8:	add	x1, sp, #0x58
   4bbac:	mov	w2, #0x2                   	// #2
   4bbb0:	bl	c130 <mpfr_log@plt>
   4bbb4:	ldur	x26, [x29, #-56]
   4bbb8:	sub	x0, x29, #0x48
   4bbbc:	sub	x1, x29, #0x68
   4bbc0:	sub	x2, x29, #0x48
   4bbc4:	mov	w3, wzr
   4bbc8:	bl	be00 <mpfr_mul@plt>
   4bbcc:	sub	x0, x29, #0x28
   4bbd0:	sub	x1, x29, #0x28
   4bbd4:	sub	x2, x29, #0x48
   4bbd8:	mov	w3, wzr
   4bbdc:	bl	bc20 <mpfr_sub@plt>
   4bbe0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4bbe4:	ldr	x1, [x0, #2704]
   4bbe8:	add	x0, x0, #0xa90
   4bbec:	blr	x1
   4bbf0:	ldr	x8, [sp, #48]
   4bbf4:	mov	w2, #0x2                   	// #2
   4bbf8:	add	x1, x8, x0
   4bbfc:	sub	x0, x29, #0x48
   4bc00:	bl	c3e0 <mpfr_cache@plt>
   4bc04:	sub	x0, x29, #0x48
   4bc08:	sub	x1, x29, #0x48
   4bc0c:	mov	w2, wzr
   4bc10:	bl	c450 <mpfr_sqr@plt>
   4bc14:	sub	x0, x29, #0x48
   4bc18:	sub	x1, x29, #0x48
   4bc1c:	mov	w2, #0x6                   	// #6
   4bc20:	mov	w3, wzr
   4bc24:	bl	ccc0 <mpfr_div_ui@plt>
   4bc28:	sub	x0, x29, #0x28
   4bc2c:	sub	x1, x29, #0x28
   4bc30:	sub	x2, x29, #0x48
   4bc34:	mov	w3, wzr
   4bc38:	bl	c240 <mpfr_add@plt>
   4bc3c:	cbz	w27, 4bd30 <mpfr_li2@@Base+0x9b0>
   4bc40:	cmp	w27, #0x0
   4bc44:	b.le	4bd38 <mpfr_li2@@Base+0x9b8>
   4bc48:	sxtw	x8, w27
   4bc4c:	clz	x8, x8
   4bc50:	sub	x8, x25, x8
   4bc54:	sub	x20, x24, x20
   4bc58:	add	x9, x20, x8
   4bc5c:	sub	x8, x24, x26
   4bc60:	ldr	x26, [sp, #48]
   4bc64:	cmp	x9, x8
   4bc68:	b.le	4bc90 <mpfr_li2@@Base+0x910>
   4bc6c:	cbz	w27, 4bc88 <mpfr_li2@@Base+0x908>
   4bc70:	cmp	w27, #0x0
   4bc74:	b.le	4bd70 <mpfr_li2@@Base+0x9f0>
   4bc78:	sxtw	x8, w27
   4bc7c:	clz	x8, x8
   4bc80:	sub	x8, x25, x8
   4bc84:	b	4bc8c <mpfr_li2@@Base+0x90c>
   4bc88:	mov	x8, xzr
   4bc8c:	add	x8, x20, x8
   4bc90:	ldur	x9, [x29, #-24]
   4bc94:	cmp	x9, x19
   4bc98:	b.lt	4bcdc <mpfr_li2@@Base+0x95c>  // b.tstop
   4bc9c:	ldur	x9, [x29, #-40]
   4bca0:	cmp	x8, #0x5
   4bca4:	mov	w10, #0x5                   	// #5
   4bca8:	csel	x8, x8, x10, gt
   4bcac:	sub	x10, x9, #0x1
   4bcb0:	ldur	x0, [x29, #-16]
   4bcb4:	add	x9, x9, #0x3e
   4bcb8:	cmp	x10, #0x0
   4bcbc:	ldr	x3, [sp, #16]
   4bcc0:	csel	x9, x9, x10, lt  // lt = tstop
   4bcc4:	sub	x8, x22, x8
   4bcc8:	asr	x9, x9, #6
   4bccc:	add	x1, x9, #0x1
   4bcd0:	sub	x2, x8, #0x2
   4bcd4:	bl	c3d0 <mpfr_round_p@plt>
   4bcd8:	cbnz	w0, 4bdb0 <mpfr_li2@@Base+0xa30>
   4bcdc:	sub	x8, x19, x22
   4bce0:	sub	x8, x8, #0x105
   4bce4:	cmp	x23, x8
   4bce8:	b.gt	4bd54 <mpfr_li2@@Base+0x9d4>
   4bcec:	add	x22, x22, x23
   4bcf0:	cmp	x22, #0x0
   4bcf4:	cinc	x8, x22, lt  // lt = tstop
   4bcf8:	sub	x0, x29, #0x28
   4bcfc:	mov	x1, x22
   4bd00:	asr	x23, x8, #1
   4bd04:	bl	bf80 <mpfr_set_prec@plt>
   4bd08:	sub	x0, x29, #0x48
   4bd0c:	mov	x1, x22
   4bd10:	bl	bf80 <mpfr_set_prec@plt>
   4bd14:	sub	x0, x29, #0x68
   4bd18:	mov	x1, x22
   4bd1c:	bl	bf80 <mpfr_set_prec@plt>
   4bd20:	add	x0, sp, #0x58
   4bd24:	mov	x1, x22
   4bd28:	bl	bf80 <mpfr_set_prec@plt>
   4bd2c:	b	4bb30 <mpfr_li2@@Base+0x7b0>
   4bd30:	mov	x8, xzr
   4bd34:	b	4bc54 <mpfr_li2@@Base+0x8d4>
   4bd38:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4bd3c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4bd40:	mov	w1, #0x1b8                 	// #440
   4bd44:	add	x0, x0, #0xc76
   4bd48:	add	x2, x2, #0xc85
   4bd4c:	bl	cb90 <mpfr_assert_fail@plt>
   4bd50:	b	4bc48 <mpfr_li2@@Base+0x8c8>
   4bd54:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4bd58:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4bd5c:	mov	w1, #0x1bd                 	// #445
   4bd60:	add	x0, x0, #0xc76
   4bd64:	add	x2, x2, #0x4df
   4bd68:	bl	cb90 <mpfr_assert_fail@plt>
   4bd6c:	b	4bcec <mpfr_li2@@Base+0x96c>
   4bd70:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4bd74:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4bd78:	mov	w1, #0x1b8                 	// #440
   4bd7c:	add	x0, x0, #0xc76
   4bd80:	add	x2, x2, #0xc85
   4bd84:	bl	cb90 <mpfr_assert_fail@plt>
   4bd88:	b	4bc78 <mpfr_li2@@Base+0x8f8>
   4bd8c:	mov	w23, wzr
   4bd90:	mov	w8, #0xffffffff            	// #-1
   4bd94:	b	4bda4 <mpfr_li2@@Base+0xa24>
   4bd98:	ldr	w8, [x21, #8]
   4bd9c:	mov	w23, wzr
   4bda0:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4bda4:	str	w8, [x28, #8]
   4bda8:	str	x9, [x28, #16]
   4bdac:	b	4b720 <mpfr_li2@@Base+0x3a0>
   4bdb0:	ldr	w19, [sp, #12]
   4bdb4:	ldur	w3, [x29, #-32]
   4bdb8:	sub	x1, x29, #0x28
   4bdbc:	mov	x0, x28
   4bdc0:	mov	w2, w19
   4bdc4:	bl	c6f0 <mpfr_set4@plt>
   4bdc8:	mov	w23, w0
   4bdcc:	sub	x0, x29, #0x28
   4bdd0:	sub	x1, x29, #0x48
   4bdd4:	sub	x2, x29, #0x68
   4bdd8:	add	x3, sp, #0x58
   4bddc:	mov	x4, xzr
   4bde0:	bl	c250 <mpfr_clears@plt>
   4bde4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4bde8:	ldr	x1, [x0, #2656]
   4bdec:	add	x0, x0, #0xa60
   4bdf0:	blr	x1
   4bdf4:	ldr	w9, [sp, #36]
   4bdf8:	str	w9, [x26, x0]
   4bdfc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4be00:	ldr	x1, [x0, #2592]
   4be04:	add	x0, x0, #0xa20
   4be08:	blr	x1
   4be0c:	ldr	x10, [sp, #40]
   4be10:	str	x10, [x26, x0]
   4be14:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4be18:	ldr	x1, [x0, #2624]
   4be1c:	add	x0, x0, #0xa40
   4be20:	blr	x1
   4be24:	ldr	x11, [sp, #24]
   4be28:	str	x11, [x26, x0]
   4be2c:	ldr	x8, [x28, #16]
   4be30:	cmp	x8, x11
   4be34:	b.gt	4cd78 <mpfr_li2@@Base+0x19f8>
   4be38:	cmp	x8, x10
   4be3c:	b.lt	4cd78 <mpfr_li2@@Base+0x19f8>  // b.tstop
   4be40:	cbz	w23, 4b720 <mpfr_li2@@Base+0x3a0>
   4be44:	orr	w8, w9, #0x8
   4be48:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4be4c:	ldr	x1, [x0, #2656]
   4be50:	add	x0, x0, #0xa60
   4be54:	blr	x1
   4be58:	str	w8, [x26, x0]
   4be5c:	b	4b720 <mpfr_li2@@Base+0x3a0>
   4be60:	mov	w1, #0x1                   	// #1
   4be64:	mov	x2, #0xffffffffffffffff    	// #-1
   4be68:	mov	x0, x21
   4be6c:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4be70:	cmp	w0, #0x1
   4be74:	b.lt	4c530 <mpfr_li2@@Base+0x11b0>  // b.tstop
   4be78:	sub	x0, x29, #0x28
   4be7c:	mov	x1, x22
   4be80:	bl	cad0 <mpfr_init2@plt>
   4be84:	sub	x0, x29, #0x48
   4be88:	mov	x1, x22
   4be8c:	bl	cad0 <mpfr_init2@plt>
   4be90:	sub	x0, x29, #0x68
   4be94:	mov	x1, x22
   4be98:	bl	cad0 <mpfr_init2@plt>
   4be9c:	add	x0, sp, #0x58
   4bea0:	mov	x1, x22
   4bea4:	bl	cad0 <mpfr_init2@plt>
   4bea8:	cmp	w25, #0x0
   4beac:	mov	w25, #0x3                   	// #3
   4beb0:	mov	w23, #0x1                   	// #1
   4beb4:	cinc	x26, x26, eq  // eq = none
   4beb8:	mov	w24, #0x40                  	// #64
   4bebc:	sub	x0, x29, #0x48
   4bec0:	mov	w2, #0x3                   	// #3
   4bec4:	mov	x1, x21
   4bec8:	bl	c130 <mpfr_log@plt>
   4becc:	sub	x0, x29, #0x48
   4bed0:	sub	x1, x29, #0x48
   4bed4:	mov	w2, wzr
   4bed8:	bl	be20 <mpfr_neg@plt>
   4bedc:	sub	x0, x29, #0x28
   4bee0:	sub	x1, x29, #0x48
   4bee4:	mov	w2, wzr
   4bee8:	bl	4cdd0 <mpfr_li2@@Base+0x1a50>
   4beec:	mov	w27, w0
   4bef0:	sub	x0, x29, #0x28
   4bef4:	sub	x1, x29, #0x28
   4bef8:	mov	w2, wzr
   4befc:	bl	be20 <mpfr_neg@plt>
   4bf00:	cbz	w27, 4c0fc <mpfr_li2@@Base+0xd7c>
   4bf04:	cmp	w27, #0x0
   4bf08:	b.le	4c104 <mpfr_li2@@Base+0xd84>
   4bf0c:	sxtw	x8, w27
   4bf10:	clz	x8, x8
   4bf14:	mov	w9, #0x40                  	// #64
   4bf18:	sub	x8, x9, x8
   4bf1c:	ldur	x9, [x29, #-24]
   4bf20:	add	x0, sp, #0x58
   4bf24:	mov	w1, #0x1                   	// #1
   4bf28:	mov	x2, x21
   4bf2c:	sub	x20, x8, x9
   4bf30:	mov	w3, wzr
   4bf34:	add	x27, x20, #0x1
   4bf38:	bl	caa0 <mpfr_ui_sub@plt>
   4bf3c:	sub	x0, x29, #0x68
   4bf40:	add	x1, sp, #0x58
   4bf44:	mov	w2, #0x2                   	// #2
   4bf48:	bl	c130 <mpfr_log@plt>
   4bf4c:	sub	x0, x29, #0x68
   4bf50:	sub	x1, x29, #0x68
   4bf54:	sub	x2, x29, #0x48
   4bf58:	mov	w3, wzr
   4bf5c:	bl	be00 <mpfr_mul@plt>
   4bf60:	sub	x0, x29, #0x28
   4bf64:	sub	x1, x29, #0x28
   4bf68:	sub	x2, x29, #0x68
   4bf6c:	mov	w3, wzr
   4bf70:	bl	c240 <mpfr_add@plt>
   4bf74:	ldur	x8, [x29, #-88]
   4bf78:	ldur	x9, [x29, #-24]
   4bf7c:	sub	x0, x29, #0x48
   4bf80:	sub	x1, x29, #0x48
   4bf84:	sub	x8, x23, x8
   4bf88:	cmp	x27, x8
   4bf8c:	csinc	x8, x8, x20, le
   4bf90:	cmp	x8, #0x3
   4bf94:	csel	x8, x8, x25, gt
   4bf98:	sub	x8, x8, x9
   4bf9c:	mov	w2, wzr
   4bfa0:	add	x20, x8, #0x2
   4bfa4:	bl	c450 <mpfr_sqr@plt>
   4bfa8:	sub	x0, x29, #0x48
   4bfac:	sub	x1, x29, #0x48
   4bfb0:	mov	w2, #0x2                   	// #2
   4bfb4:	mov	w3, wzr
   4bfb8:	bl	c950 <mpfr_div_2ui@plt>
   4bfbc:	sub	x0, x29, #0x28
   4bfc0:	sub	x1, x29, #0x28
   4bfc4:	sub	x2, x29, #0x48
   4bfc8:	mov	w3, wzr
   4bfcc:	bl	c240 <mpfr_add@plt>
   4bfd0:	ldur	x8, [x29, #-56]
   4bfd4:	ldur	x9, [x29, #-24]
   4bfd8:	add	x8, x8, #0x2
   4bfdc:	cmp	x20, x8
   4bfe0:	csel	x8, x20, x8, gt
   4bfe4:	sub	x8, x8, x9
   4bfe8:	cmp	x8, #0x0
   4bfec:	csinv	x8, x8, xzr, ge  // ge = tcont
   4bff0:	add	x8, x9, x8
   4bff4:	add	x20, x8, #0x2
   4bff8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4bffc:	ldr	x1, [x0, #2704]
   4c000:	add	x0, x0, #0xa90
   4c004:	blr	x1
   4c008:	ldr	x8, [sp, #48]
   4c00c:	mov	w2, #0x2                   	// #2
   4c010:	add	x1, x8, x0
   4c014:	sub	x0, x29, #0x48
   4c018:	bl	c3e0 <mpfr_cache@plt>
   4c01c:	sub	x0, x29, #0x48
   4c020:	sub	x1, x29, #0x48
   4c024:	mov	w2, wzr
   4c028:	bl	c450 <mpfr_sqr@plt>
   4c02c:	sub	x0, x29, #0x48
   4c030:	sub	x1, x29, #0x48
   4c034:	mov	w2, #0x6                   	// #6
   4c038:	mov	w3, wzr
   4c03c:	bl	ccc0 <mpfr_div_ui@plt>
   4c040:	sub	x0, x29, #0x28
   4c044:	sub	x1, x29, #0x28
   4c048:	sub	x2, x29, #0x48
   4c04c:	mov	w3, wzr
   4c050:	bl	c240 <mpfr_add@plt>
   4c054:	ldur	x8, [x29, #-24]
   4c058:	cmp	x20, #0x3
   4c05c:	csel	x9, x20, x25, gt
   4c060:	cmp	x8, x19
   4c064:	sub	x8, x9, x8
   4c068:	b.lt	4c0a8 <mpfr_li2@@Base+0xd28>  // b.tstop
   4c06c:	ldur	x9, [x29, #-40]
   4c070:	cmp	x8, #0x0
   4c074:	ldur	x0, [x29, #-16]
   4c078:	csinv	x8, x8, xzr, ge  // ge = tcont
   4c07c:	sub	x10, x9, #0x1
   4c080:	add	x9, x9, #0x3e
   4c084:	cmp	x10, #0x0
   4c088:	csel	x9, x9, x10, lt  // lt = tstop
   4c08c:	sub	x8, x22, x8
   4c090:	asr	x9, x9, #6
   4c094:	add	x1, x9, #0x1
   4c098:	sub	x2, x8, #0x2
   4c09c:	mov	x3, x26
   4c0a0:	bl	c3d0 <mpfr_round_p@plt>
   4c0a4:	cbnz	w0, 4c164 <mpfr_li2@@Base+0xde4>
   4c0a8:	sub	x8, x19, x22
   4c0ac:	sub	x8, x8, #0x105
   4c0b0:	cmp	x24, x8
   4c0b4:	b.gt	4c120 <mpfr_li2@@Base+0xda0>
   4c0b8:	add	x22, x22, x24
   4c0bc:	cmp	x22, #0x0
   4c0c0:	cinc	x8, x22, lt  // lt = tstop
   4c0c4:	sub	x0, x29, #0x28
   4c0c8:	mov	x1, x22
   4c0cc:	asr	x24, x8, #1
   4c0d0:	bl	bf80 <mpfr_set_prec@plt>
   4c0d4:	sub	x0, x29, #0x48
   4c0d8:	mov	x1, x22
   4c0dc:	bl	bf80 <mpfr_set_prec@plt>
   4c0e0:	sub	x0, x29, #0x68
   4c0e4:	mov	x1, x22
   4c0e8:	bl	bf80 <mpfr_set_prec@plt>
   4c0ec:	add	x0, sp, #0x58
   4c0f0:	mov	x1, x22
   4c0f4:	bl	bf80 <mpfr_set_prec@plt>
   4c0f8:	b	4bebc <mpfr_li2@@Base+0xb3c>
   4c0fc:	mov	x8, xzr
   4c100:	b	4bf1c <mpfr_li2@@Base+0xb9c>
   4c104:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4c108:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4c10c:	mov	w1, #0x1dc                 	// #476
   4c110:	add	x0, x0, #0xc76
   4c114:	add	x2, x2, #0xc85
   4c118:	bl	cb90 <mpfr_assert_fail@plt>
   4c11c:	b	4bf0c <mpfr_li2@@Base+0xb8c>
   4c120:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4c124:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4c128:	mov	w1, #0x1f5                 	// #501
   4c12c:	add	x0, x0, #0xc76
   4c130:	add	x2, x2, #0x4df
   4c134:	bl	cb90 <mpfr_assert_fail@plt>
   4c138:	b	4c0b8 <mpfr_li2@@Base+0xd38>
   4c13c:	mov	x0, x28
   4c140:	mov	x1, x21
   4c144:	mov	w3, wzr
   4c148:	mov	w4, w25
   4c14c:	bl	c590 <mpfr_round_near_x@plt>
   4c150:	mov	w23, w0
   4c154:	cbnz	w0, 4b720 <mpfr_li2@@Base+0x3a0>
   4c158:	b	4b414 <mpfr_li2@@Base+0x94>
   4c15c:	mov	x28, x27
   4c160:	b	4c1a0 <mpfr_li2@@Base+0xe20>
   4c164:	ldur	w3, [x29, #-32]
   4c168:	ldr	w2, [sp, #12]
   4c16c:	sub	x1, x29, #0x28
   4c170:	mov	x0, x28
   4c174:	mov	x19, x28
   4c178:	bl	c6f0 <mpfr_set4@plt>
   4c17c:	mov	w23, w0
   4c180:	sub	x0, x29, #0x28
   4c184:	sub	x1, x29, #0x48
   4c188:	sub	x2, x29, #0x68
   4c18c:	add	x3, sp, #0x58
   4c190:	mov	x4, xzr
   4c194:	bl	c250 <mpfr_clears@plt>
   4c198:	b	4ccb8 <mpfr_li2@@Base+0x1938>
   4c19c:	mov	w23, wzr
   4c1a0:	sub	x0, x29, #0x28
   4c1a4:	bl	c110 <mpfr_clear@plt>
   4c1a8:	sub	x0, x29, #0x48
   4c1ac:	bl	c110 <mpfr_clear@plt>
   4c1b0:	cbnz	w23, 4c4c0 <mpfr_li2@@Base+0x1140>
   4c1b4:	sub	x0, x29, #0x48
   4c1b8:	mov	x1, x22
   4c1bc:	bl	cad0 <mpfr_init2@plt>
   4c1c0:	sub	x0, x29, #0x28
   4c1c4:	mov	x1, x22
   4c1c8:	bl	cad0 <mpfr_init2@plt>
   4c1cc:	sub	x0, x29, #0x68
   4c1d0:	mov	x1, x22
   4c1d4:	bl	cad0 <mpfr_init2@plt>
   4c1d8:	cmp	w25, #0x0
   4c1dc:	str	w25, [sp, #12]
   4c1e0:	mov	w23, #0x2                   	// #2
   4c1e4:	mov	w24, #0x4                   	// #4
   4c1e8:	cinc	x26, x26, eq  // eq = none
   4c1ec:	mov	w25, #0x40                  	// #64
   4c1f0:	sub	x0, x29, #0x68
   4c1f4:	mov	w1, #0x1                   	// #1
   4c1f8:	mov	x2, x21
   4c1fc:	mov	w3, wzr
   4c200:	bl	c350 <mpfr_ui_div@plt>
   4c204:	sub	x0, x29, #0x68
   4c208:	sub	x1, x29, #0x68
   4c20c:	mov	w2, wzr
   4c210:	bl	be20 <mpfr_neg@plt>
   4c214:	sub	x0, x29, #0x48
   4c218:	sub	x1, x29, #0x68
   4c21c:	mov	w2, #0x3                   	// #3
   4c220:	bl	c750 <mpfr_log1p@plt>
   4c224:	sub	x0, x29, #0x48
   4c228:	sub	x1, x29, #0x48
   4c22c:	mov	w2, #0x2                   	// #2
   4c230:	bl	be20 <mpfr_neg@plt>
   4c234:	ldur	x20, [x29, #-56]
   4c238:	sub	x0, x29, #0x28
   4c23c:	sub	x1, x29, #0x48
   4c240:	mov	w2, wzr
   4c244:	bl	4cdd0 <mpfr_li2@@Base+0x1a50>
   4c248:	mov	w27, w0
   4c24c:	sub	x0, x29, #0x28
   4c250:	sub	x1, x29, #0x28
   4c254:	mov	w2, wzr
   4c258:	bl	be20 <mpfr_neg@plt>
   4c25c:	cbz	w27, 4c450 <mpfr_li2@@Base+0x10d0>
   4c260:	cmp	w27, #0x0
   4c264:	b.le	4c458 <mpfr_li2@@Base+0x10d8>
   4c268:	sxtw	x8, w27
   4c26c:	clz	x8, x8
   4c270:	mov	w9, #0x40                  	// #64
   4c274:	sub	x27, x9, x8
   4c278:	sub	x0, x29, #0x48
   4c27c:	sub	x1, x29, #0x48
   4c280:	mov	w2, wzr
   4c284:	bl	c450 <mpfr_sqr@plt>
   4c288:	sub	x0, x29, #0x48
   4c28c:	sub	x1, x29, #0x48
   4c290:	mov	w2, #0x2                   	// #2
   4c294:	mov	w3, wzr
   4c298:	bl	c950 <mpfr_div_2ui@plt>
   4c29c:	sub	x0, x29, #0x28
   4c2a0:	sub	x1, x29, #0x28
   4c2a4:	sub	x2, x29, #0x48
   4c2a8:	mov	w3, wzr
   4c2ac:	bl	c240 <mpfr_add@plt>
   4c2b0:	ldur	x9, [x29, #-56]
   4c2b4:	mov	w8, #0x3                   	// #3
   4c2b8:	sub	x8, x8, x20
   4c2bc:	cmp	x20, #0x0
   4c2c0:	csel	x8, x24, x8, ge  // ge = tcont
   4c2c4:	ldur	x10, [x29, #-24]
   4c2c8:	add	x8, x9, x8
   4c2cc:	cmp	x27, x8
   4c2d0:	csinc	x8, x8, x27, lt  // lt = tstop
   4c2d4:	sub	x8, x8, x10
   4c2d8:	cmp	x8, #0x0
   4c2dc:	csinv	x8, x8, xzr, ge  // ge = tcont
   4c2e0:	add	x8, x10, x8
   4c2e4:	sub	x0, x29, #0x48
   4c2e8:	mov	w2, #0x2                   	// #2
   4c2ec:	mov	x1, x21
   4c2f0:	add	x20, x8, #0x2
   4c2f4:	bl	c130 <mpfr_log@plt>
   4c2f8:	sub	x0, x29, #0x48
   4c2fc:	sub	x1, x29, #0x48
   4c300:	mov	w2, wzr
   4c304:	bl	c450 <mpfr_sqr@plt>
   4c308:	sub	x0, x29, #0x48
   4c30c:	sub	x1, x29, #0x48
   4c310:	mov	w2, #0x1                   	// #1
   4c314:	mov	w3, wzr
   4c318:	bl	c950 <mpfr_div_2ui@plt>
   4c31c:	sub	x0, x29, #0x28
   4c320:	sub	x1, x29, #0x28
   4c324:	sub	x2, x29, #0x48
   4c328:	mov	w3, wzr
   4c32c:	bl	bc20 <mpfr_sub@plt>
   4c330:	ldur	x8, [x29, #-56]
   4c334:	ldur	x9, [x29, #-24]
   4c338:	add	x8, x8, #0x3
   4c33c:	cmp	x20, x8
   4c340:	csel	x8, x20, x8, gt
   4c344:	sub	x8, x8, x9
   4c348:	cmp	x8, #0x0
   4c34c:	csinv	x8, x8, xzr, ge  // ge = tcont
   4c350:	add	x8, x9, x8
   4c354:	add	x20, x8, #0x2
   4c358:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4c35c:	ldr	x1, [x0, #2704]
   4c360:	add	x0, x0, #0xa90
   4c364:	blr	x1
   4c368:	ldr	x8, [sp, #48]
   4c36c:	mov	w2, #0x2                   	// #2
   4c370:	add	x1, x8, x0
   4c374:	sub	x0, x29, #0x48
   4c378:	bl	c3e0 <mpfr_cache@plt>
   4c37c:	sub	x0, x29, #0x48
   4c380:	sub	x1, x29, #0x48
   4c384:	mov	w2, wzr
   4c388:	bl	c450 <mpfr_sqr@plt>
   4c38c:	sub	x0, x29, #0x48
   4c390:	sub	x1, x29, #0x48
   4c394:	mov	w2, #0x3                   	// #3
   4c398:	mov	w3, wzr
   4c39c:	bl	ccc0 <mpfr_div_ui@plt>
   4c3a0:	sub	x0, x29, #0x28
   4c3a4:	sub	x1, x29, #0x28
   4c3a8:	sub	x2, x29, #0x48
   4c3ac:	mov	w3, wzr
   4c3b0:	bl	c240 <mpfr_add@plt>
   4c3b4:	ldur	x8, [x29, #-24]
   4c3b8:	cmp	x20, #0x2
   4c3bc:	csel	x9, x20, x23, gt
   4c3c0:	cmp	x8, x19
   4c3c4:	sub	x8, x9, x8
   4c3c8:	b.lt	4c408 <mpfr_li2@@Base+0x1088>  // b.tstop
   4c3cc:	ldur	x9, [x29, #-40]
   4c3d0:	cmp	x8, #0x0
   4c3d4:	ldur	x0, [x29, #-16]
   4c3d8:	csinv	x8, x8, xzr, ge  // ge = tcont
   4c3dc:	sub	x10, x9, #0x1
   4c3e0:	add	x9, x9, #0x3e
   4c3e4:	cmp	x10, #0x0
   4c3e8:	csel	x9, x9, x10, lt  // lt = tstop
   4c3ec:	sub	x8, x22, x8
   4c3f0:	asr	x9, x9, #6
   4c3f4:	add	x1, x9, #0x1
   4c3f8:	sub	x2, x8, #0x2
   4c3fc:	mov	x3, x26
   4c400:	bl	c3d0 <mpfr_round_p@plt>
   4c404:	cbnz	w0, 4c490 <mpfr_li2@@Base+0x1110>
   4c408:	sub	x8, x19, x22
   4c40c:	sub	x8, x8, #0x105
   4c410:	cmp	x25, x8
   4c414:	b.gt	4c474 <mpfr_li2@@Base+0x10f4>
   4c418:	add	x22, x22, x25
   4c41c:	cmp	x22, #0x0
   4c420:	cinc	x8, x22, lt  // lt = tstop
   4c424:	sub	x0, x29, #0x48
   4c428:	mov	x1, x22
   4c42c:	asr	x25, x8, #1
   4c430:	bl	bf80 <mpfr_set_prec@plt>
   4c434:	sub	x0, x29, #0x28
   4c438:	mov	x1, x22
   4c43c:	bl	bf80 <mpfr_set_prec@plt>
   4c440:	sub	x0, x29, #0x68
   4c444:	mov	x1, x22
   4c448:	bl	bf80 <mpfr_set_prec@plt>
   4c44c:	b	4c1f0 <mpfr_li2@@Base+0xe70>
   4c450:	mov	x27, xzr
   4c454:	b	4c278 <mpfr_li2@@Base+0xef8>
   4c458:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4c45c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4c460:	mov	w1, #0x16d                 	// #365
   4c464:	add	x0, x0, #0xc76
   4c468:	add	x2, x2, #0xc85
   4c46c:	bl	cb90 <mpfr_assert_fail@plt>
   4c470:	b	4c268 <mpfr_li2@@Base+0xee8>
   4c474:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4c478:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4c47c:	mov	w1, #0x189                 	// #393
   4c480:	add	x0, x0, #0xc76
   4c484:	add	x2, x2, #0x4df
   4c488:	bl	cb90 <mpfr_assert_fail@plt>
   4c48c:	b	4c418 <mpfr_li2@@Base+0x1098>
   4c490:	ldr	w25, [sp, #12]
   4c494:	ldur	w3, [x29, #-32]
   4c498:	sub	x1, x29, #0x28
   4c49c:	mov	x0, x28
   4c4a0:	mov	w2, w25
   4c4a4:	bl	c6f0 <mpfr_set4@plt>
   4c4a8:	mov	w23, w0
   4c4ac:	sub	x0, x29, #0x28
   4c4b0:	sub	x1, x29, #0x48
   4c4b4:	sub	x2, x29, #0x68
   4c4b8:	mov	x3, xzr
   4c4bc:	bl	c250 <mpfr_clears@plt>
   4c4c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4c4c4:	ldr	x1, [x0, #2656]
   4c4c8:	add	x0, x0, #0xa60
   4c4cc:	blr	x1
   4c4d0:	ldr	x9, [sp, #48]
   4c4d4:	ldr	w10, [sp, #36]
   4c4d8:	str	w10, [x9, x0]
   4c4dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4c4e0:	ldr	x1, [x0, #2592]
   4c4e4:	add	x0, x0, #0xa20
   4c4e8:	blr	x1
   4c4ec:	ldr	x11, [sp, #40]
   4c4f0:	str	x11, [x9, x0]
   4c4f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4c4f8:	ldr	x1, [x0, #2624]
   4c4fc:	add	x0, x0, #0xa40
   4c500:	blr	x1
   4c504:	ldr	x12, [sp, #24]
   4c508:	str	x12, [x9, x0]
   4c50c:	ldr	x8, [x28, #16]
   4c510:	cmp	x8, x12
   4c514:	b.gt	4c520 <mpfr_li2@@Base+0x11a0>
   4c518:	cmp	x8, x11
   4c51c:	b.ge	4b704 <mpfr_li2@@Base+0x384>  // b.tcont
   4c520:	mov	x0, x28
   4c524:	mov	w1, w23
   4c528:	mov	w2, w25
   4c52c:	b	4b950 <mpfr_li2@@Base+0x5d0>
   4c530:	mov	x1, #0xffffffffffffffff    	// #-1
   4c534:	mov	x0, x21
   4c538:	mov	x2, xzr
   4c53c:	bl	c430 <mpfr_cmp_si_2exp@plt>
   4c540:	tbnz	w0, #31, 4c734 <mpfr_li2@@Base+0x13b4>
   4c544:	sub	x0, x29, #0x28
   4c548:	mov	x1, x22
   4c54c:	bl	cad0 <mpfr_init2@plt>
   4c550:	sub	x0, x29, #0x48
   4c554:	mov	x1, x22
   4c558:	bl	cad0 <mpfr_init2@plt>
   4c55c:	sub	x0, x29, #0x68
   4c560:	mov	x1, x22
   4c564:	bl	cad0 <mpfr_init2@plt>
   4c568:	ldr	w8, [sp, #12]
   4c56c:	mov	w20, #0x40                  	// #64
   4c570:	mov	w25, #0x40                  	// #64
   4c574:	cmp	w8, #0x0
   4c578:	cinc	x26, x26, eq  // eq = none
   4c57c:	sub	x0, x29, #0x68
   4c580:	mov	x1, x21
   4c584:	mov	w2, wzr
   4c588:	bl	be20 <mpfr_neg@plt>
   4c58c:	sub	x0, x29, #0x48
   4c590:	sub	x1, x29, #0x68
   4c594:	mov	w2, wzr
   4c598:	bl	c750 <mpfr_log1p@plt>
   4c59c:	sub	x0, x29, #0x28
   4c5a0:	sub	x1, x29, #0x48
   4c5a4:	mov	w2, wzr
   4c5a8:	bl	4cdd0 <mpfr_li2@@Base+0x1a50>
   4c5ac:	mov	w27, w0
   4c5b0:	sub	x0, x29, #0x28
   4c5b4:	sub	x1, x29, #0x28
   4c5b8:	mov	w2, wzr
   4c5bc:	bl	be20 <mpfr_neg@plt>
   4c5c0:	ldur	x23, [x29, #-56]
   4c5c4:	cbz	w27, 4c6c0 <mpfr_li2@@Base+0x1340>
   4c5c8:	cmp	w27, #0x0
   4c5cc:	b.le	4c6c8 <mpfr_li2@@Base+0x1348>
   4c5d0:	sxtw	x8, w27
   4c5d4:	clz	x8, x8
   4c5d8:	sub	x8, x20, x8
   4c5dc:	ldur	x9, [x29, #-24]
   4c5e0:	sub	x0, x29, #0x48
   4c5e4:	sub	x1, x29, #0x48
   4c5e8:	mov	w2, wzr
   4c5ec:	sub	x27, x8, x9
   4c5f0:	add	x24, x27, #0x1
   4c5f4:	bl	c450 <mpfr_sqr@plt>
   4c5f8:	sub	x0, x29, #0x48
   4c5fc:	sub	x1, x29, #0x48
   4c600:	mov	w2, #0x2                   	// #2
   4c604:	mov	w3, wzr
   4c608:	bl	c950 <mpfr_div_2ui@plt>
   4c60c:	sub	x0, x29, #0x28
   4c610:	sub	x1, x29, #0x28
   4c614:	sub	x2, x29, #0x48
   4c618:	mov	w3, wzr
   4c61c:	bl	bc20 <mpfr_sub@plt>
   4c620:	ldur	x9, [x29, #-24]
   4c624:	neg	x8, x23
   4c628:	cmp	x24, x8
   4c62c:	csinc	x8, x8, x27, le
   4c630:	cmp	x9, x19
   4c634:	b.lt	4c678 <mpfr_li2@@Base+0x12f8>  // b.tstop
   4c638:	ldur	x9, [x29, #-40]
   4c63c:	cmp	x8, #0x3
   4c640:	mov	w10, #0x3                   	// #3
   4c644:	csel	x8, x8, x10, gt
   4c648:	sub	x10, x9, #0x1
   4c64c:	ldur	x0, [x29, #-16]
   4c650:	add	x9, x9, #0x3e
   4c654:	cmp	x10, #0x0
   4c658:	csel	x9, x9, x10, lt  // lt = tstop
   4c65c:	sub	x8, x22, x8
   4c660:	asr	x9, x9, #6
   4c664:	add	x1, x9, #0x1
   4c668:	sub	x2, x8, #0x2
   4c66c:	mov	x3, x26
   4c670:	bl	c3d0 <mpfr_round_p@plt>
   4c674:	cbnz	w0, 4c700 <mpfr_li2@@Base+0x1380>
   4c678:	sub	x8, x19, x22
   4c67c:	sub	x8, x8, #0x105
   4c680:	cmp	x25, x8
   4c684:	b.gt	4c6e4 <mpfr_li2@@Base+0x1364>
   4c688:	add	x22, x22, x25
   4c68c:	cmp	x22, #0x0
   4c690:	cinc	x8, x22, lt  // lt = tstop
   4c694:	sub	x0, x29, #0x28
   4c698:	mov	x1, x22
   4c69c:	asr	x25, x8, #1
   4c6a0:	bl	bf80 <mpfr_set_prec@plt>
   4c6a4:	sub	x0, x29, #0x48
   4c6a8:	mov	x1, x22
   4c6ac:	bl	bf80 <mpfr_set_prec@plt>
   4c6b0:	sub	x0, x29, #0x68
   4c6b4:	mov	x1, x22
   4c6b8:	bl	bf80 <mpfr_set_prec@plt>
   4c6bc:	b	4c57c <mpfr_li2@@Base+0x11fc>
   4c6c0:	mov	x8, xzr
   4c6c4:	b	4c5dc <mpfr_li2@@Base+0x125c>
   4c6c8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4c6cc:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4c6d0:	mov	w1, #0x214                 	// #532
   4c6d4:	add	x0, x0, #0xc76
   4c6d8:	add	x2, x2, #0xc85
   4c6dc:	bl	cb90 <mpfr_assert_fail@plt>
   4c6e0:	b	4c5d0 <mpfr_li2@@Base+0x1250>
   4c6e4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4c6e8:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4c6ec:	mov	w1, #0x21e                 	// #542
   4c6f0:	add	x0, x0, #0xc76
   4c6f4:	add	x2, x2, #0x4df
   4c6f8:	bl	cb90 <mpfr_assert_fail@plt>
   4c6fc:	b	4c688 <mpfr_li2@@Base+0x1308>
   4c700:	ldur	w3, [x29, #-32]
   4c704:	ldr	w2, [sp, #12]
   4c708:	sub	x1, x29, #0x28
   4c70c:	mov	x0, x28
   4c710:	mov	x19, x28
   4c714:	bl	c6f0 <mpfr_set4@plt>
   4c718:	mov	w23, w0
   4c71c:	sub	x0, x29, #0x28
   4c720:	sub	x1, x29, #0x48
   4c724:	sub	x2, x29, #0x68
   4c728:	mov	x3, xzr
   4c72c:	bl	c250 <mpfr_clears@plt>
   4c730:	b	4ccb8 <mpfr_li2@@Base+0x1938>
   4c734:	mov	x1, #0xfffffffffffffff9    	// #-7
   4c738:	mov	x0, x21
   4c73c:	mov	x2, xzr
   4c740:	bl	c430 <mpfr_cmp_si_2exp@plt>
   4c744:	cmp	w0, #0x0
   4c748:	b.le	4cb38 <mpfr_li2@@Base+0x17b8>
   4c74c:	sub	x0, x29, #0x28
   4c750:	mov	x1, x22
   4c754:	bl	cad0 <mpfr_init2@plt>
   4c758:	sub	x0, x29, #0x48
   4c75c:	mov	x1, x22
   4c760:	bl	cad0 <mpfr_init2@plt>
   4c764:	sub	x0, x29, #0x68
   4c768:	mov	x1, x22
   4c76c:	bl	cad0 <mpfr_init2@plt>
   4c770:	add	x0, sp, #0x58
   4c774:	mov	x1, x22
   4c778:	bl	cad0 <mpfr_init2@plt>
   4c77c:	add	x0, sp, #0x38
   4c780:	mov	x1, x22
   4c784:	bl	cad0 <mpfr_init2@plt>
   4c788:	ldr	w8, [sp, #12]
   4c78c:	mov	w24, #0x40                  	// #64
   4c790:	mov	w25, #0x3                   	// #3
   4c794:	mov	w23, #0x40                  	// #64
   4c798:	cmp	w8, #0x0
   4c79c:	cinc	x26, x26, eq  // eq = none
   4c7a0:	add	x0, sp, #0x38
   4c7a4:	mov	w1, #0x1                   	// #1
   4c7a8:	mov	x2, x21
   4c7ac:	mov	w3, wzr
   4c7b0:	bl	c350 <mpfr_ui_div@plt>
   4c7b4:	add	x0, sp, #0x38
   4c7b8:	add	x1, sp, #0x38
   4c7bc:	mov	w2, wzr
   4c7c0:	bl	be20 <mpfr_neg@plt>
   4c7c4:	sub	x0, x29, #0x48
   4c7c8:	add	x1, sp, #0x38
   4c7cc:	mov	w2, wzr
   4c7d0:	bl	c750 <mpfr_log1p@plt>
   4c7d4:	sub	x0, x29, #0x28
   4c7d8:	sub	x1, x29, #0x48
   4c7dc:	mov	w2, wzr
   4c7e0:	bl	4cdd0 <mpfr_li2@@Base+0x1a50>
   4c7e4:	mov	w27, w0
   4c7e8:	add	x0, sp, #0x38
   4c7ec:	mov	w1, #0x1                   	// #1
   4c7f0:	mov	x2, x21
   4c7f4:	mov	w3, wzr
   4c7f8:	bl	caa0 <mpfr_ui_sub@plt>
   4c7fc:	sub	x0, x29, #0x48
   4c800:	add	x1, sp, #0x38
   4c804:	mov	w2, #0x2                   	// #2
   4c808:	bl	c130 <mpfr_log@plt>
   4c80c:	add	x0, sp, #0x38
   4c810:	mov	x1, x21
   4c814:	mov	w2, wzr
   4c818:	bl	be20 <mpfr_neg@plt>
   4c81c:	sub	x0, x29, #0x68
   4c820:	add	x1, sp, #0x38
   4c824:	mov	w2, #0x2                   	// #2
   4c828:	bl	c130 <mpfr_log@plt>
   4c82c:	add	x0, sp, #0x58
   4c830:	sub	x1, x29, #0x68
   4c834:	sub	x2, x29, #0x48
   4c838:	mov	w3, wzr
   4c83c:	bl	be00 <mpfr_mul@plt>
   4c840:	add	x0, sp, #0x58
   4c844:	add	x1, sp, #0x58
   4c848:	mov	w2, #0x1                   	// #1
   4c84c:	mov	w3, wzr
   4c850:	bl	c950 <mpfr_div_2ui@plt>
   4c854:	sub	x0, x29, #0x28
   4c858:	sub	x1, x29, #0x28
   4c85c:	add	x2, sp, #0x58
   4c860:	mov	w3, wzr
   4c864:	bl	bc20 <mpfr_sub@plt>
   4c868:	cbz	w27, 4caa0 <mpfr_li2@@Base+0x1720>
   4c86c:	cmp	w27, #0x0
   4c870:	b.le	4caa8 <mpfr_li2@@Base+0x1728>
   4c874:	sxtw	x8, w27
   4c878:	clz	x8, x8
   4c87c:	sub	x9, x24, x8
   4c880:	ldur	x8, [x29, #-24]
   4c884:	sub	x9, x9, x8
   4c888:	add	x9, x9, #0x1
   4c88c:	cmp	x9, #0x3
   4c890:	b.ge	4c89c <mpfr_li2@@Base+0x151c>  // b.tcont
   4c894:	mov	w9, #0x3                   	// #3
   4c898:	b	4c8c4 <mpfr_li2@@Base+0x1544>
   4c89c:	cbz	w27, 4c8b8 <mpfr_li2@@Base+0x1538>
   4c8a0:	cmp	w27, #0x0
   4c8a4:	b.le	4cae0 <mpfr_li2@@Base+0x1760>
   4c8a8:	sxtw	x9, w27
   4c8ac:	clz	x9, x9
   4c8b0:	sub	x9, x24, x9
   4c8b4:	b	4c8bc <mpfr_li2@@Base+0x153c>
   4c8b8:	mov	x9, xzr
   4c8bc:	sub	x9, x9, x8
   4c8c0:	add	x9, x9, #0x1
   4c8c4:	add	x20, x9, x8
   4c8c8:	add	x0, sp, #0x58
   4c8cc:	sub	x1, x29, #0x68
   4c8d0:	mov	w2, wzr
   4c8d4:	add	x27, x20, #0x1
   4c8d8:	bl	c450 <mpfr_sqr@plt>
   4c8dc:	add	x0, sp, #0x58
   4c8e0:	add	x1, sp, #0x58
   4c8e4:	mov	w2, #0x2                   	// #2
   4c8e8:	mov	w3, wzr
   4c8ec:	bl	c950 <mpfr_div_2ui@plt>
   4c8f0:	sub	x0, x29, #0x28
   4c8f4:	sub	x1, x29, #0x28
   4c8f8:	add	x2, sp, #0x58
   4c8fc:	mov	w3, wzr
   4c900:	bl	bc20 <mpfr_sub@plt>
   4c904:	ldr	x8, [sp, #104]
   4c908:	ldur	x9, [x29, #-24]
   4c90c:	add	x0, sp, #0x58
   4c910:	sub	x1, x29, #0x48
   4c914:	add	x8, x8, #0x3
   4c918:	cmp	x27, x8
   4c91c:	csinc	x8, x8, x20, le
   4c920:	sub	x8, x8, x9
   4c924:	cmp	x8, #0x0
   4c928:	csinv	x8, x8, xzr, ge  // ge = tcont
   4c92c:	add	x8, x9, x8
   4c930:	mov	w2, wzr
   4c934:	add	x20, x8, #0x2
   4c938:	bl	c450 <mpfr_sqr@plt>
   4c93c:	add	x0, sp, #0x58
   4c940:	add	x1, sp, #0x58
   4c944:	mov	w2, #0x2                   	// #2
   4c948:	mov	w3, wzr
   4c94c:	bl	c950 <mpfr_div_2ui@plt>
   4c950:	sub	x0, x29, #0x28
   4c954:	sub	x1, x29, #0x28
   4c958:	add	x2, sp, #0x58
   4c95c:	mov	w3, wzr
   4c960:	bl	c240 <mpfr_add@plt>
   4c964:	ldr	x8, [sp, #104]
   4c968:	ldur	x9, [x29, #-24]
   4c96c:	add	x8, x8, #0x3
   4c970:	cmp	x20, x8
   4c974:	csel	x8, x20, x8, gt
   4c978:	sub	x8, x8, x9
   4c97c:	cmp	x8, #0x0
   4c980:	csinv	x8, x8, xzr, ge  // ge = tcont
   4c984:	add	x8, x9, x8
   4c988:	add	x20, x8, #0x2
   4c98c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4c990:	ldr	x1, [x0, #2704]
   4c994:	add	x0, x0, #0xa90
   4c998:	blr	x1
   4c99c:	ldr	x8, [sp, #48]
   4c9a0:	mov	w2, #0x2                   	// #2
   4c9a4:	add	x1, x8, x0
   4c9a8:	add	x0, sp, #0x58
   4c9ac:	bl	c3e0 <mpfr_cache@plt>
   4c9b0:	add	x0, sp, #0x58
   4c9b4:	add	x1, sp, #0x58
   4c9b8:	mov	w2, wzr
   4c9bc:	bl	c450 <mpfr_sqr@plt>
   4c9c0:	add	x0, sp, #0x58
   4c9c4:	add	x1, sp, #0x58
   4c9c8:	mov	w2, #0x6                   	// #6
   4c9cc:	mov	w3, wzr
   4c9d0:	bl	ccc0 <mpfr_div_ui@plt>
   4c9d4:	sub	x0, x29, #0x28
   4c9d8:	sub	x1, x29, #0x28
   4c9dc:	add	x2, sp, #0x58
   4c9e0:	mov	w3, wzr
   4c9e4:	bl	bc20 <mpfr_sub@plt>
   4c9e8:	ldur	x8, [x29, #-24]
   4c9ec:	cmp	x20, #0x3
   4c9f0:	csel	x9, x20, x25, gt
   4c9f4:	cmp	x8, x19
   4c9f8:	sub	x9, x9, x8
   4c9fc:	b.lt	4ca40 <mpfr_li2@@Base+0x16c0>  // b.tstop
   4ca00:	ldur	x10, [x29, #-40]
   4ca04:	cmp	x9, #0x0
   4ca08:	sub	x8, x22, x8
   4ca0c:	csinv	x9, x9, xzr, ge  // ge = tcont
   4ca10:	sub	x8, x8, x9
   4ca14:	sub	x9, x10, #0x1
   4ca18:	ldur	x0, [x29, #-16]
   4ca1c:	add	x10, x10, #0x3e
   4ca20:	cmp	x9, #0x0
   4ca24:	csel	x9, x10, x9, lt  // lt = tstop
   4ca28:	asr	x9, x9, #6
   4ca2c:	add	x1, x9, #0x1
   4ca30:	sub	x2, x8, #0x2
   4ca34:	mov	x3, x26
   4ca38:	bl	c3d0 <mpfr_round_p@plt>
   4ca3c:	cbnz	w0, 4cb00 <mpfr_li2@@Base+0x1780>
   4ca40:	sub	x8, x19, x22
   4ca44:	sub	x8, x8, #0x105
   4ca48:	cmp	x23, x8
   4ca4c:	b.gt	4cac4 <mpfr_li2@@Base+0x1744>
   4ca50:	add	x22, x22, x23
   4ca54:	cmp	x22, #0x0
   4ca58:	cinc	x8, x22, lt  // lt = tstop
   4ca5c:	sub	x0, x29, #0x28
   4ca60:	mov	x1, x22
   4ca64:	asr	x23, x8, #1
   4ca68:	bl	bf80 <mpfr_set_prec@plt>
   4ca6c:	sub	x0, x29, #0x48
   4ca70:	mov	x1, x22
   4ca74:	bl	bf80 <mpfr_set_prec@plt>
   4ca78:	sub	x0, x29, #0x68
   4ca7c:	mov	x1, x22
   4ca80:	bl	bf80 <mpfr_set_prec@plt>
   4ca84:	add	x0, sp, #0x58
   4ca88:	mov	x1, x22
   4ca8c:	bl	bf80 <mpfr_set_prec@plt>
   4ca90:	add	x0, sp, #0x38
   4ca94:	mov	x1, x22
   4ca98:	bl	bf80 <mpfr_set_prec@plt>
   4ca9c:	b	4c7a0 <mpfr_li2@@Base+0x1420>
   4caa0:	mov	x9, xzr
   4caa4:	b	4c880 <mpfr_li2@@Base+0x1500>
   4caa8:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4caac:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4cab0:	mov	w1, #0x24d                 	// #589
   4cab4:	add	x0, x0, #0xc76
   4cab8:	add	x2, x2, #0xc91
   4cabc:	bl	cb90 <mpfr_assert_fail@plt>
   4cac0:	b	4c874 <mpfr_li2@@Base+0x14f4>
   4cac4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4cac8:	adrp	x2, 5d000 <mpfr_l2b_62_1__tab@@Base+0x3778>
   4cacc:	mov	w1, #0x266                 	// #614
   4cad0:	add	x0, x0, #0xc76
   4cad4:	add	x2, x2, #0x4df
   4cad8:	bl	cb90 <mpfr_assert_fail@plt>
   4cadc:	b	4ca50 <mpfr_li2@@Base+0x16d0>
   4cae0:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4cae4:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4cae8:	mov	w1, #0x24d                 	// #589
   4caec:	add	x0, x0, #0xc76
   4caf0:	add	x2, x2, #0xc91
   4caf4:	bl	cb90 <mpfr_assert_fail@plt>
   4caf8:	ldur	x8, [x29, #-24]
   4cafc:	b	4c8a8 <mpfr_li2@@Base+0x1528>
   4cb00:	ldur	w3, [x29, #-32]
   4cb04:	ldr	w2, [sp, #12]
   4cb08:	sub	x1, x29, #0x28
   4cb0c:	mov	x0, x28
   4cb10:	bl	c6f0 <mpfr_set4@plt>
   4cb14:	mov	w23, w0
   4cb18:	sub	x0, x29, #0x28
   4cb1c:	sub	x1, x29, #0x48
   4cb20:	sub	x2, x29, #0x68
   4cb24:	add	x3, sp, #0x58
   4cb28:	add	x4, sp, #0x38
   4cb2c:	mov	x5, xzr
   4cb30:	bl	c250 <mpfr_clears@plt>
   4cb34:	b	4ccb8 <mpfr_li2@@Base+0x1938>
   4cb38:	ldr	x20, [x28]
   4cb3c:	mov	x1, #0xfffffffffffffff9    	// #-7
   4cb40:	mov	x0, x21
   4cb44:	mov	x2, xzr
   4cb48:	add	x23, x20, #0x14
   4cb4c:	bl	c430 <mpfr_cmp_si_2exp@plt>
   4cb50:	cmp	w0, #0x1
   4cb54:	b.ge	4cd98 <mpfr_li2@@Base+0x1a18>  // b.tcont
   4cb58:	sub	x0, x29, #0x28
   4cb5c:	mov	x1, x23
   4cb60:	bl	cad0 <mpfr_init2@plt>
   4cb64:	sub	x0, x29, #0x48
   4cb68:	mov	x1, x23
   4cb6c:	bl	cad0 <mpfr_init2@plt>
   4cb70:	sub	x0, x29, #0x28
   4cb74:	mov	x1, x21
   4cb78:	mov	w2, wzr
   4cb7c:	bl	be20 <mpfr_neg@plt>
   4cb80:	sub	x0, x29, #0x28
   4cb84:	sub	x1, x29, #0x28
   4cb88:	mov	w2, wzr
   4cb8c:	bl	c130 <mpfr_log@plt>
   4cb90:	sub	x0, x29, #0x28
   4cb94:	sub	x1, x29, #0x28
   4cb98:	mov	w2, wzr
   4cb9c:	bl	c450 <mpfr_sqr@plt>
   4cba0:	sub	x0, x29, #0x28
   4cba4:	sub	x1, x29, #0x28
   4cba8:	mov	w2, #0x1                   	// #1
   4cbac:	mov	w3, wzr
   4cbb0:	bl	c950 <mpfr_div_2ui@plt>
   4cbb4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4cbb8:	ldr	x1, [x0, #2704]
   4cbbc:	add	x0, x0, #0xa90
   4cbc0:	blr	x1
   4cbc4:	ldr	x8, [sp, #48]
   4cbc8:	mov	w2, wzr
   4cbcc:	add	x1, x8, x0
   4cbd0:	sub	x0, x29, #0x48
   4cbd4:	bl	c3e0 <mpfr_cache@plt>
   4cbd8:	sub	x0, x29, #0x48
   4cbdc:	sub	x1, x29, #0x48
   4cbe0:	mov	w2, wzr
   4cbe4:	bl	c450 <mpfr_sqr@plt>
   4cbe8:	sub	x0, x29, #0x48
   4cbec:	sub	x1, x29, #0x48
   4cbf0:	mov	w2, #0x6                   	// #6
   4cbf4:	mov	w3, wzr
   4cbf8:	bl	ccc0 <mpfr_div_ui@plt>
   4cbfc:	ldur	x8, [x29, #-24]
   4cc00:	ldur	x9, [x29, #-56]
   4cc04:	cmp	x8, x9
   4cc08:	b.lt	4cdb4 <mpfr_li2@@Base+0x1a34>  // b.tstop
   4cc0c:	sub	x0, x29, #0x28
   4cc10:	sub	x1, x29, #0x28
   4cc14:	sub	x2, x29, #0x48
   4cc18:	mov	w3, wzr
   4cc1c:	bl	c240 <mpfr_add@plt>
   4cc20:	ldur	x8, [x29, #-24]
   4cc24:	mov	w23, wzr
   4cc28:	cmp	x8, x19
   4cc2c:	b.lt	4cca4 <mpfr_li2@@Base+0x1924>  // b.tstop
   4cc30:	ldr	x9, [x21, #16]
   4cc34:	sub	x8, x20, x8
   4cc38:	add	x8, x8, #0x12
   4cc3c:	cmp	x9, x8
   4cc40:	b.lt	4cca4 <mpfr_li2@@Base+0x1924>  // b.tstop
   4cc44:	ldur	x8, [x29, #-40]
   4cc48:	ldr	x9, [x28]
   4cc4c:	ldur	x0, [x29, #-16]
   4cc50:	add	x2, x20, #0x10
   4cc54:	sub	x10, x8, #0x1
   4cc58:	add	x8, x8, #0x3e
   4cc5c:	cmp	x10, #0x0
   4cc60:	csel	x8, x8, x10, lt  // lt = tstop
   4cc64:	ldr	w10, [sp, #12]
   4cc68:	asr	x8, x8, #6
   4cc6c:	add	x1, x8, #0x1
   4cc70:	cmp	w10, #0x0
   4cc74:	cinc	x3, x9, eq  // eq = none
   4cc78:	bl	c3d0 <mpfr_round_p@plt>
   4cc7c:	cbz	w0, 4cca0 <mpfr_li2@@Base+0x1920>
   4cc80:	ldr	w20, [sp, #12]
   4cc84:	sub	x1, x29, #0x28
   4cc88:	mov	x0, x28
   4cc8c:	mov	w2, w20
   4cc90:	bl	be20 <mpfr_neg@plt>
   4cc94:	cmp	w20, #0x5
   4cc98:	csinc	w23, w0, wzr, ne  // ne = any
   4cc9c:	b	4cca4 <mpfr_li2@@Base+0x1924>
   4cca0:	mov	w23, wzr
   4cca4:	sub	x0, x29, #0x28
   4cca8:	bl	c110 <mpfr_clear@plt>
   4ccac:	sub	x0, x29, #0x48
   4ccb0:	bl	c110 <mpfr_clear@plt>
   4ccb4:	cbz	w23, 4c74c <mpfr_li2@@Base+0x13cc>
   4ccb8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ccbc:	ldr	x1, [x0, #2656]
   4ccc0:	add	x0, x0, #0xa60
   4ccc4:	blr	x1
   4ccc8:	ldr	x8, [sp, #48]
   4cccc:	ldr	w9, [sp, #36]
   4ccd0:	str	w9, [x8, x0]
   4ccd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ccd8:	ldr	x1, [x0, #2592]
   4ccdc:	add	x0, x0, #0xa20
   4cce0:	blr	x1
   4cce4:	ldr	x9, [sp, #40]
   4cce8:	str	x9, [x8, x0]
   4ccec:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ccf0:	ldr	x1, [x0, #2624]
   4ccf4:	add	x0, x0, #0xa40
   4ccf8:	blr	x1
   4ccfc:	ldr	x9, [sp, #24]
   4cd00:	str	x9, [x8, x0]
   4cd04:	ldr	x8, [x28, #16]
   4cd08:	cmp	x8, x9
   4cd0c:	b.gt	4cd88 <mpfr_li2@@Base+0x1a08>
   4cd10:	ldr	x9, [sp, #40]
   4cd14:	cmp	x8, x9
   4cd18:	b.lt	4cd88 <mpfr_li2@@Base+0x1a08>  // b.tstop
   4cd1c:	cbz	w23, 4b720 <mpfr_li2@@Base+0x3a0>
   4cd20:	ldr	w8, [sp, #36]
   4cd24:	orr	w8, w8, #0x8
   4cd28:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4cd2c:	ldr	x1, [x0, #2656]
   4cd30:	add	x0, x0, #0xa60
   4cd34:	blr	x1
   4cd38:	ldr	x9, [sp, #48]
   4cd3c:	b	4b71c <mpfr_li2@@Base+0x39c>
   4cd40:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4cd44:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4cd48:	add	x0, x0, #0xc76
   4cd4c:	add	x2, x2, #0xca6
   4cd50:	mov	w1, #0x82                  	// #130
   4cd54:	bl	cb90 <mpfr_assert_fail@plt>
   4cd58:	b	4b7a0 <mpfr_li2@@Base+0x420>
   4cd5c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4cd60:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4cd64:	add	x0, x0, #0xc76
   4cd68:	add	x2, x2, #0xd14
   4cd6c:	mov	w1, #0x90                  	// #144
   4cd70:	bl	cb90 <mpfr_assert_fail@plt>
   4cd74:	b	4b844 <mpfr_li2@@Base+0x4c4>
   4cd78:	mov	x0, x28
   4cd7c:	mov	w1, w23
   4cd80:	mov	w2, w19
   4cd84:	b	4b950 <mpfr_li2@@Base+0x5d0>
   4cd88:	ldr	w2, [sp, #12]
   4cd8c:	mov	x0, x28
   4cd90:	mov	w1, w23
   4cd94:	b	4b950 <mpfr_li2@@Base+0x5d0>
   4cd98:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4cd9c:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4cda0:	add	x0, x0, #0xc76
   4cda4:	add	x2, x2, #0xd38
   4cda8:	mov	w1, #0xb4                  	// #180
   4cdac:	bl	cb90 <mpfr_assert_fail@plt>
   4cdb0:	b	4cb58 <mpfr_li2@@Base+0x17d8>
   4cdb4:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4cdb8:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4cdbc:	add	x0, x0, #0xc76
   4cdc0:	add	x2, x2, #0xe54
   4cdc4:	mov	w1, #0xc0                  	// #192
   4cdc8:	bl	cb90 <mpfr_assert_fail@plt>
   4cdcc:	b	4cc0c <mpfr_li2@@Base+0x188c>
   4cdd0:	sub	sp, sp, #0x100
   4cdd4:	stp	x29, x30, [sp, #160]
   4cdd8:	stp	x28, x27, [sp, #176]
   4cddc:	stp	x26, x25, [sp, #192]
   4cde0:	stp	x24, x23, [sp, #208]
   4cde4:	stp	x22, x21, [sp, #224]
   4cde8:	stp	x20, x19, [sp, #240]
   4cdec:	ldr	x19, [x0]
   4cdf0:	mov	w23, w2
   4cdf4:	mov	x21, x1
   4cdf8:	add	x29, sp, #0xa0
   4cdfc:	subs	x20, x19, #0x1
   4ce00:	str	x0, [sp, #8]
   4ce04:	b.eq	4d0b8 <mpfr_li2@@Base+0x1d38>  // b.none
   4ce08:	b.le	4d0c0 <mpfr_li2@@Base+0x1d40>
   4ce0c:	clz	x8, x20
   4ce10:	mov	w9, #0x40                  	// #64
   4ce14:	sub	x8, x9, x8
   4ce18:	add	x8, x19, x8
   4ce1c:	add	x22, x8, #0x4
   4ce20:	sub	x0, x29, #0x20
   4ce24:	mov	x1, x22
   4ce28:	bl	cad0 <mpfr_init2@plt>
   4ce2c:	sub	x0, x29, #0x40
   4ce30:	mov	x1, x22
   4ce34:	bl	cad0 <mpfr_init2@plt>
   4ce38:	add	x0, sp, #0x40
   4ce3c:	mov	x1, x22
   4ce40:	bl	cad0 <mpfr_init2@plt>
   4ce44:	add	x0, sp, #0x20
   4ce48:	mov	x1, x22
   4ce4c:	bl	cad0 <mpfr_init2@plt>
   4ce50:	cmp	w23, #0x0
   4ce54:	mov	w25, #0x40                  	// #64
   4ce58:	cinc	x8, x19, eq  // eq = none
   4ce5c:	str	w23, [sp, #20]
   4ce60:	str	x8, [sp, #24]
   4ce64:	sub	x0, x29, #0x40
   4ce68:	mov	w2, #0x2                   	// #2
   4ce6c:	mov	x1, x21
   4ce70:	bl	c450 <mpfr_sqr@plt>
   4ce74:	ldr	w3, [x21, #8]
   4ce78:	add	x0, sp, #0x40
   4ce7c:	mov	w2, #0x2                   	// #2
   4ce80:	mov	x1, x21
   4ce84:	bl	c6f0 <mpfr_set4@plt>
   4ce88:	ldr	w3, [x21, #8]
   4ce8c:	sub	x0, x29, #0x20
   4ce90:	mov	w2, #0x2                   	// #2
   4ce94:	mov	x1, x21
   4ce98:	bl	c6f0 <mpfr_set4@plt>
   4ce9c:	ldur	x20, [x29, #-16]
   4cea0:	mov	x26, xzr
   4cea4:	mov	x19, xzr
   4cea8:	mov	x23, xzr
   4ceac:	mov	w24, #0xd                   	// #13
   4ceb0:	mov	w27, #0x1                   	// #1
   4ceb4:	add	x0, sp, #0x40
   4ceb8:	sub	x1, x29, #0x40
   4cebc:	add	x2, sp, #0x40
   4cec0:	mov	w3, #0x2                   	// #2
   4cec4:	bl	be00 <mpfr_mul@plt>
   4cec8:	add	x28, x26, #0x2
   4cecc:	add	x0, sp, #0x40
   4ced0:	add	x1, sp, #0x40
   4ced4:	mov	w3, #0x2                   	// #2
   4ced8:	mov	x2, x28
   4cedc:	bl	ccc0 <mpfr_div_ui@plt>
   4cee0:	add	x0, sp, #0x40
   4cee4:	add	x1, sp, #0x40
   4cee8:	mov	w3, #0x2                   	// #2
   4ceec:	mov	x2, x28
   4cef0:	bl	ccc0 <mpfr_div_ui@plt>
   4cef4:	add	x26, x26, #0x3
   4cef8:	add	x0, sp, #0x40
   4cefc:	add	x1, sp, #0x40
   4cf00:	mov	w3, #0x2                   	// #2
   4cf04:	mov	x2, x26
   4cf08:	bl	ccc0 <mpfr_div_ui@plt>
   4cf0c:	add	x0, sp, #0x40
   4cf10:	add	x1, sp, #0x40
   4cf14:	mov	w3, #0x2                   	// #2
   4cf18:	mov	x2, x26
   4cf1c:	bl	ccc0 <mpfr_div_ui@plt>
   4cf20:	mov	x0, x27
   4cf24:	bl	c880 <mpfr_bernoulli_cache@plt>
   4cf28:	mov	x2, x0
   4cf2c:	add	x0, sp, #0x20
   4cf30:	add	x1, sp, #0x40
   4cf34:	mov	w3, wzr
   4cf38:	bl	c520 <mpfr_mul_z@plt>
   4cf3c:	sub	x0, x29, #0x20
   4cf40:	sub	x1, x29, #0x20
   4cf44:	add	x2, sp, #0x20
   4cf48:	mov	w3, wzr
   4cf4c:	bl	c240 <mpfr_add@plt>
   4cf50:	ldr	x9, [sp, #48]
   4cf54:	add	x8, x20, x23
   4cf58:	ldur	x20, [x29, #-16]
   4cf5c:	add	x27, x27, #0x1
   4cf60:	add	x10, x9, w24, uxtw
   4cf64:	cmp	x8, x10
   4cf68:	csel	x8, x8, x10, gt
   4cf6c:	sub	x8, x8, x20
   4cf70:	cmp	x8, #0x0
   4cf74:	sub	x10, x20, x22
   4cf78:	csinv	x8, x8, xzr, ge  // ge = tcont
   4cf7c:	add	x19, x19, #0x6
   4cf80:	cmp	x9, x10
   4cf84:	add	x23, x8, #0x2
   4cf88:	add	x24, x24, #0x5
   4cf8c:	mov	x26, x28
   4cf90:	b.gt	4ceb4 <mpfr_li2@@Base+0x1b34>
   4cf94:	ldr	x8, [x21, #16]
   4cf98:	mov	x10, #0xfffffffffffffeff    	// #-257
   4cf9c:	and	x9, x19, #0xfffffffe
   4cfa0:	movk	x10, #0x7fff, lsl #48
   4cfa4:	add	x10, x10, #0x105
   4cfa8:	sub	x8, x8, x9
   4cfac:	cmp	x20, x10
   4cfb0:	sub	x8, x8, #0x5
   4cfb4:	b.lt	4cff4 <mpfr_li2@@Base+0x1c74>  // b.tstop
   4cfb8:	ldur	x9, [x29, #-32]
   4cfbc:	cmp	x23, x8
   4cfc0:	ldur	x0, [x29, #-8]
   4cfc4:	csel	x8, x23, x8, gt
   4cfc8:	sub	x10, x9, #0x1
   4cfcc:	add	x9, x9, #0x3e
   4cfd0:	cmp	x10, #0x0
   4cfd4:	ldr	x3, [sp, #24]
   4cfd8:	csel	x9, x9, x10, lt  // lt = tstop
   4cfdc:	mvn	x8, x8
   4cfe0:	asr	x9, x9, #6
   4cfe4:	add	x1, x9, #0x1
   4cfe8:	add	x2, x22, x8
   4cfec:	bl	c3d0 <mpfr_round_p@plt>
   4cff0:	cbnz	w0, 4d068 <mpfr_li2@@Base+0x1ce8>
   4cff4:	mov	x8, #0xfffffffffffffeff    	// #-257
   4cff8:	movk	x8, #0x7fff, lsl #48
   4cffc:	sub	x8, x8, x22
   4d000:	cmp	x25, x8
   4d004:	b.gt	4d04c <mpfr_li2@@Base+0x1ccc>
   4d008:	add	x22, x22, x25
   4d00c:	cmp	x22, #0x0
   4d010:	cinc	x8, x22, lt  // lt = tstop
   4d014:	sub	x0, x29, #0x20
   4d018:	mov	x1, x22
   4d01c:	asr	x25, x8, #1
   4d020:	bl	bf80 <mpfr_set_prec@plt>
   4d024:	sub	x0, x29, #0x40
   4d028:	mov	x1, x22
   4d02c:	bl	bf80 <mpfr_set_prec@plt>
   4d030:	add	x0, sp, #0x40
   4d034:	mov	x1, x22
   4d038:	bl	bf80 <mpfr_set_prec@plt>
   4d03c:	add	x0, sp, #0x20
   4d040:	mov	x1, x22
   4d044:	bl	bf80 <mpfr_set_prec@plt>
   4d048:	b	4ce64 <mpfr_li2@@Base+0x1ae4>
   4d04c:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4d050:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   4d054:	mov	w1, #0x5e                  	// #94
   4d058:	add	x0, x0, #0xc76
   4d05c:	add	x2, x2, #0xff6
   4d060:	bl	cb90 <mpfr_assert_fail@plt>
   4d064:	b	4d008 <mpfr_li2@@Base+0x1c88>
   4d068:	ldur	w3, [x29, #-24]
   4d06c:	ldr	x0, [sp, #8]
   4d070:	ldr	w2, [sp, #20]
   4d074:	sub	x1, x29, #0x20
   4d078:	bl	c6f0 <mpfr_set4@plt>
   4d07c:	sub	x0, x29, #0x20
   4d080:	sub	x1, x29, #0x40
   4d084:	add	x2, sp, #0x40
   4d088:	add	x3, sp, #0x20
   4d08c:	mov	x4, xzr
   4d090:	bl	c250 <mpfr_clears@plt>
   4d094:	mov	w0, w26
   4d098:	ldp	x20, x19, [sp, #240]
   4d09c:	ldp	x22, x21, [sp, #224]
   4d0a0:	ldp	x24, x23, [sp, #208]
   4d0a4:	ldp	x26, x25, [sp, #192]
   4d0a8:	ldp	x28, x27, [sp, #176]
   4d0ac:	ldp	x29, x30, [sp, #160]
   4d0b0:	add	sp, sp, #0x100
   4d0b4:	ret
   4d0b8:	mov	x8, xzr
   4d0bc:	b	4ce18 <mpfr_li2@@Base+0x1a98>
   4d0c0:	adrp	x0, 5e000 <mpfr_bases@@Base+0x4f8>
   4d0c4:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   4d0c8:	add	x0, x0, #0xc76
   4d0cc:	add	x2, x2, #0xc9b
   4d0d0:	mov	w1, #0x31                  	// #49
   4d0d4:	bl	cb90 <mpfr_assert_fail@plt>
   4d0d8:	b	4ce0c <mpfr_li2@@Base+0x1a8c>

000000000004d0dc <mpfr_rec_sqrt@@Base>:
   4d0dc:	stp	x29, x30, [sp, #-96]!
   4d0e0:	stp	x28, x27, [sp, #16]
   4d0e4:	stp	x26, x25, [sp, #32]
   4d0e8:	stp	x24, x23, [sp, #48]
   4d0ec:	stp	x22, x21, [sp, #64]
   4d0f0:	stp	x20, x19, [sp, #80]
   4d0f4:	mov	x29, sp
   4d0f8:	sub	sp, sp, #0x30
   4d0fc:	ldr	x20, [x1, #16]
   4d100:	mov	x8, #0x2                   	// #2
   4d104:	movk	x8, #0x8000, lsl #48
   4d108:	add	x9, x8, #0x2
   4d10c:	mov	x21, x1
   4d110:	cmp	x20, x9
   4d114:	mov	x19, x0
   4d118:	b.lt	4d308 <mpfr_rec_sqrt@@Base+0x22c>  // b.tstop
   4d11c:	ldr	w9, [x21, #8]
   4d120:	tbnz	w9, #31, 4d344 <mpfr_rec_sqrt@@Base+0x268>
   4d124:	ldr	x22, [x19]
   4d128:	mov	w8, #0x1                   	// #1
   4d12c:	mvn	w9, w20
   4d130:	str	w8, [x19, #8]
   4d134:	sub	x8, x22, #0x1
   4d138:	add	x10, x22, #0x3f
   4d13c:	and	w27, w9, #0x1
   4d140:	ldr	x25, [x21]
   4d144:	add	x9, x22, #0xb
   4d148:	asr	x11, x8, #6
   4d14c:	and	x8, x10, #0xffffffffffffffc0
   4d150:	cmp	x9, x8
   4d154:	csel	x23, x8, x9, lt  // lt = tstop
   4d158:	cmp	w2, #0x0
   4d15c:	cinc	x8, x22, eq  // eq = none
   4d160:	stur	w2, [x29, #-28]
   4d164:	stur	x8, [x29, #-24]
   4d168:	stur	x11, [x29, #-40]
   4d16c:	sub	x8, x23, #0x1
   4d170:	asr	x24, x8, #6
   4d174:	cmp	x19, x21
   4d178:	add	x28, x24, #0x1
   4d17c:	stur	xzr, [x29, #-16]
   4d180:	b.eq	4d194 <mpfr_rec_sqrt@@Base+0xb8>  // b.none
   4d184:	cmp	x24, x11
   4d188:	b.gt	4d194 <mpfr_rec_sqrt@@Base+0xb8>
   4d18c:	ldr	x26, [x19, #24]
   4d190:	b	4d1b4 <mpfr_rec_sqrt@@Base+0xd8>
   4d194:	lsl	x1, x28, #3
   4d198:	cmp	x1, #0x4, lsl #12
   4d19c:	b.hi	4d21c <mpfr_rec_sqrt@@Base+0x140>  // b.pmore
   4d1a0:	add	x9, x1, #0xf
   4d1a4:	mov	x8, sp
   4d1a8:	and	x9, x9, #0xfffffffffffffff0
   4d1ac:	sub	x26, x8, x9
   4d1b0:	mov	sp, x26
   4d1b4:	ldr	x2, [x21, #24]
   4d1b8:	mov	x0, x26
   4d1bc:	mov	x1, x23
   4d1c0:	mov	x3, x25
   4d1c4:	mov	w4, w27
   4d1c8:	bl	4d42c <mpfr_rec_sqrt@@Base+0x350>
   4d1cc:	ldur	x3, [x29, #-24]
   4d1d0:	cmp	x23, x25
   4d1d4:	cset	w8, lt  // lt = tstop
   4d1d8:	sub	x2, x23, x8
   4d1dc:	mov	x0, x26
   4d1e0:	mov	x1, x28
   4d1e4:	bl	c3d0 <mpfr_round_p@plt>
   4d1e8:	cbnz	w0, 4d234 <mpfr_rec_sqrt@@Base+0x158>
   4d1ec:	cbnz	w27, 4d208 <mpfr_rec_sqrt@@Base+0x12c>
   4d1f0:	ldr	x8, [x21, #16]
   4d1f4:	mov	w1, #0x1                   	// #1
   4d1f8:	mov	x0, x21
   4d1fc:	sub	x2, x8, #0x1
   4d200:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4d204:	cbz	w0, 4d3dc <mpfr_rec_sqrt@@Base+0x300>
   4d208:	ldur	x0, [x29, #-16]
   4d20c:	cbnz	x0, 4d22c <mpfr_rec_sqrt@@Base+0x150>
   4d210:	ldur	x11, [x29, #-40]
   4d214:	add	x23, x23, #0x40
   4d218:	b	4d16c <mpfr_rec_sqrt@@Base+0x90>
   4d21c:	sub	x0, x29, #0x10
   4d220:	bl	be70 <mpfr_tmp_allocate@plt>
   4d224:	mov	x26, x0
   4d228:	b	4d1b4 <mpfr_rec_sqrt@@Base+0xd8>
   4d22c:	bl	c460 <mpfr_tmp_free@plt>
   4d230:	b	4d210 <mpfr_rec_sqrt@@Base+0x134>
   4d234:	orr	x20, x20, #0xfffffffffffffffe
   4d238:	mov	x4, x22
   4d23c:	ldur	w22, [x29, #-28]
   4d240:	ldr	x0, [x19, #24]
   4d244:	sub	x6, x29, #0x4
   4d248:	mov	x1, x26
   4d24c:	mov	x2, x23
   4d250:	mov	w3, wzr
   4d254:	mov	w5, w22
   4d258:	bl	ca70 <mpfr_round_raw@plt>
   4d25c:	ldr	x8, [x21, #16]
   4d260:	add	x8, x8, x20
   4d264:	cmp	x8, #0x0
   4d268:	cinc	x8, x8, lt  // lt = tstop
   4d26c:	neg	x8, x8, asr #1
   4d270:	str	x8, [x19, #16]
   4d274:	cbnz	w0, 4d36c <mpfr_rec_sqrt@@Base+0x290>
   4d278:	ldur	x0, [x29, #-16]
   4d27c:	cbnz	x0, 4d388 <mpfr_rec_sqrt@@Base+0x2ac>
   4d280:	ldr	x10, [x19, #16]
   4d284:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4d288:	ldr	x1, [x0, #2592]
   4d28c:	add	x0, x0, #0xa20
   4d290:	blr	x1
   4d294:	mrs	x9, tpidr_el0
   4d298:	ldr	x11, [x9, x0]
   4d29c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4d2a0:	ldr	x1, [x0, #2624]
   4d2a4:	add	x0, x0, #0xa40
   4d2a8:	blr	x1
   4d2ac:	ldur	w8, [x29, #-4]
   4d2b0:	cmp	x10, x11
   4d2b4:	b.lt	4d390 <mpfr_rec_sqrt@@Base+0x2b4>  // b.tstop
   4d2b8:	ldr	x11, [x9, x0]
   4d2bc:	cmp	x10, x11
   4d2c0:	b.gt	4d390 <mpfr_rec_sqrt@@Base+0x2b4>
   4d2c4:	cbz	w8, 4d2e4 <mpfr_rec_sqrt@@Base+0x208>
   4d2c8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4d2cc:	ldr	x1, [x0, #2656]
   4d2d0:	add	x0, x0, #0xa60
   4d2d4:	blr	x1
   4d2d8:	ldr	w10, [x9, x0]
   4d2dc:	orr	w10, w10, #0x8
   4d2e0:	str	w10, [x9, x0]
   4d2e4:	mov	w0, w8
   4d2e8:	mov	sp, x29
   4d2ec:	ldp	x20, x19, [sp, #80]
   4d2f0:	ldp	x22, x21, [sp, #64]
   4d2f4:	ldp	x24, x23, [sp, #48]
   4d2f8:	ldp	x26, x25, [sp, #32]
   4d2fc:	ldp	x28, x27, [sp, #16]
   4d300:	ldp	x29, x30, [sp], #96
   4d304:	ret
   4d308:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4d30c:	cmp	x20, x9
   4d310:	b.eq	4d3a8 <mpfr_rec_sqrt@@Base+0x2cc>  // b.none
   4d314:	mov	x9, #0x2                   	// #2
   4d318:	movk	x9, #0x8000, lsl #48
   4d31c:	cmp	x20, x9
   4d320:	b.eq	4d344 <mpfr_rec_sqrt@@Base+0x268>  // b.none
   4d324:	ldr	w9, [x21, #8]
   4d328:	tbnz	w9, #31, 4d344 <mpfr_rec_sqrt@@Base+0x268>
   4d32c:	mov	w9, #0x1                   	// #1
   4d330:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   4d334:	mov	w8, wzr
   4d338:	str	w9, [x19, #8]
   4d33c:	str	x10, [x19, #16]
   4d340:	b	4d2e4 <mpfr_rec_sqrt@@Base+0x208>
   4d344:	str	x8, [x19, #16]
   4d348:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4d34c:	ldr	x1, [x0, #2656]
   4d350:	add	x0, x0, #0xa60
   4d354:	blr	x1
   4d358:	mrs	x9, tpidr_el0
   4d35c:	ldr	w10, [x9, x0]
   4d360:	mov	w8, wzr
   4d364:	orr	w10, w10, #0x4
   4d368:	b	4d2e0 <mpfr_rec_sqrt@@Base+0x204>
   4d36c:	ldr	x9, [x19, #24]
   4d370:	ldur	x10, [x29, #-40]
   4d374:	add	x8, x8, #0x1
   4d378:	str	x8, [x19, #16]
   4d37c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   4d380:	str	x8, [x9, x10, lsl #3]
   4d384:	b	4d278 <mpfr_rec_sqrt@@Base+0x19c>
   4d388:	bl	c460 <mpfr_tmp_free@plt>
   4d38c:	b	4d280 <mpfr_rec_sqrt@@Base+0x1a4>
   4d390:	mov	x0, x19
   4d394:	mov	w1, w8
   4d398:	mov	w2, w22
   4d39c:	bl	cb80 <mpfr_check_range@plt>
   4d3a0:	mov	w8, w0
   4d3a4:	b	4d2e4 <mpfr_rec_sqrt@@Base+0x208>
   4d3a8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4d3ac:	mov	w9, #0x1                   	// #1
   4d3b0:	str	x8, [x19, #16]
   4d3b4:	str	w9, [x19, #8]
   4d3b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4d3bc:	ldr	x1, [x0, #2656]
   4d3c0:	add	x0, x0, #0xa60
   4d3c4:	blr	x1
   4d3c8:	mrs	x9, tpidr_el0
   4d3cc:	ldr	w10, [x9, x0]
   4d3d0:	mov	w8, wzr
   4d3d4:	orr	w10, w10, #0x20
   4d3d8:	b	4d2e0 <mpfr_rec_sqrt@@Base+0x204>
   4d3dc:	ldr	x9, [x26]
   4d3e0:	lsl	x8, x24, #6
   4d3e4:	sub	x8, x8, x23
   4d3e8:	mov	w10, #0x1                   	// #1
   4d3ec:	lsl	x8, x10, x8
   4d3f0:	adds	x8, x9, x8
   4d3f4:	str	x8, [x26]
   4d3f8:	b.cc	4d41c <mpfr_rec_sqrt@@Base+0x340>  // b.lo, b.ul, b.last
   4d3fc:	mov	w8, #0x1                   	// #1
   4d400:	cmp	x8, x24
   4d404:	b.gt	4d41c <mpfr_rec_sqrt@@Base+0x340>
   4d408:	ldr	x9, [x26, x8, lsl #3]
   4d40c:	adds	x9, x9, #0x1
   4d410:	str	x9, [x26, x8, lsl #3]
   4d414:	add	x8, x8, #0x1
   4d418:	b.cs	4d400 <mpfr_rec_sqrt@@Base+0x324>  // b.hs, b.nlast
   4d41c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   4d420:	str	x8, [x26, x24, lsl #3]
   4d424:	mov	x20, #0xfffffffffffffffd    	// #-3
   4d428:	b	4d238 <mpfr_rec_sqrt@@Base+0x15c>
   4d42c:	stp	x29, x30, [sp, #-96]!
   4d430:	stp	x28, x27, [sp, #16]
   4d434:	stp	x26, x25, [sp, #32]
   4d438:	stp	x24, x23, [sp, #48]
   4d43c:	stp	x22, x21, [sp, #64]
   4d440:	stp	x20, x19, [sp, #80]
   4d444:	mov	x29, sp
   4d448:	sub	sp, sp, #0x70
   4d44c:	sub	x8, x1, #0x1
   4d450:	sub	x9, x3, #0x1
   4d454:	asr	x23, x8, #6
   4d458:	asr	x9, x9, #6
   4d45c:	add	x28, x23, #0x1
   4d460:	add	x10, x9, #0x1
   4d464:	cmp	x9, x8, asr #6
   4d468:	sub	x8, x10, x28
   4d46c:	csinc	x26, x28, x9, gt
   4d470:	add	x9, x2, x8, lsl #3
   4d474:	csel	x8, x8, xzr, gt
   4d478:	csel	x11, x9, x2, gt
   4d47c:	cmp	x1, #0xb
   4d480:	mov	x19, x0
   4d484:	b.ne	4d4d8 <mpfr_rec_sqrt@@Base+0x3fc>  // b.any
   4d488:	add	x8, x11, x26, lsl #3
   4d48c:	ldur	x8, [x8, #-8]
   4d490:	mov	w9, #0x34                  	// #52
   4d494:	sub	w9, w9, w4
   4d498:	adrp	x10, 5e000 <mpfr_bases@@Base+0x4f8>
   4d49c:	lsr	x8, x8, x9
   4d4a0:	add	x10, x10, #0xe7a
   4d4a4:	lsr	x9, x8, #4
   4d4a8:	add	x10, x10, x9, lsl #1
   4d4ac:	and	x9, x9, #0x3f0
   4d4b0:	bfxil	x9, x8, #0, #4
   4d4b4:	ldurh	w8, [x10, #-256]
   4d4b8:	adrp	x10, 5f000 <mpfr_bases@@Base+0x14f8>
   4d4bc:	add	x10, x10, #0x17a
   4d4c0:	add	x9, x9, x10
   4d4c4:	ldurb	w9, [x9, #-128]
   4d4c8:	add	w8, w9, w8
   4d4cc:	lsl	x8, x8, #53
   4d4d0:	str	x8, [x19]
   4d4d4:	b	4da64 <mpfr_rec_sqrt@@Base+0x988>
   4d4d8:	stur	x8, [x29, #-104]
   4d4dc:	asr	x8, x1, #1
   4d4e0:	cmp	x1, #0x12
   4d4e4:	mov	w9, #0xb                   	// #11
   4d4e8:	add	x8, x8, #0x2
   4d4ec:	csel	x21, x9, x8, lt  // lt = tstop
   4d4f0:	mov	w10, #0x1                   	// #1
   4d4f4:	sub	x8, x21, #0x1
   4d4f8:	lsl	x9, x21, #1
   4d4fc:	add	x12, x21, w4, sxtw
   4d500:	bfi	x10, x21, #1, #63
   4d504:	asr	x13, x8, #6
   4d508:	sub	x8, x9, #0x1
   4d50c:	add	x9, x10, w4, sxtw
   4d510:	asr	x10, x12, #6
   4d514:	asr	x8, x8, #6
   4d518:	add	x24, x13, #0x1
   4d51c:	stur	x8, [x29, #-16]
   4d520:	sub	x8, x9, #0x1
   4d524:	cmp	x10, x26
   4d528:	stur	x11, [x29, #-88]
   4d52c:	add	x11, x11, x26, lsl #3
   4d530:	sub	x9, x28, x24
   4d534:	stur	x8, [x29, #-112]
   4d538:	asr	x20, x8, #6
   4d53c:	csinc	x8, x26, x10, ge  // ge = tcont
   4d540:	mov	x27, x2
   4d544:	mov	x22, x1
   4d548:	add	x0, x19, x9, lsl #3
   4d54c:	sub	x2, x11, x8, lsl #3
   4d550:	lsl	x3, x8, #6
   4d554:	mov	x1, x21
   4d558:	sub	x25, x12, #0x2
   4d55c:	stp	x4, x13, [x29, #-40]
   4d560:	stur	x9, [x29, #-64]
   4d564:	stur	x0, [x29, #-48]
   4d568:	bl	4d42c <mpfr_rec_sqrt@@Base+0x350>
   4d56c:	sub	x8, x20, x25, asr #6
   4d570:	add	x2, x8, #0x1
   4d574:	add	x8, x2, x24
   4d578:	lsl	x1, x8, #3
   4d57c:	cmp	x1, #0x4, lsl #12
   4d580:	stp	x25, x8, [x29, #-80]
   4d584:	stur	xzr, [x29, #-8]
   4d588:	stur	x23, [x29, #-56]
   4d58c:	b.hi	4dac0 <mpfr_rec_sqrt@@Base+0x9e4>  // b.pmore
   4d590:	add	x9, x1, #0xf
   4d594:	mov	x8, sp
   4d598:	and	x9, x9, #0xfffffffffffffff0
   4d59c:	sub	x23, x8, x9
   4d5a0:	mov	sp, x23
   4d5a4:	ldur	x8, [x29, #-16]
   4d5a8:	cmp	x21, #0x20
   4d5ac:	add	x25, x8, #0x1
   4d5b0:	b.gt	4d5cc <mpfr_rec_sqrt@@Base+0x4f0>
   4d5b4:	ldr	x8, [x19]
   4d5b8:	mov	x21, x23
   4d5bc:	lsr	x8, x8, #32
   4d5c0:	mul	x8, x8, x8
   4d5c4:	str	x8, [x21, #8]!
   4d5c8:	b	4d61c <mpfr_rec_sqrt@@Base+0x540>
   4d5cc:	ldur	x8, [x29, #-32]
   4d5d0:	cbz	x8, 4d604 <mpfr_rec_sqrt@@Base+0x528>
   4d5d4:	ldur	x1, [x29, #-48]
   4d5d8:	mov	x0, x23
   4d5dc:	mov	x21, x2
   4d5e0:	mov	x3, x24
   4d5e4:	mov	x2, x1
   4d5e8:	bl	c4c0 <__gmpn_mul_n@plt>
   4d5ec:	mov	x2, x21
   4d5f0:	cmp	x25, x24, lsl #1
   4d5f4:	mov	x21, x23
   4d5f8:	b.ge	4d61c <mpfr_rec_sqrt@@Base+0x540>  // b.tcont
   4d5fc:	add	x21, x23, #0x8
   4d600:	b	4d61c <mpfr_rec_sqrt@@Base+0x540>
   4d604:	ldur	x8, [x29, #-48]
   4d608:	mov	x21, x23
   4d60c:	ldr	x8, [x8]
   4d610:	umulh	x9, x8, x8
   4d614:	mul	x8, x8, x8
   4d618:	stp	x8, x9, [x23]
   4d61c:	stur	x23, [x29, #-24]
   4d620:	add	x23, x25, x26
   4d624:	lsl	x1, x23, #3
   4d628:	cmp	x1, #0x4, lsl #12
   4d62c:	stur	x24, [x29, #-96]
   4d630:	b.hi	4dad8 <mpfr_rec_sqrt@@Base+0x9fc>  // b.pmore
   4d634:	add	x9, x1, #0xf
   4d638:	mov	x8, sp
   4d63c:	and	x9, x9, #0xfffffffffffffff0
   4d640:	sub	x24, x8, x9
   4d644:	mov	sp, x24
   4d648:	ldur	x8, [x29, #-16]
   4d64c:	cbz	x8, 4d674 <mpfr_rec_sqrt@@Base+0x598>
   4d650:	ldur	x3, [x29, #-88]
   4d654:	mov	x0, x24
   4d658:	mov	x1, x21
   4d65c:	mov	x21, x2
   4d660:	mov	x2, x25
   4d664:	mov	x4, x26
   4d668:	bl	c7f0 <__gmpn_mul@plt>
   4d66c:	mov	x2, x21
   4d670:	b	4d68c <mpfr_rec_sqrt@@Base+0x5b0>
   4d674:	ldur	x9, [x29, #-104]
   4d678:	ldr	x8, [x21]
   4d67c:	ldr	x9, [x27, x9, lsl #3]
   4d680:	umulh	x10, x8, x9
   4d684:	mul	x8, x9, x8
   4d688:	stp	x8, x10, [x24]
   4d68c:	add	x8, x24, x23, lsl #3
   4d690:	mvn	x9, x20
   4d694:	ldp	x27, x13, [x29, #-48]
   4d698:	add	x1, x8, x9, lsl #3
   4d69c:	ldr	x8, [x1, x20, lsl #3]
   4d6a0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   4d6a4:	lsr	x9, x9, x13
   4d6a8:	ands	x21, x8, x9
   4d6ac:	b.eq	4d70c <mpfr_rec_sqrt@@Base+0x630>  // b.none
   4d6b0:	eor	x8, x21, x8
   4d6b4:	str	x8, [x1, x20, lsl #3]
   4d6b8:	ldr	x8, [x1]
   4d6bc:	ldur	x23, [x29, #-24]
   4d6c0:	adds	x8, x8, #0x1
   4d6c4:	str	x8, [x1]
   4d6c8:	b.cc	4d760 <mpfr_rec_sqrt@@Base+0x684>  // b.lo, b.ul, b.last
   4d6cc:	ldur	x8, [x29, #-16]
   4d6d0:	mov	w9, #0x2                   	// #2
   4d6d4:	add	x8, x26, x8
   4d6d8:	lsl	x8, x8, #3
   4d6dc:	sub	x8, x8, x20, lsl #3
   4d6e0:	add	x8, x8, x24
   4d6e4:	sub	x8, x8, #0x8
   4d6e8:	sub	x10, x9, #0x1
   4d6ec:	cmp	x10, x20
   4d6f0:	b.gt	4d760 <mpfr_rec_sqrt@@Base+0x684>
   4d6f4:	ldr	x10, [x8, x9, lsl #3]
   4d6f8:	adds	x10, x10, #0x1
   4d6fc:	str	x10, [x8, x9, lsl #3]
   4d700:	add	x9, x9, #0x1
   4d704:	b.cs	4d6e8 <mpfr_rec_sqrt@@Base+0x60c>  // b.hs, b.nlast
   4d708:	b	4d760 <mpfr_rec_sqrt@@Base+0x684>
   4d70c:	orr	x8, x9, x8
   4d710:	orr	x8, x8, #0x8000000000000000
   4d714:	str	x8, [x1, x20, lsl #3]
   4d718:	ldur	x23, [x29, #-24]
   4d71c:	ldur	x8, [x29, #-112]
   4d720:	tbnz	x8, #63, 4d760 <mpfr_rec_sqrt@@Base+0x684>
   4d724:	ldur	x8, [x29, #-16]
   4d728:	mov	w9, #0x1                   	// #1
   4d72c:	add	x8, x26, x8
   4d730:	lsl	x8, x8, #3
   4d734:	sub	x8, x8, x20, lsl #3
   4d738:	add	x8, x8, x24
   4d73c:	sub	x8, x8, #0x8
   4d740:	ldr	x10, [x8, x9, lsl #3]
   4d744:	sub	x11, x9, #0x1
   4d748:	add	x12, x9, #0x1
   4d74c:	cmp	x11, x20
   4d750:	mvn	x10, x10
   4d754:	str	x10, [x8, x9, lsl #3]
   4d758:	mov	x9, x12
   4d75c:	b.lt	4d740 <mpfr_rec_sqrt@@Base+0x664>  // b.tstop
   4d760:	ldur	x8, [x29, #-80]
   4d764:	cmp	x2, #0x1
   4d768:	asr	x24, x8, #6
   4d76c:	b.ne	4d788 <mpfr_rec_sqrt@@Base+0x6ac>  // b.any
   4d770:	ldr	x8, [x1]
   4d774:	ldr	x9, [x27]
   4d778:	umulh	x10, x8, x9
   4d77c:	mul	x8, x9, x8
   4d780:	stp	x8, x10, [x23]
   4d784:	b	4d79c <mpfr_rec_sqrt@@Base+0x6c0>
   4d788:	ldur	x4, [x29, #-96]
   4d78c:	mov	x0, x23
   4d790:	mov	x3, x27
   4d794:	bl	c7f0 <__gmpn_mul@plt>
   4d798:	ldur	x13, [x29, #-40]
   4d79c:	ldur	x8, [x29, #-72]
   4d7a0:	ldur	x26, [x29, #-32]
   4d7a4:	sub	x25, x28, x24
   4d7a8:	cmp	w13, #0x1
   4d7ac:	sub	x8, x8, x25
   4d7b0:	add	x23, x23, x8, lsl #3
   4d7b4:	b.ne	4d7cc <mpfr_rec_sqrt@@Base+0x6f0>  // b.any
   4d7b8:	sub	x0, x23, #0x8
   4d7bc:	add	x2, x25, #0x1
   4d7c0:	mov	w3, #0x1                   	// #1
   4d7c4:	mov	x1, x0
   4d7c8:	bl	bd70 <__gmpn_lshift@plt>
   4d7cc:	lsl	x8, x28, #6
   4d7d0:	sub	x22, x8, x22
   4d7d4:	subs	x8, x22, #0x1
   4d7d8:	b.lt	4d850 <mpfr_rec_sqrt@@Base+0x774>  // b.tstop
   4d7dc:	ldr	x9, [x23]
   4d7e0:	mov	w10, #0x1                   	// #1
   4d7e4:	ldur	x28, [x29, #-64]
   4d7e8:	lsl	x8, x10, x8
   4d7ec:	and	x8, x9, x8
   4d7f0:	adds	x8, x8, x9
   4d7f4:	str	x8, [x23]
   4d7f8:	b.cc	4d83c <mpfr_rec_sqrt@@Base+0x760>  // b.lo, b.ul, b.last
   4d7fc:	ldur	x9, [x29, #-56]
   4d800:	add	x8, x26, x20
   4d804:	lsl	x8, x8, #3
   4d808:	sub	x8, x8, x9, lsl #3
   4d80c:	ldur	x9, [x29, #-24]
   4d810:	add	x8, x9, x8
   4d814:	mov	w9, #0x2                   	// #2
   4d818:	sub	x10, x9, #0x1
   4d81c:	cmp	x10, x25
   4d820:	b.ge	4d8a4 <mpfr_rec_sqrt@@Base+0x7c8>  // b.tcont
   4d824:	ldr	x10, [x8, x9, lsl #3]
   4d828:	adds	x10, x10, #0x1
   4d82c:	str	x10, [x8, x9, lsl #3]
   4d830:	add	x9, x9, #0x1
   4d834:	b.cs	4d818 <mpfr_rec_sqrt@@Base+0x73c>  // b.hs, b.nlast
   4d838:	ldr	x8, [x23]
   4d83c:	mov	x9, #0xffffffffffffffff    	// #-1
   4d840:	lsl	x9, x9, x22
   4d844:	and	x8, x8, x9
   4d848:	str	x8, [x23]
   4d84c:	b	4d8d0 <mpfr_rec_sqrt@@Base+0x7f4>
   4d850:	ldp	x8, x9, [x23, #-8]
   4d854:	ldur	x28, [x29, #-64]
   4d858:	adds	x8, x9, x8, lsr #63
   4d85c:	str	x8, [x23]
   4d860:	b.cc	4d8d0 <mpfr_rec_sqrt@@Base+0x7f4>  // b.lo, b.ul, b.last
   4d864:	ldur	x9, [x29, #-56]
   4d868:	add	x8, x26, x20
   4d86c:	lsl	x8, x8, #3
   4d870:	sub	x8, x8, x9, lsl #3
   4d874:	ldur	x9, [x29, #-24]
   4d878:	add	x8, x9, x8
   4d87c:	mov	w9, #0x2                   	// #2
   4d880:	sub	x10, x9, #0x1
   4d884:	cmp	x10, x25
   4d888:	b.ge	4d8b8 <mpfr_rec_sqrt@@Base+0x7dc>  // b.tcont
   4d88c:	ldr	x10, [x8, x9, lsl #3]
   4d890:	adds	x10, x10, #0x1
   4d894:	str	x10, [x8, x9, lsl #3]
   4d898:	add	x9, x9, #0x1
   4d89c:	b.cs	4d880 <mpfr_rec_sqrt@@Base+0x7a4>  // b.hs, b.nlast
   4d8a0:	b	4d8d0 <mpfr_rec_sqrt@@Base+0x7f4>
   4d8a4:	ldr	x8, [x23]
   4d8a8:	mov	x9, #0xffffffffffffffff    	// #-1
   4d8ac:	lsl	x9, x9, x22
   4d8b0:	and	x8, x8, x9
   4d8b4:	str	x8, [x23]
   4d8b8:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4d8bc:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   4d8c0:	add	x0, x0, #0x2fa
   4d8c4:	add	x2, x2, #0x305
   4d8c8:	mov	w1, #0x17e                 	// #382
   4d8cc:	bl	cb90 <mpfr_assert_fail@plt>
   4d8d0:	cbz	x21, 4d92c <mpfr_rec_sqrt@@Base+0x850>
   4d8d4:	subs	x21, x25, x28
   4d8d8:	b.eq	4d99c <mpfr_rec_sqrt@@Base+0x8c0>  // b.none
   4d8dc:	add	x2, x23, x28, lsl #3
   4d8e0:	mov	x0, x27
   4d8e4:	mov	x1, x27
   4d8e8:	mov	x3, x21
   4d8ec:	bl	bf10 <__gmpn_sub_n@plt>
   4d8f0:	ldur	x25, [x29, #-56]
   4d8f4:	cbz	x0, 4d9a0 <mpfr_rec_sqrt@@Base+0x8c4>
   4d8f8:	ldur	x12, [x29, #-24]
   4d8fc:	sub	x8, x25, x24
   4d900:	add	x8, x19, x8, lsl #3
   4d904:	add	x9, x8, #0x8
   4d908:	mov	w8, #0x1                   	// #1
   4d90c:	cmp	x21, x26
   4d910:	b.gt	4d9a8 <mpfr_rec_sqrt@@Base+0x8cc>
   4d914:	ldr	x10, [x9]
   4d918:	add	x21, x21, #0x1
   4d91c:	sub	x11, x10, #0x1
   4d920:	str	x11, [x9], #8
   4d924:	cbz	x10, 4d90c <mpfr_rec_sqrt@@Base+0x830>
   4d928:	b	4d9a4 <mpfr_rec_sqrt@@Base+0x8c8>
   4d92c:	cmp	x28, #0x1
   4d930:	b.lt	4d94c <mpfr_rec_sqrt@@Base+0x870>  // b.tstop
   4d934:	cmp	x23, x19
   4d938:	b.eq	4d94c <mpfr_rec_sqrt@@Base+0x870>  // b.none
   4d93c:	lsl	x2, x28, #3
   4d940:	mov	x0, x19
   4d944:	mov	x1, x23
   4d948:	bl	bad0 <memcpy@plt>
   4d94c:	subs	x21, x25, x28
   4d950:	ldur	x25, [x29, #-56]
   4d954:	b.eq	4da5c <mpfr_rec_sqrt@@Base+0x980>  // b.none
   4d958:	add	x2, x23, x28, lsl #3
   4d95c:	mov	x0, x27
   4d960:	mov	x1, x27
   4d964:	mov	x3, x21
   4d968:	bl	c5f0 <__gmpn_add_n@plt>
   4d96c:	cbz	x0, 4da5c <mpfr_rec_sqrt@@Base+0x980>
   4d970:	sub	x8, x25, x24
   4d974:	add	x8, x19, x8, lsl #3
   4d978:	add	x8, x8, #0x8
   4d97c:	cmp	x21, x26
   4d980:	b.gt	4da84 <mpfr_rec_sqrt@@Base+0x9a8>
   4d984:	ldr	x9, [x8]
   4d988:	add	x21, x21, #0x1
   4d98c:	adds	x9, x9, #0x1
   4d990:	str	x9, [x8], #8
   4d994:	b.cs	4d97c <mpfr_rec_sqrt@@Base+0x8a0>  // b.hs, b.nlast
   4d998:	b	4da5c <mpfr_rec_sqrt@@Base+0x980>
   4d99c:	ldur	x25, [x29, #-56]
   4d9a0:	ldur	x12, [x29, #-24]
   4d9a4:	mov	x8, xzr
   4d9a8:	cmp	x28, #0x1
   4d9ac:	b.lt	4da58 <mpfr_rec_sqrt@@Base+0x97c>  // b.tstop
   4d9b0:	add	x10, x26, x20
   4d9b4:	lsl	x10, x10, #3
   4d9b8:	sub	x10, x10, x25, lsl #3
   4d9bc:	add	x10, x10, x12
   4d9c0:	mov	x8, xzr
   4d9c4:	sub	x9, x25, x26
   4d9c8:	add	x10, x10, #0x8
   4d9cc:	ldr	x11, [x10, x8, lsl #3]
   4d9d0:	mvn	x11, x11
   4d9d4:	str	x11, [x19, x8, lsl #3]
   4d9d8:	add	x8, x8, #0x1
   4d9dc:	cmp	x9, x8
   4d9e0:	b.ne	4d9cc <mpfr_rec_sqrt@@Base+0x8f0>  // b.any
   4d9e4:	ldr	x8, [x19]
   4d9e8:	adds	x8, x8, #0x1
   4d9ec:	str	x8, [x19]
   4d9f0:	b.cc	4da18 <mpfr_rec_sqrt@@Base+0x93c>  // b.lo, b.ul, b.last
   4d9f4:	mov	w8, #0x1                   	// #1
   4d9f8:	mov	w9, #0x1                   	// #1
   4d9fc:	cmp	x9, x25
   4da00:	b.gt	4da1c <mpfr_rec_sqrt@@Base+0x940>
   4da04:	ldr	x10, [x19, x9, lsl #3]
   4da08:	adds	x10, x10, #0x1
   4da0c:	str	x10, [x19, x9, lsl #3]
   4da10:	add	x9, x9, #0x1
   4da14:	b.cs	4d9fc <mpfr_rec_sqrt@@Base+0x920>  // b.hs, b.nlast
   4da18:	mov	x8, xzr
   4da1c:	ldr	x9, [x27]
   4da20:	sub	x10, x9, #0x1
   4da24:	str	x10, [x27]
   4da28:	cbnz	x9, 4da50 <mpfr_rec_sqrt@@Base+0x974>
   4da2c:	mov	w9, #0x1                   	// #1
   4da30:	mov	w10, #0x1                   	// #1
   4da34:	cmp	x10, x26
   4da38:	b.gt	4da54 <mpfr_rec_sqrt@@Base+0x978>
   4da3c:	ldr	x11, [x27, x10, lsl #3]
   4da40:	sub	x12, x11, #0x1
   4da44:	str	x12, [x27, x10, lsl #3]
   4da48:	add	x10, x10, #0x1
   4da4c:	cbz	x11, 4da34 <mpfr_rec_sqrt@@Base+0x958>
   4da50:	mov	x9, xzr
   4da54:	sub	x8, x8, x9
   4da58:	cbnz	x8, 4da84 <mpfr_rec_sqrt@@Base+0x9a8>
   4da5c:	ldur	x0, [x29, #-8]
   4da60:	cbnz	x0, 4daf0 <mpfr_rec_sqrt@@Base+0xa14>
   4da64:	mov	sp, x29
   4da68:	ldp	x20, x19, [sp, #80]
   4da6c:	ldp	x22, x21, [sp, #64]
   4da70:	ldp	x24, x23, [sp, #48]
   4da74:	ldp	x26, x25, [sp, #32]
   4da78:	ldp	x28, x27, [sp, #16]
   4da7c:	ldp	x29, x30, [sp], #96
   4da80:	ret
   4da84:	ldr	x8, [x19]
   4da88:	mov	w9, #0x1                   	// #1
   4da8c:	lsl	x9, x9, x22
   4da90:	subs	x8, x8, x9
   4da94:	str	x8, [x19]
   4da98:	b.cs	4da5c <mpfr_rec_sqrt@@Base+0x980>  // b.hs, b.nlast
   4da9c:	mov	w8, #0x1                   	// #1
   4daa0:	cmp	x8, x25
   4daa4:	b.gt	4da5c <mpfr_rec_sqrt@@Base+0x980>
   4daa8:	ldr	x9, [x19, x8, lsl #3]
   4daac:	sub	x10, x9, #0x1
   4dab0:	str	x10, [x19, x8, lsl #3]
   4dab4:	add	x8, x8, #0x1
   4dab8:	cbz	x9, 4daa0 <mpfr_rec_sqrt@@Base+0x9c4>
   4dabc:	b	4da5c <mpfr_rec_sqrt@@Base+0x980>
   4dac0:	sub	x0, x29, #0x8
   4dac4:	mov	x23, x2
   4dac8:	bl	be70 <mpfr_tmp_allocate@plt>
   4dacc:	mov	x2, x23
   4dad0:	mov	x23, x0
   4dad4:	b	4d5a4 <mpfr_rec_sqrt@@Base+0x4c8>
   4dad8:	sub	x0, x29, #0x8
   4dadc:	mov	x24, x2
   4dae0:	bl	be70 <mpfr_tmp_allocate@plt>
   4dae4:	mov	x2, x24
   4dae8:	mov	x24, x0
   4daec:	b	4d648 <mpfr_rec_sqrt@@Base+0x56c>
   4daf0:	bl	c460 <mpfr_tmp_free@plt>
   4daf4:	b	4da64 <mpfr_rec_sqrt@@Base+0x988>

000000000004daf8 <mpfr_min_prec@@Base>:
   4daf8:	stp	x29, x30, [sp, #-32]!
   4dafc:	ldr	x8, [x0, #16]
   4db00:	mov	x9, #0x4                   	// #4
   4db04:	movk	x9, #0x8000, lsl #48
   4db08:	str	x19, [sp, #16]
   4db0c:	cmp	x8, x9
   4db10:	mov	x29, sp
   4db14:	b.lt	4db50 <mpfr_min_prec@@Base+0x58>  // b.tstop
   4db18:	ldr	x8, [x0]
   4db1c:	ldr	x0, [x0, #24]
   4db20:	mov	x1, xzr
   4db24:	sub	x9, x8, #0x1
   4db28:	add	x8, x8, #0x3e
   4db2c:	cmp	x9, #0x0
   4db30:	csel	x8, x8, x9, lt  // lt = tstop
   4db34:	and	x19, x8, #0xffffffffffffffc0
   4db38:	bl	caf0 <__gmpn_scan1@plt>
   4db3c:	sub	x8, x19, x0
   4db40:	add	x0, x8, #0x40
   4db44:	ldr	x19, [sp, #16]
   4db48:	ldp	x29, x30, [sp], #32
   4db4c:	ret
   4db50:	mov	x0, xzr
   4db54:	b	4db44 <mpfr_min_prec@@Base+0x4c>

000000000004db58 <mpfr_buildopt_tls_p@@Base>:
   4db58:	mov	w0, #0x1                   	// #1
   4db5c:	ret

000000000004db60 <mpfr_buildopt_float128_p@@Base>:
   4db60:	mov	w0, wzr
   4db64:	ret

000000000004db68 <mpfr_buildopt_decimal_p@@Base>:
   4db68:	mov	w0, wzr
   4db6c:	ret

000000000004db70 <mpfr_buildopt_gmpinternals_p@@Base>:
   4db70:	mov	w0, wzr
   4db74:	ret

000000000004db78 <mpfr_buildopt_sharedcache_p@@Base>:
   4db78:	mov	w0, wzr
   4db7c:	ret

000000000004db80 <mpfr_buildopt_tune_case@@Base>:
   4db80:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4db84:	add	x0, x0, #0x30d
   4db88:	ret

000000000004db8c <mpfr_digamma@@Base>:
   4db8c:	sub	sp, sp, #0x170
   4db90:	stp	x29, x30, [sp, #272]
   4db94:	stp	x28, x27, [sp, #288]
   4db98:	stp	x26, x25, [sp, #304]
   4db9c:	stp	x24, x23, [sp, #320]
   4dba0:	stp	x22, x21, [sp, #336]
   4dba4:	stp	x20, x19, [sp, #352]
   4dba8:	ldr	x9, [x1, #16]
   4dbac:	mov	x19, #0x2                   	// #2
   4dbb0:	movk	x19, #0x8000, lsl #48
   4dbb4:	add	x8, x19, #0x2
   4dbb8:	mov	x28, x1
   4dbbc:	cmp	x9, x8
   4dbc0:	mov	x20, x0
   4dbc4:	add	x29, sp, #0x110
   4dbc8:	b.lt	4e32c <mpfr_digamma@@Base+0x7a0>  // b.tstop
   4dbcc:	ldr	w8, [x28, #8]
   4dbd0:	mov	w25, w2
   4dbd4:	mrs	x24, tpidr_el0
   4dbd8:	tbnz	w8, #31, 4dd00 <mpfr_digamma@@Base+0x174>
   4dbdc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4dbe0:	ldr	x1, [x0, #2656]
   4dbe4:	add	x0, x0, #0xa60
   4dbe8:	blr	x1
   4dbec:	ldr	w26, [x24, x0]
   4dbf0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4dbf4:	ldr	x1, [x0, #2592]
   4dbf8:	add	x0, x0, #0xa20
   4dbfc:	blr	x1
   4dc00:	ldr	x22, [x24, x0]
   4dc04:	mov	x8, x0
   4dc08:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4dc0c:	ldr	x1, [x0, #2624]
   4dc10:	add	x0, x0, #0xa40
   4dc14:	blr	x1
   4dc18:	ldr	x23, [x24, x0]
   4dc1c:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   4dc20:	str	x10, [x24, x8]
   4dc24:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4dc28:	cmn	x9, #0x3
   4dc2c:	str	x8, [x24, x0]
   4dc30:	b.gt	4dc50 <mpfr_digamma@@Base+0xc4>
   4dc34:	ldr	x8, [x28]
   4dc38:	ldr	x10, [x20]
   4dc3c:	cmp	x8, x10
   4dc40:	csel	x8, x8, x10, gt
   4dc44:	neg	x8, x8, lsl #1
   4dc48:	cmp	x9, x8
   4dc4c:	b.le	4dd48 <mpfr_digamma@@Base+0x1bc>
   4dc50:	ldr	w8, [x28, #8]
   4dc54:	tbnz	w8, #31, 4dd30 <mpfr_digamma@@Base+0x1a4>
   4dc58:	tbnz	x9, #63, 4dd30 <mpfr_digamma@@Base+0x1a4>
   4dc5c:	stp	x23, x22, [sp, #24]
   4dc60:	ldr	x8, [x20]
   4dc64:	ldr	x10, [x28]
   4dc68:	add	x22, x8, #0xa
   4dc6c:	cmp	x10, x9
   4dc70:	csinc	x23, x9, x10, lt  // lt = tstop
   4dc74:	cmp	x22, x9
   4dc78:	b.ge	4dd7c <mpfr_digamma@@Base+0x1f0>  // b.tcont
   4dc7c:	add	x0, sp, #0x88
   4dc80:	mov	x1, x22
   4dc84:	bl	cad0 <mpfr_init2@plt>
   4dc88:	add	x0, sp, #0x88
   4dc8c:	mov	w2, #0x1                   	// #1
   4dc90:	mov	x1, x28
   4dc94:	bl	c130 <mpfr_log@plt>
   4dc98:	ldr	x8, [sp, #152]
   4dc9c:	add	x9, x19, #0x2
   4dca0:	cmp	x8, x9
   4dca4:	b.lt	4dd74 <mpfr_digamma@@Base+0x1e8>  // b.tstop
   4dca8:	ldr	x8, [sp, #136]
   4dcac:	ldr	x9, [x20]
   4dcb0:	ldr	x0, [sp, #160]
   4dcb4:	sub	x10, x8, #0x1
   4dcb8:	add	x8, x8, #0x3e
   4dcbc:	cmp	x10, #0x0
   4dcc0:	csel	x8, x8, x10, lt  // lt = tstop
   4dcc4:	cmp	w25, #0x0
   4dcc8:	asr	x8, x8, #6
   4dccc:	add	x2, x9, #0xa
   4dcd0:	add	x1, x8, #0x1
   4dcd4:	cinc	x3, x9, eq  // eq = none
   4dcd8:	bl	c3d0 <mpfr_round_p@plt>
   4dcdc:	cbz	w0, 4dd74 <mpfr_digamma@@Base+0x1e8>
   4dce0:	ldr	w3, [sp, #144]
   4dce4:	add	x1, sp, #0x88
   4dce8:	mov	x0, x20
   4dcec:	mov	w2, w25
   4dcf0:	add	x22, sp, #0x88
   4dcf4:	bl	c6f0 <mpfr_set4@plt>
   4dcf8:	mov	w21, w0
   4dcfc:	b	4e238 <mpfr_digamma@@Base+0x6ac>
   4dd00:	mov	x0, x28
   4dd04:	bl	c200 <mpfr_integer_p@plt>
   4dd08:	cbz	w0, 4dd6c <mpfr_digamma@@Base+0x1e0>
   4dd0c:	str	x19, [x20, #16]
   4dd10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4dd14:	ldr	x1, [x0, #2656]
   4dd18:	add	x0, x0, #0xa60
   4dd1c:	blr	x1
   4dd20:	ldr	w8, [x24, x0]
   4dd24:	mov	w21, wzr
   4dd28:	orr	w8, w8, #0x4
   4dd2c:	b	4e304 <mpfr_digamma@@Base+0x778>
   4dd30:	mov	x0, x20
   4dd34:	mov	x1, x28
   4dd38:	mov	w2, w25
   4dd3c:	bl	4e3e4 <mpfr_digamma@@Base+0x858>
   4dd40:	mov	w21, w0
   4dd44:	b	4e29c <mpfr_digamma@@Base+0x710>
   4dd48:	ldr	w19, [x28, #8]
   4dd4c:	mov	x1, #0xffffffffffffffff    	// #-1
   4dd50:	mov	x0, x20
   4dd54:	mov	x2, x28
   4dd58:	mov	w3, w25
   4dd5c:	bl	c900 <mpfr_si_div@plt>
   4dd60:	cbz	w0, 4e248 <mpfr_digamma@@Base+0x6bc>
   4dd64:	mov	w21, w0
   4dd68:	b	4e284 <mpfr_digamma@@Base+0x6f8>
   4dd6c:	ldr	x9, [x28, #16]
   4dd70:	b	4dbdc <mpfr_digamma@@Base+0x50>
   4dd74:	add	x0, sp, #0x88
   4dd78:	bl	c110 <mpfr_clear@plt>
   4dd7c:	add	x0, sp, #0x48
   4dd80:	mov	x1, x23
   4dd84:	str	w26, [sp, #8]
   4dd88:	str	x24, [sp, #16]
   4dd8c:	str	x20, [sp, #48]
   4dd90:	bl	cad0 <mpfr_init2@plt>
   4dd94:	add	x0, sp, #0x88
   4dd98:	mov	x1, x22
   4dd9c:	bl	cad0 <mpfr_init2@plt>
   4dda0:	add	x0, sp, #0x68
   4dda4:	mov	x1, x22
   4dda8:	bl	cad0 <mpfr_init2@plt>
   4ddac:	cmp	w25, #0x0
   4ddb0:	mov	w19, #0x40                  	// #64
   4ddb4:	mov	w26, #0xa                   	// #10
   4ddb8:	orr	x24, xzr, #0x4
   4ddbc:	cset	w8, eq  // eq = none
   4ddc0:	str	w25, [sp, #12]
   4ddc4:	str	x8, [sp, #40]
   4ddc8:	str	x28, [sp, #56]
   4ddcc:	add	x8, x22, #0x3
   4ddd0:	add	x9, x22, #0x6
   4ddd4:	cmp	x8, #0x0
   4ddd8:	ldr	w3, [x28, #8]
   4dddc:	csel	x8, x9, x8, lt  // lt = tstop
   4dde0:	asr	x8, x8, #2
   4dde4:	cmp	x8, #0x2
   4dde8:	mov	w9, #0x2                   	// #2
   4ddec:	add	x0, sp, #0x48
   4ddf0:	mov	x1, x28
   4ddf4:	mov	w2, wzr
   4ddf8:	csel	x27, x8, x9, hi  // hi = pmore
   4ddfc:	bl	c6f0 <mpfr_set4@plt>
   4de00:	mov	w8, #0x1                   	// #1
   4de04:	str	w8, [sp, #112]
   4de08:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4de0c:	add	x0, sp, #0x48
   4de10:	mov	x1, x27
   4de14:	mov	x2, xzr
   4de18:	str	x8, [sp, #120]
   4de1c:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4de20:	tbz	w0, #31, 4dec0 <mpfr_digamma@@Base+0x334>
   4de24:	mov	x21, xzr
   4de28:	add	x0, sp, #0x88
   4de2c:	add	x2, sp, #0x48
   4de30:	mov	w1, #0x1                   	// #1
   4de34:	mov	w3, wzr
   4de38:	add	x21, x21, #0x1
   4de3c:	bl	c350 <mpfr_ui_div@plt>
   4de40:	add	x0, sp, #0x68
   4de44:	add	x1, sp, #0x68
   4de48:	add	x2, sp, #0x88
   4de4c:	mov	w3, wzr
   4de50:	bl	c240 <mpfr_add@plt>
   4de54:	add	x0, sp, #0x48
   4de58:	add	x1, sp, #0x48
   4de5c:	mov	w2, #0x1                   	// #1
   4de60:	mov	w3, #0x1                   	// #1
   4de64:	bl	c2d0 <mpfr_add_ui@plt>
   4de68:	cbz	w0, 4de88 <mpfr_digamma@@Base+0x2fc>
   4de6c:	add	x23, x23, #0x1
   4de70:	add	x0, sp, #0x48
   4de74:	mov	w2, #0x1                   	// #1
   4de78:	mov	x1, x23
   4de7c:	bl	c9d0 <mpfr_prec_round@plt>
   4de80:	add	x0, sp, #0x48
   4de84:	bl	c1c0 <mpfr_nextabove@plt>
   4de88:	add	x0, sp, #0x48
   4de8c:	mov	x1, x27
   4de90:	mov	x2, xzr
   4de94:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4de98:	tbnz	w0, #31, 4de28 <mpfr_digamma@@Base+0x29c>
   4de9c:	cmp	x21, #0x2
   4dea0:	b.cc	4dec0 <mpfr_digamma@@Base+0x334>  // b.lo, b.ul, b.last
   4dea4:	mov	x20, xzr
   4dea8:	add	x8, x21, #0x1
   4deac:	add	x20, x20, #0x1
   4deb0:	cmp	x8, #0x3
   4deb4:	lsr	x21, x8, #1
   4deb8:	b.hi	4dea8 <mpfr_digamma@@Base+0x31c>  // b.pmore
   4debc:	b	4dec4 <mpfr_digamma@@Base+0x338>
   4dec0:	mov	x20, xzr
   4dec4:	ldr	w8, [sp, #80]
   4dec8:	ldr	x27, [sp, #136]
   4decc:	cmp	w8, #0x1
   4ded0:	b.lt	4e1c4 <mpfr_digamma@@Base+0x638>  // b.tstop
   4ded4:	ldr	x8, [sp, #88]
   4ded8:	cmp	x8, #0x1
   4dedc:	b.le	4e1c4 <mpfr_digamma@@Base+0x638>
   4dee0:	sub	x0, x29, #0x28
   4dee4:	mov	x1, x27
   4dee8:	str	x19, [sp, #64]
   4deec:	bl	cad0 <mpfr_init2@plt>
   4def0:	sub	x0, x29, #0x48
   4def4:	mov	x1, x27
   4def8:	bl	cad0 <mpfr_init2@plt>
   4defc:	sub	x0, x29, #0x68
   4df00:	mov	x1, x27
   4df04:	bl	cad0 <mpfr_init2@plt>
   4df08:	add	x0, sp, #0x88
   4df0c:	add	x1, sp, #0x48
   4df10:	mov	w2, wzr
   4df14:	bl	c130 <mpfr_log@plt>
   4df18:	sub	x0, x29, #0x28
   4df1c:	add	x2, sp, #0x48
   4df20:	mov	w1, #0x1                   	// #1
   4df24:	mov	w3, wzr
   4df28:	bl	c350 <mpfr_ui_div@plt>
   4df2c:	sub	x0, x29, #0x28
   4df30:	sub	x1, x29, #0x28
   4df34:	mov	w2, #0x1                   	// #1
   4df38:	mov	w3, wzr
   4df3c:	bl	c950 <mpfr_div_2ui@plt>
   4df40:	add	x0, sp, #0x88
   4df44:	add	x1, sp, #0x88
   4df48:	sub	x2, x29, #0x28
   4df4c:	mov	w3, wzr
   4df50:	bl	bc20 <mpfr_sub@plt>
   4df54:	sub	x0, x29, #0x68
   4df58:	add	x1, sp, #0x48
   4df5c:	add	x2, sp, #0x48
   4df60:	mov	w3, #0x1                   	// #1
   4df64:	bl	be00 <mpfr_mul@plt>
   4df68:	sub	x0, x29, #0x68
   4df6c:	sub	x2, x29, #0x68
   4df70:	mov	w1, #0x1                   	// #1
   4df74:	mov	w3, #0x2                   	// #2
   4df78:	bl	c350 <mpfr_ui_div@plt>
   4df7c:	sub	x0, x29, #0x28
   4df80:	mov	w1, #0x1                   	// #1
   4df84:	mov	x2, xzr
   4df88:	mov	w3, wzr
   4df8c:	bl	c640 <mpfr_set_ui_2exp@plt>
   4df90:	mov	w21, #0x2                   	// #2
   4df94:	mov	w28, #0x1                   	// #1
   4df98:	sub	x0, x29, #0x28
   4df9c:	sub	x1, x29, #0x28
   4dfa0:	sub	x2, x29, #0x68
   4dfa4:	mov	w3, #0x2                   	// #2
   4dfa8:	bl	be00 <mpfr_mul@plt>
   4dfac:	lsl	x25, x28, #1
   4dfb0:	sub	x0, x29, #0x28
   4dfb4:	sub	x1, x29, #0x28
   4dfb8:	mov	w3, #0x2                   	// #2
   4dfbc:	mov	x2, x25
   4dfc0:	bl	ccc0 <mpfr_div_ui@plt>
   4dfc4:	mov	w2, #0x1                   	// #1
   4dfc8:	bfi	x2, x28, #1, #63
   4dfcc:	sub	x0, x29, #0x28
   4dfd0:	sub	x1, x29, #0x28
   4dfd4:	mov	w3, #0x2                   	// #2
   4dfd8:	bl	ccc0 <mpfr_div_ui@plt>
   4dfdc:	sub	x0, x29, #0x48
   4dfe0:	sub	x1, x29, #0x28
   4dfe4:	mov	w3, #0x2                   	// #2
   4dfe8:	mov	x2, x25
   4dfec:	bl	ccc0 <mpfr_div_ui@plt>
   4dff0:	mov	x0, x28
   4dff4:	bl	c880 <mpfr_bernoulli_cache@plt>
   4dff8:	mov	x2, x0
   4dffc:	sub	x0, x29, #0x48
   4e000:	sub	x1, x29, #0x48
   4e004:	mov	w3, #0x2                   	// #2
   4e008:	bl	c520 <mpfr_mul_z@plt>
   4e00c:	ldr	x25, [sp, #152]
   4e010:	ldur	x19, [x29, #-56]
   4e014:	sub	x8, x25, x27
   4e018:	cmp	x19, x8
   4e01c:	b.lt	4e080 <mpfr_digamma@@Base+0x4f4>  // b.tstop
   4e020:	add	x0, sp, #0x88
   4e024:	add	x1, sp, #0x88
   4e028:	sub	x2, x29, #0x48
   4e02c:	mov	w3, wzr
   4e030:	bl	bc20 <mpfr_sub@plt>
   4e034:	ldr	x8, [sp, #152]
   4e038:	madd	x9, x28, x26, x24
   4e03c:	subs	x8, x25, x8
   4e040:	csel	x8, x8, xzr, gt
   4e044:	cmp	x19, x25
   4e048:	lsl	x8, x21, x8
   4e04c:	b.ge	4e070 <mpfr_digamma@@Base+0x4e4>  // b.tcont
   4e050:	sub	x10, x25, x19
   4e054:	add	x11, x9, #0x1
   4e058:	add	x12, x9, #0x2
   4e05c:	cmp	x11, #0x0
   4e060:	csinc	x9, x12, x9, lt  // lt = tstop
   4e064:	subs	x10, x10, #0x1
   4e068:	asr	x9, x9, #1
   4e06c:	b.ne	4e054 <mpfr_digamma@@Base+0x4c8>  // b.any
   4e070:	add	x8, x8, x9
   4e074:	add	x21, x8, #0x1
   4e078:	add	x28, x28, #0x1
   4e07c:	b	4df98 <mpfr_digamma@@Base+0x40c>
   4e080:	sub	x0, x29, #0x28
   4e084:	bl	c110 <mpfr_clear@plt>
   4e088:	sub	x0, x29, #0x48
   4e08c:	bl	c110 <mpfr_clear@plt>
   4e090:	sub	x0, x29, #0x68
   4e094:	bl	c110 <mpfr_clear@plt>
   4e098:	cmp	x21, #0x2
   4e09c:	b.lt	4e0cc <mpfr_digamma@@Base+0x540>  // b.tstop
   4e0a0:	ldr	x28, [sp, #56]
   4e0a4:	mov	x25, xzr
   4e0a8:	add	x8, x21, #0x1
   4e0ac:	add	x9, x21, #0x2
   4e0b0:	cmp	x8, #0x0
   4e0b4:	csinc	x8, x9, x21, lt  // lt = tstop
   4e0b8:	cmp	x21, #0x2
   4e0bc:	asr	x21, x8, #1
   4e0c0:	add	x25, x25, #0x1
   4e0c4:	b.gt	4e0a8 <mpfr_digamma@@Base+0x51c>
   4e0c8:	b	4e0d4 <mpfr_digamma@@Base+0x548>
   4e0cc:	ldr	x28, [sp, #56]
   4e0d0:	mov	x25, xzr
   4e0d4:	ldr	x19, [sp, #152]
   4e0d8:	add	x0, sp, #0x88
   4e0dc:	add	x1, sp, #0x88
   4e0e0:	add	x2, sp, #0x68
   4e0e4:	mov	w3, wzr
   4e0e8:	bl	bc20 <mpfr_sub@plt>
   4e0ec:	ldr	x8, [sp, #152]
   4e0f0:	ldr	x9, [sp, #120]
   4e0f4:	subs	x10, x19, x8
   4e0f8:	csel	x10, x10, xzr, gt
   4e0fc:	subs	x11, x9, x8
   4e100:	add	x9, x10, x25
   4e104:	csel	x10, x11, xzr, gt
   4e108:	add	x10, x10, x20
   4e10c:	cmp	x9, x10
   4e110:	b.le	4e124 <mpfr_digamma@@Base+0x598>
   4e114:	mov	x19, #0x2                   	// #2
   4e118:	add	x9, x9, #0x1
   4e11c:	movk	x19, #0x8000, lsl #48
   4e120:	b	4e13c <mpfr_digamma@@Base+0x5b0>
   4e124:	mov	x19, #0x2                   	// #2
   4e128:	movk	x19, #0x8000, lsl #48
   4e12c:	b.ne	4e138 <mpfr_digamma@@Base+0x5ac>  // b.any
   4e130:	add	x9, x9, #0x2
   4e134:	b	4e13c <mpfr_digamma@@Base+0x5b0>
   4e138:	add	x9, x10, #0x1
   4e13c:	add	x10, x19, #0x2
   4e140:	cmp	x8, x10
   4e144:	b.lt	4e184 <mpfr_digamma@@Base+0x5f8>  // b.tstop
   4e148:	ldr	x8, [sp, #136]
   4e14c:	sub	x2, x22, x9
   4e150:	ldr	x9, [sp, #48]
   4e154:	ldr	x0, [sp, #160]
   4e158:	sub	x10, x8, #0x1
   4e15c:	add	x8, x8, #0x3e
   4e160:	cmp	x10, #0x0
   4e164:	csel	x8, x8, x10, lt  // lt = tstop
   4e168:	asr	x8, x8, #6
   4e16c:	ldr	x9, [x9]
   4e170:	add	x1, x8, #0x1
   4e174:	ldr	x8, [sp, #40]
   4e178:	add	x3, x9, x8
   4e17c:	bl	c3d0 <mpfr_round_p@plt>
   4e180:	cbnz	w0, 4e1fc <mpfr_digamma@@Base+0x670>
   4e184:	sub	x8, x19, x22
   4e188:	ldr	x19, [sp, #64]
   4e18c:	sub	x8, x8, #0x103
   4e190:	cmp	x19, x8
   4e194:	b.gt	4e1e0 <mpfr_digamma@@Base+0x654>
   4e198:	add	x22, x22, x19
   4e19c:	cmp	x22, #0x0
   4e1a0:	cinc	x8, x22, lt  // lt = tstop
   4e1a4:	add	x0, sp, #0x88
   4e1a8:	mov	x1, x22
   4e1ac:	asr	x19, x8, #1
   4e1b0:	bl	bf80 <mpfr_set_prec@plt>
   4e1b4:	add	x0, sp, #0x68
   4e1b8:	mov	x1, x22
   4e1bc:	bl	bf80 <mpfr_set_prec@plt>
   4e1c0:	b	4ddcc <mpfr_digamma@@Base+0x240>
   4e1c4:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4e1c8:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   4e1cc:	mov	w1, #0x27                  	// #39
   4e1d0:	add	x0, x0, #0x315
   4e1d4:	add	x2, x2, #0x329
   4e1d8:	bl	cb90 <mpfr_assert_fail@plt>
   4e1dc:	b	4dee0 <mpfr_digamma@@Base+0x354>
   4e1e0:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4e1e4:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   4e1e8:	mov	w1, #0x11a                 	// #282
   4e1ec:	add	x0, x0, #0x315
   4e1f0:	add	x2, x2, #0xff6
   4e1f4:	bl	cb90 <mpfr_assert_fail@plt>
   4e1f8:	b	4e198 <mpfr_digamma@@Base+0x60c>
   4e1fc:	ldr	x20, [sp, #48]
   4e200:	ldr	w25, [sp, #12]
   4e204:	ldr	w3, [sp, #144]
   4e208:	add	x1, sp, #0x88
   4e20c:	mov	x0, x20
   4e210:	mov	w2, w25
   4e214:	add	x22, sp, #0x48
   4e218:	bl	c6f0 <mpfr_set4@plt>
   4e21c:	mov	w21, w0
   4e220:	add	x0, sp, #0x88
   4e224:	bl	c110 <mpfr_clear@plt>
   4e228:	add	x0, sp, #0x68
   4e22c:	bl	c110 <mpfr_clear@plt>
   4e230:	ldr	x24, [sp, #16]
   4e234:	ldr	w26, [sp, #8]
   4e238:	mov	x0, x22
   4e23c:	bl	c110 <mpfr_clear@plt>
   4e240:	ldp	x23, x22, [sp, #24]
   4e244:	b	4e29c <mpfr_digamma@@Base+0x710>
   4e248:	cmp	w19, #0x0
   4e24c:	mov	w8, #0x2                   	// #2
   4e250:	cinc	w9, w8, gt
   4e254:	cinc	w8, w8, le
   4e258:	cmp	w25, #0x4
   4e25c:	csel	w9, w9, w25, eq  // eq = none
   4e260:	cmp	w9, #0x1
   4e264:	csel	w25, w8, w9, eq  // eq = none
   4e268:	cmp	w25, #0x3
   4e26c:	b.ne	4e280 <mpfr_digamma@@Base+0x6f4>  // b.any
   4e270:	mov	x0, x20
   4e274:	bl	be80 <mpfr_nextbelow@plt>
   4e278:	mov	w21, #0xffffffff            	// #-1
   4e27c:	b	4e284 <mpfr_digamma@@Base+0x6f8>
   4e280:	mov	w21, #0x1                   	// #1
   4e284:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e288:	ldr	x1, [x0, #2656]
   4e28c:	add	x0, x0, #0xa60
   4e290:	blr	x1
   4e294:	ldr	w8, [x24, x0]
   4e298:	orr	w26, w8, w26
   4e29c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e2a0:	ldr	x1, [x0, #2656]
   4e2a4:	add	x0, x0, #0xa60
   4e2a8:	blr	x1
   4e2ac:	str	w26, [x24, x0]
   4e2b0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e2b4:	ldr	x1, [x0, #2592]
   4e2b8:	add	x0, x0, #0xa20
   4e2bc:	blr	x1
   4e2c0:	str	x22, [x24, x0]
   4e2c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e2c8:	ldr	x1, [x0, #2624]
   4e2cc:	add	x0, x0, #0xa40
   4e2d0:	blr	x1
   4e2d4:	str	x23, [x24, x0]
   4e2d8:	ldr	x8, [x20, #16]
   4e2dc:	cmp	x8, x23
   4e2e0:	b.gt	4e380 <mpfr_digamma@@Base+0x7f4>
   4e2e4:	cmp	x8, x22
   4e2e8:	b.lt	4e380 <mpfr_digamma@@Base+0x7f4>  // b.tstop
   4e2ec:	cbz	w21, 4e308 <mpfr_digamma@@Base+0x77c>
   4e2f0:	orr	w8, w26, #0x8
   4e2f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e2f8:	ldr	x1, [x0, #2656]
   4e2fc:	add	x0, x0, #0xa60
   4e300:	blr	x1
   4e304:	str	w8, [x24, x0]
   4e308:	mov	w0, w21
   4e30c:	ldp	x20, x19, [sp, #352]
   4e310:	ldp	x22, x21, [sp, #336]
   4e314:	ldp	x24, x23, [sp, #320]
   4e318:	ldp	x26, x25, [sp, #304]
   4e31c:	ldp	x28, x27, [sp, #288]
   4e320:	ldp	x29, x30, [sp, #272]
   4e324:	add	sp, sp, #0x170
   4e328:	ret
   4e32c:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4e330:	cmp	x9, x8
   4e334:	b.eq	4e398 <mpfr_digamma@@Base+0x80c>  // b.none
   4e338:	mov	x8, #0x2                   	// #2
   4e33c:	movk	x8, #0x8000, lsl #48
   4e340:	cmp	x9, x8
   4e344:	b.eq	4e3b8 <mpfr_digamma@@Base+0x82c>  // b.none
   4e348:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4e34c:	str	x8, [x20, #16]
   4e350:	ldr	w8, [x28, #8]
   4e354:	neg	w8, w8
   4e358:	str	w8, [x20, #8]
   4e35c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e360:	ldr	x1, [x0, #2656]
   4e364:	add	x0, x0, #0xa60
   4e368:	blr	x1
   4e36c:	mrs	x8, tpidr_el0
   4e370:	ldr	w9, [x8, x0]
   4e374:	mov	w21, wzr
   4e378:	orr	w9, w9, #0x20
   4e37c:	b	4e3dc <mpfr_digamma@@Base+0x850>
   4e380:	mov	x0, x20
   4e384:	mov	w1, w21
   4e388:	mov	w2, w25
   4e38c:	bl	cb80 <mpfr_check_range@plt>
   4e390:	mov	w21, w0
   4e394:	b	4e308 <mpfr_digamma@@Base+0x77c>
   4e398:	ldr	w8, [x28, #8]
   4e39c:	cmp	w8, #0x1
   4e3a0:	b.lt	4e3b8 <mpfr_digamma@@Base+0x82c>  // b.tstop
   4e3a4:	str	w8, [x20, #8]
   4e3a8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4e3ac:	mov	w21, wzr
   4e3b0:	str	x8, [x20, #16]
   4e3b4:	b	4e308 <mpfr_digamma@@Base+0x77c>
   4e3b8:	str	x19, [x20, #16]
   4e3bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e3c0:	ldr	x1, [x0, #2656]
   4e3c4:	add	x0, x0, #0xa60
   4e3c8:	blr	x1
   4e3cc:	mrs	x8, tpidr_el0
   4e3d0:	ldr	w9, [x8, x0]
   4e3d4:	mov	w21, wzr
   4e3d8:	orr	w9, w9, #0x4
   4e3dc:	str	w9, [x8, x0]
   4e3e0:	b	4e308 <mpfr_digamma@@Base+0x77c>
   4e3e4:	sub	sp, sp, #0xc0
   4e3e8:	stp	x29, x30, [sp, #96]
   4e3ec:	stp	x28, x27, [sp, #112]
   4e3f0:	stp	x26, x25, [sp, #128]
   4e3f4:	stp	x24, x23, [sp, #144]
   4e3f8:	stp	x22, x21, [sp, #160]
   4e3fc:	stp	x20, x19, [sp, #176]
   4e400:	ldr	x23, [x0]
   4e404:	ldr	x8, [x1, #16]
   4e408:	ldr	x9, [x1]
   4e40c:	mov	x21, x1
   4e410:	mov	x19, x0
   4e414:	mov	w20, w2
   4e418:	add	x29, sp, #0x60
   4e41c:	tbnz	x8, #63, 4e42c <mpfr_digamma@@Base+0x8a0>
   4e420:	cmp	x8, x9
   4e424:	csinc	x1, x8, x9, gt
   4e428:	b	4e434 <mpfr_digamma@@Base+0x8a8>
   4e42c:	sub	x8, x9, x8
   4e430:	add	x1, x8, #0x1
   4e434:	add	x0, sp, #0x20
   4e438:	bl	cad0 <mpfr_init2@plt>
   4e43c:	add	x0, sp, #0x20
   4e440:	mov	w1, #0x1                   	// #1
   4e444:	mov	x2, x21
   4e448:	mov	w3, wzr
   4e44c:	bl	caa0 <mpfr_ui_sub@plt>
   4e450:	cbnz	w0, 4e690 <mpfr_digamma@@Base+0xb04>
   4e454:	add	x0, sp, #0x20
   4e458:	add	x1, sp, #0x20
   4e45c:	mov	w2, #0x1                   	// #1
   4e460:	mov	w3, wzr
   4e464:	bl	c320 <mpfr_mul_2ui@plt>
   4e468:	add	x0, sp, #0x20
   4e46c:	bl	c200 <mpfr_integer_p@plt>
   4e470:	mov	w22, w0
   4e474:	add	x0, sp, #0x20
   4e478:	add	x1, sp, #0x20
   4e47c:	mov	w2, #0x1                   	// #1
   4e480:	mov	w3, wzr
   4e484:	bl	c950 <mpfr_div_2ui@plt>
   4e488:	cbz	w22, 4e4a4 <mpfr_digamma@@Base+0x918>
   4e48c:	add	x1, sp, #0x20
   4e490:	mov	x0, x19
   4e494:	mov	w2, w20
   4e498:	bl	ca40 <mpfr_digamma@plt>
   4e49c:	mov	w19, w0
   4e4a0:	b	4e664 <mpfr_digamma@@Base+0xad8>
   4e4a4:	add	x22, x23, #0xa
   4e4a8:	mov	x25, #0xfffffffffffffeff    	// #-257
   4e4ac:	sub	x0, x29, #0x20
   4e4b0:	mov	x1, x22
   4e4b4:	movk	x25, #0x7fff, lsl #48
   4e4b8:	bl	cad0 <mpfr_init2@plt>
   4e4bc:	mov	x0, sp
   4e4c0:	mov	x1, x22
   4e4c4:	bl	cad0 <mpfr_init2@plt>
   4e4c8:	cmp	w20, #0x0
   4e4cc:	mov	w27, #0x40                  	// #64
   4e4d0:	mrs	x26, tpidr_el0
   4e4d4:	cset	w28, eq  // eq = none
   4e4d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e4dc:	ldr	x1, [x0, #2704]
   4e4e0:	add	x0, x0, #0xa90
   4e4e4:	blr	x1
   4e4e8:	add	x1, x26, x0
   4e4ec:	mov	x0, sp
   4e4f0:	mov	w2, wzr
   4e4f4:	bl	c3e0 <mpfr_cache@plt>
   4e4f8:	sub	x0, x29, #0x20
   4e4fc:	mov	x1, sp
   4e500:	mov	x2, x21
   4e504:	mov	w3, wzr
   4e508:	bl	be00 <mpfr_mul@plt>
   4e50c:	ldur	x8, [x29, #-16]
   4e510:	sub	x0, x29, #0x20
   4e514:	sub	x1, x29, #0x20
   4e518:	mov	w2, wzr
   4e51c:	sub	x23, x8, x22
   4e520:	bl	bb30 <mpfr_cot@plt>
   4e524:	ldur	x8, [x29, #-16]
   4e528:	sub	x0, x29, #0x20
   4e52c:	sub	x1, x29, #0x20
   4e530:	mov	x2, sp
   4e534:	lsl	x9, x8, #1
   4e538:	cmp	x8, #0x0
   4e53c:	csel	x9, x9, xzr, gt
   4e540:	add	x9, x23, x9
   4e544:	sub	x8, x22, x8
   4e548:	mov	w3, wzr
   4e54c:	add	x23, x9, x8
   4e550:	bl	be00 <mpfr_mul@plt>
   4e554:	mov	x0, sp
   4e558:	add	x1, sp, #0x20
   4e55c:	mov	w2, wzr
   4e560:	bl	ca40 <mpfr_digamma@plt>
   4e564:	ldr	x24, [sp, #16]
   4e568:	mov	x0, sp
   4e56c:	mov	x1, sp
   4e570:	sub	x2, x29, #0x20
   4e574:	mov	w3, wzr
   4e578:	bl	bc20 <mpfr_sub@plt>
   4e57c:	ldr	x8, [sp, #16]
   4e580:	ldur	x9, [x29, #-16]
   4e584:	add	x10, x25, #0x105
   4e588:	mvn	x11, x8
   4e58c:	subs	x9, x9, x8
   4e590:	csel	x9, x9, xzr, gt
   4e594:	cmp	x8, x10
   4e598:	add	x8, x23, x9
   4e59c:	add	x8, x8, #0x3
   4e5a0:	add	x9, x24, x11
   4e5a4:	b.lt	4e5e8 <mpfr_digamma@@Base+0xa5c>  // b.tstop
   4e5a8:	ldr	x10, [sp]
   4e5ac:	cmp	x9, x8
   4e5b0:	csinc	x8, x9, x8, gt
   4e5b4:	mvn	x8, x8
   4e5b8:	ldr	x11, [x19]
   4e5bc:	add	x2, x22, x8
   4e5c0:	sub	x8, x10, #0x1
   4e5c4:	ldr	x0, [sp, #24]
   4e5c8:	add	x9, x10, #0x3e
   4e5cc:	cmp	x8, #0x0
   4e5d0:	csel	x8, x9, x8, lt  // lt = tstop
   4e5d4:	asr	x8, x8, #6
   4e5d8:	add	x1, x8, #0x1
   4e5dc:	add	x3, x11, x28
   4e5e0:	bl	c3d0 <mpfr_round_p@plt>
   4e5e4:	cbnz	w0, 4e63c <mpfr_digamma@@Base+0xab0>
   4e5e8:	sub	x8, x25, x22
   4e5ec:	cmp	x27, x8
   4e5f0:	b.gt	4e620 <mpfr_digamma@@Base+0xa94>
   4e5f4:	add	x22, x27, x22
   4e5f8:	cmp	x22, #0x0
   4e5fc:	cinc	x8, x22, lt  // lt = tstop
   4e600:	sub	x0, x29, #0x20
   4e604:	mov	x1, x22
   4e608:	asr	x27, x8, #1
   4e60c:	bl	bf80 <mpfr_set_prec@plt>
   4e610:	mov	x0, sp
   4e614:	mov	x1, x22
   4e618:	bl	bf80 <mpfr_set_prec@plt>
   4e61c:	b	4e4d8 <mpfr_digamma@@Base+0x94c>
   4e620:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4e624:	adrp	x2, 57000 <mpfr_free_pool@@Base+0x187c>
   4e628:	mov	w1, #0xb4                  	// #180
   4e62c:	add	x0, x0, #0x315
   4e630:	add	x2, x2, #0xff6
   4e634:	bl	cb90 <mpfr_assert_fail@plt>
   4e638:	b	4e5f4 <mpfr_digamma@@Base+0xa68>
   4e63c:	ldr	w3, [sp, #8]
   4e640:	mov	x1, sp
   4e644:	mov	x0, x19
   4e648:	mov	w2, w20
   4e64c:	bl	c6f0 <mpfr_set4@plt>
   4e650:	mov	w19, w0
   4e654:	sub	x0, x29, #0x20
   4e658:	bl	c110 <mpfr_clear@plt>
   4e65c:	mov	x0, sp
   4e660:	bl	c110 <mpfr_clear@plt>
   4e664:	add	x0, sp, #0x20
   4e668:	bl	c110 <mpfr_clear@plt>
   4e66c:	mov	w0, w19
   4e670:	ldp	x20, x19, [sp, #176]
   4e674:	ldp	x22, x21, [sp, #160]
   4e678:	ldp	x24, x23, [sp, #144]
   4e67c:	ldp	x26, x25, [sp, #128]
   4e680:	ldp	x28, x27, [sp, #112]
   4e684:	ldp	x29, x30, [sp, #96]
   4e688:	add	sp, sp, #0xc0
   4e68c:	ret
   4e690:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4e694:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   4e698:	add	x0, x0, #0x315
   4e69c:	add	x2, x2, #0x31f
   4e6a0:	mov	w1, #0x88                  	// #136
   4e6a4:	bl	cb90 <mpfr_assert_fail@plt>
   4e6a8:	b	4e454 <mpfr_digamma@@Base+0x8c8>

000000000004e6ac <mpfr_bernoulli_cache@@Base>:
   4e6ac:	sub	sp, sp, #0xf0
   4e6b0:	str	d8, [sp, #128]
   4e6b4:	stp	x29, x30, [sp, #144]
   4e6b8:	stp	x28, x27, [sp, #160]
   4e6bc:	stp	x26, x25, [sp, #176]
   4e6c0:	stp	x24, x23, [sp, #192]
   4e6c4:	stp	x22, x21, [sp, #208]
   4e6c8:	stp	x20, x19, [sp, #224]
   4e6cc:	add	x29, sp, #0x80
   4e6d0:	mov	x21, x0
   4e6d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e6d8:	ldr	x1, [x0, #2528]
   4e6dc:	add	x0, x0, #0x9e0
   4e6e0:	blr	x1
   4e6e4:	mrs	x26, tpidr_el0
   4e6e8:	ldr	x27, [x26, x0]
   4e6ec:	cmp	x27, x21
   4e6f0:	b.hi	4ec88 <mpfr_bernoulli_cache@@Base+0x5dc>  // b.pmore
   4e6f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e6f8:	ldr	x1, [x0, #2512]
   4e6fc:	add	x0, x0, #0x9d0
   4e700:	blr	x1
   4e704:	ldr	x8, [x26, x0]
   4e708:	cbz	x8, 4e774 <mpfr_bernoulli_cache@@Base+0xc8>
   4e70c:	cmp	x8, x21
   4e710:	b.hi	4e768 <mpfr_bernoulli_cache@@Base+0xbc>  // b.pmore
   4e714:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e718:	ldr	x1, [x0, #2544]
   4e71c:	add	x0, x0, #0x9f0
   4e720:	blr	x1
   4e724:	mov	x20, x0
   4e728:	ldr	x0, [x26, x0]
   4e72c:	add	x19, x21, x21, lsr #2
   4e730:	lsl	x1, x8, #4
   4e734:	lsl	x2, x19, #4
   4e738:	bl	c260 <mpfr_reallocate_func@plt>
   4e73c:	str	x0, [x26, x20]
   4e740:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e744:	ldr	x1, [x0, #2512]
   4e748:	add	x0, x0, #0x9d0
   4e74c:	blr	x1
   4e750:	str	x19, [x26, x0]
   4e754:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e758:	ldr	x1, [x0, #2528]
   4e75c:	add	x0, x0, #0x9e0
   4e760:	blr	x1
   4e764:	ldr	x27, [x26, x0]
   4e768:	cmp	x27, x21
   4e76c:	b.ls	4e7d0 <mpfr_bernoulli_cache@@Base+0x124>  // b.plast
   4e770:	b	4ec70 <mpfr_bernoulli_cache@@Base+0x5c4>
   4e774:	add	x8, x21, x21, lsr #2
   4e778:	cmp	x8, #0x10
   4e77c:	mov	w9, #0x10                  	// #16
   4e780:	csel	x8, x8, x9, hi  // hi = pmore
   4e784:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e788:	ldr	x1, [x0, #2512]
   4e78c:	add	x0, x0, #0x9d0
   4e790:	blr	x1
   4e794:	str	x8, [x26, x0]
   4e798:	lsl	x0, x8, #4
   4e79c:	bl	cd50 <mpfr_allocate_func@plt>
   4e7a0:	mov	x8, x0
   4e7a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e7a8:	ldr	x1, [x0, #2544]
   4e7ac:	add	x0, x0, #0x9f0
   4e7b0:	blr	x1
   4e7b4:	str	x8, [x26, x0]
   4e7b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e7bc:	ldr	x1, [x0, #2528]
   4e7c0:	add	x0, x0, #0x9e0
   4e7c4:	blr	x1
   4e7c8:	mov	x27, xzr
   4e7cc:	str	xzr, [x26, x0]
   4e7d0:	fmov	d8, #7.000000000000000000e+00
   4e7d4:	str	x21, [x29, #8]
   4e7d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4e7dc:	ldr	x1, [x0, #2544]
   4e7e0:	add	x0, x0, #0x9f0
   4e7e4:	blr	x1
   4e7e8:	ldr	x25, [x26, x0]
   4e7ec:	add	x20, x25, x27, lsl #4
   4e7f0:	mov	x0, x20
   4e7f4:	bl	c040 <mpfr_mpz_init@plt>
   4e7f8:	cbz	x27, 4e898 <mpfr_bernoulli_cache@@Base+0x1ec>
   4e7fc:	add	x0, sp, #0x40
   4e800:	lsl	x21, x27, #1
   4e804:	bl	c040 <mpfr_mpz_init@plt>
   4e808:	add	x0, sp, #0x40
   4e80c:	mov	w1, #0x6                   	// #6
   4e810:	bl	bd60 <__gmpz_set_ui@plt>
   4e814:	mov	w22, #0x1                   	// #1
   4e818:	bfi	x22, x27, #1, #63
   4e81c:	cmp	x22, #0x5
   4e820:	b.cc	4e880 <mpfr_bernoulli_cache@@Base+0x1d4>  // b.lo, b.ul, b.last
   4e824:	mov	w23, #0x5                   	// #5
   4e828:	sub	x8, x23, #0x1
   4e82c:	udiv	x9, x21, x8
   4e830:	msub	x8, x9, x8, x21
   4e834:	cbnz	x8, 4e874 <mpfr_bernoulli_cache@@Base+0x1c8>
   4e838:	cmp	x23, #0x9
   4e83c:	b.cc	4e864 <mpfr_bernoulli_cache@@Base+0x1b8>  // b.lo, b.ul, b.last
   4e840:	mov	w8, #0x5                   	// #5
   4e844:	sub	x9, x8, #0x2
   4e848:	udiv	x10, x23, x9
   4e84c:	msub	x9, x10, x9, x23
   4e850:	cbz	x9, 4e874 <mpfr_bernoulli_cache@@Base+0x1c8>
   4e854:	mul	x9, x8, x8
   4e858:	cmp	x9, x23
   4e85c:	add	x8, x8, #0x2
   4e860:	b.ls	4e844 <mpfr_bernoulli_cache@@Base+0x198>  // b.plast
   4e864:	add	x0, sp, #0x40
   4e868:	add	x1, sp, #0x40
   4e86c:	mov	x2, x23
   4e870:	bl	c1a0 <__gmpz_mul_ui@plt>
   4e874:	add	x23, x23, #0x2
   4e878:	cmp	x23, x22
   4e87c:	b.ls	4e828 <mpfr_bernoulli_cache@@Base+0x17c>  // b.plast
   4e880:	cmp	x21, #0x40
   4e884:	b.hi	4e8a8 <mpfr_bernoulli_cache@@Base+0x1fc>  // b.pmore
   4e888:	adrp	x8, 5f000 <mpfr_bases@@Base+0x14f8>
   4e88c:	add	x8, x8, #0x360
   4e890:	ldr	x23, [x8, x27, lsl #3]
   4e894:	b	4e944 <mpfr_bernoulli_cache@@Base+0x298>
   4e898:	mov	w1, #0x1                   	// #1
   4e89c:	mov	x0, x25
   4e8a0:	bl	bd60 <__gmpz_set_ui@plt>
   4e8a4:	b	4ec64 <mpfr_bernoulli_cache@@Base+0x5b8>
   4e8a8:	ucvtf	d0, x21
   4e8ac:	fmul	d0, d0, d8
   4e8b0:	bl	c9b0 <__gmpfr_ceil_log2@plt>
   4e8b4:	add	x19, x0, #0x1
   4e8b8:	mov	x0, sp
   4e8bc:	mov	w1, #0x35                  	// #53
   4e8c0:	bl	cad0 <mpfr_init2@plt>
   4e8c4:	mov	w1, #0x1f2c                	// #7980
   4e8c8:	mov	x0, sp
   4e8cc:	movk	w1, #0xefd, lsl #16
   4e8d0:	mov	x2, #0xffffffffffffffe0    	// #-32
   4e8d4:	mov	w3, #0x2                   	// #2
   4e8d8:	bl	c640 <mpfr_set_ui_2exp@plt>
   4e8dc:	mov	x0, sp
   4e8e0:	mov	x1, sp
   4e8e4:	mov	w3, #0x2                   	// #2
   4e8e8:	mov	x2, x21
   4e8ec:	bl	bb10 <mpfr_mul_ui@plt>
   4e8f0:	mov	x0, sp
   4e8f4:	mov	x1, sp
   4e8f8:	mov	w2, #0x2                   	// #2
   4e8fc:	bl	c270 <mpfr_log2@plt>
   4e900:	mov	x0, sp
   4e904:	mov	x1, sp
   4e908:	mov	w3, #0x2                   	// #2
   4e90c:	mov	x2, x21
   4e910:	bl	bb10 <mpfr_mul_ui@plt>
   4e914:	mov	x0, sp
   4e918:	mov	w1, #0x2                   	// #2
   4e91c:	bl	bd50 <mpfr_get_ui@plt>
   4e920:	mov	x23, x0
   4e924:	mov	x0, sp
   4e928:	bl	c110 <mpfr_clear@plt>
   4e92c:	add	x0, sp, #0x40
   4e930:	mov	w1, #0x2                   	// #2
   4e934:	bl	cbb0 <__gmpz_sizeinbase@plt>
   4e938:	add	x8, x23, x19, asr #1
   4e93c:	add	x8, x8, x0
   4e940:	add	x23, x8, #0xe
   4e944:	mov	w19, #0x3                   	// #3
   4e948:	add	x8, x25, x27, lsl #4
   4e94c:	sub	x24, x21, #0x1
   4e950:	bfi	x19, x27, #2, #62
   4e954:	add	x28, x8, #0x4
   4e958:	sub	x0, x29, #0x10
   4e95c:	bl	c040 <mpfr_mpz_init@plt>
   4e960:	sub	x0, x29, #0x20
   4e964:	bl	c040 <mpfr_mpz_init@plt>
   4e968:	sub	x0, x29, #0x30
   4e96c:	bl	c040 <mpfr_mpz_init@plt>
   4e970:	sub	x0, x29, #0x30
   4e974:	mov	w1, #0x1                   	// #1
   4e978:	bl	bd60 <__gmpz_set_ui@plt>
   4e97c:	sub	x0, x29, #0x30
   4e980:	sub	x1, x29, #0x30
   4e984:	mov	x2, x23
   4e988:	bl	c290 <__gmpz_mul_2exp@plt>
   4e98c:	sub	x0, x29, #0x20
   4e990:	mov	w1, #0x3                   	// #3
   4e994:	mov	x2, x21
   4e998:	bl	c530 <__gmpz_ui_pow_ui@plt>
   4e99c:	sub	x0, x29, #0x10
   4e9a0:	sub	x1, x29, #0x30
   4e9a4:	sub	x2, x29, #0x20
   4e9a8:	bl	bee0 <__gmpz_fdiv_q@plt>
   4e9ac:	ldur	w8, [x29, #-28]
   4e9b0:	mov	w25, #0x4                   	// #4
   4e9b4:	cmp	w8, #0x1
   4e9b8:	b.lt	4e9fc <mpfr_bernoulli_cache@@Base+0x350>  // b.tstop
   4e9bc:	sub	x0, x29, #0x20
   4e9c0:	mov	x1, x25
   4e9c4:	mov	x2, x21
   4e9c8:	bl	c530 <__gmpz_ui_pow_ui@plt>
   4e9cc:	sub	x0, x29, #0x20
   4e9d0:	sub	x1, x29, #0x30
   4e9d4:	sub	x2, x29, #0x20
   4e9d8:	bl	bee0 <__gmpz_fdiv_q@plt>
   4e9dc:	sub	x0, x29, #0x10
   4e9e0:	sub	x1, x29, #0x10
   4e9e4:	sub	x2, x29, #0x20
   4e9e8:	bl	ca10 <__gmpz_add@plt>
   4e9ec:	ldur	w8, [x29, #-28]
   4e9f0:	add	x25, x25, #0x1
   4e9f4:	cmp	w8, #0x0
   4e9f8:	b.gt	4e9bc <mpfr_bernoulli_cache@@Base+0x310>
   4e9fc:	sub	x0, x29, #0x20
   4ea00:	mov	x1, x25
   4ea04:	mov	x2, x24
   4ea08:	bl	c530 <__gmpz_ui_pow_ui@plt>
   4ea0c:	sub	x0, x29, #0x20
   4ea10:	sub	x1, x29, #0x20
   4ea14:	mov	x2, x24
   4ea18:	bl	c1a0 <__gmpz_mul_ui@plt>
   4ea1c:	sub	x0, x29, #0x20
   4ea20:	sub	x1, x29, #0x30
   4ea24:	sub	x2, x29, #0x20
   4ea28:	bl	c7c0 <__gmpz_cdiv_q@plt>
   4ea2c:	sub	x0, x29, #0x10
   4ea30:	sub	x1, x29, #0x10
   4ea34:	sub	x2, x29, #0x20
   4ea38:	bl	ca10 <__gmpz_add@plt>
   4ea3c:	sub	x0, x29, #0x10
   4ea40:	sub	x1, x29, #0x10
   4ea44:	sub	x2, x29, #0x30
   4ea48:	bl	ca10 <__gmpz_add@plt>
   4ea4c:	sub	x0, x29, #0x30
   4ea50:	sub	x1, x29, #0x30
   4ea54:	mov	x2, x21
   4ea58:	bl	bc10 <__gmpz_cdiv_q_2exp@plt>
   4ea5c:	sub	x0, x29, #0x10
   4ea60:	sub	x1, x29, #0x10
   4ea64:	sub	x2, x29, #0x30
   4ea68:	bl	ca10 <__gmpz_add@plt>
   4ea6c:	sub	x0, x29, #0x20
   4ea70:	mov	x1, x21
   4ea74:	bl	c070 <__gmpz_fac_ui@plt>
   4ea78:	sub	x0, x29, #0x10
   4ea7c:	sub	x1, x29, #0x10
   4ea80:	sub	x2, x29, #0x20
   4ea84:	bl	c090 <__gmpz_mul@plt>
   4ea88:	sub	x0, x29, #0x10
   4ea8c:	sub	x1, x29, #0x10
   4ea90:	add	x2, sp, #0x40
   4ea94:	bl	c090 <__gmpz_mul@plt>
   4ea98:	sub	x0, x29, #0x10
   4ea9c:	sub	x1, x29, #0x10
   4eaa0:	mov	w2, #0x1                   	// #1
   4eaa4:	bl	c290 <__gmpz_mul_2exp@plt>
   4eaa8:	mov	x0, sp
   4eaac:	mov	x1, x23
   4eab0:	bl	cad0 <mpfr_init2@plt>
   4eab4:	mov	x0, sp
   4eab8:	sub	x1, x29, #0x10
   4eabc:	mov	w2, #0x1                   	// #1
   4eac0:	bl	c2b0 <mpfr_set_z@plt>
   4eac4:	mov	x0, sp
   4eac8:	mov	x1, sp
   4eacc:	mov	w3, #0x1                   	// #1
   4ead0:	mov	x2, x23
   4ead4:	bl	c950 <mpfr_div_2ui@plt>
   4ead8:	add	x0, sp, #0x20
   4eadc:	mov	x1, x23
   4eae0:	bl	cad0 <mpfr_init2@plt>
   4eae4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4eae8:	ldr	x1, [x0, #2704]
   4eaec:	add	x0, x0, #0xa90
   4eaf0:	blr	x1
   4eaf4:	add	x1, x26, x0
   4eaf8:	add	x0, sp, #0x20
   4eafc:	mov	w2, #0x2                   	// #2
   4eb00:	bl	c3e0 <mpfr_cache@plt>
   4eb04:	add	x0, sp, #0x20
   4eb08:	add	x1, sp, #0x20
   4eb0c:	mov	w2, #0x1                   	// #1
   4eb10:	mov	w3, #0x2                   	// #2
   4eb14:	bl	c320 <mpfr_mul_2ui@plt>
   4eb18:	add	x0, sp, #0x20
   4eb1c:	add	x1, sp, #0x20
   4eb20:	mov	w3, #0x2                   	// #2
   4eb24:	mov	x2, x21
   4eb28:	bl	c020 <mpfr_pow_ui@plt>
   4eb2c:	mov	x0, sp
   4eb30:	mov	x1, sp
   4eb34:	add	x2, sp, #0x20
   4eb38:	mov	w3, #0x1                   	// #1
   4eb3c:	bl	c670 <mpfr_div@plt>
   4eb40:	add	x9, x25, x19
   4eb44:	cmp	x9, #0x2
   4eb48:	b.cc	4eb68 <mpfr_bernoulli_cache@@Base+0x4bc>  // b.lo, b.ul, b.last
   4eb4c:	mov	x8, xzr
   4eb50:	add	x9, x9, #0x1
   4eb54:	add	x8, x8, #0x1
   4eb58:	cmp	x9, #0x3
   4eb5c:	lsr	x9, x9, #1
   4eb60:	b.hi	4eb50 <mpfr_bernoulli_cache@@Base+0x4a4>  // b.pmore
   4eb64:	b	4eb6c <mpfr_bernoulli_cache@@Base+0x4c0>
   4eb68:	mov	x8, xzr
   4eb6c:	ldr	x9, [sp]
   4eb70:	sub	x10, x9, #0x1
   4eb74:	add	x9, x9, #0x3e
   4eb78:	cmp	x10, #0x0
   4eb7c:	csel	x9, x9, x10, lt  // lt = tstop
   4eb80:	subs	x8, x8, x23
   4eb84:	b.cs	4ebb0 <mpfr_bernoulli_cache@@Base+0x504>  // b.hs, b.nlast
   4eb88:	ldr	x0, [sp, #24]
   4eb8c:	and	x9, x9, #0xffffffffffffffc0
   4eb90:	add	x25, x9, #0x40
   4eb94:	add	x1, x8, x25
   4eb98:	bl	caf0 <__gmpn_scan1@plt>
   4eb9c:	ldr	x8, [sp, #16]
   4eba0:	sub	x9, x25, x0
   4eba4:	cmp	x8, x9
   4eba8:	cset	w25, cc  // cc = lo, ul, last
   4ebac:	b	4ebb4 <mpfr_bernoulli_cache@@Base+0x508>
   4ebb0:	mov	w25, wzr
   4ebb4:	mov	x1, sp
   4ebb8:	mov	w2, #0x2                   	// #2
   4ebbc:	mov	x0, x20
   4ebc0:	bl	beb0 <mpfr_get_z@plt>
   4ebc4:	tbnz	w27, #0, 4ebd4 <mpfr_bernoulli_cache@@Base+0x528>
   4ebc8:	ldr	w8, [x28]
   4ebcc:	neg	w8, w8
   4ebd0:	str	w8, [x28]
   4ebd4:	sub	x0, x29, #0x20
   4ebd8:	sub	x1, x29, #0x20
   4ebdc:	mov	x2, x22
   4ebe0:	bl	c1a0 <__gmpz_mul_ui@plt>
   4ebe4:	sub	x0, x29, #0x20
   4ebe8:	sub	x1, x29, #0x20
   4ebec:	add	x2, sp, #0x40
   4ebf0:	bl	c010 <__gmpz_divexact@plt>
   4ebf4:	sub	x2, x29, #0x20
   4ebf8:	mov	x0, x20
   4ebfc:	mov	x1, x20
   4ec00:	bl	c090 <__gmpz_mul@plt>
   4ec04:	add	x0, sp, #0x40
   4ec08:	mov	w1, #0x1                   	// #1
   4ec0c:	bl	bd60 <__gmpz_set_ui@plt>
   4ec10:	add	x0, sp, #0x20
   4ec14:	bl	c110 <mpfr_clear@plt>
   4ec18:	mov	x0, sp
   4ec1c:	bl	c110 <mpfr_clear@plt>
   4ec20:	sub	x0, x29, #0x10
   4ec24:	bl	c210 <mpfr_mpz_clear@plt>
   4ec28:	sub	x0, x29, #0x20
   4ec2c:	bl	c210 <mpfr_mpz_clear@plt>
   4ec30:	sub	x0, x29, #0x30
   4ec34:	bl	c210 <mpfr_mpz_clear@plt>
   4ec38:	cbnz	w25, 4ec58 <mpfr_bernoulli_cache@@Base+0x5ac>
   4ec3c:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   4ec40:	movk	x8, #0x6667
   4ec44:	smulh	x8, x23, x8
   4ec48:	asr	x9, x8, #2
   4ec4c:	add	x8, x9, x8, lsr #63
   4ec50:	add	x23, x8, x23
   4ec54:	b	4e958 <mpfr_bernoulli_cache@@Base+0x2ac>
   4ec58:	add	x0, sp, #0x40
   4ec5c:	bl	c210 <mpfr_mpz_clear@plt>
   4ec60:	ldr	x21, [x29, #8]
   4ec64:	add	x27, x27, #0x1
   4ec68:	cmp	x27, x21
   4ec6c:	b.ls	4e7d8 <mpfr_bernoulli_cache@@Base+0x12c>  // b.plast
   4ec70:	add	x8, x21, #0x1
   4ec74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ec78:	ldr	x1, [x0, #2528]
   4ec7c:	add	x0, x0, #0x9e0
   4ec80:	blr	x1
   4ec84:	str	x8, [x26, x0]
   4ec88:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ec8c:	ldr	x1, [x0, #2544]
   4ec90:	add	x0, x0, #0x9f0
   4ec94:	blr	x1
   4ec98:	ldr	x8, [x26, x0]
   4ec9c:	ldp	x20, x19, [sp, #224]
   4eca0:	ldp	x24, x23, [sp, #192]
   4eca4:	ldp	x26, x25, [sp, #176]
   4eca8:	add	x0, x8, x21, lsl #4
   4ecac:	ldp	x22, x21, [sp, #208]
   4ecb0:	ldp	x28, x27, [sp, #160]
   4ecb4:	ldp	x29, x30, [sp, #144]
   4ecb8:	ldr	d8, [sp, #128]
   4ecbc:	add	sp, sp, #0xf0
   4ecc0:	ret

000000000004ecc4 <mpfr_bernoulli_freecache@@Base>:
   4ecc4:	stp	x29, x30, [sp, #-48]!
   4ecc8:	str	x21, [sp, #16]
   4eccc:	stp	x20, x19, [sp, #32]
   4ecd0:	mov	x29, sp
   4ecd4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ecd8:	ldr	x1, [x0, #2544]
   4ecdc:	add	x0, x0, #0x9f0
   4ece0:	blr	x1
   4ece4:	mrs	x20, tpidr_el0
   4ece8:	ldr	x8, [x20, x0]
   4ecec:	cbz	x8, 4eda0 <mpfr_bernoulli_freecache@@Base+0xdc>
   4ecf0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ecf4:	ldr	x1, [x0, #2528]
   4ecf8:	add	x0, x0, #0x9e0
   4ecfc:	blr	x1
   4ed00:	ldr	x9, [x20, x0]
   4ed04:	cbz	x9, 4ed50 <mpfr_bernoulli_freecache@@Base+0x8c>
   4ed08:	mov	x19, xzr
   4ed0c:	mov	x21, xzr
   4ed10:	add	x0, x8, x19
   4ed14:	bl	c210 <mpfr_mpz_clear@plt>
   4ed18:	add	x21, x21, #0x1
   4ed1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ed20:	ldr	x1, [x0, #2528]
   4ed24:	add	x0, x0, #0x9e0
   4ed28:	blr	x1
   4ed2c:	ldr	x9, [x20, x0]
   4ed30:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ed34:	ldr	x1, [x0, #2544]
   4ed38:	add	x0, x0, #0x9f0
   4ed3c:	blr	x1
   4ed40:	ldr	x8, [x20, x0]
   4ed44:	cmp	x21, x9
   4ed48:	add	x19, x19, #0x10
   4ed4c:	b.cc	4ed10 <mpfr_bernoulli_freecache@@Base+0x4c>  // b.lo, b.ul, b.last
   4ed50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ed54:	ldr	x1, [x0, #2512]
   4ed58:	add	x0, x0, #0x9d0
   4ed5c:	blr	x1
   4ed60:	ldr	x9, [x20, x0]
   4ed64:	mov	x19, x0
   4ed68:	mov	x0, x8
   4ed6c:	lsl	x1, x9, #4
   4ed70:	bl	cc80 <mpfr_free_func@plt>
   4ed74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ed78:	ldr	x1, [x0, #2544]
   4ed7c:	add	x0, x0, #0x9f0
   4ed80:	blr	x1
   4ed84:	str	xzr, [x20, x0]
   4ed88:	str	xzr, [x20, x19]
   4ed8c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4ed90:	ldr	x1, [x0, #2528]
   4ed94:	add	x0, x0, #0x9e0
   4ed98:	blr	x1
   4ed9c:	str	xzr, [x20, x0]
   4eda0:	ldp	x20, x19, [sp, #32]
   4eda4:	ldr	x21, [sp, #16]
   4eda8:	ldp	x29, x30, [sp], #48
   4edac:	ret

000000000004edb0 <mpfr_regular_p@@Base>:
   4edb0:	ldr	x8, [x0, #16]
   4edb4:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   4edb8:	cmp	x8, x9
   4edbc:	cset	w0, gt
   4edc0:	ret

000000000004edc4 <mpfr_set_flt@@Base>:
   4edc4:	fcvt	d0, s0
   4edc8:	b	bef0 <mpfr_set_d@plt>

000000000004edcc <mpfr_get_flt@@Base>:
   4edcc:	sub	sp, sp, #0x40
   4edd0:	stp	x29, x30, [sp, #16]
   4edd4:	stp	x22, x21, [sp, #32]
   4edd8:	stp	x20, x19, [sp, #48]
   4eddc:	ldr	x19, [x0, #16]
   4ede0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   4ede4:	add	x29, sp, #0x10
   4ede8:	cmp	x19, x8
   4edec:	b.le	4eec8 <mpfr_get_flt@@Base+0xfc>
   4edf0:	ldr	w20, [x0, #8]
   4edf4:	mov	w8, #0x2                   	// #2
   4edf8:	cmp	w20, #0x0
   4edfc:	cinc	w8, w8, lt  // lt = tstop
   4ee00:	cmp	w1, #0x4
   4ee04:	csel	w5, w8, w1, eq  // eq = none
   4ee08:	cmn	x19, #0x95
   4ee0c:	b.le	4eed0 <mpfr_get_flt@@Base+0x104>
   4ee10:	cmp	x19, #0x81
   4ee14:	b.ge	4ef08 <mpfr_get_flt@@Base+0x13c>  // b.tcont
   4ee18:	add	w8, w19, #0x95
   4ee1c:	cmn	x19, #0x7d
   4ee20:	mov	w9, #0x18                  	// #24
   4ee24:	ldr	x1, [x0, #24]
   4ee28:	ldr	x2, [x0]
   4ee2c:	csel	w22, w8, w9, lt  // lt = tstop
   4ee30:	sub	w8, w22, #0x1
   4ee34:	lsr	w3, w20, #31
   4ee38:	add	w9, w22, #0x3e
   4ee3c:	cmp	w8, #0x0
   4ee40:	sxtw	x4, w22
   4ee44:	add	x0, sp, #0x8
   4ee48:	csel	w21, w9, w8, lt  // lt = tstop
   4ee4c:	bl	c770 <mpfr_round_raw_4@plt>
   4ee50:	cbnz	w0, 4ef2c <mpfr_get_flt@@Base+0x160>
   4ee54:	ldr	d0, [sp, #8]
   4ee58:	mov	x8, #0x3bf0000000000000    	// #4318952042648305664
   4ee5c:	fmov	d2, x8
   4ee60:	cmp	w22, #0x41
   4ee64:	ucvtf	d1, d0
   4ee68:	fmul	d0, d1, d2
   4ee6c:	b.lt	4ee9c <mpfr_get_flt@@Base+0xd0>  // b.tstop
   4ee70:	asr	w9, w21, #6
   4ee74:	add	w9, w9, #0x1
   4ee78:	mov	w8, #0x1                   	// #1
   4ee7c:	sxtw	x9, w9
   4ee80:	mov	x10, #0x3bf0000000000000    	// #4318952042648305664
   4ee84:	fadd	d0, d0, d1
   4ee88:	add	x8, x8, #0x1
   4ee8c:	fmov	d2, x10
   4ee90:	cmp	x8, x9
   4ee94:	fmul	d0, d0, d2
   4ee98:	b.lt	4ee84 <mpfr_get_flt@@Base+0xb8>  // b.tstop
   4ee9c:	mov	w0, w19
   4eea0:	bl	cbf0 <mpfr_scale2@plt>
   4eea4:	fneg	d1, d0
   4eea8:	cmp	w20, #0x0
   4eeac:	fcsel	d0, d1, d0, lt  // lt = tstop
   4eeb0:	fcvt	s0, d0
   4eeb4:	ldp	x20, x19, [sp, #48]
   4eeb8:	ldp	x22, x21, [sp, #32]
   4eebc:	ldp	x29, x30, [sp, #16]
   4eec0:	add	sp, sp, #0x40
   4eec4:	ret
   4eec8:	bl	bde0 <mpfr_get_d@plt>
   4eecc:	b	4eeb0 <mpfr_get_flt@@Base+0xe4>
   4eed0:	tbnz	w20, #31, 4ef34 <mpfr_get_flt@@Base+0x168>
   4eed4:	cmp	w5, #0x2
   4eed8:	b.eq	4ef78 <mpfr_get_flt@@Base+0x1ac>  // b.none
   4eedc:	fmov	s0, wzr
   4eee0:	cbnz	w5, 4eeb4 <mpfr_get_flt@@Base+0xe8>
   4eee4:	mov	w1, #0x1                   	// #1
   4eee8:	mov	x2, #0xffffffffffffff6a    	// #-150
   4eeec:	mov	w19, #0x1                   	// #1
   4eef0:	bl	c430 <mpfr_cmp_si_2exp@plt>
   4eef4:	fmov	s0, wzr
   4eef8:	cmp	w0, #0x1
   4eefc:	b.lt	4eeb4 <mpfr_get_flt@@Base+0xe8>  // b.tstop
   4ef00:	fmov	s0, w19
   4ef04:	b	4eeb4 <mpfr_get_flt@@Base+0xe8>
   4ef08:	tbnz	w20, #31, 4ef58 <mpfr_get_flt@@Base+0x18c>
   4ef0c:	orr	w8, w5, #0x2
   4ef10:	mov	w9, #0x7f800000            	// #2139095040
   4ef14:	mov	w10, #0x7f7fffff            	// #2139095039
   4ef18:	cmp	w8, #0x3
   4ef1c:	fmov	s0, w9
   4ef20:	fmov	s1, w10
   4ef24:	fcsel	s0, s1, s0, eq  // eq = none
   4ef28:	b	4eeb4 <mpfr_get_flt@@Base+0xe8>
   4ef2c:	fmov	d0, #1.000000000000000000e+00
   4ef30:	b	4ee9c <mpfr_get_flt@@Base+0xd0>
   4ef34:	cmp	w5, #0x3
   4ef38:	b.eq	4ef80 <mpfr_get_flt@@Base+0x1b4>  // b.none
   4ef3c:	cbnz	w5, 4ef50 <mpfr_get_flt@@Base+0x184>
   4ef40:	mov	x1, #0xffffffffffffffff    	// #-1
   4ef44:	mov	x2, #0xffffffffffffff6a    	// #-150
   4ef48:	bl	c430 <mpfr_cmp_si_2exp@plt>
   4ef4c:	tbnz	w0, #31, 4ef80 <mpfr_get_flt@@Base+0x1b4>
   4ef50:	mov	w8, #0x80000000            	// #-2147483648
   4ef54:	b	4ef84 <mpfr_get_flt@@Base+0x1b8>
   4ef58:	sub	w8, w5, #0x1
   4ef5c:	mov	w9, #0xff800000            	// #-8388608
   4ef60:	mov	w10, #0xff7fffff            	// #-8388609
   4ef64:	cmp	w8, #0x2
   4ef68:	fmov	s0, w9
   4ef6c:	fmov	s1, w10
   4ef70:	fcsel	s0, s1, s0, cc  // cc = lo, ul, last
   4ef74:	b	4eeb4 <mpfr_get_flt@@Base+0xe8>
   4ef78:	mov	w8, #0x1                   	// #1
   4ef7c:	b	4ef84 <mpfr_get_flt@@Base+0x1b8>
   4ef80:	mov	w8, #0x80000001            	// #-2147483647
   4ef84:	fmov	s0, w8
   4ef88:	b	4eeb4 <mpfr_get_flt@@Base+0xe8>

000000000004ef8c <mpfr_scale2@@Base>:
   4ef8c:	fmov	d1, #1.000000000000000000e+00
   4ef90:	fmov	d2, #5.000000000000000000e-01
   4ef94:	fcmp	d0, d1
   4ef98:	cset	w8, eq  // eq = none
   4ef9c:	fcsel	d0, d2, d0, eq  // eq = none
   4efa0:	add	w9, w8, w0
   4efa4:	fmov	x8, d0
   4efa8:	cmn	w9, #0x3fe
   4efac:	lsr	x10, x8, #52
   4efb0:	b.le	4efc8 <mpfr_scale2@@Base+0x3c>
   4efb4:	add	w9, w9, w10
   4efb8:	and	w9, w9, #0x7ff
   4efbc:	bfi	x8, x9, #52, #11
   4efc0:	fmov	d0, x8
   4efc4:	ret
   4efc8:	add	w9, w9, w10
   4efcc:	add	w9, w9, #0x34
   4efd0:	and	w9, w9, #0x7ff
   4efd4:	mov	x11, #0x3cb0000000000000    	// #4372995238176751616
   4efd8:	bfi	x8, x9, #52, #11
   4efdc:	fmov	d0, x11
   4efe0:	fmov	d1, x8
   4efe4:	fmul	d0, d1, d0
   4efe8:	fmov	x8, d0
   4efec:	b	4efc0 <mpfr_scale2@@Base+0x34>

000000000004eff0 <mpfr_set_z_2exp@@Base>:
   4eff0:	sub	sp, sp, #0x70
   4eff4:	stp	x29, x30, [sp, #16]
   4eff8:	stp	x28, x27, [sp, #32]
   4effc:	stp	x26, x25, [sp, #48]
   4f000:	stp	x24, x23, [sp, #64]
   4f004:	stp	x22, x21, [sp, #80]
   4f008:	stp	x20, x19, [sp, #96]
   4f00c:	ldr	w9, [x1, #4]
   4f010:	mov	x20, x0
   4f014:	add	x29, sp, #0x10
   4f018:	cmp	w9, #0x0
   4f01c:	cset	w10, ne  // ne = any
   4f020:	csinv	w19, w10, wzr, ge  // ge = tcont
   4f024:	cbz	w19, 4f204 <mpfr_set_z_2exp@@Base+0x214>
   4f028:	cmp	w9, #0x0
   4f02c:	mov	w27, w3
   4f030:	mov	x8, x2
   4f034:	cneg	w2, w9, mi  // mi = first
   4f038:	tbnz	x8, #63, 4f044 <mpfr_set_z_2exp@@Base+0x54>
   4f03c:	lsr	x9, x8, #6
   4f040:	b	4f05c <mpfr_set_z_2exp@@Base+0x6c>
   4f044:	add	x9, x8, #0x1
   4f048:	add	x10, x8, #0x40
   4f04c:	cmp	x9, #0x0
   4f050:	csinc	x9, x10, x8, lt  // lt = tstop
   4f054:	asr	x9, x9, #6
   4f058:	sub	x9, x9, #0x1
   4f05c:	mov	x10, #0x1                   	// #1
   4f060:	add	x9, x9, x2
   4f064:	movk	x10, #0x100, lsl #48
   4f068:	cmp	x9, x10
   4f06c:	b.ge	4f1d8 <mpfr_set_z_2exp@@Base+0x1e8>  // b.tcont
   4f070:	ldr	x23, [x1, #8]
   4f074:	ldr	x9, [x20]
   4f078:	ldr	x22, [x20, #24]
   4f07c:	add	x8, x8, x2, lsl #6
   4f080:	add	x11, x23, x2, lsl #3
   4f084:	ldur	x11, [x11, #-8]
   4f088:	sub	x10, x9, #0x1
   4f08c:	add	x9, x9, #0x3e
   4f090:	cmp	x10, #0x0
   4f094:	clz	x24, x11
   4f098:	csel	x9, x9, x10, lt  // lt = tstop
   4f09c:	sub	x26, x8, x24
   4f0a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f0a4:	ldr	x1, [x0, #2624]
   4f0a8:	add	x0, x0, #0xa40
   4f0ac:	blr	x1
   4f0b0:	mrs	x25, tpidr_el0
   4f0b4:	ldr	x8, [x25, x0]
   4f0b8:	cmp	x26, x8
   4f0bc:	b.gt	4f1d8 <mpfr_set_z_2exp@@Base+0x1e8>
   4f0c0:	add	x10, x26, #0x1
   4f0c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f0c8:	ldr	x1, [x0, #2592]
   4f0cc:	add	x0, x0, #0xa20
   4f0d0:	blr	x1
   4f0d4:	ldr	x8, [x25, x0]
   4f0d8:	cmp	x10, x8
   4f0dc:	b.lt	4f21c <mpfr_set_z_2exp@@Base+0x22c>  // b.tstop
   4f0e0:	asr	x28, x9, #6
   4f0e4:	add	x8, x28, #0x1
   4f0e8:	sub	x21, x2, x8
   4f0ec:	str	x10, [sp, #8]
   4f0f0:	tbnz	x21, #63, 4f22c <mpfr_set_z_2exp@@Base+0x23c>
   4f0f4:	add	x1, x23, x21, lsl #3
   4f0f8:	cbz	w24, 4f264 <mpfr_set_z_2exp@@Base+0x274>
   4f0fc:	mov	x0, x22
   4f100:	mov	x2, x8
   4f104:	mov	w3, w24
   4f108:	bl	bd70 <__gmpn_lshift@plt>
   4f10c:	cmp	x21, #0x1
   4f110:	b.ge	4f36c <mpfr_set_z_2exp@@Base+0x37c>  // b.tcont
   4f114:	ldr	w8, [x20]
   4f118:	neg	w8, w8
   4f11c:	ands	w8, w8, #0x3f
   4f120:	b.eq	4f27c <mpfr_set_z_2exp@@Base+0x28c>  // b.none
   4f124:	ldr	x11, [x22]
   4f128:	sub	w8, w8, #0x1
   4f12c:	mov	w9, #0x1                   	// #1
   4f130:	lsl	x9, x9, x8
   4f134:	sub	x10, x9, #0x1
   4f138:	neg	x12, x9, lsl #1
   4f13c:	lsl	x8, x9, #1
   4f140:	and	x9, x11, x9
   4f144:	and	x10, x11, x10
   4f148:	and	x11, x11, x12
   4f14c:	str	x11, [x22]
   4f150:	cbnz	x10, 4f15c <mpfr_set_z_2exp@@Base+0x16c>
   4f154:	cmp	x21, #0x1
   4f158:	b.ge	4f38c <mpfr_set_z_2exp@@Base+0x39c>  // b.tcont
   4f15c:	cbnz	w27, 4f294 <mpfr_set_z_2exp@@Base+0x2a4>
   4f160:	cbz	x9, 4f2b0 <mpfr_set_z_2exp@@Base+0x2c0>
   4f164:	cbnz	x10, 4f174 <mpfr_set_z_2exp@@Base+0x184>
   4f168:	ldr	x11, [x22]
   4f16c:	tst	x11, x8
   4f170:	b.eq	4f2b0 <mpfr_set_z_2exp@@Base+0x2c0>  // b.none
   4f174:	ldr	x9, [x22]
   4f178:	adds	x8, x9, x8
   4f17c:	str	x8, [x22]
   4f180:	b.cc	4f1d0 <mpfr_set_z_2exp@@Base+0x1e0>  // b.lo, b.ul, b.last
   4f184:	mov	w8, #0x1                   	// #1
   4f188:	cmp	x8, x28
   4f18c:	b.gt	4f1a8 <mpfr_set_z_2exp@@Base+0x1b8>
   4f190:	ldr	x9, [x22, x8, lsl #3]
   4f194:	adds	x9, x9, #0x1
   4f198:	str	x9, [x22, x8, lsl #3]
   4f19c:	add	x8, x8, #0x1
   4f1a0:	b.cs	4f188 <mpfr_set_z_2exp@@Base+0x198>  // b.hs, b.nlast
   4f1a4:	b	4f1d0 <mpfr_set_z_2exp@@Base+0x1e0>
   4f1a8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f1ac:	ldr	x1, [x0, #2624]
   4f1b0:	add	x0, x0, #0xa40
   4f1b4:	blr	x1
   4f1b8:	ldr	x8, [x25, x0]
   4f1bc:	cmp	x26, x8
   4f1c0:	b.eq	4f1d8 <mpfr_set_z_2exp@@Base+0x1e8>  // b.none
   4f1c4:	ldr	x26, [sp, #8]
   4f1c8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   4f1cc:	str	x8, [x22, x28, lsl #3]
   4f1d0:	mov	w8, #0x1                   	// #1
   4f1d4:	b	4f2bc <mpfr_set_z_2exp@@Base+0x2cc>
   4f1d8:	mov	x0, x20
   4f1dc:	mov	w1, w27
   4f1e0:	mov	w2, w19
   4f1e4:	ldp	x20, x19, [sp, #96]
   4f1e8:	ldp	x22, x21, [sp, #80]
   4f1ec:	ldp	x24, x23, [sp, #64]
   4f1f0:	ldp	x26, x25, [sp, #48]
   4f1f4:	ldp	x28, x27, [sp, #32]
   4f1f8:	ldp	x29, x30, [sp, #16]
   4f1fc:	add	sp, sp, #0x70
   4f200:	b	bff0 <mpfr_overflow@plt>
   4f204:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4f208:	mov	w10, #0x1                   	// #1
   4f20c:	mov	w8, wzr
   4f210:	str	x9, [x20, #16]
   4f214:	str	w10, [x20, #8]
   4f218:	b	4f304 <mpfr_set_z_2exp@@Base+0x314>
   4f21c:	cmp	w27, #0x0
   4f220:	csinc	w1, w27, wzr, ne  // ne = any
   4f224:	mov	x0, x20
   4f228:	b	4f348 <mpfr_set_z_2exp@@Base+0x358>
   4f22c:	mov	w28, w27
   4f230:	neg	x27, x21
   4f234:	sub	x0, x22, x21, lsl #3
   4f238:	cbz	w24, 4f3d4 <mpfr_set_z_2exp@@Base+0x3e4>
   4f23c:	mov	x1, x23
   4f240:	mov	w3, w24
   4f244:	bl	bd70 <__gmpn_lshift@plt>
   4f248:	lsl	x2, x27, #3
   4f24c:	mov	x0, x22
   4f250:	mov	w1, wzr
   4f254:	bl	c1b0 <memset@plt>
   4f258:	mov	w8, wzr
   4f25c:	mov	w27, w28
   4f260:	b	4f2bc <mpfr_set_z_2exp@@Base+0x2cc>
   4f264:	cmp	x22, x1
   4f268:	b.eq	4f114 <mpfr_set_z_2exp@@Base+0x124>  // b.none
   4f26c:	lsl	x2, x8, #3
   4f270:	mov	x0, x22
   4f274:	bl	bad0 <memcpy@plt>
   4f278:	b	4f114 <mpfr_set_z_2exp@@Base+0x124>
   4f27c:	subs	x21, x21, #0x1
   4f280:	mov	w8, #0x1                   	// #1
   4f284:	b.ge	4f3ec <mpfr_set_z_2exp@@Base+0x3fc>  // b.tcont
   4f288:	mov	x9, xzr
   4f28c:	mov	x10, xzr
   4f290:	b	4f15c <mpfr_set_z_2exp@@Base+0x16c>
   4f294:	cmp	w27, #0x1
   4f298:	b.eq	4f2b0 <mpfr_set_z_2exp@@Base+0x2c0>  // b.none
   4f29c:	add	w11, w27, w19, lsr #31
   4f2a0:	cmp	w11, #0x3
   4f2a4:	b.eq	4f2b0 <mpfr_set_z_2exp@@Base+0x2c0>  // b.none
   4f2a8:	orr	x11, x10, x9
   4f2ac:	cbnz	x11, 4f174 <mpfr_set_z_2exp@@Base+0x184>
   4f2b0:	orr	x8, x9, x10
   4f2b4:	cmp	x8, #0x0
   4f2b8:	csetm	w8, ne  // ne = any
   4f2bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f2c0:	ldr	x1, [x0, #2592]
   4f2c4:	add	x0, x0, #0xa20
   4f2c8:	blr	x1
   4f2cc:	ldr	x9, [x25, x0]
   4f2d0:	cmp	x26, x9
   4f2d4:	b.lt	4f328 <mpfr_set_z_2exp@@Base+0x338>  // b.tstop
   4f2d8:	mul	w8, w8, w19
   4f2dc:	str	x26, [x20, #16]
   4f2e0:	str	w19, [x20, #8]
   4f2e4:	cbz	w8, 4f304 <mpfr_set_z_2exp@@Base+0x314>
   4f2e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f2ec:	ldr	x1, [x0, #2656]
   4f2f0:	add	x0, x0, #0xa60
   4f2f4:	blr	x1
   4f2f8:	ldr	w9, [x25, x0]
   4f2fc:	orr	w9, w9, #0x8
   4f300:	str	w9, [x25, x0]
   4f304:	ldp	x20, x19, [sp, #96]
   4f308:	ldp	x22, x21, [sp, #80]
   4f30c:	ldp	x24, x23, [sp, #64]
   4f310:	ldp	x26, x25, [sp, #48]
   4f314:	ldp	x28, x27, [sp, #32]
   4f318:	ldp	x29, x30, [sp, #16]
   4f31c:	mov	w0, w8
   4f320:	add	sp, sp, #0x70
   4f324:	ret
   4f328:	orr	w8, w8, w27
   4f32c:	cbnz	w8, 4f340 <mpfr_set_z_2exp@@Base+0x350>
   4f330:	mov	x0, x20
   4f334:	bl	bfb0 <mpfr_powerof2_raw@plt>
   4f338:	cmp	w0, #0x0
   4f33c:	cset	w27, ne  // ne = any
   4f340:	mov	x0, x20
   4f344:	mov	w1, w27
   4f348:	mov	w2, w19
   4f34c:	ldp	x20, x19, [sp, #96]
   4f350:	ldp	x22, x21, [sp, #80]
   4f354:	ldp	x24, x23, [sp, #64]
   4f358:	ldp	x26, x25, [sp, #48]
   4f35c:	ldp	x28, x27, [sp, #32]
   4f360:	ldp	x29, x30, [sp, #16]
   4f364:	add	sp, sp, #0x70
   4f368:	b	c420 <mpfr_underflow@plt>
   4f36c:	add	x8, x23, x21, lsl #3
   4f370:	ldur	x8, [x8, #-8]
   4f374:	ldr	x9, [x22]
   4f378:	neg	x10, x24
   4f37c:	lsr	x8, x8, x10
   4f380:	orr	x8, x9, x8
   4f384:	str	x8, [x22]
   4f388:	b	4f114 <mpfr_set_z_2exp@@Base+0x124>
   4f38c:	add	x10, x23, x21, lsl #3
   4f390:	ldur	x10, [x10, #-8]
   4f394:	neg	w11, w24
   4f398:	mov	x12, #0xffffffffffffffff    	// #-1
   4f39c:	lsl	x11, x12, x11
   4f3a0:	cmp	w24, #0x0
   4f3a4:	csinv	x11, x12, x11, eq  // eq = none
   4f3a8:	cmp	x21, #0x2
   4f3ac:	and	x10, x10, x11
   4f3b0:	b.lt	4f15c <mpfr_set_z_2exp@@Base+0x16c>  // b.tstop
   4f3b4:	cbnz	x10, 4f15c <mpfr_set_z_2exp@@Base+0x16c>
   4f3b8:	sub	x11, x23, #0x10
   4f3bc:	ldr	x10, [x11, x21, lsl #3]
   4f3c0:	sub	x21, x21, #0x1
   4f3c4:	cmp	x21, #0x2
   4f3c8:	b.lt	4f15c <mpfr_set_z_2exp@@Base+0x16c>  // b.tstop
   4f3cc:	cbz	x10, 4f3bc <mpfr_set_z_2exp@@Base+0x3cc>
   4f3d0:	b	4f15c <mpfr_set_z_2exp@@Base+0x16c>
   4f3d4:	cmp	x0, x23
   4f3d8:	b.eq	4f248 <mpfr_set_z_2exp@@Base+0x258>  // b.none
   4f3dc:	lsl	x2, x2, #3
   4f3e0:	mov	x1, x23
   4f3e4:	bl	bad0 <memcpy@plt>
   4f3e8:	b	4f248 <mpfr_set_z_2exp@@Base+0x258>
   4f3ec:	mov	w9, #0x3f                  	// #63
   4f3f0:	ldr	x10, [x23, x21, lsl #3]
   4f3f4:	sub	w9, w9, w24
   4f3f8:	lsl	x8, x8, x9
   4f3fc:	sub	x11, x8, #0x1
   4f400:	and	x9, x10, x8
   4f404:	and	x10, x10, x11
   4f408:	mov	w8, #0x1                   	// #1
   4f40c:	mov	w24, wzr
   4f410:	cbz	x10, 4f154 <mpfr_set_z_2exp@@Base+0x164>
   4f414:	b	4f15c <mpfr_set_z_2exp@@Base+0x16c>

000000000004f418 <mpfr_ai@@Base>:
   4f418:	stp	x29, x30, [sp, #-96]!
   4f41c:	stp	x28, x27, [sp, #16]
   4f420:	stp	x26, x25, [sp, #32]
   4f424:	stp	x24, x23, [sp, #48]
   4f428:	stp	x22, x21, [sp, #64]
   4f42c:	stp	x20, x19, [sp, #80]
   4f430:	mov	x29, sp
   4f434:	sub	sp, sp, #0x230
   4f438:	ldr	x8, [x1, #16]
   4f43c:	mov	x27, #0x4                   	// #4
   4f440:	movk	x27, #0x8000, lsl #48
   4f444:	mov	w24, w2
   4f448:	mov	x26, x1
   4f44c:	cmp	x8, x27
   4f450:	mov	x25, x0
   4f454:	b.lt	50720 <mpfr_ai@@Base+0x1308>  // b.tstop
   4f458:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f45c:	ldr	x1, [x0, #2656]
   4f460:	add	x0, x0, #0xa60
   4f464:	blr	x1
   4f468:	mrs	x23, tpidr_el0
   4f46c:	ldr	w20, [x23, x0]
   4f470:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f474:	ldr	x1, [x0, #2592]
   4f478:	add	x0, x0, #0xa20
   4f47c:	blr	x1
   4f480:	ldr	x9, [x23, x0]
   4f484:	mov	x8, x0
   4f488:	str	x9, [sp, #112]
   4f48c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f490:	ldr	x1, [x0, #2624]
   4f494:	add	x0, x0, #0xa40
   4f498:	blr	x1
   4f49c:	ldr	x21, [x23, x0]
   4f4a0:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   4f4a4:	str	x9, [x23, x8]
   4f4a8:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4f4ac:	str	x8, [x23, x0]
   4f4b0:	add	x0, sp, #0xc8
   4f4b4:	mov	w1, #0x20                  	// #32
   4f4b8:	bl	cad0 <mpfr_init2@plt>
   4f4bc:	add	x0, sp, #0xa8
   4f4c0:	mov	w1, #0x20                  	// #32
   4f4c4:	bl	cad0 <mpfr_init2@plt>
   4f4c8:	ldr	w3, [x26, #8]
   4f4cc:	add	x0, sp, #0xc8
   4f4d0:	mov	x1, x26
   4f4d4:	mov	w2, wzr
   4f4d8:	bl	c6f0 <mpfr_set4@plt>
   4f4dc:	add	x0, sp, #0xa8
   4f4e0:	mov	w1, #0x51f                 	// #1311
   4f4e4:	mov	x2, xzr
   4f4e8:	mov	w3, wzr
   4f4ec:	bl	c640 <mpfr_set_ui_2exp@plt>
   4f4f0:	ldr	x2, [x25]
   4f4f4:	add	x0, sp, #0xa8
   4f4f8:	add	x1, sp, #0xa8
   4f4fc:	mov	w3, wzr
   4f500:	bl	bb10 <mpfr_mul_ui@plt>
   4f504:	ldr	w8, [x26, #8]
   4f508:	tbnz	w8, #31, 4f524 <mpfr_ai@@Base+0x10c>
   4f50c:	add	x0, sp, #0xc8
   4f510:	add	x1, sp, #0xc8
   4f514:	mov	w2, #0x4ccd                	// #19661
   4f518:	mov	w3, wzr
   4f51c:	bl	bb10 <mpfr_mul_ui@plt>
   4f520:	b	4f538 <mpfr_ai@@Base+0x120>
   4f524:	add	x0, sp, #0xc8
   4f528:	add	x1, sp, #0xc8
   4f52c:	mov	x2, #0xffffffffffffcccd    	// #-13107
   4f530:	mov	w3, wzr
   4f534:	bl	c9c0 <mpfr_mul_si@plt>
   4f538:	add	x0, sp, #0xc8
   4f53c:	add	x1, sp, #0xc8
   4f540:	add	x2, sp, #0xa8
   4f544:	mov	w3, wzr
   4f548:	bl	c240 <mpfr_add@plt>
   4f54c:	add	x0, sp, #0xa8
   4f550:	bl	c110 <mpfr_clear@plt>
   4f554:	add	x0, sp, #0xc8
   4f558:	mov	w1, #0x100000              	// #1048576
   4f55c:	mov	x2, xzr
   4f560:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   4f564:	mov	w19, w0
   4f568:	add	x0, sp, #0xc8
   4f56c:	bl	c110 <mpfr_clear@plt>
   4f570:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f574:	ldr	x1, [x0, #2656]
   4f578:	add	x0, x0, #0xa60
   4f57c:	blr	x1
   4f580:	str	w20, [x23, x0]
   4f584:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f588:	ldr	x1, [x0, #2592]
   4f58c:	add	x0, x0, #0xa20
   4f590:	blr	x1
   4f594:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   4f598:	str	x8, [x23, x0]
   4f59c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   4f5a0:	ldr	x1, [x0, #2624]
   4f5a4:	add	x0, x0, #0xa40
   4f5a8:	blr	x1
   4f5ac:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   4f5b0:	cmp	w19, #0x1
   4f5b4:	str	x8, [x23, x0]
   4f5b8:	str	w24, [sp, #124]
   4f5bc:	str	x25, [sp, #128]
   4f5c0:	str	x23, [sp, #104]
   4f5c4:	str	w20, [sp, #100]
   4f5c8:	str	x21, [sp, #88]
   4f5cc:	str	x26, [sp, #40]
   4f5d0:	b.lt	4f690 <mpfr_ai@@Base+0x278>  // b.tstop
   4f5d4:	ldr	x19, [x25]
   4f5d8:	sub	x0, x29, #0xe8
   4f5dc:	mov	w1, #0x20                  	// #32
   4f5e0:	bl	cad0 <mpfr_init2@plt>
   4f5e4:	add	x0, sp, #0x128
   4f5e8:	mov	w1, #0x20                  	// #32
   4f5ec:	bl	cad0 <mpfr_init2@plt>
   4f5f0:	sub	x0, x29, #0xe8
   4f5f4:	mov	w2, #0x2                   	// #2
   4f5f8:	mov	w3, #0x1                   	// #1
   4f5fc:	mov	x1, x26
   4f600:	bl	c6f0 <mpfr_set4@plt>
   4f604:	sub	x0, x29, #0xe8
   4f608:	sub	x1, x29, #0xe8
   4f60c:	mov	w2, #0x3                   	// #3
   4f610:	mov	w3, #0x2                   	// #2
   4f614:	bl	c020 <mpfr_pow_ui@plt>
   4f618:	sub	x0, x29, #0xe8
   4f61c:	sub	x1, x29, #0xe8
   4f620:	mov	w2, #0x2                   	// #2
   4f624:	bl	c990 <mpfr_sqrt@plt>
   4f628:	adrp	x1, 5f000 <mpfr_bases@@Base+0x14f8>
   4f62c:	add	x1, x1, #0x468
   4f630:	add	x0, sp, #0x128
   4f634:	mov	w2, #0xa                   	// #10
   4f638:	mov	w3, #0x2                   	// #2
   4f63c:	bl	c710 <mpfr_set_str@plt>
   4f640:	add	x0, sp, #0x128
   4f644:	sub	x1, x29, #0xe8
   4f648:	add	x2, sp, #0x128
   4f64c:	mov	w3, #0x2                   	// #2
   4f650:	bl	be00 <mpfr_mul@plt>
   4f654:	ldr	x21, [x26, #16]
   4f658:	cmp	x21, #0x1
   4f65c:	b.lt	4f768 <mpfr_ai@@Base+0x350>  // b.tstop
   4f660:	add	x0, sp, #0x128
   4f664:	mov	w1, #0x2                   	// #2
   4f668:	bl	bd50 <mpfr_get_ui@plt>
   4f66c:	ldr	x21, [x26, #16]
   4f670:	sub	x8, x21, #0x1
   4f674:	add	x9, x21, #0x2
   4f678:	cmp	x8, #0x0
   4f67c:	csel	x8, x9, x8, lt  // lt = tstop
   4f680:	mov	x9, #0xffffffffffffffff    	// #-1
   4f684:	eor	x8, x9, x8, asr #2
   4f688:	add	x20, x0, x8
   4f68c:	b	4f76c <mpfr_ai@@Base+0x354>
   4f690:	ldr	x8, [x26, #16]
   4f694:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   4f698:	cmp	x8, x9
   4f69c:	b.eq	507ac <mpfr_ai@@Base+0x1394>  // b.none
   4f6a0:	ldr	x19, [x25]
   4f6a4:	sub	x8, x27, #0x10f
   4f6a8:	cmp	x19, x8
   4f6ac:	b.ge	50998 <mpfr_ai@@Base+0x1580>  // b.tcont
   4f6b0:	sub	x0, x29, #0xe8
   4f6b4:	mov	w1, #0x20                  	// #32
   4f6b8:	bl	cad0 <mpfr_init2@plt>
   4f6bc:	add	x0, sp, #0x128
   4f6c0:	mov	w1, #0x20                  	// #32
   4f6c4:	bl	cad0 <mpfr_init2@plt>
   4f6c8:	sub	x0, x29, #0xe8
   4f6cc:	mov	w2, #0x2                   	// #2
   4f6d0:	mov	w3, #0x1                   	// #1
   4f6d4:	mov	x1, x26
   4f6d8:	bl	c6f0 <mpfr_set4@plt>
   4f6dc:	sub	x0, x29, #0xe8
   4f6e0:	sub	x1, x29, #0xe8
   4f6e4:	mov	w2, #0x3                   	// #3
   4f6e8:	mov	w3, #0x2                   	// #2
   4f6ec:	bl	c020 <mpfr_pow_ui@plt>
   4f6f0:	sub	x0, x29, #0xe8
   4f6f4:	sub	x1, x29, #0xe8
   4f6f8:	mov	w2, #0x2                   	// #2
   4f6fc:	bl	c990 <mpfr_sqrt@plt>
   4f700:	adrp	x1, 5f000 <mpfr_bases@@Base+0x14f8>
   4f704:	add	x1, x1, #0x468
   4f708:	add	x0, sp, #0x128
   4f70c:	mov	w2, #0xa                   	// #10
   4f710:	mov	w3, #0x2                   	// #2
   4f714:	bl	c710 <mpfr_set_str@plt>
   4f718:	add	x0, sp, #0x128
   4f71c:	sub	x1, x29, #0xe8
   4f720:	add	x2, sp, #0x128
   4f724:	mov	w3, #0x2                   	// #2
   4f728:	bl	be00 <mpfr_mul@plt>
   4f72c:	ldr	x22, [x26, #16]
   4f730:	cmp	x22, #0x1
   4f734:	b.lt	4f7b0 <mpfr_ai@@Base+0x398>  // b.tstop
   4f738:	add	x0, sp, #0x128
   4f73c:	mov	w1, #0x2                   	// #2
   4f740:	bl	bd50 <mpfr_get_ui@plt>
   4f744:	ldr	x22, [x26, #16]
   4f748:	sub	x8, x22, #0x1
   4f74c:	add	x9, x22, #0x2
   4f750:	cmp	x8, #0x0
   4f754:	csel	x8, x9, x8, lt  // lt = tstop
   4f758:	mov	x9, #0xffffffffffffffff    	// #-1
   4f75c:	eor	x8, x9, x8, asr #2
   4f760:	add	x20, x0, x8
   4f764:	b	4f7b4 <mpfr_ai@@Base+0x39c>
   4f768:	mov	x20, xzr
   4f76c:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4f770:	cmp	x21, x8
   4f774:	add	x28, x19, #0xb
   4f778:	b.ne	4f784 <mpfr_ai@@Base+0x36c>  // b.any
   4f77c:	mov	w21, #0x2                   	// #2
   4f780:	b	4f804 <mpfr_ai@@Base+0x3ec>
   4f784:	ldr	w8, [x26, #8]
   4f788:	cmp	w8, #0x1
   4f78c:	b.lt	4f7f8 <mpfr_ai@@Base+0x3e0>  // b.tstop
   4f790:	cmp	x21, #0x1
   4f794:	b.lt	4f800 <mpfr_ai@@Base+0x3e8>  // b.tstop
   4f798:	add	x0, sp, #0x128
   4f79c:	mov	w1, #0x2                   	// #2
   4f7a0:	bl	bd50 <mpfr_get_ui@plt>
   4f7a4:	add	x8, x0, x21, lsr #2
   4f7a8:	add	x21, x8, #0x3
   4f7ac:	b	4f804 <mpfr_ai@@Base+0x3ec>
   4f7b0:	mov	x20, xzr
   4f7b4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   4f7b8:	cmp	x22, x8
   4f7bc:	add	x21, x19, #0xb
   4f7c0:	b.ne	4f7cc <mpfr_ai@@Base+0x3b4>  // b.any
   4f7c4:	mov	w22, #0x2                   	// #2
   4f7c8:	b	5013c <mpfr_ai@@Base+0xd24>
   4f7cc:	ldr	w8, [x26, #8]
   4f7d0:	cmp	w8, #0x1
   4f7d4:	b.lt	50130 <mpfr_ai@@Base+0xd18>  // b.tstop
   4f7d8:	cmp	x22, #0x1
   4f7dc:	b.lt	50138 <mpfr_ai@@Base+0xd20>  // b.tstop
   4f7e0:	add	x0, sp, #0x128
   4f7e4:	mov	w1, #0x2                   	// #2
   4f7e8:	bl	bd50 <mpfr_get_ui@plt>
   4f7ec:	add	x8, x0, x22, lsr #2
   4f7f0:	add	x22, x8, #0x3
   4f7f4:	b	5013c <mpfr_ai@@Base+0xd24>
   4f7f8:	mov	w21, #0xa                   	// #10
   4f7fc:	b	4f804 <mpfr_ai@@Base+0x3ec>
   4f800:	mov	w21, #0x3                   	// #3
   4f804:	cmp	x28, #0x1
   4f808:	b.eq	5076c <mpfr_ai@@Base+0x1354>  // b.none
   4f80c:	cmn	x19, #0xa
   4f810:	b.le	50790 <mpfr_ai@@Base+0x1378>
   4f814:	add	x8, x19, #0xa
   4f818:	clz	x8, x8
   4f81c:	mov	w9, #0x40                  	// #64
   4f820:	sub	x8, x9, x8
   4f824:	add	x9, x20, #0x6
   4f828:	str	x9, [sp, #8]
   4f82c:	add	x9, x9, x28
   4f830:	add	x9, x9, x21
   4f834:	mov	x0, x28
   4f838:	str	x21, [sp, #24]
   4f83c:	add	x25, x9, x8
   4f840:	bl	bfd0 <__gmpfr_isqrt@plt>
   4f844:	lsl	x8, x0, #5
   4f848:	mov	x23, x0
   4f84c:	add	x0, x8, #0x20
   4f850:	bl	cd50 <mpfr_allocate_func@plt>
   4f854:	mov	x22, x0
   4f858:	cbz	x0, 50774 <mpfr_ai@@Base+0x135c>
   4f85c:	mov	x21, xzr
   4f860:	mov	x19, x22
   4f864:	mov	x0, x19
   4f868:	bl	bc80 <mpfr_init@plt>
   4f86c:	add	x21, x21, #0x1
   4f870:	cmp	x21, x23
   4f874:	add	x19, x19, #0x20
   4f878:	b.ls	4f864 <mpfr_ai@@Base+0x44c>  // b.plast
   4f87c:	sub	x0, x29, #0x68
   4f880:	bl	bc80 <mpfr_init@plt>
   4f884:	sub	x0, x29, #0x88
   4f888:	bl	bc80 <mpfr_init@plt>
   4f88c:	sub	x0, x29, #0xa8
   4f890:	bl	bc80 <mpfr_init@plt>
   4f894:	sub	x0, x29, #0xc8
   4f898:	bl	bc80 <mpfr_init@plt>
   4f89c:	add	x0, sp, #0x108
   4f8a0:	bl	bc80 <mpfr_init@plt>
   4f8a4:	add	x0, sp, #0xe8
   4f8a8:	bl	bc80 <mpfr_init@plt>
   4f8ac:	add	x8, x20, #0x45
   4f8b0:	str	x8, [sp, #56]
   4f8b4:	cmp	w24, #0x0
   4f8b8:	add	x8, x20, #0x8
   4f8bc:	str	x8, [sp]
   4f8c0:	cset	w8, eq  // eq = none
   4f8c4:	mov	w24, #0x1                   	// #1
   4f8c8:	mov	w21, #0x2                   	// #2
   4f8cc:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   4f8d0:	str	x8, [sp, #48]
   4f8d4:	mov	w8, #0x40                  	// #64
   4f8d8:	str	x8, [sp, #16]
   4f8dc:	add	x8, x28, #0x4
   4f8e0:	str	x8, [sp, #144]
   4f8e4:	add	x8, x28, #0x1
   4f8e8:	str	x8, [sp, #32]
   4f8ec:	str	x28, [sp, #64]
   4f8f0:	mov	x20, xzr
   4f8f4:	mov	x19, x22
   4f8f8:	mov	x0, x19
   4f8fc:	mov	x1, x25
   4f900:	bl	bf80 <mpfr_set_prec@plt>
   4f904:	add	x20, x20, #0x1
   4f908:	cmp	x20, x23
   4f90c:	add	x19, x19, #0x20
   4f910:	b.ls	4f8f8 <mpfr_ai@@Base+0x4e0>  // b.plast
   4f914:	sub	x0, x29, #0x68
   4f918:	mov	x1, x25
   4f91c:	bl	bf80 <mpfr_set_prec@plt>
   4f920:	sub	x0, x29, #0x88
   4f924:	mov	x1, x25
   4f928:	bl	bf80 <mpfr_set_prec@plt>
   4f92c:	sub	x0, x29, #0xa8
   4f930:	mov	x1, x25
   4f934:	bl	bf80 <mpfr_set_prec@plt>
   4f938:	sub	x0, x29, #0xc8
   4f93c:	mov	x1, x25
   4f940:	bl	bf80 <mpfr_set_prec@plt>
   4f944:	sub	x0, x29, #0x88
   4f948:	mov	w1, #0x1                   	// #1
   4f94c:	mov	x2, xzr
   4f950:	mov	w3, wzr
   4f954:	bl	c640 <mpfr_set_ui_2exp@plt>
   4f958:	ldr	w3, [x26, #8]
   4f95c:	sub	x0, x29, #0xa8
   4f960:	mov	x1, x26
   4f964:	mov	w2, wzr
   4f968:	bl	c6f0 <mpfr_set4@plt>
   4f96c:	mov	w1, #0x1                   	// #1
   4f970:	mov	w3, #0x2                   	// #2
   4f974:	mov	x0, x22
   4f978:	mov	x2, xzr
   4f97c:	bl	c640 <mpfr_set_ui_2exp@plt>
   4f980:	add	x19, x22, #0x20
   4f984:	sub	x1, x29, #0xa8
   4f988:	mov	w2, #0x2                   	// #2
   4f98c:	mov	x0, x19
   4f990:	bl	c450 <mpfr_sqr@plt>
   4f994:	ldr	w8, [x26, #8]
   4f998:	mov	x0, x19
   4f99c:	mov	x1, x19
   4f9a0:	mov	x2, x26
   4f9a4:	cmp	w8, #0x0
   4f9a8:	cinc	w3, w21, le
   4f9ac:	bl	be00 <mpfr_mul@plt>
   4f9b0:	ldr	w8, [x26, #8]
   4f9b4:	tbz	w8, #31, 4f9c4 <mpfr_ai@@Base+0x5ac>
   4f9b8:	ldr	w8, [x22, #40]
   4f9bc:	neg	w8, w8
   4f9c0:	str	w8, [x22, #40]
   4f9c4:	mov	w1, #0x2                   	// #2
   4f9c8:	mov	x0, x19
   4f9cc:	bl	bd50 <mpfr_get_ui@plt>
   4f9d0:	ldr	w8, [x26, #8]
   4f9d4:	str	x0, [sp, #136]
   4f9d8:	tbz	w8, #31, 4f9e8 <mpfr_ai@@Base+0x5d0>
   4f9dc:	ldr	w8, [x22, #40]
   4f9e0:	neg	w8, w8
   4f9e4:	str	w8, [x22, #40]
   4f9e8:	cmp	x23, #0x2
   4f9ec:	b.cc	4fa38 <mpfr_ai@@Base+0x620>  // b.lo, b.ul, b.last
   4f9f0:	add	x20, x22, #0x20
   4f9f4:	mov	w21, #0x2                   	// #2
   4f9f8:	add	x0, x20, #0x20
   4f9fc:	tbnz	w21, #0, 4fa18 <mpfr_ai@@Base+0x600>
   4fa00:	lsl	x8, x21, #4
   4fa04:	and	x8, x8, #0xffffffffffffffe0
   4fa08:	add	x1, x22, x8
   4fa0c:	mov	w2, wzr
   4fa10:	bl	c450 <mpfr_sqr@plt>
   4fa14:	b	4fa28 <mpfr_ai@@Base+0x610>
   4fa18:	mov	x1, x20
   4fa1c:	mov	x2, x19
   4fa20:	mov	w3, wzr
   4fa24:	bl	be00 <mpfr_mul@plt>
   4fa28:	add	x21, x21, #0x1
   4fa2c:	cmp	x21, x23
   4fa30:	add	x20, x20, #0x20
   4fa34:	b.ls	4f9f8 <mpfr_ai@@Base+0x5e0>  // b.plast
   4fa38:	add	x0, sp, #0x108
   4fa3c:	add	x1, sp, #0xe8
   4fa40:	mov	x2, x25
   4fa44:	str	x25, [sp, #72]
   4fa48:	bl	bc50 <mpfr_gamma_one_and_two_third@plt>
   4fa4c:	sub	x0, x29, #0x88
   4fa50:	mov	w1, #0x9                   	// #9
   4fa54:	mov	x2, xzr
   4fa58:	mov	w3, wzr
   4fa5c:	bl	c640 <mpfr_set_ui_2exp@plt>
   4fa60:	sub	x0, x29, #0x88
   4fa64:	sub	x1, x29, #0x88
   4fa68:	mov	w2, wzr
   4fa6c:	bl	cd80 <mpfr_cbrt@plt>
   4fa70:	sub	x0, x29, #0x88
   4fa74:	sub	x1, x29, #0x88
   4fa78:	add	x2, sp, #0xe8
   4fa7c:	mov	w3, wzr
   4fa80:	bl	be00 <mpfr_mul@plt>
   4fa84:	sub	x0, x29, #0x88
   4fa88:	sub	x2, x29, #0x88
   4fa8c:	mov	w1, #0x1                   	// #1
   4fa90:	mov	w3, wzr
   4fa94:	bl	c350 <mpfr_ui_div@plt>
   4fa98:	sub	x0, x29, #0xa8
   4fa9c:	mov	w1, #0x3                   	// #3
   4faa0:	mov	x2, xzr
   4faa4:	mov	w3, wzr
   4faa8:	bl	c640 <mpfr_set_ui_2exp@plt>
   4faac:	sub	x0, x29, #0xa8
   4fab0:	sub	x1, x29, #0xa8
   4fab4:	mov	w2, wzr
   4fab8:	bl	cd80 <mpfr_cbrt@plt>
   4fabc:	sub	x0, x29, #0xa8
   4fac0:	sub	x1, x29, #0xa8
   4fac4:	add	x2, sp, #0x108
   4fac8:	mov	w3, wzr
   4facc:	bl	be00 <mpfr_mul@plt>
   4fad0:	sub	x0, x29, #0xa8
   4fad4:	sub	x1, x29, #0xa8
   4fad8:	mov	w2, wzr
   4fadc:	bl	be20 <mpfr_neg@plt>
   4fae0:	sub	x0, x29, #0xa8
   4fae4:	sub	x2, x29, #0xa8
   4fae8:	mov	x1, x26
   4faec:	mov	w3, wzr
   4faf0:	bl	c670 <mpfr_div@plt>
   4faf4:	sub	x21, x23, #0x1
   4faf8:	add	x8, x23, x23, lsl #1
   4fafc:	add	x25, x22, x23, lsl #5
   4fb00:	add	x26, x22, x21, lsl #5
   4fb04:	mov	x19, xzr
   4fb08:	stur	w24, [x29, #-192]
   4fb0c:	sub	x8, x8, #0x4
   4fb10:	add	x24, x26, #0x8
   4fb14:	sub	x28, x25, #0x40
   4fb18:	stur	x27, [x29, #-184]
   4fb1c:	str	x22, [sp, #80]
   4fb20:	stp	x8, xzr, [sp, #152]
   4fb24:	ldr	w3, [x24]
   4fb28:	sub	x0, x29, #0x68
   4fb2c:	mov	x1, x26
   4fb30:	mov	w2, wzr
   4fb34:	bl	c6f0 <mpfr_set4@plt>
   4fb38:	ldr	x8, [sp, #152]
   4fb3c:	mov	x22, x28
   4fb40:	mov	w27, #0x1                   	// #1
   4fb44:	add	x20, x8, x19
   4fb48:	add	x3, x20, #0x1
   4fb4c:	sub	x0, x29, #0x68
   4fb50:	sub	x1, x29, #0x68
   4fb54:	mov	x2, x20
   4fb58:	mov	w4, wzr
   4fb5c:	bl	bf30 <mpfr_div_ui2@plt>
   4fb60:	sub	x0, x29, #0x68
   4fb64:	sub	x1, x29, #0x68
   4fb68:	mov	x2, x22
   4fb6c:	mov	w3, wzr
   4fb70:	bl	c240 <mpfr_add@plt>
   4fb74:	add	x27, x27, #0x1
   4fb78:	sub	x20, x20, #0x3
   4fb7c:	cmp	x23, x27
   4fb80:	sub	x22, x22, #0x20
   4fb84:	b.ne	4fb48 <mpfr_ai@@Base+0x730>  // b.any
   4fb88:	sub	x0, x29, #0x68
   4fb8c:	sub	x1, x29, #0x68
   4fb90:	sub	x2, x29, #0x88
   4fb94:	mov	w3, wzr
   4fb98:	bl	be00 <mpfr_mul@plt>
   4fb9c:	sub	x0, x29, #0xc8
   4fba0:	sub	x1, x29, #0xc8
   4fba4:	sub	x2, x29, #0x68
   4fba8:	mov	w3, wzr
   4fbac:	bl	c240 <mpfr_add@plt>
   4fbb0:	sub	x0, x29, #0x88
   4fbb4:	sub	x1, x29, #0x88
   4fbb8:	mov	x2, x25
   4fbbc:	mov	w3, wzr
   4fbc0:	bl	be00 <mpfr_mul@plt>
   4fbc4:	mov	x22, xzr
   4fbc8:	sub	x27, x19, #0x2
   4fbcc:	add	x8, x19, #0x3
   4fbd0:	add	x2, x27, #0x4
   4fbd4:	add	x3, x27, #0x5
   4fbd8:	sub	x0, x29, #0x88
   4fbdc:	sub	x1, x29, #0x88
   4fbe0:	mov	w4, wzr
   4fbe4:	mov	x20, x8
   4fbe8:	bl	bf30 <mpfr_div_ui2@plt>
   4fbec:	add	x22, x22, #0x1
   4fbf0:	add	x27, x27, #0x3
   4fbf4:	cmp	x22, x21
   4fbf8:	add	x8, x20, #0x3
   4fbfc:	b.ls	4fbd0 <mpfr_ai@@Base+0x7b8>  // b.plast
   4fc00:	ldr	w3, [x24]
   4fc04:	sub	x0, x29, #0x68
   4fc08:	mov	x1, x26
   4fc0c:	mov	w2, wzr
   4fc10:	bl	c6f0 <mpfr_set4@plt>
   4fc14:	mov	x19, x28
   4fc18:	mov	w22, #0x1                   	// #1
   4fc1c:	sub	x3, x20, #0x2
   4fc20:	sub	x20, x20, #0x3
   4fc24:	sub	x0, x29, #0x68
   4fc28:	sub	x1, x29, #0x68
   4fc2c:	mov	x2, x20
   4fc30:	mov	w4, wzr
   4fc34:	bl	bf30 <mpfr_div_ui2@plt>
   4fc38:	sub	x0, x29, #0x68
   4fc3c:	sub	x1, x29, #0x68
   4fc40:	mov	x2, x19
   4fc44:	mov	w3, wzr
   4fc48:	bl	c240 <mpfr_add@plt>
   4fc4c:	add	x22, x22, #0x1
   4fc50:	cmp	x23, x22
   4fc54:	sub	x19, x19, #0x20
   4fc58:	b.ne	4fc1c <mpfr_ai@@Base+0x804>  // b.any
   4fc5c:	sub	x0, x29, #0x68
   4fc60:	sub	x1, x29, #0x68
   4fc64:	sub	x2, x29, #0xa8
   4fc68:	mov	w3, wzr
   4fc6c:	bl	be00 <mpfr_mul@plt>
   4fc70:	sub	x0, x29, #0xc8
   4fc74:	sub	x1, x29, #0xc8
   4fc78:	sub	x2, x29, #0x68
   4fc7c:	mov	w3, wzr
   4fc80:	bl	c240 <mpfr_add@plt>
   4fc84:	sub	x0, x29, #0xa8
   4fc88:	sub	x1, x29, #0xa8
   4fc8c:	mov	x2, x25
   4fc90:	mov	w3, wzr
   4fc94:	bl	be00 <mpfr_mul@plt>
   4fc98:	mov	x27, xzr
   4fc9c:	sub	x19, x20, #0x2
   4fca0:	mov	x22, x19
   4fca4:	add	x19, x19, #0x3
   4fca8:	sub	x0, x29, #0xa8
   4fcac:	sub	x1, x29, #0xa8
   4fcb0:	mov	x2, x20
   4fcb4:	mov	x3, x19
   4fcb8:	mov	w4, wzr
   4fcbc:	bl	bf30 <mpfr_div_ui2@plt>
   4fcc0:	add	x27, x27, #0x1
   4fcc4:	cmp	x27, x21
   4fcc8:	add	x20, x22, #0x5
   4fccc:	b.ls	4fca0 <mpfr_ai@@Base+0x888>  // b.plast
   4fcd0:	ldur	x8, [x29, #-120]
   4fcd4:	ldr	x11, [sp, #144]
   4fcd8:	ldur	x10, [x29, #-184]
   4fcdc:	ldur	x9, [x29, #-152]
   4fce0:	mov	x13, #0x8000000000000001    	// #-9223372036854775807
   4fce4:	cmp	x8, x13
   4fce8:	add	x8, x8, x11
   4fcec:	cset	w12, ne  // ne = any
   4fcf0:	cmp	x8, x10
   4fcf4:	add	x11, x9, x11
   4fcf8:	cset	w8, gt
   4fcfc:	cmp	x9, x13
   4fd00:	cset	w9, eq  // eq = none
   4fd04:	cmp	x11, x10
   4fd08:	cset	w10, le
   4fd0c:	add	x19, x22, #0x2
   4fd10:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
   4fd14:	and	w11, w12, w8
   4fd18:	orr	w8, w9, w10
   4fd1c:	tbnz	w11, #0, 4fd38 <mpfr_ai@@Base+0x920>
   4fd20:	cbz	w8, 4fd38 <mpfr_ai@@Base+0x920>
   4fd24:	ldr	x9, [sp, #136]
   4fd28:	add	x8, x22, #0x4
   4fd2c:	mul	x8, x8, x20
   4fd30:	cmp	x9, x8, lsr #1
   4fd34:	b.ls	4fd48 <mpfr_ai@@Base+0x930>  // b.plast
   4fd38:	ldr	x8, [sp, #160]
   4fd3c:	add	x8, x8, #0x1
   4fd40:	str	x8, [sp, #160]
   4fd44:	b	4fb24 <mpfr_ai@@Base+0x70c>
   4fd48:	add	x24, x23, #0x1
   4fd4c:	cmp	x24, #0x1
   4fd50:	b.ls	4fea0 <mpfr_ai@@Base+0xa88>  // b.plast
   4fd54:	ldr	w25, [sp, #124]
   4fd58:	ldr	x26, [sp, #128]
   4fd5c:	ldr	x28, [sp, #64]
   4fd60:	ldr	x21, [sp, #160]
   4fd64:	mov	x11, #0x4                   	// #4
   4fd68:	clz	x20, x23
   4fd6c:	movk	x11, #0x8000, lsl #48
   4fd70:	cbz	x21, 4febc <mpfr_ai@@Base+0xaa4>
   4fd74:	add	x8, x21, #0x1
   4fd78:	cmp	x8, #0x1
   4fd7c:	b.ls	4fec4 <mpfr_ai@@Base+0xaac>  // b.plast
   4fd80:	clz	x8, x21
   4fd84:	mov	w9, #0x40                  	// #64
   4fd88:	sub	x9, x9, x8
   4fd8c:	ldr	x10, [sp, #56]
   4fd90:	ldur	x8, [x29, #-184]
   4fd94:	sub	x10, x10, x20
   4fd98:	add	x9, x10, x9
   4fd9c:	ldr	x10, [sp, #72]
   4fda0:	sub	x21, x9, x8
   4fda4:	cmp	x10, x21
   4fda8:	b.le	4fdc8 <mpfr_ai@@Base+0x9b0>
   4fdac:	add	x9, x21, x28
   4fdb0:	cmp	x10, x9
   4fdb4:	mov	x20, x28
   4fdb8:	b.gt	4fdcc <mpfr_ai@@Base+0x9b4>
   4fdbc:	mvn	x9, x21
   4fdc0:	add	x20, x10, x9
   4fdc4:	b	4fdcc <mpfr_ai@@Base+0x9b4>
   4fdc8:	mov	x20, xzr
   4fdcc:	cmp	x8, x11
   4fdd0:	b.lt	4fe0c <mpfr_ai@@Base+0x9f4>  // b.tstop
   4fdd4:	ldur	x8, [x29, #-200]
   4fdd8:	ldr	x9, [x26]
   4fddc:	ldur	x0, [x29, #-176]
   4fde0:	mov	x2, x20
   4fde4:	sub	x10, x8, #0x1
   4fde8:	add	x8, x8, #0x3e
   4fdec:	cmp	x10, #0x0
   4fdf0:	csel	x8, x8, x10, lt  // lt = tstop
   4fdf4:	asr	x8, x8, #6
   4fdf8:	add	x1, x8, #0x1
   4fdfc:	ldr	x8, [sp, #48]
   4fe00:	add	x3, x9, x8
   4fe04:	bl	c3d0 <mpfr_round_p@plt>
   4fe08:	cbnz	w0, 50038 <mpfr_ai@@Base+0xc20>
   4fe0c:	ldr	x25, [sp, #80]
   4fe10:	mov	x26, xzr
   4fe14:	mov	x0, x25
   4fe18:	bl	c110 <mpfr_clear@plt>
   4fe1c:	add	x26, x26, #0x1
   4fe20:	cmp	x26, x23
   4fe24:	add	x25, x25, #0x20
   4fe28:	b.ls	4fe14 <mpfr_ai@@Base+0x9fc>  // b.plast
   4fe2c:	ldr	x0, [sp, #80]
   4fe30:	lsl	x1, x24, #5
   4fe34:	bl	cc80 <mpfr_free_func@plt>
   4fe38:	mov	x0, x19
   4fe3c:	bl	bfd0 <__gmpfr_isqrt@plt>
   4fe40:	lsl	x8, x0, #5
   4fe44:	mov	x23, x0
   4fe48:	add	x0, x8, #0x20
   4fe4c:	bl	cd50 <mpfr_allocate_func@plt>
   4fe50:	mov	x19, x0
   4fe54:	cbz	x0, 4fee8 <mpfr_ai@@Base+0xad0>
   4fe58:	mov	x24, xzr
   4fe5c:	mov	x25, x19
   4fe60:	mov	x0, x19
   4fe64:	bl	bc80 <mpfr_init@plt>
   4fe68:	add	x24, x24, #0x1
   4fe6c:	cmp	x24, x23
   4fe70:	add	x19, x19, #0x20
   4fe74:	b.ls	4fe60 <mpfr_ai@@Base+0xa48>  // b.plast
   4fe78:	cbz	x20, 4ff04 <mpfr_ai@@Base+0xaec>
   4fe7c:	cmp	x20, x28
   4fe80:	b.ge	4ff4c <mpfr_ai@@Base+0xb34>  // b.tcont
   4fe84:	ldp	x8, x26, [sp, #32]
   4fe88:	mov	x22, x25
   4fe8c:	mov	w24, #0x1                   	// #1
   4fe90:	add	x8, x8, x21
   4fe94:	mov	x25, x8
   4fe98:	mov	w21, #0x2                   	// #2
   4fe9c:	b	4f8f0 <mpfr_ai@@Base+0x4d8>
   4fea0:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4fea4:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   4fea8:	mov	w1, #0x206                 	// #518
   4feac:	add	x0, x0, #0x47c
   4feb0:	add	x2, x2, #0x491
   4feb4:	bl	cb90 <mpfr_assert_fail@plt>
   4feb8:	b	4fd54 <mpfr_ai@@Base+0x93c>
   4febc:	mov	x9, xzr
   4fec0:	b	4fd8c <mpfr_ai@@Base+0x974>
   4fec4:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4fec8:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   4fecc:	mov	w1, #0x206                 	// #518
   4fed0:	add	x0, x0, #0x47c
   4fed4:	add	x2, x2, #0x49b
   4fed8:	bl	cb90 <mpfr_assert_fail@plt>
   4fedc:	mov	x11, #0x4                   	// #4
   4fee0:	movk	x11, #0x8000, lsl #48
   4fee4:	b	4fd80 <mpfr_ai@@Base+0x968>
   4fee8:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4feec:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   4fef0:	mov	w1, #0x222                 	// #546
   4fef4:	add	x0, x0, #0x47c
   4fef8:	add	x2, x2, #0x481
   4fefc:	bl	cb90 <mpfr_assert_fail@plt>
   4ff00:	b	4fe58 <mpfr_ai@@Base+0xa40>
   4ff04:	ldr	x8, [sp, #24]
   4ff08:	cmn	x22, #0x1
   4ff0c:	lsl	x8, x8, #1
   4ff10:	str	x8, [sp, #24]
   4ff14:	b.eq	4ffd4 <mpfr_ai@@Base+0xbbc>  // b.none
   4ff18:	cmn	x22, #0x2
   4ff1c:	b.eq	4ffdc <mpfr_ai@@Base+0xbc4>  // b.none
   4ff20:	add	x8, x22, #0x1
   4ff24:	clz	x8, x8
   4ff28:	mov	w9, #0x40                  	// #64
   4ff2c:	sub	x8, x9, x8
   4ff30:	ldr	x9, [sp, #24]
   4ff34:	ldr	x10, [sp, #8]
   4ff38:	ldr	x28, [sp, #64]
   4ff3c:	add	x9, x9, x10
   4ff40:	add	x9, x9, x28
   4ff44:	add	x8, x9, x8
   4ff48:	b	4ffbc <mpfr_ai@@Base+0xba4>
   4ff4c:	mov	x8, #0x4                   	// #4
   4ff50:	ldr	x9, [sp, #16]
   4ff54:	movk	x8, #0x8000, lsl #48
   4ff58:	sub	x8, x8, x28
   4ff5c:	sub	x8, x8, #0x105
   4ff60:	cmp	x9, x8
   4ff64:	b.gt	4fff8 <mpfr_ai@@Base+0xbe0>
   4ff68:	ldr	x8, [sp, #64]
   4ff6c:	ldr	x9, [sp, #16]
   4ff70:	add	x8, x9, x8
   4ff74:	cmp	x8, #0x0
   4ff78:	mov	x28, x8
   4ff7c:	cinc	x8, x8, lt  // lt = tstop
   4ff80:	cmn	x22, #0x1
   4ff84:	asr	x8, x8, #1
   4ff88:	str	x8, [sp, #16]
   4ff8c:	b.eq	50014 <mpfr_ai@@Base+0xbfc>  // b.none
   4ff90:	cmn	x22, #0x2
   4ff94:	b.eq	5001c <mpfr_ai@@Base+0xc04>  // b.none
   4ff98:	add	x8, x22, #0x1
   4ff9c:	clz	x8, x8
   4ffa0:	mov	w9, #0x40                  	// #64
   4ffa4:	sub	x8, x9, x8
   4ffa8:	ldr	x10, [sp]
   4ffac:	ldur	x9, [x29, #-184]
   4ffb0:	add	x10, x10, x28
   4ffb4:	add	x8, x10, x8
   4ffb8:	sub	x8, x8, x9
   4ffbc:	ldr	x26, [sp, #40]
   4ffc0:	mov	x22, x25
   4ffc4:	mov	x25, x8
   4ffc8:	mov	w24, #0x1                   	// #1
   4ffcc:	mov	w21, #0x2                   	// #2
   4ffd0:	b	4f8dc <mpfr_ai@@Base+0x4c4>
   4ffd4:	mov	x8, xzr
   4ffd8:	b	4ff30 <mpfr_ai@@Base+0xb18>
   4ffdc:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4ffe0:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   4ffe4:	mov	w1, #0x22b                 	// #555
   4ffe8:	add	x0, x0, #0x47c
   4ffec:	add	x2, x2, #0x4a5
   4fff0:	bl	cb90 <mpfr_assert_fail@plt>
   4fff4:	b	4ff20 <mpfr_ai@@Base+0xb08>
   4fff8:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   4fffc:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   50000:	mov	w1, #0x238                 	// #568
   50004:	add	x0, x0, #0x47c
   50008:	add	x2, x2, #0x922
   5000c:	bl	cb90 <mpfr_assert_fail@plt>
   50010:	b	4ff68 <mpfr_ai@@Base+0xb50>
   50014:	mov	x8, xzr
   50018:	b	4ffa8 <mpfr_ai@@Base+0xb90>
   5001c:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   50020:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   50024:	mov	w1, #0x23c                 	// #572
   50028:	add	x0, x0, #0x47c
   5002c:	add	x2, x2, #0x4a5
   50030:	bl	cb90 <mpfr_assert_fail@plt>
   50034:	b	4ff98 <mpfr_ai@@Base+0xb80>
   50038:	ldur	w3, [x29, #-192]
   5003c:	sub	x1, x29, #0xc8
   50040:	mov	x0, x26
   50044:	mov	w2, w25
   50048:	bl	c6f0 <mpfr_set4@plt>
   5004c:	mov	w21, w0
   50050:	sub	x0, x29, #0xe8
   50054:	bl	c110 <mpfr_clear@plt>
   50058:	add	x0, sp, #0x128
   5005c:	bl	c110 <mpfr_clear@plt>
   50060:	ldr	x22, [sp, #80]
   50064:	mov	x20, xzr
   50068:	mov	x19, x22
   5006c:	mov	x0, x19
   50070:	bl	c110 <mpfr_clear@plt>
   50074:	add	x20, x20, #0x1
   50078:	cmp	x20, x23
   5007c:	add	x19, x19, #0x20
   50080:	b.ls	5006c <mpfr_ai@@Base+0xc54>  // b.plast
   50084:	lsl	x1, x24, #5
   50088:	mov	x0, x22
   5008c:	bl	cc80 <mpfr_free_func@plt>
   50090:	sub	x0, x29, #0x68
   50094:	bl	c110 <mpfr_clear@plt>
   50098:	sub	x0, x29, #0x88
   5009c:	bl	c110 <mpfr_clear@plt>
   500a0:	sub	x0, x29, #0xa8
   500a4:	bl	c110 <mpfr_clear@plt>
   500a8:	sub	x0, x29, #0xc8
   500ac:	bl	c110 <mpfr_clear@plt>
   500b0:	add	x0, sp, #0x108
   500b4:	bl	c110 <mpfr_clear@plt>
   500b8:	add	x0, sp, #0xe8
   500bc:	bl	c110 <mpfr_clear@plt>
   500c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   500c4:	ldr	x1, [x0, #2656]
   500c8:	add	x0, x0, #0xa60
   500cc:	blr	x1
   500d0:	ldr	x9, [sp, #104]
   500d4:	ldr	w10, [sp, #100]
   500d8:	str	w10, [x9, x0]
   500dc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   500e0:	ldr	x1, [x0, #2592]
   500e4:	add	x0, x0, #0xa20
   500e8:	blr	x1
   500ec:	ldr	x11, [sp, #112]
   500f0:	str	x11, [x9, x0]
   500f4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   500f8:	ldr	x1, [x0, #2624]
   500fc:	add	x0, x0, #0xa40
   50100:	blr	x1
   50104:	ldr	x12, [sp, #88]
   50108:	str	x12, [x9, x0]
   5010c:	ldr	x8, [x26, #16]
   50110:	cmp	x8, x12
   50114:	b.gt	50120 <mpfr_ai@@Base+0xd08>
   50118:	cmp	x8, x11
   5011c:	b.ge	506e0 <mpfr_ai@@Base+0x12c8>  // b.tcont
   50120:	mov	x0, x26
   50124:	mov	w1, w21
   50128:	mov	w2, w25
   5012c:	b	509e8 <mpfr_ai@@Base+0x15d0>
   50130:	mov	w22, #0xa                   	// #10
   50134:	b	5013c <mpfr_ai@@Base+0xd24>
   50138:	mov	w22, #0x3                   	// #3
   5013c:	cmp	x21, #0x1
   50140:	b.eq	509b8 <mpfr_ai@@Base+0x15a0>  // b.none
   50144:	cmn	x19, #0xa
   50148:	b.le	509f4 <mpfr_ai@@Base+0x15dc>
   5014c:	add	x8, x19, #0xa
   50150:	clz	x8, x8
   50154:	mov	w9, #0x45                  	// #69
   50158:	sub	x8, x9, x8
   5015c:	add	x9, x22, x20
   50160:	sub	x10, x27, x19
   50164:	add	x19, x9, x8
   50168:	sub	x8, x10, #0x110
   5016c:	cmp	x19, x8
   50170:	b.gt	509c0 <mpfr_ai@@Base+0x15a8>
   50174:	sub	x0, x29, #0x88
   50178:	add	x25, x19, x21
   5017c:	bl	bc80 <mpfr_init@plt>
   50180:	sub	x0, x29, #0xa8
   50184:	bl	bc80 <mpfr_init@plt>
   50188:	add	x0, sp, #0x108
   5018c:	bl	bc80 <mpfr_init@plt>
   50190:	add	x0, sp, #0xe8
   50194:	bl	bc80 <mpfr_init@plt>
   50198:	sub	x0, x29, #0xc8
   5019c:	bl	bc80 <mpfr_init@plt>
   501a0:	sub	x0, x29, #0x68
   501a4:	bl	bc80 <mpfr_init@plt>
   501a8:	add	x8, x20, #0x7
   501ac:	cmp	w24, #0x0
   501b0:	str	x8, [sp, #80]
   501b4:	add	x8, x20, #0x5
   501b8:	add	x28, x20, #0x4
   501bc:	str	x8, [sp, #136]
   501c0:	mov	w19, #0x2                   	// #2
   501c4:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   501c8:	cset	w24, eq  // eq = none
   501cc:	mov	w8, #0x40                  	// #64
   501d0:	str	x8, [sp, #144]
   501d4:	str	x22, [sp, #152]
   501d8:	add	x22, x21, #0x3
   501dc:	add	x8, x21, #0x1
   501e0:	str	x8, [sp, #160]
   501e4:	sub	x0, x29, #0x88
   501e8:	mov	x1, x25
   501ec:	bl	bf80 <mpfr_set_prec@plt>
   501f0:	sub	x0, x29, #0xa8
   501f4:	mov	x1, x25
   501f8:	bl	bf80 <mpfr_set_prec@plt>
   501fc:	sub	x0, x29, #0xc8
   50200:	mov	x1, x25
   50204:	bl	bf80 <mpfr_set_prec@plt>
   50208:	sub	x0, x29, #0x68
   5020c:	mov	x1, x25
   50210:	bl	bf80 <mpfr_set_prec@plt>
   50214:	sub	x0, x29, #0xc8
   50218:	mov	w2, #0x2                   	// #2
   5021c:	mov	x1, x26
   50220:	bl	c450 <mpfr_sqr@plt>
   50224:	ldr	w8, [x26, #8]
   50228:	sub	x0, x29, #0xc8
   5022c:	sub	x1, x29, #0xc8
   50230:	mov	x2, x26
   50234:	cmp	w8, #0x0
   50238:	cinc	w3, w19, le
   5023c:	bl	be00 <mpfr_mul@plt>
   50240:	ldr	w8, [x26, #8]
   50244:	tbz	w8, #31, 50254 <mpfr_ai@@Base+0xe3c>
   50248:	ldur	w8, [x29, #-192]
   5024c:	neg	w8, w8
   50250:	stur	w8, [x29, #-192]
   50254:	sub	x0, x29, #0xc8
   50258:	mov	w1, #0x2                   	// #2
   5025c:	bl	bd50 <mpfr_get_ui@plt>
   50260:	ldr	w8, [x26, #8]
   50264:	mov	x19, x0
   50268:	tbz	w8, #31, 50278 <mpfr_ai@@Base+0xe60>
   5026c:	ldur	w8, [x29, #-192]
   50270:	neg	w8, w8
   50274:	stur	w8, [x29, #-192]
   50278:	add	x0, sp, #0x108
   5027c:	add	x1, sp, #0xe8
   50280:	mov	x2, x25
   50284:	bl	bc50 <mpfr_gamma_one_and_two_third@plt>
   50288:	sub	x0, x29, #0x88
   5028c:	mov	w1, #0x9                   	// #9
   50290:	mov	x2, xzr
   50294:	mov	w3, wzr
   50298:	bl	c640 <mpfr_set_ui_2exp@plt>
   5029c:	sub	x0, x29, #0x88
   502a0:	sub	x1, x29, #0x88
   502a4:	mov	w2, wzr
   502a8:	bl	cd80 <mpfr_cbrt@plt>
   502ac:	sub	x0, x29, #0x88
   502b0:	sub	x1, x29, #0x88
   502b4:	add	x2, sp, #0xe8
   502b8:	mov	w3, wzr
   502bc:	bl	be00 <mpfr_mul@plt>
   502c0:	sub	x0, x29, #0x88
   502c4:	sub	x2, x29, #0x88
   502c8:	mov	w1, #0x1                   	// #1
   502cc:	mov	w3, wzr
   502d0:	bl	c350 <mpfr_ui_div@plt>
   502d4:	sub	x0, x29, #0xa8
   502d8:	mov	w1, #0x3                   	// #3
   502dc:	mov	x2, xzr
   502e0:	mov	w3, wzr
   502e4:	bl	c640 <mpfr_set_ui_2exp@plt>
   502e8:	sub	x0, x29, #0xa8
   502ec:	sub	x1, x29, #0xa8
   502f0:	mov	w2, wzr
   502f4:	bl	cd80 <mpfr_cbrt@plt>
   502f8:	sub	x0, x29, #0xa8
   502fc:	sub	x1, x29, #0xa8
   50300:	add	x2, sp, #0x108
   50304:	mov	w3, wzr
   50308:	bl	be00 <mpfr_mul@plt>
   5030c:	sub	x0, x29, #0xa8
   50310:	sub	x1, x29, #0xa8
   50314:	mov	w2, wzr
   50318:	bl	be20 <mpfr_neg@plt>
   5031c:	sub	x0, x29, #0xa8
   50320:	sub	x2, x29, #0xa8
   50324:	mov	x1, x26
   50328:	mov	w3, wzr
   5032c:	bl	c670 <mpfr_div@plt>
   50330:	sub	x0, x29, #0x68
   50334:	sub	x1, x29, #0x88
   50338:	sub	x2, x29, #0xa8
   5033c:	mov	w3, wzr
   50340:	bl	c240 <mpfr_add@plt>
   50344:	mov	w27, #0x6                   	// #6
   50348:	sub	x0, x29, #0x88
   5034c:	sub	x1, x29, #0x88
   50350:	sub	x2, x29, #0xc8
   50354:	mov	w3, wzr
   50358:	sub	x20, x27, #0x4
   5035c:	bl	be00 <mpfr_mul@plt>
   50360:	sub	x0, x29, #0xa8
   50364:	sub	x1, x29, #0xa8
   50368:	sub	x2, x29, #0xc8
   5036c:	mov	w3, wzr
   50370:	bl	be00 <mpfr_mul@plt>
   50374:	sub	x26, x27, #0x3
   50378:	sub	x0, x29, #0x88
   5037c:	sub	x1, x29, #0x88
   50380:	mov	x2, x20
   50384:	mov	x3, x26
   50388:	mov	w4, wzr
   5038c:	bl	bf30 <mpfr_div_ui2@plt>
   50390:	sub	x3, x27, #0x2
   50394:	sub	x0, x29, #0xa8
   50398:	sub	x1, x29, #0xa8
   5039c:	mov	x2, x26
   503a0:	mov	w4, wzr
   503a4:	bl	bf30 <mpfr_div_ui2@plt>
   503a8:	sub	x0, x29, #0x68
   503ac:	sub	x1, x29, #0x68
   503b0:	sub	x2, x29, #0x88
   503b4:	mov	w3, wzr
   503b8:	bl	c240 <mpfr_add@plt>
   503bc:	sub	x0, x29, #0x68
   503c0:	sub	x1, x29, #0x68
   503c4:	sub	x2, x29, #0xa8
   503c8:	mov	w3, wzr
   503cc:	bl	c240 <mpfr_add@plt>
   503d0:	ldur	x9, [x29, #-120]
   503d4:	ldur	x8, [x29, #-88]
   503d8:	ldur	x10, [x29, #-152]
   503dc:	cmp	x9, x23
   503e0:	add	x9, x9, x22
   503e4:	cset	w12, ne  // ne = any
   503e8:	cmp	x9, x8
   503ec:	add	x11, x10, x22
   503f0:	cset	w9, gt
   503f4:	cmp	x10, x23
   503f8:	cset	w10, eq  // eq = none
   503fc:	cmp	x11, x8
   50400:	cset	w11, le
   50404:	and	w9, w12, w9
   50408:	orr	w10, w10, w11
   5040c:	tbnz	w9, #0, 50424 <mpfr_ai@@Base+0x100c>
   50410:	sub	x9, x27, #0x1
   50414:	cbz	w10, 50424 <mpfr_ai@@Base+0x100c>
   50418:	mul	x9, x9, x27
   5041c:	cmp	x19, x9, lsr #1
   50420:	b.ls	5042c <mpfr_ai@@Base+0x1014>  // b.plast
   50424:	add	x27, x27, #0x3
   50428:	b	50348 <mpfr_ai@@Base+0xf30>
   5042c:	subs	x20, x27, #0x2
   50430:	b.eq	504e0 <mpfr_ai@@Base+0x10c8>  // b.none
   50434:	cmp	x27, #0x1
   50438:	b.eq	504e8 <mpfr_ai@@Base+0x10d0>  // b.none
   5043c:	clz	x9, x20
   50440:	mov	w10, #0x40                  	// #64
   50444:	sub	x9, x10, x9
   50448:	sub	x10, x28, x8
   5044c:	add	x26, x10, x9
   50450:	cmp	x25, x26
   50454:	b.le	50474 <mpfr_ai@@Base+0x105c>
   50458:	add	x9, x26, x21
   5045c:	cmp	x25, x9
   50460:	mov	x19, x21
   50464:	b.gt	50478 <mpfr_ai@@Base+0x1060>
   50468:	mvn	x9, x26
   5046c:	add	x19, x25, x9
   50470:	b	50478 <mpfr_ai@@Base+0x1060>
   50474:	mov	x19, xzr
   50478:	ldr	x25, [sp, #128]
   5047c:	mov	x9, #0x4                   	// #4
   50480:	movk	x9, #0x8000, lsl #48
   50484:	cmp	x8, x9
   50488:	b.lt	504c0 <mpfr_ai@@Base+0x10a8>  // b.tstop
   5048c:	ldur	x8, [x29, #-104]
   50490:	ldr	x9, [x25]
   50494:	ldur	x0, [x29, #-80]
   50498:	mov	x2, x19
   5049c:	sub	x10, x8, #0x1
   504a0:	add	x8, x8, #0x3e
   504a4:	cmp	x10, #0x0
   504a8:	csel	x8, x8, x10, lt  // lt = tstop
   504ac:	asr	x8, x8, #6
   504b0:	add	x1, x8, #0x1
   504b4:	add	x3, x9, x24
   504b8:	bl	c3d0 <mpfr_round_p@plt>
   504bc:	cbnz	w0, 50624 <mpfr_ai@@Base+0x120c>
   504c0:	cbz	x19, 505b8 <mpfr_ai@@Base+0x11a0>
   504c4:	cmp	x19, x21
   504c8:	b.ge	50508 <mpfr_ai@@Base+0x10f0>  // b.tcont
   504cc:	ldr	x8, [sp, #160]
   504d0:	mov	w19, #0x2                   	// #2
   504d4:	add	x25, x8, x26
   504d8:	ldr	x26, [sp, #40]
   504dc:	b	501e4 <mpfr_ai@@Base+0xdcc>
   504e0:	mov	x9, xzr
   504e4:	b	50448 <mpfr_ai@@Base+0x1030>
   504e8:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   504ec:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   504f0:	mov	w1, #0xf0                  	// #240
   504f4:	add	x0, x0, #0x47c
   504f8:	add	x2, x2, #0x594
   504fc:	bl	cb90 <mpfr_assert_fail@plt>
   50500:	ldur	x8, [x29, #-88]
   50504:	b	5043c <mpfr_ai@@Base+0x1024>
   50508:	mov	x8, #0x4                   	// #4
   5050c:	ldr	x9, [sp, #144]
   50510:	movk	x8, #0x8000, lsl #48
   50514:	sub	x8, x8, x21
   50518:	sub	x8, x8, #0x105
   5051c:	cmp	x9, x8
   50520:	b.gt	50580 <mpfr_ai@@Base+0x1168>
   50524:	ldr	x8, [sp, #144]
   50528:	add	x21, x8, x21
   5052c:	cmp	x21, #0x0
   50530:	cinc	x8, x21, lt  // lt = tstop
   50534:	cmp	x27, #0x2
   50538:	asr	x8, x8, #1
   5053c:	str	x8, [sp, #144]
   50540:	b.ne	5054c <mpfr_ai@@Base+0x1134>  // b.any
   50544:	mov	x8, xzr
   50548:	b	50560 <mpfr_ai@@Base+0x1148>
   5054c:	cmp	x27, #0x1
   50550:	b.eq	5059c <mpfr_ai@@Base+0x1184>  // b.none
   50554:	clz	x8, x20
   50558:	mov	w9, #0x40                  	// #64
   5055c:	sub	x8, x9, x8
   50560:	ldr	x10, [sp, #80]
   50564:	ldur	x9, [x29, #-88]
   50568:	ldr	x26, [sp, #40]
   5056c:	mov	w19, #0x2                   	// #2
   50570:	add	x10, x10, x21
   50574:	add	x8, x10, x8
   50578:	sub	x25, x8, x9
   5057c:	b	501d8 <mpfr_ai@@Base+0xdc0>
   50580:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   50584:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   50588:	mov	w1, #0x116                 	// #278
   5058c:	add	x0, x0, #0x47c
   50590:	add	x2, x2, #0x922
   50594:	bl	cb90 <mpfr_assert_fail@plt>
   50598:	b	50524 <mpfr_ai@@Base+0x110c>
   5059c:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   505a0:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   505a4:	mov	w1, #0x11a                 	// #282
   505a8:	add	x0, x0, #0x47c
   505ac:	add	x2, x2, #0x594
   505b0:	bl	cb90 <mpfr_assert_fail@plt>
   505b4:	b	50554 <mpfr_ai@@Base+0x113c>
   505b8:	ldr	x8, [sp, #152]
   505bc:	subs	x19, x27, #0x2
   505c0:	lsl	x8, x8, #1
   505c4:	str	x8, [sp, #152]
   505c8:	b.ne	505d4 <mpfr_ai@@Base+0x11bc>  // b.any
   505cc:	mov	x8, xzr
   505d0:	b	505e8 <mpfr_ai@@Base+0x11d0>
   505d4:	cmp	x27, #0x1
   505d8:	b.eq	50608 <mpfr_ai@@Base+0x11f0>  // b.none
   505dc:	clz	x8, x19
   505e0:	mov	w9, #0x40                  	// #64
   505e4:	sub	x8, x9, x8
   505e8:	ldr	x9, [sp, #136]
   505ec:	ldr	x22, [sp, #152]
   505f0:	ldr	x26, [sp, #40]
   505f4:	mov	w19, #0x2                   	// #2
   505f8:	add	x9, x9, x21
   505fc:	add	x9, x9, x22
   50600:	add	x25, x9, x8
   50604:	b	501d4 <mpfr_ai@@Base+0xdbc>
   50608:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   5060c:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   50610:	mov	w1, #0x109                 	// #265
   50614:	add	x0, x0, #0x47c
   50618:	add	x2, x2, #0x594
   5061c:	bl	cb90 <mpfr_assert_fail@plt>
   50620:	b	505dc <mpfr_ai@@Base+0x11c4>
   50624:	ldr	w19, [sp, #124]
   50628:	ldur	w3, [x29, #-96]
   5062c:	sub	x1, x29, #0x68
   50630:	mov	x0, x25
   50634:	mov	w2, w19
   50638:	bl	c6f0 <mpfr_set4@plt>
   5063c:	mov	w21, w0
   50640:	sub	x0, x29, #0x88
   50644:	bl	c110 <mpfr_clear@plt>
   50648:	sub	x0, x29, #0xa8
   5064c:	bl	c110 <mpfr_clear@plt>
   50650:	add	x0, sp, #0x108
   50654:	bl	c110 <mpfr_clear@plt>
   50658:	add	x0, sp, #0xe8
   5065c:	bl	c110 <mpfr_clear@plt>
   50660:	sub	x0, x29, #0xc8
   50664:	bl	c110 <mpfr_clear@plt>
   50668:	sub	x0, x29, #0x68
   5066c:	bl	c110 <mpfr_clear@plt>
   50670:	sub	x0, x29, #0xe8
   50674:	bl	c110 <mpfr_clear@plt>
   50678:	add	x0, sp, #0x128
   5067c:	bl	c110 <mpfr_clear@plt>
   50680:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   50684:	ldr	x1, [x0, #2656]
   50688:	add	x0, x0, #0xa60
   5068c:	blr	x1
   50690:	ldr	x9, [sp, #104]
   50694:	ldr	w10, [sp, #100]
   50698:	str	w10, [x9, x0]
   5069c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   506a0:	ldr	x1, [x0, #2592]
   506a4:	add	x0, x0, #0xa20
   506a8:	blr	x1
   506ac:	ldr	x11, [sp, #112]
   506b0:	str	x11, [x9, x0]
   506b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   506b8:	ldr	x1, [x0, #2624]
   506bc:	add	x0, x0, #0xa40
   506c0:	blr	x1
   506c4:	ldr	x12, [sp, #88]
   506c8:	str	x12, [x9, x0]
   506cc:	ldr	x8, [x25, #16]
   506d0:	cmp	x8, x12
   506d4:	b.gt	509dc <mpfr_ai@@Base+0x15c4>
   506d8:	cmp	x8, x11
   506dc:	b.lt	509dc <mpfr_ai@@Base+0x15c4>  // b.tstop
   506e0:	cbz	w21, 506fc <mpfr_ai@@Base+0x12e4>
   506e4:	orr	w8, w10, #0x8
   506e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   506ec:	ldr	x1, [x0, #2656]
   506f0:	add	x0, x0, #0xa60
   506f4:	blr	x1
   506f8:	str	w8, [x9, x0]
   506fc:	mov	w0, w21
   50700:	add	sp, sp, #0x230
   50704:	ldp	x20, x19, [sp, #80]
   50708:	ldp	x22, x21, [sp, #64]
   5070c:	ldp	x24, x23, [sp, #48]
   50710:	ldp	x26, x25, [sp, #32]
   50714:	ldp	x28, x27, [sp, #16]
   50718:	ldp	x29, x30, [sp], #96
   5071c:	ret
   50720:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   50724:	cmp	x8, x9
   50728:	b.eq	50a10 <mpfr_ai@@Base+0x15f8>  // b.none
   5072c:	mov	x9, #0x2                   	// #2
   50730:	movk	x9, #0x8000, lsl #48
   50734:	cmp	x8, x9
   50738:	b.ne	4f458 <mpfr_ai@@Base+0x40>  // b.any
   5073c:	sub	x8, x27, #0x2
   50740:	str	x8, [x25, #16]
   50744:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   50748:	ldr	x1, [x0, #2656]
   5074c:	add	x0, x0, #0xa60
   50750:	blr	x1
   50754:	mrs	x8, tpidr_el0
   50758:	ldr	w9, [x8, x0]
   5075c:	mov	w21, wzr
   50760:	orr	w9, w9, #0x4
   50764:	str	w9, [x8, x0]
   50768:	b	506fc <mpfr_ai@@Base+0x12e4>
   5076c:	mov	x8, xzr
   50770:	b	4f824 <mpfr_ai@@Base+0x40c>
   50774:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   50778:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   5077c:	add	x0, x0, #0x47c
   50780:	add	x2, x2, #0x481
   50784:	mov	w1, #0x189                 	// #393
   50788:	bl	cb90 <mpfr_assert_fail@plt>
   5078c:	b	4f85c <mpfr_ai@@Base+0x444>
   50790:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   50794:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   50798:	add	x0, x0, #0x47c
   5079c:	add	x2, x2, #0x90d
   507a0:	mov	w1, #0x182                 	// #386
   507a4:	bl	cb90 <mpfr_assert_fail@plt>
   507a8:	b	4f814 <mpfr_ai@@Base+0x3fc>
   507ac:	ldr	x8, [x25]
   507b0:	mov	x9, #0x4                   	// #4
   507b4:	movk	x9, #0x8000, lsl #48
   507b8:	mov	w27, w20
   507bc:	mov	x20, #0x4                   	// #4
   507c0:	sub	x9, x9, #0x107
   507c4:	mov	x28, x21
   507c8:	mov	x26, x23
   507cc:	movk	x20, #0x8000, lsl #48
   507d0:	cmp	x8, x9
   507d4:	b.ge	50a28 <mpfr_ai@@Base+0x1610>  // b.tcont
   507d8:	add	x19, x8, #0x3
   507dc:	sub	x0, x29, #0x28
   507e0:	mov	x1, x19
   507e4:	bl	cad0 <mpfr_init2@plt>
   507e8:	sub	x0, x29, #0x48
   507ec:	mov	x1, x19
   507f0:	bl	cad0 <mpfr_init2@plt>
   507f4:	cmp	w24, #0x0
   507f8:	adrp	x21, 59000 <mpfr_free_pool@@Base+0x387c>
   507fc:	mov	w22, #0x40                  	// #64
   50800:	cset	w23, eq  // eq = none
   50804:	add	x21, x21, #0x922
   50808:	sub	x0, x29, #0x28
   5080c:	sub	x1, x29, #0x48
   50810:	mov	x2, x19
   50814:	bl	bc50 <mpfr_gamma_one_and_two_third@plt>
   50818:	sub	x0, x29, #0x28
   5081c:	mov	w1, #0x9                   	// #9
   50820:	mov	x2, xzr
   50824:	mov	w3, wzr
   50828:	bl	c640 <mpfr_set_ui_2exp@plt>
   5082c:	sub	x0, x29, #0x28
   50830:	sub	x1, x29, #0x28
   50834:	mov	w2, wzr
   50838:	bl	cd80 <mpfr_cbrt@plt>
   5083c:	sub	x0, x29, #0x28
   50840:	sub	x1, x29, #0x28
   50844:	sub	x2, x29, #0x48
   50848:	mov	w3, wzr
   5084c:	bl	be00 <mpfr_mul@plt>
   50850:	sub	x0, x29, #0x28
   50854:	sub	x2, x29, #0x28
   50858:	mov	w1, #0x1                   	// #1
   5085c:	mov	w3, wzr
   50860:	bl	c350 <mpfr_ui_div@plt>
   50864:	ldur	x8, [x29, #-24]
   50868:	cmp	x8, x20
   5086c:	b.lt	508a4 <mpfr_ai@@Base+0x148c>  // b.tstop
   50870:	ldur	x8, [x29, #-40]
   50874:	ldr	x9, [x25]
   50878:	ldur	x0, [x29, #-16]
   5087c:	sub	x2, x19, #0x3
   50880:	sub	x10, x8, #0x1
   50884:	add	x8, x8, #0x3e
   50888:	cmp	x10, #0x0
   5088c:	csel	x8, x8, x10, lt  // lt = tstop
   50890:	asr	x8, x8, #6
   50894:	add	x1, x8, #0x1
   50898:	add	x3, x9, x23
   5089c:	bl	c3d0 <mpfr_round_p@plt>
   508a0:	cbnz	w0, 508e8 <mpfr_ai@@Base+0x14d0>
   508a4:	sub	x8, x20, x19
   508a8:	sub	x8, x8, #0x105
   508ac:	cmp	x22, x8
   508b0:	b.gt	508d0 <mpfr_ai@@Base+0x14b8>
   508b4:	add	x19, x22, x19
   508b8:	ldr	w24, [sp, #124]
   508bc:	ldr	x25, [sp, #128]
   508c0:	cmp	x19, #0x0
   508c4:	cinc	x8, x19, lt  // lt = tstop
   508c8:	asr	x22, x8, #1
   508cc:	b	50808 <mpfr_ai@@Base+0x13f0>
   508d0:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   508d4:	mov	w1, #0x63                  	// #99
   508d8:	add	x0, x0, #0x47c
   508dc:	mov	x2, x21
   508e0:	bl	cb90 <mpfr_assert_fail@plt>
   508e4:	b	508b4 <mpfr_ai@@Base+0x149c>
   508e8:	ldur	w3, [x29, #-32]
   508ec:	sub	x1, x29, #0x28
   508f0:	mov	x0, x25
   508f4:	mov	w2, w24
   508f8:	bl	c6f0 <mpfr_set4@plt>
   508fc:	mov	w21, w0
   50900:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   50904:	ldr	x1, [x0, #2656]
   50908:	add	x0, x0, #0xa60
   5090c:	blr	x1
   50910:	str	w27, [x26, x0]
   50914:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   50918:	ldr	x1, [x0, #2592]
   5091c:	add	x0, x0, #0xa20
   50920:	blr	x1
   50924:	ldr	x8, [sp, #112]
   50928:	mov	x20, x0
   5092c:	str	x8, [x26, x0]
   50930:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   50934:	ldr	x1, [x0, #2624]
   50938:	add	x0, x0, #0xa40
   5093c:	blr	x1
   50940:	mov	x19, x0
   50944:	str	x28, [x26, x0]
   50948:	sub	x0, x29, #0x28
   5094c:	bl	c110 <mpfr_clear@plt>
   50950:	sub	x0, x29, #0x48
   50954:	bl	c110 <mpfr_clear@plt>
   50958:	ldr	x8, [x25, #16]
   5095c:	ldr	x9, [x26, x20]
   50960:	cmp	x8, x9
   50964:	b.lt	50a48 <mpfr_ai@@Base+0x1630>  // b.tstop
   50968:	ldr	x9, [x26, x19]
   5096c:	cmp	x8, x9
   50970:	b.gt	50a48 <mpfr_ai@@Base+0x1630>
   50974:	cbz	w21, 506fc <mpfr_ai@@Base+0x12e4>
   50978:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5097c:	ldr	x1, [x0, #2656]
   50980:	add	x0, x0, #0xa60
   50984:	blr	x1
   50988:	ldr	w8, [x26, x0]
   5098c:	orr	w8, w8, #0x8
   50990:	str	w8, [x26, x0]
   50994:	b	506fc <mpfr_ai@@Base+0x12e4>
   50998:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   5099c:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   509a0:	add	x0, x0, #0x47c
   509a4:	add	x2, x2, #0x4fd
   509a8:	mov	w1, #0x7c                  	// #124
   509ac:	bl	cb90 <mpfr_assert_fail@plt>
   509b0:	ldr	x19, [x25]
   509b4:	b	4f6b0 <mpfr_ai@@Base+0x298>
   509b8:	mov	w8, #0x5                   	// #5
   509bc:	b	5015c <mpfr_ai@@Base+0xd44>
   509c0:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   509c4:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   509c8:	add	x0, x0, #0x47c
   509cc:	add	x2, x2, #0x54e
   509d0:	mov	w1, #0xac                  	// #172
   509d4:	bl	cb90 <mpfr_assert_fail@plt>
   509d8:	b	50174 <mpfr_ai@@Base+0xd5c>
   509dc:	mov	x0, x25
   509e0:	mov	w1, w21
   509e4:	mov	w2, w19
   509e8:	bl	cb80 <mpfr_check_range@plt>
   509ec:	mov	w21, w0
   509f0:	b	506fc <mpfr_ai@@Base+0x12e4>
   509f4:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   509f8:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   509fc:	add	x0, x0, #0x47c
   50a00:	add	x2, x2, #0x90d
   50a04:	mov	w1, #0xab                  	// #171
   50a08:	bl	cb90 <mpfr_assert_fail@plt>
   50a0c:	b	5014c <mpfr_ai@@Base+0xd34>
   50a10:	mov	w8, #0x1                   	// #1
   50a14:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   50a18:	mov	w21, wzr
   50a1c:	str	w8, [x25, #8]
   50a20:	str	x9, [x25, #16]
   50a24:	b	506fc <mpfr_ai@@Base+0x12e4>
   50a28:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   50a2c:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   50a30:	add	x0, x0, #0x47c
   50a34:	add	x2, x2, #0x4ad
   50a38:	mov	w1, #0x52                  	// #82
   50a3c:	bl	cb90 <mpfr_assert_fail@plt>
   50a40:	ldr	x8, [x25]
   50a44:	b	507d8 <mpfr_ai@@Base+0x13c0>
   50a48:	mov	x0, x25
   50a4c:	mov	w1, w21
   50a50:	mov	w2, w24
   50a54:	b	509e8 <mpfr_ai@@Base+0x15d0>

0000000000050a58 <mpfr_div_ui2@@Base>:
   50a58:	stp	x29, x30, [sp, #-48]!
   50a5c:	stp	x22, x21, [sp, #16]
   50a60:	stp	x20, x19, [sp, #32]
   50a64:	mov	x20, x3
   50a68:	ldr	w3, [x1, #8]
   50a6c:	mov	x22, x2
   50a70:	mov	w2, w4
   50a74:	mov	x29, sp
   50a78:	mov	w19, w4
   50a7c:	mov	x21, x0
   50a80:	bl	c6f0 <mpfr_set4@plt>
   50a84:	umulh	x8, x22, x20
   50a88:	cmp	xzr, x8
   50a8c:	b.eq	50aa8 <mpfr_div_ui2@@Base+0x50>  // b.none
   50a90:	mov	x0, x21
   50a94:	mov	x1, x21
   50a98:	mov	x2, x22
   50a9c:	mov	w3, w19
   50aa0:	bl	ccc0 <mpfr_div_ui@plt>
   50aa4:	b	50aac <mpfr_div_ui2@@Base+0x54>
   50aa8:	mul	x20, x20, x22
   50aac:	mov	x0, x21
   50ab0:	mov	x1, x21
   50ab4:	mov	x2, x20
   50ab8:	mov	w3, w19
   50abc:	ldp	x20, x19, [sp, #32]
   50ac0:	ldp	x22, x21, [sp, #16]
   50ac4:	ldp	x29, x30, [sp], #48
   50ac8:	b	ccc0 <mpfr_div_ui@plt>

0000000000050acc <mpfr_gamma_one_and_two_third@@Base>:
   50acc:	sub	sp, sp, #0x120
   50ad0:	stp	x22, x21, [sp, #256]
   50ad4:	add	x21, x2, #0x4
   50ad8:	stp	x20, x19, [sp, #272]
   50adc:	mov	x19, x1
   50ae0:	mov	x20, x0
   50ae4:	add	x0, sp, #0x18
   50ae8:	mov	x1, x21
   50aec:	stp	x29, x30, [sp, #192]
   50af0:	stp	x28, x27, [sp, #208]
   50af4:	stp	x26, x25, [sp, #224]
   50af8:	stp	x24, x23, [sp, #240]
   50afc:	add	x29, sp, #0xc0
   50b00:	mov	x22, x2
   50b04:	bl	cad0 <mpfr_init2@plt>
   50b08:	mov	x0, x19
   50b0c:	mov	x1, x21
   50b10:	str	x19, [sp, #16]
   50b14:	bl	bf80 <mpfr_set_prec@plt>
   50b18:	add	x21, x22, #0xd
   50b1c:	sub	x0, x29, #0x48
   50b20:	mov	x1, x21
   50b24:	bl	cad0 <mpfr_init2@plt>
   50b28:	add	x0, sp, #0x58
   50b2c:	mov	x1, x21
   50b30:	bl	cad0 <mpfr_init2@plt>
   50b34:	add	x1, x22, #0x8
   50b38:	add	x0, sp, #0x38
   50b3c:	bl	cad0 <mpfr_init2@plt>
   50b40:	add	x1, x22, #0x6
   50b44:	mov	x0, x20
   50b48:	str	x20, [sp, #8]
   50b4c:	bl	bf80 <mpfr_set_prec@plt>
   50b50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   50b54:	ldr	x1, [x0, #2704]
   50b58:	add	x0, x0, #0xa90
   50b5c:	blr	x1
   50b60:	mrs	x8, tpidr_el0
   50b64:	add	x1, x8, x0
   50b68:	sub	x0, x29, #0x48
   50b6c:	mov	w2, wzr
   50b70:	str	x8, [sp]
   50b74:	bl	c3e0 <mpfr_cache@plt>
   50b78:	sub	x0, x29, #0x48
   50b7c:	sub	x1, x29, #0x48
   50b80:	mov	w2, wzr
   50b84:	bl	c450 <mpfr_sqr@plt>
   50b88:	sub	x0, x29, #0x48
   50b8c:	sub	x1, x29, #0x48
   50b90:	mov	w2, wzr
   50b94:	bl	c450 <mpfr_sqr@plt>
   50b98:	sub	x0, x29, #0x48
   50b9c:	sub	x1, x29, #0x48
   50ba0:	mov	w2, #0xc                   	// #12
   50ba4:	mov	w3, wzr
   50ba8:	bl	bb10 <mpfr_mul_ui@plt>
   50bac:	add	x8, x22, #0x20
   50bb0:	cmp	x8, #0xa
   50bb4:	add	x19, x22, #0x17
   50bb8:	b.cc	50fe4 <mpfr_gamma_one_and_two_third@@Base+0x518>  // b.lo, b.ul, b.last
   50bbc:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   50bc0:	movk	x8, #0x6667
   50bc4:	smulh	x8, x21, x8
   50bc8:	asr	x9, x8, #2
   50bcc:	cmn	x22, #0x17
   50bd0:	add	x20, x9, x8, lsr #63
   50bd4:	b.le	50fec <mpfr_gamma_one_and_two_third@@Base+0x520>
   50bd8:	add	x8, x20, #0x1
   50bdc:	clz	x8, x8
   50be0:	mov	w9, #0x40                  	// #64
   50be4:	sub	x8, x9, x8
   50be8:	mov	x27, #0x9999999999999999    	// #-7378697629483820647
   50bec:	add	x22, x19, x8
   50bf0:	movk	x27, #0x999a
   50bf4:	sub	x0, x29, #0x28
   50bf8:	mov	x1, x22
   50bfc:	movk	x27, #0x199, lsl #48
   50c00:	bl	cad0 <mpfr_init2@plt>
   50c04:	add	x0, sp, #0x58
   50c08:	mov	x1, x22
   50c0c:	bl	bf80 <mpfr_set_prec@plt>
   50c10:	sub	x0, x29, #0x28
   50c14:	mov	w1, #0x1                   	// #1
   50c18:	mov	x2, xzr
   50c1c:	mov	w3, wzr
   50c20:	mov	w22, #0x1                   	// #1
   50c24:	bl	c640 <mpfr_set_ui_2exp@plt>
   50c28:	ldur	w3, [x29, #-32]
   50c2c:	add	x0, sp, #0x58
   50c30:	sub	x1, x29, #0x28
   50c34:	mov	w2, wzr
   50c38:	bl	c6f0 <mpfr_set4@plt>
   50c3c:	mov	x19, #0x3333333333333333    	// #3689348814741910323
   50c40:	mov	w28, #0x3                   	// #3
   50c44:	mov	w26, #0x5                   	// #5
   50c48:	mov	w20, #0x3200                	// #12800
   50c4c:	movk	x19, #0x333, lsl #48
   50c50:	ldur	w3, [x29, #-32]
   50c54:	sub	x0, x29, #0x28
   50c58:	sub	x1, x29, #0x28
   50c5c:	mov	w2, wzr
   50c60:	sub	x24, x26, #0x4
   50c64:	sub	x25, x26, #0x3
   50c68:	sub	x23, x26, #0x2
   50c6c:	bl	c6f0 <mpfr_set4@plt>
   50c70:	umulh	x8, x24, x25
   50c74:	cmp	xzr, x8
   50c78:	b.eq	50c94 <mpfr_gamma_one_and_two_third@@Base+0x1c8>  // b.none
   50c7c:	sub	x0, x29, #0x28
   50c80:	sub	x1, x29, #0x28
   50c84:	mov	x2, x24
   50c88:	mov	w3, wzr
   50c8c:	bl	bb10 <mpfr_mul_ui@plt>
   50c90:	b	50c98 <mpfr_gamma_one_and_two_third@@Base+0x1cc>
   50c94:	mul	x25, x25, x24
   50c98:	umulh	x8, x25, x23
   50c9c:	cmp	xzr, x8
   50ca0:	sub	x24, x26, #0x1
   50ca4:	b.eq	50cc0 <mpfr_gamma_one_and_two_third@@Base+0x1f4>  // b.none
   50ca8:	sub	x0, x29, #0x28
   50cac:	sub	x1, x29, #0x28
   50cb0:	mov	x2, x25
   50cb4:	mov	w3, wzr
   50cb8:	bl	bb10 <mpfr_mul_ui@plt>
   50cbc:	b	50cc4 <mpfr_gamma_one_and_two_third@@Base+0x1f8>
   50cc0:	mul	x23, x25, x23
   50cc4:	umulh	x8, x23, x24
   50cc8:	cmp	xzr, x8
   50ccc:	b.eq	50ce8 <mpfr_gamma_one_and_two_third@@Base+0x21c>  // b.none
   50cd0:	sub	x0, x29, #0x28
   50cd4:	sub	x1, x29, #0x28
   50cd8:	mov	x2, x23
   50cdc:	mov	w3, wzr
   50ce0:	bl	bb10 <mpfr_mul_ui@plt>
   50ce4:	b	50cec <mpfr_gamma_one_and_two_third@@Base+0x220>
   50ce8:	mul	x24, x23, x24
   50cec:	umulh	x8, x24, x26
   50cf0:	cmp	xzr, x8
   50cf4:	b.eq	50d14 <mpfr_gamma_one_and_two_third@@Base+0x248>  // b.none
   50cf8:	sub	x0, x29, #0x28
   50cfc:	sub	x1, x29, #0x28
   50d00:	mov	x2, x24
   50d04:	mov	w3, wzr
   50d08:	bl	bb10 <mpfr_mul_ui@plt>
   50d0c:	mov	x2, x26
   50d10:	b	50d18 <mpfr_gamma_one_and_two_third@@Base+0x24c>
   50d14:	mul	x2, x24, x26
   50d18:	sub	x0, x29, #0x28
   50d1c:	sub	x1, x29, #0x28
   50d20:	mov	w3, wzr
   50d24:	bl	bb10 <mpfr_mul_ui@plt>
   50d28:	ldur	w3, [x29, #-32]
   50d2c:	sub	x0, x29, #0x28
   50d30:	sub	x1, x29, #0x28
   50d34:	mov	w2, wzr
   50d38:	sub	x23, x28, #0x2
   50d3c:	bl	c6f0 <mpfr_set4@plt>
   50d40:	umulh	x8, x22, x22
   50d44:	cmp	xzr, x8
   50d48:	b.eq	50d68 <mpfr_gamma_one_and_two_third@@Base+0x29c>  // b.none
   50d4c:	sub	x0, x29, #0x28
   50d50:	sub	x1, x29, #0x28
   50d54:	mov	x2, x22
   50d58:	mov	w3, wzr
   50d5c:	bl	ccc0 <mpfr_div_ui@plt>
   50d60:	mov	x2, x22
   50d64:	b	50d6c <mpfr_gamma_one_and_two_third@@Base+0x2a0>
   50d68:	mul	x2, x22, x22
   50d6c:	umulh	x8, x2, x23
   50d70:	cmp	xzr, x8
   50d74:	sub	x24, x28, #0x1
   50d78:	b.eq	50d90 <mpfr_gamma_one_and_two_third@@Base+0x2c4>  // b.none
   50d7c:	sub	x0, x29, #0x28
   50d80:	sub	x1, x29, #0x28
   50d84:	mov	w3, wzr
   50d88:	bl	ccc0 <mpfr_div_ui@plt>
   50d8c:	b	50d94 <mpfr_gamma_one_and_two_third@@Base+0x2c8>
   50d90:	mul	x23, x2, x23
   50d94:	umulh	x8, x23, x24
   50d98:	cmp	xzr, x8
   50d9c:	b.eq	50db8 <mpfr_gamma_one_and_two_third@@Base+0x2ec>  // b.none
   50da0:	sub	x0, x29, #0x28
   50da4:	sub	x1, x29, #0x28
   50da8:	mov	x2, x23
   50dac:	mov	w3, wzr
   50db0:	bl	ccc0 <mpfr_div_ui@plt>
   50db4:	b	50dbc <mpfr_gamma_one_and_two_third@@Base+0x2f0>
   50db8:	mul	x24, x23, x24
   50dbc:	umulh	x8, x24, x28
   50dc0:	cmp	xzr, x8
   50dc4:	b.eq	50de4 <mpfr_gamma_one_and_two_third@@Base+0x318>  // b.none
   50dc8:	sub	x0, x29, #0x28
   50dcc:	sub	x1, x29, #0x28
   50dd0:	mov	x2, x24
   50dd4:	mov	w3, wzr
   50dd8:	bl	ccc0 <mpfr_div_ui@plt>
   50ddc:	mov	x2, x28
   50de0:	b	50de8 <mpfr_gamma_one_and_two_third@@Base+0x31c>
   50de4:	mul	x2, x24, x28
   50de8:	cmp	x2, x19
   50dec:	b.hi	50e28 <mpfr_gamma_one_and_two_third@@Base+0x35c>  // b.pmore
   50df0:	add	x8, x2, x2, lsl #2
   50df4:	lsl	x8, x8, #4
   50df8:	cmp	x8, x27
   50dfc:	b.cs	50e30 <mpfr_gamma_one_and_two_third@@Base+0x364>  // b.hs, b.nlast
   50e00:	mul	x23, x2, x20
   50e04:	cmp	x23, x27
   50e08:	b.cc	50e48 <mpfr_gamma_one_and_two_third@@Base+0x37c>  // b.lo, b.ul, b.last
   50e0c:	sub	x0, x29, #0x28
   50e10:	sub	x1, x29, #0x28
   50e14:	mov	x2, x23
   50e18:	mov	w3, wzr
   50e1c:	bl	ccc0 <mpfr_div_ui@plt>
   50e20:	mov	w2, #0xa0                  	// #160
   50e24:	b	50e50 <mpfr_gamma_one_and_two_third@@Base+0x384>
   50e28:	mov	w23, #0x3200                	// #12800
   50e2c:	b	50e38 <mpfr_gamma_one_and_two_third@@Base+0x36c>
   50e30:	mov	x2, x8
   50e34:	mov	w23, #0xa0                  	// #160
   50e38:	sub	x0, x29, #0x28
   50e3c:	sub	x1, x29, #0x28
   50e40:	mov	w3, wzr
   50e44:	bl	ccc0 <mpfr_div_ui@plt>
   50e48:	add	x8, x23, x23, lsl #2
   50e4c:	lsl	x2, x8, #5
   50e50:	sub	x0, x29, #0x28
   50e54:	sub	x1, x29, #0x28
   50e58:	mov	w3, wzr
   50e5c:	bl	ccc0 <mpfr_div_ui@plt>
   50e60:	ldur	w8, [x29, #-32]
   50e64:	add	x0, sp, #0x58
   50e68:	add	x1, sp, #0x58
   50e6c:	sub	x2, x29, #0x28
   50e70:	neg	w8, w8
   50e74:	mov	w3, wzr
   50e78:	stur	w8, [x29, #-32]
   50e7c:	bl	c240 <mpfr_add@plt>
   50e80:	ldur	x8, [x29, #-24]
   50e84:	ldr	x9, [sp, #104]
   50e88:	add	x22, x22, #0x1
   50e8c:	add	x28, x28, #0x3
   50e90:	add	x8, x8, x21
   50e94:	add	x9, x9, #0x7
   50e98:	cmp	x8, x9
   50e9c:	add	x26, x26, #0x6
   50ea0:	b.gt	50c50 <mpfr_gamma_one_and_two_third@@Base+0x184>
   50ea4:	sub	x0, x29, #0x28
   50ea8:	bl	c110 <mpfr_clear@plt>
   50eac:	sub	x0, x29, #0x48
   50eb0:	sub	x1, x29, #0x48
   50eb4:	add	x2, sp, #0x58
   50eb8:	mov	w3, wzr
   50ebc:	bl	be00 <mpfr_mul@plt>
   50ec0:	add	x0, sp, #0x58
   50ec4:	mov	w1, #0xa                   	// #10
   50ec8:	mov	x2, xzr
   50ecc:	mov	w3, wzr
   50ed0:	bl	c640 <mpfr_set_ui_2exp@plt>
   50ed4:	add	x0, sp, #0x58
   50ed8:	add	x1, sp, #0x58
   50edc:	mov	w2, wzr
   50ee0:	bl	c990 <mpfr_sqrt@plt>
   50ee4:	sub	x0, x29, #0x48
   50ee8:	sub	x1, x29, #0x48
   50eec:	add	x2, sp, #0x58
   50ef0:	mov	w3, wzr
   50ef4:	bl	c670 <mpfr_div@plt>
   50ef8:	add	x0, sp, #0x38
   50efc:	sub	x1, x29, #0x48
   50f00:	mov	w2, wzr
   50f04:	bl	c990 <mpfr_sqrt@plt>
   50f08:	ldr	x19, [sp, #8]
   50f0c:	add	x1, sp, #0x38
   50f10:	mov	w2, wzr
   50f14:	mov	x0, x19
   50f18:	bl	cd80 <mpfr_cbrt@plt>
   50f1c:	sub	x0, x29, #0x48
   50f20:	bl	c110 <mpfr_clear@plt>
   50f24:	add	x0, sp, #0x58
   50f28:	bl	c110 <mpfr_clear@plt>
   50f2c:	add	x0, sp, #0x38
   50f30:	bl	c110 <mpfr_clear@plt>
   50f34:	add	x0, sp, #0x18
   50f38:	mov	w1, #0x3                   	// #3
   50f3c:	mov	x2, xzr
   50f40:	mov	w3, wzr
   50f44:	bl	c640 <mpfr_set_ui_2exp@plt>
   50f48:	add	x0, sp, #0x18
   50f4c:	add	x1, sp, #0x18
   50f50:	mov	w2, wzr
   50f54:	bl	c990 <mpfr_sqrt@plt>
   50f58:	add	x0, sp, #0x18
   50f5c:	add	x2, sp, #0x18
   50f60:	mov	x1, x19
   50f64:	mov	w3, wzr
   50f68:	bl	be00 <mpfr_mul@plt>
   50f6c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   50f70:	ldr	x1, [x0, #2704]
   50f74:	add	x0, x0, #0xa90
   50f78:	blr	x1
   50f7c:	ldr	x8, [sp]
   50f80:	ldr	x19, [sp, #16]
   50f84:	mov	w2, wzr
   50f88:	add	x1, x8, x0
   50f8c:	mov	x0, x19
   50f90:	bl	c3e0 <mpfr_cache@plt>
   50f94:	mov	w2, #0x1                   	// #1
   50f98:	mov	x0, x19
   50f9c:	mov	x1, x19
   50fa0:	mov	w3, wzr
   50fa4:	bl	c320 <mpfr_mul_2ui@plt>
   50fa8:	add	x2, sp, #0x18
   50fac:	mov	x0, x19
   50fb0:	mov	x1, x19
   50fb4:	mov	w3, wzr
   50fb8:	bl	c670 <mpfr_div@plt>
   50fbc:	add	x0, sp, #0x18
   50fc0:	bl	c110 <mpfr_clear@plt>
   50fc4:	ldp	x20, x19, [sp, #272]
   50fc8:	ldp	x22, x21, [sp, #256]
   50fcc:	ldp	x24, x23, [sp, #240]
   50fd0:	ldp	x26, x25, [sp, #224]
   50fd4:	ldp	x28, x27, [sp, #208]
   50fd8:	ldp	x29, x30, [sp, #192]
   50fdc:	add	sp, sp, #0x120
   50fe0:	ret
   50fe4:	mov	x8, xzr
   50fe8:	b	50be8 <mpfr_gamma_one_and_two_third@@Base+0x11c>
   50fec:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   50ff0:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   50ff4:	add	x0, x0, #0x59c
   50ff8:	add	x2, x2, #0x5ac
   50ffc:	mov	w1, #0x69                  	// #105
   51000:	bl	cb90 <mpfr_assert_fail@plt>
   51004:	b	50bd8 <mpfr_gamma_one_and_two_third@@Base+0x10c>

0000000000051008 <mpfr_grandom@@Base>:
   51008:	sub	sp, sp, #0x180
   5100c:	stp	x29, x30, [sp, #288]
   51010:	stp	x28, x27, [sp, #304]
   51014:	stp	x26, x25, [sp, #320]
   51018:	stp	x24, x23, [sp, #336]
   5101c:	stp	x22, x21, [sp, #352]
   51020:	stp	x20, x19, [sp, #368]
   51024:	ldr	x23, [x0]
   51028:	mov	w27, w3
   5102c:	mov	x22, x2
   51030:	mov	x21, x0
   51034:	mov	x19, x1
   51038:	add	x29, sp, #0x120
   5103c:	cbz	x1, 5104c <mpfr_grandom@@Base+0x44>
   51040:	ldr	x8, [x19]
   51044:	cmp	x23, x8
   51048:	csel	x23, x23, x8, gt
   5104c:	sub	x0, x29, #0x38
   51050:	add	x25, x23, #0xb
   51054:	bl	c040 <mpfr_mpz_init@plt>
   51058:	sub	x0, x29, #0x48
   5105c:	bl	c040 <mpfr_mpz_init@plt>
   51060:	sub	x0, x29, #0x18
   51064:	bl	c040 <mpfr_mpz_init@plt>
   51068:	sub	x0, x29, #0x28
   5106c:	bl	c040 <mpfr_mpz_init@plt>
   51070:	sub	x0, x29, #0x58
   51074:	bl	c040 <mpfr_mpz_init@plt>
   51078:	sub	x0, x29, #0x88
   5107c:	bl	c040 <mpfr_mpz_init@plt>
   51080:	sub	x0, x29, #0x68
   51084:	bl	c040 <mpfr_mpz_init@plt>
   51088:	sub	x0, x29, #0x78
   5108c:	bl	c040 <mpfr_mpz_init@plt>
   51090:	add	x0, sp, #0x78
   51094:	mov	w1, #0x1                   	// #1
   51098:	bl	cad0 <mpfr_init2@plt>
   5109c:	add	x0, sp, #0x58
   510a0:	mov	w1, #0x1                   	// #1
   510a4:	bl	cad0 <mpfr_init2@plt>
   510a8:	add	x0, sp, #0x38
   510ac:	mov	w1, #0x1                   	// #1
   510b0:	bl	cad0 <mpfr_init2@plt>
   510b4:	str	x19, [sp, #16]
   510b8:	cbz	x19, 510c8 <mpfr_grandom@@Base+0xc0>
   510bc:	add	x0, sp, #0x18
   510c0:	mov	w1, #0x1                   	// #1
   510c4:	bl	cad0 <mpfr_init2@plt>
   510c8:	sub	x0, x29, #0x38
   510cc:	mov	x1, xzr
   510d0:	bl	bd60 <__gmpz_set_ui@plt>
   510d4:	sub	x0, x29, #0x48
   510d8:	mov	x1, xzr
   510dc:	bl	bd60 <__gmpz_set_ui@plt>
   510e0:	lsl	x8, x23, #1
   510e4:	lsl	x19, x25, #1
   510e8:	add	x20, x23, #0x9
   510ec:	add	x26, x8, #0x16
   510f0:	sub	x0, x29, #0x38
   510f4:	mov	x1, x22
   510f8:	mov	x2, x25
   510fc:	bl	cd60 <__gmpz_urandomb@plt>
   51100:	sub	x0, x29, #0x48
   51104:	mov	x1, x22
   51108:	mov	x2, x25
   5110c:	bl	cd60 <__gmpz_urandomb@plt>
   51110:	sub	x0, x29, #0x68
   51114:	sub	x1, x29, #0x38
   51118:	sub	x2, x29, #0x38
   5111c:	bl	c090 <__gmpz_mul@plt>
   51120:	sub	x0, x29, #0x78
   51124:	sub	x1, x29, #0x48
   51128:	sub	x2, x29, #0x48
   5112c:	bl	c090 <__gmpz_mul@plt>
   51130:	sub	x0, x29, #0x88
   51134:	sub	x1, x29, #0x68
   51138:	sub	x2, x29, #0x78
   5113c:	bl	ca10 <__gmpz_add@plt>
   51140:	sub	x0, x29, #0x88
   51144:	mov	w1, #0x2                   	// #2
   51148:	bl	cbb0 <__gmpz_sizeinbase@plt>
   5114c:	cmp	x0, x19
   51150:	b.hi	510f0 <mpfr_grandom@@Base+0xe8>  // b.pmore
   51154:	mov	x23, x26
   51158:	mov	x24, x20
   5115c:	sub	x0, x29, #0x68
   51160:	sub	x1, x29, #0x38
   51164:	mov	w2, #0x1                   	// #1
   51168:	bl	c3c0 <__gmpz_add_ui@plt>
   5116c:	sub	x0, x29, #0x78
   51170:	sub	x1, x29, #0x48
   51174:	mov	w2, #0x1                   	// #1
   51178:	bl	c3c0 <__gmpz_add_ui@plt>
   5117c:	sub	x0, x29, #0x68
   51180:	sub	x1, x29, #0x68
   51184:	sub	x2, x29, #0x68
   51188:	bl	c090 <__gmpz_mul@plt>
   5118c:	sub	x0, x29, #0x78
   51190:	sub	x1, x29, #0x78
   51194:	sub	x2, x29, #0x78
   51198:	bl	c090 <__gmpz_mul@plt>
   5119c:	sub	x0, x29, #0x88
   511a0:	sub	x1, x29, #0x68
   511a4:	sub	x2, x29, #0x78
   511a8:	bl	ca10 <__gmpz_add@plt>
   511ac:	sub	x0, x29, #0x88
   511b0:	mov	w1, #0x2                   	// #2
   511b4:	bl	cbb0 <__gmpz_sizeinbase@plt>
   511b8:	cmp	x0, x23
   511bc:	b.ls	51290 <mpfr_grandom@@Base+0x288>  // b.plast
   511c0:	add	x8, x23, #0x1
   511c4:	cmp	x8, x0
   511c8:	b.ne	511e0 <mpfr_grandom@@Base+0x1d8>  // b.any
   511cc:	sub	x0, x29, #0x88
   511d0:	mov	x1, xzr
   511d4:	bl	bb50 <__gmpz_scan1@plt>
   511d8:	cmp	x23, x0
   511dc:	b.eq	51290 <mpfr_grandom@@Base+0x288>  // b.none
   511e0:	sub	x0, x29, #0x38
   511e4:	sub	x1, x29, #0x38
   511e8:	mov	w2, #0x20                  	// #32
   511ec:	bl	c290 <__gmpz_mul_2exp@plt>
   511f0:	sub	x0, x29, #0x48
   511f4:	sub	x1, x29, #0x48
   511f8:	mov	w2, #0x20                  	// #32
   511fc:	bl	c290 <__gmpz_mul_2exp@plt>
   51200:	sub	x0, x29, #0x18
   51204:	mov	w2, #0x20                  	// #32
   51208:	mov	x1, x22
   5120c:	bl	cd60 <__gmpz_urandomb@plt>
   51210:	sub	x0, x29, #0x28
   51214:	mov	w2, #0x20                  	// #32
   51218:	mov	x1, x22
   5121c:	bl	cd60 <__gmpz_urandomb@plt>
   51220:	sub	x0, x29, #0x38
   51224:	sub	x1, x29, #0x38
   51228:	sub	x2, x29, #0x18
   5122c:	bl	ca10 <__gmpz_add@plt>
   51230:	sub	x0, x29, #0x48
   51234:	sub	x1, x29, #0x48
   51238:	sub	x2, x29, #0x28
   5123c:	bl	ca10 <__gmpz_add@plt>
   51240:	sub	x0, x29, #0x68
   51244:	sub	x1, x29, #0x38
   51248:	sub	x2, x29, #0x38
   5124c:	bl	c090 <__gmpz_mul@plt>
   51250:	sub	x0, x29, #0x78
   51254:	sub	x1, x29, #0x48
   51258:	sub	x2, x29, #0x48
   5125c:	bl	c090 <__gmpz_mul@plt>
   51260:	sub	x0, x29, #0x88
   51264:	sub	x1, x29, #0x68
   51268:	sub	x2, x29, #0x78
   5126c:	bl	ca10 <__gmpz_add@plt>
   51270:	sub	x0, x29, #0x88
   51274:	mov	w1, #0x2                   	// #2
   51278:	bl	cbb0 <__gmpz_sizeinbase@plt>
   5127c:	add	x23, x23, #0x40
   51280:	cmp	x0, x23
   51284:	add	x24, x24, #0x20
   51288:	b.ls	5115c <mpfr_grandom@@Base+0x154>  // b.plast
   5128c:	b	510f0 <mpfr_grandom@@Base+0xe8>
   51290:	mov	x20, #0x4                   	// #4
   51294:	sub	x0, x29, #0x68
   51298:	sub	x1, x29, #0x38
   5129c:	sub	x2, x29, #0x38
   512a0:	movk	x20, #0x8000, lsl #48
   512a4:	bl	c090 <__gmpz_mul@plt>
   512a8:	sub	x0, x29, #0x78
   512ac:	sub	x1, x29, #0x48
   512b0:	sub	x2, x29, #0x48
   512b4:	bl	c090 <__gmpz_mul@plt>
   512b8:	sub	x0, x29, #0x88
   512bc:	sub	x1, x29, #0x68
   512c0:	sub	x2, x29, #0x78
   512c4:	bl	ca10 <__gmpz_add@plt>
   512c8:	sub	x0, x29, #0x18
   512cc:	mov	w2, #0x2                   	// #2
   512d0:	mov	x1, x22
   512d4:	bl	cd60 <__gmpz_urandomb@plt>
   512d8:	sub	x0, x29, #0x18
   512dc:	mov	x1, xzr
   512e0:	bl	c080 <__gmpz_tstbit@plt>
   512e4:	mov	w25, w0
   512e8:	sub	x0, x29, #0x18
   512ec:	mov	w1, #0x1                   	// #1
   512f0:	bl	c080 <__gmpz_tstbit@plt>
   512f4:	cmp	w27, #0x0
   512f8:	mov	w26, w0
   512fc:	str	w27, [sp, #12]
   51300:	cset	w19, eq  // eq = none
   51304:	neg	x27, x23
   51308:	add	x0, sp, #0x78
   5130c:	mov	x1, x23
   51310:	add	x28, x24, #0x2
   51314:	bl	bf80 <mpfr_set_prec@plt>
   51318:	add	x0, sp, #0x58
   5131c:	mov	x1, x28
   51320:	bl	bf80 <mpfr_set_prec@plt>
   51324:	add	x0, sp, #0x78
   51328:	sub	x1, x29, #0x88
   5132c:	mov	w2, wzr
   51330:	bl	c2b0 <mpfr_set_z@plt>
   51334:	add	x0, sp, #0x78
   51338:	add	x1, sp, #0x78
   5133c:	mov	x2, x27
   51340:	mov	w3, wzr
   51344:	bl	bc40 <mpfr_mul_2si@plt>
   51348:	add	x0, sp, #0x58
   5134c:	add	x1, sp, #0x78
   51350:	mov	w2, wzr
   51354:	bl	c130 <mpfr_log@plt>
   51358:	add	x0, sp, #0x58
   5135c:	add	x1, sp, #0x58
   51360:	mov	w2, wzr
   51364:	bl	be20 <mpfr_neg@plt>
   51368:	add	x0, sp, #0x58
   5136c:	add	x1, sp, #0x58
   51370:	mov	w2, #0x1                   	// #1
   51374:	mov	w3, wzr
   51378:	bl	bc40 <mpfr_mul_2si@plt>
   5137c:	add	x0, sp, #0x58
   51380:	add	x1, sp, #0x58
   51384:	add	x2, sp, #0x78
   51388:	mov	w3, wzr
   5138c:	bl	c670 <mpfr_div@plt>
   51390:	add	x0, sp, #0x58
   51394:	add	x1, sp, #0x58
   51398:	mov	w2, wzr
   5139c:	bl	c990 <mpfr_sqrt@plt>
   513a0:	add	x0, sp, #0x38
   513a4:	mov	x1, x28
   513a8:	bl	bf80 <mpfr_set_prec@plt>
   513ac:	add	x0, sp, #0x38
   513b0:	add	x1, sp, #0x58
   513b4:	sub	x2, x29, #0x38
   513b8:	mov	w3, wzr
   513bc:	bl	c520 <mpfr_mul_z@plt>
   513c0:	add	x0, sp, #0x38
   513c4:	add	x1, sp, #0x38
   513c8:	mov	x2, x28
   513cc:	mov	w3, wzr
   513d0:	bl	c950 <mpfr_div_2ui@plt>
   513d4:	cbz	w25, 513e8 <mpfr_grandom@@Base+0x3e0>
   513d8:	add	x0, sp, #0x38
   513dc:	add	x1, sp, #0x38
   513e0:	mov	w2, wzr
   513e4:	bl	be20 <mpfr_neg@plt>
   513e8:	ldr	x8, [sp, #72]
   513ec:	cmp	x8, x20
   513f0:	b.lt	514b8 <mpfr_grandom@@Base+0x4b0>  // b.tstop
   513f4:	ldr	x8, [sp, #56]
   513f8:	ldr	x9, [x21]
   513fc:	ldr	x0, [sp, #80]
   51400:	mov	x2, x24
   51404:	sub	x10, x8, #0x1
   51408:	add	x8, x8, #0x3e
   5140c:	cmp	x10, #0x0
   51410:	csel	x8, x8, x10, lt  // lt = tstop
   51414:	asr	x8, x8, #6
   51418:	add	x1, x8, #0x1
   5141c:	add	x3, x9, x19
   51420:	bl	c3d0 <mpfr_round_p@plt>
   51424:	cbz	w0, 514b8 <mpfr_grandom@@Base+0x4b0>
   51428:	ldr	x8, [sp, #16]
   5142c:	cbz	x8, 51558 <mpfr_grandom@@Base+0x550>
   51430:	add	x0, sp, #0x18
   51434:	mov	x1, x28
   51438:	bl	bf80 <mpfr_set_prec@plt>
   5143c:	add	x0, sp, #0x18
   51440:	add	x1, sp, #0x58
   51444:	sub	x2, x29, #0x48
   51448:	mov	w3, wzr
   5144c:	bl	c520 <mpfr_mul_z@plt>
   51450:	add	x0, sp, #0x18
   51454:	add	x1, sp, #0x18
   51458:	mov	x2, x28
   5145c:	mov	w3, wzr
   51460:	bl	c950 <mpfr_div_2ui@plt>
   51464:	cbz	w26, 51478 <mpfr_grandom@@Base+0x470>
   51468:	add	x0, sp, #0x18
   5146c:	add	x1, sp, #0x18
   51470:	mov	w2, wzr
   51474:	bl	be20 <mpfr_neg@plt>
   51478:	ldr	x8, [sp, #40]
   5147c:	cmp	x8, x20
   51480:	b.lt	514b8 <mpfr_grandom@@Base+0x4b0>  // b.tstop
   51484:	ldp	x9, x8, [sp, #16]
   51488:	ldr	x0, [sp, #48]
   5148c:	mov	x2, x24
   51490:	ldr	x9, [x9]
   51494:	sub	x10, x8, #0x1
   51498:	add	x8, x8, #0x3e
   5149c:	cmp	x10, #0x0
   514a0:	csel	x8, x8, x10, lt  // lt = tstop
   514a4:	asr	x8, x8, #6
   514a8:	add	x1, x8, #0x1
   514ac:	add	x3, x9, x19
   514b0:	bl	c3d0 <mpfr_round_p@plt>
   514b4:	cbnz	w0, 51580 <mpfr_grandom@@Base+0x578>
   514b8:	sub	x0, x29, #0x38
   514bc:	sub	x1, x29, #0x38
   514c0:	mov	w2, #0x20                  	// #32
   514c4:	bl	c290 <__gmpz_mul_2exp@plt>
   514c8:	sub	x0, x29, #0x48
   514cc:	sub	x1, x29, #0x48
   514d0:	mov	w2, #0x20                  	// #32
   514d4:	bl	c290 <__gmpz_mul_2exp@plt>
   514d8:	sub	x0, x29, #0x18
   514dc:	mov	w2, #0x20                  	// #32
   514e0:	mov	x1, x22
   514e4:	bl	cd60 <__gmpz_urandomb@plt>
   514e8:	sub	x0, x29, #0x28
   514ec:	mov	w2, #0x20                  	// #32
   514f0:	mov	x1, x22
   514f4:	bl	cd60 <__gmpz_urandomb@plt>
   514f8:	sub	x0, x29, #0x38
   514fc:	sub	x1, x29, #0x38
   51500:	sub	x2, x29, #0x18
   51504:	bl	ca10 <__gmpz_add@plt>
   51508:	sub	x0, x29, #0x48
   5150c:	sub	x1, x29, #0x48
   51510:	sub	x2, x29, #0x28
   51514:	bl	ca10 <__gmpz_add@plt>
   51518:	sub	x0, x29, #0x68
   5151c:	sub	x1, x29, #0x38
   51520:	sub	x2, x29, #0x38
   51524:	bl	c090 <__gmpz_mul@plt>
   51528:	sub	x0, x29, #0x78
   5152c:	sub	x1, x29, #0x48
   51530:	sub	x2, x29, #0x48
   51534:	bl	c090 <__gmpz_mul@plt>
   51538:	sub	x0, x29, #0x88
   5153c:	sub	x1, x29, #0x68
   51540:	sub	x2, x29, #0x78
   51544:	bl	ca10 <__gmpz_add@plt>
   51548:	add	x24, x24, #0x20
   5154c:	sub	x27, x27, #0x40
   51550:	add	x23, x23, #0x40
   51554:	b	51308 <mpfr_grandom@@Base+0x300>
   51558:	ldr	w20, [sp, #12]
   5155c:	ldr	w3, [sp, #64]
   51560:	add	x1, sp, #0x38
   51564:	mov	x0, x21
   51568:	mov	w2, w20
   5156c:	bl	c6f0 <mpfr_set4@plt>
   51570:	ldr	x19, [sp, #16]
   51574:	mov	w22, w0
   51578:	mov	w23, wzr
   5157c:	b	51618 <mpfr_grandom@@Base+0x610>
   51580:	ldr	w20, [sp, #12]
   51584:	ldr	w3, [sp, #64]
   51588:	add	x1, sp, #0x38
   5158c:	mov	x0, x21
   51590:	mov	w2, w20
   51594:	bl	c6f0 <mpfr_set4@plt>
   51598:	ldr	x19, [sp, #16]
   5159c:	ldr	w3, [sp, #32]
   515a0:	mov	w22, w0
   515a4:	add	x1, sp, #0x18
   515a8:	mov	x0, x19
   515ac:	mov	w2, w20
   515b0:	bl	c6f0 <mpfr_set4@plt>
   515b4:	ldr	x9, [x19, #16]
   515b8:	mov	w23, w0
   515bc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   515c0:	ldr	x1, [x0, #2592]
   515c4:	add	x0, x0, #0xa20
   515c8:	blr	x1
   515cc:	mrs	x8, tpidr_el0
   515d0:	ldr	x10, [x8, x0]
   515d4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   515d8:	ldr	x1, [x0, #2624]
   515dc:	add	x0, x0, #0xa40
   515e0:	blr	x1
   515e4:	cmp	x9, x10
   515e8:	b.lt	51748 <mpfr_grandom@@Base+0x740>  // b.tstop
   515ec:	ldr	x10, [x8, x0]
   515f0:	cmp	x9, x10
   515f4:	b.gt	51748 <mpfr_grandom@@Base+0x740>
   515f8:	cbz	w23, 51618 <mpfr_grandom@@Base+0x610>
   515fc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51600:	ldr	x1, [x0, #2656]
   51604:	add	x0, x0, #0xa60
   51608:	blr	x1
   5160c:	ldr	w9, [x8, x0]
   51610:	orr	w9, w9, #0x8
   51614:	str	w9, [x8, x0]
   51618:	ldr	x9, [x21, #16]
   5161c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51620:	ldr	x1, [x0, #2592]
   51624:	add	x0, x0, #0xa20
   51628:	blr	x1
   5162c:	mrs	x8, tpidr_el0
   51630:	ldr	x10, [x8, x0]
   51634:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51638:	ldr	x1, [x0, #2624]
   5163c:	add	x0, x0, #0xa40
   51640:	blr	x1
   51644:	cmp	x9, x10
   51648:	b.lt	5172c <mpfr_grandom@@Base+0x724>  // b.tstop
   5164c:	ldr	x10, [x8, x0]
   51650:	cmp	x9, x10
   51654:	b.gt	5172c <mpfr_grandom@@Base+0x724>
   51658:	cbz	w22, 51678 <mpfr_grandom@@Base+0x670>
   5165c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51660:	ldr	x1, [x0, #2656]
   51664:	add	x0, x0, #0xa60
   51668:	blr	x1
   5166c:	ldr	w9, [x8, x0]
   51670:	orr	w9, w9, #0x8
   51674:	str	w9, [x8, x0]
   51678:	cbz	x19, 51684 <mpfr_grandom@@Base+0x67c>
   5167c:	add	x0, sp, #0x18
   51680:	bl	c110 <mpfr_clear@plt>
   51684:	add	x0, sp, #0x38
   51688:	bl	c110 <mpfr_clear@plt>
   5168c:	add	x0, sp, #0x58
   51690:	bl	c110 <mpfr_clear@plt>
   51694:	add	x0, sp, #0x78
   51698:	bl	c110 <mpfr_clear@plt>
   5169c:	sub	x0, x29, #0x78
   516a0:	bl	c210 <mpfr_mpz_clear@plt>
   516a4:	sub	x0, x29, #0x68
   516a8:	bl	c210 <mpfr_mpz_clear@plt>
   516ac:	sub	x0, x29, #0x88
   516b0:	bl	c210 <mpfr_mpz_clear@plt>
   516b4:	sub	x0, x29, #0x58
   516b8:	bl	c210 <mpfr_mpz_clear@plt>
   516bc:	sub	x0, x29, #0x28
   516c0:	bl	c210 <mpfr_mpz_clear@plt>
   516c4:	sub	x0, x29, #0x18
   516c8:	bl	c210 <mpfr_mpz_clear@plt>
   516cc:	sub	x0, x29, #0x48
   516d0:	bl	c210 <mpfr_mpz_clear@plt>
   516d4:	sub	x0, x29, #0x38
   516d8:	bl	c210 <mpfr_mpz_clear@plt>
   516dc:	cmp	w22, #0x1
   516e0:	mov	w8, #0x1                   	// #1
   516e4:	cinc	w8, w8, lt  // lt = tstop
   516e8:	cmp	w22, #0x0
   516ec:	mov	w9, #0x4                   	// #4
   516f0:	mov	w10, #0x8                   	// #8
   516f4:	csel	w8, wzr, w8, eq  // eq = none
   516f8:	cmp	w23, #0x1
   516fc:	csel	w9, w10, w9, lt  // lt = tstop
   51700:	cmp	w23, #0x0
   51704:	ldp	x20, x19, [sp, #368]
   51708:	ldp	x22, x21, [sp, #352]
   5170c:	ldp	x24, x23, [sp, #336]
   51710:	ldp	x26, x25, [sp, #320]
   51714:	ldp	x28, x27, [sp, #304]
   51718:	ldp	x29, x30, [sp, #288]
   5171c:	csel	w9, wzr, w9, eq  // eq = none
   51720:	orr	w0, w8, w9
   51724:	add	sp, sp, #0x180
   51728:	ret
   5172c:	mov	x0, x21
   51730:	mov	w1, w22
   51734:	mov	w2, w20
   51738:	bl	cb80 <mpfr_check_range@plt>
   5173c:	mov	w22, w0
   51740:	cbnz	x19, 5167c <mpfr_grandom@@Base+0x674>
   51744:	b	51684 <mpfr_grandom@@Base+0x67c>
   51748:	mov	x0, x19
   5174c:	mov	w1, w23
   51750:	mov	w2, w20
   51754:	bl	cb80 <mpfr_check_range@plt>
   51758:	mov	w23, w0
   5175c:	b	51618 <mpfr_grandom@@Base+0x610>

0000000000051760 <__gmpfr_fpif_export@@Base>:
   51760:	stp	x29, x30, [sp, #-96]!
   51764:	str	x27, [sp, #16]
   51768:	stp	x26, x25, [sp, #32]
   5176c:	stp	x24, x23, [sp, #48]
   51770:	stp	x22, x21, [sp, #64]
   51774:	stp	x20, x19, [sp, #80]
   51778:	mov	x29, sp
   5177c:	cbz	x0, 51a9c <__gmpfr_fpif_export@@Base+0x33c>
   51780:	ldr	x8, [x1]
   51784:	mov	x19, x0
   51788:	mov	x20, x1
   5178c:	cmp	x8, #0xf8
   51790:	cset	w9, gt
   51794:	asr	x8, x8, #3
   51798:	add	x8, x8, w9, uxtw #3
   5179c:	add	x21, x8, #0xb
   517a0:	mov	x0, x21
   517a4:	bl	cd50 <mpfr_allocate_func@plt>
   517a8:	cbz	x0, 51a9c <__gmpfr_fpif_export@@Base+0x33c>
   517ac:	ldr	x25, [x20]
   517b0:	mov	x22, x0
   517b4:	mov	x23, xzr
   517b8:	subs	x8, x25, #0xf9
   517bc:	str	x25, [x29, #24]
   517c0:	b.lt	517d0 <__gmpfr_fpif_export@@Base+0x70>  // b.tstop
   517c4:	lsr	x8, x8, #8
   517c8:	add	x23, x23, #0x1
   517cc:	cbnz	x8, 517c4 <__gmpfr_fpif_export@@Base+0x64>
   517d0:	add	x24, x23, #0x1
   517d4:	cmp	x21, x24
   517d8:	b.cs	517f4 <__gmpfr_fpif_export@@Base+0x94>  // b.hs, b.nlast
   517dc:	mov	x0, x22
   517e0:	mov	x1, x21
   517e4:	mov	x2, x24
   517e8:	bl	c260 <mpfr_reallocate_func@plt>
   517ec:	mov	x22, x0
   517f0:	cbz	x0, 51828 <__gmpfr_fpif_export@@Base+0xc8>
   517f4:	subs	x8, x25, #0xf9
   517f8:	b.lt	5181c <__gmpfr_fpif_export@@Base+0xbc>  // b.tstop
   517fc:	sub	w9, w23, #0x1
   51800:	mov	x0, x22
   51804:	strb	w9, [x0], #1
   51808:	add	x1, x29, #0x18
   5180c:	mov	x2, x23
   51810:	str	x8, [x29, #24]
   51814:	bl	bad0 <memcpy@plt>
   51818:	b	5182c <__gmpfr_fpif_export@@Base+0xcc>
   5181c:	add	w8, w25, #0x7
   51820:	strb	w8, [x22]
   51824:	b	5182c <__gmpfr_fpif_export@@Base+0xcc>
   51828:	mov	x24, xzr
   5182c:	cmp	x24, x21
   51830:	mov	w2, #0x1                   	// #1
   51834:	mov	x0, x22
   51838:	mov	x1, x24
   5183c:	mov	x3, x19
   51840:	csel	x23, x24, x21, hi  // hi = pmore
   51844:	bl	c920 <fwrite@plt>
   51848:	cmp	w0, #0x1
   5184c:	b.ne	51928 <__gmpfr_fpif_export@@Base+0x1c8>  // b.any
   51850:	ldr	x21, [x20, #16]
   51854:	mov	x27, #0x4                   	// #4
   51858:	movk	x27, #0x8000, lsl #48
   5185c:	cmp	x21, x27
   51860:	b.ge	5186c <__gmpfr_fpif_export@@Base+0x10c>  // b.tcont
   51864:	mov	x25, xzr
   51868:	b	518cc <__gmpfr_fpif_export@@Base+0x16c>
   5186c:	add	x26, x21, #0x2f
   51870:	cmp	x26, #0x5f
   51874:	b.cc	518c4 <__gmpfr_fpif_export@@Base+0x164>  // b.lo, b.ul, b.last
   51878:	cmp	x21, #0x0
   5187c:	cneg	x8, x21, mi  // mi = first
   51880:	sub	x26, x8, #0x2f
   51884:	mov	x24, #0xffffffffffffffff    	// #-1
   51888:	lsl	x9, x26, #1
   5188c:	mov	x8, #0xffffffffffffffff    	// #-1
   51890:	str	x26, [x29, #24]
   51894:	lsr	x9, x9, #8
   51898:	add	x8, x8, #0x1
   5189c:	add	x24, x24, #0x8
   518a0:	cbnz	x9, 51894 <__gmpfr_fpif_export@@Base+0x134>
   518a4:	cmp	x8, #0x10
   518a8:	add	x25, x8, #0x1
   518ac:	b.cs	51abc <__gmpfr_fpif_export@@Base+0x35c>  // b.hs, b.nlast
   518b0:	tbz	x21, #63, 518cc <__gmpfr_fpif_export@@Base+0x16c>
   518b4:	mov	w8, #0x1                   	// #1
   518b8:	lsl	x8, x8, x24
   518bc:	orr	x26, x8, x26
   518c0:	b	518c8 <__gmpfr_fpif_export@@Base+0x168>
   518c4:	mov	x25, xzr
   518c8:	str	x26, [x29, #24]
   518cc:	add	x24, x25, #0x1
   518d0:	cbz	x22, 518e4 <__gmpfr_fpif_export@@Base+0x184>
   518d4:	cmp	x23, x24
   518d8:	b.cc	518e4 <__gmpfr_fpif_export@@Base+0x184>  // b.lo, b.ul, b.last
   518dc:	mov	x21, x22
   518e0:	b	518fc <__gmpfr_fpif_export@@Base+0x19c>
   518e4:	mov	x0, x22
   518e8:	mov	x1, x23
   518ec:	mov	x2, x24
   518f0:	bl	c260 <mpfr_reallocate_func@plt>
   518f4:	mov	x21, x0
   518f8:	cbz	x0, 51928 <__gmpfr_fpif_export@@Base+0x1c8>
   518fc:	ldr	x8, [x20, #16]
   51900:	cmp	x8, x27
   51904:	b.ge	51934 <__gmpfr_fpif_export@@Base+0x1d4>  // b.tcont
   51908:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   5190c:	cmp	x8, x9
   51910:	b.eq	51954 <__gmpfr_fpif_export@@Base+0x1f4>  // b.none
   51914:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   51918:	cmp	x8, x9
   5191c:	b.ne	5195c <__gmpfr_fpif_export@@Base+0x1fc>  // b.any
   51920:	mov	w26, #0x77                  	// #119
   51924:	b	51960 <__gmpfr_fpif_export@@Base+0x200>
   51928:	mov	x0, x22
   5192c:	mov	x1, x23
   51930:	b	51a98 <__gmpfr_fpif_export@@Base+0x338>
   51934:	cbz	x25, 51960 <__gmpfr_fpif_export@@Base+0x200>
   51938:	add	w26, w25, #0x5e
   5193c:	mov	x0, x21
   51940:	strb	w26, [x0], #1
   51944:	add	x1, x29, #0x18
   51948:	mov	x2, x25
   5194c:	bl	bad0 <memcpy@plt>
   51950:	b	51964 <__gmpfr_fpif_export@@Base+0x204>
   51954:	mov	w26, #0x78                  	// #120
   51958:	b	51960 <__gmpfr_fpif_export@@Base+0x200>
   5195c:	mov	w26, #0x79                  	// #121
   51960:	strb	w26, [x21]
   51964:	ldr	w8, [x20, #8]
   51968:	tbz	w8, #31, 51974 <__gmpfr_fpif_export@@Base+0x214>
   5196c:	orr	w8, w26, #0x80
   51970:	strb	w8, [x21]
   51974:	cmp	x23, x24
   51978:	mov	w2, #0x1                   	// #1
   5197c:	mov	x0, x21
   51980:	mov	x1, x24
   51984:	mov	x3, x19
   51988:	csel	x22, x24, x23, cc  // cc = lo, ul, last
   5198c:	bl	c920 <fwrite@plt>
   51990:	cmp	w0, #0x1
   51994:	b.ne	51a90 <__gmpfr_fpif_export@@Base+0x330>  // b.any
   51998:	ldr	x8, [x20, #16]
   5199c:	mov	x9, #0x4                   	// #4
   519a0:	movk	x9, #0x8000, lsl #48
   519a4:	cmp	x8, x9
   519a8:	b.lt	51a7c <__gmpfr_fpif_export@@Base+0x31c>  // b.tstop
   519ac:	ldr	x8, [x20]
   519b0:	add	x8, x8, #0x7
   519b4:	cmp	x22, x8, asr #3
   519b8:	asr	x23, x8, #3
   519bc:	b.cs	519d8 <__gmpfr_fpif_export@@Base+0x278>  // b.hs, b.nlast
   519c0:	mov	x0, x21
   519c4:	mov	x1, x22
   519c8:	mov	x2, x23
   519cc:	bl	c260 <mpfr_reallocate_func@plt>
   519d0:	mov	x21, x0
   519d4:	cbz	x0, 51a54 <__gmpfr_fpif_export@@Base+0x2f4>
   519d8:	adrp	x8, 70000 <__gmpfr_l2b@@Base+0x2e0>
   519dc:	ldr	x8, [x8, #4040]
   519e0:	ldr	w8, [x8]
   519e4:	asr	w9, w8, #3
   519e8:	sbfx	x8, x8, #3, #29
   519ec:	udiv	x10, x23, x8
   519f0:	add	x11, x23, w9, sxtw
   519f4:	msub	x9, x10, x8, x23
   519f8:	sub	x10, x11, #0x1
   519fc:	udiv	x10, x10, x8
   51a00:	cbz	x9, 51a24 <__gmpfr_fpif_export@@Base+0x2c4>
   51a04:	ldr	x12, [x20, #24]
   51a08:	mov	x11, xzr
   51a0c:	add	x12, x12, #0x7
   51a10:	ldrb	w13, [x12], #-1
   51a14:	strb	w13, [x21, x11]
   51a18:	add	x11, x11, #0x1
   51a1c:	cmp	x11, x9
   51a20:	b.ne	51a10 <__gmpfr_fpif_export@@Base+0x2b0>  // b.any
   51a24:	cmp	x9, #0x0
   51a28:	cset	w11, ne  // ne = any
   51a2c:	cmp	x10, x11
   51a30:	b.ls	51a58 <__gmpfr_fpif_export@@Base+0x2f8>  // b.plast
   51a34:	ldr	x12, [x20, #24]
   51a38:	ldr	x12, [x12, x11, lsl #3]
   51a3c:	add	x11, x11, #0x1
   51a40:	cmp	x11, x10
   51a44:	str	x12, [x21, x9]
   51a48:	add	x9, x9, x8
   51a4c:	b.cc	51a34 <__gmpfr_fpif_export@@Base+0x2d4>  // b.lo, b.ul, b.last
   51a50:	b	51a58 <__gmpfr_fpif_export@@Base+0x2f8>
   51a54:	mov	x23, xzr
   51a58:	cmp	x23, x22
   51a5c:	mov	w2, #0x1                   	// #1
   51a60:	mov	x0, x21
   51a64:	mov	x1, x23
   51a68:	mov	x3, x19
   51a6c:	csel	x22, x23, x22, hi  // hi = pmore
   51a70:	bl	c920 <fwrite@plt>
   51a74:	cmp	w0, #0x1
   51a78:	b.ne	51a90 <__gmpfr_fpif_export@@Base+0x330>  // b.any
   51a7c:	mov	x0, x21
   51a80:	mov	x1, x22
   51a84:	bl	cc80 <mpfr_free_func@plt>
   51a88:	mov	w0, wzr
   51a8c:	b	51aa0 <__gmpfr_fpif_export@@Base+0x340>
   51a90:	mov	x0, x21
   51a94:	mov	x1, x22
   51a98:	bl	cc80 <mpfr_free_func@plt>
   51a9c:	mov	w0, #0xffffffff            	// #-1
   51aa0:	ldp	x20, x19, [sp, #80]
   51aa4:	ldp	x22, x21, [sp, #64]
   51aa8:	ldp	x24, x23, [sp, #48]
   51aac:	ldp	x26, x25, [sp, #32]
   51ab0:	ldr	x27, [sp, #16]
   51ab4:	ldp	x29, x30, [sp], #96
   51ab8:	ret
   51abc:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   51ac0:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   51ac4:	add	x0, x0, #0x5c0
   51ac8:	add	x2, x2, #0x5c7
   51acc:	mov	w1, #0x139                 	// #313
   51ad0:	bl	cb90 <mpfr_assert_fail@plt>
   51ad4:	tbz	x21, #63, 518cc <__gmpfr_fpif_export@@Base+0x16c>
   51ad8:	b	518b4 <__gmpfr_fpif_export@@Base+0x154>

0000000000051adc <__gmpfr_fpif_import@@Base>:
   51adc:	sub	sp, sp, #0x40
   51ae0:	stp	x20, x19, [sp, #48]
   51ae4:	mov	x20, x1
   51ae8:	mov	x19, x0
   51aec:	stp	x29, x30, [sp, #16]
   51af0:	stp	x22, x21, [sp, #32]
   51af4:	add	x29, sp, #0x10
   51af8:	cbz	x1, 51b64 <__gmpfr_fpif_import@@Base+0x88>
   51afc:	mov	x0, sp
   51b00:	mov	w1, #0x1                   	// #1
   51b04:	mov	w2, #0x1                   	// #1
   51b08:	mov	x3, x20
   51b0c:	bl	c6b0 <fread@plt>
   51b10:	cmp	x0, #0x1
   51b14:	b.ne	51b64 <__gmpfr_fpif_import@@Base+0x88>  // b.any
   51b18:	ldrb	w21, [sp]
   51b1c:	cmp	x21, #0x8
   51b20:	b.cc	51b2c <__gmpfr_fpif_import@@Base+0x50>  // b.lo, b.ul, b.last
   51b24:	sub	x21, x21, #0x7
   51b28:	b	51b68 <__gmpfr_fpif_import@@Base+0x8c>
   51b2c:	add	x1, x21, #0x1
   51b30:	mov	x0, sp
   51b34:	mov	w2, #0x1                   	// #1
   51b38:	mov	x3, x20
   51b3c:	mov	x22, sp
   51b40:	bl	c6b0 <fread@plt>
   51b44:	cmp	x0, #0x1
   51b48:	b.ne	51b64 <__gmpfr_fpif_import@@Base+0x88>  // b.any
   51b4c:	add	x2, x21, #0x1
   51b50:	cmp	x2, #0x9
   51b54:	b.cc	51d08 <__gmpfr_fpif_import@@Base+0x22c>  // b.lo, b.ul, b.last
   51b58:	ldrb	w8, [x22, x21]
   51b5c:	sub	x21, x21, #0x1
   51b60:	cbz	w8, 51b4c <__gmpfr_fpif_import@@Base+0x70>
   51b64:	mov	x21, xzr
   51b68:	mov	w0, #0xffffffff            	// #-1
   51b6c:	cbz	x21, 51d5c <__gmpfr_fpif_import@@Base+0x280>
   51b70:	mov	x8, #0xfffffffffffffeff    	// #-257
   51b74:	movk	x8, #0x7fff, lsl #48
   51b78:	cmp	x21, x8
   51b7c:	b.gt	51d5c <__gmpfr_fpif_import@@Base+0x280>
   51b80:	mov	x0, x19
   51b84:	mov	x1, x21
   51b88:	bl	bf80 <mpfr_set_prec@plt>
   51b8c:	cbz	x20, 51d50 <__gmpfr_fpif_import@@Base+0x274>
   51b90:	mov	x0, sp
   51b94:	mov	w1, #0x1                   	// #1
   51b98:	mov	w2, #0x1                   	// #1
   51b9c:	mov	x3, x20
   51ba0:	bl	c6b0 <fread@plt>
   51ba4:	cmp	x0, #0x1
   51ba8:	b.ne	51d50 <__gmpfr_fpif_import@@Base+0x274>  // b.any
   51bac:	ldrb	w8, [sp]
   51bb0:	mov	w10, #0xffffffff            	// #-1
   51bb4:	sxtb	w9, w8
   51bb8:	and	x8, x8, #0x7f
   51bbc:	sub	w11, w8, #0x5f
   51bc0:	cmp	w9, #0x0
   51bc4:	and	w11, w11, #0xff
   51bc8:	cneg	w10, w10, ge  // ge = tcont
   51bcc:	cmp	w11, #0x17
   51bd0:	str	w10, [x19, #8]
   51bd4:	b.hi	51cdc <__gmpfr_fpif_import@@Base+0x200>  // b.pmore
   51bd8:	sub	x22, x8, #0x5e
   51bdc:	cmp	x22, #0x8
   51be0:	b.hi	51d50 <__gmpfr_fpif_import@@Base+0x274>  // b.pmore
   51be4:	mov	x0, sp
   51be8:	mov	w2, #0x1                   	// #1
   51bec:	mov	x1, x22
   51bf0:	mov	x3, x20
   51bf4:	bl	c6b0 <fread@plt>
   51bf8:	cmp	x0, #0x1
   51bfc:	b.ne	51d50 <__gmpfr_fpif_import@@Base+0x274>  // b.any
   51c00:	add	x0, sp, #0x8
   51c04:	mov	x1, sp
   51c08:	mov	x2, x22
   51c0c:	str	xzr, [sp, #8]
   51c10:	bl	bad0 <memcpy@plt>
   51c14:	ldr	x9, [sp, #8]
   51c18:	lsl	x8, x22, #3
   51c1c:	sub	x8, x8, #0x1
   51c20:	mov	w10, #0x1                   	// #1
   51c24:	lsl	x8, x10, x8
   51c28:	and	x8, x9, x8
   51c2c:	eor	x10, x8, x9
   51c30:	add	x9, x10, #0x2f
   51c34:	lsr	x11, x9, #62
   51c38:	str	x9, [sp, #8]
   51c3c:	cbnz	x11, 51d50 <__gmpfr_fpif_import@@Base+0x274>
   51c40:	mov	x11, #0xffffffffffffffd1    	// #-47
   51c44:	sub	x10, x11, x10
   51c48:	cmp	x8, #0x0
   51c4c:	csel	x8, x9, x10, eq  // eq = none
   51c50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51c54:	ldr	x1, [x0, #2592]
   51c58:	add	x0, x0, #0xa20
   51c5c:	blr	x1
   51c60:	mrs	x9, tpidr_el0
   51c64:	ldr	x10, [x9, x0]
   51c68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51c6c:	ldr	x1, [x0, #2624]
   51c70:	add	x0, x0, #0xa40
   51c74:	blr	x1
   51c78:	cmp	x8, x10
   51c7c:	b.lt	51d50 <__gmpfr_fpif_import@@Base+0x274>  // b.tstop
   51c80:	ldr	x9, [x9, x0]
   51c84:	cmp	x8, x9
   51c88:	b.gt	51d50 <__gmpfr_fpif_import@@Base+0x274>
   51c8c:	str	x8, [x19, #16]
   51c90:	add	x8, x21, #0x7
   51c94:	asr	x22, x8, #3
   51c98:	mov	x0, x22
   51c9c:	bl	cd50 <mpfr_allocate_func@plt>
   51ca0:	cbz	x0, 51d50 <__gmpfr_fpif_import@@Base+0x274>
   51ca4:	mov	w2, #0x1                   	// #1
   51ca8:	mov	x1, x22
   51cac:	mov	x3, x20
   51cb0:	mov	x21, x0
   51cb4:	bl	c6b0 <fread@plt>
   51cb8:	cmp	w0, #0x1
   51cbc:	b.ne	51d44 <__gmpfr_fpif_import@@Base+0x268>  // b.any
   51cc0:	ldr	x8, [x19]
   51cc4:	add	x8, x8, #0x7
   51cc8:	cmp	x22, x8, asr #3
   51ccc:	b.cs	51d70 <__gmpfr_fpif_import@@Base+0x294>  // b.hs, b.nlast
   51cd0:	mov	x0, x21
   51cd4:	mov	x1, xzr
   51cd8:	b	51d4c <__gmpfr_fpif_import@@Base+0x270>
   51cdc:	add	w9, w9, #0x9
   51ce0:	and	w10, w9, #0x7f
   51ce4:	cmp	w10, #0x3
   51ce8:	b.cs	51d34 <__gmpfr_fpif_import@@Base+0x258>  // b.hs, b.nlast
   51cec:	sbfx	x8, x9, #0, #7
   51cf0:	adrp	x9, 5f000 <mpfr_bases@@Base+0x14f8>
   51cf4:	add	x9, x9, #0x5e0
   51cf8:	ldr	x8, [x9, x8, lsl #3]
   51cfc:	mov	w0, wzr
   51d00:	str	x8, [x19, #16]
   51d04:	b	51d5c <__gmpfr_fpif_import@@Base+0x280>
   51d08:	cmp	x21, #0x7
   51d0c:	b.ne	51d18 <__gmpfr_fpif_import@@Base+0x23c>  // b.any
   51d10:	ldrsb	w8, [sp, #7]
   51d14:	tbnz	w8, #31, 51b64 <__gmpfr_fpif_import@@Base+0x88>
   51d18:	add	x0, sp, #0x8
   51d1c:	mov	x1, sp
   51d20:	str	xzr, [sp, #8]
   51d24:	bl	bad0 <memcpy@plt>
   51d28:	ldr	x8, [sp, #8]
   51d2c:	add	x21, x8, #0xf9
   51d30:	b	51b68 <__gmpfr_fpif_import@@Base+0x8c>
   51d34:	cmp	w8, #0x5e
   51d38:	b.hi	51d50 <__gmpfr_fpif_import@@Base+0x274>  // b.pmore
   51d3c:	sub	x8, x8, #0x2f
   51d40:	b	51c50 <__gmpfr_fpif_import@@Base+0x174>
   51d44:	mov	x0, x21
   51d48:	mov	x1, x22
   51d4c:	bl	cc80 <mpfr_free_func@plt>
   51d50:	mov	x0, x19
   51d54:	bl	bc00 <mpfr_set_nan@plt>
   51d58:	mov	w0, #0xffffffff            	// #-1
   51d5c:	ldp	x20, x19, [sp, #48]
   51d60:	ldp	x22, x21, [sp, #32]
   51d64:	ldp	x29, x30, [sp, #16]
   51d68:	add	sp, sp, #0x40
   51d6c:	ret
   51d70:	adrp	x9, 70000 <__gmpfr_l2b@@Base+0x2e0>
   51d74:	ldr	x9, [x9, #4040]
   51d78:	asr	x1, x8, #3
   51d7c:	ldr	w9, [x9]
   51d80:	sbfx	x8, x9, #3, #29
   51d84:	udiv	x9, x1, x8
   51d88:	msub	x9, x9, x8, x1
   51d8c:	cbz	x9, 51db8 <__gmpfr_fpif_import@@Base+0x2dc>
   51d90:	ldr	x11, [x19, #24]
   51d94:	mov	x10, xzr
   51d98:	str	xzr, [x11]
   51d9c:	ldr	x11, [x19, #24]
   51da0:	add	x11, x11, #0x7
   51da4:	ldrb	w12, [x21, x10]
   51da8:	add	x10, x10, #0x1
   51dac:	cmp	x10, x9
   51db0:	strb	w12, [x11], #-1
   51db4:	b.ne	51da4 <__gmpfr_fpif_import@@Base+0x2c8>  // b.any
   51db8:	cmp	x9, x1
   51dbc:	b.cs	51de8 <__gmpfr_fpif_import@@Base+0x30c>  // b.hs, b.nlast
   51dc0:	cmp	x9, #0x0
   51dc4:	cset	w10, ne  // ne = any
   51dc8:	lsl	x10, x10, #3
   51dcc:	ldr	x11, [x19, #24]
   51dd0:	ldr	x12, [x21, x9]
   51dd4:	add	x9, x9, x8
   51dd8:	cmp	x9, x1
   51ddc:	str	x12, [x11, x10]
   51de0:	add	x10, x10, #0x8
   51de4:	b.cc	51dcc <__gmpfr_fpif_import@@Base+0x2f0>  // b.lo, b.ul, b.last
   51de8:	mov	x0, x21
   51dec:	bl	cc80 <mpfr_free_func@plt>
   51df0:	mov	w0, wzr
   51df4:	b	51d5c <__gmpfr_fpif_import@@Base+0x280>

0000000000051df8 <mpfr_round_nearest_away_begin@@Base>:
   51df8:	sub	sp, sp, #0x80
   51dfc:	stp	x29, x30, [sp, #32]
   51e00:	str	x27, [sp, #48]
   51e04:	stp	x26, x25, [sp, #64]
   51e08:	stp	x24, x23, [sp, #80]
   51e0c:	stp	x22, x21, [sp, #96]
   51e10:	stp	x20, x19, [sp, #112]
   51e14:	add	x29, sp, #0x20
   51e18:	mov	x19, x0
   51e1c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51e20:	ldr	x1, [x0, #2592]
   51e24:	add	x0, x0, #0xa20
   51e28:	blr	x1
   51e2c:	mrs	x25, tpidr_el0
   51e30:	ldr	x20, [x25, x0]
   51e34:	mov	x26, #0xc000000000000001    	// #-4611686018427387903
   51e38:	cmp	x20, x26
   51e3c:	b.le	51f40 <mpfr_round_nearest_away_begin@@Base+0x148>
   51e40:	ldr	x27, [x19]
   51e44:	mov	x22, #0xfffffffffffffeff    	// #-257
   51e48:	movk	x22, #0x7fff, lsl #48
   51e4c:	add	x21, x27, #0x1
   51e50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51e54:	ldr	x1, [x0, #2656]
   51e58:	add	x0, x0, #0xa60
   51e5c:	blr	x1
   51e60:	ldr	w23, [x25, x0]
   51e64:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51e68:	ldr	x1, [x0, #2624]
   51e6c:	add	x0, x0, #0xa40
   51e70:	blr	x1
   51e74:	ldr	x24, [x25, x0]
   51e78:	mov	x8, x0
   51e7c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51e80:	ldr	x1, [x0, #2592]
   51e84:	add	x0, x0, #0xa20
   51e88:	blr	x1
   51e8c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   51e90:	cmp	x27, x22
   51e94:	str	x26, [x25, x0]
   51e98:	str	x9, [x25, x8]
   51e9c:	b.ge	51f70 <mpfr_round_nearest_away_begin@@Base+0x178>  // b.tcont
   51ea0:	add	x8, x27, #0x3f
   51ea4:	cmp	x27, #0x0
   51ea8:	csel	x8, x8, x27, lt  // lt = tstop
   51eac:	asr	x8, x8, #6
   51eb0:	add	x25, x8, #0x1
   51eb4:	lsl	x8, x25, #3
   51eb8:	add	x0, x8, #0x40
   51ebc:	bl	cd50 <mpfr_allocate_func@plt>
   51ec0:	str	x25, [x0]
   51ec4:	ldr	x8, [x19, #24]
   51ec8:	mov	w9, #0x1                   	// #1
   51ecc:	add	x10, x0, #0x40
   51ed0:	add	x11, x22, #0x103
   51ed4:	str	x8, [x0, #8]
   51ed8:	ldr	x8, [x19, #16]
   51edc:	mov	x1, x19
   51ee0:	mov	w2, wzr
   51ee4:	str	x8, [x0, #16]
   51ee8:	ldr	w8, [x19, #8]
   51eec:	str	w8, [x0, #24]
   51ef0:	ldr	x8, [x19]
   51ef4:	str	w23, [x0, #40]
   51ef8:	stp	x20, x24, [x0, #48]
   51efc:	str	x8, [x0, #32]
   51f00:	str	x21, [sp]
   51f04:	str	w9, [sp, #8]
   51f08:	stp	x11, x10, [sp, #16]
   51f0c:	ldr	w3, [x19, #8]
   51f10:	mov	x0, sp
   51f14:	bl	c6f0 <mpfr_set4@plt>
   51f18:	ldp	q0, q1, [sp]
   51f1c:	stp	q0, q1, [x19]
   51f20:	ldp	x20, x19, [sp, #112]
   51f24:	ldp	x22, x21, [sp, #96]
   51f28:	ldp	x24, x23, [sp, #80]
   51f2c:	ldp	x26, x25, [sp, #64]
   51f30:	ldr	x27, [sp, #48]
   51f34:	ldp	x29, x30, [sp, #32]
   51f38:	add	sp, sp, #0x80
   51f3c:	ret
   51f40:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   51f44:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   51f48:	add	x0, x0, #0x5f8
   51f4c:	add	x2, x2, #0x600
   51f50:	mov	w1, #0x4d                  	// #77
   51f54:	bl	cb90 <mpfr_assert_fail@plt>
   51f58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   51f5c:	ldr	x1, [x0, #2592]
   51f60:	add	x0, x0, #0xa20
   51f64:	blr	x1
   51f68:	ldr	x20, [x25, x0]
   51f6c:	b	51e40 <mpfr_round_nearest_away_begin@@Base+0x48>
   51f70:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   51f74:	adrp	x2, 5e000 <mpfr_bases@@Base+0x4f8>
   51f78:	add	x0, x0, #0x5f8
   51f7c:	add	x2, x2, #0x504
   51f80:	mov	w1, #0x54                  	// #84
   51f84:	bl	cb90 <mpfr_assert_fail@plt>
   51f88:	b	51ea0 <mpfr_round_nearest_away_begin@@Base+0xa8>

0000000000051f8c <mpfr_round_nearest_away_end@@Base>:
   51f8c:	sub	sp, sp, #0x80
   51f90:	stp	x29, x30, [sp, #32]
   51f94:	str	x27, [sp, #48]
   51f98:	stp	x26, x25, [sp, #64]
   51f9c:	stp	x24, x23, [sp, #80]
   51fa0:	stp	x22, x21, [sp, #96]
   51fa4:	stp	x20, x19, [sp, #112]
   51fa8:	ldp	q1, q0, [x0]
   51fac:	ldr	x20, [x0, #24]
   51fb0:	mov	x23, #0x2                   	// #2
   51fb4:	movk	x23, #0x8000, lsl #48
   51fb8:	stp	q1, q0, [sp]
   51fbc:	ldur	x8, [x20, #-32]
   51fc0:	add	x10, x23, #0x2
   51fc4:	mov	x19, x0
   51fc8:	mov	w21, w1
   51fcc:	str	x8, [x0]
   51fd0:	ldur	w9, [x20, #-40]
   51fd4:	add	x29, sp, #0x20
   51fd8:	str	w9, [x0, #8]
   51fdc:	ldur	x9, [x20, #-48]
   51fe0:	str	x9, [x0, #16]
   51fe4:	ldur	x9, [x20, #-56]
   51fe8:	str	x9, [x0, #24]
   51fec:	ldr	x22, [x20, #-64]!
   51ff0:	ldr	x9, [sp, #16]
   51ff4:	ldr	w27, [x20, #40]
   51ff8:	ldp	x24, x26, [x20, #48]
   51ffc:	cmp	x9, x10
   52000:	b.lt	52034 <mpfr_round_nearest_away_end@@Base+0xa8>  // b.tstop
   52004:	ldr	x9, [sp, #24]
   52008:	mvn	w8, w8
   5200c:	ldr	x9, [x9]
   52010:	lsr	x8, x9, x8
   52014:	tbz	w8, #0, 52034 <mpfr_round_nearest_away_end@@Base+0xa8>
   52018:	cbz	w21, 5204c <mpfr_round_nearest_away_end@@Base+0xc0>
   5201c:	ldr	w3, [sp, #8]
   52020:	cmp	w21, #0x0
   52024:	mov	w8, #0x2                   	// #2
   52028:	cinc	w2, w8, gt
   5202c:	mov	x1, sp
   52030:	b	52058 <mpfr_round_nearest_away_end@@Base+0xcc>
   52034:	ldr	w3, [sp, #8]
   52038:	mov	x1, sp
   5203c:	mov	x0, x19
   52040:	mov	w2, wzr
   52044:	bl	c6f0 <mpfr_set4@plt>
   52048:	b	52064 <mpfr_round_nearest_away_end@@Base+0xd8>
   5204c:	ldr	w3, [sp, #8]
   52050:	mov	x1, sp
   52054:	mov	w2, #0x4                   	// #4
   52058:	mov	x0, x19
   5205c:	bl	c6f0 <mpfr_set4@plt>
   52060:	mov	w21, w0
   52064:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52068:	ldr	x1, [x0, #2656]
   5206c:	add	x0, x0, #0xa60
   52070:	blr	x1
   52074:	mrs	x25, tpidr_el0
   52078:	ldr	w8, [x25, x0]
   5207c:	orr	w8, w8, w27
   52080:	str	w8, [x25, x0]
   52084:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52088:	ldr	x1, [x0, #2592]
   5208c:	add	x0, x0, #0xa20
   52090:	blr	x1
   52094:	str	x24, [x25, x0]
   52098:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5209c:	ldr	x1, [x0, #2624]
   520a0:	add	x0, x0, #0xa40
   520a4:	blr	x1
   520a8:	str	x26, [x25, x0]
   520ac:	cbnz	w21, 52110 <mpfr_round_nearest_away_end@@Base+0x184>
   520b0:	ldr	x8, [x19, #16]
   520b4:	mov	x9, #0x2                   	// #2
   520b8:	movk	x9, #0x8000, lsl #48
   520bc:	cmp	x8, x9
   520c0:	b.gt	520ec <mpfr_round_nearest_away_end@@Base+0x160>
   520c4:	cmp	x8, x23
   520c8:	b.ne	520e4 <mpfr_round_nearest_away_end@@Base+0x158>  // b.any
   520cc:	bl	bd40 <mpfr_set_erangeflag@plt>
   520d0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   520d4:	ldr	x1, [x0, #2592]
   520d8:	add	x0, x0, #0xa20
   520dc:	blr	x1
   520e0:	ldr	x24, [x25, x0]
   520e4:	mov	x1, #0xffffffffffffffff    	// #-1
   520e8:	b	520fc <mpfr_round_nearest_away_end@@Base+0x170>
   520ec:	ldr	w8, [x19, #8]
   520f0:	cmp	w8, #0x1
   520f4:	mov	x8, #0xffffffffffffffff    	// #-1
   520f8:	cneg	x1, x8, ge  // ge = tcont
   520fc:	sub	x2, x24, #0x2
   52100:	mov	x0, x19
   52104:	bl	c430 <mpfr_cmp_si_2exp@plt>
   52108:	cbz	w0, 521a0 <mpfr_round_nearest_away_end@@Base+0x214>
   5210c:	mov	w21, wzr
   52110:	lsl	x8, x22, #3
   52114:	add	x1, x8, #0x40
   52118:	mov	x0, x20
   5211c:	bl	cc80 <mpfr_free_func@plt>
   52120:	ldr	x8, [x19, #16]
   52124:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52128:	ldr	x1, [x0, #2592]
   5212c:	add	x0, x0, #0xa20
   52130:	blr	x1
   52134:	ldr	x9, [x25, x0]
   52138:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5213c:	ldr	x1, [x0, #2624]
   52140:	add	x0, x0, #0xa40
   52144:	blr	x1
   52148:	cmp	x8, x9
   5214c:	b.lt	521d0 <mpfr_round_nearest_away_end@@Base+0x244>  // b.tstop
   52150:	ldr	x9, [x25, x0]
   52154:	cmp	x8, x9
   52158:	b.gt	521d0 <mpfr_round_nearest_away_end@@Base+0x244>
   5215c:	cbz	w21, 5217c <mpfr_round_nearest_away_end@@Base+0x1f0>
   52160:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52164:	ldr	x1, [x0, #2656]
   52168:	add	x0, x0, #0xa60
   5216c:	blr	x1
   52170:	ldr	w8, [x25, x0]
   52174:	orr	w8, w8, #0x8
   52178:	str	w8, [x25, x0]
   5217c:	mov	w0, w21
   52180:	ldp	x20, x19, [sp, #112]
   52184:	ldp	x22, x21, [sp, #96]
   52188:	ldp	x24, x23, [sp, #80]
   5218c:	ldp	x26, x25, [sp, #64]
   52190:	ldr	x27, [sp, #48]
   52194:	ldp	x29, x30, [sp, #32]
   52198:	add	sp, sp, #0x80
   5219c:	ret
   521a0:	ldr	x8, [x19, #16]
   521a4:	mov	x9, #0x2                   	// #2
   521a8:	movk	x9, #0x8000, lsl #48
   521ac:	cmp	x8, x9
   521b0:	b.gt	521c4 <mpfr_round_nearest_away_end@@Base+0x238>
   521b4:	cmp	x8, x23
   521b8:	b.ne	5210c <mpfr_round_nearest_away_end@@Base+0x180>  // b.any
   521bc:	bl	bd40 <mpfr_set_erangeflag@plt>
   521c0:	b	5210c <mpfr_round_nearest_away_end@@Base+0x180>
   521c4:	ldr	w8, [x19, #8]
   521c8:	neg	w21, w8
   521cc:	b	52110 <mpfr_round_nearest_away_end@@Base+0x184>
   521d0:	mov	x0, x19
   521d4:	mov	w1, w21
   521d8:	mov	w2, wzr
   521dc:	bl	cb80 <mpfr_check_range@plt>
   521e0:	mov	w21, w0
   521e4:	b	5217c <mpfr_round_nearest_away_end@@Base+0x1f0>

00000000000521e8 <mpfr_nrandom@@Base>:
   521e8:	sub	sp, sp, #0xd0
   521ec:	stp	x29, x30, [sp, #112]
   521f0:	add	x29, sp, #0x70
   521f4:	str	x0, [sp]
   521f8:	sub	x0, x29, #0x20
   521fc:	stp	x28, x27, [sp, #128]
   52200:	stp	x26, x25, [sp, #144]
   52204:	stp	x24, x23, [sp, #160]
   52208:	stp	x22, x21, [sp, #176]
   5220c:	stp	x20, x19, [sp, #192]
   52210:	str	w2, [sp, #12]
   52214:	mov	x20, x1
   52218:	sub	x27, x29, #0x20
   5221c:	bl	c1f0 <mpfr_random_deviate_init@plt>
   52220:	add	x0, sp, #0x30
   52224:	add	x28, sp, #0x30
   52228:	bl	c1f0 <mpfr_random_deviate_init@plt>
   5222c:	add	x0, sp, #0x10
   52230:	bl	c1f0 <mpfr_random_deviate_init@plt>
   52234:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   52238:	add	x1, sp, #0x30
   5223c:	add	x2, sp, #0x10
   52240:	mov	x0, x20
   52244:	bl	5243c <mpfr_nrandom@@Base+0x254>
   52248:	cbz	w0, 522e4 <mpfr_nrandom@@Base+0xfc>
   5224c:	mov	x19, xzr
   52250:	mov	x8, #0xffffffffffffffff    	// #-1
   52254:	mov	x21, x19
   52258:	subs	x19, x19, #0x1
   5225c:	mov	x22, x8
   52260:	b.eq	52280 <mpfr_nrandom@@Base+0x98>  // b.none
   52264:	add	x1, sp, #0x30
   52268:	add	x2, sp, #0x10
   5226c:	mov	x0, x20
   52270:	bl	5243c <mpfr_nrandom@@Base+0x254>
   52274:	sub	x8, x22, #0x1
   52278:	cbnz	w0, 52254 <mpfr_nrandom@@Base+0x6c>
   5227c:	b	5229c <mpfr_nrandom@@Base+0xb4>
   52280:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   52284:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   52288:	mov	w1, #0x5b                  	// #91
   5228c:	add	x0, x0, #0x659
   52290:	add	x2, x2, #0x663
   52294:	bl	cb90 <mpfr_assert_fail@plt>
   52298:	b	52264 <mpfr_nrandom@@Base+0x7c>
   5229c:	neg	x19, x19
   522a0:	mov	x25, xzr
   522a4:	cmp	x21, #0x1
   522a8:	mov	x21, x19
   522ac:	b.eq	522e8 <mpfr_nrandom@@Base+0x100>  // b.none
   522b0:	sub	x21, x21, #0x1
   522b4:	mov	x24, x22
   522b8:	adds	x24, x24, #0x1
   522bc:	b.cs	522d8 <mpfr_nrandom@@Base+0xf0>  // b.hs, b.nlast
   522c0:	add	x1, sp, #0x30
   522c4:	add	x2, sp, #0x10
   522c8:	mov	x0, x20
   522cc:	bl	5243c <mpfr_nrandom@@Base+0x254>
   522d0:	cbnz	w0, 522b8 <mpfr_nrandom@@Base+0xd0>
   522d4:	b	52238 <mpfr_nrandom@@Base+0x50>
   522d8:	cbnz	x21, 522b0 <mpfr_nrandom@@Base+0xc8>
   522dc:	mov	x25, x19
   522e0:	b	522e8 <mpfr_nrandom@@Base+0x100>
   522e4:	mov	x25, xzr
   522e8:	sub	x0, x29, #0x20
   522ec:	bl	c830 <mpfr_random_deviate_reset@plt>
   522f0:	lsl	x8, x25, #1
   522f4:	mov	x24, xzr
   522f8:	add	x26, x8, #0x2
   522fc:	cmp	x25, x23
   52300:	b.cs	523bc <mpfr_nrandom@@Base+0x1d4>  // b.hs, b.nlast
   52304:	mov	w22, wzr
   52308:	mov	w19, #0x1                   	// #1
   5230c:	cbz	x25, 52318 <mpfr_nrandom@@Base+0x130>
   52310:	mov	w21, wzr
   52314:	b	52330 <mpfr_nrandom@@Base+0x148>
   52318:	mov	x0, x20
   5231c:	mov	x1, x26
   52320:	bl	c330 <__gmp_urandomm_ui@plt>
   52324:	cmp	x0, #0x1
   52328:	cset	w21, ne  // ne = any
   5232c:	cbz	x0, 523a8 <mpfr_nrandom@@Base+0x1c0>
   52330:	add	x0, sp, #0x10
   52334:	bl	c830 <mpfr_random_deviate_reset@plt>
   52338:	cmp	w19, #0x0
   5233c:	csel	x1, x28, x27, eq  // eq = none
   52340:	add	x0, sp, #0x10
   52344:	mov	x2, x20
   52348:	bl	ca80 <mpfr_random_deviate_less@plt>
   5234c:	cbz	w0, 523a8 <mpfr_nrandom@@Base+0x1c0>
   52350:	cbz	x25, 5236c <mpfr_nrandom@@Base+0x184>
   52354:	mov	x0, x20
   52358:	mov	x1, x26
   5235c:	bl	c330 <__gmp_urandomm_ui@plt>
   52360:	cmp	x0, #0x1
   52364:	cset	w21, ne  // ne = any
   52368:	cbz	x0, 523a8 <mpfr_nrandom@@Base+0x1c0>
   5236c:	cbnz	w21, 5238c <mpfr_nrandom@@Base+0x1a4>
   52370:	add	x0, sp, #0x30
   52374:	bl	c830 <mpfr_random_deviate_reset@plt>
   52378:	add	x0, sp, #0x30
   5237c:	sub	x1, x29, #0x20
   52380:	mov	x2, x20
   52384:	bl	ca80 <mpfr_random_deviate_less@plt>
   52388:	cbz	w0, 523a8 <mpfr_nrandom@@Base+0x1c0>
   5238c:	add	x0, sp, #0x30
   52390:	add	x1, sp, #0x10
   52394:	bl	c5e0 <mpfr_random_deviate_swap@plt>
   52398:	mov	w19, wzr
   5239c:	add	w22, w22, #0x1
   523a0:	cbnz	x25, 52310 <mpfr_nrandom@@Base+0x128>
   523a4:	b	52318 <mpfr_nrandom@@Base+0x130>
   523a8:	add	x24, x24, #0x1
   523ac:	tbnz	w22, #0, 52238 <mpfr_nrandom@@Base+0x50>
   523b0:	cmp	x24, x25
   523b4:	b.ls	522fc <mpfr_nrandom@@Base+0x114>  // b.plast
   523b8:	b	523d8 <mpfr_nrandom@@Base+0x1f0>
   523bc:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   523c0:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   523c4:	mov	w1, #0x8b                  	// #139
   523c8:	add	x0, x0, #0x659
   523cc:	add	x2, x2, #0x66c
   523d0:	bl	cb90 <mpfr_assert_fail@plt>
   523d4:	b	52304 <mpfr_nrandom@@Base+0x11c>
   523d8:	add	x0, sp, #0x10
   523dc:	bl	bea0 <mpfr_random_deviate_clear@plt>
   523e0:	add	x0, sp, #0x30
   523e4:	bl	bea0 <mpfr_random_deviate_clear@plt>
   523e8:	mov	w1, #0x1                   	// #1
   523ec:	mov	x0, x20
   523f0:	bl	cb60 <__gmp_urandomb_ui@plt>
   523f4:	ldr	x3, [sp]
   523f8:	ldr	w5, [sp, #12]
   523fc:	sub	x2, x29, #0x20
   52400:	mov	x1, x25
   52404:	mov	x4, x20
   52408:	bl	bb60 <mpfr_random_deviate_value@plt>
   5240c:	mov	w19, w0
   52410:	sub	x0, x29, #0x20
   52414:	bl	bea0 <mpfr_random_deviate_clear@plt>
   52418:	mov	w0, w19
   5241c:	ldp	x20, x19, [sp, #192]
   52420:	ldp	x22, x21, [sp, #176]
   52424:	ldp	x24, x23, [sp, #160]
   52428:	ldp	x26, x25, [sp, #144]
   5242c:	ldp	x28, x27, [sp, #128]
   52430:	ldp	x29, x30, [sp, #112]
   52434:	add	sp, sp, #0xd0
   52438:	ret
   5243c:	stp	x29, x30, [sp, #-48]!
   52440:	stp	x22, x21, [sp, #16]
   52444:	mov	x21, x0
   52448:	mov	x0, x1
   5244c:	stp	x20, x19, [sp, #32]
   52450:	mov	x29, sp
   52454:	mov	x19, x2
   52458:	mov	x20, x1
   5245c:	bl	c830 <mpfr_random_deviate_reset@plt>
   52460:	mov	w1, #0x1                   	// #1
   52464:	mov	x0, x20
   52468:	mov	x2, x21
   5246c:	mov	w22, #0x1                   	// #1
   52470:	bl	c370 <mpfr_random_deviate_tstbit@plt>
   52474:	cbnz	w0, 524c0 <mpfr_nrandom@@Base+0x2d8>
   52478:	b	52498 <mpfr_nrandom@@Base+0x2b0>
   5247c:	mov	x0, x20
   52480:	bl	c830 <mpfr_random_deviate_reset@plt>
   52484:	mov	x0, x20
   52488:	mov	x1, x19
   5248c:	mov	x2, x21
   52490:	bl	ca80 <mpfr_random_deviate_less@plt>
   52494:	cbz	w0, 524bc <mpfr_nrandom@@Base+0x2d4>
   52498:	mov	x0, x19
   5249c:	bl	c830 <mpfr_random_deviate_reset@plt>
   524a0:	mov	x0, x19
   524a4:	mov	x1, x20
   524a8:	mov	x2, x21
   524ac:	bl	ca80 <mpfr_random_deviate_less@plt>
   524b0:	cbnz	w0, 5247c <mpfr_nrandom@@Base+0x294>
   524b4:	mov	w22, wzr
   524b8:	b	524c0 <mpfr_nrandom@@Base+0x2d8>
   524bc:	mov	w22, #0x1                   	// #1
   524c0:	mov	w0, w22
   524c4:	ldp	x20, x19, [sp, #32]
   524c8:	ldp	x22, x21, [sp, #16]
   524cc:	ldp	x29, x30, [sp], #48
   524d0:	ret

00000000000524d4 <mpfr_random_deviate_init@@Base>:
   524d4:	stp	x29, x30, [sp, #-32]!
   524d8:	str	x19, [sp, #16]
   524dc:	mov	x19, x0
   524e0:	add	x0, x0, #0x10
   524e4:	mov	x29, sp
   524e8:	bl	c040 <mpfr_mpz_init@plt>
   524ec:	str	xzr, [x19]
   524f0:	ldr	x19, [sp, #16]
   524f4:	ldp	x29, x30, [sp], #32
   524f8:	ret

00000000000524fc <mpfr_random_deviate_reset@@Base>:
   524fc:	str	xzr, [x0]
   52500:	ret

0000000000052504 <mpfr_random_deviate_clear@@Base>:
   52504:	add	x0, x0, #0x10
   52508:	b	c210 <mpfr_mpz_clear@plt>

000000000005250c <mpfr_random_deviate_swap@@Base>:
   5250c:	ldr	q0, [x1]
   52510:	ldr	q1, [x0]
   52514:	str	q0, [x0], #16
   52518:	str	q1, [x1], #16
   5251c:	b	c180 <__gmpz_swap@plt>

0000000000052520 <mpfr_random_deviate_tstbit@@Base>:
   52520:	stp	x29, x30, [sp, #-32]!
   52524:	stp	x20, x19, [sp, #16]
   52528:	mov	x29, sp
   5252c:	cbz	x1, 52560 <mpfr_random_deviate_tstbit@@Base+0x40>
   52530:	mov	x3, xzr
   52534:	mov	x19, x1
   52538:	mov	x20, x0
   5253c:	bl	52588 <mpfr_random_deviate_tstbit@@Base+0x68>
   52540:	cmp	x19, #0x20
   52544:	b.hi	52570 <mpfr_random_deviate_tstbit@@Base+0x50>  // b.pmore
   52548:	ldr	x8, [x20, #8]
   5254c:	mov	w9, #0x20                  	// #32
   52550:	sub	x9, x9, x19
   52554:	lsr	x8, x8, x9
   52558:	and	w0, w8, #0x1
   5255c:	b	52564 <mpfr_random_deviate_tstbit@@Base+0x44>
   52560:	mov	w0, wzr
   52564:	ldp	x20, x19, [sp, #16]
   52568:	ldp	x29, x30, [sp], #32
   5256c:	ret
   52570:	ldr	x8, [x20], #16
   52574:	sub	x1, x8, x19
   52578:	mov	x0, x20
   5257c:	ldp	x20, x19, [sp, #16]
   52580:	ldp	x29, x30, [sp], #32
   52584:	b	c080 <__gmpz_tstbit@plt>
   52588:	stp	x29, x30, [sp, #-64]!
   5258c:	stp	x22, x21, [sp, #32]
   52590:	stp	x20, x19, [sp, #48]
   52594:	mov	x22, x3
   52598:	mov	x20, x2
   5259c:	mov	x21, x1
   525a0:	cmn	x1, #0x20
   525a4:	mov	x19, x0
   525a8:	stp	x24, x23, [sp, #16]
   525ac:	mov	x29, sp
   525b0:	b.cs	526c4 <mpfr_random_deviate_tstbit@@Base+0x1a4>  // b.hs, b.nlast
   525b4:	ldr	x24, [x19]
   525b8:	cmp	x24, x21
   525bc:	b.cs	526b0 <mpfr_random_deviate_tstbit@@Base+0x190>  // b.hs, b.nlast
   525c0:	cbnz	x24, 525e0 <mpfr_random_deviate_tstbit@@Base+0xc0>
   525c4:	mov	w1, #0x20                  	// #32
   525c8:	mov	x0, x20
   525cc:	mov	w24, #0x20                  	// #32
   525d0:	bl	cb60 <__gmp_urandomb_ui@plt>
   525d4:	cmp	x21, #0x21
   525d8:	stp	x24, x0, [x19]
   525dc:	b.cc	526b0 <mpfr_random_deviate_tstbit@@Base+0x190>  // b.lo, b.ul, b.last
   525e0:	cbz	x22, 52644 <mpfr_random_deviate_tstbit@@Base+0x124>
   525e4:	add	x8, x21, #0x1f
   525e8:	and	x8, x8, #0xffffffffffffffe0
   525ec:	add	x23, x19, #0x10
   525f0:	cmp	x24, #0x20
   525f4:	sub	x21, x8, x24
   525f8:	csel	x0, x23, x22, eq  // eq = none
   525fc:	mov	x1, x20
   52600:	mov	x2, x21
   52604:	bl	cd60 <__gmpz_urandomb@plt>
   52608:	ldr	x8, [x19]
   5260c:	cmp	x8, #0x21
   52610:	b.cc	52638 <mpfr_random_deviate_tstbit@@Base+0x118>  // b.lo, b.ul, b.last
   52614:	mov	x0, x23
   52618:	mov	x1, x23
   5261c:	mov	x2, x21
   52620:	bl	c290 <__gmpz_mul_2exp@plt>
   52624:	mov	x0, x23
   52628:	mov	x1, x23
   5262c:	mov	x2, x22
   52630:	bl	ca10 <__gmpz_add@plt>
   52634:	ldr	x8, [x19]
   52638:	add	x8, x8, x21
   5263c:	str	x8, [x19]
   52640:	b	526b0 <mpfr_random_deviate_tstbit@@Base+0x190>
   52644:	cmp	x24, x21
   52648:	b.cs	526b0 <mpfr_random_deviate_tstbit@@Base+0x190>  // b.hs, b.nlast
   5264c:	add	x22, x19, #0x10
   52650:	mov	w1, #0x20                  	// #32
   52654:	mov	x0, x20
   52658:	bl	cb60 <__gmp_urandomb_ui@plt>
   5265c:	ldr	x8, [x19]
   52660:	mov	x23, x0
   52664:	cmp	x8, #0x20
   52668:	b.ne	5267c <mpfr_random_deviate_tstbit@@Base+0x15c>  // b.any
   5266c:	mov	x0, x22
   52670:	mov	x1, x23
   52674:	bl	bd60 <__gmpz_set_ui@plt>
   52678:	b	5269c <mpfr_random_deviate_tstbit@@Base+0x17c>
   5267c:	mov	w2, #0x20                  	// #32
   52680:	mov	x0, x22
   52684:	mov	x1, x22
   52688:	bl	c290 <__gmpz_mul_2exp@plt>
   5268c:	mov	x0, x22
   52690:	mov	x1, x22
   52694:	mov	x2, x23
   52698:	bl	c3c0 <__gmpz_add_ui@plt>
   5269c:	ldr	x8, [x19]
   526a0:	add	x8, x8, #0x20
   526a4:	cmp	x8, x21
   526a8:	str	x8, [x19]
   526ac:	b.cc	52650 <mpfr_random_deviate_tstbit@@Base+0x130>  // b.lo, b.ul, b.last
   526b0:	ldp	x20, x19, [sp, #48]
   526b4:	ldp	x22, x21, [sp, #32]
   526b8:	ldp	x24, x23, [sp, #16]
   526bc:	ldp	x29, x30, [sp], #64
   526c0:	ret
   526c4:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   526c8:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   526cc:	add	x0, x0, #0x68b
   526d0:	add	x2, x2, #0x6bb
   526d4:	mov	w1, #0x82                  	// #130
   526d8:	bl	cb90 <mpfr_assert_fail@plt>
   526dc:	b	525b4 <mpfr_random_deviate_tstbit@@Base+0x94>

00000000000526e0 <mpfr_random_deviate_less@@Base>:
   526e0:	stp	x29, x30, [sp, #-64]!
   526e4:	cmp	x0, x1
   526e8:	str	x23, [sp, #16]
   526ec:	stp	x22, x21, [sp, #32]
   526f0:	stp	x20, x19, [sp, #48]
   526f4:	mov	x29, sp
   526f8:	b.eq	52774 <mpfr_random_deviate_less@@Base+0x94>  // b.none
   526fc:	mov	x19, x1
   52700:	mov	w1, #0x20                  	// #32
   52704:	mov	x3, xzr
   52708:	mov	x20, x0
   5270c:	mov	x21, x2
   52710:	bl	52588 <mpfr_random_deviate_tstbit@@Base+0x68>
   52714:	mov	w1, #0x20                  	// #32
   52718:	mov	x0, x19
   5271c:	mov	x2, x21
   52720:	mov	x3, xzr
   52724:	bl	52588 <mpfr_random_deviate_tstbit@@Base+0x68>
   52728:	ldr	x8, [x20, #8]
   5272c:	ldr	x9, [x19, #8]
   52730:	cmp	x8, x9
   52734:	b.ne	5277c <mpfr_random_deviate_less@@Base+0x9c>  // b.any
   52738:	mov	w22, #0x21                  	// #33
   5273c:	mov	x0, x20
   52740:	mov	x1, x22
   52744:	mov	x2, x21
   52748:	bl	c370 <mpfr_random_deviate_tstbit@plt>
   5274c:	mov	w23, w0
   52750:	mov	x0, x19
   52754:	mov	x1, x22
   52758:	mov	x2, x21
   5275c:	bl	c370 <mpfr_random_deviate_tstbit@plt>
   52760:	cmp	w23, w0
   52764:	add	x22, x22, #0x1
   52768:	b.eq	5273c <mpfr_random_deviate_less@@Base+0x5c>  // b.none
   5276c:	cset	w0, lt  // lt = tstop
   52770:	b	52780 <mpfr_random_deviate_less@@Base+0xa0>
   52774:	mov	w0, wzr
   52778:	b	52780 <mpfr_random_deviate_less@@Base+0xa0>
   5277c:	cset	w0, cc  // cc = lo, ul, last
   52780:	ldp	x20, x19, [sp, #48]
   52784:	ldp	x22, x21, [sp, #32]
   52788:	ldr	x23, [sp, #16]
   5278c:	ldp	x29, x30, [sp], #64
   52790:	ret

0000000000052794 <mpfr_random_deviate_value@@Base>:
   52794:	sub	sp, sp, #0x70
   52798:	stp	x29, x30, [sp, #16]
   5279c:	stp	x26, x25, [sp, #48]
   527a0:	stp	x24, x23, [sp, #64]
   527a4:	stp	x22, x21, [sp, #80]
   527a8:	stp	x20, x19, [sp, #96]
   527ac:	ldr	x26, [x3]
   527b0:	mov	w19, w5
   527b4:	mov	x24, x4
   527b8:	mov	x20, x3
   527bc:	mov	x21, x2
   527c0:	mov	x23, x1
   527c4:	mov	w22, w0
   527c8:	str	x27, [sp, #32]
   527cc:	add	x29, sp, #0x10
   527d0:	cbz	x1, 527e4 <mpfr_random_deviate_value@@Base+0x50>
   527d4:	clz	x8, x23
   527d8:	eor	x25, x8, #0x3f
   527dc:	mov	w27, #0x1                   	// #1
   527e0:	b	5286c <mpfr_random_deviate_value@@Base+0xd8>
   527e4:	mov	w1, #0x20                  	// #32
   527e8:	mov	x0, x21
   527ec:	mov	x2, x24
   527f0:	mov	x3, xzr
   527f4:	bl	52588 <mpfr_random_deviate_tstbit@@Base+0x68>
   527f8:	ldr	x8, [x21, #8]
   527fc:	cbz	x8, 52814 <mpfr_random_deviate_value@@Base+0x80>
   52800:	clz	x8, x8
   52804:	mov	w9, #0x20                  	// #32
   52808:	eor	x8, x8, #0x3f
   5280c:	sub	x25, x9, x8
   52810:	b	52868 <mpfr_random_deviate_value@@Base+0xd4>
   52814:	mov	w1, #0x40                  	// #64
   52818:	mov	x0, x21
   5281c:	mov	x2, x24
   52820:	mov	x3, xzr
   52824:	bl	52588 <mpfr_random_deviate_tstbit@@Base+0x68>
   52828:	ldr	x9, [x21]
   5282c:	ldr	w8, [x21, #20]
   52830:	add	x25, x9, #0x1
   52834:	cbnz	w8, 52844 <mpfr_random_deviate_value@@Base+0xb0>
   52838:	mov	x0, x21
   5283c:	mov	x1, x25
   52840:	b	5281c <mpfr_random_deviate_value@@Base+0x88>
   52844:	add	x0, x21, #0x10
   52848:	mov	w1, #0x2                   	// #2
   5284c:	bl	cbb0 <__gmpz_sizeinbase@plt>
   52850:	sub	x25, x25, x0
   52854:	mov	x9, #0x101                 	// #257
   52858:	add	x8, x25, #0x1
   5285c:	movk	x9, #0x8000, lsl #48
   52860:	cmp	x8, x9
   52864:	b.cs	529b0 <mpfr_random_deviate_value@@Base+0x21c>  // b.hs, b.nlast
   52868:	mov	w27, #0xffffffff            	// #-1
   5286c:	mov	x0, sp
   52870:	bl	c040 <mpfr_mpz_init@plt>
   52874:	add	x8, x26, #0x1
   52878:	cmp	x8, x25
   5287c:	b.ls	52888 <mpfr_random_deviate_value@@Base+0xf4>  // b.plast
   52880:	cmp	w27, #0x1
   52884:	b.ge	52894 <mpfr_random_deviate_value@@Base+0x100>  // b.tcont
   52888:	cmn	x8, x25
   5288c:	b.eq	528b4 <mpfr_random_deviate_value@@Base+0x120>  // b.none
   52890:	tbz	w27, #31, 528b4 <mpfr_random_deviate_value@@Base+0x120>
   52894:	neg	x9, x25
   52898:	cmp	w27, #0x0
   5289c:	csel	x9, x9, x25, gt
   528a0:	add	x1, x9, x8
   528a4:	mov	x3, sp
   528a8:	mov	x0, x21
   528ac:	mov	x2, x24
   528b0:	bl	52588 <mpfr_random_deviate_tstbit@@Base+0x68>
   528b4:	cbz	x23, 528f0 <mpfr_random_deviate_value@@Base+0x15c>
   528b8:	mov	x0, sp
   528bc:	mov	x1, x23
   528c0:	bl	bd60 <__gmpz_set_ui@plt>
   528c4:	ldr	x8, [x21]
   528c8:	cbz	x8, 528fc <mpfr_random_deviate_value@@Base+0x168>
   528cc:	mov	x0, sp
   528d0:	mov	x1, sp
   528d4:	mov	w2, #0x20                  	// #32
   528d8:	bl	c290 <__gmpz_mul_2exp@plt>
   528dc:	ldr	x2, [x21, #8]
   528e0:	mov	x0, sp
   528e4:	mov	x1, sp
   528e8:	bl	c3c0 <__gmpz_add_ui@plt>
   528ec:	b	528fc <mpfr_random_deviate_value@@Base+0x168>
   528f0:	ldr	x1, [x21, #8]
   528f4:	mov	x0, sp
   528f8:	bl	bd60 <__gmpz_set_ui@plt>
   528fc:	ldr	x8, [x21]
   52900:	cmp	x8, #0x21
   52904:	b.cc	52928 <mpfr_random_deviate_value@@Base+0x194>  // b.lo, b.ul, b.last
   52908:	sub	x2, x8, #0x20
   5290c:	mov	x0, sp
   52910:	mov	x1, sp
   52914:	bl	c290 <__gmpz_mul_2exp@plt>
   52918:	add	x2, x21, #0x10
   5291c:	mov	x0, sp
   52920:	mov	x1, sp
   52924:	bl	ca10 <__gmpz_add@plt>
   52928:	mov	x0, sp
   5292c:	mov	x1, xzr
   52930:	bl	bfc0 <__gmpz_setbit@plt>
   52934:	cbz	w22, 52944 <mpfr_random_deviate_value@@Base+0x1b0>
   52938:	ldr	w8, [sp, #4]
   5293c:	neg	w8, w8
   52940:	str	w8, [sp, #4]
   52944:	ldr	x8, [x21]
   52948:	tbnz	x8, #63, 52990 <mpfr_random_deviate_value@@Base+0x1fc>
   5294c:	neg	x2, x8
   52950:	mov	x1, sp
   52954:	mov	x0, x20
   52958:	mov	w3, w19
   5295c:	bl	c540 <mpfr_set_z_2exp@plt>
   52960:	mov	w19, w0
   52964:	mov	x0, sp
   52968:	bl	c210 <mpfr_mpz_clear@plt>
   5296c:	mov	w0, w19
   52970:	ldp	x20, x19, [sp, #96]
   52974:	ldp	x22, x21, [sp, #80]
   52978:	ldp	x24, x23, [sp, #64]
   5297c:	ldp	x26, x25, [sp, #48]
   52980:	ldr	x27, [sp, #32]
   52984:	ldp	x29, x30, [sp, #16]
   52988:	add	sp, sp, #0x70
   5298c:	ret
   52990:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   52994:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   52998:	add	x0, x0, #0x68b
   5299c:	add	x2, x2, #0x69c
   529a0:	mov	w1, #0x177                 	// #375
   529a4:	bl	cb90 <mpfr_assert_fail@plt>
   529a8:	ldr	x8, [x21]
   529ac:	b	5294c <mpfr_random_deviate_value@@Base+0x1b8>
   529b0:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   529b4:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   529b8:	add	x0, x0, #0x68b
   529bc:	add	x2, x2, #0x6e6
   529c0:	mov	w1, #0xf1                  	// #241
   529c4:	bl	cb90 <mpfr_assert_fail@plt>
   529c8:	b	52868 <mpfr_random_deviate_value@@Base+0xd4>

00000000000529cc <mpfr_erandom@@Base>:
   529cc:	sub	sp, sp, #0xa0
   529d0:	stp	x29, x30, [sp, #96]
   529d4:	add	x29, sp, #0x60
   529d8:	stp	x22, x21, [sp, #128]
   529dc:	mov	x21, x0
   529e0:	sub	x0, x29, #0x20
   529e4:	stp	x24, x23, [sp, #112]
   529e8:	stp	x20, x19, [sp, #144]
   529ec:	mov	w19, w2
   529f0:	mov	x20, x1
   529f4:	bl	c1f0 <mpfr_random_deviate_init@plt>
   529f8:	add	x0, sp, #0x20
   529fc:	bl	c1f0 <mpfr_random_deviate_init@plt>
   52a00:	mov	x0, sp
   52a04:	bl	c1f0 <mpfr_random_deviate_init@plt>
   52a08:	add	x0, sp, #0x20
   52a0c:	bl	c830 <mpfr_random_deviate_reset@plt>
   52a10:	add	x0, sp, #0x20
   52a14:	sub	x1, x29, #0x20
   52a18:	mov	x2, x20
   52a1c:	bl	ca80 <mpfr_random_deviate_less@plt>
   52a20:	mov	x22, xzr
   52a24:	cbz	w0, 52aac <mpfr_erandom@@Base+0xe0>
   52a28:	adrp	x23, 5f000 <mpfr_bases@@Base+0x14f8>
   52a2c:	adrp	x24, 5f000 <mpfr_bases@@Base+0x14f8>
   52a30:	add	x23, x23, #0x738
   52a34:	add	x24, x24, #0x742
   52a38:	mov	x0, sp
   52a3c:	bl	c830 <mpfr_random_deviate_reset@plt>
   52a40:	mov	x0, sp
   52a44:	add	x1, sp, #0x20
   52a48:	mov	x2, x20
   52a4c:	bl	ca80 <mpfr_random_deviate_less@plt>
   52a50:	cbz	w0, 52a74 <mpfr_erandom@@Base+0xa8>
   52a54:	add	x0, sp, #0x20
   52a58:	bl	c830 <mpfr_random_deviate_reset@plt>
   52a5c:	add	x0, sp, #0x20
   52a60:	mov	x1, sp
   52a64:	mov	x2, x20
   52a68:	bl	ca80 <mpfr_random_deviate_less@plt>
   52a6c:	cbnz	w0, 52a38 <mpfr_erandom@@Base+0x6c>
   52a70:	b	52aac <mpfr_erandom@@Base+0xe0>
   52a74:	adds	x22, x22, #0x1
   52a78:	b.cs	52a98 <mpfr_erandom@@Base+0xcc>  // b.hs, b.nlast
   52a7c:	sub	x0, x29, #0x20
   52a80:	bl	c830 <mpfr_random_deviate_reset@plt>
   52a84:	add	x0, sp, #0x20
   52a88:	bl	c830 <mpfr_random_deviate_reset@plt>
   52a8c:	add	x0, sp, #0x20
   52a90:	sub	x1, x29, #0x20
   52a94:	b	52a64 <mpfr_erandom@@Base+0x98>
   52a98:	mov	w1, #0x61                  	// #97
   52a9c:	mov	x0, x23
   52aa0:	mov	x2, x24
   52aa4:	bl	cb90 <mpfr_assert_fail@plt>
   52aa8:	b	52a7c <mpfr_erandom@@Base+0xb0>
   52aac:	mov	x0, sp
   52ab0:	bl	bea0 <mpfr_random_deviate_clear@plt>
   52ab4:	add	x0, sp, #0x20
   52ab8:	bl	bea0 <mpfr_random_deviate_clear@plt>
   52abc:	sub	x2, x29, #0x20
   52ac0:	mov	w0, wzr
   52ac4:	mov	x1, x22
   52ac8:	mov	x3, x21
   52acc:	mov	x4, x20
   52ad0:	mov	w5, w19
   52ad4:	bl	bb60 <mpfr_random_deviate_value@plt>
   52ad8:	mov	w19, w0
   52adc:	sub	x0, x29, #0x20
   52ae0:	bl	bea0 <mpfr_random_deviate_clear@plt>
   52ae4:	mov	w0, w19
   52ae8:	ldp	x20, x19, [sp, #144]
   52aec:	ldp	x22, x21, [sp, #128]
   52af0:	ldp	x24, x23, [sp, #112]
   52af4:	ldp	x29, x30, [sp, #96]
   52af8:	add	sp, sp, #0xa0
   52afc:	ret

0000000000052b00 <mpfr_fmma@@Base>:
   52b00:	mov	w6, wzr
   52b04:	b	52b08 <mpfr_fmma@@Base+0x8>
   52b08:	stp	x29, x30, [sp, #-96]!
   52b0c:	stp	x28, x27, [sp, #16]
   52b10:	stp	x26, x25, [sp, #32]
   52b14:	stp	x24, x23, [sp, #48]
   52b18:	stp	x22, x21, [sp, #64]
   52b1c:	stp	x20, x19, [sp, #80]
   52b20:	mov	x29, sp
   52b24:	sub	sp, sp, #0xa0
   52b28:	ldr	x27, [x0]
   52b2c:	stur	xzr, [x29, #-136]
   52b30:	ldr	x8, [x1]
   52b34:	ldr	x9, [x2]
   52b38:	ldr	x10, [x3]
   52b3c:	ldr	x11, [x4]
   52b40:	sub	x12, x8, #0x1
   52b44:	add	x8, x8, #0x3e
   52b48:	cmp	x12, #0x0
   52b4c:	csel	x8, x8, x12, lt  // lt = tstop
   52b50:	sub	x12, x9, #0x1
   52b54:	add	x9, x9, #0x3e
   52b58:	cmp	x12, #0x0
   52b5c:	csel	x9, x9, x12, lt  // lt = tstop
   52b60:	sub	x12, x10, #0x1
   52b64:	add	x10, x10, #0x3e
   52b68:	cmp	x12, #0x0
   52b6c:	csel	x10, x10, x12, lt  // lt = tstop
   52b70:	sub	x12, x11, #0x1
   52b74:	asr	x9, x9, #6
   52b78:	add	x11, x11, #0x3e
   52b7c:	cmp	x12, #0x0
   52b80:	add	x28, x9, x8, asr #6
   52b84:	asr	x8, x10, #6
   52b88:	csel	x9, x11, x12, lt  // lt = tstop
   52b8c:	add	x20, x28, #0x2
   52b90:	add	x8, x8, x9, asr #6
   52b94:	lsl	x24, x20, #3
   52b98:	mov	w26, w6
   52b9c:	mov	x21, x4
   52ba0:	mov	x22, x3
   52ba4:	mov	x23, x2
   52ba8:	mov	x25, x1
   52bac:	cmp	x24, #0x4, lsl #12
   52bb0:	add	x19, x8, #0x2
   52bb4:	stur	w5, [x29, #-140]
   52bb8:	stur	x0, [x29, #-152]
   52bbc:	b.hi	52d88 <mpfr_fmma@@Base+0x288>  // b.pmore
   52bc0:	add	x9, x24, #0xf
   52bc4:	mov	x8, sp
   52bc8:	and	x9, x9, #0xfffffffffffffff0
   52bcc:	sub	x0, x8, x9
   52bd0:	mov	sp, x0
   52bd4:	lsl	x1, x19, #3
   52bd8:	lsl	x8, x20, #6
   52bdc:	mov	w9, #0x1                   	// #1
   52be0:	cmp	x1, #0x4, lsl #12
   52be4:	stur	x0, [x29, #-24]
   52be8:	stur	x8, [x29, #-48]
   52bec:	stur	w9, [x29, #-40]
   52bf0:	b.hi	52d98 <mpfr_fmma@@Base+0x298>  // b.pmore
   52bf4:	add	x9, x1, #0xf
   52bf8:	mov	x8, sp
   52bfc:	and	x9, x9, #0xfffffffffffffff0
   52c00:	sub	x0, x8, x9
   52c04:	mov	sp, x0
   52c08:	lsl	x8, x19, #6
   52c0c:	stur	x0, [x29, #-72]
   52c10:	mov	w9, #0x1                   	// #1
   52c14:	sub	x0, x29, #0x30
   52c18:	mov	x1, x25
   52c1c:	mov	x2, x23
   52c20:	stur	x8, [x29, #-96]
   52c24:	stur	w9, [x29, #-88]
   52c28:	bl	c030 <mpfr_ubf_mul_exact@plt>
   52c2c:	sub	x0, x29, #0x60
   52c30:	mov	x1, x22
   52c34:	mov	x2, x21
   52c38:	bl	c030 <mpfr_ubf_mul_exact@plt>
   52c3c:	cbz	w26, 52c4c <mpfr_fmma@@Base+0x14c>
   52c40:	ldur	w8, [x29, #-88]
   52c44:	neg	w8, w8
   52c48:	stur	w8, [x29, #-88]
   52c4c:	ldr	x8, [x25]
   52c50:	cmp	x27, x8
   52c54:	b.ne	52cbc <mpfr_fmma@@Base+0x1bc>  // b.any
   52c58:	ldr	x8, [x23]
   52c5c:	cmp	x27, x8
   52c60:	b.ne	52cbc <mpfr_fmma@@Base+0x1bc>  // b.any
   52c64:	ldr	x8, [x22]
   52c68:	cmp	x27, x8
   52c6c:	b.ne	52cbc <mpfr_fmma@@Base+0x1bc>  // b.any
   52c70:	ldr	x8, [x21]
   52c74:	cmp	x27, x8
   52c78:	b.ne	52cbc <mpfr_fmma@@Base+0x1bc>  // b.any
   52c7c:	lsl	x19, x27, #1
   52c80:	sub	x8, x19, #0x1
   52c84:	add	x9, x19, #0x3e
   52c88:	cmp	x8, #0x0
   52c8c:	csel	x8, x9, x8, lt  // lt = tstop
   52c90:	add	x9, x28, #0x1
   52c94:	cmp	x9, x8, asr #6
   52c98:	b.ne	52cbc <mpfr_fmma@@Base+0x1bc>  // b.any
   52c9c:	cmp	x24, #0x4, lsl #12
   52ca0:	b.hi	52d38 <mpfr_fmma@@Base+0x238>  // b.pmore
   52ca4:	add	x9, x24, #0xf
   52ca8:	mov	x8, sp
   52cac:	and	x9, x9, #0xfffffffffffffff0
   52cb0:	sub	x0, x8, x9
   52cb4:	mov	sp, x0
   52cb8:	b	52d44 <mpfr_fmma@@Base+0x244>
   52cbc:	ldur	x0, [x29, #-152]
   52cc0:	ldur	w3, [x29, #-140]
   52cc4:	sub	x1, x29, #0x30
   52cc8:	sub	x2, x29, #0x60
   52ccc:	bl	c240 <mpfr_add@plt>
   52cd0:	ldur	x8, [x29, #-32]
   52cd4:	mov	x20, #0x4                   	// #4
   52cd8:	movk	x20, #0x8000, lsl #48
   52cdc:	mov	w19, w0
   52ce0:	cmp	x8, x20
   52ce4:	b.ne	52cf4 <mpfr_fmma@@Base+0x1f4>  // b.any
   52ce8:	sub	x8, x29, #0x30
   52cec:	add	x0, x8, #0x20
   52cf0:	bl	c210 <mpfr_mpz_clear@plt>
   52cf4:	ldur	x8, [x29, #-80]
   52cf8:	cmp	x8, x20
   52cfc:	b.ne	52d0c <mpfr_fmma@@Base+0x20c>  // b.any
   52d00:	sub	x8, x29, #0x60
   52d04:	add	x0, x8, #0x20
   52d08:	bl	c210 <mpfr_mpz_clear@plt>
   52d0c:	ldur	x0, [x29, #-136]
   52d10:	cbnz	x0, 52da4 <mpfr_fmma@@Base+0x2a4>
   52d14:	mov	w0, w19
   52d18:	mov	sp, x29
   52d1c:	ldp	x20, x19, [sp, #80]
   52d20:	ldp	x22, x21, [sp, #64]
   52d24:	ldp	x24, x23, [sp, #48]
   52d28:	ldp	x26, x25, [sp, #32]
   52d2c:	ldp	x28, x27, [sp, #16]
   52d30:	ldp	x29, x30, [sp], #96
   52d34:	ret
   52d38:	sub	x0, x29, #0x88
   52d3c:	mov	x1, x24
   52d40:	bl	be70 <mpfr_tmp_allocate@plt>
   52d44:	stur	x19, [x29, #-128]
   52d48:	stp	x0, x19, [x29, #-104]
   52d4c:	stur	x19, [x29, #-48]
   52d50:	ldur	w19, [x29, #-140]
   52d54:	mov	w8, #0x1                   	// #1
   52d58:	sub	x0, x29, #0x80
   52d5c:	sub	x1, x29, #0x30
   52d60:	sub	x2, x29, #0x60
   52d64:	mov	w3, w19
   52d68:	stur	w8, [x29, #-120]
   52d6c:	bl	c240 <mpfr_add@plt>
   52d70:	mov	w3, w0
   52d74:	ldur	x0, [x29, #-152]
   52d78:	sub	x1, x29, #0x80
   52d7c:	mov	w2, w19
   52d80:	bl	cb30 <mpfr_set_1_2@plt>
   52d84:	b	52cd0 <mpfr_fmma@@Base+0x1d0>
   52d88:	sub	x0, x29, #0x88
   52d8c:	mov	x1, x24
   52d90:	bl	be70 <mpfr_tmp_allocate@plt>
   52d94:	b	52bd4 <mpfr_fmma@@Base+0xd4>
   52d98:	sub	x0, x29, #0x88
   52d9c:	bl	be70 <mpfr_tmp_allocate@plt>
   52da0:	b	52c08 <mpfr_fmma@@Base+0x108>
   52da4:	bl	c460 <mpfr_tmp_free@plt>
   52da8:	b	52d14 <mpfr_fmma@@Base+0x214>

0000000000052dac <mpfr_fmms@@Base>:
   52dac:	mov	w6, #0x1                   	// #1
   52db0:	b	52b08 <mpfr_fmma@@Base+0x8>

0000000000052db4 <mpfr_log_ui@@Base>:
   52db4:	stp	x29, x30, [sp, #-96]!
   52db8:	stp	x28, x27, [sp, #16]
   52dbc:	stp	x26, x25, [sp, #32]
   52dc0:	stp	x24, x23, [sp, #48]
   52dc4:	stp	x22, x21, [sp, #64]
   52dc8:	stp	x20, x19, [sp, #80]
   52dcc:	mov	x29, sp
   52dd0:	sub	sp, sp, #0x1a0
   52dd4:	mov	w23, w2
   52dd8:	mov	x24, x1
   52ddc:	cmp	x1, #0x2
   52de0:	mov	x22, x0
   52de4:	mov	x19, sp
   52de8:	b.hi	52e30 <mpfr_log_ui@@Base+0x7c>  // b.pmore
   52dec:	cmp	x24, #0x1
   52df0:	b.eq	53424 <mpfr_log_ui@@Base+0x670>  // b.none
   52df4:	cbnz	x24, 5343c <mpfr_log_ui@@Base+0x688>
   52df8:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   52dfc:	mov	w9, #0xffffffff            	// #-1
   52e00:	str	x8, [x22, #16]
   52e04:	str	w9, [x22, #8]
   52e08:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52e0c:	ldr	x1, [x0, #2656]
   52e10:	add	x0, x0, #0xa60
   52e14:	blr	x1
   52e18:	mrs	x8, tpidr_el0
   52e1c:	ldr	w9, [x8, x0]
   52e20:	mov	w21, wzr
   52e24:	orr	w9, w9, #0x20
   52e28:	str	w9, [x8, x0]
   52e2c:	b	53464 <mpfr_log_ui@@Base+0x6b0>
   52e30:	sub	x0, x29, #0x18
   52e34:	bl	c040 <mpfr_mpz_init@plt>
   52e38:	sub	x0, x29, #0x18
   52e3c:	mov	x1, x24
   52e40:	bl	bd60 <__gmpz_set_ui@plt>
   52e44:	sub	x0, x29, #0x18
   52e48:	sub	x1, x29, #0x18
   52e4c:	mov	w2, #0x3                   	// #3
   52e50:	bl	c1a0 <__gmpz_mul_ui@plt>
   52e54:	sub	x0, x29, #0x18
   52e58:	mov	w1, #0x2                   	// #2
   52e5c:	bl	cbb0 <__gmpz_sizeinbase@plt>
   52e60:	mov	x27, x0
   52e64:	sub	x28, x0, #0x2
   52e68:	sub	x0, x29, #0x18
   52e6c:	bl	c210 <mpfr_mpz_clear@plt>
   52e70:	str	xzr, [x19, #176]
   52e74:	ldr	x21, [x22]
   52e78:	mov	w8, #0x1                   	// #1
   52e7c:	lsl	x8, x8, x28
   52e80:	cmp	x28, #0x40
   52e84:	csel	x20, x8, xzr, cc  // cc = lo, ul, last
   52e88:	cmp	x21, #0x1
   52e8c:	b.eq	53488 <mpfr_log_ui@@Base+0x6d4>  // b.none
   52e90:	mov	x8, x21
   52e94:	b.le	534ac <mpfr_log_ui@@Base+0x6f8>
   52e98:	sub	x8, x8, #0x1
   52e9c:	clz	x8, x8
   52ea0:	mov	w9, #0x40                  	// #64
   52ea4:	sub	x8, x9, x8
   52ea8:	mov	x9, #0xfffffffffffffeff    	// #-257
   52eac:	movk	x9, #0x7fff, lsl #48
   52eb0:	add	x8, x8, x21
   52eb4:	sub	x9, x9, #0xa
   52eb8:	cmp	x8, x9
   52ebc:	b.gt	534cc <mpfr_log_ui@@Base+0x718>
   52ec0:	add	x9, x8, #0x9
   52ec4:	add	x10, x8, #0x48
   52ec8:	cmp	x9, #0x0
   52ecc:	csel	x9, x10, x9, lt  // lt = tstop
   52ed0:	asr	x9, x9, #6
   52ed4:	sub	x25, x24, x20
   52ed8:	add	x21, x8, #0xa
   52edc:	cmp	x8, #0x1f7
   52ee0:	add	x20, x9, #0x1
   52ee4:	b.lt	52ef8 <mpfr_log_ui@@Base+0x144>  // b.tstop
   52ee8:	lsl	x0, x20, #4
   52eec:	str	x0, [x19, #184]
   52ef0:	bl	cd50 <mpfr_allocate_func@plt>
   52ef4:	b	52f04 <mpfr_log_ui@@Base+0x150>
   52ef8:	add	x8, x19, #0xb8
   52efc:	add	x0, x8, #0x10
   52f00:	str	xzr, [x19, #184]
   52f04:	mov	w8, #0x1                   	// #1
   52f08:	add	x9, x0, x20, lsl #3
   52f0c:	str	x0, [x19, #192]
   52f10:	stur	x0, [x29, #-32]
   52f14:	stur	x21, [x29, #-88]
   52f18:	stur	w8, [x29, #-48]
   52f1c:	stp	x9, x21, [x29, #-64]
   52f20:	stur	w8, [x29, #-80]
   52f24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52f28:	ldr	x1, [x0, #2656]
   52f2c:	add	x0, x0, #0xa60
   52f30:	blr	x1
   52f34:	mrs	x10, tpidr_el0
   52f38:	ldr	w11, [x10, x0]
   52f3c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52f40:	ldr	x1, [x0, #2592]
   52f44:	add	x0, x0, #0xa20
   52f48:	blr	x1
   52f4c:	ldr	x12, [x10, x0]
   52f50:	mov	x8, x0
   52f54:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   52f58:	ldr	x1, [x0, #2624]
   52f5c:	add	x0, x0, #0xa40
   52f60:	blr	x1
   52f64:	ldr	x13, [x10, x0]
   52f68:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   52f6c:	str	x9, [x10, x8]
   52f70:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   52f74:	str	x10, [x19, #128]
   52f78:	str	x8, [x10, x0]
   52f7c:	str	w11, [x19, #36]
   52f80:	stp	x13, x12, [x19, #16]
   52f84:	cbz	x25, 52fb8 <mpfr_log_ui@@Base+0x204>
   52f88:	mov	x26, x28
   52f8c:	tbnz	w25, #0, 52fa4 <mpfr_log_ui@@Base+0x1f0>
   52f90:	cmp	x25, #0x0
   52f94:	cinc	x8, x25, lt  // lt = tstop
   52f98:	asr	x25, x8, #1
   52f9c:	sub	x26, x26, #0x1
   52fa0:	tbz	w25, #0, 52f90 <mpfr_log_ui@@Base+0x1dc>
   52fa4:	cmp	x25, #0x0
   52fa8:	add	x20, x19, #0x90
   52fac:	cneg	x8, x25, mi  // mi = first
   52fb0:	str	x8, [x19, #64]
   52fb4:	b	52fc4 <mpfr_log_ui@@Base+0x210>
   52fb8:	str	xzr, [x19, #64]
   52fbc:	add	x20, x19, #0x90
   52fc0:	mov	x26, x28
   52fc4:	add	x8, x27, #0x3
   52fc8:	cmp	w23, #0x0
   52fcc:	mov	w10, #0x40                  	// #64
   52fd0:	clz	x8, x8
   52fd4:	cset	w9, eq  // eq = none
   52fd8:	str	w23, [x19, #92]
   52fdc:	mov	w24, #0x2                   	// #2
   52fe0:	mov	w23, #0x41                  	// #65
   52fe4:	stp	x9, x22, [x19, #48]
   52fe8:	mov	w9, #0x40                  	// #64
   52fec:	sub	x8, x10, x8
   52ff0:	stp	x20, x9, [x19]
   52ff4:	str	x8, [x19, #40]
   52ff8:	stp	x28, x27, [x19, #72]
   52ffc:	mov	w1, #0x20                  	// #32
   53000:	mov	x0, x20
   53004:	bl	cad0 <mpfr_init2@plt>
   53008:	ldr	x1, [x19, #64]
   5300c:	mov	w3, #0x2                   	// #2
   53010:	mov	x0, x20
   53014:	mov	x2, xzr
   53018:	bl	c640 <mpfr_set_ui_2exp@plt>
   5301c:	mov	w2, #0x2                   	// #2
   53020:	mov	x0, x20
   53024:	mov	x1, x20
   53028:	bl	c270 <mpfr_log2@plt>
   5302c:	mov	w3, #0x3                   	// #3
   53030:	mov	x0, x20
   53034:	mov	x1, x26
   53038:	mov	x2, x20
   5303c:	bl	caa0 <mpfr_ui_sub@plt>
   53040:	mov	w3, #0x2                   	// #2
   53044:	mov	x0, x20
   53048:	mov	x1, x21
   5304c:	mov	x2, x20
   53050:	bl	c350 <mpfr_ui_div@plt>
   53054:	mov	w1, #0x2                   	// #2
   53058:	mov	x0, x20
   5305c:	bl	bd50 <mpfr_get_ui@plt>
   53060:	cmp	x0, #0x2
   53064:	csel	x8, x0, x24, hi  // hi = pmore
   53068:	str	x8, [x19, #96]
   5306c:	sub	x8, x8, #0x1
   53070:	clz	x8, x8
   53074:	mov	x0, x20
   53078:	str	x8, [x19, #120]
   5307c:	sub	x28, x23, x8
   53080:	bl	c110 <mpfr_clear@plt>
   53084:	add	x8, x28, x28, lsl #1
   53088:	lsl	x1, x8, #4
   5308c:	cmp	x1, #0x4, lsl #12
   53090:	str	x21, [x19, #112]
   53094:	b.hi	532dc <mpfr_log_ui@@Base+0x528>  // b.pmore
   53098:	add	x9, x1, #0xf
   5309c:	mov	x8, sp
   530a0:	and	x9, x9, #0xfffffffffffffff0
   530a4:	sub	x24, x8, x9
   530a8:	mov	sp, x24
   530ac:	add	x22, x24, x28, lsl #4
   530b0:	add	x23, x22, x28, lsl #4
   530b4:	str	x28, [x19, #104]
   530b8:	cbz	x28, 530fc <mpfr_log_ui@@Base+0x348>
   530bc:	ldr	x9, [x19, #120]
   530c0:	mov	w8, #0x820                 	// #2080
   530c4:	mov	x28, x24
   530c8:	sub	x20, x8, x9, lsl #5
   530cc:	mov	w8, #0x410                 	// #1040
   530d0:	sub	x21, x9, #0x41
   530d4:	sub	x27, x8, x9, lsl #4
   530d8:	mov	x0, x28
   530dc:	bl	c040 <mpfr_mpz_init@plt>
   530e0:	add	x0, x28, x27
   530e4:	bl	c040 <mpfr_mpz_init@plt>
   530e8:	add	x0, x28, x20
   530ec:	bl	c040 <mpfr_mpz_init@plt>
   530f0:	adds	x21, x21, #0x1
   530f4:	add	x28, x28, #0x10
   530f8:	b.cc	530d8 <mpfr_log_ui@@Base+0x324>  // b.lo, b.ul, b.last
   530fc:	add	x1, x19, #0x88
   53100:	mov	w4, #0x1                   	// #1
   53104:	str	wzr, [sp, #-16]!
   53108:	ldr	x5, [x19, #96]
   5310c:	mov	x0, x24
   53110:	mov	x2, x22
   53114:	mov	x3, x23
   53118:	mov	x6, x25
   5311c:	mov	x7, x26
   53120:	bl	534d0 <mpfr_log_ui@@Base+0x71c>
   53124:	add	sp, sp, #0x10
   53128:	sub	x0, x29, #0x38
   5312c:	mov	x1, x23
   53130:	mov	w2, wzr
   53134:	bl	c2b0 <mpfr_set_z@plt>
   53138:	sub	x0, x29, #0x58
   5313c:	mov	x1, x22
   53140:	mov	w2, wzr
   53144:	bl	c2b0 <mpfr_set_z@plt>
   53148:	ldr	x2, [x19, #136]
   5314c:	sub	x0, x29, #0x58
   53150:	sub	x1, x29, #0x58
   53154:	mov	w3, wzr
   53158:	bl	c320 <mpfr_mul_2ui@plt>
   5315c:	sub	x0, x29, #0x38
   53160:	sub	x1, x29, #0x38
   53164:	sub	x2, x29, #0x58
   53168:	mov	w3, wzr
   5316c:	bl	c670 <mpfr_div@plt>
   53170:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53174:	ldr	x1, [x0, #2640]
   53178:	add	x0, x0, #0xa50
   5317c:	blr	x1
   53180:	ldr	x8, [x19, #128]
   53184:	mov	w2, wzr
   53188:	add	x1, x8, x0
   5318c:	sub	x0, x29, #0x58
   53190:	bl	c3e0 <mpfr_cache@plt>
   53194:	ldr	x2, [x19, #72]
   53198:	sub	x0, x29, #0x58
   5319c:	sub	x1, x29, #0x58
   531a0:	mov	w3, wzr
   531a4:	bl	bb10 <mpfr_mul_ui@plt>
   531a8:	sub	x0, x29, #0x38
   531ac:	sub	x1, x29, #0x38
   531b0:	sub	x2, x29, #0x58
   531b4:	mov	w3, wzr
   531b8:	bl	c240 <mpfr_add@plt>
   531bc:	ldr	x8, [x19, #104]
   531c0:	cbz	x8, 53200 <mpfr_log_ui@@Base+0x44c>
   531c4:	ldr	x9, [x19, #120]
   531c8:	mov	w8, #0x820                 	// #2080
   531cc:	sub	x20, x8, x9, lsl #5
   531d0:	mov	w8, #0x410                 	// #1040
   531d4:	sub	x21, x9, #0x41
   531d8:	sub	x22, x8, x9, lsl #4
   531dc:	mov	x0, x24
   531e0:	bl	c210 <mpfr_mpz_clear@plt>
   531e4:	add	x0, x24, x22
   531e8:	bl	c210 <mpfr_mpz_clear@plt>
   531ec:	add	x0, x24, x20
   531f0:	bl	c210 <mpfr_mpz_clear@plt>
   531f4:	adds	x21, x21, #0x1
   531f8:	add	x24, x24, #0x10
   531fc:	b.cc	531dc <mpfr_log_ui@@Base+0x428>  // b.lo, b.ul, b.last
   53200:	ldr	x27, [x19, #80]
   53204:	ldr	w23, [x19, #92]
   53208:	ldr	x21, [x19, #112]
   5320c:	cmn	x27, #0x3
   53210:	b.eq	532ec <mpfr_log_ui@@Base+0x538>  // b.none
   53214:	ldr	x22, [x19, #56]
   53218:	mov	x20, #0xfffffffffffffeff    	// #-257
   5321c:	cmn	x27, #0x4
   53220:	movk	x20, #0x7fff, lsl #48
   53224:	mov	w24, #0x2                   	// #2
   53228:	b.eq	53304 <mpfr_log_ui@@Base+0x550>  // b.none
   5322c:	ldr	x8, [x19, #40]
   53230:	ldur	x9, [x29, #-40]
   53234:	add	x10, x20, #0x105
   53238:	cmp	x9, x10
   5323c:	b.lt	5327c <mpfr_log_ui@@Base+0x4c8>  // b.tstop
   53240:	ldur	x9, [x29, #-56]
   53244:	mvn	x8, x8
   53248:	add	x2, x21, x8
   5324c:	ldr	x10, [x22]
   53250:	sub	x8, x9, #0x1
   53254:	add	x9, x9, #0x3e
   53258:	cmp	x8, #0x0
   5325c:	csel	x8, x9, x8, lt  // lt = tstop
   53260:	asr	x8, x8, #6
   53264:	add	x1, x8, #0x1
   53268:	ldr	x8, [x19, #48]
   5326c:	ldur	x0, [x29, #-32]
   53270:	add	x3, x10, x8
   53274:	bl	c3d0 <mpfr_round_p@plt>
   53278:	cbnz	w0, 53374 <mpfr_log_ui@@Base+0x5c0>
   5327c:	ldr	x9, [x19, #8]
   53280:	sub	x8, x20, x21
   53284:	cmp	x9, x8
   53288:	b.gt	53354 <mpfr_log_ui@@Base+0x5a0>
   5328c:	add	x21, x21, x9
   53290:	cmp	x21, #0x0
   53294:	cinc	x8, x21, lt  // lt = tstop
   53298:	cmp	x21, x20
   5329c:	b.gt	534cc <mpfr_log_ui@@Base+0x718>
   532a0:	asr	x8, x8, #1
   532a4:	str	x8, [x19, #8]
   532a8:	sub	x8, x21, #0x1
   532ac:	add	x9, x21, #0x3e
   532b0:	cmp	x8, #0x0
   532b4:	ldr	x1, [x19, #184]
   532b8:	csel	x8, x9, x8, lt  // lt = tstop
   532bc:	asr	x8, x8, #6
   532c0:	add	x20, x8, #0x1
   532c4:	lsl	x2, x20, #4
   532c8:	str	x2, [x19, #184]
   532cc:	cbz	x1, 53320 <mpfr_log_ui@@Base+0x56c>
   532d0:	ldr	x0, [x19, #192]
   532d4:	bl	c260 <mpfr_reallocate_func@plt>
   532d8:	b	53328 <mpfr_log_ui@@Base+0x574>
   532dc:	add	x0, x19, #0xb0
   532e0:	bl	be70 <mpfr_tmp_allocate@plt>
   532e4:	mov	x24, x0
   532e8:	b	530ac <mpfr_log_ui@@Base+0x2f8>
   532ec:	ldr	x22, [x19, #56]
   532f0:	mov	x20, #0xfffffffffffffeff    	// #-257
   532f4:	mov	x8, xzr
   532f8:	movk	x20, #0x7fff, lsl #48
   532fc:	mov	w24, #0x2                   	// #2
   53300:	b	53230 <mpfr_log_ui@@Base+0x47c>
   53304:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   53308:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   5330c:	mov	w1, #0xda                  	// #218
   53310:	add	x0, x0, #0x74b
   53314:	add	x2, x2, #0x754
   53318:	bl	cb90 <mpfr_assert_fail@plt>
   5331c:	b	5322c <mpfr_log_ui@@Base+0x478>
   53320:	mov	x0, x2
   53324:	bl	cd50 <mpfr_allocate_func@plt>
   53328:	add	x8, x0, x20, lsl #3
   5332c:	ldr	x20, [x19]
   53330:	mov	w9, #0x1                   	// #1
   53334:	str	x0, [x19, #192]
   53338:	stur	x0, [x29, #-32]
   5333c:	stur	w9, [x29, #-48]
   53340:	stur	x21, [x29, #-88]
   53344:	stp	x8, x21, [x29, #-64]
   53348:	stur	w9, [x29, #-80]
   5334c:	mov	w23, #0x41                  	// #65
   53350:	b	52ffc <mpfr_log_ui@@Base+0x248>
   53354:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   53358:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   5335c:	mov	w1, #0xde                  	// #222
   53360:	add	x0, x0, #0x74b
   53364:	add	x2, x2, #0x9c6
   53368:	bl	cb90 <mpfr_assert_fail@plt>
   5336c:	ldr	x9, [x19, #8]
   53370:	b	5328c <mpfr_log_ui@@Base+0x4d8>
   53374:	ldur	w3, [x29, #-48]
   53378:	sub	x1, x29, #0x38
   5337c:	mov	x0, x22
   53380:	mov	w2, w23
   53384:	bl	c6f0 <mpfr_set4@plt>
   53388:	ldr	x1, [x19, #184]
   5338c:	mov	w21, w0
   53390:	cbz	x1, 5339c <mpfr_log_ui@@Base+0x5e8>
   53394:	ldr	x0, [x19, #192]
   53398:	bl	cc80 <mpfr_free_func@plt>
   5339c:	ldr	x0, [x19, #176]
   533a0:	ldr	w20, [x19, #36]
   533a4:	ldp	x25, x24, [x19, #16]
   533a8:	cbnz	x0, 53490 <mpfr_log_ui@@Base+0x6dc>
   533ac:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   533b0:	ldr	x1, [x0, #2656]
   533b4:	add	x0, x0, #0xa60
   533b8:	blr	x1
   533bc:	ldr	x8, [x19, #128]
   533c0:	str	w20, [x8, x0]
   533c4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   533c8:	ldr	x1, [x0, #2592]
   533cc:	add	x0, x0, #0xa20
   533d0:	blr	x1
   533d4:	str	x24, [x8, x0]
   533d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   533dc:	ldr	x1, [x0, #2624]
   533e0:	add	x0, x0, #0xa40
   533e4:	blr	x1
   533e8:	str	x25, [x8, x0]
   533ec:	ldr	x8, [x22, #16]
   533f0:	cmp	x8, x25
   533f4:	b.gt	53498 <mpfr_log_ui@@Base+0x6e4>
   533f8:	cmp	x8, x24
   533fc:	b.lt	53498 <mpfr_log_ui@@Base+0x6e4>  // b.tstop
   53400:	cbz	w21, 53464 <mpfr_log_ui@@Base+0x6b0>
   53404:	orr	w8, w20, #0x8
   53408:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5340c:	ldr	x1, [x0, #2656]
   53410:	add	x0, x0, #0xa60
   53414:	blr	x1
   53418:	ldr	x9, [x19, #128]
   5341c:	str	w8, [x9, x0]
   53420:	b	53464 <mpfr_log_ui@@Base+0x6b0>
   53424:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   53428:	mov	w9, #0x1                   	// #1
   5342c:	mov	w21, wzr
   53430:	str	x8, [x22, #16]
   53434:	str	w9, [x22, #8]
   53438:	b	53464 <mpfr_log_ui@@Base+0x6b0>
   5343c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53440:	ldr	x1, [x0, #2640]
   53444:	add	x0, x0, #0xa50
   53448:	blr	x1
   5344c:	mrs	x8, tpidr_el0
   53450:	add	x1, x8, x0
   53454:	mov	x0, x22
   53458:	mov	w2, w23
   5345c:	bl	c3e0 <mpfr_cache@plt>
   53460:	mov	w21, w0
   53464:	mov	w0, w21
   53468:	mov	sp, x29
   5346c:	ldp	x20, x19, [sp, #80]
   53470:	ldp	x22, x21, [sp, #64]
   53474:	ldp	x24, x23, [sp, #48]
   53478:	ldp	x26, x25, [sp, #32]
   5347c:	ldp	x28, x27, [sp, #16]
   53480:	ldp	x29, x30, [sp], #96
   53484:	ret
   53488:	mov	x8, xzr
   5348c:	b	52ea8 <mpfr_log_ui@@Base+0xf4>
   53490:	bl	c460 <mpfr_tmp_free@plt>
   53494:	b	533ac <mpfr_log_ui@@Base+0x5f8>
   53498:	mov	x0, x22
   5349c:	mov	w1, w21
   534a0:	mov	w2, w23
   534a4:	bl	cb80 <mpfr_check_range@plt>
   534a8:	b	53460 <mpfr_log_ui@@Base+0x6ac>
   534ac:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   534b0:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   534b4:	add	x0, x0, #0x74b
   534b8:	add	x2, x2, #0x12d
   534bc:	mov	w1, #0x95                  	// #149
   534c0:	bl	cb90 <mpfr_assert_fail@plt>
   534c4:	ldr	x8, [x22]
   534c8:	b	52e98 <mpfr_log_ui@@Base+0xe4>
   534cc:	bl	c940 <mpfr_abort_prec_max@plt>
   534d0:	sub	sp, sp, #0x80
   534d4:	add	x8, x4, #0x1
   534d8:	stp	x26, x25, [sp, #64]
   534dc:	stp	x24, x23, [sp, #80]
   534e0:	stp	x22, x21, [sp, #96]
   534e4:	stp	x20, x19, [sp, #112]
   534e8:	mov	x24, x7
   534ec:	mov	x26, x6
   534f0:	mov	x23, x4
   534f4:	mov	x22, x3
   534f8:	mov	x19, x2
   534fc:	mov	x25, x1
   53500:	cmp	x8, x5
   53504:	mov	x21, x0
   53508:	stp	x29, x30, [sp, #32]
   5350c:	stp	x28, x27, [sp, #48]
   53510:	add	x29, sp, #0x20
   53514:	b.ne	53560 <mpfr_log_ui@@Base+0x7ac>  // b.any
   53518:	cmp	x23, #0x1
   5351c:	cneg	x1, x26, ne  // ne = any
   53520:	mov	x0, x21
   53524:	bl	cbc0 <__gmpz_set_si@plt>
   53528:	mov	x0, x19
   5352c:	mov	x1, x23
   53530:	str	x24, [x25]
   53534:	bl	bd60 <__gmpz_set_ui@plt>
   53538:	mov	x0, x22
   5353c:	mov	x1, x21
   53540:	ldp	x20, x19, [sp, #112]
   53544:	ldp	x22, x21, [sp, #96]
   53548:	ldp	x24, x23, [sp, #80]
   5354c:	ldp	x26, x25, [sp, #64]
   53550:	ldp	x28, x27, [sp, #48]
   53554:	ldp	x29, x30, [sp, #32]
   53558:	add	sp, sp, #0x80
   5355c:	b	c050 <__gmpz_set@plt>
   53560:	mov	x27, x5
   53564:	lsr	x8, x5, #1
   53568:	and	w9, w23, w27
   5356c:	ldr	w20, [x29, #96]
   53570:	add	x8, x8, x23, lsr #1
   53574:	and	x9, x9, #0x1
   53578:	add	x28, x8, x9
   5357c:	mov	w8, #0x1                   	// #1
   53580:	mov	x0, x21
   53584:	mov	x1, x25
   53588:	mov	x2, x19
   5358c:	mov	x3, x22
   53590:	mov	x4, x23
   53594:	mov	x5, x28
   53598:	mov	x6, x26
   5359c:	mov	x7, x24
   535a0:	str	w8, [sp]
   535a4:	str	x25, [sp, #16]
   535a8:	bl	534d0 <mpfr_log_ui@@Base+0x71c>
   535ac:	add	x23, x19, #0x10
   535b0:	add	x25, x22, #0x10
   535b4:	add	x0, x21, #0x10
   535b8:	sub	x1, x29, #0x8
   535bc:	mov	x2, x23
   535c0:	mov	x3, x25
   535c4:	mov	x4, x28
   535c8:	mov	x5, x27
   535cc:	mov	x6, x26
   535d0:	mov	x7, x24
   535d4:	str	w20, [sp]
   535d8:	str	x0, [sp, #8]
   535dc:	bl	534d0 <mpfr_log_ui@@Base+0x71c>
   535e0:	mov	x0, x25
   535e4:	mov	x1, x25
   535e8:	mov	x2, x21
   535ec:	bl	c090 <__gmpz_mul@plt>
   535f0:	mov	x0, x25
   535f4:	mov	x1, x25
   535f8:	mov	x2, x19
   535fc:	bl	c090 <__gmpz_mul@plt>
   53600:	mov	x0, x22
   53604:	mov	x1, x22
   53608:	mov	x2, x23
   5360c:	bl	c090 <__gmpz_mul@plt>
   53610:	ldur	x24, [x29, #-8]
   53614:	mov	x0, x22
   53618:	mov	x1, x22
   5361c:	mov	x2, x24
   53620:	bl	c290 <__gmpz_mul_2exp@plt>
   53624:	mov	x0, x22
   53628:	mov	x1, x22
   5362c:	mov	x2, x25
   53630:	bl	ca10 <__gmpz_add@plt>
   53634:	cbz	w20, 53648 <mpfr_log_ui@@Base+0x894>
   53638:	ldr	x2, [sp, #8]
   5363c:	mov	x0, x21
   53640:	mov	x1, x21
   53644:	bl	c090 <__gmpz_mul@plt>
   53648:	ldr	x9, [sp, #16]
   5364c:	mov	x0, x19
   53650:	mov	x1, x19
   53654:	mov	x2, x23
   53658:	ldr	x8, [x9]
   5365c:	add	x8, x8, x24
   53660:	str	x8, [x9]
   53664:	ldp	x20, x19, [sp, #112]
   53668:	ldp	x22, x21, [sp, #96]
   5366c:	ldp	x24, x23, [sp, #80]
   53670:	ldp	x26, x25, [sp, #64]
   53674:	ldp	x28, x27, [sp, #48]
   53678:	ldp	x29, x30, [sp, #32]
   5367c:	add	sp, sp, #0x80
   53680:	b	c090 <__gmpz_mul@plt>

0000000000053684 <mpfr_gamma_inc@@Base>:
   53684:	sub	sp, sp, #0x1c0
   53688:	stp	x29, x30, [sp, #352]
   5368c:	stp	x28, x27, [sp, #368]
   53690:	stp	x26, x25, [sp, #384]
   53694:	stp	x24, x23, [sp, #400]
   53698:	stp	x22, x21, [sp, #416]
   5369c:	stp	x20, x19, [sp, #432]
   536a0:	ldr	x8, [x1, #16]
   536a4:	mov	x24, #0x2                   	// #2
   536a8:	movk	x24, #0x8000, lsl #48
   536ac:	add	x10, x24, #0x2
   536b0:	mov	w26, w3
   536b4:	mov	x21, x2
   536b8:	mov	x22, x1
   536bc:	cmp	x8, x10
   536c0:	mov	x19, x0
   536c4:	add	x29, sp, #0x160
   536c8:	b.lt	54220 <mpfr_gamma_inc@@Base+0xb9c>  // b.tstop
   536cc:	ldr	x9, [x21, #16]
   536d0:	cmp	x9, x10
   536d4:	b.lt	5422c <mpfr_gamma_inc@@Base+0xba8>  // b.tstop
   536d8:	ldr	w8, [x21, #8]
   536dc:	mrs	x28, tpidr_el0
   536e0:	tbnz	w8, #31, 5379c <mpfr_gamma_inc@@Base+0x118>
   536e4:	mov	x0, x22
   536e8:	bl	c200 <mpfr_integer_p@plt>
   536ec:	str	x19, [sp, #64]
   536f0:	str	w26, [sp, #60]
   536f4:	cbz	w0, 53700 <mpfr_gamma_inc@@Base+0x7c>
   536f8:	ldr	w8, [x22, #8]
   536fc:	tbnz	w8, #31, 53cc4 <mpfr_gamma_inc@@Base+0x640>
   53700:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53704:	ldr	x1, [x0, #2656]
   53708:	add	x0, x0, #0xa60
   5370c:	blr	x1
   53710:	ldr	w11, [x28, x0]
   53714:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53718:	ldr	x1, [x0, #2592]
   5371c:	add	x0, x0, #0xa20
   53720:	blr	x1
   53724:	ldr	x12, [x28, x0]
   53728:	mov	x8, x0
   5372c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53730:	ldr	x1, [x0, #2624]
   53734:	add	x0, x0, #0xa40
   53738:	blr	x1
   5373c:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   53740:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   53744:	ldr	x13, [x28, x0]
   53748:	str	x9, [x28, x8]
   5374c:	str	x10, [x28, x0]
   53750:	ldr	x8, [x19]
   53754:	sub	x9, x24, #0x110
   53758:	cmp	x8, x9
   5375c:	b.gt	54418 <mpfr_gamma_inc@@Base+0xd94>
   53760:	add	x9, x8, #0xc
   53764:	add	x10, x8, #0x4b
   53768:	cmp	x9, #0x0
   5376c:	csel	x9, x10, x9, lt  // lt = tstop
   53770:	asr	x9, x9, #6
   53774:	add	x20, x8, #0xd
   53778:	cmp	x8, #0x1f4
   5377c:	add	x25, x9, #0x1
   53780:	str	w11, [sp, #40]
   53784:	stp	x13, x12, [sp, #24]
   53788:	b.lt	537c0 <mpfr_gamma_inc@@Base+0x13c>  // b.tstop
   5378c:	lsl	x23, x25, #4
   53790:	mov	x0, x23
   53794:	bl	cd50 <mpfr_allocate_func@plt>
   53798:	b	537cc <mpfr_gamma_inc@@Base+0x148>
   5379c:	str	x24, [x19, #16]
   537a0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   537a4:	ldr	x1, [x0, #2656]
   537a8:	add	x0, x0, #0xa60
   537ac:	blr	x1
   537b0:	ldr	w8, [x28, x0]
   537b4:	mov	w21, wzr
   537b8:	orr	w8, w8, #0x4
   537bc:	b	541f8 <mpfr_gamma_inc@@Base+0xb74>
   537c0:	add	x8, sp, #0x48
   537c4:	mov	x23, xzr
   537c8:	add	x0, x8, #0x10
   537cc:	stp	x23, x0, [sp, #72]
   537d0:	stur	x0, [x29, #-16]
   537d4:	mov	w9, #0x1                   	// #1
   537d8:	add	x8, x0, x25, lsl #3
   537dc:	sub	x0, x29, #0x68
   537e0:	mov	w1, #0x2                   	// #2
   537e4:	stur	x20, [x29, #-72]
   537e8:	stur	w9, [x29, #-32]
   537ec:	stp	x8, x20, [x29, #-48]
   537f0:	mov	w25, #0x1                   	// #1
   537f4:	stur	w9, [x29, #-64]
   537f8:	bl	cad0 <mpfr_init2@plt>
   537fc:	cmp	w26, #0x0
   53800:	mov	w8, #0x40                  	// #64
   53804:	str	x8, [sp, #16]
   53808:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   5380c:	cset	w8, eq  // eq = none
   53810:	str	x8, [sp, #48]
   53814:	ldr	x8, [x22, #16]
   53818:	cmp	x8, #0x0
   5381c:	b.le	53830 <mpfr_gamma_inc@@Base+0x1ac>
   53820:	ldr	x9, [x22]
   53824:	cmp	x8, x9
   53828:	csel	x8, x8, x9, gt
   5382c:	b	53850 <mpfr_gamma_inc@@Base+0x1cc>
   53830:	ldr	x9, [x22]
   53834:	sub	x10, x25, x8
   53838:	sub	x11, x24, x9
   5383c:	sub	x11, x11, #0x103
   53840:	cmp	x10, x11
   53844:	b.gt	53be4 <mpfr_gamma_inc@@Base+0x560>
   53848:	sub	x8, x9, x8
   5384c:	add	x8, x8, #0x1
   53850:	add	x1, x8, #0x1
   53854:	sub	x0, x29, #0x68
   53858:	bl	bf80 <mpfr_set_prec@plt>
   5385c:	ldr	x8, [x22, #16]
   53860:	sub	x0, x29, #0x48
   53864:	mov	w1, #0x1                   	// #1
   53868:	mov	w3, #0x4                   	// #4
   5386c:	cmp	x8, #0x1
   53870:	mov	x2, x22
   53874:	csinc	x26, x8, xzr, gt
   53878:	bl	c350 <mpfr_ui_div@plt>
   5387c:	ldur	w3, [x29, #-64]
   53880:	sub	x0, x29, #0x28
   53884:	sub	x1, x29, #0x48
   53888:	mov	w2, #0x4                   	// #4
   5388c:	bl	c6f0 <mpfr_set4@plt>
   53890:	ldr	w8, [x22, #8]
   53894:	tbz	w8, #31, 538b8 <mpfr_gamma_inc@@Base+0x234>
   53898:	sub	x0, x29, #0x88
   5389c:	mov	w1, #0x20                  	// #32
   538a0:	bl	cad0 <mpfr_init2@plt>
   538a4:	sub	x0, x29, #0x88
   538a8:	sub	x1, x29, #0x28
   538ac:	mov	w2, #0x2                   	// #2
   538b0:	mov	w3, #0x1                   	// #1
   538b4:	bl	c6f0 <mpfr_set4@plt>
   538b8:	mov	x25, #0xfffffffffffffff8    	// #-8
   538bc:	mov	w27, #0x1                   	// #1
   538c0:	sub	x0, x29, #0x48
   538c4:	sub	x1, x29, #0x48
   538c8:	mov	w3, #0x2                   	// #2
   538cc:	mov	x2, x21
   538d0:	bl	be00 <mpfr_mul@plt>
   538d4:	sub	x0, x29, #0x68
   538d8:	mov	w3, #0x1                   	// #1
   538dc:	mov	x1, x22
   538e0:	mov	x2, x27
   538e4:	bl	c2d0 <mpfr_add_ui@plt>
   538e8:	sub	x0, x29, #0x48
   538ec:	sub	x1, x29, #0x48
   538f0:	sub	x2, x29, #0x68
   538f4:	mov	w3, #0x4                   	// #4
   538f8:	bl	c670 <mpfr_div@plt>
   538fc:	sub	x0, x29, #0x28
   53900:	sub	x1, x29, #0x28
   53904:	sub	x2, x29, #0x48
   53908:	mov	w3, #0x1                   	// #1
   5390c:	bl	c240 <mpfr_add@plt>
   53910:	ldur	x8, [x29, #-24]
   53914:	ldur	x9, [x29, #-56]
   53918:	ldr	w10, [x22, #8]
   5391c:	cmp	x8, x23
   53920:	csel	x24, x9, x8, eq  // eq = none
   53924:	tbz	w10, #31, 53950 <mpfr_gamma_inc@@Base+0x2cc>
   53928:	ldur	w8, [x29, #-64]
   5392c:	sub	x0, x29, #0x88
   53930:	sub	x1, x29, #0x88
   53934:	sub	x2, x29, #0x48
   53938:	mov	w3, #0x2                   	// #2
   5393c:	cmp	w8, #0x1
   53940:	b.lt	5394c <mpfr_gamma_inc@@Base+0x2c8>  // b.tstop
   53944:	bl	c240 <mpfr_add@plt>
   53948:	b	53950 <mpfr_gamma_inc@@Base+0x2cc>
   5394c:	bl	bc20 <mpfr_sub@plt>
   53950:	ldur	x9, [x29, #-56]
   53954:	ldur	w8, [x29, #-96]
   53958:	add	x9, x9, x20
   5395c:	cmp	x9, x24
   53960:	b.gt	53984 <mpfr_gamma_inc@@Base+0x300>
   53964:	cmp	w8, #0x0
   53968:	b.le	53984 <mpfr_gamma_inc@@Base+0x300>
   5396c:	ldr	x8, [x21, #16]
   53970:	ldur	x24, [x29, #-88]
   53974:	add	x8, x8, #0x1
   53978:	cmp	x8, x24
   5397c:	b.ge	53988 <mpfr_gamma_inc@@Base+0x304>  // b.tcont
   53980:	b	539b0 <mpfr_gamma_inc@@Base+0x32c>
   53984:	ldur	x24, [x29, #-88]
   53988:	cmp	x24, x26
   5398c:	b.le	539a4 <mpfr_gamma_inc@@Base+0x320>
   53990:	ldur	x8, [x29, #-104]
   53994:	sub	x0, x29, #0x68
   53998:	add	x1, x8, #0x1
   5399c:	bl	bf80 <mpfr_set_prec@plt>
   539a0:	mov	x26, x24
   539a4:	add	x27, x27, #0x1
   539a8:	sub	x25, x25, #0x2
   539ac:	b	538c0 <mpfr_gamma_inc@@Base+0x23c>
   539b0:	ldr	w8, [x22, #8]
   539b4:	tbnz	w8, #31, 539c0 <mpfr_gamma_inc@@Base+0x33c>
   539b8:	mov	x26, xzr
   539bc:	b	539d4 <mpfr_gamma_inc@@Base+0x350>
   539c0:	ldur	x8, [x29, #-120]
   539c4:	ldur	x9, [x29, #-24]
   539c8:	sub	x0, x29, #0x88
   539cc:	sub	x26, x8, x9
   539d0:	bl	c110 <mpfr_clear@plt>
   539d4:	sub	x0, x29, #0x48
   539d8:	mov	w2, #0x1                   	// #1
   539dc:	mov	x1, x21
   539e0:	bl	c7a0 <mpfr_exp@plt>
   539e4:	sub	x0, x29, #0x28
   539e8:	sub	x1, x29, #0x28
   539ec:	sub	x2, x29, #0x48
   539f0:	mov	w3, #0x1                   	// #1
   539f4:	bl	c670 <mpfr_div@plt>
   539f8:	sub	x0, x29, #0x48
   539fc:	mov	w3, #0x1                   	// #1
   53a00:	mov	x1, x21
   53a04:	mov	x2, x22
   53a08:	bl	be40 <mpfr_pow@plt>
   53a0c:	sub	x0, x29, #0x28
   53a10:	sub	x1, x29, #0x28
   53a14:	sub	x2, x29, #0x48
   53a18:	mov	w3, #0x1                   	// #1
   53a1c:	bl	be00 <mpfr_mul@plt>
   53a20:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53a24:	ldr	x1, [x0, #2656]
   53a28:	add	x0, x0, #0xa60
   53a2c:	blr	x1
   53a30:	mov	x27, x0
   53a34:	str	wzr, [x28, x0]
   53a38:	sub	x0, x29, #0x48
   53a3c:	mov	w2, #0x1                   	// #1
   53a40:	mov	x1, x22
   53a44:	bl	c800 <mpfr_gamma@plt>
   53a48:	ldrb	w8, [x28, x27]
   53a4c:	tbnz	w8, #1, 53b98 <mpfr_gamma_inc@@Base+0x514>
   53a50:	ldur	x27, [x29, #-56]
   53a54:	ldur	x8, [x29, #-24]
   53a58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53a5c:	ldr	x1, [x0, #2592]
   53a60:	add	x0, x0, #0xa20
   53a64:	blr	x1
   53a68:	ldr	x9, [x28, x0]
   53a6c:	cmp	x8, x23
   53a70:	sub	x0, x29, #0x28
   53a74:	sub	x1, x29, #0x48
   53a78:	sub	x2, x29, #0x28
   53a7c:	mov	w3, #0x1                   	// #1
   53a80:	csel	x19, x9, x8, eq  // eq = none
   53a84:	bl	bc20 <mpfr_sub@plt>
   53a88:	ldur	x8, [x29, #-24]
   53a8c:	neg	x9, x25
   53a90:	clz	x9, x9
   53a94:	mov	w10, #0x41                  	// #65
   53a98:	cmp	x8, x23
   53a9c:	sub	x10, x10, x9
   53aa0:	csel	x9, x27, x8, eq  // eq = none
   53aa4:	cmp	x25, #0x0
   53aa8:	csinc	x10, x10, xzr, ne  // ne = any
   53aac:	add	x10, x10, x26
   53ab0:	add	x10, x10, x19
   53ab4:	cmp	x27, x10
   53ab8:	b.ne	53ac8 <mpfr_gamma_inc@@Base+0x444>  // b.any
   53abc:	sub	x9, x27, x9
   53ac0:	add	x9, x9, #0x2
   53ac4:	b	53ad8 <mpfr_gamma_inc@@Base+0x454>
   53ac8:	csel	x10, x27, x10, gt
   53acc:	subs	x9, x10, x9
   53ad0:	mov	w10, #0x2                   	// #2
   53ad4:	csinc	x9, x10, x9, le
   53ad8:	ldr	x19, [sp, #64]
   53adc:	ldr	w26, [sp, #60]
   53ae0:	mov	x24, #0x2                   	// #2
   53ae4:	movk	x24, #0x8000, lsl #48
   53ae8:	add	x10, x24, #0x2
   53aec:	cmp	x8, x10
   53af0:	b.lt	53b2c <mpfr_gamma_inc@@Base+0x4a8>  // b.tstop
   53af4:	ldur	x8, [x29, #-40]
   53af8:	sub	x2, x20, x9
   53afc:	ldr	x9, [x19]
   53b00:	ldur	x0, [x29, #-16]
   53b04:	sub	x10, x8, #0x1
   53b08:	add	x8, x8, #0x3e
   53b0c:	cmp	x10, #0x0
   53b10:	csel	x8, x8, x10, lt  // lt = tstop
   53b14:	asr	x8, x8, #6
   53b18:	add	x1, x8, #0x1
   53b1c:	ldr	x8, [sp, #48]
   53b20:	add	x3, x9, x8
   53b24:	bl	c3d0 <mpfr_round_p@plt>
   53b28:	cbnz	w0, 53c28 <mpfr_gamma_inc@@Base+0x5a4>
   53b2c:	ldr	x9, [sp, #16]
   53b30:	sub	x8, x24, x20
   53b34:	sub	x8, x8, #0x103
   53b38:	cmp	x9, x8
   53b3c:	mov	x8, x9
   53b40:	b.gt	53c08 <mpfr_gamma_inc@@Base+0x584>
   53b44:	add	x20, x20, x8
   53b48:	sub	x9, x24, #0x103
   53b4c:	cmp	x20, #0x0
   53b50:	cinc	x8, x20, lt  // lt = tstop
   53b54:	cmp	x20, x9
   53b58:	b.gt	54418 <mpfr_gamma_inc@@Base+0xd94>
   53b5c:	asr	x8, x8, #1
   53b60:	str	x8, [sp, #16]
   53b64:	sub	x8, x20, #0x1
   53b68:	add	x9, x20, #0x3e
   53b6c:	cmp	x8, #0x0
   53b70:	ldr	x1, [sp, #72]
   53b74:	csel	x8, x9, x8, lt  // lt = tstop
   53b78:	asr	x8, x8, #6
   53b7c:	add	x25, x8, #0x1
   53b80:	lsl	x2, x25, #4
   53b84:	str	x2, [sp, #72]
   53b88:	cbz	x1, 53bb4 <mpfr_gamma_inc@@Base+0x530>
   53b8c:	ldr	x0, [sp, #80]
   53b90:	bl	c260 <mpfr_reallocate_func@plt>
   53b94:	b	53bbc <mpfr_gamma_inc@@Base+0x538>
   53b98:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   53b9c:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   53ba0:	mov	w1, #0x122                 	// #290
   53ba4:	add	x0, x0, #0x760
   53ba8:	add	x2, x2, #0x7cf
   53bac:	bl	cb90 <mpfr_assert_fail@plt>
   53bb0:	b	53a50 <mpfr_gamma_inc@@Base+0x3cc>
   53bb4:	mov	x0, x2
   53bb8:	bl	cd50 <mpfr_allocate_func@plt>
   53bbc:	mov	w9, #0x1                   	// #1
   53bc0:	add	x8, x0, x25, lsl #3
   53bc4:	str	x0, [sp, #80]
   53bc8:	stur	x0, [x29, #-16]
   53bcc:	stur	w9, [x29, #-32]
   53bd0:	stur	x20, [x29, #-72]
   53bd4:	stp	x8, x20, [x29, #-48]
   53bd8:	mov	w25, #0x1                   	// #1
   53bdc:	stur	w9, [x29, #-64]
   53be0:	b	53814 <mpfr_gamma_inc@@Base+0x190>
   53be4:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   53be8:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   53bec:	mov	w1, #0xd2                  	// #210
   53bf0:	add	x0, x0, #0x760
   53bf4:	add	x2, x2, #0x76c
   53bf8:	bl	cb90 <mpfr_assert_fail@plt>
   53bfc:	ldr	x9, [x22]
   53c00:	ldr	x8, [x22, #16]
   53c04:	b	53848 <mpfr_gamma_inc@@Base+0x1c4>
   53c08:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   53c0c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   53c10:	mov	w1, #0x148                 	// #328
   53c14:	add	x0, x0, #0x760
   53c18:	add	x2, x2, #0x9c6
   53c1c:	bl	cb90 <mpfr_assert_fail@plt>
   53c20:	ldr	x8, [sp, #16]
   53c24:	b	53b44 <mpfr_gamma_inc@@Base+0x4c0>
   53c28:	sub	x0, x29, #0x68
   53c2c:	bl	c110 <mpfr_clear@plt>
   53c30:	ldur	w3, [x29, #-32]
   53c34:	sub	x1, x29, #0x28
   53c38:	mov	x0, x19
   53c3c:	mov	w2, w26
   53c40:	bl	c6f0 <mpfr_set4@plt>
   53c44:	ldr	x1, [sp, #72]
   53c48:	mov	w21, w0
   53c4c:	cbz	x1, 53c58 <mpfr_gamma_inc@@Base+0x5d4>
   53c50:	ldr	x0, [sp, #80]
   53c54:	bl	cc80 <mpfr_free_func@plt>
   53c58:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53c5c:	ldr	x1, [x0, #2656]
   53c60:	add	x0, x0, #0xa60
   53c64:	blr	x1
   53c68:	ldr	w9, [sp, #40]
   53c6c:	str	w9, [x28, x0]
   53c70:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53c74:	ldr	x1, [x0, #2592]
   53c78:	add	x0, x0, #0xa20
   53c7c:	blr	x1
   53c80:	ldr	x10, [sp, #32]
   53c84:	str	x10, [x28, x0]
   53c88:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53c8c:	ldr	x1, [x0, #2624]
   53c90:	add	x0, x0, #0xa40
   53c94:	blr	x1
   53c98:	ldr	x11, [sp, #24]
   53c9c:	str	x11, [x28, x0]
   53ca0:	ldr	x8, [x19, #16]
   53ca4:	cmp	x8, x11
   53ca8:	b.gt	53cb4 <mpfr_gamma_inc@@Base+0x630>
   53cac:	cmp	x8, x10
   53cb0:	b.ge	541e0 <mpfr_gamma_inc@@Base+0xb5c>  // b.tcont
   53cb4:	mov	x0, x19
   53cb8:	mov	w1, w21
   53cbc:	mov	w2, w26
   53cc0:	b	54348 <mpfr_gamma_inc@@Base+0xcc4>
   53cc4:	ldr	x8, [x22]
   53cc8:	mov	w9, #0x1                   	// #1
   53ccc:	stur	w9, [x29, #-96]
   53cd0:	stur	x8, [x29, #-104]
   53cd4:	ldr	q0, [x22, #16]
   53cd8:	stur	q0, [x29, #-88]
   53cdc:	ldr	x9, [x19]
   53ce0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53ce4:	ldr	x1, [x0, #2656]
   53ce8:	add	x0, x0, #0xa60
   53cec:	blr	x1
   53cf0:	ldr	w12, [x28, x0]
   53cf4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53cf8:	ldr	x1, [x0, #2592]
   53cfc:	add	x0, x0, #0xa20
   53d00:	blr	x1
   53d04:	ldr	x13, [x28, x0]
   53d08:	mov	x8, x0
   53d0c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   53d10:	ldr	x1, [x0, #2624]
   53d14:	add	x0, x0, #0xa40
   53d18:	blr	x1
   53d1c:	ldr	x14, [x28, x0]
   53d20:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   53d24:	str	x10, [x28, x8]
   53d28:	sub	x8, x24, #0x10d
   53d2c:	mov	x11, #0x3fffffffffffffff    	// #4611686018427387903
   53d30:	cmp	x9, x8
   53d34:	str	x11, [x28, x0]
   53d38:	b.gt	54418 <mpfr_gamma_inc@@Base+0xd94>
   53d3c:	add	x8, x9, #0x9
   53d40:	add	x10, x9, #0x48
   53d44:	cmp	x8, #0x0
   53d48:	csel	x8, x10, x8, lt  // lt = tstop
   53d4c:	asr	x8, x8, #6
   53d50:	add	x24, x9, #0xa
   53d54:	cmp	x9, #0x1f7
   53d58:	add	x20, x8, #0x1
   53d5c:	str	w12, [sp, #24]
   53d60:	stp	x14, x13, [sp, #8]
   53d64:	b.lt	53d78 <mpfr_gamma_inc@@Base+0x6f4>  // b.tstop
   53d68:	lsl	x23, x20, #4
   53d6c:	mov	x0, x23
   53d70:	bl	cd50 <mpfr_allocate_func@plt>
   53d74:	b	53d84 <mpfr_gamma_inc@@Base+0x700>
   53d78:	add	x8, sp, #0x48
   53d7c:	mov	x23, xzr
   53d80:	add	x0, x8, #0x10
   53d84:	add	x8, x0, x20, lsl #3
   53d88:	cmp	w26, #0x0
   53d8c:	stp	x8, x24, [x29, #-48]
   53d90:	cset	w8, eq  // eq = none
   53d94:	mov	w9, #0x1                   	// #1
   53d98:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   53d9c:	str	x8, [sp, #32]
   53da0:	mov	w8, #0x40                  	// #64
   53da4:	stp	x23, x0, [sp, #72]
   53da8:	stur	x0, [x29, #-16]
   53dac:	stur	w9, [x29, #-32]
   53db0:	stur	x24, [x29, #-72]
   53db4:	str	x8, [sp, #40]
   53db8:	stur	w9, [x29, #-64]
   53dbc:	ldr	x8, [x22, #16]
   53dc0:	sub	x0, x29, #0x48
   53dc4:	mov	w1, #0x1                   	// #1
   53dc8:	mov	x2, x21
   53dcc:	add	x8, x8, #0x3
   53dd0:	cmp	x8, x24
   53dd4:	mov	w3, wzr
   53dd8:	csel	x24, x8, x24, gt
   53ddc:	bl	c350 <mpfr_ui_div@plt>
   53de0:	ldur	w3, [x29, #-64]
   53de4:	sub	x0, x29, #0x28
   53de8:	sub	x1, x29, #0x48
   53dec:	mov	w2, wzr
   53df0:	bl	c6f0 <mpfr_set4@plt>
   53df4:	ldur	x23, [x29, #-24]
   53df8:	mov	w26, #0x1                   	// #1
   53dfc:	mov	x20, x23
   53e00:	mov	x27, x23
   53e04:	sub	x0, x29, #0x68
   53e08:	mov	x1, x26
   53e0c:	mov	x2, xzr
   53e10:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   53e14:	cmp	w0, #0x1
   53e18:	b.lt	53e9c <mpfr_gamma_inc@@Base+0x818>  // b.tstop
   53e1c:	sub	x0, x29, #0x48
   53e20:	sub	x1, x29, #0x48
   53e24:	mov	x2, x26
   53e28:	mov	w3, wzr
   53e2c:	bl	bb10 <mpfr_mul_ui@plt>
   53e30:	sub	x0, x29, #0x48
   53e34:	sub	x1, x29, #0x48
   53e38:	mov	w2, wzr
   53e3c:	bl	be20 <mpfr_neg@plt>
   53e40:	sub	x0, x29, #0x48
   53e44:	sub	x1, x29, #0x48
   53e48:	mov	x2, x21
   53e4c:	mov	w3, wzr
   53e50:	bl	c670 <mpfr_div@plt>
   53e54:	ldur	x8, [x29, #-56]
   53e58:	cmp	x8, x25
   53e5c:	b.eq	53e9c <mpfr_gamma_inc@@Base+0x818>  // b.none
   53e60:	cmp	x8, x23
   53e64:	sub	x0, x29, #0x28
   53e68:	sub	x1, x29, #0x28
   53e6c:	sub	x2, x29, #0x48
   53e70:	mov	w3, wzr
   53e74:	csel	x23, x8, x23, gt
   53e78:	bl	c240 <mpfr_add@plt>
   53e7c:	ldur	x8, [x29, #-24]
   53e80:	ldur	x9, [x29, #-56]
   53e84:	add	x26, x26, #0x1
   53e88:	cmp	x8, x25
   53e8c:	csel	x20, x9, x8, eq  // eq = none
   53e90:	cmp	x20, x27
   53e94:	csel	x27, x20, x27, gt
   53e98:	b	53e04 <mpfr_gamma_inc@@Base+0x780>
   53e9c:	subs	x19, x26, #0x1
   53ea0:	str	x24, [sp, #48]
   53ea4:	b.eq	54114 <mpfr_gamma_inc@@Base+0xa90>  // b.none
   53ea8:	cbz	x26, 5411c <mpfr_gamma_inc@@Base+0xa98>
   53eac:	clz	x8, x19
   53eb0:	mov	w9, #0x40                  	// #64
   53eb4:	sub	x8, x9, x8
   53eb8:	ldr	x9, [x21]
   53ebc:	mov	w12, #0x1                   	// #1
   53ec0:	add	x10, x8, x27
   53ec4:	bfi	x12, x8, #1, #63
   53ec8:	stur	x9, [x29, #-136]
   53ecc:	ldr	w9, [x21, #8]
   53ed0:	sub	x11, x10, #0x1
   53ed4:	sub	x0, x29, #0x48
   53ed8:	sub	x1, x29, #0x88
   53edc:	neg	w8, w9
   53ee0:	stur	w8, [x29, #-128]
   53ee4:	ldr	q0, [x21, #16]
   53ee8:	add	x8, x12, x23
   53eec:	cmp	x11, x8
   53ef0:	mov	w2, wzr
   53ef4:	csinc	x23, x10, x8, ge  // ge = tcont
   53ef8:	stur	q0, [x29, #-120]
   53efc:	bl	c7a0 <mpfr_exp@plt>
   53f00:	sub	x0, x29, #0x28
   53f04:	sub	x1, x29, #0x28
   53f08:	sub	x2, x29, #0x48
   53f0c:	mov	w3, wzr
   53f10:	bl	be00 <mpfr_mul@plt>
   53f14:	ldur	x27, [x29, #-24]
   53f18:	ldur	x26, [x29, #-56]
   53f1c:	sub	x0, x29, #0x48
   53f20:	sub	x1, x29, #0x88
   53f24:	mov	w2, wzr
   53f28:	bl	ca30 <mpfr_eint@plt>
   53f2c:	sub	x0, x29, #0x48
   53f30:	sub	x1, x29, #0x48
   53f34:	mov	w2, wzr
   53f38:	bl	be20 <mpfr_neg@plt>
   53f3c:	ldur	x19, [x29, #-24]
   53f40:	ldur	x24, [x29, #-56]
   53f44:	sub	x0, x29, #0x28
   53f48:	sub	x1, x29, #0x48
   53f4c:	sub	x2, x29, #0x28
   53f50:	mov	w3, wzr
   53f54:	bl	bc20 <mpfr_sub@plt>
   53f58:	ldur	x8, [x29, #-24]
   53f5c:	cmp	x8, x25
   53f60:	b.ne	53fd4 <mpfr_gamma_inc@@Base+0x950>  // b.any
   53f64:	ldp	x20, x23, [sp, #40]
   53f68:	mov	x19, #0x2                   	// #2
   53f6c:	movk	x19, #0x8000, lsl #48
   53f70:	sub	x8, x19, x23
   53f74:	sub	x8, x8, #0x103
   53f78:	cmp	x20, x8
   53f7c:	b.gt	54138 <mpfr_gamma_inc@@Base+0xab4>
   53f80:	add	x24, x23, x20
   53f84:	sub	x9, x19, #0x103
   53f88:	cmp	x24, #0x0
   53f8c:	cinc	x8, x24, lt  // lt = tstop
   53f90:	cmp	x24, x9
   53f94:	b.gt	54418 <mpfr_gamma_inc@@Base+0xd94>
   53f98:	asr	x8, x8, #1
   53f9c:	str	x8, [sp, #40]
   53fa0:	sub	x8, x24, #0x1
   53fa4:	add	x9, x24, #0x3e
   53fa8:	cmp	x8, #0x0
   53fac:	ldr	x1, [sp, #72]
   53fb0:	csel	x8, x9, x8, lt  // lt = tstop
   53fb4:	asr	x8, x8, #6
   53fb8:	add	x20, x8, #0x1
   53fbc:	lsl	x2, x20, #4
   53fc0:	str	x2, [sp, #72]
   53fc4:	cbz	x1, 540ec <mpfr_gamma_inc@@Base+0xa68>
   53fc8:	ldr	x0, [sp, #80]
   53fcc:	bl	c260 <mpfr_reallocate_func@plt>
   53fd0:	b	540f4 <mpfr_gamma_inc@@Base+0xa70>
   53fd4:	cmp	x27, x25
   53fd8:	csel	x10, x26, xzr, eq  // eq = none
   53fdc:	sub	x9, x23, x20
   53fe0:	cmp	x19, x25
   53fe4:	add	x10, x10, x20
   53fe8:	add	x11, x9, #0x2
   53fec:	csel	x10, x10, x19, eq  // eq = none
   53ff0:	cmp	x9, #0x1
   53ff4:	mov	w20, #0x4                   	// #4
   53ff8:	csel	x9, x11, x20, gt
   53ffc:	add	x9, x10, x9
   54000:	sub	x10, x24, #0x1
   54004:	cmp	x9, x10
   54008:	csinc	x9, x24, x9, lt  // lt = tstop
   5400c:	sub	x0, x29, #0x48
   54010:	sub	x1, x29, #0x68
   54014:	mov	w2, wzr
   54018:	sub	x19, x9, x8
   5401c:	bl	c800 <mpfr_gamma@plt>
   54020:	sub	x0, x29, #0x48
   54024:	sub	x1, x29, #0x48
   54028:	sub	x2, x29, #0x68
   5402c:	mov	w3, wzr
   54030:	bl	be00 <mpfr_mul@plt>
   54034:	sub	x0, x29, #0x28
   54038:	sub	x1, x29, #0x28
   5403c:	sub	x2, x29, #0x48
   54040:	mov	w3, wzr
   54044:	bl	c670 <mpfr_div@plt>
   54048:	cmp	x19, #0x1
   5404c:	sub	x0, x29, #0x48
   54050:	mov	x1, #0xffffffffffffffff    	// #-1
   54054:	mov	x2, xzr
   54058:	mov	w3, wzr
   5405c:	csinc	x20, x20, x19, le
   54060:	bl	bb40 <mpfr_set_si_2exp@plt>
   54064:	sub	x0, x29, #0x48
   54068:	sub	x1, x29, #0x48
   5406c:	sub	x2, x29, #0x68
   54070:	mov	w3, wzr
   54074:	bl	be40 <mpfr_pow@plt>
   54078:	ldur	w8, [x29, #-64]
   5407c:	tbz	w8, #31, 54090 <mpfr_gamma_inc@@Base+0xa0c>
   54080:	sub	x0, x29, #0x28
   54084:	sub	x1, x29, #0x28
   54088:	mov	w2, wzr
   5408c:	bl	be20 <mpfr_neg@plt>
   54090:	ldur	x8, [x29, #-24]
   54094:	mov	x9, #0x2                   	// #2
   54098:	movk	x9, #0x8000, lsl #48
   5409c:	add	x9, x9, #0x2
   540a0:	cmp	x8, x9
   540a4:	b.lt	53f64 <mpfr_gamma_inc@@Base+0x8e0>  // b.tstop
   540a8:	ldur	x8, [x29, #-40]
   540ac:	ldr	x9, [sp, #48]
   540b0:	ldur	x0, [x29, #-16]
   540b4:	sub	x10, x8, #0x1
   540b8:	sub	x2, x9, x20
   540bc:	ldr	x9, [sp, #64]
   540c0:	add	x8, x8, #0x3e
   540c4:	cmp	x10, #0x0
   540c8:	csel	x8, x8, x10, lt  // lt = tstop
   540cc:	asr	x8, x8, #6
   540d0:	ldr	x9, [x9]
   540d4:	add	x1, x8, #0x1
   540d8:	ldr	x8, [sp, #32]
   540dc:	add	x3, x9, x8
   540e0:	bl	c3d0 <mpfr_round_p@plt>
   540e4:	cbnz	w0, 54154 <mpfr_gamma_inc@@Base+0xad0>
   540e8:	b	53f64 <mpfr_gamma_inc@@Base+0x8e0>
   540ec:	mov	x0, x2
   540f0:	bl	cd50 <mpfr_allocate_func@plt>
   540f4:	mov	w9, #0x1                   	// #1
   540f8:	add	x8, x0, x20, lsl #3
   540fc:	str	x0, [sp, #80]
   54100:	stur	x0, [x29, #-16]
   54104:	stur	w9, [x29, #-32]
   54108:	stur	x24, [x29, #-72]
   5410c:	stp	x8, x24, [x29, #-48]
   54110:	b	53db8 <mpfr_gamma_inc@@Base+0x734>
   54114:	mov	x8, xzr
   54118:	b	53eb8 <mpfr_gamma_inc@@Base+0x834>
   5411c:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   54120:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   54124:	mov	w1, #0x1a2                 	// #418
   54128:	add	x0, x0, #0x760
   5412c:	add	x2, x2, #0x7f9
   54130:	bl	cb90 <mpfr_assert_fail@plt>
   54134:	b	53eac <mpfr_gamma_inc@@Base+0x828>
   54138:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   5413c:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   54140:	mov	w1, #0x1ee                 	// #494
   54144:	add	x0, x0, #0x760
   54148:	add	x2, x2, #0x9c6
   5414c:	bl	cb90 <mpfr_assert_fail@plt>
   54150:	b	53f80 <mpfr_gamma_inc@@Base+0x8fc>
   54154:	ldr	x19, [sp, #64]
   54158:	ldr	w20, [sp, #60]
   5415c:	ldur	w3, [x29, #-32]
   54160:	sub	x1, x29, #0x28
   54164:	mov	x0, x19
   54168:	mov	w2, w20
   5416c:	bl	c6f0 <mpfr_set4@plt>
   54170:	ldr	x1, [sp, #72]
   54174:	mov	w21, w0
   54178:	cbz	x1, 54184 <mpfr_gamma_inc@@Base+0xb00>
   5417c:	ldr	x0, [sp, #80]
   54180:	bl	cc80 <mpfr_free_func@plt>
   54184:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54188:	ldr	x1, [x0, #2656]
   5418c:	add	x0, x0, #0xa60
   54190:	blr	x1
   54194:	ldr	w9, [sp, #24]
   54198:	str	w9, [x28, x0]
   5419c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   541a0:	ldr	x1, [x0, #2592]
   541a4:	add	x0, x0, #0xa20
   541a8:	blr	x1
   541ac:	ldr	x10, [sp, #16]
   541b0:	str	x10, [x28, x0]
   541b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   541b8:	ldr	x1, [x0, #2624]
   541bc:	add	x0, x0, #0xa40
   541c0:	blr	x1
   541c4:	ldr	x11, [sp, #8]
   541c8:	str	x11, [x28, x0]
   541cc:	ldr	x8, [x19, #16]
   541d0:	cmp	x8, x11
   541d4:	b.gt	5433c <mpfr_gamma_inc@@Base+0xcb8>
   541d8:	cmp	x8, x10
   541dc:	b.lt	5433c <mpfr_gamma_inc@@Base+0xcb8>  // b.tstop
   541e0:	cbz	w21, 541fc <mpfr_gamma_inc@@Base+0xb78>
   541e4:	orr	w8, w9, #0x8
   541e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   541ec:	ldr	x1, [x0, #2656]
   541f0:	add	x0, x0, #0xa60
   541f4:	blr	x1
   541f8:	str	w8, [x28, x0]
   541fc:	mov	w0, w21
   54200:	ldp	x20, x19, [sp, #432]
   54204:	ldp	x22, x21, [sp, #416]
   54208:	ldp	x24, x23, [sp, #400]
   5420c:	ldp	x26, x25, [sp, #384]
   54210:	ldp	x28, x27, [sp, #368]
   54214:	ldp	x29, x30, [sp, #352]
   54218:	add	sp, sp, #0x1c0
   5421c:	ret
   54220:	cmp	x8, x24
   54224:	b.eq	54234 <mpfr_gamma_inc@@Base+0xbb0>  // b.none
   54228:	ldr	x9, [x21, #16]
   5422c:	cmp	x9, x24
   54230:	b.ne	54260 <mpfr_gamma_inc@@Base+0xbdc>  // b.any
   54234:	str	x24, [x19, #16]
   54238:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5423c:	ldr	x1, [x0, #2656]
   54240:	add	x0, x0, #0xa60
   54244:	blr	x1
   54248:	mrs	x8, tpidr_el0
   5424c:	ldr	w9, [x8, x0]
   54250:	mov	w21, wzr
   54254:	orr	w9, w9, #0x4
   54258:	str	w9, [x8, x0]
   5425c:	b	541fc <mpfr_gamma_inc@@Base+0xb78>
   54260:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   54264:	cmp	x8, x10
   54268:	b.eq	542c8 <mpfr_gamma_inc@@Base+0xc44>  // b.none
   5426c:	cmp	x9, x10
   54270:	b.eq	542c8 <mpfr_gamma_inc@@Base+0xc44>  // b.none
   54274:	mov	x10, #0x8000000000000001    	// #-9223372036854775807
   54278:	cmp	x8, x10
   5427c:	b.eq	54288 <mpfr_gamma_inc@@Base+0xc04>  // b.none
   54280:	cmp	x9, x10
   54284:	b.ne	536d8 <mpfr_gamma_inc@@Base+0x54>  // b.any
   54288:	mov	x20, #0x2                   	// #2
   5428c:	movk	x20, #0x8000, lsl #48
   54290:	cmp	x8, x10
   54294:	b.ne	542b4 <mpfr_gamma_inc@@Base+0xc30>  // b.any
   54298:	mov	x0, x21
   5429c:	bl	c760 <mpfr_sgn@plt>
   542a0:	tbnz	w0, #31, 54374 <mpfr_gamma_inc@@Base+0xcf0>
   542a4:	ldr	x8, [x21, #16]
   542a8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   542ac:	cmp	x8, x9
   542b0:	b.ne	543b4 <mpfr_gamma_inc@@Base+0xd30>  // b.any
   542b4:	mov	x0, x19
   542b8:	mov	x1, x22
   542bc:	mov	w2, w26
   542c0:	bl	c800 <mpfr_gamma@plt>
   542c4:	b	5434c <mpfr_gamma_inc@@Base+0xcc8>
   542c8:	cmp	x8, x10
   542cc:	b.ne	54318 <mpfr_gamma_inc@@Base+0xc94>  // b.any
   542d0:	ldr	w8, [x22, #8]
   542d4:	mov	x23, #0x2                   	// #2
   542d8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   542dc:	movk	x23, #0x8000, lsl #48
   542e0:	mov	x20, x19
   542e4:	cmp	x9, x10
   542e8:	b.ne	54354 <mpfr_gamma_inc@@Base+0xcd0>  // b.any
   542ec:	ldr	w9, [x21, #8]
   542f0:	cmp	w8, #0x0
   542f4:	cset	w8, gt
   542f8:	cmp	w9, #0x0
   542fc:	cset	w10, gt
   54300:	and	w8, w8, w10
   54304:	tbnz	w8, #0, 543ac <mpfr_gamma_inc@@Base+0xd28>
   54308:	tbnz	w9, #31, 543ac <mpfr_gamma_inc@@Base+0xd28>
   5430c:	mov	w21, wzr
   54310:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   54314:	b	54364 <mpfr_gamma_inc@@Base+0xce0>
   54318:	ldr	w8, [x21, #8]
   5431c:	cmp	w8, #0x1
   54320:	b.lt	54234 <mpfr_gamma_inc@@Base+0xbb0>  // b.tstop
   54324:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   54328:	mov	w9, #0x1                   	// #1
   5432c:	mov	w21, wzr
   54330:	str	x8, [x19, #16]
   54334:	str	w9, [x19, #8]
   54338:	b	541fc <mpfr_gamma_inc@@Base+0xb78>
   5433c:	mov	x0, x19
   54340:	mov	w1, w21
   54344:	mov	w2, w20
   54348:	bl	cb80 <mpfr_check_range@plt>
   5434c:	mov	w21, w0
   54350:	b	541fc <mpfr_gamma_inc@@Base+0xb78>
   54354:	cmp	w8, #0x1
   54358:	b.lt	5437c <mpfr_gamma_inc@@Base+0xcf8>  // b.tstop
   5435c:	mov	w21, wzr
   54360:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   54364:	mov	w9, #0x1                   	// #1
   54368:	str	x8, [x20, #16]
   5436c:	str	w9, [x20, #8]
   54370:	b	541fc <mpfr_gamma_inc@@Base+0xb78>
   54374:	str	x20, [x19, #16]
   54378:	b	54238 <mpfr_gamma_inc@@Base+0xbb4>
   5437c:	mov	x0, x21
   54380:	bl	c760 <mpfr_sgn@plt>
   54384:	tbnz	w0, #31, 543ac <mpfr_gamma_inc@@Base+0xd28>
   54388:	mov	w1, #0x1                   	// #1
   5438c:	mov	x0, x21
   54390:	mov	x2, xzr
   54394:	mov	w19, #0x1                   	// #1
   54398:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   5439c:	mov	w21, wzr
   543a0:	tbnz	w0, #31, 54408 <mpfr_gamma_inc@@Base+0xd84>
   543a4:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   543a8:	b	5440c <mpfr_gamma_inc@@Base+0xd88>
   543ac:	str	x23, [x20, #16]
   543b0:	b	54238 <mpfr_gamma_inc@@Base+0xbb4>
   543b4:	ldr	x9, [x21]
   543b8:	cmp	w26, #0x3
   543bc:	mov	w10, #0x2                   	// #2
   543c0:	mov	w11, #0x3                   	// #3
   543c4:	str	x9, [sp, #72]
   543c8:	ldr	x9, [x21, #24]
   543cc:	csel	w10, w10, w26, eq  // eq = none
   543d0:	cmp	w26, #0x2
   543d4:	csel	w2, w11, w10, eq  // eq = none
   543d8:	stp	x8, x9, [sp, #88]
   543dc:	ldr	w9, [x21, #8]
   543e0:	add	x1, sp, #0x48
   543e4:	mov	x0, x19
   543e8:	neg	w8, w9
   543ec:	str	w8, [sp, #80]
   543f0:	bl	ca30 <mpfr_eint@plt>
   543f4:	ldr	w8, [x19, #8]
   543f8:	neg	w21, w0
   543fc:	neg	w8, w8
   54400:	str	w8, [x19, #8]
   54404:	b	541fc <mpfr_gamma_inc@@Base+0xb78>
   54408:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5440c:	str	x8, [x20, #16]
   54410:	str	w19, [x20, #8]
   54414:	b	541fc <mpfr_gamma_inc@@Base+0xb78>
   54418:	bl	c940 <mpfr_abort_prec_max@plt>

000000000005441c <mpfr_ubf_mul_exact@@Base>:
   5441c:	sub	sp, sp, #0x70
   54420:	stp	x29, x30, [sp, #32]
   54424:	stp	x24, x23, [sp, #64]
   54428:	stp	x22, x21, [sp, #80]
   5442c:	stp	x20, x19, [sp, #96]
   54430:	ldr	w8, [x1, #8]
   54434:	ldr	w9, [x2, #8]
   54438:	str	x25, [sp, #48]
   5443c:	mov	x25, #0x2                   	// #2
   54440:	movk	x25, #0x8000, lsl #48
   54444:	mul	w8, w9, w8
   54448:	str	w8, [x0, #8]
   5444c:	ldr	x8, [x1, #16]
   54450:	add	x10, x25, #0x2
   54454:	mov	x20, x2
   54458:	mov	x19, x0
   5445c:	cmp	x8, x10
   54460:	add	x29, sp, #0x20
   54464:	b.lt	54630 <mpfr_ubf_mul_exact@@Base+0x214>  // b.tstop
   54468:	ldr	x9, [x20, #16]
   5446c:	cmp	x9, x10
   54470:	b.lt	5463c <mpfr_ubf_mul_exact@@Base+0x220>  // b.tstop
   54474:	ldr	x8, [x1]
   54478:	ldr	x9, [x20]
   5447c:	ldr	x23, [x19, #24]
   54480:	mov	x21, x1
   54484:	sub	x11, x8, #0x1
   54488:	add	x12, x8, #0x3e
   5448c:	sub	x8, x9, #0x1
   54490:	cmp	x11, #0x0
   54494:	add	x10, x9, #0x3e
   54498:	csel	x9, x12, x11, lt  // lt = tstop
   5449c:	cmp	x8, #0x0
   544a0:	csel	x8, x10, x8, lt  // lt = tstop
   544a4:	cmp	x12, #0x7e
   544a8:	b.hi	544e8 <mpfr_ubf_mul_exact@@Base+0xcc>  // b.pmore
   544ac:	cmp	x10, #0x7e
   544b0:	b.hi	544e8 <mpfr_ubf_mul_exact@@Base+0xcc>  // b.pmore
   544b4:	ldr	x8, [x21, #24]
   544b8:	ldr	x9, [x20, #24]
   544bc:	ldr	x10, [x8]
   544c0:	ldr	x9, [x9]
   544c4:	umulh	x8, x10, x9
   544c8:	mul	x9, x9, x10
   544cc:	stp	x9, x8, [x23]
   544d0:	tbnz	x8, #63, 54550 <mpfr_ubf_mul_exact@@Base+0x134>
   544d4:	extr	x8, x8, x9, #63
   544d8:	lsl	x9, x9, #1
   544dc:	stp	x9, x8, [x23]
   544e0:	mov	w22, #0x1                   	// #1
   544e4:	b	54554 <mpfr_ubf_mul_exact@@Base+0x138>
   544e8:	asr	x9, x9, #6
   544ec:	asr	x8, x8, #6
   544f0:	add	x22, x9, #0x1
   544f4:	cmp	x9, x8
   544f8:	add	x24, x8, #0x1
   544fc:	b.ge	54518 <mpfr_ubf_mul_exact@@Base+0xfc>  // b.tcont
   54500:	ldr	x1, [x20, #24]
   54504:	ldr	x3, [x21, #24]
   54508:	mov	x0, x23
   5450c:	mov	x2, x24
   54510:	mov	x4, x22
   54514:	b	5452c <mpfr_ubf_mul_exact@@Base+0x110>
   54518:	ldr	x1, [x21, #24]
   5451c:	ldr	x3, [x20, #24]
   54520:	mov	x0, x23
   54524:	mov	x2, x22
   54528:	mov	x4, x24
   5452c:	bl	c7f0 <__gmpn_mul@plt>
   54530:	tbnz	x0, #63, 54550 <mpfr_ubf_mul_exact@@Base+0x134>
   54534:	add	x2, x24, x22
   54538:	mov	w3, #0x1                   	// #1
   5453c:	mov	x0, x23
   54540:	mov	x1, x23
   54544:	mov	w22, #0x1                   	// #1
   54548:	bl	bd70 <__gmpn_lshift@plt>
   5454c:	b	54554 <mpfr_ubf_mul_exact@@Base+0x138>
   54550:	mov	x22, xzr
   54554:	ldr	x8, [x21, #16]
   54558:	add	x24, x25, #0x2
   5455c:	cmp	x8, x24
   54560:	b.eq	545bc <mpfr_ubf_mul_exact@@Base+0x1a0>  // b.none
   54564:	ldr	x9, [x20, #16]
   54568:	cmp	x9, x24
   5456c:	b.eq	545bc <mpfr_ubf_mul_exact@@Base+0x1a0>  // b.none
   54570:	sub	x8, x8, x22
   54574:	add	x8, x8, x9
   54578:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5457c:	ldr	x1, [x0, #2592]
   54580:	add	x0, x0, #0xa20
   54584:	blr	x1
   54588:	mrs	x9, tpidr_el0
   5458c:	ldr	x10, [x9, x0]
   54590:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54594:	ldr	x1, [x0, #2624]
   54598:	add	x0, x0, #0xa40
   5459c:	blr	x1
   545a0:	cmp	x8, x10
   545a4:	b.lt	545bc <mpfr_ubf_mul_exact@@Base+0x1a0>  // b.tstop
   545a8:	ldr	x9, [x9, x0]
   545ac:	cmp	x8, x9
   545b0:	b.gt	545bc <mpfr_ubf_mul_exact@@Base+0x1a0>
   545b4:	str	x8, [x19, #16]
   545b8:	b	54614 <mpfr_ubf_mul_exact@@Base+0x1f8>
   545bc:	add	x23, x19, #0x20
   545c0:	mov	x0, x23
   545c4:	bl	c040 <mpfr_mpz_init@plt>
   545c8:	add	x0, sp, #0x10
   545cc:	mov	x1, x21
   545d0:	bl	54688 <mpfr_ubf_mul_exact@@Base+0x26c>
   545d4:	mov	x0, sp
   545d8:	mov	x1, x20
   545dc:	bl	54688 <mpfr_ubf_mul_exact@@Base+0x26c>
   545e0:	add	x1, sp, #0x10
   545e4:	mov	x2, sp
   545e8:	mov	x0, x23
   545ec:	bl	ca10 <__gmpz_add@plt>
   545f0:	add	x0, sp, #0x10
   545f4:	bl	c210 <mpfr_mpz_clear@plt>
   545f8:	mov	x0, sp
   545fc:	bl	c210 <mpfr_mpz_clear@plt>
   54600:	mov	x0, x23
   54604:	mov	x1, x23
   54608:	mov	x2, x22
   5460c:	bl	bce0 <__gmpz_sub_ui@plt>
   54610:	str	x24, [x19, #16]
   54614:	ldp	x20, x19, [sp, #96]
   54618:	ldp	x22, x21, [sp, #80]
   5461c:	ldp	x24, x23, [sp, #64]
   54620:	ldr	x25, [sp, #48]
   54624:	ldp	x29, x30, [sp, #32]
   54628:	add	sp, sp, #0x70
   5462c:	ret
   54630:	cmp	x8, x25
   54634:	b.eq	5465c <mpfr_ubf_mul_exact@@Base+0x240>  // b.none
   54638:	ldr	x9, [x20, #16]
   5463c:	cmp	x9, x25
   54640:	b.eq	5465c <mpfr_ubf_mul_exact@@Base+0x240>  // b.none
   54644:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   54648:	cmp	x8, x10
   5464c:	b.ne	54664 <mpfr_ubf_mul_exact@@Base+0x248>  // b.any
   54650:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   54654:	cmp	x9, x8
   54658:	b.ne	54678 <mpfr_ubf_mul_exact@@Base+0x25c>  // b.any
   5465c:	str	x25, [x19, #16]
   54660:	b	54614 <mpfr_ubf_mul_exact@@Base+0x1f8>
   54664:	cmp	x9, x10
   54668:	b.ne	54680 <mpfr_ubf_mul_exact@@Base+0x264>  // b.any
   5466c:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   54670:	cmp	x8, x9
   54674:	b.eq	5465c <mpfr_ubf_mul_exact@@Base+0x240>  // b.none
   54678:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5467c:	b	545b4 <mpfr_ubf_mul_exact@@Base+0x198>
   54680:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   54684:	b	545b4 <mpfr_ubf_mul_exact@@Base+0x198>
   54688:	sub	sp, sp, #0x80
   5468c:	stp	x29, x30, [sp, #48]
   54690:	stp	x26, x25, [sp, #64]
   54694:	stp	x24, x23, [sp, #80]
   54698:	stp	x22, x21, [sp, #96]
   5469c:	stp	x20, x19, [sp, #112]
   546a0:	add	x29, sp, #0x30
   546a4:	mov	x20, x1
   546a8:	mov	x19, x0
   546ac:	bl	c040 <mpfr_mpz_init@plt>
   546b0:	ldr	x8, [x20, #16]
   546b4:	mov	x9, #0x4                   	// #4
   546b8:	movk	x9, #0x8000, lsl #48
   546bc:	cmp	x8, x9
   546c0:	b.ne	546e8 <mpfr_ubf_mul_exact@@Base+0x2cc>  // b.any
   546c4:	add	x1, x20, #0x20
   546c8:	mov	x0, x19
   546cc:	ldp	x20, x19, [sp, #112]
   546d0:	ldp	x22, x21, [sp, #96]
   546d4:	ldp	x24, x23, [sp, #80]
   546d8:	ldp	x26, x25, [sp, #64]
   546dc:	ldp	x29, x30, [sp, #48]
   546e0:	add	sp, sp, #0x80
   546e4:	b	c050 <__gmpz_set@plt>
   546e8:	mov	w9, #0x40                  	// #64
   546ec:	sub	x10, x29, #0x8
   546f0:	mov	w11, #0x1                   	// #1
   546f4:	str	x9, [sp, #8]
   546f8:	str	x10, [sp, #32]
   546fc:	str	w11, [sp, #16]
   54700:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54704:	ldr	x1, [x0, #2656]
   54708:	add	x0, x0, #0xa60
   5470c:	blr	x1
   54710:	mrs	x23, tpidr_el0
   54714:	ldr	w24, [x23, x0]
   54718:	mov	x20, x0
   5471c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54720:	ldr	x1, [x0, #2592]
   54724:	add	x0, x0, #0xa20
   54728:	blr	x1
   5472c:	ldr	x25, [x23, x0]
   54730:	mov	x21, x0
   54734:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54738:	ldr	x1, [x0, #2624]
   5473c:	add	x0, x0, #0xa40
   54740:	blr	x1
   54744:	ldr	x26, [x23, x0]
   54748:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   5474c:	str	x9, [x23, x21]
   54750:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   54754:	mov	x22, x0
   54758:	str	x9, [x23, x0]
   5475c:	add	x0, sp, #0x8
   54760:	mov	x1, x8
   54764:	mov	x2, xzr
   54768:	mov	w3, wzr
   5476c:	bl	bb40 <mpfr_set_si_2exp@plt>
   54770:	add	x1, sp, #0x8
   54774:	mov	x0, x19
   54778:	mov	w2, wzr
   5477c:	bl	beb0 <mpfr_get_z@plt>
   54780:	str	w24, [x23, x20]
   54784:	str	x25, [x23, x21]
   54788:	str	x26, [x23, x22]
   5478c:	ldp	x20, x19, [sp, #112]
   54790:	ldp	x22, x21, [sp, #96]
   54794:	ldp	x24, x23, [sp, #80]
   54798:	ldp	x26, x25, [sp, #64]
   5479c:	ldp	x29, x30, [sp, #48]
   547a0:	add	sp, sp, #0x80
   547a4:	ret

00000000000547a8 <mpfr_ubf_exp_less_p@@Base>:
   547a8:	sub	sp, sp, #0x40
   547ac:	str	x19, [sp, #48]
   547b0:	mov	x19, x1
   547b4:	mov	x1, x0
   547b8:	add	x0, sp, #0x10
   547bc:	stp	x29, x30, [sp, #32]
   547c0:	add	x29, sp, #0x20
   547c4:	bl	54688 <mpfr_ubf_mul_exact@@Base+0x26c>
   547c8:	mov	x0, sp
   547cc:	mov	x1, x19
   547d0:	bl	54688 <mpfr_ubf_mul_exact@@Base+0x26c>
   547d4:	add	x0, sp, #0x10
   547d8:	mov	x1, sp
   547dc:	bl	c930 <__gmpz_cmp@plt>
   547e0:	lsr	w19, w0, #31
   547e4:	add	x0, sp, #0x10
   547e8:	bl	c210 <mpfr_mpz_clear@plt>
   547ec:	mov	x0, sp
   547f0:	bl	c210 <mpfr_mpz_clear@plt>
   547f4:	mov	w0, w19
   547f8:	ldr	x19, [sp, #48]
   547fc:	ldp	x29, x30, [sp, #32]
   54800:	add	sp, sp, #0x40
   54804:	ret

0000000000054808 <mpfr_ubf_zexp2exp@@Base>:
   54808:	sub	sp, sp, #0x70
   5480c:	stp	x29, x30, [sp, #32]
   54810:	stp	x26, x25, [sp, #48]
   54814:	stp	x24, x23, [sp, #64]
   54818:	stp	x22, x21, [sp, #80]
   5481c:	stp	x20, x19, [sp, #96]
   54820:	ldr	w8, [x0, #4]
   54824:	add	x29, sp, #0x20
   54828:	cmp	w8, #0x0
   5482c:	cneg	w8, w8, mi  // mi = first
   54830:	cbz	w8, 548dc <mpfr_ubf_zexp2exp@@Base+0xd4>
   54834:	mov	x19, x0
   54838:	mov	w8, w8
   5483c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54840:	ldr	x1, [x0, #2656]
   54844:	add	x0, x0, #0xa60
   54848:	blr	x1
   5484c:	mrs	x23, tpidr_el0
   54850:	ldr	w24, [x23, x0]
   54854:	mov	x20, x0
   54858:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5485c:	ldr	x1, [x0, #2592]
   54860:	add	x0, x0, #0xa20
   54864:	blr	x1
   54868:	ldr	x25, [x23, x0]
   5486c:	mov	x21, x0
   54870:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54874:	ldr	x1, [x0, #2624]
   54878:	add	x0, x0, #0xa40
   5487c:	blr	x1
   54880:	ldr	x26, [x23, x0]
   54884:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   54888:	str	x9, [x23, x21]
   5488c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   54890:	mov	x22, x0
   54894:	str	x9, [x23, x0]
   54898:	lsl	x1, x8, #6
   5489c:	mov	x0, sp
   548a0:	bl	cad0 <mpfr_init2@plt>
   548a4:	mov	x0, sp
   548a8:	mov	x1, x19
   548ac:	mov	w2, wzr
   548b0:	bl	c2b0 <mpfr_set_z@plt>
   548b4:	mov	x0, sp
   548b8:	mov	w1, #0x1                   	// #1
   548bc:	bl	c230 <mpfr_get_si@plt>
   548c0:	mov	x19, x0
   548c4:	mov	x0, sp
   548c8:	bl	c110 <mpfr_clear@plt>
   548cc:	str	w24, [x23, x20]
   548d0:	str	x25, [x23, x21]
   548d4:	str	x26, [x23, x22]
   548d8:	b	548e0 <mpfr_ubf_zexp2exp@@Base+0xd8>
   548dc:	mov	x19, xzr
   548e0:	mov	x0, x19
   548e4:	ldp	x20, x19, [sp, #96]
   548e8:	ldp	x22, x21, [sp, #80]
   548ec:	ldp	x24, x23, [sp, #64]
   548f0:	ldp	x26, x25, [sp, #48]
   548f4:	ldp	x29, x30, [sp, #32]
   548f8:	add	sp, sp, #0x70
   548fc:	ret

0000000000054900 <mpfr_ubf_diff_exp@@Base>:
   54900:	sub	sp, sp, #0x40
   54904:	str	x19, [sp, #48]
   54908:	mov	x19, x1
   5490c:	mov	x1, x0
   54910:	add	x0, sp, #0x10
   54914:	stp	x29, x30, [sp, #32]
   54918:	add	x29, sp, #0x20
   5491c:	bl	54688 <mpfr_ubf_mul_exact@@Base+0x26c>
   54920:	mov	x0, sp
   54924:	mov	x1, x19
   54928:	bl	54688 <mpfr_ubf_mul_exact@@Base+0x26c>
   5492c:	add	x0, sp, #0x10
   54930:	add	x1, sp, #0x10
   54934:	mov	x2, sp
   54938:	bl	be90 <__gmpz_sub@plt>
   5493c:	mov	x0, sp
   54940:	bl	c210 <mpfr_mpz_clear@plt>
   54944:	add	x0, sp, #0x10
   54948:	bl	bcf0 <mpfr_ubf_zexp2exp@plt>
   5494c:	mov	x19, x0
   54950:	add	x0, sp, #0x10
   54954:	bl	c210 <mpfr_mpz_clear@plt>
   54958:	mov	x0, x19
   5495c:	ldr	x19, [sp, #48]
   54960:	ldp	x29, x30, [sp, #32]
   54964:	add	sp, sp, #0x40
   54968:	ret

000000000005496c <mpfr_beta@@Base>:
   5496c:	sub	sp, sp, #0x190
   54970:	stp	x22, x21, [sp, #368]
   54974:	stp	x20, x19, [sp, #384]
   54978:	mov	x21, x1
   5497c:	mov	x19, x0
   54980:	mov	x0, x1
   54984:	mov	x1, x2
   54988:	stp	x29, x30, [sp, #304]
   5498c:	stp	x28, x27, [sp, #320]
   54990:	stp	x26, x25, [sp, #336]
   54994:	stp	x24, x23, [sp, #352]
   54998:	add	x29, sp, #0x130
   5499c:	mov	w20, w3
   549a0:	mov	x22, x2
   549a4:	bl	ca50 <mpfr_less_p@plt>
   549a8:	cbz	w0, 549e8 <mpfr_beta@@Base+0x7c>
   549ac:	mov	x0, x19
   549b0:	mov	x1, x22
   549b4:	mov	x2, x21
   549b8:	mov	w3, w20
   549bc:	bl	c910 <mpfr_beta@plt>
   549c0:	mov	w21, w0
   549c4:	mov	w0, w21
   549c8:	ldp	x20, x19, [sp, #384]
   549cc:	ldp	x22, x21, [sp, #368]
   549d0:	ldp	x24, x23, [sp, #352]
   549d4:	ldp	x26, x25, [sp, #336]
   549d8:	ldp	x28, x27, [sp, #320]
   549dc:	ldp	x29, x30, [sp, #304]
   549e0:	add	sp, sp, #0x190
   549e4:	ret
   549e8:	ldr	x8, [x21, #16]
   549ec:	mov	x24, #0x2                   	// #2
   549f0:	movk	x24, #0x8000, lsl #48
   549f4:	add	x10, x24, #0x2
   549f8:	cmp	x8, x10
   549fc:	b.lt	550b4 <mpfr_beta@@Base+0x748>  // b.tstop
   54a00:	ldr	x9, [x22, #16]
   54a04:	cmp	x9, x10
   54a08:	b.lt	550c0 <mpfr_beta@@Base+0x754>  // b.tstop
   54a0c:	mov	x0, x22
   54a10:	bl	c200 <mpfr_integer_p@plt>
   54a14:	mov	w23, w0
   54a18:	cbz	w0, 54a24 <mpfr_beta@@Base+0xb8>
   54a1c:	ldr	w8, [x22, #8]
   54a20:	tbnz	w8, #31, 54b9c <mpfr_beta@@Base+0x230>
   54a24:	mov	x0, x21
   54a28:	bl	c200 <mpfr_integer_p@plt>
   54a2c:	cbz	w0, 54a38 <mpfr_beta@@Base+0xcc>
   54a30:	ldr	w8, [x21, #8]
   54a34:	tbnz	w8, #31, 54bb8 <mpfr_beta@@Base+0x24c>
   54a38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54a3c:	ldr	x1, [x0, #2656]
   54a40:	add	x0, x0, #0xa60
   54a44:	blr	x1
   54a48:	mrs	x25, tpidr_el0
   54a4c:	ldr	w26, [x25, x0]
   54a50:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54a54:	ldr	x1, [x0, #2592]
   54a58:	add	x0, x0, #0xa20
   54a5c:	blr	x1
   54a60:	ldr	x28, [x25, x0]
   54a64:	mov	x8, x0
   54a68:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54a6c:	ldr	x1, [x0, #2624]
   54a70:	add	x0, x0, #0xa40
   54a74:	blr	x1
   54a78:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   54a7c:	mov	x10, #0x3fffffffffffffff    	// #4611686018427387903
   54a80:	ldr	x27, [x25, x0]
   54a84:	str	x9, [x25, x8]
   54a88:	str	x10, [x25, x0]
   54a8c:	ldr	x8, [x21, #16]
   54a90:	ldr	x9, [x22, #16]
   54a94:	ldr	x10, [x21]
   54a98:	ldr	x11, [x22]
   54a9c:	cmp	x8, x9
   54aa0:	sub	x10, x8, x10
   54aa4:	sub	x11, x9, x11
   54aa8:	csel	x8, x8, x9, gt
   54aac:	cmp	x10, x11
   54ab0:	csel	x9, x10, x11, lt  // lt = tstop
   54ab4:	sub	x8, x8, x9
   54ab8:	add	x1, x8, #0x1
   54abc:	sub	x8, x24, #0x103
   54ac0:	cmp	x1, x8
   54ac4:	b.ls	54b14 <mpfr_beta@@Base+0x1a8>  // b.plast
   54ac8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54acc:	ldr	x1, [x0, #2592]
   54ad0:	add	x0, x0, #0xa20
   54ad4:	blr	x1
   54ad8:	str	x28, [x25, x0]
   54adc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54ae0:	ldr	x1, [x0, #2624]
   54ae4:	add	x0, x0, #0xa40
   54ae8:	blr	x1
   54aec:	orr	w8, w26, #0x4
   54af0:	str	x27, [x25, x0]
   54af4:	str	x24, [x19, #16]
   54af8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54afc:	ldr	x1, [x0, #2656]
   54b00:	add	x0, x0, #0xa60
   54b04:	blr	x1
   54b08:	mov	w21, wzr
   54b0c:	str	w8, [x25, x0]
   54b10:	b	549c4 <mpfr_beta@@Base+0x58>
   54b14:	sub	x0, x29, #0x28
   54b18:	str	x8, [sp, #48]
   54b1c:	bl	cad0 <mpfr_init2@plt>
   54b20:	sub	x0, x29, #0x28
   54b24:	mov	x1, x21
   54b28:	mov	x2, x22
   54b2c:	mov	w3, wzr
   54b30:	bl	c240 <mpfr_add@plt>
   54b34:	ldur	x8, [x29, #-24]
   54b38:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   54b3c:	cmp	x8, x9
   54b40:	b.ne	54be4 <mpfr_beta@@Base+0x278>  // b.any
   54b44:	sub	x0, x29, #0x28
   54b48:	bl	c110 <mpfr_clear@plt>
   54b4c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54b50:	ldr	x1, [x0, #2656]
   54b54:	add	x0, x0, #0xa60
   54b58:	blr	x1
   54b5c:	str	w26, [x25, x0]
   54b60:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54b64:	ldr	x1, [x0, #2592]
   54b68:	add	x0, x0, #0xa20
   54b6c:	blr	x1
   54b70:	str	x28, [x25, x0]
   54b74:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54b78:	ldr	x1, [x0, #2624]
   54b7c:	add	x0, x0, #0xa40
   54b80:	blr	x1
   54b84:	str	x27, [x25, x0]
   54b88:	mov	w2, #0x1                   	// #1
   54b8c:	mov	x0, x19
   54b90:	mov	w1, w20
   54b94:	bl	c420 <mpfr_underflow@plt>
   54b98:	b	549c0 <mpfr_beta@@Base+0x54>
   54b9c:	ldr	w8, [x21, #8]
   54ba0:	tbnz	w8, #31, 54bb8 <mpfr_beta@@Base+0x24c>
   54ba4:	mov	x0, x21
   54ba8:	mov	x1, x22
   54bac:	bl	ca00 <mpfr_cmpabs@plt>
   54bb0:	cmp	w0, #0x0
   54bb4:	b.le	54cc0 <mpfr_beta@@Base+0x354>
   54bb8:	str	x24, [x19, #16]
   54bbc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54bc0:	ldr	x1, [x0, #2656]
   54bc4:	add	x0, x0, #0xa60
   54bc8:	blr	x1
   54bcc:	mrs	x8, tpidr_el0
   54bd0:	ldr	w9, [x8, x0]
   54bd4:	mov	w21, wzr
   54bd8:	orr	w9, w9, #0x4
   54bdc:	str	w9, [x8, x0]
   54be0:	b	549c4 <mpfr_beta@@Base+0x58>
   54be4:	cbnz	w0, 551b8 <mpfr_beta@@Base+0x84c>
   54be8:	sub	x0, x29, #0x28
   54bec:	bl	c760 <mpfr_sgn@plt>
   54bf0:	cbnz	w23, 54c64 <mpfr_beta@@Base+0x2f8>
   54bf4:	cmp	w0, #0x0
   54bf8:	b.gt	54c64 <mpfr_beta@@Base+0x2f8>
   54bfc:	sub	x0, x29, #0x28
   54c00:	bl	c200 <mpfr_integer_p@plt>
   54c04:	cbz	w0, 54c64 <mpfr_beta@@Base+0x2f8>
   54c08:	sub	x0, x29, #0x28
   54c0c:	bl	c110 <mpfr_clear@plt>
   54c10:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54c14:	ldr	x1, [x0, #2656]
   54c18:	add	x0, x0, #0xa60
   54c1c:	blr	x1
   54c20:	str	w26, [x25, x0]
   54c24:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54c28:	ldr	x1, [x0, #2592]
   54c2c:	add	x0, x0, #0xa20
   54c30:	blr	x1
   54c34:	str	x28, [x25, x0]
   54c38:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   54c3c:	ldr	x1, [x0, #2624]
   54c40:	add	x0, x0, #0xa40
   54c44:	blr	x1
   54c48:	mov	w21, wzr
   54c4c:	str	x27, [x25, x0]
   54c50:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   54c54:	mov	w9, #0x1                   	// #1
   54c58:	str	x8, [x19, #16]
   54c5c:	str	w9, [x19, #8]
   54c60:	b	549c4 <mpfr_beta@@Base+0x58>
   54c64:	ldr	x23, [x19]
   54c68:	subs	x24, x23, #0x1
   54c6c:	b.eq	551fc <mpfr_beta@@Base+0x890>  // b.none
   54c70:	b.le	55204 <mpfr_beta@@Base+0x898>
   54c74:	clz	x8, x24
   54c78:	mov	w9, #0x40                  	// #64
   54c7c:	sub	x8, x9, x8
   54c80:	add	x24, x8, x23
   54c84:	ldr	x8, [sp, #48]
   54c88:	cmp	x24, x8
   54c8c:	b.gt	55478 <mpfr_beta@@Base+0xb0c>
   54c90:	sub	x8, x24, #0x1
   54c94:	add	x9, x24, #0x3e
   54c98:	cmp	x8, #0x0
   54c9c:	csel	x8, x9, x8, lt  // lt = tstop
   54ca0:	asr	x8, x8, #6
   54ca4:	cmp	x24, #0x201
   54ca8:	add	x23, x8, #0x1
   54cac:	b.lt	54d6c <mpfr_beta@@Base+0x400>  // b.tstop
   54cb0:	lsl	x0, x23, #4
   54cb4:	str	x0, [sp, #56]
   54cb8:	bl	cd50 <mpfr_allocate_func@plt>
   54cbc:	b	54d78 <mpfr_beta@@Base+0x40c>
   54cc0:	mov	x0, x21
   54cc4:	bl	c200 <mpfr_integer_p@plt>
   54cc8:	cbz	w0, 54bb8 <mpfr_beta@@Base+0x24c>
   54ccc:	mov	x0, x21
   54cd0:	mov	x1, x22
   54cd4:	bl	ca00 <mpfr_cmpabs@plt>
   54cd8:	cbz	w0, 55018 <mpfr_beta@@Base+0x6ac>
   54cdc:	ldr	x8, [x21, #16]
   54ce0:	ldr	x9, [x22, #16]
   54ce4:	sub	x0, x29, #0x28
   54ce8:	cmp	x8, x9
   54cec:	csel	x1, x8, x9, gt
   54cf0:	bl	cad0 <mpfr_init2@plt>
   54cf4:	sub	x0, x29, #0x28
   54cf8:	mov	x1, x21
   54cfc:	mov	x2, x22
   54d00:	mov	w3, wzr
   54d04:	bl	c240 <mpfr_add@plt>
   54d08:	cbnz	w0, 5526c <mpfr_beta@@Base+0x900>
   54d0c:	sub	x0, x29, #0x28
   54d10:	sub	x2, x29, #0x28
   54d14:	mov	w1, #0x1                   	// #1
   54d18:	mov	w3, wzr
   54d1c:	bl	caa0 <mpfr_ui_sub@plt>
   54d20:	cbnz	w0, 55288 <mpfr_beta@@Base+0x91c>
   54d24:	mov	x0, x21
   54d28:	bl	cd00 <mpfr_odd_p@plt>
   54d2c:	cbz	w0, 55030 <mpfr_beta@@Base+0x6c4>
   54d30:	cmp	w20, #0x3
   54d34:	mov	w8, #0x2                   	// #2
   54d38:	csel	w8, w8, w20, eq  // eq = none
   54d3c:	cmp	w20, #0x2
   54d40:	mov	w9, #0x3                   	// #3
   54d44:	csel	w3, w9, w8, eq  // eq = none
   54d48:	sub	x2, x29, #0x28
   54d4c:	mov	x0, x19
   54d50:	mov	x1, x21
   54d54:	bl	c910 <mpfr_beta@plt>
   54d58:	ldr	w8, [x19, #8]
   54d5c:	neg	w21, w0
   54d60:	neg	w8, w8
   54d64:	str	w8, [x19, #8]
   54d68:	b	55048 <mpfr_beta@@Base+0x6dc>
   54d6c:	add	x8, sp, #0x38
   54d70:	add	x0, x8, #0x10
   54d74:	str	xzr, [sp, #56]
   54d78:	ldr	x1, [sp, #56]
   54d7c:	add	x8, x0, x23, lsl #3
   54d80:	cmp	w20, #0x0
   54d84:	mov	w9, #0x1                   	// #1
   54d88:	mov	w10, #0x40                  	// #64
   54d8c:	stp	x8, x24, [x29, #-80]
   54d90:	cset	w8, eq  // eq = none
   54d94:	str	x0, [sp, #64]
   54d98:	stur	x0, [x29, #-48]
   54d9c:	stur	x24, [x29, #-104]
   54da0:	str	x10, [sp, #8]
   54da4:	stur	w9, [x29, #-64]
   54da8:	stur	w9, [x29, #-96]
   54dac:	stp	x8, x28, [sp, #16]
   54db0:	str	w26, [sp, #44]
   54db4:	str	x27, [sp, #32]
   54db8:	sub	x8, x24, #0x1
   54dbc:	add	x9, x24, #0x3e
   54dc0:	cmp	x8, #0x0
   54dc4:	csel	x8, x9, x8, lt  // lt = tstop
   54dc8:	asr	x8, x8, #6
   54dcc:	add	x23, x8, #0x1
   54dd0:	lsl	x2, x23, #4
   54dd4:	str	x2, [sp, #56]
   54dd8:	cbz	x1, 54de8 <mpfr_beta@@Base+0x47c>
   54ddc:	ldr	x0, [sp, #64]
   54de0:	bl	c260 <mpfr_reallocate_func@plt>
   54de4:	b	54df0 <mpfr_beta@@Base+0x484>
   54de8:	mov	x0, x2
   54dec:	bl	cd50 <mpfr_allocate_func@plt>
   54df0:	str	x0, [sp, #64]
   54df4:	stur	x0, [x29, #-48]
   54df8:	mov	w9, #0x1                   	// #1
   54dfc:	add	x8, x0, x23, lsl #3
   54e00:	sub	x0, x29, #0x48
   54e04:	mov	x1, x21
   54e08:	mov	w2, wzr
   54e0c:	stur	w9, [x29, #-64]
   54e10:	stur	x24, [x29, #-104]
   54e14:	stp	x8, x24, [x29, #-80]
   54e18:	stur	w9, [x29, #-96]
   54e1c:	bl	c800 <mpfr_gamma@plt>
   54e20:	mov	w26, w0
   54e24:	sub	x0, x29, #0x68
   54e28:	mov	x1, x22
   54e2c:	mov	w2, wzr
   54e30:	bl	c800 <mpfr_gamma@plt>
   54e34:	mov	w27, w0
   54e38:	sub	x0, x29, #0x48
   54e3c:	sub	x1, x29, #0x48
   54e40:	sub	x2, x29, #0x68
   54e44:	mov	w3, wzr
   54e48:	bl	be00 <mpfr_mul@plt>
   54e4c:	mov	w28, w0
   54e50:	sub	x0, x29, #0x68
   54e54:	sub	x1, x29, #0x28
   54e58:	mov	w2, wzr
   54e5c:	bl	c800 <mpfr_gamma@plt>
   54e60:	mov	w23, w0
   54e64:	sub	x0, x29, #0x48
   54e68:	sub	x1, x29, #0x48
   54e6c:	sub	x2, x29, #0x68
   54e70:	mov	w3, wzr
   54e74:	bl	c670 <mpfr_div@plt>
   54e78:	ldur	x8, [x29, #-56]
   54e7c:	mov	x9, #0x2                   	// #2
   54e80:	movk	x9, #0x8000, lsl #48
   54e84:	cmp	x8, x9
   54e88:	b.eq	55054 <mpfr_beta@@Base+0x6e8>  // b.none
   54e8c:	orr	w9, w27, w26
   54e90:	orr	w9, w9, w28
   54e94:	orr	w9, w9, w23
   54e98:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   54e9c:	cmp	x8, x10
   54ea0:	orr	w23, w9, w0
   54ea4:	b.le	54fe0 <mpfr_beta@@Base+0x674>
   54ea8:	ldr	w26, [sp, #44]
   54eac:	ldp	x28, x27, [sp, #24]
   54eb0:	mov	x9, #0x2                   	// #2
   54eb4:	movk	x9, #0x8000, lsl #48
   54eb8:	cbz	w23, 553c8 <mpfr_beta@@Base+0xa5c>
   54ebc:	ldur	x8, [x29, #-56]
   54ec0:	add	x9, x9, #0x2
   54ec4:	cmp	x8, x9
   54ec8:	b.lt	54f04 <mpfr_beta@@Base+0x598>  // b.tstop
   54ecc:	ldur	x8, [x29, #-72]
   54ed0:	ldr	x9, [x19]
   54ed4:	ldur	x0, [x29, #-48]
   54ed8:	sub	x2, x24, #0x3
   54edc:	sub	x10, x8, #0x1
   54ee0:	add	x8, x8, #0x3e
   54ee4:	cmp	x10, #0x0
   54ee8:	csel	x8, x8, x10, lt  // lt = tstop
   54eec:	asr	x8, x8, #6
   54ef0:	add	x1, x8, #0x1
   54ef4:	ldr	x8, [sp, #16]
   54ef8:	add	x3, x9, x8
   54efc:	bl	c3d0 <mpfr_round_p@plt>
   54f00:	cbnz	w0, 553c8 <mpfr_beta@@Base+0xa5c>
   54f04:	mov	x27, #0x2                   	// #2
   54f08:	mov	w1, #0x1                   	// #1
   54f0c:	mov	x0, x21
   54f10:	mov	x2, xzr
   54f14:	movk	x27, #0x8000, lsl #48
   54f18:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   54f1c:	cbnz	w0, 54f50 <mpfr_beta@@Base+0x5e4>
   54f20:	ldr	x26, [x22, #16]
   54f24:	mov	w1, #0x1                   	// #1
   54f28:	mov	x0, x22
   54f2c:	sub	x23, x26, #0x1
   54f30:	mov	x2, x23
   54f34:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   54f38:	cbz	w0, 5536c <mpfr_beta@@Base+0xa00>
   54f3c:	mov	x1, #0xffffffffffffffff    	// #-1
   54f40:	mov	x0, x22
   54f44:	mov	x2, x23
   54f48:	bl	c430 <mpfr_cmp_si_2exp@plt>
   54f4c:	cbz	w0, 55398 <mpfr_beta@@Base+0xa2c>
   54f50:	mov	w1, #0x1                   	// #1
   54f54:	mov	x0, x22
   54f58:	mov	x2, xzr
   54f5c:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   54f60:	cbnz	w0, 54f7c <mpfr_beta@@Base+0x610>
   54f64:	ldr	x8, [x21, #16]
   54f68:	mov	w1, #0x1                   	// #1
   54f6c:	mov	x0, x21
   54f70:	sub	x2, x8, #0x1
   54f74:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   54f78:	cbz	w0, 55378 <mpfr_beta@@Base+0xa0c>
   54f7c:	mov	w1, #0x2                   	// #2
   54f80:	mov	x0, x21
   54f84:	mov	x2, xzr
   54f88:	bl	c000 <mpfr_cmp_ui_2exp@plt>
   54f8c:	cbnz	w0, 54fa4 <mpfr_beta@@Base+0x638>
   54f90:	mov	x1, #0xffffffffffffffff    	// #-1
   54f94:	mov	x2, #0xffffffffffffffff    	// #-1
   54f98:	mov	x0, x22
   54f9c:	bl	c430 <mpfr_cmp_si_2exp@plt>
   54fa0:	cbz	w0, 553ac <mpfr_beta@@Base+0xa40>
   54fa4:	ldr	x9, [sp, #8]
   54fa8:	sub	x8, x27, x24
   54fac:	sub	x8, x8, #0x103
   54fb0:	cmp	x9, x8
   54fb4:	b.gt	54ffc <mpfr_beta@@Base+0x690>
   54fb8:	ldr	x8, [sp, #8]
   54fbc:	ldp	x9, x1, [sp, #48]
   54fc0:	add	x24, x24, x8
   54fc4:	cmp	x24, #0x0
   54fc8:	cinc	x8, x24, lt  // lt = tstop
   54fcc:	cmp	x24, x9
   54fd0:	asr	x8, x8, #1
   54fd4:	str	x8, [sp, #8]
   54fd8:	b.le	54db8 <mpfr_beta@@Base+0x44c>
   54fdc:	b	55478 <mpfr_beta@@Base+0xb0c>
   54fe0:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   54fe4:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   54fe8:	mov	w1, #0x129                 	// #297
   54fec:	add	x0, x0, #0x801
   54ff0:	add	x2, x2, #0x808
   54ff4:	bl	cb90 <mpfr_assert_fail@plt>
   54ff8:	b	54ea8 <mpfr_beta@@Base+0x53c>
   54ffc:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   55000:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   55004:	mov	w1, #0x151                 	// #337
   55008:	add	x0, x0, #0x801
   5500c:	add	x2, x2, #0x922
   55010:	bl	cb90 <mpfr_assert_fail@plt>
   55014:	b	54fb8 <mpfr_beta@@Base+0x64c>
   55018:	mov	w1, #0x1                   	// #1
   5501c:	mov	x0, x19
   55020:	mov	x2, x21
   55024:	mov	w3, w20
   55028:	bl	c350 <mpfr_ui_div@plt>
   5502c:	b	549c0 <mpfr_beta@@Base+0x54>
   55030:	sub	x2, x29, #0x28
   55034:	mov	x0, x19
   55038:	mov	x1, x21
   5503c:	mov	w3, w20
   55040:	bl	c910 <mpfr_beta@plt>
   55044:	mov	w21, w0
   55048:	sub	x0, x29, #0x28
   5504c:	bl	c110 <mpfr_clear@plt>
   55050:	b	549c4 <mpfr_beta@@Base+0x58>
   55054:	sub	x0, x29, #0x28
   55058:	bl	c110 <mpfr_clear@plt>
   5505c:	ldr	x1, [sp, #56]
   55060:	cbz	x1, 5506c <mpfr_beta@@Base+0x700>
   55064:	ldr	x0, [sp, #64]
   55068:	bl	cc80 <mpfr_free_func@plt>
   5506c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55070:	ldr	x1, [x0, #2592]
   55074:	add	x0, x0, #0xa20
   55078:	blr	x1
   5507c:	ldr	x8, [sp, #24]
   55080:	str	x8, [x25, x0]
   55084:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55088:	ldr	x1, [x0, #2624]
   5508c:	add	x0, x0, #0xa40
   55090:	blr	x1
   55094:	ldr	x8, [sp, #32]
   55098:	str	x8, [x25, x0]
   5509c:	mov	x8, #0x2                   	// #2
   550a0:	movk	x8, #0x8000, lsl #48
   550a4:	str	x8, [x19, #16]
   550a8:	ldr	w8, [sp, #44]
   550ac:	orr	w8, w8, #0x4
   550b0:	b	54af8 <mpfr_beta@@Base+0x18c>
   550b4:	cmp	x8, x24
   550b8:	b.eq	54bb8 <mpfr_beta@@Base+0x24c>  // b.none
   550bc:	ldr	x9, [x22, #16]
   550c0:	cmp	x9, x24
   550c4:	b.eq	54bb8 <mpfr_beta@@Base+0x24c>  // b.none
   550c8:	mov	x10, #0x8000000000000003    	// #-9223372036854775805
   550cc:	cmp	x8, x10
   550d0:	b.eq	55124 <mpfr_beta@@Base+0x7b8>  // b.none
   550d4:	cmp	x9, x10
   550d8:	b.eq	55124 <mpfr_beta@@Base+0x7b8>  // b.none
   550dc:	mov	x20, #0x2                   	// #2
   550e0:	mov	x0, x21
   550e4:	movk	x20, #0x8000, lsl #48
   550e8:	bl	c760 <mpfr_sgn@plt>
   550ec:	cbz	w0, 551d4 <mpfr_beta@@Base+0x868>
   550f0:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   550f4:	str	x8, [x19, #16]
   550f8:	ldr	w8, [x22, #8]
   550fc:	str	w8, [x19, #8]
   55100:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55104:	ldr	x1, [x0, #2656]
   55108:	add	x0, x0, #0xa60
   5510c:	blr	x1
   55110:	mrs	x8, tpidr_el0
   55114:	ldr	w9, [x8, x0]
   55118:	mov	w21, wzr
   5511c:	orr	w9, w9, #0x20
   55120:	b	54bdc <mpfr_beta@@Base+0x270>
   55124:	mov	x23, #0x2                   	// #2
   55128:	movk	x23, #0x8000, lsl #48
   5512c:	cmp	x8, x10
   55130:	b.ne	55158 <mpfr_beta@@Base+0x7ec>  // b.any
   55134:	ldr	w8, [x21, #8]
   55138:	cmp	w8, #0x1
   5513c:	b.lt	55158 <mpfr_beta@@Base+0x7ec>  // b.tstop
   55140:	mov	x0, x22
   55144:	bl	c760 <mpfr_sgn@plt>
   55148:	cmp	w0, #0x1
   5514c:	b.lt	55244 <mpfr_beta@@Base+0x8d8>  // b.tstop
   55150:	mov	w21, wzr
   55154:	b	54c50 <mpfr_beta@@Base+0x2e4>
   55158:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   5515c:	mov	x24, #0x2                   	// #2
   55160:	cmp	x9, x8
   55164:	movk	x24, #0x8000, lsl #48
   55168:	b.ne	54a0c <mpfr_beta@@Base+0xa0>  // b.any
   5516c:	mov	x20, #0x2                   	// #2
   55170:	mov	x0, x21
   55174:	movk	x20, #0x8000, lsl #48
   55178:	bl	c760 <mpfr_sgn@plt>
   5517c:	cmp	w0, #0x1
   55180:	b.lt	5523c <mpfr_beta@@Base+0x8d0>  // b.tstop
   55184:	mov	x0, x21
   55188:	bl	c200 <mpfr_integer_p@plt>
   5518c:	cbz	w0, 5523c <mpfr_beta@@Base+0x8d0>
   55190:	mov	x8, #0x8000000000000001    	// #-9223372036854775807
   55194:	mov	x0, x21
   55198:	str	x8, [x19, #16]
   5519c:	bl	cd00 <mpfr_odd_p@plt>
   551a0:	cmp	w0, #0x0
   551a4:	mov	w8, #0x1                   	// #1
   551a8:	cneg	w8, w8, ne  // ne = any
   551ac:	mov	w21, wzr
   551b0:	str	w8, [x19, #8]
   551b4:	b	549c4 <mpfr_beta@@Base+0x58>
   551b8:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   551bc:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   551c0:	add	x0, x0, #0x801
   551c4:	add	x2, x2, #0x31f
   551c8:	mov	w1, #0xf7                  	// #247
   551cc:	bl	cb90 <mpfr_assert_fail@plt>
   551d0:	b	54be8 <mpfr_beta@@Base+0x27c>
   551d4:	mov	x0, x22
   551d8:	bl	c760 <mpfr_sgn@plt>
   551dc:	cbz	w0, 55220 <mpfr_beta@@Base+0x8b4>
   551e0:	mov	x0, x22
   551e4:	bl	c200 <mpfr_integer_p@plt>
   551e8:	cbnz	w0, 5523c <mpfr_beta@@Base+0x8d0>
   551ec:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   551f0:	str	x8, [x19, #16]
   551f4:	ldr	w8, [x21, #8]
   551f8:	b	550fc <mpfr_beta@@Base+0x790>
   551fc:	mov	x8, xzr
   55200:	b	54c80 <mpfr_beta@@Base+0x314>
   55204:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   55208:	adrp	x2, 59000 <mpfr_free_pool@@Base+0x387c>
   5520c:	add	x0, x0, #0x801
   55210:	add	x2, x2, #0x90d
   55214:	mov	w1, #0x108                 	// #264
   55218:	bl	cb90 <mpfr_assert_fail@plt>
   5521c:	b	54c74 <mpfr_beta@@Base+0x308>
   55220:	ldr	w8, [x21, #8]
   55224:	ldr	w9, [x22, #8]
   55228:	cmp	w8, w9
   5522c:	b.ne	5523c <mpfr_beta@@Base+0x8d0>  // b.any
   55230:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   55234:	str	x9, [x19, #16]
   55238:	b	550fc <mpfr_beta@@Base+0x790>
   5523c:	str	x20, [x19, #16]
   55240:	b	54bbc <mpfr_beta@@Base+0x250>
   55244:	ldr	x8, [x22, #16]
   55248:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   5524c:	orr	x8, x8, #0x2
   55250:	cmp	x8, x9
   55254:	b.eq	55264 <mpfr_beta@@Base+0x8f8>  // b.none
   55258:	mov	x0, x22
   5525c:	bl	c200 <mpfr_integer_p@plt>
   55260:	cbz	w0, 552a4 <mpfr_beta@@Base+0x938>
   55264:	str	x23, [x19, #16]
   55268:	b	54bbc <mpfr_beta@@Base+0x250>
   5526c:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   55270:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   55274:	add	x0, x0, #0x801
   55278:	add	x2, x2, #0x31f
   5527c:	mov	w1, #0xc6                  	// #198
   55280:	bl	cb90 <mpfr_assert_fail@plt>
   55284:	b	54d0c <mpfr_beta@@Base+0x3a0>
   55288:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   5528c:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   55290:	add	x0, x0, #0x801
   55294:	add	x2, x2, #0x31f
   55298:	mov	w1, #0xc8                  	// #200
   5529c:	bl	cb90 <mpfr_assert_fail@plt>
   552a0:	b	54d24 <mpfr_beta@@Base+0x3b8>
   552a4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   552a8:	ldr	x1, [x0, #2656]
   552ac:	add	x0, x0, #0xa60
   552b0:	blr	x1
   552b4:	mrs	x25, tpidr_el0
   552b8:	ldr	w26, [x25, x0]
   552bc:	mov	x20, x0
   552c0:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   552c4:	ldr	x1, [x0, #2592]
   552c8:	add	x0, x0, #0xa20
   552cc:	blr	x1
   552d0:	ldr	x27, [x25, x0]
   552d4:	mov	x23, x0
   552d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   552dc:	ldr	x1, [x0, #2624]
   552e0:	add	x0, x0, #0xa40
   552e4:	blr	x1
   552e8:	ldr	x28, [x25, x0]
   552ec:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   552f0:	str	x8, [x25, x23]
   552f4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   552f8:	mov	x24, x0
   552fc:	str	x8, [x25, x0]
   55300:	add	x0, sp, #0x38
   55304:	mov	w1, #0x1                   	// #1
   55308:	bl	cad0 <mpfr_init2@plt>
   5530c:	add	x0, sp, #0x38
   55310:	mov	w1, #0x1                   	// #1
   55314:	mov	x2, xzr
   55318:	mov	w3, wzr
   5531c:	bl	c640 <mpfr_set_ui_2exp@plt>
   55320:	add	x0, sp, #0x38
   55324:	sub	x1, x29, #0x28
   55328:	add	x3, sp, #0x38
   5532c:	mov	w4, #0x3                   	// #3
   55330:	mov	x2, x22
   55334:	bl	ccd0 <mpfr_fmodquo@plt>
   55338:	add	x0, sp, #0x38
   5533c:	bl	c110 <mpfr_clear@plt>
   55340:	mov	x8, #0x8000000000000003    	// #-9223372036854775805
   55344:	str	w26, [x25, x20]
   55348:	str	x27, [x25, x23]
   5534c:	str	x28, [x25, x24]
   55350:	str	x8, [x19, #16]
   55354:	ldur	x8, [x29, #-40]
   55358:	mov	w21, wzr
   5535c:	tst	x8, #0x1
   55360:	mov	w8, #0x1                   	// #1
   55364:	cneg	w8, w8, ne  // ne = any
   55368:	b	551b0 <mpfr_beta@@Base+0x844>
   5536c:	mov	w8, #0x1                   	// #1
   55370:	sub	x2, x8, x26
   55374:	b	55384 <mpfr_beta@@Base+0xa18>
   55378:	ldr	x8, [x21, #16]
   5537c:	mov	w9, #0x1                   	// #1
   55380:	sub	x2, x9, x8
   55384:	sub	x0, x29, #0x48
   55388:	mov	w1, #0x1                   	// #1
   5538c:	mov	w3, wzr
   55390:	bl	c640 <mpfr_set_ui_2exp@plt>
   55394:	b	553c0 <mpfr_beta@@Base+0xa54>
   55398:	mov	w8, #0x1                   	// #1
   5539c:	sub	x2, x8, x26
   553a0:	sub	x0, x29, #0x48
   553a4:	mov	x1, #0xffffffffffffffff    	// #-1
   553a8:	b	553b8 <mpfr_beta@@Base+0xa4c>
   553ac:	sub	x0, x29, #0x48
   553b0:	mov	x1, #0xffffffffffffffff    	// #-1
   553b4:	mov	w2, #0x2                   	// #2
   553b8:	mov	w3, wzr
   553bc:	bl	bb40 <mpfr_set_si_2exp@plt>
   553c0:	ldr	w26, [sp, #44]
   553c4:	ldp	x28, x27, [sp, #24]
   553c8:	ldur	w3, [x29, #-64]
   553cc:	sub	x1, x29, #0x48
   553d0:	mov	x0, x19
   553d4:	mov	w2, w20
   553d8:	bl	c6f0 <mpfr_set4@plt>
   553dc:	ldr	x1, [sp, #56]
   553e0:	mov	w21, w0
   553e4:	cbz	x1, 553f0 <mpfr_beta@@Base+0xa84>
   553e8:	ldr	x0, [sp, #64]
   553ec:	bl	cc80 <mpfr_free_func@plt>
   553f0:	sub	x0, x29, #0x28
   553f4:	bl	c110 <mpfr_clear@plt>
   553f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   553fc:	ldr	x1, [x0, #2656]
   55400:	add	x0, x0, #0xa60
   55404:	blr	x1
   55408:	str	w26, [x25, x0]
   5540c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55410:	ldr	x1, [x0, #2592]
   55414:	add	x0, x0, #0xa20
   55418:	blr	x1
   5541c:	str	x28, [x25, x0]
   55420:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55424:	ldr	x1, [x0, #2624]
   55428:	add	x0, x0, #0xa40
   5542c:	blr	x1
   55430:	str	x27, [x25, x0]
   55434:	ldr	x8, [x19, #16]
   55438:	cmp	x8, x27
   5543c:	b.gt	55464 <mpfr_beta@@Base+0xaf8>
   55440:	cmp	x8, x28
   55444:	b.lt	55464 <mpfr_beta@@Base+0xaf8>  // b.tstop
   55448:	cbz	w21, 549c4 <mpfr_beta@@Base+0x58>
   5544c:	orr	w8, w26, #0x8
   55450:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55454:	ldr	x1, [x0, #2656]
   55458:	add	x0, x0, #0xa60
   5545c:	blr	x1
   55460:	b	54b0c <mpfr_beta@@Base+0x1a0>
   55464:	mov	x0, x19
   55468:	mov	w1, w21
   5546c:	mov	w2, w20
   55470:	bl	cb80 <mpfr_check_range@plt>
   55474:	b	549c0 <mpfr_beta@@Base+0x54>
   55478:	bl	c940 <mpfr_abort_prec_max@plt>

000000000005547c <mpfr_odd_p@@Base>:
   5547c:	stp	x29, x30, [sp, #-48]!
   55480:	stp	x20, x19, [sp, #32]
   55484:	str	x21, [sp, #16]
   55488:	ldr	x21, [x0, #16]
   5548c:	mov	x29, sp
   55490:	cmp	x21, #0x1
   55494:	b.lt	55520 <mpfr_odd_p@@Base+0xa4>  // b.tstop
   55498:	ldr	x8, [x0]
   5549c:	mov	x19, x0
   554a0:	cmp	x21, x8
   554a4:	b.gt	55520 <mpfr_odd_p@@Base+0xa4>
   554a8:	sub	x9, x8, #0x1
   554ac:	add	x8, x8, #0x3e
   554b0:	cmp	x9, #0x0
   554b4:	csel	x8, x8, x9, lt  // lt = tstop
   554b8:	and	x8, x8, #0xffffffffffffffc0
   554bc:	sub	x8, x8, x21
   554c0:	add	x9, x8, #0x40
   554c4:	add	x8, x8, #0x7f
   554c8:	cmp	x9, #0x0
   554cc:	csel	x8, x8, x9, lt  // lt = tstop
   554d0:	cmn	x9, #0x40
   554d4:	asr	x20, x8, #6
   554d8:	b.le	5553c <mpfr_odd_p@@Base+0xc0>
   554dc:	ldr	x8, [x19, #24]
   554e0:	ands	x10, x21, #0x3f
   554e4:	ldr	x9, [x8, x20, lsl #3]
   554e8:	b.eq	55504 <mpfr_odd_p@@Base+0x88>  // b.none
   554ec:	sub	x10, x10, #0x1
   554f0:	lsl	x9, x9, x10
   554f4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   554f8:	cmp	x9, x10
   554fc:	b.eq	55508 <mpfr_odd_p@@Base+0x8c>  // b.none
   55500:	b	55520 <mpfr_odd_p@@Base+0xa4>
   55504:	tbz	w9, #0, 55520 <mpfr_odd_p@@Base+0xa4>
   55508:	sub	x8, x8, #0x8
   5550c:	subs	x9, x20, #0x1
   55510:	b.lt	55534 <mpfr_odd_p@@Base+0xb8>  // b.tstop
   55514:	ldr	x10, [x8, x20, lsl #3]
   55518:	mov	x20, x9
   5551c:	cbz	x10, 5550c <mpfr_odd_p@@Base+0x90>
   55520:	mov	w0, wzr
   55524:	ldp	x20, x19, [sp, #32]
   55528:	ldr	x21, [sp, #16]
   5552c:	ldp	x29, x30, [sp], #48
   55530:	ret
   55534:	mov	w0, #0x1                   	// #1
   55538:	b	55524 <mpfr_odd_p@@Base+0xa8>
   5553c:	adrp	x0, 5f000 <mpfr_bases@@Base+0x14f8>
   55540:	adrp	x2, 5f000 <mpfr_bases@@Base+0x14f8>
   55544:	add	x0, x0, #0x84c
   55548:	add	x2, x2, #0x854
   5554c:	mov	w1, #0x3c                  	// #60
   55550:	bl	cb90 <mpfr_assert_fail@plt>
   55554:	b	554dc <mpfr_odd_p@@Base+0x60>

0000000000055558 <mpfr_get_q@@Base>:
   55558:	stp	x29, x30, [sp, #-32]!
   5555c:	stp	x20, x19, [sp, #16]
   55560:	mov	x20, x1
   55564:	mov	x19, x0
   55568:	add	x0, x0, #0x10
   5556c:	mov	w1, #0x1                   	// #1
   55570:	mov	x29, sp
   55574:	bl	bd60 <__gmpz_set_ui@plt>
   55578:	ldr	x8, [x20, #16]
   5557c:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   55580:	cmp	x8, x9
   55584:	b.le	555c8 <mpfr_get_q@@Base+0x70>
   55588:	mov	x0, x19
   5558c:	mov	x1, x20
   55590:	bl	cb10 <mpfr_get_z_2exp@plt>
   55594:	mov	x2, x0
   55598:	tbnz	x0, #63, 555b0 <mpfr_get_q@@Base+0x58>
   5559c:	mov	x0, x19
   555a0:	mov	x1, x19
   555a4:	ldp	x20, x19, [sp, #16]
   555a8:	ldp	x29, x30, [sp], #32
   555ac:	b	c290 <__gmpz_mul_2exp@plt>
   555b0:	mov	x0, x19
   555b4:	mov	x1, x19
   555b8:	ldp	x20, x19, [sp, #16]
   555bc:	neg	x2, x2
   555c0:	ldp	x29, x30, [sp], #32
   555c4:	b	cb40 <__gmpq_div_2exp@plt>
   555c8:	mov	x9, #0x8000000000000001    	// #-9223372036854775807
   555cc:	cmp	x8, x9
   555d0:	b.ne	555e8 <mpfr_get_q@@Base+0x90>  // b.any
   555d4:	mov	x0, x19
   555d8:	ldp	x20, x19, [sp, #16]
   555dc:	mov	x1, xzr
   555e0:	ldp	x29, x30, [sp], #32
   555e4:	b	bd60 <__gmpz_set_ui@plt>
   555e8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   555ec:	ldr	x1, [x0, #2656]
   555f0:	add	x0, x0, #0xa60
   555f4:	blr	x1
   555f8:	mrs	x8, tpidr_el0
   555fc:	ldr	w9, [x8, x0]
   55600:	orr	w9, w9, #0x10
   55604:	str	w9, [x8, x0]
   55608:	b	555d4 <mpfr_get_q@@Base+0x7c>

000000000005560c <mpfr_mpz_init@@Base>:
   5560c:	stp	x29, x30, [sp, #-16]!
   55610:	mov	x29, sp
   55614:	mov	x8, x0
   55618:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5561c:	ldr	x1, [x0, #2576]
   55620:	add	x0, x0, #0xa10
   55624:	blr	x1
   55628:	mrs	x9, tpidr_el0
   5562c:	ldr	w10, [x9, x0]
   55630:	subs	w10, w10, #0x1
   55634:	b.lt	55674 <mpfr_mpz_init@@Base+0x68>  // b.tstop
   55638:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   5563c:	ldr	x1, [x0, #2576]
   55640:	add	x0, x0, #0xa10
   55644:	blr	x1
   55648:	str	w10, [x9, x0]
   5564c:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55650:	ldr	x1, [x0, #2560]
   55654:	add	x0, x0, #0xa00
   55658:	blr	x1
   5565c:	add	x9, x9, x0
   55660:	ldr	q0, [x9, w10, sxtw #4]
   55664:	str	q0, [x8]
   55668:	str	wzr, [x8, #4]
   5566c:	ldp	x29, x30, [sp], #16
   55670:	ret
   55674:	mov	x0, x8
   55678:	ldp	x29, x30, [sp], #16
   5567c:	b	cba0 <__gmpz_init@plt>

0000000000055680 <mpfr_mpz_init2@@Base>:
   55680:	stp	x29, x30, [sp, #-16]!
   55684:	mov	x29, sp
   55688:	mov	x9, x1
   5568c:	mov	x8, x0
   55690:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55694:	ldr	x1, [x0, #2576]
   55698:	add	x0, x0, #0xa10
   5569c:	blr	x1
   556a0:	cmp	x9, #0x800
   556a4:	b.hi	556f4 <mpfr_mpz_init2@@Base+0x74>  // b.pmore
   556a8:	mrs	x10, tpidr_el0
   556ac:	ldr	w11, [x10, x0]
   556b0:	subs	w11, w11, #0x1
   556b4:	b.lt	556f4 <mpfr_mpz_init2@@Base+0x74>  // b.tstop
   556b8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   556bc:	ldr	x1, [x0, #2576]
   556c0:	add	x0, x0, #0xa10
   556c4:	blr	x1
   556c8:	str	w11, [x10, x0]
   556cc:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   556d0:	ldr	x1, [x0, #2560]
   556d4:	add	x0, x0, #0xa00
   556d8:	blr	x1
   556dc:	add	x9, x10, x0
   556e0:	ldr	q0, [x9, w11, sxtw #4]
   556e4:	str	q0, [x8]
   556e8:	str	wzr, [x8, #4]
   556ec:	ldp	x29, x30, [sp], #16
   556f0:	ret
   556f4:	mov	x0, x8
   556f8:	mov	x1, x9
   556fc:	ldp	x29, x30, [sp], #16
   55700:	b	cae0 <__gmpz_init2@plt>

0000000000055704 <mpfr_mpz_clear@@Base>:
   55704:	stp	x29, x30, [sp, #-16]!
   55708:	mov	x29, sp
   5570c:	mov	x8, x0
   55710:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55714:	ldr	x1, [x0, #2576]
   55718:	add	x0, x0, #0xa10
   5571c:	blr	x1
   55720:	mrs	x9, tpidr_el0
   55724:	ldr	w10, [x9, x0]
   55728:	cmp	w10, #0x1f
   5572c:	b.hi	55778 <mpfr_mpz_clear@@Base+0x74>  // b.pmore
   55730:	ldr	w11, [x8]
   55734:	cmp	w11, #0x20
   55738:	b.gt	55778 <mpfr_mpz_clear@@Base+0x74>
   5573c:	add	w11, w10, #0x1
   55740:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55744:	ldr	x1, [x0, #2576]
   55748:	add	x0, x0, #0xa10
   5574c:	blr	x1
   55750:	str	w11, [x9, x0]
   55754:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55758:	ldr	x1, [x0, #2560]
   5575c:	add	x0, x0, #0xa00
   55760:	blr	x1
   55764:	ldr	q0, [x8]
   55768:	add	x8, x9, x0
   5576c:	str	q0, [x8, x10, lsl #4]
   55770:	ldp	x29, x30, [sp], #16
   55774:	ret
   55778:	mov	x0, x8
   5577c:	ldp	x29, x30, [sp], #16
   55780:	b	c690 <__gmpz_clear@plt>

0000000000055784 <mpfr_free_pool@@Base>:
   55784:	stp	x29, x30, [sp, #-48]!
   55788:	str	x21, [sp, #16]
   5578c:	stp	x20, x19, [sp, #32]
   55790:	mov	x29, sp
   55794:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   55798:	ldr	x1, [x0, #2576]
   5579c:	add	x0, x0, #0xa10
   557a0:	blr	x1
   557a4:	mrs	x20, tpidr_el0
   557a8:	ldr	w8, [x20, x0]
   557ac:	cmp	w8, #0x1
   557b0:	b.lt	557f8 <mpfr_free_pool@@Base+0x74>  // b.tstop
   557b4:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   557b8:	ldr	x1, [x0, #2560]
   557bc:	add	x0, x0, #0xa00
   557c0:	blr	x1
   557c4:	mov	x21, xzr
   557c8:	add	x19, x20, x0
   557cc:	mov	x0, x19
   557d0:	bl	c690 <__gmpz_clear@plt>
   557d4:	add	x21, x21, #0x1
   557d8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   557dc:	ldr	x1, [x0, #2576]
   557e0:	add	x0, x0, #0xa10
   557e4:	blr	x1
   557e8:	ldrsw	x8, [x20, x0]
   557ec:	add	x19, x19, #0x10
   557f0:	cmp	x21, x8
   557f4:	b.lt	557cc <mpfr_free_pool@@Base+0x48>  // b.tstop
   557f8:	adrp	x0, 71000 <mpfr_agm@@Base+0x625e8>
   557fc:	ldr	x1, [x0, #2576]
   55800:	add	x0, x0, #0xa10
   55804:	blr	x1
   55808:	str	wzr, [x20, x0]
   5580c:	ldp	x20, x19, [sp, #32]
   55810:	ldr	x21, [sp, #16]
   55814:	ldp	x29, x30, [sp], #48
   55818:	ret
   5581c:	nop
   55820:	stp	x29, x30, [sp, #-48]!
   55824:	mov	x29, sp
   55828:	str	q0, [sp, #16]
   5582c:	str	q1, [sp, #32]
   55830:	ldp	x6, x1, [sp, #16]
   55834:	ldp	x0, x3, [sp, #32]
   55838:	mrs	x15, fpcr
   5583c:	lsr	x7, x1, #63
   55840:	mov	x10, x0
   55844:	ubfiz	x4, x3, #3, #48
   55848:	lsr	x5, x3, #63
   5584c:	mov	x12, x7
   55850:	ubfiz	x2, x1, #3, #48
   55854:	orr	x4, x4, x0, lsr #61
   55858:	ubfx	x8, x1, #48, #15
   5585c:	ubfx	x0, x3, #48, #15
   55860:	and	w7, w7, #0xff
   55864:	mov	x16, x12
   55868:	cmp	x12, x5
   5586c:	and	w11, w5, #0xff
   55870:	orr	x2, x2, x6, lsr #61
   55874:	mov	x1, x8
   55878:	lsl	x9, x6, #3
   5587c:	mov	x3, x0
   55880:	lsl	x13, x10, #3
   55884:	b.eq	55a30 <mpfr_free_pool@@Base+0x2ac>  // b.none
   55888:	sub	w0, w8, w0
   5588c:	cmp	w0, #0x0
   55890:	b.le	559dc <mpfr_free_pool@@Base+0x258>
   55894:	cbz	x3, 55a90 <mpfr_free_pool@@Base+0x30c>
   55898:	orr	x4, x4, #0x8000000000000
   5589c:	mov	x3, #0x7fff                	// #32767
   558a0:	cmp	x1, x3
   558a4:	b.eq	55c94 <mpfr_free_pool@@Base+0x510>  // b.none
   558a8:	cmp	w0, #0x74
   558ac:	b.gt	55d18 <mpfr_free_pool@@Base+0x594>
   558b0:	cmp	w0, #0x3f
   558b4:	b.gt	55e78 <mpfr_free_pool@@Base+0x6f4>
   558b8:	mov	w3, #0x40                  	// #64
   558bc:	sub	w3, w3, w0
   558c0:	lsr	x6, x13, x0
   558c4:	lsl	x13, x13, x3
   558c8:	cmp	x13, #0x0
   558cc:	cset	x5, ne  // ne = any
   558d0:	lsl	x3, x4, x3
   558d4:	orr	x3, x3, x6
   558d8:	lsr	x0, x4, x0
   558dc:	orr	x3, x3, x5
   558e0:	sub	x2, x2, x0
   558e4:	subs	x9, x9, x3
   558e8:	sbc	x2, x2, xzr
   558ec:	and	x3, x2, #0x7ffffffffffff
   558f0:	tbz	x2, #51, 55ad0 <mpfr_free_pool@@Base+0x34c>
   558f4:	cbz	x3, 55cfc <mpfr_free_pool@@Base+0x578>
   558f8:	clz	x0, x3
   558fc:	sub	w0, w0, #0xc
   55900:	neg	w2, w0
   55904:	lsl	x4, x3, x0
   55908:	lsl	x3, x9, x0
   5590c:	lsr	x9, x9, x2
   55910:	orr	x2, x9, x4
   55914:	cmp	x1, w0, sxtw
   55918:	sxtw	x4, w0
   5591c:	b.gt	55cdc <mpfr_free_pool@@Base+0x558>
   55920:	sub	w1, w0, w1
   55924:	add	w0, w1, #0x1
   55928:	cmp	w0, #0x3f
   5592c:	b.gt	55e40 <mpfr_free_pool@@Base+0x6bc>
   55930:	mov	w1, #0x40                  	// #64
   55934:	sub	w1, w1, w0
   55938:	lsr	x4, x3, x0
   5593c:	lsl	x3, x3, x1
   55940:	cmp	x3, #0x0
   55944:	lsl	x9, x2, x1
   55948:	cset	x1, ne  // ne = any
   5594c:	orr	x9, x9, x4
   55950:	lsr	x2, x2, x0
   55954:	orr	x9, x9, x1
   55958:	orr	x8, x9, x2
   5595c:	cbz	x8, 55ae4 <mpfr_free_pool@@Base+0x360>
   55960:	and	x0, x9, #0x7
   55964:	mov	x1, #0x0                   	// #0
   55968:	mov	w5, #0x1                   	// #1
   5596c:	cbz	x0, 55d28 <mpfr_free_pool@@Base+0x5a4>
   55970:	and	x3, x15, #0xc00000
   55974:	cmp	x3, #0x400, lsl #12
   55978:	b.eq	55c6c <mpfr_free_pool@@Base+0x4e8>  // b.none
   5597c:	cmp	x3, #0x800, lsl #12
   55980:	b.eq	55c4c <mpfr_free_pool@@Base+0x4c8>  // b.none
   55984:	cbz	x3, 55c78 <mpfr_free_pool@@Base+0x4f4>
   55988:	and	x3, x2, #0x8000000000000
   5598c:	mov	w0, #0x10                  	// #16
   55990:	cbz	w5, 55998 <mpfr_free_pool@@Base+0x214>
   55994:	orr	w0, w0, #0x8
   55998:	cbz	x3, 55cb0 <mpfr_free_pool@@Base+0x52c>
   5599c:	add	x1, x1, #0x1
   559a0:	mov	x3, #0x7fff                	// #32767
   559a4:	cmp	x1, x3
   559a8:	b.eq	55b94 <mpfr_free_pool@@Base+0x410>  // b.none
   559ac:	and	w1, w1, #0x7fff
   559b0:	extr	x8, x2, x9, #3
   559b4:	ubfx	x2, x2, #3, #48
   559b8:	mov	x5, #0x0                   	// #0
   559bc:	orr	w1, w1, w7, lsl #15
   559c0:	bfxil	x5, x2, #0, #48
   559c4:	fmov	d0, x8
   559c8:	bfi	x5, x1, #48, #16
   559cc:	fmov	v0.d[1], x5
   559d0:	cbnz	w0, 55bf0 <mpfr_free_pool@@Base+0x46c>
   559d4:	ldp	x29, x30, [sp], #48
   559d8:	ret
   559dc:	mov	x14, x5
   559e0:	b.eq	55afc <mpfr_free_pool@@Base+0x378>  // b.none
   559e4:	cbnz	x8, 55d80 <mpfr_free_pool@@Base+0x5fc>
   559e8:	orr	x1, x2, x9
   559ec:	cbz	x1, 55aac <mpfr_free_pool@@Base+0x328>
   559f0:	cmn	w0, #0x1
   559f4:	b.eq	5619c <mpfr_free_pool@@Base+0xa18>  // b.none
   559f8:	mov	x1, #0x7fff                	// #32767
   559fc:	mvn	w0, w0
   55a00:	cmp	x3, x1
   55a04:	b.ne	55d94 <mpfr_free_pool@@Base+0x610>  // b.any
   55a08:	orr	x0, x4, x13
   55a0c:	cbnz	x0, 560f4 <mpfr_free_pool@@Base+0x970>
   55a10:	mov	x16, x14
   55a14:	nop
   55a18:	mov	x4, #0x0                   	// #0
   55a1c:	fmov	d0, x4
   55a20:	lsl	x16, x16, #63
   55a24:	orr	x5, x16, #0x7fff000000000000
   55a28:	fmov	v0.d[1], x5
   55a2c:	b	559d4 <mpfr_free_pool@@Base+0x250>
   55a30:	sub	w5, w8, w0
   55a34:	cmp	w5, #0x0
   55a38:	b.le	55c04 <mpfr_free_pool@@Base+0x480>
   55a3c:	cbz	x0, 55b44 <mpfr_free_pool@@Base+0x3c0>
   55a40:	orr	x4, x4, #0x8000000000000
   55a44:	mov	x0, #0x7fff                	// #32767
   55a48:	cmp	x1, x0
   55a4c:	b.eq	55c94 <mpfr_free_pool@@Base+0x510>  // b.none
   55a50:	cmp	w5, #0x74
   55a54:	b.gt	55e28 <mpfr_free_pool@@Base+0x6a4>
   55a58:	cmp	w5, #0x3f
   55a5c:	b.gt	55f28 <mpfr_free_pool@@Base+0x7a4>
   55a60:	mov	w0, #0x40                  	// #64
   55a64:	sub	w0, w0, w5
   55a68:	lsr	x6, x13, x5
   55a6c:	lsl	x13, x13, x0
   55a70:	cmp	x13, #0x0
   55a74:	lsl	x0, x4, x0
   55a78:	cset	x3, ne  // ne = any
   55a7c:	orr	x0, x0, x6
   55a80:	lsr	x4, x4, x5
   55a84:	orr	x0, x0, x3
   55a88:	add	x2, x2, x4
   55a8c:	b	55e34 <mpfr_free_pool@@Base+0x6b0>
   55a90:	orr	x3, x4, x13
   55a94:	cbz	x3, 55e04 <mpfr_free_pool@@Base+0x680>
   55a98:	subs	w0, w0, #0x1
   55a9c:	b.ne	5589c <mpfr_free_pool@@Base+0x118>  // b.any
   55aa0:	subs	x9, x9, x13
   55aa4:	sbc	x2, x2, x4
   55aa8:	b	558ec <mpfr_free_pool@@Base+0x168>
   55aac:	mov	x0, #0x7fff                	// #32767
   55ab0:	cmp	x3, x0
   55ab4:	b.eq	561e8 <mpfr_free_pool@@Base+0xa64>  // b.none
   55ab8:	mov	w7, w11
   55abc:	mov	x2, x4
   55ac0:	mov	x9, x13
   55ac4:	mov	x1, x3
   55ac8:	mov	x12, x5
   55acc:	nop
   55ad0:	orr	x8, x9, x2
   55ad4:	and	x0, x9, #0x7
   55ad8:	mov	w5, #0x0                   	// #0
   55adc:	cbnz	x1, 5596c <mpfr_free_pool@@Base+0x1e8>
   55ae0:	cbnz	x8, 55960 <mpfr_free_pool@@Base+0x1dc>
   55ae4:	mov	x2, #0x0                   	// #0
   55ae8:	mov	x1, #0x0                   	// #0
   55aec:	mov	w0, #0x0                   	// #0
   55af0:	and	x2, x2, #0xffffffffffff
   55af4:	and	w1, w1, #0x7fff
   55af8:	b	559b8 <mpfr_free_pool@@Base+0x234>
   55afc:	add	x5, x8, #0x1
   55b00:	tst	x5, #0x7ffe
   55b04:	b.ne	55dd4 <mpfr_free_pool@@Base+0x650>  // b.any
   55b08:	orr	x5, x2, x9
   55b0c:	orr	x8, x4, x13
   55b10:	cbnz	x1, 55f94 <mpfr_free_pool@@Base+0x810>
   55b14:	cbz	x5, 5603c <mpfr_free_pool@@Base+0x8b8>
   55b18:	cbz	x8, 56050 <mpfr_free_pool@@Base+0x8cc>
   55b1c:	subs	x5, x9, x13
   55b20:	cmp	x9, x13
   55b24:	sbc	x3, x2, x4
   55b28:	tbz	x3, #51, 5621c <mpfr_free_pool@@Base+0xa98>
   55b2c:	subs	x9, x13, x9
   55b30:	mov	w7, w11
   55b34:	sbc	x2, x4, x2
   55b38:	mov	x12, x14
   55b3c:	orr	x8, x9, x2
   55b40:	b	5595c <mpfr_free_pool@@Base+0x1d8>
   55b44:	orr	x0, x4, x13
   55b48:	cbz	x0, 5601c <mpfr_free_pool@@Base+0x898>
   55b4c:	subs	w5, w5, #0x1
   55b50:	b.ne	55a44 <mpfr_free_pool@@Base+0x2c0>  // b.any
   55b54:	adds	x9, x9, x13
   55b58:	adc	x2, x4, x2
   55b5c:	nop
   55b60:	tbz	x2, #51, 55ad0 <mpfr_free_pool@@Base+0x34c>
   55b64:	add	x1, x1, #0x1
   55b68:	mov	x0, #0x7fff                	// #32767
   55b6c:	cmp	x1, x0
   55b70:	b.eq	5605c <mpfr_free_pool@@Base+0x8d8>  // b.none
   55b74:	and	x0, x9, #0x1
   55b78:	and	x3, x2, #0xfff7ffffffffffff
   55b7c:	orr	x9, x0, x9, lsr #1
   55b80:	mov	w5, #0x0                   	// #0
   55b84:	orr	x9, x9, x2, lsl #63
   55b88:	lsr	x2, x3, #1
   55b8c:	and	x0, x9, #0x7
   55b90:	b	5596c <mpfr_free_pool@@Base+0x1e8>
   55b94:	and	x3, x15, #0xc00000
   55b98:	cbz	x3, 55bd0 <mpfr_free_pool@@Base+0x44c>
   55b9c:	cmp	x3, #0x400, lsl #12
   55ba0:	b.eq	55bc8 <mpfr_free_pool@@Base+0x444>  // b.none
   55ba4:	cmp	x3, #0x800, lsl #12
   55ba8:	csel	w12, w12, wzr, eq  // eq = none
   55bac:	cbnz	w12, 55bd0 <mpfr_free_pool@@Base+0x44c>
   55bb0:	mov	w1, #0x14                  	// #20
   55bb4:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   55bb8:	orr	w0, w0, w1
   55bbc:	mov	x8, #0xffffffffffffffff    	// #-1
   55bc0:	mov	x1, #0x7ffe                	// #32766
   55bc4:	b	55af0 <mpfr_free_pool@@Base+0x36c>
   55bc8:	cbnz	x12, 55bb0 <mpfr_free_pool@@Base+0x42c>
   55bcc:	nop
   55bd0:	mov	w1, #0x14                  	// #20
   55bd4:	and	x16, x7, #0xff
   55bd8:	orr	w0, w0, w1
   55bdc:	mov	x4, #0x0                   	// #0
   55be0:	fmov	d0, x4
   55be4:	lsl	x16, x16, #63
   55be8:	orr	x5, x16, #0x7fff000000000000
   55bec:	fmov	v0.d[1], x5
   55bf0:	str	q0, [sp, #16]
   55bf4:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   55bf8:	ldr	q0, [sp, #16]
   55bfc:	ldp	x29, x30, [sp], #48
   55c00:	ret
   55c04:	b.eq	55d44 <mpfr_free_pool@@Base+0x5c0>  // b.none
   55c08:	cbnz	x8, 55ec8 <mpfr_free_pool@@Base+0x744>
   55c0c:	orr	x0, x2, x9
   55c10:	cbz	x0, 56134 <mpfr_free_pool@@Base+0x9b0>
   55c14:	cmn	w5, #0x1
   55c18:	b.eq	56294 <mpfr_free_pool@@Base+0xb10>  // b.none
   55c1c:	mov	x0, #0x7fff                	// #32767
   55c20:	mvn	w5, w5
   55c24:	cmp	x3, x0
   55c28:	b.ne	55edc <mpfr_free_pool@@Base+0x758>  // b.any
   55c2c:	orr	x0, x4, x13
   55c30:	cbz	x0, 55a18 <mpfr_free_pool@@Base+0x294>
   55c34:	lsr	x5, x4, #50
   55c38:	mov	x9, x13
   55c3c:	eor	x5, x5, #0x1
   55c40:	mov	x2, x4
   55c44:	and	w5, w5, #0x1
   55c48:	b	55ca8 <mpfr_free_pool@@Base+0x524>
   55c4c:	mov	w0, #0x10                  	// #16
   55c50:	cbz	x12, 55c5c <mpfr_free_pool@@Base+0x4d8>
   55c54:	adds	x9, x9, #0x8
   55c58:	cinc	x2, x2, cs  // cs = hs, nlast
   55c5c:	and	x3, x2, #0x8000000000000
   55c60:	cbz	w5, 55998 <mpfr_free_pool@@Base+0x214>
   55c64:	orr	w0, w0, #0x8
   55c68:	b	55998 <mpfr_free_pool@@Base+0x214>
   55c6c:	mov	w0, #0x10                  	// #16
   55c70:	cbnz	x12, 55c5c <mpfr_free_pool@@Base+0x4d8>
   55c74:	b	55c54 <mpfr_free_pool@@Base+0x4d0>
   55c78:	and	x3, x9, #0xf
   55c7c:	mov	w0, #0x10                  	// #16
   55c80:	cmp	x3, #0x4
   55c84:	b.eq	55c5c <mpfr_free_pool@@Base+0x4d8>  // b.none
   55c88:	adds	x9, x9, #0x4
   55c8c:	cinc	x2, x2, cs  // cs = hs, nlast
   55c90:	b	55c5c <mpfr_free_pool@@Base+0x4d8>
   55c94:	orr	x0, x2, x9
   55c98:	cbz	x0, 55a18 <mpfr_free_pool@@Base+0x294>
   55c9c:	lsr	x5, x2, #50
   55ca0:	eor	x5, x5, #0x1
   55ca4:	and	w5, w5, #0x1
   55ca8:	mov	w0, w5
   55cac:	mov	x1, #0x7fff                	// #32767
   55cb0:	mov	x3, #0x7fff                	// #32767
   55cb4:	extr	x8, x2, x9, #3
   55cb8:	cmp	x1, x3
   55cbc:	lsr	x2, x2, #3
   55cc0:	b.ne	55af0 <mpfr_free_pool@@Base+0x36c>  // b.any
   55cc4:	orr	x1, x8, x2
   55cc8:	cbz	x1, 56334 <mpfr_free_pool@@Base+0xbb0>
   55ccc:	orr	x2, x2, #0x800000000000
   55cd0:	mov	w1, #0x7fff                	// #32767
   55cd4:	and	x2, x2, #0xffffffffffff
   55cd8:	b	559b8 <mpfr_free_pool@@Base+0x234>
   55cdc:	mov	x9, x3
   55ce0:	and	x2, x2, #0xfff7ffffffffffff
   55ce4:	sub	x1, x1, x4
   55ce8:	orr	x8, x9, x2
   55cec:	and	x0, x9, #0x7
   55cf0:	mov	w5, #0x0                   	// #0
   55cf4:	cbz	x1, 55ae0 <mpfr_free_pool@@Base+0x35c>
   55cf8:	b	5596c <mpfr_free_pool@@Base+0x1e8>
   55cfc:	clz	x2, x9
   55d00:	add	w0, w2, #0x34
   55d04:	cmp	w0, #0x3f
   55d08:	b.le	55900 <mpfr_free_pool@@Base+0x17c>
   55d0c:	sub	w2, w2, #0xc
   55d10:	lsl	x2, x9, x2
   55d14:	b	55914 <mpfr_free_pool@@Base+0x190>
   55d18:	orr	x4, x4, x13
   55d1c:	cmp	x4, #0x0
   55d20:	cset	x3, ne  // ne = any
   55d24:	b	558e4 <mpfr_free_pool@@Base+0x160>
   55d28:	and	x3, x2, #0x8000000000000
   55d2c:	mov	w0, #0x0                   	// #0
   55d30:	cbz	w5, 55998 <mpfr_free_pool@@Base+0x214>
   55d34:	mov	w0, #0x0                   	// #0
   55d38:	tbz	w15, #11, 55998 <mpfr_free_pool@@Base+0x214>
   55d3c:	orr	w0, w0, #0x8
   55d40:	b	55998 <mpfr_free_pool@@Base+0x214>
   55d44:	add	x0, x8, #0x1
   55d48:	tst	x0, #0x7ffe
   55d4c:	b.ne	55f54 <mpfr_free_pool@@Base+0x7d0>  // b.any
   55d50:	orr	x0, x2, x9
   55d54:	cbnz	x8, 56110 <mpfr_free_pool@@Base+0x98c>
   55d58:	orr	x8, x4, x13
   55d5c:	cbz	x0, 56164 <mpfr_free_pool@@Base+0x9e0>
   55d60:	cbz	x8, 56050 <mpfr_free_pool@@Base+0x8cc>
   55d64:	adds	x9, x9, x13
   55d68:	adc	x2, x4, x2
   55d6c:	tbz	x2, #51, 55b3c <mpfr_free_pool@@Base+0x3b8>
   55d70:	and	x2, x2, #0xfff7ffffffffffff
   55d74:	and	x0, x9, #0x7
   55d78:	mov	x1, #0x1                   	// #1
   55d7c:	b	5596c <mpfr_free_pool@@Base+0x1e8>
   55d80:	mov	x1, #0x7fff                	// #32767
   55d84:	neg	w0, w0
   55d88:	orr	x2, x2, #0x8000000000000
   55d8c:	cmp	x3, x1
   55d90:	b.eq	55a08 <mpfr_free_pool@@Base+0x284>  // b.none
   55d94:	cmp	w0, #0x74
   55d98:	b.gt	55ea4 <mpfr_free_pool@@Base+0x720>
   55d9c:	cmp	w0, #0x3f
   55da0:	b.gt	560c0 <mpfr_free_pool@@Base+0x93c>
   55da4:	mov	w1, #0x40                  	// #64
   55da8:	sub	w1, w1, w0
   55dac:	lsr	x5, x9, x0
   55db0:	lsl	x9, x9, x1
   55db4:	cmp	x9, #0x0
   55db8:	lsl	x9, x2, x1
   55dbc:	cset	x1, ne  // ne = any
   55dc0:	orr	x9, x9, x5
   55dc4:	lsr	x0, x2, x0
   55dc8:	orr	x9, x9, x1
   55dcc:	sub	x4, x4, x0
   55dd0:	b	55eb0 <mpfr_free_pool@@Base+0x72c>
   55dd4:	subs	x5, x9, x13
   55dd8:	cmp	x9, x13
   55ddc:	sbc	x3, x2, x4
   55de0:	tbnz	x3, #51, 55f7c <mpfr_free_pool@@Base+0x7f8>
   55de4:	orr	x8, x5, x3
   55de8:	cbnz	x8, 560a8 <mpfr_free_pool@@Base+0x924>
   55dec:	and	x15, x15, #0xc00000
   55df0:	mov	x2, #0x0                   	// #0
   55df4:	cmp	x15, #0x800, lsl #12
   55df8:	mov	x1, #0x0                   	// #0
   55dfc:	cset	w7, eq  // eq = none
   55e00:	b	55af0 <mpfr_free_pool@@Base+0x36c>
   55e04:	mov	x0, #0x7fff                	// #32767
   55e08:	cmp	x8, x0
   55e0c:	b.ne	55ad0 <mpfr_free_pool@@Base+0x34c>  // b.any
   55e10:	orr	x0, x2, x9
   55e14:	cbnz	x0, 55c9c <mpfr_free_pool@@Base+0x518>
   55e18:	mov	x2, #0x0                   	// #0
   55e1c:	mov	x8, #0x0                   	// #0
   55e20:	mov	w0, #0x0                   	// #0
   55e24:	b	55cc4 <mpfr_free_pool@@Base+0x540>
   55e28:	orr	x4, x4, x13
   55e2c:	cmp	x4, #0x0
   55e30:	cset	x0, ne  // ne = any
   55e34:	adds	x9, x0, x9
   55e38:	cinc	x2, x2, cs  // cs = hs, nlast
   55e3c:	b	55b60 <mpfr_free_pool@@Base+0x3dc>
   55e40:	mov	w4, #0x80                  	// #128
   55e44:	sub	w4, w4, w0
   55e48:	cmp	w0, #0x40
   55e4c:	sub	w9, w1, #0x3f
   55e50:	lsl	x0, x2, x4
   55e54:	orr	x0, x3, x0
   55e58:	csel	x3, x0, x3, ne  // ne = any
   55e5c:	lsr	x9, x2, x9
   55e60:	cmp	x3, #0x0
   55e64:	mov	x2, #0x0                   	// #0
   55e68:	cset	x0, ne  // ne = any
   55e6c:	orr	x9, x0, x9
   55e70:	mov	x8, x9
   55e74:	b	5595c <mpfr_free_pool@@Base+0x1d8>
   55e78:	mov	w5, #0x80                  	// #128
   55e7c:	sub	w5, w5, w0
   55e80:	subs	w0, w0, #0x40
   55e84:	lsl	x5, x4, x5
   55e88:	orr	x5, x13, x5
   55e8c:	csel	x13, x5, x13, ne  // ne = any
   55e90:	lsr	x4, x4, x0
   55e94:	cmp	x13, #0x0
   55e98:	cset	x3, ne  // ne = any
   55e9c:	orr	x3, x3, x4
   55ea0:	b	558e4 <mpfr_free_pool@@Base+0x160>
   55ea4:	orr	x2, x2, x9
   55ea8:	cmp	x2, #0x0
   55eac:	cset	x9, ne  // ne = any
   55eb0:	subs	x9, x13, x9
   55eb4:	mov	w7, w11
   55eb8:	sbc	x2, x4, xzr
   55ebc:	mov	x1, x3
   55ec0:	mov	x12, x14
   55ec4:	b	558ec <mpfr_free_pool@@Base+0x168>
   55ec8:	mov	x0, #0x7fff                	// #32767
   55ecc:	neg	w5, w5
   55ed0:	orr	x2, x2, #0x8000000000000
   55ed4:	cmp	x3, x0
   55ed8:	b.eq	55c2c <mpfr_free_pool@@Base+0x4a8>  // b.none
   55edc:	cmp	w5, #0x74
   55ee0:	b.gt	560b0 <mpfr_free_pool@@Base+0x92c>
   55ee4:	cmp	w5, #0x3f
   55ee8:	b.gt	56170 <mpfr_free_pool@@Base+0x9ec>
   55eec:	mov	w1, #0x40                  	// #64
   55ef0:	sub	w1, w1, w5
   55ef4:	lsr	x6, x9, x5
   55ef8:	lsl	x9, x9, x1
   55efc:	cmp	x9, #0x0
   55f00:	cset	x0, ne  // ne = any
   55f04:	lsl	x9, x2, x1
   55f08:	orr	x9, x9, x6
   55f0c:	lsr	x5, x2, x5
   55f10:	orr	x9, x9, x0
   55f14:	add	x4, x4, x5
   55f18:	adds	x9, x9, x13
   55f1c:	mov	x1, x3
   55f20:	cinc	x2, x4, cs  // cs = hs, nlast
   55f24:	b	55b60 <mpfr_free_pool@@Base+0x3dc>
   55f28:	mov	w0, #0x80                  	// #128
   55f2c:	sub	w0, w0, w5
   55f30:	subs	w5, w5, #0x40
   55f34:	lsl	x0, x4, x0
   55f38:	orr	x0, x13, x0
   55f3c:	csel	x13, x0, x13, ne  // ne = any
   55f40:	lsr	x4, x4, x5
   55f44:	cmp	x13, #0x0
   55f48:	cset	x0, ne  // ne = any
   55f4c:	orr	x0, x0, x4
   55f50:	b	55e34 <mpfr_free_pool@@Base+0x6b0>
   55f54:	mov	x1, #0x7fff                	// #32767
   55f58:	cmp	x0, x1
   55f5c:	b.eq	561b8 <mpfr_free_pool@@Base+0xa34>  // b.none
   55f60:	adds	x9, x9, x13
   55f64:	mov	x1, x0
   55f68:	adc	x2, x4, x2
   55f6c:	ubfx	x0, x9, #1, #3
   55f70:	extr	x9, x2, x9, #1
   55f74:	lsr	x2, x2, #1
   55f78:	b	5596c <mpfr_free_pool@@Base+0x1e8>
   55f7c:	cmp	x13, x9
   55f80:	mov	w7, w11
   55f84:	sbc	x3, x4, x2
   55f88:	sub	x9, x13, x9
   55f8c:	mov	x12, x14
   55f90:	b	558f4 <mpfr_free_pool@@Base+0x170>
   55f94:	mov	x12, #0x7fff                	// #32767
   55f98:	cmp	x1, x12
   55f9c:	b.eq	55fc8 <mpfr_free_pool@@Base+0x844>  // b.none
   55fa0:	cmp	x3, x12
   55fa4:	b.eq	561f8 <mpfr_free_pool@@Base+0xa74>  // b.none
   55fa8:	cbnz	x5, 55fe0 <mpfr_free_pool@@Base+0x85c>
   55fac:	mov	w5, w0
   55fb0:	cbnz	x8, 562d8 <mpfr_free_pool@@Base+0xb54>
   55fb4:	mov	w7, #0x0                   	// #0
   55fb8:	mov	x2, #0xffffffffffff        	// #281474976710655
   55fbc:	mov	w0, #0x1                   	// #1
   55fc0:	mov	x8, #0xffffffffffffffff    	// #-1
   55fc4:	b	55ccc <mpfr_free_pool@@Base+0x548>
   55fc8:	cbz	x5, 562f4 <mpfr_free_pool@@Base+0xb70>
   55fcc:	lsr	x0, x2, #50
   55fd0:	cmp	x3, x1
   55fd4:	eor	x0, x0, #0x1
   55fd8:	and	w0, w0, #0x1
   55fdc:	b.eq	561f8 <mpfr_free_pool@@Base+0xa74>  // b.none
   55fe0:	cbz	x8, 56214 <mpfr_free_pool@@Base+0xa90>
   55fe4:	bfi	x6, x2, #61, #3
   55fe8:	lsr	x3, x2, #3
   55fec:	tbz	x2, #50, 56008 <mpfr_free_pool@@Base+0x884>
   55ff0:	lsr	x1, x4, #3
   55ff4:	tbnz	x4, #50, 56008 <mpfr_free_pool@@Base+0x884>
   55ff8:	mov	x6, x10
   55ffc:	mov	w7, w11
   56000:	bfi	x6, x4, #61, #3
   56004:	mov	x3, x1
   56008:	extr	x2, x3, x6, #61
   5600c:	bfi	x6, x2, #61, #3
   56010:	lsr	x2, x2, #3
   56014:	mov	x8, x6
   56018:	b	55cc4 <mpfr_free_pool@@Base+0x540>
   5601c:	mov	x0, #0x7fff                	// #32767
   56020:	cmp	x8, x0
   56024:	b.ne	55ad0 <mpfr_free_pool@@Base+0x34c>  // b.any
   56028:	orr	x0, x2, x9
   5602c:	cbz	x0, 55e18 <mpfr_free_pool@@Base+0x694>
   56030:	lsr	x5, x2, #50
   56034:	eor	w5, w5, #0x1
   56038:	b	55ca8 <mpfr_free_pool@@Base+0x524>
   5603c:	cbz	x8, 56150 <mpfr_free_pool@@Base+0x9cc>
   56040:	mov	w7, w11
   56044:	mov	x2, x4
   56048:	mov	x9, x13
   5604c:	mov	x12, x14
   56050:	mov	x1, #0x0                   	// #0
   56054:	mov	x3, #0x0                   	// #0
   56058:	b	55d34 <mpfr_free_pool@@Base+0x5b0>
   5605c:	ands	x3, x15, #0xc00000
   56060:	b.eq	560ec <mpfr_free_pool@@Base+0x968>  // b.none
   56064:	cmp	x3, #0x400, lsl #12
   56068:	eor	w0, w7, #0x1
   5606c:	cset	w1, eq  // eq = none
   56070:	tst	w1, w0
   56074:	b.ne	56310 <mpfr_free_pool@@Base+0xb8c>  // b.any
   56078:	cmp	x3, #0x800, lsl #12
   5607c:	b.eq	562bc <mpfr_free_pool@@Base+0xb38>  // b.none
   56080:	cmp	x3, #0x400, lsl #12
   56084:	mov	w0, #0x14                  	// #20
   56088:	b.ne	55b98 <mpfr_free_pool@@Base+0x414>  // b.any
   5608c:	mov	x2, #0xffffffffffffffff    	// #-1
   56090:	mov	x1, #0x7ffe                	// #32766
   56094:	mov	x9, x2
   56098:	mov	w5, #0x0                   	// #0
   5609c:	mov	w0, #0x14                  	// #20
   560a0:	cbnz	x12, 55c5c <mpfr_free_pool@@Base+0x4d8>
   560a4:	b	55c54 <mpfr_free_pool@@Base+0x4d0>
   560a8:	mov	x9, x5
   560ac:	b	558f4 <mpfr_free_pool@@Base+0x170>
   560b0:	orr	x2, x2, x9
   560b4:	cmp	x2, #0x0
   560b8:	cset	x9, ne  // ne = any
   560bc:	b	55f18 <mpfr_free_pool@@Base+0x794>
   560c0:	mov	w1, #0x80                  	// #128
   560c4:	sub	w1, w1, w0
   560c8:	subs	w0, w0, #0x40
   560cc:	lsl	x1, x2, x1
   560d0:	orr	x1, x9, x1
   560d4:	csel	x9, x1, x9, ne  // ne = any
   560d8:	lsr	x2, x2, x0
   560dc:	cmp	x9, #0x0
   560e0:	cset	x9, ne  // ne = any
   560e4:	orr	x9, x9, x2
   560e8:	b	55eb0 <mpfr_free_pool@@Base+0x72c>
   560ec:	mov	w0, #0x14                  	// #20
   560f0:	b	55bdc <mpfr_free_pool@@Base+0x458>
   560f4:	lsr	x5, x4, #50
   560f8:	mov	w7, w11
   560fc:	eor	x5, x5, #0x1
   56100:	mov	x9, x13
   56104:	and	w5, w5, #0x1
   56108:	mov	x2, x4
   5610c:	b	55ca8 <mpfr_free_pool@@Base+0x524>
   56110:	mov	x8, #0x7fff                	// #32767
   56114:	cmp	x1, x8
   56118:	b.eq	56238 <mpfr_free_pool@@Base+0xab4>  // b.none
   5611c:	cmp	x3, x8
   56120:	b.eq	562ac <mpfr_free_pool@@Base+0xb28>  // b.none
   56124:	cbnz	x0, 56250 <mpfr_free_pool@@Base+0xacc>
   56128:	mov	x2, x4
   5612c:	mov	x9, x13
   56130:	b	55ca8 <mpfr_free_pool@@Base+0x524>
   56134:	mov	x0, #0x7fff                	// #32767
   56138:	cmp	x3, x0
   5613c:	b.eq	562e8 <mpfr_free_pool@@Base+0xb64>  // b.none
   56140:	mov	x2, x4
   56144:	mov	x9, x13
   56148:	mov	x1, x3
   5614c:	b	55ad0 <mpfr_free_pool@@Base+0x34c>
   56150:	and	x15, x15, #0xc00000
   56154:	mov	x2, #0x0                   	// #0
   56158:	cmp	x15, #0x800, lsl #12
   5615c:	cset	w7, eq  // eq = none
   56160:	b	55af0 <mpfr_free_pool@@Base+0x36c>
   56164:	mov	x2, x4
   56168:	mov	x9, x13
   5616c:	b	5595c <mpfr_free_pool@@Base+0x1d8>
   56170:	mov	w0, #0x80                  	// #128
   56174:	sub	w0, w0, w5
   56178:	subs	w5, w5, #0x40
   5617c:	lsl	x0, x2, x0
   56180:	orr	x0, x9, x0
   56184:	csel	x9, x0, x9, ne  // ne = any
   56188:	lsr	x2, x2, x5
   5618c:	cmp	x9, #0x0
   56190:	cset	x9, ne  // ne = any
   56194:	orr	x9, x9, x2
   56198:	b	55f18 <mpfr_free_pool@@Base+0x794>
   5619c:	cmp	x13, x9
   561a0:	mov	w7, w11
   561a4:	sbc	x2, x4, x2
   561a8:	sub	x9, x13, x9
   561ac:	mov	x1, x3
   561b0:	mov	x12, x5
   561b4:	b	558ec <mpfr_free_pool@@Base+0x168>
   561b8:	ands	x3, x15, #0xc00000
   561bc:	b.eq	560ec <mpfr_free_pool@@Base+0x968>  // b.none
   561c0:	cmp	x3, #0x400, lsl #12
   561c4:	eor	w0, w7, #0x1
   561c8:	csel	w0, w0, wzr, eq  // eq = none
   561cc:	cbnz	w0, 56310 <mpfr_free_pool@@Base+0xb8c>
   561d0:	cmp	x3, #0x800, lsl #12
   561d4:	b.ne	56080 <mpfr_free_pool@@Base+0x8fc>  // b.any
   561d8:	cbz	x12, 562c0 <mpfr_free_pool@@Base+0xb3c>
   561dc:	mov	w0, #0x14                  	// #20
   561e0:	mov	x16, #0x1                   	// #1
   561e4:	b	55bdc <mpfr_free_pool@@Base+0x458>
   561e8:	orr	x0, x4, x13
   561ec:	cbnz	x0, 560f4 <mpfr_free_pool@@Base+0x970>
   561f0:	mov	w7, w11
   561f4:	b	55e18 <mpfr_free_pool@@Base+0x694>
   561f8:	cbz	x8, 56304 <mpfr_free_pool@@Base+0xb80>
   561fc:	tst	x4, #0x4000000000000
   56200:	csinc	w0, w0, wzr, ne  // ne = any
   56204:	cbnz	x5, 55fe4 <mpfr_free_pool@@Base+0x860>
   56208:	mov	w7, w11
   5620c:	mov	x2, x4
   56210:	mov	x9, x13
   56214:	mov	w5, w0
   56218:	b	55ca8 <mpfr_free_pool@@Base+0x524>
   5621c:	orr	x8, x5, x3
   56220:	cbz	x8, 56150 <mpfr_free_pool@@Base+0x9cc>
   56224:	and	x0, x5, #0x7
   56228:	mov	x9, x5
   5622c:	mov	x2, x3
   56230:	mov	w5, #0x1                   	// #1
   56234:	b	5596c <mpfr_free_pool@@Base+0x1e8>
   56238:	cbz	x0, 562a4 <mpfr_free_pool@@Base+0xb20>
   5623c:	lsr	x5, x2, #50
   56240:	cmp	x3, x1
   56244:	eor	x5, x5, #0x1
   56248:	and	w5, w5, #0x1
   5624c:	b.eq	5631c <mpfr_free_pool@@Base+0xb98>  // b.none
   56250:	orr	x13, x4, x13
   56254:	cbz	x13, 55ca8 <mpfr_free_pool@@Base+0x524>
   56258:	bfi	x6, x2, #61, #3
   5625c:	lsr	x0, x2, #3
   56260:	tbz	x2, #50, 5627c <mpfr_free_pool@@Base+0xaf8>
   56264:	lsr	x1, x4, #3
   56268:	tbnz	x4, #50, 5627c <mpfr_free_pool@@Base+0xaf8>
   5626c:	and	x6, x10, #0x1fffffffffffffff
   56270:	mov	w7, w11
   56274:	orr	x6, x6, x4, lsl #61
   56278:	mov	x0, x1
   5627c:	extr	x2, x0, x6, #61
   56280:	mov	w0, w5
   56284:	bfi	x6, x2, #61, #3
   56288:	lsr	x2, x2, #3
   5628c:	mov	x8, x6
   56290:	b	55cc4 <mpfr_free_pool@@Base+0x540>
   56294:	adds	x9, x9, x13
   56298:	mov	x1, x3
   5629c:	adc	x2, x4, x2
   562a0:	b	55b60 <mpfr_free_pool@@Base+0x3dc>
   562a4:	cmp	x3, x1
   562a8:	b.ne	56128 <mpfr_free_pool@@Base+0x9a4>  // b.any
   562ac:	orr	x1, x4, x13
   562b0:	cbnz	x1, 56324 <mpfr_free_pool@@Base+0xba0>
   562b4:	cbz	x0, 55e18 <mpfr_free_pool@@Base+0x694>
   562b8:	b	55ca8 <mpfr_free_pool@@Base+0x524>
   562bc:	cbnz	x16, 561dc <mpfr_free_pool@@Base+0xa58>
   562c0:	mov	x2, #0xffffffffffffffff    	// #-1
   562c4:	mov	w7, #0x0                   	// #0
   562c8:	mov	x9, x2
   562cc:	mov	x1, #0x7ffe                	// #32766
   562d0:	mov	w0, #0x14                  	// #20
   562d4:	b	5599c <mpfr_free_pool@@Base+0x218>
   562d8:	mov	w7, w11
   562dc:	mov	x2, x4
   562e0:	mov	x9, x13
   562e4:	b	55ca8 <mpfr_free_pool@@Base+0x524>
   562e8:	orr	x0, x4, x13
   562ec:	cbz	x0, 55e18 <mpfr_free_pool@@Base+0x694>
   562f0:	b	55c34 <mpfr_free_pool@@Base+0x4b0>
   562f4:	cmp	x3, x1
   562f8:	b.eq	561f8 <mpfr_free_pool@@Base+0xa74>  // b.none
   562fc:	mov	w5, #0x0                   	// #0
   56300:	b	55fb0 <mpfr_free_pool@@Base+0x82c>
   56304:	cbnz	x5, 56214 <mpfr_free_pool@@Base+0xa90>
   56308:	mov	w5, w0
   5630c:	b	55fb0 <mpfr_free_pool@@Base+0x82c>
   56310:	mov	w0, #0x14                  	// #20
   56314:	mov	x16, #0x0                   	// #0
   56318:	b	55bdc <mpfr_free_pool@@Base+0x458>
   5631c:	orr	x1, x4, x13
   56320:	cbz	x1, 55ca8 <mpfr_free_pool@@Base+0x524>
   56324:	tst	x4, #0x4000000000000
   56328:	csinc	w5, w5, wzr, ne  // ne = any
   5632c:	cbnz	x0, 56258 <mpfr_free_pool@@Base+0xad4>
   56330:	b	56128 <mpfr_free_pool@@Base+0x9a4>
   56334:	mov	x8, #0x0                   	// #0
   56338:	mov	w1, #0x7fff                	// #32767
   5633c:	mov	x2, #0x0                   	// #0
   56340:	b	559b8 <mpfr_free_pool@@Base+0x234>
   56344:	nop
   56348:	stp	x29, x30, [sp, #-48]!
   5634c:	mov	x29, sp
   56350:	str	q0, [sp, #16]
   56354:	str	q1, [sp, #32]
   56358:	ldp	x6, x1, [sp, #16]
   5635c:	ldp	x7, x0, [sp, #32]
   56360:	mrs	x2, fpcr
   56364:	ubfx	x4, x1, #48, #15
   56368:	lsr	x2, x1, #63
   5636c:	lsr	x3, x0, #63
   56370:	ubfx	x9, x0, #0, #48
   56374:	mov	x5, #0x7fff                	// #32767
   56378:	mov	x10, x6
   5637c:	cmp	x4, x5
   56380:	and	w2, w2, #0xff
   56384:	ubfx	x1, x1, #0, #48
   56388:	and	w3, w3, #0xff
   5638c:	ubfx	x0, x0, #48, #15
   56390:	b.eq	563c4 <mpfr_free_pool@@Base+0xc40>  // b.none
   56394:	cmp	x0, x5
   56398:	b.eq	563b0 <mpfr_free_pool@@Base+0xc2c>  // b.none
   5639c:	cmp	x4, x0
   563a0:	mov	w0, #0x1                   	// #1
   563a4:	b.eq	563dc <mpfr_free_pool@@Base+0xc58>  // b.none
   563a8:	ldp	x29, x30, [sp], #48
   563ac:	ret
   563b0:	orr	x8, x9, x7
   563b4:	cbnz	x8, 56440 <mpfr_free_pool@@Base+0xcbc>
   563b8:	mov	w0, #0x1                   	// #1
   563bc:	ldp	x29, x30, [sp], #48
   563c0:	ret
   563c4:	orr	x5, x1, x6
   563c8:	cbnz	x5, 56410 <mpfr_free_pool@@Base+0xc8c>
   563cc:	cmp	x0, x4
   563d0:	b.ne	563b8 <mpfr_free_pool@@Base+0xc34>  // b.any
   563d4:	orr	x8, x9, x7
   563d8:	cbnz	x8, 56440 <mpfr_free_pool@@Base+0xcbc>
   563dc:	cmp	x1, x9
   563e0:	mov	w0, #0x1                   	// #1
   563e4:	ccmp	x6, x7, #0x0, eq  // eq = none
   563e8:	b.ne	563a8 <mpfr_free_pool@@Base+0xc24>  // b.any
   563ec:	cmp	w2, w3
   563f0:	mov	w0, #0x0                   	// #0
   563f4:	b.eq	563a8 <mpfr_free_pool@@Base+0xc24>  // b.none
   563f8:	mov	w0, #0x1                   	// #1
   563fc:	cbnz	x4, 563a8 <mpfr_free_pool@@Base+0xc24>
   56400:	orr	x1, x1, x10
   56404:	cmp	x1, #0x0
   56408:	cset	w0, ne  // ne = any
   5640c:	b	563a8 <mpfr_free_pool@@Base+0xc24>
   56410:	tst	x1, #0x800000000000
   56414:	b.ne	5642c <mpfr_free_pool@@Base+0xca8>  // b.any
   56418:	mov	w0, #0x1                   	// #1
   5641c:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   56420:	mov	w0, #0x1                   	// #1
   56424:	ldp	x29, x30, [sp], #48
   56428:	ret
   5642c:	cmp	x0, x4
   56430:	mov	w0, #0x1                   	// #1
   56434:	b.ne	563a8 <mpfr_free_pool@@Base+0xc24>  // b.any
   56438:	orr	x8, x9, x7
   5643c:	cbz	x8, 563a8 <mpfr_free_pool@@Base+0xc24>
   56440:	tst	x9, #0x800000000000
   56444:	b.eq	56418 <mpfr_free_pool@@Base+0xc94>  // b.none
   56448:	b	563b8 <mpfr_free_pool@@Base+0xc34>
   5644c:	nop
   56450:	stp	x29, x30, [sp, #-48]!
   56454:	mov	x29, sp
   56458:	str	q0, [sp, #16]
   5645c:	str	q1, [sp, #32]
   56460:	ldp	x8, x1, [sp, #16]
   56464:	ldp	x9, x0, [sp, #32]
   56468:	mrs	x2, fpcr
   5646c:	ubfx	x4, x1, #48, #15
   56470:	ubfx	x10, x1, #0, #48
   56474:	lsr	x2, x1, #63
   56478:	mov	x7, #0x7fff                	// #32767
   5647c:	mov	x5, x8
   56480:	cmp	x4, x7
   56484:	ubfx	x11, x0, #0, #48
   56488:	ubfx	x6, x0, #48, #15
   5648c:	lsr	x1, x0, #63
   56490:	mov	x3, x9
   56494:	b.eq	564d0 <mpfr_free_pool@@Base+0xd4c>  // b.none
   56498:	cmp	x6, x7
   5649c:	b.eq	564e0 <mpfr_free_pool@@Base+0xd5c>  // b.none
   564a0:	cbnz	x4, 56508 <mpfr_free_pool@@Base+0xd84>
   564a4:	orr	x5, x10, x8
   564a8:	cmp	x5, #0x0
   564ac:	cset	w0, eq  // eq = none
   564b0:	cbnz	x6, 564bc <mpfr_free_pool@@Base+0xd38>
   564b4:	orr	x3, x11, x9
   564b8:	cbz	x3, 56528 <mpfr_free_pool@@Base+0xda4>
   564bc:	cbz	w0, 564ec <mpfr_free_pool@@Base+0xd68>
   564c0:	cmp	x1, #0x0
   564c4:	csinv	w0, w0, wzr, ne  // ne = any
   564c8:	ldp	x29, x30, [sp], #48
   564cc:	ret
   564d0:	orr	x0, x10, x8
   564d4:	cbnz	x0, 56534 <mpfr_free_pool@@Base+0xdb0>
   564d8:	cmp	x6, x4
   564dc:	b.ne	56508 <mpfr_free_pool@@Base+0xd84>  // b.any
   564e0:	orr	x3, x11, x3
   564e4:	cbnz	x3, 56534 <mpfr_free_pool@@Base+0xdb0>
   564e8:	cbz	x4, 56518 <mpfr_free_pool@@Base+0xd94>
   564ec:	cmp	x2, x1
   564f0:	b.eq	56548 <mpfr_free_pool@@Base+0xdc4>  // b.none
   564f4:	cmp	x2, #0x0
   564f8:	mov	w0, #0xffffffff            	// #-1
   564fc:	cneg	w0, w0, eq  // eq = none
   56500:	ldp	x29, x30, [sp], #48
   56504:	ret
   56508:	cbnz	x6, 564ec <mpfr_free_pool@@Base+0xd68>
   5650c:	orr	x3, x11, x3
   56510:	cbnz	x3, 564ec <mpfr_free_pool@@Base+0xd68>
   56514:	b	564f4 <mpfr_free_pool@@Base+0xd70>
   56518:	orr	x5, x10, x5
   5651c:	cmp	x5, #0x0
   56520:	cset	w0, eq  // eq = none
   56524:	b	564bc <mpfr_free_pool@@Base+0xd38>
   56528:	mov	w0, #0x0                   	// #0
   5652c:	cbz	x5, 564c8 <mpfr_free_pool@@Base+0xd44>
   56530:	b	564f4 <mpfr_free_pool@@Base+0xd70>
   56534:	mov	w0, #0x1                   	// #1
   56538:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   5653c:	mov	w0, #0xfffffffe            	// #-2
   56540:	ldp	x29, x30, [sp], #48
   56544:	ret
   56548:	cmp	x4, x6
   5654c:	b.gt	564f4 <mpfr_free_pool@@Base+0xd70>
   56550:	b.lt	56588 <mpfr_free_pool@@Base+0xe04>  // b.tstop
   56554:	cmp	x10, x11
   56558:	b.hi	564f4 <mpfr_free_pool@@Base+0xd70>  // b.pmore
   5655c:	cset	w0, eq  // eq = none
   56560:	cmp	w0, #0x0
   56564:	ccmp	x8, x9, #0x0, ne  // ne = any
   56568:	b.hi	564f4 <mpfr_free_pool@@Base+0xd70>  // b.pmore
   5656c:	cmp	x10, x11
   56570:	b.cc	56588 <mpfr_free_pool@@Base+0xe04>  // b.lo, b.ul, b.last
   56574:	cmp	w0, #0x0
   56578:	mov	w0, #0x0                   	// #0
   5657c:	ccmp	x8, x9, #0x2, ne  // ne = any
   56580:	b.cs	564c8 <mpfr_free_pool@@Base+0xd44>  // b.hs, b.nlast
   56584:	nop
   56588:	cmp	x2, #0x0
   5658c:	mov	w0, #0x1                   	// #1
   56590:	cneg	w0, w0, eq  // eq = none
   56594:	b	564c8 <mpfr_free_pool@@Base+0xd44>
   56598:	stp	x29, x30, [sp, #-48]!
   5659c:	mov	x29, sp
   565a0:	str	q0, [sp, #16]
   565a4:	str	q1, [sp, #32]
   565a8:	ldp	x8, x1, [sp, #16]
   565ac:	ldp	x9, x0, [sp, #32]
   565b0:	mrs	x2, fpcr
   565b4:	ubfx	x4, x1, #48, #15
   565b8:	ubfx	x10, x1, #0, #48
   565bc:	lsr	x2, x1, #63
   565c0:	mov	x5, #0x7fff                	// #32767
   565c4:	mov	x6, x8
   565c8:	cmp	x4, x5
   565cc:	ubfx	x11, x0, #0, #48
   565d0:	ubfx	x7, x0, #48, #15
   565d4:	lsr	x1, x0, #63
   565d8:	mov	x3, x9
   565dc:	b.eq	56614 <mpfr_free_pool@@Base+0xe90>  // b.none
   565e0:	cmp	x7, x5
   565e4:	b.eq	56624 <mpfr_free_pool@@Base+0xea0>  // b.none
   565e8:	cbnz	x4, 56650 <mpfr_free_pool@@Base+0xecc>
   565ec:	orr	x6, x10, x8
   565f0:	cmp	x6, #0x0
   565f4:	cset	w0, eq  // eq = none
   565f8:	cbnz	x7, 5663c <mpfr_free_pool@@Base+0xeb8>
   565fc:	orr	x3, x11, x9
   56600:	cbnz	x3, 5663c <mpfr_free_pool@@Base+0xeb8>
   56604:	mov	w0, #0x0                   	// #0
   56608:	cbnz	x6, 56664 <mpfr_free_pool@@Base+0xee0>
   5660c:	ldp	x29, x30, [sp], #48
   56610:	ret
   56614:	orr	x0, x10, x8
   56618:	cbnz	x0, 56678 <mpfr_free_pool@@Base+0xef4>
   5661c:	cmp	x7, x4
   56620:	b.ne	56650 <mpfr_free_pool@@Base+0xecc>  // b.any
   56624:	orr	x3, x11, x3
   56628:	cbnz	x3, 56678 <mpfr_free_pool@@Base+0xef4>
   5662c:	cbnz	x4, 5665c <mpfr_free_pool@@Base+0xed8>
   56630:	orr	x6, x10, x6
   56634:	cmp	x6, #0x0
   56638:	cset	w0, eq  // eq = none
   5663c:	cbz	w0, 5665c <mpfr_free_pool@@Base+0xed8>
   56640:	cmp	x1, #0x0
   56644:	csinv	w0, w0, wzr, ne  // ne = any
   56648:	ldp	x29, x30, [sp], #48
   5664c:	ret
   56650:	cbnz	x7, 5665c <mpfr_free_pool@@Base+0xed8>
   56654:	orr	x3, x11, x3
   56658:	cbz	x3, 56664 <mpfr_free_pool@@Base+0xee0>
   5665c:	cmp	x2, x1
   56660:	b.eq	5668c <mpfr_free_pool@@Base+0xf08>  // b.none
   56664:	cmp	x2, #0x0
   56668:	mov	w0, #0xffffffff            	// #-1
   5666c:	cneg	w0, w0, eq  // eq = none
   56670:	ldp	x29, x30, [sp], #48
   56674:	ret
   56678:	mov	w0, #0x1                   	// #1
   5667c:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   56680:	mov	w0, #0x2                   	// #2
   56684:	ldp	x29, x30, [sp], #48
   56688:	ret
   5668c:	cmp	x4, x7
   56690:	b.gt	56664 <mpfr_free_pool@@Base+0xee0>
   56694:	b.lt	566c8 <mpfr_free_pool@@Base+0xf44>  // b.tstop
   56698:	cmp	x10, x11
   5669c:	b.hi	56664 <mpfr_free_pool@@Base+0xee0>  // b.pmore
   566a0:	cset	w0, eq  // eq = none
   566a4:	cmp	w0, #0x0
   566a8:	ccmp	x8, x9, #0x0, ne  // ne = any
   566ac:	b.hi	56664 <mpfr_free_pool@@Base+0xee0>  // b.pmore
   566b0:	cmp	x10, x11
   566b4:	b.cc	566c8 <mpfr_free_pool@@Base+0xf44>  // b.lo, b.ul, b.last
   566b8:	cmp	w0, #0x0
   566bc:	mov	w0, #0x0                   	// #0
   566c0:	ccmp	x8, x9, #0x2, ne  // ne = any
   566c4:	b.cs	5660c <mpfr_free_pool@@Base+0xe88>  // b.hs, b.nlast
   566c8:	cmp	x2, #0x0
   566cc:	mov	w0, #0x1                   	// #1
   566d0:	cneg	w0, w0, eq  // eq = none
   566d4:	b	5660c <mpfr_free_pool@@Base+0xe88>
   566d8:	stp	x29, x30, [sp, #-80]!
   566dc:	mov	x29, sp
   566e0:	str	q0, [sp, #48]
   566e4:	str	q1, [sp, #64]
   566e8:	ldp	x1, x0, [sp, #48]
   566ec:	ldp	x6, x2, [sp, #64]
   566f0:	mrs	x11, fpcr
   566f4:	lsr	x3, x0, #63
   566f8:	ubfx	x7, x0, #0, #48
   566fc:	and	w12, w3, #0xff
   56700:	mov	x14, x3
   56704:	ubfx	x3, x0, #48, #15
   56708:	cbz	w3, 56ab0 <mpfr_free_pool@@Base+0x132c>
   5670c:	mov	w4, #0x7fff                	// #32767
   56710:	cmp	w3, w4
   56714:	b.eq	56b54 <mpfr_free_pool@@Base+0x13d0>  // b.none
   56718:	and	x3, x3, #0xffff
   5671c:	extr	x4, x7, x1, #61
   56720:	mov	x18, #0xffffffffffffc001    	// #-16383
   56724:	orr	x7, x4, #0x8000000000000
   56728:	add	x3, x3, x18
   5672c:	lsl	x5, x1, #3
   56730:	mov	x16, #0x0                   	// #0
   56734:	mov	x1, #0x0                   	// #0
   56738:	mov	w0, #0x0                   	// #0
   5673c:	lsr	x8, x2, #63
   56740:	ubfx	x4, x2, #0, #48
   56744:	and	w15, w8, #0xff
   56748:	mov	x13, x8
   5674c:	ubfx	x9, x2, #48, #15
   56750:	cbz	w9, 56b10 <mpfr_free_pool@@Base+0x138c>
   56754:	mov	w8, #0x7fff                	// #32767
   56758:	cmp	w9, w8
   5675c:	b.eq	567e0 <mpfr_free_pool@@Base+0x105c>  // b.none
   56760:	and	x9, x9, #0xffff
   56764:	mov	x17, #0xffffffffffffc001    	// #-16383
   56768:	add	x9, x9, x17
   5676c:	extr	x2, x4, x6, #61
   56770:	add	x9, x9, x3
   56774:	lsl	x6, x6, #3
   56778:	orr	x4, x2, #0x8000000000000
   5677c:	mov	x2, #0x0                   	// #0
   56780:	eor	w8, w12, w15
   56784:	cmp	x1, #0xa
   56788:	and	w10, w8, #0xff
   5678c:	add	x3, x9, #0x1
   56790:	and	x8, x8, #0xff
   56794:	b.le	56818 <mpfr_free_pool@@Base+0x1094>
   56798:	cmp	x1, #0xb
   5679c:	b.eq	56eb0 <mpfr_free_pool@@Base+0x172c>  // b.none
   567a0:	mov	w15, w12
   567a4:	mov	x13, x14
   567a8:	mov	w10, w15
   567ac:	cmp	x16, #0x2
   567b0:	b.eq	56b74 <mpfr_free_pool@@Base+0x13f0>  // b.none
   567b4:	mov	x4, x7
   567b8:	mov	x6, x5
   567bc:	mov	x2, x16
   567c0:	mov	x8, x13
   567c4:	cmp	x2, #0x3
   567c8:	b.ne	56834 <mpfr_free_pool@@Base+0x10b0>  // b.any
   567cc:	orr	x4, x4, #0x800000000000
   567d0:	mov	x5, x6
   567d4:	and	x4, x4, #0xffffffffffff
   567d8:	mov	w1, #0x7fff                	// #32767
   567dc:	b	56848 <mpfr_free_pool@@Base+0x10c4>
   567e0:	mov	x8, #0x7fff                	// #32767
   567e4:	orr	x2, x4, x6
   567e8:	add	x9, x3, x8
   567ec:	cbnz	x2, 5686c <mpfr_free_pool@@Base+0x10e8>
   567f0:	eor	w8, w12, w15
   567f4:	orr	x1, x1, #0x2
   567f8:	and	w10, w8, #0xff
   567fc:	cmp	x1, #0xa
   56800:	add	x3, x3, #0x8, lsl #12
   56804:	and	x8, x8, #0xff
   56808:	mov	x6, #0x0                   	// #0
   5680c:	b.gt	56e24 <mpfr_free_pool@@Base+0x16a0>
   56810:	mov	x4, #0x0                   	// #0
   56814:	mov	x2, #0x2                   	// #2
   56818:	cmp	x1, #0x2
   5681c:	b.gt	56894 <mpfr_free_pool@@Base+0x1110>
   56820:	sub	x1, x1, #0x1
   56824:	cmp	x1, #0x1
   56828:	b.hi	568d0 <mpfr_free_pool@@Base+0x114c>  // b.pmore
   5682c:	cmp	x2, #0x2
   56830:	b.eq	56b74 <mpfr_free_pool@@Base+0x13f0>  // b.none
   56834:	cmp	x2, #0x1
   56838:	b.ne	56a30 <mpfr_free_pool@@Base+0x12ac>  // b.any
   5683c:	mov	w1, #0x0                   	// #0
   56840:	mov	x4, #0x0                   	// #0
   56844:	mov	x5, #0x0                   	// #0
   56848:	mov	x3, #0x0                   	// #0
   5684c:	orr	w1, w1, w10, lsl #15
   56850:	bfxil	x3, x4, #0, #48
   56854:	fmov	d0, x5
   56858:	bfi	x3, x1, #48, #16
   5685c:	fmov	v0.d[1], x3
   56860:	cbnz	w0, 56ca0 <mpfr_free_pool@@Base+0x151c>
   56864:	ldp	x29, x30, [sp], #80
   56868:	ret
   5686c:	tst	x4, #0x800000000000
   56870:	eor	w8, w12, w15
   56874:	orr	x1, x1, #0x3
   56878:	csinc	w0, w0, wzr, ne  // ne = any
   5687c:	and	w10, w8, #0xff
   56880:	add	x3, x3, #0x8, lsl #12
   56884:	cmp	x1, #0xa
   56888:	and	x8, x8, #0xff
   5688c:	mov	x2, #0x3                   	// #3
   56890:	b.gt	56ea4 <mpfr_free_pool@@Base+0x1720>
   56894:	mov	x12, #0x1                   	// #1
   56898:	mov	x14, #0x530                 	// #1328
   5689c:	lsl	x1, x12, x1
   568a0:	tst	x1, x14
   568a4:	b.ne	56aa4 <mpfr_free_pool@@Base+0x1320>  // b.any
   568a8:	mov	x14, #0x240                 	// #576
   568ac:	tst	x1, x14
   568b0:	b.ne	56a8c <mpfr_free_pool@@Base+0x1308>  // b.any
   568b4:	mov	x12, #0x88                  	// #136
   568b8:	tst	x1, x12
   568bc:	b.eq	568d0 <mpfr_free_pool@@Base+0x114c>  // b.none
   568c0:	mov	x7, x4
   568c4:	mov	x5, x6
   568c8:	mov	x16, x2
   568cc:	b	567a8 <mpfr_free_pool@@Base+0x1024>
   568d0:	lsr	x13, x5, #32
   568d4:	and	x12, x6, #0xffffffff
   568d8:	and	x15, x5, #0xffffffff
   568dc:	lsr	x6, x6, #32
   568e0:	and	x18, x4, #0xffffffff
   568e4:	lsr	x2, x4, #32
   568e8:	mul	x4, x13, x12
   568ec:	stp	x21, x22, [sp, #32]
   568f0:	lsr	x22, x7, #32
   568f4:	and	x5, x7, #0xffffffff
   568f8:	mul	x16, x12, x15
   568fc:	madd	x7, x6, x15, x4
   56900:	stp	x19, x20, [sp, #16]
   56904:	mul	x1, x13, x18
   56908:	mul	x17, x15, x18
   5690c:	and	x30, x16, #0xffffffff
   56910:	madd	x15, x2, x15, x1
   56914:	add	x16, x7, x16, lsr #32
   56918:	mul	x21, x22, x12
   5691c:	cmp	x4, x16
   56920:	mul	x20, x22, x18
   56924:	mov	x14, #0x100000000           	// #4294967296
   56928:	mul	x19, x13, x6
   5692c:	add	x15, x15, x17, lsr #32
   56930:	mul	x12, x12, x5
   56934:	and	x17, x17, #0xffffffff
   56938:	mul	x18, x5, x18
   5693c:	add	x4, x19, x14
   56940:	madd	x7, x6, x5, x21
   56944:	csel	x19, x4, x19, hi  // hi = pmore
   56948:	madd	x5, x2, x5, x20
   5694c:	cmp	x1, x15
   56950:	mul	x13, x13, x2
   56954:	add	x17, x17, x15, lsl #32
   56958:	mul	x6, x6, x22
   5695c:	add	x7, x7, x12, lsr #32
   56960:	add	x5, x5, x18, lsr #32
   56964:	add	x4, x13, x14
   56968:	mul	x2, x2, x22
   5696c:	csel	x13, x4, x13, hi  // hi = pmore
   56970:	and	x1, x18, #0xffffffff
   56974:	cmp	x21, x7
   56978:	add	x4, x6, x14
   5697c:	add	x30, x30, x16, lsl #32
   56980:	csel	x6, x4, x6, hi  // hi = pmore
   56984:	add	x13, x13, x15, lsr #32
   56988:	cmp	x20, x5
   5698c:	add	x1, x1, x5, lsl #32
   56990:	add	x16, x17, x16, lsr #32
   56994:	add	x14, x2, x14
   56998:	csel	x2, x14, x2, hi  // hi = pmore
   5699c:	add	x16, x19, x16
   569a0:	adds	x1, x1, x13
   569a4:	and	x12, x12, #0xffffffff
   569a8:	cset	x13, cs  // cs = hs, nlast
   569ac:	cmp	x16, x17
   569b0:	cset	x4, cc  // cc = lo, ul, last
   569b4:	add	x12, x12, x7, lsl #32
   569b8:	adds	x1, x1, x4
   569bc:	lsr	x5, x5, #32
   569c0:	cset	x4, cs  // cs = hs, nlast
   569c4:	cmp	x13, #0x0
   569c8:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   569cc:	add	x7, x6, x7, lsr #32
   569d0:	cinc	x5, x5, ne  // ne = any
   569d4:	adds	x6, x16, x12
   569d8:	cset	x4, cs  // cs = hs, nlast
   569dc:	adds	x1, x1, x7
   569e0:	cset	x7, cs  // cs = hs, nlast
   569e4:	adds	x4, x1, x4
   569e8:	cset	x1, cs  // cs = hs, nlast
   569ec:	cmp	x7, #0x0
   569f0:	orr	x30, x30, x6, lsl #13
   569f4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   569f8:	cinc	x1, x2, ne  // ne = any
   569fc:	cmp	x30, #0x0
   56a00:	add	x1, x1, x5
   56a04:	cset	x2, ne  // ne = any
   56a08:	orr	x6, x2, x6, lsr #51
   56a0c:	orr	x6, x6, x4, lsl #13
   56a10:	extr	x4, x1, x4, #51
   56a14:	tbz	x1, #39, 56d28 <mpfr_free_pool@@Base+0x15a4>
   56a18:	ldp	x19, x20, [sp, #16]
   56a1c:	and	x1, x6, #0x1
   56a20:	ldp	x21, x22, [sp, #32]
   56a24:	orr	x6, x1, x6, lsr #1
   56a28:	orr	x6, x6, x4, lsl #63
   56a2c:	lsr	x4, x4, #1
   56a30:	mov	x1, #0x3fff                	// #16383
   56a34:	add	x2, x3, x1
   56a38:	cmp	x2, #0x0
   56a3c:	b.le	56bd4 <mpfr_free_pool@@Base+0x1450>
   56a40:	tst	x6, #0x7
   56a44:	b.eq	56a64 <mpfr_free_pool@@Base+0x12e0>  // b.none
   56a48:	and	x1, x11, #0xc00000
   56a4c:	orr	w0, w0, #0x10
   56a50:	cmp	x1, #0x400, lsl #12
   56a54:	b.eq	56e1c <mpfr_free_pool@@Base+0x1698>  // b.none
   56a58:	cmp	x1, #0x800, lsl #12
   56a5c:	b.eq	56dc4 <mpfr_free_pool@@Base+0x1640>  // b.none
   56a60:	cbz	x1, 56dac <mpfr_free_pool@@Base+0x1628>
   56a64:	tbz	x4, #52, 56a70 <mpfr_free_pool@@Base+0x12ec>
   56a68:	and	x4, x4, #0xffefffffffffffff
   56a6c:	add	x2, x3, #0x4, lsl #12
   56a70:	mov	x1, #0x7ffe                	// #32766
   56a74:	cmp	x2, x1
   56a78:	b.gt	56cfc <mpfr_free_pool@@Base+0x1578>
   56a7c:	and	w1, w2, #0x7fff
   56a80:	extr	x5, x4, x6, #3
   56a84:	ubfx	x4, x4, #3, #48
   56a88:	b	56848 <mpfr_free_pool@@Base+0x10c4>
   56a8c:	mov	w0, w12
   56a90:	mov	w10, #0x0                   	// #0
   56a94:	mov	x4, #0xffffffffffff        	// #281474976710655
   56a98:	mov	x5, #0xffffffffffffffff    	// #-1
   56a9c:	mov	w1, #0x7fff                	// #32767
   56aa0:	b	56848 <mpfr_free_pool@@Base+0x10c4>
   56aa4:	mov	w15, w10
   56aa8:	mov	x13, x8
   56aac:	b	567a8 <mpfr_free_pool@@Base+0x1024>
   56ab0:	orr	x5, x7, x1
   56ab4:	cbz	x5, 56bbc <mpfr_free_pool@@Base+0x1438>
   56ab8:	cbz	x7, 56cd8 <mpfr_free_pool@@Base+0x1554>
   56abc:	clz	x0, x7
   56ac0:	sub	x4, x0, #0xf
   56ac4:	add	w5, w4, #0x3
   56ac8:	mov	w3, #0x3d                  	// #61
   56acc:	sub	w3, w3, w4
   56ad0:	lsl	x4, x7, x5
   56ad4:	lsr	x3, x1, x3
   56ad8:	orr	x7, x3, x4
   56adc:	lsl	x5, x1, x5
   56ae0:	lsr	x8, x2, #63
   56ae4:	mov	x3, #0xffffffffffffc011    	// #-16367
   56ae8:	ubfx	x4, x2, #0, #48
   56aec:	sub	x3, x3, x0
   56af0:	and	w15, w8, #0xff
   56af4:	mov	x13, x8
   56af8:	ubfx	x9, x2, #48, #15
   56afc:	mov	x1, #0x0                   	// #0
   56b00:	mov	x16, #0x0                   	// #0
   56b04:	mov	w0, #0x0                   	// #0
   56b08:	cbnz	w9, 56754 <mpfr_free_pool@@Base+0xfd0>
   56b0c:	nop
   56b10:	orr	x2, x4, x6
   56b14:	cbz	x2, 56b84 <mpfr_free_pool@@Base+0x1400>
   56b18:	cbz	x4, 56cb4 <mpfr_free_pool@@Base+0x1530>
   56b1c:	clz	x9, x4
   56b20:	sub	x2, x9, #0xf
   56b24:	add	w10, w2, #0x3
   56b28:	mov	w8, #0x3d                  	// #61
   56b2c:	sub	w8, w8, w2
   56b30:	lsl	x2, x4, x10
   56b34:	lsr	x8, x6, x8
   56b38:	orr	x4, x8, x2
   56b3c:	lsl	x6, x6, x10
   56b40:	sub	x9, x3, x9
   56b44:	mov	x10, #0xffffffffffffc011    	// #-16367
   56b48:	mov	x2, #0x0                   	// #0
   56b4c:	add	x9, x9, x10
   56b50:	b	56780 <mpfr_free_pool@@Base+0xffc>
   56b54:	orr	x5, x7, x1
   56b58:	cbnz	x5, 56b9c <mpfr_free_pool@@Base+0x1418>
   56b5c:	mov	x7, #0x0                   	// #0
   56b60:	mov	x1, #0x8                   	// #8
   56b64:	mov	x3, #0x7fff                	// #32767
   56b68:	mov	x16, #0x2                   	// #2
   56b6c:	mov	w0, #0x0                   	// #0
   56b70:	b	5673c <mpfr_free_pool@@Base+0xfb8>
   56b74:	mov	w1, #0x7fff                	// #32767
   56b78:	mov	x4, #0x0                   	// #0
   56b7c:	mov	x5, #0x0                   	// #0
   56b80:	b	56848 <mpfr_free_pool@@Base+0x10c4>
   56b84:	orr	x1, x1, #0x1
   56b88:	mov	x9, x3
   56b8c:	mov	x4, #0x0                   	// #0
   56b90:	mov	x6, #0x0                   	// #0
   56b94:	mov	x2, #0x1                   	// #1
   56b98:	b	56780 <mpfr_free_pool@@Base+0xffc>
   56b9c:	lsr	x0, x7, #47
   56ba0:	mov	x5, x1
   56ba4:	eor	x0, x0, #0x1
   56ba8:	mov	x1, #0xc                   	// #12
   56bac:	and	w0, w0, #0x1
   56bb0:	mov	x3, #0x7fff                	// #32767
   56bb4:	mov	x16, #0x3                   	// #3
   56bb8:	b	5673c <mpfr_free_pool@@Base+0xfb8>
   56bbc:	mov	x7, #0x0                   	// #0
   56bc0:	mov	x1, #0x4                   	// #4
   56bc4:	mov	x3, #0x0                   	// #0
   56bc8:	mov	x16, #0x1                   	// #1
   56bcc:	mov	w0, #0x0                   	// #0
   56bd0:	b	5673c <mpfr_free_pool@@Base+0xfb8>
   56bd4:	mov	x1, #0x1                   	// #1
   56bd8:	sub	x2, x1, x2
   56bdc:	cmp	x2, #0x74
   56be0:	b.gt	56c58 <mpfr_free_pool@@Base+0x14d4>
   56be4:	cmp	x2, #0x3f
   56be8:	b.le	56d38 <mpfr_free_pool@@Base+0x15b4>
   56bec:	mov	w1, #0x80                  	// #128
   56bf0:	sub	w1, w1, w2
   56bf4:	cmp	x2, #0x40
   56bf8:	sub	w2, w2, #0x40
   56bfc:	lsl	x1, x4, x1
   56c00:	orr	x1, x6, x1
   56c04:	csel	x6, x1, x6, ne  // ne = any
   56c08:	lsr	x2, x4, x2
   56c0c:	cmp	x6, #0x0
   56c10:	cset	x5, ne  // ne = any
   56c14:	orr	x5, x5, x2
   56c18:	ands	x2, x5, #0x7
   56c1c:	b.eq	56d6c <mpfr_free_pool@@Base+0x15e8>  // b.none
   56c20:	mov	x2, #0x0                   	// #0
   56c24:	and	x11, x11, #0xc00000
   56c28:	orr	w0, w0, #0x10
   56c2c:	cmp	x11, #0x400, lsl #12
   56c30:	b.eq	56e7c <mpfr_free_pool@@Base+0x16f8>  // b.none
   56c34:	cmp	x11, #0x800, lsl #12
   56c38:	b.eq	56e90 <mpfr_free_pool@@Base+0x170c>  // b.none
   56c3c:	cbz	x11, 56dd4 <mpfr_free_pool@@Base+0x1650>
   56c40:	tbnz	x2, #51, 56dec <mpfr_free_pool@@Base+0x1668>
   56c44:	ubfx	x4, x2, #3, #48
   56c48:	extr	x5, x2, x5, #3
   56c4c:	orr	w0, w0, #0x8
   56c50:	mov	w1, #0x0                   	// #0
   56c54:	b	56c88 <mpfr_free_pool@@Base+0x1504>
   56c58:	orr	x5, x6, x4
   56c5c:	cbz	x5, 56c7c <mpfr_free_pool@@Base+0x14f8>
   56c60:	and	x11, x11, #0xc00000
   56c64:	orr	w0, w0, #0x10
   56c68:	cmp	x11, #0x400, lsl #12
   56c6c:	sub	x5, x1, x8
   56c70:	b.eq	56c7c <mpfr_free_pool@@Base+0x14f8>  // b.none
   56c74:	cmp	x11, #0x800, lsl #12
   56c78:	csel	x5, x8, xzr, eq  // eq = none
   56c7c:	orr	w0, w0, #0x8
   56c80:	mov	w1, #0x0                   	// #0
   56c84:	mov	x4, #0x0                   	// #0
   56c88:	mov	x3, #0x0                   	// #0
   56c8c:	fmov	d0, x5
   56c90:	bfxil	x3, x4, #0, #48
   56c94:	bfi	x3, x1, #48, #15
   56c98:	bfi	x3, x10, #63, #1
   56c9c:	fmov	v0.d[1], x3
   56ca0:	str	q0, [sp, #48]
   56ca4:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   56ca8:	ldr	q0, [sp, #48]
   56cac:	ldp	x29, x30, [sp], #80
   56cb0:	ret
   56cb4:	clz	x9, x6
   56cb8:	add	x2, x9, #0x31
   56cbc:	add	x9, x9, #0x40
   56cc0:	cmp	x2, #0x3c
   56cc4:	b.le	56b24 <mpfr_free_pool@@Base+0x13a0>
   56cc8:	sub	w2, w2, #0x3d
   56ccc:	lsl	x4, x6, x2
   56cd0:	mov	x6, #0x0                   	// #0
   56cd4:	b	56b40 <mpfr_free_pool@@Base+0x13bc>
   56cd8:	clz	x3, x1
   56cdc:	add	x4, x3, #0x31
   56ce0:	add	x0, x3, #0x40
   56ce4:	cmp	x4, #0x3c
   56ce8:	b.le	56ac4 <mpfr_free_pool@@Base+0x1340>
   56cec:	sub	w4, w4, #0x3d
   56cf0:	mov	x5, #0x0                   	// #0
   56cf4:	lsl	x7, x1, x4
   56cf8:	b	56ae0 <mpfr_free_pool@@Base+0x135c>
   56cfc:	and	x5, x11, #0xc00000
   56d00:	cmp	x5, #0x400, lsl #12
   56d04:	b.eq	56e00 <mpfr_free_pool@@Base+0x167c>  // b.none
   56d08:	cmp	x5, #0x800, lsl #12
   56d0c:	b.eq	56d90 <mpfr_free_pool@@Base+0x160c>  // b.none
   56d10:	cbz	x5, 56d84 <mpfr_free_pool@@Base+0x1600>
   56d14:	mov	x4, #0xffffffffffff        	// #281474976710655
   56d18:	mov	x5, #0xffffffffffffffff    	// #-1
   56d1c:	mov	w2, #0x14                  	// #20
   56d20:	orr	w0, w0, w2
   56d24:	b	56c88 <mpfr_free_pool@@Base+0x1504>
   56d28:	mov	x3, x9
   56d2c:	ldp	x19, x20, [sp, #16]
   56d30:	ldp	x21, x22, [sp, #32]
   56d34:	b	56a30 <mpfr_free_pool@@Base+0x12ac>
   56d38:	mov	w1, #0x40                  	// #64
   56d3c:	sub	w1, w1, w2
   56d40:	lsr	x3, x6, x2
   56d44:	lsl	x6, x6, x1
   56d48:	cmp	x6, #0x0
   56d4c:	lsl	x5, x4, x1
   56d50:	cset	x1, ne  // ne = any
   56d54:	orr	x5, x5, x3
   56d58:	lsr	x2, x4, x2
   56d5c:	orr	x5, x5, x1
   56d60:	tst	x5, #0x7
   56d64:	b.ne	56c24 <mpfr_free_pool@@Base+0x14a0>  // b.any
   56d68:	tbnz	x2, #51, 56e9c <mpfr_free_pool@@Base+0x1718>
   56d6c:	ubfx	x4, x2, #3, #48
   56d70:	extr	x5, x2, x5, #3
   56d74:	mov	w1, #0x0                   	// #0
   56d78:	tbz	w11, #11, 56848 <mpfr_free_pool@@Base+0x10c4>
   56d7c:	orr	w0, w0, #0x8
   56d80:	b	56c88 <mpfr_free_pool@@Base+0x1504>
   56d84:	mov	w1, #0x7fff                	// #32767
   56d88:	mov	x4, #0x0                   	// #0
   56d8c:	b	56d1c <mpfr_free_pool@@Base+0x1598>
   56d90:	cmp	x8, #0x0
   56d94:	mov	w2, #0x7fff                	// #32767
   56d98:	mov	x4, #0xffffffffffff        	// #281474976710655
   56d9c:	csel	w1, w1, w2, eq  // eq = none
   56da0:	csel	x4, x4, xzr, eq  // eq = none
   56da4:	csetm	x5, eq  // eq = none
   56da8:	b	56d1c <mpfr_free_pool@@Base+0x1598>
   56dac:	and	x1, x6, #0xf
   56db0:	cmp	x1, #0x4
   56db4:	b.eq	56a64 <mpfr_free_pool@@Base+0x12e0>  // b.none
   56db8:	adds	x6, x6, #0x4
   56dbc:	cinc	x4, x4, cs  // cs = hs, nlast
   56dc0:	b	56a64 <mpfr_free_pool@@Base+0x12e0>
   56dc4:	cbz	x8, 56a64 <mpfr_free_pool@@Base+0x12e0>
   56dc8:	adds	x6, x6, #0x8
   56dcc:	cinc	x4, x4, cs  // cs = hs, nlast
   56dd0:	b	56a64 <mpfr_free_pool@@Base+0x12e0>
   56dd4:	and	x1, x5, #0xf
   56dd8:	cmp	x1, #0x4
   56ddc:	b.eq	56de8 <mpfr_free_pool@@Base+0x1664>  // b.none
   56de0:	adds	x5, x5, #0x4
   56de4:	cinc	x2, x2, cs  // cs = hs, nlast
   56de8:	tbz	x2, #51, 56c44 <mpfr_free_pool@@Base+0x14c0>
   56dec:	orr	w0, w0, #0x8
   56df0:	mov	w1, #0x1                   	// #1
   56df4:	mov	x4, #0x0                   	// #0
   56df8:	mov	x5, #0x0                   	// #0
   56dfc:	b	56c88 <mpfr_free_pool@@Base+0x1504>
   56e00:	cmp	x8, #0x0
   56e04:	mov	w2, #0x7fff                	// #32767
   56e08:	mov	x4, #0xffffffffffff        	// #281474976710655
   56e0c:	csel	w1, w1, w2, ne  // ne = any
   56e10:	csel	x4, x4, xzr, ne  // ne = any
   56e14:	csetm	x5, ne  // ne = any
   56e18:	b	56d1c <mpfr_free_pool@@Base+0x1598>
   56e1c:	cbnz	x8, 56a64 <mpfr_free_pool@@Base+0x12e0>
   56e20:	b	56dc8 <mpfr_free_pool@@Base+0x1644>
   56e24:	mov	x4, #0x2                   	// #2
   56e28:	cmp	x1, #0xf
   56e2c:	b.ne	56e50 <mpfr_free_pool@@Base+0x16cc>  // b.any
   56e30:	tbz	x7, #47, 56e68 <mpfr_free_pool@@Base+0x16e4>
   56e34:	tbnz	x2, #47, 56e68 <mpfr_free_pool@@Base+0x16e4>
   56e38:	orr	x4, x2, #0x800000000000
   56e3c:	mov	w10, w15
   56e40:	and	x4, x4, #0xffffffffffff
   56e44:	mov	x5, x6
   56e48:	mov	w1, #0x7fff                	// #32767
   56e4c:	b	56848 <mpfr_free_pool@@Base+0x10c4>
   56e50:	cmp	x1, #0xb
   56e54:	b.ne	567a0 <mpfr_free_pool@@Base+0x101c>  // b.any
   56e58:	mov	x7, x2
   56e5c:	mov	x5, x6
   56e60:	mov	x16, x4
   56e64:	b	567a8 <mpfr_free_pool@@Base+0x1024>
   56e68:	orr	x4, x7, #0x800000000000
   56e6c:	mov	w10, w12
   56e70:	and	x4, x4, #0xffffffffffff
   56e74:	mov	w1, #0x7fff                	// #32767
   56e78:	b	56848 <mpfr_free_pool@@Base+0x10c4>
   56e7c:	cbnz	x8, 56de8 <mpfr_free_pool@@Base+0x1664>
   56e80:	adds	x5, x5, #0x8
   56e84:	cinc	x2, x2, cs  // cs = hs, nlast
   56e88:	tbnz	x2, #51, 56dec <mpfr_free_pool@@Base+0x1668>
   56e8c:	b	56c44 <mpfr_free_pool@@Base+0x14c0>
   56e90:	cbnz	x8, 56e80 <mpfr_free_pool@@Base+0x16fc>
   56e94:	tbnz	x2, #51, 56dec <mpfr_free_pool@@Base+0x1668>
   56e98:	b	56c44 <mpfr_free_pool@@Base+0x14c0>
   56e9c:	orr	w0, w0, #0x10
   56ea0:	b	56dec <mpfr_free_pool@@Base+0x1668>
   56ea4:	mov	x2, x4
   56ea8:	mov	x4, #0x3                   	// #3
   56eac:	b	56e28 <mpfr_free_pool@@Base+0x16a4>
   56eb0:	mov	w10, w15
   56eb4:	mov	x8, x13
   56eb8:	b	567c4 <mpfr_free_pool@@Base+0x1040>
   56ebc:	nop
   56ec0:	stp	x29, x30, [sp, #-48]!
   56ec4:	mov	x29, sp
   56ec8:	str	q0, [sp, #16]
   56ecc:	str	q1, [sp, #32]
   56ed0:	ldp	x5, x1, [sp, #16]
   56ed4:	ldp	x0, x2, [sp, #32]
   56ed8:	mrs	x12, fpcr
   56edc:	mov	x9, x0
   56ee0:	ubfx	x0, x2, #48, #15
   56ee4:	lsr	x6, x1, #63
   56ee8:	ubfx	x7, x1, #48, #15
   56eec:	ubfiz	x3, x1, #3, #48
   56ef0:	mov	x13, x0
   56ef4:	lsr	x4, x2, #63
   56ef8:	ubfiz	x2, x2, #3, #48
   56efc:	mov	x11, x6
   56f00:	and	w8, w6, #0xff
   56f04:	mov	x14, x6
   56f08:	sub	w0, w7, w0
   56f0c:	mov	x1, x7
   56f10:	orr	x3, x3, x5, lsr #61
   56f14:	mov	x7, #0x7fff                	// #32767
   56f18:	and	w4, w4, #0xff
   56f1c:	cmp	x13, x7
   56f20:	orr	x2, x2, x9, lsr #61
   56f24:	lsl	x6, x5, #3
   56f28:	lsl	x10, x9, #3
   56f2c:	b.eq	5709c <mpfr_free_pool@@Base+0x1918>  // b.none
   56f30:	eor	w4, w4, #0x1
   56f34:	and	x4, x4, #0xff
   56f38:	cmp	x11, x4
   56f3c:	b.eq	57134 <mpfr_free_pool@@Base+0x19b0>  // b.none
   56f40:	cmp	w0, #0x0
   56f44:	b.le	570b8 <mpfr_free_pool@@Base+0x1934>
   56f48:	cbnz	x13, 57224 <mpfr_free_pool@@Base+0x1aa0>
   56f4c:	orr	x4, x2, x10
   56f50:	cbz	x4, 57404 <mpfr_free_pool@@Base+0x1c80>
   56f54:	subs	w0, w0, #0x1
   56f58:	b.eq	576d8 <mpfr_free_pool@@Base+0x1f54>  // b.none
   56f5c:	mov	x4, #0x7fff                	// #32767
   56f60:	cmp	x1, x4
   56f64:	b.eq	573d8 <mpfr_free_pool@@Base+0x1c54>  // b.none
   56f68:	cmp	w0, #0x74
   56f6c:	b.gt	573f4 <mpfr_free_pool@@Base+0x1c70>
   56f70:	cmp	w0, #0x3f
   56f74:	b.gt	5759c <mpfr_free_pool@@Base+0x1e18>
   56f78:	mov	w4, #0x40                  	// #64
   56f7c:	sub	w4, w4, w0
   56f80:	lsr	x7, x10, x0
   56f84:	lsl	x10, x10, x4
   56f88:	cmp	x10, #0x0
   56f8c:	lsl	x4, x2, x4
   56f90:	cset	x5, ne  // ne = any
   56f94:	orr	x4, x4, x7
   56f98:	lsr	x2, x2, x0
   56f9c:	orr	x4, x4, x5
   56fa0:	sub	x3, x3, x2
   56fa4:	subs	x6, x6, x4
   56fa8:	sbc	x3, x3, xzr
   56fac:	and	x5, x3, #0x7ffffffffffff
   56fb0:	tbz	x3, #51, 571b0 <mpfr_free_pool@@Base+0x1a2c>
   56fb4:	cbz	x5, 573bc <mpfr_free_pool@@Base+0x1c38>
   56fb8:	clz	x0, x5
   56fbc:	sub	w0, w0, #0xc
   56fc0:	neg	w3, w0
   56fc4:	lsl	x2, x5, x0
   56fc8:	lsl	x5, x6, x0
   56fcc:	lsr	x6, x6, x3
   56fd0:	orr	x3, x6, x2
   56fd4:	cmp	x1, w0, sxtw
   56fd8:	sxtw	x2, w0
   56fdc:	b.gt	5739c <mpfr_free_pool@@Base+0x1c18>
   56fe0:	sub	w1, w0, w1
   56fe4:	add	w0, w1, #0x1
   56fe8:	cmp	w0, #0x3f
   56fec:	b.gt	57564 <mpfr_free_pool@@Base+0x1de0>
   56ff0:	mov	w1, #0x40                  	// #64
   56ff4:	sub	w1, w1, w0
   56ff8:	lsr	x2, x5, x0
   56ffc:	lsl	x5, x5, x1
   57000:	cmp	x5, #0x0
   57004:	lsl	x6, x3, x1
   57008:	cset	x1, ne  // ne = any
   5700c:	orr	x6, x6, x2
   57010:	lsr	x3, x3, x0
   57014:	orr	x6, x6, x1
   57018:	orr	x7, x6, x3
   5701c:	cbz	x7, 571c4 <mpfr_free_pool@@Base+0x1a40>
   57020:	and	x0, x6, #0x7
   57024:	mov	x1, #0x0                   	// #0
   57028:	mov	w4, #0x1                   	// #1
   5702c:	cbz	x0, 57428 <mpfr_free_pool@@Base+0x1ca4>
   57030:	and	x2, x12, #0xc00000
   57034:	cmp	x2, #0x400, lsl #12
   57038:	b.eq	57374 <mpfr_free_pool@@Base+0x1bf0>  // b.none
   5703c:	cmp	x2, #0x800, lsl #12
   57040:	b.eq	57354 <mpfr_free_pool@@Base+0x1bd0>  // b.none
   57044:	cbz	x2, 57380 <mpfr_free_pool@@Base+0x1bfc>
   57048:	and	x2, x3, #0x8000000000000
   5704c:	mov	w0, #0x10                  	// #16
   57050:	cbz	w4, 57058 <mpfr_free_pool@@Base+0x18d4>
   57054:	orr	w0, w0, #0x8
   57058:	cbz	x2, 57108 <mpfr_free_pool@@Base+0x1984>
   5705c:	add	x1, x1, #0x1
   57060:	mov	x2, #0x7fff                	// #32767
   57064:	cmp	x1, x2
   57068:	b.eq	5727c <mpfr_free_pool@@Base+0x1af8>  // b.none
   5706c:	ubfx	x7, x3, #3, #48
   57070:	extr	x5, x3, x6, #3
   57074:	and	w1, w1, #0x7fff
   57078:	mov	x3, #0x0                   	// #0
   5707c:	orr	w1, w1, w8, lsl #15
   57080:	bfxil	x3, x7, #0, #48
   57084:	fmov	d0, x5
   57088:	bfi	x3, x1, #48, #16
   5708c:	fmov	v0.d[1], x3
   57090:	cbnz	w0, 572d8 <mpfr_free_pool@@Base+0x1b54>
   57094:	ldp	x29, x30, [sp], #48
   57098:	ret
   5709c:	orr	x7, x2, x10
   570a0:	cbz	x7, 56f30 <mpfr_free_pool@@Base+0x17ac>
   570a4:	and	x4, x4, #0xff
   570a8:	cmp	x11, x4
   570ac:	b.eq	572ec <mpfr_free_pool@@Base+0x1b68>  // b.none
   570b0:	cmp	w0, #0x0
   570b4:	b.gt	57224 <mpfr_free_pool@@Base+0x1aa0>
   570b8:	cbz	w0, 571dc <mpfr_free_pool@@Base+0x1a58>
   570bc:	mov	w8, w4
   570c0:	cbnz	x1, 574f8 <mpfr_free_pool@@Base+0x1d74>
   570c4:	orr	x1, x3, x6
   570c8:	cbz	x1, 57190 <mpfr_free_pool@@Base+0x1a0c>
   570cc:	cmn	w0, #0x1
   570d0:	b.eq	57838 <mpfr_free_pool@@Base+0x20b4>  // b.none
   570d4:	mov	x1, #0x7fff                	// #32767
   570d8:	mvn	w0, w0
   570dc:	cmp	x13, x1
   570e0:	b.ne	5750c <mpfr_free_pool@@Base+0x1d88>  // b.any
   570e4:	orr	x0, x2, x10
   570e8:	and	x11, x8, #0xff
   570ec:	cbz	x0, 57470 <mpfr_free_pool@@Base+0x1cec>
   570f0:	lsr	x0, x2, #50
   570f4:	mov	x6, x10
   570f8:	eor	x0, x0, #0x1
   570fc:	mov	x3, x2
   57100:	and	w0, w0, #0x1
   57104:	mov	x1, #0x7fff                	// #32767
   57108:	mov	x2, #0x7fff                	// #32767
   5710c:	extr	x5, x3, x6, #3
   57110:	lsr	x7, x3, #3
   57114:	cmp	x1, x2
   57118:	b.ne	571d0 <mpfr_free_pool@@Base+0x1a4c>  // b.any
   5711c:	orr	x1, x7, x5
   57120:	cbz	x1, 5798c <mpfr_free_pool@@Base+0x2208>
   57124:	orr	x7, x7, #0x800000000000
   57128:	mov	w1, #0x7fff                	// #32767
   5712c:	and	x7, x7, #0xffffffffffff
   57130:	b	57078 <mpfr_free_pool@@Base+0x18f4>
   57134:	cmp	w0, #0x0
   57138:	b.le	572ec <mpfr_free_pool@@Base+0x1b68>
   5713c:	cbz	x13, 5722c <mpfr_free_pool@@Base+0x1aa8>
   57140:	orr	x2, x2, #0x8000000000000
   57144:	mov	x4, #0x7fff                	// #32767
   57148:	cmp	x1, x4
   5714c:	b.eq	573d8 <mpfr_free_pool@@Base+0x1c54>  // b.none
   57150:	cmp	w0, #0x74
   57154:	b.gt	5754c <mpfr_free_pool@@Base+0x1dc8>
   57158:	cmp	w0, #0x3f
   5715c:	b.gt	575e8 <mpfr_free_pool@@Base+0x1e64>
   57160:	mov	w4, #0x40                  	// #64
   57164:	sub	w4, w4, w0
   57168:	lsr	x7, x10, x0
   5716c:	lsl	x10, x10, x4
   57170:	cmp	x10, #0x0
   57174:	lsl	x4, x2, x4
   57178:	cset	x5, ne  // ne = any
   5717c:	orr	x4, x4, x7
   57180:	lsr	x2, x2, x0
   57184:	orr	x0, x4, x5
   57188:	add	x3, x3, x2
   5718c:	b	57558 <mpfr_free_pool@@Base+0x1dd4>
   57190:	mov	x0, #0x7fff                	// #32767
   57194:	cmp	x13, x0
   57198:	b.eq	577c4 <mpfr_free_pool@@Base+0x2040>  // b.none
   5719c:	mov	x3, x2
   571a0:	mov	x6, x10
   571a4:	mov	x1, x13
   571a8:	mov	x14, x4
   571ac:	nop
   571b0:	orr	x7, x6, x3
   571b4:	and	x0, x6, #0x7
   571b8:	mov	w4, #0x0                   	// #0
   571bc:	cbnz	x1, 5702c <mpfr_free_pool@@Base+0x18a8>
   571c0:	cbnz	x7, 57020 <mpfr_free_pool@@Base+0x189c>
   571c4:	mov	x5, #0x0                   	// #0
   571c8:	mov	x1, #0x0                   	// #0
   571cc:	mov	w0, #0x0                   	// #0
   571d0:	and	x7, x7, #0xffffffffffff
   571d4:	and	w1, w1, #0x7fff
   571d8:	b	57078 <mpfr_free_pool@@Base+0x18f4>
   571dc:	add	x7, x1, #0x1
   571e0:	tst	x7, #0x7ffe
   571e4:	b.ne	574c8 <mpfr_free_pool@@Base+0x1d44>  // b.any
   571e8:	orr	x11, x3, x6
   571ec:	orr	x7, x2, x10
   571f0:	cbnz	x1, 57658 <mpfr_free_pool@@Base+0x1ed4>
   571f4:	cbz	x11, 576e4 <mpfr_free_pool@@Base+0x1f60>
   571f8:	cbz	x7, 576f8 <mpfr_free_pool@@Base+0x1f74>
   571fc:	subs	x9, x6, x10
   57200:	cmp	x6, x10
   57204:	sbc	x5, x3, x2
   57208:	tbz	x5, #51, 578a0 <mpfr_free_pool@@Base+0x211c>
   5720c:	subs	x6, x10, x6
   57210:	mov	w8, w4
   57214:	sbc	x3, x2, x3
   57218:	mov	x14, x4
   5721c:	orr	x7, x6, x3
   57220:	b	5701c <mpfr_free_pool@@Base+0x1898>
   57224:	orr	x2, x2, #0x8000000000000
   57228:	b	56f5c <mpfr_free_pool@@Base+0x17d8>
   5722c:	orr	x4, x2, x10
   57230:	cbz	x4, 57404 <mpfr_free_pool@@Base+0x1c80>
   57234:	subs	w0, w0, #0x1
   57238:	b.ne	57144 <mpfr_free_pool@@Base+0x19c0>  // b.any
   5723c:	adds	x6, x6, x10
   57240:	adc	x3, x2, x3
   57244:	nop
   57248:	tbz	x3, #51, 571b0 <mpfr_free_pool@@Base+0x1a2c>
   5724c:	add	x1, x1, #0x1
   57250:	mov	x0, #0x7fff                	// #32767
   57254:	cmp	x1, x0
   57258:	b.eq	57704 <mpfr_free_pool@@Base+0x1f80>  // b.none
   5725c:	and	x0, x6, #0x1
   57260:	and	x2, x3, #0xfff7ffffffffffff
   57264:	orr	x6, x0, x6, lsr #1
   57268:	mov	w4, #0x0                   	// #0
   5726c:	orr	x6, x6, x3, lsl #63
   57270:	lsr	x3, x2, #1
   57274:	and	x0, x6, #0x7
   57278:	b	5702c <mpfr_free_pool@@Base+0x18a8>
   5727c:	and	x2, x12, #0xc00000
   57280:	cbz	x2, 572b8 <mpfr_free_pool@@Base+0x1b34>
   57284:	cmp	x2, #0x400, lsl #12
   57288:	b.eq	572b4 <mpfr_free_pool@@Base+0x1b30>  // b.none
   5728c:	cmp	x2, #0x800, lsl #12
   57290:	and	w14, w14, #0x1
   57294:	csel	w14, w14, wzr, eq  // eq = none
   57298:	cbnz	w14, 572b8 <mpfr_free_pool@@Base+0x1b34>
   5729c:	mov	w1, #0x14                  	// #20
   572a0:	mov	x5, #0xffffffffffffffff    	// #-1
   572a4:	orr	w0, w0, w1
   572a8:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   572ac:	mov	x1, #0x7ffe                	// #32766
   572b0:	b	571d0 <mpfr_free_pool@@Base+0x1a4c>
   572b4:	cbnz	x14, 5729c <mpfr_free_pool@@Base+0x1b18>
   572b8:	mov	w1, #0x14                  	// #20
   572bc:	and	x11, x8, #0xff
   572c0:	orr	w0, w0, w1
   572c4:	mov	x2, #0x0                   	// #0
   572c8:	fmov	d0, x2
   572cc:	lsl	x11, x11, #63
   572d0:	orr	x3, x11, #0x7fff000000000000
   572d4:	fmov	v0.d[1], x3
   572d8:	str	q0, [sp, #16]
   572dc:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   572e0:	ldr	q0, [sp, #16]
   572e4:	ldp	x29, x30, [sp], #48
   572e8:	ret
   572ec:	cbz	w0, 57488 <mpfr_free_pool@@Base+0x1d04>
   572f0:	cbz	x1, 57444 <mpfr_free_pool@@Base+0x1cc0>
   572f4:	mov	x1, #0x7fff                	// #32767
   572f8:	neg	w0, w0
   572fc:	orr	x3, x3, #0x8000000000000
   57300:	cmp	x13, x1
   57304:	b.eq	57464 <mpfr_free_pool@@Base+0x1ce0>  // b.none
   57308:	cmp	w0, #0x74
   5730c:	b.gt	57758 <mpfr_free_pool@@Base+0x1fd4>
   57310:	cmp	w0, #0x3f
   57314:	b.gt	5780c <mpfr_free_pool@@Base+0x2088>
   57318:	mov	w1, #0x40                  	// #64
   5731c:	sub	w1, w1, w0
   57320:	lsr	x4, x6, x0
   57324:	lsl	x6, x6, x1
   57328:	cmp	x6, #0x0
   5732c:	lsl	x6, x3, x1
   57330:	cset	x1, ne  // ne = any
   57334:	orr	x6, x6, x4
   57338:	lsr	x0, x3, x0
   5733c:	orr	x6, x6, x1
   57340:	add	x2, x2, x0
   57344:	adds	x6, x6, x10
   57348:	mov	x1, x13
   5734c:	cinc	x3, x2, cs  // cs = hs, nlast
   57350:	b	57248 <mpfr_free_pool@@Base+0x1ac4>
   57354:	mov	w0, #0x10                  	// #16
   57358:	cbz	x14, 57364 <mpfr_free_pool@@Base+0x1be0>
   5735c:	adds	x6, x6, #0x8
   57360:	cinc	x3, x3, cs  // cs = hs, nlast
   57364:	and	x2, x3, #0x8000000000000
   57368:	cbz	w4, 57058 <mpfr_free_pool@@Base+0x18d4>
   5736c:	orr	w0, w0, #0x8
   57370:	b	57058 <mpfr_free_pool@@Base+0x18d4>
   57374:	mov	w0, #0x10                  	// #16
   57378:	cbnz	x14, 57364 <mpfr_free_pool@@Base+0x1be0>
   5737c:	b	5735c <mpfr_free_pool@@Base+0x1bd8>
   57380:	and	x2, x6, #0xf
   57384:	mov	w0, #0x10                  	// #16
   57388:	cmp	x2, #0x4
   5738c:	b.eq	57364 <mpfr_free_pool@@Base+0x1be0>  // b.none
   57390:	adds	x6, x6, #0x4
   57394:	cinc	x3, x3, cs  // cs = hs, nlast
   57398:	b	57364 <mpfr_free_pool@@Base+0x1be0>
   5739c:	mov	x6, x5
   573a0:	and	x3, x3, #0xfff7ffffffffffff
   573a4:	sub	x1, x1, x2
   573a8:	orr	x7, x6, x3
   573ac:	and	x0, x6, #0x7
   573b0:	mov	w4, #0x0                   	// #0
   573b4:	cbz	x1, 571c0 <mpfr_free_pool@@Base+0x1a3c>
   573b8:	b	5702c <mpfr_free_pool@@Base+0x18a8>
   573bc:	clz	x3, x6
   573c0:	add	w0, w3, #0x34
   573c4:	cmp	w0, #0x3f
   573c8:	b.le	56fc0 <mpfr_free_pool@@Base+0x183c>
   573cc:	sub	w3, w3, #0xc
   573d0:	lsl	x3, x6, x3
   573d4:	b	56fd4 <mpfr_free_pool@@Base+0x1850>
   573d8:	orr	x0, x3, x6
   573dc:	cbz	x0, 57470 <mpfr_free_pool@@Base+0x1cec>
   573e0:	lsr	x0, x3, #50
   573e4:	mov	x1, #0x7fff                	// #32767
   573e8:	eor	x0, x0, #0x1
   573ec:	and	w0, w0, #0x1
   573f0:	b	57108 <mpfr_free_pool@@Base+0x1984>
   573f4:	orr	x2, x2, x10
   573f8:	cmp	x2, #0x0
   573fc:	cset	x4, ne  // ne = any
   57400:	b	56fa4 <mpfr_free_pool@@Base+0x1820>
   57404:	mov	x0, #0x7fff                	// #32767
   57408:	cmp	x1, x0
   5740c:	b.ne	571b0 <mpfr_free_pool@@Base+0x1a2c>  // b.any
   57410:	orr	x0, x3, x6
   57414:	cbnz	x0, 573e0 <mpfr_free_pool@@Base+0x1c5c>
   57418:	mov	x5, #0x0                   	// #0
   5741c:	mov	x7, #0x0                   	// #0
   57420:	mov	w0, #0x0                   	// #0
   57424:	b	5711c <mpfr_free_pool@@Base+0x1998>
   57428:	and	x2, x3, #0x8000000000000
   5742c:	mov	w0, #0x0                   	// #0
   57430:	cbz	w4, 57058 <mpfr_free_pool@@Base+0x18d4>
   57434:	mov	w0, #0x0                   	// #0
   57438:	tbz	w12, #11, 57058 <mpfr_free_pool@@Base+0x18d4>
   5743c:	orr	w0, w0, #0x8
   57440:	b	57058 <mpfr_free_pool@@Base+0x18d4>
   57444:	orr	x1, x3, x6
   57448:	cbz	x1, 577d0 <mpfr_free_pool@@Base+0x204c>
   5744c:	cmn	w0, #0x1
   57450:	b.eq	57920 <mpfr_free_pool@@Base+0x219c>  // b.none
   57454:	mov	x1, #0x7fff                	// #32767
   57458:	mvn	w0, w0
   5745c:	cmp	x13, x1
   57460:	b.ne	57308 <mpfr_free_pool@@Base+0x1b84>  // b.any
   57464:	orr	x0, x2, x10
   57468:	cbnz	x0, 570f0 <mpfr_free_pool@@Base+0x196c>
   5746c:	nop
   57470:	mov	x2, #0x0                   	// #0
   57474:	fmov	d0, x2
   57478:	lsl	x0, x11, #63
   5747c:	orr	x3, x0, #0x7fff000000000000
   57480:	fmov	v0.d[1], x3
   57484:	b	57094 <mpfr_free_pool@@Base+0x1910>
   57488:	add	x7, x1, #0x1
   5748c:	tst	x7, #0x7ffe
   57490:	b.ne	57614 <mpfr_free_pool@@Base+0x1e90>  // b.any
   57494:	orr	x11, x3, x6
   57498:	cbnz	x1, 5779c <mpfr_free_pool@@Base+0x2018>
   5749c:	orr	x7, x2, x10
   574a0:	cbz	x11, 57800 <mpfr_free_pool@@Base+0x207c>
   574a4:	cbz	x7, 576f8 <mpfr_free_pool@@Base+0x1f74>
   574a8:	adds	x6, x6, x10
   574ac:	adc	x3, x2, x3
   574b0:	tbz	x3, #51, 57018 <mpfr_free_pool@@Base+0x1894>
   574b4:	and	x3, x3, #0xfff7ffffffffffff
   574b8:	and	x0, x6, #0x7
   574bc:	mov	w4, #0x0                   	// #0
   574c0:	mov	x1, #0x1                   	// #1
   574c4:	b	5702c <mpfr_free_pool@@Base+0x18a8>
   574c8:	subs	x9, x6, x10
   574cc:	cmp	x6, x10
   574d0:	sbc	x5, x3, x2
   574d4:	tbnz	x5, #51, 57640 <mpfr_free_pool@@Base+0x1ebc>
   574d8:	orr	x7, x9, x5
   574dc:	cbnz	x7, 57750 <mpfr_free_pool@@Base+0x1fcc>
   574e0:	and	x12, x12, #0xc00000
   574e4:	mov	x5, #0x0                   	// #0
   574e8:	cmp	x12, #0x800, lsl #12
   574ec:	mov	x1, #0x0                   	// #0
   574f0:	cset	w8, eq  // eq = none
   574f4:	b	571d0 <mpfr_free_pool@@Base+0x1a4c>
   574f8:	mov	x1, #0x7fff                	// #32767
   574fc:	neg	w0, w0
   57500:	orr	x3, x3, #0x8000000000000
   57504:	cmp	x13, x1
   57508:	b.eq	570e4 <mpfr_free_pool@@Base+0x1960>  // b.none
   5750c:	cmp	w0, #0x74
   57510:	b.gt	575c8 <mpfr_free_pool@@Base+0x1e44>
   57514:	cmp	w0, #0x3f
   57518:	b.gt	57768 <mpfr_free_pool@@Base+0x1fe4>
   5751c:	mov	w1, #0x40                  	// #64
   57520:	sub	w1, w1, w0
   57524:	lsr	x5, x6, x0
   57528:	lsl	x6, x6, x1
   5752c:	cmp	x6, #0x0
   57530:	lsl	x6, x3, x1
   57534:	cset	x1, ne  // ne = any
   57538:	orr	x6, x6, x5
   5753c:	lsr	x0, x3, x0
   57540:	orr	x6, x6, x1
   57544:	sub	x2, x2, x0
   57548:	b	575d4 <mpfr_free_pool@@Base+0x1e50>
   5754c:	orr	x2, x2, x10
   57550:	cmp	x2, #0x0
   57554:	cset	x0, ne  // ne = any
   57558:	adds	x6, x0, x6
   5755c:	cinc	x3, x3, cs  // cs = hs, nlast
   57560:	b	57248 <mpfr_free_pool@@Base+0x1ac4>
   57564:	mov	w2, #0x80                  	// #128
   57568:	sub	w2, w2, w0
   5756c:	cmp	w0, #0x40
   57570:	sub	w6, w1, #0x3f
   57574:	lsl	x0, x3, x2
   57578:	orr	x0, x5, x0
   5757c:	csel	x5, x0, x5, ne  // ne = any
   57580:	lsr	x6, x3, x6
   57584:	cmp	x5, #0x0
   57588:	mov	x3, #0x0                   	// #0
   5758c:	cset	x0, ne  // ne = any
   57590:	orr	x6, x0, x6
   57594:	mov	x7, x6
   57598:	b	5701c <mpfr_free_pool@@Base+0x1898>
   5759c:	mov	w5, #0x80                  	// #128
   575a0:	sub	w5, w5, w0
   575a4:	subs	w0, w0, #0x40
   575a8:	lsl	x5, x2, x5
   575ac:	orr	x5, x10, x5
   575b0:	csel	x10, x5, x10, ne  // ne = any
   575b4:	lsr	x2, x2, x0
   575b8:	cmp	x10, #0x0
   575bc:	cset	x4, ne  // ne = any
   575c0:	orr	x4, x4, x2
   575c4:	b	56fa4 <mpfr_free_pool@@Base+0x1820>
   575c8:	orr	x3, x3, x6
   575cc:	cmp	x3, #0x0
   575d0:	cset	x6, ne  // ne = any
   575d4:	subs	x6, x10, x6
   575d8:	mov	x1, x13
   575dc:	sbc	x3, x2, xzr
   575e0:	mov	x14, x4
   575e4:	b	56fac <mpfr_free_pool@@Base+0x1828>
   575e8:	mov	w4, #0x80                  	// #128
   575ec:	sub	w4, w4, w0
   575f0:	subs	w0, w0, #0x40
   575f4:	lsl	x4, x2, x4
   575f8:	orr	x4, x10, x4
   575fc:	csel	x10, x4, x10, ne  // ne = any
   57600:	lsr	x2, x2, x0
   57604:	cmp	x10, #0x0
   57608:	cset	x0, ne  // ne = any
   5760c:	orr	x0, x0, x2
   57610:	b	57558 <mpfr_free_pool@@Base+0x1dd4>
   57614:	mov	x0, #0x7fff                	// #32767
   57618:	cmp	x7, x0
   5761c:	b.eq	57850 <mpfr_free_pool@@Base+0x20cc>  // b.none
   57620:	adds	x6, x6, x10
   57624:	mov	x1, x7
   57628:	adc	x3, x2, x3
   5762c:	mov	w4, #0x0                   	// #0
   57630:	ubfx	x0, x6, #1, #3
   57634:	extr	x6, x3, x6, #1
   57638:	lsr	x3, x3, #1
   5763c:	b	5702c <mpfr_free_pool@@Base+0x18a8>
   57640:	cmp	x10, x6
   57644:	mov	w8, w4
   57648:	sbc	x5, x2, x3
   5764c:	sub	x6, x10, x6
   57650:	mov	x14, x4
   57654:	b	56fb4 <mpfr_free_pool@@Base+0x1830>
   57658:	mov	x12, #0x7fff                	// #32767
   5765c:	cmp	x1, x12
   57660:	b.eq	57688 <mpfr_free_pool@@Base+0x1f04>  // b.none
   57664:	cmp	x13, x12
   57668:	b.eq	5787c <mpfr_free_pool@@Base+0x20f8>  // b.none
   5766c:	cbnz	x11, 576a0 <mpfr_free_pool@@Base+0x1f1c>
   57670:	cbnz	x7, 5788c <mpfr_free_pool@@Base+0x2108>
   57674:	mov	x5, #0xffffffffffffffff    	// #-1
   57678:	mov	x7, #0xffffffffffff        	// #281474976710655
   5767c:	mov	w0, #0x1                   	// #1
   57680:	mov	w8, #0x0                   	// #0
   57684:	b	57124 <mpfr_free_pool@@Base+0x19a0>
   57688:	cbz	x11, 57874 <mpfr_free_pool@@Base+0x20f0>
   5768c:	lsr	x0, x3, #50
   57690:	cmp	x13, x1
   57694:	eor	x0, x0, #0x1
   57698:	and	w0, w0, #0x1
   5769c:	b.eq	5787c <mpfr_free_pool@@Base+0x20f8>  // b.none
   576a0:	cbz	x7, 57104 <mpfr_free_pool@@Base+0x1980>
   576a4:	bfi	x5, x3, #61, #3
   576a8:	lsr	x7, x3, #3
   576ac:	tbz	x3, #50, 576c8 <mpfr_free_pool@@Base+0x1f44>
   576b0:	lsr	x1, x2, #3
   576b4:	tbnz	x2, #50, 576c8 <mpfr_free_pool@@Base+0x1f44>
   576b8:	mov	x5, x9
   576bc:	mov	w8, w4
   576c0:	bfi	x5, x2, #61, #3
   576c4:	mov	x7, x1
   576c8:	extr	x7, x7, x5, #61
   576cc:	bfi	x5, x7, #61, #3
   576d0:	lsr	x7, x7, #3
   576d4:	b	5711c <mpfr_free_pool@@Base+0x1998>
   576d8:	subs	x6, x6, x10
   576dc:	sbc	x3, x3, x2
   576e0:	b	56fac <mpfr_free_pool@@Base+0x1828>
   576e4:	cbz	x7, 577ec <mpfr_free_pool@@Base+0x2068>
   576e8:	mov	x3, x2
   576ec:	mov	x6, x10
   576f0:	mov	w8, w4
   576f4:	mov	x14, x4
   576f8:	mov	x1, #0x0                   	// #0
   576fc:	mov	x2, #0x0                   	// #0
   57700:	b	57434 <mpfr_free_pool@@Base+0x1cb0>
   57704:	ands	x2, x12, #0xc00000
   57708:	b.eq	57794 <mpfr_free_pool@@Base+0x2010>  // b.none
   5770c:	cmp	x2, #0x400, lsl #12
   57710:	eor	w0, w8, #0x1
   57714:	cset	w1, eq  // eq = none
   57718:	tst	w1, w0
   5771c:	b.ne	57868 <mpfr_free_pool@@Base+0x20e4>  // b.any
   57720:	cmp	x2, #0x800, lsl #12
   57724:	b.eq	578bc <mpfr_free_pool@@Base+0x2138>  // b.none
   57728:	cmp	x2, #0x400, lsl #12
   5772c:	mov	w0, #0x14                  	// #20
   57730:	b.ne	57280 <mpfr_free_pool@@Base+0x1afc>  // b.any
   57734:	mov	x3, #0xffffffffffffffff    	// #-1
   57738:	mov	x1, #0x7ffe                	// #32766
   5773c:	mov	x6, x3
   57740:	mov	w4, #0x0                   	// #0
   57744:	mov	w0, #0x14                  	// #20
   57748:	cbnz	x14, 57364 <mpfr_free_pool@@Base+0x1be0>
   5774c:	b	5735c <mpfr_free_pool@@Base+0x1bd8>
   57750:	mov	x6, x9
   57754:	b	56fb4 <mpfr_free_pool@@Base+0x1830>
   57758:	orr	x3, x3, x6
   5775c:	cmp	x3, #0x0
   57760:	cset	x6, ne  // ne = any
   57764:	b	57344 <mpfr_free_pool@@Base+0x1bc0>
   57768:	mov	w1, #0x80                  	// #128
   5776c:	sub	w1, w1, w0
   57770:	subs	w0, w0, #0x40
   57774:	lsl	x1, x3, x1
   57778:	orr	x1, x6, x1
   5777c:	csel	x6, x1, x6, ne  // ne = any
   57780:	lsr	x3, x3, x0
   57784:	cmp	x6, #0x0
   57788:	cset	x6, ne  // ne = any
   5778c:	orr	x6, x6, x3
   57790:	b	575d4 <mpfr_free_pool@@Base+0x1e50>
   57794:	mov	w0, #0x14                  	// #20
   57798:	b	572c4 <mpfr_free_pool@@Base+0x1b40>
   5779c:	mov	x7, #0x7fff                	// #32767
   577a0:	cmp	x1, x7
   577a4:	b.eq	578d8 <mpfr_free_pool@@Base+0x2154>  // b.none
   577a8:	cmp	x13, x7
   577ac:	b.eq	5793c <mpfr_free_pool@@Base+0x21b8>  // b.none
   577b0:	cbnz	x11, 578f0 <mpfr_free_pool@@Base+0x216c>
   577b4:	mov	x3, x2
   577b8:	mov	x6, x10
   577bc:	mov	x1, #0x7fff                	// #32767
   577c0:	b	57108 <mpfr_free_pool@@Base+0x1984>
   577c4:	orr	x0, x2, x10
   577c8:	cbz	x0, 57418 <mpfr_free_pool@@Base+0x1c94>
   577cc:	b	570f0 <mpfr_free_pool@@Base+0x196c>
   577d0:	mov	x0, #0x7fff                	// #32767
   577d4:	cmp	x13, x0
   577d8:	b.eq	577c4 <mpfr_free_pool@@Base+0x2040>  // b.none
   577dc:	mov	x3, x2
   577e0:	mov	x6, x10
   577e4:	mov	x1, x13
   577e8:	b	571b0 <mpfr_free_pool@@Base+0x1a2c>
   577ec:	and	x12, x12, #0xc00000
   577f0:	mov	x5, #0x0                   	// #0
   577f4:	cmp	x12, #0x800, lsl #12
   577f8:	cset	w8, eq  // eq = none
   577fc:	b	571d0 <mpfr_free_pool@@Base+0x1a4c>
   57800:	mov	x3, x2
   57804:	mov	x6, x10
   57808:	b	5701c <mpfr_free_pool@@Base+0x1898>
   5780c:	mov	w1, #0x80                  	// #128
   57810:	sub	w1, w1, w0
   57814:	subs	w0, w0, #0x40
   57818:	lsl	x1, x3, x1
   5781c:	orr	x1, x6, x1
   57820:	csel	x6, x1, x6, ne  // ne = any
   57824:	lsr	x3, x3, x0
   57828:	cmp	x6, #0x0
   5782c:	cset	x6, ne  // ne = any
   57830:	orr	x6, x6, x3
   57834:	b	57344 <mpfr_free_pool@@Base+0x1bc0>
   57838:	cmp	x10, x6
   5783c:	mov	x1, x13
   57840:	sbc	x3, x2, x3
   57844:	sub	x6, x10, x6
   57848:	mov	x14, x4
   5784c:	b	56fac <mpfr_free_pool@@Base+0x1828>
   57850:	ands	x2, x12, #0xc00000
   57854:	b.eq	57794 <mpfr_free_pool@@Base+0x2010>  // b.none
   57858:	cmp	x2, #0x400, lsl #12
   5785c:	eor	w0, w8, #0x1
   57860:	csel	w0, w0, wzr, eq  // eq = none
   57864:	cbz	w0, 57720 <mpfr_free_pool@@Base+0x1f9c>
   57868:	mov	w0, #0x14                  	// #20
   5786c:	mov	x11, #0x0                   	// #0
   57870:	b	572c4 <mpfr_free_pool@@Base+0x1b40>
   57874:	cmp	x13, x1
   57878:	b.ne	57670 <mpfr_free_pool@@Base+0x1eec>  // b.any
   5787c:	cbz	x7, 57930 <mpfr_free_pool@@Base+0x21ac>
   57880:	tst	x2, #0x4000000000000
   57884:	csinc	w0, w0, wzr, ne  // ne = any
   57888:	cbnz	x11, 576a4 <mpfr_free_pool@@Base+0x1f20>
   5788c:	mov	w8, w4
   57890:	mov	x3, x2
   57894:	mov	x6, x10
   57898:	mov	x1, #0x7fff                	// #32767
   5789c:	b	57108 <mpfr_free_pool@@Base+0x1984>
   578a0:	orr	x7, x9, x5
   578a4:	cbz	x7, 577ec <mpfr_free_pool@@Base+0x2068>
   578a8:	mov	x3, x5
   578ac:	and	x0, x9, #0x7
   578b0:	mov	x6, x9
   578b4:	mov	w4, #0x1                   	// #1
   578b8:	b	5702c <mpfr_free_pool@@Base+0x18a8>
   578bc:	cbnz	x11, 57950 <mpfr_free_pool@@Base+0x21cc>
   578c0:	mov	x3, #0xffffffffffffffff    	// #-1
   578c4:	mov	w8, #0x0                   	// #0
   578c8:	mov	x6, x3
   578cc:	mov	x1, #0x7ffe                	// #32766
   578d0:	mov	w0, #0x14                  	// #20
   578d4:	b	5705c <mpfr_free_pool@@Base+0x18d8>
   578d8:	cbz	x11, 5795c <mpfr_free_pool@@Base+0x21d8>
   578dc:	lsr	x0, x3, #50
   578e0:	cmp	x13, x1
   578e4:	eor	x0, x0, #0x1
   578e8:	and	w0, w0, #0x1
   578ec:	b.eq	5797c <mpfr_free_pool@@Base+0x21f8>  // b.none
   578f0:	orr	x10, x2, x10
   578f4:	cbz	x10, 57104 <mpfr_free_pool@@Base+0x1980>
   578f8:	bfi	x5, x3, #61, #3
   578fc:	lsr	x7, x3, #3
   57900:	tbz	x3, #50, 576c8 <mpfr_free_pool@@Base+0x1f44>
   57904:	lsr	x1, x2, #3
   57908:	tbnz	x2, #50, 576c8 <mpfr_free_pool@@Base+0x1f44>
   5790c:	and	x5, x9, #0x1fffffffffffffff
   57910:	mov	w8, w4
   57914:	orr	x5, x5, x2, lsl #61
   57918:	mov	x7, x1
   5791c:	b	576c8 <mpfr_free_pool@@Base+0x1f44>
   57920:	adds	x6, x6, x10
   57924:	mov	x1, x13
   57928:	adc	x3, x2, x3
   5792c:	b	57248 <mpfr_free_pool@@Base+0x1ac4>
   57930:	cbz	x11, 57674 <mpfr_free_pool@@Base+0x1ef0>
   57934:	mov	x1, #0x7fff                	// #32767
   57938:	b	57108 <mpfr_free_pool@@Base+0x1984>
   5793c:	orr	x1, x2, x10
   57940:	cbnz	x1, 5796c <mpfr_free_pool@@Base+0x21e8>
   57944:	cbz	x11, 57418 <mpfr_free_pool@@Base+0x1c94>
   57948:	mov	x1, #0x7fff                	// #32767
   5794c:	b	57108 <mpfr_free_pool@@Base+0x1984>
   57950:	mov	w0, #0x14                  	// #20
   57954:	mov	x11, #0x1                   	// #1
   57958:	b	572c4 <mpfr_free_pool@@Base+0x1b40>
   5795c:	cmp	x13, x1
   57960:	b.ne	577b4 <mpfr_free_pool@@Base+0x2030>  // b.any
   57964:	orr	x1, x2, x10
   57968:	cbz	x1, 57418 <mpfr_free_pool@@Base+0x1c94>
   5796c:	tst	x2, #0x4000000000000
   57970:	csinc	w0, w0, wzr, ne  // ne = any
   57974:	cbnz	x11, 578f8 <mpfr_free_pool@@Base+0x2174>
   57978:	b	577b4 <mpfr_free_pool@@Base+0x2030>
   5797c:	orr	x1, x2, x10
   57980:	cbnz	x1, 5796c <mpfr_free_pool@@Base+0x21e8>
   57984:	mov	x1, #0x7fff                	// #32767
   57988:	b	57108 <mpfr_free_pool@@Base+0x1984>
   5798c:	mov	x5, #0x0                   	// #0
   57990:	mov	w1, #0x7fff                	// #32767
   57994:	mov	x7, #0x0                   	// #0
   57998:	b	57078 <mpfr_free_pool@@Base+0x18f4>
   5799c:	nop
   579a0:	mrs	x0, fpcr
   579a4:	fmov	x0, d0
   579a8:	ubfx	x1, x0, #52, #11
   579ac:	lsr	x4, x0, #63
   579b0:	add	x2, x1, #0x1
   579b4:	and	w4, w4, #0xff
   579b8:	tst	x2, #0x7fe
   579bc:	ubfx	x0, x0, #0, #52
   579c0:	b.eq	579f4 <mpfr_free_pool@@Base+0x2270>  // b.none
   579c4:	lsr	x5, x0, #4
   579c8:	mov	x3, #0x0                   	// #0
   579cc:	and	x5, x5, #0xffffffffffff
   579d0:	mov	w2, #0x3c00                	// #15360
   579d4:	add	w1, w1, w2
   579d8:	lsl	x0, x0, #60
   579dc:	bfxil	x3, x5, #0, #48
   579e0:	fmov	d0, x0
   579e4:	bfi	x3, x1, #48, #15
   579e8:	bfi	x3, x4, #63, #1
   579ec:	fmov	v0.d[1], x3
   579f0:	ret
   579f4:	cbnz	x1, 57a48 <mpfr_free_pool@@Base+0x22c4>
   579f8:	cbz	x0, 57a94 <mpfr_free_pool@@Base+0x2310>
   579fc:	clz	x2, x0
   57a00:	cmp	w2, #0xe
   57a04:	b.gt	57ae0 <mpfr_free_pool@@Base+0x235c>
   57a08:	add	w1, w2, #0x31
   57a0c:	mov	w5, #0xf                   	// #15
   57a10:	sub	w5, w5, w2
   57a14:	lsr	x5, x0, x5
   57a18:	lsl	x0, x0, x1
   57a1c:	and	x5, x5, #0xffffffffffff
   57a20:	mov	w1, #0x3c0c                	// #15372
   57a24:	mov	x3, #0x0                   	// #0
   57a28:	sub	w1, w1, w2
   57a2c:	and	w1, w1, #0x7fff
   57a30:	bfxil	x3, x5, #0, #48
   57a34:	fmov	d0, x0
   57a38:	bfi	x3, x1, #48, #15
   57a3c:	bfi	x3, x4, #63, #1
   57a40:	fmov	v0.d[1], x3
   57a44:	ret
   57a48:	cbz	x0, 57ab8 <mpfr_free_pool@@Base+0x2334>
   57a4c:	lsr	x1, x0, #4
   57a50:	mov	x3, #0x0                   	// #0
   57a54:	orr	x1, x1, #0x800000000000
   57a58:	lsl	x2, x0, #60
   57a5c:	fmov	d0, x2
   57a60:	bfxil	x3, x1, #0, #48
   57a64:	orr	x3, x3, #0x7fff000000000000
   57a68:	bfi	x3, x4, #63, #1
   57a6c:	fmov	v0.d[1], x3
   57a70:	tbnz	x0, #51, 57adc <mpfr_free_pool@@Base+0x2358>
   57a74:	stp	x29, x30, [sp, #-32]!
   57a78:	mov	w0, #0x1                   	// #1
   57a7c:	mov	x29, sp
   57a80:	str	q0, [sp, #16]
   57a84:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   57a88:	ldr	q0, [sp, #16]
   57a8c:	ldp	x29, x30, [sp], #32
   57a90:	ret
   57a94:	mov	x5, #0x0                   	// #0
   57a98:	mov	x3, #0x0                   	// #0
   57a9c:	bfxil	x3, x5, #0, #48
   57aa0:	mov	w1, #0x0                   	// #0
   57aa4:	fmov	d0, x0
   57aa8:	bfi	x3, x1, #48, #15
   57aac:	bfi	x3, x4, #63, #1
   57ab0:	fmov	v0.d[1], x3
   57ab4:	ret
   57ab8:	mov	x5, #0x0                   	// #0
   57abc:	mov	x3, #0x0                   	// #0
   57ac0:	bfxil	x3, x5, #0, #48
   57ac4:	mov	w1, #0x7fff                	// #32767
   57ac8:	fmov	d0, x0
   57acc:	bfi	x3, x1, #48, #15
   57ad0:	bfi	x3, x4, #63, #1
   57ad4:	fmov	v0.d[1], x3
   57ad8:	ret
   57adc:	ret
   57ae0:	sub	w5, w2, #0xf
   57ae4:	lsl	x5, x0, x5
   57ae8:	mov	x0, #0x0                   	// #0
   57aec:	b	57a1c <mpfr_free_pool@@Base+0x2298>
   57af0:	stp	x29, x30, [sp, #-48]!
   57af4:	mov	x29, sp
   57af8:	str	x19, [sp, #16]
   57afc:	str	q0, [sp, #32]
   57b00:	ldp	x3, x0, [sp, #32]
   57b04:	mrs	x6, fpcr
   57b08:	ubfx	x2, x0, #48, #15
   57b0c:	lsr	x4, x0, #63
   57b10:	add	x1, x2, #0x1
   57b14:	ubfiz	x0, x0, #3, #48
   57b18:	tst	x1, #0x7ffe
   57b1c:	and	w4, w4, #0xff
   57b20:	orr	x0, x0, x3, lsr #61
   57b24:	lsl	x5, x3, #3
   57b28:	b.eq	57ba8 <mpfr_free_pool@@Base+0x2424>  // b.none
   57b2c:	mov	x1, #0xffffffffffffc400    	// #-15360
   57b30:	add	x2, x2, x1
   57b34:	cmp	x2, #0x7fe
   57b38:	b.le	57bec <mpfr_free_pool@@Base+0x2468>
   57b3c:	ands	x0, x6, #0xc00000
   57b40:	b.eq	57c84 <mpfr_free_pool@@Base+0x2500>  // b.none
   57b44:	cmp	x0, #0x400, lsl #12
   57b48:	b.eq	57db8 <mpfr_free_pool@@Base+0x2634>  // b.none
   57b4c:	cmp	x0, #0x800, lsl #12
   57b50:	csel	w7, w4, wzr, eq  // eq = none
   57b54:	cbnz	w7, 57c84 <mpfr_free_pool@@Base+0x2500>
   57b58:	mov	x1, #0xffffffffffffffff    	// #-1
   57b5c:	mov	x2, #0x7fe                 	// #2046
   57b60:	mov	w0, #0x14                  	// #20
   57b64:	b.ne	57c30 <mpfr_free_pool@@Base+0x24ac>  // b.any
   57b68:	cmp	w4, #0x0
   57b6c:	add	x3, x1, #0x8
   57b70:	csel	x1, x3, x1, ne  // ne = any
   57b74:	and	x3, x1, #0x80000000000000
   57b78:	cbnz	w7, 57c38 <mpfr_free_pool@@Base+0x24b4>
   57b7c:	cbnz	x3, 57c40 <mpfr_free_pool@@Base+0x24bc>
   57b80:	lsr	x1, x1, #3
   57b84:	and	w3, w2, #0x7ff
   57b88:	and	x4, x4, #0xff
   57b8c:	bfi	x1, x3, #52, #12
   57b90:	orr	x19, x1, x4, lsl #63
   57b94:	bl	57e00 <mpfr_free_pool@@Base+0x267c>
   57b98:	fmov	d0, x19
   57b9c:	ldr	x19, [sp, #16]
   57ba0:	ldp	x29, x30, [sp], #48
   57ba4:	ret
   57ba8:	orr	x1, x0, x5
   57bac:	cbnz	x2, 57be0 <mpfr_free_pool@@Base+0x245c>
   57bb0:	cbnz	x1, 57c5c <mpfr_free_pool@@Base+0x24d8>
   57bb4:	mov	w0, #0x0                   	// #0
   57bb8:	and	w2, w2, #0x7ff
   57bbc:	mov	x1, #0x0                   	// #0
   57bc0:	and	x4, x4, #0xff
   57bc4:	bfi	x1, x2, #52, #12
   57bc8:	orr	x19, x1, x4, lsl #63
   57bcc:	cbnz	w0, 57b94 <mpfr_free_pool@@Base+0x2410>
   57bd0:	fmov	d0, x19
   57bd4:	ldr	x19, [sp, #16]
   57bd8:	ldp	x29, x30, [sp], #48
   57bdc:	ret
   57be0:	cbnz	x1, 57c90 <mpfr_free_pool@@Base+0x250c>
   57be4:	mov	x2, #0x7ff                 	// #2047
   57be8:	b	57bb4 <mpfr_free_pool@@Base+0x2430>
   57bec:	cmp	x2, #0x0
   57bf0:	b.le	57cb8 <mpfr_free_pool@@Base+0x2534>
   57bf4:	cmp	xzr, x3, lsl #7
   57bf8:	mov	w7, #0x0                   	// #0
   57bfc:	cset	x1, ne  // ne = any
   57c00:	orr	x5, x1, x5, lsr #60
   57c04:	orr	x1, x5, x0, lsl #4
   57c08:	mov	w0, #0x0                   	// #0
   57c0c:	tst	x5, #0x7
   57c10:	b.eq	57d70 <mpfr_free_pool@@Base+0x25ec>  // b.none
   57c14:	and	x3, x6, #0xc00000
   57c18:	cmp	x3, #0x400, lsl #12
   57c1c:	b.eq	57c74 <mpfr_free_pool@@Base+0x24f0>  // b.none
   57c20:	cmp	x3, #0x800, lsl #12
   57c24:	mov	w0, #0x10                  	// #16
   57c28:	b.eq	57b68 <mpfr_free_pool@@Base+0x23e4>  // b.none
   57c2c:	cbz	x3, 57d7c <mpfr_free_pool@@Base+0x25f8>
   57c30:	and	x3, x1, #0x80000000000000
   57c34:	cbz	w7, 57c3c <mpfr_free_pool@@Base+0x24b8>
   57c38:	orr	w0, w0, #0x8
   57c3c:	cbz	x3, 57d70 <mpfr_free_pool@@Base+0x25ec>
   57c40:	cmp	x2, #0x7fe
   57c44:	add	x2, x2, #0x1
   57c48:	b.eq	57d18 <mpfr_free_pool@@Base+0x2594>  // b.none
   57c4c:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   57c50:	and	w2, w2, #0x7ff
   57c54:	and	x1, x3, x1, lsr #3
   57c58:	b	57bc0 <mpfr_free_pool@@Base+0x243c>
   57c5c:	and	x3, x6, #0xc00000
   57c60:	mov	w7, #0x1                   	// #1
   57c64:	cmp	x3, #0x400, lsl #12
   57c68:	mov	x2, #0x0                   	// #0
   57c6c:	mov	x1, #0x1                   	// #1
   57c70:	b.ne	57c20 <mpfr_free_pool@@Base+0x249c>  // b.any
   57c74:	cbnz	w4, 57c7c <mpfr_free_pool@@Base+0x24f8>
   57c78:	add	x1, x1, #0x8
   57c7c:	mov	w0, #0x10                  	// #16
   57c80:	b	57b74 <mpfr_free_pool@@Base+0x23f0>
   57c84:	mov	x2, #0x7ff                 	// #2047
   57c88:	mov	w0, #0x14                  	// #20
   57c8c:	b	57bb8 <mpfr_free_pool@@Base+0x2434>
   57c90:	mov	x3, #0x7fff                	// #32767
   57c94:	extr	x1, x0, x5, #60
   57c98:	lsr	x0, x0, #50
   57c9c:	cmp	x2, x3
   57ca0:	lsr	x1, x1, #3
   57ca4:	eor	w0, w0, #0x1
   57ca8:	orr	x1, x1, #0x8000000000000
   57cac:	csel	w0, w0, wzr, eq  // eq = none
   57cb0:	mov	w2, #0x7ff                 	// #2047
   57cb4:	b	57bc0 <mpfr_free_pool@@Base+0x243c>
   57cb8:	cmn	x2, #0x34
   57cbc:	b.lt	57c5c <mpfr_free_pool@@Base+0x24d8>  // b.tstop
   57cc0:	mov	x3, #0x3d                  	// #61
   57cc4:	sub	x7, x3, x2
   57cc8:	orr	x0, x0, #0x8000000000000
   57ccc:	cmp	x7, #0x3f
   57cd0:	b.le	57d90 <mpfr_free_pool@@Base+0x260c>
   57cd4:	add	w1, w2, #0x43
   57cd8:	cmp	x7, #0x40
   57cdc:	mov	w3, #0xfffffffd            	// #-3
   57ce0:	sub	w2, w3, w2
   57ce4:	lsl	x1, x0, x1
   57ce8:	orr	x1, x5, x1
   57cec:	csel	x5, x1, x5, ne  // ne = any
   57cf0:	lsr	x0, x0, x2
   57cf4:	cmp	x5, #0x0
   57cf8:	cset	x1, ne  // ne = any
   57cfc:	orr	x1, x1, x0
   57d00:	cmp	x1, #0x0
   57d04:	cset	w7, ne  // ne = any
   57d08:	tst	x1, #0x7
   57d0c:	b.eq	57d54 <mpfr_free_pool@@Base+0x25d0>  // b.none
   57d10:	mov	x2, #0x0                   	// #0
   57d14:	b	57c14 <mpfr_free_pool@@Base+0x2490>
   57d18:	mov	w3, w2
   57d1c:	ands	x1, x6, #0xc00000
   57d20:	b.eq	57d48 <mpfr_free_pool@@Base+0x25c4>  // b.none
   57d24:	cmp	x1, #0x400, lsl #12
   57d28:	b.eq	57dd0 <mpfr_free_pool@@Base+0x264c>  // b.none
   57d2c:	cmp	x1, #0x800, lsl #12
   57d30:	mov	w5, #0x7fe                 	// #2046
   57d34:	csel	w1, w4, wzr, eq  // eq = none
   57d38:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   57d3c:	cmp	w1, #0x0
   57d40:	csel	w3, w3, w5, ne  // ne = any
   57d44:	csel	x1, xzr, x2, ne  // ne = any
   57d48:	mov	w2, #0x14                  	// #20
   57d4c:	orr	w0, w0, w2
   57d50:	b	57b88 <mpfr_free_pool@@Base+0x2404>
   57d54:	and	x3, x1, #0x80000000000000
   57d58:	cbnz	x1, 57de8 <mpfr_free_pool@@Base+0x2664>
   57d5c:	nop
   57d60:	mov	w0, #0x0                   	// #0
   57d64:	mov	x2, #0x1                   	// #1
   57d68:	cbnz	x3, 57c4c <mpfr_free_pool@@Base+0x24c8>
   57d6c:	mov	x2, #0x0                   	// #0
   57d70:	lsr	x1, x1, #3
   57d74:	and	w2, w2, #0x7ff
   57d78:	b	57bc0 <mpfr_free_pool@@Base+0x243c>
   57d7c:	and	x3, x1, #0xf
   57d80:	cmp	x3, #0x4
   57d84:	add	x3, x1, #0x4
   57d88:	csel	x1, x3, x1, ne  // ne = any
   57d8c:	b	57b74 <mpfr_free_pool@@Base+0x23f0>
   57d90:	add	w1, w2, #0x3
   57d94:	sub	w2, w3, w2
   57d98:	lsl	x3, x5, x1
   57d9c:	cmp	x3, #0x0
   57da0:	cset	x3, ne  // ne = any
   57da4:	lsr	x2, x5, x2
   57da8:	orr	x2, x2, x3
   57dac:	lsl	x0, x0, x1
   57db0:	orr	x1, x0, x2
   57db4:	b	57d00 <mpfr_free_pool@@Base+0x257c>
   57db8:	cbz	w4, 57c84 <mpfr_free_pool@@Base+0x2500>
   57dbc:	mov	x1, #0xffffffffffffffff    	// #-1
   57dc0:	mov	x2, #0x7fe                 	// #2046
   57dc4:	mov	w7, #0x0                   	// #0
   57dc8:	mov	w0, #0x14                  	// #20
   57dcc:	b	57b74 <mpfr_free_pool@@Base+0x23f0>
   57dd0:	cmp	w4, #0x0
   57dd4:	mov	w1, #0x7fe                 	// #2046
   57dd8:	csel	w3, w2, w1, eq  // eq = none
   57ddc:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   57de0:	csel	x1, xzr, x2, eq  // eq = none
   57de4:	b	57d48 <mpfr_free_pool@@Base+0x25c4>
   57de8:	tbz	w6, #11, 57d60 <mpfr_free_pool@@Base+0x25dc>
   57dec:	mov	w0, #0x0                   	// #0
   57df0:	mov	x2, #0x0                   	// #0
   57df4:	orr	w0, w0, #0x8
   57df8:	b	57c3c <mpfr_free_pool@@Base+0x24b8>
   57dfc:	nop
   57e00:	tbz	w0, #0, 57e10 <mpfr_free_pool@@Base+0x268c>
   57e04:	movi	v1.2s, #0x0
   57e08:	fdiv	s0, s1, s1
   57e0c:	mrs	x1, fpsr
   57e10:	tbz	w0, #1, 57e24 <mpfr_free_pool@@Base+0x26a0>
   57e14:	fmov	s1, #1.000000000000000000e+00
   57e18:	movi	v2.2s, #0x0
   57e1c:	fdiv	s0, s1, s2
   57e20:	mrs	x1, fpsr
   57e24:	tbz	w0, #2, 57e44 <mpfr_free_pool@@Base+0x26c0>
   57e28:	mov	w2, #0xc5ae                	// #50606
   57e2c:	mov	w1, #0x7f7fffff            	// #2139095039
   57e30:	movk	w2, #0x749d, lsl #16
   57e34:	fmov	s1, w1
   57e38:	fmov	s2, w2
   57e3c:	fadd	s0, s1, s2
   57e40:	mrs	x1, fpsr
   57e44:	tbz	w0, #3, 57e54 <mpfr_free_pool@@Base+0x26d0>
   57e48:	movi	v1.2s, #0x80, lsl #16
   57e4c:	fmul	s0, s1, s1
   57e50:	mrs	x1, fpsr
   57e54:	tbz	w0, #4, 57e6c <mpfr_free_pool@@Base+0x26e8>
   57e58:	mov	w0, #0x7f7fffff            	// #2139095039
   57e5c:	fmov	s2, #1.000000000000000000e+00
   57e60:	fmov	s1, w0
   57e64:	fsub	s0, s1, s2
   57e68:	mrs	x0, fpsr
   57e6c:	ret

Disassembly of section .fini:

0000000000057e70 <.fini>:
   57e70:	stp	x29, x30, [sp, #-16]!
   57e74:	mov	x29, sp
   57e78:	ldp	x29, x30, [sp], #16
   57e7c:	ret
