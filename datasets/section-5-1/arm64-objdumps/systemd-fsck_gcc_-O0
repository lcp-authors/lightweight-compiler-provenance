
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-fsck_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401730 <_init>:
  401730:	stp	x29, x30, [sp, #-16]!
  401734:	mov	x29, sp
  401738:	bl	401ba0 <call_weak_fn>
  40173c:	ldp	x29, x30, [sp], #16
  401740:	ret

Disassembly of section .plt:

0000000000401750 <.plt>:
  401750:	stp	x16, x30, [sp, #-16]!
  401754:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401758:	ldr	x17, [x16, #3576]
  40175c:	add	x16, x16, #0xdf8
  401760:	br	x17
  401764:	nop
  401768:	nop
  40176c:	nop

0000000000401770 <safe_fclose@plt>:
  401770:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401774:	ldr	x17, [x16, #3584]
  401778:	add	x16, x16, #0xe00
  40177c:	br	x17

0000000000401780 <sd_device_get_property_value@plt>:
  401780:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401784:	ldr	x17, [x16, #3592]
  401788:	add	x16, x16, #0xe08
  40178c:	br	x17

0000000000401790 <bus_error_message@plt>:
  401790:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401794:	ldr	x17, [x16, #3600]
  401798:	add	x16, x16, #0xe10
  40179c:	br	x17

00000000004017a0 <pipe@plt>:
  4017a0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4017a4:	ldr	x17, [x16, #3608]
  4017a8:	add	x16, x16, #0xe18
  4017ac:	br	x17

00000000004017b0 <__libc_start_main@plt>:
  4017b0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4017b4:	ldr	x17, [x16, #3616]
  4017b8:	add	x16, x16, #0xe20
  4017bc:	br	x17

00000000004017c0 <fdopen@plt>:
  4017c0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4017c4:	ldr	x17, [x16, #3624]
  4017c8:	add	x16, x16, #0xe28
  4017cc:	br	x17

00000000004017d0 <parse_boolean@plt>:
  4017d0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4017d4:	ldr	x17, [x16, #3632]
  4017d8:	add	x16, x16, #0xe30
  4017dc:	br	x17

00000000004017e0 <fileno@plt>:
  4017e0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4017e4:	ldr	x17, [x16, #3640]
  4017e8:	add	x16, x16, #0xe38
  4017ec:	br	x17

00000000004017f0 <__gmon_start__@plt>:
  4017f0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4017f4:	ldr	x17, [x16, #3648]
  4017f8:	add	x16, x16, #0xe40
  4017fc:	br	x17

0000000000401800 <sd_device_get_devname@plt>:
  401800:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401804:	ldr	x17, [x16, #3656]
  401808:	add	x16, x16, #0xe48
  40180c:	br	x17

0000000000401810 <polkit_agent_close@plt>:
  401810:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401814:	ldr	x17, [x16, #3664]
  401818:	add	x16, x16, #0xe50
  40181c:	br	x17

0000000000401820 <strnlen@plt>:
  401820:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401824:	ldr	x17, [x16, #3672]
  401828:	add	x16, x16, #0xe58
  40182c:	br	x17

0000000000401830 <socket@plt>:
  401830:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401834:	ldr	x17, [x16, #3680]
  401838:	add	x16, x16, #0xe60
  40183c:	br	x17

0000000000401840 <snprintf@plt>:
  401840:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401844:	ldr	x17, [x16, #3688]
  401848:	add	x16, x16, #0xe68
  40184c:	br	x17

0000000000401850 <fprintf@plt>:
  401850:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401854:	ldr	x17, [x16, #3696]
  401858:	add	x16, x16, #0xe70
  40185c:	br	x17

0000000000401860 <bus_connect_system_systemd@plt>:
  401860:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401864:	ldr	x17, [x16, #3704]
  401868:	add	x16, x16, #0xe78
  40186c:	br	x17

0000000000401870 <log_setup_service@plt>:
  401870:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401874:	ldr	x17, [x16, #3712]
  401878:	add	x16, x16, #0xe80
  40187c:	br	x17

0000000000401880 <safe_close@plt>:
  401880:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401884:	ldr	x17, [x16, #3720]
  401888:	add	x16, x16, #0xe88
  40188c:	br	x17

0000000000401890 <safe_close_pair@plt>:
  401890:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401894:	ldr	x17, [x16, #3728]
  401898:	add	x16, x16, #0xe90
  40189c:	br	x17

00000000004018a0 <flock@plt>:
  4018a0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4018a4:	ldr	x17, [x16, #3736]
  4018a8:	add	x16, x16, #0xe98
  4018ac:	br	x17

00000000004018b0 <sd_device_get_sysname@plt>:
  4018b0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4018b4:	ldr	x17, [x16, #3744]
  4018b8:	add	x16, x16, #0xea0
  4018bc:	br	x17

00000000004018c0 <log_assert_failed_realm@plt>:
  4018c0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4018c4:	ldr	x17, [x16, #3752]
  4018c8:	add	x16, x16, #0xea8
  4018cc:	br	x17

00000000004018d0 <_exit@plt>:
  4018d0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4018d4:	ldr	x17, [x16, #3760]
  4018d8:	add	x16, x16, #0xeb0
  4018dc:	br	x17

00000000004018e0 <umask@plt>:
  4018e0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4018e4:	ldr	x17, [x16, #3768]
  4018e8:	add	x16, x16, #0xeb8
  4018ec:	br	x17

00000000004018f0 <fputc@plt>:
  4018f0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4018f4:	ldr	x17, [x16, #3776]
  4018f8:	add	x16, x16, #0xec0
  4018fc:	br	x17

0000000000401900 <access@plt>:
  401900:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401904:	ldr	x17, [x16, #3784]
  401908:	add	x16, x16, #0xec8
  40190c:	br	x17

0000000000401910 <abort@plt>:
  401910:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401914:	ldr	x17, [x16, #3792]
  401918:	add	x16, x16, #0xed0
  40191c:	br	x17

0000000000401920 <__isoc99_fscanf@plt>:
  401920:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401924:	ldr	x17, [x16, #3800]
  401928:	add	x16, x16, #0xed8
  40192c:	br	x17

0000000000401930 <ferror@plt>:
  401930:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401934:	ldr	x17, [x16, #3808]
  401938:	add	x16, x16, #0xee0
  40193c:	br	x17

0000000000401940 <fflush@plt>:
  401940:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401944:	ldr	x17, [x16, #3816]
  401948:	add	x16, x16, #0xee8
  40194c:	br	x17

0000000000401950 <touch@plt>:
  401950:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401954:	ldr	x17, [x16, #3824]
  401958:	add	x16, x16, #0xef0
  40195c:	br	x17

0000000000401960 <log_object_internal@plt>:
  401960:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401964:	ldr	x17, [x16, #3832]
  401968:	add	x16, x16, #0xef8
  40196c:	br	x17

0000000000401970 <__errno_location@plt>:
  401970:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401974:	ldr	x17, [x16, #3840]
  401978:	add	x16, x16, #0xf00
  40197c:	br	x17

0000000000401980 <wait_for_terminate_and_check@plt>:
  401980:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401984:	ldr	x17, [x16, #3848]
  401988:	add	x16, x16, #0xf08
  40198c:	br	x17

0000000000401990 <__stack_chk_fail@plt>:
  401990:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401994:	ldr	x17, [x16, #3856]
  401998:	add	x16, x16, #0xf10
  40199c:	br	x17

00000000004019a0 <sd_device_new_from_devnum@plt>:
  4019a0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4019a4:	ldr	x17, [x16, #3864]
  4019a8:	add	x16, x16, #0xf18
  4019ac:	br	x17

00000000004019b0 <__xstat64@plt>:
  4019b0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4019b4:	ldr	x17, [x16, #3872]
  4019b8:	add	x16, x16, #0xf20
  4019bc:	br	x17

00000000004019c0 <utimensat@plt>:
  4019c0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4019c4:	ldr	x17, [x16, #3880]
  4019c8:	add	x16, x16, #0xf28
  4019cc:	br	x17

00000000004019d0 <ask_password_agent_close@plt>:
  4019d0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4019d4:	ldr	x17, [x16, #3888]
  4019d8:	add	x16, x16, #0xf30
  4019dc:	br	x17

00000000004019e0 <pager_close@plt>:
  4019e0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4019e4:	ldr	x17, [x16, #3896]
  4019e8:	add	x16, x16, #0xf38
  4019ec:	br	x17

00000000004019f0 <feof@plt>:
  4019f0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  4019f4:	ldr	x17, [x16, #3904]
  4019f8:	add	x16, x16, #0xf40
  4019fc:	br	x17

0000000000401a00 <sd_bus_error_free@plt>:
  401a00:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a04:	ldr	x17, [x16, #3912]
  401a08:	add	x16, x16, #0xf48
  401a0c:	br	x17

0000000000401a10 <rlimit_nofile_safe@plt>:
  401a10:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a14:	ldr	x17, [x16, #3920]
  401a18:	add	x16, x16, #0xf50
  401a1c:	br	x17

0000000000401a20 <log_internal_realm@plt>:
  401a20:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a24:	ldr	x17, [x16, #3928]
  401a28:	add	x16, x16, #0xf58
  401a2c:	br	x17

0000000000401a30 <sd_bus_flush_close_unref@plt>:
  401a30:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a34:	ldr	x17, [x16, #3936]
  401a38:	add	x16, x16, #0xf60
  401a3c:	br	x17

0000000000401a40 <gnu_dev_major@plt>:
  401a40:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a44:	ldr	x17, [x16, #3944]
  401a48:	add	x16, x16, #0xf68
  401a4c:	br	x17

0000000000401a50 <now@plt>:
  401a50:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a54:	ldr	x17, [x16, #3952]
  401a58:	add	x16, x16, #0xf70
  401a5c:	br	x17

0000000000401a60 <strcmp@plt>:
  401a60:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a64:	ldr	x17, [x16, #3960]
  401a68:	add	x16, x16, #0xf78
  401a6c:	br	x17

0000000000401a70 <strdup@plt>:
  401a70:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a74:	ldr	x17, [x16, #3968]
  401a78:	add	x16, x16, #0xf80
  401a7c:	br	x17

0000000000401a80 <sd_bus_error_has_name@plt>:
  401a80:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a84:	ldr	x17, [x16, #3976]
  401a88:	add	x16, x16, #0xf88
  401a8c:	br	x17

0000000000401a90 <execv@plt>:
  401a90:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401a94:	ldr	x17, [x16, #3984]
  401a98:	add	x16, x16, #0xf90
  401a9c:	br	x17

0000000000401aa0 <safe_fork_full@plt>:
  401aa0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401aa4:	ldr	x17, [x16, #3992]
  401aa8:	add	x16, x16, #0xf98
  401aac:	br	x17

0000000000401ab0 <proc_cmdline_parse@plt>:
  401ab0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401ab4:	ldr	x17, [x16, #4000]
  401ab8:	add	x16, x16, #0xfa0
  401abc:	br	x17

0000000000401ac0 <free@plt>:
  401ac0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401ac4:	ldr	x17, [x16, #4008]
  401ac8:	add	x16, x16, #0xfa8
  401acc:	br	x17

0000000000401ad0 <sd_device_unref@plt>:
  401ad0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401ad4:	ldr	x17, [x16, #4016]
  401ad8:	add	x16, x16, #0xfb0
  401adc:	br	x17

0000000000401ae0 <mac_selinux_finish@plt>:
  401ae0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401ae4:	ldr	x17, [x16, #4024]
  401ae8:	add	x16, x16, #0xfb8
  401aec:	br	x17

0000000000401af0 <fsck_exists@plt>:
  401af0:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401af4:	ldr	x17, [x16, #4032]
  401af8:	add	x16, x16, #0xfc0
  401afc:	br	x17

0000000000401b00 <connect@plt>:
  401b00:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401b04:	ldr	x17, [x16, #4040]
  401b08:	add	x16, x16, #0xfc8
  401b0c:	br	x17

0000000000401b10 <sd_bus_call_method@plt>:
  401b10:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401b14:	ldr	x17, [x16, #4048]
  401b18:	add	x16, x16, #0xfd0
  401b1c:	br	x17

0000000000401b20 <fopen64@plt>:
  401b20:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401b24:	ldr	x17, [x16, #4056]
  401b28:	add	x16, x16, #0xfd8
  401b2c:	br	x17

0000000000401b30 <log_oom_internal@plt>:
  401b30:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401b34:	ldr	x17, [x16, #4064]
  401b38:	add	x16, x16, #0xfe0
  401b3c:	br	x17

0000000000401b40 <log_get_max_level_realm@plt>:
  401b40:	adrp	x16, 415000 <__FRAME_END__+0x10084>
  401b44:	ldr	x17, [x16, #4072]
  401b48:	add	x16, x16, #0xfe8
  401b4c:	br	x17

Disassembly of section .text:

0000000000401b50 <_start>:
  401b50:	mov	x29, #0x0                   	// #0
  401b54:	mov	x30, #0x0                   	// #0
  401b58:	mov	x5, x0
  401b5c:	ldr	x1, [sp]
  401b60:	add	x2, sp, #0x8
  401b64:	mov	x6, sp
  401b68:	movz	x0, #0x0, lsl #48
  401b6c:	movk	x0, #0x0, lsl #32
  401b70:	movk	x0, #0x40, lsl #16
  401b74:	movk	x0, #0x3fac
  401b78:	movz	x3, #0x0, lsl #48
  401b7c:	movk	x3, #0x0, lsl #32
  401b80:	movk	x3, #0x40, lsl #16
  401b84:	movk	x3, #0x4010
  401b88:	movz	x4, #0x0, lsl #48
  401b8c:	movk	x4, #0x0, lsl #32
  401b90:	movk	x4, #0x40, lsl #16
  401b94:	movk	x4, #0x4090
  401b98:	bl	4017b0 <__libc_start_main@plt>
  401b9c:	bl	401910 <abort@plt>

0000000000401ba0 <call_weak_fn>:
  401ba0:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  401ba4:	ldr	x0, [x0, #4088]
  401ba8:	cbz	x0, 401bb0 <call_weak_fn+0x10>
  401bac:	b	4017f0 <__gmon_start__@plt>
  401bb0:	ret

0000000000401bb4 <deregister_tm_clones>:
  401bb4:	stp	x29, x30, [sp, #-32]!
  401bb8:	mov	x29, sp
  401bbc:	adrp	x0, 416000 <arg_repair>
  401bc0:	add	x0, x0, #0x8
  401bc4:	str	x0, [sp, #24]
  401bc8:	ldr	x0, [sp, #24]
  401bcc:	str	x0, [sp, #24]
  401bd0:	ldr	x1, [sp, #24]
  401bd4:	adrp	x0, 416000 <arg_repair>
  401bd8:	add	x0, x0, #0x8
  401bdc:	cmp	x1, x0
  401be0:	b.eq	401c1c <deregister_tm_clones+0x68>  // b.none
  401be4:	adrp	x0, 404000 <main+0x54>
  401be8:	add	x0, x0, #0xb8
  401bec:	ldr	x0, [x0]
  401bf0:	str	x0, [sp, #16]
  401bf4:	ldr	x0, [sp, #16]
  401bf8:	str	x0, [sp, #16]
  401bfc:	ldr	x0, [sp, #16]
  401c00:	cmp	x0, #0x0
  401c04:	b.eq	401c20 <deregister_tm_clones+0x6c>  // b.none
  401c08:	ldr	x1, [sp, #16]
  401c0c:	adrp	x0, 416000 <arg_repair>
  401c10:	add	x0, x0, #0x8
  401c14:	blr	x1
  401c18:	b	401c20 <deregister_tm_clones+0x6c>
  401c1c:	nop
  401c20:	ldp	x29, x30, [sp], #32
  401c24:	ret

0000000000401c28 <register_tm_clones>:
  401c28:	stp	x29, x30, [sp, #-48]!
  401c2c:	mov	x29, sp
  401c30:	adrp	x0, 416000 <arg_repair>
  401c34:	add	x0, x0, #0x8
  401c38:	str	x0, [sp, #40]
  401c3c:	ldr	x0, [sp, #40]
  401c40:	str	x0, [sp, #40]
  401c44:	ldr	x1, [sp, #40]
  401c48:	adrp	x0, 416000 <arg_repair>
  401c4c:	add	x0, x0, #0x8
  401c50:	sub	x0, x1, x0
  401c54:	asr	x0, x0, #3
  401c58:	lsr	x1, x0, #63
  401c5c:	add	x0, x1, x0
  401c60:	asr	x0, x0, #1
  401c64:	str	x0, [sp, #32]
  401c68:	ldr	x0, [sp, #32]
  401c6c:	cmp	x0, #0x0
  401c70:	b.eq	401cb0 <register_tm_clones+0x88>  // b.none
  401c74:	adrp	x0, 404000 <main+0x54>
  401c78:	add	x0, x0, #0xc0
  401c7c:	ldr	x0, [x0]
  401c80:	str	x0, [sp, #24]
  401c84:	ldr	x0, [sp, #24]
  401c88:	str	x0, [sp, #24]
  401c8c:	ldr	x0, [sp, #24]
  401c90:	cmp	x0, #0x0
  401c94:	b.eq	401cb4 <register_tm_clones+0x8c>  // b.none
  401c98:	ldr	x2, [sp, #24]
  401c9c:	ldr	x1, [sp, #32]
  401ca0:	adrp	x0, 416000 <arg_repair>
  401ca4:	add	x0, x0, #0x8
  401ca8:	blr	x2
  401cac:	b	401cb4 <register_tm_clones+0x8c>
  401cb0:	nop
  401cb4:	ldp	x29, x30, [sp], #48
  401cb8:	ret

0000000000401cbc <__do_global_dtors_aux>:
  401cbc:	stp	x29, x30, [sp, #-16]!
  401cc0:	mov	x29, sp
  401cc4:	adrp	x0, 416000 <arg_repair>
  401cc8:	add	x0, x0, #0x14
  401ccc:	ldrb	w0, [x0]
  401cd0:	and	x0, x0, #0xff
  401cd4:	cmp	x0, #0x0
  401cd8:	b.ne	401cf4 <__do_global_dtors_aux+0x38>  // b.any
  401cdc:	bl	401bb4 <deregister_tm_clones>
  401ce0:	adrp	x0, 416000 <arg_repair>
  401ce4:	add	x0, x0, #0x14
  401ce8:	mov	w1, #0x1                   	// #1
  401cec:	strb	w1, [x0]
  401cf0:	b	401cf8 <__do_global_dtors_aux+0x3c>
  401cf4:	nop
  401cf8:	ldp	x29, x30, [sp], #16
  401cfc:	ret

0000000000401d00 <frame_dummy>:
  401d00:	stp	x29, x30, [sp, #-16]!
  401d04:	mov	x29, sp
  401d08:	bl	401c28 <register_tm_clones>
  401d0c:	nop
  401d10:	ldp	x29, x30, [sp], #16
  401d14:	ret

0000000000401d18 <sd_bus_flush_close_unrefp>:
  401d18:	stp	x29, x30, [sp, #-32]!
  401d1c:	mov	x29, sp
  401d20:	str	x0, [sp, #24]
  401d24:	ldr	x0, [sp, #24]
  401d28:	ldr	x0, [x0]
  401d2c:	cmp	x0, #0x0
  401d30:	b.eq	401d40 <sd_bus_flush_close_unrefp+0x28>  // b.none
  401d34:	ldr	x0, [sp, #24]
  401d38:	ldr	x0, [x0]
  401d3c:	bl	401a30 <sd_bus_flush_close_unref@plt>
  401d40:	nop
  401d44:	ldp	x29, x30, [sp], #32
  401d48:	ret

0000000000401d4c <sd_device_unrefp>:
  401d4c:	stp	x29, x30, [sp, #-32]!
  401d50:	mov	x29, sp
  401d54:	str	x0, [sp, #24]
  401d58:	ldr	x0, [sp, #24]
  401d5c:	ldr	x0, [x0]
  401d60:	cmp	x0, #0x0
  401d64:	b.eq	401d74 <sd_device_unrefp+0x28>  // b.none
  401d68:	ldr	x0, [sp, #24]
  401d6c:	ldr	x0, [x0]
  401d70:	bl	401ad0 <sd_device_unref@plt>
  401d74:	nop
  401d78:	ldp	x29, x30, [sp], #32
  401d7c:	ret

0000000000401d80 <ALIGN_TO>:
  401d80:	sub	sp, sp, #0x10
  401d84:	str	x0, [sp, #8]
  401d88:	str	x1, [sp]
  401d8c:	ldr	x1, [sp, #8]
  401d90:	ldr	x0, [sp]
  401d94:	add	x0, x1, x0
  401d98:	sub	x1, x0, #0x1
  401d9c:	ldr	x0, [sp]
  401da0:	neg	x0, x0
  401da4:	and	x0, x1, x0
  401da8:	add	sp, sp, #0x10
  401dac:	ret

0000000000401db0 <freep>:
  401db0:	stp	x29, x30, [sp, #-32]!
  401db4:	mov	x29, sp
  401db8:	str	x0, [sp, #24]
  401dbc:	ldr	x0, [sp, #24]
  401dc0:	ldr	x0, [x0]
  401dc4:	bl	401ac0 <free@plt>
  401dc8:	nop
  401dcc:	ldp	x29, x30, [sp], #32
  401dd0:	ret

0000000000401dd4 <save_argc_argv>:
  401dd4:	sub	sp, sp, #0x10
  401dd8:	str	w0, [sp, #12]
  401ddc:	str	x1, [sp]
  401de0:	adrp	x0, 416000 <arg_repair>
  401de4:	add	x0, x0, #0x10
  401de8:	ldr	w1, [sp, #12]
  401dec:	str	w1, [x0]
  401df0:	adrp	x0, 416000 <arg_repair>
  401df4:	add	x0, x0, #0x8
  401df8:	ldr	x1, [sp]
  401dfc:	str	x1, [x0]
  401e00:	nop
  401e04:	add	sp, sp, #0x10
  401e08:	ret

0000000000401e0c <isempty>:
  401e0c:	sub	sp, sp, #0x10
  401e10:	str	x0, [sp, #8]
  401e14:	ldr	x0, [sp, #8]
  401e18:	cmp	x0, #0x0
  401e1c:	b.eq	401e30 <isempty+0x24>  // b.none
  401e20:	ldr	x0, [sp, #8]
  401e24:	ldrb	w0, [x0]
  401e28:	cmp	w0, #0x0
  401e2c:	b.ne	401e38 <isempty+0x2c>  // b.any
  401e30:	mov	w0, #0x1                   	// #1
  401e34:	b	401e3c <isempty+0x30>
  401e38:	mov	w0, #0x0                   	// #0
  401e3c:	and	w0, w0, #0x1
  401e40:	and	w0, w0, #0xff
  401e44:	add	sp, sp, #0x10
  401e48:	ret

0000000000401e4c <closep>:
  401e4c:	stp	x29, x30, [sp, #-32]!
  401e50:	mov	x29, sp
  401e54:	str	x0, [sp, #24]
  401e58:	ldr	x0, [sp, #24]
  401e5c:	ldr	w0, [x0]
  401e60:	bl	401880 <safe_close@plt>
  401e64:	nop
  401e68:	ldp	x29, x30, [sp], #32
  401e6c:	ret

0000000000401e70 <close_pairp>:
  401e70:	stp	x29, x30, [sp, #-32]!
  401e74:	mov	x29, sp
  401e78:	str	x0, [sp, #24]
  401e7c:	ldr	x0, [sp, #24]
  401e80:	bl	401890 <safe_close_pair@plt>
  401e84:	nop
  401e88:	ldp	x29, x30, [sp], #32
  401e8c:	ret

0000000000401e90 <fclosep>:
  401e90:	stp	x29, x30, [sp, #-32]!
  401e94:	mov	x29, sp
  401e98:	str	x0, [sp, #24]
  401e9c:	ldr	x0, [sp, #24]
  401ea0:	ldr	x0, [x0]
  401ea4:	bl	401770 <safe_fclose@plt>
  401ea8:	nop
  401eac:	ldp	x29, x30, [sp], #32
  401eb0:	ret

0000000000401eb4 <static_destruct>:
  401eb4:	stp	x29, x30, [sp, #-32]!
  401eb8:	mov	x29, sp
  401ebc:	adrp	x0, 404000 <main+0x54>
  401ec0:	add	x0, x0, #0x9a8
  401ec4:	ldr	x0, [x0]
  401ec8:	cmp	x0, #0x0
  401ecc:	b.eq	401f30 <static_destruct+0x7c>  // b.none
  401ed0:	adrp	x0, 404000 <main+0x54>
  401ed4:	add	x0, x0, #0x9a8
  401ed8:	ldr	x0, [x0]
  401edc:	mov	x1, #0x8                   	// #8
  401ee0:	bl	401d80 <ALIGN_TO>
  401ee4:	str	x0, [sp, #24]
  401ee8:	b	401f14 <static_destruct+0x60>
  401eec:	ldr	x0, [sp, #24]
  401ef0:	ldr	x1, [x0, #8]
  401ef4:	ldr	x0, [sp, #24]
  401ef8:	ldr	x0, [x0]
  401efc:	blr	x1
  401f00:	ldr	x0, [sp, #24]
  401f04:	add	x0, x0, #0x10
  401f08:	mov	x1, #0x8                   	// #8
  401f0c:	bl	401d80 <ALIGN_TO>
  401f10:	str	x0, [sp, #24]
  401f14:	ldr	x1, [sp, #24]
  401f18:	adrp	x0, 404000 <main+0x54>
  401f1c:	add	x0, x0, #0x9b0
  401f20:	ldr	x0, [x0]
  401f24:	cmp	x1, x0
  401f28:	b.cc	401eec <static_destruct+0x38>  // b.lo, b.ul, b.last
  401f2c:	b	401f34 <static_destruct+0x80>
  401f30:	nop
  401f34:	ldp	x29, x30, [sp], #32
  401f38:	ret

0000000000401f3c <proc_cmdline_value_missing>:
  401f3c:	stp	x29, x30, [sp, #-48]!
  401f40:	mov	x29, sp
  401f44:	str	x0, [sp, #24]
  401f48:	str	x1, [sp, #16]
  401f4c:	ldr	x0, [sp, #16]
  401f50:	cmp	x0, #0x0
  401f54:	b.ne	401fd8 <proc_cmdline_value_missing+0x9c>  // b.any
  401f58:	mov	w0, #0x4                   	// #4
  401f5c:	str	w0, [sp, #36]
  401f60:	str	wzr, [sp, #40]
  401f64:	str	wzr, [sp, #44]
  401f68:	ldr	w0, [sp, #44]
  401f6c:	bl	401b40 <log_get_max_level_realm@plt>
  401f70:	mov	w1, w0
  401f74:	ldr	w0, [sp, #36]
  401f78:	and	w0, w0, #0x7
  401f7c:	cmp	w1, w0
  401f80:	b.lt	401fc8 <proc_cmdline_value_missing+0x8c>  // b.tstop
  401f84:	ldr	w0, [sp, #44]
  401f88:	lsl	w1, w0, #10
  401f8c:	ldr	w0, [sp, #36]
  401f90:	orr	w7, w1, w0
  401f94:	adrp	x0, 404000 <main+0x54>
  401f98:	add	x1, x0, #0xcb
  401f9c:	ldr	x6, [sp, #24]
  401fa0:	adrp	x0, 404000 <main+0x54>
  401fa4:	add	x5, x0, #0xe8
  401fa8:	adrp	x0, 404000 <main+0x54>
  401fac:	add	x4, x0, #0xa08
  401fb0:	mov	w3, #0x21                  	// #33
  401fb4:	mov	x2, x1
  401fb8:	ldr	w1, [sp, #40]
  401fbc:	mov	w0, w7
  401fc0:	bl	401a20 <log_internal_realm@plt>
  401fc4:	b	401fd0 <proc_cmdline_value_missing+0x94>
  401fc8:	ldr	w0, [sp, #40]
  401fcc:	cmp	w0, #0x0
  401fd0:	mov	w0, #0x1                   	// #1
  401fd4:	b	401fdc <proc_cmdline_value_missing+0xa0>
  401fd8:	mov	w0, #0x0                   	// #0
  401fdc:	ldp	x29, x30, [sp], #48
  401fe0:	ret

0000000000401fe4 <safe_fork>:
  401fe4:	stp	x29, x30, [sp, #-48]!
  401fe8:	mov	x29, sp
  401fec:	str	x0, [sp, #40]
  401ff0:	str	w1, [sp, #36]
  401ff4:	str	x2, [sp, #24]
  401ff8:	ldr	x4, [sp, #24]
  401ffc:	ldr	w3, [sp, #36]
  402000:	mov	x2, #0x0                   	// #0
  402004:	mov	x1, #0x0                   	// #0
  402008:	ldr	x0, [sp, #40]
  40200c:	bl	401aa0 <safe_fork_full@plt>
  402010:	ldp	x29, x30, [sp], #48
  402014:	ret

0000000000402018 <start_target>:
  402018:	sub	sp, sp, #0xa0
  40201c:	stp	x29, x30, [sp, #32]
  402020:	add	x29, sp, #0x20
  402024:	stp	x19, x20, [sp, #48]
  402028:	str	x0, [sp, #72]
  40202c:	str	x1, [sp, #64]
  402030:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  402034:	add	x0, x0, #0xbb0
  402038:	ldr	x1, [x0]
  40203c:	str	x1, [sp, #152]
  402040:	mov	x1, #0x0                   	// #0
  402044:	str	xzr, [sp, #128]
  402048:	str	xzr, [sp, #136]
  40204c:	str	wzr, [sp, #144]
  402050:	str	xzr, [sp, #120]
  402054:	ldr	x0, [sp, #72]
  402058:	cmp	x0, #0x0
  40205c:	cset	w0, eq  // eq = none
  402060:	and	w0, w0, #0xff
  402064:	and	x0, x0, #0xff
  402068:	cmp	x0, #0x0
  40206c:	b.eq	402098 <start_target+0x80>  // b.none
  402070:	adrp	x0, 404000 <main+0x54>
  402074:	add	x1, x0, #0x133
  402078:	adrp	x0, 404000 <main+0x54>
  40207c:	add	x4, x0, #0x9b8
  402080:	mov	w3, #0x2f                  	// #47
  402084:	mov	x2, x1
  402088:	adrp	x0, 404000 <main+0x54>
  40208c:	add	x1, x0, #0x148
  402090:	mov	w0, #0x0                   	// #0
  402094:	bl	4018c0 <log_assert_failed_realm@plt>
  402098:	add	x0, sp, #0x78
  40209c:	bl	401860 <bus_connect_system_systemd@plt>
  4020a0:	str	w0, [sp, #80]
  4020a4:	ldr	w0, [sp, #80]
  4020a8:	cmp	w0, #0x0
  4020ac:	b.ge	402130 <start_target+0x118>  // b.tcont
  4020b0:	mov	w0, #0x3                   	// #3
  4020b4:	str	w0, [sp, #108]
  4020b8:	ldr	w0, [sp, #80]
  4020bc:	str	w0, [sp, #112]
  4020c0:	str	wzr, [sp, #116]
  4020c4:	ldr	w0, [sp, #116]
  4020c8:	bl	401b40 <log_get_max_level_realm@plt>
  4020cc:	mov	w1, w0
  4020d0:	ldr	w0, [sp, #108]
  4020d4:	and	w0, w0, #0x7
  4020d8:	cmp	w1, w0
  4020dc:	b.lt	402120 <start_target+0x108>  // b.tstop
  4020e0:	ldr	w0, [sp, #116]
  4020e4:	lsl	w1, w0, #10
  4020e8:	ldr	w0, [sp, #108]
  4020ec:	orr	w6, w1, w0
  4020f0:	adrp	x0, 404000 <main+0x54>
  4020f4:	add	x1, x0, #0x133
  4020f8:	adrp	x0, 404000 <main+0x54>
  4020fc:	add	x5, x0, #0x150
  402100:	adrp	x0, 404000 <main+0x54>
  402104:	add	x4, x0, #0x9c8
  402108:	mov	w3, #0x33                  	// #51
  40210c:	mov	x2, x1
  402110:	ldr	w1, [sp, #112]
  402114:	mov	w0, w6
  402118:	bl	401a20 <log_internal_realm@plt>
  40211c:	b	402128 <start_target+0x110>
  402120:	ldr	w0, [sp, #112]
  402124:	cmp	w0, #0x0
  402128:	mov	w19, #0x0                   	// #0
  40212c:	b	4022b8 <start_target+0x2a0>
  402130:	mov	w0, #0x6                   	// #6
  402134:	str	w0, [sp, #84]
  402138:	str	wzr, [sp, #88]
  40213c:	str	wzr, [sp, #92]
  402140:	ldr	w0, [sp, #92]
  402144:	bl	401b40 <log_get_max_level_realm@plt>
  402148:	mov	w1, w0
  40214c:	ldr	w0, [sp, #84]
  402150:	and	w0, w0, #0x7
  402154:	cmp	w1, w0
  402158:	b.lt	4021a0 <start_target+0x188>  // b.tstop
  40215c:	ldr	w0, [sp, #92]
  402160:	lsl	w1, w0, #10
  402164:	ldr	w0, [sp, #84]
  402168:	orr	w7, w1, w0
  40216c:	adrp	x0, 404000 <main+0x54>
  402170:	add	x1, x0, #0x133
  402174:	ldr	x6, [sp, #72]
  402178:	adrp	x0, 404000 <main+0x54>
  40217c:	add	x5, x0, #0x178
  402180:	adrp	x0, 404000 <main+0x54>
  402184:	add	x4, x0, #0x9c8
  402188:	mov	w3, #0x37                  	// #55
  40218c:	mov	x2, x1
  402190:	ldr	w1, [sp, #88]
  402194:	mov	w0, w7
  402198:	bl	401a20 <log_internal_realm@plt>
  40219c:	b	4021a8 <start_target+0x190>
  4021a0:	ldr	w0, [sp, #88]
  4021a4:	cmp	w0, #0x0
  4021a8:	ldr	x8, [sp, #120]
  4021ac:	add	x1, sp, #0x80
  4021b0:	ldr	x0, [sp, #64]
  4021b4:	str	x0, [sp, #16]
  4021b8:	ldr	x0, [sp, #72]
  4021bc:	str	x0, [sp, #8]
  4021c0:	adrp	x0, 404000 <main+0x54>
  4021c4:	add	x0, x0, #0x228
  4021c8:	str	x0, [sp]
  4021cc:	adrp	x0, 404000 <main+0x54>
  4021d0:	add	x7, x0, #0x1a0
  4021d4:	mov	x6, #0x0                   	// #0
  4021d8:	mov	x5, x1
  4021dc:	adrp	x0, 404000 <main+0x54>
  4021e0:	add	x4, x0, #0x1a8
  4021e4:	adrp	x0, 404000 <main+0x54>
  4021e8:	add	x3, x0, #0x1c0
  4021ec:	adrp	x0, 404000 <main+0x54>
  4021f0:	add	x2, x0, #0x1e8
  4021f4:	adrp	x0, 404000 <main+0x54>
  4021f8:	add	x1, x0, #0x208
  4021fc:	mov	x0, x8
  402200:	bl	401b10 <sd_bus_call_method@plt>
  402204:	str	w0, [sp, #80]
  402208:	ldr	w0, [sp, #80]
  40220c:	cmp	w0, #0x0
  402210:	b.ge	4022b4 <start_target+0x29c>  // b.tcont
  402214:	add	x2, sp, #0x80
  402218:	adrp	x0, 404000 <main+0x54>
  40221c:	add	x1, x0, #0x238
  402220:	mov	x0, x2
  402224:	bl	401a80 <sd_bus_error_has_name@plt>
  402228:	cmp	w0, #0x0
  40222c:	b.ne	4022b4 <start_target+0x29c>  // b.any
  402230:	mov	w0, #0x3                   	// #3
  402234:	str	w0, [sp, #96]
  402238:	str	wzr, [sp, #100]
  40223c:	str	wzr, [sp, #104]
  402240:	ldr	w0, [sp, #104]
  402244:	bl	401b40 <log_get_max_level_realm@plt>
  402248:	mov	w1, w0
  40224c:	ldr	w0, [sp, #96]
  402250:	and	w0, w0, #0x7
  402254:	cmp	w1, w0
  402258:	b.lt	4022ac <start_target+0x294>  // b.tstop
  40225c:	ldr	w0, [sp, #104]
  402260:	lsl	w1, w0, #10
  402264:	ldr	w0, [sp, #96]
  402268:	orr	w19, w1, w0
  40226c:	adrp	x0, 404000 <main+0x54>
  402270:	add	x20, x0, #0x133
  402274:	add	x0, sp, #0x80
  402278:	ldr	w1, [sp, #80]
  40227c:	bl	401790 <bus_error_message@plt>
  402280:	mov	x6, x0
  402284:	adrp	x0, 404000 <main+0x54>
  402288:	add	x5, x0, #0x260
  40228c:	adrp	x0, 404000 <main+0x54>
  402290:	add	x4, x0, #0x9c8
  402294:	mov	w3, #0x45                  	// #69
  402298:	mov	x2, x20
  40229c:	ldr	w1, [sp, #100]
  4022a0:	mov	w0, w19
  4022a4:	bl	401a20 <log_internal_realm@plt>
  4022a8:	b	4022b4 <start_target+0x29c>
  4022ac:	ldr	w0, [sp, #100]
  4022b0:	cmp	w0, #0x0
  4022b4:	mov	w19, #0x1                   	// #1
  4022b8:	add	x0, sp, #0x78
  4022bc:	bl	401d18 <sd_bus_flush_close_unrefp>
  4022c0:	cmp	w19, #0x1
  4022c4:	b.eq	4022d0 <start_target+0x2b8>  // b.none
  4022c8:	mov	w19, #0x0                   	// #0
  4022cc:	b	4022d4 <start_target+0x2bc>
  4022d0:	mov	w19, #0x1                   	// #1
  4022d4:	add	x0, sp, #0x80
  4022d8:	bl	401a00 <sd_bus_error_free@plt>
  4022dc:	cmp	w19, #0x1
  4022e0:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  4022e4:	add	x0, x0, #0xbb0
  4022e8:	ldr	x1, [sp, #152]
  4022ec:	ldr	x0, [x0]
  4022f0:	eor	x0, x1, x0
  4022f4:	cmp	x0, #0x0
  4022f8:	b.eq	402300 <start_target+0x2e8>  // b.none
  4022fc:	bl	401990 <__stack_chk_fail@plt>
  402300:	ldp	x19, x20, [sp, #48]
  402304:	ldp	x29, x30, [sp, #32]
  402308:	add	sp, sp, #0xa0
  40230c:	ret

0000000000402310 <parse_proc_cmdline_item>:
  402310:	stp	x29, x30, [sp, #-112]!
  402314:	mov	x29, sp
  402318:	str	x0, [sp, #40]
  40231c:	str	x1, [sp, #32]
  402320:	str	x2, [sp, #24]
  402324:	ldr	x0, [sp, #40]
  402328:	cmp	x0, #0x0
  40232c:	cset	w0, eq  // eq = none
  402330:	and	w0, w0, #0xff
  402334:	and	x0, x0, #0xff
  402338:	cmp	x0, #0x0
  40233c:	b.eq	402368 <parse_proc_cmdline_item+0x58>  // b.none
  402340:	adrp	x0, 404000 <main+0x54>
  402344:	add	x1, x0, #0x133
  402348:	adrp	x0, 404000 <main+0x54>
  40234c:	add	x4, x0, #0x9d8
  402350:	mov	w3, #0x4b                  	// #75
  402354:	mov	x2, x1
  402358:	adrp	x0, 404000 <main+0x54>
  40235c:	add	x1, x0, #0x280
  402360:	mov	w0, #0x0                   	// #0
  402364:	bl	4018c0 <log_assert_failed_realm@plt>
  402368:	adrp	x0, 404000 <main+0x54>
  40236c:	add	x1, x0, #0x288
  402370:	ldr	x0, [sp, #40]
  402374:	bl	401a60 <strcmp@plt>
  402378:	cmp	w0, #0x0
  40237c:	b.ne	4024b4 <parse_proc_cmdline_item+0x1a4>  // b.any
  402380:	ldr	x1, [sp, #32]
  402384:	ldr	x0, [sp, #40]
  402388:	bl	401f3c <proc_cmdline_value_missing>
  40238c:	and	w0, w0, #0xff
  402390:	cmp	w0, #0x0
  402394:	b.eq	4023a0 <parse_proc_cmdline_item+0x90>  // b.none
  402398:	mov	w0, #0x0                   	// #0
  40239c:	b	402744 <parse_proc_cmdline_item+0x434>
  4023a0:	adrp	x0, 404000 <main+0x54>
  4023a4:	add	x1, x0, #0x298
  4023a8:	ldr	x0, [sp, #32]
  4023ac:	bl	401a60 <strcmp@plt>
  4023b0:	cmp	w0, #0x0
  4023b4:	b.ne	4023e0 <parse_proc_cmdline_item+0xd0>  // b.any
  4023b8:	adrp	x0, 416000 <arg_repair>
  4023bc:	add	x0, x0, #0x15
  4023c0:	strb	wzr, [x0]
  4023c4:	adrp	x0, 416000 <arg_repair>
  4023c8:	add	x0, x0, #0x15
  4023cc:	ldrb	w1, [x0]
  4023d0:	adrp	x0, 416000 <arg_repair>
  4023d4:	add	x0, x0, #0x16
  4023d8:	strb	w1, [x0]
  4023dc:	b	402740 <parse_proc_cmdline_item+0x430>
  4023e0:	adrp	x0, 404000 <main+0x54>
  4023e4:	add	x1, x0, #0x2a0
  4023e8:	ldr	x0, [sp, #32]
  4023ec:	bl	401a60 <strcmp@plt>
  4023f0:	cmp	w0, #0x0
  4023f4:	b.ne	40240c <parse_proc_cmdline_item+0xfc>  // b.any
  4023f8:	adrp	x0, 416000 <arg_repair>
  4023fc:	add	x0, x0, #0x16
  402400:	mov	w1, #0x1                   	// #1
  402404:	strb	w1, [x0]
  402408:	b	402740 <parse_proc_cmdline_item+0x430>
  40240c:	adrp	x0, 404000 <main+0x54>
  402410:	add	x1, x0, #0x2a8
  402414:	ldr	x0, [sp, #32]
  402418:	bl	401a60 <strcmp@plt>
  40241c:	cmp	w0, #0x0
  402420:	b.ne	402438 <parse_proc_cmdline_item+0x128>  // b.any
  402424:	adrp	x0, 416000 <arg_repair>
  402428:	add	x0, x0, #0x15
  40242c:	mov	w1, #0x1                   	// #1
  402430:	strb	w1, [x0]
  402434:	b	402740 <parse_proc_cmdline_item+0x430>
  402438:	mov	w0, #0x4                   	// #4
  40243c:	str	w0, [sp, #100]
  402440:	str	wzr, [sp, #104]
  402444:	str	wzr, [sp, #108]
  402448:	ldr	w0, [sp, #108]
  40244c:	bl	401b40 <log_get_max_level_realm@plt>
  402450:	mov	w1, w0
  402454:	ldr	w0, [sp, #100]
  402458:	and	w0, w0, #0x7
  40245c:	cmp	w1, w0
  402460:	b.lt	4024a8 <parse_proc_cmdline_item+0x198>  // b.tstop
  402464:	ldr	w0, [sp, #108]
  402468:	lsl	w1, w0, #10
  40246c:	ldr	w0, [sp, #100]
  402470:	orr	w7, w1, w0
  402474:	adrp	x0, 404000 <main+0x54>
  402478:	add	x1, x0, #0x133
  40247c:	ldr	x6, [sp, #32]
  402480:	adrp	x0, 404000 <main+0x54>
  402484:	add	x5, x0, #0x2b0
  402488:	adrp	x0, 404000 <main+0x54>
  40248c:	add	x4, x0, #0x9f0
  402490:	mov	w3, #0x59                  	// #89
  402494:	mov	x2, x1
  402498:	ldr	w1, [sp, #104]
  40249c:	mov	w0, w7
  4024a0:	bl	401a20 <log_internal_realm@plt>
  4024a4:	b	402740 <parse_proc_cmdline_item+0x430>
  4024a8:	ldr	w0, [sp, #104]
  4024ac:	cmp	w0, #0x0
  4024b0:	b	402740 <parse_proc_cmdline_item+0x430>
  4024b4:	adrp	x0, 404000 <main+0x54>
  4024b8:	add	x1, x0, #0x2e0
  4024bc:	ldr	x0, [sp, #40]
  4024c0:	bl	401a60 <strcmp@plt>
  4024c4:	cmp	w0, #0x0
  4024c8:	b.ne	4025ec <parse_proc_cmdline_item+0x2dc>  // b.any
  4024cc:	ldr	x1, [sp, #32]
  4024d0:	ldr	x0, [sp, #40]
  4024d4:	bl	401f3c <proc_cmdline_value_missing>
  4024d8:	and	w0, w0, #0xff
  4024dc:	cmp	w0, #0x0
  4024e0:	b.eq	4024ec <parse_proc_cmdline_item+0x1dc>  // b.none
  4024e4:	mov	w0, #0x0                   	// #0
  4024e8:	b	402744 <parse_proc_cmdline_item+0x434>
  4024ec:	adrp	x0, 404000 <main+0x54>
  4024f0:	add	x1, x0, #0x2f0
  4024f4:	ldr	x0, [sp, #32]
  4024f8:	bl	401a60 <strcmp@plt>
  4024fc:	cmp	w0, #0x0
  402500:	b.ne	40251c <parse_proc_cmdline_item+0x20c>  // b.any
  402504:	adrp	x0, 416000 <arg_repair>
  402508:	add	x0, x0, #0x0
  40250c:	adrp	x1, 404000 <main+0x54>
  402510:	add	x1, x1, #0x128
  402514:	str	x1, [x0]
  402518:	b	402740 <parse_proc_cmdline_item+0x430>
  40251c:	ldr	x0, [sp, #32]
  402520:	bl	4017d0 <parse_boolean@plt>
  402524:	str	w0, [sp, #84]
  402528:	ldr	w0, [sp, #84]
  40252c:	cmp	w0, #0x0
  402530:	b.le	40254c <parse_proc_cmdline_item+0x23c>
  402534:	adrp	x0, 416000 <arg_repair>
  402538:	add	x0, x0, #0x0
  40253c:	adrp	x1, 404000 <main+0x54>
  402540:	add	x1, x1, #0x2f8
  402544:	str	x1, [x0]
  402548:	b	402740 <parse_proc_cmdline_item+0x430>
  40254c:	ldr	w0, [sp, #84]
  402550:	cmp	w0, #0x0
  402554:	b.ne	402570 <parse_proc_cmdline_item+0x260>  // b.any
  402558:	adrp	x0, 416000 <arg_repair>
  40255c:	add	x0, x0, #0x0
  402560:	adrp	x1, 404000 <main+0x54>
  402564:	add	x1, x1, #0x300
  402568:	str	x1, [x0]
  40256c:	b	402740 <parse_proc_cmdline_item+0x430>
  402570:	mov	w0, #0x4                   	// #4
  402574:	str	w0, [sp, #88]
  402578:	str	wzr, [sp, #92]
  40257c:	str	wzr, [sp, #96]
  402580:	ldr	w0, [sp, #96]
  402584:	bl	401b40 <log_get_max_level_realm@plt>
  402588:	mov	w1, w0
  40258c:	ldr	w0, [sp, #88]
  402590:	and	w0, w0, #0x7
  402594:	cmp	w1, w0
  402598:	b.lt	4025e0 <parse_proc_cmdline_item+0x2d0>  // b.tstop
  40259c:	ldr	w0, [sp, #96]
  4025a0:	lsl	w1, w0, #10
  4025a4:	ldr	w0, [sp, #88]
  4025a8:	orr	w7, w1, w0
  4025ac:	adrp	x0, 404000 <main+0x54>
  4025b0:	add	x1, x0, #0x133
  4025b4:	ldr	x6, [sp, #32]
  4025b8:	adrp	x0, 404000 <main+0x54>
  4025bc:	add	x5, x0, #0x308
  4025c0:	adrp	x0, 404000 <main+0x54>
  4025c4:	add	x4, x0, #0x9f0
  4025c8:	mov	w3, #0x69                  	// #105
  4025cc:	mov	x2, x1
  4025d0:	ldr	w1, [sp, #92]
  4025d4:	mov	w0, w7
  4025d8:	bl	401a20 <log_internal_realm@plt>
  4025dc:	b	402740 <parse_proc_cmdline_item+0x430>
  4025e0:	ldr	w0, [sp, #92]
  4025e4:	cmp	w0, #0x0
  4025e8:	b	402740 <parse_proc_cmdline_item+0x430>
  4025ec:	adrp	x0, 404000 <main+0x54>
  4025f0:	add	x1, x0, #0x338
  4025f4:	ldr	x0, [sp, #40]
  4025f8:	bl	401a60 <strcmp@plt>
  4025fc:	cmp	w0, #0x0
  402600:	b.ne	402698 <parse_proc_cmdline_item+0x388>  // b.any
  402604:	ldr	x0, [sp, #32]
  402608:	cmp	x0, #0x0
  40260c:	b.ne	402698 <parse_proc_cmdline_item+0x388>  // b.any
  402610:	mov	w0, #0x4                   	// #4
  402614:	str	w0, [sp, #60]
  402618:	str	wzr, [sp, #64]
  40261c:	str	wzr, [sp, #68]
  402620:	ldr	w0, [sp, #68]
  402624:	bl	401b40 <log_get_max_level_realm@plt>
  402628:	mov	w1, w0
  40262c:	ldr	w0, [sp, #60]
  402630:	and	w0, w0, #0x7
  402634:	cmp	w1, w0
  402638:	b.lt	40267c <parse_proc_cmdline_item+0x36c>  // b.tstop
  40263c:	ldr	w0, [sp, #68]
  402640:	lsl	w1, w0, #10
  402644:	ldr	w0, [sp, #60]
  402648:	orr	w6, w1, w0
  40264c:	adrp	x0, 404000 <main+0x54>
  402650:	add	x1, x0, #0x133
  402654:	adrp	x0, 404000 <main+0x54>
  402658:	add	x5, x0, #0x348
  40265c:	adrp	x0, 404000 <main+0x54>
  402660:	add	x4, x0, #0x9f0
  402664:	mov	w3, #0x6f                  	// #111
  402668:	mov	x2, x1
  40266c:	ldr	w1, [sp, #64]
  402670:	mov	w0, w6
  402674:	bl	401a20 <log_internal_realm@plt>
  402678:	b	402684 <parse_proc_cmdline_item+0x374>
  40267c:	ldr	w0, [sp, #64]
  402680:	cmp	w0, #0x0
  402684:	adrp	x0, 416000 <arg_repair>
  402688:	add	x0, x0, #0x15
  40268c:	mov	w1, #0x1                   	// #1
  402690:	strb	w1, [x0]
  402694:	b	402740 <parse_proc_cmdline_item+0x430>
  402698:	adrp	x0, 404000 <main+0x54>
  40269c:	add	x1, x0, #0x398
  4026a0:	ldr	x0, [sp, #40]
  4026a4:	bl	401a60 <strcmp@plt>
  4026a8:	cmp	w0, #0x0
  4026ac:	b.ne	402740 <parse_proc_cmdline_item+0x430>  // b.any
  4026b0:	ldr	x0, [sp, #32]
  4026b4:	cmp	x0, #0x0
  4026b8:	b.ne	402740 <parse_proc_cmdline_item+0x430>  // b.any
  4026bc:	mov	w0, #0x4                   	// #4
  4026c0:	str	w0, [sp, #72]
  4026c4:	str	wzr, [sp, #76]
  4026c8:	str	wzr, [sp, #80]
  4026cc:	ldr	w0, [sp, #80]
  4026d0:	bl	401b40 <log_get_max_level_realm@plt>
  4026d4:	mov	w1, w0
  4026d8:	ldr	w0, [sp, #72]
  4026dc:	and	w0, w0, #0x7
  4026e0:	cmp	w1, w0
  4026e4:	b.lt	402728 <parse_proc_cmdline_item+0x418>  // b.tstop
  4026e8:	ldr	w0, [sp, #80]
  4026ec:	lsl	w1, w0, #10
  4026f0:	ldr	w0, [sp, #72]
  4026f4:	orr	w6, w1, w0
  4026f8:	adrp	x0, 404000 <main+0x54>
  4026fc:	add	x1, x0, #0x133
  402700:	adrp	x0, 404000 <main+0x54>
  402704:	add	x5, x0, #0x3a8
  402708:	adrp	x0, 404000 <main+0x54>
  40270c:	add	x4, x0, #0x9f0
  402710:	mov	w3, #0x73                  	// #115
  402714:	mov	x2, x1
  402718:	ldr	w1, [sp, #76]
  40271c:	mov	w0, w6
  402720:	bl	401a20 <log_internal_realm@plt>
  402724:	b	402730 <parse_proc_cmdline_item+0x420>
  402728:	ldr	w0, [sp, #76]
  40272c:	cmp	w0, #0x0
  402730:	adrp	x0, 416000 <arg_repair>
  402734:	add	x0, x0, #0x16
  402738:	mov	w1, #0x1                   	// #1
  40273c:	strb	w1, [x0]
  402740:	mov	w0, #0x0                   	// #0
  402744:	ldp	x29, x30, [sp], #112
  402748:	ret

000000000040274c <test_files>:
  40274c:	stp	x29, x30, [sp, #-48]!
  402750:	mov	x29, sp
  402754:	mov	w1, #0x0                   	// #0
  402758:	adrp	x0, 404000 <main+0x54>
  40275c:	add	x0, x0, #0x400
  402760:	bl	401900 <access@plt>
  402764:	cmp	w0, #0x0
  402768:	b.lt	4027f0 <test_files+0xa4>  // b.tstop
  40276c:	mov	w0, #0x3                   	// #3
  402770:	str	w0, [sp, #24]
  402774:	str	wzr, [sp, #28]
  402778:	str	wzr, [sp, #32]
  40277c:	ldr	w0, [sp, #32]
  402780:	bl	401b40 <log_get_max_level_realm@plt>
  402784:	mov	w1, w0
  402788:	ldr	w0, [sp, #24]
  40278c:	and	w0, w0, #0x7
  402790:	cmp	w1, w0
  402794:	b.lt	4027d8 <test_files+0x8c>  // b.tstop
  402798:	ldr	w0, [sp, #32]
  40279c:	lsl	w1, w0, #10
  4027a0:	ldr	w0, [sp, #24]
  4027a4:	orr	w6, w1, w0
  4027a8:	adrp	x0, 404000 <main+0x54>
  4027ac:	add	x1, x0, #0x133
  4027b0:	adrp	x0, 404000 <main+0x54>
  4027b4:	add	x5, x0, #0x410
  4027b8:	adrp	x0, 404000 <main+0x54>
  4027bc:	add	x4, x0, #0xa28
  4027c0:	mov	w3, #0x7f                  	// #127
  4027c4:	mov	x2, x1
  4027c8:	ldr	w1, [sp, #28]
  4027cc:	mov	w0, w6
  4027d0:	bl	401a20 <log_internal_realm@plt>
  4027d4:	b	4027e0 <test_files+0x94>
  4027d8:	ldr	w0, [sp, #28]
  4027dc:	cmp	w0, #0x0
  4027e0:	adrp	x0, 416000 <arg_repair>
  4027e4:	add	x0, x0, #0x15
  4027e8:	mov	w1, #0x1                   	// #1
  4027ec:	strb	w1, [x0]
  4027f0:	mov	w1, #0x0                   	// #0
  4027f4:	adrp	x0, 404000 <main+0x54>
  4027f8:	add	x0, x0, #0x480
  4027fc:	bl	401900 <access@plt>
  402800:	cmp	w0, #0x0
  402804:	b.lt	40288c <test_files+0x140>  // b.tstop
  402808:	mov	w0, #0x3                   	// #3
  40280c:	str	w0, [sp, #36]
  402810:	str	wzr, [sp, #40]
  402814:	str	wzr, [sp, #44]
  402818:	ldr	w0, [sp, #44]
  40281c:	bl	401b40 <log_get_max_level_realm@plt>
  402820:	mov	w1, w0
  402824:	ldr	w0, [sp, #36]
  402828:	and	w0, w0, #0x7
  40282c:	cmp	w1, w0
  402830:	b.lt	402874 <test_files+0x128>  // b.tstop
  402834:	ldr	w0, [sp, #44]
  402838:	lsl	w1, w0, #10
  40283c:	ldr	w0, [sp, #36]
  402840:	orr	w6, w1, w0
  402844:	adrp	x0, 404000 <main+0x54>
  402848:	add	x1, x0, #0x133
  40284c:	adrp	x0, 404000 <main+0x54>
  402850:	add	x5, x0, #0x490
  402854:	adrp	x0, 404000 <main+0x54>
  402858:	add	x4, x0, #0xa28
  40285c:	mov	w3, #0x84                  	// #132
  402860:	mov	x2, x1
  402864:	ldr	w1, [sp, #40]
  402868:	mov	w0, w6
  40286c:	bl	401a20 <log_internal_realm@plt>
  402870:	b	40287c <test_files+0x130>
  402874:	ldr	w0, [sp, #40]
  402878:	cmp	w0, #0x0
  40287c:	adrp	x0, 416000 <arg_repair>
  402880:	add	x0, x0, #0x16
  402884:	mov	w1, #0x1                   	// #1
  402888:	strb	w1, [x0]
  40288c:	mov	w1, #0x0                   	// #0
  402890:	adrp	x0, 404000 <main+0x54>
  402894:	add	x0, x0, #0x508
  402898:	bl	401900 <access@plt>
  40289c:	mvn	w0, w0
  4028a0:	lsr	w0, w0, #31
  4028a4:	and	w1, w0, #0xff
  4028a8:	adrp	x0, 416000 <arg_repair>
  4028ac:	add	x0, x0, #0x17
  4028b0:	strb	w1, [x0]
  4028b4:	nop
  4028b8:	ldp	x29, x30, [sp], #48
  4028bc:	ret

00000000004028c0 <percent>:
  4028c0:	sub	sp, sp, #0x20
  4028c4:	str	w0, [sp, #28]
  4028c8:	str	x1, [sp, #16]
  4028cc:	str	x2, [sp, #8]
  4028d0:	ldr	w0, [sp, #28]
  4028d4:	cmp	w0, #0x0
  4028d8:	b.gt	4028e4 <percent+0x24>
  4028dc:	movi	d0, #0x0
  4028e0:	b	402974 <percent+0xb4>
  4028e4:	ldr	w0, [sp, #28]
  4028e8:	cmp	w0, #0x5
  4028ec:	b.hi	4028fc <percent+0x3c>  // b.pmore
  4028f0:	ldr	x0, [sp, #8]
  4028f4:	cmp	x0, #0x0
  4028f8:	b.ne	402908 <percent+0x48>  // b.any
  4028fc:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  402900:	fmov	d0, x0
  402904:	b	402974 <percent+0xb4>
  402908:	ldr	w0, [sp, #28]
  40290c:	sub	w1, w0, #0x1
  402910:	adrp	x0, 404000 <main+0x54>
  402914:	add	x0, x0, #0xa38
  402918:	sxtw	x1, w1
  40291c:	ldr	w0, [x0, x1, lsl #2]
  402920:	scvtf	d1, w0
  402924:	adrp	x0, 404000 <main+0x54>
  402928:	add	x0, x0, #0xa38
  40292c:	ldrsw	x1, [sp, #28]
  402930:	ldr	w0, [x0, x1, lsl #2]
  402934:	scvtf	d2, w0
  402938:	ldr	w0, [sp, #28]
  40293c:	sub	w1, w0, #0x1
  402940:	adrp	x0, 404000 <main+0x54>
  402944:	add	x0, x0, #0xa38
  402948:	sxtw	x1, w1
  40294c:	ldr	w0, [x0, x1, lsl #2]
  402950:	scvtf	d0, w0
  402954:	fsub	d2, d2, d0
  402958:	ldr	d0, [sp, #16]
  40295c:	ucvtf	d0, d0
  402960:	fmul	d2, d2, d0
  402964:	ldr	d0, [sp, #8]
  402968:	ucvtf	d0, d0
  40296c:	fdiv	d0, d2, d0
  402970:	fadd	d0, d1, d0
  402974:	add	sp, sp, #0x20
  402978:	ret

000000000040297c <process_progress>:
  40297c:	stp	x29, x30, [sp, #-176]!
  402980:	mov	x29, sp
  402984:	str	x19, [sp, #16]
  402988:	str	w0, [sp, #44]
  40298c:	str	x1, [sp, #32]
  402990:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  402994:	add	x0, x0, #0xbb0
  402998:	ldr	x1, [x0]
  40299c:	str	x1, [sp, #168]
  4029a0:	mov	x1, #0x0                   	// #0
  4029a4:	str	xzr, [sp, #112]
  4029a8:	str	xzr, [sp, #144]
  4029ac:	strb	wzr, [sp, #55]
  4029b0:	str	wzr, [sp, #64]
  4029b4:	ldr	w0, [sp, #44]
  4029b8:	cmp	w0, #0x0
  4029bc:	b.ge	4029c8 <process_progress+0x4c>  // b.tcont
  4029c0:	mov	w19, #0x0                   	// #0
  4029c4:	b	402d58 <process_progress+0x3dc>
  4029c8:	adrp	x0, 404000 <main+0x54>
  4029cc:	add	x1, x0, #0x528
  4029d0:	ldr	w0, [sp, #44]
  4029d4:	bl	4017c0 <fdopen@plt>
  4029d8:	str	x0, [sp, #112]
  4029dc:	ldr	x0, [sp, #112]
  4029e0:	cmp	x0, #0x0
  4029e4:	b.ne	402a80 <process_progress+0x104>  // b.any
  4029e8:	ldr	w0, [sp, #44]
  4029ec:	bl	401880 <safe_close@plt>
  4029f0:	mov	w0, #0x7                   	// #7
  4029f4:	str	w0, [sp, #100]
  4029f8:	bl	401970 <__errno_location@plt>
  4029fc:	ldr	w0, [x0]
  402a00:	str	w0, [sp, #104]
  402a04:	str	wzr, [sp, #108]
  402a08:	ldr	w0, [sp, #108]
  402a0c:	bl	401b40 <log_get_max_level_realm@plt>
  402a10:	mov	w1, w0
  402a14:	ldr	w0, [sp, #100]
  402a18:	and	w0, w0, #0x7
  402a1c:	cmp	w1, w0
  402a20:	b.lt	402a68 <process_progress+0xec>  // b.tstop
  402a24:	ldr	w0, [sp, #108]
  402a28:	lsl	w1, w0, #10
  402a2c:	ldr	w0, [sp, #100]
  402a30:	orr	w6, w1, w0
  402a34:	adrp	x0, 404000 <main+0x54>
  402a38:	add	x1, x0, #0x133
  402a3c:	adrp	x0, 404000 <main+0x54>
  402a40:	add	x5, x0, #0x530
  402a44:	adrp	x0, 404000 <main+0x54>
  402a48:	add	x4, x0, #0xa50
  402a4c:	mov	w3, #0xab                  	// #171
  402a50:	mov	x2, x1
  402a54:	ldr	w1, [sp, #104]
  402a58:	mov	w0, w6
  402a5c:	bl	401a20 <log_internal_realm@plt>
  402a60:	mov	w19, w0
  402a64:	b	402d58 <process_progress+0x3dc>
  402a68:	ldr	w0, [sp, #104]
  402a6c:	cmp	w0, #0x0
  402a70:	cneg	w0, w0, lt  // lt = tstop
  402a74:	and	w0, w0, #0xff
  402a78:	neg	w19, w0
  402a7c:	b	402d58 <process_progress+0x3dc>
  402a80:	str	xzr, [sp, #136]
  402a84:	ldr	x6, [sp, #112]
  402a88:	add	x3, sp, #0x88
  402a8c:	add	x2, sp, #0x80
  402a90:	add	x1, sp, #0x78
  402a94:	add	x0, sp, #0x38
  402a98:	mov	x5, x3
  402a9c:	mov	x4, x2
  402aa0:	mov	x3, x1
  402aa4:	mov	x2, x0
  402aa8:	adrp	x0, 404000 <main+0x54>
  402aac:	add	x1, x0, #0x548
  402ab0:	mov	x0, x6
  402ab4:	bl	401920 <__isoc99_fscanf@plt>
  402ab8:	cmp	w0, #0x4
  402abc:	b.eq	402c10 <process_progress+0x294>  // b.none
  402ac0:	ldr	x0, [sp, #112]
  402ac4:	bl	401930 <ferror@plt>
  402ac8:	cmp	w0, #0x0
  402acc:	b.eq	402b60 <process_progress+0x1e4>  // b.none
  402ad0:	mov	w0, #0x4                   	// #4
  402ad4:	str	w0, [sp, #88]
  402ad8:	bl	401970 <__errno_location@plt>
  402adc:	ldr	w0, [x0]
  402ae0:	str	w0, [sp, #92]
  402ae4:	str	wzr, [sp, #96]
  402ae8:	ldr	w0, [sp, #96]
  402aec:	bl	401b40 <log_get_max_level_realm@plt>
  402af0:	mov	w1, w0
  402af4:	ldr	w0, [sp, #88]
  402af8:	and	w0, w0, #0x7
  402afc:	cmp	w1, w0
  402b00:	b.lt	402b44 <process_progress+0x1c8>  // b.tstop
  402b04:	ldr	w0, [sp, #96]
  402b08:	lsl	w1, w0, #10
  402b0c:	ldr	w0, [sp, #88]
  402b10:	orr	w6, w1, w0
  402b14:	adrp	x0, 404000 <main+0x54>
  402b18:	add	x1, x0, #0x133
  402b1c:	adrp	x0, 404000 <main+0x54>
  402b20:	add	x5, x0, #0x558
  402b24:	adrp	x0, 404000 <main+0x54>
  402b28:	add	x4, x0, #0xa50
  402b2c:	mov	w3, #0xb8                  	// #184
  402b30:	mov	x2, x1
  402b34:	ldr	w1, [sp, #92]
  402b38:	mov	w0, w6
  402b3c:	bl	401a20 <log_internal_realm@plt>
  402b40:	b	402b58 <process_progress+0x1dc>
  402b44:	ldr	w0, [sp, #92]
  402b48:	cmp	w0, #0x0
  402b4c:	cneg	w0, w0, lt  // lt = tstop
  402b50:	and	w0, w0, #0xff
  402b54:	neg	w0, w0
  402b58:	str	w0, [sp, #68]
  402b5c:	b	402c08 <process_progress+0x28c>
  402b60:	ldr	x0, [sp, #112]
  402b64:	bl	4019f0 <feof@plt>
  402b68:	cmp	w0, #0x0
  402b6c:	b.eq	402b78 <process_progress+0x1fc>  // b.none
  402b70:	str	wzr, [sp, #68]
  402b74:	b	402c08 <process_progress+0x28c>
  402b78:	mov	w0, #0x4                   	// #4
  402b7c:	str	w0, [sp, #76]
  402b80:	bl	401970 <__errno_location@plt>
  402b84:	ldr	w0, [x0]
  402b88:	orr	w0, w0, #0x40000000
  402b8c:	str	w0, [sp, #80]
  402b90:	str	wzr, [sp, #84]
  402b94:	ldr	w0, [sp, #84]
  402b98:	bl	401b40 <log_get_max_level_realm@plt>
  402b9c:	mov	w1, w0
  402ba0:	ldr	w0, [sp, #76]
  402ba4:	and	w0, w0, #0x7
  402ba8:	cmp	w1, w0
  402bac:	b.lt	402bf0 <process_progress+0x274>  // b.tstop
  402bb0:	ldr	w0, [sp, #84]
  402bb4:	lsl	w1, w0, #10
  402bb8:	ldr	w0, [sp, #76]
  402bbc:	orr	w6, w1, w0
  402bc0:	adrp	x0, 404000 <main+0x54>
  402bc4:	add	x1, x0, #0x133
  402bc8:	adrp	x0, 404000 <main+0x54>
  402bcc:	add	x5, x0, #0x580
  402bd0:	adrp	x0, 404000 <main+0x54>
  402bd4:	add	x4, x0, #0xa50
  402bd8:	mov	w3, #0xbc                  	// #188
  402bdc:	mov	x2, x1
  402be0:	ldr	w1, [sp, #80]
  402be4:	mov	w0, w6
  402be8:	bl	401a20 <log_internal_realm@plt>
  402bec:	b	402c04 <process_progress+0x288>
  402bf0:	ldr	w0, [sp, #80]
  402bf4:	cmp	w0, #0x0
  402bf8:	cneg	w0, w0, lt  // lt = tstop
  402bfc:	and	w0, w0, #0xff
  402c00:	neg	w0, w0
  402c04:	str	w0, [sp, #68]
  402c08:	mov	w19, #0x0                   	// #0
  402c0c:	b	402cdc <process_progress+0x360>
  402c10:	ldrb	w0, [sp, #55]
  402c14:	eor	w0, w0, #0x1
  402c18:	and	w0, w0, #0xff
  402c1c:	cmp	w0, #0x0
  402c20:	b.eq	402c4c <process_progress+0x2d0>  // b.none
  402c24:	ldr	x0, [sp, #32]
  402c28:	bl	4017e0 <fileno@plt>
  402c2c:	mov	w1, #0x6                   	// #6
  402c30:	bl	4018a0 <flock@plt>
  402c34:	cmp	w0, #0x0
  402c38:	b.ge	402c44 <process_progress+0x2c8>  // b.tcont
  402c3c:	mov	w19, #0x1                   	// #1
  402c40:	b	402cdc <process_progress+0x360>
  402c44:	mov	w0, #0x1                   	// #1
  402c48:	strb	w0, [sp, #55]
  402c4c:	mov	w0, #0x1                   	// #1
  402c50:	bl	401a50 <now@plt>
  402c54:	str	x0, [sp, #152]
  402c58:	ldr	x1, [sp, #144]
  402c5c:	mov	x0, #0xc350                	// #50000
  402c60:	add	x0, x1, x0
  402c64:	ldr	x1, [sp, #152]
  402c68:	cmp	x1, x0
  402c6c:	b.cs	402c78 <process_progress+0x2fc>  // b.hs, b.nlast
  402c70:	mov	w19, #0x1                   	// #1
  402c74:	b	402cdc <process_progress+0x360>
  402c78:	ldr	x0, [sp, #152]
  402c7c:	str	x0, [sp, #144]
  402c80:	ldr	w0, [sp, #56]
  402c84:	ldr	x1, [sp, #120]
  402c88:	ldr	x2, [sp, #128]
  402c8c:	bl	4028c0 <percent>
  402c90:	str	d0, [sp, #160]
  402c94:	ldr	x0, [sp, #136]
  402c98:	add	x1, sp, #0x3c
  402c9c:	mov	x3, x1
  402ca0:	ldr	d0, [sp, #160]
  402ca4:	mov	x2, x0
  402ca8:	adrp	x0, 404000 <main+0x54>
  402cac:	add	x1, x0, #0x5a8
  402cb0:	ldr	x0, [sp, #32]
  402cb4:	bl	401850 <fprintf@plt>
  402cb8:	ldr	x0, [sp, #32]
  402cbc:	bl	401940 <fflush@plt>
  402cc0:	ldr	w0, [sp, #60]
  402cc4:	ldr	w1, [sp, #64]
  402cc8:	cmp	w1, w0
  402ccc:	b.ge	402cd8 <process_progress+0x35c>  // b.tcont
  402cd0:	ldr	w0, [sp, #60]
  402cd4:	str	w0, [sp, #64]
  402cd8:	mov	w19, #0x2                   	// #2
  402cdc:	add	x0, sp, #0x88
  402ce0:	bl	401db0 <freep>
  402ce4:	cmp	w19, #0x0
  402ce8:	b.eq	402cf4 <process_progress+0x378>  // b.none
  402cec:	cmp	w19, #0x2
  402cf0:	b	402a80 <process_progress+0x104>
  402cf4:	ldr	w0, [sp, #64]
  402cf8:	cmp	w0, #0x0
  402cfc:	b.gt	402d04 <process_progress+0x388>
  402d00:	b	402d54 <process_progress+0x3d8>
  402d04:	ldr	x1, [sp, #32]
  402d08:	mov	w0, #0xd                   	// #13
  402d0c:	bl	4018f0 <fputc@plt>
  402d10:	str	wzr, [sp, #72]
  402d14:	b	402d30 <process_progress+0x3b4>
  402d18:	ldr	x1, [sp, #32]
  402d1c:	mov	w0, #0x20                  	// #32
  402d20:	bl	4018f0 <fputc@plt>
  402d24:	ldr	w0, [sp, #72]
  402d28:	add	w0, w0, #0x1
  402d2c:	str	w0, [sp, #72]
  402d30:	ldr	w0, [sp, #64]
  402d34:	ldr	w1, [sp, #72]
  402d38:	cmp	w1, w0
  402d3c:	b.cc	402d18 <process_progress+0x39c>  // b.lo, b.ul, b.last
  402d40:	ldr	x1, [sp, #32]
  402d44:	mov	w0, #0xd                   	// #13
  402d48:	bl	4018f0 <fputc@plt>
  402d4c:	ldr	x0, [sp, #32]
  402d50:	bl	401940 <fflush@plt>
  402d54:	ldr	w19, [sp, #68]
  402d58:	add	x0, sp, #0x70
  402d5c:	bl	401e90 <fclosep>
  402d60:	mov	w1, w19
  402d64:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  402d68:	add	x0, x0, #0xbb0
  402d6c:	ldr	x2, [sp, #168]
  402d70:	ldr	x0, [x0]
  402d74:	eor	x0, x2, x0
  402d78:	cmp	x0, #0x0
  402d7c:	b.eq	402d84 <process_progress+0x408>  // b.none
  402d80:	bl	401990 <__stack_chk_fail@plt>
  402d84:	mov	w0, w1
  402d88:	ldr	x19, [sp, #16]
  402d8c:	ldp	x29, x30, [sp], #176
  402d90:	ret

0000000000402d94 <fsck_progress_socket>:
  402d94:	stp	x29, x30, [sp, #-96]!
  402d98:	mov	x29, sp
  402d9c:	stp	x19, x20, [sp, #16]
  402da0:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  402da4:	add	x0, x0, #0xbb0
  402da8:	ldr	x1, [x0]
  402dac:	str	x1, [sp, #88]
  402db0:	mov	x1, #0x0                   	// #0
  402db4:	mov	w0, #0xffffffff            	// #-1
  402db8:	str	w0, [sp, #48]
  402dbc:	mov	w2, #0x0                   	// #0
  402dc0:	mov	w1, #0x1                   	// #1
  402dc4:	mov	w0, #0x1                   	// #1
  402dc8:	bl	401830 <socket@plt>
  402dcc:	str	w0, [sp, #48]
  402dd0:	ldr	w0, [sp, #48]
  402dd4:	cmp	w0, #0x0
  402dd8:	b.ge	402e6c <fsck_progress_socket+0xd8>  // b.tcont
  402ddc:	mov	w0, #0x4                   	// #4
  402de0:	str	w0, [sp, #68]
  402de4:	bl	401970 <__errno_location@plt>
  402de8:	ldr	w0, [x0]
  402dec:	str	w0, [sp, #72]
  402df0:	str	wzr, [sp, #76]
  402df4:	ldr	w0, [sp, #76]
  402df8:	bl	401b40 <log_get_max_level_realm@plt>
  402dfc:	mov	w1, w0
  402e00:	ldr	w0, [sp, #68]
  402e04:	and	w0, w0, #0x7
  402e08:	cmp	w1, w0
  402e0c:	b.lt	402e54 <fsck_progress_socket+0xc0>  // b.tstop
  402e10:	ldr	w0, [sp, #76]
  402e14:	lsl	w1, w0, #10
  402e18:	ldr	w0, [sp, #68]
  402e1c:	orr	w6, w1, w0
  402e20:	adrp	x0, 404000 <main+0x54>
  402e24:	add	x1, x0, #0x133
  402e28:	adrp	x0, 404000 <main+0x54>
  402e2c:	add	x5, x0, #0x5d0
  402e30:	adrp	x0, 404000 <main+0x54>
  402e34:	add	x4, x0, #0xa68
  402e38:	mov	w3, #0xef                  	// #239
  402e3c:	mov	x2, x1
  402e40:	ldr	w1, [sp, #72]
  402e44:	mov	w0, w6
  402e48:	bl	401a20 <log_internal_realm@plt>
  402e4c:	mov	w19, w0
  402e50:	b	403010 <fsck_progress_socket+0x27c>
  402e54:	ldr	w0, [sp, #72]
  402e58:	cmp	w0, #0x0
  402e5c:	cneg	w0, w0, lt  // lt = tstop
  402e60:	and	w0, w0, #0xff
  402e64:	neg	w19, w0
  402e68:	b	403010 <fsck_progress_socket+0x27c>
  402e6c:	ldr	w19, [sp, #48]
  402e70:	adrp	x0, 404000 <main+0x54>
  402e74:	add	x20, x0, #0xa80
  402e78:	adrp	x0, 404000 <main+0x54>
  402e7c:	add	x0, x0, #0xa80
  402e80:	str	x0, [sp, #80]
  402e84:	ldr	x0, [sp, #80]
  402e88:	ldrh	w0, [x0]
  402e8c:	cmp	w0, #0x1
  402e90:	cset	w0, ne  // ne = any
  402e94:	and	w0, w0, #0xff
  402e98:	and	x0, x0, #0xff
  402e9c:	cmp	x0, #0x0
  402ea0:	b.eq	402ecc <fsck_progress_socket+0x138>  // b.none
  402ea4:	adrp	x0, 404000 <main+0x54>
  402ea8:	add	x1, x0, #0x133
  402eac:	adrp	x0, 404000 <main+0x54>
  402eb0:	add	x4, x0, #0xb00
  402eb4:	mov	w3, #0xf1                  	// #241
  402eb8:	mov	x2, x1
  402ebc:	adrp	x0, 404000 <main+0x54>
  402ec0:	add	x1, x0, #0x5e0
  402ec4:	mov	w0, #0x0                   	// #0
  402ec8:	bl	4018c0 <log_assert_failed_realm@plt>
  402ecc:	ldr	x0, [sp, #80]
  402ed0:	ldrb	w0, [x0, #2]
  402ed4:	cmp	w0, #0x0
  402ed8:	b.ne	402ef8 <fsck_progress_socket+0x164>  // b.any
  402edc:	ldr	x0, [sp, #80]
  402ee0:	add	x0, x0, #0x2
  402ee4:	add	x0, x0, #0x1
  402ee8:	mov	x1, #0x6b                  	// #107
  402eec:	bl	401820 <strnlen@plt>
  402ef0:	add	x0, x0, #0x3
  402ef4:	b	402f0c <fsck_progress_socket+0x178>
  402ef8:	ldr	x0, [sp, #80]
  402efc:	add	x0, x0, #0x2
  402f00:	mov	x1, #0x6c                  	// #108
  402f04:	bl	401820 <strnlen@plt>
  402f08:	add	x0, x0, #0x3
  402f0c:	mov	w2, w0
  402f10:	mov	x1, x20
  402f14:	mov	w0, w19
  402f18:	bl	401b00 <connect@plt>
  402f1c:	cmp	w0, #0x0
  402f20:	b.ge	402ff8 <fsck_progress_socket+0x264>  // b.tcont
  402f24:	strb	wzr, [sp, #47]
  402f28:	bl	401970 <__errno_location@plt>
  402f2c:	ldr	w0, [x0]
  402f30:	cmp	w0, #0x2
  402f34:	b.eq	402f40 <fsck_progress_socket+0x1ac>  // b.none
  402f38:	cmp	w0, #0x6f
  402f3c:	b.ne	402f48 <fsck_progress_socket+0x1b4>  // b.any
  402f40:	mov	w0, #0x1                   	// #1
  402f44:	strb	w0, [sp, #47]
  402f48:	nop
  402f4c:	ldrb	w0, [sp, #47]
  402f50:	cmp	w0, #0x0
  402f54:	b.eq	402f60 <fsck_progress_socket+0x1cc>  // b.none
  402f58:	mov	w0, #0x7                   	// #7
  402f5c:	b	402f64 <fsck_progress_socket+0x1d0>
  402f60:	mov	w0, #0x4                   	// #4
  402f64:	str	w0, [sp, #56]
  402f68:	bl	401970 <__errno_location@plt>
  402f6c:	ldr	w0, [x0]
  402f70:	str	w0, [sp, #60]
  402f74:	str	wzr, [sp, #64]
  402f78:	ldr	w0, [sp, #64]
  402f7c:	bl	401b40 <log_get_max_level_realm@plt>
  402f80:	mov	w1, w0
  402f84:	ldr	w0, [sp, #56]
  402f88:	and	w0, w0, #0x7
  402f8c:	cmp	w1, w0
  402f90:	b.lt	402fe0 <fsck_progress_socket+0x24c>  // b.tstop
  402f94:	ldr	w0, [sp, #64]
  402f98:	lsl	w1, w0, #10
  402f9c:	ldr	w0, [sp, #56]
  402fa0:	orr	w7, w1, w0
  402fa4:	adrp	x0, 404000 <main+0x54>
  402fa8:	add	x1, x0, #0x133
  402fac:	adrp	x0, 404000 <main+0x54>
  402fb0:	add	x6, x0, #0xa82
  402fb4:	adrp	x0, 404000 <main+0x54>
  402fb8:	add	x5, x0, #0x600
  402fbc:	adrp	x0, 404000 <main+0x54>
  402fc0:	add	x4, x0, #0xa68
  402fc4:	mov	w3, #0xf2                  	// #242
  402fc8:	mov	x2, x1
  402fcc:	ldr	w1, [sp, #60]
  402fd0:	mov	w0, w7
  402fd4:	bl	401a20 <log_internal_realm@plt>
  402fd8:	mov	w19, w0
  402fdc:	b	403010 <fsck_progress_socket+0x27c>
  402fe0:	ldr	w0, [sp, #60]
  402fe4:	cmp	w0, #0x0
  402fe8:	cneg	w0, w0, lt  // lt = tstop
  402fec:	and	w0, w0, #0xff
  402ff0:	neg	w19, w0
  402ff4:	b	403010 <fsck_progress_socket+0x27c>
  402ff8:	ldr	w0, [sp, #48]
  402ffc:	str	w0, [sp, #52]
  403000:	mov	w0, #0xffffffff            	// #-1
  403004:	str	w0, [sp, #48]
  403008:	ldr	w19, [sp, #52]
  40300c:	nop
  403010:	add	x0, sp, #0x30
  403014:	bl	401e4c <closep>
  403018:	mov	w1, w19
  40301c:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  403020:	add	x0, x0, #0xbb0
  403024:	ldr	x2, [sp, #88]
  403028:	ldr	x0, [x0]
  40302c:	eor	x0, x2, x0
  403030:	cmp	x0, #0x0
  403034:	b.eq	40303c <fsck_progress_socket+0x2a8>  // b.none
  403038:	bl	401990 <__stack_chk_fail@plt>
  40303c:	mov	w0, w1
  403040:	ldp	x19, x20, [sp, #16]
  403044:	ldp	x29, x30, [sp], #96
  403048:	ret

000000000040304c <run>:
  40304c:	sub	sp, sp, #0x240
  403050:	stp	x29, x30, [sp, #32]
  403054:	add	x29, sp, #0x20
  403058:	str	x19, [sp, #48]
  40305c:	str	w0, [sp, #76]
  403060:	str	x1, [sp, #64]
  403064:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  403068:	add	x0, x0, #0xbb0
  40306c:	ldr	x1, [x0]
  403070:	str	x1, [sp, #568]
  403074:	mov	x1, #0x0                   	// #0
  403078:	mov	w0, #0xffffffff            	// #-1
  40307c:	str	w0, [sp, #344]
  403080:	mov	w0, #0xffffffff            	// #-1
  403084:	str	w0, [sp, #348]
  403088:	str	xzr, [sp, #272]
  40308c:	str	xzr, [sp, #280]
  403090:	str	xzr, [sp, #288]
  403094:	bl	401870 <log_setup_service@plt>
  403098:	ldr	w0, [sp, #76]
  40309c:	cmp	w0, #0x2
  4030a0:	b.le	403120 <run+0xd4>
  4030a4:	mov	w0, #0x3                   	// #3
  4030a8:	str	w0, [sp, #260]
  4030ac:	str	wzr, [sp, #264]
  4030b0:	str	wzr, [sp, #268]
  4030b4:	ldr	w0, [sp, #268]
  4030b8:	bl	401b40 <log_get_max_level_realm@plt>
  4030bc:	mov	w1, w0
  4030c0:	ldr	w0, [sp, #260]
  4030c4:	and	w0, w0, #0x7
  4030c8:	cmp	w1, w0
  4030cc:	b.lt	403110 <run+0xc4>  // b.tstop
  4030d0:	ldr	w0, [sp, #268]
  4030d4:	lsl	w1, w0, #10
  4030d8:	ldr	w0, [sp, #260]
  4030dc:	orr	w6, w1, w0
  4030e0:	adrp	x0, 404000 <main+0x54>
  4030e4:	add	x1, x0, #0x133
  4030e8:	adrp	x0, 404000 <main+0x54>
  4030ec:	add	x5, x0, #0x638
  4030f0:	adrp	x0, 404000 <main+0x54>
  4030f4:	add	x4, x0, #0xb18
  4030f8:	mov	w3, #0x106                 	// #262
  4030fc:	mov	x2, x1
  403100:	ldr	w1, [sp, #264]
  403104:	mov	w0, w6
  403108:	bl	401a20 <log_internal_realm@plt>
  40310c:	b	403118 <run+0xcc>
  403110:	ldr	w0, [sp, #264]
  403114:	cmp	w0, #0x0
  403118:	mov	w19, #0xffffffea            	// #-22
  40311c:	b	403f54 <run+0xf08>
  403120:	mov	w0, #0x12                  	// #18
  403124:	bl	4018e0 <umask@plt>
  403128:	mov	w2, #0x1                   	// #1
  40312c:	mov	x1, #0x0                   	// #0
  403130:	adrp	x0, 402000 <safe_fork+0x1c>
  403134:	add	x0, x0, #0x310
  403138:	bl	401ab0 <proc_cmdline_parse@plt>
  40313c:	str	w0, [sp, #88]
  403140:	ldr	w0, [sp, #88]
  403144:	cmp	w0, #0x0
  403148:	b.ge	4031c4 <run+0x178>  // b.tcont
  40314c:	mov	w0, #0x4                   	// #4
  403150:	str	w0, [sp, #92]
  403154:	ldr	w0, [sp, #88]
  403158:	str	w0, [sp, #96]
  40315c:	str	wzr, [sp, #100]
  403160:	ldr	w0, [sp, #100]
  403164:	bl	401b40 <log_get_max_level_realm@plt>
  403168:	mov	w1, w0
  40316c:	ldr	w0, [sp, #92]
  403170:	and	w0, w0, #0x7
  403174:	cmp	w1, w0
  403178:	b.lt	4031bc <run+0x170>  // b.tstop
  40317c:	ldr	w0, [sp, #100]
  403180:	lsl	w1, w0, #10
  403184:	ldr	w0, [sp, #92]
  403188:	orr	w6, w1, w0
  40318c:	adrp	x0, 404000 <main+0x54>
  403190:	add	x1, x0, #0x133
  403194:	adrp	x0, 404000 <main+0x54>
  403198:	add	x5, x0, #0x668
  40319c:	adrp	x0, 404000 <main+0x54>
  4031a0:	add	x4, x0, #0xb18
  4031a4:	mov	w3, #0x10e                 	// #270
  4031a8:	mov	x2, x1
  4031ac:	ldr	w1, [sp, #96]
  4031b0:	mov	w0, w6
  4031b4:	bl	401a20 <log_internal_realm@plt>
  4031b8:	b	4031c4 <run+0x178>
  4031bc:	ldr	w0, [sp, #96]
  4031c0:	cmp	w0, #0x0
  4031c4:	bl	40274c <test_files>
  4031c8:	adrp	x0, 416000 <arg_repair>
  4031cc:	add	x0, x0, #0x16
  4031d0:	ldrb	w0, [x0]
  4031d4:	eor	w0, w0, #0x1
  4031d8:	and	w0, w0, #0xff
  4031dc:	cmp	w0, #0x0
  4031e0:	b.eq	403200 <run+0x1b4>  // b.none
  4031e4:	adrp	x0, 416000 <arg_repair>
  4031e8:	add	x0, x0, #0x15
  4031ec:	ldrb	w0, [x0]
  4031f0:	cmp	w0, #0x0
  4031f4:	b.eq	403200 <run+0x1b4>  // b.none
  4031f8:	mov	w19, #0x0                   	// #0
  4031fc:	b	403f54 <run+0xf08>
  403200:	ldr	w0, [sp, #76]
  403204:	cmp	w0, #0x1
  403208:	b.le	403458 <run+0x40c>
  40320c:	ldr	x0, [sp, #64]
  403210:	add	x0, x0, #0x8
  403214:	ldr	x0, [x0]
  403218:	bl	401a70 <strdup@plt>
  40321c:	str	x0, [sp, #280]
  403220:	ldr	x0, [sp, #280]
  403224:	cmp	x0, #0x0
  403228:	b.ne	403250 <run+0x204>  // b.any
  40322c:	adrp	x0, 404000 <main+0x54>
  403230:	add	x1, x0, #0x133
  403234:	adrp	x0, 404000 <main+0x54>
  403238:	add	x3, x0, #0xb18
  40323c:	mov	w2, #0x118                 	// #280
  403240:	mov	w0, #0x0                   	// #0
  403244:	bl	401b30 <log_oom_internal@plt>
  403248:	mov	w19, w0
  40324c:	b	403f54 <run+0xf08>
  403250:	ldr	x0, [sp, #280]
  403254:	str	x0, [sp, #296]
  403258:	ldr	x0, [sp, #296]
  40325c:	add	x1, sp, #0x1a8
  403260:	bl	404098 <stat64>
  403264:	cmp	w0, #0x0
  403268:	b.ge	403304 <run+0x2b8>  // b.tcont
  40326c:	mov	w0, #0x3                   	// #3
  403270:	str	w0, [sp, #184]
  403274:	bl	401970 <__errno_location@plt>
  403278:	ldr	w0, [x0]
  40327c:	str	w0, [sp, #188]
  403280:	str	wzr, [sp, #192]
  403284:	ldr	w0, [sp, #192]
  403288:	bl	401b40 <log_get_max_level_realm@plt>
  40328c:	mov	w1, w0
  403290:	ldr	w0, [sp, #184]
  403294:	and	w0, w0, #0x7
  403298:	cmp	w1, w0
  40329c:	b.lt	4032ec <run+0x2a0>  // b.tstop
  4032a0:	ldr	w0, [sp, #192]
  4032a4:	lsl	w1, w0, #10
  4032a8:	ldr	w0, [sp, #184]
  4032ac:	orr	w7, w1, w0
  4032b0:	adrp	x0, 404000 <main+0x54>
  4032b4:	add	x1, x0, #0x133
  4032b8:	ldr	x0, [sp, #296]
  4032bc:	mov	x6, x0
  4032c0:	adrp	x0, 404000 <main+0x54>
  4032c4:	add	x5, x0, #0x6a0
  4032c8:	adrp	x0, 404000 <main+0x54>
  4032cc:	add	x4, x0, #0xb18
  4032d0:	mov	w3, #0x11d                 	// #285
  4032d4:	mov	x2, x1
  4032d8:	ldr	w1, [sp, #188]
  4032dc:	mov	w0, w7
  4032e0:	bl	401a20 <log_internal_realm@plt>
  4032e4:	mov	w19, w0
  4032e8:	b	403f54 <run+0xf08>
  4032ec:	ldr	w0, [sp, #188]
  4032f0:	cmp	w0, #0x0
  4032f4:	cneg	w0, w0, lt  // lt = tstop
  4032f8:	and	w0, w0, #0xff
  4032fc:	neg	w19, w0
  403300:	b	403f54 <run+0xf08>
  403304:	ldr	w0, [sp, #440]
  403308:	and	w0, w0, #0xf000
  40330c:	cmp	w0, #0x6, lsl #12
  403310:	b.eq	403398 <run+0x34c>  // b.none
  403314:	mov	w0, #0x3                   	// #3
  403318:	str	w0, [sp, #172]
  40331c:	str	wzr, [sp, #176]
  403320:	str	wzr, [sp, #180]
  403324:	ldr	w0, [sp, #180]
  403328:	bl	401b40 <log_get_max_level_realm@plt>
  40332c:	mov	w1, w0
  403330:	ldr	w0, [sp, #172]
  403334:	and	w0, w0, #0x7
  403338:	cmp	w1, w0
  40333c:	b.lt	403388 <run+0x33c>  // b.tstop
  403340:	ldr	w0, [sp, #180]
  403344:	lsl	w1, w0, #10
  403348:	ldr	w0, [sp, #172]
  40334c:	orr	w7, w1, w0
  403350:	adrp	x0, 404000 <main+0x54>
  403354:	add	x1, x0, #0x133
  403358:	ldr	x0, [sp, #296]
  40335c:	mov	x6, x0
  403360:	adrp	x0, 404000 <main+0x54>
  403364:	add	x5, x0, #0x6b8
  403368:	adrp	x0, 404000 <main+0x54>
  40336c:	add	x4, x0, #0xb18
  403370:	mov	w3, #0x120                 	// #288
  403374:	mov	x2, x1
  403378:	ldr	w1, [sp, #176]
  40337c:	mov	w0, w7
  403380:	bl	401a20 <log_internal_realm@plt>
  403384:	b	403390 <run+0x344>
  403388:	ldr	w0, [sp, #176]
  40338c:	cmp	w0, #0x0
  403390:	mov	w19, #0xffffffea            	// #-22
  403394:	b	403f54 <run+0xf08>
  403398:	ldr	x1, [sp, #456]
  40339c:	add	x0, sp, #0x110
  4033a0:	mov	x2, x1
  4033a4:	mov	w1, #0x62                  	// #98
  4033a8:	bl	4019a0 <sd_device_new_from_devnum@plt>
  4033ac:	str	w0, [sp, #88]
  4033b0:	ldr	w0, [sp, #88]
  4033b4:	cmp	w0, #0x0
  4033b8:	b.ge	403450 <run+0x404>  // b.tcont
  4033bc:	mov	w0, #0x3                   	// #3
  4033c0:	str	w0, [sp, #160]
  4033c4:	ldr	w0, [sp, #88]
  4033c8:	str	w0, [sp, #164]
  4033cc:	str	wzr, [sp, #168]
  4033d0:	ldr	w0, [sp, #168]
  4033d4:	bl	401b40 <log_get_max_level_realm@plt>
  4033d8:	mov	w1, w0
  4033dc:	ldr	w0, [sp, #160]
  4033e0:	and	w0, w0, #0x7
  4033e4:	cmp	w1, w0
  4033e8:	b.lt	403438 <run+0x3ec>  // b.tstop
  4033ec:	ldr	w0, [sp, #168]
  4033f0:	lsl	w1, w0, #10
  4033f4:	ldr	w0, [sp, #160]
  4033f8:	orr	w7, w1, w0
  4033fc:	adrp	x0, 404000 <main+0x54>
  403400:	add	x1, x0, #0x133
  403404:	ldr	x0, [sp, #296]
  403408:	mov	x6, x0
  40340c:	adrp	x0, 404000 <main+0x54>
  403410:	add	x5, x0, #0x6d8
  403414:	adrp	x0, 404000 <main+0x54>
  403418:	add	x4, x0, #0xb18
  40341c:	mov	w3, #0x126                 	// #294
  403420:	mov	x2, x1
  403424:	ldr	w1, [sp, #164]
  403428:	mov	w0, w7
  40342c:	bl	401a20 <log_internal_realm@plt>
  403430:	mov	w19, w0
  403434:	b	403f54 <run+0xf08>
  403438:	ldr	w0, [sp, #164]
  40343c:	cmp	w0, #0x0
  403440:	cneg	w0, w0, lt  // lt = tstop
  403444:	and	w0, w0, #0xff
  403448:	neg	w19, w0
  40344c:	b	403f54 <run+0xf08>
  403450:	strb	wzr, [sp, #83]
  403454:	b	4037dc <run+0x790>
  403458:	add	x0, sp, #0x1a8
  40345c:	mov	x1, x0
  403460:	adrp	x0, 404000 <main+0x54>
  403464:	add	x0, x0, #0x6f8
  403468:	bl	404098 <stat64>
  40346c:	cmp	w0, #0x0
  403470:	b.ge	403504 <run+0x4b8>  // b.tcont
  403474:	mov	w0, #0x3                   	// #3
  403478:	str	w0, [sp, #148]
  40347c:	bl	401970 <__errno_location@plt>
  403480:	ldr	w0, [x0]
  403484:	str	w0, [sp, #152]
  403488:	str	wzr, [sp, #156]
  40348c:	ldr	w0, [sp, #156]
  403490:	bl	401b40 <log_get_max_level_realm@plt>
  403494:	mov	w1, w0
  403498:	ldr	w0, [sp, #148]
  40349c:	and	w0, w0, #0x7
  4034a0:	cmp	w1, w0
  4034a4:	b.lt	4034ec <run+0x4a0>  // b.tstop
  4034a8:	ldr	w0, [sp, #156]
  4034ac:	lsl	w1, w0, #10
  4034b0:	ldr	w0, [sp, #148]
  4034b4:	orr	w6, w1, w0
  4034b8:	adrp	x0, 404000 <main+0x54>
  4034bc:	add	x1, x0, #0x133
  4034c0:	adrp	x0, 404000 <main+0x54>
  4034c4:	add	x5, x0, #0x700
  4034c8:	adrp	x0, 404000 <main+0x54>
  4034cc:	add	x4, x0, #0xb18
  4034d0:	mov	w3, #0x12f                 	// #303
  4034d4:	mov	x2, x1
  4034d8:	ldr	w1, [sp, #152]
  4034dc:	mov	w0, w6
  4034e0:	bl	401a20 <log_internal_realm@plt>
  4034e4:	mov	w19, w0
  4034e8:	b	403f54 <run+0xf08>
  4034ec:	ldr	w0, [sp, #152]
  4034f0:	cmp	w0, #0x0
  4034f4:	cneg	w0, w0, lt  // lt = tstop
  4034f8:	and	w0, w0, #0xff
  4034fc:	neg	w19, w0
  403500:	b	403f54 <run+0xf08>
  403504:	ldr	x0, [sp, #424]
  403508:	bl	401a40 <gnu_dev_major@plt>
  40350c:	cmp	w0, #0x0
  403510:	b.ne	403590 <run+0x544>  // b.any
  403514:	mov	w0, #0x7                   	// #7
  403518:	str	w0, [sp, #136]
  40351c:	str	wzr, [sp, #140]
  403520:	str	wzr, [sp, #144]
  403524:	ldr	w0, [sp, #144]
  403528:	bl	401b40 <log_get_max_level_realm@plt>
  40352c:	mov	w1, w0
  403530:	ldr	w0, [sp, #136]
  403534:	and	w0, w0, #0x7
  403538:	cmp	w1, w0
  40353c:	b.lt	403580 <run+0x534>  // b.tstop
  403540:	ldr	w0, [sp, #144]
  403544:	lsl	w1, w0, #10
  403548:	ldr	w0, [sp, #136]
  40354c:	orr	w6, w1, w0
  403550:	adrp	x0, 404000 <main+0x54>
  403554:	add	x1, x0, #0x133
  403558:	adrp	x0, 404000 <main+0x54>
  40355c:	add	x5, x0, #0x728
  403560:	adrp	x0, 404000 <main+0x54>
  403564:	add	x4, x0, #0xb18
  403568:	mov	w3, #0x133                 	// #307
  40356c:	mov	x2, x1
  403570:	ldr	w1, [sp, #140]
  403574:	mov	w0, w6
  403578:	bl	401a20 <log_internal_realm@plt>
  40357c:	b	403588 <run+0x53c>
  403580:	ldr	w0, [sp, #140]
  403584:	cmp	w0, #0x0
  403588:	mov	w19, #0x0                   	// #0
  40358c:	b	403f54 <run+0xf08>
  403590:	ldp	x0, x1, [sp, #496]
  403594:	stp	x0, x1, [sp, #352]
  403598:	add	x0, sp, #0x200
  40359c:	ldp	x0, x1, [x0]
  4035a0:	stp	x0, x1, [sp, #368]
  4035a4:	add	x0, sp, #0x160
  4035a8:	mov	w3, #0x0                   	// #0
  4035ac:	mov	x2, x0
  4035b0:	adrp	x0, 404000 <main+0x54>
  4035b4:	add	x1, x0, #0x6f8
  4035b8:	mov	w0, #0xffffff9c            	// #-100
  4035bc:	bl	4019c0 <utimensat@plt>
  4035c0:	cmp	w0, #0x0
  4035c4:	b.ne	403644 <run+0x5f8>  // b.any
  4035c8:	mov	w0, #0x6                   	// #6
  4035cc:	str	w0, [sp, #124]
  4035d0:	str	wzr, [sp, #128]
  4035d4:	str	wzr, [sp, #132]
  4035d8:	ldr	w0, [sp, #132]
  4035dc:	bl	401b40 <log_get_max_level_realm@plt>
  4035e0:	mov	w1, w0
  4035e4:	ldr	w0, [sp, #124]
  4035e8:	and	w0, w0, #0x7
  4035ec:	cmp	w1, w0
  4035f0:	b.lt	403634 <run+0x5e8>  // b.tstop
  4035f4:	ldr	w0, [sp, #132]
  4035f8:	lsl	w1, w0, #10
  4035fc:	ldr	w0, [sp, #124]
  403600:	orr	w6, w1, w0
  403604:	adrp	x0, 404000 <main+0x54>
  403608:	add	x1, x0, #0x133
  40360c:	adrp	x0, 404000 <main+0x54>
  403610:	add	x5, x0, #0x760
  403614:	adrp	x0, 404000 <main+0x54>
  403618:	add	x4, x0, #0xb18
  40361c:	mov	w3, #0x13c                 	// #316
  403620:	mov	x2, x1
  403624:	ldr	w1, [sp, #128]
  403628:	mov	w0, w6
  40362c:	bl	401a20 <log_internal_realm@plt>
  403630:	b	40363c <run+0x5f0>
  403634:	ldr	w0, [sp, #128]
  403638:	cmp	w0, #0x0
  40363c:	mov	w19, #0x0                   	// #0
  403640:	b	403f54 <run+0xf08>
  403644:	ldr	x1, [sp, #424]
  403648:	add	x0, sp, #0x110
  40364c:	mov	x2, x1
  403650:	mov	w1, #0x62                  	// #98
  403654:	bl	4019a0 <sd_device_new_from_devnum@plt>
  403658:	str	w0, [sp, #88]
  40365c:	ldr	w0, [sp, #88]
  403660:	cmp	w0, #0x0
  403664:	b.ge	4036f4 <run+0x6a8>  // b.tcont
  403668:	mov	w0, #0x3                   	// #3
  40366c:	str	w0, [sp, #112]
  403670:	ldr	w0, [sp, #88]
  403674:	str	w0, [sp, #116]
  403678:	str	wzr, [sp, #120]
  40367c:	ldr	w0, [sp, #120]
  403680:	bl	401b40 <log_get_max_level_realm@plt>
  403684:	mov	w1, w0
  403688:	ldr	w0, [sp, #112]
  40368c:	and	w0, w0, #0x7
  403690:	cmp	w1, w0
  403694:	b.lt	4036dc <run+0x690>  // b.tstop
  403698:	ldr	w0, [sp, #120]
  40369c:	lsl	w1, w0, #10
  4036a0:	ldr	w0, [sp, #112]
  4036a4:	orr	w6, w1, w0
  4036a8:	adrp	x0, 404000 <main+0x54>
  4036ac:	add	x1, x0, #0x133
  4036b0:	adrp	x0, 404000 <main+0x54>
  4036b4:	add	x5, x0, #0x790
  4036b8:	adrp	x0, 404000 <main+0x54>
  4036bc:	add	x4, x0, #0xb18
  4036c0:	mov	w3, #0x142                 	// #322
  4036c4:	mov	x2, x1
  4036c8:	ldr	w1, [sp, #116]
  4036cc:	mov	w0, w6
  4036d0:	bl	401a20 <log_internal_realm@plt>
  4036d4:	mov	w19, w0
  4036d8:	b	403f54 <run+0xf08>
  4036dc:	ldr	w0, [sp, #116]
  4036e0:	cmp	w0, #0x0
  4036e4:	cneg	w0, w0, lt  // lt = tstop
  4036e8:	and	w0, w0, #0xff
  4036ec:	neg	w19, w0
  4036f0:	b	403f54 <run+0xf08>
  4036f4:	ldr	x0, [sp, #272]
  4036f8:	add	x1, sp, #0x128
  4036fc:	bl	401800 <sd_device_get_devname@plt>
  403700:	str	w0, [sp, #88]
  403704:	ldr	w0, [sp, #88]
  403708:	cmp	w0, #0x0
  40370c:	b.ge	4037d4 <run+0x788>  // b.tcont
  403710:	str	xzr, [sp, #312]
  403714:	ldr	x0, [sp, #272]
  403718:	str	x0, [sp, #320]
  40371c:	mov	w0, #0x3                   	// #3
  403720:	str	w0, [sp, #104]
  403724:	ldr	w0, [sp, #88]
  403728:	str	w0, [sp, #108]
  40372c:	ldr	x0, [sp, #320]
  403730:	cmp	x0, #0x0
  403734:	b.eq	403770 <run+0x724>  // b.none
  403738:	mov	w0, #0x0                   	// #0
  40373c:	bl	401b40 <log_get_max_level_realm@plt>
  403740:	mov	w1, w0
  403744:	ldr	w0, [sp, #104]
  403748:	cmp	w0, w1
  40374c:	cset	w0, le
  403750:	and	w0, w0, #0xff
  403754:	and	x0, x0, #0xff
  403758:	cmp	x0, #0x0
  40375c:	b.eq	403770 <run+0x724>  // b.none
  403760:	add	x0, sp, #0x138
  403764:	mov	x1, x0
  403768:	ldr	x0, [sp, #320]
  40376c:	bl	4018b0 <sd_device_get_sysname@plt>
  403770:	adrp	x0, 404000 <main+0x54>
  403774:	add	x2, x0, #0x133
  403778:	ldr	x0, [sp, #312]
  40377c:	cmp	x0, #0x0
  403780:	b.eq	403790 <run+0x744>  // b.none
  403784:	adrp	x0, 404000 <main+0x54>
  403788:	add	x0, x0, #0x7b8
  40378c:	b	403794 <run+0x748>
  403790:	mov	x0, #0x0                   	// #0
  403794:	ldr	x3, [sp, #312]
  403798:	adrp	x1, 404000 <main+0x54>
  40379c:	add	x1, x1, #0x7c0
  4037a0:	str	x1, [sp, #8]
  4037a4:	str	xzr, [sp]
  4037a8:	mov	x7, #0x0                   	// #0
  4037ac:	mov	x6, x3
  4037b0:	mov	x5, x0
  4037b4:	adrp	x0, 404000 <main+0x54>
  4037b8:	add	x4, x0, #0xb18
  4037bc:	mov	w3, #0x146                 	// #326
  4037c0:	ldr	w1, [sp, #108]
  4037c4:	ldr	w0, [sp, #104]
  4037c8:	bl	401960 <log_object_internal@plt>
  4037cc:	mov	w19, w0
  4037d0:	b	403f54 <run+0xf08>
  4037d4:	mov	w0, #0x1                   	// #1
  4037d8:	strb	w0, [sp, #83]
  4037dc:	ldr	x3, [sp, #272]
  4037e0:	add	x0, sp, #0x130
  4037e4:	mov	x2, x0
  4037e8:	adrp	x0, 404000 <main+0x54>
  4037ec:	add	x1, x0, #0x7f8
  4037f0:	mov	x0, x3
  4037f4:	bl	401780 <sd_device_get_property_value@plt>
  4037f8:	cmp	w0, #0x0
  4037fc:	b.lt	4039b4 <run+0x968>  // b.tstop
  403800:	ldr	x0, [sp, #304]
  403804:	bl	401af0 <fsck_exists@plt>
  403808:	str	w0, [sp, #88]
  40380c:	ldr	w0, [sp, #88]
  403810:	cmp	w0, #0x0
  403814:	b.ge	4038e0 <run+0x894>  // b.tcont
  403818:	str	xzr, [sp, #312]
  40381c:	ldr	x0, [sp, #272]
  403820:	str	x0, [sp, #336]
  403824:	mov	w0, #0x4                   	// #4
  403828:	str	w0, [sp, #204]
  40382c:	ldr	w0, [sp, #88]
  403830:	str	w0, [sp, #208]
  403834:	ldr	x0, [sp, #336]
  403838:	cmp	x0, #0x0
  40383c:	b.eq	403878 <run+0x82c>  // b.none
  403840:	mov	w0, #0x0                   	// #0
  403844:	bl	401b40 <log_get_max_level_realm@plt>
  403848:	mov	w1, w0
  40384c:	ldr	w0, [sp, #204]
  403850:	cmp	w0, w1
  403854:	cset	w0, le
  403858:	and	w0, w0, #0xff
  40385c:	and	x0, x0, #0xff
  403860:	cmp	x0, #0x0
  403864:	b.eq	403878 <run+0x82c>  // b.none
  403868:	add	x0, sp, #0x138
  40386c:	mov	x1, x0
  403870:	ldr	x0, [sp, #336]
  403874:	bl	4018b0 <sd_device_get_sysname@plt>
  403878:	adrp	x0, 404000 <main+0x54>
  40387c:	add	x2, x0, #0x133
  403880:	ldr	x0, [sp, #312]
  403884:	cmp	x0, #0x0
  403888:	b.eq	403898 <run+0x84c>  // b.none
  40388c:	adrp	x0, 404000 <main+0x54>
  403890:	add	x0, x0, #0x7b8
  403894:	b	40389c <run+0x850>
  403898:	mov	x0, #0x0                   	// #0
  40389c:	ldr	x3, [sp, #312]
  4038a0:	ldr	x1, [sp, #304]
  4038a4:	str	x1, [sp, #16]
  4038a8:	adrp	x1, 404000 <main+0x54>
  4038ac:	add	x1, x1, #0x808
  4038b0:	str	x1, [sp, #8]
  4038b4:	str	xzr, [sp]
  4038b8:	mov	x7, #0x0                   	// #0
  4038bc:	mov	x6, x3
  4038c0:	mov	x5, x0
  4038c4:	adrp	x0, 404000 <main+0x54>
  4038c8:	add	x4, x0, #0xb18
  4038cc:	mov	w3, #0x14e                 	// #334
  4038d0:	ldr	w1, [sp, #208]
  4038d4:	ldr	w0, [sp, #204]
  4038d8:	bl	401960 <log_object_internal@plt>
  4038dc:	b	4039b4 <run+0x968>
  4038e0:	ldr	w0, [sp, #88]
  4038e4:	cmp	w0, #0x0
  4038e8:	b.ne	4039b4 <run+0x968>  // b.any
  4038ec:	str	xzr, [sp, #312]
  4038f0:	ldr	x0, [sp, #272]
  4038f4:	str	x0, [sp, #328]
  4038f8:	mov	w0, #0x6                   	// #6
  4038fc:	str	w0, [sp, #196]
  403900:	str	wzr, [sp, #200]
  403904:	ldr	x0, [sp, #328]
  403908:	cmp	x0, #0x0
  40390c:	b.eq	403948 <run+0x8fc>  // b.none
  403910:	mov	w0, #0x0                   	// #0
  403914:	bl	401b40 <log_get_max_level_realm@plt>
  403918:	mov	w1, w0
  40391c:	ldr	w0, [sp, #196]
  403920:	cmp	w0, w1
  403924:	cset	w0, le
  403928:	and	w0, w0, #0xff
  40392c:	and	x0, x0, #0xff
  403930:	cmp	x0, #0x0
  403934:	b.eq	403948 <run+0x8fc>  // b.none
  403938:	add	x0, sp, #0x138
  40393c:	mov	x1, x0
  403940:	ldr	x0, [sp, #328]
  403944:	bl	4018b0 <sd_device_get_sysname@plt>
  403948:	adrp	x0, 404000 <main+0x54>
  40394c:	add	x2, x0, #0x133
  403950:	ldr	x0, [sp, #312]
  403954:	cmp	x0, #0x0
  403958:	b.eq	403968 <run+0x91c>  // b.none
  40395c:	adrp	x0, 404000 <main+0x54>
  403960:	add	x0, x0, #0x7b8
  403964:	b	40396c <run+0x920>
  403968:	mov	x0, #0x0                   	// #0
  40396c:	ldr	x3, [sp, #312]
  403970:	ldr	x1, [sp, #304]
  403974:	str	x1, [sp, #16]
  403978:	adrp	x1, 404000 <main+0x54>
  40397c:	add	x1, x1, #0x840
  403980:	str	x1, [sp, #8]
  403984:	str	xzr, [sp]
  403988:	mov	x7, #0x0                   	// #0
  40398c:	mov	x6, x3
  403990:	mov	x5, x0
  403994:	adrp	x0, 404000 <main+0x54>
  403998:	add	x4, x0, #0xb18
  40399c:	mov	w3, #0x150                 	// #336
  4039a0:	ldr	w1, [sp, #200]
  4039a4:	ldr	w0, [sp, #196]
  4039a8:	bl	401960 <log_object_internal@plt>
  4039ac:	mov	w19, #0x0                   	// #0
  4039b0:	b	403f54 <run+0xf08>
  4039b4:	adrp	x0, 404000 <main+0x54>
  4039b8:	add	x1, x0, #0x878
  4039bc:	adrp	x0, 404000 <main+0x54>
  4039c0:	add	x0, x0, #0x880
  4039c4:	bl	401b20 <fopen64@plt>
  4039c8:	str	x0, [sp, #288]
  4039cc:	ldr	x0, [sp, #288]
  4039d0:	cmp	x0, #0x0
  4039d4:	b.eq	403a8c <run+0xa40>  // b.none
  4039d8:	adrp	x0, 416000 <arg_repair>
  4039dc:	add	x0, x0, #0x17
  4039e0:	ldrb	w0, [x0]
  4039e4:	cmp	w0, #0x0
  4039e8:	b.eq	403a8c <run+0xa40>  // b.none
  4039ec:	add	x0, sp, #0x158
  4039f0:	bl	4017a0 <pipe@plt>
  4039f4:	cmp	w0, #0x0
  4039f8:	b.ge	403a8c <run+0xa40>  // b.tcont
  4039fc:	mov	w0, #0x3                   	// #3
  403a00:	str	w0, [sp, #212]
  403a04:	bl	401970 <__errno_location@plt>
  403a08:	ldr	w0, [x0]
  403a0c:	str	w0, [sp, #216]
  403a10:	str	wzr, [sp, #220]
  403a14:	ldr	w0, [sp, #220]
  403a18:	bl	401b40 <log_get_max_level_realm@plt>
  403a1c:	mov	w1, w0
  403a20:	ldr	w0, [sp, #212]
  403a24:	and	w0, w0, #0x7
  403a28:	cmp	w1, w0
  403a2c:	b.lt	403a74 <run+0xa28>  // b.tstop
  403a30:	ldr	w0, [sp, #220]
  403a34:	lsl	w1, w0, #10
  403a38:	ldr	w0, [sp, #212]
  403a3c:	orr	w6, w1, w0
  403a40:	adrp	x0, 404000 <main+0x54>
  403a44:	add	x1, x0, #0x133
  403a48:	adrp	x0, 404000 <main+0x54>
  403a4c:	add	x5, x0, #0x890
  403a50:	adrp	x0, 404000 <main+0x54>
  403a54:	add	x4, x0, #0xb18
  403a58:	mov	w3, #0x159                 	// #345
  403a5c:	mov	x2, x1
  403a60:	ldr	w1, [sp, #216]
  403a64:	mov	w0, w6
  403a68:	bl	401a20 <log_internal_realm@plt>
  403a6c:	mov	w19, w0
  403a70:	b	403f54 <run+0xf08>
  403a74:	ldr	w0, [sp, #216]
  403a78:	cmp	w0, #0x0
  403a7c:	cneg	w0, w0, lt  // lt = tstop
  403a80:	and	w0, w0, #0xff
  403a84:	neg	w19, w0
  403a88:	b	403f54 <run+0xf08>
  403a8c:	add	x0, sp, #0x138
  403a90:	mov	x2, x0
  403a94:	mov	w1, #0x25                  	// #37
  403a98:	adrp	x0, 404000 <main+0x54>
  403a9c:	add	x0, x0, #0x8a0
  403aa0:	bl	401fe4 <safe_fork>
  403aa4:	str	w0, [sp, #88]
  403aa8:	ldr	w0, [sp, #88]
  403aac:	cmp	w0, #0x0
  403ab0:	b.ge	403abc <run+0xa70>  // b.tcont
  403ab4:	ldr	w19, [sp, #88]
  403ab8:	b	403f54 <run+0xf08>
  403abc:	ldr	w0, [sp, #88]
  403ac0:	cmp	w0, #0x0
  403ac4:	b.ne	403d60 <run+0xd14>  // b.any
  403ac8:	mov	w0, #0xffffffff            	// #-1
  403acc:	str	w0, [sp, #256]
  403ad0:	str	wzr, [sp, #84]
  403ad4:	ldr	w0, [sp, #344]
  403ad8:	bl	401880 <safe_close@plt>
  403adc:	str	w0, [sp, #344]
  403ae0:	bl	402d94 <fsck_progress_socket>
  403ae4:	str	w0, [sp, #256]
  403ae8:	ldr	w0, [sp, #256]
  403aec:	cmp	w0, #0x0
  403af0:	b.lt	403b5c <run+0xb10>  // b.tstop
  403af4:	ldr	w0, [sp, #348]
  403af8:	bl	401880 <safe_close@plt>
  403afc:	str	w0, [sp, #348]
  403b00:	add	x4, sp, #0x228
  403b04:	ldr	w3, [sp, #256]
  403b08:	adrp	x0, 404000 <main+0x54>
  403b0c:	add	x2, x0, #0x8a8
  403b10:	mov	x1, #0xf                   	// #15
  403b14:	mov	x0, x4
  403b18:	bl	401840 <snprintf@plt>
  403b1c:	cmp	w0, #0xe
  403b20:	cset	w0, hi  // hi = pmore
  403b24:	and	w0, w0, #0xff
  403b28:	and	x0, x0, #0xff
  403b2c:	cmp	x0, #0x0
  403b30:	b.eq	403bcc <run+0xb80>  // b.none
  403b34:	adrp	x0, 404000 <main+0x54>
  403b38:	add	x1, x0, #0x133
  403b3c:	adrp	x0, 404000 <main+0x54>
  403b40:	add	x4, x0, #0xb20
  403b44:	mov	w3, #0x16e                 	// #366
  403b48:	mov	x2, x1
  403b4c:	adrp	x0, 404000 <main+0x54>
  403b50:	add	x1, x0, #0x8b0
  403b54:	mov	w0, #0x0                   	// #0
  403b58:	bl	4018c0 <log_assert_failed_realm@plt>
  403b5c:	ldr	w0, [sp, #348]
  403b60:	cmp	w0, #0x0
  403b64:	b.lt	403bc8 <run+0xb7c>  // b.tstop
  403b68:	ldr	w0, [sp, #348]
  403b6c:	add	x4, sp, #0x228
  403b70:	mov	w3, w0
  403b74:	adrp	x0, 404000 <main+0x54>
  403b78:	add	x2, x0, #0x8a8
  403b7c:	mov	x1, #0xf                   	// #15
  403b80:	mov	x0, x4
  403b84:	bl	401840 <snprintf@plt>
  403b88:	cmp	w0, #0xe
  403b8c:	cset	w0, hi  // hi = pmore
  403b90:	and	w0, w0, #0xff
  403b94:	and	x0, x0, #0xff
  403b98:	cmp	x0, #0x0
  403b9c:	b.eq	403bcc <run+0xb80>  // b.none
  403ba0:	adrp	x0, 404000 <main+0x54>
  403ba4:	add	x1, x0, #0x133
  403ba8:	adrp	x0, 404000 <main+0x54>
  403bac:	add	x4, x0, #0xb20
  403bb0:	mov	w3, #0x171                 	// #369
  403bb4:	mov	x2, x1
  403bb8:	adrp	x0, 404000 <main+0x54>
  403bbc:	add	x1, x0, #0x8b0
  403bc0:	mov	w0, #0x0                   	// #0
  403bc4:	bl	4018c0 <log_assert_failed_realm@plt>
  403bc8:	strb	wzr, [sp, #552]
  403bcc:	ldr	w0, [sp, #84]
  403bd0:	add	w1, w0, #0x1
  403bd4:	str	w1, [sp, #84]
  403bd8:	sxtw	x0, w0
  403bdc:	lsl	x0, x0, #3
  403be0:	add	x1, sp, #0x160
  403be4:	adrp	x2, 404000 <main+0x54>
  403be8:	add	x2, x2, #0x8d8
  403bec:	str	x2, [x1, x0]
  403bf0:	ldr	w0, [sp, #84]
  403bf4:	add	w1, w0, #0x1
  403bf8:	str	w1, [sp, #84]
  403bfc:	adrp	x1, 416000 <arg_repair>
  403c00:	add	x1, x1, #0x0
  403c04:	ldr	x2, [x1]
  403c08:	sxtw	x0, w0
  403c0c:	lsl	x0, x0, #3
  403c10:	add	x1, sp, #0x160
  403c14:	str	x2, [x1, x0]
  403c18:	ldr	w0, [sp, #84]
  403c1c:	add	w1, w0, #0x1
  403c20:	str	w1, [sp, #84]
  403c24:	sxtw	x0, w0
  403c28:	lsl	x0, x0, #3
  403c2c:	add	x1, sp, #0x160
  403c30:	adrp	x2, 404000 <main+0x54>
  403c34:	add	x2, x2, #0x8e8
  403c38:	str	x2, [x1, x0]
  403c3c:	ldr	w0, [sp, #84]
  403c40:	add	w1, w0, #0x1
  403c44:	str	w1, [sp, #84]
  403c48:	sxtw	x0, w0
  403c4c:	lsl	x0, x0, #3
  403c50:	add	x1, sp, #0x160
  403c54:	adrp	x2, 404000 <main+0x54>
  403c58:	add	x2, x2, #0x8f0
  403c5c:	str	x2, [x1, x0]
  403c60:	ldrb	w0, [sp, #83]
  403c64:	eor	w0, w0, #0x1
  403c68:	and	w0, w0, #0xff
  403c6c:	cmp	w0, #0x0
  403c70:	b.eq	403c98 <run+0xc4c>  // b.none
  403c74:	ldr	w0, [sp, #84]
  403c78:	add	w1, w0, #0x1
  403c7c:	str	w1, [sp, #84]
  403c80:	sxtw	x0, w0
  403c84:	lsl	x0, x0, #3
  403c88:	add	x1, sp, #0x160
  403c8c:	adrp	x2, 404000 <main+0x54>
  403c90:	add	x2, x2, #0x8f8
  403c94:	str	x2, [x1, x0]
  403c98:	adrp	x0, 416000 <arg_repair>
  403c9c:	add	x0, x0, #0x16
  403ca0:	ldrb	w0, [x0]
  403ca4:	cmp	w0, #0x0
  403ca8:	b.eq	403cd0 <run+0xc84>  // b.none
  403cac:	ldr	w0, [sp, #84]
  403cb0:	add	w1, w0, #0x1
  403cb4:	str	w1, [sp, #84]
  403cb8:	sxtw	x0, w0
  403cbc:	lsl	x0, x0, #3
  403cc0:	add	x1, sp, #0x160
  403cc4:	adrp	x2, 404000 <main+0x54>
  403cc8:	add	x2, x2, #0x900
  403ccc:	str	x2, [x1, x0]
  403cd0:	add	x0, sp, #0x228
  403cd4:	bl	401e0c <isempty>
  403cd8:	and	w0, w0, #0xff
  403cdc:	eor	w0, w0, #0x1
  403ce0:	and	w0, w0, #0xff
  403ce4:	cmp	w0, #0x0
  403ce8:	b.eq	403d0c <run+0xcc0>  // b.none
  403cec:	ldr	w0, [sp, #84]
  403cf0:	add	w1, w0, #0x1
  403cf4:	str	w1, [sp, #84]
  403cf8:	sxtw	x0, w0
  403cfc:	lsl	x0, x0, #3
  403d00:	add	x1, sp, #0x160
  403d04:	add	x2, sp, #0x228
  403d08:	str	x2, [x1, x0]
  403d0c:	ldr	w0, [sp, #84]
  403d10:	add	w1, w0, #0x1
  403d14:	str	w1, [sp, #84]
  403d18:	ldr	x2, [sp, #296]
  403d1c:	sxtw	x0, w0
  403d20:	lsl	x0, x0, #3
  403d24:	add	x1, sp, #0x160
  403d28:	str	x2, [x1, x0]
  403d2c:	ldr	w0, [sp, #84]
  403d30:	add	w1, w0, #0x1
  403d34:	str	w1, [sp, #84]
  403d38:	sxtw	x0, w0
  403d3c:	lsl	x0, x0, #3
  403d40:	add	x1, sp, #0x160
  403d44:	str	xzr, [x1, x0]
  403d48:	bl	401a10 <rlimit_nofile_safe@plt>
  403d4c:	ldr	x0, [sp, #352]
  403d50:	add	x1, sp, #0x160
  403d54:	bl	401a90 <execv@plt>
  403d58:	mov	w0, #0x8                   	// #8
  403d5c:	bl	4018d0 <_exit@plt>
  403d60:	ldr	x0, [sp, #288]
  403d64:	cmp	x0, #0x0
  403d68:	b.eq	403d94 <run+0xd48>  // b.none
  403d6c:	ldr	w0, [sp, #348]
  403d70:	bl	401880 <safe_close@plt>
  403d74:	str	w0, [sp, #348]
  403d78:	ldr	w0, [sp, #344]
  403d7c:	str	w0, [sp, #224]
  403d80:	mov	w0, #0xffffffff            	// #-1
  403d84:	str	w0, [sp, #344]
  403d88:	ldr	w0, [sp, #224]
  403d8c:	ldr	x1, [sp, #288]
  403d90:	bl	40297c <process_progress>
  403d94:	ldr	w0, [sp, #312]
  403d98:	mov	w2, #0x1                   	// #1
  403d9c:	mov	w1, w0
  403da0:	adrp	x0, 404000 <main+0x54>
  403da4:	add	x0, x0, #0x908
  403da8:	bl	401980 <wait_for_terminate_and_check@plt>
  403dac:	str	w0, [sp, #228]
  403db0:	ldr	w0, [sp, #228]
  403db4:	cmp	w0, #0x0
  403db8:	b.ge	403dc4 <run+0xd78>  // b.tcont
  403dbc:	ldr	w19, [sp, #228]
  403dc0:	b	403f54 <run+0xf08>
  403dc4:	ldr	w0, [sp, #228]
  403dc8:	and	w0, w0, #0xfffffffe
  403dcc:	cmp	w0, #0x0
  403dd0:	b.eq	403f20 <run+0xed4>  // b.none
  403dd4:	mov	w0, #0x3                   	// #3
  403dd8:	str	w0, [sp, #232]
  403ddc:	str	wzr, [sp, #236]
  403de0:	str	wzr, [sp, #240]
  403de4:	ldr	w0, [sp, #240]
  403de8:	bl	401b40 <log_get_max_level_realm@plt>
  403dec:	mov	w1, w0
  403df0:	ldr	w0, [sp, #232]
  403df4:	and	w0, w0, #0x7
  403df8:	cmp	w1, w0
  403dfc:	b.lt	403e44 <run+0xdf8>  // b.tstop
  403e00:	ldr	w0, [sp, #240]
  403e04:	lsl	w1, w0, #10
  403e08:	ldr	w0, [sp, #232]
  403e0c:	orr	w7, w1, w0
  403e10:	adrp	x0, 404000 <main+0x54>
  403e14:	add	x1, x0, #0x133
  403e18:	ldr	w6, [sp, #228]
  403e1c:	adrp	x0, 404000 <main+0x54>
  403e20:	add	x5, x0, #0x910
  403e24:	adrp	x0, 404000 <main+0x54>
  403e28:	add	x4, x0, #0xb18
  403e2c:	mov	w3, #0x19b                 	// #411
  403e30:	mov	x2, x1
  403e34:	ldr	w1, [sp, #236]
  403e38:	mov	w0, w7
  403e3c:	bl	401a20 <log_internal_realm@plt>
  403e40:	b	403e4c <run+0xe00>
  403e44:	ldr	w0, [sp, #236]
  403e48:	cmp	w0, #0x0
  403e4c:	ldr	w0, [sp, #228]
  403e50:	and	w0, w0, #0x2
  403e54:	cmp	w0, #0x0
  403e58:	b.eq	403e84 <run+0xe38>  // b.none
  403e5c:	ldrb	w0, [sp, #83]
  403e60:	cmp	w0, #0x0
  403e64:	b.eq	403e84 <run+0xe38>  // b.none
  403e68:	adrp	x0, 404000 <main+0x54>
  403e6c:	add	x1, x0, #0x938
  403e70:	adrp	x0, 404000 <main+0x54>
  403e74:	add	x0, x0, #0x950
  403e78:	bl	402018 <start_target>
  403e7c:	mov	w19, #0xffffffea            	// #-22
  403e80:	b	403f54 <run+0xf08>
  403e84:	ldr	w0, [sp, #228]
  403e88:	and	w0, w0, #0x6
  403e8c:	cmp	w0, #0x0
  403e90:	b.eq	403eac <run+0xe60>  // b.none
  403e94:	adrp	x0, 404000 <main+0x54>
  403e98:	add	x1, x0, #0x960
  403e9c:	adrp	x0, 404000 <main+0x54>
  403ea0:	add	x0, x0, #0x968
  403ea4:	bl	402018 <start_target>
  403ea8:	b	403f20 <run+0xed4>
  403eac:	mov	w0, #0x4                   	// #4
  403eb0:	str	w0, [sp, #244]
  403eb4:	str	wzr, [sp, #248]
  403eb8:	str	wzr, [sp, #252]
  403ebc:	ldr	w0, [sp, #252]
  403ec0:	bl	401b40 <log_get_max_level_realm@plt>
  403ec4:	mov	w1, w0
  403ec8:	ldr	w0, [sp, #244]
  403ecc:	and	w0, w0, #0x7
  403ed0:	cmp	w1, w0
  403ed4:	b.lt	403f18 <run+0xecc>  // b.tstop
  403ed8:	ldr	w0, [sp, #252]
  403edc:	lsl	w1, w0, #10
  403ee0:	ldr	w0, [sp, #244]
  403ee4:	orr	w6, w1, w0
  403ee8:	adrp	x0, 404000 <main+0x54>
  403eec:	add	x1, x0, #0x133
  403ef0:	adrp	x0, 404000 <main+0x54>
  403ef4:	add	x5, x0, #0x980
  403ef8:	adrp	x0, 404000 <main+0x54>
  403efc:	add	x4, x0, #0xb18
  403f00:	mov	w3, #0x1a5                 	// #421
  403f04:	mov	x2, x1
  403f08:	ldr	w1, [sp, #248]
  403f0c:	mov	w0, w6
  403f10:	bl	401a20 <log_internal_realm@plt>
  403f14:	b	403f20 <run+0xed4>
  403f18:	ldr	w0, [sp, #248]
  403f1c:	cmp	w0, #0x0
  403f20:	ldr	w0, [sp, #228]
  403f24:	and	w0, w0, #0x1
  403f28:	cmp	w0, #0x0
  403f2c:	b.eq	403f3c <run+0xef0>  // b.none
  403f30:	adrp	x0, 404000 <main+0x54>
  403f34:	add	x0, x0, #0x990
  403f38:	bl	401950 <touch@plt>
  403f3c:	ldr	w0, [sp, #228]
  403f40:	and	w0, w0, #0x6
  403f44:	cmp	w0, #0x0
  403f48:	cset	w0, ne  // ne = any
  403f4c:	and	w0, w0, #0xff
  403f50:	mov	w19, w0
  403f54:	add	x0, sp, #0x120
  403f58:	bl	401e90 <fclosep>
  403f5c:	add	x0, sp, #0x118
  403f60:	bl	401db0 <freep>
  403f64:	add	x0, sp, #0x110
  403f68:	bl	401d4c <sd_device_unrefp>
  403f6c:	add	x0, sp, #0x158
  403f70:	bl	401e70 <close_pairp>
  403f74:	mov	w1, w19
  403f78:	adrp	x0, 415000 <__FRAME_END__+0x10084>
  403f7c:	add	x0, x0, #0xbb0
  403f80:	ldr	x2, [sp, #568]
  403f84:	ldr	x0, [x0]
  403f88:	eor	x0, x2, x0
  403f8c:	cmp	x0, #0x0
  403f90:	b.eq	403f98 <run+0xf4c>  // b.none
  403f94:	bl	401990 <__stack_chk_fail@plt>
  403f98:	mov	w0, w1
  403f9c:	ldr	x19, [sp, #48]
  403fa0:	ldp	x29, x30, [sp, #32]
  403fa4:	add	sp, sp, #0x240
  403fa8:	ret

0000000000403fac <main>:
  403fac:	stp	x29, x30, [sp, #-48]!
  403fb0:	mov	x29, sp
  403fb4:	str	w0, [sp, #28]
  403fb8:	str	x1, [sp, #16]
  403fbc:	ldr	x1, [sp, #16]
  403fc0:	ldr	w0, [sp, #28]
  403fc4:	bl	401dd4 <save_argc_argv>
  403fc8:	ldr	x1, [sp, #16]
  403fcc:	ldr	w0, [sp, #28]
  403fd0:	bl	40304c <run>
  403fd4:	str	w0, [sp, #44]
  403fd8:	bl	4019d0 <ask_password_agent_close@plt>
  403fdc:	bl	401810 <polkit_agent_close@plt>
  403fe0:	bl	4019e0 <pager_close@plt>
  403fe4:	bl	401ae0 <mac_selinux_finish@plt>
  403fe8:	bl	401eb4 <static_destruct>
  403fec:	ldr	w0, [sp, #44]
  403ff0:	cmp	w0, #0x0
  403ff4:	b.lt	404000 <main+0x54>  // b.tstop
  403ff8:	ldr	w0, [sp, #44]
  403ffc:	b	404004 <main+0x58>
  404000:	mov	w0, #0x1                   	// #1
  404004:	ldp	x29, x30, [sp], #48
  404008:	ret
  40400c:	nop

0000000000404010 <__libc_csu_init>:
  404010:	stp	x29, x30, [sp, #-64]!
  404014:	mov	x29, sp
  404018:	stp	x19, x20, [sp, #16]
  40401c:	adrp	x20, 415000 <__FRAME_END__+0x10084>
  404020:	add	x20, x20, #0xba8
  404024:	stp	x21, x22, [sp, #32]
  404028:	adrp	x21, 415000 <__FRAME_END__+0x10084>
  40402c:	add	x21, x21, #0xba0
  404030:	sub	x20, x20, x21
  404034:	mov	w22, w0
  404038:	stp	x23, x24, [sp, #48]
  40403c:	mov	x23, x1
  404040:	mov	x24, x2
  404044:	bl	401730 <_init>
  404048:	cmp	xzr, x20, asr #3
  40404c:	b.eq	404078 <__libc_csu_init+0x68>  // b.none
  404050:	asr	x20, x20, #3
  404054:	mov	x19, #0x0                   	// #0
  404058:	ldr	x3, [x21, x19, lsl #3]
  40405c:	mov	x2, x24
  404060:	add	x19, x19, #0x1
  404064:	mov	x1, x23
  404068:	mov	w0, w22
  40406c:	blr	x3
  404070:	cmp	x20, x19
  404074:	b.ne	404058 <__libc_csu_init+0x48>  // b.any
  404078:	ldp	x19, x20, [sp, #16]
  40407c:	ldp	x21, x22, [sp, #32]
  404080:	ldp	x23, x24, [sp, #48]
  404084:	ldp	x29, x30, [sp], #64
  404088:	ret
  40408c:	nop

0000000000404090 <__libc_csu_fini>:
  404090:	ret
  404094:	nop

0000000000404098 <stat64>:
  404098:	mov	x2, x1
  40409c:	mov	x1, x0
  4040a0:	mov	w0, #0x0                   	// #0
  4040a4:	b	4019b0 <__xstat64@plt>

Disassembly of section .fini:

00000000004040a8 <_fini>:
  4040a8:	stp	x29, x30, [sp, #-16]!
  4040ac:	mov	x29, sp
  4040b0:	ldp	x29, x30, [sp], #16
  4040b4:	ret
