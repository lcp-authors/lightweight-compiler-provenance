
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//uname_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007f8 <_init>:
 7f8:	stp	x29, x30, [sp, #-16]!
 7fc:	mov	x29, sp
 800:	bl	8e0 <call_weak_fn>
 804:	ldp	x29, x30, [sp], #16
 808:	ret

Disassembly of section .plt:

0000000000000810 <.plt>:
 810:	stp	x16, x30, [sp, #-16]!
 814:	adrp	x16, 10000 <__FRAME_END__+0xf2b4>
 818:	ldr	x17, [x16, #4088]
 81c:	add	x16, x16, #0xff8
 820:	br	x17
 824:	nop
 828:	nop
 82c:	nop

0000000000000830 <builtin_error@plt>:
 830:	adrp	x16, 11000 <builtin_error>
 834:	ldr	x17, [x16]
 838:	add	x16, x16, #0x0
 83c:	br	x17

0000000000000840 <__cxa_finalize@plt>:
 840:	adrp	x16, 11000 <builtin_error>
 844:	ldr	x17, [x16, #8]
 848:	add	x16, x16, #0x8
 84c:	br	x17

0000000000000850 <builtin_help@plt>:
 850:	adrp	x16, 11000 <builtin_error>
 854:	ldr	x17, [x16, #16]
 858:	add	x16, x16, #0x10
 85c:	br	x17

0000000000000860 <builtin_usage@plt>:
 860:	adrp	x16, 11000 <builtin_error>
 864:	ldr	x17, [x16, #24]
 868:	add	x16, x16, #0x18
 86c:	br	x17

0000000000000870 <strerror@plt>:
 870:	adrp	x16, 11000 <builtin_error>
 874:	ldr	x17, [x16, #32]
 878:	add	x16, x16, #0x20
 87c:	br	x17

0000000000000880 <__gmon_start__@plt>:
 880:	adrp	x16, 11000 <builtin_error>
 884:	ldr	x17, [x16, #40]
 888:	add	x16, x16, #0x28
 88c:	br	x17

0000000000000890 <internal_getopt@plt>:
 890:	adrp	x16, 11000 <builtin_error>
 894:	ldr	x17, [x16, #48]
 898:	add	x16, x16, #0x30
 89c:	br	x17

00000000000008a0 <reset_internal_getopt@plt>:
 8a0:	adrp	x16, 11000 <builtin_error>
 8a4:	ldr	x17, [x16, #56]
 8a8:	add	x16, x16, #0x38
 8ac:	br	x17

00000000000008b0 <printf@plt>:
 8b0:	adrp	x16, 11000 <builtin_error>
 8b4:	ldr	x17, [x16, #64]
 8b8:	add	x16, x16, #0x40
 8bc:	br	x17

00000000000008c0 <__errno_location@plt>:
 8c0:	adrp	x16, 11000 <builtin_error>
 8c4:	ldr	x17, [x16, #72]
 8c8:	add	x16, x16, #0x48
 8cc:	br	x17

00000000000008d0 <uname@plt>:
 8d0:	adrp	x16, 11000 <builtin_error>
 8d4:	ldr	x17, [x16, #80]
 8d8:	add	x16, x16, #0x50
 8dc:	br	x17

Disassembly of section .text:

00000000000008e0 <call_weak_fn>:
 8e0:	adrp	x0, 10000 <__FRAME_END__+0xf2b4>
 8e4:	ldr	x0, [x0, #4048]
 8e8:	cbz	x0, 8f0 <call_weak_fn+0x10>
 8ec:	b	880 <__gmon_start__@plt>
 8f0:	ret
 8f4:	nop

00000000000008f8 <deregister_tm_clones>:
 8f8:	adrp	x0, 11000 <builtin_error>
 8fc:	add	x0, x0, #0xb0
 900:	adrp	x1, 11000 <builtin_error>
 904:	add	x1, x1, #0xb0
 908:	cmp	x1, x0
 90c:	b.eq	924 <deregister_tm_clones+0x2c>  // b.none
 910:	adrp	x1, 10000 <__FRAME_END__+0xf2b4>
 914:	ldr	x1, [x1, #4032]
 918:	cbz	x1, 924 <deregister_tm_clones+0x2c>
 91c:	mov	x16, x1
 920:	br	x16
 924:	ret

0000000000000928 <register_tm_clones>:
 928:	adrp	x0, 11000 <builtin_error>
 92c:	add	x0, x0, #0xb0
 930:	adrp	x1, 11000 <builtin_error>
 934:	add	x1, x1, #0xb0
 938:	sub	x1, x1, x0
 93c:	lsr	x2, x1, #63
 940:	add	x1, x2, x1, asr #3
 944:	cmp	xzr, x1, asr #1
 948:	asr	x1, x1, #1
 94c:	b.eq	964 <register_tm_clones+0x3c>  // b.none
 950:	adrp	x2, 10000 <__FRAME_END__+0xf2b4>
 954:	ldr	x2, [x2, #4064]
 958:	cbz	x2, 964 <register_tm_clones+0x3c>
 95c:	mov	x16, x2
 960:	br	x16
 964:	ret

0000000000000968 <__do_global_dtors_aux>:
 968:	stp	x29, x30, [sp, #-32]!
 96c:	mov	x29, sp
 970:	str	x19, [sp, #16]
 974:	adrp	x19, 11000 <builtin_error>
 978:	ldrb	w0, [x19, #176]
 97c:	cbnz	w0, 9a4 <__do_global_dtors_aux+0x3c>
 980:	adrp	x0, 10000 <__FRAME_END__+0xf2b4>
 984:	ldr	x0, [x0, #4040]
 988:	cbz	x0, 998 <__do_global_dtors_aux+0x30>
 98c:	adrp	x0, 11000 <builtin_error>
 990:	ldr	x0, [x0, #88]
 994:	bl	840 <__cxa_finalize@plt>
 998:	bl	8f8 <deregister_tm_clones>
 99c:	mov	w0, #0x1                   	// #1
 9a0:	strb	w0, [x19, #176]
 9a4:	ldr	x19, [sp, #16]
 9a8:	ldp	x29, x30, [sp], #32
 9ac:	ret

00000000000009b0 <frame_dummy>:
 9b0:	b	928 <register_tm_clones>

00000000000009b4 <uname_builtin>:
 9b4:	sub	sp, sp, #0x1d0
 9b8:	stp	x22, x21, [sp, #432]
 9bc:	adrp	x21, 11000 <builtin_error>
 9c0:	stp	x29, x30, [sp, #400]
 9c4:	str	x28, [sp, #416]
 9c8:	stp	x20, x19, [sp, #448]
 9cc:	add	x29, sp, #0x190
 9d0:	mov	x19, x0
 9d4:	str	wzr, [x21, #180]
 9d8:	bl	8a0 <reset_internal_getopt@plt>
 9dc:	adrp	x20, 0 <_init-0x7f8>
 9e0:	adrp	x22, 0 <_init-0x7f8>
 9e4:	add	x20, x20, #0xc16
 9e8:	add	x22, x22, #0xc00
 9ec:	b	a00 <uname_builtin+0x4c>
 9f0:	mov	w8, #0x10                  	// #16
 9f4:	ldr	w9, [x21, #180]
 9f8:	orr	w8, w9, w8
 9fc:	str	w8, [x21, #180]
 a00:	mov	x0, x19
 a04:	mov	x1, x20
 a08:	bl	890 <internal_getopt@plt>
 a0c:	sub	w8, w0, #0x61
 a10:	cmp	w8, #0x15
 a14:	b.hi	a4c <uname_builtin+0x98>  // b.pmore
 a18:	adr	x9, 9f0 <uname_builtin+0x3c>
 a1c:	ldrb	w10, [x22, x8]
 a20:	add	x9, x9, x10, lsl #2
 a24:	mov	w8, #0x1f                  	// #31
 a28:	br	x9
 a2c:	mov	w8, #0x2                   	// #2
 a30:	b	9f4 <uname_builtin+0x40>
 a34:	mov	w8, #0x4                   	// #4
 a38:	b	9f4 <uname_builtin+0x40>
 a3c:	mov	w8, #0x1                   	// #1
 a40:	b	9f4 <uname_builtin+0x40>
 a44:	mov	w8, #0x8                   	// #8
 a48:	b	9f4 <uname_builtin+0x40>
 a4c:	cmn	w0, #0x63
 a50:	b.eq	a74 <uname_builtin+0xc0>  // b.none
 a54:	cmn	w0, #0x1
 a58:	b.ne	a6c <uname_builtin+0xb8>  // b.any
 a5c:	adrp	x8, 10000 <__FRAME_END__+0xf2b4>
 a60:	ldr	x8, [x8, #4056]
 a64:	ldr	x8, [x8]
 a68:	cbz	x8, a94 <uname_builtin+0xe0>
 a6c:	bl	860 <builtin_usage@plt>
 a70:	b	a78 <uname_builtin+0xc4>
 a74:	bl	850 <builtin_help@plt>
 a78:	mov	w0, #0x102                 	// #258
 a7c:	ldp	x20, x19, [sp, #448]
 a80:	ldp	x22, x21, [sp, #432]
 a84:	ldr	x28, [sp, #416]
 a88:	ldp	x29, x30, [sp, #400]
 a8c:	add	sp, sp, #0x1d0
 a90:	ret
 a94:	ldr	w8, [x21, #180]
 a98:	cbnz	w8, aa4 <uname_builtin+0xf0>
 a9c:	mov	w8, #0x1                   	// #1
 aa0:	str	w8, [x21, #180]
 aa4:	add	x0, sp, #0x8
 aa8:	bl	8d0 <uname@plt>
 aac:	tbnz	w0, #31, afc <uname_builtin+0x148>
 ab0:	ldr	w8, [x21, #180]
 ab4:	tbnz	w8, #0, b20 <uname_builtin+0x16c>
 ab8:	tbnz	w8, #1, b50 <uname_builtin+0x19c>
 abc:	tbnz	w8, #2, b84 <uname_builtin+0x1d0>
 ac0:	tbnz	w8, #3, bb8 <uname_builtin+0x204>
 ac4:	tbz	w8, #4, af4 <uname_builtin+0x140>
 ac8:	add	x9, sp, #0x8
 acc:	and	w10, w8, #0xffffffef
 ad0:	tst	w8, #0xffffffef
 ad4:	mov	w8, #0x20                  	// #32
 ad8:	mov	w11, #0xa                   	// #10
 adc:	adrp	x0, 0 <_init-0x7f8>
 ae0:	add	x1, x9, #0x104
 ae4:	csel	w2, w11, w8, eq  // eq = none
 ae8:	add	x0, x0, #0xca1
 aec:	str	w10, [x21, #180]
 af0:	bl	8b0 <printf@plt>
 af4:	mov	w0, wzr
 af8:	b	a7c <uname_builtin+0xc8>
 afc:	bl	8c0 <__errno_location@plt>
 b00:	ldr	w0, [x0]
 b04:	bl	870 <strerror@plt>
 b08:	mov	x1, x0
 b0c:	adrp	x0, 0 <_init-0x7f8>
 b10:	add	x0, x0, #0xc1e
 b14:	bl	830 <builtin_error@plt>
 b18:	mov	w0, #0x1                   	// #1
 b1c:	b	a7c <uname_builtin+0xc8>
 b20:	and	w9, w8, #0xfffffffe
 b24:	tst	w8, #0xfffffffe
 b28:	mov	w8, #0x20                  	// #32
 b2c:	mov	w10, #0xa                   	// #10
 b30:	adrp	x0, 0 <_init-0x7f8>
 b34:	csel	w2, w10, w8, eq  // eq = none
 b38:	add	x0, x0, #0xca1
 b3c:	add	x1, sp, #0x8
 b40:	str	w9, [x21, #180]
 b44:	bl	8b0 <printf@plt>
 b48:	ldr	w8, [x21, #180]
 b4c:	tbz	w8, #1, abc <uname_builtin+0x108>
 b50:	add	x9, sp, #0x8
 b54:	and	w10, w8, #0xfffffffd
 b58:	tst	w8, #0xfffffffd
 b5c:	mov	w8, #0x20                  	// #32
 b60:	mov	w11, #0xa                   	// #10
 b64:	adrp	x0, 0 <_init-0x7f8>
 b68:	add	x1, x9, #0x41
 b6c:	csel	w2, w11, w8, eq  // eq = none
 b70:	add	x0, x0, #0xca1
 b74:	str	w10, [x21, #180]
 b78:	bl	8b0 <printf@plt>
 b7c:	ldr	w8, [x21, #180]
 b80:	tbz	w8, #2, ac0 <uname_builtin+0x10c>
 b84:	add	x9, sp, #0x8
 b88:	and	w10, w8, #0xfffffffb
 b8c:	tst	w8, #0xfffffffb
 b90:	mov	w8, #0x20                  	// #32
 b94:	mov	w11, #0xa                   	// #10
 b98:	adrp	x0, 0 <_init-0x7f8>
 b9c:	add	x1, x9, #0x82
 ba0:	csel	w2, w11, w8, eq  // eq = none
 ba4:	add	x0, x0, #0xca1
 ba8:	str	w10, [x21, #180]
 bac:	bl	8b0 <printf@plt>
 bb0:	ldr	w8, [x21, #180]
 bb4:	tbz	w8, #3, ac4 <uname_builtin+0x110>
 bb8:	add	x9, sp, #0x8
 bbc:	and	w10, w8, #0xfffffff7
 bc0:	tst	w8, #0xfffffff7
 bc4:	mov	w8, #0x20                  	// #32
 bc8:	mov	w11, #0xa                   	// #10
 bcc:	adrp	x0, 0 <_init-0x7f8>
 bd0:	add	x1, x9, #0xc3
 bd4:	csel	w2, w11, w8, eq  // eq = none
 bd8:	add	x0, x0, #0xca1
 bdc:	str	w10, [x21, #180]
 be0:	bl	8b0 <printf@plt>
 be4:	ldr	w8, [x21, #180]
 be8:	tbnz	w8, #4, ac8 <uname_builtin+0x114>
 bec:	b	af4 <uname_builtin+0x140>

Disassembly of section .fini:

0000000000000bf0 <_fini>:
 bf0:	stp	x29, x30, [sp, #-16]!
 bf4:	mov	x29, sp
 bf8:	ldp	x29, x30, [sp], #16
 bfc:	ret
