
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//bswap_test.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x340>:
   0:	sub	sp, sp, #0x90
   4:	mov	w3, #0x4d                  	// #77
   8:	stp	x29, x30, [sp, #16]
   c:	add	x29, sp, #0x10
  10:	stp	x23, x24, [sp, #64]
  14:	adrp	x24, 0 <grub_mod_init-0x340>
  18:	stp	x25, x26, [sp, #80]
  1c:	adrp	x25, 0 <grub_mod_init-0x340>
  20:	adrp	x26, 0 <grub_mod_init-0x340>
  24:	stp	x19, x20, [sp, #32]
  28:	mov	x19, x0
  2c:	rev	x20, x0
  30:	adrp	x0, 0 <grub_mod_init-0x340>
  34:	stp	x21, x22, [sp, #48]
  38:	mov	x7, x20
  3c:	ldr	x5, [x25]
  40:	str	x19, [sp]
  44:	ldr	x4, [x24]
  48:	mov	x6, x19
  4c:	ldr	x1, [x26]
  50:	adrp	x22, 0 <grub_mod_init-0x340>
  54:	ldr	x21, [x0]
  58:	add	x22, x22, #0x0
  5c:	mov	w0, #0x1                   	// #1
  60:	stp	x27, x28, [sp, #96]
  64:	mov	x2, x21
  68:	add	x27, sp, #0x88
  6c:	stp	x19, x20, [sp, #128]
  70:	bl	0 <grub_test_assert_helper>
  74:	mov	x28, #0x0                   	// #0
  78:	adrp	x9, 0 <grub_mod_init-0x340>
  7c:	add	x0, sp, #0x80
  80:	mov	x7, x20
  84:	ldr	x4, [x9]
  88:	mov	x6, x19
  8c:	ldrb	w1, [x0, x28]
  90:	mov	x2, x21
  94:	ldrb	w0, [x27, #7]
  98:	add	x28, x28, #0x1
  9c:	ldr	x5, [x22]
  a0:	cmp	w1, w0
  a4:	ldr	x1, [x26]
  a8:	cset	w0, eq  // eq = none
  ac:	mov	w3, #0x53                  	// #83
  b0:	add	x23, x26, #0x0
  b4:	sub	x27, x27, #0x1
  b8:	bl	0 <grub_test_assert_helper>
  bc:	cmp	x28, #0x4
  c0:	adrp	x9, 0 <grub_mod_init-0x340>
  c4:	b.ne	7c <grub_mod_init-0x2c4>  // b.any
  c8:	ldr	x5, [x25]
  cc:	and	x27, x19, #0xffffffff
  d0:	ldr	x4, [x24]
  d4:	str	x27, [sp]
  d8:	ldr	x1, [x23]
  dc:	rev	w26, w19
  e0:	add	x2, x21, #0x7
  e4:	mov	w0, #0x1                   	// #1
  e8:	mov	x7, x26
  ec:	mov	x6, x27
  f0:	mov	w3, #0x39                  	// #57
  f4:	str	w19, [sp, #128]
  f8:	str	w26, [sp, #136]
  fc:	bl	0 <grub_test_assert_helper>
 100:	adrp	x0, 0 <grub_mod_init-0x340>
 104:	add	x20, sp, #0x88
 108:	mov	x28, #0x0                   	// #0
 10c:	adrp	x8, 0 <grub_mod_init-0x340>
 110:	ldr	x2, [x0]
 114:	add	x0, sp, #0x80
 118:	ldr	x4, [x8]
 11c:	mov	x7, x26
 120:	ldrb	w1, [x0, x28]
 124:	mov	x6, x27
 128:	ldrb	w0, [x20, #3]
 12c:	mov	w3, #0x3f                  	// #63
 130:	ldr	x5, [x22]
 134:	cmp	w1, w0
 138:	ldr	x1, [x23]
 13c:	cset	w0, eq  // eq = none
 140:	add	x28, x28, #0x1
 144:	sub	x20, x20, #0x1
 148:	bl	0 <grub_test_assert_helper>
 14c:	adrp	x0, 0 <grub_mod_init-0x340>
 150:	cmp	x28, #0x4
 154:	adrp	x8, 0 <grub_mod_init-0x340>
 158:	ldr	x2, [x0]
 15c:	b.ne	114 <grub_mod_init-0x22c>  // b.any
 160:	ubfx	w0, w19, #8, #8
 164:	ubfiz	w7, w19, #8, #16
 168:	orr	w7, w7, w0
 16c:	and	x26, x19, #0xffff
 170:	ldr	x5, [x25]
 174:	ubfx	x1, x7, #8, #8
 178:	ubfiz	w0, w7, #8, #8
 17c:	and	w8, w7, #0xffff
 180:	ldr	x4, [x24]
 184:	orr	w0, w0, w1
 188:	ldr	x1, [x23]
 18c:	cmp	w0, w19, uxth
 190:	and	x0, x0, #0xffff
 194:	str	x0, [sp]
 198:	and	x20, x7, #0xffff
 19c:	add	x21, x21, #0xe
 1a0:	mov	x6, x26
 1a4:	mov	x2, x21
 1a8:	cset	w0, eq  // eq = none
 1ac:	sxth	w27, w7
 1b0:	mov	w3, #0x25                  	// #37
 1b4:	mov	x7, x20
 1b8:	str	w8, [sp, #124]
 1bc:	bl	0 <grub_test_assert_helper>
 1c0:	ldr	w8, [sp, #124]
 1c4:	and	w28, w19, #0xffff
 1c8:	and	w19, w19, #0xff
 1cc:	mov	x7, x20
 1d0:	ldr	x5, [x22]
 1d4:	cmp	w19, w8, lsr #8
 1d8:	adrp	x19, 0 <grub_mod_init-0x340>
 1dc:	mov	x6, x26
 1e0:	ldr	x1, [x23]
 1e4:	mov	x2, x21
 1e8:	ldr	x4, [x19]
 1ec:	cset	w0, eq  // eq = none
 1f0:	and	w27, w27, #0xff
 1f4:	mov	w3, #0x2b                  	// #43
 1f8:	bl	0 <grub_test_assert_helper>
 1fc:	ldr	x4, [x19]
 200:	cmp	w27, w28, lsr #8
 204:	mov	x7, x20
 208:	mov	x6, x26
 20c:	mov	x2, x21
 210:	cset	w0, eq  // eq = none
 214:	ldr	x5, [x22]
 218:	mov	w3, #0x2b                  	// #43
 21c:	ldr	x1, [x23]
 220:	ldp	x29, x30, [sp, #16]
 224:	ldp	x19, x20, [sp, #32]
 228:	ldp	x21, x22, [sp, #48]
 22c:	ldp	x23, x24, [sp, #64]
 230:	ldp	x25, x26, [sp, #80]
 234:	ldp	x27, x28, [sp, #96]
 238:	add	sp, sp, #0x90
 23c:	b	0 <grub_test_assert_helper>
	...
 288:	stp	x29, x30, [sp, #-80]!
 28c:	mov	x0, #0xffffffffffffffff    	// #-1
 290:	mov	x29, sp
 294:	stp	x19, x20, [sp, #16]
 298:	mov	x20, #0x7                   	// #7
 29c:	mov	x19, #0x194                 	// #404
 2a0:	stp	x21, x22, [sp, #32]
 2a4:	mov	x21, #0x9c40                	// #40000
 2a8:	mov	x22, #0x1                   	// #1
 2ac:	stp	x23, x24, [sp, #48]
 2b0:	mov	x23, #0x1d                  	// #29
 2b4:	mov	x24, #0x17                  	// #23
 2b8:	str	x25, [sp, #64]
 2bc:	bl	0 <grub_mod_init-0x340>
 2c0:	mov	x0, #0x1                   	// #1
 2c4:	bl	0 <grub_mod_init-0x340>
 2c8:	mov	x0, #0x2                   	// #2
 2cc:	bl	0 <grub_mod_init-0x340>
 2d0:	mov	x0, #0x0                   	// #0
 2d4:	bl	0 <grub_mod_init-0x340>
 2d8:	mov	x0, #0x708                 	// #1800
 2dc:	mov	x25, #0xd                   	// #13
 2e0:	movk	x0, #0x506, lsl #16
 2e4:	movk	x0, #0x304, lsl #32
 2e8:	movk	x0, #0x102, lsl #48
 2ec:	bl	0 <grub_mod_init-0x340>
 2f0:	add	x19, x19, x19, lsl #4
 2f4:	madd	x19, x20, x25, x19
 2f8:	mul	x0, x19, x24
 2fc:	madd	x20, x20, x23, x0
 300:	cmp	x20, #0x0
 304:	csel	x20, x20, x22, ne  // ne = any
 308:	cmp	x19, #0x0
 30c:	csel	x19, x19, x22, ne  // ne = any
 310:	mov	x0, x19
 314:	bl	0 <grub_mod_init-0x340>
 318:	mov	x0, x20
 31c:	bl	0 <grub_mod_init-0x340>
 320:	subs	x21, x21, #0x1
 324:	b.ne	2f0 <grub_mod_init-0x50>  // b.any
 328:	ldp	x19, x20, [sp, #16]
 32c:	ldp	x21, x22, [sp, #32]
 330:	ldp	x23, x24, [sp, #48]
 334:	ldr	x25, [sp, #64]
 338:	ldp	x29, x30, [sp], #80
 33c:	ret

0000000000000340 <grub_mod_init>:
 340:	adrp	x0, 0 <grub_mod_init-0x340>
 344:	ldr	x1, [x0]
 348:	adrp	x0, 0 <grub_mod_init-0x340>
 34c:	ldr	x0, [x0]
 350:	b	0 <grub_test_register>
 354:	nop
	...

0000000000000368 <grub_mod_fini>:
 368:	adrp	x0, 0 <grub_mod_init-0x340>
 36c:	ldr	x0, [x0]
 370:	b	0 <grub_test_unregister>
 374:	nop
	...
