
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//readfile.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000758 <.init>:
 758:	stp	x29, x30, [sp, #-16]!
 75c:	mov	x29, sp
 760:	bl	840 <fprintf@plt+0x10>
 764:	ldp	x29, x30, [sp], #16
 768:	ret

Disassembly of section .plt:

0000000000000770 <exit@plt-0x20>:
 770:	stp	x16, x30, [sp, #-16]!
 774:	adrp	x16, 11000 <dl_load@@Base+0x106ec>
 778:	ldr	x17, [x16, #4088]
 77c:	add	x16, x16, #0xff8
 780:	br	x17
 784:	nop
 788:	nop
 78c:	nop

0000000000000790 <exit@plt>:
 790:	adrp	x16, 12000 <exit@GLIBC_2.17>
 794:	ldr	x17, [x16]
 798:	add	x16, x16, #0x0
 79c:	br	x17

00000000000007a0 <__cxa_finalize@plt>:
 7a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #8]
 7a8:	add	x16, x16, #0x8
 7ac:	br	x17

00000000000007b0 <open@plt>:
 7b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #16]
 7b8:	add	x16, x16, #0x10
 7bc:	br	x17

00000000000007c0 <close@plt>:
 7c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #24]
 7c8:	add	x16, x16, #0x18
 7cc:	br	x17

00000000000007d0 <__gmon_start__@plt>:
 7d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #32]
 7d8:	add	x16, x16, #0x20
 7dc:	br	x17

00000000000007e0 <fwrite@plt>:
 7e0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #40]
 7e8:	add	x16, x16, #0x28
 7ec:	br	x17

00000000000007f0 <read@plt>:
 7f0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #48]
 7f8:	add	x16, x16, #0x30
 7fc:	br	x17

0000000000000800 <dcgettext@plt>:
 800:	adrp	x16, 12000 <exit@GLIBC_2.17>
 804:	ldr	x17, [x16, #56]
 808:	add	x16, x16, #0x38
 80c:	br	x17

0000000000000810 <__errno_location@plt>:
 810:	adrp	x16, 12000 <exit@GLIBC_2.17>
 814:	ldr	x17, [x16, #64]
 818:	add	x16, x16, #0x40
 81c:	br	x17

0000000000000820 <__xstat@plt>:
 820:	adrp	x16, 12000 <exit@GLIBC_2.17>
 824:	ldr	x17, [x16, #72]
 828:	add	x16, x16, #0x48
 82c:	br	x17

0000000000000830 <fprintf@plt>:
 830:	adrp	x16, 12000 <exit@GLIBC_2.17>
 834:	ldr	x17, [x16, #80]
 838:	add	x16, x16, #0x50
 83c:	br	x17

Disassembly of section .text:

0000000000000840 <dl_load@@Base-0xd4>:
 840:	adrp	x0, 11000 <dl_load@@Base+0x106ec>
 844:	ldr	x0, [x0, #4056]
 848:	cbz	x0, 850 <fprintf@plt+0x20>
 84c:	b	7d0 <__gmon_start__@plt>
 850:	ret
 854:	nop
 858:	adrp	x0, 12000 <dl_load@@Base+0x116ec>
 85c:	add	x0, x0, #0xb0
 860:	adrp	x1, 12000 <dl_load@@Base+0x116ec>
 864:	add	x1, x1, #0xb0
 868:	cmp	x1, x0
 86c:	b.eq	884 <fprintf@plt+0x54>  // b.none
 870:	adrp	x1, 11000 <dl_load@@Base+0x106ec>
 874:	ldr	x1, [x1, #4032]
 878:	cbz	x1, 884 <fprintf@plt+0x54>
 87c:	mov	x16, x1
 880:	br	x16
 884:	ret
 888:	adrp	x0, 12000 <dl_load@@Base+0x116ec>
 88c:	add	x0, x0, #0xb0
 890:	adrp	x1, 12000 <dl_load@@Base+0x116ec>
 894:	add	x1, x1, #0xb0
 898:	sub	x1, x1, x0
 89c:	lsr	x2, x1, #63
 8a0:	add	x1, x2, x1, asr #3
 8a4:	cmp	xzr, x1, asr #1
 8a8:	asr	x1, x1, #1
 8ac:	b.eq	8c4 <fprintf@plt+0x94>  // b.none
 8b0:	adrp	x2, 11000 <dl_load@@Base+0x106ec>
 8b4:	ldr	x2, [x2, #4064]
 8b8:	cbz	x2, 8c4 <fprintf@plt+0x94>
 8bc:	mov	x16, x2
 8c0:	br	x16
 8c4:	ret
 8c8:	stp	x29, x30, [sp, #-32]!
 8cc:	mov	x29, sp
 8d0:	str	x19, [sp, #16]
 8d4:	adrp	x19, 12000 <dl_load@@Base+0x116ec>
 8d8:	ldrb	w0, [x19, #176]
 8dc:	cbnz	w0, 904 <fprintf@plt+0xd4>
 8e0:	adrp	x0, 11000 <dl_load@@Base+0x106ec>
 8e4:	ldr	x0, [x0, #4040]
 8e8:	cbz	x0, 8f8 <fprintf@plt+0xc8>
 8ec:	adrp	x0, 12000 <dl_load@@Base+0x116ec>
 8f0:	ldr	x0, [x0, #88]
 8f4:	bl	7a0 <__cxa_finalize@plt>
 8f8:	bl	858 <fprintf@plt+0x28>
 8fc:	mov	w0, #0x1                   	// #1
 900:	strb	w0, [x19, #176]
 904:	ldr	x19, [sp, #16]
 908:	ldp	x29, x30, [sp], #32
 90c:	ret
 910:	b	888 <fprintf@plt+0x58>

0000000000000914 <dl_load@@Base>:
 914:	stp	x29, x30, [sp, #-48]!
 918:	str	x21, [sp, #16]
 91c:	stp	x20, x19, [sp, #32]
 920:	adrp	x20, 12000 <dl_load@@Base+0x116ec>
 924:	adrp	x21, 12000 <dl_load@@Base+0x116ec>
 928:	str	x0, [x20, #184]
 92c:	str	x1, [x21, #192]
 930:	ldr	w8, [x0]
 934:	mov	x29, sp
 938:	cmp	w8, #0x2
 93c:	b.ne	9e4 <dl_load@@Base+0xd0>  // b.any
 940:	ldr	w8, [x0, #4]
 944:	tbnz	w8, #31, 9e4 <dl_load@@Base+0xd0>
 948:	adrp	x19, 12000 <dl_load@@Base+0x116ec>
 94c:	ldr	x8, [x19, #96]
 950:	cbz	x8, 978 <dl_load@@Base+0x64>
 954:	ldr	x9, [x0, #48]
 958:	adrp	x8, 0 <exit@plt-0x790>
 95c:	add	x8, x8, #0xe2a
 960:	adrp	x2, 12000 <dl_load@@Base+0x116ec>
 964:	add	x2, x2, #0x60
 968:	mov	x0, x1
 96c:	mov	x1, x8
 970:	blr	x9
 974:	cbz	w0, 980 <dl_load@@Base+0x6c>
 978:	mov	w19, #0x1                   	// #1
 97c:	b	9a0 <dl_load@@Base+0x8c>
 980:	ldr	x8, [x20, #184]
 984:	ldr	x0, [x21, #192]
 988:	ldr	x2, [x19, #96]
 98c:	adrp	x1, 0 <exit@plt-0x790>
 990:	ldr	x8, [x8, #104]
 994:	add	x1, x1, #0xe5e
 998:	blr	x8
 99c:	mov	w19, wzr
 9a0:	ldr	x8, [x20, #184]
 9a4:	ldr	x0, [x21, #192]
 9a8:	adrp	x1, 12000 <dl_load@@Base+0x116ec>
 9ac:	add	x1, x1, #0x90
 9b0:	ldr	x8, [x8, #56]
 9b4:	blr	x8
 9b8:	ldr	x8, [x20, #184]
 9bc:	ldr	x0, [x21, #192]
 9c0:	adrp	x1, 0 <exit@plt-0x790>
 9c4:	add	x1, x1, #0xee7
 9c8:	ldr	x8, [x8, #88]
 9cc:	blr	x8
 9d0:	mov	w0, w19
 9d4:	ldp	x20, x19, [sp, #32]
 9d8:	ldr	x21, [sp, #16]
 9dc:	ldp	x29, x30, [sp], #48
 9e0:	ret
 9e4:	adrp	x19, 11000 <dl_load@@Base+0x106ec>
 9e8:	ldr	x19, [x19, #4048]
 9ec:	adrp	x0, 0 <exit@plt-0x790>
 9f0:	add	x0, x0, #0xe04
 9f4:	mov	w1, #0x26                  	// #38
 9f8:	ldr	x3, [x19]
 9fc:	mov	w2, #0x1                   	// #1
 a00:	bl	7e0 <fwrite@plt>
 a04:	ldr	x8, [x20, #184]
 a08:	ldr	x0, [x19]
 a0c:	adrp	x1, 0 <exit@plt-0x790>
 a10:	add	x1, x1, #0xe2b
 a14:	ldp	w4, w5, [x8]
 a18:	mov	w2, #0x2                   	// #2
 a1c:	mov	w3, wzr
 a20:	bl	830 <fprintf@plt>
 a24:	mov	w0, #0x1                   	// #1
 a28:	bl	790 <exit@plt>
 a2c:	sub	sp, sp, #0xd0
 a30:	movi	v0.2d, #0x0
 a34:	stp	x29, x30, [sp, #160]
 a38:	stp	x22, x21, [sp, #176]
 a3c:	stp	x20, x19, [sp, #192]
 a40:	adrp	x22, 12000 <dl_load@@Base+0x116ec>
 a44:	stp	q0, q0, [x1]
 a48:	ldr	x8, [x22, #184]
 a4c:	adrp	x21, 12000 <dl_load@@Base+0x116ec>
 a50:	ldr	x0, [x21, #192]
 a54:	add	x29, sp, #0xa0
 a58:	ldr	x8, [x8, #144]
 a5c:	mov	x19, x1
 a60:	blr	x8
 a64:	ldr	x8, [x22, #184]
 a68:	ldr	x0, [x21, #192]
 a6c:	sub	x3, x29, #0x20
 a70:	mov	w2, #0x2                   	// #2
 a74:	ldr	x8, [x8, #152]
 a78:	mov	x1, xzr
 a7c:	blr	x8
 a80:	cbz	w0, ae0 <dl_load@@Base+0x1cc>
 a84:	ldur	x1, [x29, #-24]
 a88:	mov	x2, sp
 a8c:	mov	w0, wzr
 a90:	bl	820 <__xstat@plt>
 a94:	tbnz	w0, #31, b18 <dl_load@@Base+0x204>
 a98:	ldur	x0, [x29, #-24]
 a9c:	mov	w1, wzr
 aa0:	bl	7b0 <open@plt>
 aa4:	tbnz	w0, #31, b18 <dl_load@@Base+0x204>
 aa8:	mov	x1, sp
 aac:	mov	w20, w0
 ab0:	bl	b4c <dl_load@@Base+0x238>
 ab4:	cbz	x0, b34 <dl_load@@Base+0x220>
 ab8:	mov	x21, x0
 abc:	mov	w0, w20
 ac0:	bl	7c0 <close@plt>
 ac4:	ldr	x8, [sp, #48]
 ac8:	movi	v0.2d, #0x0
 acc:	mov	w9, #0x2                   	// #2
 ad0:	stp	q0, q0, [x19]
 ad4:	str	w9, [x19]
 ad8:	stp	x21, x8, [x19, #8]
 adc:	b	b34 <dl_load@@Base+0x220>
 ae0:	ldr	x8, [x22, #184]
 ae4:	ldr	w9, [x8, #24]
 ae8:	cbz	w9, b34 <dl_load@@Base+0x220>
 aec:	ldr	x22, [x8, #112]
 af0:	ldr	x20, [x21, #192]
 af4:	adrp	x1, 0 <exit@plt-0x790>
 af8:	add	x1, x1, #0xe79
 afc:	mov	w2, #0x5                   	// #5
 b00:	mov	x0, xzr
 b04:	bl	800 <dcgettext@plt>
 b08:	mov	x1, x0
 b0c:	mov	x0, x20
 b10:	blr	x22
 b14:	b	b34 <dl_load@@Base+0x220>
 b18:	ldr	x8, [x22, #184]
 b1c:	ldr	x20, [x21, #192]
 b20:	ldr	x22, [x8, #128]
 b24:	bl	810 <__errno_location@plt>
 b28:	ldr	w1, [x0]
 b2c:	mov	x0, x20
 b30:	blr	x22
 b34:	mov	x0, x19
 b38:	ldp	x20, x19, [sp, #192]
 b3c:	ldp	x22, x21, [sp, #176]
 b40:	ldp	x29, x30, [sp, #160]
 b44:	add	sp, sp, #0xd0
 b48:	ret
 b4c:	stp	x29, x30, [sp, #-48]!
 b50:	stp	x22, x21, [sp, #16]
 b54:	stp	x20, x19, [sp, #32]
 b58:	ldr	w8, [x1, #16]
 b5c:	mov	x29, sp
 b60:	and	w8, w8, #0xf000
 b64:	cmp	w8, #0x8, lsl #12
 b68:	b.ne	be4 <dl_load@@Base+0x2d0>  // b.any
 b6c:	adrp	x22, 12000 <dl_load@@Base+0x116ec>
 b70:	ldr	x8, [x22, #184]
 b74:	ldr	x9, [x1, #48]
 b78:	mov	w21, w0
 b7c:	mov	x20, x1
 b80:	ldr	x8, [x8, #280]
 b84:	add	x0, x9, #0x1
 b88:	blr	x8
 b8c:	mov	x19, x0
 b90:	cbnz	x0, bc0 <dl_load@@Base+0x2ac>
 b94:	ldr	x8, [x22, #184]
 b98:	adrp	x9, 12000 <dl_load@@Base+0x116ec>
 b9c:	ldr	x10, [x20, #48]
 ba0:	ldr	x0, [x9, #192]
 ba4:	ldr	x8, [x8, #96]
 ba8:	adrp	x1, 0 <exit@plt-0x790>
 bac:	adrp	x2, 0 <exit@plt-0x790>
 bb0:	add	x3, x10, #0x1
 bb4:	add	x1, x1, #0xea6
 bb8:	add	x2, x2, #0xec4
 bbc:	blr	x8
 bc0:	ldr	x2, [x20, #48]
 bc4:	mov	w0, w21
 bc8:	mov	x1, x19
 bcc:	bl	7f0 <read@plt>
 bd0:	ldr	x8, [x20, #48]
 bd4:	cmp	x0, x8
 bd8:	b.ne	c10 <dl_load@@Base+0x2fc>  // b.any
 bdc:	strb	wzr, [x19, x0]
 be0:	b	c44 <dl_load@@Base+0x330>
 be4:	bl	810 <__errno_location@plt>
 be8:	mov	w8, #0x16                  	// #22
 bec:	adrp	x9, 12000 <dl_load@@Base+0x116ec>
 bf0:	str	w8, [x0]
 bf4:	ldr	x8, [x9, #184]
 bf8:	adrp	x9, 12000 <dl_load@@Base+0x116ec>
 bfc:	ldr	x0, [x9, #192]
 c00:	mov	w1, #0x16                  	// #22
 c04:	ldr	x8, [x8, #128]
 c08:	blr	x8
 c0c:	b	c40 <dl_load@@Base+0x32c>
 c10:	ldr	x8, [x22, #184]
 c14:	adrp	x9, 12000 <dl_load@@Base+0x116ec>
 c18:	ldr	x20, [x9, #192]
 c1c:	ldr	x21, [x8, #128]
 c20:	bl	810 <__errno_location@plt>
 c24:	ldr	w1, [x0]
 c28:	mov	x0, x20
 c2c:	blr	x21
 c30:	ldr	x8, [x22, #184]
 c34:	mov	x0, x19
 c38:	ldr	x8, [x8, #304]
 c3c:	blr	x8
 c40:	mov	x19, xzr
 c44:	mov	x0, x19
 c48:	ldp	x20, x19, [sp, #32]
 c4c:	ldp	x22, x21, [sp, #16]
 c50:	ldp	x29, x30, [sp], #48
 c54:	ret
 c58:	sub	sp, sp, #0xa0
 c5c:	stp	x29, x30, [sp, #96]
 c60:	str	x23, [sp, #112]
 c64:	stp	x22, x21, [sp, #128]
 c68:	stp	x20, x19, [sp, #144]
 c6c:	add	x29, sp, #0x60
 c70:	cbz	x0, d40 <dl_load@@Base+0x42c>
 c74:	adrp	x21, 12000 <dl_load@@Base+0x116ec>
 c78:	ldr	x8, [x21, #184]
 c7c:	adrp	x22, 12000 <dl_load@@Base+0x116ec>
 c80:	ldr	x0, [x22, #192]
 c84:	adrp	x1, 0 <exit@plt-0x790>
 c88:	ldr	x8, [x8, #168]
 c8c:	adrp	x2, 0 <exit@plt-0x790>
 c90:	add	x1, x1, #0xe2a
 c94:	add	x2, x2, #0xede
 c98:	sub	x4, x29, #0x20
 c9c:	mov	w3, #0x5                   	// #5
 ca0:	blr	x8
 ca4:	cbz	w0, d40 <dl_load@@Base+0x42c>
 ca8:	ldr	x23, [x21, #184]
 cac:	movi	v0.2d, #0x0
 cb0:	mov	w8, #0x2                   	// #2
 cb4:	stp	q0, q0, [sp, #32]
 cb8:	str	w8, [sp, #32]
 cbc:	mov	w8, #0x8                   	// #8
 cc0:	str	x8, [sp, #48]
 cc4:	ldr	x8, [x23, #280]
 cc8:	ldr	x19, [x22, #192]
 ccc:	mov	w0, #0x9                   	// #9
 cd0:	blr	x8
 cd4:	mov	x20, x0
 cd8:	cbnz	x0, cfc <dl_load@@Base+0x3e8>
 cdc:	ldr	x8, [x23, #96]
 ce0:	adrp	x1, 0 <exit@plt-0x790>
 ce4:	adrp	x2, 0 <exit@plt-0x790>
 ce8:	add	x1, x1, #0xea6
 cec:	add	x2, x2, #0xed0
 cf0:	mov	w3, #0x9                   	// #9
 cf4:	mov	x0, x19
 cf8:	blr	x8
 cfc:	mov	x8, #0x6572                	// #25970
 d00:	movk	x8, #0x6461, lsl #16
 d04:	movk	x8, #0x6966, lsl #32
 d08:	movk	x8, #0x656c, lsl #48
 d0c:	strb	wzr, [x20, #8]
 d10:	str	x8, [x20]
 d14:	ldr	x8, [x21, #184]
 d18:	str	x20, [sp, #40]
 d1c:	ldr	x0, [x22, #192]
 d20:	ldur	x1, [x29, #-24]
 d24:	ldr	x8, [x8, #224]
 d28:	add	x2, sp, #0x20
 d2c:	mov	x4, sp
 d30:	mov	w3, wzr
 d34:	blr	x8
 d38:	cmp	w0, #0x0
 d3c:	cset	w0, ne  // ne = any
 d40:	ldp	x20, x19, [sp, #144]
 d44:	ldp	x22, x21, [sp, #128]
 d48:	ldr	x23, [sp, #112]
 d4c:	ldp	x29, x30, [sp, #96]
 d50:	add	sp, sp, #0xa0
 d54:	ret
 d58:	cbz	x0, d6c <dl_load@@Base+0x458>
 d5c:	adrp	x8, 0 <exit@plt-0x790>
 d60:	add	x8, x8, #0xd70
 d64:	str	x8, [x0, #24]
 d68:	mov	w0, #0x1                   	// #1
 d6c:	ret
 d70:	stp	x29, x30, [sp, #-48]!
 d74:	stp	x22, x21, [sp, #16]
 d78:	mov	x21, x0
 d7c:	mov	w0, #0xffffffff            	// #-1
 d80:	stp	x20, x19, [sp, #32]
 d84:	mov	x29, sp
 d88:	cbz	x21, de4 <dl_load@@Base+0x4d0>
 d8c:	mov	x19, x1
 d90:	cbz	x1, de4 <dl_load@@Base+0x4d0>
 d94:	ldr	x0, [x19, #16]
 d98:	cbz	x0, db8 <dl_load@@Base+0x4a4>
 d9c:	adrp	x8, 12000 <dl_load@@Base+0x116ec>
 da0:	ldr	x8, [x8, #184]
 da4:	ldr	x8, [x8, #304]
 da8:	blr	x8
 dac:	str	xzr, [x19, #16]
 db0:	mov	w0, #0xffffffff            	// #-1
 db4:	b	de4 <dl_load@@Base+0x4d0>
 db8:	ldr	w0, [x19, #8]
 dbc:	add	x1, x19, #0x30
 dc0:	mov	x20, x4
 dc4:	mov	x22, x3
 dc8:	bl	b4c <dl_load@@Base+0x238>
 dcc:	cbz	x0, db0 <dl_load@@Base+0x49c>
 dd0:	str	x0, [x19, #16]
 dd4:	str	xzr, [x22]
 dd8:	str	xzr, [x20]
 ddc:	str	x0, [x21]
 de0:	ldr	w0, [x19, #96]
 de4:	ldp	x20, x19, [sp, #32]
 de8:	ldp	x22, x21, [sp, #16]
 dec:	ldp	x29, x30, [sp], #48
 df0:	ret

Disassembly of section .fini:

0000000000000df4 <.fini>:
 df4:	stp	x29, x30, [sp, #-16]!
 df8:	mov	x29, sp
 dfc:	ldp	x29, x30, [sp], #16
 e00:	ret
