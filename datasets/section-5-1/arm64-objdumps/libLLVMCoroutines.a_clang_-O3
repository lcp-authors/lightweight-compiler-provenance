In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMCoroutines.a_clang_-O3:

Coroutines.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	x19, x0
      10:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      14:	mov	x0, x19
      18:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      1c:	mov	x0, x19
      20:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      24:	mov	x0, x19
      28:	ldr	x19, [sp, #16]
      2c:	ldp	x29, x30, [sp], #32
      30:	b	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>

0000000000000034 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE>:
      34:	sub	sp, sp, #0xd0
      38:	stp	x29, x30, [sp, #160]
      3c:	str	x21, [sp, #176]
      40:	stp	x20, x19, [sp, #192]
      44:	add	x29, sp, #0xa0
      48:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      4c:	adrp	x20, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      50:	adrp	x21, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      54:	add	x8, x8, #0x0
      58:	add	x20, x20, #0x0
      5c:	add	x21, x21, #0x0
      60:	sub	x2, x29, #0x20
      64:	mov	w1, wzr
      68:	mov	x19, x0
      6c:	stp	x21, x20, [x29, #-16]
      70:	stur	x8, [x29, #-32]
      74:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      78:	ldur	x8, [x29, #-16]
      7c:	cbz	x8, 90 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x5c>
      80:	sub	x0, x29, #0x20
      84:	sub	x1, x29, #0x20
      88:	mov	w2, #0x3                   	// #3
      8c:	blr	x8
      90:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      94:	add	x8, x8, #0x0
      98:	sub	x2, x29, #0x40
      9c:	mov	w1, #0x6                   	// #6
      a0:	mov	x0, x19
      a4:	stp	x21, x20, [x29, #-48]
      a8:	stur	x8, [x29, #-64]
      ac:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      b0:	ldur	x8, [x29, #-48]
      b4:	cbz	x8, c8 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x94>
      b8:	sub	x0, x29, #0x40
      bc:	sub	x1, x29, #0x40
      c0:	mov	w2, #0x3                   	// #3
      c4:	blr	x8
      c8:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
      cc:	add	x8, x8, #0x0
      d0:	add	x2, sp, #0x40
      d4:	mov	w1, #0x9                   	// #9
      d8:	mov	x0, x19
      dc:	stp	x21, x20, [sp, #80]
      e0:	str	x8, [sp, #64]
      e4:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
      e8:	ldr	x8, [sp, #80]
      ec:	cbz	x8, 100 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0xcc>
      f0:	add	x0, sp, #0x40
      f4:	add	x1, sp, #0x40
      f8:	mov	w2, #0x3                   	// #3
      fc:	blr	x8
     100:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     104:	add	x8, x8, #0x0
     108:	add	x2, sp, #0x20
     10c:	mov	w1, #0x3                   	// #3
     110:	mov	x0, x19
     114:	stp	x21, x20, [sp, #48]
     118:	str	x8, [sp, #32]
     11c:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
     120:	ldr	x8, [sp, #48]
     124:	cbz	x8, 138 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x104>
     128:	add	x0, sp, #0x20
     12c:	add	x1, sp, #0x20
     130:	mov	w2, #0x3                   	// #3
     134:	blr	x8
     138:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     13c:	add	x8, x8, #0x0
     140:	mov	x2, sp
     144:	mov	w1, #0x4                   	// #4
     148:	mov	x0, x19
     14c:	stp	x21, x20, [sp, #16]
     150:	str	x8, [sp]
     154:	bl	0 <_ZN4llvm18PassManagerBuilder12addExtensionENS0_16ExtensionPointTyESt8functionIFvRKS0_RNS_6legacy15PassManagerBaseEEE>
     158:	ldr	x8, [sp, #16]
     15c:	cbz	x8, 170 <_ZN4llvm35addCoroutinePassesToExtensionPointsERNS_18PassManagerBuilderE+0x13c>
     160:	mov	x0, sp
     164:	mov	x1, sp
     168:	mov	w2, #0x3                   	// #3
     16c:	blr	x8
     170:	ldp	x20, x19, [sp, #192]
     174:	ldr	x21, [sp, #176]
     178:	ldp	x29, x30, [sp, #160]
     17c:	add	sp, sp, #0xd0
     180:	ret

0000000000000184 <_ZL23addCoroutineEarlyPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     184:	stp	x29, x30, [sp, #-32]!
     188:	str	x19, [sp, #16]
     18c:	mov	x29, sp
     190:	mov	x19, x1
     194:	bl	0 <_ZN4llvm25createCoroEarlyLegacyPassEv>
     198:	ldr	x8, [x19]
     19c:	mov	x1, x0
     1a0:	mov	x0, x19
     1a4:	ldr	x19, [sp, #16]
     1a8:	ldr	x2, [x8, #16]
     1ac:	ldp	x29, x30, [sp], #32
     1b0:	br	x2

00000000000001b4 <_ZL22addCoroutineOpt0PassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     1b4:	stp	x29, x30, [sp, #-32]!
     1b8:	str	x19, [sp, #16]
     1bc:	mov	x29, sp
     1c0:	mov	x19, x1
     1c4:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
     1c8:	ldr	x8, [x19]
     1cc:	mov	x1, x0
     1d0:	mov	x0, x19
     1d4:	ldr	x8, [x8, #16]
     1d8:	blr	x8
     1dc:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
     1e0:	ldr	x8, [x19]
     1e4:	mov	x1, x0
     1e8:	mov	x0, x19
     1ec:	ldr	x8, [x8, #16]
     1f0:	blr	x8
     1f4:	bl	0 <_ZN4llvm21createBarrierNoopPassEv>
     1f8:	ldr	x8, [x19]
     1fc:	mov	x1, x0
     200:	mov	x0, x19
     204:	ldr	x8, [x8, #16]
     208:	blr	x8
     20c:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
     210:	ldr	x8, [x19]
     214:	mov	x1, x0
     218:	mov	x0, x19
     21c:	ldr	x19, [sp, #16]
     220:	ldr	x2, [x8, #16]
     224:	ldp	x29, x30, [sp], #32
     228:	br	x2

000000000000022c <_ZL21addCoroutineSCCPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     22c:	stp	x29, x30, [sp, #-32]!
     230:	str	x19, [sp, #16]
     234:	mov	x29, sp
     238:	mov	x19, x1
     23c:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
     240:	ldr	x8, [x19]
     244:	mov	x1, x0
     248:	mov	x0, x19
     24c:	ldr	x19, [sp, #16]
     250:	ldr	x2, [x8, #16]
     254:	ldp	x29, x30, [sp], #32
     258:	br	x2

000000000000025c <_ZL33addCoroutineScalarOptimizerPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     25c:	stp	x29, x30, [sp, #-32]!
     260:	str	x19, [sp, #16]
     264:	mov	x29, sp
     268:	mov	x19, x1
     26c:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
     270:	ldr	x8, [x19]
     274:	mov	x1, x0
     278:	mov	x0, x19
     27c:	ldr	x19, [sp, #16]
     280:	ldr	x2, [x8, #16]
     284:	ldp	x29, x30, [sp], #32
     288:	br	x2

000000000000028c <_ZL31addCoroutineOptimizerLastPassesRKN4llvm18PassManagerBuilderERNS_6legacy15PassManagerBaseE>:
     28c:	stp	x29, x30, [sp, #-32]!
     290:	str	x19, [sp, #16]
     294:	mov	x29, sp
     298:	mov	x19, x1
     29c:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
     2a0:	ldr	x8, [x19]
     2a4:	mov	x1, x0
     2a8:	mov	x0, x19
     2ac:	ldr	x19, [sp, #16]
     2b0:	ldr	x2, [x8, #16]
     2b4:	ldp	x29, x30, [sp], #32
     2b8:	br	x2

00000000000002bc <_ZN4llvm4coro11LowererBaseC1ERNS_6ModuleE>:
     2bc:	stp	x29, x30, [sp, #-32]!
     2c0:	str	x19, [sp, #16]
     2c4:	mov	x29, sp
     2c8:	str	x1, [x0]
     2cc:	mov	x19, x0
     2d0:	ldr	x0, [x1]
     2d4:	mov	w1, wzr
     2d8:	str	x0, [x19, #8]
     2dc:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     2e0:	ldr	x8, [x19, #8]
     2e4:	str	x0, [x19, #16]
     2e8:	mov	x0, x8
     2ec:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     2f0:	ldr	x8, [x19, #16]
     2f4:	add	x1, x29, #0x18
     2f8:	mov	w2, #0x1                   	// #1
     2fc:	mov	w3, wzr
     300:	str	x8, [x29, #24]
     304:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     308:	ldr	x8, [x19, #16]
     30c:	str	x0, [x19, #24]
     310:	mov	x0, x8
     314:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     318:	str	x0, [x19, #32]
     31c:	ldr	x19, [sp, #16]
     320:	ldp	x29, x30, [sp], #32
     324:	ret

0000000000000328 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>:
     328:	sub	sp, sp, #0x70
     32c:	stp	x29, x30, [sp, #48]
     330:	str	x23, [sp, #64]
     334:	stp	x22, x21, [sp, #80]
     338:	stp	x20, x19, [sp, #96]
     33c:	add	x29, sp, #0x30
     340:	mov	x20, x0
     344:	ldr	x0, [x0, #8]
     348:	mov	x19, x3
     34c:	mov	w23, w2
     350:	mov	x21, x1
     354:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
     358:	sxtw	x1, w23
     35c:	mov	w2, wzr
     360:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
     364:	ldr	x8, [x20]
     368:	mov	x22, x0
     36c:	mov	w1, #0x22                  	// #34
     370:	mov	x2, xzr
     374:	mov	x0, x8
     378:	mov	x3, xzr
     37c:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
     380:	add	w8, w23, #0x1
     384:	cmp	w8, #0x3
     388:	b.hi	410 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE+0xe8>  // b.pmore
     38c:	stp	x21, x22, [x29, #-16]
     390:	mov	w22, #0x101                 	// #257
     394:	sub	x1, x29, #0x10
     398:	add	x3, sp, #0x8
     39c:	mov	w2, #0x2                   	// #2
     3a0:	mov	x4, x19
     3a4:	stp	xzr, xzr, [sp, #8]
     3a8:	strh	w22, [sp, #24]
     3ac:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     3b0:	mov	x21, x0
     3b4:	mov	w0, #0x38                  	// #56
     3b8:	mov	w1, #0x1                   	// #1
     3bc:	bl	0 <_ZN4llvm4UsernwEmj>
     3c0:	ldr	x8, [x20, #24]
     3c4:	mov	x20, x0
     3c8:	mov	w1, wzr
     3cc:	mov	x0, x8
     3d0:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     3d4:	mov	x2, x0
     3d8:	add	x3, sp, #0x8
     3dc:	mov	x0, x20
     3e0:	mov	x1, x21
     3e4:	mov	x4, x19
     3e8:	stp	xzr, xzr, [sp, #8]
     3ec:	strh	w22, [sp, #24]
     3f0:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
     3f4:	mov	x0, x20
     3f8:	ldp	x20, x19, [sp, #96]
     3fc:	ldp	x22, x21, [sp, #80]
     400:	ldr	x23, [sp, #64]
     404:	ldp	x29, x30, [sp, #48]
     408:	add	sp, sp, #0x70
     40c:	ret
     410:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     414:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     418:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     41c:	add	x0, x0, #0x0
     420:	add	x1, x1, #0x0
     424:	add	x3, x3, #0x0
     428:	mov	w2, #0x73                  	// #115
     42c:	bl	0 <__assert_fail>

0000000000000430 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>:
     430:	stp	x29, x30, [sp, #-64]!
     434:	stp	x24, x23, [sp, #16]
     438:	stp	x22, x21, [sp, #32]
     43c:	stp	x20, x19, [sp, #48]
     440:	mov	x29, sp
     444:	cbz	x2, 49c <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x6c>
     448:	adrp	x21, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     44c:	mov	x19, x1
     450:	mov	x20, x0
     454:	add	x24, x1, x2, lsl #4
     458:	add	x21, x21, #0x0
     45c:	ldp	x22, x23, [x19]
     460:	mov	w1, #0x14                  	// #20
     464:	mov	x0, x21
     468:	mov	x2, x22
     46c:	mov	x3, x23
     470:	bl	0 <_ZN4llvm9Intrinsic25lookupLLVMIntrinsicByNameENS_8ArrayRefIPKcEENS_9StringRefE>
     474:	cmn	w0, #0x1
     478:	b.eq	4bc <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x8c>  // b.none
     47c:	mov	x0, x20
     480:	mov	x1, x22
     484:	mov	x2, x23
     488:	bl	0 <_ZNK4llvm6Module13getNamedValueENS_9StringRefE>
     48c:	cbnz	x0, 4a4 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x74>
     490:	add	x19, x19, #0x10
     494:	cmp	x19, x24
     498:	b.ne	45c <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x2c>  // b.any
     49c:	mov	w0, wzr
     4a0:	b	4a8 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE+0x78>
     4a4:	mov	w0, #0x1                   	// #1
     4a8:	ldp	x20, x19, [sp, #48]
     4ac:	ldp	x22, x21, [sp, #32]
     4b0:	ldp	x24, x23, [sp, #16]
     4b4:	ldp	x29, x30, [sp], #64
     4b8:	ret
     4bc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4c0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4c4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4c8:	add	x0, x0, #0x0
     4cc:	add	x1, x1, #0x0
     4d0:	add	x3, x3, #0x0
     4d4:	mov	w2, #0x9d                  	// #157
     4d8:	bl	0 <__assert_fail>

00000000000004dc <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>:
     4dc:	sub	sp, sp, #0x70
     4e0:	stp	x29, x30, [sp, #48]
     4e4:	str	x23, [sp, #64]
     4e8:	stp	x22, x21, [sp, #80]
     4ec:	stp	x20, x19, [sp, #96]
     4f0:	add	x29, sp, #0x30
     4f4:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     4f8:	ldr	d0, [x8]
     4fc:	mov	x8, sp
     500:	add	x21, x8, #0x10
     504:	mov	w20, w1
     508:	mov	x19, x0
     50c:	str	x21, [sp]
     510:	str	d0, [sp, #8]
     514:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     518:	ldr	x22, [x19, #8]
     51c:	cbnz	x22, 558 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x7c>
     520:	ldr	w8, [sp, #8]
     524:	cbz	w8, 624 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x148>
     528:	tbz	w20, #0, 5e0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x104>
     52c:	mov	x0, x19
     530:	bl	0 <_ZNK4llvm5Value10getContextEv>
     534:	mov	w1, wzr
     538:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     53c:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     540:	ldr	w8, [sp, #8]
     544:	mov	x19, x0
     548:	cbnz	w8, 5fc <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x120>
     54c:	b	624 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x148>
     550:	ldr	x22, [x22, #8]
     554:	cbz	x22, 520 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x44>
     558:	mov	x0, x22
     55c:	bl	0 <_ZNK4llvm3Use7getUserEv>
     560:	cbz	x0, 654 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x178>
     564:	ldrb	w8, [x0, #16]
     568:	mov	x23, x0
     56c:	cmp	w8, #0x50
     570:	b.ne	550 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x74>  // b.any
     574:	ldur	x8, [x23, #-24]
     578:	cbz	x8, 550 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x74>
     57c:	ldrb	w9, [x8, #16]
     580:	cbnz	w9, 550 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x74>
     584:	ldrb	w9, [x8, #33]
     588:	tbz	w9, #5, 550 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x74>
     58c:	ldr	w8, [x8, #36]
     590:	cmp	w8, #0x17
     594:	b.ne	550 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x74>  // b.any
     598:	ldp	w8, w9, [sp, #8]
     59c:	cmp	w8, w9
     5a0:	b.cs	5c4 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xe8>  // b.hs, b.nlast
     5a4:	ldr	x9, [sp]
     5a8:	str	x23, [x9, w8, uxtw #3]
     5ac:	ldp	w8, w9, [sp, #8]
     5b0:	cmp	w8, w9
     5b4:	b.cs	674 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x198>  // b.hs, b.nlast
     5b8:	add	w8, w8, #0x1
     5bc:	str	w8, [sp, #8]
     5c0:	b	550 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x74>
     5c4:	mov	x0, sp
     5c8:	mov	w3, #0x8                   	// #8
     5cc:	mov	x1, x21
     5d0:	mov	x2, xzr
     5d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     5d8:	ldr	w8, [sp, #8]
     5dc:	b	5a4 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0xc8>
     5e0:	ldr	x8, [sp]
     5e4:	mov	w1, #0x1                   	// #1
     5e8:	ldr	x0, [x8]
     5ec:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     5f0:	ldr	w8, [sp, #8]
     5f4:	mov	x19, x0
     5f8:	cbz	w8, 624 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x148>
     5fc:	ldr	x21, [sp]
     600:	lsl	x22, x8, #3
     604:	ldr	x20, [x21], #8
     608:	mov	x1, x19
     60c:	mov	x0, x20
     610:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     614:	mov	x0, x20
     618:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     61c:	subs	x22, x22, #0x8
     620:	b.ne	604 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x128>  // b.any
     624:	ldr	x0, [sp]
     628:	mov	x8, sp
     62c:	add	x8, x8, #0x10
     630:	cmp	x0, x8
     634:	b.eq	63c <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb+0x160>  // b.none
     638:	bl	0 <free>
     63c:	ldp	x20, x19, [sp, #96]
     640:	ldp	x22, x21, [sp, #80]
     644:	ldr	x23, [sp, #64]
     648:	ldp	x29, x30, [sp, #48]
     64c:	add	sp, sp, #0x70
     650:	ret
     654:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     658:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     65c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     660:	add	x0, x0, #0x0
     664:	add	x1, x1, #0x0
     668:	add	x3, x3, #0x0
     66c:	mov	w2, #0x69                  	// #105
     670:	bl	0 <__assert_fail>
     674:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     678:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     67c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     680:	add	x0, x0, #0x0
     684:	add	x1, x1, #0x0
     688:	add	x3, x3, #0x0
     68c:	mov	w2, #0x43                  	// #67
     690:	bl	0 <__assert_fail>

0000000000000694 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE>:
     694:	sub	sp, sp, #0xa0
     698:	stp	x29, x30, [sp, #80]
     69c:	stp	x26, x25, [sp, #96]
     6a0:	stp	x24, x23, [sp, #112]
     6a4:	stp	x22, x21, [sp, #128]
     6a8:	stp	x20, x19, [sp, #144]
     6ac:	add	x29, sp, #0x50
     6b0:	ldr	x9, [x3, #24]
     6b4:	cbz	x9, 8d8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x244>
     6b8:	add	x8, x3, #0x10
     6bc:	mov	x19, x4
     6c0:	mov	x20, x3
     6c4:	mov	x22, x2
     6c8:	mov	x21, x1
     6cc:	mov	x10, x8
     6d0:	ldr	x11, [x9, #32]
     6d4:	add	x12, x9, #0x18
     6d8:	add	x13, x9, #0x10
     6dc:	cmp	x11, x0
     6e0:	csel	x10, x10, x9, cc  // cc = lo, ul, last
     6e4:	csel	x9, x12, x13, cc  // cc = lo, ul, last
     6e8:	ldr	x9, [x9]
     6ec:	cbnz	x9, 6d0 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x3c>
     6f0:	cmp	x10, x8
     6f4:	b.eq	8d8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x244>  // b.none
     6f8:	ldr	x9, [x10, #32]
     6fc:	cmp	x9, x0
     700:	csel	x9, x8, x10, hi  // hi = pmore
     704:	cmp	x9, x8
     708:	b.eq	8d8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x244>  // b.none
     70c:	ldr	x23, [x9, #40]
     710:	ldp	x8, x9, [x23, #8]
     714:	cmp	x8, x9
     718:	b.eq	778 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xe4>  // b.none
     71c:	mov	w25, #0x101                 	// #257
     720:	mov	w24, #0x1                   	// #1
     724:	movk	w25, #0x1, lsl #16
     728:	b	740 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xac>
     72c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
     730:	ldp	x8, x0, [x23, #8]
     734:	cmp	x8, x0
     738:	mov	x9, x0
     73c:	b.eq	778 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xe4>  // b.none
     740:	ldur	x10, [x9, #-8]
     744:	sub	x0, x9, #0x20
     748:	ldr	w11, [x10, #32]
     74c:	sub	w11, w11, #0x1
     750:	str	w11, [x10, #32]
     754:	str	x0, [x23, #16]
     758:	ldur	x9, [x9, #-16]
     75c:	add	x9, x9, #0x10
     760:	cmp	x9, #0x10
     764:	b.hi	72c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x98>  // b.pmore
     768:	lsl	x9, x24, x9
     76c:	tst	x9, x25
     770:	b.ne	734 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0xa0>  // b.any
     774:	b	72c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x98>
     778:	mov	x0, x20
     77c:	mov	x1, x23
     780:	bl	8f8 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>
     784:	ldr	x24, [x19, #16]!
     788:	mov	x8, sp
     78c:	add	x23, x8, #0x10
     790:	adrp	x8, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     794:	ldr	x9, [x19, #8]
     798:	ldr	d0, [x8]
     79c:	str	x23, [sp]
     7a0:	sub	x26, x9, x24
     7a4:	asr	x25, x26, #3
     7a8:	cmp	x25, #0x9
     7ac:	str	d0, [sp, #8]
     7b0:	b.cc	7c8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x134>  // b.lo, b.ul, b.last
     7b4:	mov	x0, sp
     7b8:	mov	w3, #0x8                   	// #8
     7bc:	mov	x1, x23
     7c0:	mov	x2, x25
     7c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7c8:	cbz	x26, 7e4 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x150>
     7cc:	ldr	x8, [sp]
     7d0:	ldr	w9, [sp, #8]
     7d4:	mov	x1, x24
     7d8:	mov	x2, x26
     7dc:	add	x0, x8, x9, lsl #3
     7e0:	bl	0 <memmove>
     7e4:	ldp	w8, w9, [sp, #8]
     7e8:	add	x8, x25, x8
     7ec:	cmp	x8, x9
     7f0:	b.hi	8b8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x224>  // b.pmore
     7f4:	str	w8, [sp, #8]
     7f8:	cbz	x22, 874 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x1e0>
     7fc:	lsl	x24, x22, #3
     800:	ldr	x1, [x21]
     804:	mov	x0, x20
     808:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     80c:	ldp	w8, w9, [sp, #8]
     810:	mov	x22, x0
     814:	cmp	w8, w9
     818:	b.cs	854 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x1c0>  // b.hs, b.nlast
     81c:	ldr	x9, [sp]
     820:	str	x22, [x9, w8, uxtw #3]
     824:	ldp	w8, w9, [sp, #8]
     828:	cmp	w8, w9
     82c:	b.cs	8b8 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x224>  // b.hs, b.nlast
     830:	add	w8, w8, #0x1
     834:	mov	x0, x20
     838:	mov	x1, x22
     83c:	str	w8, [sp, #8]
     840:	bl	8f8 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>
     844:	subs	x24, x24, #0x8
     848:	add	x21, x21, #0x8
     84c:	b.ne	800 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x16c>  // b.any
     850:	b	870 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x1dc>
     854:	mov	x0, sp
     858:	mov	w3, #0x8                   	// #8
     85c:	mov	x1, x23
     860:	mov	x2, xzr
     864:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     868:	ldr	w8, [sp, #8]
     86c:	b	81c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x188>
     870:	ldr	w8, [sp, #8]
     874:	ldr	x1, [sp]
     878:	mov	x0, x19
     87c:	add	x2, x1, w8, uxtw #3
     880:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     884:	ldr	x0, [sp]
     888:	mov	x8, sp
     88c:	add	x8, x8, #0x10
     890:	cmp	x0, x8
     894:	b.eq	89c <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE+0x208>  // b.none
     898:	bl	0 <free>
     89c:	ldp	x20, x19, [sp, #144]
     8a0:	ldp	x22, x21, [sp, #128]
     8a4:	ldp	x24, x23, [sp, #112]
     8a8:	ldp	x26, x25, [sp, #96]
     8ac:	ldp	x29, x30, [sp, #80]
     8b0:	add	sp, sp, #0xa0
     8b4:	ret
     8b8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8bc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8c0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8c4:	add	x0, x0, #0x0
     8c8:	add	x1, x1, #0x0
     8cc:	add	x3, x3, #0x0
     8d0:	mov	w2, #0x43                  	// #67
     8d4:	bl	0 <__assert_fail>
     8d8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8dc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8e0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     8e4:	add	x0, x0, #0x0
     8e8:	add	x1, x1, #0x0
     8ec:	add	x3, x3, #0x0
     8f0:	mov	w2, #0x82                  	// #130
     8f4:	bl	0 <__assert_fail>

00000000000008f8 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE>:
     8f8:	sub	sp, sp, #0x70
     8fc:	stp	x29, x30, [sp, #32]
     900:	stp	x26, x25, [sp, #48]
     904:	stp	x24, x23, [sp, #64]
     908:	stp	x22, x21, [sp, #80]
     90c:	stp	x20, x19, [sp, #96]
     910:	add	x29, sp, #0x20
     914:	ldr	x21, [x1]
     918:	mov	x19, x1
     91c:	mov	x20, x0
     920:	add	x0, sp, #0x8
     924:	mov	x1, x21
     928:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     92c:	ldp	x23, x25, [sp, #8]
     930:	ldr	x26, [sp, #24]
     934:	add	x24, x21, #0x48
     938:	cmp	x23, x24
     93c:	cset	w8, ne  // ne = any
     940:	cmp	x26, #0x0
     944:	cset	w9, ne  // ne = any
     948:	cmp	x24, x25
     94c:	b.ne	958 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x60>  // b.any
     950:	and	w8, w8, w9
     954:	cbz	w8, a54 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x15c>
     958:	ldrb	w8, [x26]
     95c:	tbnz	w8, #2, a90 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x198>
     960:	sub	x8, x26, #0x18
     964:	cmp	x26, #0x0
     968:	csel	x21, xzr, x8, eq  // eq = none
     96c:	cbz	x26, ab0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x1b8>
     970:	ldrb	w8, [x21, #16]
     974:	sub	w8, w8, #0x1d
     978:	cmp	w8, #0x33
     97c:	b.hi	9e0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xe8>  // b.pmore
     980:	mov	w9, #0x1                   	// #1
     984:	lsl	x8, x9, x8
     988:	mov	x9, #0x41                  	// #65
     98c:	movk	x9, #0x8, lsl #48
     990:	tst	x8, x9
     994:	b.eq	9e0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xe8>  // b.none
     998:	ldur	x22, [x21, #-24]
     99c:	cbz	x22, 9d0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xd8>
     9a0:	ldrb	w8, [x22, #16]
     9a4:	cbnz	w8, 9d0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xd8>
     9a8:	ldr	w0, [x22, #36]
     9ac:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
     9b0:	tbz	w0, #0, 9d0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xd8>
     9b4:	ldrb	w8, [x22, #33]
     9b8:	tbnz	w8, #5, 9e0 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xe8>
     9bc:	mov	x0, x20
     9c0:	mov	x1, x22
     9c4:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     9c8:	mov	x2, x0
     9cc:	b	9d4 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0xdc>
     9d0:	ldr	x2, [x20, #64]
     9d4:	mov	x0, x19
     9d8:	mov	x1, x21
     9dc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     9e0:	ldrb	w8, [x25]
     9e4:	tbnz	w8, #2, a70 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x178>
     9e8:	ldr	x26, [x26, #8]
     9ec:	sub	x8, x25, #0x18
     9f0:	cmp	x25, #0x0
     9f4:	csel	x8, xzr, x8, eq  // eq = none
     9f8:	add	x8, x8, #0x28
     9fc:	cmp	x8, x26
     a00:	b.ne	a34 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x13c>  // b.any
     a04:	ldr	x25, [x25, #8]
     a08:	cmp	x23, x25
     a0c:	b.eq	a34 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x13c>  // b.none
     a10:	ldrb	w8, [x25]
     a14:	tbnz	w8, #2, a70 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x178>
     a18:	sub	x8, x25, #0x18
     a1c:	cmp	x25, #0x0
     a20:	csel	x8, xzr, x8, eq  // eq = none
     a24:	ldr	x26, [x8, #48]
     a28:	add	x8, x8, #0x28
     a2c:	cmp	x8, x26
     a30:	b.eq	a04 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x10c>  // b.none
     a34:	cmp	x23, x24
     a38:	cset	w8, ne  // ne = any
     a3c:	cmp	x26, #0x0
     a40:	cset	w9, ne  // ne = any
     a44:	cmp	x24, x25
     a48:	b.ne	958 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x60>  // b.any
     a4c:	and	w8, w8, w9
     a50:	tbnz	w8, #0, 958 <_ZL8buildCGNRN4llvm9CallGraphEPNS_13CallGraphNodeE+0x60>
     a54:	ldp	x20, x19, [sp, #96]
     a58:	ldp	x22, x21, [sp, #80]
     a5c:	ldp	x24, x23, [sp, #64]
     a60:	ldp	x26, x25, [sp, #48]
     a64:	ldp	x29, x30, [sp, #32]
     a68:	add	sp, sp, #0x70
     a6c:	ret
     a70:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a74:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a78:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a7c:	add	x0, x0, #0x0
     a80:	add	x1, x1, #0x0
     a84:	add	x3, x3, #0x0
     a88:	mov	w2, #0x8b                  	// #139
     a8c:	bl	0 <__assert_fail>
     a90:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a94:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a98:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     a9c:	add	x0, x0, #0x0
     aa0:	add	x1, x1, #0x0
     aa4:	add	x3, x3, #0x0
     aa8:	mov	w2, #0x8b                  	// #139
     aac:	bl	0 <__assert_fail>
     ab0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ab4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     ab8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     abc:	add	x0, x0, #0x0
     ac0:	add	x1, x1, #0x0
     ac4:	add	x3, x3, #0x0
     ac8:	mov	w2, #0x69                  	// #105
     acc:	bl	0 <__assert_fail>

0000000000000ad0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE>:
     ad0:	sub	sp, sp, #0x150
     ad4:	stp	x29, x30, [sp, #240]
     ad8:	stp	x28, x27, [sp, #256]
     adc:	stp	x26, x25, [sp, #272]
     ae0:	stp	x24, x23, [sp, #288]
     ae4:	stp	x22, x21, [sp, #304]
     ae8:	stp	x20, x19, [sp, #320]
     aec:	add	x29, sp, #0xf0
     af0:	adrp	x9, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     af4:	ldr	d0, [x9]
     af8:	adrp	x10, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     afc:	str	xzr, [x0]
     b00:	str	wzr, [x0, #16]
     b04:	str	wzr, [x0, #64]
     b08:	str	wzr, [x0, #96]
     b0c:	stp	xzr, xzr, [x0, #184]
     b10:	str	xzr, [x0, #176]
     b14:	str	d0, [sp, #128]
     b18:	ldr	d0, [x10]
     b1c:	add	x8, sp, #0x78
     b20:	add	x9, sp, #0x58
     b24:	str	x0, [sp, #48]
     b28:	add	x21, x8, #0x10
     b2c:	add	x22, x9, #0x10
     b30:	sub	x0, x29, #0x28
     b34:	mov	x20, x1
     b38:	str	x21, [sp, #120]
     b3c:	str	x22, [sp, #88]
     b40:	str	d0, [sp, #96]
     b44:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b48:	ldp	x27, x23, [x29, #-40]
     b4c:	ldur	x25, [x29, #-24]
     b50:	add	x28, x20, #0x48
     b54:	cmp	x27, x28
     b58:	cset	w8, ne  // ne = any
     b5c:	cmp	x25, #0x0
     b60:	cset	w9, ne  // ne = any
     b64:	cmp	x28, x23
     b68:	b.ne	f5c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x48c>  // b.any
     b6c:	and	w8, w8, w9
     b70:	cbnz	w8, f5c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x48c>
     b74:	mov	w26, wzr
     b78:	str	xzr, [sp, #16]
     b7c:	ldr	x23, [sp, #48]
     b80:	ldr	x0, [x23]
     b84:	cbz	x0, 14b0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x9e0>
     b88:	mov	w1, wzr
     b8c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     b90:	cbz	x0, 1b2c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x105c>
     b94:	ldrb	w8, [x0, #16]
     b98:	mov	x21, x0
     b9c:	cmp	w8, #0x50
     ba0:	b.ne	1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>  // b.any
     ba4:	ldur	x8, [x21, #-24]
     ba8:	cbz	x8, 1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>
     bac:	ldrb	w9, [x8, #16]
     bb0:	cbnz	w9, 1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>
     bb4:	ldrb	w9, [x8, #33]
     bb8:	tbz	w9, #5, 1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>
     bbc:	ldr	w19, [x8, #36]
     bc0:	sub	w8, w19, #0x18
     bc4:	cmp	w8, #0x3
     bc8:	b.cs	1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>  // b.hs, b.nlast
     bcc:	sub	w8, w19, #0x19
     bd0:	cmp	w8, #0x2
     bd4:	b.cs	15dc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb0c>  // b.hs, b.nlast
     bd8:	mov	x0, x21
     bdc:	bl	1d74 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv>
     be0:	cmp	w19, #0x19
     be4:	mov	w8, #0x1                   	// #1
     be8:	cinc	w8, w8, ne  // ne = any
     bec:	mov	w1, #0x3                   	// #3
     bf0:	mov	x0, x21
     bf4:	str	w8, [x23, #168]
     bf8:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     bfc:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c00:	cbz	x0, 1b4c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x107c>
     c04:	ldrb	w8, [x0, #16]
     c08:	mov	x19, x0
     c0c:	cbnz	w8, 1b6c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x109c>
     c10:	mov	w1, #0x4                   	// #4
     c14:	mov	x0, x21
     c18:	str	x19, [x23, #200]
     c1c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c20:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c24:	cbz	x0, 1b4c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x107c>
     c28:	ldrb	w8, [x0, #16]
     c2c:	cbnz	w8, 1b6c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x109c>
     c30:	str	x0, [x23, #208]
     c34:	mov	w1, #0x5                   	// #5
     c38:	mov	x0, x21
     c3c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c40:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c44:	cbz	x0, 1b4c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x107c>
     c48:	ldrb	w8, [x0, #16]
     c4c:	cbnz	w8, 1b6c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x109c>
     c50:	stp	x0, xzr, [x23, #216]
     c54:	mov	x0, x23
     c58:	strb	wzr, [x23, #232]
     c5c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     c60:	ldr	w8, [x23, #168]
     c64:	str	x0, [sp, #32]
     c68:	str	x1, [sp, #80]
     c6c:	sub	w8, w8, #0x1
     c70:	cmp	w8, #0x2
     c74:	b.cs	1c74 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x11a4>  // b.hs, b.nlast
     c78:	ldr	x8, [x23, #200]
     c7c:	ldr	x9, [x8, #24]
     c80:	cbz	x9, 1c94 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x11c4>
     c84:	ldrb	w8, [x9, #8]
     c88:	str	x19, [sp, #8]
     c8c:	cmp	w8, #0xc
     c90:	b.ne	1cb4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x11e4>  // b.any
     c94:	ldr	w8, [x23, #96]
     c98:	cbz	w8, 17b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xce8>
     c9c:	ldr	x11, [sp, #48]
     ca0:	ldr	x10, [x9, #16]
     ca4:	ldr	w9, [x9, #12]
     ca8:	ldr	x25, [x11, #88]
     cac:	ldr	x11, [sp, #80]
     cb0:	lsl	x9, x9, #3
     cb4:	add	x10, x10, #0x10
     cb8:	add	x8, x25, x8, lsl #3
     cbc:	str	x8, [sp, #64]
     cc0:	sub	x8, x9, #0x8
     cc4:	cmp	x11, #0x0
     cc8:	lsl	x11, x11, #3
     ccc:	asr	x8, x8, #3
     cd0:	cset	w12, ne  // ne = any
     cd4:	sub	x11, x11, #0x8
     cd8:	sub	x8, x8, #0x1
     cdc:	str	w12, [sp, #72]
     ce0:	str	x11, [sp, #24]
     ce4:	str	x10, [sp, #40]
     ce8:	str	x8, [sp, #56]
     cec:	b	d00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x230>
     cf0:	ldr	x8, [sp, #64]
     cf4:	add	x25, x25, #0x8
     cf8:	cmp	x25, x8
     cfc:	b.eq	17b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xce8>  // b.none
     d00:	ldr	x26, [x25]
     d04:	cbz	x26, 1a40 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf70>
     d08:	ldur	x8, [x26, #-24]
     d0c:	ldrb	w9, [x8, #16]
     d10:	cmp	w9, #0x0
     d14:	csel	x8, x8, xzr, eq  // eq = none
     d18:	ldr	w8, [x8, #36]
     d1c:	cmp	w8, #0x24
     d20:	b.ne	1a60 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf90>  // b.any
     d24:	ldrb	w8, [x26, #16]
     d28:	ldr	w19, [x26, #20]
     d2c:	cmp	w8, #0x50
     d30:	b.eq	d60 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x290>  // b.none
     d34:	cmp	w8, #0x23
     d38:	b.eq	d4c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x27c>  // b.none
     d3c:	cmp	w8, #0x1d
     d40:	b.ne	1a78 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfa8>  // b.any
     d44:	mov	x20, #0xfffffffffffffffe    	// #-2
     d48:	b	d64 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x294>
     d4c:	mov	x0, x26
     d50:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
     d54:	mov	x8, xzr
     d58:	sub	x20, x8, w0, uxtw
     d5c:	b	d64 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x294>
     d60:	mov	x20, xzr
     d64:	and	x19, x19, #0xfffffff
     d68:	mov	w23, #0x18                  	// #24
     d6c:	mneg	x8, x19, x23
     d70:	mov	x0, x26
     d74:	add	x21, x26, x8
     d78:	madd	x22, x20, x23, x26
     d7c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     d80:	mov	w10, w0
     d84:	mneg	x8, x10, x23
     d88:	add	x8, x22, x8
     d8c:	ldr	x9, [sp, #80]
     d90:	sub	x8, x8, #0x18
     d94:	cmp	x21, x8
     d98:	mov	w11, #0x18                  	// #24
     d9c:	cset	w8, ne  // ne = any
     da0:	cbz	x9, ec8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3f8>
     da4:	ldr	w9, [sp, #72]
     da8:	b.eq	ecc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>  // b.none
     dac:	mov	x8, #0xffffffffffffffe8    	// #-24
     db0:	mul	x19, x19, x8
     db4:	madd	x22, x20, x8, x19
     db8:	ldp	x20, x28, [sp, #24]
     dbc:	mov	x9, #0xffffffffffffffd0    	// #-48
     dc0:	msub	x27, x10, x11, x9
     dc4:	mov	x23, x26
     dc8:	add	x21, x23, x19
     dcc:	ldr	x8, [x21]
     dd0:	ldr	x1, [x28]
     dd4:	ldr	x0, [x8]
     dd8:	cmp	x0, x1
     ddc:	b.eq	e98 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3c8>  // b.none
     de0:	bl	0 <_ZN4llvm8CastInst13isBitCastableEPNS_4TypeES2_>
     de4:	tbz	w0, #0, 18f8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe28>
     de8:	mov	w0, #0x38                  	// #56
     dec:	mov	w1, #0x1                   	// #1
     df0:	bl	0 <_ZN4llvm4UsernwEmj>
     df4:	ldr	x1, [x23, x19]
     df8:	ldr	x2, [x28]
     dfc:	mov	w8, #0x101                 	// #257
     e00:	sub	x3, x29, #0x28
     e04:	mov	x4, x26
     e08:	mov	x24, x0
     e0c:	stp	xzr, xzr, [x29, #-40]
     e10:	sturh	w8, [x29, #-24]
     e14:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
     e18:	ldr	x8, [x23, x19]
     e1c:	cbz	x8, e48 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x378>
     e20:	add	x9, x23, x19
     e24:	ldp	x10, x8, [x9, #8]
     e28:	and	x8, x8, #0xfffffffffffffffc
     e2c:	str	x10, [x8]
     e30:	ldr	x9, [x9, #8]
     e34:	cbz	x9, e48 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x378>
     e38:	ldr	x10, [x9, #16]
     e3c:	and	x10, x10, #0x3
     e40:	orr	x8, x10, x8
     e44:	str	x8, [x9, #16]
     e48:	str	x24, [x23, x19]
     e4c:	cbz	x24, e98 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3c8>
     e50:	ldr	x9, [x24, #8]!
     e54:	add	x8, x23, x19
     e58:	mov	x10, x8
     e5c:	str	x9, [x10, #8]!
     e60:	cbz	x9, e7c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3ac>
     e64:	tst	x10, #0x3
     e68:	b.ne	191c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe4c>  // b.any
     e6c:	ldr	x11, [x9, #16]
     e70:	and	x11, x11, #0x3
     e74:	orr	x10, x11, x10
     e78:	str	x10, [x9, #16]
     e7c:	tst	x24, #0x3
     e80:	b.ne	191c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe4c>  // b.any
     e84:	ldr	x9, [x8, #16]
     e88:	and	x9, x9, #0x3
     e8c:	orr	x9, x9, x24
     e90:	str	x9, [x8, #16]
     e94:	str	x21, [x24]
     e98:	cmp	x22, x27
     e9c:	cset	w8, ne  // ne = any
     ea0:	cmp	x20, #0x0
     ea4:	cset	w9, ne  // ne = any
     ea8:	cbz	x20, ecc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     eac:	add	x28, x28, #0x8
     eb0:	cmp	x22, x27
     eb4:	sub	x27, x27, #0x18
     eb8:	add	x23, x23, #0x18
     ebc:	sub	x20, x20, #0x8
     ec0:	b.ne	dc8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x2f8>  // b.any
     ec4:	b	ecc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x3fc>
     ec8:	ldr	w9, [sp, #72]
     ecc:	tbnz	w9, #0, 197c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xeac>
     ed0:	cbnz	w8, 197c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xeac>
     ed4:	ldr	x9, [x26]
     ed8:	ldr	x10, [sp, #56]
     edc:	stur	x9, [x29, #-40]
     ee0:	ldrb	w8, [x9, #8]
     ee4:	cbz	w8, f08 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x438>
     ee8:	cbz	x9, 1ab4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfe4>
     eec:	cmp	w8, #0xd
     ef0:	b.ne	f1c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x44c>  // b.any
     ef4:	ldr	x8, [x9, #16]
     ef8:	ldr	w9, [x9, #12]
     efc:	cmp	x9, x10
     f00:	b.eq	f2c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x45c>  // b.none
     f04:	b	1a90 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfc0>
     f08:	mov	x8, xzr
     f0c:	mov	x9, xzr
     f10:	cmp	x9, x10
     f14:	b.eq	f2c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x45c>  // b.none
     f18:	b	1a90 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfc0>
     f1c:	sub	x8, x29, #0x28
     f20:	mov	w9, #0x1                   	// #1
     f24:	cmp	x9, x10
     f28:	b.ne	1a90 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xfc0>  // b.any
     f2c:	cbz	x10, cf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x220>
     f30:	ldr	x9, [sp, #40]
     f34:	cbz	x10, 18b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xde4>
     f38:	ldr	x11, [x8]
     f3c:	ldr	x12, [x9]
     f40:	cmp	x11, x12
     f44:	b.ne	18d4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe04>  // b.any
     f48:	subs	x10, x10, #0x1
     f4c:	add	x9, x9, #0x8
     f50:	add	x8, x8, #0x8
     f54:	b.ne	f34 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x464>  // b.any
     f58:	b	cf0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x220>
     f5c:	ldr	x8, [sp, #48]
     f60:	adrp	x11, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
     f64:	mov	w26, wzr
     f68:	add	x11, x11, #0x0
     f6c:	add	x9, x8, #0x8
     f70:	str	x9, [sp, #80]
     f74:	add	x9, x8, #0x38
     f78:	str	x9, [sp, #56]
     f7c:	add	x9, x8, #0x58
     f80:	str	x9, [sp, #72]
     f84:	add	x9, x8, #0x18
     f88:	str	x9, [sp, #40]
     f8c:	add	x9, x8, #0x68
     f90:	add	x8, x8, #0x48
     f94:	str	xzr, [sp, #16]
     f98:	str	x9, [sp, #64]
     f9c:	str	x8, [sp, #32]
     fa0:	ldrb	w8, [x25]
     fa4:	tbnz	w8, #2, 19a0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xed0>
     fa8:	sub	x8, x25, #0x18
     fac:	cmp	x25, #0x0
     fb0:	csel	x24, xzr, x8, eq  // eq = none
     fb4:	cbz	x25, 19c0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xef0>
     fb8:	ldrb	w8, [x24, #16]
     fbc:	cmp	w8, #0x50
     fc0:	b.ne	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>  // b.any
     fc4:	ldur	x8, [x24, #-24]
     fc8:	cbz	x8, fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
     fcc:	ldrb	w9, [x8, #16]
     fd0:	cbnz	w9, fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
     fd4:	ldrb	w9, [x8, #33]
     fd8:	tbnz	w9, #5, 1054 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x584>
     fdc:	ldrb	w8, [x23]
     fe0:	tbnz	w8, #2, 193c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe6c>
     fe4:	ldr	x25, [x25, #8]
     fe8:	sub	x8, x23, #0x18
     fec:	cmp	x23, #0x0
     ff0:	csel	x8, xzr, x8, eq  // eq = none
     ff4:	add	x8, x8, #0x28
     ff8:	cmp	x8, x25
     ffc:	b.ne	1030 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x560>  // b.any
    1000:	ldr	x23, [x23, #8]
    1004:	cmp	x27, x23
    1008:	b.eq	1030 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x560>  // b.none
    100c:	ldrb	w8, [x23]
    1010:	tbnz	w8, #2, 193c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe6c>
    1014:	sub	x8, x23, #0x18
    1018:	cmp	x23, #0x0
    101c:	csel	x8, xzr, x8, eq  // eq = none
    1020:	ldr	x25, [x8, #48]
    1024:	add	x8, x8, #0x28
    1028:	cmp	x8, x25
    102c:	b.eq	1000 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x530>  // b.none
    1030:	cmp	x27, x28
    1034:	cset	w8, ne  // ne = any
    1038:	cmp	x25, #0x0
    103c:	cset	w9, ne  // ne = any
    1040:	cmp	x28, x23
    1044:	b.ne	fa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x4d0>  // b.any
    1048:	and	w8, w8, w9
    104c:	tbnz	w8, #0, fa0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x4d0>
    1050:	b	b7c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xac>
    1054:	ldr	w8, [x8, #36]
    1058:	sub	w8, w8, #0x12
    105c:	cmp	w8, #0x12
    1060:	b.hi	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>  // b.pmore
    1064:	adr	x9, fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    1068:	ldrb	w10, [x11, x8]
    106c:	add	x9, x9, x10, lsl #2
    1070:	br	x9
    1074:	mov	x0, x24
    1078:	mov	w1, wzr
    107c:	str	x22, [sp, #24]
    1080:	mov	x22, x21
    1084:	mov	w21, w26
    1088:	mov	x26, x11
    108c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1090:	cbz	x0, 1b2c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x105c>
    1094:	ldrb	w8, [x0, #16]
    1098:	cmp	w8, #0x50
    109c:	b.ne	1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>  // b.any
    10a0:	ldur	x8, [x0, #-24]
    10a4:	cbz	x8, 1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>
    10a8:	ldrb	w9, [x8, #16]
    10ac:	cbnz	w9, 1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>
    10b0:	ldrb	w9, [x8, #33]
    10b4:	tbz	w9, #5, 1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>
    10b8:	ldr	w8, [x8, #36]
    10bc:	sub	w9, w8, #0x18
    10c0:	cmp	w9, #0x3
    10c4:	b.cs	1aec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x101c>  // b.hs, b.nlast
    10c8:	cmp	w8, #0x18
    10cc:	b.ne	10d8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x608>  // b.any
    10d0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    10d4:	cbnz	x1, 11dc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x70c>
    10d8:	ldr	x19, [sp, #48]
    10dc:	ldr	x8, [x19]
    10e0:	cbnz	x8, 1b8c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10bc>
    10e4:	ldr	x8, [x24, #56]
    10e8:	mov	x0, x24
    10ec:	stur	x8, [x29, #-40]
    10f0:	bl	0 <_ZNK4llvm5Value10getContextEv>
    10f4:	mov	x1, x0
    10f8:	sub	x0, x29, #0x28
    10fc:	mov	w3, #0x23                  	// #35
    1100:	mov	w2, wzr
    1104:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    1108:	str	x0, [x24, #56]
    110c:	stur	x0, [x29, #-40]
    1110:	mov	x0, x24
    1114:	bl	0 <_ZNK4llvm5Value10getContextEv>
    1118:	mov	x1, x0
    111c:	sub	x0, x29, #0x28
    1120:	mov	w3, #0x15                  	// #21
    1124:	mov	w2, wzr
    1128:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    112c:	str	x0, [x24, #56]
    1130:	stur	x0, [x29, #-40]
    1134:	mov	x0, x24
    1138:	bl	0 <_ZNK4llvm5Value10getContextEv>
    113c:	mov	x1, x0
    1140:	sub	x0, x29, #0x28
    1144:	mov	w2, #0xffffffff            	// #-1
    1148:	mov	w3, #0x19                  	// #25
    114c:	bl	0 <_ZNK4llvm13AttributeList15removeAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    1150:	str	x0, [x24, #56]
    1154:	str	x24, [x19]
    1158:	b	11dc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x70c>
    115c:	ldr	x19, [sp, #48]
    1160:	str	x22, [sp, #24]
    1164:	mov	x22, x21
    1168:	mov	w21, w26
    116c:	ldp	w8, w9, [x19, #96]
    1170:	cmp	w8, w9
    1174:	b.cs	13b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x8e4>  // b.hs, b.nlast
    1178:	ldr	x9, [x19, #88]
    117c:	str	x24, [x9, w8, uxtw #3]
    1180:	ldp	w8, w9, [x19, #96]
    1184:	cmp	w8, w9
    1188:	b.cs	1c3c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x116c>  // b.hs, b.nlast
    118c:	add	w8, w8, #0x1
    1190:	mov	w1, #0x1                   	// #1
    1194:	mov	x0, x24
    1198:	mov	x26, x11
    119c:	str	w8, [x19, #96]
    11a0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    11a4:	cbz	x0, 1bac <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10dc>
    11a8:	ldrb	w8, [x0, #16]
    11ac:	cmp	w8, #0x11
    11b0:	b.cs	1bcc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10fc>  // b.hs, b.nlast
    11b4:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    11b8:	tbz	w0, #0, 11dc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x70c>
    11bc:	tbnz	w21, #0, 1b9c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10cc>
    11c0:	ldr	x8, [sp, #48]
    11c4:	mov	x11, x26
    11c8:	mov	w26, #0x1                   	// #1
    11cc:	ldr	w8, [x8, #96]
    11d0:	sub	x8, x8, #0x1
    11d4:	str	x8, [sp, #16]
    11d8:	b	11e4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x714>
    11dc:	mov	x11, x26
    11e0:	mov	w26, w21
    11e4:	mov	x21, x22
    11e8:	ldr	x22, [sp, #24]
    11ec:	b	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    11f0:	ldr	x19, [sp, #48]
    11f4:	str	w26, [sp, #24]
    11f8:	ldp	w8, w9, [x19, #16]
    11fc:	cmp	w8, w9
    1200:	b.cs	13d4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x904>  // b.hs, b.nlast
    1204:	ldr	x9, [x19, #8]
    1208:	str	x24, [x9, w8, uxtw #3]
    120c:	ldp	w8, w9, [x19, #16]
    1210:	cmp	w8, w9
    1214:	b.cs	1c3c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x116c>  // b.hs, b.nlast
    1218:	ldr	x9, [x19, #8]
    121c:	add	x8, x8, #0x1
    1220:	str	w8, [x19, #16]
    1224:	mov	w1, #0x1                   	// #1
    1228:	add	x8, x9, x8, lsl #3
    122c:	ldur	x0, [x8, #-8]
    1230:	mov	x26, x11
    1234:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1238:	cbz	x0, 1bac <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10dc>
    123c:	ldrb	w8, [x0, #16]
    1240:	cmp	w8, #0x11
    1244:	b.cs	1bcc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10fc>  // b.hs, b.nlast
    1248:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    124c:	tbnz	w0, #0, 12b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7e4>
    1250:	ldr	x8, [sp, #48]
    1254:	ldr	w8, [x8, #16]
    1258:	cmp	w8, #0x2
    125c:	b.cc	12b4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x7e4>  // b.lo, b.ul, b.last
    1260:	ldr	x8, [sp, #80]
    1264:	mov	w1, #0x1                   	// #1
    1268:	ldr	x8, [x8]
    126c:	ldr	x0, [x8]
    1270:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1274:	cbz	x0, 1bac <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10dc>
    1278:	ldrb	w8, [x0, #16]
    127c:	cmp	w8, #0x11
    1280:	b.cs	1bcc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x10fc>  // b.hs, b.nlast
    1284:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    1288:	tbz	w0, #0, 1bec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x111c>
    128c:	ldr	x8, [sp, #48]
    1290:	ldr	w8, [x8, #16]
    1294:	cbz	w8, 1bfc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x112c>
    1298:	ldr	x9, [sp, #80]
    129c:	ldr	x9, [x9]
    12a0:	add	x8, x9, x8, lsl #3
    12a4:	ldur	x10, [x8, #-8]
    12a8:	ldr	x11, [x9]
    12ac:	str	x10, [x9]
    12b0:	stur	x11, [x8, #-8]
    12b4:	mov	x11, x26
    12b8:	ldr	w26, [sp, #24]
    12bc:	b	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    12c0:	ldr	x19, [sp, #48]
    12c4:	ldp	w8, w9, [x19, #96]
    12c8:	cmp	w8, w9
    12cc:	b.cs	13f8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x928>  // b.hs, b.nlast
    12d0:	ldr	x9, [x19, #88]
    12d4:	str	x24, [x9, w8, uxtw #3]
    12d8:	ldp	w8, w9, [x19, #96]
    12dc:	cmp	w8, w9
    12e0:	b.cs	1c3c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x116c>  // b.hs, b.nlast
    12e4:	add	w8, w8, #0x1
    12e8:	str	w8, [x19, #96]
    12ec:	b	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    12f0:	ldp	w8, w9, [sp, #128]
    12f4:	cmp	w8, w9
    12f8:	b.cs	1430 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x960>  // b.hs, b.nlast
    12fc:	ldr	x9, [sp, #120]
    1300:	str	x24, [x9, w8, uxtw #3]
    1304:	ldp	w8, w9, [sp, #128]
    1308:	cmp	w8, w9
    130c:	b.cs	1c3c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x116c>  // b.hs, b.nlast
    1310:	add	w8, w8, #0x1
    1314:	str	w8, [sp, #128]
    1318:	b	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    131c:	mov	x0, x24
    1320:	mov	x19, x11
    1324:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1328:	ldr	x8, [x24, #8]
    132c:	cbz	x8, 1368 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x898>
    1330:	mov	x11, x19
    1334:	b	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    1338:	ldr	x19, [sp, #48]
    133c:	ldp	w8, w9, [x19, #64]
    1340:	cmp	w8, w9
    1344:	b.cs	1454 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x984>  // b.hs, b.nlast
    1348:	ldr	x9, [x19, #56]
    134c:	str	x24, [x9, w8, uxtw #3]
    1350:	ldp	w8, w9, [x19, #64]
    1354:	cmp	w8, w9
    1358:	b.cs	1c3c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x116c>  // b.hs, b.nlast
    135c:	add	w8, w8, #0x1
    1360:	str	w8, [x19, #64]
    1364:	b	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    1368:	ldur	x8, [x24, #-24]
    136c:	ldrb	w9, [x8, #16]
    1370:	cmp	w9, #0x0
    1374:	csel	x8, x8, xzr, eq  // eq = none
    1378:	ldr	w8, [x8, #36]
    137c:	cmp	w8, #0x20
    1380:	b.ne	1c1c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x114c>  // b.any
    1384:	ldp	w8, w9, [sp, #96]
    1388:	mov	x11, x19
    138c:	cmp	w8, w9
    1390:	b.cs	1490 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x9c0>  // b.hs, b.nlast
    1394:	ldr	x9, [sp, #88]
    1398:	str	x24, [x9, w8, uxtw #3]
    139c:	ldp	w8, w9, [sp, #96]
    13a0:	cmp	w8, w9
    13a4:	b.cs	1c3c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x116c>  // b.hs, b.nlast
    13a8:	add	w8, w8, #0x1
    13ac:	str	w8, [sp, #96]
    13b0:	b	fdc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x50c>
    13b4:	ldp	x1, x0, [sp, #64]
    13b8:	mov	w3, #0x8                   	// #8
    13bc:	mov	x2, xzr
    13c0:	mov	x26, x11
    13c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13c8:	ldr	w8, [x19, #96]
    13cc:	mov	x11, x26
    13d0:	b	1178 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x6a8>
    13d4:	ldr	x0, [sp, #80]
    13d8:	ldr	x1, [sp, #40]
    13dc:	mov	w3, #0x8                   	// #8
    13e0:	mov	x2, xzr
    13e4:	mov	x26, x11
    13e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13ec:	ldr	w8, [x19, #16]
    13f0:	mov	x11, x26
    13f4:	b	1204 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x734>
    13f8:	ldp	x1, x0, [sp, #64]
    13fc:	mov	w3, #0x8                   	// #8
    1400:	mov	x2, xzr
    1404:	str	x22, [sp, #24]
    1408:	mov	x22, x21
    140c:	mov	w21, w26
    1410:	mov	x26, x11
    1414:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1418:	mov	x11, x26
    141c:	mov	w26, w21
    1420:	mov	x21, x22
    1424:	ldr	x22, [sp, #24]
    1428:	ldr	w8, [x19, #96]
    142c:	b	12d0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x800>
    1430:	add	x0, sp, #0x78
    1434:	mov	w3, #0x8                   	// #8
    1438:	mov	x1, x21
    143c:	mov	x2, xzr
    1440:	mov	x19, x11
    1444:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1448:	ldr	w8, [sp, #128]
    144c:	mov	x11, x19
    1450:	b	12fc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x82c>
    1454:	ldr	x0, [sp, #56]
    1458:	ldr	x1, [sp, #32]
    145c:	mov	w3, #0x8                   	// #8
    1460:	mov	x2, xzr
    1464:	str	x22, [sp, #24]
    1468:	mov	x22, x21
    146c:	mov	w21, w26
    1470:	mov	x26, x11
    1474:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1478:	mov	x11, x26
    147c:	mov	w26, w21
    1480:	mov	x21, x22
    1484:	ldr	x22, [sp, #24]
    1488:	ldr	w8, [x19, #64]
    148c:	b	1348 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x878>
    1490:	add	x0, sp, #0x58
    1494:	mov	w3, #0x8                   	// #8
    1498:	mov	x1, x22
    149c:	mov	x2, xzr
    14a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    14a4:	ldr	w8, [sp, #96]
    14a8:	mov	x11, x19
    14ac:	b	1394 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x8c4>
    14b0:	mov	x0, x20
    14b4:	bl	0 <_ZNK4llvm8Function10getContextEv>
    14b8:	mov	w1, wzr
    14bc:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    14c0:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    14c4:	ldr	w8, [sp, #128]
    14c8:	cbz	w8, 14f8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa28>
    14cc:	ldr	x19, [sp, #120]
    14d0:	mov	x20, x0
    14d4:	lsl	x22, x8, #3
    14d8:	ldr	x21, [x19], #8
    14dc:	mov	x1, x20
    14e0:	mov	x0, x21
    14e4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    14e8:	mov	x0, x21
    14ec:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    14f0:	subs	x22, x22, #0x8
    14f4:	b.ne	14d8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa08>  // b.any
    14f8:	ldr	w8, [x23, #96]
    14fc:	cbz	w8, 15a8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xad8>
    1500:	ldr	x19, [x23, #88]
    1504:	lsl	x21, x8, #3
    1508:	b	1518 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa48>
    150c:	subs	x21, x21, #0x8
    1510:	add	x19, x19, #0x8
    1514:	b.eq	15a8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xad8>  // b.none
    1518:	ldr	x20, [x19]
    151c:	ldr	x0, [x20]
    1520:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    1524:	mov	x1, x0
    1528:	mov	x0, x20
    152c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1530:	mov	x0, x20
    1534:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1538:	cbz	x20, 19e0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf10>
    153c:	ldur	x8, [x20, #-24]
    1540:	ldrb	w9, [x8, #16]
    1544:	cmp	w9, #0x0
    1548:	csel	x8, x8, xzr, eq  // eq = none
    154c:	ldr	w8, [x8, #36]
    1550:	cmp	w8, #0x23
    1554:	b.ne	150c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa3c>  // b.any
    1558:	mov	x0, x20
    155c:	mov	w1, wzr
    1560:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1564:	cbz	x0, 1a20 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf50>
    1568:	ldrb	w8, [x0, #16]
    156c:	cmp	w8, #0x10
    1570:	b.eq	150c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa3c>  // b.none
    1574:	cmp	w8, #0x50
    1578:	b.ne	195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>  // b.any
    157c:	ldur	x8, [x0, #-24]
    1580:	cbz	x8, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    1584:	ldrb	w9, [x8, #16]
    1588:	cbnz	w9, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    158c:	ldrb	w9, [x8, #33]
    1590:	tbz	w9, #5, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    1594:	ldr	w8, [x8, #36]
    1598:	cmp	w8, #0x20
    159c:	b.ne	195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>  // b.any
    15a0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    15a4:	b	150c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xa3c>
    15a8:	ldr	w8, [x23, #16]
    15ac:	cbz	w8, 1814 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd44>
    15b0:	ldr	x19, [x23, #8]
    15b4:	lsl	x20, x8, #3
    15b8:	ldr	x0, [x19], #8
    15bc:	mov	w1, wzr
    15c0:	mov	w2, wzr
    15c4:	mov	x3, xzr
    15c8:	mov	x4, xzr
    15cc:	bl	0 <_ZN4llvm19changeToUnreachableEPNS_11InstructionEbbPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    15d0:	subs	x20, x20, #0x8
    15d4:	b.ne	15b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xae8>  // b.any
    15d8:	b	1814 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd44>
    15dc:	cmp	w19, #0x18
    15e0:	b.ne	1c5c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x118c>  // b.any
    15e4:	and	w8, w26, #0x1
    15e8:	mov	w1, #0x1                   	// #1
    15ec:	mov	x0, x21
    15f0:	str	wzr, [x23, #168]
    15f4:	strb	w8, [x23, #224]
    15f8:	str	xzr, [x23, #200]
    15fc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1600:	cbz	x0, 1cd4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1204>
    1604:	ldrb	w8, [x0, #16]
    1608:	cmp	w8, #0xf
    160c:	b.ne	1618 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb48>  // b.any
    1610:	mov	x0, xzr
    1614:	b	162c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb5c>
    1618:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    161c:	cbz	x0, 1cf4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1224>
    1620:	ldrb	w8, [x0, #16]
    1624:	cmp	w8, #0x37
    1628:	b.ne	1d14 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1244>  // b.any
    162c:	ldr	w8, [x23, #96]
    1630:	stp	x0, xzr, [x23, #208]
    1634:	cbz	w8, 17b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xce8>
    1638:	ldr	x9, [sp, #48]
    163c:	lsl	x23, x8, #3
    1640:	mov	w24, #0x101                 	// #257
    1644:	ldr	x22, [x9, #88]
    1648:	b	1668 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb98>
    164c:	mov	x0, x20
    1650:	mov	w1, wzr
    1654:	mov	x2, x21
    1658:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    165c:	subs	x23, x23, #0x8
    1660:	add	x22, x22, #0x8
    1664:	b.eq	17b8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xce8>  // b.none
    1668:	ldr	x20, [x22]
    166c:	cbz	x20, 19e0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf10>
    1670:	ldur	x8, [x20, #-24]
    1674:	ldrb	w9, [x8, #16]
    1678:	cmp	w9, #0x0
    167c:	csel	x8, x8, xzr, eq  // eq = none
    1680:	ldr	w8, [x8, #36]
    1684:	cmp	w8, #0x23
    1688:	b.ne	1ad4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1004>  // b.any
    168c:	mov	x0, x20
    1690:	mov	w1, wzr
    1694:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1698:	cbz	x0, 1a20 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf50>
    169c:	ldrb	w8, [x0, #16]
    16a0:	cmp	w8, #0x10
    16a4:	b.eq	16d8 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xc08>  // b.none
    16a8:	cmp	w8, #0x50
    16ac:	b.ne	195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>  // b.any
    16b0:	ldur	x8, [x0, #-24]
    16b4:	cbz	x8, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    16b8:	ldrb	w9, [x8, #16]
    16bc:	cbnz	w9, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    16c0:	ldrb	w9, [x8, #33]
    16c4:	tbz	w9, #5, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    16c8:	ldr	w8, [x8, #36]
    16cc:	cmp	w8, #0x20
    16d0:	b.eq	165c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb8c>  // b.none
    16d4:	b	195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    16d8:	ldr	x8, [sp, #48]
    16dc:	mov	x0, x20
    16e0:	ldr	x19, [x8]
    16e4:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    16e8:	mov	w1, #0x20                  	// #32
    16ec:	mov	x2, xzr
    16f0:	mov	x3, xzr
    16f4:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    16f8:	sub	x1, x29, #0x10
    16fc:	sub	x3, x29, #0x28
    1700:	mov	w2, #0x1                   	// #1
    1704:	mov	x4, x20
    1708:	stur	x19, [x29, #-16]
    170c:	stp	xzr, xzr, [x29, #-40]
    1710:	sturh	w24, [x29, #-24]
    1714:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1718:	cbz	x0, 1b0c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x103c>
    171c:	ldrb	w8, [x0, #16]
    1720:	mov	x21, x0
    1724:	cmp	w8, #0x50
    1728:	b.ne	1a00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf30>  // b.any
    172c:	ldur	x8, [x21, #-24]
    1730:	cbz	x8, 1a00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf30>
    1734:	ldrb	w9, [x8, #16]
    1738:	cbnz	w9, 1a00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf30>
    173c:	ldrb	w9, [x8, #33]
    1740:	tbz	w9, #5, 1a00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf30>
    1744:	ldr	w8, [x8, #36]
    1748:	cmp	w8, #0x20
    174c:	b.ne	1a00 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf30>  // b.any
    1750:	mov	x0, x20
    1754:	mov	w1, wzr
    1758:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    175c:	cbz	x0, 1a20 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xf50>
    1760:	ldrb	w8, [x0, #16]
    1764:	cmp	w8, #0x10
    1768:	b.eq	164c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xb7c>  // b.none
    176c:	cmp	w8, #0x50
    1770:	b.ne	195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>  // b.any
    1774:	ldur	x8, [x0, #-24]
    1778:	cbz	x8, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    177c:	ldrb	w9, [x8, #16]
    1780:	cbnz	w9, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    1784:	ldrb	w9, [x8, #33]
    1788:	tbz	w9, #5, 195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>
    178c:	ldr	w8, [x8, #36]
    1790:	cmp	w8, #0x20
    1794:	b.ne	195c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xe8c>  // b.any
    1798:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    179c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    17a0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    17a4:	add	x0, x0, #0x0
    17a8:	add	x1, x1, #0x0
    17ac:	add	x3, x3, #0x0
    17b0:	mov	w2, #0xf3                  	// #243
    17b4:	bl	0 <__assert_fail>
    17b8:	ldr	w8, [sp, #128]
    17bc:	ldr	x22, [sp, #48]
    17c0:	cbz	w8, 17ec <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd1c>
    17c4:	ldr	x19, [sp, #120]
    17c8:	lsl	x21, x8, #3
    17cc:	ldr	x20, [x19], #8
    17d0:	ldr	x1, [x22]
    17d4:	mov	x0, x20
    17d8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    17dc:	mov	x0, x20
    17e0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    17e4:	subs	x21, x21, #0x8
    17e8:	b.ne	17cc <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xcfc>  // b.any
    17ec:	ldr	w8, [x22, #168]
    17f0:	cbz	w8, 1864 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd94>
    17f4:	ldr	w8, [sp, #96]
    17f8:	cbz	w8, 1814 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd44>
    17fc:	ldr	x19, [sp, #88]
    1800:	lsl	x20, x8, #3
    1804:	ldr	x0, [x19], #8
    1808:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    180c:	subs	x20, x20, #0x8
    1810:	b.ne	1804 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd34>  // b.any
    1814:	ldr	x0, [sp, #88]
    1818:	add	x8, sp, #0x58
    181c:	add	x8, x8, #0x10
    1820:	cmp	x0, x8
    1824:	b.eq	182c <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd5c>  // b.none
    1828:	bl	0 <free>
    182c:	ldr	x0, [sp, #120]
    1830:	add	x8, sp, #0x78
    1834:	add	x8, x8, #0x10
    1838:	cmp	x0, x8
    183c:	b.eq	1844 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd74>  // b.none
    1840:	bl	0 <free>
    1844:	ldp	x20, x19, [sp, #320]
    1848:	ldp	x22, x21, [sp, #304]
    184c:	ldp	x24, x23, [sp, #288]
    1850:	ldp	x26, x25, [sp, #272]
    1854:	ldp	x28, x27, [sp, #256]
    1858:	ldp	x29, x30, [sp, #240]
    185c:	add	sp, sp, #0x150
    1860:	ret
    1864:	ldrb	w8, [x22, #224]
    1868:	cbz	w8, 17f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd24>
    186c:	ldr	w8, [x22, #96]
    1870:	ldr	x10, [sp, #16]
    1874:	sub	x9, x8, #0x1
    1878:	cmp	x10, x9
    187c:	b.eq	17f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd24>  // b.none
    1880:	ldr	x9, [sp, #16]
    1884:	cmp	x9, x8
    1888:	b.cs	1d34 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1264>  // b.hs, b.nlast
    188c:	cbz	w8, 1d54 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0x1284>
    1890:	ldr	x9, [x22, #88]
    1894:	ldr	x10, [sp, #16]
    1898:	add	x8, x9, x8, lsl #3
    189c:	lsl	x10, x10, #3
    18a0:	ldur	x11, [x8, #-8]
    18a4:	ldr	x12, [x9, x10]
    18a8:	str	x11, [x9, x10]
    18ac:	stur	x12, [x8, #-8]
    18b0:	b	17f4 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE+0xd24>
    18b4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18b8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18bc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18c0:	add	x0, x0, #0x0
    18c4:	add	x1, x1, #0x0
    18c8:	add	x3, x3, #0x0
    18cc:	mov	w2, #0xfa                  	// #250
    18d0:	bl	0 <__assert_fail>
    18d4:	mov	x0, x26
    18d8:	bl	0 <_ZNK4llvm5Value4dumpEv>
    18dc:	ldr	x0, [sp, #8]
    18e0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18e4:	bl	0 <_ZNK4llvm4Type4dumpEv>
    18e8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    18ec:	add	x0, x0, #0x0
    18f0:	mov	w1, #0x1                   	// #1
    18f4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    18f8:	mov	x0, x26
    18fc:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1900:	ldr	x0, [sp, #8]
    1904:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1908:	bl	0 <_ZNK4llvm4Type4dumpEv>
    190c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1910:	add	x0, x0, #0x0
    1914:	mov	w1, #0x1                   	// #1
    1918:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    191c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1920:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1924:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1928:	add	x0, x0, #0x0
    192c:	add	x1, x1, #0x0
    1930:	add	x3, x3, #0x0
    1934:	mov	w2, #0xb3                  	// #179
    1938:	bl	0 <__assert_fail>
    193c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1940:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1944:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1948:	add	x0, x0, #0x0
    194c:	add	x1, x1, #0x0
    1950:	add	x3, x3, #0x0
    1954:	mov	w2, #0x8b                  	// #139
    1958:	bl	0 <__assert_fail>
    195c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1960:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1964:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1968:	add	x0, x0, #0x0
    196c:	add	x1, x1, #0x0
    1970:	add	x3, x3, #0x0
    1974:	mov	w2, #0x17c                 	// #380
    1978:	bl	0 <__assert_fail>
    197c:	mov	x0, x26
    1980:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1984:	ldr	x0, [sp, #8]
    1988:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    198c:	bl	0 <_ZNK4llvm4Type4dumpEv>
    1990:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1994:	add	x0, x0, #0x0
    1998:	mov	w1, #0x1                   	// #1
    199c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    19a0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19a4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19a8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19ac:	add	x0, x0, #0x0
    19b0:	add	x1, x1, #0x0
    19b4:	add	x3, x3, #0x0
    19b8:	mov	w2, #0x8b                  	// #139
    19bc:	bl	0 <__assert_fail>
    19c0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19c4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19c8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19cc:	add	x0, x0, #0x0
    19d0:	add	x1, x1, #0x0
    19d4:	add	x3, x3, #0x0
    19d8:	mov	w2, #0x69                  	// #105
    19dc:	bl	0 <__assert_fail>
    19e0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19e4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19e8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    19ec:	add	x0, x0, #0x0
    19f0:	add	x1, x1, #0x0
    19f4:	add	x3, x3, #0x0
    19f8:	mov	w2, #0x69                  	// #105
    19fc:	bl	0 <__assert_fail>
    1a00:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a04:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a08:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a0c:	add	x0, x0, #0x0
    1a10:	add	x1, x1, #0x0
    1a14:	add	x3, x3, #0x0
    1a18:	mov	w2, #0x108                 	// #264
    1a1c:	bl	0 <__assert_fail>
    1a20:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a24:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a28:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a2c:	add	x0, x0, #0x0
    1a30:	add	x1, x1, #0x0
    1a34:	add	x3, x3, #0x0
    1a38:	mov	w2, #0x69                  	// #105
    1a3c:	bl	0 <__assert_fail>
    1a40:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a44:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a48:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a4c:	add	x0, x0, #0x0
    1a50:	add	x1, x1, #0x0
    1a54:	add	x3, x3, #0x0
    1a58:	mov	w2, #0x69                  	// #105
    1a5c:	bl	0 <__assert_fail>
    1a60:	mov	x0, x26
    1a64:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1a68:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a6c:	add	x0, x0, #0x0
    1a70:	mov	w1, #0x1                   	// #1
    1a74:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1a78:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a7c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1a80:	add	x0, x0, #0x0
    1a84:	add	x1, x1, #0x0
    1a88:	mov	w2, #0x46a                 	// #1130
    1a8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1a90:	mov	x0, x26
    1a94:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1a98:	ldr	x0, [sp, #8]
    1a9c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1aa0:	bl	0 <_ZNK4llvm4Type4dumpEv>
    1aa4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1aa8:	add	x0, x0, #0x0
    1aac:	mov	w1, #0x1                   	// #1
    1ab0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1ab4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ab8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1abc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ac0:	add	x0, x0, #0x0
    1ac4:	add	x1, x1, #0x0
    1ac8:	add	x3, x3, #0x0
    1acc:	mov	w2, #0x69                  	// #105
    1ad0:	bl	0 <__assert_fail>
    1ad4:	mov	x0, x20
    1ad8:	bl	0 <_ZNK4llvm5Value4dumpEv>
    1adc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ae0:	add	x0, x0, #0x0
    1ae4:	mov	w1, #0x1                   	// #1
    1ae8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1aec:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1af0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1af4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1af8:	add	x0, x0, #0x0
    1afc:	add	x1, x1, #0x0
    1b00:	add	x3, x3, #0x0
    1b04:	mov	w2, #0x108                 	// #264
    1b08:	bl	0 <__assert_fail>
    1b0c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b10:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b14:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b18:	add	x0, x0, #0x0
    1b1c:	add	x1, x1, #0x0
    1b20:	add	x3, x3, #0x0
    1b24:	mov	w2, #0x69                  	// #105
    1b28:	bl	0 <__assert_fail>
    1b2c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b30:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b34:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b38:	add	x0, x0, #0x0
    1b3c:	add	x1, x1, #0x0
    1b40:	add	x3, x3, #0x0
    1b44:	mov	w2, #0x69                  	// #105
    1b48:	bl	0 <__assert_fail>
    1b4c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b50:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b54:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b58:	add	x0, x0, #0x0
    1b5c:	add	x1, x1, #0x0
    1b60:	add	x3, x3, #0x0
    1b64:	mov	w2, #0x69                  	// #105
    1b68:	bl	0 <__assert_fail>
    1b6c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b70:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b74:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b78:	add	x0, x0, #0x0
    1b7c:	add	x1, x1, #0x0
    1b80:	add	x3, x3, #0x0
    1b84:	mov	w2, #0x108                 	// #264
    1b88:	bl	0 <__assert_fail>
    1b8c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1b90:	add	x0, x0, #0x0
    1b94:	mov	w1, #0x1                   	// #1
    1b98:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1b9c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ba0:	add	x0, x0, #0x0
    1ba4:	mov	w1, #0x1                   	// #1
    1ba8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1bac:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bb0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bb4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bb8:	add	x0, x0, #0x0
    1bbc:	add	x1, x1, #0x0
    1bc0:	add	x3, x3, #0x0
    1bc4:	mov	w2, #0x69                  	// #105
    1bc8:	bl	0 <__assert_fail>
    1bcc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bd0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bd4:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bd8:	add	x0, x0, #0x0
    1bdc:	add	x1, x1, #0x0
    1be0:	add	x3, x3, #0x0
    1be4:	mov	w2, #0x108                 	// #264
    1be8:	bl	0 <__assert_fail>
    1bec:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1bf0:	add	x0, x0, #0x0
    1bf4:	mov	w1, #0x1                   	// #1
    1bf8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1bfc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c00:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c04:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c08:	add	x0, x0, #0x0
    1c0c:	add	x1, x1, #0x0
    1c10:	add	x3, x3, #0x0
    1c14:	mov	w2, #0x9e                  	// #158
    1c18:	bl	0 <__assert_fail>
    1c1c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c20:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c24:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c28:	add	x0, x0, #0x0
    1c2c:	add	x1, x1, #0x0
    1c30:	add	x3, x3, #0x0
    1c34:	mov	w2, #0x108                 	// #264
    1c38:	bl	0 <__assert_fail>
    1c3c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c40:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c44:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c48:	add	x0, x0, #0x0
    1c4c:	add	x1, x1, #0x0
    1c50:	add	x3, x3, #0x0
    1c54:	mov	w2, #0x43                  	// #67
    1c58:	bl	0 <__assert_fail>
    1c5c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c60:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c64:	add	x0, x0, #0x0
    1c68:	add	x1, x1, #0x0
    1c6c:	mov	w2, #0x1d5                 	// #469
    1c70:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1c74:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c78:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c7c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c80:	add	x0, x0, #0x0
    1c84:	add	x1, x1, #0x0
    1c88:	add	x3, x3, #0x0
    1c8c:	mov	w2, #0xbb                  	// #187
    1c90:	bl	0 <__assert_fail>
    1c94:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c98:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1c9c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ca0:	add	x0, x0, #0x0
    1ca4:	add	x1, x1, #0x0
    1ca8:	add	x3, x3, #0x0
    1cac:	mov	w2, #0x69                  	// #105
    1cb0:	bl	0 <__assert_fail>
    1cb4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cb8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cbc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cc0:	add	x0, x0, #0x0
    1cc4:	add	x1, x1, #0x0
    1cc8:	add	x3, x3, #0x0
    1ccc:	mov	w2, #0x108                 	// #264
    1cd0:	bl	0 <__assert_fail>
    1cd4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cd8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cdc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ce0:	add	x0, x0, #0x0
    1ce4:	add	x1, x1, #0x0
    1ce8:	add	x3, x3, #0x0
    1cec:	mov	w2, #0x69                  	// #105
    1cf0:	bl	0 <__assert_fail>
    1cf4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cf8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1cfc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d00:	add	x0, x0, #0x0
    1d04:	add	x1, x1, #0x0
    1d08:	add	x3, x3, #0x0
    1d0c:	mov	w2, #0x69                  	// #105
    1d10:	bl	0 <__assert_fail>
    1d14:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d18:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d1c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d20:	add	x0, x0, #0x0
    1d24:	add	x1, x1, #0x0
    1d28:	add	x3, x3, #0x0
    1d2c:	mov	w2, #0x108                 	// #264
    1d30:	bl	0 <__assert_fail>
    1d34:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d38:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d3c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d40:	add	x0, x0, #0x0
    1d44:	add	x1, x1, #0x0
    1d48:	add	x3, x3, #0x0
    1d4c:	mov	w2, #0x95                  	// #149
    1d50:	bl	0 <__assert_fail>
    1d54:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d58:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d5c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d60:	add	x0, x0, #0x0
    1d64:	add	x1, x1, #0x0
    1d68:	add	x3, x3, #0x0
    1d6c:	mov	w2, #0xa7                  	// #167
    1d70:	bl	0 <__assert_fail>

0000000000001d74 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv>:
    1d74:	stp	x29, x30, [sp, #-48]!
    1d78:	stp	x22, x21, [sp, #16]
    1d7c:	stp	x20, x19, [sp, #32]
    1d80:	mov	x29, sp
    1d84:	mov	w1, wzr
    1d88:	mov	x19, x0
    1d8c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1d90:	cbz	x0, 1fe8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x274>
    1d94:	ldrb	w8, [x0, #16]
    1d98:	mov	x2, x0
    1d9c:	cmp	w8, #0xd
    1da0:	b.ne	2034 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2c0>  // b.any
    1da4:	mov	w1, #0x1                   	// #1
    1da8:	mov	x0, x19
    1dac:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1db0:	cbz	x0, 1fe8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x274>
    1db4:	ldrb	w8, [x0, #16]
    1db8:	mov	x2, x0
    1dbc:	cmp	w8, #0xd
    1dc0:	b.ne	2044 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2d0>  // b.any
    1dc4:	mov	w1, #0x3                   	// #3
    1dc8:	mov	x0, x19
    1dcc:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1dd0:	mov	x21, x0
    1dd4:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1dd8:	cbz	x0, 1fc8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x254>
    1ddc:	ldrb	w8, [x0, #16]
    1de0:	mov	x20, x0
    1de4:	cbnz	w8, 2054 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2e0>
    1de8:	ldr	x21, [x20, #24]
    1dec:	cbz	x21, 1f88 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1df0:	ldrb	w8, [x21, #8]
    1df4:	cmp	w8, #0xc
    1df8:	b.ne	1fa8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1dfc:	cbz	x19, 2068 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2f4>
    1e00:	ldur	x8, [x19, #-24]
    1e04:	ldrb	w9, [x8, #16]
    1e08:	cmp	w9, #0x0
    1e0c:	csel	x8, x8, xzr, eq  // eq = none
    1e10:	ldr	w8, [x8, #36]
    1e14:	cmp	w8, #0x19
    1e18:	b.ne	1e8c <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x118>  // b.any
    1e1c:	ldr	x8, [x21, #16]
    1e20:	ldr	x22, [x8]
    1e24:	ldr	w8, [x22, #8]
    1e28:	and	w9, w8, #0xff
    1e2c:	cmp	w9, #0xf
    1e30:	b.eq	1e60 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0xec>  // b.none
    1e34:	cbz	x22, 20e0 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x36c>
    1e38:	and	w8, w8, #0x1ff
    1e3c:	cmp	w8, #0x10d
    1e40:	b.ne	20c0 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x34c>  // b.any
    1e44:	ldr	w8, [x22, #12]
    1e48:	cbz	w8, 20c0 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x34c>
    1e4c:	ldr	x8, [x22, #16]
    1e50:	ldr	x8, [x8]
    1e54:	ldrb	w8, [x8, #8]
    1e58:	cmp	w8, #0xf
    1e5c:	b.ne	20c0 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x34c>  // b.any
    1e60:	mov	x0, x19
    1e64:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1e68:	ldr	x8, [x0, #24]
    1e6c:	cbz	x8, 1f88 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1e70:	ldrb	w9, [x8, #8]
    1e74:	cmp	w9, #0xc
    1e78:	b.ne	1fa8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1e7c:	ldr	x8, [x8, #16]
    1e80:	ldr	x8, [x8]
    1e84:	cmp	x22, x8
    1e88:	b.ne	20cc <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x358>  // b.any
    1e8c:	ldr	w8, [x21, #12]
    1e90:	cmp	w8, #0x1
    1e94:	b.eq	2008 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x294>  // b.none
    1e98:	ldr	x8, [x21, #16]
    1e9c:	ldr	x8, [x8, #8]
    1ea0:	ldrb	w8, [x8, #8]
    1ea4:	cmp	w8, #0xf
    1ea8:	b.ne	2008 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x294>  // b.any
    1eac:	mov	w1, #0x4                   	// #4
    1eb0:	mov	x0, x19
    1eb4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1eb8:	mov	x20, x0
    1ebc:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1ec0:	cbz	x0, 1fc8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x254>
    1ec4:	ldrb	w8, [x0, #16]
    1ec8:	mov	x2, x0
    1ecc:	cbnz	w8, 2088 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x314>
    1ed0:	ldr	x8, [x2, #24]
    1ed4:	cbz	x8, 1f88 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1ed8:	ldrb	w9, [x8, #8]
    1edc:	cmp	w9, #0xc
    1ee0:	b.ne	1fa8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1ee4:	ldr	x9, [x8, #16]
    1ee8:	ldr	x10, [x9]
    1eec:	ldrb	w10, [x10, #8]
    1ef0:	cmp	w10, #0xf
    1ef4:	b.ne	2094 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x320>  // b.any
    1ef8:	ldr	w8, [x8, #12]
    1efc:	cmp	w8, #0x2
    1f00:	b.ne	2014 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2a0>  // b.any
    1f04:	ldr	x8, [x9, #8]
    1f08:	ldrb	w8, [x8, #8]
    1f0c:	cmp	w8, #0xb
    1f10:	b.ne	2014 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2a0>  // b.any
    1f14:	mov	w1, #0x5                   	// #5
    1f18:	mov	x0, x19
    1f1c:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f20:	mov	x20, x0
    1f24:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1f28:	cbz	x0, 1fc8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x254>
    1f2c:	ldrb	w8, [x0, #16]
    1f30:	mov	x2, x0
    1f34:	cbnz	w8, 20a4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x330>
    1f38:	ldr	x8, [x2, #24]
    1f3c:	cbz	x8, 1f88 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x214>
    1f40:	ldrb	w9, [x8, #8]
    1f44:	cmp	w9, #0xc
    1f48:	b.ne	1fa8 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x234>  // b.any
    1f4c:	ldr	x9, [x8, #16]
    1f50:	ldr	x10, [x9]
    1f54:	ldrb	w10, [x10, #8]
    1f58:	cbnz	w10, 20b0 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x33c>
    1f5c:	ldr	w8, [x8, #12]
    1f60:	cmp	w8, #0x2
    1f64:	b.ne	2024 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2b0>  // b.any
    1f68:	ldr	x8, [x9, #8]
    1f6c:	ldrb	w8, [x8, #8]
    1f70:	cmp	w8, #0xf
    1f74:	b.ne	2024 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x2b0>  // b.any
    1f78:	ldp	x20, x19, [sp, #32]
    1f7c:	ldp	x22, x21, [sp, #16]
    1f80:	ldp	x29, x30, [sp], #48
    1f84:	ret
    1f88:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f8c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f90:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1f94:	add	x0, x0, #0x0
    1f98:	add	x1, x1, #0x0
    1f9c:	add	x3, x3, #0x0
    1fa0:	mov	w2, #0x69                  	// #105
    1fa4:	bl	0 <__assert_fail>
    1fa8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fac:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fb0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fb4:	add	x0, x0, #0x0
    1fb8:	add	x1, x1, #0x0
    1fbc:	add	x3, x3, #0x0
    1fc0:	mov	w2, #0x108                 	// #264
    1fc4:	bl	0 <__assert_fail>
    1fc8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fcc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fd0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fd4:	add	x0, x0, #0x0
    1fd8:	add	x1, x1, #0x0
    1fdc:	add	x3, x3, #0x0
    1fe0:	mov	w2, #0x69                  	// #105
    1fe4:	bl	0 <__assert_fail>
    1fe8:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1fec:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ff0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    1ff4:	add	x0, x0, #0x0
    1ff8:	add	x1, x1, #0x0
    1ffc:	add	x3, x3, #0x0
    2000:	mov	w2, #0x69                  	// #105
    2004:	bl	0 <__assert_fail>
    2008:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    200c:	add	x1, x1, #0x0
    2010:	b	20d4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    2014:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2018:	add	x1, x1, #0x0
    201c:	mov	x0, x19
    2020:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    2024:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2028:	add	x1, x1, #0x0
    202c:	mov	x0, x19
    2030:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    2034:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2038:	add	x1, x1, #0x0
    203c:	mov	x0, x19
    2040:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    2044:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2048:	add	x1, x1, #0x0
    204c:	mov	x0, x19
    2050:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    2054:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2058:	add	x1, x1, #0x0
    205c:	mov	x0, x19
    2060:	mov	x2, x21
    2064:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    2068:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    206c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2070:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2074:	add	x0, x0, #0x0
    2078:	add	x1, x1, #0x0
    207c:	add	x3, x3, #0x0
    2080:	mov	w2, #0x69                  	// #105
    2084:	bl	0 <__assert_fail>
    2088:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    208c:	add	x1, x1, #0x0
    2090:	b	20d4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    2094:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2098:	add	x1, x1, #0x0
    209c:	mov	x0, x19
    20a0:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    20a4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20a8:	add	x1, x1, #0x0
    20ac:	b	20d4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    20b0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20b4:	add	x1, x1, #0x0
    20b8:	mov	x0, x19
    20bc:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    20c0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20c4:	add	x1, x1, #0x0
    20c8:	b	20d4 <_ZNK4llvm19AnyCoroIdRetconInst15checkWellFormedEv+0x360>
    20cc:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20d0:	add	x1, x1, #0x0
    20d4:	mov	x0, x19
    20d8:	mov	x2, x20
    20dc:	bl	270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>
    20e0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20e4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20e8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    20ec:	add	x0, x0, #0x0
    20f0:	add	x1, x1, #0x0
    20f4:	add	x3, x3, #0x0
    20f8:	mov	w2, #0x69                  	// #105
    20fc:	bl	0 <__assert_fail>

0000000000002100 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>:
    2100:	sub	sp, sp, #0x70
    2104:	stp	x29, x30, [sp, #64]
    2108:	stp	x22, x21, [sp, #80]
    210c:	stp	x20, x19, [sp, #96]
    2110:	add	x29, sp, #0x40
    2114:	str	x2, [sp, #32]
    2118:	ldr	w8, [x0, #168]
    211c:	sub	w9, w8, #0x1
    2120:	cmp	w9, #0x2
    2124:	b.cs	2310 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x210>  // b.hs, b.nlast
    2128:	ldr	x19, [x0, #208]
    212c:	ldr	x8, [x19, #24]
    2130:	cbz	x8, 232c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x22c>
    2134:	ldrb	w9, [x8, #8]
    2138:	cmp	w9, #0xc
    213c:	b.ne	234c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x24c>  // b.any
    2140:	ldr	x8, [x8, #16]
    2144:	mov	w22, #0x101                 	// #257
    2148:	mov	x21, x1
    214c:	mov	x20, x3
    2150:	ldr	x1, [x8, #8]
    2154:	stp	xzr, xzr, [sp, #8]
    2158:	strh	w22, [sp, #24]
    215c:	ldr	x8, [x2]
    2160:	cmp	x8, x1
    2164:	b.eq	21b8 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xb8>  // b.none
    2168:	ldrb	w8, [x2, #16]
    216c:	cmp	w8, #0x10
    2170:	b.ls	21a8 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xa8>  // b.plast
    2174:	mov	w8, #0x101                 	// #257
    2178:	sub	x3, x29, #0x18
    217c:	mov	x0, x2
    2180:	mov	w2, wzr
    2184:	mov	x4, xzr
    2188:	stp	xzr, xzr, [x29, #-24]
    218c:	sturh	w8, [x29, #-8]
    2190:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
    2194:	mov	x1, x0
    2198:	add	x2, sp, #0x8
    219c:	mov	x0, x21
    21a0:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    21a4:	b	21b4 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xb4>
    21a8:	mov	x0, x2
    21ac:	mov	w2, wzr
    21b0:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
    21b4:	mov	x2, x0
    21b8:	str	x2, [sp, #32]
    21bc:	stp	xzr, xzr, [x29, #-24]
    21c0:	sturh	w22, [x29, #-8]
    21c4:	ldr	x8, [x19]
    21c8:	ldrb	w9, [x8, #8]
    21cc:	cmp	w9, #0xf
    21d0:	b.ne	236c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x26c>  // b.any
    21d4:	ldr	x8, [x8, #16]
    21d8:	ldr	x1, [x8]
    21dc:	cbz	x1, 232c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x22c>
    21e0:	ldrb	w8, [x1, #8]
    21e4:	cmp	w8, #0xc
    21e8:	b.ne	234c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x24c>  // b.any
    21ec:	add	x3, sp, #0x20
    21f0:	sub	x5, x29, #0x18
    21f4:	mov	w4, #0x1                   	// #1
    21f8:	mov	x0, x21
    21fc:	mov	x2, x19
    2200:	mov	x6, xzr
    2204:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2208:	ldrh	w8, [x19, #18]
    220c:	ldrh	w9, [x0, #18]
    2210:	mov	x21, x0
    2214:	lsr	w8, w8, #2
    2218:	and	w8, w8, #0xffc
    221c:	bfxil	w8, w9, #0, #2
    2220:	and	w9, w9, #0x8000
    2224:	orr	w8, w8, w9
    2228:	strh	w8, [x0, #18]
    222c:	cbz	x20, 22d8 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1d8>
    2230:	mov	x0, x21
    2234:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    2238:	ldr	x9, [x20, #24]
    223c:	cbz	x9, 22f0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f0>
    2240:	add	x8, x20, #0x10
    2244:	mov	x11, x9
    2248:	mov	x10, x8
    224c:	ldr	x12, [x11, #32]
    2250:	add	x13, x11, #0x18
    2254:	add	x14, x11, #0x10
    2258:	cmp	x12, x0
    225c:	csel	x10, x10, x11, cc  // cc = lo, ul, last
    2260:	csel	x11, x13, x14, cc  // cc = lo, ul, last
    2264:	ldr	x11, [x11]
    2268:	cbnz	x11, 224c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x14c>
    226c:	cmp	x10, x8
    2270:	b.eq	22f0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f0>  // b.none
    2274:	ldr	x11, [x10, #32]
    2278:	cmp	x11, x0
    227c:	csel	x10, x8, x10, hi  // hi = pmore
    2280:	cmp	x10, x8
    2284:	b.eq	22f0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f0>  // b.none
    2288:	ldr	x0, [x10, #40]
    228c:	mov	x10, x8
    2290:	ldr	x11, [x9, #32]
    2294:	add	x12, x9, #0x18
    2298:	add	x13, x9, #0x10
    229c:	cmp	x11, x19
    22a0:	csel	x10, x10, x9, cc  // cc = lo, ul, last
    22a4:	csel	x9, x12, x13, cc  // cc = lo, ul, last
    22a8:	ldr	x9, [x9]
    22ac:	cbnz	x9, 2290 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x190>
    22b0:	cmp	x10, x8
    22b4:	b.eq	22f0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f0>  // b.none
    22b8:	ldr	x9, [x10, #32]
    22bc:	cmp	x9, x19
    22c0:	csel	x9, x8, x10, hi  // hi = pmore
    22c4:	cmp	x9, x8
    22c8:	b.eq	22f0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f0>  // b.none
    22cc:	ldr	x2, [x9, #40]
    22d0:	mov	x1, x21
    22d4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    22d8:	mov	x0, x21
    22dc:	ldp	x20, x19, [sp, #96]
    22e0:	ldp	x22, x21, [sp, #80]
    22e4:	ldp	x29, x30, [sp, #64]
    22e8:	add	sp, sp, #0x70
    22ec:	ret
    22f0:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    22f4:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    22f8:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    22fc:	add	x0, x0, #0x0
    2300:	add	x1, x1, #0x0
    2304:	add	x3, x3, #0x0
    2308:	mov	w2, #0x82                  	// #130
    230c:	bl	0 <__assert_fail>
    2310:	cbnz	w8, 238c <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x28c>
    2314:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2318:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    231c:	add	x0, x0, #0x0
    2320:	add	x1, x1, #0x0
    2324:	mov	w2, #0x1f7                 	// #503
    2328:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    232c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2330:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2334:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2338:	add	x0, x0, #0x0
    233c:	add	x1, x1, #0x0
    2340:	add	x3, x3, #0x0
    2344:	mov	w2, #0x69                  	// #105
    2348:	bl	0 <__assert_fail>
    234c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2350:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2354:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2358:	add	x0, x0, #0x0
    235c:	add	x1, x1, #0x0
    2360:	add	x3, x3, #0x0
    2364:	mov	w2, #0x108                 	// #264
    2368:	bl	0 <__assert_fail>
    236c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2370:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2374:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2378:	add	x0, x0, #0x0
    237c:	add	x1, x1, #0x0
    2380:	add	x3, x3, #0x0
    2384:	mov	w2, #0x17e                 	// #382
    2388:	bl	0 <__assert_fail>
    238c:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2390:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2394:	add	x0, x0, #0x0
    2398:	add	x1, x1, #0x0
    239c:	mov	w2, #0x205                 	// #517
    23a0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000023a4 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>:
    23a4:	sub	sp, sp, #0x70
    23a8:	stp	x29, x30, [sp, #64]
    23ac:	stp	x22, x21, [sp, #80]
    23b0:	stp	x20, x19, [sp, #96]
    23b4:	add	x29, sp, #0x40
    23b8:	str	x2, [sp, #32]
    23bc:	ldr	w8, [x0, #168]
    23c0:	sub	w9, w8, #0x1
    23c4:	cmp	w9, #0x2
    23c8:	b.cs	25b8 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x214>  // b.hs, b.nlast
    23cc:	ldr	x19, [x0, #216]
    23d0:	ldr	x8, [x19, #24]
    23d4:	cbz	x8, 25d4 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x230>
    23d8:	ldrb	w9, [x8, #8]
    23dc:	cmp	w9, #0xc
    23e0:	b.ne	25f4 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x250>  // b.any
    23e4:	ldr	x8, [x8, #16]
    23e8:	mov	w22, #0x101                 	// #257
    23ec:	mov	x20, x3
    23f0:	mov	x21, x1
    23f4:	ldr	x8, [x8, #8]
    23f8:	stp	xzr, xzr, [sp, #8]
    23fc:	strh	w22, [sp, #24]
    2400:	ldr	x9, [x2]
    2404:	cmp	x9, x8
    2408:	b.eq	2468 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xc4>  // b.none
    240c:	ldrb	w9, [x2, #16]
    2410:	cmp	w9, #0x10
    2414:	b.ls	2450 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xac>  // b.plast
    2418:	mov	w9, #0x101                 	// #257
    241c:	sub	x3, x29, #0x18
    2420:	mov	w0, #0x31                  	// #49
    2424:	mov	x1, x2
    2428:	mov	x2, x8
    242c:	mov	x4, xzr
    2430:	stp	xzr, xzr, [x29, #-24]
    2434:	sturh	w9, [x29, #-8]
    2438:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    243c:	mov	x1, x0
    2440:	add	x2, sp, #0x8
    2444:	mov	x0, x21
    2448:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    244c:	b	2464 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0xc0>
    2450:	mov	w0, #0x31                  	// #49
    2454:	mov	x1, x2
    2458:	mov	x2, x8
    245c:	mov	w3, wzr
    2460:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    2464:	mov	x2, x0
    2468:	str	x2, [sp, #32]
    246c:	stp	xzr, xzr, [x29, #-24]
    2470:	sturh	w22, [x29, #-8]
    2474:	ldr	x8, [x19]
    2478:	ldrb	w9, [x8, #8]
    247c:	cmp	w9, #0xf
    2480:	b.ne	2614 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x270>  // b.any
    2484:	ldr	x8, [x8, #16]
    2488:	ldr	x1, [x8]
    248c:	cbz	x1, 25d4 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x230>
    2490:	ldrb	w8, [x1, #8]
    2494:	cmp	w8, #0xc
    2498:	b.ne	25f4 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x250>  // b.any
    249c:	add	x3, sp, #0x20
    24a0:	sub	x5, x29, #0x18
    24a4:	mov	w4, #0x1                   	// #1
    24a8:	mov	x0, x21
    24ac:	mov	x2, x19
    24b0:	mov	x6, xzr
    24b4:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    24b8:	ldrh	w8, [x19, #18]
    24bc:	ldrh	w9, [x0, #18]
    24c0:	lsr	w8, w8, #2
    24c4:	and	w8, w8, #0xffc
    24c8:	bfxil	w8, w9, #0, #2
    24cc:	and	w9, w9, #0x8000
    24d0:	orr	w8, w8, w9
    24d4:	strh	w8, [x0, #18]
    24d8:	cbz	x20, 2584 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1e0>
    24dc:	mov	x21, x0
    24e0:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    24e4:	ldr	x9, [x20, #24]
    24e8:	cbz	x9, 2598 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f4>
    24ec:	add	x8, x20, #0x10
    24f0:	mov	x11, x9
    24f4:	mov	x10, x8
    24f8:	ldr	x12, [x11, #32]
    24fc:	add	x13, x11, #0x18
    2500:	add	x14, x11, #0x10
    2504:	cmp	x12, x0
    2508:	csel	x10, x10, x11, cc  // cc = lo, ul, last
    250c:	csel	x11, x13, x14, cc  // cc = lo, ul, last
    2510:	ldr	x11, [x11]
    2514:	cbnz	x11, 24f8 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x154>
    2518:	cmp	x10, x8
    251c:	b.eq	2598 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f4>  // b.none
    2520:	ldr	x11, [x10, #32]
    2524:	cmp	x11, x0
    2528:	csel	x10, x8, x10, hi  // hi = pmore
    252c:	cmp	x10, x8
    2530:	b.eq	2598 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f4>  // b.none
    2534:	ldr	x0, [x10, #40]
    2538:	mov	x10, x8
    253c:	ldr	x11, [x9, #32]
    2540:	add	x12, x9, #0x18
    2544:	add	x13, x9, #0x10
    2548:	cmp	x11, x19
    254c:	csel	x10, x10, x9, cc  // cc = lo, ul, last
    2550:	csel	x9, x12, x13, cc  // cc = lo, ul, last
    2554:	ldr	x9, [x9]
    2558:	cbnz	x9, 253c <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x198>
    255c:	cmp	x10, x8
    2560:	b.eq	2598 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f4>  // b.none
    2564:	ldr	x9, [x10, #32]
    2568:	cmp	x9, x19
    256c:	csel	x9, x8, x10, hi  // hi = pmore
    2570:	cmp	x9, x8
    2574:	b.eq	2598 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x1f4>  // b.none
    2578:	ldr	x2, [x9, #40]
    257c:	mov	x1, x21
    2580:	bl	0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2584:	ldp	x20, x19, [sp, #96]
    2588:	ldp	x22, x21, [sp, #80]
    258c:	ldp	x29, x30, [sp, #64]
    2590:	add	sp, sp, #0x70
    2594:	ret
    2598:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    259c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25a0:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25a4:	add	x0, x0, #0x0
    25a8:	add	x1, x1, #0x0
    25ac:	add	x3, x3, #0x0
    25b0:	mov	w2, #0x82                  	// #130
    25b4:	bl	0 <__assert_fail>
    25b8:	cbnz	w8, 2634 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE+0x290>
    25bc:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25c0:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25c4:	add	x0, x0, #0x0
    25c8:	add	x1, x1, #0x0
    25cc:	mov	w2, #0x20c                 	// #524
    25d0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    25d4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25d8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25dc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25e0:	add	x0, x0, #0x0
    25e4:	add	x1, x1, #0x0
    25e8:	add	x3, x3, #0x0
    25ec:	mov	w2, #0x69                  	// #105
    25f0:	bl	0 <__assert_fail>
    25f4:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25f8:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    25fc:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2600:	add	x0, x0, #0x0
    2604:	add	x1, x1, #0x0
    2608:	add	x3, x3, #0x0
    260c:	mov	w2, #0x108                 	// #264
    2610:	bl	0 <__assert_fail>
    2614:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2618:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    261c:	adrp	x3, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2620:	add	x0, x0, #0x0
    2624:	add	x1, x1, #0x0
    2628:	add	x3, x3, #0x0
    262c:	mov	w2, #0x17e                 	// #382
    2630:	bl	0 <__assert_fail>
    2634:	adrp	x0, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2638:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    263c:	add	x0, x0, #0x0
    2640:	add	x1, x1, #0x0
    2644:	mov	w2, #0x219                 	// #537
    2648:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000264c <LLVMAddCoroEarlyPass>:
    264c:	stp	x29, x30, [sp, #-32]!
    2650:	str	x19, [sp, #16]
    2654:	mov	x29, sp
    2658:	mov	x19, x0
    265c:	bl	0 <_ZN4llvm25createCoroEarlyLegacyPassEv>
    2660:	ldr	x8, [x19]
    2664:	mov	x1, x0
    2668:	mov	x0, x19
    266c:	ldr	x19, [sp, #16]
    2670:	ldr	x2, [x8, #16]
    2674:	ldp	x29, x30, [sp], #32
    2678:	br	x2

000000000000267c <LLVMAddCoroSplitPass>:
    267c:	stp	x29, x30, [sp, #-32]!
    2680:	str	x19, [sp, #16]
    2684:	mov	x29, sp
    2688:	mov	x19, x0
    268c:	bl	0 <_ZN4llvm25createCoroSplitLegacyPassEv>
    2690:	ldr	x8, [x19]
    2694:	mov	x1, x0
    2698:	mov	x0, x19
    269c:	ldr	x19, [sp, #16]
    26a0:	ldr	x2, [x8, #16]
    26a4:	ldp	x29, x30, [sp], #32
    26a8:	br	x2

00000000000026ac <LLVMAddCoroElidePass>:
    26ac:	stp	x29, x30, [sp, #-32]!
    26b0:	str	x19, [sp, #16]
    26b4:	mov	x29, sp
    26b8:	mov	x19, x0
    26bc:	bl	0 <_ZN4llvm25createCoroElideLegacyPassEv>
    26c0:	ldr	x8, [x19]
    26c4:	mov	x1, x0
    26c8:	mov	x0, x19
    26cc:	ldr	x19, [sp, #16]
    26d0:	ldr	x2, [x8, #16]
    26d4:	ldp	x29, x30, [sp], #32
    26d8:	br	x2

00000000000026dc <LLVMAddCoroCleanupPass>:
    26dc:	stp	x29, x30, [sp, #-32]!
    26e0:	str	x19, [sp, #16]
    26e4:	mov	x29, sp
    26e8:	mov	x19, x0
    26ec:	bl	0 <_ZN4llvm27createCoroCleanupLegacyPassEv>
    26f0:	ldr	x8, [x19]
    26f4:	mov	x1, x0
    26f8:	mov	x0, x19
    26fc:	ldr	x19, [sp, #16]
    2700:	ldr	x2, [x8, #16]
    2704:	ldp	x29, x30, [sp], #32
    2708:	br	x2

000000000000270c <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE>:
    270c:	stp	x29, x30, [sp, #-32]!
    2710:	stp	x20, x19, [sp, #16]
    2714:	mov	x29, sp
    2718:	mov	x20, x2
    271c:	mov	x19, x1
    2720:	bl	0 <_ZNK4llvm5Value4dumpEv>
    2724:	cbz	x20, 27ac <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0xa0>
    2728:	bl	0 <_ZN4llvm4errsEv>
    272c:	ldp	x9, x8, [x0, #16]
    2730:	sub	x9, x9, x8
    2734:	cmp	x9, #0x8
    2738:	b.hi	2750 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0x44>  // b.pmore
    273c:	adrp	x1, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2740:	add	x1, x1, #0x0
    2744:	mov	w2, #0x9                   	// #9
    2748:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    274c:	b	2774 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0x68>
    2750:	adrp	x9, 0 <_ZN4llvm20initializeCoroutinesERNS_12PassRegistryE>
    2754:	add	x9, x9, #0x0
    2758:	ldr	x9, [x9]
    275c:	mov	w10, #0x20                  	// #32
    2760:	strb	w10, [x8, #8]
    2764:	str	x9, [x8]
    2768:	ldr	x8, [x0, #24]
    276c:	add	x8, x8, #0x9
    2770:	str	x8, [x0, #24]
    2774:	bl	0 <_ZN4llvm4errsEv>
    2778:	mov	x1, x0
    277c:	mov	w2, #0x1                   	// #1
    2780:	mov	x0, x20
    2784:	mov	x3, xzr
    2788:	bl	0 <_ZNK4llvm5Value14printAsOperandERNS_11raw_ostreamEbPKNS_6ModuleE>
    278c:	bl	0 <_ZN4llvm4errsEv>
    2790:	ldp	x9, x8, [x0, #16]
    2794:	cmp	x8, x9
    2798:	b.cs	27b8 <_ZL4failPKN4llvm11InstructionEPKcPNS_5ValueE+0xac>  // b.hs, b.nlast
    279c:	add	x9, x8, #0x1
    27a0:	mov	w10, #0xa                   	// #10
    27a4:	str	x9, [x0, #24]
    27a8:	strb	w10, [x8]
    27ac:	mov	w1, #0x1                   	// #1
    27b0:	mov	x0, x19
    27b4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    27b8:	mov	w1, #0xa                   	// #10
    27bc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    27c0:	mov	w1, #0x1                   	// #1
    27c4:	mov	x0, x19
    27c8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0]
  1c:	cbz	x8, d0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0xd0>
  20:	ldrb	w9, [x8, #8]
  24:	cmp	w9, #0xf
  28:	b.ne	f0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0xf0>  // b.any
  2c:	ldr	x24, [x8, #24]
  30:	cbz	x24, 110 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0x110>
  34:	ldrb	w8, [x24, #8]
  38:	cmp	w8, #0xc
  3c:	b.ne	130 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE+0x130>  // b.any
  40:	mov	x20, x2
  44:	add	w25, w20, #0x1
  48:	mov	x21, x0
  4c:	mov	x22, x1
  50:	mov	w0, #0x48                  	// #72
  54:	mov	w1, w25
  58:	mov	x23, x4
  5c:	mov	x19, x3
  60:	bl	0 <_ZN4llvm4UsernwEmj>
  64:	ldr	x8, [x24, #16]
  68:	mov	w9, #0x18                  	// #24
  6c:	mov	w2, #0x38                  	// #56
  70:	mov	w4, w25
  74:	ldr	x1, [x8]
  78:	mvn	x8, x20
  7c:	madd	x3, x8, x9, x0
  80:	mov	x5, x23
  84:	mov	x26, x0
  88:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  8c:	mov	x0, x26
  90:	mov	x1, x24
  94:	mov	x2, x21
  98:	mov	x3, x22
  9c:	mov	x4, x20
  a0:	mov	x5, xzr
  a4:	mov	x6, xzr
  a8:	mov	x7, x19
  ac:	str	xzr, [x26, #56]
  b0:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
  b4:	mov	x0, x26
  b8:	ldp	x20, x19, [sp, #64]
  bc:	ldp	x22, x21, [sp, #48]
  c0:	ldp	x24, x23, [sp, #32]
  c4:	ldp	x26, x25, [sp, #16]
  c8:	ldp	x29, x30, [sp], #80
  cc:	ret
  d0:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  d4:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  d8:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x69                  	// #105
  ec:	bl	0 <__assert_fail>
  f0:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  f8:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x108                 	// #264
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 118:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x69                  	// #105
 12c:	bl	0 <__assert_fail>
 130:	adrp	x0, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x1, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 138:	adrp	x3, 0 <_ZN4llvm8CallInst6CreateEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineEPNS_11InstructionE>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x108                 	// #264
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x3                   	// #3
  10:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  14:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  18:	cbz	x0, 104 <_ZNK4llvm10CoroIdInst7getInfoEv+0x104>
  1c:	ldrb	w8, [x0, #16]
  20:	mov	x19, x0
  24:	cmp	w8, #0x11
  28:	b.cs	124 <_ZNK4llvm10CoroIdInst7getInfoEv+0x124>  // b.hs, b.nlast
  2c:	cmp	w8, #0x3
  30:	b.ne	a8 <_ZNK4llvm10CoroIdInst7getInfoEv+0xa8>  // b.any
  34:	ldrb	w8, [x19, #80]
  38:	tbz	w8, #0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  44:	tbnz	w0, #0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  48:	ldr	w8, [x19, #32]
  4c:	and	w8, w8, #0xf
  50:	cmp	w8, #0xa
  54:	b.hi	144 <_ZNK4llvm10CoroIdInst7getInfoEv+0x144>  // b.pmore
  58:	mov	w9, #0x1                   	// #1
  5c:	lsl	w8, w9, w8
  60:	mov	w9, #0x1eb                 	// #491
  64:	tst	w8, w9
  68:	b.eq	e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>  // b.none
  6c:	ldrb	w8, [x19, #80]
  70:	tbnz	w8, #1, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  74:	mov	x0, x19
  78:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  7c:	tbnz	w0, #0, 15c <_ZNK4llvm10CoroIdInst7getInfoEv+0x15c>
  80:	ldur	x1, [x19, #-24]
  84:	cbz	x1, 17c <_ZNK4llvm10CoroIdInst7getInfoEv+0x17c>
  88:	ldrb	w8, [x1, #16]
  8c:	cmp	w8, #0x7
  90:	csel	x0, x1, xzr, eq  // eq = none
  94:	cbz	x0, bc <_ZNK4llvm10CoroIdInst7getInfoEv+0xbc>
  98:	mov	x1, xzr
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret
  a8:	mov	x0, xzr
  ac:	mov	x1, xzr
  b0:	ldr	x19, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret
  bc:	cmp	w8, #0x6
  c0:	b.eq	9c <_ZNK4llvm10CoroIdInst7getInfoEv+0x9c>  // b.none
  c4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0xa8                  	// #168
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 10c:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 128:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 12c:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x108                 	// #264
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 148:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x16d                 	// #365
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 160:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 164:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x8d                  	// #141
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 180:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 184:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x69                  	// #105
 198:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape20getRetconResultTypesEv:

0000000000000000 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	74 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x74>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  20:	ldr	x8, [x0, #24]
  24:	cbz	x8, 94 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x94>
  28:	ldrb	w9, [x8, #8]
  2c:	cmp	w9, #0xc
  30:	b.ne	b4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xb4>  // b.any
  34:	ldr	x8, [x8, #16]
  38:	ldr	x8, [x8]
  3c:	cbz	x8, d4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xd4>
  40:	ldrb	w9, [x8, #8]
  44:	cmp	w9, #0xd
  48:	b.ne	64 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x64>  // b.any
  4c:	ldr	w9, [x8, #12]
  50:	ldr	x8, [x8, #16]
  54:	sub	x1, x9, #0x1
  58:	add	x0, x8, #0x8
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	mov	x1, xzr
  68:	mov	x0, xzr
  6c:	ldp	x29, x30, [sp], #16
  70:	ret
  74:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  78:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  7c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xae                  	// #174
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  98:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  9c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x69                  	// #105
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  bc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x108                 	// #264
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  dc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x69                  	// #105
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8Function15getFunctionTypeEv:

0000000000000000 <_ZNK4llvm8Function15getFunctionTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #24]
   c:	cbz	x0, 24 <_ZNK4llvm8Function15getFunctionTypeEv+0x24>
  10:	ldrb	w8, [x0, #8]
  14:	cmp	w8, #0xc
  18:	b.ne	44 <_ZNK4llvm8Function15getFunctionTypeEv+0x44>  // b.any
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  28:	adrp	x1, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  2c:	adrp	x3, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x69                  	// #105
  40:	bl	0 <__assert_fail>
  44:	adrp	x0, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  48:	adrp	x1, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  4c:	adrp	x3, 0 <_ZNK4llvm8Function15getFunctionTypeEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x108                 	// #264
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_:

0000000000000000 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x2
  18:	mov	x22, x1
  1c:	mov	x20, x0
  20:	stp	x2, x1, [sp]
  24:	cbz	x1, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  28:	ldur	x8, [x22, #-24]
  2c:	cbz	x8, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  30:	ldrb	w9, [x8, #16]
  34:	cbnz	w9, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  38:	ldrb	w9, [x8, #33]
  3c:	tbz	w9, #5, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  40:	ldr	w0, [x8, #36]
  44:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
  48:	tbnz	w0, #0, e0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xe0>
  4c:	ldp	x21, x8, [x20, #16]
  50:	cmp	x21, x8
  54:	b.eq	a8 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xa8>  // b.none
  58:	add	x8, x22, #0x10
  5c:	mov	w9, #0x6                   	// #6
  60:	cmp	x8, #0x10
  64:	stp	x9, xzr, [x21]
  68:	str	x22, [x21, #16]
  6c:	b.hi	8c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x8c>  // b.pmore
  70:	mov	w9, #0x1                   	// #1
  74:	lsl	x8, x9, x8
  78:	mov	w9, #0x101                 	// #257
  7c:	movk	w9, #0x1, lsl #16
  80:	tst	x8, x9
  84:	mov	x8, x21
  88:	b.ne	98 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x98>  // b.any
  8c:	mov	x0, x21
  90:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  94:	ldr	x8, [x20, #16]
  98:	add	x8, x8, #0x20
  9c:	str	x19, [x21, #24]
  a0:	str	x8, [x20, #16]
  a4:	b	c0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xc0>
  a8:	add	x0, x20, #0x8
  ac:	add	x2, sp, #0x8
  b0:	mov	x3, sp
  b4:	mov	x1, x21
  b8:	bl	0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  bc:	ldr	x19, [sp]
  c0:	ldr	w8, [x19, #32]
  c4:	add	w8, w8, #0x1
  c8:	str	w8, [x19, #32]
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x29, x30, [sp, #16]
  d8:	add	sp, sp, #0x40
  dc:	ret
  e0:	adrp	x0, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e4:	adrp	x1, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e8:	adrp	x3, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xeb                  	// #235
  fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	str	x10, [x0, #16]
  7c:	ldrb	w11, [x9]
  80:	tbz	w11, #2, 38 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x38>
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x26, x25, [x0]
  24:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  28:	sub	x8, x25, x26
  2c:	cmp	x8, x9
  30:	b.eq	254 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x254>  // b.none
  34:	asr	x9, x8, #5
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #58
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x26
  68:	mov	x23, x3
  6c:	mov	x24, x2
  70:	mov	x19, x0
  74:	mov	x22, x1
  78:	asr	x27, x8, #5
  7c:	str	x9, [sp, #8]
  80:	cbz	x9, 94 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>
  84:	lsl	x0, x9, #5
  88:	bl	0 <_Znwm>
  8c:	mov	x21, x0
  90:	b	98 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>
  94:	mov	x21, xzr
  98:	ldr	x9, [x24]
  9c:	add	x0, x21, x27, lsl #5
  a0:	mov	w8, #0x6                   	// #6
  a4:	stp	x8, xzr, [x0]
  a8:	add	x8, x9, #0x10
  ac:	cmp	x8, #0x10
  b0:	str	x9, [x0, #16]
  b4:	b.hi	d0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd0>  // b.pmore
  b8:	mov	w9, #0x1                   	// #1
  bc:	lsl	x8, x9, x8
  c0:	mov	w9, #0x101                 	// #257
  c4:	movk	w9, #0x1, lsl #16
  c8:	tst	x8, x9
  cc:	b.ne	d4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.any
  d0:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  d4:	ldr	x8, [x23]
  d8:	add	x9, x21, x27, lsl #5
  dc:	cmp	x26, x22
  e0:	mov	x23, x21
  e4:	str	x8, [x9, #24]
  e8:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
  ec:	mov	w28, #0x101                 	// #257
  f0:	mov	w24, #0x6                   	// #6
  f4:	mov	w27, #0x1                   	// #1
  f8:	movk	w28, #0x1, lsl #16
  fc:	mov	x23, x21
 100:	mov	x20, x26
 104:	b	130 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>
 108:	ldr	x8, [x20]
 10c:	mov	x0, x23
 110:	and	x1, x8, #0xfffffffffffffff8
 114:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 118:	ldr	x8, [x20, #24]
 11c:	add	x20, x20, #0x20
 120:	cmp	x22, x20
 124:	str	x8, [x23, #24]
 128:	add	x23, x23, #0x20
 12c:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
 130:	stp	x24, xzr, [x23]
 134:	ldr	x9, [x20, #16]
 138:	add	x8, x9, #0x10
 13c:	cmp	x8, #0x10
 140:	str	x9, [x23, #16]
 144:	b.hi	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>  // b.pmore
 148:	lsl	x8, x27, x8
 14c:	tst	x8, x28
 150:	b.ne	118 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>  // b.any
 154:	b	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>
 158:	cmp	x25, x22
 15c:	add	x23, x23, #0x20
 160:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 164:	mov	w28, #0x101                 	// #257
 168:	mov	w24, #0x6                   	// #6
 16c:	mov	w27, #0x1                   	// #1
 170:	movk	w28, #0x1, lsl #16
 174:	b	1a0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1a0>
 178:	ldr	x8, [x22]
 17c:	mov	x0, x23
 180:	and	x1, x8, #0xfffffffffffffff8
 184:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 188:	ldr	x8, [x22, #24]
 18c:	add	x22, x22, #0x20
 190:	cmp	x25, x22
 194:	str	x8, [x23, #24]
 198:	add	x23, x23, #0x20
 19c:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 1a0:	stp	x24, xzr, [x23]
 1a4:	ldr	x9, [x22, #16]
 1a8:	add	x8, x9, #0x10
 1ac:	cmp	x8, #0x10
 1b0:	str	x9, [x23, #16]
 1b4:	b.hi	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>  // b.pmore
 1b8:	lsl	x8, x27, x8
 1bc:	tst	x8, x28
 1c0:	b.ne	188 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x188>  // b.any
 1c4:	b	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>
 1c8:	cmp	x26, x25
 1cc:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1d0:	mov	w24, #0x101                 	// #257
 1d4:	mov	w20, #0x1                   	// #1
 1d8:	movk	w24, #0x1, lsl #16
 1dc:	mov	x22, x26
 1e0:	b	1f8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f8>
 1e4:	mov	x0, x22
 1e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1ec:	add	x22, x22, #0x20
 1f0:	cmp	x25, x22
 1f4:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1f8:	ldr	x8, [x22, #16]
 1fc:	add	x8, x8, #0x10
 200:	cmp	x8, #0x10
 204:	b.hi	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>  // b.pmore
 208:	lsl	x8, x20, x8
 20c:	tst	x8, x24
 210:	b.ne	1ec <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1ec>  // b.any
 214:	b	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>
 218:	cbz	x26, 224 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x224>
 21c:	mov	x0, x26
 220:	bl	0 <_ZdlPv>
 224:	stp	x21, x23, [x19]
 228:	ldr	x8, [sp, #8]
 22c:	add	x8, x21, x8, lsl #5
 230:	str	x8, [x19, #16]
 234:	ldp	x20, x19, [sp, #96]
 238:	ldp	x22, x21, [sp, #80]
 23c:	ldp	x24, x23, [sp, #64]
 240:	ldp	x26, x25, [sp, #48]
 244:	ldp	x28, x27, [sp, #32]
 248:	ldp	x29, x30, [sp, #16]
 24c:	add	sp, sp, #0x70
 250:	ret
 254:	adrp	x0, 0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 258:	add	x0, x0, #0x0
 25c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x23, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x25, x24, #3
  28:	mov	x20, x1
  2c:	sub	x8, x8, x23
  30:	mov	x19, x0
  34:	cmp	x25, x8, asr #3
  38:	b.ls	7c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.plast
  3c:	lsr	x8, x25, #60
  40:	cbnz	x8, 11c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x11c>
  44:	cbz	x24, 10c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>
  48:	mov	x0, x24
  4c:	bl	0 <_Znwm>
  50:	mov	x1, x20
  54:	mov	x2, x24
  58:	mov	x21, x0
  5c:	bl	0 <memcpy>
  60:	ldr	x0, [x19]
  64:	cbz	x0, 6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
  68:	bl	0 <_ZdlPv>
  6c:	add	x8, x21, x25, lsl #3
  70:	stp	x21, x8, [x19]
  74:	str	x8, [x19, #16]
  78:	b	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>
  7c:	ldr	x21, [x19, #8]
  80:	mov	x22, x2
  84:	sub	x2, x21, x23
  88:	asr	x8, x2, #3
  8c:	cmp	x8, x25
  90:	b.cs	cc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.hs, b.nlast
  94:	add	x24, x20, x8, lsl #3
  98:	cbz	x2, ac <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xac>
  9c:	mov	x0, x23
  a0:	mov	x1, x20
  a4:	bl	0 <memmove>
  a8:	ldr	x21, [x19, #8]
  ac:	subs	x2, x22, x24
  b0:	asr	x20, x2, #3
  b4:	b.eq	c4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xc4>  // b.none
  b8:	mov	x0, x21
  bc:	mov	x1, x24
  c0:	bl	0 <memmove>
  c4:	add	x8, x21, x20, lsl #3
  c8:	b	f0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf0>
  cc:	cbz	x24, e4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xe4>
  d0:	mov	x0, x23
  d4:	mov	x1, x20
  d8:	mov	x2, x24
  dc:	bl	0 <memmove>
  e0:	ldr	x21, [x19, #8]
  e4:	add	x8, x23, x25, lsl #3
  e8:	cmp	x21, x8
  ec:	b.eq	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.none
  f0:	str	x8, [x19, #8]
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	mov	x21, xzr
 110:	ldr	x0, [x19]
 114:	cbnz	x0, 68 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
 118:	b	6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
 11c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	sub	x8, x8, x20
  28:	lsr	x8, x8, #4
  2c:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
  30:	b	12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x20, x0
  44:	tbnz	w8, #31, 114 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x114>
  48:	mov	x8, xzr
  4c:	sub	x8, x8, x20
  50:	lsr	x8, x8, #4
  54:	cbz	w8, 12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  58:	ldr	w8, [x19, #20]
  5c:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  60:	mov	x20, xzr
  64:	mov	x8, xzr
  68:	sub	x8, x8, x20
  6c:	lsr	x8, x8, #4
  70:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
  74:	b	158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 140 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x140>
  8c:	mov	x8, xzr
  90:	sub	x8, x8, x20
  94:	lsr	x8, x8, #4
  98:	cbz	w8, 158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	ldr	w8, [x19, #20]
  a8:	ldr	w21, [x0, #8]
  ac:	tbnz	w8, #31, c8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xc8>
  b0:	mov	x20, xzr
  b4:	mov	x8, xzr
  b8:	sub	x8, x8, x20
  bc:	lsr	x8, x8, #4
  c0:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
  c4:	b	190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d0:	ldr	w8, [x19, #20]
  d4:	mov	x20, x0
  d8:	tbnz	w8, #31, 178 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x178>
  dc:	mov	x8, xzr
  e0:	sub	x8, x8, x20
  e4:	lsr	x8, x8, #4
  e8:	cbz	w8, 190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f4:	add	x8, x0, x1
  f8:	ldur	w8, [x8, #-4]
  fc:	subs	w0, w8, w21
 100:	b.cc	1b0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x1b0>  // b.lo, b.ul, b.last
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 11c:	add	x8, x0, x1
 120:	sub	x8, x8, x20
 124:	lsr	x8, x8, #4
 128:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
 12c:	mov	w0, wzr
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 148:	add	x8, x0, x1
 14c:	sub	x8, x8, x20
 150:	lsr	x8, x8, #4
 154:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
 158:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 15c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 160:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x6ed                 	// #1773
 174:	bl	0 <__assert_fail>
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 180:	add	x8, x0, x1
 184:	sub	x8, x8, x20
 188:	lsr	x8, x8, #4
 18c:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
 190:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 194:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 198:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x6f3                 	// #1779
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b4:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b8:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x710                 	// #1808
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKN4llvm18PassManagerBuilderERNS0_6legacy15PassManagerBaseEEPS7_E9_M_invokeERKSt9_Any_dataS3_S6_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKN4llvm18PassManagerBuilderERNS0_6legacy15PassManagerBaseEEPS7_E9_M_invokeERKSt9_Any_dataS3_S6_>:
   0:	ldr	x3, [x0]
   4:	mov	x0, x1
   8:	mov	x1, x2
   c:	br	x3

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x2
   4:	b.eq	1c <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x1c>  // b.none
   8:	cmp	w2, #0x1
   c:	b.ne	24 <_ZNSt14_Function_base13_Base_managerIPFvRKN4llvm18PassManagerBuilderERNS1_6legacy15PassManagerBaseEEE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0x24>  // b.any
  10:	str	x1, [x0]
  14:	mov	w0, wzr
  18:	ret
  1c:	ldr	x8, [x1]
  20:	str	x8, [x0]
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x5
  1c:	mov	x8, x4
  20:	ldp	x4, x5, [x0, #48]
  24:	mov	x21, x6
  28:	mov	x20, x0
  2c:	mov	w9, #0x101                 	// #257
  30:	add	x6, sp, #0x8
  34:	mov	x0, x1
  38:	mov	x1, x2
  3c:	mov	x2, x3
  40:	mov	x3, x8
  44:	mov	x7, xzr
  48:	stp	xzr, xzr, [sp, #8]
  4c:	strh	w9, [sp, #24]
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  54:	ldrb	w8, [x20, #44]
  58:	mov	x22, x0
  5c:	cbz	w8, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  60:	add	x0, x22, #0x38
  64:	mov	w1, #0xffffffff            	// #-1
  68:	mov	w2, #0x39                  	// #57
  6c:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  70:	tbnz	w0, #0, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  74:	mov	w1, #0x39                  	// #57
  78:	mov	x0, x22
  7c:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
  80:	tbz	w0, #0, a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xa4>
  84:	cbz	x22, 1c0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x1c0>
  88:	ldrb	w9, [x22, #16]
  8c:	subs	w8, w9, #0x18
  90:	b.cs	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xd8>  // b.hs, b.nlast
  94:	cmp	w9, #0x5
  98:	b.ne	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>  // b.any
  9c:	ldrh	w8, [x22, #18]
  a0:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xd8>
  a4:	ldr	x8, [x22, #56]
  a8:	mov	x0, x22
  ac:	str	x8, [sp, #8]
  b0:	bl	0 <_ZNK4llvm5Value10getContextEv>
  b4:	mov	x1, x0
  b8:	add	x0, sp, #0x8
  bc:	mov	w2, #0xffffffff            	// #-1
  c0:	mov	w3, #0x39                  	// #57
  c4:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
  c8:	str	x0, [x22, #56]
  cc:	ldrb	w9, [x22, #16]
  d0:	subs	w8, w9, #0x18
  d4:	b.cc	94 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x94>  // b.lo, b.ul, b.last
  d8:	cmp	w8, #0x39
  dc:	b.hi	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>  // b.pmore
  e0:	mov	x10, #0x5000                	// #20480
  e4:	mov	w9, #0x1                   	// #1
  e8:	movk	x10, #0x125, lsl #16
  ec:	lsl	x9, x9, x8
  f0:	movk	x10, #0x40, lsl #48
  f4:	tst	x9, x10
  f8:	b.eq	150 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x150>  // b.none
  fc:	ldr	w23, [x20, #40]
 100:	cbnz	x21, 10c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x10c>
 104:	ldr	x21, [x20, #32]
 108:	cbz	x21, 11c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x11c>
 10c:	mov	w1, #0x3                   	// #3
 110:	mov	x0, x22
 114:	mov	x2, x21
 118:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 11c:	mov	x0, x22
 120:	mov	x1, x23
 124:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 128:	mov	x0, x20
 12c:	mov	x1, x22
 130:	mov	x2, x19
 134:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 138:	ldp	x20, x19, [sp, #80]
 13c:	ldp	x22, x21, [sp, #64]
 140:	ldr	x23, [sp, #48]
 144:	ldp	x29, x30, [sp, #32]
 148:	add	sp, sp, #0x60
 14c:	ret
 150:	mov	w9, #0x1                   	// #1
 154:	lsl	x8, x9, x8
 158:	tst	x8, #0x380000000000000
 15c:	b.eq	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>  // b.none
 160:	ldr	x8, [x22]
 164:	cbz	x8, 17c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x17c>
 168:	ldrb	w9, [x8, #8]
 16c:	cmp	w9, #0xe
 170:	b.ne	19c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x19c>  // b.any
 174:	ldr	x8, [x8, #24]
 178:	cbnz	x8, 168 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x168>
 17c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 180:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 184:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x69                  	// #105
 198:	bl	0 <__assert_fail>
 19c:	cmp	w9, #0x10
 1a0:	b.ne	1b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x1b0>  // b.any
 1a4:	ldr	x8, [x8, #16]
 1a8:	ldr	x8, [x8]
 1ac:	ldrb	w9, [x8, #8]
 1b0:	sub	w8, w9, #0x1
 1b4:	cmp	w8, #0x5
 1b8:	b.ls	fc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xfc>  // b.plast
 1bc:	b	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>
 1c0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1c4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1c8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1cc:	add	x0, x0, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x3, x3, #0x0
 1d8:	mov	w2, #0x69                  	// #105
 1dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	mov	w8, #0x38                  	// #56
  24:	mov	x26, x7
  28:	mov	x20, x5
  2c:	mov	x21, x4
  30:	mov	x22, x3
  34:	mov	x23, x2
  38:	mov	x24, x1
  3c:	mov	x25, x0
  40:	madd	x28, x5, x8, x4
  44:	str	x6, [sp, #8]
  48:	cbz	x5, 6c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x6c>
  4c:	mov	w8, #0x38                  	// #56
  50:	mul	x8, x20, x8
  54:	sub	x8, x8, #0x38
  58:	cmp	x8, #0x70
  5c:	b.cs	74 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x74>  // b.hs, b.nlast
  60:	mov	w9, wzr
  64:	mov	x8, x21
  68:	b	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>
  6c:	mov	w9, wzr
  70:	b	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>
  74:	mov	x11, #0x2493                	// #9363
  78:	movk	x11, #0x9249, lsl #16
  7c:	movk	x11, #0x4924, lsl #32
  80:	lsr	x8, x8, #3
  84:	movk	x11, #0x2492, lsl #48
  88:	umulh	x8, x8, x11
  8c:	add	x11, x8, #0x1
  90:	mov	w13, #0x38                  	// #56
  94:	and	x12, x11, #0xffffffffffffffe
  98:	mov	w9, wzr
  9c:	mov	w10, wzr
  a0:	madd	x8, x12, x13, x21
  a4:	add	x13, x21, #0x60
  a8:	mov	x14, x12
  ac:	ldp	x18, x15, [x13, #-8]
  b0:	ldp	x17, x16, [x13, #-64]
  b4:	subs	x14, x14, #0x2
  b8:	add	x13, x13, #0x70
  bc:	sub	x15, x15, x18
  c0:	sub	x16, x16, x17
  c4:	lsr	x16, x16, #3
  c8:	lsr	x15, x15, #3
  cc:	add	w9, w9, w16
  d0:	add	w10, w10, w15
  d4:	b.ne	ac <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xac>  // b.any
  d8:	cmp	x11, x12
  dc:	add	w9, w10, w9
  e0:	b.eq	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>  // b.none
  e4:	ldp	x11, x10, [x8, #32]
  e8:	add	x8, x8, #0x38
  ec:	cmp	x28, x8
  f0:	sub	x10, x10, x11
  f4:	lsr	x10, x10, #3
  f8:	add	w9, w9, w10
  fc:	b.ne	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>  // b.any
 100:	add	w19, w22, #0x1
 104:	add	w1, w9, w19
 108:	lsl	w2, w20, #4
 10c:	mov	w0, #0x48                  	// #72
 110:	bl	0 <_ZN4llvm4UsernwEmjj>
 114:	ldr	x8, [x25, #16]
 118:	mov	x27, x0
 11c:	ldr	x1, [x8]
 120:	cbz	x20, 144 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x144>
 124:	mov	w8, #0x38                  	// #56
 128:	mul	x8, x20, x8
 12c:	sub	x8, x8, #0x38
 130:	cmp	x8, #0x70
 134:	b.cs	150 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x150>  // b.hs, b.nlast
 138:	mov	w9, wzr
 13c:	mov	x8, x21
 140:	b	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>
 144:	mov	w10, wzr
 148:	mov	x8, x22
 14c:	b	28c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x28c>
 150:	mov	x11, #0x2493                	// #9363
 154:	movk	x11, #0x9249, lsl #16
 158:	movk	x11, #0x4924, lsl #32
 15c:	lsr	x8, x8, #3
 160:	movk	x11, #0x2492, lsl #48
 164:	umulh	x8, x8, x11
 168:	add	x11, x8, #0x1
 16c:	mov	w13, #0x38                  	// #56
 170:	and	x12, x11, #0xffffffffffffffe
 174:	mov	w9, wzr
 178:	mov	w10, wzr
 17c:	madd	x8, x12, x13, x21
 180:	add	x13, x21, #0x60
 184:	mov	x14, x12
 188:	ldp	x18, x15, [x13, #-8]
 18c:	ldp	x17, x16, [x13, #-64]
 190:	subs	x14, x14, #0x2
 194:	add	x13, x13, #0x70
 198:	sub	x15, x15, x18
 19c:	sub	x16, x16, x17
 1a0:	lsr	x16, x16, #3
 1a4:	lsr	x15, x15, #3
 1a8:	add	w9, w9, w16
 1ac:	add	w10, w10, w15
 1b0:	b.ne	188 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x188>  // b.any
 1b4:	cmp	x11, x12
 1b8:	add	w9, w10, w9
 1bc:	b.eq	1dc <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1dc>  // b.none
 1c0:	ldp	x11, x10, [x8, #32]
 1c4:	add	x8, x8, #0x38
 1c8:	cmp	x28, x8
 1cc:	sub	x10, x10, x11
 1d0:	lsr	x10, x10, #3
 1d4:	add	w9, w9, w10
 1d8:	b.ne	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>  // b.any
 1dc:	mov	w8, #0x38                  	// #56
 1e0:	mul	x8, x20, x8
 1e4:	sub	x12, x8, #0x38
 1e8:	cmp	x12, #0x70
 1ec:	mov	w8, w9
 1f0:	mov	w10, wzr
 1f4:	b.cs	200 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x200>  // b.hs, b.nlast
 1f8:	mov	x9, x21
 1fc:	b	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>
 200:	lsr	x9, x12, #3
 204:	mov	x12, #0x2493                	// #9363
 208:	movk	x12, #0x9249, lsl #16
 20c:	movk	x12, #0x4924, lsl #32
 210:	movk	x12, #0x2492, lsl #48
 214:	umulh	x9, x9, x12
 218:	add	x12, x9, #0x1
 21c:	mov	w14, #0x38                  	// #56
 220:	and	x13, x12, #0xffffffffffffffe
 224:	mov	w11, wzr
 228:	madd	x9, x13, x14, x21
 22c:	add	x14, x21, #0x60
 230:	mov	x15, x13
 234:	ldp	x0, x16, [x14, #-8]
 238:	ldp	x18, x17, [x14, #-64]
 23c:	subs	x15, x15, #0x2
 240:	add	x14, x14, #0x70
 244:	sub	x16, x16, x0
 248:	sub	x17, x17, x18
 24c:	lsr	x17, x17, #3
 250:	lsr	x16, x16, #3
 254:	add	w10, w10, w17
 258:	add	w11, w11, w16
 25c:	b.ne	234 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x234>  // b.any
 260:	cmp	x12, x13
 264:	add	w10, w11, w10
 268:	b.eq	288 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x288>  // b.none
 26c:	ldp	x12, x11, [x9, #32]
 270:	add	x9, x9, #0x38
 274:	cmp	x28, x9
 278:	sub	x11, x11, x12
 27c:	lsr	x11, x11, #3
 280:	add	w10, w10, w11
 284:	b.ne	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>  // b.any
 288:	add	x8, x22, x8
 28c:	mvn	x8, x8
 290:	mov	w9, #0x18                  	// #24
 294:	madd	x3, x8, x9, x27
 298:	add	w4, w10, w19
 29c:	mov	w2, #0x38                  	// #56
 2a0:	mov	x0, x27
 2a4:	mov	x5, x26
 2a8:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 2ac:	ldr	x7, [sp, #8]
 2b0:	mov	x0, x27
 2b4:	mov	x1, x25
 2b8:	mov	x2, x24
 2bc:	mov	x3, x23
 2c0:	mov	x4, x22
 2c4:	mov	x5, x21
 2c8:	mov	x6, x20
 2cc:	str	xzr, [x27, #56]
 2d0:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 2d4:	mov	x0, x27
 2d8:	ldp	x20, x19, [sp, #96]
 2dc:	ldp	x22, x21, [sp, #80]
 2e0:	ldp	x24, x23, [sp, #64]
 2e4:	ldp	x26, x25, [sp, #48]
 2e8:	ldp	x28, x27, [sp, #32]
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	add	sp, sp, #0x70
 2f4:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

CoroCleanup.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  10:	add	x8, x8, #0x0
  14:	add	x9, sp, #0x8
  18:	stp	x0, x8, [sp, #8]
  1c:	str	x9, [sp, #24]
  20:	adrp	x0, 0 <_ZSt15__once_callable>
  24:	ldr	x1, [x0]
  28:	add	x0, x0, #0x0
  2c:	blr	x1
  30:	mrs	x8, tpidr_el0
  34:	add	x9, sp, #0x10
  38:	str	x9, [x8, x0]
  3c:	adrp	x0, 0 <_ZSt11__once_call>
  40:	ldr	x1, [x0]
  44:	add	x0, x0, #0x0
  48:	blr	x1
  4c:	adrp	x10, 0 <__pthread_key_create>
  50:	ldr	x10, [x10]
  54:	adrp	x9, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  58:	add	x9, x9, #0x0
  5c:	str	x9, [x8, x0]
  60:	cbz	x10, 88 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE+0x88>
  64:	adrp	x1, 0 <__once_proxy>
  68:	ldr	x1, [x1]
  6c:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  70:	add	x0, x0, #0x0
  74:	bl	0 <pthread_once>
  78:	cbnz	w0, 8c <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE+0x8c>
  7c:	ldp	x29, x30, [sp, #32]
  80:	add	sp, sp, #0x30
  84:	ret
  88:	mov	w0, #0xffffffff            	// #-1
  8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL35initializeCoroCleanupLegacyPassOnceRN4llvm12PassRegistryE>:
  90:	stp	x29, x30, [sp, #-32]!
  94:	stp	x20, x19, [sp, #16]
  98:	mov	x29, sp
  9c:	mov	x19, x0
  a0:	mov	w0, #0x50                  	// #80
  a4:	bl	0 <_Znwm>
  a8:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  ac:	add	x8, x8, #0x0
  b0:	mov	w9, #0x26                  	// #38
  b4:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  b8:	add	x10, x10, #0x0
  bc:	stp	x8, x9, [x0]
  c0:	mov	w8, #0xc                   	// #12
  c4:	stp	x10, x8, [x0, #16]
  c8:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  cc:	add	x8, x8, #0x0
  d0:	str	x8, [x0, #32]
  d4:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
  d8:	mov	x20, x0
  dc:	add	x8, x8, #0x0
  e0:	strh	wzr, [x0, #40]
  e4:	strb	wzr, [x0, #42]
  e8:	stp	xzr, xzr, [x0, #48]
  ec:	stp	xzr, x8, [x0, #64]
  f0:	mov	w2, #0x1                   	// #1
  f4:	mov	x0, x19
  f8:	mov	x1, x20
  fc:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
 100:	mov	x0, x20
 104:	ldp	x20, x19, [sp, #16]
 108:	ldp	x29, x30, [sp], #32
 10c:	ret

0000000000000110 <_ZN4llvm27createCoroCleanupLegacyPassEv>:
 110:	sub	sp, sp, #0x30
 114:	stp	x29, x30, [sp, #16]
 118:	str	x19, [sp, #32]
 11c:	add	x29, sp, #0x10
 120:	mov	w0, #0x28                  	// #40
 124:	bl	0 <_Znwm>
 128:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 12c:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 130:	add	x8, x8, #0x0
 134:	mov	w9, #0x2                   	// #2
 138:	add	x10, x10, #0x0
 13c:	mov	x19, x0
 140:	stp	xzr, x8, [x0, #8]
 144:	str	w9, [x0, #24]
 148:	str	x10, [x0]
 14c:	str	xzr, [x0, #32]
 150:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 154:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 158:	add	x8, x8, #0x0
 15c:	add	x9, x29, #0x18
 160:	str	x0, [x29, #24]
 164:	stp	x8, x9, [sp]
 168:	adrp	x0, 0 <_ZSt15__once_callable>
 16c:	ldr	x1, [x0]
 170:	add	x0, x0, #0x0
 174:	blr	x1
 178:	mrs	x8, tpidr_el0
 17c:	mov	x9, sp
 180:	str	x9, [x8, x0]
 184:	adrp	x0, 0 <_ZSt11__once_call>
 188:	ldr	x1, [x0]
 18c:	add	x0, x0, #0x0
 190:	blr	x1
 194:	adrp	x10, 0 <__pthread_key_create>
 198:	ldr	x10, [x10]
 19c:	adrp	x9, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1a0:	add	x9, x9, #0x0
 1a4:	str	x9, [x8, x0]
 1a8:	cbz	x10, 1d8 <_ZN4llvm27createCoroCleanupLegacyPassEv+0xc8>
 1ac:	adrp	x1, 0 <__once_proxy>
 1b0:	ldr	x1, [x1]
 1b4:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1b8:	add	x0, x0, #0x0
 1bc:	bl	0 <pthread_once>
 1c0:	cbnz	w0, 1dc <_ZN4llvm27createCoroCleanupLegacyPassEv+0xcc>
 1c4:	mov	x0, x19
 1c8:	ldr	x19, [sp, #32]
 1cc:	ldp	x29, x30, [sp, #16]
 1d0:	add	sp, sp, #0x30
 1d4:	ret
 1d8:	mov	w0, #0xffffffff            	// #-1
 1dc:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_117CoroCleanupLegacyEEEPNS_4PassEv>:
 1e0:	sub	sp, sp, #0x30
 1e4:	stp	x29, x30, [sp, #16]
 1e8:	str	x19, [sp, #32]
 1ec:	add	x29, sp, #0x10
 1f0:	mov	w0, #0x28                  	// #40
 1f4:	bl	0 <_Znwm>
 1f8:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 1fc:	adrp	x10, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 200:	add	x8, x8, #0x0
 204:	mov	w9, #0x2                   	// #2
 208:	add	x10, x10, #0x0
 20c:	mov	x19, x0
 210:	stp	xzr, x8, [x0, #8]
 214:	str	w9, [x0, #24]
 218:	str	x10, [x0]
 21c:	str	xzr, [x0, #32]
 220:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 224:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 228:	add	x8, x8, #0x0
 22c:	add	x9, x29, #0x18
 230:	str	x0, [x29, #24]
 234:	stp	x8, x9, [sp]
 238:	adrp	x0, 0 <_ZSt15__once_callable>
 23c:	ldr	x1, [x0]
 240:	add	x0, x0, #0x0
 244:	blr	x1
 248:	mrs	x8, tpidr_el0
 24c:	mov	x9, sp
 250:	str	x9, [x8, x0]
 254:	adrp	x0, 0 <_ZSt11__once_call>
 258:	ldr	x1, [x0]
 25c:	add	x0, x0, #0x0
 260:	blr	x1
 264:	adrp	x10, 0 <__pthread_key_create>
 268:	ldr	x10, [x10]
 26c:	adrp	x9, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 270:	add	x9, x9, #0x0
 274:	str	x9, [x8, x0]
 278:	cbz	x10, 2a8 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_117CoroCleanupLegacyEEEPNS_4PassEv+0xc8>
 27c:	adrp	x1, 0 <__once_proxy>
 280:	ldr	x1, [x1]
 284:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 288:	add	x0, x0, #0x0
 28c:	bl	0 <pthread_once>
 290:	cbnz	w0, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_117CoroCleanupLegacyEEEPNS_4PassEv+0xcc>
 294:	mov	x0, x19
 298:	ldr	x19, [sp, #32]
 29c:	ldp	x29, x30, [sp, #16]
 2a0:	add	sp, sp, #0x30
 2a4:	ret
 2a8:	mov	w0, #0xffffffff            	// #-1
 2ac:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b0 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev>:
 2b0:	stp	x29, x30, [sp, #-32]!
 2b4:	stp	x20, x19, [sp, #16]
 2b8:	mov	x29, sp
 2bc:	ldr	x20, [x0, #32]
 2c0:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 2c4:	mov	x19, x0
 2c8:	add	x8, x8, #0x0
 2cc:	str	x8, [x0]
 2d0:	cbz	x20, 2ec <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev+0x3c>
 2d4:	mov	x0, x20
 2d8:	ldr	x1, [x0, #40]!
 2dc:	cbz	x1, 2e4 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD2Ev+0x34>
 2e0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 2e4:	mov	x0, x20
 2e8:	bl	0 <_ZdlPv>
 2ec:	str	xzr, [x19, #32]
 2f0:	mov	x0, x19
 2f4:	ldp	x20, x19, [sp, #16]
 2f8:	ldp	x29, x30, [sp], #32
 2fc:	b	0 <_ZN4llvm4PassD2Ev>

0000000000000300 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev>:
 300:	stp	x29, x30, [sp, #-32]!
 304:	stp	x20, x19, [sp, #16]
 308:	mov	x29, sp
 30c:	ldr	x20, [x0, #32]
 310:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 314:	mov	x19, x0
 318:	add	x8, x8, #0x0
 31c:	str	x8, [x0]
 320:	cbz	x20, 33c <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev+0x3c>
 324:	mov	x0, x20
 328:	ldr	x1, [x0, #40]!
 32c:	cbz	x1, 334 <_ZN12_GLOBAL__N_117CoroCleanupLegacyD0Ev+0x34>
 330:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 334:	mov	x0, x20
 338:	bl	0 <_ZdlPv>
 33c:	mov	x0, x19
 340:	str	xzr, [x19, #32]
 344:	bl	0 <_ZN4llvm4PassD2Ev>
 348:	mov	x0, x19
 34c:	ldp	x20, x19, [sp, #16]
 350:	ldp	x29, x30, [sp], #32
 354:	b	0 <_ZdlPv>

0000000000000358 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy11getPassNameEv>:
 358:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 35c:	add	x0, x0, #0x0
 360:	mov	w1, #0x11                  	// #17
 364:	ret

0000000000000368 <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE>:
 368:	sub	sp, sp, #0xa0
 36c:	stp	x29, x30, [sp, #112]
 370:	str	x21, [sp, #128]
 374:	stp	x20, x19, [sp, #144]
 378:	add	x29, sp, #0x70
 37c:	adrp	x8, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 380:	add	x8, x8, #0x0
 384:	ldp	q0, q1, [x8, #48]
 388:	ldp	q2, q3, [x8, #80]
 38c:	mov	x20, x1
 390:	mov	x19, x0
 394:	stp	q0, q1, [sp, #48]
 398:	ldr	q0, [x8]
 39c:	ldp	q1, q4, [x8, #16]
 3a0:	mov	x1, sp
 3a4:	mov	w2, #0x7                   	// #7
 3a8:	mov	x0, x20
 3ac:	stp	q2, q3, [sp, #80]
 3b0:	stp	q0, q1, [sp]
 3b4:	str	q4, [sp, #32]
 3b8:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
 3bc:	tbz	w0, #0, 41c <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0xb4>
 3c0:	mov	w0, #0x70                  	// #112
 3c4:	bl	0 <_Znwm>
 3c8:	mov	x1, x20
 3cc:	mov	x21, x0
 3d0:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
 3d4:	ldr	x8, [x21, #8]
 3d8:	mov	w9, #0x200                 	// #512
 3dc:	str	wzr, [x21, #80]
 3e0:	strb	wzr, [x21, #86]
 3e4:	stp	x8, xzr, [x21, #64]
 3e8:	stp	xzr, xzr, [x21, #40]
 3ec:	strh	w9, [x21, #84]
 3f0:	str	xzr, [x21, #56]
 3f4:	stp	xzr, xzr, [x21, #88]
 3f8:	ldr	x20, [x19, #32]
 3fc:	str	x21, [x19, #32]
 400:	cbz	x20, 41c <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0xb4>
 404:	mov	x0, x20
 408:	ldr	x1, [x0, #40]!
 40c:	cbz	x1, 414 <_ZN12_GLOBAL__N_117CoroCleanupLegacy16doInitializationERN4llvm6ModuleE+0xac>
 410:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
 414:	mov	x0, x20
 418:	bl	0 <_ZdlPv>
 41c:	ldp	x20, x19, [sp, #144]
 420:	ldr	x21, [sp, #128]
 424:	ldp	x29, x30, [sp, #112]
 428:	mov	w0, wzr
 42c:	add	sp, sp, #0xa0
 430:	ret

0000000000000434 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
 434:	ldr	x8, [x0, #32]
 438:	cbz	x8, 440 <_ZNK12_GLOBAL__N_117CoroCleanupLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE+0xc>
 43c:	ret
 440:	mov	w8, #0x1                   	// #1
 444:	strb	w8, [x1, #160]
 448:	ret

000000000000044c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE>:
 44c:	sub	sp, sp, #0xc0
 450:	stp	x29, x30, [sp, #96]
 454:	stp	x28, x27, [sp, #112]
 458:	stp	x26, x25, [sp, #128]
 45c:	stp	x24, x23, [sp, #144]
 460:	stp	x22, x21, [sp, #160]
 464:	stp	x20, x19, [sp, #176]
 468:	add	x29, sp, #0x60
 46c:	ldr	x26, [x0, #32]
 470:	cbz	x26, 7f0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>
 474:	add	x0, sp, #0x10
 478:	mov	x19, x1
 47c:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 480:	adrp	x28, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 484:	mov	w8, wzr
 488:	add	x27, x19, #0x48
 48c:	add	x20, x26, #0x28
 490:	add	x28, x28, #0x0
 494:	mov	w25, #0x101                 	// #257
 498:	ldr	x9, [sp, #16]
 49c:	ldr	x10, [sp, #24]
 4a0:	cmp	x10, x27
 4a4:	b.eq	4c0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x74>  // b.none
 4a8:	ldr	x11, [sp, #32]
 4ac:	ldr	x12, [x11, #8]
 4b0:	str	x12, [sp, #32]
 4b4:	ldrb	w13, [x10]
 4b8:	tbz	w13, #2, 4e0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x94>
 4bc:	b	814 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3c8>
 4c0:	cmp	x27, x9
 4c4:	b.eq	770 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x324>  // b.none
 4c8:	ldr	x11, [sp, #32]
 4cc:	cbz	x11, 770 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x324>
 4d0:	ldr	x12, [x11, #8]
 4d4:	str	x12, [sp, #32]
 4d8:	ldrb	w13, [x10]
 4dc:	tbnz	w13, #2, 814 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3c8>
 4e0:	sub	x13, x10, #0x18
 4e4:	cmp	x10, #0x0
 4e8:	csel	x13, xzr, x13, eq  // eq = none
 4ec:	add	x13, x13, #0x28
 4f0:	cmp	x13, x12
 4f4:	b.ne	530 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0xe4>  // b.any
 4f8:	ldr	x10, [x10, #8]
 4fc:	cmp	x9, x10
 500:	str	x10, [sp, #24]
 504:	b.eq	530 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0xe4>  // b.none
 508:	ldrb	w12, [x10]
 50c:	tbnz	w12, #2, 814 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3c8>
 510:	sub	x12, x10, #0x18
 514:	cmp	x10, #0x0
 518:	csel	x12, xzr, x12, eq  // eq = none
 51c:	ldr	x12, [x12, #48]
 520:	str	x12, [sp, #32]
 524:	ldrb	w13, [x10]
 528:	tbz	w13, #2, 4e0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x94>
 52c:	b	814 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3c8>
 530:	ldrb	w10, [x11]
 534:	tbnz	w10, #2, 834 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3e8>
 538:	sub	x10, x11, #0x18
 53c:	cmp	x11, #0x0
 540:	csel	x21, xzr, x10, eq  // eq = none
 544:	cbz	x11, 854 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x408>
 548:	ldrb	w10, [x21, #16]
 54c:	cmp	w10, #0x50
 550:	b.ne	49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>  // b.any
 554:	ldur	x10, [x21, #-24]
 558:	cbz	x10, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 55c:	ldrb	w11, [x10, #16]
 560:	cbnz	w11, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 564:	ldrb	w11, [x10, #33]
 568:	tbz	w11, #5, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 56c:	ldr	w10, [x10, #36]
 570:	sub	w10, w10, #0xe
 574:	cmp	w10, #0x14
 578:	b.hi	49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>  // b.pmore
 57c:	adr	x11, 49c <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x50>
 580:	ldrb	w12, [x28, x10]
 584:	add	x11, x11, x12, lsl #2
 588:	br	x11
 58c:	ldr	x0, [x26, #8]
 590:	bl	0 <_ZN4llvm17ConstantTokenNone3getERNS_11LLVMContextE>
 594:	b	754 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x308>
 598:	mov	w1, #0x1                   	// #1
 59c:	mov	x0, x21
 5a0:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5a4:	b	754 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x308>
 5a8:	ldr	x0, [x26, #8]
 5ac:	bl	0 <_ZN4llvm11ConstantInt7getTrueERNS_11LLVMContextE>
 5b0:	b	754 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x308>
 5b4:	mov	x0, x20
 5b8:	mov	x1, x21
 5bc:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5c0:	mov	x0, x21
 5c4:	mov	w1, wzr
 5c8:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5cc:	mov	x23, x0
 5d0:	mov	w1, #0x1                   	// #1
 5d4:	mov	x0, x21
 5d8:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5dc:	cbz	x0, 874 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x428>
 5e0:	ldrb	w8, [x0, #16]
 5e4:	cmp	w8, #0xd
 5e8:	b.ne	894 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x448>  // b.any
 5ec:	add	x0, x0, #0x18
 5f0:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 5f4:	add	x8, x0, #0x1
 5f8:	cmp	x8, #0x4
 5fc:	b.cs	8b4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x468>  // b.hs, b.nlast
 600:	mov	x22, x0
 604:	mov	x0, x21
 608:	bl	0 <_ZNK4llvm5Value10getContextEv>
 60c:	ldr	x8, [x26, #64]
 610:	mov	x24, x0
 614:	mov	w1, wzr
 618:	mov	x0, x8
 61c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 620:	str	x0, [sp, #40]
 624:	ldr	x0, [x26, #64]
 628:	mov	w1, wzr
 62c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
 630:	str	x0, [sp, #48]
 634:	add	x1, sp, #0x28
 638:	mov	w2, #0x2                   	// #2
 63c:	mov	x0, x24
 640:	mov	w3, wzr
 644:	bl	0 <_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb>
 648:	mov	w1, wzr
 64c:	str	x0, [sp, #8]
 650:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
 654:	mov	x24, x0
 658:	mov	x0, x20
 65c:	mov	x1, x21
 660:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 664:	stp	xzr, xzr, [x29, #-24]
 668:	sturh	w25, [x29, #-8]
 66c:	ldr	x8, [x23]
 670:	cmp	x8, x24
 674:	b.eq	6d0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x284>  // b.none
 678:	ldrb	w8, [x23, #16]
 67c:	cmp	w8, #0x10
 680:	b.ls	6b8 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x26c>  // b.plast
 684:	add	x3, sp, #0x28
 688:	mov	w0, #0x31                  	// #49
 68c:	mov	x1, x23
 690:	mov	x2, x24
 694:	mov	x4, xzr
 698:	stp	xzr, xzr, [sp, #40]
 69c:	strh	w25, [sp, #56]
 6a0:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
 6a4:	mov	x1, x0
 6a8:	sub	x2, x29, #0x18
 6ac:	mov	x0, x20
 6b0:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 6b4:	b	6cc <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x280>
 6b8:	mov	w0, #0x31                  	// #49
 6bc:	mov	x1, x23
 6c0:	mov	x2, x24
 6c4:	mov	w3, wzr
 6c8:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
 6cc:	mov	x23, x0
 6d0:	ldr	x24, [sp, #8]
 6d4:	add	x5, sp, #0x28
 6d8:	mov	x0, x20
 6dc:	mov	x2, x23
 6e0:	mov	x1, x24
 6e4:	mov	w3, wzr
 6e8:	mov	w4, w22
 6ec:	stp	xzr, xzr, [sp, #40]
 6f0:	strh	w25, [sp, #56]
 6f4:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 6f8:	ldr	w8, [x24, #12]
 6fc:	cmp	w8, w22
 700:	b.ls	8d4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x488>  // b.plast
 704:	ldr	x8, [x24, #16]
 708:	mov	x23, x0
 70c:	mov	w0, #0x40                  	// #64
 710:	mov	w1, #0x1                   	// #1
 714:	ldr	x22, [x8, w22, uxtw #3]
 718:	stp	xzr, xzr, [x29, #-24]
 71c:	sturh	w25, [x29, #-8]
 720:	bl	0 <_ZN4llvm4UsernwEmj>
 724:	add	x3, sp, #0x28
 728:	mov	x1, x22
 72c:	mov	x2, x23
 730:	mov	x4, xzr
 734:	mov	x24, x0
 738:	stp	xzr, xzr, [sp, #40]
 73c:	strh	w25, [sp, #56]
 740:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
 744:	sub	x2, x29, #0x18
 748:	mov	x0, x20
 74c:	mov	x1, x24
 750:	bl	0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 754:	mov	x1, x0
 758:	mov	x0, x21
 75c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
 760:	mov	x0, x21
 764:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
 768:	mov	w8, #0x1                   	// #1
 76c:	b	498 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x4c>
 770:	tbz	w8, #0, 7f0 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3a4>
 774:	ldr	x1, [x19, #40]
 778:	sub	x0, x29, #0x18
 77c:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerC1EPNS_6ModuleE>
 780:	add	x5, sp, #0x28
 784:	mov	w0, #0x1                   	// #1
 788:	mov	w3, #0x1                   	// #1
 78c:	mov	w1, wzr
 790:	mov	w2, wzr
 794:	mov	w4, wzr
 798:	str	xzr, [sp, #56]
 79c:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
 7a0:	mov	x1, x0
 7a4:	sub	x0, x29, #0x18
 7a8:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
 7ac:	ldr	x8, [sp, #56]
 7b0:	cbz	x8, 7c4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x378>
 7b4:	add	x0, sp, #0x28
 7b8:	add	x1, sp, #0x28
 7bc:	mov	w2, #0x3                   	// #3
 7c0:	blr	x8
 7c4:	sub	x0, x29, #0x18
 7c8:	bl	0 <_ZN4llvm6legacy19FunctionPassManager16doInitializationEv>
 7cc:	sub	x0, x29, #0x18
 7d0:	mov	x1, x19
 7d4:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3runERNS_8FunctionE>
 7d8:	sub	x0, x29, #0x18
 7dc:	bl	0 <_ZN4llvm6legacy19FunctionPassManager14doFinalizationEv>
 7e0:	sub	x0, x29, #0x18
 7e4:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerD1Ev>
 7e8:	mov	w0, #0x1                   	// #1
 7ec:	b	7f4 <_ZN12_GLOBAL__N_117CoroCleanupLegacy13runOnFunctionERN4llvm8FunctionE+0x3a8>
 7f0:	mov	w0, wzr
 7f4:	ldp	x20, x19, [sp, #176]
 7f8:	ldp	x22, x21, [sp, #160]
 7fc:	ldp	x24, x23, [sp, #144]
 800:	ldp	x26, x25, [sp, #128]
 804:	ldp	x28, x27, [sp, #112]
 808:	ldp	x29, x30, [sp, #96]
 80c:	add	sp, sp, #0xc0
 810:	ret
 814:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 818:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 81c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 820:	add	x0, x0, #0x0
 824:	add	x1, x1, #0x0
 828:	add	x3, x3, #0x0
 82c:	mov	w2, #0x8b                  	// #139
 830:	bl	0 <__assert_fail>
 834:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 838:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 83c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 840:	add	x0, x0, #0x0
 844:	add	x1, x1, #0x0
 848:	add	x3, x3, #0x0
 84c:	mov	w2, #0x8b                  	// #139
 850:	bl	0 <__assert_fail>
 854:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 858:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 85c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 860:	add	x0, x0, #0x0
 864:	add	x1, x1, #0x0
 868:	add	x3, x3, #0x0
 86c:	mov	w2, #0x69                  	// #105
 870:	bl	0 <__assert_fail>
 874:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 878:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 87c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 880:	add	x0, x0, #0x0
 884:	add	x1, x1, #0x0
 888:	add	x3, x3, #0x0
 88c:	mov	w2, #0x69                  	// #105
 890:	bl	0 <__assert_fail>
 894:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 898:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 89c:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 8a0:	add	x0, x0, #0x0
 8a4:	add	x1, x1, #0x0
 8a8:	add	x3, x3, #0x0
 8ac:	mov	w2, #0x108                 	// #264
 8b0:	bl	0 <__assert_fail>
 8b4:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 8b8:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 8bc:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 8c0:	add	x0, x0, #0x0
 8c4:	add	x1, x1, #0x0
 8c8:	add	x3, x3, #0x0
 8cc:	mov	w2, #0x34                  	// #52
 8d0:	bl	0 <__assert_fail>
 8d4:	adrp	x0, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 8d8:	adrp	x1, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 8dc:	adrp	x3, 0 <_ZN4llvm31initializeCoroCleanupLegacyPassERNS_12PassRegistryE>
 8e0:	add	x0, x0, #0x0
 8e4:	add	x1, x1, #0x0
 8e8:	add	x3, x3, #0x0
 8ec:	mov	w2, #0x160                 	// #352
 8f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	str	x10, [x0, #16]
  7c:	ldrb	w11, [x9]
  80:	tbz	w11, #2, 38 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x38>
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	sub	x8, x8, x20
  28:	lsr	x8, x8, #4
  2c:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
  30:	b	12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x20, x0
  44:	tbnz	w8, #31, 114 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x114>
  48:	mov	x8, xzr
  4c:	sub	x8, x8, x20
  50:	lsr	x8, x8, #4
  54:	cbz	w8, 12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  58:	ldr	w8, [x19, #20]
  5c:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  60:	mov	x20, xzr
  64:	mov	x8, xzr
  68:	sub	x8, x8, x20
  6c:	lsr	x8, x8, #4
  70:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
  74:	b	158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 140 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x140>
  8c:	mov	x8, xzr
  90:	sub	x8, x8, x20
  94:	lsr	x8, x8, #4
  98:	cbz	w8, 158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	ldr	w8, [x19, #20]
  a8:	ldr	w21, [x0, #8]
  ac:	tbnz	w8, #31, c8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xc8>
  b0:	mov	x20, xzr
  b4:	mov	x8, xzr
  b8:	sub	x8, x8, x20
  bc:	lsr	x8, x8, #4
  c0:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
  c4:	b	190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d0:	ldr	w8, [x19, #20]
  d4:	mov	x20, x0
  d8:	tbnz	w8, #31, 178 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x178>
  dc:	mov	x8, xzr
  e0:	sub	x8, x8, x20
  e4:	lsr	x8, x8, #4
  e8:	cbz	w8, 190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f4:	add	x8, x0, x1
  f8:	ldur	w8, [x8, #-4]
  fc:	subs	w0, w8, w21
 100:	b.cc	1b0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x1b0>  // b.lo, b.ul, b.last
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 11c:	add	x8, x0, x1
 120:	sub	x8, x8, x20
 124:	lsr	x8, x8, #4
 128:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
 12c:	mov	w0, wzr
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 148:	add	x8, x0, x1
 14c:	sub	x8, x8, x20
 150:	lsr	x8, x8, #4
 154:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
 158:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 15c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 160:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x6ed                 	// #1773
 174:	bl	0 <__assert_fail>
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 180:	add	x8, x0, x1
 184:	sub	x8, x8, x20
 188:	lsr	x8, x8, #4
 18c:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
 190:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 194:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 198:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x6f3                 	// #1779
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b4:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b8:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x710                 	// #1808
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	a0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0xa0>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	84 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x84>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 88 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x88>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	ldr	x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	ldr	x1, [x29, #24]
  88:	cbz	x1, 78 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x78>
  8c:	add	x0, x29, #0x18
  90:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a8:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x8e                  	// #142
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x20, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x21, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x20, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  64:	ldrb	w8, [x20, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xb8>  // b.plast
  70:	mov	w8, #0x101                 	// #257
  74:	sub	x2, x29, #0x10
  78:	add	x4, sp, #0x8
  7c:	mov	w3, #0x2                   	// #2
  80:	mov	x0, x22
  84:	mov	x1, x20
  88:	mov	x5, xzr
  8c:	stp	xzr, xzr, [sp, #8]
  90:	strh	w8, [sp, #24]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  98:	mov	w1, #0x1                   	// #1
  9c:	mov	x20, x0
  a0:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a4:	mov	x0, x21
  a8:	mov	x1, x20
  ac:	mov	x2, x19
  b0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  b4:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xd8>
  b8:	sub	x2, x29, #0x10
  bc:	mov	w3, #0x2                   	// #2
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x22
  c8:	mov	x1, x20
  cc:	mov	x5, xzr
  d0:	mov	x6, xzr
  d4:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  d8:	ldp	x20, x19, [sp, #96]
  dc:	ldp	x22, x21, [sp, #80]
  e0:	ldp	x24, x23, [sp, #64]
  e4:	ldp	x29, x30, [sp, #48]
  e8:	add	sp, sp, #0x70
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cmp	w19, #0x40
  14:	b.hi	38 <_ZNK4llvm5APInt12getSExtValueEv+0x38>  // b.pmore
  18:	cbz	w19, a8 <_ZNK4llvm5APInt12getSExtValueEv+0xa8>
  1c:	ldr	x8, [x0]
  20:	neg	x9, x19
  24:	lsl	x8, x8, x9
  28:	asr	x0, x8, x9
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldr	x20, [x0]
  3c:	sub	w8, w19, #0x1
  40:	lsr	w9, w8, #6
  44:	ldr	x9, [x20, w9, uxtw #3]
  48:	lsr	x8, x9, x8
  4c:	tbz	w8, #0, 74 <_ZNK4llvm5APInt12getSExtValueEv+0x74>
  50:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  54:	sub	w8, w19, w0
  58:	add	w8, w8, #0x1
  5c:	cmp	w8, #0x41
  60:	b.cs	88 <_ZNK4llvm5APInt12getSExtValueEv+0x88>  // b.hs, b.nlast
  64:	ldr	x0, [x20]
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  78:	sub	w8, w19, w0
  7c:	add	w8, w8, #0x1
  80:	cmp	w8, #0x41
  84:	b.cc	64 <_ZNK4llvm5APInt12getSExtValueEv+0x64>  // b.lo, b.ul, b.last
  88:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  8c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  90:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x663                 	// #1635
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  ac:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b0:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x307                 	// #775
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, d8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xd8>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 138 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x138>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	f8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xf8>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	8c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x8c>  // b.any
  74:	cbz	x8, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  78:	ldr	w1, [x8, #32]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  8c:	cbz	x20, b0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb0>
  90:	lsl	x8, x20, #3
  94:	ldr	x9, [x19], #8
  98:	ldr	x9, [x9]
  9c:	ldrb	w10, [x9, #8]
  a0:	cmp	w10, #0x10
  a4:	b.eq	c0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xc0>  // b.none
  a8:	subs	x8, x8, #0x8
  ac:	b.ne	94 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x94>  // b.any
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldr	x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	cbz	x9, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  c4:	ldr	w1, [x9, #32]
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldr	x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  d8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  dc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e0:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x375                 	// #885
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  fc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 100:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x108                 	// #264
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 11c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 120:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x69                  	// #105
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 13c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 140:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroEarly.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x30
       4:	stp	x29, x30, [sp, #32]
       8:	add	x29, sp, #0x20
       c:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      10:	add	x8, x8, #0x0
      14:	add	x9, sp, #0x8
      18:	stp	x0, x8, [sp, #8]
      1c:	str	x9, [sp, #24]
      20:	adrp	x0, 0 <_ZSt15__once_callable>
      24:	ldr	x1, [x0]
      28:	add	x0, x0, #0x0
      2c:	blr	x1
      30:	mrs	x8, tpidr_el0
      34:	add	x9, sp, #0x10
      38:	str	x9, [x8, x0]
      3c:	adrp	x0, 0 <_ZSt11__once_call>
      40:	ldr	x1, [x0]
      44:	add	x0, x0, #0x0
      48:	blr	x1
      4c:	adrp	x10, 0 <__pthread_key_create>
      50:	ldr	x10, [x10]
      54:	adrp	x9, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      58:	add	x9, x9, #0x0
      5c:	str	x9, [x8, x0]
      60:	cbz	x10, 88 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE+0x88>
      64:	adrp	x1, 0 <__once_proxy>
      68:	ldr	x1, [x1]
      6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      70:	add	x0, x0, #0x0
      74:	bl	0 <pthread_once>
      78:	cbnz	w0, 8c <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE+0x8c>
      7c:	ldp	x29, x30, [sp, #32]
      80:	add	sp, sp, #0x30
      84:	ret
      88:	mov	w0, #0xffffffff            	// #-1
      8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL33initializeCoroEarlyLegacyPassOnceRN4llvm12PassRegistryE>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	stp	x20, x19, [sp, #16]
      98:	mov	x29, sp
      9c:	mov	x19, x0
      a0:	mov	w0, #0x50                  	// #80
      a4:	bl	0 <_Znwm>
      a8:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      ac:	add	x8, x8, #0x0
      b0:	mov	w9, #0x20                  	// #32
      b4:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      b8:	add	x10, x10, #0x0
      bc:	stp	x8, x9, [x0]
      c0:	mov	w8, #0xa                   	// #10
      c4:	stp	x10, x8, [x0, #16]
      c8:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      cc:	add	x8, x8, #0x0
      d0:	str	x8, [x0, #32]
      d4:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
      d8:	mov	x20, x0
      dc:	add	x8, x8, #0x0
      e0:	strh	wzr, [x0, #40]
      e4:	strb	wzr, [x0, #42]
      e8:	stp	xzr, xzr, [x0, #48]
      ec:	stp	xzr, x8, [x0, #64]
      f0:	mov	w2, #0x1                   	// #1
      f4:	mov	x0, x19
      f8:	mov	x1, x20
      fc:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
     100:	mov	x0, x20
     104:	ldp	x20, x19, [sp, #16]
     108:	ldp	x29, x30, [sp], #32
     10c:	ret

0000000000000110 <_ZN4llvm25createCoroEarlyLegacyPassEv>:
     110:	sub	sp, sp, #0x30
     114:	stp	x29, x30, [sp, #16]
     118:	str	x19, [sp, #32]
     11c:	add	x29, sp, #0x10
     120:	mov	w0, #0x28                  	// #40
     124:	bl	0 <_Znwm>
     128:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     12c:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     130:	add	x8, x8, #0x0
     134:	mov	w9, #0x2                   	// #2
     138:	add	x10, x10, #0x0
     13c:	mov	x19, x0
     140:	stp	xzr, x8, [x0, #8]
     144:	str	w9, [x0, #24]
     148:	str	x10, [x0]
     14c:	str	xzr, [x0, #32]
     150:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     154:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     158:	add	x8, x8, #0x0
     15c:	add	x9, x29, #0x18
     160:	str	x0, [x29, #24]
     164:	stp	x8, x9, [sp]
     168:	adrp	x0, 0 <_ZSt15__once_callable>
     16c:	ldr	x1, [x0]
     170:	add	x0, x0, #0x0
     174:	blr	x1
     178:	mrs	x8, tpidr_el0
     17c:	mov	x9, sp
     180:	str	x9, [x8, x0]
     184:	adrp	x0, 0 <_ZSt11__once_call>
     188:	ldr	x1, [x0]
     18c:	add	x0, x0, #0x0
     190:	blr	x1
     194:	adrp	x10, 0 <__pthread_key_create>
     198:	ldr	x10, [x10]
     19c:	adrp	x9, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     1a0:	add	x9, x9, #0x0
     1a4:	str	x9, [x8, x0]
     1a8:	cbz	x10, 1d8 <_ZN4llvm25createCoroEarlyLegacyPassEv+0xc8>
     1ac:	adrp	x1, 0 <__once_proxy>
     1b0:	ldr	x1, [x1]
     1b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     1b8:	add	x0, x0, #0x0
     1bc:	bl	0 <pthread_once>
     1c0:	cbnz	w0, 1dc <_ZN4llvm25createCoroEarlyLegacyPassEv+0xcc>
     1c4:	mov	x0, x19
     1c8:	ldr	x19, [sp, #32]
     1cc:	ldp	x29, x30, [sp, #16]
     1d0:	add	sp, sp, #0x30
     1d4:	ret
     1d8:	mov	w0, #0xffffffff            	// #-1
     1dc:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroEarlyLegacyEEEPNS_4PassEv>:
     1e0:	sub	sp, sp, #0x30
     1e4:	stp	x29, x30, [sp, #16]
     1e8:	str	x19, [sp, #32]
     1ec:	add	x29, sp, #0x10
     1f0:	mov	w0, #0x28                  	// #40
     1f4:	bl	0 <_Znwm>
     1f8:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     1fc:	adrp	x10, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     200:	add	x8, x8, #0x0
     204:	mov	w9, #0x2                   	// #2
     208:	add	x10, x10, #0x0
     20c:	mov	x19, x0
     210:	stp	xzr, x8, [x0, #8]
     214:	str	w9, [x0, #24]
     218:	str	x10, [x0]
     21c:	str	xzr, [x0, #32]
     220:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     224:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     228:	add	x8, x8, #0x0
     22c:	add	x9, x29, #0x18
     230:	str	x0, [x29, #24]
     234:	stp	x8, x9, [sp]
     238:	adrp	x0, 0 <_ZSt15__once_callable>
     23c:	ldr	x1, [x0]
     240:	add	x0, x0, #0x0
     244:	blr	x1
     248:	mrs	x8, tpidr_el0
     24c:	mov	x9, sp
     250:	str	x9, [x8, x0]
     254:	adrp	x0, 0 <_ZSt11__once_call>
     258:	ldr	x1, [x0]
     25c:	add	x0, x0, #0x0
     260:	blr	x1
     264:	adrp	x10, 0 <__pthread_key_create>
     268:	ldr	x10, [x10]
     26c:	adrp	x9, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     270:	add	x9, x9, #0x0
     274:	str	x9, [x8, x0]
     278:	cbz	x10, 2a8 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroEarlyLegacyEEEPNS_4PassEv+0xc8>
     27c:	adrp	x1, 0 <__once_proxy>
     280:	ldr	x1, [x1]
     284:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     288:	add	x0, x0, #0x0
     28c:	bl	0 <pthread_once>
     290:	cbnz	w0, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroEarlyLegacyEEEPNS_4PassEv+0xcc>
     294:	mov	x0, x19
     298:	ldr	x19, [sp, #32]
     29c:	ldp	x29, x30, [sp, #16]
     2a0:	add	sp, sp, #0x30
     2a4:	ret
     2a8:	mov	w0, #0xffffffff            	// #-1
     2ac:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b0 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev>:
     2b0:	stp	x29, x30, [sp, #-32]!
     2b4:	stp	x20, x19, [sp, #16]
     2b8:	mov	x29, sp
     2bc:	ldr	x20, [x0, #32]
     2c0:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     2c4:	mov	x19, x0
     2c8:	add	x8, x8, #0x0
     2cc:	str	x8, [x0]
     2d0:	cbz	x20, 2ec <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev+0x3c>
     2d4:	mov	x0, x20
     2d8:	ldr	x1, [x0, #40]!
     2dc:	cbz	x1, 2e4 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD2Ev+0x34>
     2e0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     2e4:	mov	x0, x20
     2e8:	bl	0 <_ZdlPv>
     2ec:	str	xzr, [x19, #32]
     2f0:	mov	x0, x19
     2f4:	ldp	x20, x19, [sp, #16]
     2f8:	ldp	x29, x30, [sp], #32
     2fc:	b	0 <_ZN4llvm4PassD2Ev>

0000000000000300 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev>:
     300:	stp	x29, x30, [sp, #-32]!
     304:	stp	x20, x19, [sp, #16]
     308:	mov	x29, sp
     30c:	ldr	x20, [x0, #32]
     310:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     314:	mov	x19, x0
     318:	add	x8, x8, #0x0
     31c:	str	x8, [x0]
     320:	cbz	x20, 33c <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev+0x3c>
     324:	mov	x0, x20
     328:	ldr	x1, [x0, #40]!
     32c:	cbz	x1, 334 <_ZN12_GLOBAL__N_115CoroEarlyLegacyD0Ev+0x34>
     330:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     334:	mov	x0, x20
     338:	bl	0 <_ZdlPv>
     33c:	mov	x0, x19
     340:	str	xzr, [x19, #32]
     344:	bl	0 <_ZN4llvm4PassD2Ev>
     348:	mov	x0, x19
     34c:	ldp	x20, x19, [sp, #16]
     350:	ldp	x29, x30, [sp], #32
     354:	b	0 <_ZdlPv>

0000000000000358 <_ZNK12_GLOBAL__N_115CoroEarlyLegacy11getPassNameEv>:
     358:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     35c:	add	x0, x0, #0x0
     360:	mov	w1, #0x20                  	// #32
     364:	ret

0000000000000368 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE>:
     368:	sub	sp, sp, #0xe0
     36c:	stp	x29, x30, [sp, #176]
     370:	str	x21, [sp, #192]
     374:	stp	x20, x19, [sp, #208]
     378:	add	x29, sp, #0xb0
     37c:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     380:	add	x8, x8, #0x0
     384:	ldp	q0, q1, [x8, #128]
     388:	ldp	q5, q2, [x8, #96]
     38c:	ldr	q3, [x8, #160]
     390:	mov	x20, x1
     394:	mov	x19, x0
     398:	stp	q2, q0, [sp, #112]
     39c:	ldp	q4, q0, [x8, #48]
     3a0:	ldr	q2, [x8, #80]
     3a4:	stp	q1, q3, [sp, #144]
     3a8:	ldp	q3, q1, [x8, #16]
     3ac:	stp	q4, q0, [sp, #48]
     3b0:	ldr	q0, [x8]
     3b4:	mov	x1, sp
     3b8:	mov	w2, #0xb                   	// #11
     3bc:	mov	x0, x20
     3c0:	stp	q2, q5, [sp, #80]
     3c4:	stp	q0, q3, [sp]
     3c8:	str	q1, [sp, #32]
     3cc:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     3d0:	tbz	w0, #0, 458 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xf0>
     3d4:	mov	w0, #0x80                  	// #128
     3d8:	bl	0 <_Znwm>
     3dc:	mov	x1, x20
     3e0:	mov	x21, x0
     3e4:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
     3e8:	ldr	x0, [x21, #8]
     3ec:	mov	w8, #0x200                 	// #512
     3f0:	str	wzr, [x21, #80]
     3f4:	strb	wzr, [x21, #86]
     3f8:	stp	x0, xzr, [x21, #64]
     3fc:	stp	xzr, xzr, [x21, #40]
     400:	strh	w8, [x21, #84]
     404:	str	xzr, [x21, #56]
     408:	stp	xzr, xzr, [x21, #88]
     40c:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     410:	ldr	x8, [x21, #16]
     414:	mov	x1, sp
     418:	mov	w2, #0x1                   	// #1
     41c:	mov	w3, wzr
     420:	str	x8, [sp]
     424:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     428:	mov	w1, wzr
     42c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     430:	stp	x0, xzr, [x21, #112]
     434:	ldr	x20, [x19, #32]
     438:	str	x21, [x19, #32]
     43c:	cbz	x20, 458 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xf0>
     440:	mov	x0, x20
     444:	ldr	x1, [x0, #40]!
     448:	cbz	x1, 450 <_ZN12_GLOBAL__N_115CoroEarlyLegacy16doInitializationERN4llvm6ModuleE+0xe8>
     44c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     450:	mov	x0, x20
     454:	bl	0 <_ZdlPv>
     458:	ldp	x20, x19, [sp, #208]
     45c:	ldr	x21, [sp, #192]
     460:	ldp	x29, x30, [sp, #176]
     464:	mov	w0, wzr
     468:	add	sp, sp, #0xe0
     46c:	ret

0000000000000470 <_ZNK12_GLOBAL__N_115CoroEarlyLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     470:	mov	x0, x1
     474:	b	0 <_ZN4llvm13AnalysisUsage15setPreservesCFGEv>

0000000000000478 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE>:
     478:	sub	sp, sp, #0x130
     47c:	stp	x29, x30, [sp, #208]
     480:	stp	x28, x27, [sp, #224]
     484:	stp	x26, x25, [sp, #240]
     488:	stp	x24, x23, [sp, #256]
     48c:	stp	x22, x21, [sp, #272]
     490:	stp	x20, x19, [sp, #288]
     494:	add	x29, sp, #0xd0
     498:	ldr	x23, [x0, #32]
     49c:	cbz	x23, ef8 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa80>
     4a0:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     4a4:	ldr	d0, [x8]
     4a8:	add	x8, sp, #0x68
     4ac:	add	x8, x8, #0x10
     4b0:	add	x0, sp, #0x50
     4b4:	mov	x26, x1
     4b8:	str	x8, [sp, #40]
     4bc:	str	x8, [sp, #104]
     4c0:	str	d0, [sp, #112]
     4c4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     4c8:	mov	x27, #0x41                  	// #65
     4cc:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     4d0:	mov	w25, wzr
     4d4:	add	x20, x26, #0x48
     4d8:	add	x19, x23, #0x28
     4dc:	mov	w22, #0x1                   	// #1
     4e0:	movk	x27, #0x8, lsl #48
     4e4:	add	x24, x24, #0x0
     4e8:	str	x23, [sp, #64]
     4ec:	stp	xzr, x19, [sp, #48]
     4f0:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     4f4:	stur	x0, [x29, #-32]
     4f8:	sub	x0, x29, #0x20
     4fc:	mov	w1, wzr
     500:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     504:	ldur	x8, [x29, #-32]
     508:	mov	x1, x0
     50c:	mov	x0, x23
     510:	mov	w2, wzr
     514:	and	x3, x8, #0xfffffffffffffff8
     518:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
     51c:	mov	x1, x0
     520:	sub	x0, x29, #0x20
     524:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     528:	sub	x0, x29, #0x20
     52c:	mov	w1, #0x8                   	// #8
     530:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     534:	mov	w25, #0x1                   	// #1
     538:	ldp	x9, x8, [sp, #80]
     53c:	cmp	x8, x20
     540:	b.eq	55c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xe4>  // b.none
     544:	ldr	x21, [sp, #96]
     548:	ldr	x10, [x21, #8]
     54c:	str	x10, [sp, #96]
     550:	ldrb	w11, [x8]
     554:	tbz	w11, #2, 57c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x104>
     558:	b	f20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xaa8>
     55c:	cmp	x20, x9
     560:	b.eq	eac <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa34>  // b.none
     564:	ldr	x21, [sp, #96]
     568:	cbz	x21, eac <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa34>
     56c:	ldr	x10, [x21, #8]
     570:	str	x10, [sp, #96]
     574:	ldrb	w11, [x8]
     578:	tbnz	w11, #2, f20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xaa8>
     57c:	sub	x11, x8, #0x18
     580:	cmp	x8, #0x0
     584:	csel	x11, xzr, x11, eq  // eq = none
     588:	add	x11, x11, #0x28
     58c:	cmp	x11, x10
     590:	b.ne	5cc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x154>  // b.any
     594:	ldr	x8, [x8, #8]
     598:	cmp	x9, x8
     59c:	str	x8, [sp, #88]
     5a0:	b.eq	5cc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x154>  // b.none
     5a4:	ldrb	w10, [x8]
     5a8:	tbnz	w10, #2, f20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xaa8>
     5ac:	sub	x10, x8, #0x18
     5b0:	cmp	x8, #0x0
     5b4:	csel	x10, xzr, x10, eq  // eq = none
     5b8:	ldr	x10, [x10, #48]
     5bc:	str	x10, [sp, #96]
     5c0:	ldrb	w11, [x8]
     5c4:	tbz	w11, #2, 57c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x104>
     5c8:	b	f20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xaa8>
     5cc:	ldrb	w8, [x21]
     5d0:	tbnz	w8, #2, f40 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xac8>
     5d4:	sub	x8, x21, #0x18
     5d8:	cmp	x21, #0x0
     5dc:	csel	x28, xzr, x8, eq  // eq = none
     5e0:	mov	x0, x28
     5e4:	str	xzr, [sp, #72]
     5e8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     5ec:	cmp	x0, #0x8
     5f0:	str	x0, [sp, #72]
     5f4:	b.cc	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>  // b.lo, b.ul, b.last
     5f8:	ands	x8, x0, #0xfffffffffffffff8
     5fc:	b.eq	f80 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb08>  // b.none
     600:	ldrb	w9, [x8, #16]
     604:	sub	w9, w9, #0x1d
     608:	cmp	w9, #0x33
     60c:	b.hi	f60 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xae8>  // b.pmore
     610:	lsl	x9, x22, x9
     614:	tst	x9, x27
     618:	b.eq	f60 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xae8>  // b.none
     61c:	ldur	x8, [x8, #-24]
     620:	cbz	x8, fa0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb28>
     624:	ldrb	w9, [x8, #16]
     628:	cbnz	w9, 538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     62c:	ldr	w8, [x8, #36]
     630:	sub	w8, w8, #0x13
     634:	cmp	w8, #0x10
     638:	b.hi	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>  // b.pmore
     63c:	adr	x9, 4f4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7c>
     640:	ldrh	w10, [x24, x8, lsl #1]
     644:	add	x9, x9, x10, lsl #2
     648:	br	x9
     64c:	mov	x0, x26
     650:	bl	0 <_ZNK4llvm8Function10getContextEv>
     654:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     658:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     65c:	mov	w2, #0x12                  	// #18
     660:	mov	w4, #0x1                   	// #1
     664:	add	x1, x1, #0x0
     668:	add	x3, x3, #0x0
     66c:	mov	w25, #0x1                   	// #1
     670:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
     674:	mov	x2, x0
     678:	mov	w1, #0xffffffff            	// #-1
     67c:	mov	x0, x26
     680:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>
     684:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     688:	cbz	x21, 1100 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc88>
     68c:	ldrb	w8, [x28, #16]
     690:	cmp	w8, #0x50
     694:	b.ne	1020 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>  // b.any
     698:	ldur	x8, [x28, #-24]
     69c:	cbz	x8, 1020 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>
     6a0:	ldrb	w9, [x8, #16]
     6a4:	cbnz	w9, 1020 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>
     6a8:	ldrb	w9, [x8, #33]
     6ac:	tbz	w9, #5, 1020 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>
     6b0:	ldr	w8, [x8, #36]
     6b4:	cmp	w8, #0x1e
     6b8:	b.ne	1020 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xba8>  // b.any
     6bc:	mov	x0, x28
     6c0:	mov	w1, wzr
     6c4:	mov	x22, x26
     6c8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     6cc:	mov	x24, x0
     6d0:	mov	x0, x28
     6d4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     6d8:	ldr	x8, [x23, #64]
     6dc:	mov	w26, w0
     6e0:	mov	x0, x8
     6e4:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
     6e8:	mov	x25, x0
     6ec:	ldr	x8, [x23, #112]
     6f0:	ldr	x0, [x23, #8]
     6f4:	sub	x1, x29, #0x20
     6f8:	mov	w2, #0x3                   	// #3
     6fc:	mov	w3, wzr
     700:	stp	x8, x8, [x29, #-32]
     704:	stur	x25, [x29, #-16]
     708:	bl	0 <_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb>
     70c:	ldr	x8, [x23]
     710:	mov	x21, x0
     714:	mov	x0, x8
     718:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
     71c:	mov	x1, x21
     720:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
     724:	ldr	w8, [x0, #12]
     728:	and	w8, w8, #0x7fffffff
     72c:	cmp	w8, #0x2
     730:	b.ls	1120 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xca8>  // b.plast
     734:	cbz	w26, 1140 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xcc8>
     738:	ldr	x21, [x0, #32]
     73c:	mov	w1, #0x2                   	// #2
     740:	mov	x0, x28
     744:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     748:	cbz	x0, 10a0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc28>
     74c:	ldrb	w8, [x0, #16]
     750:	cmp	w8, #0x11
     754:	b.cs	10c0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc48>  // b.hs, b.nlast
     758:	mov	w8, w26
     75c:	add	x9, x8, x21
     760:	sub	x9, x9, #0x1
     764:	udiv	x9, x9, x8
     768:	mul	x23, x9, x8
     76c:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
     770:	ldr	x19, [sp, #56]
     774:	mov	w21, w0
     778:	mov	x1, x28
     77c:	mov	x0, x19
     780:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     784:	tst	w21, #0x1
     788:	cneg	w3, w23, ne  // ne = any
     78c:	mov	w8, #0x101                 	// #257
     790:	sub	x4, x29, #0x20
     794:	mov	x0, x19
     798:	mov	x1, x25
     79c:	mov	x2, x24
     7a0:	stp	xzr, xzr, [x29, #-32]
     7a4:	sturh	w8, [x29, #-16]
     7a8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     7ac:	mov	x1, x0
     7b0:	mov	x0, x28
     7b4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     7b8:	mov	x0, x28
     7bc:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     7c0:	ldr	x23, [sp, #64]
     7c4:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     7c8:	mov	w25, #0x1                   	// #1
     7cc:	mov	x26, x22
     7d0:	mov	w22, #0x1                   	// #1
     7d4:	add	x24, x24, #0x0
     7d8:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     7dc:	cbz	x21, 1160 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xce8>
     7e0:	ldrb	w8, [x28, #16]
     7e4:	cmp	w8, #0x50
     7e8:	b.ne	fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>  // b.any
     7ec:	ldur	x8, [x28, #-24]
     7f0:	cbz	x8, fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>
     7f4:	ldrb	w9, [x8, #16]
     7f8:	cbnz	w9, fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>
     7fc:	ldrb	w9, [x8, #33]
     800:	tbz	w9, #5, fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>
     804:	ldr	w8, [x8, #36]
     808:	cmp	w8, #0x18
     80c:	b.ne	fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>  // b.any
     810:	mov	x0, x28
     814:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     818:	cbz	x1, c88 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x810>
     81c:	mov	w25, #0x1                   	// #1
     820:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     824:	cbz	x21, 1180 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd08>
     828:	ldrb	w8, [x28, #16]
     82c:	cmp	w8, #0x50
     830:	b.ne	1040 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbc8>  // b.any
     834:	ldur	x8, [x28, #-24]
     838:	cbz	x8, 1040 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbc8>
     83c:	ldrb	w9, [x8, #16]
     840:	cbnz	w9, 1040 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbc8>
     844:	ldrb	w9, [x8, #33]
     848:	tbz	w9, #5, 1040 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbc8>
     84c:	ldr	w8, [x8, #36]
     850:	cmp	w8, #0x15
     854:	b.ne	1040 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbc8>  // b.any
     858:	mov	w1, #0x1                   	// #1
     85c:	mov	x0, x28
     860:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     864:	cbz	x0, 10a0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc28>
     868:	ldrb	w8, [x0, #16]
     86c:	cmp	w8, #0x11
     870:	b.cs	10c0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc48>  // b.hs, b.nlast
     874:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
     878:	tbz	w0, #0, c70 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x7f8>
     87c:	mov	w25, #0x1                   	// #1
     880:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     884:	cbz	x21, 11a0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd28>
     888:	ldrb	w8, [x28, #16]
     88c:	cmp	w8, #0x50
     890:	b.ne	1060 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbe8>  // b.any
     894:	ldur	x8, [x28, #-24]
     898:	cbz	x8, 1060 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbe8>
     89c:	ldrb	w9, [x8, #16]
     8a0:	cbnz	w9, 1060 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbe8>
     8a4:	ldrb	w9, [x8, #33]
     8a8:	tbz	w9, #5, 1060 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbe8>
     8ac:	ldr	w8, [x8, #36]
     8b0:	cmp	w8, #0x17
     8b4:	b.ne	1060 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xbe8>  // b.any
     8b8:	ldp	w8, w9, [sp, #112]
     8bc:	cmp	w8, w9
     8c0:	b.cs	e90 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa18>  // b.hs, b.nlast
     8c4:	ldr	x9, [sp, #104]
     8c8:	str	x28, [x9, w8, uxtw #3]
     8cc:	ldp	w8, w9, [sp, #112]
     8d0:	cmp	w8, w9
     8d4:	b.cs	11c0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd48>  // b.hs, b.nlast
     8d8:	add	w8, w8, #0x1
     8dc:	str	w8, [sp, #112]
     8e0:	mov	w25, #0x1                   	// #1
     8e4:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     8e8:	stur	x0, [x29, #-32]
     8ec:	sub	x0, x29, #0x20
     8f0:	mov	w1, wzr
     8f4:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     8f8:	ldur	x8, [x29, #-32]
     8fc:	mov	x1, x0
     900:	mov	w2, #0x1                   	// #1
     904:	mov	x0, x23
     908:	and	x3, x8, #0xfffffffffffffff8
     90c:	mov	w25, #0x1                   	// #1
     910:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
     914:	mov	x1, x0
     918:	sub	x0, x29, #0x20
     91c:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     920:	sub	x0, x29, #0x20
     924:	mov	w1, #0x8                   	// #8
     928:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     92c:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     930:	cbz	x21, 10e0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc68>
     934:	ldrb	w8, [x28, #16]
     938:	cmp	w8, #0x50
     93c:	b.ne	fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>  // b.any
     940:	ldur	x8, [x28, #-24]
     944:	cbz	x8, fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>
     948:	ldrb	w9, [x8, #16]
     94c:	cbnz	w9, fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>
     950:	ldrb	w8, [x8, #33]
     954:	tbz	w8, #5, fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>
     958:	mov	x0, x28
     95c:	mov	w1, wzr
     960:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     964:	ldr	x8, [x23, #16]
     968:	mov	x24, x0
     96c:	mov	w1, wzr
     970:	mov	x0, x8
     974:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     978:	mov	x25, x0
     97c:	mov	x0, x19
     980:	mov	x1, x28
     984:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     988:	mov	w21, #0x101                 	// #257
     98c:	stp	xzr, xzr, [x29, #-56]
     990:	sturh	w21, [x29, #-40]
     994:	ldr	x8, [x24]
     998:	mov	x27, x26
     99c:	cmp	x8, x25
     9a0:	b.eq	d8c <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x914>  // b.none
     9a4:	ldrb	w8, [x24, #16]
     9a8:	cmp	w8, #0x10
     9ac:	b.ls	d94 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>  // b.plast
     9b0:	sub	x3, x29, #0x20
     9b4:	mov	w0, #0x31                  	// #49
     9b8:	mov	x1, x24
     9bc:	mov	x2, x25
     9c0:	mov	x4, xzr
     9c4:	stp	xzr, xzr, [x29, #-32]
     9c8:	sturh	w21, [x29, #-16]
     9cc:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
     9d0:	mov	x1, x0
     9d4:	sub	x2, x29, #0x38
     9d8:	mov	x0, x19
     9dc:	mov	x26, x19
     9e0:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     9e4:	b	dac <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x934>
     9e8:	cbz	x21, 10e0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc68>
     9ec:	ldrb	w8, [x28, #16]
     9f0:	cmp	w8, #0x50
     9f4:	b.ne	fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>  // b.any
     9f8:	ldur	x8, [x28, #-24]
     9fc:	cbz	x8, fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>
     a00:	ldrb	w9, [x8, #16]
     a04:	cbnz	w9, fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>
     a08:	ldrb	w8, [x8, #33]
     a0c:	tbz	w8, #5, fc0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb48>
     a10:	ldr	x8, [x23, #120]
     a14:	cbnz	x8, bb0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x738>
     a18:	str	x26, [sp, #32]
     a1c:	ldr	x26, [x23, #64]
     a20:	mov	x0, x28
     a24:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
     a28:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     a2c:	mov	x24, x0
     a30:	mov	w2, #0xe                   	// #14
     a34:	mov	x0, x26
     a38:	add	x1, x1, #0x0
     a3c:	bl	0 <_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE>
     a40:	mov	w1, wzr
     a44:	mov	x25, x0
     a48:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     a4c:	mov	x21, x0
     a50:	mov	x0, x26
     a54:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     a58:	sub	x1, x29, #0x20
     a5c:	mov	w2, #0x1                   	// #1
     a60:	mov	w3, wzr
     a64:	stur	x21, [x29, #-32]
     a68:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     a6c:	mov	w1, wzr
     a70:	mov	x21, x0
     a74:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
     a78:	stp	x0, x0, [x29, #-32]
     a7c:	sub	x1, x29, #0x20
     a80:	mov	w2, #0x2                   	// #2
     a84:	mov	x0, x25
     a88:	mov	w3, wzr
     a8c:	bl	0 <_ZN4llvm10StructType7setBodyENS_8ArrayRefIPNS_4TypeEEEb>
     a90:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     a94:	add	x8, x8, #0x0
     a98:	mov	w19, #0x103                 	// #259
     a9c:	mov	w0, #0x78                  	// #120
     aa0:	stp	x8, xzr, [x29, #-32]
     aa4:	sturh	w19, [x29, #-16]
     aa8:	bl	0 <_ZN4llvm4UsernwEm>
     aac:	sub	x4, x29, #0x20
     ab0:	mov	w2, #0x8                   	// #8
     ab4:	mov	w3, #0xffffffff            	// #-1
     ab8:	mov	x1, x21
     abc:	mov	x5, x24
     ac0:	mov	x23, x0
     ac4:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
     ac8:	ldrh	w8, [x23, #18]
     acc:	mov	w0, #0x40                  	// #64
     ad0:	and	w8, w8, #0xffffc00f
     ad4:	orr	w8, w8, #0x80
     ad8:	strh	w8, [x23, #18]
     adc:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     ae0:	add	x8, x8, #0x0
     ae4:	stp	x8, xzr, [x29, #-32]
     ae8:	sturh	w19, [x29, #-16]
     aec:	bl	0 <_Znwm>
     af0:	sub	x2, x29, #0x20
     af4:	mov	x1, x26
     af8:	mov	x3, x23
     afc:	mov	x4, xzr
     b00:	mov	x21, x0
     b04:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
     b08:	mov	w0, #0x38                  	// #56
     b0c:	mov	w1, wzr
     b10:	bl	0 <_ZN4llvm4UsernwEmj>
     b14:	mov	x1, x26
     b18:	ldr	x27, [sp, #32]
     b1c:	ldr	x26, [sp, #56]
     b20:	mov	x2, x21
     b24:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_10BasicBlockE>
     b28:	sub	x1, x29, #0x38
     b2c:	mov	w2, #0x2                   	// #2
     b30:	mov	x0, x25
     b34:	stp	x23, x23, [x29, #-56]
     b38:	bl	0 <_ZN4llvm14ConstantStruct3getEPNS_10StructTypeENS_8ArrayRefIPNS_8ConstantEEE>
     b3c:	mov	x21, x0
     b40:	mov	w0, #0x58                  	// #88
     b44:	mov	w1, #0x1                   	// #1
     b48:	bl	0 <_ZN4llvm4UsernwEmj>
     b4c:	ldr	x2, [x21]
     b50:	adrp	x8, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     b54:	add	x8, x8, #0x0
     b58:	sturh	w19, [x29, #-16]
     b5c:	mov	x19, x26
     b60:	mov	x26, x27
     b64:	mov	x27, #0x41                  	// #65
     b68:	sub	x6, x29, #0x20
     b6c:	mov	w3, #0x1                   	// #1
     b70:	mov	w4, #0x8                   	// #8
     b74:	mov	x1, x24
     b78:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     b7c:	mov	x5, x21
     b80:	mov	x7, xzr
     b84:	mov	x23, x0
     b88:	stp	x8, xzr, [x29, #-32]
     b8c:	movk	x27, #0x8, lsl #48
     b90:	strb	wzr, [sp, #16]
     b94:	str	wzr, [sp, #8]
     b98:	str	wzr, [sp]
     b9c:	add	x24, x24, #0x0
     ba0:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
     ba4:	ldr	x8, [sp, #64]
     ba8:	str	x23, [x8, #120]
     bac:	ldr	x23, [sp, #64]
     bb0:	mov	x0, x19
     bb4:	mov	x1, x28
     bb8:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     bbc:	ldr	x1, [x23, #120]
     bc0:	mov	w8, #0x101                 	// #257
     bc4:	ldr	x2, [x23, #16]
     bc8:	stp	xzr, xzr, [x29, #-56]
     bcc:	sturh	w8, [x29, #-40]
     bd0:	ldr	x8, [x1]
     bd4:	cmp	x8, x2
     bd8:	b.eq	e78 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa00>  // b.none
     bdc:	ldrb	w8, [x1, #16]
     be0:	cmp	w8, #0x10
     be4:	b.ls	e68 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9f0>  // b.plast
     be8:	mov	w8, #0x101                 	// #257
     bec:	sub	x3, x29, #0x20
     bf0:	mov	w0, #0x31                  	// #49
     bf4:	mov	x4, xzr
     bf8:	stp	xzr, xzr, [x29, #-32]
     bfc:	sturh	w8, [x29, #-16]
     c00:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
     c04:	mov	x1, x0
     c08:	sub	x2, x29, #0x38
     c0c:	mov	x0, x19
     c10:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c14:	b	e74 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x9fc>
     c18:	cbz	x21, 11e0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd68>
     c1c:	ldrb	w8, [x28, #16]
     c20:	cmp	w8, #0x50
     c24:	b.ne	1080 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc08>  // b.any
     c28:	ldur	x8, [x28, #-24]
     c2c:	cbz	x8, 1080 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc08>
     c30:	ldrb	w9, [x8, #16]
     c34:	cbnz	w9, 1080 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc08>
     c38:	ldrb	w9, [x8, #33]
     c3c:	tbz	w9, #5, 1080 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc08>
     c40:	ldr	w8, [x8, #36]
     c44:	cmp	w8, #0x23
     c48:	b.ne	1080 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc08>  // b.any
     c4c:	mov	w1, #0x1                   	// #1
     c50:	mov	x0, x28
     c54:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c58:	cbz	x0, 10a0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc28>
     c5c:	ldrb	w8, [x0, #16]
     c60:	cmp	w8, #0x11
     c64:	b.cs	10c0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc48>  // b.hs, b.nlast
     c68:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
     c6c:	tbz	w0, #0, c80 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x808>
     c70:	add	x0, sp, #0x48
     c74:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c78:	mov	w25, #0x1                   	// #1
     c7c:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     c80:	mov	w25, #0x1                   	// #1
     c84:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     c88:	mov	x0, x26
     c8c:	bl	0 <_ZNK4llvm8Function10getContextEv>
     c90:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c94:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     c98:	mov	w2, #0x12                  	// #18
     c9c:	mov	w4, #0x1                   	// #1
     ca0:	add	x1, x1, #0x0
     ca4:	add	x3, x3, #0x0
     ca8:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
     cac:	mov	x2, x0
     cb0:	mov	w1, #0xffffffff            	// #-1
     cb4:	mov	x0, x26
     cb8:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>
     cbc:	mov	x0, x28
     cc0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     cc4:	ldr	x24, [x28, #8]
     cc8:	cbnz	x24, d20 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a8>
     ccc:	mov	x0, x28
     cd0:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     cd4:	ldrb	w8, [x28, #16]
     cd8:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     cdc:	add	x24, x24, #0x0
     ce0:	cmp	w8, #0x50
     ce4:	b.ne	fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>  // b.any
     ce8:	ldur	x8, [x28, #-24]
     cec:	cbz	x8, fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>
     cf0:	ldrb	w9, [x8, #16]
     cf4:	cbnz	w9, fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>
     cf8:	ldrb	w9, [x8, #33]
     cfc:	tbz	w9, #5, fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>
     d00:	ldr	w8, [x8, #36]
     d04:	cmp	w8, #0x18
     d08:	b.ne	fe0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb68>  // b.any
     d0c:	mov	w25, #0x1                   	// #1
     d10:	str	x28, [sp, #48]
     d14:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     d18:	ldr	x24, [x24, #8]
     d1c:	cbz	x24, ccc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x854>
     d20:	mov	x0, x24
     d24:	bl	0 <_ZNK4llvm3Use7getUserEv>
     d28:	cbz	x0, 1000 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xb88>
     d2c:	ldrb	w8, [x0, #16]
     d30:	mov	x25, x0
     d34:	cmp	w8, #0x50
     d38:	b.ne	d18 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a0>  // b.any
     d3c:	ldur	x8, [x25, #-24]
     d40:	cbz	x8, d18 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a0>
     d44:	ldrb	w9, [x8, #16]
     d48:	cbnz	w9, d18 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a0>
     d4c:	ldrb	w9, [x8, #33]
     d50:	tbz	w9, #5, d18 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a0>
     d54:	ldr	w8, [x8, #36]
     d58:	cmp	w8, #0x12
     d5c:	b.ne	d18 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a0>  // b.any
     d60:	ldr	x8, [x25, #56]
     d64:	mov	x0, x25
     d68:	stur	x8, [x29, #-32]
     d6c:	bl	0 <_ZNK4llvm5Value10getContextEv>
     d70:	mov	x1, x0
     d74:	sub	x0, x29, #0x20
     d78:	mov	w2, #0xffffffff            	// #-1
     d7c:	mov	w3, #0x19                  	// #25
     d80:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
     d84:	str	x0, [x25, #56]
     d88:	b	d18 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x8a0>
     d8c:	mov	x26, x19
     d90:	b	db0 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x938>
     d94:	mov	w0, #0x31                  	// #49
     d98:	mov	x1, x24
     d9c:	mov	x2, x25
     da0:	mov	w3, wzr
     da4:	mov	x26, x19
     da8:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
     dac:	mov	x24, x0
     db0:	stp	xzr, xzr, [x29, #-56]
     db4:	sturh	w21, [x29, #-40]
     db8:	ldr	x8, [x24]
     dbc:	mov	w19, #0x101                 	// #257
     dc0:	ldrb	w9, [x8, #8]
     dc4:	cmp	w9, #0xf
     dc8:	b.ne	1200 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xd88>  // b.any
     dcc:	ldr	x8, [x8, #16]
     dd0:	mov	w0, #0x40                  	// #64
     dd4:	mov	w1, #0x1                   	// #1
     dd8:	mov	w25, #0x1                   	// #1
     ddc:	ldr	x21, [x8]
     de0:	bl	0 <_ZN4llvm4UsernwEmj>
     de4:	sub	x3, x29, #0x20
     de8:	mov	x1, x21
     dec:	mov	x2, x24
     df0:	mov	x4, xzr
     df4:	mov	x23, x0
     df8:	stp	xzr, xzr, [x29, #-32]
     dfc:	sturh	w19, [x29, #-16]
     e00:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
     e04:	sub	x2, x29, #0x38
     e08:	mov	x0, x26
     e0c:	mov	x1, x23
     e10:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     e14:	ldr	x23, [sp, #64]
     e18:	mov	x2, x0
     e1c:	sub	x4, x29, #0x20
     e20:	mov	w1, #0x20                  	// #32
     e24:	ldr	x3, [x23, #32]
     e28:	mov	x0, x26
     e2c:	stp	xzr, xzr, [x29, #-32]
     e30:	sturh	w19, [x29, #-16]
     e34:	mov	x19, x26
     e38:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     e3c:	mov	x1, x0
     e40:	mov	x0, x28
     e44:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     e48:	mov	x0, x28
     e4c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     e50:	adrp	x24, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     e54:	mov	x26, x27
     e58:	mov	x27, #0x41                  	// #65
     e5c:	add	x24, x24, #0x0
     e60:	movk	x27, #0x8, lsl #48
     e64:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     e68:	mov	w0, #0x31                  	// #49
     e6c:	mov	w3, wzr
     e70:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
     e74:	mov	x1, x0
     e78:	mov	x0, x28
     e7c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     e80:	mov	x0, x28
     e84:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     e88:	mov	w25, #0x1                   	// #1
     e8c:	b	538 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xc0>
     e90:	ldr	x1, [sp, #40]
     e94:	add	x0, sp, #0x68
     e98:	mov	w3, #0x8                   	// #8
     e9c:	mov	x2, xzr
     ea0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ea4:	ldr	w8, [sp, #112]
     ea8:	b	8c4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0x44c>
     eac:	ldr	x21, [sp, #48]
     eb0:	cbz	x21, edc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa64>
     eb4:	ldr	w8, [sp, #112]
     eb8:	cbz	w8, edc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa64>
     ebc:	ldr	x19, [sp, #104]
     ec0:	lsl	x20, x8, #3
     ec4:	ldr	x0, [x19], #8
     ec8:	mov	w1, wzr
     ecc:	mov	x2, x21
     ed0:	bl	0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     ed4:	subs	x20, x20, #0x8
     ed8:	b.ne	ec4 <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa4c>  // b.any
     edc:	ldr	x0, [sp, #104]
     ee0:	add	x8, sp, #0x68
     ee4:	add	x8, x8, #0x10
     ee8:	cmp	x0, x8
     eec:	b.eq	efc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa84>  // b.none
     ef0:	bl	0 <free>
     ef4:	b	efc <_ZN12_GLOBAL__N_115CoroEarlyLegacy13runOnFunctionERN4llvm8FunctionE+0xa84>
     ef8:	mov	w25, wzr
     efc:	and	w0, w25, #0x1
     f00:	ldp	x20, x19, [sp, #288]
     f04:	ldp	x22, x21, [sp, #272]
     f08:	ldp	x24, x23, [sp, #256]
     f0c:	ldp	x26, x25, [sp, #240]
     f10:	ldp	x28, x27, [sp, #224]
     f14:	ldp	x29, x30, [sp, #208]
     f18:	add	sp, sp, #0x130
     f1c:	ret
     f20:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f24:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f28:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f2c:	add	x0, x0, #0x0
     f30:	add	x1, x1, #0x0
     f34:	add	x3, x3, #0x0
     f38:	mov	w2, #0x8b                  	// #139
     f3c:	bl	0 <__assert_fail>
     f40:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f44:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f48:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f4c:	add	x0, x0, #0x0
     f50:	add	x1, x1, #0x0
     f54:	add	x3, x3, #0x0
     f58:	mov	w2, #0x8b                  	// #139
     f5c:	bl	0 <__assert_fail>
     f60:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f64:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f68:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f6c:	add	x0, x0, #0x0
     f70:	add	x1, x1, #0x0
     f74:	add	x3, x3, #0x0
     f78:	mov	w2, #0x108                 	// #264
     f7c:	bl	0 <__assert_fail>
     f80:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f84:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f88:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     f8c:	add	x0, x0, #0x0
     f90:	add	x1, x1, #0x0
     f94:	add	x3, x3, #0x0
     f98:	mov	w2, #0x69                  	// #105
     f9c:	bl	0 <__assert_fail>
     fa0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fa4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fa8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fac:	add	x0, x0, #0x0
     fb0:	add	x1, x1, #0x0
     fb4:	add	x3, x3, #0x0
     fb8:	mov	w2, #0x69                  	// #105
     fbc:	bl	0 <__assert_fail>
     fc0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fc4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fc8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fcc:	add	x0, x0, #0x0
     fd0:	add	x1, x1, #0x0
     fd4:	add	x3, x3, #0x0
     fd8:	mov	w2, #0x108                 	// #264
     fdc:	bl	0 <__assert_fail>
     fe0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fe4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fe8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
     fec:	add	x0, x0, #0x0
     ff0:	add	x1, x1, #0x0
     ff4:	add	x3, x3, #0x0
     ff8:	mov	w2, #0x108                 	// #264
     ffc:	bl	0 <__assert_fail>
    1000:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1004:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1008:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    100c:	add	x0, x0, #0x0
    1010:	add	x1, x1, #0x0
    1014:	add	x3, x3, #0x0
    1018:	mov	w2, #0x69                  	// #105
    101c:	bl	0 <__assert_fail>
    1020:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1024:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1028:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    102c:	add	x0, x0, #0x0
    1030:	add	x1, x1, #0x0
    1034:	add	x3, x3, #0x0
    1038:	mov	w2, #0x108                 	// #264
    103c:	bl	0 <__assert_fail>
    1040:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1044:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1048:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    104c:	add	x0, x0, #0x0
    1050:	add	x1, x1, #0x0
    1054:	add	x3, x3, #0x0
    1058:	mov	w2, #0x108                 	// #264
    105c:	bl	0 <__assert_fail>
    1060:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1064:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1068:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    106c:	add	x0, x0, #0x0
    1070:	add	x1, x1, #0x0
    1074:	add	x3, x3, #0x0
    1078:	mov	w2, #0x108                 	// #264
    107c:	bl	0 <__assert_fail>
    1080:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1084:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1088:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    108c:	add	x0, x0, #0x0
    1090:	add	x1, x1, #0x0
    1094:	add	x3, x3, #0x0
    1098:	mov	w2, #0x108                 	// #264
    109c:	bl	0 <__assert_fail>
    10a0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10a4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10a8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10ac:	add	x0, x0, #0x0
    10b0:	add	x1, x1, #0x0
    10b4:	add	x3, x3, #0x0
    10b8:	mov	w2, #0x69                  	// #105
    10bc:	bl	0 <__assert_fail>
    10c0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10c4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10c8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10cc:	add	x0, x0, #0x0
    10d0:	add	x1, x1, #0x0
    10d4:	add	x3, x3, #0x0
    10d8:	mov	w2, #0x108                 	// #264
    10dc:	bl	0 <__assert_fail>
    10e0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10e4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10e8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    10ec:	add	x0, x0, #0x0
    10f0:	add	x1, x1, #0x0
    10f4:	add	x3, x3, #0x0
    10f8:	mov	w2, #0x69                  	// #105
    10fc:	bl	0 <__assert_fail>
    1100:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1104:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1108:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    110c:	add	x0, x0, #0x0
    1110:	add	x1, x1, #0x0
    1114:	add	x3, x3, #0x0
    1118:	mov	w2, #0x69                  	// #105
    111c:	bl	0 <__assert_fail>
    1120:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1124:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1128:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    112c:	add	x0, x0, #0x0
    1130:	add	x1, x1, #0x0
    1134:	add	x3, x3, #0x0
    1138:	mov	w2, #0x260                 	// #608
    113c:	bl	0 <__assert_fail>
    1140:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1144:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1148:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    114c:	add	x0, x0, #0x0
    1150:	add	x1, x1, #0x0
    1154:	add	x3, x3, #0x0
    1158:	mov	w2, #0x2ce                 	// #718
    115c:	bl	0 <__assert_fail>
    1160:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1164:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1168:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    116c:	add	x0, x0, #0x0
    1170:	add	x1, x1, #0x0
    1174:	add	x3, x3, #0x0
    1178:	mov	w2, #0x69                  	// #105
    117c:	bl	0 <__assert_fail>
    1180:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1184:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1188:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    118c:	add	x0, x0, #0x0
    1190:	add	x1, x1, #0x0
    1194:	add	x3, x3, #0x0
    1198:	mov	w2, #0x69                  	// #105
    119c:	bl	0 <__assert_fail>
    11a0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11a4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11a8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11ac:	add	x0, x0, #0x0
    11b0:	add	x1, x1, #0x0
    11b4:	add	x3, x3, #0x0
    11b8:	mov	w2, #0x69                  	// #105
    11bc:	bl	0 <__assert_fail>
    11c0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11c4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11c8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11cc:	add	x0, x0, #0x0
    11d0:	add	x1, x1, #0x0
    11d4:	add	x3, x3, #0x0
    11d8:	mov	w2, #0x43                  	// #67
    11dc:	bl	0 <__assert_fail>
    11e0:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11e4:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11e8:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    11ec:	add	x0, x0, #0x0
    11f0:	add	x1, x1, #0x0
    11f4:	add	x3, x3, #0x0
    11f8:	mov	w2, #0x69                  	// #105
    11fc:	bl	0 <__assert_fail>
    1200:	adrp	x0, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1204:	adrp	x1, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    1208:	adrp	x3, 0 <_ZN4llvm29initializeCoroEarlyLegacyPassERNS_12PassRegistryE>
    120c:	add	x0, x0, #0x0
    1210:	add	x1, x1, #0x0
    1214:	add	x3, x3, #0x0
    1218:	mov	w2, #0x17e                 	// #382
    121c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	and	x8, x9, #0x6
  14:	cmp	x8, #0x4
  18:	and	x19, x9, #0xfffffffffffffff8
  1c:	b.eq	58 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x58>  // b.none
  20:	cmp	x8, #0x2
  24:	b.ne	88 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x88>  // b.any
  28:	cbz	x19, cc <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0xcc>
  2c:	ldrb	w8, [x19, #16]
  30:	cmp	w8, #0x50
  34:	b.eq	98 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x98>  // b.none
  38:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  3c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  40:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	bl	0 <__assert_fail>
  58:	cbz	x19, ec <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0xec>
  5c:	ldrb	w8, [x19, #16]
  60:	cmp	w8, #0x23
  64:	b.eq	98 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x98>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  6c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  70:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x108                 	// #264
  84:	bl	0 <__assert_fail>
  88:	cbz	x19, 10c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x10c>
  8c:	ldrb	w8, [x19, #16]
  90:	cmp	w8, #0x1d
  94:	b.ne	12c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv+0x12c>  // b.any
  98:	ldr	x8, [x19, #56]
  9c:	mov	x0, x19
  a0:	str	x8, [x29, #24]
  a4:	bl	0 <_ZNK4llvm5Value10getContextEv>
  a8:	mov	x1, x0
  ac:	add	x0, x29, #0x18
  b0:	mov	w2, #0xffffffff            	// #-1
  b4:	mov	w3, #0x19                  	// #25
  b8:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
  bc:	str	x0, [x19, #56]
  c0:	ldr	x19, [sp, #16]
  c4:	ldp	x29, x30, [sp], #32
  c8:	ret
  cc:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  d0:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  d4:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  f0:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  f4:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 110:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 114:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x69                  	// #105
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 130:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 134:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E18setCannotDuplicateEv>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x108                 	// #264
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x3                   	// #3
  10:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  14:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  18:	cbz	x0, 104 <_ZNK4llvm10CoroIdInst7getInfoEv+0x104>
  1c:	ldrb	w8, [x0, #16]
  20:	mov	x19, x0
  24:	cmp	w8, #0x11
  28:	b.cs	124 <_ZNK4llvm10CoroIdInst7getInfoEv+0x124>  // b.hs, b.nlast
  2c:	cmp	w8, #0x3
  30:	b.ne	a8 <_ZNK4llvm10CoroIdInst7getInfoEv+0xa8>  // b.any
  34:	ldrb	w8, [x19, #80]
  38:	tbz	w8, #0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  44:	tbnz	w0, #0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  48:	ldr	w8, [x19, #32]
  4c:	and	w8, w8, #0xf
  50:	cmp	w8, #0xa
  54:	b.hi	144 <_ZNK4llvm10CoroIdInst7getInfoEv+0x144>  // b.pmore
  58:	mov	w9, #0x1                   	// #1
  5c:	lsl	w8, w9, w8
  60:	mov	w9, #0x1eb                 	// #491
  64:	tst	w8, w9
  68:	b.eq	e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>  // b.none
  6c:	ldrb	w8, [x19, #80]
  70:	tbnz	w8, #1, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  74:	mov	x0, x19
  78:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  7c:	tbnz	w0, #0, 15c <_ZNK4llvm10CoroIdInst7getInfoEv+0x15c>
  80:	ldur	x1, [x19, #-24]
  84:	cbz	x1, 17c <_ZNK4llvm10CoroIdInst7getInfoEv+0x17c>
  88:	ldrb	w8, [x1, #16]
  8c:	cmp	w8, #0x7
  90:	csel	x0, x1, xzr, eq  // eq = none
  94:	cbz	x0, bc <_ZNK4llvm10CoroIdInst7getInfoEv+0xbc>
  98:	mov	x1, xzr
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret
  a8:	mov	x0, xzr
  ac:	mov	x1, xzr
  b0:	ldr	x19, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret
  bc:	cmp	w8, #0x6
  c0:	b.eq	9c <_ZNK4llvm10CoroIdInst7getInfoEv+0x9c>  // b.none
  c4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0xa8                  	// #168
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 10c:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 128:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 12c:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x108                 	// #264
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 148:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x16d                 	// #365
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 160:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 164:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x8d                  	// #141
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 180:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 184:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x69                  	// #105
 198:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10CoroIdInst16setCoroutineSelfEv:

0000000000000000 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x2                   	// #2
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  18:	cbz	x0, 68 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv+0x68>
  1c:	ldrb	w8, [x0, #16]
  20:	cmp	w8, #0xf
  24:	b.ne	88 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv+0x88>  // b.any
  28:	mov	x0, x19
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	mov	w1, wzr
  34:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  44:	mov	x1, x20
  48:	mov	w2, wzr
  4c:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
  50:	mov	x2, x0
  54:	mov	x0, x19
  58:	ldp	x20, x19, [sp, #16]
  5c:	mov	w1, #0x2                   	// #2
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  68:	adrp	x0, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  6c:	adrp	x1, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  70:	adrp	x3, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x69                  	// #105
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  8c:	adrp	x1, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  90:	adrp	x3, 0 <_ZN4llvm10CoroIdInst16setCoroutineSelfEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xbb                  	// #187
  a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	str	x10, [x0, #16]
  7c:	ldrb	w11, [x9]
  80:	tbz	w11, #2, 38 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x38>
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 80 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x80>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x18
  14:	b.cs	24 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x24>  // b.hs, b.nlast
  18:	mov	x0, xzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	cmp	w8, #0x1d
  28:	b.eq	6c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x6c>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	54 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x54>  // b.none
  34:	cmp	w8, #0x50
  38:	b.ne	18 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x18>  // b.any
  3c:	tst	x0, #0x7
  40:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  44:	and	x8, x0, #0xfffffffffffffff9
  48:	orr	x0, x8, #0x2
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	tst	x0, #0x7
  58:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  5c:	and	x8, x0, #0xfffffffffffffff9
  60:	orr	x0, x8, #0x4
  64:	ldp	x29, x30, [sp], #16
  68:	ret
  6c:	tst	x0, #0x7
  70:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  74:	and	x0, x0, #0xfffffffffffffff9
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  84:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  88:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x69                  	// #105
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a4:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a8:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0xb3                  	// #179
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	sub	x8, x8, x20
  28:	lsr	x8, x8, #4
  2c:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
  30:	b	12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x20, x0
  44:	tbnz	w8, #31, 114 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x114>
  48:	mov	x8, xzr
  4c:	sub	x8, x8, x20
  50:	lsr	x8, x8, #4
  54:	cbz	w8, 12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  58:	ldr	w8, [x19, #20]
  5c:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  60:	mov	x20, xzr
  64:	mov	x8, xzr
  68:	sub	x8, x8, x20
  6c:	lsr	x8, x8, #4
  70:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
  74:	b	158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 140 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x140>
  8c:	mov	x8, xzr
  90:	sub	x8, x8, x20
  94:	lsr	x8, x8, #4
  98:	cbz	w8, 158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	ldr	w8, [x19, #20]
  a8:	ldr	w21, [x0, #8]
  ac:	tbnz	w8, #31, c8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xc8>
  b0:	mov	x20, xzr
  b4:	mov	x8, xzr
  b8:	sub	x8, x8, x20
  bc:	lsr	x8, x8, #4
  c0:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
  c4:	b	190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d0:	ldr	w8, [x19, #20]
  d4:	mov	x20, x0
  d8:	tbnz	w8, #31, 178 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x178>
  dc:	mov	x8, xzr
  e0:	sub	x8, x8, x20
  e4:	lsr	x8, x8, #4
  e8:	cbz	w8, 190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f4:	add	x8, x0, x1
  f8:	ldur	w8, [x8, #-4]
  fc:	subs	w0, w8, w21
 100:	b.cc	1b0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x1b0>  // b.lo, b.ul, b.last
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 11c:	add	x8, x0, x1
 120:	sub	x8, x8, x20
 124:	lsr	x8, x8, #4
 128:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
 12c:	mov	w0, wzr
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 148:	add	x8, x0, x1
 14c:	sub	x8, x8, x20
 150:	lsr	x8, x8, #4
 154:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
 158:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 15c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 160:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x6ed                 	// #1773
 174:	bl	0 <__assert_fail>
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 180:	add	x8, x0, x1
 184:	sub	x8, x8, x20
 188:	lsr	x8, x8, #4
 18c:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
 190:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 194:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 198:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x6f3                 	// #1779
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b4:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b8:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x710                 	// #1808
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	a0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0xa0>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	84 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x84>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 88 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x88>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	ldr	x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	ldr	x1, [x29, #24]
  88:	cbz	x1, 78 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x78>
  8c:	add	x0, x29, #0x18
  90:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a8:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x8e                  	// #142
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj:

0000000000000000 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x9, [x0]
   c:	and	x8, x9, #0x6
  10:	cmp	x8, #0x4
  14:	and	x0, x9, #0xfffffffffffffff8
  18:	b.eq	54 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x54>  // b.none
  1c:	cmp	x8, #0x2
  20:	b.ne	84 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x84>  // b.any
  24:	cbz	x0, 9c <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x9c>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.eq	94 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x94>  // b.none
  34:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  38:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  3c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x108                 	// #264
  50:	bl	0 <__assert_fail>
  54:	cbz	x0, bc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xbc>
  58:	ldrb	w8, [x0, #16]
  5c:	cmp	w8, #0x23
  60:	b.eq	94 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0x94>  // b.none
  64:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  68:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  6c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	cbz	x0, dc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xdc>
  88:	ldrb	w8, [x0, #16]
  8c:	cmp	w8, #0x1d
  90:	b.ne	fc <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj+0xfc>  // b.any
  94:	ldp	x29, x30, [sp], #16
  98:	b	0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  9c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  a0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  a4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x69                  	// #105
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  c0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  c4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ands	x8, x8, #0xfffffffffffffff8
  10:	b.eq	118 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x118>  // b.none
  14:	ldr	x9, [x1]
  18:	cbz	x9, 138 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x138>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0xf
  24:	b.ne	158 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x158>  // b.any
  28:	ldrb	w10, [x8, #16]
  2c:	sub	w10, w10, #0x1d
  30:	cmp	w10, #0x33
  34:	b.hi	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.pmore
  38:	mov	w11, #0x1                   	// #1
  3c:	mov	x12, #0x41                  	// #65
  40:	lsl	x11, x11, x10
  44:	movk	x12, #0x8, lsl #48
  48:	tst	x11, x12
  4c:	b.eq	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.none
  50:	ldr	x9, [x9, #24]
  54:	ldr	x11, [x8, #64]
  58:	cmp	x9, x11
  5c:	b.ne	178 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x178>  // b.any
  60:	cmp	w10, #0x33
  64:	b.hi	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.pmore
  68:	mov	w9, #0x1                   	// #1
  6c:	lsl	x9, x9, x10
  70:	mov	x10, #0x41                  	// #65
  74:	movk	x10, #0x8, lsl #48
  78:	tst	x9, x10
  7c:	b.eq	f8 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xf8>  // b.none
  80:	mov	x9, x8
  84:	ldr	x10, [x9, #-24]!
  88:	cbz	x10, b0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xb0>
  8c:	ldp	x11, x10, [x8, #-16]
  90:	and	x10, x10, #0xfffffffffffffffc
  94:	str	x11, [x10]
  98:	ldur	x11, [x8, #-16]
  9c:	cbz	x11, b0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xb0>
  a0:	ldr	x12, [x11, #16]
  a4:	and	x12, x12, #0x3
  a8:	orr	x10, x12, x10
  ac:	str	x10, [x11, #16]
  b0:	stur	x1, [x8, #-24]
  b4:	ldr	x10, [x1, #8]!
  b8:	mov	x11, x8
  bc:	str	x10, [x11, #-16]!
  c0:	cbz	x10, d4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0xd4>
  c4:	ldr	x12, [x10, #16]
  c8:	and	x12, x12, #0x3
  cc:	orr	x11, x12, x11
  d0:	str	x11, [x10, #16]
  d4:	tst	x1, #0x3
  d8:	b.ne	198 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_+0x198>  // b.any
  dc:	ldur	x10, [x8, #-8]
  e0:	and	x10, x10, #0x3
  e4:	orr	x10, x10, x1
  e8:	stur	x10, [x8, #-8]
  ec:	str	x9, [x1]
  f0:	ldp	x29, x30, [sp], #16
  f4:	ret
  f8:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
  fc:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 100:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x108                 	// #264
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 11c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 120:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x83                  	// #131
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 13c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 140:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>
 158:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 15c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 160:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x108                 	// #264
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 17c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 180:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x86                  	// #134
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 19c:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 1a0:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E17setCalledFunctionEPS3_>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0xb3                  	// #179
 1b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	and	x9, x8, #0x6
  10:	cmp	x9, #0x4
  14:	and	x8, x8, #0xfffffffffffffff8
  18:	b.eq	54 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x54>  // b.none
  1c:	cmp	x9, #0x2
  20:	b.ne	84 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x84>  // b.any
  24:	cbz	x8, 104 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x104>
  28:	ldrb	w9, [x8, #16]
  2c:	cmp	w9, #0x50
  30:	b.eq	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x94>  // b.none
  34:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  38:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  3c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x108                 	// #264
  50:	bl	0 <__assert_fail>
  54:	cbz	x8, 124 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x124>
  58:	ldrb	w9, [x8, #16]
  5c:	cmp	w9, #0x23
  60:	b.eq	94 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x94>  // b.none
  64:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  68:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  6c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	cbz	x8, 144 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x144>
  88:	ldrb	w9, [x8, #16]
  8c:	cmp	w9, #0x1d
  90:	b.ne	164 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0x164>  // b.any
  94:	cmp	w1, #0x400
  98:	b.cs	c4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xc4>  // b.hs, b.nlast
  9c:	ldrh	w9, [x8, #18]!
  a0:	mov	w10, w9
  a4:	bfi	w10, w1, #2, #30
  a8:	sxth	w10, w10
  ac:	tbnz	w10, #31, e4 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj+0xe4>
  b0:	and	w9, w9, #0x8000
  b4:	orr	w9, w10, w9
  b8:	strh	w9, [x8]
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  c8:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  cc:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x558                 	// #1368
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  e8:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  ec:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x2fd                 	// #765
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 108:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 10c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 128:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 12c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x69                  	// #105
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 148:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 14c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x69                  	// #105
 160:	bl	0 <__assert_fail>
 164:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 168:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 16c:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E14setCallingConvEj>
 170:	add	x0, x0, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x108                 	// #264
 180:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15CoroPromiseInst12getAlignmentEv:

0000000000000000 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  14:	cbz	x0, 5c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm15CoroPromiseInst12getAlignmentEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	w0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  60:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  64:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  80:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  84:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  a0:	adrp	x1, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  a4:	adrp	x3, 0 <_ZNK4llvm15CoroPromiseInst12getAlignmentEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x4
  24:	mov	w23, w3
  28:	mov	x20, x2
  2c:	mov	x22, x1
  30:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  34:	mov	w1, w23
  38:	mov	w2, wzr
  3c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  40:	str	x0, [x29, #24]
  44:	cbz	x20, d4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0xd4>
  48:	ldrb	w8, [x20, #16]
  4c:	cmp	w8, #0x10
  50:	b.ls	9c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0x9c>  // b.plast
  54:	mov	w8, #0x101                 	// #257
  58:	add	x2, x29, #0x18
  5c:	add	x4, sp, #0x8
  60:	mov	w3, #0x1                   	// #1
  64:	mov	x0, x22
  68:	mov	x1, x20
  6c:	mov	x5, xzr
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  7c:	mov	w1, #0x1                   	// #1
  80:	mov	x20, x0
  84:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  88:	mov	x0, x21
  8c:	mov	x1, x20
  90:	mov	x2, x19
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  98:	b	bc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE+0xbc>
  9c:	add	x2, x29, #0x18
  a0:	mov	w3, #0x1                   	// #1
  a4:	mov	w4, #0x1                   	// #1
  a8:	mov	x0, x22
  ac:	mov	x1, x20
  b0:	mov	x5, xzr
  b4:	mov	x6, xzr
  b8:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  bc:	ldp	x20, x19, [sp, #80]
  c0:	ldp	x22, x21, [sp, #64]
  c4:	ldr	x23, [sp, #48]
  c8:	ldp	x29, x30, [sp, #32]
  cc:	add	sp, sp, #0x60
  d0:	ret
  d4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  d8:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  dc:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP1_32EPNS_4TypeEPNS_5ValueEjRKNS_5TwineE>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x69                  	// #105
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, d8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xd8>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 138 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x138>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	f8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xf8>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	8c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x8c>  // b.any
  74:	cbz	x8, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  78:	ldr	w1, [x8, #32]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  8c:	cbz	x20, b0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb0>
  90:	lsl	x8, x20, #3
  94:	ldr	x9, [x19], #8
  98:	ldr	x9, [x9]
  9c:	ldrb	w10, [x9, #8]
  a0:	cmp	w10, #0x10
  a4:	b.eq	c0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xc0>  // b.none
  a8:	subs	x8, x8, #0x8
  ac:	b.ne	94 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x94>  // b.any
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldr	x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	cbz	x9, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  c4:	ldr	w1, [x9, #32]
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldr	x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  d8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  dc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e0:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x375                 	// #885
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  fc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 100:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x108                 	// #264
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 11c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 120:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x69                  	// #105
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 13c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 140:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	cbz	x2, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  1c:	ldrb	w8, [x2, #16]
  20:	mov	x19, x4
  24:	mov	x20, x3
  28:	mov	x21, x2
  2c:	mov	w23, w1
  30:	mov	x22, x0
  34:	cmp	w8, #0x10
  38:	b.hi	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x4c>  // b.pmore
  3c:	cbz	x20, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  40:	ldrb	w8, [x20, #16]
  44:	cmp	w8, #0x10
  48:	b.ls	a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xa4>  // b.plast
  4c:	mov	w0, #0x38                  	// #56
  50:	mov	w1, #0x2                   	// #2
  54:	bl	0 <_ZN4llvm4UsernwEmj>
  58:	mov	w8, #0x101                 	// #257
  5c:	add	x4, sp, #0x8
  60:	mov	w1, w23
  64:	mov	x2, x21
  68:	mov	x3, x20
  6c:	mov	x24, x0
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  7c:	mov	x0, x22
  80:	mov	x1, x24
  84:	mov	x2, x19
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  8c:	ldp	x20, x19, [sp, #80]
  90:	ldp	x22, x21, [sp, #64]
  94:	ldp	x24, x23, [sp, #48]
  98:	ldp	x29, x30, [sp, #32]
  9c:	add	sp, sp, #0x60
  a0:	ret
  a4:	mov	w0, w23
  a8:	mov	x1, x21
  ac:	mov	x2, x20
  b0:	ldp	x20, x19, [sp, #80]
  b4:	ldp	x22, x21, [sp, #64]
  b8:	ldp	x24, x23, [sp, #48]
  bc:	ldp	x29, x30, [sp, #32]
  c0:	mov	w3, wzr
  c4:	add	sp, sp, #0x60
  c8:	b	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  cc:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d0:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d4:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE:

0000000000000000 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x24, [x2]
  20:	cbz	x24, b8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xb8>
  24:	mov	x20, x0
  28:	ldr	x0, [x24]
  2c:	ldrb	w25, [x24, #8]
  30:	mov	x19, x4
  34:	mov	x21, x3
  38:	mov	x22, x2
  3c:	mov	w23, w1
  40:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  44:	cmp	w25, #0x10
  48:	mov	x3, x0
  4c:	b.ne	70 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0x70>  // b.any
  50:	ldr	x8, [x24, #32]
  54:	lsr	x9, x8, #32
  58:	cbnz	x9, d8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xd8>
  5c:	ldrb	w9, [x24, #40]
  60:	mov	x0, x3
  64:	orr	x1, x8, x9, lsl #32
  68:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  6c:	mov	x3, x0
  70:	mov	w2, #0x35                  	// #53
  74:	mov	x0, x20
  78:	mov	x1, x3
  7c:	mov	w3, w23
  80:	mov	x4, x22
  84:	mov	x5, x21
  88:	mov	x6, x19
  8c:	mov	x7, xzr
  90:	str	xzr, [sp]
  94:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
  98:	mov	x0, x20
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x22, x21, [sp, #64]
  a4:	ldp	x24, x23, [sp, #48]
  a8:	ldr	x25, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x60
  b4:	b	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  b8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  bc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x69                  	// #105
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  dc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x220                 	// #544
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInst8AssertOKEv:

0000000000000000 <_ZN4llvm8ICmpInst8AssertOKEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrh	w8, [x0, #18]
   c:	and	w8, w8, #0x7fff
  10:	sub	w8, w8, #0x20
  14:	cmp	w8, #0xa
  18:	b.cs	7c <_ZN4llvm8ICmpInst8AssertOKEv+0x7c>  // b.hs, b.nlast
  1c:	ldur	x8, [x0, #-48]
  20:	ldur	x9, [x0, #-24]
  24:	ldr	x8, [x8]
  28:	ldr	x9, [x9]
  2c:	cmp	x8, x9
  30:	b.ne	9c <_ZN4llvm8ICmpInst8AssertOKEv+0x9c>  // b.any
  34:	ldrb	w9, [x8, #8]
  38:	cmp	w9, #0x10
  3c:	mov	w10, w9
  40:	b.ne	50 <_ZN4llvm8ICmpInst8AssertOKEv+0x50>  // b.any
  44:	ldr	x10, [x8, #16]
  48:	ldr	x10, [x10]
  4c:	ldrb	w10, [x10, #8]
  50:	cmp	w10, #0xb
  54:	b.eq	74 <_ZN4llvm8ICmpInst8AssertOKEv+0x74>  // b.none
  58:	cmp	w9, #0x10
  5c:	b.ne	6c <_ZN4llvm8ICmpInst8AssertOKEv+0x6c>  // b.any
  60:	ldr	x8, [x8, #16]
  64:	ldr	x8, [x8]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xf
  70:	b.ne	bc <_ZN4llvm8ICmpInst8AssertOKEv+0xbc>  // b.any
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  80:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  84:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x489                 	// #1161
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x48b                 	// #1163
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x48f                 	// #1167
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroElide.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x30
       4:	stp	x29, x30, [sp, #32]
       8:	add	x29, sp, #0x20
       c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      10:	add	x8, x8, #0x0
      14:	add	x9, sp, #0x8
      18:	stp	x0, x8, [sp, #8]
      1c:	str	x9, [sp, #24]
      20:	adrp	x0, 0 <_ZSt15__once_callable>
      24:	ldr	x1, [x0]
      28:	add	x0, x0, #0x0
      2c:	blr	x1
      30:	mrs	x8, tpidr_el0
      34:	add	x9, sp, #0x10
      38:	str	x9, [x8, x0]
      3c:	adrp	x0, 0 <_ZSt11__once_call>
      40:	ldr	x1, [x0]
      44:	add	x0, x0, #0x0
      48:	blr	x1
      4c:	adrp	x10, 0 <__pthread_key_create>
      50:	ldr	x10, [x10]
      54:	adrp	x9, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      58:	add	x9, x9, #0x0
      5c:	str	x9, [x8, x0]
      60:	cbz	x10, 88 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE+0x88>
      64:	adrp	x1, 0 <__once_proxy>
      68:	ldr	x1, [x1]
      6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      70:	add	x0, x0, #0x0
      74:	bl	0 <pthread_once>
      78:	cbnz	w0, 8c <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE+0x8c>
      7c:	ldp	x29, x30, [sp, #32]
      80:	add	sp, sp, #0x30
      84:	ret
      88:	mov	w0, #0xffffffff            	// #-1
      8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL33initializeCoroElideLegacyPassOnceRN4llvm12PassRegistryE>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	stp	x20, x19, [sp, #16]
      98:	mov	x29, sp
      9c:	mov	x19, x0
      a0:	bl	0 <_ZN4llvm34initializeAAResultsWrapperPassPassERNS_12PassRegistryE>
      a4:	mov	w0, #0x50                  	// #80
      a8:	bl	0 <_Znwm>
      ac:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      b0:	add	x8, x8, #0x0
      b4:	mov	w9, #0x41                  	// #65
      b8:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      bc:	add	x10, x10, #0x0
      c0:	stp	x8, x9, [x0]
      c4:	mov	w8, #0xa                   	// #10
      c8:	stp	x10, x8, [x0, #16]
      cc:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      d0:	add	x8, x8, #0x0
      d4:	str	x8, [x0, #32]
      d8:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
      dc:	mov	x20, x0
      e0:	add	x8, x8, #0x0
      e4:	strh	wzr, [x0, #40]
      e8:	strb	wzr, [x0, #42]
      ec:	stp	xzr, xzr, [x0, #48]
      f0:	stp	xzr, x8, [x0, #64]
      f4:	mov	w2, #0x1                   	// #1
      f8:	mov	x0, x19
      fc:	mov	x1, x20
     100:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
     104:	mov	x0, x20
     108:	ldp	x20, x19, [sp, #16]
     10c:	ldp	x29, x30, [sp], #32
     110:	ret

0000000000000114 <_ZN4llvm25createCoroElideLegacyPassEv>:
     114:	sub	sp, sp, #0x30
     118:	stp	x29, x30, [sp, #16]
     11c:	str	x19, [sp, #32]
     120:	add	x29, sp, #0x10
     124:	mov	w0, #0x28                  	// #40
     128:	bl	0 <_Znwm>
     12c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     130:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     134:	add	x8, x8, #0x0
     138:	mov	w9, #0x2                   	// #2
     13c:	add	x10, x10, #0x0
     140:	mov	x19, x0
     144:	stp	xzr, x8, [x0, #8]
     148:	str	w9, [x0, #24]
     14c:	str	x10, [x0]
     150:	str	xzr, [x0, #32]
     154:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     158:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     15c:	add	x8, x8, #0x0
     160:	add	x9, x29, #0x18
     164:	str	x0, [x29, #24]
     168:	stp	x8, x9, [sp]
     16c:	adrp	x0, 0 <_ZSt15__once_callable>
     170:	ldr	x1, [x0]
     174:	add	x0, x0, #0x0
     178:	blr	x1
     17c:	mrs	x8, tpidr_el0
     180:	mov	x9, sp
     184:	str	x9, [x8, x0]
     188:	adrp	x0, 0 <_ZSt11__once_call>
     18c:	ldr	x1, [x0]
     190:	add	x0, x0, #0x0
     194:	blr	x1
     198:	adrp	x10, 0 <__pthread_key_create>
     19c:	ldr	x10, [x10]
     1a0:	adrp	x9, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     1a4:	add	x9, x9, #0x0
     1a8:	str	x9, [x8, x0]
     1ac:	cbz	x10, 1dc <_ZN4llvm25createCoroElideLegacyPassEv+0xc8>
     1b0:	adrp	x1, 0 <__once_proxy>
     1b4:	ldr	x1, [x1]
     1b8:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     1bc:	add	x0, x0, #0x0
     1c0:	bl	0 <pthread_once>
     1c4:	cbnz	w0, 1e0 <_ZN4llvm25createCoroElideLegacyPassEv+0xcc>
     1c8:	mov	x0, x19
     1cc:	ldr	x19, [sp, #32]
     1d0:	ldp	x29, x30, [sp, #16]
     1d4:	add	sp, sp, #0x30
     1d8:	ret
     1dc:	mov	w0, #0xffffffff            	// #-1
     1e0:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e4 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroElideLegacyEEEPNS_4PassEv>:
     1e4:	sub	sp, sp, #0x30
     1e8:	stp	x29, x30, [sp, #16]
     1ec:	str	x19, [sp, #32]
     1f0:	add	x29, sp, #0x10
     1f4:	mov	w0, #0x28                  	// #40
     1f8:	bl	0 <_Znwm>
     1fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     200:	adrp	x10, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     204:	add	x8, x8, #0x0
     208:	mov	w9, #0x2                   	// #2
     20c:	add	x10, x10, #0x0
     210:	mov	x19, x0
     214:	stp	xzr, x8, [x0, #8]
     218:	str	w9, [x0, #24]
     21c:	str	x10, [x0]
     220:	str	xzr, [x0, #32]
     224:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     228:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     22c:	add	x8, x8, #0x0
     230:	add	x9, x29, #0x18
     234:	str	x0, [x29, #24]
     238:	stp	x8, x9, [sp]
     23c:	adrp	x0, 0 <_ZSt15__once_callable>
     240:	ldr	x1, [x0]
     244:	add	x0, x0, #0x0
     248:	blr	x1
     24c:	mrs	x8, tpidr_el0
     250:	mov	x9, sp
     254:	str	x9, [x8, x0]
     258:	adrp	x0, 0 <_ZSt11__once_call>
     25c:	ldr	x1, [x0]
     260:	add	x0, x0, #0x0
     264:	blr	x1
     268:	adrp	x10, 0 <__pthread_key_create>
     26c:	ldr	x10, [x10]
     270:	adrp	x9, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     274:	add	x9, x9, #0x0
     278:	str	x9, [x8, x0]
     27c:	cbz	x10, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroElideLegacyEEEPNS_4PassEv+0xc8>
     280:	adrp	x1, 0 <__once_proxy>
     284:	ldr	x1, [x1]
     288:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     28c:	add	x0, x0, #0x0
     290:	bl	0 <pthread_once>
     294:	cbnz	w0, 2b0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroElideLegacyEEEPNS_4PassEv+0xcc>
     298:	mov	x0, x19
     29c:	ldr	x19, [sp, #32]
     2a0:	ldp	x29, x30, [sp, #16]
     2a4:	add	sp, sp, #0x30
     2a8:	ret
     2ac:	mov	w0, #0xffffffff            	// #-1
     2b0:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b4 <_ZN12_GLOBAL__N_115CoroElideLegacyD2Ev>:
     2b4:	stp	x29, x30, [sp, #-32]!
     2b8:	str	x19, [sp, #16]
     2bc:	mov	x29, sp
     2c0:	mov	x19, x0
     2c4:	ldr	x0, [x0, #32]
     2c8:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     2cc:	add	x8, x8, #0x0
     2d0:	str	x8, [x19]
     2d4:	cbz	x0, 2dc <_ZN12_GLOBAL__N_115CoroElideLegacyD2Ev+0x28>
     2d8:	bl	1b34 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     2dc:	str	xzr, [x19, #32]
     2e0:	mov	x0, x19
     2e4:	ldr	x19, [sp, #16]
     2e8:	ldp	x29, x30, [sp], #32
     2ec:	b	0 <_ZN4llvm4PassD2Ev>

00000000000002f0 <_ZN12_GLOBAL__N_115CoroElideLegacyD0Ev>:
     2f0:	stp	x29, x30, [sp, #-32]!
     2f4:	str	x19, [sp, #16]
     2f8:	mov	x29, sp
     2fc:	mov	x19, x0
     300:	ldr	x0, [x0, #32]
     304:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     308:	add	x8, x8, #0x0
     30c:	str	x8, [x19]
     310:	cbz	x0, 318 <_ZN12_GLOBAL__N_115CoroElideLegacyD0Ev+0x28>
     314:	bl	1b34 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     318:	mov	x0, x19
     31c:	str	xzr, [x19, #32]
     320:	bl	0 <_ZN4llvm4PassD2Ev>
     324:	mov	x0, x19
     328:	ldr	x19, [sp, #16]
     32c:	ldp	x29, x30, [sp], #32
     330:	b	0 <_ZdlPv>

0000000000000334 <_ZNK12_GLOBAL__N_115CoroElideLegacy11getPassNameEv>:
     334:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     338:	add	x0, x0, #0x0
     33c:	mov	w1, #0x11                  	// #17
     340:	ret

0000000000000344 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE>:
     344:	sub	sp, sp, #0x40
     348:	stp	x29, x30, [sp, #16]
     34c:	str	x21, [sp, #32]
     350:	stp	x20, x19, [sp, #48]
     354:	add	x29, sp, #0x10
     358:	mov	x20, x1
     35c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     360:	mov	x19, x0
     364:	add	x8, x8, #0x0
     368:	mov	w9, #0xc                   	// #12
     36c:	mov	x1, sp
     370:	mov	w2, #0x1                   	// #1
     374:	mov	x0, x20
     378:	stp	x8, x9, [sp]
     37c:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     380:	tbz	w0, #0, 400 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE+0xbc>
     384:	mov	w0, #0x100                 	// #256
     388:	bl	0 <_Znwm>
     38c:	mov	x1, x20
     390:	mov	x21, x0
     394:	bl	0 <_ZN4llvm4coro11LowererBaseC2ERNS_6ModuleE>
     398:	add	x8, x21, #0x38
     39c:	str	x8, [x21, #40]
     3a0:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     3a4:	ldr	d0, [x8]
     3a8:	add	x8, x21, #0x68
     3ac:	str	x8, [x21, #88]
     3b0:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     3b4:	ldr	d1, [x8]
     3b8:	add	x8, x21, #0x80
     3bc:	str	x8, [x21, #112]
     3c0:	add	x8, x21, #0x98
     3c4:	str	x8, [x21, #136]
     3c8:	add	x8, x21, #0xc8
     3cc:	str	x8, [x21, #184]
     3d0:	add	x8, x21, #0xf8
     3d4:	str	x8, [x21, #232]
     3d8:	str	d0, [x21, #48]
     3dc:	str	d1, [x21, #96]
     3e0:	str	d1, [x21, #120]
     3e4:	str	d0, [x21, #144]
     3e8:	str	d0, [x21, #192]
     3ec:	str	d1, [x21, #240]
     3f0:	ldr	x0, [x19, #32]
     3f4:	str	x21, [x19, #32]
     3f8:	cbz	x0, 400 <_ZN12_GLOBAL__N_115CoroElideLegacy16doInitializationERN4llvm6ModuleE+0xbc>
     3fc:	bl	1b34 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>
     400:	ldp	x20, x19, [sp, #48]
     404:	ldr	x21, [sp, #32]
     408:	ldp	x29, x30, [sp, #16]
     40c:	mov	w0, wzr
     410:	add	sp, sp, #0x40
     414:	ret

0000000000000418 <_ZNK12_GLOBAL__N_115CoroElideLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     418:	stp	x29, x30, [sp, #-32]!
     41c:	str	x19, [sp, #16]
     420:	mov	x29, sp
     424:	mov	x19, x1
     428:	adrp	x1, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     42c:	ldr	x1, [x1]
     430:	mov	x0, x19
     434:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     438:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     43c:	ldr	x1, [x1]
     440:	mov	x0, x19
     444:	ldr	x19, [sp, #16]
     448:	ldp	x29, x30, [sp], #32
     44c:	b	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>

0000000000000450 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE>:
     450:	sub	sp, sp, #0x1f0
     454:	stp	d9, d8, [sp, #384]
     458:	stp	x29, x30, [sp, #400]
     45c:	stp	x28, x27, [sp, #416]
     460:	stp	x26, x25, [sp, #432]
     464:	stp	x24, x23, [sp, #448]
     468:	stp	x22, x21, [sp, #464]
     46c:	stp	x20, x19, [sp, #480]
     470:	add	x29, sp, #0x180
     474:	ldr	x8, [x0, #32]
     478:	cbz	x8, 4f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa0>
     47c:	mov	x26, x0
     480:	mov	x20, x1
     484:	add	x0, x1, #0x70
     488:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     48c:	add	x1, x1, #0x0
     490:	mov	w2, #0x12                  	// #18
     494:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     498:	tbz	w0, #0, 4f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa8>
     49c:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     4a0:	ldr	d0, [x8]
     4a4:	add	x8, sp, #0x60
     4a8:	add	x21, x8, #0x10
     4ac:	sub	x0, x29, #0x70
     4b0:	mov	x1, x20
     4b4:	str	x21, [sp, #96]
     4b8:	str	d0, [sp, #104]
     4bc:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     4c0:	ldp	x22, x24, [x29, #-112]
     4c4:	ldur	x25, [x29, #-96]
     4c8:	add	x23, x20, #0x48
     4cc:	cmp	x22, x23
     4d0:	cset	w8, ne  // ne = any
     4d4:	cmp	x25, #0x0
     4d8:	cset	w9, ne  // ne = any
     4dc:	cmp	x23, x24
     4e0:	b.ne	51c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcc>  // b.any
     4e4:	and	w8, w8, w9
     4e8:	cbz	w8, 638 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1e8>
     4ec:	b	51c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcc>
     4f0:	mov	w21, wzr
     4f4:	b	16cc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x127c>
     4f8:	mov	w21, wzr
     4fc:	b	6fc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2ac>
     500:	add	x0, sp, #0x60
     504:	mov	w3, #0x8                   	// #8
     508:	mov	x1, x21
     50c:	mov	x2, xzr
     510:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     514:	ldr	w8, [sp, #104]
     518:	b	5a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x158>
     51c:	ldrb	w8, [x25]
     520:	tbnz	w8, #2, 1734 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12e4>
     524:	sub	x8, x25, #0x18
     528:	cmp	x25, #0x0
     52c:	csel	x19, xzr, x8, eq  // eq = none
     530:	cbz	x25, 1984 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1534>
     534:	ldrb	w8, [x19, #16]
     538:	cmp	w8, #0x50
     53c:	b.ne	5c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x174>  // b.any
     540:	ldur	x8, [x19, #-24]
     544:	cbz	x8, 5c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x174>
     548:	ldrb	w9, [x8, #16]
     54c:	cbnz	w9, 5c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x174>
     550:	ldrb	w9, [x8, #33]
     554:	tbz	w9, #5, 5c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x174>
     558:	ldr	w8, [x8, #36]
     55c:	cmp	w8, #0x22
     560:	b.ne	5c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x174>  // b.any
     564:	mov	w1, #0x1                   	// #1
     568:	mov	x0, x19
     56c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     570:	cbz	x0, 1774 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1324>
     574:	ldrb	w8, [x0, #16]
     578:	cmp	w8, #0xd
     57c:	b.ne	1794 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1344>  // b.any
     580:	add	x0, x0, #0x18
     584:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     588:	add	x8, x0, #0x1
     58c:	cmp	x8, #0x4
     590:	b.cs	17b4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1364>  // b.hs, b.nlast
     594:	cmn	w0, #0x1
     598:	b.ne	5c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x174>  // b.any
     59c:	ldp	w8, w9, [sp, #104]
     5a0:	cmp	w8, w9
     5a4:	b.cs	500 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb0>  // b.hs, b.nlast
     5a8:	ldr	x9, [sp, #96]
     5ac:	str	x19, [x9, w8, uxtw #3]
     5b0:	ldp	w8, w9, [sp, #104]
     5b4:	cmp	w8, w9
     5b8:	b.cs	1754 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1304>  // b.hs, b.nlast
     5bc:	add	w8, w8, #0x1
     5c0:	str	w8, [sp, #104]
     5c4:	ldrb	w8, [x24]
     5c8:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
     5cc:	ldr	x25, [x25, #8]
     5d0:	sub	x8, x24, #0x18
     5d4:	cmp	x24, #0x0
     5d8:	csel	x8, xzr, x8, eq  // eq = none
     5dc:	add	x8, x8, #0x28
     5e0:	cmp	x8, x25
     5e4:	b.ne	618 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1c8>  // b.any
     5e8:	ldr	x24, [x24, #8]
     5ec:	cmp	x22, x24
     5f0:	b.eq	618 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1c8>  // b.none
     5f4:	ldrb	w8, [x24]
     5f8:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
     5fc:	sub	x8, x24, #0x18
     600:	cmp	x24, #0x0
     604:	csel	x8, xzr, x8, eq  // eq = none
     608:	ldr	x25, [x8, #48]
     60c:	add	x8, x8, #0x28
     610:	cmp	x8, x25
     614:	b.eq	5e8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x198>  // b.none
     618:	cmp	x22, x23
     61c:	cset	w8, ne  // ne = any
     620:	cmp	x25, #0x0
     624:	cset	w9, ne  // ne = any
     628:	cmp	x23, x24
     62c:	b.ne	51c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcc>  // b.any
     630:	and	w8, w8, w9
     634:	tbnz	w8, #0, 51c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcc>
     638:	ldr	w8, [sp, #104]
     63c:	cbz	w8, 6e0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x290>
     640:	ldr	x0, [x20, #40]
     644:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     648:	add	x1, x1, #0x0
     64c:	mov	w2, #0x13                  	// #19
     650:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     654:	cbz	x0, 1b14 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x16c4>
     658:	ldr	w8, [sp, #104]
     65c:	cbz	w8, 6d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x288>
     660:	ldr	x21, [sp, #96]
     664:	mov	x19, x0
     668:	ldr	x9, [x21]
     66c:	ldr	x1, [x9]
     670:	ldr	x9, [x0]
     674:	cmp	x9, x1
     678:	b.eq	6b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x260>  // b.none
     67c:	ldrb	w8, [x9, #8]
     680:	cmp	w8, #0xf
     684:	b.ne	18c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1474>  // b.any
     688:	ldrb	w8, [x1, #8]
     68c:	cmp	w8, #0xf
     690:	b.ne	18c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1474>  // b.any
     694:	mov	x0, x19
     698:	mov	w2, wzr
     69c:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
     6a0:	ldr	w8, [sp, #104]
     6a4:	cbz	w8, 6d8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x288>
     6a8:	ldr	x21, [sp, #96]
     6ac:	mov	x19, x0
     6b0:	add	x22, x21, x8, lsl #3
     6b4:	ldr	x0, [x21], #8
     6b8:	mov	x1, x19
     6bc:	mov	x2, xzr
     6c0:	mov	x3, xzr
     6c4:	mov	x4, xzr
     6c8:	mov	x5, xzr
     6cc:	bl	0 <_ZN4llvm29replaceAndRecursivelySimplifyEPNS_11InstructionEPNS_5ValueEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_14SmallSetVectorIS1_Lj8EEE>
     6d0:	cmp	x22, x21
     6d4:	b.ne	6b4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x264>  // b.any
     6d8:	mov	w21, #0x1                   	// #1
     6dc:	b	6e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x294>
     6e0:	mov	w21, wzr
     6e4:	ldr	x0, [sp, #96]
     6e8:	add	x8, sp, #0x60
     6ec:	add	x8, x8, #0x10
     6f0:	cmp	x0, x8
     6f4:	b.eq	6fc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2ac>  // b.none
     6f8:	bl	0 <free>
     6fc:	ldr	x8, [x26, #32]
     700:	sub	x0, x29, #0x70
     704:	mov	x1, x20
     708:	str	wzr, [x8, #48]
     70c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     710:	ldp	x22, x24, [x29, #-112]
     714:	ldur	x25, [x29, #-96]
     718:	add	x23, x20, #0x48
     71c:	cmp	x22, x23
     720:	cset	w8, ne  // ne = any
     724:	cmp	x25, #0x0
     728:	cset	w9, ne  // ne = any
     72c:	cmp	x23, x24
     730:	b.ne	75c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x30c>  // b.any
     734:	and	w8, w8, w9
     738:	cbz	w8, 880 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x430>
     73c:	b	75c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x30c>
     740:	add	x0, x20, #0x28
     744:	add	x1, x0, #0x10
     748:	mov	w3, #0x8                   	// #8
     74c:	mov	x2, xzr
     750:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     754:	ldr	w8, [x20, #48]
     758:	b	7f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3a0>
     75c:	ldrb	w8, [x25]
     760:	tbnz	w8, #2, 1734 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12e4>
     764:	sub	x8, x25, #0x18
     768:	cmp	x25, #0x0
     76c:	csel	x19, xzr, x8, eq  // eq = none
     770:	cbz	x25, 18e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1494>
     774:	ldrb	w8, [x19, #16]
     778:	cmp	w8, #0x50
     77c:	b.ne	80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>  // b.any
     780:	ldur	x8, [x19, #-24]
     784:	cbz	x8, 80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>
     788:	ldrb	w9, [x8, #16]
     78c:	cbnz	w9, 80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>
     790:	ldrb	w9, [x8, #33]
     794:	tbz	w9, #5, 80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>
     798:	ldr	w8, [x8, #36]
     79c:	cmp	w8, #0x18
     7a0:	b.ne	80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>  // b.any
     7a4:	mov	x0, x19
     7a8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     7ac:	cbz	x1, 80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>
     7b0:	mov	w1, #0x2                   	// #2
     7b4:	mov	x0, x19
     7b8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     7bc:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     7c0:	cbz	x0, 1a94 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1644>
     7c4:	ldrb	w8, [x0, #16]
     7c8:	mov	x20, x0
     7cc:	cbnz	w8, 1ab4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1664>
     7d0:	mov	x0, x19
     7d4:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     7d8:	cmp	x0, x20
     7dc:	b.eq	80c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3bc>  // b.none
     7e0:	ldr	x20, [x26, #32]
     7e4:	ldp	w8, w9, [x20, #48]
     7e8:	cmp	w8, w9
     7ec:	b.cs	740 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x2f0>  // b.hs, b.nlast
     7f0:	ldr	x9, [x20, #40]
     7f4:	str	x19, [x9, w8, uxtw #3]
     7f8:	ldp	w8, w9, [x20, #48]
     7fc:	cmp	w8, w9
     800:	b.cs	1754 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1304>  // b.hs, b.nlast
     804:	add	w8, w8, #0x1
     808:	str	w8, [x20, #48]
     80c:	ldrb	w8, [x24]
     810:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
     814:	ldr	x25, [x25, #8]
     818:	sub	x8, x24, #0x18
     81c:	cmp	x24, #0x0
     820:	csel	x8, xzr, x8, eq  // eq = none
     824:	add	x8, x8, #0x28
     828:	cmp	x8, x25
     82c:	b.ne	860 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x410>  // b.any
     830:	ldr	x24, [x24, #8]
     834:	cmp	x22, x24
     838:	b.eq	860 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x410>  // b.none
     83c:	ldrb	w8, [x24]
     840:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
     844:	sub	x8, x24, #0x18
     848:	cmp	x24, #0x0
     84c:	csel	x8, xzr, x8, eq  // eq = none
     850:	ldr	x25, [x8, #48]
     854:	add	x8, x8, #0x28
     858:	cmp	x8, x25
     85c:	b.eq	830 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x3e0>  // b.none
     860:	cmp	x22, x23
     864:	cset	w8, ne  // ne = any
     868:	cmp	x25, #0x0
     86c:	cset	w9, ne  // ne = any
     870:	cmp	x23, x24
     874:	b.ne	75c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x30c>  // b.any
     878:	and	w8, w8, w9
     87c:	tbnz	w8, #0, 75c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x30c>
     880:	ldr	x8, [x26, #32]
     884:	ldr	w8, [x8, #48]
     888:	cbz	w8, 16cc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x127c>
     88c:	ldr	x9, [x26, #8]
     890:	cbz	x9, 1ad4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1684>
     894:	ldr	x8, [x9]
     898:	ldr	x9, [x9, #8]
     89c:	cmp	x8, x9
     8a0:	b.eq	1a54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1604>  // b.none
     8a4:	adrp	x10, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     8a8:	ldr	x10, [x10]
     8ac:	mov	x0, xzr
     8b0:	ldp	x11, x12, [x8]
     8b4:	cmp	x11, x10
     8b8:	csel	x0, x12, x0, eq  // eq = none
     8bc:	b.eq	8cc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x47c>  // b.none
     8c0:	add	x8, x8, #0x10
     8c4:	cmp	x8, x9
     8c8:	b.ne	8b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x460>  // b.any
     8cc:	cbz	x0, 1a54 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1604>
     8d0:	ldr	x8, [x0]
     8d4:	adrp	x1, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     8d8:	ldr	x8, [x8, #96]
     8dc:	ldr	x1, [x1]
     8e0:	blr	x8
     8e4:	ldr	x10, [x26, #8]
     8e8:	cbz	x10, 1af4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x16a4>
     8ec:	ldr	x9, [x10]
     8f0:	ldr	x10, [x10, #8]
     8f4:	cmp	x9, x10
     8f8:	b.eq	1a74 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1624>  // b.none
     8fc:	mov	x8, x0
     900:	ldr	x8, [x8, #32]
     904:	mov	x0, xzr
     908:	str	x8, [sp, #88]
     90c:	adrp	x8, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     910:	ldr	x8, [x8]
     914:	ldp	x11, x12, [x9]
     918:	cmp	x11, x8
     91c:	csel	x0, x12, x0, eq  // eq = none
     920:	b.eq	930 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4e0>  // b.none
     924:	add	x9, x9, #0x10
     928:	cmp	x9, x10
     92c:	b.ne	914 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x4c4>  // b.any
     930:	cbz	x0, 1a74 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1624>
     934:	ldr	x8, [x0]
     938:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     93c:	ldr	x8, [x8, #96]
     940:	ldr	x1, [x1]
     944:	blr	x8
     948:	ldr	x20, [x26, #32]
     94c:	ldr	w8, [x20, #48]
     950:	cbz	w8, 16cc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x127c>
     954:	ldr	x13, [x20, #40]
     958:	adrp	x11, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     95c:	adrp	x12, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     960:	ldr	d8, [x11]
     964:	ldr	d9, [x12]
     968:	add	x9, x0, #0x20
     96c:	sub	x14, x29, #0x70
     970:	str	x9, [sp, #80]
     974:	sub	x15, x29, #0xb8
     978:	add	x9, sp, #0x60
     97c:	sub	x10, x29, #0x70
     980:	add	x14, x14, #0x28
     984:	str	x14, [sp, #16]
     988:	add	x14, x15, #0x28
     98c:	add	x11, x9, #0x28
     990:	add	x21, x10, #0x10
     994:	add	x28, x9, #0x10
     998:	add	x8, x13, x8, lsl #3
     99c:	stp	x11, x26, [sp, #24]
     9a0:	str	x14, [sp, #8]
     9a4:	str	x8, [sp, #40]
     9a8:	ldr	x19, [x13]
     9ac:	str	x13, [sp, #64]
     9b0:	str	wzr, [x20, #96]
     9b4:	str	wzr, [x20, #120]
     9b8:	mov	x0, x19
     9bc:	str	wzr, [x20, #240]
     9c0:	str	wzr, [x20, #144]
     9c4:	str	wzr, [x20, #192]
     9c8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     9cc:	ldr	x23, [x19, #8]
     9d0:	str	x19, [sp, #72]
     9d4:	cbz	x23, b30 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6e0>
     9d8:	add	x24, x20, #0x58
     9dc:	add	x27, x20, #0x70
     9e0:	add	x8, x20, #0x80
     9e4:	add	x25, x20, #0xe8
     9e8:	add	x26, x24, #0x10
     9ec:	add	x19, x20, #0xf8
     9f0:	str	x8, [sp, #56]
     9f4:	b	a00 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5b0>
     9f8:	ldr	x23, [x23, #8]
     9fc:	cbz	x23, b30 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6e0>
     a00:	mov	x0, x23
     a04:	bl	0 <_ZNK4llvm3Use7getUserEv>
     a08:	cbz	x0, 17d4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1384>
     a0c:	ldrb	w8, [x0, #16]
     a10:	mov	x22, x0
     a14:	cmp	w8, #0x50
     a18:	b.ne	9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>  // b.any
     a1c:	ldur	x8, [x22, #-24]
     a20:	cbz	x8, 9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>
     a24:	ldrb	w9, [x8, #16]
     a28:	cbnz	w9, 9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>
     a2c:	ldrb	w9, [x8, #33]
     a30:	tbz	w9, #5, 9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>
     a34:	ldr	w9, [x8, #36]
     a38:	cmp	w9, #0x12
     a3c:	b.ne	a6c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x61c>  // b.any
     a40:	ldp	w8, w9, [x20, #96]
     a44:	cmp	w8, w9
     a48:	b.cs	adc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x68c>  // b.hs, b.nlast
     a4c:	ldr	x9, [x20, #88]
     a50:	str	x22, [x9, w8, uxtw #3]
     a54:	ldp	w8, w9, [x20, #96]
     a58:	cmp	w8, w9
     a5c:	b.cs	1754 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1304>  // b.hs, b.nlast
     a60:	add	w8, w8, #0x1
     a64:	str	w8, [x20, #96]
     a68:	b	9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>
     a6c:	ldr	w9, [x8, #36]
     a70:	cmp	w9, #0xe
     a74:	b.ne	aa4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x654>  // b.any
     a78:	ldp	w8, w9, [x20, #120]
     a7c:	cmp	w8, w9
     a80:	b.cs	af8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6a8>  // b.hs, b.nlast
     a84:	ldr	x9, [x20, #112]
     a88:	str	x22, [x9, w8, uxtw #3]
     a8c:	ldp	w8, w9, [x20, #120]
     a90:	cmp	w8, w9
     a94:	b.cs	1754 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1304>  // b.hs, b.nlast
     a98:	add	w8, w8, #0x1
     a9c:	str	w8, [x20, #120]
     aa0:	b	9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>
     aa4:	ldr	w8, [x8, #36]
     aa8:	cmp	w8, #0x17
     aac:	b.ne	9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>  // b.any
     ab0:	ldp	w8, w9, [x20, #240]
     ab4:	cmp	w8, w9
     ab8:	b.cs	b14 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x6c4>  // b.hs, b.nlast
     abc:	ldr	x9, [x20, #232]
     ac0:	str	x22, [x9, w8, uxtw #3]
     ac4:	ldp	w8, w9, [x20, #240]
     ac8:	cmp	w8, w9
     acc:	b.cs	1754 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1304>  // b.hs, b.nlast
     ad0:	add	w8, w8, #0x1
     ad4:	str	w8, [x20, #240]
     ad8:	b	9f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5a8>
     adc:	mov	w3, #0x8                   	// #8
     ae0:	mov	x0, x24
     ae4:	mov	x1, x26
     ae8:	mov	x2, xzr
     aec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     af0:	ldr	w8, [x20, #96]
     af4:	b	a4c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x5fc>
     af8:	ldr	x1, [sp, #56]
     afc:	mov	w3, #0x8                   	// #8
     b00:	mov	x0, x27
     b04:	mov	x2, xzr
     b08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     b0c:	ldr	w8, [x20, #120]
     b10:	b	a84 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x634>
     b14:	mov	w3, #0x8                   	// #8
     b18:	mov	x0, x25
     b1c:	mov	x1, x19
     b20:	mov	x2, xzr
     b24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     b28:	ldr	w8, [x20, #240]
     b2c:	b	abc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x66c>
     b30:	ldr	w8, [x20, #96]
     b34:	add	x26, x20, #0x88
     b38:	add	x27, x20, #0xb8
     b3c:	cbz	w8, c84 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x834>
     b40:	ldr	x23, [x20, #88]
     b44:	add	x9, x27, #0x10
     b48:	add	x25, x26, #0x10
     b4c:	str	x9, [sp, #56]
     b50:	add	x24, x23, x8, lsl #3
     b54:	b	b64 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x714>
     b58:	add	x23, x23, #0x8
     b5c:	cmp	x23, x24
     b60:	b.eq	c84 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x834>  // b.none
     b64:	ldr	x19, [x23]
     b68:	mov	x0, x19
     b6c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     b70:	ldr	x19, [x19, #8]
     b74:	cbz	x19, b58 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x708>
     b78:	mov	x0, x19
     b7c:	bl	0 <_ZNK4llvm3Use7getUserEv>
     b80:	cbz	x0, 16f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12a4>
     b84:	ldrb	w8, [x0, #16]
     b88:	mov	x22, x0
     b8c:	cmp	w8, #0x50
     b90:	b.ne	b70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>  // b.any
     b94:	ldur	x8, [x22, #-24]
     b98:	cbz	x8, b70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>
     b9c:	ldrb	w9, [x8, #16]
     ba0:	cbnz	w9, b70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>
     ba4:	ldrb	w9, [x8, #33]
     ba8:	tbz	w9, #5, b70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>
     bac:	ldr	w8, [x8, #36]
     bb0:	cmp	w8, #0x22
     bb4:	b.ne	b70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>  // b.any
     bb8:	mov	w1, #0x1                   	// #1
     bbc:	mov	x0, x22
     bc0:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     bc4:	cbz	x0, 1774 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1324>
     bc8:	ldrb	w8, [x0, #16]
     bcc:	cmp	w8, #0xd
     bd0:	b.ne	1794 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1344>  // b.any
     bd4:	add	x0, x0, #0x18
     bd8:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     bdc:	add	x8, x0, #0x1
     be0:	cmp	x8, #0x4
     be4:	b.cs	17b4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1364>  // b.hs, b.nlast
     be8:	cmp	w0, #0x1
     bec:	b.eq	c20 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7d0>  // b.none
     bf0:	cbnz	w0, 17f4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13a4>
     bf4:	ldp	w8, w9, [x20, #144]
     bf8:	cmp	w8, w9
     bfc:	b.cs	c4c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7fc>  // b.hs, b.nlast
     c00:	ldr	x9, [x20, #136]
     c04:	str	x22, [x9, w8, uxtw #3]
     c08:	ldp	w8, w9, [x20, #144]
     c0c:	cmp	w8, w9
     c10:	b.cs	1754 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1304>  // b.hs, b.nlast
     c14:	add	w8, w8, #0x1
     c18:	str	w8, [x20, #144]
     c1c:	b	b70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>
     c20:	ldp	w8, w9, [x20, #192]
     c24:	cmp	w8, w9
     c28:	b.cs	c68 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x818>  // b.hs, b.nlast
     c2c:	ldr	x9, [x20, #184]
     c30:	str	x22, [x9, w8, uxtw #3]
     c34:	ldp	w8, w9, [x20, #192]
     c38:	cmp	w8, w9
     c3c:	b.cs	1754 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1304>  // b.hs, b.nlast
     c40:	add	w8, w8, #0x1
     c44:	str	w8, [x20, #192]
     c48:	b	b70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x720>
     c4c:	mov	w3, #0x8                   	// #8
     c50:	mov	x0, x26
     c54:	mov	x1, x25
     c58:	mov	x2, xzr
     c5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     c60:	ldr	w8, [x20, #144]
     c64:	b	c00 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7b0>
     c68:	ldr	x1, [sp, #56]
     c6c:	mov	w3, #0x8                   	// #8
     c70:	mov	x0, x27
     c74:	mov	x2, xzr
     c78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     c7c:	ldr	w8, [x20, #192]
     c80:	b	c2c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x7dc>
     c84:	ldr	x0, [sp, #72]
     c88:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
     c8c:	cbz	x1, 1904 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x14b4>
     c90:	mov	x0, x1
     c94:	sub	x1, x29, #0x70
     c98:	mov	w2, #0x1                   	// #1
     c9c:	mov	x3, xzr
     ca0:	stur	wzr, [x29, #-112]
     ca4:	str	x0, [sp, #56]
     ca8:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
     cac:	ldr	w8, [x20, #144]
     cb0:	mov	x24, x0
     cb4:	cbz	w8, d38 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8e8>
     cb8:	ldr	x22, [x26]
     cbc:	ldr	x9, [x22]
     cc0:	ldr	x1, [x9]
     cc4:	ldr	x9, [x24]
     cc8:	cmp	x9, x1
     ccc:	b.eq	d0c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8bc>  // b.none
     cd0:	ldrb	w8, [x9, #8]
     cd4:	cmp	w8, #0xf
     cd8:	b.ne	18c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1474>  // b.any
     cdc:	ldrb	w8, [x1, #8]
     ce0:	cmp	w8, #0xf
     ce4:	b.ne	18c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1474>  // b.any
     ce8:	mov	x0, x24
     cec:	mov	w2, wzr
     cf0:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
     cf4:	ldr	w8, [x20, #144]
     cf8:	cbz	w8, d38 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8e8>
     cfc:	ldr	x22, [x20, #136]
     d00:	mov	x19, x0
     d04:	add	x23, x22, x8, lsl #3
     d08:	b	d14 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8c4>
     d0c:	add	x23, x22, x8, lsl #3
     d10:	mov	x19, x24
     d14:	ldr	x0, [x22], #8
     d18:	mov	x1, x19
     d1c:	mov	x2, xzr
     d20:	mov	x3, xzr
     d24:	mov	x4, xzr
     d28:	mov	x5, xzr
     d2c:	bl	0 <_ZN4llvm29replaceAndRecursivelySimplifyEPNS_11InstructionEPNS_5ValueEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_14SmallSetVectorIS1_Lj8EEE>
     d30:	cmp	x23, x22
     d34:	b.ne	d14 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x8c4>  // b.any
     d38:	ldr	x0, [sp, #72]
     d3c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
     d40:	ldr	w8, [x20, #120]
     d44:	str	x24, [sp, #48]
     d48:	cbz	w8, 1084 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc34>
     d4c:	ldr	x8, [sp, #16]
     d50:	stur	d8, [x29, #-88]
     d54:	stur	wzr, [x29, #-80]
     d58:	add	x26, x0, #0x48
     d5c:	stp	xzr, x8, [x29, #-112]
     d60:	stur	x8, [x29, #-96]
     d64:	ldr	x22, [x0, #80]
     d68:	b	d70 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x920>
     d6c:	ldr	x22, [x22, #8]
     d70:	cmp	x26, x22
     d74:	b.eq	e9c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa4c>  // b.none
     d78:	ldrb	w8, [x22]
     d7c:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
     d80:	sub	x8, x22, #0x18
     d84:	cmp	x22, #0x0
     d88:	csel	x0, xzr, x8, eq  // eq = none
     d8c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     d90:	mov	x19, x0
     d94:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
     d98:	cbnz	w0, d6c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>
     d9c:	ldrb	w8, [x19, #16]
     da0:	sub	w8, w8, #0x1d
     da4:	cmp	w8, #0x6
     da8:	b.cc	d6c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>  // b.lo, b.ul, b.last
     dac:	ldp	x9, x8, [x29, #-104]
     db0:	cmp	x8, x9
     db4:	b.eq	e0c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9bc>  // b.none
     db8:	sub	x0, x29, #0x70
     dbc:	mov	x1, x19
     dc0:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
     dc4:	ldp	x9, x8, [x29, #-104]
     dc8:	sub	x11, x29, #0x70
     dcc:	add	x10, x11, #0x1c
     dd0:	add	x11, x11, #0x18
     dd4:	cmp	x8, x9
     dd8:	csel	x9, x10, x11, eq  // eq = none
     ddc:	ldr	w9, [x9]
     de0:	add	x8, x8, x9, lsl #3
     de4:	cmp	x8, x0
     de8:	b.cc	180c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13bc>  // b.lo, b.ul, b.last
     dec:	b.eq	d6c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>  // b.none
     df0:	ldr	x9, [x0]
     df4:	cmn	x9, #0x2
     df8:	b.cc	d6c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>  // b.lo, b.ul, b.last
     dfc:	add	x0, x0, #0x8
     e00:	cmp	x8, x0
     e04:	b.ne	df0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9a0>  // b.any
     e08:	b	d6c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x91c>
     e0c:	ldur	w9, [x29, #-84]
     e10:	cbz	w9, e64 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa14>
     e14:	mov	x0, xzr
     e18:	lsl	x10, x9, #3
     e1c:	mov	x11, x8
     e20:	ldr	x12, [x11]
     e24:	cmp	x12, x19
     e28:	b.eq	e94 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa44>  // b.none
     e2c:	cmn	x12, #0x2
     e30:	csel	x0, x11, x0, eq  // eq = none
     e34:	subs	x10, x10, #0x8
     e38:	add	x11, x11, #0x8
     e3c:	b.ne	e20 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x9d0>  // b.any
     e40:	cbz	x0, e64 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa14>
     e44:	str	x19, [x0]
     e48:	ldur	w8, [x29, #-80]
     e4c:	ldur	x9, [x29, #-112]
     e50:	sub	w8, w8, #0x1
     e54:	add	x9, x9, #0x1
     e58:	stur	w8, [x29, #-80]
     e5c:	stur	x9, [x29, #-112]
     e60:	b	dc4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x974>
     e64:	ldur	w10, [x29, #-88]
     e68:	cmp	w9, w10
     e6c:	b.cs	db8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x968>  // b.hs, b.nlast
     e70:	add	w10, w9, #0x1
     e74:	lsl	x9, x9, #3
     e78:	stur	w10, [x29, #-84]
     e7c:	str	x19, [x8, x9]
     e80:	ldp	x8, x10, [x29, #-112]
     e84:	add	x8, x8, #0x1
     e88:	stur	x8, [x29, #-112]
     e8c:	add	x0, x10, x9
     e90:	b	dc4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x974>
     e94:	mov	x0, x11
     e98:	b	dc4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x974>
     e9c:	ldr	x19, [sp, #8]
     ea0:	stur	d9, [x29, #-160]
     ea4:	stur	wzr, [x29, #-152]
     ea8:	stp	xzr, x19, [x29, #-184]
     eac:	stur	x19, [x29, #-168]
     eb0:	ldr	w8, [x20, #192]
     eb4:	cbz	w8, 1094 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc44>
     eb8:	ldr	x22, [x20, #184]
     ebc:	add	x26, x22, x8, lsl #3
     ec0:	b	ed0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa80>
     ec4:	add	x22, x22, #0x8
     ec8:	cmp	x22, x26
     ecc:	b.eq	1078 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc28>  // b.none
     ed0:	ldp	x8, x23, [x29, #-104]
     ed4:	sub	x10, x29, #0x70
     ed8:	add	x9, x10, #0x1c
     edc:	add	x10, x10, #0x18
     ee0:	cmp	x23, x8
     ee4:	csel	x8, x9, x10, eq  // eq = none
     ee8:	ldr	w8, [x8]
     eec:	ldr	x19, [x22]
     ef0:	add	x24, x23, x8, lsl #3
     ef4:	cbz	w8, f1c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xacc>
     ef8:	lsl	x9, x8, #3
     efc:	add	x8, x9, x23
     f00:	ldr	x10, [x23]
     f04:	cmn	x10, #0x2
     f08:	b.cc	f1c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xacc>  // b.lo, b.ul, b.last
     f0c:	subs	x9, x9, #0x8
     f10:	add	x23, x23, #0x8
     f14:	b.ne	f00 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xab0>  // b.any
     f18:	mov	x23, x8
     f1c:	cmp	x23, x24
     f20:	b.eq	ec4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa74>  // b.none
     f24:	ldur	x25, [x29, #-112]
     f28:	cmp	x23, x24
     f2c:	b.cs	1864 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1414>  // b.hs, b.nlast
     f30:	ldr	x2, [x23]
     f34:	ldr	x0, [sp, #80]
     f38:	mov	x1, x19
     f3c:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
     f40:	tbnz	w0, #0, f88 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb38>
     f44:	ldur	x8, [x29, #-112]
     f48:	cmp	x8, x25
     f4c:	b.ne	1884 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1434>  // b.any
     f50:	add	x23, x23, #0x8
     f54:	cmp	x23, x24
     f58:	b.hi	180c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13bc>  // b.pmore
     f5c:	b.eq	ec4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa74>  // b.none
     f60:	ldr	x8, [x23]
     f64:	cmn	x8, #0x2
     f68:	b.cc	f7c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb2c>  // b.lo, b.ul, b.last
     f6c:	add	x23, x23, #0x8
     f70:	cmp	x24, x23
     f74:	b.ne	f60 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb10>  // b.any
     f78:	b	ec4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa74>
     f7c:	cmp	x24, x23
     f80:	b.ne	f28 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xad8>  // b.any
     f84:	b	ec4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa74>
     f88:	ldp	x9, x8, [x29, #-176]
     f8c:	cmp	x8, x9
     f90:	b.eq	fe8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb98>  // b.none
     f94:	sub	x0, x29, #0xb8
     f98:	mov	x1, x19
     f9c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
     fa0:	ldp	x9, x8, [x29, #-176]
     fa4:	sub	x11, x29, #0xb8
     fa8:	add	x10, x11, #0x1c
     fac:	add	x11, x11, #0x18
     fb0:	cmp	x8, x9
     fb4:	csel	x9, x10, x11, eq  // eq = none
     fb8:	ldr	w9, [x9]
     fbc:	add	x8, x8, x9, lsl #3
     fc0:	cmp	x8, x0
     fc4:	b.cc	180c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13bc>  // b.lo, b.ul, b.last
     fc8:	b.eq	ec4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa74>  // b.none
     fcc:	ldr	x9, [x0]
     fd0:	cmn	x9, #0x2
     fd4:	b.cc	ec4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa74>  // b.lo, b.ul, b.last
     fd8:	add	x0, x0, #0x8
     fdc:	cmp	x8, x0
     fe0:	b.ne	fcc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb7c>  // b.any
     fe4:	b	ec4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xa74>
     fe8:	ldur	w9, [x29, #-156]
     fec:	cbz	w9, 1040 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbf0>
     ff0:	mov	x0, xzr
     ff4:	lsl	x10, x9, #3
     ff8:	mov	x11, x8
     ffc:	ldr	x12, [x11]
    1000:	cmp	x12, x19
    1004:	b.eq	1070 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc20>  // b.none
    1008:	cmn	x12, #0x2
    100c:	csel	x0, x11, x0, eq  // eq = none
    1010:	subs	x10, x10, #0x8
    1014:	add	x11, x11, #0x8
    1018:	b.ne	ffc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbac>  // b.any
    101c:	cbz	x0, 1040 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xbf0>
    1020:	str	x19, [x0]
    1024:	ldur	w8, [x29, #-152]
    1028:	ldur	x9, [x29, #-184]
    102c:	sub	w8, w8, #0x1
    1030:	add	x9, x9, #0x1
    1034:	stur	w8, [x29, #-152]
    1038:	stur	x9, [x29, #-184]
    103c:	b	fa0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb50>
    1040:	ldur	w10, [x29, #-160]
    1044:	cmp	w9, w10
    1048:	b.cs	f94 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb44>  // b.hs, b.nlast
    104c:	add	w10, w9, #0x1
    1050:	lsl	x9, x9, #3
    1054:	stur	w10, [x29, #-156]
    1058:	str	x19, [x8, x9]
    105c:	ldp	x8, x10, [x29, #-184]
    1060:	add	x8, x8, #0x1
    1064:	stur	x8, [x29, #-184]
    1068:	add	x0, x10, x9
    106c:	b	fa0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb50>
    1070:	mov	x0, x11
    1074:	b	fa0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xb50>
    1078:	ldp	x10, x19, [x29, #-176]
    107c:	ldp	w9, w8, [x29, #-160]
    1080:	b	109c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc4c>
    1084:	ldr	x19, [sp, #56]
    1088:	mov	w22, wzr
    108c:	mov	w8, #0x1                   	// #1
    1090:	b	12c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe74>
    1094:	mov	w9, #0x4                   	// #4
    1098:	mov	x10, x19
    109c:	ldr	x11, [sp, #24]
    10a0:	cmp	x19, x10
    10a4:	csel	w8, w8, w9, eq  // eq = none
    10a8:	add	x22, x19, w8, uxtw #3
    10ac:	stp	xzr, x11, [sp, #96]
    10b0:	str	x11, [sp, #112]
    10b4:	str	d8, [sp, #120]
    10b8:	str	wzr, [sp, #128]
    10bc:	cbz	w8, 10e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc94>
    10c0:	lsl	x9, x8, #3
    10c4:	add	x8, x9, x19
    10c8:	ldr	x10, [x19]
    10cc:	cmn	x10, #0x2
    10d0:	b.cc	10e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc94>  // b.lo, b.ul, b.last
    10d4:	subs	x9, x9, #0x8
    10d8:	add	x19, x19, #0x8
    10dc:	b.ne	10c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xc78>  // b.any
    10e0:	mov	x19, x8
    10e4:	cmp	x19, x22
    10e8:	b.eq	1268 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe18>  // b.none
    10ec:	ldur	x26, [x29, #-184]
    10f0:	cmp	x19, x22
    10f4:	b.cs	1924 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x14d4>  // b.hs, b.nlast
    10f8:	ldr	x0, [x19]
    10fc:	mov	w1, wzr
    1100:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1104:	cbz	x0, 1964 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1514>
    1108:	ldrb	w8, [x0, #16]
    110c:	mov	x1, x0
    1110:	cmp	w8, #0x50
    1114:	b.ne	16b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1260>  // b.any
    1118:	ldur	x8, [x1, #-24]
    111c:	cbz	x8, 16b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1260>
    1120:	ldrb	w9, [x8, #16]
    1124:	cbnz	w9, 16b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1260>
    1128:	ldrb	w9, [x8, #33]
    112c:	tbz	w9, #5, 16b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1260>
    1130:	ldr	w8, [x8, #36]
    1134:	cmp	w8, #0x12
    1138:	b.ne	16b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1260>  // b.any
    113c:	ldp	x8, x9, [sp, #104]
    1140:	cmp	x9, x8
    1144:	b.eq	11d0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd80>  // b.none
    1148:	add	x0, sp, #0x60
    114c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
    1150:	mov	x8, x0
    1154:	ldp	x9, x0, [sp, #104]
    1158:	ldp	w11, w10, [sp, #120]
    115c:	cmp	x0, x9
    1160:	csel	w11, w10, w11, eq  // eq = none
    1164:	add	x11, x0, w11, uxtw #3
    1168:	cmp	x11, x8
    116c:	b.cc	180c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13bc>  // b.lo, b.ul, b.last
    1170:	b.eq	118c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd3c>  // b.none
    1174:	ldr	x12, [x8]
    1178:	cmn	x12, #0x2
    117c:	b.cc	118c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd3c>  // b.lo, b.ul, b.last
    1180:	add	x8, x8, #0x8
    1184:	cmp	x11, x8
    1188:	b.ne	1174 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd24>  // b.any
    118c:	ldur	x8, [x29, #-184]
    1190:	cmp	x8, x26
    1194:	b.ne	1944 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x14f4>  // b.any
    1198:	add	x19, x19, #0x8
    119c:	cmp	x19, x22
    11a0:	b.hi	180c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13bc>  // b.pmore
    11a4:	b.eq	1260 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe10>  // b.none
    11a8:	ldr	x8, [x19]
    11ac:	cmn	x8, #0x2
    11b0:	b.cc	11c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd74>  // b.lo, b.ul, b.last
    11b4:	add	x19, x19, #0x8
    11b8:	cmp	x22, x19
    11bc:	b.ne	11a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd58>  // b.any
    11c0:	b	1260 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe10>
    11c4:	cmp	x22, x19
    11c8:	b.ne	10f0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xca0>  // b.any
    11cc:	b	1260 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe10>
    11d0:	ldr	w10, [sp, #124]
    11d4:	cbz	w10, 1228 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xdd8>
    11d8:	mov	x8, xzr
    11dc:	lsl	x11, x10, #3
    11e0:	mov	x12, x9
    11e4:	ldr	x13, [x12]
    11e8:	cmp	x13, x1
    11ec:	b.eq	1258 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe08>  // b.none
    11f0:	cmn	x13, #0x2
    11f4:	csel	x8, x12, x8, eq  // eq = none
    11f8:	subs	x11, x11, #0x8
    11fc:	add	x12, x12, #0x8
    1200:	b.ne	11e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd94>  // b.any
    1204:	cbz	x8, 1228 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xdd8>
    1208:	str	x1, [x8]
    120c:	ldr	w9, [sp, #128]
    1210:	ldr	x10, [sp, #96]
    1214:	sub	w9, w9, #0x1
    1218:	add	x10, x10, #0x1
    121c:	str	w9, [sp, #128]
    1220:	str	x10, [sp, #96]
    1224:	b	1154 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd04>
    1228:	ldr	w8, [sp, #120]
    122c:	cmp	w10, w8
    1230:	b.cs	1148 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xcf8>  // b.hs, b.nlast
    1234:	add	w8, w10, #0x1
    1238:	lsl	x10, x10, #3
    123c:	str	w8, [sp, #124]
    1240:	str	x1, [x9, x10]
    1244:	ldp	x8, x9, [sp, #96]
    1248:	add	x8, x8, #0x1
    124c:	str	x8, [sp, #96]
    1250:	add	x8, x9, x10
    1254:	b	1154 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd04>
    1258:	mov	x8, x12
    125c:	b	1154 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xd04>
    1260:	ldr	w8, [sp, #128]
    1264:	b	1278 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe28>
    1268:	ldr	x0, [sp, #24]
    126c:	mov	w8, wzr
    1270:	mov	w10, wzr
    1274:	mov	x9, x0
    1278:	ldr	w11, [x20, #96]
    127c:	sub	w8, w10, w8
    1280:	cmp	w11, w8
    1284:	cset	w22, eq  // eq = none
    1288:	ldr	x19, [sp, #56]
    128c:	cmp	x0, x9
    1290:	b.eq	1298 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe48>  // b.none
    1294:	bl	0 <free>
    1298:	ldp	x8, x0, [x29, #-176]
    129c:	cmp	x0, x8
    12a0:	b.eq	12a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe58>  // b.none
    12a4:	bl	0 <free>
    12a8:	ldp	x8, x0, [x29, #-104]
    12ac:	cmp	x0, x8
    12b0:	b.eq	12b8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe68>  // b.none
    12b4:	bl	0 <free>
    12b8:	cmp	w22, #0x0
    12bc:	mov	w8, #0x1                   	// #1
    12c0:	cinc	w8, w8, ne  // ne = any
    12c4:	sub	x1, x29, #0x70
    12c8:	mov	w2, #0x1                   	// #1
    12cc:	mov	x0, x19
    12d0:	mov	x3, xzr
    12d4:	stur	w8, [x29, #-112]
    12d8:	bl	0 <_ZN4llvm12ConstantExpr15getExtractValueEPNS_8ConstantENS_8ArrayRefIjEEPNS_4TypeE>
    12dc:	ldr	w8, [x20, #192]
    12e0:	cbz	w8, 135c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xf0c>
    12e4:	ldr	x23, [x27]
    12e8:	mov	x19, x0
    12ec:	ldr	x9, [x23]
    12f0:	ldr	x1, [x9]
    12f4:	ldr	x9, [x0]
    12f8:	cmp	x9, x1
    12fc:	b.eq	1334 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xee4>  // b.none
    1300:	ldrb	w8, [x9, #8]
    1304:	cmp	w8, #0xf
    1308:	b.ne	18c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1474>  // b.any
    130c:	ldrb	w8, [x1, #8]
    1310:	cmp	w8, #0xf
    1314:	b.ne	18c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1474>  // b.any
    1318:	mov	x0, x19
    131c:	mov	w2, wzr
    1320:	bl	0 <_ZN4llvm12ConstantExpr10getBitCastEPNS_8ConstantEPNS_4TypeEb>
    1324:	ldr	w8, [x20, #192]
    1328:	cbz	w8, 135c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xf0c>
    132c:	ldr	x23, [x20, #184]
    1330:	mov	x19, x0
    1334:	add	x24, x23, x8, lsl #3
    1338:	ldr	x0, [x23], #8
    133c:	mov	x1, x19
    1340:	mov	x2, xzr
    1344:	mov	x3, xzr
    1348:	mov	x4, xzr
    134c:	mov	x5, xzr
    1350:	bl	0 <_ZN4llvm29replaceAndRecursivelySimplifyEPNS_11InstructionEPNS_5ValueEPKNS_17TargetLibraryInfoEPKNS_13DominatorTreeEPNS_15AssumptionCacheEPNS_14SmallSetVectorIS1_Lj8EEE>
    1354:	cmp	x24, x23
    1358:	b.ne	1338 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xee8>  // b.any
    135c:	cbz	w22, 1690 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1240>
    1360:	ldr	x19, [sp, #48]
    1364:	cbz	x19, 19a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1554>
    1368:	ldrb	w8, [x19, #16]
    136c:	cbnz	w8, 19c4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1574>
    1370:	ldrb	w8, [x19, #18]
    1374:	tbz	w8, #0, 1380 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xf30>
    1378:	mov	x0, x19
    137c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    1380:	ldr	x8, [x19, #88]
    1384:	ldr	x8, [x8]
    1388:	cbz	x8, 19e4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1594>
    138c:	ldrb	w9, [x8, #8]
    1390:	cmp	w9, #0xf
    1394:	b.ne	1a04 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x15b4>  // b.any
    1398:	ldr	x0, [sp, #72]
    139c:	ldr	x19, [x8, #24]
    13a0:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    13a4:	ldr	w8, [x20, #48]
    13a8:	cbz	w8, 1a24 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x15d4>
    13ac:	ldr	x8, [x20, #40]
    13b0:	mov	x22, x0
    13b4:	ldr	x24, [x19]
    13b8:	ldr	x0, [x8]
    13bc:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    13c0:	ldr	x9, [x0, #80]
    13c4:	ldrb	w8, [x9]
    13c8:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
    13cc:	ldr	x8, [x9, #24]
    13d0:	add	x9, x9, #0x10
    13d4:	cmp	x8, x9
    13d8:	b.eq	184c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13fc>  // b.none
    13dc:	ldrb	w10, [x8]
    13e0:	tbnz	w10, #2, 1734 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12e4>
    13e4:	sub	x10, x8, #0x18
    13e8:	cmp	x8, #0x0
    13ec:	csel	x25, xzr, x10, eq  // eq = none
    13f0:	cbz	x8, 182c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13dc>
    13f4:	ldrb	w10, [x25, #16]
    13f8:	cmp	w10, #0x37
    13fc:	b.ne	1410 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xfc0>  // b.any
    1400:	ldr	x8, [x8, #8]
    1404:	cmp	x8, x9
    1408:	b.ne	13dc <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xf8c>  // b.any
    140c:	b	184c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x13fc>
    1410:	mov	x0, x24
    1414:	str	x22, [sp, #56]
    1418:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    141c:	ldr	w8, [x20, #120]
    1420:	cbz	w8, 1450 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1000>
    1424:	ldr	x27, [x20, #112]
    1428:	mov	x23, x0
    142c:	lsl	x22, x8, #3
    1430:	ldr	x26, [x27], #8
    1434:	mov	x1, x23
    1438:	mov	x0, x26
    143c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1440:	mov	x0, x26
    1444:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1448:	subs	x22, x22, #0x8
    144c:	b.ne	1430 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xfe0>  // b.any
    1450:	ldr	x8, [sp, #56]
    1454:	ldr	x0, [x8, #40]
    1458:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    145c:	mov	x22, x0
    1460:	mov	w0, #0x40                  	// #64
    1464:	mov	w1, #0x1                   	// #1
    1468:	bl	0 <_ZN4llvm4UsernwEmj>
    146c:	ldr	w2, [x22, #4]
    1470:	mov	w8, #0x101                 	// #257
    1474:	sub	x3, x29, #0x70
    1478:	mov	x1, x19
    147c:	mov	x4, x25
    1480:	mov	x23, x0
    1484:	stp	xzr, xzr, [x29, #-112]
    1488:	sturh	w8, [x29, #-96]
    148c:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjRKNS_5TwineEPNS_11InstructionE>
    1490:	mov	w0, #0x38                  	// #56
    1494:	mov	w1, #0x1                   	// #1
    1498:	bl	0 <_ZN4llvm4UsernwEmj>
    149c:	mov	x19, x0
    14a0:	mov	x0, x24
    14a4:	mov	w1, wzr
    14a8:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    14ac:	adrp	x8, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    14b0:	add	x8, x8, #0x0
    14b4:	mov	x2, x0
    14b8:	stp	x8, xzr, [x29, #-112]
    14bc:	mov	w8, #0x103                 	// #259
    14c0:	sub	x3, x29, #0x70
    14c4:	mov	x0, x19
    14c8:	mov	x1, x23
    14cc:	mov	x4, x25
    14d0:	sturh	w8, [x29, #-96]
    14d4:	bl	0 <_ZN4llvm11BitCastInstC1EPNS_5ValueEPNS_4TypeERKNS_5TwineEPNS_11InstructionE>
    14d8:	ldr	w8, [x20, #96]
    14dc:	cbz	w8, 1508 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10b8>
    14e0:	ldr	x20, [x20, #88]
    14e4:	lsl	x24, x8, #3
    14e8:	ldr	x22, [x20], #8
    14ec:	mov	x1, x19
    14f0:	mov	x0, x22
    14f4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    14f8:	mov	x0, x22
    14fc:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1500:	subs	x24, x24, #0x8
    1504:	b.ne	14e8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1098>  // b.any
    1508:	mov	x0, x23
    150c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1510:	mov	x19, x0
    1514:	sub	x0, x29, #0x70
    1518:	mov	x1, x19
    151c:	bl	0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1520:	ldp	x20, x22, [x29, #-112]
    1524:	ldur	x24, [x29, #-96]
    1528:	add	x19, x19, #0x48
    152c:	cmp	x20, x19
    1530:	cset	w8, ne  // ne = any
    1534:	cmp	x24, #0x0
    1538:	cset	w9, ne  // ne = any
    153c:	cmp	x19, x22
    1540:	b.ne	154c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10fc>  // b.any
    1544:	and	w8, w8, w9
    1548:	cbz	w8, 1684 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1234>
    154c:	ldrb	w8, [x24]
    1550:	tbnz	w8, #2, 1734 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12e4>
    1554:	sub	x8, x24, #0x18
    1558:	cmp	x24, #0x0
    155c:	csel	x25, xzr, x8, eq  // eq = none
    1560:	cbz	x24, 18a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1454>
    1564:	ldrb	w8, [x25, #16]
    1568:	cmp	w8, #0x50
    156c:	b.ne	1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>  // b.any
    1570:	ldrh	w8, [x25, #18]
    1574:	and	w8, w8, #0x3
    1578:	sub	w8, w8, #0x1
    157c:	cmp	w8, #0x1
    1580:	b.hi	1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>  // b.pmore
    1584:	ldr	w8, [x25, #20]
    1588:	tbnz	w8, #30, 15a4 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1154>
    158c:	and	w8, w8, #0xfffffff
    1590:	mov	w9, #0x18                  	// #24
    1594:	mneg	x9, x8, x9
    1598:	add	x26, x25, x9
    159c:	cbnz	x8, 15b0 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1160>
    15a0:	b	1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
    15a4:	ldur	x26, [x25, #-8]
    15a8:	and	x8, x8, #0xfffffff
    15ac:	cbz	x8, 1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
    15b0:	add	x8, x8, x8, lsl #1
    15b4:	lsl	x27, x8, #3
    15b8:	ldr	x8, [x26], #24
    15bc:	ldr	x0, [sp, #88]
    15c0:	mov	x9, #0xffffffffffffffff    	// #-1
    15c4:	movi	v0.2d, #0x0
    15c8:	sub	x1, x29, #0x70
    15cc:	add	x2, sp, #0x60
    15d0:	stp	x23, x9, [sp, #96]
    15d4:	stp	x8, x9, [x29, #-112]
    15d8:	stp	q0, q0, [x21]
    15dc:	stp	q0, q0, [x28]
    15e0:	bl	0 <_ZN4llvm9AAResults5aliasERKNS_14MemoryLocationES3_>
    15e4:	tst	w0, #0xff
    15e8:	b.ne	15f8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11a8>  // b.any
    15ec:	subs	x27, x27, #0x18
    15f0:	b.ne	15b8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1168>  // b.any
    15f4:	b	1610 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11c0>
    15f8:	ldrh	w8, [x25, #18]
    15fc:	and	w9, w8, #0x3
    1600:	cmp	w9, #0x2
    1604:	b.eq	1a44 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x15f4>  // b.none
    1608:	and	w8, w8, #0xfffc
    160c:	strh	w8, [x25, #18]
    1610:	ldrb	w8, [x22]
    1614:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
    1618:	ldr	x24, [x24, #8]
    161c:	sub	x8, x22, #0x18
    1620:	cmp	x22, #0x0
    1624:	csel	x8, xzr, x8, eq  // eq = none
    1628:	add	x8, x8, #0x28
    162c:	cmp	x8, x24
    1630:	b.ne	1664 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1214>  // b.any
    1634:	ldr	x22, [x22, #8]
    1638:	cmp	x20, x22
    163c:	b.eq	1664 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1214>  // b.none
    1640:	ldrb	w8, [x22]
    1644:	tbnz	w8, #2, 1714 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x12c4>
    1648:	sub	x8, x22, #0x18
    164c:	cmp	x22, #0x0
    1650:	csel	x8, xzr, x8, eq  // eq = none
    1654:	ldr	x24, [x8, #48]
    1658:	add	x8, x8, #0x28
    165c:	cmp	x8, x24
    1660:	b.eq	1634 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x11e4>  // b.none
    1664:	cmp	x20, x19
    1668:	cset	w8, ne  // ne = any
    166c:	cmp	x24, #0x0
    1670:	cset	w9, ne  // ne = any
    1674:	and	w8, w8, w9
    1678:	tbnz	w8, #0, 154c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10fc>
    167c:	cmp	x19, x22
    1680:	b.ne	154c <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x10fc>  // b.any
    1684:	ldr	x0, [sp, #72]
    1688:	mov	w1, #0x1                   	// #1
    168c:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    1690:	ldr	x13, [sp, #64]
    1694:	ldr	x8, [sp, #40]
    1698:	add	x13, x13, #0x8
    169c:	cmp	x13, x8
    16a0:	b.eq	16c8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x1278>  // b.none
    16a4:	ldr	x8, [sp, #32]
    16a8:	ldr	x20, [x8, #32]
    16ac:	b	9a8 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0x558>
    16b0:	ldp	x9, x0, [sp, #104]
    16b4:	mov	w22, wzr
    16b8:	ldr	x19, [sp, #56]
    16bc:	cmp	x0, x9
    16c0:	b.ne	1294 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe44>  // b.any
    16c4:	b	1298 <_ZN12_GLOBAL__N_115CoroElideLegacy13runOnFunctionERN4llvm8FunctionE+0xe48>
    16c8:	mov	w21, #0x1                   	// #1
    16cc:	mov	w0, w21
    16d0:	ldp	x20, x19, [sp, #480]
    16d4:	ldp	x22, x21, [sp, #464]
    16d8:	ldp	x24, x23, [sp, #448]
    16dc:	ldp	x26, x25, [sp, #432]
    16e0:	ldp	x28, x27, [sp, #416]
    16e4:	ldp	x29, x30, [sp, #400]
    16e8:	ldp	d9, d8, [sp, #384]
    16ec:	add	sp, sp, #0x1f0
    16f0:	ret
    16f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    16fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1700:	add	x0, x0, #0x0
    1704:	add	x1, x1, #0x0
    1708:	add	x3, x3, #0x0
    170c:	mov	w2, #0x69                  	// #105
    1710:	bl	0 <__assert_fail>
    1714:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1718:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    171c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1720:	add	x0, x0, #0x0
    1724:	add	x1, x1, #0x0
    1728:	add	x3, x3, #0x0
    172c:	mov	w2, #0x8b                  	// #139
    1730:	bl	0 <__assert_fail>
    1734:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1738:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    173c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1740:	add	x0, x0, #0x0
    1744:	add	x1, x1, #0x0
    1748:	add	x3, x3, #0x0
    174c:	mov	w2, #0x8b                  	// #139
    1750:	bl	0 <__assert_fail>
    1754:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1758:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    175c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1760:	add	x0, x0, #0x0
    1764:	add	x1, x1, #0x0
    1768:	add	x3, x3, #0x0
    176c:	mov	w2, #0x43                  	// #67
    1770:	bl	0 <__assert_fail>
    1774:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1778:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    177c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1780:	add	x0, x0, #0x0
    1784:	add	x1, x1, #0x0
    1788:	add	x3, x3, #0x0
    178c:	mov	w2, #0x69                  	// #105
    1790:	bl	0 <__assert_fail>
    1794:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1798:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    179c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17a0:	add	x0, x0, #0x0
    17a4:	add	x1, x1, #0x0
    17a8:	add	x3, x3, #0x0
    17ac:	mov	w2, #0x108                 	// #264
    17b0:	bl	0 <__assert_fail>
    17b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17b8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17bc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17c0:	add	x0, x0, #0x0
    17c4:	add	x1, x1, #0x0
    17c8:	add	x3, x3, #0x0
    17cc:	mov	w2, #0x34                  	// #52
    17d0:	bl	0 <__assert_fail>
    17d4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17d8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17dc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17e0:	add	x0, x0, #0x0
    17e4:	add	x1, x1, #0x0
    17e8:	add	x3, x3, #0x0
    17ec:	mov	w2, #0x69                  	// #105
    17f0:	bl	0 <__assert_fail>
    17f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    17fc:	add	x0, x0, #0x0
    1800:	add	x1, x1, #0x0
    1804:	mov	w2, #0xe0                  	// #224
    1808:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    180c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1810:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1814:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1818:	add	x0, x0, #0x0
    181c:	add	x1, x1, #0x0
    1820:	add	x3, x3, #0x0
    1824:	mov	w2, #0xf8                  	// #248
    1828:	bl	0 <__assert_fail>
    182c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1830:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1834:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1838:	add	x0, x0, #0x0
    183c:	add	x1, x1, #0x0
    1840:	add	x3, x3, #0x0
    1844:	mov	w2, #0x69                  	// #105
    1848:	bl	0 <__assert_fail>
    184c:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1850:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1854:	add	x0, x0, #0x0
    1858:	add	x1, x1, #0x0
    185c:	mov	w2, #0x68                  	// #104
    1860:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1864:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1868:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    186c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1870:	add	x0, x0, #0x0
    1874:	add	x1, x1, #0x0
    1878:	add	x3, x3, #0x0
    187c:	mov	w2, #0x121                 	// #289
    1880:	bl	0 <__assert_fail>
    1884:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1888:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    188c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1890:	add	x0, x0, #0x0
    1894:	add	x1, x1, #0x0
    1898:	add	x3, x3, #0x0
    189c:	mov	w2, #0x126                 	// #294
    18a0:	bl	0 <__assert_fail>
    18a4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18ac:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18b0:	add	x0, x0, #0x0
    18b4:	add	x1, x1, #0x0
    18b8:	add	x3, x3, #0x0
    18bc:	mov	w2, #0x69                  	// #105
    18c0:	bl	0 <__assert_fail>
    18c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18d0:	add	x0, x0, #0x0
    18d4:	add	x1, x1, #0x0
    18d8:	add	x3, x3, #0x0
    18dc:	mov	w2, #0x3b                  	// #59
    18e0:	bl	0 <__assert_fail>
    18e4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18e8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18ec:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    18f0:	add	x0, x0, #0x0
    18f4:	add	x1, x1, #0x0
    18f8:	add	x3, x3, #0x0
    18fc:	mov	w2, #0x69                  	// #105
    1900:	bl	0 <__assert_fail>
    1904:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1908:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    190c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1910:	add	x0, x0, #0x0
    1914:	add	x1, x1, #0x0
    1918:	add	x3, x3, #0x0
    191c:	mov	w2, #0xe8                  	// #232
    1920:	bl	0 <__assert_fail>
    1924:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1928:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    192c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1930:	add	x0, x0, #0x0
    1934:	add	x1, x1, #0x0
    1938:	add	x3, x3, #0x0
    193c:	mov	w2, #0x121                 	// #289
    1940:	bl	0 <__assert_fail>
    1944:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1948:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    194c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1950:	add	x0, x0, #0x0
    1954:	add	x1, x1, #0x0
    1958:	add	x3, x3, #0x0
    195c:	mov	w2, #0x126                 	// #294
    1960:	bl	0 <__assert_fail>
    1964:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1968:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    196c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1970:	add	x0, x0, #0x0
    1974:	add	x1, x1, #0x0
    1978:	add	x3, x3, #0x0
    197c:	mov	w2, #0x69                  	// #105
    1980:	bl	0 <__assert_fail>
    1984:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1988:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    198c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1990:	add	x0, x0, #0x0
    1994:	add	x1, x1, #0x0
    1998:	add	x3, x3, #0x0
    199c:	mov	w2, #0x69                  	// #105
    19a0:	bl	0 <__assert_fail>
    19a4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19ac:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19b0:	add	x0, x0, #0x0
    19b4:	add	x1, x1, #0x0
    19b8:	add	x3, x3, #0x0
    19bc:	mov	w2, #0x69                  	// #105
    19c0:	bl	0 <__assert_fail>
    19c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19d0:	add	x0, x0, #0x0
    19d4:	add	x1, x1, #0x0
    19d8:	add	x3, x3, #0x0
    19dc:	mov	w2, #0x108                 	// #264
    19e0:	bl	0 <__assert_fail>
    19e4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19e8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19ec:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    19f0:	add	x0, x0, #0x0
    19f4:	add	x1, x1, #0x0
    19f8:	add	x3, x3, #0x0
    19fc:	mov	w2, #0x69                  	// #105
    1a00:	bl	0 <__assert_fail>
    1a04:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a08:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a0c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a10:	add	x0, x0, #0x0
    1a14:	add	x1, x1, #0x0
    1a18:	add	x3, x3, #0x0
    1a1c:	mov	w2, #0x108                 	// #264
    1a20:	bl	0 <__assert_fail>
    1a24:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a28:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a2c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a30:	add	x0, x0, #0x0
    1a34:	add	x1, x1, #0x0
    1a38:	add	x3, x3, #0x0
    1a3c:	mov	w2, #0x9e                  	// #158
    1a40:	bl	0 <__assert_fail>
    1a44:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a48:	add	x0, x0, #0x0
    1a4c:	mov	w1, #0x1                   	// #1
    1a50:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1a54:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a58:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a60:	add	x0, x0, #0x0
    1a64:	add	x1, x1, #0x0
    1a68:	add	x3, x3, #0x0
    1a6c:	mov	w2, #0xeb                  	// #235
    1a70:	bl	0 <__assert_fail>
    1a74:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a78:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a7c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a80:	add	x0, x0, #0x0
    1a84:	add	x1, x1, #0x0
    1a88:	add	x3, x3, #0x0
    1a8c:	mov	w2, #0xeb                  	// #235
    1a90:	bl	0 <__assert_fail>
    1a94:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a98:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1a9c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1aa0:	add	x0, x0, #0x0
    1aa4:	add	x1, x1, #0x0
    1aa8:	add	x3, x3, #0x0
    1aac:	mov	w2, #0x69                  	// #105
    1ab0:	bl	0 <__assert_fail>
    1ab4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1ab8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1abc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1ac0:	add	x0, x0, #0x0
    1ac4:	add	x1, x1, #0x0
    1ac8:	add	x3, x3, #0x0
    1acc:	mov	w2, #0x108                 	// #264
    1ad0:	bl	0 <__assert_fail>
    1ad4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1ad8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1adc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1ae0:	add	x0, x0, #0x0
    1ae4:	add	x1, x1, #0x0
    1ae8:	add	x3, x3, #0x0
    1aec:	mov	w2, #0xdd                  	// #221
    1af0:	bl	0 <__assert_fail>
    1af4:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1af8:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1afc:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1b00:	add	x0, x0, #0x0
    1b04:	add	x1, x1, #0x0
    1b08:	add	x3, x3, #0x0
    1b0c:	mov	w2, #0xdd                  	// #221
    1b10:	bl	0 <__assert_fail>
    1b14:	adrp	x0, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1b18:	adrp	x1, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1b1c:	adrp	x3, 0 <_ZN4llvm29initializeCoroElideLegacyPassERNS_12PassRegistryE>
    1b20:	add	x0, x0, #0x0
    1b24:	add	x1, x1, #0x0
    1b28:	add	x3, x3, #0x0
    1b2c:	mov	w2, #0x10d                 	// #269
    1b30:	bl	0 <__assert_fail>

0000000000001b34 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_>:
    1b34:	cbz	x0, 1bd0 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x9c>
    1b38:	stp	x29, x30, [sp, #-32]!
    1b3c:	str	x19, [sp, #16]
    1b40:	mov	x29, sp
    1b44:	mov	x19, x0
    1b48:	ldr	x0, [x0, #232]
    1b4c:	add	x8, x19, #0xf8
    1b50:	cmp	x0, x8
    1b54:	b.eq	1b5c <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x28>  // b.none
    1b58:	bl	0 <free>
    1b5c:	ldr	x0, [x19, #184]
    1b60:	add	x8, x19, #0xc8
    1b64:	cmp	x0, x8
    1b68:	b.eq	1b70 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x3c>  // b.none
    1b6c:	bl	0 <free>
    1b70:	ldr	x0, [x19, #136]
    1b74:	add	x8, x19, #0x98
    1b78:	cmp	x0, x8
    1b7c:	b.eq	1b84 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x50>  // b.none
    1b80:	bl	0 <free>
    1b84:	ldr	x0, [x19, #112]
    1b88:	add	x8, x19, #0x80
    1b8c:	cmp	x0, x8
    1b90:	b.eq	1b98 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x64>  // b.none
    1b94:	bl	0 <free>
    1b98:	ldr	x0, [x19, #88]
    1b9c:	add	x8, x19, #0x68
    1ba0:	cmp	x0, x8
    1ba4:	b.eq	1bac <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x78>  // b.none
    1ba8:	bl	0 <free>
    1bac:	ldr	x0, [x19, #40]
    1bb0:	add	x8, x19, #0x38
    1bb4:	cmp	x0, x8
    1bb8:	b.eq	1bc0 <_ZNKSt14default_deleteIN12_GLOBAL__N_17LowererEEclEPS1_+0x8c>  // b.none
    1bbc:	bl	0 <free>
    1bc0:	mov	x0, x19
    1bc4:	ldr	x19, [sp, #16]
    1bc8:	ldp	x29, x30, [sp], #32
    1bcc:	b	0 <_ZdlPv>
    1bd0:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm10CoroIdInst7getInfoEv:

0000000000000000 <_ZNK4llvm10CoroIdInst7getInfoEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x3                   	// #3
  10:	bl	0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  14:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
  18:	cbz	x0, 104 <_ZNK4llvm10CoroIdInst7getInfoEv+0x104>
  1c:	ldrb	w8, [x0, #16]
  20:	mov	x19, x0
  24:	cmp	w8, #0x11
  28:	b.cs	124 <_ZNK4llvm10CoroIdInst7getInfoEv+0x124>  // b.hs, b.nlast
  2c:	cmp	w8, #0x3
  30:	b.ne	a8 <_ZNK4llvm10CoroIdInst7getInfoEv+0xa8>  // b.any
  34:	ldrb	w8, [x19, #80]
  38:	tbz	w8, #0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  44:	tbnz	w0, #0, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  48:	ldr	w8, [x19, #32]
  4c:	and	w8, w8, #0xf
  50:	cmp	w8, #0xa
  54:	b.hi	144 <_ZNK4llvm10CoroIdInst7getInfoEv+0x144>  // b.pmore
  58:	mov	w9, #0x1                   	// #1
  5c:	lsl	w8, w9, w8
  60:	mov	w9, #0x1eb                 	// #491
  64:	tst	w8, w9
  68:	b.eq	e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>  // b.none
  6c:	ldrb	w8, [x19, #80]
  70:	tbnz	w8, #1, e4 <_ZNK4llvm10CoroIdInst7getInfoEv+0xe4>
  74:	mov	x0, x19
  78:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
  7c:	tbnz	w0, #0, 15c <_ZNK4llvm10CoroIdInst7getInfoEv+0x15c>
  80:	ldur	x1, [x19, #-24]
  84:	cbz	x1, 17c <_ZNK4llvm10CoroIdInst7getInfoEv+0x17c>
  88:	ldrb	w8, [x1, #16]
  8c:	cmp	w8, #0x7
  90:	csel	x0, x1, xzr, eq  // eq = none
  94:	cbz	x0, bc <_ZNK4llvm10CoroIdInst7getInfoEv+0xbc>
  98:	mov	x1, xzr
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret
  a8:	mov	x0, xzr
  ac:	mov	x1, xzr
  b0:	ldr	x19, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret
  bc:	cmp	w8, #0x6
  c0:	b.eq	9c <_ZNK4llvm10CoroIdInst7getInfoEv+0x9c>  // b.none
  c4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  c8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  cc:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  e8:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  ec:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0xa8                  	// #168
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 108:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 10c:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 128:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 12c:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x108                 	// #264
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 148:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x16d                 	// #365
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 160:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 164:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x8d                  	// #141
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 180:	adrp	x1, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 184:	adrp	x3, 0 <_ZNK4llvm10CoroIdInst7getInfoEv>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x69                  	// #105
 198:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cmp	w19, #0x40
  14:	b.hi	38 <_ZNK4llvm5APInt12getSExtValueEv+0x38>  // b.pmore
  18:	cbz	w19, a8 <_ZNK4llvm5APInt12getSExtValueEv+0xa8>
  1c:	ldr	x8, [x0]
  20:	neg	x9, x19
  24:	lsl	x8, x8, x9
  28:	asr	x0, x8, x9
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldr	x20, [x0]
  3c:	sub	w8, w19, #0x1
  40:	lsr	w9, w8, #6
  44:	ldr	x9, [x20, w9, uxtw #3]
  48:	lsr	x8, x9, x8
  4c:	tbz	w8, #0, 74 <_ZNK4llvm5APInt12getSExtValueEv+0x74>
  50:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  54:	sub	w8, w19, w0
  58:	add	w8, w8, #0x1
  5c:	cmp	w8, #0x41
  60:	b.cs	88 <_ZNK4llvm5APInt12getSExtValueEv+0x88>  // b.hs, b.nlast
  64:	ldr	x0, [x20]
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  78:	sub	w8, w19, w0
  7c:	add	w8, w8, #0x1
  80:	cmp	w8, #0x41
  84:	b.cc	64 <_ZNK4llvm5APInt12getSExtValueEv+0x64>  // b.lo, b.ul, b.last
  88:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  8c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  90:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x663                 	// #1635
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  ac:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b0:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x307                 	// #775
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	sub	x8, x8, x20
  28:	lsr	x8, x8, #4
  2c:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
  30:	b	12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x20, x0
  44:	tbnz	w8, #31, 114 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x114>
  48:	mov	x8, xzr
  4c:	sub	x8, x8, x20
  50:	lsr	x8, x8, #4
  54:	cbz	w8, 12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  58:	ldr	w8, [x19, #20]
  5c:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  60:	mov	x20, xzr
  64:	mov	x8, xzr
  68:	sub	x8, x8, x20
  6c:	lsr	x8, x8, #4
  70:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
  74:	b	158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 140 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x140>
  8c:	mov	x8, xzr
  90:	sub	x8, x8, x20
  94:	lsr	x8, x8, #4
  98:	cbz	w8, 158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	ldr	w8, [x19, #20]
  a8:	ldr	w21, [x0, #8]
  ac:	tbnz	w8, #31, c8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xc8>
  b0:	mov	x20, xzr
  b4:	mov	x8, xzr
  b8:	sub	x8, x8, x20
  bc:	lsr	x8, x8, #4
  c0:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
  c4:	b	190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d0:	ldr	w8, [x19, #20]
  d4:	mov	x20, x0
  d8:	tbnz	w8, #31, 178 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x178>
  dc:	mov	x8, xzr
  e0:	sub	x8, x8, x20
  e4:	lsr	x8, x8, #4
  e8:	cbz	w8, 190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f4:	add	x8, x0, x1
  f8:	ldur	w8, [x8, #-4]
  fc:	subs	w0, w8, w21
 100:	b.cc	1b0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x1b0>  // b.lo, b.ul, b.last
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 11c:	add	x8, x0, x1
 120:	sub	x8, x8, x20
 124:	lsr	x8, x8, #4
 128:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
 12c:	mov	w0, wzr
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 148:	add	x8, x0, x1
 14c:	sub	x8, x8, x20
 150:	lsr	x8, x8, #4
 154:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
 158:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 15c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 160:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x6ed                 	// #1773
 174:	bl	0 <__assert_fail>
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 180:	add	x8, x0, x1
 184:	sub	x8, x8, x20
 188:	lsr	x8, x8, #4
 18c:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
 190:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 194:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 198:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x6f3                 	// #1779
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b4:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b8:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x710                 	// #1808
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	str	x10, [x0, #16]
  7c:	ldrb	w11, [x9]
  80:	tbz	w11, #2, 38 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x38>
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

CoroFrame.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>:
       0:	stp	x29, x30, [sp, #-80]!
       4:	stp	x26, x25, [sp, #16]
       8:	stp	x24, x23, [sp, #32]
       c:	stp	x22, x21, [sp, #48]
      10:	stp	x20, x19, [sp, #64]
      14:	mov	x29, sp
      18:	mov	x19, x3
      1c:	mov	x22, x2
      20:	mov	x23, x1
      24:	mov	x20, x0
      28:	bl	0 <_ZN4llvm4dbgsEv>
      2c:	mov	x21, x0
      30:	ldp	x8, x0, [x0, #16]
      34:	sub	x8, x8, x0
      38:	cmp	x22, x8
      3c:	b.ls	5c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x5c>  // b.plast
      40:	mov	x0, x21
      44:	mov	x1, x23
      48:	mov	x2, x22
      4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      50:	mov	x21, x0
      54:	ldr	x0, [x0, #24]
      58:	b	78 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x78>
      5c:	cbz	x22, 78 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x78>
      60:	mov	x1, x23
      64:	mov	x2, x22
      68:	bl	0 <memcpy>
      6c:	ldr	x8, [x21, #24]
      70:	add	x0, x8, x22
      74:	str	x0, [x21, #24]
      78:	ldr	x8, [x21, #16]
      7c:	cmp	x8, x0
      80:	b.ne	a4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xa4>  // b.any
      84:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      88:	add	x1, x1, #0x0
      8c:	mov	w2, #0x1                   	// #1
      90:	mov	x0, x21
      94:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      98:	ldr	w8, [x19, #16]
      9c:	cbnz	w8, c0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xc0>
      a0:	b	1c4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1c4>
      a4:	mov	w8, #0x3a                  	// #58
      a8:	strb	w8, [x0]
      ac:	ldr	x8, [x21, #24]
      b0:	add	x8, x8, #0x1
      b4:	str	x8, [x21, #24]
      b8:	ldr	w8, [x19, #16]
      bc:	cbz	w8, 1c4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1c4>
      c0:	adrp	x21, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
      c4:	mov	x24, xzr
      c8:	sub	x25, x8, #0x1
      cc:	add	x21, x21, #0x0
      d0:	mov	w26, #0x20                  	// #32
      d4:	ldr	x9, [x19, #8]
      d8:	ubfx	x8, x24, #6, #26
      dc:	cmp	x9, x8
      e0:	b.ls	224 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x224>  // b.plast
      e4:	ldr	x9, [x19]
      e8:	ldr	x8, [x9, x8, lsl #3]
      ec:	lsr	x8, x8, x24
      f0:	tbz	w8, #0, 18c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x18c>
      f4:	bl	0 <_ZN4llvm4dbgsEv>
      f8:	ldp	x9, x8, [x0, #16]
      fc:	mov	x22, x0
     100:	cmp	x9, x8
     104:	b.ne	120 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x120>  // b.any
     108:	mov	w2, #0x1                   	// #1
     10c:	mov	x0, x22
     110:	mov	x1, x21
     114:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     118:	mov	x22, x0
     11c:	b	130 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x130>
     120:	strb	w26, [x8]
     124:	ldr	x8, [x22, #24]
     128:	add	x8, x8, #0x1
     12c:	str	x8, [x22, #24]
     130:	ldr	w8, [x20, #8]
     134:	cmp	w8, w24
     138:	b.ls	244 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x244>  // b.plast
     13c:	ldr	x8, [x20]
     140:	ldr	x0, [x8, x24, lsl #3]
     144:	bl	0 <_ZNK4llvm5Value7getNameEv>
     148:	ldp	x9, x8, [x22, #16]
     14c:	mov	x23, x1
     150:	sub	x9, x9, x8
     154:	cmp	x1, x9
     158:	mov	x1, x0
     15c:	b.ls	170 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x170>  // b.plast
     160:	mov	x0, x22
     164:	mov	x2, x23
     168:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     16c:	b	18c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x18c>
     170:	cbz	x23, 18c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x18c>
     174:	mov	x0, x8
     178:	mov	x2, x23
     17c:	bl	0 <memcpy>
     180:	ldr	x8, [x22, #24]
     184:	add	x8, x8, x23
     188:	str	x8, [x22, #24]
     18c:	cmp	x25, x24
     190:	b.eq	1c4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1c4>  // b.none
     194:	ldr	w8, [x19, #16]
     198:	add	x24, x24, #0x1
     19c:	cmp	w8, w24
     1a0:	b.hi	d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0xd4>  // b.pmore
     1a4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1a8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1ac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1b0:	add	x0, x0, #0x0
     1b4:	add	x1, x1, #0x0
     1b8:	add	x3, x3, #0x0
     1bc:	mov	w2, #0x1f0                 	// #496
     1c0:	bl	0 <__assert_fail>
     1c4:	bl	0 <_ZN4llvm4dbgsEv>
     1c8:	ldp	x9, x8, [x0, #16]
     1cc:	cmp	x9, x8
     1d0:	b.ne	1f8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE+0x1f8>  // b.any
     1d4:	ldp	x20, x19, [sp, #64]
     1d8:	ldp	x22, x21, [sp, #48]
     1dc:	ldp	x24, x23, [sp, #32]
     1e0:	ldp	x26, x25, [sp, #16]
     1e4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     1e8:	add	x1, x1, #0x0
     1ec:	mov	w2, #0x1                   	// #1
     1f0:	ldp	x29, x30, [sp], #80
     1f4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1f8:	mov	w9, #0xa                   	// #10
     1fc:	strb	w9, [x8]
     200:	ldr	x8, [x0, #24]
     204:	add	x8, x8, #0x1
     208:	str	x8, [x0, #24]
     20c:	ldp	x20, x19, [sp, #64]
     210:	ldp	x22, x21, [sp, #48]
     214:	ldp	x24, x23, [sp, #32]
     218:	ldp	x26, x25, [sp, #16]
     21c:	ldp	x29, x30, [sp], #80
     220:	ret
     224:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     228:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     22c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     230:	add	x0, x0, #0x0
     234:	add	x1, x1, #0x0
     238:	add	x3, x3, #0x0
     23c:	mov	w2, #0x1ab                 	// #427
     240:	bl	0 <__assert_fail>
     244:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     248:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     24c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     250:	add	x0, x0, #0x0
     254:	add	x1, x1, #0x0
     258:	add	x3, x3, #0x0
     25c:	mov	w2, #0x99                  	// #153
     260:	bl	0 <__assert_fail>

0000000000000264 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv>:
     264:	stp	x29, x30, [sp, #-96]!
     268:	stp	x28, x27, [sp, #16]
     26c:	stp	x26, x25, [sp, #32]
     270:	stp	x24, x23, [sp, #48]
     274:	stp	x22, x21, [sp, #64]
     278:	stp	x20, x19, [sp, #80]
     27c:	mov	x29, sp
     280:	ldr	w25, [x0, #280]
     284:	cbz	w25, 3b0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x14c>
     288:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     28c:	adrp	x21, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     290:	adrp	x22, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     294:	mov	x19, x0
     298:	mov	x26, xzr
     29c:	mov	x27, xzr
     2a0:	add	x20, x20, #0x0
     2a4:	add	x21, x21, #0x0
     2a8:	add	x22, x22, #0x0
     2ac:	mov	w28, #0xa3a                 	// #2618
     2b0:	ldr	w8, [x19, #8]
     2b4:	cmp	w8, w27
     2b8:	b.ls	438 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x1d4>  // b.plast
     2bc:	ldr	x8, [x19]
     2c0:	ldr	x24, [x8, x27, lsl #3]
     2c4:	bl	0 <_ZN4llvm4dbgsEv>
     2c8:	mov	x23, x0
     2cc:	mov	x0, x24
     2d0:	bl	0 <_ZNK4llvm5Value7getNameEv>
     2d4:	ldp	x9, x8, [x23, #16]
     2d8:	mov	x24, x1
     2dc:	sub	x9, x9, x8
     2e0:	cmp	x1, x9
     2e4:	mov	x1, x0
     2e8:	b.ls	304 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xa0>  // b.plast
     2ec:	mov	x0, x23
     2f0:	mov	x2, x24
     2f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2f8:	ldr	x8, [x0, #24]
     2fc:	mov	x23, x0
     300:	b	320 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xbc>
     304:	cbz	x24, 320 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xbc>
     308:	mov	x0, x8
     30c:	mov	x2, x24
     310:	bl	0 <memcpy>
     314:	ldr	x8, [x23, #24]
     318:	add	x8, x8, x24
     31c:	str	x8, [x23, #24]
     320:	ldr	x9, [x23, #16]
     324:	sub	x9, x9, x8
     328:	cmp	x9, #0x1
     32c:	b.hi	344 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xe0>  // b.pmore
     330:	mov	w2, #0x2                   	// #2
     334:	mov	x0, x23
     338:	mov	x1, x20
     33c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     340:	b	354 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0xf0>
     344:	strh	w28, [x8]
     348:	ldr	x8, [x23, #24]
     34c:	add	x8, x8, #0x2
     350:	str	x8, [x23, #24]
     354:	ldr	w8, [x19, #280]
     358:	cmp	x27, x8
     35c:	b.cs	418 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x1b4>  // b.hs, b.nlast
     360:	ldr	x8, [x19, #272]
     364:	mov	w2, #0xb                   	// #11
     368:	mov	x0, x19
     36c:	mov	x1, x21
     370:	add	x3, x8, x26
     374:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     378:	ldr	w8, [x19, #280]
     37c:	cmp	x27, x8
     380:	b.cs	418 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x1b4>  // b.hs, b.nlast
     384:	ldr	x8, [x19, #272]
     388:	mov	w2, #0xb                   	// #11
     38c:	mov	x0, x19
     390:	mov	x1, x22
     394:	add	x8, x8, x26
     398:	add	x3, x8, #0x18
     39c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     3a0:	add	x27, x27, #0x1
     3a4:	cmp	x25, x27
     3a8:	add	x26, x26, #0x38
     3ac:	b.ne	2b0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x4c>  // b.any
     3b0:	bl	0 <_ZN4llvm4dbgsEv>
     3b4:	ldp	x9, x8, [x0, #16]
     3b8:	cmp	x9, x8
     3bc:	b.ne	3e8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv+0x184>  // b.any
     3c0:	ldp	x20, x19, [sp, #80]
     3c4:	ldp	x22, x21, [sp, #64]
     3c8:	ldp	x24, x23, [sp, #48]
     3cc:	ldp	x26, x25, [sp, #32]
     3d0:	ldp	x28, x27, [sp, #16]
     3d4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     3d8:	add	x1, x1, #0x0
     3dc:	mov	w2, #0x1                   	// #1
     3e0:	ldp	x29, x30, [sp], #96
     3e4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3e8:	mov	w9, #0xa                   	// #10
     3ec:	strb	w9, [x8]
     3f0:	ldr	x8, [x0, #24]
     3f4:	add	x8, x8, #0x1
     3f8:	str	x8, [x0, #24]
     3fc:	ldp	x20, x19, [sp, #80]
     400:	ldp	x22, x21, [sp, #64]
     404:	ldp	x24, x23, [sp, #48]
     408:	ldp	x26, x25, [sp, #32]
     40c:	ldp	x28, x27, [sp, #16]
     410:	ldp	x29, x30, [sp], #96
     414:	ret
     418:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     41c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     420:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     424:	add	x0, x0, #0x0
     428:	add	x1, x1, #0x0
     42c:	add	x3, x3, #0x0
     430:	mov	w2, #0x99                  	// #153
     434:	bl	0 <__assert_fail>
     438:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     43c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     440:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     444:	add	x0, x0, #0x0
     448:	add	x1, x1, #0x0
     44c:	add	x3, x3, #0x0
     450:	mov	w2, #0x99                  	// #153
     454:	bl	0 <__assert_fail>

0000000000000458 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE>:
     458:	str	d10, [sp, #-128]!
     45c:	stp	d9, d8, [sp, #16]
     460:	stp	x29, x30, [sp, #32]
     464:	stp	x28, x27, [sp, #48]
     468:	stp	x26, x25, [sp, #64]
     46c:	stp	x24, x23, [sp, #80]
     470:	stp	x22, x21, [sp, #96]
     474:	stp	x20, x19, [sp, #112]
     478:	mov	x29, sp
     47c:	sub	sp, sp, #0xaf0
     480:	str	x1, [sp, #40]
     484:	mov	x19, x0
     488:	bl	0 <_ZN4llvm15LowerDbgDeclareERNS_8FunctionE>
     48c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     490:	ldr	d9, [x8]
     494:	add	x8, sp, #0x100
     498:	mov	x9, x19
     49c:	add	x19, x8, #0x10
     4a0:	str	x19, [sp, #256]
     4a4:	str	d9, [sp, #264]
     4a8:	ldrb	w8, [x9, #18]
     4ac:	str	x9, [sp, #32]
     4b0:	tbnz	w8, #0, 4c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x68>
     4b4:	ldr	x22, [x9, #88]
     4b8:	mov	x8, x22
     4bc:	b	4f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x98>
     4c0:	ldr	x0, [sp, #32]
     4c4:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     4c8:	ldr	x9, [sp, #32]
     4cc:	ldrb	w8, [x9, #18]
     4d0:	ldr	x22, [x9, #88]
     4d4:	tbnz	w8, #0, 4e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x88>
     4d8:	mov	x8, x22
     4dc:	b	4f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x98>
     4e0:	ldr	x0, [sp, #32]
     4e4:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     4e8:	ldr	x9, [sp, #32]
     4ec:	ldr	x8, [x9, #88]
     4f0:	ldr	x9, [x9, #96]
     4f4:	mov	w10, #0x28                  	// #40
     4f8:	madd	x20, x9, x10, x8
     4fc:	cmp	x20, x22
     500:	b.eq	738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e0>  // b.none
     504:	mov	x0, x22
     508:	bl	0 <_ZNK4llvm8Argument17hasSwiftErrorAttrEv>
     50c:	tbnz	w0, #0, 520 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc8>
     510:	add	x22, x22, #0x28
     514:	cmp	x20, x22
     518:	b.ne	504 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xac>  // b.any
     51c:	b	738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e0>
     520:	ldr	x8, [sp, #32]
     524:	ldr	x8, [x8, #80]
     528:	ldrb	w9, [x8]
     52c:	tbnz	w9, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
     530:	sub	x0, x8, #0x18
     534:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
     538:	mov	x20, x0
     53c:	bl	0 <_ZNK4llvm5Value10getContextEv>
     540:	mov	w8, #0x200                 	// #512
     544:	str	x0, [sp, #560]
     548:	add	x0, sp, #0x218
     54c:	mov	x1, x20
     550:	str	xzr, [sp, #568]
     554:	str	wzr, [sp, #576]
     558:	strb	wzr, [sp, #582]
     55c:	str	xzr, [sp, #552]
     560:	str	xzr, [sp, #536]
     564:	str	xzr, [sp, #544]
     568:	strh	w8, [sp, #580]
     56c:	str	xzr, [sp, #592]
     570:	str	xzr, [sp, #584]
     574:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     578:	ldr	x8, [x22]
     57c:	cbz	x8, 4224 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3dcc>
     580:	ldr	w9, [x8, #8]
     584:	and	w10, w9, #0xff
     588:	cmp	w10, #0xf
     58c:	b.ne	4244 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3dec>  // b.any
     590:	ldr	x20, [x8, #24]
     594:	mov	w24, #0x101                 	// #257
     598:	mov	w0, #0x40                  	// #64
     59c:	mov	w1, #0x1                   	// #1
     5a0:	lsr	w21, w9, #8
     5a4:	stp	xzr, xzr, [sp, #464]
     5a8:	strh	w24, [sp, #480]
     5ac:	bl	0 <_ZN4llvm4UsernwEmj>
     5b0:	sub	x4, x29, #0xb8
     5b4:	mov	x1, x20
     5b8:	mov	w2, w21
     5bc:	mov	x3, xzr
     5c0:	mov	x5, xzr
     5c4:	mov	x23, x0
     5c8:	stp	xzr, xzr, [x29, #-184]
     5cc:	sturh	w24, [x29, #-168]
     5d0:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
     5d4:	add	x0, sp, #0x218
     5d8:	add	x2, sp, #0x1d0
     5dc:	mov	x1, x23
     5e0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     5e4:	mov	x21, x0
     5e8:	mov	x0, x22
     5ec:	mov	x1, x21
     5f0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     5f4:	mov	x0, x20
     5f8:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
     5fc:	mov	x22, x0
     600:	mov	w0, #0x40                  	// #64
     604:	mov	w1, #0x2                   	// #2
     608:	bl	0 <_ZN4llvm4UsernwEmj>
     60c:	mov	x1, x22
     610:	mov	x2, x21
     614:	mov	w3, wzr
     618:	mov	x4, xzr
     61c:	mov	x23, x0
     620:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
     624:	add	x0, sp, #0x218
     628:	sub	x2, x29, #0xb8
     62c:	mov	x1, x23
     630:	stp	xzr, xzr, [x29, #-184]
     634:	sturh	w24, [x29, #-168]
     638:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     63c:	ldr	x24, [sp, #40]
     640:	ldr	w8, [x24, #96]
     644:	cbz	w8, 668 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x210>
     648:	ldr	x22, [x24, #88]
     64c:	lsl	x23, x8, #3
     650:	ldr	x0, [x22], #8
     654:	mov	x1, x21
     658:	mov	x2, x24
     65c:	bl	5c3c <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>
     660:	subs	x23, x23, #0x8
     664:	b.ne	650 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f8>  // b.any
     668:	ldr	w8, [x24, #16]
     66c:	mov	x22, x24
     670:	cbz	w8, 6ec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x294>
     674:	ldr	x23, [x22, #8]
     678:	lsl	x24, x8, #3
     67c:	mov	w25, #0x101                 	// #257
     680:	ldr	x1, [x23], #8
     684:	add	x0, sp, #0x218
     688:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     68c:	mov	w0, #0x40                  	// #64
     690:	mov	w1, #0x1                   	// #1
     694:	stp	xzr, xzr, [sp, #464]
     698:	strh	w25, [sp, #480]
     69c:	bl	0 <_ZN4llvm4UsernwEmj>
     6a0:	sub	x3, x29, #0xb8
     6a4:	mov	x1, x20
     6a8:	mov	x2, x21
     6ac:	mov	x4, xzr
     6b0:	mov	x22, x0
     6b4:	stp	xzr, xzr, [x29, #-184]
     6b8:	sturh	w25, [x29, #-168]
     6bc:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
     6c0:	mov	x1, x22
     6c4:	ldr	x22, [sp, #40]
     6c8:	add	x0, sp, #0x218
     6cc:	add	x2, sp, #0x1d0
     6d0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     6d4:	mov	x1, x0
     6d8:	add	x0, sp, #0x218
     6dc:	mov	x2, x22
     6e0:	bl	5fa0 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>
     6e4:	subs	x24, x24, #0x8
     6e8:	b.ne	680 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x228>  // b.any
     6ec:	ldr	w8, [sp, #264]
     6f0:	ldr	w9, [sp, #268]
     6f4:	cmp	w8, w9
     6f8:	b.cs	29dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2584>  // b.hs, b.nlast
     6fc:	ldr	x9, [sp, #256]
     700:	str	x21, [x9, w8, uxtw #3]
     704:	ldr	w8, [sp, #264]
     708:	ldr	w9, [sp, #268]
     70c:	cmp	w8, w9
     710:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
     714:	add	w8, w8, #0x1
     718:	mov	x0, x21
     71c:	mov	x1, x22
     720:	str	w8, [sp, #264]
     724:	bl	5ab4 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>
     728:	ldr	x1, [sp, #536]
     72c:	cbz	x1, 738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e0>
     730:	add	x0, sp, #0x218
     734:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
     738:	ldr	x8, [sp, #32]
     73c:	ldr	x8, [x8, #80]
     740:	ldrb	w9, [x8]
     744:	tbnz	w9, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
     748:	sub	x9, x8, #0x18
     74c:	cmp	x8, #0x0
     750:	csel	x8, xzr, x9, eq  // eq = none
     754:	ldr	x21, [x8, #48]
     758:	add	x22, x8, #0x28
     75c:	b	764 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x30c>
     760:	ldr	x21, [x21, #8]
     764:	cmp	x22, x21
     768:	b.eq	800 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a8>  // b.none
     76c:	ldrb	w8, [x21]
     770:	tbnz	w8, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
     774:	sub	x8, x21, #0x18
     778:	cmp	x21, #0x0
     77c:	csel	x8, xzr, x8, eq  // eq = none
     780:	cbz	x21, 40d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c7c>
     784:	ldrb	w9, [x8, #16]
     788:	cmp	w9, #0x37
     78c:	csel	x20, x8, xzr, eq  // eq = none
     790:	cbz	x20, 760 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x308>
     794:	ldrh	w8, [x20, #18]
     798:	tbz	w8, #6, 760 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x308>
     79c:	and	w8, w8, #0xffffffbf
     7a0:	strh	w8, [x20, #18]
     7a4:	ldr	w8, [sp, #264]
     7a8:	ldr	w9, [sp, #268]
     7ac:	cmp	w8, w9
     7b0:	b.cs	7e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38c>  // b.hs, b.nlast
     7b4:	ldr	x9, [sp, #256]
     7b8:	str	x20, [x9, w8, uxtw #3]
     7bc:	ldr	w8, [sp, #264]
     7c0:	ldr	w9, [sp, #268]
     7c4:	cmp	w8, w9
     7c8:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
     7cc:	ldr	x1, [sp, #40]
     7d0:	add	w8, w8, #0x1
     7d4:	mov	x0, x20
     7d8:	str	w8, [sp, #264]
     7dc:	bl	5ab4 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>
     7e0:	b	760 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x308>
     7e4:	add	x0, sp, #0x100
     7e8:	mov	w3, #0x8                   	// #8
     7ec:	mov	x1, x19
     7f0:	mov	x2, xzr
     7f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7f8:	ldr	w8, [sp, #264]
     7fc:	b	7b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35c>
     800:	ldr	w8, [sp, #264]
     804:	cbz	w8, 8dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x484>
     808:	add	x8, sp, #0x218
     80c:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     810:	ldr	d0, [x9]
     814:	add	x20, x8, #0x10
     818:	ldr	x8, [sp, #32]
     81c:	add	x0, sp, #0x218
     820:	str	wzr, [sp, #612]
     824:	str	xzr, [sp, #576]
     828:	str	xzr, [sp, #560]
     82c:	str	xzr, [sp, #568]
     830:	str	wzr, [sp, #584]
     834:	strb	wzr, [sp, #608]
     838:	str	x20, [sp, #536]
     83c:	str	d0, [sp, #544]
     840:	str	xzr, [sp, #592]
     844:	str	x8, [sp, #600]
     848:	bl	0 <_ZN4llvm14DomTreeBuilder9CalculateINS_17DominatorTreeBaseINS_10BasicBlockELb0EEEEEvRT_>
     84c:	ldr	x0, [sp, #256]
     850:	ldr	w1, [sp, #264]
     854:	add	x2, sp, #0x218
     858:	mov	x3, xzr
     85c:	bl	0 <_ZN4llvm15PromoteMemToRegENS_8ArrayRefIPNS_10AllocaInstEEERNS_13DominatorTreeEPNS_15AssumptionCacheE>
     860:	ldr	w8, [sp, #584]
     864:	cbz	w8, 8b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x460>
     868:	ldr	x9, [sp, #568]
     86c:	lsl	x22, x8, #4
     870:	add	x21, x9, #0x8
     874:	b	890 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x438>
     878:	mov	x0, x19
     87c:	bl	0 <_ZdlPv>
     880:	str	xzr, [x21]
     884:	subs	x22, x22, #0x10
     888:	add	x21, x21, #0x10
     88c:	b.eq	8b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x460>  // b.none
     890:	ldur	x8, [x21, #-8]
     894:	orr	x8, x8, #0x8
     898:	cmn	x8, #0x8
     89c:	b.eq	884 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x42c>  // b.none
     8a0:	ldr	x19, [x21]
     8a4:	cbz	x19, 880 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x428>
     8a8:	ldr	x0, [x19, #24]
     8ac:	cbz	x0, 878 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x420>
     8b0:	bl	0 <_ZdlPv>
     8b4:	b	878 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x420>
     8b8:	ldr	x0, [sp, #568]
     8bc:	bl	0 <_ZdlPv>
     8c0:	ldr	x8, [sp, #560]
     8c4:	ldr	x0, [sp, #536]
     8c8:	add	x8, x8, #0x1
     8cc:	cmp	x0, x20
     8d0:	str	x8, [sp, #560]
     8d4:	b.eq	8dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x484>  // b.none
     8d8:	bl	0 <free>
     8dc:	ldr	x0, [sp, #256]
     8e0:	add	x8, sp, #0x100
     8e4:	add	x8, x8, #0x10
     8e8:	cmp	x0, x8
     8ec:	b.eq	8f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x49c>  // b.none
     8f0:	bl	0 <free>
     8f4:	ldr	x19, [sp, #40]
     8f8:	ldr	w8, [x19, #168]
     8fc:	cbnz	w8, 914 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4bc>
     900:	ldr	x8, [x19, #208]
     904:	cbz	x8, 914 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4bc>
     908:	mov	x0, x19
     90c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     910:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     914:	ldr	w8, [x19, #96]
     918:	cbz	w8, a04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5ac>
     91c:	ldr	x9, [sp, #40]
     920:	adrp	x22, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     924:	adrp	x24, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     928:	lsl	x21, x8, #3
     92c:	ldr	x20, [x9, #88]
     930:	add	x22, x22, #0x0
     934:	mov	w23, #0x103                 	// #259
     938:	add	x24, x24, #0x0
     93c:	b	978 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x520>
     940:	add	x1, sp, #0x218
     944:	str	xzr, [sp, #544]
     948:	str	x22, [sp, #536]
     94c:	strh	w23, [sp, #552]
     950:	bl	4264 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>
     954:	add	x1, sp, #0x218
     958:	mov	x0, x19
     95c:	str	xzr, [sp, #544]
     960:	str	x24, [sp, #536]
     964:	strh	w23, [sp, #552]
     968:	bl	4264 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>
     96c:	subs	x21, x21, #0x8
     970:	add	x20, x20, #0x8
     974:	b.eq	a04 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5ac>  // b.none
     978:	ldr	x19, [x20]
     97c:	cbz	x19, 4074 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c1c>
     980:	ldur	x8, [x19, #-24]
     984:	ldrb	w9, [x8, #16]
     988:	cmp	w9, #0x0
     98c:	csel	x8, x8, xzr, eq  // eq = none
     990:	ldr	w8, [x8, #36]
     994:	cmp	w8, #0x23
     998:	b.ne	954 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4fc>  // b.any
     99c:	mov	x0, x19
     9a0:	mov	w1, wzr
     9a4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     9a8:	cbz	x0, 4114 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3cbc>
     9ac:	ldrb	w8, [x0, #16]
     9b0:	cmp	w8, #0x10
     9b4:	b.eq	954 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4fc>  // b.none
     9b8:	cmp	w8, #0x50
     9bc:	b.ne	9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>  // b.any
     9c0:	ldur	x8, [x0, #-24]
     9c4:	cbz	x8, 9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>
     9c8:	ldrb	w9, [x8, #16]
     9cc:	cbnz	w9, 9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>
     9d0:	ldrb	w9, [x8, #33]
     9d4:	tbz	w9, #5, 9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>
     9d8:	ldr	w8, [x8, #36]
     9dc:	cmp	w8, #0x20
     9e0:	b.eq	940 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x4e8>  // b.none
     9e4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     9e8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     9ec:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     9f0:	add	x0, x0, #0x0
     9f4:	add	x1, x1, #0x0
     9f8:	add	x3, x3, #0x0
     9fc:	mov	w2, #0x17c                 	// #380
     a00:	bl	0 <__assert_fail>
     a04:	ldr	x8, [sp, #40]
     a08:	ldr	w8, [x8, #16]
     a0c:	cbz	w8, a48 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5f0>
     a10:	ldr	x9, [sp, #40]
     a14:	adrp	x21, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     a18:	lsl	x20, x8, #3
     a1c:	add	x21, x21, #0x0
     a20:	ldr	x19, [x9, #8]
     a24:	mov	w22, #0x103                 	// #259
     a28:	ldr	x0, [x19], #8
     a2c:	add	x1, sp, #0x218
     a30:	str	xzr, [sp, #544]
     a34:	str	x21, [sp, #536]
     a38:	strh	w22, [sp, #552]
     a3c:	bl	4264 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>
     a40:	subs	x20, x20, #0x8
     a44:	b.ne	a28 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x5d0>  // b.any
     a48:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     a4c:	ldr	d8, [x8]
     a50:	ldr	x12, [sp, #32]
     a54:	add	x8, sp, #0x100
     a58:	add	x19, x8, #0x10
     a5c:	str	x19, [sp, #256]
     a60:	str	d8, [sp, #264]
     a64:	ldr	x20, [x12, #80]
     a68:	add	x8, x12, #0x48
     a6c:	str	x8, [sp, #48]
     a70:	cmp	x8, x20
     a74:	b.eq	1490 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1038>  // b.none
     a78:	mov	w8, wzr
     a7c:	mov	w9, #0x8                   	// #8
     a80:	b	a94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x63c>
     a84:	ldr	x20, [x20, #8]
     a88:	ldr	x10, [sp, #48]
     a8c:	cmp	x10, x20
     a90:	b.eq	b28 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6d0>  // b.none
     a94:	ldrb	w10, [x20]
     a98:	tbnz	w10, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
     a9c:	sub	x10, x20, #0x18
     aa0:	cmp	x20, #0x0
     aa4:	csel	x21, xzr, x10, eq  // eq = none
     aa8:	ldr	x10, [x21, #48]
     aac:	ldrb	w11, [x10]
     ab0:	tbnz	w11, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
     ab4:	sub	x11, x10, #0x18
     ab8:	cmp	x10, #0x0
     abc:	csel	x11, xzr, x11, eq  // eq = none
     ac0:	cbz	x10, 3c74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x381c>
     ac4:	ldrb	w10, [x11, #16]
     ac8:	cmp	w10, #0x4f
     acc:	b.ne	a84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x62c>  // b.any
     ad0:	ldr	w10, [x11, #20]
     ad4:	tst	w10, #0xffffffe
     ad8:	b.eq	a84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x62c>  // b.none
     adc:	cmp	w8, w9
     ae0:	b.cs	b08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x6b0>  // b.hs, b.nlast
     ae4:	ldr	x9, [sp, #256]
     ae8:	str	x21, [x9, w8, uxtw #3]
     aec:	ldr	w8, [sp, #264]
     af0:	ldr	w9, [sp, #268]
     af4:	cmp	w8, w9
     af8:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
     afc:	add	w8, w8, #0x1
     b00:	str	w8, [sp, #264]
     b04:	b	a84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x62c>
     b08:	add	x0, sp, #0x100
     b0c:	mov	w3, #0x8                   	// #8
     b10:	mov	x1, x19
     b14:	mov	x2, xzr
     b18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     b1c:	ldr	x12, [sp, #32]
     b20:	ldr	w8, [sp, #264]
     b24:	b	ae4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x68c>
     b28:	ldr	x20, [sp, #256]
     b2c:	cbz	w8, 1474 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x101c>
     b30:	add	x8, x20, w8, uxtw #3
     b34:	str	x8, [sp, #96]
     b38:	add	x8, sp, #0x218
     b3c:	sub	x9, x29, #0xb8
     b40:	mov	w19, #0x18                  	// #24
     b44:	add	x21, x8, #0x10
     b48:	add	x8, x9, #0x12
     b4c:	str	x8, [sp, #144]
     b50:	str	x21, [sp, #88]
     b54:	b	b68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x710>
     b58:	ldr	x8, [sp, #96]
     b5c:	add	x20, x20, #0x8
     b60:	cmp	x20, x8
     b64:	b.eq	146c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1014>  // b.none
     b68:	ldr	x0, [x20]
     b6c:	str	x0, [sp, #152]
     b70:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     b74:	mov	x24, x0
     b78:	cbz	x0, c00 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7a8>
     b7c:	ldrb	w8, [x24, #16]
     b80:	cmp	w8, #0x5a
     b84:	b.ne	c08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7b0>  // b.any
     b88:	ldr	x23, [x24]
     b8c:	mov	w8, #0x101                 	// #257
     b90:	mov	w0, #0x40                  	// #64
     b94:	str	xzr, [sp, #544]
     b98:	str	xzr, [sp, #536]
     b9c:	strh	w8, [sp, #552]
     ba0:	bl	0 <_ZN4llvm4UsernwEm>
     ba4:	mov	w2, #0x37                  	// #55
     ba8:	mov	x1, x23
     bac:	mov	x3, xzr
     bb0:	mov	w4, wzr
     bb4:	mov	x5, x24
     bb8:	mov	x22, x0
     bbc:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
     bc0:	mov	w25, #0x1                   	// #1
     bc4:	add	x1, sp, #0x218
     bc8:	mov	x0, x22
     bcc:	str	w25, [x22, #56]
     bd0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     bd4:	ldr	w1, [x22, #56]
     bd8:	mov	w2, #0x1                   	// #1
     bdc:	mov	x0, x22
     be0:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
     be4:	mov	x0, x22
     be8:	mov	x1, x24
     bec:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     bf0:	mov	x0, x24
     bf4:	mov	x1, x22
     bf8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     bfc:	b	c14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7bc>
     c00:	mov	w25, wzr
     c04:	b	c10 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7b8>
     c08:	mov	w25, wzr
     c0c:	mov	x24, xzr
     c10:	mov	x22, xzr
     c14:	ldr	x23, [sp, #152]
     c18:	mov	x0, x23
     c1c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     c20:	ldr	x23, [x23, #8]
     c24:	cbz	x23, c4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7f4>
     c28:	mov	x0, x23
     c2c:	bl	0 <_ZNK4llvm3Use7getUserEv>
     c30:	cbz	x0, 294c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24f4>
     c34:	ldrb	w8, [x0, #16]
     c38:	cmp	w8, #0x18
     c3c:	b.cc	c20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7c8>  // b.lo, b.ul, b.last
     c40:	sub	w8, w8, #0x19
     c44:	cmp	w8, #0xb
     c48:	b.cs	c20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x7c8>  // b.hs, b.nlast
     c4c:	add	x0, sp, #0x218
     c50:	mov	x1, x23
     c54:	mov	x2, xzr
     c58:	str	w25, [sp, #104]
     c5c:	stp	x20, x24, [sp, #112]
     c60:	str	x21, [sp, #536]
     c64:	str	d8, [sp, #544]
     c68:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
     c6c:	ldr	w8, [sp, #544]
     c70:	ldr	x20, [sp, #152]
     c74:	cbz	w8, 1440 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfe8>
     c78:	ldr	x9, [sp, #536]
     c7c:	add	x8, x9, x8, lsl #3
     c80:	str	x8, [sp, #128]
     c84:	ldr	x23, [x9]
     c88:	mov	x0, x20
     c8c:	str	x9, [sp, #136]
     c90:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     c94:	mov	x25, x0
     c98:	cbnz	x22, cc8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x870>
     c9c:	ldrb	w8, [x25, #16]
     ca0:	sub	w8, w8, #0x22
     ca4:	cmp	w8, #0x38
     ca8:	b.hi	1420 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfc8>  // b.pmore
     cac:	mov	w9, #0x1                   	// #1
     cb0:	lsl	x8, x9, x8
     cb4:	mov	x9, #0x1                   	// #1
     cb8:	movk	x9, #0x600, lsl #32
     cbc:	movk	x9, #0x100, lsl #48
     cc0:	tst	x8, x9
     cc4:	b.eq	1420 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfc8>  // b.none
     cc8:	mov	x0, x23
     ccc:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
     cd0:	mov	w8, #0x101                 	// #257
     cd4:	stp	xzr, xzr, [x29, #-184]
     cd8:	sturh	w8, [x29, #-168]
     cdc:	ldr	x26, [x23, #56]
     ce0:	mov	x27, x0
     ce4:	mov	w0, #0x40                  	// #64
     ce8:	bl	0 <_Znwm>
     cec:	sub	x2, x29, #0xb8
     cf0:	mov	x1, x27
     cf4:	mov	x3, x26
     cf8:	mov	x4, x20
     cfc:	mov	x24, x0
     d00:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
     d04:	mov	x0, x23
     d08:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     d0c:	cbz	x0, 3ecc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a74>
     d10:	ldrb	w8, [x0, #16]
     d14:	cmp	w8, #0x22
     d18:	b.eq	e4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9f4>  // b.none
     d1c:	cmp	w8, #0x20
     d20:	b.eq	da8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x950>  // b.none
     d24:	cmp	w8, #0x1d
     d28:	b.ne	3eb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a5c>  // b.any
     d2c:	mov	x8, x0
     d30:	ldr	x9, [x8, #-48]!
     d34:	cbz	x9, d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x904>
     d38:	ldp	x10, x9, [x0, #-40]
     d3c:	and	x9, x9, #0xfffffffffffffffc
     d40:	str	x10, [x9]
     d44:	ldur	x10, [x0, #-40]
     d48:	cbz	x10, d5c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x904>
     d4c:	ldr	x11, [x10, #16]
     d50:	and	x11, x11, #0x3
     d54:	orr	x9, x11, x9
     d58:	str	x9, [x10, #16]
     d5c:	stur	x24, [x0, #-48]
     d60:	mov	x9, x24
     d64:	ldr	x10, [x9, #8]!
     d68:	str	x10, [x0, #-40]!
     d6c:	cbz	x10, d88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x930>
     d70:	tst	x0, #0x3
     d74:	b.ne	3e14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39bc>  // b.any
     d78:	ldr	x11, [x10, #16]
     d7c:	and	x11, x11, #0x3
     d80:	orr	x11, x11, x0
     d84:	str	x11, [x10, #16]
     d88:	tst	x9, #0x3
     d8c:	b.ne	3e14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39bc>  // b.any
     d90:	ldr	x10, [x8, #16]
     d94:	and	x10, x10, #0x3
     d98:	orr	x10, x10, x9
     d9c:	str	x10, [x8, #16]
     da0:	str	x8, [x9]
     da4:	b	f00 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xaa8>
     da8:	ldrb	w8, [x0, #18]
     dac:	tbz	w8, #0, 3fcc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b74>
     db0:	ldr	w8, [x0, #20]
     db4:	add	x9, x0, #0x18
     db8:	and	x10, x8, #0xfffffff
     dbc:	mneg	x8, x10, x19
     dc0:	add	x8, x9, x8
     dc4:	ldr	x11, [x8]
     dc8:	neg	x10, x10
     dcc:	cbz	x11, df8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9a0>
     dd0:	madd	x12, x10, x19, x9
     dd4:	ldp	x13, x11, [x12, #8]
     dd8:	and	x11, x11, #0xfffffffffffffffc
     ddc:	str	x13, [x11]
     de0:	ldr	x12, [x12, #8]
     de4:	cbz	x12, df8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9a0>
     de8:	ldr	x13, [x12, #16]
     dec:	and	x13, x13, #0x3
     df0:	orr	x11, x13, x11
     df4:	str	x11, [x12, #16]
     df8:	str	x24, [x8]
     dfc:	mov	x11, x24
     e00:	ldr	x12, [x11, #8]!
     e04:	madd	x13, x10, x19, x9
     e08:	str	x12, [x13, #8]!
     e0c:	cbz	x12, e28 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x9d0>
     e10:	tst	x13, #0x3
     e14:	b.ne	3e14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39bc>  // b.any
     e18:	ldr	x14, [x12, #16]
     e1c:	and	x14, x14, #0x3
     e20:	orr	x13, x14, x13
     e24:	str	x13, [x12, #16]
     e28:	tst	x11, #0x3
     e2c:	b.ne	3e14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39bc>  // b.any
     e30:	madd	x9, x10, x19, x9
     e34:	ldr	x10, [x9, #16]!
     e38:	and	x10, x10, #0x3
     e3c:	orr	x10, x10, x11
     e40:	str	x10, [x9]
     e44:	str	x8, [x11]
     e48:	b	f00 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xaa8>
     e4c:	ldrb	w8, [x0, #18]
     e50:	tbz	w8, #0, 3fec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b94>
     e54:	ldr	w9, [x0, #20]
     e58:	and	x8, x9, #0xfffffff
     e5c:	cmp	w8, #0x1
     e60:	b.ls	400c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3bb4>  // b.plast
     e64:	tbnz	w9, #30, e80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa28>
     e68:	mneg	x8, x8, x19
     e6c:	add	x8, x0, x8
     e70:	mov	x9, x8
     e74:	ldr	x10, [x9, #24]!
     e78:	cbnz	x10, e90 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa38>
     e7c:	b	eb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa5c>
     e80:	ldur	x8, [x0, #-8]
     e84:	mov	x9, x8
     e88:	ldr	x10, [x9, #24]!
     e8c:	cbz	x10, eb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa5c>
     e90:	ldp	x11, x10, [x8, #32]
     e94:	and	x10, x10, #0xfffffffffffffffc
     e98:	str	x11, [x10]
     e9c:	ldr	x11, [x8, #32]
     ea0:	cbz	x11, eb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa5c>
     ea4:	ldr	x12, [x11, #16]
     ea8:	and	x12, x12, #0x3
     eac:	orr	x10, x12, x10
     eb0:	str	x10, [x11, #16]
     eb4:	str	x24, [x8, #24]
     eb8:	mov	x10, x24
     ebc:	ldr	x11, [x10, #8]!
     ec0:	mov	x12, x8
     ec4:	str	x11, [x12, #32]!
     ec8:	cbz	x11, ee4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xa8c>
     ecc:	tst	x12, #0x3
     ed0:	b.ne	3e14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39bc>  // b.any
     ed4:	ldr	x13, [x11, #16]
     ed8:	and	x13, x13, #0x3
     edc:	orr	x12, x13, x12
     ee0:	str	x12, [x11, #16]
     ee4:	tst	x10, #0x3
     ee8:	b.ne	3e14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39bc>  // b.any
     eec:	ldr	x11, [x8, #40]
     ef0:	and	x11, x11, #0x3
     ef4:	orr	x11, x11, x10
     ef8:	str	x11, [x8, #40]
     efc:	str	x9, [x10]
     f00:	ldr	x8, [x20, #48]
     f04:	ldrb	w9, [x8]
     f08:	tbnz	w9, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
     f0c:	mov	w9, wzr
     f10:	b	f38 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xae0>
     f14:	and	w11, w11, #0xfffffff
     f18:	mneg	x11, x11, x19
     f1c:	add	x10, x10, x11
     f20:	madd	x10, x12, x19, x10
     f24:	add	x10, x10, w9, uxtw #3
     f28:	str	x24, [x10, #8]
     f2c:	ldr	x8, [x8, #8]
     f30:	ldrb	w10, [x8]
     f34:	tbnz	w10, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
     f38:	cbz	x8, 3cd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x387c>
     f3c:	ldurb	w10, [x8, #-8]
     f40:	cmp	w10, #0x4f
     f44:	b.ne	1000 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xba8>  // b.any
     f48:	sub	x10, x8, #0x18
     f4c:	cmp	x22, x10
     f50:	b.eq	1000 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xba8>  // b.none
     f54:	ldr	w11, [x10, #20]
     f58:	tbnz	w11, #30, f6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb14>
     f5c:	and	x12, x11, #0xfffffff
     f60:	mneg	x12, x12, x19
     f64:	add	x13, x10, x12
     f68:	b	f70 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb18>
     f6c:	ldur	x13, [x10, #-8]
     f70:	ldr	w12, [x10, #56]
     f74:	madd	x13, x12, x19, x13
     f78:	add	x13, x13, w9, uxtw #3
     f7c:	ldr	x13, [x13, #8]
     f80:	cmp	x13, x23
     f84:	b.eq	fc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb6c>  // b.none
     f88:	and	x13, x11, #0xfffffff
     f8c:	cbz	w13, 3c34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37dc>
     f90:	mov	x9, xzr
     f94:	tbnz	w11, #30, fd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb80>
     f98:	mul	x14, x12, x19
     f9c:	umsubl	x14, w13, w19, x14
     fa0:	add	x14, x8, x14
     fa4:	sub	x14, x14, #0x10
     fa8:	ldr	x15, [x14, x9, lsl #3]
     fac:	cmp	x15, x23
     fb0:	b.eq	fcc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb74>  // b.none
     fb4:	add	x9, x9, #0x1
     fb8:	cmp	x13, x9
     fbc:	b.ne	fa8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb50>  // b.any
     fc0:	b	3c34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37dc>
     fc4:	cmn	w9, #0x1
     fc8:	b.eq	3c34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37dc>  // b.none
     fcc:	tbz	w11, #30, f14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xabc>
     fd0:	ldur	x10, [x10, #-8]
     fd4:	b	f20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xac8>
     fd8:	ldur	x14, [x10, #-8]
     fdc:	madd	x14, x12, x19, x14
     fe0:	add	x14, x14, #0x8
     fe4:	ldr	x15, [x14, x9, lsl #3]
     fe8:	cmp	x15, x23
     fec:	b.eq	fcc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb74>  // b.none
     ff0:	add	x9, x9, #0x1
     ff4:	cmp	x13, x9
     ff8:	b.ne	fe4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xb8c>  // b.any
     ffc:	b	3c34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37dc>
    1000:	cbz	x22, 104c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xbf4>
    1004:	ldr	x0, [sp, #120]
    1008:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    100c:	mov	x25, x0
    1010:	mov	w0, #0x38                  	// #56
    1014:	mov	w1, #0x1                   	// #1
    1018:	bl	0 <_ZN4llvm4UsernwEmj>
    101c:	mov	x1, x20
    1020:	mov	x2, x24
    1024:	mov	x26, x0
    1028:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockES2_>
    102c:	mov	x0, x25
    1030:	mov	x1, x26
    1034:	bl	0 <_ZN4llvm11Instruction12insertBeforeEPS0_>
    1038:	mov	x0, x22
    103c:	mov	x1, x25
    1040:	mov	x2, x24
    1044:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1048:	b	10f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc9c>
    104c:	cbz	x25, 3f8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b34>
    1050:	ldrb	w8, [x25, #16]
    1054:	sub	w9, w8, #0x4b
    1058:	cmp	w9, #0x1
    105c:	b.ls	1084 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc2c>  // b.plast
    1060:	cmp	w8, #0x22
    1064:	b.ne	402c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3bd4>  // b.any
    1068:	ldr	w9, [x25, #20]
    106c:	and	x8, x9, #0xfffffff
    1070:	cbz	w8, 4044 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3bec>
    1074:	tbnz	w9, #30, 108c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc34>
    1078:	mneg	x8, x8, x19
    107c:	add	x8, x25, x8
    1080:	b	1090 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc38>
    1084:	sub	x8, x25, #0x18
    1088:	b	1090 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc38>
    108c:	ldur	x8, [x25, #-8]
    1090:	ldr	x26, [x8]
    1094:	mov	w8, #0x101                 	// #257
    1098:	mov	w0, #0x38                  	// #56
    109c:	mov	w1, #0x1                   	// #1
    10a0:	stp	xzr, xzr, [x29, #-184]
    10a4:	sturh	w8, [x29, #-168]
    10a8:	bl	0 <_ZN4llvm4UsernwEmj>
    10ac:	sub	x6, x29, #0xb8
    10b0:	mov	w1, #0x33                  	// #51
    10b4:	mov	w5, #0x1                   	// #1
    10b8:	mov	x2, x26
    10bc:	mov	x3, xzr
    10c0:	mov	x4, xzr
    10c4:	mov	x7, x24
    10c8:	mov	x25, x0
    10cc:	bl	0 <_ZN4llvm14FuncletPadInstC2ENS_11Instruction13FuncletPadOpsEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_10BasicBlockE>
    10d0:	cbz	x25, 3fac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b54>
    10d4:	mov	w0, #0x38                  	// #56
    10d8:	mov	w1, #0x2                   	// #2
    10dc:	bl	0 <_ZN4llvm4UsernwEmj>
    10e0:	mov	w3, #0x2                   	// #2
    10e4:	mov	x1, x25
    10e8:	mov	x2, x20
    10ec:	mov	x4, x24
    10f0:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjS4_>
    10f4:	mov	x0, x20
    10f8:	bl	0 <_ZNK4llvm5Value7getNameEv>
    10fc:	sub	x8, x29, #0x50
    1100:	str	x8, [sp, #464]
    1104:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1108:	add	x8, x8, #0x0
    110c:	stp	x0, x1, [x29, #-80]
    1110:	str	x8, [sp, #472]
    1114:	mov	w8, #0x305                 	// #773
    1118:	mov	x0, x23
    111c:	strh	w8, [sp, #480]
    1120:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1124:	ldrb	w8, [sp, #480]
    1128:	stp	x0, x1, [sp, #208]
    112c:	cmp	w8, #0x1
    1130:	b.eq	1148 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xcf0>  // b.none
    1134:	cbnz	w8, 1170 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd18>
    1138:	mov	w8, #0x100                 	// #256
    113c:	stp	xzr, xzr, [x29, #-184]
    1140:	sturh	w8, [x29, #-168]
    1144:	b	11bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd64>
    1148:	add	x10, sp, #0xd0
    114c:	stp	x10, xzr, [x29, #-184]
    1150:	mov	w10, #0x105                 	// #261
    1154:	ldr	w8, [sp, #160]
    1158:	ldrh	w9, [sp, #164]
    115c:	sturh	w10, [x29, #-168]
    1160:	ldr	x10, [sp, #144]
    1164:	strh	w9, [x10, #4]
    1168:	str	w8, [x10]
    116c:	b	11bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd64>
    1170:	ldrb	w9, [sp, #481]
    1174:	ldr	x10, [sp, #464]
    1178:	cmp	w9, #0x1
    117c:	mov	w9, #0x2                   	// #2
    1180:	csel	w9, w8, w9, eq  // eq = none
    1184:	add	x8, sp, #0x1d0
    1188:	csel	x8, x10, x8, eq  // eq = none
    118c:	add	x10, sp, #0xd0
    1190:	sturb	w9, [x29, #-168]
    1194:	cmp	w9, #0x2
    1198:	mov	w9, #0x5                   	// #5
    119c:	stp	x8, x10, [x29, #-184]
    11a0:	sturb	w9, [x29, #-167]
    11a4:	b.ne	11bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd64>  // b.any
    11a8:	ldrb	w9, [x8, #16]
    11ac:	cbz	w9, 3cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x389c>
    11b0:	ldrb	w8, [x8, #17]
    11b4:	cmp	w8, #0x1
    11b8:	b.eq	3cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x389c>  // b.none
    11bc:	sub	x1, x29, #0xb8
    11c0:	mov	x0, x24
    11c4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    11c8:	ldr	x8, [x20, #48]
    11cc:	ldrb	w9, [x8]
    11d0:	tbnz	w9, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
    11d4:	sub	x9, x8, #0x18
    11d8:	cmp	x8, #0x0
    11dc:	csel	x25, xzr, x9, eq  // eq = none
    11e0:	cbz	x8, 3c74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x381c>
    11e4:	ldrb	w8, [x25, #16]
    11e8:	cmp	w8, #0x4f
    11ec:	b.ne	3e34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39dc>  // b.any
    11f0:	ldr	w9, [x25, #20]
    11f4:	and	x8, x9, #0xfffffff
    11f8:	cbz	w8, 29f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25a0>
    11fc:	ldr	w10, [x25, #56]
    1200:	mov	x26, xzr
    1204:	tbnz	w9, #30, 1238 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xde0>
    1208:	add	x10, x10, x10, lsl #1
    120c:	add	x11, x8, w8, uxtw #1
    1210:	sub	x10, x10, x11
    1214:	add	x10, x25, x10, lsl #3
    1218:	add	x10, x10, #0x8
    121c:	ldr	x11, [x10, x26, lsl #3]
    1220:	cmp	x11, x24
    1224:	b.eq	1260 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe08>  // b.none
    1228:	add	x26, x26, #0x1
    122c:	cmp	x8, x26
    1230:	b.ne	121c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xdc4>  // b.any
    1234:	b	29f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25a0>
    1238:	ldur	x11, [x25, #-8]
    123c:	madd	x10, x10, x19, x11
    1240:	add	x10, x10, #0x8
    1244:	ldr	x11, [x10, x26, lsl #3]
    1248:	cmp	x11, x24
    124c:	b.eq	1260 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe08>  // b.none
    1250:	add	x26, x26, #0x1
    1254:	cmp	x8, x26
    1258:	b.ne	1244 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xdec>  // b.any
    125c:	b	29f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25a0>
    1260:	cmp	w8, w26
    1264:	b.ls	29f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25a0>  // b.plast
    1268:	tbnz	w9, #30, 1278 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe20>
    126c:	mneg	x8, x8, x19
    1270:	add	x8, x25, x8
    1274:	b	127c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe24>
    1278:	ldur	x8, [x25, #-8]
    127c:	and	x9, x26, #0xffffffff
    1280:	mul	x9, x9, x19
    1284:	ldr	x27, [x8, x9]
    1288:	ldr	x28, [x27]
    128c:	mov	x0, x27
    1290:	bl	0 <_ZNK4llvm5Value7getNameEv>
    1294:	sub	x8, x29, #0x50
    1298:	str	x8, [sp, #464]
    129c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    12a0:	add	x8, x8, #0x0
    12a4:	stp	x0, x1, [x29, #-80]
    12a8:	str	x8, [sp, #472]
    12ac:	mov	w8, #0x305                 	// #773
    12b0:	mov	x0, x20
    12b4:	strh	w8, [sp, #480]
    12b8:	bl	0 <_ZNK4llvm5Value7getNameEv>
    12bc:	ldrb	w8, [sp, #480]
    12c0:	stp	x0, x1, [sp, #208]
    12c4:	cmp	w8, #0x1
    12c8:	b.eq	12e0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xe88>  // b.none
    12cc:	cbnz	w8, 1308 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xeb0>
    12d0:	mov	w8, #0x100                 	// #256
    12d4:	stp	xzr, xzr, [x29, #-184]
    12d8:	sturh	w8, [x29, #-168]
    12dc:	b	1354 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xefc>
    12e0:	add	x10, sp, #0xd0
    12e4:	stp	x10, xzr, [x29, #-184]
    12e8:	mov	w10, #0x105                 	// #261
    12ec:	ldr	w8, [sp, #160]
    12f0:	ldrh	w9, [sp, #164]
    12f4:	sturh	w10, [x29, #-168]
    12f8:	ldr	x10, [sp, #144]
    12fc:	strh	w9, [x10, #4]
    1300:	str	w8, [x10]
    1304:	b	1354 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xefc>
    1308:	ldrb	w9, [sp, #481]
    130c:	ldr	x10, [sp, #464]
    1310:	cmp	w9, #0x1
    1314:	mov	w9, #0x2                   	// #2
    1318:	csel	w9, w8, w9, eq  // eq = none
    131c:	add	x8, sp, #0x1d0
    1320:	csel	x8, x10, x8, eq  // eq = none
    1324:	add	x10, sp, #0xd0
    1328:	sturb	w9, [x29, #-168]
    132c:	cmp	w9, #0x2
    1330:	mov	w9, #0x5                   	// #5
    1334:	stp	x8, x10, [x29, #-184]
    1338:	sturb	w9, [x29, #-167]
    133c:	b.ne	1354 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xefc>  // b.any
    1340:	ldrb	w9, [x8, #16]
    1344:	cbz	w9, 3cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x389c>
    1348:	ldrb	w8, [x8, #17]
    134c:	cmp	w8, #0x1
    1350:	b.eq	3cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x389c>  // b.none
    1354:	ldr	x8, [x24, #48]
    1358:	ldrb	w9, [x8]
    135c:	tbnz	w9, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
    1360:	sub	x9, x8, #0x18
    1364:	cmp	x8, #0x0
    1368:	mov	w0, #0x40                  	// #64
    136c:	csel	x21, xzr, x9, eq  // eq = none
    1370:	bl	0 <_ZN4llvm4UsernwEm>
    1374:	mov	w2, #0x37                  	// #55
    1378:	mov	x1, x28
    137c:	mov	x3, xzr
    1380:	mov	w4, wzr
    1384:	mov	x5, x21
    1388:	mov	x20, x0
    138c:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
    1390:	mov	w8, #0x1                   	// #1
    1394:	sub	x1, x29, #0xb8
    1398:	mov	x0, x20
    139c:	str	w8, [x20, #56]
    13a0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    13a4:	ldr	w1, [x20, #56]
    13a8:	mov	w2, #0x1                   	// #1
    13ac:	mov	x0, x20
    13b0:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
    13b4:	mov	x0, x20
    13b8:	mov	x1, x27
    13bc:	mov	x2, x23
    13c0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    13c4:	mov	x0, x25
    13c8:	mov	w1, w26
    13cc:	mov	x2, x20
    13d0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    13d4:	ldp	x8, x9, [x25, #32]
    13d8:	ldr	x20, [sp, #152]
    13dc:	add	x9, x9, #0x28
    13e0:	cmp	x9, x8
    13e4:	b.eq	3c74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x381c>  // b.none
    13e8:	ldrb	w9, [x8]
    13ec:	tbnz	w9, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
    13f0:	cbz	x8, 3c74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x381c>
    13f4:	sub	x8, x8, #0x18
    13f8:	ldrb	w9, [x8, #16]
    13fc:	cmp	w9, #0x4f
    1400:	csel	x25, x8, xzr, eq  // eq = none
    1404:	cmp	x25, x22
    1408:	b.ne	11f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xd98>  // b.any
    140c:	ldp	x8, x9, [sp, #128]
    1410:	add	x9, x9, #0x8
    1414:	cmp	x9, x8
    1418:	b.ne	c84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x82c>  // b.any
    141c:	b	1440 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xfe8>
    1420:	mov	x0, x23
    1424:	mov	x1, x20
    1428:	mov	x2, xzr
    142c:	mov	x3, xzr
    1430:	mov	x4, xzr
    1434:	bl	0 <_ZN4llvm9SplitEdgeEPNS_10BasicBlockES1_PNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterE>
    1438:	mov	x24, x0
    143c:	b	10f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xc9c>
    1440:	ldr	w8, [sp, #104]
    1444:	tbz	w8, #0, 1450 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0xff8>
    1448:	ldr	x0, [sp, #120]
    144c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1450:	ldr	x0, [sp, #536]
    1454:	ldr	x21, [sp, #88]
    1458:	ldr	x20, [sp, #112]
    145c:	cmp	x0, x21
    1460:	b.eq	b58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x700>  // b.none
    1464:	bl	0 <free>
    1468:	b	b58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x700>
    146c:	ldr	x20, [sp, #256]
    1470:	ldr	x12, [sp, #32]
    1474:	add	x8, sp, #0x100
    1478:	add	x8, x8, #0x10
    147c:	cmp	x20, x8
    1480:	b.eq	1490 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1038>  // b.none
    1484:	mov	x0, x20
    1488:	bl	0 <free>
    148c:	ldr	x12, [sp, #32]
    1490:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1494:	ldr	d10, [x8]
    1498:	add	x21, sp, #0x218
    149c:	add	x19, x21, #0x10
    14a0:	str	x19, [sp, #536]
    14a4:	str	d10, [sp, #544]
    14a8:	ldr	x20, [x12, #80]
    14ac:	ldr	x8, [sp, #48]
    14b0:	cmp	x8, x20
    14b4:	b.eq	1560 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1108>  // b.none
    14b8:	mov	w8, wzr
    14bc:	mov	w9, #0x20                  	// #32
    14c0:	ldrb	w10, [x20]
    14c4:	tbnz	w10, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
    14c8:	sub	x10, x20, #0x18
    14cc:	cmp	x20, #0x0
    14d0:	csel	x22, xzr, x10, eq  // eq = none
    14d4:	cmp	w8, w9
    14d8:	b.cs	1510 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10b8>  // b.hs, b.nlast
    14dc:	ldr	x9, [sp, #536]
    14e0:	str	x22, [x9, w8, uxtw #3]
    14e4:	ldr	w8, [sp, #544]
    14e8:	ldr	w9, [sp, #548]
    14ec:	cmp	w8, w9
    14f0:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    14f4:	add	x8, x8, #0x1
    14f8:	str	w8, [sp, #544]
    14fc:	ldr	x20, [x20, #8]
    1500:	ldr	x10, [sp, #48]
    1504:	cmp	x10, x20
    1508:	b.ne	14c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1068>  // b.any
    150c:	b	152c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x10d4>
    1510:	add	x0, sp, #0x218
    1514:	mov	w3, #0x8                   	// #8
    1518:	mov	x1, x19
    151c:	mov	x2, xzr
    1520:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1524:	ldr	w8, [sp, #544]
    1528:	b	14dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1084>
    152c:	ldr	x19, [sp, #536]
    1530:	clz	x9, x8
    1534:	mov	w10, #0x7e                  	// #126
    1538:	sub	x2, x10, x9, lsl #1
    153c:	add	x20, x19, x8, lsl #3
    1540:	mov	x0, x19
    1544:	mov	x1, x20
    1548:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    154c:	mov	x0, x19
    1550:	mov	x1, x20
    1554:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1558:	ldr	w25, [sp, #544]
    155c:	b	1564 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x110c>
    1560:	mov	w25, wzr
    1564:	add	x22, x21, #0x120
    1568:	mov	w8, w25
    156c:	str	d10, [sp, #816]
    1570:	str	x22, [sp, #808]
    1574:	str	x8, [sp, #56]
    1578:	cbz	w25, 1790 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1338>
    157c:	cmp	w25, #0x21
    1580:	b.cc	1688 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1230>  // b.lo, b.ul, b.last
    1584:	ldr	x10, [sp, #56]
    1588:	mov	w8, #0x40                  	// #64
    158c:	mov	w9, #0xffffffff            	// #-1
    1590:	cmp	x10, #0x40
    1594:	csel	x8, x10, x8, hi  // hi = pmore
    1598:	cmp	x8, x9
    159c:	csel	x20, x8, x9, cc  // cc = lo, ul, last
    15a0:	mov	w8, #0x38                  	// #56
    15a4:	mul	x0, x20, x8
    15a8:	bl	0 <malloc>
    15ac:	cbnz	x0, 166c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1214>
    15b0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    15b4:	add	x0, x0, #0x0
    15b8:	mov	w1, #0x1                   	// #1
    15bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    15c0:	ldr	w9, [sp, #816]
    15c4:	ldr	x19, [sp, #808]
    15c8:	cbz	w9, 1658 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1200>
    15cc:	mov	w10, #0x38                  	// #56
    15d0:	mov	x8, xzr
    15d4:	madd	x9, x9, x10, x19
    15d8:	mov	x10, x19
    15dc:	ldr	q0, [x19, x8]
    15e0:	str	q0, [x8]
    15e4:	ldr	w11, [x10, #16]
    15e8:	str	w11, [x8, #16]
    15ec:	ldur	q0, [x10, #24]
    15f0:	stp	xzr, xzr, [x10]
    15f4:	str	wzr, [x10, #16]
    15f8:	stur	q0, [x8, #24]
    15fc:	ldr	w11, [x10, #40]
    1600:	str	w11, [x8, #40]
    1604:	ldrh	w11, [x10, #48]
    1608:	stp	xzr, xzr, [x10, #24]
    160c:	str	wzr, [x10, #40]
    1610:	add	x10, x10, #0x38
    1614:	cmp	x10, x9
    1618:	strh	w11, [x8, #48]
    161c:	add	x8, x8, #0x38
    1620:	b.ne	15dc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1184>  // b.any
    1624:	ldr	w8, [sp, #816]
    1628:	ldr	x19, [sp, #808]
    162c:	cbz	w8, 1658 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1200>
    1630:	mov	w9, #0x38                  	// #56
    1634:	mul	x23, x8, x9
    1638:	add	x24, x19, x23
    163c:	ldur	x0, [x24, #-32]
    1640:	bl	0 <free>
    1644:	ldur	x0, [x24, #-56]
    1648:	bl	0 <free>
    164c:	subs	x23, x23, #0x38
    1650:	b.ne	1638 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x11e0>  // b.any
    1654:	ldr	x19, [sp, #808]
    1658:	cmp	x19, x22
    165c:	b.eq	1668 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1210>  // b.none
    1660:	mov	x0, x19
    1664:	bl	0 <free>
    1668:	mov	x0, xzr
    166c:	ldr	w8, [sp, #816]
    1670:	str	x0, [sp, #808]
    1674:	str	w20, [sp, #820]
    1678:	ldr	x9, [sp, #56]
    167c:	cmp	x8, x9
    1680:	b.ne	16a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1248>  // b.any
    1684:	b	16e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x128c>
    1688:	mov	x8, xzr
    168c:	mov	w20, #0x20                  	// #32
    1690:	mov	x0, x22
    1694:	ldr	x9, [sp, #56]
    1698:	cmp	x8, x9
    169c:	b.eq	16e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x128c>  // b.none
    16a0:	ldr	x10, [sp, #56]
    16a4:	mov	w9, #0x38                  	// #56
    16a8:	mov	x11, #0x2493                	// #9363
    16ac:	movk	x11, #0x9249, lsl #16
    16b0:	sub	x10, x10, x8
    16b4:	madd	x0, x8, x9, x0
    16b8:	mul	x8, x10, x9
    16bc:	movk	x11, #0x4924, lsl #32
    16c0:	sub	x8, x8, #0x38
    16c4:	movk	x11, #0x2492, lsl #48
    16c8:	lsr	x8, x8, #3
    16cc:	umulh	x8, x8, x11
    16d0:	orr	x10, xzr, #0x38
    16d4:	madd	x2, x8, x9, x10
    16d8:	mov	w1, wzr
    16dc:	bl	0 <memset>
    16e0:	ldr	w20, [sp, #820]
    16e4:	cmp	w20, w25
    16e8:	b.cc	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.lo, b.ul, b.last
    16ec:	mov	x20, xzr
    16f0:	mov	w22, #0x38                  	// #56
    16f4:	mov	w23, #0x1                   	// #1
    16f8:	str	w25, [sp, #816]
    16fc:	ldr	x24, [sp, #808]
    1700:	mov	w1, w25
    1704:	mov	w2, wzr
    1708:	madd	x19, x20, x22, x24
    170c:	mov	x0, x19
    1710:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1714:	add	x0, x19, #0x18
    1718:	mov	w1, w25
    171c:	mov	w2, wzr
    1720:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1724:	ldr	x8, [x19]
    1728:	cbz	x8, 40f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c9c>
    172c:	madd	x9, x20, x22, x24
    1730:	ldr	x10, [x9, #8]
    1734:	ubfx	x9, x20, #6, #26
    1738:	cmp	x10, x9
    173c:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1740:	lsl	x9, x9, #3
    1744:	ldr	x10, [x8, x9]
    1748:	lsl	x11, x23, x20
    174c:	add	x20, x20, #0x1
    1750:	orr	x10, x10, x11
    1754:	ldr	x11, [sp, #56]
    1758:	str	x10, [x8, x9]
    175c:	cmp	x20, x11
    1760:	b.eq	1790 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1338>  // b.none
    1764:	ldr	w8, [sp, #816]
    1768:	cmp	x20, x8
    176c:	b.cc	16fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x12a4>  // b.lo, b.ul, b.last
    1770:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1774:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1778:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    177c:	add	x0, x0, #0x0
    1780:	add	x1, x1, #0x0
    1784:	add	x3, x3, #0x0
    1788:	mov	w2, #0x95                  	// #149
    178c:	bl	0 <__assert_fail>
    1790:	ldr	x5, [sp, #40]
    1794:	ldr	w14, [x5, #16]
    1798:	cbz	w14, 1834 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x13dc>
    179c:	ldr	w8, [sp, #544]
    17a0:	cbz	w8, 3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>
    17a4:	ldr	x9, [x5, #8]
    17a8:	ldr	x11, [sp, #536]
    17ac:	ldr	w10, [sp, #816]
    17b0:	ldr	x12, [sp, #808]
    17b4:	mov	w13, #0x38                  	// #56
    17b8:	add	x14, x9, x14, lsl #3
    17bc:	add	x15, x11, x8, lsl #3
    17c0:	mov	w16, #0x1                   	// #1
    17c4:	ldr	x17, [x9]
    17c8:	mov	x0, x8
    17cc:	ldr	x18, [x17, #40]
    17d0:	mov	x17, x11
    17d4:	lsr	x1, x0, #1
    17d8:	add	x2, x17, x1, lsl #3
    17dc:	ldr	x3, [x2], #8
    17e0:	mvn	x4, x1
    17e4:	add	x0, x0, x4
    17e8:	cmp	x3, x18
    17ec:	csel	x0, x0, x1, cc  // cc = lo, ul, last
    17f0:	csel	x17, x2, x17, cc  // cc = lo, ul, last
    17f4:	cmp	x0, #0x0
    17f8:	b.gt	17d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x137c>
    17fc:	cmp	x17, x15
    1800:	b.eq	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.none
    1804:	ldr	x0, [x17]
    1808:	cmp	x0, x18
    180c:	b.ne	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.any
    1810:	sub	x17, x17, x11
    1814:	asr	x17, x17, #3
    1818:	cmp	x17, x10
    181c:	b.cs	1770 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1318>  // b.hs, b.nlast
    1820:	add	x9, x9, #0x8
    1824:	madd	x17, x17, x13, x12
    1828:	cmp	x9, x14
    182c:	strb	w16, [x17, #49]
    1830:	b.ne	17c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x136c>  // b.any
    1834:	ldr	w8, [x5, #96]
    1838:	str	w25, [sp, #28]
    183c:	cbz	w8, 1af4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x169c>
    1840:	ldr	x9, [sp, #40]
    1844:	mov	w23, #0x38                  	// #56
    1848:	mov	w25, #0x1                   	// #1
    184c:	ldr	x22, [x9, #88]
    1850:	add	x24, x22, x8, lsl #3
    1854:	b	1864 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x140c>
    1858:	add	x22, x22, #0x8
    185c:	cmp	x22, x24
    1860:	b.eq	1af4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x169c>  // b.none
    1864:	ldr	x19, [x22]
    1868:	ldr	w11, [sp, #544]
    186c:	ldr	x8, [sp, #536]
    1870:	ldr	x9, [x19, #40]
    1874:	cbz	w11, 18b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1460>
    1878:	mov	x10, x8
    187c:	mov	x12, x11
    1880:	lsr	x13, x12, #1
    1884:	add	x14, x10, x13, lsl #3
    1888:	ldr	x15, [x14], #8
    188c:	mvn	x16, x13
    1890:	add	x12, x12, x16
    1894:	cmp	x15, x9
    1898:	csel	x12, x12, x13, cc  // cc = lo, ul, last
    189c:	csel	x10, x14, x10, cc  // cc = lo, ul, last
    18a0:	cmp	x12, #0x0
    18a4:	b.gt	1880 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1428>
    18a8:	add	x11, x8, x11, lsl #3
    18ac:	cmp	x10, x11
    18b0:	b.ne	18cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1474>  // b.any
    18b4:	b	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>
    18b8:	mov	x11, xzr
    18bc:	mov	x10, x8
    18c0:	add	x11, x8, x11, lsl #3
    18c4:	cmp	x10, x11
    18c8:	b.eq	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.none
    18cc:	ldr	x11, [x10]
    18d0:	cmp	x11, x9
    18d4:	b.ne	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.any
    18d8:	ldr	w9, [sp, #816]
    18dc:	sub	x8, x10, x8
    18e0:	asr	x26, x8, #3
    18e4:	cmp	x26, x9
    18e8:	b.cs	1770 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1318>  // b.hs, b.nlast
    18ec:	ldr	x27, [sp, #808]
    18f0:	madd	x28, x26, x23, x27
    18f4:	ldr	w1, [x28, #16]!
    18f8:	ldr	w8, [x28, #24]
    18fc:	add	x20, x28, #0x8
    1900:	strb	w25, [x28, #32]
    1904:	cmp	w8, w1
    1908:	b.cs	191c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14c4>  // b.hs, b.nlast
    190c:	mov	x0, x20
    1910:	mov	w2, wzr
    1914:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1918:	ldr	w1, [x28]
    191c:	add	w8, w1, #0x3f
    1920:	lsr	w8, w8, #6
    1924:	cbz	w8, 1978 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1520>
    1928:	madd	x10, x26, x23, x27
    192c:	mov	x9, xzr
    1930:	add	x11, x10, #0x8
    1934:	add	x12, x10, #0x20
    1938:	ldr	x13, [x11]
    193c:	cmp	x13, x9
    1940:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1944:	ldr	x13, [x12]
    1948:	cmp	x13, x9
    194c:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1950:	ldr	x13, [x10]
    1954:	ldr	x14, [x20]
    1958:	lsl	x15, x9, #3
    195c:	add	x9, x9, #0x1
    1960:	ldr	x13, [x13, x15]
    1964:	ldr	x16, [x14, x15]
    1968:	cmp	x8, x9
    196c:	orr	x13, x16, x13
    1970:	str	x13, [x14, x15]
    1974:	b.ne	1938 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x14e0>  // b.any
    1978:	cbz	x19, 4074 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c1c>
    197c:	ldur	x8, [x19, #-24]
    1980:	ldrb	w9, [x8, #16]
    1984:	cmp	w9, #0x0
    1988:	csel	x8, x8, xzr, eq  // eq = none
    198c:	ldr	w8, [x8, #36]
    1990:	cmp	w8, #0x23
    1994:	b.ne	1858 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1400>  // b.any
    1998:	mov	x0, x19
    199c:	mov	w1, wzr
    19a0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    19a4:	cbz	x0, 4114 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3cbc>
    19a8:	ldrb	w8, [x0, #16]
    19ac:	cmp	w8, #0x10
    19b0:	b.eq	1858 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1400>  // b.none
    19b4:	cmp	w8, #0x50
    19b8:	b.ne	9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>  // b.any
    19bc:	ldur	x8, [x0, #-24]
    19c0:	cbz	x8, 9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>
    19c4:	ldrb	w9, [x8, #16]
    19c8:	cbnz	w9, 9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>
    19cc:	ldrb	w9, [x8, #33]
    19d0:	tbz	w9, #5, 9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>
    19d4:	ldr	w8, [x8, #36]
    19d8:	cmp	w8, #0x20
    19dc:	b.ne	9e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x58c>  // b.any
    19e0:	ldr	x9, [x0, #40]
    19e4:	ldr	w11, [sp, #544]
    19e8:	ldr	x8, [sp, #536]
    19ec:	cbz	w11, 1a30 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x15d8>
    19f0:	mov	x10, x8
    19f4:	mov	x12, x11
    19f8:	lsr	x13, x12, #1
    19fc:	add	x14, x10, x13, lsl #3
    1a00:	ldr	x15, [x14], #8
    1a04:	mvn	x16, x13
    1a08:	add	x12, x12, x16
    1a0c:	cmp	x15, x9
    1a10:	csel	x12, x12, x13, cc  // cc = lo, ul, last
    1a14:	csel	x10, x14, x10, cc  // cc = lo, ul, last
    1a18:	cmp	x12, #0x0
    1a1c:	b.gt	19f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x15a0>
    1a20:	add	x11, x8, x11, lsl #3
    1a24:	cmp	x10, x11
    1a28:	b.ne	1a44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x15ec>  // b.any
    1a2c:	b	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>
    1a30:	mov	x11, xzr
    1a34:	mov	x10, x8
    1a38:	add	x11, x8, x11, lsl #3
    1a3c:	cmp	x10, x11
    1a40:	b.eq	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.none
    1a44:	ldr	x11, [x10]
    1a48:	cmp	x11, x9
    1a4c:	b.ne	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.any
    1a50:	ldr	w9, [sp, #816]
    1a54:	sub	x8, x10, x8
    1a58:	asr	x20, x8, #3
    1a5c:	cmp	x20, x9
    1a60:	b.cs	1770 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1318>  // b.hs, b.nlast
    1a64:	ldr	x26, [sp, #808]
    1a68:	madd	x27, x20, x23, x26
    1a6c:	ldr	w1, [x27, #16]!
    1a70:	ldr	w8, [x27, #24]
    1a74:	add	x19, x27, #0x8
    1a78:	strb	w25, [x27, #32]
    1a7c:	cmp	w8, w1
    1a80:	b.cs	1a94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x163c>  // b.hs, b.nlast
    1a84:	mov	x0, x19
    1a88:	mov	w2, wzr
    1a8c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1a90:	ldr	w1, [x27]
    1a94:	add	w8, w1, #0x3f
    1a98:	lsr	w8, w8, #6
    1a9c:	cbz	w8, 1858 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1400>
    1aa0:	madd	x10, x20, x23, x26
    1aa4:	mov	x9, xzr
    1aa8:	add	x11, x10, #0x8
    1aac:	add	x12, x10, #0x20
    1ab0:	ldr	x13, [x11]
    1ab4:	cmp	x13, x9
    1ab8:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1abc:	ldr	x13, [x12]
    1ac0:	cmp	x13, x9
    1ac4:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1ac8:	ldr	x13, [x10]
    1acc:	ldr	x14, [x19]
    1ad0:	lsl	x15, x9, #3
    1ad4:	add	x9, x9, #0x1
    1ad8:	ldr	x13, [x13, x15]
    1adc:	ldr	x16, [x14, x15]
    1ae0:	cmp	x8, x9
    1ae4:	orr	x13, x16, x13
    1ae8:	str	x13, [x14, x15]
    1aec:	b.ne	1ab0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1658>  // b.any
    1af0:	b	1858 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1400>
    1af4:	add	x8, x21, #0x110
    1af8:	stp	x8, xzr, [sp, #8]
    1afc:	adrp	x27, 0 <_ZN4llvm9DebugFlagE>
    1b00:	ldr	x27, [x27]
    1b04:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1b08:	mov	w25, #0x38                  	// #56
    1b0c:	add	x20, x20, #0x0
    1b10:	b	1b18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x16c0>
    1b14:	tbz	w23, #0, 2484 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x202c>
    1b18:	ldrb	w8, [x27]
    1b1c:	cbz	w8, 1bc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x176c>
    1b20:	mov	x0, x20
    1b24:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1b28:	tbz	w0, #0, 1b8c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1734>
    1b2c:	bl	0 <_ZN4llvm4dbgsEv>
    1b30:	ldp	x9, x8, [x0, #16]
    1b34:	sub	x9, x9, x8
    1b38:	cmp	x9, #0x9
    1b3c:	b.hi	1b54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x16fc>  // b.pmore
    1b40:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1b44:	mov	w2, #0xa                   	// #10
    1b48:	add	x1, x1, #0x0
    1b4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b50:	b	1b78 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1720>
    1b54:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1b58:	add	x9, x9, #0x0
    1b5c:	ldr	x9, [x9]
    1b60:	mov	w10, #0x206e                	// #8302
    1b64:	strh	w10, [x8, #8]
    1b68:	str	x9, [x8]
    1b6c:	ldr	x8, [x0, #24]
    1b70:	add	x8, x8, #0xa
    1b74:	str	x8, [x0, #24]
    1b78:	ldr	x8, [sp, #16]
    1b7c:	add	w8, w8, #0x1
    1b80:	sxtw	x1, w8
    1b84:	str	x8, [sp, #16]
    1b88:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1b8c:	ldrb	w8, [x27]
    1b90:	cbz	w8, 1bc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x176c>
    1b94:	mov	x0, x20
    1b98:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1b9c:	tbz	w0, #0, 1bc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x176c>
    1ba0:	bl	0 <_ZN4llvm4dbgsEv>
    1ba4:	ldp	x9, x8, [x0, #16]
    1ba8:	sub	x9, x9, x8
    1bac:	cmp	x9, #0xe
    1bb0:	b.hi	2458 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2000>  // b.pmore
    1bb4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1bb8:	mov	w2, #0xf                   	// #15
    1bbc:	add	x1, x1, #0x0
    1bc0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1bc4:	ldr	w8, [sp, #28]
    1bc8:	cbz	w8, 2484 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x202c>
    1bcc:	mov	w23, wzr
    1bd0:	mov	x21, xzr
    1bd4:	b	1be8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1790>
    1bd8:	ldp	x8, x21, [sp, #56]
    1bdc:	add	x21, x21, #0x1
    1be0:	cmp	x21, x8
    1be4:	b.eq	1b14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x16bc>  // b.none
    1be8:	ldr	w8, [sp, #816]
    1bec:	cmp	x21, x8
    1bf0:	b.cs	1770 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1318>  // b.hs, b.nlast
    1bf4:	cbz	w8, 3db4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x395c>
    1bf8:	ldr	w8, [sp, #544]
    1bfc:	cmp	w8, w21
    1c00:	b.ls	3d94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x393c>  // b.plast
    1c04:	ldr	x8, [sp, #536]
    1c08:	ldr	x19, [sp, #808]
    1c0c:	ldr	x0, [x8, x21, lsl #3]
    1c10:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    1c14:	str	x21, [sp, #64]
    1c18:	cbz	x0, 1bd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1780>
    1c1c:	mov	x28, x0
    1c20:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    1c24:	cbz	w0, 1bd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1780>
    1c28:	madd	x21, x21, x25, x19
    1c2c:	add	x8, x21, #0x10
    1c30:	str	x8, [sp, #120]
    1c34:	add	x8, x21, #0x28
    1c38:	stp	x8, x28, [sp, #88]
    1c3c:	add	x8, x21, #0x18
    1c40:	str	x8, [sp, #104]
    1c44:	add	x8, x21, #0x30
    1c48:	mov	x1, xzr
    1c4c:	add	x24, x21, #0x8
    1c50:	add	x22, x21, #0x20
    1c54:	str	x8, [sp, #80]
    1c58:	mov	w8, w0
    1c5c:	str	x8, [sp, #72]
    1c60:	mov	x0, x28
    1c64:	str	x1, [sp, #128]
    1c68:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    1c6c:	ldr	w10, [sp, #544]
    1c70:	ldr	x8, [sp, #536]
    1c74:	mov	x26, x0
    1c78:	cbz	w10, 1cbc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1864>
    1c7c:	mov	x9, x8
    1c80:	mov	x11, x10
    1c84:	lsr	x12, x11, #1
    1c88:	add	x13, x9, x12, lsl #3
    1c8c:	ldr	x14, [x13], #8
    1c90:	mvn	x15, x12
    1c94:	add	x11, x11, x15
    1c98:	cmp	x14, x26
    1c9c:	csel	x11, x11, x12, cc  // cc = lo, ul, last
    1ca0:	csel	x9, x13, x9, cc  // cc = lo, ul, last
    1ca4:	cmp	x11, #0x0
    1ca8:	b.gt	1c84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x182c>
    1cac:	add	x10, x8, x10, lsl #3
    1cb0:	cmp	x9, x10
    1cb4:	b.ne	1cd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1878>  // b.any
    1cb8:	b	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>
    1cbc:	mov	x10, xzr
    1cc0:	mov	x9, x8
    1cc4:	add	x10, x8, x10, lsl #3
    1cc8:	cmp	x9, x10
    1ccc:	b.eq	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.none
    1cd0:	ldr	x10, [x9]
    1cd4:	cmp	x10, x26
    1cd8:	b.ne	3c94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x383c>  // b.any
    1cdc:	ldr	w10, [sp, #816]
    1ce0:	sub	x8, x9, x8
    1ce4:	asr	x19, x8, #3
    1ce8:	cmp	x19, x10
    1cec:	b.cs	1770 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1318>  // b.hs, b.nlast
    1cf0:	ldr	x9, [sp, #808]
    1cf4:	str	x8, [sp, #112]
    1cf8:	str	w23, [sp, #136]
    1cfc:	stp	xzr, xzr, [sp, #256]
    1d00:	madd	x28, x19, x25, x9
    1d04:	mov	x10, x28
    1d08:	ldr	w8, [x10, #16]!
    1d0c:	str	w8, [sp, #272]
    1d10:	stp	x10, x9, [sp, #144]
    1d14:	cbz	w8, 1d50 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18f8>
    1d18:	ldr	w8, [x10]
    1d1c:	add	w8, w8, #0x3f
    1d20:	lsr	w20, w8, #6
    1d24:	lsl	x23, x20, #3
    1d28:	mov	x0, x23
    1d2c:	bl	0 <malloc>
    1d30:	cbnz	x0, 1d64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x190c>
    1d34:	cbz	w20, 1d58 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1900>
    1d38:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1d3c:	mov	w1, #0x1                   	// #1
    1d40:	add	x0, x0, #0x0
    1d44:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1d48:	mov	x0, xzr
    1d4c:	b	1d64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x190c>
    1d50:	stp	xzr, xzr, [sp, #256]
    1d54:	b	1d78 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1920>
    1d58:	mov	w0, #0x1                   	// #1
    1d5c:	bl	0 <malloc>
    1d60:	cbz	x0, 1d38 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x18e0>
    1d64:	stp	x0, x20, [sp, #256]
    1d68:	ldr	x1, [x28]
    1d6c:	mov	x2, x23
    1d70:	bl	0 <memcpy>
    1d74:	ldr	x9, [sp, #152]
    1d78:	madd	x20, x19, x25, x9
    1d7c:	stp	xzr, xzr, [x29, #-184]
    1d80:	ldr	w8, [x20, #40]!
    1d84:	sub	x23, x20, #0x10
    1d88:	stur	w8, [x29, #-168]
    1d8c:	cbz	w8, 1dc8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1970>
    1d90:	ldr	w8, [x20]
    1d94:	add	w8, w8, #0x3f
    1d98:	lsr	w27, w8, #6
    1d9c:	lsl	x25, x27, #3
    1da0:	mov	x0, x25
    1da4:	bl	0 <malloc>
    1da8:	cbnz	x0, 1ddc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1984>
    1dac:	cbz	w27, 1dd0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1978>
    1db0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1db4:	mov	w1, #0x1                   	// #1
    1db8:	add	x0, x0, #0x0
    1dbc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1dc0:	mov	x0, xzr
    1dc4:	b	1ddc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1984>
    1dc8:	stp	xzr, xzr, [x29, #-184]
    1dcc:	b	1df4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x199c>
    1dd0:	mov	w0, #0x1                   	// #1
    1dd4:	bl	0 <malloc>
    1dd8:	cbz	x0, 1db0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1958>
    1ddc:	stp	x0, x27, [x29, #-184]
    1de0:	ldr	x1, [x23]
    1de4:	mov	x2, x25
    1de8:	bl	0 <memcpy>
    1dec:	adrp	x27, 0 <_ZN4llvm9DebugFlagE>
    1df0:	ldr	x27, [x27]
    1df4:	ldr	x8, [sp, #144]
    1df8:	ldr	x25, [sp, #120]
    1dfc:	ldr	w8, [x8]
    1e00:	ldr	w1, [x25]
    1e04:	cmp	w8, w1
    1e08:	b.cs	1e1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x19c4>  // b.hs, b.nlast
    1e0c:	mov	x0, x28
    1e10:	mov	w2, wzr
    1e14:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1e18:	ldr	w1, [x25]
    1e1c:	ldr	x16, [sp, #152]
    1e20:	add	w8, w1, #0x3f
    1e24:	mov	w25, #0x38                  	// #56
    1e28:	lsr	w8, w8, #6
    1e2c:	cbz	w8, 1e7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a24>
    1e30:	madd	x10, x19, x25, x16
    1e34:	mov	x9, xzr
    1e38:	add	x10, x10, #0x8
    1e3c:	ldr	x11, [x24]
    1e40:	cmp	x11, x9
    1e44:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1e48:	ldr	x11, [x10]
    1e4c:	cmp	x11, x9
    1e50:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1e54:	ldr	x11, [x21]
    1e58:	ldr	x12, [x28]
    1e5c:	lsl	x13, x9, #3
    1e60:	add	x9, x9, #0x1
    1e64:	ldr	x11, [x11, x13]
    1e68:	ldr	x14, [x12, x13]
    1e6c:	cmp	x8, x9
    1e70:	orr	x11, x14, x11
    1e74:	str	x11, [x12, x13]
    1e78:	b.ne	1e3c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x19e4>  // b.any
    1e7c:	ldr	x9, [sp, #88]
    1e80:	ldr	w8, [x20]
    1e84:	ldr	w1, [x9]
    1e88:	cmp	w8, w1
    1e8c:	b.cs	1eac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a54>  // b.hs, b.nlast
    1e90:	mov	x0, x23
    1e94:	mov	w2, wzr
    1e98:	mov	x25, x9
    1e9c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1ea0:	ldr	x16, [sp, #152]
    1ea4:	ldr	w1, [x25]
    1ea8:	mov	w25, #0x38                  	// #56
    1eac:	ldr	x15, [sp, #104]
    1eb0:	add	w8, w1, #0x3f
    1eb4:	lsr	w8, w8, #6
    1eb8:	cbz	w8, 1f08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ab0>
    1ebc:	madd	x10, x19, x25, x16
    1ec0:	mov	x9, xzr
    1ec4:	add	x10, x10, #0x20
    1ec8:	ldr	x11, [x22]
    1ecc:	cmp	x11, x9
    1ed0:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1ed4:	ldr	x11, [x10]
    1ed8:	cmp	x11, x9
    1edc:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1ee0:	ldr	x11, [x15]
    1ee4:	ldr	x12, [x23]
    1ee8:	lsl	x13, x9, #3
    1eec:	add	x9, x9, #0x1
    1ef0:	ldr	x11, [x11, x13]
    1ef4:	ldr	x14, [x12, x13]
    1ef8:	cmp	x8, x9
    1efc:	orr	x11, x14, x11
    1f00:	str	x11, [x12, x13]
    1f04:	b.ne	1ec8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1a70>  // b.any
    1f08:	ldr	x8, [sp, #80]
    1f0c:	ldrb	w8, [x8]
    1f10:	cbz	w8, 1fa0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b48>
    1f14:	mov	x25, x27
    1f18:	ldr	x27, [sp, #120]
    1f1c:	ldr	w8, [x20]
    1f20:	ldr	w1, [x27]
    1f24:	cmp	w8, w1
    1f28:	b.cs	1f40 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ae8>  // b.hs, b.nlast
    1f2c:	mov	x0, x23
    1f30:	mov	w2, wzr
    1f34:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1f38:	ldr	x16, [sp, #152]
    1f3c:	ldr	w1, [x27]
    1f40:	add	w8, w1, #0x3f
    1f44:	lsr	w8, w8, #6
    1f48:	mov	x27, x25
    1f4c:	mov	w25, #0x38                  	// #56
    1f50:	cbz	w8, 1fa0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b48>
    1f54:	madd	x10, x19, x25, x16
    1f58:	mov	x9, xzr
    1f5c:	add	x10, x10, #0x20
    1f60:	ldr	x11, [x24]
    1f64:	cmp	x11, x9
    1f68:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1f6c:	ldr	x11, [x10]
    1f70:	cmp	x11, x9
    1f74:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    1f78:	ldr	x11, [x21]
    1f7c:	ldr	x12, [x23]
    1f80:	lsl	x13, x9, #3
    1f84:	add	x9, x9, #0x1
    1f88:	ldr	x11, [x11, x13]
    1f8c:	ldr	x14, [x12, x13]
    1f90:	cmp	x8, x9
    1f94:	orr	x11, x14, x11
    1f98:	str	x11, [x12, x13]
    1f9c:	b.ne	1f60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b08>  // b.any
    1fa0:	madd	x8, x19, x25, x16
    1fa4:	ldrb	w8, [x8, #48]
    1fa8:	cbz	w8, 203c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1be4>
    1fac:	ldr	w8, [x20]
    1fb0:	ldr	x20, [sp, #144]
    1fb4:	ldr	w1, [x20]
    1fb8:	cmp	w8, w1
    1fbc:	b.cs	1fd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1b7c>  // b.hs, b.nlast
    1fc0:	mov	x0, x23
    1fc4:	mov	w2, wzr
    1fc8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1fcc:	ldr	x16, [sp, #152]
    1fd0:	ldr	w1, [x20]
    1fd4:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    1fd8:	add	w8, w1, #0x3f
    1fdc:	add	x20, x20, #0x0
    1fe0:	lsr	w8, w8, #6
    1fe4:	cbz	w8, 206c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c14>
    1fe8:	madd	x11, x19, x25, x16
    1fec:	mov	x9, xzr
    1ff0:	add	x10, x11, #0x8
    1ff4:	add	x11, x11, #0x20
    1ff8:	ldr	x12, [x10]
    1ffc:	cmp	x12, x9
    2000:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    2004:	ldr	x12, [x11]
    2008:	cmp	x12, x9
    200c:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    2010:	ldr	x12, [x28]
    2014:	ldr	x13, [x23]
    2018:	lsl	x14, x9, #3
    201c:	add	x9, x9, #0x1
    2020:	ldr	x12, [x12, x14]
    2024:	ldr	x15, [x13, x14]
    2028:	cmp	x8, x9
    202c:	orr	x12, x15, x12
    2030:	str	x12, [x13, x14]
    2034:	b.ne	1ff8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ba0>  // b.any
    2038:	b	206c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c14>
    203c:	madd	x8, x19, x25, x16
    2040:	ldrb	w8, [x8, #49]
    2044:	cbz	w8, 20a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c48>
    2048:	madd	x8, x19, x25, x16
    204c:	ldr	x8, [x8, #32]
    2050:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2054:	add	x20, x20, #0x0
    2058:	cbz	x8, 206c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c14>
    205c:	ldr	x0, [x23]
    2060:	lsl	x2, x8, #3
    2064:	mov	w1, wzr
    2068:	bl	0 <memset>
    206c:	sub	x1, x29, #0xb8
    2070:	mov	x0, x23
    2074:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2078:	tbz	w0, #0, 20f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c98>
    207c:	add	x1, sp, #0x100
    2080:	mov	x0, x28
    2084:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2088:	eor	w19, w0, #0x1
    208c:	sub	x1, x29, #0xb8
    2090:	mov	x0, x23
    2094:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2098:	tbz	w0, #0, 2104 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1cac>
    209c:	b	22b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e60>
    20a0:	madd	x8, x19, x25, x16
    20a4:	ldr	x9, [x8, #32]
    20a8:	ubfx	x8, x19, #6, #26
    20ac:	adrp	x20, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    20b0:	add	x20, x20, #0x0
    20b4:	cmp	x9, x8
    20b8:	b.ls	29bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2564>  // b.plast
    20bc:	ldr	x9, [x23]
    20c0:	ldr	x11, [sp, #112]
    20c4:	lsl	x8, x8, #3
    20c8:	mov	w12, #0x1                   	// #1
    20cc:	ldr	x10, [x9, x8]
    20d0:	lsr	x11, x11, #3
    20d4:	lsl	x11, x12, x11
    20d8:	bic	x10, x10, x11
    20dc:	str	x10, [x9, x8]
    20e0:	sub	x1, x29, #0xb8
    20e4:	mov	x0, x23
    20e8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    20ec:	tbnz	w0, #0, 207c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1c24>
    20f0:	mov	w19, #0x1                   	// #1
    20f4:	sub	x1, x29, #0xb8
    20f8:	mov	x0, x23
    20fc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2100:	tbnz	w0, #0, 22b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e60>
    2104:	ldrb	w8, [x27]
    2108:	cbz	w8, 22b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e60>
    210c:	mov	x0, x20
    2110:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2114:	tbz	w0, #0, 2260 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e08>
    2118:	bl	0 <_ZN4llvm4dbgsEv>
    211c:	ldp	x9, x8, [x0, #16]
    2120:	sub	x9, x9, x8
    2124:	cmp	x9, #0x6
    2128:	b.hi	2140 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ce8>  // b.pmore
    212c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2130:	mov	w2, #0x7                   	// #7
    2134:	add	x1, x1, #0x0
    2138:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    213c:	b	2164 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d0c>
    2140:	mov	w9, #0x636f                	// #25455
    2144:	movk	w9, #0x206b, lsl #16
    2148:	stur	w9, [x8, #3]
    214c:	mov	w9, #0x620a                	// #25098
    2150:	movk	w9, #0x6f6c, lsl #16
    2154:	str	w9, [x8]
    2158:	ldr	x8, [x0, #24]
    215c:	add	x8, x8, #0x7
    2160:	str	x8, [x0, #24]
    2164:	ldr	x1, [sp, #64]
    2168:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    216c:	ldp	x9, x8, [x0, #16]
    2170:	mov	x25, x0
    2174:	mov	w27, w19
    2178:	sub	x9, x9, x8
    217c:	cmp	x9, #0x9
    2180:	b.hi	21a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d48>  // b.pmore
    2184:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2188:	mov	w2, #0xa                   	// #10
    218c:	mov	x0, x25
    2190:	add	x1, x1, #0x0
    2194:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2198:	mov	x25, x0
    219c:	b	21c4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1d6c>
    21a0:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    21a4:	add	x9, x9, #0x0
    21a8:	ldr	x9, [x9]
    21ac:	mov	w10, #0x2072                	// #8306
    21b0:	strh	w10, [x8, #8]
    21b4:	str	x9, [x8]
    21b8:	ldr	x8, [x25, #24]
    21bc:	add	x8, x8, #0xa
    21c0:	str	x8, [x25, #24]
    21c4:	mov	x0, x26
    21c8:	bl	0 <_ZNK4llvm5Value7getNameEv>
    21cc:	ldp	x9, x8, [x25, #16]
    21d0:	mov	x19, x1
    21d4:	sub	x9, x9, x8
    21d8:	cmp	x1, x9
    21dc:	mov	x1, x0
    21e0:	b.ls	21fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1da4>  // b.plast
    21e4:	mov	x0, x25
    21e8:	mov	x2, x19
    21ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21f0:	ldr	x8, [x0, #24]
    21f4:	mov	x25, x0
    21f8:	b	2218 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1dc0>
    21fc:	cbz	x19, 2218 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1dc0>
    2200:	mov	x0, x8
    2204:	mov	x2, x19
    2208:	bl	0 <memcpy>
    220c:	ldr	x8, [x25, #24]
    2210:	add	x8, x8, x19
    2214:	str	x8, [x25, #24]
    2218:	ldr	x9, [x25, #16]
    221c:	mov	w19, w27
    2220:	cmp	x9, x8
    2224:	b.ne	2240 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1de8>  // b.any
    2228:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    222c:	mov	w2, #0x1                   	// #1
    2230:	mov	x0, x25
    2234:	add	x1, x1, #0x0
    2238:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    223c:	b	2254 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1dfc>
    2240:	mov	w9, #0xa                   	// #10
    2244:	strb	w9, [x8]
    2248:	ldr	x8, [x25, #24]
    224c:	add	x8, x8, #0x1
    2250:	str	x8, [x25, #24]
    2254:	adrp	x27, 0 <_ZN4llvm9DebugFlagE>
    2258:	ldr	x27, [x27]
    225c:	mov	w25, #0x38                  	// #56
    2260:	ldrb	w8, [x27]
    2264:	cbz	w8, 22b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e60>
    2268:	mov	x0, x20
    226c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2270:	tbz	w0, #0, 228c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e34>
    2274:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2278:	add	x0, sp, #0x218
    227c:	mov	w2, #0x7                   	// #7
    2280:	add	x1, x1, #0x0
    2284:	mov	x3, x23
    2288:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    228c:	ldrb	w8, [x27]
    2290:	cbz	w8, 22b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e60>
    2294:	mov	x0, x20
    2298:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    229c:	tbz	w0, #0, 22b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1e60>
    22a0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22a4:	add	x0, sp, #0x218
    22a8:	sub	x3, x29, #0xb8
    22ac:	mov	w2, #0xa                   	// #10
    22b0:	add	x1, x1, #0x0
    22b4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22b8:	add	x1, sp, #0x100
    22bc:	mov	x0, x28
    22c0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22c4:	ldr	w23, [sp, #136]
    22c8:	tbnz	w0, #0, 2418 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc0>
    22cc:	ldrb	w8, [x27]
    22d0:	cbz	w8, 2418 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc0>
    22d4:	mov	x0, x20
    22d8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    22dc:	tbz	w0, #0, 23a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f48>
    22e0:	bl	0 <_ZN4llvm4dbgsEv>
    22e4:	ldp	x9, x8, [x0, #16]
    22e8:	sub	x9, x9, x8
    22ec:	cmp	x9, #0x6
    22f0:	b.hi	2308 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1eb0>  // b.pmore
    22f4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    22f8:	mov	w2, #0x7                   	// #7
    22fc:	add	x1, x1, #0x0
    2300:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2304:	b	232c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1ed4>
    2308:	mov	w9, #0x636f                	// #25455
    230c:	movk	w9, #0x206b, lsl #16
    2310:	stur	w9, [x8, #3]
    2314:	mov	w9, #0x620a                	// #25098
    2318:	movk	w9, #0x6f6c, lsl #16
    231c:	str	w9, [x8]
    2320:	ldr	x8, [x0, #24]
    2324:	add	x8, x8, #0x7
    2328:	str	x8, [x0, #24]
    232c:	ldr	x1, [sp, #64]
    2330:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2334:	ldp	x9, x8, [x0, #16]
    2338:	sub	x9, x9, x8
    233c:	cmp	x9, #0x9
    2340:	b.hi	2358 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f00>  // b.pmore
    2344:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2348:	mov	w2, #0xa                   	// #10
    234c:	add	x1, x1, #0x0
    2350:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2354:	b	237c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f24>
    2358:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    235c:	add	x9, x9, #0x0
    2360:	ldr	x9, [x9]
    2364:	mov	w10, #0x2072                	// #8306
    2368:	strh	w10, [x8, #8]
    236c:	str	x9, [x8]
    2370:	ldr	x8, [x0, #24]
    2374:	add	x8, x8, #0xa
    2378:	str	x8, [x0, #24]
    237c:	mov	x1, x26
    2380:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    2384:	ldp	x9, x8, [x0, #16]
    2388:	cmp	x9, x8
    238c:	b.ne	23fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fa4>  // b.any
    2390:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2394:	mov	w2, #0x1                   	// #1
    2398:	add	x1, x1, #0x0
    239c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    23a0:	ldrb	w8, [x27]
    23a4:	cbz	w8, 2418 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc0>
    23a8:	mov	x0, x20
    23ac:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    23b0:	tbz	w0, #0, 23cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f74>
    23b4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    23b8:	add	x0, sp, #0x218
    23bc:	mov	w2, #0x9                   	// #9
    23c0:	add	x1, x1, #0x0
    23c4:	mov	x3, x28
    23c8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    23cc:	ldrb	w8, [x27]
    23d0:	cbz	w8, 2418 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc0>
    23d4:	mov	x0, x20
    23d8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    23dc:	tbz	w0, #0, 2418 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc0>
    23e0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    23e4:	add	x0, sp, #0x218
    23e8:	add	x3, sp, #0x100
    23ec:	mov	w2, #0x9                   	// #9
    23f0:	add	x1, x1, #0x0
    23f4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    23f8:	b	2418 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1fc0>
    23fc:	mov	w9, #0xa                   	// #10
    2400:	strb	w9, [x8]
    2404:	ldr	x8, [x0, #24]
    2408:	add	x8, x8, #0x1
    240c:	str	x8, [x0, #24]
    2410:	ldrb	w8, [x27]
    2414:	cbnz	w8, 23a8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1f50>
    2418:	ldur	x0, [x29, #-184]
    241c:	bl	0 <free>
    2420:	ldr	x0, [sp, #256]
    2424:	bl	0 <free>
    2428:	ldr	x28, [sp, #96]
    242c:	mov	x0, x28
    2430:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    2434:	ldr	x1, [sp, #128]
    2438:	cmp	x1, w0, sxtw
    243c:	b.ge	3cb4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x385c>  // b.tcont
    2440:	ldr	x8, [sp, #72]
    2444:	add	x1, x1, #0x1
    2448:	orr	w23, w23, w19
    244c:	cmp	x1, x8
    2450:	b.ne	1c60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1808>  // b.any
    2454:	b	1bd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1780>
    2458:	adrp	x10, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    245c:	add	x10, x10, #0x0
    2460:	ldur	x9, [x10, #7]
    2464:	ldr	x10, [x10]
    2468:	stur	x9, [x8, #7]
    246c:	str	x10, [x8]
    2470:	ldr	x8, [x0, #24]
    2474:	add	x8, x8, #0xf
    2478:	str	x8, [x0, #24]
    247c:	ldr	w8, [sp, #28]
    2480:	cbnz	w8, 1bcc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x1774>
    2484:	ldrb	w8, [x27]
    2488:	cbz	w8, 24a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x204c>
    248c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2490:	add	x0, x0, #0x0
    2494:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2498:	tbz	w0, #0, 24a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x204c>
    249c:	add	x0, sp, #0x218
    24a0:	bl	264 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEv>
    24a4:	ldr	x0, [sp, #32]
    24a8:	bl	0 <_ZNK4llvm8Function10getContextEv>
    24ac:	mov	w8, #0x200                 	// #512
    24b0:	add	x9, sp, #0x100
    24b4:	add	x10, sp, #0xd0
    24b8:	add	x11, sp, #0xa0
    24bc:	mov	w21, wzr
    24c0:	sub	x28, x29, #0x50
    24c4:	mov	w22, #0x105                 	// #261
    24c8:	strh	w8, [sp, #508]
    24cc:	add	x9, x9, #0x10
    24d0:	add	x10, x10, #0x10
    24d4:	add	x8, x11, #0x10
    24d8:	stp	x0, xzr, [sp, #488]
    24dc:	str	wzr, [sp, #504]
    24e0:	strb	wzr, [sp, #510]
    24e4:	stp	xzr, xzr, [sp, #472]
    24e8:	str	xzr, [sp, #464]
    24ec:	str	xzr, [sp, #520]
    24f0:	str	xzr, [sp, #512]
    24f4:	str	d8, [sp, #264]
    24f8:	str	d9, [sp, #216]
    24fc:	str	d9, [sp, #168]
    2500:	stp	x9, x8, [sp, #152]
    2504:	str	x9, [sp, #256]
    2508:	stp	x10, x8, [sp, #128]
    250c:	str	x10, [sp, #208]
    2510:	b	2524 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20cc>
    2514:	add	w21, w21, #0x1
    2518:	cmp	w21, #0x4
    251c:	str	wzr, [sp, #264]
    2520:	b.eq	2810 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23b8>  // b.none
    2524:	ldr	x1, [sp, #32]
    2528:	sub	x0, x29, #0xb8
    252c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2530:	ldp	x27, x20, [x29, #-184]
    2534:	ldr	x10, [sp, #48]
    2538:	ldur	x19, [x29, #-168]
    253c:	cmp	x27, x10
    2540:	cset	w8, ne  // ne = any
    2544:	cmp	x19, #0x0
    2548:	cset	w9, ne  // ne = any
    254c:	cmp	x10, x20
    2550:	b.ne	25e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2190>  // b.any
    2554:	and	w8, w8, w9
    2558:	cbz	w8, 26bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2264>
    255c:	b	25e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2190>
    2560:	ldr	x25, [x25, #8]
    2564:	cbz	x25, 2644 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21ec>
    2568:	mov	x0, x25
    256c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2570:	stur	x0, [x29, #-184]
    2574:	ldrb	w8, [x24, #16]
    2578:	ldr	x1, [x24, #40]
    257c:	mov	x26, x0
    2580:	cmp	w8, #0x50
    2584:	b.ne	25c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2168>  // b.any
    2588:	ldur	x8, [x24, #-24]
    258c:	cbz	x8, 25c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2168>
    2590:	ldrb	w9, [x8, #16]
    2594:	cbnz	w9, 25c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2168>
    2598:	ldrb	w9, [x8, #33]
    259c:	tbz	w9, #5, 25c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2168>
    25a0:	ldr	w8, [x8, #36]
    25a4:	sub	w8, w8, #0x23
    25a8:	cmp	w8, #0x1
    25ac:	b.hi	25c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2168>  // b.pmore
    25b0:	mov	x0, x1
    25b4:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    25b8:	mov	x1, x0
    25bc:	cbz	x0, 3f0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3ab4>
    25c0:	add	x0, sp, #0x218
    25c4:	mov	x2, x26
    25c8:	bl	6128 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    25cc:	tbz	w0, #0, 2560 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2108>
    25d0:	add	x0, sp, #0x100
    25d4:	sub	x1, x29, #0x50
    25d8:	sub	x2, x29, #0xb8
    25dc:	stur	x24, [x29, #-80]
    25e0:	bl	4438 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>
    25e4:	b	2560 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2108>
    25e8:	ldrb	w8, [x19]
    25ec:	tbnz	w8, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
    25f0:	sub	x8, x19, #0x18
    25f4:	cmp	x19, #0x0
    25f8:	csel	x24, xzr, x8, eq  // eq = none
    25fc:	ldrb	w8, [x24, #16]
    2600:	cmp	w8, #0x51
    2604:	b.eq	2634 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21dc>  // b.none
    2608:	sub	w9, w8, #0x4d
    260c:	cmp	w9, #0x2
    2610:	b.cc	2634 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21dc>  // b.lo, b.ul, b.last
    2614:	sub	w9, w8, #0x25
    2618:	cmp	w9, #0x12
    261c:	b.cc	2634 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21dc>  // b.lo, b.ul, b.last
    2620:	cmp	w8, #0x3a
    2624:	b.eq	2634 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21dc>  // b.none
    2628:	sub	w8, w8, #0x3e
    262c:	cmp	w8, #0xc
    2630:	b.hi	2644 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x21ec>  // b.pmore
    2634:	mov	x0, x24
    2638:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    263c:	ldr	x25, [x24, #8]
    2640:	cbnz	x25, 2568 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2110>
    2644:	ldrb	w8, [x20]
    2648:	tbnz	w8, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
    264c:	ldr	x19, [x19, #8]
    2650:	sub	x8, x20, #0x18
    2654:	cmp	x20, #0x0
    2658:	csel	x8, xzr, x8, eq  // eq = none
    265c:	add	x8, x8, #0x28
    2660:	cmp	x8, x19
    2664:	b.ne	2698 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2240>  // b.any
    2668:	ldr	x20, [x20, #8]
    266c:	cmp	x27, x20
    2670:	b.eq	2698 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2240>  // b.none
    2674:	ldrb	w8, [x20]
    2678:	tbnz	w8, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
    267c:	sub	x8, x20, #0x18
    2680:	cmp	x20, #0x0
    2684:	csel	x8, xzr, x8, eq  // eq = none
    2688:	ldr	x19, [x8, #48]
    268c:	add	x8, x8, #0x28
    2690:	cmp	x8, x19
    2694:	b.eq	2668 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2210>  // b.none
    2698:	ldr	x10, [sp, #48]
    269c:	cmp	x27, x10
    26a0:	cset	w8, ne  // ne = any
    26a4:	cmp	x19, #0x0
    26a8:	cset	w9, ne  // ne = any
    26ac:	cmp	x10, x20
    26b0:	b.ne	25e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2190>  // b.any
    26b4:	and	w8, w8, w9
    26b8:	tbnz	w8, #0, 25e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2190>
    26bc:	adrp	x9, 0 <_ZN4llvm9DebugFlagE>
    26c0:	ldr	w8, [sp, #264]
    26c4:	ldr	x9, [x9]
    26c8:	cbz	w8, 2810 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23b8>
    26cc:	ldrb	w9, [x9]
    26d0:	cbz	w9, 2700 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22a8>
    26d4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    26d8:	add	x0, x0, #0x0
    26dc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    26e0:	tbz	w0, #0, 26f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22a0>
    26e4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    26e8:	add	x2, sp, #0x100
    26ec:	mov	w1, #0x10                  	// #16
    26f0:	add	x0, x0, #0x0
    26f4:	bl	4540 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>
    26f8:	ldr	w8, [sp, #264]
    26fc:	cbz	w8, 2514 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20bc>
    2700:	ldr	x19, [sp, #256]
    2704:	mov	w9, #0x18                  	// #24
    2708:	mov	x23, xzr
    270c:	mov	x25, xzr
    2710:	madd	x20, x8, x9, x19
    2714:	mov	x24, xzr
    2718:	b	2738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>
    271c:	mov	x0, x27
    2720:	mov	x1, x24
    2724:	mov	x2, x25
    2728:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    272c:	add	x19, x19, #0x18
    2730:	cmp	x20, x19
    2734:	b.eq	2514 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20bc>  // b.none
    2738:	ldr	x8, [x19]
    273c:	cmp	x24, x8
    2740:	b.eq	2760 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2308>  // b.none
    2744:	cbz	x8, 3e54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39fc>
    2748:	ldrb	w9, [x8, #16]
    274c:	cmp	w9, #0x17
    2750:	b.ls	3e74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a1c>  // b.plast
    2754:	mov	x25, xzr
    2758:	mov	x23, xzr
    275c:	mov	x24, x8
    2760:	ldr	x27, [x19, #8]
    2764:	ldr	x26, [x27, #40]
    2768:	cmp	x23, x26
    276c:	b.eq	27cc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2374>  // b.none
    2770:	cbz	x24, 3e94 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a3c>
    2774:	mov	x0, x24
    2778:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    277c:	mov	x25, x0
    2780:	mov	x0, x24
    2784:	bl	0 <_ZNK4llvm5Value7getNameEv>
    2788:	stp	x0, x1, [x29, #-80]
    278c:	sub	x1, x29, #0xb8
    2790:	mov	x0, x25
    2794:	sturh	w22, [x29, #-168]
    2798:	stp	x28, xzr, [x29, #-184]
    279c:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    27a0:	mov	x0, x26
    27a4:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    27a8:	ldrb	w8, [x0]
    27ac:	tbnz	w8, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
    27b0:	sub	x8, x0, #0x18
    27b4:	cmp	x0, #0x0
    27b8:	csel	x1, xzr, x8, eq  // eq = none
    27bc:	mov	x0, x25
    27c0:	bl	0 <_ZN4llvm11Instruction12insertBeforeEPS0_>
    27c4:	ldr	x27, [x19, #8]
    27c8:	mov	x23, x26
    27cc:	cbz	x27, 3c74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x381c>
    27d0:	ldrb	w8, [x27, #16]
    27d4:	cmp	w8, #0x4f
    27d8:	b.ne	271c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22c4>  // b.any
    27dc:	ldr	w8, [x27, #20]
    27e0:	and	w8, w8, #0xfffffff
    27e4:	cmp	w8, #0x1
    27e8:	b.ne	3eec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a94>  // b.any
    27ec:	mov	x0, x27
    27f0:	mov	x1, x25
    27f4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    27f8:	mov	x0, x27
    27fc:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    2800:	add	x19, x19, #0x18
    2804:	cmp	x20, x19
    2808:	b.ne	2738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x22e0>  // b.any
    280c:	b	2514 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x20bc>
    2810:	ldr	x9, [sp, #32]
    2814:	ldrb	w8, [x9, #18]
    2818:	tbnz	w8, #0, 2828 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23d0>
    281c:	ldr	x19, [x9, #88]
    2820:	mov	x8, x19
    2824:	b	2858 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2400>
    2828:	ldr	x0, [sp, #32]
    282c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    2830:	ldr	x9, [sp, #32]
    2834:	ldrb	w8, [x9, #18]
    2838:	ldr	x19, [x9, #88]
    283c:	tbnz	w8, #0, 2848 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x23f0>
    2840:	mov	x8, x19
    2844:	b	2858 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2400>
    2848:	ldr	x0, [sp, #32]
    284c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    2850:	ldr	x9, [sp, #32]
    2854:	ldr	x8, [x9, #88]
    2858:	ldr	x9, [x9, #96]
    285c:	mov	w10, #0x28                  	// #40
    2860:	madd	x21, x9, x10, x8
    2864:	cmp	x21, x19
    2868:	b.eq	296c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2514>  // b.none
    286c:	mov	w22, #0x18                  	// #24
    2870:	mov	w23, #0xffffffff            	// #-1
    2874:	b	2884 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x242c>
    2878:	add	x19, x19, #0x28
    287c:	cmp	x19, x21
    2880:	b.eq	296c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2514>  // b.none
    2884:	mov	x0, x19
    2888:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    288c:	ldr	x20, [x19, #8]
    2890:	cbnz	x20, 28a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2448>
    2894:	b	2878 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2420>
    2898:	ldr	x20, [x20, #8]
    289c:	cbz	x20, 2878 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2420>
    28a0:	mov	x0, x20
    28a4:	bl	0 <_ZNK4llvm3Use7getUserEv>
    28a8:	ldr	x8, [x19, #24]
    28ac:	ldr	x8, [x8, #80]
    28b0:	ldrb	w9, [x8]
    28b4:	tbnz	w9, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
    28b8:	mov	x24, x0
    28bc:	sub	x1, x8, #0x18
    28c0:	add	x0, sp, #0x218
    28c4:	mov	x2, x24
    28c8:	bl	6128 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    28cc:	tbz	w0, #0, 2898 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2440>
    28d0:	ldr	w8, [sp, #264]
    28d4:	ldr	w9, [sp, #268]
    28d8:	cmp	w8, w9
    28dc:	b.cs	2924 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24cc>  // b.hs, b.nlast
    28e0:	ldr	x9, [sp, #256]
    28e4:	umaddl	x10, w8, w22, x9
    28e8:	str	x19, [x10], #8
    28ec:	cbz	x24, 294c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24f4>
    28f0:	ldrb	w11, [x24, #16]
    28f4:	cmp	w11, #0x17
    28f8:	b.ls	3d74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x391c>  // b.plast
    28fc:	mov	w8, w8
    2900:	madd	x9, x8, x22, x9
    2904:	str	x24, [x10]
    2908:	str	w23, [x9, #16]
    290c:	ldr	w9, [sp, #268]
    2910:	cmp	w8, w9
    2914:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    2918:	add	w8, w8, #0x1
    291c:	str	w8, [sp, #264]
    2920:	b	2898 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2440>
    2924:	ldr	x1, [sp, #152]
    2928:	add	x0, sp, #0x100
    292c:	mov	w3, #0x18                  	// #24
    2930:	mov	x2, xzr
    2934:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2938:	ldr	w8, [sp, #264]
    293c:	ldr	x9, [sp, #256]
    2940:	umaddl	x10, w8, w22, x9
    2944:	str	x19, [x10], #8
    2948:	cbnz	x24, 28f0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2498>
    294c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2950:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2954:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2958:	add	x0, x0, #0x0
    295c:	add	x1, x1, #0x0
    2960:	add	x3, x3, #0x0
    2964:	mov	w2, #0x69                  	// #105
    2968:	bl	0 <__assert_fail>
    296c:	ldr	x1, [sp, #32]
    2970:	sub	x0, x29, #0xb8
    2974:	sub	x19, x29, #0xb8
    2978:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    297c:	ldp	x26, x27, [x29, #-184]
    2980:	ldr	x10, [sp, #48]
    2984:	ldur	x21, [x29, #-168]
    2988:	add	x28, x19, #0x28
    298c:	add	x25, x19, #0x30
    2990:	cmp	x26, x10
    2994:	cset	w8, ne  // ne = any
    2998:	cmp	x21, #0x0
    299c:	cset	w9, ne  // ne = any
    29a0:	cmp	x10, x27
    29a4:	add	x10, x19, #0x8
    29a8:	str	x10, [sp, #144]
    29ac:	b.ne	2a50 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25f8>  // b.any
    29b0:	and	w8, w8, w9
    29b4:	cbz	w8, 2fc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2b6c>
    29b8:	b	2a50 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25f8>
    29bc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29c0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29c4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29c8:	add	x0, x0, #0x0
    29cc:	add	x1, x1, #0x0
    29d0:	add	x3, x3, #0x0
    29d4:	mov	w2, #0x1ab                 	// #427
    29d8:	bl	0 <__assert_fail>
    29dc:	add	x0, sp, #0x100
    29e0:	mov	w3, #0x8                   	// #8
    29e4:	mov	x1, x19
    29e8:	mov	x2, xzr
    29ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    29f0:	ldr	w8, [sp, #264]
    29f4:	b	6fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a4>
    29f8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    29fc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a00:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2a04:	add	x0, x0, #0x0
    2a08:	add	x1, x1, #0x0
    2a0c:	add	x3, x3, #0x0
    2a10:	mov	w2, #0xadf                 	// #2783
    2a14:	bl	0 <__assert_fail>
    2a18:	ldr	x1, [sp, #128]
    2a1c:	add	x0, sp, #0xd0
    2a20:	mov	w3, #0x8                   	// #8
    2a24:	mov	x2, xzr
    2a28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a2c:	ldr	w8, [sp, #216]
    2a30:	b	2dd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x297c>
    2a34:	ldr	x1, [sp, #136]
    2a38:	add	x0, sp, #0xa0
    2a3c:	mov	w3, #0x8                   	// #8
    2a40:	mov	x2, xzr
    2a44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a48:	ldr	w8, [sp, #168]
    2a4c:	b	2e08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29b0>
    2a50:	ldrb	w8, [x21]
    2a54:	tbnz	w8, #2, 3c54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37fc>
    2a58:	sub	x8, x21, #0x18
    2a5c:	cmp	x21, #0x0
    2a60:	csel	x19, xzr, x8, eq  // eq = none
    2a64:	ldrb	w8, [x19, #16]
    2a68:	cmp	w8, #0x50
    2a6c:	b.ne	2a88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2630>  // b.any
    2a70:	ldur	x9, [x19, #-24]
    2a74:	cbz	x9, 2a88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2630>
    2a78:	ldrb	w10, [x9, #16]
    2a7c:	cbnz	w10, 2a88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2630>
    2a80:	ldrb	w10, [x9, #33]
    2a84:	tbnz	w10, #5, 2da0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2948>
    2a88:	ldr	x9, [sp, #40]
    2a8c:	ldr	x9, [x9]
    2a90:	cmp	x19, x9
    2a94:	b.eq	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>  // b.none
    2a98:	ldr	x9, [sp, #40]
    2a9c:	ldr	w9, [x9, #168]
    2aa0:	cbnz	w9, 2ab4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x265c>
    2aa4:	ldr	x9, [sp, #40]
    2aa8:	ldr	x9, [x9, #208]
    2aac:	cmp	x9, x19
    2ab0:	b.eq	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>  // b.none
    2ab4:	cbz	x21, 41b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3d5c>
    2ab8:	cmp	w8, #0x50
    2abc:	b.ne	2cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x289c>  // b.any
    2ac0:	ldur	x8, [x19, #-24]
    2ac4:	cbz	x8, 2cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x289c>
    2ac8:	ldrb	w9, [x8, #16]
    2acc:	cbnz	w9, 2cd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2880>
    2ad0:	ldrb	w9, [x8, #33]
    2ad4:	tbz	w9, #5, 2cd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2880>
    2ad8:	ldr	w9, [x8, #36]
    2adc:	cmp	w9, #0xf
    2ae0:	b.ne	2cd8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2880>  // b.any
    2ae4:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2ae8:	ldr	d0, [x8]
    2aec:	mov	x0, x19
    2af0:	stp	xzr, x28, [x29, #-184]
    2af4:	stur	x28, [x29, #-168]
    2af8:	stur	d0, [x29, #-160]
    2afc:	stur	wzr, [x29, #-152]
    2b00:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2b04:	ldr	x20, [x19, #8]
    2b08:	cbnz	x20, 2c88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2830>
    2b0c:	ldr	x0, [x19, #40]
    2b10:	sub	x1, x29, #0xb8
    2b14:	bl	65fc <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>
    2b18:	ldp	x9, x8, [x29, #-176]
    2b1c:	ldr	x22, [sp, #40]
    2b20:	mov	w20, w0
    2b24:	cmp	x8, x9
    2b28:	b.eq	2b34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26dc>  // b.none
    2b2c:	mov	x0, x8
    2b30:	bl	0 <free>
    2b34:	tbz	w20, #0, 2dc8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2970>
    2b38:	mov	x0, x19
    2b3c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    2b40:	mov	w8, #0x200                 	// #512
    2b44:	sturh	w8, [x29, #-140]
    2b48:	ldr	x8, [sp, #144]
    2b4c:	stp	x0, xzr, [x29, #-160]
    2b50:	sub	x0, x29, #0xb8
    2b54:	mov	x1, x19
    2b58:	stur	xzr, [x29, #-184]
    2b5c:	stur	wzr, [x29, #-144]
    2b60:	sturb	wzr, [x29, #-138]
    2b64:	stp	xzr, xzr, [x8]
    2b68:	stp	xzr, xzr, [x25]
    2b6c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b70:	mov	x0, x19
    2b74:	mov	w1, wzr
    2b78:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2b7c:	mov	x2, x0
    2b80:	sub	x1, x29, #0xb8
    2b84:	mov	x0, x22
    2b88:	mov	x3, xzr
    2b8c:	bl	0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    2b90:	mov	x20, x0
    2b94:	mov	x0, x19
    2b98:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2b9c:	ldr	x24, [x19, #8]
    2ba0:	cbz	x24, 2dfc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29a4>
    2ba4:	mov	x23, x25
    2ba8:	mov	x0, x24
    2bac:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2bb0:	cbz	x0, 3dd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x397c>
    2bb4:	ldrb	w8, [x0, #16]
    2bb8:	mov	x25, x0
    2bbc:	cmp	w8, #0x50
    2bc0:	b.ne	3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>  // b.any
    2bc4:	ldur	x8, [x25, #-24]
    2bc8:	cbz	x8, 3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>
    2bcc:	ldrb	w9, [x8, #16]
    2bd0:	cbnz	w9, 3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>
    2bd4:	ldrb	w9, [x8, #33]
    2bd8:	tbz	w9, #5, 3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>
    2bdc:	ldr	w9, [x8, #36]
    2be0:	cmp	w9, #0x11
    2be4:	b.ne	2bf8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27a0>  // b.any
    2be8:	mov	x0, x25
    2bec:	mov	x1, x20
    2bf0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2bf4:	b	2c24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27cc>
    2bf8:	ldr	w8, [x8, #36]
    2bfc:	cmp	w8, #0x10
    2c00:	b.ne	3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>  // b.any
    2c04:	sub	x0, x29, #0xb8
    2c08:	mov	x1, x25
    2c0c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2c10:	sub	x1, x29, #0xb8
    2c14:	mov	x0, x22
    2c18:	mov	x2, x20
    2c1c:	mov	x3, xzr
    2c20:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    2c24:	ldrb	w8, [x25, #16]
    2c28:	cmp	w8, #0x17
    2c2c:	b.ls	3d74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x391c>  // b.plast
    2c30:	ldp	w8, w9, [sp, #168]
    2c34:	cmp	w8, w9
    2c38:	b.cs	2c64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x280c>  // b.hs, b.nlast
    2c3c:	ldr	x9, [sp, #160]
    2c40:	str	x25, [x9, w8, uxtw #3]
    2c44:	ldp	w8, w9, [sp, #168]
    2c48:	cmp	w8, w9
    2c4c:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    2c50:	add	w8, w8, #0x1
    2c54:	str	w8, [sp, #168]
    2c58:	ldr	x24, [x24, #8]
    2c5c:	cbnz	x24, 2ba8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2750>
    2c60:	b	2df4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x299c>
    2c64:	ldr	x1, [sp, #136]
    2c68:	add	x0, sp, #0xa0
    2c6c:	mov	w3, #0x8                   	// #8
    2c70:	mov	x2, xzr
    2c74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2c78:	ldr	w8, [sp, #168]
    2c7c:	b	2c3c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x27e4>
    2c80:	ldr	x20, [x20, #8]
    2c84:	cbz	x20, 2b0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x26b4>
    2c88:	mov	x0, x20
    2c8c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2c90:	cbz	x0, 3df4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x399c>
    2c94:	ldrb	w8, [x0, #16]
    2c98:	cmp	w8, #0x50
    2c9c:	b.ne	2c80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2828>  // b.any
    2ca0:	ldur	x8, [x0, #-24]
    2ca4:	cbz	x8, 2c80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2828>
    2ca8:	ldrb	w9, [x8, #16]
    2cac:	cbnz	w9, 2c80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2828>
    2cb0:	ldrb	w9, [x8, #33]
    2cb4:	tbz	w9, #5, 2c80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2828>
    2cb8:	ldr	w8, [x8, #36]
    2cbc:	cmp	w8, #0x10
    2cc0:	b.ne	2c80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2828>  // b.any
    2cc4:	ldr	x1, [x0, #40]
    2cc8:	sub	x8, x29, #0x50
    2ccc:	sub	x0, x29, #0xb8
    2cd0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2cd4:	b	2c80 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2828>
    2cd8:	ldrb	w9, [x8, #16]
    2cdc:	cbnz	w9, 2cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x289c>
    2ce0:	ldrb	w9, [x8, #33]
    2ce4:	tbz	w9, #5, 2cf4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x289c>
    2ce8:	ldr	w8, [x8, #36]
    2cec:	cmp	w8, #0x11
    2cf0:	b.eq	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>  // b.none
    2cf4:	mov	x0, x19
    2cf8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2cfc:	ldr	x20, [x19, #8]
    2d00:	cbnz	x20, 2d24 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28cc>
    2d04:	b	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>
    2d08:	add	x0, sp, #0x100
    2d0c:	sub	x1, x29, #0x50
    2d10:	sub	x2, x29, #0xb8
    2d14:	stur	x19, [x29, #-80]
    2d18:	bl	4438 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>
    2d1c:	ldr	x20, [x20, #8]
    2d20:	cbz	x20, 2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>
    2d24:	mov	x0, x20
    2d28:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2d2c:	stur	x0, [x29, #-184]
    2d30:	ldrb	w8, [x19, #16]
    2d34:	ldr	x1, [x19, #40]
    2d38:	mov	x24, x0
    2d3c:	cmp	w8, #0x50
    2d40:	b.ne	2d7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2924>  // b.any
    2d44:	ldur	x8, [x19, #-24]
    2d48:	cbz	x8, 2d7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2924>
    2d4c:	ldrb	w9, [x8, #16]
    2d50:	cbnz	w9, 2d7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2924>
    2d54:	ldrb	w9, [x8, #33]
    2d58:	tbz	w9, #5, 2d7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2924>
    2d5c:	ldr	w8, [x8, #36]
    2d60:	sub	w8, w8, #0x23
    2d64:	cmp	w8, #0x1
    2d68:	b.hi	2d7c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2924>  // b.pmore
    2d6c:	mov	x0, x1
    2d70:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    2d74:	mov	x1, x0
    2d78:	cbz	x0, 3f0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3ab4>
    2d7c:	add	x0, sp, #0x218
    2d80:	mov	x2, x24
    2d84:	bl	6128 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    2d88:	tbz	w0, #0, 2d1c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28c4>
    2d8c:	ldr	x8, [x19]
    2d90:	ldrb	w8, [x8, #8]
    2d94:	cmp	w8, #0xa
    2d98:	b.ne	2d08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x28b0>  // b.any
    2d9c:	b	4064 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c0c>
    2da0:	ldr	w10, [x9, #36]
    2da4:	cmp	w10, #0x18
    2da8:	b.eq	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>  // b.none
    2dac:	ldr	w10, [x9, #36]
    2db0:	cmp	w10, #0x20
    2db4:	b.eq	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>  // b.none
    2db8:	ldr	w9, [x9, #36]
    2dbc:	cmp	w9, #0x23
    2dc0:	b.ne	2a88 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2630>  // b.any
    2dc4:	b	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>
    2dc8:	ldp	w8, w9, [sp, #216]
    2dcc:	cmp	w8, w9
    2dd0:	b.cs	2a18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25c0>  // b.hs, b.nlast
    2dd4:	ldr	x9, [sp, #208]
    2dd8:	str	x19, [x9, w8, uxtw #3]
    2ddc:	ldp	w8, w9, [sp, #216]
    2de0:	cmp	w8, w9
    2de4:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    2de8:	add	w8, w8, #0x1
    2dec:	str	w8, [sp, #216]
    2df0:	b	2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>
    2df4:	mov	x25, x23
    2df8:	b	2e00 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29a8>
    2dfc:	ldp	w8, w9, [sp, #168]
    2e00:	cmp	w8, w9
    2e04:	b.cs	2a34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25dc>  // b.hs, b.nlast
    2e08:	ldr	x9, [sp, #160]
    2e0c:	str	x19, [x9, w8, uxtw #3]
    2e10:	ldp	w8, w9, [sp, #168]
    2e14:	cmp	w8, w9
    2e18:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    2e1c:	add	w8, w8, #0x1
    2e20:	str	w8, [sp, #168]
    2e24:	cbz	x20, 3e54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x39fc>
    2e28:	ldrb	w8, [x20, #16]
    2e2c:	cmp	w8, #0x17
    2e30:	b.ls	3e74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3a1c>  // b.plast
    2e34:	ldur	x1, [x29, #-184]
    2e38:	cbz	x1, 2e44 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x29ec>
    2e3c:	sub	x0, x29, #0xb8
    2e40:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2e44:	mov	x0, x20
    2e48:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2e4c:	ldr	x19, [x20, #8]
    2e50:	cbz	x19, 2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>
    2e54:	mov	w22, #0x18                  	// #24
    2e58:	mov	w23, #0xffffffff            	// #-1
    2e5c:	b	2e70 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a18>
    2e60:	add	w8, w8, #0x1
    2e64:	str	w8, [sp, #264]
    2e68:	ldr	x19, [x19, #8]
    2e6c:	cbz	x19, 2f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2af4>
    2e70:	mov	x0, x19
    2e74:	bl	0 <_ZNK4llvm3Use7getUserEv>
    2e78:	ldrb	w8, [x20, #16]
    2e7c:	ldr	x1, [x20, #40]
    2e80:	mov	x24, x0
    2e84:	cmp	w8, #0x50
    2e88:	b.ne	2ec4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a6c>  // b.any
    2e8c:	ldur	x8, [x20, #-24]
    2e90:	cbz	x8, 2ec4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a6c>
    2e94:	ldrb	w9, [x8, #16]
    2e98:	cbnz	w9, 2ec4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a6c>
    2e9c:	ldrb	w9, [x8, #33]
    2ea0:	tbz	w9, #5, 2ec4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a6c>
    2ea4:	ldr	w8, [x8, #36]
    2ea8:	sub	w8, w8, #0x23
    2eac:	cmp	w8, #0x1
    2eb0:	b.hi	2ec4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a6c>  // b.pmore
    2eb4:	mov	x0, x1
    2eb8:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    2ebc:	mov	x1, x0
    2ec0:	cbz	x0, 3f0c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3ab4>
    2ec4:	add	x0, sp, #0x218
    2ec8:	mov	x2, x24
    2ecc:	bl	6128 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>
    2ed0:	tbz	w0, #0, 2e68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a10>
    2ed4:	ldr	w8, [sp, #264]
    2ed8:	ldr	w9, [sp, #268]
    2edc:	cmp	w8, w9
    2ee0:	b.cs	2f20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ac8>  // b.hs, b.nlast
    2ee4:	ldr	x9, [sp, #256]
    2ee8:	umaddl	x10, w8, w22, x9
    2eec:	str	x20, [x10], #8
    2ef0:	cbz	x24, 294c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24f4>
    2ef4:	ldrb	w11, [x24, #16]
    2ef8:	cmp	w11, #0x17
    2efc:	b.ls	3d74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x391c>  // b.plast
    2f00:	mov	w8, w8
    2f04:	madd	x9, x8, x22, x9
    2f08:	str	x24, [x10]
    2f0c:	str	w23, [x9, #16]
    2f10:	ldr	w9, [sp, #268]
    2f14:	cmp	w8, w9
    2f18:	b.cc	2e60 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a08>  // b.lo, b.ul, b.last
    2f1c:	b	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>
    2f20:	ldr	x1, [sp, #152]
    2f24:	add	x0, sp, #0x100
    2f28:	mov	w3, #0x18                  	// #24
    2f2c:	mov	x2, xzr
    2f30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2f34:	ldr	w8, [sp, #264]
    2f38:	ldr	x9, [sp, #256]
    2f3c:	umaddl	x10, w8, w22, x9
    2f40:	str	x20, [x10], #8
    2f44:	cbnz	x24, 2ef4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2a9c>
    2f48:	b	294c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x24f4>
    2f4c:	ldrb	w8, [x27]
    2f50:	tbnz	w8, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
    2f54:	ldr	x21, [x21, #8]
    2f58:	sub	x8, x27, #0x18
    2f5c:	cmp	x27, #0x0
    2f60:	csel	x8, xzr, x8, eq  // eq = none
    2f64:	add	x8, x8, #0x28
    2f68:	cmp	x8, x21
    2f6c:	b.ne	2fa0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2b48>  // b.any
    2f70:	ldr	x27, [x27, #8]
    2f74:	cmp	x26, x27
    2f78:	b.eq	2fa0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2b48>  // b.none
    2f7c:	ldrb	w8, [x27]
    2f80:	tbnz	w8, #2, 3d14 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38bc>
    2f84:	sub	x8, x27, #0x18
    2f88:	cmp	x27, #0x0
    2f8c:	csel	x8, xzr, x8, eq  // eq = none
    2f90:	ldr	x21, [x8, #48]
    2f94:	add	x8, x8, #0x28
    2f98:	cmp	x8, x21
    2f9c:	b.eq	2f70 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2b18>  // b.none
    2fa0:	ldr	x10, [sp, #48]
    2fa4:	cmp	x26, x10
    2fa8:	cset	w8, ne  // ne = any
    2fac:	cmp	x21, #0x0
    2fb0:	cset	w9, ne  // ne = any
    2fb4:	cmp	x10, x27
    2fb8:	b.ne	2a50 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25f8>  // b.any
    2fbc:	and	w8, w8, w9
    2fc0:	tbnz	w8, #0, 2a50 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x25f8>
    2fc4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    2fc8:	ldr	x8, [x8]
    2fcc:	ldrb	w8, [x8]
    2fd0:	cbz	w8, 2ff8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ba0>
    2fd4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2fd8:	add	x0, x0, #0x0
    2fdc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2fe0:	tbz	w0, #0, 2ff8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ba0>
    2fe4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    2fe8:	add	x0, x0, #0x0
    2fec:	add	x2, sp, #0x100
    2ff0:	mov	w1, #0x6                   	// #6
    2ff4:	bl	4540 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>
    2ff8:	ldr	x19, [sp, #32]
    2ffc:	mov	x0, x19
    3000:	bl	0 <_ZNK4llvm8Function10getContextEv>
    3004:	ldr	x8, [x19, #40]
    3008:	mov	x21, x0
    300c:	mov	x0, x8
    3010:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    3014:	mov	x22, x0
    3018:	mov	x0, x19
    301c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3020:	sub	x8, x29, #0x50
    3024:	mov	x24, x0
    3028:	mov	x23, x1
    302c:	cmp	x1, #0x21
    3030:	add	x19, x8, #0x10
    3034:	stur	x19, [x29, #-80]
    3038:	stur	d10, [x29, #-72]
    303c:	b.cc	3054 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2bfc>  // b.lo, b.ul, b.last
    3040:	sub	x0, x29, #0x50
    3044:	mov	w3, #0x1                   	// #1
    3048:	mov	x1, x19
    304c:	mov	x2, x23
    3050:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3054:	cbz	x23, 3070 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2c18>
    3058:	ldur	x8, [x29, #-80]
    305c:	ldur	w9, [x29, #-72]
    3060:	mov	x1, x24
    3064:	mov	x2, x23
    3068:	add	x0, x8, x9
    306c:	bl	0 <memcpy>
    3070:	ldp	w8, w9, [x29, #-72]
    3074:	add	x8, x23, x8
    3078:	cmp	x8, x9
    307c:	b.hi	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.pmore
    3080:	and	x10, x8, #0xffffffff
    3084:	sub	x9, x9, x10
    3088:	cmp	x9, #0x5
    308c:	stur	w8, [x29, #-72]
    3090:	b.hi	30ac <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2c54>  // b.pmore
    3094:	add	x2, x10, #0x6
    3098:	sub	x0, x29, #0x50
    309c:	mov	w3, #0x1                   	// #1
    30a0:	mov	x1, x19
    30a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    30a8:	ldur	w8, [x29, #-72]
    30ac:	ldur	x9, [x29, #-80]
    30b0:	mov	w11, #0x462e                	// #17966
    30b4:	mov	w10, #0x656d                	// #25965
    30b8:	movk	w11, #0x6172, lsl #16
    30bc:	add	x8, x9, w8, uxtw
    30c0:	strh	w10, [x8, #4]
    30c4:	str	w11, [x8]
    30c8:	ldp	w8, w9, [x29, #-72]
    30cc:	add	x8, x8, #0x6
    30d0:	cmp	x8, x9
    30d4:	b.hi	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.pmore
    30d8:	ldur	x1, [x29, #-80]
    30dc:	and	x2, x8, #0xffffffff
    30e0:	mov	x0, x21
    30e4:	stur	w8, [x29, #-72]
    30e8:	bl	0 <_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE>
    30ec:	ldr	x20, [sp, #40]
    30f0:	sub	x8, x29, #0xb8
    30f4:	add	x8, x8, #0x10
    30f8:	stur	x8, [x29, #-184]
    30fc:	stur	d8, [x29, #-176]
    3100:	str	x8, [sp, #128]
    3104:	ldr	w8, [x20, #168]
    3108:	mov	x27, x0
    310c:	str	x21, [sp, #152]
    3110:	cbz	w8, 3120 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2cc8>
    3114:	mov	x19, xzr
    3118:	mov	w28, wzr
    311c:	b	32d8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e80>
    3120:	ldr	x19, [x20, #208]
    3124:	mov	x0, x27
    3128:	mov	w1, wzr
    312c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    3130:	mov	x24, x0
    3134:	mov	x0, x21
    3138:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
    313c:	sub	x1, x29, #0x20
    3140:	mov	w2, #0x1                   	// #1
    3144:	mov	w3, wzr
    3148:	stur	x24, [x29, #-32]
    314c:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    3150:	mov	w1, wzr
    3154:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    3158:	ldr	w8, [x20, #96]
    315c:	mov	w9, #0x40                  	// #64
    3160:	mov	x26, x0
    3164:	sub	x8, x8, #0x1
    3168:	clz	x8, x8
    316c:	sub	w8, w9, w8
    3170:	cmp	w8, #0x1
    3174:	csinc	w24, w8, wzr, hi  // hi = pmore
    3178:	cbz	x19, 3198 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d40>
    317c:	ldr	x8, [x19]
    3180:	cbz	x8, 4224 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3dcc>
    3184:	ldrb	w9, [x8, #8]
    3188:	cmp	w9, #0xf
    318c:	b.ne	4244 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3dec>  // b.any
    3190:	ldr	x25, [x8, #24]
    3194:	b	31a4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d4c>
    3198:	mov	x0, x21
    319c:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
    31a0:	mov	x25, x0
    31a4:	mov	x0, x21
    31a8:	mov	w1, w24
    31ac:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
    31b0:	ldp	w8, w9, [x29, #-176]
    31b4:	mov	x24, x0
    31b8:	cmp	w8, w9
    31bc:	b.cs	3bc4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x376c>  // b.hs, b.nlast
    31c0:	ldur	x9, [x29, #-184]
    31c4:	str	x26, [x9, w8, uxtw #3]
    31c8:	ldp	w8, w9, [x29, #-176]
    31cc:	cmp	w8, w9
    31d0:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    31d4:	add	w8, w8, #0x1
    31d8:	cmp	w8, w9
    31dc:	stur	w8, [x29, #-176]
    31e0:	b.cs	3be0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3788>  // b.hs, b.nlast
    31e4:	ldur	x9, [x29, #-184]
    31e8:	str	x26, [x9, w8, uxtw #3]
    31ec:	ldp	w8, w9, [x29, #-176]
    31f0:	cmp	w8, w9
    31f4:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    31f8:	add	w8, w8, #0x1
    31fc:	cmp	w8, w9
    3200:	stur	w8, [x29, #-176]
    3204:	b.cs	3bfc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37a4>  // b.hs, b.nlast
    3208:	ldur	x9, [x29, #-184]
    320c:	str	x25, [x9, w8, uxtw #3]
    3210:	ldp	w8, w9, [x29, #-176]
    3214:	cmp	w8, w9
    3218:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    321c:	add	w8, w8, #0x1
    3220:	cmp	w8, w9
    3224:	stur	w8, [x29, #-176]
    3228:	b.cs	3c18 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x37c0>  // b.hs, b.nlast
    322c:	ldur	x9, [x29, #-184]
    3230:	str	x24, [x9, w8, uxtw #3]
    3234:	ldp	w8, w9, [x29, #-176]
    3238:	cmp	w8, w9
    323c:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    3240:	ldur	x20, [x29, #-184]
    3244:	add	x8, x8, #0x1
    3248:	mov	w28, wzr
    324c:	lsl	x21, x8, #3
    3250:	stur	w8, [x29, #-176]
    3254:	ldr	x24, [x20]
    3258:	mov	x0, x22
    325c:	mov	x1, x24
    3260:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3264:	sub	w8, w0, #0x1
    3268:	tst	w8, w28
    326c:	b.eq	3288 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2e30>  // b.none
    3270:	cbz	w0, 4134 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3cdc>
    3274:	mov	w8, w0
    3278:	add	x9, x8, w28, uxtw
    327c:	sub	x9, x9, #0x1
    3280:	udiv	x9, x9, x8
    3284:	mul	w28, w9, w8
    3288:	mov	x0, x22
    328c:	mov	x1, x24
    3290:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3294:	mov	x25, x0
    3298:	mov	x26, x1
    329c:	mov	x0, x22
    32a0:	mov	x1, x24
    32a4:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    32a8:	cbz	w0, 4094 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c3c>
    32ac:	and	w8, w26, #0xff
    32b0:	cbnz	w8, 40b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c5c>
    32b4:	mov	w8, w0
    32b8:	add	x9, x25, #0x7
    32bc:	add	x9, x8, x9, lsr #3
    32c0:	sub	x9, x9, #0x1
    32c4:	udiv	x9, x9, x8
    32c8:	subs	x21, x21, #0x8
    32cc:	madd	w28, w9, w8, w28
    32d0:	add	x20, x20, #0x8
    32d4:	b.ne	3254 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dfc>  // b.any
    32d8:	ldr	w9, [sp, #264]
    32dc:	cbz	w9, 35f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x319c>
    32e0:	ldr	x10, [sp, #256]
    32e4:	add	x9, x9, x9, lsl #1
    32e8:	mov	x8, xzr
    32ec:	lsl	x23, x9, #3
    32f0:	add	x20, x10, #0x10
    32f4:	b	330c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2eb4>
    32f8:	mov	x21, x8
    32fc:	subs	x23, x23, #0x18
    3300:	add	x20, x20, #0x18
    3304:	mov	x8, x21
    3308:	b.eq	35f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x319c>  // b.none
    330c:	ldur	x21, [x20, #-16]
    3310:	cmp	x8, x21
    3314:	b.eq	32f8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ea0>  // b.none
    3318:	cmp	x21, x19
    331c:	b.eq	34b0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3058>  // b.none
    3320:	cbz	x21, 4174 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3d1c>
    3324:	ldrb	w8, [x21, #16]
    3328:	cmp	w8, #0x37
    332c:	b.ne	34b8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3060>  // b.any
    3330:	ldrh	w8, [x21, #18]
    3334:	ldr	x24, [x21, #56]
    3338:	and	w9, w8, #0x1f
    333c:	add	w9, w9, #0xff
    3340:	orr	w9, w9, #0x100
    3344:	tst	w8, #0x1f
    3348:	csel	w8, wzr, w9, eq  // eq = none
    334c:	tbz	w8, #8, 346c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3014>
    3350:	mov	w9, #0x1                   	// #1
    3354:	lsl	x25, x9, x8
    3358:	cbz	w25, 346c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3014>
    335c:	mov	x0, x22
    3360:	mov	x1, x24
    3364:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3368:	cbz	w0, 4134 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3cdc>
    336c:	mov	w9, w28
    3370:	mov	w8, w0
    3374:	sub	x26, x9, #0x1
    3378:	and	x10, x25, #0xffffffff
    337c:	add	x11, x26, x8
    3380:	neg	x9, x10
    3384:	add	x10, x10, x26
    3388:	udiv	x11, x11, x8
    338c:	and	x9, x10, x9
    3390:	mul	x10, x11, x8
    3394:	cmp	x10, x9
    3398:	csel	w8, w9, w10, cc  // cc = lo, ul, last
    339c:	cmp	x10, x9
    33a0:	b.eq	346c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3014>  // b.none
    33a4:	sub	w25, w8, w28
    33a8:	cbz	w25, 346c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3014>
    33ac:	ldr	x0, [sp, #152]
    33b0:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    33b4:	mov	w1, w25
    33b8:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    33bc:	cbz	x0, 346c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3014>
    33c0:	ldp	w8, w9, [x29, #-176]
    33c4:	mov	x25, x0
    33c8:	cmp	w8, w9
    33cc:	b.cs	35d8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3180>  // b.hs, b.nlast
    33d0:	ldur	x9, [x29, #-184]
    33d4:	str	x25, [x9, w8, uxtw #3]
    33d8:	ldp	w8, w9, [x29, #-176]
    33dc:	cmp	w8, w9
    33e0:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    33e4:	add	w8, w8, #0x1
    33e8:	mov	x0, x22
    33ec:	mov	x1, x25
    33f0:	stur	w8, [x29, #-176]
    33f4:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    33f8:	sub	w8, w0, #0x1
    33fc:	tst	w8, w28
    3400:	b.eq	3418 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2fc0>  // b.none
    3404:	cbz	w0, 4134 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3cdc>
    3408:	mov	w8, w0
    340c:	add	x9, x26, x8
    3410:	udiv	x9, x9, x8
    3414:	mul	w28, w9, w8
    3418:	mov	x0, x22
    341c:	mov	x1, x25
    3420:	str	x19, [sp, #144]
    3424:	mov	x19, x27
    3428:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    342c:	mov	x26, x0
    3430:	mov	x27, x1
    3434:	mov	x0, x22
    3438:	mov	x1, x25
    343c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3440:	cbz	w0, 4094 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c3c>
    3444:	and	w8, w27, #0xff
    3448:	cbnz	w8, 40b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c5c>
    344c:	mov	w8, w0
    3450:	add	x9, x26, #0x7
    3454:	add	x9, x8, x9, lsr #3
    3458:	mov	x27, x19
    345c:	ldr	x19, [sp, #144]
    3460:	sub	x9, x9, #0x1
    3464:	udiv	x9, x9, x8
    3468:	madd	w28, w9, w8, w28
    346c:	ldur	x8, [x21, #-24]
    3470:	cbz	x8, 41d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3d7c>
    3474:	ldrb	w9, [x8, #16]
    3478:	cmp	w9, #0xd
    347c:	b.ne	41f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3d9c>  // b.any
    3480:	ldr	w26, [x8, #32]
    3484:	add	x25, x8, #0x18
    3488:	cmp	w26, #0x40
    348c:	b.ls	34a8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3050>  // b.plast
    3490:	mov	x0, x25
    3494:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3498:	sub	w8, w26, w0
    349c:	cmp	w8, #0x41
    34a0:	b.cs	4204 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3dac>  // b.hs, b.nlast
    34a4:	ldr	x25, [x25]
    34a8:	ldr	x1, [x25]
    34ac:	b	34c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3068>
    34b0:	mov	x21, x19
    34b4:	b	32fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ea4>
    34b8:	ldr	x24, [x21]
    34bc:	mov	w1, #0x1                   	// #1
    34c0:	ldr	w8, [x20]
    34c4:	cmn	w8, #0x1
    34c8:	b.ne	4194 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3d3c>  // b.any
    34cc:	ldur	w8, [x29, #-176]
    34d0:	cmp	x1, #0x1
    34d4:	str	w8, [x20]
    34d8:	b.ne	34f4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x309c>  // b.any
    34dc:	ldur	w9, [x29, #-172]
    34e0:	cmp	w8, w9
    34e4:	b.cs	35a0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3148>  // b.hs, b.nlast
    34e8:	ldur	x9, [x29, #-184]
    34ec:	str	x24, [x9, w8, uxtw #3]
    34f0:	b	3514 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x30bc>
    34f4:	mov	x0, x24
    34f8:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    34fc:	ldp	w8, w9, [x29, #-176]
    3500:	mov	x25, x0
    3504:	cmp	w8, w9
    3508:	b.cs	35bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3164>  // b.hs, b.nlast
    350c:	ldur	x9, [x29, #-184]
    3510:	str	x25, [x9, w8, uxtw #3]
    3514:	ldp	w8, w9, [x29, #-176]
    3518:	cmp	w8, w9
    351c:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    3520:	add	w8, w8, #0x1
    3524:	mov	x0, x22
    3528:	mov	x1, x24
    352c:	stur	w8, [x29, #-176]
    3530:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3534:	sub	w8, w0, #0x1
    3538:	tst	w8, w28
    353c:	b.eq	3558 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3100>  // b.none
    3540:	cbz	w0, 4134 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3cdc>
    3544:	mov	w8, w0
    3548:	add	x9, x8, w28, uxtw
    354c:	sub	x9, x9, #0x1
    3550:	udiv	x9, x9, x8
    3554:	mul	w28, w9, w8
    3558:	mov	x0, x22
    355c:	mov	x1, x24
    3560:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3564:	mov	x25, x0
    3568:	mov	x26, x1
    356c:	mov	x0, x22
    3570:	mov	x1, x24
    3574:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3578:	cbz	w0, 4094 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c3c>
    357c:	and	w8, w26, #0xff
    3580:	cbnz	w8, 40b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c5c>
    3584:	mov	w8, w0
    3588:	add	x9, x25, #0x7
    358c:	add	x9, x8, x9, lsr #3
    3590:	sub	x9, x9, #0x1
    3594:	udiv	x9, x9, x8
    3598:	madd	w28, w9, w8, w28
    359c:	b	32fc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2ea4>
    35a0:	ldr	x1, [sp, #128]
    35a4:	sub	x0, x29, #0xb8
    35a8:	mov	w3, #0x8                   	// #8
    35ac:	mov	x2, xzr
    35b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    35b4:	ldur	w8, [x29, #-176]
    35b8:	b	34e8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3090>
    35bc:	ldr	x1, [sp, #128]
    35c0:	sub	x0, x29, #0xb8
    35c4:	mov	w3, #0x8                   	// #8
    35c8:	mov	x2, xzr
    35cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    35d0:	ldur	w8, [x29, #-176]
    35d4:	b	350c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x30b4>
    35d8:	ldr	x1, [sp, #128]
    35dc:	sub	x0, x29, #0xb8
    35e0:	mov	w3, #0x8                   	// #8
    35e4:	mov	x2, xzr
    35e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    35ec:	ldur	w8, [x29, #-176]
    35f0:	b	33d0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2f78>
    35f4:	ldur	x1, [x29, #-184]
    35f8:	ldur	w2, [x29, #-176]
    35fc:	mov	x0, x27
    3600:	mov	w3, wzr
    3604:	bl	0 <_ZN4llvm10StructType7setBodyENS_8ArrayRefIPNS_4TypeEEEb>
    3608:	ldr	x19, [sp, #40]
    360c:	ldr	w8, [x19, #168]
    3610:	sub	w8, w8, #0x1
    3614:	cmp	w8, #0x2
    3618:	b.cs	36bc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3264>  // b.hs, b.nlast
    361c:	ldr	x8, [sp, #32]
    3620:	ldr	x0, [x8, #40]
    3624:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    3628:	mov	x22, x0
    362c:	mov	x0, x19
    3630:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3634:	mov	x20, x0
    3638:	mov	x0, x22
    363c:	mov	x1, x27
    3640:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3644:	mov	x23, x0
    3648:	mov	x24, x1
    364c:	mov	x0, x22
    3650:	mov	x1, x27
    3654:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    3658:	cbz	w0, 4094 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c3c>
    365c:	and	w8, w24, #0xff
    3660:	cbnz	w8, 40b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3c5c>
    3664:	mov	w8, w0
    3668:	add	x9, x23, #0x7
    366c:	add	x9, x8, x9, lsr #3
    3670:	sub	x9, x9, #0x1
    3674:	udiv	x9, x9, x8
    3678:	mov	x0, x20
    367c:	mul	x19, x9, x8
    3680:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3684:	cmp	x19, x0
    3688:	b.ls	3694 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x323c>  // b.plast
    368c:	mov	w8, wzr
    3690:	b	36b4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x325c>
    3694:	mov	x0, x22
    3698:	mov	x1, x27
    369c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    36a0:	mov	w22, w0
    36a4:	mov	x0, x20
    36a8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    36ac:	cmp	x0, w22, uxtw
    36b0:	cset	w8, cs  // cs = hs, nlast
    36b4:	ldr	x19, [sp, #40]
    36b8:	strb	w8, [x19, #232]
    36bc:	ldur	x0, [x29, #-184]
    36c0:	sub	x8, x29, #0xb8
    36c4:	add	x8, x8, #0x10
    36c8:	cmp	x0, x8
    36cc:	b.eq	36d4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x327c>  // b.none
    36d0:	bl	0 <free>
    36d4:	ldur	x0, [x29, #-80]
    36d8:	sub	x8, x29, #0x50
    36dc:	add	x8, x8, #0x10
    36e0:	cmp	x0, x8
    36e4:	b.eq	36ec <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3294>  // b.none
    36e8:	bl	0 <free>
    36ec:	add	x0, sp, #0x100
    36f0:	mov	x1, x19
    36f4:	str	x27, [x19, #176]
    36f8:	bl	4714 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE>
    36fc:	str	x0, [x19, #184]
    3700:	ldr	w8, [sp, #216]
    3704:	cbz	w8, 3abc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3664>
    3708:	ldr	x21, [sp, #208]
    370c:	sub	x9, x29, #0xb8
    3710:	add	x10, x9, #0x30
    3714:	add	x27, x9, #0x8
    3718:	add	x8, x21, x8, lsl #3
    371c:	mov	w28, #0x101                 	// #257
    3720:	stp	x8, x10, [sp, #144]
    3724:	b	3738 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x32e0>
    3728:	ldr	x8, [sp, #144]
    372c:	add	x21, x21, #0x8
    3730:	cmp	x21, x8
    3734:	b.eq	3abc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3664>  // b.none
    3738:	ldr	x20, [x21]
    373c:	mov	x0, x20
    3740:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    3744:	mov	x22, x0
    3748:	mov	x0, x20
    374c:	bl	0 <_ZNK4llvm5Value10getContextEv>
    3750:	mov	w8, #0x200                 	// #512
    3754:	sturh	w8, [x29, #-140]
    3758:	ldr	x8, [sp, #152]
    375c:	stp	x0, xzr, [x29, #-160]
    3760:	sub	x0, x29, #0xb8
    3764:	mov	x1, x20
    3768:	stur	xzr, [x29, #-184]
    376c:	stur	wzr, [x29, #-144]
    3770:	sturb	wzr, [x29, #-138]
    3774:	stp	xzr, xzr, [x27]
    3778:	stp	xzr, xzr, [x8]
    377c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3780:	mov	x0, x20
    3784:	str	xzr, [x29, #8]
    3788:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    378c:	ldr	x23, [x20, #8]
    3790:	cbnz	x23, 3854 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33fc>
    3794:	ldur	x0, [x29, #-160]
    3798:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    379c:	mov	x23, x0
    37a0:	mov	x0, x20
    37a4:	mov	w1, wzr
    37a8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    37ac:	ldur	x8, [x29, #-176]
    37b0:	stp	xzr, xzr, [x29, #-32]
    37b4:	sturh	w28, [x29, #-16]
    37b8:	mov	x24, x0
    37bc:	ldr	x8, [x8, #56]
    37c0:	ldr	x8, [x8, #40]
    37c4:	mov	x0, x8
    37c8:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    37cc:	mov	x25, x0
    37d0:	mov	w0, #0x40                  	// #64
    37d4:	mov	w1, #0x1                   	// #1
    37d8:	bl	0 <_ZN4llvm4UsernwEmj>
    37dc:	ldr	w2, [x25, #4]
    37e0:	sub	x4, x29, #0x50
    37e4:	mov	x1, x23
    37e8:	mov	x3, x24
    37ec:	mov	x5, xzr
    37f0:	mov	x26, x0
    37f4:	stp	xzr, xzr, [x29, #-80]
    37f8:	sturh	w28, [x29, #-64]
    37fc:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    3800:	sub	x0, x29, #0xb8
    3804:	sub	x2, x29, #0x20
    3808:	mov	x1, x26
    380c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3810:	mov	x23, x0
    3814:	mov	x0, x20
    3818:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    381c:	cbz	w0, 3908 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x34b0>
    3820:	mov	w8, w0
    3824:	fmov	d0, x8
    3828:	cnt	v0.8b, v0.8b
    382c:	uaddlv	h0, v0.8b
    3830:	fmov	w9, s0
    3834:	cmp	x9, #0x1
    3838:	b.ne	4154 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3cfc>  // b.any
    383c:	clz	x8, x8
    3840:	eor	x8, x8, #0x3f
    3844:	mov	w9, #0x100                 	// #256
    3848:	b	3910 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x34b8>
    384c:	ldr	x23, [x23, #8]
    3850:	cbz	x23, 3794 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x333c>
    3854:	mov	x0, x23
    3858:	bl	0 <_ZNK4llvm3Use7getUserEv>
    385c:	cbz	x0, 3df4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x399c>
    3860:	ldrb	w8, [x0, #16]
    3864:	cmp	w8, #0x50
    3868:	b.ne	384c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33f4>  // b.any
    386c:	ldur	x8, [x0, #-24]
    3870:	cbz	x8, 384c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33f4>
    3874:	ldrb	w9, [x8, #16]
    3878:	cbnz	w9, 384c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33f4>
    387c:	ldrb	w9, [x8, #33]
    3880:	tbz	w9, #5, 384c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33f4>
    3884:	ldr	w8, [x8, #36]
    3888:	cmp	w8, #0x10
    388c:	b.ne	384c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33f4>  // b.any
    3890:	ldr	x0, [x0, #40]
    3894:	mov	w1, #0x3                   	// #3
    3898:	bl	6940 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>
    389c:	tbnz	w0, #0, 384c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x33f4>
    38a0:	mov	w1, #0xf5                  	// #245
    38a4:	mov	x0, x22
    38a8:	mov	x2, xzr
    38ac:	mov	x3, xzr
    38b0:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    38b4:	stp	xzr, xzr, [x29, #-80]
    38b8:	sturh	w28, [x29, #-64]
    38bc:	ldr	x8, [x0]
    38c0:	ldrb	w9, [x8, #8]
    38c4:	cmp	w9, #0xf
    38c8:	b.ne	3f2c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3ad4>  // b.any
    38cc:	ldr	x8, [x8, #16]
    38d0:	ldr	x1, [x8]
    38d4:	cbz	x1, 3f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3af4>
    38d8:	ldrb	w8, [x1, #8]
    38dc:	cmp	w8, #0xc
    38e0:	b.ne	3f6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b14>  // b.any
    38e4:	mov	x2, x0
    38e8:	sub	x0, x29, #0xb8
    38ec:	sub	x5, x29, #0x50
    38f0:	mov	x3, xzr
    38f4:	mov	x4, xzr
    38f8:	mov	x6, xzr
    38fc:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3900:	str	x0, [x29, #8]
    3904:	b	3794 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x333c>
    3908:	mov	x8, xzr
    390c:	mov	x9, xzr
    3910:	and	x10, x19, #0xffffffffffff0000
    3914:	orr	x8, x8, x10
    3918:	orr	x19, x8, x9
    391c:	mov	x0, x23
    3920:	mov	x1, x19
    3924:	bl	0 <_ZN4llvm10AllocaInst12setAlignmentENS_10MaybeAlignE>
    3928:	mov	x0, x20
    392c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3930:	ldr	x24, [x20, #8]
    3934:	cbz	x24, 3a64 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x360c>
    3938:	mov	x0, x24
    393c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    3940:	cbz	x0, 3dd4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x397c>
    3944:	ldrb	w8, [x0, #16]
    3948:	mov	x25, x0
    394c:	cmp	w8, #0x50
    3950:	b.ne	3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>  // b.any
    3954:	ldur	x8, [x25, #-24]
    3958:	cbz	x8, 3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>
    395c:	ldrb	w9, [x8, #16]
    3960:	cbnz	w9, 3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>
    3964:	ldrb	w9, [x8, #33]
    3968:	tbz	w9, #5, 3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>
    396c:	ldr	w9, [x8, #36]
    3970:	cmp	w9, #0x11
    3974:	b.ne	3988 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3530>  // b.any
    3978:	mov	x0, x25
    397c:	mov	x1, x23
    3980:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    3984:	b	3a08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35b0>
    3988:	ldr	w8, [x8, #36]
    398c:	cmp	w8, #0x10
    3990:	b.ne	3d34 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38dc>  // b.any
    3994:	ldr	x8, [x29, #8]
    3998:	cbz	x8, 3a08 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35b0>
    399c:	sub	x0, x29, #0xb8
    39a0:	mov	x1, x25
    39a4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    39a8:	mov	w1, #0xf4                  	// #244
    39ac:	mov	x0, x22
    39b0:	mov	x2, xzr
    39b4:	mov	x3, xzr
    39b8:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    39bc:	stp	xzr, xzr, [x29, #-80]
    39c0:	sturh	w28, [x29, #-64]
    39c4:	ldr	x8, [x0]
    39c8:	ldrb	w9, [x8, #8]
    39cc:	cmp	w9, #0xf
    39d0:	b.ne	3f2c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3ad4>  // b.any
    39d4:	ldr	x8, [x8, #16]
    39d8:	ldr	x1, [x8]
    39dc:	cbz	x1, 3f4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3af4>
    39e0:	ldrb	w8, [x1, #8]
    39e4:	cmp	w8, #0xc
    39e8:	b.ne	3f6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3b14>  // b.any
    39ec:	mov	x2, x0
    39f0:	sub	x0, x29, #0xb8
    39f4:	add	x3, x29, #0x8
    39f8:	sub	x5, x29, #0x50
    39fc:	mov	w4, #0x1                   	// #1
    3a00:	mov	x6, xzr
    3a04:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3a08:	ldrb	w8, [x25, #16]
    3a0c:	cmp	w8, #0x17
    3a10:	b.ls	3d74 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x391c>  // b.plast
    3a14:	ldp	w8, w9, [sp, #168]
    3a18:	cmp	w8, w9
    3a1c:	b.cs	3a48 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35f0>  // b.hs, b.nlast
    3a20:	ldr	x9, [sp, #160]
    3a24:	str	x25, [x9, w8, uxtw #3]
    3a28:	ldp	w8, w9, [sp, #168]
    3a2c:	cmp	w8, w9
    3a30:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    3a34:	add	w8, w8, #0x1
    3a38:	str	w8, [sp, #168]
    3a3c:	ldr	x24, [x24, #8]
    3a40:	cbnz	x24, 3938 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x34e0>
    3a44:	b	3a68 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3610>
    3a48:	ldr	x1, [sp, #136]
    3a4c:	add	x0, sp, #0xa0
    3a50:	mov	w3, #0x8                   	// #8
    3a54:	mov	x2, xzr
    3a58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3a5c:	ldr	w8, [sp, #168]
    3a60:	b	3a20 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x35c8>
    3a64:	ldp	w8, w9, [sp, #168]
    3a68:	cmp	w8, w9
    3a6c:	b.cs	3aa0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3648>  // b.hs, b.nlast
    3a70:	ldr	x9, [sp, #160]
    3a74:	str	x20, [x9, w8, uxtw #3]
    3a78:	ldp	w8, w9, [sp, #168]
    3a7c:	cmp	w8, w9
    3a80:	b.cs	3d54 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x38fc>  // b.hs, b.nlast
    3a84:	ldur	x1, [x29, #-184]
    3a88:	add	w8, w8, #0x1
    3a8c:	str	w8, [sp, #168]
    3a90:	cbz	x1, 3728 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x32d0>
    3a94:	sub	x0, x29, #0xb8
    3a98:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3a9c:	b	3728 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x32d0>
    3aa0:	ldr	x1, [sp, #136]
    3aa4:	add	x0, sp, #0xa0
    3aa8:	mov	w3, #0x8                   	// #8
    3aac:	mov	x2, xzr
    3ab0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3ab4:	ldr	w8, [sp, #168]
    3ab8:	b	3a70 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3618>
    3abc:	ldr	w8, [sp, #168]
    3ac0:	ldr	x19, [sp, #160]
    3ac4:	cbz	w8, 3ae0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3688>
    3ac8:	lsl	x20, x8, #3
    3acc:	ldr	x0, [x19], #8
    3ad0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    3ad4:	subs	x20, x20, #0x8
    3ad8:	b.ne	3acc <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3674>  // b.any
    3adc:	ldr	x19, [sp, #160]
    3ae0:	add	x8, sp, #0xa0
    3ae4:	add	x8, x8, #0x10
    3ae8:	cmp	x19, x8
    3aec:	b.eq	3af8 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36a0>  // b.none
    3af0:	mov	x0, x19
    3af4:	bl	0 <free>
    3af8:	ldr	x0, [sp, #208]
    3afc:	add	x8, sp, #0xd0
    3b00:	add	x8, x8, #0x10
    3b04:	cmp	x0, x8
    3b08:	b.eq	3b10 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36b8>  // b.none
    3b0c:	bl	0 <free>
    3b10:	ldr	x0, [sp, #256]
    3b14:	add	x8, sp, #0x100
    3b18:	add	x8, x8, #0x10
    3b1c:	cmp	x0, x8
    3b20:	b.eq	3b28 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36d0>  // b.none
    3b24:	bl	0 <free>
    3b28:	ldr	x1, [sp, #464]
    3b2c:	cbz	x1, 3b38 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36e0>
    3b30:	add	x0, sp, #0x1d0
    3b34:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3b38:	ldr	w8, [sp, #816]
    3b3c:	ldr	x19, [sp, #808]
    3b40:	cbz	w8, 3b6c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3714>
    3b44:	mov	w9, #0x38                  	// #56
    3b48:	mul	x20, x8, x9
    3b4c:	add	x21, x19, x20
    3b50:	ldur	x0, [x21, #-32]
    3b54:	bl	0 <free>
    3b58:	ldur	x0, [x21, #-56]
    3b5c:	bl	0 <free>
    3b60:	subs	x20, x20, #0x38
    3b64:	b.ne	3b4c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x36f4>  // b.any
    3b68:	ldr	x19, [sp, #808]
    3b6c:	ldr	x8, [sp, #8]
    3b70:	add	x8, x8, #0x10
    3b74:	cmp	x19, x8
    3b78:	b.eq	3b84 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x372c>  // b.none
    3b7c:	mov	x0, x19
    3b80:	bl	0 <free>
    3b84:	ldr	x0, [sp, #536]
    3b88:	add	x8, sp, #0x218
    3b8c:	add	x8, x8, #0x10
    3b90:	cmp	x0, x8
    3b94:	b.eq	3b9c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x3744>  // b.none
    3b98:	bl	0 <free>
    3b9c:	add	sp, sp, #0xaf0
    3ba0:	ldp	x20, x19, [sp, #112]
    3ba4:	ldp	x22, x21, [sp, #96]
    3ba8:	ldp	x24, x23, [sp, #80]
    3bac:	ldp	x26, x25, [sp, #64]
    3bb0:	ldp	x28, x27, [sp, #48]
    3bb4:	ldp	x29, x30, [sp, #32]
    3bb8:	ldp	d9, d8, [sp, #16]
    3bbc:	ldr	d10, [sp], #128
    3bc0:	ret
    3bc4:	ldr	x1, [sp, #128]
    3bc8:	sub	x0, x29, #0xb8
    3bcc:	mov	w3, #0x8                   	// #8
    3bd0:	mov	x2, xzr
    3bd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3bd8:	ldur	w8, [x29, #-176]
    3bdc:	b	31c0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d68>
    3be0:	ldr	x1, [sp, #128]
    3be4:	sub	x0, x29, #0xb8
    3be8:	mov	w3, #0x8                   	// #8
    3bec:	mov	x2, xzr
    3bf0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3bf4:	ldur	w8, [x29, #-176]
    3bf8:	b	31e4 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2d8c>
    3bfc:	ldr	x1, [sp, #128]
    3c00:	sub	x0, x29, #0xb8
    3c04:	mov	w3, #0x8                   	// #8
    3c08:	mov	x2, xzr
    3c0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3c10:	ldur	w8, [x29, #-176]
    3c14:	b	3208 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2db0>
    3c18:	ldr	x1, [sp, #128]
    3c1c:	sub	x0, x29, #0xb8
    3c20:	mov	w3, #0x8                   	// #8
    3c24:	mov	x2, xzr
    3c28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3c2c:	ldur	w8, [x29, #-176]
    3c30:	b	322c <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE+0x2dd4>
    3c34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c40:	add	x0, x0, #0x0
    3c44:	add	x1, x1, #0x0
    3c48:	add	x3, x3, #0x0
    3c4c:	mov	w2, #0x33d                 	// #829
    3c50:	bl	0 <__assert_fail>
    3c54:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c58:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c5c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c60:	add	x0, x0, #0x0
    3c64:	add	x1, x1, #0x0
    3c68:	add	x3, x3, #0x0
    3c6c:	mov	w2, #0x8b                  	// #139
    3c70:	bl	0 <__assert_fail>
    3c74:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c78:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c7c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c80:	add	x0, x0, #0x0
    3c84:	add	x1, x1, #0x0
    3c88:	add	x3, x3, #0x0
    3c8c:	mov	w2, #0x69                  	// #105
    3c90:	bl	0 <__assert_fail>
    3c94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c98:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3c9c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ca0:	add	x0, x0, #0x0
    3ca4:	add	x1, x1, #0x0
    3ca8:	add	x3, x3, #0x0
    3cac:	mov	w2, #0x3a                  	// #58
    3cb0:	bl	0 <__assert_fail>
    3cb4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cb8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cbc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cc0:	add	x0, x0, #0x0
    3cc4:	add	x1, x1, #0x0
    3cc8:	add	x3, x3, #0x0
    3ccc:	mov	w2, #0xda                  	// #218
    3cd0:	bl	0 <__assert_fail>
    3cd4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cd8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cdc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ce0:	add	x0, x0, #0x0
    3ce4:	add	x1, x1, #0x0
    3ce8:	add	x3, x3, #0x0
    3cec:	mov	w2, #0x5b                  	// #91
    3cf0:	bl	0 <__assert_fail>
    3cf4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cf8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3cfc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d00:	add	x0, x0, #0x0
    3d04:	add	x1, x1, #0x0
    3d08:	add	x3, x3, #0x0
    3d0c:	mov	w2, #0xb8                  	// #184
    3d10:	bl	0 <__assert_fail>
    3d14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d1c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d20:	add	x0, x0, #0x0
    3d24:	add	x1, x1, #0x0
    3d28:	add	x3, x3, #0x0
    3d2c:	mov	w2, #0x8b                  	// #139
    3d30:	bl	0 <__assert_fail>
    3d34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d40:	add	x0, x0, #0x0
    3d44:	add	x1, x1, #0x0
    3d48:	add	x3, x3, #0x0
    3d4c:	mov	w2, #0x108                 	// #264
    3d50:	bl	0 <__assert_fail>
    3d54:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d58:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d5c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d60:	add	x0, x0, #0x0
    3d64:	add	x1, x1, #0x0
    3d68:	add	x3, x3, #0x0
    3d6c:	mov	w2, #0x43                  	// #67
    3d70:	bl	0 <__assert_fail>
    3d74:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d78:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d7c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d80:	add	x0, x0, #0x0
    3d84:	add	x1, x1, #0x0
    3d88:	add	x3, x3, #0x0
    3d8c:	mov	w2, #0x108                 	// #264
    3d90:	bl	0 <__assert_fail>
    3d94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d98:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3d9c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3da0:	add	x0, x0, #0x0
    3da4:	add	x1, x1, #0x0
    3da8:	add	x3, x3, #0x0
    3dac:	mov	w2, #0x99                  	// #153
    3db0:	bl	0 <__assert_fail>
    3db4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3db8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dbc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dc0:	add	x0, x0, #0x0
    3dc4:	add	x1, x1, #0x0
    3dc8:	add	x3, x3, #0x0
    3dcc:	mov	w2, #0x99                  	// #153
    3dd0:	bl	0 <__assert_fail>
    3dd4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dd8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ddc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3de0:	add	x0, x0, #0x0
    3de4:	add	x1, x1, #0x0
    3de8:	add	x3, x3, #0x0
    3dec:	mov	w2, #0x69                  	// #105
    3df0:	bl	0 <__assert_fail>
    3df4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3df8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3dfc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e00:	add	x0, x0, #0x0
    3e04:	add	x1, x1, #0x0
    3e08:	add	x3, x3, #0x0
    3e0c:	mov	w2, #0x69                  	// #105
    3e10:	bl	0 <__assert_fail>
    3e14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e1c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e20:	add	x0, x0, #0x0
    3e24:	add	x1, x1, #0x0
    3e28:	add	x3, x3, #0x0
    3e2c:	mov	w2, #0xb3                  	// #179
    3e30:	bl	0 <__assert_fail>
    3e34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e40:	add	x0, x0, #0x0
    3e44:	add	x1, x1, #0x0
    3e48:	add	x3, x3, #0x0
    3e4c:	mov	w2, #0x108                 	// #264
    3e50:	bl	0 <__assert_fail>
    3e54:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e58:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e5c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e60:	add	x0, x0, #0x0
    3e64:	add	x1, x1, #0x0
    3e68:	add	x3, x3, #0x0
    3e6c:	mov	w2, #0x69                  	// #105
    3e70:	bl	0 <__assert_fail>
    3e74:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e78:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e7c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e80:	add	x0, x0, #0x0
    3e84:	add	x1, x1, #0x0
    3e88:	add	x3, x3, #0x0
    3e8c:	mov	w2, #0x108                 	// #264
    3e90:	bl	0 <__assert_fail>
    3e94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e98:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3e9c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ea0:	add	x0, x0, #0x0
    3ea4:	add	x1, x1, #0x0
    3ea8:	add	x3, x3, #0x0
    3eac:	mov	w2, #0x69                  	// #105
    3eb0:	bl	0 <__assert_fail>
    3eb4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3eb8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ebc:	add	x0, x0, #0x0
    3ec0:	add	x1, x1, #0x0
    3ec4:	mov	w2, #0x324                 	// #804
    3ec8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    3ecc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ed0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ed4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ed8:	add	x0, x0, #0x0
    3edc:	add	x1, x1, #0x0
    3ee0:	add	x3, x3, #0x0
    3ee4:	mov	w2, #0x69                  	// #105
    3ee8:	bl	0 <__assert_fail>
    3eec:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ef0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ef4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ef8:	add	x0, x0, #0x0
    3efc:	add	x1, x1, #0x0
    3f00:	add	x3, x3, #0x0
    3f04:	mov	w2, #0x3d4                 	// #980
    3f08:	bl	0 <__assert_fail>
    3f0c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f10:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f14:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f18:	add	x0, x0, #0x0
    3f1c:	add	x1, x1, #0x0
    3f20:	add	x3, x3, #0x0
    3f24:	mov	w2, #0x95                  	// #149
    3f28:	bl	0 <__assert_fail>
    3f2c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f30:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f34:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f38:	add	x0, x0, #0x0
    3f3c:	add	x1, x1, #0x0
    3f40:	add	x3, x3, #0x0
    3f44:	mov	w2, #0x17e                 	// #382
    3f48:	bl	0 <__assert_fail>
    3f4c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f50:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f54:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f58:	add	x0, x0, #0x0
    3f5c:	add	x1, x1, #0x0
    3f60:	add	x3, x3, #0x0
    3f64:	mov	w2, #0x69                  	// #105
    3f68:	bl	0 <__assert_fail>
    3f6c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f70:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f74:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f78:	add	x0, x0, #0x0
    3f7c:	add	x1, x1, #0x0
    3f80:	add	x3, x3, #0x0
    3f84:	mov	w2, #0x108                 	// #264
    3f88:	bl	0 <__assert_fail>
    3f8c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f90:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f94:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3f98:	add	x0, x0, #0x0
    3f9c:	add	x1, x1, #0x0
    3fa0:	add	x3, x3, #0x0
    3fa4:	mov	w2, #0x69                  	// #105
    3fa8:	bl	0 <__assert_fail>
    3fac:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fb0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fb4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fb8:	add	x0, x0, #0x0
    3fbc:	add	x1, x1, #0x0
    3fc0:	add	x3, x3, #0x0
    3fc4:	mov	w2, #0x11f6                	// #4598
    3fc8:	bl	0 <__assert_fail>
    3fcc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fd0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fd4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3fd8:	add	x0, x0, #0x0
    3fdc:	add	x1, x1, #0x0
    3fe0:	add	x3, x3, #0x0
    3fe4:	mov	w2, #0x1214                	// #4628
    3fe8:	bl	0 <__assert_fail>
    3fec:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ff0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ff4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    3ff8:	add	x0, x0, #0x0
    3ffc:	add	x1, x1, #0x0
    4000:	add	x3, x3, #0x0
    4004:	mov	w2, #0x10c4                	// #4292
    4008:	bl	0 <__assert_fail>
    400c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4010:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4014:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4018:	add	x0, x0, #0x0
    401c:	add	x1, x1, #0x0
    4020:	add	x3, x3, #0x0
    4024:	mov	w2, #0x1126                	// #4390
    4028:	bl	0 <__assert_fail>
    402c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4030:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4034:	add	x0, x0, #0x0
    4038:	add	x1, x1, #0x0
    403c:	mov	w2, #0x35c                 	// #860
    4040:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4044:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4048:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    404c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4050:	add	x0, x0, #0x0
    4054:	add	x1, x1, #0x0
    4058:	add	x3, x3, #0x0
    405c:	mov	w2, #0x1126                	// #4390
    4060:	bl	0 <__assert_fail>
    4064:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4068:	add	x0, x0, #0x0
    406c:	mov	w1, #0x1                   	// #1
    4070:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    4074:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4078:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    407c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4080:	add	x0, x0, #0x0
    4084:	add	x1, x1, #0x0
    4088:	add	x3, x3, #0x0
    408c:	mov	w2, #0x69                  	// #105
    4090:	bl	0 <__assert_fail>
    4094:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4098:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    409c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40a0:	add	x0, x0, #0x0
    40a4:	add	x1, x1, #0x0
    40a8:	add	x3, x3, #0x0
    40ac:	mov	w2, #0xc7                  	// #199
    40b0:	bl	0 <__assert_fail>
    40b4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40b8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40bc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40c0:	add	x0, x0, #0x0
    40c4:	add	x1, x1, #0x0
    40c8:	add	x3, x3, #0x0
    40cc:	mov	w2, #0x7d                  	// #125
    40d0:	bl	0 <__assert_fail>
    40d4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40d8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40dc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40e0:	add	x0, x0, #0x0
    40e4:	add	x1, x1, #0x0
    40e8:	add	x3, x3, #0x0
    40ec:	mov	w2, #0x69                  	// #105
    40f0:	bl	0 <__assert_fail>
    40f4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40f8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    40fc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4100:	add	x0, x0, #0x0
    4104:	add	x1, x1, #0x0
    4108:	add	x3, x3, #0x0
    410c:	mov	w2, #0x194                 	// #404
    4110:	bl	0 <__assert_fail>
    4114:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4118:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    411c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4120:	add	x0, x0, #0x0
    4124:	add	x1, x1, #0x0
    4128:	add	x3, x3, #0x0
    412c:	mov	w2, #0x69                  	// #105
    4130:	bl	0 <__assert_fail>
    4134:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4138:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    413c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4140:	add	x0, x0, #0x0
    4144:	add	x1, x1, #0x0
    4148:	add	x3, x3, #0x0
    414c:	mov	w2, #0x2ce                 	// #718
    4150:	bl	0 <__assert_fail>
    4154:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4158:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    415c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4160:	add	x0, x0, #0x0
    4164:	add	x1, x1, #0x0
    4168:	add	x3, x3, #0x0
    416c:	mov	w2, #0x88                  	// #136
    4170:	bl	0 <__assert_fail>
    4174:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4178:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    417c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4180:	add	x0, x0, #0x0
    4184:	add	x1, x1, #0x0
    4188:	add	x3, x3, #0x0
    418c:	mov	w2, #0x69                  	// #105
    4190:	bl	0 <__assert_fail>
    4194:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4198:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    419c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41a0:	add	x0, x0, #0x0
    41a4:	add	x1, x1, #0x0
    41a8:	add	x3, x3, #0x0
    41ac:	mov	w2, #0x137                 	// #311
    41b0:	bl	0 <__assert_fail>
    41b4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41b8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41bc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41c0:	add	x0, x0, #0x0
    41c4:	add	x1, x1, #0x0
    41c8:	add	x3, x3, #0x0
    41cc:	mov	w2, #0x69                  	// #105
    41d0:	bl	0 <__assert_fail>
    41d4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41d8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41dc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41e0:	add	x0, x0, #0x0
    41e4:	add	x1, x1, #0x0
    41e8:	add	x3, x3, #0x0
    41ec:	mov	w2, #0x69                  	// #105
    41f0:	bl	0 <__assert_fail>
    41f4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    41f8:	add	x0, x0, #0x0
    41fc:	mov	w1, #0x1                   	// #1
    4200:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    4204:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4208:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    420c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4210:	add	x0, x0, #0x0
    4214:	add	x1, x1, #0x0
    4218:	add	x3, x3, #0x0
    421c:	mov	w2, #0x657                 	// #1623
    4220:	bl	0 <__assert_fail>
    4224:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4228:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    422c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4230:	add	x0, x0, #0x0
    4234:	add	x1, x1, #0x0
    4238:	add	x3, x3, #0x0
    423c:	mov	w2, #0x69                  	// #105
    4240:	bl	0 <__assert_fail>
    4244:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4248:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    424c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4250:	add	x0, x0, #0x0
    4254:	add	x1, x1, #0x0
    4258:	add	x3, x3, #0x0
    425c:	mov	w2, #0x108                 	// #264
    4260:	bl	0 <__assert_fail>

0000000000004264 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE>:
    4264:	sub	sp, sp, #0x70
    4268:	stp	x29, x30, [sp, #64]
    426c:	str	x21, [sp, #80]
    4270:	stp	x20, x19, [sp, #96]
    4274:	add	x29, sp, #0x40
    4278:	ldr	x21, [x0, #40]
    427c:	ldr	x8, [x21, #48]
    4280:	ldrb	w9, [x8]
    4284:	tbnz	w9, #2, 43f8 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x194>
    4288:	sub	x9, x8, #0x18
    428c:	cmp	x8, #0x0
    4290:	csel	x8, xzr, x9, eq  // eq = none
    4294:	mov	x20, x0
    4298:	mov	x19, x1
    429c:	cmp	x8, x0
    42a0:	b.eq	42dc <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x78>  // b.none
    42a4:	add	x1, x20, #0x18
    42a8:	mov	x0, x21
    42ac:	mov	x2, x19
    42b0:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    42b4:	ldp	x8, x9, [x20, #32]
    42b8:	add	x9, x9, #0x28
    42bc:	cmp	x9, x8
    42c0:	b.eq	4304 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0xa0>  // b.none
    42c4:	ldrb	w9, [x8]
    42c8:	tbnz	w9, #2, 43f8 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x194>
    42cc:	sub	x9, x8, #0x18
    42d0:	cmp	x8, #0x0
    42d4:	csel	x20, xzr, x9, eq  // eq = none
    42d8:	b	4308 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0xa4>
    42dc:	mov	x0, x21
    42e0:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
    42e4:	cbz	x0, 42a4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x40>
    42e8:	mov	x0, x21
    42ec:	mov	x1, x19
    42f0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    42f4:	ldp	x8, x9, [x20, #32]
    42f8:	add	x9, x9, #0x28
    42fc:	cmp	x9, x8
    4300:	b.ne	42c4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x60>  // b.any
    4304:	mov	x20, xzr
    4308:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    430c:	add	x9, x9, #0x0
    4310:	mov	w8, #0x103                 	// #259
    4314:	stp	x9, xzr, [sp, #8]
    4318:	strh	w8, [sp, #24]
    431c:	ldrb	w8, [x19, #16]
    4320:	cmp	w8, #0x1
    4324:	b.eq	433c <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0xd8>  // b.none
    4328:	cbnz	w8, 4350 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0xec>
    432c:	mov	w8, #0x100                 	// #256
    4330:	stp	xzr, xzr, [sp, #32]
    4334:	strh	w8, [sp, #48]
    4338:	b	4394 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x130>
    433c:	ldur	q0, [sp, #8]
    4340:	ldr	x8, [sp, #24]
    4344:	str	q0, [sp, #32]
    4348:	str	x8, [sp, #48]
    434c:	b	4394 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x130>
    4350:	ldrb	w10, [x19, #17]
    4354:	cmp	w10, #0x1
    4358:	b.ne	4364 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x100>  // b.any
    435c:	ldr	x19, [x19]
    4360:	b	4368 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x104>
    4364:	mov	w8, #0x2                   	// #2
    4368:	stp	x9, x19, [sp, #32]
    436c:	mov	w9, #0x3                   	// #3
    4370:	cmp	w8, #0x2
    4374:	strb	w9, [sp, #48]
    4378:	strb	w8, [sp, #49]
    437c:	b.ne	4394 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x130>  // b.any
    4380:	ldrb	w8, [x19, #16]
    4384:	cbz	w8, 4418 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x1b4>
    4388:	ldrb	w8, [x19, #17]
    438c:	cmp	w8, #0x1
    4390:	b.eq	4418 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x1b4>  // b.none
    4394:	ldr	x19, [x20, #40]
    4398:	ldr	x8, [x19, #48]
    439c:	ldrb	w9, [x8]
    43a0:	tbnz	w9, #2, 43f8 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x194>
    43a4:	sub	x9, x8, #0x18
    43a8:	cmp	x8, #0x0
    43ac:	csel	x8, xzr, x9, eq  // eq = none
    43b0:	cmp	x8, x20
    43b4:	b.eq	43cc <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x168>  // b.none
    43b8:	add	x1, x20, #0x18
    43bc:	add	x2, sp, #0x20
    43c0:	mov	x0, x19
    43c4:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    43c8:	b	43e4 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x180>
    43cc:	mov	x0, x19
    43d0:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
    43d4:	cbz	x0, 43b8 <_ZL11splitAroundPN4llvm11InstructionERKNS_5TwineE+0x154>
    43d8:	add	x1, sp, #0x20
    43dc:	mov	x0, x19
    43e0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    43e4:	ldp	x20, x19, [sp, #96]
    43e8:	ldr	x21, [sp, #80]
    43ec:	ldp	x29, x30, [sp, #64]
    43f0:	add	sp, sp, #0x70
    43f4:	ret
    43f8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    43fc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4400:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4404:	add	x0, x0, #0x0
    4408:	add	x1, x1, #0x0
    440c:	add	x3, x3, #0x0
    4410:	mov	w2, #0x8b                  	// #139
    4414:	bl	0 <__assert_fail>
    4418:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    441c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4420:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4424:	add	x0, x0, #0x0
    4428:	add	x1, x1, #0x0
    442c:	add	x3, x3, #0x0
    4430:	mov	w2, #0xb8                  	// #184
    4434:	bl	0 <__assert_fail>

0000000000004438 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_>:
    4438:	stp	x29, x30, [sp, #-48]!
    443c:	str	x21, [sp, #16]
    4440:	stp	x20, x19, [sp, #32]
    4444:	mov	x29, sp
    4448:	ldp	w8, w9, [x0, #8]
    444c:	mov	x20, x2
    4450:	mov	x19, x0
    4454:	mov	x21, x1
    4458:	cmp	w8, w9
    445c:	b.cs	44c4 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0x8c>  // b.hs, b.nlast
    4460:	ldr	x9, [x19]
    4464:	ldr	x12, [x21]
    4468:	ldr	x10, [x20]
    446c:	mov	w11, #0x18                  	// #24
    4470:	umaddl	x11, w8, w11, x9
    4474:	str	x12, [x11], #8
    4478:	cbz	x10, 44e0 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xa8>
    447c:	ldrb	w12, [x10, #16]
    4480:	cmp	w12, #0x17
    4484:	b.ls	4500 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xc8>  // b.plast
    4488:	mov	w8, w8
    448c:	str	x10, [x11]
    4490:	mov	w10, #0x18                  	// #24
    4494:	madd	x9, x8, x10, x9
    4498:	mov	w10, #0xffffffff            	// #-1
    449c:	str	w10, [x9, #16]
    44a0:	ldr	w9, [x19, #12]
    44a4:	cmp	w8, w9
    44a8:	b.cs	4520 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0xe8>  // b.hs, b.nlast
    44ac:	add	w8, w8, #0x1
    44b0:	str	w8, [x19, #8]
    44b4:	ldp	x20, x19, [sp, #32]
    44b8:	ldr	x21, [sp, #16]
    44bc:	ldp	x29, x30, [sp], #48
    44c0:	ret
    44c4:	add	x1, x19, #0x10
    44c8:	mov	w3, #0x18                  	// #24
    44cc:	mov	x0, x19
    44d0:	mov	x2, xzr
    44d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    44d8:	ldr	w8, [x19, #8]
    44dc:	b	4460 <_ZN4llvm15SmallVectorImplIN12_GLOBAL__N_15SpillEE12emplace_backIJPNS_11InstructionERPNS_4UserEEEERS2_DpOT_+0x28>
    44e0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    44e4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    44e8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    44ec:	add	x0, x0, #0x0
    44f0:	add	x1, x1, #0x0
    44f4:	add	x3, x3, #0x0
    44f8:	mov	w2, #0x69                  	// #105
    44fc:	bl	0 <__assert_fail>
    4500:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4504:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4508:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    450c:	add	x0, x0, #0x0
    4510:	add	x1, x1, #0x0
    4514:	add	x3, x3, #0x0
    4518:	mov	w2, #0x108                 	// #264
    451c:	bl	0 <__assert_fail>
    4520:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4524:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4528:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    452c:	add	x0, x0, #0x0
    4530:	add	x1, x1, #0x0
    4534:	add	x3, x3, #0x0
    4538:	mov	w2, #0x43                  	// #67
    453c:	bl	0 <__assert_fail>

0000000000004540 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE>:
    4540:	stp	x29, x30, [sp, #-64]!
    4544:	stp	x24, x23, [sp, #16]
    4548:	stp	x22, x21, [sp, #32]
    454c:	stp	x20, x19, [sp, #48]
    4550:	mov	x29, sp
    4554:	mov	x19, x2
    4558:	mov	x21, x1
    455c:	mov	x22, x0
    4560:	bl	0 <_ZN4llvm4dbgsEv>
    4564:	ldp	x9, x8, [x0, #16]
    4568:	mov	x20, x0
    456c:	sub	x9, x9, x8
    4570:	cmp	x9, #0xd
    4574:	b.hi	45f0 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0xb0>  // b.pmore
    4578:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    457c:	add	x1, x1, #0x0
    4580:	mov	w2, #0xe                   	// #14
    4584:	mov	x0, x20
    4588:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    458c:	mov	x20, x0
    4590:	ldr	x0, [x0, #24]
    4594:	ldr	x8, [x20, #16]
    4598:	sub	x8, x8, x0
    459c:	cmp	x21, x8
    45a0:	b.hi	4624 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0xe4>  // b.pmore
    45a4:	cbz	x21, 45c0 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x80>
    45a8:	mov	x1, x22
    45ac:	mov	x2, x21
    45b0:	bl	0 <memcpy>
    45b4:	ldr	x8, [x20, #24]
    45b8:	add	x0, x8, x21
    45bc:	str	x0, [x20, #24]
    45c0:	ldr	x8, [x20, #16]
    45c4:	sub	x8, x8, x0
    45c8:	cmp	x8, #0xe
    45cc:	b.hi	464c <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x10c>  // b.pmore
    45d0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    45d4:	add	x1, x1, #0x0
    45d8:	mov	w2, #0xf                   	// #15
    45dc:	mov	x0, x20
    45e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    45e4:	ldr	w8, [x19, #8]
    45e8:	cbnz	w8, 4678 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x138>
    45ec:	b	4700 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x1c0>
    45f0:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    45f4:	add	x9, x9, #0x0
    45f8:	ldur	x10, [x9, #6]
    45fc:	ldr	x9, [x9]
    4600:	stur	x10, [x8, #6]
    4604:	str	x9, [x8]
    4608:	ldr	x8, [x20, #24]
    460c:	add	x0, x8, #0xe
    4610:	str	x0, [x20, #24]
    4614:	ldr	x8, [x20, #16]
    4618:	sub	x8, x8, x0
    461c:	cmp	x21, x8
    4620:	b.ls	45a4 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x64>  // b.plast
    4624:	mov	x0, x20
    4628:	mov	x1, x22
    462c:	mov	x2, x21
    4630:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4634:	mov	x20, x0
    4638:	ldr	x0, [x0, #24]
    463c:	ldr	x8, [x20, #16]
    4640:	sub	x8, x8, x0
    4644:	cmp	x8, #0xe
    4648:	b.ls	45d0 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x90>  // b.plast
    464c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4650:	add	x8, x8, #0x0
    4654:	ldur	x9, [x8, #7]
    4658:	ldr	x8, [x8]
    465c:	stur	x9, [x0, #7]
    4660:	str	x8, [x0]
    4664:	ldr	x8, [x20, #24]
    4668:	add	x8, x8, #0xf
    466c:	str	x8, [x20, #24]
    4670:	ldr	w8, [x19, #8]
    4674:	cbz	w8, 4700 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x1c0>
    4678:	ldr	x21, [x19]
    467c:	mov	w9, #0x18                  	// #24
    4680:	adrp	x19, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4684:	mov	x22, xzr
    4688:	add	x19, x19, #0x0
    468c:	madd	x23, x8, x9, x21
    4690:	mov	w24, #0x20                  	// #32
    4694:	b	46c4 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x184>
    4698:	ldr	x9, [x19]
    469c:	strb	w24, [x8, #8]
    46a0:	str	x9, [x8]
    46a4:	ldr	x8, [x0, #24]
    46a8:	add	x8, x8, #0x9
    46ac:	str	x8, [x0, #24]
    46b0:	ldr	x0, [x21, #8]
    46b4:	bl	0 <_ZNK4llvm5Value4dumpEv>
    46b8:	add	x21, x21, #0x18
    46bc:	cmp	x21, x23
    46c0:	b.eq	4700 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x1c0>  // b.none
    46c4:	ldr	x20, [x21]
    46c8:	cmp	x22, x20
    46cc:	b.eq	46dc <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x19c>  // b.none
    46d0:	mov	x0, x20
    46d4:	bl	0 <_ZNK4llvm5Value4dumpEv>
    46d8:	mov	x22, x20
    46dc:	bl	0 <_ZN4llvm4dbgsEv>
    46e0:	ldp	x9, x8, [x0, #16]
    46e4:	sub	x9, x9, x8
    46e8:	cmp	x9, #0x8
    46ec:	b.hi	4698 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x158>  // b.pmore
    46f0:	mov	w2, #0x9                   	// #9
    46f4:	mov	x1, x19
    46f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    46fc:	b	46b0 <_ZL4dumpN4llvm9StringRefERKNS_11SmallVectorIN12_GLOBAL__N_15SpillELj8EEE+0x170>
    4700:	ldp	x20, x19, [sp, #48]
    4704:	ldp	x22, x21, [sp, #32]
    4708:	ldp	x24, x23, [sp, #16]
    470c:	ldp	x29, x30, [sp], #64
    4710:	ret

0000000000004714 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE>:
    4714:	stp	d9, d8, [sp, #-112]!
    4718:	stp	x29, x30, [sp, #16]
    471c:	stp	x28, x27, [sp, #32]
    4720:	stp	x26, x25, [sp, #48]
    4724:	stp	x24, x23, [sp, #64]
    4728:	stp	x22, x21, [sp, #80]
    472c:	stp	x20, x19, [sp, #96]
    4730:	mov	x29, sp
    4734:	sub	sp, sp, #0x310
    4738:	ldr	x19, [x1]
    473c:	mov	x21, x0
    4740:	mov	x27, x1
    4744:	mov	x0, x19
    4748:	bl	0 <_ZNK4llvm5Value10getContextEv>
    474c:	ldp	x8, x9, [x19, #32]
    4750:	mov	x22, x0
    4754:	add	x9, x9, #0x28
    4758:	cmp	x9, x8
    475c:	b.eq	4778 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x64>  // b.none
    4760:	ldrb	w9, [x8]
    4764:	tbnz	w9, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4768:	sub	x9, x8, #0x18
    476c:	cmp	x8, #0x0
    4770:	csel	x23, xzr, x9, eq  // eq = none
    4774:	b	477c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x68>
    4778:	mov	x23, xzr
    477c:	mov	x0, x23
    4780:	bl	0 <_ZNK4llvm5Value10getContextEv>
    4784:	stp	x0, xzr, [sp, #344]
    4788:	mov	w8, #0x200                 	// #512
    478c:	add	x0, sp, #0x140
    4790:	mov	x1, x23
    4794:	str	wzr, [sp, #360]
    4798:	strb	wzr, [sp, #366]
    479c:	stp	xzr, xzr, [sp, #328]
    47a0:	str	xzr, [sp, #320]
    47a4:	strh	w8, [sp, #364]
    47a8:	stp	xzr, xzr, [sp, #368]
    47ac:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    47b0:	ldr	x0, [x27, #176]
    47b4:	mov	w1, wzr
    47b8:	str	x0, [sp, #312]
    47bc:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    47c0:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    47c4:	add	x8, x8, #0x0
    47c8:	mov	w9, #0x103                 	// #259
    47cc:	stp	x8, xzr, [sp, #224]
    47d0:	strh	w9, [sp, #240]
    47d4:	ldr	x8, [x19]
    47d8:	cmp	x8, x0
    47dc:	b.eq	4824 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x110>  // b.none
    47e0:	ldrb	w8, [x19, #16]
    47e4:	mov	x2, x0
    47e8:	cmp	w8, #0x10
    47ec:	b.ls	482c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x118>  // b.plast
    47f0:	mov	w8, #0x101                 	// #257
    47f4:	add	x3, sp, #0x188
    47f8:	mov	w0, #0x31                  	// #49
    47fc:	mov	x1, x19
    4800:	mov	x4, xzr
    4804:	stp	xzr, xzr, [sp, #392]
    4808:	strh	w8, [sp, #408]
    480c:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    4810:	mov	x1, x0
    4814:	add	x0, sp, #0x140
    4818:	add	x2, sp, #0xe0
    481c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4820:	b	483c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x128>
    4824:	mov	x0, x19
    4828:	b	4840 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12c>
    482c:	mov	w0, #0x31                  	// #49
    4830:	mov	x1, x19
    4834:	mov	w3, wzr
    4838:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    483c:	cbz	x0, 5a94 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1380>
    4840:	ldrb	w8, [x0, #16]
    4844:	cmp	w8, #0x17
    4848:	b.ls	5994 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1280>  // b.plast
    484c:	str	x0, [sp, #304]
    4850:	mov	x0, x19
    4854:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    4858:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    485c:	ldr	d0, [x9]
    4860:	add	x8, sp, #0xe0
    4864:	add	x8, x8, #0x10
    4868:	stp	xzr, x0, [sp, #280]
    486c:	add	x0, sp, #0xe0
    4870:	str	wzr, [sp, #300]
    4874:	stp	xzr, xzr, [sp, #256]
    4878:	str	xzr, [sp, #248]
    487c:	str	wzr, [sp, #272]
    4880:	strb	wzr, [sp, #296]
    4884:	str	x8, [sp, #224]
    4888:	str	d0, [sp, #232]
    488c:	bl	0 <_ZN4llvm14DomTreeBuilder9CalculateINS_17DominatorTreeBaseINS_10BasicBlockELb0EEEEEvRT_>
    4890:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4894:	ldr	d8, [x8]
    4898:	add	x8, sp, #0x90
    489c:	add	x8, x8, #0x10
    48a0:	str	x8, [sp, #144]
    48a4:	str	d8, [sp, #152]
    48a8:	ldr	w8, [x27, #168]
    48ac:	cbnz	w8, 48cc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1b8>
    48b0:	ldr	x8, [x27, #208]
    48b4:	cbz	x8, 48cc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1b8>
    48b8:	str	x8, [sp, #160]
    48bc:	mov	w8, #0x2                   	// #2
    48c0:	mov	w9, #0x1                   	// #1
    48c4:	str	w8, [sp, #168]
    48c8:	str	w9, [sp, #152]
    48cc:	add	x8, sp, #0x140
    48d0:	add	x9, sp, #0x138
    48d4:	add	x10, sp, #0x130
    48d8:	stp	x22, x8, [sp, #112]
    48dc:	stp	x9, x10, [sp, #128]
    48e0:	ldr	w8, [x21, #8]
    48e4:	cbz	w8, 4e18 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x704>
    48e8:	ldr	x9, [x21]
    48ec:	add	x8, x8, x8, lsl #1
    48f0:	mov	x23, xzr
    48f4:	mov	x24, xzr
    48f8:	mov	x22, xzr
    48fc:	mov	w21, #0xffffffff            	// #-1
    4900:	add	x26, sp, #0x40
    4904:	lsl	x28, x8, #3
    4908:	add	x20, x9, #0x8
    490c:	b	492c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x218>
    4910:	mov	x0, x25
    4914:	mov	x1, x22
    4918:	mov	x2, x24
    491c:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    4920:	subs	x28, x28, #0x18
    4924:	add	x20, x20, #0x18
    4928:	b.eq	4e18 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x704>  // b.none
    492c:	ldur	x9, [x20, #-8]
    4930:	mov	x8, x23
    4934:	cmp	x22, x9
    4938:	b.eq	4c9c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x588>  // b.none
    493c:	ldr	w21, [x20, #8]
    4940:	cmn	w21, #0x1
    4944:	b.eq	5814 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1100>  // b.none
    4948:	cbz	x9, 57b4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10a0>
    494c:	ldrb	w8, [x9, #16]
    4950:	mov	x22, x9
    4954:	cmp	w8, #0x37
    4958:	csel	x23, x9, xzr, eq  // eq = none
    495c:	cbz	x23, 499c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x288>
    4960:	ldp	w8, w9, [sp, #152]
    4964:	cmp	w8, w9
    4968:	b.cs	4e04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6f0>  // b.hs, b.nlast
    496c:	ldr	x10, [sp, #144]
    4970:	cmp	w8, w9
    4974:	add	x9, x10, w8, uxtw #4
    4978:	str	x23, [x9]
    497c:	str	w21, [x9, #8]
    4980:	b.cs	575c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1048>  // b.hs, b.nlast
    4984:	add	w8, w8, #0x1
    4988:	mov	x0, x23
    498c:	str	w8, [sp, #152]
    4990:	bl	0 <_ZNK4llvm10AllocaInst14isStaticAllocaEv>
    4994:	tbnz	w0, #0, 4c94 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x580>
    4998:	b	5874 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1160>
    499c:	cmp	w8, #0x4e
    49a0:	b.gt	49e8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x2d4>
    49a4:	cmp	w8, #0x11
    49a8:	b.eq	4a74 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x360>  // b.none
    49ac:	cmp	w8, #0x1d
    49b0:	b.ne	4a34 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x320>  // b.any
    49b4:	ldur	x1, [x22, #-72]
    49b8:	cbz	x1, 59b4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12a0>
    49bc:	ldrb	w8, [x1, #16]
    49c0:	cmp	w8, #0x12
    49c4:	b.ne	59d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12c0>  // b.any
    49c8:	ldr	x0, [x22, #40]
    49cc:	mov	x2, xzr
    49d0:	mov	x3, xzr
    49d4:	mov	x4, xzr
    49d8:	bl	0 <_ZN4llvm9SplitEdgeEPNS_10BasicBlockES1_PNS_13DominatorTreeEPNS_8LoopInfoEPNS_16MemorySSAUpdaterE>
    49dc:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    49e0:	mov	x25, x0
    49e4:	b	4c04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4f0>
    49e8:	cmp	w8, #0x4f
    49ec:	b.eq	4aa8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x394>  // b.none
    49f0:	cmp	w8, #0x50
    49f4:	b.ne	4a34 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x320>  // b.any
    49f8:	ldur	x9, [x22, #-24]
    49fc:	cbz	x9, 4a3c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>
    4a00:	ldrb	w10, [x9, #16]
    4a04:	cbnz	w10, 4a3c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>
    4a08:	ldrb	w10, [x9, #33]
    4a0c:	tbz	w10, #5, 4a3c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>
    4a10:	ldr	w9, [x9, #36]
    4a14:	sub	w9, w9, #0x23
    4a18:	cmp	w9, #0x1
    4a1c:	b.hi	4a3c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x328>  // b.pmore
    4a20:	ldr	x0, [x22, #40]
    4a24:	bl	0 <_ZNK4llvm10BasicBlock18getSingleSuccessorEv>
    4a28:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
    4a2c:	mov	x25, x0
    4a30:	b	4c04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4f0>
    4a34:	cmp	w8, #0x17
    4a38:	b.ls	5994 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1280>  // b.plast
    4a3c:	sub	w8, w8, #0x19
    4a40:	cmp	w8, #0xa
    4a44:	b.ls	59f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x12e0>  // b.plast
    4a48:	add	x0, sp, #0xe0
    4a4c:	mov	x1, x19
    4a50:	mov	x2, x22
    4a54:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    4a58:	tbz	w0, #0, 4b18 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x404>
    4a5c:	ldp	x8, x9, [x22, #32]
    4a60:	add	x9, x9, #0x28
    4a64:	cmp	x9, x8
    4a68:	b.ne	4b2c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x418>  // b.any
    4a6c:	mov	x25, xzr
    4a70:	b	4c04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4f0>
    4a74:	ldr	x8, [sp, #304]
    4a78:	ldp	x8, x9, [x8, #32]
    4a7c:	add	x9, x9, #0x28
    4a80:	cmp	x9, x8
    4a84:	b.eq	4b64 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x450>  // b.none
    4a88:	ldrb	w9, [x8]
    4a8c:	tbnz	w9, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4a90:	sub	x9, x8, #0x18
    4a94:	cmp	x8, #0x0
    4a98:	csel	x25, xzr, x9, eq  // eq = none
    4a9c:	ldr	x0, [x22, #24]
    4aa0:	cbnz	x0, 4b70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x45c>
    4aa4:	b	5a54 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1340>
    4aa8:	ldr	x23, [x22, #40]
    4aac:	mov	x0, x23
    4ab0:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4ab4:	cbz	x0, 5a14 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1300>
    4ab8:	ldrb	w8, [x0, #16]
    4abc:	mov	x25, x0
    4ac0:	cmp	w8, #0x22
    4ac4:	b.ne	4b44 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x430>  // b.any
    4ac8:	ldr	x23, [x25, #40]
    4acc:	add	x1, x25, #0x18
    4ad0:	mov	w8, #0x101                 	// #257
    4ad4:	add	x2, sp, #0x188
    4ad8:	mov	x0, x23
    4adc:	stp	xzr, xzr, [sp, #392]
    4ae0:	strh	w8, [sp, #408]
    4ae4:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    4ae8:	mov	x24, x0
    4aec:	mov	x0, x23
    4af0:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    4af4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4af8:	ldr	w9, [x25, #20]
    4afc:	and	x8, x9, #0xfffffff
    4b00:	cbz	w8, 5a34 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1320>
    4b04:	tbnz	w9, #30, 4b80 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x46c>
    4b08:	mov	w9, #0x18                  	// #24
    4b0c:	mneg	x8, x8, x9
    4b10:	add	x8, x25, x8
    4b14:	b	4b84 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x470>
    4b18:	ldr	x8, [sp, #304]
    4b1c:	ldp	x8, x9, [x8, #32]
    4b20:	add	x9, x9, #0x28
    4b24:	cmp	x9, x8
    4b28:	b.eq	4a6c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x358>  // b.none
    4b2c:	ldrb	w9, [x8]
    4b30:	tbnz	w9, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4b34:	sub	x9, x8, #0x18
    4b38:	cmp	x8, #0x0
    4b3c:	csel	x25, xzr, x9, eq  // eq = none
    4b40:	b	4c04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4f0>
    4b44:	mov	x0, x23
    4b48:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    4b4c:	ldrb	w8, [x0]
    4b50:	tbnz	w8, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4b54:	sub	x8, x0, #0x18
    4b58:	cmp	x0, #0x0
    4b5c:	csel	x25, xzr, x8, eq  // eq = none
    4b60:	b	4c04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4f0>
    4b64:	mov	x25, xzr
    4b68:	ldr	x0, [x22, #24]
    4b6c:	cbz	x0, 5a54 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1340>
    4b70:	ldr	w1, [x22, #32]
    4b74:	mov	w2, #0x17                  	// #23
    4b78:	bl	0 <_ZN4llvm8Function15removeParamAttrEjNS_9Attribute8AttrKindE>
    4b7c:	b	4c04 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x4f0>
    4b80:	ldur	x8, [x25, #-8]
    4b84:	ldr	x25, [x8]
    4b88:	mov	w8, #0x101                 	// #257
    4b8c:	mov	w0, #0x38                  	// #56
    4b90:	mov	w1, #0x1                   	// #1
    4b94:	str	x27, [sp, #16]
    4b98:	stp	xzr, xzr, [sp, #392]
    4b9c:	strh	w8, [sp, #408]
    4ba0:	bl	0 <_ZN4llvm4UsernwEmj>
    4ba4:	add	x6, sp, #0x188
    4ba8:	mov	w1, #0x33                  	// #51
    4bac:	mov	w5, #0x1                   	// #1
    4bb0:	mov	x2, x25
    4bb4:	mov	x3, xzr
    4bb8:	mov	x4, xzr
    4bbc:	mov	x7, x23
    4bc0:	mov	x26, x0
    4bc4:	bl	0 <_ZN4llvm14FuncletPadInstC2ENS_11Instruction13FuncletPadOpsEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_10BasicBlockE>
    4bc8:	cbz	x26, 5a74 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1360>
    4bcc:	cmp	x24, #0x0
    4bd0:	mov	w8, #0x1                   	// #1
    4bd4:	cinc	w27, w8, ne  // ne = any
    4bd8:	mov	w0, #0x38                  	// #56
    4bdc:	mov	w1, w27
    4be0:	bl	0 <_ZN4llvm4UsernwEmj>
    4be4:	mov	x1, x26
    4be8:	mov	x2, x24
    4bec:	mov	w3, w27
    4bf0:	mov	x4, x23
    4bf4:	mov	x25, x0
    4bf8:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjS4_>
    4bfc:	ldr	x27, [sp, #16]
    4c00:	add	x26, sp, #0x40
    4c04:	add	x0, sp, #0x140
    4c08:	mov	x1, x25
    4c0c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c10:	ldp	x24, x23, [sp, #304]
    4c14:	mov	x0, x22
    4c18:	bl	0 <_ZNK4llvm5Value7getNameEv>
    4c1c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c20:	add	x8, x8, #0x0
    4c24:	stp	x0, x1, [sp, #64]
    4c28:	stp	x26, x8, [sp, #392]
    4c2c:	mov	w8, #0x305                 	// #773
    4c30:	add	x0, sp, #0x140
    4c34:	add	x5, sp, #0x188
    4c38:	mov	x1, x23
    4c3c:	mov	x2, x24
    4c40:	mov	w3, wzr
    4c44:	mov	w4, w21
    4c48:	strh	w8, [sp, #408]
    4c4c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c50:	mov	x23, x0
    4c54:	mov	w0, #0x40                  	// #64
    4c58:	mov	w1, #0x2                   	// #2
    4c5c:	bl	0 <_ZN4llvm4UsernwEmj>
    4c60:	mov	x1, x22
    4c64:	mov	x2, x23
    4c68:	mov	w3, wzr
    4c6c:	mov	x4, xzr
    4c70:	mov	x24, x0
    4c74:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    4c78:	mov	w8, #0x101                 	// #257
    4c7c:	add	x0, sp, #0x140
    4c80:	add	x2, sp, #0x188
    4c84:	mov	x1, x24
    4c88:	stp	xzr, xzr, [sp, #392]
    4c8c:	strh	w8, [sp, #408]
    4c90:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4c94:	mov	x24, xzr
    4c98:	mov	x8, xzr
    4c9c:	ldr	x25, [x20]
    4ca0:	ldr	x23, [x25, #40]
    4ca4:	cmp	x8, x23
    4ca8:	b.eq	4dbc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6a8>  // b.none
    4cac:	mov	x0, x23
    4cb0:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    4cb4:	ldrb	w8, [x0]
    4cb8:	tbnz	w8, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4cbc:	cmn	w21, #0x1
    4cc0:	b.eq	5834 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1120>  // b.none
    4cc4:	sub	x8, x0, #0x18
    4cc8:	cmp	x0, #0x0
    4ccc:	csel	x1, xzr, x8, eq  // eq = none
    4cd0:	add	x0, sp, #0x140
    4cd4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4cd8:	add	x0, sp, #0x70
    4cdc:	mov	w1, w21
    4ce0:	mov	x2, x22
    4ce4:	bl	6724 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    4ce8:	mov	x24, x0
    4cec:	mov	x0, x22
    4cf0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    4cf4:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4cf8:	add	x8, x8, #0x0
    4cfc:	stp	x0, x1, [sp, #64]
    4d00:	stp	x26, x8, [sp, #392]
    4d04:	mov	w8, #0x305                 	// #773
    4d08:	add	x1, sp, #0x188
    4d0c:	mov	x0, x24
    4d10:	strh	w8, [sp, #408]
    4d14:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    4d18:	cbz	x22, 57b4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10a0>
    4d1c:	ldrb	w8, [x22, #16]
    4d20:	cmp	w8, #0x37
    4d24:	b.eq	4db0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x69c>  // b.none
    4d28:	ldr	x8, [sp, #312]
    4d2c:	ldr	w9, [x8, #12]
    4d30:	cmp	w9, w21
    4d34:	b.ls	5884 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1170>  // b.plast
    4d38:	ldr	x8, [x8, #16]
    4d3c:	mov	x0, x22
    4d40:	ldr	x25, [x8, w21, uxtw #3]
    4d44:	bl	0 <_ZNK4llvm5Value7getNameEv>
    4d48:	add	x8, sp, #0x28
    4d4c:	str	x8, [sp, #64]
    4d50:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4d54:	add	x8, x8, #0x0
    4d58:	stp	x0, x1, [sp, #40]
    4d5c:	str	x8, [sp, #72]
    4d60:	mov	w8, #0x305                 	// #773
    4d64:	mov	w0, #0x40                  	// #64
    4d68:	mov	w1, #0x1                   	// #1
    4d6c:	strh	w8, [sp, #80]
    4d70:	bl	0 <_ZN4llvm4UsernwEmj>
    4d74:	mov	w8, #0x101                 	// #257
    4d78:	add	x3, sp, #0x188
    4d7c:	mov	x1, x25
    4d80:	mov	x2, x24
    4d84:	mov	x4, xzr
    4d88:	mov	x26, x0
    4d8c:	stp	xzr, xzr, [sp, #392]
    4d90:	strh	w8, [sp, #408]
    4d94:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    4d98:	add	x0, sp, #0x140
    4d9c:	add	x2, sp, #0x40
    4da0:	mov	x1, x26
    4da4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4da8:	mov	x24, x0
    4dac:	add	x26, sp, #0x40
    4db0:	ldr	x25, [x20]
    4db4:	cbnz	x25, 4dc4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x6b0>
    4db8:	b	57d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10c0>
    4dbc:	mov	x23, x8
    4dc0:	cbz	x25, 57d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10c0>
    4dc4:	ldrb	w8, [x25, #16]
    4dc8:	cmp	w8, #0x4f
    4dcc:	b.ne	4910 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1fc>  // b.any
    4dd0:	ldr	w8, [x25, #20]
    4dd4:	and	w8, w8, #0xfffffff
    4dd8:	cmp	w8, #0x1
    4ddc:	b.ne	5854 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1140>  // b.any
    4de0:	mov	x0, x25
    4de4:	mov	x1, x24
    4de8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    4dec:	mov	x0, x25
    4df0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4df4:	subs	x28, x28, #0x18
    4df8:	add	x20, x20, #0x18
    4dfc:	b.ne	492c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x218>  // b.any
    4e00:	b	4e18 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x704>
    4e04:	add	x0, sp, #0x90
    4e08:	mov	x1, xzr
    4e0c:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4e10:	ldp	w8, w9, [sp, #152]
    4e14:	b	496c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x258>
    4e18:	ldr	x8, [sp, #304]
    4e1c:	ldp	x8, x0, [x8, #32]
    4e20:	add	x9, x0, #0x28
    4e24:	cmp	x9, x8
    4e28:	b.eq	4e44 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x730>  // b.none
    4e2c:	ldrb	w9, [x8]
    4e30:	tbnz	w9, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4e34:	sub	x9, x8, #0x18
    4e38:	cmp	x8, #0x0
    4e3c:	csel	x8, xzr, x9, eq  // eq = none
    4e40:	b	4e48 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x734>
    4e44:	mov	x8, xzr
    4e48:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4e4c:	add	x9, x9, #0x0
    4e50:	mov	w20, #0x103                 	// #259
    4e54:	add	x1, x8, #0x18
    4e58:	add	x2, sp, #0x188
    4e5c:	stp	x9, xzr, [sp, #392]
    4e60:	strh	w20, [sp, #408]
    4e64:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    4e68:	ldr	x8, [x0, #48]
    4e6c:	ldrb	w9, [x8]
    4e70:	tbnz	w9, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4e74:	sub	x9, x8, #0x18
    4e78:	cmp	x8, #0x0
    4e7c:	adrp	x8, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4e80:	csel	x9, xzr, x9, eq  // eq = none
    4e84:	add	x8, x8, #0x0
    4e88:	add	x1, x9, #0x18
    4e8c:	add	x2, sp, #0x188
    4e90:	mov	x21, x0
    4e94:	stp	x8, xzr, [sp, #392]
    4e98:	strh	w20, [sp, #408]
    4e9c:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    4ea0:	str	x21, [x27, #192]
    4ea4:	ldr	x8, [x21, #48]
    4ea8:	ldrb	w9, [x8]
    4eac:	tbnz	w9, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    4eb0:	sub	x9, x8, #0x18
    4eb4:	cmp	x8, #0x0
    4eb8:	csel	x1, xzr, x9, eq  // eq = none
    4ebc:	add	x0, sp, #0x140
    4ec0:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    4ec4:	ldr	w8, [sp, #152]
    4ec8:	add	x9, sp, #0x40
    4ecc:	add	x9, x9, #0x10
    4ed0:	str	x9, [sp]
    4ed4:	str	x9, [sp, #64]
    4ed8:	str	d8, [sp, #72]
    4edc:	cbz	w8, 5630 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf1c>
    4ee0:	ldr	x24, [sp, #144]
    4ee4:	mov	w20, wzr
    4ee8:	add	x25, x24, x8, lsl #4
    4eec:	b	4efc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7e8>
    4ef0:	add	x24, x24, #0x10
    4ef4:	cmp	x24, x25
    4ef8:	b.eq	4ff0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8dc>  // b.none
    4efc:	ldr	x21, [x24]
    4f00:	str	wzr, [sp, #72]
    4f04:	mov	x0, x21
    4f08:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    4f0c:	ldr	x22, [x21, #8]
    4f10:	cbnz	x22, 4f70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x85c>
    4f14:	ldr	w8, [sp, #72]
    4f18:	cbz	w8, 4ef0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7dc>
    4f1c:	ldr	w1, [x24, #8]
    4f20:	add	x0, sp, #0x70
    4f24:	mov	x2, x21
    4f28:	bl	6724 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    4f2c:	mov	x1, x21
    4f30:	mov	x22, x0
    4f34:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    4f38:	ldr	w8, [sp, #72]
    4f3c:	cbz	w8, 4ef0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7dc>
    4f40:	ldr	x23, [sp, #64]
    4f44:	lsl	x26, x8, #3
    4f48:	ldr	x0, [x23], #8
    4f4c:	mov	x1, x21
    4f50:	mov	x2, x22
    4f54:	bl	0 <_ZN4llvm4User17replaceUsesOfWithEPNS_5ValueES2_>
    4f58:	subs	x26, x26, #0x8
    4f5c:	b.ne	4f48 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x834>  // b.any
    4f60:	b	4ef0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x7dc>
    4f64:	mov	w20, #0x1                   	// #1
    4f68:	ldr	x22, [x22, #8]
    4f6c:	cbz	x22, 4f14 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x800>
    4f70:	mov	x0, x22
    4f74:	bl	0 <_ZNK4llvm3Use7getUserEv>
    4f78:	cbz	x0, 571c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1008>
    4f7c:	ldrb	w8, [x0, #16]
    4f80:	mov	x23, x0
    4f84:	cmp	w8, #0x17
    4f88:	b.ls	573c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1028>  // b.plast
    4f8c:	add	x0, sp, #0xe0
    4f90:	mov	x1, x19
    4f94:	mov	x2, x23
    4f98:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    4f9c:	tbz	w0, #0, 4f64 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x850>
    4fa0:	ldp	w8, w9, [sp, #72]
    4fa4:	cmp	w8, w9
    4fa8:	b.cs	4fd4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x8c0>  // b.hs, b.nlast
    4fac:	ldr	x9, [sp, #64]
    4fb0:	str	x23, [x9, w8, uxtw #3]
    4fb4:	ldp	w8, w9, [sp, #72]
    4fb8:	cmp	w8, w9
    4fbc:	b.cs	575c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1048>  // b.hs, b.nlast
    4fc0:	add	w8, w8, #0x1
    4fc4:	str	w8, [sp, #72]
    4fc8:	ldr	x22, [x22, #8]
    4fcc:	cbnz	x22, 4f70 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x85c>
    4fd0:	b	4f14 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x800>
    4fd4:	ldr	x1, [sp]
    4fd8:	add	x0, sp, #0x40
    4fdc:	mov	w3, #0x8                   	// #8
    4fe0:	mov	x2, xzr
    4fe4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4fe8:	ldr	w8, [sp, #72]
    4fec:	b	4fac <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x898>
    4ff0:	tbz	w20, #0, 5630 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf1c>
    4ff4:	ldr	x8, [sp, #304]
    4ff8:	ldp	x8, x9, [x8, #32]
    4ffc:	add	x9, x9, #0x28
    5000:	cmp	x9, x8
    5004:	b.eq	5030 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x91c>  // b.none
    5008:	ldrb	w9, [x8]
    500c:	tbnz	w9, #2, 57f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x10e0>
    5010:	sub	x9, x8, #0x18
    5014:	cmp	x8, #0x0
    5018:	csel	x1, xzr, x9, eq  // eq = none
    501c:	add	x0, sp, #0x140
    5020:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5024:	ldr	w8, [sp, #152]
    5028:	cbnz	w8, 5044 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x930>
    502c:	b	5630 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf1c>
    5030:	mov	x1, xzr
    5034:	add	x0, sp, #0x140
    5038:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    503c:	ldr	w8, [sp, #152]
    5040:	cbz	w8, 5630 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf1c>
    5044:	ldr	x23, [sp, #144]
    5048:	adrp	x10, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    504c:	adrp	x11, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5050:	ldr	d8, [x10]
    5054:	ldr	d9, [x11]
    5058:	add	x9, sp, #0x188
    505c:	mov	w12, #0x3                   	// #3
    5060:	mov	w25, #0x1                   	// #1
    5064:	mov	w22, #0x18                  	// #24
    5068:	add	x28, x9, #0x8
    506c:	add	x21, x9, #0x28
    5070:	add	x20, x9, #0x110
    5074:	dup	v0.2d, x12
    5078:	add	x8, x23, x8, lsl #4
    507c:	str	q0, [sp, #16]
    5080:	str	x8, [sp, #8]
    5084:	b	509c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x988>
    5088:	ldr	x8, [sp, #8]
    508c:	add	x23, x23, #0x10
    5090:	mov	w25, #0x1                   	// #1
    5094:	cmp	x23, x8
    5098:	b.eq	5630 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf1c>  // b.none
    509c:	ldr	x24, [x23]
    50a0:	mov	x0, x24
    50a4:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    50a8:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    50ac:	add	x8, sp, #0xe0
    50b0:	str	x0, [sp, #392]
    50b4:	stp	xzr, xzr, [x28]
    50b8:	str	x21, [sp, #416]
    50bc:	str	d8, [sp, #424]
    50c0:	str	xzr, [sp, #624]
    50c4:	str	x20, [sp, #632]
    50c8:	str	x20, [sp, #640]
    50cc:	str	d9, [sp, #648]
    50d0:	str	wzr, [sp, #656]
    50d4:	str	w25, [sp, #752]
    50d8:	str	xzr, [sp, #744]
    50dc:	str	x8, [sp, #760]
    50e0:	str	x19, [sp, #768]
    50e4:	ldr	x1, [x24]
    50e8:	ldrb	w8, [x1, #8]
    50ec:	cmp	w8, #0xf
    50f0:	b.ne	58a4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1190>  // b.any
    50f4:	bl	0 <_ZNK4llvm10DataLayout12getIndexTypeEPNS_4TypeE>
    50f8:	cbz	x0, 58c4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x11b0>
    50fc:	ldrb	w8, [x0, #8]
    5100:	cmp	w8, #0xb
    5104:	b.ne	58e4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x11d0>  // b.any
    5108:	strb	w25, [sp, #736]
    510c:	ldr	w8, [x0, #8]
    5110:	lsr	w8, w8, #8
    5114:	str	w8, [sp, #48]
    5118:	cbz	w8, 5904 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x11f0>
    511c:	cmp	w8, #0x40
    5120:	b.hi	5138 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa24>  // b.pmore
    5124:	str	xzr, [sp, #40]
    5128:	ldr	w8, [sp, #752]
    512c:	cmp	w8, #0x41
    5130:	b.cs	5154 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa40>  // b.hs, b.nlast
    5134:	b	5160 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa4c>
    5138:	add	x0, sp, #0x28
    513c:	mov	x1, xzr
    5140:	mov	w2, wzr
    5144:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    5148:	ldr	w8, [sp, #752]
    514c:	cmp	w8, #0x41
    5150:	b.cc	5160 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa4c>  // b.lo, b.ul, b.last
    5154:	ldr	x0, [sp, #744]
    5158:	cbz	x0, 5160 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa4c>
    515c:	bl	0 <_ZdaPv>
    5160:	ldr	x8, [sp, #40]
    5164:	ldr	w9, [sp, #48]
    5168:	ldr	q1, [sp, #16]
    516c:	add	x0, sp, #0x188
    5170:	str	x8, [sp, #744]
    5174:	str	w9, [sp, #752]
    5178:	add	x8, sp, #0x188
    517c:	ldur	q0, [x8, #8]
    5180:	mov	x1, x24
    5184:	and	v0.16b, v0.16b, v1.16b
    5188:	stur	q0, [x8, #8]
    518c:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase12enqueueUsersERNS_11InstructionE>
    5190:	b	5198 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa84>
    5194:	tbnz	w26, #2, 53e4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xcd0>
    5198:	ldr	w9, [sp, #424]
    519c:	cbz	w9, 53e4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xcd0>
    51a0:	ldr	x8, [sp, #416]
    51a4:	madd	x10, x9, x22, x8
    51a8:	ldur	w27, [x10, #-8]
    51ac:	stur	wzr, [x10, #-8]
    51b0:	ldr	w11, [sp, #428]
    51b4:	ldp	x8, x25, [x10, #-24]
    51b8:	sub	x9, x9, #0x1
    51bc:	cmp	x9, x11
    51c0:	b.hi	575c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1048>  // b.pmore
    51c4:	str	w9, [sp, #424]
    51c8:	and	x0, x8, #0xfffffffffffffff8
    51cc:	ubfx	w9, w8, #2, #1
    51d0:	str	x0, [sp, #728]
    51d4:	strb	w9, [sp, #736]
    51d8:	tbz	w8, #2, 5208 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xaf4>
    51dc:	ldr	w8, [sp, #752]
    51e0:	cmp	w8, #0x41
    51e4:	b.cc	51fc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xae8>  // b.lo, b.ul, b.last
    51e8:	ldr	x8, [sp, #744]
    51ec:	cbz	x8, 51fc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xae8>
    51f0:	mov	x0, x8
    51f4:	bl	0 <_ZdaPv>
    51f8:	ldr	x0, [sp, #728]
    51fc:	str	w27, [sp, #752]
    5200:	mov	w27, wzr
    5204:	str	x25, [sp, #744]
    5208:	bl	0 <_ZNK4llvm3Use7getUserEv>
    520c:	cbz	x0, 571c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1008>
    5210:	ldrb	w8, [x0, #16]
    5214:	mov	x26, x0
    5218:	cmp	w8, #0x17
    521c:	b.ls	573c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1028>  // b.plast
    5220:	ldr	x0, [sp, #760]
    5224:	ldr	x2, [sp, #768]
    5228:	mov	x1, x26
    522c:	bl	0 <_ZNK4llvm13DominatorTree9dominatesEPKNS_11InstructionES3_>
    5230:	tbz	w0, #0, 527c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb68>
    5234:	ldrb	w8, [x26, #16]
    5238:	sub	w8, w8, #0x19
    523c:	cmp	w8, #0x42
    5240:	b.hi	577c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1068>  // b.pmore
    5244:	adrp	x11, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5248:	add	x11, x11, #0x0
    524c:	adr	x9, 525c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb48>
    5250:	ldrb	w10, [x11, x8]
    5254:	add	x9, x9, x10, lsl #2
    5258:	br	x9
    525c:	ldr	x8, [sp, #400]
    5260:	tst	x26, #0x7
    5264:	orr	x8, x8, #0x4
    5268:	str	x8, [sp, #400]
    526c:	b.ne	5794 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1080>  // b.any
    5270:	and	x8, x8, #0x7
    5274:	orr	x8, x8, x26
    5278:	str	x8, [sp, #400]
    527c:	ldr	x26, [sp, #400]
    5280:	cbz	x25, 5194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa80>
    5284:	cmp	w27, #0x41
    5288:	b.cc	5194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa80>  // b.lo, b.ul, b.last
    528c:	mov	x0, x25
    5290:	bl	0 <_ZdaPv>
    5294:	b	5194 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xa80>
    5298:	ldur	x8, [x26, #-24]
    529c:	cbz	x8, 52a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb94>
    52a0:	ldrb	w9, [x8, #16]
    52a4:	cbz	w9, 5370 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc5c>
    52a8:	tst	x26, #0x7
    52ac:	b.ne	5924 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1210>  // b.any
    52b0:	ldr	x9, [sp, #408]
    52b4:	and	x8, x26, #0xfffffffffffffff8
    52b8:	mov	x10, x8
    52bc:	cmp	x26, #0x7
    52c0:	bfxil	x10, x9, #0, #2
    52c4:	orr	x9, x10, #0x4
    52c8:	str	x9, [sp, #408]
    52cc:	b.ls	5944 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1230>  // b.plast
    52d0:	ldrb	w9, [x8, #16]
    52d4:	cmp	w9, #0x23
    52d8:	b.eq	52e0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xbcc>  // b.none
    52dc:	cmp	w9, #0x1d
    52e0:	ldr	x9, [sp, #400]
    52e4:	and	x9, x9, #0x3
    52e8:	orr	x8, x8, x9
    52ec:	orr	x8, x8, #0x4
    52f0:	b	5278 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb64>
    52f4:	mov	x0, x26
    52f8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    52fc:	ldr	x8, [x26, #8]
    5300:	cbz	x8, 527c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb68>
    5304:	add	x0, sp, #0x188
    5308:	mov	x1, x26
    530c:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase18adjustOffsetForGEPERNS_17GetElementPtrInstE>
    5310:	tbnz	w0, #0, 533c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc28>
    5314:	ldr	w8, [sp, #752]
    5318:	strb	wzr, [sp, #736]
    531c:	cmp	w8, #0x41
    5320:	b.cc	5330 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc1c>  // b.lo, b.ul, b.last
    5324:	ldr	x0, [sp, #744]
    5328:	cbz	x0, 5330 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc1c>
    532c:	bl	0 <_ZdaPv>
    5330:	mov	w8, #0x1                   	// #1
    5334:	str	xzr, [sp, #744]
    5338:	str	w8, [sp, #752]
    533c:	add	x0, sp, #0x188
    5340:	mov	x1, x26
    5344:	bl	0 <_ZN4llvm6detail17PtrUseVisitorBase12enqueueUsersERNS_11InstructionE>
    5348:	b	527c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb68>
    534c:	ldr	x8, [sp, #408]
    5350:	tst	x26, #0x7
    5354:	orr	x8, x8, #0x4
    5358:	str	x8, [sp, #408]
    535c:	b.ne	5794 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1080>  // b.any
    5360:	and	x8, x8, #0x7
    5364:	orr	x8, x8, x26
    5368:	str	x8, [sp, #408]
    536c:	b	527c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb68>
    5370:	ldr	w8, [x8, #36]
    5374:	cmp	w8, #0xad
    5378:	b.le	53a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xc94>
    537c:	cmp	w8, #0x104
    5380:	b.gt	53bc <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xca8>
    5384:	sub	w9, w8, #0xae
    5388:	cmp	w9, #0x4
    538c:	b.hi	53d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xcc0>  // b.pmore
    5390:	mov	w10, #0x1                   	// #1
    5394:	lsl	w9, w10, w9
    5398:	mov	w10, #0x15                  	// #21
    539c:	tst	w9, w10
    53a0:	b.ne	527c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb68>  // b.any
    53a4:	b	53d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xcc0>
    53a8:	sub	w9, w8, #0x2a
    53ac:	cmp	w9, #0x3
    53b0:	b.cc	527c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb68>  // b.lo, b.ul, b.last
    53b4:	cbz	w8, 52a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb94>
    53b8:	b	53d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xcc0>
    53bc:	cmp	w8, #0x105
    53c0:	b.eq	52a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb94>  // b.none
    53c4:	cmp	w8, #0x106
    53c8:	b.eq	52a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb94>  // b.none
    53cc:	cmp	w8, #0x107
    53d0:	b.eq	52a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb94>  // b.none
    53d4:	sub	w8, w8, #0x93
    53d8:	cmp	w8, #0x2
    53dc:	b.cc	527c <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb68>  // b.lo, b.ul, b.last
    53e0:	b	52a8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xb94>
    53e4:	ldp	x8, x9, [sp, #400]
    53e8:	orr	w10, w9, w8
    53ec:	tbnz	w10, #2, 53f8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xce4>
    53f0:	mov	w27, wzr
    53f4:	b	54d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdc4>
    53f8:	and	x10, x9, #0xfffffffffffffff8
    53fc:	and	x8, x8, #0xfffffffffffffff8
    5400:	tst	x9, #0xfffffffffffffff8
    5404:	csel	x25, x8, x10, eq  // eq = none
    5408:	mov	w27, #0x1                   	// #1
    540c:	cbz	x25, 54d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdc4>
    5410:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    5414:	ldr	x8, [x8]
    5418:	ldrb	w8, [x8]
    541c:	cbz	w8, 54d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdc4>
    5420:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5424:	add	x0, x0, #0x0
    5428:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    542c:	tbz	w0, #0, 54d4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdc0>
    5430:	bl	0 <_ZN4llvm4dbgsEv>
    5434:	ldp	x9, x8, [x0, #16]
    5438:	mov	x26, x0
    543c:	sub	x9, x9, x8
    5440:	cmp	x9, #0x2d
    5444:	b.hi	5464 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd50>  // b.pmore
    5448:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    544c:	mov	w2, #0x2e                  	// #46
    5450:	mov	x0, x26
    5454:	add	x1, x1, #0x0
    5458:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    545c:	mov	x26, x0
    5460:	b	5488 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xd74>
    5464:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5468:	add	x9, x9, #0x0
    546c:	ldur	q0, [x9, #30]
    5470:	ldp	q2, q1, [x9]
    5474:	stur	q0, [x8, #30]
    5478:	stp	q2, q1, [x8]
    547c:	ldr	x8, [x26, #24]
    5480:	add	x8, x8, #0x2e
    5484:	str	x8, [x26, #24]
    5488:	mov	x0, x25
    548c:	mov	x1, x26
    5490:	mov	w2, wzr
    5494:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    5498:	ldp	x9, x8, [x26, #16]
    549c:	cmp	x9, x8
    54a0:	b.ne	54c0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdac>  // b.any
    54a4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    54a8:	mov	w2, #0x1                   	// #1
    54ac:	mov	x0, x26
    54b0:	add	x1, x1, #0x0
    54b4:	mov	w27, #0x1                   	// #1
    54b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    54bc:	b	54d8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdc4>
    54c0:	mov	w9, #0xa                   	// #10
    54c4:	strb	w9, [x8]
    54c8:	ldr	x8, [x26, #24]
    54cc:	add	x8, x8, #0x1
    54d0:	str	x8, [x26, #24]
    54d4:	mov	w27, #0x1                   	// #1
    54d8:	ldr	w8, [sp, #752]
    54dc:	cmp	w8, #0x41
    54e0:	b.cc	54f0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xddc>  // b.lo, b.ul, b.last
    54e4:	ldr	x0, [sp, #744]
    54e8:	cbz	x0, 54f0 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xddc>
    54ec:	bl	0 <_ZdaPv>
    54f0:	ldr	x0, [sp, #640]
    54f4:	ldr	x8, [sp, #632]
    54f8:	cmp	x0, x8
    54fc:	b.eq	5504 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xdf0>  // b.none
    5500:	bl	0 <free>
    5504:	ldr	x9, [sp, #624]
    5508:	ldr	w8, [sp, #424]
    550c:	ldr	x25, [sp, #416]
    5510:	add	x9, x9, #0x1
    5514:	str	x9, [sp, #624]
    5518:	cbz	w8, 5554 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe40>
    551c:	add	x8, x8, x8, lsl #1
    5520:	lsl	x26, x8, #3
    5524:	b	5530 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe1c>
    5528:	subs	x26, x26, #0x18
    552c:	b.eq	5550 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe3c>  // b.none
    5530:	add	x8, x25, x26
    5534:	ldur	w9, [x8, #-8]
    5538:	cmp	w9, #0x41
    553c:	b.cc	5528 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe14>  // b.lo, b.ul, b.last
    5540:	ldur	x0, [x8, #-16]
    5544:	cbz	x0, 5528 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe14>
    5548:	bl	0 <_ZdaPv>
    554c:	b	5528 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe14>
    5550:	ldr	x25, [sp, #416]
    5554:	cmp	x25, x21
    5558:	b.eq	5564 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xe50>  // b.none
    555c:	mov	x0, x25
    5560:	bl	0 <free>
    5564:	cbz	w27, 5088 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x974>
    5568:	mov	x0, x24
    556c:	bl	0 <_ZNK4llvm10AllocaInst17isArrayAllocationEv>
    5570:	tbnz	w0, #0, 5964 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1250>
    5574:	ldr	w1, [x23, #8]
    5578:	add	x0, sp, #0x70
    557c:	mov	x2, x24
    5580:	bl	6724 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>
    5584:	mov	w22, #0x101                 	// #257
    5588:	stp	xzr, xzr, [sp, #40]
    558c:	strh	w22, [sp, #56]
    5590:	ldr	x8, [x24]
    5594:	ldrb	w9, [x8, #8]
    5598:	cmp	w9, #0xf
    559c:	b.ne	5974 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x1260>  // b.any
    55a0:	ldr	x8, [x8, #16]
    55a4:	mov	x25, x0
    55a8:	mov	w0, #0x40                  	// #64
    55ac:	mov	w1, #0x1                   	// #1
    55b0:	ldr	x26, [x8]
    55b4:	bl	0 <_ZN4llvm4UsernwEmj>
    55b8:	add	x3, sp, #0x188
    55bc:	mov	x1, x26
    55c0:	mov	x2, x24
    55c4:	mov	x4, xzr
    55c8:	mov	x27, x0
    55cc:	stp	xzr, xzr, [sp, #392]
    55d0:	strh	w22, [sp, #408]
    55d4:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    55d8:	add	x0, sp, #0x140
    55dc:	add	x2, sp, #0x28
    55e0:	mov	x1, x27
    55e4:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    55e8:	mov	x24, x0
    55ec:	mov	w0, #0x40                  	// #64
    55f0:	mov	w1, #0x2                   	// #2
    55f4:	bl	0 <_ZN4llvm4UsernwEmj>
    55f8:	mov	x1, x24
    55fc:	mov	x2, x25
    5600:	mov	w3, wzr
    5604:	mov	x4, xzr
    5608:	mov	x26, x0
    560c:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    5610:	add	x0, sp, #0x140
    5614:	add	x2, sp, #0x188
    5618:	mov	x1, x26
    561c:	stp	xzr, xzr, [sp, #392]
    5620:	strh	w22, [sp, #408]
    5624:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5628:	mov	w22, #0x18                  	// #24
    562c:	b	5088 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0x974>
    5630:	ldr	x0, [sp, #64]
    5634:	ldr	x8, [sp]
    5638:	ldr	x19, [sp, #304]
    563c:	cmp	x0, x8
    5640:	b.eq	5648 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf34>  // b.none
    5644:	bl	0 <free>
    5648:	ldr	x0, [sp, #144]
    564c:	add	x8, sp, #0x90
    5650:	add	x8, x8, #0x10
    5654:	cmp	x0, x8
    5658:	b.eq	5660 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf4c>  // b.none
    565c:	bl	0 <free>
    5660:	ldr	w8, [sp, #272]
    5664:	cbz	w8, 56b8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfa4>
    5668:	ldr	x9, [sp, #256]
    566c:	lsl	x22, x8, #4
    5670:	add	x21, x9, #0x8
    5674:	b	5690 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf7c>
    5678:	mov	x0, x20
    567c:	bl	0 <_ZdlPv>
    5680:	str	xzr, [x21]
    5684:	subs	x22, x22, #0x10
    5688:	add	x21, x21, #0x10
    568c:	b.eq	56b8 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfa4>  // b.none
    5690:	ldur	x8, [x21, #-8]
    5694:	orr	x8, x8, #0x8
    5698:	cmn	x8, #0x8
    569c:	b.eq	5684 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf70>  // b.none
    56a0:	ldr	x20, [x21]
    56a4:	cbz	x20, 5680 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf6c>
    56a8:	ldr	x0, [x20, #24]
    56ac:	cbz	x0, 5678 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf64>
    56b0:	bl	0 <_ZdlPv>
    56b4:	b	5678 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xf64>
    56b8:	ldr	x0, [sp, #256]
    56bc:	bl	0 <_ZdlPv>
    56c0:	ldr	x8, [sp, #248]
    56c4:	ldr	x0, [sp, #224]
    56c8:	add	x9, sp, #0xe0
    56cc:	add	x9, x9, #0x10
    56d0:	add	x8, x8, #0x1
    56d4:	cmp	x0, x9
    56d8:	str	x8, [sp, #248]
    56dc:	b.eq	56e4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfd0>  // b.none
    56e0:	bl	0 <free>
    56e4:	ldr	x1, [sp, #320]
    56e8:	cbz	x1, 56f4 <_ZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeE+0xfe0>
    56ec:	add	x0, sp, #0x140
    56f0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    56f4:	mov	x0, x19
    56f8:	add	sp, sp, #0x310
    56fc:	ldp	x20, x19, [sp, #96]
    5700:	ldp	x22, x21, [sp, #80]
    5704:	ldp	x24, x23, [sp, #64]
    5708:	ldp	x26, x25, [sp, #48]
    570c:	ldp	x28, x27, [sp, #32]
    5710:	ldp	x29, x30, [sp, #16]
    5714:	ldp	d9, d8, [sp], #112
    5718:	ret
    571c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5720:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5724:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5728:	add	x0, x0, #0x0
    572c:	add	x1, x1, #0x0
    5730:	add	x3, x3, #0x0
    5734:	mov	w2, #0x69                  	// #105
    5738:	bl	0 <__assert_fail>
    573c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5740:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5744:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5748:	add	x0, x0, #0x0
    574c:	add	x1, x1, #0x0
    5750:	add	x3, x3, #0x0
    5754:	mov	w2, #0x108                 	// #264
    5758:	bl	0 <__assert_fail>
    575c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5760:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5764:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5768:	add	x0, x0, #0x0
    576c:	add	x1, x1, #0x0
    5770:	add	x3, x3, #0x0
    5774:	mov	w2, #0x43                  	// #67
    5778:	bl	0 <__assert_fail>
    577c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5780:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5784:	add	x0, x0, #0x0
    5788:	add	x1, x1, #0x0
    578c:	mov	w2, #0x7a                  	// #122
    5790:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5794:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5798:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    579c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57a0:	add	x0, x0, #0x0
    57a4:	add	x1, x1, #0x0
    57a8:	add	x3, x3, #0x0
    57ac:	mov	w2, #0xb3                  	// #179
    57b0:	bl	0 <__assert_fail>
    57b4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57b8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57bc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57c0:	add	x0, x0, #0x0
    57c4:	add	x1, x1, #0x0
    57c8:	add	x3, x3, #0x0
    57cc:	mov	w2, #0x69                  	// #105
    57d0:	bl	0 <__assert_fail>
    57d4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57d8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57dc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57e0:	add	x0, x0, #0x0
    57e4:	add	x1, x1, #0x0
    57e8:	add	x3, x3, #0x0
    57ec:	mov	w2, #0x69                  	// #105
    57f0:	bl	0 <__assert_fail>
    57f4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57f8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    57fc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5800:	add	x0, x0, #0x0
    5804:	add	x1, x1, #0x0
    5808:	add	x3, x3, #0x0
    580c:	mov	w2, #0x8b                  	// #139
    5810:	bl	0 <__assert_fail>
    5814:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5818:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    581c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5820:	add	x0, x0, #0x0
    5824:	add	x1, x1, #0x0
    5828:	add	x3, x3, #0x0
    582c:	mov	w2, #0x133                 	// #307
    5830:	bl	0 <__assert_fail>
    5834:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5838:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    583c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5840:	add	x0, x0, #0x0
    5844:	add	x1, x1, #0x0
    5848:	add	x3, x3, #0x0
    584c:	mov	w2, #0x281                 	// #641
    5850:	bl	0 <__assert_fail>
    5854:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5858:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    585c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5860:	add	x0, x0, #0x0
    5864:	add	x1, x1, #0x0
    5868:	add	x3, x3, #0x0
    586c:	mov	w2, #0x2dd                 	// #733
    5870:	bl	0 <__assert_fail>
    5874:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5878:	add	x0, x0, #0x0
    587c:	mov	w1, #0x1                   	// #1
    5880:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    5884:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5888:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    588c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5890:	add	x0, x0, #0x0
    5894:	add	x1, x1, #0x0
    5898:	add	x3, x3, #0x0
    589c:	mov	w2, #0x160                 	// #352
    58a0:	bl	0 <__assert_fail>
    58a4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58a8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58ac:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58b0:	add	x0, x0, #0x0
    58b4:	add	x1, x1, #0x0
    58b8:	add	x3, x3, #0x0
    58bc:	mov	w2, #0xe0                  	// #224
    58c0:	bl	0 <__assert_fail>
    58c4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58c8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58cc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58d0:	add	x0, x0, #0x0
    58d4:	add	x1, x1, #0x0
    58d8:	add	x3, x3, #0x0
    58dc:	mov	w2, #0x69                  	// #105
    58e0:	bl	0 <__assert_fail>
    58e4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58e8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58ec:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    58f0:	add	x0, x0, #0x0
    58f4:	add	x1, x1, #0x0
    58f8:	add	x3, x3, #0x0
    58fc:	mov	w2, #0x108                 	// #264
    5900:	bl	0 <__assert_fail>
    5904:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5908:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    590c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5910:	add	x0, x0, #0x0
    5914:	add	x1, x1, #0x0
    5918:	add	x3, x3, #0x0
    591c:	mov	w2, #0x117                 	// #279
    5920:	bl	0 <__assert_fail>
    5924:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5928:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    592c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5930:	add	x0, x0, #0x0
    5934:	add	x1, x1, #0x0
    5938:	add	x3, x3, #0x0
    593c:	mov	w2, #0xb3                  	// #179
    5940:	bl	0 <__assert_fail>
    5944:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5948:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    594c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5950:	add	x0, x0, #0x0
    5954:	add	x1, x1, #0x0
    5958:	add	x3, x3, #0x0
    595c:	mov	w2, #0x120                 	// #288
    5960:	bl	0 <__assert_fail>
    5964:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5968:	add	x0, x0, #0x0
    596c:	mov	w1, #0x1                   	// #1
    5970:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    5974:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5978:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    597c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5980:	add	x0, x0, #0x0
    5984:	add	x1, x1, #0x0
    5988:	add	x3, x3, #0x0
    598c:	mov	w2, #0x17e                 	// #382
    5990:	bl	0 <__assert_fail>
    5994:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5998:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    599c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59a0:	add	x0, x0, #0x0
    59a4:	add	x1, x1, #0x0
    59a8:	add	x3, x3, #0x0
    59ac:	mov	w2, #0x108                 	// #264
    59b0:	bl	0 <__assert_fail>
    59b4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59b8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59bc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59c0:	add	x0, x0, #0x0
    59c4:	add	x1, x1, #0x0
    59c8:	add	x3, x3, #0x0
    59cc:	mov	w2, #0x5b                  	// #91
    59d0:	bl	0 <__assert_fail>
    59d4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59d8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59dc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59e0:	add	x0, x0, #0x0
    59e4:	add	x1, x1, #0x0
    59e8:	add	x3, x3, #0x0
    59ec:	mov	w2, #0xfa                  	// #250
    59f0:	bl	0 <__assert_fail>
    59f4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59f8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    59fc:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a00:	add	x0, x0, #0x0
    5a04:	add	x1, x1, #0x0
    5a08:	add	x3, x3, #0x0
    5a0c:	mov	w2, #0x2be                 	// #702
    5a10:	bl	0 <__assert_fail>
    5a14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a1c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a20:	add	x0, x0, #0x0
    5a24:	add	x1, x1, #0x0
    5a28:	add	x3, x3, #0x0
    5a2c:	mov	w2, #0x69                  	// #105
    5a30:	bl	0 <__assert_fail>
    5a34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a40:	add	x0, x0, #0x0
    5a44:	add	x1, x1, #0x0
    5a48:	add	x3, x3, #0x0
    5a4c:	mov	w2, #0x1126                	// #4390
    5a50:	bl	0 <__assert_fail>
    5a54:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a58:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a5c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a60:	add	x0, x0, #0x0
    5a64:	add	x1, x1, #0x0
    5a68:	add	x3, x3, #0x0
    5a6c:	mov	w2, #0x30                  	// #48
    5a70:	bl	0 <__assert_fail>
    5a74:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a78:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a7c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a80:	add	x0, x0, #0x0
    5a84:	add	x1, x1, #0x0
    5a88:	add	x3, x3, #0x0
    5a8c:	mov	w2, #0x11f6                	// #4598
    5a90:	bl	0 <__assert_fail>
    5a94:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a98:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5a9c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5aa0:	add	x0, x0, #0x0
    5aa4:	add	x1, x1, #0x0
    5aa8:	add	x3, x3, #0x0
    5aac:	mov	w2, #0x69                  	// #105
    5ab0:	bl	0 <__assert_fail>

0000000000005ab4 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE>:
    5ab4:	stp	x29, x30, [sp, #-64]!
    5ab8:	str	x23, [sp, #16]
    5abc:	stp	x22, x21, [sp, #32]
    5ac0:	stp	x20, x19, [sp, #48]
    5ac4:	mov	x29, sp
    5ac8:	mov	x20, x1
    5acc:	mov	x19, x0
    5ad0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    5ad4:	ldr	x22, [x19, #8]
    5ad8:	cbnz	x22, 5b00 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x4c>
    5adc:	mov	x0, x19
    5ae0:	bl	0 <_ZN4llvm18isAllocaPromotableEPKNS_10AllocaInstE>
    5ae4:	tbz	w0, #0, 5c1c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x168>
    5ae8:	ldp	x20, x19, [sp, #48]
    5aec:	ldp	x22, x21, [sp, #32]
    5af0:	ldr	x23, [sp, #16]
    5af4:	ldp	x29, x30, [sp], #64
    5af8:	ret
    5afc:	cbz	x22, 5adc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x28>
    5b00:	mov	x23, x22
    5b04:	mov	x21, x22
    5b08:	ldr	x22, [x23, #8]!
    5b0c:	mov	x0, x21
    5b10:	bl	0 <_ZNK4llvm3Use7getUserEv>
    5b14:	cbz	x0, 5bbc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x108>
    5b18:	ldrb	w8, [x0, #16]
    5b1c:	sub	w9, w8, #0x38
    5b20:	cmp	w9, #0x2
    5b24:	b.cc	5afc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x48>  // b.lo, b.ul, b.last
    5b28:	cmp	w8, #0x1d
    5b2c:	b.eq	5b38 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x84>  // b.none
    5b30:	cmp	w8, #0x50
    5b34:	b.ne	5bdc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x128>  // b.any
    5b38:	mov	x1, x19
    5b3c:	mov	x2, x20
    5b40:	bl	5c3c <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>
    5b44:	ldr	x8, [x21]
    5b48:	cbz	x8, 5b70 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xbc>
    5b4c:	ldp	x9, x8, [x21, #8]
    5b50:	and	x8, x8, #0xfffffffffffffffc
    5b54:	str	x9, [x8]
    5b58:	ldr	x9, [x21, #8]
    5b5c:	cbz	x9, 5b70 <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xbc>
    5b60:	ldr	x10, [x9, #16]
    5b64:	and	x10, x10, #0x3
    5b68:	orr	x8, x10, x8
    5b6c:	str	x8, [x9, #16]
    5b70:	str	x0, [x21]
    5b74:	cbz	x0, 5afc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x48>
    5b78:	ldr	x8, [x0, #8]!
    5b7c:	str	x8, [x23]
    5b80:	cbz	x8, 5b9c <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0xe8>
    5b84:	tst	x23, #0x3
    5b88:	b.ne	5bfc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x148>  // b.any
    5b8c:	ldr	x9, [x8, #16]
    5b90:	and	x9, x9, #0x3
    5b94:	orr	x9, x9, x23
    5b98:	str	x9, [x8, #16]
    5b9c:	tst	x0, #0x3
    5ba0:	b.ne	5bfc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x148>  // b.any
    5ba4:	ldr	x8, [x21, #16]
    5ba8:	and	x8, x8, #0x3
    5bac:	orr	x8, x8, x0
    5bb0:	str	x8, [x21, #16]
    5bb4:	str	x21, [x0]
    5bb8:	b	5afc <_ZL25eliminateSwiftErrorAllocaRN4llvm8FunctionEPNS_10AllocaInstERNS_4coro5ShapeE+0x48>
    5bbc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5bc0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5bc4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5bc8:	add	x0, x0, #0x0
    5bcc:	add	x1, x1, #0x0
    5bd0:	add	x3, x3, #0x0
    5bd4:	mov	w2, #0x69                  	// #105
    5bd8:	bl	0 <__assert_fail>
    5bdc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5be0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5be4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5be8:	add	x0, x0, #0x0
    5bec:	add	x1, x1, #0x0
    5bf0:	add	x3, x3, #0x0
    5bf4:	mov	w2, #0x4d8                 	// #1240
    5bf8:	bl	0 <__assert_fail>
    5bfc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c00:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c04:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c08:	add	x0, x0, #0x0
    5c0c:	add	x1, x1, #0x0
    5c10:	add	x3, x3, #0x0
    5c14:	mov	w2, #0xb3                  	// #179
    5c18:	bl	0 <__assert_fail>
    5c1c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c20:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c24:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c28:	add	x0, x0, #0x0
    5c2c:	add	x1, x1, #0x0
    5c30:	add	x3, x3, #0x0
    5c34:	mov	w2, #0x4e2                 	// #1250
    5c38:	bl	0 <__assert_fail>

0000000000005c3c <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE>:
    5c3c:	sub	sp, sp, #0xc0
    5c40:	stp	x29, x30, [sp, #128]
    5c44:	stp	x24, x23, [sp, #144]
    5c48:	stp	x22, x21, [sp, #160]
    5c4c:	stp	x20, x19, [sp, #176]
    5c50:	add	x29, sp, #0x80
    5c54:	ldr	x22, [x1, #56]
    5c58:	mov	x20, x2
    5c5c:	mov	x19, x1
    5c60:	mov	x23, x0
    5c64:	bl	0 <_ZNK4llvm5Value10getContextEv>
    5c68:	stp	x0, xzr, [sp, #56]
    5c6c:	mov	w8, #0x200                 	// #512
    5c70:	add	x0, sp, #0x20
    5c74:	mov	x1, x23
    5c78:	str	wzr, [sp, #72]
    5c7c:	strb	wzr, [sp, #78]
    5c80:	stp	xzr, xzr, [sp, #40]
    5c84:	str	xzr, [sp, #32]
    5c88:	strh	w8, [sp, #76]
    5c8c:	stp	xzr, xzr, [sp, #80]
    5c90:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5c94:	mov	w24, #0x101                 	// #257
    5c98:	mov	w0, #0x40                  	// #64
    5c9c:	mov	w1, #0x1                   	// #1
    5ca0:	stp	xzr, xzr, [sp, #8]
    5ca4:	strh	w24, [sp, #24]
    5ca8:	bl	0 <_ZN4llvm4UsernwEmj>
    5cac:	sub	x3, x29, #0x18
    5cb0:	mov	x1, x22
    5cb4:	mov	x2, x19
    5cb8:	mov	x4, xzr
    5cbc:	mov	x21, x0
    5cc0:	stp	xzr, xzr, [x29, #-24]
    5cc4:	sturh	w24, [x29, #-8]
    5cc8:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    5ccc:	add	x0, sp, #0x20
    5cd0:	add	x2, sp, #0x8
    5cd4:	mov	x1, x21
    5cd8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5cdc:	mov	x1, x0
    5ce0:	add	x0, sp, #0x20
    5ce4:	mov	x2, x20
    5ce8:	bl	5fa0 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>
    5cec:	cbz	x23, 5e80 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x244>
    5cf0:	ldrb	w8, [x23, #16]
    5cf4:	mov	x21, x0
    5cf8:	cmp	w8, #0x1d
    5cfc:	b.eq	5d30 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0xf4>  // b.none
    5d00:	cmp	w8, #0x50
    5d04:	b.ne	5ea0 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x264>  // b.any
    5d08:	ldp	x8, x9, [x23, #32]
    5d0c:	add	x9, x9, #0x28
    5d10:	cmp	x9, x8
    5d14:	b.eq	5d50 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x114>  // b.none
    5d18:	ldrb	w9, [x8]
    5d1c:	tbnz	w9, #2, 5f80 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x344>
    5d20:	sub	x9, x8, #0x18
    5d24:	cmp	x8, #0x0
    5d28:	csel	x1, xzr, x9, eq  // eq = none
    5d2c:	b	5d54 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x118>
    5d30:	ldur	x0, [x23, #-72]
    5d34:	cbz	x0, 5f40 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x304>
    5d38:	ldrb	w8, [x0, #16]
    5d3c:	cmp	w8, #0x12
    5d40:	b.ne	5f60 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x324>  // b.any
    5d44:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
    5d48:	mov	x1, x0
    5d4c:	b	5d54 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x118>
    5d50:	mov	x1, xzr
    5d54:	add	x0, sp, #0x20
    5d58:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5d5c:	mov	x0, x22
    5d60:	mov	x1, xzr
    5d64:	mov	x2, xzr
    5d68:	mov	w3, wzr
    5d6c:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    5d70:	mov	w1, wzr
    5d74:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5d78:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    5d7c:	mov	w8, #0x101                 	// #257
    5d80:	stp	xzr, xzr, [x29, #-24]
    5d84:	sturh	w8, [x29, #-8]
    5d88:	ldr	x8, [x0]
    5d8c:	ldrb	w9, [x8, #8]
    5d90:	cmp	w9, #0xf
    5d94:	b.ne	5ec0 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x284>  // b.any
    5d98:	ldr	x8, [x8, #16]
    5d9c:	ldr	x1, [x8]
    5da0:	cbz	x1, 5ee0 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x2a4>
    5da4:	ldrb	w8, [x1, #8]
    5da8:	cmp	w8, #0xc
    5dac:	b.ne	5f00 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x2c4>  // b.any
    5db0:	mov	x2, x0
    5db4:	add	x0, sp, #0x20
    5db8:	sub	x5, x29, #0x18
    5dbc:	mov	x3, xzr
    5dc0:	mov	x4, xzr
    5dc4:	mov	x6, xzr
    5dc8:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5dcc:	ldp	w8, w9, [x20, #144]
    5dd0:	mov	x22, x0
    5dd4:	cmp	w8, w9
    5dd8:	b.cs	5e64 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x228>  // b.hs, b.nlast
    5ddc:	ldr	x9, [x20, #136]
    5de0:	str	x22, [x9, w8, uxtw #3]
    5de4:	ldp	w8, w9, [x20, #144]
    5de8:	cmp	w8, w9
    5dec:	b.cs	5f20 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x2e4>  // b.hs, b.nlast
    5df0:	add	w8, w8, #0x1
    5df4:	mov	w0, #0x40                  	// #64
    5df8:	mov	w1, #0x2                   	// #2
    5dfc:	str	w8, [x20, #144]
    5e00:	bl	0 <_ZN4llvm4UsernwEmj>
    5e04:	mov	x1, x22
    5e08:	mov	x2, x19
    5e0c:	mov	w3, wzr
    5e10:	mov	x4, xzr
    5e14:	mov	x20, x0
    5e18:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    5e1c:	mov	w8, #0x101                 	// #257
    5e20:	add	x0, sp, #0x20
    5e24:	sub	x2, x29, #0x18
    5e28:	mov	x1, x20
    5e2c:	stp	xzr, xzr, [x29, #-24]
    5e30:	sturh	w8, [x29, #-8]
    5e34:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5e38:	ldr	x1, [sp, #32]
    5e3c:	cbz	x1, 5e48 <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x20c>
    5e40:	add	x0, sp, #0x20
    5e44:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    5e48:	mov	x0, x21
    5e4c:	ldp	x20, x19, [sp, #176]
    5e50:	ldp	x22, x21, [sp, #160]
    5e54:	ldp	x24, x23, [sp, #144]
    5e58:	ldp	x29, x30, [sp, #128]
    5e5c:	add	sp, sp, #0xc0
    5e60:	ret
    5e64:	add	x0, x20, #0x88
    5e68:	add	x1, x0, #0x10
    5e6c:	mov	w3, #0x8                   	// #8
    5e70:	mov	x2, xzr
    5e74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5e78:	ldr	w8, [x20, #144]
    5e7c:	b	5ddc <_ZL34emitSetAndGetSwiftErrorValueAroundPN4llvm11InstructionEPNS_10AllocaInstERNS_4coro5ShapeE+0x1a0>
    5e80:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5e84:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5e88:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5e8c:	add	x0, x0, #0x0
    5e90:	add	x1, x1, #0x0
    5e94:	add	x3, x3, #0x0
    5e98:	mov	w2, #0x69                  	// #105
    5e9c:	bl	0 <__assert_fail>
    5ea0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ea4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ea8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5eac:	add	x0, x0, #0x0
    5eb0:	add	x1, x1, #0x0
    5eb4:	add	x3, x3, #0x0
    5eb8:	mov	w2, #0x108                 	// #264
    5ebc:	bl	0 <__assert_fail>
    5ec0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ec4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ec8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ecc:	add	x0, x0, #0x0
    5ed0:	add	x1, x1, #0x0
    5ed4:	add	x3, x3, #0x0
    5ed8:	mov	w2, #0x17e                 	// #382
    5edc:	bl	0 <__assert_fail>
    5ee0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ee4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5ee8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5eec:	add	x0, x0, #0x0
    5ef0:	add	x1, x1, #0x0
    5ef4:	add	x3, x3, #0x0
    5ef8:	mov	w2, #0x69                  	// #105
    5efc:	bl	0 <__assert_fail>
    5f00:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f04:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f08:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f0c:	add	x0, x0, #0x0
    5f10:	add	x1, x1, #0x0
    5f14:	add	x3, x3, #0x0
    5f18:	mov	w2, #0x108                 	// #264
    5f1c:	bl	0 <__assert_fail>
    5f20:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f24:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f28:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f2c:	add	x0, x0, #0x0
    5f30:	add	x1, x1, #0x0
    5f34:	add	x3, x3, #0x0
    5f38:	mov	w2, #0x43                  	// #67
    5f3c:	bl	0 <__assert_fail>
    5f40:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f44:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f48:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f4c:	add	x0, x0, #0x0
    5f50:	add	x1, x1, #0x0
    5f54:	add	x3, x3, #0x0
    5f58:	mov	w2, #0x5b                  	// #91
    5f5c:	bl	0 <__assert_fail>
    5f60:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f64:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f68:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f6c:	add	x0, x0, #0x0
    5f70:	add	x1, x1, #0x0
    5f74:	add	x3, x3, #0x0
    5f78:	mov	w2, #0xfa                  	// #250
    5f7c:	bl	0 <__assert_fail>
    5f80:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f84:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f88:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    5f8c:	add	x0, x0, #0x0
    5f90:	add	x1, x1, #0x0
    5f94:	add	x3, x3, #0x0
    5f98:	mov	w2, #0x8b                  	// #139
    5f9c:	bl	0 <__assert_fail>

0000000000005fa0 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE>:
    5fa0:	sub	sp, sp, #0x50
    5fa4:	stp	x29, x30, [sp, #32]
    5fa8:	str	x21, [sp, #48]
    5fac:	stp	x20, x19, [sp, #64]
    5fb0:	add	x29, sp, #0x20
    5fb4:	ldr	x8, [x1]
    5fb8:	mov	x21, x1
    5fbc:	mov	x20, x0
    5fc0:	mov	w1, wzr
    5fc4:	mov	x0, x8
    5fc8:	mov	x19, x2
    5fcc:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5fd0:	ldr	x8, [x21]
    5fd4:	add	x1, sp, #0x8
    5fd8:	mov	w2, #0x1                   	// #1
    5fdc:	mov	w3, wzr
    5fe0:	str	x8, [sp, #8]
    5fe4:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
    5fe8:	mov	w1, wzr
    5fec:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5ff0:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    5ff4:	mov	w8, #0x101                 	// #257
    5ff8:	str	x21, [x29, #24]
    5ffc:	stp	xzr, xzr, [sp, #8]
    6000:	strh	w8, [sp, #24]
    6004:	ldr	x8, [x0]
    6008:	ldrb	w9, [x8, #8]
    600c:	cmp	w9, #0xf
    6010:	b.ne	60a8 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x108>  // b.any
    6014:	ldr	x8, [x8, #16]
    6018:	ldr	x1, [x8]
    601c:	cbz	x1, 60c8 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x128>
    6020:	ldrb	w8, [x1, #8]
    6024:	cmp	w8, #0xc
    6028:	b.ne	60e8 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x148>  // b.any
    602c:	mov	x2, x0
    6030:	add	x3, x29, #0x18
    6034:	add	x5, sp, #0x8
    6038:	mov	w4, #0x1                   	// #1
    603c:	mov	x0, x20
    6040:	mov	x6, xzr
    6044:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6048:	ldp	w8, w9, [x19, #144]
    604c:	mov	x20, x0
    6050:	cmp	w8, w9
    6054:	b.cs	608c <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0xec>  // b.hs, b.nlast
    6058:	ldr	x9, [x19, #136]
    605c:	str	x20, [x9, w8, uxtw #3]
    6060:	ldp	w8, w9, [x19, #144]
    6064:	cmp	w8, w9
    6068:	b.cs	6108 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0x168>  // b.hs, b.nlast
    606c:	add	w8, w8, #0x1
    6070:	str	w8, [x19, #144]
    6074:	mov	x0, x20
    6078:	ldp	x20, x19, [sp, #64]
    607c:	ldr	x21, [sp, #48]
    6080:	ldp	x29, x30, [sp, #32]
    6084:	add	sp, sp, #0x50
    6088:	ret
    608c:	add	x0, x19, #0x88
    6090:	add	x1, x0, #0x10
    6094:	mov	w3, #0x8                   	// #8
    6098:	mov	x2, xzr
    609c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    60a0:	ldr	w8, [x19, #144]
    60a4:	b	6058 <_ZL22emitSetSwiftErrorValueRN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueERNS_4coro5ShapeE+0xb8>
    60a8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60ac:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60b0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60b4:	add	x0, x0, #0x0
    60b8:	add	x1, x1, #0x0
    60bc:	add	x3, x3, #0x0
    60c0:	mov	w2, #0x17e                 	// #382
    60c4:	bl	0 <__assert_fail>
    60c8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60cc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60d0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60d4:	add	x0, x0, #0x0
    60d8:	add	x1, x1, #0x0
    60dc:	add	x3, x3, #0x0
    60e0:	mov	w2, #0x69                  	// #105
    60e4:	bl	0 <__assert_fail>
    60e8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60ec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60f0:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    60f4:	add	x0, x0, #0x0
    60f8:	add	x1, x1, #0x0
    60fc:	add	x3, x3, #0x0
    6100:	mov	w2, #0x108                 	// #264
    6104:	bl	0 <__assert_fail>
    6108:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    610c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6110:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6114:	add	x0, x0, #0x0
    6118:	add	x1, x1, #0x0
    611c:	add	x3, x3, #0x0
    6120:	mov	w2, #0x43                  	// #67
    6124:	bl	0 <__assert_fail>

0000000000006128 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE>:
    6128:	stp	x29, x30, [sp, #-64]!
    612c:	stp	x24, x23, [sp, #16]
    6130:	stp	x22, x21, [sp, #32]
    6134:	stp	x20, x19, [sp, #48]
    6138:	mov	x29, sp
    613c:	cbz	x2, 657c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x454>
    6140:	ldrb	w8, [x2, #16]
    6144:	cmp	w8, #0x17
    6148:	b.ls	659c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x474>  // b.plast
    614c:	mov	x19, x1
    6150:	mov	x21, x0
    6154:	cmp	w8, #0x4f
    6158:	b.ne	6170 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x48>  // b.any
    615c:	ldr	w8, [x2, #20]
    6160:	tst	w8, #0xffffffe
    6164:	b.eq	61d0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xa8>  // b.none
    6168:	mov	w21, wzr
    616c:	b	6504 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>
    6170:	ldr	x20, [x2, #40]
    6174:	cmp	w8, #0x50
    6178:	b.ne	61d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>  // b.any
    617c:	ldur	x8, [x2, #-24]
    6180:	cbz	x8, 61d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    6184:	ldrb	w9, [x8, #16]
    6188:	cbnz	w9, 61d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    618c:	ldrb	w9, [x8, #33]
    6190:	tbz	w9, #5, 61d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    6194:	ldr	w8, [x8, #36]
    6198:	cmp	w8, #0x24
    619c:	b.ne	61d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>  // b.any
    61a0:	mov	x0, x20
    61a4:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
    61a8:	mov	x20, x0
    61ac:	cbnz	x0, 61d4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xac>
    61b0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    61b4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    61b8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    61bc:	add	x0, x0, #0x0
    61c0:	add	x1, x1, #0x0
    61c4:	add	x3, x3, #0x0
    61c8:	mov	w2, #0x83                  	// #131
    61cc:	bl	0 <__assert_fail>
    61d0:	ldr	x20, [x2, #40]
    61d4:	ldr	w10, [x21, #8]
    61d8:	ldr	x8, [x21]
    61dc:	cbz	w10, 6224 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xfc>
    61e0:	mov	x9, x8
    61e4:	mov	x11, x10
    61e8:	lsr	x12, x11, #1
    61ec:	add	x13, x9, x12, lsl #3
    61f0:	ldr	x14, [x13], #8
    61f4:	mvn	x15, x12
    61f8:	add	x11, x11, x15
    61fc:	cmp	x14, x19
    6200:	csel	x11, x11, x12, cc  // cc = lo, ul, last
    6204:	csel	x9, x13, x9, cc  // cc = lo, ul, last
    6208:	cmp	x11, #0x0
    620c:	b.gt	61e8 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0xc0>
    6210:	mov	x11, x10
    6214:	add	x11, x8, x11, lsl #3
    6218:	cmp	x9, x11
    621c:	b.ne	6238 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x110>  // b.any
    6220:	b	651c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3f4>
    6224:	mov	x11, xzr
    6228:	mov	x9, x8
    622c:	add	x11, x8, x11, lsl #3
    6230:	cmp	x9, x11
    6234:	b.eq	651c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3f4>  // b.none
    6238:	ldr	x11, [x9]
    623c:	cmp	x11, x19
    6240:	b.ne	651c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3f4>  // b.any
    6244:	cbz	w10, 6288 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x160>
    6248:	mov	x11, x8
    624c:	mov	x12, x10
    6250:	lsr	x13, x12, #1
    6254:	add	x14, x11, x13, lsl #3
    6258:	ldr	x15, [x14], #8
    625c:	mvn	x16, x13
    6260:	add	x12, x12, x16
    6264:	cmp	x15, x20
    6268:	csel	x12, x12, x13, cc  // cc = lo, ul, last
    626c:	csel	x11, x14, x11, cc  // cc = lo, ul, last
    6270:	cmp	x12, #0x0
    6274:	b.gt	6250 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x128>
    6278:	add	x10, x8, x10, lsl #3
    627c:	cmp	x11, x10
    6280:	b.ne	629c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x174>  // b.any
    6284:	b	651c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3f4>
    6288:	mov	x10, xzr
    628c:	mov	x11, x8
    6290:	add	x10, x8, x10, lsl #3
    6294:	cmp	x11, x10
    6298:	b.eq	651c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3f4>  // b.none
    629c:	ldr	x10, [x11]
    62a0:	cmp	x10, x20
    62a4:	b.ne	651c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3f4>  // b.any
    62a8:	ldr	w12, [x21, #280]
    62ac:	sub	x10, x11, x8
    62b0:	asr	x10, x10, #3
    62b4:	cmp	x10, x12
    62b8:	b.cs	65bc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x494>  // b.hs, b.nlast
    62bc:	ldr	x11, [x21, #272]
    62c0:	mov	w12, #0x38                  	// #56
    62c4:	sub	x8, x9, x8
    62c8:	lsr	x9, x8, #3
    62cc:	madd	x12, x10, x12, x11
    62d0:	ldr	w12, [x12, #16]
    62d4:	cmp	w12, w9
    62d8:	b.ls	653c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x414>  // b.plast
    62dc:	mov	w12, #0x38                  	// #56
    62e0:	madd	x12, x10, x12, x11
    62e4:	ldr	x12, [x12, #8]
    62e8:	ubfx	x8, x8, #9, #26
    62ec:	cmp	x12, x8
    62f0:	b.ls	655c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x434>  // b.plast
    62f4:	mov	w12, #0x38                  	// #56
    62f8:	mul	x12, x10, x12
    62fc:	ldr	x12, [x11, x12]
    6300:	mov	w13, #0x1                   	// #1
    6304:	lsl	x23, x13, x9
    6308:	ldr	x12, [x12, x8, lsl #3]
    630c:	tst	x12, x23
    6310:	b.eq	65dc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x4b4>  // b.none
    6314:	mov	w12, #0x38                  	// #56
    6318:	madd	x12, x10, x12, x11
    631c:	ldr	w12, [x12, #40]
    6320:	cmp	w12, w9
    6324:	b.ls	653c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x414>  // b.plast
    6328:	mov	w9, #0x38                  	// #56
    632c:	madd	x9, x10, x9, x11
    6330:	ldr	x9, [x9, #32]
    6334:	cmp	x9, x8
    6338:	b.ls	655c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x434>  // b.plast
    633c:	mov	w9, #0x38                  	// #56
    6340:	madd	x9, x10, x9, x11
    6344:	ldr	x9, [x9, #24]
    6348:	ldr	x24, [x9, x8, lsl #3]
    634c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    6350:	ldr	x8, [x8]
    6354:	tst	x24, x23
    6358:	cset	w21, ne  // ne = any
    635c:	ldrb	w8, [x8]
    6360:	cbz	w8, 6504 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>
    6364:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6368:	add	x0, x0, #0x0
    636c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    6370:	tbz	w0, #0, 6504 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>
    6374:	bl	0 <_ZN4llvm4dbgsEv>
    6378:	mov	x22, x0
    637c:	mov	x0, x20
    6380:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6384:	ldp	x9, x8, [x22, #16]
    6388:	mov	x20, x1
    638c:	sub	x9, x9, x8
    6390:	cmp	x1, x9
    6394:	mov	x1, x0
    6398:	b.ls	63b4 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x28c>  // b.plast
    639c:	mov	x0, x22
    63a0:	mov	x2, x20
    63a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    63a8:	ldr	x8, [x0, #24]
    63ac:	mov	x22, x0
    63b0:	b	63d0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2a8>
    63b4:	cbz	x20, 63d0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2a8>
    63b8:	mov	x0, x8
    63bc:	mov	x2, x20
    63c0:	bl	0 <memcpy>
    63c4:	ldr	x8, [x22, #24]
    63c8:	add	x8, x8, x20
    63cc:	str	x8, [x22, #24]
    63d0:	ldr	x9, [x22, #16]
    63d4:	sub	x9, x9, x8
    63d8:	cmp	x9, #0x3
    63dc:	b.hi	63fc <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2d4>  // b.pmore
    63e0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    63e4:	add	x1, x1, #0x0
    63e8:	mov	w2, #0x4                   	// #4
    63ec:	mov	x0, x22
    63f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    63f4:	mov	x22, x0
    63f8:	b	6414 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x2ec>
    63fc:	mov	w9, #0x3d20                	// #15648
    6400:	movk	w9, #0x203e, lsl #16
    6404:	str	w9, [x8]
    6408:	ldr	x8, [x22, #24]
    640c:	add	x8, x8, #0x4
    6410:	str	x8, [x22, #24]
    6414:	mov	x0, x19
    6418:	bl	0 <_ZNK4llvm5Value7getNameEv>
    641c:	ldp	x9, x8, [x22, #16]
    6420:	mov	x19, x1
    6424:	sub	x9, x9, x8
    6428:	cmp	x1, x9
    642c:	mov	x1, x0
    6430:	b.ls	644c <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x324>  // b.plast
    6434:	mov	x0, x22
    6438:	mov	x2, x19
    643c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6440:	ldr	x8, [x0, #24]
    6444:	mov	x22, x0
    6448:	b	6468 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x340>
    644c:	cbz	x19, 6468 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x340>
    6450:	mov	x0, x8
    6454:	mov	x2, x19
    6458:	bl	0 <memcpy>
    645c:	ldr	x8, [x22, #24]
    6460:	add	x8, x8, x19
    6464:	str	x8, [x22, #24]
    6468:	ldr	x9, [x22, #16]
    646c:	and	x19, x24, x23
    6470:	sub	x9, x9, x8
    6474:	cmp	x9, #0xa
    6478:	b.hi	6498 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x370>  // b.pmore
    647c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6480:	add	x1, x1, #0x0
    6484:	mov	w2, #0xb                   	// #11
    6488:	mov	x0, x22
    648c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    6490:	mov	x22, x0
    6494:	b	64c0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x398>
    6498:	adrp	x9, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    649c:	add	x9, x9, #0x0
    64a0:	ldr	x9, [x9]
    64a4:	mov	w10, #0x6920                	// #26912
    64a8:	movk	w10, #0x2073, lsl #16
    64ac:	stur	w10, [x8, #7]
    64b0:	str	x9, [x8]
    64b4:	ldr	x8, [x22, #24]
    64b8:	add	x8, x8, #0xb
    64bc:	str	x8, [x22, #24]
    64c0:	cmp	x19, #0x0
    64c4:	cset	w1, ne  // ne = any
    64c8:	mov	x0, x22
    64cc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    64d0:	ldp	x9, x8, [x0, #16]
    64d4:	cmp	x9, x8
    64d8:	b.ne	64f0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3c8>  // b.any
    64dc:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    64e0:	add	x1, x1, #0x0
    64e4:	mov	w2, #0x1                   	// #1
    64e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    64ec:	b	6504 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo25isDefinitionAcrossSuspendEPN4llvm10BasicBlockEPNS1_4UserE+0x3dc>
    64f0:	mov	w9, #0xa                   	// #10
    64f4:	strb	w9, [x8]
    64f8:	ldr	x8, [x0, #24]
    64fc:	add	x8, x8, #0x1
    6500:	str	x8, [x0, #24]
    6504:	mov	w0, w21
    6508:	ldp	x20, x19, [sp, #48]
    650c:	ldp	x22, x21, [sp, #32]
    6510:	ldp	x24, x23, [sp, #16]
    6514:	ldp	x29, x30, [sp], #64
    6518:	ret
    651c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6520:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6524:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6528:	add	x0, x0, #0x0
    652c:	add	x1, x1, #0x0
    6530:	add	x3, x3, #0x0
    6534:	mov	w2, #0x3a                  	// #58
    6538:	bl	0 <__assert_fail>
    653c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6540:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6544:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6548:	add	x0, x0, #0x0
    654c:	add	x1, x1, #0x0
    6550:	add	x3, x3, #0x0
    6554:	mov	w2, #0x1f0                 	// #496
    6558:	bl	0 <__assert_fail>
    655c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6560:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6564:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6568:	add	x0, x0, #0x0
    656c:	add	x1, x1, #0x0
    6570:	add	x3, x3, #0x0
    6574:	mov	w2, #0x1ab                 	// #427
    6578:	bl	0 <__assert_fail>
    657c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6580:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6584:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6588:	add	x0, x0, #0x0
    658c:	add	x1, x1, #0x0
    6590:	add	x3, x3, #0x0
    6594:	mov	w2, #0x69                  	// #105
    6598:	bl	0 <__assert_fail>
    659c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65a0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65a4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65a8:	add	x0, x0, #0x0
    65ac:	add	x1, x1, #0x0
    65b0:	add	x3, x3, #0x0
    65b4:	mov	w2, #0x108                 	// #264
    65b8:	bl	0 <__assert_fail>
    65bc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65c0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65c4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65c8:	add	x0, x0, #0x0
    65cc:	add	x1, x1, #0x0
    65d0:	add	x3, x3, #0x0
    65d4:	mov	w2, #0x99                  	// #153
    65d8:	bl	0 <__assert_fail>
    65dc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65e0:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65e4:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    65e8:	add	x0, x0, #0x0
    65ec:	add	x1, x1, #0x0
    65f0:	add	x3, x3, #0x0
    65f4:	mov	w2, #0x6c                  	// #108
    65f8:	bl	0 <__assert_fail>

00000000000065fc <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>:
    65fc:	sub	sp, sp, #0x60
    6600:	stp	x29, x30, [sp, #48]
    6604:	stp	x22, x21, [sp, #64]
    6608:	stp	x20, x19, [sp, #80]
    660c:	add	x29, sp, #0x30
    6610:	mov	x20, x0
    6614:	mov	x19, x1
    6618:	add	x8, sp, #0x8
    661c:	mov	x0, x1
    6620:	mov	x1, x20
    6624:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6628:	ldrb	w8, [sp, #40]
    662c:	cbz	w8, 66cc <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xd0>
    6630:	ldr	x8, [x20, #48]
    6634:	ldrb	w9, [x8]
    6638:	tbnz	w9, #2, 6704 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x108>
    663c:	ldurb	w9, [x8, #-8]
    6640:	cmp	w9, #0x50
    6644:	b.ne	6678 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x7c>  // b.any
    6648:	ldur	x8, [x8, #-48]
    664c:	cbz	x8, 6678 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x7c>
    6650:	ldrb	w9, [x8, #16]
    6654:	cbnz	w9, 6678 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x7c>
    6658:	ldrb	w9, [x8, #33]
    665c:	tbz	w9, #5, 6678 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x7c>
    6660:	ldr	w8, [x8, #36]
    6664:	sub	w8, w8, #0x23
    6668:	cmp	w8, #0x2
    666c:	b.cs	6678 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x7c>  // b.hs, b.nlast
    6670:	mov	w0, #0x1                   	// #1
    6674:	b	66d0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xd4>
    6678:	mov	x0, x20
    667c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    6680:	cbz	x0, 66d0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xd4>
    6684:	mov	x20, x0
    6688:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    668c:	cbz	w0, 66d0 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xd4>
    6690:	mov	x21, xzr
    6694:	mov	w22, w0
    6698:	mov	x0, x20
    669c:	mov	w1, w21
    66a0:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    66a4:	mov	x1, x19
    66a8:	bl	65fc <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE>
    66ac:	tbnz	w0, #0, 6670 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x74>
    66b0:	mov	x0, x20
    66b4:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    66b8:	cmp	x21, w0, sxtw
    66bc:	b.ge	66e4 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0xe8>  // b.tcont
    66c0:	add	x21, x21, #0x1
    66c4:	cmp	x22, x21
    66c8:	b.ne	6698 <_ZL22isSuspendReachableFromPN4llvm10BasicBlockERNS_11SmallPtrSetIS1_Lj8EEE+0x9c>  // b.any
    66cc:	mov	w0, wzr
    66d0:	ldp	x20, x19, [sp, #80]
    66d4:	ldp	x22, x21, [sp, #64]
    66d8:	ldp	x29, x30, [sp, #48]
    66dc:	add	sp, sp, #0x60
    66e0:	ret
    66e4:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    66e8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    66ec:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    66f0:	add	x0, x0, #0x0
    66f4:	add	x1, x1, #0x0
    66f8:	add	x3, x3, #0x0
    66fc:	mov	w2, #0xda                  	// #218
    6700:	bl	0 <__assert_fail>
    6704:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6708:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    670c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6710:	add	x0, x0, #0x0
    6714:	add	x1, x1, #0x0
    6718:	add	x3, x3, #0x0
    671c:	mov	w2, #0x8b                  	// #139
    6720:	bl	0 <__assert_fail>

0000000000006724 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE>:
    6724:	sub	sp, sp, #0x70
    6728:	stp	x29, x30, [sp, #64]
    672c:	stp	x22, x21, [sp, #80]
    6730:	stp	x20, x19, [sp, #96]
    6734:	add	x29, sp, #0x40
    6738:	mov	x19, x0
    673c:	ldr	x0, [x0]
    6740:	mov	x21, x2
    6744:	mov	w20, w1
    6748:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    674c:	mov	x1, xzr
    6750:	mov	w2, wzr
    6754:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    6758:	str	x0, [sp]
    675c:	ldr	x0, [x19]
    6760:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    6764:	mov	w1, w20
    6768:	mov	w2, wzr
    676c:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    6770:	str	x0, [sp, #8]
    6774:	ldr	q0, [sp]
    6778:	add	x8, sp, #0x18
    677c:	mov	x9, #0x2                   	// #2
    6780:	movk	x9, #0x3, lsl #32
    6784:	add	x20, x8, #0x10
    6788:	stur	q0, [sp, #40]
    678c:	stp	x20, x9, [sp, #24]
    6790:	cbz	x21, 68b0 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x18c>
    6794:	ldrb	w8, [x21, #16]
    6798:	cmp	w8, #0x37
    679c:	b.ne	6830 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x10c>  // b.any
    67a0:	ldur	x8, [x21, #-24]
    67a4:	cbz	x8, 68d0 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1ac>
    67a8:	ldrb	w9, [x8, #16]
    67ac:	cmp	w9, #0xd
    67b0:	b.ne	68f0 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1cc>  // b.any
    67b4:	ldr	w22, [x8, #32]
    67b8:	add	x21, x8, #0x18
    67bc:	cmp	w22, #0x40
    67c0:	b.ls	67dc <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0xb8>  // b.plast
    67c4:	mov	x0, x21
    67c8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    67cc:	sub	w8, w22, w0
    67d0:	cmp	w8, #0x41
    67d4:	b.cs	6900 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1dc>  // b.hs, b.nlast
    67d8:	ldr	x21, [x21]
    67dc:	ldr	x8, [x21]
    67e0:	cmp	x8, #0x2
    67e4:	b.cc	6830 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x10c>  // b.lo, b.ul, b.last
    67e8:	ldr	x0, [x19]
    67ec:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
    67f0:	mov	x1, xzr
    67f4:	mov	w2, wzr
    67f8:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    67fc:	ldp	w8, w9, [sp, #32]
    6800:	mov	x21, x0
    6804:	cmp	w8, w9
    6808:	b.cs	6894 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x170>  // b.hs, b.nlast
    680c:	ldr	x9, [sp, #24]
    6810:	str	x21, [x9, w8, uxtw #3]
    6814:	ldp	w8, w9, [sp, #32]
    6818:	cmp	w8, w9
    681c:	b.cs	6920 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x1fc>  // b.hs, b.nlast
    6820:	ldr	x20, [sp, #24]
    6824:	add	x4, x8, #0x1
    6828:	str	w4, [sp, #32]
    682c:	b	6834 <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x110>
    6830:	mov	w4, #0x2                   	// #2
    6834:	ldp	x8, x9, [x19, #16]
    6838:	ldr	x0, [x19, #8]
    683c:	mov	x5, sp
    6840:	mov	x3, x20
    6844:	ldr	x1, [x8]
    6848:	ldr	x2, [x9]
    684c:	mov	w8, #0x101                 	// #257
    6850:	stp	xzr, xzr, [sp]
    6854:	strh	w8, [sp, #16]
    6858:	bl	0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    685c:	ldr	x8, [sp, #24]
    6860:	add	x9, sp, #0x18
    6864:	add	x9, x9, #0x10
    6868:	mov	x19, x0
    686c:	cmp	x8, x9
    6870:	b.eq	687c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0x158>  // b.none
    6874:	mov	x0, x8
    6878:	bl	0 <free>
    687c:	mov	x0, x19
    6880:	ldp	x20, x19, [sp, #96]
    6884:	ldp	x22, x21, [sp, #80]
    6888:	ldp	x29, x30, [sp, #64]
    688c:	add	sp, sp, #0x70
    6890:	ret
    6894:	add	x0, sp, #0x18
    6898:	mov	w3, #0x8                   	// #8
    689c:	mov	x1, x20
    68a0:	mov	x2, xzr
    68a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    68a8:	ldr	w8, [sp, #32]
    68ac:	b	680c <_ZZL12insertSpillsRKN4llvm11SmallVectorIN12_GLOBAL__N_15SpillELj8EEERNS_4coro5ShapeEENK3$_1clEjPNS_5ValueE+0xe8>
    68b0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    68b4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    68b8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    68bc:	add	x0, x0, #0x0
    68c0:	add	x1, x1, #0x0
    68c4:	add	x3, x3, #0x0
    68c8:	mov	w2, #0x69                  	// #105
    68cc:	bl	0 <__assert_fail>
    68d0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    68d4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    68d8:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    68dc:	add	x0, x0, #0x0
    68e0:	add	x1, x1, #0x0
    68e4:	add	x3, x3, #0x0
    68e8:	mov	w2, #0x69                  	// #105
    68ec:	bl	0 <__assert_fail>
    68f0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    68f4:	add	x0, x0, #0x0
    68f8:	mov	w1, #0x1                   	// #1
    68fc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    6900:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6904:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6908:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    690c:	add	x0, x0, #0x0
    6910:	add	x1, x1, #0x0
    6914:	add	x3, x3, #0x0
    6918:	mov	w2, #0x657                 	// #1623
    691c:	bl	0 <__assert_fail>
    6920:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6924:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6928:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    692c:	add	x0, x0, #0x0
    6930:	add	x1, x1, #0x0
    6934:	add	x3, x3, #0x0
    6938:	mov	w2, #0x43                  	// #67
    693c:	bl	0 <__assert_fail>

0000000000006940 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>:
    6940:	stp	x29, x30, [sp, #-48]!
    6944:	stp	x22, x21, [sp, #16]
    6948:	stp	x20, x19, [sp, #32]
    694c:	mov	x29, sp
    6950:	cbz	w1, 6a00 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xc0>
    6954:	ldr	x8, [x0, #48]
    6958:	ldrb	w9, [x8]
    695c:	tbnz	w9, #2, 6a34 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xf4>
    6960:	ldurb	w9, [x8, #-8]
    6964:	mov	w20, w1
    6968:	cmp	w9, #0x50
    696c:	b.ne	6998 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>  // b.any
    6970:	ldur	x8, [x8, #-48]
    6974:	cbz	x8, 6998 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>
    6978:	ldrb	w9, [x8, #16]
    697c:	cbnz	w9, 6998 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>
    6980:	ldrb	w9, [x8, #33]
    6984:	tbz	w9, #5, 6998 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x58>
    6988:	ldr	w8, [x8, #36]
    698c:	sub	w8, w8, #0x23
    6990:	cmp	w8, #0x2
    6994:	b.cc	69ec <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xac>  // b.lo, b.ul, b.last
    6998:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    699c:	cbz	x0, 69ec <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xac>
    69a0:	mov	x19, x0
    69a4:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    69a8:	cbz	w0, 69ec <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xac>
    69ac:	mov	x21, xzr
    69b0:	sub	w20, w20, #0x1
    69b4:	mov	w22, w0
    69b8:	mov	x0, x19
    69bc:	mov	w1, w21
    69c0:	bl	0 <_ZNK4llvm11Instruction12getSuccessorEj>
    69c4:	mov	w1, w20
    69c8:	bl	6940 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj>
    69cc:	tbz	w0, #0, 6a00 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xc0>
    69d0:	mov	x0, x19
    69d4:	bl	0 <_ZNK4llvm11Instruction16getNumSuccessorsEv>
    69d8:	cmp	x21, w0, sxtw
    69dc:	b.ge	6a14 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0xd4>  // b.tcont
    69e0:	add	x21, x21, #0x1
    69e4:	cmp	x22, x21
    69e8:	b.ne	69b8 <_ZL33willLeaveFunctionImmediatelyAfterPN4llvm10BasicBlockEj+0x78>  // b.any
    69ec:	mov	w0, #0x1                   	// #1
    69f0:	ldp	x20, x19, [sp, #32]
    69f4:	ldp	x22, x21, [sp, #16]
    69f8:	ldp	x29, x30, [sp], #48
    69fc:	ret
    6a00:	mov	w0, wzr
    6a04:	ldp	x20, x19, [sp, #32]
    6a08:	ldp	x22, x21, [sp, #16]
    6a0c:	ldp	x29, x30, [sp], #48
    6a10:	ret
    6a14:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6a18:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6a1c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6a20:	add	x0, x0, #0x0
    6a24:	add	x1, x1, #0x0
    6a28:	add	x3, x3, #0x0
    6a2c:	mov	w2, #0xda                  	// #218
    6a30:	bl	0 <__assert_fail>
    6a34:	adrp	x0, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6a38:	adrp	x1, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6a3c:	adrp	x3, 0 <_ZNK12_GLOBAL__N_119SuspendCrossingInfo4dumpEN4llvm9StringRefERKNS1_9BitVectorE>
    6a40:	add	x0, x0, #0x0
    6a44:	add	x1, x1, #0x0
    6a48:	add	x3, x3, #0x0
    6a4c:	mov	w2, #0x8b                  	// #139
    6a50:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getSwitchCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 84 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x84>
  10:	ldr	x0, [x0]
  14:	mov	w1, wzr
  18:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  1c:	cbz	x0, a4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xa4>
  20:	ldrb	w8, [x0, #16]
  24:	cmp	w8, #0x50
  28:	b.ne	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.any
  2c:	ldur	x8, [x0, #-24]
  30:	cbz	x8, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  34:	ldrb	w9, [x8, #16]
  38:	cbnz	w9, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  3c:	ldrb	w9, [x8, #33]
  40:	tbz	w9, #5, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  44:	ldr	w8, [x8, #36]
  48:	sub	w9, w8, #0x18
  4c:	cmp	w9, #0x3
  50:	b.cs	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.hs, b.nlast
  54:	cmp	w8, #0x18
  58:	b.ne	c4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xc4>  // b.any
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  68:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  6c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  88:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  8c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x86                  	// #134
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  a8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  ac:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  c8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  cc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10CoroIdInst12clearPromiseEv:

0000000000000000 <_ZN4llvm10CoroIdInst12clearPromiseEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	mov	x20, x0
  14:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  18:	mov	x19, x0
  1c:	mov	x0, x20
  20:	bl	0 <_ZNK4llvm5Value10getContextEv>
  24:	mov	w1, wzr
  28:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
  2c:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
  30:	mov	x2, x0
  34:	mov	w1, #0x1                   	// #1
  38:	mov	x0, x20
  3c:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  40:	cbz	x19, dc <_ZN4llvm10CoroIdInst12clearPromiseEv+0xdc>
  44:	ldrb	w8, [x19, #16]
  48:	cmp	w8, #0x37
  4c:	b.eq	ac <_ZN4llvm10CoroIdInst12clearPromiseEv+0xac>  // b.none
  50:	cmp	w8, #0x49
  54:	b.eq	60 <_ZN4llvm10CoroIdInst12clearPromiseEv+0x60>  // b.none
  58:	cmp	w8, #0x3a
  5c:	b.ne	fc <_ZN4llvm10CoroIdInst12clearPromiseEv+0xfc>  // b.any
  60:	mov	x0, x19
  64:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  68:	ldr	x8, [x19, #8]
  6c:	cbz	x8, b8 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xb8>
  70:	mov	x0, x20
  74:	bl	0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  78:	ldp	x8, x9, [x0, #32]
  7c:	add	x9, x9, #0x28
  80:	cmp	x9, x8
  84:	b.eq	c8 <_ZN4llvm10CoroIdInst12clearPromiseEv+0xc8>  // b.none
  88:	ldrb	w9, [x8]
  8c:	tbnz	w9, #2, 11c <_ZN4llvm10CoroIdInst12clearPromiseEv+0x11c>
  90:	sub	x9, x8, #0x18
  94:	cmp	x8, #0x0
  98:	csel	x1, xzr, x9, eq  // eq = none
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #16]
  a4:	ldp	x29, x30, [sp], #32
  a8:	b	0 <_ZN4llvm11Instruction10moveBeforeEPS0_>
  ac:	ldp	x20, x19, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret
  b8:	mov	x0, x19
  bc:	ldp	x20, x19, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	b	0 <_ZN4llvm11Instruction15eraseFromParentEv>
  c8:	mov	x1, xzr
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #16]
  d4:	ldp	x29, x30, [sp], #32
  d8:	b	0 <_ZN4llvm11Instruction10moveBeforeEPS0_>
  dc:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  e0:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  e4:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 100:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 104:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x83                  	// #131
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 120:	adrp	x1, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 124:	adrp	x3, 0 <_ZN4llvm10CoroIdInst12clearPromiseEv>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x8b                  	// #139
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	a0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0xa0>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	84 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x84>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 88 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x88>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	ldr	x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	ldr	x1, [x29, #24]
  88:	cbz	x1, 78 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x78>
  8c:	add	x0, x29, #0x18
  90:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a8:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x8e                  	// #142
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x19, x5
  1c:	mov	x8, x4
  20:	ldp	x4, x5, [x0, #48]
  24:	mov	x21, x6
  28:	mov	x20, x0
  2c:	mov	w9, #0x101                 	// #257
  30:	add	x6, sp, #0x8
  34:	mov	x0, x1
  38:	mov	x1, x2
  3c:	mov	x2, x3
  40:	mov	x3, x8
  44:	mov	x7, xzr
  48:	stp	xzr, xzr, [sp, #8]
  4c:	strh	w9, [sp, #24]
  50:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  54:	ldrb	w8, [x20, #44]
  58:	mov	x22, x0
  5c:	cbz	w8, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  60:	add	x0, x22, #0x38
  64:	mov	w1, #0xffffffff            	// #-1
  68:	mov	w2, #0x39                  	// #57
  6c:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  70:	tbnz	w0, #0, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x84>
  74:	mov	w1, #0x39                  	// #57
  78:	mov	x0, x22
  7c:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
  80:	tbz	w0, #0, a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xa4>
  84:	cbz	x22, 1c0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x1c0>
  88:	ldrb	w9, [x22, #16]
  8c:	subs	w8, w9, #0x18
  90:	b.cs	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xd8>  // b.hs, b.nlast
  94:	cmp	w9, #0x5
  98:	b.ne	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>  // b.any
  9c:	ldrh	w8, [x22, #18]
  a0:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xd8>
  a4:	ldr	x8, [x22, #56]
  a8:	mov	x0, x22
  ac:	str	x8, [sp, #8]
  b0:	bl	0 <_ZNK4llvm5Value10getContextEv>
  b4:	mov	x1, x0
  b8:	add	x0, sp, #0x8
  bc:	mov	w2, #0xffffffff            	// #-1
  c0:	mov	w3, #0x39                  	// #57
  c4:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
  c8:	str	x0, [x22, #56]
  cc:	ldrb	w9, [x22, #16]
  d0:	subs	w8, w9, #0x18
  d4:	b.cc	94 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x94>  // b.lo, b.ul, b.last
  d8:	cmp	w8, #0x39
  dc:	b.hi	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>  // b.pmore
  e0:	mov	x10, #0x5000                	// #20480
  e4:	mov	w9, #0x1                   	// #1
  e8:	movk	x10, #0x125, lsl #16
  ec:	lsl	x9, x9, x8
  f0:	movk	x10, #0x40, lsl #48
  f4:	tst	x9, x10
  f8:	b.eq	150 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x150>  // b.none
  fc:	ldr	w23, [x20, #40]
 100:	cbnz	x21, 10c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x10c>
 104:	ldr	x21, [x20, #32]
 108:	cbz	x21, 11c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x11c>
 10c:	mov	w1, #0x3                   	// #3
 110:	mov	x0, x22
 114:	mov	x2, x21
 118:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 11c:	mov	x0, x22
 120:	mov	x1, x23
 124:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 128:	mov	x0, x20
 12c:	mov	x1, x22
 130:	mov	x2, x19
 134:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 138:	ldp	x20, x19, [sp, #80]
 13c:	ldp	x22, x21, [sp, #64]
 140:	ldr	x23, [sp, #48]
 144:	ldp	x29, x30, [sp, #32]
 148:	add	sp, sp, #0x60
 14c:	ret
 150:	mov	w9, #0x1                   	// #1
 154:	lsl	x8, x9, x8
 158:	tst	x8, #0x380000000000000
 15c:	b.eq	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>  // b.none
 160:	ldr	x8, [x22]
 164:	cbz	x8, 17c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x17c>
 168:	ldrb	w9, [x8, #8]
 16c:	cmp	w9, #0xe
 170:	b.ne	19c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x19c>  // b.any
 174:	ldr	x8, [x8, #24]
 178:	cbnz	x8, 168 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x168>
 17c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 180:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 184:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x69                  	// #105
 198:	bl	0 <__assert_fail>
 19c:	cmp	w9, #0x10
 1a0:	b.ne	1b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x1b0>  // b.any
 1a4:	ldr	x8, [x8, #16]
 1a8:	ldr	x8, [x8]
 1ac:	ldrb	w9, [x8, #8]
 1b0:	sub	w8, w9, #0x1
 1b4:	cmp	w8, #0x5
 1b8:	b.ls	fc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0xfc>  // b.plast
 1bc:	b	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x128>
 1c0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1c4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1c8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 1cc:	add	x0, x0, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x3, x3, #0x0
 1d8:	mov	w2, #0x69                  	// #105
 1dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	mov	w8, #0x38                  	// #56
  24:	mov	x26, x7
  28:	mov	x20, x5
  2c:	mov	x21, x4
  30:	mov	x22, x3
  34:	mov	x23, x2
  38:	mov	x24, x1
  3c:	mov	x25, x0
  40:	madd	x28, x5, x8, x4
  44:	str	x6, [sp, #8]
  48:	cbz	x5, 6c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x6c>
  4c:	mov	w8, #0x38                  	// #56
  50:	mul	x8, x20, x8
  54:	sub	x8, x8, #0x38
  58:	cmp	x8, #0x70
  5c:	b.cs	74 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x74>  // b.hs, b.nlast
  60:	mov	w9, wzr
  64:	mov	x8, x21
  68:	b	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>
  6c:	mov	w9, wzr
  70:	b	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>
  74:	mov	x11, #0x2493                	// #9363
  78:	movk	x11, #0x9249, lsl #16
  7c:	movk	x11, #0x4924, lsl #32
  80:	lsr	x8, x8, #3
  84:	movk	x11, #0x2492, lsl #48
  88:	umulh	x8, x8, x11
  8c:	add	x11, x8, #0x1
  90:	mov	w13, #0x38                  	// #56
  94:	and	x12, x11, #0xffffffffffffffe
  98:	mov	w9, wzr
  9c:	mov	w10, wzr
  a0:	madd	x8, x12, x13, x21
  a4:	add	x13, x21, #0x60
  a8:	mov	x14, x12
  ac:	ldp	x18, x15, [x13, #-8]
  b0:	ldp	x17, x16, [x13, #-64]
  b4:	subs	x14, x14, #0x2
  b8:	add	x13, x13, #0x70
  bc:	sub	x15, x15, x18
  c0:	sub	x16, x16, x17
  c4:	lsr	x16, x16, #3
  c8:	lsr	x15, x15, #3
  cc:	add	w9, w9, w16
  d0:	add	w10, w10, w15
  d4:	b.ne	ac <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xac>  // b.any
  d8:	cmp	x11, x12
  dc:	add	w9, w10, w9
  e0:	b.eq	100 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x100>  // b.none
  e4:	ldp	x11, x10, [x8, #32]
  e8:	add	x8, x8, #0x38
  ec:	cmp	x28, x8
  f0:	sub	x10, x10, x11
  f4:	lsr	x10, x10, #3
  f8:	add	w9, w9, w10
  fc:	b.ne	e4 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0xe4>  // b.any
 100:	add	w19, w22, #0x1
 104:	add	w1, w9, w19
 108:	lsl	w2, w20, #4
 10c:	mov	w0, #0x48                  	// #72
 110:	bl	0 <_ZN4llvm4UsernwEmjj>
 114:	ldr	x8, [x25, #16]
 118:	mov	x27, x0
 11c:	ldr	x1, [x8]
 120:	cbz	x20, 144 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x144>
 124:	mov	w8, #0x38                  	// #56
 128:	mul	x8, x20, x8
 12c:	sub	x8, x8, #0x38
 130:	cmp	x8, #0x70
 134:	b.cs	150 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x150>  // b.hs, b.nlast
 138:	mov	w9, wzr
 13c:	mov	x8, x21
 140:	b	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>
 144:	mov	w10, wzr
 148:	mov	x8, x22
 14c:	b	28c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x28c>
 150:	mov	x11, #0x2493                	// #9363
 154:	movk	x11, #0x9249, lsl #16
 158:	movk	x11, #0x4924, lsl #32
 15c:	lsr	x8, x8, #3
 160:	movk	x11, #0x2492, lsl #48
 164:	umulh	x8, x8, x11
 168:	add	x11, x8, #0x1
 16c:	mov	w13, #0x38                  	// #56
 170:	and	x12, x11, #0xffffffffffffffe
 174:	mov	w9, wzr
 178:	mov	w10, wzr
 17c:	madd	x8, x12, x13, x21
 180:	add	x13, x21, #0x60
 184:	mov	x14, x12
 188:	ldp	x18, x15, [x13, #-8]
 18c:	ldp	x17, x16, [x13, #-64]
 190:	subs	x14, x14, #0x2
 194:	add	x13, x13, #0x70
 198:	sub	x15, x15, x18
 19c:	sub	x16, x16, x17
 1a0:	lsr	x16, x16, #3
 1a4:	lsr	x15, x15, #3
 1a8:	add	w9, w9, w16
 1ac:	add	w10, w10, w15
 1b0:	b.ne	188 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x188>  // b.any
 1b4:	cmp	x11, x12
 1b8:	add	w9, w10, w9
 1bc:	b.eq	1dc <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1dc>  // b.none
 1c0:	ldp	x11, x10, [x8, #32]
 1c4:	add	x8, x8, #0x38
 1c8:	cmp	x28, x8
 1cc:	sub	x10, x10, x11
 1d0:	lsr	x10, x10, #3
 1d4:	add	w9, w9, w10
 1d8:	b.ne	1c0 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x1c0>  // b.any
 1dc:	mov	w8, #0x38                  	// #56
 1e0:	mul	x8, x20, x8
 1e4:	sub	x12, x8, #0x38
 1e8:	cmp	x12, #0x70
 1ec:	mov	w8, w9
 1f0:	mov	w10, wzr
 1f4:	b.cs	200 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x200>  // b.hs, b.nlast
 1f8:	mov	x9, x21
 1fc:	b	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>
 200:	lsr	x9, x12, #3
 204:	mov	x12, #0x2493                	// #9363
 208:	movk	x12, #0x9249, lsl #16
 20c:	movk	x12, #0x4924, lsl #32
 210:	movk	x12, #0x2492, lsl #48
 214:	umulh	x9, x9, x12
 218:	add	x12, x9, #0x1
 21c:	mov	w14, #0x38                  	// #56
 220:	and	x13, x12, #0xffffffffffffffe
 224:	mov	w11, wzr
 228:	madd	x9, x13, x14, x21
 22c:	add	x14, x21, #0x60
 230:	mov	x15, x13
 234:	ldp	x0, x16, [x14, #-8]
 238:	ldp	x18, x17, [x14, #-64]
 23c:	subs	x15, x15, #0x2
 240:	add	x14, x14, #0x70
 244:	sub	x16, x16, x0
 248:	sub	x17, x17, x18
 24c:	lsr	x17, x17, #3
 250:	lsr	x16, x16, #3
 254:	add	w10, w10, w17
 258:	add	w11, w11, w16
 25c:	b.ne	234 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x234>  // b.any
 260:	cmp	x12, x13
 264:	add	w10, w11, w10
 268:	b.eq	288 <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x288>  // b.none
 26c:	ldp	x12, x11, [x9, #32]
 270:	add	x9, x9, #0x38
 274:	cmp	x28, x9
 278:	sub	x11, x11, x12
 27c:	lsr	x11, x11, #3
 280:	add	w10, w10, w11
 284:	b.ne	26c <_ZN4llvm8CallInst6CreateEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineEPNS_11InstructionE+0x26c>  // b.any
 288:	add	x8, x22, x8
 28c:	mvn	x8, x8
 290:	mov	w9, #0x18                  	// #24
 294:	madd	x3, x8, x9, x27
 298:	add	w4, w10, w19
 29c:	mov	w2, #0x38                  	// #56
 2a0:	mov	x0, x27
 2a4:	mov	x5, x26
 2a8:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
 2ac:	ldr	x7, [sp, #8]
 2b0:	mov	x0, x27
 2b4:	mov	x1, x25
 2b8:	mov	x2, x24
 2bc:	mov	x3, x23
 2c0:	mov	x4, x22
 2c4:	mov	x5, x21
 2c8:	mov	x6, x20
 2cc:	str	xzr, [x27, #56]
 2d0:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
 2d4:	mov	x0, x27
 2d8:	ldp	x20, x19, [sp, #96]
 2dc:	ldp	x22, x21, [sp, #80]
 2e0:	ldp	x24, x23, [sp, #64]
 2e4:	ldp	x26, x25, [sp, #48]
 2e8:	ldp	x28, x27, [sp, #32]
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	add	sp, sp, #0x70
 2f4:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CallInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	sub	x8, x8, x20
  28:	lsr	x8, x8, #4
  2c:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
  30:	b	12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x20, x0
  44:	tbnz	w8, #31, 114 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x114>
  48:	mov	x8, xzr
  4c:	sub	x8, x8, x20
  50:	lsr	x8, x8, #4
  54:	cbz	w8, 12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  58:	ldr	w8, [x19, #20]
  5c:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  60:	mov	x20, xzr
  64:	mov	x8, xzr
  68:	sub	x8, x8, x20
  6c:	lsr	x8, x8, #4
  70:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
  74:	b	158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 140 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x140>
  8c:	mov	x8, xzr
  90:	sub	x8, x8, x20
  94:	lsr	x8, x8, #4
  98:	cbz	w8, 158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	ldr	w8, [x19, #20]
  a8:	ldr	w21, [x0, #8]
  ac:	tbnz	w8, #31, c8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xc8>
  b0:	mov	x20, xzr
  b4:	mov	x8, xzr
  b8:	sub	x8, x8, x20
  bc:	lsr	x8, x8, #4
  c0:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
  c4:	b	190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d0:	ldr	w8, [x19, #20]
  d4:	mov	x20, x0
  d8:	tbnz	w8, #31, 178 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x178>
  dc:	mov	x8, xzr
  e0:	sub	x8, x8, x20
  e4:	lsr	x8, x8, #4
  e8:	cbz	w8, 190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f4:	add	x8, x0, x1
  f8:	ldur	w8, [x8, #-4]
  fc:	subs	w0, w8, w21
 100:	b.cc	1b0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x1b0>  // b.lo, b.ul, b.last
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 11c:	add	x8, x0, x1
 120:	sub	x8, x8, x20
 124:	lsr	x8, x8, #4
 128:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
 12c:	mov	w0, wzr
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 148:	add	x8, x0, x1
 14c:	sub	x8, x8, x20
 150:	lsr	x8, x8, #4
 154:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
 158:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 15c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 160:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x6ed                 	// #1773
 174:	bl	0 <__assert_fail>
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 180:	add	x8, x0, x1
 184:	sub	x8, x8, x20
 188:	lsr	x8, x8, #4
 18c:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
 190:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 194:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 198:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x6f3                 	// #1779
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b4:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b8:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x710                 	// #1808
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13AnyCoroIdInst12getCoroBeginEv:

0000000000000000 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  14:	ldr	x19, [x19, #8]
  18:	cbz	x19, 64 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x64>
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK4llvm3Use7getUserEv>
  24:	cbz	x0, 7c <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x7c>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.ne	14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>  // b.any
  34:	ldur	x8, [x0, #-24]
  38:	cbz	x8, 14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>
  3c:	ldrb	w9, [x8, #16]
  40:	cbnz	w9, 14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>
  44:	ldrb	w9, [x8, #33]
  48:	tbz	w9, #5, 14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>
  4c:	ldr	w8, [x8, #36]
  50:	cmp	w8, #0x12
  54:	b.ne	14 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv+0x14>  // b.any
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  68:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	mov	w2, #0x60                  	// #96
  78:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  7c:	adrp	x0, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  80:	adrp	x1, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  84:	adrp	x3, 0 <_ZN4llvm13AnyCoroIdInst12getCoroBeginEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69                  	// #105
  98:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	ldr	w9, [x0, #56]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	and	w10, w8, #0xfffffff
  24:	cmp	w10, w9
  28:	mov	x21, x1
  2c:	b.ne	3c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x3c>  // b.any
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm7PHINode12growOperandsEv>
  38:	ldr	w8, [x20, #20]
  3c:	tbz	w8, #30, c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xc0>
  40:	and	w9, w8, #0xfffffff
  44:	mov	w10, #0xfffffff             	// #268435455
  48:	cmp	w9, w10
  4c:	b.eq	e0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xe0>  // b.none
  50:	add	w9, w9, #0x1
  54:	and	w8, w8, #0xf0000000
  58:	orr	w8, w9, w8
  5c:	and	w9, w9, #0xfffffff
  60:	sub	w1, w9, #0x1
  64:	mov	x0, x20
  68:	mov	x2, x21
  6c:	str	w8, [x20, #20]
  70:	bl	0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  74:	cbz	x19, 100 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x100>
  78:	ldr	w10, [x20, #20]
  7c:	and	x9, x10, #0xfffffff
  80:	sub	w8, w9, #0x1
  84:	tbnz	w10, #30, 98 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x98>
  88:	mov	w10, #0x18                  	// #24
  8c:	mneg	x9, x9, x10
  90:	add	x9, x20, x9
  94:	b	9c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x9c>
  98:	ldur	x9, [x20, #-8]
  9c:	ldr	w10, [x20, #56]
  a0:	mov	w11, #0x18                  	// #24
  a4:	ldr	x21, [sp, #16]
  a8:	madd	x9, x10, x11, x9
  ac:	add	x8, x9, w8, uxtw #3
  b0:	str	x19, [x8, #8]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  c4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  c8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xd8                  	// #216
  dc:	bl	0 <__assert_fail>
  e0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  e4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  e8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xd9                  	// #217
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 104:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 108:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0xa82                 	// #2690
 11c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE:

0000000000000000 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x2, 100 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x100>
   c:	ldr	x8, [x0]
  10:	ldr	x9, [x2]
  14:	cmp	x8, x9
  18:	b.ne	120 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x120>  // b.any
  1c:	ldr	w9, [x0, #20]
  20:	and	x8, x9, #0xfffffff
  24:	cmp	w8, w1
  28:	b.ls	140 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x140>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x8, x8, x9
  38:	add	x8, x0, x8
  3c:	b	44 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x44>
  40:	ldur	x8, [x0, #-8]
  44:	mov	w9, #0x18                  	// #24
  48:	umaddl	x9, w1, w9, x8
  4c:	ldr	x11, [x9]
  50:	mov	w10, w1
  54:	cbz	x11, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  58:	mov	w11, #0x18                  	// #24
  5c:	madd	x12, x10, x11, x8
  60:	ldp	x13, x11, [x12, #8]
  64:	and	x11, x11, #0xfffffffffffffffc
  68:	str	x13, [x11]
  6c:	ldr	x12, [x12, #8]
  70:	cbz	x12, 84 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0x84>
  74:	ldr	x13, [x12, #16]
  78:	and	x13, x13, #0x3
  7c:	orr	x11, x13, x11
  80:	str	x11, [x12, #16]
  84:	str	x2, [x9]
  88:	ldr	x11, [x2, #8]!
  8c:	mov	w12, #0x18                  	// #24
  90:	madd	x12, x10, x12, x8
  94:	str	x11, [x12, #8]!
  98:	cbz	x11, b4 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xb4>
  9c:	tst	x12, #0x3
  a0:	b.ne	e0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xe0>  // b.any
  a4:	ldr	x13, [x11, #16]
  a8:	and	x13, x13, #0x3
  ac:	orr	x12, x13, x12
  b0:	str	x12, [x11, #16]
  b4:	tst	x2, #0x3
  b8:	b.ne	e0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE+0xe0>  // b.any
  bc:	mov	w11, #0x18                  	// #24
  c0:	madd	x8, x10, x11, x8
  c4:	ldr	x10, [x8, #16]!
  c8:	and	x10, x10, #0x3
  cc:	orr	x10, x10, x2
  d0:	str	x10, [x8]
  d4:	str	x9, [x2]
  d8:	ldp	x29, x30, [sp], #16
  dc:	ret
  e0:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e4:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  e8:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xb3                  	// #179
  fc:	bl	0 <__assert_fail>
 100:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 104:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 108:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0xa5e                 	// #2654
 11c:	bl	0 <__assert_fail>
 120:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 124:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 128:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 12c:	add	x0, x0, #0x0
 130:	add	x1, x1, #0x0
 134:	add	x3, x3, #0x0
 138:	mov	w2, #0xa60                 	// #2656
 13c:	bl	0 <__assert_fail>
 140:	adrp	x0, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 144:	adrp	x1, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 148:	adrp	x3, 0 <_ZN4llvm7PHINode16setIncomingValueEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0xadf                 	// #2783
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x2
  18:	mov	x21, x1
  1c:	cmp	x1, x2
  20:	mov	x19, x0
  24:	mov	x23, xzr
  28:	b.eq	74 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x74>  // b.none
  2c:	mov	x22, x21
  30:	b	40 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x40>
  34:	cmp	x22, x20
  38:	add	x23, x23, #0x1
  3c:	b.eq	74 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x74>  // b.none
  40:	cbz	x22, f8 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0xf8>
  44:	ldr	x22, [x22, #8]
  48:	cbz	x22, 34 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x34>
  4c:	mov	x0, x22
  50:	bl	0 <_ZNK4llvm3Use7getUserEv>
  54:	cbz	x0, d8 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0xd8>
  58:	ldrb	w8, [x0, #16]
  5c:	cmp	w8, #0x18
  60:	b.cc	44 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x44>  // b.lo, b.ul, b.last
  64:	sub	w8, w8, #0x19
  68:	cmp	w8, #0xb
  6c:	b.cs	44 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x44>  // b.hs, b.nlast
  70:	b	34 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x34>
  74:	ldp	w8, w9, [x19, #8]
  78:	sub	x9, x9, x8
  7c:	cmp	x23, x9
  80:	b.ls	9c <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x9c>  // b.plast
  84:	add	x2, x23, x8
  88:	add	x1, x19, #0x10
  8c:	mov	w3, #0x8                   	// #8
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  98:	ldr	w8, [x19, #8]
  9c:	ldr	x9, [x19]
  a0:	mov	x0, x21
  a4:	mov	x1, x20
  a8:	add	x2, x9, x8, lsl #3
  ac:	bl	0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  b0:	ldp	w8, w9, [x19, #8]
  b4:	add	x8, x23, x8
  b8:	cmp	x8, x9
  bc:	b.hi	118 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_+0x118>  // b.pmore
  c0:	str	w8, [x19, #8]
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldr	x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x69                  	// #105
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
  fc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 100:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x50                  	// #80
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 11c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 120:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_10BasicBlockEE6appendINS_12PredIteratorIS1_NS_5Value18user_iterator_implINS_4UserEEEEEvEEvT_SB_>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x43                  	// #67
 134:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_:

0000000000000000 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	mov	x19, x2
  18:	b.eq	88 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x88>  // b.none
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	b	34 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x34>
  28:	cmp	x21, x20
  2c:	add	x19, x19, #0x8
  30:	b.eq	88 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x88>  // b.none
  34:	cbz	x21, bc <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0xbc>
  38:	mov	x0, x21
  3c:	bl	0 <_ZNK4llvm3Use7getUserEv>
  40:	cbz	x0, 9c <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x9c>
  44:	ldrb	w8, [x0, #16]
  48:	cmp	w8, #0x17
  4c:	b.ls	dc <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0xdc>  // b.plast
  50:	ldr	x8, [x0, #40]
  54:	str	x8, [x19]
  58:	ldr	x21, [x21, #8]
  5c:	cbz	x21, 28 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x28>
  60:	mov	x0, x21
  64:	bl	0 <_ZNK4llvm3Use7getUserEv>
  68:	cbz	x0, 9c <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x9c>
  6c:	ldrb	w8, [x0, #16]
  70:	cmp	w8, #0x18
  74:	b.cc	58 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x58>  // b.lo, b.ul, b.last
  78:	sub	w8, w8, #0x19
  7c:	cmp	w8, #0xb
  80:	b.cs	58 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x58>  // b.hs, b.nlast
  84:	b	28 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_+0x28>
  88:	mov	x0, x19
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldr	x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	adrp	x0, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  a0:	adrp	x1, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  a4:	adrp	x3, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x69                  	// #105
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  c0:	adrp	x1, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  c4:	adrp	x3, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x4a                  	// #74
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  e0:	adrp	x1, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  e4:	adrp	x3, 0 <_ZSt18uninitialized_copyIN4llvm12PredIteratorINS0_10BasicBlockENS0_5Value18user_iterator_implINS0_4UserEEEEEPPS2_ET0_T_SB_SA_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x108                 	// #264
  f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BitVector6resizeEjb:

0000000000000000 <_ZN4llvm9BitVector6resizeEjb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x22, [x0, #8]
  14:	mov	w8, w1
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	cmp	x8, x22, lsl #6
  24:	mov	w21, w2
  28:	b.ls	60 <_ZN4llvm9BitVector6resizeEjb+0x60>  // b.plast
  2c:	mov	x0, x19
  30:	mov	w1, w20
  34:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
  38:	ldr	x9, [x19, #8]
  3c:	and	x8, x22, #0xffffffff
  40:	subs	x9, x9, x8
  44:	b.cc	1a8 <_ZN4llvm9BitVector6resizeEjb+0x1a8>  // b.lo, b.ul, b.last
  48:	b.eq	60 <_ZN4llvm9BitVector6resizeEjb+0x60>  // b.none
  4c:	ldr	x10, [x19]
  50:	lsl	x2, x9, #3
  54:	sbfx	w1, w21, #0, #1
  58:	add	x0, x10, x8, lsl #3
  5c:	bl	0 <memset>
  60:	ldr	w8, [x19, #16]
  64:	cmp	w8, w20
  68:	b.cs	f4 <_ZN4llvm9BitVector6resizeEjb+0xf4>  // b.hs, b.nlast
  6c:	ldr	x9, [x19, #8]
  70:	add	w10, w8, #0x3f
  74:	lsr	w22, w10, #6
  78:	subs	x9, x9, x22
  7c:	b.ls	9c <_ZN4llvm9BitVector6resizeEjb+0x9c>  // b.plast
  80:	b.eq	9c <_ZN4llvm9BitVector6resizeEjb+0x9c>  // b.none
  84:	ldr	x8, [x19]
  88:	lsl	x2, x9, #3
  8c:	sbfx	w1, w21, #0, #1
  90:	add	x0, x8, x22, lsl #3
  94:	bl	0 <memset>
  98:	ldr	w8, [x19, #16]
  9c:	ands	w9, w8, #0x3f
  a0:	b.eq	f4 <_ZN4llvm9BitVector6resizeEjb+0xf4>  // b.none
  a4:	ldr	x11, [x19, #8]
  a8:	mov	x10, #0xffffffffffffffff    	// #-1
  ac:	lsl	x9, x10, x9
  b0:	sub	w10, w22, #0x1
  b4:	cmp	x11, x10
  b8:	tbz	w21, #0, dc <_ZN4llvm9BitVector6resizeEjb+0xdc>
  bc:	b.ls	188 <_ZN4llvm9BitVector6resizeEjb+0x188>  // b.plast
  c0:	ldr	x8, [x19]
  c4:	lsl	x10, x10, #3
  c8:	ldr	x11, [x8, x10]
  cc:	orr	x9, x11, x9
  d0:	str	x9, [x8, x10]
  d4:	str	w20, [x19, #16]
  d8:	b	114 <_ZN4llvm9BitVector6resizeEjb+0x114>
  dc:	b.ls	188 <_ZN4llvm9BitVector6resizeEjb+0x188>  // b.plast
  e0:	ldr	x11, [x19]
  e4:	lsl	x10, x10, #3
  e8:	ldr	x12, [x11, x10]
  ec:	bic	x9, x12, x9
  f0:	str	x9, [x11, x10]
  f4:	cmp	w8, w20
  f8:	str	w20, [x19, #16]
  fc:	b.hi	114 <_ZN4llvm9BitVector6resizeEjb+0x114>  // b.pmore
 100:	tbnz	w21, #0, 114 <_ZN4llvm9BitVector6resizeEjb+0x114>
 104:	ldp	x20, x19, [sp, #32]
 108:	ldp	x22, x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	ldr	x8, [x19, #8]
 118:	add	w9, w20, #0x3f
 11c:	lsr	w21, w9, #6
 120:	subs	x8, x8, x21
 124:	b.ls	144 <_ZN4llvm9BitVector6resizeEjb+0x144>  // b.plast
 128:	b.eq	144 <_ZN4llvm9BitVector6resizeEjb+0x144>  // b.none
 12c:	ldr	x9, [x19]
 130:	lsl	x2, x8, #3
 134:	mov	w1, wzr
 138:	add	x0, x9, x21, lsl #3
 13c:	bl	0 <memset>
 140:	ldr	w20, [x19, #16]
 144:	ands	w8, w20, #0x3f
 148:	b.eq	104 <_ZN4llvm9BitVector6resizeEjb+0x104>  // b.none
 14c:	ldr	x10, [x19, #8]
 150:	sub	w9, w21, #0x1
 154:	cmp	x10, x9
 158:	b.ls	188 <_ZN4llvm9BitVector6resizeEjb+0x188>  // b.plast
 15c:	ldr	x10, [x19]
 160:	lsl	x9, x9, #3
 164:	mov	x12, #0xffffffffffffffff    	// #-1
 168:	lsl	x8, x12, x8
 16c:	ldr	x11, [x10, x9]
 170:	bic	x8, x11, x8
 174:	str	x8, [x10, x9]
 178:	ldp	x20, x19, [sp, #32]
 17c:	ldp	x22, x21, [sp, #16]
 180:	ldp	x29, x30, [sp], #48
 184:	ret
 188:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 18c:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 190:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 194:	add	x0, x0, #0x0
 198:	add	x1, x1, #0x0
 19c:	add	x3, x3, #0x0
 1a0:	mov	w2, #0x1ab                 	// #427
 1a4:	bl	0 <__assert_fail>
 1a8:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 1ac:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 1b0:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 1b4:	add	x0, x0, #0x0
 1b8:	add	x1, x1, #0x0
 1bc:	add	x3, x3, #0x0
 1c0:	mov	w2, #0x174                 	// #372
 1c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_:

0000000000000000 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, x0
  18:	cmp	x8, #0x81
  1c:	b.lt	208 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x208>  // b.tstop
  20:	mov	x20, x1
  24:	mov	x19, x0
  28:	mov	x21, x2
  2c:	add	x23, x0, #0x8
  30:	b	54 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x54>
  34:	mov	x0, x22
  38:	mov	x1, x20
  3c:	mov	x2, x21
  40:	bl	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>
  44:	sub	x8, x22, x19
  48:	cmp	x8, #0x80
  4c:	mov	x20, x22
  50:	b.le	208 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x208>
  54:	cbz	x21, 110 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x110>
  58:	lsr	x8, x8, #4
  5c:	ldr	x9, [x19, #8]
  60:	ldr	x11, [x19, x8, lsl #3]
  64:	ldur	x10, [x20, #-8]
  68:	sub	x21, x21, #0x1
  6c:	cmp	x9, x11
  70:	b.cs	84 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x84>  // b.hs, b.nlast
  74:	cmp	x11, x10
  78:	b.cs	94 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x94>  // b.hs, b.nlast
  7c:	ldr	x9, [x19]
  80:	b	cc <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xcc>
  84:	cmp	x9, x10
  88:	b.cs	b4 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xb4>  // b.hs, b.nlast
  8c:	ldr	x8, [x19]
  90:	b	ac <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xac>
  94:	ldr	x8, [x19]
  98:	cmp	x9, x10
  9c:	b.cs	ac <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xac>  // b.hs, b.nlast
  a0:	str	x10, [x19]
  a4:	stur	x8, [x20, #-8]
  a8:	b	d4 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xd4>
  ac:	stp	x9, x8, [x19]
  b0:	b	d4 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xd4>
  b4:	ldr	x9, [x19]
  b8:	cmp	x11, x10
  bc:	b.cs	cc <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xcc>  // b.hs, b.nlast
  c0:	str	x10, [x19]
  c4:	stur	x9, [x20, #-8]
  c8:	b	d4 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xd4>
  cc:	str	x11, [x19]
  d0:	str	x9, [x19, x8, lsl #3]
  d4:	mov	x8, x20
  d8:	mov	x9, x23
  dc:	ldr	x11, [x19]
  e0:	ldr	x10, [x9], #8
  e4:	cmp	x10, x11
  e8:	b.cc	e0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xe0>  // b.lo, b.ul, b.last
  ec:	sub	x22, x9, #0x8
  f0:	ldr	x12, [x8, #-8]!
  f4:	cmp	x11, x12
  f8:	b.cc	f0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xf0>  // b.lo, b.ul, b.last
  fc:	cmp	x22, x8
 100:	b.cs	34 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x34>  // b.hs, b.nlast
 104:	stur	x12, [x9, #-8]
 108:	str	x10, [x8]
 10c:	b	dc <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0xdc>
 110:	add	x2, x29, #0x18
 114:	mov	x0, x19
 118:	mov	x1, x20
 11c:	bl	0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_>
 120:	b	134 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x134>
 124:	mov	x11, x10
 128:	cmp	x9, #0x8
 12c:	str	x8, [x19, x11, lsl #3]
 130:	b.le	208 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x208>
 134:	ldr	x8, [x20, #-8]!
 138:	ldr	x13, [x19]
 13c:	sub	x9, x20, x19
 140:	asr	x12, x9, #3
 144:	sub	x11, x12, #0x1
 148:	cmp	x11, #0x0
 14c:	csel	x10, x12, x11, lt  // lt = tstop
 150:	cmp	x9, #0x11
 154:	str	x13, [x20]
 158:	b.lt	1a0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x1a0>  // b.tstop
 15c:	mov	x14, xzr
 160:	asr	x13, x10, #1
 164:	lsl	x10, x14, #1
 168:	mov	w15, #0x1                   	// #1
 16c:	add	x10, x10, #0x2
 170:	bfi	x15, x14, #1, #63
 174:	ldr	x16, [x19, x10, lsl #3]
 178:	ldr	x17, [x19, x15, lsl #3]
 17c:	cmp	x16, x17
 180:	csel	x10, x15, x10, cc  // cc = lo, ul, last
 184:	ldr	x15, [x19, x10, lsl #3]
 188:	cmp	x10, x13
 18c:	str	x15, [x19, x14, lsl #3]
 190:	mov	x14, x10
 194:	b.lt	164 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x164>  // b.tstop
 198:	tbz	w9, #3, 1a8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x1a8>
 19c:	b	1d0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x1d0>
 1a0:	mov	x10, xzr
 1a4:	tbnz	w9, #3, 1d0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x1d0>
 1a8:	sub	x12, x12, #0x2
 1ac:	cmp	x12, #0x0
 1b0:	csel	x11, x11, x12, lt  // lt = tstop
 1b4:	cmp	x10, x11, asr #1
 1b8:	b.ne	1d0 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x1d0>  // b.any
 1bc:	mov	w11, #0x1                   	// #1
 1c0:	bfi	x11, x10, #1, #63
 1c4:	ldr	x12, [x19, x11, lsl #3]
 1c8:	str	x12, [x19, x10, lsl #3]
 1cc:	mov	x10, x11
 1d0:	cmp	x10, #0x1
 1d4:	b.lt	124 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x124>  // b.tstop
 1d8:	sub	x11, x10, #0x1
 1dc:	cmp	x11, #0x0
 1e0:	csel	x11, x10, x11, lt  // lt = tstop
 1e4:	asr	x11, x11, #1
 1e8:	ldr	x12, [x19, x11, lsl #3]
 1ec:	cmp	x12, x8
 1f0:	b.cs	124 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x124>  // b.hs, b.nlast
 1f4:	cmp	x10, #0x2
 1f8:	str	x12, [x19, x10, lsl #3]
 1fc:	mov	x10, x11
 200:	b.gt	1d8 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x1d8>
 204:	b	128 <_ZSt16__introsort_loopIPPN4llvm10BasicBlockElN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_T1_+0x128>
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldr	x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

Disassembly of section .text._ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_:

0000000000000000 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	cmp	x8, #0x81
  28:	b.lt	b4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xb4>  // b.tstop
  2c:	add	x21, x20, #0x8
  30:	mov	w22, #0x1                   	// #1
  34:	mov	x23, x21
  38:	mov	x24, x20
  3c:	b	68 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x68>
  40:	lsl	x2, x22, #3
  44:	mov	x0, x21
  48:	mov	x1, x20
  4c:	bl	0 <memmove>
  50:	mov	x8, x20
  54:	add	x22, x22, #0x1
  58:	cmp	x22, #0x10
  5c:	add	x23, x23, #0x8
  60:	str	x25, [x8]
  64:	b.eq	14c <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x14c>  // b.none
  68:	mov	x8, x24
  6c:	add	x24, x20, x22, lsl #3
  70:	ldr	x25, [x24]
  74:	ldr	x9, [x20]
  78:	cmp	x25, x9
  7c:	b.cc	40 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x40>  // b.lo, b.ul, b.last
  80:	ldr	x8, [x8]
  84:	cmp	x8, x25
  88:	mov	x8, x24
  8c:	b.ls	54 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x54>  // b.plast
  90:	mov	x9, x23
  94:	mov	x8, x23
  98:	ldr	x10, [x8, #-8]!
  9c:	ldur	x11, [x9, #-16]
  a0:	str	x10, [x9]
  a4:	cmp	x11, x25
  a8:	mov	x9, x8
  ac:	b.hi	98 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x98>  // b.pmore
  b0:	b	54 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x54>
  b4:	cmp	x20, x19
  b8:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
  bc:	add	x9, x20, #0x8
  c0:	cmp	x9, x19
  c4:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
  c8:	mov	x21, x20
  cc:	b	e4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xe4>
  d0:	mov	x8, x20
  d4:	add	x9, x21, #0x8
  d8:	cmp	x9, x19
  dc:	str	x22, [x8]
  e0:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
  e4:	ldr	x22, [x21, #8]
  e8:	ldr	x10, [x20]
  ec:	mov	x8, x21
  f0:	mov	x21, x9
  f4:	cmp	x22, x10
  f8:	b.cs	118 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x118>  // b.hs, b.nlast
  fc:	subs	x2, x21, x20
 100:	b.eq	d0 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd0>  // b.none
 104:	sub	x8, x8, x2
 108:	add	x0, x8, #0x10
 10c:	mov	x1, x20
 110:	bl	0 <memmove>
 114:	b	d0 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd0>
 118:	ldr	x8, [x8]
 11c:	cmp	x8, x22
 120:	mov	x8, x21
 124:	b.ls	d4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd4>  // b.plast
 128:	mov	x9, x21
 12c:	mov	x8, x21
 130:	ldr	x10, [x8, #-8]!
 134:	ldur	x11, [x9, #-16]
 138:	str	x10, [x9]
 13c:	cmp	x11, x22
 140:	mov	x9, x8
 144:	b.hi	130 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x130>  // b.pmore
 148:	b	d4 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0xd4>
 14c:	add	x8, x20, #0x80
 150:	cmp	x8, x19
 154:	b.ne	180 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x180>  // b.any
 158:	ldp	x20, x19, [sp, #64]
 15c:	ldp	x22, x21, [sp, #48]
 160:	ldp	x24, x23, [sp, #32]
 164:	ldr	x25, [sp, #16]
 168:	ldp	x29, x30, [sp], #80
 16c:	ret
 170:	add	x8, x8, #0x8
 174:	cmp	x8, x19
 178:	str	x9, [x10]
 17c:	b.eq	158 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x158>  // b.none
 180:	ldp	x10, x9, [x8, #-8]
 184:	cmp	x10, x9
 188:	mov	x10, x8
 18c:	b.ls	170 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x170>  // b.plast
 190:	mov	x11, x8
 194:	mov	x10, x8
 198:	ldr	x12, [x10, #-8]!
 19c:	ldur	x13, [x11, #-16]
 1a0:	str	x12, [x11]
 1a4:	cmp	x13, x9
 1a8:	mov	x11, x10
 1ac:	b.hi	198 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x198>  // b.pmore
 1b0:	b	170 <_ZSt22__final_insertion_sortIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_T0_+0x170>

Disassembly of section .text._ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_:

0000000000000000 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_>:
   0:	sub	x10, x1, x0
   4:	cmp	x10, #0x10
   8:	b.ge	10 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x10>  // b.tcont
   c:	ret
  10:	asr	x8, x10, #3
  14:	sub	x9, x8, #0x2
  18:	sub	x11, x8, #0x1
  1c:	cmp	x9, #0x0
  20:	csel	x9, x11, x9, lt  // lt = tstop
  24:	cmp	x11, #0x0
  28:	csel	x8, x8, x11, lt  // lt = tstop
  2c:	asr	x9, x9, #1
  30:	asr	x8, x8, #1
  34:	tbnz	w10, #3, 100 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x100>
  38:	mov	w10, #0x1                   	// #1
  3c:	bfi	x10, x9, #1, #63
  40:	mov	x12, x9
  44:	b	58 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x58>
  48:	mov	x14, x13
  4c:	str	x12, [x0, x14, lsl #3]
  50:	sub	x12, x11, #0x1
  54:	cbz	x11, c <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xc>
  58:	mov	x11, x12
  5c:	ldr	x12, [x0, x12, lsl #3]
  60:	cmp	x8, x11
  64:	mov	x13, x11
  68:	b.le	a4 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xa4>
  6c:	mov	x14, x11
  70:	lsl	x13, x14, #1
  74:	mov	w15, #0x1                   	// #1
  78:	add	x13, x13, #0x2
  7c:	bfi	x15, x14, #1, #63
  80:	ldr	x16, [x0, x13, lsl #3]
  84:	ldr	x17, [x0, x15, lsl #3]
  88:	cmp	x16, x17
  8c:	csel	x13, x15, x13, cc  // cc = lo, ul, last
  90:	ldr	x15, [x0, x13, lsl #3]
  94:	cmp	x13, x8
  98:	str	x15, [x0, x14, lsl #3]
  9c:	mov	x14, x13
  a0:	b.lt	70 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x70>  // b.tstop
  a4:	cmp	x13, x9
  a8:	b.ne	b8 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xb8>  // b.any
  ac:	ldr	x13, [x0, x10, lsl #3]
  b0:	str	x13, [x0, x9, lsl #3]
  b4:	mov	x13, x10
  b8:	cmp	x13, x11
  bc:	b.le	48 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x48>
  c0:	sub	x14, x13, #0x1
  c4:	cmp	x14, #0x0
  c8:	csel	x14, x13, x14, lt  // lt = tstop
  cc:	asr	x14, x14, #1
  d0:	ldr	x15, [x0, x14, lsl #3]
  d4:	cmp	x15, x12
  d8:	b.cs	48 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x48>  // b.hs, b.nlast
  dc:	cmp	x14, x11
  e0:	str	x15, [x0, x13, lsl #3]
  e4:	mov	x13, x14
  e8:	b.gt	c0 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xc0>
  ec:	b	4c <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x4c>
  f0:	mov	x12, x11
  f4:	str	x9, [x0, x12, lsl #3]
  f8:	sub	x9, x10, #0x1
  fc:	cbz	x10, c <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xc>
 100:	mov	x10, x9
 104:	ldr	x9, [x0, x9, lsl #3]
 108:	cmp	x8, x10
 10c:	mov	x12, x10
 110:	b.le	f4 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xf4>
 114:	mov	x11, x10
 118:	mov	x12, x11
 11c:	lsl	x11, x11, #1
 120:	mov	w13, #0x1                   	// #1
 124:	add	x11, x11, #0x2
 128:	bfi	x13, x12, #1, #63
 12c:	ldr	x14, [x0, x11, lsl #3]
 130:	ldr	x15, [x0, x13, lsl #3]
 134:	cmp	x14, x15
 138:	csel	x11, x13, x11, cc  // cc = lo, ul, last
 13c:	ldr	x13, [x0, x11, lsl #3]
 140:	cmp	x11, x8
 144:	str	x13, [x0, x12, lsl #3]
 148:	b.lt	118 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x118>  // b.tstop
 14c:	cmp	x11, x10
 150:	b.le	f0 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xf0>
 154:	sub	x12, x11, #0x1
 158:	cmp	x12, #0x0
 15c:	csel	x12, x11, x12, lt  // lt = tstop
 160:	asr	x12, x12, #1
 164:	ldr	x13, [x0, x12, lsl #3]
 168:	cmp	x13, x9
 16c:	b.cs	f0 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xf0>  // b.hs, b.nlast
 170:	cmp	x12, x10
 174:	str	x13, [x0, x11, lsl #3]
 178:	mov	x11, x12
 17c:	b.gt	154 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0x154>
 180:	b	f4 <_ZSt11__make_heapIPPN4llvm10BasicBlockEN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S7_RT0_+0xf4>

Disassembly of section .text._ZN4llvm9BitVector4growEj:

0000000000000000 <_ZN4llvm9BitVector4growEj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #8]
  18:	add	w9, w1, #0x3f
  1c:	lsr	w9, w9, #6
  20:	lsl	x8, x8, #1
  24:	cmp	x8, x9
  28:	csel	x22, x8, x9, hi  // hi = pmore
  2c:	cbz	x22, f4 <_ZN4llvm9BitVector4growEj+0xf4>
  30:	mov	x19, x0
  34:	ldr	x0, [x0]
  38:	lsl	x21, x22, #3
  3c:	mov	x1, x21
  40:	bl	0 <realloc>
  44:	mov	x20, x0
  48:	cbnz	x0, 88 <_ZN4llvm9BitVector4growEj+0x88>
  4c:	cbz	x21, 68 <_ZN4llvm9BitVector4growEj+0x68>
  50:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  54:	add	x0, x0, #0x0
  58:	mov	w1, #0x1                   	// #1
  5c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  60:	mov	x20, xzr
  64:	b	88 <_ZN4llvm9BitVector4growEj+0x88>
  68:	mov	w0, #0x1                   	// #1
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, 88 <_ZN4llvm9BitVector4growEj+0x88>
  78:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  7c:	add	x0, x0, #0x0
  80:	mov	w1, #0x1                   	// #1
  84:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  88:	ldr	w23, [x19, #16]
  8c:	stp	x20, x22, [x19]
  90:	add	w8, w23, #0x3f
  94:	lsr	w21, w8, #6
  98:	subs	x8, x22, x21
  9c:	b.ls	b4 <_ZN4llvm9BitVector4growEj+0xb4>  // b.plast
  a0:	b.eq	b4 <_ZN4llvm9BitVector4growEj+0xb4>  // b.none
  a4:	add	x0, x20, x21, lsl #3
  a8:	lsl	x2, x8, #3
  ac:	mov	w1, wzr
  b0:	bl	0 <memset>
  b4:	and	x8, x23, #0x3f
  b8:	cbz	w8, e0 <_ZN4llvm9BitVector4growEj+0xe0>
  bc:	sub	w9, w21, #0x1
  c0:	cmp	x22, x9
  c4:	b.ls	114 <_ZN4llvm9BitVector4growEj+0x114>  // b.plast
  c8:	lsl	x9, x9, #3
  cc:	ldr	x10, [x20, x9]
  d0:	mov	x11, #0xffffffffffffffff    	// #-1
  d4:	lsl	x8, x11, x8
  d8:	bic	x8, x10, x8
  dc:	str	x8, [x20, x9]
  e0:	ldp	x20, x19, [sp, #48]
  e4:	ldp	x22, x21, [sp, #32]
  e8:	ldr	x23, [sp, #16]
  ec:	ldp	x29, x30, [sp], #64
  f0:	ret
  f4:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
  f8:	adrp	x1, 0 <_ZN4llvm9BitVector4growEj>
  fc:	adrp	x3, 0 <_ZN4llvm9BitVector4growEj>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x376                 	// #886
 110:	bl	0 <__assert_fail>
 114:	adrp	x0, 0 <_ZN4llvm9BitVector4growEj>
 118:	adrp	x1, 0 <_ZN4llvm9BitVector4growEj>
 11c:	adrp	x3, 0 <_ZN4llvm9BitVector4growEj>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x1ab                 	// #427
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BitVectoreqERKS0_:

0000000000000000 <_ZNK4llvm9BitVectoreqERKS0_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #16]
   c:	ldr	w9, [x1, #16]
  10:	add	w8, w8, #0x3f
  14:	add	w9, w9, #0x3f
  18:	lsr	w8, w8, #6
  1c:	lsr	w9, w9, #6
  20:	cmp	w9, w8
  24:	csel	w10, w9, w8, cc  // cc = lo, ul, last
  28:	cbz	w10, 70 <_ZNK4llvm9BitVectoreqERKS0_+0x70>
  2c:	ldr	x11, [x0, #8]
  30:	mov	x12, xzr
  34:	cmp	x11, x12
  38:	b.ls	fc <_ZNK4llvm9BitVectoreqERKS0_+0xfc>  // b.plast
  3c:	ldr	x13, [x1, #8]
  40:	cmp	x13, x12
  44:	b.ls	fc <_ZNK4llvm9BitVectoreqERKS0_+0xfc>  // b.plast
  48:	ldr	x13, [x0]
  4c:	ldr	x14, [x1]
  50:	lsl	x15, x12, #3
  54:	ldr	x13, [x13, x15]
  58:	ldr	x14, [x14, x15]
  5c:	cmp	x13, x14
  60:	b.ne	f0 <_ZNK4llvm9BitVectoreqERKS0_+0xf0>  // b.any
  64:	add	x12, x12, #0x1
  68:	cmp	w10, w12
  6c:	b.ne	34 <_ZNK4llvm9BitVectoreqERKS0_+0x34>  // b.any
  70:	cmp	w8, w9
  74:	b.ls	ac <_ZNK4llvm9BitVectoreqERKS0_+0xac>  // b.plast
  78:	ldr	x9, [x0, #8]
  7c:	mov	w10, w10
  80:	cmp	x9, x10
  84:	b.ls	fc <_ZNK4llvm9BitVectoreqERKS0_+0xfc>  // b.plast
  88:	ldr	x11, [x0]
  8c:	ldr	x11, [x11, x10, lsl #3]
  90:	cbnz	x11, f0 <_ZNK4llvm9BitVectoreqERKS0_+0xf0>
  94:	add	w10, w10, #0x1
  98:	cmp	w8, w10
  9c:	b.ne	7c <_ZNK4llvm9BitVectoreqERKS0_+0x7c>  // b.any
  a0:	mov	w0, #0x1                   	// #1
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret
  ac:	b.ne	bc <_ZNK4llvm9BitVectoreqERKS0_+0xbc>  // b.any
  b0:	mov	w0, #0x1                   	// #1
  b4:	ldp	x29, x30, [sp], #16
  b8:	ret
  bc:	ldr	x10, [x1, #8]
  c0:	mov	w8, w8
  c4:	cmp	x10, x8
  c8:	b.ls	fc <_ZNK4llvm9BitVectoreqERKS0_+0xfc>  // b.plast
  cc:	ldr	x11, [x1]
  d0:	ldr	x11, [x11, x8, lsl #3]
  d4:	cbnz	x11, f0 <_ZNK4llvm9BitVectoreqERKS0_+0xf0>
  d8:	add	w8, w8, #0x1
  dc:	cmp	w9, w8
  e0:	b.ne	c0 <_ZNK4llvm9BitVectoreqERKS0_+0xc0>  // b.any
  e4:	mov	w0, #0x1                   	// #1
  e8:	ldp	x29, x30, [sp], #16
  ec:	ret
  f0:	mov	w0, wzr
  f4:	ldp	x29, x30, [sp], #16
  f8:	ret
  fc:	adrp	x0, 0 <_ZNK4llvm9BitVectoreqERKS0_>
 100:	adrp	x1, 0 <_ZNK4llvm9BitVectoreqERKS0_>
 104:	adrp	x3, 0 <_ZNK4llvm9BitVectoreqERKS0_>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x1ab                 	// #427
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	str	x10, [x0, #16]
  7c:	ldrb	w11, [x9]
  80:	tbz	w11, #2, 38 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x38>
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x10, x9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x8
  18:	cmp	x9, x10
  1c:	b.eq	88 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x88>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  28:	ldp	x9, x8, [x19, #8]
  2c:	mov	w10, #0x18                  	// #24
  30:	cmp	x8, x9
  34:	mov	w9, #0x1c                  	// #28
  38:	csel	x9, x9, x10, eq  // eq = none
  3c:	ldr	w9, [x19, x9]
  40:	add	x8, x8, x9, lsl #3
  44:	cmp	x8, x0
  48:	b.cc	11c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x11c>  // b.lo, b.ul, b.last
  4c:	b.eq	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.none
  50:	ldr	x9, [x0]
  54:	cmn	x9, #0x2
  58:	b.cc	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.lo, b.ul, b.last
  5c:	add	x0, x0, #0x8
  60:	cmp	x8, x0
  64:	b.ne	50 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x50>  // b.any
  68:	mov	x0, x8
  6c:	ldr	x9, [x19]
  70:	stp	x0, x8, [x20]
  74:	strb	w1, [x20, #32]
  78:	stp	x19, x9, [x20, #16]
  7c:	ldp	x20, x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret
  88:	ldr	w8, [x19, #28]
  8c:	cbz	w8, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  90:	mov	x0, xzr
  94:	lsl	x10, x8, #3
  98:	mov	x11, x9
  9c:	ldr	x12, [x11]
  a0:	cmp	x12, x1
  a4:	b.eq	110 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x110>  // b.none
  a8:	cmn	x12, #0x2
  ac:	csel	x0, x11, x0, eq  // eq = none
  b0:	subs	x10, x10, #0x8
  b4:	add	x11, x11, #0x8
  b8:	b.ne	9c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x9c>  // b.any
  bc:	cbz	x0, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  c0:	str	x1, [x0]
  c4:	ldr	w8, [x19, #32]
  c8:	ldr	x9, [x19]
  cc:	sub	w8, w8, #0x1
  d0:	add	x9, x9, #0x1
  d4:	str	w8, [x19, #32]
  d8:	b	104 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x104>
  dc:	ldr	w10, [x19, #24]
  e0:	cmp	w8, w10
  e4:	b.cs	20 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x20>  // b.hs, b.nlast
  e8:	add	w10, w8, #0x1
  ec:	lsl	x8, x8, #3
  f0:	str	w10, [x19, #28]
  f4:	str	x1, [x9, x8]
  f8:	ldp	x9, x10, [x19]
  fc:	add	x9, x9, #0x1
 100:	add	x0, x10, x8
 104:	str	x9, [x19]
 108:	mov	w1, #0x1                   	// #1
 10c:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 110:	mov	w1, wzr
 114:	mov	x0, x11
 118:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 11c:	adrp	x0, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 124:	adrp	x3, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0xf8                  	// #248
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getRetconCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	90 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x90>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	mov	w1, wzr
  20:	bl	0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  24:	cbz	x0, b0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0xb0>
  28:	ldrb	w8, [x0, #16]
  2c:	cmp	w8, #0x50
  30:	b.ne	70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>  // b.any
  34:	ldur	x8, [x0, #-24]
  38:	cbz	x8, 70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>
  3c:	ldrb	w9, [x8, #16]
  40:	cbnz	w9, 70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>
  44:	ldrb	w9, [x8, #33]
  48:	tbz	w9, #5, 70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>
  4c:	ldr	w8, [x8, #36]
  50:	sub	w9, w8, #0x18
  54:	cmp	w9, #0x3
  58:	b.cs	70 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0x70>  // b.hs, b.nlast
  5c:	sub	w8, w8, #0x19
  60:	cmp	w8, #0x2
  64:	b.cs	d0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv+0xd0>  // b.hs, b.nlast
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  74:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  78:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x108                 	// #264
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  94:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  98:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x8c                  	// #140
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  b4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  b8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x69                  	// #105
  cc:	bl	0 <__assert_fail>
  d0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  d4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  d8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getRetconCoroIdEv>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x108                 	// #264
  ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, wzr
  10:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  14:	cbz	x0, 5c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	x0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  60:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  64:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  80:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  84:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  a0:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  a4:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst14getStorageSizeEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv:

0000000000000000 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  14:	cbz	x0, 5c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	x0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  60:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  64:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  80:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  84:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  a0:	adrp	x1, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  a4:	adrp	x3, 0 <_ZNK4llvm19AnyCoroIdRetconInst19getStorageAlignmentEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x1, #8]
  18:	and	w9, w8, #0xff
  1c:	cmp	w9, #0x10
  20:	b.hi	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.pmore
  24:	mov	w10, #0x1                   	// #1
  28:	lsl	w9, w10, w9
  2c:	mov	w10, #0x8a7e                	// #35454
  30:	mov	x20, x1
  34:	mov	x19, x0
  38:	tst	w9, w10
  3c:	b.eq	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>  // b.none
  40:	and	w9, w8, #0xff
  44:	sub	w9, w9, #0x1
  48:	cmp	w9, #0xf
  4c:	b.hi	b0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xb0>  // b.pmore
  50:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  54:	add	x10, x10, #0x0
  58:	adr	x11, 70 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x70>
  5c:	ldrb	w12, [x10, x9]
  60:	add	x11, x11, x12, lsl #2
  64:	mov	x1, xzr
  68:	mov	w0, #0x10                  	// #16
  6c:	br	x11
  70:	mov	x1, xzr
  74:	mov	w0, #0x40                  	// #64
  78:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  7c:	mov	w8, #0x6000                	// #24576
  80:	movk	w8, #0x1, lsl #16
  84:	tst	w9, w8
  88:	b.eq	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.none
  8c:	mov	x0, x20
  90:	mov	x1, xzr
  94:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  98:	tbz	w0, #0, 1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>
  9c:	ldr	w8, [x20, #8]
  a0:	and	w9, w8, #0xff
  a4:	sub	w9, w9, #0x1
  a8:	cmp	w9, #0xf
  ac:	b.ls	50 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x50>  // b.plast
  b0:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b4:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	mov	w2, #0x298                 	// #664
  c4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  c8:	mov	x1, xzr
  cc:	mov	w0, #0x80                  	// #128
  d0:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  d4:	and	w9, w8, #0xff
  d8:	cmp	w9, #0xf
  dc:	b.ne	1fc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1fc>  // b.any
  e0:	lsr	w1, w8, #8
  e4:	mov	x0, x19
  e8:	b	144 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x144>
  ec:	ldr	x21, [x20, #32]
  f0:	lsr	x8, x21, #32
  f4:	cbnz	x8, 21c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x21c>
  f8:	ldr	x1, [x20, #24]
  fc:	ldrb	w22, [x20, #40]
 100:	mov	x0, x19
 104:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 108:	tst	w1, #0xff
 10c:	b.ne	23c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x23c>  // b.any
 110:	and	x8, x21, #0x100000000
 114:	orr	x8, x8, x22, lsl #32
 118:	mul	x0, x0, x21
 11c:	lsr	x1, x8, #32
 120:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 124:	mov	x0, x19
 128:	mov	x1, x20
 12c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 130:	ldr	x8, [x0]
 134:	mov	x1, xzr
 138:	b	1c4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c4>
 13c:	mov	x0, x19
 140:	mov	w1, wzr
 144:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 148:	mov	x1, xzr
 14c:	lsl	w0, w0, #3
 150:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 154:	mov	x1, xzr
 158:	mov	w0, #0x20                  	// #32
 15c:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 160:	mov	x1, xzr
 164:	mov	w0, #0x50                  	// #80
 168:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 16c:	mov	x1, xzr
 170:	lsr	w0, w8, #8
 174:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 178:	ldp	x22, x23, [x20, #24]
 17c:	mov	x0, x19
 180:	mov	x1, x22
 184:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 188:	mov	x20, x0
 18c:	mov	x21, x1
 190:	mov	x0, x19
 194:	mov	x1, x22
 198:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 19c:	cbz	w0, 25c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x25c>
 1a0:	mov	w8, w0
 1a4:	add	x9, x20, #0x7
 1a8:	add	x9, x8, x9, lsr #3
 1ac:	sub	x9, x9, #0x1
 1b0:	udiv	x9, x9, x8
 1b4:	tst	w21, #0xff
 1b8:	mul	x8, x9, x8
 1bc:	cset	w1, ne  // ne = any
 1c0:	mul	x8, x23, x8
 1c4:	lsl	x0, x8, #3
 1c8:	ldp	x20, x19, [sp, #48]
 1cc:	ldp	x22, x21, [sp, #32]
 1d0:	ldr	x23, [sp, #16]
 1d4:	ldp	x29, x30, [sp], #64
 1d8:	ret
 1dc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e8:	add	x0, x0, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x3, x3, #0x0
 1f4:	mov	w2, #0x271                 	// #625
 1f8:	bl	0 <__assert_fail>
 1fc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 200:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 204:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 208:	add	x0, x0, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x108                 	// #264
 218:	bl	0 <__assert_fail>
 21c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 220:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 224:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 228:	add	x0, x0, #0x0
 22c:	add	x1, x1, #0x0
 230:	add	x3, x3, #0x0
 234:	mov	w2, #0x220                 	// #544
 238:	bl	0 <__assert_fail>
 23c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 240:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 244:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 248:	add	x0, x0, #0x0
 24c:	add	x1, x1, #0x0
 250:	add	x3, x3, #0x0
 254:	mov	w2, #0x7d                  	// #125
 258:	bl	0 <__assert_fail>
 25c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 260:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 264:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 268:	add	x0, x0, #0x0
 26c:	add	x1, x1, #0x0
 270:	add	x3, x3, #0x0
 274:	mov	w2, #0xc7                  	// #199
 278:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x20, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x21, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x20, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  64:	ldrb	w8, [x20, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xb8>  // b.plast
  70:	mov	w8, #0x101                 	// #257
  74:	sub	x2, x29, #0x10
  78:	add	x4, sp, #0x8
  7c:	mov	w3, #0x2                   	// #2
  80:	mov	x0, x22
  84:	mov	x1, x20
  88:	mov	x5, xzr
  8c:	stp	xzr, xzr, [sp, #8]
  90:	strh	w8, [sp, #24]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  98:	mov	w1, #0x1                   	// #1
  9c:	mov	x20, x0
  a0:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a4:	mov	x0, x21
  a8:	mov	x1, x20
  ac:	mov	x2, x19
  b0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  b4:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xd8>
  b8:	sub	x2, x29, #0x10
  bc:	mov	w3, #0x2                   	// #2
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x22
  c8:	mov	x1, x20
  cc:	mov	x5, xzr
  d0:	mov	x6, xzr
  d4:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  d8:	ldp	x20, x19, [sp, #96]
  dc:	ldp	x22, x21, [sp, #80]
  e0:	ldp	x24, x23, [sp, #64]
  e4:	ldp	x29, x30, [sp, #48]
  e8:	add	sp, sp, #0x70
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_10AllocaInstEjELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, d8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xd8>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 138 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x138>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	f8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xf8>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	8c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x8c>  // b.any
  74:	cbz	x8, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  78:	ldr	w1, [x8, #32]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  8c:	cbz	x20, b0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb0>
  90:	lsl	x8, x20, #3
  94:	ldr	x9, [x19], #8
  98:	ldr	x9, [x9]
  9c:	ldrb	w10, [x9, #8]
  a0:	cmp	w10, #0x10
  a4:	b.eq	c0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xc0>  // b.none
  a8:	subs	x8, x8, #0x8
  ac:	b.ne	94 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x94>  // b.any
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldr	x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	cbz	x9, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  c4:	ldr	w1, [x9, #32]
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldr	x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  d8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  dc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e0:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x375                 	// #885
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  fc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 100:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x108                 	// #264
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 11c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 120:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x69                  	// #105
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 13c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 140:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	cbz	x2, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xe4>
  18:	ldrb	w9, [x2, #16]
  1c:	mov	x19, x5
  20:	mov	x8, x4
  24:	mov	x20, x0
  28:	cmp	w9, #0x10
  2c:	b.ls	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x88>  // b.plast
  30:	mov	w9, #0x101                 	// #257
  34:	add	x4, sp, #0x8
  38:	mov	x0, x1
  3c:	mov	x1, x2
  40:	mov	x2, x3
  44:	mov	x3, x8
  48:	mov	x5, xzr
  4c:	stp	xzr, xzr, [sp, #8]
  50:	strh	w9, [sp, #24]
  54:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  58:	mov	w1, #0x1                   	// #1
  5c:	mov	x21, x0
  60:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  64:	mov	x0, x20
  68:	mov	x1, x21
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  74:	ldp	x20, x19, [sp, #64]
  78:	ldr	x21, [sp, #48]
  7c:	ldp	x29, x30, [sp, #32]
  80:	add	sp, sp, #0x50
  84:	ret
  88:	cbz	x8, b4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xb4>
  8c:	mov	x9, x3
  90:	mov	x10, x8
  94:	ldr	x11, [x9]
  98:	cbz	x11, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0xe4>
  9c:	ldrb	w11, [x11, #16]
  a0:	cmp	w11, #0x11
  a4:	b.cs	30 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x30>  // b.hs, b.nlast
  a8:	subs	x10, x10, #0x1
  ac:	add	x9, x9, #0x8
  b0:	b.ne	94 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE+0x94>  // b.any
  b4:	ldp	x20, x19, [sp, #64]
  b8:	ldr	x21, [sp, #48]
  bc:	ldp	x29, x30, [sp, #32]
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x1
  c8:	mov	x1, x2
  cc:	mov	x2, x3
  d0:	mov	x3, x8
  d4:	mov	x5, xzr
  d8:	mov	x6, xzr
  dc:	add	sp, sp, #0x50
  e0:	b	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  e4:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  e8:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  ec:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInBoundsGEPEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineE>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x69                  	// #105
 100:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv:

0000000000000000 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w1, #0x1                   	// #1
  10:	bl	0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  14:	cbz	x0, 5c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x5c>
  18:	ldrb	w8, [x0, #16]
  1c:	cmp	w8, #0xd
  20:	b.ne	7c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x7c>  // b.any
  24:	ldr	w20, [x0, #32]
  28:	add	x19, x0, #0x18
  2c:	cmp	w20, #0x40
  30:	b.ls	4c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x4c>  // b.plast
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  3c:	sub	w8, w20, w0
  40:	cmp	w8, #0x41
  44:	b.cs	9c <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv+0x9c>  // b.hs, b.nlast
  48:	ldr	x19, [x19]
  4c:	ldr	w0, [x19]
  50:	ldp	x20, x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret
  5c:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  60:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  64:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x69                  	// #105
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  80:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  84:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  a0:	adrp	x1, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  a4:	adrp	x3, 0 <_ZNK4llvm19CoroAllocaAllocInst12getAlignmentEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x657                 	// #1623
  b8:	bl	0 <__assert_fail>

CoroSplit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>:
       0:	sub	sp, sp, #0x30
       4:	stp	x29, x30, [sp, #32]
       8:	add	x29, sp, #0x20
       c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      10:	add	x8, x8, #0x0
      14:	add	x9, sp, #0x8
      18:	stp	x0, x8, [sp, #8]
      1c:	str	x9, [sp, #24]
      20:	adrp	x0, 0 <_ZSt15__once_callable>
      24:	ldr	x1, [x0]
      28:	add	x0, x0, #0x0
      2c:	blr	x1
      30:	mrs	x8, tpidr_el0
      34:	add	x9, sp, #0x10
      38:	str	x9, [x8, x0]
      3c:	adrp	x0, 0 <_ZSt11__once_call>
      40:	ldr	x1, [x0]
      44:	add	x0, x0, #0x0
      48:	blr	x1
      4c:	adrp	x10, 0 <__pthread_key_create>
      50:	ldr	x10, [x10]
      54:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      58:	add	x9, x9, #0x0
      5c:	str	x9, [x8, x0]
      60:	cbz	x10, 88 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE+0x88>
      64:	adrp	x1, 0 <__once_proxy>
      68:	ldr	x1, [x1]
      6c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      70:	add	x0, x0, #0x0
      74:	bl	0 <pthread_once>
      78:	cbnz	w0, 8c <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE+0x8c>
      7c:	ldp	x29, x30, [sp, #32]
      80:	add	sp, sp, #0x30
      84:	ret
      88:	mov	w0, #0xffffffff            	// #-1
      8c:	bl	0 <_ZSt20__throw_system_errori>

0000000000000090 <_ZL33initializeCoroSplitLegacyPassOnceRN4llvm12PassRegistryE>:
      90:	stp	x29, x30, [sp, #-32]!
      94:	stp	x20, x19, [sp, #16]
      98:	mov	x29, sp
      9c:	mov	x19, x0
      a0:	bl	0 <_ZN4llvm34initializeCallGraphWrapperPassPassERNS_12PassRegistryE>
      a4:	mov	w0, #0x50                  	// #80
      a8:	bl	0 <_Znwm>
      ac:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      b0:	add	x8, x8, #0x0
      b4:	mov	w9, #0x41                  	// #65
      b8:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      bc:	add	x10, x10, #0x0
      c0:	stp	x8, x9, [x0]
      c4:	mov	w8, #0xa                   	// #10
      c8:	stp	x10, x8, [x0, #16]
      cc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      d0:	add	x8, x8, #0x0
      d4:	str	x8, [x0, #32]
      d8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
      dc:	mov	x20, x0
      e0:	add	x8, x8, #0x0
      e4:	strh	wzr, [x0, #40]
      e8:	strb	wzr, [x0, #42]
      ec:	stp	xzr, xzr, [x0, #48]
      f0:	stp	xzr, x8, [x0, #64]
      f4:	mov	w2, #0x1                   	// #1
      f8:	mov	x0, x19
      fc:	mov	x1, x20
     100:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
     104:	mov	x0, x20
     108:	ldp	x20, x19, [sp, #16]
     10c:	ldp	x29, x30, [sp], #32
     110:	ret

0000000000000114 <_ZN4llvm25createCoroSplitLegacyPassEv>:
     114:	sub	sp, sp, #0x30
     118:	stp	x29, x30, [sp, #16]
     11c:	str	x19, [sp, #32]
     120:	add	x29, sp, #0x10
     124:	mov	w0, #0x20                  	// #32
     128:	bl	0 <_Znwm>
     12c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     130:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     134:	add	x8, x8, #0x0
     138:	mov	w9, #0x3                   	// #3
     13c:	add	x10, x10, #0x0
     140:	mov	x19, x0
     144:	stp	xzr, x8, [x0, #8]
     148:	str	w9, [x0, #24]
     14c:	str	x10, [x0]
     150:	strb	wzr, [x0, #28]
     154:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     158:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     15c:	add	x8, x8, #0x0
     160:	add	x9, x29, #0x18
     164:	str	x0, [x29, #24]
     168:	stp	x8, x9, [sp]
     16c:	adrp	x0, 0 <_ZSt15__once_callable>
     170:	ldr	x1, [x0]
     174:	add	x0, x0, #0x0
     178:	blr	x1
     17c:	mrs	x8, tpidr_el0
     180:	mov	x9, sp
     184:	str	x9, [x8, x0]
     188:	adrp	x0, 0 <_ZSt11__once_call>
     18c:	ldr	x1, [x0]
     190:	add	x0, x0, #0x0
     194:	blr	x1
     198:	adrp	x10, 0 <__pthread_key_create>
     19c:	ldr	x10, [x10]
     1a0:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     1a4:	add	x9, x9, #0x0
     1a8:	str	x9, [x8, x0]
     1ac:	cbz	x10, 1dc <_ZN4llvm25createCoroSplitLegacyPassEv+0xc8>
     1b0:	adrp	x1, 0 <__once_proxy>
     1b4:	ldr	x1, [x1]
     1b8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     1bc:	add	x0, x0, #0x0
     1c0:	bl	0 <pthread_once>
     1c4:	cbnz	w0, 1e0 <_ZN4llvm25createCoroSplitLegacyPassEv+0xcc>
     1c8:	mov	x0, x19
     1cc:	ldr	x19, [sp, #32]
     1d0:	ldp	x29, x30, [sp, #16]
     1d4:	add	sp, sp, #0x30
     1d8:	ret
     1dc:	mov	w0, #0xffffffff            	// #-1
     1e0:	bl	0 <_ZSt20__throw_system_errori>

00000000000001e4 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroSplitLegacyEEEPNS_4PassEv>:
     1e4:	sub	sp, sp, #0x30
     1e8:	stp	x29, x30, [sp, #16]
     1ec:	str	x19, [sp, #32]
     1f0:	add	x29, sp, #0x10
     1f4:	mov	w0, #0x20                  	// #32
     1f8:	bl	0 <_Znwm>
     1fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     200:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     204:	add	x8, x8, #0x0
     208:	mov	w9, #0x3                   	// #3
     20c:	add	x10, x10, #0x0
     210:	mov	x19, x0
     214:	stp	xzr, x8, [x0, #8]
     218:	str	w9, [x0, #24]
     21c:	str	x10, [x0]
     220:	strb	wzr, [x0, #28]
     224:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     228:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     22c:	add	x8, x8, #0x0
     230:	add	x9, x29, #0x18
     234:	str	x0, [x29, #24]
     238:	stp	x8, x9, [sp]
     23c:	adrp	x0, 0 <_ZSt15__once_callable>
     240:	ldr	x1, [x0]
     244:	add	x0, x0, #0x0
     248:	blr	x1
     24c:	mrs	x8, tpidr_el0
     250:	mov	x9, sp
     254:	str	x9, [x8, x0]
     258:	adrp	x0, 0 <_ZSt11__once_call>
     25c:	ldr	x1, [x0]
     260:	add	x0, x0, #0x0
     264:	blr	x1
     268:	adrp	x10, 0 <__pthread_key_create>
     26c:	ldr	x10, [x10]
     270:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     274:	add	x9, x9, #0x0
     278:	str	x9, [x8, x0]
     27c:	cbz	x10, 2ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroSplitLegacyEEEPNS_4PassEv+0xc8>
     280:	adrp	x1, 0 <__once_proxy>
     284:	ldr	x1, [x1]
     288:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     28c:	add	x0, x0, #0x0
     290:	bl	0 <pthread_once>
     294:	cbnz	w0, 2b0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_115CoroSplitLegacyEEEPNS_4PassEv+0xcc>
     298:	mov	x0, x19
     29c:	ldr	x19, [sp, #32]
     2a0:	ldp	x29, x30, [sp, #16]
     2a4:	add	sp, sp, #0x30
     2a8:	ret
     2ac:	mov	w0, #0xffffffff            	// #-1
     2b0:	bl	0 <_ZSt20__throw_system_errori>

00000000000002b4 <_ZN12_GLOBAL__N_115CoroSplitLegacyD0Ev>:
     2b4:	stp	x29, x30, [sp, #-32]!
     2b8:	str	x19, [sp, #16]
     2bc:	mov	x29, sp
     2c0:	mov	x19, x0
     2c4:	bl	0 <_ZN4llvm4PassD2Ev>
     2c8:	mov	x0, x19
     2cc:	ldr	x19, [sp, #16]
     2d0:	ldp	x29, x30, [sp], #32
     2d4:	b	0 <_ZdlPv>

00000000000002d8 <_ZNK12_GLOBAL__N_115CoroSplitLegacy11getPassNameEv>:
     2d8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     2dc:	add	x0, x0, #0x0
     2e0:	mov	w1, #0x13                  	// #19
     2e4:	ret

00000000000002e8 <_ZNK12_GLOBAL__N_115CoroSplitLegacy16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     2e8:	b	0 <_ZNK4llvm16CallGraphSCCPass16getAnalysisUsageERNS_13AnalysisUsageE>

00000000000002ec <_ZN12_GLOBAL__N_115CoroSplitLegacy16doInitializationERN4llvm9CallGraphE>:
     2ec:	sub	sp, sp, #0x40
     2f0:	stp	x29, x30, [sp, #32]
     2f4:	str	x19, [sp, #48]
     2f8:	add	x29, sp, #0x20
     2fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     300:	add	x8, x8, #0x0
     304:	mov	x19, x0
     308:	ldp	q0, q1, [x8]
     30c:	ldr	x0, [x1]
     310:	mov	x1, sp
     314:	mov	w2, #0x2                   	// #2
     318:	stp	q0, q1, [sp]
     31c:	bl	0 <_ZN4llvm4coro18declaresIntrinsicsERKNS_6ModuleESt16initializer_listINS_9StringRefEE>
     320:	and	w8, w0, #0x1
     324:	strb	w8, [x19, #28]
     328:	ldr	x19, [sp, #48]
     32c:	ldp	x29, x30, [sp, #32]
     330:	mov	w0, wzr
     334:	add	sp, sp, #0x40
     338:	ret

000000000000033c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE>:
     33c:	stp	d11, d10, [sp, #-128]!
     340:	stp	d9, d8, [sp, #16]
     344:	stp	x29, x30, [sp, #32]
     348:	stp	x28, x27, [sp, #48]
     34c:	stp	x26, x25, [sp, #64]
     350:	stp	x24, x23, [sp, #80]
     354:	stp	x22, x21, [sp, #96]
     358:	stp	x20, x19, [sp, #112]
     35c:	mov	x29, sp
     360:	sub	sp, sp, #0x2d0
     364:	ldrb	w8, [x0, #28]
     368:	cbz	w8, 3a8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x6c>
     36c:	ldr	x8, [x1]
     370:	mov	x20, x0
     374:	mov	x26, x1
     378:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     37c:	ldr	x0, [x8]
     380:	add	x1, x1, #0x0
     384:	mov	w2, #0x18                  	// #24
     388:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     38c:	cbz	x0, 3b0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x74>
     390:	mov	x19, x0
     394:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     398:	ldr	x8, [x19, #8]
     39c:	cmp	x8, #0x0
     3a0:	csel	x27, xzr, x19, eq  // eq = none
     3a4:	b	3b4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x78>
     3a8:	mov	w19, wzr
     3ac:	b	19ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1670>
     3b0:	mov	x27, xzr
     3b4:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     3b8:	ldr	d8, [x8]
     3bc:	add	x8, sp, #0x98
     3c0:	add	x21, x8, #0x10
     3c4:	str	x21, [sp, #152]
     3c8:	str	d8, [sp, #160]
     3cc:	mov	x19, x26
     3d0:	ldr	x23, [x19, #16]!
     3d4:	ldr	x24, [x19, #8]
     3d8:	cmp	x23, x24
     3dc:	b.eq	468 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x12c>  // b.none
     3e0:	adrp	x22, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     3e4:	add	x22, x22, #0x0
     3e8:	b	414 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd8>
     3ec:	ldr	x9, [sp, #152]
     3f0:	str	x25, [x9, w8, uxtw #3]
     3f4:	ldp	w8, w9, [sp, #160]
     3f8:	cmp	w8, w9
     3fc:	b.cs	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>  // b.hs, b.nlast
     400:	add	w8, w8, #0x1
     404:	str	w8, [sp, #160]
     408:	add	x23, x23, #0x8
     40c:	cmp	x24, x23
     410:	b.eq	45c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x120>  // b.none
     414:	ldr	x8, [x23]
     418:	ldr	x25, [x8]
     41c:	cbz	x25, 408 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcc>
     420:	add	x0, x25, #0x70
     424:	mov	w2, #0x12                  	// #18
     428:	mov	x1, x22
     42c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     430:	tbz	w0, #0, 408 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcc>
     434:	ldp	w8, w9, [sp, #160]
     438:	cmp	w8, w9
     43c:	b.cc	3ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb0>  // b.lo, b.ul, b.last
     440:	add	x0, sp, #0x98
     444:	mov	w3, #0x8                   	// #8
     448:	mov	x1, x21
     44c:	mov	x2, xzr
     450:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     454:	ldr	w8, [sp, #160]
     458:	b	3ec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb0>
     45c:	ldr	w8, [sp, #160]
     460:	cbz	x27, 470 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x134>
     464:	b	47c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x140>
     468:	mov	w8, wzr
     46c:	cbnz	x27, 47c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x140>
     470:	cbnz	w8, 47c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x140>
     474:	mov	w19, wzr
     478:	b	1994 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1658>
     47c:	ldr	x9, [x20, #8]
     480:	str	x27, [sp, #32]
     484:	cbz	x9, 1db4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1a78>
     488:	ldr	x8, [x9]
     48c:	ldr	x9, [x9, #8]
     490:	cmp	x8, x9
     494:	b.eq	1d94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1a58>  // b.none
     498:	adrp	x10, 0 <_ZN4llvm20CallGraphWrapperPass2IDE>
     49c:	ldr	x10, [x10]
     4a0:	mov	x0, xzr
     4a4:	ldp	x11, x12, [x8]
     4a8:	cmp	x11, x10
     4ac:	csel	x0, x12, x0, eq  // eq = none
     4b0:	b.eq	4c0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x184>  // b.none
     4b4:	add	x8, x8, #0x10
     4b8:	cmp	x8, x9
     4bc:	b.ne	4a4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x168>  // b.any
     4c0:	cbz	x0, 1d94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1a58>
     4c4:	ldr	x8, [x0]
     4c8:	adrp	x1, 0 <_ZN4llvm20CallGraphWrapperPass2IDE>
     4cc:	ldr	x8, [x8, #96]
     4d0:	ldr	x1, [x1]
     4d4:	blr	x8
     4d8:	ldr	w8, [sp, #160]
     4dc:	ldr	x25, [x0, #32]
     4e0:	cbz	w8, 1984 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1648>
     4e4:	ldr	x21, [x25]
     4e8:	adrp	x22, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     4ec:	add	x22, x22, #0x0
     4f0:	mov	w2, #0x13                  	// #19
     4f4:	mov	x0, x21
     4f8:	mov	x1, x22
     4fc:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     500:	cbnz	x0, 690 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x354>
     504:	ldr	x20, [x21]
     508:	mov	x0, x20
     50c:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     510:	mov	x23, x0
     514:	mov	x0, x20
     518:	mov	w1, wzr
     51c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     520:	str	x0, [sp, #200]
     524:	add	x1, sp, #0xc8
     528:	mov	w2, #0x1                   	// #1
     52c:	mov	x0, x23
     530:	mov	w3, wzr
     534:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     538:	mov	x23, x0
     53c:	mov	w24, #0x103                 	// #259
     540:	mov	w0, #0x78                  	// #120
     544:	stp	x22, xzr, [sp, #200]
     548:	strh	w24, [sp, #216]
     54c:	bl	0 <_ZN4llvm4UsernwEm>
     550:	add	x4, sp, #0xc8
     554:	mov	w2, #0x8                   	// #8
     558:	mov	w3, #0xffffffff            	// #-1
     55c:	mov	x1, x23
     560:	mov	x5, x21
     564:	mov	x22, x0
     568:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
     56c:	mov	w1, #0xffffffff            	// #-1
     570:	mov	w2, #0x3                   	// #3
     574:	mov	x0, x22
     578:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9Attribute8AttrKindE>
     57c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     580:	add	x8, x8, #0x0
     584:	mov	w0, #0x40                  	// #64
     588:	stp	x8, xzr, [sp, #200]
     58c:	strh	w24, [sp, #216]
     590:	bl	0 <_Znwm>
     594:	add	x2, sp, #0xc8
     598:	mov	x1, x20
     59c:	mov	x3, x22
     5a0:	mov	x4, xzr
     5a4:	mov	x21, x0
     5a8:	add	x23, sp, #0xc8
     5ac:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
     5b0:	mov	w0, #0x38                  	// #56
     5b4:	mov	w1, wzr
     5b8:	bl	0 <_ZN4llvm4UsernwEmj>
     5bc:	mov	x1, x20
     5c0:	mov	x2, x21
     5c4:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_10BasicBlockE>
     5c8:	mov	x0, x25
     5cc:	mov	x1, x22
     5d0:	bl	0 <_ZN4llvm9CallGraph19getOrInsertFunctionEPKNS_8FunctionE>
     5d4:	ldp	x22, x8, [x26, #16]
     5d8:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     5dc:	ldr	d0, [x9]
     5e0:	add	x21, x23, #0x10
     5e4:	sub	x24, x8, x22
     5e8:	asr	x23, x24, #3
     5ec:	mov	x20, x0
     5f0:	cmp	x23, #0x9
     5f4:	str	x21, [sp, #200]
     5f8:	str	d0, [sp, #208]
     5fc:	b.cc	614 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x2d8>  // b.lo, b.ul, b.last
     600:	add	x0, sp, #0xc8
     604:	mov	w3, #0x8                   	// #8
     608:	mov	x1, x21
     60c:	mov	x2, x23
     610:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     614:	cbz	x24, 630 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x2f4>
     618:	ldr	x8, [sp, #200]
     61c:	ldr	w9, [sp, #208]
     620:	mov	x1, x22
     624:	mov	x2, x24
     628:	add	x0, x8, x9, lsl #3
     62c:	bl	0 <memmove>
     630:	ldp	w8, w9, [sp, #208]
     634:	add	x8, x23, x8
     638:	cmp	x8, x9
     63c:	b.hi	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>  // b.pmore
     640:	cmp	w9, w8
     644:	str	w8, [sp, #208]
     648:	b.ls	19d8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x169c>  // b.plast
     64c:	ldr	x9, [sp, #200]
     650:	str	x20, [x9, w8, uxtw #3]
     654:	ldp	w8, w9, [sp, #208]
     658:	cmp	w8, w9
     65c:	b.cs	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>  // b.hs, b.nlast
     660:	ldr	x1, [sp, #200]
     664:	add	x8, x8, #0x1
     668:	mov	x0, x19
     66c:	str	w8, [sp, #208]
     670:	add	x2, x1, x8, lsl #3
     674:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     678:	ldr	x0, [sp, #200]
     67c:	add	x8, sp, #0xc8
     680:	add	x8, x8, #0x10
     684:	cmp	x0, x8
     688:	b.eq	690 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x354>  // b.none
     68c:	bl	0 <free>
     690:	ldr	w8, [sp, #160]
     694:	cbz	w8, 196c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1630>
     698:	add	x9, sp, #0xc8
     69c:	add	x15, x9, #0x18
     6a0:	add	x12, x25, #0x8
     6a4:	str	x15, [sp, #112]
     6a8:	add	x15, x9, #0x48
     6ac:	str	x12, [sp, #48]
     6b0:	add	x12, x25, #0x10
     6b4:	str	x15, [sp, #104]
     6b8:	add	x15, x9, #0x58
     6bc:	ldr	x24, [sp, #152]
     6c0:	sub	x10, x29, #0x88
     6c4:	str	x12, [sp, #40]
     6c8:	adrp	x12, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     6cc:	adrp	x13, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     6d0:	adrp	x14, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     6d4:	str	x15, [sp, #8]
     6d8:	add	x15, x9, #0x68
     6dc:	add	x9, x9, #0x98
     6e0:	sub	x11, x29, #0xd8
     6e4:	str	x9, [sp, #96]
     6e8:	ldr	d9, [x12]
     6ec:	add	x9, x10, #0x28
     6f0:	ldr	d10, [x13]
     6f4:	ldr	d11, [x14]
     6f8:	str	x9, [sp, #80]
     6fc:	add	x9, x11, #0x10
     700:	adrp	x27, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     704:	str	x9, [sp, #136]
     708:	add	x9, x10, #0x30
     70c:	mov	w23, #0x1                   	// #1
     710:	add	x27, x27, #0x0
     714:	str	x9, [sp, #24]
     718:	add	x9, x10, #0x8
     71c:	add	x8, x24, x8, lsl #3
     720:	str	x15, [sp, #120]
     724:	str	x9, [sp, #16]
     728:	str	x8, [sp, #88]
     72c:	stp	x25, x26, [sp, #56]
     730:	b	74c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x410>
     734:	add	x0, sp, #0x1b8
     738:	bl	0 <_ZN4llvm21PrettyStackTraceEntryD2Ev>
     73c:	ldr	x8, [sp, #88]
     740:	add	x24, x24, #0x8
     744:	cmp	x24, x8
     748:	b.eq	196c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1630>  // b.none
     74c:	ldr	x28, [x24]
     750:	mov	w1, #0xffffffff            	// #-1
     754:	mov	w3, #0x12                  	// #18
     758:	mov	x2, x27
     75c:	add	x0, x28, #0x70
     760:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     764:	str	x0, [sp, #144]
     768:	add	x0, sp, #0x90
     76c:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     770:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     774:	ldr	x8, [x8]
     778:	mov	x19, x0
     77c:	mov	x20, x1
     780:	ldrb	w8, [x8]
     784:	cbz	w8, 8bc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x580>
     788:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     78c:	add	x0, x0, #0x0
     790:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     794:	tbz	w0, #0, 8bc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x580>
     798:	bl	0 <_ZN4llvm4dbgsEv>
     79c:	ldp	x9, x8, [x0, #16]
     7a0:	mov	x22, x0
     7a4:	sub	x9, x9, x8
     7a8:	cmp	x9, #0x20
     7ac:	b.hi	7cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x490>  // b.pmore
     7b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     7b4:	mov	w2, #0x21                  	// #33
     7b8:	mov	x0, x22
     7bc:	add	x1, x1, #0x0
     7c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7c4:	mov	x22, x0
     7c8:	b	7f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x4b4>
     7cc:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     7d0:	add	x9, x9, #0x0
     7d4:	ldp	q1, q0, [x9]
     7d8:	mov	w9, #0x27                  	// #39
     7dc:	strb	w9, [x8, #32]
     7e0:	stp	q1, q0, [x8]
     7e4:	ldr	x8, [x22, #24]
     7e8:	add	x8, x8, #0x21
     7ec:	str	x8, [x22, #24]
     7f0:	mov	x0, x28
     7f4:	bl	0 <_ZNK4llvm5Value7getNameEv>
     7f8:	ldp	x9, x8, [x22, #16]
     7fc:	mov	x21, x1
     800:	sub	x9, x9, x8
     804:	cmp	x1, x9
     808:	mov	x1, x0
     80c:	b.ls	828 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x4ec>  // b.plast
     810:	mov	x0, x22
     814:	mov	x2, x21
     818:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     81c:	ldr	x8, [x0, #24]
     820:	mov	x22, x0
     824:	b	844 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x508>
     828:	cbz	x21, 844 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x508>
     82c:	mov	x0, x8
     830:	mov	x2, x21
     834:	bl	0 <memcpy>
     838:	ldr	x8, [x22, #24]
     83c:	add	x8, x8, x21
     840:	str	x8, [x22, #24]
     844:	ldr	x9, [x22, #16]
     848:	sub	x9, x9, x8
     84c:	cmp	x9, #0x8
     850:	b.hi	a7c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x740>  // b.pmore
     854:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     858:	mov	w2, #0x9                   	// #9
     85c:	mov	x0, x22
     860:	add	x1, x1, #0x0
     864:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     868:	mov	x22, x0
     86c:	ldr	x0, [x0, #24]
     870:	ldr	x8, [x22, #16]
     874:	sub	x8, x8, x0
     878:	cmp	x20, x8
     87c:	b.hi	ab0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x774>  // b.pmore
     880:	cbz	x20, 89c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x560>
     884:	mov	x1, x19
     888:	mov	x2, x20
     88c:	bl	0 <memcpy>
     890:	ldr	x8, [x22, #24]
     894:	add	x0, x8, x20
     898:	str	x0, [x22, #24]
     89c:	ldr	x8, [x22, #16]
     8a0:	cmp	x8, x0
     8a4:	b.ne	ad4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x798>  // b.any
     8a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     8ac:	mov	w2, #0x1                   	// #1
     8b0:	mov	x0, x22
     8b4:	add	x1, x1, #0x0
     8b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8bc:	cmp	x20, #0x1
     8c0:	b.ne	af0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x7b4>  // b.any
     8c4:	ldrb	w8, [x19]
     8c8:	cmp	w8, #0x30
     8cc:	b.ne	af0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x7b4>  // b.any
     8d0:	ldr	x20, [x28, #40]
     8d4:	mov	x0, x28
     8d8:	bl	0 <_ZNK4llvm8Function10getContextEv>
     8dc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     8e0:	mov	x19, x0
     8e4:	mov	w2, #0x13                  	// #19
     8e8:	mov	x0, x20
     8ec:	add	x1, x1, #0x0
     8f0:	bl	0 <_ZNK4llvm6Module11getFunctionENS_9StringRefE>
     8f4:	cbz	x0, 1d34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x19f8>
     8f8:	mov	x0, x28
     8fc:	bl	0 <_ZNK4llvm8Function10getContextEv>
     900:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     904:	mov	w2, #0x12                  	// #18
     908:	mov	w4, #0x1                   	// #1
     90c:	mov	x1, x27
     910:	add	x3, x3, #0x0
     914:	bl	0 <_ZN4llvm9Attribute3getERNS_11LLVMContextENS_9StringRefES3_>
     918:	mov	x2, x0
     91c:	mov	w1, #0xffffffff            	// #-1
     920:	mov	x0, x28
     924:	bl	0 <_ZN4llvm8Function12addAttributeEjNS_9AttributeE>
     928:	add	x0, sp, #0xc8
     92c:	mov	x1, x20
     930:	bl	0 <_ZN4llvm4coro11LowererBaseC1ERNS_6ModuleE>
     934:	ldr	x8, [x28, #80]
     938:	ldrb	w9, [x8]
     93c:	tbnz	w9, #2, 1d54 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1a18>
     940:	sub	x9, x8, #0x18
     944:	cmp	x8, #0x0
     948:	csel	x0, xzr, x9, eq  // eq = none
     94c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     950:	mov	x20, x0
     954:	mov	x0, x19
     958:	mov	w1, wzr
     95c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     960:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
     964:	mov	x21, x0
     968:	add	x0, sp, #0xc8
     96c:	mov	w2, #0xffffffff            	// #-1
     970:	mov	x1, x21
     974:	mov	x3, x20
     978:	bl	0 <_ZN4llvm4coro11LowererBase13makeSubFnCallEPNS_5ValueEiPNS_11InstructionE>
     97c:	mov	x22, x0
     980:	mov	x0, x19
     984:	bl	0 <_ZN4llvm4Type9getVoidTyERNS_11LLVMContextE>
     988:	mov	x23, x0
     98c:	mov	x0, x19
     990:	mov	w1, wzr
     994:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
     998:	stur	x0, [x29, #-136]
     99c:	sub	x1, x29, #0x88
     9a0:	mov	w2, #0x1                   	// #1
     9a4:	mov	x0, x23
     9a8:	mov	w3, wzr
     9ac:	bl	0 <_ZN4llvm12FunctionType3getEPNS_4TypeENS_8ArrayRefIS2_EEb>
     9b0:	mov	x23, x0
     9b4:	mov	w8, #0x101                 	// #257
     9b8:	mov	w0, #0x48                  	// #72
     9bc:	mov	w1, #0x2                   	// #2
     9c0:	stur	x21, [x29, #-216]
     9c4:	stp	xzr, xzr, [x29, #-136]
     9c8:	sturh	w8, [x29, #-120]
     9cc:	bl	0 <_ZN4llvm4UsernwEmj>
     9d0:	ldr	x8, [x23, #16]
     9d4:	sub	x3, x0, #0x30
     9d8:	mov	w2, #0x38                  	// #56
     9dc:	mov	w4, #0x2                   	// #2
     9e0:	ldr	x1, [x8]
     9e4:	mov	x5, x20
     9e8:	mov	x19, x0
     9ec:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
     9f0:	sub	x3, x29, #0xd8
     9f4:	sub	x7, x29, #0x88
     9f8:	mov	w4, #0x1                   	// #1
     9fc:	mov	x0, x19
     a00:	mov	x1, x23
     a04:	mov	x2, x22
     a08:	mov	x5, xzr
     a0c:	mov	x6, xzr
     a10:	str	xzr, [x19, #56]
     a14:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
     a18:	ldp	x13, x8, [sp, #40]
     a1c:	mov	w23, #0x1                   	// #1
     a20:	ldr	x9, [x8, #16]
     a24:	cbz	x9, 1cd4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1998>
     a28:	mov	x8, x13
     a2c:	ldr	x10, [x9, #32]
     a30:	add	x11, x9, #0x18
     a34:	add	x12, x9, #0x10
     a38:	cmp	x10, x28
     a3c:	csel	x8, x8, x9, cc  // cc = lo, ul, last
     a40:	csel	x9, x11, x12, cc  // cc = lo, ul, last
     a44:	ldr	x9, [x9]
     a48:	cbnz	x9, a2c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x6f0>
     a4c:	cmp	x8, x13
     a50:	b.eq	1cd4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1998>  // b.none
     a54:	ldr	x9, [x8, #32]
     a58:	cmp	x9, x28
     a5c:	csel	x8, x13, x8, hi  // hi = pmore
     a60:	cmp	x8, x13
     a64:	b.eq	1cd4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1998>  // b.none
     a68:	ldr	x0, [x8, #40]
     a6c:	ldr	x2, [x25, #64]
     a70:	mov	x1, x19
     a74:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a78:	b	73c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x400>
     a7c:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     a80:	add	x9, x9, #0x0
     a84:	ldr	x9, [x9]
     a88:	mov	w10, #0x20                  	// #32
     a8c:	strb	w10, [x8, #8]
     a90:	str	x9, [x8]
     a94:	ldr	x8, [x22, #24]
     a98:	add	x0, x8, #0x9
     a9c:	str	x0, [x22, #24]
     aa0:	ldr	x8, [x22, #16]
     aa4:	sub	x8, x8, x0
     aa8:	cmp	x20, x8
     aac:	b.ls	880 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x544>  // b.plast
     ab0:	mov	x0, x22
     ab4:	mov	x1, x19
     ab8:	mov	x2, x20
     abc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ac0:	mov	x22, x0
     ac4:	ldr	x0, [x0, #24]
     ac8:	ldr	x8, [x22, #16]
     acc:	cmp	x8, x0
     ad0:	b.eq	8a8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x56c>  // b.none
     ad4:	mov	w8, #0xa                   	// #10
     ad8:	strb	w8, [x0]
     adc:	ldr	x8, [x22, #24]
     ae0:	add	x8, x8, #0x1
     ae4:	str	x8, [x22, #24]
     ae8:	cmp	x20, #0x1
     aec:	b.eq	8c4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x588>  // b.none
     af0:	ldr	x8, [x28, #112]
     af4:	mov	x0, x28
     af8:	str	x8, [sp, #200]
     afc:	bl	0 <_ZNK4llvm8Function10getContextEv>
     b00:	mov	x1, x0
     b04:	add	x0, sp, #0xc8
     b08:	mov	w2, #0xffffffff            	// #-1
     b0c:	mov	w4, #0x12                  	// #18
     b10:	mov	x3, x27
     b14:	bl	0 <_ZNK4llvm13AttributeList15removeAttributeERNS_11LLVMContextEjNS_9StringRefE>
     b18:	str	x0, [x28, #112]
     b1c:	add	x0, sp, #0x1b8
     b20:	bl	0 <_ZN4llvm21PrettyStackTraceEntryC2Ev>
     b24:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     b28:	add	x8, x8, #0x0
     b2c:	mov	x0, x28
     b30:	mov	x1, xzr
     b34:	mov	x2, xzr
     b38:	str	x8, [sp, #440]
     b3c:	str	x28, [sp, #456]
     b40:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
     b44:	ldr	x8, [sp, #112]
     b48:	add	x0, sp, #0xc8
     b4c:	mov	x1, x28
     b50:	str	d8, [sp, #216]
     b54:	str	x8, [sp, #208]
     b58:	ldr	x8, [sp, #104]
     b5c:	str	d9, [sp, #264]
     b60:	str	d8, [sp, #296]
     b64:	str	d9, [sp, #344]
     b68:	str	x8, [sp, #256]
     b6c:	ldr	x8, [sp, #120]
     b70:	str	x8, [sp, #288]
     b74:	ldr	x8, [sp, #96]
     b78:	str	x8, [sp, #336]
     b7c:	bl	0 <_ZN4llvm4coro5Shape9buildFromERNS_8FunctionE>
     b80:	ldr	x8, [sp, #200]
     b84:	cbz	x8, 1918 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15dc>
     b88:	ldr	w8, [sp, #368]
     b8c:	str	x24, [sp, #72]
     b90:	str	x28, [sp, #128]
     b94:	cbnz	w8, 1528 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x11ec>
     b98:	ldr	w24, [sp, #296]
     b9c:	cbz	w24, 1528 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x11ec>
     ba0:	mov	x27, xzr
     ba4:	ldr	x8, [sp, #288]
     ba8:	ldr	x26, [x8, x27, lsl #3]
     bac:	cbz	x26, 1af4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17b8>
     bb0:	ldur	x8, [x26, #-24]
     bb4:	ldrb	w9, [x8, #16]
     bb8:	cmp	w9, #0x0
     bbc:	csel	x8, x8, xzr, eq  // eq = none
     bc0:	ldr	w8, [x8, #36]
     bc4:	cmp	w8, #0x23
     bc8:	b.ne	1b34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17f8>  // b.any
     bcc:	ldr	x0, [x26, #40]
     bd0:	ldr	x19, [sp, #200]
     bd4:	add	x8, x26, #0x18
     bd8:	ldr	x9, [x0, #48]
     bdc:	cmp	x9, x8
     be0:	b.eq	c0c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x8d0>  // b.none
     be4:	ldr	x8, [x8]
     be8:	and	x8, x8, #0xfffffffffffffff8
     bec:	ldrb	w9, [x8]
     bf0:	tbnz	w9, #2, 1a34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16f8>
     bf4:	cbz	x8, c0c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x8d0>
     bf8:	sub	x0, x8, #0x18
     bfc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c00:	cmp	x0, #0x8
     c04:	b.cs	c24 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x8e8>  // b.hs, b.nlast
     c08:	b	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>
     c0c:	bl	0 <_ZNK4llvm10BasicBlock20getSinglePredecessorEv>
     c10:	cbz	x0, 149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>
     c14:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
     c18:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c1c:	cmp	x0, #0x8
     c20:	b.cc	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.lo, b.ul, b.last
     c24:	ands	x20, x0, #0xfffffffffffffff8
     c28:	b.eq	1b54 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1818>  // b.none
     c2c:	ldrb	w8, [x20, #16]
     c30:	sub	w8, w8, #0x1d
     c34:	cmp	w8, #0x33
     c38:	b.hi	1ab4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1778>  // b.pmore
     c3c:	mov	x9, #0x41                  	// #65
     c40:	lsl	x8, x23, x8
     c44:	movk	x9, #0x8, lsl #48
     c48:	tst	x8, x9
     c4c:	b.eq	1ab4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1778>  // b.none
     c50:	ldur	x0, [x20, #-24]
     c54:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
     c58:	cbz	x0, 1b74 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1838>
     c5c:	ldrb	w8, [x0, #16]
     c60:	mov	x25, x0
     c64:	cmp	w8, #0x50
     c68:	b.ne	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.any
     c6c:	ldur	x8, [x25, #-24]
     c70:	cbz	x8, 149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>
     c74:	ldrb	w9, [x8, #16]
     c78:	cbnz	w9, 149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>
     c7c:	ldrb	w9, [x8, #33]
     c80:	tbz	w9, #5, 149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>
     c84:	ldr	w8, [x8, #36]
     c88:	cmp	w8, #0x22
     c8c:	b.ne	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.any
     c90:	mov	x0, x25
     c94:	mov	w1, wzr
     c98:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     c9c:	cmp	x0, x19
     ca0:	b.ne	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.any
     ca4:	mov	x0, x26
     ca8:	mov	w1, wzr
     cac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     cb0:	cbz	x0, 1b94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1858>
     cb4:	ldrb	w8, [x0, #16]
     cb8:	mov	x19, x0
     cbc:	cmp	w8, #0x10
     cc0:	b.eq	cf4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x9b8>  // b.none
     cc4:	cmp	w8, #0x50
     cc8:	b.ne	1ad4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1798>  // b.any
     ccc:	ldur	x8, [x19, #-24]
     cd0:	cbz	x8, 1ad4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1798>
     cd4:	ldrb	w9, [x8, #16]
     cd8:	cbnz	w9, 1ad4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1798>
     cdc:	ldrb	w9, [x8, #33]
     ce0:	tbz	w9, #5, 1ad4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1798>
     ce4:	ldr	w8, [x8, #36]
     ce8:	cmp	w8, #0x20
     cec:	b.eq	cf8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x9bc>  // b.none
     cf0:	b	1ad4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1798>
     cf4:	mov	x19, xzr
     cf8:	ldp	x8, x28, [x19, #32]
     cfc:	ldr	x22, [x20, #40]
     d00:	add	x9, x28, #0x28
     d04:	cmp	x9, x8
     d08:	b.eq	d2c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x9f0>  // b.none
     d0c:	ldrb	w9, [x8]
     d10:	tbnz	w9, #2, 1a34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16f8>
     d14:	sub	x9, x8, #0x18
     d18:	cmp	x8, #0x0
     d1c:	csel	x21, xzr, x9, eq  // eq = none
     d20:	cmp	x28, x22
     d24:	b.ne	d38 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x9fc>  // b.any
     d28:	b	1048 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd0c>
     d2c:	mov	x21, xzr
     d30:	cmp	x28, x22
     d34:	b.eq	1048 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd0c>  // b.none
     d38:	cbz	x21, d90 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa54>
     d3c:	ldrb	w8, [x21, #16]
     d40:	cmp	w8, #0x50
     d44:	b.ne	d60 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa24>  // b.any
     d48:	ldur	x8, [x21, #-24]
     d4c:	cbz	x8, d60 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa24>
     d50:	ldrb	w9, [x8, #16]
     d54:	cbnz	w9, d60 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa24>
     d58:	ldrb	w8, [x8, #33]
     d5c:	tbnz	w8, #5, d70 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa34>
     d60:	mov	x0, x21
     d64:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     d68:	cmp	x0, #0x7
     d6c:	b.hi	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.pmore
     d70:	ldp	x8, x9, [x21, #32]
     d74:	add	x9, x9, #0x28
     d78:	cmp	x9, x8
     d7c:	b.eq	d90 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa54>  // b.none
     d80:	ldrb	w9, [x8]
     d84:	tbnz	w9, #2, 1a34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16f8>
     d88:	sub	x21, x8, #0x18
     d8c:	cbnz	x8, d3c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa00>
     d90:	mov	x0, x22
     d94:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
     d98:	cmp	x0, x20
     d9c:	b.eq	e18 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xadc>  // b.none
     da0:	mov	x21, x0
     da4:	b	db4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa78>
     da8:	mov	x21, xzr
     dac:	cmp	x21, x20
     db0:	b.eq	e18 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xadc>  // b.none
     db4:	cbz	x21, 1a54 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1718>
     db8:	ldrb	w8, [x21, #16]
     dbc:	cmp	w8, #0x50
     dc0:	b.ne	ddc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xaa0>  // b.any
     dc4:	ldur	x8, [x21, #-24]
     dc8:	cbz	x8, ddc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xaa0>
     dcc:	ldrb	w9, [x8, #16]
     dd0:	cbnz	w9, ddc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xaa0>
     dd4:	ldrb	w8, [x8, #33]
     dd8:	tbnz	w8, #5, dec <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xab0>
     ddc:	mov	x0, x21
     de0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     de4:	cmp	x0, #0x7
     de8:	b.hi	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.pmore
     dec:	ldp	x8, x9, [x21, #32]
     df0:	add	x9, x9, #0x28
     df4:	cmp	x9, x8
     df8:	b.eq	da8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa6c>  // b.none
     dfc:	ldrb	w9, [x8]
     e00:	tbnz	w9, #2, 1a34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16f8>
     e04:	sub	x9, x8, #0x18
     e08:	cmp	x8, #0x0
     e0c:	csel	x21, xzr, x9, eq  // eq = none
     e10:	cmp	x21, x20
     e14:	b.ne	db4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xa78>  // b.any
     e18:	ldr	x8, [sp, #80]
     e1c:	sub	x0, x29, #0x88
     e20:	mov	x1, x28
     e24:	stur	d10, [x29, #-112]
     e28:	stp	xzr, x8, [x29, #-136]
     e2c:	stur	x8, [x29, #-120]
     e30:	ldr	x8, [sp, #136]
     e34:	stur	wzr, [x29, #-104]
     e38:	stur	d11, [x29, #-208]
     e3c:	stur	x8, [x29, #-216]
     e40:	sub	x8, x29, #0x100
     e44:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e48:	ldp	w8, w9, [x29, #-208]
     e4c:	cmp	w8, w9
     e50:	b.cs	1480 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1144>  // b.hs, b.nlast
     e54:	ldur	x9, [x29, #-216]
     e58:	str	x22, [x9, w8, uxtw #3]
     e5c:	ldp	w8, w10, [x29, #-208]
     e60:	cmp	w8, w10
     e64:	b.cs	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>  // b.hs, b.nlast
     e68:	add	x9, x8, #0x1
     e6c:	cmp	x8, x10
     e70:	stur	w9, [x29, #-208]
     e74:	b.hi	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>  // b.pmore
     e78:	ldur	x10, [x29, #-216]
     e7c:	sub	x0, x29, #0x88
     e80:	add	x9, x10, x9, lsl #3
     e84:	ldur	x21, [x9, #-8]
     e88:	stur	w8, [x29, #-208]
     e8c:	sub	x8, x29, #0x100
     e90:	mov	x1, x21
     e94:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
     e98:	mov	x0, x21
     e9c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     ea0:	ldr	x23, [x21, #8]
     ea4:	cbnz	x23, eb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb78>
     ea8:	b	ed8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb9c>
     eac:	ldr	x23, [x23, #8]
     eb0:	cbz	x23, 1028 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcec>
     eb4:	mov	x0, x23
     eb8:	bl	0 <_ZNK4llvm3Use7getUserEv>
     ebc:	cbz	x0, 19f4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16b8>
     ec0:	ldrb	w8, [x0, #16]
     ec4:	cmp	w8, #0x18
     ec8:	b.cc	eac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb70>  // b.lo, b.ul, b.last
     ecc:	sub	w8, w8, #0x19
     ed0:	cmp	w8, #0xb
     ed4:	b.cs	eac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb70>  // b.hs, b.nlast
     ed8:	cbz	x23, 1028 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcec>
     edc:	mov	x0, x23
     ee0:	bl	0 <_ZNK4llvm3Use7getUserEv>
     ee4:	cbz	x0, 19f4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16b8>
     ee8:	ldrb	w8, [x0, #16]
     eec:	cmp	w8, #0x18
     ef0:	b.cc	1a94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1758>  // b.lo, b.ul, b.last
     ef4:	ldp	x9, x8, [x29, #-128]
     ef8:	ldr	x21, [x0, #40]
     efc:	cmp	x8, x9
     f00:	b.eq	f34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xbf8>  // b.none
     f04:	sub	x0, x29, #0x88
     f08:	mov	x1, x21
     f0c:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
     f10:	ldr	x9, [x0]
     f14:	ldp	x8, x10, [x29, #-128]
     f18:	cmp	x9, x21
     f1c:	b.eq	f64 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc28>  // b.none
     f20:	ldp	w11, w9, [x29, #-112]
     f24:	cmp	x10, x8
     f28:	csel	w11, w9, w11, eq  // eq = none
     f2c:	add	x0, x10, w11, uxtw #3
     f30:	b	f74 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc38>
     f34:	ldur	w9, [x29, #-108]
     f38:	add	x0, x8, w9, uxtw #3
     f3c:	cbz	w9, f70 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc34>
     f40:	mov	x10, xzr
     f44:	lsl	x11, x9, #3
     f48:	ldr	x12, [x8, x10]
     f4c:	cmp	x12, x21
     f50:	b.eq	f6c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc30>  // b.none
     f54:	add	x10, x10, #0x8
     f58:	cmp	x11, x10
     f5c:	b.ne	f48 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc0c>  // b.any
     f60:	b	f70 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc34>
     f64:	ldur	w9, [x29, #-108]
     f68:	b	f74 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc38>
     f6c:	add	x0, x8, x10
     f70:	mov	x10, x8
     f74:	ldur	w11, [x29, #-112]
     f78:	cmp	x10, x8
     f7c:	csel	w8, w9, w11, eq  // eq = none
     f80:	add	x8, x10, w8, uxtw #3
     f84:	cmp	x8, x0
     f88:	b.cc	1a74 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1738>  // b.lo, b.ul, b.last
     f8c:	b.eq	fac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc70>  // b.none
     f90:	ldr	x9, [x0]
     f94:	cmn	x9, #0x2
     f98:	b.cc	fac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc70>  // b.lo, b.ul, b.last
     f9c:	add	x0, x0, #0x8
     fa0:	cmp	x8, x0
     fa4:	b.ne	f90 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc54>  // b.any
     fa8:	b	fb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc78>
     fac:	cmp	x0, x8
     fb0:	b.ne	fdc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xca0>  // b.any
     fb4:	ldp	w8, w9, [x29, #-208]
     fb8:	cmp	w8, w9
     fbc:	b.cs	100c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcd0>  // b.hs, b.nlast
     fc0:	ldur	x9, [x29, #-216]
     fc4:	str	x21, [x9, w8, uxtw #3]
     fc8:	ldp	w8, w9, [x29, #-208]
     fcc:	cmp	w8, w9
     fd0:	b.cs	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>  // b.hs, b.nlast
     fd4:	add	w8, w8, #0x1
     fd8:	stur	w8, [x29, #-208]
     fdc:	ldr	x23, [x23, #8]
     fe0:	cbz	x23, 1028 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xcec>
     fe4:	mov	x0, x23
     fe8:	bl	0 <_ZNK4llvm3Use7getUserEv>
     fec:	cbz	x0, 19f4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16b8>
     ff0:	ldrb	w8, [x0, #16]
     ff4:	cmp	w8, #0x18
     ff8:	b.cc	fdc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xca0>  // b.lo, b.ul, b.last
     ffc:	sub	w8, w8, #0x19
    1000:	cmp	w8, #0xb
    1004:	b.cs	fdc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xca0>  // b.hs, b.nlast
    1008:	b	ef4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xbb8>
    100c:	ldr	x1, [sp, #136]
    1010:	sub	x0, x29, #0xd8
    1014:	mov	w3, #0x8                   	// #8
    1018:	mov	x2, xzr
    101c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1020:	ldur	w8, [x29, #-208]
    1024:	b	fc0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xc84>
    1028:	ldur	w9, [x29, #-208]
    102c:	cbz	w9, 10b8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd7c>
    1030:	ldur	w10, [x29, #-204]
    1034:	sub	x8, x9, #0x1
    1038:	cmp	x8, x10
    103c:	b.ls	e78 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb3c>  // b.plast
    1040:	b	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>
    1044:	mov	x21, xzr
    1048:	cmp	x21, x20
    104c:	b.eq	134c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1010>  // b.none
    1050:	cbz	x21, 1a54 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1718>
    1054:	ldrb	w8, [x21, #16]
    1058:	cmp	w8, #0x50
    105c:	b.ne	1078 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd3c>  // b.any
    1060:	ldur	x8, [x21, #-24]
    1064:	cbz	x8, 1078 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd3c>
    1068:	ldrb	w9, [x8, #16]
    106c:	cbnz	w9, 1078 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd3c>
    1070:	ldrb	w8, [x8, #33]
    1074:	tbnz	w8, #5, 1088 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd4c>
    1078:	mov	x0, x21
    107c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1080:	cmp	x0, #0x7
    1084:	b.hi	149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>  // b.pmore
    1088:	ldp	x8, x9, [x21, #32]
    108c:	add	x9, x9, #0x28
    1090:	cmp	x9, x8
    1094:	b.eq	1044 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd08>  // b.none
    1098:	ldrb	w9, [x8]
    109c:	tbnz	w9, #2, 1a34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16f8>
    10a0:	sub	x9, x8, #0x18
    10a4:	cmp	x8, #0x0
    10a8:	csel	x21, xzr, x9, eq  // eq = none
    10ac:	cmp	x21, x20
    10b0:	b.ne	1050 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xd14>  // b.any
    10b4:	b	134c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1010>
    10b8:	ldp	x9, x8, [x29, #-128]
    10bc:	cmp	x8, x9
    10c0:	b.eq	10f4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdb8>  // b.none
    10c4:	sub	x0, x29, #0x88
    10c8:	mov	x1, x28
    10cc:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
    10d0:	ldr	x9, [x0]
    10d4:	ldp	x8, x10, [x29, #-128]
    10d8:	cmp	x9, x28
    10dc:	b.eq	1124 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xde8>  // b.none
    10e0:	ldp	w11, w9, [x29, #-112]
    10e4:	cmp	x10, x8
    10e8:	csel	w11, w9, w11, eq  // eq = none
    10ec:	add	x0, x10, w11, uxtw #3
    10f0:	b	1134 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdf8>
    10f4:	ldur	w9, [x29, #-108]
    10f8:	add	x0, x8, w9, uxtw #3
    10fc:	cbz	w9, 1130 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdf4>
    1100:	mov	x10, xzr
    1104:	lsl	x11, x9, #3
    1108:	ldr	x12, [x8, x10]
    110c:	cmp	x12, x28
    1110:	b.eq	112c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdf0>  // b.none
    1114:	add	x10, x10, #0x8
    1118:	cmp	x11, x10
    111c:	b.ne	1108 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdcc>  // b.any
    1120:	b	1130 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdf4>
    1124:	ldur	w9, [x29, #-108]
    1128:	b	1134 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xdf8>
    112c:	add	x0, x8, x10
    1130:	mov	x10, x8
    1134:	ldur	w11, [x29, #-112]
    1138:	cmp	x10, x8
    113c:	csel	w9, w9, w11, eq  // eq = none
    1140:	add	x9, x10, w9, uxtw #3
    1144:	cmp	x0, x9
    1148:	b.eq	1170 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe34>  // b.none
    114c:	ldr	x8, [x0]
    1150:	cmp	x8, x28
    1154:	b.ne	1bb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1878>  // b.any
    1158:	mov	x8, #0xfffffffffffffffe    	// #-2
    115c:	str	x8, [x0]
    1160:	ldur	w9, [x29, #-104]
    1164:	ldp	x8, x10, [x29, #-128]
    1168:	add	w9, w9, #0x1
    116c:	stur	w9, [x29, #-104]
    1170:	cmp	x10, x8
    1174:	b.eq	11a8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe6c>  // b.none
    1178:	sub	x0, x29, #0x88
    117c:	mov	x1, x22
    1180:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
    1184:	ldr	x9, [x0]
    1188:	ldp	x8, x23, [x29, #-128]
    118c:	cmp	x9, x22
    1190:	b.eq	11d8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe9c>  // b.none
    1194:	ldp	w10, w9, [x29, #-112]
    1198:	cmp	x23, x8
    119c:	csel	w10, w9, w10, eq  // eq = none
    11a0:	add	x0, x23, w10, uxtw #3
    11a4:	b	11e8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xeac>
    11a8:	ldur	w9, [x29, #-108]
    11ac:	add	x0, x8, w9, uxtw #3
    11b0:	cbz	w9, 11e4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xea8>
    11b4:	mov	x10, xzr
    11b8:	lsl	x11, x9, #3
    11bc:	ldr	x12, [x8, x10]
    11c0:	cmp	x12, x22
    11c4:	b.eq	11e0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xea4>  // b.none
    11c8:	add	x10, x10, #0x8
    11cc:	cmp	x11, x10
    11d0:	b.ne	11bc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xe80>  // b.any
    11d4:	b	11e4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xea8>
    11d8:	ldur	w9, [x29, #-108]
    11dc:	b	11e8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xeac>
    11e0:	add	x0, x8, x10
    11e4:	mov	x23, x8
    11e8:	ldur	w10, [x29, #-112]
    11ec:	cmp	x23, x8
    11f0:	csel	w11, w9, w10, eq  // eq = none
    11f4:	add	x11, x23, w11, uxtw #3
    11f8:	cmp	x0, x11
    11fc:	b.eq	1228 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xeec>  // b.none
    1200:	ldr	x8, [x0]
    1204:	cmp	x8, x22
    1208:	b.ne	1bb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1878>  // b.any
    120c:	mov	x8, #0xfffffffffffffffe    	// #-2
    1210:	str	x8, [x0]
    1214:	ldp	w9, w11, [x29, #-108]
    1218:	ldp	x8, x23, [x29, #-128]
    121c:	ldur	w10, [x29, #-112]
    1220:	add	w11, w11, #0x1
    1224:	stur	w11, [x29, #-104]
    1228:	cmp	x23, x8
    122c:	csel	w8, w9, w10, eq  // eq = none
    1230:	add	x22, x23, w8, uxtw #3
    1234:	cbz	w8, 125c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf20>
    1238:	lsl	x9, x8, #3
    123c:	add	x8, x9, x23
    1240:	ldr	x10, [x23]
    1244:	cmn	x10, #0x2
    1248:	b.cc	125c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf20>  // b.lo, b.ul, b.last
    124c:	subs	x9, x9, #0x8
    1250:	add	x23, x23, #0x8
    1254:	b.ne	1240 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf04>  // b.any
    1258:	mov	x23, x8
    125c:	cmp	x23, x22
    1260:	b.eq	1314 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfd8>  // b.none
    1264:	ldur	x28, [x29, #-136]
    1268:	cmp	x23, x22
    126c:	b.cs	1bd4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1898>  // b.hs, b.nlast
    1270:	ldr	x0, [x23]
    1274:	bl	0 <_ZNK4llvm10BasicBlock14getFirstNonPHIEv>
    1278:	cbz	x0, 12d4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf98>
    127c:	mov	x21, x0
    1280:	ldrb	w8, [x21, #16]
    1284:	cmp	w8, #0x50
    1288:	b.ne	12a4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf68>  // b.any
    128c:	ldur	x8, [x21, #-24]
    1290:	cbz	x8, 12a4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf68>
    1294:	ldrb	w9, [x8, #16]
    1298:	cbnz	w9, 12a4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf68>
    129c:	ldrb	w8, [x8, #33]
    12a0:	tbnz	w8, #5, 12b4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf78>
    12a4:	mov	x0, x21
    12a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    12ac:	cmp	x0, #0x7
    12b0:	b.hi	131c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfe0>  // b.pmore
    12b4:	ldp	x8, x9, [x21, #32]
    12b8:	add	x9, x9, #0x28
    12bc:	cmp	x9, x8
    12c0:	b.eq	12d4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf98>  // b.none
    12c4:	ldrb	w9, [x8]
    12c8:	tbnz	w9, #2, 1a34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16f8>
    12cc:	sub	x21, x8, #0x18
    12d0:	cbnz	x8, 1280 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf44>
    12d4:	ldur	x8, [x29, #-136]
    12d8:	cmp	x8, x28
    12dc:	b.ne	1bf4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x18b8>  // b.any
    12e0:	add	x23, x23, #0x8
    12e4:	cmp	x23, x22
    12e8:	b.hi	1a74 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1738>  // b.pmore
    12ec:	b.eq	1314 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfd8>  // b.none
    12f0:	ldr	x8, [x23]
    12f4:	cmn	x8, #0x2
    12f8:	b.cc	130c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfd0>  // b.lo, b.ul, b.last
    12fc:	add	x23, x23, #0x8
    1300:	cmp	x22, x23
    1304:	b.ne	12f0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfb4>  // b.any
    1308:	b	1314 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfd8>
    130c:	cmp	x22, x23
    1310:	b.ne	1268 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xf2c>  // b.any
    1314:	mov	w21, wzr
    1318:	b	1320 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xfe4>
    131c:	mov	w21, #0x1                   	// #1
    1320:	ldur	x0, [x29, #-216]
    1324:	ldr	x8, [sp, #136]
    1328:	mov	w23, #0x1                   	// #1
    132c:	cmp	x0, x8
    1330:	b.eq	1338 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xffc>  // b.none
    1334:	bl	0 <free>
    1338:	ldp	x8, x0, [x29, #-128]
    133c:	cmp	x0, x8
    1340:	b.eq	1348 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x100c>  // b.none
    1344:	bl	0 <free>
    1348:	tbnz	w21, #0, 149c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1160>
    134c:	mov	w1, #0x1                   	// #1
    1350:	mov	x0, x25
    1354:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1358:	cbz	x0, 1c14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x18d8>
    135c:	ldrb	w8, [x0, #16]
    1360:	mov	x1, x0
    1364:	cmp	w8, #0xd
    1368:	b.ne	1c34 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x18f8>  // b.any
    136c:	mov	x0, x26
    1370:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1374:	mov	x0, x26
    1378:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    137c:	mov	x0, x19
    1380:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1384:	ldrb	w8, [x20, #16]
    1388:	ldr	x28, [sp, #128]
    138c:	cmp	w8, #0x1d
    1390:	b.ne	13c4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1088>  // b.any
    1394:	ldur	x19, [x20, #-72]
    1398:	cbz	x19, 1c54 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1918>
    139c:	ldrb	w8, [x19, #16]
    13a0:	cmp	w8, #0x12
    13a4:	b.ne	1c74 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1938>  // b.any
    13a8:	mov	w0, #0x38                  	// #56
    13ac:	mov	w1, #0x1                   	// #1
    13b0:	bl	0 <_ZN4llvm4UsernwEmj>
    13b4:	mov	x1, x19
    13b8:	mov	x2, x20
    13bc:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockEPNS_11InstructionE>
    13c0:	ldrb	w8, [x20, #16]
    13c4:	sub	w8, w8, #0x1d
    13c8:	cmp	w8, #0x33
    13cc:	b.hi	1ab4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1778>  // b.pmore
    13d0:	mov	x9, #0x41                  	// #65
    13d4:	lsl	x8, x23, x8
    13d8:	movk	x9, #0x8, lsl #48
    13dc:	tst	x8, x9
    13e0:	b.eq	1ab4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1778>  // b.none
    13e4:	ldur	x19, [x20, #-24]
    13e8:	mov	x0, x20
    13ec:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    13f0:	cmp	x19, x25
    13f4:	b.eq	141c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10e0>  // b.none
    13f8:	mov	x0, x19
    13fc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1400:	ldr	x8, [x19, #8]
    1404:	cbnz	x8, 141c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10e0>
    1408:	ldrb	w8, [x19, #16]
    140c:	cmp	w8, #0x18
    1410:	b.cc	141c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10e0>  // b.lo, b.ul, b.last
    1414:	mov	x0, x19
    1418:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    141c:	mov	x0, x25
    1420:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1424:	ldr	x8, [x25, #8]
    1428:	cbnz	x8, 1434 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x10f8>
    142c:	mov	x0, x25
    1430:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1434:	sub	x24, x24, #0x1
    1438:	cmp	x24, x27
    143c:	b.eq	14c0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1184>  // b.none
    1440:	ldr	w8, [sp, #296]
    1444:	cmp	x27, x8
    1448:	b.cs	1b14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17d8>  // b.hs, b.nlast
    144c:	cmp	x24, x8
    1450:	b.cs	1b14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17d8>  // b.hs, b.nlast
    1454:	ldr	x8, [sp, #288]
    1458:	lsl	x9, x27, #3
    145c:	lsl	x10, x24, #3
    1460:	ldr	x11, [x8, x10]
    1464:	ldr	x12, [x8, x9]
    1468:	str	x11, [x8, x9]
    146c:	str	x12, [x8, x10]
    1470:	ldr	x8, [sp, #288]
    1474:	ldr	x26, [x8, x9]
    1478:	cbnz	x26, bb0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x874>
    147c:	b	1af4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17b8>
    1480:	ldr	x1, [sp, #136]
    1484:	sub	x0, x29, #0xd8
    1488:	mov	w3, #0x8                   	// #8
    148c:	mov	x2, xzr
    1490:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1494:	ldur	w8, [x29, #-208]
    1498:	b	e54 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0xb18>
    149c:	add	x27, x27, #0x1
    14a0:	cmp	x27, x24
    14a4:	b.eq	14b8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x117c>  // b.none
    14a8:	ldr	w8, [sp, #296]
    14ac:	cmp	x27, x8
    14b0:	b.cc	ba4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x868>  // b.lo, b.ul, b.last
    14b4:	b	1b14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x17d8>
    14b8:	ldr	x28, [sp, #128]
    14bc:	mov	x27, x24
    14c0:	ldr	w8, [sp, #296]
    14c4:	cmp	x27, x8
    14c8:	b.cs	14e0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x11a4>  // b.hs, b.nlast
    14cc:	ldr	w8, [sp, #300]
    14d0:	cmp	x27, x8
    14d4:	b.hi	1a14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x16d8>  // b.pmore
    14d8:	str	w27, [sp, #296]
    14dc:	b	1528 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x11ec>
    14e0:	b.ls	1528 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x11ec>  // b.plast
    14e4:	ldr	w9, [sp, #300]
    14e8:	cmp	x27, x9
    14ec:	b.ls	1508 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x11cc>  // b.plast
    14f0:	ldr	x0, [sp, #8]
    14f4:	ldr	x1, [sp, #120]
    14f8:	mov	w3, #0x8                   	// #8
    14fc:	mov	x2, x27
    1500:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1504:	ldr	w8, [sp, #296]
    1508:	subs	x9, x27, x8
    150c:	b.eq	14cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1190>  // b.none
    1510:	ldr	x10, [sp, #288]
    1514:	lsl	x2, x9, #3
    1518:	mov	w1, wzr
    151c:	add	x0, x10, x8, lsl #3
    1520:	bl	0 <memset>
    1524:	b	14cc <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1190>
    1528:	add	x1, sp, #0xc8
    152c:	mov	x0, x28
    1530:	bl	0 <_ZN4llvm4coro19buildCoroutineFrameERNS_8FunctionERNS0_5ShapeE>
    1534:	ldr	w8, [sp, #264]
    1538:	cbz	w8, 15e0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x12a4>
    153c:	ldr	x9, [sp, #256]
    1540:	add	x8, x9, x8, lsl #3
    1544:	ldur	x19, [x8, #-8]
    1548:	mov	x0, x19
    154c:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1550:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    1554:	ldr	x22, [sp, #376]
    1558:	mov	x23, x0
    155c:	mov	x1, x22
    1560:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1564:	mov	x20, x0
    1568:	mov	x21, x1
    156c:	mov	x0, x23
    1570:	mov	x1, x22
    1574:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    1578:	cbz	w0, 1cf4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x19b8>
    157c:	and	w8, w21, #0xff
    1580:	cbnz	w8, 1d14 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x19d8>
    1584:	mov	w8, w0
    1588:	add	x9, x20, #0x7
    158c:	add	x9, x8, x9, lsr #3
    1590:	ldr	x0, [x19]
    1594:	sub	x9, x9, #0x1
    1598:	udiv	x9, x9, x8
    159c:	mul	x1, x9, x8
    15a0:	mov	w2, wzr
    15a4:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeEmb>
    15a8:	ldr	w8, [sp, #264]
    15ac:	mov	w23, #0x1                   	// #1
    15b0:	cbz	w8, 15e0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x12a4>
    15b4:	ldr	x21, [sp, #256]
    15b8:	mov	x19, x0
    15bc:	lsl	x22, x8, #3
    15c0:	ldr	x20, [x21], #8
    15c4:	mov	x1, x19
    15c8:	mov	x0, x20
    15cc:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    15d0:	mov	x0, x20
    15d4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    15d8:	subs	x22, x22, #0x8
    15dc:	b.ne	15c0 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1284>  // b.any
    15e0:	ldr	w8, [sp, #296]
    15e4:	ldr	x9, [sp, #136]
    15e8:	ldp	x25, x26, [sp, #56]
    15ec:	stur	d8, [x29, #-208]
    15f0:	stur	x9, [x29, #-216]
    15f4:	cbz	w8, 1618 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x12dc>
    15f8:	add	x1, sp, #0xc8
    15fc:	sub	x2, x29, #0xd8
    1600:	mov	x0, x28
    1604:	bl	21c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE>
    1608:	ldr	x24, [sp, #72]
    160c:	adrp	x27, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1610:	add	x27, x27, #0x0
    1614:	b	18a4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1568>
    1618:	ldr	x19, [sp, #200]
    161c:	mov	w1, wzr
    1620:	mov	x0, x19
    1624:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1628:	cbz	x0, 1d74 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1a38>
    162c:	ldrb	w8, [x0, #16]
    1630:	ldr	x24, [sp, #72]
    1634:	adrp	x27, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1638:	mov	x21, x0
    163c:	cmp	w8, #0x50
    1640:	add	x27, x27, #0x0
    1644:	b.ne	1cb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1978>  // b.any
    1648:	ldur	x8, [x21, #-24]
    164c:	cbz	x8, 1cb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1978>
    1650:	ldrb	w9, [x8, #16]
    1654:	cbnz	w9, 1cb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1978>
    1658:	ldrb	w9, [x8, #33]
    165c:	tbz	w9, #5, 1cb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1978>
    1660:	ldr	w8, [x8, #36]
    1664:	sub	w8, w8, #0x18
    1668:	cmp	w8, #0x3
    166c:	b.cs	1cb4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1978>  // b.hs, b.nlast
    1670:	mov	x0, x21
    1674:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1678:	ldr	x22, [x21, #8]
    167c:	cbnz	x22, 16b4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1378>
    1680:	mov	x20, xzr
    1684:	ldr	w8, [sp, #368]
    1688:	sub	w9, w8, #0x1
    168c:	cmp	w9, #0x2
    1690:	b.cs	16f8 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x13bc>  // b.hs, b.nlast
    1694:	ldr	x0, [x19]
    1698:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    169c:	mov	x1, x0
    16a0:	mov	x0, x19
    16a4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    16a8:	b	189c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1560>
    16ac:	ldr	x22, [x22, #8]
    16b0:	cbz	x22, 1680 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1344>
    16b4:	mov	x0, x22
    16b8:	bl	0 <_ZNK4llvm3Use7getUserEv>
    16bc:	cbz	x0, 1c94 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1958>
    16c0:	ldrb	w8, [x0, #16]
    16c4:	mov	x20, x0
    16c8:	cmp	w8, #0x50
    16cc:	b.ne	16ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1370>  // b.any
    16d0:	ldur	x8, [x20, #-24]
    16d4:	cbz	x8, 16ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1370>
    16d8:	ldrb	w9, [x8, #16]
    16dc:	cbnz	w9, 16ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1370>
    16e0:	ldrb	w9, [x8, #33]
    16e4:	tbz	w9, #5, 16ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1370>
    16e8:	ldr	w8, [x8, #36]
    16ec:	cmp	w8, #0xe
    16f0:	b.ne	16ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1370>  // b.any
    16f4:	b	1684 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1348>
    16f8:	cbnz	w8, 189c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1560>
    16fc:	ldur	x8, [x21, #-24]
    1700:	ldrb	w9, [x8, #16]
    1704:	cmp	w9, #0x0
    1708:	csel	x8, x8, xzr, eq  // eq = none
    170c:	ldr	w8, [x8, #36]
    1710:	cmp	w8, #0x18
    1714:	b.ne	1dd4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1a98>  // b.any
    1718:	cmp	x20, #0x0
    171c:	cset	w1, ne  // ne = any
    1720:	mov	x0, x21
    1724:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    1728:	cbz	x20, 1838 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x14fc>
    172c:	mov	x0, x20
    1730:	bl	0 <_ZNK4llvm5Value10getContextEv>
    1734:	mov	w8, #0x200                 	// #512
    1738:	sturh	w8, [x29, #-92]
    173c:	ldr	x8, [sp, #16]
    1740:	stur	xzr, [x29, #-136]
    1744:	stp	x0, xzr, [x29, #-112]
    1748:	stur	wzr, [x29, #-96]
    174c:	sturb	wzr, [x29, #-90]
    1750:	stp	xzr, xzr, [x8]
    1754:	ldr	x8, [sp, #24]
    1758:	sub	x0, x29, #0x88
    175c:	mov	x1, x20
    1760:	stp	xzr, xzr, [x8]
    1764:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1768:	ldur	x8, [x29, #-128]
    176c:	mov	w28, #0x101                 	// #257
    1770:	stp	xzr, xzr, [x29, #-32]
    1774:	sturh	w28, [x29, #-16]
    1778:	ldr	x8, [x8, #56]
    177c:	ldr	x21, [sp, #376]
    1780:	ldr	x0, [x8, #40]
    1784:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    1788:	mov	x22, x0
    178c:	mov	w0, #0x40                  	// #64
    1790:	mov	w1, #0x1                   	// #1
    1794:	bl	0 <_ZN4llvm4UsernwEmj>
    1798:	ldr	w2, [x22, #4]
    179c:	sub	x4, x29, #0x100
    17a0:	mov	x1, x21
    17a4:	mov	x3, xzr
    17a8:	mov	x5, xzr
    17ac:	mov	x23, x0
    17b0:	stp	xzr, xzr, [x29, #-256]
    17b4:	sturh	w28, [x29, #-240]
    17b8:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    17bc:	sub	x0, x29, #0x88
    17c0:	sub	x2, x29, #0x20
    17c4:	mov	x1, x23
    17c8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    17cc:	ldur	x8, [x29, #-112]
    17d0:	mov	x21, x0
    17d4:	mov	w1, wzr
    17d8:	mov	x0, x8
    17dc:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    17e0:	stp	xzr, xzr, [x29, #-32]
    17e4:	sturh	w28, [x29, #-16]
    17e8:	ldr	x8, [x21]
    17ec:	cmp	x8, x0
    17f0:	b.eq	185c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1520>  // b.none
    17f4:	ldrb	w8, [x21, #16]
    17f8:	mov	x2, x0
    17fc:	cmp	w8, #0x10
    1800:	b.ls	1848 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x150c>  // b.plast
    1804:	mov	w8, #0x101                 	// #257
    1808:	sub	x3, x29, #0x100
    180c:	mov	w0, #0x31                  	// #49
    1810:	mov	x1, x21
    1814:	mov	x4, xzr
    1818:	stp	xzr, xzr, [x29, #-256]
    181c:	sturh	w8, [x29, #-240]
    1820:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    1824:	mov	x1, x0
    1828:	sub	x0, x29, #0x88
    182c:	sub	x2, x29, #0x20
    1830:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1834:	b	1858 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x151c>
    1838:	mov	w1, #0x1                   	// #1
    183c:	mov	x0, x19
    1840:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1844:	b	169c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1360>
    1848:	mov	w0, #0x31                  	// #49
    184c:	mov	x1, x21
    1850:	mov	w3, wzr
    1854:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    1858:	mov	x21, x0
    185c:	ldur	x0, [x29, #-112]
    1860:	ldr	x28, [sp, #128]
    1864:	mov	w23, #0x1                   	// #1
    1868:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    186c:	mov	x1, x0
    1870:	mov	x0, x20
    1874:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1878:	mov	x0, x20
    187c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1880:	mov	x0, x19
    1884:	mov	x1, x21
    1888:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    188c:	ldur	x1, [x29, #-136]
    1890:	cbz	x1, 189c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1560>
    1894:	sub	x0, x29, #0x88
    1898:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    189c:	mov	x0, x19
    18a0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    18a4:	add	x1, sp, #0xc8
    18a8:	mov	x0, x28
    18ac:	mov	x2, xzr
    18b0:	bl	47cc <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>
    18b4:	ldr	w8, [sp, #216]
    18b8:	cbz	w8, 18e4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15a8>
    18bc:	ldr	x19, [sp, #208]
    18c0:	lsl	x20, x8, #3
    18c4:	ldr	x0, [x19], #8
    18c8:	ldr	x2, [sp, #384]
    18cc:	add	x1, sp, #0xc8
    18d0:	mov	w3, wzr
    18d4:	mov	x4, x25
    18d8:	bl	6c14 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>
    18dc:	subs	x20, x20, #0x8
    18e0:	b.ne	18c4 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1588>  // b.any
    18e4:	mov	x0, x28
    18e8:	bl	4bbc <_ZL16postSplitCleanupRN4llvm8FunctionE>
    18ec:	ldur	x1, [x29, #-216]
    18f0:	ldur	w2, [x29, #-208]
    18f4:	mov	x0, x28
    18f8:	mov	x3, x25
    18fc:	mov	x4, x26
    1900:	bl	0 <_ZN4llvm4coro15updateCallGraphERNS_8FunctionENS_8ArrayRefIPS1_EERNS_9CallGraphERNS_12CallGraphSCCE>
    1904:	ldur	x0, [x29, #-216]
    1908:	ldr	x8, [sp, #136]
    190c:	cmp	x0, x8
    1910:	b.eq	1918 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15dc>  // b.none
    1914:	bl	0 <free>
    1918:	ldr	x0, [sp, #336]
    191c:	ldr	x8, [sp, #96]
    1920:	cmp	x0, x8
    1924:	b.eq	192c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x15f0>  // b.none
    1928:	bl	0 <free>
    192c:	ldr	x0, [sp, #288]
    1930:	ldr	x8, [sp, #120]
    1934:	cmp	x0, x8
    1938:	b.eq	1940 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1604>  // b.none
    193c:	bl	0 <free>
    1940:	ldr	x0, [sp, #256]
    1944:	ldr	x8, [sp, #104]
    1948:	cmp	x0, x8
    194c:	b.eq	1954 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1618>  // b.none
    1950:	bl	0 <free>
    1954:	ldr	x0, [sp, #208]
    1958:	ldr	x8, [sp, #112]
    195c:	cmp	x0, x8
    1960:	b.eq	734 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x3f8>  // b.none
    1964:	bl	0 <free>
    1968:	b	734 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x3f8>
    196c:	ldr	x0, [sp, #32]
    1970:	cbz	x0, 197c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1640>
    1974:	mov	x1, x25
    1978:	bl	1df4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>
    197c:	mov	w19, #0x1                   	// #1
    1980:	b	1994 <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1658>
    1984:	ldr	x0, [sp, #32]
    1988:	mov	x1, x25
    198c:	bl	1df4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>
    1990:	mov	w19, w0
    1994:	ldr	x0, [sp, #152]
    1998:	add	x8, sp, #0x98
    199c:	add	x8, x8, #0x10
    19a0:	cmp	x0, x8
    19a4:	b.eq	19ac <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x1670>  // b.none
    19a8:	bl	0 <free>
    19ac:	and	w0, w19, #0x1
    19b0:	add	sp, sp, #0x2d0
    19b4:	ldp	x20, x19, [sp, #112]
    19b8:	ldp	x22, x21, [sp, #96]
    19bc:	ldp	x24, x23, [sp, #80]
    19c0:	ldp	x26, x25, [sp, #64]
    19c4:	ldp	x28, x27, [sp, #48]
    19c8:	ldp	x29, x30, [sp, #32]
    19cc:	ldp	d9, d8, [sp, #16]
    19d0:	ldp	d11, d10, [sp], #128
    19d4:	ret
    19d8:	add	x0, sp, #0xc8
    19dc:	mov	w3, #0x8                   	// #8
    19e0:	mov	x1, x21
    19e4:	mov	x2, xzr
    19e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    19ec:	ldr	w8, [sp, #208]
    19f0:	b	64c <_ZN12_GLOBAL__N_115CoroSplitLegacy8runOnSCCERN4llvm12CallGraphSCCE+0x310>
    19f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    19fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a00:	add	x0, x0, #0x0
    1a04:	add	x1, x1, #0x0
    1a08:	add	x3, x3, #0x0
    1a0c:	mov	w2, #0x69                  	// #105
    1a10:	bl	0 <__assert_fail>
    1a14:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a18:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a1c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a20:	add	x0, x0, #0x0
    1a24:	add	x1, x1, #0x0
    1a28:	add	x3, x3, #0x0
    1a2c:	mov	w2, #0x43                  	// #67
    1a30:	bl	0 <__assert_fail>
    1a34:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a38:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a3c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a40:	add	x0, x0, #0x0
    1a44:	add	x1, x1, #0x0
    1a48:	add	x3, x3, #0x0
    1a4c:	mov	w2, #0x8b                  	// #139
    1a50:	bl	0 <__assert_fail>
    1a54:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a58:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a60:	add	x0, x0, #0x0
    1a64:	add	x1, x1, #0x0
    1a68:	add	x3, x3, #0x0
    1a6c:	mov	w2, #0x69                  	// #105
    1a70:	bl	0 <__assert_fail>
    1a74:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a78:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a7c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a80:	add	x0, x0, #0x0
    1a84:	add	x1, x1, #0x0
    1a88:	add	x3, x3, #0x0
    1a8c:	mov	w2, #0xf8                  	// #248
    1a90:	bl	0 <__assert_fail>
    1a94:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a98:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1a9c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1aa0:	add	x0, x0, #0x0
    1aa4:	add	x1, x1, #0x0
    1aa8:	add	x3, x3, #0x0
    1aac:	mov	w2, #0x108                 	// #264
    1ab0:	bl	0 <__assert_fail>
    1ab4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ab8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1abc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ac0:	add	x0, x0, #0x0
    1ac4:	add	x1, x1, #0x0
    1ac8:	add	x3, x3, #0x0
    1acc:	mov	w2, #0x108                 	// #264
    1ad0:	bl	0 <__assert_fail>
    1ad4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ad8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1adc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ae0:	add	x0, x0, #0x0
    1ae4:	add	x1, x1, #0x0
    1ae8:	add	x3, x3, #0x0
    1aec:	mov	w2, #0x17c                 	// #380
    1af0:	bl	0 <__assert_fail>
    1af4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1af8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1afc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b00:	add	x0, x0, #0x0
    1b04:	add	x1, x1, #0x0
    1b08:	add	x3, x3, #0x0
    1b0c:	mov	w2, #0x69                  	// #105
    1b10:	bl	0 <__assert_fail>
    1b14:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b18:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b1c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b20:	add	x0, x0, #0x0
    1b24:	add	x1, x1, #0x0
    1b28:	add	x3, x3, #0x0
    1b2c:	mov	w2, #0x95                  	// #149
    1b30:	bl	0 <__assert_fail>
    1b34:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b38:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b3c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b40:	add	x0, x0, #0x0
    1b44:	add	x1, x1, #0x0
    1b48:	add	x3, x3, #0x0
    1b4c:	mov	w2, #0x108                 	// #264
    1b50:	bl	0 <__assert_fail>
    1b54:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b58:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b60:	add	x0, x0, #0x0
    1b64:	add	x1, x1, #0x0
    1b68:	add	x3, x3, #0x0
    1b6c:	mov	w2, #0x69                  	// #105
    1b70:	bl	0 <__assert_fail>
    1b74:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b78:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b7c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b80:	add	x0, x0, #0x0
    1b84:	add	x1, x1, #0x0
    1b88:	add	x3, x3, #0x0
    1b8c:	mov	w2, #0x69                  	// #105
    1b90:	bl	0 <__assert_fail>
    1b94:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b98:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1b9c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ba0:	add	x0, x0, #0x0
    1ba4:	add	x1, x1, #0x0
    1ba8:	add	x3, x3, #0x0
    1bac:	mov	w2, #0x69                  	// #105
    1bb0:	bl	0 <__assert_fail>
    1bb4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bb8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bbc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bc0:	add	x0, x0, #0x0
    1bc4:	add	x1, x1, #0x0
    1bc8:	add	x3, x3, #0x0
    1bcc:	mov	w2, #0xa7                  	// #167
    1bd0:	bl	0 <__assert_fail>
    1bd4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bd8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bdc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1be0:	add	x0, x0, #0x0
    1be4:	add	x1, x1, #0x0
    1be8:	add	x3, x3, #0x0
    1bec:	mov	w2, #0x121                 	// #289
    1bf0:	bl	0 <__assert_fail>
    1bf4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bf8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1bfc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c00:	add	x0, x0, #0x0
    1c04:	add	x1, x1, #0x0
    1c08:	add	x3, x3, #0x0
    1c0c:	mov	w2, #0x126                 	// #294
    1c10:	bl	0 <__assert_fail>
    1c14:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c18:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c1c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c20:	add	x0, x0, #0x0
    1c24:	add	x1, x1, #0x0
    1c28:	add	x3, x3, #0x0
    1c2c:	mov	w2, #0x69                  	// #105
    1c30:	bl	0 <__assert_fail>
    1c34:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c38:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c3c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c40:	add	x0, x0, #0x0
    1c44:	add	x1, x1, #0x0
    1c48:	add	x3, x3, #0x0
    1c4c:	mov	w2, #0x108                 	// #264
    1c50:	bl	0 <__assert_fail>
    1c54:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c58:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c60:	add	x0, x0, #0x0
    1c64:	add	x1, x1, #0x0
    1c68:	add	x3, x3, #0x0
    1c6c:	mov	w2, #0x5b                  	// #91
    1c70:	bl	0 <__assert_fail>
    1c74:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c78:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c7c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c80:	add	x0, x0, #0x0
    1c84:	add	x1, x1, #0x0
    1c88:	add	x3, x3, #0x0
    1c8c:	mov	w2, #0xfa                  	// #250
    1c90:	bl	0 <__assert_fail>
    1c94:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c98:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1c9c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ca0:	add	x0, x0, #0x0
    1ca4:	add	x1, x1, #0x0
    1ca8:	add	x3, x3, #0x0
    1cac:	mov	w2, #0x69                  	// #105
    1cb0:	bl	0 <__assert_fail>
    1cb4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cb8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cbc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cc0:	add	x0, x0, #0x0
    1cc4:	add	x1, x1, #0x0
    1cc8:	add	x3, x3, #0x0
    1ccc:	mov	w2, #0x108                 	// #264
    1cd0:	bl	0 <__assert_fail>
    1cd4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cd8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cdc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ce0:	add	x0, x0, #0x0
    1ce4:	add	x1, x1, #0x0
    1ce8:	add	x3, x3, #0x0
    1cec:	mov	w2, #0x82                  	// #130
    1cf0:	bl	0 <__assert_fail>
    1cf4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cf8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1cfc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d00:	add	x0, x0, #0x0
    1d04:	add	x1, x1, #0x0
    1d08:	add	x3, x3, #0x0
    1d0c:	mov	w2, #0xc7                  	// #199
    1d10:	bl	0 <__assert_fail>
    1d14:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d18:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d1c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d20:	add	x0, x0, #0x0
    1d24:	add	x1, x1, #0x0
    1d28:	add	x3, x3, #0x0
    1d2c:	mov	w2, #0x7d                  	// #125
    1d30:	bl	0 <__assert_fail>
    1d34:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d38:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d3c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d40:	add	x0, x0, #0x0
    1d44:	add	x1, x1, #0x0
    1d48:	add	x3, x3, #0x0
    1d4c:	mov	w2, #0x579                 	// #1401
    1d50:	bl	0 <__assert_fail>
    1d54:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d58:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d60:	add	x0, x0, #0x0
    1d64:	add	x1, x1, #0x0
    1d68:	add	x3, x3, #0x0
    1d6c:	mov	w2, #0x8b                  	// #139
    1d70:	bl	0 <__assert_fail>
    1d74:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d78:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d7c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d80:	add	x0, x0, #0x0
    1d84:	add	x1, x1, #0x0
    1d88:	add	x3, x3, #0x0
    1d8c:	mov	w2, #0x69                  	// #105
    1d90:	bl	0 <__assert_fail>
    1d94:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d98:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1d9c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1da0:	add	x0, x0, #0x0
    1da4:	add	x1, x1, #0x0
    1da8:	add	x3, x3, #0x0
    1dac:	mov	w2, #0xeb                  	// #235
    1db0:	bl	0 <__assert_fail>
    1db4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1db8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1dbc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1dc0:	add	x0, x0, #0x0
    1dc4:	add	x1, x1, #0x0
    1dc8:	add	x3, x3, #0x0
    1dcc:	mov	w2, #0xdd                  	// #221
    1dd0:	bl	0 <__assert_fail>
    1dd4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1dd8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1ddc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1de0:	add	x0, x0, #0x0
    1de4:	add	x1, x1, #0x0
    1de8:	add	x3, x3, #0x0
    1dec:	mov	w2, #0x108                 	// #264
    1df0:	bl	0 <__assert_fail>

0000000000001df4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE>:
    1df4:	sub	sp, sp, #0x80
    1df8:	stp	x29, x30, [sp, #32]
    1dfc:	stp	x28, x27, [sp, #48]
    1e00:	stp	x26, x25, [sp, #64]
    1e04:	stp	x24, x23, [sp, #80]
    1e08:	stp	x22, x21, [sp, #96]
    1e0c:	stp	x20, x19, [sp, #112]
    1e10:	add	x29, sp, #0x20
    1e14:	mov	x19, x1
    1e18:	mov	x20, x0
    1e1c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1e20:	ldr	x0, [x20, #8]
    1e24:	cbz	x0, 20e4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2f0>
    1e28:	add	x8, x19, #0x8
    1e2c:	mov	x27, #0x41                  	// #65
    1e30:	str	x8, [sp, #16]
    1e34:	add	x8, x19, #0x10
    1e38:	movk	x27, #0x8, lsl #48
    1e3c:	str	x8, [sp, #8]
    1e40:	b	1e4c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x58>
    1e44:	ldur	x0, [x29, #-8]
    1e48:	cbz	x0, 20e0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2ec>
    1e4c:	ldr	x8, [x0, #8]
    1e50:	stur	x8, [x29, #-8]
    1e54:	bl	0 <_ZNK4llvm3Use7getUserEv>
    1e58:	cbz	x0, 2164 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x370>
    1e5c:	ldrb	w8, [x0, #16]
    1e60:	mov	x20, x0
    1e64:	cmp	w8, #0x50
    1e68:	b.ne	2184 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x390>  // b.any
    1e6c:	mov	x0, x20
    1e70:	mov	w1, wzr
    1e74:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    1e78:	mov	x19, x0
    1e7c:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    1e80:	cbz	x0, 21a4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x3b0>
    1e84:	ldrb	w8, [x0, #16]
    1e88:	mov	x21, x0
    1e8c:	cbz	w8, 1eac <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0xb8>
    1e90:	mov	x23, xzr
    1e94:	mov	x22, xzr
    1e98:	mov	x0, x20
    1e9c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1ea0:	ldr	x28, [x20, #8]
    1ea4:	cbnz	x28, 1f5c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x168>
    1ea8:	b	2078 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x284>
    1eac:	mov	x0, x20
    1eb0:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
    1eb4:	ldp	x14, x8, [sp, #8]
    1eb8:	ldr	x8, [x8, #16]
    1ebc:	cbz	x8, 2144 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x350>
    1ec0:	mov	x10, x8
    1ec4:	mov	x9, x14
    1ec8:	ldr	x11, [x10, #32]
    1ecc:	add	x12, x10, #0x18
    1ed0:	add	x13, x10, #0x10
    1ed4:	cmp	x11, x0
    1ed8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    1edc:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    1ee0:	ldr	x10, [x10]
    1ee4:	cbnz	x10, 1ec8 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0xd4>
    1ee8:	cmp	x9, x14
    1eec:	b.eq	2144 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x350>  // b.none
    1ef0:	ldr	x10, [x9, #32]
    1ef4:	cmp	x10, x0
    1ef8:	csel	x9, x14, x9, hi  // hi = pmore
    1efc:	cmp	x9, x14
    1f00:	b.eq	2144 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x350>  // b.none
    1f04:	ldr	x22, [x9, #40]
    1f08:	mov	x9, x14
    1f0c:	ldr	x10, [x8, #32]
    1f10:	add	x11, x8, #0x18
    1f14:	add	x12, x8, #0x10
    1f18:	cmp	x10, x21
    1f1c:	csel	x9, x9, x8, cc  // cc = lo, ul, last
    1f20:	csel	x8, x11, x12, cc  // cc = lo, ul, last
    1f24:	ldr	x8, [x8]
    1f28:	cbnz	x8, 1f0c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x118>
    1f2c:	cmp	x9, x14
    1f30:	b.eq	2144 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x350>  // b.none
    1f34:	ldr	x8, [x9, #32]
    1f38:	cmp	x8, x21
    1f3c:	csel	x8, x14, x9, hi  // hi = pmore
    1f40:	cmp	x8, x14
    1f44:	b.eq	2144 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x350>  // b.none
    1f48:	ldr	x23, [x8, #40]
    1f4c:	mov	x0, x20
    1f50:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    1f54:	ldr	x28, [x20, #8]
    1f58:	cbz	x28, 2078 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x284>
    1f5c:	cbnz	x22, 1fc8 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1d4>
    1f60:	b	1f68 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x174>
    1f64:	cbz	x28, 2078 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x284>
    1f68:	mov	x0, x28
    1f6c:	ldr	x28, [x28, #8]
    1f70:	bl	0 <_ZNK4llvm3Use7getUserEv>
    1f74:	cbz	x0, 2124 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x330>
    1f78:	ldrb	w8, [x0, #16]
    1f7c:	mov	x22, x0
    1f80:	cmp	w8, #0x49
    1f84:	b.ne	1f64 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x170>  // b.any
    1f88:	ldr	x8, [x22]
    1f8c:	ldr	x9, [x21]
    1f90:	cmp	x8, x9
    1f94:	b.ne	1f64 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x170>  // b.any
    1f98:	mov	x0, x22
    1f9c:	mov	x1, x21
    1fa0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1fa4:	mov	x0, x22
    1fa8:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1fac:	b	1f64 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x170>
    1fb0:	mov	x0, x24
    1fb4:	mov	x1, x21
    1fb8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1fbc:	mov	x0, x24
    1fc0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    1fc4:	cbz	x28, 2078 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x284>
    1fc8:	mov	x0, x28
    1fcc:	ldr	x28, [x28, #8]
    1fd0:	bl	0 <_ZNK4llvm3Use7getUserEv>
    1fd4:	cbz	x0, 2124 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x330>
    1fd8:	ldrb	w8, [x0, #16]
    1fdc:	mov	x24, x0
    1fe0:	cmp	w8, #0x49
    1fe4:	b.ne	1fc4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1d0>  // b.any
    1fe8:	ldr	x8, [x24]
    1fec:	ldr	x9, [x21]
    1ff0:	cmp	x8, x9
    1ff4:	b.ne	1fc4 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1d0>  // b.any
    1ff8:	mov	x0, x24
    1ffc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    2000:	ldr	x25, [x24, #8]
    2004:	cbnz	x25, 2014 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x220>
    2008:	b	1fb0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1bc>
    200c:	ldr	x25, [x25, #8]
    2010:	cbz	x25, 1fb0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x1bc>
    2014:	mov	x0, x25
    2018:	bl	0 <_ZNK4llvm3Use7getUserEv>
    201c:	cbz	x0, 2104 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x310>
    2020:	ldrb	w8, [x0, #16]
    2024:	mov	x26, x0
    2028:	cmp	w8, #0x18
    202c:	b.cc	200c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x218>  // b.lo, b.ul, b.last
    2030:	sub	w8, w8, #0x1d
    2034:	cmp	w8, #0x33
    2038:	b.hi	200c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x218>  // b.pmore
    203c:	mov	w9, #0x1                   	// #1
    2040:	lsl	x8, x9, x8
    2044:	tst	x8, x27
    2048:	b.eq	200c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x218>  // b.none
    204c:	sub	x8, x26, #0x18
    2050:	cmp	x25, x8
    2054:	b.ne	200c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x218>  // b.any
    2058:	mov	x0, x22
    205c:	mov	x1, x26
    2060:	bl	0 <_ZN4llvm13CallGraphNode17removeCallEdgeForERNS_8CallBaseE>
    2064:	mov	x0, x22
    2068:	mov	x1, x26
    206c:	mov	x2, x23
    2070:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2074:	b	200c <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x218>
    2078:	mov	x0, x20
    207c:	mov	x1, x19
    2080:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2084:	mov	x0, x20
    2088:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    208c:	cbz	x19, 20c0 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x2cc>
    2090:	ldrb	w8, [x19, #16]
    2094:	cmp	w8, #0x49
    2098:	b.ne	1e44 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x50>  // b.any
    209c:	mov	x0, x19
    20a0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    20a4:	ldr	x8, [x19, #8]
    20a8:	cbnz	x8, 1e44 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x50>
    20ac:	ldur	x20, [x19, #-24]
    20b0:	mov	x0, x19
    20b4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    20b8:	mov	x19, x20
    20bc:	cbnz	x20, 2090 <_ZL18replaceAllPreparesPN4llvm8FunctionERNS_9CallGraphE+0x29c>
    20c0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    20c4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    20c8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    20cc:	add	x0, x0, #0x0
    20d0:	add	x1, x1, #0x0
    20d4:	add	x3, x3, #0x0
    20d8:	mov	w2, #0x69                  	// #105
    20dc:	bl	0 <__assert_fail>
    20e0:	mov	w0, #0x1                   	// #1
    20e4:	ldp	x20, x19, [sp, #112]
    20e8:	ldp	x22, x21, [sp, #96]
    20ec:	ldp	x24, x23, [sp, #80]
    20f0:	ldp	x26, x25, [sp, #64]
    20f4:	ldp	x28, x27, [sp, #48]
    20f8:	ldp	x29, x30, [sp, #32]
    20fc:	add	sp, sp, #0x80
    2100:	ret
    2104:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2108:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    210c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2110:	add	x0, x0, #0x0
    2114:	add	x1, x1, #0x0
    2118:	add	x3, x3, #0x0
    211c:	mov	w2, #0x69                  	// #105
    2120:	bl	0 <__assert_fail>
    2124:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2128:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    212c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2130:	add	x0, x0, #0x0
    2134:	add	x1, x1, #0x0
    2138:	add	x3, x3, #0x0
    213c:	mov	w2, #0x69                  	// #105
    2140:	bl	0 <__assert_fail>
    2144:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2148:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    214c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2150:	add	x0, x0, #0x0
    2154:	add	x1, x1, #0x0
    2158:	add	x3, x3, #0x0
    215c:	mov	w2, #0x82                  	// #130
    2160:	bl	0 <__assert_fail>
    2164:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2168:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    216c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2170:	add	x0, x0, #0x0
    2174:	add	x1, x1, #0x0
    2178:	add	x3, x3, #0x0
    217c:	mov	w2, #0x69                  	// #105
    2180:	bl	0 <__assert_fail>
    2184:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2188:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    218c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2190:	add	x0, x0, #0x0
    2194:	add	x1, x1, #0x0
    2198:	add	x3, x3, #0x0
    219c:	mov	w2, #0x108                 	// #264
    21a0:	bl	0 <__assert_fail>
    21a4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    21a8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    21ac:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    21b0:	add	x0, x0, #0x0
    21b4:	add	x1, x1, #0x0
    21b8:	add	x3, x3, #0x0
    21bc:	mov	w2, #0x69                  	// #105
    21c0:	bl	0 <__assert_fail>

00000000000021c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE>:
    21c4:	str	d8, [sp, #-112]!
    21c8:	stp	x29, x30, [sp, #16]
    21cc:	stp	x28, x27, [sp, #32]
    21d0:	stp	x26, x25, [sp, #48]
    21d4:	stp	x24, x23, [sp, #64]
    21d8:	stp	x22, x21, [sp, #80]
    21dc:	stp	x20, x19, [sp, #96]
    21e0:	mov	x29, sp
    21e4:	sub	sp, sp, #0x1c0
    21e8:	ldr	w8, [x1, #168]
    21ec:	mov	x19, x1
    21f0:	stp	x0, x1, [sp, #88]
    21f4:	str	x2, [sp, #80]
    21f8:	sub	w9, w8, #0x1
    21fc:	cmp	w9, #0x2
    2200:	b.cs	22b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xec>  // b.hs, b.nlast
    2204:	ldr	w8, [x2, #8]
    2208:	cbnz	w8, 466c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x24a8>
    220c:	ldr	x20, [sp, #88]
    2210:	mov	w1, #0xffffffff            	// #-1
    2214:	mov	w2, #0x1f                  	// #31
    2218:	mov	x0, x20
    221c:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    2220:	mov	w2, #0x15                  	// #21
    2224:	mov	x0, x20
    2228:	mov	w1, wzr
    222c:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    2230:	mov	w2, #0x23                  	// #35
    2234:	mov	x0, x20
    2238:	mov	w1, wzr
    223c:	bl	0 <_ZN4llvm8Function15removeAttributeEjNS_9Attribute8AttrKindE>
    2240:	ldr	x0, [x19]
    2244:	mov	w1, wzr
    2248:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    224c:	cbz	x0, 468c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x24c8>
    2250:	ldrb	w8, [x0, #16]
    2254:	mov	x23, x0
    2258:	cmp	w8, #0x50
    225c:	b.ne	4594 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x23d0>  // b.any
    2260:	ldur	x8, [x23, #-24]
    2264:	cbz	x8, 4594 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x23d0>
    2268:	ldrb	w9, [x8, #16]
    226c:	cbnz	w9, 4594 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x23d0>
    2270:	ldrb	w9, [x8, #33]
    2274:	tbz	w9, #5, 4594 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x23d0>
    2278:	ldr	w8, [x8, #36]
    227c:	sub	w9, w8, #0x18
    2280:	cmp	w9, #0x3
    2284:	b.cs	4594 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x23d0>  // b.hs, b.nlast
    2288:	sub	w8, w8, #0x19
    228c:	cmp	w8, #0x2
    2290:	b.cs	46ac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x24e8>  // b.hs, b.nlast
    2294:	ldrb	w8, [x19, #232]
    2298:	cbz	w8, 29a0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x7dc>
    229c:	mov	w1, #0x2                   	// #2
    22a0:	mov	x0, x23
    22a4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    22a8:	mov	x22, x0
    22ac:	b	2bb0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x9ec>
    22b0:	cbnz	w8, 4654 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2490>
    22b4:	ldr	x20, [sp, #88]
    22b8:	mov	x0, x20
    22bc:	bl	0 <_ZNK4llvm8Function10getContextEv>
    22c0:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    22c4:	mov	x22, x0
    22c8:	add	x8, x8, #0x0
    22cc:	mov	w25, #0x103                 	// #259
    22d0:	mov	w0, #0x40                  	// #64
    22d4:	stp	x8, xzr, [sp, #104]
    22d8:	strh	w25, [sp, #120]
    22dc:	bl	0 <_Znwm>
    22e0:	add	x2, sp, #0x68
    22e4:	mov	x1, x22
    22e8:	mov	x3, x20
    22ec:	mov	x4, xzr
    22f0:	mov	x21, x0
    22f4:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    22f8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    22fc:	add	x8, x8, #0x0
    2300:	mov	w0, #0x40                  	// #64
    2304:	stp	x8, xzr, [sp, #104]
    2308:	strh	w25, [sp, #120]
    230c:	bl	0 <_Znwm>
    2310:	add	x2, sp, #0x68
    2314:	mov	x1, x22
    2318:	mov	x3, x20
    231c:	mov	x4, xzr
    2320:	mov	x26, x0
    2324:	str	x22, [sp, #72]
    2328:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    232c:	mov	x0, x21
    2330:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    2334:	mov	w8, #0x200                 	// #512
    2338:	add	x9, x21, #0x28
    233c:	stp	x0, xzr, [sp, #128]
    2340:	str	wzr, [sp, #144]
    2344:	strb	wzr, [sp, #150]
    2348:	stp	xzr, xzr, [sp, #152]
    234c:	stp	xzr, x21, [sp, #104]
    2350:	strh	w8, [sp, #148]
    2354:	str	x9, [sp, #120]
    2358:	ldp	x1, x2, [x19, #176]
    235c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2360:	add	x8, x8, #0x0
    2364:	add	x0, sp, #0x68
    2368:	sub	x5, x29, #0x60
    236c:	mov	w4, #0x3                   	// #3
    2370:	mov	w3, wzr
    2374:	stp	x8, xzr, [x29, #-96]
    2378:	sturh	w25, [x29, #-80]
    237c:	stp	x21, x1, [sp, #48]
    2380:	str	x2, [sp, #64]
    2384:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2388:	mov	x22, x0
    238c:	mov	x0, x19
    2390:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2394:	mov	x23, x0
    2398:	mov	w0, #0x40                  	// #64
    239c:	mov	w1, #0x1                   	// #1
    23a0:	bl	0 <_ZN4llvm4UsernwEmj>
    23a4:	mov	w20, #0x101                 	// #257
    23a8:	sub	x3, x29, #0x60
    23ac:	mov	x1, x23
    23b0:	mov	x2, x22
    23b4:	mov	x4, xzr
    23b8:	mov	x24, x0
    23bc:	stp	xzr, xzr, [x29, #-96]
    23c0:	sturh	w20, [x29, #-80]
    23c4:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    23c8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    23cc:	add	x8, x8, #0x0
    23d0:	add	x0, sp, #0x68
    23d4:	sub	x2, x29, #0x30
    23d8:	mov	x1, x24
    23dc:	stp	x8, xzr, [x29, #-48]
    23e0:	sturh	w25, [x29, #-32]
    23e4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    23e8:	ldr	w22, [x19, #96]
    23ec:	mov	x23, x0
    23f0:	mov	w0, #0x40                  	// #64
    23f4:	bl	0 <_ZN4llvm4UsernwEm>
    23f8:	mov	x1, x23
    23fc:	mov	x2, x26
    2400:	mov	w3, w22
    2404:	mov	x4, xzr
    2408:	mov	x24, x0
    240c:	str	x26, [sp, #40]
    2410:	bl	0 <_ZN4llvm10SwitchInstC1EPNS_5ValueEPNS_10BasicBlockEjPNS_11InstructionE>
    2414:	add	x0, sp, #0x68
    2418:	sub	x2, x29, #0x60
    241c:	mov	x1, x24
    2420:	stp	xzr, xzr, [x29, #-96]
    2424:	sturh	w20, [x29, #-80]
    2428:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    242c:	str	x0, [x19, #200]
    2430:	stur	xzr, [x29, #-128]
    2434:	ldr	w8, [x19, #96]
    2438:	cbz	w8, 284c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x688>
    243c:	ldr	x9, [sp, #96]
    2440:	mov	x27, x0
    2444:	mov	x22, xzr
    2448:	lsl	x21, x8, #3
    244c:	ldr	x20, [x9, #88]
    2450:	ldr	x28, [x20]
    2454:	cbz	x28, 4414 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2250>
    2458:	ldur	x8, [x28, #-24]
    245c:	ldrb	w9, [x8, #16]
    2460:	cmp	w9, #0x0
    2464:	csel	x8, x8, xzr, eq  // eq = none
    2468:	ldr	w8, [x8, #36]
    246c:	cmp	w8, #0x23
    2470:	b.ne	4434 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2270>  // b.any
    2474:	ldr	x0, [sp, #96]
    2478:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    247c:	mov	x1, x22
    2480:	mov	w2, wzr
    2484:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    2488:	mov	x24, x0
    248c:	mov	x0, x28
    2490:	mov	w1, wzr
    2494:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2498:	cbz	x0, 4454 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2290>
    249c:	ldrb	w8, [x0, #16]
    24a0:	mov	x22, x0
    24a4:	cmp	w8, #0x10
    24a8:	b.eq	24dc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x318>  // b.none
    24ac:	cmp	w8, #0x50
    24b0:	b.ne	415c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f98>  // b.any
    24b4:	ldur	x8, [x22, #-24]
    24b8:	cbz	x8, 415c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f98>
    24bc:	ldrb	w9, [x8, #16]
    24c0:	cbnz	w9, 415c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f98>
    24c4:	ldrb	w9, [x8, #33]
    24c8:	tbz	w9, #5, 415c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f98>
    24cc:	ldr	w8, [x8, #36]
    24d0:	cmp	w8, #0x20
    24d4:	b.eq	24e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x31c>  // b.none
    24d8:	b	415c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f98>
    24dc:	mov	x22, xzr
    24e0:	add	x0, sp, #0x68
    24e4:	mov	x1, x22
    24e8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24ec:	mov	w1, #0x1                   	// #1
    24f0:	mov	x0, x28
    24f4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    24f8:	cbz	x0, 4474 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x22b0>
    24fc:	ldrb	w8, [x0, #16]
    2500:	cmp	w8, #0x11
    2504:	b.cs	4494 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x22d0>  // b.hs, b.nlast
    2508:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    250c:	tbz	w0, #0, 25b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x3ec>
    2510:	ldp	x1, x2, [sp, #56]
    2514:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2518:	add	x8, x8, #0x0
    251c:	stp	x8, xzr, [x29, #-96]
    2520:	mov	w8, #0x103                 	// #259
    2524:	add	x0, sp, #0x68
    2528:	sub	x5, x29, #0x60
    252c:	mov	w3, wzr
    2530:	mov	w4, wzr
    2534:	sturh	w8, [x29, #-80]
    2538:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    253c:	ldr	x8, [x0]
    2540:	cbz	x8, 4394 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21d0>
    2544:	ldrb	w9, [x8, #8]
    2548:	cmp	w9, #0xf
    254c:	b.ne	43b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21f0>  // b.any
    2550:	mov	x23, x0
    2554:	ldr	x0, [x8, #24]
    2558:	cbz	x0, 4394 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21d0>
    255c:	ldrb	w8, [x0, #8]
    2560:	cmp	w8, #0xf
    2564:	b.ne	43b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21f0>  // b.any
    2568:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    256c:	mov	x25, x0
    2570:	mov	w0, #0x40                  	// #64
    2574:	mov	w1, #0x2                   	// #2
    2578:	bl	0 <_ZN4llvm4UsernwEmj>
    257c:	mov	x1, x25
    2580:	mov	x2, x23
    2584:	mov	w3, wzr
    2588:	mov	x4, xzr
    258c:	mov	x26, x0
    2590:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    2594:	mov	w8, #0x101                 	// #257
    2598:	stp	xzr, xzr, [x29, #-96]
    259c:	sturh	w8, [x29, #-80]
    25a0:	add	x0, sp, #0x68
    25a4:	sub	x2, x29, #0x60
    25a8:	mov	x1, x26
    25ac:	b	261c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x458>
    25b0:	ldp	x1, x2, [sp, #56]
    25b4:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    25b8:	add	x8, x8, #0x0
    25bc:	stp	x8, xzr, [x29, #-96]
    25c0:	mov	w8, #0x103                 	// #259
    25c4:	add	x0, sp, #0x68
    25c8:	sub	x5, x29, #0x60
    25cc:	mov	w4, #0x3                   	// #3
    25d0:	mov	w3, wzr
    25d4:	sturh	w8, [x29, #-80]
    25d8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    25dc:	mov	x23, x0
    25e0:	mov	w0, #0x40                  	// #64
    25e4:	mov	w1, #0x2                   	// #2
    25e8:	bl	0 <_ZN4llvm4UsernwEmj>
    25ec:	mov	x1, x24
    25f0:	mov	x2, x23
    25f4:	mov	w3, wzr
    25f8:	mov	x4, xzr
    25fc:	mov	x25, x0
    2600:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    2604:	mov	w8, #0x101                 	// #257
    2608:	add	x0, sp, #0x68
    260c:	sub	x2, x29, #0x60
    2610:	mov	x1, x25
    2614:	stp	xzr, xzr, [x29, #-96]
    2618:	sturh	w8, [x29, #-80]
    261c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2620:	ldr	x0, [sp, #72]
    2624:	bl	0 <_ZN4llvm17ConstantTokenNone3getERNS_11LLVMContextE>
    2628:	mov	x1, x0
    262c:	mov	x0, x22
    2630:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2634:	mov	x0, x22
    2638:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    263c:	ldr	x22, [x28, #40]
    2640:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2644:	add	x8, x8, #0x0
    2648:	stur	x8, [x29, #-96]
    264c:	sub	x8, x29, #0x80
    2650:	stur	x8, [x29, #-88]
    2654:	mov	w8, #0xb03                 	// #2819
    2658:	add	x1, x28, #0x18
    265c:	sub	x2, x29, #0x60
    2660:	mov	x0, x22
    2664:	sturh	w8, [x29, #-80]
    2668:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    266c:	ldp	x8, x9, [x28, #32]
    2670:	mov	x23, x0
    2674:	add	x9, x9, #0x28
    2678:	cmp	x9, x8
    267c:	b.eq	2698 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x4d4>  // b.none
    2680:	ldrb	w9, [x8]
    2684:	tbnz	w9, #2, 40fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f38>
    2688:	sub	x9, x8, #0x18
    268c:	cmp	x8, #0x0
    2690:	csel	x19, xzr, x9, eq  // eq = none
    2694:	b	269c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x4d8>
    2698:	mov	x19, xzr
    269c:	mov	x0, x23
    26a0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    26a4:	sub	x8, x29, #0x30
    26a8:	stur	x8, [x29, #-96]
    26ac:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    26b0:	add	x8, x8, #0x0
    26b4:	stp	x0, x1, [x29, #-48]
    26b8:	stur	x8, [x29, #-88]
    26bc:	mov	w8, #0x305                 	// #773
    26c0:	add	x1, x19, #0x18
    26c4:	sub	x2, x29, #0x60
    26c8:	mov	x0, x23
    26cc:	sturh	w8, [x29, #-80]
    26d0:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    26d4:	mov	x25, x0
    26d8:	mov	x0, x27
    26dc:	mov	x1, x24
    26e0:	mov	x2, x23
    26e4:	bl	0 <_ZN4llvm10SwitchInst7addCaseEPNS_11ConstantIntEPNS_10BasicBlockE>
    26e8:	mov	x0, x22
    26ec:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    26f0:	cbz	x0, 417c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1fb8>
    26f4:	ldrb	w8, [x0, #16]
    26f8:	cmp	w8, #0x1a
    26fc:	b.ne	419c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1fd8>  // b.any
    2700:	ldr	x8, [x0, #-24]!
    2704:	cbz	x8, 272c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x568>
    2708:	ldp	x9, x8, [x0, #8]
    270c:	and	x8, x8, #0xfffffffffffffffc
    2710:	str	x9, [x8]
    2714:	ldr	x9, [x0, #8]
    2718:	cbz	x9, 272c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x568>
    271c:	ldr	x10, [x9, #16]
    2720:	and	x10, x10, #0x3
    2724:	orr	x8, x10, x8
    2728:	str	x8, [x9, #16]
    272c:	str	x25, [x0]
    2730:	cbz	x25, 277c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x5b8>
    2734:	mov	x8, x25
    2738:	ldr	x9, [x8, #8]!
    273c:	mov	x10, x0
    2740:	str	x9, [x10, #8]!
    2744:	cbz	x9, 2760 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x59c>
    2748:	tst	x10, #0x3
    274c:	b.ne	41bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ff8>  // b.any
    2750:	ldr	x11, [x9, #16]
    2754:	and	x11, x11, #0x3
    2758:	orr	x10, x11, x10
    275c:	str	x10, [x9, #16]
    2760:	tst	x8, #0x3
    2764:	b.ne	41bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ff8>  // b.any
    2768:	ldr	x9, [x0, #16]
    276c:	and	x9, x9, #0x3
    2770:	orr	x9, x9, x8
    2774:	str	x9, [x0, #16]
    2778:	str	x0, [x8]
    277c:	ldr	x0, [sp, #128]
    2780:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    2784:	mov	w8, #0x101                 	// #257
    2788:	stp	xzr, xzr, [x29, #-96]
    278c:	sturh	w8, [x29, #-80]
    2790:	ldr	x8, [x25, #48]
    2794:	ldrb	w9, [x8]
    2798:	tbnz	w9, #2, 40fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f38>
    279c:	mov	x24, x0
    27a0:	sub	x9, x8, #0x18
    27a4:	cmp	x8, #0x0
    27a8:	mov	w0, #0x40                  	// #64
    27ac:	csel	x25, xzr, x9, eq  // eq = none
    27b0:	bl	0 <_ZN4llvm4UsernwEm>
    27b4:	mov	w2, #0x37                  	// #55
    27b8:	mov	x1, x24
    27bc:	mov	x3, xzr
    27c0:	mov	w4, wzr
    27c4:	mov	x5, x25
    27c8:	mov	x26, x0
    27cc:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
    27d0:	mov	w8, #0x2                   	// #2
    27d4:	sub	x1, x29, #0x60
    27d8:	mov	x0, x26
    27dc:	str	w8, [x26, #56]
    27e0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    27e4:	ldr	w1, [x26, #56]
    27e8:	mov	w2, #0x1                   	// #1
    27ec:	mov	x0, x26
    27f0:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
    27f4:	mov	x0, x28
    27f8:	mov	x1, x26
    27fc:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2800:	ldr	x0, [sp, #128]
    2804:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    2808:	mov	w1, #0xff                  	// #255
    280c:	mov	w2, wzr
    2810:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    2814:	mov	x1, x0
    2818:	mov	x0, x26
    281c:	mov	x2, x22
    2820:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2824:	mov	x0, x26
    2828:	mov	x1, x28
    282c:	mov	x2, x23
    2830:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2834:	ldur	x8, [x29, #-128]
    2838:	subs	x21, x21, #0x8
    283c:	add	x20, x20, #0x8
    2840:	add	x22, x8, #0x1
    2844:	stur	x22, [x29, #-128]
    2848:	b.ne	2450 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x28c>  // b.any
    284c:	ldr	x9, [sp, #40]
    2850:	mov	w0, #0x38                  	// #56
    2854:	mov	w1, wzr
    2858:	add	x8, x9, #0x28
    285c:	stp	x9, x8, [sp, #112]
    2860:	bl	0 <_ZN4llvm4UsernwEmj>
    2864:	ldr	x1, [sp, #128]
    2868:	mov	x2, xzr
    286c:	mov	x22, x0
    2870:	bl	0 <_ZN4llvm15UnreachableInstC1ERNS_11LLVMContextEPNS_11InstructionE>
    2874:	mov	w8, #0x101                 	// #257
    2878:	add	x0, sp, #0x68
    287c:	sub	x2, x29, #0x60
    2880:	mov	x1, x22
    2884:	stp	xzr, xzr, [x29, #-96]
    2888:	sturh	w8, [x29, #-80]
    288c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2890:	ldp	x20, x1, [sp, #96]
    2894:	ldr	x8, [sp, #48]
    2898:	str	x8, [x20, #216]
    289c:	cbz	x1, 28a8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x6e4>
    28a0:	add	x0, sp, #0x68
    28a4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    28a8:	ldr	x21, [sp, #88]
    28ac:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28b0:	add	x8, x8, #0x0
    28b4:	mov	w19, #0x103                 	// #259
    28b8:	add	x1, sp, #0x68
    28bc:	mov	x0, x21
    28c0:	mov	x2, x20
    28c4:	mov	w3, wzr
    28c8:	stp	x8, xzr, [sp, #104]
    28cc:	strh	w19, [sp, #120]
    28d0:	bl	4db4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    28d4:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    28d8:	mov	x23, x0
    28dc:	add	x8, x8, #0x0
    28e0:	add	x1, sp, #0x68
    28e4:	mov	w3, #0x1                   	// #1
    28e8:	mov	x0, x21
    28ec:	mov	x2, x20
    28f0:	stp	x8, xzr, [sp, #104]
    28f4:	strh	w19, [sp, #120]
    28f8:	bl	4db4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    28fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2900:	mov	x22, x0
    2904:	add	x8, x8, #0x0
    2908:	add	x1, sp, #0x68
    290c:	mov	w3, #0x2                   	// #2
    2910:	mov	x0, x21
    2914:	mov	x2, x20
    2918:	stp	x8, xzr, [sp, #104]
    291c:	strh	w19, [sp, #120]
    2920:	add	x19, sp, #0x68
    2924:	bl	4db4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>
    2928:	mov	x20, x0
    292c:	mov	x0, x23
    2930:	bl	4bbc <_ZL16postSplitCleanupRN4llvm8FunctionE>
    2934:	mov	x0, x22
    2938:	str	x22, [sp, #56]
    293c:	bl	4bbc <_ZL16postSplitCleanupRN4llvm8FunctionE>
    2940:	mov	x0, x20
    2944:	str	x20, [sp, #64]
    2948:	bl	4bbc <_ZL16postSplitCleanupRN4llvm8FunctionE>
    294c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2950:	ldr	d8, [x8]
    2954:	add	x25, x19, #0x10
    2958:	sub	x0, x29, #0x60
    295c:	mov	x1, x23
    2960:	str	x25, [sp, #104]
    2964:	str	d8, [sp, #112]
    2968:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    296c:	ldp	x20, x22, [x29, #-96]
    2970:	str	x23, [sp, #72]
    2974:	add	x21, x23, #0x48
    2978:	ldur	x23, [x29, #-80]
    297c:	cmp	x20, x21
    2980:	cset	w8, ne  // ne = any
    2984:	cmp	x23, #0x0
    2988:	cset	w9, ne  // ne = any
    298c:	cmp	x21, x22
    2990:	b.ne	3750 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x158c>  // b.any
    2994:	and	w8, w8, w9
    2998:	cbz	w8, 3854 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1690>
    299c:	b	3750 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x158c>
    29a0:	mov	x0, x23
    29a4:	bl	0 <_ZNK4llvm5Value10getContextEv>
    29a8:	stp	x0, xzr, [sp, #128]
    29ac:	mov	w8, #0x200                 	// #512
    29b0:	add	x0, sp, #0x68
    29b4:	mov	x1, x23
    29b8:	str	wzr, [sp, #144]
    29bc:	strb	wzr, [sp, #150]
    29c0:	stp	xzr, xzr, [sp, #112]
    29c4:	str	xzr, [sp, #104]
    29c8:	strh	w8, [sp, #148]
    29cc:	stp	xzr, xzr, [sp, #152]
    29d0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29d4:	ldr	x8, [sp, #88]
    29d8:	ldr	x0, [x8, #40]
    29dc:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    29e0:	ldr	x25, [x19, #176]
    29e4:	mov	x26, x0
    29e8:	mov	x1, x25
    29ec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    29f0:	mov	x22, x0
    29f4:	mov	x24, x1
    29f8:	mov	x0, x26
    29fc:	mov	x1, x25
    2a00:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
    2a04:	cbz	w0, 478c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x25c8>
    2a08:	and	w8, w24, #0xff
    2a0c:	cbnz	w8, 47ac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x25e8>
    2a10:	mov	w8, w0
    2a14:	add	x9, x22, #0x7
    2a18:	ldr	x0, [sp, #128]
    2a1c:	add	x9, x8, x9, lsr #3
    2a20:	sub	x9, x9, #0x1
    2a24:	udiv	x9, x9, x8
    2a28:	mul	x22, x9, x8
    2a2c:	bl	0 <_ZN4llvm4Type10getInt64TyERNS_11LLVMContextE>
    2a30:	mov	x1, x22
    2a34:	mov	w2, wzr
    2a38:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    2a3c:	mov	x2, x0
    2a40:	add	x1, sp, #0x68
    2a44:	mov	x0, x19
    2a48:	mov	x3, xzr
    2a4c:	bl	0 <_ZNK4llvm4coro5Shape9emitAllocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    2a50:	ldr	x8, [x19]
    2a54:	mov	w20, #0x101                 	// #257
    2a58:	mov	x22, x0
    2a5c:	ldr	x2, [x8]
    2a60:	stp	xzr, xzr, [x29, #-48]
    2a64:	sturh	w20, [x29, #-32]
    2a68:	ldr	x8, [x0]
    2a6c:	cmp	x8, x2
    2a70:	b.eq	2ac8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x904>  // b.none
    2a74:	ldrb	w8, [x22, #16]
    2a78:	cmp	w8, #0x10
    2a7c:	b.ls	2ab4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x8f0>  // b.plast
    2a80:	mov	w8, #0x101                 	// #257
    2a84:	sub	x3, x29, #0x60
    2a88:	mov	w0, #0x31                  	// #49
    2a8c:	mov	x1, x22
    2a90:	mov	x4, xzr
    2a94:	stp	xzr, xzr, [x29, #-96]
    2a98:	sturh	w8, [x29, #-80]
    2a9c:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    2aa0:	mov	x1, x0
    2aa4:	add	x0, sp, #0x68
    2aa8:	sub	x2, x29, #0x30
    2aac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ab0:	b	2ac4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x900>
    2ab4:	mov	w0, #0x31                  	// #49
    2ab8:	mov	x1, x22
    2abc:	mov	w3, wzr
    2ac0:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    2ac4:	mov	x22, x0
    2ac8:	mov	w1, #0x2                   	// #2
    2acc:	mov	x0, x23
    2ad0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ad4:	ldr	x8, [x22]
    2ad8:	mov	x23, x0
    2adc:	mov	w1, wzr
    2ae0:	mov	x0, x8
    2ae4:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    2ae8:	stp	xzr, xzr, [x29, #-48]
    2aec:	sturh	w20, [x29, #-32]
    2af0:	ldr	x8, [x23]
    2af4:	cmp	x8, x0
    2af8:	b.eq	2b44 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x980>  // b.none
    2afc:	ldrb	w8, [x23, #16]
    2b00:	ldr	x19, [sp, #96]
    2b04:	mov	x2, x0
    2b08:	cmp	w8, #0x10
    2b0c:	b.ls	2b4c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x988>  // b.plast
    2b10:	mov	w8, #0x101                 	// #257
    2b14:	sub	x3, x29, #0x60
    2b18:	mov	w0, #0x31                  	// #49
    2b1c:	mov	x1, x23
    2b20:	mov	x4, xzr
    2b24:	stp	xzr, xzr, [x29, #-96]
    2b28:	sturh	w8, [x29, #-80]
    2b2c:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    2b30:	mov	x1, x0
    2b34:	add	x0, sp, #0x68
    2b38:	sub	x2, x29, #0x30
    2b3c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2b40:	b	2b5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x998>
    2b44:	ldr	x19, [sp, #96]
    2b48:	b	2b60 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x99c>
    2b4c:	mov	w0, #0x31                  	// #49
    2b50:	mov	x1, x23
    2b54:	mov	w3, wzr
    2b58:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    2b5c:	mov	x23, x0
    2b60:	mov	w0, #0x40                  	// #64
    2b64:	mov	w1, #0x2                   	// #2
    2b68:	bl	0 <_ZN4llvm4UsernwEmj>
    2b6c:	mov	x1, x22
    2b70:	mov	x2, x23
    2b74:	mov	w3, wzr
    2b78:	mov	x4, xzr
    2b7c:	mov	x24, x0
    2b80:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    2b84:	mov	w8, #0x101                 	// #257
    2b88:	add	x0, sp, #0x68
    2b8c:	sub	x2, x29, #0x60
    2b90:	mov	x1, x24
    2b94:	stp	xzr, xzr, [x29, #-96]
    2b98:	sturh	w8, [x29, #-80]
    2b9c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ba0:	ldr	x1, [sp, #104]
    2ba4:	cbz	x1, 2bb0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x9ec>
    2ba8:	add	x0, sp, #0x68
    2bac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    2bb0:	ldr	x8, [x19, #184]
    2bb4:	mov	w9, #0x6                   	// #6
    2bb8:	stp	xzr, xzr, [sp, #112]
    2bbc:	str	x9, [sp, #104]
    2bc0:	cbz	x8, 2bdc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa18>
    2bc4:	orr	x9, x8, #0x8
    2bc8:	cmn	x9, #0x8
    2bcc:	str	x8, [sp, #120]
    2bd0:	b.eq	2bdc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa18>  // b.none
    2bd4:	add	x0, sp, #0x68
    2bd8:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    2bdc:	ldr	x0, [x19]
    2be0:	mov	x1, x22
    2be4:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    2be8:	ldr	x8, [sp, #120]
    2bec:	add	x9, x8, #0x10
    2bf0:	cmp	x9, #0x10
    2bf4:	b.hi	2c10 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa4c>  // b.pmore
    2bf8:	mov	w10, #0x1                   	// #1
    2bfc:	lsl	x9, x10, x9
    2c00:	mov	w10, #0x101                 	// #257
    2c04:	movk	w10, #0x1, lsl #16
    2c08:	tst	x9, x10
    2c0c:	b.ne	4614 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2450>  // b.any
    2c10:	ldrb	w9, [x8, #16]
    2c14:	cmp	w9, #0x17
    2c18:	b.ls	46cc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2508>  // b.plast
    2c1c:	orr	x9, x8, #0x8
    2c20:	cmn	x9, #0x8
    2c24:	str	x8, [x19, #184]
    2c28:	b.eq	2c34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xa70>  // b.none
    2c2c:	add	x0, sp, #0x68
    2c30:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    2c34:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2c38:	ldr	d0, [x8]
    2c3c:	sub	x8, x29, #0x60
    2c40:	add	x20, x8, #0x10
    2c44:	ldp	x8, x9, [sp, #80]
    2c48:	stur	x20, [x29, #-96]
    2c4c:	stur	d0, [x29, #-88]
    2c50:	ldr	w2, [x19, #96]
    2c54:	ldr	w8, [x8, #12]
    2c58:	ldr	x23, [x9, #64]
    2c5c:	cmp	w8, w2
    2c60:	b.cs	2c78 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xab4>  // b.hs, b.nlast
    2c64:	ldr	x0, [sp, #80]
    2c68:	mov	w3, #0x8                   	// #8
    2c6c:	add	x1, x0, #0x10
    2c70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2c74:	ldr	w2, [x19, #96]
    2c78:	stur	xzr, [x29, #-104]
    2c7c:	cbz	w2, 3390 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11cc>
    2c80:	mov	w9, w2
    2c84:	stp	x9, x23, [sp, #64]
    2c88:	ldr	x9, [sp, #80]
    2c8c:	mov	x8, xzr
    2c90:	mov	x24, xzr
    2c94:	mov	w21, #0x101                 	// #257
    2c98:	add	x9, x9, #0x10
    2c9c:	stp	x9, x20, [sp, #32]
    2ca0:	add	x9, sp, #0x68
    2ca4:	add	x10, x9, #0x30
    2ca8:	add	x9, x9, #0x12
    2cac:	stp	x9, x10, [sp, #48]
    2cb0:	cmp	x8, w2, uxtw
    2cb4:	b.cs	413c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f78>  // b.hs, b.nlast
    2cb8:	ldr	x9, [x19, #88]
    2cbc:	ldr	x25, [x9, x8, lsl #3]
    2cc0:	cbz	x25, 427c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20b8>
    2cc4:	ldur	x8, [x25, #-24]
    2cc8:	ldrb	w9, [x8, #16]
    2ccc:	cmp	w9, #0x0
    2cd0:	csel	x8, x8, xzr, eq  // eq = none
    2cd4:	ldr	w8, [x8, #36]
    2cd8:	cmp	w8, #0x24
    2cdc:	b.ne	429c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20d8>  // b.any
    2ce0:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2ce4:	add	x8, x8, #0x0
    2ce8:	ldp	x19, x0, [sp, #88]
    2cec:	stur	x8, [x29, #-48]
    2cf0:	sub	x8, x29, #0x68
    2cf4:	stur	x8, [x29, #-40]
    2cf8:	mov	w8, #0xb03                 	// #2819
    2cfc:	sturh	w8, [x29, #-32]
    2d00:	ldr	x20, [x19, #40]
    2d04:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2d08:	mov	x22, x0
    2d0c:	mov	x0, x19
    2d10:	bl	0 <_ZNK4llvm5Value7getNameEv>
    2d14:	ldurb	w8, [x29, #-32]
    2d18:	stp	x0, x1, [x29, #-128]
    2d1c:	cmp	w8, #0x1
    2d20:	b.eq	2d38 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xb74>  // b.none
    2d24:	cbnz	w8, 2d60 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xb9c>
    2d28:	mov	w8, #0x100                 	// #256
    2d2c:	stp	xzr, xzr, [sp, #104]
    2d30:	strh	w8, [sp, #120]
    2d34:	b	2dac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xbe8>
    2d38:	sub	x10, x29, #0x80
    2d3c:	stp	x10, xzr, [sp, #104]
    2d40:	mov	w10, #0x105                 	// #261
    2d44:	ldr	w8, [x29, #8]
    2d48:	ldrh	w9, [x29, #12]
    2d4c:	strh	w10, [sp, #120]
    2d50:	ldr	x10, [sp, #48]
    2d54:	strh	w9, [x10, #4]
    2d58:	str	w8, [x10]
    2d5c:	b	2dac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xbe8>
    2d60:	ldurb	w9, [x29, #-31]
    2d64:	ldur	x10, [x29, #-48]
    2d68:	mov	w11, #0x5                   	// #5
    2d6c:	strb	w11, [sp, #120]
    2d70:	cmp	w9, #0x1
    2d74:	sub	x9, x29, #0x30
    2d78:	csel	x9, x10, x9, eq  // eq = none
    2d7c:	mov	w10, #0x2                   	// #2
    2d80:	csel	w8, w8, w10, eq  // eq = none
    2d84:	sub	x10, x29, #0x80
    2d88:	cmp	w8, #0x2
    2d8c:	stp	x10, x9, [sp, #104]
    2d90:	strb	w8, [sp, #121]
    2d94:	b.ne	2dac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xbe8>  // b.any
    2d98:	ldrb	w8, [x9, #16]
    2d9c:	cbz	w8, 4554 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2390>
    2da0:	ldrb	w8, [x9, #17]
    2da4:	cmp	w8, #0x1
    2da8:	b.eq	4554 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2390>  // b.none
    2dac:	mov	w0, #0x78                  	// #120
    2db0:	bl	0 <_ZN4llvm4UsernwEm>
    2db4:	add	x4, sp, #0x68
    2db8:	mov	w2, #0x7                   	// #7
    2dbc:	mov	w3, #0xffffffff            	// #-1
    2dc0:	mov	x1, x22
    2dc4:	mov	x5, xzr
    2dc8:	mov	x27, x0
    2dcc:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
    2dd0:	mov	w2, #0x23                  	// #35
    2dd4:	mov	x0, x27
    2dd8:	mov	w1, wzr
    2ddc:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    2de0:	mov	w2, #0x15                  	// #21
    2de4:	mov	x0, x27
    2de8:	mov	w1, wzr
    2dec:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    2df0:	add	x0, x20, #0x18
    2df4:	mov	x1, x27
    2df8:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_8FunctionEE13addNodeToListEPS1_>
    2dfc:	mov	x8, x27
    2e00:	ldr	x9, [x8, #56]!
    2e04:	ldr	x10, [x23]
    2e08:	str	x23, [x27, #64]
    2e0c:	tst	x8, #0x7
    2e10:	and	x11, x10, #0xfffffffffffffff8
    2e14:	bfxil	x10, x9, #0, #3
    2e18:	str	x10, [x8]
    2e1c:	str	x8, [x11, #8]
    2e20:	b.ne	42bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x20f8>  // b.any
    2e24:	ldr	x9, [x23]
    2e28:	ldr	x0, [sp, #80]
    2e2c:	ldr	x20, [sp, #96]
    2e30:	and	x9, x9, #0x7
    2e34:	orr	x8, x9, x8
    2e38:	str	x8, [x23]
    2e3c:	ldp	w8, w9, [x0, #8]
    2e40:	cmp	w8, w9
    2e44:	b.cs	3358 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1194>  // b.hs, b.nlast
    2e48:	ldr	x9, [x0]
    2e4c:	str	x27, [x9, w8, uxtw #3]
    2e50:	ldp	w8, w9, [x0, #8]
    2e54:	cmp	w8, w9
    2e58:	b.cs	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.hs, b.nlast
    2e5c:	add	w8, w8, #0x1
    2e60:	str	w8, [x0, #8]
    2e64:	ldr	x26, [x25, #40]
    2e68:	add	x1, x25, #0x18
    2e6c:	add	x2, sp, #0x68
    2e70:	stp	xzr, xzr, [sp, #104]
    2e74:	mov	x0, x26
    2e78:	strh	w21, [sp, #120]
    2e7c:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    2e80:	mov	x22, x0
    2e84:	mov	x0, x26
    2e88:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    2e8c:	cbz	x0, 417c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1fb8>
    2e90:	ldrb	w8, [x0, #16]
    2e94:	mov	x28, x0
    2e98:	cmp	w8, #0x1a
    2e9c:	b.ne	419c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1fd8>  // b.any
    2ea0:	cbnz	x24, 31c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xffc>
    2ea4:	ldr	x19, [sp, #88]
    2ea8:	mov	x0, x19
    2eac:	bl	0 <_ZNK4llvm8Function10getContextEv>
    2eb0:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2eb4:	add	x8, x8, #0x0
    2eb8:	mov	x23, x0
    2ebc:	stp	x8, xzr, [sp, #104]
    2ec0:	mov	w8, #0x103                 	// #259
    2ec4:	mov	w0, #0x40                  	// #64
    2ec8:	strh	w8, [sp, #120]
    2ecc:	bl	0 <_Znwm>
    2ed0:	add	x2, sp, #0x68
    2ed4:	mov	x1, x23
    2ed8:	mov	x3, x19
    2edc:	mov	x4, x22
    2ee0:	mov	x24, x0
    2ee4:	bl	0 <_ZN4llvm10BasicBlockC1ERNS_11LLVMContextERKNS_5TwineEPNS_8FunctionEPS0_>
    2ee8:	mov	x0, x24
    2eec:	str	x24, [x20, #224]
    2ef0:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    2ef4:	mov	w8, #0x200                 	// #512
    2ef8:	ldr	x9, [sp, #56]
    2efc:	strh	w8, [sp, #148]
    2f00:	ldur	w8, [x29, #-88]
    2f04:	stp	xzr, x24, [sp, #104]
    2f08:	stp	x0, xzr, [sp, #128]
    2f0c:	str	wzr, [sp, #144]
    2f10:	strb	wzr, [sp, #150]
    2f14:	stp	xzr, xzr, [x9]
    2f18:	add	x9, x24, #0x28
    2f1c:	str	x9, [sp, #120]
    2f20:	cbnz	w8, 44f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2330>
    2f24:	ldr	x1, [x27]
    2f28:	cbz	x1, 4394 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21d0>
    2f2c:	ldrb	w8, [x1, #8]
    2f30:	cmp	w8, #0xf
    2f34:	b.ne	43b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21f0>  // b.any
    2f38:	ldr	w2, [x20, #96]
    2f3c:	add	x0, sp, #0x68
    2f40:	sub	x3, x29, #0x30
    2f44:	stp	xzr, xzr, [x29, #-48]
    2f48:	sturh	w21, [x29, #-32]
    2f4c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f50:	ldp	w8, w9, [x29, #-88]
    2f54:	mov	x22, x0
    2f58:	cmp	w8, w9
    2f5c:	b.cs	3374 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11b0>  // b.hs, b.nlast
    2f60:	ldur	x9, [x29, #-96]
    2f64:	str	x22, [x9, w8, uxtw #3]
    2f68:	ldp	w8, w9, [x29, #-88]
    2f6c:	cmp	w8, w9
    2f70:	b.cs	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.hs, b.nlast
    2f74:	add	w8, w8, #0x1
    2f78:	mov	x0, x20
    2f7c:	stur	w8, [x29, #-88]
    2f80:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2f84:	cbz	x1, 3004 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe40>
    2f88:	mov	x22, x0
    2f8c:	lsl	x19, x1, #3
    2f90:	ldr	x1, [x22]
    2f94:	ldr	w2, [x20, #96]
    2f98:	add	x0, sp, #0x68
    2f9c:	sub	x3, x29, #0x30
    2fa0:	stp	xzr, xzr, [x29, #-48]
    2fa4:	sturh	w21, [x29, #-32]
    2fa8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    2fac:	ldp	w8, w9, [x29, #-88]
    2fb0:	mov	x23, x0
    2fb4:	cmp	w8, w9
    2fb8:	b.cs	2fe8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe24>  // b.hs, b.nlast
    2fbc:	ldur	x9, [x29, #-96]
    2fc0:	str	x23, [x9, w8, uxtw #3]
    2fc4:	ldp	w8, w9, [x29, #-88]
    2fc8:	cmp	w8, w9
    2fcc:	b.cs	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.hs, b.nlast
    2fd0:	add	w8, w8, #0x1
    2fd4:	subs	x19, x19, #0x8
    2fd8:	add	x22, x22, #0x8
    2fdc:	stur	w8, [x29, #-88]
    2fe0:	b.ne	2f90 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xdcc>  // b.any
    2fe4:	b	3004 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe40>
    2fe8:	ldr	x1, [sp, #40]
    2fec:	sub	x0, x29, #0x60
    2ff0:	mov	w3, #0x8                   	// #8
    2ff4:	mov	x2, xzr
    2ff8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ffc:	ldur	w8, [x29, #-88]
    3000:	b	2fbc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xdf8>
    3004:	ldr	x8, [sp, #88]
    3008:	ldr	x8, [x8, #24]
    300c:	cbz	x8, 4514 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2350>
    3010:	ldrb	w9, [x8, #8]
    3014:	cmp	w9, #0xc
    3018:	b.ne	4534 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2370>  // b.any
    301c:	ldr	x9, [x8, #16]
    3020:	ldur	w8, [x29, #-88]
    3024:	ldr	x22, [x9]
    3028:	cmp	w8, #0x1
    302c:	mov	x2, x22
    3030:	b.eq	3058 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xe94>  // b.none
    3034:	cbz	x22, 45b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x23f0>
    3038:	ldrb	w9, [x22, #8]
    303c:	cmp	w9, #0xd
    3040:	b.ne	45d4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2410>  // b.any
    3044:	ldr	w9, [x22, #12]
    3048:	cbz	w9, 45f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2430>
    304c:	cbz	w8, 409c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ed8>
    3050:	ldr	x8, [x22, #16]
    3054:	ldr	x2, [x8]
    3058:	ldur	x8, [x29, #-96]
    305c:	ldr	x23, [x8]
    3060:	stp	xzr, xzr, [x29, #-128]
    3064:	sturh	w21, [x29, #-112]
    3068:	ldr	x8, [x23]
    306c:	cmp	x8, x2
    3070:	b.eq	30c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf00>  // b.none
    3074:	ldrb	w8, [x23, #16]
    3078:	cmp	w8, #0x10
    307c:	b.ls	30b0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xeec>  // b.plast
    3080:	sub	x3, x29, #0x30
    3084:	mov	w0, #0x31                  	// #49
    3088:	mov	x1, x23
    308c:	mov	x4, xzr
    3090:	stp	xzr, xzr, [x29, #-48]
    3094:	sturh	w21, [x29, #-32]
    3098:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    309c:	mov	x1, x0
    30a0:	add	x0, sp, #0x68
    30a4:	sub	x2, x29, #0x80
    30a8:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    30ac:	b	30c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xefc>
    30b0:	mov	w0, #0x31                  	// #49
    30b4:	mov	x1, x23
    30b8:	mov	w3, wzr
    30bc:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    30c0:	mov	x23, x0
    30c4:	ldur	w8, [x29, #-88]
    30c8:	cmp	w8, #0x1
    30cc:	b.eq	3170 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xfac>  // b.none
    30d0:	mov	x0, x22
    30d4:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    30d8:	mov	x1, x0
    30dc:	add	x0, sp, #0x68
    30e0:	sub	x3, x29, #0x80
    30e4:	sub	x5, x29, #0x30
    30e8:	mov	w4, #0x1                   	// #1
    30ec:	mov	x2, x23
    30f0:	stur	wzr, [x29, #-128]
    30f4:	stp	xzr, xzr, [x29, #-48]
    30f8:	sturh	w21, [x29, #-32]
    30fc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3100:	ldur	w8, [x29, #-88]
    3104:	mov	x23, x0
    3108:	cmp	w8, #0x1
    310c:	b.eq	3170 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xfac>  // b.none
    3110:	cbz	w8, 409c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ed8>
    3114:	mov	w9, #0x2                   	// #2
    3118:	sub	x19, x9, x8
    311c:	mov	w20, #0x1                   	// #1
    3120:	ldur	x8, [x29, #-96]
    3124:	add	x0, sp, #0x68
    3128:	sub	x3, x29, #0x80
    312c:	sub	x5, x29, #0x30
    3130:	ldr	x2, [x8, x20, lsl #3]
    3134:	mov	w4, #0x1                   	// #1
    3138:	mov	x1, x23
    313c:	stur	w20, [x29, #-128]
    3140:	stp	xzr, xzr, [x29, #-48]
    3144:	sturh	w21, [x29, #-32]
    3148:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    314c:	add	x8, x19, x20
    3150:	cmp	x8, #0x1
    3154:	mov	x23, x0
    3158:	b.eq	3170 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xfac>  // b.none
    315c:	ldur	w8, [x29, #-88]
    3160:	add	x20, x20, #0x1
    3164:	cmp	x20, x8
    3168:	b.cc	3120 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xf5c>  // b.lo, b.ul, b.last
    316c:	b	409c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ed8>
    3170:	ldr	x22, [sp, #128]
    3174:	cmp	x23, #0x0
    3178:	cset	w1, ne  // ne = any
    317c:	mov	w0, #0x38                  	// #56
    3180:	bl	0 <_ZN4llvm4UsernwEmj>
    3184:	mov	x1, x22
    3188:	mov	x2, x23
    318c:	mov	x3, xzr
    3190:	mov	x20, x0
    3194:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
    3198:	add	x0, sp, #0x68
    319c:	sub	x2, x29, #0x30
    31a0:	mov	x1, x20
    31a4:	stp	xzr, xzr, [x29, #-48]
    31a8:	sturh	w21, [x29, #-32]
    31ac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    31b0:	ldr	x1, [sp, #104]
    31b4:	cbz	x1, 31c0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xffc>
    31b8:	add	x0, sp, #0x68
    31bc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    31c0:	ldr	x8, [x28, #-24]!
    31c4:	cbz	x8, 31ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1028>
    31c8:	ldp	x9, x8, [x28, #8]
    31cc:	and	x8, x8, #0xfffffffffffffffc
    31d0:	str	x9, [x8]
    31d4:	ldr	x9, [x28, #8]
    31d8:	cbz	x9, 31ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1028>
    31dc:	ldr	x10, [x9, #16]
    31e0:	and	x10, x10, #0x3
    31e4:	orr	x8, x10, x8
    31e8:	str	x8, [x9, #16]
    31ec:	str	x24, [x28]
    31f0:	cbz	x24, 323c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1078>
    31f4:	mov	x8, x24
    31f8:	ldr	x9, [x8, #8]!
    31fc:	mov	x10, x28
    3200:	str	x9, [x10, #8]!
    3204:	cbz	x9, 3220 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x105c>
    3208:	tst	x10, #0x3
    320c:	b.ne	41bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ff8>  // b.any
    3210:	ldr	x11, [x9, #16]
    3214:	and	x11, x11, #0x3
    3218:	orr	x10, x11, x10
    321c:	str	x10, [x9, #16]
    3220:	tst	x8, #0x3
    3224:	b.ne	41bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ff8>  // b.any
    3228:	ldr	x9, [x28, #16]
    322c:	and	x9, x9, #0x3
    3230:	orr	x9, x9, x8
    3234:	str	x9, [x28, #16]
    3238:	str	x28, [x8]
    323c:	ldur	w8, [x29, #-88]
    3240:	cbz	w8, 409c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ed8>
    3244:	ldur	x8, [x29, #-96]
    3248:	mov	x1, x27
    324c:	mov	x2, x26
    3250:	ldr	x0, [x8]
    3254:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3258:	ldrb	w8, [x25, #16]
    325c:	ldr	w19, [x25, #20]
    3260:	mov	w27, #0x18                  	// #24
    3264:	cmp	w8, #0x50
    3268:	b.eq	3298 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x10d4>  // b.none
    326c:	cmp	w8, #0x23
    3270:	b.eq	3284 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x10c0>  // b.none
    3274:	cmp	w8, #0x1d
    3278:	b.ne	42dc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2118>  // b.any
    327c:	mov	x20, #0xfffffffffffffffe    	// #-2
    3280:	b	329c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x10d8>
    3284:	mov	x0, x25
    3288:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
    328c:	mov	x8, xzr
    3290:	sub	x20, x8, w0, uxtw
    3294:	b	329c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x10d8>
    3298:	mov	x20, xzr
    329c:	and	x22, x19, #0xfffffff
    32a0:	mneg	x8, x22, x27
    32a4:	mov	x0, x25
    32a8:	add	x19, x25, x8
    32ac:	madd	x23, x20, x27, x25
    32b0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    32b4:	mov	w8, w0
    32b8:	mneg	x9, x8, x27
    32bc:	add	x9, x23, x9
    32c0:	sub	x9, x9, #0x18
    32c4:	cmp	x19, x9
    32c8:	b.eq	3324 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1160>  // b.none
    32cc:	mul	x8, x8, x27
    32d0:	add	x9, x20, x22
    32d4:	neg	x8, x8
    32d8:	madd	x8, x9, x27, x8
    32dc:	sub	x20, x8, #0x18
    32e0:	mov	w8, #0x1                   	// #1
    32e4:	ldur	w9, [x29, #-88]
    32e8:	cmp	x8, x9
    32ec:	b.cs	409c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ed8>  // b.hs, b.nlast
    32f0:	ldur	x9, [x29, #-96]
    32f4:	mov	x2, x26
    32f8:	add	x22, x8, #0x1
    32fc:	ldr	x0, [x9, x8, lsl #3]
    3300:	ldr	x1, [x19], #24
    3304:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3308:	subs	x20, x20, #0x18
    330c:	mov	x8, x22
    3310:	b.ne	32e4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1120>  // b.any
    3314:	ldur	w8, [x29, #-88]
    3318:	cmp	x22, x8
    331c:	b.eq	3334 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1170>  // b.none
    3320:	b	42f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2130>
    3324:	mov	w22, #0x1                   	// #1
    3328:	ldur	w8, [x29, #-88]
    332c:	cmp	x22, x8
    3330:	b.ne	42f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2130>  // b.any
    3334:	ldur	x8, [x29, #-104]
    3338:	ldr	x19, [sp, #96]
    333c:	ldp	x9, x23, [sp, #64]
    3340:	add	x8, x8, #0x1
    3344:	stur	x8, [x29, #-104]
    3348:	ldr	w2, [x19, #96]
    334c:	cmp	x8, x9
    3350:	b.ne	2cb0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xaec>  // b.any
    3354:	b	3390 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x11cc>
    3358:	ldr	x1, [sp, #32]
    335c:	mov	w3, #0x8                   	// #8
    3360:	mov	x2, xzr
    3364:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3368:	ldr	x0, [sp, #80]
    336c:	ldr	w8, [x0, #8]
    3370:	b	2e48 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xc84>
    3374:	ldr	x1, [sp, #40]
    3378:	sub	x0, x29, #0x60
    337c:	mov	w3, #0x8                   	// #8
    3380:	mov	x2, xzr
    3384:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3388:	ldur	w8, [x29, #-88]
    338c:	b	2f60 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0xd9c>
    3390:	ldr	x8, [sp, #80]
    3394:	ldr	w8, [x8, #8]
    3398:	cmp	w8, w2
    339c:	b.ne	46ec <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2528>  // b.any
    33a0:	mov	w8, w2
    33a4:	stur	xzr, [x29, #-104]
    33a8:	str	x8, [sp, #72]
    33ac:	cbz	w8, 36f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1534>
    33b0:	sub	x10, x29, #0x30
    33b4:	adrp	x26, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    33b8:	add	x11, sp, #0x68
    33bc:	ldr	x9, [x19, #88]
    33c0:	ldr	x26, [x26]
    33c4:	add	x10, x10, #0x8
    33c8:	str	x10, [sp, #48]
    33cc:	add	x27, x11, #0xa8
    33d0:	add	x10, x11, #0x78
    33d4:	add	x28, x11, #0x80
    33d8:	add	x22, x11, #0xc0
    33dc:	ldr	x11, [sp, #80]
    33e0:	mov	w23, #0x101                 	// #257
    33e4:	mov	x8, xzr
    33e8:	str	x10, [sp, #56]
    33ec:	add	x10, x26, #0x10
    33f0:	mov	w25, #0x1                   	// #1
    33f4:	movk	w23, #0x1, lsl #16
    33f8:	str	x10, [sp, #64]
    33fc:	ldr	x10, [x11]
    3400:	ldr	x24, [x9]
    3404:	mov	w0, #0x2000                	// #8192
    3408:	ldr	x20, [x10, x8, lsl #3]
    340c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3410:	add	x8, x8, #0x0
    3414:	stur	x8, [x29, #-128]
    3418:	sub	x8, x29, #0x68
    341c:	stur	x8, [x29, #-120]
    3420:	mov	w8, #0xb03                 	// #2819
    3424:	sturh	w8, [x29, #-112]
    3428:	sub	x8, x29, #0x80
    342c:	stp	x8, x19, [sp, #120]
    3430:	mov	w8, #0x3                   	// #3
    3434:	str	w8, [sp, #136]
    3438:	ldr	x8, [sp, #88]
    343c:	str	xzr, [sp, #144]
    3440:	stp	x8, x20, [sp, #104]
    3444:	mov	w8, #0x80                  	// #128
    3448:	str	w8, [sp, #168]
    344c:	bl	0 <_Znwm>
    3450:	ldr	w9, [sp, #168]
    3454:	stp	x0, xzr, [sp, #152]
    3458:	sub	w8, w9, #0x1
    345c:	tst	w9, w8
    3460:	b.ne	4314 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2150>  // b.any
    3464:	mov	x8, #0xfffffffffffffff8    	// #-8
    3468:	stp	xzr, x8, [x29, #-32]
    346c:	mov	w8, #0x2                   	// #2
    3470:	stur	x8, [x29, #-40]
    3474:	ldr	x8, [sp, #64]
    3478:	stur	xzr, [x29, #-16]
    347c:	stur	x8, [x29, #-48]
    3480:	cbz	w9, 3528 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1364>
    3484:	lsl	x9, x9, #6
    3488:	mov	x8, xzr
    348c:	add	x21, x0, #0x10
    3490:	mov	x10, #0xfffffffffffffff8    	// #-8
    3494:	sub	x19, x9, #0x40
    3498:	mov	w9, #0x2                   	// #2
    349c:	and	x12, x9, #0x6
    34a0:	mov	x0, x21
    34a4:	add	x11, x10, #0x10
    34a8:	str	x12, [x0, #-8]!
    34ac:	cmp	x11, #0x10
    34b0:	stp	xzr, x10, [x21]
    34b4:	b.hi	34e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1324>  // b.pmore
    34b8:	lsl	x10, x25, x11
    34bc:	tst	x10, x23
    34c0:	b.eq	34e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1324>  // b.none
    34c4:	add	x9, x26, #0x10
    34c8:	stur	x9, [x21, #-16]
    34cc:	str	x8, [x21, #16]
    34d0:	cbz	x19, 3504 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1340>
    34d4:	ldur	x9, [x29, #-40]
    34d8:	ldur	x10, [x29, #-24]
    34dc:	sub	x19, x19, #0x40
    34e0:	add	x21, x21, #0x40
    34e4:	b	349c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x12d8>
    34e8:	and	x1, x9, #0xfffffffffffffff8
    34ec:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
    34f0:	ldur	x8, [x29, #-16]
    34f4:	add	x9, x26, #0x10
    34f8:	stur	x9, [x21, #-16]
    34fc:	str	x8, [x21, #16]
    3500:	cbnz	x19, 34d4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1310>
    3504:	ldur	x8, [x29, #-24]
    3508:	add	x8, x8, #0x10
    350c:	cmp	x8, #0x10
    3510:	b.hi	3520 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x135c>  // b.pmore
    3514:	lsl	x8, x25, x8
    3518:	tst	x8, x23
    351c:	b.ne	3528 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1364>  // b.any
    3520:	ldr	x0, [sp, #48]
    3524:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    3528:	ldr	x0, [sp, #88]
    352c:	strb	wzr, [sp, #176]
    3530:	strb	wzr, [sp, #208]
    3534:	bl	0 <_ZNK4llvm8Function10getContextEv>
    3538:	mov	w8, #0x200                 	// #512
    353c:	strh	w8, [sp, #268]
    3540:	ldr	x8, [sp, #96]
    3544:	str	xzr, [sp, #224]
    3548:	stp	x0, xzr, [sp, #248]
    354c:	str	wzr, [sp, #264]
    3550:	strb	wzr, [sp, #270]
    3554:	stp	xzr, xzr, [x28]
    3558:	stp	xzr, xzr, [x27]
    355c:	stp	xzr, xzr, [x22]
    3560:	str	x24, [sp, #312]
    3564:	ldr	w8, [x8, #168]
    3568:	sub	w8, w8, #0x1
    356c:	cmp	w8, #0x2
    3570:	b.cs	4334 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2170>  // b.hs, b.nlast
    3574:	cbz	x20, 4354 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2190>
    3578:	cbz	x24, 4374 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21b0>
    357c:	add	x0, sp, #0x68
    3580:	bl	5004 <_ZN12_GLOBAL__N_110CoroCloner6createEv>
    3584:	ldr	x1, [sp, #224]
    3588:	ldr	x20, [sp, #96]
    358c:	cbz	x1, 3598 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x13d4>
    3590:	ldr	x0, [sp, #56]
    3594:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3598:	ldrb	w8, [sp, #208]
    359c:	cbz	w8, 3600 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x143c>
    35a0:	ldr	w8, [sp, #200]
    35a4:	cbz	w8, 35e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1424>
    35a8:	ldr	x9, [sp, #184]
    35ac:	lsl	x19, x8, #4
    35b0:	add	x24, x9, #0x8
    35b4:	b	35c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1400>
    35b8:	subs	x19, x19, #0x10
    35bc:	add	x24, x24, #0x10
    35c0:	b.eq	35e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1424>  // b.none
    35c4:	ldur	x8, [x24, #-8]
    35c8:	orr	x8, x8, #0x4
    35cc:	cmn	x8, #0x4
    35d0:	b.eq	35b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x13f4>  // b.none
    35d4:	ldr	x1, [x24]
    35d8:	cbz	x1, 35b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x13f4>
    35dc:	mov	x0, x24
    35e0:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    35e4:	b	35b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x13f4>
    35e8:	ldr	x0, [sp, #184]
    35ec:	bl	0 <_ZdlPv>
    35f0:	ldr	x8, [sp, #176]
    35f4:	strb	wzr, [sp, #208]
    35f8:	add	x8, x8, #0x1
    35fc:	str	x8, [sp, #176]
    3600:	ldr	w8, [sp, #168]
    3604:	cbz	w8, 3690 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x14cc>
    3608:	ldr	x9, [sp, #152]
    360c:	lsl	x19, x8, #6
    3610:	add	x24, x9, #0x28
    3614:	b	362c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1468>
    3618:	sub	x0, x24, #0x20
    361c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    3620:	subs	x19, x19, #0x40
    3624:	add	x24, x24, #0x40
    3628:	b.eq	3690 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x14cc>  // b.none
    362c:	ldur	x8, [x24, #-16]
    3630:	orr	x9, x8, #0x8
    3634:	cmn	x9, #0x8
    3638:	b.eq	3658 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1494>  // b.none
    363c:	ldr	x9, [x24, #16]
    3640:	add	x9, x9, #0x10
    3644:	cmp	x9, #0x10
    3648:	b.hi	3674 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x14b0>  // b.pmore
    364c:	lsl	x9, x25, x9
    3650:	tst	x9, x23
    3654:	b.eq	3674 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x14b0>  // b.none
    3658:	add	x8, x8, #0x10
    365c:	cmp	x8, #0x10
    3660:	b.hi	3618 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1454>  // b.pmore
    3664:	lsl	x8, x25, x8
    3668:	tst	x8, x23
    366c:	b.ne	3620 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x145c>  // b.any
    3670:	b	3618 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1454>
    3674:	mov	x0, x24
    3678:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    367c:	ldur	x8, [x24, #-16]
    3680:	add	x8, x8, #0x10
    3684:	cmp	x8, #0x10
    3688:	b.ls	3664 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x14a0>  // b.plast
    368c:	b	3618 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1454>
    3690:	ldr	x0, [sp, #152]
    3694:	bl	0 <_ZdlPv>
    3698:	ldur	x8, [x29, #-104]
    369c:	ldr	x9, [sp, #72]
    36a0:	add	x8, x8, #0x1
    36a4:	cmp	x8, x9
    36a8:	stur	x8, [x29, #-104]
    36ac:	b.eq	36f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1534>  // b.none
    36b0:	ldr	w9, [x20, #96]
    36b4:	cmp	x8, x9
    36b8:	b.cs	413c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f78>  // b.hs, b.nlast
    36bc:	ldr	x11, [sp, #80]
    36c0:	ldr	x10, [x20, #88]
    36c4:	mov	x19, x20
    36c8:	ldr	w9, [x11, #8]
    36cc:	cmp	x8, x9
    36d0:	add	x9, x10, x8, lsl #3
    36d4:	b.cc	33fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1238>  // b.lo, b.ul, b.last
    36d8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    36dc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    36e0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    36e4:	add	x0, x0, #0x0
    36e8:	add	x1, x1, #0x0
    36ec:	add	x3, x3, #0x0
    36f0:	mov	w2, #0x95                  	// #149
    36f4:	bl	0 <__assert_fail>
    36f8:	ldur	x0, [x29, #-96]
    36fc:	sub	x8, x29, #0x60
    3700:	add	x8, x8, #0x10
    3704:	cmp	x0, x8
    3708:	b.eq	3710 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x154c>  // b.none
    370c:	bl	0 <free>
    3710:	add	sp, sp, #0x1c0
    3714:	ldp	x20, x19, [sp, #96]
    3718:	ldp	x22, x21, [sp, #80]
    371c:	ldp	x24, x23, [sp, #64]
    3720:	ldp	x26, x25, [sp, #48]
    3724:	ldp	x28, x27, [sp, #32]
    3728:	ldp	x29, x30, [sp, #16]
    372c:	ldr	d8, [sp], #112
    3730:	ret
    3734:	add	x0, sp, #0x68
    3738:	mov	w3, #0x8                   	// #8
    373c:	mov	x1, x25
    3740:	mov	x2, xzr
    3744:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3748:	ldr	w8, [sp, #112]
    374c:	b	37c4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1600>
    3750:	ldrb	w8, [x23]
    3754:	tbnz	w8, #2, 40fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f38>
    3758:	sub	x8, x23, #0x18
    375c:	cmp	x23, #0x0
    3760:	csel	x8, xzr, x8, eq  // eq = none
    3764:	cbz	x23, 44d4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2310>
    3768:	ldrb	w9, [x8, #16]
    376c:	cmp	w9, #0x50
    3770:	csel	x24, x8, xzr, eq  // eq = none
    3774:	cbz	x24, 37e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x161c>
    3778:	ldur	x0, [x24, #-24]
    377c:	cbz	x0, 37e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x161c>
    3780:	bl	0 <_ZNK4llvm5Value17stripPointerCastsEv>
    3784:	cbz	x0, 4634 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2470>
    3788:	ldrb	w8, [x0, #16]
    378c:	cmp	w8, #0x50
    3790:	b.ne	37e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x161c>  // b.any
    3794:	ldur	x8, [x0, #-24]
    3798:	cbz	x8, 37e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x161c>
    379c:	ldrb	w9, [x8, #16]
    37a0:	cbnz	w9, 37e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x161c>
    37a4:	ldrb	w9, [x8, #33]
    37a8:	tbz	w9, #5, 37e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x161c>
    37ac:	ldr	w8, [x8, #36]
    37b0:	cmp	w8, #0x22
    37b4:	b.ne	37e0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x161c>  // b.any
    37b8:	ldp	w8, w9, [sp, #112]
    37bc:	cmp	w8, w9
    37c0:	b.cs	3734 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1570>  // b.hs, b.nlast
    37c4:	ldr	x9, [sp, #104]
    37c8:	str	x24, [x9, w8, uxtw #3]
    37cc:	ldp	w8, w9, [sp, #112]
    37d0:	cmp	w8, w9
    37d4:	b.cs	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.hs, b.nlast
    37d8:	add	w8, w8, #0x1
    37dc:	str	w8, [sp, #112]
    37e0:	ldrb	w8, [x22]
    37e4:	tbnz	w8, #2, 411c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f58>
    37e8:	ldr	x23, [x23, #8]
    37ec:	sub	x8, x22, #0x18
    37f0:	cmp	x22, #0x0
    37f4:	csel	x8, xzr, x8, eq  // eq = none
    37f8:	add	x8, x8, #0x28
    37fc:	cmp	x8, x23
    3800:	b.ne	3834 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1670>  // b.any
    3804:	ldr	x22, [x22, #8]
    3808:	cmp	x20, x22
    380c:	b.eq	3834 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1670>  // b.none
    3810:	ldrb	w8, [x22]
    3814:	tbnz	w8, #2, 411c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f58>
    3818:	sub	x8, x22, #0x18
    381c:	cmp	x22, #0x0
    3820:	csel	x8, xzr, x8, eq  // eq = none
    3824:	ldr	x23, [x8, #48]
    3828:	add	x8, x8, #0x28
    382c:	cmp	x8, x23
    3830:	b.eq	3804 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1640>  // b.none
    3834:	cmp	x20, x21
    3838:	cset	w8, ne  // ne = any
    383c:	cmp	x23, #0x0
    3840:	cset	w9, ne  // ne = any
    3844:	and	w8, w8, w9
    3848:	tbnz	w8, #0, 3750 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x158c>
    384c:	cmp	x21, x22
    3850:	b.ne	3750 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x158c>  // b.any
    3854:	ldr	w8, [sp, #112]
    3858:	cbz	w8, 3bac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19e8>
    385c:	ldr	x20, [sp, #104]
    3860:	mov	w19, wzr
    3864:	mov	w21, #0x18                  	// #24
    3868:	mov	w23, #0xfffffffe            	// #-2
    386c:	add	x22, x20, x8, lsl #3
    3870:	b	3888 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16c4>
    3874:	ldur	x0, [x29, #-88]
    3878:	bl	0 <_ZdlPv>
    387c:	add	x20, x20, #0x8
    3880:	cmp	x20, x22
    3884:	b.eq	3b98 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19d4>  // b.none
    3888:	ldr	x24, [x20]
    388c:	ldp	x8, x9, [x24, #32]
    3890:	add	x9, x9, #0x28
    3894:	cmp	x9, x8
    3898:	b.eq	38b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16f0>  // b.none
    389c:	ldrb	w9, [x8]
    38a0:	tbnz	w9, #2, 40fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f38>
    38a4:	sub	x9, x8, #0x18
    38a8:	cmp	x8, #0x0
    38ac:	csel	x25, xzr, x9, eq  // eq = none
    38b0:	b	38b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16f4>
    38b4:	mov	x25, xzr
    38b8:	stp	xzr, xzr, [x29, #-96]
    38bc:	stur	wzr, [x29, #-72]
    38c0:	stur	xzr, [x29, #-80]
    38c4:	ldrb	w8, [x25, #16]
    38c8:	mov	x0, xzr
    38cc:	sub	w9, w8, #0x19
    38d0:	cmp	w9, #0xa
    38d4:	b.hi	3878 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16b4>  // b.pmore
    38d8:	mov	x27, xzr
    38dc:	mov	x26, x25
    38e0:	b	3924 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1760>
    38e4:	cmp	w9, w8
    38e8:	ccmp	w8, w23, #0x4, hi  // hi = pmore
    38ec:	csinc	w1, wzr, w8, eq  // eq = none
    38f0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    38f4:	mov	x28, x0
    38f8:	ldr	x0, [x26, #40]
    38fc:	sub	x2, x29, #0x60
    3900:	mov	x1, x28
    3904:	bl	70a8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE>
    3908:	mov	x0, x28
    390c:	bl	0 <_ZNK4llvm10BasicBlock29getFirstNonPHIOrDbgOrLifetimeEv>
    3910:	ldrb	w8, [x0, #16]
    3914:	mov	x26, x0
    3918:	sub	w9, w8, #0x19
    391c:	cmp	w9, #0xb
    3920:	b.cs	3874 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16b0>  // b.hs, b.nlast
    3924:	cbz	x26, 40dc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f18>
    3928:	and	w9, w8, #0xff
    392c:	cmp	w9, #0x1a
    3930:	b.eq	3974 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x17b0>  // b.none
    3934:	cmp	w9, #0x19
    3938:	b.eq	3a8c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x18c8>  // b.none
    393c:	and	w8, w8, #0xff
    3940:	cmp	w8, #0x1b
    3944:	b.ne	3874 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16b0>  // b.any
    3948:	ldr	w8, [x26, #20]
    394c:	and	x9, x8, #0xfffffff
    3950:	cbz	w9, 41fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2038>
    3954:	tbnz	w8, #30, 39a4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x17e0>
    3958:	mneg	x9, x9, x21
    395c:	add	x9, x26, x9
    3960:	ldr	x4, [x9]
    3964:	ldur	w9, [x29, #-72]
    3968:	ldur	x10, [x29, #-88]
    396c:	cbnz	w9, 39b8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x17f4>
    3970:	b	3a10 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x184c>
    3974:	ldr	w8, [x26, #20]
    3978:	and	w8, w8, #0xfffffff
    397c:	cmp	w8, #0x1
    3980:	b.ne	3874 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16b0>  // b.any
    3984:	ldur	x28, [x26, #-24]
    3988:	cbz	x28, 3998 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x17d4>
    398c:	ldrb	w8, [x28, #16]
    3990:	cmp	w8, #0x12
    3994:	b.ne	43f4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2230>  // b.any
    3998:	cmp	x26, x25
    399c:	csel	x27, x28, x27, eq  // eq = none
    39a0:	b	38f8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1734>
    39a4:	ldur	x9, [x26, #-8]
    39a8:	ldr	x4, [x9]
    39ac:	ldur	w9, [x29, #-72]
    39b0:	ldur	x10, [x29, #-88]
    39b4:	cbz	w9, 3a10 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x184c>
    39b8:	orr	x11, x4, #0x8
    39bc:	cmn	x11, #0x8
    39c0:	b.eq	41dc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2018>  // b.none
    39c4:	ubfx	x11, x4, #4, #28
    39c8:	eor	w12, w11, w4, lsr #9
    39cc:	sub	w11, w9, #0x1
    39d0:	and	w12, w12, w11
    39d4:	add	x13, x10, w12, uxtw #4
    39d8:	ldr	x14, [x13]
    39dc:	cmp	x14, x4
    39e0:	b.eq	3a14 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1850>  // b.none
    39e4:	mov	w15, #0x1                   	// #1
    39e8:	cmn	x14, #0x8
    39ec:	b.eq	3a10 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x184c>  // b.none
    39f0:	add	w12, w12, w15
    39f4:	and	w12, w12, w11
    39f8:	add	x13, x10, w12, uxtw #4
    39fc:	ldr	x14, [x13]
    3a00:	add	w15, w15, #0x1
    3a04:	cmp	x14, x4
    3a08:	b.eq	3a14 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1850>  // b.none
    3a0c:	b	39e8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1824>
    3a10:	add	x13, x10, x9, lsl #4
    3a14:	add	x9, x10, x9, lsl #4
    3a18:	cmp	x13, x9
    3a1c:	b.eq	3a24 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1860>  // b.none
    3a20:	ldr	x4, [x13, #8]
    3a24:	cbz	x4, 421c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2058>
    3a28:	ldrb	w9, [x4, #16]
    3a2c:	cmp	w9, #0xd
    3a30:	b.ne	3874 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16b0>  // b.any
    3a34:	ubfx	w8, w8, #1, #27
    3a38:	sub	w3, w8, #0x1
    3a3c:	mov	x0, x26
    3a40:	mov	x1, xzr
    3a44:	mov	x2, x26
    3a48:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3a4c:	cmp	x0, x26
    3a50:	b.ne	423c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2078>  // b.any
    3a54:	ldr	w8, [x26, #20]
    3a58:	ubfx	w8, w8, #1, #27
    3a5c:	sub	w8, w8, #0x1
    3a60:	cmp	x1, x8
    3a64:	csel	x0, x0, x26, ne  // ne = any
    3a68:	ldr	w9, [x0, #20]
    3a6c:	csel	w8, w1, w23, ne  // ne = any
    3a70:	cmn	w8, #0x2
    3a74:	ubfx	w9, w9, #1, #27
    3a78:	sub	w9, w9, #0x1
    3a7c:	b.eq	38e4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1720>  // b.none
    3a80:	cmp	w9, w8
    3a84:	b.hi	38e4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1720>  // b.pmore
    3a88:	b	425c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2098>
    3a8c:	cmp	x26, x25
    3a90:	b.eq	3b70 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19ac>  // b.none
    3a94:	cbz	x27, 3b5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1998>
    3a98:	mov	x0, x27
    3a9c:	bl	0 <_ZN4llvm10BasicBlock4phisEv>
    3aa0:	cmp	x0, x1
    3aa4:	b.eq	3b5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1998>  // b.none
    3aa8:	mov	x28, x0
    3aac:	mov	x27, x1
    3ab0:	ldr	w10, [x28, #20]
    3ab4:	and	x8, x10, #0xfffffff
    3ab8:	cbz	w8, 3b34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1970>
    3abc:	ldr	x9, [x25, #40]
    3ac0:	ldr	w11, [x28, #56]
    3ac4:	mov	x1, xzr
    3ac8:	tbnz	w10, #30, 3afc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1938>
    3acc:	add	x10, x11, x11, lsl #1
    3ad0:	add	x11, x8, w8, uxtw #1
    3ad4:	sub	x10, x10, x11
    3ad8:	add	x10, x28, x10, lsl #3
    3adc:	add	x10, x10, #0x8
    3ae0:	ldr	x11, [x10, x1, lsl #3]
    3ae4:	cmp	x11, x9
    3ae8:	b.eq	3b24 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1960>  // b.none
    3aec:	add	x1, x1, #0x1
    3af0:	cmp	x8, x1
    3af4:	b.ne	3ae0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x191c>  // b.any
    3af8:	b	3b34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1970>
    3afc:	ldur	x10, [x28, #-8]
    3b00:	madd	x10, x11, x21, x10
    3b04:	add	x10, x10, #0x8
    3b08:	ldr	x11, [x10, x1, lsl #3]
    3b0c:	cmp	x11, x9
    3b10:	b.eq	3b24 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1960>  // b.none
    3b14:	add	x1, x1, #0x1
    3b18:	cmp	x8, x1
    3b1c:	b.ne	3b08 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1944>  // b.any
    3b20:	b	3b30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x196c>
    3b24:	mov	w2, #0x1                   	// #1
    3b28:	mov	x0, x28
    3b2c:	bl	0 <_ZN4llvm7PHINode19removeIncomingValueEjb>
    3b30:	cbz	x28, 4574 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x23b0>
    3b34:	ldr	x8, [x28, #32]
    3b38:	ldrb	w9, [x8]
    3b3c:	tbnz	w9, #2, 40fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f38>
    3b40:	cbz	x8, 43d4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2210>
    3b44:	ldurb	w9, [x8, #-8]
    3b48:	sub	x8, x8, #0x18
    3b4c:	cmp	w9, #0x4f
    3b50:	csel	x28, x8, xzr, eq  // eq = none
    3b54:	cmp	x28, x27
    3b58:	b.ne	3ab0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x18ec>  // b.any
    3b5c:	mov	x0, x26
    3b60:	bl	0 <_ZNK4llvm11Instruction5cloneEv>
    3b64:	mov	x1, x0
    3b68:	mov	x0, x25
    3b6c:	bl	0 <_ZN4llvm19ReplaceInstWithInstEPNS_11InstructionES1_>
    3b70:	ldur	x0, [x29, #-88]
    3b74:	bl	0 <_ZdlPv>
    3b78:	ldrh	w8, [x24, #18]
    3b7c:	mov	w19, #0x1                   	// #1
    3b80:	and	w8, w8, #0xfffc
    3b84:	orr	w8, w8, #0x2
    3b88:	strh	w8, [x24, #18]
    3b8c:	add	x20, x20, #0x8
    3b90:	cmp	x20, x22
    3b94:	b.ne	3888 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x16c4>  // b.any
    3b98:	tbz	w19, #0, 3bac <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x19e8>
    3b9c:	ldr	x0, [sp, #72]
    3ba0:	mov	x1, xzr
    3ba4:	mov	x2, xzr
    3ba8:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    3bac:	ldr	x0, [sp, #104]
    3bb0:	add	x8, sp, #0x68
    3bb4:	add	x8, x8, #0x10
    3bb8:	cmp	x0, x8
    3bbc:	b.eq	3bc4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1a00>  // b.none
    3bc0:	bl	0 <free>
    3bc4:	ldr	x19, [sp, #96]
    3bc8:	ldp	x23, x22, [sp, #56]
    3bcc:	ldr	w8, [x19, #168]
    3bd0:	cbnz	w8, 470c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2548>
    3bd4:	ldr	x8, [x19, #184]
    3bd8:	ldp	x8, x9, [x8, #32]
    3bdc:	add	x9, x9, #0x28
    3be0:	cmp	x9, x8
    3be4:	b.eq	3c00 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1a3c>  // b.none
    3be8:	ldrb	w9, [x8]
    3bec:	tbnz	w9, #2, 40fc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1f38>
    3bf0:	sub	x9, x8, #0x18
    3bf4:	cmp	x8, #0x0
    3bf8:	csel	x25, xzr, x9, eq  // eq = none
    3bfc:	b	3c04 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1a40>
    3c00:	mov	x25, xzr
    3c04:	mov	x0, x25
    3c08:	bl	0 <_ZNK4llvm5Value10getContextEv>
    3c0c:	stp	x0, xzr, [sp, #128]
    3c10:	mov	w8, #0x200                 	// #512
    3c14:	add	x0, sp, #0x68
    3c18:	mov	x1, x25
    3c1c:	str	wzr, [sp, #144]
    3c20:	strb	wzr, [sp, #150]
    3c24:	stp	xzr, xzr, [sp, #112]
    3c28:	str	xzr, [sp, #104]
    3c2c:	strh	w8, [sp, #148]
    3c30:	stp	xzr, xzr, [sp, #152]
    3c34:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c38:	ldp	x1, x2, [x19, #176]
    3c3c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c40:	add	x8, x8, #0x0
    3c44:	mov	w21, #0x103                 	// #259
    3c48:	add	x0, sp, #0x68
    3c4c:	sub	x5, x29, #0x60
    3c50:	mov	w3, wzr
    3c54:	mov	w4, wzr
    3c58:	stp	x8, xzr, [x29, #-96]
    3c5c:	sturh	w21, [x29, #-80]
    3c60:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3c64:	mov	x25, x0
    3c68:	mov	w0, #0x40                  	// #64
    3c6c:	mov	w1, #0x2                   	// #2
    3c70:	bl	0 <_ZN4llvm4UsernwEmj>
    3c74:	ldr	x1, [sp, #72]
    3c78:	mov	x2, x25
    3c7c:	mov	w3, wzr
    3c80:	mov	x4, xzr
    3c84:	mov	x26, x0
    3c88:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    3c8c:	mov	w20, #0x101                 	// #257
    3c90:	add	x0, sp, #0x68
    3c94:	sub	x2, x29, #0x60
    3c98:	mov	x1, x26
    3c9c:	stp	xzr, xzr, [x29, #-96]
    3ca0:	sturh	w20, [x29, #-80]
    3ca4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ca8:	mov	x0, x19
    3cac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cb0:	mov	x25, x0
    3cb4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3cb8:	ldr	x25, [x25, #8]
    3cbc:	cbnz	x25, 3e3c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c78>
    3cc0:	mov	x25, x23
    3cc4:	ldr	x8, [sp, #96]
    3cc8:	add	x0, sp, #0x68
    3ccc:	sub	x5, x29, #0x60
    3cd0:	mov	w4, #0x1                   	// #1
    3cd4:	ldp	x1, x2, [x8, #176]
    3cd8:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cdc:	add	x8, x8, #0x0
    3ce0:	mov	w3, wzr
    3ce4:	stp	x8, xzr, [x29, #-96]
    3ce8:	sturh	w21, [x29, #-80]
    3cec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3cf0:	mov	x26, x0
    3cf4:	mov	w0, #0x40                  	// #64
    3cf8:	mov	w1, #0x2                   	// #2
    3cfc:	bl	0 <_ZN4llvm4UsernwEmj>
    3d00:	mov	x1, x25
    3d04:	mov	x2, x26
    3d08:	mov	w3, wzr
    3d0c:	mov	x4, xzr
    3d10:	mov	x27, x0
    3d14:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    3d18:	add	x0, sp, #0x68
    3d1c:	sub	x2, x29, #0x60
    3d20:	mov	x1, x27
    3d24:	stp	xzr, xzr, [x29, #-96]
    3d28:	sturh	w20, [x29, #-80]
    3d2c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3d30:	ldr	x1, [sp, #104]
    3d34:	cbz	x1, 3d40 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1b7c>
    3d38:	add	x0, sp, #0x68
    3d3c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    3d40:	ldr	x0, [sp, #80]
    3d44:	ldr	w8, [x0, #8]
    3d48:	cbnz	w8, 472c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2568>
    3d4c:	ldr	w8, [x0, #12]
    3d50:	ldr	x19, [sp, #96]
    3d54:	cbz	w8, 4048 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1e84>
    3d58:	mov	x8, xzr
    3d5c:	ldr	x9, [x0]
    3d60:	ldr	x10, [sp, #72]
    3d64:	str	x10, [x9, x8, lsl #3]
    3d68:	ldp	w8, w9, [x0, #8]
    3d6c:	cmp	w8, w9
    3d70:	b.cs	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.hs, b.nlast
    3d74:	add	w8, w8, #0x1
    3d78:	cmp	w8, w9
    3d7c:	str	w8, [x0, #8]
    3d80:	b.cs	4064 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ea0>  // b.hs, b.nlast
    3d84:	ldr	x9, [x0]
    3d88:	str	x23, [x9, w8, uxtw #3]
    3d8c:	ldp	w8, w9, [x0, #8]
    3d90:	cmp	w8, w9
    3d94:	b.cs	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.hs, b.nlast
    3d98:	add	w8, w8, #0x1
    3d9c:	cmp	w8, w9
    3da0:	str	w8, [x0, #8]
    3da4:	b.cs	4080 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ebc>  // b.hs, b.nlast
    3da8:	ldr	x9, [x0]
    3dac:	str	x22, [x9, w8, uxtw #3]
    3db0:	ldp	w8, w9, [x0, #8]
    3db4:	cmp	w8, w9
    3db8:	b.cs	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.hs, b.nlast
    3dbc:	add	x22, x8, #0x1
    3dc0:	str	w22, [x0, #8]
    3dc4:	ldr	w8, [x19, #168]
    3dc8:	cbnz	w8, 474c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x2588>
    3dcc:	ldr	x20, [x0]
    3dd0:	add	x8, sp, #0x68
    3dd4:	lsl	x19, x22, #3
    3dd8:	add	x1, x8, #0x10
    3ddc:	cmp	x22, #0x5
    3de0:	str	x1, [sp, #104]
    3de4:	str	d8, [sp, #112]
    3de8:	b.cc	3dfc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c38>  // b.lo, b.ul, b.last
    3dec:	add	x0, sp, #0x68
    3df0:	mov	w3, #0x8                   	// #8
    3df4:	mov	x2, x22
    3df8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3dfc:	cmp	x19, #0x0
    3e00:	b.le	3ea8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ce4>
    3e04:	lsr	x10, x19, #3
    3e08:	ldr	x13, [sp, #104]
    3e0c:	ldr	w8, [sp, #112]
    3e10:	cmp	x10, #0x0
    3e14:	cset	w9, ne  // ne = any
    3e18:	sub	x9, x10, x9
    3e1c:	add	x11, x9, #0x1
    3e20:	cmp	x11, #0x4
    3e24:	add	x9, x13, x8, lsl #3
    3e28:	b.cs	3eb0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1cec>  // b.hs, b.nlast
    3e2c:	mov	x12, x20
    3e30:	b	3f2c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d68>
    3e34:	ldr	x25, [x25, #8]
    3e38:	cbz	x25, 3cc0 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1afc>
    3e3c:	mov	x0, x25
    3e40:	bl	0 <_ZNK4llvm3Use7getUserEv>
    3e44:	cbz	x0, 44b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x22f0>
    3e48:	ldrb	w8, [x0, #16]
    3e4c:	mov	x1, x0
    3e50:	cmp	w8, #0x50
    3e54:	b.ne	3e34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c70>  // b.any
    3e58:	ldur	x8, [x1, #-24]
    3e5c:	cbz	x8, 3e34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c70>
    3e60:	ldrb	w9, [x8, #16]
    3e64:	cbnz	w9, 3e34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c70>
    3e68:	ldrb	w9, [x8, #33]
    3e6c:	tbz	w9, #5, 3e34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c70>
    3e70:	ldr	w8, [x8, #36]
    3e74:	cmp	w8, #0xe
    3e78:	b.ne	3e34 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1c70>  // b.any
    3e7c:	mov	w8, #0x101                 	// #257
    3e80:	add	x0, sp, #0x68
    3e84:	sub	x4, x29, #0x60
    3e88:	mov	x2, x23
    3e8c:	mov	x3, x22
    3e90:	mov	x5, xzr
    3e94:	stp	xzr, xzr, [x29, #-96]
    3e98:	sturh	w8, [x29, #-80]
    3e9c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3ea0:	mov	x25, x0
    3ea4:	b	3cc4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1b00>
    3ea8:	ldr	w8, [sp, #112]
    3eac:	b	3f44 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d80>
    3eb0:	cmp	x10, #0x0
    3eb4:	cset	w12, ne  // ne = any
    3eb8:	sub	x14, x10, x12
    3ebc:	add	x14, x20, x14, lsl #3
    3ec0:	add	x14, x14, #0x8
    3ec4:	cmp	x9, x14
    3ec8:	b.cs	3ee8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d24>  // b.hs, b.nlast
    3ecc:	add	x14, x10, x8
    3ed0:	sub	x12, x14, x12
    3ed4:	add	x12, x13, x12, lsl #3
    3ed8:	add	x12, x12, #0x8
    3edc:	cmp	x20, x12
    3ee0:	mov	x12, x20
    3ee4:	b.cc	3f2c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d68>  // b.lo, b.ul, b.last
    3ee8:	and	x14, x11, #0xfffffffffffffffc
    3eec:	add	x13, x13, x8, lsl #3
    3ef0:	lsl	x12, x14, #3
    3ef4:	add	x15, x20, #0x10
    3ef8:	sub	x10, x10, x14
    3efc:	add	x9, x9, x12
    3f00:	add	x12, x20, x12
    3f04:	add	x13, x13, #0x10
    3f08:	mov	x16, x14
    3f0c:	ldp	q0, q1, [x15, #-16]
    3f10:	add	x15, x15, #0x20
    3f14:	subs	x16, x16, #0x4
    3f18:	stp	q0, q1, [x13, #-16]
    3f1c:	add	x13, x13, #0x20
    3f20:	b.ne	3f0c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d48>  // b.any
    3f24:	cmp	x11, x14
    3f28:	b.eq	3f44 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d80>  // b.none
    3f2c:	add	x10, x10, #0x1
    3f30:	ldr	x11, [x12], #8
    3f34:	sub	x10, x10, #0x1
    3f38:	cmp	x10, #0x1
    3f3c:	str	x11, [x9], #8
    3f40:	b.gt	3f30 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1d6c>
    3f44:	ldr	w9, [sp, #116]
    3f48:	add	x8, x8, x22
    3f4c:	cmp	x8, x9
    3f50:	b.hi	40bc <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1ef8>  // b.pmore
    3f54:	str	w8, [sp, #112]
    3f58:	cbz	w8, 476c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x25a8>
    3f5c:	ldr	x9, [x20]
    3f60:	ldr	x0, [x9]
    3f64:	cbz	x0, 4394 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21d0>
    3f68:	ldrb	w10, [x0, #8]
    3f6c:	cmp	w10, #0xf
    3f70:	b.ne	43b4 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x21f0>  // b.any
    3f74:	ldr	x21, [x9, #40]
    3f78:	and	x1, x8, #0xffffffff
    3f7c:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    3f80:	ldr	x1, [sp, #104]
    3f84:	ldr	w2, [sp, #112]
    3f88:	bl	0 <_ZN4llvm13ConstantArray3getEPNS_9ArrayTypeENS_8ArrayRefIPNS_8ConstantEEE>
    3f8c:	mov	x22, x0
    3f90:	mov	w0, #0x58                  	// #88
    3f94:	mov	w1, #0x1                   	// #1
    3f98:	bl	0 <_ZN4llvm4UsernwEmj>
    3f9c:	ldr	x19, [sp, #88]
    3fa0:	ldr	x23, [x22]
    3fa4:	mov	x24, x0
    3fa8:	mov	x0, x19
    3fac:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3fb0:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    3fb4:	stp	x0, x1, [x29, #-48]
    3fb8:	sub	x8, x29, #0x30
    3fbc:	add	x9, x9, #0x0
    3fc0:	mov	w10, #0x305                 	// #773
    3fc4:	sub	x6, x29, #0x60
    3fc8:	mov	w3, #0x1                   	// #1
    3fcc:	mov	w4, #0x8                   	// #8
    3fd0:	mov	x0, x24
    3fd4:	mov	x1, x21
    3fd8:	mov	x2, x23
    3fdc:	mov	x5, x22
    3fe0:	mov	x7, xzr
    3fe4:	stp	x8, x9, [x29, #-96]
    3fe8:	sturh	w10, [x29, #-80]
    3fec:	strb	wzr, [sp, #16]
    3ff0:	str	wzr, [sp, #8]
    3ff4:	str	wzr, [sp]
    3ff8:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    3ffc:	mov	x0, x19
    4000:	bl	0 <_ZNK4llvm8Function10getContextEv>
    4004:	mov	w1, wzr
    4008:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    400c:	mov	x1, x0
    4010:	mov	x0, x24
    4014:	bl	0 <_ZN4llvm12ConstantExpr14getPointerCastEPNS_8ConstantEPNS_4TypeE>
    4018:	mov	x20, x0
    401c:	ldr	x0, [sp, #96]
    4020:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4024:	mov	w1, #0x3                   	// #3
    4028:	mov	x2, x20
    402c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4030:	ldr	x0, [sp, #104]
    4034:	add	x8, sp, #0x68
    4038:	add	x8, x8, #0x10
    403c:	cmp	x0, x8
    4040:	b.ne	370c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1548>  // b.any
    4044:	b	3710 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x154c>
    4048:	add	x1, x0, #0x10
    404c:	mov	w3, #0x8                   	// #8
    4050:	mov	x2, xzr
    4054:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4058:	ldr	x0, [sp, #80]
    405c:	ldr	w8, [x0, #8]
    4060:	b	3d5c <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1b98>
    4064:	add	x1, x0, #0x10
    4068:	mov	w3, #0x8                   	// #8
    406c:	mov	x2, xzr
    4070:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4074:	ldr	x0, [sp, #80]
    4078:	ldr	w8, [x0, #8]
    407c:	b	3d84 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1bc0>
    4080:	add	x1, x0, #0x10
    4084:	mov	w3, #0x8                   	// #8
    4088:	mov	x2, xzr
    408c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4090:	ldr	x0, [sp, #80]
    4094:	ldr	w8, [x0, #8]
    4098:	b	3da8 <_ZL14splitCoroutineRN4llvm8FunctionERNS_4coro5ShapeERNS_15SmallVectorImplIPS0_EE+0x1be4>
    409c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40a0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40a4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40a8:	add	x0, x0, #0x0
    40ac:	add	x1, x1, #0x0
    40b0:	add	x3, x3, #0x0
    40b4:	mov	w2, #0x95                  	// #149
    40b8:	bl	0 <__assert_fail>
    40bc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40c0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40c4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40c8:	add	x0, x0, #0x0
    40cc:	add	x1, x1, #0x0
    40d0:	add	x3, x3, #0x0
    40d4:	mov	w2, #0x43                  	// #67
    40d8:	bl	0 <__assert_fail>
    40dc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40e0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40e4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    40e8:	add	x0, x0, #0x0
    40ec:	add	x1, x1, #0x0
    40f0:	add	x3, x3, #0x0
    40f4:	mov	w2, #0x69                  	// #105
    40f8:	bl	0 <__assert_fail>
    40fc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4100:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4104:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4108:	add	x0, x0, #0x0
    410c:	add	x1, x1, #0x0
    4110:	add	x3, x3, #0x0
    4114:	mov	w2, #0x8b                  	// #139
    4118:	bl	0 <__assert_fail>
    411c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4120:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4124:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4128:	add	x0, x0, #0x0
    412c:	add	x1, x1, #0x0
    4130:	add	x3, x3, #0x0
    4134:	mov	w2, #0x8b                  	// #139
    4138:	bl	0 <__assert_fail>
    413c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4140:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4144:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4148:	add	x0, x0, #0x0
    414c:	add	x1, x1, #0x0
    4150:	add	x3, x3, #0x0
    4154:	mov	w2, #0x95                  	// #149
    4158:	bl	0 <__assert_fail>
    415c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4160:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4164:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4168:	add	x0, x0, #0x0
    416c:	add	x1, x1, #0x0
    4170:	add	x3, x3, #0x0
    4174:	mov	w2, #0x17c                 	// #380
    4178:	bl	0 <__assert_fail>
    417c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4180:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4184:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4188:	add	x0, x0, #0x0
    418c:	add	x1, x1, #0x0
    4190:	add	x3, x3, #0x0
    4194:	mov	w2, #0x69                  	// #105
    4198:	bl	0 <__assert_fail>
    419c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41a0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41a4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41a8:	add	x0, x0, #0x0
    41ac:	add	x1, x1, #0x0
    41b0:	add	x3, x3, #0x0
    41b4:	mov	w2, #0x108                 	// #264
    41b8:	bl	0 <__assert_fail>
    41bc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41c0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41c4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41c8:	add	x0, x0, #0x0
    41cc:	add	x1, x1, #0x0
    41d0:	add	x3, x3, #0x0
    41d4:	mov	w2, #0xb3                  	// #179
    41d8:	bl	0 <__assert_fail>
    41dc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41e0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41e4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    41e8:	add	x0, x0, #0x0
    41ec:	add	x1, x1, #0x0
    41f0:	add	x3, x3, #0x0
    41f4:	mov	w2, #0x252                 	// #594
    41f8:	bl	0 <__assert_fail>
    41fc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4200:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4204:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4208:	add	x0, x0, #0x0
    420c:	add	x1, x1, #0x0
    4210:	add	x3, x3, #0x0
    4214:	mov	w2, #0xdbe                 	// #3518
    4218:	bl	0 <__assert_fail>
    421c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4220:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4224:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4228:	add	x0, x0, #0x0
    422c:	add	x1, x1, #0x0
    4230:	add	x3, x3, #0x0
    4234:	mov	w2, #0x69                  	// #105
    4238:	bl	0 <__assert_fail>
    423c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4240:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4244:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4248:	add	x0, x0, #0x0
    424c:	add	x1, x1, #0x0
    4250:	add	x3, x3, #0x0
    4254:	mov	w2, #0xc91                 	// #3217
    4258:	bl	0 <__assert_fail>
    425c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4260:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4264:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4268:	add	x0, x0, #0x0
    426c:	add	x1, x1, #0x0
    4270:	add	x3, x3, #0x0
    4274:	mov	w2, #0xc81                 	// #3201
    4278:	bl	0 <__assert_fail>
    427c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4280:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4284:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4288:	add	x0, x0, #0x0
    428c:	add	x1, x1, #0x0
    4290:	add	x3, x3, #0x0
    4294:	mov	w2, #0x69                  	// #105
    4298:	bl	0 <__assert_fail>
    429c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42a0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42a4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42a8:	add	x0, x0, #0x0
    42ac:	add	x1, x1, #0x0
    42b0:	add	x3, x3, #0x0
    42b4:	mov	w2, #0x108                 	// #264
    42b8:	bl	0 <__assert_fail>
    42bc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42c0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42c4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42c8:	add	x0, x0, #0x0
    42cc:	add	x1, x1, #0x0
    42d0:	add	x3, x3, #0x0
    42d4:	mov	w2, #0xb3                  	// #179
    42d8:	bl	0 <__assert_fail>
    42dc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42e0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42e4:	add	x0, x0, #0x0
    42e8:	add	x1, x1, #0x0
    42ec:	mov	w2, #0x46a                 	// #1130
    42f0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    42f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    42fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4300:	add	x0, x0, #0x0
    4304:	add	x1, x1, #0x0
    4308:	add	x3, x3, #0x0
    430c:	mov	w2, #0x528                 	// #1320
    4310:	bl	0 <__assert_fail>
    4314:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4318:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    431c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4320:	add	x0, x0, #0x0
    4324:	add	x1, x1, #0x0
    4328:	add	x3, x3, #0x0
    432c:	mov	w2, #0x15c                 	// #348
    4330:	bl	0 <__assert_fail>
    4334:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4338:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    433c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4340:	add	x0, x0, #0x0
    4344:	add	x1, x1, #0x0
    4348:	add	x3, x3, #0x0
    434c:	mov	w2, #0x7b                  	// #123
    4350:	bl	0 <__assert_fail>
    4354:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4358:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    435c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4360:	add	x0, x0, #0x0
    4364:	add	x1, x1, #0x0
    4368:	add	x3, x3, #0x0
    436c:	mov	w2, #0x7c                  	// #124
    4370:	bl	0 <__assert_fail>
    4374:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4378:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    437c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4380:	add	x0, x0, #0x0
    4384:	add	x1, x1, #0x0
    4388:	add	x3, x3, #0x0
    438c:	mov	w2, #0x7d                  	// #125
    4390:	bl	0 <__assert_fail>
    4394:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4398:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    439c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43a0:	add	x0, x0, #0x0
    43a4:	add	x1, x1, #0x0
    43a8:	add	x3, x3, #0x0
    43ac:	mov	w2, #0x69                  	// #105
    43b0:	bl	0 <__assert_fail>
    43b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43b8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43bc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43c0:	add	x0, x0, #0x0
    43c4:	add	x1, x1, #0x0
    43c8:	add	x3, x3, #0x0
    43cc:	mov	w2, #0x108                 	// #264
    43d0:	bl	0 <__assert_fail>
    43d4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43d8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43dc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43e0:	add	x0, x0, #0x0
    43e4:	add	x1, x1, #0x0
    43e8:	add	x3, x3, #0x0
    43ec:	mov	w2, #0x5b                  	// #91
    43f0:	bl	0 <__assert_fail>
    43f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    43fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4400:	add	x0, x0, #0x0
    4404:	add	x1, x1, #0x0
    4408:	add	x3, x3, #0x0
    440c:	mov	w2, #0x134                 	// #308
    4410:	bl	0 <__assert_fail>
    4414:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4418:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    441c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4420:	add	x0, x0, #0x0
    4424:	add	x1, x1, #0x0
    4428:	add	x3, x3, #0x0
    442c:	mov	w2, #0x69                  	// #105
    4430:	bl	0 <__assert_fail>
    4434:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4438:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    443c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4440:	add	x0, x0, #0x0
    4444:	add	x1, x1, #0x0
    4448:	add	x3, x3, #0x0
    444c:	mov	w2, #0x108                 	// #264
    4450:	bl	0 <__assert_fail>
    4454:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4458:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    445c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4460:	add	x0, x0, #0x0
    4464:	add	x1, x1, #0x0
    4468:	add	x3, x3, #0x0
    446c:	mov	w2, #0x69                  	// #105
    4470:	bl	0 <__assert_fail>
    4474:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4478:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    447c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4480:	add	x0, x0, #0x0
    4484:	add	x1, x1, #0x0
    4488:	add	x3, x3, #0x0
    448c:	mov	w2, #0x69                  	// #105
    4490:	bl	0 <__assert_fail>
    4494:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4498:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    449c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44a0:	add	x0, x0, #0x0
    44a4:	add	x1, x1, #0x0
    44a8:	add	x3, x3, #0x0
    44ac:	mov	w2, #0x108                 	// #264
    44b0:	bl	0 <__assert_fail>
    44b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44b8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44bc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44c0:	add	x0, x0, #0x0
    44c4:	add	x1, x1, #0x0
    44c8:	add	x3, x3, #0x0
    44cc:	mov	w2, #0x69                  	// #105
    44d0:	bl	0 <__assert_fail>
    44d4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44d8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44dc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44e0:	add	x0, x0, #0x0
    44e4:	add	x1, x1, #0x0
    44e8:	add	x3, x3, #0x0
    44ec:	mov	w2, #0x69                  	// #105
    44f0:	bl	0 <__assert_fail>
    44f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    44fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4500:	add	x0, x0, #0x0
    4504:	add	x1, x1, #0x0
    4508:	add	x3, x3, #0x0
    450c:	mov	w2, #0x4ff                 	// #1279
    4510:	bl	0 <__assert_fail>
    4514:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4518:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    451c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4520:	add	x0, x0, #0x0
    4524:	add	x1, x1, #0x0
    4528:	add	x3, x3, #0x0
    452c:	mov	w2, #0x69                  	// #105
    4530:	bl	0 <__assert_fail>
    4534:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4538:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    453c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4540:	add	x0, x0, #0x0
    4544:	add	x1, x1, #0x0
    4548:	add	x3, x3, #0x0
    454c:	mov	w2, #0x108                 	// #264
    4550:	bl	0 <__assert_fail>
    4554:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4558:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    455c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4560:	add	x0, x0, #0x0
    4564:	add	x1, x1, #0x0
    4568:	add	x3, x3, #0x0
    456c:	mov	w2, #0xb8                  	// #184
    4570:	bl	0 <__assert_fail>
    4574:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4578:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    457c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4580:	add	x0, x0, #0x0
    4584:	add	x1, x1, #0x0
    4588:	add	x3, x3, #0x0
    458c:	mov	w2, #0x13d                 	// #317
    4590:	bl	0 <__assert_fail>
    4594:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4598:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    459c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45a0:	add	x0, x0, #0x0
    45a4:	add	x1, x1, #0x0
    45a8:	add	x3, x3, #0x0
    45ac:	mov	w2, #0x108                 	// #264
    45b0:	bl	0 <__assert_fail>
    45b4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45b8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45bc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45c0:	add	x0, x0, #0x0
    45c4:	add	x1, x1, #0x0
    45c8:	add	x3, x3, #0x0
    45cc:	mov	w2, #0x69                  	// #105
    45d0:	bl	0 <__assert_fail>
    45d4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45d8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45dc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45e0:	add	x0, x0, #0x0
    45e4:	add	x1, x1, #0x0
    45e8:	add	x3, x3, #0x0
    45ec:	mov	w2, #0x108                 	// #264
    45f0:	bl	0 <__assert_fail>
    45f4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45f8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    45fc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4600:	add	x0, x0, #0x0
    4604:	add	x1, x1, #0x0
    4608:	add	x3, x3, #0x0
    460c:	mov	w2, #0x160                 	// #352
    4610:	bl	0 <__assert_fail>
    4614:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4618:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    461c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4620:	add	x0, x0, #0x0
    4624:	add	x1, x1, #0x0
    4628:	add	x3, x3, #0x0
    462c:	mov	w2, #0x161                 	// #353
    4630:	bl	0 <__assert_fail>
    4634:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4638:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    463c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4640:	add	x0, x0, #0x0
    4644:	add	x1, x1, #0x0
    4648:	add	x3, x3, #0x0
    464c:	mov	w2, #0x69                  	// #105
    4650:	bl	0 <__assert_fail>
    4654:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4658:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    465c:	add	x0, x0, #0x0
    4660:	add	x1, x1, #0x0
    4664:	mov	w2, #0x54a                 	// #1354
    4668:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    466c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4670:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4674:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4678:	add	x0, x0, #0x0
    467c:	add	x1, x1, #0x0
    4680:	add	x3, x3, #0x0
    4684:	mov	w2, #0x4b6                 	// #1206
    4688:	bl	0 <__assert_fail>
    468c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4690:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4694:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4698:	add	x0, x0, #0x0
    469c:	add	x1, x1, #0x0
    46a0:	add	x3, x3, #0x0
    46a4:	mov	w2, #0x69                  	// #105
    46a8:	bl	0 <__assert_fail>
    46ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46b4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46b8:	add	x0, x0, #0x0
    46bc:	add	x1, x1, #0x0
    46c0:	add	x3, x3, #0x0
    46c4:	mov	w2, #0x108                 	// #264
    46c8:	bl	0 <__assert_fail>
    46cc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46d0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46d4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46d8:	add	x0, x0, #0x0
    46dc:	add	x1, x1, #0x0
    46e0:	add	x3, x3, #0x0
    46e4:	mov	w2, #0x168                 	// #360
    46e8:	bl	0 <__assert_fail>
    46ec:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46f0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46f4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    46f8:	add	x0, x0, #0x0
    46fc:	add	x1, x1, #0x0
    4700:	add	x3, x3, #0x0
    4704:	mov	w2, #0x52b                 	// #1323
    4708:	bl	0 <__assert_fail>
    470c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4710:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4714:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4718:	add	x0, x0, #0x0
    471c:	add	x1, x1, #0x0
    4720:	add	x3, x3, #0x0
    4724:	mov	w2, #0x34e                 	// #846
    4728:	bl	0 <__assert_fail>
    472c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4730:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4734:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4738:	add	x0, x0, #0x0
    473c:	add	x1, x1, #0x0
    4740:	add	x3, x3, #0x0
    4744:	mov	w2, #0x4a7                 	// #1191
    4748:	bl	0 <__assert_fail>
    474c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4750:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4754:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4758:	add	x0, x0, #0x0
    475c:	add	x1, x1, #0x0
    4760:	add	x3, x3, #0x0
    4764:	mov	w2, #0x338                 	// #824
    4768:	bl	0 <__assert_fail>
    476c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4770:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4774:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4778:	add	x0, x0, #0x0
    477c:	add	x1, x1, #0x0
    4780:	add	x3, x3, #0x0
    4784:	mov	w2, #0x33b                 	// #827
    4788:	bl	0 <__assert_fail>
    478c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4790:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4794:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4798:	add	x0, x0, #0x0
    479c:	add	x1, x1, #0x0
    47a0:	add	x3, x3, #0x0
    47a4:	mov	w2, #0xc7                  	// #199
    47a8:	bl	0 <__assert_fail>
    47ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    47b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    47b4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    47b8:	add	x0, x0, #0x0
    47bc:	add	x1, x1, #0x0
    47c0:	add	x3, x3, #0x0
    47c4:	mov	w2, #0x7d                  	// #125
    47c8:	bl	0 <__assert_fail>

00000000000047cc <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>:
    47cc:	sub	sp, sp, #0x110
    47d0:	stp	x29, x30, [sp, #176]
    47d4:	stp	x28, x27, [sp, #192]
    47d8:	stp	x26, x25, [sp, #208]
    47dc:	stp	x24, x23, [sp, #224]
    47e0:	stp	x22, x21, [sp, #240]
    47e4:	stp	x20, x19, [sp, #256]
    47e8:	add	x29, sp, #0xb0
    47ec:	sub	x8, x29, #0x28
    47f0:	stp	x0, xzr, [x29, #-48]
    47f4:	stur	x8, [x29, #-56]
    47f8:	ldr	w8, [x1, #144]
    47fc:	mov	x20, x2
    4800:	str	x1, [sp]
    4804:	cbz	w8, 4b38 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x36c>
    4808:	ldr	x9, [sp]
    480c:	lsl	x27, x8, #3
    4810:	mov	w19, #0x18                  	// #24
    4814:	mov	w28, #0x1                   	// #1
    4818:	ldr	x26, [x9, #136]
    481c:	add	x9, sp, #0x30
    4820:	add	x8, x9, #0x30
    4824:	str	x8, [sp, #16]
    4828:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    482c:	ldr	x8, [x8]
    4830:	add	x21, x9, #0x8
    4834:	add	x8, x8, #0x10
    4838:	str	x8, [sp, #8]
    483c:	b	484c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x80>
    4840:	subs	x27, x27, #0x8
    4844:	add	x26, x26, #0x8
    4848:	b.eq	4b38 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x36c>  // b.none
    484c:	ldr	x23, [x26]
    4850:	mov	x22, x23
    4854:	cbz	x20, 48e0 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x114>
    4858:	mov	w8, #0x2                   	// #2
    485c:	stp	x8, xzr, [sp, #56]
    4860:	add	x8, x23, #0x10
    4864:	cmp	x8, #0x10
    4868:	str	x23, [sp, #72]
    486c:	b.hi	4884 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0xb8>  // b.pmore
    4870:	mov	w9, #0x101                 	// #257
    4874:	lsl	x8, x28, x8
    4878:	movk	w9, #0x1, lsl #16
    487c:	tst	x8, x9
    4880:	b.ne	488c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0xc0>  // b.any
    4884:	mov	x0, x21
    4888:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    488c:	ldr	x8, [sp, #8]
    4890:	add	x1, sp, #0x30
    4894:	mov	x0, x20
    4898:	str	x20, [sp, #80]
    489c:	str	x8, [sp, #48]
    48a0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    48a4:	ldr	x8, [sp, #72]
    48a8:	mov	x22, x0
    48ac:	add	x8, x8, #0x10
    48b0:	cmp	x8, #0x10
    48b4:	b.hi	4b08 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x33c>  // b.pmore
    48b8:	mov	w9, #0x101                 	// #257
    48bc:	lsl	x8, x28, x8
    48c0:	movk	w9, #0x1, lsl #16
    48c4:	tst	x8, x9
    48c8:	b.eq	4b08 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x33c>  // b.none
    48cc:	ldr	x22, [x22, #56]
    48d0:	cbz	x22, 4b18 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x34c>
    48d4:	ldrb	w8, [x22, #16]
    48d8:	cmp	w8, #0x50
    48dc:	b.ne	4b7c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x3b0>  // b.any
    48e0:	mov	x0, x22
    48e4:	bl	0 <_ZNK4llvm5Value10getContextEv>
    48e8:	mov	w8, #0x200                 	// #512
    48ec:	strh	w8, [sp, #92]
    48f0:	ldr	x8, [sp, #16]
    48f4:	stp	x0, xzr, [sp, #72]
    48f8:	add	x0, sp, #0x30
    48fc:	mov	x1, x22
    4900:	str	xzr, [sp, #48]
    4904:	str	wzr, [sp, #88]
    4908:	strb	wzr, [sp, #94]
    490c:	stp	xzr, xzr, [x21]
    4910:	stp	xzr, xzr, [x8]
    4914:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4918:	ldrb	w8, [x23, #16]
    491c:	cmp	w8, #0x50
    4920:	b.eq	4950 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x184>  // b.none
    4924:	cmp	w8, #0x23
    4928:	b.eq	493c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x170>  // b.none
    492c:	cmp	w8, #0x1d
    4930:	b.ne	4b64 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x398>  // b.any
    4934:	mov	x8, #0xfffffffffffffffe    	// #-2
    4938:	b	4954 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x188>
    493c:	mov	x0, x23
    4940:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
    4944:	mov	x8, xzr
    4948:	sub	x8, x8, w0, uxtw
    494c:	b	4954 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x188>
    4950:	mov	x8, xzr
    4954:	sub	x24, x23, #0x18
    4958:	mov	x0, x23
    495c:	madd	x25, x8, x19, x24
    4960:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4964:	ldr	w8, [x23, #20]
    4968:	mov	w9, w0
    496c:	mneg	x9, x9, x19
    4970:	add	x9, x25, x9
    4974:	and	x8, x8, #0xfffffff
    4978:	mneg	x8, x8, x19
    497c:	add	x8, x23, x8
    4980:	sub	x8, x9, x8
    4984:	mov	w9, #0xaaab                	// #43691
    4988:	lsr	x8, x8, #3
    498c:	movk	w9, #0xaaaa, lsl #16
    4990:	mul	w8, w8, w9
    4994:	cbz	w8, 49bc <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x1f0>
    4998:	ldrb	w8, [x23, #16]
    499c:	cmp	w8, #0x50
    49a0:	b.eq	4a38 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x26c>  // b.none
    49a4:	cmp	w8, #0x23
    49a8:	b.eq	4a24 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x258>  // b.none
    49ac:	cmp	w8, #0x1d
    49b0:	b.ne	4b64 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x398>  // b.any
    49b4:	mov	x8, #0xfffffffffffffffe    	// #-2
    49b8:	b	4a3c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x270>
    49bc:	ldr	x23, [x23]
    49c0:	sub	x0, x29, #0x38
    49c4:	mov	x1, x23
    49c8:	bl	73bc <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>
    49cc:	mov	x24, x0
    49d0:	mov	w28, #0x101                 	// #257
    49d4:	mov	w0, #0x40                  	// #64
    49d8:	mov	w1, #0x1                   	// #1
    49dc:	stp	xzr, xzr, [sp, #24]
    49e0:	strh	w28, [sp, #40]
    49e4:	bl	0 <_ZN4llvm4UsernwEmj>
    49e8:	sub	x3, x29, #0x20
    49ec:	mov	x1, x23
    49f0:	mov	x2, x24
    49f4:	mov	x4, xzr
    49f8:	mov	x25, x0
    49fc:	stp	xzr, xzr, [x29, #-32]
    4a00:	sturh	w28, [x29, #-16]
    4a04:	mov	w28, #0x1                   	// #1
    4a08:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    4a0c:	add	x0, sp, #0x30
    4a10:	add	x2, sp, #0x18
    4a14:	mov	x1, x25
    4a18:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a1c:	mov	x23, x0
    4a20:	b	4ae0 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x314>
    4a24:	mov	x0, x23
    4a28:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
    4a2c:	mov	x8, xzr
    4a30:	sub	x8, x8, w0, uxtw
    4a34:	b	4a3c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x270>
    4a38:	mov	x8, xzr
    4a3c:	mov	x0, x23
    4a40:	madd	x24, x8, x19, x24
    4a44:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a48:	ldr	w8, [x23, #20]
    4a4c:	mov	w9, w0
    4a50:	mneg	x9, x9, x19
    4a54:	add	x9, x24, x9
    4a58:	and	x8, x8, #0xfffffff
    4a5c:	mneg	x8, x8, x19
    4a60:	add	x8, x23, x8
    4a64:	sub	x8, x9, x8
    4a68:	mov	w9, #0xaaab                	// #43691
    4a6c:	lsr	x8, x8, #3
    4a70:	movk	w9, #0xaaaa, lsl #16
    4a74:	mul	w8, w8, w9
    4a78:	cmp	w8, #0x1
    4a7c:	b.ne	4b9c <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x3d0>  // b.any
    4a80:	mov	x0, x22
    4a84:	mov	w1, wzr
    4a88:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4a8c:	ldr	x1, [x0]
    4a90:	mov	x24, x0
    4a94:	sub	x0, x29, #0x38
    4a98:	bl	73bc <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>
    4a9c:	mov	x23, x0
    4aa0:	mov	w0, #0x40                  	// #64
    4aa4:	mov	w1, #0x2                   	// #2
    4aa8:	bl	0 <_ZN4llvm4UsernwEmj>
    4aac:	mov	x1, x24
    4ab0:	mov	x2, x23
    4ab4:	mov	w3, wzr
    4ab8:	mov	x4, xzr
    4abc:	mov	x25, x0
    4ac0:	bl	0 <_ZN4llvm9StoreInstC1EPNS_5ValueES2_bPNS_11InstructionE>
    4ac4:	mov	w8, #0x101                 	// #257
    4ac8:	add	x0, sp, #0x30
    4acc:	sub	x2, x29, #0x20
    4ad0:	mov	x1, x25
    4ad4:	stp	xzr, xzr, [x29, #-32]
    4ad8:	sturh	w8, [x29, #-16]
    4adc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4ae0:	mov	x0, x22
    4ae4:	mov	x1, x23
    4ae8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    4aec:	mov	x0, x22
    4af0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    4af4:	ldr	x1, [sp, #48]
    4af8:	cbz	x1, 4840 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x74>
    4afc:	add	x0, sp, #0x30
    4b00:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    4b04:	b	4840 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x74>
    4b08:	mov	x0, x21
    4b0c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    4b10:	ldr	x22, [x22, #56]
    4b14:	cbnz	x22, 48d4 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x108>
    4b18:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b1c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b20:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b24:	add	x0, x0, #0x0
    4b28:	add	x1, x1, #0x0
    4b2c:	add	x3, x3, #0x0
    4b30:	mov	w2, #0x5b                  	// #91
    4b34:	bl	0 <__assert_fail>
    4b38:	cbnz	x20, 4b44 <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE+0x378>
    4b3c:	ldr	x8, [sp]
    4b40:	str	wzr, [x8, #144]
    4b44:	ldp	x20, x19, [sp, #256]
    4b48:	ldp	x22, x21, [sp, #240]
    4b4c:	ldp	x24, x23, [sp, #224]
    4b50:	ldp	x26, x25, [sp, #208]
    4b54:	ldp	x28, x27, [sp, #192]
    4b58:	ldp	x29, x30, [sp, #176]
    4b5c:	add	sp, sp, #0x110
    4b60:	ret
    4b64:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b68:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b6c:	add	x0, x0, #0x0
    4b70:	add	x1, x1, #0x0
    4b74:	mov	w2, #0x46a                 	// #1130
    4b78:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4b7c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b80:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b84:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4b88:	add	x0, x0, #0x0
    4b8c:	add	x1, x1, #0x0
    4b90:	add	x3, x3, #0x0
    4b94:	mov	w2, #0x101                 	// #257
    4b98:	bl	0 <__assert_fail>
    4b9c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4ba0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4ba4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4ba8:	add	x0, x0, #0x0
    4bac:	add	x1, x1, #0x0
    4bb0:	add	x3, x3, #0x0
    4bb4:	mov	w2, #0x21b                 	// #539
    4bb8:	bl	0 <__assert_fail>

0000000000004bbc <_ZL16postSplitCleanupRN4llvm8FunctionE>:
    4bbc:	sub	sp, sp, #0x80
    4bc0:	stp	x29, x30, [sp, #96]
    4bc4:	str	x19, [sp, #112]
    4bc8:	add	x29, sp, #0x60
    4bcc:	mov	x1, xzr
    4bd0:	mov	x2, xzr
    4bd4:	mov	x19, x0
    4bd8:	bl	0 <_ZN4llvm23removeUnreachableBlocksERNS_8FunctionEPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    4bdc:	mov	x0, x19
    4be0:	mov	x1, xzr
    4be4:	bl	0 <_ZN4llvm14verifyFunctionERKNS_8FunctionEPNS_11raw_ostreamE>
    4be8:	ldr	x1, [x19, #40]
    4bec:	sub	x0, x29, #0x18
    4bf0:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerC1EPNS_6ModuleE>
    4bf4:	bl	0 <_ZN4llvm14createSCCPPassEv>
    4bf8:	mov	x1, x0
    4bfc:	sub	x0, x29, #0x18
    4c00:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    4c04:	add	x5, sp, #0x28
    4c08:	mov	w0, #0x1                   	// #1
    4c0c:	mov	w3, #0x1                   	// #1
    4c10:	mov	w1, wzr
    4c14:	mov	w2, wzr
    4c18:	mov	w4, wzr
    4c1c:	str	xzr, [sp, #56]
    4c20:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
    4c24:	mov	x1, x0
    4c28:	sub	x0, x29, #0x18
    4c2c:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    4c30:	ldr	x8, [sp, #56]
    4c34:	cbz	x8, 4c48 <_ZL16postSplitCleanupRN4llvm8FunctionE+0x8c>
    4c38:	add	x0, sp, #0x28
    4c3c:	add	x1, sp, #0x28
    4c40:	mov	w2, #0x3                   	// #3
    4c44:	blr	x8
    4c48:	mov	w0, wzr
    4c4c:	bl	0 <_ZN4llvm18createEarlyCSEPassEb>
    4c50:	mov	x1, x0
    4c54:	sub	x0, x29, #0x18
    4c58:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    4c5c:	add	x5, sp, #0x8
    4c60:	mov	w0, #0x1                   	// #1
    4c64:	mov	w3, #0x1                   	// #1
    4c68:	mov	w1, wzr
    4c6c:	mov	w2, wzr
    4c70:	mov	w4, wzr
    4c74:	str	xzr, [sp, #24]
    4c78:	bl	0 <_ZN4llvm27createCFGSimplificationPassEjbbbbSt8functionIFbRKNS_8FunctionEEE>
    4c7c:	mov	x1, x0
    4c80:	sub	x0, x29, #0x18
    4c84:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3addEPNS_4PassE>
    4c88:	ldr	x8, [sp, #24]
    4c8c:	cbz	x8, 4ca0 <_ZL16postSplitCleanupRN4llvm8FunctionE+0xe4>
    4c90:	add	x0, sp, #0x8
    4c94:	add	x1, sp, #0x8
    4c98:	mov	w2, #0x3                   	// #3
    4c9c:	blr	x8
    4ca0:	sub	x0, x29, #0x18
    4ca4:	bl	0 <_ZN4llvm6legacy19FunctionPassManager16doInitializationEv>
    4ca8:	sub	x0, x29, #0x18
    4cac:	mov	x1, x19
    4cb0:	bl	0 <_ZN4llvm6legacy19FunctionPassManager3runERNS_8FunctionE>
    4cb4:	sub	x0, x29, #0x18
    4cb8:	bl	0 <_ZN4llvm6legacy19FunctionPassManager14doFinalizationEv>
    4cbc:	sub	x0, x29, #0x18
    4cc0:	bl	0 <_ZN4llvm6legacy19FunctionPassManagerD1Ev>
    4cc4:	ldr	x19, [sp, #112]
    4cc8:	ldp	x29, x30, [sp, #96]
    4ccc:	add	sp, sp, #0x80
    4cd0:	ret

0000000000004cd4 <_ZN12_GLOBAL__N_124PrettyStackTraceFunctionD0Ev>:
    4cd4:	stp	x29, x30, [sp, #-32]!
    4cd8:	str	x19, [sp, #16]
    4cdc:	mov	x29, sp
    4ce0:	mov	x19, x0
    4ce4:	bl	0 <_ZN4llvm21PrettyStackTraceEntryD2Ev>
    4ce8:	mov	x0, x19
    4cec:	ldr	x19, [sp, #16]
    4cf0:	ldp	x29, x30, [sp], #32
    4cf4:	b	0 <_ZdlPv>

0000000000004cf8 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE>:
    4cf8:	stp	x29, x30, [sp, #-32]!
    4cfc:	stp	x20, x19, [sp, #16]
    4d00:	mov	x29, sp
    4d04:	ldp	x9, x8, [x1, #16]
    4d08:	mov	x19, x1
    4d0c:	mov	x20, x0
    4d10:	sub	x9, x9, x8
    4d14:	cmp	x9, #0x19
    4d18:	b.hi	4d34 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE+0x3c>  // b.pmore
    4d1c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4d20:	add	x1, x1, #0x0
    4d24:	mov	w2, #0x1a                  	// #26
    4d28:	mov	x0, x19
    4d2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4d30:	b	4d58 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE+0x60>
    4d34:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4d38:	add	x9, x9, #0x0
    4d3c:	ldur	q0, [x9, #10]
    4d40:	ldr	q1, [x9]
    4d44:	stur	q0, [x8, #10]
    4d48:	str	q1, [x8]
    4d4c:	ldr	x8, [x19, #24]
    4d50:	add	x8, x8, #0x1a
    4d54:	str	x8, [x19, #24]
    4d58:	ldr	x0, [x20, #16]
    4d5c:	mov	x1, x19
    4d60:	mov	w2, wzr
    4d64:	ldr	x3, [x0, #40]
    4d68:	bl	0 <_ZNK4llvm5Value14printAsOperandERNS_11raw_ostreamEbPKNS_6ModuleE>
    4d6c:	ldp	x9, x8, [x19, #16]
    4d70:	cmp	x9, x8
    4d74:	b.ne	4d94 <_ZNK12_GLOBAL__N_124PrettyStackTraceFunction5printERN4llvm11raw_ostreamE+0x9c>  // b.any
    4d78:	mov	x0, x19
    4d7c:	ldp	x20, x19, [sp, #16]
    4d80:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4d84:	add	x1, x1, #0x0
    4d88:	mov	w2, #0x1                   	// #1
    4d8c:	ldp	x29, x30, [sp], #32
    4d90:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4d94:	mov	w9, #0xa                   	// #10
    4d98:	strb	w9, [x8]
    4d9c:	ldr	x8, [x19, #24]
    4da0:	add	x8, x8, #0x1
    4da4:	str	x8, [x19, #24]
    4da8:	ldp	x20, x19, [sp, #16]
    4dac:	ldp	x29, x30, [sp], #32
    4db0:	ret

0000000000004db4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE>:
    4db4:	sub	sp, sp, #0x120
    4db8:	stp	x29, x30, [sp, #224]
    4dbc:	stp	x28, x23, [sp, #240]
    4dc0:	stp	x22, x21, [sp, #256]
    4dc4:	stp	x20, x19, [sp, #272]
    4dc8:	add	x29, sp, #0xe0
    4dcc:	mov	x20, x0
    4dd0:	stp	x0, xzr, [sp, #8]
    4dd4:	mov	w8, #0x80                  	// #128
    4dd8:	mov	w0, #0x2000                	// #8192
    4ddc:	mov	x19, x2
    4de0:	stp	x1, x2, [sp, #24]
    4de4:	str	w3, [sp, #40]
    4de8:	str	xzr, [sp, #48]
    4dec:	str	w8, [sp, #72]
    4df0:	bl	0 <_Znwm>
    4df4:	stp	x0, xzr, [sp, #56]
    4df8:	adrp	x11, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4dfc:	ldr	x11, [x11]
    4e00:	mov	x8, xzr
    4e04:	mov	w9, #0x2                   	// #2
    4e08:	mov	x10, #0xfffffffffffffff8    	// #-8
    4e0c:	add	x11, x11, #0x10
    4e10:	add	x12, x0, x8
    4e14:	add	x8, x8, #0x80
    4e18:	cmp	x8, #0x2, lsl #12
    4e1c:	stp	xzr, x10, [x12, #16]
    4e20:	stp	xzr, x10, [x12, #80]
    4e24:	stp	x11, x9, [x12]
    4e28:	stp	x11, x9, [x12, #64]
    4e2c:	str	xzr, [x12, #32]
    4e30:	str	xzr, [x12, #96]
    4e34:	b.ne	4e10 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x5c>  // b.any
    4e38:	mov	x0, x20
    4e3c:	strb	wzr, [sp, #80]
    4e40:	strb	wzr, [sp, #112]
    4e44:	bl	0 <_ZNK4llvm8Function10getContextEv>
    4e48:	mov	w8, #0x200                 	// #512
    4e4c:	stp	x0, xzr, [sp, #152]
    4e50:	str	wzr, [sp, #168]
    4e54:	strb	wzr, [sp, #174]
    4e58:	stp	xzr, xzr, [sp, #136]
    4e5c:	str	xzr, [sp, #128]
    4e60:	stp	xzr, xzr, [sp, #176]
    4e64:	stp	xzr, xzr, [sp, #208]
    4e68:	strh	w8, [sp, #172]
    4e6c:	str	xzr, [sp, #200]
    4e70:	ldr	w8, [x19, #168]
    4e74:	cbnz	w8, 4fc4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x210>
    4e78:	add	x0, sp, #0x8
    4e7c:	add	x20, sp, #0x8
    4e80:	bl	5004 <_ZN12_GLOBAL__N_110CoroCloner6createEv>
    4e84:	ldr	x19, [sp, #16]
    4e88:	cbz	x19, 4fe4 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x230>
    4e8c:	ldr	x1, [sp, #128]
    4e90:	cbz	x1, 4e9c <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0xe8>
    4e94:	add	x0, x20, #0x78
    4e98:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    4e9c:	ldrb	w8, [sp, #112]
    4ea0:	cbz	w8, 4f04 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x150>
    4ea4:	ldr	w8, [sp, #104]
    4ea8:	cbz	w8, 4eec <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x138>
    4eac:	ldr	x9, [sp, #88]
    4eb0:	lsl	x21, x8, #4
    4eb4:	add	x20, x9, #0x8
    4eb8:	b	4ec8 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x114>
    4ebc:	subs	x21, x21, #0x10
    4ec0:	add	x20, x20, #0x10
    4ec4:	b.eq	4eec <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x138>  // b.none
    4ec8:	ldur	x8, [x20, #-8]
    4ecc:	orr	x8, x8, #0x4
    4ed0:	cmn	x8, #0x4
    4ed4:	b.eq	4ebc <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x108>  // b.none
    4ed8:	ldr	x1, [x20]
    4edc:	cbz	x1, 4ebc <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x108>
    4ee0:	mov	x0, x20
    4ee4:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    4ee8:	b	4ebc <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x108>
    4eec:	ldr	x0, [sp, #88]
    4ef0:	bl	0 <_ZdlPv>
    4ef4:	ldr	x8, [sp, #80]
    4ef8:	strb	wzr, [sp, #112]
    4efc:	add	x8, x8, #0x1
    4f00:	str	x8, [sp, #80]
    4f04:	ldr	w8, [sp, #72]
    4f08:	cbz	w8, 4fa0 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1ec>
    4f0c:	ldr	x9, [sp, #56]
    4f10:	mov	w23, #0x101                 	// #257
    4f14:	lsl	x21, x8, #6
    4f18:	mov	w22, #0x1                   	// #1
    4f1c:	add	x20, x9, #0x28
    4f20:	movk	w23, #0x1, lsl #16
    4f24:	b	4f3c <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x188>
    4f28:	sub	x0, x20, #0x20
    4f2c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    4f30:	subs	x21, x21, #0x40
    4f34:	add	x20, x20, #0x40
    4f38:	b.eq	4fa0 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1ec>  // b.none
    4f3c:	ldur	x8, [x20, #-16]
    4f40:	orr	x9, x8, #0x8
    4f44:	cmn	x9, #0x8
    4f48:	b.eq	4f68 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1b4>  // b.none
    4f4c:	ldr	x9, [x20, #16]
    4f50:	add	x9, x9, #0x10
    4f54:	cmp	x9, #0x10
    4f58:	b.hi	4f84 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1d0>  // b.pmore
    4f5c:	lsl	x9, x22, x9
    4f60:	tst	x9, x23
    4f64:	b.eq	4f84 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1d0>  // b.none
    4f68:	add	x8, x8, #0x10
    4f6c:	cmp	x8, #0x10
    4f70:	b.hi	4f28 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x174>  // b.pmore
    4f74:	lsl	x8, x22, x8
    4f78:	tst	x8, x23
    4f7c:	b.ne	4f30 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x17c>  // b.any
    4f80:	b	4f28 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x174>
    4f84:	mov	x0, x20
    4f88:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    4f8c:	ldur	x8, [x20, #-16]
    4f90:	add	x8, x8, #0x10
    4f94:	cmp	x8, #0x10
    4f98:	b.ls	4f74 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x1c0>  // b.plast
    4f9c:	b	4f28 <_ZL11createCloneRN4llvm8FunctionERKNS_5TwineERNS_4coro5ShapeEN12_GLOBAL__N_110CoroCloner4KindE+0x174>
    4fa0:	ldr	x0, [sp, #56]
    4fa4:	bl	0 <_ZdlPv>
    4fa8:	mov	x0, x19
    4fac:	ldp	x20, x19, [sp, #272]
    4fb0:	ldp	x22, x21, [sp, #256]
    4fb4:	ldp	x28, x23, [sp, #240]
    4fb8:	ldp	x29, x30, [sp, #224]
    4fbc:	add	sp, sp, #0x120
    4fc0:	ret
    4fc4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4fc8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4fcc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4fd0:	add	x0, x0, #0x0
    4fd4:	add	x1, x1, #0x0
    4fd8:	add	x3, x3, #0x0
    4fdc:	mov	w2, #0x71                  	// #113
    4fe0:	bl	0 <__assert_fail>
    4fe4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4fe8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4fec:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    4ff0:	add	x0, x0, #0x0
    4ff4:	add	x1, x1, #0x0
    4ff8:	add	x3, x3, #0x0
    4ffc:	mov	w2, #0x81                  	// #129
    5000:	bl	0 <__assert_fail>

0000000000005004 <_ZN12_GLOBAL__N_110CoroCloner6createEv>:
    5004:	sub	sp, sp, #0x160
    5008:	stp	x29, x30, [sp, #256]
    500c:	stp	x28, x27, [sp, #272]
    5010:	stp	x26, x25, [sp, #288]
    5014:	stp	x24, x23, [sp, #304]
    5018:	stp	x22, x21, [sp, #320]
    501c:	stp	x20, x19, [sp, #336]
    5020:	add	x29, sp, #0x100
    5024:	ldr	x8, [x0, #8]
    5028:	mov	x23, x0
    502c:	cbz	x8, 504c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x48>
    5030:	ldr	x20, [x23]
    5034:	str	x23, [sp, #8]
    5038:	ldrb	w8, [x20, #18]
    503c:	tbnz	w8, #0, 5198 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x194>
    5040:	ldr	x25, [x20, #88]
    5044:	mov	x8, x25
    5048:	b	51c0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1bc>
    504c:	ldr	x21, [x23]
    5050:	ldp	x19, x0, [x23, #16]
    5054:	ldr	x22, [x21, #40]
    5058:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    505c:	mov	x20, x0
    5060:	mov	x0, x21
    5064:	bl	0 <_ZNK4llvm5Value7getNameEv>
    5068:	mov	w8, #0x105                 	// #261
    506c:	sub	x9, x29, #0x20
    5070:	stp	x0, x1, [x29, #-32]
    5074:	sturh	w8, [x29, #-96]
    5078:	stp	x9, xzr, [x29, #-112]
    507c:	ldrb	w8, [x19, #16]
    5080:	cmp	w8, #0x1
    5084:	b.eq	509c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x98>  // b.none
    5088:	cbnz	w8, 50b0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xac>
    508c:	mov	w8, #0x100                 	// #256
    5090:	stp	xzr, xzr, [sp, #16]
    5094:	strh	w8, [sp, #32]
    5098:	b	50f8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf4>
    509c:	ldur	q0, [x29, #-112]
    50a0:	ldur	x8, [x29, #-96]
    50a4:	str	q0, [sp, #16]
    50a8:	str	x8, [sp, #32]
    50ac:	b	50f8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf4>
    50b0:	ldrb	w9, [x19, #17]
    50b4:	cmp	w9, #0x1
    50b8:	b.ne	50c4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc0>  // b.any
    50bc:	ldr	x19, [x19]
    50c0:	b	50c8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc4>
    50c4:	mov	w8, #0x2                   	// #2
    50c8:	sub	x9, x29, #0x20
    50cc:	mov	w10, #0x5                   	// #5
    50d0:	cmp	w8, #0x2
    50d4:	stp	x9, x19, [sp, #16]
    50d8:	strb	w10, [sp, #32]
    50dc:	strb	w8, [sp, #33]
    50e0:	b.ne	50f8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf4>  // b.any
    50e4:	ldrb	w8, [x19, #16]
    50e8:	cbz	w8, 6adc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1ad8>
    50ec:	ldrb	w8, [x19, #17]
    50f0:	cmp	w8, #0x1
    50f4:	b.eq	6adc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1ad8>  // b.none
    50f8:	mov	w0, #0x78                  	// #120
    50fc:	bl	0 <_ZN4llvm4UsernwEm>
    5100:	add	x4, sp, #0x10
    5104:	mov	w2, #0x7                   	// #7
    5108:	mov	w3, #0xffffffff            	// #-1
    510c:	mov	x1, x20
    5110:	mov	x5, xzr
    5114:	mov	x21, x0
    5118:	bl	0 <_ZN4llvm8FunctionC1EPNS_12FunctionTypeENS_11GlobalValue12LinkageTypesEjRKNS_5TwineEPNS_6ModuleE>
    511c:	mov	w2, #0x23                  	// #35
    5120:	mov	x0, x21
    5124:	mov	w1, wzr
    5128:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    512c:	mov	w2, #0x15                  	// #21
    5130:	mov	x0, x21
    5134:	mov	w1, wzr
    5138:	bl	0 <_ZN4llvm8Function12addParamAttrEjNS_9Attribute8AttrKindE>
    513c:	add	x20, x22, #0x18
    5140:	mov	x0, x20
    5144:	mov	x1, x21
    5148:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_8FunctionEE13addNodeToListEPS1_>
    514c:	mov	x8, x21
    5150:	ldr	x9, [x8, #56]!
    5154:	ldr	x10, [x22, #24]
    5158:	str	x20, [x21, #64]
    515c:	tst	x8, #0x7
    5160:	and	x11, x10, #0xfffffffffffffff8
    5164:	bfxil	x10, x9, #0, #3
    5168:	str	x10, [x8]
    516c:	str	x8, [x11, #8]
    5170:	b.ne	6b14 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b10>  // b.any
    5174:	ldr	x9, [x20]
    5178:	and	x9, x9, #0x7
    517c:	orr	x8, x9, x8
    5180:	str	x8, [x20]
    5184:	str	x21, [x23, #8]
    5188:	ldr	x20, [x23]
    518c:	str	x23, [sp, #8]
    5190:	ldrb	w8, [x20, #18]
    5194:	tbz	w8, #0, 5040 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x3c>
    5198:	mov	x0, x20
    519c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    51a0:	ldrb	w8, [x20, #18]
    51a4:	ldr	x25, [x20, #88]
    51a8:	tbnz	w8, #0, 51b4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b0>
    51ac:	mov	x8, x25
    51b0:	b	51c0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1bc>
    51b4:	mov	x0, x20
    51b8:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    51bc:	ldr	x8, [x20, #88]
    51c0:	ldr	x9, [x20, #96]
    51c4:	mov	w10, #0x28                  	// #40
    51c8:	madd	x26, x9, x10, x8
    51cc:	cmp	x26, x25
    51d0:	b.eq	52fc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2f8>  // b.none
    51d4:	ldr	x8, [sp, #8]
    51d8:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    51dc:	ldr	x9, [x9]
    51e0:	mov	w27, #0x101                 	// #257
    51e4:	add	x20, x8, #0x28
    51e8:	add	x8, sp, #0x10
    51ec:	add	x28, x9, #0x10
    51f0:	mov	w19, #0x1                   	// #1
    51f4:	add	x21, x8, #0x8
    51f8:	movk	w27, #0x1, lsl #16
    51fc:	b	5214 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x210>
    5200:	mov	x0, x24
    5204:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    5208:	add	x25, x25, #0x28
    520c:	cmp	x26, x25
    5210:	b.eq	52fc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2f8>  // b.none
    5214:	mov	x23, x25
    5218:	ldr	x0, [x23], #16
    521c:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    5220:	mov	x22, x0
    5224:	mov	w8, #0x2                   	// #2
    5228:	cmp	x23, #0x10
    522c:	stp	x8, xzr, [sp, #24]
    5230:	str	x25, [sp, #40]
    5234:	b.hi	5244 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x240>  // b.pmore
    5238:	lsl	x8, x19, x23
    523c:	tst	x8, x27
    5240:	b.ne	524c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x248>  // b.any
    5244:	mov	x0, x21
    5248:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    524c:	add	x1, sp, #0x10
    5250:	mov	x0, x20
    5254:	str	x28, [sp, #16]
    5258:	str	x20, [sp, #48]
    525c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5260:	ldr	x8, [sp, #40]
    5264:	mov	x23, x0
    5268:	add	x8, x8, #0x10
    526c:	cmp	x8, #0x10
    5270:	b.hi	52c8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2c4>  // b.pmore
    5274:	lsl	x8, x19, x8
    5278:	tst	x8, x27
    527c:	b.eq	52c8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2c4>  // b.none
    5280:	ldr	x8, [x23, #56]
    5284:	cmp	x8, x22
    5288:	b.eq	5208 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x204>  // b.none
    528c:	add	x8, x8, #0x10
    5290:	cmp	x8, #0x10
    5294:	add	x24, x23, #0x28
    5298:	b.hi	52e0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2dc>  // b.pmore
    529c:	lsl	x8, x19, x8
    52a0:	tst	x8, x27
    52a4:	b.eq	52e0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2dc>  // b.none
    52a8:	add	x8, x22, #0x10
    52ac:	cmp	x8, #0x10
    52b0:	str	x22, [x23, #56]
    52b4:	b.hi	5200 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1fc>  // b.pmore
    52b8:	lsl	x8, x19, x8
    52bc:	tst	x8, x27
    52c0:	b.ne	5208 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x204>  // b.any
    52c4:	b	5200 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1fc>
    52c8:	mov	x0, x21
    52cc:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    52d0:	ldr	x8, [x23, #56]
    52d4:	cmp	x8, x22
    52d8:	b.ne	528c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x288>  // b.any
    52dc:	b	5208 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x204>
    52e0:	mov	x0, x24
    52e4:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    52e8:	add	x8, x22, #0x10
    52ec:	cmp	x8, #0x10
    52f0:	str	x22, [x23, #56]
    52f4:	b.ls	52b8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x2b4>  // b.plast
    52f8:	b	5200 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1fc>
    52fc:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5300:	ldr	d0, [x8]
    5304:	ldr	x28, [sp, #8]
    5308:	sub	x8, x29, #0x70
    530c:	add	x8, x8, #0x10
    5310:	stur	x8, [x29, #-112]
    5314:	stur	d0, [x29, #-104]
    5318:	ldr	x8, [x28, #8]
    531c:	add	x20, x28, #0x28
    5320:	adrp	x5, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5324:	add	x5, x5, #0x0
    5328:	ldr	w19, [x8, #32]
    532c:	sub	x4, x29, #0x70
    5330:	mov	w3, #0x1                   	// #1
    5334:	mov	x2, x20
    5338:	and	w9, w19, #0xfffffff0
    533c:	tst	w19, #0x30
    5340:	orr	w10, w9, #0x4000
    5344:	csel	w9, w9, w10, eq  // eq = none
    5348:	str	w9, [x8, #32]
    534c:	ldp	x1, x0, [x28]
    5350:	mov	x6, xzr
    5354:	mov	x7, xzr
    5358:	ubfx	w21, w19, #4, #2
    535c:	and	w22, w19, #0xf
    5360:	str	xzr, [sp]
    5364:	bl	0 <_ZN4llvm17CloneFunctionIntoEPNS_8FunctionEPKS0_RNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS7_NS_3sys10SmartMutexILb0EEEEEEEbRNS_15SmallVectorImplIPNS_10ReturnInstEEEPKcPNS_14ClonedCodeInfoEPNS_20ValueMapTypeRemapperEPNS_17ValueMaterializerE>
    5368:	ldr	x8, [x28, #8]
    536c:	sub	w9, w22, #0x7
    5370:	cmp	w9, #0x1
    5374:	ldr	w10, [x8, #32]
    5378:	b.hi	5394 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x390>  // b.pmore
    537c:	and	w9, w10, #0xffffffc0
    5380:	orr	w9, w9, w22
    5384:	str	w9, [x8, #32]
    5388:	adrp	x26, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    538c:	ldr	x26, [x26]
    5390:	b	53b4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x3b0>
    5394:	adrp	x26, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5398:	ldr	x26, [x26]
    539c:	and	w9, w10, #0xfffffff0
    53a0:	cmp	w22, #0x9
    53a4:	orr	w9, w9, w22
    53a8:	b.eq	53b8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x3b4>  // b.none
    53ac:	and	w10, w10, #0x30
    53b0:	cbz	w10, 53b8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x3b4>
    53b4:	orr	w9, w9, #0x4000
    53b8:	str	w9, [x8, #32]
    53bc:	ldr	x8, [x28, #8]
    53c0:	ldr	w9, [x8, #32]
    53c4:	and	w11, w9, #0xf
    53c8:	sub	w10, w11, #0x7
    53cc:	cbz	w21, 53d8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x3d4>
    53d0:	cmp	w10, #0x2
    53d4:	b.cc	698c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1988>  // b.lo, b.ul, b.last
    53d8:	cmp	w11, #0x9
    53dc:	bfi	w9, w21, #4, #2
    53e0:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    53e4:	ccmp	w10, #0x1, #0x0, eq  // eq = none
    53e8:	orr	w10, w9, #0x4000
    53ec:	csel	w9, w9, w10, hi  // hi = pmore
    53f0:	str	w9, [x8, #32]
    53f4:	ldr	x8, [x28, #8]
    53f8:	and	w10, w19, #0xc0
    53fc:	ldr	w9, [x8, #32]
    5400:	and	w9, w9, #0xffffff3f
    5404:	orr	w9, w9, w10
    5408:	str	w9, [x8, #32]
    540c:	ldr	x8, [x28, #8]
    5410:	and	w10, w19, #0x300
    5414:	ldr	w9, [x8, #32]
    5418:	and	w9, w9, #0xfffffcff
    541c:	orr	w9, w9, w10
    5420:	str	w9, [x8, #32]
    5424:	ldr	x0, [x28, #8]
    5428:	bl	0 <_ZNK4llvm8Function10getContextEv>
    542c:	ldr	x8, [x28, #8]
    5430:	mov	x21, x0
    5434:	ldr	x8, [x8, #112]
    5438:	str	xzr, [sp, #128]
    543c:	stur	x8, [x29, #-120]
    5440:	ldr	x8, [x28, #24]
    5444:	ldr	w9, [x8, #168]
    5448:	sub	w10, w9, #0x1
    544c:	cmp	w10, #0x2
    5450:	b.cs	5464 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x460>  // b.hs, b.nlast
    5454:	ldr	x8, [x8, #200]
    5458:	ldr	x8, [x8, #112]
    545c:	str	x8, [sp, #128]
    5460:	b	54a4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x4a0>
    5464:	cbnz	w9, 54a4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x4a0>
    5468:	sub	x0, x29, #0x78
    546c:	bl	0 <_ZNK4llvm13AttributeList15getFnAttributesEv>
    5470:	mov	x1, x0
    5474:	add	x0, sp, #0x10
    5478:	add	x19, sp, #0x10
    547c:	bl	0 <_ZN4llvm11AttrBuilderC1ENS_12AttributeSetE>
    5480:	add	x0, sp, #0x80
    5484:	add	x3, sp, #0x10
    5488:	mov	w2, #0xffffffff            	// #-1
    548c:	mov	x1, x21
    5490:	bl	0 <_ZNK4llvm13AttributeList13addAttributesERNS_11LLVMContextEjRKNS_11AttrBuilderE>
    5494:	ldr	x1, [sp, #48]
    5498:	str	x0, [sp, #128]
    549c:	add	x0, x19, #0x10
    54a0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    54a4:	add	x0, sp, #0x80
    54a8:	mov	w2, #0x1                   	// #1
    54ac:	mov	w3, #0x23                  	// #35
    54b0:	mov	x1, x21
    54b4:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    54b8:	str	x0, [sp, #128]
    54bc:	add	x0, sp, #0x80
    54c0:	mov	w2, #0x1                   	// #1
    54c4:	mov	w3, #0x15                  	// #21
    54c8:	mov	x1, x21
    54cc:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
    54d0:	str	x0, [sp, #128]
    54d4:	ldr	x8, [x28, #24]
    54d8:	ldr	w8, [x8, #168]
    54dc:	orr	w8, w8, #0x2
    54e0:	cmp	w8, #0x2
    54e4:	b.ne	551c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x518>  // b.any
    54e8:	ldur	w8, [x29, #-104]
    54ec:	cbz	w8, 551c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x518>
    54f0:	ldur	x19, [x29, #-112]
    54f4:	lsl	x21, x8, #3
    54f8:	ldr	x0, [x19], #8
    54fc:	mov	w1, wzr
    5500:	mov	w2, wzr
    5504:	mov	x3, xzr
    5508:	mov	x4, xzr
    550c:	bl	0 <_ZN4llvm19changeToUnreachableEPNS_11InstructionEbbPNS_14DomTreeUpdaterEPNS_16MemorySSAUpdaterE>
    5510:	subs	x21, x21, #0x8
    5514:	b.ne	54f8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x4f4>  // b.any
    5518:	ldr	x0, [sp, #128]
    551c:	ldr	x8, [x28, #8]
    5520:	str	x0, [x8, #112]
    5524:	ldr	x8, [x28, #24]
    5528:	ldr	x9, [x28, #8]
    552c:	ldr	w10, [x8, #168]
    5530:	sub	w11, w10, #0x1
    5534:	cmp	w11, #0x2
    5538:	b.cs	554c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x548>  // b.hs, b.nlast
    553c:	ldr	x10, [x8, #200]
    5540:	ldrh	w10, [x10, #18]
    5544:	and	w10, w10, #0x3ff0
    5548:	b	5554 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x550>
    554c:	cbnz	w10, 69ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x19a8>
    5550:	mov	w10, #0x80                  	// #128
    5554:	ldrh	w11, [x9, #18]
    5558:	add	x12, sp, #0x10
    555c:	add	x21, x12, #0x8
    5560:	and	w11, w11, #0xffffc00f
    5564:	orr	w10, w11, w10
    5568:	strh	w10, [x9, #18]
    556c:	ldr	x9, [x8, #192]
    5570:	mov	w8, #0x2                   	// #2
    5574:	stp	x8, xzr, [sp, #24]
    5578:	add	x8, x9, #0x10
    557c:	cmp	x8, #0x10
    5580:	str	x9, [sp, #40]
    5584:	b.hi	55a0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x59c>  // b.pmore
    5588:	mov	w9, #0x1                   	// #1
    558c:	lsl	x8, x9, x8
    5590:	mov	w9, #0x101                 	// #257
    5594:	movk	w9, #0x1, lsl #16
    5598:	tst	x8, x9
    559c:	b.ne	55a8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x5a4>  // b.any
    55a0:	mov	x0, x21
    55a4:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    55a8:	add	x8, x26, #0x10
    55ac:	add	x1, sp, #0x10
    55b0:	mov	x0, x20
    55b4:	str	x8, [sp, #16]
    55b8:	str	x20, [sp, #48]
    55bc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    55c0:	ldr	x8, [sp, #40]
    55c4:	mov	x22, x0
    55c8:	add	x8, x8, #0x10
    55cc:	cmp	x8, #0x10
    55d0:	b.hi	5660 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x65c>  // b.pmore
    55d4:	mov	w9, #0x1                   	// #1
    55d8:	lsl	x8, x9, x8
    55dc:	mov	w9, #0x101                 	// #257
    55e0:	movk	w9, #0x1, lsl #16
    55e4:	tst	x8, x9
    55e8:	b.eq	5660 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x65c>  // b.none
    55ec:	ldr	x22, [x22, #56]
    55f0:	cbz	x22, 67dc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17d8>
    55f4:	ldrb	w8, [x22, #16]
    55f8:	cmp	w8, #0x12
    55fc:	b.ne	696c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1968>  // b.any
    5600:	ldr	x8, [x28, #16]
    5604:	ldrb	w9, [x8, #16]
    5608:	cmp	w9, #0x1
    560c:	b.eq	5624 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x620>  // b.none
    5610:	cbnz	w9, 564c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x648>
    5614:	mov	w8, #0x100                 	// #256
    5618:	stp	xzr, xzr, [sp, #16]
    561c:	strh	w8, [sp, #32]
    5620:	b	56ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x6a8>
    5624:	ldur	w10, [x29, #-32]
    5628:	ldurh	w11, [x29, #-28]
    562c:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5630:	add	x8, x8, #0x0
    5634:	mov	w9, #0x103                 	// #259
    5638:	stp	x8, xzr, [sp, #16]
    563c:	strh	w9, [sp, #32]
    5640:	stur	w10, [sp, #34]
    5644:	strh	w11, [sp, #38]
    5648:	b	56ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x6a8>
    564c:	ldrb	w10, [x8, #17]
    5650:	cmp	w10, #0x1
    5654:	b.ne	5674 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x670>  // b.any
    5658:	ldr	x8, [x8]
    565c:	b	5678 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x674>
    5660:	mov	x0, x21
    5664:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    5668:	ldr	x22, [x22, #56]
    566c:	cbnz	x22, 55f4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x5f0>
    5670:	b	67dc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17d8>
    5674:	mov	w9, #0x2                   	// #2
    5678:	adrp	x10, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    567c:	add	x10, x10, #0x0
    5680:	mov	w11, #0x3                   	// #3
    5684:	cmp	w9, #0x2
    5688:	stp	x10, x8, [sp, #16]
    568c:	strb	w11, [sp, #32]
    5690:	strb	w9, [sp, #33]
    5694:	b.ne	56ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x6a8>  // b.any
    5698:	ldrb	w9, [x8, #16]
    569c:	cbz	w9, 6adc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1ad8>
    56a0:	ldrb	w8, [x8, #17]
    56a4:	cmp	w8, #0x1
    56a8:	b.eq	6adc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1ad8>  // b.none
    56ac:	add	x1, sp, #0x10
    56b0:	mov	x0, x22
    56b4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    56b8:	ldr	x8, [x28, #8]
    56bc:	ldr	x8, [x8, #80]
    56c0:	ldrb	w9, [x8]
    56c4:	tbnz	w9, #2, 68ec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18e8>
    56c8:	sub	x9, x8, #0x18
    56cc:	cmp	x8, #0x0
    56d0:	csel	x1, xzr, x9, eq  // eq = none
    56d4:	mov	x0, x22
    56d8:	bl	0 <_ZN4llvm10BasicBlock10moveBeforeEPS0_>
    56dc:	mov	x0, x22
    56e0:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    56e4:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    56e8:	mov	x0, x22
    56ec:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    56f0:	ldr	x8, [x22, #8]
    56f4:	cbz	x8, 68cc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18c8>
    56f8:	ldr	x8, [x8, #8]
    56fc:	cbnz	x8, 68cc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18c8>
    5700:	mov	x0, x22
    5704:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    5708:	ldr	x0, [x22, #8]
    570c:	cbz	x0, 69c4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x19c0>
    5710:	bl	0 <_ZNK4llvm3Use7getUserEv>
    5714:	cbz	x0, 69e4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x19e0>
    5718:	ldrb	w8, [x0, #16]
    571c:	mov	x23, x0
    5720:	cmp	w8, #0x1a
    5724:	b.ne	6a04 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1a00>  // b.any
    5728:	ldr	w8, [x23, #20]
    572c:	and	w8, w8, #0xfffffff
    5730:	cmp	w8, #0x1
    5734:	b.ne	6a24 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1a20>  // b.any
    5738:	add	x21, x28, #0x78
    573c:	mov	x0, x21
    5740:	mov	x1, x23
    5744:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5748:	mov	w0, #0x38                  	// #56
    574c:	mov	w1, wzr
    5750:	bl	0 <_ZN4llvm4UsernwEmj>
    5754:	ldr	x1, [x28, #144]
    5758:	mov	x2, xzr
    575c:	mov	x24, x0
    5760:	bl	0 <_ZN4llvm15UnreachableInstC1ERNS_11LLVMContextEPNS_11InstructionE>
    5764:	mov	w8, #0x101                 	// #257
    5768:	add	x2, sp, #0x10
    576c:	mov	x0, x21
    5770:	mov	x1, x24
    5774:	stp	xzr, xzr, [sp, #16]
    5778:	strh	w8, [sp, #32]
    577c:	add	x19, sp, #0x10
    5780:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5784:	mov	x0, x23
    5788:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    578c:	ldr	x8, [x28, #24]
    5790:	add	x9, x22, #0x28
    5794:	stp	x22, x9, [x28, #128]
    5798:	ldr	w9, [x8, #168]
    579c:	sub	w10, w9, #0x1
    57a0:	cmp	w10, #0x2
    57a4:	b.cs	58d0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x8cc>  // b.hs, b.nlast
    57a8:	ldr	x9, [x28, #208]
    57ac:	mov	w8, #0x2                   	// #2
    57b0:	stp	x8, xzr, [sp, #24]
    57b4:	add	x22, x19, #0x8
    57b8:	add	x8, x9, #0x10
    57bc:	cmp	x8, #0x10
    57c0:	str	x9, [sp, #40]
    57c4:	b.hi	57e0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x7dc>  // b.pmore
    57c8:	mov	w9, #0x1                   	// #1
    57cc:	lsl	x8, x9, x8
    57d0:	mov	w9, #0x101                 	// #257
    57d4:	movk	w9, #0x1, lsl #16
    57d8:	tst	x8, x9
    57dc:	b.ne	57e8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x7e4>  // b.any
    57e0:	mov	x0, x22
    57e4:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    57e8:	add	x8, x26, #0x10
    57ec:	add	x1, sp, #0x10
    57f0:	mov	x0, x20
    57f4:	str	x8, [sp, #16]
    57f8:	str	x20, [sp, #48]
    57fc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5800:	ldr	x8, [sp, #40]
    5804:	mov	x23, x0
    5808:	add	x8, x8, #0x10
    580c:	cmp	x8, #0x10
    5810:	b.hi	5b24 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb20>  // b.pmore
    5814:	mov	w9, #0x1                   	// #1
    5818:	lsl	x8, x9, x8
    581c:	mov	w9, #0x101                 	// #257
    5820:	movk	w9, #0x1, lsl #16
    5824:	tst	x8, x9
    5828:	b.eq	5b24 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb20>  // b.none
    582c:	ldr	x8, [x23, #56]
    5830:	cbz	x8, 5b34 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb30>
    5834:	ldrb	w9, [x8, #16]
    5838:	cmp	w9, #0x50
    583c:	b.ne	68ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18a8>  // b.any
    5840:	ldur	x9, [x8, #-24]
    5844:	cbz	x9, 68ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18a8>
    5848:	ldrb	w10, [x9, #16]
    584c:	cbnz	w10, 68ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18a8>
    5850:	ldrb	w10, [x9, #33]
    5854:	tbz	w10, #5, 68ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18a8>
    5858:	ldr	w9, [x9, #36]
    585c:	cmp	w9, #0x24
    5860:	b.ne	68ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18a8>  // b.any
    5864:	ldp	x8, x9, [x8, #32]
    5868:	add	x9, x9, #0x28
    586c:	cmp	x9, x8
    5870:	b.eq	6a44 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1a40>  // b.none
    5874:	ldrb	w9, [x8]
    5878:	tbnz	w9, #2, 694c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1948>
    587c:	cbz	x8, 6a44 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1a40>
    5880:	ldurb	w9, [x8, #-8]
    5884:	cmp	w9, #0x1a
    5888:	b.ne	6a7c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1a78>  // b.any
    588c:	ldur	w9, [x8, #-4]
    5890:	and	w9, w9, #0xfffffff
    5894:	cmp	w9, #0x1
    5898:	b.ne	6a9c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1a98>  // b.any
    589c:	ldur	x22, [x8, #-48]
    58a0:	cbz	x22, 5970 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x96c>
    58a4:	ldrb	w8, [x22, #16]
    58a8:	cmp	w8, #0x12
    58ac:	b.eq	5970 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x96c>  // b.none
    58b0:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    58b4:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    58b8:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    58bc:	add	x0, x0, #0x0
    58c0:	add	x1, x1, #0x0
    58c4:	add	x3, x3, #0x0
    58c8:	mov	w2, #0x134                 	// #308
    58cc:	bl	0 <__assert_fail>
    58d0:	cbnz	w9, 59a8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x9a4>
    58d4:	ldr	x9, [x8, #216]
    58d8:	add	x8, sp, #0x10
    58dc:	add	x22, x8, #0x8
    58e0:	mov	w8, #0x2                   	// #2
    58e4:	stp	x8, xzr, [sp, #24]
    58e8:	add	x8, x9, #0x10
    58ec:	cmp	x8, #0x10
    58f0:	str	x9, [sp, #40]
    58f4:	b.hi	5910 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x90c>  // b.pmore
    58f8:	mov	w9, #0x1                   	// #1
    58fc:	lsl	x8, x9, x8
    5900:	mov	w9, #0x101                 	// #257
    5904:	movk	w9, #0x1, lsl #16
    5908:	tst	x8, x9
    590c:	b.ne	5918 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x914>  // b.any
    5910:	mov	x0, x22
    5914:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    5918:	add	x8, x26, #0x10
    591c:	add	x1, sp, #0x10
    5920:	mov	x0, x20
    5924:	str	x8, [sp, #16]
    5928:	str	x20, [sp, #48]
    592c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5930:	ldr	x8, [sp, #40]
    5934:	mov	x23, x0
    5938:	add	x8, x8, #0x10
    593c:	cmp	x8, #0x10
    5940:	b.hi	67cc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17c8>  // b.pmore
    5944:	mov	w9, #0x1                   	// #1
    5948:	lsl	x8, x9, x8
    594c:	mov	w9, #0x101                 	// #257
    5950:	movk	w9, #0x1, lsl #16
    5954:	tst	x8, x9
    5958:	b.eq	67cc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17c8>  // b.none
    595c:	ldr	x22, [x23, #56]
    5960:	cbz	x22, 67dc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17d8>
    5964:	ldrb	w8, [x22, #16]
    5968:	cmp	w8, #0x12
    596c:	b.ne	696c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1968>  // b.any
    5970:	mov	w0, #0x38                  	// #56
    5974:	mov	w1, #0x1                   	// #1
    5978:	bl	0 <_ZN4llvm4UsernwEmj>
    597c:	mov	x1, x22
    5980:	mov	x2, xzr
    5984:	mov	x23, x0
    5988:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockEPNS_11InstructionE>
    598c:	mov	w8, #0x101                 	// #257
    5990:	add	x2, sp, #0x10
    5994:	mov	x0, x21
    5998:	mov	x1, x23
    599c:	stp	xzr, xzr, [sp, #16]
    59a0:	strh	w8, [sp, #32]
    59a4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    59a8:	ldr	x8, [x28, #8]
    59ac:	ldr	x8, [x8, #80]
    59b0:	ldrb	w9, [x8]
    59b4:	tbnz	w9, #2, 68ec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x18e8>
    59b8:	sub	x9, x8, #0x18
    59bc:	cmp	x8, #0x0
    59c0:	csel	x8, xzr, x9, eq  // eq = none
    59c4:	ldr	x8, [x8, #48]
    59c8:	ldrb	w9, [x8]
    59cc:	tbnz	w9, #2, 694c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1948>
    59d0:	sub	x9, x8, #0x18
    59d4:	cmp	x8, #0x0
    59d8:	csel	x1, xzr, x9, eq  // eq = none
    59dc:	mov	x0, x21
    59e0:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    59e4:	ldr	x8, [x28, #24]
    59e8:	ldr	w9, [x8, #168]
    59ec:	sub	w10, w9, #0x1
    59f0:	cmp	w10, #0x2
    59f4:	b.cs	5a88 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa84>  // b.hs, b.nlast
    59f8:	ldr	x22, [x28, #8]
    59fc:	ldrb	w9, [x22, #18]
    5a00:	tbz	w9, #0, 5a10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa0c>
    5a04:	mov	x0, x22
    5a08:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    5a0c:	ldr	x8, [x28, #24]
    5a10:	ldr	x0, [x8, #176]
    5a14:	ldr	x22, [x22, #88]
    5a18:	mov	w1, wzr
    5a1c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5a20:	ldr	x8, [x28, #24]
    5a24:	mov	x2, x0
    5a28:	ldrb	w8, [x8, #232]
    5a2c:	cbz	w8, 5aa8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xaa4>
    5a30:	mov	w8, #0x101                 	// #257
    5a34:	stp	xzr, xzr, [x29, #-32]
    5a38:	sturh	w8, [x29, #-16]
    5a3c:	ldr	x8, [x22]
    5a40:	cmp	x8, x2
    5a44:	b.eq	5bcc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbc8>  // b.none
    5a48:	ldrb	w8, [x22, #16]
    5a4c:	cmp	w8, #0x10
    5a50:	b.ls	5b10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb0c>  // b.plast
    5a54:	mov	w8, #0x101                 	// #257
    5a58:	add	x3, sp, #0x10
    5a5c:	mov	w0, #0x31                  	// #49
    5a60:	mov	x1, x22
    5a64:	mov	x4, xzr
    5a68:	stp	xzr, xzr, [sp, #16]
    5a6c:	strh	w8, [sp, #32]
    5a70:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    5a74:	mov	x1, x0
    5a78:	sub	x2, x29, #0x20
    5a7c:	mov	x0, x21
    5a80:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5a84:	b	5bc8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbc4>
    5a88:	cbnz	w9, 6a64 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1a60>
    5a8c:	ldr	x22, [x28, #8]
    5a90:	ldrb	w8, [x22, #18]
    5a94:	tbz	w8, #0, 5aa0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xa9c>
    5a98:	mov	x0, x22
    5a9c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    5aa0:	ldr	x22, [x22, #88]
    5aa4:	b	5bcc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbc8>
    5aa8:	mov	x0, x2
    5aac:	mov	w1, wzr
    5ab0:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    5ab4:	mov	w19, #0x101                 	// #257
    5ab8:	stp	xzr, xzr, [x29, #-32]
    5abc:	sturh	w19, [x29, #-16]
    5ac0:	ldr	x8, [x22]
    5ac4:	cmp	x8, x0
    5ac8:	b.eq	5b68 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb64>  // b.none
    5acc:	ldrb	w8, [x22, #16]
    5ad0:	mov	x2, x0
    5ad4:	cmp	w8, #0x10
    5ad8:	b.ls	5b54 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb50>  // b.plast
    5adc:	mov	w8, #0x101                 	// #257
    5ae0:	add	x3, sp, #0x10
    5ae4:	mov	w0, #0x31                  	// #49
    5ae8:	mov	x1, x22
    5aec:	mov	x4, xzr
    5af0:	stp	xzr, xzr, [sp, #16]
    5af4:	strh	w8, [sp, #32]
    5af8:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    5afc:	mov	x1, x0
    5b00:	sub	x2, x29, #0x20
    5b04:	mov	x0, x21
    5b08:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b0c:	b	5b64 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xb60>
    5b10:	mov	w0, #0x31                  	// #49
    5b14:	mov	x1, x22
    5b18:	mov	w3, wzr
    5b1c:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    5b20:	b	5bc8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xbc4>
    5b24:	mov	x0, x22
    5b28:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    5b2c:	ldr	x8, [x23, #56]
    5b30:	cbnz	x8, 5834 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x830>
    5b34:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b38:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b3c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5b40:	add	x0, x0, #0x0
    5b44:	add	x1, x1, #0x0
    5b48:	add	x3, x3, #0x0
    5b4c:	mov	w2, #0x5b                  	// #91
    5b50:	bl	0 <__assert_fail>
    5b54:	mov	w0, #0x31                  	// #49
    5b58:	mov	x1, x22
    5b5c:	mov	w3, wzr
    5b60:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    5b64:	mov	x22, x0
    5b68:	stp	xzr, xzr, [x29, #-32]
    5b6c:	sturh	w19, [x29, #-16]
    5b70:	ldr	x8, [x22]
    5b74:	ldrb	w9, [x8, #8]
    5b78:	cmp	w9, #0xf
    5b7c:	b.ne	6b94 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b90>  // b.any
    5b80:	ldr	x8, [x8, #16]
    5b84:	mov	w0, #0x40                  	// #64
    5b88:	mov	w1, #0x1                   	// #1
    5b8c:	ldr	x23, [x8]
    5b90:	bl	0 <_ZN4llvm4UsernwEmj>
    5b94:	mov	w8, #0x101                 	// #257
    5b98:	add	x3, sp, #0x10
    5b9c:	mov	x1, x23
    5ba0:	mov	x2, x22
    5ba4:	mov	x4, xzr
    5ba8:	mov	x24, x0
    5bac:	stp	xzr, xzr, [sp, #16]
    5bb0:	strh	w8, [sp, #32]
    5bb4:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    5bb8:	sub	x2, x29, #0x20
    5bbc:	mov	x0, x21
    5bc0:	mov	x1, x24
    5bc4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5bc8:	mov	x22, x0
    5bcc:	ldr	x8, [x28, #24]
    5bd0:	str	x22, [x28, #192]
    5bd4:	add	x9, sp, #0x10
    5bd8:	add	x22, x9, #0x8
    5bdc:	ldr	x10, [x8, #184]
    5be0:	mov	w8, #0x2                   	// #2
    5be4:	stp	x8, xzr, [sp, #24]
    5be8:	add	x8, x10, #0x10
    5bec:	cmp	x8, #0x10
    5bf0:	str	x10, [sp, #40]
    5bf4:	b.hi	5c10 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc0c>  // b.pmore
    5bf8:	mov	w9, #0x1                   	// #1
    5bfc:	lsl	x8, x9, x8
    5c00:	mov	w9, #0x101                 	// #257
    5c04:	movk	w9, #0x1, lsl #16
    5c08:	tst	x8, x9
    5c0c:	b.ne	5c18 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc14>  // b.any
    5c10:	mov	x0, x22
    5c14:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    5c18:	add	x8, x26, #0x10
    5c1c:	add	x1, sp, #0x10
    5c20:	mov	x0, x20
    5c24:	str	x8, [sp, #16]
    5c28:	str	x20, [sp, #48]
    5c2c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c30:	ldr	x8, [sp, #40]
    5c34:	mov	x23, x0
    5c38:	add	x8, x8, #0x10
    5c3c:	cmp	x8, #0x10
    5c40:	b.hi	5c5c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc58>  // b.pmore
    5c44:	mov	w9, #0x1                   	// #1
    5c48:	lsl	x8, x9, x8
    5c4c:	mov	w9, #0x101                 	// #257
    5c50:	movk	w9, #0x1, lsl #16
    5c54:	tst	x8, x9
    5c58:	b.ne	5c64 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xc60>  // b.any
    5c5c:	mov	x0, x22
    5c60:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    5c64:	ldr	x22, [x23, #56]
    5c68:	ldr	x0, [x28, #192]
    5c6c:	mov	x1, x22
    5c70:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    5c74:	ldr	x1, [x28, #192]
    5c78:	mov	x0, x22
    5c7c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    5c80:	ldr	x0, [x28, #144]
    5c84:	ldr	x22, [x28, #192]
    5c88:	mov	w1, wzr
    5c8c:	bl	0 <_ZN4llvm4Type12getInt8PtrTyERNS_11LLVMContextEj>
    5c90:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5c94:	add	x8, x8, #0x0
    5c98:	mov	w9, #0x103                 	// #259
    5c9c:	stp	x8, xzr, [x29, #-32]
    5ca0:	sturh	w9, [x29, #-16]
    5ca4:	ldr	x8, [x22]
    5ca8:	cmp	x8, x0
    5cac:	b.eq	5d08 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd04>  // b.none
    5cb0:	ldrb	w8, [x22, #16]
    5cb4:	mov	x2, x0
    5cb8:	cmp	w8, #0x10
    5cbc:	b.ls	5cf4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xcf0>  // b.plast
    5cc0:	mov	w8, #0x101                 	// #257
    5cc4:	add	x3, sp, #0x10
    5cc8:	mov	w0, #0x31                  	// #49
    5ccc:	mov	x1, x22
    5cd0:	mov	x4, xzr
    5cd4:	stp	xzr, xzr, [sp, #16]
    5cd8:	strh	w8, [sp, #32]
    5cdc:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    5ce0:	mov	x1, x0
    5ce4:	sub	x2, x29, #0x20
    5ce8:	mov	x0, x21
    5cec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5cf0:	b	5d04 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd00>
    5cf4:	mov	w0, #0x31                  	// #49
    5cf8:	mov	x1, x22
    5cfc:	mov	w3, wzr
    5d00:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    5d04:	mov	x22, x0
    5d08:	ldr	x8, [x28, #24]
    5d0c:	add	x9, sp, #0x10
    5d10:	add	x23, x9, #0x8
    5d14:	ldr	x10, [x8]
    5d18:	mov	w8, #0x2                   	// #2
    5d1c:	stp	x8, xzr, [sp, #24]
    5d20:	add	x8, x10, #0x10
    5d24:	cmp	x8, #0x10
    5d28:	str	x10, [sp, #40]
    5d2c:	b.hi	5d48 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd44>  // b.pmore
    5d30:	mov	w9, #0x1                   	// #1
    5d34:	lsl	x8, x9, x8
    5d38:	mov	w9, #0x101                 	// #257
    5d3c:	movk	w9, #0x1, lsl #16
    5d40:	tst	x8, x9
    5d44:	b.ne	5d50 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd4c>  // b.any
    5d48:	mov	x0, x23
    5d4c:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    5d50:	add	x8, x26, #0x10
    5d54:	add	x1, sp, #0x10
    5d58:	mov	x0, x20
    5d5c:	str	x8, [sp, #16]
    5d60:	str	x20, [sp, #48]
    5d64:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5d68:	ldr	x8, [sp, #40]
    5d6c:	mov	x24, x0
    5d70:	add	x8, x8, #0x10
    5d74:	cmp	x8, #0x10
    5d78:	b.hi	5fc4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xfc0>  // b.pmore
    5d7c:	mov	w9, #0x1                   	// #1
    5d80:	lsl	x8, x9, x8
    5d84:	mov	w9, #0x101                 	// #257
    5d88:	movk	w9, #0x1, lsl #16
    5d8c:	tst	x8, x9
    5d90:	b.eq	5fc4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xfc0>  // b.none
    5d94:	ldr	x0, [x24, #56]
    5d98:	cbz	x0, 5fd4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xfd0>
    5d9c:	mov	x1, x22
    5da0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    5da4:	ldr	x8, [x28, #24]
    5da8:	ldr	w9, [x8, #168]
    5dac:	sub	w10, w9, #0x1
    5db0:	cmp	w10, #0x2
    5db4:	b.cs	5ea4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xea0>  // b.hs, b.nlast
    5db8:	ldr	x8, [x28, #208]
    5dbc:	cbz	x8, 6abc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1ab8>
    5dc0:	add	x9, sp, #0x10
    5dc4:	orr	x11, x8, #0x8
    5dc8:	mov	w10, #0x2                   	// #2
    5dcc:	add	x23, x9, #0x8
    5dd0:	cmn	x11, #0x8
    5dd4:	stp	x10, xzr, [sp, #24]
    5dd8:	str	x8, [sp, #40]
    5ddc:	b.eq	5de8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xde4>  // b.none
    5de0:	mov	x0, x23
    5de4:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    5de8:	add	x8, x26, #0x10
    5dec:	add	x1, sp, #0x10
    5df0:	mov	x0, x20
    5df4:	str	x8, [sp, #16]
    5df8:	str	x20, [sp, #48]
    5dfc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e00:	ldr	x8, [sp, #40]
    5e04:	mov	x22, x0
    5e08:	add	x8, x8, #0x10
    5e0c:	cmp	x8, #0x10
    5e10:	b.hi	5e2c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe28>  // b.pmore
    5e14:	mov	w9, #0x1                   	// #1
    5e18:	lsl	x8, x9, x8
    5e1c:	mov	w9, #0x101                 	// #257
    5e20:	movk	w9, #0x1, lsl #16
    5e24:	tst	x8, x9
    5e28:	b.ne	5e34 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe30>  // b.any
    5e2c:	mov	x0, x23
    5e30:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    5e34:	mov	w8, #0x6                   	// #6
    5e38:	stp	x8, xzr, [x29, #-32]
    5e3c:	ldr	x23, [x22, #56]
    5e40:	add	x8, x23, #0x10
    5e44:	cmp	x8, #0x10
    5e48:	stur	x23, [x29, #-16]
    5e4c:	b.hi	61c0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11bc>  // b.pmore
    5e50:	mov	w9, #0x1                   	// #1
    5e54:	lsl	x8, x9, x8
    5e58:	mov	w9, #0x101                 	// #257
    5e5c:	movk	w9, #0x1, lsl #16
    5e60:	tst	x8, x9
    5e64:	b.eq	61c0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11bc>  // b.none
    5e68:	mov	x0, x23
    5e6c:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    5e70:	ldr	x8, [x23, #8]
    5e74:	cbz	x8, 620c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1208>
    5e78:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5e7c:	ldr	d0, [x8]
    5e80:	add	x8, sp, #0x10
    5e84:	add	x22, x8, #0x10
    5e88:	str	x22, [sp, #16]
    5e8c:	str	d0, [sp, #24]
    5e90:	ldr	x23, [x28, #8]
    5e94:	ldrb	w8, [x23, #18]
    5e98:	tbnz	w8, #0, 5ff4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xff0>
    5e9c:	ldr	x25, [x23, #88]
    5ea0:	b	6018 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1014>
    5ea4:	cbnz	w9, 638c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1388>
    5ea8:	ldrb	w9, [x8, #224]
    5eac:	cbz	w9, 638c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1388>
    5eb0:	ldr	x9, [x8, #200]
    5eb4:	add	x8, sp, #0x10
    5eb8:	add	x22, x8, #0x8
    5ebc:	mov	w8, #0x2                   	// #2
    5ec0:	stp	x8, xzr, [sp, #24]
    5ec4:	add	x8, x9, #0x10
    5ec8:	cmp	x8, #0x10
    5ecc:	str	x9, [sp, #40]
    5ed0:	b.hi	5eec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xee8>  // b.pmore
    5ed4:	mov	w9, #0x1                   	// #1
    5ed8:	lsl	x8, x9, x8
    5edc:	mov	w9, #0x101                 	// #257
    5ee0:	movk	w9, #0x1, lsl #16
    5ee4:	tst	x8, x9
    5ee8:	b.ne	5ef4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xef0>  // b.any
    5eec:	mov	x0, x22
    5ef0:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    5ef4:	add	x8, x26, #0x10
    5ef8:	add	x1, sp, #0x10
    5efc:	mov	x0, x20
    5f00:	str	x8, [sp, #16]
    5f04:	str	x20, [sp, #48]
    5f08:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f0c:	ldr	x8, [sp, #40]
    5f10:	mov	x23, x0
    5f14:	add	x8, x8, #0x10
    5f18:	cmp	x8, #0x10
    5f1c:	b.hi	67fc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17f8>  // b.pmore
    5f20:	mov	w9, #0x1                   	// #1
    5f24:	lsl	x8, x9, x8
    5f28:	mov	w9, #0x101                 	// #257
    5f2c:	movk	w9, #0x1, lsl #16
    5f30:	tst	x8, x9
    5f34:	b.eq	67fc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17f8>  // b.none
    5f38:	ldr	x22, [x23, #56]
    5f3c:	cbz	x22, 680c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1808>
    5f40:	ldrb	w8, [x22, #16]
    5f44:	cmp	w8, #0x1b
    5f48:	b.ne	6bb4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1bb0>  // b.any
    5f4c:	ldr	w8, [x22, #20]
    5f50:	ubfx	w8, w8, #1, #27
    5f54:	sub	w8, w8, #0x1
    5f58:	cbz	w8, 6b54 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b50>
    5f5c:	sub	x24, x8, #0x1
    5f60:	cmp	w8, w24
    5f64:	b.cc	6b54 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b50>  // b.lo, b.ul, b.last
    5f68:	cmn	w24, #0x2
    5f6c:	b.eq	5f78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf74>  // b.none
    5f70:	cmp	w8, w24
    5f74:	b.ls	6bd4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1bd0>  // b.plast
    5f78:	cmp	w8, w24
    5f7c:	mov	w8, #0xfffffffe            	// #-2
    5f80:	ccmp	w24, w8, #0x4, hi  // hi = pmore
    5f84:	csinc	w1, wzr, w24, eq  // eq = none
    5f88:	mov	x0, x22
    5f8c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5f90:	mov	x23, x0
    5f94:	mov	x0, x22
    5f98:	mov	x1, x22
    5f9c:	mov	x2, x24
    5fa0:	bl	0 <_ZN4llvm10SwitchInst10removeCaseENS0_16CaseIteratorImplINS0_10CaseHandleEEE>
    5fa4:	ldr	w8, [x28, #32]
    5fa8:	sub	w9, w8, #0x1
    5fac:	cmp	w9, #0x2
    5fb0:	b.cc	6240 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x123c>  // b.lo, b.ul, b.last
    5fb4:	cbz	w8, 638c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1388>
    5fb8:	cmp	w8, #0x3
    5fbc:	b.eq	638c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1388>  // b.none
    5fc0:	b	6afc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1af8>
    5fc4:	mov	x0, x23
    5fc8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    5fcc:	ldr	x0, [x24, #56]
    5fd0:	cbnz	x0, 5d9c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xd98>
    5fd4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5fd8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5fdc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    5fe0:	add	x0, x0, #0x0
    5fe4:	add	x1, x1, #0x0
    5fe8:	add	x3, x3, #0x0
    5fec:	mov	w2, #0x5b                  	// #91
    5ff0:	bl	0 <__assert_fail>
    5ff4:	mov	x0, x23
    5ff8:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    5ffc:	ldr	x24, [x28, #8]
    6000:	ldr	x25, [x23, #88]
    6004:	ldrb	w8, [x24, #18]
    6008:	tbz	w8, #0, 6014 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1010>
    600c:	mov	x0, x24
    6010:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    6014:	mov	x23, x24
    6018:	ldp	x8, x9, [x23, #88]
    601c:	mov	w10, #0x28                  	// #40
    6020:	add	x23, x25, #0x28
    6024:	madd	x19, x9, x10, x8
    6028:	cmp	x23, x19
    602c:	b.eq	6084 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1080>  // b.none
    6030:	ldp	w8, w9, [sp, #24]
    6034:	cmp	w8, w9
    6038:	b.cs	6068 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1064>  // b.hs, b.nlast
    603c:	ldr	x9, [sp, #16]
    6040:	str	x23, [x9, w8, uxtw #3]
    6044:	ldp	w8, w9, [sp, #24]
    6048:	cmp	w8, w9
    604c:	b.cs	686c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1868>  // b.hs, b.nlast
    6050:	add	x23, x23, #0x28
    6054:	add	w8, w8, #0x1
    6058:	cmp	x19, x23
    605c:	str	w8, [sp, #24]
    6060:	b.ne	6034 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1030>  // b.any
    6064:	b	6084 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1080>
    6068:	add	x0, sp, #0x10
    606c:	mov	w3, #0x8                   	// #8
    6070:	mov	x1, x22
    6074:	mov	x2, xzr
    6078:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    607c:	ldr	w8, [sp, #24]
    6080:	b	603c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1038>
    6084:	ldur	x22, [x29, #-16]
    6088:	ldr	x8, [x22]
    608c:	cbz	x8, 6b74 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b70>
    6090:	ldrb	w8, [x8, #8]
    6094:	cmp	w8, #0xd
    6098:	b.ne	61a8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11a4>  // b.any
    609c:	mov	x0, x22
    60a0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    60a4:	ldr	x19, [x22, #8]
    60a8:	cbnz	x19, 614c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1148>
    60ac:	ldur	x22, [x29, #-16]
    60b0:	mov	x0, x22
    60b4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    60b8:	ldr	x8, [x22, #8]
    60bc:	cbz	x8, 61f4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11f0>
    60c0:	ldur	x8, [x29, #-16]
    60c4:	ldr	x0, [x8]
    60c8:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    60cc:	ldr	w8, [sp, #24]
    60d0:	mov	x1, x0
    60d4:	cbz	w8, 61e8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11e4>
    60d8:	mov	x19, xzr
    60dc:	sub	x22, x8, #0x1
    60e0:	mov	w23, #0x101                 	// #257
    60e4:	ldr	x8, [sp, #16]
    60e8:	sub	x3, x29, #0x24
    60ec:	sub	x5, x29, #0x40
    60f0:	mov	w4, #0x1                   	// #1
    60f4:	ldr	x2, [x8, x19, lsl #3]
    60f8:	mov	x0, x21
    60fc:	stur	w19, [x29, #-36]
    6100:	stp	xzr, xzr, [x29, #-64]
    6104:	sturh	w23, [x29, #-48]
    6108:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    610c:	cmp	x22, x19
    6110:	mov	x1, x0
    6114:	b.eq	61e8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11e4>  // b.none
    6118:	ldr	w8, [sp, #24]
    611c:	add	x19, x19, #0x1
    6120:	cmp	x19, x8
    6124:	b.cc	60e4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x10e0>  // b.lo, b.ul, b.last
    6128:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    612c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6130:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6134:	add	x0, x0, #0x0
    6138:	add	x1, x1, #0x0
    613c:	add	x3, x3, #0x0
    6140:	mov	w2, #0x95                  	// #149
    6144:	bl	0 <__assert_fail>
    6148:	cbz	x19, 60ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x10a8>
    614c:	mov	x0, x19
    6150:	ldr	x19, [x19, #8]
    6154:	bl	0 <_ZNK4llvm3Use7getUserEv>
    6158:	cbz	x0, 688c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1888>
    615c:	ldrb	w8, [x0, #16]
    6160:	mov	x22, x0
    6164:	cmp	w8, #0x58
    6168:	b.ne	6148 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1144>  // b.any
    616c:	ldr	w8, [x22, #64]
    6170:	cmp	w8, #0x1
    6174:	b.ne	6148 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1144>  // b.any
    6178:	ldr	x8, [x22, #56]
    617c:	ldr	w9, [sp, #24]
    6180:	ldr	w8, [x8]
    6184:	cmp	w9, w8
    6188:	b.ls	6128 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1124>  // b.plast
    618c:	ldr	x9, [sp, #16]
    6190:	mov	x0, x22
    6194:	ldr	x1, [x9, x8, lsl #3]
    6198:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    619c:	mov	x0, x22
    61a0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    61a4:	b	6148 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1144>
    61a8:	ldr	w8, [sp, #24]
    61ac:	cmp	w8, #0x1
    61b0:	b.ne	6bf4 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1bf0>  // b.any
    61b4:	ldr	x8, [sp, #16]
    61b8:	ldr	x1, [x8]
    61bc:	b	61ec <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x11e8>
    61c0:	ldr	x8, [x22, #40]
    61c4:	sub	x0, x29, #0x20
    61c8:	and	x1, x8, #0xfffffffffffffff8
    61cc:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
    61d0:	ldur	x23, [x29, #-16]
    61d4:	mov	x0, x23
    61d8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    61dc:	ldr	x8, [x23, #8]
    61e0:	cbnz	x8, 5e78 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xe74>
    61e4:	b	620c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1208>
    61e8:	ldur	x22, [x29, #-16]
    61ec:	mov	x0, x22
    61f0:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    61f4:	ldr	x0, [sp, #16]
    61f8:	add	x8, sp, #0x10
    61fc:	add	x8, x8, #0x10
    6200:	cmp	x0, x8
    6204:	b.eq	620c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1208>  // b.none
    6208:	bl	0 <free>
    620c:	ldur	x8, [x29, #-16]
    6210:	add	x8, x8, #0x10
    6214:	cmp	x8, #0x10
    6218:	b.hi	6234 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1230>  // b.pmore
    621c:	mov	w9, #0x1                   	// #1
    6220:	lsl	x8, x9, x8
    6224:	mov	w9, #0x101                 	// #257
    6228:	movk	w9, #0x1, lsl #16
    622c:	tst	x8, x9
    6230:	b.ne	638c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1388>  // b.any
    6234:	sub	x0, x29, #0x20
    6238:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    623c:	b	638c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1388>
    6240:	add	x1, x22, #0x18
    6244:	ldr	x22, [x22, #40]
    6248:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    624c:	add	x8, x8, #0x0
    6250:	mov	w19, #0x103                 	// #259
    6254:	add	x2, sp, #0x10
    6258:	mov	x0, x22
    625c:	stp	x8, xzr, [sp, #16]
    6260:	strh	w19, [sp, #32]
    6264:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    6268:	mov	x24, x0
    626c:	mov	x0, x22
    6270:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    6274:	mov	x1, x0
    6278:	mov	x0, x21
    627c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6280:	ldr	x8, [x28, #24]
    6284:	ldr	x2, [x28, #192]
    6288:	add	x5, sp, #0x10
    628c:	mov	x0, x21
    6290:	ldr	x1, [x8, #176]
    6294:	adrp	x8, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6298:	add	x8, x8, #0x0
    629c:	mov	w3, wzr
    62a0:	mov	w4, wzr
    62a4:	stp	x8, xzr, [sp, #16]
    62a8:	strh	w19, [sp, #32]
    62ac:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    62b0:	ldr	x8, [x28, #24]
    62b4:	mov	x25, x0
    62b8:	mov	x0, x8
    62bc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    62c0:	mov	x26, x0
    62c4:	mov	w19, #0x101                 	// #257
    62c8:	mov	w0, #0x40                  	// #64
    62cc:	mov	w1, #0x1                   	// #1
    62d0:	stp	xzr, xzr, [x29, #-32]
    62d4:	sturh	w19, [x29, #-16]
    62d8:	bl	0 <_ZN4llvm4UsernwEmj>
    62dc:	add	x3, sp, #0x10
    62e0:	mov	x1, x26
    62e4:	mov	x2, x25
    62e8:	mov	x4, xzr
    62ec:	mov	x27, x0
    62f0:	stp	xzr, xzr, [sp, #16]
    62f4:	strh	w19, [sp, #32]
    62f8:	bl	0 <_ZN4llvm8LoadInstC1EPNS_4TypeEPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    62fc:	sub	x2, x29, #0x20
    6300:	mov	x0, x21
    6304:	mov	x1, x27
    6308:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    630c:	stp	xzr, xzr, [sp, #16]
    6310:	strh	w19, [sp, #32]
    6314:	mov	x25, x0
    6318:	ldr	x0, [x0]
    631c:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
    6320:	mov	x3, x0
    6324:	add	x4, sp, #0x10
    6328:	mov	w1, #0x20                  	// #32
    632c:	mov	x0, x21
    6330:	mov	x2, x25
    6334:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6338:	mov	x25, x0
    633c:	mov	w0, #0x38                  	// #56
    6340:	mov	w1, #0x3                   	// #3
    6344:	bl	0 <_ZN4llvm4UsernwEmj>
    6348:	mov	x1, x23
    634c:	mov	x2, x24
    6350:	mov	x3, x25
    6354:	mov	x4, xzr
    6358:	mov	x26, x0
    635c:	bl	0 <_ZN4llvm10BranchInstC1EPNS_10BasicBlockES2_PNS_5ValueEPNS_11InstructionE>
    6360:	stp	xzr, xzr, [sp, #16]
    6364:	strh	w19, [sp, #32]
    6368:	mov	x1, x26
    636c:	adrp	x26, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6370:	ldr	x26, [x26]
    6374:	add	x2, sp, #0x10
    6378:	mov	x0, x21
    637c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6380:	mov	x0, x22
    6384:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    6388:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    638c:	ldr	x1, [x28, #24]
    6390:	ldr	w8, [x1, #168]
    6394:	sub	w9, w8, #0x1
    6398:	cmp	w9, #0x2
    639c:	b.cc	6518 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1514>  // b.lo, b.ul, b.last
    63a0:	cbnz	w8, 63d8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x13d4>
    63a4:	ldrsw	x8, [x28, #32]
    63a8:	cmp	w8, #0x4
    63ac:	b.cs	6afc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1af8>  // b.hs, b.nlast
    63b0:	adrp	x9, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    63b4:	add	x9, x9, #0x0
    63b8:	ldr	x0, [x28, #144]
    63bc:	ldr	x21, [x9, x8, lsl #3]
    63c0:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    63c4:	mov	x1, x21
    63c8:	mov	w2, wzr
    63cc:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
    63d0:	ldr	x1, [x28, #24]
    63d4:	mov	x21, x0
    63d8:	ldr	w8, [x1, #96]
    63dc:	cbz	w8, 6518 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1514>
    63e0:	ldr	x24, [x1, #88]
    63e4:	add	x9, sp, #0x10
    63e8:	add	x27, x26, #0x10
    63ec:	mov	w26, #0x101                 	// #257
    63f0:	mov	x19, x28
    63f4:	lsl	x25, x8, #3
    63f8:	add	x22, x9, #0x8
    63fc:	mov	w28, #0x1                   	// #1
    6400:	movk	w26, #0x1, lsl #16
    6404:	b	6414 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1410>
    6408:	subs	x25, x25, #0x8
    640c:	add	x24, x24, #0x8
    6410:	b.eq	6508 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1504>  // b.none
    6414:	ldr	x8, [x24]
    6418:	ldr	x9, [x19, #208]
    641c:	cmp	x8, x9
    6420:	b.eq	6408 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1404>  // b.none
    6424:	mov	w9, #0x2                   	// #2
    6428:	stp	x9, xzr, [sp, #24]
    642c:	add	x9, x8, #0x10
    6430:	cmp	x9, #0x10
    6434:	str	x8, [sp, #40]
    6438:	b.hi	6448 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1444>  // b.pmore
    643c:	lsl	x8, x28, x9
    6440:	tst	x8, x26
    6444:	b.ne	6450 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x144c>  // b.any
    6448:	mov	x0, x22
    644c:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    6450:	add	x1, sp, #0x10
    6454:	mov	x0, x20
    6458:	str	x27, [sp, #16]
    645c:	str	x20, [sp, #48]
    6460:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6464:	ldr	x8, [sp, #40]
    6468:	mov	x23, x0
    646c:	add	x8, x8, #0x10
    6470:	cmp	x8, #0x10
    6474:	b.hi	64d8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x14d4>  // b.pmore
    6478:	lsl	x8, x28, x8
    647c:	tst	x8, x26
    6480:	b.eq	64d8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x14d4>  // b.none
    6484:	ldr	x23, [x23, #56]
    6488:	cbz	x23, 64e8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x14e4>
    648c:	ldrb	w8, [x23, #16]
    6490:	cmp	w8, #0x50
    6494:	b.ne	684c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1848>  // b.any
    6498:	ldur	x8, [x23, #-24]
    649c:	cbz	x8, 684c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1848>
    64a0:	ldrb	w9, [x8, #16]
    64a4:	cbnz	w9, 684c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1848>
    64a8:	ldrb	w9, [x8, #33]
    64ac:	tbz	w9, #5, 684c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1848>
    64b0:	ldr	w8, [x8, #36]
    64b4:	sub	w8, w8, #0x23
    64b8:	cmp	w8, #0x2
    64bc:	b.cs	684c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1848>  // b.hs, b.nlast
    64c0:	mov	x0, x23
    64c4:	mov	x1, x21
    64c8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    64cc:	mov	x0, x23
    64d0:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    64d4:	b	6408 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1404>
    64d8:	mov	x0, x22
    64dc:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    64e0:	ldr	x23, [x23, #56]
    64e4:	cbnz	x23, 648c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1488>
    64e8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64ec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64f0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    64f4:	add	x0, x0, #0x0
    64f8:	add	x1, x1, #0x0
    64fc:	add	x3, x3, #0x0
    6500:	mov	w2, #0x5b                  	// #91
    6504:	bl	0 <__assert_fail>
    6508:	adrp	x26, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    650c:	ldr	x1, [x19, #24]
    6510:	ldr	x26, [x26]
    6514:	mov	x28, x19
    6518:	ldr	x0, [x28, #8]
    651c:	mov	x2, x20
    6520:	bl	47cc <_ZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEE>
    6524:	ldr	x8, [x28, #24]
    6528:	ldr	w9, [x8, #16]
    652c:	cbz	w9, 664c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1648>
    6530:	ldr	x23, [x8, #8]
    6534:	add	x8, sp, #0x10
    6538:	mov	w27, #0x101                 	// #257
    653c:	lsl	x24, x9, #3
    6540:	mov	w25, #0x2                   	// #2
    6544:	add	x21, x8, #0x8
    6548:	add	x19, x26, #0x10
    654c:	mov	w26, #0x1                   	// #1
    6550:	movk	w27, #0x1, lsl #16
    6554:	ldr	x9, [x23]
    6558:	stp	x25, xzr, [sp, #24]
    655c:	add	x8, x9, #0x10
    6560:	cmp	x8, #0x10
    6564:	str	x9, [sp, #40]
    6568:	b.hi	6578 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1574>  // b.pmore
    656c:	lsl	x8, x26, x8
    6570:	tst	x8, x27
    6574:	b.ne	6580 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x157c>  // b.any
    6578:	mov	x0, x21
    657c:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    6580:	add	x1, sp, #0x10
    6584:	mov	x0, x20
    6588:	str	x19, [sp, #16]
    658c:	str	x20, [sp, #48]
    6590:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6594:	ldr	x8, [sp, #40]
    6598:	mov	x22, x0
    659c:	add	x8, x8, #0x10
    65a0:	cmp	x8, #0x10
    65a4:	b.hi	6610 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x160c>  // b.pmore
    65a8:	lsl	x8, x26, x8
    65ac:	tst	x8, x27
    65b0:	b.eq	6610 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x160c>  // b.none
    65b4:	ldr	x0, [x22, #56]
    65b8:	cbz	x0, 6620 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x161c>
    65bc:	ldrb	w8, [x0, #16]
    65c0:	cmp	w8, #0x50
    65c4:	b.ne	682c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1828>  // b.any
    65c8:	ldur	x8, [x0, #-24]
    65cc:	cbz	x8, 682c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1828>
    65d0:	ldrb	w9, [x8, #16]
    65d4:	cbnz	w9, 682c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1828>
    65d8:	ldrb	w9, [x8, #33]
    65dc:	tbz	w9, #5, 682c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1828>
    65e0:	ldr	w8, [x8, #36]
    65e4:	cmp	w8, #0x15
    65e8:	b.ne	682c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1828>  // b.any
    65ec:	ldr	x1, [x28, #24]
    65f0:	ldr	x2, [x28, #192]
    65f4:	mov	w3, #0x1                   	// #1
    65f8:	mov	x4, xzr
    65fc:	bl	6c14 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>
    6600:	subs	x24, x24, #0x8
    6604:	add	x23, x23, #0x8
    6608:	b.ne	6554 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1550>  // b.any
    660c:	b	6640 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x163c>
    6610:	mov	x0, x21
    6614:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    6618:	ldr	x0, [x22, #56]
    661c:	cbnz	x0, 65bc <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x15b8>
    6620:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6624:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6628:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    662c:	add	x0, x0, #0x0
    6630:	add	x1, x1, #0x0
    6634:	add	x3, x3, #0x0
    6638:	mov	w2, #0x5b                  	// #91
    663c:	bl	0 <__assert_fail>
    6640:	adrp	x26, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6644:	ldr	x8, [x28, #24]
    6648:	ldr	x26, [x26]
    664c:	ldr	w9, [x8, #168]
    6650:	cbnz	w9, 6764 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1760>
    6654:	ldr	x0, [x8]
    6658:	mov	w1, wzr
    665c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6660:	cbz	x0, 6b34 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1b30>
    6664:	ldrb	w8, [x0, #16]
    6668:	cmp	w8, #0x50
    666c:	b.ne	690c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1908>  // b.any
    6670:	ldur	x8, [x0, #-24]
    6674:	cbz	x8, 690c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1908>
    6678:	ldrb	w9, [x8, #16]
    667c:	cbnz	w9, 690c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1908>
    6680:	ldrb	w9, [x8, #33]
    6684:	tbz	w9, #5, 690c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1908>
    6688:	ldr	w8, [x8, #36]
    668c:	sub	w8, w8, #0x18
    6690:	cmp	w8, #0x3
    6694:	b.cs	690c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1908>  // b.hs, b.nlast
    6698:	add	x9, sp, #0x10
    669c:	add	x8, x0, #0x10
    66a0:	mov	w10, #0x2                   	// #2
    66a4:	add	x21, x9, #0x8
    66a8:	cmp	x8, #0x10
    66ac:	stp	x10, xzr, [sp, #24]
    66b0:	str	x0, [sp, #40]
    66b4:	b.hi	66d0 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x16cc>  // b.pmore
    66b8:	mov	w9, #0x1                   	// #1
    66bc:	lsl	x8, x9, x8
    66c0:	mov	w9, #0x101                 	// #257
    66c4:	movk	w9, #0x1, lsl #16
    66c8:	tst	x8, x9
    66cc:	b.ne	66d8 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x16d4>  // b.any
    66d0:	mov	x0, x21
    66d4:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
    66d8:	add	x8, x26, #0x10
    66dc:	add	x1, sp, #0x10
    66e0:	mov	x0, x20
    66e4:	str	x8, [sp, #16]
    66e8:	str	x20, [sp, #48]
    66ec:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    66f0:	ldr	x8, [sp, #40]
    66f4:	mov	x20, x0
    66f8:	add	x8, x8, #0x10
    66fc:	cmp	x8, #0x10
    6700:	b.hi	679c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1798>  // b.pmore
    6704:	mov	w9, #0x1                   	// #1
    6708:	lsl	x8, x9, x8
    670c:	mov	w9, #0x101                 	// #257
    6710:	movk	w9, #0x1, lsl #16
    6714:	tst	x8, x9
    6718:	b.eq	679c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1798>  // b.none
    671c:	ldr	x0, [x20, #56]
    6720:	cbz	x0, 67ac <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x17a8>
    6724:	ldrb	w8, [x0, #16]
    6728:	cmp	w8, #0x50
    672c:	b.ne	692c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1928>  // b.any
    6730:	ldur	x8, [x0, #-24]
    6734:	cbz	x8, 692c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1928>
    6738:	ldrb	w9, [x8, #16]
    673c:	cbnz	w9, 692c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1928>
    6740:	ldrb	w9, [x8, #33]
    6744:	tbz	w9, #5, 692c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1928>
    6748:	ldr	w8, [x8, #36]
    674c:	cmp	w8, #0x18
    6750:	b.ne	692c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1928>  // b.any
    6754:	ldr	w8, [x28, #32]
    6758:	cmp	w8, #0x2
    675c:	cset	w1, eq  // eq = none
    6760:	bl	0 <_ZN4llvm4coro15replaceCoroFreeEPNS_10CoroIdInstEb>
    6764:	ldur	x0, [x29, #-112]
    6768:	sub	x8, x29, #0x70
    676c:	add	x8, x8, #0x10
    6770:	cmp	x0, x8
    6774:	b.eq	677c <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1778>  // b.none
    6778:	bl	0 <free>
    677c:	ldp	x20, x19, [sp, #336]
    6780:	ldp	x22, x21, [sp, #320]
    6784:	ldp	x24, x23, [sp, #304]
    6788:	ldp	x26, x25, [sp, #288]
    678c:	ldp	x28, x27, [sp, #272]
    6790:	ldp	x29, x30, [sp, #256]
    6794:	add	sp, sp, #0x160
    6798:	ret
    679c:	mov	x0, x21
    67a0:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    67a4:	ldr	x0, [x20, #56]
    67a8:	cbnz	x0, 6724 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x1720>
    67ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67b4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67b8:	add	x0, x0, #0x0
    67bc:	add	x1, x1, #0x0
    67c0:	add	x3, x3, #0x0
    67c4:	mov	w2, #0x5b                  	// #91
    67c8:	bl	0 <__assert_fail>
    67cc:	mov	x0, x22
    67d0:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    67d4:	ldr	x22, [x23, #56]
    67d8:	cbnz	x22, 5964 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0x960>
    67dc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67e0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67e4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    67e8:	add	x0, x0, #0x0
    67ec:	add	x1, x1, #0x0
    67f0:	add	x3, x3, #0x0
    67f4:	mov	w2, #0x5b                  	// #91
    67f8:	bl	0 <__assert_fail>
    67fc:	mov	x0, x22
    6800:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
    6804:	ldr	x22, [x23, #56]
    6808:	cbnz	x22, 5f40 <_ZN12_GLOBAL__N_110CoroCloner6createEv+0xf3c>
    680c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6810:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6814:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6818:	add	x0, x0, #0x0
    681c:	add	x1, x1, #0x0
    6820:	add	x3, x3, #0x0
    6824:	mov	w2, #0x5b                  	// #91
    6828:	bl	0 <__assert_fail>
    682c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6830:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6834:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6838:	add	x0, x0, #0x0
    683c:	add	x1, x1, #0x0
    6840:	add	x3, x3, #0x0
    6844:	mov	w2, #0x101                 	// #257
    6848:	bl	0 <__assert_fail>
    684c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6850:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6854:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6858:	add	x0, x0, #0x0
    685c:	add	x1, x1, #0x0
    6860:	add	x3, x3, #0x0
    6864:	mov	w2, #0x101                 	// #257
    6868:	bl	0 <__assert_fail>
    686c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6870:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6874:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6878:	add	x0, x0, #0x0
    687c:	add	x1, x1, #0x0
    6880:	add	x3, x3, #0x0
    6884:	mov	w2, #0x43                  	// #67
    6888:	bl	0 <__assert_fail>
    688c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6890:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6894:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6898:	add	x0, x0, #0x0
    689c:	add	x1, x1, #0x0
    68a0:	add	x3, x3, #0x0
    68a4:	mov	w2, #0x69                  	// #105
    68a8:	bl	0 <__assert_fail>
    68ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68b4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68b8:	add	x0, x0, #0x0
    68bc:	add	x1, x1, #0x0
    68c0:	add	x3, x3, #0x0
    68c4:	mov	w2, #0x101                 	// #257
    68c8:	bl	0 <__assert_fail>
    68cc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68d0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68d4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68d8:	add	x0, x0, #0x0
    68dc:	add	x1, x1, #0x0
    68e0:	add	x3, x3, #0x0
    68e4:	mov	w2, #0x23f                 	// #575
    68e8:	bl	0 <__assert_fail>
    68ec:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68f0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68f4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    68f8:	add	x0, x0, #0x0
    68fc:	add	x1, x1, #0x0
    6900:	add	x3, x3, #0x0
    6904:	mov	w2, #0x8b                  	// #139
    6908:	bl	0 <__assert_fail>
    690c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6910:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6914:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6918:	add	x0, x0, #0x0
    691c:	add	x1, x1, #0x0
    6920:	add	x3, x3, #0x0
    6924:	mov	w2, #0x108                 	// #264
    6928:	bl	0 <__assert_fail>
    692c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6930:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6934:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6938:	add	x0, x0, #0x0
    693c:	add	x1, x1, #0x0
    6940:	add	x3, x3, #0x0
    6944:	mov	w2, #0x101                 	// #257
    6948:	bl	0 <__assert_fail>
    694c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6950:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6954:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6958:	add	x0, x0, #0x0
    695c:	add	x1, x1, #0x0
    6960:	add	x3, x3, #0x0
    6964:	mov	w2, #0x8b                  	// #139
    6968:	bl	0 <__assert_fail>
    696c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6970:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6974:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6978:	add	x0, x0, #0x0
    697c:	add	x1, x1, #0x0
    6980:	add	x3, x3, #0x0
    6984:	mov	w2, #0x101                 	// #257
    6988:	bl	0 <__assert_fail>
    698c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6990:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6994:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6998:	add	x0, x0, #0x0
    699c:	add	x1, x1, #0x0
    69a0:	add	x3, x3, #0x0
    69a4:	mov	w2, #0xf4                  	// #244
    69a8:	bl	0 <__assert_fail>
    69ac:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69b0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69b4:	add	x0, x0, #0x0
    69b8:	add	x1, x1, #0x0
    69bc:	mov	w2, #0xcb                  	// #203
    69c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    69c4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69c8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69cc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69d0:	add	x0, x0, #0x0
    69d4:	add	x1, x1, #0x0
    69d8:	add	x3, x3, #0x0
    69dc:	mov	w2, #0x99                  	// #153
    69e0:	bl	0 <__assert_fail>
    69e4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69e8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69ec:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    69f0:	add	x0, x0, #0x0
    69f4:	add	x1, x1, #0x0
    69f8:	add	x3, x3, #0x0
    69fc:	mov	w2, #0x69                  	// #105
    6a00:	bl	0 <__assert_fail>
    6a04:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a08:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a0c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a10:	add	x0, x0, #0x0
    6a14:	add	x1, x1, #0x0
    6a18:	add	x3, x3, #0x0
    6a1c:	mov	w2, #0x108                 	// #264
    6a20:	bl	0 <__assert_fail>
    6a24:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a28:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a2c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a30:	add	x0, x0, #0x0
    6a34:	add	x1, x1, #0x0
    6a38:	add	x3, x3, #0x0
    6a3c:	mov	w2, #0x241                 	// #577
    6a40:	bl	0 <__assert_fail>
    6a44:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a48:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a4c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a50:	add	x0, x0, #0x0
    6a54:	add	x1, x1, #0x0
    6a58:	add	x3, x3, #0x0
    6a5c:	mov	w2, #0x69                  	// #105
    6a60:	bl	0 <__assert_fail>
    6a64:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a68:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a6c:	add	x0, x0, #0x0
    6a70:	add	x1, x1, #0x0
    6a74:	mov	w2, #0x27c                 	// #636
    6a78:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6a7c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a80:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a84:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6a88:	add	x0, x0, #0x0
    6a8c:	add	x1, x1, #0x0
    6a90:	add	x3, x3, #0x0
    6a94:	mov	w2, #0x108                 	// #264
    6a98:	bl	0 <__assert_fail>
    6a9c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6aa0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6aa4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6aa8:	add	x0, x0, #0x0
    6aac:	add	x1, x1, #0x0
    6ab0:	add	x3, x3, #0x0
    6ab4:	mov	w2, #0x25c                 	// #604
    6ab8:	bl	0 <__assert_fail>
    6abc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ac0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ac4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ac8:	add	x0, x0, #0x0
    6acc:	add	x1, x1, #0x0
    6ad0:	add	x3, x3, #0x0
    6ad4:	mov	w2, #0x2f2                 	// #754
    6ad8:	bl	0 <__assert_fail>
    6adc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ae0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ae4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ae8:	add	x0, x0, #0x0
    6aec:	add	x1, x1, #0x0
    6af0:	add	x3, x3, #0x0
    6af4:	mov	w2, #0xb8                  	// #184
    6af8:	bl	0 <__assert_fail>
    6afc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b00:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b04:	add	x0, x0, #0x0
    6b08:	add	x1, x1, #0x0
    6b0c:	mov	w2, #0x91                  	// #145
    6b10:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6b14:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b18:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b1c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b20:	add	x0, x0, #0x0
    6b24:	add	x1, x1, #0x0
    6b28:	add	x3, x3, #0x0
    6b2c:	mov	w2, #0xb3                  	// #179
    6b30:	bl	0 <__assert_fail>
    6b34:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b38:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b3c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b40:	add	x0, x0, #0x0
    6b44:	add	x1, x1, #0x0
    6b48:	add	x3, x3, #0x0
    6b4c:	mov	w2, #0x69                  	// #105
    6b50:	bl	0 <__assert_fail>
    6b54:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b58:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b5c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b60:	add	x0, x0, #0x0
    6b64:	add	x1, x1, #0x0
    6b68:	add	x3, x3, #0x0
    6b6c:	mov	w2, #0xcdd                 	// #3293
    6b70:	bl	0 <__assert_fail>
    6b74:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b78:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b7c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b80:	add	x0, x0, #0x0
    6b84:	add	x1, x1, #0x0
    6b88:	add	x3, x3, #0x0
    6b8c:	mov	w2, #0x69                  	// #105
    6b90:	bl	0 <__assert_fail>
    6b94:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b98:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6b9c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ba0:	add	x0, x0, #0x0
    6ba4:	add	x1, x1, #0x0
    6ba8:	add	x3, x3, #0x0
    6bac:	mov	w2, #0x17e                 	// #382
    6bb0:	bl	0 <__assert_fail>
    6bb4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6bb8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6bbc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6bc0:	add	x0, x0, #0x0
    6bc4:	add	x1, x1, #0x0
    6bc8:	add	x3, x3, #0x0
    6bcc:	mov	w2, #0x101                 	// #257
    6bd0:	bl	0 <__assert_fail>
    6bd4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6bd8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6bdc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6be0:	add	x0, x0, #0x0
    6be4:	add	x1, x1, #0x0
    6be8:	add	x3, x3, #0x0
    6bec:	mov	w2, #0xc81                 	// #3201
    6bf0:	bl	0 <__assert_fail>
    6bf4:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6bf8:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6bfc:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6c00:	add	x0, x0, #0x0
    6c04:	add	x1, x1, #0x0
    6c08:	add	x3, x3, #0x0
    6c0c:	mov	w2, #0x1b0                 	// #432
    6c10:	bl	0 <__assert_fail>

0000000000006c14 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE>:
    6c14:	sub	sp, sp, #0xc0
    6c18:	stp	x29, x30, [sp, #128]
    6c1c:	str	x23, [sp, #144]
    6c20:	stp	x22, x21, [sp, #160]
    6c24:	stp	x20, x19, [sp, #176]
    6c28:	add	x29, sp, #0x80
    6c2c:	mov	x22, x1
    6c30:	mov	w1, #0x1                   	// #1
    6c34:	mov	x21, x4
    6c38:	mov	w20, w3
    6c3c:	mov	x23, x2
    6c40:	mov	x19, x0
    6c44:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6c48:	cbz	x0, 6f88 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x374>
    6c4c:	ldrb	w8, [x0, #16]
    6c50:	cmp	w8, #0x11
    6c54:	b.cs	6fa8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x394>  // b.hs, b.nlast
    6c58:	bl	0 <_ZNK4llvm8Constant10isOneValueEv>
    6c5c:	tbz	w0, #0, 6cc4 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0xb0>
    6c60:	mov	x0, x19
    6c64:	bl	0 <_ZNK4llvm5Value10getContextEv>
    6c68:	stp	x0, xzr, [sp, #80]
    6c6c:	mov	w8, #0x200                 	// #512
    6c70:	add	x0, sp, #0x38
    6c74:	mov	x1, x19
    6c78:	str	wzr, [sp, #96]
    6c7c:	strb	wzr, [sp, #102]
    6c80:	stp	xzr, xzr, [sp, #64]
    6c84:	str	xzr, [sp, #56]
    6c88:	strh	w8, [sp, #100]
    6c8c:	stp	xzr, xzr, [sp, #104]
    6c90:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6c94:	ldr	w8, [x22, #168]
    6c98:	sub	w9, w8, #0x1
    6c9c:	cmp	w9, #0x2
    6ca0:	b.cs	6d18 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x104>  // b.hs, b.nlast
    6ca4:	ldrb	w8, [x22, #232]
    6ca8:	cbnz	w8, 6d20 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x10c>
    6cac:	add	x1, sp, #0x38
    6cb0:	mov	x0, x22
    6cb4:	mov	x2, x23
    6cb8:	mov	x3, x21
    6cbc:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    6cc0:	b	6d20 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x10c>
    6cc4:	mov	x0, x19
    6cc8:	bl	0 <_ZNK4llvm5Value10getContextEv>
    6ccc:	stp	x0, xzr, [sp, #80]
    6cd0:	mov	w8, #0x200                 	// #512
    6cd4:	add	x0, sp, #0x38
    6cd8:	mov	x1, x19
    6cdc:	str	wzr, [sp, #96]
    6ce0:	strb	wzr, [sp, #102]
    6ce4:	stp	xzr, xzr, [sp, #64]
    6ce8:	str	xzr, [sp, #56]
    6cec:	strh	w8, [sp, #100]
    6cf0:	stp	xzr, xzr, [sp, #104]
    6cf4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6cf8:	ldr	w8, [x22, #168]
    6cfc:	cmp	w8, #0x2
    6d00:	b.eq	6eac <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x298>  // b.none
    6d04:	cmp	w8, #0x1
    6d08:	b.eq	6dbc <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x1a8>  // b.none
    6d0c:	cbnz	w8, 6f08 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2f4>
    6d10:	tbnz	w20, #0, 6ec8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2b4>
    6d14:	b	6f34 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x320>
    6d18:	cbnz	w8, 6d20 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x10c>
    6d1c:	tbz	w20, #0, 6f34 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x320>
    6d20:	mov	x8, sp
    6d24:	mov	w1, #0x1                   	// #1
    6d28:	mov	x0, x19
    6d2c:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6d30:	ldrb	w8, [sp, #24]
    6d34:	cbz	w8, 6f34 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x320>
    6d38:	ldr	x8, [sp, #8]
    6d3c:	cbz	x8, 6fc8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x3b4>
    6d40:	ldr	x8, [sp]
    6d44:	ldr	x21, [x8]
    6d48:	cbz	x21, 6fe8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x3d4>
    6d4c:	ldrb	w8, [x21, #16]
    6d50:	cmp	w8, #0x4b
    6d54:	b.ne	7008 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x3f4>  // b.any
    6d58:	mov	w0, #0x38                  	// #56
    6d5c:	mov	w1, #0x1                   	// #1
    6d60:	bl	0 <_ZN4llvm4UsernwEmj>
    6d64:	mov	w3, #0x1                   	// #1
    6d68:	mov	x1, x21
    6d6c:	mov	x2, xzr
    6d70:	mov	x4, xzr
    6d74:	mov	x22, x0
    6d78:	bl	0 <_ZN4llvm17CleanupReturnInstC1EPNS_5ValueEPNS_10BasicBlockEjPNS_11InstructionE>
    6d7c:	mov	w23, #0x101                 	// #257
    6d80:	add	x0, sp, #0x38
    6d84:	add	x2, sp, #0x20
    6d88:	mov	x1, x22
    6d8c:	stp	xzr, xzr, [sp, #32]
    6d90:	strh	w23, [sp, #48]
    6d94:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6d98:	mov	x21, x0
    6d9c:	ldr	x0, [x19, #40]
    6da0:	add	x1, x19, #0x18
    6da4:	add	x2, sp, #0x20
    6da8:	stp	xzr, xzr, [sp, #32]
    6dac:	strh	w23, [sp, #48]
    6db0:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    6db4:	ldr	x0, [x21, #40]
    6db8:	b	6f2c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x318>
    6dbc:	ldrb	w8, [x22, #232]
    6dc0:	cbnz	w8, 6dd8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x1c4>
    6dc4:	add	x1, sp, #0x38
    6dc8:	mov	x0, x22
    6dcc:	mov	x2, x23
    6dd0:	mov	x3, x21
    6dd4:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    6dd8:	mov	x0, x22
    6ddc:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6de0:	ldr	x8, [x0, #16]
    6de4:	ldr	x0, [x8]
    6de8:	cbz	x0, 7028 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x414>
    6dec:	ldrb	w21, [x0, #8]
    6df0:	cmp	w21, #0xd
    6df4:	csel	x22, x0, xzr, eq  // eq = none
    6df8:	mov	w8, w21
    6dfc:	b.ne	6e18 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x204>  // b.any
    6e00:	ldr	w8, [x22, #12]
    6e04:	cbz	w8, 7068 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x454>
    6e08:	ldr	x8, [x22, #16]
    6e0c:	ldr	x0, [x8]
    6e10:	cbz	x0, 7088 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x474>
    6e14:	ldrb	w8, [x0, #8]
    6e18:	cmp	w8, #0xf
    6e1c:	b.ne	7048 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x434>  // b.any
    6e20:	bl	0 <_ZN4llvm19ConstantPointerNull3getEPNS_11PointerTypeE>
    6e24:	cmp	w21, #0xd
    6e28:	mov	x21, x0
    6e2c:	b.ne	6e68 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x254>  // b.any
    6e30:	mov	x0, x22
    6e34:	bl	0 <_ZN4llvm10UndefValue3getEPNS_4TypeE>
    6e38:	mov	x1, x0
    6e3c:	mov	w8, #0x101                 	// #257
    6e40:	add	x0, sp, #0x38
    6e44:	add	x3, sp, #0x20
    6e48:	mov	x5, sp
    6e4c:	mov	w4, #0x1                   	// #1
    6e50:	mov	x2, x21
    6e54:	str	wzr, [sp, #32]
    6e58:	stp	xzr, xzr, [sp]
    6e5c:	strh	w8, [sp, #16]
    6e60:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6e64:	mov	x21, x0
    6e68:	ldr	x22, [sp, #80]
    6e6c:	cmp	x21, #0x0
    6e70:	cset	w1, ne  // ne = any
    6e74:	mov	w0, #0x38                  	// #56
    6e78:	bl	0 <_ZN4llvm4UsernwEmj>
    6e7c:	mov	x1, x22
    6e80:	mov	x2, x21
    6e84:	mov	x3, xzr
    6e88:	mov	x23, x0
    6e8c:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
    6e90:	mov	w8, #0x101                 	// #257
    6e94:	add	x0, sp, #0x38
    6e98:	mov	x2, sp
    6e9c:	mov	x1, x23
    6ea0:	stp	xzr, xzr, [sp]
    6ea4:	strh	w8, [sp, #16]
    6ea8:	b	6f04 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2f0>
    6eac:	ldrb	w8, [x22, #232]
    6eb0:	cbnz	w8, 6ec8 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x2b4>
    6eb4:	add	x1, sp, #0x38
    6eb8:	mov	x0, x22
    6ebc:	mov	x2, x23
    6ec0:	mov	x3, x21
    6ec4:	bl	0 <_ZNK4llvm4coro5Shape11emitDeallocERNS_9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEEPNS_5ValueEPNS_9CallGraphE>
    6ec8:	ldr	x21, [sp, #80]
    6ecc:	mov	w0, #0x38                  	// #56
    6ed0:	mov	w1, wzr
    6ed4:	bl	0 <_ZN4llvm4UsernwEmj>
    6ed8:	mov	x1, x21
    6edc:	mov	x2, xzr
    6ee0:	mov	x3, xzr
    6ee4:	mov	x22, x0
    6ee8:	bl	0 <_ZN4llvm10ReturnInstC1ERNS_11LLVMContextEPNS_5ValueEPNS_11InstructionE>
    6eec:	mov	w8, #0x101                 	// #257
    6ef0:	stp	xzr, xzr, [sp]
    6ef4:	strh	w8, [sp, #16]
    6ef8:	add	x0, sp, #0x38
    6efc:	mov	x2, sp
    6f00:	mov	x1, x22
    6f04:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6f08:	ldr	x21, [x19, #40]
    6f0c:	add	x1, x19, #0x18
    6f10:	mov	w8, #0x101                 	// #257
    6f14:	mov	x2, sp
    6f18:	mov	x0, x21
    6f1c:	stp	xzr, xzr, [sp]
    6f20:	strh	w8, [sp, #16]
    6f24:	bl	0 <_ZN4llvm10BasicBlock15splitBasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsINS_11InstructionELb1ELb0EvEELb0ELb0EEERKNS_5TwineE>
    6f28:	mov	x0, x21
    6f2c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    6f30:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    6f34:	ldr	x1, [sp, #56]
    6f38:	cbz	x1, 6f44 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x330>
    6f3c:	add	x0, sp, #0x38
    6f40:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    6f44:	mov	x0, x19
    6f48:	bl	0 <_ZNK4llvm5Value10getContextEv>
    6f4c:	tbz	w20, #0, 6f58 <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x344>
    6f50:	bl	0 <_ZN4llvm11ConstantInt7getTrueERNS_11LLVMContextE>
    6f54:	b	6f5c <_ZL14replaceCoroEndPN4llvm11CoroEndInstERKNS_4coro5ShapeEPNS_5ValueEbPNS_9CallGraphE+0x348>
    6f58:	bl	0 <_ZN4llvm11ConstantInt8getFalseERNS_11LLVMContextE>
    6f5c:	mov	x1, x0
    6f60:	mov	x0, x19
    6f64:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    6f68:	mov	x0, x19
    6f6c:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
    6f70:	ldp	x20, x19, [sp, #176]
    6f74:	ldp	x22, x21, [sp, #160]
    6f78:	ldr	x23, [sp, #144]
    6f7c:	ldp	x29, x30, [sp, #128]
    6f80:	add	sp, sp, #0xc0
    6f84:	ret
    6f88:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6f8c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6f90:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6f94:	add	x0, x0, #0x0
    6f98:	add	x1, x1, #0x0
    6f9c:	add	x3, x3, #0x0
    6fa0:	mov	w2, #0x69                  	// #105
    6fa4:	bl	0 <__assert_fail>
    6fa8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6fac:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6fb0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6fb4:	add	x0, x0, #0x0
    6fb8:	add	x1, x1, #0x0
    6fbc:	add	x3, x3, #0x0
    6fc0:	mov	w2, #0x108                 	// #264
    6fc4:	bl	0 <__assert_fail>
    6fc8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6fcc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6fd0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6fd4:	add	x0, x0, #0x0
    6fd8:	add	x1, x1, #0x0
    6fdc:	add	x3, x3, #0x0
    6fe0:	mov	w2, #0xfa                  	// #250
    6fe4:	bl	0 <__assert_fail>
    6fe8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6fec:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ff0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    6ff4:	add	x0, x0, #0x0
    6ff8:	add	x1, x1, #0x0
    6ffc:	add	x3, x3, #0x0
    7000:	mov	w2, #0x5b                  	// #91
    7004:	bl	0 <__assert_fail>
    7008:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    700c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7010:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7014:	add	x0, x0, #0x0
    7018:	add	x1, x1, #0x0
    701c:	add	x3, x3, #0x0
    7020:	mov	w2, #0xfa                  	// #250
    7024:	bl	0 <__assert_fail>
    7028:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    702c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7030:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7034:	add	x0, x0, #0x0
    7038:	add	x1, x1, #0x0
    703c:	add	x3, x3, #0x0
    7040:	mov	w2, #0x69                  	// #105
    7044:	bl	0 <__assert_fail>
    7048:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    704c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7050:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7054:	add	x0, x0, #0x0
    7058:	add	x1, x1, #0x0
    705c:	add	x3, x3, #0x0
    7060:	mov	w2, #0x108                 	// #264
    7064:	bl	0 <__assert_fail>
    7068:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    706c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7070:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7074:	add	x0, x0, #0x0
    7078:	add	x1, x1, #0x0
    707c:	add	x3, x3, #0x0
    7080:	mov	w2, #0x160                 	// #352
    7084:	bl	0 <__assert_fail>
    7088:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    708c:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7090:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7094:	add	x0, x0, #0x0
    7098:	add	x1, x1, #0x0
    709c:	add	x3, x3, #0x0
    70a0:	mov	w2, #0x69                  	// #105
    70a4:	bl	0 <__assert_fail>

00000000000070a8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE>:
    70a8:	stp	x29, x30, [sp, #-80]!
    70ac:	str	x25, [sp, #16]
    70b0:	stp	x24, x23, [sp, #32]
    70b4:	stp	x22, x21, [sp, #48]
    70b8:	stp	x20, x19, [sp, #64]
    70bc:	mov	x29, sp
    70c0:	mov	x20, x0
    70c4:	mov	x0, x1
    70c8:	mov	x19, x2
    70cc:	bl	0 <_ZN4llvm10BasicBlock4phisEv>
    70d0:	cmp	x0, x1
    70d4:	b.eq	72c4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x21c>  // b.none
    70d8:	mov	x22, x0
    70dc:	mov	x21, x1
    70e0:	mov	w23, #0x18                  	// #24
    70e4:	mov	x24, #0xfffffffffffffff0    	// #-16
    70e8:	ldr	w10, [x22, #20]
    70ec:	and	x8, x10, #0xfffffff
    70f0:	cbz	w8, 72dc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x234>
    70f4:	ldr	w11, [x22, #56]
    70f8:	mov	x9, xzr
    70fc:	tbnz	w10, #30, 7130 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x88>
    7100:	add	x11, x11, x11, lsl #1
    7104:	add	x12, x8, w8, uxtw #1
    7108:	sub	x11, x11, x12
    710c:	add	x11, x22, x11, lsl #3
    7110:	add	x11, x11, #0x8
    7114:	ldr	x12, [x11, x9, lsl #3]
    7118:	cmp	x12, x20
    711c:	b.eq	7158 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xb0>  // b.none
    7120:	add	x9, x9, #0x1
    7124:	cmp	x8, x9
    7128:	b.ne	7114 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x6c>  // b.any
    712c:	b	72dc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x234>
    7130:	ldur	x12, [x22, #-8]
    7134:	madd	x11, x11, x23, x12
    7138:	add	x11, x11, #0x8
    713c:	ldr	x12, [x11, x9, lsl #3]
    7140:	cmp	x12, x20
    7144:	b.eq	7158 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xb0>  // b.none
    7148:	add	x9, x9, #0x1
    714c:	cmp	x8, x9
    7150:	b.ne	713c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x94>  // b.any
    7154:	b	72dc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x234>
    7158:	cmp	w8, w9
    715c:	b.ls	733c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x294>  // b.plast
    7160:	tbnz	w10, #30, 7170 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xc8>
    7164:	mneg	x8, x8, x23
    7168:	add	x8, x22, x8
    716c:	b	7174 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0xcc>
    7170:	ldur	x8, [x22, #-8]
    7174:	and	x10, x9, #0xffffffff
    7178:	mul	x10, x10, x23
    717c:	ldr	w9, [x19, #24]
    7180:	ldr	x25, [x8, x10]
    7184:	ldr	x8, [x19, #8]
    7188:	cbz	w9, 71e4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x13c>
    718c:	orr	x10, x25, #0x8
    7190:	cmn	x10, #0x8
    7194:	b.eq	72fc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x254>  // b.none
    7198:	ubfx	x10, x25, #4, #28
    719c:	eor	w11, w10, w25, lsr #9
    71a0:	sub	w10, w9, #0x1
    71a4:	and	w11, w11, w10
    71a8:	add	x12, x8, w11, uxtw #4
    71ac:	ldr	x13, [x12]
    71b0:	cmp	x13, x25
    71b4:	b.eq	71e8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x140>  // b.none
    71b8:	mov	w14, #0x1                   	// #1
    71bc:	cmn	x13, #0x8
    71c0:	b.eq	71e4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x13c>  // b.none
    71c4:	add	w11, w11, w14
    71c8:	and	w11, w11, w10
    71cc:	add	x12, x8, w11, uxtw #4
    71d0:	ldr	x13, [x12]
    71d4:	add	w14, w14, #0x1
    71d8:	cmp	x13, x25
    71dc:	b.eq	71e8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x140>  // b.none
    71e0:	b	71bc <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x114>
    71e4:	add	x12, x8, x9, lsl #4
    71e8:	add	x10, x8, x9, lsl #4
    71ec:	cmp	x12, x10
    71f0:	b.eq	71f8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x150>  // b.none
    71f4:	ldr	x25, [x12, #8]
    71f8:	str	x22, [x29, #24]
    71fc:	cbz	w9, 7268 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1c0>
    7200:	orr	x10, x22, #0x8
    7204:	cmn	x10, #0x8
    7208:	b.eq	731c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x274>  // b.none
    720c:	ubfx	x10, x22, #4, #28
    7210:	eor	w10, w10, w22, lsr #9
    7214:	sub	w9, w9, #0x1
    7218:	and	w10, w10, w9
    721c:	add	x0, x8, w10, uxtw #4
    7220:	ldr	x12, [x0]
    7224:	cmp	x12, x22
    7228:	b.eq	7284 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1dc>  // b.none
    722c:	mov	x11, xzr
    7230:	mov	w13, #0x1                   	// #1
    7234:	cmn	x12, #0x8
    7238:	b.eq	72b8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x210>  // b.none
    723c:	cmp	x11, #0x0
    7240:	add	w10, w10, w13
    7244:	ccmp	x12, x24, #0x0, eq  // eq = none
    7248:	and	w10, w10, w9
    724c:	csel	x11, x11, x0, ne  // ne = any
    7250:	add	x0, x8, w10, uxtw #4
    7254:	ldr	x12, [x0]
    7258:	add	w13, w13, #0x1
    725c:	cmp	x12, x22
    7260:	b.eq	7284 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1dc>  // b.none
    7264:	b	7234 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x18c>
    7268:	mov	x3, xzr
    726c:	add	x1, x29, #0x18
    7270:	add	x2, x29, #0x18
    7274:	mov	x0, x19
    7278:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    727c:	ldr	x8, [x29, #24]
    7280:	stp	x8, xzr, [x0]
    7284:	str	x25, [x0, #8]
    7288:	cbz	x22, 735c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x2b4>
    728c:	ldr	x8, [x22, #32]
    7290:	ldrb	w9, [x8]
    7294:	tbnz	w9, #2, 737c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x2d4>
    7298:	cbz	x8, 739c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x2f4>
    729c:	ldurb	w9, [x8, #-8]
    72a0:	sub	x8, x8, #0x18
    72a4:	cmp	w9, #0x4f
    72a8:	csel	x22, x8, xzr, eq  // eq = none
    72ac:	cmp	x22, x21
    72b0:	b.ne	70e8 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x40>  // b.any
    72b4:	b	72c4 <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x21c>
    72b8:	cmp	x11, #0x0
    72bc:	csel	x3, x0, x11, eq  // eq = none
    72c0:	b	726c <_ZL25scanPHIsAndUpdateValueMapPN4llvm11InstructionEPNS_10BasicBlockERNS_8DenseMapIPNS_5ValueES6_NS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S6_EEEE+0x1c4>
    72c4:	ldp	x20, x19, [sp, #64]
    72c8:	ldp	x22, x21, [sp, #48]
    72cc:	ldp	x24, x23, [sp, #32]
    72d0:	ldr	x25, [sp, #16]
    72d4:	ldp	x29, x30, [sp], #80
    72d8:	ret
    72dc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    72e0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    72e4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    72e8:	add	x0, x0, #0x0
    72ec:	add	x1, x1, #0x0
    72f0:	add	x3, x3, #0x0
    72f4:	mov	w2, #0xab5                 	// #2741
    72f8:	bl	0 <__assert_fail>
    72fc:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7300:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7304:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7308:	add	x0, x0, #0x0
    730c:	add	x1, x1, #0x0
    7310:	add	x3, x3, #0x0
    7314:	mov	w2, #0x252                 	// #594
    7318:	bl	0 <__assert_fail>
    731c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7320:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7324:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7328:	add	x0, x0, #0x0
    732c:	add	x1, x1, #0x0
    7330:	add	x3, x3, #0x0
    7334:	mov	w2, #0x252                 	// #594
    7338:	bl	0 <__assert_fail>
    733c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7340:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7344:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7348:	add	x0, x0, #0x0
    734c:	add	x1, x1, #0x0
    7350:	add	x3, x3, #0x0
    7354:	mov	w2, #0xadf                 	// #2783
    7358:	bl	0 <__assert_fail>
    735c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7360:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7364:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7368:	add	x0, x0, #0x0
    736c:	add	x1, x1, #0x0
    7370:	add	x3, x3, #0x0
    7374:	mov	w2, #0x13d                 	// #317
    7378:	bl	0 <__assert_fail>
    737c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7380:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7384:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7388:	add	x0, x0, #0x0
    738c:	add	x1, x1, #0x0
    7390:	add	x3, x3, #0x0
    7394:	mov	w2, #0x8b                  	// #139
    7398:	bl	0 <__assert_fail>
    739c:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    73a0:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    73a4:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    73a8:	add	x0, x0, #0x0
    73ac:	add	x1, x1, #0x0
    73b0:	add	x3, x3, #0x0
    73b4:	mov	w2, #0x5b                  	// #91
    73b8:	bl	0 <__assert_fail>

00000000000073bc <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE>:
    73bc:	sub	sp, sp, #0xc0
    73c0:	stp	x29, x30, [sp, #128]
    73c4:	str	x23, [sp, #144]
    73c8:	stp	x22, x21, [sp, #160]
    73cc:	stp	x20, x19, [sp, #176]
    73d0:	add	x29, sp, #0x80
    73d4:	ldr	x8, [x0]
    73d8:	mov	x19, x1
    73dc:	ldr	x21, [x8]
    73e0:	cbz	x21, 7424 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x68>
    73e4:	ldr	x8, [x21]
    73e8:	ldrb	w9, [x8, #8]
    73ec:	cmp	w9, #0xf
    73f0:	b.ne	75b8 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1fc>  // b.any
    73f4:	ldr	x8, [x8, #16]
    73f8:	ldr	x8, [x8]
    73fc:	cmp	x8, x19
    7400:	b.eq	759c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1e0>  // b.none
    7404:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7408:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    740c:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7410:	add	x0, x0, #0x0
    7414:	add	x1, x1, #0x0
    7418:	add	x3, x3, #0x0
    741c:	mov	w2, #0x1f9                 	// #505
    7420:	bl	0 <__assert_fail>
    7424:	ldr	x22, [x0, #8]
    7428:	mov	x20, x0
    742c:	ldrb	w8, [x22, #18]
    7430:	tbnz	w8, #0, 7440 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x84>
    7434:	ldr	x21, [x22, #88]
    7438:	mov	x8, x21
    743c:	b	7468 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xac>
    7440:	mov	x0, x22
    7444:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    7448:	ldrb	w8, [x22, #18]
    744c:	ldr	x21, [x22, #88]
    7450:	tbnz	w8, #0, 745c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xa0>
    7454:	mov	x8, x21
    7458:	b	7468 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xac>
    745c:	mov	x0, x22
    7460:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    7464:	ldr	x8, [x22, #88]
    7468:	ldr	x9, [x22, #96]
    746c:	mov	w10, #0x28                  	// #40
    7470:	madd	x22, x9, x10, x8
    7474:	cmp	x22, x21
    7478:	b.eq	7494 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xd8>  // b.none
    747c:	mov	x0, x21
    7480:	bl	0 <_ZNK4llvm5Value12isSwiftErrorEv>
    7484:	tbnz	w0, #0, 7574 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1b8>
    7488:	add	x21, x21, #0x28
    748c:	cmp	x22, x21
    7490:	b.ne	747c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0xc0>  // b.any
    7494:	ldr	x8, [x20, #8]
    7498:	ldr	x8, [x8, #80]
    749c:	ldrb	w9, [x8]
    74a0:	tbnz	w9, #2, 75d8 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x21c>
    74a4:	sub	x9, x8, #0x18
    74a8:	cmp	x8, #0x0
    74ac:	csel	x0, xzr, x9, eq  // eq = none
    74b0:	bl	0 <_ZNK4llvm10BasicBlock19getFirstNonPHIOrDbgEv>
    74b4:	mov	x21, x0
    74b8:	bl	0 <_ZNK4llvm5Value10getContextEv>
    74bc:	stp	x0, xzr, [sp, #56]
    74c0:	mov	w8, #0x200                 	// #512
    74c4:	add	x0, sp, #0x20
    74c8:	mov	x1, x21
    74cc:	str	wzr, [sp, #72]
    74d0:	strb	wzr, [sp, #78]
    74d4:	stp	xzr, xzr, [sp, #40]
    74d8:	str	xzr, [sp, #32]
    74dc:	strh	w8, [sp, #76]
    74e0:	stp	xzr, xzr, [sp, #80]
    74e4:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    74e8:	ldr	x8, [sp, #40]
    74ec:	mov	w23, #0x101                 	// #257
    74f0:	stp	xzr, xzr, [sp, #8]
    74f4:	strh	w23, [sp, #24]
    74f8:	ldr	x8, [x8, #56]
    74fc:	ldr	x0, [x8, #40]
    7500:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
    7504:	mov	x21, x0
    7508:	mov	w0, #0x40                  	// #64
    750c:	mov	w1, #0x1                   	// #1
    7510:	bl	0 <_ZN4llvm4UsernwEmj>
    7514:	ldr	w2, [x21, #4]
    7518:	sub	x4, x29, #0x18
    751c:	mov	x1, x19
    7520:	mov	x3, xzr
    7524:	mov	x5, xzr
    7528:	mov	x22, x0
    752c:	stp	xzr, xzr, [x29, #-24]
    7530:	sturh	w23, [x29, #-8]
    7534:	bl	0 <_ZN4llvm10AllocaInstC1EPNS_4TypeEjPNS_5ValueERKNS_5TwineEPNS_11InstructionE>
    7538:	add	x0, sp, #0x20
    753c:	add	x2, sp, #0x8
    7540:	mov	x1, x22
    7544:	bl	0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7548:	ldrh	w8, [x0, #18]
    754c:	mov	x21, x0
    7550:	orr	w8, w8, #0x40
    7554:	strh	w8, [x0, #18]
    7558:	ldr	x8, [x20]
    755c:	str	x0, [x8]
    7560:	ldr	x1, [sp, #32]
    7564:	cbz	x1, 759c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1e0>
    7568:	add	x0, sp, #0x20
    756c:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
    7570:	b	759c <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1e0>
    7574:	ldr	x8, [x20]
    7578:	str	x21, [x8]
    757c:	ldr	x8, [x21]
    7580:	ldrb	w9, [x8, #8]
    7584:	cmp	w9, #0xf
    7588:	b.ne	75b8 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x1fc>  // b.any
    758c:	ldr	x8, [x8, #16]
    7590:	ldr	x8, [x8]
    7594:	cmp	x8, x19
    7598:	b.ne	75f8 <_ZZL20replaceSwiftErrorOpsRN4llvm8FunctionERNS_4coro5ShapeEPNS_8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS8_NS_3sys10SmartMutexILb0EEEEEEEENK3$_0clEPNS_4TypeE+0x23c>  // b.any
    759c:	mov	x0, x21
    75a0:	ldp	x20, x19, [sp, #176]
    75a4:	ldp	x22, x21, [sp, #160]
    75a8:	ldr	x23, [sp, #144]
    75ac:	ldp	x29, x30, [sp, #128]
    75b0:	add	sp, sp, #0xc0
    75b4:	ret
    75b8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    75bc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    75c0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    75c4:	add	x0, x0, #0x0
    75c8:	add	x1, x1, #0x0
    75cc:	add	x3, x3, #0x0
    75d0:	mov	w2, #0x17e                 	// #382
    75d4:	bl	0 <__assert_fail>
    75d8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    75dc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    75e0:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    75e4:	add	x0, x0, #0x0
    75e8:	add	x1, x1, #0x0
    75ec:	add	x3, x3, #0x0
    75f0:	mov	w2, #0x8b                  	// #139
    75f4:	bl	0 <__assert_fail>
    75f8:	adrp	x0, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    75fc:	adrp	x1, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7600:	adrp	x3, 0 <_ZN4llvm29initializeCoroSplitLegacyPassERNS_12PassRegistryE>
    7604:	add	x0, x0, #0x0
    7608:	add	x1, x1, #0x0
    760c:	add	x3, x3, #0x0
    7610:	mov	w2, #0x202                 	// #514
    7614:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm16CallGraphSCCPass27getPotentialPassManagerTypeEv:

0000000000000000 <_ZNK4llvm16CallGraphSCCPass27getPotentialPassManagerTypeEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZN4llvm16CallGraphSCCPass14doFinalizationERNS_9CallGraphE:

0000000000000000 <_ZN4llvm16CallGraphSCCPass14doFinalizationERNS_9CallGraphE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_:

0000000000000000 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x2
  18:	mov	x22, x1
  1c:	mov	x20, x0
  20:	stp	x2, x1, [sp]
  24:	cbz	x1, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  28:	ldur	x8, [x22, #-24]
  2c:	cbz	x8, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  30:	ldrb	w9, [x8, #16]
  34:	cbnz	w9, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  38:	ldrb	w9, [x8, #33]
  3c:	tbz	w9, #5, 4c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x4c>
  40:	ldr	w0, [x8, #36]
  44:	bl	0 <_ZN4llvm9Intrinsic6isLeafEj>
  48:	tbnz	w0, #0, e0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xe0>
  4c:	ldp	x21, x8, [x20, #16]
  50:	cmp	x21, x8
  54:	b.eq	a8 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xa8>  // b.none
  58:	add	x8, x22, #0x10
  5c:	mov	w9, #0x6                   	// #6
  60:	cmp	x8, #0x10
  64:	stp	x9, xzr, [x21]
  68:	str	x22, [x21, #16]
  6c:	b.hi	8c <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x8c>  // b.pmore
  70:	mov	w9, #0x1                   	// #1
  74:	lsl	x8, x9, x8
  78:	mov	w9, #0x101                 	// #257
  7c:	movk	w9, #0x1, lsl #16
  80:	tst	x8, x9
  84:	mov	x8, x21
  88:	b.ne	98 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0x98>  // b.any
  8c:	mov	x0, x21
  90:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  94:	ldr	x8, [x20, #16]
  98:	add	x8, x8, #0x20
  9c:	str	x19, [x21, #24]
  a0:	str	x8, [x20, #16]
  a4:	b	c0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_+0xc0>
  a8:	add	x0, x20, #0x8
  ac:	add	x2, sp, #0x8
  b0:	mov	x3, sp
  b4:	mov	x1, x21
  b8:	bl	0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  bc:	ldr	x19, [sp]
  c0:	ldr	w8, [x19, #32]
  c4:	add	w8, w8, #0x1
  c8:	str	w8, [x19, #32]
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x29, x30, [sp, #16]
  d8:	add	sp, sp, #0x40
  dc:	ret
  e0:	adrp	x0, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e4:	adrp	x1, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  e8:	adrp	x3, 0 <_ZN4llvm13CallGraphNode17addCalledFunctionEPNS_8CallBaseEPS0_>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0xeb                  	// #235
  fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 34 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x34>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	sub	x8, x8, x20
  28:	lsr	x8, x8, #4
  2c:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
  30:	b	12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  3c:	ldr	w8, [x19, #20]
  40:	mov	x20, x0
  44:	tbnz	w8, #31, 114 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x114>
  48:	mov	x8, xzr
  4c:	sub	x8, x8, x20
  50:	lsr	x8, x8, #4
  54:	cbz	w8, 12c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x12c>
  58:	ldr	w8, [x19, #20]
  5c:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  60:	mov	x20, xzr
  64:	mov	x8, xzr
  68:	sub	x8, x8, x20
  6c:	lsr	x8, x8, #4
  70:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
  74:	b	158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 140 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x140>
  8c:	mov	x8, xzr
  90:	sub	x8, x8, x20
  94:	lsr	x8, x8, #4
  98:	cbz	w8, 158 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x158>
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  a4:	ldr	w8, [x19, #20]
  a8:	ldr	w21, [x0, #8]
  ac:	tbnz	w8, #31, c8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xc8>
  b0:	mov	x20, xzr
  b4:	mov	x8, xzr
  b8:	sub	x8, x8, x20
  bc:	lsr	x8, x8, #4
  c0:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
  c4:	b	190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d0:	ldr	w8, [x19, #20]
  d4:	mov	x20, x0
  d8:	tbnz	w8, #31, 178 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x178>
  dc:	mov	x8, xzr
  e0:	sub	x8, x8, x20
  e4:	lsr	x8, x8, #4
  e8:	cbz	w8, 190 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x190>
  ec:	mov	x0, x19
  f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f4:	add	x8, x0, x1
  f8:	ldur	w8, [x8, #-4]
  fc:	subs	w0, w8, w21
 100:	b.cc	1b0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x1b0>  // b.lo, b.ul, b.last
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 11c:	add	x8, x0, x1
 120:	sub	x8, x8, x20
 124:	lsr	x8, x8, #4
 128:	cbnz	w8, 58 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x58>
 12c:	mov	w0, wzr
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 148:	add	x8, x0, x1
 14c:	sub	x8, x8, x20
 150:	lsr	x8, x8, #4
 154:	cbnz	w8, 9c <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x9c>
 158:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 15c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 160:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x6ed                 	// #1773
 174:	bl	0 <__assert_fail>
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 180:	add	x8, x0, x1
 184:	sub	x8, x8, x20
 188:	lsr	x8, x8, #4
 18c:	cbnz	w8, ec <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xec>
 190:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 194:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 198:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x6f3                 	// #1779
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b4:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1b8:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x710                 	// #1808
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x26, x25, [x0]
  24:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  28:	sub	x8, x25, x26
  2c:	cmp	x8, x9
  30:	b.eq	254 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x254>  // b.none
  34:	asr	x9, x8, #5
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #58
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x26
  68:	mov	x23, x3
  6c:	mov	x24, x2
  70:	mov	x19, x0
  74:	mov	x22, x1
  78:	asr	x27, x8, #5
  7c:	str	x9, [sp, #8]
  80:	cbz	x9, 94 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x94>
  84:	lsl	x0, x9, #5
  88:	bl	0 <_Znwm>
  8c:	mov	x21, x0
  90:	b	98 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>
  94:	mov	x21, xzr
  98:	ldr	x9, [x24]
  9c:	add	x0, x21, x27, lsl #5
  a0:	mov	w8, #0x6                   	// #6
  a4:	stp	x8, xzr, [x0]
  a8:	add	x8, x9, #0x10
  ac:	cmp	x8, #0x10
  b0:	str	x9, [x0, #16]
  b4:	b.hi	d0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd0>  // b.pmore
  b8:	mov	w9, #0x1                   	// #1
  bc:	lsl	x8, x9, x8
  c0:	mov	w9, #0x101                 	// #257
  c4:	movk	w9, #0x1, lsl #16
  c8:	tst	x8, x9
  cc:	b.ne	d4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.any
  d0:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  d4:	ldr	x8, [x23]
  d8:	add	x9, x21, x27, lsl #5
  dc:	cmp	x26, x22
  e0:	mov	x23, x21
  e4:	str	x8, [x9, #24]
  e8:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
  ec:	mov	w28, #0x101                 	// #257
  f0:	mov	w24, #0x6                   	// #6
  f4:	mov	w27, #0x1                   	// #1
  f8:	movk	w28, #0x1, lsl #16
  fc:	mov	x23, x21
 100:	mov	x20, x26
 104:	b	130 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>
 108:	ldr	x8, [x20]
 10c:	mov	x0, x23
 110:	and	x1, x8, #0xfffffffffffffff8
 114:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 118:	ldr	x8, [x20, #24]
 11c:	add	x20, x20, #0x20
 120:	cmp	x22, x20
 124:	str	x8, [x23, #24]
 128:	add	x23, x23, #0x20
 12c:	b.eq	158 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x158>  // b.none
 130:	stp	x24, xzr, [x23]
 134:	ldr	x9, [x20, #16]
 138:	add	x8, x9, #0x10
 13c:	cmp	x8, #0x10
 140:	str	x9, [x23, #16]
 144:	b.hi	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>  // b.pmore
 148:	lsl	x8, x27, x8
 14c:	tst	x8, x28
 150:	b.ne	118 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>  // b.any
 154:	b	108 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>
 158:	cmp	x25, x22
 15c:	add	x23, x23, #0x20
 160:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 164:	mov	w28, #0x101                 	// #257
 168:	mov	w24, #0x6                   	// #6
 16c:	mov	w27, #0x1                   	// #1
 170:	movk	w28, #0x1, lsl #16
 174:	b	1a0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1a0>
 178:	ldr	x8, [x22]
 17c:	mov	x0, x23
 180:	and	x1, x8, #0xfffffffffffffff8
 184:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 188:	ldr	x8, [x22, #24]
 18c:	add	x22, x22, #0x20
 190:	cmp	x25, x22
 194:	str	x8, [x23, #24]
 198:	add	x23, x23, #0x20
 19c:	b.eq	1c8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1c8>  // b.none
 1a0:	stp	x24, xzr, [x23]
 1a4:	ldr	x9, [x22, #16]
 1a8:	add	x8, x9, #0x10
 1ac:	cmp	x8, #0x10
 1b0:	str	x9, [x23, #16]
 1b4:	b.hi	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>  // b.pmore
 1b8:	lsl	x8, x27, x8
 1bc:	tst	x8, x28
 1c0:	b.ne	188 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x188>  // b.any
 1c4:	b	178 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x178>
 1c8:	cmp	x26, x25
 1cc:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1d0:	mov	w24, #0x101                 	// #257
 1d4:	mov	w20, #0x1                   	// #1
 1d8:	movk	w24, #0x1, lsl #16
 1dc:	mov	x22, x26
 1e0:	b	1f8 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f8>
 1e4:	mov	x0, x22
 1e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1ec:	add	x22, x22, #0x20
 1f0:	cmp	x25, x22
 1f4:	b.eq	218 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x218>  // b.none
 1f8:	ldr	x8, [x22, #16]
 1fc:	add	x8, x8, #0x10
 200:	cmp	x8, #0x10
 204:	b.hi	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>  // b.pmore
 208:	lsl	x8, x20, x8
 20c:	tst	x8, x24
 210:	b.ne	1ec <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1ec>  // b.any
 214:	b	1e4 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e4>
 218:	cbz	x26, 224 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x224>
 21c:	mov	x0, x26
 220:	bl	0 <_ZdlPv>
 224:	stp	x21, x23, [x19]
 228:	ldr	x8, [sp, #8]
 22c:	add	x8, x21, x8, lsl #5
 230:	str	x8, [x19, #16]
 234:	ldp	x20, x19, [sp, #96]
 238:	ldp	x22, x21, [sp, #80]
 23c:	ldp	x24, x23, [sp, #64]
 240:	ldp	x26, x25, [sp, #48]
 244:	ldp	x28, x27, [sp, #32]
 248:	ldp	x29, x30, [sp, #16]
 24c:	add	sp, sp, #0x70
 250:	ret
 254:	adrp	x0, 0 <_ZNSt6vectorISt4pairIN4llvm14WeakTrackingVHEPNS1_13CallGraphNodeEESaIS5_EE17_M_realloc_insertIJRPNS1_8CallBaseERS4_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 258:	add	x0, x0, #0x0
 25c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x23, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x25, x24, #3
  28:	mov	x20, x1
  2c:	sub	x8, x8, x23
  30:	mov	x19, x0
  34:	cmp	x25, x8, asr #3
  38:	b.ls	7c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.plast
  3c:	lsr	x8, x25, #60
  40:	cbnz	x8, 11c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x11c>
  44:	cbz	x24, 10c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>
  48:	mov	x0, x24
  4c:	bl	0 <_Znwm>
  50:	mov	x1, x20
  54:	mov	x2, x24
  58:	mov	x21, x0
  5c:	bl	0 <memcpy>
  60:	ldr	x0, [x19]
  64:	cbz	x0, 6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
  68:	bl	0 <_ZdlPv>
  6c:	add	x8, x21, x25, lsl #3
  70:	stp	x21, x8, [x19]
  74:	str	x8, [x19, #16]
  78:	b	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>
  7c:	ldr	x21, [x19, #8]
  80:	mov	x22, x2
  84:	sub	x2, x21, x23
  88:	asr	x8, x2, #3
  8c:	cmp	x8, x25
  90:	b.cs	cc <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.hs, b.nlast
  94:	add	x24, x20, x8, lsl #3
  98:	cbz	x2, ac <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xac>
  9c:	mov	x0, x23
  a0:	mov	x1, x20
  a4:	bl	0 <memmove>
  a8:	ldr	x21, [x19, #8]
  ac:	subs	x2, x22, x24
  b0:	asr	x20, x2, #3
  b4:	b.eq	c4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xc4>  // b.none
  b8:	mov	x0, x21
  bc:	mov	x1, x24
  c0:	bl	0 <memmove>
  c4:	add	x8, x21, x20, lsl #3
  c8:	b	f0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf0>
  cc:	cbz	x24, e4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xe4>
  d0:	mov	x0, x23
  d4:	mov	x1, x20
  d8:	mov	x2, x24
  dc:	bl	0 <memmove>
  e0:	ldr	x21, [x19, #8]
  e4:	add	x8, x23, x25, lsl #3
  e8:	cmp	x21, x8
  ec:	b.eq	f4 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.none
  f0:	str	x8, [x19, #8]
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	mov	x21, xzr
 110:	ldr	x0, [x19]
 114:	cbnz	x0, 68 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
 118:	b	6c <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
 11c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm13CallGraphNodeESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_:

0000000000000000 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 80 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x80>
   c:	ldrb	w8, [x0, #16]
  10:	cmp	w8, #0x18
  14:	b.cs	24 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x24>  // b.hs, b.nlast
  18:	mov	x0, xzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	cmp	w8, #0x1d
  28:	b.eq	6c <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x6c>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	54 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x54>  // b.none
  34:	cmp	w8, #0x50
  38:	b.ne	18 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0x18>  // b.any
  3c:	tst	x0, #0x7
  40:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  44:	and	x8, x0, #0xfffffffffffffff9
  48:	orr	x0, x8, #0x2
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	tst	x0, #0x7
  58:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  5c:	and	x8, x0, #0xfffffffffffffff9
  60:	orr	x0, x8, #0x4
  64:	ldp	x29, x30, [sp], #16
  68:	ret
  6c:	tst	x0, #0x7
  70:	b.ne	a0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_+0xa0>  // b.any
  74:	and	x0, x0, #0xfffffffffffffff9
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  84:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  88:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x69                  	// #105
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a4:	adrp	x1, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  a8:	adrp	x3, 0 <_ZN4llvm12CallSiteBaseINS_8FunctionENS_10BasicBlockENS_5ValueENS_4UserENS_3UseENS_11InstructionENS_8CallInstENS_10InvokeInstENS_10CallBrInstEPS5_E3getEPS3_>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0xb3                  	// #179
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	x10, x9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x8
  18:	cmp	x9, x10
  1c:	b.eq	88 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x88>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  28:	ldp	x9, x8, [x19, #8]
  2c:	mov	w10, #0x18                  	// #24
  30:	cmp	x8, x9
  34:	mov	w9, #0x1c                  	// #28
  38:	csel	x9, x9, x10, eq  // eq = none
  3c:	ldr	w9, [x19, x9]
  40:	add	x8, x8, x9, lsl #3
  44:	cmp	x8, x0
  48:	b.cc	11c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x11c>  // b.lo, b.ul, b.last
  4c:	b.eq	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.none
  50:	ldr	x9, [x0]
  54:	cmn	x9, #0x2
  58:	b.cc	6c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x6c>  // b.lo, b.ul, b.last
  5c:	add	x0, x0, #0x8
  60:	cmp	x8, x0
  64:	b.ne	50 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x50>  // b.any
  68:	mov	x0, x8
  6c:	ldr	x9, [x19]
  70:	stp	x0, x8, [x20]
  74:	strb	w1, [x20, #32]
  78:	stp	x19, x9, [x20, #16]
  7c:	ldp	x20, x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret
  88:	ldr	w8, [x19, #28]
  8c:	cbz	w8, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  90:	mov	x0, xzr
  94:	lsl	x10, x8, #3
  98:	mov	x11, x9
  9c:	ldr	x12, [x11]
  a0:	cmp	x12, x1
  a4:	b.eq	110 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x110>  // b.none
  a8:	cmn	x12, #0x2
  ac:	csel	x0, x11, x0, eq  // eq = none
  b0:	subs	x10, x10, #0x8
  b4:	add	x11, x11, #0x8
  b8:	b.ne	9c <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x9c>  // b.any
  bc:	cbz	x0, dc <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0xdc>
  c0:	str	x1, [x0]
  c4:	ldr	w8, [x19, #32]
  c8:	ldr	x9, [x19]
  cc:	sub	w8, w8, #0x1
  d0:	add	x9, x9, #0x1
  d4:	str	w8, [x19, #32]
  d8:	b	104 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x104>
  dc:	ldr	w10, [x19, #24]
  e0:	cmp	w8, w10
  e4:	b.cs	20 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x20>  // b.hs, b.nlast
  e8:	add	w10, w8, #0x1
  ec:	lsl	x8, x8, #3
  f0:	str	w10, [x19, #28]
  f4:	str	x1, [x9, x8]
  f8:	ldp	x9, x10, [x19]
  fc:	add	x9, x9, #0x1
 100:	add	x0, x10, x8
 104:	str	x9, [x19]
 108:	mov	w1, #0x1                   	// #1
 10c:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 110:	mov	w1, wzr
 114:	mov	x0, x11
 118:	b	28 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_+0x28>
 11c:	adrp	x0, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 124:	adrp	x3, 0 <_ZN4llvm15SmallPtrSetImplIPNS_10BasicBlockEE6insertES2_>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0xf8                  	// #248
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x1, #8]
  18:	and	w9, w8, #0xff
  1c:	cmp	w9, #0x10
  20:	b.hi	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.pmore
  24:	mov	w10, #0x1                   	// #1
  28:	lsl	w9, w10, w9
  2c:	mov	w10, #0x8a7e                	// #35454
  30:	mov	x20, x1
  34:	mov	x19, x0
  38:	tst	w9, w10
  3c:	b.eq	7c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x7c>  // b.none
  40:	and	w9, w8, #0xff
  44:	sub	w9, w9, #0x1
  48:	cmp	w9, #0xf
  4c:	b.hi	b0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xb0>  // b.pmore
  50:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  54:	add	x10, x10, #0x0
  58:	adr	x11, 70 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x70>
  5c:	ldrb	w12, [x10, x9]
  60:	add	x11, x11, x12, lsl #2
  64:	mov	x1, xzr
  68:	mov	w0, #0x10                  	// #16
  6c:	br	x11
  70:	mov	x1, xzr
  74:	mov	w0, #0x40                  	// #64
  78:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  7c:	mov	w8, #0x6000                	// #24576
  80:	movk	w8, #0x1, lsl #16
  84:	tst	w9, w8
  88:	b.eq	1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>  // b.none
  8c:	mov	x0, x20
  90:	mov	x1, xzr
  94:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  98:	tbz	w0, #0, 1dc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1dc>
  9c:	ldr	w8, [x20, #8]
  a0:	and	w9, w8, #0xff
  a4:	sub	w9, w9, #0x1
  a8:	cmp	w9, #0xf
  ac:	b.ls	50 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x50>  // b.plast
  b0:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b4:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	mov	w2, #0x298                 	// #664
  c4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  c8:	mov	x1, xzr
  cc:	mov	w0, #0x80                  	// #128
  d0:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
  d4:	and	w9, w8, #0xff
  d8:	cmp	w9, #0xf
  dc:	b.ne	1fc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1fc>  // b.any
  e0:	lsr	w1, w8, #8
  e4:	mov	x0, x19
  e8:	b	144 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x144>
  ec:	ldr	x21, [x20, #32]
  f0:	lsr	x8, x21, #32
  f4:	cbnz	x8, 21c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x21c>
  f8:	ldr	x1, [x20, #24]
  fc:	ldrb	w22, [x20, #40]
 100:	mov	x0, x19
 104:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 108:	tst	w1, #0xff
 10c:	b.ne	23c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x23c>  // b.any
 110:	and	x8, x21, #0x100000000
 114:	orr	x8, x8, x22, lsl #32
 118:	mul	x0, x0, x21
 11c:	lsr	x1, x8, #32
 120:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 124:	mov	x0, x19
 128:	mov	x1, x20
 12c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 130:	ldr	x8, [x0]
 134:	mov	x1, xzr
 138:	b	1c4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c4>
 13c:	mov	x0, x19
 140:	mov	w1, wzr
 144:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 148:	mov	x1, xzr
 14c:	lsl	w0, w0, #3
 150:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 154:	mov	x1, xzr
 158:	mov	w0, #0x20                  	// #32
 15c:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 160:	mov	x1, xzr
 164:	mov	w0, #0x50                  	// #80
 168:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 16c:	mov	x1, xzr
 170:	lsr	w0, w8, #8
 174:	b	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>
 178:	ldp	x22, x23, [x20, #24]
 17c:	mov	x0, x19
 180:	mov	x1, x22
 184:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 188:	mov	x20, x0
 18c:	mov	x21, x1
 190:	mov	x0, x19
 194:	mov	x1, x22
 198:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 19c:	cbz	w0, 25c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x25c>
 1a0:	mov	w8, w0
 1a4:	add	x9, x20, #0x7
 1a8:	add	x9, x8, x9, lsr #3
 1ac:	sub	x9, x9, #0x1
 1b0:	udiv	x9, x9, x8
 1b4:	tst	w21, #0xff
 1b8:	mul	x8, x9, x8
 1bc:	cset	w1, ne  // ne = any
 1c0:	mul	x8, x23, x8
 1c4:	lsl	x0, x8, #3
 1c8:	ldp	x20, x19, [sp, #48]
 1cc:	ldp	x22, x21, [sp, #32]
 1d0:	ldr	x23, [sp, #16]
 1d4:	ldp	x29, x30, [sp], #64
 1d8:	ret
 1dc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1e8:	add	x0, x0, #0x0
 1ec:	add	x1, x1, #0x0
 1f0:	add	x3, x3, #0x0
 1f4:	mov	w2, #0x271                 	// #625
 1f8:	bl	0 <__assert_fail>
 1fc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 200:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 204:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 208:	add	x0, x0, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x108                 	// #264
 218:	bl	0 <__assert_fail>
 21c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 220:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 224:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 228:	add	x0, x0, #0x0
 22c:	add	x1, x1, #0x0
 230:	add	x3, x3, #0x0
 234:	mov	w2, #0x220                 	// #544
 238:	bl	0 <__assert_fail>
 23c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 240:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 244:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 248:	add	x0, x0, #0x0
 24c:	add	x1, x1, #0x0
 250:	add	x3, x3, #0x0
 254:	mov	w2, #0x7d                  	// #125
 258:	bl	0 <__assert_fail>
 25c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 260:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 264:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 268:	add	x0, x0, #0x0
 26c:	add	x1, x1, #0x0
 270:	add	x3, x3, #0x0
 274:	mov	w2, #0xc7                  	// #199
 278:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE:

0000000000000000 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #40]
  10:	add	x9, x1, #0x18
  14:	add	x10, x8, #0x28
  18:	cmp	x9, x10
  1c:	stp	x8, x9, [x0, #8]
  20:	b.eq	a0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0xa0>  // b.none
  24:	ldr	x1, [x1, #48]
  28:	mov	x19, x0
  2c:	str	x1, [x29, #24]
  30:	cbz	x1, 40 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x40>
  34:	add	x0, x29, #0x18
  38:	mov	w2, #0x2                   	// #2
  3c:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  40:	add	x8, x29, #0x18
  44:	cmp	x19, x8
  48:	b.eq	84 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x84>  // b.none
  4c:	ldr	x1, [x19]
  50:	cbz	x1, 5c <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x5c>
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  5c:	ldr	x1, [x29, #24]
  60:	str	x1, [x19]
  64:	cbz	x1, 88 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x88>
  68:	add	x0, x29, #0x18
  6c:	mov	x2, x19
  70:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  74:	str	xzr, [x29, #24]
  78:	ldr	x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	ldr	x1, [x29, #24]
  88:	cbz	x1, 78 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE+0x78>
  8c:	add	x0, x29, #0x18
  90:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	adrp	x0, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a4:	adrp	x1, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  a8:	adrp	x3, 0 <_ZN4llvm13IRBuilderBase14SetInsertPointEPNS_11InstructionE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x8e                  	// #142
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10AllocaInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8CastInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape12getIndexTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape12getIndexTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 44 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x44>
  10:	ldr	x8, [x0, #176]
  14:	cbz	x8, 64 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x64>
  18:	ldr	w9, [x8, #12]
  1c:	cmp	w9, #0x3
  20:	b.ls	84 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0x84>  // b.plast
  24:	ldr	x8, [x8, #16]
  28:	ldr	x0, [x8, #24]
  2c:	cbz	x0, a4 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0xa4>
  30:	ldrb	w8, [x0, #8]
  34:	cmp	w8, #0xb
  38:	b.ne	c4 <_ZNK4llvm4coro5Shape12getIndexTypeEv+0xc4>  // b.any
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  48:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  4c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x91                  	// #145
  60:	bl	0 <__assert_fail>
  64:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  68:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  6c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x92                  	// #146
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  88:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  8c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x160                 	// #352
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  a8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  ac:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  c8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  cc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape12getIndexTypeEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE:

0000000000000000 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	ldr	w9, [x0, #56]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	and	w10, w8, #0xfffffff
  24:	cmp	w10, w9
  28:	mov	x21, x1
  2c:	b.ne	3c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x3c>  // b.any
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm7PHINode12growOperandsEv>
  38:	ldr	w8, [x20, #20]
  3c:	tbz	w8, #30, 180 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x180>
  40:	and	w9, w8, #0xfffffff
  44:	mov	w10, #0xfffffff             	// #268435455
  48:	cmp	w9, w10
  4c:	b.eq	1a0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x1a0>  // b.none
  50:	add	w9, w9, #0x1
  54:	and	w8, w8, #0xf0000000
  58:	orr	w8, w9, w8
  5c:	str	w8, [x20, #20]
  60:	cbz	x21, 1c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x1c0>
  64:	ldr	x8, [x20]
  68:	ldr	x10, [x21]
  6c:	cmp	x8, x10
  70:	b.ne	1e0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x1e0>  // b.any
  74:	and	w8, w9, #0xfffffff
  78:	cbz	w8, 200 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x200>
  7c:	ldur	x9, [x20, #-8]
  80:	sub	w10, w8, #0x1
  84:	mov	w8, #0x18                  	// #24
  88:	umaddl	x8, w10, w8, x9
  8c:	ldr	x11, [x8]
  90:	cbz	x11, c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xc0>
  94:	mov	w11, #0x18                  	// #24
  98:	madd	x12, x10, x11, x9
  9c:	ldp	x13, x11, [x12, #8]
  a0:	and	x11, x11, #0xfffffffffffffffc
  a4:	str	x13, [x11]
  a8:	ldr	x12, [x12, #8]
  ac:	cbz	x12, c0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xc0>
  b0:	ldr	x13, [x12, #16]
  b4:	and	x13, x13, #0x3
  b8:	orr	x11, x13, x11
  bc:	str	x11, [x12, #16]
  c0:	str	x21, [x8]
  c4:	ldr	x11, [x21, #8]!
  c8:	mov	w12, #0x18                  	// #24
  cc:	madd	x12, x10, x12, x9
  d0:	str	x11, [x12, #8]!
  d4:	cbz	x11, f0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0xf0>
  d8:	tst	x12, #0x3
  dc:	b.ne	160 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x160>  // b.any
  e0:	ldr	x13, [x11, #16]
  e4:	and	x13, x13, #0x3
  e8:	orr	x12, x13, x12
  ec:	str	x12, [x11, #16]
  f0:	tst	x21, #0x3
  f4:	b.ne	160 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x160>  // b.any
  f8:	mov	w11, #0x18                  	// #24
  fc:	madd	x9, x10, x11, x9
 100:	ldr	x10, [x9, #16]!
 104:	and	x10, x10, #0x3
 108:	orr	x10, x10, x21
 10c:	str	x10, [x9]
 110:	str	x8, [x21]
 114:	cbz	x19, 220 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x220>
 118:	ldr	w10, [x20, #20]
 11c:	and	x9, x10, #0xfffffff
 120:	sub	w8, w9, #0x1
 124:	tbnz	w10, #30, 138 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x138>
 128:	mov	w10, #0x18                  	// #24
 12c:	mneg	x9, x9, x10
 130:	add	x9, x20, x9
 134:	b	13c <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE+0x13c>
 138:	ldur	x9, [x20, #-8]
 13c:	ldr	w10, [x20, #56]
 140:	mov	w11, #0x18                  	// #24
 144:	ldr	x21, [sp, #16]
 148:	madd	x9, x10, x11, x9
 14c:	add	x8, x9, w8, uxtw #3
 150:	str	x19, [x8, #8]
 154:	ldp	x20, x19, [sp, #32]
 158:	ldp	x29, x30, [sp], #48
 15c:	ret
 160:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 164:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 168:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0xb3                  	// #179
 17c:	bl	0 <__assert_fail>
 180:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 184:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 188:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 18c:	add	x0, x0, #0x0
 190:	add	x1, x1, #0x0
 194:	add	x3, x3, #0x0
 198:	mov	w2, #0xd8                  	// #216
 19c:	bl	0 <__assert_fail>
 1a0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1a4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1a8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0xd9                  	// #217
 1bc:	bl	0 <__assert_fail>
 1c0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1c4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1c8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1cc:	add	x0, x0, #0x0
 1d0:	add	x1, x1, #0x0
 1d4:	add	x3, x3, #0x0
 1d8:	mov	w2, #0xa5e                 	// #2654
 1dc:	bl	0 <__assert_fail>
 1e0:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1e4:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1e8:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 1ec:	add	x0, x0, #0x0
 1f0:	add	x1, x1, #0x0
 1f4:	add	x3, x3, #0x0
 1f8:	mov	w2, #0xa60                 	// #2656
 1fc:	bl	0 <__assert_fail>
 200:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 204:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 208:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 20c:	add	x0, x0, #0x0
 210:	add	x1, x1, #0x0
 214:	add	x3, x3, #0x0
 218:	mov	w2, #0xadf                 	// #2783
 21c:	bl	0 <__assert_fail>
 220:	adrp	x0, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 224:	adrp	x1, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 228:	adrp	x3, 0 <_ZN4llvm7PHINode11addIncomingEPNS_5ValueEPNS_10BasicBlockE>
 22c:	add	x0, x0, #0x0
 230:	add	x1, x1, #0x0
 234:	add	x3, x3, #0x0
 238:	mov	w2, #0xa82                 	// #2690
 23c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x24, x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	mov	x21, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x5
  24:	mov	w23, w4
  28:	mov	w24, w3
  2c:	mov	x20, x2
  30:	mov	x22, x1
  34:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  38:	mov	w1, w24
  3c:	mov	w2, wzr
  40:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  44:	stur	x0, [x29, #-16]
  48:	ldr	x0, [x21, #24]
  4c:	bl	0 <_ZN4llvm4Type10getInt32TyERNS_11LLVMContextE>
  50:	mov	w1, w23
  54:	mov	w2, wzr
  58:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_11IntegerTypeEmb>
  5c:	stur	x0, [x29, #-8]
  60:	cbz	x20, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xf0>
  64:	ldrb	w8, [x20, #16]
  68:	cmp	w8, #0x10
  6c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xb8>  // b.plast
  70:	mov	w8, #0x101                 	// #257
  74:	sub	x2, x29, #0x10
  78:	add	x4, sp, #0x8
  7c:	mov	w3, #0x2                   	// #2
  80:	mov	x0, x22
  84:	mov	x1, x20
  88:	mov	x5, xzr
  8c:	stp	xzr, xzr, [sp, #8]
  90:	strh	w8, [sp, #24]
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  98:	mov	w1, #0x1                   	// #1
  9c:	mov	x20, x0
  a0:	bl	0 <_ZN4llvm17GetElementPtrInst13setIsInBoundsEb>
  a4:	mov	x0, x21
  a8:	mov	x1, x20
  ac:	mov	x2, x19
  b0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  b4:	b	d8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE+0xd8>
  b8:	sub	x2, x29, #0x10
  bc:	mov	w3, #0x2                   	// #2
  c0:	mov	w4, #0x1                   	// #1
  c4:	mov	x0, x22
  c8:	mov	x1, x20
  cc:	mov	x5, xzr
  d0:	mov	x6, xzr
  d4:	bl	0 <_ZN4llvm12ConstantExpr16getGetElementPtrEPNS_4TypeEPNS_8ConstantENS_8ArrayRefIPNS_5ValueEEEbNS_8OptionalIjEES2_>
  d8:	ldp	x20, x19, [sp, #96]
  dc:	ldp	x22, x21, [sp, #80]
  e0:	ldp	x24, x23, [sp, #64]
  e4:	ldp	x29, x30, [sp, #48]
  e8:	add	sp, sp, #0x70
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  f8:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE26CreateConstInBoundsGEP2_32EPNS_4TypeEPNS_5ValueEjjRKNS_5TwineE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x69                  	// #105
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17GetElementPtrInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x1]
  1c:	mov	x19, x5
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	ldrb	w9, [x8, #8]
  2c:	mov	x22, x2
  30:	mov	x23, x1
  34:	mov	x24, x0
  38:	cmp	w9, #0x10
  3c:	b.ne	48 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x48>  // b.any
  40:	ldr	x8, [x8, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, dc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xdc>
  4c:	ldrb	w9, [x8, #8]
  50:	cmp	w9, #0xf
  54:	b.ne	fc <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0xfc>  // b.any
  58:	ldr	x8, [x8, #24]
  5c:	cbz	x24, 88 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x88>
  60:	cmp	x8, x24
  64:	b.eq	8c <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE+0x8c>  // b.none
  68:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  6c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  70:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x3a1                 	// #929
  84:	bl	0 <__assert_fail>
  88:	mov	x24, x8
  8c:	add	w25, w21, #0x1
  90:	mov	w0, #0x48                  	// #72
  94:	mov	w1, w25
  98:	bl	0 <_ZN4llvm4UsernwEmj>
  9c:	mov	x1, x24
  a0:	mov	x2, x23
  a4:	mov	x3, x22
  a8:	mov	x4, x21
  ac:	mov	w5, w25
  b0:	mov	x6, x20
  b4:	mov	x7, x19
  b8:	mov	x26, x0
  bc:	bl	0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  c0:	mov	x0, x26
  c4:	ldp	x20, x19, [sp, #64]
  c8:	ldp	x22, x21, [sp, #48]
  cc:	ldp	x24, x23, [sp, #32]
  d0:	ldp	x26, x25, [sp, #16]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 100:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 104:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst6CreateEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EERKNS_5TwineEPNS_11InstructionE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x21, x3
  1c:	mov	x22, x2
  20:	mov	x26, x1
  24:	mov	x23, x0
  28:	mov	x0, x1
  2c:	mov	x1, x2
  30:	mov	x2, x3
  34:	mov	x3, x4
  38:	mov	x24, x7
  3c:	mov	x19, x6
  40:	mov	w25, w5
  44:	mov	x20, x4
  48:	bl	0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  4c:	mov	w8, w25
  50:	mov	w9, #0x18                  	// #24
  54:	mneg	x8, x8, x9
  58:	mov	x1, x0
  5c:	add	x3, x23, x8
  60:	mov	w2, #0x22                  	// #34
  64:	mov	x0, x23
  68:	mov	w4, w25
  6c:	mov	x5, x24
  70:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  74:	mov	x0, x26
  78:	mov	x1, x21
  7c:	mov	x2, x20
  80:	str	x26, [x23, #56]
  84:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  88:	ldr	x8, [x23]
  8c:	str	x0, [x23, #64]
  90:	ldrb	w9, [x8, #8]
  94:	cmp	w9, #0x10
  98:	b.ne	a4 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xa4>  // b.any
  9c:	ldr	x8, [x8, #16]
  a0:	ldr	x8, [x8]
  a4:	cbz	x8, ec <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0xec>
  a8:	ldrb	w9, [x8, #8]
  ac:	cmp	w9, #0xf
  b0:	b.ne	10c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x10c>  // b.any
  b4:	ldr	x8, [x8, #24]
  b8:	cmp	x0, x8
  bc:	b.ne	12c <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE+0x12c>  // b.any
  c0:	mov	x0, x23
  c4:	mov	x1, x22
  c8:	mov	x2, x21
  cc:	mov	x3, x20
  d0:	mov	x4, x19
  d4:	ldp	x20, x19, [sp, #64]
  d8:	ldp	x22, x21, [sp, #48]
  dc:	ldp	x24, x23, [sp, #32]
  e0:	ldp	x26, x25, [sp, #16]
  e4:	ldp	x29, x30, [sp], #80
  e8:	b	0 <_ZN4llvm17GetElementPtrInst4initEPNS_5ValueENS_8ArrayRefIS2_EERKNS_5TwineE>
  ec:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f0:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f4:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x69                  	// #105
 108:	bl	0 <__assert_fail>
 10c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 110:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 114:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x108                 	// #264
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 130:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 134:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInstC2EPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EEjRKNS_5TwineEPNS_11InstructionE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x46a                 	// #1130
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE:

0000000000000000 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x2
  14:	mov	x21, x1
  18:	mov	x1, x2
  1c:	mov	x2, x3
  20:	mov	x20, x3
  24:	bl	0 <_ZN4llvm17GetElementPtrInst14getIndexedTypeEPNS_4TypeENS_8ArrayRefIPNS_5ValueEEE>
  28:	cbz	x0, d8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xd8>
  2c:	ldr	x9, [x21]
  30:	ldr	w8, [x9, #8]
  34:	and	w10, w8, #0xff
  38:	cmp	w10, #0x10
  3c:	b.ne	50 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x50>  // b.any
  40:	ldr	x8, [x9, #16]
  44:	ldr	x8, [x8]
  48:	cbz	x8, 138 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x138>
  4c:	ldr	w8, [x8, #8]
  50:	and	w9, w8, #0xff
  54:	cmp	w9, #0xf
  58:	b.ne	f8 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xf8>  // b.any
  5c:	lsr	w1, w8, #8
  60:	bl	0 <_ZN4llvm11PointerType3getEPNS_4TypeEj>
  64:	ldr	x8, [x21]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0x10
  70:	b.ne	8c <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x8c>  // b.any
  74:	cbz	x8, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  78:	ldr	w1, [x8, #32]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  8c:	cbz	x20, b0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xb0>
  90:	lsl	x8, x20, #3
  94:	ldr	x9, [x19], #8
  98:	ldr	x9, [x9]
  9c:	ldrb	w10, [x9, #8]
  a0:	cmp	w10, #0x10
  a4:	b.eq	c0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0xc0>  // b.none
  a8:	subs	x8, x8, #0x8
  ac:	b.ne	94 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x94>  // b.any
  b0:	ldp	x20, x19, [sp, #32]
  b4:	ldr	x21, [sp, #16]
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret
  c0:	cbz	x9, 118 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE+0x118>
  c4:	ldr	w1, [x9, #32]
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldr	x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  d8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  dc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e0:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x375                 	// #885
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
  fc:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 100:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x108                 	// #264
 114:	bl	0 <__assert_fail>
 118:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 11c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 120:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 124:	add	x0, x0, #0x0
 128:	add	x1, x1, #0x0
 12c:	add	x3, x3, #0x0
 130:	mov	w2, #0x69                  	// #105
 134:	bl	0 <__assert_fail>
 138:	adrp	x0, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 13c:	adrp	x1, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 140:	adrp	x3, 0 <_ZN4llvm17GetElementPtrInst16getGEPReturnTypeEPNS_4TypeEPNS_5ValueENS_8ArrayRefIS4_EE>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x69                  	// #105
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8LoadInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SwitchInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_9StoreInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15UnreachableInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #48]
   8:	str	x23, [sp, #64]
   c:	stp	x22, x21, [sp, #80]
  10:	stp	x20, x19, [sp, #96]
  14:	add	x29, sp, #0x30
  18:	ldr	w8, [x0, #24]
  1c:	str	xzr, [x0, #16]
  20:	sub	w9, w8, #0x1
  24:	tst	w8, w9
  28:	b.ne	128 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x128>  // b.any
  2c:	adrp	x11, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
  30:	ldr	x11, [x11]
  34:	mov	w9, #0x2                   	// #2
  38:	mov	x10, #0xfffffffffffffff8    	// #-8
  3c:	stp	xzr, x10, [sp, #24]
  40:	add	x19, x11, #0x10
  44:	stp	x19, x9, [sp, #8]
  48:	str	xzr, [sp, #40]
  4c:	cbz	w8, 110 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x110>
  50:	ldr	x10, [x0, #8]
  54:	lsl	x11, x8, #6
  58:	mov	w23, #0x101                 	// #257
  5c:	mov	x8, #0xfffffffffffffff8    	// #-8
  60:	mov	w9, #0x2                   	// #2
  64:	mov	w20, #0x1                   	// #1
  68:	sub	x21, x11, #0x40
  6c:	add	x22, x10, #0x10
  70:	movk	w23, #0x1, lsl #16
  74:	and	x10, x9, #0x6
  78:	mov	x0, x22
  7c:	add	x9, x8, #0x10
  80:	str	x10, [x0, #-8]!
  84:	cmp	x9, #0x10
  88:	stp	xzr, x8, [x22]
  8c:	b.hi	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xc0>  // b.pmore
  90:	lsl	x8, x20, x9
  94:	tst	x8, x23
  98:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xc0>  // b.none
  9c:	stur	x19, [x22, #-16]
  a0:	ldr	x8, [sp, #40]
  a4:	str	x8, [x22, #16]
  a8:	cbz	x21, dc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xdc>
  ac:	ldr	x9, [sp, #16]
  b0:	ldr	x8, [sp, #32]
  b4:	sub	x21, x21, #0x40
  b8:	add	x22, x22, #0x40
  bc:	b	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x74>
  c0:	ldr	x8, [sp, #16]
  c4:	and	x1, x8, #0xfffffffffffffff8
  c8:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  cc:	stur	x19, [x22, #-16]
  d0:	ldr	x8, [sp, #40]
  d4:	str	x8, [x22, #16]
  d8:	cbnz	x21, ac <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0xac>
  dc:	ldr	x8, [sp, #32]
  e0:	add	x8, x8, #0x10
  e4:	cmp	x8, #0x10
  e8:	b.hi	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x104>  // b.pmore
  ec:	mov	w9, #0x1                   	// #1
  f0:	lsl	x8, x9, x8
  f4:	mov	w9, #0x101                 	// #257
  f8:	movk	w9, #0x1, lsl #16
  fc:	tst	x8, x9
 100:	b.ne	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv+0x110>  // b.any
 104:	add	x8, sp, #0x8
 108:	add	x0, x8, #0x8
 10c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 110:	ldp	x20, x19, [sp, #96]
 114:	ldp	x22, x21, [sp, #80]
 118:	ldr	x23, [sp, #64]
 11c:	ldp	x29, x30, [sp, #48]
 120:	add	sp, sp, #0x70
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 12c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 130:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E9initEmptyEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x15c                 	// #348
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv:

0000000000000000 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x20, x19, [sp, #64]
   c:	add	x29, sp, #0x30
  10:	ldr	x8, [x0, #8]
  14:	mov	x20, x0
  18:	and	x9, x8, #0x6
  1c:	stp	x9, xzr, [sp, #16]
  20:	ldr	x10, [x0, #24]
  24:	add	x9, sp, #0x8
  28:	add	x19, x9, #0x8
  2c:	add	x9, x10, #0x10
  30:	cmp	x9, #0x10
  34:	str	x10, [sp, #32]
  38:	b.hi	54 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0x54>  // b.pmore
  3c:	mov	w10, #0x1                   	// #1
  40:	lsl	x9, x10, x9
  44:	mov	w10, #0x101                 	// #257
  48:	movk	w10, #0x1, lsl #16
  4c:	tst	x9, x10
  50:	b.ne	60 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0x60>  // b.any
  54:	and	x1, x8, #0xfffffffffffffff8
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  60:	adrp	x8, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>
  64:	ldr	x8, [x8]
  68:	add	x1, sp, #0x8
  6c:	add	x8, x8, #0x10
  70:	str	x8, [sp, #8]
  74:	ldr	x0, [x20, #32]
  78:	str	x0, [sp, #40]
  7c:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv>
  80:	ldr	x8, [sp, #32]
  84:	add	x8, x8, #0x10
  88:	cmp	x8, #0x10
  8c:	b.hi	b8 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0xb8>  // b.pmore
  90:	mov	w9, #0x1                   	// #1
  94:	lsl	x8, x9, x8
  98:	mov	w9, #0x101                 	// #257
  9c:	movk	w9, #0x1, lsl #16
  a0:	tst	x8, x9
  a4:	b.eq	b8 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE7deletedEv+0xb8>  // b.none
  a8:	ldp	x20, x19, [sp, #64]
  ac:	ldp	x29, x30, [sp, #48]
  b0:	add	sp, sp, #0x50
  b4:	ret
  b8:	mov	x0, x19
  bc:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  c0:	ldp	x20, x19, [sp, #64]
  c4:	ldp	x29, x30, [sp, #48]
  c8:	add	sp, sp, #0x50
  cc:	ret

Disassembly of section .text._ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_:

0000000000000000 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>:
   0:	sub	sp, sp, #0xf0
   4:	stp	x29, x30, [sp, #176]
   8:	stp	x24, x23, [sp, #192]
   c:	stp	x22, x21, [sp, #208]
  10:	stp	x20, x19, [sp, #224]
  14:	add	x29, sp, #0xb0
  18:	cbz	x1, 2cc <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x2cc>
  1c:	ldr	x8, [x0, #8]
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	and	x9, x8, #0x6
  2c:	stp	x9, xzr, [x29, #-32]
  30:	ldr	x10, [x0, #24]
  34:	sub	x9, x29, #0x28
  38:	add	x19, x9, #0x8
  3c:	add	x9, x10, #0x10
  40:	cmp	x9, #0x10
  44:	stur	x10, [x29, #-16]
  48:	b.hi	64 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x64>  // b.pmore
  4c:	mov	w10, #0x1                   	// #1
  50:	lsl	x9, x10, x9
  54:	mov	w10, #0x101                 	// #257
  58:	movk	w10, #0x1, lsl #16
  5c:	tst	x9, x10
  60:	b.ne	70 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x70>  // b.any
  64:	and	x1, x8, #0xfffffffffffffff8
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  70:	adrp	x8, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
  74:	ldr	x8, [x8]
  78:	add	x8, x8, #0x10
  7c:	stur	x8, [x29, #-40]
  80:	ldr	x21, [x21, #32]
  84:	stur	x21, [x29, #-8]
  88:	ldr	w8, [x21, #24]
  8c:	ldr	x9, [x21, #8]
  90:	cbz	w8, 10c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x10c>
  94:	ldur	x10, [x29, #-16]
  98:	orr	x11, x10, #0x8
  9c:	cmn	x11, #0x8
  a0:	b.eq	2ac <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x2ac>  // b.none
  a4:	ubfx	x11, x10, #4, #28
  a8:	eor	w11, w11, w10, lsr #9
  ac:	sub	w12, w8, #0x1
  b0:	and	w11, w11, w12
  b4:	add	x13, x9, x11, lsl #6
  b8:	ldr	x13, [x13, #24]
  bc:	cmp	x13, x10
  c0:	b.ne	dc <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0xdc>  // b.any
  c4:	add	x22, x9, x11, lsl #6
  c8:	add	x23, x9, x8, lsl #6
  cc:	add	x8, x9, x8, lsl #6
  d0:	cmp	x22, x8
  d4:	b.ne	120 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x120>  // b.any
  d8:	b	230 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x230>
  dc:	mov	w14, #0x1                   	// #1
  e0:	cmn	x13, #0x8
  e4:	b.eq	10c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x10c>  // b.none
  e8:	add	w11, w11, w14
  ec:	and	w11, w11, w12
  f0:	add	x13, x9, x11, lsl #6
  f4:	ldr	x13, [x13, #24]
  f8:	add	w14, w14, #0x1
  fc:	cmp	x13, x10
 100:	b.ne	e0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0xe0>  // b.any
 104:	mov	w11, w11
 108:	b	c4 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0xc4>
 10c:	add	x22, x9, x8, lsl #6
 110:	mov	x23, x22
 114:	add	x8, x9, x8, lsl #6
 118:	cmp	x22, x8
 11c:	b.eq	230 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x230>  // b.none
 120:	mov	w8, #0x6                   	// #6
 124:	ldr	x24, [x21]
 128:	stp	x8, xzr, [x29, #-64]
 12c:	ldr	x9, [x22, #56]
 130:	add	x8, x9, #0x10
 134:	cmp	x8, #0x10
 138:	stur	x9, [x29, #-48]
 13c:	b.hi	15c <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x15c>  // b.pmore
 140:	mov	w9, #0x1                   	// #1
 144:	lsl	x8, x9, x8
 148:	mov	w9, #0x101                 	// #257
 14c:	movk	w9, #0x1, lsl #16
 150:	tst	x8, x9
 154:	mov	x0, x21
 158:	b.ne	170 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x170>  // b.any
 15c:	ldr	x8, [x22, #40]
 160:	sub	x0, x29, #0x40
 164:	and	x1, x8, #0xfffffffffffffff8
 168:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 16c:	ldur	x0, [x29, #-8]
 170:	add	x1, sp, #0x50
 174:	stp	x21, x24, [sp, #80]
 178:	stp	x22, x23, [sp, #96]
 17c:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 180:	ldur	x9, [x29, #-48]
 184:	ldur	x21, [x29, #-8]
 188:	mov	w8, #0x6                   	// #6
 18c:	stp	x20, x8, [sp, #48]
 190:	add	x8, x9, #0x10
 194:	cmp	x8, #0x10
 198:	stp	xzr, x9, [sp, #64]
 19c:	b.hi	1b8 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1b8>  // b.pmore
 1a0:	mov	w9, #0x1                   	// #1
 1a4:	lsl	x8, x9, x8
 1a8:	mov	w9, #0x101                 	// #257
 1ac:	movk	w9, #0x1, lsl #16
 1b0:	tst	x8, x9
 1b4:	b.ne	1cc <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x1cc>  // b.any
 1b8:	ldur	x8, [x29, #-64]
 1bc:	add	x9, sp, #0x30
 1c0:	add	x0, x9, #0x8
 1c4:	and	x1, x8, #0xfffffffffffffff8
 1c8:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 1cc:	add	x8, sp, #0x8
 1d0:	add	x1, sp, #0x30
 1d4:	mov	x0, x21
 1d8:	add	x20, sp, #0x30
 1dc:	bl	0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 1e0:	ldr	x8, [sp, #72]
 1e4:	add	x8, x8, #0x10
 1e8:	cmp	x8, #0x10
 1ec:	b.hi	278 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x278>  // b.pmore
 1f0:	mov	w9, #0x1                   	// #1
 1f4:	lsl	x8, x9, x8
 1f8:	mov	w9, #0x101                 	// #257
 1fc:	movk	w9, #0x1, lsl #16
 200:	tst	x8, x9
 204:	b.eq	278 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x278>  // b.none
 208:	ldur	x8, [x29, #-48]
 20c:	add	x8, x8, #0x10
 210:	cmp	x8, #0x10
 214:	b.hi	290 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x290>  // b.pmore
 218:	mov	w9, #0x1                   	// #1
 21c:	lsl	x8, x9, x8
 220:	mov	w9, #0x101                 	// #257
 224:	movk	w9, #0x1, lsl #16
 228:	tst	x8, x9
 22c:	b.eq	290 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x290>  // b.none
 230:	ldur	x8, [x29, #-16]
 234:	add	x8, x8, #0x10
 238:	cmp	x8, #0x10
 23c:	b.hi	258 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x258>  // b.pmore
 240:	mov	w9, #0x1                   	// #1
 244:	lsl	x8, x9, x8
 248:	mov	w9, #0x101                 	// #257
 24c:	movk	w9, #0x1, lsl #16
 250:	tst	x8, x9
 254:	b.ne	260 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x260>  // b.any
 258:	mov	x0, x19
 25c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 260:	ldp	x20, x19, [sp, #224]
 264:	ldp	x22, x21, [sp, #208]
 268:	ldp	x24, x23, [sp, #192]
 26c:	ldp	x29, x30, [sp, #176]
 270:	add	sp, sp, #0xf0
 274:	ret
 278:	add	x0, x20, #0x8
 27c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 280:	ldur	x8, [x29, #-48]
 284:	add	x8, x8, #0x10
 288:	cmp	x8, #0x10
 28c:	b.ls	218 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x218>  // b.plast
 290:	sub	x0, x29, #0x40
 294:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 298:	ldur	x8, [x29, #-16]
 29c:	add	x8, x8, #0x10
 2a0:	cmp	x8, #0x10
 2a4:	b.ls	240 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x240>  // b.plast
 2a8:	b	258 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_+0x258>
 2ac:	adrp	x0, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2b0:	adrp	x1, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2b4:	adrp	x3, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2b8:	add	x0, x0, #0x0
 2bc:	add	x1, x1, #0x0
 2c0:	add	x3, x3, #0x0
 2c4:	mov	w2, #0x252                 	// #594
 2c8:	bl	0 <__assert_fail>
 2cc:	adrp	x0, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2d0:	adrp	x1, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2d4:	adrp	x3, 0 <_ZN4llvm18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE19allUsesReplacedWithEPS1_>
 2d8:	add	x0, x0, #0x0
 2dc:	add	x1, x1, #0x0
 2e0:	add	x3, x3, #0x0
 2e4:	mov	w2, #0x69                  	// #105
 2e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	str	x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldr	w9, [x0, #24]
  18:	cbz	w9, 15c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x15c>
  1c:	ldr	x8, [x1, #24]
  20:	orr	x10, x8, #0x8
  24:	cmn	x10, #0x8
  28:	b.eq	174 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x174>  // b.none
  2c:	ldr	x20, [x0, #8]
  30:	ubfx	x10, x8, #4, #28
  34:	eor	w10, w10, w8, lsr #9
  38:	sub	w9, w9, #0x1
  3c:	and	w21, w10, w9
  40:	add	x10, x20, x21, lsl #6
  44:	ldr	x10, [x10, #24]
  48:	mov	x19, x0
  4c:	cmp	x10, x8
  50:	b.ne	12c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x12c>  // b.any
  54:	add	x8, x20, x21, lsl #6
  58:	ldr	x9, [x8, #56]
  5c:	add	x9, x9, #0x10
  60:	cmp	x9, #0x10
  64:	b.hi	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x80>  // b.pmore
  68:	mov	w10, #0x1                   	// #1
  6c:	lsl	x9, x10, x9
  70:	mov	w10, #0x101                 	// #257
  74:	movk	w10, #0x1, lsl #16
  78:	tst	x9, x10
  7c:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x88>  // b.any
  80:	add	x0, x8, #0x28
  84:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  88:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
  8c:	ldr	x10, [x10]
  90:	mov	x9, #0xfffffffffffffff0    	// #-16
  94:	mov	w8, #0x2                   	// #2
  98:	add	x20, x20, x21, lsl #6
  9c:	stp	xzr, x9, [sp, #24]
  a0:	add	x9, x10, #0x10
  a4:	stp	x9, x8, [sp, #8]
  a8:	str	xzr, [sp, #40]
  ac:	mov	x21, x20
  b0:	ldr	x8, [x21, #24]!
  b4:	cmn	x8, #0x10
  b8:	b.eq	d8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xd8>  // b.none
  bc:	cmn	x8, #0x8
  c0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xd0>  // b.none
  c4:	cbz	x8, d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0xd0>
  c8:	sub	x0, x21, #0x10
  cc:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  d0:	mov	x8, #0xfffffffffffffff0    	// #-16
  d4:	str	x8, [x21]
  d8:	str	xzr, [x20, #32]
  dc:	ldr	x8, [sp, #32]
  e0:	add	x8, x8, #0x10
  e4:	cmp	x8, #0x10
  e8:	b.hi	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x104>  // b.pmore
  ec:	mov	w9, #0x1                   	// #1
  f0:	lsl	x8, x9, x8
  f4:	mov	w9, #0x101                 	// #257
  f8:	movk	w9, #0x1, lsl #16
  fc:	tst	x8, x9
 100:	b.ne	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x110>  // b.any
 104:	add	x8, sp, #0x8
 108:	add	x0, x8, #0x8
 10c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 110:	adrp	x8, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 114:	ldr	d0, [x19, #16]
 118:	ldr	d1, [x8]
 11c:	mov	w0, #0x1                   	// #1
 120:	add	v0.2s, v0.2s, v1.2s
 124:	str	d0, [x19, #16]
 128:	b	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x160>
 12c:	mov	w11, #0x1                   	// #1
 130:	cmn	x10, #0x8
 134:	b.eq	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x15c>  // b.none
 138:	add	w10, w21, w11
 13c:	and	w21, w10, w9
 140:	add	x10, x20, x21, lsl #6
 144:	ldr	x10, [x10, #24]
 148:	add	w11, w11, #0x1
 14c:	cmp	x10, x8
 150:	b.ne	130 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x130>  // b.any
 154:	mov	w21, w21
 158:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_+0x54>
 15c:	mov	w0, wzr
 160:	ldp	x20, x19, [sp, #80]
 164:	ldr	x21, [sp, #64]
 168:	ldp	x29, x30, [sp, #48]
 16c:	add	sp, sp, #0x60
 170:	ret
 174:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 178:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 17c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseERKSC_>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x252                 	// #594
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x20, x19, [sp, #64]
   c:	add	x29, sp, #0x30
  10:	ldp	x8, x9, [x1]
  14:	ldr	x8, [x8]
  18:	cmp	x8, x9
  1c:	b.ne	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xfc>  // b.any
  20:	ldr	x20, [x1, #16]
  24:	mov	x19, x0
  28:	ldr	x8, [x20, #56]
  2c:	add	x8, x8, #0x10
  30:	cmp	x8, #0x10
  34:	b.hi	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x50>  // b.pmore
  38:	mov	w9, #0x1                   	// #1
  3c:	lsl	x8, x9, x8
  40:	mov	w9, #0x101                 	// #257
  44:	movk	w9, #0x1, lsl #16
  48:	tst	x8, x9
  4c:	b.ne	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x58>  // b.any
  50:	add	x0, x20, #0x28
  54:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  58:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  5c:	ldr	x10, [x10]
  60:	mov	x9, #0xfffffffffffffff0    	// #-16
  64:	mov	w8, #0x2                   	// #2
  68:	stp	xzr, x9, [sp, #24]
  6c:	add	x9, x10, #0x10
  70:	stp	x9, x8, [sp, #8]
  74:	str	xzr, [sp, #40]
  78:	ldr	x8, [x20, #24]
  7c:	cmn	x8, #0x10
  80:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xa0>  // b.none
  84:	cmn	x8, #0x8
  88:	b.eq	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x98>  // b.none
  8c:	cbz	x8, 98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0x98>
  90:	add	x0, x20, #0x8
  94:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  98:	mov	x8, #0xfffffffffffffff0    	// #-16
  9c:	str	x8, [x20, #24]
  a0:	str	xzr, [x20, #32]
  a4:	ldr	x8, [sp, #32]
  a8:	add	x8, x8, #0x10
  ac:	cmp	x8, #0x10
  b0:	b.hi	cc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xcc>  // b.pmore
  b4:	mov	w9, #0x1                   	// #1
  b8:	lsl	x8, x9, x8
  bc:	mov	w9, #0x101                 	// #257
  c0:	movk	w9, #0x1, lsl #16
  c4:	tst	x8, x9
  c8:	b.ne	d8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE+0xd8>  // b.any
  cc:	add	x8, sp, #0x8
  d0:	add	x0, x8, #0x8
  d4:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  d8:	adrp	x8, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
  dc:	ldr	d0, [x19, #16]
  e0:	ldr	d1, [x8]
  e4:	add	v0.2s, v0.2s, v1.2s
  e8:	str	d0, [x19, #16]
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x29, x30, [sp, #48]
  f4:	add	sp, sp, #0x50
  f8:	ret
  fc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
 100:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
 104:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E5eraseENS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x4b3                 	// #1203
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E:

0000000000000000 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>:
   0:	sub	sp, sp, #0xd0
   4:	stp	x29, x30, [sp, #144]
   8:	stp	x24, x23, [sp, #160]
   c:	stp	x22, x21, [sp, #176]
  10:	stp	x20, x19, [sp, #192]
  14:	add	x29, sp, #0x90
  18:	ldr	x9, [x1]
  1c:	mov	x19, x8
  20:	mov	x8, sp
  24:	mov	x22, x1
  28:	add	x10, x9, #0x10
  2c:	mov	x21, x0
  30:	add	x20, x8, #0x8
  34:	mov	w8, #0x2                   	// #2
  38:	cmp	x10, #0x10
  3c:	stp	x8, xzr, [sp, #8]
  40:	str	x9, [sp, #24]
  44:	b.hi	60 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x60>  // b.pmore
  48:	mov	w11, #0x1                   	// #1
  4c:	lsl	x10, x11, x10
  50:	mov	w11, #0x101                 	// #257
  54:	movk	w11, #0x1, lsl #16
  58:	tst	x10, x11
  5c:	b.ne	70 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x70>  // b.any
  60:	mov	x0, x20
  64:	bl	0 <_ZN4llvm15ValueHandleBase12AddToUseListEv>
  68:	ldr	x8, [sp, #8]
  6c:	ldr	x9, [sp, #24]
  70:	adrp	x24, 0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>
  74:	ldr	x24, [x24]
  78:	add	x11, sp, #0x28
  7c:	add	x10, x9, #0x10
  80:	and	x12, x8, #0x6
  84:	add	x13, x24, #0x10
  88:	add	x23, x11, #0x8
  8c:	cmp	x10, #0x10
  90:	stp	x12, xzr, [sp, #48]
  94:	str	x13, [sp]
  98:	str	x21, [sp, #32]
  9c:	str	x9, [sp, #64]
  a0:	b.hi	c0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0xc0>  // b.pmore
  a4:	mov	w9, #0x1                   	// #1
  a8:	lsl	x9, x9, x10
  ac:	mov	w10, #0x101                 	// #257
  b0:	movk	w10, #0x1, lsl #16
  b4:	tst	x9, x10
  b8:	mov	x9, x21
  bc:	b.ne	d0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0xd0>  // b.any
  c0:	and	x1, x8, #0xfffffffffffffff8
  c4:	mov	x0, x23
  c8:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
  cc:	ldr	x9, [sp, #32]
  d0:	add	x8, x24, #0x10
  d4:	mov	w10, #0x6                   	// #6
  d8:	str	x8, [sp, #40]
  dc:	stp	x9, x10, [sp, #72]
  e0:	ldr	x9, [x22, #24]
  e4:	add	x8, sp, #0x28
  e8:	add	x24, x8, #0x28
  ec:	add	x8, x9, #0x10
  f0:	cmp	x8, #0x10
  f4:	stp	xzr, x9, [sp, #88]
  f8:	b.hi	114 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x114>  // b.pmore
  fc:	mov	w9, #0x1                   	// #1
 100:	lsl	x8, x9, x8
 104:	mov	w9, #0x101                 	// #257
 108:	movk	w9, #0x1, lsl #16
 10c:	tst	x8, x9
 110:	b.ne	124 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x124>  // b.any
 114:	ldr	x8, [x22, #8]
 118:	mov	x0, x24
 11c:	and	x1, x8, #0xfffffffffffffff8
 120:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 124:	sub	x8, x29, #0x28
 128:	add	x1, sp, #0x28
 12c:	mov	x0, x21
 130:	mov	x2, x24
 134:	add	x22, sp, #0x28
 138:	bl	0 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E>
 13c:	ldr	x8, [sp, #96]
 140:	add	x8, x8, #0x10
 144:	cmp	x8, #0x10
 148:	b.hi	178 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x178>  // b.pmore
 14c:	mov	w9, #0x1                   	// #1
 150:	lsl	x8, x9, x8
 154:	mov	w9, #0x101                 	// #257
 158:	movk	w9, #0x1, lsl #16
 15c:	tst	x8, x9
 160:	b.eq	178 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x178>  // b.none
 164:	ldr	x8, [sp, #64]
 168:	add	x8, x8, #0x10
 16c:	cmp	x8, #0x10
 170:	b.ls	190 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x190>  // b.plast
 174:	b	1bc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1bc>
 178:	add	x0, x22, #0x28
 17c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 180:	ldr	x8, [sp, #64]
 184:	add	x8, x8, #0x10
 188:	cmp	x8, #0x10
 18c:	b.hi	1bc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1bc>  // b.pmore
 190:	mov	w9, #0x1                   	// #1
 194:	lsl	x8, x9, x8
 198:	mov	w9, #0x101                 	// #257
 19c:	movk	w9, #0x1, lsl #16
 1a0:	tst	x8, x9
 1a4:	b.eq	1bc <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1bc>  // b.none
 1a8:	ldr	x8, [sp, #24]
 1ac:	add	x8, x8, #0x10
 1b0:	cmp	x8, #0x10
 1b4:	b.ls	1d4 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1d4>  // b.plast
 1b8:	b	1ec <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1ec>
 1bc:	mov	x0, x23
 1c0:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1c4:	ldr	x8, [sp, #24]
 1c8:	add	x8, x8, #0x10
 1cc:	cmp	x8, #0x10
 1d0:	b.hi	1ec <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1ec>  // b.pmore
 1d4:	mov	w9, #0x1                   	// #1
 1d8:	lsl	x8, x9, x8
 1dc:	mov	w9, #0x101                 	// #257
 1e0:	movk	w9, #0x1, lsl #16
 1e4:	tst	x8, x9
 1e8:	b.ne	1f4 <_ZN4llvm8ValueMapIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEE6insertEOSt4pairIS3_S4_E+0x1f4>  // b.any
 1ec:	mov	x0, x20
 1f0:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 1f4:	ldur	q0, [x29, #-24]
 1f8:	ldur	q1, [x29, #-40]
 1fc:	ldurb	w8, [x29, #-8]
 200:	ldp	x22, x21, [sp, #176]
 204:	ldp	x24, x23, [sp, #160]
 208:	stp	q1, q0, [x19]
 20c:	strb	w8, [x19, #32]
 210:	ldp	x20, x19, [sp, #192]
 214:	ldp	x29, x30, [sp, #144]
 218:	add	sp, sp, #0xd0
 21c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w9, [x0, #24]
  18:	mov	x21, x2
  1c:	mov	x23, x1
  20:	mov	x19, x0
  24:	mov	x20, x8
  28:	cbz	w9, 68 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x68>
  2c:	ldr	x10, [x23, #24]
  30:	orr	x8, x10, #0x8
  34:	cmn	x8, #0x8
  38:	b.eq	1e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x1e4>  // b.none
  3c:	ldr	x8, [x19, #8]
  40:	ubfx	x11, x10, #4, #28
  44:	eor	w12, w11, w10, lsr #9
  48:	sub	w11, w9, #0x1
  4c:	and	w12, w12, w11
  50:	add	x22, x8, x12, lsl #6
  54:	ldr	x14, [x22, #24]
  58:	cmp	x14, x10
  5c:	b.ne	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x198>  // b.any
  60:	mov	w10, wzr
  64:	b	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x16c>
  68:	mov	x3, xzr
  6c:	mov	x0, x19
  70:	mov	x1, x23
  74:	mov	x2, x23
  78:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
  7c:	ldr	x9, [x0, #24]
  80:	ldr	x8, [x23, #24]
  84:	mov	x22, x0
  88:	cmp	x9, x8
  8c:	b.eq	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x110>  // b.none
  90:	add	x9, x9, #0x10
  94:	cmp	x9, #0x10
  98:	add	x24, x22, #0x8
  9c:	b.hi	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0xe4>  // b.pmore
  a0:	mov	w10, #0x1                   	// #1
  a4:	lsl	x9, x10, x9
  a8:	mov	w10, #0x101                 	// #257
  ac:	movk	w10, #0x1, lsl #16
  b0:	tst	x9, x10
  b4:	b.eq	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0xe4>  // b.none
  b8:	add	x9, x8, #0x10
  bc:	cmp	x9, #0x10
  c0:	str	x8, [x22, #24]
  c4:	b.hi	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x100>  // b.pmore
  c8:	mov	w8, #0x1                   	// #1
  cc:	lsl	x8, x8, x9
  d0:	mov	w9, #0x101                 	// #257
  d4:	movk	w9, #0x1, lsl #16
  d8:	tst	x8, x9
  dc:	b.ne	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x110>  // b.any
  e0:	b	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x100>
  e4:	mov	x0, x24
  e8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
  ec:	ldr	x8, [x23, #24]
  f0:	add	x9, x8, #0x10
  f4:	cmp	x9, #0x10
  f8:	str	x8, [x22, #24]
  fc:	b.ls	c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0xc8>  // b.plast
 100:	ldr	x8, [x23, #8]
 104:	mov	x0, x24
 108:	and	x1, x8, #0xfffffffffffffff8
 10c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 110:	ldr	x8, [x23, #32]
 114:	mov	w9, #0x6                   	// #6
 118:	mov	x0, x22
 11c:	str	x9, [x0, #40]!
 120:	stur	x8, [x0, #-8]
 124:	str	xzr, [x0, #8]
 128:	ldr	x9, [x21, #16]
 12c:	add	x8, x9, #0x10
 130:	cmp	x8, #0x10
 134:	str	x9, [x0, #16]
 138:	b.hi	154 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x154>  // b.pmore
 13c:	mov	w9, #0x1                   	// #1
 140:	lsl	x8, x9, x8
 144:	mov	w9, #0x101                 	// #257
 148:	movk	w9, #0x1, lsl #16
 14c:	tst	x8, x9
 150:	b.ne	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x160>  // b.any
 154:	ldr	x8, [x21]
 158:	and	x1, x8, #0xfffffffffffffff8
 15c:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 160:	ldr	x8, [x19, #8]
 164:	ldr	w9, [x19, #24]
 168:	mov	w10, #0x1                   	// #1
 16c:	ldr	x11, [x19]
 170:	mov	w9, w9
 174:	add	x8, x8, x9, lsl #6
 178:	stp	x22, x8, [x20, #16]
 17c:	stp	x19, x11, [x20]
 180:	strb	w10, [x20, #32]
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldp	x24, x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	mov	x13, xzr
 19c:	mov	w16, #0x1                   	// #1
 1a0:	mov	x15, #0xfffffffffffffff0    	// #-16
 1a4:	cmn	x14, #0x8
 1a8:	b.eq	1d8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x1d8>  // b.none
 1ac:	cmp	x13, #0x0
 1b0:	add	w12, w12, w16
 1b4:	ccmp	x14, x15, #0x0, eq  // eq = none
 1b8:	and	w12, w12, w11
 1bc:	csel	x13, x13, x22, ne  // ne = any
 1c0:	add	x22, x8, x12, lsl #6
 1c4:	ldr	x14, [x22, #24]
 1c8:	add	w16, w16, #0x1
 1cc:	cmp	x14, x10
 1d0:	b.eq	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x60>  // b.none
 1d4:	b	1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x1a4>
 1d8:	cmp	x13, #0x0
 1dc:	csel	x3, x22, x13, eq  // eq = none
 1e0:	b	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_+0x6c>
 1e4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
 1e8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
 1ec:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorISC_S6_SE_SH_Lb0EEEbEOSC_DpOT_>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x252                 	// #594
 200:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #16]
  14:	ldr	w22, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w22, w22, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x94>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w22, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w22, lsr #3
  54:	b.ls	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0xfc>  // b.plast
  58:	cbz	x3, 274 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x274>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3, #24]
  6c:	cmn	x8, #0x8
  70:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x80>  // b.none
  74:	ldr	w8, [x19, #20]
  78:	sub	w8, w8, #0x1
  7c:	str	w8, [x19, #20]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x22, x21, [sp, #16]
  88:	mov	x0, x3
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	lsl	w8, w22, #1
  98:	sub	w8, w8, #0x1
  9c:	orr	x8, x8, x8, lsr #1
  a0:	orr	x8, x8, x8, lsr #2
  a4:	orr	x8, x8, x8, lsr #4
  a8:	orr	x8, x8, x8, lsr #8
  ac:	orr	x8, x8, x8, lsr #16
  b0:	lsr	x9, x8, #32
  b4:	orr	w8, w9, w8
  b8:	add	w9, w8, #0x1
  bc:	ldr	x21, [x19, #8]
  c0:	cmp	w9, #0x40
  c4:	mov	w9, #0x40                  	// #64
  c8:	csinc	w8, w9, w8, ls  // ls = plast
  cc:	lsl	x0, x8, #6
  d0:	str	w8, [x19, #24]
  d4:	bl	0 <_Znwm>
  d8:	str	x0, [x19, #8]
  dc:	cbz	x21, 160 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x160>
  e0:	add	x2, x21, x22, lsl #6
  e4:	mov	x0, x19
  e8:	mov	x1, x21
  ec:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
  f0:	mov	x0, x21
  f4:	bl	0 <_ZdlPv>
  f8:	b	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x168>
  fc:	sub	w8, w22, #0x1
 100:	orr	x8, x8, x8, lsr #1
 104:	orr	x8, x8, x8, lsr #2
 108:	orr	x8, x8, x8, lsr #4
 10c:	orr	x8, x8, x8, lsr #8
 110:	orr	x8, x8, x8, lsr #16
 114:	lsr	x10, x8, #32
 118:	orr	w8, w10, w8
 11c:	add	w10, w8, #0x1
 120:	ldr	x21, [x19, #8]
 124:	mov	w9, #0x40                  	// #64
 128:	cmp	w10, #0x40
 12c:	csinc	w8, w9, w8, ls  // ls = plast
 130:	lsl	x0, x8, #6
 134:	str	w8, [x19, #24]
 138:	bl	0 <_Znwm>
 13c:	str	x0, [x19, #8]
 140:	cbz	x21, 1e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1e4>
 144:	add	x2, x21, x22, lsl #6
 148:	mov	x0, x19
 14c:	mov	x1, x21
 150:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 154:	mov	x0, x21
 158:	bl	0 <_ZdlPv>
 15c:	b	1ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1ec>
 160:	mov	x0, x19
 164:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 168:	ldr	w10, [x19, #24]
 16c:	cbz	w10, 274 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x274>
 170:	ldr	x8, [x20, #24]
 174:	orr	x9, x8, #0x8
 178:	cmn	x9, #0x8
 17c:	b.eq	294 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x294>  // b.none
 180:	ldr	x9, [x19, #8]
 184:	ubfx	x11, x8, #4, #28
 188:	eor	w11, w11, w8, lsr #9
 18c:	sub	w10, w10, #0x1
 190:	and	w11, w11, w10
 194:	add	x3, x9, x11, lsl #6
 198:	ldr	x13, [x3, #24]
 19c:	cmp	x13, x8
 1a0:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x58>  // b.none
 1a4:	mov	x12, xzr
 1a8:	mov	w15, #0x1                   	// #1
 1ac:	mov	x14, #0xfffffffffffffff0    	// #-16
 1b0:	cmn	x13, #0x8
 1b4:	b.eq	268 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x268>  // b.none
 1b8:	cmp	x12, #0x0
 1bc:	add	w11, w11, w15
 1c0:	ccmp	x13, x14, #0x0, eq  // eq = none
 1c4:	and	w11, w11, w10
 1c8:	csel	x12, x12, x3, ne  // ne = any
 1cc:	add	x3, x9, x11, lsl #6
 1d0:	ldr	x13, [x3, #24]
 1d4:	add	w15, w15, #0x1
 1d8:	cmp	x13, x8
 1dc:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x58>  // b.none
 1e0:	b	1b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x1b0>
 1e4:	mov	x0, x19
 1e8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 1ec:	ldr	w10, [x19, #24]
 1f0:	cbz	w10, 274 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x274>
 1f4:	ldr	x8, [x20, #24]
 1f8:	orr	x9, x8, #0x8
 1fc:	cmn	x9, #0x8
 200:	b.eq	294 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x294>  // b.none
 204:	ldr	x9, [x19, #8]
 208:	ubfx	x11, x8, #4, #28
 20c:	eor	w11, w11, w8, lsr #9
 210:	sub	w10, w10, #0x1
 214:	and	w11, w11, w10
 218:	add	x3, x9, x11, lsl #6
 21c:	ldr	x13, [x3, #24]
 220:	cmp	x13, x8
 224:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x58>  // b.none
 228:	mov	x12, xzr
 22c:	mov	w15, #0x1                   	// #1
 230:	mov	x14, #0xfffffffffffffff0    	// #-16
 234:	cmn	x13, #0x8
 238:	b.eq	268 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x268>  // b.none
 23c:	cmp	x12, #0x0
 240:	add	w11, w11, w15
 244:	ccmp	x13, x14, #0x0, eq  // eq = none
 248:	and	w11, w11, w10
 24c:	csel	x12, x12, x3, ne  // ne = any
 250:	add	x3, x9, x11, lsl #6
 254:	ldr	x13, [x3, #24]
 258:	add	w15, w15, #0x1
 25c:	cmp	x13, x8
 260:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x58>  // b.none
 264:	b	234 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x234>
 268:	cmp	x12, #0x0
 26c:	csel	x3, x3, x12, eq  // eq = none
 270:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_+0x58>
 274:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 278:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 27c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 280:	add	x0, x0, #0x0
 284:	add	x1, x1, #0x0
 288:	add	x3, x3, #0x0
 28c:	mov	w2, #0x22f                 	// #559
 290:	bl	0 <__assert_fail>
 294:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 298:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 29c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E20InsertIntoBucketImplISC_EEPSH_RKSC_RKT_SL_>
 2a0:	add	x0, x0, #0x0
 2a4:	add	x1, x1, #0x0
 2a8:	add	x3, x3, #0x0
 2ac:	mov	w2, #0x252                 	// #594
 2b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #80]
   8:	str	x27, [sp, #96]
   c:	stp	x26, x25, [sp, #112]
  10:	stp	x24, x23, [sp, #128]
  14:	stp	x22, x21, [sp, #144]
  18:	stp	x20, x19, [sp, #160]
  1c:	add	x29, sp, #0x50
  20:	mov	x19, x2
  24:	mov	x20, x1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  30:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
  34:	ldr	x10, [x10]
  38:	mov	x9, #0xfffffffffffffff8    	// #-8
  3c:	mov	w8, #0x2                   	// #2
  40:	stp	x9, xzr, [sp, #64]
  44:	mov	x24, #0xfffffffffffffff0    	// #-16
  48:	cmp	x20, x19
  4c:	add	x9, x10, #0x10
  50:	stp	x8, xzr, [sp, #48]
  54:	stp	xzr, x24, [sp, #16]
  58:	stp	xzr, x9, [sp, #32]
  5c:	stp	x9, x8, [sp]
  60:	b.eq	298 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x298>  // b.none
  64:	mov	w26, #0x101                 	// #257
  68:	mov	x9, #0xfffffffffffffff8    	// #-8
  6c:	mov	w25, #0x1                   	// #1
  70:	movk	w26, #0x1, lsl #16
  74:	mov	w27, #0x6                   	// #6
  78:	mov	x10, #0xfffffffffffffff0    	// #-16
  7c:	ldr	x8, [x20, #24]
  80:	cmp	x8, x9
  84:	b.eq	204 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x204>  // b.none
  88:	cmp	x8, x10
  8c:	b.eq	204 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x204>  // b.none
  90:	ldr	w10, [x21, #24]
  94:	cbz	w10, 120 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x120>
  98:	orr	x9, x8, #0x8
  9c:	cmn	x9, #0x8
  a0:	b.eq	30c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x30c>  // b.none
  a4:	ldr	x9, [x21, #8]
  a8:	ubfx	x11, x8, #4, #28
  ac:	eor	w11, w11, w8, lsr #9
  b0:	sub	w10, w10, #0x1
  b4:	and	w11, w11, w10
  b8:	add	x12, x9, x11, lsl #6
  bc:	ldr	x13, [x12, #24]
  c0:	cmp	x13, x8
  c4:	b.eq	32c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x32c>  // b.none
  c8:	mov	x12, xzr
  cc:	mov	w14, #0x1                   	// #1
  d0:	cmn	x13, #0x8
  d4:	add	x15, x9, x11, lsl #6
  d8:	b.eq	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x108>  // b.none
  dc:	add	w11, w11, w14
  e0:	cmp	x12, #0x0
  e4:	and	w11, w11, w10
  e8:	ccmp	x13, x24, #0x0, eq  // eq = none
  ec:	add	x13, x9, x11, lsl #6
  f0:	ldr	x13, [x13, #24]
  f4:	csel	x12, x12, x15, ne  // ne = any
  f8:	add	w14, w14, #0x1
  fc:	cmp	x13, x8
 100:	b.ne	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0xd0>  // b.any
 104:	b	32c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x32c>
 108:	cmp	x12, #0x0
 10c:	csel	x22, x15, x12, eq  // eq = none
 110:	ldr	x9, [x22, #24]
 114:	cmp	x9, x8
 118:	b.ne	130 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x130>  // b.any
 11c:	b	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x198>
 120:	mov	x22, xzr
 124:	ldr	x9, [x22, #24]
 128:	cmp	x9, x8
 12c:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x198>  // b.none
 130:	add	x9, x9, #0x10
 134:	cmp	x9, #0x10
 138:	add	x23, x22, #0x8
 13c:	b.hi	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x16c>  // b.pmore
 140:	lsl	x9, x25, x9
 144:	tst	x9, x26
 148:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x16c>  // b.none
 14c:	add	x9, x8, #0x10
 150:	cmp	x9, #0x10
 154:	str	x8, [x22, #24]
 158:	b.hi	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x188>  // b.pmore
 15c:	lsl	x8, x25, x9
 160:	tst	x8, x26
 164:	b.ne	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x198>  // b.any
 168:	b	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x188>
 16c:	mov	x0, x23
 170:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 174:	ldr	x8, [x20, #24]
 178:	add	x9, x8, #0x10
 17c:	cmp	x9, #0x10
 180:	str	x8, [x22, #24]
 184:	b.ls	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x15c>  // b.plast
 188:	ldr	x8, [x20, #8]
 18c:	mov	x0, x23
 190:	and	x1, x8, #0xfffffffffffffff8
 194:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 198:	ldr	x8, [x20, #32]
 19c:	str	x27, [x22, #40]!
 1a0:	str	xzr, [x22, #8]
 1a4:	add	x23, x20, #0x28
 1a8:	stur	x8, [x22, #-8]
 1ac:	ldr	x9, [x20, #56]
 1b0:	add	x8, x9, #0x10
 1b4:	cmp	x8, #0x10
 1b8:	str	x9, [x22, #16]
 1bc:	b.hi	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1cc>  // b.pmore
 1c0:	lsl	x8, x25, x8
 1c4:	tst	x8, x26
 1c8:	b.ne	1dc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x1dc>  // b.any
 1cc:	ldr	x8, [x23]
 1d0:	mov	x0, x22
 1d4:	and	x1, x8, #0xfffffffffffffff8
 1d8:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 1dc:	ldr	w8, [x21, #16]
 1e0:	add	w8, w8, #0x1
 1e4:	str	w8, [x21, #16]
 1e8:	ldr	x8, [x20, #56]
 1ec:	add	x8, x8, #0x10
 1f0:	cmp	x8, #0x10
 1f4:	b.hi	244 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x244>  // b.pmore
 1f8:	lsl	x8, x25, x8
 1fc:	tst	x8, x26
 200:	b.eq	244 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x244>  // b.none
 204:	ldr	x8, [x20, #24]
 208:	add	x8, x8, #0x10
 20c:	cmp	x8, #0x10
 210:	b.hi	25c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x25c>  // b.pmore
 214:	lsl	x8, x25, x8
 218:	tst	x8, x26
 21c:	b.eq	25c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x25c>  // b.none
 220:	add	x20, x20, #0x40
 224:	cmp	x20, x19
 228:	b.eq	270 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x270>  // b.none
 22c:	ldr	x9, [sp, #64]
 230:	ldr	x10, [sp, #24]
 234:	ldr	x8, [x20, #24]
 238:	cmp	x8, x9
 23c:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x88>  // b.any
 240:	b	204 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x204>
 244:	mov	x0, x23
 248:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 24c:	ldr	x8, [x20, #24]
 250:	add	x8, x8, #0x10
 254:	cmp	x8, #0x10
 258:	b.ls	214 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x214>  // b.plast
 25c:	add	x0, x20, #0x8
 260:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 264:	add	x20, x20, #0x40
 268:	cmp	x20, x19
 26c:	b.ne	22c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x22c>  // b.any
 270:	ldr	x8, [sp, #24]
 274:	add	x8, x8, #0x10
 278:	cmp	x8, #0x10
 27c:	b.hi	2ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2ec>  // b.pmore
 280:	mov	w9, #0x1                   	// #1
 284:	lsl	x8, x9, x8
 288:	mov	w9, #0x101                 	// #257
 28c:	movk	w9, #0x1, lsl #16
 290:	tst	x8, x9
 294:	b.eq	2ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2ec>  // b.none
 298:	ldr	x8, [sp, #64]
 29c:	add	x8, x8, #0x10
 2a0:	cmp	x8, #0x10
 2a4:	b.hi	2c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2c0>  // b.pmore
 2a8:	mov	w9, #0x1                   	// #1
 2ac:	lsl	x8, x9, x8
 2b0:	mov	w9, #0x101                 	// #257
 2b4:	movk	w9, #0x1, lsl #16
 2b8:	tst	x8, x9
 2bc:	b.ne	2cc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2cc>  // b.any
 2c0:	add	x8, sp, #0x28
 2c4:	add	x0, x8, #0x8
 2c8:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 2cc:	ldp	x20, x19, [sp, #160]
 2d0:	ldp	x22, x21, [sp, #144]
 2d4:	ldp	x24, x23, [sp, #128]
 2d8:	ldp	x26, x25, [sp, #112]
 2dc:	ldr	x27, [sp, #96]
 2e0:	ldp	x29, x30, [sp, #80]
 2e4:	add	sp, sp, #0xb0
 2e8:	ret
 2ec:	mov	x8, sp
 2f0:	add	x0, x8, #0x8
 2f4:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 2f8:	ldr	x8, [sp, #64]
 2fc:	add	x8, x8, #0x10
 300:	cmp	x8, #0x10
 304:	b.ls	2a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2a8>  // b.plast
 308:	b	2c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_+0x2c0>
 30c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 310:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 314:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 318:	add	x0, x0, #0x0
 31c:	add	x1, x1, #0x0
 320:	add	x3, x3, #0x0
 324:	mov	w2, #0x252                 	// #594
 328:	bl	0 <__assert_fail>
 32c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 330:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 334:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E18moveFromOldBucketsEPSH_SK_>
 338:	add	x0, x0, #0x0
 33c:	add	x1, x1, #0x0
 340:	add	x3, x3, #0x0
 344:	mov	w2, #0x17a                 	// #378
 348:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape21getResumeFunctionTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w9, w8, #0x1
  10:	cmp	w9, #0x2
  14:	b.cs	38 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x38>  // b.hs, b.nlast
  18:	ldr	x8, [x0, #200]
  1c:	ldr	x0, [x8, #24]
  20:	cbz	x0, 58 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x58>
  24:	ldrb	w8, [x0, #8]
  28:	cmp	w8, #0xc
  2c:	b.ne	90 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x90>  // b.any
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	cbnz	w8, 78 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x78>
  3c:	bl	0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  40:	ldrb	w8, [x0, #8]
  44:	cmp	w8, #0xf
  48:	b.ne	b0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0xb0>  // b.any
  4c:	ldr	x8, [x0, #16]
  50:	ldr	x0, [x8]
  54:	cbnz	x0, 24 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv+0x24>
  58:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  5c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  60:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x69                  	// #105
  74:	bl	0 <__assert_fail>
  78:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  7c:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0xa9                  	// #169
  8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  90:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  94:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  98:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x108                 	// #264
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  b4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  b8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape21getResumeFunctionTypeEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x17e                 	// #382
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv:

0000000000000000 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 40 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x40>
  10:	ldr	x8, [x0, #176]
  14:	cbz	x8, 60 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x60>
  18:	ldr	w9, [x8, #12]
  1c:	cbz	w9, 80 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0x80>
  20:	ldr	x8, [x8, #16]
  24:	ldr	x0, [x8]
  28:	cbz	x0, a0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0xa0>
  2c:	ldrb	w8, [x0, #8]
  30:	cmp	w8, #0xf
  34:	b.ne	c0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv+0xc0>  // b.any
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  44:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  48:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x9a                  	// #154
  5c:	bl	0 <__assert_fail>
  60:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  64:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  68:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x9b                  	// #155
  7c:	bl	0 <__assert_fail>
  80:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  84:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  88:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x160                 	// #352
  9c:	bl	0 <__assert_fail>
  a0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  a4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  a8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x69                  	// #105
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  c4:	adrp	x1, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  c8:	adrp	x3, 0 <_ZNK4llvm4coro5Shape26getSwitchResumePointerTypeEv>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x108                 	// #264
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w10, [x0, #24]
  14:	mov	x19, x1
  18:	cbz	w10, 90 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x90>
  1c:	ldr	x8, [x19, #24]
  20:	orr	x9, x8, #0x8
  24:	cmn	x9, #0x8
  28:	b.eq	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x164>  // b.none
  2c:	ldr	x9, [x0, #8]
  30:	ubfx	x11, x8, #4, #28
  34:	eor	w11, w11, w8, lsr #9
  38:	sub	w10, w10, #0x1
  3c:	and	w11, w11, w10
  40:	add	x20, x9, x11, lsl #6
  44:	ldr	x13, [x20, #24]
  48:	cmp	x13, x8
  4c:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x144>  // b.none
  50:	mov	x12, xzr
  54:	mov	w15, #0x1                   	// #1
  58:	mov	x14, #0xfffffffffffffff0    	// #-16
  5c:	cmn	x13, #0x8
  60:	b.eq	158 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x158>  // b.none
  64:	cmp	x12, #0x0
  68:	add	w11, w11, w15
  6c:	ccmp	x13, x14, #0x0, eq  // eq = none
  70:	and	w11, w11, w10
  74:	csel	x12, x12, x20, ne  // ne = any
  78:	add	x20, x9, x11, lsl #6
  7c:	ldr	x13, [x20, #24]
  80:	add	w15, w15, #0x1
  84:	cmp	x13, x8
  88:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x144>  // b.none
  8c:	b	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x5c>
  90:	mov	x3, xzr
  94:	mov	x1, x19
  98:	mov	x2, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>
  a0:	ldr	x9, [x0, #24]
  a4:	ldr	x8, [x19, #24]
  a8:	mov	x20, x0
  ac:	cmp	x9, x8
  b0:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x134>  // b.none
  b4:	add	x9, x9, #0x10
  b8:	cmp	x9, #0x10
  bc:	add	x21, x20, #0x8
  c0:	b.hi	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x108>  // b.pmore
  c4:	mov	w10, #0x1                   	// #1
  c8:	lsl	x9, x10, x9
  cc:	mov	w10, #0x101                 	// #257
  d0:	movk	w10, #0x1, lsl #16
  d4:	tst	x9, x10
  d8:	b.eq	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x108>  // b.none
  dc:	add	x9, x8, #0x10
  e0:	cmp	x9, #0x10
  e4:	str	x8, [x20, #24]
  e8:	b.hi	124 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x124>  // b.pmore
  ec:	mov	w8, #0x1                   	// #1
  f0:	lsl	x8, x8, x9
  f4:	mov	w9, #0x101                 	// #257
  f8:	movk	w9, #0x1, lsl #16
  fc:	tst	x8, x9
 100:	b.ne	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x134>  // b.any
 104:	b	124 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x124>
 108:	mov	x0, x21
 10c:	bl	0 <_ZN4llvm15ValueHandleBase17RemoveFromUseListEv>
 110:	ldr	x8, [x19, #24]
 114:	add	x9, x8, #0x10
 118:	cmp	x9, #0x10
 11c:	str	x8, [x20, #24]
 120:	b.ls	ec <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0xec>  // b.plast
 124:	ldr	x8, [x19, #8]
 128:	mov	x0, x21
 12c:	and	x1, x8, #0xfffffffffffffff8
 130:	bl	0 <_ZN4llvm15ValueHandleBase20AddToExistingUseListEPPS0_>
 134:	ldr	x8, [x19, #32]
 138:	mov	w9, #0x6                   	// #6
 13c:	stp	xzr, xzr, [x20, #48]
 140:	stp	x8, x9, [x20, #32]
 144:	mov	x0, x20
 148:	ldp	x20, x19, [sp, #32]
 14c:	ldr	x21, [sp, #16]
 150:	ldp	x29, x30, [sp], #48
 154:	ret
 158:	cmp	x12, #0x0
 15c:	csel	x3, x20, x12, eq  // eq = none
 160:	b	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_+0x94>
 164:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>
 168:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>
 16c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_18ValueMapCallbackVHIPKNS_5ValueENS_14WeakTrackingVHENS_14ValueMapConfigIS5_NS_3sys10SmartMutexILb0EEEEEEES6_NS_12DenseMapInfoISC_EENS_6detail12DenseMapPairISC_S6_EEEESC_S6_SE_SH_E16FindAndConstructEOSC_>
 170:	add	x0, x0, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x252                 	// #594
 180:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x6c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x6c>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  3c:	ldr	x0, [x20, #64]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x50
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x54>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	ldr	x0, [x20, #32]
  58:	add	x8, x20, #0x30
  5c:	cmp	x0, x8
  60:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>  // b.none
  64:	bl	0 <_ZdlPv>
  68:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIvESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10BranchInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10SwitchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	ubfx	w8, w9, #1, #27
  10:	cmp	w8, w1
  14:	b.ls	68 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x68>  // b.plast
  18:	mov	w8, #0x1                   	// #1
  1c:	bfi	w8, w1, #1, #31
  20:	and	x10, x9, #0xfffffff
  24:	cmp	w10, w8
  28:	b.ls	88 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x88>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x9, x10, x9
  38:	add	x9, x0, x9
  3c:	b	44 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x44>
  40:	ldur	x9, [x0, #-8]
  44:	mov	w10, #0x18                  	// #24
  48:	umull	x8, w8, w10
  4c:	ldr	x0, [x9, x8]
  50:	cbz	x0, a8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xa8>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x12
  5c:	b.ne	c8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xc8>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	ret
  68:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  70:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xd7c                 	// #3452
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  8c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  90:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xdbe                 	// #3518
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  ac:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x69                  	// #105
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  cc:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x108                 	// #264
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x24, x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	cbz	x2, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  1c:	ldrb	w8, [x2, #16]
  20:	mov	x19, x4
  24:	mov	x20, x3
  28:	mov	x21, x2
  2c:	mov	w23, w1
  30:	mov	x22, x0
  34:	cmp	w8, #0x10
  38:	b.hi	4c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x4c>  // b.pmore
  3c:	cbz	x20, cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xcc>
  40:	ldrb	w8, [x20, #16]
  44:	cmp	w8, #0x10
  48:	b.ls	a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0xa4>  // b.plast
  4c:	mov	w0, #0x38                  	// #56
  50:	mov	w1, #0x2                   	// #2
  54:	bl	0 <_ZN4llvm4UsernwEmj>
  58:	mov	w8, #0x101                 	// #257
  5c:	add	x4, sp, #0x8
  60:	mov	w1, w23
  64:	mov	x2, x21
  68:	mov	x3, x20
  6c:	mov	x24, x0
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  7c:	mov	x0, x22
  80:	mov	x1, x24
  84:	mov	x2, x19
  88:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  8c:	ldp	x20, x19, [sp, #80]
  90:	ldp	x22, x21, [sp, #64]
  94:	ldp	x24, x23, [sp, #48]
  98:	ldp	x29, x30, [sp, #32]
  9c:	add	sp, sp, #0x60
  a0:	ret
  a4:	mov	w0, w23
  a8:	mov	x1, x21
  ac:	mov	x2, x20
  b0:	ldp	x20, x19, [sp, #80]
  b4:	ldp	x22, x21, [sp, #64]
  b8:	ldp	x24, x23, [sp, #48]
  bc:	ldp	x29, x30, [sp, #32]
  c0:	mov	w3, wzr
  c4:	add	sp, sp, #0x60
  c8:	b	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  cc:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d0:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d4:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x69                  	// #105
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_8ICmpInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE:

0000000000000000 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x24, [x2]
  20:	cbz	x24, b8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xb8>
  24:	mov	x20, x0
  28:	ldr	x0, [x24]
  2c:	ldrb	w25, [x24, #8]
  30:	mov	x19, x4
  34:	mov	x21, x3
  38:	mov	x22, x2
  3c:	mov	w23, w1
  40:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  44:	cmp	w25, #0x10
  48:	mov	x3, x0
  4c:	b.ne	70 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0x70>  // b.any
  50:	ldr	x8, [x24, #32]
  54:	lsr	x9, x8, #32
  58:	cbnz	x9, d8 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE+0xd8>
  5c:	ldrb	w9, [x24, #40]
  60:	mov	x0, x3
  64:	orr	x1, x8, x9, lsl #32
  68:	bl	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  6c:	mov	x3, x0
  70:	mov	w2, #0x35                  	// #53
  74:	mov	x0, x20
  78:	mov	x1, x3
  7c:	mov	w3, w23
  80:	mov	x4, x22
  84:	mov	x5, x21
  88:	mov	x6, x19
  8c:	mov	x7, xzr
  90:	str	xzr, [sp]
  94:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
  98:	mov	x0, x20
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x22, x21, [sp, #64]
  a4:	ldp	x24, x23, [sp, #48]
  a8:	ldr	x25, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x60
  b4:	b	0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  b8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  bc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x69                  	// #105
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  dc:	adrp	x1, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e0:	adrp	x3, 0 <_ZN4llvm8ICmpInstC2ENS_7CmpInst9PredicateEPNS_5ValueES4_RKNS_5TwineE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x220                 	// #544
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ICmpInst8AssertOKEv:

0000000000000000 <_ZN4llvm8ICmpInst8AssertOKEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrh	w8, [x0, #18]
   c:	and	w8, w8, #0x7fff
  10:	sub	w8, w8, #0x20
  14:	cmp	w8, #0xa
  18:	b.cs	7c <_ZN4llvm8ICmpInst8AssertOKEv+0x7c>  // b.hs, b.nlast
  1c:	ldur	x8, [x0, #-48]
  20:	ldur	x9, [x0, #-24]
  24:	ldr	x8, [x8]
  28:	ldr	x9, [x9]
  2c:	cmp	x8, x9
  30:	b.ne	9c <_ZN4llvm8ICmpInst8AssertOKEv+0x9c>  // b.any
  34:	ldrb	w9, [x8, #8]
  38:	cmp	w9, #0x10
  3c:	mov	w10, w9
  40:	b.ne	50 <_ZN4llvm8ICmpInst8AssertOKEv+0x50>  // b.any
  44:	ldr	x10, [x8, #16]
  48:	ldr	x10, [x10]
  4c:	ldrb	w10, [x10, #8]
  50:	cmp	w10, #0xb
  54:	b.eq	74 <_ZN4llvm8ICmpInst8AssertOKEv+0x74>  // b.none
  58:	cmp	w9, #0x10
  5c:	b.ne	6c <_ZN4llvm8ICmpInst8AssertOKEv+0x6c>  // b.any
  60:	ldr	x8, [x8, #16]
  64:	ldr	x8, [x8]
  68:	ldrb	w9, [x8, #8]
  6c:	cmp	w9, #0xf
  70:	b.ne	bc <_ZN4llvm8ICmpInst8AssertOKEv+0xbc>  // b.any
  74:	ldp	x29, x30, [sp], #16
  78:	ret
  7c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  80:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  84:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x489                 	// #1161
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x48b                 	// #1163
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c0:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c4:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x48f                 	// #1167
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	cbz	x1, 114 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x114>
  20:	ldrb	w8, [x1, #16]
  24:	mov	x20, x5
  28:	mov	x19, x4
  2c:	mov	x21, x3
  30:	mov	x22, x2
  34:	mov	x24, x1
  38:	mov	x23, x0
  3c:	cmp	w8, #0x10
  40:	b.hi	54 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x54>  // b.pmore
  44:	cbz	x22, 114 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0x114>
  48:	ldrb	w8, [x22, #16]
  4c:	cmp	w8, #0x10
  50:	b.ls	e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE+0xe4>  // b.plast
  54:	mov	w8, #0x101                 	// #257
  58:	mov	w0, #0x58                  	// #88
  5c:	mov	w1, #0x2                   	// #2
  60:	stp	xzr, xzr, [sp, #8]
  64:	strh	w8, [sp, #24]
  68:	bl	0 <_ZN4llvm4UsernwEmj>
  6c:	ldr	x1, [x24]
  70:	sub	x3, x0, #0x30
  74:	mov	w2, #0x41                  	// #65
  78:	mov	w4, #0x2                   	// #2
  7c:	mov	x5, xzr
  80:	mov	x25, x0
  84:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  88:	adrp	x8, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  8c:	ldr	d0, [x8]
  90:	add	x8, x25, #0x48
  94:	add	x5, sp, #0x8
  98:	mov	x0, x25
  9c:	mov	x1, x24
  a0:	mov	x2, x22
  a4:	mov	x3, x21
  a8:	mov	x4, x19
  ac:	str	x8, [x25, #56]
  b0:	str	d0, [x25, #64]
  b4:	bl	0 <_ZN4llvm15InsertValueInst4initEPNS_5ValueES2_NS_8ArrayRefIjEERKNS_5TwineE>
  b8:	mov	x0, x23
  bc:	mov	x1, x25
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
  c8:	ldp	x20, x19, [sp, #96]
  cc:	ldp	x22, x21, [sp, #80]
  d0:	ldp	x24, x23, [sp, #64]
  d4:	ldr	x25, [sp, #48]
  d8:	ldp	x29, x30, [sp, #32]
  dc:	add	sp, sp, #0x70
  e0:	ret
  e4:	mov	x0, x24
  e8:	mov	x1, x22
  ec:	mov	x2, x21
  f0:	mov	x3, x19
  f4:	ldp	x20, x19, [sp, #96]
  f8:	ldp	x22, x21, [sp, #80]
  fc:	ldp	x24, x23, [sp, #64]
 100:	ldr	x25, [sp, #48]
 104:	ldp	x29, x30, [sp, #32]
 108:	mov	x4, xzr
 10c:	add	sp, sp, #0x70
 110:	b	0 <_ZN4llvm12ConstantExpr14getInsertValueEPNS_8ConstantES2_NS_8ArrayRefIjEEPNS_4TypeE>
 114:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 118:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 11c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE17CreateInsertValueEPNS_5ValueES5_NS_8ArrayRefIjEERKNS_5TwineE>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x69                  	// #105
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_15InsertValueInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase16getOperandBundleEj:

0000000000000000 <_ZNK4llvm8CallBase16getOperandBundleEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	w9, [x0, #20]
  1c:	mov	w21, w1
  20:	mov	x20, x0
  24:	mov	x19, x8
  28:	tbnz	w9, #31, 44 <_ZNK4llvm8CallBase16getOperandBundleEj+0x44>
  2c:	mov	x22, xzr
  30:	mov	x8, xzr
  34:	sub	x8, x8, x22
  38:	lsr	x9, x8, #4
  3c:	cbnz	w9, 84 <_ZNK4llvm8CallBase16getOperandBundleEj+0x84>
  40:	b	118 <_ZNK4llvm8CallBase16getOperandBundleEj+0x118>
  44:	mov	x0, x20
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	ldr	w8, [x20, #20]
  50:	mov	x22, x0
  54:	tbnz	w8, #31, 6c <_ZNK4llvm8CallBase16getOperandBundleEj+0x6c>
  58:	mov	x8, xzr
  5c:	sub	x8, x8, x22
  60:	lsr	x9, x8, #4
  64:	cbnz	w9, 84 <_ZNK4llvm8CallBase16getOperandBundleEj+0x84>
  68:	b	118 <_ZNK4llvm8CallBase16getOperandBundleEj+0x118>
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  74:	add	x8, x0, x1
  78:	sub	x8, x8, x22
  7c:	lsr	x9, x8, #4
  80:	cbz	w9, 118 <_ZNK4llvm8CallBase16getOperandBundleEj+0x118>
  84:	mov	x24, xzr
  88:	mov	w23, wzr
  8c:	ubfx	x25, x8, #4, #32
  90:	b	d4 <_ZNK4llvm8CallBase16getOperandBundleEj+0xd4>
  94:	mov	x22, xzr
  98:	mov	x8, xzr
  9c:	sub	x8, x8, x22
  a0:	lsr	x8, x8, #4
  a4:	cmp	x24, w8, uxtw
  a8:	b.cs	208 <_ZNK4llvm8CallBase16getOperandBundleEj+0x208>  // b.hs, b.nlast
  ac:	mov	x0, x20
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	lsl	x8, x24, #4
  b8:	ldr	x8, [x0, x8]
  bc:	add	x24, x24, #0x1
  c0:	ldr	w8, [x8, #8]
  c4:	cmp	w8, w21
  c8:	cinc	w23, w23, eq  // eq = none
  cc:	cmp	x24, x25
  d0:	b.eq	110 <_ZNK4llvm8CallBase16getOperandBundleEj+0x110>  // b.none
  d4:	ldr	w8, [x20, #20]
  d8:	tbz	w8, #31, 94 <_ZNK4llvm8CallBase16getOperandBundleEj+0x94>
  dc:	mov	x0, x20
  e0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  e4:	ldr	w8, [x20, #20]
  e8:	mov	x22, x0
  ec:	tbz	w8, #31, 98 <_ZNK4llvm8CallBase16getOperandBundleEj+0x98>
  f0:	mov	x0, x20
  f4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f8:	add	x8, x0, x1
  fc:	sub	x8, x8, x22
 100:	lsr	x8, x8, #4
 104:	cmp	x24, w8, uxtw
 108:	b.cc	ac <_ZNK4llvm8CallBase16getOperandBundleEj+0xac>  // b.lo, b.ul, b.last
 10c:	b	208 <_ZNK4llvm8CallBase16getOperandBundleEj+0x208>
 110:	cmp	w23, #0x2
 114:	b.cs	27c <_ZNK4llvm8CallBase16getOperandBundleEj+0x27c>  // b.hs, b.nlast
 118:	ldr	w8, [x20, #20]
 11c:	tbnz	w8, #31, 138 <_ZNK4llvm8CallBase16getOperandBundleEj+0x138>
 120:	mov	x22, xzr
 124:	mov	x8, xzr
 128:	sub	x8, x8, x22
 12c:	lsr	x9, x8, #4
 130:	cbnz	w9, 178 <_ZNK4llvm8CallBase16getOperandBundleEj+0x178>
 134:	b	228 <_ZNK4llvm8CallBase16getOperandBundleEj+0x228>
 138:	mov	x0, x20
 13c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 140:	ldr	w8, [x20, #20]
 144:	mov	x22, x0
 148:	tbnz	w8, #31, 160 <_ZNK4llvm8CallBase16getOperandBundleEj+0x160>
 14c:	mov	x8, xzr
 150:	sub	x8, x8, x22
 154:	lsr	x9, x8, #4
 158:	cbnz	w9, 178 <_ZNK4llvm8CallBase16getOperandBundleEj+0x178>
 15c:	b	228 <_ZNK4llvm8CallBase16getOperandBundleEj+0x228>
 160:	mov	x0, x20
 164:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 168:	add	x8, x0, x1
 16c:	sub	x8, x8, x22
 170:	lsr	x9, x8, #4
 174:	cbz	w9, 228 <_ZNK4llvm8CallBase16getOperandBundleEj+0x228>
 178:	mov	x23, xzr
 17c:	ubfx	x24, x8, #4, #32
 180:	mov	w25, #0x8                   	// #8
 184:	ldr	w8, [x20, #20]
 188:	tbnz	w8, #31, 194 <_ZNK4llvm8CallBase16getOperandBundleEj+0x194>
 18c:	mov	x22, xzr
 190:	b	1a8 <_ZNK4llvm8CallBase16getOperandBundleEj+0x1a8>
 194:	mov	x0, x20
 198:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 19c:	ldr	w8, [x20, #20]
 1a0:	mov	x22, x0
 1a4:	tbnz	w8, #31, 1ec <_ZNK4llvm8CallBase16getOperandBundleEj+0x1ec>
 1a8:	mov	x8, xzr
 1ac:	sub	x8, x8, x22
 1b0:	lsr	x8, x8, #4
 1b4:	cmp	x23, w8, uxtw
 1b8:	b.cs	208 <_ZNK4llvm8CallBase16getOperandBundleEj+0x208>  // b.hs, b.nlast
 1bc:	mov	x0, x20
 1c0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1c4:	add	x9, x0, x25
 1c8:	ldur	x8, [x9, #-8]
 1cc:	ldr	w10, [x8, #8]
 1d0:	cmp	w10, w21
 1d4:	b.eq	234 <_ZNK4llvm8CallBase16getOperandBundleEj+0x234>  // b.none
 1d8:	add	x23, x23, #0x1
 1dc:	cmp	x24, x23
 1e0:	add	x25, x25, #0x10
 1e4:	b.ne	184 <_ZNK4llvm8CallBase16getOperandBundleEj+0x184>  // b.any
 1e8:	b	228 <_ZNK4llvm8CallBase16getOperandBundleEj+0x228>
 1ec:	mov	x0, x20
 1f0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 1f4:	add	x8, x0, x1
 1f8:	sub	x8, x8, x22
 1fc:	lsr	x8, x8, #4
 200:	cmp	x23, w8, uxtw
 204:	b.cc	1bc <_ZNK4llvm8CallBase16getOperandBundleEj+0x1bc>  // b.lo, b.ul, b.last
 208:	adrp	x0, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 20c:	adrp	x1, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 210:	adrp	x3, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 214:	add	x0, x0, #0x0
 218:	add	x1, x1, #0x0
 21c:	add	x3, x3, #0x0
 220:	mov	w2, #0x716                 	// #1814
 224:	bl	0 <__assert_fail>
 228:	mov	w8, wzr
 22c:	strb	wzr, [x19]
 230:	b	260 <_ZNK4llvm8CallBase16getOperandBundleEj+0x260>
 234:	ldp	w10, w9, [x9]
 238:	ldr	w11, [x20, #20]
 23c:	mov	w12, #0x18                  	// #24
 240:	str	x8, [x19, #16]
 244:	sub	x8, x9, x10
 248:	and	x9, x11, #0xfffffff
 24c:	mneg	x9, x9, x12
 250:	add	x9, x20, x9
 254:	madd	x9, x10, x12, x9
 258:	stp	x9, x8, [x19]
 25c:	mov	w8, #0x1                   	// #1
 260:	strb	w8, [x19, #24]
 264:	ldp	x20, x19, [sp, #64]
 268:	ldp	x22, x21, [sp, #48]
 26c:	ldp	x24, x23, [sp, #32]
 270:	ldr	x25, [sp, #16]
 274:	ldp	x29, x30, [sp], #80
 278:	ret
 27c:	adrp	x0, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 280:	adrp	x1, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 284:	adrp	x3, 0 <_ZNK4llvm8CallBase16getOperandBundleEj>
 288:	add	x0, x0, #0x0
 28c:	add	x1, x1, #0x0
 290:	add	x3, x3, #0x0
 294:	mov	w2, #0x745                 	// #1861
 298:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_17CleanupReturnInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10ReturnInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_:

0000000000000000 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	x8, x1, #0x48
   c:	str	x8, [x0]
  10:	ldr	x9, [x1, #80]
  14:	cmp	x9, x8
  18:	stp	x9, xzr, [x0, #8]
  1c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  20:	ldrb	w10, [x9]
  24:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  28:	ldr	x10, [x9, #24]
  2c:	str	x10, [x0, #16]
  30:	ldrb	w11, [x9]
  34:	tbnz	w11, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  38:	sub	x11, x9, #0x18
  3c:	cmp	x9, #0x0
  40:	csel	x11, xzr, x11, eq  // eq = none
  44:	add	x11, x11, #0x28
  48:	cmp	x10, x11
  4c:	b.ne	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.any
  50:	ldr	x9, [x9, #8]
  54:	cmp	x8, x9
  58:	str	x9, [x0, #8]
  5c:	b.eq	a4 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0xa4>  // b.none
  60:	ldrb	w10, [x9]
  64:	tbnz	w10, #2, 84 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x84>
  68:	sub	x10, x9, #0x18
  6c:	cmp	x9, #0x0
  70:	csel	x10, xzr, x10, eq  // eq = none
  74:	ldr	x10, [x10, #48]
  78:	str	x10, [x0, #16]
  7c:	ldrb	w11, [x9]
  80:	tbz	w11, #2, 38 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_+0x38>
  84:	adrp	x0, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  88:	adrp	x1, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  8c:	adrp	x3, 0 <_ZN4llvm12InstIteratorINS_15SymbolTableListINS_10BasicBlockEEENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS2_Lb1ELb0EvEELb0ELb0EEENS4_INS6_INS_11InstructionELb1ELb0EvEELb0ELb0EEES9_EC2INS_8FunctionEEERT_>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x8b                  	// #139
  a0:	bl	0 <__assert_fail>
  a4:	ldp	x29, x30, [sp], #16
  a8:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_5ValueES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	174 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x174>  // b.any
  1c:	cbz	w9, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x10, x9, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x8, #0x10
  40:	add	x10, x8, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  68:	mov	x10, x8
  6c:	add	x8, x8, x9, lsl #4
  70:	mov	x11, #0xfffffffffffffff8    	// #-8
  74:	str	x11, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb8>  // b.none
  88:	cbz	w9, 9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>
  8c:	mov	w8, wzr
  90:	sub	w9, w9, #0x1
  94:	mov	x10, #0xfffffffffffffff0    	// #-16
  98:	b	e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xe8>
  9c:	ldr	x8, [x1]
  a0:	orr	x8, x8, #0x8
  a4:	cmn	x8, #0x8
  a8:	b.ne	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x170>  // b.any
  ac:	add	x1, x1, #0x10
  b0:	cmp	x2, x1
  b4:	b.ne	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>  // b.any
  b8:	ldp	x29, x30, [sp], #16
  bc:	ret
  c0:	cmp	x15, #0x0
  c4:	csel	x12, x13, x15, eq  // eq = none
  c8:	str	x11, [x12]
  cc:	ldr	x11, [x1, #8]
  d0:	add	w8, w8, #0x1
  d4:	str	x11, [x12, #8]
  d8:	str	w8, [x0, #16]
  dc:	add	x1, x1, #0x10
  e0:	cmp	x1, x2
  e4:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb8>  // b.none
  e8:	ldr	x11, [x1]
  ec:	orr	x12, x11, #0x8
  f0:	cmn	x12, #0x8
  f4:	b.eq	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xdc>  // b.none
  f8:	ldr	x12, [x0, #8]
  fc:	ubfx	x13, x11, #4, #28
 100:	eor	w13, w13, w11, lsr #9
 104:	and	w14, w13, w9
 108:	add	x13, x12, w14, uxtw #4
 10c:	ldr	x16, [x13]
 110:	cmp	x16, x11
 114:	b.eq	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x150>  // b.none
 118:	mov	x15, xzr
 11c:	mov	w17, #0x1                   	// #1
 120:	cmn	x16, #0x8
 124:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xc0>  // b.none
 128:	cmp	x15, #0x0
 12c:	add	w14, w14, w17
 130:	ccmp	x16, x10, #0x0, eq  // eq = none
 134:	and	w14, w14, w9
 138:	csel	x15, x15, x13, ne  // ne = any
 13c:	add	x13, x12, w14, uxtw #4
 140:	ldr	x16, [x13]
 144:	add	w17, w17, #0x1
 148:	cmp	x16, x11
 14c:	b.ne	120 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x120>  // b.any
 150:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 154:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 158:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 15c:	add	x0, x0, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0x17a                 	// #378
 16c:	bl	0 <__assert_fail>
 170:	brk	#0x1
 174:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 178:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 17c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_5ValueES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x15c                 	// #348
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, x0
   c:	b.ne	478 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x478>  // b.any
  10:	sub	x8, x3, x1
  14:	cmp	x8, #0x4
  18:	b.lt	12c <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x12c>  // b.tstop
  1c:	ldr	w12, [x2, #20]
  20:	asr	x11, x8, #2
  24:	mov	w10, #0x18                  	// #24
  28:	ubfx	w9, w12, #1, #27
  2c:	and	x8, x12, #0xfffffff
  30:	sub	w9, w9, #0x1
  34:	tbnz	w12, #30, 158 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x158>
  38:	mneg	x12, x8, x10
  3c:	lsl	w14, w1, #1
  40:	add	x11, x11, #0x1
  44:	add	x13, x2, x12
  48:	add	w14, w14, #0x8
  4c:	mov	x15, x1
  50:	mov	x12, x15
  54:	cmp	w9, w12
  58:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
  5c:	sub	w15, w14, #0x6
  60:	cmp	w8, w15
  64:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
  68:	umull	x15, w15, w10
  6c:	ldr	x15, [x13, x15]
  70:	cmp	x15, x4
  74:	b.eq	3a8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x3a8>  // b.none
  78:	cmn	x1, #0x1
  7c:	b.lt	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.tstop
  80:	add	x15, x12, #0x1
  84:	cmp	w9, w15
  88:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
  8c:	cmp	w9, w15
  90:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
  94:	sub	w16, w14, #0x4
  98:	cmp	w8, w16
  9c:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
  a0:	umull	x16, w16, w10
  a4:	ldr	x16, [x13, x16]
  a8:	cmp	x16, x4
  ac:	b.eq	3d8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x3d8>  // b.none
  b0:	add	x15, x15, #0x1
  b4:	cmp	w9, w15
  b8:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
  bc:	cmp	w9, w15
  c0:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
  c4:	sub	w16, w14, #0x2
  c8:	cmp	w8, w16
  cc:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
  d0:	umull	x16, w16, w10
  d4:	ldr	x16, [x13, x16]
  d8:	cmp	x16, x4
  dc:	b.eq	3e8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x3e8>  // b.none
  e0:	add	x15, x15, #0x1
  e4:	cmp	w9, w15
  e8:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
  ec:	cmp	w9, w15
  f0:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
  f4:	cmp	w8, w14
  f8:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
  fc:	umull	x16, w14, w10
 100:	ldr	x16, [x13, x16]
 104:	cmp	x16, x4
 108:	b.eq	3f8 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x3f8>  // b.none
 10c:	add	x15, x15, #0x1
 110:	cmp	w9, w15
 114:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
 118:	sub	x11, x11, #0x1
 11c:	cmp	x11, #0x1
 120:	add	w14, w14, #0x8
 124:	b.gt	50 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x50>
 128:	add	x1, x12, #0x4
 12c:	sub	x8, x3, x1
 130:	cmp	x8, #0x3
 134:	b.eq	254 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x254>  // b.none
 138:	cmp	x8, #0x2
 13c:	b.eq	290 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x290>  // b.none
 140:	cmp	x8, #0x1
 144:	b.ne	380 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x380>  // b.any
 148:	ldr	w9, [x2, #20]
 14c:	ubfx	w8, w9, #1, #27
 150:	sub	w8, w8, #0x1
 154:	b	328 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x328>
 158:	lsl	w12, w1, #1
 15c:	add	x11, x11, #0x1
 160:	add	w12, w12, #0x4
 164:	mov	x14, x1
 168:	mov	x13, x14
 16c:	cmp	w9, w13
 170:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
 174:	sub	w15, w12, #0x2
 178:	cmp	w8, w15
 17c:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
 180:	ldur	x14, [x2, #-8]
 184:	umull	x15, w15, w10
 188:	ldr	x15, [x14, x15]
 18c:	cmp	x15, x4
 190:	b.eq	3c0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x3c0>  // b.none
 194:	cmn	x1, #0x1
 198:	b.lt	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.tstop
 19c:	add	x15, x13, #0x1
 1a0:	cmp	w9, w15
 1a4:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
 1a8:	cmp	w9, w15
 1ac:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
 1b0:	cmp	w8, w12
 1b4:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
 1b8:	umull	x16, w12, w10
 1bc:	ldr	x16, [x14, x16]
 1c0:	cmp	x16, x4
 1c4:	b.eq	3e0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x3e0>  // b.none
 1c8:	add	x15, x15, #0x1
 1cc:	cmp	w9, w15
 1d0:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
 1d4:	cmp	w9, w15
 1d8:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
 1dc:	add	w16, w12, #0x2
 1e0:	cmp	w8, w16
 1e4:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
 1e8:	umull	x16, w16, w10
 1ec:	ldr	x16, [x14, x16]
 1f0:	cmp	x16, x4
 1f4:	b.eq	3f0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x3f0>  // b.none
 1f8:	add	x15, x15, #0x1
 1fc:	cmp	w9, w15
 200:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
 204:	cmp	w9, w15
 208:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
 20c:	add	w16, w12, #0x4
 210:	cmp	w8, w16
 214:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
 218:	umull	x16, w16, w10
 21c:	ldr	x14, [x14, x16]
 220:	cmp	x14, x4
 224:	b.eq	400 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x400>  // b.none
 228:	add	x14, x15, #0x1
 22c:	cmp	w9, w14
 230:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
 234:	sub	x11, x11, #0x1
 238:	cmp	x11, #0x2
 23c:	add	w12, w12, #0x8
 240:	b.ge	168 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x168>  // b.tcont
 244:	add	x1, x13, #0x4
 248:	sub	x8, x3, x1
 24c:	cmp	x8, #0x3
 250:	b.ne	138 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x138>  // b.any
 254:	ldr	w9, [x2, #20]
 258:	ubfx	w8, w9, #1, #27
 25c:	sub	w8, w8, #0x1
 260:	cmp	w8, w1
 264:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
 268:	lsl	w10, w1, #1
 26c:	add	w10, w10, #0x2
 270:	and	x11, x9, #0xfffffff
 274:	cmp	w11, w10
 278:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
 27c:	tbnz	w9, #30, 2a0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2a0>
 280:	mov	w12, #0x18                  	// #24
 284:	mneg	x11, x11, x12
 288:	add	x11, x2, x11
 28c:	b	2a4 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2a4>
 290:	ldr	w9, [x2, #20]
 294:	ubfx	w8, w9, #1, #27
 298:	sub	w8, w8, #0x1
 29c:	b	2cc <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2cc>
 2a0:	ldur	x11, [x2, #-8]
 2a4:	mov	w12, #0x18                  	// #24
 2a8:	umull	x10, w10, w12
 2ac:	ldr	x10, [x11, x10]
 2b0:	cmp	x10, x4
 2b4:	b.eq	390 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x390>  // b.none
 2b8:	cmn	x1, #0x1
 2bc:	b.lt	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.tstop
 2c0:	add	x1, x1, #0x1
 2c4:	cmp	w8, w1
 2c8:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
 2cc:	cmp	w8, w1
 2d0:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
 2d4:	lsl	w10, w1, #1
 2d8:	add	w10, w10, #0x2
 2dc:	and	w11, w9, #0xfffffff
 2e0:	cmp	w11, w10
 2e4:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
 2e8:	tbnz	w9, #30, 2fc <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2fc>
 2ec:	mov	w12, #0x18                  	// #24
 2f0:	mneg	x11, x11, x12
 2f4:	add	x11, x2, x11
 2f8:	b	300 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x300>
 2fc:	ldur	x11, [x2, #-8]
 300:	mov	w12, #0x18                  	// #24
 304:	umull	x10, w10, w12
 308:	ldr	x10, [x11, x10]
 30c:	cmp	x10, x4
 310:	b.eq	390 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x390>  // b.none
 314:	cmn	x1, #0x1
 318:	b.lt	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.tstop
 31c:	add	x1, x1, #0x1
 320:	cmp	w8, w1
 324:	b.cc	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.lo, b.ul, b.last
 328:	cmp	w8, w1
 32c:	b.ls	438 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x438>  // b.plast
 330:	lsl	w10, w1, #1
 334:	add	w10, w10, #0x2
 338:	and	w11, w9, #0xfffffff
 33c:	cmp	w11, w10
 340:	b.ls	458 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x458>  // b.plast
 344:	tbnz	w9, #30, 358 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x358>
 348:	mov	w9, #0x18                  	// #24
 34c:	mneg	x9, x11, x9
 350:	add	x9, x2, x9
 354:	b	35c <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x35c>
 358:	ldur	x9, [x2, #-8]
 35c:	mov	w11, #0x18                  	// #24
 360:	umull	x10, w10, w11
 364:	ldr	x9, [x9, x10]
 368:	cmp	x9, x4
 36c:	b.eq	390 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x390>  // b.none
 370:	cmn	x1, #0x1
 374:	b.lt	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.tstop
 378:	cmp	w8, w1
 37c:	b.ls	418 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x418>  // b.plast
 380:	mov	x0, x2
 384:	mov	x1, x3
 388:	ldp	x29, x30, [sp], #16
 38c:	ret
 390:	mov	x2, x0
 394:	mov	x3, x1
 398:	mov	x0, x2
 39c:	mov	x1, x3
 3a0:	ldp	x29, x30, [sp], #16
 3a4:	ret
 3a8:	mov	x2, x0
 3ac:	mov	x3, x12
 3b0:	mov	x0, x2
 3b4:	mov	x1, x3
 3b8:	ldp	x29, x30, [sp], #16
 3bc:	ret
 3c0:	mov	x2, x0
 3c4:	mov	x3, x13
 3c8:	mov	x0, x2
 3cc:	mov	x1, x3
 3d0:	ldp	x29, x30, [sp], #16
 3d4:	ret
 3d8:	add	x3, x12, #0x1
 3dc:	b	404 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x404>
 3e0:	add	x3, x13, #0x1
 3e4:	b	404 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x404>
 3e8:	add	x3, x12, #0x2
 3ec:	b	404 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x404>
 3f0:	add	x3, x13, #0x2
 3f4:	b	404 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x404>
 3f8:	add	x3, x12, #0x3
 3fc:	b	404 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag+0x404>
 400:	add	x3, x13, #0x3
 404:	mov	x2, x0
 408:	mov	x0, x2
 40c:	mov	x1, x3
 410:	ldp	x29, x30, [sp], #16
 414:	ret
 418:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 41c:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 420:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 424:	add	x0, x0, #0x0
 428:	add	x1, x1, #0x0
 42c:	add	x3, x3, #0x0
 430:	mov	w2, #0xcd4                 	// #3284
 434:	bl	0 <__assert_fail>
 438:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 43c:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 440:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 444:	add	x0, x0, #0x0
 448:	add	x1, x1, #0x0
 44c:	add	x3, x3, #0x0
 450:	mov	w2, #0xc79                 	// #3193
 454:	bl	0 <__assert_fail>
 458:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 45c:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 460:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 464:	add	x0, x0, #0x0
 468:	add	x1, x1, #0x0
 46c:	add	x3, x3, #0x0
 470:	mov	w2, #0xdbe                 	// #3518
 474:	bl	0 <__assert_fail>
 478:	adrp	x0, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 47c:	adrp	x1, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 480:	adrp	x3, 0 <_ZSt9__find_ifIN4llvm10SwitchInst16CaseIteratorImplINS1_10CaseHandleEEEN9__gnu_cxx5__ops10_Iter_predIZNS1_13findCaseValueEPKNS0_11ConstantIntEEUlRS3_E_EEET_SE_SE_T0_St26random_access_iterator_tag>
 484:	add	x0, x0, #0x0
 488:	add	x1, x1, #0x0
 48c:	add	x3, x3, #0x0
 490:	mov	w2, #0xce2                 	// #3298
 494:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape15getSwitchCoroIdEv:

0000000000000000 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	cbnz	w8, 84 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x84>
  10:	ldr	x0, [x0]
  14:	mov	w1, wzr
  18:	bl	0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  1c:	cbz	x0, a4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xa4>
  20:	ldrb	w8, [x0, #16]
  24:	cmp	w8, #0x50
  28:	b.ne	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.any
  2c:	ldur	x8, [x0, #-24]
  30:	cbz	x8, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  34:	ldrb	w9, [x8, #16]
  38:	cbnz	w9, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  3c:	ldrb	w9, [x8, #33]
  40:	tbz	w9, #5, 64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>
  44:	ldr	w8, [x8, #36]
  48:	sub	w9, w8, #0x18
  4c:	cmp	w9, #0x3
  50:	b.cs	64 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0x64>  // b.hs, b.nlast
  54:	cmp	w8, #0x18
  58:	b.ne	c4 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv+0xc4>  // b.any
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  68:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  6c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  88:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  8c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x86                  	// #134
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  a8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  ac:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x69                  	// #105
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  c8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  cc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape15getSwitchCoroIdEv>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x108                 	// #264
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	cbz	x1, 268 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x268>
  20:	ldrb	w8, [x1, #16]
  24:	mov	x22, x5
  28:	mov	x19, x4
  2c:	mov	x23, x3
  30:	mov	x24, x2
  34:	mov	x25, x1
  38:	mov	x20, x0
  3c:	cmp	w8, #0x10
  40:	b.hi	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x64>  // b.pmore
  44:	cbz	x24, 268 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x268>
  48:	ldrb	w8, [x24, #16]
  4c:	cmp	w8, #0x10
  50:	b.hi	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x64>  // b.pmore
  54:	cbz	x23, 268 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x268>
  58:	ldrb	w8, [x23, #16]
  5c:	cmp	w8, #0x10
  60:	b.ls	23c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x23c>  // b.plast
  64:	mov	w8, #0x101                 	// #257
  68:	mov	w0, #0x38                  	// #56
  6c:	mov	w1, #0x3                   	// #3
  70:	stp	xzr, xzr, [sp, #8]
  74:	strh	w8, [sp, #24]
  78:	bl	0 <_ZN4llvm4UsernwEmj>
  7c:	ldr	x1, [x24]
  80:	sub	x3, x0, #0x48
  84:	mov	w2, #0x39                  	// #57
  88:	mov	w4, #0x3                   	// #3
  8c:	mov	x5, xzr
  90:	mov	x21, x0
  94:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  98:	mov	x0, x21
  9c:	mov	x1, x25
  a0:	mov	x2, x24
  a4:	mov	x3, x23
  a8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
  ac:	add	x1, sp, #0x8
  b0:	mov	x0, x21
  b4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  b8:	cbz	x22, 13c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x13c>
  bc:	ldr	x8, [x22, #48]
  c0:	cbz	x8, f0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xf0>
  c4:	mov	w1, #0x2                   	// #2
  c8:	mov	x0, x22
  cc:	bl	0 <_ZNK4llvm11Instruction15getMetadataImplEj>
  d0:	ldr	x8, [x22, #48]
  d4:	mov	x23, x0
  d8:	cbnz	x8, 104 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x104>
  dc:	ldrsh	w8, [x22, #18]
  e0:	tbnz	w8, #31, 104 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x104>
  e4:	mov	x22, xzr
  e8:	cbnz	x23, 118 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x118>
  ec:	b	128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x128>
  f0:	ldrsh	w8, [x22, #18]
  f4:	tbnz	w8, #31, c4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xc4>
  f8:	mov	x23, xzr
  fc:	ldrsh	w8, [x22, #18]
 100:	tbz	w8, #31, e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0xe4>
 104:	mov	w1, #0xf                   	// #15
 108:	mov	x0, x22
 10c:	bl	0 <_ZNK4llvm11Instruction15getMetadataImplEj>
 110:	mov	x22, x0
 114:	cbz	x23, 128 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x128>
 118:	mov	w1, #0x2                   	// #2
 11c:	mov	x0, x21
 120:	mov	x2, x23
 124:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 128:	cbz	x22, 13c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x13c>
 12c:	mov	w1, #0xf                   	// #15
 130:	mov	x0, x21
 134:	mov	x2, x22
 138:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 13c:	cbz	x21, 288 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x288>
 140:	ldrb	w9, [x21, #16]
 144:	subs	w8, w9, #0x18
 148:	b.cs	158 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x158>  // b.hs, b.nlast
 14c:	cmp	w9, #0x5
 150:	b.ne	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>  // b.any
 154:	ldrh	w8, [x21, #18]
 158:	cmp	w8, #0x39
 15c:	b.hi	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>  // b.pmore
 160:	mov	x10, #0x5000                	// #20480
 164:	mov	w9, #0x1                   	// #1
 168:	movk	x10, #0x125, lsl #16
 16c:	lsl	x9, x9, x8
 170:	movk	x10, #0x40, lsl #48
 174:	tst	x9, x10
 178:	b.eq	1cc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1cc>  // b.none
 17c:	ldr	x2, [x20, #32]
 180:	ldr	w22, [x20, #40]
 184:	cbz	x2, 194 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x194>
 188:	mov	w1, #0x3                   	// #3
 18c:	mov	x0, x21
 190:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 194:	mov	x0, x21
 198:	mov	x1, x22
 19c:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 1a0:	mov	x0, x20
 1a4:	mov	x1, x21
 1a8:	mov	x2, x19
 1ac:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 1b0:	ldp	x20, x19, [sp, #96]
 1b4:	ldp	x22, x21, [sp, #80]
 1b8:	ldp	x24, x23, [sp, #64]
 1bc:	ldr	x25, [sp, #48]
 1c0:	ldp	x29, x30, [sp, #32]
 1c4:	add	sp, sp, #0x70
 1c8:	ret
 1cc:	mov	w9, #0x1                   	// #1
 1d0:	lsl	x8, x9, x8
 1d4:	tst	x8, #0x380000000000000
 1d8:	b.eq	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>  // b.none
 1dc:	ldr	x8, [x21]
 1e0:	cbz	x8, 1f8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1f8>
 1e4:	ldrb	w9, [x8, #8]
 1e8:	cmp	w9, #0xe
 1ec:	b.ne	218 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x218>  // b.any
 1f0:	ldr	x8, [x8, #24]
 1f4:	cbnz	x8, 1e4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1e4>
 1f8:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 1fc:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 200:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 204:	add	x0, x0, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x3, x3, #0x0
 210:	mov	w2, #0x69                  	// #105
 214:	bl	0 <__assert_fail>
 218:	cmp	w9, #0x10
 21c:	b.ne	22c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x22c>  // b.any
 220:	ldr	x8, [x8, #16]
 224:	ldr	x8, [x8]
 228:	ldrb	w9, [x8, #8]
 22c:	sub	w8, w9, #0x1
 230:	cmp	w8, #0x5
 234:	b.ls	17c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x17c>  // b.plast
 238:	b	1a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE+0x1a0>
 23c:	mov	x0, x25
 240:	mov	x1, x24
 244:	mov	x2, x23
 248:	ldp	x20, x19, [sp, #96]
 24c:	ldp	x22, x21, [sp, #80]
 250:	ldp	x24, x23, [sp, #64]
 254:	ldr	x25, [sp, #48]
 258:	ldp	x29, x30, [sp, #32]
 25c:	mov	x3, xzr
 260:	add	sp, sp, #0x70
 264:	b	0 <_ZN4llvm12ConstantExpr9getSelectEPNS_8ConstantES2_S2_PNS_4TypeE>
 268:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 26c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 270:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 274:	add	x0, x0, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x3, x3, #0x0
 280:	mov	w2, #0x69                  	// #105
 284:	bl	0 <__assert_fail>
 288:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 28c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 290:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE12CreateSelectEPNS_5ValueES5_S5_RKNS_5TwineEPNS_11InstructionE>
 294:	add	x0, x0, #0x0
 298:	add	x1, x1, #0x0
 29c:	add	x3, x3, #0x0
 2a0:	mov	w2, #0x69                  	// #105
 2a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_10SelectInstEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_:

0000000000000000 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x2
  14:	mov	x22, x1
  18:	mov	x20, x0
  1c:	mov	x0, x1
  20:	mov	x1, x2
  24:	mov	x2, x3
  28:	mov	x19, x3
  2c:	bl	0 <_ZN4llvm10SelectInst18areInvalidOperandsEPNS_5ValueES2_S2_>
  30:	cbnz	x0, 1d4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1d4>
  34:	ldr	x8, [x20, #-72]!
  38:	cbz	x8, 60 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x60>
  3c:	ldp	x9, x8, [x20, #8]
  40:	and	x8, x8, #0xfffffffffffffffc
  44:	str	x9, [x8]
  48:	ldr	x9, [x20, #8]
  4c:	cbz	x9, 60 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x60>
  50:	ldr	x10, [x9, #16]
  54:	and	x10, x10, #0x3
  58:	orr	x8, x10, x8
  5c:	str	x8, [x9, #16]
  60:	str	x22, [x20]
  64:	cbz	x22, ac <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xac>
  68:	ldr	x8, [x22, #8]!
  6c:	mov	x9, x20
  70:	str	x8, [x9, #8]!
  74:	cbz	x8, 90 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x90>
  78:	tst	x9, #0x3
  7c:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
  80:	ldr	x10, [x8, #16]
  84:	and	x10, x10, #0x3
  88:	orr	x9, x10, x9
  8c:	str	x9, [x8, #16]
  90:	tst	x22, #0x3
  94:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
  98:	ldr	x8, [x20, #16]
  9c:	and	x8, x8, #0x3
  a0:	orr	x8, x8, x22
  a4:	str	x8, [x20, #16]
  a8:	str	x20, [x22]
  ac:	mov	x8, x20
  b0:	ldr	x9, [x8, #24]!
  b4:	cbz	x9, dc <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xdc>
  b8:	ldp	x10, x9, [x20, #32]
  bc:	and	x9, x9, #0xfffffffffffffffc
  c0:	str	x10, [x9]
  c4:	ldr	x10, [x20, #32]
  c8:	cbz	x10, dc <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0xdc>
  cc:	ldr	x11, [x10, #16]
  d0:	and	x11, x11, #0x3
  d4:	orr	x9, x11, x9
  d8:	str	x9, [x10, #16]
  dc:	str	x21, [x8]
  e0:	cbz	x21, 128 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x128>
  e4:	ldr	x9, [x21, #8]!
  e8:	mov	x10, x20
  ec:	str	x9, [x10, #32]!
  f0:	cbz	x9, 10c <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x10c>
  f4:	tst	x10, #0x3
  f8:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
  fc:	ldr	x11, [x9, #16]
 100:	and	x11, x11, #0x3
 104:	orr	x10, x11, x10
 108:	str	x10, [x9, #16]
 10c:	tst	x21, #0x3
 110:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
 114:	ldr	x9, [x20, #40]
 118:	and	x9, x9, #0x3
 11c:	orr	x9, x9, x21
 120:	str	x9, [x20, #40]
 124:	str	x8, [x21]
 128:	mov	x8, x20
 12c:	ldr	x9, [x8, #48]!
 130:	cbz	x9, 158 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x158>
 134:	ldp	x10, x9, [x20, #56]
 138:	and	x9, x9, #0xfffffffffffffffc
 13c:	str	x10, [x9]
 140:	ldr	x10, [x20, #56]
 144:	cbz	x10, 158 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x158>
 148:	ldr	x11, [x10, #16]
 14c:	and	x11, x11, #0x3
 150:	orr	x9, x11, x9
 154:	str	x9, [x10, #16]
 158:	str	x19, [x8]
 15c:	cbz	x19, 1a4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1a4>
 160:	ldr	x9, [x19, #8]!
 164:	mov	x10, x20
 168:	str	x9, [x10, #56]!
 16c:	cbz	x9, 188 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x188>
 170:	tst	x10, #0x3
 174:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
 178:	ldr	x11, [x9, #16]
 17c:	and	x11, x11, #0x3
 180:	orr	x10, x11, x10
 184:	str	x10, [x9, #16]
 188:	tst	x19, #0x3
 18c:	b.ne	1b4 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_+0x1b4>  // b.any
 190:	ldr	x9, [x20, #64]
 194:	and	x9, x9, #0x3
 198:	orr	x9, x9, x19
 19c:	str	x9, [x20, #64]
 1a0:	str	x8, [x19]
 1a4:	ldp	x20, x19, [sp, #32]
 1a8:	ldp	x22, x21, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	ret
 1b4:	adrp	x0, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1b8:	adrp	x1, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1bc:	adrp	x3, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0xb3                  	// #179
 1d0:	bl	0 <__assert_fail>
 1d4:	adrp	x0, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1d8:	adrp	x1, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1dc:	adrp	x3, 0 <_ZN4llvm10SelectInst4initEPNS_5ValueES2_S2_>
 1e0:	add	x0, x0, #0x0
 1e4:	add	x1, x1, #0x0
 1e8:	add	x3, x3, #0x0
 1ec:	mov	w2, #0x6cb                 	// #1739
 1f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE:

0000000000000000 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldrb	w8, [x0, #16]
  18:	mov	x19, x2
  1c:	mov	x21, x0
  20:	mov	w20, w1
  24:	cmp	w8, #0x50
  28:	b.eq	58 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x58>  // b.none
  2c:	cmp	w8, #0x23
  30:	b.eq	44 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x44>  // b.none
  34:	cmp	w8, #0x1d
  38:	b.ne	144 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x144>  // b.any
  3c:	mov	x8, #0xfffffffffffffffe    	// #-2
  40:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  4c:	mov	x8, xzr
  50:	sub	x8, x8, w0, uxtw
  54:	b	5c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x5c>
  58:	mov	x8, xzr
  5c:	mov	w22, #0x18                  	// #24
  60:	mov	x0, x21
  64:	madd	x23, x8, x22, x21
  68:	bl	0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
  6c:	ldr	w8, [x21, #20]
  70:	mov	w9, w0
  74:	mneg	x9, x9, x22
  78:	add	x10, x23, x9
  7c:	and	x9, x8, #0xfffffff
  80:	mneg	x8, x9, x22
  84:	add	x8, x21, x8
  88:	sub	x10, x10, x8
  8c:	sub	x10, x10, #0x18
  90:	mov	w11, #0xaaab                	// #43691
  94:	lsr	x10, x10, #3
  98:	movk	w11, #0xaaaa, lsl #16
  9c:	mul	w10, w10, w11
  a0:	cmp	w10, w20
  a4:	b.ls	15c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x15c>  // b.plast
  a8:	cmp	w9, w20
  ac:	b.ls	17c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x17c>  // b.plast
  b0:	mov	w9, #0x18                  	// #24
  b4:	umaddl	x8, w20, w9, x8
  b8:	ldr	x9, [x8]
  bc:	cbz	x9, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  c0:	ldp	x10, x9, [x8, #8]
  c4:	and	x9, x9, #0xfffffffffffffffc
  c8:	str	x10, [x9]
  cc:	ldr	x10, [x8, #8]
  d0:	cbz	x10, e4 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0xe4>
  d4:	ldr	x11, [x10, #16]
  d8:	and	x11, x11, #0x3
  dc:	orr	x9, x11, x9
  e0:	str	x9, [x10, #16]
  e4:	str	x19, [x8]
  e8:	cbz	x19, 130 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x130>
  ec:	ldr	x9, [x19, #8]!
  f0:	mov	x10, x8
  f4:	str	x9, [x10, #8]!
  f8:	cbz	x9, 114 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x114>
  fc:	tst	x10, #0x3
 100:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 104:	ldr	x11, [x9, #16]
 108:	and	x11, x11, #0x3
 10c:	orr	x10, x11, x10
 110:	str	x10, [x9, #16]
 114:	tst	x19, #0x3
 118:	b.ne	19c <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE+0x19c>  // b.any
 11c:	ldr	x9, [x8, #16]
 120:	and	x9, x9, #0x3
 124:	orr	x9, x9, x19
 128:	str	x9, [x8, #16]
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 148:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	mov	w2, #0x46a                 	// #1130
 158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 15c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 160:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 164:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x4e4                 	// #1252
 178:	bl	0 <__assert_fail>
 17c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 180:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 184:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 188:	add	x0, x0, #0x0
 18c:	add	x1, x1, #0x0
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x86a                 	// #2154
 198:	bl	0 <__assert_fail>
 19c:	adrp	x0, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a0:	adrp	x1, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a4:	adrp	x3, 0 <_ZN4llvm8CallBase13setArgOperandEjPNS_5ValueE>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xb3                  	// #179
 1b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #32]
   8:	str	x23, [sp, #48]
   c:	stp	x22, x21, [sp, #64]
  10:	stp	x20, x19, [sp, #80]
  14:	add	x29, sp, #0x20
  18:	mov	x20, x0
  1c:	mov	w8, #0x101                 	// #257
  20:	mov	w0, #0x40                  	// #64
  24:	mov	x19, x3
  28:	mov	w22, w2
  2c:	mov	x23, x1
  30:	stp	xzr, xzr, [sp, #8]
  34:	strh	w8, [sp, #24]
  38:	bl	0 <_ZN4llvm4UsernwEm>
  3c:	mov	w2, #0x37                  	// #55
  40:	mov	x1, x23
  44:	mov	x3, xzr
  48:	mov	w4, wzr
  4c:	mov	x5, xzr
  50:	mov	x21, x0
  54:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  58:	add	x1, sp, #0x8
  5c:	mov	x0, x21
  60:	str	w22, [x21, #56]
  64:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  68:	ldr	w1, [x21, #56]
  6c:	mov	w2, #0x1                   	// #1
  70:	mov	x0, x21
  74:	bl	0 <_ZN4llvm4User16allocHungoffUsesEjb>
  78:	cbz	x21, 174 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x174>
  7c:	ldrb	w9, [x21, #16]
  80:	subs	w8, w9, #0x18
  84:	b.cs	94 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x94>  // b.hs, b.nlast
  88:	cmp	w9, #0x5
  8c:	b.ne	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>  // b.any
  90:	ldrh	w8, [x21, #18]
  94:	cmp	w8, #0x39
  98:	b.hi	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>  // b.pmore
  9c:	mov	x10, #0x5000                	// #20480
  a0:	mov	w9, #0x1                   	// #1
  a4:	movk	x10, #0x125, lsl #16
  a8:	lsl	x9, x9, x8
  ac:	movk	x10, #0x40, lsl #48
  b0:	tst	x9, x10
  b4:	b.eq	104 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x104>  // b.none
  b8:	ldr	x2, [x20, #32]
  bc:	ldr	w22, [x20, #40]
  c0:	cbz	x2, d0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xd0>
  c4:	mov	w1, #0x3                   	// #3
  c8:	mov	x0, x21
  cc:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
  d0:	mov	x0, x21
  d4:	mov	x1, x22
  d8:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
  dc:	mov	x0, x20
  e0:	mov	x1, x21
  e4:	mov	x2, x19
  e8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
  ec:	ldp	x20, x19, [sp, #80]
  f0:	ldp	x22, x21, [sp, #64]
  f4:	ldr	x23, [sp, #48]
  f8:	ldp	x29, x30, [sp, #32]
  fc:	add	sp, sp, #0x60
 100:	ret
 104:	mov	w9, #0x1                   	// #1
 108:	lsl	x8, x9, x8
 10c:	tst	x8, #0x380000000000000
 110:	b.eq	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>  // b.none
 114:	ldr	x8, [x21]
 118:	cbz	x8, 130 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x130>
 11c:	ldrb	w9, [x8, #8]
 120:	cmp	w9, #0xe
 124:	b.ne	150 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x150>  // b.any
 128:	ldr	x8, [x8, #24]
 12c:	cbnz	x8, 11c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x11c>
 130:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 134:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 138:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x69                  	// #105
 14c:	bl	0 <__assert_fail>
 150:	cmp	w9, #0x10
 154:	b.ne	164 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0x164>  // b.any
 158:	ldr	x8, [x8, #16]
 15c:	ldr	x8, [x8]
 160:	ldrb	w9, [x8, #8]
 164:	sub	w8, w9, #0x1
 168:	cmp	w8, #0x5
 16c:	b.ls	b8 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xb8>  // b.plast
 170:	b	dc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE+0xdc>
 174:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 178:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 17c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreatePHIEPNS_4TypeEjRKNS_5TwineE>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x69                  	// #105
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm4coro5Shape20getRetconResultTypesEv:

0000000000000000 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #168]
   c:	sub	w8, w8, #0x1
  10:	cmp	w8, #0x2
  14:	b.cs	74 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x74>  // b.hs, b.nlast
  18:	ldr	x0, [x0]
  1c:	bl	0 <_ZNK4llvm11Instruction11getFunctionEv>
  20:	ldr	x8, [x0, #24]
  24:	cbz	x8, 94 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x94>
  28:	ldrb	w9, [x8, #8]
  2c:	cmp	w9, #0xc
  30:	b.ne	b4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xb4>  // b.any
  34:	ldr	x8, [x8, #16]
  38:	ldr	x8, [x8]
  3c:	cbz	x8, d4 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0xd4>
  40:	ldrb	w9, [x8, #8]
  44:	cmp	w9, #0xd
  48:	b.ne	64 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv+0x64>  // b.any
  4c:	ldr	w9, [x8, #12]
  50:	ldr	x8, [x8, #16]
  54:	sub	x1, x9, #0x1
  58:	add	x0, x8, #0x8
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	mov	x1, xzr
  68:	mov	x0, xzr
  6c:	ldp	x29, x30, [sp], #16
  70:	ret
  74:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  78:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  7c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0xae                  	// #174
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  98:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  9c:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x69                  	// #105
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  b8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  bc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x108                 	// #264
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  d8:	adrp	x1, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  dc:	adrp	x3, 0 <_ZNK4llvm4coro5Shape20getRetconResultTypesEv>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x69                  	// #105
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE:

0000000000000000 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x0, #8]
  18:	mov	x21, x2
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	cbz	x8, 6c <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0x6c>
  28:	ldr	x22, [x20, #16]
  2c:	add	x0, x8, #0x28
  30:	mov	x1, x19
  34:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  38:	mov	x8, x19
  3c:	ldr	x9, [x8, #24]!
  40:	ldr	x10, [x22]
  44:	tst	x8, #0x7
  48:	and	x11, x10, #0xfffffffffffffff8
  4c:	bfxil	x10, x9, #0, #3
  50:	stp	x10, x22, [x8]
  54:	str	x8, [x11, #8]
  58:	b.ne	f8 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xf8>  // b.any
  5c:	ldr	x9, [x22]
  60:	and	x9, x9, #0x7
  64:	orr	x8, x9, x8
  68:	str	x8, [x22]
  6c:	mov	x0, x19
  70:	mov	x1, x21
  74:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  78:	ldr	x1, [x20]
  7c:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xe0>
  80:	add	x0, sp, #0x8
  84:	mov	w2, #0x2                   	// #2
  88:	str	x1, [sp, #8]
  8c:	add	x21, sp, #0x8
  90:	bl	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  94:	add	x20, x19, #0x30
  98:	cmp	x20, x21
  9c:	b.eq	d0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xd0>  // b.none
  a0:	ldr	x1, [x20]
  a4:	cbz	x1, b0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xb0>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  b0:	ldr	x1, [sp, #8]
  b4:	str	x1, [x20]
  b8:	cbz	x1, d4 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xd4>
  bc:	add	x0, sp, #0x8
  c0:	mov	x2, x20
  c4:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  c8:	str	xzr, [sp, #8]
  cc:	b	e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xe0>
  d0:	ldr	x1, [sp, #8]
  d4:	cbz	x1, e0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE+0xe0>
  d8:	add	x0, sp, #0x8
  dc:	bl	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
  e0:	mov	x0, x19
  e4:	ldp	x20, x19, [sp, #48]
  e8:	ldp	x22, x21, [sp, #32]
  ec:	ldp	x29, x30, [sp, #16]
  f0:	add	sp, sp, #0x40
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>
  fc:	adrp	x1, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>
 100:	adrp	x3, 0 <_ZNK4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE6InsertINS_7PHINodeEEEPT_S7_RKNS_5TwineE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xb3                  	// #179
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1
