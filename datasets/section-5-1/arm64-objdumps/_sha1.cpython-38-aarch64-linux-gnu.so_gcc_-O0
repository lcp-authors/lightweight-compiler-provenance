
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__sha1@@Base+0xfa5c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__sha1@@Base-0x1784>:
     e20:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	stp	x29, x30, [sp, #-32]!
     e38:	mov	x29, sp
     e3c:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     e40:	add	x0, x0, #0x460
     e44:	str	x0, [sp, #24]
     e48:	ldr	x0, [sp, #24]
     e4c:	str	x0, [sp, #24]
     e50:	ldr	x1, [sp, #24]
     e54:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     e58:	add	x0, x0, #0x460
     e5c:	cmp	x1, x0
     e60:	b.eq	e98 <_Py_strhex@plt+0x88>  // b.none
     e64:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
     e68:	ldr	x0, [x0, #4008]
     e6c:	str	x0, [sp, #16]
     e70:	ldr	x0, [sp, #16]
     e74:	str	x0, [sp, #16]
     e78:	ldr	x0, [sp, #16]
     e7c:	cmp	x0, #0x0
     e80:	b.eq	e9c <_Py_strhex@plt+0x8c>  // b.none
     e84:	ldr	x1, [sp, #16]
     e88:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     e8c:	add	x0, x0, #0x460
     e90:	blr	x1
     e94:	b	e9c <_Py_strhex@plt+0x8c>
     e98:	nop
     e9c:	ldp	x29, x30, [sp], #32
     ea0:	ret
     ea4:	stp	x29, x30, [sp, #-48]!
     ea8:	mov	x29, sp
     eac:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     eb0:	add	x0, x0, #0x460
     eb4:	str	x0, [sp, #40]
     eb8:	ldr	x0, [sp, #40]
     ebc:	str	x0, [sp, #40]
     ec0:	ldr	x1, [sp, #40]
     ec4:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     ec8:	add	x0, x0, #0x460
     ecc:	sub	x0, x1, x0
     ed0:	asr	x0, x0, #3
     ed4:	lsr	x1, x0, #63
     ed8:	add	x0, x1, x0
     edc:	asr	x0, x0, #1
     ee0:	str	x0, [sp, #32]
     ee4:	ldr	x0, [sp, #32]
     ee8:	cmp	x0, #0x0
     eec:	b.eq	f28 <_Py_strhex@plt+0x118>  // b.none
     ef0:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
     ef4:	ldr	x0, [x0, #4064]
     ef8:	str	x0, [sp, #24]
     efc:	ldr	x0, [sp, #24]
     f00:	str	x0, [sp, #24]
     f04:	ldr	x0, [sp, #24]
     f08:	cmp	x0, #0x0
     f0c:	b.eq	f2c <_Py_strhex@plt+0x11c>  // b.none
     f10:	ldr	x2, [sp, #24]
     f14:	ldr	x1, [sp, #32]
     f18:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     f1c:	add	x0, x0, #0x460
     f20:	blr	x2
     f24:	b	f2c <_Py_strhex@plt+0x11c>
     f28:	nop
     f2c:	ldp	x29, x30, [sp], #48
     f30:	ret
     f34:	stp	x29, x30, [sp, #-16]!
     f38:	mov	x29, sp
     f3c:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     f40:	add	x0, x0, #0x460
     f44:	ldrb	w0, [x0]
     f48:	and	x0, x0, #0xff
     f4c:	cmp	x0, #0x0
     f50:	b.ne	f8c <_Py_strhex@plt+0x17c>  // b.any
     f54:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
     f58:	ldr	x0, [x0, #4016]
     f5c:	cmp	x0, #0x0
     f60:	b.eq	f74 <_Py_strhex@plt+0x164>  // b.none
     f64:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     f68:	add	x0, x0, #0x90
     f6c:	ldr	x0, [x0]
     f70:	bl	d20 <__cxa_finalize@plt>
     f74:	bl	e34 <_Py_strhex@plt+0x24>
     f78:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
     f7c:	add	x0, x0, #0x460
     f80:	mov	w1, #0x1                   	// #1
     f84:	strb	w1, [x0]
     f88:	b	f90 <_Py_strhex@plt+0x180>
     f8c:	nop
     f90:	ldp	x29, x30, [sp], #16
     f94:	ret
     f98:	stp	x29, x30, [sp, #-16]!
     f9c:	mov	x29, sp
     fa0:	bl	ea4 <_Py_strhex@plt+0x94>
     fa4:	nop
     fa8:	ldp	x29, x30, [sp], #16
     fac:	ret
     fb0:	sub	sp, sp, #0x10
     fb4:	str	x0, [sp, #8]
     fb8:	ldr	x0, [sp, #8]
     fbc:	ldr	x0, [x0]
     fc0:	add	x1, x0, #0x1
     fc4:	ldr	x0, [sp, #8]
     fc8:	str	x1, [x0]
     fcc:	nop
     fd0:	add	sp, sp, #0x10
     fd4:	ret
     fd8:	stp	x29, x30, [sp, #-48]!
     fdc:	mov	x29, sp
     fe0:	str	x0, [sp, #40]
     fe4:	str	w1, [sp, #36]
     fe8:	str	x2, [sp, #24]
     fec:	ldr	x0, [sp, #24]
     ff0:	ldr	x0, [x0]
     ff4:	sub	x1, x0, #0x1
     ff8:	ldr	x0, [sp, #24]
     ffc:	str	x1, [x0]
    1000:	ldr	x0, [sp, #24]
    1004:	ldr	x0, [x0]
    1008:	cmp	x0, #0x0
    100c:	b.ne	1018 <_Py_strhex@plt+0x208>  // b.any
    1010:	ldr	x0, [sp, #24]
    1014:	bl	d40 <_Py_Dealloc@plt>
    1018:	nop
    101c:	ldp	x29, x30, [sp], #48
    1020:	ret
    1024:	stp	x29, x30, [sp, #-32]!
    1028:	mov	x29, sp
    102c:	str	x0, [sp, #24]
    1030:	str	x1, [sp, #16]
    1034:	ldr	x0, [sp, #24]
    1038:	bl	2114 <_Py_strhex@plt+0x1304>
    103c:	ldp	x29, x30, [sp], #32
    1040:	ret
    1044:	stp	x29, x30, [sp, #-32]!
    1048:	mov	x29, sp
    104c:	str	x0, [sp, #24]
    1050:	str	x1, [sp, #16]
    1054:	ldr	x0, [sp, #24]
    1058:	bl	218c <_Py_strhex@plt+0x137c>
    105c:	ldp	x29, x30, [sp], #32
    1060:	ret
    1064:	stp	x29, x30, [sp, #-32]!
    1068:	mov	x29, sp
    106c:	str	x0, [sp, #24]
    1070:	str	x1, [sp, #16]
    1074:	ldr	x0, [sp, #24]
    1078:	bl	21f4 <_Py_strhex@plt+0x13e4>
    107c:	ldp	x29, x30, [sp], #32
    1080:	ret
    1084:	sub	sp, sp, #0x60
    1088:	stp	x29, x30, [sp, #16]
    108c:	add	x29, sp, #0x10
    1090:	str	x0, [sp, #56]
    1094:	str	x1, [sp, #48]
    1098:	str	x2, [sp, #40]
    109c:	str	x3, [sp, #32]
    10a0:	str	xzr, [sp, #88]
    10a4:	ldr	x0, [sp, #32]
    10a8:	cmp	x0, #0x0
    10ac:	b.eq	10bc <_Py_strhex@plt+0x2ac>  // b.none
    10b0:	ldr	x0, [sp, #32]
    10b4:	ldr	x0, [x0, #16]
    10b8:	b	10c0 <_Py_strhex@plt+0x2b0>
    10bc:	mov	x0, #0x0                   	// #0
    10c0:	ldr	x1, [sp, #40]
    10c4:	add	x0, x0, x1
    10c8:	str	x0, [sp, #72]
    10cc:	str	xzr, [sp, #80]
    10d0:	ldr	x0, [sp, #32]
    10d4:	cmp	x0, #0x0
    10d8:	b.ne	1100 <_Py_strhex@plt+0x2f0>  // b.any
    10dc:	ldr	x0, [sp, #40]
    10e0:	cmp	x0, #0x0
    10e4:	b.lt	1100 <_Py_strhex@plt+0x2f0>  // b.tstop
    10e8:	ldr	x0, [sp, #40]
    10ec:	cmp	x0, #0x1
    10f0:	b.gt	1100 <_Py_strhex@plt+0x2f0>
    10f4:	ldr	x0, [sp, #48]
    10f8:	cmp	x0, #0x0
    10fc:	b.ne	1134 <_Py_strhex@plt+0x324>  // b.any
    1100:	add	x0, sp, #0x40
    1104:	str	x0, [sp]
    1108:	mov	w7, #0x0                   	// #0
    110c:	mov	w6, #0x1                   	// #1
    1110:	mov	w5, #0x0                   	// #0
    1114:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
    1118:	add	x4, x0, #0x420
    111c:	ldr	x3, [sp, #32]
    1120:	mov	x2, #0x0                   	// #0
    1124:	ldr	x1, [sp, #40]
    1128:	ldr	x0, [sp, #48]
    112c:	bl	d50 <_PyArg_UnpackKeywords@plt>
    1130:	b	1138 <_Py_strhex@plt+0x328>
    1134:	ldr	x0, [sp, #48]
    1138:	str	x0, [sp, #48]
    113c:	ldr	x0, [sp, #48]
    1140:	cmp	x0, #0x0
    1144:	b.eq	117c <_Py_strhex@plt+0x36c>  // b.none
    1148:	ldr	x0, [sp, #72]
    114c:	cmp	x0, #0x0
    1150:	b.eq	1164 <_Py_strhex@plt+0x354>  // b.none
    1154:	ldr	x0, [sp, #48]
    1158:	ldr	x0, [x0]
    115c:	str	x0, [sp, #80]
    1160:	b	1168 <_Py_strhex@plt+0x358>
    1164:	nop
    1168:	ldr	x1, [sp, #80]
    116c:	ldr	x0, [sp, #56]
    1170:	bl	23f4 <_Py_strhex@plt+0x15e4>
    1174:	str	x0, [sp, #88]
    1178:	b	1180 <_Py_strhex@plt+0x370>
    117c:	nop
    1180:	ldr	x0, [sp, #88]
    1184:	ldp	x29, x30, [sp, #16]
    1188:	add	sp, sp, #0x60
    118c:	ret
    1190:	sub	sp, sp, #0x170
    1194:	str	x0, [sp, #8]
    1198:	str	x1, [sp]
    119c:	str	wzr, [sp, #344]
    11a0:	b	1244 <_Py_strhex@plt+0x434>
    11a4:	ldr	w0, [sp, #344]
    11a8:	lsl	w0, w0, #2
    11ac:	mov	w0, w0
    11b0:	ldr	x1, [sp]
    11b4:	add	x0, x1, x0
    11b8:	ldrb	w0, [x0]
    11bc:	lsl	w1, w0, #24
    11c0:	ldr	w0, [sp, #344]
    11c4:	lsl	w0, w0, #2
    11c8:	mov	w0, w0
    11cc:	add	x0, x0, #0x1
    11d0:	ldr	x2, [sp]
    11d4:	add	x0, x2, x0
    11d8:	ldrb	w0, [x0]
    11dc:	lsl	w0, w0, #16
    11e0:	orr	w1, w1, w0
    11e4:	ldr	w0, [sp, #344]
    11e8:	lsl	w0, w0, #2
    11ec:	mov	w0, w0
    11f0:	add	x0, x0, #0x2
    11f4:	ldr	x2, [sp]
    11f8:	add	x0, x2, x0
    11fc:	ldrb	w0, [x0]
    1200:	lsl	w0, w0, #8
    1204:	orr	w0, w1, w0
    1208:	ldr	w1, [sp, #344]
    120c:	lsl	w1, w1, #2
    1210:	mov	w1, w1
    1214:	add	x1, x1, #0x3
    1218:	ldr	x2, [sp]
    121c:	add	x1, x2, x1
    1220:	ldrb	w1, [x1]
    1224:	orr	w2, w0, w1
    1228:	ldr	w0, [sp, #344]
    122c:	lsl	x0, x0, #2
    1230:	add	x1, sp, #0x18
    1234:	str	w2, [x1, x0]
    1238:	ldr	w0, [sp, #344]
    123c:	add	w0, w0, #0x1
    1240:	str	w0, [sp, #344]
    1244:	ldr	w0, [sp, #344]
    1248:	cmp	w0, #0xf
    124c:	b.ls	11a4 <_Py_strhex@plt+0x394>  // b.plast
    1250:	ldr	x0, [sp, #8]
    1254:	ldr	w0, [x0, #8]
    1258:	str	w0, [sp, #364]
    125c:	ldr	x0, [sp, #8]
    1260:	ldr	w0, [x0, #12]
    1264:	str	w0, [sp, #360]
    1268:	ldr	x0, [sp, #8]
    126c:	ldr	w0, [x0, #16]
    1270:	str	w0, [sp, #356]
    1274:	ldr	x0, [sp, #8]
    1278:	ldr	w0, [x0, #20]
    127c:	str	w0, [sp, #352]
    1280:	ldr	x0, [sp, #8]
    1284:	ldr	w0, [x0, #24]
    1288:	str	w0, [sp, #348]
    128c:	mov	w0, #0x10                  	// #16
    1290:	str	w0, [sp, #344]
    1294:	b	1324 <_Py_strhex@plt+0x514>
    1298:	ldr	w0, [sp, #344]
    129c:	sub	w0, w0, #0x3
    12a0:	mov	w0, w0
    12a4:	lsl	x0, x0, #2
    12a8:	add	x1, sp, #0x18
    12ac:	ldr	w1, [x1, x0]
    12b0:	ldr	w0, [sp, #344]
    12b4:	sub	w0, w0, #0x8
    12b8:	mov	w0, w0
    12bc:	lsl	x0, x0, #2
    12c0:	add	x2, sp, #0x18
    12c4:	ldr	w0, [x2, x0]
    12c8:	eor	w1, w1, w0
    12cc:	ldr	w0, [sp, #344]
    12d0:	sub	w0, w0, #0xe
    12d4:	mov	w0, w0
    12d8:	lsl	x0, x0, #2
    12dc:	add	x2, sp, #0x18
    12e0:	ldr	w0, [x2, x0]
    12e4:	eor	w1, w1, w0
    12e8:	ldr	w0, [sp, #344]
    12ec:	sub	w0, w0, #0x10
    12f0:	mov	w0, w0
    12f4:	lsl	x0, x0, #2
    12f8:	add	x2, sp, #0x18
    12fc:	ldr	w0, [x2, x0]
    1300:	eor	w0, w1, w0
    1304:	ror	w2, w0, #31
    1308:	ldr	w0, [sp, #344]
    130c:	lsl	x0, x0, #2
    1310:	add	x1, sp, #0x18
    1314:	str	w2, [x1, x0]
    1318:	ldr	w0, [sp, #344]
    131c:	add	w0, w0, #0x1
    1320:	str	w0, [sp, #344]
    1324:	ldr	w0, [sp, #344]
    1328:	cmp	w0, #0x4f
    132c:	b.ls	1298 <_Py_strhex@plt+0x488>  // b.plast
    1330:	str	wzr, [sp, #344]
    1334:	b	1554 <_Py_strhex@plt+0x744>
    1338:	ldr	w0, [sp, #364]
    133c:	ror	w1, w0, #27
    1340:	ldr	w2, [sp, #356]
    1344:	ldr	w0, [sp, #352]
    1348:	eor	w2, w2, w0
    134c:	ldr	w0, [sp, #360]
    1350:	and	w2, w2, w0
    1354:	ldr	w0, [sp, #352]
    1358:	eor	w0, w2, w0
    135c:	add	w1, w1, w0
    1360:	ldr	w0, [sp, #348]
    1364:	add	w1, w1, w0
    1368:	ldr	w0, [sp, #344]
    136c:	add	w2, w0, #0x1
    1370:	str	w2, [sp, #344]
    1374:	mov	w0, w0
    1378:	lsl	x0, x0, #2
    137c:	add	x2, sp, #0x18
    1380:	ldr	w0, [x2, x0]
    1384:	add	w1, w1, w0
    1388:	mov	w0, #0x7999                	// #31129
    138c:	movk	w0, #0x5a82, lsl #16
    1390:	add	w0, w1, w0
    1394:	str	w0, [sp, #348]
    1398:	ldr	w0, [sp, #360]
    139c:	ror	w0, w0, #2
    13a0:	str	w0, [sp, #360]
    13a4:	ldr	w0, [sp, #348]
    13a8:	ror	w1, w0, #27
    13ac:	ldr	w2, [sp, #360]
    13b0:	ldr	w0, [sp, #356]
    13b4:	eor	w2, w2, w0
    13b8:	ldr	w0, [sp, #364]
    13bc:	and	w2, w2, w0
    13c0:	ldr	w0, [sp, #356]
    13c4:	eor	w0, w2, w0
    13c8:	add	w1, w1, w0
    13cc:	ldr	w0, [sp, #352]
    13d0:	add	w1, w1, w0
    13d4:	ldr	w0, [sp, #344]
    13d8:	add	w2, w0, #0x1
    13dc:	str	w2, [sp, #344]
    13e0:	mov	w0, w0
    13e4:	lsl	x0, x0, #2
    13e8:	add	x2, sp, #0x18
    13ec:	ldr	w0, [x2, x0]
    13f0:	add	w1, w1, w0
    13f4:	mov	w0, #0x7999                	// #31129
    13f8:	movk	w0, #0x5a82, lsl #16
    13fc:	add	w0, w1, w0
    1400:	str	w0, [sp, #352]
    1404:	ldr	w0, [sp, #364]
    1408:	ror	w0, w0, #2
    140c:	str	w0, [sp, #364]
    1410:	ldr	w0, [sp, #352]
    1414:	ror	w1, w0, #27
    1418:	ldr	w2, [sp, #364]
    141c:	ldr	w0, [sp, #360]
    1420:	eor	w2, w2, w0
    1424:	ldr	w0, [sp, #348]
    1428:	and	w2, w2, w0
    142c:	ldr	w0, [sp, #360]
    1430:	eor	w0, w2, w0
    1434:	add	w1, w1, w0
    1438:	ldr	w0, [sp, #356]
    143c:	add	w1, w1, w0
    1440:	ldr	w0, [sp, #344]
    1444:	add	w2, w0, #0x1
    1448:	str	w2, [sp, #344]
    144c:	mov	w0, w0
    1450:	lsl	x0, x0, #2
    1454:	add	x2, sp, #0x18
    1458:	ldr	w0, [x2, x0]
    145c:	add	w1, w1, w0
    1460:	mov	w0, #0x7999                	// #31129
    1464:	movk	w0, #0x5a82, lsl #16
    1468:	add	w0, w1, w0
    146c:	str	w0, [sp, #356]
    1470:	ldr	w0, [sp, #348]
    1474:	ror	w0, w0, #2
    1478:	str	w0, [sp, #348]
    147c:	ldr	w0, [sp, #356]
    1480:	ror	w1, w0, #27
    1484:	ldr	w2, [sp, #348]
    1488:	ldr	w0, [sp, #364]
    148c:	eor	w2, w2, w0
    1490:	ldr	w0, [sp, #352]
    1494:	and	w2, w2, w0
    1498:	ldr	w0, [sp, #364]
    149c:	eor	w0, w2, w0
    14a0:	add	w1, w1, w0
    14a4:	ldr	w0, [sp, #360]
    14a8:	add	w1, w1, w0
    14ac:	ldr	w0, [sp, #344]
    14b0:	add	w2, w0, #0x1
    14b4:	str	w2, [sp, #344]
    14b8:	mov	w0, w0
    14bc:	lsl	x0, x0, #2
    14c0:	add	x2, sp, #0x18
    14c4:	ldr	w0, [x2, x0]
    14c8:	add	w1, w1, w0
    14cc:	mov	w0, #0x7999                	// #31129
    14d0:	movk	w0, #0x5a82, lsl #16
    14d4:	add	w0, w1, w0
    14d8:	str	w0, [sp, #360]
    14dc:	ldr	w0, [sp, #352]
    14e0:	ror	w0, w0, #2
    14e4:	str	w0, [sp, #352]
    14e8:	ldr	w0, [sp, #360]
    14ec:	ror	w1, w0, #27
    14f0:	ldr	w2, [sp, #352]
    14f4:	ldr	w0, [sp, #348]
    14f8:	eor	w2, w2, w0
    14fc:	ldr	w0, [sp, #356]
    1500:	and	w2, w2, w0
    1504:	ldr	w0, [sp, #348]
    1508:	eor	w0, w2, w0
    150c:	add	w1, w1, w0
    1510:	ldr	w0, [sp, #364]
    1514:	add	w1, w1, w0
    1518:	ldr	w0, [sp, #344]
    151c:	add	w2, w0, #0x1
    1520:	str	w2, [sp, #344]
    1524:	mov	w0, w0
    1528:	lsl	x0, x0, #2
    152c:	add	x2, sp, #0x18
    1530:	ldr	w0, [x2, x0]
    1534:	add	w1, w1, w0
    1538:	mov	w0, #0x7999                	// #31129
    153c:	movk	w0, #0x5a82, lsl #16
    1540:	add	w0, w1, w0
    1544:	str	w0, [sp, #364]
    1548:	ldr	w0, [sp, #356]
    154c:	ror	w0, w0, #2
    1550:	str	w0, [sp, #356]
    1554:	ldr	w0, [sp, #344]
    1558:	cmp	w0, #0x13
    155c:	b.ls	1338 <_Py_strhex@plt+0x528>  // b.plast
    1560:	b	1758 <_Py_strhex@plt+0x948>
    1564:	ldr	w0, [sp, #364]
    1568:	ror	w1, w0, #27
    156c:	ldr	w2, [sp, #360]
    1570:	ldr	w0, [sp, #356]
    1574:	eor	w2, w2, w0
    1578:	ldr	w0, [sp, #352]
    157c:	eor	w0, w2, w0
    1580:	add	w1, w1, w0
    1584:	ldr	w0, [sp, #348]
    1588:	add	w1, w1, w0
    158c:	ldr	w0, [sp, #344]
    1590:	add	w2, w0, #0x1
    1594:	str	w2, [sp, #344]
    1598:	mov	w0, w0
    159c:	lsl	x0, x0, #2
    15a0:	add	x2, sp, #0x18
    15a4:	ldr	w0, [x2, x0]
    15a8:	add	w1, w1, w0
    15ac:	mov	w0, #0xeba1                	// #60321
    15b0:	movk	w0, #0x6ed9, lsl #16
    15b4:	add	w0, w1, w0
    15b8:	str	w0, [sp, #348]
    15bc:	ldr	w0, [sp, #360]
    15c0:	ror	w0, w0, #2
    15c4:	str	w0, [sp, #360]
    15c8:	ldr	w0, [sp, #348]
    15cc:	ror	w1, w0, #27
    15d0:	ldr	w2, [sp, #364]
    15d4:	ldr	w0, [sp, #360]
    15d8:	eor	w2, w2, w0
    15dc:	ldr	w0, [sp, #356]
    15e0:	eor	w0, w2, w0
    15e4:	add	w1, w1, w0
    15e8:	ldr	w0, [sp, #352]
    15ec:	add	w1, w1, w0
    15f0:	ldr	w0, [sp, #344]
    15f4:	add	w2, w0, #0x1
    15f8:	str	w2, [sp, #344]
    15fc:	mov	w0, w0
    1600:	lsl	x0, x0, #2
    1604:	add	x2, sp, #0x18
    1608:	ldr	w0, [x2, x0]
    160c:	add	w1, w1, w0
    1610:	mov	w0, #0xeba1                	// #60321
    1614:	movk	w0, #0x6ed9, lsl #16
    1618:	add	w0, w1, w0
    161c:	str	w0, [sp, #352]
    1620:	ldr	w0, [sp, #364]
    1624:	ror	w0, w0, #2
    1628:	str	w0, [sp, #364]
    162c:	ldr	w0, [sp, #352]
    1630:	ror	w1, w0, #27
    1634:	ldr	w2, [sp, #348]
    1638:	ldr	w0, [sp, #364]
    163c:	eor	w2, w2, w0
    1640:	ldr	w0, [sp, #360]
    1644:	eor	w0, w2, w0
    1648:	add	w1, w1, w0
    164c:	ldr	w0, [sp, #356]
    1650:	add	w1, w1, w0
    1654:	ldr	w0, [sp, #344]
    1658:	add	w2, w0, #0x1
    165c:	str	w2, [sp, #344]
    1660:	mov	w0, w0
    1664:	lsl	x0, x0, #2
    1668:	add	x2, sp, #0x18
    166c:	ldr	w0, [x2, x0]
    1670:	add	w1, w1, w0
    1674:	mov	w0, #0xeba1                	// #60321
    1678:	movk	w0, #0x6ed9, lsl #16
    167c:	add	w0, w1, w0
    1680:	str	w0, [sp, #356]
    1684:	ldr	w0, [sp, #348]
    1688:	ror	w0, w0, #2
    168c:	str	w0, [sp, #348]
    1690:	ldr	w0, [sp, #356]
    1694:	ror	w1, w0, #27
    1698:	ldr	w2, [sp, #352]
    169c:	ldr	w0, [sp, #348]
    16a0:	eor	w2, w2, w0
    16a4:	ldr	w0, [sp, #364]
    16a8:	eor	w0, w2, w0
    16ac:	add	w1, w1, w0
    16b0:	ldr	w0, [sp, #360]
    16b4:	add	w1, w1, w0
    16b8:	ldr	w0, [sp, #344]
    16bc:	add	w2, w0, #0x1
    16c0:	str	w2, [sp, #344]
    16c4:	mov	w0, w0
    16c8:	lsl	x0, x0, #2
    16cc:	add	x2, sp, #0x18
    16d0:	ldr	w0, [x2, x0]
    16d4:	add	w1, w1, w0
    16d8:	mov	w0, #0xeba1                	// #60321
    16dc:	movk	w0, #0x6ed9, lsl #16
    16e0:	add	w0, w1, w0
    16e4:	str	w0, [sp, #360]
    16e8:	ldr	w0, [sp, #352]
    16ec:	ror	w0, w0, #2
    16f0:	str	w0, [sp, #352]
    16f4:	ldr	w0, [sp, #360]
    16f8:	ror	w1, w0, #27
    16fc:	ldr	w2, [sp, #356]
    1700:	ldr	w0, [sp, #352]
    1704:	eor	w2, w2, w0
    1708:	ldr	w0, [sp, #348]
    170c:	eor	w0, w2, w0
    1710:	add	w1, w1, w0
    1714:	ldr	w0, [sp, #364]
    1718:	add	w1, w1, w0
    171c:	ldr	w0, [sp, #344]
    1720:	add	w2, w0, #0x1
    1724:	str	w2, [sp, #344]
    1728:	mov	w0, w0
    172c:	lsl	x0, x0, #2
    1730:	add	x2, sp, #0x18
    1734:	ldr	w0, [x2, x0]
    1738:	add	w1, w1, w0
    173c:	mov	w0, #0xeba1                	// #60321
    1740:	movk	w0, #0x6ed9, lsl #16
    1744:	add	w0, w1, w0
    1748:	str	w0, [sp, #364]
    174c:	ldr	w0, [sp, #356]
    1750:	ror	w0, w0, #2
    1754:	str	w0, [sp, #356]
    1758:	ldr	w0, [sp, #344]
    175c:	cmp	w0, #0x27
    1760:	b.ls	1564 <_Py_strhex@plt+0x754>  // b.plast
    1764:	b	19ac <_Py_strhex@plt+0xb9c>
    1768:	ldr	w0, [sp, #364]
    176c:	ror	w1, w0, #27
    1770:	ldr	w2, [sp, #360]
    1774:	ldr	w0, [sp, #356]
    1778:	and	w2, w2, w0
    177c:	ldr	w3, [sp, #360]
    1780:	ldr	w0, [sp, #356]
    1784:	orr	w3, w3, w0
    1788:	ldr	w0, [sp, #352]
    178c:	and	w0, w3, w0
    1790:	orr	w0, w2, w0
    1794:	add	w1, w1, w0
    1798:	ldr	w0, [sp, #348]
    179c:	add	w1, w1, w0
    17a0:	ldr	w0, [sp, #344]
    17a4:	add	w2, w0, #0x1
    17a8:	str	w2, [sp, #344]
    17ac:	mov	w0, w0
    17b0:	lsl	x0, x0, #2
    17b4:	add	x2, sp, #0x18
    17b8:	ldr	w0, [x2, x0]
    17bc:	add	w1, w1, w0
    17c0:	mov	w0, #0xbcdc                	// #48348
    17c4:	movk	w0, #0x8f1b, lsl #16
    17c8:	add	w0, w1, w0
    17cc:	str	w0, [sp, #348]
    17d0:	ldr	w0, [sp, #360]
    17d4:	ror	w0, w0, #2
    17d8:	str	w0, [sp, #360]
    17dc:	ldr	w0, [sp, #348]
    17e0:	ror	w1, w0, #27
    17e4:	ldr	w2, [sp, #364]
    17e8:	ldr	w0, [sp, #360]
    17ec:	and	w2, w2, w0
    17f0:	ldr	w3, [sp, #364]
    17f4:	ldr	w0, [sp, #360]
    17f8:	orr	w3, w3, w0
    17fc:	ldr	w0, [sp, #356]
    1800:	and	w0, w3, w0
    1804:	orr	w0, w2, w0
    1808:	add	w1, w1, w0
    180c:	ldr	w0, [sp, #352]
    1810:	add	w1, w1, w0
    1814:	ldr	w0, [sp, #344]
    1818:	add	w2, w0, #0x1
    181c:	str	w2, [sp, #344]
    1820:	mov	w0, w0
    1824:	lsl	x0, x0, #2
    1828:	add	x2, sp, #0x18
    182c:	ldr	w0, [x2, x0]
    1830:	add	w1, w1, w0
    1834:	mov	w0, #0xbcdc                	// #48348
    1838:	movk	w0, #0x8f1b, lsl #16
    183c:	add	w0, w1, w0
    1840:	str	w0, [sp, #352]
    1844:	ldr	w0, [sp, #364]
    1848:	ror	w0, w0, #2
    184c:	str	w0, [sp, #364]
    1850:	ldr	w0, [sp, #352]
    1854:	ror	w1, w0, #27
    1858:	ldr	w2, [sp, #348]
    185c:	ldr	w0, [sp, #364]
    1860:	and	w2, w2, w0
    1864:	ldr	w3, [sp, #348]
    1868:	ldr	w0, [sp, #364]
    186c:	orr	w3, w3, w0
    1870:	ldr	w0, [sp, #360]
    1874:	and	w0, w3, w0
    1878:	orr	w0, w2, w0
    187c:	add	w1, w1, w0
    1880:	ldr	w0, [sp, #356]
    1884:	add	w1, w1, w0
    1888:	ldr	w0, [sp, #344]
    188c:	add	w2, w0, #0x1
    1890:	str	w2, [sp, #344]
    1894:	mov	w0, w0
    1898:	lsl	x0, x0, #2
    189c:	add	x2, sp, #0x18
    18a0:	ldr	w0, [x2, x0]
    18a4:	add	w1, w1, w0
    18a8:	mov	w0, #0xbcdc                	// #48348
    18ac:	movk	w0, #0x8f1b, lsl #16
    18b0:	add	w0, w1, w0
    18b4:	str	w0, [sp, #356]
    18b8:	ldr	w0, [sp, #348]
    18bc:	ror	w0, w0, #2
    18c0:	str	w0, [sp, #348]
    18c4:	ldr	w0, [sp, #356]
    18c8:	ror	w1, w0, #27
    18cc:	ldr	w2, [sp, #352]
    18d0:	ldr	w0, [sp, #348]
    18d4:	and	w2, w2, w0
    18d8:	ldr	w3, [sp, #352]
    18dc:	ldr	w0, [sp, #348]
    18e0:	orr	w3, w3, w0
    18e4:	ldr	w0, [sp, #364]
    18e8:	and	w0, w3, w0
    18ec:	orr	w0, w2, w0
    18f0:	add	w1, w1, w0
    18f4:	ldr	w0, [sp, #360]
    18f8:	add	w1, w1, w0
    18fc:	ldr	w0, [sp, #344]
    1900:	add	w2, w0, #0x1
    1904:	str	w2, [sp, #344]
    1908:	mov	w0, w0
    190c:	lsl	x0, x0, #2
    1910:	add	x2, sp, #0x18
    1914:	ldr	w0, [x2, x0]
    1918:	add	w1, w1, w0
    191c:	mov	w0, #0xbcdc                	// #48348
    1920:	movk	w0, #0x8f1b, lsl #16
    1924:	add	w0, w1, w0
    1928:	str	w0, [sp, #360]
    192c:	ldr	w0, [sp, #352]
    1930:	ror	w0, w0, #2
    1934:	str	w0, [sp, #352]
    1938:	ldr	w0, [sp, #360]
    193c:	ror	w1, w0, #27
    1940:	ldr	w2, [sp, #356]
    1944:	ldr	w0, [sp, #352]
    1948:	and	w2, w2, w0
    194c:	ldr	w3, [sp, #356]
    1950:	ldr	w0, [sp, #352]
    1954:	orr	w3, w3, w0
    1958:	ldr	w0, [sp, #348]
    195c:	and	w0, w3, w0
    1960:	orr	w0, w2, w0
    1964:	add	w1, w1, w0
    1968:	ldr	w0, [sp, #364]
    196c:	add	w1, w1, w0
    1970:	ldr	w0, [sp, #344]
    1974:	add	w2, w0, #0x1
    1978:	str	w2, [sp, #344]
    197c:	mov	w0, w0
    1980:	lsl	x0, x0, #2
    1984:	add	x2, sp, #0x18
    1988:	ldr	w0, [x2, x0]
    198c:	add	w1, w1, w0
    1990:	mov	w0, #0xbcdc                	// #48348
    1994:	movk	w0, #0x8f1b, lsl #16
    1998:	add	w0, w1, w0
    199c:	str	w0, [sp, #364]
    19a0:	ldr	w0, [sp, #356]
    19a4:	ror	w0, w0, #2
    19a8:	str	w0, [sp, #356]
    19ac:	ldr	w0, [sp, #344]
    19b0:	cmp	w0, #0x3b
    19b4:	b.ls	1768 <_Py_strhex@plt+0x958>  // b.plast
    19b8:	b	1bb0 <_Py_strhex@plt+0xda0>
    19bc:	ldr	w0, [sp, #364]
    19c0:	ror	w1, w0, #27
    19c4:	ldr	w2, [sp, #360]
    19c8:	ldr	w0, [sp, #356]
    19cc:	eor	w2, w2, w0
    19d0:	ldr	w0, [sp, #352]
    19d4:	eor	w0, w2, w0
    19d8:	add	w1, w1, w0
    19dc:	ldr	w0, [sp, #348]
    19e0:	add	w1, w1, w0
    19e4:	ldr	w0, [sp, #344]
    19e8:	add	w2, w0, #0x1
    19ec:	str	w2, [sp, #344]
    19f0:	mov	w0, w0
    19f4:	lsl	x0, x0, #2
    19f8:	add	x2, sp, #0x18
    19fc:	ldr	w0, [x2, x0]
    1a00:	add	w1, w1, w0
    1a04:	mov	w0, #0xc1d6                	// #49622
    1a08:	movk	w0, #0xca62, lsl #16
    1a0c:	add	w0, w1, w0
    1a10:	str	w0, [sp, #348]
    1a14:	ldr	w0, [sp, #360]
    1a18:	ror	w0, w0, #2
    1a1c:	str	w0, [sp, #360]
    1a20:	ldr	w0, [sp, #348]
    1a24:	ror	w1, w0, #27
    1a28:	ldr	w2, [sp, #364]
    1a2c:	ldr	w0, [sp, #360]
    1a30:	eor	w2, w2, w0
    1a34:	ldr	w0, [sp, #356]
    1a38:	eor	w0, w2, w0
    1a3c:	add	w1, w1, w0
    1a40:	ldr	w0, [sp, #352]
    1a44:	add	w1, w1, w0
    1a48:	ldr	w0, [sp, #344]
    1a4c:	add	w2, w0, #0x1
    1a50:	str	w2, [sp, #344]
    1a54:	mov	w0, w0
    1a58:	lsl	x0, x0, #2
    1a5c:	add	x2, sp, #0x18
    1a60:	ldr	w0, [x2, x0]
    1a64:	add	w1, w1, w0
    1a68:	mov	w0, #0xc1d6                	// #49622
    1a6c:	movk	w0, #0xca62, lsl #16
    1a70:	add	w0, w1, w0
    1a74:	str	w0, [sp, #352]
    1a78:	ldr	w0, [sp, #364]
    1a7c:	ror	w0, w0, #2
    1a80:	str	w0, [sp, #364]
    1a84:	ldr	w0, [sp, #352]
    1a88:	ror	w1, w0, #27
    1a8c:	ldr	w2, [sp, #348]
    1a90:	ldr	w0, [sp, #364]
    1a94:	eor	w2, w2, w0
    1a98:	ldr	w0, [sp, #360]
    1a9c:	eor	w0, w2, w0
    1aa0:	add	w1, w1, w0
    1aa4:	ldr	w0, [sp, #356]
    1aa8:	add	w1, w1, w0
    1aac:	ldr	w0, [sp, #344]
    1ab0:	add	w2, w0, #0x1
    1ab4:	str	w2, [sp, #344]
    1ab8:	mov	w0, w0
    1abc:	lsl	x0, x0, #2
    1ac0:	add	x2, sp, #0x18
    1ac4:	ldr	w0, [x2, x0]
    1ac8:	add	w1, w1, w0
    1acc:	mov	w0, #0xc1d6                	// #49622
    1ad0:	movk	w0, #0xca62, lsl #16
    1ad4:	add	w0, w1, w0
    1ad8:	str	w0, [sp, #356]
    1adc:	ldr	w0, [sp, #348]
    1ae0:	ror	w0, w0, #2
    1ae4:	str	w0, [sp, #348]
    1ae8:	ldr	w0, [sp, #356]
    1aec:	ror	w1, w0, #27
    1af0:	ldr	w2, [sp, #352]
    1af4:	ldr	w0, [sp, #348]
    1af8:	eor	w2, w2, w0
    1afc:	ldr	w0, [sp, #364]
    1b00:	eor	w0, w2, w0
    1b04:	add	w1, w1, w0
    1b08:	ldr	w0, [sp, #360]
    1b0c:	add	w1, w1, w0
    1b10:	ldr	w0, [sp, #344]
    1b14:	add	w2, w0, #0x1
    1b18:	str	w2, [sp, #344]
    1b1c:	mov	w0, w0
    1b20:	lsl	x0, x0, #2
    1b24:	add	x2, sp, #0x18
    1b28:	ldr	w0, [x2, x0]
    1b2c:	add	w1, w1, w0
    1b30:	mov	w0, #0xc1d6                	// #49622
    1b34:	movk	w0, #0xca62, lsl #16
    1b38:	add	w0, w1, w0
    1b3c:	str	w0, [sp, #360]
    1b40:	ldr	w0, [sp, #352]
    1b44:	ror	w0, w0, #2
    1b48:	str	w0, [sp, #352]
    1b4c:	ldr	w0, [sp, #360]
    1b50:	ror	w1, w0, #27
    1b54:	ldr	w2, [sp, #356]
    1b58:	ldr	w0, [sp, #352]
    1b5c:	eor	w2, w2, w0
    1b60:	ldr	w0, [sp, #348]
    1b64:	eor	w0, w2, w0
    1b68:	add	w1, w1, w0
    1b6c:	ldr	w0, [sp, #364]
    1b70:	add	w1, w1, w0
    1b74:	ldr	w0, [sp, #344]
    1b78:	add	w2, w0, #0x1
    1b7c:	str	w2, [sp, #344]
    1b80:	mov	w0, w0
    1b84:	lsl	x0, x0, #2
    1b88:	add	x2, sp, #0x18
    1b8c:	ldr	w0, [x2, x0]
    1b90:	add	w1, w1, w0
    1b94:	mov	w0, #0xc1d6                	// #49622
    1b98:	movk	w0, #0xca62, lsl #16
    1b9c:	add	w0, w1, w0
    1ba0:	str	w0, [sp, #364]
    1ba4:	ldr	w0, [sp, #356]
    1ba8:	ror	w0, w0, #2
    1bac:	str	w0, [sp, #356]
    1bb0:	ldr	w0, [sp, #344]
    1bb4:	cmp	w0, #0x4f
    1bb8:	b.ls	19bc <_Py_strhex@plt+0xbac>  // b.plast
    1bbc:	ldr	x0, [sp, #8]
    1bc0:	ldr	w1, [x0, #8]
    1bc4:	ldr	w0, [sp, #364]
    1bc8:	add	w1, w1, w0
    1bcc:	ldr	x0, [sp, #8]
    1bd0:	str	w1, [x0, #8]
    1bd4:	ldr	x0, [sp, #8]
    1bd8:	ldr	w1, [x0, #12]
    1bdc:	ldr	w0, [sp, #360]
    1be0:	add	w1, w1, w0
    1be4:	ldr	x0, [sp, #8]
    1be8:	str	w1, [x0, #12]
    1bec:	ldr	x0, [sp, #8]
    1bf0:	ldr	w1, [x0, #16]
    1bf4:	ldr	w0, [sp, #356]
    1bf8:	add	w1, w1, w0
    1bfc:	ldr	x0, [sp, #8]
    1c00:	str	w1, [x0, #16]
    1c04:	ldr	x0, [sp, #8]
    1c08:	ldr	w1, [x0, #20]
    1c0c:	ldr	w0, [sp, #352]
    1c10:	add	w1, w1, w0
    1c14:	ldr	x0, [sp, #8]
    1c18:	str	w1, [x0, #20]
    1c1c:	ldr	x0, [sp, #8]
    1c20:	ldr	w1, [x0, #24]
    1c24:	ldr	w0, [sp, #348]
    1c28:	add	w1, w1, w0
    1c2c:	ldr	x0, [sp, #8]
    1c30:	str	w1, [x0, #24]
    1c34:	nop
    1c38:	add	sp, sp, #0x170
    1c3c:	ret
    1c40:	sub	sp, sp, #0x10
    1c44:	str	x0, [sp, #8]
    1c48:	ldr	x0, [sp, #8]
    1c4c:	mov	w1, #0x2301                	// #8961
    1c50:	movk	w1, #0x6745, lsl #16
    1c54:	str	w1, [x0, #8]
    1c58:	ldr	x0, [sp, #8]
    1c5c:	mov	w1, #0xab89                	// #43913
    1c60:	movk	w1, #0xefcd, lsl #16
    1c64:	str	w1, [x0, #12]
    1c68:	ldr	x0, [sp, #8]
    1c6c:	mov	w1, #0xdcfe                	// #56574
    1c70:	movk	w1, #0x98ba, lsl #16
    1c74:	str	w1, [x0, #16]
    1c78:	ldr	x0, [sp, #8]
    1c7c:	mov	w1, #0x5476                	// #21622
    1c80:	movk	w1, #0x1032, lsl #16
    1c84:	str	w1, [x0, #20]
    1c88:	ldr	x0, [sp, #8]
    1c8c:	mov	w1, #0xe1f0                	// #57840
    1c90:	movk	w1, #0xc3d2, lsl #16
    1c94:	str	w1, [x0, #24]
    1c98:	ldr	x0, [sp, #8]
    1c9c:	str	wzr, [x0, #28]
    1ca0:	ldr	x0, [sp, #8]
    1ca4:	str	xzr, [x0]
    1ca8:	nop
    1cac:	add	sp, sp, #0x10
    1cb0:	ret
    1cb4:	stp	x29, x30, [sp, #-64]!
    1cb8:	mov	x29, sp
    1cbc:	str	x0, [sp, #40]
    1cc0:	str	x1, [sp, #32]
    1cc4:	str	x2, [sp, #24]
    1cc8:	b	1dec <_Py_strhex@plt+0xfdc>
    1ccc:	ldr	x0, [sp, #40]
    1cd0:	ldr	w0, [x0, #28]
    1cd4:	cmp	w0, #0x0
    1cd8:	b.ne	1d24 <_Py_strhex@plt+0xf14>  // b.any
    1cdc:	ldr	x0, [sp, #24]
    1ce0:	cmp	x0, #0x3f
    1ce4:	b.le	1d24 <_Py_strhex@plt+0xf14>
    1ce8:	ldr	x1, [sp, #32]
    1cec:	ldr	x0, [sp, #40]
    1cf0:	bl	1190 <_Py_strhex@plt+0x380>
    1cf4:	ldr	x0, [sp, #40]
    1cf8:	ldr	x0, [x0]
    1cfc:	add	x1, x0, #0x200
    1d00:	ldr	x0, [sp, #40]
    1d04:	str	x1, [x0]
    1d08:	ldr	x0, [sp, #32]
    1d0c:	add	x0, x0, #0x40
    1d10:	str	x0, [sp, #32]
    1d14:	ldr	x0, [sp, #24]
    1d18:	sub	x0, x0, #0x40
    1d1c:	str	x0, [sp, #24]
    1d20:	b	1dec <_Py_strhex@plt+0xfdc>
    1d24:	ldr	x0, [sp, #40]
    1d28:	ldr	w0, [x0, #28]
    1d2c:	mov	w1, #0x40                  	// #64
    1d30:	sub	w0, w1, w0
    1d34:	mov	w0, w0
    1d38:	ldr	x2, [sp, #24]
    1d3c:	ldr	x1, [sp, #24]
    1d40:	cmp	x2, x0
    1d44:	csel	x0, x1, x0, le
    1d48:	str	x0, [sp, #56]
    1d4c:	ldr	x0, [sp, #40]
    1d50:	add	x1, x0, #0x20
    1d54:	ldr	x0, [sp, #40]
    1d58:	ldr	w0, [x0, #28]
    1d5c:	mov	w0, w0
    1d60:	add	x0, x1, x0
    1d64:	ldr	x1, [sp, #56]
    1d68:	mov	x2, x1
    1d6c:	ldr	x1, [sp, #32]
    1d70:	bl	d00 <memcpy@plt>
    1d74:	ldr	x0, [sp, #40]
    1d78:	ldr	w0, [x0, #28]
    1d7c:	ldr	x1, [sp, #56]
    1d80:	add	w1, w0, w1
    1d84:	ldr	x0, [sp, #40]
    1d88:	str	w1, [x0, #28]
    1d8c:	ldr	x0, [sp, #56]
    1d90:	ldr	x1, [sp, #32]
    1d94:	add	x0, x1, x0
    1d98:	str	x0, [sp, #32]
    1d9c:	ldr	x1, [sp, #24]
    1da0:	ldr	x0, [sp, #56]
    1da4:	sub	x0, x1, x0
    1da8:	str	x0, [sp, #24]
    1dac:	ldr	x0, [sp, #40]
    1db0:	ldr	w0, [x0, #28]
    1db4:	cmp	w0, #0x40
    1db8:	b.ne	1dec <_Py_strhex@plt+0xfdc>  // b.any
    1dbc:	ldr	x0, [sp, #40]
    1dc0:	add	x0, x0, #0x20
    1dc4:	mov	x1, x0
    1dc8:	ldr	x0, [sp, #40]
    1dcc:	bl	1190 <_Py_strhex@plt+0x380>
    1dd0:	ldr	x0, [sp, #40]
    1dd4:	ldr	x0, [x0]
    1dd8:	add	x1, x0, #0x200
    1ddc:	ldr	x0, [sp, #40]
    1de0:	str	x1, [x0]
    1de4:	ldr	x0, [sp, #40]
    1de8:	str	wzr, [x0, #28]
    1dec:	ldr	x0, [sp, #24]
    1df0:	cmp	x0, #0x0
    1df4:	b.gt	1ccc <_Py_strhex@plt+0xebc>
    1df8:	nop
    1dfc:	nop
    1e00:	ldp	x29, x30, [sp], #64
    1e04:	ret
    1e08:	stp	x29, x30, [sp, #-48]!
    1e0c:	mov	x29, sp
    1e10:	str	x0, [sp, #24]
    1e14:	str	x1, [sp, #16]
    1e18:	ldr	x0, [sp, #24]
    1e1c:	ldr	x1, [x0]
    1e20:	ldr	x0, [sp, #24]
    1e24:	ldr	w0, [x0, #28]
    1e28:	lsl	w0, w0, #3
    1e2c:	mov	w0, w0
    1e30:	add	x1, x1, x0
    1e34:	ldr	x0, [sp, #24]
    1e38:	str	x1, [x0]
    1e3c:	ldr	x0, [sp, #24]
    1e40:	ldr	w0, [x0, #28]
    1e44:	add	w2, w0, #0x1
    1e48:	ldr	x1, [sp, #24]
    1e4c:	str	w2, [x1, #28]
    1e50:	ldr	x1, [sp, #24]
    1e54:	mov	w0, w0
    1e58:	add	x0, x1, x0
    1e5c:	mov	w1, #0xffffff80            	// #-128
    1e60:	strb	w1, [x0, #32]
    1e64:	ldr	x0, [sp, #24]
    1e68:	ldr	w0, [x0, #28]
    1e6c:	cmp	w0, #0x38
    1e70:	b.ls	1ef0 <_Py_strhex@plt+0x10e0>  // b.plast
    1e74:	b	1e9c <_Py_strhex@plt+0x108c>
    1e78:	ldr	x0, [sp, #24]
    1e7c:	ldr	w0, [x0, #28]
    1e80:	add	w2, w0, #0x1
    1e84:	ldr	x1, [sp, #24]
    1e88:	str	w2, [x1, #28]
    1e8c:	ldr	x1, [sp, #24]
    1e90:	mov	w0, w0
    1e94:	add	x0, x1, x0
    1e98:	strb	wzr, [x0, #32]
    1e9c:	ldr	x0, [sp, #24]
    1ea0:	ldr	w0, [x0, #28]
    1ea4:	cmp	w0, #0x3f
    1ea8:	b.ls	1e78 <_Py_strhex@plt+0x1068>  // b.plast
    1eac:	ldr	x0, [sp, #24]
    1eb0:	add	x0, x0, #0x20
    1eb4:	mov	x1, x0
    1eb8:	ldr	x0, [sp, #24]
    1ebc:	bl	1190 <_Py_strhex@plt+0x380>
    1ec0:	ldr	x0, [sp, #24]
    1ec4:	str	wzr, [x0, #28]
    1ec8:	b	1ef0 <_Py_strhex@plt+0x10e0>
    1ecc:	ldr	x0, [sp, #24]
    1ed0:	ldr	w0, [x0, #28]
    1ed4:	add	w2, w0, #0x1
    1ed8:	ldr	x1, [sp, #24]
    1edc:	str	w2, [x1, #28]
    1ee0:	ldr	x1, [sp, #24]
    1ee4:	mov	w0, w0
    1ee8:	add	x0, x1, x0
    1eec:	strb	wzr, [x0, #32]
    1ef0:	ldr	x0, [sp, #24]
    1ef4:	ldr	w0, [x0, #28]
    1ef8:	cmp	w0, #0x37
    1efc:	b.ls	1ecc <_Py_strhex@plt+0x10bc>  // b.plast
    1f00:	ldr	x0, [sp, #24]
    1f04:	ldr	x0, [x0]
    1f08:	asr	x0, x0, #56
    1f0c:	and	w1, w0, #0xff
    1f10:	ldr	x0, [sp, #24]
    1f14:	strb	w1, [x0, #88]
    1f18:	ldr	x0, [sp, #24]
    1f1c:	ldr	x0, [x0]
    1f20:	asr	x0, x0, #48
    1f24:	and	w1, w0, #0xff
    1f28:	ldr	x0, [sp, #24]
    1f2c:	strb	w1, [x0, #89]
    1f30:	ldr	x0, [sp, #24]
    1f34:	ldr	x0, [x0]
    1f38:	asr	x0, x0, #40
    1f3c:	and	w1, w0, #0xff
    1f40:	ldr	x0, [sp, #24]
    1f44:	strb	w1, [x0, #90]
    1f48:	ldr	x0, [sp, #24]
    1f4c:	ldr	x0, [x0]
    1f50:	asr	x0, x0, #32
    1f54:	and	w1, w0, #0xff
    1f58:	ldr	x0, [sp, #24]
    1f5c:	strb	w1, [x0, #91]
    1f60:	ldr	x0, [sp, #24]
    1f64:	ldr	x0, [x0]
    1f68:	asr	x0, x0, #24
    1f6c:	and	w1, w0, #0xff
    1f70:	ldr	x0, [sp, #24]
    1f74:	strb	w1, [x0, #92]
    1f78:	ldr	x0, [sp, #24]
    1f7c:	ldr	x0, [x0]
    1f80:	asr	x0, x0, #16
    1f84:	and	w1, w0, #0xff
    1f88:	ldr	x0, [sp, #24]
    1f8c:	strb	w1, [x0, #93]
    1f90:	ldr	x0, [sp, #24]
    1f94:	ldr	x0, [x0]
    1f98:	asr	x0, x0, #8
    1f9c:	and	w1, w0, #0xff
    1fa0:	ldr	x0, [sp, #24]
    1fa4:	strb	w1, [x0, #94]
    1fa8:	ldr	x0, [sp, #24]
    1fac:	ldr	x0, [x0]
    1fb0:	and	w1, w0, #0xff
    1fb4:	ldr	x0, [sp, #24]
    1fb8:	strb	w1, [x0, #95]
    1fbc:	ldr	x0, [sp, #24]
    1fc0:	add	x0, x0, #0x20
    1fc4:	mov	x1, x0
    1fc8:	ldr	x0, [sp, #24]
    1fcc:	bl	1190 <_Py_strhex@plt+0x380>
    1fd0:	str	wzr, [sp, #44]
    1fd4:	b	20bc <_Py_strhex@plt+0x12ac>
    1fd8:	ldr	x1, [sp, #24]
    1fdc:	ldrsw	x0, [sp, #44]
    1fe0:	lsl	x0, x0, #2
    1fe4:	add	x0, x1, x0
    1fe8:	ldr	w0, [x0, #8]
    1fec:	lsr	w2, w0, #24
    1ff0:	ldr	w0, [sp, #44]
    1ff4:	lsl	w0, w0, #2
    1ff8:	sxtw	x0, w0
    1ffc:	ldr	x1, [sp, #16]
    2000:	add	x0, x1, x0
    2004:	and	w1, w2, #0xff
    2008:	strb	w1, [x0]
    200c:	ldr	x1, [sp, #24]
    2010:	ldrsw	x0, [sp, #44]
    2014:	lsl	x0, x0, #2
    2018:	add	x0, x1, x0
    201c:	ldr	w0, [x0, #8]
    2020:	lsr	w2, w0, #16
    2024:	ldr	w0, [sp, #44]
    2028:	lsl	w0, w0, #2
    202c:	sxtw	x0, w0
    2030:	add	x0, x0, #0x1
    2034:	ldr	x1, [sp, #16]
    2038:	add	x0, x1, x0
    203c:	and	w1, w2, #0xff
    2040:	strb	w1, [x0]
    2044:	ldr	x1, [sp, #24]
    2048:	ldrsw	x0, [sp, #44]
    204c:	lsl	x0, x0, #2
    2050:	add	x0, x1, x0
    2054:	ldr	w0, [x0, #8]
    2058:	lsr	w2, w0, #8
    205c:	ldr	w0, [sp, #44]
    2060:	lsl	w0, w0, #2
    2064:	sxtw	x0, w0
    2068:	add	x0, x0, #0x2
    206c:	ldr	x1, [sp, #16]
    2070:	add	x0, x1, x0
    2074:	and	w1, w2, #0xff
    2078:	strb	w1, [x0]
    207c:	ldr	x1, [sp, #24]
    2080:	ldrsw	x0, [sp, #44]
    2084:	lsl	x0, x0, #2
    2088:	add	x0, x1, x0
    208c:	ldr	w2, [x0, #8]
    2090:	ldr	w0, [sp, #44]
    2094:	lsl	w0, w0, #2
    2098:	sxtw	x0, w0
    209c:	add	x0, x0, #0x3
    20a0:	ldr	x1, [sp, #16]
    20a4:	add	x0, x1, x0
    20a8:	and	w1, w2, #0xff
    20ac:	strb	w1, [x0]
    20b0:	ldr	w0, [sp, #44]
    20b4:	add	w0, w0, #0x1
    20b8:	str	w0, [sp, #44]
    20bc:	ldr	w0, [sp, #44]
    20c0:	cmp	w0, #0x4
    20c4:	b.le	1fd8 <_Py_strhex@plt+0x11c8>
    20c8:	nop
    20cc:	nop
    20d0:	ldp	x29, x30, [sp], #48
    20d4:	ret
    20d8:	stp	x29, x30, [sp, #-16]!
    20dc:	mov	x29, sp
    20e0:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
    20e4:	add	x0, x0, #0x98
    20e8:	bl	de0 <_PyObject_New@plt>
    20ec:	ldp	x29, x30, [sp], #16
    20f0:	ret
    20f4:	stp	x29, x30, [sp, #-32]!
    20f8:	mov	x29, sp
    20fc:	str	x0, [sp, #24]
    2100:	ldr	x0, [sp, #24]
    2104:	bl	d70 <PyObject_Free@plt>
    2108:	nop
    210c:	ldp	x29, x30, [sp], #32
    2110:	ret
    2114:	stp	x29, x30, [sp, #-48]!
    2118:	mov	x29, sp
    211c:	str	x0, [sp, #24]
    2120:	bl	20d8 <_Py_strhex@plt+0x12c8>
    2124:	str	x0, [sp, #40]
    2128:	ldr	x0, [sp, #40]
    212c:	cmp	x0, #0x0
    2130:	b.ne	213c <_Py_strhex@plt+0x132c>  // b.any
    2134:	mov	x0, #0x0                   	// #0
    2138:	b	2184 <_Py_strhex@plt+0x1374>
    213c:	ldr	x0, [sp, #40]
    2140:	add	x2, x0, #0x10
    2144:	ldr	x0, [sp, #24]
    2148:	add	x1, x0, #0x10
    214c:	mov	x0, x2
    2150:	ldp	x2, x3, [x1]
    2154:	stp	x2, x3, [x0]
    2158:	ldp	x2, x3, [x1, #16]
    215c:	stp	x2, x3, [x0, #16]
    2160:	ldp	x2, x3, [x1, #32]
    2164:	stp	x2, x3, [x0, #32]
    2168:	ldp	x2, x3, [x1, #48]
    216c:	stp	x2, x3, [x0, #48]
    2170:	ldp	x2, x3, [x1, #64]
    2174:	stp	x2, x3, [x0, #64]
    2178:	ldp	x2, x3, [x1, #80]
    217c:	stp	x2, x3, [x0, #80]
    2180:	ldr	x0, [sp, #40]
    2184:	ldp	x29, x30, [sp], #48
    2188:	ret
    218c:	stp	x29, x30, [sp, #-160]!
    2190:	mov	x29, sp
    2194:	str	x0, [sp, #24]
    2198:	ldr	x0, [sp, #24]
    219c:	add	x1, x0, #0x10
    21a0:	add	x0, sp, #0x28
    21a4:	ldp	x2, x3, [x1]
    21a8:	stp	x2, x3, [x0]
    21ac:	ldp	x2, x3, [x1, #16]
    21b0:	stp	x2, x3, [x0, #16]
    21b4:	ldp	x2, x3, [x1, #32]
    21b8:	stp	x2, x3, [x0, #32]
    21bc:	ldp	x2, x3, [x1, #48]
    21c0:	stp	x2, x3, [x0, #48]
    21c4:	ldp	x2, x3, [x1, #64]
    21c8:	stp	x2, x3, [x0, #64]
    21cc:	ldp	x2, x3, [x1, #80]
    21d0:	stp	x2, x3, [x0, #80]
    21d4:	add	x1, sp, #0x88
    21d8:	add	x0, sp, #0x28
    21dc:	bl	1e08 <_Py_strhex@plt+0xff8>
    21e0:	add	x0, sp, #0x88
    21e4:	mov	x1, #0x14                  	// #20
    21e8:	bl	d30 <PyBytes_FromStringAndSize@plt>
    21ec:	ldp	x29, x30, [sp], #160
    21f0:	ret
    21f4:	stp	x29, x30, [sp, #-160]!
    21f8:	mov	x29, sp
    21fc:	str	x0, [sp, #24]
    2200:	ldr	x0, [sp, #24]
    2204:	add	x1, x0, #0x10
    2208:	add	x0, sp, #0x28
    220c:	ldp	x2, x3, [x1]
    2210:	stp	x2, x3, [x0]
    2214:	ldp	x2, x3, [x1, #16]
    2218:	stp	x2, x3, [x0, #16]
    221c:	ldp	x2, x3, [x1, #32]
    2220:	stp	x2, x3, [x0, #32]
    2224:	ldp	x2, x3, [x1, #48]
    2228:	stp	x2, x3, [x0, #48]
    222c:	ldp	x2, x3, [x1, #64]
    2230:	stp	x2, x3, [x0, #64]
    2234:	ldp	x2, x3, [x1, #80]
    2238:	stp	x2, x3, [x0, #80]
    223c:	add	x1, sp, #0x88
    2240:	add	x0, sp, #0x28
    2244:	bl	1e08 <_Py_strhex@plt+0xff8>
    2248:	add	x0, sp, #0x88
    224c:	mov	x1, #0x14                  	// #20
    2250:	bl	e10 <_Py_strhex@plt>
    2254:	ldp	x29, x30, [sp], #160
    2258:	ret
    225c:	stp	x29, x30, [sp, #-112]!
    2260:	mov	x29, sp
    2264:	str	x0, [sp, #24]
    2268:	str	x1, [sp, #16]
    226c:	ldr	x0, [sp, #16]
    2270:	ldr	x0, [x0, #8]
    2274:	ldr	x0, [x0, #168]
    2278:	and	x0, x0, #0x10000000
    227c:	cmp	x0, #0x0
    2280:	b.eq	22a8 <_Py_strhex@plt+0x1498>  // b.none
    2284:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    2288:	ldr	x0, [x0, #4032]
    228c:	ldr	x2, [x0]
    2290:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    2294:	add	x1, x0, #0x7e8
    2298:	mov	x0, x2
    229c:	bl	d60 <PyErr_SetString@plt>
    22a0:	mov	x0, #0x0                   	// #0
    22a4:	b	2384 <_Py_strhex@plt+0x1574>
    22a8:	ldr	x0, [sp, #16]
    22ac:	ldr	x0, [x0, #8]
    22b0:	ldr	x0, [x0, #160]
    22b4:	cmp	x0, #0x0
    22b8:	b.eq	22d4 <_Py_strhex@plt+0x14c4>  // b.none
    22bc:	ldr	x0, [sp, #16]
    22c0:	ldr	x0, [x0, #8]
    22c4:	ldr	x0, [x0, #160]
    22c8:	ldr	x0, [x0]
    22cc:	cmp	x0, #0x0
    22d0:	b.ne	22f8 <_Py_strhex@plt+0x14e8>  // b.any
    22d4:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    22d8:	ldr	x0, [x0, #4032]
    22dc:	ldr	x2, [x0]
    22e0:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    22e4:	add	x1, x0, #0x818
    22e8:	mov	x0, x2
    22ec:	bl	d60 <PyErr_SetString@plt>
    22f0:	mov	x0, #0x0                   	// #0
    22f4:	b	2384 <_Py_strhex@plt+0x1574>
    22f8:	add	x0, sp, #0x20
    22fc:	mov	w2, #0x0                   	// #0
    2300:	mov	x1, x0
    2304:	ldr	x0, [sp, #16]
    2308:	bl	dd0 <PyObject_GetBuffer@plt>
    230c:	cmn	w0, #0x1
    2310:	b.ne	231c <_Py_strhex@plt+0x150c>  // b.any
    2314:	mov	x0, #0x0                   	// #0
    2318:	b	2384 <_Py_strhex@plt+0x1574>
    231c:	ldr	w0, [sp, #68]
    2320:	cmp	w0, #0x1
    2324:	b.le	2354 <_Py_strhex@plt+0x1544>
    2328:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    232c:	ldr	x0, [x0, #4024]
    2330:	ldr	x2, [x0]
    2334:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    2338:	add	x1, x0, #0x848
    233c:	mov	x0, x2
    2340:	bl	d60 <PyErr_SetString@plt>
    2344:	add	x0, sp, #0x20
    2348:	bl	d10 <PyBuffer_Release@plt>
    234c:	mov	x0, #0x0                   	// #0
    2350:	b	2384 <_Py_strhex@plt+0x1574>
    2354:	ldr	x0, [sp, #24]
    2358:	add	x0, x0, #0x10
    235c:	ldr	x1, [sp, #32]
    2360:	ldr	x2, [sp, #48]
    2364:	bl	1cb4 <_Py_strhex@plt+0xea4>
    2368:	add	x0, sp, #0x20
    236c:	bl	d10 <PyBuffer_Release@plt>
    2370:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    2374:	ldr	x0, [x0, #4056]
    2378:	bl	fb0 <_Py_strhex@plt+0x1a0>
    237c:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    2380:	ldr	x0, [x0, #4056]
    2384:	ldp	x29, x30, [sp], #112
    2388:	ret
    238c:	stp	x29, x30, [sp, #-32]!
    2390:	mov	x29, sp
    2394:	str	x0, [sp, #24]
    2398:	str	x1, [sp, #16]
    239c:	mov	x0, #0x40                  	// #64
    23a0:	bl	d90 <PyLong_FromLong@plt>
    23a4:	ldp	x29, x30, [sp], #32
    23a8:	ret
    23ac:	stp	x29, x30, [sp, #-32]!
    23b0:	mov	x29, sp
    23b4:	str	x0, [sp, #24]
    23b8:	str	x1, [sp, #16]
    23bc:	mov	x1, #0x4                   	// #4
    23c0:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    23c4:	add	x0, x0, #0x890
    23c8:	bl	e00 <PyUnicode_FromStringAndSize@plt>
    23cc:	ldp	x29, x30, [sp], #32
    23d0:	ret
    23d4:	stp	x29, x30, [sp, #-32]!
    23d8:	mov	x29, sp
    23dc:	str	x0, [sp, #24]
    23e0:	str	x1, [sp, #16]
    23e4:	mov	x0, #0x14                  	// #20
    23e8:	bl	d90 <PyLong_FromLong@plt>
    23ec:	ldp	x29, x30, [sp], #32
    23f0:	ret
    23f4:	stp	x29, x30, [sp, #-128]!
    23f8:	mov	x29, sp
    23fc:	str	x0, [sp, #24]
    2400:	str	x1, [sp, #16]
    2404:	ldr	x0, [sp, #16]
    2408:	cmp	x0, #0x0
    240c:	b.eq	24f8 <_Py_strhex@plt+0x16e8>  // b.none
    2410:	ldr	x0, [sp, #16]
    2414:	ldr	x0, [x0, #8]
    2418:	ldr	x0, [x0, #168]
    241c:	and	x0, x0, #0x10000000
    2420:	cmp	x0, #0x0
    2424:	b.eq	244c <_Py_strhex@plt+0x163c>  // b.none
    2428:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    242c:	ldr	x0, [x0, #4032]
    2430:	ldr	x2, [x0]
    2434:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    2438:	add	x1, x0, #0x7e8
    243c:	mov	x0, x2
    2440:	bl	d60 <PyErr_SetString@plt>
    2444:	mov	x0, #0x0                   	// #0
    2448:	b	259c <_Py_strhex@plt+0x178c>
    244c:	ldr	x0, [sp, #16]
    2450:	ldr	x0, [x0, #8]
    2454:	ldr	x0, [x0, #160]
    2458:	cmp	x0, #0x0
    245c:	b.eq	2478 <_Py_strhex@plt+0x1668>  // b.none
    2460:	ldr	x0, [sp, #16]
    2464:	ldr	x0, [x0, #8]
    2468:	ldr	x0, [x0, #160]
    246c:	ldr	x0, [x0]
    2470:	cmp	x0, #0x0
    2474:	b.ne	249c <_Py_strhex@plt+0x168c>  // b.any
    2478:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    247c:	ldr	x0, [x0, #4032]
    2480:	ldr	x2, [x0]
    2484:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    2488:	add	x1, x0, #0x818
    248c:	mov	x0, x2
    2490:	bl	d60 <PyErr_SetString@plt>
    2494:	mov	x0, #0x0                   	// #0
    2498:	b	259c <_Py_strhex@plt+0x178c>
    249c:	add	x0, sp, #0x28
    24a0:	mov	w2, #0x0                   	// #0
    24a4:	mov	x1, x0
    24a8:	ldr	x0, [sp, #16]
    24ac:	bl	dd0 <PyObject_GetBuffer@plt>
    24b0:	cmn	w0, #0x1
    24b4:	b.ne	24c0 <_Py_strhex@plt+0x16b0>  // b.any
    24b8:	mov	x0, #0x0                   	// #0
    24bc:	b	259c <_Py_strhex@plt+0x178c>
    24c0:	ldr	w0, [sp, #76]
    24c4:	cmp	w0, #0x1
    24c8:	b.le	24f8 <_Py_strhex@plt+0x16e8>
    24cc:	adrp	x0, 12000 <PyInit__sha1@@Base+0xfa5c>
    24d0:	ldr	x0, [x0, #4024]
    24d4:	ldr	x2, [x0]
    24d8:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    24dc:	add	x1, x0, #0x848
    24e0:	mov	x0, x2
    24e4:	bl	d60 <PyErr_SetString@plt>
    24e8:	add	x0, sp, #0x28
    24ec:	bl	d10 <PyBuffer_Release@plt>
    24f0:	mov	x0, #0x0                   	// #0
    24f4:	b	259c <_Py_strhex@plt+0x178c>
    24f8:	bl	20d8 <_Py_strhex@plt+0x12c8>
    24fc:	str	x0, [sp, #120]
    2500:	ldr	x0, [sp, #120]
    2504:	cmp	x0, #0x0
    2508:	b.ne	2528 <_Py_strhex@plt+0x1718>  // b.any
    250c:	ldr	x0, [sp, #16]
    2510:	cmp	x0, #0x0
    2514:	b.eq	2520 <_Py_strhex@plt+0x1710>  // b.none
    2518:	add	x0, sp, #0x28
    251c:	bl	d10 <PyBuffer_Release@plt>
    2520:	mov	x0, #0x0                   	// #0
    2524:	b	259c <_Py_strhex@plt+0x178c>
    2528:	ldr	x0, [sp, #120]
    252c:	add	x0, x0, #0x10
    2530:	bl	1c40 <_Py_strhex@plt+0xe30>
    2534:	bl	db0 <PyErr_Occurred@plt>
    2538:	cmp	x0, #0x0
    253c:	b.eq	2570 <_Py_strhex@plt+0x1760>  // b.none
    2540:	ldr	x2, [sp, #120]
    2544:	mov	w1, #0x1fa                 	// #506
    2548:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    254c:	add	x0, x0, #0x8c0
    2550:	bl	fd8 <_Py_strhex@plt+0x1c8>
    2554:	ldr	x0, [sp, #16]
    2558:	cmp	x0, #0x0
    255c:	b.eq	2568 <_Py_strhex@plt+0x1758>  // b.none
    2560:	add	x0, sp, #0x28
    2564:	bl	d10 <PyBuffer_Release@plt>
    2568:	mov	x0, #0x0                   	// #0
    256c:	b	259c <_Py_strhex@plt+0x178c>
    2570:	ldr	x0, [sp, #16]
    2574:	cmp	x0, #0x0
    2578:	b.eq	2598 <_Py_strhex@plt+0x1788>  // b.none
    257c:	ldr	x0, [sp, #120]
    2580:	add	x0, x0, #0x10
    2584:	ldr	x1, [sp, #40]
    2588:	ldr	x2, [sp, #56]
    258c:	bl	1cb4 <_Py_strhex@plt+0xea4>
    2590:	add	x0, sp, #0x28
    2594:	bl	d10 <PyBuffer_Release@plt>
    2598:	ldr	x0, [sp, #120]
    259c:	ldp	x29, x30, [sp], #128
    25a0:	ret

00000000000025a4 <PyInit__sha1@@Base>:
    25a4:	stp	x29, x30, [sp, #-32]!
    25a8:	mov	x29, sp
    25ac:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
    25b0:	add	x0, x0, #0x98
    25b4:	adrp	x1, 12000 <PyInit__sha1@@Base+0xfa5c>
    25b8:	ldr	x1, [x1, #4048]
    25bc:	str	x1, [x0, #8]
    25c0:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
    25c4:	add	x0, x0, #0x98
    25c8:	bl	d80 <PyType_Ready@plt>
    25cc:	cmp	w0, #0x0
    25d0:	b.ge	25dc <PyInit__sha1@@Base+0x38>  // b.tcont
    25d4:	mov	x0, #0x0                   	// #0
    25d8:	b	262c <PyInit__sha1@@Base+0x88>
    25dc:	mov	w1, #0x3f5                 	// #1013
    25e0:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
    25e4:	add	x0, x0, #0x3b8
    25e8:	bl	dc0 <PyModule_Create2@plt>
    25ec:	str	x0, [sp, #24]
    25f0:	ldr	x0, [sp, #24]
    25f4:	cmp	x0, #0x0
    25f8:	b.ne	2604 <PyInit__sha1@@Base+0x60>  // b.any
    25fc:	mov	x0, #0x0                   	// #0
    2600:	b	262c <PyInit__sha1@@Base+0x88>
    2604:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
    2608:	add	x0, x0, #0x98
    260c:	bl	fb0 <_Py_strhex@plt+0x1a0>
    2610:	adrp	x0, 13000 <PyInit__sha1@@Base+0x10a5c>
    2614:	add	x2, x0, #0x98
    2618:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    261c:	add	x1, x0, #0x8f8
    2620:	ldr	x0, [sp, #24]
    2624:	bl	df0 <PyModule_AddObject@plt>
    2628:	ldr	x0, [sp, #24]
    262c:	ldp	x29, x30, [sp], #32
    2630:	ret

Disassembly of section .fini:

0000000000002634 <.fini>:
    2634:	stp	x29, x30, [sp, #-16]!
    2638:	mov	x29, sp
    263c:	ldp	x29, x30, [sp], #16
    2640:	ret
