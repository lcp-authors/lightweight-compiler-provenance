
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot-generator_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400980 <_init>:
  400980:	stp	x29, x30, [sp, #-16]!
  400984:	mov	x29, sp
  400988:	bl	400b20 <call_weak_fn>
  40098c:	ldp	x29, x30, [sp], #16
  400990:	ret

Disassembly of section .plt:

00000000004009a0 <.plt>:
  4009a0:	stp	x16, x30, [sp, #-16]!
  4009a4:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  4009a8:	ldr	x17, [x16, #3936]
  4009ac:	add	x16, x16, #0xf60
  4009b0:	br	x17
  4009b4:	nop
  4009b8:	nop
  4009bc:	nop

00000000004009c0 <stpcpy@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  4009c4:	ldr	x17, [x16, #3944]
  4009c8:	add	x16, x16, #0xf68
  4009cc:	br	x17

00000000004009d0 <__libc_start_main@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  4009d4:	ldr	x17, [x16, #3952]
  4009d8:	add	x16, x16, #0xf70
  4009dc:	br	x17

00000000004009e0 <__gmon_start__@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  4009e4:	ldr	x17, [x16, #3960]
  4009e8:	add	x16, x16, #0xf78
  4009ec:	br	x17

00000000004009f0 <symlink@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  4009f4:	ldr	x17, [x16, #3968]
  4009f8:	add	x16, x16, #0xf80
  4009fc:	br	x17

0000000000400a00 <log_assert_failed_realm@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a04:	ldr	x17, [x16, #3976]
  400a08:	add	x16, x16, #0xf88
  400a0c:	br	x17

0000000000400a10 <in_initrd@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a14:	ldr	x17, [x16, #3984]
  400a18:	add	x16, x16, #0xf90
  400a1c:	br	x17

0000000000400a20 <is_efi_boot@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a24:	ldr	x17, [x16, #3992]
  400a28:	add	x16, x16, #0xf98
  400a2c:	br	x17

0000000000400a30 <access@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a34:	ldr	x17, [x16, #4000]
  400a38:	add	x16, x16, #0xfa0
  400a3c:	br	x17

0000000000400a40 <abort@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a44:	ldr	x17, [x16, #4008]
  400a48:	add	x16, x16, #0xfa8
  400a4c:	br	x17

0000000000400a50 <log_setup_generator@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a54:	ldr	x17, [x16, #4016]
  400a58:	add	x16, x16, #0xfb0
  400a5c:	br	x17

0000000000400a60 <__errno_location@plt>:
  400a60:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a64:	ldr	x17, [x16, #4024]
  400a68:	add	x16, x16, #0xfb8
  400a6c:	br	x17

0000000000400a70 <__stack_chk_fail@plt>:
  400a70:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a74:	ldr	x17, [x16, #4032]
  400a78:	add	x16, x16, #0xfc0
  400a7c:	br	x17

0000000000400a80 <log_internal_realm@plt>:
  400a80:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a84:	ldr	x17, [x16, #4040]
  400a88:	add	x16, x16, #0xfc8
  400a8c:	br	x17

0000000000400a90 <detect_container@plt>:
  400a90:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400a94:	ldr	x17, [x16, #4048]
  400a98:	add	x16, x16, #0xfd0
  400a9c:	br	x17

0000000000400aa0 <strlen@plt>:
  400aa0:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400aa4:	ldr	x17, [x16, #4056]
  400aa8:	add	x16, x16, #0xfd8
  400aac:	br	x17

0000000000400ab0 <mkdir_parents@plt>:
  400ab0:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400ab4:	ldr	x17, [x16, #4064]
  400ab8:	add	x16, x16, #0xfe0
  400abc:	br	x17

0000000000400ac0 <log_get_max_level_realm@plt>:
  400ac0:	adrp	x16, 411000 <__FRAME_END__+0xfbe8>
  400ac4:	ldr	x17, [x16, #4072]
  400ac8:	add	x16, x16, #0xfe8
  400acc:	br	x17

Disassembly of section .text:

0000000000400ad0 <_start>:
  400ad0:	mov	x29, #0x0                   	// #0
  400ad4:	mov	x30, #0x0                   	// #0
  400ad8:	mov	x5, x0
  400adc:	ldr	x1, [sp]
  400ae0:	add	x2, sp, #0x8
  400ae4:	mov	x6, sp
  400ae8:	movz	x0, #0x0, lsl #48
  400aec:	movk	x0, #0x0, lsl #32
  400af0:	movk	x0, #0x40, lsl #16
  400af4:	movk	x0, #0xc20
  400af8:	movz	x3, #0x0, lsl #48
  400afc:	movk	x3, #0x0, lsl #32
  400b00:	movk	x3, #0x40, lsl #16
  400b04:	movk	x3, #0xfa0
  400b08:	movz	x4, #0x0, lsl #48
  400b0c:	movk	x4, #0x0, lsl #32
  400b10:	movk	x4, #0x40, lsl #16
  400b14:	movk	x4, #0x1020
  400b18:	bl	4009d0 <__libc_start_main@plt>
  400b1c:	bl	400a40 <abort@plt>

0000000000400b20 <call_weak_fn>:
  400b20:	adrp	x0, 411000 <__FRAME_END__+0xfbe8>
  400b24:	ldr	x0, [x0, #4088]
  400b28:	cbz	x0, 400b30 <call_weak_fn+0x10>
  400b2c:	b	4009e0 <__gmon_start__@plt>
  400b30:	ret

0000000000400b34 <deregister_tm_clones>:
  400b34:	adrp	x0, 412000 <arg_dest>
  400b38:	add	x0, x0, #0x8
  400b3c:	adrp	x1, 412000 <arg_dest>
  400b40:	add	x1, x1, #0x8
  400b44:	cmp	x0, x1
  400b48:	b.eq	400b7c <deregister_tm_clones+0x48>  // b.none
  400b4c:	stp	x29, x30, [sp, #-32]!
  400b50:	mov	x29, sp
  400b54:	adrp	x0, 401000 <__libc_csu_init+0x60>
  400b58:	ldr	x0, [x0, #56]
  400b5c:	str	x0, [sp, #24]
  400b60:	mov	x1, x0
  400b64:	cbz	x1, 400b74 <deregister_tm_clones+0x40>
  400b68:	adrp	x0, 412000 <arg_dest>
  400b6c:	add	x0, x0, #0x8
  400b70:	blr	x1
  400b74:	ldp	x29, x30, [sp], #32
  400b78:	ret
  400b7c:	ret

0000000000400b80 <register_tm_clones>:
  400b80:	adrp	x0, 412000 <arg_dest>
  400b84:	add	x0, x0, #0x8
  400b88:	adrp	x1, 412000 <arg_dest>
  400b8c:	add	x1, x1, #0x8
  400b90:	sub	x0, x0, x1
  400b94:	lsr	x1, x0, #63
  400b98:	add	x0, x1, x0, asr #3
  400b9c:	cmp	xzr, x0, asr #1
  400ba0:	b.eq	400bd8 <register_tm_clones+0x58>  // b.none
  400ba4:	stp	x29, x30, [sp, #-32]!
  400ba8:	mov	x29, sp
  400bac:	asr	x1, x0, #1
  400bb0:	adrp	x0, 401000 <__libc_csu_init+0x60>
  400bb4:	ldr	x0, [x0, #64]
  400bb8:	str	x0, [sp, #24]
  400bbc:	mov	x2, x0
  400bc0:	cbz	x2, 400bd0 <register_tm_clones+0x50>
  400bc4:	adrp	x0, 412000 <arg_dest>
  400bc8:	add	x0, x0, #0x8
  400bcc:	blr	x2
  400bd0:	ldp	x29, x30, [sp], #32
  400bd4:	ret
  400bd8:	ret

0000000000400bdc <__do_global_dtors_aux>:
  400bdc:	adrp	x0, 412000 <arg_dest>
  400be0:	ldrb	w0, [x0, #8]
  400be4:	cbnz	w0, 400c08 <__do_global_dtors_aux+0x2c>
  400be8:	stp	x29, x30, [sp, #-16]!
  400bec:	mov	x29, sp
  400bf0:	bl	400b34 <deregister_tm_clones>
  400bf4:	adrp	x0, 412000 <arg_dest>
  400bf8:	mov	w1, #0x1                   	// #1
  400bfc:	strb	w1, [x0, #8]
  400c00:	ldp	x29, x30, [sp], #16
  400c04:	ret
  400c08:	ret

0000000000400c0c <frame_dummy>:
  400c0c:	stp	x29, x30, [sp, #-16]!
  400c10:	mov	x29, sp
  400c14:	bl	400b80 <register_tm_clones>
  400c18:	ldp	x29, x30, [sp], #16
  400c1c:	ret

0000000000400c20 <main>:
  400c20:	stp	x29, x30, [sp, #-48]!
  400c24:	mov	x29, sp
  400c28:	stp	x19, x20, [sp, #16]
  400c2c:	mov	w19, w0
  400c30:	mov	x20, x1
  400c34:	adrp	x0, 411000 <__FRAME_END__+0xfbe8>
  400c38:	ldr	x1, [x0, #3352]
  400c3c:	str	x1, [x29, #40]
  400c40:	mov	x1, #0x0                   	// #0
  400c44:	bl	400a50 <log_setup_generator@plt>
  400c48:	cmp	w19, #0x1
  400c4c:	ccmp	w19, #0x4, #0x4, gt
  400c50:	b.ne	400c8c <main+0x6c>  // b.any
  400c54:	cmp	w19, #0x1
  400c58:	b.le	400c68 <main+0x48>
  400c5c:	ldr	x1, [x20, #16]
  400c60:	adrp	x0, 412000 <arg_dest>
  400c64:	str	x1, [x0]
  400c68:	bl	400a10 <in_initrd@plt>
  400c6c:	and	w0, w0, #0xff
  400c70:	cbz	w0, 400d24 <main+0x104>
  400c74:	mov	w0, #0x0                   	// #0
  400c78:	bl	400ac0 <log_get_max_level_realm@plt>
  400c7c:	cmp	w0, #0x6
  400c80:	b.gt	400cf4 <main+0xd4>
  400c84:	mov	w0, #0x0                   	// #0
  400c88:	b	400ca0 <main+0x80>
  400c8c:	mov	w0, #0x0                   	// #0
  400c90:	bl	400ac0 <log_get_max_level_realm@plt>
  400c94:	cmp	w0, #0x2
  400c98:	b.gt	400cc4 <main+0xa4>
  400c9c:	mov	w0, #0x1                   	// #1
  400ca0:	adrp	x1, 411000 <__FRAME_END__+0xfbe8>
  400ca4:	ldr	x2, [x29, #40]
  400ca8:	ldr	x1, [x1, #3352]
  400cac:	eor	x1, x2, x1
  400cb0:	cbnz	x1, 400f9c <main+0x37c>
  400cb4:	mov	sp, x29
  400cb8:	ldp	x19, x20, [sp, #16]
  400cbc:	ldp	x29, x30, [sp], #48
  400cc0:	ret
  400cc4:	adrp	x5, 401000 <__libc_csu_init+0x60>
  400cc8:	add	x5, x5, #0x48
  400ccc:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400cd0:	add	x4, x4, #0x2b8
  400cd4:	mov	w3, #0x1c                  	// #28
  400cd8:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400cdc:	add	x2, x2, #0x7b
  400ce0:	mov	w1, #0x0                   	// #0
  400ce4:	mov	w0, #0x3                   	// #3
  400ce8:	bl	400a80 <log_internal_realm@plt>
  400cec:	mov	w0, #0x1                   	// #1
  400cf0:	b	400ca0 <main+0x80>
  400cf4:	adrp	x5, 401000 <__libc_csu_init+0x60>
  400cf8:	add	x5, x5, #0xa0
  400cfc:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400d00:	add	x4, x4, #0x2b8
  400d04:	mov	w3, #0x24                  	// #36
  400d08:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400d0c:	add	x2, x2, #0x7b
  400d10:	mov	w1, #0x0                   	// #0
  400d14:	mov	w0, #0x7                   	// #7
  400d18:	bl	400a80 <log_internal_realm@plt>
  400d1c:	mov	w0, #0x0                   	// #0
  400d20:	b	400ca0 <main+0x80>
  400d24:	bl	400a90 <detect_container@plt>
  400d28:	cmp	w0, #0x0
  400d2c:	b.le	400d78 <main+0x158>
  400d30:	mov	w0, #0x0                   	// #0
  400d34:	bl	400ac0 <log_get_max_level_realm@plt>
  400d38:	cmp	w0, #0x6
  400d3c:	b.gt	400d48 <main+0x128>
  400d40:	mov	w0, #0x0                   	// #0
  400d44:	b	400ca0 <main+0x80>
  400d48:	adrp	x5, 401000 <__libc_csu_init+0x60>
  400d4c:	add	x5, x5, #0xd0
  400d50:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400d54:	add	x4, x4, #0x2b8
  400d58:	mov	w3, #0x29                  	// #41
  400d5c:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400d60:	add	x2, x2, #0x7b
  400d64:	mov	w1, #0x0                   	// #0
  400d68:	mov	w0, #0x7                   	// #7
  400d6c:	bl	400a80 <log_internal_realm@plt>
  400d70:	mov	w0, #0x0                   	// #0
  400d74:	b	400ca0 <main+0x80>
  400d78:	bl	400a20 <is_efi_boot@plt>
  400d7c:	and	w0, w0, #0xff
  400d80:	cbnz	w0, 400dc8 <main+0x1a8>
  400d84:	bl	400ac0 <log_get_max_level_realm@plt>
  400d88:	cmp	w0, #0x6
  400d8c:	b.gt	400d98 <main+0x178>
  400d90:	mov	w0, #0x0                   	// #0
  400d94:	b	400ca0 <main+0x80>
  400d98:	adrp	x5, 401000 <__libc_csu_init+0x60>
  400d9c:	add	x5, x5, #0x100
  400da0:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400da4:	add	x4, x4, #0x2b8
  400da8:	mov	w3, #0x2e                  	// #46
  400dac:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400db0:	add	x2, x2, #0x7b
  400db4:	mov	w1, #0x0                   	// #0
  400db8:	mov	w0, #0x7                   	// #7
  400dbc:	bl	400a80 <log_internal_realm@plt>
  400dc0:	mov	w0, #0x0                   	// #0
  400dc4:	b	400ca0 <main+0x80>
  400dc8:	mov	w1, #0x0                   	// #0
  400dcc:	adrp	x0, 401000 <__libc_csu_init+0x60>
  400dd0:	add	x0, x0, #0x128
  400dd4:	bl	400a30 <access@plt>
  400dd8:	tbnz	w0, #31, 400e74 <main+0x254>
  400ddc:	adrp	x0, 412000 <arg_dest>
  400de0:	ldr	x20, [x0]
  400de4:	cbz	x20, 400f14 <main+0x2f4>
  400de8:	mov	x0, x20
  400dec:	bl	400aa0 <strlen@plt>
  400df0:	add	x0, x0, #0x2f
  400df4:	cmp	x0, #0x400, lsl #12
  400df8:	b.hi	400f28 <main+0x308>  // b.pmore
  400dfc:	add	x0, x0, #0xf
  400e00:	and	x0, x0, #0xfffffffffffffff0
  400e04:	sub	sp, sp, x0
  400e08:	mov	x19, sp
  400e0c:	mov	x1, x20
  400e10:	mov	x0, x19
  400e14:	bl	4009c0 <stpcpy@plt>
  400e18:	adrp	x1, 401000 <__libc_csu_init+0x60>
  400e1c:	add	x1, x1, #0x220
  400e20:	ldp	x2, x3, [x1]
  400e24:	stp	x2, x3, [x0]
  400e28:	ldp	x2, x3, [x1, #16]
  400e2c:	stp	x2, x3, [x0, #16]
  400e30:	ldr	x2, [x1, #32]
  400e34:	str	x2, [x0, #32]
  400e38:	ldur	x1, [x1, #39]
  400e3c:	stur	x1, [x0, #39]
  400e40:	mov	x20, x19
  400e44:	add	x19, x0, #0x2e
  400e48:	strb	wzr, [x19]
  400e4c:	mov	w1, #0x1ed                 	// #493
  400e50:	mov	x0, x20
  400e54:	bl	400ab0 <mkdir_parents@plt>
  400e58:	mov	x1, x20
  400e5c:	adrp	x0, 401000 <__libc_csu_init+0x60>
  400e60:	add	x0, x0, #0x250
  400e64:	bl	4009f0 <symlink@plt>
  400e68:	tbnz	w0, #31, 400f4c <main+0x32c>
  400e6c:	mov	w0, #0x0                   	// #0
  400e70:	b	400ca0 <main+0x80>
  400e74:	bl	400a60 <__errno_location@plt>
  400e78:	ldr	w19, [x0]
  400e7c:	cmp	w19, #0x2
  400e80:	b.eq	400e9c <main+0x27c>  // b.none
  400e84:	mov	w0, #0x0                   	// #0
  400e88:	bl	400ac0 <log_get_max_level_realm@plt>
  400e8c:	cmp	w0, #0x2
  400e90:	b.gt	400ee4 <main+0x2c4>
  400e94:	mov	w0, #0x1                   	// #1
  400e98:	b	400ca0 <main+0x80>
  400e9c:	mov	w0, #0x0                   	// #0
  400ea0:	bl	400ac0 <log_get_max_level_realm@plt>
  400ea4:	cmp	w0, #0x6
  400ea8:	b.gt	400eb4 <main+0x294>
  400eac:	mov	w0, #0x0                   	// #0
  400eb0:	b	400ca0 <main+0x80>
  400eb4:	adrp	x5, 401000 <__libc_csu_init+0x60>
  400eb8:	add	x5, x5, #0x180
  400ebc:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400ec0:	add	x4, x4, #0x2b8
  400ec4:	mov	w3, #0x35                  	// #53
  400ec8:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400ecc:	add	x2, x2, #0x7b
  400ed0:	mov	w1, #0x2                   	// #2
  400ed4:	mov	w0, #0x7                   	// #7
  400ed8:	bl	400a80 <log_internal_realm@plt>
  400edc:	mov	w0, #0x0                   	// #0
  400ee0:	b	400ca0 <main+0x80>
  400ee4:	adrp	x5, 401000 <__libc_csu_init+0x60>
  400ee8:	add	x5, x5, #0x1c0
  400eec:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400ef0:	add	x4, x4, #0x2b8
  400ef4:	mov	w3, #0x39                  	// #57
  400ef8:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400efc:	add	x2, x2, #0x7b
  400f00:	mov	w1, w19
  400f04:	mov	w0, #0x3                   	// #3
  400f08:	bl	400a80 <log_internal_realm@plt>
  400f0c:	mov	w0, #0x1                   	// #1
  400f10:	b	400ca0 <main+0x80>
  400f14:	sub	sp, sp, #0x10
  400f18:	mov	x19, sp
  400f1c:	cbnz	x20, 400e0c <main+0x1ec>
  400f20:	mov	x20, x19
  400f24:	b	400e48 <main+0x228>
  400f28:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400f2c:	add	x4, x4, #0x2b0
  400f30:	mov	w3, #0x3f                  	// #63
  400f34:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400f38:	add	x2, x2, #0x7b
  400f3c:	adrp	x1, 401000 <__libc_csu_init+0x60>
  400f40:	add	x1, x1, #0x200
  400f44:	mov	w0, #0x0                   	// #0
  400f48:	bl	400a00 <log_assert_failed_realm@plt>
  400f4c:	mov	w0, #0x0                   	// #0
  400f50:	bl	400ac0 <log_get_max_level_realm@plt>
  400f54:	cmp	w0, #0x2
  400f58:	b.gt	400f64 <main+0x344>
  400f5c:	mov	w0, #0x1                   	// #1
  400f60:	b	400ca0 <main+0x80>
  400f64:	bl	400a60 <__errno_location@plt>
  400f68:	mov	x6, x20
  400f6c:	adrp	x5, 401000 <__libc_csu_init+0x60>
  400f70:	add	x5, x5, #0x280
  400f74:	adrp	x4, 401000 <__libc_csu_init+0x60>
  400f78:	add	x4, x4, #0x2b8
  400f7c:	mov	w3, #0x42                  	// #66
  400f80:	adrp	x2, 401000 <__libc_csu_init+0x60>
  400f84:	add	x2, x2, #0x7b
  400f88:	ldr	w1, [x0]
  400f8c:	mov	w0, #0x3                   	// #3
  400f90:	bl	400a80 <log_internal_realm@plt>
  400f94:	mov	w0, #0x1                   	// #1
  400f98:	b	400ca0 <main+0x80>
  400f9c:	bl	400a70 <__stack_chk_fail@plt>

0000000000400fa0 <__libc_csu_init>:
  400fa0:	stp	x29, x30, [sp, #-64]!
  400fa4:	mov	x29, sp
  400fa8:	stp	x19, x20, [sp, #16]
  400fac:	adrp	x20, 411000 <__FRAME_END__+0xfbe8>
  400fb0:	add	x20, x20, #0xd10
  400fb4:	stp	x21, x22, [sp, #32]
  400fb8:	adrp	x21, 411000 <__FRAME_END__+0xfbe8>
  400fbc:	add	x21, x21, #0xd08
  400fc0:	sub	x20, x20, x21
  400fc4:	mov	w22, w0
  400fc8:	stp	x23, x24, [sp, #48]
  400fcc:	mov	x23, x1
  400fd0:	mov	x24, x2
  400fd4:	bl	400980 <_init>
  400fd8:	cmp	xzr, x20, asr #3
  400fdc:	b.eq	401008 <__libc_csu_init+0x68>  // b.none
  400fe0:	asr	x20, x20, #3
  400fe4:	mov	x19, #0x0                   	// #0
  400fe8:	ldr	x3, [x21, x19, lsl #3]
  400fec:	mov	x2, x24
  400ff0:	add	x19, x19, #0x1
  400ff4:	mov	x1, x23
  400ff8:	mov	w0, w22
  400ffc:	blr	x3
  401000:	cmp	x20, x19
  401004:	b.ne	400fe8 <__libc_csu_init+0x48>  // b.any
  401008:	ldp	x19, x20, [sp, #16]
  40100c:	ldp	x21, x22, [sp, #32]
  401010:	ldp	x23, x24, [sp, #48]
  401014:	ldp	x29, x30, [sp], #64
  401018:	ret
  40101c:	nop

0000000000401020 <__libc_csu_fini>:
  401020:	ret

Disassembly of section .fini:

0000000000401024 <_fini>:
  401024:	stp	x29, x30, [sp, #-16]!
  401028:	mov	x29, sp
  40102c:	ldp	x29, x30, [sp], #16
  401030:	ret
