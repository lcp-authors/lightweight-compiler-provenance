
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002368 <.init>:
    2368:	stp	x29, x30, [sp, #-16]!
    236c:	mov	x29, sp
    2370:	bl	2670 <adler32_z@plt+0x10>
    2374:	ldp	x29, x30, [sp], #16
    2378:	ret

Disassembly of section .plt:

0000000000002380 <memcpy@plt-0x20>:
    2380:	stp	x16, x30, [sp, #-16]!
    2384:	adrp	x16, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    2388:	ldr	x17, [x16, #4088]
    238c:	add	x16, x16, #0xff8
    2390:	br	x17
    2394:	nop
    2398:	nop
    239c:	nop

00000000000023a0 <memcpy@plt>:
    23a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16]
    23a8:	add	x16, x16, #0x0
    23ac:	br	x17

00000000000023b0 <crc32_z@plt>:
    23b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #8]
    23b8:	add	x16, x16, #0x8
    23bc:	br	x17

00000000000023c0 <gzvprintf@plt>:
    23c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #16]
    23c8:	add	x16, x16, #0x10
    23cc:	br	x17

00000000000023d0 <gzseek64@plt>:
    23d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #24]
    23d8:	add	x16, x16, #0x18
    23dc:	br	x17

00000000000023e0 <strlen@plt>:
    23e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #32]
    23e8:	add	x16, x16, #0x20
    23ec:	br	x17

00000000000023f0 <inflate@plt>:
    23f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #40]
    23f8:	add	x16, x16, #0x28
    23fc:	br	x17

0000000000002400 <gzclose_r@plt>:
    2400:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #48]
    2408:	add	x16, x16, #0x30
    240c:	br	x17

0000000000002410 <gzgetc@plt>:
    2410:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #56]
    2418:	add	x16, x16, #0x38
    241c:	br	x17

0000000000002420 <__cxa_finalize@plt>:
    2420:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #64]
    2428:	add	x16, x16, #0x40
    242c:	br	x17

0000000000002430 <crc32@plt>:
    2430:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #72]
    2438:	add	x16, x16, #0x48
    243c:	br	x17

0000000000002440 <inflateResetKeep@plt>:
    2440:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #80]
    2448:	add	x16, x16, #0x50
    244c:	br	x17

0000000000002450 <snprintf@plt>:
    2450:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #88]
    2458:	add	x16, x16, #0x58
    245c:	br	x17

0000000000002460 <malloc@plt>:
    2460:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #96]
    2468:	add	x16, x16, #0x60
    246c:	br	x17

0000000000002470 <open@plt>:
    2470:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #104]
    2478:	add	x16, x16, #0x68
    247c:	br	x17

0000000000002480 <deflateReset@plt>:
    2480:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #112]
    2488:	add	x16, x16, #0x70
    248c:	br	x17

0000000000002490 <deflate@plt>:
    2490:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #120]
    2498:	add	x16, x16, #0x78
    249c:	br	x17

00000000000024a0 <memset@plt>:
    24a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #128]
    24a8:	add	x16, x16, #0x80
    24ac:	br	x17

00000000000024b0 <lseek64@plt>:
    24b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #136]
    24b8:	add	x16, x16, #0x88
    24bc:	br	x17

00000000000024c0 <gztell64@plt>:
    24c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #144]
    24c8:	add	x16, x16, #0x90
    24cc:	br	x17

00000000000024d0 <deflateInit2_@plt>:
    24d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #152]
    24d8:	add	x16, x16, #0x98
    24dc:	br	x17

00000000000024e0 <deflateParams@plt>:
    24e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #160]
    24e8:	add	x16, x16, #0xa0
    24ec:	br	x17

00000000000024f0 <deflateInit_@plt>:
    24f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #168]
    24f8:	add	x16, x16, #0xa8
    24fc:	br	x17

0000000000002500 <strerror@plt>:
    2500:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #176]
    2508:	add	x16, x16, #0xb0
    250c:	br	x17

0000000000002510 <close@plt>:
    2510:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #184]
    2518:	add	x16, x16, #0xb8
    251c:	br	x17

0000000000002520 <__gmon_start__@plt>:
    2520:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #192]
    2528:	add	x16, x16, #0xc0
    252c:	br	x17

0000000000002530 <write@plt>:
    2530:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #200]
    2538:	add	x16, x16, #0xc8
    253c:	br	x17

0000000000002540 <uncompress2@plt>:
    2540:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #208]
    2548:	add	x16, x16, #0xd0
    254c:	br	x17

0000000000002550 <inflateEnd@plt>:
    2550:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #216]
    2558:	add	x16, x16, #0xd8
    255c:	br	x17

0000000000002560 <adler32@plt>:
    2560:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #224]
    2568:	add	x16, x16, #0xe0
    256c:	br	x17

0000000000002570 <free@plt>:
    2570:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #232]
    2578:	add	x16, x16, #0xe8
    257c:	br	x17

0000000000002580 <gzclose_w@plt>:
    2580:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #240]
    2588:	add	x16, x16, #0xf0
    258c:	br	x17

0000000000002590 <deflateEnd@plt>:
    2590:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #248]
    2598:	add	x16, x16, #0xf8
    259c:	br	x17

00000000000025a0 <gzrewind@plt>:
    25a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #256]
    25a8:	add	x16, x16, #0x100
    25ac:	br	x17

00000000000025b0 <gzoffset64@plt>:
    25b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #264]
    25b8:	add	x16, x16, #0x108
    25bc:	br	x17

00000000000025c0 <inflateInit_@plt>:
    25c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #272]
    25c8:	add	x16, x16, #0x110
    25cc:	br	x17

00000000000025d0 <compress2@plt>:
    25d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #280]
    25d8:	add	x16, x16, #0x118
    25dc:	br	x17

00000000000025e0 <read@plt>:
    25e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #288]
    25e8:	add	x16, x16, #0x120
    25ec:	br	x17

00000000000025f0 <memchr@plt>:
    25f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #296]
    25f8:	add	x16, x16, #0x128
    25fc:	br	x17

0000000000002600 <inflateInit2_@plt>:
    2600:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #304]
    2608:	add	x16, x16, #0x130
    260c:	br	x17

0000000000002610 <inflateReset@plt>:
    2610:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #312]
    2618:	add	x16, x16, #0x138
    261c:	br	x17

0000000000002620 <vsnprintf@plt>:
    2620:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #320]
    2628:	add	x16, x16, #0x140
    262c:	br	x17

0000000000002630 <deflateResetKeep@plt>:
    2630:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #328]
    2638:	add	x16, x16, #0x148
    263c:	br	x17

0000000000002640 <inflateReset2@plt>:
    2640:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #336]
    2648:	add	x16, x16, #0x150
    264c:	br	x17

0000000000002650 <__errno_location@plt>:
    2650:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #344]
    2658:	add	x16, x16, #0x158
    265c:	br	x17

0000000000002660 <adler32_z@plt>:
    2660:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #352]
    2668:	add	x16, x16, #0x160
    266c:	br	x17

Disassembly of section .text:

0000000000002670 <adler32_z@@ZLIB_1.2.9-0x1c0>:
    2670:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    2674:	ldr	x0, [x0, #4048]
    2678:	cbz	x0, 2680 <adler32_z@plt+0x20>
    267c:	b	2520 <__gmon_start__@plt>
    2680:	ret
    2684:	nop
    2688:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x166f0>
    268c:	add	x0, x0, #0x170
    2690:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x166f0>
    2694:	add	x1, x1, #0x170
    2698:	cmp	x1, x0
    269c:	b.eq	26b4 <adler32_z@plt+0x54>  // b.none
    26a0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    26a4:	ldr	x1, [x1, #4032]
    26a8:	cbz	x1, 26b4 <adler32_z@plt+0x54>
    26ac:	mov	x16, x1
    26b0:	br	x16
    26b4:	ret
    26b8:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x166f0>
    26bc:	add	x0, x0, #0x170
    26c0:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x166f0>
    26c4:	add	x1, x1, #0x170
    26c8:	sub	x1, x1, x0
    26cc:	lsr	x2, x1, #63
    26d0:	add	x1, x2, x1, asr #3
    26d4:	cmp	xzr, x1, asr #1
    26d8:	asr	x1, x1, #1
    26dc:	b.eq	26f4 <adler32_z@plt+0x94>  // b.none
    26e0:	adrp	x2, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    26e4:	ldr	x2, [x2, #4064]
    26e8:	cbz	x2, 26f4 <adler32_z@plt+0x94>
    26ec:	mov	x16, x2
    26f0:	br	x16
    26f4:	ret
    26f8:	stp	x29, x30, [sp, #-32]!
    26fc:	mov	x29, sp
    2700:	str	x19, [sp, #16]
    2704:	adrp	x19, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x166f0>
    2708:	ldrb	w0, [x19, #368]
    270c:	cbnz	w0, 2734 <adler32_z@plt+0xd4>
    2710:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    2714:	ldr	x0, [x0, #4040]
    2718:	cbz	x0, 2728 <adler32_z@plt+0xc8>
    271c:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x166f0>
    2720:	ldr	x0, [x0, #360]
    2724:	bl	2420 <__cxa_finalize@plt>
    2728:	bl	2688 <adler32_z@plt+0x28>
    272c:	mov	w0, #0x1                   	// #1
    2730:	strb	w0, [x19, #368]
    2734:	ldr	x19, [sp, #16]
    2738:	ldp	x29, x30, [sp], #32
    273c:	ret
    2740:	b	26b8 <adler32_z@plt+0x58>
    2744:	tbnz	x2, #63, 2828 <adler32_z@plt+0x1c8>
    2748:	and	x4, x0, #0xffff
    274c:	mov	x3, #0xe2e7                	// #58087
    2750:	movk	x3, #0x8697, lsl #16
    2754:	movk	x3, #0x8070, lsl #32
    2758:	movk	x3, #0x8007, lsl #48
    275c:	smulh	x3, x2, x3
    2760:	add	x3, x3, x2
    2764:	asr	x3, x3, #15
    2768:	sub	x3, x3, x2, asr #63
    276c:	lsl	x5, x3, #12
    2770:	sub	x5, x5, x3
    2774:	add	x3, x3, x5, lsl #4
    2778:	sub	x3, x2, x3
    277c:	mul	x2, x3, x4
    2780:	add	x4, x4, w1, uxth
    2784:	mov	x7, #0xfff0                	// #65520
    2788:	add	x6, x4, x7
    278c:	lsr	w0, w0, #16
    2790:	lsr	w1, w1, #16
    2794:	add	x0, x0, x1
    2798:	mov	x1, #0xc5cd                	// #50637
    279c:	movk	x1, #0xd2f, lsl #16
    27a0:	movk	x1, #0xe1, lsl #32
    27a4:	movk	x1, #0xf, lsl #48
    27a8:	umulh	x5, x2, x1
    27ac:	sub	x1, x2, x5
    27b0:	add	x1, x5, x1, lsr #1
    27b4:	lsr	x1, x1, #15
    27b8:	lsl	x5, x1, #12
    27bc:	sub	x5, x5, x1
    27c0:	add	x1, x1, x5, lsl #4
    27c4:	sub	x2, x2, x1
    27c8:	sub	x3, x2, x3
    27cc:	add	x3, x0, x3
    27d0:	add	x0, x3, #0xf, lsl #12
    27d4:	add	x0, x0, #0xff1
    27d8:	cmp	x6, x7
    27dc:	b.ls	27f4 <adler32_z@plt+0x194>  // b.plast
    27e0:	sub	x6, x4, #0x1
    27e4:	cmp	x6, x7
    27e8:	b.ls	27f4 <adler32_z@plt+0x194>  // b.plast
    27ec:	sub	x6, x4, #0xf, lsl #12
    27f0:	sub	x6, x6, #0xff2
    27f4:	sub	x3, x3, #0xf, lsl #12
    27f8:	sub	x3, x3, #0xff1
    27fc:	mov	x1, #0xffe1                	// #65505
    2800:	movk	x1, #0x1, lsl #16
    2804:	cmp	x0, x1
    2808:	csel	x0, x3, x0, hi  // hi = pmore
    280c:	sub	x1, x0, #0xf, lsl #12
    2810:	sub	x1, x1, #0xff1
    2814:	mov	x2, #0xfff0                	// #65520
    2818:	cmp	x0, x2
    281c:	csel	x0, x1, x0, hi  // hi = pmore
    2820:	orr	x0, x6, x0, lsl #16
    2824:	ret
    2828:	mov	x0, #0xffffffff            	// #4294967295
    282c:	b	2824 <adler32_z@plt+0x1c4>

0000000000002830 <adler32_z@@ZLIB_1.2.9>:
    2830:	mov	x3, x1
    2834:	lsr	w11, w0, #16
    2838:	and	x10, x0, #0xffff
    283c:	cmp	x2, #0x1
    2840:	b.eq	29cc <adler32_z@@ZLIB_1.2.9+0x19c>  // b.none
    2844:	mov	x13, x2
    2848:	cbz	x1, 2be4 <adler32_z@@ZLIB_1.2.9+0x3b4>
    284c:	cmp	x2, #0xf
    2850:	b.ls	2a04 <adler32_z@@ZLIB_1.2.9+0x1d4>  // b.plast
    2854:	stp	x29, x30, [sp, #-64]!
    2858:	mov	x29, sp
    285c:	stp	x19, x20, [sp, #16]
    2860:	add	x12, x1, #0x1, lsl #12
    2864:	add	x12, x12, #0x5b0
    2868:	mov	x0, #0x15af                	// #5551
    286c:	cmp	x2, x0
    2870:	b.ls	2a7c <adler32_z@@ZLIB_1.2.9+0x24c>  // b.plast
    2874:	stp	x21, x22, [sp, #32]
    2878:	str	x23, [sp, #48]
    287c:	mov	x16, #0xffffffffffffea50    	// #-5552
    2880:	mov	x15, #0xc5cd                	// #50637
    2884:	movk	x15, #0xd2f, lsl #16
    2888:	movk	x15, #0xe1, lsl #32
    288c:	movk	x15, #0xf, lsl #48
    2890:	mov	x18, #0x15b0                	// #5552
    2894:	mov	x17, x0
    2898:	add	x3, x12, x16
    289c:	mov	x14, x13
    28a0:	add	x13, x13, x16
    28a4:	ldrb	w0, [x3]
    28a8:	add	x0, x0, x10
    28ac:	ldrb	w1, [x3, #1]
    28b0:	add	x1, x1, x0
    28b4:	ldrb	w9, [x3, #2]
    28b8:	add	x9, x9, x1
    28bc:	ldrb	w23, [x3, #3]
    28c0:	add	x23, x23, x9
    28c4:	ldrb	w8, [x3, #4]
    28c8:	add	x8, x8, x23
    28cc:	ldrb	w22, [x3, #5]
    28d0:	add	x22, x22, x8
    28d4:	ldrb	w7, [x3, #6]
    28d8:	add	x7, x7, x22
    28dc:	ldrb	w21, [x3, #7]
    28e0:	add	x21, x21, x7
    28e4:	ldrb	w6, [x3, #8]
    28e8:	add	x6, x6, x21
    28ec:	ldrb	w20, [x3, #9]
    28f0:	add	x20, x20, x6
    28f4:	ldrb	w5, [x3, #10]
    28f8:	add	x5, x5, x20
    28fc:	ldrb	w19, [x3, #11]
    2900:	add	x19, x19, x5
    2904:	ldrb	w4, [x3, #12]
    2908:	add	x4, x4, x19
    290c:	ldrb	w30, [x3, #13]
    2910:	add	x30, x30, x4
    2914:	ldrb	w2, [x3, #14]
    2918:	add	x2, x2, x30
    291c:	ldrb	w10, [x3, #15]
    2920:	add	x10, x10, x2
    2924:	add	x1, x0, x1
    2928:	add	x9, x9, x23
    292c:	add	x1, x1, x9
    2930:	add	x8, x8, x22
    2934:	add	x1, x1, x8
    2938:	add	x7, x7, x21
    293c:	add	x1, x1, x7
    2940:	add	x0, x6, x20
    2944:	add	x0, x1, x0
    2948:	add	x5, x5, x19
    294c:	add	x0, x0, x5
    2950:	add	x4, x4, x30
    2954:	add	x0, x0, x4
    2958:	add	x2, x2, x10
    295c:	add	x0, x0, x2
    2960:	add	x11, x11, x0
    2964:	add	x3, x3, #0x10
    2968:	cmp	x3, x12
    296c:	b.ne	28a4 <adler32_z@@ZLIB_1.2.9+0x74>  // b.any
    2970:	umulh	x1, x10, x15
    2974:	sub	x0, x10, x1
    2978:	add	x0, x1, x0, lsr #1
    297c:	lsr	x0, x0, #15
    2980:	lsl	x1, x0, #12
    2984:	sub	x1, x1, x0
    2988:	add	x0, x0, x1, lsl #4
    298c:	sub	x10, x10, x0
    2990:	umulh	x1, x11, x15
    2994:	sub	x0, x11, x1
    2998:	add	x0, x1, x0, lsr #1
    299c:	lsr	x0, x0, #15
    29a0:	lsl	x1, x0, #12
    29a4:	sub	x1, x1, x0
    29a8:	add	x0, x0, x1, lsl #4
    29ac:	sub	x11, x11, x0
    29b0:	add	x12, x12, x18
    29b4:	cmp	x13, x17
    29b8:	b.hi	2898 <adler32_z@@ZLIB_1.2.9+0x68>  // b.pmore
    29bc:	cbnz	x13, 2a6c <adler32_z@@ZLIB_1.2.9+0x23c>
    29c0:	ldp	x21, x22, [sp, #32]
    29c4:	ldr	x23, [sp, #48]
    29c8:	b	2bd4 <adler32_z@@ZLIB_1.2.9+0x3a4>
    29cc:	ldrb	w0, [x1]
    29d0:	add	x10, x0, x10
    29d4:	sub	x0, x10, #0xf, lsl #12
    29d8:	sub	x0, x0, #0xff1
    29dc:	mov	x1, #0xfff0                	// #65520
    29e0:	cmp	x10, x1
    29e4:	csel	x10, x0, x10, hi  // hi = pmore
    29e8:	add	x11, x10, x11
    29ec:	sub	x0, x11, #0xf, lsl #12
    29f0:	sub	x0, x0, #0xff1
    29f4:	cmp	x11, x1
    29f8:	csel	x11, x0, x11, hi  // hi = pmore
    29fc:	orr	x0, x10, x11, lsl #16
    2a00:	ret
    2a04:	cbz	x2, 2a20 <adler32_z@@ZLIB_1.2.9+0x1f0>
    2a08:	add	x13, x1, x2
    2a0c:	ldrb	w0, [x3], #1
    2a10:	add	x10, x10, x0
    2a14:	add	x11, x11, x10
    2a18:	cmp	x13, x3
    2a1c:	b.ne	2a0c <adler32_z@@ZLIB_1.2.9+0x1dc>  // b.any
    2a20:	sub	x0, x10, #0xf, lsl #12
    2a24:	sub	x0, x0, #0xff1
    2a28:	mov	x1, #0xfff0                	// #65520
    2a2c:	cmp	x10, x1
    2a30:	csel	x10, x0, x10, hi  // hi = pmore
    2a34:	mov	x0, #0xc5cd                	// #50637
    2a38:	movk	x0, #0xd2f, lsl #16
    2a3c:	movk	x0, #0xe1, lsl #32
    2a40:	movk	x0, #0xf, lsl #48
    2a44:	umulh	x1, x11, x0
    2a48:	sub	x0, x11, x1
    2a4c:	add	x0, x1, x0, lsr #1
    2a50:	lsr	x1, x0, #15
    2a54:	lsl	x0, x1, #12
    2a58:	sub	x0, x0, x1
    2a5c:	add	x0, x1, x0, lsl #4
    2a60:	sub	x11, x11, x0
    2a64:	orr	x0, x10, x11, lsl #16
    2a68:	ret
    2a6c:	cmp	x13, #0xf
    2a70:	b.ls	2bec <adler32_z@@ZLIB_1.2.9+0x3bc>  // b.plast
    2a74:	ldp	x21, x22, [sp, #32]
    2a78:	ldr	x23, [sp, #48]
    2a7c:	sub	x14, x13, #0x10
    2a80:	lsr	x14, x14, #4
    2a84:	add	x9, x14, #0x1
    2a88:	add	x9, x3, x9, lsl #4
    2a8c:	ldrb	w0, [x3]
    2a90:	add	x0, x0, x10
    2a94:	ldrb	w20, [x3, #1]
    2a98:	add	x20, x20, x0
    2a9c:	ldrb	w8, [x3, #2]
    2aa0:	add	x8, x8, x20
    2aa4:	ldrb	w19, [x3, #3]
    2aa8:	add	x19, x19, x8
    2aac:	ldrb	w7, [x3, #4]
    2ab0:	add	x7, x7, x19
    2ab4:	ldrb	w18, [x3, #5]
    2ab8:	add	x18, x18, x7
    2abc:	ldrb	w6, [x3, #6]
    2ac0:	add	x6, x6, x18
    2ac4:	ldrb	w17, [x3, #7]
    2ac8:	add	x17, x17, x6
    2acc:	ldrb	w5, [x3, #8]
    2ad0:	add	x5, x5, x17
    2ad4:	ldrb	w16, [x3, #9]
    2ad8:	add	x16, x16, x5
    2adc:	ldrb	w4, [x3, #10]
    2ae0:	add	x4, x4, x16
    2ae4:	ldrb	w15, [x3, #11]
    2ae8:	add	x15, x15, x4
    2aec:	ldrb	w2, [x3, #12]
    2af0:	add	x2, x2, x15
    2af4:	ldrb	w12, [x3, #13]
    2af8:	add	x12, x12, x2
    2afc:	ldrb	w1, [x3, #14]
    2b00:	add	x1, x1, x12
    2b04:	ldrb	w10, [x3, #15]
    2b08:	add	x10, x10, x1
    2b0c:	add	x0, x0, x20
    2b10:	add	x8, x8, x19
    2b14:	add	x0, x0, x8
    2b18:	add	x7, x7, x18
    2b1c:	add	x0, x0, x7
    2b20:	add	x6, x6, x17
    2b24:	add	x0, x0, x6
    2b28:	add	x5, x5, x16
    2b2c:	add	x0, x0, x5
    2b30:	add	x4, x4, x15
    2b34:	add	x0, x0, x4
    2b38:	add	x2, x2, x12
    2b3c:	add	x0, x0, x2
    2b40:	add	x1, x1, x10
    2b44:	add	x0, x0, x1
    2b48:	add	x11, x11, x0
    2b4c:	add	x3, x3, #0x10
    2b50:	cmp	x9, x3
    2b54:	b.ne	2a8c <adler32_z@@ZLIB_1.2.9+0x25c>  // b.any
    2b58:	sub	x0, x13, #0x11
    2b5c:	sub	x14, x0, x14, lsl #4
    2b60:	tst	x13, #0xf
    2b64:	b.eq	2b84 <adler32_z@@ZLIB_1.2.9+0x354>  // b.none
    2b68:	add	x14, x14, #0x1
    2b6c:	add	x0, x9, x14
    2b70:	ldrb	w1, [x9], #1
    2b74:	add	x10, x10, x1
    2b78:	add	x11, x11, x10
    2b7c:	cmp	x9, x0
    2b80:	b.ne	2b70 <adler32_z@@ZLIB_1.2.9+0x340>  // b.any
    2b84:	mov	x1, #0xc5cd                	// #50637
    2b88:	movk	x1, #0xd2f, lsl #16
    2b8c:	movk	x1, #0xe1, lsl #32
    2b90:	movk	x1, #0xf, lsl #48
    2b94:	umulh	x2, x10, x1
    2b98:	sub	x0, x10, x2
    2b9c:	add	x0, x2, x0, lsr #1
    2ba0:	lsr	x0, x0, #15
    2ba4:	lsl	x2, x0, #12
    2ba8:	sub	x2, x2, x0
    2bac:	add	x0, x0, x2, lsl #4
    2bb0:	sub	x10, x10, x0
    2bb4:	umulh	x1, x11, x1
    2bb8:	sub	x0, x11, x1
    2bbc:	add	x0, x1, x0, lsr #1
    2bc0:	lsr	x0, x0, #15
    2bc4:	lsl	x1, x0, #12
    2bc8:	sub	x1, x1, x0
    2bcc:	add	x0, x0, x1, lsl #4
    2bd0:	sub	x11, x11, x0
    2bd4:	orr	x0, x10, x11, lsl #16
    2bd8:	ldp	x19, x20, [sp, #16]
    2bdc:	ldp	x29, x30, [sp], #64
    2be0:	ret
    2be4:	mov	x0, #0x1                   	// #1
    2be8:	ret
    2bec:	sub	x14, x14, #0x1, lsl #12
    2bf0:	sub	x14, x14, #0x5b1
    2bf4:	mov	x9, x3
    2bf8:	ldp	x21, x22, [sp, #32]
    2bfc:	ldr	x23, [sp, #48]
    2c00:	b	2b68 <adler32_z@@ZLIB_1.2.9+0x338>

0000000000002c04 <adler32@@Base>:
    2c04:	stp	x29, x30, [sp, #-16]!
    2c08:	mov	x29, sp
    2c0c:	mov	w2, w2
    2c10:	bl	2660 <adler32_z@plt>
    2c14:	ldp	x29, x30, [sp], #16
    2c18:	ret

0000000000002c1c <adler32_combine@@ZLIB_1.2.2>:
    2c1c:	stp	x29, x30, [sp, #-16]!
    2c20:	mov	x29, sp
    2c24:	bl	2744 <adler32_z@plt+0xe4>
    2c28:	ldp	x29, x30, [sp], #16
    2c2c:	ret

0000000000002c30 <adler32_combine64@@ZLIB_1.2.3.3>:
    2c30:	stp	x29, x30, [sp, #-16]!
    2c34:	mov	x29, sp
    2c38:	bl	2744 <adler32_z@plt+0xe4>
    2c3c:	ldp	x29, x30, [sp], #16
    2c40:	ret
    2c44:	mov	x2, x0
    2c48:	cbz	x1, 2c70 <adler32_combine64@@ZLIB_1.2.3.3+0x40>
    2c4c:	mov	x0, #0x0                   	// #0
    2c50:	b	2c60 <adler32_combine64@@ZLIB_1.2.3.3+0x30>
    2c54:	lsr	x1, x1, #1
    2c58:	add	x2, x2, #0x8
    2c5c:	cbz	x1, 2c74 <adler32_combine64@@ZLIB_1.2.3.3+0x44>
    2c60:	tbz	w1, #0, 2c54 <adler32_combine64@@ZLIB_1.2.3.3+0x24>
    2c64:	ldr	x3, [x2]
    2c68:	eor	x0, x0, x3
    2c6c:	b	2c54 <adler32_combine64@@ZLIB_1.2.3.3+0x24>
    2c70:	mov	x0, x1
    2c74:	ret
    2c78:	stp	x29, x30, [sp, #-48]!
    2c7c:	mov	x29, sp
    2c80:	stp	x19, x20, [sp, #16]
    2c84:	str	x21, [sp, #32]
    2c88:	mov	x21, x0
    2c8c:	mov	x20, x1
    2c90:	mov	x19, #0x0                   	// #0
    2c94:	ldr	x1, [x20, x19]
    2c98:	mov	x0, x20
    2c9c:	bl	2c44 <adler32_combine64@@ZLIB_1.2.3.3+0x14>
    2ca0:	str	x0, [x21, x19]
    2ca4:	add	x19, x19, #0x8
    2ca8:	cmp	x19, #0x100
    2cac:	b.ne	2c94 <adler32_combine64@@ZLIB_1.2.3.3+0x64>  // b.any
    2cb0:	ldp	x19, x20, [sp, #16]
    2cb4:	ldr	x21, [sp, #32]
    2cb8:	ldp	x29, x30, [sp], #48
    2cbc:	ret
    2cc0:	sub	sp, sp, #0x240
    2cc4:	stp	x29, x30, [sp]
    2cc8:	mov	x29, sp
    2ccc:	stp	x19, x20, [sp, #16]
    2cd0:	mov	x20, x0
    2cd4:	cmp	x2, #0x0
    2cd8:	b.le	2da8 <adler32_combine64@@ZLIB_1.2.3.3+0x178>
    2cdc:	stp	x21, x22, [sp, #32]
    2ce0:	stp	x23, x24, [sp, #48]
    2ce4:	mov	x24, x1
    2ce8:	mov	x19, x2
    2cec:	mov	x0, #0x8320                	// #33568
    2cf0:	movk	x0, #0xedb8, lsl #16
    2cf4:	str	x0, [sp, #64]
    2cf8:	add	x4, sp, #0x48
    2cfc:	add	x2, sp, #0x140
    2d00:	mov	x3, #0x1                   	// #1
    2d04:	str	x3, [x4], #8
    2d08:	lsl	x3, x3, #1
    2d0c:	cmp	x4, x2
    2d10:	b.ne	2d04 <adler32_combine64@@ZLIB_1.2.3.3+0xd4>  // b.any
    2d14:	add	x21, sp, #0x40
    2d18:	add	x22, sp, #0x140
    2d1c:	mov	x1, x21
    2d20:	mov	x0, x22
    2d24:	bl	2c78 <adler32_combine64@@ZLIB_1.2.3.3+0x48>
    2d28:	mov	x1, x22
    2d2c:	mov	x0, x21
    2d30:	bl	2c78 <adler32_combine64@@ZLIB_1.2.3.3+0x48>
    2d34:	add	x22, sp, #0x40
    2d38:	add	x21, sp, #0x140
    2d3c:	b	2d5c <adler32_combine64@@ZLIB_1.2.3.3+0x12c>
    2d40:	mov	x1, x20
    2d44:	mov	x0, x21
    2d48:	bl	2c44 <adler32_combine64@@ZLIB_1.2.3.3+0x14>
    2d4c:	mov	x20, x0
    2d50:	b	2d6c <adler32_combine64@@ZLIB_1.2.3.3+0x13c>
    2d54:	asr	x19, x19, #2
    2d58:	cbz	x19, 2d9c <adler32_combine64@@ZLIB_1.2.3.3+0x16c>
    2d5c:	mov	x1, x22
    2d60:	mov	x0, x21
    2d64:	bl	2c78 <adler32_combine64@@ZLIB_1.2.3.3+0x48>
    2d68:	tbnz	w19, #0, 2d40 <adler32_combine64@@ZLIB_1.2.3.3+0x110>
    2d6c:	asr	x23, x19, #1
    2d70:	cmp	xzr, x19, asr #1
    2d74:	b.eq	2d9c <adler32_combine64@@ZLIB_1.2.3.3+0x16c>  // b.none
    2d78:	mov	x1, x21
    2d7c:	mov	x0, x22
    2d80:	bl	2c78 <adler32_combine64@@ZLIB_1.2.3.3+0x48>
    2d84:	tbz	w23, #0, 2d54 <adler32_combine64@@ZLIB_1.2.3.3+0x124>
    2d88:	mov	x1, x20
    2d8c:	mov	x0, x22
    2d90:	bl	2c44 <adler32_combine64@@ZLIB_1.2.3.3+0x14>
    2d94:	mov	x20, x0
    2d98:	b	2d54 <adler32_combine64@@ZLIB_1.2.3.3+0x124>
    2d9c:	eor	x0, x20, x24
    2da0:	ldp	x21, x22, [sp, #32]
    2da4:	ldp	x23, x24, [sp, #48]
    2da8:	ldp	x19, x20, [sp, #16]
    2dac:	ldp	x29, x30, [sp]
    2db0:	add	sp, sp, #0x240
    2db4:	ret

0000000000002db8 <get_crc_table@@Base>:
    2db8:	adrp	x0, e000 <gzclose_r@@ZLIB_1.2.3.5+0x3a4>
    2dbc:	add	x0, x0, #0xa08
    2dc0:	ret

0000000000002dc4 <crc32_z@@ZLIB_1.2.9>:
    2dc4:	cbz	x1, 30bc <crc32_z@@ZLIB_1.2.9+0x2f8>
    2dc8:	mvn	w0, w0
    2dcc:	cbz	x2, 30c4 <crc32_z@@ZLIB_1.2.9+0x300>
    2dd0:	tst	x1, #0x3
    2dd4:	b.eq	2e04 <crc32_z@@ZLIB_1.2.9+0x40>  // b.none
    2dd8:	adrp	x4, e000 <gzclose_r@@ZLIB_1.2.3.5+0x3a4>
    2ddc:	add	x4, x4, #0xa08
    2de0:	ldrb	w3, [x1], #1
    2de4:	eor	w3, w3, w0
    2de8:	and	x3, x3, #0xff
    2dec:	ldr	w3, [x4, x3, lsl #2]
    2df0:	eor	w0, w3, w0, lsr #8
    2df4:	subs	x2, x2, #0x1
    2df8:	b.eq	30c4 <crc32_z@@ZLIB_1.2.9+0x300>  // b.none
    2dfc:	tst	x1, #0x3
    2e00:	b.ne	2de0 <crc32_z@@ZLIB_1.2.9+0x1c>  // b.any
    2e04:	cmp	x2, #0x1f
    2e08:	b.ls	3014 <crc32_z@@ZLIB_1.2.9+0x250>  // b.plast
    2e0c:	sub	x5, x2, #0x20
    2e10:	and	x5, x5, #0xffffffffffffffe0
    2e14:	add	x5, x5, #0x20
    2e18:	add	x5, x1, x5
    2e1c:	adrp	x3, e000 <gzclose_r@@ZLIB_1.2.3.5+0x3a4>
    2e20:	add	x3, x3, #0xa08
    2e24:	ldr	w4, [x1]
    2e28:	eor	w0, w0, w4
    2e2c:	ubfx	x4, x0, #8, #8
    2e30:	add	x4, x4, #0x200
    2e34:	ubfx	x6, x0, #16, #8
    2e38:	add	x6, x6, #0x100
    2e3c:	ldr	w4, [x3, x4, lsl #2]
    2e40:	ldr	w6, [x3, x6, lsl #2]
    2e44:	eor	w4, w4, w6
    2e48:	add	x6, x3, w0, uxtb #2
    2e4c:	lsr	w0, w0, #24
    2e50:	ldr	w6, [x6, #3072]
    2e54:	ldr	w0, [x3, x0, lsl #2]
    2e58:	eor	w0, w6, w0
    2e5c:	eor	w4, w4, w0
    2e60:	ldr	w0, [x1, #4]
    2e64:	eor	w4, w4, w0
    2e68:	ubfx	x0, x4, #8, #8
    2e6c:	add	x0, x0, #0x200
    2e70:	ubfx	x6, x4, #16, #8
    2e74:	add	x6, x6, #0x100
    2e78:	ldr	w0, [x3, x0, lsl #2]
    2e7c:	ldr	w6, [x3, x6, lsl #2]
    2e80:	eor	w0, w0, w6
    2e84:	add	x6, x3, w4, uxtb #2
    2e88:	lsr	w4, w4, #24
    2e8c:	ldr	w6, [x6, #3072]
    2e90:	ldr	w4, [x3, x4, lsl #2]
    2e94:	eor	w4, w6, w4
    2e98:	eor	w0, w0, w4
    2e9c:	ldr	w4, [x1, #8]
    2ea0:	eor	w0, w0, w4
    2ea4:	ubfx	x4, x0, #8, #8
    2ea8:	add	x4, x4, #0x200
    2eac:	ubfx	x6, x0, #16, #8
    2eb0:	add	x6, x6, #0x100
    2eb4:	ldr	w4, [x3, x4, lsl #2]
    2eb8:	ldr	w6, [x3, x6, lsl #2]
    2ebc:	eor	w4, w4, w6
    2ec0:	add	x6, x3, w0, uxtb #2
    2ec4:	lsr	w0, w0, #24
    2ec8:	ldr	w6, [x6, #3072]
    2ecc:	ldr	w0, [x3, x0, lsl #2]
    2ed0:	eor	w0, w6, w0
    2ed4:	eor	w4, w4, w0
    2ed8:	ldr	w0, [x1, #12]
    2edc:	eor	w4, w4, w0
    2ee0:	ubfx	x0, x4, #8, #8
    2ee4:	add	x0, x0, #0x200
    2ee8:	ubfx	x6, x4, #16, #8
    2eec:	add	x6, x6, #0x100
    2ef0:	ldr	w0, [x3, x0, lsl #2]
    2ef4:	ldr	w6, [x3, x6, lsl #2]
    2ef8:	eor	w0, w0, w6
    2efc:	add	x6, x3, w4, uxtb #2
    2f00:	lsr	w4, w4, #24
    2f04:	ldr	w6, [x6, #3072]
    2f08:	ldr	w4, [x3, x4, lsl #2]
    2f0c:	eor	w4, w6, w4
    2f10:	eor	w0, w0, w4
    2f14:	ldr	w4, [x1, #16]
    2f18:	eor	w0, w0, w4
    2f1c:	ubfx	x4, x0, #8, #8
    2f20:	add	x4, x4, #0x200
    2f24:	ubfx	x6, x0, #16, #8
    2f28:	add	x6, x6, #0x100
    2f2c:	ldr	w4, [x3, x4, lsl #2]
    2f30:	ldr	w6, [x3, x6, lsl #2]
    2f34:	eor	w4, w4, w6
    2f38:	add	x6, x3, w0, uxtb #2
    2f3c:	lsr	w0, w0, #24
    2f40:	ldr	w6, [x6, #3072]
    2f44:	ldr	w0, [x3, x0, lsl #2]
    2f48:	eor	w0, w6, w0
    2f4c:	eor	w4, w4, w0
    2f50:	ldr	w0, [x1, #20]
    2f54:	eor	w4, w4, w0
    2f58:	ubfx	x0, x4, #8, #8
    2f5c:	add	x0, x0, #0x200
    2f60:	ubfx	x6, x4, #16, #8
    2f64:	add	x6, x6, #0x100
    2f68:	ldr	w0, [x3, x0, lsl #2]
    2f6c:	ldr	w6, [x3, x6, lsl #2]
    2f70:	eor	w0, w0, w6
    2f74:	add	x6, x3, w4, uxtb #2
    2f78:	lsr	w4, w4, #24
    2f7c:	ldr	w6, [x6, #3072]
    2f80:	ldr	w4, [x3, x4, lsl #2]
    2f84:	eor	w4, w6, w4
    2f88:	eor	w0, w0, w4
    2f8c:	ldr	w4, [x1, #24]
    2f90:	eor	w0, w0, w4
    2f94:	ubfx	x4, x0, #8, #8
    2f98:	add	x4, x4, #0x200
    2f9c:	ubfx	x6, x0, #16, #8
    2fa0:	add	x6, x6, #0x100
    2fa4:	ldr	w4, [x3, x4, lsl #2]
    2fa8:	ldr	w6, [x3, x6, lsl #2]
    2fac:	eor	w4, w4, w6
    2fb0:	add	x6, x3, w0, uxtb #2
    2fb4:	lsr	w0, w0, #24
    2fb8:	ldr	w6, [x6, #3072]
    2fbc:	ldr	w0, [x3, x0, lsl #2]
    2fc0:	eor	w0, w6, w0
    2fc4:	eor	w4, w4, w0
    2fc8:	add	x1, x1, #0x20
    2fcc:	ldur	w0, [x1, #-4]
    2fd0:	eor	w4, w4, w0
    2fd4:	ubfx	x0, x4, #8, #8
    2fd8:	add	x0, x0, #0x200
    2fdc:	ubfx	x6, x4, #16, #8
    2fe0:	add	x6, x6, #0x100
    2fe4:	ldr	w0, [x3, x0, lsl #2]
    2fe8:	ldr	w6, [x3, x6, lsl #2]
    2fec:	eor	w6, w0, w6
    2ff0:	add	x0, x3, w4, uxtb #2
    2ff4:	lsr	w4, w4, #24
    2ff8:	ldr	w0, [x0, #3072]
    2ffc:	ldr	w4, [x3, x4, lsl #2]
    3000:	eor	w0, w0, w4
    3004:	eor	w0, w0, w6
    3008:	cmp	x5, x1
    300c:	b.ne	2e24 <crc32_z@@ZLIB_1.2.9+0x60>  // b.any
    3010:	and	x2, x2, #0x1f
    3014:	cmp	x2, #0x3
    3018:	b.ls	30b4 <crc32_z@@ZLIB_1.2.9+0x2f0>  // b.plast
    301c:	sub	x3, x2, #0x4
    3020:	and	x3, x3, #0xfffffffffffffffc
    3024:	add	x3, x3, #0x4
    3028:	add	x3, x1, x3
    302c:	adrp	x4, e000 <gzclose_r@@ZLIB_1.2.3.5+0x3a4>
    3030:	add	x4, x4, #0xa08
    3034:	ldr	w5, [x1], #4
    3038:	eor	w0, w0, w5
    303c:	ubfx	x6, x0, #8, #8
    3040:	add	x6, x6, #0x200
    3044:	ubfx	x5, x0, #16, #8
    3048:	add	x5, x5, #0x100
    304c:	ldr	w6, [x4, x6, lsl #2]
    3050:	ldr	w5, [x4, x5, lsl #2]
    3054:	eor	w6, w6, w5
    3058:	add	x5, x4, w0, uxtb #2
    305c:	lsr	w0, w0, #24
    3060:	ldr	w5, [x5, #3072]
    3064:	ldr	w0, [x4, x0, lsl #2]
    3068:	eor	w0, w5, w0
    306c:	eor	w0, w6, w0
    3070:	cmp	x1, x3
    3074:	b.ne	3034 <crc32_z@@ZLIB_1.2.9+0x270>  // b.any
    3078:	and	x2, x2, #0x3
    307c:	cbz	x2, 30a8 <crc32_z@@ZLIB_1.2.9+0x2e4>
    3080:	add	x2, x3, x2
    3084:	adrp	x4, e000 <gzclose_r@@ZLIB_1.2.3.5+0x3a4>
    3088:	add	x4, x4, #0xa08
    308c:	ldrb	w1, [x3], #1
    3090:	eor	w1, w1, w0
    3094:	and	x1, x1, #0xff
    3098:	ldr	w1, [x4, x1, lsl #2]
    309c:	eor	w0, w1, w0, lsr #8
    30a0:	cmp	x2, x3
    30a4:	b.ne	308c <crc32_z@@ZLIB_1.2.9+0x2c8>  // b.any
    30a8:	mvn	w0, w0
    30ac:	mov	w0, w0
    30b0:	ret
    30b4:	mov	x3, x1
    30b8:	b	307c <crc32_z@@ZLIB_1.2.9+0x2b8>
    30bc:	mov	x0, #0x0                   	// #0
    30c0:	b	30b0 <crc32_z@@ZLIB_1.2.9+0x2ec>
    30c4:	mov	x3, x1
    30c8:	mov	x2, #0x0                   	// #0
    30cc:	b	307c <crc32_z@@ZLIB_1.2.9+0x2b8>

00000000000030d0 <crc32@@Base>:
    30d0:	stp	x29, x30, [sp, #-16]!
    30d4:	mov	x29, sp
    30d8:	mov	w2, w2
    30dc:	bl	23b0 <crc32_z@plt>
    30e0:	ldp	x29, x30, [sp], #16
    30e4:	ret

00000000000030e8 <crc32_combine@@ZLIB_1.2.2>:
    30e8:	stp	x29, x30, [sp, #-16]!
    30ec:	mov	x29, sp
    30f0:	bl	2cc0 <adler32_combine64@@ZLIB_1.2.3.3+0x90>
    30f4:	ldp	x29, x30, [sp], #16
    30f8:	ret

00000000000030fc <crc32_combine64@@ZLIB_1.2.3.3>:
    30fc:	stp	x29, x30, [sp, #-16]!
    3100:	mov	x29, sp
    3104:	bl	2cc0 <adler32_combine64@@ZLIB_1.2.3.3+0x90>
    3108:	ldp	x29, x30, [sp], #16
    310c:	ret
    3110:	ldr	w3, [x0, #80]
    3114:	ldr	w1, [x0, #132]
    3118:	ldr	x2, [x0, #120]
    311c:	add	x2, x2, w1, uxtw #1
    3120:	sub	w5, w1, #0x1
    3124:	mvn	x5, x5
    3128:	add	x5, x2, x5, lsl #1
    312c:	mov	w6, #0x0                   	// #0
    3130:	ldrh	w4, [x2, #-2]!
    3134:	sub	w1, w4, w3
    3138:	and	w1, w1, #0xffff
    313c:	cmp	w3, w4
    3140:	csel	w1, w1, w6, ls  // ls = plast
    3144:	strh	w1, [x2]
    3148:	cmp	x2, x5
    314c:	b.ne	3130 <crc32_combine64@@ZLIB_1.2.3.3+0x34>  // b.any
    3150:	ldr	x1, [x0, #112]
    3154:	add	x1, x1, w3, uxtw #1
    3158:	sub	w4, w3, #0x1
    315c:	mvn	x4, x4
    3160:	add	x4, x1, x4, lsl #1
    3164:	mov	w5, #0x0                   	// #0
    3168:	ldrh	w2, [x1, #-2]!
    316c:	sub	w0, w2, w3
    3170:	and	w0, w0, #0xffff
    3174:	cmp	w3, w2
    3178:	csel	w0, w0, w5, ls  // ls = plast
    317c:	strh	w0, [x1]
    3180:	cmp	x1, x4
    3184:	b.ne	3168 <crc32_combine64@@ZLIB_1.2.3.3+0x6c>  // b.any
    3188:	ret
    318c:	mov	x1, x0
    3190:	cbz	x0, 3204 <crc32_combine64@@ZLIB_1.2.3.3+0x108>
    3194:	ldr	x0, [x0, #64]
    3198:	cbz	x0, 320c <crc32_combine64@@ZLIB_1.2.3.3+0x110>
    319c:	ldr	x0, [x1, #72]
    31a0:	cbz	x0, 3214 <crc32_combine64@@ZLIB_1.2.3.3+0x118>
    31a4:	ldr	x2, [x1, #56]
    31a8:	cbz	x2, 321c <crc32_combine64@@ZLIB_1.2.3.3+0x120>
    31ac:	ldr	x3, [x2]
    31b0:	mov	w0, #0x1                   	// #1
    31b4:	cmp	x3, x1
    31b8:	b.eq	31c0 <crc32_combine64@@ZLIB_1.2.3.3+0xc4>  // b.none
    31bc:	ret
    31c0:	ldr	w1, [x2, #8]
    31c4:	cmp	w1, #0x2a
    31c8:	mov	w0, #0x45                  	// #69
    31cc:	ccmp	w1, w0, #0x4, ne  // ne = any
    31d0:	cset	w0, ne  // ne = any
    31d4:	cmp	w1, #0x5b
    31d8:	mov	w2, #0x67                  	// #103
    31dc:	ccmp	w1, w2, #0x4, ne  // ne = any
    31e0:	csel	w0, w0, wzr, ne  // ne = any
    31e4:	cmp	w1, #0x71
    31e8:	mov	w2, #0x29a                 	// #666
    31ec:	ccmp	w1, w2, #0x4, ne  // ne = any
    31f0:	csel	w0, w0, wzr, ne  // ne = any
    31f4:	sub	w1, w1, #0x39
    31f8:	tst	w1, #0xffffffef
    31fc:	csel	w0, w0, wzr, ne  // ne = any
    3200:	b	31bc <crc32_combine64@@ZLIB_1.2.3.3+0xc0>
    3204:	mov	w0, #0x1                   	// #1
    3208:	b	31bc <crc32_combine64@@ZLIB_1.2.3.3+0xc0>
    320c:	mov	w0, #0x1                   	// #1
    3210:	b	31bc <crc32_combine64@@ZLIB_1.2.3.3+0xc0>
    3214:	mov	w0, #0x1                   	// #1
    3218:	b	31bc <crc32_combine64@@ZLIB_1.2.3.3+0xc0>
    321c:	mov	w0, #0x1                   	// #1
    3220:	b	31bc <crc32_combine64@@ZLIB_1.2.3.3+0xc0>
    3224:	ldr	x3, [x0, #16]
    3228:	ldr	x2, [x0, #40]
    322c:	add	x4, x2, #0x1
    3230:	str	x4, [x0, #40]
    3234:	lsr	w4, w1, #8
    3238:	strb	w4, [x3, x2]
    323c:	ldr	x3, [x0, #16]
    3240:	ldr	x2, [x0, #40]
    3244:	add	x4, x2, #0x1
    3248:	str	x4, [x0, #40]
    324c:	strb	w1, [x3, x2]
    3250:	ret
    3254:	ldr	w6, [x0, #188]
    3258:	ldr	x8, [x0, #96]
    325c:	ldr	w3, [x0, #172]
    3260:	mov	w14, w3
    3264:	add	x13, x8, x14
    3268:	ldr	w2, [x0, #184]
    326c:	mov	w7, w2
    3270:	ldr	w17, [x0, #208]
    3274:	ldr	w4, [x0, #80]
    3278:	sub	w5, w4, #0x106
    327c:	add	w9, w3, #0x106
    3280:	sub	w9, w9, w4
    3284:	cmp	w3, w5
    3288:	csel	w9, w9, wzr, hi  // hi = pmore
    328c:	ldr	x12, [x0, #112]
    3290:	ldr	w11, [x0, #88]
    3294:	add	x14, x14, #0x102
    3298:	add	x14, x8, x14
    329c:	add	x3, x13, w2, sxtw
    32a0:	ldurb	w15, [x3, #-1]
    32a4:	ldrb	w10, [x13, w2, sxtw]
    32a8:	ldr	w4, [x0, #204]
    32ac:	lsr	w3, w6, #2
    32b0:	cmp	w2, w4
    32b4:	csel	w6, w3, w6, cs  // cs = hs, nlast
    32b8:	ldr	w16, [x0, #180]
    32bc:	cmp	w16, w17
    32c0:	csel	w17, w17, w16, cs  // cs = hs, nlast
    32c4:	mov	w18, #0x102                 	// #258
    32c8:	b	3344 <crc32_combine64@@ZLIB_1.2.3.3+0x248>
    32cc:	add	x3, x3, #0x2
    32d0:	b	3300 <crc32_combine64@@ZLIB_1.2.3.3+0x204>
    32d4:	add	x3, x3, #0x3
    32d8:	b	3300 <crc32_combine64@@ZLIB_1.2.3.3+0x204>
    32dc:	add	x3, x3, #0x4
    32e0:	b	3300 <crc32_combine64@@ZLIB_1.2.3.3+0x204>
    32e4:	add	x3, x3, #0x5
    32e8:	b	3300 <crc32_combine64@@ZLIB_1.2.3.3+0x204>
    32ec:	add	x3, x3, #0x6
    32f0:	b	3300 <crc32_combine64@@ZLIB_1.2.3.3+0x204>
    32f4:	add	x3, x3, #0x7
    32f8:	b	3300 <crc32_combine64@@ZLIB_1.2.3.3+0x204>
    32fc:	add	x3, x3, #0x1
    3300:	sub	x3, x14, x3
    3304:	sub	w3, w18, w3
    3308:	cmp	w7, w3
    330c:	b.ge	332c <crc32_combine64@@ZLIB_1.2.3.3+0x230>  // b.tcont
    3310:	str	w1, [x0, #176]
    3314:	cmp	w17, w3
    3318:	b.le	341c <crc32_combine64@@ZLIB_1.2.3.3+0x320>
    331c:	add	x2, x13, w3, sxtw
    3320:	ldurb	w15, [x2, #-1]
    3324:	ldrb	w10, [x13, w3, sxtw]
    3328:	mov	w7, w3
    332c:	and	w1, w1, w11
    3330:	ldrh	w1, [x12, x1, lsl #1]
    3334:	cmp	w9, w1
    3338:	b.cs	3420 <crc32_combine64@@ZLIB_1.2.3.3+0x324>  // b.hs, b.nlast
    333c:	subs	w6, w6, #0x1
    3340:	b.eq	3420 <crc32_combine64@@ZLIB_1.2.3.3+0x324>  // b.none
    3344:	mov	w4, w1
    3348:	add	x2, x8, x4
    334c:	sxtw	x3, w7
    3350:	ldrb	w5, [x2, w7, sxtw]
    3354:	cmp	w5, w10
    3358:	b.ne	332c <crc32_combine64@@ZLIB_1.2.3.3+0x230>  // b.any
    335c:	add	x3, x2, x3
    3360:	ldurb	w3, [x3, #-1]
    3364:	cmp	w3, w15
    3368:	b.ne	332c <crc32_combine64@@ZLIB_1.2.3.3+0x230>  // b.any
    336c:	ldrb	w4, [x8, x4]
    3370:	ldrb	w3, [x13]
    3374:	cmp	w4, w3
    3378:	b.ne	332c <crc32_combine64@@ZLIB_1.2.3.3+0x230>  // b.any
    337c:	ldrb	w4, [x2, #1]
    3380:	ldrb	w3, [x13, #1]
    3384:	cmp	w4, w3
    3388:	b.ne	332c <crc32_combine64@@ZLIB_1.2.3.3+0x230>  // b.any
    338c:	add	x3, x13, #0x2
    3390:	add	x2, x2, #0x2
    3394:	ldrb	w5, [x3, #1]
    3398:	ldrb	w4, [x2, #1]
    339c:	cmp	w5, w4
    33a0:	b.ne	32fc <crc32_combine64@@ZLIB_1.2.3.3+0x200>  // b.any
    33a4:	ldrb	w5, [x3, #2]
    33a8:	ldrb	w4, [x2, #2]
    33ac:	cmp	w5, w4
    33b0:	b.ne	32cc <crc32_combine64@@ZLIB_1.2.3.3+0x1d0>  // b.any
    33b4:	ldrb	w5, [x3, #3]
    33b8:	ldrb	w4, [x2, #3]
    33bc:	cmp	w5, w4
    33c0:	b.ne	32d4 <crc32_combine64@@ZLIB_1.2.3.3+0x1d8>  // b.any
    33c4:	ldrb	w5, [x3, #4]
    33c8:	ldrb	w4, [x2, #4]
    33cc:	cmp	w5, w4
    33d0:	b.ne	32dc <crc32_combine64@@ZLIB_1.2.3.3+0x1e0>  // b.any
    33d4:	ldrb	w5, [x3, #5]
    33d8:	ldrb	w4, [x2, #5]
    33dc:	cmp	w5, w4
    33e0:	b.ne	32e4 <crc32_combine64@@ZLIB_1.2.3.3+0x1e8>  // b.any
    33e4:	ldrb	w5, [x3, #6]
    33e8:	ldrb	w4, [x2, #6]
    33ec:	cmp	w5, w4
    33f0:	b.ne	32ec <crc32_combine64@@ZLIB_1.2.3.3+0x1f0>  // b.any
    33f4:	ldrb	w5, [x3, #7]
    33f8:	ldrb	w4, [x2, #7]
    33fc:	cmp	w5, w4
    3400:	b.ne	32f4 <crc32_combine64@@ZLIB_1.2.3.3+0x1f8>  // b.any
    3404:	ldrb	w5, [x3, #8]!
    3408:	ldrb	w4, [x2, #8]!
    340c:	cmp	w5, w4
    3410:	ccmp	x14, x3, #0x0, eq  // eq = none
    3414:	b.hi	3394 <crc32_combine64@@ZLIB_1.2.3.3+0x298>  // b.pmore
    3418:	b	3300 <crc32_combine64@@ZLIB_1.2.3.3+0x204>
    341c:	mov	w7, w3
    3420:	cmp	w7, w16
    3424:	csel	w0, w7, w16, ls  // ls = plast
    3428:	ret
    342c:	stp	x29, x30, [sp, #-48]!
    3430:	mov	x29, sp
    3434:	stp	x19, x20, [sp, #16]
    3438:	mov	x20, x0
    343c:	ldr	w0, [x0, #8]
    3440:	cmp	w0, w2
    3444:	csel	w19, w0, w2, ls  // ls = plast
    3448:	cbnz	w19, 345c <crc32_combine64@@ZLIB_1.2.3.3+0x360>
    344c:	mov	w0, w19
    3450:	ldp	x19, x20, [sp, #16]
    3454:	ldp	x29, x30, [sp], #48
    3458:	ret
    345c:	stp	x21, x22, [sp, #32]
    3460:	mov	x21, x1
    3464:	sub	w0, w0, w19
    3468:	str	w0, [x20, #8]
    346c:	mov	w22, w19
    3470:	mov	x2, x22
    3474:	ldr	x1, [x20]
    3478:	mov	x0, x21
    347c:	bl	23a0 <memcpy@plt>
    3480:	ldr	x0, [x20, #56]
    3484:	ldr	w0, [x0, #48]
    3488:	cmp	w0, #0x1
    348c:	b.eq	34b8 <crc32_combine64@@ZLIB_1.2.3.3+0x3bc>  // b.none
    3490:	cmp	w0, #0x2
    3494:	b.eq	34d0 <crc32_combine64@@ZLIB_1.2.3.3+0x3d4>  // b.none
    3498:	ldr	x0, [x20]
    349c:	add	x0, x0, x22
    34a0:	str	x0, [x20]
    34a4:	ldr	x2, [x20, #16]
    34a8:	add	x2, x2, x22
    34ac:	str	x2, [x20, #16]
    34b0:	ldp	x21, x22, [sp, #32]
    34b4:	b	344c <crc32_combine64@@ZLIB_1.2.3.3+0x350>
    34b8:	mov	w2, w19
    34bc:	mov	x1, x21
    34c0:	ldr	x0, [x20, #96]
    34c4:	bl	2560 <adler32@plt>
    34c8:	str	x0, [x20, #96]
    34cc:	b	3498 <crc32_combine64@@ZLIB_1.2.3.3+0x39c>
    34d0:	mov	w2, w19
    34d4:	mov	x1, x21
    34d8:	ldr	x0, [x20, #96]
    34dc:	bl	2430 <crc32@plt>
    34e0:	str	x0, [x20, #96]
    34e4:	b	3498 <crc32_combine64@@ZLIB_1.2.3.3+0x39c>
    34e8:	stp	x29, x30, [sp, #-48]!
    34ec:	mov	x29, sp
    34f0:	stp	x19, x20, [sp, #16]
    34f4:	stp	x21, x22, [sp, #32]
    34f8:	mov	x19, x0
    34fc:	ldr	w20, [x0, #80]
    3500:	mov	w21, w20
    3504:	b	35a8 <crc32_combine64@@ZLIB_1.2.3.3+0x4ac>
    3508:	ldr	x0, [x19, #96]
    350c:	sub	w1, w1, w3
    3510:	add	w2, w1, w2
    3514:	add	x1, x0, x21
    3518:	bl	23a0 <memcpy@plt>
    351c:	ldr	w0, [x19, #176]
    3520:	sub	w0, w0, w20
    3524:	str	w0, [x19, #176]
    3528:	ldr	w0, [x19, #172]
    352c:	sub	w0, w0, w20
    3530:	str	w0, [x19, #172]
    3534:	ldr	x0, [x19, #152]
    3538:	sub	x0, x0, x21
    353c:	str	x0, [x19, #152]
    3540:	mov	x0, x19
    3544:	bl	3110 <crc32_combine64@@ZLIB_1.2.3.3+0x14>
    3548:	add	w22, w22, w20
    354c:	ldr	x0, [x19]
    3550:	ldr	w1, [x0, #8]
    3554:	cbz	w1, 3684 <crc32_combine64@@ZLIB_1.2.3.3+0x588>
    3558:	ldr	w1, [x19, #172]
    355c:	ldr	w2, [x19, #180]
    3560:	add	x1, x1, x2
    3564:	ldr	x3, [x19, #96]
    3568:	mov	w2, w22
    356c:	add	x1, x3, x1
    3570:	bl	342c <crc32_combine64@@ZLIB_1.2.3.3+0x330>
    3574:	ldr	w1, [x19, #180]
    3578:	add	w0, w0, w1
    357c:	str	w0, [x19, #180]
    3580:	ldr	w1, [x19, #5932]
    3584:	add	w0, w0, w1
    3588:	cmp	w0, #0x2
    358c:	b.hi	35d8 <crc32_combine64@@ZLIB_1.2.3.3+0x4dc>  // b.pmore
    3590:	ldr	w0, [x19, #180]
    3594:	cmp	w0, #0x105
    3598:	b.hi	3684 <crc32_combine64@@ZLIB_1.2.3.3+0x588>  // b.pmore
    359c:	ldr	x0, [x19]
    35a0:	ldr	w0, [x0, #8]
    35a4:	cbz	w0, 3684 <crc32_combine64@@ZLIB_1.2.3.3+0x588>
    35a8:	ldr	x3, [x19, #104]
    35ac:	ldr	w0, [x19, #180]
    35b0:	add	w2, w0, w20
    35b4:	ldr	w1, [x19, #172]
    35b8:	sub	w0, w3, w0
    35bc:	sub	w22, w0, w1
    35c0:	ldr	w0, [x19, #80]
    35c4:	add	w0, w20, w0
    35c8:	sub	w0, w0, #0x106
    35cc:	cmp	w1, w0
    35d0:	b.cc	354c <crc32_combine64@@ZLIB_1.2.3.3+0x450>  // b.lo, b.ul, b.last
    35d4:	b	3508 <crc32_combine64@@ZLIB_1.2.3.3+0x40c>
    35d8:	ldr	w0, [x19, #172]
    35dc:	sub	w1, w0, w1
    35e0:	ldr	x0, [x19, #96]
    35e4:	ldrb	w2, [x0, w1, uxtw]
    35e8:	str	w2, [x19, #128]
    35ec:	add	w3, w1, #0x1
    35f0:	ldrb	w0, [x0, w3, uxtw]
    35f4:	ldr	w3, [x19, #144]
    35f8:	lsl	w2, w2, w3
    35fc:	eor	w0, w0, w2
    3600:	ldr	w2, [x19, #140]
    3604:	and	w0, w0, w2
    3608:	str	w0, [x19, #128]
    360c:	ldr	w0, [x19, #5932]
    3610:	cbz	w0, 3590 <crc32_combine64@@ZLIB_1.2.3.3+0x494>
    3614:	add	w2, w1, #0x2
    3618:	ldr	x0, [x19, #96]
    361c:	ldrb	w0, [x0, w2, uxtw]
    3620:	ldr	w3, [x19, #144]
    3624:	ldr	w2, [x19, #128]
    3628:	lsl	w2, w2, w3
    362c:	eor	w0, w0, w2
    3630:	ldr	w2, [x19, #140]
    3634:	and	w0, w0, w2
    3638:	str	w0, [x19, #128]
    363c:	ldr	x2, [x19, #120]
    3640:	ldrh	w3, [x2, w0, uxtw #1]
    3644:	ldr	w0, [x19, #88]
    3648:	and	w0, w1, w0
    364c:	ldr	x2, [x19, #112]
    3650:	strh	w3, [x2, x0, lsl #1]
    3654:	ldr	w2, [x19, #128]
    3658:	ldr	x0, [x19, #120]
    365c:	strh	w1, [x0, x2, lsl #1]
    3660:	add	w1, w1, #0x1
    3664:	ldr	w0, [x19, #5932]
    3668:	sub	w0, w0, #0x1
    366c:	str	w0, [x19, #5932]
    3670:	ldr	w2, [x19, #180]
    3674:	add	w0, w0, w2
    3678:	cmp	w0, #0x2
    367c:	b.hi	360c <crc32_combine64@@ZLIB_1.2.3.3+0x510>  // b.pmore
    3680:	b	3590 <crc32_combine64@@ZLIB_1.2.3.3+0x494>
    3684:	ldr	x0, [x19, #5944]
    3688:	ldr	x1, [x19, #104]
    368c:	cmp	x0, x1
    3690:	b.cs	36b4 <crc32_combine64@@ZLIB_1.2.3.3+0x5b8>  // b.hs, b.nlast
    3694:	ldr	w20, [x19, #172]
    3698:	ldr	w21, [x19, #180]
    369c:	add	x21, x20, x21
    36a0:	cmp	x0, x21
    36a4:	b.cc	36c4 <crc32_combine64@@ZLIB_1.2.3.3+0x5c8>  // b.lo, b.ul, b.last
    36a8:	add	x2, x21, #0x102
    36ac:	cmp	x0, x2
    36b0:	b.cc	36f4 <crc32_combine64@@ZLIB_1.2.3.3+0x5f8>  // b.lo, b.ul, b.last
    36b4:	ldp	x19, x20, [sp, #16]
    36b8:	ldp	x21, x22, [sp, #32]
    36bc:	ldp	x29, x30, [sp], #48
    36c0:	ret
    36c4:	sub	x1, x1, x21
    36c8:	cmp	x1, #0x102
    36cc:	mov	x20, #0x102                 	// #258
    36d0:	csel	x20, x1, x20, ls  // ls = plast
    36d4:	ldr	x0, [x19, #96]
    36d8:	mov	x2, x20
    36dc:	mov	w1, #0x0                   	// #0
    36e0:	add	x0, x0, x21
    36e4:	bl	24a0 <memset@plt>
    36e8:	add	x20, x20, x21
    36ec:	str	x20, [x19, #5944]
    36f0:	b	36b4 <crc32_combine64@@ZLIB_1.2.3.3+0x5b8>
    36f4:	sub	x20, x21, x0
    36f8:	add	x20, x20, #0x102
    36fc:	sub	x1, x1, x0
    3700:	cmp	x1, x20
    3704:	csel	x20, x1, x20, ls  // ls = plast
    3708:	ldr	x3, [x19, #96]
    370c:	mov	w2, w20
    3710:	mov	w1, #0x0                   	// #0
    3714:	add	x0, x3, x0
    3718:	bl	24a0 <memset@plt>
    371c:	ldr	x0, [x19, #5944]
    3720:	add	x20, x0, x20
    3724:	str	x20, [x19, #5944]
    3728:	b	36b4 <crc32_combine64@@ZLIB_1.2.3.3+0x5b8>
    372c:	stp	x29, x30, [sp, #-48]!
    3730:	mov	x29, sp
    3734:	stp	x19, x20, [sp, #16]
    3738:	stp	x21, x22, [sp, #32]
    373c:	mov	x19, x0
    3740:	ldr	x22, [x0, #56]
    3744:	mov	x0, x22
    3748:	bl	ba78 <inflateCodesUsed@@ZLIB_1.2.9+0x1998>
    374c:	ldr	x0, [x22, #40]
    3750:	ldr	w1, [x19, #32]
    3754:	cmp	w1, w0
    3758:	csel	w20, w1, w0, ls  // ls = plast
    375c:	cbnz	w20, 3770 <crc32_combine64@@ZLIB_1.2.3.3+0x674>
    3760:	ldp	x19, x20, [sp, #16]
    3764:	ldp	x21, x22, [sp, #32]
    3768:	ldp	x29, x30, [sp], #48
    376c:	ret
    3770:	mov	w21, w20
    3774:	mov	x2, x21
    3778:	ldr	x1, [x22, #32]
    377c:	ldr	x0, [x19, #24]
    3780:	bl	23a0 <memcpy@plt>
    3784:	ldr	x0, [x19, #24]
    3788:	add	x0, x0, x21
    378c:	str	x0, [x19, #24]
    3790:	ldr	x0, [x22, #32]
    3794:	add	x0, x0, x21
    3798:	str	x0, [x22, #32]
    379c:	ldr	x0, [x19, #40]
    37a0:	add	x0, x0, x21
    37a4:	str	x0, [x19, #40]
    37a8:	ldr	w0, [x19, #32]
    37ac:	sub	w0, w0, w20
    37b0:	str	w0, [x19, #32]
    37b4:	ldr	x0, [x22, #40]
    37b8:	sub	x21, x0, x21
    37bc:	str	x21, [x22, #40]
    37c0:	cbnz	x21, 3760 <crc32_combine64@@ZLIB_1.2.3.3+0x664>
    37c4:	ldr	x0, [x22, #16]
    37c8:	str	x0, [x22, #32]
    37cc:	b	3760 <crc32_combine64@@ZLIB_1.2.3.3+0x664>
    37d0:	stp	x29, x30, [sp, #-64]!
    37d4:	mov	x29, sp
    37d8:	stp	x19, x20, [sp, #16]
    37dc:	stp	x21, x22, [sp, #32]
    37e0:	str	x23, [sp, #48]
    37e4:	mov	x19, x0
    37e8:	mov	w21, w1
    37ec:	mov	w20, #0x2                   	// #2
    37f0:	adrp	x23, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    37f4:	add	x23, x23, #0xf20
    37f8:	adrp	x22, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    37fc:	add	x22, x22, #0x110
    3800:	b	3a28 <crc32_combine64@@ZLIB_1.2.3.3+0x92c>
    3804:	mov	x0, x19
    3808:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    380c:	ldr	w0, [x19, #180]
    3810:	cmp	w0, #0x105
    3814:	ccmp	w21, #0x0, #0x0, ls  // ls = plast
    3818:	b.eq	3c18 <crc32_combine64@@ZLIB_1.2.3.3+0xb1c>  // b.none
    381c:	cbnz	w0, 3a34 <crc32_combine64@@ZLIB_1.2.3.3+0x938>
    3820:	ldr	w0, [x19, #168]
    3824:	cbz	w0, 386c <crc32_combine64@@ZLIB_1.2.3.3+0x770>
    3828:	ldr	w0, [x19, #172]
    382c:	sub	w0, w0, #0x1
    3830:	ldr	x1, [x19, #96]
    3834:	ldrb	w0, [x1, w0, uxtw]
    3838:	ldr	w2, [x19, #5900]
    383c:	ldr	x1, [x19, #5904]
    3840:	strh	wzr, [x1, x2, lsl #1]
    3844:	ldr	x2, [x19, #5888]
    3848:	ldr	w1, [x19, #5900]
    384c:	add	w3, w1, #0x1
    3850:	str	w3, [x19, #5900]
    3854:	strb	w0, [x2, w1, uxtw]
    3858:	add	x0, x19, w0, uxtb #2
    385c:	ldrh	w1, [x0, #212]
    3860:	add	w1, w1, #0x1
    3864:	strh	w1, [x0, #212]
    3868:	str	wzr, [x19, #168]
    386c:	ldr	w3, [x19, #172]
    3870:	cmp	w3, #0x2
    3874:	mov	w0, #0x2                   	// #2
    3878:	csel	w0, w3, w0, ls  // ls = plast
    387c:	str	w0, [x19, #5932]
    3880:	cmp	w21, #0x4
    3884:	b.eq	3bc8 <crc32_combine64@@ZLIB_1.2.3.3+0xacc>  // b.none
    3888:	ldr	w1, [x19, #5900]
    388c:	mov	w0, #0x1                   	// #1
    3890:	cbz	w1, 3ccc <crc32_combine64@@ZLIB_1.2.3.3+0xbd0>
    3894:	ldr	x2, [x19, #152]
    3898:	mov	x1, #0x0                   	// #0
    389c:	tbnz	x2, #63, 38a8 <crc32_combine64@@ZLIB_1.2.3.3+0x7ac>
    38a0:	ldr	x1, [x19, #96]
    38a4:	add	x1, x1, w2, uxtw
    38a8:	mov	w0, w3
    38ac:	mov	w3, #0x0                   	// #0
    38b0:	sub	x2, x0, x2
    38b4:	mov	x0, x19
    38b8:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    38bc:	ldr	w0, [x19, #172]
    38c0:	str	x0, [x19, #152]
    38c4:	ldr	x0, [x19]
    38c8:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    38cc:	ldr	x0, [x19]
    38d0:	ldr	w0, [x0, #32]
    38d4:	cmp	w0, #0x0
    38d8:	cset	w0, ne  // ne = any
    38dc:	b	3ccc <crc32_combine64@@ZLIB_1.2.3.3+0xbd0>
    38e0:	lsr	w1, w1, #7
    38e4:	add	w1, w1, #0x100
    38e8:	ldrb	w0, [x22, w1, sxtw]
    38ec:	b	3b8c <crc32_combine64@@ZLIB_1.2.3.3+0xa90>
    38f0:	add	w1, w1, #0x3
    38f4:	ldr	x2, [x19, #96]
    38f8:	ldrb	w2, [x2, w1, uxtw]
    38fc:	ldr	w4, [x19, #144]
    3900:	ldr	w1, [x19, #128]
    3904:	lsl	w1, w1, w4
    3908:	eor	w2, w2, w1
    390c:	ldr	w1, [x19, #140]
    3910:	and	w2, w2, w1
    3914:	str	w2, [x19, #128]
    3918:	ldr	x1, [x19, #120]
    391c:	ldrh	w2, [x1, w2, uxtw #1]
    3920:	ldr	w1, [x19, #88]
    3924:	and	w0, w0, w1
    3928:	ldr	x1, [x19, #112]
    392c:	strh	w2, [x1, x0, lsl #1]
    3930:	ldr	w1, [x19, #128]
    3934:	ldr	x0, [x19, #120]
    3938:	ldr	w2, [x19, #172]
    393c:	strh	w2, [x0, x1, lsl #1]
    3940:	ldr	w0, [x19, #184]
    3944:	sub	w0, w0, #0x1
    3948:	str	w0, [x19, #184]
    394c:	cbz	w0, 3968 <crc32_combine64@@ZLIB_1.2.3.3+0x86c>
    3950:	ldr	w1, [x19, #172]
    3954:	add	w0, w1, #0x1
    3958:	str	w0, [x19, #172]
    395c:	cmp	w0, w3
    3960:	b.hi	3940 <crc32_combine64@@ZLIB_1.2.3.3+0x844>  // b.pmore
    3964:	b	38f0 <crc32_combine64@@ZLIB_1.2.3.3+0x7f4>
    3968:	str	wzr, [x19, #168]
    396c:	str	w20, [x19, #160]
    3970:	ldr	w0, [x19, #172]
    3974:	add	w0, w0, #0x1
    3978:	str	w0, [x19, #172]
    397c:	cmp	w6, w5
    3980:	b.ne	3a28 <crc32_combine64@@ZLIB_1.2.3.3+0x92c>  // b.any
    3984:	ldr	x2, [x19, #152]
    3988:	mov	x1, #0x0                   	// #0
    398c:	tbnz	x2, #63, 3998 <crc32_combine64@@ZLIB_1.2.3.3+0x89c>
    3990:	ldr	x1, [x19, #96]
    3994:	add	x1, x1, w2, uxtw
    3998:	mov	w0, w0
    399c:	mov	w3, #0x0                   	// #0
    39a0:	sub	x2, x0, x2
    39a4:	mov	x0, x19
    39a8:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    39ac:	ldr	w0, [x19, #172]
    39b0:	str	x0, [x19, #152]
    39b4:	ldr	x0, [x19]
    39b8:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    39bc:	ldr	x0, [x19]
    39c0:	ldr	w0, [x0, #32]
    39c4:	cbnz	w0, 3a28 <crc32_combine64@@ZLIB_1.2.3.3+0x92c>
    39c8:	b	3ccc <crc32_combine64@@ZLIB_1.2.3.3+0xbd0>
    39cc:	ldr	x0, [x19, #152]
    39d0:	mov	x1, #0x0                   	// #0
    39d4:	tbnz	x0, #63, 39e0 <crc32_combine64@@ZLIB_1.2.3.3+0x8e4>
    39d8:	ldr	x1, [x19, #96]
    39dc:	add	x1, x1, w0, uxtw
    39e0:	ldr	w2, [x19, #172]
    39e4:	mov	w3, #0x0                   	// #0
    39e8:	sub	x2, x2, x0
    39ec:	mov	x0, x19
    39f0:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    39f4:	ldr	w0, [x19, #172]
    39f8:	str	x0, [x19, #152]
    39fc:	ldr	x0, [x19]
    3a00:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    3a04:	b	3ca8 <crc32_combine64@@ZLIB_1.2.3.3+0xbac>
    3a08:	mov	w0, #0x1                   	// #1
    3a0c:	str	w0, [x19, #168]
    3a10:	ldr	w0, [x19, #172]
    3a14:	add	w0, w0, #0x1
    3a18:	str	w0, [x19, #172]
    3a1c:	ldr	w0, [x19, #180]
    3a20:	sub	w0, w0, #0x1
    3a24:	str	w0, [x19, #180]
    3a28:	ldr	w0, [x19, #180]
    3a2c:	cmp	w0, #0x105
    3a30:	b.ls	3804 <crc32_combine64@@ZLIB_1.2.3.3+0x708>  // b.plast
    3a34:	ldr	w0, [x19, #180]
    3a38:	cmp	w0, #0x2
    3a3c:	b.ls	3c20 <crc32_combine64@@ZLIB_1.2.3.3+0xb24>  // b.plast
    3a40:	ldr	w2, [x19, #172]
    3a44:	add	w1, w2, #0x2
    3a48:	ldr	x0, [x19, #96]
    3a4c:	ldrb	w0, [x0, w1, uxtw]
    3a50:	ldr	w3, [x19, #144]
    3a54:	ldr	w1, [x19, #128]
    3a58:	lsl	w1, w1, w3
    3a5c:	eor	w0, w0, w1
    3a60:	ldr	w1, [x19, #140]
    3a64:	and	w0, w0, w1
    3a68:	str	w0, [x19, #128]
    3a6c:	ldr	x1, [x19, #120]
    3a70:	ldrh	w1, [x1, w0, uxtw #1]
    3a74:	ldr	w0, [x19, #88]
    3a78:	and	w2, w2, w0
    3a7c:	ldr	x0, [x19, #112]
    3a80:	strh	w1, [x0, x2, lsl #1]
    3a84:	ldr	w2, [x19, #128]
    3a88:	ldr	x0, [x19, #120]
    3a8c:	ldr	w3, [x19, #172]
    3a90:	strh	w3, [x0, x2, lsl #1]
    3a94:	ldr	w0, [x19, #160]
    3a98:	str	w0, [x19, #184]
    3a9c:	ldr	w2, [x19, #176]
    3aa0:	str	w2, [x19, #164]
    3aa4:	str	w20, [x19, #160]
    3aa8:	cbz	w1, 3c34 <crc32_combine64@@ZLIB_1.2.3.3+0xb38>
    3aac:	ldr	w2, [x19, #192]
    3ab0:	cmp	w0, w2
    3ab4:	b.cs	3c34 <crc32_combine64@@ZLIB_1.2.3.3+0xb38>  // b.hs, b.nlast
    3ab8:	ldr	w2, [x19, #172]
    3abc:	sub	w2, w2, w1
    3ac0:	ldr	w0, [x19, #80]
    3ac4:	sub	w0, w0, #0x106
    3ac8:	cmp	w2, w0
    3acc:	b.hi	3c34 <crc32_combine64@@ZLIB_1.2.3.3+0xb38>  // b.pmore
    3ad0:	mov	x0, x19
    3ad4:	bl	3254 <crc32_combine64@@ZLIB_1.2.3.3+0x158>
    3ad8:	str	w0, [x19, #160]
    3adc:	cmp	w0, #0x5
    3ae0:	b.hi	3c34 <crc32_combine64@@ZLIB_1.2.3.3+0xb38>  // b.pmore
    3ae4:	ldr	w1, [x19, #200]
    3ae8:	cmp	w1, #0x1
    3aec:	b.eq	3b0c <crc32_combine64@@ZLIB_1.2.3.3+0xa10>  // b.none
    3af0:	cmp	w0, #0x3
    3af4:	b.ne	3c34 <crc32_combine64@@ZLIB_1.2.3.3+0xb38>  // b.any
    3af8:	ldr	w0, [x19, #172]
    3afc:	ldr	w1, [x19, #176]
    3b00:	sub	w0, w0, w1
    3b04:	cmp	w0, #0x1, lsl #12
    3b08:	b.ls	3c34 <crc32_combine64@@ZLIB_1.2.3.3+0xb38>  // b.plast
    3b0c:	str	w20, [x19, #160]
    3b10:	ldr	w0, [x19, #184]
    3b14:	cmp	w0, #0x2
    3b18:	b.ls	3c4c <crc32_combine64@@ZLIB_1.2.3.3+0xb50>  // b.plast
    3b1c:	ldr	w1, [x19, #172]
    3b20:	ldr	w3, [x19, #180]
    3b24:	add	w3, w1, w3
    3b28:	sub	w3, w3, #0x3
    3b2c:	sub	w0, w0, #0x3
    3b30:	and	w0, w0, #0xff
    3b34:	ldr	w2, [x19, #164]
    3b38:	sub	w1, w1, w2
    3b3c:	and	w1, w1, #0xffff
    3b40:	ldr	w4, [x19, #5900]
    3b44:	ldr	x2, [x19, #5904]
    3b48:	sub	w5, w1, #0x1
    3b4c:	strh	w5, [x2, x4, lsl #1]
    3b50:	ldr	x4, [x19, #5888]
    3b54:	ldr	w2, [x19, #5900]
    3b58:	add	w5, w2, #0x1
    3b5c:	str	w5, [x19, #5900]
    3b60:	strb	w0, [x4, w2, uxtw]
    3b64:	sub	w1, w1, #0x2
    3b68:	and	w1, w1, #0xffff
    3b6c:	ldrb	w0, [x23, w0, sxtw]
    3b70:	add	x0, x19, x0, lsl #2
    3b74:	ldrh	w2, [x0, #1240]
    3b78:	add	w2, w2, #0x1
    3b7c:	strh	w2, [x0, #1240]
    3b80:	cmp	w1, #0xff
    3b84:	b.hi	38e0 <crc32_combine64@@ZLIB_1.2.3.3+0x7e4>  // b.pmore
    3b88:	ldrb	w0, [x22, w1, sxtw]
    3b8c:	add	x0, x19, w0, sxtw #2
    3b90:	ldrh	w1, [x0, #2504]
    3b94:	add	w1, w1, #0x1
    3b98:	strh	w1, [x0, #2504]
    3b9c:	ldr	w6, [x19, #5900]
    3ba0:	ldr	w5, [x19, #5896]
    3ba4:	sub	w5, w5, #0x1
    3ba8:	ldr	w1, [x19, #184]
    3bac:	ldr	w0, [x19, #180]
    3bb0:	add	w0, w0, #0x1
    3bb4:	sub	w0, w0, w1
    3bb8:	str	w0, [x19, #180]
    3bbc:	sub	w1, w1, #0x2
    3bc0:	str	w1, [x19, #184]
    3bc4:	b	3950 <crc32_combine64@@ZLIB_1.2.3.3+0x854>
    3bc8:	ldr	x2, [x19, #152]
    3bcc:	mov	x1, #0x0                   	// #0
    3bd0:	tbnz	x2, #63, 3bdc <crc32_combine64@@ZLIB_1.2.3.3+0xae0>
    3bd4:	ldr	x1, [x19, #96]
    3bd8:	add	x1, x1, w2, uxtw
    3bdc:	mov	w0, w3
    3be0:	mov	w3, #0x1                   	// #1
    3be4:	sub	x2, x0, x2
    3be8:	mov	x0, x19
    3bec:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    3bf0:	ldr	w0, [x19, #172]
    3bf4:	str	x0, [x19, #152]
    3bf8:	ldr	x0, [x19]
    3bfc:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    3c00:	ldr	x0, [x19]
    3c04:	ldr	w0, [x0, #32]
    3c08:	cmp	w0, #0x0
    3c0c:	cset	w0, ne  // ne = any
    3c10:	add	w0, w0, #0x2
    3c14:	b	3ccc <crc32_combine64@@ZLIB_1.2.3.3+0xbd0>
    3c18:	mov	w0, #0x0                   	// #0
    3c1c:	b	3ccc <crc32_combine64@@ZLIB_1.2.3.3+0xbd0>
    3c20:	ldr	w0, [x19, #160]
    3c24:	str	w0, [x19, #184]
    3c28:	ldr	w0, [x19, #176]
    3c2c:	str	w0, [x19, #164]
    3c30:	str	w20, [x19, #160]
    3c34:	ldr	w0, [x19, #184]
    3c38:	cmp	w0, #0x2
    3c3c:	b.ls	3c4c <crc32_combine64@@ZLIB_1.2.3.3+0xb50>  // b.plast
    3c40:	ldr	w1, [x19, #160]
    3c44:	cmp	w0, w1
    3c48:	b.cs	3b1c <crc32_combine64@@ZLIB_1.2.3.3+0xa20>  // b.hs, b.nlast
    3c4c:	ldr	w0, [x19, #168]
    3c50:	cbz	w0, 3a08 <crc32_combine64@@ZLIB_1.2.3.3+0x90c>
    3c54:	ldr	w0, [x19, #172]
    3c58:	sub	w0, w0, #0x1
    3c5c:	ldr	x1, [x19, #96]
    3c60:	ldrb	w0, [x1, w0, uxtw]
    3c64:	ldr	w2, [x19, #5900]
    3c68:	ldr	x1, [x19, #5904]
    3c6c:	strh	wzr, [x1, x2, lsl #1]
    3c70:	ldr	x2, [x19, #5888]
    3c74:	ldr	w1, [x19, #5900]
    3c78:	add	w3, w1, #0x1
    3c7c:	str	w3, [x19, #5900]
    3c80:	strb	w0, [x2, w1, uxtw]
    3c84:	add	x0, x19, w0, uxtb #2
    3c88:	ldrh	w1, [x0, #212]
    3c8c:	add	w1, w1, #0x1
    3c90:	strh	w1, [x0, #212]
    3c94:	ldr	w0, [x19, #5896]
    3c98:	sub	w0, w0, #0x1
    3c9c:	ldr	w1, [x19, #5900]
    3ca0:	cmp	w1, w0
    3ca4:	b.eq	39cc <crc32_combine64@@ZLIB_1.2.3.3+0x8d0>  // b.none
    3ca8:	ldr	w0, [x19, #172]
    3cac:	add	w0, w0, #0x1
    3cb0:	str	w0, [x19, #172]
    3cb4:	ldr	w0, [x19, #180]
    3cb8:	sub	w0, w0, #0x1
    3cbc:	str	w0, [x19, #180]
    3cc0:	ldr	x0, [x19]
    3cc4:	ldr	w0, [x0, #32]
    3cc8:	cbnz	w0, 3a28 <crc32_combine64@@ZLIB_1.2.3.3+0x92c>
    3ccc:	ldp	x19, x20, [sp, #16]
    3cd0:	ldp	x21, x22, [sp, #32]
    3cd4:	ldr	x23, [sp, #48]
    3cd8:	ldp	x29, x30, [sp], #64
    3cdc:	ret
    3ce0:	stp	x29, x30, [sp, #-48]!
    3ce4:	mov	x29, sp
    3ce8:	stp	x19, x20, [sp, #16]
    3cec:	stp	x21, x22, [sp, #32]
    3cf0:	mov	x19, x0
    3cf4:	mov	w22, w1
    3cf8:	adrp	x20, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    3cfc:	add	x20, x20, #0xf20
    3d00:	adrp	x21, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    3d04:	add	x21, x21, #0x110
    3d08:	b	3eac <crc32_combine64@@ZLIB_1.2.3.3+0xdb0>
    3d0c:	mov	x0, x19
    3d10:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    3d14:	ldr	w0, [x19, #180]
    3d18:	cmp	w0, #0x105
    3d1c:	ccmp	w22, #0x0, #0x0, ls  // ls = plast
    3d20:	b.eq	40bc <crc32_combine64@@ZLIB_1.2.3.3+0xfc0>  // b.none
    3d24:	cbnz	w0, 3eb8 <crc32_combine64@@ZLIB_1.2.3.3+0xdbc>
    3d28:	ldr	w3, [x19, #172]
    3d2c:	cmp	w3, #0x2
    3d30:	mov	w0, #0x2                   	// #2
    3d34:	csel	w0, w3, w0, ls  // ls = plast
    3d38:	str	w0, [x19, #5932]
    3d3c:	cmp	w22, #0x4
    3d40:	b.eq	406c <crc32_combine64@@ZLIB_1.2.3.3+0xf70>  // b.none
    3d44:	ldr	w1, [x19, #5900]
    3d48:	mov	w0, #0x1                   	// #1
    3d4c:	cbz	w1, 40c0 <crc32_combine64@@ZLIB_1.2.3.3+0xfc4>
    3d50:	ldr	x2, [x19, #152]
    3d54:	mov	x1, #0x0                   	// #0
    3d58:	tbnz	x2, #63, 3d64 <crc32_combine64@@ZLIB_1.2.3.3+0xc68>
    3d5c:	ldr	x1, [x19, #96]
    3d60:	add	x1, x1, w2, uxtw
    3d64:	mov	w0, w3
    3d68:	mov	w3, #0x0                   	// #0
    3d6c:	sub	x2, x0, x2
    3d70:	mov	x0, x19
    3d74:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    3d78:	ldr	w0, [x19, #172]
    3d7c:	str	x0, [x19, #152]
    3d80:	ldr	x0, [x19]
    3d84:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    3d88:	ldr	x0, [x19]
    3d8c:	ldr	w0, [x0, #32]
    3d90:	cmp	w0, #0x0
    3d94:	cset	w0, ne  // ne = any
    3d98:	b	40c0 <crc32_combine64@@ZLIB_1.2.3.3+0xfc4>
    3d9c:	mov	x0, x19
    3da0:	bl	3254 <crc32_combine64@@ZLIB_1.2.3.3+0x158>
    3da4:	str	w0, [x19, #160]
    3da8:	b	3f34 <crc32_combine64@@ZLIB_1.2.3.3+0xe38>
    3dac:	lsr	w0, w0, #7
    3db0:	add	w0, w0, #0x100
    3db4:	ldrb	w0, [x21, w0, sxtw]
    3db8:	b	3fa0 <crc32_combine64@@ZLIB_1.2.3.3+0xea4>
    3dbc:	sub	w0, w0, #0x1
    3dc0:	str	w0, [x19, #160]
    3dc4:	ldr	w0, [x19, #172]
    3dc8:	add	w1, w0, #0x1
    3dcc:	str	w1, [x19, #172]
    3dd0:	add	w0, w0, #0x3
    3dd4:	ldr	x2, [x19, #96]
    3dd8:	ldrb	w0, [x2, w0, uxtw]
    3ddc:	ldr	w4, [x19, #144]
    3de0:	ldr	w2, [x19, #128]
    3de4:	lsl	w2, w2, w4
    3de8:	eor	w0, w0, w2
    3dec:	ldr	w2, [x19, #140]
    3df0:	and	w0, w0, w2
    3df4:	str	w0, [x19, #128]
    3df8:	ldr	x2, [x19, #120]
    3dfc:	ldrh	w2, [x2, w0, uxtw #1]
    3e00:	ldr	w0, [x19, #88]
    3e04:	and	w1, w1, w0
    3e08:	ldr	x0, [x19, #112]
    3e0c:	strh	w2, [x0, x1, lsl #1]
    3e10:	ldr	w1, [x19, #128]
    3e14:	ldr	x0, [x19, #120]
    3e18:	ldr	w2, [x19, #172]
    3e1c:	strh	w2, [x0, x1, lsl #1]
    3e20:	ldr	w0, [x19, #160]
    3e24:	sub	w0, w0, #0x1
    3e28:	str	w0, [x19, #160]
    3e2c:	cbnz	w0, 3dc4 <crc32_combine64@@ZLIB_1.2.3.3+0xcc8>
    3e30:	ldr	w0, [x19, #172]
    3e34:	add	w0, w0, #0x1
    3e38:	str	w0, [x19, #172]
    3e3c:	b	3ea8 <crc32_combine64@@ZLIB_1.2.3.3+0xdac>
    3e40:	ldr	w0, [x19, #172]
    3e44:	ldr	x1, [x19, #96]
    3e48:	ldrb	w0, [x1, x0]
    3e4c:	ldr	w2, [x19, #5900]
    3e50:	ldr	x1, [x19, #5904]
    3e54:	strh	wzr, [x1, x2, lsl #1]
    3e58:	ldr	x2, [x19, #5888]
    3e5c:	ldr	w1, [x19, #5900]
    3e60:	add	w3, w1, #0x1
    3e64:	str	w3, [x19, #5900]
    3e68:	strb	w0, [x2, w1, uxtw]
    3e6c:	add	x0, x19, w0, uxtb #2
    3e70:	ldrh	w1, [x0, #212]
    3e74:	add	w1, w1, #0x1
    3e78:	strh	w1, [x0, #212]
    3e7c:	ldr	w0, [x19, #5896]
    3e80:	sub	w0, w0, #0x1
    3e84:	ldr	w1, [x19, #5900]
    3e88:	cmp	w0, w1
    3e8c:	cset	w3, eq  // eq = none
    3e90:	ldr	w0, [x19, #180]
    3e94:	sub	w0, w0, #0x1
    3e98:	str	w0, [x19, #180]
    3e9c:	ldr	w0, [x19, #172]
    3ea0:	add	w0, w0, #0x1
    3ea4:	str	w0, [x19, #172]
    3ea8:	cbnz	w3, 4024 <crc32_combine64@@ZLIB_1.2.3.3+0xf28>
    3eac:	ldr	w0, [x19, #180]
    3eb0:	cmp	w0, #0x105
    3eb4:	b.ls	3d0c <crc32_combine64@@ZLIB_1.2.3.3+0xc10>  // b.plast
    3eb8:	ldr	w0, [x19, #180]
    3ebc:	cmp	w0, #0x2
    3ec0:	b.ls	3f34 <crc32_combine64@@ZLIB_1.2.3.3+0xe38>  // b.plast
    3ec4:	ldr	w2, [x19, #172]
    3ec8:	add	w1, w2, #0x2
    3ecc:	ldr	x0, [x19, #96]
    3ed0:	ldrb	w0, [x0, w1, uxtw]
    3ed4:	ldr	w3, [x19, #144]
    3ed8:	ldr	w1, [x19, #128]
    3edc:	lsl	w1, w1, w3
    3ee0:	eor	w0, w0, w1
    3ee4:	ldr	w1, [x19, #140]
    3ee8:	and	w0, w0, w1
    3eec:	str	w0, [x19, #128]
    3ef0:	ldr	x1, [x19, #120]
    3ef4:	ldrh	w1, [x1, w0, uxtw #1]
    3ef8:	ldr	w0, [x19, #88]
    3efc:	and	w2, w2, w0
    3f00:	ldr	x0, [x19, #112]
    3f04:	strh	w1, [x0, x2, lsl #1]
    3f08:	ldr	w2, [x19, #128]
    3f0c:	ldr	x0, [x19, #120]
    3f10:	ldr	w3, [x19, #172]
    3f14:	strh	w3, [x0, x2, lsl #1]
    3f18:	cbz	w1, 3f34 <crc32_combine64@@ZLIB_1.2.3.3+0xe38>
    3f1c:	ldr	w2, [x19, #172]
    3f20:	sub	w2, w2, w1
    3f24:	ldr	w0, [x19, #80]
    3f28:	sub	w0, w0, #0x106
    3f2c:	cmp	w2, w0
    3f30:	b.ls	3d9c <crc32_combine64@@ZLIB_1.2.3.3+0xca0>  // b.plast
    3f34:	ldr	w0, [x19, #160]
    3f38:	cmp	w0, #0x2
    3f3c:	b.ls	3e40 <crc32_combine64@@ZLIB_1.2.3.3+0xd44>  // b.plast
    3f40:	sub	w0, w0, #0x3
    3f44:	and	w1, w0, #0xff
    3f48:	ldr	w0, [x19, #172]
    3f4c:	ldr	w2, [x19, #176]
    3f50:	sub	w0, w0, w2
    3f54:	and	w0, w0, #0xffff
    3f58:	ldr	w3, [x19, #5900]
    3f5c:	ldr	x2, [x19, #5904]
    3f60:	strh	w0, [x2, x3, lsl #1]
    3f64:	ldr	x3, [x19, #5888]
    3f68:	ldr	w2, [x19, #5900]
    3f6c:	add	w4, w2, #0x1
    3f70:	str	w4, [x19, #5900]
    3f74:	strb	w1, [x3, w2, uxtw]
    3f78:	sub	w0, w0, #0x1
    3f7c:	and	w0, w0, #0xffff
    3f80:	ldrb	w1, [x20, w1, sxtw]
    3f84:	add	x1, x19, x1, lsl #2
    3f88:	ldrh	w2, [x1, #1240]
    3f8c:	add	w2, w2, #0x1
    3f90:	strh	w2, [x1, #1240]
    3f94:	cmp	w0, #0xff
    3f98:	b.hi	3dac <crc32_combine64@@ZLIB_1.2.3.3+0xcb0>  // b.pmore
    3f9c:	ldrb	w0, [x21, w0, sxtw]
    3fa0:	add	x0, x19, w0, sxtw #2
    3fa4:	ldrh	w1, [x0, #2504]
    3fa8:	add	w1, w1, #0x1
    3fac:	strh	w1, [x0, #2504]
    3fb0:	ldr	w0, [x19, #5896]
    3fb4:	sub	w0, w0, #0x1
    3fb8:	ldr	w1, [x19, #5900]
    3fbc:	cmp	w0, w1
    3fc0:	cset	w3, eq  // eq = none
    3fc4:	ldr	w0, [x19, #160]
    3fc8:	ldr	w1, [x19, #180]
    3fcc:	sub	w1, w1, w0
    3fd0:	str	w1, [x19, #180]
    3fd4:	ldr	w2, [x19, #192]
    3fd8:	cmp	w0, w2
    3fdc:	ccmp	w1, #0x2, #0x0, ls  // ls = plast
    3fe0:	b.hi	3dbc <crc32_combine64@@ZLIB_1.2.3.3+0xcc0>  // b.pmore
    3fe4:	ldr	w1, [x19, #172]
    3fe8:	add	w0, w0, w1
    3fec:	str	w0, [x19, #172]
    3ff0:	str	wzr, [x19, #160]
    3ff4:	ldr	x2, [x19, #96]
    3ff8:	ldrb	w1, [x2, w0, uxtw]
    3ffc:	str	w1, [x19, #128]
    4000:	add	w0, w0, #0x1
    4004:	ldrb	w0, [x2, w0, uxtw]
    4008:	ldr	w2, [x19, #144]
    400c:	lsl	w1, w1, w2
    4010:	eor	w0, w0, w1
    4014:	ldr	w1, [x19, #140]
    4018:	and	w0, w0, w1
    401c:	str	w0, [x19, #128]
    4020:	b	3ea8 <crc32_combine64@@ZLIB_1.2.3.3+0xdac>
    4024:	ldr	x0, [x19, #152]
    4028:	mov	x1, #0x0                   	// #0
    402c:	tbnz	x0, #63, 4038 <crc32_combine64@@ZLIB_1.2.3.3+0xf3c>
    4030:	ldr	x1, [x19, #96]
    4034:	add	x1, x1, w0, uxtw
    4038:	ldr	w2, [x19, #172]
    403c:	mov	w3, #0x0                   	// #0
    4040:	sub	x2, x2, x0
    4044:	mov	x0, x19
    4048:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    404c:	ldr	w0, [x19, #172]
    4050:	str	x0, [x19, #152]
    4054:	ldr	x0, [x19]
    4058:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    405c:	ldr	x0, [x19]
    4060:	ldr	w0, [x0, #32]
    4064:	cbnz	w0, 3eac <crc32_combine64@@ZLIB_1.2.3.3+0xdb0>
    4068:	b	40c0 <crc32_combine64@@ZLIB_1.2.3.3+0xfc4>
    406c:	ldr	x2, [x19, #152]
    4070:	mov	x1, #0x0                   	// #0
    4074:	tbnz	x2, #63, 4080 <crc32_combine64@@ZLIB_1.2.3.3+0xf84>
    4078:	ldr	x1, [x19, #96]
    407c:	add	x1, x1, w2, uxtw
    4080:	mov	w0, w3
    4084:	mov	w3, #0x1                   	// #1
    4088:	sub	x2, x0, x2
    408c:	mov	x0, x19
    4090:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    4094:	ldr	w0, [x19, #172]
    4098:	str	x0, [x19, #152]
    409c:	ldr	x0, [x19]
    40a0:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    40a4:	ldr	x0, [x19]
    40a8:	ldr	w0, [x0, #32]
    40ac:	cmp	w0, #0x0
    40b0:	cset	w0, ne  // ne = any
    40b4:	add	w0, w0, #0x2
    40b8:	b	40c0 <crc32_combine64@@ZLIB_1.2.3.3+0xfc4>
    40bc:	mov	w0, #0x0                   	// #0
    40c0:	ldp	x19, x20, [sp, #16]
    40c4:	ldp	x21, x22, [sp, #32]
    40c8:	ldp	x29, x30, [sp], #48
    40cc:	ret
    40d0:	stp	x29, x30, [sp, #-96]!
    40d4:	mov	x29, sp
    40d8:	stp	x19, x20, [sp, #16]
    40dc:	stp	x21, x22, [sp, #32]
    40e0:	stp	x23, x24, [sp, #48]
    40e4:	stp	x25, x26, [sp, #64]
    40e8:	stp	x27, x28, [sp, #80]
    40ec:	mov	x19, x0
    40f0:	mov	w23, w1
    40f4:	ldr	x24, [x0, #24]
    40f8:	sub	x24, x24, #0x5
    40fc:	ldr	w0, [x0, #80]
    4100:	cmp	x24, x0
    4104:	csel	x24, x24, x0, ls  // ls = plast
    4108:	ldr	x0, [x19]
    410c:	ldr	w28, [x0, #8]
    4110:	mov	x26, #0xfffe                	// #65534
    4114:	mov	w25, #0xffff                	// #65535
    4118:	b	41a4 <crc32_combine64@@ZLIB_1.2.3.3+0x10a8>
    411c:	mov	w22, #0x0                   	// #0
    4120:	cmp	w23, #0x4
    4124:	b.eq	421c <crc32_combine64@@ZLIB_1.2.3.3+0x1120>  // b.none
    4128:	mov	w3, w22
    412c:	mov	x2, #0x0                   	// #0
    4130:	mov	x1, #0x0                   	// #0
    4134:	mov	x0, x19
    4138:	bl	b92c <inflateCodesUsed@@ZLIB_1.2.9+0x184c>
    413c:	and	w0, w20, #0xff
    4140:	ldr	x1, [x19, #16]
    4144:	ldr	x2, [x19, #40]
    4148:	add	x1, x1, x2
    414c:	sturb	w0, [x1, #-4]
    4150:	ldr	x1, [x19, #16]
    4154:	ldr	x2, [x19, #40]
    4158:	add	x1, x1, x2
    415c:	lsr	w2, w20, #8
    4160:	sturb	w2, [x1, #-3]
    4164:	ldr	x1, [x19, #16]
    4168:	ldr	x2, [x19, #40]
    416c:	add	x1, x1, x2
    4170:	mvn	w0, w0
    4174:	sturb	w0, [x1, #-2]
    4178:	ldr	x0, [x19, #16]
    417c:	ldr	x1, [x19, #40]
    4180:	add	x0, x0, x1
    4184:	mvn	w1, w20
    4188:	lsr	w1, w1, #8
    418c:	sturb	w1, [x0, #-1]
    4190:	ldr	x0, [x19]
    4194:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    4198:	cbnz	w21, 422c <crc32_combine64@@ZLIB_1.2.3.3+0x1130>
    419c:	cbnz	w20, 4298 <crc32_combine64@@ZLIB_1.2.3.3+0x119c>
    41a0:	cbnz	w22, 42e0 <crc32_combine64@@ZLIB_1.2.3.3+0x11e4>
    41a4:	ldr	w0, [x19, #5940]
    41a8:	add	w0, w0, #0x2a
    41ac:	asr	w2, w0, #3
    41b0:	ldr	x1, [x19]
    41b4:	ldr	w20, [x1, #32]
    41b8:	cmp	w20, w0, asr #3
    41bc:	b.cc	42e8 <crc32_combine64@@ZLIB_1.2.3.3+0x11ec>  // b.lo, b.ul, b.last
    41c0:	sub	w20, w20, w2
    41c4:	ldr	x2, [x19, #152]
    41c8:	ldr	w0, [x19, #172]
    41cc:	sub	w21, w0, w2
    41d0:	ldr	w1, [x1, #8]
    41d4:	sub	w0, w0, w2
    41d8:	add	x0, x0, w1, uxtw
    41dc:	add	w2, w1, w21
    41e0:	cmp	x0, x26
    41e4:	csel	w0, w2, w25, ls  // ls = plast
    41e8:	cmp	w0, w20
    41ec:	csel	w20, w0, w20, ls  // ls = plast
    41f0:	cmp	w20, w24
    41f4:	b.cs	411c <crc32_combine64@@ZLIB_1.2.3.3+0x1020>  // b.hs, b.nlast
    41f8:	cmp	w20, #0x0
    41fc:	ccmp	w23, #0x4, #0x4, eq  // eq = none
    4200:	ccmp	w23, #0x0, #0x4, eq  // eq = none
    4204:	b.eq	43b4 <crc32_combine64@@ZLIB_1.2.3.3+0x12b8>  // b.none
    4208:	cmp	w20, w2
    420c:	b.ne	43bc <crc32_combine64@@ZLIB_1.2.3.3+0x12c0>  // b.any
    4210:	cmp	w23, #0x4
    4214:	cset	w22, eq  // eq = none
    4218:	b	4128 <crc32_combine64@@ZLIB_1.2.3.3+0x102c>
    421c:	add	w1, w1, w21
    4220:	cmp	w1, w20
    4224:	cset	w22, eq  // eq = none
    4228:	b	4128 <crc32_combine64@@ZLIB_1.2.3.3+0x102c>
    422c:	cmp	w20, w21
    4230:	csel	w27, w20, w21, ls  // ls = plast
    4234:	csel	w21, w20, w21, ls  // ls = plast
    4238:	ldr	x0, [x19]
    423c:	ldr	x3, [x19, #96]
    4240:	ldr	x1, [x19, #152]
    4244:	mov	x2, x21
    4248:	add	x1, x3, x1
    424c:	ldr	x0, [x0, #24]
    4250:	bl	23a0 <memcpy@plt>
    4254:	ldr	x1, [x19]
    4258:	ldr	x0, [x1, #24]
    425c:	add	x0, x0, x21
    4260:	str	x0, [x1, #24]
    4264:	ldr	x1, [x19]
    4268:	ldr	w0, [x1, #32]
    426c:	sub	w0, w0, w27
    4270:	str	w0, [x1, #32]
    4274:	ldr	x1, [x19]
    4278:	ldr	x0, [x1, #40]
    427c:	add	x0, x0, x21
    4280:	str	x0, [x1, #40]
    4284:	ldr	x0, [x19, #152]
    4288:	add	x21, x0, x21
    428c:	str	x21, [x19, #152]
    4290:	sub	w20, w20, w27
    4294:	b	419c <crc32_combine64@@ZLIB_1.2.3.3+0x10a0>
    4298:	ldr	x0, [x19]
    429c:	mov	w2, w20
    42a0:	ldr	x1, [x0, #24]
    42a4:	bl	342c <crc32_combine64@@ZLIB_1.2.3.3+0x330>
    42a8:	ldr	x0, [x19]
    42ac:	mov	w2, w20
    42b0:	ldr	x1, [x0, #24]
    42b4:	add	x1, x1, x2
    42b8:	str	x1, [x0, #24]
    42bc:	ldr	x0, [x19]
    42c0:	ldr	w1, [x0, #32]
    42c4:	sub	w20, w1, w20
    42c8:	str	w20, [x0, #32]
    42cc:	ldr	x1, [x19]
    42d0:	ldr	x0, [x1, #40]
    42d4:	add	x0, x0, x2
    42d8:	str	x0, [x1, #40]
    42dc:	b	41a0 <crc32_combine64@@ZLIB_1.2.3.3+0x10a4>
    42e0:	mov	w21, #0x1                   	// #1
    42e4:	b	42ec <crc32_combine64@@ZLIB_1.2.3.3+0x11f0>
    42e8:	mov	w21, #0x0                   	// #0
    42ec:	ldr	x3, [x19]
    42f0:	ldr	w0, [x3, #8]
    42f4:	subs	w28, w28, w0
    42f8:	b.eq	4370 <crc32_combine64@@ZLIB_1.2.3.3+0x1274>  // b.none
    42fc:	ldr	w1, [x19, #80]
    4300:	cmp	w1, w28
    4304:	b.ls	43c4 <crc32_combine64@@ZLIB_1.2.3.3+0x12c8>  // b.plast
    4308:	ldr	w2, [x19, #172]
    430c:	mov	w20, w28
    4310:	ldr	x0, [x19, #104]
    4314:	sub	x0, x0, w2, uxtw
    4318:	cmp	x0, w28, uxtw
    431c:	b.ls	43ec <crc32_combine64@@ZLIB_1.2.3.3+0x12f0>  // b.plast
    4320:	ldr	w0, [x19, #172]
    4324:	ldr	x3, [x19, #96]
    4328:	ldr	x1, [x19]
    432c:	ldr	x1, [x1]
    4330:	mov	x2, x20
    4334:	sub	x1, x1, x20
    4338:	add	x0, x3, x0
    433c:	bl	23a0 <memcpy@plt>
    4340:	ldr	w0, [x19, #172]
    4344:	add	w0, w0, w28
    4348:	str	w0, [x19, #172]
    434c:	ldr	w0, [x19, #172]
    4350:	str	x0, [x19, #152]
    4354:	ldr	w1, [x19, #5932]
    4358:	ldr	w0, [x19, #80]
    435c:	sub	w0, w0, w1
    4360:	cmp	w0, w28
    4364:	csel	w28, w0, w28, ls  // ls = plast
    4368:	add	w28, w28, w1
    436c:	str	w28, [x19, #5932]
    4370:	ldr	w0, [x19, #172]
    4374:	mov	w2, w0
    4378:	ldr	x1, [x19, #5944]
    437c:	cmp	x1, w0, uxtw
    4380:	b.cs	4388 <crc32_combine64@@ZLIB_1.2.3.3+0x128c>  // b.hs, b.nlast
    4384:	str	x2, [x19, #5944]
    4388:	cbnz	w21, 4604 <crc32_combine64@@ZLIB_1.2.3.3+0x1508>
    438c:	tst	w23, #0xfffffffb
    4390:	b.eq	441c <crc32_combine64@@ZLIB_1.2.3.3+0x1320>  // b.none
    4394:	ldr	x1, [x19]
    4398:	ldr	w1, [x1, #8]
    439c:	cbnz	w1, 441c <crc32_combine64@@ZLIB_1.2.3.3+0x1320>
    43a0:	ldr	x1, [x19, #152]
    43a4:	cmp	x1, w0, uxtw
    43a8:	b.ne	4460 <crc32_combine64@@ZLIB_1.2.3.3+0x1364>  // b.any
    43ac:	mov	w21, #0x1                   	// #1
    43b0:	b	4598 <crc32_combine64@@ZLIB_1.2.3.3+0x149c>
    43b4:	mov	w21, #0x0                   	// #0
    43b8:	b	42ec <crc32_combine64@@ZLIB_1.2.3.3+0x11f0>
    43bc:	mov	w21, #0x0                   	// #0
    43c0:	b	42ec <crc32_combine64@@ZLIB_1.2.3.3+0x11f0>
    43c4:	mov	w0, #0x2                   	// #2
    43c8:	str	w0, [x19, #5928]
    43cc:	mov	w2, w1
    43d0:	ldr	x1, [x3]
    43d4:	sub	x1, x1, x2
    43d8:	ldr	x0, [x19, #96]
    43dc:	bl	23a0 <memcpy@plt>
    43e0:	ldr	w0, [x19, #80]
    43e4:	str	w0, [x19, #172]
    43e8:	b	434c <crc32_combine64@@ZLIB_1.2.3.3+0x1250>
    43ec:	sub	w2, w2, w1
    43f0:	str	w2, [x19, #172]
    43f4:	ldr	x0, [x19, #96]
    43f8:	mov	w2, w2
    43fc:	add	x1, x0, w1, uxtw
    4400:	bl	23a0 <memcpy@plt>
    4404:	ldr	w0, [x19, #5928]
    4408:	cmp	w0, #0x1
    440c:	b.hi	4320 <crc32_combine64@@ZLIB_1.2.3.3+0x1224>  // b.pmore
    4410:	add	w0, w0, #0x1
    4414:	str	w0, [x19, #5928]
    4418:	b	4320 <crc32_combine64@@ZLIB_1.2.3.3+0x1224>
    441c:	ldr	x20, [x19, #104]
    4420:	sub	w20, w20, w0
    4424:	sub	w20, w20, #0x1
    4428:	ldr	x1, [x19]
    442c:	ldr	w1, [x1, #8]
    4430:	cmp	w1, w20
    4434:	b.ls	444c <crc32_combine64@@ZLIB_1.2.3.3+0x1350>  // b.plast
    4438:	ldr	x2, [x19, #152]
    443c:	ldr	w1, [x19, #80]
    4440:	mov	w3, w1
    4444:	cmp	x2, w1, uxtw
    4448:	b.ge	44f0 <crc32_combine64@@ZLIB_1.2.3.3+0x13f4>  // b.tcont
    444c:	ldr	x0, [x19]
    4450:	ldr	w1, [x0, #8]
    4454:	cmp	w1, w20
    4458:	csel	w20, w1, w20, ls  // ls = plast
    445c:	cbnz	w20, 4534 <crc32_combine64@@ZLIB_1.2.3.3+0x1438>
    4460:	ldr	w2, [x19, #172]
    4464:	mov	w1, w2
    4468:	ldr	x0, [x19, #5944]
    446c:	cmp	x0, w2, uxtw
    4470:	b.cs	4478 <crc32_combine64@@ZLIB_1.2.3.3+0x137c>  // b.hs, b.nlast
    4474:	str	x1, [x19, #5944]
    4478:	ldr	w0, [x19, #5940]
    447c:	add	w0, w0, #0x2a
    4480:	asr	w1, w0, #3
    4484:	ldr	x0, [x19, #24]
    4488:	sub	x0, x0, x1
    448c:	mov	x1, #0xffff                	// #65535
    4490:	cmp	x0, x1
    4494:	csel	x0, x0, x1, ls  // ls = plast
    4498:	mov	w4, w0
    449c:	ldr	x1, [x19, #152]
    44a0:	sub	w2, w2, w1
    44a4:	ldr	w3, [x19, #80]
    44a8:	cmp	w3, w0
    44ac:	csel	w3, w3, w0, ls  // ls = plast
    44b0:	cmp	w3, w2
    44b4:	b.ls	4558 <crc32_combine64@@ZLIB_1.2.3.3+0x145c>  // b.plast
    44b8:	cmp	w2, #0x0
    44bc:	ccmp	w23, #0x4, #0x4, eq  // eq = none
    44c0:	ccmp	w23, #0x0, #0x4, eq  // eq = none
    44c4:	b.eq	4598 <crc32_combine64@@ZLIB_1.2.3.3+0x149c>  // b.none
    44c8:	ldr	x0, [x19]
    44cc:	ldr	w0, [x0, #8]
    44d0:	cmp	w0, #0x0
    44d4:	ccmp	w4, w2, #0x0, eq  // eq = none
    44d8:	b.cc	4598 <crc32_combine64@@ZLIB_1.2.3.3+0x149c>  // b.lo, b.ul, b.last
    44dc:	cmp	w4, w2
    44e0:	csel	w0, w4, w2, ls  // ls = plast
    44e4:	cmp	w23, #0x4
    44e8:	b.ne	4568 <crc32_combine64@@ZLIB_1.2.3.3+0x146c>  // b.any
    44ec:	b	45cc <crc32_combine64@@ZLIB_1.2.3.3+0x14d0>
    44f0:	sub	x2, x2, x3
    44f4:	str	x2, [x19, #152]
    44f8:	sub	w2, w0, w1
    44fc:	str	w2, [x19, #172]
    4500:	ldr	x0, [x19, #96]
    4504:	mov	w2, w2
    4508:	add	x1, x0, w1, uxtw
    450c:	bl	23a0 <memcpy@plt>
    4510:	ldr	w0, [x19, #5928]
    4514:	cmp	w0, #0x1
    4518:	b.ls	4528 <crc32_combine64@@ZLIB_1.2.3.3+0x142c>  // b.plast
    451c:	ldr	w0, [x19, #80]
    4520:	add	w20, w20, w0
    4524:	b	444c <crc32_combine64@@ZLIB_1.2.3.3+0x1350>
    4528:	add	w0, w0, #0x1
    452c:	str	w0, [x19, #5928]
    4530:	b	451c <crc32_combine64@@ZLIB_1.2.3.3+0x1420>
    4534:	ldr	w1, [x19, #172]
    4538:	ldr	x3, [x19, #96]
    453c:	mov	w2, w20
    4540:	add	x1, x3, x1
    4544:	bl	342c <crc32_combine64@@ZLIB_1.2.3.3+0x330>
    4548:	ldr	w0, [x19, #172]
    454c:	add	w20, w0, w20
    4550:	str	w20, [x19, #172]
    4554:	b	4460 <crc32_combine64@@ZLIB_1.2.3.3+0x1364>
    4558:	cmp	w0, w2
    455c:	csel	w0, w0, w2, ls  // ls = plast
    4560:	cmp	w23, #0x4
    4564:	b.eq	45b8 <crc32_combine64@@ZLIB_1.2.3.3+0x14bc>  // b.none
    4568:	mov	w20, w0
    456c:	ldr	x0, [x19, #96]
    4570:	mov	w3, #0x0                   	// #0
    4574:	mov	x2, x20
    4578:	add	x1, x0, x1
    457c:	mov	x0, x19
    4580:	bl	b92c <inflateCodesUsed@@ZLIB_1.2.9+0x184c>
    4584:	ldr	x0, [x19, #152]
    4588:	add	x20, x0, x20
    458c:	str	x20, [x19, #152]
    4590:	ldr	x0, [x19]
    4594:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    4598:	mov	w0, w21
    459c:	ldp	x19, x20, [sp, #16]
    45a0:	ldp	x21, x22, [sp, #32]
    45a4:	ldp	x23, x24, [sp, #48]
    45a8:	ldp	x25, x26, [sp, #64]
    45ac:	ldp	x27, x28, [sp, #80]
    45b0:	ldp	x29, x30, [sp], #96
    45b4:	ret
    45b8:	ldr	x3, [x19]
    45bc:	ldr	w3, [x3, #8]
    45c0:	cmp	w3, #0x0
    45c4:	ccmp	w4, w2, #0x0, eq  // eq = none
    45c8:	b.cc	4568 <crc32_combine64@@ZLIB_1.2.3.3+0x146c>  // b.lo, b.ul, b.last
    45cc:	mov	w20, w0
    45d0:	ldr	x0, [x19, #96]
    45d4:	mov	w3, #0x1                   	// #1
    45d8:	mov	x2, x20
    45dc:	add	x1, x0, x1
    45e0:	mov	x0, x19
    45e4:	bl	b92c <inflateCodesUsed@@ZLIB_1.2.9+0x184c>
    45e8:	ldr	x0, [x19, #152]
    45ec:	add	x0, x0, x20
    45f0:	str	x0, [x19, #152]
    45f4:	ldr	x0, [x19]
    45f8:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    45fc:	mov	w21, #0x2                   	// #2
    4600:	b	4598 <crc32_combine64@@ZLIB_1.2.3.3+0x149c>
    4604:	mov	w21, #0x3                   	// #3
    4608:	b	4598 <crc32_combine64@@ZLIB_1.2.3.3+0x149c>

000000000000460c <deflateSetDictionary@@Base>:
    460c:	stp	x29, x30, [sp, #-80]!
    4610:	mov	x29, sp
    4614:	stp	x19, x20, [sp, #16]
    4618:	stp	x21, x22, [sp, #32]
    461c:	str	x25, [sp, #64]
    4620:	mov	x20, x0
    4624:	mov	x25, x1
    4628:	mov	w21, w2
    462c:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    4630:	cmp	x25, #0x0
    4634:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    4638:	b.ne	47fc <deflateSetDictionary@@Base+0x1f0>  // b.any
    463c:	ldr	x19, [x20, #56]
    4640:	ldr	w22, [x19, #48]
    4644:	cmp	w22, #0x2
    4648:	b.eq	4804 <deflateSetDictionary@@Base+0x1f8>  // b.none
    464c:	cmp	w22, #0x1
    4650:	b.eq	4780 <deflateSetDictionary@@Base+0x174>  // b.none
    4654:	ldr	w0, [x19, #180]
    4658:	cbnz	w0, 4814 <deflateSetDictionary@@Base+0x208>
    465c:	stp	x23, x24, [sp, #48]
    4660:	str	wzr, [x19, #48]
    4664:	ldr	w0, [x19, #80]
    4668:	cmp	w0, w21
    466c:	b.hi	4684 <deflateSetDictionary@@Base+0x78>  // b.pmore
    4670:	cbz	w22, 47c4 <deflateSetDictionary@@Base+0x1b8>
    4674:	ldr	w0, [x19, #80]
    4678:	sub	w21, w21, w0
    467c:	add	x25, x25, x21
    4680:	mov	w21, w0
    4684:	ldr	w23, [x20, #8]
    4688:	ldr	x24, [x20]
    468c:	str	w21, [x20, #8]
    4690:	str	x25, [x20]
    4694:	mov	x0, x19
    4698:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    469c:	ldr	w0, [x19, #180]
    46a0:	cmp	w0, #0x2
    46a4:	b.ls	472c <deflateSetDictionary@@Base+0x120>  // b.plast
    46a8:	mov	w21, #0x2                   	// #2
    46ac:	ldr	w2, [x19, #172]
    46b0:	sub	w4, w2, #0x2
    46b4:	add	w4, w4, w0
    46b8:	add	w1, w2, #0x2
    46bc:	ldr	x0, [x19, #96]
    46c0:	ldrb	w1, [x0, w1, uxtw]
    46c4:	ldr	w3, [x19, #144]
    46c8:	ldr	w0, [x19, #128]
    46cc:	lsl	w0, w0, w3
    46d0:	eor	w1, w1, w0
    46d4:	ldr	w0, [x19, #140]
    46d8:	and	w1, w1, w0
    46dc:	str	w1, [x19, #128]
    46e0:	ldr	x0, [x19, #120]
    46e4:	ldrh	w3, [x0, w1, uxtw #1]
    46e8:	ldr	w0, [x19, #88]
    46ec:	and	w0, w2, w0
    46f0:	ldr	x1, [x19, #112]
    46f4:	strh	w3, [x1, x0, lsl #1]
    46f8:	ldr	w1, [x19, #128]
    46fc:	ldr	x0, [x19, #120]
    4700:	strh	w2, [x0, x1, lsl #1]
    4704:	add	w2, w2, #0x1
    4708:	cmp	w2, w4
    470c:	b.ne	46b8 <deflateSetDictionary@@Base+0xac>  // b.any
    4710:	str	w4, [x19, #172]
    4714:	str	w21, [x19, #180]
    4718:	mov	x0, x19
    471c:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    4720:	ldr	w0, [x19, #180]
    4724:	cmp	w0, #0x2
    4728:	b.hi	46ac <deflateSetDictionary@@Base+0xa0>  // b.pmore
    472c:	ldr	w1, [x19, #172]
    4730:	add	w1, w0, w1
    4734:	str	w1, [x19, #172]
    4738:	mov	w1, w1
    473c:	str	x1, [x19, #152]
    4740:	str	w0, [x19, #5932]
    4744:	str	wzr, [x19, #180]
    4748:	mov	w0, #0x2                   	// #2
    474c:	str	w0, [x19, #184]
    4750:	str	w0, [x19, #160]
    4754:	str	wzr, [x19, #168]
    4758:	str	x24, [x20]
    475c:	str	w23, [x20, #8]
    4760:	str	w22, [x19, #48]
    4764:	mov	w0, #0x0                   	// #0
    4768:	ldp	x23, x24, [sp, #48]
    476c:	ldp	x19, x20, [sp, #16]
    4770:	ldp	x21, x22, [sp, #32]
    4774:	ldr	x25, [sp, #64]
    4778:	ldp	x29, x30, [sp], #80
    477c:	ret
    4780:	ldr	w0, [x19, #8]
    4784:	cmp	w0, #0x2a
    4788:	b.ne	480c <deflateSetDictionary@@Base+0x200>  // b.any
    478c:	ldr	w1, [x19, #180]
    4790:	mov	w0, #0xfffffffe            	// #-2
    4794:	cbnz	w1, 476c <deflateSetDictionary@@Base+0x160>
    4798:	stp	x23, x24, [sp, #48]
    479c:	mov	w2, w21
    47a0:	mov	x1, x25
    47a4:	ldr	x0, [x20, #96]
    47a8:	bl	2560 <adler32@plt>
    47ac:	str	x0, [x20, #96]
    47b0:	str	wzr, [x19, #48]
    47b4:	ldr	w0, [x19, #80]
    47b8:	cmp	w21, w0
    47bc:	b.cs	4674 <deflateSetDictionary@@Base+0x68>  // b.hs, b.nlast
    47c0:	b	4684 <deflateSetDictionary@@Base+0x78>
    47c4:	ldr	w0, [x19, #132]
    47c8:	sub	w0, w0, #0x1
    47cc:	ldr	x1, [x19, #120]
    47d0:	strh	wzr, [x1, x0, lsl #1]
    47d4:	ldr	w2, [x19, #132]
    47d8:	sub	w2, w2, #0x1
    47dc:	lsl	x2, x2, #1
    47e0:	mov	w1, #0x0                   	// #0
    47e4:	ldr	x0, [x19, #120]
    47e8:	bl	24a0 <memset@plt>
    47ec:	str	wzr, [x19, #172]
    47f0:	str	xzr, [x19, #152]
    47f4:	str	wzr, [x19, #5932]
    47f8:	b	4674 <deflateSetDictionary@@Base+0x68>
    47fc:	mov	w0, #0xfffffffe            	// #-2
    4800:	b	476c <deflateSetDictionary@@Base+0x160>
    4804:	mov	w0, #0xfffffffe            	// #-2
    4808:	b	476c <deflateSetDictionary@@Base+0x160>
    480c:	mov	w0, #0xfffffffe            	// #-2
    4810:	b	476c <deflateSetDictionary@@Base+0x160>
    4814:	mov	w0, #0xfffffffe            	// #-2
    4818:	b	476c <deflateSetDictionary@@Base+0x160>

000000000000481c <deflateGetDictionary@@ZLIB_1.2.9>:
    481c:	stp	x29, x30, [sp, #-48]!
    4820:	mov	x29, sp
    4824:	stp	x19, x20, [sp, #16]
    4828:	stp	x21, x22, [sp, #32]
    482c:	mov	x19, x0
    4830:	mov	x22, x1
    4834:	mov	x21, x2
    4838:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    483c:	cbnz	w0, 48ac <deflateGetDictionary@@ZLIB_1.2.9+0x90>
    4840:	mov	w20, w0
    4844:	ldr	x0, [x19, #56]
    4848:	ldr	w1, [x0, #172]
    484c:	ldr	w3, [x0, #180]
    4850:	add	w2, w1, w3
    4854:	ldr	w19, [x0, #80]
    4858:	cmp	w19, w2
    485c:	csel	w19, w19, w2, ls  // ls = plast
    4860:	cmp	x22, #0x0
    4864:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    4868:	b.ne	4888 <deflateGetDictionary@@ZLIB_1.2.9+0x6c>  // b.any
    486c:	cbz	x21, 4874 <deflateGetDictionary@@ZLIB_1.2.9+0x58>
    4870:	str	w19, [x21]
    4874:	mov	w0, w20
    4878:	ldp	x19, x20, [sp, #16]
    487c:	ldp	x21, x22, [sp, #32]
    4880:	ldp	x29, x30, [sp], #48
    4884:	ret
    4888:	mov	w2, w19
    488c:	mov	w3, w3
    4890:	add	x1, x3, w1, uxtw
    4894:	sub	x1, x1, x2
    4898:	ldr	x0, [x0, #96]
    489c:	add	x1, x0, x1
    48a0:	mov	x0, x22
    48a4:	bl	23a0 <memcpy@plt>
    48a8:	b	486c <deflateGetDictionary@@ZLIB_1.2.9+0x50>
    48ac:	mov	w20, #0xfffffffe            	// #-2
    48b0:	b	4874 <deflateGetDictionary@@ZLIB_1.2.9+0x58>

00000000000048b4 <deflateResetKeep@@ZLIB_1.2.5.2>:
    48b4:	stp	x29, x30, [sp, #-48]!
    48b8:	mov	x29, sp
    48bc:	stp	x19, x20, [sp, #16]
    48c0:	str	x21, [sp, #32]
    48c4:	mov	x19, x0
    48c8:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    48cc:	cbnz	w0, 4984 <deflateResetKeep@@ZLIB_1.2.5.2+0xd0>
    48d0:	mov	w21, w0
    48d4:	str	xzr, [x19, #40]
    48d8:	str	xzr, [x19, #16]
    48dc:	str	xzr, [x19, #48]
    48e0:	mov	w0, #0x2                   	// #2
    48e4:	str	w0, [x19, #88]
    48e8:	ldr	x20, [x19, #56]
    48ec:	str	xzr, [x20, #40]
    48f0:	ldr	x0, [x20, #16]
    48f4:	str	x0, [x20, #32]
    48f8:	ldr	w0, [x20, #48]
    48fc:	tbnz	w0, #31, 4954 <deflateResetKeep@@ZLIB_1.2.5.2+0xa0>
    4900:	ldr	w0, [x20, #48]
    4904:	cmp	w0, #0x2
    4908:	b.eq	4968 <deflateResetKeep@@ZLIB_1.2.5.2+0xb4>  // b.none
    490c:	cmp	w0, #0x0
    4910:	mov	w1, #0x2a                  	// #42
    4914:	mov	w0, #0x71                  	// #113
    4918:	csel	w1, w1, w0, ne  // ne = any
    491c:	str	w1, [x20, #8]
    4920:	mov	w2, #0x0                   	// #0
    4924:	mov	x1, #0x0                   	// #0
    4928:	mov	x0, #0x0                   	// #0
    492c:	bl	2560 <adler32@plt>
    4930:	str	x0, [x19, #96]
    4934:	str	wzr, [x20, #76]
    4938:	mov	x0, x20
    493c:	bl	b8dc <inflateCodesUsed@@ZLIB_1.2.9+0x17fc>
    4940:	mov	w0, w21
    4944:	ldp	x19, x20, [sp, #16]
    4948:	ldr	x21, [sp, #32]
    494c:	ldp	x29, x30, [sp], #48
    4950:	ret
    4954:	neg	w0, w0
    4958:	str	w0, [x20, #48]
    495c:	mov	w1, #0x2a                  	// #42
    4960:	cmp	w0, #0x2
    4964:	b.ne	491c <deflateResetKeep@@ZLIB_1.2.5.2+0x68>  // b.any
    4968:	mov	w0, #0x39                  	// #57
    496c:	str	w0, [x20, #8]
    4970:	mov	w2, #0x0                   	// #0
    4974:	mov	x1, #0x0                   	// #0
    4978:	mov	x0, #0x0                   	// #0
    497c:	bl	2430 <crc32@plt>
    4980:	b	4930 <deflateResetKeep@@ZLIB_1.2.5.2+0x7c>
    4984:	mov	w21, #0xfffffffe            	// #-2
    4988:	b	4940 <deflateResetKeep@@ZLIB_1.2.5.2+0x8c>

000000000000498c <deflateReset@@Base>:
    498c:	stp	x29, x30, [sp, #-32]!
    4990:	mov	x29, sp
    4994:	stp	x19, x20, [sp, #16]
    4998:	mov	x19, x0
    499c:	bl	2630 <deflateResetKeep@plt>
    49a0:	mov	w20, w0
    49a4:	cbz	w0, 49b8 <deflateReset@@Base+0x2c>
    49a8:	mov	w0, w20
    49ac:	ldp	x19, x20, [sp, #16]
    49b0:	ldp	x29, x30, [sp], #32
    49b4:	ret
    49b8:	ldr	x19, [x19, #56]
    49bc:	ldr	w0, [x19, #80]
    49c0:	lsl	x0, x0, #1
    49c4:	str	x0, [x19, #104]
    49c8:	ldr	w0, [x19, #132]
    49cc:	sub	w0, w0, #0x1
    49d0:	ldr	x1, [x19, #120]
    49d4:	strh	wzr, [x1, x0, lsl #1]
    49d8:	ldr	w2, [x19, #132]
    49dc:	sub	w2, w2, #0x1
    49e0:	lsl	x2, x2, #1
    49e4:	mov	w1, #0x0                   	// #0
    49e8:	ldr	x0, [x19, #120]
    49ec:	bl	24a0 <memset@plt>
    49f0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    49f4:	add	x1, x1, #0xc68
    49f8:	ldrsw	x0, [x19, #196]
    49fc:	lsl	x0, x0, #4
    4a00:	add	x2, x1, x0
    4a04:	ldrh	w3, [x2, #2]
    4a08:	str	w3, [x19, #192]
    4a0c:	ldrh	w0, [x1, x0]
    4a10:	str	w0, [x19, #204]
    4a14:	ldrh	w0, [x2, #4]
    4a18:	str	w0, [x19, #208]
    4a1c:	ldrh	w0, [x2, #6]
    4a20:	str	w0, [x19, #188]
    4a24:	str	wzr, [x19, #172]
    4a28:	str	xzr, [x19, #152]
    4a2c:	str	wzr, [x19, #180]
    4a30:	str	wzr, [x19, #5932]
    4a34:	mov	w0, #0x2                   	// #2
    4a38:	str	w0, [x19, #184]
    4a3c:	str	w0, [x19, #160]
    4a40:	str	wzr, [x19, #168]
    4a44:	str	wzr, [x19, #128]
    4a48:	b	49a8 <deflateReset@@Base+0x1c>

0000000000004a4c <deflateSetHeader@@ZLIB_1.2.2>:
    4a4c:	stp	x29, x30, [sp, #-32]!
    4a50:	mov	x29, sp
    4a54:	stp	x19, x20, [sp, #16]
    4a58:	mov	x19, x0
    4a5c:	mov	x20, x1
    4a60:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    4a64:	cbnz	w0, 4a88 <deflateSetHeader@@ZLIB_1.2.2+0x3c>
    4a68:	ldr	x1, [x19, #56]
    4a6c:	ldr	w2, [x1, #48]
    4a70:	cmp	w2, #0x2
    4a74:	b.ne	4a90 <deflateSetHeader@@ZLIB_1.2.2+0x44>  // b.any
    4a78:	str	x20, [x1, #56]
    4a7c:	ldp	x19, x20, [sp, #16]
    4a80:	ldp	x29, x30, [sp], #32
    4a84:	ret
    4a88:	mov	w0, #0xfffffffe            	// #-2
    4a8c:	b	4a7c <deflateSetHeader@@ZLIB_1.2.2+0x30>
    4a90:	mov	w0, #0xfffffffe            	// #-2
    4a94:	b	4a7c <deflateSetHeader@@ZLIB_1.2.2+0x30>

0000000000004a98 <deflatePending@@ZLIB_1.2.5.1>:
    4a98:	stp	x29, x30, [sp, #-48]!
    4a9c:	mov	x29, sp
    4aa0:	stp	x19, x20, [sp, #16]
    4aa4:	str	x21, [sp, #32]
    4aa8:	mov	x21, x0
    4aac:	mov	x20, x1
    4ab0:	mov	x19, x2
    4ab4:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    4ab8:	cbnz	w0, 4aec <deflatePending@@ZLIB_1.2.5.1+0x54>
    4abc:	cbz	x20, 4acc <deflatePending@@ZLIB_1.2.5.1+0x34>
    4ac0:	ldr	x1, [x21, #56]
    4ac4:	ldr	x1, [x1, #40]
    4ac8:	str	w1, [x20]
    4acc:	cbz	x19, 4adc <deflatePending@@ZLIB_1.2.5.1+0x44>
    4ad0:	ldr	x1, [x21, #56]
    4ad4:	ldr	w1, [x1, #5940]
    4ad8:	str	w1, [x19]
    4adc:	ldp	x19, x20, [sp, #16]
    4ae0:	ldr	x21, [sp, #32]
    4ae4:	ldp	x29, x30, [sp], #48
    4ae8:	ret
    4aec:	mov	w0, #0xfffffffe            	// #-2
    4af0:	b	4adc <deflatePending@@ZLIB_1.2.5.1+0x44>

0000000000004af4 <deflatePrime@@ZLIB_1.2.0.8>:
    4af4:	stp	x29, x30, [sp, #-64]!
    4af8:	mov	x29, sp
    4afc:	stp	x19, x20, [sp, #16]
    4b00:	stp	x21, x22, [sp, #32]
    4b04:	mov	x19, x0
    4b08:	mov	w20, w1
    4b0c:	mov	w22, w2
    4b10:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    4b14:	cbnz	w0, 4b9c <deflatePrime@@ZLIB_1.2.0.8+0xa8>
    4b18:	ldr	x21, [x19, #56]
    4b1c:	ldr	x0, [x21, #32]
    4b20:	add	x0, x0, #0x2
    4b24:	ldr	x1, [x21, #5904]
    4b28:	cmp	x1, x0
    4b2c:	b.cc	4ba4 <deflatePrime@@ZLIB_1.2.0.8+0xb0>  // b.lo, b.ul, b.last
    4b30:	stp	x23, x24, [sp, #48]
    4b34:	mov	w24, #0x10                  	// #16
    4b38:	mov	w23, #0x1                   	// #1
    4b3c:	ldr	w1, [x21, #5940]
    4b40:	sub	w19, w24, w1
    4b44:	cmp	w20, w19
    4b48:	csel	w19, w20, w19, le
    4b4c:	lsl	w0, w23, w19
    4b50:	sub	w0, w0, #0x1
    4b54:	and	w0, w0, w22
    4b58:	lsl	w0, w0, w1
    4b5c:	ldrh	w2, [x21, #5936]
    4b60:	orr	w0, w0, w2
    4b64:	strh	w0, [x21, #5936]
    4b68:	add	w1, w1, w19
    4b6c:	str	w1, [x21, #5940]
    4b70:	mov	x0, x21
    4b74:	bl	ba78 <inflateCodesUsed@@ZLIB_1.2.9+0x1998>
    4b78:	asr	w22, w22, w19
    4b7c:	subs	w20, w20, w19
    4b80:	b.ne	4b3c <deflatePrime@@ZLIB_1.2.0.8+0x48>  // b.any
    4b84:	ldp	x23, x24, [sp, #48]
    4b88:	mov	w0, w20
    4b8c:	ldp	x19, x20, [sp, #16]
    4b90:	ldp	x21, x22, [sp, #32]
    4b94:	ldp	x29, x30, [sp], #64
    4b98:	ret
    4b9c:	mov	w20, #0xfffffffe            	// #-2
    4ba0:	b	4b88 <deflatePrime@@ZLIB_1.2.0.8+0x94>
    4ba4:	mov	w20, #0xfffffffb            	// #-5
    4ba8:	b	4b88 <deflatePrime@@ZLIB_1.2.0.8+0x94>

0000000000004bac <deflateTune@@ZLIB_1.2.2.3>:
    4bac:	stp	x29, x30, [sp, #-64]!
    4bb0:	mov	x29, sp
    4bb4:	stp	x19, x20, [sp, #16]
    4bb8:	stp	x21, x22, [sp, #32]
    4bbc:	str	x23, [sp, #48]
    4bc0:	mov	x23, x0
    4bc4:	mov	w22, w1
    4bc8:	mov	w21, w2
    4bcc:	mov	w20, w3
    4bd0:	mov	w19, w4
    4bd4:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    4bd8:	cbnz	w0, 4c04 <deflateTune@@ZLIB_1.2.2.3+0x58>
    4bdc:	ldr	x5, [x23, #56]
    4be0:	str	w22, [x5, #204]
    4be4:	str	w21, [x5, #192]
    4be8:	str	w20, [x5, #208]
    4bec:	str	w19, [x5, #188]
    4bf0:	ldp	x19, x20, [sp, #16]
    4bf4:	ldp	x21, x22, [sp, #32]
    4bf8:	ldr	x23, [sp, #48]
    4bfc:	ldp	x29, x30, [sp], #64
    4c00:	ret
    4c04:	mov	w0, #0xfffffffe            	// #-2
    4c08:	b	4bf0 <deflateTune@@ZLIB_1.2.2.3+0x44>

0000000000004c0c <deflateBound@@ZLIB_1.2.0>:
    4c0c:	stp	x29, x30, [sp, #-48]!
    4c10:	mov	x29, sp
    4c14:	stp	x19, x20, [sp, #16]
    4c18:	stp	x21, x22, [sp, #32]
    4c1c:	mov	x22, x0
    4c20:	mov	x20, x1
    4c24:	add	x21, x1, #0x7
    4c28:	add	x3, x1, #0x3f
    4c2c:	lsr	x2, x21, #3
    4c30:	add	x3, x2, x3, lsr #6
    4c34:	add	x19, x3, x1
    4c38:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    4c3c:	cbnz	w0, 4c94 <deflateBound@@ZLIB_1.2.0+0x88>
    4c40:	ldr	x1, [x22, #56]
    4c44:	ldr	w0, [x1, #48]
    4c48:	cmp	w0, #0x1
    4c4c:	b.eq	4c9c <deflateBound@@ZLIB_1.2.0+0x90>  // b.none
    4c50:	cmp	w0, #0x2
    4c54:	b.eq	4cb4 <deflateBound@@ZLIB_1.2.0+0xa8>  // b.none
    4c58:	cmp	w0, #0x0
    4c5c:	mov	x2, #0x6                   	// #6
    4c60:	csel	x2, x2, xzr, ne  // ne = any
    4c64:	ldr	w0, [x1, #84]
    4c68:	cmp	w0, #0xf
    4c6c:	b.ne	4c7c <deflateBound@@ZLIB_1.2.0+0x70>  // b.any
    4c70:	ldr	w0, [x1, #136]
    4c74:	cmp	w0, #0xf
    4c78:	b.eq	4d28 <deflateBound@@ZLIB_1.2.0+0x11c>  // b.none
    4c7c:	add	x0, x19, #0x5
    4c80:	add	x0, x0, x2
    4c84:	ldp	x19, x20, [sp, #16]
    4c88:	ldp	x21, x22, [sp, #32]
    4c8c:	ldp	x29, x30, [sp], #48
    4c90:	ret
    4c94:	add	x0, x19, #0xb
    4c98:	b	4c84 <deflateBound@@ZLIB_1.2.0+0x78>
    4c9c:	ldr	w0, [x1, #172]
    4ca0:	cmp	w0, #0x0
    4ca4:	mov	x2, #0xa                   	// #10
    4ca8:	mov	x0, #0x6                   	// #6
    4cac:	csel	x2, x2, x0, ne  // ne = any
    4cb0:	b	4c64 <deflateBound@@ZLIB_1.2.0+0x58>
    4cb4:	ldr	x4, [x1, #56]
    4cb8:	mov	x2, #0x12                  	// #18
    4cbc:	cbz	x4, 4c64 <deflateBound@@ZLIB_1.2.0+0x58>
    4cc0:	ldr	x0, [x4, #24]
    4cc4:	cbz	x0, 4cd4 <deflateBound@@ZLIB_1.2.0+0xc8>
    4cc8:	ldr	w2, [x4, #32]
    4ccc:	add	w2, w2, #0x2
    4cd0:	add	x2, x2, #0x12
    4cd4:	ldr	x3, [x4, #40]
    4cd8:	mov	x0, x2
    4cdc:	cbz	x3, 4cf4 <deflateBound@@ZLIB_1.2.0+0xe8>
    4ce0:	mvn	x2, x2
    4ce4:	add	x3, x3, x2
    4ce8:	add	x0, x0, #0x1
    4cec:	ldrb	w2, [x3, x0]
    4cf0:	cbnz	w2, 4ce8 <deflateBound@@ZLIB_1.2.0+0xdc>
    4cf4:	ldr	x3, [x4, #56]
    4cf8:	mov	x2, x0
    4cfc:	cbz	x3, 4d14 <deflateBound@@ZLIB_1.2.0+0x108>
    4d00:	mvn	x0, x0
    4d04:	add	x0, x3, x0
    4d08:	add	x2, x2, #0x1
    4d0c:	ldrb	w3, [x0, x2]
    4d10:	cbnz	w3, 4d08 <deflateBound@@ZLIB_1.2.0+0xfc>
    4d14:	ldr	w3, [x4, #68]
    4d18:	add	x0, x2, #0x2
    4d1c:	cmp	w3, #0x0
    4d20:	csel	x2, x0, x2, ne  // ne = any
    4d24:	b	4c64 <deflateBound@@ZLIB_1.2.0+0x58>
    4d28:	lsr	x0, x20, #14
    4d2c:	add	x0, x0, x20, lsr #12
    4d30:	add	x0, x0, x21
    4d34:	add	x2, x2, x20, lsr #25
    4d38:	add	x0, x0, x2
    4d3c:	b	4c84 <deflateBound@@ZLIB_1.2.0+0x78>

0000000000004d40 <deflate@@Base>:
    4d40:	stp	x29, x30, [sp, #-96]!
    4d44:	mov	x29, sp
    4d48:	stp	x19, x20, [sp, #16]
    4d4c:	stp	x21, x22, [sp, #32]
    4d50:	stp	x23, x24, [sp, #48]
    4d54:	mov	x20, x0
    4d58:	mov	w22, w1
    4d5c:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    4d60:	cbnz	w0, 5c74 <deflate@@Base+0xf34>
    4d64:	mov	w23, w0
    4d68:	cmp	w22, #0x5
    4d6c:	b.hi	5c7c <deflate@@Base+0xf3c>  // b.pmore
    4d70:	ldr	x19, [x20, #56]
    4d74:	ldr	x0, [x20, #24]
    4d78:	cbz	x0, 4e24 <deflate@@Base+0xe4>
    4d7c:	ldr	w0, [x20, #8]
    4d80:	cbz	w0, 4d8c <deflate@@Base+0x4c>
    4d84:	ldr	x0, [x20]
    4d88:	cbz	x0, 4e24 <deflate@@Base+0xe4>
    4d8c:	ldr	w0, [x19, #8]
    4d90:	cmp	w22, #0x4
    4d94:	cset	w1, ne  // ne = any
    4d98:	cmp	w0, #0x29a
    4d9c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    4da0:	b.ne	4e24 <deflate@@Base+0xe4>  // b.any
    4da4:	ldr	w2, [x20, #32]
    4da8:	cbz	w2, 4e3c <deflate@@Base+0xfc>
    4dac:	ldr	w3, [x19, #76]
    4db0:	str	w22, [x19, #76]
    4db4:	ldr	x2, [x19, #40]
    4db8:	cbnz	x2, 4e54 <deflate@@Base+0x114>
    4dbc:	ldr	w2, [x20, #8]
    4dc0:	cbnz	w2, 5c8c <deflate@@Base+0xf4c>
    4dc4:	lsl	w0, w22, #1
    4dc8:	cmp	w22, #0x4
    4dcc:	mov	w2, #0x9                   	// #9
    4dd0:	csel	w2, w23, w2, le
    4dd4:	sub	w0, w0, w2
    4dd8:	lsl	w2, w3, #1
    4ddc:	cmp	w3, #0x4
    4de0:	mov	w3, #0x9                   	// #9
    4de4:	csel	w3, w23, w3, le
    4de8:	sub	w2, w2, w3
    4dec:	cmp	w1, #0x0
    4df0:	ccmp	w0, w2, #0x0, ne  // ne = any
    4df4:	b.le	4e70 <deflate@@Base+0x130>
    4df8:	ldr	w0, [x19, #8]
    4dfc:	cmp	w0, #0x29a
    4e00:	b.ne	5c94 <deflate@@Base+0xf54>  // b.any
    4e04:	ldr	w0, [x20, #8]
    4e08:	cbz	w0, 5d40 <deflate@@Base+0x1000>
    4e0c:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    4e10:	ldr	x0, [x0, #4056]
    4e14:	ldr	x0, [x0, #56]
    4e18:	str	x0, [x20, #48]
    4e1c:	mov	w23, #0xfffffffb            	// #-5
    4e20:	b	5ba4 <deflate@@Base+0xe64>
    4e24:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    4e28:	ldr	x0, [x0, #4056]
    4e2c:	ldr	x0, [x0, #32]
    4e30:	str	x0, [x20, #48]
    4e34:	mov	w23, #0xfffffffe            	// #-2
    4e38:	b	5ba4 <deflate@@Base+0xe64>
    4e3c:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    4e40:	ldr	x0, [x0, #4056]
    4e44:	ldr	x0, [x0, #56]
    4e48:	str	x0, [x20, #48]
    4e4c:	mov	w23, #0xfffffffb            	// #-5
    4e50:	b	5ba4 <deflate@@Base+0xe64>
    4e54:	mov	x0, x20
    4e58:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    4e5c:	ldr	w0, [x20, #32]
    4e60:	cbnz	w0, 4df8 <deflate@@Base+0xb8>
    4e64:	mov	w0, #0xffffffff            	// #-1
    4e68:	str	w0, [x19, #76]
    4e6c:	b	5ba4 <deflate@@Base+0xe64>
    4e70:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    4e74:	ldr	x0, [x0, #4056]
    4e78:	ldr	x0, [x0, #56]
    4e7c:	str	x0, [x20, #48]
    4e80:	mov	w23, #0xfffffffb            	// #-5
    4e84:	b	5ba4 <deflate@@Base+0xe64>
    4e88:	ldr	w2, [x19, #196]
    4e8c:	cmp	w2, #0x1
    4e90:	b.le	5cbc <deflate@@Base+0xf7c>
    4e94:	mov	w0, #0x1                   	// #1
    4e98:	cmp	w2, #0x5
    4e9c:	b.le	5cbc <deflate@@Base+0xf7c>
    4ea0:	cmp	w2, #0x6
    4ea4:	cset	w0, ne  // ne = any
    4ea8:	add	w0, w0, #0x2
    4eac:	b	5cbc <deflate@@Base+0xf7c>
    4eb0:	ldur	w1, [x20, #98]
    4eb4:	mov	x0, x19
    4eb8:	bl	3224 <crc32_combine64@@ZLIB_1.2.3.3+0x128>
    4ebc:	ldrh	w1, [x20, #96]
    4ec0:	mov	x0, x19
    4ec4:	bl	3224 <crc32_combine64@@ZLIB_1.2.3.3+0x128>
    4ec8:	b	5d08 <deflate@@Base+0xfc8>
    4ecc:	mov	w0, #0xffffffff            	// #-1
    4ed0:	str	w0, [x19, #76]
    4ed4:	b	5ba4 <deflate@@Base+0xe64>
    4ed8:	mov	w2, #0x0                   	// #0
    4edc:	mov	x1, #0x0                   	// #0
    4ee0:	mov	x0, #0x0                   	// #0
    4ee4:	bl	2430 <crc32@plt>
    4ee8:	str	x0, [x20, #96]
    4eec:	ldr	x1, [x19, #16]
    4ef0:	ldr	x0, [x19, #40]
    4ef4:	add	x2, x0, #0x1
    4ef8:	str	x2, [x19, #40]
    4efc:	mov	w2, #0x1f                  	// #31
    4f00:	strb	w2, [x1, x0]
    4f04:	ldr	x1, [x19, #16]
    4f08:	ldr	x0, [x19, #40]
    4f0c:	add	x2, x0, #0x1
    4f10:	str	x2, [x19, #40]
    4f14:	mov	w2, #0xffffff8b            	// #-117
    4f18:	strb	w2, [x1, x0]
    4f1c:	ldr	x1, [x19, #16]
    4f20:	ldr	x0, [x19, #40]
    4f24:	add	x2, x0, #0x1
    4f28:	str	x2, [x19, #40]
    4f2c:	mov	w2, #0x8                   	// #8
    4f30:	strb	w2, [x1, x0]
    4f34:	ldr	x0, [x19, #56]
    4f38:	cbz	x0, 510c <deflate@@Base+0x3cc>
    4f3c:	ldr	w1, [x0]
    4f40:	cmp	w1, #0x0
    4f44:	cset	w2, ne  // ne = any
    4f48:	ldr	w1, [x0, #68]
    4f4c:	cmp	w1, #0x0
    4f50:	cset	w1, ne  // ne = any
    4f54:	add	w1, w2, w1, lsl #1
    4f58:	ldr	x2, [x0, #24]
    4f5c:	cmp	x2, #0x0
    4f60:	cset	w2, ne  // ne = any
    4f64:	ldr	x3, [x0, #40]
    4f68:	cmp	x3, #0x0
    4f6c:	cset	w3, ne  // ne = any
    4f70:	lsl	w3, w3, #3
    4f74:	add	w2, w3, w2, lsl #2
    4f78:	add	w1, w1, w2
    4f7c:	ldr	x0, [x0, #56]
    4f80:	cmp	x0, #0x0
    4f84:	cset	w0, ne  // ne = any
    4f88:	ldr	x3, [x19, #16]
    4f8c:	ldr	x2, [x19, #40]
    4f90:	add	x4, x2, #0x1
    4f94:	str	x4, [x19, #40]
    4f98:	add	w1, w1, w0, lsl #4
    4f9c:	strb	w1, [x3, x2]
    4fa0:	ldr	x0, [x19, #56]
    4fa4:	ldr	x2, [x0, #8]
    4fa8:	ldr	x1, [x19, #16]
    4fac:	ldr	x0, [x19, #40]
    4fb0:	add	x3, x0, #0x1
    4fb4:	str	x3, [x19, #40]
    4fb8:	strb	w2, [x1, x0]
    4fbc:	ldr	x0, [x19, #56]
    4fc0:	ldr	x0, [x0, #8]
    4fc4:	lsr	x0, x0, #8
    4fc8:	ldr	x2, [x19, #16]
    4fcc:	ldr	x1, [x19, #40]
    4fd0:	add	x3, x1, #0x1
    4fd4:	str	x3, [x19, #40]
    4fd8:	strb	w0, [x2, x1]
    4fdc:	ldr	x0, [x19, #56]
    4fe0:	ldr	x0, [x0, #8]
    4fe4:	lsr	x0, x0, #16
    4fe8:	ldr	x2, [x19, #16]
    4fec:	ldr	x1, [x19, #40]
    4ff0:	add	x3, x1, #0x1
    4ff4:	str	x3, [x19, #40]
    4ff8:	strb	w0, [x2, x1]
    4ffc:	ldr	x0, [x19, #56]
    5000:	ldr	x0, [x0, #8]
    5004:	lsr	x0, x0, #24
    5008:	ldr	x2, [x19, #16]
    500c:	ldr	x1, [x19, #40]
    5010:	add	x3, x1, #0x1
    5014:	str	x3, [x19, #40]
    5018:	strb	w0, [x2, x1]
    501c:	ldr	w1, [x19, #196]
    5020:	mov	w0, #0x2                   	// #2
    5024:	cmp	w1, #0x9
    5028:	b.eq	5040 <deflate@@Base+0x300>  // b.none
    502c:	ldr	w0, [x19, #200]
    5030:	cmp	w0, #0x1
    5034:	ccmp	w1, #0x1, #0x4, le
    5038:	cset	w0, le
    503c:	lsl	w0, w0, #2
    5040:	ldr	x2, [x19, #16]
    5044:	ldr	x1, [x19, #40]
    5048:	add	x3, x1, #0x1
    504c:	str	x3, [x19, #40]
    5050:	strb	w0, [x2, x1]
    5054:	ldr	x0, [x19, #56]
    5058:	ldr	w2, [x0, #20]
    505c:	ldr	x1, [x19, #16]
    5060:	ldr	x0, [x19, #40]
    5064:	add	x3, x0, #0x1
    5068:	str	x3, [x19, #40]
    506c:	strb	w2, [x1, x0]
    5070:	ldr	x0, [x19, #56]
    5074:	ldr	x1, [x0, #24]
    5078:	cbz	x1, 50b4 <deflate@@Base+0x374>
    507c:	ldr	w2, [x0, #32]
    5080:	ldr	x1, [x19, #16]
    5084:	ldr	x0, [x19, #40]
    5088:	add	x3, x0, #0x1
    508c:	str	x3, [x19, #40]
    5090:	strb	w2, [x1, x0]
    5094:	ldr	x0, [x19, #56]
    5098:	ldr	w0, [x0, #32]
    509c:	lsr	w0, w0, #8
    50a0:	ldr	x2, [x19, #16]
    50a4:	ldr	x1, [x19, #40]
    50a8:	add	x3, x1, #0x1
    50ac:	str	x3, [x19, #40]
    50b0:	strb	w0, [x2, x1]
    50b4:	ldr	x0, [x19, #56]
    50b8:	ldr	w0, [x0, #68]
    50bc:	cbnz	w0, 51e4 <deflate@@Base+0x4a4>
    50c0:	str	xzr, [x19, #64]
    50c4:	mov	w0, #0x45                  	// #69
    50c8:	str	w0, [x19, #8]
    50cc:	ldr	x0, [x19, #56]
    50d0:	ldr	x1, [x0, #24]
    50d4:	cbz	x1, 52f8 <deflate@@Base+0x5b8>
    50d8:	stp	x25, x26, [sp, #64]
    50dc:	ldr	x21, [x19, #40]
    50e0:	ldrh	w25, [x0, #32]
    50e4:	ldr	x0, [x19, #64]
    50e8:	sub	w24, w25, w0
    50ec:	sub	w25, w25, w0
    50f0:	ldr	x2, [x19, #24]
    50f4:	add	x0, x21, x25
    50f8:	cmp	x0, x2
    50fc:	b.ls	52b0 <deflate@@Base+0x570>  // b.plast
    5100:	stp	x27, x28, [sp, #80]
    5104:	mov	x26, x21
    5108:	b	524c <deflate@@Base+0x50c>
    510c:	ldr	x1, [x19, #16]
    5110:	ldr	x0, [x19, #40]
    5114:	add	x2, x0, #0x1
    5118:	str	x2, [x19, #40]
    511c:	strb	wzr, [x1, x0]
    5120:	ldr	x1, [x19, #16]
    5124:	ldr	x0, [x19, #40]
    5128:	add	x2, x0, #0x1
    512c:	str	x2, [x19, #40]
    5130:	strb	wzr, [x1, x0]
    5134:	ldr	x1, [x19, #16]
    5138:	ldr	x0, [x19, #40]
    513c:	add	x2, x0, #0x1
    5140:	str	x2, [x19, #40]
    5144:	strb	wzr, [x1, x0]
    5148:	ldr	x1, [x19, #16]
    514c:	ldr	x0, [x19, #40]
    5150:	add	x2, x0, #0x1
    5154:	str	x2, [x19, #40]
    5158:	strb	wzr, [x1, x0]
    515c:	ldr	x1, [x19, #16]
    5160:	ldr	x0, [x19, #40]
    5164:	add	x2, x0, #0x1
    5168:	str	x2, [x19, #40]
    516c:	strb	wzr, [x1, x0]
    5170:	ldr	w1, [x19, #196]
    5174:	mov	w0, #0x2                   	// #2
    5178:	cmp	w1, #0x9
    517c:	b.eq	5194 <deflate@@Base+0x454>  // b.none
    5180:	ldr	w0, [x19, #200]
    5184:	cmp	w0, #0x1
    5188:	ccmp	w1, #0x1, #0x4, le
    518c:	cset	w0, le
    5190:	lsl	w0, w0, #2
    5194:	ldr	x2, [x19, #16]
    5198:	ldr	x1, [x19, #40]
    519c:	add	x3, x1, #0x1
    51a0:	str	x3, [x19, #40]
    51a4:	strb	w0, [x2, x1]
    51a8:	ldr	x1, [x19, #16]
    51ac:	ldr	x0, [x19, #40]
    51b0:	add	x2, x0, #0x1
    51b4:	str	x2, [x19, #40]
    51b8:	mov	w2, #0x3                   	// #3
    51bc:	strb	w2, [x1, x0]
    51c0:	mov	w0, #0x71                  	// #113
    51c4:	str	w0, [x19, #8]
    51c8:	mov	x0, x20
    51cc:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    51d0:	ldr	x0, [x19, #40]
    51d4:	cbz	x0, 5d40 <deflate@@Base+0x1000>
    51d8:	mov	w0, #0xffffffff            	// #-1
    51dc:	str	w0, [x19, #76]
    51e0:	b	5ba4 <deflate@@Base+0xe64>
    51e4:	ldr	w2, [x19, #40]
    51e8:	ldr	x1, [x19, #16]
    51ec:	ldr	x0, [x20, #96]
    51f0:	bl	2430 <crc32@plt>
    51f4:	str	x0, [x20, #96]
    51f8:	b	50c0 <deflate@@Base+0x380>
    51fc:	ldr	x1, [x19, #16]
    5200:	sub	w2, w2, w26
    5204:	add	x1, x1, x26
    5208:	ldr	x0, [x20, #96]
    520c:	bl	2430 <crc32@plt>
    5210:	str	x0, [x20, #96]
    5214:	ldr	x2, [x19, #64]
    5218:	add	x2, x2, x28
    521c:	str	x2, [x19, #64]
    5220:	mov	x0, x20
    5224:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5228:	ldr	x21, [x19, #40]
    522c:	cbnz	x21, 5298 <deflate@@Base+0x558>
    5230:	sub	w25, w25, w27
    5234:	add	w24, w24, w25
    5238:	mov	w25, w24
    523c:	ldr	x2, [x19, #24]
    5240:	cmp	x2, w24, uxtw
    5244:	b.cs	52ac <deflate@@Base+0x56c>  // b.hs, b.nlast
    5248:	mov	x26, x21
    524c:	mov	w27, w2
    5250:	mov	w25, w21
    5254:	sub	w28, w2, w21
    5258:	ldr	x0, [x19, #16]
    525c:	ldr	x1, [x19, #56]
    5260:	ldr	x3, [x1, #24]
    5264:	ldr	x1, [x19, #64]
    5268:	mov	x2, x28
    526c:	add	x1, x3, x1
    5270:	add	x0, x0, x21
    5274:	bl	23a0 <memcpy@plt>
    5278:	ldr	x2, [x19, #24]
    527c:	str	x2, [x19, #40]
    5280:	ldr	x0, [x19, #56]
    5284:	ldr	w0, [x0, #68]
    5288:	cmp	w0, #0x0
    528c:	ccmp	x2, x26, #0x0, ne  // ne = any
    5290:	b.ls	5214 <deflate@@Base+0x4d4>  // b.plast
    5294:	b	51fc <deflate@@Base+0x4bc>
    5298:	mov	w0, #0xffffffff            	// #-1
    529c:	str	w0, [x19, #76]
    52a0:	ldp	x25, x26, [sp, #64]
    52a4:	ldp	x27, x28, [sp, #80]
    52a8:	b	5ba4 <deflate@@Base+0xe64>
    52ac:	ldp	x27, x28, [sp, #80]
    52b0:	ldr	x0, [x19, #16]
    52b4:	ldr	x1, [x19, #56]
    52b8:	ldr	x3, [x1, #24]
    52bc:	ldr	x1, [x19, #64]
    52c0:	mov	x2, x25
    52c4:	add	x1, x3, x1
    52c8:	add	x0, x0, x21
    52cc:	bl	23a0 <memcpy@plt>
    52d0:	ldr	x2, [x19, #40]
    52d4:	add	x2, x25, x2
    52d8:	str	x2, [x19, #40]
    52dc:	ldr	x0, [x19, #56]
    52e0:	ldr	w0, [x0, #68]
    52e4:	cmp	w0, #0x0
    52e8:	ccmp	x2, x21, #0x0, ne  // ne = any
    52ec:	b.hi	5314 <deflate@@Base+0x5d4>  // b.pmore
    52f0:	str	xzr, [x19, #64]
    52f4:	ldp	x25, x26, [sp, #64]
    52f8:	mov	w0, #0x49                  	// #73
    52fc:	str	w0, [x19, #8]
    5300:	ldr	x0, [x19, #56]
    5304:	ldr	x0, [x0, #40]
    5308:	cbz	x0, 53d8 <deflate@@Base+0x698>
    530c:	ldr	x1, [x19, #40]
    5310:	b	5388 <deflate@@Base+0x648>
    5314:	ldr	x1, [x19, #16]
    5318:	sub	w2, w2, w21
    531c:	add	x1, x1, x21
    5320:	ldr	x0, [x20, #96]
    5324:	bl	2430 <crc32@plt>
    5328:	str	x0, [x20, #96]
    532c:	b	52f0 <deflate@@Base+0x5b0>
    5330:	ldr	x0, [x19, #16]
    5334:	sub	w2, w2, w1
    5338:	add	x1, x0, x1
    533c:	ldr	x0, [x20, #96]
    5340:	bl	2430 <crc32@plt>
    5344:	str	x0, [x20, #96]
    5348:	mov	x0, x20
    534c:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5350:	ldr	x1, [x19, #40]
    5354:	cbnz	x1, 53b0 <deflate@@Base+0x670>
    5358:	ldr	x0, [x19, #56]
    535c:	ldr	x2, [x0, #40]
    5360:	ldr	x0, [x19, #64]
    5364:	add	x3, x0, #0x1
    5368:	str	x3, [x19, #64]
    536c:	ldrb	w0, [x2, x0]
    5370:	ldr	x3, [x19, #16]
    5374:	ldr	x2, [x19, #40]
    5378:	add	x4, x2, #0x1
    537c:	str	x4, [x19, #40]
    5380:	strb	w0, [x3, x2]
    5384:	cbz	w0, 53bc <deflate@@Base+0x67c>
    5388:	ldr	x2, [x19, #40]
    538c:	ldr	x0, [x19, #24]
    5390:	cmp	x2, x0
    5394:	b.ne	5358 <deflate@@Base+0x618>  // b.any
    5398:	ldr	x0, [x19, #56]
    539c:	ldr	w0, [x0, #68]
    53a0:	cmp	w0, #0x0
    53a4:	ccmp	x2, x1, #0x0, ne  // ne = any
    53a8:	b.ls	5348 <deflate@@Base+0x608>  // b.plast
    53ac:	b	5330 <deflate@@Base+0x5f0>
    53b0:	mov	w0, #0xffffffff            	// #-1
    53b4:	str	w0, [x19, #76]
    53b8:	b	5ba4 <deflate@@Base+0xe64>
    53bc:	ldr	x0, [x19, #56]
    53c0:	ldr	w0, [x0, #68]
    53c4:	cbz	w0, 53d4 <deflate@@Base+0x694>
    53c8:	ldr	x2, [x19, #40]
    53cc:	cmp	x2, x1
    53d0:	b.hi	53f4 <deflate@@Base+0x6b4>  // b.pmore
    53d4:	str	xzr, [x19, #64]
    53d8:	mov	w0, #0x5b                  	// #91
    53dc:	str	w0, [x19, #8]
    53e0:	ldr	x0, [x19, #56]
    53e4:	ldr	x0, [x0, #56]
    53e8:	cbz	x0, 54b4 <deflate@@Base+0x774>
    53ec:	ldr	x1, [x19, #40]
    53f0:	b	5450 <deflate@@Base+0x710>
    53f4:	ldr	x0, [x19, #16]
    53f8:	sub	w2, w2, w1
    53fc:	add	x1, x0, x1
    5400:	ldr	x0, [x20, #96]
    5404:	bl	2430 <crc32@plt>
    5408:	str	x0, [x20, #96]
    540c:	b	53d4 <deflate@@Base+0x694>
    5410:	mov	x0, x20
    5414:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5418:	ldr	x1, [x19, #40]
    541c:	cbnz	x1, 5490 <deflate@@Base+0x750>
    5420:	ldr	x0, [x19, #56]
    5424:	ldr	x2, [x0, #56]
    5428:	ldr	x0, [x19, #64]
    542c:	add	x3, x0, #0x1
    5430:	str	x3, [x19, #64]
    5434:	ldrb	w0, [x2, x0]
    5438:	ldr	x3, [x19, #16]
    543c:	ldr	x2, [x19, #40]
    5440:	add	x4, x2, #0x1
    5444:	str	x4, [x19, #40]
    5448:	strb	w0, [x3, x2]
    544c:	cbz	w0, 549c <deflate@@Base+0x75c>
    5450:	ldr	x2, [x19, #40]
    5454:	ldr	x0, [x19, #24]
    5458:	cmp	x2, x0
    545c:	b.ne	5420 <deflate@@Base+0x6e0>  // b.any
    5460:	ldr	x0, [x19, #56]
    5464:	ldr	w0, [x0, #68]
    5468:	cmp	w0, #0x0
    546c:	ccmp	x2, x1, #0x0, ne  // ne = any
    5470:	b.ls	5410 <deflate@@Base+0x6d0>  // b.plast
    5474:	ldr	x0, [x19, #16]
    5478:	sub	w2, w2, w1
    547c:	add	x1, x0, x1
    5480:	ldr	x0, [x20, #96]
    5484:	bl	2430 <crc32@plt>
    5488:	str	x0, [x20, #96]
    548c:	b	5410 <deflate@@Base+0x6d0>
    5490:	mov	w0, #0xffffffff            	// #-1
    5494:	str	w0, [x19, #76]
    5498:	b	5ba4 <deflate@@Base+0xe64>
    549c:	ldr	x0, [x19, #56]
    54a0:	ldr	w0, [x0, #68]
    54a4:	cbz	w0, 54b4 <deflate@@Base+0x774>
    54a8:	ldr	x2, [x19, #40]
    54ac:	cmp	x2, x1
    54b0:	b.hi	5558 <deflate@@Base+0x818>  // b.pmore
    54b4:	mov	w0, #0x67                  	// #103
    54b8:	str	w0, [x19, #8]
    54bc:	ldr	x0, [x19, #56]
    54c0:	ldr	w0, [x0, #68]
    54c4:	cbz	w0, 5534 <deflate@@Base+0x7f4>
    54c8:	ldr	x0, [x19, #40]
    54cc:	add	x0, x0, #0x2
    54d0:	ldr	x1, [x19, #24]
    54d4:	cmp	x0, x1
    54d8:	b.ls	54ec <deflate@@Base+0x7ac>  // b.plast
    54dc:	mov	x0, x20
    54e0:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    54e4:	ldr	x0, [x19, #40]
    54e8:	cbnz	x0, 5574 <deflate@@Base+0x834>
    54ec:	ldr	x2, [x20, #96]
    54f0:	ldr	x1, [x19, #16]
    54f4:	ldr	x0, [x19, #40]
    54f8:	add	x3, x0, #0x1
    54fc:	str	x3, [x19, #40]
    5500:	strb	w2, [x1, x0]
    5504:	ldr	x0, [x20, #96]
    5508:	lsr	x0, x0, #8
    550c:	ldr	x2, [x19, #16]
    5510:	ldr	x1, [x19, #40]
    5514:	add	x3, x1, #0x1
    5518:	str	x3, [x19, #40]
    551c:	strb	w0, [x2, x1]
    5520:	mov	w2, #0x0                   	// #0
    5524:	mov	x1, #0x0                   	// #0
    5528:	mov	x0, #0x0                   	// #0
    552c:	bl	2430 <crc32@plt>
    5530:	str	x0, [x20, #96]
    5534:	mov	w0, #0x71                  	// #113
    5538:	str	w0, [x19, #8]
    553c:	mov	x0, x20
    5540:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5544:	ldr	x0, [x19, #40]
    5548:	cbz	x0, 5d64 <deflate@@Base+0x1024>
    554c:	mov	w0, #0xffffffff            	// #-1
    5550:	str	w0, [x19, #76]
    5554:	b	5ba4 <deflate@@Base+0xe64>
    5558:	ldr	x0, [x19, #16]
    555c:	sub	w2, w2, w1
    5560:	add	x1, x0, x1
    5564:	ldr	x0, [x20, #96]
    5568:	bl	2430 <crc32@plt>
    556c:	str	x0, [x20, #96]
    5570:	b	54b4 <deflate@@Base+0x774>
    5574:	mov	w0, #0xffffffff            	// #-1
    5578:	str	w0, [x19, #76]
    557c:	b	5ba4 <deflate@@Base+0xe64>
    5580:	mov	w1, w22
    5584:	mov	x0, x19
    5588:	bl	40d0 <crc32_combine64@@ZLIB_1.2.3.3+0xfd4>
    558c:	b	5dbc <deflate@@Base+0x107c>
    5590:	mov	x21, #0x0                   	// #0
    5594:	b	5604 <deflate@@Base+0x8c4>
    5598:	str	wzr, [x19, #160]
    559c:	ldr	w0, [x19, #172]
    55a0:	ldr	x1, [x19, #96]
    55a4:	ldrb	w2, [x1, x0]
    55a8:	ldr	w1, [x19, #5900]
    55ac:	ldr	x0, [x19, #5904]
    55b0:	strh	wzr, [x0, x1, lsl #1]
    55b4:	ldr	x1, [x19, #5888]
    55b8:	ldr	w0, [x19, #5900]
    55bc:	add	w3, w0, #0x1
    55c0:	str	w3, [x19, #5900]
    55c4:	strb	w2, [x1, w0, uxtw]
    55c8:	add	x2, x19, w2, uxtb #2
    55cc:	ldrh	w0, [x2, #212]
    55d0:	add	w0, w0, #0x1
    55d4:	strh	w0, [x2, #212]
    55d8:	ldr	w2, [x19, #5900]
    55dc:	ldr	w1, [x19, #5896]
    55e0:	sub	w1, w1, #0x1
    55e4:	ldr	w0, [x19, #180]
    55e8:	sub	w0, w0, #0x1
    55ec:	str	w0, [x19, #180]
    55f0:	ldr	w0, [x19, #172]
    55f4:	add	w0, w0, #0x1
    55f8:	str	w0, [x19, #172]
    55fc:	cmp	w2, w1
    5600:	b.eq	5680 <deflate@@Base+0x940>  // b.none
    5604:	ldr	w0, [x19, #180]
    5608:	cbnz	w0, 5598 <deflate@@Base+0x858>
    560c:	mov	x0, x19
    5610:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    5614:	ldr	w0, [x19, #180]
    5618:	cbnz	w0, 5598 <deflate@@Base+0x858>
    561c:	cbz	w22, 5bc0 <deflate@@Base+0xe80>
    5620:	str	wzr, [x19, #5932]
    5624:	cmp	w22, #0x4
    5628:	b.eq	56c8 <deflate@@Base+0x988>  // b.none
    562c:	ldr	w0, [x19, #5900]
    5630:	cbz	w0, 5dd8 <deflate@@Base+0x1098>
    5634:	ldr	x0, [x19, #152]
    5638:	mov	x1, #0x0                   	// #0
    563c:	tbnz	x0, #63, 5648 <deflate@@Base+0x908>
    5640:	ldr	x1, [x19, #96]
    5644:	add	x1, x1, w0, uxtw
    5648:	ldr	w2, [x19, #172]
    564c:	mov	w3, #0x0                   	// #0
    5650:	sub	x2, x2, x0
    5654:	mov	x0, x19
    5658:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    565c:	ldr	w0, [x19, #172]
    5660:	str	x0, [x19, #152]
    5664:	ldr	x0, [x19]
    5668:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    566c:	ldr	x0, [x19]
    5670:	ldr	w0, [x0, #32]
    5674:	cmp	w0, #0x0
    5678:	cset	w0, ne  // ne = any
    567c:	b	5dc8 <deflate@@Base+0x1088>
    5680:	ldr	x2, [x19, #152]
    5684:	mov	x1, x21
    5688:	tbnz	x2, #63, 5694 <deflate@@Base+0x954>
    568c:	ldr	x1, [x19, #96]
    5690:	add	x1, x1, w2, uxtw
    5694:	mov	w0, w0
    5698:	mov	w3, #0x0                   	// #0
    569c:	sub	x2, x0, x2
    56a0:	mov	x0, x19
    56a4:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    56a8:	ldr	w0, [x19, #172]
    56ac:	str	x0, [x19, #152]
    56b0:	ldr	x0, [x19]
    56b4:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    56b8:	ldr	x0, [x19]
    56bc:	ldr	w0, [x0, #32]
    56c0:	cbnz	w0, 5604 <deflate@@Base+0x8c4>
    56c4:	b	5bc0 <deflate@@Base+0xe80>
    56c8:	ldr	x0, [x19, #152]
    56cc:	mov	x1, #0x0                   	// #0
    56d0:	tbnz	x0, #63, 56dc <deflate@@Base+0x99c>
    56d4:	ldr	x1, [x19, #96]
    56d8:	add	x1, x1, w0, uxtw
    56dc:	ldr	w2, [x19, #172]
    56e0:	mov	w3, #0x1                   	// #1
    56e4:	sub	x2, x2, x0
    56e8:	mov	x0, x19
    56ec:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    56f0:	ldr	w0, [x19, #172]
    56f4:	str	x0, [x19, #152]
    56f8:	ldr	x0, [x19]
    56fc:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5700:	ldr	x0, [x19]
    5704:	ldr	w0, [x0, #32]
    5708:	cbz	w0, 5e08 <deflate@@Base+0x10c8>
    570c:	mov	w0, #0x29a                 	// #666
    5710:	str	w0, [x19, #8]
    5714:	b	5a84 <deflate@@Base+0xd44>
    5718:	stp	x25, x26, [sp, #64]
    571c:	adrp	x24, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    5720:	add	x24, x24, #0xf20
    5724:	adrp	x21, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    5728:	add	x21, x21, #0x110
    572c:	b	5a18 <deflate@@Base+0xcd8>
    5730:	mov	x0, x19
    5734:	bl	34e8 <crc32_combine64@@ZLIB_1.2.3.3+0x3ec>
    5738:	ldr	w0, [x19, #180]
    573c:	cmp	w0, #0x102
    5740:	ccmp	w22, #0x0, #0x0, ls  // ls = plast
    5744:	b.eq	5bbc <deflate@@Base+0xe7c>  // b.none
    5748:	cbnz	w0, 5930 <deflate@@Base+0xbf0>
    574c:	str	wzr, [x19, #5932]
    5750:	cmp	w22, #0x4
    5754:	b.eq	5a28 <deflate@@Base+0xce8>  // b.none
    5758:	ldr	w0, [x19, #5900]
    575c:	cbz	w0, 5bd4 <deflate@@Base+0xe94>
    5760:	ldr	x0, [x19, #152]
    5764:	mov	x1, #0x0                   	// #0
    5768:	tbnz	x0, #63, 5774 <deflate@@Base+0xa34>
    576c:	ldr	x1, [x19, #96]
    5770:	add	x1, x1, w0, uxtw
    5774:	ldr	w2, [x19, #172]
    5778:	mov	w3, #0x0                   	// #0
    577c:	sub	x2, x2, x0
    5780:	mov	x0, x19
    5784:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    5788:	ldr	w0, [x19, #172]
    578c:	str	x0, [x19, #152]
    5790:	ldr	x0, [x19]
    5794:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5798:	ldr	x0, [x19]
    579c:	ldr	w0, [x0, #32]
    57a0:	cmp	w0, #0x0
    57a4:	cset	w0, ne  // ne = any
    57a8:	ldp	x25, x26, [sp, #64]
    57ac:	b	5dc8 <deflate@@Base+0x1088>
    57b0:	ldrb	w5, [x3, #2]
    57b4:	cmp	w5, w4
    57b8:	b.ne	5968 <deflate@@Base+0xc28>  // b.any
    57bc:	ldrb	w5, [x3, #3]
    57c0:	cmp	w5, w4
    57c4:	b.ne	5968 <deflate@@Base+0xc28>  // b.any
    57c8:	add	x3, x3, #0x3
    57cc:	add	x2, x2, #0x102
    57d0:	add	x0, x0, x2
    57d4:	ldrb	w2, [x3, #1]
    57d8:	cmp	w2, w4
    57dc:	b.ne	5888 <deflate@@Base+0xb48>  // b.any
    57e0:	ldrb	w2, [x3, #2]
    57e4:	cmp	w2, w4
    57e8:	b.ne	5858 <deflate@@Base+0xb18>  // b.any
    57ec:	ldrb	w2, [x3, #3]
    57f0:	cmp	w2, w4
    57f4:	b.ne	5860 <deflate@@Base+0xb20>  // b.any
    57f8:	ldrb	w2, [x3, #4]
    57fc:	cmp	w2, w4
    5800:	b.ne	5868 <deflate@@Base+0xb28>  // b.any
    5804:	ldrb	w2, [x3, #5]
    5808:	cmp	w2, w4
    580c:	b.ne	5870 <deflate@@Base+0xb30>  // b.any
    5810:	ldrb	w2, [x3, #6]
    5814:	cmp	w2, w4
    5818:	b.ne	5878 <deflate@@Base+0xb38>  // b.any
    581c:	ldrb	w2, [x3, #7]
    5820:	cmp	w2, w4
    5824:	b.ne	5880 <deflate@@Base+0xb40>  // b.any
    5828:	ldrb	w2, [x3, #8]!
    582c:	cmp	w2, w4
    5830:	ccmp	x0, x3, #0x0, eq  // eq = none
    5834:	b.hi	57d4 <deflate@@Base+0xa94>  // b.pmore
    5838:	sub	x0, x0, x3
    583c:	sub	w0, w25, w0
    5840:	str	w0, [x19, #160]
    5844:	cmp	w1, w0
    5848:	b.cs	5890 <deflate@@Base+0xb50>  // b.hs, b.nlast
    584c:	str	w1, [x19, #160]
    5850:	mov	w0, w1
    5854:	b	5898 <deflate@@Base+0xb58>
    5858:	add	x3, x3, #0x2
    585c:	b	5838 <deflate@@Base+0xaf8>
    5860:	add	x3, x3, #0x3
    5864:	b	5838 <deflate@@Base+0xaf8>
    5868:	add	x3, x3, #0x4
    586c:	b	5838 <deflate@@Base+0xaf8>
    5870:	add	x3, x3, #0x5
    5874:	b	5838 <deflate@@Base+0xaf8>
    5878:	add	x3, x3, #0x6
    587c:	b	5838 <deflate@@Base+0xaf8>
    5880:	add	x3, x3, #0x7
    5884:	b	5838 <deflate@@Base+0xaf8>
    5888:	add	x3, x3, #0x1
    588c:	b	5838 <deflate@@Base+0xaf8>
    5890:	cmp	w0, #0x2
    5894:	b.ls	5968 <deflate@@Base+0xc28>  // b.plast
    5898:	sub	w0, w0, #0x3
    589c:	and	w0, w0, #0xff
    58a0:	ldr	w2, [x19, #5900]
    58a4:	ldr	x1, [x19, #5904]
    58a8:	mov	w3, #0x1                   	// #1
    58ac:	strh	w3, [x1, x2, lsl #1]
    58b0:	ldr	x2, [x19, #5888]
    58b4:	ldr	w1, [x19, #5900]
    58b8:	add	w3, w1, #0x1
    58bc:	str	w3, [x19, #5900]
    58c0:	strb	w0, [x2, w1, uxtw]
    58c4:	ldrb	w0, [x24, w0, sxtw]
    58c8:	add	x0, x19, x0, lsl #2
    58cc:	ldrh	w1, [x0, #1240]
    58d0:	add	w1, w1, #0x1
    58d4:	strh	w1, [x0, #1240]
    58d8:	ldrb	w0, [x21]
    58dc:	add	x0, x19, x0, lsl #2
    58e0:	ldrh	w1, [x0, #2504]
    58e4:	add	w1, w1, #0x1
    58e8:	strh	w1, [x0, #2504]
    58ec:	ldr	w0, [x19, #5896]
    58f0:	sub	w0, w0, #0x1
    58f4:	ldr	w1, [x19, #5900]
    58f8:	cmp	w0, w1
    58fc:	cset	w2, eq  // eq = none
    5900:	ldr	w3, [x19, #160]
    5904:	ldr	w1, [x19, #180]
    5908:	sub	w1, w1, w3
    590c:	str	w1, [x19, #180]
    5910:	ldr	w0, [x19, #172]
    5914:	add	w0, w0, w3
    5918:	str	w0, [x19, #172]
    591c:	str	wzr, [x19, #160]
    5920:	cbnz	w2, 59d4 <deflate@@Base+0xc94>
    5924:	ldr	w0, [x19, #180]
    5928:	cmp	w0, #0x102
    592c:	b.ls	5730 <deflate@@Base+0x9f0>  // b.plast
    5930:	str	wzr, [x19, #160]
    5934:	ldr	w1, [x19, #180]
    5938:	cmp	w1, #0x2
    593c:	b.ls	5968 <deflate@@Base+0xc28>  // b.plast
    5940:	ldr	w2, [x19, #172]
    5944:	cbz	w2, 5968 <deflate@@Base+0xc28>
    5948:	ldr	x0, [x19, #96]
    594c:	mov	w2, w2
    5950:	sub	x4, x2, #0x1
    5954:	add	x3, x0, x4
    5958:	ldrb	w4, [x0, x4]
    595c:	ldrb	w5, [x3, #1]
    5960:	cmp	w5, w4
    5964:	b.eq	57b0 <deflate@@Base+0xa70>  // b.none
    5968:	ldr	w0, [x19, #172]
    596c:	ldr	x1, [x19, #96]
    5970:	ldrb	w0, [x1, x0]
    5974:	ldr	w2, [x19, #5900]
    5978:	ldr	x1, [x19, #5904]
    597c:	strh	wzr, [x1, x2, lsl #1]
    5980:	ldr	x2, [x19, #5888]
    5984:	ldr	w1, [x19, #5900]
    5988:	add	w3, w1, #0x1
    598c:	str	w3, [x19, #5900]
    5990:	strb	w0, [x2, w1, uxtw]
    5994:	add	x0, x19, w0, uxtb #2
    5998:	ldrh	w1, [x0, #212]
    599c:	add	w1, w1, #0x1
    59a0:	strh	w1, [x0, #212]
    59a4:	ldr	w0, [x19, #5896]
    59a8:	sub	w0, w0, #0x1
    59ac:	ldr	w1, [x19, #5900]
    59b0:	cmp	w0, w1
    59b4:	cset	w2, eq  // eq = none
    59b8:	ldr	w0, [x19, #180]
    59bc:	sub	w0, w0, #0x1
    59c0:	str	w0, [x19, #180]
    59c4:	ldr	w0, [x19, #172]
    59c8:	add	w0, w0, #0x1
    59cc:	str	w0, [x19, #172]
    59d0:	b	5920 <deflate@@Base+0xbe0>
    59d4:	ldr	x0, [x19, #152]
    59d8:	mov	x1, #0x0                   	// #0
    59dc:	tbnz	x0, #63, 59e8 <deflate@@Base+0xca8>
    59e0:	ldr	x1, [x19, #96]
    59e4:	add	x1, x1, w0, uxtw
    59e8:	ldr	w2, [x19, #172]
    59ec:	mov	w3, #0x0                   	// #0
    59f0:	sub	x2, x2, x0
    59f4:	mov	x0, x19
    59f8:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    59fc:	ldr	w0, [x19, #172]
    5a00:	str	x0, [x19, #152]
    5a04:	ldr	x0, [x19]
    5a08:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5a0c:	ldr	x0, [x19]
    5a10:	ldr	w0, [x0, #32]
    5a14:	cbz	w0, 5a20 <deflate@@Base+0xce0>
    5a18:	mov	w25, #0x102                 	// #258
    5a1c:	b	5924 <deflate@@Base+0xbe4>
    5a20:	ldp	x25, x26, [sp, #64]
    5a24:	b	5bc0 <deflate@@Base+0xe80>
    5a28:	ldr	x0, [x19, #152]
    5a2c:	mov	x1, #0x0                   	// #0
    5a30:	tbnz	x0, #63, 5a3c <deflate@@Base+0xcfc>
    5a34:	ldr	x1, [x19, #96]
    5a38:	add	x1, x1, w0, uxtw
    5a3c:	ldr	w2, [x19, #172]
    5a40:	mov	w3, #0x1                   	// #1
    5a44:	sub	x2, x2, x0
    5a48:	mov	x0, x19
    5a4c:	bl	bb8c <inflateCodesUsed@@ZLIB_1.2.9+0x1aac>
    5a50:	ldr	w0, [x19, #172]
    5a54:	str	x0, [x19, #152]
    5a58:	ldr	x0, [x19]
    5a5c:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5a60:	ldr	x0, [x19]
    5a64:	ldr	w0, [x0, #32]
    5a68:	cbz	w0, 5e04 <deflate@@Base+0x10c4>
    5a6c:	ldp	x25, x26, [sp, #64]
    5a70:	b	570c <deflate@@Base+0x9cc>
    5a74:	mov	w1, #0x29a                 	// #666
    5a78:	str	w1, [x19, #8]
    5a7c:	tst	w0, #0xfffffffd
    5a80:	b.eq	5bc0 <deflate@@Base+0xe80>  // b.none
    5a84:	cmp	w22, #0x4
    5a88:	b.ne	5ba4 <deflate@@Base+0xe64>  // b.any
    5a8c:	ldr	w0, [x19, #48]
    5a90:	mov	w23, #0x1                   	// #1
    5a94:	cmp	w0, #0x0
    5a98:	b.le	5ba4 <deflate@@Base+0xe64>
    5a9c:	cmp	w0, #0x2
    5aa0:	b.ne	5c58 <deflate@@Base+0xf18>  // b.any
    5aa4:	ldr	x2, [x20, #96]
    5aa8:	ldr	x1, [x19, #16]
    5aac:	ldr	x0, [x19, #40]
    5ab0:	add	x3, x0, #0x1
    5ab4:	str	x3, [x19, #40]
    5ab8:	strb	w2, [x1, x0]
    5abc:	ldr	x0, [x20, #96]
    5ac0:	lsr	x0, x0, #8
    5ac4:	ldr	x2, [x19, #16]
    5ac8:	ldr	x1, [x19, #40]
    5acc:	add	x3, x1, #0x1
    5ad0:	str	x3, [x19, #40]
    5ad4:	strb	w0, [x2, x1]
    5ad8:	ldr	x0, [x20, #96]
    5adc:	lsr	x0, x0, #16
    5ae0:	ldr	x2, [x19, #16]
    5ae4:	ldr	x1, [x19, #40]
    5ae8:	add	x3, x1, #0x1
    5aec:	str	x3, [x19, #40]
    5af0:	strb	w0, [x2, x1]
    5af4:	ldr	x0, [x20, #96]
    5af8:	lsr	x0, x0, #24
    5afc:	ldr	x2, [x19, #16]
    5b00:	ldr	x1, [x19, #40]
    5b04:	add	x3, x1, #0x1
    5b08:	str	x3, [x19, #40]
    5b0c:	strb	w0, [x2, x1]
    5b10:	ldr	x2, [x20, #16]
    5b14:	ldr	x1, [x19, #16]
    5b18:	ldr	x0, [x19, #40]
    5b1c:	add	x3, x0, #0x1
    5b20:	str	x3, [x19, #40]
    5b24:	strb	w2, [x1, x0]
    5b28:	ldr	x0, [x20, #16]
    5b2c:	lsr	x0, x0, #8
    5b30:	ldr	x2, [x19, #16]
    5b34:	ldr	x1, [x19, #40]
    5b38:	add	x3, x1, #0x1
    5b3c:	str	x3, [x19, #40]
    5b40:	strb	w0, [x2, x1]
    5b44:	ldr	x0, [x20, #16]
    5b48:	lsr	x0, x0, #16
    5b4c:	ldr	x2, [x19, #16]
    5b50:	ldr	x1, [x19, #40]
    5b54:	add	x3, x1, #0x1
    5b58:	str	x3, [x19, #40]
    5b5c:	strb	w0, [x2, x1]
    5b60:	ldr	x0, [x20, #16]
    5b64:	lsr	x0, x0, #24
    5b68:	ldr	x2, [x19, #16]
    5b6c:	ldr	x1, [x19, #40]
    5b70:	add	x3, x1, #0x1
    5b74:	str	x3, [x19, #40]
    5b78:	strb	w0, [x2, x1]
    5b7c:	mov	x0, x20
    5b80:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5b84:	ldr	w0, [x19, #48]
    5b88:	cmp	w0, #0x0
    5b8c:	b.le	5b98 <deflate@@Base+0xe58>
    5b90:	neg	w0, w0
    5b94:	str	w0, [x19, #48]
    5b98:	ldr	x0, [x19, #40]
    5b9c:	cmp	x0, #0x0
    5ba0:	cset	w23, eq  // eq = none
    5ba4:	mov	w0, w23
    5ba8:	ldp	x19, x20, [sp, #16]
    5bac:	ldp	x21, x22, [sp, #32]
    5bb0:	ldp	x23, x24, [sp, #48]
    5bb4:	ldp	x29, x30, [sp], #96
    5bb8:	ret
    5bbc:	ldp	x25, x26, [sp, #64]
    5bc0:	ldr	w0, [x20, #32]
    5bc4:	cbnz	w0, 5ba4 <deflate@@Base+0xe64>
    5bc8:	mov	w0, #0xffffffff            	// #-1
    5bcc:	str	w0, [x19, #76]
    5bd0:	b	5ba4 <deflate@@Base+0xe64>
    5bd4:	ldp	x25, x26, [sp, #64]
    5bd8:	b	5dd8 <deflate@@Base+0x1098>
    5bdc:	mov	x0, x19
    5be0:	bl	ba8c <inflateCodesUsed@@ZLIB_1.2.9+0x19ac>
    5be4:	b	5de8 <deflate@@Base+0x10a8>
    5be8:	mov	w3, #0x0                   	// #0
    5bec:	mov	x2, #0x0                   	// #0
    5bf0:	mov	x1, #0x0                   	// #0
    5bf4:	mov	x0, x19
    5bf8:	bl	b92c <inflateCodesUsed@@ZLIB_1.2.9+0x184c>
    5bfc:	cmp	w22, #0x3
    5c00:	b.eq	5c18 <deflate@@Base+0xed8>  // b.none
    5c04:	mov	x0, x20
    5c08:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5c0c:	ldr	w0, [x20, #32]
    5c10:	cbnz	w0, 5a84 <deflate@@Base+0xd44>
    5c14:	b	5df8 <deflate@@Base+0x10b8>
    5c18:	ldr	w0, [x19, #132]
    5c1c:	sub	w0, w0, #0x1
    5c20:	ldr	x1, [x19, #120]
    5c24:	strh	wzr, [x1, x0, lsl #1]
    5c28:	ldr	w2, [x19, #132]
    5c2c:	sub	w2, w2, #0x1
    5c30:	lsl	x2, x2, #1
    5c34:	mov	w1, #0x0                   	// #0
    5c38:	ldr	x0, [x19, #120]
    5c3c:	bl	24a0 <memset@plt>
    5c40:	ldr	w0, [x19, #180]
    5c44:	cbnz	w0, 5de8 <deflate@@Base+0x10a8>
    5c48:	str	wzr, [x19, #172]
    5c4c:	str	xzr, [x19, #152]
    5c50:	str	wzr, [x19, #5932]
    5c54:	b	5de8 <deflate@@Base+0x10a8>
    5c58:	ldur	w1, [x20, #98]
    5c5c:	mov	x0, x19
    5c60:	bl	3224 <crc32_combine64@@ZLIB_1.2.3.3+0x128>
    5c64:	ldrh	w1, [x20, #96]
    5c68:	mov	x0, x19
    5c6c:	bl	3224 <crc32_combine64@@ZLIB_1.2.3.3+0x128>
    5c70:	b	5b7c <deflate@@Base+0xe3c>
    5c74:	mov	w23, #0xfffffffe            	// #-2
    5c78:	b	5ba4 <deflate@@Base+0xe64>
    5c7c:	mov	w23, #0xfffffffe            	// #-2
    5c80:	b	5ba4 <deflate@@Base+0xe64>
    5c84:	mov	w23, w22
    5c88:	b	5ba4 <deflate@@Base+0xe64>
    5c8c:	cmp	w0, #0x29a
    5c90:	b.eq	4e0c <deflate@@Base+0xcc>  // b.none
    5c94:	cmp	w0, #0x2a
    5c98:	b.ne	5d34 <deflate@@Base+0xff4>  // b.any
    5c9c:	ldr	w0, [x19, #84]
    5ca0:	lsl	w0, w0, #12
    5ca4:	sub	w1, w0, #0x7, lsl #12
    5ca8:	sub	w1, w1, #0x800
    5cac:	ldr	w2, [x19, #200]
    5cb0:	mov	w0, #0x0                   	// #0
    5cb4:	cmp	w2, #0x1
    5cb8:	b.le	4e88 <deflate@@Base+0x148>
    5cbc:	orr	w0, w1, w0, lsl #6
    5cc0:	ldr	w2, [x19, #172]
    5cc4:	orr	w1, w0, #0x20
    5cc8:	cmp	w2, #0x0
    5ccc:	csel	w0, w1, w0, ne  // ne = any
    5cd0:	mov	w1, #0x1085                	// #4229
    5cd4:	movk	w1, #0x842, lsl #16
    5cd8:	umull	x1, w0, w1
    5cdc:	lsr	x2, x1, #32
    5ce0:	sub	w1, w0, w2
    5ce4:	add	w1, w2, w1, lsr #1
    5ce8:	lsr	w1, w1, #4
    5cec:	lsl	w0, w1, #5
    5cf0:	sub	w1, w0, w1
    5cf4:	add	w1, w1, #0x1f
    5cf8:	mov	x0, x19
    5cfc:	bl	3224 <crc32_combine64@@ZLIB_1.2.3.3+0x128>
    5d00:	ldr	w0, [x19, #172]
    5d04:	cbnz	w0, 4eb0 <deflate@@Base+0x170>
    5d08:	mov	w2, #0x0                   	// #0
    5d0c:	mov	x1, #0x0                   	// #0
    5d10:	mov	x0, #0x0                   	// #0
    5d14:	bl	2560 <adler32@plt>
    5d18:	str	x0, [x20, #96]
    5d1c:	mov	w0, #0x71                  	// #113
    5d20:	str	w0, [x19, #8]
    5d24:	mov	x0, x20
    5d28:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5d2c:	ldr	x0, [x19, #40]
    5d30:	cbnz	x0, 4ecc <deflate@@Base+0x18c>
    5d34:	ldr	w0, [x19, #8]
    5d38:	cmp	w0, #0x39
    5d3c:	b.eq	4ed8 <deflate@@Base+0x198>  // b.none
    5d40:	ldr	w0, [x19, #8]
    5d44:	cmp	w0, #0x45
    5d48:	b.eq	50cc <deflate@@Base+0x38c>  // b.none
    5d4c:	cmp	w0, #0x49
    5d50:	b.eq	5300 <deflate@@Base+0x5c0>  // b.none
    5d54:	cmp	w0, #0x5b
    5d58:	b.eq	53e0 <deflate@@Base+0x6a0>  // b.none
    5d5c:	cmp	w0, #0x67
    5d60:	b.eq	54bc <deflate@@Base+0x77c>  // b.none
    5d64:	ldr	w0, [x20, #8]
    5d68:	cbnz	w0, 5d84 <deflate@@Base+0x1044>
    5d6c:	ldr	w0, [x19, #180]
    5d70:	cbnz	w0, 5d84 <deflate@@Base+0x1044>
    5d74:	cbz	w22, 5c84 <deflate@@Base+0xf44>
    5d78:	ldr	w0, [x19, #8]
    5d7c:	cmp	w0, #0x29a
    5d80:	b.eq	5a84 <deflate@@Base+0xd44>  // b.none
    5d84:	ldr	w0, [x19, #196]
    5d88:	cbz	w0, 5580 <deflate@@Base+0x840>
    5d8c:	ldr	w1, [x19, #200]
    5d90:	cmp	w1, #0x2
    5d94:	b.eq	5590 <deflate@@Base+0x850>  // b.none
    5d98:	cmp	w1, #0x3
    5d9c:	b.eq	5718 <deflate@@Base+0x9d8>  // b.none
    5da0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    5da4:	add	x1, x1, #0xc68
    5da8:	add	x0, x1, w0, sxtw #4
    5dac:	ldr	x2, [x0, #8]
    5db0:	mov	w1, w22
    5db4:	mov	x0, x19
    5db8:	blr	x2
    5dbc:	sub	w1, w0, #0x2
    5dc0:	cmp	w1, #0x1
    5dc4:	b.ls	5a74 <deflate@@Base+0xd34>  // b.plast
    5dc8:	tst	w0, #0xfffffffd
    5dcc:	b.eq	5bc0 <deflate@@Base+0xe80>  // b.none
    5dd0:	cmp	w0, #0x1
    5dd4:	b.ne	5a84 <deflate@@Base+0xd44>  // b.any
    5dd8:	cmp	w22, #0x1
    5ddc:	b.eq	5bdc <deflate@@Base+0xe9c>  // b.none
    5de0:	cmp	w22, #0x5
    5de4:	b.ne	5be8 <deflate@@Base+0xea8>  // b.any
    5de8:	mov	x0, x20
    5dec:	bl	372c <crc32_combine64@@ZLIB_1.2.3.3+0x630>
    5df0:	ldr	w0, [x20, #32]
    5df4:	cbnz	w0, 5ba4 <deflate@@Base+0xe64>
    5df8:	mov	w0, #0xffffffff            	// #-1
    5dfc:	str	w0, [x19, #76]
    5e00:	b	5ba4 <deflate@@Base+0xe64>
    5e04:	ldp	x25, x26, [sp, #64]
    5e08:	mov	w0, #0x29a                 	// #666
    5e0c:	str	w0, [x19, #8]
    5e10:	b	5bc0 <deflate@@Base+0xe80>

0000000000005e14 <deflateParams@@Base>:
    5e14:	stp	x29, x30, [sp, #-64]!
    5e18:	mov	x29, sp
    5e1c:	stp	x19, x20, [sp, #16]
    5e20:	stp	x21, x22, [sp, #32]
    5e24:	str	x23, [sp, #48]
    5e28:	mov	x23, x0
    5e2c:	mov	w19, w1
    5e30:	mov	w21, w2
    5e34:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    5e38:	cbnz	w0, 5f64 <deflateParams@@Base+0x150>
    5e3c:	mov	w22, w0
    5e40:	ldr	x20, [x23, #56]
    5e44:	cmn	w19, #0x1
    5e48:	mov	w0, #0x6                   	// #6
    5e4c:	csel	w19, w19, w0, ne  // ne = any
    5e50:	cmp	w19, #0x9
    5e54:	ccmp	w21, #0x4, #0x2, ls  // ls = plast
    5e58:	b.hi	5f6c <deflateParams@@Base+0x158>  // b.pmore
    5e5c:	ldr	w0, [x20, #200]
    5e60:	cmp	w0, w21
    5e64:	b.eq	5f0c <deflateParams@@Base+0xf8>  // b.none
    5e68:	ldr	x0, [x20, #5944]
    5e6c:	cbnz	x0, 5f34 <deflateParams@@Base+0x120>
    5e70:	ldr	w0, [x20, #196]
    5e74:	cmp	w0, w19
    5e78:	b.eq	5ef0 <deflateParams@@Base+0xdc>  // b.none
    5e7c:	cbnz	w0, 5ebc <deflateParams@@Base+0xa8>
    5e80:	ldr	w0, [x20, #5928]
    5e84:	cbz	w0, 5ebc <deflateParams@@Base+0xa8>
    5e88:	cmp	w0, #0x1
    5e8c:	b.eq	5f58 <deflateParams@@Base+0x144>  // b.none
    5e90:	ldr	w0, [x20, #132]
    5e94:	sub	w0, w0, #0x1
    5e98:	ldr	x1, [x20, #120]
    5e9c:	strh	wzr, [x1, x0, lsl #1]
    5ea0:	ldr	w2, [x20, #132]
    5ea4:	sub	w2, w2, #0x1
    5ea8:	lsl	x2, x2, #1
    5eac:	mov	w1, #0x0                   	// #0
    5eb0:	ldr	x0, [x20, #120]
    5eb4:	bl	24a0 <memset@plt>
    5eb8:	str	wzr, [x20, #5928]
    5ebc:	str	w19, [x20, #196]
    5ec0:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    5ec4:	add	x0, x0, #0xc68
    5ec8:	sbfiz	x19, x19, #4, #32
    5ecc:	add	x1, x0, x19
    5ed0:	ldrh	w2, [x1, #2]
    5ed4:	str	w2, [x20, #192]
    5ed8:	ldrh	w0, [x0, x19]
    5edc:	str	w0, [x20, #204]
    5ee0:	ldrh	w0, [x1, #4]
    5ee4:	str	w0, [x20, #208]
    5ee8:	ldrh	w0, [x1, #6]
    5eec:	str	w0, [x20, #188]
    5ef0:	str	w21, [x20, #200]
    5ef4:	mov	w0, w22
    5ef8:	ldp	x19, x20, [sp, #16]
    5efc:	ldp	x21, x22, [sp, #32]
    5f00:	ldr	x23, [sp, #48]
    5f04:	ldp	x29, x30, [sp], #64
    5f08:	ret
    5f0c:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    5f10:	add	x0, x0, #0xc68
    5f14:	add	x2, x0, w19, sxtw #4
    5f18:	ldrsw	x1, [x20, #196]
    5f1c:	add	x0, x0, x1, lsl #4
    5f20:	ldr	x1, [x2, #8]
    5f24:	ldr	x0, [x0, #8]
    5f28:	cmp	x1, x0
    5f2c:	b.ne	5e68 <deflateParams@@Base+0x54>  // b.any
    5f30:	b	5e70 <deflateParams@@Base+0x5c>
    5f34:	mov	w1, #0x5                   	// #5
    5f38:	mov	x0, x23
    5f3c:	bl	2490 <deflate@plt>
    5f40:	cmn	w0, #0x2
    5f44:	b.eq	5f74 <deflateParams@@Base+0x160>  // b.none
    5f48:	ldr	w0, [x23, #32]
    5f4c:	cbnz	w0, 5e70 <deflateParams@@Base+0x5c>
    5f50:	mov	w22, #0xfffffffb            	// #-5
    5f54:	b	5ef4 <deflateParams@@Base+0xe0>
    5f58:	mov	x0, x20
    5f5c:	bl	3110 <crc32_combine64@@ZLIB_1.2.3.3+0x14>
    5f60:	b	5ea0 <deflateParams@@Base+0x8c>
    5f64:	mov	w22, #0xfffffffe            	// #-2
    5f68:	b	5ef4 <deflateParams@@Base+0xe0>
    5f6c:	mov	w22, #0xfffffffe            	// #-2
    5f70:	b	5ef4 <deflateParams@@Base+0xe0>
    5f74:	mov	w22, w0
    5f78:	b	5ef4 <deflateParams@@Base+0xe0>

0000000000005f7c <deflateEnd@@Base>:
    5f7c:	stp	x29, x30, [sp, #-48]!
    5f80:	mov	x29, sp
    5f84:	stp	x19, x20, [sp, #16]
    5f88:	mov	x19, x0
    5f8c:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    5f90:	cbnz	w0, 6034 <deflateEnd@@Base+0xb8>
    5f94:	str	x21, [sp, #32]
    5f98:	mov	w20, w0
    5f9c:	ldr	x0, [x19, #56]
    5fa0:	ldr	w21, [x0, #8]
    5fa4:	ldr	x1, [x0, #16]
    5fa8:	cbz	x1, 5fb8 <deflateEnd@@Base+0x3c>
    5fac:	ldr	x2, [x19, #72]
    5fb0:	ldr	x0, [x19, #80]
    5fb4:	blr	x2
    5fb8:	ldr	x0, [x19, #56]
    5fbc:	ldr	x1, [x0, #120]
    5fc0:	cbz	x1, 5fd0 <deflateEnd@@Base+0x54>
    5fc4:	ldr	x2, [x19, #72]
    5fc8:	ldr	x0, [x19, #80]
    5fcc:	blr	x2
    5fd0:	ldr	x0, [x19, #56]
    5fd4:	ldr	x1, [x0, #112]
    5fd8:	cbz	x1, 5fe8 <deflateEnd@@Base+0x6c>
    5fdc:	ldr	x2, [x19, #72]
    5fe0:	ldr	x0, [x19, #80]
    5fe4:	blr	x2
    5fe8:	ldr	x0, [x19, #56]
    5fec:	ldr	x1, [x0, #96]
    5ff0:	cbz	x1, 6000 <deflateEnd@@Base+0x84>
    5ff4:	ldr	x2, [x19, #72]
    5ff8:	ldr	x0, [x19, #80]
    5ffc:	blr	x2
    6000:	ldr	x2, [x19, #72]
    6004:	ldr	x1, [x19, #56]
    6008:	ldr	x0, [x19, #80]
    600c:	blr	x2
    6010:	str	xzr, [x19, #56]
    6014:	cmp	w21, #0x71
    6018:	mov	w0, #0xfffffffd            	// #-3
    601c:	csel	w20, w20, w0, ne  // ne = any
    6020:	ldr	x21, [sp, #32]
    6024:	mov	w0, w20
    6028:	ldp	x19, x20, [sp, #16]
    602c:	ldp	x29, x30, [sp], #48
    6030:	ret
    6034:	mov	w20, #0xfffffffe            	// #-2
    6038:	b	6024 <deflateEnd@@Base+0xa8>

000000000000603c <deflateInit2_@@Base>:
    603c:	cbz	x6, 62b4 <deflateInit2_@@Base+0x278>
    6040:	stp	x29, x30, [sp, #-80]!
    6044:	mov	x29, sp
    6048:	stp	x19, x20, [sp, #16]
    604c:	stp	x21, x22, [sp, #32]
    6050:	stp	x23, x24, [sp, #48]
    6054:	mov	x20, x0
    6058:	mov	w23, w1
    605c:	mov	w21, w3
    6060:	mov	w22, w4
    6064:	mov	w24, w5
    6068:	ldrb	w0, [x6]
    606c:	cmp	w0, #0x31
    6070:	mov	w0, #0x70                  	// #112
    6074:	ccmp	w7, w0, #0x0, eq  // eq = none
    6078:	b.ne	62bc <deflateInit2_@@Base+0x280>  // b.any
    607c:	cbz	x20, 62c4 <deflateInit2_@@Base+0x288>
    6080:	str	x25, [sp, #64]
    6084:	str	xzr, [x20, #48]
    6088:	ldr	x0, [x20, #64]
    608c:	cbz	x0, 60c0 <deflateInit2_@@Base+0x84>
    6090:	ldr	x0, [x20, #72]
    6094:	cbz	x0, 60d4 <deflateInit2_@@Base+0x98>
    6098:	cmn	w23, #0x1
    609c:	mov	w0, #0x6                   	// #6
    60a0:	csel	w23, w23, w0, ne  // ne = any
    60a4:	tbnz	w21, #31, 60e4 <deflateInit2_@@Base+0xa8>
    60a8:	mov	w25, #0x1                   	// #1
    60ac:	cmp	w21, #0xf
    60b0:	b.le	60ec <deflateInit2_@@Base+0xb0>
    60b4:	sub	w21, w21, #0x10
    60b8:	mov	w25, #0x2                   	// #2
    60bc:	b	60ec <deflateInit2_@@Base+0xb0>
    60c0:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1f20>
    60c4:	add	x0, x0, #0x280
    60c8:	str	x0, [x20, #64]
    60cc:	str	xzr, [x20, #80]
    60d0:	b	6090 <deflateInit2_@@Base+0x54>
    60d4:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1f20>
    60d8:	add	x0, x0, #0x298
    60dc:	str	x0, [x20, #72]
    60e0:	b	6098 <deflateInit2_@@Base+0x5c>
    60e4:	neg	w21, w21
    60e8:	mov	w25, #0x0                   	// #0
    60ec:	sub	w0, w22, #0x1
    60f0:	cmp	w0, #0x8
    60f4:	b.hi	62cc <deflateInit2_@@Base+0x290>  // b.pmore
    60f8:	sub	w0, w21, #0x8
    60fc:	cmp	w0, #0x7
    6100:	ccmp	w2, #0x8, #0x0, ls  // ls = plast
    6104:	b.ne	62d8 <deflateInit2_@@Base+0x29c>  // b.any
    6108:	cmp	w23, #0x9
    610c:	ccmp	w24, #0x4, #0x2, ls  // ls = plast
    6110:	b.hi	62e4 <deflateInit2_@@Base+0x2a8>  // b.pmore
    6114:	cmp	w21, #0x8
    6118:	ccmp	w25, #0x1, #0x4, eq  // eq = none
    611c:	b.ne	62f0 <deflateInit2_@@Base+0x2b4>  // b.any
    6120:	cmp	w21, #0x8
    6124:	mov	w0, #0x9                   	// #9
    6128:	csel	w21, w21, w0, ne  // ne = any
    612c:	ldr	x3, [x20, #64]
    6130:	mov	w2, #0x1740                	// #5952
    6134:	mov	w1, #0x1                   	// #1
    6138:	ldr	x0, [x20, #80]
    613c:	blr	x3
    6140:	mov	x19, x0
    6144:	cbz	x0, 62fc <deflateInit2_@@Base+0x2c0>
    6148:	str	x0, [x20, #56]
    614c:	str	x20, [x0]
    6150:	mov	w0, #0x2a                  	// #42
    6154:	str	w0, [x19, #8]
    6158:	str	w25, [x19, #48]
    615c:	str	xzr, [x19, #56]
    6160:	str	w21, [x19, #84]
    6164:	mov	w25, #0x1                   	// #1
    6168:	lsl	w1, w25, w21
    616c:	str	w1, [x19, #80]
    6170:	sub	w0, w1, #0x1
    6174:	str	w0, [x19, #88]
    6178:	add	w0, w22, #0x7
    617c:	str	w0, [x19, #136]
    6180:	lsl	w0, w25, w0
    6184:	str	w0, [x19, #132]
    6188:	sub	w0, w0, #0x1
    618c:	str	w0, [x19, #140]
    6190:	add	w0, w22, #0x9
    6194:	mov	w2, #0xaaab                	// #43691
    6198:	movk	w2, #0xaaaa, lsl #16
    619c:	umull	x0, w0, w2
    61a0:	lsr	x0, x0, #33
    61a4:	str	w0, [x19, #144]
    61a8:	ldr	x3, [x20, #64]
    61ac:	mov	w2, #0x2                   	// #2
    61b0:	ldr	x0, [x20, #80]
    61b4:	blr	x3
    61b8:	str	x0, [x19, #96]
    61bc:	ldr	x3, [x20, #64]
    61c0:	mov	w2, #0x2                   	// #2
    61c4:	ldr	w1, [x19, #80]
    61c8:	ldr	x0, [x20, #80]
    61cc:	blr	x3
    61d0:	str	x0, [x19, #112]
    61d4:	ldr	x3, [x20, #64]
    61d8:	mov	w2, #0x2                   	// #2
    61dc:	ldr	w1, [x19, #132]
    61e0:	ldr	x0, [x20, #80]
    61e4:	blr	x3
    61e8:	str	x0, [x19, #120]
    61ec:	str	xzr, [x19, #5944]
    61f0:	add	w22, w22, #0x6
    61f4:	lsl	w1, w25, w22
    61f8:	str	w1, [x19, #5896]
    61fc:	ldr	x3, [x20, #64]
    6200:	mov	w2, #0x4                   	// #4
    6204:	ldr	x0, [x20, #80]
    6208:	blr	x3
    620c:	str	x0, [x19, #16]
    6210:	ldr	w1, [x19, #5896]
    6214:	mov	w2, w1
    6218:	ubfiz	x3, x1, #2, #32
    621c:	str	x3, [x19, #24]
    6220:	ldr	x3, [x19, #96]
    6224:	cbz	x3, 6288 <deflateInit2_@@Base+0x24c>
    6228:	ldr	x3, [x19, #112]
    622c:	cbz	x3, 6288 <deflateInit2_@@Base+0x24c>
    6230:	ldr	x3, [x19, #120]
    6234:	cmp	x3, #0x0
    6238:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    623c:	b.eq	6288 <deflateInit2_@@Base+0x24c>  // b.none
    6240:	and	x1, x1, #0xfffffffe
    6244:	add	x1, x0, x1
    6248:	str	x1, [x19, #5904]
    624c:	add	x2, x2, x2, lsl #1
    6250:	add	x0, x0, x2
    6254:	str	x0, [x19, #5888]
    6258:	str	w23, [x19, #196]
    625c:	str	w24, [x19, #200]
    6260:	mov	w0, #0x8                   	// #8
    6264:	strb	w0, [x19, #72]
    6268:	mov	x0, x20
    626c:	bl	2480 <deflateReset@plt>
    6270:	ldr	x25, [sp, #64]
    6274:	ldp	x19, x20, [sp, #16]
    6278:	ldp	x21, x22, [sp, #32]
    627c:	ldp	x23, x24, [sp, #48]
    6280:	ldp	x29, x30, [sp], #80
    6284:	ret
    6288:	mov	w0, #0x29a                 	// #666
    628c:	str	w0, [x19, #8]
    6290:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    6294:	ldr	x0, [x0, #4056]
    6298:	ldr	x0, [x0, #48]
    629c:	str	x0, [x20, #48]
    62a0:	mov	x0, x20
    62a4:	bl	2590 <deflateEnd@plt>
    62a8:	mov	w0, #0xfffffffc            	// #-4
    62ac:	ldr	x25, [sp, #64]
    62b0:	b	6274 <deflateInit2_@@Base+0x238>
    62b4:	mov	w0, #0xfffffffa            	// #-6
    62b8:	ret
    62bc:	mov	w0, #0xfffffffa            	// #-6
    62c0:	b	6274 <deflateInit2_@@Base+0x238>
    62c4:	mov	w0, #0xfffffffe            	// #-2
    62c8:	b	6274 <deflateInit2_@@Base+0x238>
    62cc:	mov	w0, #0xfffffffe            	// #-2
    62d0:	ldr	x25, [sp, #64]
    62d4:	b	6274 <deflateInit2_@@Base+0x238>
    62d8:	mov	w0, #0xfffffffe            	// #-2
    62dc:	ldr	x25, [sp, #64]
    62e0:	b	6274 <deflateInit2_@@Base+0x238>
    62e4:	mov	w0, #0xfffffffe            	// #-2
    62e8:	ldr	x25, [sp, #64]
    62ec:	b	6274 <deflateInit2_@@Base+0x238>
    62f0:	mov	w0, #0xfffffffe            	// #-2
    62f4:	ldr	x25, [sp, #64]
    62f8:	b	6274 <deflateInit2_@@Base+0x238>
    62fc:	mov	w0, #0xfffffffc            	// #-4
    6300:	ldr	x25, [sp, #64]
    6304:	b	6274 <deflateInit2_@@Base+0x238>

0000000000006308 <deflateInit_@@Base>:
    6308:	stp	x29, x30, [sp, #-16]!
    630c:	mov	x29, sp
    6310:	mov	w7, w3
    6314:	mov	x6, x2
    6318:	mov	w5, #0x0                   	// #0
    631c:	mov	w4, #0x8                   	// #8
    6320:	mov	w3, #0xf                   	// #15
    6324:	mov	w2, w4
    6328:	bl	24d0 <deflateInit2_@plt>
    632c:	ldp	x29, x30, [sp], #16
    6330:	ret

0000000000006334 <deflateCopy@@Base>:
    6334:	stp	x29, x30, [sp, #-48]!
    6338:	mov	x29, sp
    633c:	stp	x19, x20, [sp, #16]
    6340:	mov	x20, x0
    6344:	mov	x19, x1
    6348:	mov	x0, x1
    634c:	bl	318c <crc32_combine64@@ZLIB_1.2.3.3+0x90>
    6350:	cmp	x20, #0x0
    6354:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    6358:	b.ne	6510 <deflateCopy@@Base+0x1dc>  // b.any
    635c:	stp	x21, x22, [sp, #32]
    6360:	ldr	x22, [x19, #56]
    6364:	ldp	x0, x1, [x19]
    6368:	stp	x0, x1, [x20]
    636c:	ldp	x0, x1, [x19, #16]
    6370:	stp	x0, x1, [x20, #16]
    6374:	ldp	x0, x1, [x19, #32]
    6378:	stp	x0, x1, [x20, #32]
    637c:	ldp	x0, x1, [x19, #48]
    6380:	stp	x0, x1, [x20, #48]
    6384:	ldp	x0, x1, [x19, #64]
    6388:	stp	x0, x1, [x20, #64]
    638c:	ldp	x0, x1, [x19, #80]
    6390:	stp	x0, x1, [x20, #80]
    6394:	ldp	x0, x1, [x19, #96]
    6398:	stp	x0, x1, [x20, #96]
    639c:	ldr	x3, [x20, #64]
    63a0:	mov	w2, #0x1740                	// #5952
    63a4:	mov	w1, #0x1                   	// #1
    63a8:	ldr	x0, [x20, #80]
    63ac:	blr	x3
    63b0:	mov	x19, x0
    63b4:	cbz	x0, 6518 <deflateCopy@@Base+0x1e4>
    63b8:	str	x0, [x20, #56]
    63bc:	mov	x2, #0x1740                	// #5952
    63c0:	mov	x1, x22
    63c4:	bl	23a0 <memcpy@plt>
    63c8:	str	x20, [x19]
    63cc:	ldr	x3, [x20, #64]
    63d0:	mov	w2, #0x2                   	// #2
    63d4:	ldr	w1, [x19, #80]
    63d8:	ldr	x0, [x20, #80]
    63dc:	blr	x3
    63e0:	str	x0, [x19, #96]
    63e4:	ldr	x3, [x20, #64]
    63e8:	mov	w2, #0x2                   	// #2
    63ec:	ldr	w1, [x19, #80]
    63f0:	ldr	x0, [x20, #80]
    63f4:	blr	x3
    63f8:	str	x0, [x19, #112]
    63fc:	ldr	x3, [x20, #64]
    6400:	mov	w2, #0x2                   	// #2
    6404:	ldr	w1, [x19, #132]
    6408:	ldr	x0, [x20, #80]
    640c:	blr	x3
    6410:	str	x0, [x19, #120]
    6414:	ldr	x3, [x20, #64]
    6418:	mov	w2, #0x4                   	// #4
    641c:	ldr	w1, [x19, #5896]
    6420:	ldr	x0, [x20, #80]
    6424:	blr	x3
    6428:	mov	x21, x0
    642c:	str	x0, [x19, #16]
    6430:	ldr	x0, [x19, #96]
    6434:	cbz	x0, 64fc <deflateCopy@@Base+0x1c8>
    6438:	ldr	x1, [x19, #112]
    643c:	cbz	x1, 64fc <deflateCopy@@Base+0x1c8>
    6440:	ldr	x1, [x19, #120]
    6444:	cmp	x1, #0x0
    6448:	ccmp	x21, #0x0, #0x4, ne  // ne = any
    644c:	b.eq	64fc <deflateCopy@@Base+0x1c8>  // b.none
    6450:	ldr	w2, [x19, #80]
    6454:	lsl	w2, w2, #1
    6458:	ldr	x1, [x22, #96]
    645c:	bl	23a0 <memcpy@plt>
    6460:	ldr	w2, [x19, #80]
    6464:	lsl	x2, x2, #1
    6468:	ldr	x1, [x22, #112]
    646c:	ldr	x0, [x19, #112]
    6470:	bl	23a0 <memcpy@plt>
    6474:	ldr	w2, [x19, #132]
    6478:	lsl	x2, x2, #1
    647c:	ldr	x1, [x22, #120]
    6480:	ldr	x0, [x19, #120]
    6484:	bl	23a0 <memcpy@plt>
    6488:	ldr	w2, [x19, #24]
    648c:	ldr	x1, [x22, #16]
    6490:	ldr	x0, [x19, #16]
    6494:	bl	23a0 <memcpy@plt>
    6498:	ldr	x2, [x19, #16]
    649c:	ldr	x0, [x22, #32]
    64a0:	ldr	x1, [x22, #16]
    64a4:	sub	x0, x0, x1
    64a8:	add	x0, x2, x0
    64ac:	str	x0, [x19, #32]
    64b0:	ldr	w1, [x19, #5896]
    64b4:	and	x0, x1, #0xfffffffe
    64b8:	add	x21, x21, x0
    64bc:	str	x21, [x19, #5904]
    64c0:	ubfiz	x0, x1, #1, #32
    64c4:	add	x1, x0, w1, uxtw
    64c8:	add	x1, x2, x1
    64cc:	str	x1, [x19, #5888]
    64d0:	add	x0, x19, #0xd4
    64d4:	str	x0, [x19, #2904]
    64d8:	add	x0, x19, #0x9c8
    64dc:	str	x0, [x19, #2928]
    64e0:	add	x0, x19, #0xabc
    64e4:	str	x0, [x19, #2952]
    64e8:	mov	w0, #0x0                   	// #0
    64ec:	ldp	x21, x22, [sp, #32]
    64f0:	ldp	x19, x20, [sp, #16]
    64f4:	ldp	x29, x30, [sp], #48
    64f8:	ret
    64fc:	mov	x0, x20
    6500:	bl	2590 <deflateEnd@plt>
    6504:	mov	w0, #0xfffffffc            	// #-4
    6508:	ldp	x21, x22, [sp, #32]
    650c:	b	64f0 <deflateCopy@@Base+0x1bc>
    6510:	mov	w0, #0xfffffffe            	// #-2
    6514:	b	64f0 <deflateCopy@@Base+0x1bc>
    6518:	mov	w0, #0xfffffffc            	// #-4
    651c:	ldp	x21, x22, [sp, #32]
    6520:	b	64f0 <deflateCopy@@Base+0x1bc>

0000000000006524 <inflateBackInit_@@ZLIB_1.2.0>:
    6524:	cbz	x3, 65fc <inflateBackInit_@@ZLIB_1.2.0+0xd8>
    6528:	stp	x29, x30, [sp, #-48]!
    652c:	mov	x29, sp
    6530:	stp	x19, x20, [sp, #16]
    6534:	str	x21, [sp, #32]
    6538:	mov	x19, x0
    653c:	mov	w20, w1
    6540:	mov	x21, x2
    6544:	ldrb	w0, [x3]
    6548:	cmp	w0, #0x31
    654c:	mov	w0, #0x70                  	// #112
    6550:	ccmp	w4, w0, #0x0, eq  // eq = none
    6554:	b.ne	6604 <inflateBackInit_@@ZLIB_1.2.0+0xe0>  // b.any
    6558:	cmp	x19, #0x0
    655c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    6560:	b.eq	660c <inflateBackInit_@@ZLIB_1.2.0+0xe8>  // b.none
    6564:	sub	w0, w1, #0x8
    6568:	cmp	w0, #0x7
    656c:	b.hi	6614 <inflateBackInit_@@ZLIB_1.2.0+0xf0>  // b.pmore
    6570:	str	xzr, [x19, #48]
    6574:	ldr	x0, [x19, #64]
    6578:	cbz	x0, 65d8 <inflateBackInit_@@ZLIB_1.2.0+0xb4>
    657c:	ldr	x0, [x19, #72]
    6580:	cbz	x0, 65ec <inflateBackInit_@@ZLIB_1.2.0+0xc8>
    6584:	ldr	x3, [x19, #64]
    6588:	mov	w2, #0x1bf8                	// #7160
    658c:	mov	w1, #0x1                   	// #1
    6590:	ldr	x0, [x19, #80]
    6594:	blr	x3
    6598:	cbz	x0, 661c <inflateBackInit_@@ZLIB_1.2.0+0xf8>
    659c:	str	x0, [x19, #56]
    65a0:	mov	w1, #0x8000                	// #32768
    65a4:	str	w1, [x0, #28]
    65a8:	str	w20, [x0, #56]
    65ac:	mov	w1, #0x1                   	// #1
    65b0:	lsl	w20, w1, w20
    65b4:	str	w20, [x0, #60]
    65b8:	str	x21, [x0, #72]
    65bc:	str	wzr, [x0, #68]
    65c0:	str	wzr, [x0, #64]
    65c4:	mov	w0, #0x0                   	// #0
    65c8:	ldp	x19, x20, [sp, #16]
    65cc:	ldr	x21, [sp, #32]
    65d0:	ldp	x29, x30, [sp], #48
    65d4:	ret
    65d8:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1f20>
    65dc:	add	x0, x0, #0x280
    65e0:	str	x0, [x19, #64]
    65e4:	str	xzr, [x19, #80]
    65e8:	b	657c <inflateBackInit_@@ZLIB_1.2.0+0x58>
    65ec:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1f20>
    65f0:	add	x0, x0, #0x298
    65f4:	str	x0, [x19, #72]
    65f8:	b	6584 <inflateBackInit_@@ZLIB_1.2.0+0x60>
    65fc:	mov	w0, #0xfffffffa            	// #-6
    6600:	ret
    6604:	mov	w0, #0xfffffffa            	// #-6
    6608:	b	65c8 <inflateBackInit_@@ZLIB_1.2.0+0xa4>
    660c:	mov	w0, #0xfffffffe            	// #-2
    6610:	b	65c8 <inflateBackInit_@@ZLIB_1.2.0+0xa4>
    6614:	mov	w0, #0xfffffffe            	// #-2
    6618:	b	65c8 <inflateBackInit_@@ZLIB_1.2.0+0xa4>
    661c:	mov	w0, #0xfffffffc            	// #-4
    6620:	b	65c8 <inflateBackInit_@@ZLIB_1.2.0+0xa4>

0000000000006624 <inflateBack@@ZLIB_1.2.0>:
    6624:	stp	x29, x30, [sp, #-208]!
    6628:	mov	x29, sp
    662c:	str	x3, [sp, #96]
    6630:	str	x4, [sp, #104]
    6634:	cbz	x0, 7564 <inflateBack@@ZLIB_1.2.0+0xf40>
    6638:	stp	x21, x22, [sp, #32]
    663c:	stp	x23, x24, [sp, #48]
    6640:	stp	x25, x26, [sp, #64]
    6644:	mov	x23, x0
    6648:	mov	x24, x1
    664c:	mov	x25, x2
    6650:	ldr	x22, [x0, #56]
    6654:	cbz	x22, 756c <inflateBack@@ZLIB_1.2.0+0xf48>
    6658:	stp	x19, x20, [sp, #16]
    665c:	stp	x27, x28, [sp, #80]
    6660:	str	xzr, [x0, #48]
    6664:	mov	w0, #0x3f3f                	// #16191
    6668:	str	w0, [x22, #8]
    666c:	str	wzr, [x22, #12]
    6670:	str	wzr, [x22, #64]
    6674:	ldr	x0, [x23]
    6678:	str	x0, [sp, #200]
    667c:	mov	w19, #0x0                   	// #0
    6680:	cbz	x0, 6688 <inflateBack@@ZLIB_1.2.0+0x64>
    6684:	ldr	w19, [x23, #8]
    6688:	ldr	x28, [x22, #72]
    668c:	ldr	w27, [x22, #60]
    6690:	mov	w20, #0x0                   	// #0
    6694:	mov	x21, #0x0                   	// #0
    6698:	add	x26, sp, #0xc8
    669c:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    66a0:	add	x0, x0, #0xba8
    66a4:	str	x0, [sp, #120]
    66a8:	add	x0, x0, #0x880
    66ac:	str	x0, [sp, #112]
    66b0:	ldr	w0, [x22, #8]
    66b4:	mov	w1, #0x3f48                	// #16200
    66b8:	cmp	w0, w1
    66bc:	b.eq	6f34 <inflateBack@@ZLIB_1.2.0+0x910>  // b.none
    66c0:	b.hi	6768 <inflateBack@@ZLIB_1.2.0+0x144>  // b.pmore
    66c4:	mov	w1, #0x3f41                	// #16193
    66c8:	cmp	w0, w1
    66cc:	b.eq	6888 <inflateBack@@ZLIB_1.2.0+0x264>  // b.none
    66d0:	mov	w1, #0x3f44                	// #16196
    66d4:	cmp	w0, w1
    66d8:	b.ne	6734 <inflateBack@@ZLIB_1.2.0+0x110>  // b.any
    66dc:	cmp	w20, #0xd
    66e0:	b.ls	69f0 <inflateBack@@ZLIB_1.2.0+0x3cc>  // b.plast
    66e4:	and	w1, w21, #0x1f
    66e8:	add	w1, w1, #0x101
    66ec:	str	w1, [x22, #132]
    66f0:	ubfx	w0, w21, #5, #5
    66f4:	add	w0, w0, #0x1
    66f8:	str	w0, [x22, #136]
    66fc:	ubfx	w2, w21, #10, #4
    6700:	add	w2, w2, #0x4
    6704:	str	w2, [x22, #128]
    6708:	lsr	x21, x21, #14
    670c:	sub	w20, w20, #0xe
    6710:	cmp	w1, #0x11e
    6714:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
    6718:	b.ls	6a14 <inflateBack@@ZLIB_1.2.0+0x3f0>  // b.plast
    671c:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6720:	add	x0, x0, #0xa88
    6724:	str	x0, [x23, #48]
    6728:	mov	w0, #0x3f51                	// #16209
    672c:	str	w0, [x22, #8]
    6730:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6734:	mov	w1, #0x3f3f                	// #16191
    6738:	cmp	w0, w1
    673c:	b.ne	6760 <inflateBack@@ZLIB_1.2.0+0x13c>  // b.any
    6740:	ldr	w0, [x22, #12]
    6744:	cbz	w0, 67b0 <inflateBack@@ZLIB_1.2.0+0x18c>
    6748:	and	w0, w20, #0x7
    674c:	lsr	x21, x21, x0
    6750:	and	w20, w20, #0xfffffff8
    6754:	mov	w0, #0x3f50                	// #16208
    6758:	str	w0, [x22, #8]
    675c:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6760:	mov	w0, #0xfffffffe            	// #-2
    6764:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6768:	mov	w1, #0x3f50                	// #16208
    676c:	cmp	w0, w1
    6770:	b.eq	7520 <inflateBack@@ZLIB_1.2.0+0xefc>  // b.none
    6774:	mov	w1, #0x3f51                	// #16209
    6778:	cmp	w0, w1
    677c:	mov	w0, #0xfffffffe            	// #-2
    6780:	mov	w1, #0xfffffffd            	// #-3
    6784:	csel	w0, w0, w1, ne  // ne = any
    6788:	ldr	x1, [sp, #200]
    678c:	str	x1, [x23]
    6790:	str	w19, [x23, #8]
    6794:	ldp	x19, x20, [sp, #16]
    6798:	ldp	x21, x22, [sp, #32]
    679c:	ldp	x23, x24, [sp, #48]
    67a0:	ldp	x25, x26, [sp, #64]
    67a4:	ldp	x27, x28, [sp, #80]
    67a8:	ldp	x29, x30, [sp], #208
    67ac:	ret
    67b0:	cmp	w20, #0x2
    67b4:	b.hi	67f0 <inflateBack@@ZLIB_1.2.0+0x1cc>  // b.pmore
    67b8:	cbnz	w19, 67d0 <inflateBack@@ZLIB_1.2.0+0x1ac>
    67bc:	mov	x1, x26
    67c0:	mov	x0, x25
    67c4:	blr	x24
    67c8:	mov	w19, w0
    67cc:	cbz	w0, 6844 <inflateBack@@ZLIB_1.2.0+0x220>
    67d0:	sub	w19, w19, #0x1
    67d4:	ldr	x0, [sp, #200]
    67d8:	add	x1, x0, #0x1
    67dc:	str	x1, [sp, #200]
    67e0:	ldrb	w0, [x0]
    67e4:	lsl	x0, x0, x20
    67e8:	add	x21, x21, x0
    67ec:	add	w20, w20, #0x8
    67f0:	and	w0, w21, #0x1
    67f4:	str	w0, [x22, #12]
    67f8:	ubfx	w0, w21, #1, #2
    67fc:	cmp	w0, #0x2
    6800:	b.eq	6864 <inflateBack@@ZLIB_1.2.0+0x240>  // b.none
    6804:	cmp	w0, #0x2
    6808:	b.hi	6870 <inflateBack@@ZLIB_1.2.0+0x24c>  // b.pmore
    680c:	cbz	w0, 6850 <inflateBack@@ZLIB_1.2.0+0x22c>
    6810:	cmp	w0, #0x1
    6814:	b.ne	6858 <inflateBack@@ZLIB_1.2.0+0x234>  // b.any
    6818:	ldr	x1, [sp, #120]
    681c:	str	x1, [x22, #104]
    6820:	mov	w0, #0x9                   	// #9
    6824:	str	w0, [x22, #120]
    6828:	add	x0, x1, #0x800
    682c:	str	x0, [x22, #112]
    6830:	mov	w0, #0x5                   	// #5
    6834:	str	w0, [x22, #124]
    6838:	mov	w0, #0x3f48                	// #16200
    683c:	str	w0, [x22, #8]
    6840:	b	6858 <inflateBack@@ZLIB_1.2.0+0x234>
    6844:	str	xzr, [sp, #200]
    6848:	mov	w0, #0xfffffffb            	// #-5
    684c:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6850:	mov	w0, #0x3f41                	// #16193
    6854:	str	w0, [x22, #8]
    6858:	lsr	x21, x21, #3
    685c:	sub	w20, w20, #0x3
    6860:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6864:	mov	w0, #0x3f44                	// #16196
    6868:	str	w0, [x22, #8]
    686c:	b	6858 <inflateBack@@ZLIB_1.2.0+0x234>
    6870:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6874:	add	x0, x0, #0xa50
    6878:	str	x0, [x23, #48]
    687c:	mov	w0, #0x3f51                	// #16209
    6880:	str	w0, [x22, #8]
    6884:	b	6858 <inflateBack@@ZLIB_1.2.0+0x234>
    6888:	and	w0, w20, #0x7
    688c:	lsr	x21, x21, x0
    6890:	and	w20, w20, #0xfffffff8
    6894:	cmp	w20, #0x1f
    6898:	b.ls	68ec <inflateBack@@ZLIB_1.2.0+0x2c8>  // b.plast
    689c:	lsr	x0, x21, #16
    68a0:	eor	x0, x0, #0xffff
    68a4:	cmp	x0, w21, uxth
    68a8:	b.eq	6910 <inflateBack@@ZLIB_1.2.0+0x2ec>  // b.none
    68ac:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    68b0:	add	x0, x0, #0xa68
    68b4:	str	x0, [x23, #48]
    68b8:	mov	w0, #0x3f51                	// #16209
    68bc:	str	w0, [x22, #8]
    68c0:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    68c4:	sub	w19, w19, #0x1
    68c8:	ldr	x0, [sp, #200]
    68cc:	add	x1, x0, #0x1
    68d0:	str	x1, [sp, #200]
    68d4:	ldrb	w0, [x0]
    68d8:	lsl	x0, x0, x20
    68dc:	add	x21, x21, x0
    68e0:	add	w20, w20, #0x8
    68e4:	cmp	w20, #0x1f
    68e8:	b.hi	689c <inflateBack@@ZLIB_1.2.0+0x278>  // b.pmore
    68ec:	cbnz	w19, 68c4 <inflateBack@@ZLIB_1.2.0+0x2a0>
    68f0:	mov	x1, x26
    68f4:	mov	x0, x25
    68f8:	blr	x24
    68fc:	mov	w19, w0
    6900:	cbnz	w0, 68c4 <inflateBack@@ZLIB_1.2.0+0x2a0>
    6904:	str	xzr, [sp, #200]
    6908:	mov	w0, #0xfffffffb            	// #-5
    690c:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6910:	and	w21, w21, #0xffff
    6914:	str	w21, [x22, #92]
    6918:	cbnz	w21, 69a4 <inflateBack@@ZLIB_1.2.0+0x380>
    691c:	mov	w0, #0x3f3f                	// #16191
    6920:	str	w0, [x22, #8]
    6924:	mov	w20, #0x0                   	// #0
    6928:	mov	x21, #0x0                   	// #0
    692c:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6930:	cbnz	w27, 6958 <inflateBack@@ZLIB_1.2.0+0x334>
    6934:	ldr	x28, [x22, #72]
    6938:	ldr	w27, [x22, #60]
    693c:	str	w27, [x22, #64]
    6940:	mov	w2, w27
    6944:	mov	x1, x28
    6948:	ldr	x0, [sp, #104]
    694c:	ldr	x3, [sp, #96]
    6950:	blr	x3
    6954:	cbnz	w0, 7554 <inflateBack@@ZLIB_1.2.0+0xf30>
    6958:	cmp	w19, w27
    695c:	csel	w0, w19, w27, ls  // ls = plast
    6960:	cmp	w0, w21
    6964:	csel	w20, w0, w21, ls  // ls = plast
    6968:	csel	w21, w0, w21, ls  // ls = plast
    696c:	mov	x2, x21
    6970:	ldr	x1, [sp, #200]
    6974:	mov	x0, x28
    6978:	bl	23a0 <memcpy@plt>
    697c:	sub	w19, w19, w20
    6980:	ldr	x0, [sp, #200]
    6984:	add	x0, x0, x21
    6988:	str	x0, [sp, #200]
    698c:	sub	w27, w27, w20
    6990:	add	x28, x28, x21
    6994:	ldr	w21, [x22, #92]
    6998:	sub	w21, w21, w20
    699c:	str	w21, [x22, #92]
    69a0:	cbz	w21, 691c <inflateBack@@ZLIB_1.2.0+0x2f8>
    69a4:	cbnz	w19, 6930 <inflateBack@@ZLIB_1.2.0+0x30c>
    69a8:	mov	x1, x26
    69ac:	mov	x0, x25
    69b0:	blr	x24
    69b4:	mov	w19, w0
    69b8:	cbnz	w0, 6930 <inflateBack@@ZLIB_1.2.0+0x30c>
    69bc:	str	xzr, [sp, #200]
    69c0:	mov	w0, #0xfffffffb            	// #-5
    69c4:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    69c8:	sub	w19, w19, #0x1
    69cc:	ldr	x0, [sp, #200]
    69d0:	add	x1, x0, #0x1
    69d4:	str	x1, [sp, #200]
    69d8:	ldrb	w0, [x0]
    69dc:	lsl	x0, x0, x20
    69e0:	add	x21, x21, x0
    69e4:	add	w20, w20, #0x8
    69e8:	cmp	w20, #0xd
    69ec:	b.hi	66e4 <inflateBack@@ZLIB_1.2.0+0xc0>  // b.pmore
    69f0:	cbnz	w19, 69c8 <inflateBack@@ZLIB_1.2.0+0x3a4>
    69f4:	mov	x1, x26
    69f8:	mov	x0, x25
    69fc:	blr	x24
    6a00:	mov	w19, w0
    6a04:	cbnz	w0, 69c8 <inflateBack@@ZLIB_1.2.0+0x3a4>
    6a08:	str	xzr, [sp, #200]
    6a0c:	mov	w0, #0xfffffffb            	// #-5
    6a10:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6a14:	str	wzr, [x22, #140]
    6a18:	cmp	w20, #0x2
    6a1c:	b.hi	6a58 <inflateBack@@ZLIB_1.2.0+0x434>  // b.pmore
    6a20:	cbnz	w19, 6a38 <inflateBack@@ZLIB_1.2.0+0x414>
    6a24:	mov	x1, x26
    6a28:	mov	x0, x25
    6a2c:	blr	x24
    6a30:	mov	w19, w0
    6a34:	cbz	w0, 6b2c <inflateBack@@ZLIB_1.2.0+0x508>
    6a38:	sub	w19, w19, #0x1
    6a3c:	ldr	x0, [sp, #200]
    6a40:	add	x1, x0, #0x1
    6a44:	str	x1, [sp, #200]
    6a48:	ldrb	w0, [x0]
    6a4c:	lsl	x0, x0, x20
    6a50:	add	x21, x21, x0
    6a54:	add	w20, w20, #0x8
    6a58:	ldr	w1, [x22, #140]
    6a5c:	add	w0, w1, #0x1
    6a60:	str	w0, [x22, #140]
    6a64:	ldr	x2, [sp, #112]
    6a68:	ldrh	w1, [x2, w1, uxtw #1]
    6a6c:	add	x1, x22, x1, lsl #1
    6a70:	and	w2, w21, #0x7
    6a74:	strh	w2, [x1, #152]
    6a78:	lsr	x21, x21, #3
    6a7c:	sub	w20, w20, #0x3
    6a80:	ldr	w1, [x22, #128]
    6a84:	cmp	w0, w1
    6a88:	b.cc	6a18 <inflateBack@@ZLIB_1.2.0+0x3f4>  // b.lo, b.ul, b.last
    6a8c:	cmp	w0, #0x12
    6a90:	b.hi	6ac8 <inflateBack@@ZLIB_1.2.0+0x4a4>  // b.pmore
    6a94:	mov	w3, #0x12                  	// #18
    6a98:	sub	w3, w3, w0
    6a9c:	ldr	x1, [sp, #112]
    6aa0:	add	x0, x1, w0, uxtw #1
    6aa4:	mov	x1, #0x0                   	// #0
    6aa8:	ldrh	w2, [x0, x1, lsl #1]
    6aac:	add	x2, x22, x2, lsl #1
    6ab0:	strh	wzr, [x2, #152]
    6ab4:	cmp	x3, x1
    6ab8:	add	x1, x1, #0x1
    6abc:	b.ne	6aa8 <inflateBack@@ZLIB_1.2.0+0x484>  // b.any
    6ac0:	mov	w0, #0x13                  	// #19
    6ac4:	str	w0, [x22, #140]
    6ac8:	add	x0, x22, #0x558
    6acc:	str	x0, [sp, #168]
    6ad0:	str	x0, [x22, #144]
    6ad4:	str	x0, [x22, #104]
    6ad8:	mov	w0, #0x7                   	// #7
    6adc:	str	w0, [x22, #120]
    6ae0:	add	x1, x22, #0x98
    6ae4:	str	x1, [sp, #144]
    6ae8:	add	x3, x22, #0x90
    6aec:	str	x3, [sp, #152]
    6af0:	add	x4, x22, #0x78
    6af4:	str	x4, [sp, #176]
    6af8:	add	x0, x22, #0x318
    6afc:	str	x0, [sp, #160]
    6b00:	mov	x5, x0
    6b04:	mov	w2, #0x13                  	// #19
    6b08:	mov	w0, #0x0                   	// #0
    6b0c:	bl	a120 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    6b10:	cbz	w0, 6b38 <inflateBack@@ZLIB_1.2.0+0x514>
    6b14:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6b18:	add	x0, x0, #0xab0
    6b1c:	str	x0, [x23, #48]
    6b20:	mov	w0, #0x3f51                	// #16209
    6b24:	str	w0, [x22, #8]
    6b28:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6b2c:	str	xzr, [sp, #200]
    6b30:	mov	w0, #0xfffffffb            	// #-5
    6b34:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6b38:	str	wzr, [x22, #140]
    6b3c:	ldr	w0, [x22, #132]
    6b40:	ldr	w1, [x22, #136]
    6b44:	cmn	w0, w1
    6b48:	b.eq	6e60 <inflateBack@@ZLIB_1.2.0+0x83c>  // b.none
    6b4c:	str	x26, [sp, #136]
    6b50:	b	6c04 <inflateBack@@ZLIB_1.2.0+0x5e0>
    6b54:	sub	w19, w19, #0x1
    6b58:	ldr	x0, [sp, #200]
    6b5c:	add	x1, x0, #0x1
    6b60:	str	x1, [sp, #200]
    6b64:	ldrb	w0, [x0]
    6b68:	lsl	x0, x0, x20
    6b6c:	add	x21, x21, x0
    6b70:	add	w20, w20, #0x8
    6b74:	ldr	w0, [x22, #120]
    6b78:	mov	w1, #0xffffffff            	// #-1
    6b7c:	lsl	w0, w1, w0
    6b80:	bic	w0, w21, w0
    6b84:	ldr	x1, [x22, #104]
    6b88:	add	x0, x1, x0, lsl #2
    6b8c:	ldrb	w1, [x0, #1]
    6b90:	str	w1, [sp, #132]
    6b94:	cmp	w1, w20
    6b98:	b.ls	6bc0 <inflateBack@@ZLIB_1.2.0+0x59c>  // b.plast
    6b9c:	cbnz	w19, 6b54 <inflateBack@@ZLIB_1.2.0+0x530>
    6ba0:	ldr	x1, [sp, #136]
    6ba4:	mov	x0, x25
    6ba8:	blr	x24
    6bac:	mov	w19, w0
    6bb0:	cbnz	w0, 6b54 <inflateBack@@ZLIB_1.2.0+0x530>
    6bb4:	str	xzr, [sp, #200]
    6bb8:	mov	w0, #0xfffffffb            	// #-5
    6bbc:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6bc0:	ldrh	w0, [x0, #2]
    6bc4:	cmp	w0, #0xf
    6bc8:	b.hi	6c34 <inflateBack@@ZLIB_1.2.0+0x610>  // b.pmore
    6bcc:	lsr	x21, x21, x1
    6bd0:	ldr	w1, [sp, #132]
    6bd4:	sub	w20, w20, w1
    6bd8:	ldr	w1, [x22, #140]
    6bdc:	add	w2, w1, #0x1
    6be0:	str	w2, [x22, #140]
    6be4:	add	x1, x22, w1, uxtw #1
    6be8:	strh	w0, [x1, #152]
    6bec:	ldr	w0, [x22, #132]
    6bf0:	ldr	w1, [x22, #136]
    6bf4:	add	w0, w0, w1
    6bf8:	ldr	w1, [x22, #140]
    6bfc:	cmp	w1, w0
    6c00:	b.cs	6e60 <inflateBack@@ZLIB_1.2.0+0x83c>  // b.hs, b.nlast
    6c04:	ldr	w0, [x22, #120]
    6c08:	mov	w1, #0xffffffff            	// #-1
    6c0c:	lsl	w0, w1, w0
    6c10:	bic	w0, w21, w0
    6c14:	ldr	x1, [x22, #104]
    6c18:	add	x0, x1, x0, lsl #2
    6c1c:	ldrb	w1, [x0, #1]
    6c20:	str	w1, [sp, #132]
    6c24:	cmp	w1, w20
    6c28:	b.hi	6b9c <inflateBack@@ZLIB_1.2.0+0x578>  // b.pmore
    6c2c:	ldrh	w0, [x0, #2]
    6c30:	b	6bc4 <inflateBack@@ZLIB_1.2.0+0x5a0>
    6c34:	cmp	w0, #0x10
    6c38:	b.eq	6cb4 <inflateBack@@ZLIB_1.2.0+0x690>  // b.none
    6c3c:	cmp	w0, #0x11
    6c40:	b.eq	6d68 <inflateBack@@ZLIB_1.2.0+0x744>  // b.none
    6c44:	str	w1, [sp, #184]
    6c48:	add	w0, w1, #0x7
    6c4c:	str	w0, [sp, #188]
    6c50:	cmp	w0, w20
    6c54:	b.hi	6e24 <inflateBack@@ZLIB_1.2.0+0x800>  // b.pmore
    6c58:	ldrb	w0, [sp, #184]
    6c5c:	lsr	x21, x21, x0
    6c60:	and	w0, w21, #0x7f
    6c64:	add	w0, w0, #0xb
    6c68:	lsr	x21, x21, #7
    6c6c:	ldr	w1, [sp, #132]
    6c70:	sub	w20, w20, w1
    6c74:	sub	w20, w20, #0x7
    6c78:	mov	w3, #0x0                   	// #0
    6c7c:	ldr	w1, [x22, #140]
    6c80:	add	w0, w1, w0
    6c84:	ldr	w2, [x22, #132]
    6c88:	ldr	w4, [x22, #136]
    6c8c:	add	w2, w2, w4
    6c90:	cmp	w0, w2
    6c94:	b.hi	6e48 <inflateBack@@ZLIB_1.2.0+0x824>  // b.pmore
    6c98:	add	x2, x22, w1, uxtw #1
    6c9c:	strh	w3, [x2, #152]
    6ca0:	add	w1, w1, #0x1
    6ca4:	cmp	w0, w1
    6ca8:	b.ne	6c98 <inflateBack@@ZLIB_1.2.0+0x674>  // b.any
    6cac:	str	w0, [x22, #140]
    6cb0:	b	6bec <inflateBack@@ZLIB_1.2.0+0x5c8>
    6cb4:	str	w1, [sp, #184]
    6cb8:	add	w0, w1, #0x2
    6cbc:	str	w0, [sp, #188]
    6cc0:	cmp	w0, w20
    6cc4:	b.hi	6d2c <inflateBack@@ZLIB_1.2.0+0x708>  // b.pmore
    6cc8:	ldrb	w0, [sp, #184]
    6ccc:	lsr	x21, x21, x0
    6cd0:	ldr	w0, [sp, #132]
    6cd4:	sub	w20, w20, w0
    6cd8:	ldr	w0, [x22, #140]
    6cdc:	cbz	w0, 6d50 <inflateBack@@ZLIB_1.2.0+0x72c>
    6ce0:	sub	w0, w0, #0x1
    6ce4:	add	x0, x22, x0, lsl #1
    6ce8:	ldrh	w3, [x0, #152]
    6cec:	and	w0, w21, #0x3
    6cf0:	add	w0, w0, #0x3
    6cf4:	lsr	x21, x21, #2
    6cf8:	sub	w20, w20, #0x2
    6cfc:	b	6c7c <inflateBack@@ZLIB_1.2.0+0x658>
    6d00:	sub	w19, w19, #0x1
    6d04:	ldr	x0, [sp, #200]
    6d08:	add	x1, x0, #0x1
    6d0c:	str	x1, [sp, #200]
    6d10:	ldrb	w0, [x0]
    6d14:	lsl	x0, x0, x20
    6d18:	add	x21, x21, x0
    6d1c:	add	w20, w20, #0x8
    6d20:	ldr	w0, [sp, #188]
    6d24:	cmp	w20, w0
    6d28:	b.cs	6cc8 <inflateBack@@ZLIB_1.2.0+0x6a4>  // b.hs, b.nlast
    6d2c:	cbnz	w19, 6d00 <inflateBack@@ZLIB_1.2.0+0x6dc>
    6d30:	ldr	x1, [sp, #136]
    6d34:	mov	x0, x25
    6d38:	blr	x24
    6d3c:	mov	w19, w0
    6d40:	cbnz	w0, 6d00 <inflateBack@@ZLIB_1.2.0+0x6dc>
    6d44:	str	xzr, [sp, #200]
    6d48:	mov	w0, #0xfffffffb            	// #-5
    6d4c:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6d50:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6d54:	add	x0, x0, #0xad0
    6d58:	str	x0, [x23, #48]
    6d5c:	mov	w0, #0x3f51                	// #16209
    6d60:	str	w0, [x22, #8]
    6d64:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6d68:	str	w1, [sp, #184]
    6d6c:	add	w0, w1, #0x3
    6d70:	str	w0, [sp, #188]
    6d74:	cmp	w0, w20
    6d78:	b.hi	6dd4 <inflateBack@@ZLIB_1.2.0+0x7b0>  // b.pmore
    6d7c:	ldrb	w0, [sp, #184]
    6d80:	lsr	x21, x21, x0
    6d84:	and	w0, w21, #0x7
    6d88:	add	w0, w0, #0x3
    6d8c:	lsr	x21, x21, #3
    6d90:	mov	w1, #0xfffffffd            	// #-3
    6d94:	ldr	w2, [sp, #132]
    6d98:	sub	w1, w1, w2
    6d9c:	add	w20, w20, w1
    6da0:	mov	w3, #0x0                   	// #0
    6da4:	b	6c7c <inflateBack@@ZLIB_1.2.0+0x658>
    6da8:	sub	w19, w19, #0x1
    6dac:	ldr	x0, [sp, #200]
    6db0:	add	x1, x0, #0x1
    6db4:	str	x1, [sp, #200]
    6db8:	ldrb	w0, [x0]
    6dbc:	lsl	x0, x0, x20
    6dc0:	add	x21, x21, x0
    6dc4:	add	w20, w20, #0x8
    6dc8:	ldr	w0, [sp, #188]
    6dcc:	cmp	w20, w0
    6dd0:	b.cs	6d7c <inflateBack@@ZLIB_1.2.0+0x758>  // b.hs, b.nlast
    6dd4:	cbnz	w19, 6da8 <inflateBack@@ZLIB_1.2.0+0x784>
    6dd8:	ldr	x1, [sp, #136]
    6ddc:	mov	x0, x25
    6de0:	blr	x24
    6de4:	mov	w19, w0
    6de8:	cbnz	w0, 6da8 <inflateBack@@ZLIB_1.2.0+0x784>
    6dec:	str	xzr, [sp, #200]
    6df0:	mov	w0, #0xfffffffb            	// #-5
    6df4:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6df8:	sub	w19, w19, #0x1
    6dfc:	ldr	x0, [sp, #200]
    6e00:	add	x1, x0, #0x1
    6e04:	str	x1, [sp, #200]
    6e08:	ldrb	w0, [x0]
    6e0c:	lsl	x0, x0, x20
    6e10:	add	x21, x21, x0
    6e14:	add	w20, w20, #0x8
    6e18:	ldr	w0, [sp, #188]
    6e1c:	cmp	w20, w0
    6e20:	b.cs	6c58 <inflateBack@@ZLIB_1.2.0+0x634>  // b.hs, b.nlast
    6e24:	cbnz	w19, 6df8 <inflateBack@@ZLIB_1.2.0+0x7d4>
    6e28:	ldr	x1, [sp, #136]
    6e2c:	mov	x0, x25
    6e30:	blr	x24
    6e34:	mov	w19, w0
    6e38:	cbnz	w0, 6df8 <inflateBack@@ZLIB_1.2.0+0x7d4>
    6e3c:	str	xzr, [sp, #200]
    6e40:	mov	w0, #0xfffffffb            	// #-5
    6e44:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    6e48:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6e4c:	add	x0, x0, #0xad0
    6e50:	str	x0, [x23, #48]
    6e54:	mov	w0, #0x3f51                	// #16209
    6e58:	str	w0, [x22, #8]
    6e5c:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6e60:	ldr	w1, [x22, #8]
    6e64:	mov	w0, #0x3f51                	// #16209
    6e68:	cmp	w1, w0
    6e6c:	b.eq	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>  // b.none
    6e70:	ldrh	w0, [x22, #664]
    6e74:	cbnz	w0, 6e90 <inflateBack@@ZLIB_1.2.0+0x86c>
    6e78:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6e7c:	add	x0, x0, #0xaf0
    6e80:	str	x0, [x23, #48]
    6e84:	mov	w0, #0x3f51                	// #16209
    6e88:	str	w0, [x22, #8]
    6e8c:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6e90:	ldr	x0, [sp, #168]
    6e94:	str	x0, [x22, #144]
    6e98:	str	x0, [x22, #104]
    6e9c:	mov	w0, #0x9                   	// #9
    6ea0:	str	w0, [x22, #120]
    6ea4:	ldr	x5, [sp, #160]
    6ea8:	ldr	x4, [sp, #176]
    6eac:	ldr	x3, [sp, #152]
    6eb0:	ldr	w2, [x22, #132]
    6eb4:	ldr	x1, [sp, #144]
    6eb8:	mov	w0, #0x1                   	// #1
    6ebc:	bl	a120 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    6ec0:	cbz	w0, 6edc <inflateBack@@ZLIB_1.2.0+0x8b8>
    6ec4:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6ec8:	add	x0, x0, #0xb18
    6ecc:	str	x0, [x23, #48]
    6ed0:	mov	w0, #0x3f51                	// #16209
    6ed4:	str	w0, [x22, #8]
    6ed8:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6edc:	ldr	x0, [x22, #144]
    6ee0:	str	x0, [x22, #112]
    6ee4:	mov	x4, x22
    6ee8:	mov	w0, #0x6                   	// #6
    6eec:	str	w0, [x4, #124]!
    6ef0:	ldr	w1, [x22, #132]
    6ef4:	ldr	x5, [sp, #160]
    6ef8:	ldr	x3, [sp, #152]
    6efc:	ldr	w2, [x22, #136]
    6f00:	ldr	x0, [sp, #144]
    6f04:	add	x1, x0, x1, lsl #1
    6f08:	mov	w0, #0x2                   	// #2
    6f0c:	bl	a120 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    6f10:	cbz	w0, 6f2c <inflateBack@@ZLIB_1.2.0+0x908>
    6f14:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    6f18:	add	x0, x0, #0xb38
    6f1c:	str	x0, [x23, #48]
    6f20:	mov	w0, #0x3f51                	// #16209
    6f24:	str	w0, [x22, #8]
    6f28:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6f2c:	mov	w0, #0x3f48                	// #16200
    6f30:	str	w0, [x22, #8]
    6f34:	cmp	w27, #0x101
    6f38:	ccmp	w19, #0x5, #0x0, hi  // hi = pmore
    6f3c:	b.ls	6f9c <inflateBack@@ZLIB_1.2.0+0x978>  // b.plast
    6f40:	str	x28, [x23, #24]
    6f44:	str	w27, [x23, #32]
    6f48:	ldr	x0, [sp, #200]
    6f4c:	str	x0, [x23]
    6f50:	str	w19, [x23, #8]
    6f54:	str	x21, [x22, #80]
    6f58:	str	w20, [x22, #88]
    6f5c:	ldr	w1, [x22, #60]
    6f60:	ldr	w0, [x22, #64]
    6f64:	cmp	w0, w1
    6f68:	b.cs	6f74 <inflateBack@@ZLIB_1.2.0+0x950>  // b.hs, b.nlast
    6f6c:	sub	w27, w1, w27
    6f70:	str	w27, [x22, #64]
    6f74:	mov	x0, x23
    6f78:	bl	7624 <inflateBackEnd@@ZLIB_1.2.0+0x58>
    6f7c:	ldr	x28, [x23, #24]
    6f80:	ldr	w27, [x23, #32]
    6f84:	ldr	x0, [x23]
    6f88:	str	x0, [sp, #200]
    6f8c:	ldr	w19, [x23, #8]
    6f90:	ldr	x21, [x22, #80]
    6f94:	ldr	w20, [x22, #88]
    6f98:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    6f9c:	ldr	w1, [x22, #120]
    6fa0:	mov	w0, #0xffffffff            	// #-1
    6fa4:	lsl	w0, w0, w1
    6fa8:	bic	w0, w21, w0
    6fac:	lsl	x0, x0, #2
    6fb0:	ldr	x2, [x22, #104]
    6fb4:	add	x3, x2, x0
    6fb8:	ldrb	w1, [x3, #1]
    6fbc:	str	w1, [sp, #132]
    6fc0:	cmp	w20, w1
    6fc4:	b.cc	701c <inflateBack@@ZLIB_1.2.0+0x9f8>  // b.lo, b.ul, b.last
    6fc8:	ldrb	w2, [x2, x0]
    6fcc:	ldrh	w0, [x3, #2]
    6fd0:	b	7048 <inflateBack@@ZLIB_1.2.0+0xa24>
    6fd4:	sub	w19, w19, #0x1
    6fd8:	ldr	x0, [sp, #200]
    6fdc:	add	x1, x0, #0x1
    6fe0:	str	x1, [sp, #200]
    6fe4:	ldrb	w0, [x0]
    6fe8:	lsl	x0, x0, x20
    6fec:	add	x21, x21, x0
    6ff0:	add	w20, w20, #0x8
    6ff4:	ldr	w0, [x22, #120]
    6ff8:	mov	w1, #0xffffffff            	// #-1
    6ffc:	lsl	w0, w1, w0
    7000:	bic	w0, w21, w0
    7004:	ldr	x1, [x22, #104]
    7008:	add	x0, x1, x0, lsl #2
    700c:	ldrb	w1, [x0, #1]
    7010:	str	w1, [sp, #132]
    7014:	cmp	w1, w20
    7018:	b.ls	7040 <inflateBack@@ZLIB_1.2.0+0xa1c>  // b.plast
    701c:	cbnz	w19, 6fd4 <inflateBack@@ZLIB_1.2.0+0x9b0>
    7020:	mov	x1, x26
    7024:	mov	x0, x25
    7028:	blr	x24
    702c:	mov	w19, w0
    7030:	cbnz	w0, 6fd4 <inflateBack@@ZLIB_1.2.0+0x9b0>
    7034:	str	xzr, [sp, #200]
    7038:	mov	w0, #0xfffffffb            	// #-5
    703c:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    7040:	ldrb	w2, [x0]
    7044:	ldrh	w0, [x0, #2]
    7048:	cbz	w2, 7580 <inflateBack@@ZLIB_1.2.0+0xf5c>
    704c:	tst	w2, #0xf0
    7050:	b.eq	7070 <inflateBack@@ZLIB_1.2.0+0xa4c>  // b.none
    7054:	lsr	x21, x21, x1
    7058:	sub	w20, w20, w1
    705c:	str	w0, [x22, #92]
    7060:	tbz	w2, #5, 7160 <inflateBack@@ZLIB_1.2.0+0xb3c>
    7064:	mov	w0, #0x3f3f                	// #16191
    7068:	str	w0, [x22, #8]
    706c:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    7070:	str	w0, [sp, #144]
    7074:	str	w1, [sp, #136]
    7078:	add	w2, w2, w1
    707c:	mov	w3, #0xffffffff            	// #-1
    7080:	lsl	w2, w3, w2
    7084:	mvn	w3, w2
    7088:	str	w3, [sp, #152]
    708c:	bic	w2, w21, w2
    7090:	lsr	w2, w2, w1
    7094:	add	w0, w2, w0
    7098:	lsl	x0, x0, #2
    709c:	ldr	x2, [x22, #104]
    70a0:	add	x4, x2, x0
    70a4:	ldrb	w3, [x4, #1]
    70a8:	add	w1, w3, w1
    70ac:	cmp	w1, w20
    70b0:	b.hi	7110 <inflateBack@@ZLIB_1.2.0+0xaec>  // b.pmore
    70b4:	ldrb	w2, [x2, x0]
    70b8:	ldrh	w0, [x4, #2]
    70bc:	b	713c <inflateBack@@ZLIB_1.2.0+0xb18>
    70c0:	sub	w19, w19, #0x1
    70c4:	ldr	x0, [sp, #200]
    70c8:	add	x1, x0, #0x1
    70cc:	str	x1, [sp, #200]
    70d0:	ldrb	w0, [x0]
    70d4:	lsl	x0, x0, x20
    70d8:	add	x21, x21, x0
    70dc:	add	w20, w20, #0x8
    70e0:	ldr	w0, [sp, #152]
    70e4:	and	w0, w0, w21
    70e8:	ldr	w2, [sp, #136]
    70ec:	lsr	w0, w0, w2
    70f0:	ldr	w1, [sp, #144]
    70f4:	add	w0, w0, w1
    70f8:	ldr	x1, [x22, #104]
    70fc:	add	x0, x1, x0, lsl #2
    7100:	ldrb	w3, [x0, #1]
    7104:	add	w1, w3, w2
    7108:	cmp	w1, w20
    710c:	b.ls	7134 <inflateBack@@ZLIB_1.2.0+0xb10>  // b.plast
    7110:	cbnz	w19, 70c0 <inflateBack@@ZLIB_1.2.0+0xa9c>
    7114:	mov	x1, x26
    7118:	mov	x0, x25
    711c:	blr	x24
    7120:	mov	w19, w0
    7124:	cbnz	w0, 70c0 <inflateBack@@ZLIB_1.2.0+0xa9c>
    7128:	str	xzr, [sp, #200]
    712c:	mov	w0, #0xfffffffb            	// #-5
    7130:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    7134:	ldrb	w2, [x0]
    7138:	ldrh	w0, [x0, #2]
    713c:	ldrb	w1, [sp, #136]
    7140:	lsr	x21, x21, x1
    7144:	ldr	w1, [sp, #132]
    7148:	sub	w20, w20, w1
    714c:	lsr	x21, x21, x3
    7150:	sub	w20, w20, w3
    7154:	str	w0, [x22, #92]
    7158:	cbnz	w2, 7060 <inflateBack@@ZLIB_1.2.0+0xa3c>
    715c:	b	758c <inflateBack@@ZLIB_1.2.0+0xf68>
    7160:	tbz	w2, #6, 717c <inflateBack@@ZLIB_1.2.0+0xb58>
    7164:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    7168:	add	x0, x0, #0xb50
    716c:	str	x0, [x23, #48]
    7170:	mov	w0, #0x3f51                	// #16209
    7174:	str	w0, [x22, #8]
    7178:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    717c:	and	w2, w2, #0xf
    7180:	str	w2, [x22, #100]
    7184:	cbz	w2, 71b0 <inflateBack@@ZLIB_1.2.0+0xb8c>
    7188:	cmp	w2, w20
    718c:	b.hi	7214 <inflateBack@@ZLIB_1.2.0+0xbf0>  // b.pmore
    7190:	mov	w0, #0xffffffff            	// #-1
    7194:	lsl	w0, w0, w2
    7198:	bic	w0, w21, w0
    719c:	ldr	w1, [x22, #92]
    71a0:	add	w0, w1, w0
    71a4:	str	w0, [x22, #92]
    71a8:	lsr	x21, x21, x2
    71ac:	sub	w20, w20, w2
    71b0:	ldr	w1, [x22, #124]
    71b4:	mov	w0, #0xffffffff            	// #-1
    71b8:	lsl	w0, w0, w1
    71bc:	bic	w0, w21, w0
    71c0:	lsl	x0, x0, #2
    71c4:	ldr	x2, [x22, #112]
    71c8:	add	x3, x2, x0
    71cc:	ldrb	w1, [x3, #1]
    71d0:	str	w1, [sp, #132]
    71d4:	cmp	w20, w1
    71d8:	b.cc	7280 <inflateBack@@ZLIB_1.2.0+0xc5c>  // b.lo, b.ul, b.last
    71dc:	ldrb	w2, [x2, x0]
    71e0:	ldrh	w3, [x3, #2]
    71e4:	b	72ac <inflateBack@@ZLIB_1.2.0+0xc88>
    71e8:	sub	w19, w19, #0x1
    71ec:	ldr	x0, [sp, #200]
    71f0:	add	x1, x0, #0x1
    71f4:	str	x1, [sp, #200]
    71f8:	ldrb	w0, [x0]
    71fc:	lsl	x0, x0, x20
    7200:	add	x21, x21, x0
    7204:	add	w20, w20, #0x8
    7208:	ldr	w2, [x22, #100]
    720c:	cmp	w2, w20
    7210:	b.ls	7190 <inflateBack@@ZLIB_1.2.0+0xb6c>  // b.plast
    7214:	cbnz	w19, 71e8 <inflateBack@@ZLIB_1.2.0+0xbc4>
    7218:	mov	x1, x26
    721c:	mov	x0, x25
    7220:	blr	x24
    7224:	mov	w19, w0
    7228:	cbnz	w0, 71e8 <inflateBack@@ZLIB_1.2.0+0xbc4>
    722c:	str	xzr, [sp, #200]
    7230:	mov	w0, #0xfffffffb            	// #-5
    7234:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    7238:	sub	w19, w19, #0x1
    723c:	ldr	x0, [sp, #200]
    7240:	add	x1, x0, #0x1
    7244:	str	x1, [sp, #200]
    7248:	ldrb	w0, [x0]
    724c:	lsl	x0, x0, x20
    7250:	add	x21, x21, x0
    7254:	add	w20, w20, #0x8
    7258:	ldr	w0, [x22, #124]
    725c:	mov	w1, #0xffffffff            	// #-1
    7260:	lsl	w0, w1, w0
    7264:	bic	w0, w21, w0
    7268:	ldr	x1, [x22, #112]
    726c:	add	x0, x1, x0, lsl #2
    7270:	ldrb	w1, [x0, #1]
    7274:	str	w1, [sp, #132]
    7278:	cmp	w1, w20
    727c:	b.ls	72a4 <inflateBack@@ZLIB_1.2.0+0xc80>  // b.plast
    7280:	cbnz	w19, 7238 <inflateBack@@ZLIB_1.2.0+0xc14>
    7284:	mov	x1, x26
    7288:	mov	x0, x25
    728c:	blr	x24
    7290:	mov	w19, w0
    7294:	cbnz	w0, 7238 <inflateBack@@ZLIB_1.2.0+0xc14>
    7298:	str	xzr, [sp, #200]
    729c:	mov	w0, #0xfffffffb            	// #-5
    72a0:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    72a4:	ldrb	w2, [x0]
    72a8:	ldrh	w3, [x0, #2]
    72ac:	tst	w2, #0xf0
    72b0:	b.eq	72d8 <inflateBack@@ZLIB_1.2.0+0xcb4>  // b.none
    72b4:	lsr	x21, x21, x1
    72b8:	sub	w20, w20, w1
    72bc:	tbz	w2, #6, 73bc <inflateBack@@ZLIB_1.2.0+0xd98>
    72c0:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    72c4:	add	x0, x0, #0xb70
    72c8:	str	x0, [x23, #48]
    72cc:	mov	w0, #0x3f51                	// #16209
    72d0:	str	w0, [x22, #8]
    72d4:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    72d8:	str	w3, [sp, #144]
    72dc:	mov	w4, w1
    72e0:	str	w1, [sp, #136]
    72e4:	add	w0, w2, w1
    72e8:	mov	w2, #0xffffffff            	// #-1
    72ec:	lsl	w0, w2, w0
    72f0:	mvn	w2, w0
    72f4:	str	w2, [sp, #152]
    72f8:	bic	w0, w21, w0
    72fc:	lsr	w0, w0, w1
    7300:	add	w0, w0, w3
    7304:	lsl	x3, x0, #2
    7308:	ldr	x2, [x22, #112]
    730c:	add	x0, x2, x0, lsl #2
    7310:	ldrb	w1, [x0, #1]
    7314:	add	w4, w1, w4
    7318:	cmp	w4, w20
    731c:	b.hi	737c <inflateBack@@ZLIB_1.2.0+0xd58>  // b.pmore
    7320:	ldrb	w2, [x2, x3]
    7324:	ldrh	w3, [x0, #2]
    7328:	b	73a8 <inflateBack@@ZLIB_1.2.0+0xd84>
    732c:	sub	w19, w19, #0x1
    7330:	ldr	x0, [sp, #200]
    7334:	add	x1, x0, #0x1
    7338:	str	x1, [sp, #200]
    733c:	ldrb	w0, [x0]
    7340:	lsl	x0, x0, x20
    7344:	add	x21, x21, x0
    7348:	add	w20, w20, #0x8
    734c:	ldr	w0, [sp, #152]
    7350:	and	w0, w0, w21
    7354:	ldr	w2, [sp, #136]
    7358:	lsr	w0, w0, w2
    735c:	ldr	w1, [sp, #144]
    7360:	add	w0, w0, w1
    7364:	ldr	x1, [x22, #112]
    7368:	add	x0, x1, x0, lsl #2
    736c:	ldrb	w1, [x0, #1]
    7370:	add	w2, w1, w2
    7374:	cmp	w2, w20
    7378:	b.ls	73a0 <inflateBack@@ZLIB_1.2.0+0xd7c>  // b.plast
    737c:	cbnz	w19, 732c <inflateBack@@ZLIB_1.2.0+0xd08>
    7380:	mov	x1, x26
    7384:	mov	x0, x25
    7388:	blr	x24
    738c:	mov	w19, w0
    7390:	cbnz	w0, 732c <inflateBack@@ZLIB_1.2.0+0xd08>
    7394:	str	xzr, [sp, #200]
    7398:	mov	w0, #0xfffffffb            	// #-5
    739c:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    73a0:	ldrb	w2, [x0]
    73a4:	ldrh	w3, [x0, #2]
    73a8:	ldrb	w0, [sp, #136]
    73ac:	lsr	x21, x21, x0
    73b0:	ldr	w0, [sp, #132]
    73b4:	sub	w20, w20, w0
    73b8:	b	72b4 <inflateBack@@ZLIB_1.2.0+0xc90>
    73bc:	str	w3, [x22, #96]
    73c0:	and	w0, w2, #0xf
    73c4:	str	w0, [x22, #100]
    73c8:	cbnz	w0, 7404 <inflateBack@@ZLIB_1.2.0+0xde0>
    73cc:	ldr	w1, [x22, #96]
    73d0:	ldr	w0, [x22, #60]
    73d4:	ldr	w2, [x22, #64]
    73d8:	cmp	w0, w2
    73dc:	csel	w2, w27, wzr, hi  // hi = pmore
    73e0:	sub	w0, w0, w2
    73e4:	cmp	w1, w0
    73e8:	b.ls	74e4 <inflateBack@@ZLIB_1.2.0+0xec0>  // b.plast
    73ec:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    73f0:	add	x0, x0, #0xb88
    73f4:	str	x0, [x23, #48]
    73f8:	mov	w0, #0x3f51                	// #16209
    73fc:	str	w0, [x22, #8]
    7400:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    7404:	cmp	w0, w20
    7408:	b.hi	745c <inflateBack@@ZLIB_1.2.0+0xe38>  // b.pmore
    740c:	mov	w1, #0xffffffff            	// #-1
    7410:	lsl	w1, w1, w0
    7414:	bic	w1, w21, w1
    7418:	ldr	w2, [x22, #96]
    741c:	add	w1, w2, w1
    7420:	str	w1, [x22, #96]
    7424:	lsr	x21, x21, x0
    7428:	sub	w20, w20, w0
    742c:	b	73cc <inflateBack@@ZLIB_1.2.0+0xda8>
    7430:	sub	w19, w19, #0x1
    7434:	ldr	x0, [sp, #200]
    7438:	add	x1, x0, #0x1
    743c:	str	x1, [sp, #200]
    7440:	ldrb	w0, [x0]
    7444:	lsl	x0, x0, x20
    7448:	add	x21, x21, x0
    744c:	add	w20, w20, #0x8
    7450:	ldr	w0, [x22, #100]
    7454:	cmp	w0, w20
    7458:	b.ls	740c <inflateBack@@ZLIB_1.2.0+0xde8>  // b.plast
    745c:	cbnz	w19, 7430 <inflateBack@@ZLIB_1.2.0+0xe0c>
    7460:	mov	x1, x26
    7464:	mov	x0, x25
    7468:	blr	x24
    746c:	mov	w19, w0
    7470:	cbnz	w0, 7430 <inflateBack@@ZLIB_1.2.0+0xe0c>
    7474:	str	xzr, [sp, #200]
    7478:	mov	w0, #0xfffffffb            	// #-5
    747c:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    7480:	ldr	w2, [x22, #60]
    7484:	ldr	w0, [x22, #96]
    7488:	sub	w3, w2, w0
    748c:	cmp	w27, w3
    7490:	b.ls	7514 <inflateBack@@ZLIB_1.2.0+0xef0>  // b.plast
    7494:	add	x3, x28, w3, uxtw
    7498:	sub	w2, w0, w2
    749c:	add	w2, w2, w27
    74a0:	ldr	w0, [x22, #92]
    74a4:	cmp	w0, w2
    74a8:	csel	w2, w0, w2, ls  // ls = plast
    74ac:	sub	w0, w0, w2
    74b0:	str	w0, [x22, #92]
    74b4:	sub	w27, w27, w2
    74b8:	sub	w2, w2, #0x1
    74bc:	add	x4, x2, #0x1
    74c0:	mov	x0, #0x0                   	// #0
    74c4:	ldrb	w1, [x3, x0]
    74c8:	strb	w1, [x28, x0]
    74cc:	cmp	x2, x0
    74d0:	add	x0, x0, #0x1
    74d4:	b.ne	74c4 <inflateBack@@ZLIB_1.2.0+0xea0>  // b.any
    74d8:	add	x28, x28, x4
    74dc:	ldr	w0, [x22, #92]
    74e0:	cbz	w0, 66b0 <inflateBack@@ZLIB_1.2.0+0x8c>
    74e4:	cbnz	w27, 7480 <inflateBack@@ZLIB_1.2.0+0xe5c>
    74e8:	ldr	x28, [x22, #72]
    74ec:	ldr	w27, [x22, #60]
    74f0:	str	w27, [x22, #64]
    74f4:	mov	w2, w27
    74f8:	mov	x1, x28
    74fc:	ldr	x0, [sp, #104]
    7500:	ldr	x3, [sp, #96]
    7504:	blr	x3
    7508:	cbz	w0, 7480 <inflateBack@@ZLIB_1.2.0+0xe5c>
    750c:	mov	w0, #0xfffffffb            	// #-5
    7510:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    7514:	sub	x3, x28, w0, uxtw
    7518:	mov	w2, w27
    751c:	b	74a0 <inflateBack@@ZLIB_1.2.0+0xe7c>
    7520:	ldr	w2, [x22, #60]
    7524:	mov	w0, #0x1                   	// #1
    7528:	cmp	w2, w27
    752c:	b.ls	6788 <inflateBack@@ZLIB_1.2.0+0x164>  // b.plast
    7530:	sub	w2, w2, w27
    7534:	ldr	x1, [x22, #72]
    7538:	ldr	x0, [sp, #104]
    753c:	ldr	x3, [sp, #96]
    7540:	blr	x3
    7544:	cmp	w0, #0x0
    7548:	mov	w0, #0xfffffffb            	// #-5
    754c:	csinc	w0, w0, wzr, ne  // ne = any
    7550:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    7554:	mov	w0, #0xfffffffb            	// #-5
    7558:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    755c:	mov	w0, #0xfffffffb            	// #-5
    7560:	b	6788 <inflateBack@@ZLIB_1.2.0+0x164>
    7564:	mov	w0, #0xfffffffe            	// #-2
    7568:	b	67a8 <inflateBack@@ZLIB_1.2.0+0x184>
    756c:	mov	w0, #0xfffffffe            	// #-2
    7570:	ldp	x21, x22, [sp, #32]
    7574:	ldp	x23, x24, [sp, #48]
    7578:	ldp	x25, x26, [sp, #64]
    757c:	b	67a8 <inflateBack@@ZLIB_1.2.0+0x184>
    7580:	lsr	x21, x21, x1
    7584:	sub	w20, w20, w1
    7588:	str	w0, [x22, #92]
    758c:	cbnz	w27, 75b4 <inflateBack@@ZLIB_1.2.0+0xf90>
    7590:	ldr	x28, [x22, #72]
    7594:	ldr	w27, [x22, #60]
    7598:	str	w27, [x22, #64]
    759c:	mov	w2, w27
    75a0:	mov	x1, x28
    75a4:	ldr	x0, [sp, #104]
    75a8:	ldr	x3, [sp, #96]
    75ac:	blr	x3
    75b0:	cbnz	w0, 755c <inflateBack@@ZLIB_1.2.0+0xf38>
    75b4:	ldr	w0, [x22, #92]
    75b8:	strb	w0, [x28], #1
    75bc:	sub	w27, w27, #0x1
    75c0:	mov	w0, #0x3f48                	// #16200
    75c4:	str	w0, [x22, #8]
    75c8:	b	66b0 <inflateBack@@ZLIB_1.2.0+0x8c>

00000000000075cc <inflateBackEnd@@ZLIB_1.2.0>:
    75cc:	cbz	x0, 760c <inflateBackEnd@@ZLIB_1.2.0+0x40>
    75d0:	stp	x29, x30, [sp, #-32]!
    75d4:	mov	x29, sp
    75d8:	str	x19, [sp, #16]
    75dc:	mov	x19, x0
    75e0:	ldr	x1, [x0, #56]
    75e4:	cbz	x1, 7614 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    75e8:	ldr	x2, [x0, #72]
    75ec:	cbz	x2, 761c <inflateBackEnd@@ZLIB_1.2.0+0x50>
    75f0:	ldr	x0, [x0, #80]
    75f4:	blr	x2
    75f8:	str	xzr, [x19, #56]
    75fc:	mov	w0, #0x0                   	// #0
    7600:	ldr	x19, [sp, #16]
    7604:	ldp	x29, x30, [sp], #32
    7608:	ret
    760c:	mov	w0, #0xfffffffe            	// #-2
    7610:	ret
    7614:	mov	w0, #0xfffffffe            	// #-2
    7618:	b	7600 <inflateBackEnd@@ZLIB_1.2.0+0x34>
    761c:	mov	w0, #0xfffffffe            	// #-2
    7620:	b	7600 <inflateBackEnd@@ZLIB_1.2.0+0x34>
    7624:	stp	x29, x30, [sp, #-96]!
    7628:	mov	x29, sp
    762c:	stp	x19, x20, [sp, #16]
    7630:	stp	x21, x22, [sp, #32]
    7634:	stp	x23, x24, [sp, #48]
    7638:	ldr	x10, [x0, #56]
    763c:	ldr	x9, [x0]
    7640:	ldr	w13, [x0, #8]
    7644:	sub	w13, w13, #0x5
    7648:	add	x13, x9, x13
    764c:	ldr	x7, [x0, #24]
    7650:	ldr	w12, [x0, #32]
    7654:	sub	w16, w1, w12
    7658:	sub	x16, x7, x16
    765c:	sub	w12, w12, #0x101
    7660:	add	x12, x7, x12
    7664:	ldr	w18, [x10, #60]
    7668:	ldr	w21, [x10, #64]
    766c:	ldr	w17, [x10, #68]
    7670:	ldr	x20, [x10, #72]
    7674:	ldr	x4, [x10, #80]
    7678:	ldr	w5, [x10, #88]
    767c:	ldr	x6, [x10, #104]
    7680:	ldr	x11, [x10, #112]
    7684:	ldr	w14, [x10, #120]
    7688:	mov	w15, #0x1                   	// #1
    768c:	lsl	w14, w15, w14
    7690:	ldr	w1, [x10, #124]
    7694:	lsl	w15, w15, w1
    7698:	sub	w14, w14, #0x1
    769c:	sub	w15, w15, #0x1
    76a0:	mov	w19, #0xffffffff            	// #-1
    76a4:	add	w22, w18, w17
    76a8:	add	w30, w17, w19
    76ac:	add	x23, x30, #0x1
    76b0:	mov	w8, #0x1                   	// #1
    76b4:	b	76c8 <inflateBackEnd@@ZLIB_1.2.0+0xfc>
    76b8:	strb	w24, [x7], #1
    76bc:	cmp	x9, x13
    76c0:	ccmp	x7, x12, #0x2, cc  // cc = lo, ul, last
    76c4:	b.cs	7854 <inflateBackEnd@@ZLIB_1.2.0+0x288>  // b.hs, b.nlast
    76c8:	cmp	w5, #0xe
    76cc:	b.hi	76f4 <inflateBackEnd@@ZLIB_1.2.0+0x128>  // b.pmore
    76d0:	ldrb	w1, [x9, #1]
    76d4:	add	w2, w5, #0x8
    76d8:	lsl	x1, x1, x2
    76dc:	ldrb	w2, [x9]
    76e0:	lsl	x2, x2, x5
    76e4:	add	x1, x1, x2
    76e8:	add	x4, x4, x1
    76ec:	add	w5, w5, #0x10
    76f0:	add	x9, x9, #0x2
    76f4:	and	x1, x14, x4
    76f8:	lsl	x1, x1, #2
    76fc:	add	x2, x6, x1
    7700:	ldrb	w3, [x6, x1]
    7704:	ldrh	w24, [x2, #2]
    7708:	ldrb	w1, [x2, #1]
    770c:	lsr	x4, x4, x1
    7710:	sub	w5, w5, w1
    7714:	mov	w2, w3
    7718:	cbz	w3, 76b8 <inflateBackEnd@@ZLIB_1.2.0+0xec>
    771c:	tbnz	w3, #4, 7770 <inflateBackEnd@@ZLIB_1.2.0+0x1a4>
    7720:	tbnz	w3, #6, 7760 <inflateBackEnd@@ZLIB_1.2.0+0x194>
    7724:	lsl	w1, w8, w2
    7728:	sub	w1, w1, #0x1
    772c:	and	x1, x1, x4
    7730:	add	x1, x1, w24, uxth
    7734:	lsl	x1, x1, #2
    7738:	add	x2, x6, x1
    773c:	ldrb	w3, [x6, x1]
    7740:	ldrh	w24, [x2, #2]
    7744:	ldrb	w2, [x2, #1]
    7748:	lsr	x4, x4, x2
    774c:	sub	w5, w5, w2
    7750:	mov	w2, w3
    7754:	cbz	w3, 76b8 <inflateBackEnd@@ZLIB_1.2.0+0xec>
    7758:	tbnz	w3, #4, 7770 <inflateBackEnd@@ZLIB_1.2.0+0x1a4>
    775c:	tbz	w3, #6, 7724 <inflateBackEnd@@ZLIB_1.2.0+0x158>
    7760:	tbz	w3, #5, 7b60 <inflateBackEnd@@ZLIB_1.2.0+0x594>
    7764:	mov	w1, #0x3f3f                	// #16191
    7768:	str	w1, [x10, #8]
    776c:	b	7854 <inflateBackEnd@@ZLIB_1.2.0+0x288>
    7770:	stp	x25, x26, [sp, #64]
    7774:	mov	w1, w24
    7778:	ands	w3, w3, #0xf
    777c:	b.eq	77ac <inflateBackEnd@@ZLIB_1.2.0+0x1e0>  // b.none
    7780:	cmp	w3, w5
    7784:	b.ls	7798 <inflateBackEnd@@ZLIB_1.2.0+0x1cc>  // b.plast
    7788:	ldrb	w2, [x9], #1
    778c:	lsl	x2, x2, x5
    7790:	add	x4, x4, x2
    7794:	add	w5, w5, #0x8
    7798:	lsl	w2, w19, w3
    779c:	bic	w2, w4, w2
    77a0:	add	w1, w1, w2
    77a4:	lsr	x4, x4, x3
    77a8:	sub	w5, w5, w3
    77ac:	cmp	w5, #0xe
    77b0:	b.hi	77d8 <inflateBackEnd@@ZLIB_1.2.0+0x20c>  // b.pmore
    77b4:	ldrb	w2, [x9, #1]
    77b8:	add	w3, w5, #0x8
    77bc:	lsl	x2, x2, x3
    77c0:	ldrb	w3, [x9]
    77c4:	lsl	x3, x3, x5
    77c8:	add	x2, x2, x3
    77cc:	add	x4, x4, x2
    77d0:	add	w5, w5, #0x10
    77d4:	add	x9, x9, #0x2
    77d8:	and	x2, x15, x4
    77dc:	lsl	x2, x2, #2
    77e0:	add	x3, x11, x2
    77e4:	ldrb	w24, [x11, x2]
    77e8:	ldrh	w25, [x3, #2]
    77ec:	ldrb	w2, [x3, #1]
    77f0:	lsr	x4, x4, x2
    77f4:	sub	w5, w5, w2
    77f8:	mov	w3, w24
    77fc:	tbnz	w24, #4, 78cc <inflateBackEnd@@ZLIB_1.2.0+0x300>
    7800:	tbnz	w24, #6, 783c <inflateBackEnd@@ZLIB_1.2.0+0x270>
    7804:	lsl	w2, w8, w3
    7808:	sub	w2, w2, #0x1
    780c:	and	x2, x2, x4
    7810:	add	x2, x2, w25, uxth
    7814:	lsl	x2, x2, #2
    7818:	add	x3, x11, x2
    781c:	ldrb	w24, [x11, x2]
    7820:	ldrh	w25, [x3, #2]
    7824:	ldrb	w3, [x3, #1]
    7828:	lsr	x4, x4, x3
    782c:	sub	w5, w5, w3
    7830:	mov	w3, w24
    7834:	tbnz	w24, #4, 78cc <inflateBackEnd@@ZLIB_1.2.0+0x300>
    7838:	tbz	w24, #6, 7804 <inflateBackEnd@@ZLIB_1.2.0+0x238>
    783c:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    7840:	add	x1, x1, #0xb70
    7844:	str	x1, [x0, #48]
    7848:	mov	w1, #0x3f51                	// #16209
    784c:	str	w1, [x10, #8]
    7850:	ldp	x25, x26, [sp, #64]
    7854:	lsr	w1, w5, #3
    7858:	sub	x9, x9, x1
    785c:	and	w5, w5, #0x7
    7860:	mov	w1, #0x1                   	// #1
    7864:	lsl	w1, w1, w5
    7868:	sub	w1, w1, #0x1
    786c:	and	x4, x1, x4
    7870:	str	x9, [x0]
    7874:	str	x7, [x0, #24]
    7878:	sub	x1, x13, x9
    787c:	add	w2, w1, #0x5
    7880:	sub	w1, w13, w9
    7884:	add	w1, w1, #0x5
    7888:	cmp	x13, x9
    788c:	csel	w1, w1, w2, ls  // ls = plast
    7890:	str	w1, [x0, #8]
    7894:	sub	x1, x12, x7
    7898:	add	w2, w1, #0x101
    789c:	sub	w1, w12, w7
    78a0:	add	w1, w1, #0x101
    78a4:	cmp	x7, x12
    78a8:	csel	w1, w1, w2, cs  // cs = hs, nlast
    78ac:	str	w1, [x0, #32]
    78b0:	str	x4, [x10, #80]
    78b4:	str	w5, [x10, #88]
    78b8:	ldp	x19, x20, [sp, #16]
    78bc:	ldp	x21, x22, [sp, #32]
    78c0:	ldp	x23, x24, [sp, #48]
    78c4:	ldp	x29, x30, [sp], #96
    78c8:	ret
    78cc:	mov	w2, w25
    78d0:	and	w24, w24, #0xf
    78d4:	cmp	w24, w5
    78d8:	b.ls	78fc <inflateBackEnd@@ZLIB_1.2.0+0x330>  // b.plast
    78dc:	ldrb	w3, [x9]
    78e0:	lsl	x3, x3, x5
    78e4:	add	x4, x4, x3
    78e8:	add	w3, w5, #0x8
    78ec:	cmp	w24, w3
    78f0:	b.hi	79a4 <inflateBackEnd@@ZLIB_1.2.0+0x3d8>  // b.pmore
    78f4:	add	x9, x9, #0x1
    78f8:	mov	w5, w3
    78fc:	lsl	w3, w19, w24
    7900:	bic	w3, w4, w3
    7904:	add	w2, w3, w2
    7908:	lsr	x4, x4, x24
    790c:	sub	w5, w5, w24
    7910:	sub	x3, x7, x16
    7914:	cmp	w2, w3
    7918:	b.ls	7af8 <inflateBackEnd@@ZLIB_1.2.0+0x52c>  // b.plast
    791c:	sub	w25, w2, w3
    7920:	cmp	w21, w25
    7924:	b.cs	7930 <inflateBackEnd@@ZLIB_1.2.0+0x364>  // b.hs, b.nlast
    7928:	ldr	w24, [x10, #7144]
    792c:	cbnz	w24, 79bc <inflateBackEnd@@ZLIB_1.2.0+0x3f0>
    7930:	cbnz	w17, 7a10 <inflateBackEnd@@ZLIB_1.2.0+0x444>
    7934:	sub	w24, w3, w2
    7938:	add	w3, w24, w18
    793c:	add	x3, x20, x3
    7940:	cmp	w1, w25
    7944:	b.hi	79d8 <inflateBackEnd@@ZLIB_1.2.0+0x40c>  // b.pmore
    7948:	cmp	w1, #0x2
    794c:	b.ls	797c <inflateBackEnd@@ZLIB_1.2.0+0x3b0>  // b.plast
    7950:	ldrb	w2, [x3]
    7954:	strb	w2, [x7]
    7958:	ldrb	w2, [x3, #1]
    795c:	strb	w2, [x7, #1]
    7960:	add	x3, x3, #0x3
    7964:	add	x7, x7, #0x3
    7968:	ldurb	w2, [x3, #-1]
    796c:	sturb	w2, [x7, #-1]
    7970:	sub	w1, w1, #0x3
    7974:	cmp	w1, #0x2
    7978:	b.hi	7950 <inflateBackEnd@@ZLIB_1.2.0+0x384>  // b.pmore
    797c:	cbz	w1, 7b78 <inflateBackEnd@@ZLIB_1.2.0+0x5ac>
    7980:	ldrb	w2, [x3]
    7984:	strb	w2, [x7]
    7988:	cmp	w1, #0x1
    798c:	b.ls	7aec <inflateBackEnd@@ZLIB_1.2.0+0x520>  // b.plast
    7990:	ldrb	w1, [x3, #1]
    7994:	strb	w1, [x7, #1]
    7998:	add	x7, x7, #0x2
    799c:	ldp	x25, x26, [sp, #64]
    79a0:	b	76bc <inflateBackEnd@@ZLIB_1.2.0+0xf0>
    79a4:	ldrb	w25, [x9, #1]
    79a8:	lsl	x3, x25, x3
    79ac:	add	x4, x4, x3
    79b0:	add	w5, w5, #0x10
    79b4:	add	x9, x9, #0x2
    79b8:	b	78fc <inflateBackEnd@@ZLIB_1.2.0+0x330>
    79bc:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    79c0:	add	x1, x1, #0xb88
    79c4:	str	x1, [x0, #48]
    79c8:	mov	w1, #0x3f51                	// #16209
    79cc:	str	w1, [x10, #8]
    79d0:	ldp	x25, x26, [sp, #64]
    79d4:	b	7854 <inflateBackEnd@@ZLIB_1.2.0+0x288>
    79d8:	str	x27, [sp, #80]
    79dc:	add	w1, w1, w24
    79e0:	sub	w26, w25, #0x1
    79e4:	add	x27, x26, #0x1
    79e8:	mov	x24, #0x0                   	// #0
    79ec:	ldrb	w25, [x3, x24]
    79f0:	strb	w25, [x7, x24]
    79f4:	cmp	x24, x26
    79f8:	add	x24, x24, #0x1
    79fc:	b.ne	79ec <inflateBackEnd@@ZLIB_1.2.0+0x420>  // b.any
    7a00:	add	x7, x7, x27
    7a04:	sub	x3, x7, w2, uxtw
    7a08:	ldr	x27, [sp, #80]
    7a0c:	b	7948 <inflateBackEnd@@ZLIB_1.2.0+0x37c>
    7a10:	cmp	w17, w25
    7a14:	b.cs	7aa0 <inflateBackEnd@@ZLIB_1.2.0+0x4d4>  // b.hs, b.nlast
    7a18:	sub	w24, w3, w2
    7a1c:	add	w3, w22, w24
    7a20:	add	x3, x20, x3
    7a24:	sub	w25, w25, w17
    7a28:	cmp	w1, w25
    7a2c:	b.ls	7948 <inflateBackEnd@@ZLIB_1.2.0+0x37c>  // b.plast
    7a30:	str	x27, [sp, #80]
    7a34:	add	w1, w1, w17
    7a38:	add	w1, w24, w1
    7a3c:	sub	w24, w25, #0x1
    7a40:	add	x27, x24, #0x1
    7a44:	mov	x25, #0x0                   	// #0
    7a48:	ldrb	w26, [x3, x25]
    7a4c:	strb	w26, [x7, x25]
    7a50:	cmp	x25, x24
    7a54:	add	x25, x25, #0x1
    7a58:	b.ne	7a48 <inflateBackEnd@@ZLIB_1.2.0+0x47c>  // b.any
    7a5c:	add	x7, x7, x27
    7a60:	mov	x3, x20
    7a64:	cmp	w17, w1
    7a68:	b.cc	7a74 <inflateBackEnd@@ZLIB_1.2.0+0x4a8>  // b.lo, b.ul, b.last
    7a6c:	ldr	x27, [sp, #80]
    7a70:	b	7948 <inflateBackEnd@@ZLIB_1.2.0+0x37c>
    7a74:	sub	w1, w1, w17
    7a78:	mov	x3, #0x0                   	// #0
    7a7c:	ldrb	w24, [x20, x3]
    7a80:	strb	w24, [x7, x3]
    7a84:	cmp	x3, x30
    7a88:	add	x3, x3, #0x1
    7a8c:	b.ne	7a7c <inflateBackEnd@@ZLIB_1.2.0+0x4b0>  // b.any
    7a90:	add	x7, x7, x23
    7a94:	sub	x3, x7, w2, uxtw
    7a98:	ldr	x27, [sp, #80]
    7a9c:	b	7948 <inflateBackEnd@@ZLIB_1.2.0+0x37c>
    7aa0:	sub	w24, w3, w2
    7aa4:	add	w3, w24, w17
    7aa8:	add	x3, x20, x3
    7aac:	cmp	w1, w25
    7ab0:	b.ls	7948 <inflateBackEnd@@ZLIB_1.2.0+0x37c>  // b.plast
    7ab4:	str	x27, [sp, #80]
    7ab8:	add	w1, w1, w24
    7abc:	sub	w25, w25, #0x1
    7ac0:	add	x27, x25, #0x1
    7ac4:	mov	x24, #0x0                   	// #0
    7ac8:	ldrb	w26, [x3, x24]
    7acc:	strb	w26, [x7, x24]
    7ad0:	cmp	x24, x25
    7ad4:	add	x24, x24, #0x1
    7ad8:	b.ne	7ac8 <inflateBackEnd@@ZLIB_1.2.0+0x4fc>  // b.any
    7adc:	add	x7, x7, x27
    7ae0:	sub	x3, x7, w2, uxtw
    7ae4:	ldr	x27, [sp, #80]
    7ae8:	b	7948 <inflateBackEnd@@ZLIB_1.2.0+0x37c>
    7aec:	add	x7, x7, #0x1
    7af0:	ldp	x25, x26, [sp, #64]
    7af4:	b	76bc <inflateBackEnd@@ZLIB_1.2.0+0xf0>
    7af8:	sub	x2, x7, w2, uxtw
    7afc:	ldrb	w3, [x2]
    7b00:	strb	w3, [x7]
    7b04:	ldrb	w3, [x2, #1]
    7b08:	strb	w3, [x7, #1]
    7b0c:	mov	x25, x2
    7b10:	add	x2, x2, #0x3
    7b14:	mov	x24, x7
    7b18:	add	x7, x7, #0x3
    7b1c:	ldurb	w3, [x2, #-1]
    7b20:	sturb	w3, [x7, #-1]
    7b24:	sub	w1, w1, #0x3
    7b28:	cmp	w1, #0x2
    7b2c:	b.hi	7afc <inflateBackEnd@@ZLIB_1.2.0+0x530>  // b.pmore
    7b30:	cbz	w1, 7b80 <inflateBackEnd@@ZLIB_1.2.0+0x5b4>
    7b34:	ldrb	w2, [x25, #3]
    7b38:	strb	w2, [x24, #3]
    7b3c:	b.ne	7b54 <inflateBackEnd@@ZLIB_1.2.0+0x588>  // b.any
    7b40:	add	x7, x24, #0x5
    7b44:	ldrb	w1, [x25, #4]
    7b48:	strb	w1, [x24, #4]
    7b4c:	ldp	x25, x26, [sp, #64]
    7b50:	b	76bc <inflateBackEnd@@ZLIB_1.2.0+0xf0>
    7b54:	add	x7, x24, #0x4
    7b58:	ldp	x25, x26, [sp, #64]
    7b5c:	b	76bc <inflateBackEnd@@ZLIB_1.2.0+0xf0>
    7b60:	adrp	x1, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    7b64:	add	x1, x1, #0xb50
    7b68:	str	x1, [x0, #48]
    7b6c:	mov	w1, #0x3f51                	// #16209
    7b70:	str	w1, [x10, #8]
    7b74:	b	7854 <inflateBackEnd@@ZLIB_1.2.0+0x288>
    7b78:	ldp	x25, x26, [sp, #64]
    7b7c:	b	76bc <inflateBackEnd@@ZLIB_1.2.0+0xf0>
    7b80:	ldp	x25, x26, [sp, #64]
    7b84:	b	76bc <inflateBackEnd@@ZLIB_1.2.0+0xf0>
    7b88:	mov	x1, x0
    7b8c:	cbz	x0, 7bd4 <inflateBackEnd@@ZLIB_1.2.0+0x608>
    7b90:	ldr	x0, [x0, #64]
    7b94:	cbz	x0, 7bdc <inflateBackEnd@@ZLIB_1.2.0+0x610>
    7b98:	ldr	x0, [x1, #72]
    7b9c:	cbz	x0, 7be4 <inflateBackEnd@@ZLIB_1.2.0+0x618>
    7ba0:	ldr	x2, [x1, #56]
    7ba4:	cbz	x2, 7bec <inflateBackEnd@@ZLIB_1.2.0+0x620>
    7ba8:	ldr	x3, [x2]
    7bac:	mov	w0, #0x1                   	// #1
    7bb0:	cmp	x3, x1
    7bb4:	b.eq	7bbc <inflateBackEnd@@ZLIB_1.2.0+0x5f0>  // b.none
    7bb8:	ret
    7bbc:	ldr	w0, [x2, #8]
    7bc0:	sub	w0, w0, #0x3, lsl #12
    7bc4:	sub	w0, w0, #0xf34
    7bc8:	cmp	w0, #0x1f
    7bcc:	cset	w0, hi  // hi = pmore
    7bd0:	b	7bb8 <inflateBackEnd@@ZLIB_1.2.0+0x5ec>
    7bd4:	mov	w0, #0x1                   	// #1
    7bd8:	b	7bb8 <inflateBackEnd@@ZLIB_1.2.0+0x5ec>
    7bdc:	mov	w0, #0x1                   	// #1
    7be0:	b	7bb8 <inflateBackEnd@@ZLIB_1.2.0+0x5ec>
    7be4:	mov	w0, #0x1                   	// #1
    7be8:	b	7bb8 <inflateBackEnd@@ZLIB_1.2.0+0x5ec>
    7bec:	mov	w0, #0x1                   	// #1
    7bf0:	b	7bb8 <inflateBackEnd@@ZLIB_1.2.0+0x5ec>
    7bf4:	mov	x9, x0
    7bf8:	ldr	w3, [x0]
    7bfc:	cmp	w2, #0x0
    7c00:	ccmp	w3, #0x3, #0x2, ne  // ne = any
    7c04:	b.hi	7c54 <inflateBackEnd@@ZLIB_1.2.0+0x688>  // b.pmore
    7c08:	mov	w0, #0x0                   	// #0
    7c0c:	mov	w6, #0x0                   	// #0
    7c10:	mov	w7, #0xff                  	// #255
    7c14:	mov	w8, #0x4                   	// #4
    7c18:	b	7c38 <inflateBackEnd@@ZLIB_1.2.0+0x66c>
    7c1c:	sub	w3, w8, w3
    7c20:	cmp	w4, #0x0
    7c24:	csel	w3, w3, w6, eq  // eq = none
    7c28:	add	w0, w0, #0x1
    7c2c:	cmp	w2, w0
    7c30:	ccmp	w3, #0x3, #0x2, hi  // hi = pmore
    7c34:	b.hi	7c58 <inflateBackEnd@@ZLIB_1.2.0+0x68c>  // b.pmore
    7c38:	ldrb	w4, [x1, w0, uxtw]
    7c3c:	cmp	w3, #0x2
    7c40:	csel	w5, w6, w7, cc  // cc = lo, ul, last
    7c44:	cmp	w4, w5
    7c48:	b.ne	7c1c <inflateBackEnd@@ZLIB_1.2.0+0x650>  // b.any
    7c4c:	add	w3, w3, #0x1
    7c50:	b	7c28 <inflateBackEnd@@ZLIB_1.2.0+0x65c>
    7c54:	mov	w0, #0x0                   	// #0
    7c58:	str	w3, [x9]
    7c5c:	ret
    7c60:	stp	x29, x30, [sp, #-48]!
    7c64:	mov	x29, sp
    7c68:	stp	x19, x20, [sp, #16]
    7c6c:	stp	x21, x22, [sp, #32]
    7c70:	mov	x21, x1
    7c74:	mov	w20, w2
    7c78:	ldr	x19, [x0, #56]
    7c7c:	ldr	x2, [x19, #72]
    7c80:	cbz	x2, 7ce0 <inflateBackEnd@@ZLIB_1.2.0+0x714>
    7c84:	ldr	w0, [x19, #60]
    7c88:	cbnz	w0, 7ca4 <inflateBackEnd@@ZLIB_1.2.0+0x6d8>
    7c8c:	ldr	w1, [x19, #56]
    7c90:	mov	w0, #0x1                   	// #1
    7c94:	lsl	w0, w0, w1
    7c98:	str	w0, [x19, #60]
    7c9c:	str	wzr, [x19, #68]
    7ca0:	str	wzr, [x19, #64]
    7ca4:	ldr	w2, [x19, #60]
    7ca8:	cmp	w2, w20
    7cac:	b.hi	7d08 <inflateBackEnd@@ZLIB_1.2.0+0x73c>  // b.pmore
    7cb0:	mov	w2, w2
    7cb4:	sub	x1, x21, x2
    7cb8:	ldr	x0, [x19, #72]
    7cbc:	bl	23a0 <memcpy@plt>
    7cc0:	str	wzr, [x19, #68]
    7cc4:	ldr	w0, [x19, #60]
    7cc8:	str	w0, [x19, #64]
    7ccc:	mov	w0, #0x0                   	// #0
    7cd0:	ldp	x19, x20, [sp, #16]
    7cd4:	ldp	x21, x22, [sp, #32]
    7cd8:	ldp	x29, x30, [sp], #48
    7cdc:	ret
    7ce0:	ldr	w1, [x19, #56]
    7ce4:	mov	w2, #0x1                   	// #1
    7ce8:	ldr	x3, [x0, #64]
    7cec:	lsl	w1, w2, w1
    7cf0:	ldr	x0, [x0, #80]
    7cf4:	blr	x3
    7cf8:	str	x0, [x19, #72]
    7cfc:	cbnz	x0, 7c84 <inflateBackEnd@@ZLIB_1.2.0+0x6b8>
    7d00:	mov	w0, #0x1                   	// #1
    7d04:	b	7cd0 <inflateBackEnd@@ZLIB_1.2.0+0x704>
    7d08:	ldr	w0, [x19, #68]
    7d0c:	sub	w2, w2, w0
    7d10:	cmp	w20, w2
    7d14:	csel	w22, w20, w2, ls  // ls = plast
    7d18:	ldr	x3, [x19, #72]
    7d1c:	csel	w2, w20, w2, ls  // ls = plast
    7d20:	sub	x1, x21, w20, uxtw
    7d24:	add	x0, x3, w0, uxtw
    7d28:	bl	23a0 <memcpy@plt>
    7d2c:	subs	w20, w20, w22
    7d30:	b.ne	7d68 <inflateBackEnd@@ZLIB_1.2.0+0x79c>  // b.any
    7d34:	ldr	w0, [x19, #68]
    7d38:	add	w0, w22, w0
    7d3c:	ldr	w2, [x19, #60]
    7d40:	cmp	w0, w2
    7d44:	csel	w0, w0, wzr, ne  // ne = any
    7d48:	str	w0, [x19, #68]
    7d4c:	ldr	w1, [x19, #64]
    7d50:	mov	w0, #0x0                   	// #0
    7d54:	cmp	w2, w1
    7d58:	b.ls	7cd0 <inflateBackEnd@@ZLIB_1.2.0+0x704>  // b.plast
    7d5c:	add	w22, w1, w22
    7d60:	str	w22, [x19, #64]
    7d64:	b	7cd0 <inflateBackEnd@@ZLIB_1.2.0+0x704>
    7d68:	mov	w2, w20
    7d6c:	sub	x1, x21, x2
    7d70:	ldr	x0, [x19, #72]
    7d74:	bl	23a0 <memcpy@plt>
    7d78:	str	w20, [x19, #68]
    7d7c:	ldr	w0, [x19, #60]
    7d80:	str	w0, [x19, #64]
    7d84:	mov	w0, #0x0                   	// #0
    7d88:	b	7cd0 <inflateBackEnd@@ZLIB_1.2.0+0x704>

0000000000007d8c <inflateResetKeep@@ZLIB_1.2.5.2>:
    7d8c:	stp	x29, x30, [sp, #-32]!
    7d90:	mov	x29, sp
    7d94:	str	x19, [sp, #16]
    7d98:	mov	x19, x0
    7d9c:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    7da0:	cbnz	w0, 7e18 <inflateResetKeep@@ZLIB_1.2.5.2+0x8c>
    7da4:	ldr	x1, [x19, #56]
    7da8:	str	xzr, [x1, #40]
    7dac:	str	xzr, [x19, #40]
    7db0:	str	xzr, [x19, #16]
    7db4:	str	xzr, [x19, #48]
    7db8:	ldr	w2, [x1, #16]
    7dbc:	cbz	w2, 7dc8 <inflateResetKeep@@ZLIB_1.2.5.2+0x3c>
    7dc0:	and	x2, x2, #0x1
    7dc4:	str	x2, [x19, #96]
    7dc8:	mov	w2, #0x3f34                	// #16180
    7dcc:	str	w2, [x1, #8]
    7dd0:	str	wzr, [x1, #12]
    7dd4:	str	wzr, [x1, #20]
    7dd8:	mov	w2, #0x8000                	// #32768
    7ddc:	str	w2, [x1, #28]
    7de0:	str	xzr, [x1, #48]
    7de4:	str	xzr, [x1, #80]
    7de8:	str	wzr, [x1, #88]
    7dec:	add	x2, x1, #0x558
    7df0:	str	x2, [x1, #144]
    7df4:	str	x2, [x1, #112]
    7df8:	str	x2, [x1, #104]
    7dfc:	mov	w2, #0x1                   	// #1
    7e00:	str	w2, [x1, #7144]
    7e04:	mov	w2, #0xffffffff            	// #-1
    7e08:	str	w2, [x1, #7148]
    7e0c:	ldr	x19, [sp, #16]
    7e10:	ldp	x29, x30, [sp], #32
    7e14:	ret
    7e18:	mov	w0, #0xfffffffe            	// #-2
    7e1c:	b	7e0c <inflateResetKeep@@ZLIB_1.2.5.2+0x80>

0000000000007e20 <inflateReset@@Base>:
    7e20:	stp	x29, x30, [sp, #-32]!
    7e24:	mov	x29, sp
    7e28:	str	x19, [sp, #16]
    7e2c:	mov	x19, x0
    7e30:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    7e34:	cbnz	w0, 7e5c <inflateReset@@Base+0x3c>
    7e38:	ldr	x0, [x19, #56]
    7e3c:	str	wzr, [x0, #60]
    7e40:	str	wzr, [x0, #64]
    7e44:	str	wzr, [x0, #68]
    7e48:	mov	x0, x19
    7e4c:	bl	2440 <inflateResetKeep@plt>
    7e50:	ldr	x19, [sp, #16]
    7e54:	ldp	x29, x30, [sp], #32
    7e58:	ret
    7e5c:	mov	w0, #0xfffffffe            	// #-2
    7e60:	b	7e50 <inflateReset@@Base+0x30>

0000000000007e64 <inflateReset2@@ZLIB_1.2.3.4>:
    7e64:	stp	x29, x30, [sp, #-64]!
    7e68:	mov	x29, sp
    7e6c:	stp	x19, x20, [sp, #16]
    7e70:	stp	x21, x22, [sp, #32]
    7e74:	mov	x21, x0
    7e78:	mov	w19, w1
    7e7c:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    7e80:	cbnz	w0, 7f0c <inflateReset2@@ZLIB_1.2.3.4+0xa8>
    7e84:	str	x23, [sp, #48]
    7e88:	mov	w20, w0
    7e8c:	ldr	x22, [x21, #56]
    7e90:	tbnz	w19, #31, 7f04 <inflateReset2@@ZLIB_1.2.3.4+0xa0>
    7e94:	asr	w20, w19, #4
    7e98:	add	w20, w20, #0x5
    7e9c:	and	w0, w19, #0xf
    7ea0:	cmp	w19, #0x30
    7ea4:	csel	w19, w0, w19, lt  // lt = tstop
    7ea8:	mov	w23, w19
    7eac:	sub	w0, w19, #0x8
    7eb0:	cmp	w19, #0x0
    7eb4:	ccmp	w0, #0x7, #0x0, ne  // ne = any
    7eb8:	b.hi	7f14 <inflateReset2@@ZLIB_1.2.3.4+0xb0>  // b.pmore
    7ebc:	ldr	x1, [x22, #72]
    7ec0:	cbz	x1, 7ee0 <inflateReset2@@ZLIB_1.2.3.4+0x7c>
    7ec4:	ldr	w0, [x22, #56]
    7ec8:	cmp	w19, w0
    7ecc:	b.eq	7ee0 <inflateReset2@@ZLIB_1.2.3.4+0x7c>  // b.none
    7ed0:	ldr	x2, [x21, #72]
    7ed4:	ldr	x0, [x21, #80]
    7ed8:	blr	x2
    7edc:	str	xzr, [x22, #72]
    7ee0:	str	w20, [x22, #16]
    7ee4:	str	w23, [x22, #56]
    7ee8:	mov	x0, x21
    7eec:	bl	2610 <inflateReset@plt>
    7ef0:	ldr	x23, [sp, #48]
    7ef4:	ldp	x19, x20, [sp, #16]
    7ef8:	ldp	x21, x22, [sp, #32]
    7efc:	ldp	x29, x30, [sp], #64
    7f00:	ret
    7f04:	neg	w19, w19
    7f08:	b	7ea8 <inflateReset2@@ZLIB_1.2.3.4+0x44>
    7f0c:	mov	w0, #0xfffffffe            	// #-2
    7f10:	b	7ef4 <inflateReset2@@ZLIB_1.2.3.4+0x90>
    7f14:	mov	w0, #0xfffffffe            	// #-2
    7f18:	ldr	x23, [sp, #48]
    7f1c:	b	7ef4 <inflateReset2@@ZLIB_1.2.3.4+0x90>

0000000000007f20 <inflateInit2_@@Base>:
    7f20:	stp	x29, x30, [sp, #-48]!
    7f24:	mov	x29, sp
    7f28:	str	x21, [sp, #32]
    7f2c:	cbz	x2, 7ff8 <inflateInit2_@@Base+0xd8>
    7f30:	stp	x19, x20, [sp, #16]
    7f34:	mov	x19, x0
    7f38:	mov	w21, w1
    7f3c:	ldrb	w0, [x2]
    7f40:	cmp	w0, #0x31
    7f44:	mov	w0, #0x70                  	// #112
    7f48:	ccmp	w3, w0, #0x0, eq  // eq = none
    7f4c:	b.ne	8000 <inflateInit2_@@Base+0xe0>  // b.any
    7f50:	cbz	x19, 800c <inflateInit2_@@Base+0xec>
    7f54:	str	xzr, [x19, #48]
    7f58:	ldr	x0, [x19, #64]
    7f5c:	cbz	x0, 7fd4 <inflateInit2_@@Base+0xb4>
    7f60:	ldr	x0, [x19, #72]
    7f64:	cbz	x0, 7fe8 <inflateInit2_@@Base+0xc8>
    7f68:	ldr	x3, [x19, #64]
    7f6c:	mov	w2, #0x1bf8                	// #7160
    7f70:	mov	w1, #0x1                   	// #1
    7f74:	ldr	x0, [x19, #80]
    7f78:	blr	x3
    7f7c:	mov	x20, x0
    7f80:	cbz	x0, 8018 <inflateInit2_@@Base+0xf8>
    7f84:	str	x0, [x19, #56]
    7f88:	str	x19, [x0]
    7f8c:	str	xzr, [x0, #72]
    7f90:	mov	w0, #0x3f34                	// #16180
    7f94:	str	w0, [x20, #8]
    7f98:	mov	w1, w21
    7f9c:	mov	x0, x19
    7fa0:	bl	2640 <inflateReset2@plt>
    7fa4:	mov	w21, w0
    7fa8:	cbz	w0, 8024 <inflateInit2_@@Base+0x104>
    7fac:	ldr	x2, [x19, #72]
    7fb0:	mov	x1, x20
    7fb4:	ldr	x0, [x19, #80]
    7fb8:	blr	x2
    7fbc:	str	xzr, [x19, #56]
    7fc0:	ldp	x19, x20, [sp, #16]
    7fc4:	mov	w0, w21
    7fc8:	ldr	x21, [sp, #32]
    7fcc:	ldp	x29, x30, [sp], #48
    7fd0:	ret
    7fd4:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1f20>
    7fd8:	add	x0, x0, #0x280
    7fdc:	str	x0, [x19, #64]
    7fe0:	str	xzr, [x19, #80]
    7fe4:	b	7f60 <inflateInit2_@@Base+0x40>
    7fe8:	adrp	x0, c000 <inflateCodesUsed@@ZLIB_1.2.9+0x1f20>
    7fec:	add	x0, x0, #0x298
    7ff0:	str	x0, [x19, #72]
    7ff4:	b	7f68 <inflateInit2_@@Base+0x48>
    7ff8:	mov	w21, #0xfffffffa            	// #-6
    7ffc:	b	7fc4 <inflateInit2_@@Base+0xa4>
    8000:	mov	w21, #0xfffffffa            	// #-6
    8004:	ldp	x19, x20, [sp, #16]
    8008:	b	7fc4 <inflateInit2_@@Base+0xa4>
    800c:	mov	w21, #0xfffffffe            	// #-2
    8010:	ldp	x19, x20, [sp, #16]
    8014:	b	7fc4 <inflateInit2_@@Base+0xa4>
    8018:	mov	w21, #0xfffffffc            	// #-4
    801c:	ldp	x19, x20, [sp, #16]
    8020:	b	7fc4 <inflateInit2_@@Base+0xa4>
    8024:	ldp	x19, x20, [sp, #16]
    8028:	b	7fc4 <inflateInit2_@@Base+0xa4>

000000000000802c <inflateInit_@@Base>:
    802c:	stp	x29, x30, [sp, #-16]!
    8030:	mov	x29, sp
    8034:	mov	w3, w2
    8038:	mov	x2, x1
    803c:	mov	w1, #0xf                   	// #15
    8040:	bl	2600 <inflateInit2_@plt>
    8044:	ldp	x29, x30, [sp], #16
    8048:	ret

000000000000804c <inflatePrime@@ZLIB_1.2.2.4>:
    804c:	stp	x29, x30, [sp, #-48]!
    8050:	mov	x29, sp
    8054:	stp	x19, x20, [sp, #16]
    8058:	str	x21, [sp, #32]
    805c:	mov	x20, x0
    8060:	mov	w19, w1
    8064:	mov	w21, w2
    8068:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    806c:	cbnz	w0, 80d0 <inflatePrime@@ZLIB_1.2.2.4+0x84>
    8070:	ldr	x4, [x20, #56]
    8074:	tbnz	w19, #31, 80c4 <inflatePrime@@ZLIB_1.2.2.4+0x78>
    8078:	cmp	w19, #0x10
    807c:	b.gt	80d8 <inflatePrime@@ZLIB_1.2.2.4+0x8c>
    8080:	ldr	w6, [x4, #88]
    8084:	add	w5, w19, w6
    8088:	cmp	w5, #0x20
    808c:	b.hi	80e0 <inflatePrime@@ZLIB_1.2.2.4+0x94>  // b.pmore
    8090:	mov	x3, #0x1                   	// #1
    8094:	lsl	x1, x3, x19
    8098:	sub	w1, w1, #0x1
    809c:	and	w2, w1, w21
    80a0:	lsl	w2, w2, w6
    80a4:	ldr	x1, [x4, #80]
    80a8:	add	x2, x1, x2
    80ac:	str	x2, [x4, #80]
    80b0:	str	w5, [x4, #88]
    80b4:	ldp	x19, x20, [sp, #16]
    80b8:	ldr	x21, [sp, #32]
    80bc:	ldp	x29, x30, [sp], #48
    80c0:	ret
    80c4:	str	xzr, [x4, #80]
    80c8:	str	wzr, [x4, #88]
    80cc:	b	80b4 <inflatePrime@@ZLIB_1.2.2.4+0x68>
    80d0:	mov	w0, #0xfffffffe            	// #-2
    80d4:	b	80b4 <inflatePrime@@ZLIB_1.2.2.4+0x68>
    80d8:	mov	w0, #0xfffffffe            	// #-2
    80dc:	b	80b4 <inflatePrime@@ZLIB_1.2.2.4+0x68>
    80e0:	mov	w0, #0xfffffffe            	// #-2
    80e4:	b	80b4 <inflatePrime@@ZLIB_1.2.2.4+0x68>

00000000000080e8 <inflate@@Base>:
    80e8:	stp	x29, x30, [sp, #-160]!
    80ec:	mov	x29, sp
    80f0:	stp	x23, x24, [sp, #48]
    80f4:	mov	x24, x0
    80f8:	str	w1, [sp, #104]
    80fc:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    8100:	cbnz	w0, 99a4 <inflate@@Base+0x18bc>
    8104:	stp	x25, x26, [sp, #64]
    8108:	mov	w25, w0
    810c:	ldr	x0, [x24, #24]
    8110:	cbz	x0, 99b0 <inflate@@Base+0x18c8>
    8114:	ldr	x0, [x24]
    8118:	cbz	x0, 81a4 <inflate@@Base+0xbc>
    811c:	stp	x19, x20, [sp, #16]
    8120:	stp	x21, x22, [sp, #32]
    8124:	stp	x27, x28, [sp, #80]
    8128:	ldr	x21, [x24, #56]
    812c:	ldr	w1, [x21, #8]
    8130:	mov	w0, #0x3f3f                	// #16191
    8134:	cmp	w1, w0
    8138:	b.eq	81bc <inflate@@Base+0xd4>  // b.none
    813c:	ldr	x27, [x24, #24]
    8140:	ldr	w26, [x24, #32]
    8144:	ldr	x23, [x24]
    8148:	ldr	w0, [x24, #8]
    814c:	str	w0, [sp, #108]
    8150:	ldr	x22, [x21, #80]
    8154:	ldr	w19, [x21, #88]
    8158:	str	w25, [sp, #96]
    815c:	str	w26, [sp, #100]
    8160:	mov	w20, w0
    8164:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    8168:	add	x0, x0, #0x548
    816c:	str	x0, [sp, #128]
    8170:	add	x0, x0, #0x880
    8174:	str	x0, [sp, #120]
    8178:	ldr	w0, [x21, #8]
    817c:	sub	w0, w0, #0x3, lsl #12
    8180:	sub	w0, w0, #0xf34
    8184:	cmp	w0, #0x1e
    8188:	b.hi	8324 <inflate@@Base+0x23c>  // b.pmore
    818c:	adrp	x1, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    8190:	add	x1, x1, #0x508
    8194:	ldrh	w0, [x1, w0, uxtw #1]
    8198:	adr	x1, 81a4 <inflate@@Base+0xbc>
    819c:	add	x0, x1, w0, sxth #2
    81a0:	br	x0
    81a4:	ldr	w0, [x24, #8]
    81a8:	cbz	w0, 811c <inflate@@Base+0x34>
    81ac:	mov	w0, #0xfffffffe            	// #-2
    81b0:	str	w0, [sp, #96]
    81b4:	ldp	x25, x26, [sp, #64]
    81b8:	b	8314 <inflate@@Base+0x22c>
    81bc:	mov	w0, #0x3f40                	// #16192
    81c0:	str	w0, [x21, #8]
    81c4:	b	813c <inflate@@Base+0x54>
    81c8:	mov	w0, #0x1                   	// #1
    81cc:	str	w0, [sp, #96]
    81d0:	str	x27, [x24, #24]
    81d4:	str	w26, [x24, #32]
    81d8:	str	x23, [x24]
    81dc:	str	w20, [x24, #8]
    81e0:	str	x22, [x21, #80]
    81e4:	str	w19, [x21, #88]
    81e8:	ldr	w19, [x21, #60]
    81ec:	cbnz	w19, 8224 <inflate@@Base+0x13c>
    81f0:	ldr	w0, [x24, #32]
    81f4:	ldr	w1, [sp, #100]
    81f8:	cmp	w0, w1
    81fc:	b.eq	99e4 <inflate@@Base+0x18fc>  // b.none
    8200:	ldr	w0, [x21, #8]
    8204:	mov	w1, #0x3f50                	// #16208
    8208:	cmp	w0, w1
    820c:	b.hi	8240 <inflate@@Base+0x158>  // b.pmore
    8210:	ldr	w1, [sp, #104]
    8214:	cmp	w1, #0x4
    8218:	mov	w1, #0x3f4d                	// #16205
    821c:	ccmp	w0, w1, #0x0, eq  // eq = none
    8220:	b.hi	8240 <inflate@@Base+0x158>  // b.pmore
    8224:	ldr	w2, [x24, #32]
    8228:	ldr	w0, [sp, #100]
    822c:	sub	w2, w0, w2
    8230:	ldr	x1, [x24, #24]
    8234:	mov	x0, x24
    8238:	bl	7c60 <inflateBackEnd@@ZLIB_1.2.0+0x694>
    823c:	cbnz	w0, 9940 <inflate@@Base+0x1858>
    8240:	ldr	w0, [x24, #8]
    8244:	ldr	w2, [sp, #108]
    8248:	sub	w20, w2, w0
    824c:	ldr	w1, [x24, #32]
    8250:	ldr	w3, [sp, #100]
    8254:	sub	w19, w3, w1
    8258:	sub	w0, w2, w0
    825c:	ldr	x2, [x24, #16]
    8260:	add	x0, x2, x0
    8264:	str	x0, [x24, #16]
    8268:	sub	w1, w3, w1
    826c:	ldr	x0, [x24, #40]
    8270:	add	x0, x0, x1
    8274:	str	x0, [x24, #40]
    8278:	ldr	x0, [x21, #40]
    827c:	add	x0, x0, x1
    8280:	str	x0, [x21, #40]
    8284:	ldr	w0, [x21, #16]
    8288:	tst	x0, #0x4
    828c:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    8290:	b.ne	9964 <inflate@@Base+0x187c>  // b.any
    8294:	ldr	w0, [x21, #88]
    8298:	ldr	w1, [x21, #12]
    829c:	cmp	w1, #0x0
    82a0:	mov	w2, #0x40                  	// #64
    82a4:	csel	w1, w1, w2, eq  // eq = none
    82a8:	add	w0, w0, w1
    82ac:	ldr	w1, [x21, #8]
    82b0:	mov	w2, #0x3f3f                	// #16191
    82b4:	cmp	w1, w2
    82b8:	b.eq	99dc <inflate@@Base+0x18f4>  // b.none
    82bc:	mov	w2, #0x3f47                	// #16199
    82c0:	cmp	w1, w2
    82c4:	mov	w2, #0x3f42                	// #16194
    82c8:	ccmp	w1, w2, #0x4, ne  // ne = any
    82cc:	mov	w1, #0x100                 	// #256
    82d0:	csel	w25, w25, w1, ne  // ne = any
    82d4:	add	w0, w0, w25
    82d8:	str	w0, [x24, #88]
    82dc:	orr	w19, w19, w20
    82e0:	cmp	w19, #0x0
    82e4:	ldr	w0, [sp, #104]
    82e8:	ccmp	w0, #0x4, #0x4, ne  // ne = any
    82ec:	b.ne	9a04 <inflate@@Base+0x191c>  // b.any
    82f0:	ldr	w1, [sp, #96]
    82f4:	cmp	w1, #0x0
    82f8:	mov	w0, #0xfffffffb            	// #-5
    82fc:	csel	w0, w1, w0, ne  // ne = any
    8300:	str	w0, [sp, #96]
    8304:	ldp	x19, x20, [sp, #16]
    8308:	ldp	x21, x22, [sp, #32]
    830c:	ldp	x25, x26, [sp, #64]
    8310:	ldp	x27, x28, [sp, #80]
    8314:	ldr	w0, [sp, #96]
    8318:	ldp	x23, x24, [sp, #48]
    831c:	ldp	x29, x30, [sp], #160
    8320:	ret
    8324:	mov	w0, #0xfffffffe            	// #-2
    8328:	str	w0, [sp, #96]
    832c:	ldp	x19, x20, [sp, #16]
    8330:	ldp	x21, x22, [sp, #32]
    8334:	ldp	x25, x26, [sp, #64]
    8338:	ldp	x27, x28, [sp, #80]
    833c:	b	8314 <inflate@@Base+0x22c>
    8340:	cmp	w19, #0xd
    8344:	b.hi	8d6c <inflate@@Base+0xc84>  // b.pmore
    8348:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    834c:	sub	w20, w20, #0x1
    8350:	ldrb	w0, [x23], #1
    8354:	lsl	x0, x0, x19
    8358:	add	x22, x22, x0
    835c:	add	w19, w19, #0x8
    8360:	cmp	w19, #0xd
    8364:	b.hi	8d6c <inflate@@Base+0xc84>  // b.pmore
    8368:	cbnz	w20, 834c <inflate@@Base+0x264>
    836c:	b	81d0 <inflate@@Base+0xe8>
    8370:	cmp	w19, #0x1f
    8374:	b.hi	8af0 <inflate@@Base+0xa08>  // b.pmore
    8378:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    837c:	sub	w20, w20, #0x1
    8380:	ldrb	w0, [x23], #1
    8384:	lsl	x0, x0, x19
    8388:	add	x22, x22, x0
    838c:	add	w19, w19, #0x8
    8390:	cmp	w19, #0x1f
    8394:	b.hi	8af0 <inflate@@Base+0xa08>  // b.pmore
    8398:	cbnz	w20, 837c <inflate@@Base+0x294>
    839c:	b	81d0 <inflate@@Base+0xe8>
    83a0:	cmp	w19, #0xf
    83a4:	b.hi	859c <inflate@@Base+0x4b4>  // b.pmore
    83a8:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    83ac:	sub	w20, w20, #0x1
    83b0:	ldrb	w0, [x23], #1
    83b4:	lsl	x0, x0, x19
    83b8:	add	x22, x22, x0
    83bc:	add	w19, w19, #0x8
    83c0:	cmp	w19, #0xf
    83c4:	b.hi	859c <inflate@@Base+0x4b4>  // b.pmore
    83c8:	cbnz	w20, 83ac <inflate@@Base+0x2c4>
    83cc:	b	81d0 <inflate@@Base+0xe8>
    83d0:	ldr	w1, [x21, #16]
    83d4:	cbnz	w1, 83e4 <inflate@@Base+0x2fc>
    83d8:	mov	w0, #0x3f40                	// #16192
    83dc:	str	w0, [x21, #8]
    83e0:	b	8178 <inflate@@Base+0x90>
    83e4:	cmp	w19, #0xf
    83e8:	b.hi	8414 <inflate@@Base+0x32c>  // b.pmore
    83ec:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    83f0:	sub	w20, w20, #0x1
    83f4:	ldrb	w0, [x23], #1
    83f8:	lsl	x0, x0, x19
    83fc:	add	x22, x22, x0
    8400:	add	w19, w19, #0x8
    8404:	cmp	w19, #0xf
    8408:	b.hi	8414 <inflate@@Base+0x32c>  // b.pmore
    840c:	cbnz	w20, 83f0 <inflate@@Base+0x308>
    8410:	b	81d0 <inflate@@Base+0xe8>
    8414:	tst	x1, #0x2
    8418:	mov	x0, #0x8b1f                	// #35615
    841c:	ccmp	x22, x0, #0x0, ne  // ne = any
    8420:	b.eq	8490 <inflate@@Base+0x3a8>  // b.none
    8424:	str	wzr, [x21, #24]
    8428:	ldr	x0, [x21, #48]
    842c:	cbz	x0, 8438 <inflate@@Base+0x350>
    8430:	mov	w1, #0xffffffff            	// #-1
    8434:	str	w1, [x0, #72]
    8438:	ldr	w0, [x21, #16]
    843c:	tbz	w0, #0, 8478 <inflate@@Base+0x390>
    8440:	ubfiz	x0, x22, #8, #8
    8444:	add	x0, x0, x22, lsr #8
    8448:	mov	x1, #0x4211                	// #16913
    844c:	movk	x1, #0x2108, lsl #16
    8450:	movk	x1, #0x1084, lsl #32
    8454:	movk	x1, #0x842, lsl #48
    8458:	umulh	x1, x0, x1
    845c:	sub	x28, x0, x1
    8460:	add	x28, x1, x28, lsr #1
    8464:	lsr	x28, x28, #4
    8468:	lsl	x1, x28, #5
    846c:	sub	x28, x1, x28
    8470:	subs	x28, x0, x28
    8474:	b.eq	84e8 <inflate@@Base+0x400>  // b.none
    8478:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    847c:	add	x0, x0, #0x450
    8480:	str	x0, [x24, #48]
    8484:	mov	w0, #0x3f51                	// #16209
    8488:	str	w0, [x21, #8]
    848c:	b	8178 <inflate@@Base+0x90>
    8490:	ldr	w0, [x21, #56]
    8494:	cbnz	w0, 84a0 <inflate@@Base+0x3b8>
    8498:	mov	w0, #0xf                   	// #15
    849c:	str	w0, [x21, #56]
    84a0:	mov	w2, #0x0                   	// #0
    84a4:	mov	x1, #0x0                   	// #0
    84a8:	mov	x0, #0x0                   	// #0
    84ac:	bl	2430 <crc32@plt>
    84b0:	str	x0, [x21, #32]
    84b4:	mov	w1, #0x1f                  	// #31
    84b8:	strb	w1, [sp, #152]
    84bc:	mov	w1, #0xffffff8b            	// #-117
    84c0:	strb	w1, [sp, #153]
    84c4:	mov	w2, #0x2                   	// #2
    84c8:	add	x1, sp, #0x98
    84cc:	bl	2430 <crc32@plt>
    84d0:	str	x0, [x21, #32]
    84d4:	mov	w0, #0x3f35                	// #16181
    84d8:	str	w0, [x21, #8]
    84dc:	mov	w19, #0x0                   	// #0
    84e0:	mov	x22, #0x0                   	// #0
    84e4:	b	8178 <inflate@@Base+0x90>
    84e8:	and	w0, w22, #0xf
    84ec:	cmp	w0, #0x8
    84f0:	b.eq	850c <inflate@@Base+0x424>  // b.none
    84f4:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    84f8:	add	x0, x0, #0x468
    84fc:	str	x0, [x24, #48]
    8500:	mov	w0, #0x3f51                	// #16209
    8504:	str	w0, [x21, #8]
    8508:	b	8178 <inflate@@Base+0x90>
    850c:	lsr	x22, x22, #4
    8510:	sub	w19, w19, #0x4
    8514:	and	w0, w22, #0xf
    8518:	add	w0, w0, #0x8
    851c:	ldr	w1, [x21, #56]
    8520:	cbnz	w1, 8548 <inflate@@Base+0x460>
    8524:	str	w0, [x21, #56]
    8528:	cmp	w0, #0xf
    852c:	b.ls	8558 <inflate@@Base+0x470>  // b.plast
    8530:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    8534:	add	x0, x0, #0x488
    8538:	str	x0, [x24, #48]
    853c:	mov	w0, #0x3f51                	// #16209
    8540:	str	w0, [x21, #8]
    8544:	b	8178 <inflate@@Base+0x90>
    8548:	cmp	w0, #0xf
    854c:	b.hi	8530 <inflate@@Base+0x448>  // b.pmore
    8550:	cmp	w1, w0
    8554:	b.cc	8530 <inflate@@Base+0x448>  // b.lo, b.ul, b.last
    8558:	mov	w1, #0x1                   	// #1
    855c:	lsl	w0, w1, w0
    8560:	str	w0, [x21, #28]
    8564:	mov	w2, #0x0                   	// #0
    8568:	mov	x1, #0x0                   	// #0
    856c:	mov	x0, #0x0                   	// #0
    8570:	bl	2560 <adler32@plt>
    8574:	str	x0, [x21, #32]
    8578:	str	x0, [x24, #96]
    857c:	tst	x22, #0x200
    8580:	mov	w0, #0x3f3d                	// #16189
    8584:	mov	w1, #0x3f3f                	// #16191
    8588:	csel	w0, w0, w1, ne  // ne = any
    858c:	str	w0, [x21, #8]
    8590:	mov	x22, x28
    8594:	mov	w19, #0x0                   	// #0
    8598:	b	8178 <inflate@@Base+0x90>
    859c:	str	w22, [x21, #24]
    85a0:	and	w0, w22, #0xff
    85a4:	cmp	w0, #0x8
    85a8:	b.eq	85c4 <inflate@@Base+0x4dc>  // b.none
    85ac:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    85b0:	add	x0, x0, #0x468
    85b4:	str	x0, [x24, #48]
    85b8:	mov	w0, #0x3f51                	// #16209
    85bc:	str	w0, [x21, #8]
    85c0:	b	8178 <inflate@@Base+0x90>
    85c4:	tst	x22, #0xe000
    85c8:	b.eq	85e4 <inflate@@Base+0x4fc>  // b.none
    85cc:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    85d0:	add	x0, x0, #0x4a0
    85d4:	str	x0, [x24, #48]
    85d8:	mov	w0, #0x3f51                	// #16209
    85dc:	str	w0, [x21, #8]
    85e0:	b	8178 <inflate@@Base+0x90>
    85e4:	ldr	x0, [x21, #48]
    85e8:	cbz	x0, 85f4 <inflate@@Base+0x50c>
    85ec:	ubfx	w1, w22, #8, #1
    85f0:	str	w1, [x0]
    85f4:	ldr	w0, [x21, #24]
    85f8:	tbz	w0, #9, 8604 <inflate@@Base+0x51c>
    85fc:	ldr	w0, [x21, #16]
    8600:	tbnz	w0, #2, 8618 <inflate@@Base+0x530>
    8604:	mov	w0, #0x3f36                	// #16182
    8608:	str	w0, [x21, #8]
    860c:	mov	w19, #0x0                   	// #0
    8610:	mov	x22, #0x0                   	// #0
    8614:	b	8644 <inflate@@Base+0x55c>
    8618:	strb	w22, [sp, #152]
    861c:	lsr	x22, x22, #8
    8620:	strb	w22, [sp, #153]
    8624:	mov	w2, #0x2                   	// #2
    8628:	add	x1, sp, #0x98
    862c:	ldr	x0, [x21, #32]
    8630:	bl	2430 <crc32@plt>
    8634:	str	x0, [x21, #32]
    8638:	b	8604 <inflate@@Base+0x51c>
    863c:	cmp	w19, #0x1f
    8640:	b.hi	866c <inflate@@Base+0x584>  // b.pmore
    8644:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8648:	sub	w20, w20, #0x1
    864c:	ldrb	w0, [x23], #1
    8650:	lsl	x0, x0, x19
    8654:	add	x22, x22, x0
    8658:	add	w19, w19, #0x8
    865c:	cmp	w19, #0x1f
    8660:	b.hi	866c <inflate@@Base+0x584>  // b.pmore
    8664:	cbnz	w20, 8648 <inflate@@Base+0x560>
    8668:	b	81d0 <inflate@@Base+0xe8>
    866c:	ldr	x0, [x21, #48]
    8670:	cbz	x0, 8678 <inflate@@Base+0x590>
    8674:	str	x22, [x0, #8]
    8678:	ldr	w0, [x21, #24]
    867c:	tbz	w0, #9, 8688 <inflate@@Base+0x5a0>
    8680:	ldr	w0, [x21, #16]
    8684:	tbnz	w0, #2, 869c <inflate@@Base+0x5b4>
    8688:	mov	w0, #0x3f37                	// #16183
    868c:	str	w0, [x21, #8]
    8690:	mov	x22, #0x0                   	// #0
    8694:	mov	w19, #0x0                   	// #0
    8698:	b	86d8 <inflate@@Base+0x5f0>
    869c:	strb	w22, [sp, #152]
    86a0:	lsr	x0, x22, #8
    86a4:	strb	w0, [sp, #153]
    86a8:	lsr	x0, x22, #16
    86ac:	strb	w0, [sp, #154]
    86b0:	lsr	x22, x22, #24
    86b4:	strb	w22, [sp, #155]
    86b8:	mov	w2, #0x4                   	// #4
    86bc:	add	x1, sp, #0x98
    86c0:	ldr	x0, [x21, #32]
    86c4:	bl	2430 <crc32@plt>
    86c8:	str	x0, [x21, #32]
    86cc:	b	8688 <inflate@@Base+0x5a0>
    86d0:	cmp	w19, #0xf
    86d4:	b.hi	8700 <inflate@@Base+0x618>  // b.pmore
    86d8:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    86dc:	sub	w20, w20, #0x1
    86e0:	ldrb	w0, [x23], #1
    86e4:	lsl	x0, x0, x19
    86e8:	add	x22, x22, x0
    86ec:	add	w19, w19, #0x8
    86f0:	cmp	w19, #0xf
    86f4:	b.hi	8700 <inflate@@Base+0x618>  // b.pmore
    86f8:	cbnz	w20, 86dc <inflate@@Base+0x5f4>
    86fc:	b	81d0 <inflate@@Base+0xe8>
    8700:	ldr	x0, [x21, #48]
    8704:	cbz	x0, 871c <inflate@@Base+0x634>
    8708:	and	w1, w22, #0xff
    870c:	str	w1, [x0, #16]
    8710:	ldr	x0, [x21, #48]
    8714:	lsr	x1, x22, #8
    8718:	str	w1, [x0, #20]
    871c:	ldr	w0, [x21, #24]
    8720:	tbz	w0, #9, 872c <inflate@@Base+0x644>
    8724:	ldr	w0, [x21, #16]
    8728:	tbnz	w0, #2, 8748 <inflate@@Base+0x660>
    872c:	mov	w0, #0x3f38                	// #16184
    8730:	str	w0, [x21, #8]
    8734:	ldr	w0, [x21, #24]
    8738:	tbnz	w0, #10, 88cc <inflate@@Base+0x7e4>
    873c:	mov	w19, #0x0                   	// #0
    8740:	mov	x22, #0x0                   	// #0
    8744:	b	8774 <inflate@@Base+0x68c>
    8748:	strb	w22, [sp, #152]
    874c:	lsr	x22, x22, #8
    8750:	strb	w22, [sp, #153]
    8754:	mov	w2, #0x2                   	// #2
    8758:	add	x1, sp, #0x98
    875c:	ldr	x0, [x21, #32]
    8760:	bl	2430 <crc32@plt>
    8764:	str	x0, [x21, #32]
    8768:	b	872c <inflate@@Base+0x644>
    876c:	ldr	w0, [x21, #24]
    8770:	tbnz	w0, #10, 889c <inflate@@Base+0x7b4>
    8774:	ldr	x0, [x21, #48]
    8778:	cbz	x0, 8780 <inflate@@Base+0x698>
    877c:	str	xzr, [x0, #24]
    8780:	mov	w0, #0x3f39                	// #16185
    8784:	str	w0, [x21, #8]
    8788:	ldr	w0, [x21, #24]
    878c:	tbz	w0, #10, 880c <inflate@@Base+0x724>
    8790:	ldr	w1, [x21, #92]
    8794:	cmp	w20, w1
    8798:	csel	w28, w20, w1, ls  // ls = plast
    879c:	cbz	w28, 8804 <inflate@@Base+0x71c>
    87a0:	ldr	x2, [x21, #48]
    87a4:	cbz	x2, 87e0 <inflate@@Base+0x6f8>
    87a8:	ldr	x0, [x2, #24]
    87ac:	cbz	x0, 87e0 <inflate@@Base+0x6f8>
    87b0:	ldr	w4, [x2, #32]
    87b4:	sub	w3, w4, w1
    87b8:	sub	w6, w4, w1
    87bc:	ldr	w5, [x2, #36]
    87c0:	add	w3, w28, w3
    87c4:	add	w1, w5, w1
    87c8:	sub	w2, w1, w4
    87cc:	cmp	w3, w5
    87d0:	csel	w2, w28, w2, ls  // ls = plast
    87d4:	mov	x1, x23
    87d8:	add	x0, x0, x6
    87dc:	bl	23a0 <memcpy@plt>
    87e0:	ldr	w0, [x21, #24]
    87e4:	tbz	w0, #9, 87f0 <inflate@@Base+0x708>
    87e8:	ldr	w0, [x21, #16]
    87ec:	tbnz	w0, #2, 893c <inflate@@Base+0x854>
    87f0:	sub	w20, w20, w28
    87f4:	add	x23, x23, w28, uxtw
    87f8:	ldr	w0, [x21, #92]
    87fc:	sub	w28, w0, w28
    8800:	str	w28, [x21, #92]
    8804:	ldr	w0, [x21, #92]
    8808:	cbnz	w0, 81d0 <inflate@@Base+0xe8>
    880c:	str	wzr, [x21, #92]
    8810:	mov	w0, #0x3f3a                	// #16186
    8814:	str	w0, [x21, #8]
    8818:	ldr	w0, [x21, #24]
    881c:	tbnz	w0, #11, 8954 <inflate@@Base+0x86c>
    8820:	ldr	x0, [x21, #48]
    8824:	cbz	x0, 882c <inflate@@Base+0x744>
    8828:	str	xzr, [x0, #40]
    882c:	str	wzr, [x21, #92]
    8830:	mov	w0, #0x3f3b                	// #16187
    8834:	str	w0, [x21, #8]
    8838:	ldr	w0, [x21, #24]
    883c:	tbnz	w0, #12, 89e8 <inflate@@Base+0x900>
    8840:	ldr	x0, [x21, #48]
    8844:	cbz	x0, 884c <inflate@@Base+0x764>
    8848:	str	xzr, [x0, #56]
    884c:	mov	w0, #0x3f3c                	// #16188
    8850:	str	w0, [x21, #8]
    8854:	ldr	w1, [x21, #24]
    8858:	tbnz	w1, #9, 8a7c <inflate@@Base+0x994>
    885c:	ldr	x0, [x21, #48]
    8860:	cbz	x0, 8878 <inflate@@Base+0x790>
    8864:	ubfx	x1, x1, #9, #1
    8868:	str	w1, [x0, #68]
    886c:	ldr	x0, [x21, #48]
    8870:	mov	w1, #0x1                   	// #1
    8874:	str	w1, [x0, #72]
    8878:	mov	w2, #0x0                   	// #0
    887c:	mov	x1, #0x0                   	// #0
    8880:	mov	x0, #0x0                   	// #0
    8884:	bl	2430 <crc32@plt>
    8888:	str	x0, [x21, #32]
    888c:	str	x0, [x24, #96]
    8890:	mov	w0, #0x3f3f                	// #16191
    8894:	str	w0, [x21, #8]
    8898:	b	8178 <inflate@@Base+0x90>
    889c:	cmp	w19, #0xf
    88a0:	b.hi	88d8 <inflate@@Base+0x7f0>  // b.pmore
    88a4:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    88a8:	sub	w20, w20, #0x1
    88ac:	ldrb	w0, [x23], #1
    88b0:	lsl	x0, x0, x19
    88b4:	add	x22, x22, x0
    88b8:	add	w19, w19, #0x8
    88bc:	cmp	w19, #0xf
    88c0:	b.hi	88d8 <inflate@@Base+0x7f0>  // b.pmore
    88c4:	cbnz	w20, 88a8 <inflate@@Base+0x7c0>
    88c8:	b	81d0 <inflate@@Base+0xe8>
    88cc:	mov	w19, #0x0                   	// #0
    88d0:	mov	x22, #0x0                   	// #0
    88d4:	b	88a4 <inflate@@Base+0x7bc>
    88d8:	str	w22, [x21, #92]
    88dc:	ldr	x0, [x21, #48]
    88e0:	cbz	x0, 88e8 <inflate@@Base+0x800>
    88e4:	str	w22, [x0, #32]
    88e8:	ldr	w0, [x21, #24]
    88ec:	tbz	w0, #9, 8930 <inflate@@Base+0x848>
    88f0:	ldr	w0, [x21, #16]
    88f4:	tbnz	w0, #2, 8904 <inflate@@Base+0x81c>
    88f8:	mov	w19, #0x0                   	// #0
    88fc:	mov	x22, #0x0                   	// #0
    8900:	b	8780 <inflate@@Base+0x698>
    8904:	strb	w22, [sp, #152]
    8908:	lsr	x22, x22, #8
    890c:	strb	w22, [sp, #153]
    8910:	mov	w2, #0x2                   	// #2
    8914:	add	x1, sp, #0x98
    8918:	ldr	x0, [x21, #32]
    891c:	bl	2430 <crc32@plt>
    8920:	str	x0, [x21, #32]
    8924:	mov	w19, #0x0                   	// #0
    8928:	mov	x22, #0x0                   	// #0
    892c:	b	8780 <inflate@@Base+0x698>
    8930:	mov	w19, #0x0                   	// #0
    8934:	mov	x22, #0x0                   	// #0
    8938:	b	8780 <inflate@@Base+0x698>
    893c:	mov	w2, w28
    8940:	mov	x1, x23
    8944:	ldr	x0, [x21, #32]
    8948:	bl	2430 <crc32@plt>
    894c:	str	x0, [x21, #32]
    8950:	b	87f0 <inflate@@Base+0x708>
    8954:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8958:	mov	w28, #0x0                   	// #0
    895c:	b	8970 <inflate@@Base+0x888>
    8960:	ldr	w0, [sp, #112]
    8964:	cmp	w0, #0x0
    8968:	ccmp	w20, w28, #0x0, ne  // ne = any
    896c:	b.ls	89ac <inflate@@Base+0x8c4>  // b.plast
    8970:	ldrb	w3, [x23, w28, uxtw]
    8974:	str	w3, [sp, #112]
    8978:	add	w28, w28, #0x1
    897c:	ldr	x0, [x21, #48]
    8980:	cbz	x0, 8960 <inflate@@Base+0x878>
    8984:	ldr	x1, [x0, #40]
    8988:	cbz	x1, 8960 <inflate@@Base+0x878>
    898c:	ldr	w2, [x21, #92]
    8990:	ldr	w0, [x0, #48]
    8994:	cmp	w2, w0
    8998:	b.cs	8960 <inflate@@Base+0x878>  // b.hs, b.nlast
    899c:	add	w0, w2, #0x1
    89a0:	str	w0, [x21, #92]
    89a4:	strb	w3, [x1, w2, uxtw]
    89a8:	b	8960 <inflate@@Base+0x878>
    89ac:	ldr	w0, [x21, #24]
    89b0:	tbz	w0, #9, 89bc <inflate@@Base+0x8d4>
    89b4:	ldr	w0, [x21, #16]
    89b8:	tbnz	w0, #2, 89d0 <inflate@@Base+0x8e8>
    89bc:	sub	w20, w20, w28
    89c0:	add	x23, x23, w28, uxtw
    89c4:	ldr	w0, [sp, #112]
    89c8:	cbz	w0, 882c <inflate@@Base+0x744>
    89cc:	b	81d0 <inflate@@Base+0xe8>
    89d0:	mov	w2, w28
    89d4:	mov	x1, x23
    89d8:	ldr	x0, [x21, #32]
    89dc:	bl	2430 <crc32@plt>
    89e0:	str	x0, [x21, #32]
    89e4:	b	89bc <inflate@@Base+0x8d4>
    89e8:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    89ec:	mov	w28, #0x0                   	// #0
    89f0:	b	8a04 <inflate@@Base+0x91c>
    89f4:	ldr	w0, [sp, #112]
    89f8:	cmp	w0, #0x0
    89fc:	ccmp	w20, w28, #0x0, ne  // ne = any
    8a00:	b.ls	8a40 <inflate@@Base+0x958>  // b.plast
    8a04:	ldrb	w3, [x23, w28, uxtw]
    8a08:	str	w3, [sp, #112]
    8a0c:	add	w28, w28, #0x1
    8a10:	ldr	x0, [x21, #48]
    8a14:	cbz	x0, 89f4 <inflate@@Base+0x90c>
    8a18:	ldr	x1, [x0, #56]
    8a1c:	cbz	x1, 89f4 <inflate@@Base+0x90c>
    8a20:	ldr	w2, [x21, #92]
    8a24:	ldr	w0, [x0, #64]
    8a28:	cmp	w2, w0
    8a2c:	b.cs	89f4 <inflate@@Base+0x90c>  // b.hs, b.nlast
    8a30:	add	w0, w2, #0x1
    8a34:	str	w0, [x21, #92]
    8a38:	strb	w3, [x1, w2, uxtw]
    8a3c:	b	89f4 <inflate@@Base+0x90c>
    8a40:	ldr	w0, [x21, #24]
    8a44:	tbz	w0, #9, 8a50 <inflate@@Base+0x968>
    8a48:	ldr	w0, [x21, #16]
    8a4c:	tbnz	w0, #2, 8a64 <inflate@@Base+0x97c>
    8a50:	sub	w20, w20, w28
    8a54:	add	x23, x23, w28, uxtw
    8a58:	ldr	w0, [sp, #112]
    8a5c:	cbz	w0, 884c <inflate@@Base+0x764>
    8a60:	b	81d0 <inflate@@Base+0xe8>
    8a64:	mov	w2, w28
    8a68:	mov	x1, x23
    8a6c:	ldr	x0, [x21, #32]
    8a70:	bl	2430 <crc32@plt>
    8a74:	str	x0, [x21, #32]
    8a78:	b	8a50 <inflate@@Base+0x968>
    8a7c:	cmp	w19, #0xf
    8a80:	b.hi	8aac <inflate@@Base+0x9c4>  // b.pmore
    8a84:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8a88:	sub	w20, w20, #0x1
    8a8c:	ldrb	w0, [x23], #1
    8a90:	lsl	x0, x0, x19
    8a94:	add	x22, x22, x0
    8a98:	add	w19, w19, #0x8
    8a9c:	cmp	w19, #0xf
    8aa0:	b.hi	8aac <inflate@@Base+0x9c4>  // b.pmore
    8aa4:	cbnz	w20, 8a88 <inflate@@Base+0x9a0>
    8aa8:	b	81d0 <inflate@@Base+0xe8>
    8aac:	ldr	w0, [x21, #16]
    8ab0:	tbz	w0, #2, 8ad8 <inflate@@Base+0x9f0>
    8ab4:	ldrh	w0, [x21, #32]
    8ab8:	cmp	x0, x22
    8abc:	b.eq	8ae4 <inflate@@Base+0x9fc>  // b.none
    8ac0:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    8ac4:	add	x0, x0, #0x4c0
    8ac8:	str	x0, [x24, #48]
    8acc:	mov	w0, #0x3f51                	// #16209
    8ad0:	str	w0, [x21, #8]
    8ad4:	b	8178 <inflate@@Base+0x90>
    8ad8:	mov	w19, #0x0                   	// #0
    8adc:	mov	x22, #0x0                   	// #0
    8ae0:	b	885c <inflate@@Base+0x774>
    8ae4:	mov	w19, #0x0                   	// #0
    8ae8:	mov	x22, #0x0                   	// #0
    8aec:	b	885c <inflate@@Base+0x774>
    8af0:	lsr	w0, w22, #24
    8af4:	lsr	x1, x22, #8
    8af8:	and	x1, x1, #0xff00
    8afc:	orr	x0, x0, x1
    8b00:	lsl	x1, x22, #8
    8b04:	and	x1, x1, #0xff0000
    8b08:	lsl	w22, w22, #24
    8b0c:	add	x1, x1, x22
    8b10:	add	x0, x0, x1
    8b14:	str	x0, [x21, #32]
    8b18:	str	x0, [x24, #96]
    8b1c:	mov	w0, #0x3f3e                	// #16190
    8b20:	str	w0, [x21, #8]
    8b24:	mov	w19, #0x0                   	// #0
    8b28:	mov	x22, #0x0                   	// #0
    8b2c:	ldr	w0, [x21, #20]
    8b30:	cbz	w0, 8b84 <inflate@@Base+0xa9c>
    8b34:	mov	w2, #0x0                   	// #0
    8b38:	mov	x1, #0x0                   	// #0
    8b3c:	mov	x0, #0x0                   	// #0
    8b40:	bl	2560 <adler32@plt>
    8b44:	str	x0, [x21, #32]
    8b48:	str	x0, [x24, #96]
    8b4c:	mov	w0, #0x3f3f                	// #16191
    8b50:	str	w0, [x21, #8]
    8b54:	ldr	w0, [sp, #104]
    8b58:	sub	w0, w0, #0x5
    8b5c:	cmp	w0, #0x1
    8b60:	b.ls	81d0 <inflate@@Base+0xe8>  // b.plast
    8b64:	ldr	w0, [x21, #12]
    8b68:	cbz	w0, 8bb8 <inflate@@Base+0xad0>
    8b6c:	and	w0, w19, #0x7
    8b70:	lsr	x22, x22, x0
    8b74:	and	w19, w19, #0xfffffff8
    8b78:	mov	w0, #0x3f4e                	// #16206
    8b7c:	str	w0, [x21, #8]
    8b80:	b	8178 <inflate@@Base+0x90>
    8b84:	str	x27, [x24, #24]
    8b88:	str	w26, [x24, #32]
    8b8c:	str	x23, [x24]
    8b90:	str	w20, [x24, #8]
    8b94:	str	x22, [x21, #80]
    8b98:	str	w19, [x21, #88]
    8b9c:	mov	w0, #0x2                   	// #2
    8ba0:	str	w0, [sp, #96]
    8ba4:	ldp	x19, x20, [sp, #16]
    8ba8:	ldp	x21, x22, [sp, #32]
    8bac:	ldp	x25, x26, [sp, #64]
    8bb0:	ldp	x27, x28, [sp, #80]
    8bb4:	b	8314 <inflate@@Base+0x22c>
    8bb8:	cmp	w19, #0x2
    8bbc:	b.hi	8bd8 <inflate@@Base+0xaf0>  // b.pmore
    8bc0:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8bc4:	sub	w20, w20, #0x1
    8bc8:	ldrb	w0, [x23], #1
    8bcc:	lsl	x0, x0, x19
    8bd0:	add	x22, x22, x0
    8bd4:	add	w19, w19, #0x8
    8bd8:	and	w0, w22, #0x1
    8bdc:	str	w0, [x21, #12]
    8be0:	ubfx	w0, w22, #1, #2
    8be4:	cmp	w0, #0x2
    8be8:	b.eq	8c54 <inflate@@Base+0xb6c>  // b.none
    8bec:	cmp	w0, #0x2
    8bf0:	b.hi	8c60 <inflate@@Base+0xb78>  // b.pmore
    8bf4:	cbz	w0, 8c40 <inflate@@Base+0xb58>
    8bf8:	cmp	w0, #0x1
    8bfc:	b.ne	8c48 <inflate@@Base+0xb60>  // b.any
    8c00:	ldr	x1, [sp, #128]
    8c04:	str	x1, [x21, #104]
    8c08:	mov	w0, #0x9                   	// #9
    8c0c:	str	w0, [x21, #120]
    8c10:	add	x0, x1, #0x800
    8c14:	str	x0, [x21, #112]
    8c18:	mov	w0, #0x5                   	// #5
    8c1c:	str	w0, [x21, #124]
    8c20:	mov	w0, #0x3f47                	// #16199
    8c24:	str	w0, [x21, #8]
    8c28:	ldr	w0, [sp, #104]
    8c2c:	cmp	w0, #0x6
    8c30:	b.ne	8c48 <inflate@@Base+0xb60>  // b.any
    8c34:	lsr	x22, x22, #3
    8c38:	sub	w19, w19, #0x3
    8c3c:	b	81d0 <inflate@@Base+0xe8>
    8c40:	mov	w0, #0x3f41                	// #16193
    8c44:	str	w0, [x21, #8]
    8c48:	lsr	x22, x22, #3
    8c4c:	sub	w19, w19, #0x3
    8c50:	b	8178 <inflate@@Base+0x90>
    8c54:	mov	w0, #0x3f44                	// #16196
    8c58:	str	w0, [x21, #8]
    8c5c:	b	8c48 <inflate@@Base+0xb60>
    8c60:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    8c64:	add	x0, x0, #0xa50
    8c68:	str	x0, [x24, #48]
    8c6c:	mov	w0, #0x3f51                	// #16209
    8c70:	str	w0, [x21, #8]
    8c74:	b	8c48 <inflate@@Base+0xb60>
    8c78:	and	w0, w19, #0x7
    8c7c:	lsr	x22, x22, x0
    8c80:	and	w19, w19, #0xfffffff8
    8c84:	cmp	w19, #0x1f
    8c88:	b.hi	8cb4 <inflate@@Base+0xbcc>  // b.pmore
    8c8c:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8c90:	sub	w20, w20, #0x1
    8c94:	ldrb	w0, [x23], #1
    8c98:	lsl	x0, x0, x19
    8c9c:	add	x22, x22, x0
    8ca0:	add	w19, w19, #0x8
    8ca4:	cmp	w19, #0x1f
    8ca8:	b.hi	8cb4 <inflate@@Base+0xbcc>  // b.pmore
    8cac:	cbnz	w20, 8c90 <inflate@@Base+0xba8>
    8cb0:	b	81d0 <inflate@@Base+0xe8>
    8cb4:	lsr	x0, x22, #16
    8cb8:	eor	x0, x0, #0xffff
    8cbc:	cmp	x0, w22, uxth
    8cc0:	b.eq	8cdc <inflate@@Base+0xbf4>  // b.none
    8cc4:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    8cc8:	add	x0, x0, #0xa68
    8ccc:	str	x0, [x24, #48]
    8cd0:	mov	w0, #0x3f51                	// #16209
    8cd4:	str	w0, [x21, #8]
    8cd8:	b	8178 <inflate@@Base+0x90>
    8cdc:	and	w22, w22, #0xffff
    8ce0:	str	w22, [x21, #92]
    8ce4:	mov	w0, #0x3f42                	// #16194
    8ce8:	str	w0, [x21, #8]
    8cec:	ldr	w0, [sp, #104]
    8cf0:	cmp	w0, #0x6
    8cf4:	b.eq	9934 <inflate@@Base+0x184c>  // b.none
    8cf8:	mov	w19, #0x0                   	// #0
    8cfc:	mov	x22, #0x0                   	// #0
    8d00:	mov	w0, #0x3f43                	// #16195
    8d04:	str	w0, [x21, #8]
    8d08:	ldr	w0, [x21, #92]
    8d0c:	cbz	w0, 8d60 <inflate@@Base+0xc78>
    8d10:	cmp	w26, w0
    8d14:	csel	w0, w26, w0, ls  // ls = plast
    8d18:	cmp	w20, w0
    8d1c:	csel	w28, w20, w0, ls  // ls = plast
    8d20:	cbz	w28, 81d0 <inflate@@Base+0xe8>
    8d24:	mov	w0, w28
    8d28:	str	x0, [sp, #112]
    8d2c:	mov	x2, x0
    8d30:	mov	x1, x23
    8d34:	mov	x0, x27
    8d38:	bl	23a0 <memcpy@plt>
    8d3c:	sub	w20, w20, w28
    8d40:	ldr	x0, [sp, #112]
    8d44:	add	x23, x23, x0
    8d48:	sub	w26, w26, w28
    8d4c:	add	x27, x27, x0
    8d50:	ldr	w0, [x21, #92]
    8d54:	sub	w0, w0, w28
    8d58:	str	w0, [x21, #92]
    8d5c:	b	8178 <inflate@@Base+0x90>
    8d60:	mov	w0, #0x3f3f                	// #16191
    8d64:	str	w0, [x21, #8]
    8d68:	b	8178 <inflate@@Base+0x90>
    8d6c:	and	w2, w22, #0x1f
    8d70:	add	w2, w2, #0x101
    8d74:	str	w2, [x21, #132]
    8d78:	ubfx	w1, w22, #5, #5
    8d7c:	add	w1, w1, #0x1
    8d80:	str	w1, [x21, #136]
    8d84:	ubfx	w0, w22, #10, #4
    8d88:	add	w0, w0, #0x4
    8d8c:	str	w0, [x21, #128]
    8d90:	lsr	x22, x22, #14
    8d94:	sub	w19, w19, #0xe
    8d98:	cmp	w2, #0x11e
    8d9c:	ccmp	w1, #0x1e, #0x2, ls  // ls = plast
    8da0:	b.ls	8dbc <inflate@@Base+0xcd4>  // b.plast
    8da4:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    8da8:	add	x0, x0, #0xa88
    8dac:	str	x0, [x24, #48]
    8db0:	mov	w0, #0x3f51                	// #16209
    8db4:	str	w0, [x21, #8]
    8db8:	b	8178 <inflate@@Base+0x90>
    8dbc:	str	wzr, [x21, #140]
    8dc0:	mov	w1, #0x3f45                	// #16197
    8dc4:	str	w1, [x21, #8]
    8dc8:	mov	w1, #0x0                   	// #0
    8dcc:	b	8ea0 <inflate@@Base+0xdb8>
    8dd0:	ldr	w1, [x21, #140]
    8dd4:	ldr	w0, [x21, #128]
    8dd8:	cmp	w1, w0
    8ddc:	b.cc	8ea0 <inflate@@Base+0xdb8>  // b.lo, b.ul, b.last
    8de0:	ldr	w2, [x21, #140]
    8de4:	cmp	w2, #0x12
    8de8:	b.hi	8e20 <inflate@@Base+0xd38>  // b.pmore
    8dec:	mov	w3, #0x12                  	// #18
    8df0:	sub	w3, w3, w2
    8df4:	ldr	x0, [sp, #120]
    8df8:	add	x2, x0, w2, uxtw #1
    8dfc:	mov	x0, #0x0                   	// #0
    8e00:	ldrh	w1, [x2, x0, lsl #1]
    8e04:	add	x1, x21, x1, lsl #1
    8e08:	strh	wzr, [x1, #152]
    8e0c:	cmp	x0, x3
    8e10:	add	x0, x0, #0x1
    8e14:	b.ne	8e00 <inflate@@Base+0xd18>  // b.any
    8e18:	mov	w0, #0x13                  	// #19
    8e1c:	str	w0, [x21, #140]
    8e20:	add	x0, x21, #0x558
    8e24:	str	x0, [x21, #144]
    8e28:	str	x0, [x21, #104]
    8e2c:	mov	w0, #0x7                   	// #7
    8e30:	str	w0, [x21, #120]
    8e34:	add	x5, x21, #0x318
    8e38:	add	x4, x21, #0x78
    8e3c:	add	x3, x21, #0x90
    8e40:	mov	w2, #0x13                  	// #19
    8e44:	add	x1, x21, #0x98
    8e48:	mov	w0, #0x0                   	// #0
    8e4c:	bl	a120 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    8e50:	str	w0, [sp, #96]
    8e54:	cbz	w0, 8ec4 <inflate@@Base+0xddc>
    8e58:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    8e5c:	add	x0, x0, #0xab0
    8e60:	str	x0, [x24, #48]
    8e64:	mov	w0, #0x3f51                	// #16209
    8e68:	str	w0, [x21, #8]
    8e6c:	b	8178 <inflate@@Base+0x90>
    8e70:	add	w2, w1, #0x1
    8e74:	str	w2, [x21, #140]
    8e78:	ldr	x3, [sp, #120]
    8e7c:	ldrh	w1, [x3, w1, uxtw #1]
    8e80:	add	x1, x21, x1, lsl #1
    8e84:	and	w3, w22, #0x7
    8e88:	strh	w3, [x1, #152]
    8e8c:	lsr	x22, x22, #3
    8e90:	sub	w19, w19, #0x3
    8e94:	cmp	w2, w0
    8e98:	b.cs	8de0 <inflate@@Base+0xcf8>  // b.hs, b.nlast
    8e9c:	mov	w1, w2
    8ea0:	cmp	w19, #0x2
    8ea4:	b.hi	8e70 <inflate@@Base+0xd88>  // b.pmore
    8ea8:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8eac:	sub	w20, w20, #0x1
    8eb0:	ldrb	w2, [x23], #1
    8eb4:	lsl	x2, x2, x19
    8eb8:	add	x22, x22, x2
    8ebc:	add	w19, w19, #0x8
    8ec0:	b	8e70 <inflate@@Base+0xd88>
    8ec4:	str	wzr, [x21, #140]
    8ec8:	mov	w0, #0x3f46                	// #16198
    8ecc:	str	w0, [x21, #8]
    8ed0:	mov	w6, #0x0                   	// #0
    8ed4:	ldr	w2, [x21, #132]
    8ed8:	ldr	w7, [x21, #136]
    8edc:	add	w7, w2, w7
    8ee0:	cbnz	w7, 90dc <inflate@@Base+0xff4>
    8ee4:	b	8f24 <inflate@@Base+0xe3c>
    8ee8:	cmp	w0, #0xf
    8eec:	b.hi	8f44 <inflate@@Base+0xe5c>  // b.pmore
    8ef0:	lsr	x22, x22, x1
    8ef4:	sub	w19, w19, w5
    8ef8:	add	w1, w6, #0x1
    8efc:	str	w1, [x21, #140]
    8f00:	add	x6, x21, w6, uxtw #1
    8f04:	strh	w0, [x6, #152]
    8f08:	ldr	w6, [x21, #140]
    8f0c:	cmp	w6, w7
    8f10:	b.cc	90fc <inflate@@Base+0x1014>  // b.lo, b.ul, b.last
    8f14:	ldr	w1, [x21, #8]
    8f18:	mov	w0, #0x3f51                	// #16209
    8f1c:	cmp	w1, w0
    8f20:	b.eq	8178 <inflate@@Base+0x90>  // b.none
    8f24:	ldrh	w0, [x21, #664]
    8f28:	cbnz	w0, 9154 <inflate@@Base+0x106c>
    8f2c:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    8f30:	add	x0, x0, #0xaf0
    8f34:	str	x0, [x24, #48]
    8f38:	mov	w0, #0x3f51                	// #16209
    8f3c:	str	w0, [x21, #8]
    8f40:	b	8178 <inflate@@Base+0x90>
    8f44:	cmp	w0, #0x10
    8f48:	b.eq	8f8c <inflate@@Base+0xea4>  // b.none
    8f4c:	cmp	w0, #0x11
    8f50:	b.eq	9008 <inflate@@Base+0xf20>  // b.none
    8f54:	mov	w11, w1
    8f58:	add	w1, w1, #0x7
    8f5c:	cmp	w1, w19
    8f60:	b.ls	9060 <inflate@@Base+0xf78>  // b.plast
    8f64:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8f68:	sub	w20, w20, #0x1
    8f6c:	ldrb	w0, [x23], #1
    8f70:	lsl	x0, x0, x19
    8f74:	add	x22, x22, x0
    8f78:	add	w19, w19, #0x8
    8f7c:	cmp	w19, w1
    8f80:	b.cs	9060 <inflate@@Base+0xf78>  // b.hs, b.nlast
    8f84:	cbnz	w20, 8f68 <inflate@@Base+0xe80>
    8f88:	b	81d0 <inflate@@Base+0xe8>
    8f8c:	mov	w11, w1
    8f90:	add	w1, w1, #0x2
    8f94:	cmp	w1, w19
    8f98:	b.ls	8fc4 <inflate@@Base+0xedc>  // b.plast
    8f9c:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    8fa0:	sub	w20, w20, #0x1
    8fa4:	ldrb	w0, [x23], #1
    8fa8:	lsl	x0, x0, x19
    8fac:	add	x22, x22, x0
    8fb0:	add	w19, w19, #0x8
    8fb4:	cmp	w19, w1
    8fb8:	b.cs	8fc4 <inflate@@Base+0xedc>  // b.hs, b.nlast
    8fbc:	cbnz	w20, 8fa0 <inflate@@Base+0xeb8>
    8fc0:	b	81d0 <inflate@@Base+0xe8>
    8fc4:	lsr	x22, x22, x11
    8fc8:	sub	w19, w19, w5
    8fcc:	cbz	w6, 8ff0 <inflate@@Base+0xf08>
    8fd0:	sub	w0, w6, #0x1
    8fd4:	add	x0, x21, x0, lsl #1
    8fd8:	ldrh	w11, [x0, #152]
    8fdc:	and	w1, w22, #0x3
    8fe0:	add	w1, w1, #0x3
    8fe4:	lsr	x22, x22, #2
    8fe8:	sub	w19, w19, #0x2
    8fec:	b	907c <inflate@@Base+0xf94>
    8ff0:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    8ff4:	add	x0, x0, #0xad0
    8ff8:	str	x0, [x24, #48]
    8ffc:	mov	w0, #0x3f51                	// #16209
    9000:	str	w0, [x21, #8]
    9004:	b	8178 <inflate@@Base+0x90>
    9008:	mov	w11, w1
    900c:	add	w1, w1, #0x3
    9010:	cmp	w1, w19
    9014:	b.ls	9040 <inflate@@Base+0xf58>  // b.plast
    9018:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    901c:	sub	w20, w20, #0x1
    9020:	ldrb	w0, [x23], #1
    9024:	lsl	x0, x0, x19
    9028:	add	x22, x22, x0
    902c:	add	w19, w19, #0x8
    9030:	cmp	w19, w1
    9034:	b.cs	9040 <inflate@@Base+0xf58>  // b.hs, b.nlast
    9038:	cbnz	w20, 901c <inflate@@Base+0xf34>
    903c:	b	81d0 <inflate@@Base+0xe8>
    9040:	lsr	x22, x22, x11
    9044:	and	w1, w22, #0x7
    9048:	add	w1, w1, #0x3
    904c:	lsr	x22, x22, #3
    9050:	sub	w5, w10, w5
    9054:	add	w19, w19, w5
    9058:	mov	w11, w8
    905c:	b	907c <inflate@@Base+0xf94>
    9060:	lsr	x22, x22, x11
    9064:	and	w1, w22, #0x7f
    9068:	add	w1, w1, #0xb
    906c:	lsr	x22, x22, #7
    9070:	sub	w5, w9, w5
    9074:	add	w19, w19, w5
    9078:	mov	w11, w8
    907c:	add	w6, w1, w6
    9080:	cmp	w6, w7
    9084:	b.hi	90ac <inflate@@Base+0xfc4>  // b.pmore
    9088:	ldr	w0, [x21, #140]
    908c:	add	w5, w0, w1
    9090:	add	x1, x21, w0, uxtw #1
    9094:	strh	w11, [x1, #152]
    9098:	add	w0, w0, #0x1
    909c:	cmp	w0, w5
    90a0:	b.ne	9090 <inflate@@Base+0xfa8>  // b.any
    90a4:	str	w5, [x21, #140]
    90a8:	b	8f08 <inflate@@Base+0xe20>
    90ac:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    90b0:	add	x0, x0, #0xad0
    90b4:	str	x0, [x24, #48]
    90b8:	mov	w0, #0x3f51                	// #16209
    90bc:	str	w0, [x21, #8]
    90c0:	b	8178 <inflate@@Base+0x90>
    90c4:	ldr	w6, [x21, #140]
    90c8:	ldr	w2, [x21, #132]
    90cc:	ldr	w7, [x21, #136]
    90d0:	add	w7, w2, w7
    90d4:	cmp	w6, w7
    90d8:	b.cs	8f14 <inflate@@Base+0xe2c>  // b.hs, b.nlast
    90dc:	ldr	x4, [x21, #104]
    90e0:	ldr	w0, [x21, #120]
    90e4:	mov	w3, #0xffffffff            	// #-1
    90e8:	lsl	w3, w3, w0
    90ec:	mvn	w3, w3
    90f0:	mov	w10, #0xfffffffd            	// #-3
    90f4:	mov	w8, #0x0                   	// #0
    90f8:	mov	w9, #0xfffffff9            	// #-7
    90fc:	and	w0, w3, w22
    9100:	add	x0, x4, x0, lsl #2
    9104:	ldrb	w1, [x0, #1]
    9108:	ldrh	w0, [x0, #2]
    910c:	mov	w5, w1
    9110:	cmp	w1, w19
    9114:	b.ls	8ee8 <inflate@@Base+0xe00>  // b.plast
    9118:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    911c:	sub	w20, w20, #0x1
    9120:	ldrb	w0, [x23], #1
    9124:	lsl	x0, x0, x19
    9128:	add	x22, x22, x0
    912c:	add	w19, w19, #0x8
    9130:	and	w0, w3, w22
    9134:	add	x0, x4, x0, lsl #2
    9138:	ldrb	w1, [x0, #1]
    913c:	ldrh	w0, [x0, #2]
    9140:	mov	w5, w1
    9144:	cmp	w1, w19
    9148:	b.ls	8ee8 <inflate@@Base+0xe00>  // b.plast
    914c:	cbnz	w20, 911c <inflate@@Base+0x1034>
    9150:	b	81d0 <inflate@@Base+0xe8>
    9154:	add	x0, x21, #0x558
    9158:	str	x0, [x21, #144]
    915c:	str	x0, [x21, #104]
    9160:	mov	w0, #0x9                   	// #9
    9164:	str	w0, [x21, #120]
    9168:	add	x28, x21, #0x98
    916c:	add	x3, x21, #0x90
    9170:	str	x3, [sp, #112]
    9174:	add	x0, x21, #0x318
    9178:	str	x0, [sp, #136]
    917c:	mov	x5, x0
    9180:	add	x4, x21, #0x78
    9184:	mov	x1, x28
    9188:	mov	w0, #0x1                   	// #1
    918c:	bl	a120 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    9190:	str	w0, [sp, #96]
    9194:	cbz	w0, 91b0 <inflate@@Base+0x10c8>
    9198:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    919c:	add	x0, x0, #0xb18
    91a0:	str	x0, [x24, #48]
    91a4:	mov	w0, #0x3f51                	// #16209
    91a8:	str	w0, [x21, #8]
    91ac:	b	8178 <inflate@@Base+0x90>
    91b0:	ldr	x0, [x21, #144]
    91b4:	str	x0, [x21, #112]
    91b8:	mov	x4, x21
    91bc:	mov	w0, #0x6                   	// #6
    91c0:	str	w0, [x4, #124]!
    91c4:	ldr	w1, [x21, #132]
    91c8:	ldr	x5, [sp, #136]
    91cc:	ldr	x3, [sp, #112]
    91d0:	ldr	w2, [x21, #136]
    91d4:	add	x1, x28, x1, lsl #1
    91d8:	mov	w0, #0x2                   	// #2
    91dc:	bl	a120 <inflateCodesUsed@@ZLIB_1.2.9+0x40>
    91e0:	str	w0, [sp, #96]
    91e4:	cbz	w0, 9200 <inflate@@Base+0x1118>
    91e8:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    91ec:	add	x0, x0, #0xb38
    91f0:	str	x0, [x24, #48]
    91f4:	mov	w0, #0x3f51                	// #16209
    91f8:	str	w0, [x21, #8]
    91fc:	b	8178 <inflate@@Base+0x90>
    9200:	mov	w0, #0x3f47                	// #16199
    9204:	str	w0, [x21, #8]
    9208:	ldr	w0, [sp, #104]
    920c:	cmp	w0, #0x6
    9210:	b.eq	81d0 <inflate@@Base+0xe8>  // b.none
    9214:	mov	w0, #0x3f48                	// #16200
    9218:	str	w0, [x21, #8]
    921c:	cmp	w26, #0x101
    9220:	ccmp	w20, #0x5, #0x0, hi  // hi = pmore
    9224:	b.ls	9280 <inflate@@Base+0x1198>  // b.plast
    9228:	str	x27, [x24, #24]
    922c:	str	w26, [x24, #32]
    9230:	str	x23, [x24]
    9234:	str	w20, [x24, #8]
    9238:	str	x22, [x21, #80]
    923c:	str	w19, [x21, #88]
    9240:	ldr	w1, [sp, #100]
    9244:	mov	x0, x24
    9248:	bl	7624 <inflateBackEnd@@ZLIB_1.2.0+0x58>
    924c:	ldr	x27, [x24, #24]
    9250:	ldr	w26, [x24, #32]
    9254:	ldr	x23, [x24]
    9258:	ldr	w20, [x24, #8]
    925c:	ldr	x22, [x21, #80]
    9260:	ldr	w19, [x21, #88]
    9264:	ldr	w1, [x21, #8]
    9268:	mov	w0, #0x3f3f                	// #16191
    926c:	cmp	w1, w0
    9270:	b.ne	8178 <inflate@@Base+0x90>  // b.any
    9274:	mov	w0, #0xffffffff            	// #-1
    9278:	str	w0, [x21, #7148]
    927c:	b	8178 <inflate@@Base+0x90>
    9280:	str	wzr, [x21, #7148]
    9284:	ldr	x2, [x21, #104]
    9288:	ldr	w1, [x21, #120]
    928c:	mov	w0, #0xffffffff            	// #-1
    9290:	lsl	w0, w0, w1
    9294:	mvn	w5, w0
    9298:	bic	w0, w22, w0
    929c:	lsl	x0, x0, #2
    92a0:	add	x1, x2, x0
    92a4:	ldrb	w3, [x2, x0]
    92a8:	ldrb	w0, [x1, #1]
    92ac:	ldrh	w1, [x1, #2]
    92b0:	mov	w4, w0
    92b4:	cmp	w19, w0
    92b8:	b.cs	9300 <inflate@@Base+0x1218>  // b.hs, b.nlast
    92bc:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    92c0:	sub	w20, w20, #0x1
    92c4:	ldrb	w0, [x23], #1
    92c8:	lsl	x0, x0, x19
    92cc:	add	x22, x22, x0
    92d0:	add	w19, w19, #0x8
    92d4:	and	w0, w5, w22
    92d8:	lsl	x0, x0, #2
    92dc:	add	x1, x2, x0
    92e0:	ldrb	w3, [x2, x0]
    92e4:	ldrb	w0, [x1, #1]
    92e8:	ldrh	w1, [x1, #2]
    92ec:	mov	w4, w0
    92f0:	cmp	w0, w19
    92f4:	b.ls	9300 <inflate@@Base+0x1218>  // b.plast
    92f8:	cbnz	w20, 92c0 <inflate@@Base+0x11d8>
    92fc:	b	81d0 <inflate@@Base+0xe8>
    9300:	cbz	w3, 930c <inflate@@Base+0x1224>
    9304:	tst	w3, #0xf0
    9308:	b.eq	9334 <inflate@@Base+0x124c>  // b.none
    930c:	lsr	x22, x22, x0
    9310:	sub	w19, w19, w0
    9314:	ldr	w2, [x21, #7148]
    9318:	add	w0, w2, w0
    931c:	str	w0, [x21, #7148]
    9320:	str	w1, [x21, #92]
    9324:	cbnz	w3, 93d4 <inflate@@Base+0x12ec>
    9328:	mov	w0, #0x3f4d                	// #16205
    932c:	str	w0, [x21, #8]
    9330:	b	8178 <inflate@@Base+0x90>
    9334:	mov	w7, w1
    9338:	mov	w5, w0
    933c:	add	w3, w3, w0
    9340:	mov	w6, #0xffffffff            	// #-1
    9344:	lsl	w3, w6, w3
    9348:	mvn	w8, w3
    934c:	bic	w3, w22, w3
    9350:	lsr	w0, w3, w0
    9354:	add	w0, w0, w1
    9358:	lsl	x0, x0, #2
    935c:	add	x1, x2, x0
    9360:	ldrb	w3, [x2, x0]
    9364:	ldrb	w0, [x1, #1]
    9368:	ldrh	w1, [x1, #2]
    936c:	add	w6, w0, w5
    9370:	cmp	w6, w19
    9374:	b.ls	93c4 <inflate@@Base+0x12dc>  // b.plast
    9378:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    937c:	sub	w20, w20, #0x1
    9380:	ldrb	w0, [x23], #1
    9384:	lsl	x0, x0, x19
    9388:	add	x22, x22, x0
    938c:	add	w19, w19, #0x8
    9390:	and	w0, w8, w22
    9394:	lsr	w0, w0, w5
    9398:	add	w0, w0, w7
    939c:	lsl	x0, x0, #2
    93a0:	add	x1, x2, x0
    93a4:	ldrb	w3, [x2, x0]
    93a8:	ldrb	w0, [x1, #1]
    93ac:	ldrh	w1, [x1, #2]
    93b0:	add	w6, w0, w5
    93b4:	cmp	w6, w19
    93b8:	b.ls	93c4 <inflate@@Base+0x12dc>  // b.plast
    93bc:	cbnz	w20, 937c <inflate@@Base+0x1294>
    93c0:	b	81d0 <inflate@@Base+0xe8>
    93c4:	lsr	x22, x22, x5
    93c8:	sub	w19, w19, w4
    93cc:	str	w5, [x21, #7148]
    93d0:	b	930c <inflate@@Base+0x1224>
    93d4:	tbz	w3, #5, 93ec <inflate@@Base+0x1304>
    93d8:	mov	w0, #0xffffffff            	// #-1
    93dc:	str	w0, [x21, #7148]
    93e0:	mov	w0, #0x3f3f                	// #16191
    93e4:	str	w0, [x21, #8]
    93e8:	b	8178 <inflate@@Base+0x90>
    93ec:	tbz	w3, #6, 9408 <inflate@@Base+0x1320>
    93f0:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    93f4:	add	x0, x0, #0xb50
    93f8:	str	x0, [x24, #48]
    93fc:	mov	w0, #0x3f51                	// #16209
    9400:	str	w0, [x21, #8]
    9404:	b	8178 <inflate@@Base+0x90>
    9408:	and	w3, w3, #0xf
    940c:	str	w3, [x21, #100]
    9410:	mov	w0, #0x3f49                	// #16201
    9414:	str	w0, [x21, #8]
    9418:	ldr	w1, [x21, #100]
    941c:	cbz	w1, 947c <inflate@@Base+0x1394>
    9420:	cmp	w1, w19
    9424:	b.ls	9450 <inflate@@Base+0x1368>  // b.plast
    9428:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    942c:	sub	w20, w20, #0x1
    9430:	ldrb	w0, [x23], #1
    9434:	lsl	x0, x0, x19
    9438:	add	x22, x22, x0
    943c:	add	w19, w19, #0x8
    9440:	cmp	w1, w19
    9444:	b.ls	9450 <inflate@@Base+0x1368>  // b.plast
    9448:	cbnz	w20, 942c <inflate@@Base+0x1344>
    944c:	b	81d0 <inflate@@Base+0xe8>
    9450:	mov	w0, #0xffffffff            	// #-1
    9454:	lsl	w0, w0, w1
    9458:	bic	w0, w22, w0
    945c:	ldr	w2, [x21, #92]
    9460:	add	w0, w2, w0
    9464:	str	w0, [x21, #92]
    9468:	lsr	x22, x22, x1
    946c:	sub	w19, w19, w1
    9470:	ldr	w0, [x21, #7148]
    9474:	add	w1, w0, w1
    9478:	str	w1, [x21, #7148]
    947c:	ldr	w0, [x21, #92]
    9480:	str	w0, [x21, #7152]
    9484:	mov	w0, #0x3f4a                	// #16202
    9488:	str	w0, [x21, #8]
    948c:	ldr	x2, [x21, #112]
    9490:	ldr	w1, [x21, #124]
    9494:	mov	w0, #0xffffffff            	// #-1
    9498:	lsl	w0, w0, w1
    949c:	mvn	w5, w0
    94a0:	bic	w0, w22, w0
    94a4:	lsl	x0, x0, #2
    94a8:	add	x1, x2, x0
    94ac:	ldrb	w3, [x2, x0]
    94b0:	ldrb	w0, [x1, #1]
    94b4:	ldrh	w1, [x1, #2]
    94b8:	mov	w4, w0
    94bc:	cmp	w19, w0
    94c0:	b.cs	9508 <inflate@@Base+0x1420>  // b.hs, b.nlast
    94c4:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    94c8:	sub	w20, w20, #0x1
    94cc:	ldrb	w0, [x23], #1
    94d0:	lsl	x0, x0, x19
    94d4:	add	x22, x22, x0
    94d8:	add	w19, w19, #0x8
    94dc:	and	w0, w5, w22
    94e0:	lsl	x0, x0, #2
    94e4:	add	x1, x2, x0
    94e8:	ldrb	w3, [x2, x0]
    94ec:	ldrb	w0, [x1, #1]
    94f0:	ldrh	w1, [x1, #2]
    94f4:	mov	w4, w0
    94f8:	cmp	w0, w19
    94fc:	b.ls	9508 <inflate@@Base+0x1420>  // b.plast
    9500:	cbnz	w20, 94c8 <inflate@@Base+0x13e0>
    9504:	b	81d0 <inflate@@Base+0xe8>
    9508:	tst	w3, #0xf0
    950c:	b.eq	9540 <inflate@@Base+0x1458>  // b.none
    9510:	lsr	x22, x22, x0
    9514:	sub	w19, w19, w0
    9518:	ldr	w2, [x21, #7148]
    951c:	add	w0, w2, w0
    9520:	str	w0, [x21, #7148]
    9524:	tbz	w3, #6, 95e8 <inflate@@Base+0x1500>
    9528:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    952c:	add	x0, x0, #0xb70
    9530:	str	x0, [x24, #48]
    9534:	mov	w0, #0x3f51                	// #16209
    9538:	str	w0, [x21, #8]
    953c:	b	8178 <inflate@@Base+0x90>
    9540:	mov	w7, w1
    9544:	mov	w5, w0
    9548:	add	w3, w3, w0
    954c:	mov	w6, #0xffffffff            	// #-1
    9550:	lsl	w3, w6, w3
    9554:	mvn	w8, w3
    9558:	bic	w3, w22, w3
    955c:	lsr	w0, w3, w0
    9560:	add	w0, w0, w1
    9564:	lsl	x0, x0, #2
    9568:	add	x1, x2, x0
    956c:	ldrb	w3, [x2, x0]
    9570:	ldrb	w0, [x1, #1]
    9574:	ldrh	w1, [x1, #2]
    9578:	add	w6, w0, w5
    957c:	cmp	w6, w19
    9580:	b.ls	95d0 <inflate@@Base+0x14e8>  // b.plast
    9584:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    9588:	sub	w20, w20, #0x1
    958c:	ldrb	w0, [x23], #1
    9590:	lsl	x0, x0, x19
    9594:	add	x22, x22, x0
    9598:	add	w19, w19, #0x8
    959c:	and	w0, w8, w22
    95a0:	lsr	w0, w0, w5
    95a4:	add	w0, w0, w7
    95a8:	lsl	x0, x0, #2
    95ac:	add	x1, x2, x0
    95b0:	ldrb	w3, [x2, x0]
    95b4:	ldrb	w0, [x1, #1]
    95b8:	ldrh	w1, [x1, #2]
    95bc:	add	w6, w0, w5
    95c0:	cmp	w6, w19
    95c4:	b.ls	95d0 <inflate@@Base+0x14e8>  // b.plast
    95c8:	cbnz	w20, 9588 <inflate@@Base+0x14a0>
    95cc:	b	81d0 <inflate@@Base+0xe8>
    95d0:	lsr	x22, x22, x5
    95d4:	sub	w19, w19, w4
    95d8:	ldr	w2, [x21, #7148]
    95dc:	add	w5, w2, w5
    95e0:	str	w5, [x21, #7148]
    95e4:	b	9510 <inflate@@Base+0x1428>
    95e8:	str	w1, [x21, #96]
    95ec:	and	w3, w3, #0xf
    95f0:	str	w3, [x21, #100]
    95f4:	mov	w0, #0x3f4b                	// #16203
    95f8:	str	w0, [x21, #8]
    95fc:	ldr	w1, [x21, #100]
    9600:	cbnz	w1, 9658 <inflate@@Base+0x1570>
    9604:	mov	w0, #0x3f4c                	// #16204
    9608:	str	w0, [x21, #8]
    960c:	cbz	w26, 81d0 <inflate@@Base+0xe8>
    9610:	ldr	w3, [x21, #96]
    9614:	ldr	w1, [sp, #100]
    9618:	sub	w0, w1, w26
    961c:	cmp	w3, w0
    9620:	b.ls	9758 <inflate@@Base+0x1670>  // b.plast
    9624:	add	w3, w3, w26
    9628:	sub	w0, w3, w1
    962c:	ldr	w1, [x21, #64]
    9630:	cmp	w1, w0
    9634:	b.cs	96b8 <inflate@@Base+0x15d0>  // b.hs, b.nlast
    9638:	ldr	w1, [x21, #7144]
    963c:	cbz	w1, 96b8 <inflate@@Base+0x15d0>
    9640:	adrp	x0, 10000 <gzclose_w@@ZLIB_1.2.3.5+0x16f0>
    9644:	add	x0, x0, #0xb88
    9648:	str	x0, [x24, #48]
    964c:	mov	w0, #0x3f51                	// #16209
    9650:	str	w0, [x21, #8]
    9654:	b	8178 <inflate@@Base+0x90>
    9658:	cmp	w1, w19
    965c:	b.ls	9688 <inflate@@Base+0x15a0>  // b.plast
    9660:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    9664:	sub	w20, w20, #0x1
    9668:	ldrb	w0, [x23], #1
    966c:	lsl	x0, x0, x19
    9670:	add	x22, x22, x0
    9674:	add	w19, w19, #0x8
    9678:	cmp	w1, w19
    967c:	b.ls	9688 <inflate@@Base+0x15a0>  // b.plast
    9680:	cbnz	w20, 9664 <inflate@@Base+0x157c>
    9684:	b	81d0 <inflate@@Base+0xe8>
    9688:	mov	w0, #0xffffffff            	// #-1
    968c:	lsl	w0, w0, w1
    9690:	bic	w0, w22, w0
    9694:	ldr	w2, [x21, #96]
    9698:	add	w0, w2, w0
    969c:	str	w0, [x21, #96]
    96a0:	lsr	x22, x22, x1
    96a4:	sub	w19, w19, w1
    96a8:	ldr	w0, [x21, #7148]
    96ac:	add	w1, w0, w1
    96b0:	str	w1, [x21, #7148]
    96b4:	b	9604 <inflate@@Base+0x151c>
    96b8:	ldr	w1, [x21, #68]
    96bc:	cmp	w1, w0
    96c0:	b.cs	9740 <inflate@@Base+0x1658>  // b.hs, b.nlast
    96c4:	sub	w0, w0, w1
    96c8:	ldr	w2, [x21, #60]
    96cc:	add	w1, w1, w2
    96d0:	ldr	w2, [sp, #100]
    96d4:	sub	w3, w2, w3
    96d8:	add	w1, w1, w3
    96dc:	ldr	x3, [x21, #72]
    96e0:	add	x3, x3, x1
    96e4:	ldr	w2, [x21, #92]
    96e8:	cmp	w2, w0
    96ec:	csel	w2, w2, w0, ls  // ls = plast
    96f0:	cmp	w26, w2
    96f4:	csel	w2, w26, w2, ls  // ls = plast
    96f8:	sub	w26, w26, w2
    96fc:	ldr	w0, [x21, #92]
    9700:	sub	w0, w0, w2
    9704:	str	w0, [x21, #92]
    9708:	sub	w2, w2, #0x1
    970c:	add	x4, x2, #0x1
    9710:	mov	x0, #0x0                   	// #0
    9714:	ldrb	w1, [x3, x0]
    9718:	strb	w1, [x27, x0]
    971c:	cmp	x2, x0
    9720:	add	x0, x0, #0x1
    9724:	b.ne	9714 <inflate@@Base+0x162c>  // b.any
    9728:	add	x27, x27, x4
    972c:	ldr	w0, [x21, #92]
    9730:	cbnz	w0, 8178 <inflate@@Base+0x90>
    9734:	mov	w0, #0x3f48                	// #16200
    9738:	str	w0, [x21, #8]
    973c:	b	8178 <inflate@@Base+0x90>
    9740:	ldr	w2, [sp, #100]
    9744:	add	w1, w1, w2
    9748:	sub	w1, w1, w3
    974c:	ldr	x3, [x21, #72]
    9750:	add	x3, x3, x1
    9754:	b	96e4 <inflate@@Base+0x15fc>
    9758:	sub	x3, x27, w3, uxtw
    975c:	ldr	w2, [x21, #92]
    9760:	b	96f0 <inflate@@Base+0x1608>
    9764:	cbz	w26, 81d0 <inflate@@Base+0xe8>
    9768:	mov	x0, x27
    976c:	ldr	w1, [x21, #92]
    9770:	strb	w1, [x0], #1
    9774:	sub	w26, w26, #0x1
    9778:	mov	w1, #0x3f48                	// #16200
    977c:	str	w1, [x21, #8]
    9780:	mov	x27, x0
    9784:	b	8178 <inflate@@Base+0x90>
    9788:	ldr	w0, [x21, #16]
    978c:	cbz	w0, 9890 <inflate@@Base+0x17a8>
    9790:	cmp	w19, #0x1f
    9794:	b.hi	97c0 <inflate@@Base+0x16d8>  // b.pmore
    9798:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    979c:	sub	w20, w20, #0x1
    97a0:	ldrb	w0, [x23], #1
    97a4:	lsl	x0, x0, x19
    97a8:	add	x22, x22, x0
    97ac:	add	w19, w19, #0x8
    97b0:	cmp	w19, #0x1f
    97b4:	b.hi	97c0 <inflate@@Base+0x16d8>  // b.pmore
    97b8:	cbnz	w20, 979c <inflate@@Base+0x16b4>
    97bc:	b	81d0 <inflate@@Base+0xe8>
    97c0:	ldr	w0, [sp, #100]
    97c4:	sub	w2, w0, w26
    97c8:	sub	w1, w0, w26
    97cc:	ldr	x0, [x24, #40]
    97d0:	add	x0, x0, x1
    97d4:	str	x0, [x24, #40]
    97d8:	ldr	x0, [x21, #40]
    97dc:	add	x0, x0, x1
    97e0:	str	x0, [x21, #40]
    97e4:	ldr	w0, [x21, #16]
    97e8:	tst	x0, #0x4
    97ec:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    97f0:	b.ne	9854 <inflate@@Base+0x176c>  // b.any
    97f4:	ldr	w0, [x21, #16]
    97f8:	tbz	w0, #2, 9884 <inflate@@Base+0x179c>
    97fc:	ldr	w1, [x21, #24]
    9800:	mov	x0, x22
    9804:	cbnz	w1, 982c <inflate@@Base+0x1744>
    9808:	lsr	w0, w22, #24
    980c:	lsr	x1, x22, #8
    9810:	and	x1, x1, #0xff00
    9814:	orr	x0, x0, x1
    9818:	lsl	x1, x22, #8
    981c:	and	x1, x1, #0xff0000
    9820:	lsl	w2, w22, #24
    9824:	add	x1, x1, x2
    9828:	add	x0, x0, x1
    982c:	ldr	x1, [x21, #32]
    9830:	cmp	x1, x0
    9834:	b.eq	98d8 <inflate@@Base+0x17f0>  // b.none
    9838:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    983c:	add	x0, x0, #0x4d8
    9840:	str	x0, [x24, #48]
    9844:	mov	w0, #0x3f51                	// #16209
    9848:	str	w0, [x21, #8]
    984c:	str	w26, [sp, #100]
    9850:	b	8178 <inflate@@Base+0x90>
    9854:	ldr	w0, [x21, #24]
    9858:	cbz	w0, 9874 <inflate@@Base+0x178c>
    985c:	sub	x1, x27, x1
    9860:	ldr	x0, [x21, #32]
    9864:	bl	2430 <crc32@plt>
    9868:	str	x0, [x21, #32]
    986c:	str	x0, [x24, #96]
    9870:	b	97f4 <inflate@@Base+0x170c>
    9874:	sub	x1, x27, x1
    9878:	ldr	x0, [x21, #32]
    987c:	bl	2560 <adler32@plt>
    9880:	b	9868 <inflate@@Base+0x1780>
    9884:	str	w26, [sp, #100]
    9888:	mov	w19, #0x0                   	// #0
    988c:	mov	x22, #0x0                   	// #0
    9890:	mov	w0, #0x3f4f                	// #16207
    9894:	str	w0, [x21, #8]
    9898:	ldr	w0, [x21, #16]
    989c:	cbz	w0, 9914 <inflate@@Base+0x182c>
    98a0:	ldr	w0, [x21, #24]
    98a4:	cbz	w0, 9914 <inflate@@Base+0x182c>
    98a8:	cmp	w19, #0x1f
    98ac:	b.hi	98e8 <inflate@@Base+0x1800>  // b.pmore
    98b0:	cbz	w20, 81d0 <inflate@@Base+0xe8>
    98b4:	sub	w20, w20, #0x1
    98b8:	ldrb	w0, [x23], #1
    98bc:	lsl	x0, x0, x19
    98c0:	add	x22, x22, x0
    98c4:	add	w19, w19, #0x8
    98c8:	cmp	w19, #0x1f
    98cc:	b.hi	98e8 <inflate@@Base+0x1800>  // b.pmore
    98d0:	cbnz	w20, 98b4 <inflate@@Base+0x17cc>
    98d4:	b	81d0 <inflate@@Base+0xe8>
    98d8:	str	w26, [sp, #100]
    98dc:	mov	w19, #0x0                   	// #0
    98e0:	mov	x22, #0x0                   	// #0
    98e4:	b	9890 <inflate@@Base+0x17a8>
    98e8:	ldr	w0, [x21, #40]
    98ec:	cmp	x0, x22
    98f0:	b.eq	990c <inflate@@Base+0x1824>  // b.none
    98f4:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    98f8:	add	x0, x0, #0x4f0
    98fc:	str	x0, [x24, #48]
    9900:	mov	w0, #0x3f51                	// #16209
    9904:	str	w0, [x21, #8]
    9908:	b	8178 <inflate@@Base+0x90>
    990c:	mov	w19, #0x0                   	// #0
    9910:	mov	x22, #0x0                   	// #0
    9914:	mov	w0, #0x3f50                	// #16208
    9918:	str	w0, [x21, #8]
    991c:	mov	w0, #0x1                   	// #1
    9920:	str	w0, [sp, #96]
    9924:	b	81d0 <inflate@@Base+0xe8>
    9928:	mov	w0, #0xfffffffd            	// #-3
    992c:	str	w0, [sp, #96]
    9930:	b	81d0 <inflate@@Base+0xe8>
    9934:	mov	w19, #0x0                   	// #0
    9938:	mov	x22, #0x0                   	// #0
    993c:	b	81d0 <inflate@@Base+0xe8>
    9940:	mov	w0, #0x3f52                	// #16210
    9944:	str	w0, [x21, #8]
    9948:	mov	w0, #0xfffffffc            	// #-4
    994c:	str	w0, [sp, #96]
    9950:	ldp	x19, x20, [sp, #16]
    9954:	ldp	x21, x22, [sp, #32]
    9958:	ldp	x25, x26, [sp, #64]
    995c:	ldp	x27, x28, [sp, #80]
    9960:	b	8314 <inflate@@Base+0x22c>
    9964:	ldr	w0, [x21, #24]
    9968:	cbz	w0, 998c <inflate@@Base+0x18a4>
    996c:	ldr	x0, [x24, #24]
    9970:	mov	w2, w19
    9974:	sub	x1, x0, x1
    9978:	ldr	x0, [x21, #32]
    997c:	bl	2430 <crc32@plt>
    9980:	str	x0, [x21, #32]
    9984:	str	x0, [x24, #96]
    9988:	b	8294 <inflate@@Base+0x1ac>
    998c:	ldr	x0, [x24, #24]
    9990:	mov	w2, w19
    9994:	sub	x1, x0, x1
    9998:	ldr	x0, [x21, #32]
    999c:	bl	2560 <adler32@plt>
    99a0:	b	9980 <inflate@@Base+0x1898>
    99a4:	mov	w0, #0xfffffffe            	// #-2
    99a8:	str	w0, [sp, #96]
    99ac:	b	8314 <inflate@@Base+0x22c>
    99b0:	mov	w0, #0xfffffffe            	// #-2
    99b4:	str	w0, [sp, #96]
    99b8:	ldp	x25, x26, [sp, #64]
    99bc:	b	8314 <inflate@@Base+0x22c>
    99c0:	mov	w0, #0xfffffffc            	// #-4
    99c4:	str	w0, [sp, #96]
    99c8:	ldp	x19, x20, [sp, #16]
    99cc:	ldp	x21, x22, [sp, #32]
    99d0:	ldp	x25, x26, [sp, #64]
    99d4:	ldp	x27, x28, [sp, #80]
    99d8:	b	8314 <inflate@@Base+0x22c>
    99dc:	add	w0, w0, #0x80
    99e0:	b	82d4 <inflate@@Base+0x1ec>
    99e4:	ldr	w0, [x24, #8]
    99e8:	ldr	w1, [sp, #108]
    99ec:	sub	w20, w1, w0
    99f0:	sub	w0, w1, w0
    99f4:	ldr	x1, [x24, #16]
    99f8:	add	x0, x1, x0
    99fc:	str	x0, [x24, #16]
    9a00:	b	8294 <inflate@@Base+0x1ac>
    9a04:	ldp	x19, x20, [sp, #16]
    9a08:	ldp	x21, x22, [sp, #32]
    9a0c:	ldp	x25, x26, [sp, #64]
    9a10:	ldp	x27, x28, [sp, #80]
    9a14:	b	8314 <inflate@@Base+0x22c>

0000000000009a18 <inflateEnd@@Base>:
    9a18:	stp	x29, x30, [sp, #-32]!
    9a1c:	mov	x29, sp
    9a20:	stp	x19, x20, [sp, #16]
    9a24:	mov	x19, x0
    9a28:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9a2c:	cbnz	w0, 9a70 <inflateEnd@@Base+0x58>
    9a30:	mov	w20, w0
    9a34:	ldr	x0, [x19, #56]
    9a38:	ldr	x1, [x0, #72]
    9a3c:	cbz	x1, 9a4c <inflateEnd@@Base+0x34>
    9a40:	ldr	x2, [x19, #72]
    9a44:	ldr	x0, [x19, #80]
    9a48:	blr	x2
    9a4c:	ldr	x2, [x19, #72]
    9a50:	ldr	x1, [x19, #56]
    9a54:	ldr	x0, [x19, #80]
    9a58:	blr	x2
    9a5c:	str	xzr, [x19, #56]
    9a60:	mov	w0, w20
    9a64:	ldp	x19, x20, [sp, #16]
    9a68:	ldp	x29, x30, [sp], #32
    9a6c:	ret
    9a70:	mov	w20, #0xfffffffe            	// #-2
    9a74:	b	9a60 <inflateEnd@@Base+0x48>

0000000000009a78 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    9a78:	stp	x29, x30, [sp, #-48]!
    9a7c:	mov	x29, sp
    9a80:	stp	x19, x20, [sp, #16]
    9a84:	stp	x21, x22, [sp, #32]
    9a88:	mov	x20, x0
    9a8c:	mov	x22, x1
    9a90:	mov	x21, x2
    9a94:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9a98:	cbnz	w0, 9b08 <inflateGetDictionary@@ZLIB_1.2.7.1+0x90>
    9a9c:	mov	w19, w0
    9aa0:	ldr	x20, [x20, #56]
    9aa4:	ldr	w2, [x20, #64]
    9aa8:	cmp	x22, #0x0
    9aac:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    9ab0:	b.ne	9ad4 <inflateGetDictionary@@ZLIB_1.2.7.1+0x5c>  // b.any
    9ab4:	cbz	x21, 9ac0 <inflateGetDictionary@@ZLIB_1.2.7.1+0x48>
    9ab8:	ldr	w0, [x20, #64]
    9abc:	str	w0, [x21]
    9ac0:	mov	w0, w19
    9ac4:	ldp	x19, x20, [sp, #16]
    9ac8:	ldp	x21, x22, [sp, #32]
    9acc:	ldp	x29, x30, [sp], #48
    9ad0:	ret
    9ad4:	ldr	w1, [x20, #68]
    9ad8:	ldr	x3, [x20, #72]
    9adc:	sub	w2, w2, w1
    9ae0:	add	x1, x3, w1, uxtw
    9ae4:	mov	x0, x22
    9ae8:	bl	23a0 <memcpy@plt>
    9aec:	ldr	w2, [x20, #68]
    9af0:	ldr	w0, [x20, #64]
    9af4:	sub	x0, x0, x2
    9af8:	ldr	x1, [x20, #72]
    9afc:	add	x0, x22, x0
    9b00:	bl	23a0 <memcpy@plt>
    9b04:	b	9ab4 <inflateGetDictionary@@ZLIB_1.2.7.1+0x3c>
    9b08:	mov	w19, #0xfffffffe            	// #-2
    9b0c:	b	9ac0 <inflateGetDictionary@@ZLIB_1.2.7.1+0x48>

0000000000009b10 <inflateSetDictionary@@Base>:
    9b10:	stp	x29, x30, [sp, #-48]!
    9b14:	mov	x29, sp
    9b18:	stp	x19, x20, [sp, #16]
    9b1c:	stp	x21, x22, [sp, #32]
    9b20:	mov	x20, x0
    9b24:	mov	x22, x1
    9b28:	mov	w19, w2
    9b2c:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9b30:	cbnz	w0, 9bcc <inflateSetDictionary@@Base+0xbc>
    9b34:	ldr	x21, [x20, #56]
    9b38:	ldr	w0, [x21, #16]
    9b3c:	cbz	w0, 9b80 <inflateSetDictionary@@Base+0x70>
    9b40:	ldr	w1, [x21, #8]
    9b44:	mov	w0, #0x3f3e                	// #16190
    9b48:	cmp	w1, w0
    9b4c:	b.ne	9bd4 <inflateSetDictionary@@Base+0xc4>  // b.any
    9b50:	mov	w2, #0x0                   	// #0
    9b54:	mov	x1, #0x0                   	// #0
    9b58:	mov	x0, #0x0                   	// #0
    9b5c:	bl	2560 <adler32@plt>
    9b60:	mov	w2, w19
    9b64:	mov	x1, x22
    9b68:	bl	2560 <adler32@plt>
    9b6c:	ldr	x1, [x21, #32]
    9b70:	cmp	x1, x0
    9b74:	b.eq	9b90 <inflateSetDictionary@@Base+0x80>  // b.none
    9b78:	mov	w0, #0xfffffffd            	// #-3
    9b7c:	b	9bac <inflateSetDictionary@@Base+0x9c>
    9b80:	ldr	w1, [x21, #8]
    9b84:	mov	w0, #0x3f3e                	// #16190
    9b88:	cmp	w1, w0
    9b8c:	b.eq	9b50 <inflateSetDictionary@@Base+0x40>  // b.none
    9b90:	mov	w2, w19
    9b94:	add	x1, x22, w19, uxtw
    9b98:	mov	x0, x20
    9b9c:	bl	7c60 <inflateBackEnd@@ZLIB_1.2.0+0x694>
    9ba0:	cbnz	w0, 9bbc <inflateSetDictionary@@Base+0xac>
    9ba4:	mov	w1, #0x1                   	// #1
    9ba8:	str	w1, [x21, #20]
    9bac:	ldp	x19, x20, [sp, #16]
    9bb0:	ldp	x21, x22, [sp, #32]
    9bb4:	ldp	x29, x30, [sp], #48
    9bb8:	ret
    9bbc:	mov	w0, #0x3f52                	// #16210
    9bc0:	str	w0, [x21, #8]
    9bc4:	mov	w0, #0xfffffffc            	// #-4
    9bc8:	b	9bac <inflateSetDictionary@@Base+0x9c>
    9bcc:	mov	w0, #0xfffffffe            	// #-2
    9bd0:	b	9bac <inflateSetDictionary@@Base+0x9c>
    9bd4:	mov	w0, #0xfffffffe            	// #-2
    9bd8:	b	9bac <inflateSetDictionary@@Base+0x9c>

0000000000009bdc <inflateGetHeader@@ZLIB_1.2.2>:
    9bdc:	stp	x29, x30, [sp, #-32]!
    9be0:	mov	x29, sp
    9be4:	stp	x19, x20, [sp, #16]
    9be8:	mov	x20, x0
    9bec:	mov	x19, x1
    9bf0:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9bf4:	cbnz	w0, 9c18 <inflateGetHeader@@ZLIB_1.2.2+0x3c>
    9bf8:	ldr	x1, [x20, #56]
    9bfc:	ldr	w2, [x1, #16]
    9c00:	tbz	w2, #1, 9c20 <inflateGetHeader@@ZLIB_1.2.2+0x44>
    9c04:	str	x19, [x1, #48]
    9c08:	str	wzr, [x19, #72]
    9c0c:	ldp	x19, x20, [sp, #16]
    9c10:	ldp	x29, x30, [sp], #32
    9c14:	ret
    9c18:	mov	w0, #0xfffffffe            	// #-2
    9c1c:	b	9c0c <inflateGetHeader@@ZLIB_1.2.2+0x30>
    9c20:	mov	w0, #0xfffffffe            	// #-2
    9c24:	b	9c0c <inflateGetHeader@@ZLIB_1.2.2+0x30>

0000000000009c28 <inflateSync@@Base>:
    9c28:	stp	x29, x30, [sp, #-80]!
    9c2c:	mov	x29, sp
    9c30:	stp	x19, x20, [sp, #16]
    9c34:	stp	x21, x22, [sp, #32]
    9c38:	mov	x19, x0
    9c3c:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9c40:	cbnz	w0, 9d5c <inflateSync@@Base+0x134>
    9c44:	mov	w22, w0
    9c48:	ldr	x21, [x19, #56]
    9c4c:	ldr	w0, [x19, #8]
    9c50:	cbnz	w0, 9c60 <inflateSync@@Base+0x38>
    9c54:	ldr	w0, [x21, #88]
    9c58:	cmp	w0, #0x7
    9c5c:	b.ls	9d64 <inflateSync@@Base+0x13c>  // b.plast
    9c60:	ldr	w1, [x21, #8]
    9c64:	mov	w0, #0x3f53                	// #16211
    9c68:	cmp	w1, w0
    9c6c:	b.eq	9cd8 <inflateSync@@Base+0xb0>  // b.none
    9c70:	str	w0, [x21, #8]
    9c74:	ldr	w2, [x21, #88]
    9c78:	and	w0, w2, #0x7
    9c7c:	ldr	x1, [x21, #80]
    9c80:	lsl	x1, x1, x0
    9c84:	str	x1, [x21, #80]
    9c88:	and	w2, w2, #0xfffffff8
    9c8c:	str	w2, [x21, #88]
    9c90:	cmp	w2, #0x7
    9c94:	b.ls	9d54 <inflateSync@@Base+0x12c>  // b.plast
    9c98:	sub	w2, w2, #0x8
    9c9c:	add	x3, sp, #0x48
    9ca0:	mov	w0, w2
    9ca4:	strb	w1, [x3], #1
    9ca8:	lsr	x1, x1, #8
    9cac:	sub	w0, w0, #0x8
    9cb0:	cmn	w0, #0x8
    9cb4:	b.ne	9ca4 <inflateSync@@Base+0x7c>  // b.any
    9cb8:	lsr	w2, w2, #3
    9cbc:	add	w2, w2, #0x1
    9cc0:	str	x1, [x21, #80]
    9cc4:	str	wzr, [x21, #88]
    9cc8:	mov	x0, x21
    9ccc:	str	wzr, [x0, #140]!
    9cd0:	add	x1, sp, #0x48
    9cd4:	bl	7bf4 <inflateBackEnd@@ZLIB_1.2.0+0x628>
    9cd8:	ldr	w2, [x19, #8]
    9cdc:	ldr	x1, [x19]
    9ce0:	add	x0, x21, #0x8c
    9ce4:	bl	7bf4 <inflateBackEnd@@ZLIB_1.2.0+0x628>
    9ce8:	ldr	w1, [x19, #8]
    9cec:	sub	w1, w1, w0
    9cf0:	str	w1, [x19, #8]
    9cf4:	mov	w1, w0
    9cf8:	ldr	x0, [x19]
    9cfc:	add	x0, x0, x1
    9d00:	str	x0, [x19]
    9d04:	ldr	x20, [x19, #16]
    9d08:	add	x20, x1, x20
    9d0c:	str	x20, [x19, #16]
    9d10:	ldr	w0, [x21, #140]
    9d14:	cmp	w0, #0x4
    9d18:	b.ne	9d6c <inflateSync@@Base+0x144>  // b.any
    9d1c:	str	x23, [sp, #48]
    9d20:	ldr	x23, [x19, #40]
    9d24:	mov	x0, x19
    9d28:	bl	2610 <inflateReset@plt>
    9d2c:	str	x20, [x19, #16]
    9d30:	str	x23, [x19, #40]
    9d34:	mov	w0, #0x3f3f                	// #16191
    9d38:	str	w0, [x21, #8]
    9d3c:	ldr	x23, [sp, #48]
    9d40:	mov	w0, w22
    9d44:	ldp	x19, x20, [sp, #16]
    9d48:	ldp	x21, x22, [sp, #32]
    9d4c:	ldp	x29, x30, [sp], #80
    9d50:	ret
    9d54:	mov	w2, #0x0                   	// #0
    9d58:	b	9cc8 <inflateSync@@Base+0xa0>
    9d5c:	mov	w22, #0xfffffffe            	// #-2
    9d60:	b	9d40 <inflateSync@@Base+0x118>
    9d64:	mov	w22, #0xfffffffb            	// #-5
    9d68:	b	9d40 <inflateSync@@Base+0x118>
    9d6c:	mov	w22, #0xfffffffd            	// #-3
    9d70:	b	9d40 <inflateSync@@Base+0x118>

0000000000009d74 <inflateSyncPoint@@Base>:
    9d74:	stp	x29, x30, [sp, #-32]!
    9d78:	mov	x29, sp
    9d7c:	str	x19, [sp, #16]
    9d80:	mov	x19, x0
    9d84:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9d88:	cbnz	w0, 9dbc <inflateSyncPoint@@Base+0x48>
    9d8c:	ldr	x1, [x19, #56]
    9d90:	ldr	w3, [x1, #8]
    9d94:	mov	w2, #0x3f41                	// #16193
    9d98:	cmp	w3, w2
    9d9c:	b.eq	9dac <inflateSyncPoint@@Base+0x38>  // b.none
    9da0:	ldr	x19, [sp, #16]
    9da4:	ldp	x29, x30, [sp], #32
    9da8:	ret
    9dac:	ldr	w0, [x1, #88]
    9db0:	cmp	w0, #0x0
    9db4:	cset	w0, eq  // eq = none
    9db8:	b	9da0 <inflateSyncPoint@@Base+0x2c>
    9dbc:	mov	w0, #0xfffffffe            	// #-2
    9dc0:	b	9da0 <inflateSyncPoint@@Base+0x2c>

0000000000009dc4 <inflateCopy@@ZLIB_1.2.0>:
    9dc4:	stp	x29, x30, [sp, #-64]!
    9dc8:	mov	x29, sp
    9dcc:	stp	x19, x20, [sp, #16]
    9dd0:	mov	x20, x0
    9dd4:	mov	x19, x1
    9dd8:	mov	x0, x1
    9ddc:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9de0:	cmp	x20, #0x0
    9de4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    9de8:	b.ne	9f50 <inflateCopy@@ZLIB_1.2.0+0x18c>  // b.any
    9dec:	stp	x21, x22, [sp, #32]
    9df0:	ldr	x22, [x19, #56]
    9df4:	ldr	x3, [x19, #64]
    9df8:	mov	w2, #0x1bf8                	// #7160
    9dfc:	mov	w1, #0x1                   	// #1
    9e00:	ldr	x0, [x19, #80]
    9e04:	blr	x3
    9e08:	mov	x21, x0
    9e0c:	cbz	x0, 9f58 <inflateCopy@@ZLIB_1.2.0+0x194>
    9e10:	str	x23, [sp, #48]
    9e14:	ldr	x23, [x22, #72]
    9e18:	cbz	x23, 9f64 <inflateCopy@@ZLIB_1.2.0+0x1a0>
    9e1c:	ldr	w1, [x22, #56]
    9e20:	mov	w2, #0x1                   	// #1
    9e24:	ldr	x3, [x19, #64]
    9e28:	lsl	w1, w2, w1
    9e2c:	ldr	x0, [x19, #80]
    9e30:	blr	x3
    9e34:	mov	x23, x0
    9e38:	cbz	x0, 9ee4 <inflateCopy@@ZLIB_1.2.0+0x120>
    9e3c:	ldp	x0, x1, [x19]
    9e40:	stp	x0, x1, [x20]
    9e44:	ldp	x0, x1, [x19, #16]
    9e48:	stp	x0, x1, [x20, #16]
    9e4c:	ldp	x0, x1, [x19, #32]
    9e50:	stp	x0, x1, [x20, #32]
    9e54:	ldp	x0, x1, [x19, #48]
    9e58:	stp	x0, x1, [x20, #48]
    9e5c:	ldp	x0, x1, [x19, #64]
    9e60:	stp	x0, x1, [x20, #64]
    9e64:	ldp	x0, x1, [x19, #80]
    9e68:	stp	x0, x1, [x20, #80]
    9e6c:	ldp	x0, x1, [x19, #96]
    9e70:	stp	x0, x1, [x20, #96]
    9e74:	mov	x2, #0x1bf8                	// #7160
    9e78:	mov	x1, x22
    9e7c:	mov	x0, x21
    9e80:	bl	23a0 <memcpy@plt>
    9e84:	str	x20, [x21]
    9e88:	ldr	x0, [x22, #104]
    9e8c:	add	x1, x22, #0x558
    9e90:	cmp	x0, x1
    9e94:	b.cs	9f04 <inflateCopy@@ZLIB_1.2.0+0x140>  // b.hs, b.nlast
    9e98:	add	x0, x21, #0x558
    9e9c:	ldr	x2, [x22, #144]
    9ea0:	sub	x2, x2, x1
    9ea4:	add	x1, x0, x2
    9ea8:	str	x1, [x21, #144]
    9eac:	ldr	w0, [x22, #56]
    9eb0:	mov	w2, #0x1                   	// #1
    9eb4:	lsl	w2, w2, w0
    9eb8:	ldr	x1, [x22, #72]
    9ebc:	mov	x0, x23
    9ec0:	bl	23a0 <memcpy@plt>
    9ec4:	str	x23, [x21, #72]
    9ec8:	str	x21, [x20, #56]
    9ecc:	mov	w0, #0x0                   	// #0
    9ed0:	ldp	x21, x22, [sp, #32]
    9ed4:	ldr	x23, [sp, #48]
    9ed8:	ldp	x19, x20, [sp, #16]
    9edc:	ldp	x29, x30, [sp], #64
    9ee0:	ret
    9ee4:	ldr	x2, [x19, #72]
    9ee8:	mov	x1, x21
    9eec:	ldr	x0, [x19, #80]
    9ef0:	blr	x2
    9ef4:	mov	w0, #0xfffffffc            	// #-4
    9ef8:	ldp	x21, x22, [sp, #32]
    9efc:	ldr	x23, [sp, #48]
    9f00:	b	9ed8 <inflateCopy@@ZLIB_1.2.0+0x114>
    9f04:	add	x2, x22, #0x1, lsl #12
    9f08:	add	x2, x2, #0xbe4
    9f0c:	cmp	x0, x2
    9f10:	b.hi	9f34 <inflateCopy@@ZLIB_1.2.0+0x170>  // b.pmore
    9f14:	add	x2, x21, #0x558
    9f18:	sub	x0, x0, x1
    9f1c:	add	x0, x2, x0
    9f20:	str	x0, [x21, #104]
    9f24:	ldr	x0, [x22, #112]
    9f28:	sub	x0, x0, x1
    9f2c:	add	x2, x2, x0
    9f30:	str	x2, [x21, #112]
    9f34:	add	x0, x21, #0x558
    9f38:	ldr	x2, [x22, #144]
    9f3c:	sub	x2, x2, x1
    9f40:	add	x1, x0, x2
    9f44:	str	x1, [x21, #144]
    9f48:	cbz	x23, 9ec4 <inflateCopy@@ZLIB_1.2.0+0x100>
    9f4c:	b	9eac <inflateCopy@@ZLIB_1.2.0+0xe8>
    9f50:	mov	w0, #0xfffffffe            	// #-2
    9f54:	b	9ed8 <inflateCopy@@ZLIB_1.2.0+0x114>
    9f58:	mov	w0, #0xfffffffc            	// #-4
    9f5c:	ldp	x21, x22, [sp, #32]
    9f60:	b	9ed8 <inflateCopy@@ZLIB_1.2.0+0x114>
    9f64:	ldp	x0, x1, [x19]
    9f68:	stp	x0, x1, [x20]
    9f6c:	ldp	x0, x1, [x19, #16]
    9f70:	stp	x0, x1, [x20, #16]
    9f74:	ldp	x0, x1, [x19, #32]
    9f78:	stp	x0, x1, [x20, #32]
    9f7c:	ldp	x0, x1, [x19, #48]
    9f80:	stp	x0, x1, [x20, #48]
    9f84:	ldp	x0, x1, [x19, #64]
    9f88:	stp	x0, x1, [x20, #64]
    9f8c:	ldp	x0, x1, [x19, #80]
    9f90:	stp	x0, x1, [x20, #80]
    9f94:	ldp	x0, x1, [x19, #96]
    9f98:	stp	x0, x1, [x20, #96]
    9f9c:	mov	x2, #0x1bf8                	// #7160
    9fa0:	mov	x1, x22
    9fa4:	mov	x0, x21
    9fa8:	bl	23a0 <memcpy@plt>
    9fac:	str	x20, [x21]
    9fb0:	ldr	x0, [x22, #104]
    9fb4:	add	x1, x22, #0x558
    9fb8:	cmp	x0, x1
    9fbc:	b.cs	9f04 <inflateCopy@@ZLIB_1.2.0+0x140>  // b.hs, b.nlast
    9fc0:	add	x0, x21, #0x558
    9fc4:	ldr	x2, [x22, #144]
    9fc8:	sub	x2, x2, x1
    9fcc:	add	x1, x0, x2
    9fd0:	str	x1, [x21, #144]
    9fd4:	b	9ec4 <inflateCopy@@ZLIB_1.2.0+0x100>

0000000000009fd8 <inflateUndermine@@ZLIB_1.2.3.3>:
    9fd8:	stp	x29, x30, [sp, #-32]!
    9fdc:	mov	x29, sp
    9fe0:	str	x19, [sp, #16]
    9fe4:	mov	x19, x0
    9fe8:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    9fec:	cbnz	w0, a00c <inflateUndermine@@ZLIB_1.2.3.3+0x34>
    9ff0:	ldr	x0, [x19, #56]
    9ff4:	mov	w1, #0x1                   	// #1
    9ff8:	str	w1, [x0, #7144]
    9ffc:	mov	w0, #0xfffffffd            	// #-3
    a000:	ldr	x19, [sp, #16]
    a004:	ldp	x29, x30, [sp], #32
    a008:	ret
    a00c:	mov	w0, #0xfffffffe            	// #-2
    a010:	b	a000 <inflateUndermine@@ZLIB_1.2.3.3+0x28>

000000000000a014 <inflateValidate@@ZLIB_1.2.9>:
    a014:	stp	x29, x30, [sp, #-32]!
    a018:	mov	x29, sp
    a01c:	stp	x19, x20, [sp, #16]
    a020:	mov	x20, x0
    a024:	mov	w19, w1
    a028:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    a02c:	cbnz	w0, a064 <inflateValidate@@ZLIB_1.2.9+0x50>
    a030:	ldr	x1, [x20, #56]
    a034:	cbz	w19, a050 <inflateValidate@@ZLIB_1.2.9+0x3c>
    a038:	ldr	w2, [x1, #16]
    a03c:	orr	w2, w2, #0x4
    a040:	str	w2, [x1, #16]
    a044:	ldp	x19, x20, [sp, #16]
    a048:	ldp	x29, x30, [sp], #32
    a04c:	ret
    a050:	ldr	w0, [x1, #16]
    a054:	and	w0, w0, #0xfffffffb
    a058:	str	w0, [x1, #16]
    a05c:	mov	w0, w19
    a060:	b	a044 <inflateValidate@@ZLIB_1.2.9+0x30>
    a064:	mov	w0, #0xfffffffe            	// #-2
    a068:	b	a044 <inflateValidate@@ZLIB_1.2.9+0x30>

000000000000a06c <inflateMark@@ZLIB_1.2.3.4>:
    a06c:	stp	x29, x30, [sp, #-32]!
    a070:	mov	x29, sp
    a074:	str	x19, [sp, #16]
    a078:	mov	x19, x0
    a07c:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    a080:	cbnz	w0, a0d8 <inflateMark@@ZLIB_1.2.3.4+0x6c>
    a084:	ldr	x1, [x19, #56]
    a088:	ldrsw	x0, [x1, #7148]
    a08c:	lsl	x0, x0, #16
    a090:	ldr	w3, [x1, #8]
    a094:	mov	w2, #0x3f43                	// #16195
    a098:	cmp	w3, w2
    a09c:	b.eq	a0c0 <inflateMark@@ZLIB_1.2.3.4+0x54>  // b.none
    a0a0:	mov	x2, #0x0                   	// #0
    a0a4:	mov	w4, #0x3f4c                	// #16204
    a0a8:	cmp	w3, w4
    a0ac:	b.eq	a0c8 <inflateMark@@ZLIB_1.2.3.4+0x5c>  // b.none
    a0b0:	add	x0, x0, x2
    a0b4:	ldr	x19, [sp, #16]
    a0b8:	ldp	x29, x30, [sp], #32
    a0bc:	ret
    a0c0:	ldr	w2, [x1, #92]
    a0c4:	b	a0b0 <inflateMark@@ZLIB_1.2.3.4+0x44>
    a0c8:	ldr	w2, [x1, #7152]
    a0cc:	ldr	w1, [x1, #92]
    a0d0:	sub	w2, w2, w1
    a0d4:	b	a0b0 <inflateMark@@ZLIB_1.2.3.4+0x44>
    a0d8:	mov	x0, #0xffffffffffff0000    	// #-65536
    a0dc:	b	a0b4 <inflateMark@@ZLIB_1.2.3.4+0x48>

000000000000a0e0 <inflateCodesUsed@@ZLIB_1.2.9>:
    a0e0:	stp	x29, x30, [sp, #-32]!
    a0e4:	mov	x29, sp
    a0e8:	str	x19, [sp, #16]
    a0ec:	mov	x19, x0
    a0f0:	bl	7b88 <inflateBackEnd@@ZLIB_1.2.0+0x5bc>
    a0f4:	cbnz	w0, a118 <inflateCodesUsed@@ZLIB_1.2.9+0x38>
    a0f8:	ldr	x1, [x19, #56]
    a0fc:	add	x2, x1, #0x558
    a100:	ldr	x0, [x1, #144]
    a104:	sub	x0, x0, x2
    a108:	asr	x0, x0, #2
    a10c:	ldr	x19, [sp, #16]
    a110:	ldp	x29, x30, [sp], #32
    a114:	ret
    a118:	mov	x0, #0xffffffffffffffff    	// #-1
    a11c:	b	a10c <inflateCodesUsed@@ZLIB_1.2.9+0x2c>
    a120:	stp	x29, x30, [sp, #-176]!
    a124:	mov	x29, sp
    a128:	mov	w9, w0
    a12c:	str	x4, [sp, #96]
    a130:	add	x4, sp, #0x90
    a134:	add	x8, sp, #0xb0
    a138:	strh	wzr, [x4], #2
    a13c:	cmp	x4, x8
    a140:	b.ne	a138 <inflateCodesUsed@@ZLIB_1.2.9+0x58>  // b.any
    a144:	cbz	w2, a178 <inflateCodesUsed@@ZLIB_1.2.9+0x98>
    a148:	mov	x7, x1
    a14c:	sub	w10, w2, #0x1
    a150:	add	x0, x1, #0x2
    a154:	add	x10, x0, x10, lsl #1
    a158:	add	x0, sp, #0x90
    a15c:	ldrh	w4, [x7], #2
    a160:	lsl	x4, x4, #1
    a164:	ldrh	w6, [x0, x4]
    a168:	add	w6, w6, #0x1
    a16c:	strh	w6, [x0, x4]
    a170:	cmp	x7, x10
    a174:	b.ne	a15c <inflateCodesUsed@@ZLIB_1.2.9+0x7c>  // b.any
    a178:	add	x4, sp, #0xae
    a17c:	mov	w12, #0xf                   	// #15
    a180:	ldrh	w0, [x4]
    a184:	cbnz	w0, a1e4 <inflateCodesUsed@@ZLIB_1.2.9+0x104>
    a188:	sub	x4, x4, #0x2
    a18c:	subs	w12, w12, #0x1
    a190:	b.ne	a180 <inflateCodesUsed@@ZLIB_1.2.9+0xa0>  // b.any
    a194:	ldr	x0, [x3]
    a198:	add	x1, x0, #0x4
    a19c:	str	x1, [x3]
    a1a0:	mov	w2, #0x40                  	// #64
    a1a4:	strb	w2, [x0]
    a1a8:	mov	w1, #0x1                   	// #1
    a1ac:	strb	w1, [x0, #1]
    a1b0:	strh	wzr, [x0, #2]
    a1b4:	ldr	x0, [x3]
    a1b8:	add	x4, x0, #0x4
    a1bc:	str	x4, [x3]
    a1c0:	strb	w2, [x0]
    a1c4:	strb	w1, [x0, #1]
    a1c8:	strh	wzr, [x0, #2]
    a1cc:	mov	w0, #0x1                   	// #1
    a1d0:	ldr	x1, [sp, #96]
    a1d4:	str	w0, [x1]
    a1d8:	mov	w0, #0x0                   	// #0
    a1dc:	ldp	x29, x30, [sp], #176
    a1e0:	ret
    a1e4:	cbz	w12, a194 <inflateCodesUsed@@ZLIB_1.2.9+0xb4>
    a1e8:	add	x4, sp, #0x92
    a1ec:	mov	w11, #0x1                   	// #1
    a1f0:	cmp	w12, w11
    a1f4:	b.ls	a214 <inflateCodesUsed@@ZLIB_1.2.9+0x134>  // b.plast
    a1f8:	ldrh	w0, [x4]
    a1fc:	cbnz	w0, a214 <inflateCodesUsed@@ZLIB_1.2.9+0x134>
    a200:	add	w11, w11, #0x1
    a204:	add	x4, x4, #0x2
    a208:	cmp	w11, w12
    a20c:	b.ne	a1f8 <inflateCodesUsed@@ZLIB_1.2.9+0x118>  // b.any
    a210:	mov	w11, w12
    a214:	ldrh	w0, [sp, #146]
    a218:	mov	w4, #0x2                   	// #2
    a21c:	subs	w4, w4, w0
    a220:	add	x6, sp, #0x94
    a224:	mov	w0, w4
    a228:	b.mi	a4ec <inflateCodesUsed@@ZLIB_1.2.9+0x40c>  // b.first
    a22c:	lsl	w0, w0, #1
    a230:	ldrh	w4, [x6]
    a234:	subs	w0, w0, w4
    a238:	b.mi	a4f4 <inflateCodesUsed@@ZLIB_1.2.9+0x414>  // b.first
    a23c:	add	x6, x6, #0x2
    a240:	cmp	x6, x8
    a244:	b.ne	a22c <inflateCodesUsed@@ZLIB_1.2.9+0x14c>  // b.any
    a248:	cmp	w0, #0x0
    a24c:	b.le	a260 <inflateCodesUsed@@ZLIB_1.2.9+0x180>
    a250:	cmp	w9, #0x0
    a254:	mov	w0, #0xffffffff            	// #-1
    a258:	ccmp	w12, #0x1, #0x0, ne  // ne = any
    a25c:	b.ne	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>  // b.any
    a260:	stp	x19, x20, [sp, #16]
    a264:	stp	x21, x22, [sp, #32]
    a268:	stp	x23, x24, [sp, #48]
    a26c:	stp	x25, x26, [sp, #64]
    a270:	stp	x27, x28, [sp, #80]
    a274:	ldr	x0, [sp, #96]
    a278:	ldr	w20, [x0]
    a27c:	strh	wzr, [sp, #114]
    a280:	mov	x4, #0x0                   	// #0
    a284:	add	x10, sp, #0x70
    a288:	add	x8, sp, #0x90
    a28c:	add	x6, x4, x10
    a290:	add	x7, x4, x8
    a294:	ldrh	w0, [x6, #2]
    a298:	ldrh	w7, [x7, #2]
    a29c:	add	w0, w0, w7
    a2a0:	strh	w0, [x6, #4]
    a2a4:	add	x4, x4, #0x2
    a2a8:	cmp	x4, #0x1c
    a2ac:	b.ne	a28c <inflateCodesUsed@@ZLIB_1.2.9+0x1ac>  // b.any
    a2b0:	cbz	w2, a5d4 <inflateCodesUsed@@ZLIB_1.2.9+0x4f4>
    a2b4:	mov	x0, #0x0                   	// #0
    a2b8:	add	x7, sp, #0x70
    a2bc:	b	a2cc <inflateCodesUsed@@ZLIB_1.2.9+0x1ec>
    a2c0:	add	x0, x0, #0x1
    a2c4:	cmp	w2, w0
    a2c8:	b.ls	a5d4 <inflateCodesUsed@@ZLIB_1.2.9+0x4f4>  // b.plast
    a2cc:	ldrh	w4, [x1, x0, lsl #1]
    a2d0:	cbz	w4, a2c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1e0>
    a2d4:	sbfiz	x4, x4, #1, #32
    a2d8:	ldrh	w6, [x7, x4]
    a2dc:	add	w8, w6, #0x1
    a2e0:	strh	w8, [x7, x4]
    a2e4:	and	x6, x6, #0xffff
    a2e8:	strh	w0, [x5, x6, lsl #1]
    a2ec:	b	a2c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1e0>
    a2f0:	mov	w21, #0x0                   	// #0
    a2f4:	adrp	x26, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    a2f8:	add	x26, x26, #0xdf0
    a2fc:	add	x27, x26, #0x80
    a300:	add	x26, x26, #0xc0
    a304:	b	a5b0 <inflateCodesUsed@@ZLIB_1.2.9+0x4d0>
    a308:	mov	w8, w22
    a30c:	mov	w13, #0x60                  	// #96
    a310:	sub	w10, w11, w16
    a314:	lsl	w10, w18, w10
    a318:	lsl	w19, w18, w15
    a31c:	lsr	w14, w7, w16
    a320:	mov	w2, w19
    a324:	sub	w2, w2, w10
    a328:	add	w0, w14, w2
    a32c:	lsl	x0, x0, #2
    a330:	add	x4, x6, x0
    a334:	strb	w13, [x6, x0]
    a338:	strb	w9, [x4, #1]
    a33c:	strh	w8, [x4, #2]
    a340:	cbnz	w2, a324 <inflateCodesUsed@@ZLIB_1.2.9+0x244>
    a344:	sub	w0, w11, #0x1
    a348:	lsl	w0, w18, w0
    a34c:	tst	w7, w0
    a350:	b.eq	a360 <inflateCodesUsed@@ZLIB_1.2.9+0x280>  // b.none
    a354:	lsr	w0, w0, #1
    a358:	tst	w7, w0
    a35c:	b.ne	a354 <inflateCodesUsed@@ZLIB_1.2.9+0x274>  // b.any
    a360:	sub	w2, w0, #0x1
    a364:	and	w7, w2, w7
    a368:	add	w7, w0, w7
    a36c:	cmp	w0, #0x0
    a370:	csel	w0, w7, w0, ne  // ne = any
    a374:	add	w17, w17, #0x1
    a378:	ubfiz	x4, x11, #1, #32
    a37c:	ldrh	w2, [x30, x4]
    a380:	sub	w2, w2, #0x1
    a384:	and	w2, w2, #0xffff
    a388:	strh	w2, [x30, x4]
    a38c:	cbnz	w2, a3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x2c0>
    a390:	cmp	w11, w12
    a394:	b.eq	a4a0 <inflateCodesUsed@@ZLIB_1.2.9+0x3c0>  // b.none
    a398:	ldrh	w2, [x5, w17, uxtw #1]
    a39c:	ldrh	w11, [x1, x2, lsl #1]
    a3a0:	cmp	w11, w20
    a3a4:	b.ls	a3b4 <inflateCodesUsed@@ZLIB_1.2.9+0x2d4>  // b.plast
    a3a8:	and	w8, w0, w25
    a3ac:	cmp	w8, w24
    a3b0:	b.ne	a3f0 <inflateCodesUsed@@ZLIB_1.2.9+0x310>  // b.any
    a3b4:	mov	w7, w0
    a3b8:	sub	w9, w11, w16
    a3bc:	and	w9, w9, #0xff
    a3c0:	ldrh	w8, [x5, w17, uxtw #1]
    a3c4:	add	w2, w8, #0x1
    a3c8:	mov	w13, w22
    a3cc:	cmp	w2, w21
    a3d0:	b.cc	a310 <inflateCodesUsed@@ZLIB_1.2.9+0x230>  // b.lo, b.ul, b.last
    a3d4:	cmp	w8, w21
    a3d8:	b.cc	a308 <inflateCodesUsed@@ZLIB_1.2.9+0x228>  // b.lo, b.ul, b.last
    a3dc:	sub	w0, w8, w21
    a3e0:	lsl	x0, x0, #1
    a3e4:	ldrb	w13, [x27, x0]
    a3e8:	ldrh	w8, [x26, x0]
    a3ec:	b	a310 <inflateCodesUsed@@ZLIB_1.2.9+0x230>
    a3f0:	cmp	w16, #0x0
    a3f4:	csel	w16, w16, w20, ne  // ne = any
    a3f8:	add	x6, x6, w19, uxtw #2
    a3fc:	sub	w15, w11, w16
    a400:	lsl	w2, w18, w15
    a404:	cmp	w11, w12
    a408:	b.cs	a448 <inflateCodesUsed@@ZLIB_1.2.9+0x368>  // b.hs, b.nlast
    a40c:	ldrh	w4, [x30, w11, uxtw #1]
    a410:	sub	w2, w2, w4
    a414:	cmp	w2, #0x0
    a418:	b.le	a448 <inflateCodesUsed@@ZLIB_1.2.9+0x368>
    a41c:	add	w4, w11, #0x1
    a420:	add	x4, x30, x4, lsl #1
    a424:	add	w15, w15, #0x1
    a428:	lsl	w2, w2, #1
    a42c:	add	w7, w16, w15
    a430:	cmp	w7, w12
    a434:	b.cs	a448 <inflateCodesUsed@@ZLIB_1.2.9+0x368>  // b.hs, b.nlast
    a438:	ldrh	w7, [x4], #2
    a43c:	sub	w2, w2, w7
    a440:	cmp	w2, #0x0
    a444:	b.gt	a424 <inflateCodesUsed@@ZLIB_1.2.9+0x344>
    a448:	lsl	w2, w18, w15
    a44c:	add	w23, w23, w2
    a450:	cmp	w23, #0x354
    a454:	ldr	w2, [sp, #108]
    a458:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
    a45c:	b.ne	a4fc <inflateCodesUsed@@ZLIB_1.2.9+0x41c>  // b.any
    a460:	cmp	w23, #0x250
    a464:	ccmp	w28, #0x0, #0x4, hi  // hi = pmore
    a468:	b.ne	a518 <inflateCodesUsed@@ZLIB_1.2.9+0x438>  // b.any
    a46c:	ubfiz	x4, x8, #2, #32
    a470:	ldr	x2, [x3]
    a474:	strb	w15, [x2, x4]
    a478:	ldr	x2, [x3]
    a47c:	add	x2, x2, x4
    a480:	strb	w20, [x2, #1]
    a484:	ldr	x2, [x3]
    a488:	add	x4, x2, x4
    a48c:	sub	x2, x6, x2
    a490:	asr	x2, x2, #2
    a494:	strh	w2, [x4, #2]
    a498:	mov	w24, w8
    a49c:	b	a3b4 <inflateCodesUsed@@ZLIB_1.2.9+0x2d4>
    a4a0:	cbz	w0, a4bc <inflateCodesUsed@@ZLIB_1.2.9+0x3dc>
    a4a4:	ubfiz	x0, x0, #2, #32
    a4a8:	add	x1, x6, x0
    a4ac:	mov	w2, #0x40                  	// #64
    a4b0:	strb	w2, [x6, x0]
    a4b4:	strb	w9, [x1, #1]
    a4b8:	strh	wzr, [x1, #2]
    a4bc:	ldr	x0, [x3]
    a4c0:	add	x23, x0, w23, uxtw #2
    a4c4:	str	x23, [x3]
    a4c8:	ldr	x0, [sp, #96]
    a4cc:	str	w20, [x0]
    a4d0:	mov	w0, #0x0                   	// #0
    a4d4:	ldp	x19, x20, [sp, #16]
    a4d8:	ldp	x21, x22, [sp, #32]
    a4dc:	ldp	x23, x24, [sp, #48]
    a4e0:	ldp	x25, x26, [sp, #64]
    a4e4:	ldp	x27, x28, [sp, #80]
    a4e8:	b	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>
    a4ec:	mov	w0, #0xffffffff            	// #-1
    a4f0:	b	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>
    a4f4:	mov	w0, #0xffffffff            	// #-1
    a4f8:	b	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>
    a4fc:	mov	w0, #0x1                   	// #1
    a500:	ldp	x19, x20, [sp, #16]
    a504:	ldp	x21, x22, [sp, #32]
    a508:	ldp	x23, x24, [sp, #48]
    a50c:	ldp	x25, x26, [sp, #64]
    a510:	ldp	x27, x28, [sp, #80]
    a514:	b	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>
    a518:	mov	w0, #0x1                   	// #1
    a51c:	ldp	x19, x20, [sp, #16]
    a520:	ldp	x21, x22, [sp, #32]
    a524:	ldp	x23, x24, [sp, #48]
    a528:	ldp	x25, x26, [sp, #64]
    a52c:	ldp	x27, x28, [sp, #80]
    a530:	b	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>
    a534:	ldr	x6, [x3]
    a538:	mov	w23, #0x1                   	// #1
    a53c:	lsl	w23, w23, w20
    a540:	mov	w0, #0x1                   	// #1
    a544:	cmp	w23, #0x354
    a548:	b.hi	a570 <inflateCodesUsed@@ZLIB_1.2.9+0x490>  // b.pmore
    a54c:	sub	w25, w23, #0x1
    a550:	mov	w21, #0x101                 	// #257
    a554:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    a558:	add	x27, x27, #0xdf0
    a55c:	add	x26, x27, #0x40
    a560:	mov	w28, #0x0                   	// #0
    a564:	mov	w0, #0x1                   	// #1
    a568:	str	w0, [sp, #108]
    a56c:	b	a5b0 <inflateCodesUsed@@ZLIB_1.2.9+0x4d0>
    a570:	ldp	x19, x20, [sp, #16]
    a574:	ldp	x21, x22, [sp, #32]
    a578:	ldp	x23, x24, [sp, #48]
    a57c:	ldp	x25, x26, [sp, #64]
    a580:	ldp	x27, x28, [sp, #80]
    a584:	b	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>
    a588:	ldr	x6, [x3]
    a58c:	mov	w23, #0x1                   	// #1
    a590:	lsl	w23, w23, w20
    a594:	sub	w25, w23, #0x1
    a598:	cmp	w9, #0x2
    a59c:	cset	w28, eq  // eq = none
    a5a0:	mov	x27, x5
    a5a4:	mov	x26, x5
    a5a8:	mov	w21, #0x14                  	// #20
    a5ac:	str	wzr, [sp, #108]
    a5b0:	mov	w15, w20
    a5b4:	mov	w24, #0xffffffff            	// #-1
    a5b8:	mov	w7, #0x0                   	// #0
    a5bc:	mov	w16, #0x0                   	// #0
    a5c0:	mov	w17, #0x0                   	// #0
    a5c4:	mov	w22, #0x0                   	// #0
    a5c8:	mov	w18, #0x1                   	// #1
    a5cc:	add	x30, sp, #0x90
    a5d0:	b	a3b8 <inflateCodesUsed@@ZLIB_1.2.9+0x2d8>
    a5d4:	cmp	w20, w12
    a5d8:	csel	w20, w20, w12, ls  // ls = plast
    a5dc:	cmp	w20, w11
    a5e0:	csel	w20, w20, w11, cs  // cs = hs, nlast
    a5e4:	cbz	w9, a588 <inflateCodesUsed@@ZLIB_1.2.9+0x4a8>
    a5e8:	cmp	w9, #0x1
    a5ec:	b.eq	a534 <inflateCodesUsed@@ZLIB_1.2.9+0x454>  // b.none
    a5f0:	ldr	x6, [x3]
    a5f4:	mov	w23, #0x1                   	// #1
    a5f8:	lsl	w23, w23, w20
    a5fc:	sub	w25, w23, #0x1
    a600:	cmp	w9, #0x2
    a604:	cset	w28, eq  // eq = none
    a608:	cmp	w23, #0x250
    a60c:	cset	w2, hi  // hi = pmore
    a610:	mov	w0, #0x1                   	// #1
    a614:	ands	w2, w28, w2
    a618:	str	w2, [sp, #108]
    a61c:	b.eq	a2f0 <inflateCodesUsed@@ZLIB_1.2.9+0x210>  // b.none
    a620:	ldp	x19, x20, [sp, #16]
    a624:	ldp	x21, x22, [sp, #32]
    a628:	ldp	x23, x24, [sp, #48]
    a62c:	ldp	x25, x26, [sp, #64]
    a630:	ldp	x27, x28, [sp, #80]
    a634:	b	a1dc <inflateCodesUsed@@ZLIB_1.2.9+0xfc>
    a638:	add	x1, x0, #0xd4
    a63c:	add	x2, x0, #0x54c
    a640:	strh	wzr, [x1], #4
    a644:	cmp	x1, x2
    a648:	b.ne	a640 <inflateCodesUsed@@ZLIB_1.2.9+0x560>  // b.any
    a64c:	add	x1, x0, #0x9c8
    a650:	add	x2, x0, #0xa40
    a654:	strh	wzr, [x1], #4
    a658:	cmp	x1, x2
    a65c:	b.ne	a654 <inflateCodesUsed@@ZLIB_1.2.9+0x574>  // b.any
    a660:	add	x1, x0, #0xabc
    a664:	add	x2, x0, #0xb08
    a668:	strh	wzr, [x1], #4
    a66c:	cmp	x1, x2
    a670:	b.ne	a668 <inflateCodesUsed@@ZLIB_1.2.9+0x588>  // b.any
    a674:	mov	w1, #0x1                   	// #1
    a678:	strh	w1, [x0, #1236]
    a67c:	str	xzr, [x0, #5920]
    a680:	str	xzr, [x0, #5912]
    a684:	str	wzr, [x0, #5928]
    a688:	str	wzr, [x0, #5900]
    a68c:	ret
    a690:	add	x3, x0, w2, sxtw #2
    a694:	ldr	w11, [x3, #3008]
    a698:	lsl	w4, w2, #1
    a69c:	ldr	w9, [x0, #5300]
    a6a0:	cmp	w9, w2, lsl #1
    a6a4:	b.lt	a770 <inflateCodesUsed@@ZLIB_1.2.9+0x690>  // b.tstop
    a6a8:	add	x10, x1, w11, sxtw #2
    a6ac:	add	x12, x0, w11, sxtw
    a6b0:	add	x12, x12, #0x1, lsl #12
    a6b4:	b	a710 <inflateCodesUsed@@ZLIB_1.2.9+0x630>
    a6b8:	add	x6, x0, w6, sxtw
    a6bc:	add	x6, x6, #0x1, lsl #12
    a6c0:	add	x5, x0, w5, sxtw
    a6c4:	add	x5, x5, #0x1, lsl #12
    a6c8:	ldrb	w6, [x6, #1212]
    a6cc:	ldrb	w5, [x5, #1212]
    a6d0:	cmp	w6, w5
    a6d4:	csel	w3, w3, w4, ls  // ls = plast
    a6d8:	ldrh	w6, [x10]
    a6dc:	add	x4, x0, w3, sxtw #2
    a6e0:	ldr	w4, [x4, #3008]
    a6e4:	sbfiz	x5, x4, #2, #32
    a6e8:	ldrh	w5, [x1, x5]
    a6ec:	cmp	w6, w5
    a6f0:	b.cc	a770 <inflateCodesUsed@@ZLIB_1.2.9+0x690>  // b.lo, b.ul, b.last
    a6f4:	b.eq	a750 <inflateCodesUsed@@ZLIB_1.2.9+0x670>  // b.none
    a6f8:	add	x2, x0, w2, sxtw #2
    a6fc:	str	w4, [x2, #3008]
    a700:	lsl	w4, w3, #1
    a704:	cmp	w9, w3, lsl #1
    a708:	b.lt	a76c <inflateCodesUsed@@ZLIB_1.2.9+0x68c>  // b.tstop
    a70c:	mov	w2, w3
    a710:	mov	w3, w4
    a714:	cmp	w9, w4
    a718:	b.le	a6d8 <inflateCodesUsed@@ZLIB_1.2.9+0x5f8>
    a71c:	add	w3, w4, #0x1
    a720:	add	x5, x0, w4, sxtw #2
    a724:	ldr	w6, [x5, #3012]
    a728:	sbfiz	x7, x6, #2, #32
    a72c:	ldrh	w8, [x1, x7]
    a730:	ldr	w5, [x5, #3008]
    a734:	sbfiz	x7, x5, #2, #32
    a738:	ldrh	w7, [x1, x7]
    a73c:	cmp	w8, w7
    a740:	b.cc	a6d8 <inflateCodesUsed@@ZLIB_1.2.9+0x5f8>  // b.lo, b.ul, b.last
    a744:	b.eq	a6b8 <inflateCodesUsed@@ZLIB_1.2.9+0x5d8>  // b.none
    a748:	mov	w3, w4
    a74c:	b	a6d8 <inflateCodesUsed@@ZLIB_1.2.9+0x5f8>
    a750:	add	x5, x0, w4, sxtw
    a754:	add	x5, x5, #0x1, lsl #12
    a758:	ldrb	w6, [x12, #1212]
    a75c:	ldrb	w5, [x5, #1212]
    a760:	cmp	w6, w5
    a764:	b.hi	a6f8 <inflateCodesUsed@@ZLIB_1.2.9+0x618>  // b.pmore
    a768:	b	a770 <inflateCodesUsed@@ZLIB_1.2.9+0x690>
    a76c:	mov	w2, w3
    a770:	add	x2, x0, w2, sxtw #2
    a774:	str	w11, [x2, #3008]
    a778:	ret
    a77c:	ldrh	w3, [x1, #2]
    a780:	cmp	w3, #0x0
    a784:	mov	w6, #0x4                   	// #4
    a788:	mov	w4, #0x3                   	// #3
    a78c:	csel	w6, w6, w4, ne  // ne = any
    a790:	mov	w5, #0x7                   	// #7
    a794:	mov	w4, #0x8a                  	// #138
    a798:	csel	w5, w5, w4, ne  // ne = any
    a79c:	add	x4, x1, w2, sxtw #2
    a7a0:	mov	w7, #0xffffffff            	// #-1
    a7a4:	strh	w7, [x4, #6]
    a7a8:	tbnz	w2, #31, a894 <inflateCodesUsed@@ZLIB_1.2.9+0x7b4>
    a7ac:	add	x4, x1, #0x6
    a7b0:	add	x1, x1, #0xa
    a7b4:	add	x7, x1, w2, uxtw #2
    a7b8:	mov	w1, #0x0                   	// #0
    a7bc:	mov	w8, #0xffffffff            	// #-1
    a7c0:	mov	w9, #0x3                   	// #3
    a7c4:	mov	w13, #0x8a                  	// #138
    a7c8:	mov	w12, #0x4                   	// #4
    a7cc:	mov	w11, #0x6                   	// #6
    a7d0:	mov	w10, #0x7                   	// #7
    a7d4:	b	a824 <inflateCodesUsed@@ZLIB_1.2.9+0x744>
    a7d8:	cbz	w2, a858 <inflateCodesUsed@@ZLIB_1.2.9+0x778>
    a7dc:	cmp	w8, w2
    a7e0:	b.eq	a7f4 <inflateCodesUsed@@ZLIB_1.2.9+0x714>  // b.none
    a7e4:	add	x5, x0, w2, sxtw #2
    a7e8:	ldrh	w1, [x5, #2748]
    a7ec:	add	w1, w1, #0x1
    a7f0:	strh	w1, [x5, #2748]
    a7f4:	ldrh	w1, [x0, #2812]
    a7f8:	add	w1, w1, #0x1
    a7fc:	strh	w1, [x0, #2812]
    a800:	cbz	w3, a880 <inflateCodesUsed@@ZLIB_1.2.9+0x7a0>
    a804:	mov	w8, w2
    a808:	cmp	w3, w2
    a80c:	csel	w6, w9, w12, eq  // eq = none
    a810:	csel	w5, w11, w10, eq  // eq = none
    a814:	mov	w1, #0x0                   	// #0
    a818:	add	x4, x4, #0x4
    a81c:	cmp	x4, x7
    a820:	b.eq	a894 <inflateCodesUsed@@ZLIB_1.2.9+0x7b4>  // b.none
    a824:	mov	w2, w3
    a828:	ldrh	w3, [x4]
    a82c:	add	w1, w1, #0x1
    a830:	cmp	w3, w2
    a834:	ccmp	w1, w5, #0x0, eq  // eq = none
    a838:	b.lt	a818 <inflateCodesUsed@@ZLIB_1.2.9+0x738>  // b.tstop
    a83c:	cmp	w1, w6
    a840:	b.ge	a7d8 <inflateCodesUsed@@ZLIB_1.2.9+0x6f8>  // b.tcont
    a844:	add	x5, x0, w2, sxtw #2
    a848:	ldrh	w6, [x5, #2748]
    a84c:	add	w1, w1, w6
    a850:	strh	w1, [x5, #2748]
    a854:	b	a800 <inflateCodesUsed@@ZLIB_1.2.9+0x720>
    a858:	cmp	w1, #0xa
    a85c:	b.gt	a870 <inflateCodesUsed@@ZLIB_1.2.9+0x790>
    a860:	ldrh	w1, [x0, #2816]
    a864:	add	w1, w1, #0x1
    a868:	strh	w1, [x0, #2816]
    a86c:	b	a800 <inflateCodesUsed@@ZLIB_1.2.9+0x720>
    a870:	ldrh	w1, [x0, #2820]
    a874:	add	w1, w1, #0x1
    a878:	strh	w1, [x0, #2820]
    a87c:	b	a800 <inflateCodesUsed@@ZLIB_1.2.9+0x720>
    a880:	mov	w1, w3
    a884:	mov	w8, w2
    a888:	mov	w6, w9
    a88c:	mov	w5, w13
    a890:	b	a818 <inflateCodesUsed@@ZLIB_1.2.9+0x738>
    a894:	ret
    a898:	ldrh	w5, [x1, #2]
    a89c:	cmp	w5, #0x0
    a8a0:	mov	w4, #0x4                   	// #4
    a8a4:	mov	w3, #0x3                   	// #3
    a8a8:	csel	w4, w4, w3, ne  // ne = any
    a8ac:	mov	w3, #0x7                   	// #7
    a8b0:	mov	w6, #0x8a                  	// #138
    a8b4:	csel	w3, w3, w6, ne  // ne = any
    a8b8:	tbnz	w2, #31, ae78 <inflateCodesUsed@@ZLIB_1.2.9+0xd98>
    a8bc:	add	x9, x1, #0x6
    a8c0:	add	x1, x1, #0xa
    a8c4:	add	x10, x1, w2, uxtw #2
    a8c8:	mov	w1, #0x0                   	// #0
    a8cc:	mov	w8, #0xffffffff            	// #-1
    a8d0:	mov	w7, #0x10                  	// #16
    a8d4:	mov	w11, #0x3                   	// #3
    a8d8:	mov	w16, w6
    a8dc:	mov	w15, #0x4                   	// #4
    a8e0:	mov	w14, #0x6                   	// #6
    a8e4:	mov	w13, #0x7                   	// #7
    a8e8:	mov	w12, #0x0                   	// #0
    a8ec:	mov	w6, w5
    a8f0:	ldrh	w5, [x9]
    a8f4:	add	w2, w1, #0x1
    a8f8:	cmp	w5, w6
    a8fc:	ccmp	w2, w3, #0x0, eq  // eq = none
    a900:	b.lt	ae64 <inflateCodesUsed@@ZLIB_1.2.9+0xd84>  // b.tstop
    a904:	stp	x29, x30, [sp, #-16]!
    a908:	mov	x29, sp
    a90c:	b	acc4 <inflateCodesUsed@@ZLIB_1.2.9+0xbe4>
    a910:	add	x8, x0, w6, sxtw #2
    a914:	b	a93c <inflateCodesUsed@@ZLIB_1.2.9+0x85c>
    a918:	ldrh	w4, [x8, #2748]
    a91c:	lsl	w4, w4, w1
    a920:	ldrh	w17, [x0, #5936]
    a924:	orr	w4, w4, w17
    a928:	strh	w4, [x0, #5936]
    a92c:	add	w1, w1, w3
    a930:	str	w1, [x0, #5940]
    a934:	subs	w2, w2, #0x1
    a938:	b.eq	ae40 <inflateCodesUsed@@ZLIB_1.2.9+0xd60>  // b.none
    a93c:	ldrh	w3, [x8, #2750]
    a940:	ldr	w1, [x0, #5940]
    a944:	sub	w4, w7, w3
    a948:	cmp	w1, w4
    a94c:	b.le	a918 <inflateCodesUsed@@ZLIB_1.2.9+0x838>
    a950:	ldrh	w4, [x8, #2748]
    a954:	lsl	w1, w4, w1
    a958:	ldrh	w17, [x0, #5936]
    a95c:	orr	w1, w1, w17
    a960:	sxth	w1, w1
    a964:	strh	w1, [x0, #5936]
    a968:	ldr	x18, [x0, #16]
    a96c:	ldr	x17, [x0, #40]
    a970:	add	x30, x17, #0x1
    a974:	str	x30, [x0, #40]
    a978:	strb	w1, [x18, x17]
    a97c:	ldrh	w1, [x0, #5936]
    a980:	lsr	w1, w1, #8
    a984:	ldr	x18, [x0, #16]
    a988:	ldr	x17, [x0, #40]
    a98c:	add	x30, x17, #0x1
    a990:	str	x30, [x0, #40]
    a994:	strb	w1, [x18, x17]
    a998:	ldr	w17, [x0, #5940]
    a99c:	sub	w1, w7, w17
    a9a0:	asr	w4, w4, w1
    a9a4:	strh	w4, [x0, #5936]
    a9a8:	sub	w1, w3, #0x10
    a9ac:	add	w1, w1, w17
    a9b0:	str	w1, [x0, #5940]
    a9b4:	b	a934 <inflateCodesUsed@@ZLIB_1.2.9+0x854>
    a9b8:	ldrh	w4, [x4, #2748]
    a9bc:	lsl	w4, w4, w2
    a9c0:	ldrh	w8, [x0, #5936]
    a9c4:	orr	w4, w4, w8
    a9c8:	strh	w4, [x0, #5936]
    a9cc:	add	w2, w2, w3
    a9d0:	str	w2, [x0, #5940]
    a9d4:	mov	w2, w1
    a9d8:	b	ad58 <inflateCodesUsed@@ZLIB_1.2.9+0xc78>
    a9dc:	ldrh	w4, [x0, #2812]
    a9e0:	lsl	w4, w4, w1
    a9e4:	ldrh	w8, [x0, #5936]
    a9e8:	orr	w4, w4, w8
    a9ec:	strh	w4, [x0, #5936]
    a9f0:	add	w1, w1, w3
    a9f4:	str	w1, [x0, #5940]
    a9f8:	b	add0 <inflateCodesUsed@@ZLIB_1.2.9+0xcf0>
    a9fc:	sub	w2, w2, #0x3
    aa00:	and	w2, w2, #0xffff
    aa04:	lsl	w2, w2, w1
    aa08:	ldrh	w3, [x0, #5936]
    aa0c:	orr	w2, w2, w3
    aa10:	strh	w2, [x0, #5936]
    aa14:	add	w1, w1, #0x2
    aa18:	str	w1, [x0, #5940]
    aa1c:	b	ae40 <inflateCodesUsed@@ZLIB_1.2.9+0xd60>
    aa20:	cmp	w2, #0xa
    aa24:	b.gt	ab58 <inflateCodesUsed@@ZLIB_1.2.9+0xa78>
    aa28:	ldrh	w4, [x0, #2818]
    aa2c:	ldr	w3, [x0, #5940]
    aa30:	sub	w8, w7, w4
    aa34:	cmp	w3, w8
    aa38:	b.le	ab14 <inflateCodesUsed@@ZLIB_1.2.9+0xa34>
    aa3c:	ldrh	w8, [x0, #2816]
    aa40:	lsl	w3, w8, w3
    aa44:	ldrh	w17, [x0, #5936]
    aa48:	orr	w3, w3, w17
    aa4c:	sxth	w3, w3
    aa50:	strh	w3, [x0, #5936]
    aa54:	ldr	x18, [x0, #16]
    aa58:	ldr	x17, [x0, #40]
    aa5c:	add	x30, x17, #0x1
    aa60:	str	x30, [x0, #40]
    aa64:	strb	w3, [x18, x17]
    aa68:	ldrh	w3, [x0, #5936]
    aa6c:	lsr	w3, w3, #8
    aa70:	ldr	x18, [x0, #16]
    aa74:	ldr	x17, [x0, #40]
    aa78:	add	x30, x17, #0x1
    aa7c:	str	x30, [x0, #40]
    aa80:	strb	w3, [x18, x17]
    aa84:	ldr	w17, [x0, #5940]
    aa88:	sub	w3, w7, w17
    aa8c:	asr	w8, w8, w3
    aa90:	strh	w8, [x0, #5936]
    aa94:	sub	w3, w4, #0x10
    aa98:	add	w3, w3, w17
    aa9c:	str	w3, [x0, #5940]
    aaa0:	ldr	w3, [x0, #5940]
    aaa4:	cmp	w3, #0xd
    aaa8:	b.le	ab34 <inflateCodesUsed@@ZLIB_1.2.9+0xa54>
    aaac:	sub	w1, w1, #0x2
    aab0:	and	w1, w1, #0xffff
    aab4:	lsl	w2, w1, w3
    aab8:	ldrh	w3, [x0, #5936]
    aabc:	orr	w2, w2, w3
    aac0:	sxth	w2, w2
    aac4:	strh	w2, [x0, #5936]
    aac8:	ldr	x4, [x0, #16]
    aacc:	ldr	x3, [x0, #40]
    aad0:	add	x8, x3, #0x1
    aad4:	str	x8, [x0, #40]
    aad8:	strb	w2, [x4, x3]
    aadc:	ldrh	w2, [x0, #5936]
    aae0:	lsr	w2, w2, #8
    aae4:	ldr	x4, [x0, #16]
    aae8:	ldr	x3, [x0, #40]
    aaec:	add	x8, x3, #0x1
    aaf0:	str	x8, [x0, #40]
    aaf4:	strb	w2, [x4, x3]
    aaf8:	ldr	w2, [x0, #5940]
    aafc:	sub	w3, w7, w2
    ab00:	asr	w1, w1, w3
    ab04:	strh	w1, [x0, #5936]
    ab08:	sub	w2, w2, #0xd
    ab0c:	str	w2, [x0, #5940]
    ab10:	b	ae40 <inflateCodesUsed@@ZLIB_1.2.9+0xd60>
    ab14:	ldrh	w8, [x0, #2816]
    ab18:	lsl	w8, w8, w3
    ab1c:	ldrh	w17, [x0, #5936]
    ab20:	orr	w8, w8, w17
    ab24:	strh	w8, [x0, #5936]
    ab28:	add	w3, w3, w4
    ab2c:	str	w3, [x0, #5940]
    ab30:	b	aaa0 <inflateCodesUsed@@ZLIB_1.2.9+0x9c0>
    ab34:	sub	w1, w2, #0x3
    ab38:	and	w1, w1, #0xffff
    ab3c:	lsl	w1, w1, w3
    ab40:	ldrh	w2, [x0, #5936]
    ab44:	orr	w1, w1, w2
    ab48:	strh	w1, [x0, #5936]
    ab4c:	add	w3, w3, #0x3
    ab50:	str	w3, [x0, #5940]
    ab54:	b	ae40 <inflateCodesUsed@@ZLIB_1.2.9+0xd60>
    ab58:	ldrh	w4, [x0, #2822]
    ab5c:	ldr	w3, [x0, #5940]
    ab60:	sub	w8, w7, w4
    ab64:	cmp	w3, w8
    ab68:	b.le	ac44 <inflateCodesUsed@@ZLIB_1.2.9+0xb64>
    ab6c:	ldrh	w17, [x0, #2820]
    ab70:	lsl	w3, w17, w3
    ab74:	ldrh	w8, [x0, #5936]
    ab78:	orr	w3, w3, w8
    ab7c:	sxth	w3, w3
    ab80:	strh	w3, [x0, #5936]
    ab84:	ldr	x18, [x0, #16]
    ab88:	ldr	x8, [x0, #40]
    ab8c:	add	x30, x8, #0x1
    ab90:	str	x30, [x0, #40]
    ab94:	strb	w3, [x18, x8]
    ab98:	ldrh	w8, [x0, #5936]
    ab9c:	lsr	w8, w8, #8
    aba0:	ldr	x18, [x0, #16]
    aba4:	ldr	x3, [x0, #40]
    aba8:	add	x30, x3, #0x1
    abac:	str	x30, [x0, #40]
    abb0:	strb	w8, [x18, x3]
    abb4:	ldr	w8, [x0, #5940]
    abb8:	sub	w3, w7, w8
    abbc:	asr	w3, w17, w3
    abc0:	strh	w3, [x0, #5936]
    abc4:	sub	w3, w4, #0x10
    abc8:	add	w3, w3, w8
    abcc:	str	w3, [x0, #5940]
    abd0:	ldr	w3, [x0, #5940]
    abd4:	cmp	w3, #0x9
    abd8:	b.le	ac64 <inflateCodesUsed@@ZLIB_1.2.9+0xb84>
    abdc:	sub	w1, w1, #0xa
    abe0:	and	w1, w1, #0xffff
    abe4:	lsl	w2, w1, w3
    abe8:	ldrh	w3, [x0, #5936]
    abec:	orr	w2, w2, w3
    abf0:	sxth	w2, w2
    abf4:	strh	w2, [x0, #5936]
    abf8:	ldr	x4, [x0, #16]
    abfc:	ldr	x3, [x0, #40]
    ac00:	add	x8, x3, #0x1
    ac04:	str	x8, [x0, #40]
    ac08:	strb	w2, [x4, x3]
    ac0c:	ldrh	w2, [x0, #5936]
    ac10:	lsr	w2, w2, #8
    ac14:	ldr	x4, [x0, #16]
    ac18:	ldr	x3, [x0, #40]
    ac1c:	add	x8, x3, #0x1
    ac20:	str	x8, [x0, #40]
    ac24:	strb	w2, [x4, x3]
    ac28:	ldr	w2, [x0, #5940]
    ac2c:	sub	w3, w7, w2
    ac30:	asr	w1, w1, w3
    ac34:	strh	w1, [x0, #5936]
    ac38:	sub	w2, w2, #0x9
    ac3c:	str	w2, [x0, #5940]
    ac40:	b	ae40 <inflateCodesUsed@@ZLIB_1.2.9+0xd60>
    ac44:	ldrh	w8, [x0, #2820]
    ac48:	lsl	w8, w8, w3
    ac4c:	ldrh	w17, [x0, #5936]
    ac50:	orr	w8, w8, w17
    ac54:	strh	w8, [x0, #5936]
    ac58:	add	w3, w3, w4
    ac5c:	str	w3, [x0, #5940]
    ac60:	b	abd0 <inflateCodesUsed@@ZLIB_1.2.9+0xaf0>
    ac64:	sub	w1, w2, #0xb
    ac68:	and	w1, w1, #0xffff
    ac6c:	lsl	w1, w1, w3
    ac70:	ldrh	w2, [x0, #5936]
    ac74:	orr	w1, w1, w2
    ac78:	strh	w1, [x0, #5936]
    ac7c:	add	w3, w3, #0x7
    ac80:	str	w3, [x0, #5940]
    ac84:	b	ae40 <inflateCodesUsed@@ZLIB_1.2.9+0xd60>
    ac88:	mov	w1, w2
    ac8c:	b	aca0 <inflateCodesUsed@@ZLIB_1.2.9+0xbc0>
    ac90:	mov	w1, w5
    ac94:	mov	w8, w6
    ac98:	mov	w4, w11
    ac9c:	mov	w3, w16
    aca0:	add	x9, x9, #0x4
    aca4:	cmp	x9, x10
    aca8:	b.eq	ae5c <inflateCodesUsed@@ZLIB_1.2.9+0xd7c>  // b.none
    acac:	mov	w6, w5
    acb0:	ldrh	w5, [x9]
    acb4:	add	w2, w1, #0x1
    acb8:	cmp	w5, w6
    acbc:	ccmp	w2, w3, #0x0, eq  // eq = none
    acc0:	b.lt	ac88 <inflateCodesUsed@@ZLIB_1.2.9+0xba8>  // b.tstop
    acc4:	cmp	w2, w4
    acc8:	b.lt	a910 <inflateCodesUsed@@ZLIB_1.2.9+0x830>  // b.tstop
    accc:	cbz	w6, aa20 <inflateCodesUsed@@ZLIB_1.2.9+0x940>
    acd0:	cmp	w8, w6
    acd4:	b.eq	ad58 <inflateCodesUsed@@ZLIB_1.2.9+0xc78>  // b.none
    acd8:	add	x4, x0, w6, sxtw #2
    acdc:	ldrh	w3, [x4, #2750]
    ace0:	ldr	w2, [x0, #5940]
    ace4:	sub	w8, w7, w3
    ace8:	cmp	w2, w8
    acec:	b.le	a9b8 <inflateCodesUsed@@ZLIB_1.2.9+0x8d8>
    acf0:	ldrh	w4, [x4, #2748]
    acf4:	lsl	w2, w4, w2
    acf8:	ldrh	w8, [x0, #5936]
    acfc:	orr	w2, w2, w8
    ad00:	sxth	w2, w2
    ad04:	strh	w2, [x0, #5936]
    ad08:	ldr	x17, [x0, #16]
    ad0c:	ldr	x8, [x0, #40]
    ad10:	add	x18, x8, #0x1
    ad14:	str	x18, [x0, #40]
    ad18:	strb	w2, [x17, x8]
    ad1c:	ldrh	w2, [x0, #5936]
    ad20:	lsr	w2, w2, #8
    ad24:	ldr	x17, [x0, #16]
    ad28:	ldr	x8, [x0, #40]
    ad2c:	add	x18, x8, #0x1
    ad30:	str	x18, [x0, #40]
    ad34:	strb	w2, [x17, x8]
    ad38:	ldr	w8, [x0, #5940]
    ad3c:	sub	w2, w7, w8
    ad40:	asr	w4, w4, w2
    ad44:	strh	w4, [x0, #5936]
    ad48:	sub	w2, w3, #0x10
    ad4c:	add	w2, w2, w8
    ad50:	str	w2, [x0, #5940]
    ad54:	mov	w2, w1
    ad58:	ldrh	w3, [x0, #2814]
    ad5c:	ldr	w1, [x0, #5940]
    ad60:	sub	w4, w7, w3
    ad64:	cmp	w1, w4
    ad68:	b.le	a9dc <inflateCodesUsed@@ZLIB_1.2.9+0x8fc>
    ad6c:	ldrh	w4, [x0, #2812]
    ad70:	lsl	w1, w4, w1
    ad74:	ldrh	w8, [x0, #5936]
    ad78:	orr	w1, w1, w8
    ad7c:	sxth	w1, w1
    ad80:	strh	w1, [x0, #5936]
    ad84:	ldr	x17, [x0, #16]
    ad88:	ldr	x8, [x0, #40]
    ad8c:	add	x18, x8, #0x1
    ad90:	str	x18, [x0, #40]
    ad94:	strb	w1, [x17, x8]
    ad98:	ldrh	w1, [x0, #5936]
    ad9c:	lsr	w1, w1, #8
    ada0:	ldr	x17, [x0, #16]
    ada4:	ldr	x8, [x0, #40]
    ada8:	add	x18, x8, #0x1
    adac:	str	x18, [x0, #40]
    adb0:	strb	w1, [x17, x8]
    adb4:	ldr	w8, [x0, #5940]
    adb8:	sub	w1, w7, w8
    adbc:	asr	w4, w4, w1
    adc0:	strh	w4, [x0, #5936]
    adc4:	sub	w1, w3, #0x10
    adc8:	add	w1, w1, w8
    adcc:	str	w1, [x0, #5940]
    add0:	ldr	w1, [x0, #5940]
    add4:	cmp	w1, #0xe
    add8:	b.le	a9fc <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    addc:	sub	w2, w2, #0x3
    ade0:	and	w2, w2, #0xffff
    ade4:	lsl	w1, w2, w1
    ade8:	ldrh	w3, [x0, #5936]
    adec:	orr	w1, w1, w3
    adf0:	sxth	w1, w1
    adf4:	strh	w1, [x0, #5936]
    adf8:	ldr	x4, [x0, #16]
    adfc:	ldr	x3, [x0, #40]
    ae00:	add	x8, x3, #0x1
    ae04:	str	x8, [x0, #40]
    ae08:	strb	w1, [x4, x3]
    ae0c:	ldrh	w1, [x0, #5936]
    ae10:	lsr	w1, w1, #8
    ae14:	ldr	x4, [x0, #16]
    ae18:	ldr	x3, [x0, #40]
    ae1c:	add	x8, x3, #0x1
    ae20:	str	x8, [x0, #40]
    ae24:	strb	w1, [x4, x3]
    ae28:	ldr	w1, [x0, #5940]
    ae2c:	sub	w3, w7, w1
    ae30:	asr	w2, w2, w3
    ae34:	strh	w2, [x0, #5936]
    ae38:	sub	w1, w1, #0xe
    ae3c:	str	w1, [x0, #5940]
    ae40:	cbz	w5, ac90 <inflateCodesUsed@@ZLIB_1.2.9+0xbb0>
    ae44:	mov	w8, w6
    ae48:	cmp	w5, w6
    ae4c:	csel	w4, w11, w15, eq  // eq = none
    ae50:	csel	w3, w14, w13, eq  // eq = none
    ae54:	mov	w1, w12
    ae58:	b	aca0 <inflateCodesUsed@@ZLIB_1.2.9+0xbc0>
    ae5c:	ldp	x29, x30, [sp], #16
    ae60:	ret
    ae64:	mov	w1, w2
    ae68:	add	x9, x9, #0x4
    ae6c:	cmp	x9, x10
    ae70:	b.ne	a8ec <inflateCodesUsed@@ZLIB_1.2.9+0x80c>  // b.any
    ae74:	ret
    ae78:	ret
    ae7c:	stp	x29, x30, [sp, #-16]!
    ae80:	mov	x29, sp
    ae84:	ldr	w3, [x0, #5900]
    ae88:	cbz	w3, b240 <inflateCodesUsed@@ZLIB_1.2.9+0x1160>
    ae8c:	mov	w5, #0x0                   	// #0
    ae90:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    ae94:	add	x8, x8, #0xf20
    ae98:	mov	w7, #0x10                  	// #16
    ae9c:	add	x11, x8, #0x100
    aea0:	add	x10, x8, #0x3f0
    aea4:	add	x13, x8, #0x468
    aea8:	add	x9, x8, #0x1f0
    aeac:	add	x12, x8, #0x178
    aeb0:	b	aedc <inflateCodesUsed@@ZLIB_1.2.9+0xdfc>
    aeb4:	ldrh	w4, [x1, x4]
    aeb8:	lsl	w4, w4, w3
    aebc:	ldrh	w14, [x0, #5936]
    aec0:	orr	w4, w4, w14
    aec4:	strh	w4, [x0, #5936]
    aec8:	add	w3, w3, w6
    aecc:	str	w3, [x0, #5940]
    aed0:	ldr	w3, [x0, #5900]
    aed4:	cmp	w3, w5
    aed8:	b.ls	b240 <inflateCodesUsed@@ZLIB_1.2.9+0x1160>  // b.plast
    aedc:	mov	w4, w5
    aee0:	ldr	x3, [x0, #5904]
    aee4:	ldrh	w3, [x3, w5, uxtw #1]
    aee8:	ldr	x6, [x0, #5888]
    aeec:	ldrb	w4, [x6, x4]
    aef0:	add	w5, w5, #0x1
    aef4:	cbnz	w3, af7c <inflateCodesUsed@@ZLIB_1.2.9+0xe9c>
    aef8:	ubfiz	x4, x4, #2, #8
    aefc:	add	x3, x1, x4
    af00:	ldrh	w6, [x3, #2]
    af04:	ldr	w3, [x0, #5940]
    af08:	sub	w14, w7, w6
    af0c:	cmp	w3, w14
    af10:	b.le	aeb4 <inflateCodesUsed@@ZLIB_1.2.9+0xdd4>
    af14:	ldrh	w4, [x1, x4]
    af18:	lsl	w3, w4, w3
    af1c:	ldrh	w14, [x0, #5936]
    af20:	orr	w3, w3, w14
    af24:	sxth	w3, w3
    af28:	strh	w3, [x0, #5936]
    af2c:	ldr	x15, [x0, #16]
    af30:	ldr	x14, [x0, #40]
    af34:	add	x16, x14, #0x1
    af38:	str	x16, [x0, #40]
    af3c:	strb	w3, [x15, x14]
    af40:	ldrh	w3, [x0, #5936]
    af44:	lsr	w3, w3, #8
    af48:	ldr	x15, [x0, #16]
    af4c:	ldr	x14, [x0, #40]
    af50:	add	x16, x14, #0x1
    af54:	str	x16, [x0, #40]
    af58:	strb	w3, [x15, x14]
    af5c:	ldr	w14, [x0, #5940]
    af60:	sub	w3, w7, w14
    af64:	asr	w4, w4, w3
    af68:	strh	w4, [x0, #5936]
    af6c:	sub	w3, w6, #0x10
    af70:	add	w3, w3, w14
    af74:	str	w3, [x0, #5940]
    af78:	b	aed0 <inflateCodesUsed@@ZLIB_1.2.9+0xdf0>
    af7c:	ldrb	w16, [x8, w4, sxtw]
    af80:	add	w15, w16, #0x101
    af84:	ubfiz	x15, x15, #2, #10
    af88:	add	x6, x1, x15
    af8c:	ldrh	w14, [x6, #2]
    af90:	ldr	w6, [x0, #5940]
    af94:	sub	w17, w7, w14
    af98:	cmp	w6, w17
    af9c:	b.le	b1b0 <inflateCodesUsed@@ZLIB_1.2.9+0x10d0>
    afa0:	ldrh	w15, [x1, x15]
    afa4:	lsl	w6, w15, w6
    afa8:	ldrh	w17, [x0, #5936]
    afac:	orr	w6, w6, w17
    afb0:	sxth	w6, w6
    afb4:	strh	w6, [x0, #5936]
    afb8:	ldr	x18, [x0, #16]
    afbc:	ldr	x17, [x0, #40]
    afc0:	add	x30, x17, #0x1
    afc4:	str	x30, [x0, #40]
    afc8:	strb	w6, [x18, x17]
    afcc:	ldrh	w6, [x0, #5936]
    afd0:	lsr	w6, w6, #8
    afd4:	ldr	x18, [x0, #16]
    afd8:	ldr	x17, [x0, #40]
    afdc:	add	x30, x17, #0x1
    afe0:	str	x30, [x0, #40]
    afe4:	strb	w6, [x18, x17]
    afe8:	ldr	w6, [x0, #5940]
    afec:	sub	w17, w7, w6
    aff0:	asr	w15, w15, w17
    aff4:	strh	w15, [x0, #5936]
    aff8:	sub	w14, w14, #0x10
    affc:	add	w14, w14, w6
    b000:	str	w14, [x0, #5940]
    b004:	mov	w14, w16
    b008:	ldr	w14, [x11, x14, lsl #2]
    b00c:	cbz	w14, b090 <inflateCodesUsed@@ZLIB_1.2.9+0xfb0>
    b010:	mov	w6, w16
    b014:	ldr	w6, [x12, x6, lsl #2]
    b018:	sub	w4, w4, w6
    b01c:	ldr	w6, [x0, #5940]
    b020:	sub	w15, w7, w14
    b024:	cmp	w6, w15
    b028:	b.le	b1d0 <inflateCodesUsed@@ZLIB_1.2.9+0x10f0>
    b02c:	and	w4, w4, #0xffff
    b030:	lsl	w6, w4, w6
    b034:	ldrh	w15, [x0, #5936]
    b038:	orr	w6, w6, w15
    b03c:	sxth	w6, w6
    b040:	strh	w6, [x0, #5936]
    b044:	ldr	x16, [x0, #16]
    b048:	ldr	x15, [x0, #40]
    b04c:	add	x17, x15, #0x1
    b050:	str	x17, [x0, #40]
    b054:	strb	w6, [x16, x15]
    b058:	ldrh	w6, [x0, #5936]
    b05c:	lsr	w6, w6, #8
    b060:	ldr	x16, [x0, #16]
    b064:	ldr	x15, [x0, #40]
    b068:	add	x17, x15, #0x1
    b06c:	str	x17, [x0, #40]
    b070:	strb	w6, [x16, x15]
    b074:	ldr	w6, [x0, #5940]
    b078:	sub	w15, w7, w6
    b07c:	asr	w4, w4, w15
    b080:	strh	w4, [x0, #5936]
    b084:	sub	w14, w14, #0x10
    b088:	add	w14, w14, w6
    b08c:	str	w14, [x0, #5940]
    b090:	sub	w3, w3, #0x1
    b094:	cmp	w3, #0xff
    b098:	b.hi	b1f0 <inflateCodesUsed@@ZLIB_1.2.9+0x1110>  // b.pmore
    b09c:	ldrb	w15, [x9, w3, uxtw]
    b0a0:	ubfiz	x14, x15, #2, #8
    b0a4:	add	x4, x2, x14
    b0a8:	ldrh	w6, [x4, #2]
    b0ac:	ldr	w4, [x0, #5940]
    b0b0:	sub	w16, w7, w6
    b0b4:	cmp	w4, w16
    b0b8:	b.le	b200 <inflateCodesUsed@@ZLIB_1.2.9+0x1120>
    b0bc:	ldrh	w14, [x2, x14]
    b0c0:	lsl	w4, w14, w4
    b0c4:	ldrh	w16, [x0, #5936]
    b0c8:	orr	w4, w4, w16
    b0cc:	sxth	w4, w4
    b0d0:	strh	w4, [x0, #5936]
    b0d4:	ldr	x17, [x0, #16]
    b0d8:	ldr	x16, [x0, #40]
    b0dc:	add	x18, x16, #0x1
    b0e0:	str	x18, [x0, #40]
    b0e4:	strb	w4, [x17, x16]
    b0e8:	ldrh	w4, [x0, #5936]
    b0ec:	lsr	w4, w4, #8
    b0f0:	ldr	x17, [x0, #16]
    b0f4:	ldr	x16, [x0, #40]
    b0f8:	add	x18, x16, #0x1
    b0fc:	str	x18, [x0, #40]
    b100:	strb	w4, [x17, x16]
    b104:	ldr	w4, [x0, #5940]
    b108:	sub	w16, w7, w4
    b10c:	asr	w14, w14, w16
    b110:	strh	w14, [x0, #5936]
    b114:	sub	w6, w6, #0x10
    b118:	add	w6, w6, w4
    b11c:	str	w6, [x0, #5940]
    b120:	mov	w6, w15
    b124:	ldr	w6, [x10, x6, lsl #2]
    b128:	cbz	w6, aed0 <inflateCodesUsed@@ZLIB_1.2.9+0xdf0>
    b12c:	mov	w4, w15
    b130:	ldr	w4, [x13, x4, lsl #2]
    b134:	sub	w3, w3, w4
    b138:	ldr	w4, [x0, #5940]
    b13c:	sub	w14, w7, w6
    b140:	cmp	w4, w14
    b144:	b.le	b220 <inflateCodesUsed@@ZLIB_1.2.9+0x1140>
    b148:	and	w3, w3, #0xffff
    b14c:	lsl	w4, w3, w4
    b150:	ldrh	w14, [x0, #5936]
    b154:	orr	w4, w4, w14
    b158:	sxth	w4, w4
    b15c:	strh	w4, [x0, #5936]
    b160:	ldr	x15, [x0, #16]
    b164:	ldr	x14, [x0, #40]
    b168:	add	x16, x14, #0x1
    b16c:	str	x16, [x0, #40]
    b170:	strb	w4, [x15, x14]
    b174:	ldrh	w4, [x0, #5936]
    b178:	lsr	w4, w4, #8
    b17c:	ldr	x15, [x0, #16]
    b180:	ldr	x14, [x0, #40]
    b184:	add	x16, x14, #0x1
    b188:	str	x16, [x0, #40]
    b18c:	strb	w4, [x15, x14]
    b190:	ldr	w4, [x0, #5940]
    b194:	sub	w14, w7, w4
    b198:	asr	w3, w3, w14
    b19c:	strh	w3, [x0, #5936]
    b1a0:	sub	w6, w6, #0x10
    b1a4:	add	w6, w6, w4
    b1a8:	str	w6, [x0, #5940]
    b1ac:	b	aed0 <inflateCodesUsed@@ZLIB_1.2.9+0xdf0>
    b1b0:	ldrh	w15, [x1, x15]
    b1b4:	lsl	w15, w15, w6
    b1b8:	ldrh	w17, [x0, #5936]
    b1bc:	orr	w15, w15, w17
    b1c0:	strh	w15, [x0, #5936]
    b1c4:	add	w6, w6, w14
    b1c8:	str	w6, [x0, #5940]
    b1cc:	b	b004 <inflateCodesUsed@@ZLIB_1.2.9+0xf24>
    b1d0:	and	w4, w4, #0xffff
    b1d4:	lsl	w4, w4, w6
    b1d8:	ldrh	w15, [x0, #5936]
    b1dc:	orr	w4, w4, w15
    b1e0:	strh	w4, [x0, #5936]
    b1e4:	add	w14, w6, w14
    b1e8:	str	w14, [x0, #5940]
    b1ec:	b	b090 <inflateCodesUsed@@ZLIB_1.2.9+0xfb0>
    b1f0:	lsr	w4, w3, #7
    b1f4:	add	w4, w4, #0x100
    b1f8:	ldrb	w15, [x9, w4, uxtw]
    b1fc:	b	b0a0 <inflateCodesUsed@@ZLIB_1.2.9+0xfc0>
    b200:	ldrh	w14, [x2, x14]
    b204:	lsl	w14, w14, w4
    b208:	ldrh	w16, [x0, #5936]
    b20c:	orr	w14, w14, w16
    b210:	strh	w14, [x0, #5936]
    b214:	add	w4, w4, w6
    b218:	str	w4, [x0, #5940]
    b21c:	b	b120 <inflateCodesUsed@@ZLIB_1.2.9+0x1040>
    b220:	and	w3, w3, #0xffff
    b224:	lsl	w3, w3, w4
    b228:	ldrh	w14, [x0, #5936]
    b22c:	orr	w3, w3, w14
    b230:	strh	w3, [x0, #5936]
    b234:	add	w6, w4, w6
    b238:	str	w6, [x0, #5940]
    b23c:	b	aed0 <inflateCodesUsed@@ZLIB_1.2.9+0xdf0>
    b240:	ldrh	w3, [x1, #1026]
    b244:	ldr	w2, [x0, #5940]
    b248:	mov	w4, #0x10                  	// #16
    b24c:	sub	w4, w4, w3
    b250:	cmp	w2, w4
    b254:	b.le	b2c8 <inflateCodesUsed@@ZLIB_1.2.9+0x11e8>
    b258:	ldrh	w4, [x1, #1024]
    b25c:	lsl	w1, w4, w2
    b260:	ldrh	w2, [x0, #5936]
    b264:	orr	w1, w1, w2
    b268:	sxth	w1, w1
    b26c:	strh	w1, [x0, #5936]
    b270:	ldr	x5, [x0, #16]
    b274:	ldr	x2, [x0, #40]
    b278:	add	x6, x2, #0x1
    b27c:	str	x6, [x0, #40]
    b280:	strb	w1, [x5, x2]
    b284:	ldrh	w1, [x0, #5936]
    b288:	lsr	w1, w1, #8
    b28c:	ldr	x5, [x0, #16]
    b290:	ldr	x2, [x0, #40]
    b294:	add	x6, x2, #0x1
    b298:	str	x6, [x0, #40]
    b29c:	strb	w1, [x5, x2]
    b2a0:	ldr	w5, [x0, #5940]
    b2a4:	mov	w1, #0x10                  	// #16
    b2a8:	sub	w1, w1, w5
    b2ac:	asr	w4, w4, w1
    b2b0:	strh	w4, [x0, #5936]
    b2b4:	sub	w2, w3, #0x10
    b2b8:	add	w2, w2, w5
    b2bc:	str	w2, [x0, #5940]
    b2c0:	ldp	x29, x30, [sp], #16
    b2c4:	ret
    b2c8:	ldrh	w1, [x1, #1024]
    b2cc:	lsl	w1, w1, w2
    b2d0:	ldrh	w4, [x0, #5936]
    b2d4:	orr	w1, w1, w4
    b2d8:	strh	w1, [x0, #5936]
    b2dc:	add	w2, w2, w3
    b2e0:	str	w2, [x0, #5940]
    b2e4:	b	b2c0 <inflateCodesUsed@@ZLIB_1.2.9+0x11e0>
    b2e8:	stp	x29, x30, [sp, #-128]!
    b2ec:	mov	x29, sp
    b2f0:	stp	x19, x20, [sp, #16]
    b2f4:	stp	x21, x22, [sp, #32]
    b2f8:	stp	x23, x24, [sp, #48]
    b2fc:	stp	x25, x26, [sp, #64]
    b300:	stp	x27, x28, [sp, #80]
    b304:	mov	x19, x0
    b308:	mov	x28, x1
    b30c:	ldr	x20, [x1]
    b310:	ldr	x0, [x1, #16]
    b314:	ldr	x3, [x0]
    b318:	ldr	w24, [x0, #20]
    b31c:	str	wzr, [x19, #5300]
    b320:	mov	w0, #0x23d                 	// #573
    b324:	str	w0, [x19, #5304]
    b328:	cmp	w24, #0x0
    b32c:	b.le	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x12bc>
    b330:	mov	x1, x20
    b334:	mov	x0, #0x0                   	// #0
    b338:	mov	w23, #0xffffffff            	// #-1
    b33c:	add	x4, x19, #0x1, lsl #12
    b340:	add	x4, x4, #0x4bc
    b344:	b	b35c <inflateCodesUsed@@ZLIB_1.2.9+0x127c>
    b348:	strh	wzr, [x1, #2]
    b34c:	add	x0, x0, #0x1
    b350:	add	x1, x1, #0x4
    b354:	cmp	w24, w0
    b358:	b.le	b384 <inflateCodesUsed@@ZLIB_1.2.9+0x12a4>
    b35c:	ldrh	w2, [x1]
    b360:	cbz	w2, b348 <inflateCodesUsed@@ZLIB_1.2.9+0x1268>
    b364:	ldr	w2, [x19, #5300]
    b368:	add	w2, w2, #0x1
    b36c:	str	w2, [x19, #5300]
    b370:	add	x2, x19, w2, sxtw #2
    b374:	str	w0, [x2, #3008]
    b378:	strb	wzr, [x4, x0]
    b37c:	mov	w23, w0
    b380:	b	b34c <inflateCodesUsed@@ZLIB_1.2.9+0x126c>
    b384:	ldr	w1, [x19, #5300]
    b388:	cmp	w1, #0x1
    b38c:	b.gt	b414 <inflateCodesUsed@@ZLIB_1.2.9+0x1334>
    b390:	mov	w4, #0x0                   	// #0
    b394:	mov	w2, #0x1                   	// #1
    b398:	b	b404 <inflateCodesUsed@@ZLIB_1.2.9+0x1324>
    b39c:	mov	w23, #0xffffffff            	// #-1
    b3a0:	mov	w1, #0x0                   	// #0
    b3a4:	b	b390 <inflateCodesUsed@@ZLIB_1.2.9+0x12b0>
    b3a8:	add	w23, w23, #0x1
    b3ac:	mov	w0, w23
    b3b0:	add	w1, w1, #0x1
    b3b4:	str	w1, [x19, #5300]
    b3b8:	add	x1, x19, w1, sxtw #2
    b3bc:	str	w0, [x1, #3008]
    b3c0:	sbfiz	x1, x0, #2, #32
    b3c4:	strh	w2, [x20, x1]
    b3c8:	add	x0, x19, w0, sxtw
    b3cc:	add	x0, x0, #0x1, lsl #12
    b3d0:	strb	wzr, [x0, #1212]
    b3d4:	ldr	x0, [x19, #5912]
    b3d8:	sub	x0, x0, #0x1
    b3dc:	str	x0, [x19, #5912]
    b3e0:	cbz	x3, b3f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1318>
    b3e4:	add	x1, x3, x1
    b3e8:	ldrh	w1, [x1, #2]
    b3ec:	ldr	x0, [x19, #5920]
    b3f0:	sub	x0, x0, x1
    b3f4:	str	x0, [x19, #5920]
    b3f8:	ldr	w1, [x19, #5300]
    b3fc:	cmp	w1, #0x1
    b400:	b.gt	b414 <inflateCodesUsed@@ZLIB_1.2.9+0x1334>
    b404:	mov	w0, w4
    b408:	cmp	w23, #0x1
    b40c:	b.gt	b3b0 <inflateCodesUsed@@ZLIB_1.2.9+0x12d0>
    b410:	b	b3a8 <inflateCodesUsed@@ZLIB_1.2.9+0x12c8>
    b414:	str	w23, [x28, #8]
    b418:	ldr	w0, [x19, #5300]
    b41c:	add	w21, w0, w0, lsr #31
    b420:	asr	w21, w21, #1
    b424:	cmp	w0, #0x1
    b428:	b.le	b448 <inflateCodesUsed@@ZLIB_1.2.9+0x1368>
    b42c:	mov	w2, w21
    b430:	mov	x1, x20
    b434:	mov	x0, x19
    b438:	bl	a690 <inflateCodesUsed@@ZLIB_1.2.9+0x5b0>
    b43c:	sub	w21, w21, #0x1
    b440:	cmp	w21, #0x0
    b444:	b.gt	b42c <inflateCodesUsed@@ZLIB_1.2.9+0x134c>
    b448:	sxtw	x0, w24
    b44c:	mov	x22, x0
    b450:	mov	w25, #0x1                   	// #1
    b454:	add	x27, x19, #0x1, lsl #12
    b458:	add	x27, x27, #0x4bc
    b45c:	sub	w24, w24, w0
    b460:	ldr	w21, [x19, #3012]
    b464:	ldr	w0, [x19, #5300]
    b468:	sub	w1, w0, #0x1
    b46c:	str	w1, [x19, #5300]
    b470:	add	x0, x19, w0, sxtw #2
    b474:	ldr	w0, [x0, #3008]
    b478:	str	w0, [x19, #3012]
    b47c:	mov	w2, w25
    b480:	mov	x1, x20
    b484:	mov	x0, x19
    b488:	bl	a690 <inflateCodesUsed@@ZLIB_1.2.9+0x5b0>
    b48c:	ldr	w0, [x19, #3012]
    b490:	ldr	w1, [x19, #5304]
    b494:	add	x2, x19, w1, sxtw #2
    b498:	str	w21, [x2, #3004]
    b49c:	sub	w1, w1, #0x2
    b4a0:	str	w1, [x19, #5304]
    b4a4:	str	w0, [x2, #3000]
    b4a8:	sbfiz	x1, x21, #2, #32
    b4ac:	add	x4, x20, x1
    b4b0:	sbfiz	x2, x0, #2, #32
    b4b4:	add	x5, x20, x2
    b4b8:	lsl	x3, x22, #2
    b4bc:	ldrh	w1, [x20, x1]
    b4c0:	ldrh	w2, [x20, x2]
    b4c4:	add	w1, w1, w2
    b4c8:	strh	w1, [x20, x3]
    b4cc:	add	x21, x19, w21, sxtw
    b4d0:	add	x21, x21, #0x1, lsl #12
    b4d4:	ldrb	w3, [x21, #1212]
    b4d8:	add	x0, x19, w0, sxtw
    b4dc:	add	x0, x0, #0x1, lsl #12
    b4e0:	ldrb	w2, [x0, #1212]
    b4e4:	add	w0, w3, #0x1
    b4e8:	and	w1, w0, #0xff
    b4ec:	add	w0, w2, #0x1
    b4f0:	and	w0, w0, #0xff
    b4f4:	cmp	w3, w2
    b4f8:	csel	w0, w0, w1, cc  // cc = lo, ul, last
    b4fc:	strb	w0, [x27, x22]
    b500:	add	w0, w24, w22
    b504:	and	w0, w0, #0xffff
    b508:	strh	w0, [x5, #2]
    b50c:	strh	w0, [x4, #2]
    b510:	str	w22, [x19, #3012]
    b514:	mov	w2, w25
    b518:	mov	x1, x20
    b51c:	mov	x0, x19
    b520:	bl	a690 <inflateCodesUsed@@ZLIB_1.2.9+0x5b0>
    b524:	add	x22, x22, #0x1
    b528:	ldr	w0, [x19, #5300]
    b52c:	cmp	w0, #0x1
    b530:	b.gt	b460 <inflateCodesUsed@@ZLIB_1.2.9+0x1380>
    b534:	ldr	w0, [x19, #5304]
    b538:	sub	w0, w0, #0x1
    b53c:	str	w0, [x19, #5304]
    b540:	ldr	w4, [x19, #3012]
    b544:	add	x0, x19, w0, sxtw #2
    b548:	str	w4, [x0, #3008]
    b54c:	ldr	x3, [x28]
    b550:	ldr	w7, [x28, #8]
    b554:	ldr	x0, [x28, #16]
    b558:	ldr	x11, [x0]
    b55c:	ldr	x14, [x0, #8]
    b560:	ldr	w12, [x0, #16]
    b564:	ldr	w1, [x0, #24]
    b568:	add	x6, x19, #0xba0
    b56c:	mov	x0, x6
    b570:	add	x2, x19, #0xbc0
    b574:	strh	wzr, [x0], #2
    b578:	cmp	x0, x2
    b57c:	b.ne	b574 <inflateCodesUsed@@ZLIB_1.2.9+0x1494>  // b.any
    b580:	add	x4, x3, w4, sxtw #2
    b584:	strh	wzr, [x4, #2]
    b588:	ldr	w2, [x19, #5304]
    b58c:	add	w2, w2, #0x1
    b590:	cmp	w2, #0x23c
    b594:	b.gt	b734 <inflateCodesUsed@@ZLIB_1.2.9+0x1654>
    b598:	sxtw	x2, w2
    b59c:	mov	w10, #0x0                   	// #0
    b5a0:	add	x8, x19, #0xbc0
    b5a4:	mov	w15, w1
    b5a8:	mov	w13, #0x0                   	// #0
    b5ac:	b	b5ec <inflateCodesUsed@@ZLIB_1.2.9+0x150c>
    b5b0:	ldrh	w4, [x3, x5]
    b5b4:	add	w0, w0, w9
    b5b8:	ldr	x16, [x19, #5912]
    b5bc:	madd	x0, x0, x4, x16
    b5c0:	str	x0, [x19, #5912]
    b5c4:	cbz	x11, b5e0 <inflateCodesUsed@@ZLIB_1.2.9+0x1500>
    b5c8:	add	x5, x11, x5
    b5cc:	ldrh	w0, [x5, #2]
    b5d0:	add	w0, w0, w9
    b5d4:	ldr	x5, [x19, #5920]
    b5d8:	madd	x0, x0, x4, x5
    b5dc:	str	x0, [x19, #5920]
    b5e0:	add	x2, x2, #0x1
    b5e4:	cmp	w2, #0x23c
    b5e8:	b.gt	b64c <inflateCodesUsed@@ZLIB_1.2.9+0x156c>
    b5ec:	ldr	w4, [x8, x2, lsl #2]
    b5f0:	sbfiz	x5, x4, #2, #32
    b5f4:	add	x9, x3, x5
    b5f8:	ldrh	w0, [x9, #2]
    b5fc:	add	x0, x3, x0, lsl #2
    b600:	ldrh	w0, [x0, #2]
    b604:	add	w0, w0, #0x1
    b608:	cmp	w1, w0
    b60c:	b.ge	b618 <inflateCodesUsed@@ZLIB_1.2.9+0x1538>  // b.tcont
    b610:	add	w10, w10, #0x1
    b614:	mov	w0, w15
    b618:	strh	w0, [x9, #2]
    b61c:	cmp	w7, w4
    b620:	b.lt	b5e0 <inflateCodesUsed@@ZLIB_1.2.9+0x1500>  // b.tstop
    b624:	add	x16, x19, w0, sxtw #1
    b628:	ldrh	w9, [x16, #2976]
    b62c:	add	w9, w9, #0x1
    b630:	strh	w9, [x16, #2976]
    b634:	mov	w9, w13
    b638:	cmp	w12, w4
    b63c:	b.gt	b5b0 <inflateCodesUsed@@ZLIB_1.2.9+0x14d0>
    b640:	sub	w4, w4, w12
    b644:	ldr	w9, [x14, w4, sxtw #2]
    b648:	b	b5b0 <inflateCodesUsed@@ZLIB_1.2.9+0x14d0>
    b64c:	cbz	w10, b734 <inflateCodesUsed@@ZLIB_1.2.9+0x1654>
    b650:	sub	w12, w1, #0x1
    b654:	sub	w13, w1, #0x2
    b658:	add	x11, x19, #0xba2
    b65c:	b	b690 <inflateCodesUsed@@ZLIB_1.2.9+0x15b0>
    b660:	add	x2, x19, w2, sxtw #1
    b664:	sub	w0, w0, #0x1
    b668:	strh	w0, [x2, #2976]
    b66c:	ldrh	w0, [x2, #2978]
    b670:	add	w0, w0, #0x2
    b674:	strh	w0, [x2, #2978]
    b678:	ldrh	w0, [x5, #2976]
    b67c:	sub	w0, w0, #0x1
    b680:	strh	w0, [x5, #2976]
    b684:	sub	w10, w10, #0x2
    b688:	cmp	w10, #0x0
    b68c:	b.le	b6bc <inflateCodesUsed@@ZLIB_1.2.9+0x15dc>
    b690:	mov	w2, w12
    b694:	sxtw	x9, w1
    b698:	add	x5, x19, w1, sxtw #1
    b69c:	ldrh	w0, [x5, #2974]
    b6a0:	cbnz	w0, b660 <inflateCodesUsed@@ZLIB_1.2.9+0x1580>
    b6a4:	sxtw	x4, w13
    b6a8:	mov	w2, w4
    b6ac:	sub	x4, x4, #0x1
    b6b0:	ldrh	w0, [x11, x4, lsl #1]
    b6b4:	cbz	w0, b6a8 <inflateCodesUsed@@ZLIB_1.2.9+0x15c8>
    b6b8:	b	b660 <inflateCodesUsed@@ZLIB_1.2.9+0x1580>
    b6bc:	cbz	w1, b734 <inflateCodesUsed@@ZLIB_1.2.9+0x1654>
    b6c0:	mov	w11, #0x23d                 	// #573
    b6c4:	b	b720 <inflateCodesUsed@@ZLIB_1.2.9+0x1640>
    b6c8:	sub	x0, x9, w0, uxth
    b6cc:	ldrh	w12, [x3, x2]
    b6d0:	ldr	x2, [x19, #5912]
    b6d4:	madd	x0, x0, x12, x2
    b6d8:	str	x0, [x19, #5912]
    b6dc:	strh	w1, [x10, #2]
    b6e0:	sub	w5, w5, #0x1
    b6e4:	sub	x4, x4, #0x1
    b6e8:	cbz	w5, b714 <inflateCodesUsed@@ZLIB_1.2.9+0x1634>
    b6ec:	mov	w11, w4
    b6f0:	ldr	w2, [x8, x4, lsl #2]
    b6f4:	cmp	w7, w2
    b6f8:	b.lt	b6e4 <inflateCodesUsed@@ZLIB_1.2.9+0x1604>  // b.tstop
    b6fc:	sbfiz	x2, x2, #2, #32
    b700:	add	x10, x3, x2
    b704:	ldrh	w0, [x10, #2]
    b708:	cmp	w0, w1
    b70c:	b.ne	b6c8 <inflateCodesUsed@@ZLIB_1.2.9+0x15e8>  // b.any
    b710:	b	b6e0 <inflateCodesUsed@@ZLIB_1.2.9+0x1600>
    b714:	sub	x9, x9, #0x1
    b718:	subs	w1, w1, #0x1
    b71c:	b.eq	b734 <inflateCodesUsed@@ZLIB_1.2.9+0x1654>  // b.none
    b720:	ldrh	w5, [x6, x9, lsl #1]
    b724:	cbz	w5, b714 <inflateCodesUsed@@ZLIB_1.2.9+0x1634>
    b728:	sub	w4, w11, #0x1
    b72c:	sxtw	x4, w4
    b730:	b	b6ec <inflateCodesUsed@@ZLIB_1.2.9+0x160c>
    b734:	mov	x1, #0x0                   	// #0
    b738:	mov	w0, #0x0                   	// #0
    b73c:	add	x3, sp, #0x60
    b740:	ldrh	w2, [x6, x1]
    b744:	add	w0, w2, w0
    b748:	lsl	w0, w0, #1
    b74c:	add	x2, x1, x3
    b750:	strh	w0, [x2, #2]
    b754:	add	x1, x1, #0x2
    b758:	cmp	x1, #0x1e
    b75c:	b.ne	b740 <inflateCodesUsed@@ZLIB_1.2.9+0x1660>  // b.any
    b760:	tbnz	w23, #31, b7c8 <inflateCodesUsed@@ZLIB_1.2.9+0x16e8>
    b764:	mov	x3, x20
    b768:	add	x20, x20, #0x4
    b76c:	add	x20, x20, w23, uxtw #2
    b770:	add	x6, sp, #0x60
    b774:	mov	w7, #0x0                   	// #0
    b778:	b	b7a4 <inflateCodesUsed@@ZLIB_1.2.9+0x16c4>
    b77c:	and	w2, w0, #0x1
    b780:	orr	w2, w2, w4
    b784:	lsr	w0, w0, #1
    b788:	lsl	w4, w2, #1
    b78c:	subs	w1, w1, #0x1
    b790:	b.ne	b77c <inflateCodesUsed@@ZLIB_1.2.9+0x169c>  // b.any
    b794:	strh	w2, [x5]
    b798:	add	x3, x3, #0x4
    b79c:	cmp	x3, x20
    b7a0:	b.eq	b7c8 <inflateCodesUsed@@ZLIB_1.2.9+0x16e8>  // b.none
    b7a4:	mov	x5, x3
    b7a8:	ldrh	w1, [x3, #2]
    b7ac:	cbz	w1, b798 <inflateCodesUsed@@ZLIB_1.2.9+0x16b8>
    b7b0:	sbfiz	x2, x1, #1, #32
    b7b4:	ldrh	w0, [x6, x2]
    b7b8:	add	w4, w0, #0x1
    b7bc:	strh	w4, [x6, x2]
    b7c0:	mov	w4, w7
    b7c4:	b	b77c <inflateCodesUsed@@ZLIB_1.2.9+0x169c>
    b7c8:	ldp	x19, x20, [sp, #16]
    b7cc:	ldp	x21, x22, [sp, #32]
    b7d0:	ldp	x23, x24, [sp, #48]
    b7d4:	ldp	x25, x26, [sp, #64]
    b7d8:	ldp	x27, x28, [sp, #80]
    b7dc:	ldp	x29, x30, [sp], #128
    b7e0:	ret
    b7e4:	ldr	w1, [x0, #5940]
    b7e8:	cmp	w1, #0x10
    b7ec:	b.eq	b82c <inflateCodesUsed@@ZLIB_1.2.9+0x174c>  // b.none
    b7f0:	cmp	w1, #0x7
    b7f4:	b.le	b868 <inflateCodesUsed@@ZLIB_1.2.9+0x1788>
    b7f8:	ldrh	w3, [x0, #5936]
    b7fc:	ldr	x2, [x0, #16]
    b800:	ldr	x1, [x0, #40]
    b804:	add	x4, x1, #0x1
    b808:	str	x4, [x0, #40]
    b80c:	strb	w3, [x2, x1]
    b810:	ldrh	w1, [x0, #5936]
    b814:	lsr	w1, w1, #8
    b818:	strh	w1, [x0, #5936]
    b81c:	ldr	w1, [x0, #5940]
    b820:	sub	w1, w1, #0x8
    b824:	str	w1, [x0, #5940]
    b828:	b	b868 <inflateCodesUsed@@ZLIB_1.2.9+0x1788>
    b82c:	ldrh	w3, [x0, #5936]
    b830:	ldr	x2, [x0, #16]
    b834:	ldr	x1, [x0, #40]
    b838:	add	x4, x1, #0x1
    b83c:	str	x4, [x0, #40]
    b840:	strb	w3, [x2, x1]
    b844:	ldrh	w1, [x0, #5936]
    b848:	lsr	w1, w1, #8
    b84c:	ldr	x3, [x0, #16]
    b850:	ldr	x2, [x0, #40]
    b854:	add	x4, x2, #0x1
    b858:	str	x4, [x0, #40]
    b85c:	strb	w1, [x3, x2]
    b860:	strh	wzr, [x0, #5936]
    b864:	str	wzr, [x0, #5940]
    b868:	ret
    b86c:	ldr	w1, [x0, #5940]
    b870:	cmp	w1, #0x8
    b874:	b.le	b8b8 <inflateCodesUsed@@ZLIB_1.2.9+0x17d8>
    b878:	ldrh	w3, [x0, #5936]
    b87c:	ldr	x2, [x0, #16]
    b880:	ldr	x1, [x0, #40]
    b884:	add	x4, x1, #0x1
    b888:	str	x4, [x0, #40]
    b88c:	strb	w3, [x2, x1]
    b890:	ldrh	w1, [x0, #5936]
    b894:	lsr	w1, w1, #8
    b898:	ldr	x3, [x0, #16]
    b89c:	ldr	x2, [x0, #40]
    b8a0:	add	x4, x2, #0x1
    b8a4:	str	x4, [x0, #40]
    b8a8:	strb	w1, [x3, x2]
    b8ac:	strh	wzr, [x0, #5936]
    b8b0:	str	wzr, [x0, #5940]
    b8b4:	ret
    b8b8:	cmp	w1, #0x0
    b8bc:	b.le	b8ac <inflateCodesUsed@@ZLIB_1.2.9+0x17cc>
    b8c0:	ldrh	w3, [x0, #5936]
    b8c4:	ldr	x2, [x0, #16]
    b8c8:	ldr	x1, [x0, #40]
    b8cc:	add	x4, x1, #0x1
    b8d0:	str	x4, [x0, #40]
    b8d4:	strb	w3, [x2, x1]
    b8d8:	b	b8ac <inflateCodesUsed@@ZLIB_1.2.9+0x17cc>
    b8dc:	stp	x29, x30, [sp, #-16]!
    b8e0:	mov	x29, sp
    b8e4:	add	x2, x0, #0xd4
    b8e8:	str	x2, [x0, #2904]
    b8ec:	adrp	x2, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    b8f0:	add	x2, x2, #0xd08
    b8f4:	str	x2, [x0, #2920]
    b8f8:	add	x3, x0, #0x9c8
    b8fc:	str	x3, [x0, #2928]
    b900:	add	x3, x2, #0x20
    b904:	str	x3, [x0, #2944]
    b908:	add	x3, x0, #0xabc
    b90c:	str	x3, [x0, #2952]
    b910:	add	x2, x2, #0x40
    b914:	str	x2, [x0, #2968]
    b918:	strh	wzr, [x0, #5936]
    b91c:	str	wzr, [x0, #5940]
    b920:	bl	a638 <inflateCodesUsed@@ZLIB_1.2.9+0x558>
    b924:	ldp	x29, x30, [sp], #16
    b928:	ret
    b92c:	stp	x29, x30, [sp, #-48]!
    b930:	mov	x29, sp
    b934:	stp	x19, x20, [sp, #16]
    b938:	str	x21, [sp, #32]
    b93c:	mov	x19, x0
    b940:	mov	x21, x1
    b944:	mov	x20, x2
    b948:	ldr	w0, [x0, #5940]
    b94c:	cmp	w0, #0xd
    b950:	b.le	ba58 <inflateCodesUsed@@ZLIB_1.2.9+0x1978>
    b954:	and	w3, w3, #0xffff
    b958:	lsl	w0, w3, w0
    b95c:	ldrh	w1, [x19, #5936]
    b960:	orr	w0, w0, w1
    b964:	sxth	w0, w0
    b968:	strh	w0, [x19, #5936]
    b96c:	ldr	x2, [x19, #16]
    b970:	ldr	x1, [x19, #40]
    b974:	add	x4, x1, #0x1
    b978:	str	x4, [x19, #40]
    b97c:	strb	w0, [x2, x1]
    b980:	ldrh	w0, [x19, #5936]
    b984:	lsr	w0, w0, #8
    b988:	ldr	x2, [x19, #16]
    b98c:	ldr	x1, [x19, #40]
    b990:	add	x4, x1, #0x1
    b994:	str	x4, [x19, #40]
    b998:	strb	w0, [x2, x1]
    b99c:	ldr	w0, [x19, #5940]
    b9a0:	mov	w1, #0x10                  	// #16
    b9a4:	sub	w1, w1, w0
    b9a8:	asr	w3, w3, w1
    b9ac:	strh	w3, [x19, #5936]
    b9b0:	sub	w0, w0, #0xd
    b9b4:	str	w0, [x19, #5940]
    b9b8:	mov	x0, x19
    b9bc:	bl	b86c <inflateCodesUsed@@ZLIB_1.2.9+0x178c>
    b9c0:	ldr	x2, [x19, #16]
    b9c4:	ldr	x1, [x19, #40]
    b9c8:	add	x0, x1, #0x1
    b9cc:	str	x0, [x19, #40]
    b9d0:	and	w0, w20, #0xff
    b9d4:	strb	w0, [x2, x1]
    b9d8:	ldr	x2, [x19, #16]
    b9dc:	ldr	x1, [x19, #40]
    b9e0:	add	x3, x1, #0x1
    b9e4:	str	x3, [x19, #40]
    b9e8:	ubfx	w3, w20, #8, #8
    b9ec:	strb	w3, [x2, x1]
    b9f0:	ldr	x2, [x19, #16]
    b9f4:	ldr	x1, [x19, #40]
    b9f8:	add	x3, x1, #0x1
    b9fc:	str	x3, [x19, #40]
    ba00:	mvn	w0, w0
    ba04:	strb	w0, [x2, x1]
    ba08:	ldr	x2, [x19, #16]
    ba0c:	ldr	x1, [x19, #40]
    ba10:	add	x0, x1, #0x1
    ba14:	str	x0, [x19, #40]
    ba18:	mvn	w0, w20
    ba1c:	ubfx	x0, x0, #8, #8
    ba20:	strb	w0, [x2, x1]
    ba24:	ldr	x3, [x19, #16]
    ba28:	ldr	x0, [x19, #40]
    ba2c:	mov	x2, x20
    ba30:	mov	x1, x21
    ba34:	add	x0, x3, x0
    ba38:	bl	23a0 <memcpy@plt>
    ba3c:	ldr	x2, [x19, #40]
    ba40:	add	x20, x2, x20
    ba44:	str	x20, [x19, #40]
    ba48:	ldp	x19, x20, [sp, #16]
    ba4c:	ldr	x21, [sp, #32]
    ba50:	ldp	x29, x30, [sp], #48
    ba54:	ret
    ba58:	and	w3, w3, #0xffff
    ba5c:	lsl	w3, w3, w0
    ba60:	ldrh	w1, [x19, #5936]
    ba64:	orr	w3, w3, w1
    ba68:	strh	w3, [x19, #5936]
    ba6c:	add	w0, w0, #0x3
    ba70:	str	w0, [x19, #5940]
    ba74:	b	b9b8 <inflateCodesUsed@@ZLIB_1.2.9+0x18d8>
    ba78:	stp	x29, x30, [sp, #-16]!
    ba7c:	mov	x29, sp
    ba80:	bl	b7e4 <inflateCodesUsed@@ZLIB_1.2.9+0x1704>
    ba84:	ldp	x29, x30, [sp], #16
    ba88:	ret
    ba8c:	stp	x29, x30, [sp, #-16]!
    ba90:	mov	x29, sp
    ba94:	ldr	w1, [x0, #5940]
    ba98:	cmp	w1, #0xd
    ba9c:	b.le	bb60 <inflateCodesUsed@@ZLIB_1.2.9+0x1a80>
    baa0:	mov	w2, #0x2                   	// #2
    baa4:	lsl	w1, w2, w1
    baa8:	ldrh	w3, [x0, #5936]
    baac:	orr	w1, w1, w3
    bab0:	sxth	w1, w1
    bab4:	strh	w1, [x0, #5936]
    bab8:	ldr	x4, [x0, #16]
    babc:	ldr	x3, [x0, #40]
    bac0:	add	x5, x3, #0x1
    bac4:	str	x5, [x0, #40]
    bac8:	strb	w1, [x4, x3]
    bacc:	ldrh	w1, [x0, #5936]
    bad0:	lsr	w1, w1, #8
    bad4:	ldr	x4, [x0, #16]
    bad8:	ldr	x3, [x0, #40]
    badc:	add	x5, x3, #0x1
    bae0:	str	x5, [x0, #40]
    bae4:	strb	w1, [x4, x3]
    bae8:	ldr	w1, [x0, #5940]
    baec:	mov	w3, #0x10                  	// #16
    baf0:	sub	w3, w3, w1
    baf4:	asr	w2, w2, w3
    baf8:	strh	w2, [x0, #5936]
    bafc:	sub	w1, w1, #0xd
    bb00:	str	w1, [x0, #5940]
    bb04:	ldr	w1, [x0, #5940]
    bb08:	cmp	w1, #0x9
    bb0c:	b.le	bb80 <inflateCodesUsed@@ZLIB_1.2.9+0x1aa0>
    bb10:	ldrh	w3, [x0, #5936]
    bb14:	ldr	x2, [x0, #16]
    bb18:	ldr	x1, [x0, #40]
    bb1c:	add	x4, x1, #0x1
    bb20:	str	x4, [x0, #40]
    bb24:	strb	w3, [x2, x1]
    bb28:	ldrh	w1, [x0, #5936]
    bb2c:	lsr	w1, w1, #8
    bb30:	ldr	x3, [x0, #16]
    bb34:	ldr	x2, [x0, #40]
    bb38:	add	x4, x2, #0x1
    bb3c:	str	x4, [x0, #40]
    bb40:	strb	w1, [x3, x2]
    bb44:	ldr	w1, [x0, #5940]
    bb48:	strh	wzr, [x0, #5936]
    bb4c:	sub	w1, w1, #0x9
    bb50:	str	w1, [x0, #5940]
    bb54:	bl	b7e4 <inflateCodesUsed@@ZLIB_1.2.9+0x1704>
    bb58:	ldp	x29, x30, [sp], #16
    bb5c:	ret
    bb60:	mov	w2, #0x2                   	// #2
    bb64:	lsl	w2, w2, w1
    bb68:	ldrh	w3, [x0, #5936]
    bb6c:	orr	w2, w2, w3
    bb70:	strh	w2, [x0, #5936]
    bb74:	add	w1, w1, #0x3
    bb78:	str	w1, [x0, #5940]
    bb7c:	b	bb04 <inflateCodesUsed@@ZLIB_1.2.9+0x1a24>
    bb80:	add	w1, w1, #0x7
    bb84:	str	w1, [x0, #5940]
    bb88:	b	bb54 <inflateCodesUsed@@ZLIB_1.2.9+0x1a74>
    bb8c:	stp	x29, x30, [sp, #-64]!
    bb90:	mov	x29, sp
    bb94:	stp	x19, x20, [sp, #16]
    bb98:	stp	x23, x24, [sp, #48]
    bb9c:	mov	x19, x0
    bba0:	mov	x24, x1
    bba4:	mov	x23, x2
    bba8:	mov	w20, w3
    bbac:	ldr	w0, [x0, #196]
    bbb0:	cmp	w0, #0x0
    bbb4:	b.le	bf38 <inflateCodesUsed@@ZLIB_1.2.9+0x1e58>
    bbb8:	stp	x21, x22, [sp, #32]
    bbbc:	ldr	x3, [x19]
    bbc0:	ldr	w0, [x3, #88]
    bbc4:	cmp	w0, #0x2
    bbc8:	b.eq	be9c <inflateCodesUsed@@ZLIB_1.2.9+0x1dbc>  // b.none
    bbcc:	add	x1, x19, #0xb58
    bbd0:	mov	x0, x19
    bbd4:	bl	b2e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1208>
    bbd8:	add	x1, x19, #0xb70
    bbdc:	mov	x0, x19
    bbe0:	bl	b2e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1208>
    bbe4:	add	x21, x19, #0xd4
    bbe8:	ldr	w2, [x19, #2912]
    bbec:	mov	x1, x21
    bbf0:	mov	x0, x19
    bbf4:	bl	a77c <inflateCodesUsed@@ZLIB_1.2.9+0x69c>
    bbf8:	add	x22, x19, #0x9c8
    bbfc:	ldr	w2, [x19, #2936]
    bc00:	mov	x1, x22
    bc04:	mov	x0, x19
    bc08:	bl	a77c <inflateCodesUsed@@ZLIB_1.2.9+0x69c>
    bc0c:	add	x1, x19, #0xb88
    bc10:	mov	x0, x19
    bc14:	bl	b2e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1208>
    bc18:	adrp	x0, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    bc1c:	add	x0, x0, #0xf20
    bc20:	add	x0, x0, #0x4f2
    bc24:	mov	w1, #0x12                  	// #18
    bc28:	ldrb	w2, [x0]
    bc2c:	add	x2, x19, x2, lsl #2
    bc30:	ldrh	w2, [x2, #2750]
    bc34:	cbnz	w2, bc48 <inflateCodesUsed@@ZLIB_1.2.9+0x1b68>
    bc38:	sub	w1, w1, #0x1
    bc3c:	sub	x0, x0, #0x1
    bc40:	cmp	w1, #0x2
    bc44:	b.ne	bc28 <inflateCodesUsed@@ZLIB_1.2.9+0x1b48>  // b.any
    bc48:	sxtw	x0, w1
    bc4c:	add	x0, x0, #0x1
    bc50:	add	x0, x0, x0, lsl #1
    bc54:	ldr	x2, [x19, #5912]
    bc58:	add	x2, x2, #0xe
    bc5c:	add	x0, x0, x2
    bc60:	str	x0, [x19, #5912]
    bc64:	add	x0, x0, #0xa
    bc68:	lsr	x0, x0, #3
    bc6c:	ldr	x2, [x19, #5920]
    bc70:	add	x2, x2, #0xa
    bc74:	lsr	x2, x2, #3
    bc78:	add	x3, x23, #0x4
    bc7c:	cmp	x0, x2
    bc80:	csel	x4, x0, x2, ls  // ls = plast
    bc84:	cmp	x24, #0x0
    bc88:	ccmp	x3, x4, #0x2, ne  // ne = any
    bc8c:	b.ls	bf1c <inflateCodesUsed@@ZLIB_1.2.9+0x1e3c>  // b.plast
    bc90:	ldr	w3, [x19, #200]
    bc94:	cmp	w3, #0x4
    bc98:	ccmp	x0, x2, #0x2, ne  // ne = any
    bc9c:	b.cs	bff4 <inflateCodesUsed@@ZLIB_1.2.9+0x1f14>  // b.hs, b.nlast
    bca0:	ldr	w0, [x19, #5940]
    bca4:	cmp	w0, #0xd
    bca8:	b.le	c020 <inflateCodesUsed@@ZLIB_1.2.9+0x1f40>
    bcac:	add	w2, w20, #0x4
    bcb0:	and	w2, w2, #0xffff
    bcb4:	lsl	w0, w2, w0
    bcb8:	ldrh	w3, [x19, #5936]
    bcbc:	orr	w0, w0, w3
    bcc0:	sxth	w0, w0
    bcc4:	strh	w0, [x19, #5936]
    bcc8:	ldr	x4, [x19, #16]
    bccc:	ldr	x3, [x19, #40]
    bcd0:	add	x5, x3, #0x1
    bcd4:	str	x5, [x19, #40]
    bcd8:	strb	w0, [x4, x3]
    bcdc:	ldrh	w0, [x19, #5936]
    bce0:	lsr	w0, w0, #8
    bce4:	ldr	x4, [x19, #16]
    bce8:	ldr	x3, [x19, #40]
    bcec:	add	x5, x3, #0x1
    bcf0:	str	x5, [x19, #40]
    bcf4:	strb	w0, [x4, x3]
    bcf8:	ldr	w0, [x19, #5940]
    bcfc:	mov	w3, #0x10                  	// #16
    bd00:	sub	w3, w3, w0
    bd04:	asr	w2, w2, w3
    bd08:	strh	w2, [x19, #5936]
    bd0c:	sub	w0, w0, #0xd
    bd10:	str	w0, [x19, #5940]
    bd14:	ldr	w2, [x19, #2912]
    bd18:	ldr	w23, [x19, #2936]
    bd1c:	add	w4, w1, #0x1
    bd20:	ldr	w0, [x19, #5940]
    bd24:	cmp	w0, #0xb
    bd28:	b.le	c044 <inflateCodesUsed@@ZLIB_1.2.9+0x1f64>
    bd2c:	sub	w3, w2, #0x100
    bd30:	and	w3, w3, #0xffff
    bd34:	lsl	w0, w3, w0
    bd38:	ldrh	w5, [x19, #5936]
    bd3c:	orr	w0, w0, w5
    bd40:	sxth	w0, w0
    bd44:	strh	w0, [x19, #5936]
    bd48:	ldr	x6, [x19, #16]
    bd4c:	ldr	x5, [x19, #40]
    bd50:	add	x7, x5, #0x1
    bd54:	str	x7, [x19, #40]
    bd58:	strb	w0, [x6, x5]
    bd5c:	ldrh	w0, [x19, #5936]
    bd60:	lsr	w0, w0, #8
    bd64:	ldr	x6, [x19, #16]
    bd68:	ldr	x5, [x19, #40]
    bd6c:	add	x7, x5, #0x1
    bd70:	str	x7, [x19, #40]
    bd74:	strb	w0, [x6, x5]
    bd78:	ldr	w0, [x19, #5940]
    bd7c:	mov	w5, #0x10                  	// #16
    bd80:	sub	w5, w5, w0
    bd84:	asr	w3, w3, w5
    bd88:	strh	w3, [x19, #5936]
    bd8c:	sub	w0, w0, #0xb
    bd90:	str	w0, [x19, #5940]
    bd94:	ldr	w0, [x19, #5940]
    bd98:	cmp	w0, #0xb
    bd9c:	b.le	c068 <inflateCodesUsed@@ZLIB_1.2.9+0x1f88>
    bda0:	and	w3, w23, #0xffff
    bda4:	lsl	w0, w3, w0
    bda8:	ldrh	w5, [x19, #5936]
    bdac:	orr	w0, w0, w5
    bdb0:	sxth	w0, w0
    bdb4:	strh	w0, [x19, #5936]
    bdb8:	ldr	x6, [x19, #16]
    bdbc:	ldr	x5, [x19, #40]
    bdc0:	add	x7, x5, #0x1
    bdc4:	str	x7, [x19, #40]
    bdc8:	strb	w0, [x6, x5]
    bdcc:	ldrh	w0, [x19, #5936]
    bdd0:	lsr	w0, w0, #8
    bdd4:	ldr	x6, [x19, #16]
    bdd8:	ldr	x5, [x19, #40]
    bddc:	add	x7, x5, #0x1
    bde0:	str	x7, [x19, #40]
    bde4:	strb	w0, [x6, x5]
    bde8:	ldr	w0, [x19, #5940]
    bdec:	mov	w5, #0x10                  	// #16
    bdf0:	sub	w5, w5, w0
    bdf4:	asr	w3, w3, w5
    bdf8:	strh	w3, [x19, #5936]
    bdfc:	sub	w0, w0, #0xb
    be00:	str	w0, [x19, #5940]
    be04:	ldr	w0, [x19, #5940]
    be08:	cmp	w0, #0xc
    be0c:	b.le	c088 <inflateCodesUsed@@ZLIB_1.2.9+0x1fa8>
    be10:	sub	w3, w1, #0x3
    be14:	and	w3, w3, #0xffff
    be18:	lsl	w0, w3, w0
    be1c:	ldrh	w5, [x19, #5936]
    be20:	orr	w0, w0, w5
    be24:	sxth	w0, w0
    be28:	strh	w0, [x19, #5936]
    be2c:	ldr	x6, [x19, #16]
    be30:	ldr	x5, [x19, #40]
    be34:	add	x7, x5, #0x1
    be38:	str	x7, [x19, #40]
    be3c:	strb	w0, [x6, x5]
    be40:	ldrh	w0, [x19, #5936]
    be44:	lsr	w0, w0, #8
    be48:	ldr	x6, [x19, #16]
    be4c:	ldr	x5, [x19, #40]
    be50:	add	x7, x5, #0x1
    be54:	str	x7, [x19, #40]
    be58:	strb	w0, [x6, x5]
    be5c:	ldr	w0, [x19, #5940]
    be60:	mov	w5, #0x10                  	// #16
    be64:	sub	w5, w5, w0
    be68:	asr	w3, w3, w5
    be6c:	strh	w3, [x19, #5936]
    be70:	sub	w0, w0, #0xc
    be74:	str	w0, [x19, #5940]
    be78:	cmp	w4, #0x0
    be7c:	b.le	c154 <inflateCodesUsed@@ZLIB_1.2.9+0x2074>
    be80:	adrp	x5, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    be84:	add	x5, x5, #0xf20
    be88:	add	x3, x5, #0x4e0
    be8c:	add	x5, x5, #0x4e1
    be90:	add	x5, x5, w1, uxtw
    be94:	mov	w6, #0x10                  	// #16
    be98:	b	c120 <inflateCodesUsed@@ZLIB_1.2.9+0x2040>
    be9c:	add	x0, x19, #0xd4
    bea0:	add	x4, x19, #0x154
    bea4:	mov	x1, #0xc07f                	// #49279
    bea8:	movk	x1, #0xf3ff, lsl #16
    beac:	b	bec0 <inflateCodesUsed@@ZLIB_1.2.9+0x1de0>
    beb0:	lsr	x1, x1, #1
    beb4:	add	x0, x0, #0x4
    beb8:	cmp	x0, x4
    bebc:	b.eq	bed8 <inflateCodesUsed@@ZLIB_1.2.9+0x1df8>  // b.none
    bec0:	tbz	w1, #0, beb0 <inflateCodesUsed@@ZLIB_1.2.9+0x1dd0>
    bec4:	ldrh	w2, [x0]
    bec8:	cbz	w2, beb0 <inflateCodesUsed@@ZLIB_1.2.9+0x1dd0>
    becc:	mov	w0, #0x0                   	// #0
    bed0:	str	w0, [x3, #88]
    bed4:	b	bbcc <inflateCodesUsed@@ZLIB_1.2.9+0x1aec>
    bed8:	ldr	x1, [x19, #248]
    bedc:	mov	w0, #0x1                   	// #1
    bee0:	tst	x1, #0xffff0000ffff
    bee4:	b.ne	bed0 <inflateCodesUsed@@ZLIB_1.2.9+0x1df0>  // b.any
    bee8:	ldrh	w1, [x19, #264]
    beec:	cbnz	w1, bed0 <inflateCodesUsed@@ZLIB_1.2.9+0x1df0>
    bef0:	add	x0, x19, #0x154
    bef4:	add	x2, x19, #0x4d4
    bef8:	ldrh	w1, [x0]
    befc:	cbnz	w1, bf14 <inflateCodesUsed@@ZLIB_1.2.9+0x1e34>
    bf00:	add	x0, x0, #0x4
    bf04:	cmp	x0, x2
    bf08:	b.ne	bef8 <inflateCodesUsed@@ZLIB_1.2.9+0x1e18>  // b.any
    bf0c:	mov	w0, #0x0                   	// #0
    bf10:	b	bed0 <inflateCodesUsed@@ZLIB_1.2.9+0x1df0>
    bf14:	mov	w0, #0x1                   	// #1
    bf18:	b	bed0 <inflateCodesUsed@@ZLIB_1.2.9+0x1df0>
    bf1c:	ldp	x21, x22, [sp, #32]
    bf20:	mov	w3, w20
    bf24:	mov	x2, x23
    bf28:	mov	x1, x24
    bf2c:	mov	x0, x19
    bf30:	bl	b92c <inflateCodesUsed@@ZLIB_1.2.9+0x184c>
    bf34:	b	bfd8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ef8>
    bf38:	add	x1, x2, #0x5
    bf3c:	add	x0, x2, #0x4
    bf40:	cmp	x24, #0x0
    bf44:	ccmp	x1, x0, #0x0, ne  // ne = any
    bf48:	b.cs	bf20 <inflateCodesUsed@@ZLIB_1.2.9+0x1e40>  // b.hs, b.nlast
    bf4c:	ldr	w0, [x19, #5940]
    bf50:	cmp	w0, #0xd
    bf54:	b.le	bffc <inflateCodesUsed@@ZLIB_1.2.9+0x1f1c>
    bf58:	add	w1, w20, #0x2
    bf5c:	and	w1, w1, #0xffff
    bf60:	lsl	w0, w1, w0
    bf64:	ldrh	w2, [x19, #5936]
    bf68:	orr	w0, w0, w2
    bf6c:	sxth	w0, w0
    bf70:	strh	w0, [x19, #5936]
    bf74:	ldr	x3, [x19, #16]
    bf78:	ldr	x2, [x19, #40]
    bf7c:	add	x4, x2, #0x1
    bf80:	str	x4, [x19, #40]
    bf84:	strb	w0, [x3, x2]
    bf88:	ldrh	w0, [x19, #5936]
    bf8c:	lsr	w0, w0, #8
    bf90:	ldr	x3, [x19, #16]
    bf94:	ldr	x2, [x19, #40]
    bf98:	add	x4, x2, #0x1
    bf9c:	str	x4, [x19, #40]
    bfa0:	strb	w0, [x3, x2]
    bfa4:	ldr	w0, [x19, #5940]
    bfa8:	mov	w2, #0x10                  	// #16
    bfac:	sub	w2, w2, w0
    bfb0:	asr	w1, w1, w2
    bfb4:	strh	w1, [x19, #5936]
    bfb8:	sub	w0, w0, #0xd
    bfbc:	str	w0, [x19, #5940]
    bfc0:	adrp	x1, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    bfc4:	add	x1, x1, #0xf20
    bfc8:	add	x2, x1, #0x4f8
    bfcc:	add	x1, x1, #0x570
    bfd0:	mov	x0, x19
    bfd4:	bl	ae7c <inflateCodesUsed@@ZLIB_1.2.9+0xd9c>
    bfd8:	mov	x0, x19
    bfdc:	bl	a638 <inflateCodesUsed@@ZLIB_1.2.9+0x558>
    bfe0:	cbnz	w20, c188 <inflateCodesUsed@@ZLIB_1.2.9+0x20a8>
    bfe4:	ldp	x19, x20, [sp, #16]
    bfe8:	ldp	x23, x24, [sp, #48]
    bfec:	ldp	x29, x30, [sp], #64
    bff0:	ret
    bff4:	ldp	x21, x22, [sp, #32]
    bff8:	b	bf4c <inflateCodesUsed@@ZLIB_1.2.9+0x1e6c>
    bffc:	add	w1, w20, #0x2
    c000:	and	w1, w1, #0xffff
    c004:	lsl	w1, w1, w0
    c008:	ldrh	w2, [x19, #5936]
    c00c:	orr	w1, w1, w2
    c010:	strh	w1, [x19, #5936]
    c014:	add	w0, w0, #0x3
    c018:	str	w0, [x19, #5940]
    c01c:	b	bfc0 <inflateCodesUsed@@ZLIB_1.2.9+0x1ee0>
    c020:	add	w2, w20, #0x4
    c024:	and	w2, w2, #0xffff
    c028:	lsl	w2, w2, w0
    c02c:	ldrh	w3, [x19, #5936]
    c030:	orr	w2, w2, w3
    c034:	strh	w2, [x19, #5936]
    c038:	add	w0, w0, #0x3
    c03c:	str	w0, [x19, #5940]
    c040:	b	bd14 <inflateCodesUsed@@ZLIB_1.2.9+0x1c34>
    c044:	sub	w3, w2, #0x100
    c048:	and	w3, w3, #0xffff
    c04c:	lsl	w3, w3, w0
    c050:	ldrh	w5, [x19, #5936]
    c054:	orr	w3, w3, w5
    c058:	strh	w3, [x19, #5936]
    c05c:	add	w0, w0, #0x5
    c060:	str	w0, [x19, #5940]
    c064:	b	bd94 <inflateCodesUsed@@ZLIB_1.2.9+0x1cb4>
    c068:	and	w3, w23, #0xffff
    c06c:	lsl	w3, w3, w0
    c070:	ldrh	w5, [x19, #5936]
    c074:	orr	w3, w3, w5
    c078:	strh	w3, [x19, #5936]
    c07c:	add	w0, w0, #0x5
    c080:	str	w0, [x19, #5940]
    c084:	b	be04 <inflateCodesUsed@@ZLIB_1.2.9+0x1d24>
    c088:	sub	w3, w4, #0x4
    c08c:	and	w3, w3, #0xffff
    c090:	lsl	w3, w3, w0
    c094:	ldrh	w5, [x19, #5936]
    c098:	orr	w3, w3, w5
    c09c:	strh	w3, [x19, #5936]
    c0a0:	add	w0, w0, #0x4
    c0a4:	str	w0, [x19, #5940]
    c0a8:	b	be78 <inflateCodesUsed@@ZLIB_1.2.9+0x1d98>
    c0ac:	ldrb	w4, [x3]
    c0b0:	add	x4, x19, x4, lsl #2
    c0b4:	ldrh	w1, [x4, #2750]
    c0b8:	lsl	w0, w1, w0
    c0bc:	ldrh	w4, [x19, #5936]
    c0c0:	orr	w0, w0, w4
    c0c4:	sxth	w0, w0
    c0c8:	strh	w0, [x19, #5936]
    c0cc:	ldr	x7, [x19, #16]
    c0d0:	ldr	x4, [x19, #40]
    c0d4:	add	x8, x4, #0x1
    c0d8:	str	x8, [x19, #40]
    c0dc:	strb	w0, [x7, x4]
    c0e0:	ldrh	w0, [x19, #5936]
    c0e4:	lsr	w0, w0, #8
    c0e8:	ldr	x7, [x19, #16]
    c0ec:	ldr	x4, [x19, #40]
    c0f0:	add	x8, x4, #0x1
    c0f4:	str	x8, [x19, #40]
    c0f8:	strb	w0, [x7, x4]
    c0fc:	ldr	w0, [x19, #5940]
    c100:	sub	w4, w6, w0
    c104:	asr	w1, w1, w4
    c108:	strh	w1, [x19, #5936]
    c10c:	sub	w0, w0, #0xd
    c110:	str	w0, [x19, #5940]
    c114:	add	x3, x3, #0x1
    c118:	cmp	x3, x5
    c11c:	b.eq	c154 <inflateCodesUsed@@ZLIB_1.2.9+0x2074>  // b.none
    c120:	ldr	w0, [x19, #5940]
    c124:	cmp	w0, #0xd
    c128:	b.gt	c0ac <inflateCodesUsed@@ZLIB_1.2.9+0x1fcc>
    c12c:	ldrb	w4, [x3]
    c130:	add	x4, x19, x4, lsl #2
    c134:	ldrh	w1, [x4, #2750]
    c138:	lsl	w1, w1, w0
    c13c:	ldrh	w4, [x19, #5936]
    c140:	orr	w1, w1, w4
    c144:	strh	w1, [x19, #5936]
    c148:	add	w0, w0, #0x3
    c14c:	str	w0, [x19, #5940]
    c150:	b	c114 <inflateCodesUsed@@ZLIB_1.2.9+0x2034>
    c154:	mov	x1, x21
    c158:	mov	x0, x19
    c15c:	bl	a898 <inflateCodesUsed@@ZLIB_1.2.9+0x7b8>
    c160:	mov	w2, w23
    c164:	mov	x1, x22
    c168:	mov	x0, x19
    c16c:	bl	a898 <inflateCodesUsed@@ZLIB_1.2.9+0x7b8>
    c170:	mov	x2, x22
    c174:	mov	x1, x21
    c178:	mov	x0, x19
    c17c:	bl	ae7c <inflateCodesUsed@@ZLIB_1.2.9+0xd9c>
    c180:	ldp	x21, x22, [sp, #32]
    c184:	b	bfd8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ef8>
    c188:	mov	x0, x19
    c18c:	bl	b86c <inflateCodesUsed@@ZLIB_1.2.9+0x178c>
    c190:	b	bfe4 <inflateCodesUsed@@ZLIB_1.2.9+0x1f04>
    c194:	ldr	w4, [x0, #5900]
    c198:	ldr	x3, [x0, #5904]
    c19c:	strh	w1, [x3, x4, lsl #1]
    c1a0:	ldr	x4, [x0, #5888]
    c1a4:	ldr	w3, [x0, #5900]
    c1a8:	add	w5, w3, #0x1
    c1ac:	str	w5, [x0, #5900]
    c1b0:	strb	w2, [x4, w3, uxtw]
    c1b4:	cbnz	w1, c1e0 <inflateCodesUsed@@ZLIB_1.2.9+0x2100>
    c1b8:	add	x2, x0, w2, uxtw #2
    c1bc:	ldrh	w1, [x2, #212]
    c1c0:	add	w1, w1, #0x1
    c1c4:	strh	w1, [x2, #212]
    c1c8:	ldr	w1, [x0, #5896]
    c1cc:	sub	w1, w1, #0x1
    c1d0:	ldr	w0, [x0, #5900]
    c1d4:	cmp	w1, w0
    c1d8:	cset	w0, eq  // eq = none
    c1dc:	ret
    c1e0:	ldr	w3, [x0, #5928]
    c1e4:	add	w3, w3, #0x1
    c1e8:	str	w3, [x0, #5928]
    c1ec:	sub	w1, w1, #0x1
    c1f0:	adrp	x3, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    c1f4:	add	x3, x3, #0xf20
    c1f8:	ldrb	w2, [x3, w2, uxtw]
    c1fc:	add	x2, x0, x2, lsl #2
    c200:	ldrh	w3, [x2, #1240]
    c204:	add	w3, w3, #0x1
    c208:	strh	w3, [x2, #1240]
    c20c:	cmp	w1, #0xff
    c210:	b.hi	c238 <inflateCodesUsed@@ZLIB_1.2.9+0x2158>  // b.pmore
    c214:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    c218:	add	x2, x2, #0xf20
    c21c:	add	x2, x2, #0x1f0
    c220:	ldrb	w1, [x2, w1, uxtw]
    c224:	add	x1, x0, w1, sxtw #2
    c228:	ldrh	w2, [x1, #2504]
    c22c:	add	w2, w2, #0x1
    c230:	strh	w2, [x1, #2504]
    c234:	b	c1c8 <inflateCodesUsed@@ZLIB_1.2.9+0x20e8>
    c238:	adrp	x2, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x26f0>
    c23c:	add	x2, x2, #0xf20
    c240:	lsr	w1, w1, #7
    c244:	add	w1, w1, #0x100
    c248:	add	x2, x2, #0x1f0
    c24c:	ldrb	w1, [x2, w1, uxtw]
    c250:	b	c224 <inflateCodesUsed@@ZLIB_1.2.9+0x2144>

000000000000c254 <zlibVersion@@Base>:
    c254:	adrp	x0, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    c258:	add	x0, x0, #0x960
    c25c:	ret

000000000000c260 <zlibCompileFlags@@ZLIB_1.2.0.2>:
    c260:	mov	x0, #0xa9                  	// #169
    c264:	ret

000000000000c268 <zError@@Base>:
    c268:	mov	w1, #0x2                   	// #2
    c26c:	sub	w0, w1, w0
    c270:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x156f0>
    c274:	ldr	x1, [x1, #4056]
    c278:	ldr	x0, [x1, w0, sxtw #3]
    c27c:	ret
    c280:	stp	x29, x30, [sp, #-16]!
    c284:	mov	x29, sp
    c288:	mul	w0, w1, w2
    c28c:	bl	2460 <malloc@plt>
    c290:	ldp	x29, x30, [sp], #16
    c294:	ret
    c298:	stp	x29, x30, [sp, #-16]!
    c29c:	mov	x29, sp
    c2a0:	mov	x0, x1
    c2a4:	bl	2570 <free@plt>
    c2a8:	ldp	x29, x30, [sp], #16
    c2ac:	ret

000000000000c2b0 <compress2@@Base>:
    c2b0:	stp	x29, x30, [sp, #-192]!
    c2b4:	mov	x29, sp
    c2b8:	stp	x19, x20, [sp, #16]
    c2bc:	stp	x21, x22, [sp, #32]
    c2c0:	stp	x23, x24, [sp, #48]
    c2c4:	stp	x25, x26, [sp, #64]
    c2c8:	mov	x22, x0
    c2cc:	mov	x26, x1
    c2d0:	mov	x19, x2
    c2d4:	mov	x20, x3
    c2d8:	mov	w1, w4
    c2dc:	ldr	x21, [x26]
    c2e0:	str	xzr, [x26]
    c2e4:	str	xzr, [sp, #144]
    c2e8:	str	xzr, [sp, #152]
    c2ec:	str	xzr, [sp, #160]
    c2f0:	mov	w3, #0x70                  	// #112
    c2f4:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    c2f8:	add	x2, x2, #0x960
    c2fc:	add	x0, sp, #0x50
    c300:	bl	24f0 <deflateInit_@plt>
    c304:	mov	w23, w0
    c308:	cbnz	w0, c390 <compress2@@Base+0xe0>
    c30c:	str	x22, [sp, #104]
    c310:	str	wzr, [sp, #112]
    c314:	str	x19, [sp, #80]
    c318:	str	wzr, [sp, #88]
    c31c:	mov	x22, #0xffffffff            	// #4294967295
    c320:	mov	w25, #0x4                   	// #4
    c324:	add	x24, sp, #0x50
    c328:	b	c354 <compress2@@Base+0xa4>
    c32c:	cmp	x20, x22
    c330:	csel	x0, x20, x22, ls  // ls = plast
    c334:	str	w0, [sp, #88]
    c338:	sub	x20, x20, x0
    c33c:	cmp	x20, #0x0
    c340:	csel	w1, w23, w25, ne  // ne = any
    c344:	mov	x0, x24
    c348:	bl	2490 <deflate@plt>
    c34c:	mov	w19, w0
    c350:	cbnz	w0, c378 <compress2@@Base+0xc8>
    c354:	ldr	w0, [sp, #112]
    c358:	cbnz	w0, c36c <compress2@@Base+0xbc>
    c35c:	cmp	x21, x22
    c360:	csel	x0, x21, x22, ls  // ls = plast
    c364:	str	w0, [sp, #112]
    c368:	sub	x21, x21, x0
    c36c:	ldr	w0, [sp, #88]
    c370:	cbnz	w0, c33c <compress2@@Base+0x8c>
    c374:	b	c32c <compress2@@Base+0x7c>
    c378:	ldr	x0, [sp, #120]
    c37c:	str	x0, [x26]
    c380:	add	x0, sp, #0x50
    c384:	bl	2590 <deflateEnd@plt>
    c388:	cmp	w19, #0x1
    c38c:	csel	w23, w23, w19, eq  // eq = none
    c390:	mov	w0, w23
    c394:	ldp	x19, x20, [sp, #16]
    c398:	ldp	x21, x22, [sp, #32]
    c39c:	ldp	x23, x24, [sp, #48]
    c3a0:	ldp	x25, x26, [sp, #64]
    c3a4:	ldp	x29, x30, [sp], #192
    c3a8:	ret

000000000000c3ac <compress@@Base>:
    c3ac:	stp	x29, x30, [sp, #-16]!
    c3b0:	mov	x29, sp
    c3b4:	mov	w4, #0xffffffff            	// #-1
    c3b8:	bl	25d0 <compress2@plt>
    c3bc:	ldp	x29, x30, [sp], #16
    c3c0:	ret

000000000000c3c4 <compressBound@@ZLIB_1.2.0>:
    c3c4:	lsr	x1, x0, #14
    c3c8:	add	x1, x1, x0, lsr #12
    c3cc:	add	x2, x0, #0xd
    c3d0:	add	x1, x1, x2
    c3d4:	add	x0, x1, x0, lsr #25
    c3d8:	ret

000000000000c3dc <uncompress2@@ZLIB_1.2.9>:
    c3dc:	stp	x29, x30, [sp, #-224]!
    c3e0:	mov	x29, sp
    c3e4:	stp	x19, x20, [sp, #16]
    c3e8:	stp	x21, x22, [sp, #32]
    c3ec:	stp	x23, x24, [sp, #48]
    c3f0:	stp	x25, x26, [sp, #64]
    c3f4:	str	x27, [sp, #80]
    c3f8:	mov	x26, x1
    c3fc:	mov	x25, x3
    c400:	ldr	x21, [x3]
    c404:	ldr	x20, [x1]
    c408:	cbz	x20, c458 <uncompress2@@ZLIB_1.2.9+0x7c>
    c40c:	mov	x27, x0
    c410:	str	xzr, [x1]
    c414:	str	x2, [sp, #112]
    c418:	str	wzr, [sp, #120]
    c41c:	str	xzr, [sp, #176]
    c420:	str	xzr, [sp, #184]
    c424:	str	xzr, [sp, #192]
    c428:	mov	w2, #0x70                  	// #112
    c42c:	adrp	x1, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    c430:	add	x1, x1, #0x960
    c434:	add	x0, sp, #0x70
    c438:	bl	25c0 <inflateInit_@plt>
    c43c:	mov	w24, w0
    c440:	cbnz	w0, c4f8 <uncompress2@@ZLIB_1.2.9+0x11c>
    c444:	str	x27, [sp, #136]
    c448:	str	wzr, [sp, #144]
    c44c:	mov	x22, #0xffffffff            	// #4294967295
    c450:	add	x23, sp, #0x70
    c454:	b	c488 <uncompress2@@ZLIB_1.2.9+0xac>
    c458:	mov	x20, #0x1                   	// #1
    c45c:	add	x27, sp, #0x68
    c460:	b	c414 <uncompress2@@ZLIB_1.2.9+0x38>
    c464:	cmp	x21, x22
    c468:	csel	x0, x21, x22, ls  // ls = plast
    c46c:	str	w0, [sp, #120]
    c470:	sub	x21, x21, x0
    c474:	mov	w1, #0x0                   	// #0
    c478:	mov	x0, x23
    c47c:	bl	23f0 <inflate@plt>
    c480:	mov	w19, w0
    c484:	cbnz	w0, c4ac <uncompress2@@ZLIB_1.2.9+0xd0>
    c488:	ldr	w0, [sp, #144]
    c48c:	cbnz	w0, c4a0 <uncompress2@@ZLIB_1.2.9+0xc4>
    c490:	cmp	x20, x22
    c494:	csel	x0, x20, x22, ls  // ls = plast
    c498:	str	w0, [sp, #144]
    c49c:	sub	x20, x20, x0
    c4a0:	ldr	w0, [sp, #120]
    c4a4:	cbnz	w0, c474 <uncompress2@@ZLIB_1.2.9+0x98>
    c4a8:	b	c464 <uncompress2@@ZLIB_1.2.9+0x88>
    c4ac:	ldr	w1, [sp, #120]
    c4b0:	ldr	x0, [x25]
    c4b4:	sub	x0, x0, x1
    c4b8:	sub	x21, x0, x21
    c4bc:	str	x21, [x25]
    c4c0:	add	x0, sp, #0x68
    c4c4:	cmp	x27, x0
    c4c8:	b.eq	c518 <uncompress2@@ZLIB_1.2.9+0x13c>  // b.none
    c4cc:	ldr	x0, [sp, #152]
    c4d0:	str	x0, [x26]
    c4d4:	add	x0, sp, #0x70
    c4d8:	bl	2550 <inflateEnd@plt>
    c4dc:	cmp	w19, #0x1
    c4e0:	b.eq	c4f8 <uncompress2@@ZLIB_1.2.9+0x11c>  // b.none
    c4e4:	cmp	w19, #0x2
    c4e8:	b.eq	c54c <uncompress2@@ZLIB_1.2.9+0x170>  // b.none
    c4ec:	mov	w24, w19
    c4f0:	cmn	w19, #0x5
    c4f4:	b.eq	c538 <uncompress2@@ZLIB_1.2.9+0x15c>  // b.none
    c4f8:	mov	w0, w24
    c4fc:	ldp	x19, x20, [sp, #16]
    c500:	ldp	x21, x22, [sp, #32]
    c504:	ldp	x23, x24, [sp, #48]
    c508:	ldp	x25, x26, [sp, #64]
    c50c:	ldr	x27, [sp, #80]
    c510:	ldp	x29, x30, [sp], #224
    c514:	ret
    c518:	ldr	x0, [sp, #152]
    c51c:	cmp	x0, #0x0
    c520:	ccmn	w19, #0x5, #0x0, ne  // ne = any
    c524:	b.ne	c4d4 <uncompress2@@ZLIB_1.2.9+0xf8>  // b.any
    c528:	add	x0, sp, #0x70
    c52c:	bl	2550 <inflateEnd@plt>
    c530:	mov	w24, #0xfffffffd            	// #-3
    c534:	b	c4f8 <uncompress2@@ZLIB_1.2.9+0x11c>
    c538:	ldr	w0, [sp, #144]
    c53c:	cmn	x0, x20
    c540:	mov	w24, #0xfffffffd            	// #-3
    c544:	csel	w24, w19, w24, eq  // eq = none
    c548:	b	c4f8 <uncompress2@@ZLIB_1.2.9+0x11c>
    c54c:	mov	w24, #0xfffffffd            	// #-3
    c550:	b	c4f8 <uncompress2@@ZLIB_1.2.9+0x11c>

000000000000c554 <uncompress@@Base>:
    c554:	stp	x29, x30, [sp, #-32]!
    c558:	mov	x29, sp
    c55c:	str	x3, [sp, #24]
    c560:	add	x3, sp, #0x18
    c564:	bl	2540 <uncompress2@plt>
    c568:	ldp	x29, x30, [sp], #32
    c56c:	ret

000000000000c570 <gzclose@@Base>:
    c570:	cbz	x0, c5a0 <gzclose@@Base+0x30>
    c574:	stp	x29, x30, [sp, #-16]!
    c578:	mov	x29, sp
    c57c:	ldr	w2, [x0, #24]
    c580:	mov	w1, #0x1c4f                	// #7247
    c584:	cmp	w2, w1
    c588:	b.eq	c598 <gzclose@@Base+0x28>  // b.none
    c58c:	bl	2580 <gzclose_w@plt>
    c590:	ldp	x29, x30, [sp], #16
    c594:	ret
    c598:	bl	2400 <gzclose_r@plt>
    c59c:	b	c590 <gzclose@@Base+0x20>
    c5a0:	mov	w0, #0xfffffffe            	// #-2
    c5a4:	ret

000000000000c5a8 <gzbuffer@@ZLIB_1.2.3.5>:
    c5a8:	cbz	x0, c5ec <gzbuffer@@ZLIB_1.2.3.5+0x44>
    c5ac:	ldr	w2, [x0, #24]
    c5b0:	mov	w3, #0x1c4f                	// #7247
    c5b4:	cmp	w2, w3
    c5b8:	mov	w3, #0x79b1                	// #31153
    c5bc:	ccmp	w2, w3, #0x4, ne  // ne = any
    c5c0:	b.ne	c5f4 <gzbuffer@@ZLIB_1.2.3.5+0x4c>  // b.any
    c5c4:	ldr	w2, [x0, #40]
    c5c8:	cbnz	w2, c5fc <gzbuffer@@ZLIB_1.2.3.5+0x54>
    c5cc:	cmp	w1, w1, lsl #1
    c5d0:	b.hi	c604 <gzbuffer@@ZLIB_1.2.3.5+0x5c>  // b.pmore
    c5d4:	cmp	w1, #0x2
    c5d8:	mov	w2, #0x2                   	// #2
    c5dc:	csel	w1, w1, w2, cs  // cs = hs, nlast
    c5e0:	str	w1, [x0, #44]
    c5e4:	mov	w0, #0x0                   	// #0
    c5e8:	ret
    c5ec:	mov	w0, #0xffffffff            	// #-1
    c5f0:	b	c5e8 <gzbuffer@@ZLIB_1.2.3.5+0x40>
    c5f4:	mov	w0, #0xffffffff            	// #-1
    c5f8:	b	c5e8 <gzbuffer@@ZLIB_1.2.3.5+0x40>
    c5fc:	mov	w0, #0xffffffff            	// #-1
    c600:	b	c5e8 <gzbuffer@@ZLIB_1.2.3.5+0x40>
    c604:	mov	w0, #0xffffffff            	// #-1
    c608:	b	c5e8 <gzbuffer@@ZLIB_1.2.3.5+0x40>

000000000000c60c <gztell64@@ZLIB_1.2.3.3>:
    c60c:	cbz	x0, c644 <gztell64@@ZLIB_1.2.3.3+0x38>
    c610:	ldr	w1, [x0, #24]
    c614:	mov	w2, #0x1c4f                	// #7247
    c618:	cmp	w1, w2
    c61c:	mov	w2, #0x79b1                	// #31153
    c620:	ccmp	w1, w2, #0x4, ne  // ne = any
    c624:	b.ne	c64c <gztell64@@ZLIB_1.2.3.3+0x40>  // b.any
    c628:	ldr	x1, [x0, #16]
    c62c:	ldr	w3, [x0, #104]
    c630:	mov	x2, #0x0                   	// #0
    c634:	cbz	w3, c63c <gztell64@@ZLIB_1.2.3.3+0x30>
    c638:	ldr	x2, [x0, #96]
    c63c:	add	x0, x1, x2
    c640:	ret
    c644:	mov	x0, #0xffffffffffffffff    	// #-1
    c648:	b	c640 <gztell64@@ZLIB_1.2.3.3+0x34>
    c64c:	mov	x0, #0xffffffffffffffff    	// #-1
    c650:	b	c640 <gztell64@@ZLIB_1.2.3.3+0x34>

000000000000c654 <gztell@@Base>:
    c654:	stp	x29, x30, [sp, #-16]!
    c658:	mov	x29, sp
    c65c:	bl	24c0 <gztell64@plt>
    c660:	ldp	x29, x30, [sp], #16
    c664:	ret

000000000000c668 <gzoffset64@@ZLIB_1.2.3.5>:
    c668:	cbz	x0, c6d4 <gzoffset64@@ZLIB_1.2.3.5+0x6c>
    c66c:	stp	x29, x30, [sp, #-32]!
    c670:	mov	x29, sp
    c674:	str	x19, [sp, #16]
    c678:	mov	x19, x0
    c67c:	ldr	w0, [x0, #24]
    c680:	mov	w1, #0x1c4f                	// #7247
    c684:	cmp	w0, w1
    c688:	mov	w1, #0x79b1                	// #31153
    c68c:	ccmp	w0, w1, #0x4, ne  // ne = any
    c690:	b.ne	c6dc <gzoffset64@@ZLIB_1.2.3.5+0x74>  // b.any
    c694:	mov	w2, #0x1                   	// #1
    c698:	mov	x1, #0x0                   	// #0
    c69c:	ldr	w0, [x19, #28]
    c6a0:	bl	24b0 <lseek64@plt>
    c6a4:	cmn	x0, #0x1
    c6a8:	b.eq	c6bc <gzoffset64@@ZLIB_1.2.3.5+0x54>  // b.none
    c6ac:	ldr	w2, [x19, #24]
    c6b0:	mov	w1, #0x1c4f                	// #7247
    c6b4:	cmp	w2, w1
    c6b8:	b.eq	c6c8 <gzoffset64@@ZLIB_1.2.3.5+0x60>  // b.none
    c6bc:	ldr	x19, [sp, #16]
    c6c0:	ldp	x29, x30, [sp], #32
    c6c4:	ret
    c6c8:	ldr	w1, [x19, #128]
    c6cc:	sub	x0, x0, x1
    c6d0:	b	c6bc <gzoffset64@@ZLIB_1.2.3.5+0x54>
    c6d4:	mov	x0, #0xffffffffffffffff    	// #-1
    c6d8:	ret
    c6dc:	mov	x0, #0xffffffffffffffff    	// #-1
    c6e0:	b	c6bc <gzoffset64@@ZLIB_1.2.3.5+0x54>

000000000000c6e4 <gzoffset@@ZLIB_1.2.3.5>:
    c6e4:	stp	x29, x30, [sp, #-16]!
    c6e8:	mov	x29, sp
    c6ec:	bl	25b0 <gzoffset64@plt>
    c6f0:	ldp	x29, x30, [sp], #16
    c6f4:	ret

000000000000c6f8 <gzeof@@Base>:
    c6f8:	mov	x1, x0
    c6fc:	cbz	x0, c720 <gzeof@@Base+0x28>
    c700:	ldr	w3, [x0, #24]
    c704:	mov	w0, #0x0                   	// #0
    c708:	mov	w2, #0x1c4f                	// #7247
    c70c:	cmp	w3, w2
    c710:	b.eq	c718 <gzeof@@Base+0x20>  // b.none
    c714:	ret
    c718:	ldr	w0, [x1, #84]
    c71c:	b	c714 <gzeof@@Base+0x1c>
    c720:	mov	w0, #0x0                   	// #0
    c724:	b	c714 <gzeof@@Base+0x1c>

000000000000c728 <gzerror@@Base>:
    c728:	cbz	x0, c770 <gzerror@@Base+0x48>
    c72c:	ldr	w2, [x0, #24]
    c730:	mov	w3, #0x1c4f                	// #7247
    c734:	cmp	w2, w3
    c738:	mov	w3, #0x79b1                	// #31153
    c73c:	ccmp	w2, w3, #0x4, ne  // ne = any
    c740:	b.ne	c774 <gzerror@@Base+0x4c>  // b.any
    c744:	cbz	x1, c750 <gzerror@@Base+0x28>
    c748:	ldr	w2, [x0, #108]
    c74c:	str	w2, [x1]
    c750:	ldr	w1, [x0, #108]
    c754:	cmn	w1, #0x4
    c758:	b.eq	c77c <gzerror@@Base+0x54>  // b.none
    c75c:	ldr	x0, [x0, #112]
    c760:	adrp	x1, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    c764:	add	x1, x1, #0xac0
    c768:	cmp	x0, #0x0
    c76c:	csel	x0, x1, x0, eq  // eq = none
    c770:	ret
    c774:	mov	x0, #0x0                   	// #0
    c778:	b	c770 <gzerror@@Base+0x48>
    c77c:	adrp	x0, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    c780:	add	x0, x0, #0x9f8
    c784:	b	c770 <gzerror@@Base+0x48>
    c788:	stp	x29, x30, [sp, #-48]!
    c78c:	mov	x29, sp
    c790:	stp	x19, x20, [sp, #16]
    c794:	stp	x21, x22, [sp, #32]
    c798:	mov	x19, x0
    c79c:	mov	w20, w1
    c7a0:	mov	x21, x2
    c7a4:	ldr	x0, [x0, #112]
    c7a8:	cbz	x0, c7bc <gzerror@@Base+0x94>
    c7ac:	ldr	w1, [x19, #108]
    c7b0:	cmn	w1, #0x4
    c7b4:	b.ne	c858 <gzerror@@Base+0x130>  // b.any
    c7b8:	str	xzr, [x19, #112]
    c7bc:	cmp	w20, #0x0
    c7c0:	ccmn	w20, #0x5, #0x4, ne  // ne = any
    c7c4:	b.eq	c7cc <gzerror@@Base+0xa4>  // b.none
    c7c8:	str	wzr, [x19]
    c7cc:	str	w20, [x19, #108]
    c7d0:	cmp	x21, #0x0
    c7d4:	ccmn	w20, #0x4, #0x4, ne  // ne = any
    c7d8:	b.eq	c848 <gzerror@@Base+0x120>  // b.none
    c7dc:	ldr	x22, [x19, #32]
    c7e0:	mov	x0, x22
    c7e4:	bl	23e0 <strlen@plt>
    c7e8:	mov	x20, x0
    c7ec:	mov	x0, x21
    c7f0:	bl	23e0 <strlen@plt>
    c7f4:	add	x0, x20, x0
    c7f8:	add	x0, x0, #0x3
    c7fc:	bl	2460 <malloc@plt>
    c800:	mov	x20, x0
    c804:	str	x0, [x19, #112]
    c808:	cbz	x0, c860 <gzerror@@Base+0x138>
    c80c:	mov	x0, x22
    c810:	bl	23e0 <strlen@plt>
    c814:	mov	x19, x0
    c818:	mov	x0, x21
    c81c:	bl	23e0 <strlen@plt>
    c820:	add	x1, x19, x0
    c824:	mov	x5, x21
    c828:	adrp	x4, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    c82c:	add	x4, x4, #0xa08
    c830:	mov	x3, x22
    c834:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    c838:	add	x2, x2, #0xa10
    c83c:	add	x1, x1, #0x3
    c840:	mov	x0, x20
    c844:	bl	2450 <snprintf@plt>
    c848:	ldp	x19, x20, [sp, #16]
    c84c:	ldp	x21, x22, [sp, #32]
    c850:	ldp	x29, x30, [sp], #48
    c854:	ret
    c858:	bl	2570 <free@plt>
    c85c:	b	c7b8 <gzerror@@Base+0x90>
    c860:	mov	w0, #0xfffffffc            	// #-4
    c864:	str	w0, [x19, #108]
    c868:	b	c848 <gzerror@@Base+0x120>
    c86c:	stp	x29, x30, [sp, #-80]!
    c870:	mov	x29, sp
    c874:	stp	x19, x20, [sp, #16]
    c878:	stp	x21, x22, [sp, #32]
    c87c:	mov	x22, x0
    c880:	cbz	x0, cbb8 <gzerror@@Base+0x490>
    c884:	stp	x23, x24, [sp, #48]
    c888:	mov	w23, w1
    c88c:	mov	x20, x2
    c890:	mov	x0, #0xe8                  	// #232
    c894:	bl	2460 <malloc@plt>
    c898:	mov	x19, x0
    c89c:	cbz	x0, cbc0 <gzerror@@Base+0x498>
    c8a0:	str	wzr, [x0, #40]
    c8a4:	mov	w0, #0x2000                	// #8192
    c8a8:	str	w0, [x19, #44]
    c8ac:	str	xzr, [x19, #112]
    c8b0:	str	wzr, [x19, #24]
    c8b4:	mov	w0, #0xffffffff            	// #-1
    c8b8:	str	w0, [x19, #88]
    c8bc:	str	wzr, [x19, #92]
    c8c0:	str	wzr, [x19, #64]
    c8c4:	ldrb	w3, [x20]
    c8c8:	cbz	w3, ca00 <gzerror@@Base+0x2d8>
    c8cc:	mov	w21, #0x0                   	// #0
    c8d0:	mov	w24, #0x0                   	// #0
    c8d4:	mov	w7, #0x1c4f                	// #7247
    c8d8:	mov	w6, #0x79b1                	// #31153
    c8dc:	mov	w0, #0x1                   	// #1
    c8e0:	mov	w5, #0x2                   	// #2
    c8e4:	mov	w2, #0x3                   	// #3
    c8e8:	mov	w1, #0x4                   	// #4
    c8ec:	b	c920 <gzerror@@Base+0x1f8>
    c8f0:	cmp	w3, #0x65
    c8f4:	b.eq	c9cc <gzerror@@Base+0x2a4>  // b.none
    c8f8:	b.ls	c93c <gzerror@@Base+0x214>  // b.plast
    c8fc:	cmp	w3, #0x72
    c900:	b.eq	c990 <gzerror@@Base+0x268>  // b.none
    c904:	b.ls	c978 <gzerror@@Base+0x250>  // b.plast
    c908:	cmp	w3, #0x77
    c90c:	b.eq	c998 <gzerror@@Base+0x270>  // b.none
    c910:	cmp	w3, #0x78
    c914:	csel	w21, w21, w0, ne  // ne = any
    c918:	ldrb	w3, [x20, #1]!
    c91c:	cbz	w3, c9d4 <gzerror@@Base+0x2ac>
    c920:	sub	w4, w3, #0x30
    c924:	and	w4, w4, #0xff
    c928:	cmp	w4, #0x9
    c92c:	b.hi	c8f0 <gzerror@@Base+0x1c8>  // b.pmore
    c930:	sub	w3, w3, #0x30
    c934:	str	w3, [x19, #88]
    c938:	b	c918 <gzerror@@Base+0x1f0>
    c93c:	cmp	w3, #0x52
    c940:	b.eq	c9bc <gzerror@@Base+0x294>  // b.none
    c944:	b.ls	c960 <gzerror@@Base+0x238>  // b.plast
    c948:	cmp	w3, #0x54
    c94c:	b.eq	c9c4 <gzerror@@Base+0x29c>  // b.none
    c950:	cmp	w3, #0x61
    c954:	b.ne	c918 <gzerror@@Base+0x1f0>  // b.any
    c958:	str	w0, [x19, #24]
    c95c:	b	c918 <gzerror@@Base+0x1f0>
    c960:	cmp	w3, #0x2b
    c964:	b.eq	c9a0 <gzerror@@Base+0x278>  // b.none
    c968:	cmp	w3, #0x46
    c96c:	b.ne	c918 <gzerror@@Base+0x1f0>  // b.any
    c970:	str	w1, [x19, #92]
    c974:	b	c918 <gzerror@@Base+0x1f0>
    c978:	cmp	w3, #0x66
    c97c:	b.eq	c9b4 <gzerror@@Base+0x28c>  // b.none
    c980:	cmp	w3, #0x68
    c984:	b.ne	c918 <gzerror@@Base+0x1f0>  // b.any
    c988:	str	w5, [x19, #92]
    c98c:	b	c918 <gzerror@@Base+0x1f0>
    c990:	str	w7, [x19, #24]
    c994:	b	c918 <gzerror@@Base+0x1f0>
    c998:	str	w6, [x19, #24]
    c99c:	b	c918 <gzerror@@Base+0x1f0>
    c9a0:	mov	x0, x19
    c9a4:	bl	2570 <free@plt>
    c9a8:	mov	x19, #0x0                   	// #0
    c9ac:	ldp	x23, x24, [sp, #48]
    c9b0:	b	cb08 <gzerror@@Base+0x3e0>
    c9b4:	str	w0, [x19, #92]
    c9b8:	b	c918 <gzerror@@Base+0x1f0>
    c9bc:	str	w2, [x19, #92]
    c9c0:	b	c918 <gzerror@@Base+0x1f0>
    c9c4:	str	w0, [x19, #64]
    c9c8:	b	c918 <gzerror@@Base+0x1f0>
    c9cc:	mov	w24, #0x1                   	// #1
    c9d0:	b	c918 <gzerror@@Base+0x1f0>
    c9d4:	ldr	w0, [x19, #24]
    c9d8:	cbz	w0, ca00 <gzerror@@Base+0x2d8>
    c9dc:	mov	w1, #0x1c4f                	// #7247
    c9e0:	cmp	w0, w1
    c9e4:	b.ne	ca28 <gzerror@@Base+0x300>  // b.any
    c9e8:	ldr	w0, [x19, #64]
    c9ec:	cbnz	w0, ca14 <gzerror@@Base+0x2ec>
    c9f0:	str	x25, [sp, #64]
    c9f4:	mov	w0, #0x1                   	// #1
    c9f8:	str	w0, [x19, #64]
    c9fc:	b	ca2c <gzerror@@Base+0x304>
    ca00:	mov	x0, x19
    ca04:	bl	2570 <free@plt>
    ca08:	mov	x19, #0x0                   	// #0
    ca0c:	ldp	x23, x24, [sp, #48]
    ca10:	b	cb08 <gzerror@@Base+0x3e0>
    ca14:	mov	x0, x19
    ca18:	bl	2570 <free@plt>
    ca1c:	mov	x19, #0x0                   	// #0
    ca20:	ldp	x23, x24, [sp, #48]
    ca24:	b	cb08 <gzerror@@Base+0x3e0>
    ca28:	str	x25, [sp, #64]
    ca2c:	mov	x0, x22
    ca30:	bl	23e0 <strlen@plt>
    ca34:	add	x25, x0, #0x1
    ca38:	mov	x0, x25
    ca3c:	bl	2460 <malloc@plt>
    ca40:	mov	x20, x0
    ca44:	str	x0, [x19, #32]
    ca48:	cbz	x0, cb1c <gzerror@@Base+0x3f4>
    ca4c:	mov	x3, x22
    ca50:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    ca54:	add	x2, x2, #0xa18
    ca58:	mov	x1, x25
    ca5c:	bl	2450 <snprintf@plt>
    ca60:	cmp	w24, #0x0
    ca64:	mov	w0, #0x80000               	// #524288
    ca68:	csel	w24, w24, w0, eq  // eq = none
    ca6c:	ldr	w0, [x19, #24]
    ca70:	mov	w1, #0x0                   	// #0
    ca74:	mov	w2, #0x1c4f                	// #7247
    ca78:	cmp	w0, w2
    ca7c:	b.eq	caa8 <gzerror@@Base+0x380>  // b.none
    ca80:	cmp	w21, #0x0
    ca84:	mov	w1, #0xc1                  	// #193
    ca88:	mov	w2, #0x41                  	// #65
    ca8c:	csel	w1, w1, w2, ne  // ne = any
    ca90:	mov	w2, #0x79b1                	// #31153
    ca94:	cmp	w0, w2
    ca98:	mov	w0, #0x200                 	// #512
    ca9c:	mov	w2, #0x400                 	// #1024
    caa0:	csel	w0, w0, w2, eq  // eq = none
    caa4:	orr	w1, w1, w0
    caa8:	tbnz	w23, #31, cb34 <gzerror@@Base+0x40c>
    caac:	str	w23, [x19, #28]
    cab0:	cmn	w23, #0x1
    cab4:	b.eq	cb4c <gzerror@@Base+0x424>  // b.none
    cab8:	ldr	w0, [x19, #24]
    cabc:	cmp	w0, #0x1
    cac0:	b.eq	cb6c <gzerror@@Base+0x444>  // b.none
    cac4:	mov	w1, #0x1c4f                	// #7247
    cac8:	cmp	w0, w1
    cacc:	b.eq	cb88 <gzerror@@Base+0x460>  // b.none
    cad0:	str	wzr, [x19]
    cad4:	ldr	w1, [x19, #24]
    cad8:	mov	w0, #0x1c4f                	// #7247
    cadc:	cmp	w1, w0
    cae0:	b.eq	cba8 <gzerror@@Base+0x480>  // b.none
    cae4:	str	wzr, [x19, #104]
    cae8:	mov	x2, #0x0                   	// #0
    caec:	mov	w1, #0x0                   	// #0
    caf0:	mov	x0, x19
    caf4:	bl	c788 <gzerror@@Base+0x60>
    caf8:	str	xzr, [x19, #16]
    cafc:	str	wzr, [x19, #128]
    cb00:	ldp	x23, x24, [sp, #48]
    cb04:	ldr	x25, [sp, #64]
    cb08:	mov	x0, x19
    cb0c:	ldp	x19, x20, [sp, #16]
    cb10:	ldp	x21, x22, [sp, #32]
    cb14:	ldp	x29, x30, [sp], #80
    cb18:	ret
    cb1c:	mov	x0, x19
    cb20:	bl	2570 <free@plt>
    cb24:	mov	x19, x20
    cb28:	ldp	x23, x24, [sp, #48]
    cb2c:	ldr	x25, [sp, #64]
    cb30:	b	cb08 <gzerror@@Base+0x3e0>
    cb34:	mov	w2, #0x1b6                 	// #438
    cb38:	orr	w1, w24, w1
    cb3c:	mov	x0, x22
    cb40:	bl	2470 <open@plt>
    cb44:	mov	w23, w0
    cb48:	b	caac <gzerror@@Base+0x384>
    cb4c:	ldr	x0, [x19, #32]
    cb50:	bl	2570 <free@plt>
    cb54:	mov	x0, x19
    cb58:	bl	2570 <free@plt>
    cb5c:	mov	x19, #0x0                   	// #0
    cb60:	ldp	x23, x24, [sp, #48]
    cb64:	ldr	x25, [sp, #64]
    cb68:	b	cb08 <gzerror@@Base+0x3e0>
    cb6c:	mov	w2, #0x2                   	// #2
    cb70:	mov	x1, #0x0                   	// #0
    cb74:	mov	w0, w23
    cb78:	bl	24b0 <lseek64@plt>
    cb7c:	mov	w0, #0x79b1                	// #31153
    cb80:	str	w0, [x19, #24]
    cb84:	b	cad0 <gzerror@@Base+0x3a8>
    cb88:	mov	w2, #0x1                   	// #1
    cb8c:	mov	x1, #0x0                   	// #0
    cb90:	mov	w0, w23
    cb94:	bl	24b0 <lseek64@plt>
    cb98:	cmn	x0, #0x1
    cb9c:	csel	x0, x0, xzr, ne  // ne = any
    cba0:	str	x0, [x19, #72]
    cba4:	b	cad0 <gzerror@@Base+0x3a8>
    cba8:	str	wzr, [x19, #80]
    cbac:	str	wzr, [x19, #84]
    cbb0:	str	wzr, [x19, #68]
    cbb4:	b	cae4 <gzerror@@Base+0x3bc>
    cbb8:	mov	x19, x0
    cbbc:	b	cb08 <gzerror@@Base+0x3e0>
    cbc0:	ldp	x23, x24, [sp, #48]
    cbc4:	b	cb08 <gzerror@@Base+0x3e0>

000000000000cbc8 <gzopen@@Base>:
    cbc8:	stp	x29, x30, [sp, #-16]!
    cbcc:	mov	x29, sp
    cbd0:	mov	x2, x1
    cbd4:	mov	w1, #0xffffffff            	// #-1
    cbd8:	bl	c86c <gzerror@@Base+0x144>
    cbdc:	ldp	x29, x30, [sp], #16
    cbe0:	ret

000000000000cbe4 <gzopen64@@ZLIB_1.2.3.3>:
    cbe4:	stp	x29, x30, [sp, #-16]!
    cbe8:	mov	x29, sp
    cbec:	mov	x2, x1
    cbf0:	mov	w1, #0xffffffff            	// #-1
    cbf4:	bl	c86c <gzerror@@Base+0x144>
    cbf8:	ldp	x29, x30, [sp], #16
    cbfc:	ret

000000000000cc00 <gzdopen@@Base>:
    cc00:	stp	x29, x30, [sp, #-48]!
    cc04:	mov	x29, sp
    cc08:	stp	x19, x20, [sp, #16]
    cc0c:	cmn	w0, #0x1
    cc10:	b.eq	cc74 <gzdopen@@Base+0x74>  // b.none
    cc14:	str	x21, [sp, #32]
    cc18:	mov	w20, w0
    cc1c:	mov	x21, x1
    cc20:	mov	x0, #0x13                  	// #19
    cc24:	bl	2460 <malloc@plt>
    cc28:	mov	x19, x0
    cc2c:	cbz	x0, cc7c <gzdopen@@Base+0x7c>
    cc30:	mov	w3, w20
    cc34:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    cc38:	add	x2, x2, #0xa20
    cc3c:	mov	x1, #0x13                  	// #19
    cc40:	bl	2450 <snprintf@plt>
    cc44:	mov	x2, x21
    cc48:	mov	w1, w20
    cc4c:	mov	x0, x19
    cc50:	bl	c86c <gzerror@@Base+0x144>
    cc54:	mov	x20, x0
    cc58:	mov	x0, x19
    cc5c:	bl	2570 <free@plt>
    cc60:	ldr	x21, [sp, #32]
    cc64:	mov	x0, x20
    cc68:	ldp	x19, x20, [sp, #16]
    cc6c:	ldp	x29, x30, [sp], #48
    cc70:	ret
    cc74:	mov	x20, #0x0                   	// #0
    cc78:	b	cc64 <gzdopen@@Base+0x64>
    cc7c:	mov	x20, x0
    cc80:	ldr	x21, [sp, #32]
    cc84:	b	cc64 <gzdopen@@Base+0x64>

000000000000cc88 <gzclearerr@@ZLIB_1.2.0.2>:
    cc88:	cbz	x0, ccd8 <gzclearerr@@ZLIB_1.2.0.2+0x50>
    cc8c:	ldr	w1, [x0, #24]
    cc90:	mov	w2, #0x1c4f                	// #7247
    cc94:	cmp	w1, w2
    cc98:	mov	w2, #0x79b1                	// #31153
    cc9c:	ccmp	w1, w2, #0x4, ne  // ne = any
    cca0:	b.ne	ccd8 <gzclearerr@@ZLIB_1.2.0.2+0x50>  // b.any
    cca4:	stp	x29, x30, [sp, #-16]!
    cca8:	mov	x29, sp
    ccac:	mov	w2, #0x1c4f                	// #7247
    ccb0:	cmp	w1, w2
    ccb4:	b.eq	cccc <gzclearerr@@ZLIB_1.2.0.2+0x44>  // b.none
    ccb8:	mov	x2, #0x0                   	// #0
    ccbc:	mov	w1, #0x0                   	// #0
    ccc0:	bl	c788 <gzerror@@Base+0x60>
    ccc4:	ldp	x29, x30, [sp], #16
    ccc8:	ret
    cccc:	str	wzr, [x0, #80]
    ccd0:	str	wzr, [x0, #84]
    ccd4:	b	ccb8 <gzclearerr@@ZLIB_1.2.0.2+0x30>
    ccd8:	ret

000000000000ccdc <gzrewind@@Base>:
    ccdc:	cbz	x0, cd78 <gzrewind@@Base+0x9c>
    cce0:	stp	x29, x30, [sp, #-32]!
    cce4:	mov	x29, sp
    cce8:	str	x19, [sp, #16]
    ccec:	mov	x19, x0
    ccf0:	ldr	w1, [x0, #24]
    ccf4:	mov	w0, #0x1c4f                	// #7247
    ccf8:	cmp	w1, w0
    ccfc:	b.ne	cd80 <gzrewind@@Base+0xa4>  // b.any
    cd00:	ldr	w0, [x19, #108]
    cd04:	cmp	w0, #0x0
    cd08:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    cd0c:	b.ne	cd88 <gzrewind@@Base+0xac>  // b.any
    cd10:	mov	w2, #0x0                   	// #0
    cd14:	ldr	x1, [x19, #72]
    cd18:	ldr	w0, [x19, #28]
    cd1c:	bl	24b0 <lseek64@plt>
    cd20:	cmn	x0, #0x1
    cd24:	b.eq	cd90 <gzrewind@@Base+0xb4>  // b.none
    cd28:	str	wzr, [x19]
    cd2c:	ldr	w1, [x19, #24]
    cd30:	mov	w0, #0x1c4f                	// #7247
    cd34:	cmp	w1, w0
    cd38:	b.eq	cd68 <gzrewind@@Base+0x8c>  // b.none
    cd3c:	str	wzr, [x19, #104]
    cd40:	mov	x2, #0x0                   	// #0
    cd44:	mov	w1, #0x0                   	// #0
    cd48:	mov	x0, x19
    cd4c:	bl	c788 <gzerror@@Base+0x60>
    cd50:	str	xzr, [x19, #16]
    cd54:	str	wzr, [x19, #128]
    cd58:	mov	w0, #0x0                   	// #0
    cd5c:	ldr	x19, [sp, #16]
    cd60:	ldp	x29, x30, [sp], #32
    cd64:	ret
    cd68:	str	wzr, [x19, #80]
    cd6c:	str	wzr, [x19, #84]
    cd70:	str	wzr, [x19, #68]
    cd74:	b	cd3c <gzrewind@@Base+0x60>
    cd78:	mov	w0, #0xffffffff            	// #-1
    cd7c:	ret
    cd80:	mov	w0, #0xffffffff            	// #-1
    cd84:	b	cd5c <gzrewind@@Base+0x80>
    cd88:	mov	w0, #0xffffffff            	// #-1
    cd8c:	b	cd5c <gzrewind@@Base+0x80>
    cd90:	mov	w0, #0xffffffff            	// #-1
    cd94:	b	cd5c <gzrewind@@Base+0x80>

000000000000cd98 <gzseek64@@ZLIB_1.2.3.3>:
    cd98:	cbz	x0, cf14 <gzseek64@@ZLIB_1.2.3.3+0x17c>
    cd9c:	stp	x29, x30, [sp, #-32]!
    cda0:	mov	x29, sp
    cda4:	stp	x19, x20, [sp, #16]
    cda8:	mov	x19, x0
    cdac:	mov	x20, x1
    cdb0:	ldr	w0, [x0, #24]
    cdb4:	mov	w1, #0x1c4f                	// #7247
    cdb8:	cmp	w0, w1
    cdbc:	mov	w1, #0x79b1                	// #31153
    cdc0:	ccmp	w0, w1, #0x4, ne  // ne = any
    cdc4:	b.ne	cf1c <gzseek64@@ZLIB_1.2.3.3+0x184>  // b.any
    cdc8:	ldr	w1, [x19, #108]
    cdcc:	cmp	w1, #0x0
    cdd0:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    cdd4:	b.ne	cf24 <gzseek64@@ZLIB_1.2.3.3+0x18c>  // b.any
    cdd8:	cmp	w2, #0x1
    cddc:	b.hi	cf2c <gzseek64@@ZLIB_1.2.3.3+0x194>  // b.pmore
    cde0:	cbnz	w2, ce24 <gzseek64@@ZLIB_1.2.3.3+0x8c>
    cde4:	ldr	x1, [x19, #16]
    cde8:	sub	x20, x20, x1
    cdec:	str	wzr, [x19, #104]
    cdf0:	mov	w1, #0x1c4f                	// #7247
    cdf4:	cmp	w0, w1
    cdf8:	b.eq	ce38 <gzseek64@@ZLIB_1.2.3.3+0xa0>  // b.none
    cdfc:	tbnz	x20, #63, cf44 <gzseek64@@ZLIB_1.2.3.3+0x1ac>
    ce00:	cbz	x20, ce10 <gzseek64@@ZLIB_1.2.3.3+0x78>
    ce04:	mov	w0, #0x1                   	// #1
    ce08:	str	w0, [x19, #104]
    ce0c:	str	x20, [x19, #96]
    ce10:	ldr	x0, [x19, #16]
    ce14:	add	x0, x20, x0
    ce18:	ldp	x19, x20, [sp, #16]
    ce1c:	ldp	x29, x30, [sp], #32
    ce20:	ret
    ce24:	ldr	w1, [x19, #104]
    ce28:	cbz	w1, cdec <gzseek64@@ZLIB_1.2.3.3+0x54>
    ce2c:	ldr	x1, [x19, #96]
    ce30:	add	x20, x20, x1
    ce34:	b	cdec <gzseek64@@ZLIB_1.2.3.3+0x54>
    ce38:	ldr	w0, [x19, #68]
    ce3c:	cmp	w0, #0x1
    ce40:	b.eq	ceac <gzseek64@@ZLIB_1.2.3.3+0x114>  // b.none
    ce44:	tbz	x20, #63, ce74 <gzseek64@@ZLIB_1.2.3.3+0xdc>
    ce48:	ldr	x0, [x19, #16]
    ce4c:	adds	x20, x20, x0
    ce50:	b.mi	cf34 <gzseek64@@ZLIB_1.2.3.3+0x19c>  // b.first
    ce54:	mov	x0, x19
    ce58:	bl	25a0 <gzrewind@plt>
    ce5c:	cmn	w0, #0x1
    ce60:	b.eq	cf3c <gzseek64@@ZLIB_1.2.3.3+0x1a4>  // b.none
    ce64:	ldr	w1, [x19, #24]
    ce68:	mov	w0, #0x1c4f                	// #7247
    ce6c:	cmp	w1, w0
    ce70:	b.ne	ce00 <gzseek64@@ZLIB_1.2.3.3+0x68>  // b.any
    ce74:	ldr	w1, [x19]
    ce78:	cmp	x20, w1, uxtw
    ce7c:	csel	w0, w1, w20, ge  // ge = tcont
    ce80:	sub	w1, w1, w0
    ce84:	str	w1, [x19]
    ce88:	mov	w0, w0
    ce8c:	ldr	x1, [x19, #8]
    ce90:	add	x1, x1, x0
    ce94:	str	x1, [x19, #8]
    ce98:	ldr	x1, [x19, #16]
    ce9c:	add	x1, x1, x0
    cea0:	str	x1, [x19, #16]
    cea4:	sub	x20, x20, x0
    cea8:	b	ce00 <gzseek64@@ZLIB_1.2.3.3+0x68>
    ceac:	ldr	x0, [x19, #16]
    ceb0:	cmn	x20, x0
    ceb4:	b.pl	cec4 <gzseek64@@ZLIB_1.2.3.3+0x12c>  // b.nfrst
    ceb8:	tbz	x20, #63, ce74 <gzseek64@@ZLIB_1.2.3.3+0xdc>
    cebc:	mov	x0, #0xffffffffffffffff    	// #-1
    cec0:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>
    cec4:	ldr	w1, [x19]
    cec8:	mov	w2, #0x1                   	// #1
    cecc:	sub	x1, x20, x1
    ced0:	ldr	w0, [x19, #28]
    ced4:	bl	24b0 <lseek64@plt>
    ced8:	cmn	x0, #0x1
    cedc:	b.eq	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>  // b.none
    cee0:	str	wzr, [x19]
    cee4:	str	wzr, [x19, #80]
    cee8:	str	wzr, [x19, #84]
    ceec:	str	wzr, [x19, #104]
    cef0:	mov	x2, #0x0                   	// #0
    cef4:	mov	w1, #0x0                   	// #0
    cef8:	mov	x0, x19
    cefc:	bl	c788 <gzerror@@Base+0x60>
    cf00:	str	wzr, [x19, #128]
    cf04:	ldr	x0, [x19, #16]
    cf08:	add	x0, x20, x0
    cf0c:	str	x0, [x19, #16]
    cf10:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>
    cf14:	mov	x0, #0xffffffffffffffff    	// #-1
    cf18:	ret
    cf1c:	mov	x0, #0xffffffffffffffff    	// #-1
    cf20:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>
    cf24:	mov	x0, #0xffffffffffffffff    	// #-1
    cf28:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>
    cf2c:	mov	x0, #0xffffffffffffffff    	// #-1
    cf30:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>
    cf34:	mov	x0, #0xffffffffffffffff    	// #-1
    cf38:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>
    cf3c:	mov	x0, #0xffffffffffffffff    	// #-1
    cf40:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>
    cf44:	mov	x0, #0xffffffffffffffff    	// #-1
    cf48:	b	ce18 <gzseek64@@ZLIB_1.2.3.3+0x80>

000000000000cf4c <gzseek@@Base>:
    cf4c:	stp	x29, x30, [sp, #-16]!
    cf50:	mov	x29, sp
    cf54:	bl	23d0 <gzseek64@plt>
    cf58:	ldp	x29, x30, [sp], #16
    cf5c:	ret
    cf60:	stp	x29, x30, [sp, #-64]!
    cf64:	mov	x29, sp
    cf68:	stp	x19, x20, [sp, #16]
    cf6c:	stp	x21, x22, [sp, #32]
    cf70:	str	x23, [sp, #48]
    cf74:	mov	x22, x0
    cf78:	mov	x23, x1
    cf7c:	mov	w20, w2
    cf80:	mov	x19, x3
    cf84:	str	wzr, [x3]
    cf88:	mov	w21, #0x40000000            	// #1073741824
    cf8c:	ldr	w1, [x19]
    cf90:	sub	w2, w20, w1
    cf94:	cmp	w2, w21
    cf98:	csel	w2, w2, w21, ls  // ls = plast
    cf9c:	add	x1, x23, w1, uxtw
    cfa0:	ldr	w0, [x22, #28]
    cfa4:	bl	25e0 <read@plt>
    cfa8:	cmp	w0, #0x0
    cfac:	b.le	cfcc <gzseek@@Base+0x80>
    cfb0:	ldr	w4, [x19]
    cfb4:	add	w0, w4, w0
    cfb8:	str	w0, [x19]
    cfbc:	cmp	w0, w20
    cfc0:	b.cc	cf8c <gzseek@@Base+0x40>  // b.lo, b.ul, b.last
    cfc4:	mov	w0, #0x0                   	// #0
    cfc8:	b	cfdc <gzseek@@Base+0x90>
    cfcc:	tbnz	w0, #31, cff0 <gzseek@@Base+0xa4>
    cfd0:	mov	w0, #0x1                   	// #1
    cfd4:	str	w0, [x22, #80]
    cfd8:	mov	w0, #0x0                   	// #0
    cfdc:	ldp	x19, x20, [sp, #16]
    cfe0:	ldp	x21, x22, [sp, #32]
    cfe4:	ldr	x23, [sp, #48]
    cfe8:	ldp	x29, x30, [sp], #64
    cfec:	ret
    cff0:	bl	2650 <__errno_location@plt>
    cff4:	ldr	w0, [x0]
    cff8:	bl	2500 <strerror@plt>
    cffc:	mov	x2, x0
    d000:	mov	w1, #0xffffffff            	// #-1
    d004:	mov	x0, x22
    d008:	bl	c788 <gzerror@@Base+0x60>
    d00c:	mov	w0, #0xffffffff            	// #-1
    d010:	b	cfdc <gzseek@@Base+0x90>
    d014:	stp	x29, x30, [sp, #-48]!
    d018:	mov	x29, sp
    d01c:	stp	x19, x20, [sp, #16]
    d020:	mov	x19, x0
    d024:	ldr	w0, [x0, #108]
    d028:	cmp	w0, #0x0
    d02c:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    d030:	b.ne	d0ac <gzseek@@Base+0x160>  // b.any
    d034:	ldr	w20, [x19, #80]
    d038:	cbnz	w20, d0b4 <gzseek@@Base+0x168>
    d03c:	ldr	w2, [x19, #128]
    d040:	cbz	w2, d068 <gzseek@@Base+0x11c>
    d044:	ldr	x4, [x19, #48]
    d048:	ldr	x3, [x19, #120]
    d04c:	sub	w2, w2, #0x1
    d050:	mov	x1, #0x0                   	// #0
    d054:	ldrb	w0, [x3, x1]
    d058:	strb	w0, [x4, x1]
    d05c:	cmp	x1, x2
    d060:	add	x1, x1, #0x1
    d064:	b.ne	d054 <gzseek@@Base+0x108>  // b.any
    d068:	ldr	w0, [x19, #128]
    d06c:	ldr	w2, [x19, #40]
    d070:	ldr	x1, [x19, #48]
    d074:	add	x3, sp, #0x2c
    d078:	sub	w2, w2, w0
    d07c:	add	x1, x1, w0, uxtw
    d080:	mov	x0, x19
    d084:	bl	cf60 <gzseek@@Base+0x14>
    d088:	cmn	w0, #0x1
    d08c:	b.eq	d0c8 <gzseek@@Base+0x17c>  // b.none
    d090:	ldr	w0, [x19, #128]
    d094:	ldr	w2, [sp, #44]
    d098:	add	w0, w0, w2
    d09c:	str	w0, [x19, #128]
    d0a0:	ldr	x0, [x19, #48]
    d0a4:	str	x0, [x19, #120]
    d0a8:	b	d0b8 <gzseek@@Base+0x16c>
    d0ac:	mov	w20, #0xffffffff            	// #-1
    d0b0:	b	d0b8 <gzseek@@Base+0x16c>
    d0b4:	mov	w20, #0x0                   	// #0
    d0b8:	mov	w0, w20
    d0bc:	ldp	x19, x20, [sp, #16]
    d0c0:	ldp	x29, x30, [sp], #48
    d0c4:	ret
    d0c8:	mov	w20, w0
    d0cc:	b	d0b8 <gzseek@@Base+0x16c>
    d0d0:	stp	x29, x30, [sp, #-48]!
    d0d4:	mov	x29, sp
    d0d8:	stp	x19, x20, [sp, #16]
    d0dc:	stp	x21, x22, [sp, #32]
    d0e0:	mov	x19, x0
    d0e4:	add	x21, x0, #0x78
    d0e8:	ldr	w0, [x0, #40]
    d0ec:	cbz	w0, d12c <gzseek@@Base+0x1e0>
    d0f0:	ldr	w2, [x19, #128]
    d0f4:	cmp	w2, #0x1
    d0f8:	b.ls	d1e4 <gzseek@@Base+0x298>  // b.plast
    d0fc:	ldr	x0, [x19, #120]
    d100:	ldrb	w1, [x0]
    d104:	cmp	w1, #0x1f
    d108:	b.eq	d250 <gzseek@@Base+0x304>  // b.none
    d10c:	ldr	w0, [x19, #64]
    d110:	cbnz	w0, d278 <gzseek@@Base+0x32c>
    d114:	str	wzr, [x19, #128]
    d118:	mov	w0, #0x1                   	// #1
    d11c:	str	w0, [x19, #80]
    d120:	str	wzr, [x19]
    d124:	mov	w0, #0x0                   	// #0
    d128:	b	d240 <gzseek@@Base+0x2f4>
    d12c:	ldr	w22, [x19, #44]
    d130:	mov	w0, w22
    d134:	bl	2460 <malloc@plt>
    d138:	mov	x20, x0
    d13c:	str	x0, [x19, #48]
    d140:	lsl	w0, w22, #1
    d144:	bl	2460 <malloc@plt>
    d148:	str	x0, [x19, #56]
    d14c:	cmp	x0, #0x0
    d150:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    d154:	b.eq	d1bc <gzseek@@Base+0x270>  // b.none
    d158:	str	w22, [x19, #40]
    d15c:	str	xzr, [x19, #184]
    d160:	str	xzr, [x19, #192]
    d164:	str	xzr, [x19, #200]
    d168:	str	wzr, [x19, #128]
    d16c:	str	xzr, [x19, #120]
    d170:	mov	w3, #0x70                  	// #112
    d174:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d178:	add	x2, x2, #0x960
    d17c:	mov	w1, #0x1f                  	// #31
    d180:	mov	x0, x21
    d184:	bl	2600 <inflateInit2_@plt>
    d188:	cbz	w0, d0f0 <gzseek@@Base+0x1a4>
    d18c:	ldr	x0, [x19, #56]
    d190:	bl	2570 <free@plt>
    d194:	ldr	x0, [x19, #48]
    d198:	bl	2570 <free@plt>
    d19c:	str	wzr, [x19, #40]
    d1a0:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d1a4:	add	x2, x2, #0x9f8
    d1a8:	mov	w1, #0xfffffffc            	// #-4
    d1ac:	mov	x0, x19
    d1b0:	bl	c788 <gzerror@@Base+0x60>
    d1b4:	mov	w0, #0xffffffff            	// #-1
    d1b8:	b	d240 <gzseek@@Base+0x2f4>
    d1bc:	bl	2570 <free@plt>
    d1c0:	mov	x0, x20
    d1c4:	bl	2570 <free@plt>
    d1c8:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d1cc:	add	x2, x2, #0x9f8
    d1d0:	mov	w1, #0xfffffffc            	// #-4
    d1d4:	mov	x0, x19
    d1d8:	bl	c788 <gzerror@@Base+0x60>
    d1dc:	mov	w0, #0xffffffff            	// #-1
    d1e0:	b	d240 <gzseek@@Base+0x2f4>
    d1e4:	mov	x0, x19
    d1e8:	bl	d014 <gzseek@@Base+0xc8>
    d1ec:	cmn	w0, #0x1
    d1f0:	b.eq	d240 <gzseek@@Base+0x2f4>  // b.none
    d1f4:	ldr	w2, [x19, #128]
    d1f8:	mov	w0, #0x0                   	// #0
    d1fc:	cbz	w2, d240 <gzseek@@Base+0x2f4>
    d200:	cmp	w2, #0x1
    d204:	b.hi	d0fc <gzseek@@Base+0x1b0>  // b.pmore
    d208:	ldr	w0, [x19, #64]
    d20c:	cbz	w0, d114 <gzseek@@Base+0x1c8>
    d210:	ldr	x0, [x19, #56]
    d214:	str	x0, [x19, #8]
    d218:	mov	w2, w2
    d21c:	ldr	x1, [x19, #120]
    d220:	bl	23a0 <memcpy@plt>
    d224:	ldr	w0, [x19, #128]
    d228:	str	w0, [x19]
    d22c:	str	wzr, [x19, #128]
    d230:	mov	w0, #0x1                   	// #1
    d234:	str	w0, [x19, #68]
    d238:	str	w0, [x19, #64]
    d23c:	mov	w0, #0x0                   	// #0
    d240:	ldp	x19, x20, [sp, #16]
    d244:	ldp	x21, x22, [sp, #32]
    d248:	ldp	x29, x30, [sp], #48
    d24c:	ret
    d250:	ldrb	w0, [x0, #1]
    d254:	cmp	w0, #0x8b
    d258:	b.ne	d10c <gzseek@@Base+0x1c0>  // b.any
    d25c:	mov	x0, x21
    d260:	bl	2610 <inflateReset@plt>
    d264:	mov	w0, #0x2                   	// #2
    d268:	str	w0, [x19, #68]
    d26c:	str	wzr, [x19, #64]
    d270:	mov	w0, #0x0                   	// #0
    d274:	b	d240 <gzseek@@Base+0x2f4>
    d278:	ldr	x0, [x19, #56]
    d27c:	str	x0, [x19, #8]
    d280:	b	d218 <gzseek@@Base+0x2cc>
    d284:	stp	x29, x30, [sp, #-48]!
    d288:	mov	x29, sp
    d28c:	stp	x19, x20, [sp, #16]
    d290:	stp	x21, x22, [sp, #32]
    d294:	mov	x20, x0
    d298:	add	x21, x0, #0x78
    d29c:	ldr	w22, [x21, #32]
    d2a0:	mov	w19, #0x0                   	// #0
    d2a4:	b	d2e4 <gzseek@@Base+0x398>
    d2a8:	mov	w1, #0x0                   	// #0
    d2ac:	mov	x0, x21
    d2b0:	bl	23f0 <inflate@plt>
    d2b4:	mov	w19, w0
    d2b8:	add	w1, w0, #0x2
    d2bc:	tst	w1, #0xfffffffb
    d2c0:	b.eq	d34c <gzseek@@Base+0x400>  // b.none
    d2c4:	cmn	w0, #0x4
    d2c8:	b.eq	d368 <gzseek@@Base+0x41c>  // b.none
    d2cc:	cmn	w0, #0x3
    d2d0:	b.eq	d384 <gzseek@@Base+0x438>  // b.none
    d2d4:	ldr	w0, [x20, #152]
    d2d8:	cmp	w0, #0x0
    d2dc:	ccmp	w19, #0x1, #0x4, ne  // ne = any
    d2e0:	b.eq	d318 <gzseek@@Base+0x3cc>  // b.none
    d2e4:	ldr	w1, [x20, #128]
    d2e8:	cbnz	w1, d2a8 <gzseek@@Base+0x35c>
    d2ec:	mov	x0, x20
    d2f0:	bl	d014 <gzseek@@Base+0xc8>
    d2f4:	cmn	w0, #0x1
    d2f8:	b.eq	d33c <gzseek@@Base+0x3f0>  // b.none
    d2fc:	ldr	w0, [x20, #128]
    d300:	cbnz	w0, d2a8 <gzseek@@Base+0x35c>
    d304:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d308:	add	x2, x2, #0xa40
    d30c:	mov	w1, #0xfffffffb            	// #-5
    d310:	mov	x0, x20
    d314:	bl	c788 <gzerror@@Base+0x60>
    d318:	ldr	w1, [x20, #152]
    d31c:	sub	w22, w22, w1
    d320:	str	w22, [x20]
    d324:	ldr	x0, [x20, #144]
    d328:	sub	x22, x0, w22, uxtw
    d32c:	str	x22, [x20, #8]
    d330:	mov	w0, #0x0                   	// #0
    d334:	cmp	w19, #0x1
    d338:	b.eq	d3ac <gzseek@@Base+0x460>  // b.none
    d33c:	ldp	x19, x20, [sp, #16]
    d340:	ldp	x21, x22, [sp, #32]
    d344:	ldp	x29, x30, [sp], #48
    d348:	ret
    d34c:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d350:	add	x2, x2, #0xa58
    d354:	mov	w1, #0xfffffffe            	// #-2
    d358:	mov	x0, x20
    d35c:	bl	c788 <gzerror@@Base+0x60>
    d360:	mov	w0, #0xffffffff            	// #-1
    d364:	b	d33c <gzseek@@Base+0x3f0>
    d368:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d36c:	add	x2, x2, #0x9f8
    d370:	mov	w1, #0xfffffffc            	// #-4
    d374:	mov	x0, x20
    d378:	bl	c788 <gzerror@@Base+0x60>
    d37c:	mov	w0, #0xffffffff            	// #-1
    d380:	b	d33c <gzseek@@Base+0x3f0>
    d384:	ldr	x2, [x20, #168]
    d388:	adrp	x0, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d38c:	add	x0, x0, #0xa28
    d390:	cmp	x2, #0x0
    d394:	csel	x2, x0, x2, eq  // eq = none
    d398:	mov	w1, #0xfffffffd            	// #-3
    d39c:	mov	x0, x20
    d3a0:	bl	c788 <gzerror@@Base+0x60>
    d3a4:	mov	w0, #0xffffffff            	// #-1
    d3a8:	b	d33c <gzseek@@Base+0x3f0>
    d3ac:	str	wzr, [x20, #68]
    d3b0:	b	d33c <gzseek@@Base+0x3f0>
    d3b4:	stp	x29, x30, [sp, #-32]!
    d3b8:	mov	x29, sp
    d3bc:	str	x19, [sp, #16]
    d3c0:	mov	x19, x0
    d3c4:	ldr	w0, [x19, #68]
    d3c8:	cmp	w0, #0x1
    d3cc:	b.eq	d414 <gzseek@@Base+0x4c8>  // b.none
    d3d0:	cmp	w0, #0x2
    d3d4:	b.eq	d44c <gzseek@@Base+0x500>  // b.none
    d3d8:	cbz	w0, d3f8 <gzseek@@Base+0x4ac>
    d3dc:	ldr	w0, [x19]
    d3e0:	cbnz	w0, d474 <gzseek@@Base+0x528>
    d3e4:	ldr	w0, [x19, #80]
    d3e8:	cbz	w0, d3c4 <gzseek@@Base+0x478>
    d3ec:	ldr	w0, [x19, #128]
    d3f0:	cbnz	w0, d3c4 <gzseek@@Base+0x478>
    d3f4:	b	d440 <gzseek@@Base+0x4f4>
    d3f8:	mov	x0, x19
    d3fc:	bl	d0d0 <gzseek@@Base+0x184>
    d400:	cmn	w0, #0x1
    d404:	b.eq	d440 <gzseek@@Base+0x4f4>  // b.none
    d408:	ldr	w0, [x19, #68]
    d40c:	cbnz	w0, d3dc <gzseek@@Base+0x490>
    d410:	b	d440 <gzseek@@Base+0x4f4>
    d414:	ldr	w2, [x19, #40]
    d418:	mov	x3, x19
    d41c:	lsl	w2, w2, #1
    d420:	ldr	x1, [x19, #56]
    d424:	mov	x0, x19
    d428:	bl	cf60 <gzseek@@Base+0x14>
    d42c:	cmn	w0, #0x1
    d430:	b.eq	d440 <gzseek@@Base+0x4f4>  // b.none
    d434:	ldr	x0, [x19, #56]
    d438:	str	x0, [x19, #8]
    d43c:	mov	w0, #0x0                   	// #0
    d440:	ldr	x19, [sp, #16]
    d444:	ldp	x29, x30, [sp], #32
    d448:	ret
    d44c:	ldr	w0, [x19, #40]
    d450:	lsl	w0, w0, #1
    d454:	str	w0, [x19, #152]
    d458:	ldr	x0, [x19, #56]
    d45c:	str	x0, [x19, #144]
    d460:	mov	x0, x19
    d464:	bl	d284 <gzseek@@Base+0x338>
    d468:	cmn	w0, #0x1
    d46c:	b.ne	d3dc <gzseek@@Base+0x490>  // b.any
    d470:	b	d440 <gzseek@@Base+0x4f4>
    d474:	mov	w0, #0x0                   	// #0
    d478:	b	d440 <gzseek@@Base+0x4f4>
    d47c:	stp	x29, x30, [sp, #-32]!
    d480:	mov	x29, sp
    d484:	stp	x19, x20, [sp, #16]
    d488:	mov	x19, x0
    d48c:	mov	x20, x1
    d490:	cbnz	x1, d4c0 <gzseek@@Base+0x574>
    d494:	mov	w0, #0x0                   	// #0
    d498:	b	d500 <gzseek@@Base+0x5b4>
    d49c:	ldr	w0, [x19, #80]
    d4a0:	cbz	w0, d4ac <gzseek@@Base+0x560>
    d4a4:	ldr	w0, [x19, #128]
    d4a8:	cbz	w0, d50c <gzseek@@Base+0x5c0>
    d4ac:	mov	x0, x19
    d4b0:	bl	d3b4 <gzseek@@Base+0x468>
    d4b4:	cmn	w0, #0x1
    d4b8:	b.eq	d500 <gzseek@@Base+0x5b4>  // b.none
    d4bc:	cbz	x20, d4fc <gzseek@@Base+0x5b0>
    d4c0:	ldr	w0, [x19]
    d4c4:	cbz	w0, d49c <gzseek@@Base+0x550>
    d4c8:	cmp	x20, w0, uxtw
    d4cc:	csel	w2, w0, w20, ge  // ge = tcont
    d4d0:	sub	w0, w0, w2
    d4d4:	str	w0, [x19]
    d4d8:	mov	w0, w2
    d4dc:	ldr	x1, [x19, #8]
    d4e0:	add	x1, x1, x0
    d4e4:	str	x1, [x19, #8]
    d4e8:	ldr	x1, [x19, #16]
    d4ec:	add	x1, x1, x0
    d4f0:	str	x1, [x19, #16]
    d4f4:	sub	x20, x20, x0
    d4f8:	b	d4bc <gzseek@@Base+0x570>
    d4fc:	mov	w0, #0x0                   	// #0
    d500:	ldp	x19, x20, [sp, #16]
    d504:	ldp	x29, x30, [sp], #32
    d508:	ret
    d50c:	mov	w0, #0x0                   	// #0
    d510:	b	d500 <gzseek@@Base+0x5b4>
    d514:	stp	x29, x30, [sp, #-112]!
    d518:	mov	x29, sp
    d51c:	stp	x19, x20, [sp, #16]
    d520:	stp	x21, x22, [sp, #32]
    d524:	mov	x20, x2
    d528:	mov	x22, x2
    d52c:	cbz	x2, d640 <gzseek@@Base+0x6f4>
    d530:	mov	x19, x0
    d534:	mov	x21, x1
    d538:	ldr	w0, [x0, #104]
    d53c:	cbnz	w0, d560 <gzseek@@Base+0x614>
    d540:	stp	x23, x24, [sp, #48]
    d544:	stp	x25, x26, [sp, #64]
    d548:	str	x27, [sp, #80]
    d54c:	mov	x22, #0x0                   	// #0
    d550:	mov	x24, #0xfffffffe            	// #4294967294
    d554:	mov	w23, #0xffffffff            	// #-1
    d558:	add	x25, sp, #0x6c
    d55c:	b	d5d0 <gzseek@@Base+0x684>
    d560:	str	wzr, [x19, #104]
    d564:	ldr	x1, [x19, #96]
    d568:	mov	x0, x19
    d56c:	bl	d47c <gzseek@@Base+0x530>
    d570:	mov	x22, #0x0                   	// #0
    d574:	cmn	w0, #0x1
    d578:	b.ne	d540 <gzseek@@Base+0x5f4>  // b.any
    d57c:	b	d640 <gzseek@@Base+0x6f4>
    d580:	ldr	w26, [sp, #108]
    d584:	mov	w27, w26
    d588:	mov	x2, x27
    d58c:	ldr	x1, [x19, #8]
    d590:	mov	x0, x21
    d594:	bl	23a0 <memcpy@plt>
    d598:	ldr	x2, [x19, #8]
    d59c:	add	x2, x2, x27
    d5a0:	str	x2, [x19, #8]
    d5a4:	ldr	w0, [x19]
    d5a8:	sub	w0, w0, w26
    d5ac:	str	w0, [x19]
    d5b0:	ldr	w0, [sp, #108]
    d5b4:	sub	x20, x20, x0
    d5b8:	add	x21, x21, x0
    d5bc:	add	x22, x22, x0
    d5c0:	ldr	x1, [x19, #16]
    d5c4:	add	x0, x1, x0
    d5c8:	str	x0, [x19, #16]
    d5cc:	cbz	x20, d6c8 <gzseek@@Base+0x77c>
    d5d0:	cmp	x20, x24
    d5d4:	csel	w0, w20, w23, ls  // ls = plast
    d5d8:	str	w0, [sp, #108]
    d5dc:	ldr	w0, [x19]
    d5e0:	cbz	w0, d5f8 <gzseek@@Base+0x6ac>
    d5e4:	ldr	w1, [sp, #108]
    d5e8:	cmp	w0, w1
    d5ec:	b.cs	d580 <gzseek@@Base+0x634>  // b.hs, b.nlast
    d5f0:	str	w0, [sp, #108]
    d5f4:	b	d580 <gzseek@@Base+0x634>
    d5f8:	ldr	w0, [x19, #80]
    d5fc:	cbz	w0, d608 <gzseek@@Base+0x6bc>
    d600:	ldr	w0, [x19, #128]
    d604:	cbz	w0, d654 <gzseek@@Base+0x708>
    d608:	ldr	w0, [x19, #68]
    d60c:	cbz	w0, d620 <gzseek@@Base+0x6d4>
    d610:	ldr	w2, [sp, #108]
    d614:	ldr	w1, [x19, #40]
    d618:	cmp	w2, w1, lsl #1
    d61c:	b.cs	d66c <gzseek@@Base+0x720>  // b.hs, b.nlast
    d620:	mov	x0, x19
    d624:	bl	d3b4 <gzseek@@Base+0x468>
    d628:	cmn	w0, #0x1
    d62c:	b.ne	d5cc <gzseek@@Base+0x680>  // b.any
    d630:	mov	x22, #0x0                   	// #0
    d634:	ldp	x23, x24, [sp, #48]
    d638:	ldp	x25, x26, [sp, #64]
    d63c:	ldr	x27, [sp, #80]
    d640:	mov	x0, x22
    d644:	ldp	x19, x20, [sp, #16]
    d648:	ldp	x21, x22, [sp, #32]
    d64c:	ldp	x29, x30, [sp], #112
    d650:	ret
    d654:	mov	w0, #0x1                   	// #1
    d658:	str	w0, [x19, #84]
    d65c:	ldp	x23, x24, [sp, #48]
    d660:	ldp	x25, x26, [sp, #64]
    d664:	ldr	x27, [sp, #80]
    d668:	b	d640 <gzseek@@Base+0x6f4>
    d66c:	cmp	w0, #0x1
    d670:	b.eq	d69c <gzseek@@Base+0x750>  // b.none
    d674:	str	w2, [x19, #152]
    d678:	str	x21, [x19, #144]
    d67c:	mov	x0, x19
    d680:	bl	d284 <gzseek@@Base+0x338>
    d684:	cmn	w0, #0x1
    d688:	b.eq	d6d8 <gzseek@@Base+0x78c>  // b.none
    d68c:	ldr	w0, [x19]
    d690:	str	w0, [sp, #108]
    d694:	str	wzr, [x19]
    d698:	b	d5b0 <gzseek@@Base+0x664>
    d69c:	mov	x3, x25
    d6a0:	mov	x1, x21
    d6a4:	mov	x0, x19
    d6a8:	bl	cf60 <gzseek@@Base+0x14>
    d6ac:	cmn	w0, #0x1
    d6b0:	b.ne	d5b0 <gzseek@@Base+0x664>  // b.any
    d6b4:	mov	x22, #0x0                   	// #0
    d6b8:	ldp	x23, x24, [sp, #48]
    d6bc:	ldp	x25, x26, [sp, #64]
    d6c0:	ldr	x27, [sp, #80]
    d6c4:	b	d640 <gzseek@@Base+0x6f4>
    d6c8:	ldp	x23, x24, [sp, #48]
    d6cc:	ldp	x25, x26, [sp, #64]
    d6d0:	ldr	x27, [sp, #80]
    d6d4:	b	d640 <gzseek@@Base+0x6f4>
    d6d8:	mov	x22, #0x0                   	// #0
    d6dc:	ldp	x23, x24, [sp, #48]
    d6e0:	ldp	x25, x26, [sp, #64]
    d6e4:	ldr	x27, [sp, #80]
    d6e8:	b	d640 <gzseek@@Base+0x6f4>

000000000000d6ec <gzread@@Base>:
    d6ec:	cbz	x0, d76c <gzread@@Base+0x80>
    d6f0:	stp	x29, x30, [sp, #-32]!
    d6f4:	mov	x29, sp
    d6f8:	str	x19, [sp, #16]
    d6fc:	mov	x19, x0
    d700:	ldr	w3, [x0, #24]
    d704:	mov	w0, #0x1c4f                	// #7247
    d708:	cmp	w3, w0
    d70c:	b.ne	d774 <gzread@@Base+0x88>  // b.any
    d710:	ldr	w0, [x19, #108]
    d714:	cmp	w0, #0x0
    d718:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    d71c:	b.ne	d77c <gzread@@Base+0x90>  // b.any
    d720:	tbnz	w2, #31, d750 <gzread@@Base+0x64>
    d724:	mov	w2, w2
    d728:	mov	x0, x19
    d72c:	bl	d514 <gzseek@@Base+0x5c8>
    d730:	cbnz	w0, d744 <gzread@@Base+0x58>
    d734:	ldr	w1, [x19, #108]
    d738:	cmp	w1, #0x0
    d73c:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    d740:	b.ne	d784 <gzread@@Base+0x98>  // b.any
    d744:	ldr	x19, [sp, #16]
    d748:	ldp	x29, x30, [sp], #32
    d74c:	ret
    d750:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d754:	add	x2, x2, #0xa80
    d758:	mov	w1, #0xfffffffe            	// #-2
    d75c:	mov	x0, x19
    d760:	bl	c788 <gzerror@@Base+0x60>
    d764:	mov	w0, #0xffffffff            	// #-1
    d768:	b	d744 <gzread@@Base+0x58>
    d76c:	mov	w0, #0xffffffff            	// #-1
    d770:	ret
    d774:	mov	w0, #0xffffffff            	// #-1
    d778:	b	d744 <gzread@@Base+0x58>
    d77c:	mov	w0, #0xffffffff            	// #-1
    d780:	b	d744 <gzread@@Base+0x58>
    d784:	mov	w0, #0xffffffff            	// #-1
    d788:	b	d744 <gzread@@Base+0x58>

000000000000d78c <gzfread@@ZLIB_1.2.9>:
    d78c:	cbz	x3, d820 <gzfread@@ZLIB_1.2.9+0x94>
    d790:	stp	x29, x30, [sp, #-32]!
    d794:	mov	x29, sp
    d798:	str	x19, [sp, #16]
    d79c:	mov	x4, x0
    d7a0:	mov	x19, x1
    d7a4:	ldr	w5, [x3, #24]
    d7a8:	mov	x0, #0x0                   	// #0
    d7ac:	mov	w1, #0x1c4f                	// #7247
    d7b0:	cmp	w5, w1
    d7b4:	b.ne	d7f8 <gzfread@@ZLIB_1.2.9+0x6c>  // b.any
    d7b8:	ldr	w1, [x3, #108]
    d7bc:	cmp	w1, #0x0
    d7c0:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    d7c4:	b.ne	d7f8 <gzfread@@ZLIB_1.2.9+0x6c>  // b.any
    d7c8:	mov	x0, x19
    d7cc:	cbz	x19, d7f8 <gzfread@@ZLIB_1.2.9+0x6c>
    d7d0:	mul	x0, x2, x19
    d7d4:	udiv	x1, x0, x19
    d7d8:	cmp	x1, x2
    d7dc:	b.ne	d804 <gzfread@@ZLIB_1.2.9+0x78>  // b.any
    d7e0:	cbz	x0, d7f8 <gzfread@@ZLIB_1.2.9+0x6c>
    d7e4:	mov	x2, x0
    d7e8:	mov	x1, x4
    d7ec:	mov	x0, x3
    d7f0:	bl	d514 <gzseek@@Base+0x5c8>
    d7f4:	udiv	x0, x0, x19
    d7f8:	ldr	x19, [sp, #16]
    d7fc:	ldp	x29, x30, [sp], #32
    d800:	ret
    d804:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d808:	add	x2, x2, #0xaa0
    d80c:	mov	w1, #0xfffffffe            	// #-2
    d810:	mov	x0, x3
    d814:	bl	c788 <gzerror@@Base+0x60>
    d818:	mov	x0, #0x0                   	// #0
    d81c:	b	d7f8 <gzfread@@ZLIB_1.2.9+0x6c>
    d820:	mov	x0, #0x0                   	// #0
    d824:	ret

000000000000d828 <gzgetc@@Base>:
    d828:	cbz	x0, d8a4 <gzgetc@@Base+0x7c>
    d82c:	ldr	w2, [x0, #24]
    d830:	mov	w1, #0x1c4f                	// #7247
    d834:	cmp	w2, w1
    d838:	b.ne	d8ac <gzgetc@@Base+0x84>  // b.any
    d83c:	ldr	w1, [x0, #108]
    d840:	cmp	w1, #0x0
    d844:	ccmn	w1, #0x5, #0x4, ne  // ne = any
    d848:	b.ne	d8b4 <gzgetc@@Base+0x8c>  // b.any
    d84c:	ldr	w1, [x0]
    d850:	cbz	w1, d87c <gzgetc@@Base+0x54>
    d854:	sub	w1, w1, #0x1
    d858:	str	w1, [x0]
    d85c:	ldr	x1, [x0, #16]
    d860:	add	x1, x1, #0x1
    d864:	str	x1, [x0, #16]
    d868:	ldr	x1, [x0, #8]
    d86c:	add	x2, x1, #0x1
    d870:	str	x2, [x0, #8]
    d874:	ldrb	w0, [x1]
    d878:	ret
    d87c:	stp	x29, x30, [sp, #-32]!
    d880:	mov	x29, sp
    d884:	mov	x2, #0x1                   	// #1
    d888:	add	x1, sp, #0x18
    d88c:	bl	d514 <gzseek@@Base+0x5c8>
    d890:	cmp	w0, #0x0
    d894:	b.le	d8bc <gzgetc@@Base+0x94>
    d898:	ldrb	w0, [sp, #24]
    d89c:	ldp	x29, x30, [sp], #32
    d8a0:	ret
    d8a4:	mov	w0, #0xffffffff            	// #-1
    d8a8:	ret
    d8ac:	mov	w0, #0xffffffff            	// #-1
    d8b0:	ret
    d8b4:	mov	w0, #0xffffffff            	// #-1
    d8b8:	ret
    d8bc:	mov	w0, #0xffffffff            	// #-1
    d8c0:	b	d89c <gzgetc@@Base+0x74>

000000000000d8c4 <gzgetc_@@ZLIB_1.2.5.2>:
    d8c4:	stp	x29, x30, [sp, #-16]!
    d8c8:	mov	x29, sp
    d8cc:	bl	2410 <gzgetc@plt>
    d8d0:	ldp	x29, x30, [sp], #16
    d8d4:	ret

000000000000d8d8 <gzungetc@@ZLIB_1.2.0.2>:
    d8d8:	cbz	x1, da20 <gzungetc@@ZLIB_1.2.0.2+0x148>
    d8dc:	stp	x29, x30, [sp, #-32]!
    d8e0:	mov	x29, sp
    d8e4:	stp	x19, x20, [sp, #16]
    d8e8:	mov	w20, w0
    d8ec:	mov	x19, x1
    d8f0:	ldr	w1, [x1, #24]
    d8f4:	mov	w0, #0x1c4f                	// #7247
    d8f8:	cmp	w1, w0
    d8fc:	b.ne	da28 <gzungetc@@ZLIB_1.2.0.2+0x150>  // b.any
    d900:	ldr	w0, [x19, #108]
    d904:	cmp	w0, #0x0
    d908:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    d90c:	b.ne	da30 <gzungetc@@ZLIB_1.2.0.2+0x158>  // b.any
    d910:	ldr	w0, [x19, #104]
    d914:	cbnz	w0, d980 <gzungetc@@ZLIB_1.2.0.2+0xa8>
    d918:	tbnz	w20, #31, da38 <gzungetc@@ZLIB_1.2.0.2+0x160>
    d91c:	ldr	w1, [x19]
    d920:	cbz	w1, d99c <gzungetc@@ZLIB_1.2.0.2+0xc4>
    d924:	ldr	w2, [x19, #40]
    d928:	lsl	w0, w2, #1
    d92c:	cmp	w1, w2, lsl #1
    d930:	b.eq	d9d8 <gzungetc@@ZLIB_1.2.0.2+0x100>  // b.none
    d934:	ldr	x2, [x19, #56]
    d938:	ldr	x3, [x19, #8]
    d93c:	cmp	x3, x2
    d940:	b.eq	d9f4 <gzungetc@@ZLIB_1.2.0.2+0x11c>  // b.none
    d944:	ldr	w0, [x19]
    d948:	add	w0, w0, #0x1
    d94c:	str	w0, [x19]
    d950:	ldr	x0, [x19, #8]
    d954:	sub	x1, x0, #0x1
    d958:	str	x1, [x19, #8]
    d95c:	sturb	w20, [x0, #-1]
    d960:	ldr	x0, [x19, #16]
    d964:	sub	x0, x0, #0x1
    d968:	str	x0, [x19, #16]
    d96c:	str	wzr, [x19, #84]
    d970:	mov	w0, w20
    d974:	ldp	x19, x20, [sp, #16]
    d978:	ldp	x29, x30, [sp], #32
    d97c:	ret
    d980:	str	wzr, [x19, #104]
    d984:	ldr	x1, [x19, #96]
    d988:	mov	x0, x19
    d98c:	bl	d47c <gzseek@@Base+0x530>
    d990:	cmn	w0, #0x1
    d994:	b.ne	d918 <gzungetc@@ZLIB_1.2.0.2+0x40>  // b.any
    d998:	b	d974 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    d99c:	mov	w0, #0x1                   	// #1
    d9a0:	str	w0, [x19]
    d9a4:	ldr	w0, [x19, #40]
    d9a8:	lsl	w0, w0, #1
    d9ac:	sub	x0, x0, #0x1
    d9b0:	ldr	x1, [x19, #56]
    d9b4:	add	x2, x1, x0
    d9b8:	str	x2, [x19, #8]
    d9bc:	strb	w20, [x1, x0]
    d9c0:	ldr	x0, [x19, #16]
    d9c4:	sub	x0, x0, #0x1
    d9c8:	str	x0, [x19, #16]
    d9cc:	str	wzr, [x19, #84]
    d9d0:	mov	w0, w20
    d9d4:	b	d974 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    d9d8:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    d9dc:	add	x2, x2, #0xac8
    d9e0:	mov	w1, #0xfffffffd            	// #-3
    d9e4:	mov	x0, x19
    d9e8:	bl	c788 <gzerror@@Base+0x60>
    d9ec:	mov	w0, #0xffffffff            	// #-1
    d9f0:	b	d974 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    d9f4:	add	x1, x2, w1, uxtw
    d9f8:	add	x0, x2, w0, uxtw
    d9fc:	cmp	x2, x1
    da00:	b.cs	da18 <gzungetc@@ZLIB_1.2.0.2+0x140>  // b.hs, b.nlast
    da04:	ldrb	w2, [x1, #-1]!
    da08:	strb	w2, [x0, #-1]!
    da0c:	ldr	x2, [x19, #56]
    da10:	cmp	x2, x1
    da14:	b.cc	da04 <gzungetc@@ZLIB_1.2.0.2+0x12c>  // b.lo, b.ul, b.last
    da18:	str	x0, [x19, #8]
    da1c:	b	d944 <gzungetc@@ZLIB_1.2.0.2+0x6c>
    da20:	mov	w0, #0xffffffff            	// #-1
    da24:	ret
    da28:	mov	w0, #0xffffffff            	// #-1
    da2c:	b	d974 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    da30:	mov	w0, #0xffffffff            	// #-1
    da34:	b	d974 <gzungetc@@ZLIB_1.2.0.2+0x9c>
    da38:	mov	w0, #0xffffffff            	// #-1
    da3c:	b	d974 <gzungetc@@ZLIB_1.2.0.2+0x9c>

000000000000da40 <gzgets@@Base>:
    da40:	cmp	x1, #0x0
    da44:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    da48:	ccmp	x0, #0x0, #0x4, gt
    da4c:	b.eq	dbd4 <gzgets@@Base+0x194>  // b.none
    da50:	stp	x29, x30, [sp, #-80]!
    da54:	mov	x29, sp
    da58:	stp	x19, x20, [sp, #16]
    da5c:	stp	x23, x24, [sp, #48]
    da60:	mov	x19, x0
    da64:	mov	x23, x1
    da68:	mov	w20, w2
    da6c:	ldr	w2, [x0, #24]
    da70:	mov	x0, #0x0                   	// #0
    da74:	mov	w1, #0x1c4f                	// #7247
    da78:	cmp	w2, w1
    da7c:	b.ne	dbc4 <gzgets@@Base+0x184>  // b.any
    da80:	ldr	w0, [x19, #108]
    da84:	cmp	w0, #0x0
    da88:	ccmn	w0, #0x5, #0x4, ne  // ne = any
    da8c:	b.ne	dbdc <gzgets@@Base+0x19c>  // b.any
    da90:	ldr	w0, [x19, #104]
    da94:	cbnz	w0, dab8 <gzgets@@Base+0x78>
    da98:	mov	x0, #0x0                   	// #0
    da9c:	subs	w20, w20, #0x1
    daa0:	b.eq	dbc4 <gzgets@@Base+0x184>  // b.none
    daa4:	stp	x21, x22, [sp, #32]
    daa8:	stp	x25, x26, [sp, #64]
    daac:	mov	x21, x23
    dab0:	mov	w25, #0xa                   	// #10
    dab4:	b	db3c <gzgets@@Base+0xfc>
    dab8:	str	wzr, [x19, #104]
    dabc:	ldr	x1, [x19, #96]
    dac0:	mov	x0, x19
    dac4:	bl	d47c <gzseek@@Base+0x530>
    dac8:	cmn	w0, #0x1
    dacc:	b.ne	da98 <gzgets@@Base+0x58>  // b.any
    dad0:	mov	x0, #0x0                   	// #0
    dad4:	b	dbc4 <gzgets@@Base+0x184>
    dad8:	mov	x0, x19
    dadc:	bl	d3b4 <gzseek@@Base+0x468>
    dae0:	cmn	w0, #0x1
    dae4:	b.eq	dbe4 <gzgets@@Base+0x1a4>  // b.none
    dae8:	ldr	w2, [x19]
    daec:	cbnz	w2, db44 <gzgets@@Base+0x104>
    daf0:	mov	w0, #0x1                   	// #1
    daf4:	str	w0, [x19, #84]
    daf8:	b	dbac <gzgets@@Base+0x16c>
    dafc:	mov	x2, x26
    db00:	mov	x1, x22
    db04:	mov	x0, x21
    db08:	bl	23a0 <memcpy@plt>
    db0c:	ldr	w0, [x19]
    db10:	sub	w0, w0, w24
    db14:	str	w0, [x19]
    db18:	ldr	x0, [x19, #8]
    db1c:	add	x0, x0, x26
    db20:	str	x0, [x19, #8]
    db24:	ldr	x0, [x19, #16]
    db28:	add	x0, x0, w24, uxtw
    db2c:	str	x0, [x19, #16]
    db30:	add	x21, x21, x26
    db34:	subs	w20, w20, w24
    db38:	b.eq	dbac <gzgets@@Base+0x16c>  // b.none
    db3c:	ldr	w2, [x19]
    db40:	cbz	w2, dad8 <gzgets@@Base+0x98>
    db44:	cmp	w20, w2
    db48:	csel	w24, w20, w2, ls  // ls = plast
    db4c:	ldr	x22, [x19, #8]
    db50:	csel	w26, w20, w2, ls  // ls = plast
    db54:	mov	x2, x26
    db58:	mov	w1, w25
    db5c:	mov	x0, x22
    db60:	bl	25f0 <memchr@plt>
    db64:	cbz	x0, dafc <gzgets@@Base+0xbc>
    db68:	sub	x0, x0, x22
    db6c:	add	w24, w0, #0x1
    db70:	add	w20, w0, #0x1
    db74:	mov	x2, x20
    db78:	mov	x1, x22
    db7c:	mov	x0, x21
    db80:	bl	23a0 <memcpy@plt>
    db84:	ldr	w0, [x19]
    db88:	sub	w0, w0, w24
    db8c:	str	w0, [x19]
    db90:	ldr	x0, [x19, #8]
    db94:	add	x0, x0, x20
    db98:	str	x0, [x19, #8]
    db9c:	ldr	x0, [x19, #16]
    dba0:	add	x0, x0, x20
    dba4:	str	x0, [x19, #16]
    dba8:	add	x21, x21, x20
    dbac:	cmp	x21, x23
    dbb0:	b.eq	dbf4 <gzgets@@Base+0x1b4>  // b.none
    dbb4:	strb	wzr, [x21]
    dbb8:	mov	x0, x23
    dbbc:	ldp	x21, x22, [sp, #32]
    dbc0:	ldp	x25, x26, [sp, #64]
    dbc4:	ldp	x19, x20, [sp, #16]
    dbc8:	ldp	x23, x24, [sp, #48]
    dbcc:	ldp	x29, x30, [sp], #80
    dbd0:	ret
    dbd4:	mov	x0, #0x0                   	// #0
    dbd8:	ret
    dbdc:	mov	x0, #0x0                   	// #0
    dbe0:	b	dbc4 <gzgets@@Base+0x184>
    dbe4:	mov	x0, #0x0                   	// #0
    dbe8:	ldp	x21, x22, [sp, #32]
    dbec:	ldp	x25, x26, [sp, #64]
    dbf0:	b	dbc4 <gzgets@@Base+0x184>
    dbf4:	mov	x0, #0x0                   	// #0
    dbf8:	ldp	x21, x22, [sp, #32]
    dbfc:	ldp	x25, x26, [sp, #64]
    dc00:	b	dbc4 <gzgets@@Base+0x184>

000000000000dc04 <gzdirect@@ZLIB_1.2.2.3>:
    dc04:	cbz	x0, dc54 <gzdirect@@ZLIB_1.2.2.3+0x50>
    dc08:	stp	x29, x30, [sp, #-32]!
    dc0c:	mov	x29, sp
    dc10:	str	x19, [sp, #16]
    dc14:	mov	x19, x0
    dc18:	ldr	w1, [x0, #24]
    dc1c:	mov	w0, #0x1c4f                	// #7247
    dc20:	cmp	w1, w0
    dc24:	b.eq	dc38 <gzdirect@@ZLIB_1.2.2.3+0x34>  // b.none
    dc28:	ldr	w0, [x19, #64]
    dc2c:	ldr	x19, [sp, #16]
    dc30:	ldp	x29, x30, [sp], #32
    dc34:	ret
    dc38:	ldr	w0, [x19, #68]
    dc3c:	cbnz	w0, dc28 <gzdirect@@ZLIB_1.2.2.3+0x24>
    dc40:	ldr	w0, [x19]
    dc44:	cbnz	w0, dc28 <gzdirect@@ZLIB_1.2.2.3+0x24>
    dc48:	mov	x0, x19
    dc4c:	bl	d0d0 <gzseek@@Base+0x184>
    dc50:	b	dc28 <gzdirect@@ZLIB_1.2.2.3+0x24>
    dc54:	mov	w0, #0x0                   	// #0
    dc58:	ret

000000000000dc5c <gzclose_r@@ZLIB_1.2.3.5>:
    dc5c:	stp	x29, x30, [sp, #-48]!
    dc60:	mov	x29, sp
    dc64:	stp	x19, x20, [sp, #16]
    dc68:	cbz	x0, dcfc <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    dc6c:	mov	x19, x0
    dc70:	ldr	w1, [x0, #24]
    dc74:	mov	w0, #0x1c4f                	// #7247
    dc78:	cmp	w1, w0
    dc7c:	b.ne	dd04 <gzclose_r@@ZLIB_1.2.3.5+0xa8>  // b.any
    dc80:	str	x21, [sp, #32]
    dc84:	ldr	w0, [x19, #40]
    dc88:	cbnz	w0, dce0 <gzclose_r@@ZLIB_1.2.3.5+0x84>
    dc8c:	ldr	w20, [x19, #108]
    dc90:	cmn	w20, #0x5
    dc94:	csel	w20, w20, wzr, eq  // eq = none
    dc98:	mov	x2, #0x0                   	// #0
    dc9c:	mov	w1, #0x0                   	// #0
    dca0:	mov	x0, x19
    dca4:	bl	c788 <gzerror@@Base+0x60>
    dca8:	ldr	x0, [x19, #32]
    dcac:	bl	2570 <free@plt>
    dcb0:	ldr	w0, [x19, #28]
    dcb4:	bl	2510 <close@plt>
    dcb8:	mov	w21, w0
    dcbc:	mov	x0, x19
    dcc0:	bl	2570 <free@plt>
    dcc4:	cmp	w21, #0x0
    dcc8:	csinv	w20, w20, wzr, eq  // eq = none
    dccc:	ldr	x21, [sp, #32]
    dcd0:	mov	w0, w20
    dcd4:	ldp	x19, x20, [sp, #16]
    dcd8:	ldp	x29, x30, [sp], #48
    dcdc:	ret
    dce0:	add	x0, x19, #0x78
    dce4:	bl	2550 <inflateEnd@plt>
    dce8:	ldr	x0, [x19, #56]
    dcec:	bl	2570 <free@plt>
    dcf0:	ldr	x0, [x19, #48]
    dcf4:	bl	2570 <free@plt>
    dcf8:	b	dc8c <gzclose_r@@ZLIB_1.2.3.5+0x30>
    dcfc:	mov	w20, #0xfffffffe            	// #-2
    dd00:	b	dcd0 <gzclose_r@@ZLIB_1.2.3.5+0x74>
    dd04:	mov	w20, #0xfffffffe            	// #-2
    dd08:	b	dcd0 <gzclose_r@@ZLIB_1.2.3.5+0x74>
    dd0c:	stp	x29, x30, [sp, #-48]!
    dd10:	mov	x29, sp
    dd14:	stp	x19, x20, [sp, #16]
    dd18:	str	x21, [sp, #32]
    dd1c:	mov	x19, x0
    dd20:	ldr	w21, [x0, #44]
    dd24:	lsl	w0, w21, #1
    dd28:	bl	2460 <malloc@plt>
    dd2c:	str	x0, [x19, #48]
    dd30:	cbz	x0, dd70 <gzclose_r@@ZLIB_1.2.3.5+0x114>
    dd34:	mov	x20, x0
    dd38:	ldr	w0, [x19, #64]
    dd3c:	cbz	w0, dd8c <gzclose_r@@ZLIB_1.2.3.5+0x130>
    dd40:	ldr	w1, [x19, #44]
    dd44:	str	w1, [x19, #40]
    dd48:	ldr	w0, [x19, #64]
    dd4c:	cbnz	w0, de2c <gzclose_r@@ZLIB_1.2.3.5+0x1d0>
    dd50:	str	w1, [x19, #152]
    dd54:	ldr	x1, [x19, #56]
    dd58:	str	x1, [x19, #144]
    dd5c:	str	x1, [x19, #8]
    dd60:	ldp	x19, x20, [sp, #16]
    dd64:	ldr	x21, [sp, #32]
    dd68:	ldp	x29, x30, [sp], #48
    dd6c:	ret
    dd70:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    dd74:	add	x2, x2, #0x9f8
    dd78:	mov	w1, #0xfffffffc            	// #-4
    dd7c:	mov	x0, x19
    dd80:	bl	c788 <gzerror@@Base+0x60>
    dd84:	mov	w0, #0xffffffff            	// #-1
    dd88:	b	dd60 <gzclose_r@@ZLIB_1.2.3.5+0x104>
    dd8c:	mov	w0, w21
    dd90:	bl	2460 <malloc@plt>
    dd94:	str	x0, [x19, #56]
    dd98:	cbz	x0, dddc <gzclose_r@@ZLIB_1.2.3.5+0x180>
    dd9c:	add	x0, x19, #0x78
    dda0:	str	xzr, [x0, #64]
    dda4:	str	xzr, [x0, #72]
    dda8:	str	xzr, [x0, #80]
    ddac:	mov	w7, #0x70                  	// #112
    ddb0:	adrp	x6, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    ddb4:	add	x6, x6, #0x960
    ddb8:	ldr	w5, [x19, #92]
    ddbc:	mov	w4, #0x8                   	// #8
    ddc0:	mov	w3, #0x1f                  	// #31
    ddc4:	mov	w2, w4
    ddc8:	ldr	w1, [x19, #88]
    ddcc:	bl	24d0 <deflateInit2_@plt>
    ddd0:	cbnz	w0, de00 <gzclose_r@@ZLIB_1.2.3.5+0x1a4>
    ddd4:	str	xzr, [x19, #120]
    ddd8:	b	dd40 <gzclose_r@@ZLIB_1.2.3.5+0xe4>
    dddc:	mov	x0, x20
    dde0:	bl	2570 <free@plt>
    dde4:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    dde8:	add	x2, x2, #0x9f8
    ddec:	mov	w1, #0xfffffffc            	// #-4
    ddf0:	mov	x0, x19
    ddf4:	bl	c788 <gzerror@@Base+0x60>
    ddf8:	mov	w0, #0xffffffff            	// #-1
    ddfc:	b	dd60 <gzclose_r@@ZLIB_1.2.3.5+0x104>
    de00:	ldr	x0, [x19, #56]
    de04:	bl	2570 <free@plt>
    de08:	ldr	x0, [x19, #48]
    de0c:	bl	2570 <free@plt>
    de10:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    de14:	add	x2, x2, #0x9f8
    de18:	mov	w1, #0xfffffffc            	// #-4
    de1c:	mov	x0, x19
    de20:	bl	c788 <gzerror@@Base+0x60>
    de24:	mov	w0, #0xffffffff            	// #-1
    de28:	b	dd60 <gzclose_r@@ZLIB_1.2.3.5+0x104>
    de2c:	mov	w0, #0x0                   	// #0
    de30:	b	dd60 <gzclose_r@@ZLIB_1.2.3.5+0x104>
    de34:	stp	x29, x30, [sp, #-64]!
    de38:	mov	x29, sp
    de3c:	stp	x19, x20, [sp, #16]
    de40:	stp	x21, x22, [sp, #32]
    de44:	mov	x19, x0
    de48:	mov	w21, w1
    de4c:	ldr	w0, [x0, #40]
    de50:	cbz	w0, dea4 <gzclose_r@@ZLIB_1.2.3.5+0x248>
    de54:	ldr	w22, [x19, #64]
    de58:	cbz	w22, dee0 <gzclose_r@@ZLIB_1.2.3.5+0x284>
    de5c:	ldr	w2, [x19, #128]
    de60:	cbz	w2, df6c <gzclose_r@@ZLIB_1.2.3.5+0x310>
    de64:	mov	w20, #0x40000000            	// #1073741824
    de68:	cmp	w2, w20
    de6c:	csel	w2, w2, w20, ls  // ls = plast
    de70:	ldr	x1, [x19, #120]
    de74:	ldr	w0, [x19, #28]
    de78:	bl	2530 <write@plt>
    de7c:	tbnz	w0, #31, debc <gzclose_r@@ZLIB_1.2.3.5+0x260>
    de80:	ldr	w2, [x19, #128]
    de84:	sub	w2, w2, w0
    de88:	str	w2, [x19, #128]
    de8c:	ldr	x1, [x19, #120]
    de90:	add	x0, x1, w0, sxtw
    de94:	str	x0, [x19, #120]
    de98:	cbnz	w2, de68 <gzclose_r@@ZLIB_1.2.3.5+0x20c>
    de9c:	mov	w22, #0x0                   	// #0
    dea0:	b	df18 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
    dea4:	mov	x0, x19
    dea8:	bl	dd0c <gzclose_r@@ZLIB_1.2.3.5+0xb0>
    deac:	mov	w22, w0
    deb0:	cmn	w0, #0x1
    deb4:	b.ne	de54 <gzclose_r@@ZLIB_1.2.3.5+0x1f8>  // b.any
    deb8:	b	df18 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
    debc:	bl	2650 <__errno_location@plt>
    dec0:	ldr	w0, [x0]
    dec4:	bl	2500 <strerror@plt>
    dec8:	mov	x2, x0
    decc:	mov	w1, #0xffffffff            	// #-1
    ded0:	mov	x0, x19
    ded4:	bl	c788 <gzerror@@Base+0x60>
    ded8:	mov	w22, #0xffffffff            	// #-1
    dedc:	b	df18 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
    dee0:	stp	x23, x24, [sp, #48]
    dee4:	add	x23, x19, #0x78
    dee8:	mov	w0, w22
    deec:	mov	x20, #0x40000000            	// #1073741824
    def0:	b	dff8 <gzclose_r@@ZLIB_1.2.3.5+0x39c>
    def4:	bl	2650 <__errno_location@plt>
    def8:	ldr	w0, [x0]
    defc:	bl	2500 <strerror@plt>
    df00:	mov	x2, x0
    df04:	mov	w1, #0xffffffff            	// #-1
    df08:	mov	x0, x19
    df0c:	bl	c788 <gzerror@@Base+0x60>
    df10:	mov	w22, #0xffffffff            	// #-1
    df14:	ldp	x23, x24, [sp, #48]
    df18:	mov	w0, w22
    df1c:	ldp	x19, x20, [sp, #16]
    df20:	ldp	x21, x22, [sp, #32]
    df24:	ldp	x29, x30, [sp], #64
    df28:	ret
    df2c:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    df30:	add	x2, x2, #0xae8
    df34:	mov	w1, #0xfffffffe            	// #-2
    df38:	mov	x0, x19
    df3c:	bl	c788 <gzerror@@Base+0x60>
    df40:	mov	w22, #0xffffffff            	// #-1
    df44:	ldp	x23, x24, [sp, #48]
    df48:	b	df18 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
    df4c:	cmp	w21, #0x4
    df50:	b.eq	df5c <gzclose_r@@ZLIB_1.2.3.5+0x300>  // b.none
    df54:	ldp	x23, x24, [sp, #48]
    df58:	b	df18 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
    df5c:	mov	x0, x23
    df60:	bl	2480 <deflateReset@plt>
    df64:	ldp	x23, x24, [sp, #48]
    df68:	b	df18 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
    df6c:	mov	w22, #0x0                   	// #0
    df70:	b	df18 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
    df74:	ldr	x2, [x19, #144]
    df78:	ldr	x1, [x19, #8]
    df7c:	cmp	x2, x1
    df80:	b.ls	dfc0 <gzclose_r@@ZLIB_1.2.3.5+0x364>  // b.plast
    df84:	sub	x2, x2, x1
    df88:	cmp	x2, x20
    df8c:	csel	x2, x2, x20, le
    df90:	mov	w2, w2
    df94:	ldr	w0, [x19, #28]
    df98:	bl	2530 <write@plt>
    df9c:	tbnz	w0, #31, def4 <gzclose_r@@ZLIB_1.2.3.5+0x298>
    dfa0:	ldr	x1, [x19, #8]
    dfa4:	add	x1, x1, w0, sxtw
    dfa8:	str	x1, [x19, #8]
    dfac:	ldr	x2, [x19, #144]
    dfb0:	cmp	x1, x2
    dfb4:	b.cc	df84 <gzclose_r@@ZLIB_1.2.3.5+0x328>  // b.lo, b.ul, b.last
    dfb8:	ldr	w0, [x19, #152]
    dfbc:	cbnz	w0, dfd4 <gzclose_r@@ZLIB_1.2.3.5+0x378>
    dfc0:	ldr	w1, [x19, #40]
    dfc4:	str	w1, [x19, #152]
    dfc8:	ldr	x1, [x19, #56]
    dfcc:	str	x1, [x19, #144]
    dfd0:	str	x1, [x19, #8]
    dfd4:	ldr	w24, [x19, #152]
    dfd8:	mov	w1, w21
    dfdc:	mov	x0, x23
    dfe0:	bl	2490 <deflate@plt>
    dfe4:	cmn	w0, #0x2
    dfe8:	b.eq	df2c <gzclose_r@@ZLIB_1.2.3.5+0x2d0>  // b.none
    dfec:	ldr	w1, [x19, #152]
    dff0:	cmp	w1, w24
    dff4:	b.eq	df4c <gzclose_r@@ZLIB_1.2.3.5+0x2f0>  // b.none
    dff8:	ldr	w1, [x19, #152]
    dffc:	cbz	w1, df74 <gzclose_r@@ZLIB_1.2.3.5+0x318>
    e000:	cbz	w21, dfd4 <gzclose_r@@ZLIB_1.2.3.5+0x378>
    e004:	cmp	w21, #0x4
    e008:	ccmp	w0, #0x1, #0x4, eq  // eq = none
    e00c:	b.ne	dfd4 <gzclose_r@@ZLIB_1.2.3.5+0x378>  // b.any
    e010:	ldr	x2, [x19, #144]
    e014:	ldr	x1, [x19, #8]
    e018:	cmp	x2, x1
    e01c:	b.hi	df84 <gzclose_r@@ZLIB_1.2.3.5+0x328>  // b.pmore
    e020:	b	dfd4 <gzclose_r@@ZLIB_1.2.3.5+0x378>
    e024:	stp	x29, x30, [sp, #-48]!
    e028:	mov	x29, sp
    e02c:	stp	x19, x20, [sp, #16]
    e030:	str	x21, [sp, #32]
    e034:	mov	x20, x0
    e038:	mov	x21, x1
    e03c:	ldr	w0, [x0, #128]
    e040:	cbnz	w0, e050 <gzclose_r@@ZLIB_1.2.3.5+0x3f4>
    e044:	cbz	x21, e0c8 <gzclose_r@@ZLIB_1.2.3.5+0x46c>
    e048:	mov	w0, #0x1                   	// #1
    e04c:	b	e0b4 <gzclose_r@@ZLIB_1.2.3.5+0x458>
    e050:	mov	w1, #0x0                   	// #0
    e054:	mov	x0, x20
    e058:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e05c:	cmn	w0, #0x1
    e060:	b.ne	e044 <gzclose_r@@ZLIB_1.2.3.5+0x3e8>  // b.any
    e064:	b	e0cc <gzclose_r@@ZLIB_1.2.3.5+0x470>
    e068:	mov	w2, w19
    e06c:	mov	w1, #0x0                   	// #0
    e070:	ldr	x0, [x20, #48]
    e074:	bl	24a0 <memset@plt>
    e078:	str	w19, [x20, #128]
    e07c:	ldr	x0, [x20, #48]
    e080:	str	x0, [x20, #120]
    e084:	mov	w19, w19
    e088:	ldr	x0, [x20, #16]
    e08c:	add	x0, x0, x19
    e090:	str	x0, [x20, #16]
    e094:	mov	w1, #0x0                   	// #0
    e098:	mov	x0, x20
    e09c:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e0a0:	cmn	w0, #0x1
    e0a4:	b.eq	e0cc <gzclose_r@@ZLIB_1.2.3.5+0x470>  // b.none
    e0a8:	mov	w0, #0x0                   	// #0
    e0ac:	subs	x21, x21, x19
    e0b0:	b.eq	e0cc <gzclose_r@@ZLIB_1.2.3.5+0x470>  // b.none
    e0b4:	ldr	w19, [x20, #40]
    e0b8:	cmp	x21, w19, uxtw
    e0bc:	csel	w19, w19, w21, ge  // ge = tcont
    e0c0:	cbz	w0, e078 <gzclose_r@@ZLIB_1.2.3.5+0x41c>
    e0c4:	b	e068 <gzclose_r@@ZLIB_1.2.3.5+0x40c>
    e0c8:	mov	w0, #0x0                   	// #0
    e0cc:	ldp	x19, x20, [sp, #16]
    e0d0:	ldr	x21, [sp, #32]
    e0d4:	ldp	x29, x30, [sp], #48
    e0d8:	ret
    e0dc:	stp	x29, x30, [sp, #-64]!
    e0e0:	mov	x29, sp
    e0e4:	stp	x23, x24, [sp, #48]
    e0e8:	mov	x23, x2
    e0ec:	cbz	x2, e1f4 <gzclose_r@@ZLIB_1.2.3.5+0x598>
    e0f0:	stp	x19, x20, [sp, #16]
    e0f4:	stp	x21, x22, [sp, #32]
    e0f8:	mov	x19, x0
    e0fc:	mov	x22, x1
    e100:	ldr	w0, [x0, #40]
    e104:	cbz	w0, e124 <gzclose_r@@ZLIB_1.2.3.5+0x4c8>
    e108:	ldr	w0, [x19, #104]
    e10c:	cbnz	w0, e144 <gzclose_r@@ZLIB_1.2.3.5+0x4e8>
    e110:	ldr	w0, [x19, #40]
    e114:	cmp	x0, x23
    e118:	b.ls	e204 <gzclose_r@@ZLIB_1.2.3.5+0x5a8>  // b.plast
    e11c:	mov	x21, x23
    e120:	b	e180 <gzclose_r@@ZLIB_1.2.3.5+0x524>
    e124:	mov	x0, x19
    e128:	bl	dd0c <gzclose_r@@ZLIB_1.2.3.5+0xb0>
    e12c:	cmn	w0, #0x1
    e130:	b.ne	e108 <gzclose_r@@ZLIB_1.2.3.5+0x4ac>  // b.any
    e134:	mov	x23, #0x0                   	// #0
    e138:	ldp	x19, x20, [sp, #16]
    e13c:	ldp	x21, x22, [sp, #32]
    e140:	b	e1f4 <gzclose_r@@ZLIB_1.2.3.5+0x598>
    e144:	str	wzr, [x19, #104]
    e148:	ldr	x1, [x19, #96]
    e14c:	mov	x0, x19
    e150:	bl	e024 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>
    e154:	cmn	w0, #0x1
    e158:	b.ne	e110 <gzclose_r@@ZLIB_1.2.3.5+0x4b4>  // b.any
    e15c:	mov	x23, #0x0                   	// #0
    e160:	ldp	x19, x20, [sp, #16]
    e164:	ldp	x21, x22, [sp, #32]
    e168:	b	e1f4 <gzclose_r@@ZLIB_1.2.3.5+0x598>
    e16c:	mov	w1, #0x0                   	// #0
    e170:	mov	x0, x19
    e174:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e178:	cmn	w0, #0x1
    e17c:	b.eq	e284 <gzclose_r@@ZLIB_1.2.3.5+0x628>  // b.none
    e180:	ldr	w3, [x19, #128]
    e184:	cbnz	w3, e190 <gzclose_r@@ZLIB_1.2.3.5+0x534>
    e188:	ldr	x0, [x19, #48]
    e18c:	str	x0, [x19, #120]
    e190:	ldr	x4, [x19, #48]
    e194:	ldr	x0, [x19, #120]
    e198:	add	x3, x0, w3, uxtw
    e19c:	sub	x0, x3, x4
    e1a0:	ldr	w20, [x19, #40]
    e1a4:	sub	w1, w20, w0
    e1a8:	sub	w20, w20, w0
    e1ac:	cmp	x1, x21
    e1b0:	csel	w24, w21, w20, hi  // hi = pmore
    e1b4:	csel	w20, w21, w20, hi  // hi = pmore
    e1b8:	mov	x2, x20
    e1bc:	mov	x1, x22
    e1c0:	add	x0, x4, w0, uxtw
    e1c4:	bl	23a0 <memcpy@plt>
    e1c8:	ldr	w0, [x19, #128]
    e1cc:	add	w0, w0, w24
    e1d0:	str	w0, [x19, #128]
    e1d4:	ldr	x0, [x19, #16]
    e1d8:	add	x0, x0, x20
    e1dc:	str	x0, [x19, #16]
    e1e0:	add	x22, x22, x20
    e1e4:	subs	x21, x21, x20
    e1e8:	b.ne	e16c <gzclose_r@@ZLIB_1.2.3.5+0x510>  // b.any
    e1ec:	ldp	x19, x20, [sp, #16]
    e1f0:	ldp	x21, x22, [sp, #32]
    e1f4:	mov	x0, x23
    e1f8:	ldp	x23, x24, [sp, #48]
    e1fc:	ldp	x29, x30, [sp], #64
    e200:	ret
    e204:	ldr	w0, [x19, #128]
    e208:	cbnz	w0, e260 <gzclose_r@@ZLIB_1.2.3.5+0x604>
    e20c:	str	x22, [x19, #120]
    e210:	mov	x20, x23
    e214:	mov	x24, #0xfffffffe            	// #4294967294
    e218:	mov	x22, #0xffffffff            	// #4294967295
    e21c:	cmp	x20, x24
    e220:	csel	x0, x20, x22, ls  // ls = plast
    e224:	str	w0, [x19, #128]
    e228:	and	x21, x0, #0xffffffff
    e22c:	ldr	x1, [x19, #16]
    e230:	add	x0, x1, w0, uxtw
    e234:	str	x0, [x19, #16]
    e238:	mov	w1, #0x0                   	// #0
    e23c:	mov	x0, x19
    e240:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e244:	cmn	w0, #0x1
    e248:	b.eq	e294 <gzclose_r@@ZLIB_1.2.3.5+0x638>  // b.none
    e24c:	subs	x20, x20, x21
    e250:	b.ne	e21c <gzclose_r@@ZLIB_1.2.3.5+0x5c0>  // b.any
    e254:	ldp	x19, x20, [sp, #16]
    e258:	ldp	x21, x22, [sp, #32]
    e25c:	b	e1f4 <gzclose_r@@ZLIB_1.2.3.5+0x598>
    e260:	mov	w1, #0x0                   	// #0
    e264:	mov	x0, x19
    e268:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e26c:	cmn	w0, #0x1
    e270:	b.ne	e20c <gzclose_r@@ZLIB_1.2.3.5+0x5b0>  // b.any
    e274:	mov	x23, #0x0                   	// #0
    e278:	ldp	x19, x20, [sp, #16]
    e27c:	ldp	x21, x22, [sp, #32]
    e280:	b	e1f4 <gzclose_r@@ZLIB_1.2.3.5+0x598>
    e284:	mov	x23, #0x0                   	// #0
    e288:	ldp	x19, x20, [sp, #16]
    e28c:	ldp	x21, x22, [sp, #32]
    e290:	b	e1f4 <gzclose_r@@ZLIB_1.2.3.5+0x598>
    e294:	mov	x23, #0x0                   	// #0
    e298:	ldp	x19, x20, [sp, #16]
    e29c:	ldp	x21, x22, [sp, #32]
    e2a0:	b	e1f4 <gzclose_r@@ZLIB_1.2.3.5+0x598>

000000000000e2a4 <gzwrite@@Base>:
    e2a4:	stp	x29, x30, [sp, #-32]!
    e2a8:	mov	x29, sp
    e2ac:	str	x19, [sp, #16]
    e2b0:	cbz	x0, e304 <gzwrite@@Base+0x60>
    e2b4:	ldr	w4, [x0, #24]
    e2b8:	mov	w19, #0x0                   	// #0
    e2bc:	mov	w3, #0x79b1                	// #31153
    e2c0:	cmp	w4, w3
    e2c4:	b.ne	e2e0 <gzwrite@@Base+0x3c>  // b.any
    e2c8:	ldr	w19, [x0, #108]
    e2cc:	cbnz	w19, e30c <gzwrite@@Base+0x68>
    e2d0:	tbnz	w2, #31, e2f0 <gzwrite@@Base+0x4c>
    e2d4:	mov	w2, w2
    e2d8:	bl	e0dc <gzclose_r@@ZLIB_1.2.3.5+0x480>
    e2dc:	mov	w19, w0
    e2e0:	mov	w0, w19
    e2e4:	ldr	x19, [sp, #16]
    e2e8:	ldp	x29, x30, [sp], #32
    e2ec:	ret
    e2f0:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    e2f4:	add	x2, x2, #0xb10
    e2f8:	mov	w1, #0xfffffffd            	// #-3
    e2fc:	bl	c788 <gzerror@@Base+0x60>
    e300:	b	e2e0 <gzwrite@@Base+0x3c>
    e304:	mov	w19, #0x0                   	// #0
    e308:	b	e2e0 <gzwrite@@Base+0x3c>
    e30c:	mov	w19, #0x0                   	// #0
    e310:	b	e2e0 <gzwrite@@Base+0x3c>

000000000000e314 <gzfwrite@@ZLIB_1.2.9>:
    e314:	cbz	x3, e3a0 <gzfwrite@@ZLIB_1.2.9+0x8c>
    e318:	stp	x29, x30, [sp, #-32]!
    e31c:	mov	x29, sp
    e320:	str	x19, [sp, #16]
    e324:	mov	x4, x0
    e328:	mov	x19, x1
    e32c:	ldr	w5, [x3, #24]
    e330:	mov	x0, #0x0                   	// #0
    e334:	mov	w1, #0x79b1                	// #31153
    e338:	cmp	w5, w1
    e33c:	b.ne	e378 <gzfwrite@@ZLIB_1.2.9+0x64>  // b.any
    e340:	ldr	w1, [x3, #108]
    e344:	cbnz	w1, e378 <gzfwrite@@ZLIB_1.2.9+0x64>
    e348:	mov	x0, x19
    e34c:	cbz	x19, e378 <gzfwrite@@ZLIB_1.2.9+0x64>
    e350:	mul	x0, x2, x19
    e354:	udiv	x1, x0, x19
    e358:	cmp	x1, x2
    e35c:	b.ne	e384 <gzfwrite@@ZLIB_1.2.9+0x70>  // b.any
    e360:	cbz	x0, e378 <gzfwrite@@ZLIB_1.2.9+0x64>
    e364:	mov	x2, x0
    e368:	mov	x1, x4
    e36c:	mov	x0, x3
    e370:	bl	e0dc <gzclose_r@@ZLIB_1.2.3.5+0x480>
    e374:	udiv	x0, x0, x19
    e378:	ldr	x19, [sp, #16]
    e37c:	ldp	x29, x30, [sp], #32
    e380:	ret
    e384:	adrp	x2, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x36f0>
    e388:	add	x2, x2, #0xaa0
    e38c:	mov	w1, #0xfffffffe            	// #-2
    e390:	mov	x0, x3
    e394:	bl	c788 <gzerror@@Base+0x60>
    e398:	mov	x0, #0x0                   	// #0
    e39c:	b	e378 <gzfwrite@@ZLIB_1.2.9+0x64>
    e3a0:	mov	x0, #0x0                   	// #0
    e3a4:	ret

000000000000e3a8 <gzputc@@Base>:
    e3a8:	cbz	x0, e47c <gzputc@@Base+0xd4>
    e3ac:	stp	x29, x30, [sp, #-48]!
    e3b0:	mov	x29, sp
    e3b4:	stp	x19, x20, [sp, #16]
    e3b8:	mov	x19, x0
    e3bc:	mov	w20, w1
    e3c0:	ldr	w1, [x0, #24]
    e3c4:	mov	w0, #0x79b1                	// #31153
    e3c8:	cmp	w1, w0
    e3cc:	b.ne	e484 <gzputc@@Base+0xdc>  // b.any
    e3d0:	ldr	w0, [x19, #108]
    e3d4:	cbnz	w0, e48c <gzputc@@Base+0xe4>
    e3d8:	ldr	w0, [x19, #104]
    e3dc:	cbnz	w0, e43c <gzputc@@Base+0x94>
    e3e0:	ldr	w1, [x19, #40]
    e3e4:	cbz	w1, e410 <gzputc@@Base+0x68>
    e3e8:	ldr	w0, [x19, #128]
    e3ec:	cbnz	w0, e3f8 <gzputc@@Base+0x50>
    e3f0:	ldr	x2, [x19, #48]
    e3f4:	str	x2, [x19, #120]
    e3f8:	ldr	x2, [x19, #48]
    e3fc:	ldr	x3, [x19, #120]
    e400:	add	x0, x3, w0, uxtw
    e404:	sub	x0, x0, x2
    e408:	cmp	w1, w0
    e40c:	b.hi	e458 <gzputc@@Base+0xb0>  // b.pmore
    e410:	strb	w20, [sp, #40]
    e414:	mov	x2, #0x1                   	// #1
    e418:	add	x1, sp, #0x28
    e41c:	mov	x0, x19
    e420:	bl	e0dc <gzclose_r@@ZLIB_1.2.3.5+0x480>
    e424:	cmp	x0, #0x1
    e428:	b.ne	e494 <gzputc@@Base+0xec>  // b.any
    e42c:	and	w0, w20, #0xff
    e430:	ldp	x19, x20, [sp, #16]
    e434:	ldp	x29, x30, [sp], #48
    e438:	ret
    e43c:	str	wzr, [x19, #104]
    e440:	ldr	x1, [x19, #96]
    e444:	mov	x0, x19
    e448:	bl	e024 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>
    e44c:	cmn	w0, #0x1
    e450:	b.ne	e3e0 <gzputc@@Base+0x38>  // b.any
    e454:	b	e430 <gzputc@@Base+0x88>
    e458:	strb	w20, [x2, w0, uxtw]
    e45c:	ldr	w0, [x19, #128]
    e460:	add	w0, w0, #0x1
    e464:	str	w0, [x19, #128]
    e468:	ldr	x0, [x19, #16]
    e46c:	add	x0, x0, #0x1
    e470:	str	x0, [x19, #16]
    e474:	and	w0, w20, #0xff
    e478:	b	e430 <gzputc@@Base+0x88>
    e47c:	mov	w0, #0xffffffff            	// #-1
    e480:	ret
    e484:	mov	w0, #0xffffffff            	// #-1
    e488:	b	e430 <gzputc@@Base+0x88>
    e48c:	mov	w0, #0xffffffff            	// #-1
    e490:	b	e430 <gzputc@@Base+0x88>
    e494:	mov	w0, #0xffffffff            	// #-1
    e498:	b	e430 <gzputc@@Base+0x88>

000000000000e49c <gzputs@@Base>:
    e49c:	cbz	x0, e508 <gzputs@@Base+0x6c>
    e4a0:	stp	x29, x30, [sp, #-48]!
    e4a4:	mov	x29, sp
    e4a8:	stp	x19, x20, [sp, #16]
    e4ac:	mov	x19, x0
    e4b0:	mov	x20, x1
    e4b4:	ldr	w1, [x0, #24]
    e4b8:	mov	w0, #0x79b1                	// #31153
    e4bc:	cmp	w1, w0
    e4c0:	b.ne	e510 <gzputs@@Base+0x74>  // b.any
    e4c4:	ldr	w0, [x19, #108]
    e4c8:	cbnz	w0, e518 <gzputs@@Base+0x7c>
    e4cc:	str	x21, [sp, #32]
    e4d0:	mov	x0, x20
    e4d4:	bl	23e0 <strlen@plt>
    e4d8:	mov	x21, x0
    e4dc:	mov	x2, x0
    e4e0:	mov	x1, x20
    e4e4:	mov	x0, x19
    e4e8:	bl	e0dc <gzclose_r@@ZLIB_1.2.3.5+0x480>
    e4ec:	cmp	w0, #0x0
    e4f0:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    e4f4:	csinv	w0, w0, wzr, eq  // eq = none
    e4f8:	ldr	x21, [sp, #32]
    e4fc:	ldp	x19, x20, [sp, #16]
    e500:	ldp	x29, x30, [sp], #48
    e504:	ret
    e508:	mov	w0, #0xffffffff            	// #-1
    e50c:	ret
    e510:	mov	w0, #0xffffffff            	// #-1
    e514:	b	e4fc <gzputs@@Base+0x60>
    e518:	mov	w0, #0xffffffff            	// #-1
    e51c:	b	e4fc <gzputs@@Base+0x60>

000000000000e520 <gzvprintf@@ZLIB_1.2.7.1>:
    e520:	stp	x29, x30, [sp, #-96]!
    e524:	mov	x29, sp
    e528:	stp	x19, x20, [sp, #16]
    e52c:	cbz	x0, e698 <gzvprintf@@ZLIB_1.2.7.1+0x178>
    e530:	stp	x21, x22, [sp, #32]
    e534:	mov	x19, x0
    e538:	mov	x22, x1
    e53c:	mov	x20, x2
    e540:	ldr	w1, [x0, #24]
    e544:	mov	w0, #0x79b1                	// #31153
    e548:	cmp	w1, w0
    e54c:	b.ne	e6a0 <gzvprintf@@ZLIB_1.2.7.1+0x180>  // b.any
    e550:	ldr	w21, [x19, #108]
    e554:	cbnz	w21, e6ac <gzvprintf@@ZLIB_1.2.7.1+0x18c>
    e558:	ldr	w0, [x19, #40]
    e55c:	cbz	w0, e600 <gzvprintf@@ZLIB_1.2.7.1+0xe0>
    e560:	ldr	w0, [x19, #104]
    e564:	cbnz	w0, e61c <gzvprintf@@ZLIB_1.2.7.1+0xfc>
    e568:	str	x23, [sp, #48]
    e56c:	ldr	w0, [x19, #128]
    e570:	cbnz	w0, e57c <gzvprintf@@ZLIB_1.2.7.1+0x5c>
    e574:	ldr	x1, [x19, #48]
    e578:	str	x1, [x19, #120]
    e57c:	ldr	x23, [x19, #120]
    e580:	add	x23, x23, w0, uxtw
    e584:	ldr	w0, [x19, #40]
    e588:	sub	w0, w0, #0x1
    e58c:	strb	wzr, [x23, w0, uxtw]
    e590:	ldp	x0, x1, [x20]
    e594:	stp	x0, x1, [sp, #64]
    e598:	ldp	x0, x1, [x20, #16]
    e59c:	stp	x0, x1, [sp, #80]
    e5a0:	add	x3, sp, #0x40
    e5a4:	mov	x2, x22
    e5a8:	ldr	w1, [x19, #40]
    e5ac:	mov	x0, x23
    e5b0:	bl	2620 <vsnprintf@plt>
    e5b4:	mov	w20, w0
    e5b8:	cbz	w0, e6d8 <gzvprintf@@ZLIB_1.2.7.1+0x1b8>
    e5bc:	ldr	w22, [x19, #40]
    e5c0:	cmp	w22, w0
    e5c4:	b.ls	e6b8 <gzvprintf@@ZLIB_1.2.7.1+0x198>  // b.plast
    e5c8:	sub	w1, w22, #0x1
    e5cc:	ldrb	w1, [x23, w1, uxtw]
    e5d0:	cbnz	w1, e6c8 <gzvprintf@@ZLIB_1.2.7.1+0x1a8>
    e5d4:	ldr	w21, [x19, #128]
    e5d8:	add	w21, w0, w21
    e5dc:	str	w21, [x19, #128]
    e5e0:	ldr	x0, [x19, #16]
    e5e4:	add	x0, x0, w20, sxtw
    e5e8:	str	x0, [x19, #16]
    e5ec:	cmp	w22, w21
    e5f0:	b.ls	e640 <gzvprintf@@ZLIB_1.2.7.1+0x120>  // b.plast
    e5f4:	ldp	x21, x22, [sp, #32]
    e5f8:	ldr	x23, [sp, #48]
    e5fc:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e600:	mov	x0, x19
    e604:	bl	dd0c <gzclose_r@@ZLIB_1.2.3.5+0xb0>
    e608:	cmn	w0, #0x1
    e60c:	b.ne	e560 <gzvprintf@@ZLIB_1.2.7.1+0x40>  // b.any
    e610:	ldr	w20, [x19, #108]
    e614:	ldp	x21, x22, [sp, #32]
    e618:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e61c:	str	wzr, [x19, #104]
    e620:	ldr	x1, [x19, #96]
    e624:	mov	x0, x19
    e628:	bl	e024 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>
    e62c:	cmn	w0, #0x1
    e630:	b.ne	e568 <gzvprintf@@ZLIB_1.2.7.1+0x48>  // b.any
    e634:	ldr	w20, [x19, #108]
    e638:	ldp	x21, x22, [sp, #32]
    e63c:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e640:	str	w22, [x19, #128]
    e644:	mov	w1, #0x0                   	// #0
    e648:	mov	x0, x19
    e64c:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e650:	cmn	w0, #0x1
    e654:	b.eq	e688 <gzvprintf@@ZLIB_1.2.7.1+0x168>  // b.none
    e658:	sub	w23, w21, w22
    e65c:	ldr	x0, [x19, #48]
    e660:	ldr	w1, [x19, #40]
    e664:	sub	w2, w21, w22
    e668:	add	x1, x0, x1
    e66c:	bl	23a0 <memcpy@plt>
    e670:	ldr	x0, [x19, #48]
    e674:	str	x0, [x19, #120]
    e678:	str	w23, [x19, #128]
    e67c:	ldp	x21, x22, [sp, #32]
    e680:	ldr	x23, [sp, #48]
    e684:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e688:	ldr	w20, [x19, #108]
    e68c:	ldp	x21, x22, [sp, #32]
    e690:	ldr	x23, [sp, #48]
    e694:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e698:	mov	w20, #0xfffffffe            	// #-2
    e69c:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e6a0:	mov	w20, #0xfffffffe            	// #-2
    e6a4:	ldp	x21, x22, [sp, #32]
    e6a8:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e6ac:	mov	w20, #0xfffffffe            	// #-2
    e6b0:	ldp	x21, x22, [sp, #32]
    e6b4:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e6b8:	mov	w20, w21
    e6bc:	ldp	x21, x22, [sp, #32]
    e6c0:	ldr	x23, [sp, #48]
    e6c4:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e6c8:	mov	w20, w21
    e6cc:	ldp	x21, x22, [sp, #32]
    e6d0:	ldr	x23, [sp, #48]
    e6d4:	b	e6e0 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
    e6d8:	ldp	x21, x22, [sp, #32]
    e6dc:	ldr	x23, [sp, #48]
    e6e0:	mov	w0, w20
    e6e4:	ldp	x19, x20, [sp, #16]
    e6e8:	ldp	x29, x30, [sp], #96
    e6ec:	ret

000000000000e6f0 <gzprintf@@Base>:
    e6f0:	stp	x29, x30, [sp, #-256]!
    e6f4:	mov	x29, sp
    e6f8:	str	x2, [sp, #208]
    e6fc:	str	x3, [sp, #216]
    e700:	str	x4, [sp, #224]
    e704:	str	x5, [sp, #232]
    e708:	str	x6, [sp, #240]
    e70c:	str	x7, [sp, #248]
    e710:	str	q0, [sp, #80]
    e714:	str	q1, [sp, #96]
    e718:	str	q2, [sp, #112]
    e71c:	str	q3, [sp, #128]
    e720:	str	q4, [sp, #144]
    e724:	str	q5, [sp, #160]
    e728:	str	q6, [sp, #176]
    e72c:	str	q7, [sp, #192]
    e730:	add	x2, sp, #0x100
    e734:	str	x2, [sp, #48]
    e738:	str	x2, [sp, #56]
    e73c:	add	x2, sp, #0xd0
    e740:	str	x2, [sp, #64]
    e744:	mov	w2, #0xffffffd0            	// #-48
    e748:	str	w2, [sp, #72]
    e74c:	mov	w2, #0xffffff80            	// #-128
    e750:	str	w2, [sp, #76]
    e754:	ldp	x2, x3, [sp, #48]
    e758:	stp	x2, x3, [sp, #16]
    e75c:	ldp	x2, x3, [sp, #64]
    e760:	stp	x2, x3, [sp, #32]
    e764:	add	x2, sp, #0x10
    e768:	bl	23c0 <gzvprintf@plt>
    e76c:	ldp	x29, x30, [sp], #256
    e770:	ret

000000000000e774 <gzflush@@Base>:
    e774:	cbz	x0, e7f0 <gzflush@@Base+0x7c>
    e778:	stp	x29, x30, [sp, #-32]!
    e77c:	mov	x29, sp
    e780:	stp	x19, x20, [sp, #16]
    e784:	mov	x19, x0
    e788:	mov	w20, w1
    e78c:	ldr	w1, [x0, #24]
    e790:	mov	w0, #0x79b1                	// #31153
    e794:	cmp	w1, w0
    e798:	b.ne	e7f8 <gzflush@@Base+0x84>  // b.any
    e79c:	ldr	w0, [x19, #108]
    e7a0:	cbnz	w0, e800 <gzflush@@Base+0x8c>
    e7a4:	cmp	w20, #0x4
    e7a8:	b.hi	e808 <gzflush@@Base+0x94>  // b.pmore
    e7ac:	ldr	w0, [x19, #104]
    e7b0:	cbz	w0, e7cc <gzflush@@Base+0x58>
    e7b4:	str	wzr, [x19, #104]
    e7b8:	ldr	x1, [x19, #96]
    e7bc:	mov	x0, x19
    e7c0:	bl	e024 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>
    e7c4:	cmn	w0, #0x1
    e7c8:	b.eq	e7e8 <gzflush@@Base+0x74>  // b.none
    e7cc:	mov	w1, w20
    e7d0:	mov	x0, x19
    e7d4:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e7d8:	ldr	w0, [x19, #108]
    e7dc:	ldp	x19, x20, [sp, #16]
    e7e0:	ldp	x29, x30, [sp], #32
    e7e4:	ret
    e7e8:	ldr	w0, [x19, #108]
    e7ec:	b	e7dc <gzflush@@Base+0x68>
    e7f0:	mov	w0, #0xfffffffe            	// #-2
    e7f4:	ret
    e7f8:	mov	w0, #0xfffffffe            	// #-2
    e7fc:	b	e7dc <gzflush@@Base+0x68>
    e800:	mov	w0, #0xfffffffe            	// #-2
    e804:	b	e7dc <gzflush@@Base+0x68>
    e808:	mov	w0, #0xfffffffe            	// #-2
    e80c:	b	e7dc <gzflush@@Base+0x68>

000000000000e810 <gzsetparams@@Base>:
    e810:	stp	x29, x30, [sp, #-48]!
    e814:	mov	x29, sp
    e818:	stp	x21, x22, [sp, #32]
    e81c:	cbz	x0, e8f0 <gzsetparams@@Base+0xe0>
    e820:	stp	x19, x20, [sp, #16]
    e824:	mov	x19, x0
    e828:	mov	w20, w1
    e82c:	mov	w21, w2
    e830:	ldr	w1, [x0, #24]
    e834:	mov	w0, #0x79b1                	// #31153
    e838:	cmp	w1, w0
    e83c:	b.ne	e8f8 <gzsetparams@@Base+0xe8>  // b.any
    e840:	ldr	w22, [x19, #108]
    e844:	cbnz	w22, e904 <gzsetparams@@Base+0xf4>
    e848:	ldr	w0, [x19, #88]
    e84c:	cmp	w0, w20
    e850:	b.eq	e8ac <gzsetparams@@Base+0x9c>  // b.none
    e854:	ldr	w0, [x19, #104]
    e858:	cbnz	w0, e8c0 <gzsetparams@@Base+0xb0>
    e85c:	ldr	w0, [x19, #40]
    e860:	cbz	w0, e890 <gzsetparams@@Base+0x80>
    e864:	ldr	w0, [x19, #128]
    e868:	cbz	w0, e880 <gzsetparams@@Base+0x70>
    e86c:	mov	w1, #0x5                   	// #5
    e870:	mov	x0, x19
    e874:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e878:	cmn	w0, #0x1
    e87c:	b.eq	e8e4 <gzsetparams@@Base+0xd4>  // b.none
    e880:	mov	w2, w21
    e884:	mov	w1, w20
    e888:	add	x0, x19, #0x78
    e88c:	bl	24e0 <deflateParams@plt>
    e890:	str	w20, [x19, #88]
    e894:	str	w21, [x19, #92]
    e898:	ldp	x19, x20, [sp, #16]
    e89c:	mov	w0, w22
    e8a0:	ldp	x21, x22, [sp, #32]
    e8a4:	ldp	x29, x30, [sp], #48
    e8a8:	ret
    e8ac:	ldr	w0, [x19, #92]
    e8b0:	cmp	w0, w2
    e8b4:	b.ne	e854 <gzsetparams@@Base+0x44>  // b.any
    e8b8:	ldp	x19, x20, [sp, #16]
    e8bc:	b	e89c <gzsetparams@@Base+0x8c>
    e8c0:	str	wzr, [x19, #104]
    e8c4:	ldr	x1, [x19, #96]
    e8c8:	mov	x0, x19
    e8cc:	bl	e024 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>
    e8d0:	cmn	w0, #0x1
    e8d4:	b.ne	e85c <gzsetparams@@Base+0x4c>  // b.any
    e8d8:	ldr	w22, [x19, #108]
    e8dc:	ldp	x19, x20, [sp, #16]
    e8e0:	b	e89c <gzsetparams@@Base+0x8c>
    e8e4:	ldr	w22, [x19, #108]
    e8e8:	ldp	x19, x20, [sp, #16]
    e8ec:	b	e89c <gzsetparams@@Base+0x8c>
    e8f0:	mov	w22, #0xfffffffe            	// #-2
    e8f4:	b	e89c <gzsetparams@@Base+0x8c>
    e8f8:	mov	w22, #0xfffffffe            	// #-2
    e8fc:	ldp	x19, x20, [sp, #16]
    e900:	b	e89c <gzsetparams@@Base+0x8c>
    e904:	mov	w22, #0xfffffffe            	// #-2
    e908:	ldp	x19, x20, [sp, #16]
    e90c:	b	e89c <gzsetparams@@Base+0x8c>

000000000000e910 <gzclose_w@@ZLIB_1.2.3.5>:
    e910:	stp	x29, x30, [sp, #-32]!
    e914:	mov	x29, sp
    e918:	stp	x19, x20, [sp, #16]
    e91c:	cbz	x0, e9e8 <gzclose_w@@ZLIB_1.2.3.5+0xd8>
    e920:	mov	x19, x0
    e924:	ldr	w1, [x0, #24]
    e928:	mov	w0, #0x79b1                	// #31153
    e92c:	cmp	w1, w0
    e930:	b.ne	e9f0 <gzclose_w@@ZLIB_1.2.3.5+0xe0>  // b.any
    e934:	ldr	w20, [x19, #104]
    e938:	cbnz	w20, e9a8 <gzclose_w@@ZLIB_1.2.3.5+0x98>
    e93c:	mov	w1, #0x4                   	// #4
    e940:	mov	x0, x19
    e944:	bl	de34 <gzclose_r@@ZLIB_1.2.3.5+0x1d8>
    e948:	cmn	w0, #0x1
    e94c:	b.eq	e9cc <gzclose_w@@ZLIB_1.2.3.5+0xbc>  // b.none
    e950:	ldr	w0, [x19, #40]
    e954:	cbz	w0, e968 <gzclose_w@@ZLIB_1.2.3.5+0x58>
    e958:	ldr	w0, [x19, #64]
    e95c:	cbz	w0, e9d4 <gzclose_w@@ZLIB_1.2.3.5+0xc4>
    e960:	ldr	x0, [x19, #48]
    e964:	bl	2570 <free@plt>
    e968:	mov	x2, #0x0                   	// #0
    e96c:	mov	w1, #0x0                   	// #0
    e970:	mov	x0, x19
    e974:	bl	c788 <gzerror@@Base+0x60>
    e978:	ldr	x0, [x19, #32]
    e97c:	bl	2570 <free@plt>
    e980:	ldr	w0, [x19, #28]
    e984:	bl	2510 <close@plt>
    e988:	cmn	w0, #0x1
    e98c:	csel	w20, w20, w0, ne  // ne = any
    e990:	mov	x0, x19
    e994:	bl	2570 <free@plt>
    e998:	mov	w0, w20
    e99c:	ldp	x19, x20, [sp, #16]
    e9a0:	ldp	x29, x30, [sp], #32
    e9a4:	ret
    e9a8:	str	wzr, [x19, #104]
    e9ac:	ldr	x1, [x19, #96]
    e9b0:	mov	x0, x19
    e9b4:	bl	e024 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>
    e9b8:	mov	w20, #0x0                   	// #0
    e9bc:	cmn	w0, #0x1
    e9c0:	b.ne	e93c <gzclose_w@@ZLIB_1.2.3.5+0x2c>  // b.any
    e9c4:	ldr	w20, [x19, #108]
    e9c8:	b	e93c <gzclose_w@@ZLIB_1.2.3.5+0x2c>
    e9cc:	ldr	w20, [x19, #108]
    e9d0:	b	e950 <gzclose_w@@ZLIB_1.2.3.5+0x40>
    e9d4:	add	x0, x19, #0x78
    e9d8:	bl	2590 <deflateEnd@plt>
    e9dc:	ldr	x0, [x19, #56]
    e9e0:	bl	2570 <free@plt>
    e9e4:	b	e960 <gzclose_w@@ZLIB_1.2.3.5+0x50>
    e9e8:	mov	w20, #0xfffffffe            	// #-2
    e9ec:	b	e998 <gzclose_w@@ZLIB_1.2.3.5+0x88>
    e9f0:	mov	w20, #0xfffffffe            	// #-2
    e9f4:	b	e998 <gzclose_w@@ZLIB_1.2.3.5+0x88>

Disassembly of section .fini:

000000000000e9f8 <.fini>:
    e9f8:	stp	x29, x30, [sp, #-16]!
    e9fc:	mov	x29, sp
    ea00:	ldp	x29, x30, [sp], #16
    ea04:	ret
