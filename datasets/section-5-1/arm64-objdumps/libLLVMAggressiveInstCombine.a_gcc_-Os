In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAggressiveInstCombine.a_gcc_-Os:

AggressiveInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x8b                  	// #139
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD1Ev>:
      28:	adrp	x1, 0 <_ZTVN4llvm12FunctionPassE>
      2c:	ldr	x1, [x1]
      30:	add	x1, x1, #0x10
      34:	str	x1, [x0]
      38:	b	0 <_ZN4llvm4PassD2Ev>

000000000000003c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD0Ev>:
      3c:	stp	x29, x30, [sp, #-32]!
      40:	mov	x29, sp
      44:	str	x19, [sp, #16]
      48:	mov	x19, x0
      4c:	bl	28 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassD1Ev>
      50:	mov	x0, x19
      54:	mov	x1, #0x20                  	// #32
      58:	ldr	x19, [sp, #16]
      5c:	ldp	x29, x30, [sp], #32
      60:	b	0 <_ZdlPvm>

0000000000000064 <_ZL50initializeAggressiveInstCombinerLegacyPassPassOnceRN4llvm12PassRegistryE>:
      64:	stp	x29, x30, [sp, #-32]!
      68:	mov	x29, sp
      6c:	stp	x19, x20, [sp, #16]
      70:	mov	x20, x0
      74:	bl	0 <_ZN4llvm38initializeDominatorTreeWrapperPassPassERNS_12PassRegistryE>
      78:	mov	x0, x20
      7c:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
      80:	mov	x0, #0x50                  	// #80
      84:	bl	0 <_Znwm>
      88:	mov	x19, x0
      8c:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
      90:	add	x0, x0, #0x0
      94:	mov	x1, x19
      98:	mov	w2, #0x1                   	// #1
      9c:	str	x0, [x19]
      a0:	mov	x0, #0x21                  	// #33
      a4:	str	x0, [x19, #8]
      a8:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
      ac:	add	x0, x0, #0x0
      b0:	str	x0, [x19, #16]
      b4:	mov	x0, #0x16                  	// #22
      b8:	str	x0, [x19, #24]
      bc:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
      c0:	add	x0, x0, #0x0
      c4:	str	x0, [x19, #32]
      c8:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
      cc:	add	x0, x0, #0x0
      d0:	strh	wzr, [x19, #40]
      d4:	strb	wzr, [x19, #42]
      d8:	stp	xzr, xzr, [x19, #48]
      dc:	str	xzr, [x19, #64]
      e0:	str	x0, [x19, #72]
      e4:	mov	x0, x20
      e8:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
      ec:	mov	x0, x19
      f0:	ldp	x19, x20, [sp, #16]
      f4:	ldp	x29, x30, [sp], #32
      f8:	ret

00000000000000fc <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>:
      fc:	stp	x29, x30, [sp, #-48]!
     100:	mov	x29, sp
     104:	str	x0, [sp, #24]
     108:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     10c:	add	x0, x0, #0x0
     110:	str	x0, [sp, #32]
     114:	add	x0, sp, #0x18
     118:	str	x0, [sp, #40]
     11c:	add	x2, sp, #0x20
     120:	adrp	x0, 0 <_ZSt15__once_callable>
     124:	ldr	x1, [x0]
     128:	add	x0, x0, #0x0
     12c:	blr	x1
     130:	mrs	x1, tpidr_el0
     134:	str	x2, [x1, x0]
     138:	adrp	x0, 0 <_ZSt11__once_call>
     13c:	ldr	x2, [x0]
     140:	add	x0, x0, #0x0
     144:	blr	x2
     148:	adrp	x2, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     14c:	ldr	x2, [x2]
     150:	str	x2, [x1, x0]
     154:	adrp	x0, 0 <__pthread_key_create>
     158:	ldr	x0, [x0]
     15c:	cbz	x0, 180 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x84>
     160:	adrp	x1, 0 <__once_proxy>
     164:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     168:	add	x0, x0, #0x0
     16c:	ldr	x1, [x1]
     170:	add	x0, x0, #0x4
     174:	bl	0 <pthread_once>
     178:	cbz	w0, 188 <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x8c>
     17c:	bl	0 <_ZSt20__throw_system_errori>
     180:	mov	w0, #0xffffffff            	// #-1
     184:	b	17c <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE+0x80>
     188:	ldp	x29, x30, [sp], #48
     18c:	ret

0000000000000190 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_132AggressiveInstCombinerLegacyPassEEEPNS_4PassEv>:
     190:	stp	x29, x30, [sp, #-32]!
     194:	mov	x0, #0x20                  	// #32
     198:	mov	x29, sp
     19c:	str	x19, [sp, #16]
     1a0:	bl	0 <_Znwm>
     1a4:	mov	x19, x0
     1a8:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     1ac:	add	x0, x0, #0x0
     1b0:	stp	xzr, x0, [x19, #8]
     1b4:	mov	w0, #0x2                   	// #2
     1b8:	str	w0, [x19, #24]
     1bc:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     1c0:	add	x0, x0, #0x0
     1c4:	add	x0, x0, #0x10
     1c8:	str	x0, [x19]
     1cc:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     1d0:	bl	fc <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     1d4:	mov	x0, x19
     1d8:	ldr	x19, [sp, #16]
     1dc:	ldp	x29, x30, [sp], #32
     1e0:	ret

00000000000001e4 <_ZN4llvm31initializeAggressiveInstCombineERNS_12PassRegistryE>:
     1e4:	b	fc <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>

00000000000001e8 <LLVMInitializeAggressiveInstCombiner>:
     1e8:	b	fc <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>

00000000000001ec <_ZN4llvm32createAggressiveInstCombinerPassEv>:
     1ec:	stp	x29, x30, [sp, #-32]!
     1f0:	mov	x0, #0x20                  	// #32
     1f4:	mov	x29, sp
     1f8:	str	x19, [sp, #16]
     1fc:	bl	0 <_Znwm>
     200:	mov	x19, x0
     204:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     208:	add	x0, x0, #0x0
     20c:	stp	xzr, x0, [x19, #8]
     210:	mov	w0, #0x2                   	// #2
     214:	str	w0, [x19, #24]
     218:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     21c:	add	x0, x0, #0x0
     220:	add	x0, x0, #0x10
     224:	str	x0, [x19]
     228:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
     22c:	bl	fc <_ZN4llvm46initializeAggressiveInstCombinerLegacyPassPassERNS_12PassRegistryE>
     230:	mov	x0, x19
     234:	ldr	x19, [sp, #16]
     238:	ldp	x29, x30, [sp], #32
     23c:	ret

0000000000000240 <LLVMAddAggressiveInstCombinerPass>:
     240:	stp	x29, x30, [sp, #-32]!
     244:	mov	x29, sp
     248:	stp	x19, x20, [sp, #16]
     24c:	mov	x19, x0
     250:	ldr	x0, [x0]
     254:	ldr	x20, [x0, #16]
     258:	bl	1ec <_ZN4llvm32createAggressiveInstCombinerPassEv>
     25c:	mov	x1, x0
     260:	mov	x0, x19
     264:	mov	x16, x20
     268:	ldp	x19, x20, [sp, #16]
     26c:	ldp	x29, x30, [sp], #32
     270:	br	x16

0000000000000274 <_ZNK12_GLOBAL__N_132AggressiveInstCombinerLegacyPass16getAnalysisUsageERN4llvm13AnalysisUsageE>:
     274:	stp	x29, x30, [sp, #-64]!
     278:	mov	x0, x1
     27c:	mov	x29, sp
     280:	str	x21, [sp, #32]
     284:	adrp	x21, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
     288:	stp	x19, x20, [sp, #16]
     28c:	mov	x19, x1
     290:	bl	0 <_ZN4llvm13AnalysisUsage15setPreservesCFGEv>
     294:	ldr	x21, [x21]
     298:	mov	x0, x19
     29c:	add	x20, sp, #0x38
     2a0:	mov	x1, x21
     2a4:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     2a8:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
     2ac:	mov	x0, x19
     2b0:	add	x19, x19, #0x70
     2b4:	ldr	x1, [x1]
     2b8:	bl	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
     2bc:	adrp	x0, 0 <_ZN4llvm20AAResultsWrapperPass2IDE>
     2c0:	mov	x1, x20
     2c4:	ldr	x0, [x0]
     2c8:	str	x0, [sp, #56]
     2cc:	mov	x0, x19
     2d0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     2d4:	adrp	x0, 0 <_ZN4llvm18BasicAAWrapperPass2IDE>
     2d8:	mov	x1, x20
     2dc:	ldr	x0, [x0]
     2e0:	str	x0, [sp, #56]
     2e4:	mov	x0, x19
     2e8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     2ec:	mov	x1, x20
     2f0:	mov	x0, x19
     2f4:	str	x21, [sp, #56]
     2f8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     2fc:	adrp	x0, 0 <_ZN4llvm20GlobalsAAWrapperPass2IDE>
     300:	mov	x1, x20
     304:	ldr	x0, [x0]
     308:	str	x0, [sp, #56]
     30c:	mov	x0, x19
     310:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     314:	ldp	x19, x20, [sp, #16]
     318:	ldr	x21, [sp, #32]
     31c:	ldp	x29, x30, [sp], #64
     320:	ret

0000000000000324 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE.isra.0>:
     324:	stp	x29, x30, [sp, #-64]!
     328:	mov	x29, sp
     32c:	stp	x19, x20, [sp, #16]
     330:	mov	x19, x0
     334:	stp	x21, x22, [sp, #32]
     338:	str	x23, [sp, #48]
     33c:	mov	x23, x1
     340:	cbz	x2, 388 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE.isra.0+0x64>
     344:	mov	x20, x3
     348:	mov	x1, x0
     34c:	add	x0, x2, #0x28
     350:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     354:	ldr	x0, [x19, #24]
     358:	add	x21, x19, #0x18
     35c:	ldr	x22, [x20]
     360:	str	x20, [x19, #32]
     364:	and	x22, x22, #0xfffffffffffffff8
     368:	mov	x1, x22
     36c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     370:	str	x0, [x19, #24]
     374:	mov	x1, x21
     378:	ldr	x0, [x20]
     37c:	str	x21, [x22, #8]
     380:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     384:	str	x0, [x20]
     388:	mov	x1, x23
     38c:	mov	x0, x19
     390:	ldp	x19, x20, [sp, #16]
     394:	ldp	x21, x22, [sp, #32]
     398:	ldr	x23, [sp, #48]
     39c:	ldp	x29, x30, [sp], #64
     3a0:	b	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>

00000000000003a4 <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchIS2_EEbPT_.isra.0>:
     3a4:	stp	x29, x30, [sp, #-48]!
     3a8:	mov	x29, sp
     3ac:	stp	x19, x20, [sp, #16]
     3b0:	mov	x20, x1
     3b4:	str	x21, [sp, #32]
     3b8:	mov	x21, x0
     3bc:	mov	x0, x1
     3c0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     3c4:	ands	w19, w0, #0xff
     3c8:	b.eq	3e0 <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchIS2_EEbPT_.isra.0+0x3c>  // b.none
     3cc:	mov	x0, x20
     3d0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     3d4:	cbz	x0, 3f4 <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchIS2_EEbPT_.isra.0+0x50>
     3d8:	ldr	x1, [x21]
     3dc:	str	x0, [x1]
     3e0:	mov	w0, w19
     3e4:	ldp	x19, x20, [sp, #16]
     3e8:	ldr	x21, [sp, #32]
     3ec:	ldp	x29, x30, [sp], #48
     3f0:	ret
     3f4:	mov	w19, #0x0                   	// #0
     3f8:	b	3e0 <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchIS2_EEbPT_.isra.0+0x3c>

00000000000003fc <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_11class_matchINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_.part.0>:
     3fc:	stp	x29, x30, [sp, #-32]!
     400:	mov	x29, sp
     404:	str	x19, [sp, #16]
     408:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     40c:	mov	w1, #0x0                   	// #0
     410:	mov	x19, x0
     414:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     418:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     41c:	tst	w0, #0xff
     420:	b.eq	43c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_11class_matchINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_.part.0+0x40>  // b.none
     424:	mov	x0, x19
     428:	mov	w1, #0x1                   	// #1
     42c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     430:	ldr	x19, [sp, #16]
     434:	ldp	x29, x30, [sp], #32
     438:	b	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     43c:	mov	w0, #0x0                   	// #0
     440:	ldr	x19, [sp, #16]
     444:	ldp	x29, x30, [sp], #32
     448:	ret

000000000000044c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_11class_matchINS_5ValueEEES4_Lj28ELb0EE5matchINS_8ConstantEEEbPT_.part.0>:
     44c:	stp	x29, x30, [sp, #-32]!
     450:	mov	x29, sp
     454:	str	x19, [sp, #16]
     458:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     45c:	mov	w1, #0x0                   	// #0
     460:	mov	x19, x0
     464:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     468:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     46c:	tst	w0, #0xff
     470:	b.eq	48c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_11class_matchINS_5ValueEEES4_Lj28ELb0EE5matchINS_8ConstantEEEbPT_.part.0+0x40>  // b.none
     474:	mov	x0, x19
     478:	mov	w1, #0x1                   	// #1
     47c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     480:	ldr	x19, [sp, #16]
     484:	ldp	x29, x30, [sp], #32
     488:	b	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     48c:	mov	w0, #0x0                   	// #0
     490:	ldr	x19, [sp, #16]
     494:	ldp	x29, x30, [sp], #32
     498:	ret

000000000000049c <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchINS_8ConstantEEEbPT_.isra.0>:
     49c:	stp	x29, x30, [sp, #-32]!
     4a0:	mov	x29, sp
     4a4:	stp	x19, x20, [sp, #16]
     4a8:	mov	x20, x0
     4ac:	mov	x19, x1
     4b0:	mov	x0, x1
     4b4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     4b8:	ands	w0, w0, #0xff
     4bc:	b.eq	4cc <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchINS_8ConstantEEEbPT_.isra.0+0x30>  // b.none
     4c0:	cbz	x19, 4d8 <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchINS_8ConstantEEEbPT_.isra.0+0x3c>
     4c4:	ldr	x1, [x20]
     4c8:	str	x19, [x1]
     4cc:	ldp	x19, x20, [sp, #16]
     4d0:	ldp	x29, x30, [sp], #32
     4d4:	ret
     4d8:	mov	w0, #0x0                   	// #0
     4dc:	b	4cc <_ZN4llvm12PatternMatch7bind_tyINS_5ValueEE5matchINS_8ConstantEEEbPT_.isra.0+0x30>

00000000000004e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>:
     4e0:	stp	x29, x30, [sp, #-96]!
     4e4:	mov	x29, sp
     4e8:	stp	x19, x20, [sp, #16]
     4ec:	mov	x20, x0
     4f0:	ldrb	w0, [x1, #24]
     4f4:	stp	x21, x22, [sp, #32]
     4f8:	add	x22, sp, #0x30
     4fc:	mov	x19, x1
     500:	str	x22, [sp, #80]
     504:	add	x21, sp, #0x50
     508:	cbz	w0, 580 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xa0>
     50c:	mov	x1, x20
     510:	mov	x0, x21
     514:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     518:	tst	w0, #0xff
     51c:	b.eq	53c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x5c>  // b.none
     520:	mov	w0, #0x1                   	// #1
     524:	strb	w0, [x19, #25]
     528:	ldr	x0, [sp, #48]
     52c:	mov	x1, x19
     530:	bl	4e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     534:	and	w0, w0, #0xff
     538:	b	570 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x90>
     53c:	add	x0, sp, #0x38
     540:	mov	x1, x20
     544:	stp	x22, x0, [sp, #80]
     548:	mov	x0, x21
     54c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     550:	tst	w0, #0xff
     554:	b.eq	5a4 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xc4>  // b.none
     558:	ldr	x0, [sp, #48]
     55c:	mov	x1, x19
     560:	bl	4e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     564:	tst	w0, #0xff
     568:	b.ne	598 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xb8>  // b.any
     56c:	mov	w0, #0x0                   	// #0
     570:	ldp	x19, x20, [sp, #16]
     574:	ldp	x21, x22, [sp, #32]
     578:	ldp	x29, x30, [sp], #96
     57c:	ret
     580:	add	x0, sp, #0x38
     584:	mov	x1, x20
     588:	str	x0, [sp, #88]
     58c:	mov	x0, x21
     590:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     594:	b	550 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x70>
     598:	mov	x1, x19
     59c:	ldr	x0, [sp, #56]
     5a0:	b	530 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x50>
     5a4:	add	x0, sp, #0x40
     5a8:	stp	xzr, x0, [sp, #72]
     5ac:	add	x0, sp, #0x48
     5b0:	mov	x1, x20
     5b4:	str	x0, [sp, #88]
     5b8:	mov	x0, x21
     5bc:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     5c0:	tst	w0, #0xff
     5c4:	b.ne	5cc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xec>  // b.any
     5c8:	str	x20, [sp, #64]
     5cc:	ldr	x0, [x19]
     5d0:	cbnz	x0, 5dc <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0xfc>
     5d4:	ldr	x0, [sp, #64]
     5d8:	str	x0, [x19]
     5dc:	ldr	x0, [sp, #72]
     5e0:	ldr	w3, [x19, #16]
     5e4:	cmp	x0, w3, uxtw
     5e8:	b.cs	56c <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x8c>  // b.hs, b.nlast
     5ec:	cmp	w0, w3
     5f0:	b.cc	614 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x134>  // b.lo, b.ul, b.last
     5f4:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     5f8:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     5fc:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     600:	add	x3, x3, #0x0
     604:	add	x1, x1, #0x0
     608:	add	x0, x0, #0x0
     60c:	mov	w2, #0x59d                 	// #1437
     610:	bl	0 <__assert_fail>
     614:	mov	x1, #0x1                   	// #1
     618:	cmp	w3, #0x40
     61c:	lsl	x2, x1, x0
     620:	ldr	x1, [x19, #8]
     624:	b.hi	644 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x164>  // b.pmore
     628:	orr	x1, x1, x2
     62c:	str	x1, [x19, #8]
     630:	ldr	x1, [x19]
     634:	ldr	x0, [sp, #64]
     638:	cmp	x1, x0
     63c:	cset	w0, eq  // eq = none
     640:	b	570 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x90>
     644:	lsr	w0, w0, #6
     648:	lsl	x0, x0, #3
     64c:	ldr	x3, [x1, x0]
     650:	orr	x2, x3, x2
     654:	str	x2, [x1, x0]
     658:	b	630 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps+0x150>

000000000000065c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>:
     65c:	stp	x29, x30, [sp, #-352]!
     660:	mov	x29, sp
     664:	stp	x19, x20, [sp, #16]
     668:	mov	x20, x0
     66c:	add	x19, sp, #0x130
     670:	ldr	x0, [x0]
     674:	stp	x21, x22, [sp, #32]
     678:	add	x22, sp, #0x98
     67c:	stp	x23, x24, [sp, #48]
     680:	add	x23, sp, #0x100
     684:	add	x21, x23, #0x8
     688:	stp	x25, x26, [sp, #64]
     68c:	mov	x25, x1
     690:	add	x24, x19, #0x18
     694:	stp	x27, x28, [sp, #80]
     698:	add	x28, sp, #0x78
     69c:	add	x27, sp, #0x80
     6a0:	str	x2, [sp, #96]
     6a4:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     6a8:	mov	x8, x19
     6ac:	mov	w0, w0
     6b0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     6b4:	add	x26, sp, #0xd0
     6b8:	mov	x1, x19
     6bc:	mov	x0, x22
     6c0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     6c4:	add	x0, sp, #0x90
     6c8:	str	x0, [sp, #168]
     6cc:	mov	x0, x19
     6d0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     6d4:	add	x0, sp, #0x88
     6d8:	mov	x1, x22
     6dc:	str	x0, [sp, #104]
     6e0:	str	x0, [sp, #256]
     6e4:	mov	x0, x21
     6e8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     6ec:	stp	x28, x27, [sp, #304]
     6f0:	mov	x1, x21
     6f4:	ldr	x0, [sp, #168]
     6f8:	str	x0, [sp, #280]
     6fc:	ldr	x0, [sp, #256]
     700:	str	x0, [sp, #320]
     704:	mov	x0, x24
     708:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     70c:	ldr	x0, [sp, #280]
     710:	str	x0, [sp, #344]
     714:	ldp	x0, x1, [sp, #304]
     718:	stp	x0, x1, [sp, #208]
     71c:	mov	x1, x24
     720:	ldr	x0, [sp, #320]
     724:	str	x0, [sp, #224]
     728:	add	x0, x26, #0x18
     72c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     730:	ldr	x0, [sp, #344]
     734:	str	x0, [sp, #248]
     738:	mov	x0, x24
     73c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     740:	mov	x0, x21
     744:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     748:	mov	x0, x20
     74c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     750:	tst	w0, #0xff
     754:	b.eq	7cc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x170>  // b.none
     758:	mov	x1, x20
     75c:	mov	x0, x26
     760:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     764:	tst	w0, #0xff
     768:	b.eq	7cc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x170>  // b.none
     76c:	ldr	x1, [sp, #120]
     770:	ldr	x0, [sp, #136]
     774:	cmp	x1, x0
     778:	b.ne	7cc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x170>  // b.any
     77c:	ldr	x0, [sp, #128]
     780:	ldr	x2, [sp, #144]
     784:	cmp	x0, x2
     788:	b.ne	7cc <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x170>  // b.any
     78c:	str	x1, [x25]
     790:	mov	w19, #0x82                  	// #130
     794:	ldr	x1, [sp, #96]
     798:	str	x0, [x1]
     79c:	add	x0, x26, #0x18
     7a0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     7a4:	mov	x0, x22
     7a8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     7ac:	mov	w0, w19
     7b0:	ldp	x19, x20, [sp, #16]
     7b4:	ldp	x21, x22, [sp, #32]
     7b8:	ldp	x23, x24, [sp, #48]
     7bc:	ldp	x25, x26, [sp, #64]
     7c0:	ldp	x27, x28, [sp, #80]
     7c4:	ldp	x29, x30, [sp], #352
     7c8:	ret
     7cc:	add	x21, sp, #0xb8
     7d0:	mov	x1, x22
     7d4:	ldr	x0, [sp, #104]
     7d8:	str	x0, [sp, #176]
     7dc:	mov	x0, x21
     7e0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     7e4:	ldr	x0, [sp, #168]
     7e8:	add	x19, x19, #0x18
     7ec:	str	x0, [sp, #200]
     7f0:	mov	x1, x21
     7f4:	ldr	x0, [sp, #176]
     7f8:	stp	x28, x27, [sp, #304]
     7fc:	str	x0, [sp, #320]
     800:	mov	x0, x19
     804:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     808:	ldr	x0, [sp, #200]
     80c:	str	x0, [sp, #344]
     810:	ldp	x0, x1, [sp, #304]
     814:	stp	x0, x1, [sp, #256]
     818:	mov	x1, x19
     81c:	ldr	x0, [sp, #320]
     820:	str	x0, [sp, #272]
     824:	add	x0, x23, #0x18
     828:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     82c:	ldr	x0, [sp, #344]
     830:	str	x0, [sp, #296]
     834:	mov	x0, x19
     838:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     83c:	mov	x0, x21
     840:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     844:	mov	x0, x20
     848:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     84c:	tst	w0, #0xff
     850:	b.ne	864 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x208>  // b.any
     854:	mov	w19, #0x0                   	// #0
     858:	add	x0, x23, #0x18
     85c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     860:	b	79c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x140>
     864:	mov	x1, x20
     868:	mov	x0, x23
     86c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     870:	tst	w0, #0xff
     874:	b.eq	854 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1f8>  // b.none
     878:	ldr	x1, [sp, #120]
     87c:	ldr	x0, [sp, #136]
     880:	cmp	x1, x0
     884:	b.ne	854 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1f8>  // b.any
     888:	ldr	x0, [sp, #128]
     88c:	ldr	x2, [sp, #144]
     890:	cmp	x0, x2
     894:	b.ne	854 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1f8>  // b.any
     898:	str	x1, [x25]
     89c:	mov	w19, #0x83                  	// #131
     8a0:	ldr	x1, [sp, #96]
     8a4:	str	x0, [x1]
     8a8:	b	858 <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0+0x1fc>

00000000000008ac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>:
     8ac:	sub	sp, sp, #0x2d0
     8b0:	stp	x29, x30, [sp]
     8b4:	mov	x29, sp
     8b8:	str	x0, [sp, #128]
     8bc:	ldr	x0, [x0, #40]
     8c0:	stp	x19, x20, [sp, #16]
     8c4:	mov	x19, x1
     8c8:	stp	x21, x22, [sp, #32]
     8cc:	add	x21, sp, #0x1d8
     8d0:	stp	x23, x24, [sp, #48]
     8d4:	add	x23, sp, #0x1a8
     8d8:	stp	x25, x26, [sp, #64]
     8dc:	mov	w26, #0x0                   	// #0
     8e0:	stp	x27, x28, [sp, #80]
     8e4:	str	x2, [sp, #168]
     8e8:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
     8ec:	add	x2, sp, #0x248
     8f0:	str	xzr, [sp, #672]
     8f4:	str	xzr, [sp, #680]
     8f8:	str	wzr, [sp, #688]
     8fc:	stp	x19, x0, [x2]
     900:	ldr	x0, [sp, #168]
     904:	str	x0, [sp, #600]
     908:	add	x0, sp, #0x248
     90c:	stp	xzr, xzr, [x2, #72]
     910:	add	x1, x0, #0x28
     914:	str	x1, [sp, #608]
     918:	mov	x1, #0x400000000           	// #17179869184
     91c:	str	x1, [sp, #616]
     920:	ldr	x1, [sp, #128]
     924:	str	xzr, [sp, #696]
     928:	str	xzr, [sp, #704]
     92c:	str	xzr, [sp, #712]
     930:	bl	0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>
     934:	and	w0, w0, #0xff
     938:	str	w0, [sp, #176]
     93c:	ldr	x0, [sp, #128]
     940:	ldr	x0, [x0, #80]
     944:	str	x0, [sp, #120]
     948:	ldr	x0, [sp, #128]
     94c:	add	x0, x0, #0x48
     950:	str	x0, [sp, #152]
     954:	add	x0, x21, #0x8
     958:	str	x0, [sp, #112]
     95c:	ldr	x1, [sp, #120]
     960:	ldr	x0, [sp, #152]
     964:	cmp	x0, x1
     968:	b.eq	14fc <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc50>  // b.none
     96c:	ldr	x0, [x1]
     970:	tst	w0, #0x4
     974:	b.eq	97c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xd0>  // b.none
     978:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     97c:	ldr	x0, [sp, #120]
     980:	sub	x1, x0, #0x18
     984:	ldr	x0, [sp, #168]
     988:	bl	0 <_ZNK4llvm17DominatorTreeBaseINS_10BasicBlockELb0EE20isReachableFromEntryEPKS1_>
     98c:	ands	w0, w0, #0xff
     990:	str	w0, [sp, #180]
     994:	b.eq	14ec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc40>  // b.none
     998:	ldr	x0, [sp, #120]
     99c:	mov	x1, x0
     9a0:	ldr	x0, [x1, #16]!
     9a4:	str	x1, [sp, #136]
     9a8:	and	x0, x0, #0xfffffffffffffff8
     9ac:	str	x0, [sp, #104]
     9b0:	add	x0, x23, #0x8
     9b4:	str	x0, [sp, #144]
     9b8:	ldr	x1, [sp, #104]
     9bc:	ldr	x0, [sp, #136]
     9c0:	cmp	x0, x1
     9c4:	b.eq	14ec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc40>  // b.none
     9c8:	ldr	x0, [x1]
     9cc:	ubfx	w22, w0, #2, #1
     9d0:	tst	w0, #0x4
     9d4:	b.eq	9f8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x14c>  // b.none
     9d8:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     9dc:	add	x3, x3, #0x0
     9e0:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     9e4:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     9e8:	add	x1, x1, #0x0
     9ec:	add	x0, x0, #0x0
     9f0:	mov	w2, #0x8b                  	// #139
     9f4:	b	1338 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xa8c>
     9f8:	ldr	x0, [sp, #104]
     9fc:	add	x19, sp, #0x200
     a00:	sub	x20, x0, #0x18
     a04:	mov	x0, x19
     a08:	mov	x1, x20
     a0c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     a10:	mov	w24, w0
     a14:	ands	w0, w0, #0xff
     a18:	str	w0, [sp, #164]
     a1c:	b.ne	a34 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x188>  // b.any
     a20:	mov	x1, x20
     a24:	mov	x0, x19
     a28:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     a2c:	ands	w25, w0, #0xff
     a30:	b.eq	a8c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1e0>  // b.none
     a34:	ldr	x0, [sp, #104]
     a38:	ldur	x0, [x0, #-24]
     a3c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     a40:	mov	w1, w0
     a44:	mov	w3, #0x0                   	// #0
     a48:	add	x0, x21, #0x8
     a4c:	mov	x2, #0x0                   	// #0
     a50:	str	xzr, [sp, #472]
     a54:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     a58:	strb	w24, [sp, #496]
     a5c:	ldr	w0, [sp, #164]
     a60:	strb	wzr, [sp, #497]
     a64:	cbz	w0, 1180 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x8d4>
     a68:	mov	x0, x20
     a6c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     a70:	mov	x1, x21
     a74:	bl	4e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
     a78:	tst	w0, #0xff
     a7c:	b.ne	10e4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x838>  // b.any
     a80:	mov	w25, #0x0                   	// #0
     a84:	ldr	x0, [sp, #112]
     a88:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     a8c:	orr	w0, w26, w25
     a90:	str	w0, [sp, #184]
     a94:	ldr	x0, [sp, #104]
     a98:	ldurb	w0, [x0, #-8]
     a9c:	cmp	w0, #0x4f
     aa0:	b.eq	1278 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x9cc>  // b.none
     aa4:	str	wzr, [sp, #164]
     aa8:	ldr	x0, [sp, #104]
     aac:	ldurb	w0, [x0, #-8]
     ab0:	cmp	w0, #0x32
     ab4:	b.ne	10b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x80c>  // b.any
     ab8:	ldr	x0, [sp, #104]
     abc:	ldur	x24, [x0, #-24]
     ac0:	mov	x0, x24
     ac4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ac8:	ldrb	w0, [x0, #8]
     acc:	cmp	w0, #0xb
     ad0:	b.ne	10b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x80c>  // b.any
     ad4:	mov	x0, x24
     ad8:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     adc:	sub	w1, w0, #0x9
     ae0:	mov	w24, w0
     ae4:	cmp	w1, #0x77
     ae8:	b.hi	10b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x80c>  // b.pmore
     aec:	tst	x24, #0x7
     af0:	b.ne	10b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x80c>  // b.any
     af4:	mov	x1, #0x55                  	// #85
     af8:	add	x8, sp, #0x108
     afc:	str	x1, [sp, #512]
     b00:	mov	x1, x19
     b04:	mov	w22, #0x8                   	// #8
     b08:	str	w22, [sp, #520]
     b0c:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
     b10:	add	x26, sp, #0x118
     b14:	mov	x0, x19
     b18:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     b1c:	mov	x8, x26
     b20:	mov	x1, x19
     b24:	mov	x0, #0x33                  	// #51
     b28:	str	x0, [sp, #512]
     b2c:	mov	w0, w24
     b30:	str	w22, [sp, #520]
     b34:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
     b38:	add	x25, sp, #0x128
     b3c:	mov	x0, x19
     b40:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     b44:	mov	x8, x25
     b48:	mov	x1, x19
     b4c:	mov	x0, #0xf                   	// #15
     b50:	str	x0, [sp, #512]
     b54:	mov	w0, w24
     b58:	str	w22, [sp, #520]
     b5c:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
     b60:	add	x27, sp, #0x138
     b64:	mov	x0, x19
     b68:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     b6c:	mov	x8, x27
     b70:	mov	x1, x19
     b74:	mov	w0, w24
     b78:	mov	x28, #0x1                   	// #1
     b7c:	str	x28, [sp, #512]
     b80:	str	w22, [sp, #520]
     b84:	bl	0 <_ZN4llvm5APInt8getSplatEjRKS0_>
     b88:	mov	x0, x19
     b8c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     b90:	add	x4, sp, #0x148
     b94:	sub	w2, w24, #0x8
     b98:	mov	w3, #0x0                   	// #0
     b9c:	mov	x0, x4
     ba0:	mov	w1, w24
     ba4:	str	x4, [sp, #192]
     ba8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     bac:	mov	w1, #0x0                   	// #0
     bb0:	mov	x0, x20
     bb4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     bb8:	mov	x22, x0
     bbc:	mov	w1, w28
     bc0:	mov	x0, x20
     bc4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     bc8:	add	x28, sp, #0x1c0
     bcc:	mov	x1, x27
     bd0:	mov	x24, x0
     bd4:	mov	x0, x28
     bd8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     bdc:	mov	x8, x21
     be0:	mov	x0, x28
     be4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     be8:	add	x0, sp, #0xf0
     bec:	mov	x1, x21
     bf0:	str	x0, [sp, #512]
     bf4:	add	x0, x19, #0x8
     bf8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     bfc:	mov	x1, x22
     c00:	mov	x0, x19
     c04:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c08:	ands	w22, w0, #0xff
     c0c:	ldr	x4, [sp, #192]
     c10:	b.eq	c50 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x3a4>  // b.none
     c14:	mov	x1, x4
     c18:	add	x27, sp, #0x198
     c1c:	mov	x0, x27
     c20:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c24:	mov	x8, x23
     c28:	mov	x0, x27
     c2c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c30:	mov	x1, x24
     c34:	mov	x0, x23
     c38:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c3c:	and	w22, w0, #0xff
     c40:	mov	x0, x23
     c44:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c48:	mov	x0, x27
     c4c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c50:	add	x27, x19, #0x8
     c54:	mov	x0, x27
     c58:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c5c:	mov	x0, x21
     c60:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c64:	mov	x0, x28
     c68:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c6c:	cbz	w22, 1090 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x7e4>
     c70:	ldr	x2, [sp, #240]
     c74:	mov	x8, x23
     c78:	add	x22, x28, #0x8
     c7c:	mov	x0, #0x4                   	// #4
     c80:	str	x2, [sp, #200]
     c84:	add	x24, sp, #0xf8
     c88:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c8c:	str	x24, [sp, #448]
     c90:	mov	x1, x23
     c94:	mov	x0, x22
     c98:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     c9c:	ldr	x0, [sp, #448]
     ca0:	str	x0, [sp, #472]
     ca4:	ldr	x0, [sp, #112]
     ca8:	mov	x1, x22
     cac:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     cb0:	str	x24, [sp, #496]
     cb4:	mov	x1, x25
     cb8:	add	x24, sp, #0x188
     cbc:	add	x25, sp, #0x198
     cc0:	mov	x0, x24
     cc4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     cc8:	mov	x8, x25
     ccc:	mov	x0, x24
     cd0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     cd4:	ldr	x1, [sp, #112]
     cd8:	ldr	x0, [sp, #472]
     cdc:	str	x0, [sp, #512]
     ce0:	mov	x0, x27
     ce4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ce8:	add	x4, x19, #0x20
     cec:	mov	x1, x25
     cf0:	ldr	x0, [sp, #496]
     cf4:	str	x4, [sp, #192]
     cf8:	str	x0, [sp, #536]
     cfc:	mov	x0, x4
     d00:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d04:	ldr	x2, [sp, #200]
     d08:	mov	x0, x19
     d0c:	mov	x1, x2
     d10:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d14:	and	w1, w0, #0xff
     d18:	ldr	x4, [sp, #192]
     d1c:	str	w1, [sp, #200]
     d20:	mov	x0, x4
     d24:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d28:	mov	x0, x27
     d2c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d30:	mov	x0, x25
     d34:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d38:	mov	x0, x24
     d3c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d40:	ldr	x0, [sp, #112]
     d44:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d48:	mov	x0, x22
     d4c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d50:	mov	x0, x23
     d54:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d58:	ldr	w1, [sp, #200]
     d5c:	ldr	x4, [sp, #192]
     d60:	cbz	w1, 14e4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc38>
     d64:	ldr	x6, [sp, #248]
     d68:	mov	x1, x26
     d6c:	mov	x0, x24
     d70:	stp	x6, x4, [sp, #208]
     d74:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d78:	mov	x8, x25
     d7c:	mov	x0, x24
     d80:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d84:	add	x2, sp, #0x100
     d88:	mov	x1, x25
     d8c:	mov	x0, x22
     d90:	str	x2, [sp, #200]
     d94:	str	x2, [sp, #448]
     d98:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     d9c:	add	x3, sp, #0x178
     da0:	mov	x0, #0x2                   	// #2
     da4:	mov	x8, x3
     da8:	str	x3, [sp, #192]
     dac:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     db0:	ldp	x3, x2, [sp, #192]
     db4:	str	x3, [sp, #232]
     db8:	ldr	x0, [sp, #144]
     dbc:	str	x2, [sp, #424]
     dc0:	mov	x1, x3
     dc4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     dc8:	mov	x1, x26
     dcc:	add	x0, sp, #0x158
     dd0:	mov	x26, x0
     dd4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     dd8:	add	x8, sp, #0x168
     ddc:	mov	x0, x26
     de0:	str	x8, [sp, #192]
     de4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     de8:	ldr	x0, [sp, #424]
     dec:	str	x0, [sp, #472]
     df0:	ldr	x0, [sp, #112]
     df4:	ldr	x1, [sp, #144]
     df8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     dfc:	ldr	x8, [sp, #192]
     e00:	add	x2, x21, #0x18
     e04:	mov	x0, x2
     e08:	str	x2, [sp, #192]
     e0c:	mov	x1, x8
     e10:	str	x8, [sp, #224]
     e14:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e18:	ldr	x0, [sp, #448]
     e1c:	mov	x1, x22
     e20:	str	x0, [sp, #512]
     e24:	mov	x0, x27
     e28:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e2c:	ldr	x1, [sp, #112]
     e30:	ldr	x4, [sp, #216]
     e34:	ldr	x0, [sp, #472]
     e38:	str	x0, [sp, #536]
     e3c:	mov	x0, x4
     e40:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e44:	ldr	x2, [sp, #192]
     e48:	add	x5, x19, #0x30
     e4c:	mov	x0, x5
     e50:	stp	x5, x2, [sp, #192]
     e54:	mov	x1, x2
     e58:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e5c:	ldr	x6, [sp, #208]
     e60:	mov	x0, x19
     e64:	mov	x1, x6
     e68:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e6c:	and	w1, w0, #0xff
     e70:	ldr	x5, [sp, #192]
     e74:	str	w1, [sp, #208]
     e78:	mov	x0, x5
     e7c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e80:	ldr	x4, [sp, #216]
     e84:	mov	x0, x4
     e88:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e8c:	mov	x0, x27
     e90:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     e94:	ldr	x2, [sp, #200]
     e98:	mov	x0, x2
     e9c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ea0:	ldr	x0, [sp, #112]
     ea4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ea8:	ldr	x8, [sp, #224]
     eac:	str	x8, [sp, #200]
     eb0:	mov	x0, x8
     eb4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     eb8:	mov	x0, x26
     ebc:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ec0:	ldr	x0, [sp, #144]
     ec4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ec8:	ldr	x3, [sp, #232]
     ecc:	str	x3, [sp, #192]
     ed0:	mov	x0, x3
     ed4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ed8:	mov	x0, x22
     edc:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ee0:	mov	x0, x25
     ee4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ee8:	mov	x0, x24
     eec:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ef0:	ldr	w1, [sp, #208]
     ef4:	ldp	x3, x8, [sp, #192]
     ef8:	cbz	w1, 14e4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc38>
     efc:	ldr	x1, [sp, #256]
     f00:	mov	x0, x28
     f04:	stp	x8, x3, [sp, #448]
     f08:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f0c:	tst	w0, #0xff
     f10:	b.eq	14e4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc38>  // b.none
     f14:	mov	x8, x23
     f18:	mov	x0, #0x1                   	// #1
     f1c:	ldr	x26, [sp, #360]
     f20:	ldr	x22, [sp, #376]
     f24:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f28:	ldr	x0, [sp, #112]
     f2c:	mov	x1, x23
     f30:	str	x26, [sp, #472]
     f34:	add	x26, x19, #0x18
     f38:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f3c:	add	x1, sp, #0x108
     f40:	mov	x0, x24
     f44:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f48:	mov	x8, x25
     f4c:	mov	x0, x24
     f50:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f54:	ldr	x1, [sp, #112]
     f58:	ldr	x0, [sp, #472]
     f5c:	str	x0, [sp, #512]
     f60:	mov	x0, x27
     f64:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f68:	mov	x1, x25
     f6c:	mov	x0, x26
     f70:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f74:	mov	x1, x22
     f78:	mov	x0, x19
     f7c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f80:	and	w22, w0, #0xff
     f84:	mov	x0, x26
     f88:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f8c:	mov	x0, x27
     f90:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f94:	mov	x0, x25
     f98:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     f9c:	mov	x0, x24
     fa0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     fa4:	ldr	x0, [sp, #112]
     fa8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     fac:	mov	x0, x23
     fb0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     fb4:	cbz	w22, 14e4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc38>
     fb8:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     fbc:	ldr	x0, [x0]
     fc0:	ldrb	w0, [x0]
     fc4:	cbz	w0, 1004 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x758>
     fc8:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     fcc:	add	x0, x0, #0x0
     fd0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     fd4:	tst	w0, #0xff
     fd8:	b.eq	1004 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x758>  // b.none
     fdc:	bl	0 <_ZN4llvm4dbgsEv>
     fe0:	mov	x2, x0
     fe4:	ldp	x1, x3, [x0, #16]
     fe8:	sub	x1, x1, x3
     fec:	cmp	x1, #0x1d
     ff0:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
     ff4:	b.hi	14b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc0c>  // b.pmore
     ff8:	add	x1, x1, #0x0
     ffc:	mov	x2, #0x1e                  	// #30
    1000:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1004:	mov	x1, x20
    1008:	mov	x4, #0x0                   	// #0
    100c:	add	x19, sp, #0x200
    1010:	mov	x3, #0x0                   	// #0
    1014:	mov	x2, #0x0                   	// #0
    1018:	mov	x0, x19
    101c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1020:	mov	x0, x20
    1024:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1028:	ldr	x1, [sp, #104]
    102c:	mov	x2, x21
    1030:	mov	x3, #0x1                   	// #1
    1034:	ldur	x1, [x1, #-24]
    1038:	str	x1, [sp, #472]
    103c:	mov	w1, #0x27                  	// #39
    1040:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    1044:	mov	x24, x0
    1048:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    104c:	ldr	x0, [sp, #360]
    1050:	add	x1, x1, #0x0
    1054:	str	x0, [sp, #448]
    1058:	mov	x0, x21
    105c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1060:	mov	x4, x21
    1064:	add	x2, sp, #0x1c0
    1068:	mov	x1, x24
    106c:	mov	x5, #0x0                   	// #0
    1070:	mov	x3, #0x1                   	// #1
    1074:	mov	x0, x19
    1078:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    107c:	mov	x1, x0
    1080:	mov	x0, x20
    1084:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1088:	mov	x0, x19
    108c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1090:	add	x0, sp, #0x148
    1094:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1098:	add	x0, sp, #0x138
    109c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    10a0:	add	x0, sp, #0x128
    10a4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    10a8:	add	x0, sp, #0x118
    10ac:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    10b0:	add	x0, sp, #0x108
    10b4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    10b8:	ldr	w0, [sp, #164]
    10bc:	cmp	w22, #0x0
    10c0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
    10c4:	ldr	w0, [sp, #184]
    10c8:	cset	w26, ne  // ne = any
    10cc:	orr	w26, w0, w26
    10d0:	ldr	x0, [sp, #104]
    10d4:	ldr	x0, [x0]
    10d8:	and	x0, x0, #0xfffffffffffffff8
    10dc:	str	x0, [sp, #104]
    10e0:	b	9b8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x10c>
    10e4:	ldrb	w0, [sp, #497]
    10e8:	cbz	w0, a80 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1d4>
    10ec:	mov	x3, #0x0                   	// #0
    10f0:	mov	x2, #0x0                   	// #0
    10f4:	mov	x4, #0x0                   	// #0
    10f8:	mov	x1, x20
    10fc:	mov	x0, x19
    1100:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1104:	ldp	x0, x1, [sp, #104]
    1108:	adrp	x25, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    110c:	add	x24, sp, #0x1c0
    1110:	ldur	x0, [x0, #-24]
    1114:	bl	0 <_ZN4llvm11ConstantInt3getEPNS_4TypeERKNS_5APIntE>
    1118:	mov	x27, x0
    111c:	add	x4, x25, #0x0
    1120:	mov	x0, x24
    1124:	ldr	x28, [sp, #472]
    1128:	mov	x1, x4
    112c:	str	x4, [sp, #184]
    1130:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1134:	mov	x1, x28
    1138:	mov	x3, x24
    113c:	mov	x2, x27
    1140:	mov	x0, x19
    1144:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1148:	mov	x28, x0
    114c:	ldr	w0, [sp, #164]
    1150:	ldr	x4, [sp, #184]
    1154:	cbnz	w0, 11a4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x8f8>
    1158:	mov	x1, x4
    115c:	mov	x0, x24
    1160:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1164:	ldr	x0, [x28]
    1168:	bl	0 <_ZN4llvm8Constant12getNullValueEPNS_4TypeE>
    116c:	mov	x3, x0
    1170:	mov	x4, x24
    1174:	mov	x2, x28
    1178:	mov	w1, #0x21                  	// #33
    117c:	b	11c0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x914>
    1180:	mov	x0, x20
    1184:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1188:	mov	w1, #0x0                   	// #0
    118c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1190:	mov	x1, x21
    1194:	bl	4e0 <_ZL15matchAndOrChainPN4llvm5ValueER7MaskOps>
    1198:	tst	w0, #0xff
    119c:	b.ne	10ec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x840>  // b.any
    11a0:	b	a80 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1d4>
    11a4:	mov	x1, x4
    11a8:	mov	x0, x24
    11ac:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    11b0:	mov	x4, x24
    11b4:	mov	x3, x27
    11b8:	mov	x2, x28
    11bc:	mov	w1, #0x20                  	// #32
    11c0:	mov	x0, x19
    11c4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    11c8:	mov	x28, x0
    11cc:	add	x25, x25, #0x0
    11d0:	ldr	x0, [sp, #104]
    11d4:	mov	x1, x25
    11d8:	ldur	x27, [x0, #-24]
    11dc:	mov	x0, x23
    11e0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    11e4:	ldr	x0, [x28]
    11e8:	cmp	x27, x0
    11ec:	b.eq	1214 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x968>  // b.none
    11f0:	mov	x0, x28
    11f4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    11f8:	mov	x1, x0
    11fc:	cbz	x0, 1230 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x984>
    1200:	mov	x2, x27
    1204:	mov	w3, #0x0                   	// #0
    1208:	mov	w0, #0x27                  	// #39
    120c:	bl	0 <_ZN4llvm12ConstantExpr7getCastEjPNS_8ConstantEPNS_4TypeEb>
    1210:	mov	x28, x0
    1214:	mov	x1, x28
    1218:	mov	x0, x20
    121c:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    1220:	mov	x0, x19
    1224:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1228:	ldr	w25, [sp, #180]
    122c:	b	a84 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1d8>
    1230:	mov	x1, x25
    1234:	mov	x0, x24
    1238:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    123c:	mov	x3, x24
    1240:	mov	x2, x27
    1244:	mov	x1, x28
    1248:	mov	x4, #0x0                   	// #0
    124c:	mov	w0, #0x27                  	// #39
    1250:	bl	0 <_ZN4llvm8CastInst6CreateENS_11Instruction7CastOpsEPNS_5ValueEPNS_4TypeERKNS_5TwineEPS1_>
    1254:	ldr	x2, [sp, #520]
    1258:	mov	x28, x0
    125c:	ldr	x3, [sp, #528]
    1260:	mov	x1, x23
    1264:	bl	324 <_ZNK4llvm24IRBuilderDefaultInserter12InsertHelperEPNS_11InstructionERKNS_5TwineEPNS_10BasicBlockENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS1_Lb1ELb0EvEELb0ELb0EEE.isra.0>
    1268:	mov	x1, x28
    126c:	mov	x0, x19
    1270:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1274:	b	1214 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x968>
    1278:	ldr	w0, [x20, #20]
    127c:	ubfx	x0, x0, #0, #28
    1280:	cmp	w0, #0x2
    1284:	b.ne	aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1f8>  // b.any
    1288:	ldr	x0, [sp, #104]
    128c:	ldur	x0, [x0, #-24]
    1290:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
    1294:	cbz	w0, aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1f8>
    1298:	sub	w1, w0, #0x1
    129c:	tst	w1, w0
    12a0:	b.ne	aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1f8>  // b.any
    12a4:	mov	w1, #0x0                   	// #0
    12a8:	mov	x0, x20
    12ac:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    12b0:	add	x27, sp, #0x198
    12b4:	mov	x26, x0
    12b8:	mov	w1, #0x1                   	// #1
    12bc:	mov	x0, x20
    12c0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    12c4:	mov	x2, x23
    12c8:	mov	x25, x0
    12cc:	mov	x1, x27
    12d0:	mov	x0, x26
    12d4:	bl	65c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>
    12d8:	mov	w24, w0
    12dc:	cbz	w0, 12ec <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xa40>
    12e0:	ldr	x0, [sp, #408]
    12e4:	cmp	x25, x0
    12e8:	b.eq	133c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xa90>  // b.none
    12ec:	mov	x2, x23
    12f0:	mov	x1, x27
    12f4:	mov	x0, x25
    12f8:	bl	65c <_ZZL30foldGuardedRotateToFunnelShiftRN4llvm11InstructionEENKUlPNS_5ValueERS3_S4_E_clES3_S4_S4_.isra.0>
    12fc:	mov	w24, w0
    1300:	cbz	w0, aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1f8>
    1304:	ldr	x0, [sp, #408]
    1308:	cmp	x26, x0
    130c:	b.ne	aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1f8>  // b.any
    1310:	sub	w0, w24, #0x82
    1314:	cmp	w0, #0x1
    1318:	b.ls	133c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xa90>  // b.plast
    131c:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1320:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1324:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1328:	add	x3, x3, #0x0
    132c:	add	x1, x1, #0x0
    1330:	add	x0, x0, #0x0
    1334:	mov	w2, #0x73                  	// #115
    1338:	bl	0 <__assert_fail>
    133c:	ldr	x26, [sp, #408]
    1340:	mov	x0, x20
    1344:	cmp	x25, x26
    1348:	cset	w1, eq  // eq = none
    134c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1350:	mov	x27, x0
    1354:	cmp	x25, x26
    1358:	mov	x0, x20
    135c:	cset	w1, ne  // ne = any
    1360:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1364:	mov	x26, x0
    1368:	mov	x0, x27
    136c:	bl	0 <_ZNK4llvm10BasicBlock13getTerminatorEv>
    1370:	ldr	x1, [sp, #104]
    1374:	ldr	x25, [x1, #16]
    1378:	add	x1, sp, #0x188
    137c:	str	x1, [sp, #512]
    1380:	ldr	x1, [sp, #424]
    1384:	str	x1, [sp, #520]
    1388:	mov	x1, x0
    138c:	mov	x0, x19
    1390:	str	x25, [sp, #536]
    1394:	str	x26, [sp, #544]
    1398:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    139c:	ands	w0, w0, #0xff
    13a0:	str	w0, [sp, #164]
    13a4:	b.eq	aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1f8>  // b.none
    13a8:	ldr	w0, [sp, #392]
    13ac:	cmp	w0, #0x20
    13b0:	b.ne	aa4 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1f8>  // b.any
    13b4:	mov	x0, x25
    13b8:	bl	0 <_ZNK4llvm10BasicBlock19getFirstInsertionPtEv>
    13bc:	mov	x26, x0
    13c0:	mov	x0, x25
    13c4:	bl	0 <_ZNK4llvm10BasicBlock10getContextEv>
    13c8:	strb	wzr, [sp, #558]
    13cc:	add	x1, sp, #0x200
    13d0:	stp	xzr, x25, [x1]
    13d4:	add	x25, x25, #0x28
    13d8:	cmp	x26, x25
    13dc:	stp	x26, x0, [x1, #16]
    13e0:	mov	w0, #0x200                 	// #512
    13e4:	str	xzr, [sp, #544]
    13e8:	str	wzr, [sp, #552]
    13ec:	strh	w0, [sp, #556]
    13f0:	str	xzr, [sp, #560]
    13f4:	str	xzr, [sp, #568]
    13f8:	b.eq	1438 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb8c>  // b.none
    13fc:	ldr	x0, [x26]
    1400:	tst	w0, #0x4
    1404:	b.eq	1414 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb68>  // b.none
    1408:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    140c:	add	x3, x3, #0x0
    1410:	b	9e0 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x134>
    1414:	ldr	x0, [x26, #24]
    1418:	str	x0, [sp, #472]
    141c:	mov	x0, x21
    1420:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1424:	mov	x1, x21
    1428:	mov	x0, x19
    142c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1430:	mov	x0, x21
    1434:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1438:	mov	x0, x20
    143c:	bl	0 <_ZNK4llvm11Instruction9getModuleEv>
    1440:	ldr	x1, [sp, #104]
    1444:	mov	x2, x21
    1448:	mov	x3, #0x1                   	// #1
    144c:	ldur	x1, [x1, #-24]
    1450:	str	x1, [sp, #472]
    1454:	mov	w1, w24
    1458:	bl	0 <_ZN4llvm9Intrinsic14getDeclarationEPNS_6ModuleEjNS_8ArrayRefIPNS_4TypeEEE>
    145c:	mov	x25, x0
    1460:	add	x24, sp, #0x1c0
    1464:	ldr	x0, [sp, #408]
    1468:	stp	x0, x0, [sp, #472]
    146c:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1470:	ldr	x0, [sp, #424]
    1474:	add	x1, x1, #0x0
    1478:	str	x0, [sp, #488]
    147c:	mov	x0, x24
    1480:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1484:	mov	x4, x24
    1488:	mov	x2, x21
    148c:	mov	x1, x25
    1490:	mov	x5, #0x0                   	// #0
    1494:	mov	x3, #0x3                   	// #3
    1498:	mov	x0, x19
    149c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    14a0:	mov	x1, x0
    14a4:	mov	x0, x20
    14a8:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
    14ac:	mov	x0, x19
    14b0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    14b4:	b	aa8 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x1fc>
    14b8:	add	x1, x1, #0x0
    14bc:	ldr	x0, [x1, #16]
    14c0:	str	x0, [x3, #16]
    14c4:	ldp	x4, x5, [x1]
    14c8:	stp	x4, x5, [x3]
    14cc:	ldur	x0, [x1, #22]
    14d0:	stur	x0, [x3, #22]
    14d4:	ldr	x0, [x2, #24]
    14d8:	add	x0, x0, #0x1e
    14dc:	str	x0, [x2, #24]
    14e0:	b	1004 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x758>
    14e4:	mov	w22, #0x0                   	// #0
    14e8:	b	1090 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0x7e4>
    14ec:	ldr	x0, [sp, #120]
    14f0:	ldr	x0, [x0, #8]
    14f4:	str	x0, [sp, #120]
    14f8:	b	95c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xb0>
    14fc:	cbz	w26, 1534 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc88>
    1500:	ldr	x0, [sp, #128]
    1504:	ldr	x19, [x0, #80]
    1508:	ldr	x0, [sp, #152]
    150c:	cmp	x0, x19
    1510:	b.eq	1534 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc88>  // b.none
    1514:	ldr	x0, [x19]
    1518:	tst	w0, #0x4
    151c:	b.ne	978 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcc>  // b.any
    1520:	sub	x0, x19, #0x18
    1524:	mov	x1, #0x0                   	// #0
    1528:	bl	0 <_ZN4llvm27SimplifyInstructionsInBlockEPNS_10BasicBlockEPKNS_17TargetLibraryInfoE>
    152c:	ldr	x19, [x19, #8]
    1530:	b	1508 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc5c>
    1534:	ldr	w0, [sp, #176]
    1538:	orr	w26, w0, w26
    153c:	ldr	x0, [sp, #696]
    1540:	cbz	x0, 1548 <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xc9c>
    1544:	bl	0 <_ZdlPv>
    1548:	ldr	x0, [sp, #672]
    154c:	ldr	w1, [sp, #688]
    1550:	lsl	x1, x1, #4
    1554:	bl	0 <_ZdlPvm>
    1558:	ldr	x0, [sp, #608]
    155c:	add	x1, sp, #0x270
    1560:	cmp	x0, x1
    1564:	b.eq	156c <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE+0xcc0>  // b.none
    1568:	bl	0 <free>
    156c:	mov	w0, w26
    1570:	ldp	x29, x30, [sp]
    1574:	ldp	x19, x20, [sp, #16]
    1578:	ldp	x21, x22, [sp, #32]
    157c:	ldp	x23, x24, [sp, #48]
    1580:	ldp	x25, x26, [sp, #64]
    1584:	ldp	x27, x28, [sp, #80]
    1588:	add	sp, sp, #0x2d0
    158c:	ret

0000000000001590 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE>:
    1590:	stp	x29, x30, [sp, #-48]!
    1594:	mov	x29, sp
    1598:	stp	x19, x20, [sp, #16]
    159c:	mov	x20, x0
    15a0:	ldr	x0, [x0, #8]
    15a4:	str	x21, [sp, #32]
    15a8:	cbnz	x0, 15cc <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x3c>
    15ac:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    15b0:	add	x3, x3, #0x0
    15b4:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    15b8:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    15bc:	add	x1, x1, #0x0
    15c0:	add	x0, x0, #0x0
    15c4:	mov	w2, #0xdd                  	// #221
    15c8:	b	161c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x8c>
    15cc:	mov	x19, x1
    15d0:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass2IDE>
    15d4:	ldr	x4, [x0, #8]
    15d8:	ldr	x1, [x1]
    15dc:	ldr	x0, [x0]
    15e0:	mov	x2, x0
    15e4:	cmp	x4, x0
    15e8:	b.eq	1600 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x70>  // b.none
    15ec:	ldr	x3, [x0], #16
    15f0:	cmp	x3, x1
    15f4:	b.ne	15e0 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x50>  // b.any
    15f8:	ldr	x0, [x2, #8]
    15fc:	cbnz	x0, 1620 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x90>
    1600:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1604:	add	x3, x3, #0x0
    1608:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    160c:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1610:	add	x1, x1, #0x0
    1614:	add	x0, x0, #0x0
    1618:	mov	w2, #0xe9                  	// #233
    161c:	bl	0 <__assert_fail>
    1620:	ldr	x2, [x0]
    1624:	ldr	x2, [x2, #96]
    1628:	blr	x2
    162c:	mov	x1, x19
    1630:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1634:	mov	x21, x0
    1638:	ldr	x0, [x20, #8]
    163c:	cbnz	x0, 164c <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xbc>
    1640:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1644:	add	x3, x3, #0x0
    1648:	b	15b4 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x24>
    164c:	adrp	x1, 0 <_ZN4llvm24DominatorTreeWrapperPass2IDE>
    1650:	ldp	x2, x4, [x0]
    1654:	ldr	x1, [x1]
    1658:	mov	x0, x2
    165c:	cmp	x4, x2
    1660:	b.eq	1678 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xe8>  // b.none
    1664:	ldr	x3, [x2], #16
    1668:	cmp	x3, x1
    166c:	b.ne	1658 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xc8>  // b.any
    1670:	ldr	x0, [x0, #8]
    1674:	cbnz	x0, 1684 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0xf4>
    1678:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    167c:	add	x3, x3, #0x0
    1680:	b	1608 <_ZN12_GLOBAL__N_132AggressiveInstCombinerLegacyPass13runOnFunctionERN4llvm8FunctionE+0x78>
    1684:	ldr	x2, [x0]
    1688:	ldr	x2, [x2, #96]
    168c:	blr	x2
    1690:	add	x2, x0, #0x20
    1694:	mov	x1, x21
    1698:	mov	x0, x19
    169c:	ldp	x19, x20, [sp, #16]
    16a0:	ldr	x21, [sp, #32]
    16a4:	ldp	x29, x30, [sp], #48
    16a8:	b	8ac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>

00000000000016ac <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>:
    16ac:	stp	x29, x30, [sp, #-224]!
    16b0:	mov	x0, x2
    16b4:	mov	x29, sp
    16b8:	stp	x21, x22, [sp, #32]
    16bc:	adrp	x22, 0 <_ZN4llvm21TargetLibraryAnalysis3KeyE>
    16c0:	mov	x21, x1
    16c4:	ldr	x22, [x22]
    16c8:	stp	x19, x20, [sp, #16]
    16cc:	mov	x19, x8
    16d0:	mov	x20, x2
    16d4:	mov	x1, x22
    16d8:	str	x23, [sp, #48]
    16dc:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    16e0:	cbnz	w0, 1704 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x58>
    16e4:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    16e8:	add	x3, x3, #0x0
    16ec:	adrp	x1, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    16f0:	adrp	x0, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    16f4:	add	x1, x1, #0x0
    16f8:	add	x0, x0, #0x0
    16fc:	mov	w2, #0x30a                 	// #778
    1700:	bl	0 <__assert_fail>
    1704:	mov	x1, x22
    1708:	adrp	x22, 0 <_ZN4llvm21DominatorTreeAnalysis3KeyE>
    170c:	mov	x2, x21
    1710:	mov	x0, x20
    1714:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    1718:	add	x23, x0, #0x8
    171c:	ldr	x22, [x22]
    1720:	mov	x0, x20
    1724:	mov	x1, x22
    1728:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    172c:	cbnz	w0, 173c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x90>
    1730:	adrp	x3, 0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1734:	add	x3, x3, #0x0
    1738:	b	16ec <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x40>
    173c:	mov	x2, x21
    1740:	mov	x1, x22
    1744:	mov	x0, x20
    1748:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
    174c:	mov	x1, x23
    1750:	add	x2, x0, #0x8
    1754:	add	x20, sp, #0x70
    1758:	mov	x0, x21
    175c:	bl	8ac <_ZL7runImplRN4llvm8FunctionERNS_17TargetLibraryInfoERNS_13DominatorTreeE>
    1760:	tst	w0, #0xff
    1764:	b.ne	179c <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0xf0>  // b.any
    1768:	mov	x0, x19
    176c:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1770:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
    1774:	mov	x8, x20
    1778:	mov	x0, x19
    177c:	ldr	x1, [x1]
    1780:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    1784:	mov	x0, x19
    1788:	ldp	x19, x20, [sp, #16]
    178c:	ldp	x21, x22, [sp, #32]
    1790:	ldr	x23, [sp, #48]
    1794:	ldp	x29, x30, [sp], #224
    1798:	ret
    179c:	mov	x0, x20
    17a0:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    17a4:	mov	x0, x20
    17a8:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    17ac:	tst	w0, #0xff
    17b0:	b.ne	17c8 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x11c>  // b.any
    17b4:	adrp	x1, 0 <_ZN4llvm11CFGAnalyses6SetKeyE>
    17b8:	add	x8, sp, #0x48
    17bc:	mov	x0, x20
    17c0:	ldr	x1, [x1]
    17c4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    17c8:	adrp	x1, 0 <_ZN4llvm9AAManager3KeyE>
    17cc:	mov	x0, x20
    17d0:	ldr	x1, [x1]
    17d4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    17d8:	adrp	x1, 0 <_ZN4llvm9GlobalsAA3KeyE>
    17dc:	mov	x0, x20
    17e0:	ldr	x1, [x1]
    17e4:	bl	0 <_ZNK4llvm14ilist_iteratorINS_12ilist_detail12node_optionsINS_10BasicBlockELb1ELb0EvEELb0ELb0EEdeEv.isra.0.part.0>
    17e8:	mov	x3, x20
    17ec:	add	x1, x19, #0x28
    17f0:	mov	x0, x19
    17f4:	mov	w2, #0x2                   	// #2
    17f8:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    17fc:	add	x1, x19, #0x60
    1800:	add	x0, x19, #0x38
    1804:	add	x3, x20, #0x38
    1808:	mov	w2, #0x2                   	// #2
    180c:	bl	0 <_ZN4llvm19SmallPtrSetImplBaseC2EPPKvjOS0_>
    1810:	ldp	x1, x0, [sp, #176]
    1814:	cmp	x0, x1
    1818:	b.eq	1820 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0x174>  // b.none
    181c:	bl	0 <free>
    1820:	ldp	x1, x0, [sp, #120]
    1824:	cmp	x0, x1
    1828:	b.eq	1784 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0xd8>  // b.none
    182c:	bl	0 <free>
    1830:	b	1784 <_ZN4llvm25AggressiveInstCombinePass3runERNS_8FunctionERNS_15AnalysisManagerIS1_JEEE+0xd8>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm9BitVector8allocateEm.isra.0:

0000000000000000 <_ZN4llvm9BitVector8allocateEm.isra.0>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	str	x21, [sp, #32]
  14:	lsl	x21, x0, #3
  18:	mov	x0, x21
  1c:	bl	0 <malloc>
  20:	mov	x20, x0
  24:	cbnz	x0, 3c <_ZN4llvm9BitVector8allocateEm.isra.0+0x3c>
  28:	cbz	x21, 54 <_ZN4llvm9BitVector8allocateEm.isra.0+0x54>
  2c:	adrp	x0, 0 <_ZN4llvm9BitVector8allocateEm.isra.0>
  30:	mov	w1, #0x1                   	// #1
  34:	add	x0, x0, #0x0
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	mov	x0, x20
  40:	mov	x1, x19
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	mov	x21, #0x1                   	// #1
  58:	b	18 <_ZN4llvm9BitVector8allocateEm.isra.0+0x18>

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_4_FUNEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x0, 0 <_ZSt15__once_callable>
   8:	ldr	x1, [x0]
   c:	add	x0, x0, #0x0
  10:	blr	x1
  14:	mrs	x1, tpidr_el0
  18:	mov	x29, sp
  1c:	ldp	x29, x30, [sp], #16
  20:	ldr	x0, [x1, x0]
  24:	ldp	x1, x2, [x0]
  28:	ldr	x0, [x2]
  2c:	mov	x16, x1
  30:	br	x16

Disassembly of section .text._ZN4llvm12PatternMatch14specific_bbval5matchINS_10BasicBlockEEEbPT_.isra.0:

0000000000000000 <_ZN4llvm12PatternMatch14specific_bbval5matchINS_10BasicBlockEEEbPT_.isra.0>:
   0:	cbnz	x1, 2c <_ZN4llvm12PatternMatch14specific_bbval5matchINS_10BasicBlockEEEbPT_.isra.0+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm12PatternMatch14specific_bbval5matchINS_10BasicBlockEEEbPT_.isra.0>
   c:	adrp	x1, 0 <_ZN4llvm12PatternMatch14specific_bbval5matchINS_10BasicBlockEEEbPT_.isra.0>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm12PatternMatch14specific_bbval5matchINS_10BasicBlockEEEbPT_.isra.0>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldr	x0, [x0]
  30:	cmp	x0, x1
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	mov	w2, #0x101                 	// #257
   4:	strh	w2, [x0, #16]
   8:	ldrb	w2, [x1]
   c:	stp	xzr, xzr, [x0]
  10:	cbz	w2, 20 <_ZN4llvm5TwineC1EPKc+0x20>
  14:	str	x1, [x0]
  18:	mov	w1, #0x3                   	// #3
  1c:	strb	w1, [x0, #16]
  20:	ldrb	w1, [x0, #16]
  24:	cmp	w1, #0x2
  28:	b.ne	6c <_ZN4llvm5TwineC1EPKc+0x6c>  // b.any
  2c:	ldr	x0, [x0]
  30:	ldrb	w1, [x0, #16]
  34:	cbz	w1, 44 <_ZN4llvm5TwineC1EPKc+0x44>
  38:	ldrb	w0, [x0, #17]
  3c:	cmp	w0, #0x1
  40:	b.ne	6c <_ZN4llvm5TwineC1EPKc+0x6c>  // b.any
  44:	stp	x29, x30, [sp, #-16]!
  48:	adrp	x3, 0 <_ZN4llvm5TwineC1EPKc>
  4c:	adrp	x1, 0 <_ZN4llvm5TwineC1EPKc>
  50:	mov	x29, sp
  54:	adrp	x0, 0 <_ZN4llvm5TwineC1EPKc>
  58:	add	x3, x3, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	w2, #0x112                 	// #274
  68:	bl	0 <__assert_fail>
  6c:	ret

Disassembly of section .text._ZNK4llvm5Value9hasOneUseEv:

0000000000000000 <_ZNK4llvm5Value9hasOneUseEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
  14:	ldr	x0, [x19, #8]
  18:	cbz	x0, 34 <_ZNK4llvm5Value9hasOneUseEv+0x34>
  1c:	ldr	x0, [x0, #8]
  20:	cmp	x0, #0x0
  24:	cset	w0, eq  // eq = none
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	mov	w0, #0x0                   	// #0
  38:	b	28 <_ZNK4llvm5Value9hasOneUseEv+0x28>

Disassembly of section .text._ZNK4llvm4User14getOperandListEv:

0000000000000000 <_ZNK4llvm4User14getOperandListEv>:
   0:	ldrb	w1, [x0, #23]
   4:	tbz	w1, #6, 10 <_ZNK4llvm4User14getOperandListEv+0x10>
   8:	ldur	x0, [x0, #-8]
   c:	ret
  10:	ldr	w1, [x0, #20]
  14:	mov	w2, #0x18                  	// #24
  18:	ubfx	x1, x1, #0, #28
  1c:	umsubl	x0, w1, w2, x0
  20:	b	c <_ZNK4llvm4User14getOperandListEv+0xc>

Disassembly of section .text._ZNK4llvm4User10getOperandEj:

0000000000000000 <_ZNK4llvm4User10getOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	w19, w1
  10:	ldr	w1, [x0, #20]
  14:	ubfx	x1, x1, #0, #28
  18:	cmp	w1, w19
  1c:	b.hi	40 <_ZNK4llvm4User10getOperandEj+0x40>  // b.pmore
  20:	adrp	x3, 0 <_ZNK4llvm4User10getOperandEj>
  24:	adrp	x1, 0 <_ZNK4llvm4User10getOperandEj>
  28:	adrp	x0, 0 <_ZNK4llvm4User10getOperandEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0xaa                  	// #170
  3c:	bl	0 <__assert_fail>
  40:	bl	0 <_ZNK4llvm4User10getOperandEj>
  44:	mov	w1, #0x18                  	// #24
  48:	umull	x19, w19, w1
  4c:	ldr	x0, [x0, x19]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef5trackEv:

0000000000000000 <_ZN4llvm13TrackingMDRef5trackEv>:
   0:	ldr	x1, [x0]
   4:	cbz	x1, 10 <_ZN4llvm13TrackingMDRef5trackEv+0x10>
   8:	mov	x2, #0x2                   	// #2
   c:	b	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>
  10:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef7untrackEv:

0000000000000000 <_ZN4llvm13TrackingMDRef7untrackEv>:
   0:	ldr	x1, [x0]
   4:	cbz	x1, c <_ZN4llvm13TrackingMDRef7untrackEv+0xc>
   8:	b	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
   c:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRefaSEOS0_:

0000000000000000 <_ZN4llvm13TrackingMDRefaSEOS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	cmp	x1, x0
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	3c <_ZN4llvm13TrackingMDRefaSEOS0_+0x3c>  // b.none
  18:	mov	x20, x1
  1c:	bl	0 <_ZN4llvm13TrackingMDRefaSEOS0_>
  20:	ldr	x1, [x20]
  24:	str	x1, [x19]
  28:	cbz	x1, 3c <_ZN4llvm13TrackingMDRefaSEOS0_+0x3c>
  2c:	mov	x2, x19
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  38:	str	xzr, [x20]
  3c:	mov	x0, x19
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm5APIntC2Ejmb:

0000000000000000 <_ZN4llvm5APIntC1Ejmb>:
   0:	str	w1, [x0, #8]
   4:	mov	w4, w1
   8:	cbnz	w1, 34 <_ZN4llvm5APIntC1Ejmb+0x34>
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm5APIntC1Ejmb>
  14:	adrp	x1, 0 <_ZN4llvm5APIntC1Ejmb>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm5APIntC1Ejmb>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x117                 	// #279
  30:	bl	0 <__assert_fail>
  34:	mov	x1, x2
  38:	cmp	w4, #0x40
  3c:	b.hi	58 <_ZN4llvm5APIntC1Ejmb+0x58>  // b.pmore
  40:	neg	w4, w4
  44:	mov	x3, #0xffffffffffffffff    	// #-1
  48:	lsr	x4, x3, x4
  4c:	and	x4, x4, x2
  50:	str	x4, [x0]
  54:	ret
  58:	and	w2, w3, #0xff
  5c:	b	0 <_ZN4llvm5APInt12initSlowCaseEmb>

Disassembly of section .text._ZN4llvm5APIntC2ERKS0_:

0000000000000000 <_ZN4llvm5APIntC1ERKS0_>:
   0:	ldr	w4, [x1, #8]
   4:	mov	x2, x0
   8:	str	w4, [x0, #8]
   c:	cmp	w4, #0x40
  10:	b.hi	20 <_ZN4llvm5APIntC1ERKS0_+0x20>  // b.pmore
  14:	ldr	x0, [x1]
  18:	str	x0, [x2]
  1c:	ret
  20:	b	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>

Disassembly of section .text._ZN4llvm5APIntD2Ev:

0000000000000000 <_ZN4llvm5APIntD1Ev>:
   0:	ldr	w1, [x0, #8]
   4:	cmp	w1, #0x40
   8:	b.ls	18 <_ZN4llvm5APIntD1Ev+0x18>  // b.plast
   c:	ldr	x0, [x0]
  10:	cbz	x0, 18 <_ZN4llvm5APIntD1Ev+0x18>
  14:	b	0 <_ZdaPv>
  18:	ret

Disassembly of section .text._ZNK4llvm5APInt10isOneValueEv:

0000000000000000 <_ZNK4llvm5APInt10isOneValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	w19, [x0, #8]
  10:	cmp	w19, #0x40
  14:	b.hi	30 <_ZNK4llvm5APInt10isOneValueEv+0x30>  // b.pmore
  18:	ldr	x0, [x0]
  1c:	cmp	x0, #0x1
  20:	cset	w0, eq  // eq = none
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	sub	w19, w19, #0x1
  34:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  38:	cmp	w19, w0
  3c:	b	20 <_ZNK4llvm5APInt10isOneValueEv+0x20>

Disassembly of section .text._ZNK4llvm5APIntntEv:

0000000000000000 <_ZNK4llvm5APIntntEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	w19, [x0, #8]
  10:	cmp	w19, #0x40
  14:	b.hi	30 <_ZNK4llvm5APIntntEv+0x30>  // b.pmore
  18:	ldr	x0, [x0]
  1c:	cmp	x0, #0x0
  20:	cset	w0, eq  // eq = none
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  34:	cmp	w0, w19
  38:	b	20 <_ZNK4llvm5APIntntEv+0x20>

Disassembly of section .text._ZNK4llvm5APInteqERKS0_:

0000000000000000 <_ZNK4llvm5APInteqERKS0_>:
   0:	ldr	w4, [x0, #8]
   4:	ldr	w5, [x1, #8]
   8:	cmp	w4, w5
   c:	b.eq	38 <_ZNK4llvm5APInteqERKS0_+0x38>  // b.none
  10:	stp	x29, x30, [sp, #-16]!
  14:	adrp	x3, 0 <_ZNK4llvm5APInteqERKS0_>
  18:	adrp	x1, 0 <_ZNK4llvm5APInteqERKS0_>
  1c:	mov	x29, sp
  20:	adrp	x0, 0 <_ZNK4llvm5APInteqERKS0_>
  24:	add	x3, x3, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0x47f                 	// #1151
  34:	bl	0 <__assert_fail>
  38:	cmp	w4, #0x40
  3c:	b.hi	58 <_ZNK4llvm5APInteqERKS0_+0x58>  // b.pmore
  40:	mov	x3, x0
  44:	ldr	x0, [x1]
  48:	ldr	x1, [x3]
  4c:	cmp	x1, x0
  50:	cset	w0, eq  // eq = none
  54:	ret
  58:	b	0 <_ZNK4llvm5APInt13EqualSlowCaseERKS0_>

Disassembly of section .text._ZN4llvm5APInt11isSameValueERKS0_S2_:

0000000000000000 <_ZN4llvm5APInt11isSameValueERKS0_S2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldr	w3, [x0, #8]
   c:	ldr	w2, [x1, #8]
  10:	stp	x19, x20, [sp, #16]
  14:	cmp	w3, w2
  18:	str	x21, [sp, #32]
  1c:	b.ne	3c <_ZN4llvm5APInt11isSameValueERKS0_S2_+0x3c>  // b.any
  20:	bl	0 <_ZN4llvm5APInt11isSameValueERKS0_S2_>
  24:	and	w19, w0, #0xff
  28:	mov	w0, w19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldr	x21, [sp, #32]
  34:	ldp	x29, x30, [sp], #64
  38:	ret
  3c:	mov	x19, x1
  40:	add	x20, sp, #0x30
  44:	b.ls	78 <_ZN4llvm5APInt11isSameValueERKS0_S2_+0x78>  // b.plast
  48:	mov	x21, x0
  4c:	mov	w1, w3
  50:	mov	x0, x19
  54:	mov	x8, x20
  58:	bl	0 <_ZNK4llvm5APInt4zextEj>
  5c:	mov	x1, x20
  60:	mov	x0, x21
  64:	bl	0 <_ZN4llvm5APInt11isSameValueERKS0_S2_>
  68:	and	w19, w0, #0xff
  6c:	mov	x0, x20
  70:	bl	0 <_ZN4llvm5APInt11isSameValueERKS0_S2_>
  74:	b	28 <_ZN4llvm5APInt11isSameValueERKS0_S2_+0x28>
  78:	mov	w1, w2
  7c:	mov	x8, x20
  80:	bl	0 <_ZNK4llvm5APInt4zextEj>
  84:	mov	x1, x19
  88:	mov	x0, x20
  8c:	b	64 <_ZN4llvm5APInt11isSameValueERKS0_S2_+0x64>

Disassembly of section .text._ZNK4llvm5APInt17countLeadingZerosEv:

0000000000000000 <_ZNK4llvm5APInt17countLeadingZerosEv>:
   0:	ldr	w1, [x0, #8]
   4:	mov	x2, x0
   8:	cmp	w1, #0x40
   c:	b.hi	30 <_ZNK4llvm5APInt17countLeadingZerosEv+0x30>  // b.pmore
  10:	ldr	x2, [x2]
  14:	sub	w1, w1, #0x40
  18:	mov	w0, #0x40                  	// #64
  1c:	clz	x3, x2
  20:	cmp	x2, #0x0
  24:	csel	w0, w0, w3, eq  // eq = none
  28:	add	w0, w1, w0
  2c:	ret
  30:	b	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>

Disassembly of section .text._ZNK4llvm5APInt12getZExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getZExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	cmp	w20, #0x40
  18:	b.hi	2c <_ZNK4llvm5APInt12getZExtValueEv+0x2c>  // b.pmore
  1c:	ldr	x0, [x0]
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	bl	0 <_ZNK4llvm5APInt12getZExtValueEv>
  30:	sub	w20, w20, w0
  34:	cmp	w20, #0x40
  38:	b.ls	5c <_ZNK4llvm5APInt12getZExtValueEv+0x5c>  // b.plast
  3c:	adrp	x3, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  40:	adrp	x1, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  44:	adrp	x0, 0 <_ZNK4llvm5APInt12getZExtValueEv>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x657                 	// #1623
  58:	bl	0 <__assert_fail>
  5c:	ldr	x0, [x19]
  60:	ldr	x0, [x0]
  64:	b	20 <_ZNK4llvm5APInt12getZExtValueEv+0x20>

Disassembly of section .text._ZNK4llvm5APInt3ugtEm:

0000000000000000 <_ZNK4llvm5APInt3ugtEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w20, [x0, #8]
  14:	str	x21, [sp, #32]
  18:	mov	x21, x1
  1c:	cmp	w20, #0x40
  20:	b.ls	34 <_ZNK4llvm5APInt3ugtEm+0x34>  // b.plast
  24:	bl	0 <_ZNK4llvm5APInt3ugtEm>
  28:	sub	w20, w20, w0
  2c:	cmp	w20, #0x40
  30:	b.hi	54 <_ZNK4llvm5APInt3ugtEm+0x54>  // b.pmore
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm5APInt3ugtEm>
  3c:	cmp	x0, x21
  40:	cset	w0, hi  // hi = pmore
  44:	ldp	x19, x20, [sp, #16]
  48:	ldr	x21, [sp, #32]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	mov	w0, #0x1                   	// #1
  58:	b	44 <_ZNK4llvm5APInt3ugtEm+0x44>

Disassembly of section .text._ZNK4llvm19SmallPtrSetImplBase10EndPointerEv:

0000000000000000 <_ZNK4llvm19SmallPtrSetImplBase10EndPointerEv>:
   0:	ldp	x2, x1, [x0, #8]
   4:	cmp	x1, x2
   8:	b.ne	18 <_ZNK4llvm19SmallPtrSetImplBase10EndPointerEv+0x18>  // b.any
   c:	ldr	w0, [x0, #28]
  10:	add	x0, x1, x0, lsl #3
  14:	ret
  18:	ldr	w0, [x0, #24]
  1c:	b	10 <_ZNK4llvm19SmallPtrSetImplBase10EndPointerEv+0x10>

Disassembly of section .text._ZNK4llvm19SmallPtrSetImplBase8find_impEPKv:

0000000000000000 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldp	x2, x3, [x0, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x3, x2
  1c:	b.ne	44 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x44>  // b.any
  20:	ldr	w0, [x0, #28]
  24:	add	x0, x2, x0, lsl #3
  28:	cmp	x2, x0
  2c:	b.eq	58 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x58>  // b.none
  30:	ldr	x1, [x2]
  34:	cmp	x1, x20
  38:	b.eq	68 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x68>  // b.none
  3c:	add	x2, x2, #0x8
  40:	b	28 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x28>
  44:	bl	0 <_ZNK4llvm19SmallPtrSetImplBase13FindBucketForEPKv>
  48:	mov	x2, x0
  4c:	ldr	x0, [x0]
  50:	cmp	x20, x0
  54:	b.eq	68 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv+0x68>  // b.none
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZNK4llvm19SmallPtrSetImplBase8find_impEPKv>
  68:	mov	x0, x2
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	ret

Disassembly of section .text._ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv:

0000000000000000 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>:
   0:	ldp	x1, x2, [x0]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  14:	adrp	x1, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0xf8                  	// #248
  30:	bl	0 <__assert_fail>
  34:	ldr	x1, [x0]
  38:	cmp	x2, x1
  3c:	b.eq	60 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x60>  // b.none
  40:	ldr	x3, [x1]
  44:	cmn	x3, #0x1
  48:	b.eq	54 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x54>  // b.none
  4c:	cmn	x3, #0x2
  50:	b.ne	60 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x60>  // b.any
  54:	add	x1, x1, #0x8
  58:	str	x1, [x0]
  5c:	b	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>
  60:	ret

Disassembly of section .text._ZNK4llvm4Type13getScalarTypeEv:

0000000000000000 <_ZNK4llvm4Type13getScalarTypeEv>:
   0:	ldrb	w1, [x0, #8]
   4:	cmp	w1, #0x10
   8:	b.ne	14 <_ZNK4llvm4Type13getScalarTypeEv+0x14>  // b.any
   c:	ldr	x0, [x0, #16]
  10:	ldr	x0, [x0]
  14:	ret

Disassembly of section .text._ZN4llvm17PreservedAnalysesC2Ev:

0000000000000000 <_ZN4llvm17PreservedAnalysesC1Ev>:
   0:	mov	x1, x0
   4:	add	x3, x0, #0x60
   8:	mov	x2, #0x2                   	// #2
   c:	str	xzr, [x1], #40
  10:	str	x2, [x0, #24]
  14:	stp	x1, x1, [x0, #8]
  18:	str	wzr, [x0, #32]
  1c:	stp	xzr, x3, [x0, #56]
  20:	stp	x3, x2, [x0, #72]
  24:	str	wzr, [x0, #88]
  28:	ret

Disassembly of section .text._ZNK4llvm17PreservedAnalyses15areAllPreservedEv:

0000000000000000 <_ZNK4llvm17PreservedAnalyses15areAllPreservedEv>:
   0:	ldp	w2, w1, [x0, #84]
   4:	cmp	w2, w1
   8:	b.ne	78 <_ZNK4llvm17PreservedAnalyses15areAllPreservedEv+0x78>  // b.any
   c:	stp	x29, x30, [sp, #-96]!
  10:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
  14:	mov	x29, sp
  18:	ldr	x1, [x1]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, x0
  24:	bl	0 <_ZNK4llvm17PreservedAnalyses15areAllPreservedEv>
  28:	mov	x20, x0
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm17PreservedAnalyses15areAllPreservedEv>
  34:	stp	x20, x0, [sp, #64]
  38:	add	x0, sp, #0x40
  3c:	bl	0 <_ZNK4llvm17PreservedAnalyses15areAllPreservedEv>
  40:	ldr	x0, [x19]
  44:	stp	x19, x0, [sp, #80]
  48:	mov	x0, x19
  4c:	bl	0 <_ZNK4llvm17PreservedAnalyses15areAllPreservedEv>
  50:	stp	x0, x0, [sp, #32]
  54:	add	x0, sp, #0x20
  58:	bl	0 <_ZNK4llvm17PreservedAnalyses15areAllPreservedEv>
  5c:	ldr	x0, [sp, #32]
  60:	ldr	x1, [sp, #64]
  64:	ldp	x19, x20, [sp, #16]
  68:	cmp	x1, x0
  6c:	cset	w0, ne  // ne = any
  70:	ldp	x29, x30, [sp], #96
  74:	ret
  78:	mov	w0, #0x0                   	// #0
  7c:	ret

Disassembly of section .text._ZN4llvm8CallBase17CountBundleInputsENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE:

0000000000000000 <_ZN4llvm8CallBase17CountBundleInputsENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>:
   0:	mov	x2, x0
   4:	mov	x0, #0x38                  	// #56
   8:	madd	x1, x1, x0, x2
   c:	mov	w0, #0x0                   	// #0
  10:	cmp	x1, x2
  14:	b.eq	30 <_ZN4llvm8CallBase17CountBundleInputsENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x30>  // b.none
  18:	ldp	x4, x3, [x2, #32]
  1c:	add	x2, x2, #0x38
  20:	sub	x3, x3, x4
  24:	asr	x3, x3, #3
  28:	add	w0, w0, w3
  2c:	b	10 <_ZN4llvm8CallBase17CountBundleInputsENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x10>
  30:	ret

Disassembly of section .text._ZNK4llvm7PHINode16getIncomingBlockEj:

0000000000000000 <_ZNK4llvm7PHINode16getIncomingBlockEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	w19, w1
  14:	bl	0 <_ZNK4llvm7PHINode16getIncomingBlockEj>
  18:	ldr	w1, [x20, #56]
  1c:	ubfiz	x19, x19, #3, #32
  20:	add	x19, x19, #0x8
  24:	mov	w2, #0x18                  	// #24
  28:	umaddl	x19, w1, w2, x19
  2c:	ldr	x0, [x0, x19]
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm15AnalysisManagerINS_8FunctionEJEED2Ev:

0000000000000000 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	w1, #0x18                  	// #24
   8:	mov	x29, sp
   c:	ldr	w2, [x0, #88]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #72]
  1c:	umull	x1, w2, w1
  20:	stp	x21, x22, [sp, #32]
  24:	stp	x23, x24, [sp, #48]
  28:	bl	0 <_ZdlPvm>
  2c:	ldr	w0, [x19, #56]
  30:	cbz	w0, 9c <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x9c>
  34:	ldr	x20, [x19, #40]
  38:	ubfiz	x0, x0, #5, #32
  3c:	add	x21, x20, x0
  40:	cmp	x21, x20
  44:	b.eq	9c <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x9c>  // b.none
  48:	ldr	x0, [x20]
  4c:	cmn	x0, #0x8
  50:	b.eq	94 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x94>  // b.none
  54:	cmn	x0, #0x10
  58:	b.eq	94 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x94>  // b.none
  5c:	mov	x23, x20
  60:	ldr	x22, [x23, #8]!
  64:	cmp	x22, x23
  68:	b.eq	94 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x94>  // b.none
  6c:	ldr	x0, [x22, #24]
  70:	ldr	x24, [x22]
  74:	cbz	x0, 84 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x84>
  78:	ldr	x1, [x0]
  7c:	ldr	x1, [x1, #8]
  80:	blr	x1
  84:	mov	x0, x22
  88:	mov	x22, x24
  8c:	bl	0 <_ZdlPv>
  90:	b	64 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x64>
  94:	add	x20, x20, #0x20
  98:	b	40 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0x40>
  9c:	ldr	x0, [x19, #40]
  a0:	ldr	w1, [x19, #56]
  a4:	lsl	x1, x1, #5
  a8:	bl	0 <_ZdlPvm>
  ac:	ldr	w0, [x19, #24]
  b0:	cbz	w0, f8 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0xf8>
  b4:	ldr	x20, [x19, #8]
  b8:	ubfiz	x0, x0, #4, #32
  bc:	add	x21, x20, x0
  c0:	cmp	x21, x20
  c4:	b.eq	f8 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0xf8>  // b.none
  c8:	ldr	x0, [x20]
  cc:	cmn	x0, #0x8
  d0:	b.eq	f0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0xf0>  // b.none
  d4:	cmn	x0, #0x10
  d8:	b.eq	f0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0xf0>  // b.none
  dc:	ldr	x0, [x20, #8]
  e0:	cbz	x0, f0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0xf0>
  e4:	ldr	x1, [x0]
  e8:	ldr	x1, [x1, #8]
  ec:	blr	x1
  f0:	add	x20, x20, #0x10
  f4:	b	c0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEED1Ev+0xc0>
  f8:	ldr	w1, [x19, #24]
  fc:	ldr	x0, [x19, #8]
 100:	ldp	x19, x20, [sp, #16]
 104:	lsl	x1, x1, #4
 108:	ldp	x21, x22, [sp, #32]
 10c:	ldp	x23, x24, [sp, #48]
 110:	ldp	x29, x30, [sp], #64
 114:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE:

0000000000000000 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	add	x22, sp, #0x78
  1c:	mov	x0, x22
  20:	mov	w1, #0x0                   	// #0
  24:	stp	x23, x24, [sp, #48]
  28:	add	x21, x19, #0xf0
  2c:	str	x25, [sp, #64]
  30:	bl	0 <_ZN4llvm15AnalysisManagerINS_8FunctionEJEEC1Eb>
  34:	add	x0, x19, #0x20
  38:	add	x8, sp, #0x58
  3c:	mov	x2, x22
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm21TargetLibraryAnalysis3runERKNS_8FunctionERNS_15AnalysisManagerIS1_JEEE>
  48:	add	x23, x19, #0xf8
  4c:	ldrb	w0, [x19, #272]
  50:	cbz	w0, 1a8 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x1a8>
  54:	ldr	x0, [sp, #88]
  58:	str	x0, [x19, #240]
  5c:	ldr	x1, [x19, #256]
  60:	ldr	w0, [sp, #112]
  64:	str	w0, [x23, #16]
  68:	add	w2, w0, #0x3f
  6c:	lsl	x1, x1, #6
  70:	cmp	x1, w0, uxtw
  74:	lsr	w2, w2, #6
  78:	b.cc	150 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x150>  // b.lo, b.ul, b.last
  7c:	cbz	w0, 90 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x90>
  80:	ldr	x1, [sp, #96]
  84:	ubfiz	x2, x2, #3, #26
  88:	ldr	x0, [x19, #248]
  8c:	bl	0 <memcpy>
  90:	ldr	w0, [x23, #16]
  94:	ldr	x2, [x19, #256]
  98:	add	w0, w0, #0x3f
  9c:	lsr	w20, w0, #6
  a0:	lsr	w0, w0, #6
  a4:	cmp	x2, x0
  a8:	b.ls	c8 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0xc8>  // b.plast
  ac:	subs	x2, x2, x0
  b0:	b.eq	c8 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0xc8>  // b.none
  b4:	ldr	x3, [x19, #248]
  b8:	lsl	x2, x2, #3
  bc:	mov	w1, #0x0                   	// #0
  c0:	add	x0, x3, x0, lsl #3
  c4:	bl	0 <memset>
  c8:	ldr	w1, [x23, #16]
  cc:	ands	w0, w1, #0x3f
  d0:	b.eq	120 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x120>  // b.none
  d4:	ldr	x2, [x19, #256]
  d8:	mov	x1, #0xffffffffffffffff    	// #-1
  dc:	lsl	x1, x1, x0
  e0:	sub	w0, w20, #0x1
  e4:	cmp	x0, x2
  e8:	b.cc	10c <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x10c>  // b.lo, b.ul, b.last
  ec:	adrp	x3, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
  f0:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
  f4:	adrp	x0, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
  f8:	add	x3, x3, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	w2, #0x1ab                 	// #427
 108:	bl	0 <__assert_fail>
 10c:	ldr	x2, [x19, #248]
 110:	lsl	x0, x0, #3
 114:	ldr	x3, [x2, x0]
 118:	bic	x1, x3, x1
 11c:	str	x1, [x2, x0]
 120:	ldr	x0, [sp, #96]
 124:	bl	0 <free>
 128:	ldrb	w0, [x21, #32]
 12c:	cbnz	w0, 1f4 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x1f4>
 130:	adrp	x3, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 134:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 138:	adrp	x0, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x49                  	// #73
 14c:	b	108 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x108>
 150:	cbnz	w2, 174 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x174>
 154:	adrp	x3, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 158:	adrp	x1, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 15c:	adrp	x0, 0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 160:	add	x3, x3, #0x0
 164:	add	x1, x1, #0x0
 168:	add	x0, x0, #0x0
 16c:	mov	w2, #0x2dc                 	// #732
 170:	b	108 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x108>
 174:	mov	w20, w2
 178:	mov	x0, x20
 17c:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 180:	mov	x24, x1
 184:	mov	x25, x0
 188:	ldr	x1, [sp, #96]
 18c:	lsl	x2, x20, #3
 190:	bl	0 <memcpy>
 194:	ldr	x0, [x19, #248]
 198:	bl	0 <free>
 19c:	str	x25, [x19, #248]
 1a0:	str	x24, [x23, #8]
 1a4:	b	120 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x120>
 1a8:	ldr	w2, [sp, #112]
 1ac:	ldr	x0, [sp, #88]
 1b0:	stp	x0, xzr, [x19, #240]
 1b4:	str	xzr, [x19, #256]
 1b8:	str	w2, [x23, #16]
 1bc:	cbnz	w2, 1d0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x1d0>
 1c0:	stp	xzr, xzr, [x19, #248]
 1c4:	mov	w0, #0x1                   	// #1
 1c8:	strb	w0, [x21, #32]
 1cc:	b	120 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x120>
 1d0:	add	w2, w2, #0x3f
 1d4:	lsr	w20, w2, #6
 1d8:	mov	x0, x20
 1dc:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 1e0:	stp	x0, x1, [x19, #248]
 1e4:	lsl	x2, x20, #3
 1e8:	ldr	x1, [sp, #96]
 1ec:	bl	0 <memcpy>
 1f0:	b	1c4 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE+0x1c4>
 1f4:	mov	x0, x22
 1f8:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPass6getTLIERKNS_8FunctionE>
 1fc:	mov	x0, x21
 200:	ldp	x19, x20, [sp, #16]
 204:	ldp	x21, x22, [sp, #32]
 208:	ldp	x23, x24, [sp, #48]
 20c:	ldr	x25, [sp, #64]
 210:	ldp	x29, x30, [sp], #224
 214:	ret

Disassembly of section .text._ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE:

0000000000000000 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 48 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x48>
   8:	stp	x29, x30, [sp, #-48]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	add	x19, sp, #0x28
  18:	mov	x20, x1
  1c:	str	x0, [sp, #40]
  20:	mov	x0, x19
  24:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  28:	mov	x1, x19
  2c:	add	x0, x20, #0x30
  30:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  34:	mov	x0, x19
  38:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	ret
  48:	ret

Disassembly of section .text._ZN4llvm12PatternMatch13m_SpecificIntENS_5APIntE:

0000000000000000 <_ZN4llvm12PatternMatch13m_SpecificIntENS_5APIntE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #8]
   c:	str	x19, [sp, #16]
  10:	mov	x19, x8
  14:	str	wzr, [x0, #8]
  18:	ldr	x1, [x0]
  1c:	str	x1, [x8]
  20:	str	w2, [x8, #8]
  24:	add	x0, sp, #0x20
  28:	str	x1, [sp, #32]
  2c:	str	wzr, [sp, #40]
  30:	bl	0 <_ZN4llvm12PatternMatch13m_SpecificIntENS_5APIntE>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #48
  40:	ret

Disassembly of section .text._ZN4llvm12PatternMatch13m_SpecificIntEm:

0000000000000000 <_ZN4llvm12PatternMatch13m_SpecificIntEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	w1, #0x40                  	// #64
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x20
  14:	mov	x19, x8
  18:	str	x0, [sp, #32]
  1c:	mov	x0, x20
  20:	str	w1, [sp, #40]
  24:	bl	0 <_ZN4llvm12PatternMatch13m_SpecificIntEm>
  28:	mov	x0, x20
  2c:	bl	0 <_ZN4llvm12PatternMatch13m_SpecificIntEm>
  30:	mov	x0, x19
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPKvLb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPKvLb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w2, w1, [x0, #8]
  18:	cmp	w2, w1
  1c:	b.cc	30 <_ZN4llvm23SmallVectorTemplateBaseIPKvLb1EE9push_backERKS2_+0x30>  // b.lo, b.ul, b.last
  20:	add	x1, x0, #0x10
  24:	mov	x3, #0x8                   	// #8
  28:	mov	x2, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  30:	ldr	w1, [x19, #8]
  34:	ldr	x0, [x19]
  38:	ldr	x2, [x20]
  3c:	str	x2, [x0, x1, lsl #3]
  40:	ldp	w0, w2, [x19, #8]
  44:	mov	w1, w0
  48:	add	x1, x1, #0x1
  4c:	cmp	x1, x2
  50:	b.ls	74 <_ZN4llvm23SmallVectorTemplateBaseIPKvLb1EE9push_backERKS2_+0x74>  // b.plast
  54:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKvLb1EE9push_backERKS2_>
  58:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKvLb1EE9push_backERKS2_>
  5c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKvLb1EE9push_backERKS2_>
  60:	add	x3, x3, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	w2, #0x43                  	// #67
  70:	bl	0 <__assert_fail>
  74:	add	w0, w0, #0x1
  78:	str	w0, [x19, #8]
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #32
  84:	ret

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPvE6insertES1_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldp	x20, x0, [x0, #8]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x8
  1c:	cmp	x0, x20
  20:	b.ne	f0 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0xf0>  // b.any
  24:	ldr	w0, [x19, #28]
  28:	mov	x2, #0x0                   	// #0
  2c:	ubfiz	x3, x0, #3, #32
  30:	add	x5, x20, x3
  34:	cmp	x5, x20
  38:	b.eq	58 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0x58>  // b.none
  3c:	ldr	x4, [x20]
  40:	cmp	x1, x4
  44:	b.eq	104 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0x104>  // b.none
  48:	cmn	x4, #0x2
  4c:	csel	x2, x2, x20, ne  // ne = any
  50:	add	x20, x20, #0x8
  54:	b	34 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0x34>
  58:	cbz	x2, c0 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0xc0>
  5c:	ldr	w0, [x19, #32]
  60:	mov	x20, x2
  64:	str	x1, [x2]
  68:	sub	w0, w0, #0x1
  6c:	str	w0, [x19, #32]
  70:	ldr	x0, [x19]
  74:	add	x0, x0, #0x1
  78:	str	x0, [x19]
  7c:	mov	w21, #0x1                   	// #1
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_>
  88:	stp	x20, x0, [sp, #48]
  8c:	add	x0, sp, #0x30
  90:	bl	0 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_>
  94:	ldr	x0, [x19]
  98:	stp	x19, x0, [sp, #64]
  9c:	ldp	x0, x1, [sp, #48]
  a0:	stp	x0, x1, [x22]
  a4:	ldp	x0, x1, [sp, #64]
  a8:	stp	x0, x1, [x22, #16]
  ac:	strb	w21, [x22, #32]
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x21, x22, [sp, #32]
  b8:	ldp	x29, x30, [sp], #80
  bc:	ret
  c0:	ldr	w2, [x19, #24]
  c4:	cmp	w0, w2
  c8:	b.cs	f0 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0xf0>  // b.hs, b.nlast
  cc:	add	w0, w0, #0x1
  d0:	str	w0, [x19, #28]
  d4:	ldr	x0, [x19]
  d8:	str	x1, [x20]
  dc:	ldr	x20, [x19, #8]
  e0:	add	x0, x0, #0x1
  e4:	str	x0, [x19]
  e8:	add	x20, x20, x3
  ec:	b	7c <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0x7c>
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  f8:	mov	x20, x0
  fc:	and	w21, w1, #0xff
 100:	b	80 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0x80>
 104:	mov	w21, #0x0                   	// #0
 108:	b	80 <_ZN4llvm15SmallPtrSetImplIPvE6insertES1_+0x80>

Disassembly of section .text._ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE:

0000000000000000 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	add	x22, x0, #0x38
  10:	mov	x21, x1
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	mov	x0, x22
  20:	bl	0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
  24:	mov	x20, x0
  28:	mov	x0, x22
  2c:	bl	0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
  30:	cmp	x20, x0
  34:	b.eq	78 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x78>  // b.none
  38:	ldr	x0, [x20]
  3c:	cmp	x21, x0
  40:	b.eq	64 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x64>  // b.none
  44:	adrp	x3, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
  48:	adrp	x1, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
  4c:	adrp	x0, 0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
  50:	add	x3, x3, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x0, x0, #0x0
  5c:	mov	w2, #0xa7                  	// #167
  60:	bl	0 <__assert_fail>
  64:	mov	x0, #0xfffffffffffffffe    	// #-2
  68:	str	x0, [x20]
  6c:	ldr	w0, [x22, #32]
  70:	add	w0, w0, #0x1
  74:	str	w0, [x22, #32]
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
  80:	tst	w0, #0xff
  84:	b.ne	98 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE+0x98>  // b.any
  88:	add	x8, sp, #0x38
  8c:	mov	x1, x21
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm17PreservedAnalyses8preserveEPNS_11AnalysisKeyE>
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldp	x21, x22, [sp, #32]
  a0:	ldp	x29, x30, [sp], #96
  a4:	ret

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	x0, 2c <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  10:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w1, [x0, #16]
  30:	sub	w1, w1, #0x25
  34:	cmp	w1, #0x11
  38:	b.ls	5c <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x5c>  // b.plast
  3c:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  40:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  48:	add	x3, x3, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x0, x0, #0x0
  54:	mov	w2, #0x108                 	// #264
  58:	b	28 <_ZN4llvm4castINS_14BinaryOperatorENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x28>
  5c:	ldp	x29, x30, [sp], #16
  60:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	mov	x0, x1
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x3
  20:	mov	x21, x4
  24:	str	x23, [sp, #48]
  28:	mov	x23, x2
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	str	xzr, [x19, #16]
  34:	add	x1, x20, #0x18
  38:	stp	xzr, xzr, [x19]
  3c:	stp	x1, x0, [x19, #16]
  40:	mov	w0, #0x200                 	// #512
  44:	strh	w0, [x19, #44]
  48:	str	x23, [x19, #32]
  4c:	ldr	x0, [x20, #40]
  50:	str	x0, [x19, #8]
  54:	str	wzr, [x19, #40]
  58:	strb	wzr, [x19, #46]
  5c:	add	x0, x0, #0x28
  60:	stp	x22, x21, [x19, #48]
  64:	cmp	x1, x0
  68:	b.ne	8c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x8c>  // b.any
  6c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  70:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  74:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  78:	add	x3, x3, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x0, x0, #0x0
  84:	mov	w2, #0x8e                  	// #142
  88:	bl	0 <__assert_fail>
  8c:	ldr	x0, [x20, #48]
  90:	add	x20, sp, #0x48
  94:	str	x0, [sp, #72]
  98:	mov	x0, x20
  9c:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  a0:	mov	x1, x20
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  ac:	mov	x0, x20
  b0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x21, x22, [sp, #32]
  bc:	ldr	x23, [sp, #48]
  c0:	ldp	x29, x30, [sp], #80
  c4:	ret

Disassembly of section .text._ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_:

0000000000000000 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>:
   0:	tst	x1, #0x7
   4:	b.eq	30 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_+0x30>  // b.none
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>
  10:	adrp	x1, 0 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xb2                  	// #178
  2c:	bl	0 <__assert_fail>
  30:	and	x0, x0, #0x7
  34:	orr	x0, x1, x0
  38:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_>:
   0:	mov	x2, x0
   4:	ldr	w0, [x0, #24]
   8:	cbz	w0, 90 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_+0x90>
   c:	cmn	x1, #0x8
  10:	b.eq	1c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_+0x1c>  // b.none
  14:	cmn	x1, #0x10
  18:	b.ne	44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_+0x44>  // b.any
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_>
  24:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x250                 	// #592
  40:	bl	0 <__assert_fail>
  44:	ldr	x5, [x2, #8]
  48:	lsr	w2, w1, #9
  4c:	sub	w0, w0, #0x1
  50:	eor	w2, w2, w1, lsr #4
  54:	and	w2, w2, w0
  58:	mov	w3, #0x1                   	// #1
  5c:	ubfiz	x4, x2, #4, #32
  60:	ldr	x4, [x5, x4]
  64:	cmp	x4, x1
  68:	b.eq	84 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_+0x84>  // b.none
  6c:	cmn	x4, #0x8
  70:	b.eq	8c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_+0x8c>  // b.none
  74:	add	w2, w2, w3
  78:	add	w3, w3, #0x1
  7c:	and	w2, w0, w2
  80:	b	5c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11AnalysisKeyESt10unique_ptrINS_6detail19AnalysisPassConceptINS_8FunctionENS_17PreservedAnalysesENS_15AnalysisManagerIS7_JEE11InvalidatorEJEEESt14default_deleteISC_EENS_12DenseMapInfoIS3_EENS5_12DenseMapPairIS3_SF_EEEES3_SF_SH_SJ_E5countEPKS2_+0x5c>
  84:	mov	w0, #0x1                   	// #1
  88:	ret
  8c:	mov	w0, #0x0                   	// #0
  90:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x10
  34:	cset	w0, ls  // ls = plast
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZNK4llvm12ConstantExpr10getOperandEj:

0000000000000000 <_ZNK4llvm12ConstantExpr10getOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	str	x19, [sp, #16]
  10:	ubfx	x2, x2, #0, #28
  14:	cmp	w1, w2
  18:	b.cc	3c <_ZNK4llvm12ConstantExpr10getOperandEj+0x3c>  // b.lo, b.ul, b.last
  1c:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  20:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  24:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x4fa                 	// #1274
  38:	bl	0 <__assert_fail>
  3c:	mov	w2, w2
  40:	mov	w1, w1
  44:	sub	x1, x1, x2
  48:	mov	x2, #0x18                  	// #24
  4c:	mul	x1, x1, x2
  50:	ldr	x19, [x0, x1]
  54:	cbz	x19, 98 <_ZNK4llvm12ConstantExpr10getOperandEj+0x98>
  58:	mov	x0, x19
  5c:	bl	0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  60:	tst	w0, #0xff
  64:	b.ne	88 <_ZNK4llvm12ConstantExpr10getOperandEj+0x88>  // b.any
  68:	adrp	x3, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  6c:	adrp	x1, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  70:	adrp	x0, 0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  74:	add	x3, x3, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x0, x0, #0x0
  80:	mov	w2, #0x134                 	// #308
  84:	b	38 <_ZNK4llvm12ConstantExpr10getOperandEj+0x38>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZNK4llvm12ConstantExpr10getOperandEj>
  98:	mov	x0, #0x0                   	// #0
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.eq	2c <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>  // b.none
  1c:	mov	x0, x19
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	mov	x0, #0x0                   	// #0
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x17
  34:	cset	w0, hi  // hi = pmore
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_:

0000000000000000 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm14BinaryOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm14BinaryOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm14BinaryOperator7classofEPKNS_5ValueE>
  14:	ands	w0, w0, #0xff
  18:	b.eq	34 <_ZN4llvm14BinaryOperator7classofEPKNS_5ValueE+0x34>  // b.none
  1c:	mov	x0, x19
  20:	bl	0 <_ZN4llvm14BinaryOperator7classofEPKNS_5ValueE>
  24:	ldrb	w0, [x0, #16]
  28:	sub	w0, w0, #0x25
  2c:	cmp	w0, #0x11
  30:	cset	w0, ls  // ls = plast
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	cbnz	x0, 30 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x30>
  10:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x69                  	// #105
  2c:	bl	0 <__assert_fail>
  30:	mov	x19, x0
  34:	bl	0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  38:	tst	w0, #0xff
  3c:	b.ne	60 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x60>  // b.any
  40:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  48:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	add	x3, x3, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x0, x0, #0x0
  58:	mov	w2, #0x108                 	// #264
  5c:	b	2c <_ZN4llvm4castINS_14BinaryOperatorENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
  60:	mov	x0, x19
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #8]
  30:	cmp	w0, #0xe
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x5
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm14FPMathOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  14:	tst	w0, #0xff
  18:	b.eq	74 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x74>  // b.none
  1c:	mov	x0, x19
  20:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  24:	cbz	x0, 74 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x74>
  28:	ldrb	w1, [x0, #16]
  2c:	sub	w1, w1, #0x18
  30:	cmp	w1, #0x39
  34:	b.hi	ec <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xec>  // b.pmore
  38:	cmp	w1, #0x36
  3c:	b.hi	ac <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xac>  // b.pmore
  40:	cmp	w1, #0x18
  44:	b.hi	a0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xa0>  // b.pmore
  48:	cmp	w1, #0xb
  4c:	b.ls	ec <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xec>  // b.plast
  50:	sub	w1, w1, #0xc
  54:	cmp	w1, #0xc
  58:	b.hi	ec <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xec>  // b.pmore
  5c:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  60:	add	x0, x0, #0x0
  64:	ldrb	w0, [x0, w1, uxtw]
  68:	adr	x1, 74 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x74>
  6c:	add	x0, x1, w0, sxtb #2
  70:	br	x0
  74:	mov	x0, x19
  78:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  7c:	ands	w0, w0, #0xff
  80:	b.eq	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>  // b.none
  84:	cbz	x19, ec <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xec>
  88:	ldrh	w1, [x19, #18]
  8c:	b	30 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x30>
  90:	mov	w0, #0x1                   	// #1
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	cmp	w1, #0x36
  a4:	cset	w0, eq  // eq = none
  a8:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>
  ac:	ldr	x19, [x19]
  b0:	mov	x0, x19
  b4:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  b8:	tst	w0, #0xff
  bc:	b.eq	cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>  // b.none
  c0:	cbz	x19, cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>
  c4:	ldr	x19, [x19, #24]
  c8:	b	b0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xb0>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  d4:	ldrb	w0, [x0, #8]
  d8:	sub	w0, w0, #0x1
  dc:	and	w0, w0, #0xff
  e0:	cmp	w0, #0x5
  e4:	cset	w0, ls  // ls = plast
  e8:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>
  ec:	mov	w0, #0x0                   	// #0
  f0:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	stp	x25, x26, [sp, #64]
  14:	add	x26, sp, #0x78
  18:	mov	x0, x26
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x6
  24:	mov	x22, x4
  28:	stp	x23, x24, [sp, #48]
  2c:	mov	x23, x1
  30:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  34:	add	x1, x1, #0x0
  38:	stp	x27, x28, [sp, #80]
  3c:	mov	x28, x3
  40:	mov	x27, x2
  44:	str	x5, [sp, #96]
  48:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  4c:	ldp	x25, x24, [x20, #48]
  50:	mov	x1, x24
  54:	mov	x0, x25
  58:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  5c:	add	w4, w22, #0x1
  60:	lsl	w2, w24, #4
  64:	add	w1, w4, w0
  68:	mov	x0, #0x48                  	// #72
  6c:	str	w4, [sp, #108]
  70:	bl	0 <_ZN4llvm4UsernwEmjj>
  74:	mov	x19, x0
  78:	mov	x1, x24
  7c:	mov	x0, x25
  80:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
  84:	add	x3, x22, w0, uxtw
  88:	mov	x1, #0x18                  	// #24
  8c:	mov	x2, #0xffffffffffffffe8    	// #-24
  90:	ldr	w4, [sp, #108]
  94:	mov	x5, #0x0                   	// #0
  98:	msub	x3, x3, x1, x2
  9c:	mov	w2, #0x38                  	// #56
  a0:	ldr	x1, [x23, #16]
  a4:	add	w4, w4, w0
  a8:	add	x3, x19, x3
  ac:	mov	x0, x19
  b0:	ldr	x1, [x1]
  b4:	bl	0 <_ZN4llvm11InstructionC2EPNS_4TypeEjPNS_3UseEjPS0_>
  b8:	str	xzr, [x19, #56]
  bc:	mov	x0, x19
  c0:	mov	x7, x26
  c4:	mov	x5, x25
  c8:	mov	x6, x24
  cc:	mov	x3, x28
  d0:	mov	x4, x22
  d4:	mov	x2, x27
  d8:	mov	x1, x23
  dc:	bl	0 <_ZN4llvm8CallInst4initEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS4_EENS5_INS_17OperandBundleDefTIS4_EEEERKNS_5TwineE>
  e0:	ldrb	w0, [x20, #44]
  e4:	cbz	w0, 140 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x140>
  e8:	add	x0, x19, #0x38
  ec:	mov	w2, #0x39                  	// #57
  f0:	mov	w1, #0xffffffff            	// #-1
  f4:	bl	0 <_ZNK4llvm13AttributeList12hasAttributeEjNS_9Attribute8AttrKindE>
  f8:	tst	w0, #0xff
  fc:	b.ne	140 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x140>  // b.any
 100:	mov	x0, x19
 104:	mov	w1, #0x39                  	// #57
 108:	bl	0 <_ZNK4llvm8CallBase25hasFnAttrOnCalledFunctionENS_9Attribute8AttrKindE>
 10c:	tst	w0, #0xff
 110:	b.ne	140 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x140>  // b.any
 114:	ldr	x0, [x19, #56]
 118:	str	x0, [sp, #120]
 11c:	mov	x0, x19
 120:	bl	0 <_ZNK4llvm5Value10getContextEv>
 124:	mov	w3, #0x39                  	// #57
 128:	mov	x1, x0
 12c:	mov	w2, #0xffffffff            	// #-1
 130:	mov	x0, x26
 134:	bl	0 <_ZNK4llvm13AttributeList12addAttributeERNS_11LLVMContextEjNS_9Attribute8AttrKindE>
 138:	str	x0, [sp, #120]
 13c:	str	x0, [x19, #56]
 140:	mov	x0, x19
 144:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 148:	tst	w0, #0xff
 14c:	b.eq	17c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x17c>  // b.none
 150:	ldr	w22, [x20, #40]
 154:	cbnz	x21, 160 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x160>
 158:	ldr	x21, [x20, #32]
 15c:	cbz	x21, 170 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE+0x170>
 160:	mov	x2, x21
 164:	mov	x0, x19
 168:	mov	w1, #0x3                   	// #3
 16c:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
 170:	mov	w1, w22
 174:	mov	x0, x19
 178:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
 17c:	ldp	x2, x3, [x20, #8]
 180:	mov	x0, x19
 184:	ldr	x1, [sp, #96]
 188:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 18c:	mov	x1, x19
 190:	mov	x0, x20
 194:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_12FunctionTypeEPNS_5ValueENS_8ArrayRefIS7_EERKNS_5TwineEPNS_6MDNodeE>
 198:	mov	x0, x19
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x23, x24, [sp, #48]
 1a8:	ldp	x25, x26, [sp, #64]
 1ac:	ldp	x27, x28, [sp, #80]
 1b0:	ldp	x29, x30, [sp], #144
 1b4:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x7, x1
   8:	mov	x8, x3
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	mov	x3, x2
  18:	ldrb	w2, [x1, #8]
  1c:	cmp	w2, #0xf
  20:	b.eq	44 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x44>  // b.none
  24:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  28:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  2c:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x17e                 	// #382
  40:	bl	0 <__assert_fail>
  44:	ldr	x1, [x1, #16]
  48:	ldr	x1, [x1]
  4c:	cbnz	x1, 70 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x70>
  50:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  54:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  58:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  5c:	add	x3, x3, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x0, x0, #0x0
  68:	mov	w2, #0x69                  	// #105
  6c:	b	40 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x40>
  70:	ldrb	w2, [x1, #8]
  74:	cmp	w2, #0xc
  78:	b.eq	9c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x9c>  // b.none
  7c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  80:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  84:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>
  88:	add	x3, x3, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x0, x0, #0x0
  94:	mov	w2, #0x108                 	// #264
  98:	b	40 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE+0x40>
  9c:	ldp	x29, x30, [sp], #16
  a0:	mov	x6, x5
  a4:	mov	x2, x7
  a8:	mov	x5, x4
  ac:	mov	x4, x8
  b0:	b	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateCallEPNS_5ValueENS_8ArrayRefIS5_EERKNS_5TwineEPNS_6MDNodeE>

Disassembly of section .text._ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_12ConstantExprENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	csel	x0, x19, xzr, ne  // ne = any
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0xd
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_11ConstantIntENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_11ConstantIntENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_11ConstantIntENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	csel	x0, x19, xzr, ne  // ne = any
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	cbnz	x0, 30 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x30>
  10:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x69                  	// #105
  2c:	bl	0 <__assert_fail>
  30:	mov	x19, x0
  34:	bl	0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  38:	tst	w0, #0xff
  3c:	b.ne	60 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x60>  // b.any
  40:	adrp	x3, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  44:	adrp	x1, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  48:	adrp	x0, 0 <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  4c:	add	x3, x3, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x0, x0, #0x0
  58:	mov	w2, #0x108                 	// #264
  5c:	b	2c <_ZN4llvm4castINS_14BinaryOperatorENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>
  60:	mov	x0, x19
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_8ConstantES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_:

0000000000000000 <_ZN4llvm8dyn_castINS_8ConstantES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>:
   0:	cbnz	x0, 2c <_ZN4llvm8dyn_castINS_8ConstantES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_8ConstantES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
   c:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_8ConstantES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_8ConstantES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #8]
  30:	cmp	w0, #0x10
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZNK4llvm4Type20getVectorNumElementsEv:

0000000000000000 <_ZNK4llvm4Type20getVectorNumElementsEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZNK4llvm4Type20getVectorNumElementsEv>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZNK4llvm4Type20getVectorNumElementsEv+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZNK4llvm4Type20getVectorNumElementsEv>
  20:	adrp	x1, 0 <_ZNK4llvm4Type20getVectorNumElementsEv>
  24:	adrp	x0, 0 <_ZNK4llvm4Type20getVectorNumElementsEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	ldr	w0, [x19, #32]
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE:

0000000000000000 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  14:	tst	w0, #0xff
  18:	ldr	x0, [x19]
  1c:	b.eq	68 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x68>  // b.none
  20:	bl	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>
  24:	ldr	x1, [x19, #32]
  28:	mov	x2, #0xffffffff            	// #4294967295
  2c:	cmp	x1, x2
  30:	b.ls	54 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE+0x54>  // b.plast
  34:	adrp	x3, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  38:	adrp	x1, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  3c:	adrp	x0, 0 <_ZN4llvm7CmpInst17makeCmpResultTypeEPNS_4TypeE>
  40:	add	x3, x3, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x0, x0, #0x0
  4c:	mov	w2, #0x220                 	// #544
  50:	bl	0 <__assert_fail>
  54:	ldrb	w2, [x19, #40]
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	bfi	x1, x2, #32, #32
  64:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	b	0 <_ZN4llvm4Type9getInt1TyERNS_11LLVMContextE>

Disassembly of section .text._ZN4llvm11isa_impl_clINS_5ValueEPKS1_E4doitES3_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_5ValueEPKS1_E4doitES3_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_5ValueEPKS1_E4doitES3_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_5ValueEPKS1_E4doitES3_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_5ValueEPKS1_E4doitES3_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_5ValueEPKS1_E4doitES3_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	mov	w0, #0x1                   	// #1
  30:	ret

Disassembly of section .text._ZN4llvm4castINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_:

0000000000000000 <_ZN4llvm4castINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_:

0000000000000000 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>:
   0:	cbz	x0, 50 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_+0x50>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  18:	tst	w0, #0xff
  1c:	b.ne	40 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_+0x40>  // b.any
  20:	adrp	x3, 0 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  24:	adrp	x1, 0 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  28:	adrp	x0, 0 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x134                 	// #308
  3c:	bl	0 <__assert_fail>
  40:	mov	x0, x19
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>
  50:	ret

Disassembly of section .text._ZNK4llvm14BinaryOperator10getOperandEj:

0000000000000000 <_ZNK4llvm14BinaryOperator10getOperandEj>:
   0:	cmp	w1, #0x1
   4:	b.ls	30 <_ZNK4llvm14BinaryOperator10getOperandEj+0x30>  // b.plast
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZNK4llvm14BinaryOperator10getOperandEj>
  10:	adrp	x1, 0 <_ZNK4llvm14BinaryOperator10getOperandEj>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZNK4llvm14BinaryOperator10getOperandEj>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x1ab                 	// #427
  2c:	bl	0 <__assert_fail>
  30:	mov	w2, #0x18                  	// #24
  34:	umaddl	x1, w1, w2, x0
  38:	ldur	x0, [x1, #-48]
  3c:	b	0 <_ZNK4llvm14BinaryOperator10getOperandEj>

Disassembly of section .text._ZNK4llvm7PHINode10getOperandEj:

0000000000000000 <_ZNK4llvm7PHINode10getOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	w19, w1
  10:	ldr	w1, [x0, #20]
  14:	ubfx	x1, x1, #0, #28
  18:	cmp	w19, w1
  1c:	b.cc	40 <_ZNK4llvm7PHINode10getOperandEj+0x40>  // b.lo, b.ul, b.last
  20:	adrp	x3, 0 <_ZNK4llvm7PHINode10getOperandEj>
  24:	adrp	x1, 0 <_ZNK4llvm7PHINode10getOperandEj>
  28:	adrp	x0, 0 <_ZNK4llvm7PHINode10getOperandEj>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0xadf                 	// #2783
  3c:	bl	0 <__assert_fail>
  40:	bl	0 <_ZNK4llvm7PHINode10getOperandEj>
  44:	mov	w1, #0x18                  	// #24
  48:	umull	x19, w19, w1
  4c:	ldr	x0, [x0, x19]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <_ZNK4llvm7PHINode10getOperandEj>

Disassembly of section .text._ZN4llvm8ICmpInst8AssertOKEv:

0000000000000000 <_ZN4llvm8ICmpInst8AssertOKEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrh	w0, [x0, #18]
  14:	and	w0, w0, #0xffff7fff
  18:	sub	w0, w0, #0x20
  1c:	cmp	w0, #0x9
  20:	b.ls	44 <_ZN4llvm8ICmpInst8AssertOKEv+0x44>  // b.plast
  24:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  28:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  2c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x488                 	// #1160
  40:	bl	0 <__assert_fail>
  44:	ldur	x0, [x19, #-48]
  48:	bl	0 <_ZN4llvm8ICmpInst8AssertOKEv>
  4c:	ldr	x20, [x0]
  50:	ldur	x0, [x19, #-24]
  54:	bl	0 <_ZN4llvm8ICmpInst8AssertOKEv>
  58:	ldr	x0, [x0]
  5c:	cmp	x20, x0
  60:	b.eq	84 <_ZN4llvm8ICmpInst8AssertOKEv+0x84>  // b.none
  64:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  68:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  6c:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  70:	add	x3, x3, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x0, x0, #0x0
  7c:	mov	w2, #0x48a                 	// #1162
  80:	b	40 <_ZN4llvm8ICmpInst8AssertOKEv+0x40>
  84:	mov	x0, x20
  88:	bl	0 <_ZN4llvm8ICmpInst8AssertOKEv>
  8c:	ldrb	w0, [x0, #8]
  90:	and	w0, w0, #0xfffffffb
  94:	and	w0, w0, #0xff
  98:	cmp	w0, #0xb
  9c:	b.eq	c0 <_ZN4llvm8ICmpInst8AssertOKEv+0xc0>  // b.none
  a0:	adrp	x3, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a4:	adrp	x1, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  a8:	adrp	x0, 0 <_ZN4llvm8ICmpInst8AssertOKEv>
  ac:	add	x3, x3, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x0, x0, #0x0
  b8:	mov	w2, #0x48d                 	// #1165
  bc:	b	40 <_ZN4llvm8ICmpInst8AssertOKEv+0x40>
  c0:	ldp	x19, x20, [sp, #16]
  c4:	ldp	x29, x30, [sp], #32
  c8:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	stp	x19, x20, [sp, #32]
  10:	mov	x20, x0
  14:	mov	x0, x2
  18:	stp	x21, x22, [sp, #48]
  1c:	mov	w22, w1
  20:	mov	x21, x2
  24:	stp	x23, x24, [sp, #64]
  28:	mov	x23, x3
  2c:	str	x25, [sp, #80]
  30:	mov	x25, x4
  34:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  38:	cbz	x0, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x84>
  3c:	mov	x19, x0
  40:	mov	x0, x23
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  48:	mov	x2, x0
  4c:	cbz	x0, 84 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x84>
  50:	mov	x1, x19
  54:	mov	w0, w22
  58:	mov	w3, #0x0                   	// #0
  5c:	bl	0 <_ZN4llvm12ConstantExpr10getCompareEtPNS_8ConstantES2_b>
  60:	mov	x19, x0
  64:	mov	x0, x19
  68:	ldp	x29, x30, [sp, #16]
  6c:	ldp	x19, x20, [sp, #32]
  70:	ldp	x21, x22, [sp, #48]
  74:	ldp	x23, x24, [sp, #64]
  78:	ldr	x25, [sp, #80]
  7c:	add	sp, sp, #0x80
  80:	ret
  84:	add	x24, sp, #0x68
  88:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  8c:	mov	x0, x24
  90:	add	x1, x1, #0x0
  94:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  98:	mov	w1, #0x2                   	// #2
  9c:	mov	x0, #0x38                  	// #56
  a0:	bl	0 <_ZN4llvm4UsernwEmj>
  a4:	mov	x19, x0
  a8:	ldr	x0, [x21]
  ac:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  b0:	mov	x1, x0
  b4:	mov	x6, x24
  b8:	mov	x5, x23
  bc:	mov	x4, x21
  c0:	mov	w3, w22
  c4:	str	xzr, [sp]
  c8:	mov	x7, #0x0                   	// #0
  cc:	mov	w2, #0x35                  	// #53
  d0:	mov	x0, x19
  d4:	bl	0 <_ZN4llvm7CmpInstC2EPNS_4TypeENS_11Instruction8OtherOpsENS0_9PredicateEPNS_5ValueES7_RKNS_5TwineEPS3_SB_>
  d8:	mov	x0, x19
  dc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  e0:	ldp	x2, x3, [x20, #8]
  e4:	mov	x1, x25
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  f0:	mov	x1, x19
  f4:	mov	x0, x20
  f8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE>
  fc:	b	64 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE10CreateICmpENS_7CmpInst9PredicateEPNS_5ValueES7_RKNS_5TwineE+0x64>

Disassembly of section .text._ZN4llvm11isa_impl_clINS_5ValueEPKNS_8ConstantEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_5ValueEPKNS_8ConstantEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_5ValueEPKNS_8ConstantEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_5ValueEPKNS_8ConstantEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_5ValueEPKNS_8ConstantEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_5ValueEPKNS_8ConstantEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	mov	w0, #0x1                   	// #1
  30:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1c
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj28ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x35
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1d
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj29ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x31
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x19
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1a
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x27
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0xf
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj15ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x0, x1
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x1
  14:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>
  18:	ands	w0, w0, #0xff
  1c:	b.eq	84 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_+0x84>  // b.none
  20:	ldrb	w0, [x19, #16]
  24:	cmp	w0, #0x34
  28:	mov	x0, x19
  2c:	b.ne	3c <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_+0x3c>  // b.any
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>
  3c:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>
  40:	mov	x19, x0
  44:	cbz	x0, 80 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_+0x80>
  48:	ldrh	w1, [x0, #18]
  4c:	cmp	w1, #0x1c
  50:	b.ne	80 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_+0x80>  // b.any
  54:	mov	w1, #0x0                   	// #0
  58:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>
  5c:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>
  60:	ands	w0, w0, #0xff
  64:	b.eq	84 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_+0x84>  // b.none
  68:	mov	x0, x19
  6c:	mov	w1, #0x1                   	// #1
  70:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchIS4_EEbPT_>
  80:	mov	w0, #0x0                   	// #0
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10BasicBlockEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x12
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZNK4llvm10BranchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10BranchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w2, [x0, #20]
   c:	str	x19, [sp, #16]
  10:	ubfx	x2, x2, #0, #28
  14:	cmp	w2, #0x3
  18:	cset	w2, eq  // eq = none
  1c:	add	w2, w2, #0x1
  20:	cmp	w1, w2
  24:	b.cc	48 <_ZNK4llvm10BranchInst12getSuccessorEj+0x48>  // b.lo, b.ul, b.last
  28:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  2c:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  30:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  34:	add	x3, x3, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x0, x0, #0x0
  40:	mov	w2, #0xc03                 	// #3075
  44:	bl	0 <__assert_fail>
  48:	mov	w2, #0x18                  	// #24
  4c:	umsubl	x1, w1, w2, x0
  50:	ldur	x19, [x1, #-24]
  54:	cbz	x19, 88 <_ZNK4llvm10BranchInst12getSuccessorEj+0x88>
  58:	mov	x0, x19
  5c:	bl	0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  60:	tst	w0, #0xff
  64:	b.ne	88 <_ZNK4llvm10BranchInst12getSuccessorEj+0x88>  // b.any
  68:	adrp	x3, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  70:	adrp	x0, 0 <_ZNK4llvm10BranchInst12getSuccessorEj>
  74:	add	x3, x3, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x0, x0, #0x0
  80:	mov	w2, #0x134                 	// #308
  84:	b	44 <_ZNK4llvm10BranchInst12getSuccessorEj+0x44>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_8ConstantEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_8ConstantEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_8ConstantEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_8ConstantEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_8ConstantEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11ConstantIntEPKNS_8ConstantEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0xd
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm16dyn_cast_or_nullINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm16dyn_cast_or_nullINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	cbz	x0, 40 <_ZN4llvm16dyn_cast_or_nullINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm16dyn_cast_or_nullINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  18:	tst	w0, #0xff
  1c:	b.eq	30 <_ZN4llvm16dyn_cast_or_nullINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x30>  // b.none
  20:	mov	x0, x19
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZN4llvm16dyn_cast_or_nullINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  30:	mov	x0, #0x0                   	// #0
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	mov	x0, #0x0                   	// #0
  44:	ret

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	mov	x0, x1
  18:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
  1c:	cbnz	x0, 4c <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x4c>
  20:	ldr	x0, [x19]
  24:	ldrb	w0, [x0, #8]
  28:	cmp	w0, #0x10
  2c:	b.ne	60 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x60>  // b.any
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
  38:	cbz	x0, 60 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x60>
  3c:	mov	w1, #0x0                   	// #0
  40:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  44:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
  48:	cbz	x0, 60 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_+0x60>
  4c:	mov	x1, x20
  50:	add	x0, x0, #0x18
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_5ValueEEEbPT_>
  60:	mov	w0, #0x0                   	// #0
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.eq	2c <_ZN4llvm8dyn_castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>  // b.none
  1c:	mov	x0, x19
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <_ZN4llvm8dyn_castINS_11ConstantIntENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	mov	x0, #0x0                   	// #0
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x0, x1
  18:	ldrb	w1, [x1, #16]
  1c:	cmp	w1, #0x32
  20:	b.ne	a0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0xa0>  // b.any
  24:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  28:	mov	x20, x0
  2c:	mov	w1, #0x0                   	// #0
  30:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  34:	mov	x1, x0
  38:	mov	x0, x21
  3c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  40:	ands	w19, w0, #0xff
  44:	b.ne	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x60>  // b.any
  48:	mov	w19, #0x0                   	// #0
  4c:	mov	w0, w19
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	mov	w1, #0x1                   	// #1
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  6c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  70:	cbz	x0, 48 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x48>
  74:	add	x20, x0, #0x18
  78:	mov	x1, #0xffffffffffffffff    	// #-1
  7c:	mov	x0, x20
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  84:	tst	w0, #0xff
  88:	b.ne	48 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x48>  // b.any
  8c:	mov	x0, x20
  90:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  94:	ldr	x1, [x21, #8]
  98:	str	x0, [x1]
  9c:	b	4c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x4c>
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x20, x0
  a8:	cbz	x0, 48 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x48>
  ac:	ldrh	w1, [x0, #18]
  b0:	cmp	w1, #0x1a
  b4:	b.ne	48 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x48>  // b.any
  b8:	mov	w1, #0x0                   	// #0
  bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  c0:	mov	x1, x0
  c4:	mov	x0, x21
  c8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  cc:	ands	w19, w0, #0xff
  d0:	b.eq	48 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x48>  // b.none
  d4:	mov	w1, #0x1                   	// #1
  d8:	mov	x0, x20
  dc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_>
  e4:	b	70 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_20bind_const_intval_tyELj26ELb0EE5matchIS3_EEbPT_+0x70>

Disassembly of section .text._ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	mov	x0, x1
  18:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
  1c:	cbnz	x0, 4c <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x4c>
  20:	ldr	x0, [x19]
  24:	ldrb	w0, [x0, #8]
  28:	cmp	w0, #0x10
  2c:	b.ne	60 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x60>  // b.any
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
  38:	cbz	x0, 60 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x60>
  3c:	mov	w1, #0x0                   	// #0
  40:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  44:	bl	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
  48:	cbz	x0, 60 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_+0x60>
  4c:	mov	x1, x20
  50:	add	x0, x0, #0x18
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZN4llvm12PatternMatch15specific_intval5matchINS_8ConstantEEEbPT_>
  60:	mov	w0, #0x0                   	// #0
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x27
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x10
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0xf
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x10
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchIS4_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x29
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x11
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj17ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1a
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1c
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0x60>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  30:	ldr	x1, [x19]
  34:	ldr	x1, [x1]
  38:	cmp	x1, x0
  3c:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  40:	mov	x0, x20
  44:	mov	w1, #0x1                   	// #1
  48:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  4c:	mov	x1, x0
  50:	add	x0, x19, #0x8
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  60:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  64:	mov	x20, x0
  68:	cbz	x0, b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb0>
  6c:	ldrh	w1, [x0, #18]
  70:	cmp	w1, #0x1a
  74:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  78:	mov	w1, #0x0                   	// #0
  7c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  80:	ldr	x1, [x19]
  84:	ldr	x1, [x1]
  88:	cmp	x1, x0
  8c:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_+0xb0>  // b.any
  90:	mov	x0, x20
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  9c:	mov	x1, x0
  a0:	add	x0, x19, #0x8
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchIS3_EEbPT_>
  b0:	mov	w0, #0x0                   	// #0
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	mov	x0, x2
  18:	stp	x21, x22, [sp, #32]
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	x23, x2
  24:	mov	x24, x3
  28:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  2c:	cbz	x0, b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE+0xb0>
  30:	mov	x21, x0
  34:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  38:	tst	w0, #0xff
  3c:	b.eq	70 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE+0x70>  // b.none
  40:	mov	x0, x21
  44:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  48:	ldr	w22, [x0, #32]
  4c:	cmp	w22, #0x40
  50:	b.hi	a0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE+0xa0>  // b.pmore
  54:	ldr	x0, [x0, #24]
  58:	neg	w22, w22
  5c:	mov	x1, #0xffffffffffffffff    	// #-1
  60:	lsr	x22, x1, x22
  64:	cmp	x22, x0
  68:	cset	w0, eq  // eq = none
  6c:	cbnz	w0, 88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE+0x88>
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  78:	cbz	x0, b0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE+0xb0>
  7c:	mov	x1, x21
  80:	bl	0 <_ZN4llvm12ConstantExpr6getAndEPNS_8ConstantES2_>
  84:	mov	x19, x0
  88:	mov	x0, x19
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x21, x22, [sp, #32]
  94:	ldp	x23, x24, [sp, #48]
  98:	ldp	x29, x30, [sp], #96
  9c:	ret
  a0:	add	x0, x0, #0x18
  a4:	bl	0 <_ZNK4llvm5APInt25countTrailingOnesSlowCaseEv>
  a8:	cmp	w22, w0
  ac:	b	68 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE+0x68>
  b0:	add	x21, sp, #0x48
  b4:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  b8:	mov	x0, x21
  bc:	add	x1, x1, #0x0
  c0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  c4:	mov	x3, x21
  c8:	mov	x2, x23
  cc:	mov	x1, x19
  d0:	mov	x4, #0x0                   	// #0
  d4:	mov	w0, #0x1c                  	// #28
  d8:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
  dc:	ldp	x2, x3, [x20, #8]
  e0:	mov	x19, x0
  e4:	mov	x1, x24
  e8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  ec:	mov	x1, x19
  f0:	mov	x0, x20
  f4:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE>
  f8:	b	88 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE9CreateAndEPNS_5ValueES5_RKNS_5TwineE+0x88>

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10BranchInstEPKNS_11InstructionEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10BranchInstEPKNS_11InstructionEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10BranchInstEPKNS_11InstructionEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10BranchInstEPKNS_11InstructionEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10BranchInstEPKNS_11InstructionEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10BranchInstEPKNS_11InstructionEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x1a
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10UndefValueEPKNS_8ConstantEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10UndefValueEPKNS_8ConstantEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10UndefValueEPKNS_8ConstantEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10UndefValueEPKNS_8ConstantEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10UndefValueEPKNS_8ConstantEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10UndefValueEPKNS_8ConstantEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x9
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	str	x23, [sp, #48]
  1c:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  20:	cbz	x0, 3c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x3c>
  24:	ldp	x19, x20, [sp, #16]
  28:	add	x0, x0, #0x18
  2c:	ldp	x21, x22, [sp, #32]
  30:	ldr	x23, [sp, #48]
  34:	ldp	x29, x30, [sp], #64
  38:	b	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  3c:	ldr	x0, [x19]
  40:	ldrb	w0, [x0, #8]
  44:	cmp	w0, #0x10
  48:	b.ne	104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x104>  // b.any
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  54:	mov	x22, x0
  58:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x104>
  5c:	mov	w1, #0x0                   	// #0
  60:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  64:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  68:	cbnz	x0, 24 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x24>
  6c:	ldr	x0, [x19]
  70:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  74:	mov	w21, w0
  78:	cbnz	w0, 9c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x9c>
  7c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  80:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  84:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  88:	add	x3, x3, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x0, x0, #0x0
  94:	mov	w2, #0xeb                  	// #235
  98:	bl	0 <__assert_fail>
  9c:	mov	w20, #0x0                   	// #0
  a0:	mov	w19, #0x0                   	// #0
  a4:	mov	w1, w20
  a8:	mov	x0, x22
  ac:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
  b0:	mov	x23, x0
  b4:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x104>
  b8:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  bc:	tst	w0, #0xff
  c0:	b.ne	e0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0xe0>  // b.any
  c4:	mov	x0, x23
  c8:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  cc:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x104>
  d0:	add	x0, x0, #0x18
  d4:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_>
  d8:	ands	w19, w0, #0xff
  dc:	b.eq	104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0x104>  // b.none
  e0:	add	w20, w20, #0x1
  e4:	cmp	w21, w20
  e8:	b.ne	a4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0xa4>  // b.any
  ec:	mov	w0, w19
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret
 104:	mov	w19, #0x0                   	// #0
 108:	b	ec <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_5ValueEEEbPT_+0xec>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	str	x23, [sp, #48]
  1c:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  20:	cbz	x0, 3c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x3c>
  24:	ldp	x19, x20, [sp, #16]
  28:	add	x0, x0, #0x18
  2c:	ldp	x21, x22, [sp, #32]
  30:	ldr	x23, [sp, #48]
  34:	ldp	x29, x30, [sp], #64
  38:	b	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  3c:	ldr	x0, [x19]
  40:	ldrb	w0, [x0, #8]
  44:	cmp	w0, #0x10
  48:	b.ne	104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x104>  // b.any
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  54:	mov	x22, x0
  58:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x104>
  5c:	mov	w1, #0x0                   	// #0
  60:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  64:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  68:	cbnz	x0, 24 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x24>
  6c:	ldr	x0, [x19]
  70:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  74:	mov	w21, w0
  78:	cbnz	w0, 9c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x9c>
  7c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  80:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  84:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  88:	add	x3, x3, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x0, x0, #0x0
  94:	mov	w2, #0xeb                  	// #235
  98:	bl	0 <__assert_fail>
  9c:	mov	w20, #0x0                   	// #0
  a0:	mov	w19, #0x0                   	// #0
  a4:	mov	w1, w20
  a8:	mov	x0, x22
  ac:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
  b0:	mov	x23, x0
  b4:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x104>
  b8:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  bc:	tst	w0, #0xff
  c0:	b.ne	e0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xe0>  // b.any
  c4:	mov	x0, x23
  c8:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  cc:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x104>
  d0:	add	x0, x0, #0x18
  d4:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_>
  d8:	ands	w19, w0, #0xff
  dc:	b.eq	104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0x104>  // b.none
  e0:	add	w20, w20, #0x1
  e4:	cmp	w21, w20
  e8:	b.ne	a4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xa4>  // b.any
  ec:	mov	w0, w19
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret
 104:	mov	w19, #0x0                   	// #0
 108:	b	ec <_ZN4llvm12PatternMatch11cst_pred_tyINS0_11is_zero_intEE5matchINS_5ValueEEEbPT_+0xec>

Disassembly of section .text._ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	str	x23, [sp, #48]
  1c:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  20:	cbz	x0, 3c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x3c>
  24:	ldp	x19, x20, [sp, #16]
  28:	add	x0, x0, #0x18
  2c:	ldp	x21, x22, [sp, #32]
  30:	ldr	x23, [sp, #48]
  34:	ldp	x29, x30, [sp], #64
  38:	b	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  3c:	ldr	x0, [x19]
  40:	ldrb	w0, [x0, #8]
  44:	cmp	w0, #0x10
  48:	b.ne	104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x104>  // b.any
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  54:	mov	x22, x0
  58:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x104>
  5c:	mov	w1, #0x0                   	// #0
  60:	bl	0 <_ZNK4llvm8Constant13getSplatValueEb>
  64:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  68:	cbnz	x0, 24 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x24>
  6c:	ldr	x0, [x19]
  70:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  74:	mov	w21, w0
  78:	cbnz	w0, 9c <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x9c>
  7c:	adrp	x3, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  80:	adrp	x1, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  84:	adrp	x0, 0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  88:	add	x3, x3, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x0, x0, #0x0
  94:	mov	w2, #0xeb                  	// #235
  98:	bl	0 <__assert_fail>
  9c:	mov	w20, #0x0                   	// #0
  a0:	mov	w19, #0x0                   	// #0
  a4:	mov	w1, w20
  a8:	mov	x0, x22
  ac:	bl	0 <_ZNK4llvm8Constant19getAggregateElementEj>
  b0:	mov	x23, x0
  b4:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x104>
  b8:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  bc:	tst	w0, #0xff
  c0:	b.ne	e0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xe0>  // b.any
  c4:	mov	x0, x23
  c8:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  cc:	cbz	x0, 104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x104>
  d0:	add	x0, x0, #0x18
  d4:	bl	0 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_>
  d8:	ands	w19, w0, #0xff
  dc:	b.eq	104 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0x104>  // b.none
  e0:	add	w20, w20, #0x1
  e4:	cmp	w21, w20
  e8:	b.ne	a4 <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xa4>  // b.any
  ec:	mov	w0, w19
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x23, [sp, #48]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret
 104:	mov	w19, #0x0                   	// #0
 108:	b	ec <_ZN4llvm12PatternMatch11cst_pred_tyINS0_6is_oneEE5matchINS_8ConstantEEEbPT_+0xec>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1c
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_11InstructionEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_11InstructionEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_11InstructionEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_11InstructionEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_11InstructionEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_11InstructionEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x5
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_12ConstantExprENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_12ConstantExprENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_12ConstantExprENS_11InstructionEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	csel	x0, x19, xzr, ne  // ne = any
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_8ConstantEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_8ConstantEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_8ConstantEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_8ConstantEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_8ConstantEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_8ConstantEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x5
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_12ConstantExprENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_12ConstantExprENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_12ConstantExprENS_8ConstantEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	csel	x0, x19, xzr, ne  // ne = any
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x0, x1
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x1
  14:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>
  18:	ands	w0, w0, #0xff
  1c:	b.eq	84 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_+0x84>  // b.none
  20:	ldrb	w0, [x19, #16]
  24:	cmp	w0, #0x34
  28:	mov	x0, x19
  2c:	b.ne	3c <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_+0x3c>  // b.any
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>
  3c:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>
  40:	mov	x19, x0
  44:	cbz	x0, 80 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_+0x80>
  48:	ldrh	w1, [x0, #18]
  4c:	cmp	w1, #0x1c
  50:	b.ne	80 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_+0x80>  // b.any
  54:	mov	w1, #0x0                   	// #0
  58:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>
  5c:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>
  60:	ands	w0, w0, #0xff
  64:	b.eq	84 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_+0x84>  // b.none
  68:	mov	x0, x19
  6c:	mov	w1, #0x1                   	// #1
  70:	bl	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <_ZN4llvm12PatternMatch12OneUse_matchINS0_14BinaryOp_matchINS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEE5matchINS_8ConstantEEEbPT_>
  80:	mov	w0, #0x0                   	// #0
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	ac <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0xac>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  24:	mov	x19, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x20
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	6c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x6c>  // b.none
  44:	mov	w1, #0x1                   	// #1
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  50:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  54:	tst	w0, #0xff
  58:	b.eq	6c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x6c>  // b.none
  5c:	mov	w0, #0x1                   	// #1
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret
  6c:	mov	w1, #0x1                   	// #1
  70:	mov	x0, x19
  74:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  78:	mov	x1, x0
  7c:	mov	x0, x20
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  84:	tst	w0, #0xff
  88:	b.ne	94 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x94>  // b.any
  8c:	mov	w0, #0x0                   	// #0
  90:	b	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x60>
  94:	mov	x0, x19
  98:	mov	w1, #0x0                   	// #0
  9c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  a0:	ldp	x19, x20, [sp, #16]
  a4:	ldp	x29, x30, [sp], #32
  a8:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  ac:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  b0:	mov	x19, x0
  b4:	cbz	x0, 8c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x8c>
  b8:	ldrh	w1, [x0, #18]
  bc:	cmp	w1, #0x1c
  c0:	b.ne	8c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x8c>  // b.any
  c4:	mov	w1, #0x0                   	// #0
  c8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  cc:	mov	x1, x0
  d0:	mov	x0, x20
  d4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  d8:	tst	w0, #0xff
  dc:	b.eq	f8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0xf8>  // b.none
  e0:	mov	w1, #0x1                   	// #1
  e4:	mov	x0, x19
  e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  ec:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
  f0:	tst	w0, #0xff
  f4:	b.ne	5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x5c>  // b.any
  f8:	mov	w1, #0x1                   	// #1
  fc:	mov	x0, x19
 100:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
 104:	mov	x1, x0
 108:	mov	x0, x20
 10c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
 110:	tst	w0, #0xff
 114:	b.eq	8c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_+0x8c>  // b.none
 118:	mov	x0, x19
 11c:	mov	w1, #0x0                   	// #0
 120:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj28ELb0EEEEES5_Lj28ELb1EE5matchINS_11InstructionEEEbPT_>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x0, x1
  18:	ldrb	w1, [x1, #16]
  1c:	cmp	w1, #0x34
  20:	b.ne	c4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0xc4>  // b.any
  24:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  28:	mov	x20, x0
  2c:	mov	w1, #0x0                   	// #0
  30:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  34:	mov	x19, x0
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.none
  44:	ldrb	w0, [x19, #16]
  48:	cmp	w0, #0x35
  4c:	mov	x0, x19
  50:	b.ne	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x84>  // b.any
  54:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  58:	tst	w0, #0xff
  5c:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.none
  60:	mov	x0, x20
  64:	mov	w1, #0x1                   	// #1
  68:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  6c:	mov	x1, x0
  70:	add	x0, x21, #0x2
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  88:	mov	x19, x0
  8c:	cbz	x0, 174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>
  90:	ldrh	w1, [x0, #18]
  94:	cmp	w1, #0x1d
  98:	b.ne	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.any
  9c:	mov	w1, #0x0                   	// #0
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  a4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  a8:	tst	w0, #0xff
  ac:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.none
  b0:	mov	w1, #0x1                   	// #1
  b4:	mov	x0, x19
  b8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  c0:	b	58 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x58>
  c4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  c8:	mov	x19, x0
  cc:	cbz	x0, 174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>
  d0:	ldrh	w1, [x0, #18]
  d4:	cmp	w1, #0x1c
  d8:	b.ne	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.any
  dc:	mov	w1, #0x0                   	// #0
  e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  e4:	mov	x20, x0
  e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
  ec:	tst	w0, #0xff
  f0:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.none
  f4:	ldrb	w0, [x20, #16]
  f8:	cmp	w0, #0x35
  fc:	mov	x0, x20
 100:	b.ne	134 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x134>  // b.any
 104:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 108:	tst	w0, #0xff
 10c:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.none
 110:	mov	x0, x19
 114:	mov	w1, #0x1                   	// #1
 118:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 11c:	mov	x1, x0
 120:	add	x0, x21, #0x2
 124:	ldp	x19, x20, [sp, #16]
 128:	ldr	x21, [sp, #32]
 12c:	ldp	x29, x30, [sp], #48
 130:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 134:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 138:	mov	x20, x0
 13c:	cbz	x0, 174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>
 140:	ldrh	w1, [x0, #18]
 144:	cmp	w1, #0x1d
 148:	b.ne	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.any
 14c:	mov	w1, #0x0                   	// #0
 150:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 154:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 158:	tst	w0, #0xff
 15c:	b.eq	174 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x174>  // b.none
 160:	mov	w1, #0x1                   	// #1
 164:	mov	x0, x20
 168:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 16c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_>
 170:	b	108 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_12OneUse_matchINS1_INS0_11class_matchINS_5ValueEEES5_Lj29ELb0EEEEENS0_11cst_pred_tyINS0_6is_oneEEELj28ELb0EE5matchINS_11InstructionEEEbPT_+0x108>
 174:	mov	w0, #0x0                   	// #0
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldr	x21, [sp, #32]
 180:	ldp	x29, x30, [sp], #48
 184:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x31
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x19
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1a
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x27
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x10
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0xf
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x10
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_15specific_intvalENS0_7bind_tyINS_5ValueEEELj15ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1a
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x31
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x19
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1a
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x35
  1c:	b.ne	bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xbc>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.ne	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0x84>  // b.any
  44:	mov	w1, #0x1                   	// #1
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  5c:	tst	w0, #0xff
  60:	b.eq	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>  // b.none
  64:	mov	x0, x20
  68:	mov	w1, #0x0                   	// #0
  6c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  70:	mov	x1, x0
  74:	add	x0, x19, #0x10
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  84:	mov	w1, #0x1                   	// #1
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  90:	mov	x1, x0
  94:	add	x0, x19, #0x10
  98:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  9c:	tst	w0, #0xff
  a0:	b.eq	44 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0x44>  // b.none
  a4:	mov	w0, #0x1                   	// #1
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x29, x30, [sp], #32
  b0:	ret
  b4:	mov	w0, #0x0                   	// #0
  b8:	b	a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xa8>
  bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  c0:	mov	x20, x0
  c4:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>
  c8:	ldrh	w1, [x0, #18]
  cc:	cmp	w1, #0x1d
  d0:	b.ne	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>  // b.any
  d4:	mov	w1, #0x0                   	// #0
  d8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  dc:	mov	x1, x0
  e0:	mov	x0, x19
  e4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  e8:	tst	w0, #0xff
  ec:	b.ne	130 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0x130>  // b.any
  f0:	mov	w1, #0x1                   	// #1
  f4:	mov	x0, x20
  f8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  fc:	mov	x1, x0
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 108:	tst	w0, #0xff
 10c:	b.eq	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>  // b.none
 110:	mov	x0, x20
 114:	mov	w1, #0x0                   	// #0
 118:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 11c:	mov	x1, x0
 120:	add	x0, x19, #0x10
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 130:	mov	w1, #0x1                   	// #1
 134:	mov	x0, x20
 138:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 13c:	mov	x1, x0
 140:	add	x0, x19, #0x10
 144:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 148:	tst	w0, #0xff
 14c:	b.ne	a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xa4>  // b.any
 150:	b	f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj25ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj26ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xf0>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x31
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x19
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x35
  1c:	b.ne	bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xbc>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.ne	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0x84>  // b.any
  44:	mov	w1, #0x1                   	// #1
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  5c:	tst	w0, #0xff
  60:	b.eq	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>  // b.none
  64:	mov	x0, x20
  68:	mov	w1, #0x0                   	// #0
  6c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  70:	mov	x1, x0
  74:	add	x0, x19, #0x10
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  84:	mov	w1, #0x1                   	// #1
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  90:	mov	x1, x0
  94:	add	x0, x19, #0x10
  98:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  9c:	tst	w0, #0xff
  a0:	b.eq	44 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0x44>  // b.none
  a4:	mov	w0, #0x1                   	// #1
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x29, x30, [sp], #32
  b0:	ret
  b4:	mov	w0, #0x0                   	// #0
  b8:	b	a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xa8>
  bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  c0:	mov	x20, x0
  c4:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>
  c8:	ldrh	w1, [x0, #18]
  cc:	cmp	w1, #0x1d
  d0:	b.ne	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>  // b.any
  d4:	mov	w1, #0x0                   	// #0
  d8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  dc:	mov	x1, x0
  e0:	mov	x0, x19
  e4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  e8:	tst	w0, #0xff
  ec:	b.ne	130 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0x130>  // b.any
  f0:	mov	w1, #0x1                   	// #1
  f4:	mov	x0, x20
  f8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
  fc:	mov	x1, x0
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 108:	tst	w0, #0xff
 10c:	b.eq	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xb4>  // b.none
 110:	mov	x0, x20
 114:	mov	w1, #0x0                   	// #0
 118:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 11c:	mov	x1, x0
 120:	add	x0, x19, #0x10
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 130:	mov	w1, #0x1                   	// #1
 134:	mov	x0, x20
 138:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 13c:	mov	x1, x0
 140:	add	x0, x19, #0x10
 144:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_>
 148:	tst	w0, #0xff
 14c:	b.ne	a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xa4>  // b.any
 150:	b	f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEES4_Lj26ELb0EEENS1_IS4_NS1_INS0_15specific_intvalES4_Lj15ELb0EEELj25ELb0EEELj29ELb1EE5matchIS3_EEbPT_+0xf0>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1a
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x25
  1c:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0xb8>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	70 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x70>  // b.none
  44:	mov	w1, #0x1                   	// #1
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  50:	ldr	x1, [x19, #24]
  54:	ldr	x1, [x1]
  58:	cmp	x1, x0
  5c:	b.ne	70 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x70>  // b.any
  60:	mov	w0, #0x1                   	// #1
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	mov	w1, #0x1                   	// #1
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  7c:	mov	x1, x0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  88:	tst	w0, #0xff
  8c:	b.ne	98 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x98>  // b.any
  90:	mov	w0, #0x0                   	// #0
  94:	b	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x64>
  98:	mov	x0, x20
  9c:	mov	w1, #0x0                   	// #0
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  a4:	ldr	x1, [x19, #24]
  a8:	ldr	x1, [x1]
  ac:	cmp	x1, x0
  b0:	cset	w0, eq  // eq = none
  b4:	b	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x64>
  b8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  bc:	mov	x20, x0
  c0:	cbz	x0, 90 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x90>
  c4:	ldrh	w1, [x0, #18]
  c8:	cmp	w1, #0xd
  cc:	b.ne	90 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x90>  // b.any
  d0:	mov	w1, #0x0                   	// #0
  d4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  d8:	mov	x1, x0
  dc:	mov	x0, x19
  e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  e4:	tst	w0, #0xff
  e8:	b.eq	108 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x108>  // b.none
  ec:	mov	w1, #0x1                   	// #1
  f0:	mov	x0, x20
  f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
  f8:	ldr	x1, [x19, #24]
  fc:	ldr	x1, [x1]
 100:	cmp	x1, x0
 104:	b.eq	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x60>  // b.none
 108:	mov	w1, #0x1                   	// #1
 10c:	mov	x0, x20
 110:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
 114:	mov	x1, x0
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
 120:	tst	w0, #0xff
 124:	b.eq	90 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0x90>  // b.none
 128:	mov	x0, x20
 12c:	mov	w1, #0x0                   	// #0
 130:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_>
 134:	b	a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchIS3_EEbPT_+0xa4>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x25
  1c:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	70 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x70>  // b.none
  44:	mov	w1, #0x1                   	// #1
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  50:	ldr	x1, [x19, #24]
  54:	ldr	x1, [x1]
  58:	cmp	x1, x0
  5c:	b.ne	70 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x70>  // b.any
  60:	mov	w0, #0x1                   	// #1
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	mov	w1, #0x1                   	// #1
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  7c:	mov	x1, x0
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  88:	tst	w0, #0xff
  8c:	b.ne	98 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x98>  // b.any
  90:	mov	w0, #0x0                   	// #0
  94:	b	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x64>
  98:	mov	x0, x20
  9c:	mov	w1, #0x0                   	// #0
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  a4:	ldr	x1, [x19, #24]
  a8:	ldr	x1, [x1]
  ac:	cmp	x1, x0
  b0:	cset	w0, eq  // eq = none
  b4:	b	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x64>
  b8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  bc:	mov	x20, x0
  c0:	cbz	x0, 90 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x90>
  c4:	ldrh	w1, [x0, #18]
  c8:	cmp	w1, #0xd
  cc:	b.ne	90 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x90>  // b.any
  d0:	mov	w1, #0x0                   	// #0
  d4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  d8:	mov	x1, x0
  dc:	mov	x0, x19
  e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  e4:	tst	w0, #0xff
  e8:	b.eq	108 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x108>  // b.none
  ec:	mov	w1, #0x1                   	// #1
  f0:	mov	x0, x20
  f4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
  f8:	ldr	x1, [x19, #24]
  fc:	ldr	x1, [x1]
 100:	cmp	x1, x0
 104:	b.eq	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x60>  // b.none
 108:	mov	w1, #0x1                   	// #1
 10c:	mov	x0, x20
 110:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
 114:	mov	x1, x0
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
 120:	tst	w0, #0xff
 124:	b.eq	90 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0x90>  // b.none
 128:	mov	x0, x20
 12c:	mov	w1, #0x0                   	// #0
 130:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_>
 134:	b	a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EE5matchINS_8ConstantEEEbPT_+0xa4>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x20
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1c
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x20
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEENS0_14deferredval_tyIS3_EELj13ELb1EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	60 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x60>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	ldr	x1, [x19]
  34:	ldr	x1, [x1]
  38:	cmp	x1, x0
  3c:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  40:	mov	x0, x20
  44:	mov	w1, #0x1                   	// #1
  48:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  4c:	mov	x1, x0
  50:	add	x0, x19, #0x8
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  60:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	mov	x20, x0
  68:	cbz	x0, b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>
  6c:	ldrh	w1, [x0, #18]
  70:	cmp	w1, #0x1a
  74:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  78:	mov	w1, #0x0                   	// #0
  7c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  80:	ldr	x1, [x19]
  84:	ldr	x1, [x1]
  88:	cmp	x1, x0
  8c:	b.ne	b0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xb0>  // b.any
  90:	mov	x0, x20
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  9c:	mov	x1, x0
  a0:	add	x0, x19, #0x8
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  b0:	mov	w0, #0x0                   	// #0
  b4:	ldp	x19, x20, [sp, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x18
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1c
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x18
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchIS3_EEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x8
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1c
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x8
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x34
  1c:	b.ne	64 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0x64>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  3c:	tst	w0, #0xff
  40:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  44:	mov	x0, x20
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  50:	mov	x1, x0
  54:	add	x0, x19, #0x18
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  68:	mov	x20, x0
  6c:	cbz	x0, b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>
  70:	ldrh	w1, [x0, #18]
  74:	cmp	w1, #0x1c
  78:	b.ne	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.any
  7c:	mov	w1, #0x0                   	// #0
  80:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  84:	mov	x1, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  90:	tst	w0, #0xff
  94:	b.eq	b8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_+0xb8>  // b.none
  98:	mov	x0, x20
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  a4:	mov	x1, x0
  a8:	add	x0, x19, #0x18
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14deferredval_tyINS_5ValueEEENS0_15specific_intvalELj26ELb0EEES5_Lj28ELb0EE5matchINS_8ConstantEEEbPT_>
  b8:	mov	w0, #0x0                   	// #0
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x25
  1c:	b.ne	bc <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xbc>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  3c:	tst	w0, #0xff
  40:	b.ne	84 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x84>  // b.any
  44:	mov	w1, #0x1                   	// #1
  48:	mov	x0, x20
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  5c:	tst	w0, #0xff
  60:	b.eq	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb4>  // b.none
  64:	mov	x0, x20
  68:	mov	w1, #0x0                   	// #0
  6c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  70:	mov	x1, x0
  74:	add	x0, x19, #0x18
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  84:	mov	w1, #0x1                   	// #1
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  90:	mov	x1, x0
  94:	add	x0, x19, #0x18
  98:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  9c:	tst	w0, #0xff
  a0:	b.eq	44 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x44>  // b.none
  a4:	mov	w0, #0x1                   	// #1
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldp	x29, x30, [sp], #32
  b0:	ret
  b4:	mov	w0, #0x0                   	// #0
  b8:	b	a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xa8>
  bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  c0:	mov	x20, x0
  c4:	cbz	x0, b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb4>
  c8:	ldrh	w1, [x0, #18]
  cc:	cmp	w1, #0xd
  d0:	b.ne	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb4>  // b.any
  d4:	mov	w1, #0x0                   	// #0
  d8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  dc:	mov	x1, x0
  e0:	mov	x0, x19
  e4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  e8:	tst	w0, #0xff
  ec:	b.ne	130 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0x130>  // b.any
  f0:	mov	w1, #0x1                   	// #1
  f4:	mov	x0, x20
  f8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
  fc:	mov	x1, x0
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 108:	tst	w0, #0xff
 10c:	b.eq	b4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xb4>  // b.none
 110:	mov	x0, x20
 114:	mov	w1, #0x0                   	// #0
 118:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 11c:	mov	x1, x0
 120:	add	x0, x19, #0x18
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 130:	mov	w1, #0x1                   	// #1
 134:	mov	x0, x20
 138:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 13c:	mov	x1, x0
 140:	add	x0, x19, #0x18
 144:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_>
 148:	tst	w0, #0xff
 14c:	b.ne	a4 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xa4>  // b.any
 150:	b	f0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_7bind_tyINS_5ValueEEENS0_15specific_intvalELj28ELb0EEENS1_INS1_INS0_14deferredval_tyIS3_EES5_Lj26ELb0EEES5_Lj28ELb0EEELj13ELb1EE5matchIS3_EEbPT_+0xf0>

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	ldrb	w1, [x1, #16]
  18:	cmp	w1, #0x32
  1c:	b.ne	5c <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0x5c>  // b.any
  20:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  24:	mov	x20, x0
  28:	mov	w1, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  30:	ldr	x1, [x19]
  34:	cmp	x1, x0
  38:	b.ne	a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa8>  // b.any
  3c:	mov	x0, x20
  40:	mov	w1, #0x1                   	// #1
  44:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  48:	mov	x1, x0
  4c:	add	x0, x19, #0x8
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  5c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  60:	mov	x20, x0
  64:	cbz	x0, a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa8>
  68:	ldrh	w1, [x0, #18]
  6c:	cmp	w1, #0x1a
  70:	b.ne	a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa8>  // b.any
  74:	mov	w1, #0x0                   	// #0
  78:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  7c:	ldr	x1, [x19]
  80:	cmp	x1, x0
  84:	b.ne	a8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_+0xa8>  // b.any
  88:	mov	x0, x20
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  94:	mov	x1, x0
  98:	add	x0, x19, #0x8
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS0_14specificval_tyENS0_15specific_intvalELj26ELb0EE5matchINS_8ConstantEEEbPT_>
  a8:	mov	w0, #0x0                   	// #0
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	str	x21, [sp, #32]
  18:	ldrb	w1, [x1, #16]
  1c:	cmp	w1, #0x34
  20:	b.ne	e8 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0xe8>  // b.any
  24:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  28:	mov	x21, x0
  2c:	mov	w1, #0x0                   	// #0
  30:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  34:	ldrb	w1, [x0, #16]
  38:	cmp	w1, #0x32
  3c:	b.ne	a0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0xa0>  // b.any
  40:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  44:	mov	x20, x0
  48:	mov	w1, #0x0                   	// #0
  4c:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  50:	ldr	x1, [x19]
  54:	cmp	x1, x0
  58:	b.ne	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>  // b.any
  5c:	mov	w1, #0x1                   	// #1
  60:	mov	x0, x20
  64:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  68:	mov	x1, x0
  6c:	add	x0, x19, #0x8
  70:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  74:	tst	w0, #0xff
  78:	b.eq	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>  // b.none
  7c:	mov	x0, x21
  80:	mov	w1, #0x1                   	// #1
  84:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  88:	mov	x1, x0
  8c:	add	x0, x19, #0x18
  90:	ldp	x19, x20, [sp, #16]
  94:	ldr	x21, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  a0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  a4:	mov	x20, x0
  a8:	cbz	x0, 140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>
  ac:	ldrh	w1, [x0, #18]
  b0:	cmp	w1, #0x1a
  b4:	b.ne	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>  // b.any
  b8:	mov	w1, #0x0                   	// #0
  bc:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  c0:	ldr	x1, [x19]
  c4:	cmp	x1, x0
  c8:	b.ne	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>  // b.any
  cc:	mov	x0, x20
  d0:	mov	w1, #0x1                   	// #1
  d4:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  d8:	mov	x1, x0
  dc:	add	x0, x19, #0x8
  e0:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  e4:	b	74 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x74>
  e8:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
  ec:	mov	x20, x0
  f0:	cbz	x0, 140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>
  f4:	ldrh	w1, [x0, #18]
  f8:	cmp	w1, #0x1c
  fc:	b.ne	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>  // b.any
 100:	mov	w1, #0x0                   	// #0
 104:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
 108:	mov	x1, x0
 10c:	mov	x0, x19
 110:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
 114:	tst	w0, #0xff
 118:	b.eq	140 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_+0x140>  // b.none
 11c:	mov	x0, x20
 120:	mov	w1, #0x1                   	// #1
 124:	bl	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
 128:	mov	x1, x0
 12c:	add	x0, x19, #0x18
 130:	ldp	x19, x20, [sp, #16]
 134:	ldr	x21, [sp, #32]
 138:	ldp	x29, x30, [sp], #48
 13c:	b	0 <_ZN4llvm12PatternMatch14BinaryOp_matchINS1_INS0_14specificval_tyENS0_15specific_intvalELj26ELb0EEES3_Lj28ELb0EE5matchINS_5ValueEEEbPT_>
 140:	mov	w0, #0x0                   	// #0
 144:	ldp	x19, x20, [sp, #16]
 148:	ldr	x21, [sp, #32]
 14c:	ldp	x29, x30, [sp], #48
 150:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	cbnz	x0, 30 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_+0x30>
  10:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_>
  14:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_>
  18:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x69                  	// #105
  2c:	bl	0 <__assert_fail>
  30:	mov	x19, x0
  34:	bl	0 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_>
  38:	ands	w0, w0, #0xff
  3c:	b.eq	54 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_+0x54>  // b.none
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm11isa_impl_clINS_8ICmpInstEPKNS_5ValueEE4doitES4_>
  48:	ldrb	w0, [x0, #16]
  4c:	cmp	w0, #0x4d
  50:	cset	w0, eq  // eq = none
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	mov	x0, x1
  18:	bl	0 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_>
  1c:	tst	w0, #0xff
  20:	b.ne	34 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_+0x34>  // b.any
  24:	mov	w0, #0x0                   	// #0
  28:	ldp	x19, x20, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	cbz	x19, 24 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_+0x24>
  38:	ldur	x0, [x19, #-48]
  3c:	bl	0 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_>
  40:	ldr	x1, [x20, #8]
  44:	cmp	x1, x0
  48:	b.ne	24 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_+0x24>  // b.any
  4c:	ldur	x0, [x19, #-24]
  50:	bl	0 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_>
  54:	mov	x1, x0
  58:	add	x0, x20, #0x10
  5c:	bl	0 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_>
  60:	ands	w0, w0, #0xff
  64:	b.eq	24 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_+0x24>  // b.none
  68:	ldr	x2, [x20]
  6c:	ldrh	w1, [x19, #18]
  70:	and	w1, w1, #0xffff7fff
  74:	str	w1, [x2]
  78:	b	28 <_ZN4llvm12PatternMatch14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EE5matchINS_5ValueEEEbPT_+0x28>

Disassembly of section .text._ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_:

0000000000000000 <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	mov	x0, x1
  18:	bl	0 <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_>
  1c:	tst	w0, #0xff
  20:	b.eq	8c <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_+0x8c>  // b.none
  24:	cbz	x19, 8c <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_+0x8c>
  28:	ldr	w0, [x19, #20]
  2c:	ubfx	x0, x0, #0, #28
  30:	cmp	w0, #0x3
  34:	b.ne	8c <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_+0x8c>  // b.any
  38:	ldur	x1, [x19, #-72]
  3c:	mov	x0, x20
  40:	bl	0 <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_>
  44:	tst	w0, #0xff
  48:	b.eq	8c <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_+0x8c>  // b.none
  4c:	mov	w1, #0x0                   	// #0
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_>
  58:	mov	x1, x0
  5c:	add	x0, x20, #0x18
  60:	bl	0 <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_>
  64:	tst	w0, #0xff
  68:	b.eq	8c <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_+0x8c>  // b.none
  6c:	mov	x0, x19
  70:	mov	w1, #0x1                   	// #1
  74:	bl	0 <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_>
  78:	mov	x1, x0
  7c:	add	x0, x20, #0x20
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	b	0 <_ZN4llvm12PatternMatch9brc_matchINS0_14CmpClass_matchINS0_14specificval_tyENS0_11cst_pred_tyINS0_11is_zero_intEEENS_8ICmpInstENS_7CmpInst9PredicateELb0EEENS0_14specific_bbvalESB_E5matchINS_11InstructionEEEbPT_>
  8c:	mov	w0, #0x0                   	// #0
  90:	ldp	x19, x20, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret

TruncInstCombine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	stp	x21, x22, [sp, #32]
      10:	ldrb	w2, [x0, #16]
      14:	sub	w2, w2, #0x18
      18:	cmp	w2, #0x28
      1c:	b.hi	94 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x94>  // b.pmore
      20:	mov	x19, x1
      24:	mov	x22, #0x1                   	// #1
      28:	mov	x1, #0xa000                	// #40960
      2c:	lsl	x2, x22, x2
      30:	movk	x1, #0x7002, lsl #16
      34:	tst	x2, x1
      38:	b.ne	54 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x54>  // b.any
      3c:	tst	x2, #0x1c000000000
      40:	b.eq	94 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x94>  // b.none
      44:	ldp	x19, x20, [sp, #16]
      48:	ldp	x21, x22, [sp, #32]
      4c:	ldp	x29, x30, [sp], #64
      50:	ret
      54:	mov	x20, x0
      58:	add	x21, sp, #0x38
      5c:	mov	w1, #0x0                   	// #0
      60:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      64:	mov	x1, x21
      68:	str	x0, [sp, #56]
      6c:	mov	x0, x19
      70:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      74:	mov	w1, w22
      78:	mov	x0, x20
      7c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      80:	str	x0, [sp, #56]
      84:	mov	x1, x21
      88:	mov	x0, x19
      8c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      90:	b	44 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0+0x44>
      94:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      98:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      9c:	add	x1, x1, #0x0
      a0:	add	x0, x0, #0x0
      a4:	mov	w2, #0x3c                  	// #60
      a8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000000ac <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5countERKS2_.isra.0>:
      ac:	stp	x29, x30, [sp, #-112]!
      b0:	mov	x29, sp
      b4:	stp	x19, x20, [sp, #16]
      b8:	add	x20, sp, #0x30
      bc:	mov	x19, x0
      c0:	mov	x8, x20
      c4:	str	x21, [sp, #32]
      c8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      cc:	add	x21, sp, #0x50
      d0:	mov	x8, x21
      d4:	mov	x0, x19
      d8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      dc:	mov	x1, x21
      e0:	mov	x0, x20
      e4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
      e8:	and	x0, x0, #0xff
      ec:	eor	x0, x0, #0x1
      f0:	ldp	x19, x20, [sp, #16]
      f4:	ldr	x21, [sp, #32]
      f8:	ldp	x29, x30, [sp], #112
      fc:	ret

0000000000000100 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>:
     100:	stp	x29, x30, [sp, #-32]!
     104:	mov	x29, sp
     108:	stp	x19, x20, [sp, #16]
     10c:	cbz	x1, 120 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x20>
     110:	mov	x19, x1
     114:	ldrb	w1, [x1, #8]
     118:	cmp	w1, #0x10
     11c:	b.ne	140 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x40>  // b.any
     120:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     124:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     128:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     12c:	add	x3, x3, #0x0
     130:	add	x1, x1, #0x0
     134:	add	x0, x0, #0x0
     138:	mov	w2, #0x116                 	// #278
     13c:	bl	0 <__assert_fail>
     140:	ldr	x20, [x0]
     144:	mov	x0, x20
     148:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     14c:	tst	w0, #0xff
     150:	b.eq	16c <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x6c>  // b.none
     154:	cbz	x20, 16c <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE+0x6c>
     158:	ldr	w1, [x20, #32]
     15c:	mov	x0, x19
     160:	ldp	x19, x20, [sp, #16]
     164:	ldp	x29, x30, [sp], #32
     168:	b	0 <_ZN4llvm10VectorType3getEPNS_4TypeENS_12ElementCountE>
     16c:	mov	x0, x19
     170:	ldp	x19, x20, [sp, #16]
     174:	ldp	x29, x30, [sp], #32
     178:	ret

000000000000017c <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>:
     17c:	stp	x29, x30, [sp, #-64]!
     180:	mov	x29, sp
     184:	stp	x19, x20, [sp, #16]
     188:	mov	x19, x1
     18c:	mov	x1, x2
     190:	mov	x20, x0
     194:	mov	x0, x19
     198:	str	x21, [sp, #32]
     19c:	bl	100 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     1a0:	mov	x21, x0
     1a4:	mov	x0, x19
     1a8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     1ac:	cbz	x0, 1e4 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x68>
     1b0:	mov	x1, x21
     1b4:	mov	w2, #0x0                   	// #0
     1b8:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
     1bc:	mov	x19, x0
     1c0:	ldp	x2, x1, [x20]
     1c4:	bl	0 <_ZN4llvm20ConstantFoldConstantEPKNS_8ConstantERKNS_10DataLayoutEPKNS_17TargetLibraryInfoE>
     1c8:	cmp	x0, #0x0
     1cc:	csel	x19, x19, x0, eq  // eq = none
     1d0:	mov	x0, x19
     1d4:	ldp	x19, x20, [sp, #16]
     1d8:	ldr	x21, [sp, #32]
     1dc:	ldp	x29, x30, [sp], #64
     1e0:	ret
     1e4:	mov	x0, x19
     1e8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     1ec:	add	x1, sp, #0x38
     1f0:	str	x0, [sp, #56]
     1f4:	add	x0, x20, #0x50
     1f8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     1fc:	mov	x19, x1
     200:	cbnz	x1, 1d0 <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE+0x54>
     204:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     208:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     20c:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     210:	add	x3, x3, #0x0
     214:	add	x1, x1, #0x0
     218:	add	x0, x0, #0x0
     21c:	mov	w2, #0x128                 	// #296
     220:	bl	0 <__assert_fail>

0000000000000224 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>:
     224:	stp	x29, x30, [sp, #-256]!
     228:	mov	x29, sp
     22c:	stp	x19, x20, [sp, #16]
     230:	mov	x20, x0
     234:	stp	x21, x22, [sp, #32]
     238:	ldp	x22, x0, [x0, #112]
     23c:	stp	x23, x24, [sp, #48]
     240:	mov	x24, x1
     244:	stp	x25, x26, [sp, #64]
     248:	add	x25, sp, #0xb8
     24c:	str	x0, [sp, #120]
     250:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     254:	add	x0, x0, #0x0
     258:	stp	x27, x28, [sp, #80]
     25c:	str	x0, [sp, #104]
     260:	add	x0, sp, #0x88
     264:	str	x0, [sp, #112]
     268:	ldr	x0, [sp, #120]
     26c:	cmp	x0, x22
     270:	b.eq	6a4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x480>  // b.none
     274:	ldr	x0, [x22, #16]
     278:	ldr	x21, [x22]
     27c:	cbz	x0, 2a0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x7c>
     280:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     284:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     288:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     28c:	add	x3, x3, #0x0
     290:	add	x1, x1, #0x0
     294:	add	x0, x0, #0x0
     298:	mov	w2, #0x131                 	// #305
     29c:	bl	0 <__assert_fail>
     2a0:	mov	x1, x21
     2a4:	mov	x0, x25
     2a8:	mov	x3, #0x0                   	// #0
     2ac:	mov	x4, #0x0                   	// #0
     2b0:	mov	x2, #0x0                   	// #0
     2b4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     2b8:	ldrb	w23, [x21, #16]
     2bc:	sub	w23, w23, #0x18
     2c0:	cmp	w23, #0x28
     2c4:	b.hi	68c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x468>  // b.pmore
     2c8:	mov	x19, #0x1                   	// #1
     2cc:	mov	x1, #0xa000                	// #40960
     2d0:	lsl	x0, x19, x23
     2d4:	movk	x1, #0x7002, lsl #16
     2d8:	tst	x0, x1
     2dc:	b.ne	510 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2ec>  // b.any
     2e0:	tst	x0, #0x1c000000000
     2e4:	b.eq	68c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x468>  // b.none
     2e8:	mov	x1, x24
     2ec:	mov	x0, x21
     2f0:	bl	100 <_ZL14getReducedTypePN4llvm5ValueEPNS_4TypeE>
     2f4:	mov	x26, x0
     2f8:	mov	w1, #0x0                   	// #0
     2fc:	mov	x0, x21
     300:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     304:	mov	x19, x0
     308:	ldr	x0, [x0]
     30c:	cmp	x26, x0
     310:	b.ne	358 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x134>  // b.any
     314:	mov	x0, x21
     318:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     31c:	tst	w0, #0xff
     320:	b.eq	344 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x120>  // b.none
     324:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     328:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     32c:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     330:	add	x3, x3, #0x0
     334:	add	x1, x1, #0x0
     338:	add	x0, x0, #0x0
     33c:	mov	w2, #0x13f                 	// #319
     340:	b	29c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x78>
     344:	str	x19, [x22, #16]
     348:	mov	x0, x25
     34c:	add	x22, x22, #0x18
     350:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     354:	b	268 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x44>
     358:	ldr	x1, [sp, #104]
     35c:	add	x28, sp, #0xa0
     360:	mov	x0, x28
     364:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     368:	cmp	w23, #0x28
     36c:	mov	x2, x26
     370:	mov	x1, x19
     374:	mov	x4, x28
     378:	cset	w3, eq  // eq = none
     37c:	mov	x0, x25
     380:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     384:	mov	x19, x0
     388:	ldr	x27, [x20, #24]
     38c:	ldr	w0, [x20, #32]
     390:	mov	x23, x27
     394:	add	x26, x27, x0, lsl #3
     398:	lsr	x0, x0, #2
     39c:	add	x0, x27, x0, lsl #5
     3a0:	cmp	x0, x23
     3a4:	b.eq	428 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x204>  // b.none
     3a8:	ldr	x1, [x23]
     3ac:	cmp	x21, x1
     3b0:	b.eq	3c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1a0>  // b.none
     3b4:	ldr	x1, [x23, #8]
     3b8:	cmp	x21, x1
     3bc:	b.ne	3f8 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1d4>  // b.any
     3c0:	add	x23, x23, #0x8
     3c4:	cmp	x26, x23
     3c8:	b.eq	450 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x22c>  // b.none
     3cc:	mov	x0, x19
     3d0:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     3d4:	cbz	x0, 494 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x270>
     3d8:	str	x0, [x23]
     3dc:	str	x19, [x22, #16]
     3e0:	mov	x0, x19
     3e4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     3e8:	cbz	x0, 348 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x124>
     3ec:	mov	x1, x21
     3f0:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     3f4:	b	348 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x124>
     3f8:	ldr	x1, [x23, #16]
     3fc:	cmp	x21, x1
     400:	b.ne	40c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1e8>  // b.any
     404:	add	x23, x23, #0x10
     408:	b	3c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1a0>
     40c:	ldr	x1, [x23, #24]
     410:	cmp	x21, x1
     414:	b.ne	420 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1fc>  // b.any
     418:	add	x23, x23, #0x18
     41c:	b	3c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1a0>
     420:	add	x23, x23, #0x20
     424:	b	3a0 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x17c>
     428:	sub	x0, x26, x23
     42c:	cmp	x0, #0x10
     430:	b.eq	480 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x25c>  // b.none
     434:	cmp	x0, #0x18
     438:	b.eq	470 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x24c>  // b.none
     43c:	cmp	x0, #0x8
     440:	b.ne	450 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x22c>  // b.any
     444:	ldr	x0, [x23]
     448:	cmp	x21, x0
     44c:	b.eq	3c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1a0>  // b.none
     450:	mov	x0, x19
     454:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     458:	str	x0, [sp, #160]
     45c:	cbz	x0, 3dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1b8>
     460:	mov	x1, x28
     464:	add	x0, x20, #0x18
     468:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     46c:	b	3dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1b8>
     470:	ldr	x0, [x23]
     474:	cmp	x21, x0
     478:	b.eq	3c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1a0>  // b.none
     47c:	add	x23, x23, #0x8
     480:	ldr	x0, [x23]
     484:	cmp	x21, x0
     488:	b.eq	3c4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1a0>  // b.none
     48c:	add	x23, x23, #0x8
     490:	b	444 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x220>
     494:	cmp	x27, x23
     498:	b.ls	4bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x298>  // b.plast
     49c:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     4a0:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     4a4:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     4a8:	add	x3, x3, #0x0
     4ac:	add	x1, x1, #0x0
     4b0:	add	x0, x0, #0x0
     4b4:	mov	w2, #0x1b6                 	// #438
     4b8:	b	29c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x78>
     4bc:	cmp	x26, x23
     4c0:	b.hi	4e4 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2c0>  // b.pmore
     4c4:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     4c8:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     4cc:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     4d0:	add	x3, x3, #0x0
     4d4:	add	x1, x1, #0x0
     4d8:	add	x0, x0, #0x0
     4dc:	mov	w2, #0x1b7                 	// #439
     4e0:	b	29c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x78>
     4e4:	add	x1, x23, #0x8
     4e8:	cmp	x26, x1
     4ec:	b.eq	4fc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x2d8>  // b.none
     4f0:	sub	x2, x26, x1
     4f4:	mov	x0, x23
     4f8:	bl	0 <memmove>
     4fc:	ldr	w1, [x20, #32]
     500:	add	x0, x20, #0x18
     504:	sub	x1, x1, #0x1
     508:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     50c:	b	3dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1b8>
     510:	mov	w1, #0x0                   	// #0
     514:	mov	x0, x21
     518:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     51c:	mov	x1, x0
     520:	mov	x2, x24
     524:	mov	x0, x20
     528:	bl	17c <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     52c:	mov	x26, x0
     530:	mov	w1, w19
     534:	mov	x0, x21
     538:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     53c:	mov	x1, x0
     540:	mov	x2, x24
     544:	mov	x0, x20
     548:	bl	17c <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     54c:	mov	x27, x0
     550:	ldp	x1, x0, [sp, #104]
     554:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     558:	mov	x0, x26
     55c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     560:	mov	x19, x0
     564:	mov	x0, x27
     568:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     56c:	mov	x2, x0
     570:	cmp	x19, #0x0
     574:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     578:	b.ne	5bc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x398>  // b.any
     57c:	mov	w0, #0x101                 	// #257
     580:	add	x19, sp, #0xa0
     584:	stp	xzr, xzr, [sp, #160]
     588:	strh	w0, [sp, #176]
     58c:	mov	x0, x19
     590:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     594:	tst	w0, #0xff
     598:	b.ne	5dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3b8>  // b.any
     59c:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     5a0:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     5a4:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     5a8:	add	x3, x3, #0x0
     5ac:	add	x1, x1, #0x0
     5b0:	add	x0, x0, #0x0
     5b4:	mov	w2, #0x101                 	// #257
     5b8:	b	29c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x78>
     5bc:	mov	x1, x19
     5c0:	mov	w0, w23
     5c4:	mov	x4, #0x0                   	// #0
     5c8:	mov	w3, #0x0                   	// #0
     5cc:	bl	0 <_ZN4llvm12ConstantExpr3getEjPNS_8ConstantES2_jPNS_4TypeE>
     5d0:	mov	x19, x0
     5d4:	cbnz	x0, 3dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1b8>
     5d8:	b	57c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x358>
     5dc:	mov	x3, x19
     5e0:	mov	x2, x27
     5e4:	mov	x1, x26
     5e8:	mov	w0, w23
     5ec:	mov	x4, #0x0                   	// #0
     5f0:	bl	0 <_ZN4llvm14BinaryOperator6CreateENS_11Instruction9BinaryOpsEPNS_5ValueES4_RKNS_5TwineEPS1_>
     5f4:	mov	x19, x0
     5f8:	cbnz	x0, 61c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x3f8>
     5fc:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     600:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     604:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     608:	add	x3, x3, #0x0
     60c:	add	x1, x1, #0x0
     610:	add	x0, x0, #0x0
     614:	mov	w2, #0x69                  	// #105
     618:	b	29c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x78>
     61c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     620:	tst	w0, #0xff
     624:	b.eq	64c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x428>  // b.none
     628:	ldr	x2, [sp, #216]
     62c:	ldr	w23, [sp, #224]
     630:	cbz	x2, 640 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x41c>
     634:	mov	x0, x19
     638:	mov	w1, #0x3                   	// #3
     63c:	bl	0 <_ZN4llvm11Instruction11setMetadataEjPNS_6MDNodeE>
     640:	mov	w1, w23
     644:	mov	x0, x19
     648:	bl	0 <_ZN4llvm11Instruction16setFastMathFlagsENS_13FastMathFlagsE>
     64c:	ldr	x0, [sp, #192]
     650:	cbz	x0, 670 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x44c>
     654:	ldr	x23, [sp, #200]
     658:	mov	x1, x19
     65c:	add	x0, x0, #0x28
     660:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
     664:	add	x1, x19, #0x18
     668:	mov	x0, x23
     66c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     670:	ldr	x1, [sp, #112]
     674:	mov	x0, x19
     678:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
     67c:	mov	x1, x19
     680:	mov	x0, x25
     684:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     688:	b	3dc <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x1b8>
     68c:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     690:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     694:	add	x1, x1, #0x0
     698:	add	x0, x0, #0x0
     69c:	mov	w2, #0x163                 	// #355
     6a0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     6a4:	ldr	x0, [x20, #72]
     6a8:	ldur	x0, [x0, #-24]
     6ac:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     6b0:	mov	x1, x0
     6b4:	mov	x2, x24
     6b8:	mov	x0, x20
     6bc:	bl	17c <_ZN4llvm16TruncInstCombine17getReducedOperandEPNS_5ValueEPNS_4TypeE>
     6c0:	mov	x19, x0
     6c4:	ldr	x1, [x20, #72]
     6c8:	ldr	x0, [x0]
     6cc:	ldr	x23, [x1]
     6d0:	cmp	x23, x0
     6d4:	b.eq	738 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x514>  // b.none
     6d8:	mov	x3, #0x0                   	// #0
     6dc:	mov	x4, #0x0                   	// #0
     6e0:	mov	x2, #0x0                   	// #0
     6e4:	add	x22, sp, #0xb8
     6e8:	mov	x0, x22
     6ec:	add	x21, sp, #0xa0
     6f0:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     6f4:	mov	x0, x21
     6f8:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     6fc:	add	x1, x1, #0x0
     700:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     704:	mov	x1, x19
     708:	mov	x4, x21
     70c:	mov	x2, x23
     710:	mov	w3, #0x0                   	// #0
     714:	mov	x0, x22
     718:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     71c:	mov	x19, x0
     720:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     724:	cbz	x0, 730 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x50c>
     728:	ldr	x1, [x20, #72]
     72c:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
     730:	mov	x0, x22
     734:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     738:	ldr	x0, [x20, #72]
     73c:	mov	x1, x19
     740:	bl	0 <_ZN4llvm5Value18replaceAllUsesWithEPS0_>
     744:	ldr	x0, [x20, #72]
     748:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     74c:	ldp	x21, x19, [x20, #112]
     750:	cmp	x21, x19
     754:	b.eq	77c <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x558>  // b.none
     758:	ldur	x20, [x19, #-24]
     75c:	mov	x0, x20
     760:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     764:	ldr	x0, [x20, #8]
     768:	cbnz	x0, 774 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x550>
     76c:	ldur	x0, [x19, #-24]
     770:	bl	0 <_ZN4llvm11Instruction15eraseFromParentEv>
     774:	sub	x19, x19, #0x18
     778:	b	750 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE+0x52c>
     77c:	ldp	x19, x20, [sp, #16]
     780:	ldp	x21, x22, [sp, #32]
     784:	ldp	x23, x24, [sp, #48]
     788:	ldp	x25, x26, [sp, #64]
     78c:	ldp	x27, x28, [sp, #80]
     790:	ldp	x29, x30, [sp], #256
     794:	ret

0000000000000798 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>:
     798:	stp	x29, x30, [sp, #-368]!
     79c:	mov	x29, sp
     7a0:	stp	x19, x20, [sp, #16]
     7a4:	add	x20, sp, #0x120
     7a8:	add	x1, x20, #0x10
     7ac:	add	x19, sp, #0xd0
     7b0:	stp	x21, x22, [sp, #32]
     7b4:	mov	x22, x0
     7b8:	add	x0, x19, #0x10
     7bc:	stp	x23, x24, [sp, #48]
     7c0:	add	x23, x22, #0x50
     7c4:	str	x0, [sp, #208]
     7c8:	mov	x0, #0x800000000           	// #34359738368
     7cc:	stp	x25, x26, [sp, #64]
     7d0:	add	x21, sp, #0xa8
     7d4:	add	x25, sp, #0x80
     7d8:	stp	x27, x28, [sp, #80]
     7dc:	add	x26, sp, #0x78
     7e0:	add	x24, sp, #0x90
     7e4:	str	x0, [sp, #216]
     7e8:	add	x27, x25, #0x8
     7ec:	str	x1, [sp, #288]
     7f0:	str	x0, [sp, #296]
     7f4:	mov	x0, x23
     7f8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     7fc:	ldr	x0, [x22, #72]
     800:	ldur	x0, [x0, #-24]
     804:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     808:	str	x0, [sp, #168]
     80c:	mov	x1, x21
     810:	mov	x0, x19
     814:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     818:	ldr	w0, [sp, #216]
     81c:	cbz	w0, 9f8 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x260>
     820:	mov	x0, x19
     824:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     828:	ldr	x1, [x0]
     82c:	str	x1, [sp, #104]
     830:	mov	x0, x1
     834:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     838:	ands	w28, w0, #0xff
     83c:	ldr	x1, [sp, #104]
     840:	b.eq	850 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xb8>  // b.none
     844:	mov	x0, x19
     848:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     84c:	b	818 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x80>
     850:	mov	x0, x1
     854:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     858:	str	x0, [sp, #120]
     85c:	mov	x1, x0
     860:	cbz	x0, 964 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1cc>
     864:	ldr	w0, [sp, #296]
     868:	cbz	w0, 918 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x180>
     86c:	mov	x0, x20
     870:	str	x1, [sp, #104]
     874:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     878:	ldr	x0, [x0]
     87c:	ldr	x1, [sp, #104]
     880:	cmp	x1, x0
     884:	b.ne	918 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x180>  // b.any
     888:	mov	x0, x19
     88c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     890:	ldr	w1, [sp, #296]
     894:	mov	x0, x20
     898:	sub	x1, x1, #0x1
     89c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     8a0:	mov	x2, x27
     8a4:	mov	x8, x21
     8a8:	mov	x1, x25
     8ac:	str	wzr, [sp, #136]
     8b0:	ldr	x0, [sp, #120]
     8b4:	str	x0, [sp, #128]
     8b8:	stp	x0, xzr, [sp, #144]
     8bc:	mov	x0, x23
     8c0:	str	xzr, [sp, #160]
     8c4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     8c8:	mov	x0, x21
     8cc:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     8d0:	mov	x2, x0
     8d4:	ldrb	w0, [sp, #200]
     8d8:	cbz	w0, 818 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x80>
     8dc:	add	x28, x22, #0x70
     8e0:	mov	x1, x24
     8e4:	mov	x0, x28
     8e8:	str	x2, [sp, #104]
     8ec:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     8f0:	ldp	x0, x1, [x22, #112]
     8f4:	ldr	x2, [sp, #104]
     8f8:	sub	x1, x1, x0
     8fc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     900:	movk	x0, #0xaaab
     904:	asr	x1, x1, #3
     908:	mul	x1, x1, x0
     90c:	sub	w1, w1, #0x1
     910:	str	w1, [x2, #8]
     914:	b	818 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x80>
     918:	mov	x0, x23
     91c:	bl	ac <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5countERKS2_.isra.0>
     920:	cbnz	x0, 844 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0xac>
     924:	mov	x1, x26
     928:	mov	x0, x20
     92c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     930:	ldr	x0, [sp, #120]
     934:	ldrb	w1, [x0, #16]
     938:	sub	w2, w1, #0x18
     93c:	cmp	w2, #0x28
     940:	b.hi	964 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1cc>  // b.pmore
     944:	mov	x1, #0x1                   	// #1
     948:	lsl	x1, x1, x2
     94c:	mov	x2, #0xa000                	// #40960
     950:	movk	x2, #0x7002, lsl #16
     954:	tst	x1, x2
     958:	b.ne	9a0 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x208>  // b.any
     95c:	tst	x1, #0x1c000000000
     960:	b.ne	818 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x80>  // b.any
     964:	ldr	x0, [sp, #288]
     968:	add	x20, x20, #0x10
     96c:	cmp	x0, x20
     970:	b.eq	978 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1e0>  // b.none
     974:	bl	0 <free>
     978:	mov	x0, x19
     97c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     980:	mov	w0, w28
     984:	ldp	x19, x20, [sp, #16]
     988:	ldp	x21, x22, [sp, #32]
     98c:	ldp	x23, x24, [sp, #48]
     990:	ldp	x25, x26, [sp, #64]
     994:	ldp	x27, x28, [sp, #80]
     998:	ldp	x29, x30, [sp], #368
     99c:	ret
     9a0:	add	x1, x21, #0x10
     9a4:	str	x1, [sp, #168]
     9a8:	mov	x1, #0x200000000           	// #8589934592
     9ac:	str	x1, [sp, #176]
     9b0:	mov	x1, x21
     9b4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     9b8:	ldr	x28, [sp, #168]
     9bc:	ldr	w2, [sp, #176]
     9c0:	add	x2, x28, x2, lsl #3
     9c4:	str	x2, [sp, #104]
     9c8:	cmp	x2, x28
     9cc:	b.eq	9ec <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x254>  // b.none
     9d0:	ldr	x0, [x28], #8
     9d4:	mov	x1, x24
     9d8:	str	x0, [sp, #144]
     9dc:	mov	x0, x19
     9e0:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     9e4:	ldr	x2, [sp, #104]
     9e8:	b	9c4 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x22c>
     9ec:	mov	x0, x21
     9f0:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     9f4:	b	818 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x80>
     9f8:	mov	w28, #0x1                   	// #1
     9fc:	b	964 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv+0x1cc>

0000000000000a00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>:
     a00:	stp	x29, x30, [sp, #-352]!
     a04:	mov	x29, sp
     a08:	stp	x23, x24, [sp, #48]
     a0c:	mov	x23, x0
     a10:	stp	x21, x22, [sp, #32]
     a14:	ldr	x22, [x23, #72]
     a18:	stp	x19, x20, [sp, #16]
     a1c:	add	x19, sp, #0xc0
     a20:	add	x20, sp, #0x110
     a24:	add	x0, x19, #0x10
     a28:	add	x1, x20, #0x10
     a2c:	str	x0, [sp, #192]
     a30:	str	x1, [sp, #272]
     a34:	mov	x0, #0x800000000           	// #34359738368
     a38:	str	x0, [sp, #200]
     a3c:	str	x0, [sp, #280]
     a40:	ldur	x0, [x22, #-24]
     a44:	stp	x25, x26, [sp, #64]
     a48:	stp	x27, x28, [sp, #80]
     a4c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     a50:	ldr	x27, [x22]
     a54:	mov	x21, x0
     a58:	str	x0, [sp, #128]
     a5c:	mov	x0, x27
     a60:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     a64:	str	w0, [sp, #96]
     a68:	mov	x0, x21
     a6c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     a70:	ands	w0, w0, #0xff
     a74:	str	w0, [sp, #100]
     a78:	b.ne	d80 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x380>  // b.any
     a7c:	ldur	x0, [x22, #-24]
     a80:	add	x24, x23, #0x50
     a84:	add	x25, sp, #0xa0
     a88:	add	x28, sp, #0x98
     a8c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     a90:	ldr	x0, [x0]
     a94:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     a98:	mov	w22, w0
     a9c:	add	x1, sp, #0x80
     aa0:	mov	x0, x19
     aa4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     aa8:	ldr	x0, [sp, #128]
     aac:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     ab0:	str	x0, [sp, #160]
     ab4:	mov	x1, x25
     ab8:	mov	x0, x24
     abc:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     ac0:	ldr	w1, [sp, #96]
     ac4:	str	w1, [x0]
     ac8:	add	x0, sp, #0x88
     acc:	str	x0, [sp, #104]
     ad0:	add	x0, sp, #0x90
     ad4:	str	x0, [sp, #112]
     ad8:	ldr	w0, [sp, #200]
     adc:	cbz	w0, c68 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x268>
     ae0:	mov	x0, x19
     ae4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     ae8:	ldr	x21, [x0]
     aec:	mov	x0, x21
     af0:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     af4:	tst	w0, #0xff
     af8:	b.eq	b08 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x108>  // b.none
     afc:	mov	x0, x19
     b00:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     b04:	b	ad8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd8>
     b08:	mov	x0, x21
     b0c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     b10:	ldr	x1, [sp, #104]
     b14:	str	x0, [sp, #136]
     b18:	mov	x0, x24
     b1c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     b20:	mov	x21, x0
     b24:	add	x0, x25, #0x10
     b28:	str	x0, [sp, #160]
     b2c:	mov	x0, #0x200000000           	// #8589934592
     b30:	str	x0, [sp, #168]
     b34:	ldr	x0, [sp, #136]
     b38:	mov	x1, x25
     b3c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     b40:	ldr	w0, [sp, #280]
     b44:	cbz	w0, bd0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1d0>
     b48:	mov	x0, x20
     b4c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     b50:	ldr	x1, [x0]
     b54:	ldr	x0, [sp, #136]
     b58:	cmp	x1, x0
     b5c:	b.ne	bd0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1d0>  // b.any
     b60:	mov	x0, x19
     b64:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     b68:	ldr	w1, [sp, #280]
     b6c:	mov	x0, x20
     b70:	sub	x1, x1, #0x1
     b74:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     b78:	ldr	x2, [sp, #160]
     b7c:	ldr	w26, [sp, #168]
     b80:	add	x0, x2, x26, lsl #3
     b84:	mov	x26, x2
     b88:	str	x0, [sp, #120]
     b8c:	ldr	x0, [sp, #120]
     b90:	cmp	x0, x26
     b94:	b.eq	c5c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x25c>  // b.none
     b98:	ldr	x0, [x26]
     b9c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     ba0:	str	x0, [sp, #152]
     ba4:	cbz	x0, bc8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1c8>
     ba8:	mov	x1, x28
     bac:	mov	x0, x24
     bb0:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     bb4:	ldr	w0, [x0, #4]
     bb8:	ldr	w1, [x21, #4]
     bbc:	cmp	w0, w1
     bc0:	csel	w0, w0, w1, cs  // cs = hs, nlast
     bc4:	str	w0, [x21, #4]
     bc8:	add	x26, x26, #0x8
     bcc:	b	b8c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x18c>
     bd0:	ldr	x1, [sp, #104]
     bd4:	mov	x0, x20
     bd8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     bdc:	ldp	w26, w0, [x21]
     be0:	cmp	w0, w26
     be4:	csel	w0, w0, w26, cs  // cs = hs, nlast
     be8:	str	w0, [x21, #4]
     bec:	ldr	x21, [sp, #160]
     bf0:	ldr	w0, [sp, #168]
     bf4:	add	x0, x21, x0, lsl #3
     bf8:	str	x0, [sp, #120]
     bfc:	ldr	x0, [sp, #120]
     c00:	cmp	x21, x0
     c04:	b.eq	c5c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x25c>  // b.none
     c08:	ldr	x0, [x21]
     c0c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c10:	str	x0, [sp, #144]
     c14:	cbz	x0, c2c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x22c>
     c18:	ldr	x1, [sp, #112]
     c1c:	mov	x0, x24
     c20:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c24:	cmp	w26, w0
     c28:	b.hi	c34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x234>  // b.pmore
     c2c:	add	x21, x21, #0x8
     c30:	b	bfc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x1fc>
     c34:	ldr	x1, [sp, #112]
     c38:	mov	x0, x24
     c3c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c40:	str	w26, [x0]
     c44:	ldr	x0, [sp, #144]
     c48:	mov	x1, x28
     c4c:	str	x0, [sp, #152]
     c50:	mov	x0, x19
     c54:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c58:	b	c2c <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x22c>
     c5c:	mov	x0, x25
     c60:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c64:	b	ad8 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0xd8>
     c68:	ldr	x0, [sp, #128]
     c6c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c70:	str	x0, [sp, #160]
     c74:	mov	x1, x25
     c78:	mov	x0, x24
     c7c:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c80:	lsr	x2, x0, #32
     c84:	ldr	w0, [sp, #96]
     c88:	mov	w21, w2
     c8c:	cmp	w0, w2
     c90:	b.ls	cb4 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2b4>  // b.plast
     c94:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c98:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     c9c:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     ca0:	add	x3, x3, #0x0
     ca4:	add	x1, x1, #0x0
     ca8:	add	x0, x0, #0x0
     cac:	mov	w2, #0xca                  	// #202
     cb0:	bl	0 <__assert_fail>
     cb4:	ldrb	w3, [x27, #8]
     cb8:	b.cs	d18 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x318>  // b.hs, b.nlast
     cbc:	cmp	w3, #0x10
     cc0:	b.eq	d88 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x388>  // b.none
     cc4:	ldr	x1, [x27]
     cc8:	ldr	x0, [x23, #8]
     ccc:	bl	0 <_ZNK4llvm10DataLayout23getSmallestLegalIntTypeERNS_11LLVMContextEj>
     cd0:	cbz	x0, d88 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x388>
     cd4:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     cd8:	mov	w21, w0
     cdc:	ldr	x0, [sp, #272]
     ce0:	add	x20, x20, #0x10
     ce4:	cmp	x0, x20
     ce8:	b.eq	cf0 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2f0>  // b.none
     cec:	bl	0 <free>
     cf0:	mov	x0, x19
     cf4:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     cf8:	mov	w0, w21
     cfc:	ldp	x19, x20, [sp, #16]
     d00:	ldp	x21, x22, [sp, #32]
     d04:	ldp	x23, x24, [sp, #48]
     d08:	ldp	x25, x26, [sp, #64]
     d0c:	ldp	x27, x28, [sp, #80]
     d10:	ldp	x29, x30, [sp], #352
     d14:	ret
     d18:	cmp	w2, #0x1
     d1c:	b.eq	cdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2dc>  // b.none
     d20:	ldr	x1, [x23, #8]
     d24:	ldr	x0, [x1, #32]
     d28:	ldr	w1, [x1, #40]
     d2c:	mov	x2, x0
     d30:	add	x1, x0, x1
     d34:	cmp	x1, x2
     d38:	b.eq	d50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x350>  // b.none
     d3c:	ldrb	w4, [x2], #1
     d40:	cmp	w22, w4
     d44:	b.ne	d34 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x334>  // b.any
     d48:	mov	w2, #0x1                   	// #1
     d4c:	str	w2, [sp, #100]
     d50:	cmp	x0, x1
     d54:	b.eq	d68 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x368>  // b.none
     d58:	ldrb	w2, [x0], #1
     d5c:	cmp	w2, w21
     d60:	b.ne	d50 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x350>  // b.any
     d64:	b	cdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2dc>
     d68:	cmp	w3, #0x10
     d6c:	b.eq	cdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2dc>  // b.none
     d70:	ldr	w0, [sp, #100]
     d74:	cmp	w0, #0x0
     d78:	csel	w21, w21, w22, eq  // eq = none
     d7c:	b	cdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2dc>
     d80:	ldr	w21, [sp, #96]
     d84:	b	cdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2dc>
     d88:	mov	w21, w22
     d8c:	b	cdc <_ZN4llvm16TruncInstCombine14getMinBitWidthEv+0x2dc>

0000000000000d90 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>:
     d90:	stp	x29, x30, [sp, #-96]!
     d94:	mov	x29, sp
     d98:	stp	x19, x20, [sp, #16]
     d9c:	mov	x19, x0
     da0:	stp	x21, x22, [sp, #32]
     da4:	stp	x23, x24, [sp, #48]
     da8:	stp	x25, x26, [sp, #64]
     dac:	str	x27, [sp, #80]
     db0:	bl	798 <_ZN4llvm16TruncInstCombine23buildTruncExpressionDagEv>
     db4:	tst	w0, #0xff
     db8:	b.eq	edc <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x14c>  // b.none
     dbc:	ldp	x25, x26, [x19, #112]
     dc0:	add	x27, x19, #0x50
     dc4:	mov	w22, #0x0                   	// #0
     dc8:	cmp	x26, x25
     dcc:	b.eq	e7c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xec>  // b.none
     dd0:	ldr	x20, [x25]
     dd4:	mov	x0, x20
     dd8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     ddc:	ldr	x0, [x20, #8]
     de0:	cbz	x0, dec <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x5c>
     de4:	ldr	x0, [x0, #8]
     de8:	cbz	x0, e74 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xe4>
     dec:	ldrb	w21, [x20, #16]
     df0:	mov	x0, x20
     df4:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
     df8:	sub	w21, w21, #0x3f
     dfc:	ldr	x24, [x20, #8]
     e00:	and	w21, w21, #0xff
     e04:	cbz	x24, e74 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xe4>
     e08:	mov	x0, x24
     e0c:	bl	0 <_ZNK4llvm3Use7getUserEv>
     e10:	mov	x23, x0
     e14:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     e18:	tst	w0, #0xff
     e1c:	b.eq	e6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xdc>  // b.none
     e20:	cbz	x23, e6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xdc>
     e24:	ldr	x0, [x19, #72]
     e28:	cmp	x0, x23
     e2c:	b.eq	e6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xdc>  // b.none
     e30:	mov	x1, x23
     e34:	mov	x0, x27
     e38:	bl	ac <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5countERKS2_.isra.0>
     e3c:	cbnz	x0, e6c <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0xdc>
     e40:	cmp	w21, #0x1
     e44:	b.hi	edc <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x14c>  // b.pmore
     e48:	mov	w1, #0x0                   	// #0
     e4c:	mov	x0, x20
     e50:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     e54:	ldr	x0, [x0]
     e58:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     e5c:	cmp	w22, #0x0
     e60:	ccmp	w22, w0, #0x4, ne  // ne = any
     e64:	b.ne	edc <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x14c>  // b.any
     e68:	mov	w22, w0
     e6c:	ldr	x24, [x24, #8]
     e70:	b	e04 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x74>
     e74:	add	x25, x25, #0x18
     e78:	b	dc8 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x38>
     e7c:	ldr	x0, [x19, #72]
     e80:	ldur	x0, [x0, #-24]
     e84:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     e88:	ldr	x0, [x0]
     e8c:	bl	0 <_ZNK4llvm4Type19getScalarSizeInBitsEv>
     e90:	mov	w21, w0
     e94:	mov	x0, x19
     e98:	bl	a00 <_ZN4llvm16TruncInstCombine14getMinBitWidthEv>
     e9c:	mov	w20, w0
     ea0:	cmp	w21, w0
     ea4:	b.ls	edc <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x14c>  // b.plast
     ea8:	cmp	w22, #0x0
     eac:	ccmp	w22, w0, #0x4, ne  // ne = any
     eb0:	b.ne	edc <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv+0x14c>  // b.any
     eb4:	ldr	x0, [x19, #72]
     eb8:	bl	0 <_ZNK4llvm5Value10getContextEv>
     ebc:	mov	w1, w20
     ec0:	ldp	x19, x20, [sp, #16]
     ec4:	ldp	x21, x22, [sp, #32]
     ec8:	ldp	x23, x24, [sp, #48]
     ecc:	ldp	x25, x26, [sp, #64]
     ed0:	ldr	x27, [sp, #80]
     ed4:	ldp	x29, x30, [sp], #96
     ed8:	b	0 <_ZN4llvm11IntegerType3getERNS_11LLVMContextEj>
     edc:	mov	x0, #0x0                   	// #0
     ee0:	ldp	x19, x20, [sp, #16]
     ee4:	ldp	x21, x22, [sp, #32]
     ee8:	ldp	x23, x24, [sp, #48]
     eec:	ldp	x25, x26, [sp, #64]
     ef0:	ldr	x27, [sp, #80]
     ef4:	ldp	x29, x30, [sp], #96
     ef8:	ret

0000000000000efc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE>:
     efc:	stp	x29, x30, [sp, #-96]!
     f00:	mov	x29, sp
     f04:	stp	x19, x20, [sp, #16]
     f08:	mov	x19, x0
     f0c:	ldr	x20, [x1, #80]
     f10:	stp	x21, x22, [sp, #32]
     f14:	add	x22, x1, #0x48
     f18:	stp	x23, x24, [sp, #48]
     f1c:	add	x24, sp, #0x58
     f20:	stp	x25, x26, [sp, #64]
     f24:	add	x25, x0, #0x18
     f28:	cmp	x22, x20
     f2c:	b.eq	fcc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xd0>  // b.none
     f30:	ldr	x0, [x20]
     f34:	tst	w0, #0x4
     f38:	b.eq	f5c <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x60>  // b.none
     f3c:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     f40:	add	x3, x3, #0x0
     f44:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     f48:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     f4c:	add	x1, x1, #0x0
     f50:	add	x0, x0, #0x0
     f54:	mov	w2, #0x8b                  	// #139
     f58:	bl	0 <__assert_fail>
     f5c:	ldr	x0, [x19, #16]
     f60:	sub	x1, x20, #0x18
     f64:	bl	0 <_ZNK4llvm17DominatorTreeBaseINS_10BasicBlockELb0EE20isReachableFromEntryEPKS1_>
     f68:	tst	w0, #0xff
     f6c:	b.eq	fc4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xc8>  // b.none
     f70:	ldr	x21, [x20, #24]
     f74:	add	x26, x20, #0x10
     f78:	cmp	x21, x26
     f7c:	b.eq	fc4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xc8>  // b.none
     f80:	ldr	x0, [x21]
     f84:	tst	w0, #0x4
     f88:	b.eq	f98 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x9c>  // b.none
     f8c:	adrp	x3, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     f90:	add	x3, x3, #0x0
     f94:	b	f44 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x48>
     f98:	sub	x23, x21, #0x18
     f9c:	mov	x0, x23
     fa0:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     fa4:	tst	w0, #0xff
     fa8:	b.eq	fbc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xc0>  // b.none
     fac:	mov	x1, x24
     fb0:	mov	x0, x25
     fb4:	str	x23, [sp, #88]
     fb8:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
     fbc:	ldr	x21, [x21, #8]
     fc0:	b	f78 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x7c>
     fc4:	ldr	x20, [x20, #8]
     fc8:	b	f28 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x2c>
     fcc:	add	x22, x19, #0x18
     fd0:	mov	w20, #0x0                   	// #0
     fd4:	mov	x21, #0xfffffffffffffff8    	// #-8
     fd8:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
     fdc:	ldr	w1, [x19, #32]
     fe0:	cbz	w1, 10c4 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1c8>
     fe4:	ldr	x2, [x19, #24]
     fe8:	add	x0, x21, w1, uxtw #3
     fec:	mov	w1, w1
     ff0:	sub	x1, x1, #0x1
     ff4:	ldr	x24, [x2, x0]
     ff8:	mov	x0, x22
     ffc:	bl	0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
    1000:	str	x24, [x19, #72]
    1004:	mov	x0, x19
    1008:	bl	d90 <_ZN4llvm16TruncInstCombine20getBestTruncatedTypeEv>
    100c:	mov	x24, x0
    1010:	cbz	x0, fdc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xe0>
    1014:	ldr	x0, [x23]
    1018:	ldrb	w0, [x0]
    101c:	cbz	w0, 1084 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x188>
    1020:	adrp	x0, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
    1024:	add	x0, x0, #0x0
    1028:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    102c:	tst	w0, #0xff
    1030:	b.eq	1084 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x188>  // b.none
    1034:	bl	0 <_ZN4llvm4dbgsEv>
    1038:	mov	x20, x0
    103c:	ldp	x1, x3, [x0, #16]
    1040:	mov	x2, #0x44                  	// #68
    1044:	sub	x1, x1, x3
    1048:	cmp	x1, #0x43
    104c:	adrp	x1, 0 <_ZL19getRelevantOperandsPN4llvm11InstructionERNS_15SmallVectorImplIPNS_5ValueEEE.constprop.0>
    1050:	add	x1, x1, #0x0
    1054:	b.hi	1098 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x19c>  // b.pmore
    1058:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    105c:	mov	x20, x0
    1060:	ldr	x1, [x19, #72]
    1064:	mov	x0, x20
    1068:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    106c:	mov	x1, x0
    1070:	ldp	x3, x2, [x0, #16]
    1074:	cmp	x2, x3
    1078:	b.cc	10b0 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x1b4>  // b.lo, b.ul, b.last
    107c:	mov	w1, #0xa                   	// #10
    1080:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1084:	mov	x1, x24
    1088:	mov	x0, x19
    108c:	mov	w20, #0x1                   	// #1
    1090:	bl	224 <_ZN4llvm16TruncInstCombine19ReduceExpressionDagEPNS_4TypeE>
    1094:	b	fdc <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0xe0>
    1098:	mov	x0, x3
    109c:	bl	0 <memcpy>
    10a0:	ldr	x0, [x20, #24]
    10a4:	add	x0, x0, #0x44
    10a8:	str	x0, [x20, #24]
    10ac:	b	1060 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x164>
    10b0:	add	x0, x2, #0x1
    10b4:	str	x0, [x1, #24]
    10b8:	mov	w0, #0xa                   	// #10
    10bc:	strb	w0, [x2]
    10c0:	b	1084 <_ZN4llvm16TruncInstCombine3runERNS_8FunctionE+0x188>
    10c4:	mov	w0, w20
    10c8:	ldp	x19, x20, [sp, #16]
    10cc:	ldp	x21, x22, [sp, #32]
    10d0:	ldp	x23, x24, [sp, #48]
    10d4:	ldp	x25, x26, [sp, #64]
    10d8:	ldp	x29, x30, [sp], #96
    10dc:	ret

Disassembly of section .text._ZN4llvm12NextPowerOf2Em:

0000000000000000 <_ZN4llvm12NextPowerOf2Em>:
   0:	orr	x0, x0, x0, lsr #1
   4:	orr	x0, x0, x0, lsr #2
   8:	orr	x0, x0, x0, lsr #4
   c:	orr	x0, x0, x0, lsr #8
  10:	orr	x0, x0, x0, lsr #16
  14:	orr	x0, x0, x0, lsr #32
  18:	add	x0, x0, #0x1
  1c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	ldr	w2, [x0, #12]
   4:	cmp	x1, x2
   8:	b.ls	34 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x34>  // b.plast
   c:	stp	x29, x30, [sp, #-16]!
  10:	adrp	x3, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  14:	adrp	x1, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x29, sp
  1c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  20:	add	x3, x3, #0x0
  24:	add	x1, x1, #0x0
  28:	add	x0, x0, #0x0
  2c:	mov	w2, #0x43                  	// #67
  30:	bl	0 <__assert_fail>
  34:	str	w1, [x0, #8]
  38:	ret

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w2, [x0, #16]
   4:	mov	x1, x0
   8:	ldrb	w0, [x0, #17]
   c:	cmp	w2, #0x1
  10:	b.hi	20 <_ZNK4llvm5Twine7isValidEv+0x20>  // b.pmore
  14:	cmp	w0, #0x1
  18:	cset	w0, eq  // eq = none
  1c:	ret
  20:	cbz	w0, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  24:	cmp	w0, #0x1
  28:	b.eq	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.none
  2c:	cmp	w2, #0x2
  30:	b.ne	4c <_ZNK4llvm5Twine7isValidEv+0x4c>  // b.any
  34:	ldr	x2, [x1]
  38:	ldrb	w3, [x2, #16]
  3c:	cbz	w3, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  40:	ldrb	w2, [x2, #17]
  44:	cmp	w2, #0x1
  48:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  4c:	cmp	w0, #0x2
  50:	b.ne	70 <_ZNK4llvm5Twine7isValidEv+0x70>  // b.any
  54:	ldr	x0, [x1, #8]
  58:	ldrb	w1, [x0, #16]
  5c:	cbz	w1, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  60:	ldrb	w0, [x0, #17]
  64:	cmp	w0, #0x1
  68:	cset	w0, ne  // ne = any
  6c:	b	1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  70:	mov	w0, #0x1                   	// #1
  74:	b	1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  78:	mov	w0, #0x0                   	// #0
  7c:	b	1c <_ZNK4llvm5Twine7isValidEv+0x1c>
  80:	cmp	w2, #0x2
  84:	b.eq	34 <_ZNK4llvm5Twine7isValidEv+0x34>  // b.none
  88:	b	1c <_ZNK4llvm5Twine7isValidEv+0x1c>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC1EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	w2, #0x101                 	// #257
   8:	mov	x29, sp
   c:	strh	w2, [x0, #16]
  10:	ldrb	w2, [x1]
  14:	stp	xzr, xzr, [x0]
  18:	cbz	w2, 28 <_ZN4llvm5TwineC1EPKc+0x28>
  1c:	str	x1, [x0]
  20:	mov	w1, #0x3                   	// #3
  24:	strb	w1, [x0, #16]
  28:	bl	0 <_ZN4llvm5TwineC1EPKc>
  2c:	tst	w0, #0xff
  30:	b.ne	54 <_ZN4llvm5TwineC1EPKc+0x54>  // b.any
  34:	adrp	x3, 0 <_ZN4llvm5TwineC1EPKc>
  38:	adrp	x1, 0 <_ZN4llvm5TwineC1EPKc>
  3c:	adrp	x0, 0 <_ZN4llvm5TwineC1EPKc>
  40:	add	x3, x3, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x0, x0, #0x0
  4c:	mov	w2, #0x112                 	// #274
  50:	bl	0 <__assert_fail>
  54:	ldp	x29, x30, [sp], #16
  58:	ret

Disassembly of section .text._ZNK4llvm4User10getOperandEj:

0000000000000000 <_ZNK4llvm4User10getOperandEj>:
   0:	ldr	w2, [x0, #20]
   4:	ubfx	x2, x2, #0, #28
   8:	cmp	w2, w1
   c:	b.hi	38 <_ZNK4llvm4User10getOperandEj+0x38>  // b.pmore
  10:	stp	x29, x30, [sp, #-16]!
  14:	adrp	x3, 0 <_ZNK4llvm4User10getOperandEj>
  18:	adrp	x1, 0 <_ZNK4llvm4User10getOperandEj>
  1c:	mov	x29, sp
  20:	adrp	x0, 0 <_ZNK4llvm4User10getOperandEj>
  24:	add	x3, x3, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x0, x0, #0x0
  30:	mov	w2, #0xaa                  	// #170
  34:	bl	0 <__assert_fail>
  38:	ldrb	w4, [x0, #23]
  3c:	mov	w3, #0x18                  	// #24
  40:	tbz	w4, #6, 54 <_ZNK4llvm4User10getOperandEj+0x54>
  44:	ldur	x0, [x0, #-8]
  48:	umull	x1, w1, w3
  4c:	ldr	x0, [x0, x1]
  50:	ret
  54:	umsubl	x0, w2, w3, x0
  58:	b	48 <_ZNK4llvm4User10getOperandEj+0x48>

Disassembly of section .text._ZN4llvm16MetadataTracking5trackERPNS_8MetadataE:

0000000000000000 <_ZN4llvm16MetadataTracking5trackERPNS_8MetadataE>:
   0:	ldr	x1, [x0]
   4:	mov	x2, #0x2                   	// #2
   8:	b	0 <_ZN4llvm16MetadataTracking5trackEPvRNS_8MetadataENS_12PointerUnionIJPNS_15MetadataAsValueEPS2_EEE>

Disassembly of section .text._ZN4llvm13TrackingMDRef7untrackEv:

0000000000000000 <_ZN4llvm13TrackingMDRef7untrackEv>:
   0:	ldr	x1, [x0]
   4:	cbz	x1, c <_ZN4llvm13TrackingMDRef7untrackEv+0xc>
   8:	b	0 <_ZN4llvm16MetadataTracking7untrackEPvRNS_8MetadataE>
   c:	ret

Disassembly of section .text._ZN4llvm13TrackingMDRef7retrackERS0_:

0000000000000000 <_ZN4llvm13TrackingMDRef7retrackERS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x2, x0
   8:	mov	x29, sp
   c:	ldr	x0, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x1
  18:	ldr	x1, [x2]
  1c:	cmp	x1, x0
  20:	b.eq	44 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x44>  // b.none
  24:	adrp	x3, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  28:	adrp	x1, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  2c:	adrp	x0, 0 <_ZN4llvm13TrackingMDRef7retrackERS0_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x5e                  	// #94
  40:	bl	0 <__assert_fail>
  44:	cbz	x1, 54 <_ZN4llvm13TrackingMDRef7retrackERS0_+0x54>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm16MetadataTracking7retrackEPvRNS_8MetadataES1_>
  50:	str	xzr, [x19]
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE:

0000000000000000 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, 64 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE+0x64>
   8:	stp	x29, x30, [sp, #-64]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x1
  18:	add	x20, sp, #0x38
  1c:	str	x21, [sp, #32]
  20:	add	x21, x19, #0x30
  24:	str	x0, [sp, #56]
  28:	mov	x0, x20
  2c:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  30:	mov	x0, x21
  34:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  38:	ldr	x0, [sp, #56]
  3c:	mov	x1, x20
  40:	str	x0, [x19, #48]
  44:	mov	x0, x21
  48:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  4c:	mov	x0, x20
  50:	bl	0 <_ZNK4llvm13IRBuilderBase20SetInstDebugLocationEPNS_11InstructionE>
  54:	ldp	x19, x20, [sp, #16]
  58:	ldr	x21, [sp, #32]
  5c:	ldp	x29, x30, [sp], #64
  60:	ret
  64:	ret

Disassembly of section .text._ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_:

0000000000000000 <_ZN4llvm12cast_or_nullINS_5ValueES1_EENS_10cast_rettyIT_PT0_E8ret_typeES5_>:
   0:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w2, w1, [x0, #8]
  18:	cmp	w2, w1
  1c:	b.cc	30 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_+0x30>  // b.lo, b.ul, b.last
  20:	add	x1, x0, #0x10
  24:	mov	x3, #0x8                   	// #8
  28:	mov	x2, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  30:	ldr	w1, [x19, #8]
  34:	ldr	x0, [x19]
  38:	ldr	x2, [x20]
  3c:	str	x2, [x0, x1, lsl #3]
  40:	mov	x0, x19
  44:	ldr	w1, [x19, #8]
  48:	ldp	x19, x20, [sp, #16]
  4c:	add	x1, x1, #0x1
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE9push_backERKS2_>

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonIPNS_5ValueEvE4backEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonIPNS_5ValueEvE4backEv>:
   0:	ldr	w1, [x0, #8]
   4:	cbnz	w1, 30 <_ZN4llvm25SmallVectorTemplateCommonIPNS_5ValueEvE4backEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonIPNS_5ValueEvE4backEv>
  10:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonIPNS_5ValueEvE4backEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonIPNS_5ValueEvE4backEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xa7                  	// #167
  2c:	bl	0 <__assert_fail>
  30:	ldr	x0, [x0]
  34:	mov	x2, #0xfffffffffffffff8    	// #-8
  38:	add	x1, x2, w1, uxtw #3
  3c:	add	x0, x0, x1
  40:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE8pop_backEv:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE8pop_backEv>:
   0:	ldr	w1, [x0, #8]
   4:	sub	x1, x1, #0x1
   8:	b	0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_5ValueELb1EE8pop_backEv>

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonIPNS_11InstructionEvE4backEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonIPNS_11InstructionEvE4backEv>:
   0:	ldr	w1, [x0, #8]
   4:	cbnz	w1, 30 <_ZN4llvm25SmallVectorTemplateCommonIPNS_11InstructionEvE4backEv+0x30>
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm25SmallVectorTemplateCommonIPNS_11InstructionEvE4backEv>
  10:	adrp	x1, 0 <_ZN4llvm25SmallVectorTemplateCommonIPNS_11InstructionEvE4backEv>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonIPNS_11InstructionEvE4backEv>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xa7                  	// #167
  2c:	bl	0 <__assert_fail>
  30:	ldr	x0, [x0]
  34:	mov	x2, #0xfffffffffffffff8    	// #-8
  38:	add	x1, x2, w1, uxtw #3
  3c:	add	x0, x0, x1
  40:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w2, w1, [x0, #8]
  18:	cmp	w2, w1
  1c:	b.cc	30 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_+0x30>  // b.lo, b.ul, b.last
  20:	add	x1, x0, #0x10
  24:	mov	x3, #0x8                   	// #8
  28:	mov	x2, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  30:	ldr	w1, [x19, #8]
  34:	ldr	x0, [x19]
  38:	ldr	x2, [x20]
  3c:	str	x2, [x0, x1, lsl #3]
  40:	mov	x0, x19
  44:	ldr	w1, [x19, #8]
  48:	ldp	x19, x20, [sp, #16]
  4c:	add	x1, x1, #0x1
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_11InstructionELb1EE9push_backERKS2_>

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC2EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	mov	x0, x1
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x22, x3
  20:	mov	x21, x4
  24:	str	x23, [sp, #48]
  28:	mov	x23, x2
  2c:	bl	0 <_ZNK4llvm5Value10getContextEv>
  30:	str	xzr, [x19, #16]
  34:	add	x1, x20, #0x18
  38:	stp	xzr, xzr, [x19]
  3c:	stp	x1, x0, [x19, #16]
  40:	mov	w0, #0x200                 	// #512
  44:	strh	w0, [x19, #44]
  48:	str	x23, [x19, #32]
  4c:	ldr	x0, [x20, #40]
  50:	str	x0, [x19, #8]
  54:	str	wzr, [x19, #40]
  58:	strb	wzr, [x19, #46]
  5c:	add	x0, x0, #0x28
  60:	stp	x22, x21, [x19, #48]
  64:	cmp	x1, x0
  68:	b.ne	8c <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE+0x8c>  // b.any
  6c:	adrp	x3, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  70:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  74:	adrp	x0, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  78:	add	x3, x3, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x0, x0, #0x0
  84:	mov	w2, #0x8e                  	// #142
  88:	bl	0 <__assert_fail>
  8c:	ldr	x0, [x20, #48]
  90:	str	x0, [sp, #72]
  94:	add	x20, sp, #0x48
  98:	cbz	x0, a4 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE+0xa4>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  ac:	ldr	x0, [sp, #72]
  b0:	mov	x1, x20
  b4:	str	x0, [x19]
  b8:	mov	x0, x19
  bc:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  c0:	mov	x0, x20
  c4:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEEC1EPNS_11InstructionEPNS_6MDNodeENS_8ArrayRefINS_17OperandBundleDefTIPNS_5ValueEEEEE>
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldr	x23, [sp, #48]
  d4:	ldp	x29, x30, [sp], #80
  d8:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPNS_9TruncInstELb1EE9push_backERKS2_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPNS_9TruncInstELb1EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	ldp	w2, w1, [x0, #8]
  18:	cmp	w2, w1
  1c:	b.cc	30 <_ZN4llvm23SmallVectorTemplateBaseIPNS_9TruncInstELb1EE9push_backERKS2_+0x30>  // b.lo, b.ul, b.last
  20:	add	x1, x0, #0x10
  24:	mov	x3, #0x8                   	// #8
  28:	mov	x2, #0x0                   	// #0
  2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  30:	ldr	w1, [x19, #8]
  34:	ldr	x0, [x19]
  38:	ldr	x2, [x20]
  3c:	str	x2, [x0, x1, lsl #3]
  40:	mov	x0, x19
  44:	ldr	w1, [x19, #8]
  48:	ldp	x19, x20, [sp, #16]
  4c:	add	x1, x1, #0x1
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm23SmallVectorTemplateBaseIPNS_9TruncInstELb1EE9push_backERKS2_>

Disassembly of section .text._ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_:

0000000000000000 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>:
   0:	tst	x1, #0x7
   4:	b.eq	30 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_+0x30>  // b.none
   8:	stp	x29, x30, [sp, #-16]!
   c:	adrp	x3, 0 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>
  10:	adrp	x1, 0 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>
  14:	mov	x29, sp
  18:	adrp	x0, 0 <_ZN4llvm18PointerIntPairInfoIPNS_15ilist_node_baseILb1EEELj1ENS_21PointerLikeTypeTraitsIS3_EEE13updatePointerElS3_>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0xb2                  	// #178
  2c:	bl	0 <__assert_fail>
  30:	and	x0, x0, #0x7
  34:	orr	x0, x1, x0
  38:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_5ValueEED2Ev:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_5ValueEED1Ev>:
   0:	mov	x1, x0
   4:	ldr	x0, [x1], #16
   8:	cmp	x0, x1
   c:	b.eq	14 <_ZN4llvm15SmallVectorImplIPNS_5ValueEED1Ev+0x14>  // b.none
  10:	b	0 <free>
  14:	ret

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEptEv:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEptEv>:
   0:	ldr	x1, [x0]
   4:	ldr	x2, [x1]
   8:	ldr	x1, [x0, #8]
   c:	cmp	x2, x1
  10:	b.eq	3c <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEptEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEptEv>
  1c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEptEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb0EEptEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x4b9                 	// #1209
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #16]
  40:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E3endEv:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E3endEv>:
   0:	ldr	x2, [x0, #8]
   4:	str	x0, [x8]
   8:	ldr	w1, [x0, #24]
   c:	ldr	x0, [x0]
  10:	str	x0, [x8, #8]
  14:	add	x1, x2, x1, lsl #4
  18:	stp	x1, x1, [x8, #16]
  1c:	ret

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w4, [x0, #24]
   c:	cbz	w4, a4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0xa4>
  10:	cmn	x1, #0x8
  14:	b.eq	20 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x20>  // b.none
  18:	cmn	x1, #0x10
  1c:	b.ne	40 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x40>  // b.any
  20:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>
  24:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>
  28:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x250                 	// #592
  3c:	bl	0 <__assert_fail>
  40:	lsr	w2, w1, #9
  44:	sub	w6, w4, #0x1
  48:	eor	w2, w2, w1, lsr #4
  4c:	mov	w5, #0x1                   	// #1
  50:	ldr	x3, [x0, #8]
  54:	and	w2, w2, w6
  58:	ubfiz	x7, x2, #4, #32
  5c:	add	x9, x3, x7
  60:	ldr	x7, [x3, x7]
  64:	cmp	x7, x1
  68:	b.eq	84 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x84>  // b.none
  6c:	cmn	x7, #0x8
  70:	b.eq	a4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0xa4>  // b.none
  74:	add	w2, w2, w5
  78:	add	w5, w5, #0x1
  7c:	and	w2, w6, w2
  80:	b	58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x58>
  84:	ubfiz	x4, x4, #4, #32
  88:	str	x0, [x8]
  8c:	ldr	x0, [x0]
  90:	add	x3, x3, x4
  94:	str	x0, [x8, #8]
  98:	stp	x9, x3, [x8, #16]
  9c:	ldp	x29, x30, [sp], #16
  a0:	ret
  a4:	bl	0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_>
  a8:	b	9c <_ZNK4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E4findEPKS2_+0x9c>

Disassembly of section .text._ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_:

0000000000000000 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x3, [x0, #16]
   c:	cbz	x3, 40 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_+0x40>
  10:	ldp	x2, x4, [x0]
  14:	ldr	x2, [x2]
  18:	cmp	x4, x2
  1c:	b.eq	40 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_+0x40>  // b.none
  20:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  24:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  28:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  2c:	add	x3, x3, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x0, x0, #0x0
  38:	mov	w2, #0x4c0                 	// #1216
  3c:	bl	0 <__assert_fail>
  40:	ldr	x2, [x1, #16]
  44:	ldr	x4, [x1]
  48:	cbz	x2, 7c <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_+0x7c>
  4c:	ldr	x5, [x4]
  50:	ldr	x1, [x1, #8]
  54:	cmp	x5, x1
  58:	b.eq	7c <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_+0x7c>  // b.none
  5c:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  60:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  64:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  68:	add	x3, x3, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x0, x0, #0x0
  74:	mov	w2, #0x4c1                 	// #1217
  78:	b	3c <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_+0x3c>
  7c:	ldr	x0, [x0]
  80:	cmp	x0, x4
  84:	b.eq	a8 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_+0xa8>  // b.none
  88:	adrp	x3, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  8c:	adrp	x1, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  90:	adrp	x0, 0 <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_>
  94:	add	x3, x3, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x0, x0, #0x0
  a0:	mov	w2, #0x4c2                 	// #1218
  a4:	b	3c <_ZNK4llvm16DenseMapIteratorIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEELb1EEeqERKS8_+0x3c>
  a8:	cmp	x3, x2
  ac:	cset	w0, eq  // eq = none
  b0:	ldp	x29, x30, [sp], #16
  b4:	ret

Disassembly of section .text._ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_:

0000000000000000 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x1, [x1]
   c:	stp	x19, x20, [sp, #16]
  10:	add	x20, sp, #0x30
  14:	mov	x19, x0
  18:	mov	x8, x20
  1c:	str	x21, [sp, #32]
  20:	bl	0 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_>
  24:	add	x21, sp, #0x50
  28:	mov	x0, x19
  2c:	mov	x8, x21
  30:	bl	0 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_>
  34:	mov	x1, x21
  38:	mov	x0, x20
  3c:	bl	0 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_>
  40:	tst	w0, #0xff
  44:	b.eq	60 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_+0x60>  // b.none
  48:	mov	x0, #0x0                   	// #0
  4c:	mov	x1, #0x0                   	// #0
  50:	ldp	x19, x20, [sp, #16]
  54:	ldr	x21, [sp, #32]
  58:	ldp	x29, x30, [sp], #112
  5c:	ret
  60:	ldr	x0, [sp, #48]
  64:	ldr	x1, [x0]
  68:	ldr	x0, [sp, #56]
  6c:	cmp	x1, x0
  70:	b.eq	94 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_+0x94>  // b.none
  74:	adrp	x3, 0 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_>
  78:	adrp	x1, 0 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_>
  7c:	adrp	x0, 0 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x4b9                 	// #1209
  90:	bl	0 <__assert_fail>
  94:	ldr	x0, [sp, #64]
  98:	mov	w2, #0x18                  	// #24
  9c:	ldr	w1, [x0, #8]
  a0:	ldr	x0, [x19, #32]
  a4:	umaddl	x1, w1, w2, x0
  a8:	ldp	x0, x1, [x1, #8]
  ac:	b	50 <_ZNK4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE6lookupERKS2_+0x50>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>:
   0:	ldr	w1, [x0, #24]
   4:	str	xzr, [x0, #16]
   8:	sub	w2, w1, #0x1
   c:	tst	w2, w1
  10:	b.eq	3c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x3c>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  1c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  20:	mov	x29, sp
  24:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x15b                 	// #347
  38:	bl	0 <__assert_fail>
  3c:	ldr	x0, [x0, #8]
  40:	ubfiz	x1, x1, #4, #32
  44:	mov	x2, #0xfffffffffffffff8    	// #-8
  48:	add	x1, x0, x1
  4c:	cmp	x0, x1
  50:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x5c>  // b.none
  54:	str	x2, [x0], #16
  58:	b	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E9initEmptyEv+0x4c>
  5c:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_8ConstantEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x10
  34:	cset	w0, ls  // ls = plast
  38:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_8ConstantENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	csel	x0, x19, xzr, ne  // ne = any
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x17
  34:	cset	w0, hi  // hi = pmore
  38:	ret

Disassembly of section .text._ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_:

0000000000000000 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_11InstructionEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm4castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm4castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.ne	3c <_ZN4llvm4castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x3c>  // b.any
  1c:	adrp	x3, 0 <_ZN4llvm4castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  20:	adrp	x1, 0 <_ZN4llvm4castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  24:	adrp	x0, 0 <_ZN4llvm4castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  28:	add	x3, x3, #0x0
  2c:	add	x1, x1, #0x0
  30:	add	x0, x0, #0x0
  34:	mov	w2, #0x108                 	// #264
  38:	bl	0 <__assert_fail>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	b.eq	2c <_ZN4llvm8dyn_castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_+0x2c>  // b.none
  1c:	mov	x0, x19
  20:	ldr	x19, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	b	0 <_ZN4llvm8dyn_castINS_11InstructionENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  2c:	mov	x0, #0x0                   	// #0
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_9ArrayTypeEPKNS_4TypeEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #8]
  30:	cmp	w0, #0xe
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_12ConstantExprEPKNS_5ValueEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x5
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm14FPMathOperator7classofEPKNS_5ValueE:

0000000000000000 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  14:	tst	w0, #0xff
  18:	b.eq	74 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x74>  // b.none
  1c:	mov	x0, x19
  20:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  24:	cbz	x0, 74 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x74>
  28:	ldrb	w1, [x0, #16]
  2c:	sub	w1, w1, #0x18
  30:	cmp	w1, #0x39
  34:	b.hi	f8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xf8>  // b.pmore
  38:	cmp	w1, #0x36
  3c:	b.hi	ac <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xac>  // b.pmore
  40:	cmp	w1, #0x18
  44:	b.hi	a0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xa0>  // b.pmore
  48:	cmp	w1, #0xb
  4c:	b.ls	f8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xf8>  // b.plast
  50:	sub	w1, w1, #0xc
  54:	cmp	w1, #0xc
  58:	b.hi	f8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xf8>  // b.pmore
  5c:	adrp	x0, 0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  60:	add	x0, x0, #0x0
  64:	ldrb	w0, [x0, w1, uxtw]
  68:	adr	x1, 74 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x74>
  6c:	add	x0, x1, w0, sxtb #2
  70:	br	x0
  74:	mov	x0, x19
  78:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  7c:	ands	w0, w0, #0xff
  80:	b.eq	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>  // b.none
  84:	cbz	x19, f8 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xf8>
  88:	ldrh	w1, [x19, #18]
  8c:	b	30 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x30>
  90:	mov	w0, #0x1                   	// #1
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	cmp	w1, #0x36
  a4:	cset	w0, eq  // eq = none
  a8:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>
  ac:	ldr	x19, [x19]
  b0:	mov	x0, x19
  b4:	bl	0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE>
  b8:	tst	w0, #0xff
  bc:	b.eq	cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>  // b.none
  c0:	cbz	x19, cc <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xcc>
  c4:	ldr	x19, [x19, #24]
  c8:	b	b0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xb0>
  cc:	ldrb	w0, [x19, #8]
  d0:	cmp	w0, #0x10
  d4:	b.ne	e0 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0xe0>  // b.any
  d8:	ldr	x0, [x19, #16]
  dc:	ldr	x19, [x0]
  e0:	ldrb	w0, [x19, #8]
  e4:	sub	w0, w0, #0x1
  e8:	and	w0, w0, #0xff
  ec:	cmp	w0, #0x5
  f0:	cset	w0, ls  // ls = plast
  f4:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>
  f8:	mov	w0, #0x0                   	// #0
  fc:	b	94 <_ZN4llvm14FPMathOperator7classofEPKNS_5ValueE+0x94>

Disassembly of section .text._ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_:

0000000000000000 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldr	x0, [x1]
  18:	str	x21, [sp, #32]
  1c:	ldr	x21, [x20]
  20:	str	x20, [x19, #8]
  24:	and	x21, x21, #0xfffffffffffffff8
  28:	mov	x1, x21
  2c:	bl	0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  30:	str	x0, [x19]
  34:	mov	x1, x19
  38:	ldr	x0, [x20]
  3c:	str	x19, [x21, #8]
  40:	bl	0 <_ZN4llvm10ilist_baseILb1EE16insertBeforeImplERNS_15ilist_node_baseILb1EEES4_>
  44:	ldr	x21, [sp, #32]
  48:	str	x0, [x20]
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE:

0000000000000000 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	ldr	x0, [x1]
  18:	stp	x21, x22, [sp, #32]
  1c:	stp	x23, x24, [sp, #48]
  20:	cmp	x2, x0
  24:	b.eq	50 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE+0x50>  // b.none
  28:	mov	x21, x2
  2c:	and	w24, w3, #0xff
  30:	mov	x23, x4
  34:	mov	x0, x1
  38:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  3c:	cbz	x0, 68 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE+0x68>
  40:	mov	w2, w24
  44:	mov	x1, x21
  48:	bl	0 <_ZN4llvm12ConstantExpr14getIntegerCastEPNS_8ConstantEPNS_4TypeEb>
  4c:	mov	x19, x0
  50:	mov	x0, x19
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldp	x23, x24, [sp, #48]
  60:	ldp	x29, x30, [sp], #96
  64:	ret
  68:	add	x22, sp, #0x48
  6c:	adrp	x1, 0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  70:	mov	x0, x22
  74:	add	x1, x1, #0x0
  78:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  7c:	mov	x0, x19
  80:	mov	x3, x22
  84:	mov	w2, w24
  88:	mov	x1, x21
  8c:	mov	x4, #0x0                   	// #0
  90:	bl	0 <_ZN4llvm8CastInst17CreateIntegerCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineEPNS_11InstructionE>
  94:	mov	x19, x0
  98:	ldr	x0, [x20, #8]
  9c:	cbz	x0, bc <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE+0xbc>
  a0:	ldr	x21, [x20, #16]
  a4:	mov	x1, x19
  a8:	add	x0, x0, #0x28
  ac:	bl	0 <_ZN4llvm21SymbolTableListTraitsINS_11InstructionEE13addNodeToListEPS1_>
  b0:	add	x1, x19, #0x18
  b4:	mov	x0, x21
  b8:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  bc:	mov	x1, x23
  c0:	mov	x0, x19
  c4:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
  c8:	mov	x1, x19
  cc:	mov	x0, x20
  d0:	bl	0 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE>
  d4:	b	50 <_ZN4llvm9IRBuilderINS_14ConstantFolderENS_24IRBuilderDefaultInserterEE13CreateIntCastEPNS_5ValueEPNS_4TypeEbRKNS_5TwineE+0x50>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv:

0000000000000000 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	w19, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	cbz	w19, 40 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv+0x40>
  1c:	sub	w19, w19, #0x1
  20:	mov	w0, #0x21                  	// #33
  24:	clz	w19, w19
  28:	sub	w0, w0, w19
  2c:	mov	w19, #0x1                   	// #1
  30:	lsl	w19, w19, w0
  34:	cmp	w19, #0x40
  38:	mov	w0, #0x40                  	// #64
  3c:	csel	w19, w19, w0, ge  // ge = tcont
  40:	cmp	w19, w1
  44:	b.ne	58 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv+0x58>  // b.any
  48:	mov	x0, x20
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv>
  58:	ldr	x0, [x20, #8]
  5c:	ubfiz	x1, x1, #4, #32
  60:	bl	0 <_ZdlPvm>
  64:	cbnz	w19, 7c <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv+0x7c>
  68:	str	wzr, [x20, #24]
  6c:	stp	xzr, xzr, [x20, #8]
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret
  7c:	lsl	w19, w19, #2
  80:	mov	w0, #0x3                   	// #3
  84:	udiv	w0, w19, w0
  88:	add	w0, w0, #0x1
  8c:	bl	0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv>
  90:	str	w0, [x20, #24]
  94:	cbz	w0, 6c <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv+0x6c>
  98:	ubfiz	x0, x0, #4, #32
  9c:	bl	0 <_Znwm>
  a0:	str	x0, [x20, #8]
  a4:	b	48 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE16shrink_and_clearEv+0x48>

Disassembly of section .text._ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv:

0000000000000000 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w1, [x0, #16]
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x1
  1c:	str	x0, [x19]
  20:	cbnz	w1, 2c <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x2c>
  24:	ldr	w0, [x19, #20]
  28:	cbz	w0, 68 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x68>
  2c:	ldr	w0, [x19, #24]
  30:	cmp	w0, w1, lsl #2
  34:	b.ls	40 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x40>  // b.plast
  38:	cmp	w0, #0x40
  3c:	b.hi	60 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x60>  // b.pmore
  40:	ldr	x1, [x19, #8]
  44:	ubfiz	x0, x0, #4, #32
  48:	mov	x2, #0xfffffffffffffff8    	// #-8
  4c:	add	x0, x1, x0
  50:	cmp	x0, x1
  54:	b.eq	84 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x84>  // b.none
  58:	str	x2, [x1], #16
  5c:	b	50 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x50>
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv>
  68:	ldp	x0, x1, [x19, #32]
  6c:	cmp	x0, x1
  70:	b.eq	78 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x78>  // b.none
  74:	str	x0, [x19, #40]
  78:	ldr	x19, [sp, #16]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret
  84:	str	xzr, [x19, #16]
  88:	b	68 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEE5clearEv+0x68>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_>:
   0:	ldr	w3, [x0, #24]
   4:	cbz	w3, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0xb0>
   8:	ldr	x4, [x1]
   c:	cmn	x4, #0x8
  10:	b.eq	1c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0x1c>  // b.none
  14:	cmn	x4, #0x10
  18:	b.ne	44 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0x44>  // b.any
  1c:	stp	x29, x30, [sp, #-16]!
  20:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_>
  24:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_>
  28:	mov	x29, sp
  2c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_>
  30:	add	x3, x3, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x0, x0, #0x0
  3c:	mov	w2, #0x250                 	// #592
  40:	bl	0 <__assert_fail>
  44:	ldr	x8, [x0, #8]
  48:	lsr	w0, w4, #9
  4c:	sub	w3, w3, #0x1
  50:	eor	w0, w0, w4, lsr #4
  54:	and	w0, w0, w3
  58:	mov	w6, #0x1                   	// #1
  5c:	mov	x5, #0x0                   	// #0
  60:	ubfiz	x7, x0, #4, #32
  64:	add	x1, x8, x7
  68:	ldr	x7, [x8, x7]
  6c:	cmp	x4, x7
  70:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0xbc>  // b.none
  74:	cmn	x7, #0x8
  78:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0x90>  // b.any
  7c:	cmp	x5, #0x0
  80:	mov	w0, #0x0                   	// #0
  84:	csel	x1, x5, x1, ne  // ne = any
  88:	str	x1, [x2]
  8c:	ret
  90:	cmn	x7, #0x10
  94:	b.ne	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0xa0>  // b.any
  98:	cmp	x5, #0x0
  9c:	csel	x5, x5, x1, ne  // ne = any
  a0:	add	w0, w0, w6
  a4:	add	w6, w6, #0x1
  a8:	and	w0, w3, w0
  ac:	b	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0x60>
  b0:	mov	x1, #0x0                   	// #0
  b4:	mov	w0, #0x0                   	// #0
  b8:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0x88>
  bc:	mov	w0, #0x1                   	// #1
  c0:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPS8_+0x88>

Disassembly of section .text._ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x23, x24, [sp, #48]
   c:	mov	x23, x0
  10:	ldr	x24, [x0]
  14:	str	x27, [sp, #80]
  18:	ldr	x27, [x0, #8]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  24:	sub	x3, x27, x24
  28:	movk	x19, #0xaaab
  2c:	stp	x21, x22, [sp, #32]
  30:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  34:	asr	x3, x3, #3
  38:	stp	x25, x26, [sp, #64]
  3c:	movk	x0, #0x555, lsl #48
  40:	mul	x3, x3, x19
  44:	cmp	x3, x0
  48:	b.ne	58 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x58>  // b.any
  4c:	adrp	x0, 0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_>
  50:	add	x0, x0, #0x0
  54:	bl	0 <_ZSt20__throw_length_errorPKc>
  58:	cmp	x3, #0x0
  5c:	mov	x25, x1
  60:	csinc	x19, x3, xzr, ne  // ne = any
  64:	mov	x26, x2
  68:	adds	x19, x19, x3
  6c:	sub	x21, x1, x24
  70:	b.cs	180 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x180>  // b.hs, b.nlast
  74:	mov	x22, #0x0                   	// #0
  78:	cbz	x19, 94 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x94>
  7c:	cmp	x19, x0
  80:	csel	x19, x19, x0, ls  // ls = plast
  84:	mov	x0, #0x18                  	// #24
  88:	mul	x0, x19, x0
  8c:	bl	0 <_Znwm>
  90:	mov	x22, x0
  94:	add	x2, x22, x21
  98:	ldp	x0, x1, [x26]
  9c:	stp	x0, x1, [x2]
  a0:	ldr	x0, [x26, #16]
  a4:	str	x0, [x2, #16]
  a8:	mov	x2, #0x0                   	// #0
  ac:	add	x3, x2, x24
  b0:	cmp	x25, x3
  b4:	b.ne	114 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x114>  // b.any
  b8:	mov	x20, #0xaaab                	// #43691
  bc:	lsr	x21, x21, #3
  c0:	movk	x20, #0xaaaa, lsl #16
  c4:	mov	x2, #0x18                  	// #24
  c8:	movk	x20, #0xaaaa, lsl #32
  cc:	mov	x4, #0x0                   	// #0
  d0:	movk	x20, #0xaaa, lsl #48
  d4:	mov	x0, x20
  d8:	mul	x21, x21, x20
  dc:	and	x21, x21, #0x1fffffffffffffff
  e0:	madd	x1, x21, x2, x24
  e4:	madd	x21, x21, x2, x2
  e8:	add	x21, x22, x21
  ec:	add	x5, x1, x4
  f0:	cmp	x27, x5
  f4:	b.eq	130 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x130>  // b.none
  f8:	add	x6, x21, x4
  fc:	add	x4, x4, #0x18
 100:	ldp	x2, x3, [x5]
 104:	stp	x2, x3, [x6]
 108:	ldr	x2, [x5, #16]
 10c:	str	x2, [x6, #16]
 110:	b	ec <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0xec>
 114:	add	x4, x22, x2
 118:	add	x2, x2, #0x18
 11c:	ldp	x0, x1, [x3]
 120:	stp	x0, x1, [x4]
 124:	ldr	x0, [x3, #16]
 128:	str	x0, [x4, #16]
 12c:	b	ac <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0xac>
 130:	sub	x20, x27, x1
 134:	lsr	x20, x20, #3
 138:	mul	x20, x20, x0
 13c:	mov	x0, #0x18                  	// #24
 140:	and	x20, x20, #0x1fffffffffffffff
 144:	madd	x20, x20, x0, x21
 148:	cbz	x24, 154 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x154>
 14c:	mov	x0, x24
 150:	bl	0 <_ZdlPv>
 154:	mov	x0, #0x18                  	// #24
 158:	ldp	x25, x26, [sp, #64]
 15c:	madd	x19, x19, x0, x22
 160:	ldr	x27, [sp, #80]
 164:	stp	x22, x20, [x23]
 168:	str	x19, [x23, #16]
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x29, x30, [sp], #96
 17c:	ret
 180:	mov	x19, x0
 184:	b	84 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE17_M_realloc_insertIJS6_EEEvN9__gnu_cxx17__normal_iteratorIPS6_S8_EEDpOT_+0x84>

Disassembly of section .text._ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	30 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_+0x30>  // b.none
  14:	ldp	x4, x5, [x2]
  18:	stp	x4, x5, [x1]
  1c:	add	x1, x1, #0x18
  20:	ldr	x0, [x2, #16]
  24:	stur	x0, [x1, #-8]
  28:	str	x1, [x3, #8]
  2c:	ret
  30:	b	0 <_ZNSt6vectorISt4pairIPN4llvm11InstructionENS1_16TruncInstCombine4InfoEESaIS6_EE12emplace_backIJS6_EEEvDpOT_>

Disassembly of section .text._ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_11InstructionEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_11InstructionEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_11InstructionEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_11InstructionEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_11InstructionEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_11InstructionEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x3e
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_11InstructionEPKNS_4UserEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_4UserEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_4UserEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_4UserEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_4UserEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_11InstructionEPKNS_4UserEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #16]
  30:	cmp	w0, #0x17
  34:	cset	w0, hi  // hi = pmore
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>:
   0:	cbnz	x0, 2c <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_+0x2c>
   4:	stp	x29, x30, [sp, #-16]!
   8:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>
   c:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>
  10:	mov	x29, sp
  14:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_10VectorTypeEPKNS_4TypeEE4doitES4_>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x69                  	// #105
  28:	bl	0 <__assert_fail>
  2c:	ldrb	w0, [x0, #8]
  30:	cmp	w0, #0x10
  34:	cset	w0, eq  // eq = none
  38:	ret

Disassembly of section .text._ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_:

0000000000000000 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	cbnz	x0, 30 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_+0x30>
  10:	adrp	x3, 0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_>
  14:	adrp	x1, 0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_>
  18:	adrp	x0, 0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_>
  1c:	add	x3, x3, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	w2, #0x69                  	// #105
  2c:	bl	0 <__assert_fail>
  30:	mov	x19, x0
  34:	bl	0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_>
  38:	ands	w0, w0, #0xff
  3c:	b.eq	54 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_+0x54>  // b.none
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm11isa_impl_clINS_9TruncInstEPKNS_5ValueEE4doitES4_>
  48:	ldrb	w0, [x0, #16]
  4c:	cmp	w0, #0x3e
  50:	cset	w0, eq  // eq = none
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_9TruncInstENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_:

0000000000000000 <_ZN4llvm8dyn_castINS_9TruncInstENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm8dyn_castINS_9TruncInstENS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES6_>
  14:	tst	w0, #0xff
  18:	csel	x0, x19, xzr, ne  // ne = any
  1c:	ldr	x19, [sp, #16]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	stp	x21, x22, [sp, #32]
  14:	ldr	w22, [x0, #24]
  18:	stp	x23, x24, [sp, #48]
  1c:	ldr	x21, [x0, #8]
  20:	sub	w0, w1, #0x1
  24:	bl	0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  28:	cmp	w0, #0x40
  2c:	mov	w1, #0x40                  	// #64
  30:	csel	w0, w0, w1, cs  // cs = hs, nlast
  34:	str	w0, [x19, #24]
  38:	ubfiz	x0, x0, #4, #32
  3c:	bl	0 <_Znwm>
  40:	str	x0, [x19, #8]
  44:	cbnz	x21, 64 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x64>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x23, x24, [sp, #48]
  5c:	ldp	x29, x30, [sp], #80
  60:	ret
  64:	ubfiz	x22, x22, #4, #32
  68:	mov	x20, x21
  6c:	add	x23, x21, x22
  70:	add	x24, sp, #0x48
  74:	mov	x0, x19
  78:	bl	0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  7c:	cmp	x23, x20
  80:	b.eq	f8 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>  // b.none
  84:	ldr	x0, [x20]
  88:	cmn	x0, #0x8
  8c:	b.eq	f0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf0>  // b.none
  90:	cmn	x0, #0x10
  94:	b.eq	f0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf0>  // b.none
  98:	mov	x2, x24
  9c:	mov	x1, x20
  a0:	mov	x0, x19
  a4:	bl	0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  a8:	tst	w0, #0xff
  ac:	b.eq	d0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xd0>  // b.none
  b0:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  b4:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  b8:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  bc:	add	x3, x3, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x0, x0, #0x0
  c8:	mov	w2, #0x17a                 	// #378
  cc:	bl	0 <__assert_fail>
  d0:	ldr	x0, [sp, #72]
  d4:	ldr	x1, [x20]
  d8:	str	x1, [x0]
  dc:	ldr	w1, [x20, #8]
  e0:	str	w1, [x0, #8]
  e4:	ldr	w0, [x19, #16]
  e8:	add	w0, w0, #0x1
  ec:	str	w0, [x19, #16]
  f0:	add	x20, x20, #0x10
  f4:	b	7c <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x7c>
  f8:	mov	x1, x22
  fc:	mov	x0, x21
 100:	bl	0 <_ZdlPvm>
 104:	b	50 <_ZN4llvm8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x50>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	mov	x22, x2
  20:	add	x2, sp, #0x30
  24:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_>
  28:	tst	w0, #0xff
  2c:	ldr	x1, [sp, #48]
  30:	b.eq	60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_+0x60>  // b.none
  34:	ldr	x2, [x19, #8]
  38:	strb	wzr, [x20, #32]
  3c:	ldr	w0, [x19, #24]
  40:	add	x0, x2, x0, lsl #4
  44:	stp	x1, x0, [x20, #16]
  48:	ldr	x2, [x19]
  4c:	stp	x19, x2, [x20]
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x29, x30, [sp], #64
  5c:	ret
  60:	ldr	x0, [x19]
  64:	str	x1, [sp, #56]
  68:	ldr	w1, [x19, #16]
  6c:	add	x0, x0, #0x1
  70:	str	x0, [x19]
  74:	ldr	w0, [x19, #24]
  78:	add	w3, w1, #0x1
  7c:	add	w2, w0, w0, lsl #1
  80:	lsl	w1, w0, #1
  84:	cmp	w2, w3, lsl #2
  88:	b.hi	cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_+0xcc>  // b.pmore
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_>
  94:	add	x2, sp, #0x38
  98:	mov	x1, x21
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_>
  a4:	ldr	x0, [sp, #56]
  a8:	cbnz	x0, e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_+0xe8>
  ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_>
  b0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_>
  b4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_>
  b8:	add	x3, x3, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x0, x0, #0x0
  c4:	mov	w2, #0x22f                 	// #559
  c8:	bl	0 <__assert_fail>
  cc:	ldr	w1, [x19, #20]
  d0:	sub	w1, w0, w1
  d4:	sub	w1, w1, w3
  d8:	cmp	w1, w0, lsr #3
  dc:	b.hi	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_+0xa4>  // b.pmore
  e0:	mov	w1, w0
  e4:	b	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_+0x8c>
  e8:	ldr	w1, [x19, #16]
  ec:	add	w1, w1, #0x1
  f0:	str	w1, [x19, #16]
  f4:	ldr	x1, [x0]
  f8:	cmn	x1, #0x8
  fc:	b.eq	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_+0x10c>  // b.none
 100:	ldr	w1, [x19, #20]
 104:	sub	w1, w1, #0x1
 108:	str	w1, [x19, #20]
 10c:	ldr	x1, [x21]
 110:	ldr	x2, [x19, #8]
 114:	str	x1, [x0]
 118:	ldr	w1, [x22]
 11c:	str	w1, [x0, #8]
 120:	ldr	w1, [x19, #24]
 124:	add	x1, x2, x1, lsl #4
 128:	stp	x0, x1, [x20, #16]
 12c:	mov	w0, #0x1                   	// #1
 130:	ldr	x2, [x19]
 134:	stp	x19, x2, [x20]
 138:	strb	w0, [x20, #32]
 13c:	b	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E11try_emplaceIJRKjEEESt4pairINS_16DenseMapIteratorIS3_jS5_S8_Lb0EEEbERKS3_DpOT_+0x50>

Disassembly of section .text._ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_:

0000000000000000 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	str	x21, [sp, #32]
   c:	mov	x21, x1
  10:	ldr	x1, [x1]
  14:	stp	x19, x20, [sp, #16]
  18:	add	x20, sp, #0x58
  1c:	str	x1, [sp, #48]
  20:	add	x1, sp, #0x30
  24:	mov	x8, x20
  28:	add	x2, x1, #0x8
  2c:	mov	x19, x0
  30:	str	wzr, [sp, #56]
  34:	bl	0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
  38:	mov	x0, x20
  3c:	bl	0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
  40:	mov	x20, x0
  44:	ldrb	w0, [sp, #120]
  48:	cbz	w0, 88 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_+0x88>
  4c:	ldr	x0, [x21]
  50:	add	x21, x19, #0x20
  54:	add	x1, sp, #0x40
  58:	stp	x0, xzr, [sp, #64]
  5c:	mov	x0, x21
  60:	str	xzr, [sp, #80]
  64:	bl	0 <_ZN4llvm9MapVectorIPNS_11InstructionENS_16TruncInstCombine4InfoENS_8DenseMapIS2_jNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEESt6vectorISt4pairIS2_S4_ESaISE_EEEixERKS2_>
  68:	ldp	x0, x1, [x19, #32]
  6c:	sub	x1, x1, x0
  70:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  74:	movk	x0, #0xaaab
  78:	asr	x1, x1, #3
  7c:	mul	x1, x1, x0
  80:	sub	w1, w1, #0x1
  84:	str	w1, [x20, #8]
  88:	ldr	w0, [x20, #8]
  8c:	mov	w2, #0x18                  	// #24
  90:	ldr	x1, [x19, #32]
  94:	ldp	x19, x20, [sp, #16]
  98:	umaddl	x0, w0, w2, x1
  9c:	ldr	x21, [sp, #32]
  a0:	add	x0, x0, #0x8
  a4:	ldp	x29, x30, [sp], #128
  a8:	ret
