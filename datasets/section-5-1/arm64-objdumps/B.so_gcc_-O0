
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//B.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004ad8 <_init>:
    4ad8:	stp	x29, x30, [sp, #-16]!
    4adc:	mov	x29, sp
    4ae0:	bl	50c0 <call_weak_fn>
    4ae4:	ldp	x29, x30, [sp], #16
    4ae8:	ret

Disassembly of section .plt:

0000000000004af0 <.plt>:
    4af0:	stp	x16, x30, [sp, #-16]!
    4af4:	adrp	x16, 2f000 <values_for_uv.22728+0x14b0>
    4af8:	ldr	x17, [x16, #4088]
    4afc:	add	x16, x16, #0xff8
    4b00:	br	x17
    4b04:	nop
    4b08:	nop
    4b0c:	nop

0000000000004b10 <memcpy@plt>:
    4b10:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b14:	ldr	x17, [x16]
    4b18:	add	x16, x16, #0x0
    4b1c:	br	x17

0000000000004b20 <Perl_sv_2iv_flags@plt>:
    4b20:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b24:	ldr	x17, [x16, #8]
    4b28:	add	x16, x16, #0x8
    4b2c:	br	x17

0000000000004b30 <Perl_sv_2bool_flags@plt>:
    4b30:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b34:	ldr	x17, [x16, #16]
    4b38:	add	x16, x16, #0x10
    4b3c:	br	x17

0000000000004b40 <strlen@plt>:
    4b40:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b44:	ldr	x17, [x16, #24]
    4b48:	add	x16, x16, #0x18
    4b4c:	br	x17

0000000000004b50 <Perl_PerlIO_stdout@plt>:
    4b50:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b54:	ldr	x17, [x16, #32]
    4b58:	add	x16, x16, #0x20
    4b5c:	br	x17

0000000000004b60 <Perl_newRV_noinc@plt>:
    4b60:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b64:	ldr	x17, [x16, #40]
    4b68:	add	x16, x16, #0x28
    4b6c:	br	x17

0000000000004b70 <Perl_stack_grow@plt>:
    4b70:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b74:	ldr	x17, [x16, #48]
    4b78:	add	x16, x16, #0x30
    4b7c:	br	x17

0000000000004b80 <htonl@plt>:
    4b80:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b84:	ldr	x17, [x16, #56]
    4b88:	add	x16, x16, #0x38
    4b8c:	br	x17

0000000000004b90 <Perl_sv_catpvn_flags@plt>:
    4b90:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4b94:	ldr	x17, [x16, #64]
    4b98:	add	x16, x16, #0x40
    4b9c:	br	x17

0000000000004ba0 <Perl_refcounted_he_chain_2hv@plt>:
    4ba0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ba4:	ldr	x17, [x16, #72]
    4ba8:	add	x16, x16, #0x48
    4bac:	br	x17

0000000000004bb0 <Perl_call_method@plt>:
    4bb0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4bb4:	ldr	x17, [x16, #80]
    4bb8:	add	x16, x16, #0x50
    4bbc:	br	x17

0000000000004bc0 <Perl_newSVhek@plt>:
    4bc0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4bc4:	ldr	x17, [x16, #88]
    4bc8:	add	x16, x16, #0x58
    4bcc:	br	x17

0000000000004bd0 <__cxa_finalize@plt>:
    4bd0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4bd4:	ldr	x17, [x16, #96]
    4bd8:	add	x16, x16, #0x60
    4bdc:	br	x17

0000000000004be0 <Perl_sv_magicext@plt>:
    4be0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4be4:	ldr	x17, [x16, #104]
    4be8:	add	x16, x16, #0x68
    4bec:	br	x17

0000000000004bf0 <Perl_my_cxt_init@plt>:
    4bf0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4bf4:	ldr	x17, [x16, #112]
    4bf8:	add	x16, x16, #0x70
    4bfc:	br	x17

0000000000004c00 <Perl_newCONSTSUB@plt>:
    4c00:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c04:	ldr	x17, [x16, #120]
    4c08:	add	x16, x16, #0x78
    4c0c:	br	x17

0000000000004c10 <Perl_newSV@plt>:
    4c10:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c14:	ldr	x17, [x16, #128]
    4c18:	add	x16, x16, #0x80
    4c1c:	br	x17

0000000000004c20 <Perl_custom_op_get_field@plt>:
    4c20:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c24:	ldr	x17, [x16, #136]
    4c28:	add	x16, x16, #0x88
    4c2c:	br	x17

0000000000004c30 <Perl_cv_const_sv@plt>:
    4c30:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c34:	ldr	x17, [x16, #144]
    4c38:	add	x16, x16, #0x90
    4c3c:	br	x17

0000000000004c40 <Perl_sv_catpvf@plt>:
    4c40:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c44:	ldr	x17, [x16, #152]
    4c48:	add	x16, x16, #0x98
    4c4c:	br	x17

0000000000004c50 <Perl_sv_upgrade@plt>:
    4c50:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c54:	ldr	x17, [x16, #160]
    4c58:	add	x16, x16, #0xa0
    4c5c:	br	x17

0000000000004c60 <Perl_sv_setiv_mg@plt>:
    4c60:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c64:	ldr	x17, [x16, #168]
    4c68:	add	x16, x16, #0xa8
    4c6c:	br	x17

0000000000004c70 <Perl_mro_method_changed_in@plt>:
    4c70:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c74:	ldr	x17, [x16, #176]
    4c78:	add	x16, x16, #0xb0
    4c7c:	br	x17

0000000000004c80 <Perl_PerlIO_stdin@plt>:
    4c80:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c84:	ldr	x17, [x16, #184]
    4c88:	add	x16, x16, #0xb8
    4c8c:	br	x17

0000000000004c90 <Perl_newSVnv@plt>:
    4c90:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4c94:	ldr	x17, [x16, #192]
    4c98:	add	x16, x16, #0xc0
    4c9c:	br	x17

0000000000004ca0 <Perl_sv_bless@plt>:
    4ca0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ca4:	ldr	x17, [x16, #200]
    4ca8:	add	x16, x16, #0xc8
    4cac:	br	x17

0000000000004cb0 <strncmp@plt>:
    4cb0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4cb4:	ldr	x17, [x16, #208]
    4cb8:	add	x16, x16, #0xd0
    4cbc:	br	x17

0000000000004cc0 <Perl_sv_setnv_mg@plt>:
    4cc0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4cc4:	ldr	x17, [x16, #216]
    4cc8:	add	x16, x16, #0xd8
    4ccc:	br	x17

0000000000004cd0 <Perl_sv_2pvbyte@plt>:
    4cd0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4cd4:	ldr	x17, [x16, #224]
    4cd8:	add	x16, x16, #0xe0
    4cdc:	br	x17

0000000000004ce0 <Perl_sv_2pv_flags@plt>:
    4ce0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ce4:	ldr	x17, [x16, #232]
    4ce8:	add	x16, x16, #0xe8
    4cec:	br	x17

0000000000004cf0 <Perl_xs_boot_epilog@plt>:
    4cf0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4cf4:	ldr	x17, [x16, #240]
    4cf8:	add	x16, x16, #0xf0
    4cfc:	br	x17

0000000000004d00 <Perl_hv_iternext_flags@plt>:
    4d00:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d04:	ldr	x17, [x16, #248]
    4d08:	add	x16, x16, #0xf8
    4d0c:	br	x17

0000000000004d10 <Perl_multiconcat_stringify@plt>:
    4d10:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d14:	ldr	x17, [x16, #256]
    4d18:	add	x16, x16, #0x100
    4d1c:	br	x17

0000000000004d20 <Perl_cop_fetch_label@plt>:
    4d20:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d24:	ldr	x17, [x16, #264]
    4d28:	add	x16, x16, #0x108
    4d2c:	br	x17

0000000000004d30 <__stack_chk_fail@plt>:
    4d30:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d34:	ldr	x17, [x16, #272]
    4d38:	add	x16, x16, #0x110
    4d3c:	br	x17

0000000000004d40 <Perl_sv_setuv@plt>:
    4d40:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d44:	ldr	x17, [x16, #280]
    4d48:	add	x16, x16, #0x118
    4d4c:	br	x17

0000000000004d50 <Perl_sv_backoff@plt>:
    4d50:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d54:	ldr	x17, [x16, #288]
    4d58:	add	x16, x16, #0x120
    4d5c:	br	x17

0000000000004d60 <__gmon_start__@plt>:
    4d60:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d64:	ldr	x17, [x16, #296]
    4d68:	add	x16, x16, #0x128
    4d6c:	br	x17

0000000000004d70 <Perl_croak_xs_usage@plt>:
    4d70:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d74:	ldr	x17, [x16, #304]
    4d78:	add	x16, x16, #0x130
    4d7c:	br	x17

0000000000004d80 <Perl_newSVpvn_flags@plt>:
    4d80:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d84:	ldr	x17, [x16, #312]
    4d88:	add	x16, x16, #0x138
    4d8c:	br	x17

0000000000004d90 <Perl_sv_2nv_flags@plt>:
    4d90:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4d94:	ldr	x17, [x16, #320]
    4d98:	add	x16, x16, #0x140
    4d9c:	br	x17

0000000000004da0 <Perl_gv_stashpv@plt>:
    4da0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4da4:	ldr	x17, [x16, #328]
    4da8:	add	x16, x16, #0x148
    4dac:	br	x17

0000000000004db0 <Perl_hv_riter_p@plt>:
    4db0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4db4:	ldr	x17, [x16, #336]
    4db8:	add	x16, x16, #0x150
    4dbc:	br	x17

0000000000004dc0 <Perl_mg_size@plt>:
    4dc0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4dc4:	ldr	x17, [x16, #344]
    4dc8:	add	x16, x16, #0x158
    4dcc:	br	x17

0000000000004dd0 <Perl_croak@plt>:
    4dd0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4dd4:	ldr	x17, [x16, #352]
    4dd8:	add	x16, x16, #0x160
    4ddc:	br	x17

0000000000004de0 <Perl_av_push@plt>:
    4de0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4de4:	ldr	x17, [x16, #360]
    4de8:	add	x16, x16, #0x168
    4dec:	br	x17

0000000000004df0 <Perl_op_parent@plt>:
    4df0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4df4:	ldr	x17, [x16, #368]
    4df8:	add	x16, x16, #0x170
    4dfc:	br	x17

0000000000004e00 <Perl_emulate_cop_io@plt>:
    4e00:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e04:	ldr	x17, [x16, #376]
    4e08:	add	x16, x16, #0x178
    4e0c:	br	x17

0000000000004e10 <Perl_newSVpv@plt>:
    4e10:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e14:	ldr	x17, [x16, #384]
    4e18:	add	x16, x16, #0x180
    4e1c:	br	x17

0000000000004e20 <Perl_gv_fetchpvn_flags@plt>:
    4e20:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e24:	ldr	x17, [x16, #392]
    4e28:	add	x16, x16, #0x188
    4e2c:	br	x17

0000000000004e30 <strcmp@plt>:
    4e30:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e34:	ldr	x17, [x16, #400]
    4e38:	add	x16, x16, #0x190
    4e3c:	br	x17

0000000000004e40 <Perl_cvgv_from_hek@plt>:
    4e40:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e44:	ldr	x17, [x16, #408]
    4e48:	add	x16, x16, #0x198
    4e4c:	br	x17

0000000000004e50 <Perl_get_sv@plt>:
    4e50:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e54:	ldr	x17, [x16, #416]
    4e58:	add	x16, x16, #0x1a0
    4e5c:	br	x17

0000000000004e60 <Perl_croak_nocontext@plt>:
    4e60:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e64:	ldr	x17, [x16, #424]
    4e68:	add	x16, x16, #0x1a8
    4e6c:	br	x17

0000000000004e70 <Perl_newXS@plt>:
    4e70:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e74:	ldr	x17, [x16, #432]
    4e78:	add	x16, x16, #0x1b0
    4e7c:	br	x17

0000000000004e80 <Perl_newXS_deffile@plt>:
    4e80:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e84:	ldr	x17, [x16, #440]
    4e88:	add	x16, x16, #0x1b8
    4e8c:	br	x17

0000000000004e90 <Perl_mg_set@plt>:
    4e90:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4e94:	ldr	x17, [x16, #448]
    4e98:	add	x16, x16, #0x1c0
    4e9c:	br	x17

0000000000004ea0 <Perl_hv_iterinit@plt>:
    4ea0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ea4:	ldr	x17, [x16, #456]
    4ea8:	add	x16, x16, #0x1c8
    4eac:	br	x17

0000000000004eb0 <Perl_sv_setsv_flags@plt>:
    4eb0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4eb4:	ldr	x17, [x16, #464]
    4eb8:	add	x16, x16, #0x1d0
    4ebc:	br	x17

0000000000004ec0 <Perl_sv_2mortal@plt>:
    4ec0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ec4:	ldr	x17, [x16, #472]
    4ec8:	add	x16, x16, #0x1d8
    4ecc:	br	x17

0000000000004ed0 <Perl_mg_get@plt>:
    4ed0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ed4:	ldr	x17, [x16, #480]
    4ed8:	add	x16, x16, #0x1e0
    4edc:	br	x17

0000000000004ee0 <Perl_hv_common@plt>:
    4ee0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ee4:	ldr	x17, [x16, #488]
    4ee8:	add	x16, x16, #0x1e8
    4eec:	br	x17

0000000000004ef0 <strchr@plt>:
    4ef0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ef4:	ldr	x17, [x16, #496]
    4ef8:	add	x16, x16, #0x1f0
    4efc:	br	x17

0000000000004f00 <Perl_newSVuv@plt>:
    4f00:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f04:	ldr	x17, [x16, #504]
    4f08:	add	x16, x16, #0x1f8
    4f0c:	br	x17

0000000000004f10 <Perl_xs_handshake@plt>:
    4f10:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f14:	ldr	x17, [x16, #512]
    4f18:	add	x16, x16, #0x200
    4f1c:	br	x17

0000000000004f20 <Perl_av_fetch@plt>:
    4f20:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f24:	ldr	x17, [x16, #520]
    4f28:	add	x16, x16, #0x208
    4f2c:	br	x17

0000000000004f30 <Perl_utf8_length@plt>:
    4f30:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f34:	ldr	x17, [x16, #528]
    4f38:	add	x16, x16, #0x210
    4f3c:	br	x17

0000000000004f40 <Perl_multideref_stringify@plt>:
    4f40:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f44:	ldr	x17, [x16, #536]
    4f48:	add	x16, x16, #0x218
    4f4c:	br	x17

0000000000004f50 <Perl_gv_fetchfile@plt>:
    4f50:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f54:	ldr	x17, [x16, #544]
    4f58:	add	x16, x16, #0x220
    4f5c:	br	x17

0000000000004f60 <Perl_markstack_grow@plt>:
    4f60:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f64:	ldr	x17, [x16, #552]
    4f68:	add	x16, x16, #0x228
    4f6c:	br	x17

0000000000004f70 <Perl_hv_common_key_len@plt>:
    4f70:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f74:	ldr	x17, [x16, #560]
    4f78:	add	x16, x16, #0x230
    4f7c:	br	x17

0000000000004f80 <Perl_sv_setpvn@plt>:
    4f80:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f84:	ldr	x17, [x16, #568]
    4f88:	add	x16, x16, #0x238
    4f8c:	br	x17

0000000000004f90 <Perl_newRV@plt>:
    4f90:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4f94:	ldr	x17, [x16, #576]
    4f98:	add	x16, x16, #0x240
    4f9c:	br	x17

0000000000004fa0 <Perl_mg_find@plt>:
    4fa0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4fa4:	ldr	x17, [x16, #584]
    4fa8:	add	x16, x16, #0x248
    4fac:	br	x17

0000000000004fb0 <Perl_newSV_type@plt>:
    4fb0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4fb4:	ldr	x17, [x16, #592]
    4fb8:	add	x16, x16, #0x250
    4fbc:	br	x17

0000000000004fc0 <Perl_newSVrv@plt>:
    4fc0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4fc4:	ldr	x17, [x16, #600]
    4fc8:	add	x16, x16, #0x258
    4fcc:	br	x17

0000000000004fd0 <Perl_get_av@plt>:
    4fd0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4fd4:	ldr	x17, [x16, #608]
    4fd8:	add	x16, x16, #0x260
    4fdc:	br	x17

0000000000004fe0 <Perl_sv_setuv_mg@plt>:
    4fe0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4fe4:	ldr	x17, [x16, #616]
    4fe8:	add	x16, x16, #0x268
    4fec:	br	x17

0000000000004ff0 <Perl_sv_free2@plt>:
    4ff0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    4ff4:	ldr	x17, [x16, #624]
    4ff8:	add	x16, x16, #0x270
    4ffc:	br	x17

0000000000005000 <Perl_sv_setpvf@plt>:
    5000:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5004:	ldr	x17, [x16, #632]
    5008:	add	x16, x16, #0x278
    500c:	br	x17

0000000000005010 <Perl_hv_fill@plt>:
    5010:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5014:	ldr	x17, [x16, #640]
    5018:	add	x16, x16, #0x280
    501c:	br	x17

0000000000005020 <Perl_newSViv@plt>:
    5020:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5024:	ldr	x17, [x16, #648]
    5028:	add	x16, x16, #0x288
    502c:	br	x17

0000000000005030 <Perl_PerlIO_stderr@plt>:
    5030:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5034:	ldr	x17, [x16, #656]
    5038:	add	x16, x16, #0x290
    503c:	br	x17

0000000000005040 <Perl_sv_setiv@plt>:
    5040:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5044:	ldr	x17, [x16, #664]
    5048:	add	x16, x16, #0x298
    504c:	br	x17

0000000000005050 <Perl_op_class@plt>:
    5050:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5054:	ldr	x17, [x16, #672]
    5058:	add	x16, x16, #0x2a0
    505c:	br	x17

0000000000005060 <Perl_newSVpvf@plt>:
    5060:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5064:	ldr	x17, [x16, #680]
    5068:	add	x16, x16, #0x2a8
    506c:	br	x17

0000000000005070 <Perl_newSVpvn@plt>:
    5070:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5074:	ldr	x17, [x16, #688]
    5078:	add	x16, x16, #0x2b0
    507c:	br	x17

0000000000005080 <Perl_sv_newmortal@plt>:
    5080:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5084:	ldr	x17, [x16, #696]
    5088:	add	x16, x16, #0x2b8
    508c:	br	x17

0000000000005090 <Perl_sv_uni_display@plt>:
    5090:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    5094:	ldr	x17, [x16, #704]
    5098:	add	x16, x16, #0x2c0
    509c:	br	x17

00000000000050a0 <Perl_hv_placeholders_get@plt>:
    50a0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    50a4:	ldr	x17, [x16, #712]
    50a8:	add	x16, x16, #0x2c8
    50ac:	br	x17

00000000000050b0 <Perl_get_hv@plt>:
    50b0:	adrp	x16, 30000 <memcpy@GLIBC_2.17>
    50b4:	ldr	x17, [x16, #720]
    50b8:	add	x16, x16, #0x2d0
    50bc:	br	x17

Disassembly of section .text:

00000000000050c0 <call_weak_fn>:
    50c0:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    50c4:	ldr	x0, [x0, #4000]
    50c8:	cbz	x0, 50d0 <call_weak_fn+0x10>
    50cc:	b	4d60 <__gmon_start__@plt>
    50d0:	ret

00000000000050d4 <deregister_tm_clones>:
    50d4:	stp	x29, x30, [sp, #-32]!
    50d8:	mov	x29, sp
    50dc:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    50e0:	add	x0, x0, #0x2e8
    50e4:	str	x0, [sp, #24]
    50e8:	ldr	x0, [sp, #24]
    50ec:	str	x0, [sp, #24]
    50f0:	ldr	x1, [sp, #24]
    50f4:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    50f8:	add	x0, x0, #0x2e8
    50fc:	cmp	x1, x0
    5100:	b.eq	5138 <deregister_tm_clones+0x64>  // b.none
    5104:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    5108:	ldr	x0, [x0, #3976]
    510c:	str	x0, [sp, #16]
    5110:	ldr	x0, [sp, #16]
    5114:	str	x0, [sp, #16]
    5118:	ldr	x0, [sp, #16]
    511c:	cmp	x0, #0x0
    5120:	b.eq	513c <deregister_tm_clones+0x68>  // b.none
    5124:	ldr	x1, [sp, #16]
    5128:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    512c:	add	x0, x0, #0x2e8
    5130:	blr	x1
    5134:	b	513c <deregister_tm_clones+0x68>
    5138:	nop
    513c:	ldp	x29, x30, [sp], #32
    5140:	ret

0000000000005144 <register_tm_clones>:
    5144:	stp	x29, x30, [sp, #-48]!
    5148:	mov	x29, sp
    514c:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    5150:	add	x0, x0, #0x2e8
    5154:	str	x0, [sp, #40]
    5158:	ldr	x0, [sp, #40]
    515c:	str	x0, [sp, #40]
    5160:	ldr	x1, [sp, #40]
    5164:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    5168:	add	x0, x0, #0x2e8
    516c:	sub	x0, x1, x0
    5170:	asr	x0, x0, #3
    5174:	lsr	x1, x0, #63
    5178:	add	x0, x1, x0
    517c:	asr	x0, x0, #1
    5180:	str	x0, [sp, #32]
    5184:	ldr	x0, [sp, #32]
    5188:	cmp	x0, #0x0
    518c:	b.eq	51c8 <register_tm_clones+0x84>  // b.none
    5190:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    5194:	ldr	x0, [x0, #4064]
    5198:	str	x0, [sp, #24]
    519c:	ldr	x0, [sp, #24]
    51a0:	str	x0, [sp, #24]
    51a4:	ldr	x0, [sp, #24]
    51a8:	cmp	x0, #0x0
    51ac:	b.eq	51cc <register_tm_clones+0x88>  // b.none
    51b0:	ldr	x2, [sp, #24]
    51b4:	ldr	x1, [sp, #32]
    51b8:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    51bc:	add	x0, x0, #0x2e8
    51c0:	blr	x2
    51c4:	b	51cc <register_tm_clones+0x88>
    51c8:	nop
    51cc:	ldp	x29, x30, [sp], #48
    51d0:	ret

00000000000051d4 <__do_global_dtors_aux>:
    51d4:	stp	x29, x30, [sp, #-16]!
    51d8:	mov	x29, sp
    51dc:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    51e0:	add	x0, x0, #0x2e4
    51e4:	ldrb	w0, [x0]
    51e8:	and	x0, x0, #0xff
    51ec:	cmp	x0, #0x0
    51f0:	b.ne	522c <__do_global_dtors_aux+0x58>  // b.any
    51f4:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    51f8:	ldr	x0, [x0, #3984]
    51fc:	cmp	x0, #0x0
    5200:	b.eq	5214 <__do_global_dtors_aux+0x40>  // b.none
    5204:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    5208:	add	x0, x0, #0x2d8
    520c:	ldr	x0, [x0]
    5210:	bl	4bd0 <__cxa_finalize@plt>
    5214:	bl	50d4 <deregister_tm_clones>
    5218:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    521c:	add	x0, x0, #0x2e4
    5220:	mov	w1, #0x1                   	// #1
    5224:	strb	w1, [x0]
    5228:	b	5230 <__do_global_dtors_aux+0x5c>
    522c:	nop
    5230:	ldp	x29, x30, [sp], #16
    5234:	ret

0000000000005238 <frame_dummy>:
    5238:	stp	x29, x30, [sp, #-16]!
    523c:	mov	x29, sp
    5240:	bl	5144 <register_tm_clones>
    5244:	nop
    5248:	ldp	x29, x30, [sp], #16
    524c:	ret

0000000000005250 <CvNAME_HEK>:
    5250:	sub	sp, sp, #0x20
    5254:	str	x0, [sp, #8]
    5258:	ldr	x0, [sp, #8]
    525c:	ldr	x0, [x0]
    5260:	str	x0, [sp, #16]
    5264:	ldr	x0, [sp, #16]
    5268:	ldr	w0, [x0, #92]
    526c:	and	w0, w0, #0x8000
    5270:	cmp	w0, #0x0
    5274:	b.eq	5290 <CvNAME_HEK+0x40>  // b.none
    5278:	ldr	x0, [sp, #8]
    527c:	ldr	x0, [x0]
    5280:	str	x0, [sp, #24]
    5284:	ldr	x0, [sp, #24]
    5288:	ldr	x0, [x0, #56]
    528c:	b	5294 <CvNAME_HEK+0x44>
    5290:	mov	x0, #0x0                   	// #0
    5294:	add	sp, sp, #0x20
    5298:	ret

000000000000529c <zaphod32_hash_with_state>:
    529c:	sub	sp, sp, #0x50
    52a0:	str	x0, [sp, #24]
    52a4:	str	x1, [sp, #16]
    52a8:	str	x2, [sp, #8]
    52ac:	ldr	x0, [sp, #24]
    52b0:	str	x0, [sp, #56]
    52b4:	ldr	x0, [sp, #8]
    52b8:	str	x0, [sp, #64]
    52bc:	ldr	x0, [sp, #56]
    52c0:	ldr	w0, [x0]
    52c4:	str	w0, [sp, #44]
    52c8:	ldr	x0, [sp, #56]
    52cc:	ldr	w0, [x0, #4]
    52d0:	str	w0, [sp, #48]
    52d4:	ldr	x0, [sp, #56]
    52d8:	add	x0, x0, #0x8
    52dc:	ldr	w1, [x0]
    52e0:	ldr	x0, [sp, #8]
    52e4:	add	w2, w0, #0x1
    52e8:	mov	w0, #0x7ab1                	// #31409
    52ec:	movk	w0, #0xc41a, lsl #16
    52f0:	mul	w0, w2, w0
    52f4:	eor	w0, w1, w0
    52f8:	str	w0, [sp, #52]
    52fc:	ldr	x0, [sp, #64]
    5300:	cmp	x0, #0xc
    5304:	b.eq	5420 <zaphod32_hash_with_state+0x184>  // b.none
    5308:	ldr	x0, [sp, #64]
    530c:	cmp	x0, #0xc
    5310:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    5314:	ldr	x0, [sp, #64]
    5318:	cmp	x0, #0xb
    531c:	b.eq	543c <zaphod32_hash_with_state+0x1a0>  // b.none
    5320:	ldr	x0, [sp, #64]
    5324:	cmp	x0, #0xb
    5328:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    532c:	ldr	x0, [sp, #64]
    5330:	cmp	x0, #0xa
    5334:	b.eq	5458 <zaphod32_hash_with_state+0x1bc>  // b.none
    5338:	ldr	x0, [sp, #64]
    533c:	cmp	x0, #0xa
    5340:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    5344:	ldr	x0, [sp, #64]
    5348:	cmp	x0, #0x9
    534c:	b.eq	5538 <zaphod32_hash_with_state+0x29c>  // b.none
    5350:	ldr	x0, [sp, #64]
    5354:	cmp	x0, #0x9
    5358:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    535c:	ldr	x0, [sp, #64]
    5360:	cmp	x0, #0x8
    5364:	b.eq	5554 <zaphod32_hash_with_state+0x2b8>  // b.none
    5368:	ldr	x0, [sp, #64]
    536c:	cmp	x0, #0x8
    5370:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    5374:	ldr	x0, [sp, #64]
    5378:	cmp	x0, #0x7
    537c:	b.eq	5604 <zaphod32_hash_with_state+0x368>  // b.none
    5380:	ldr	x0, [sp, #64]
    5384:	cmp	x0, #0x7
    5388:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    538c:	ldr	x0, [sp, #64]
    5390:	cmp	x0, #0x6
    5394:	b.eq	5620 <zaphod32_hash_with_state+0x384>  // b.none
    5398:	ldr	x0, [sp, #64]
    539c:	cmp	x0, #0x6
    53a0:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    53a4:	ldr	x0, [sp, #64]
    53a8:	cmp	x0, #0x5
    53ac:	b.eq	56a8 <zaphod32_hash_with_state+0x40c>  // b.none
    53b0:	ldr	x0, [sp, #64]
    53b4:	cmp	x0, #0x5
    53b8:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    53bc:	ldr	x0, [sp, #64]
    53c0:	cmp	x0, #0x4
    53c4:	b.eq	56c4 <zaphod32_hash_with_state+0x428>  // b.none
    53c8:	ldr	x0, [sp, #64]
    53cc:	cmp	x0, #0x4
    53d0:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    53d4:	ldr	x0, [sp, #64]
    53d8:	cmp	x0, #0x3
    53dc:	b.eq	571c <zaphod32_hash_with_state+0x480>  // b.none
    53e0:	ldr	x0, [sp, #64]
    53e4:	cmp	x0, #0x3
    53e8:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    53ec:	ldr	x0, [sp, #64]
    53f0:	cmp	x0, #0x2
    53f4:	b.eq	5738 <zaphod32_hash_with_state+0x49c>  // b.none
    53f8:	ldr	x0, [sp, #64]
    53fc:	cmp	x0, #0x2
    5400:	b.hi	58a0 <zaphod32_hash_with_state+0x604>  // b.pmore
    5404:	ldr	x0, [sp, #64]
    5408:	cmp	x0, #0x0
    540c:	b.eq	5784 <zaphod32_hash_with_state+0x4e8>  // b.none
    5410:	ldr	x0, [sp, #64]
    5414:	cmp	x0, #0x1
    5418:	b.eq	5768 <zaphod32_hash_with_state+0x4cc>  // b.none
    541c:	b	58a0 <zaphod32_hash_with_state+0x604>
    5420:	ldr	x0, [sp, #16]
    5424:	add	x0, x0, #0xb
    5428:	ldrb	w0, [x0]
    542c:	lsl	w0, w0, #24
    5430:	ldr	w1, [sp, #52]
    5434:	add	w0, w1, w0
    5438:	str	w0, [sp, #52]
    543c:	ldr	x0, [sp, #16]
    5440:	add	x0, x0, #0xa
    5444:	ldrb	w0, [x0]
    5448:	lsl	w0, w0, #16
    544c:	ldr	w1, [sp, #52]
    5450:	add	w0, w1, w0
    5454:	str	w0, [sp, #52]
    5458:	ldr	x0, [sp, #16]
    545c:	add	x0, x0, #0x8
    5460:	ldrb	w0, [x0]
    5464:	mov	w1, w0
    5468:	ldr	x0, [sp, #16]
    546c:	add	x0, x0, #0x9
    5470:	ldrb	w0, [x0]
    5474:	lsl	w0, w0, #8
    5478:	orr	w0, w1, w0
    547c:	ldr	w1, [sp, #52]
    5480:	add	w0, w1, w0
    5484:	str	w0, [sp, #52]
    5488:	ldr	x0, [sp, #16]
    548c:	add	x0, x0, #0x4
    5490:	ldrb	w0, [x0]
    5494:	mov	w1, w0
    5498:	ldr	x0, [sp, #16]
    549c:	add	x0, x0, #0x5
    54a0:	ldrb	w0, [x0]
    54a4:	lsl	w0, w0, #8
    54a8:	orr	w1, w1, w0
    54ac:	ldr	x0, [sp, #16]
    54b0:	add	x0, x0, #0x6
    54b4:	ldrb	w0, [x0]
    54b8:	lsl	w0, w0, #16
    54bc:	orr	w1, w1, w0
    54c0:	ldr	x0, [sp, #16]
    54c4:	add	x0, x0, #0x7
    54c8:	ldrb	w0, [x0]
    54cc:	lsl	w0, w0, #24
    54d0:	orr	w0, w1, w0
    54d4:	ldr	w1, [sp, #48]
    54d8:	sub	w0, w1, w0
    54dc:	str	w0, [sp, #48]
    54e0:	ldr	x0, [sp, #16]
    54e4:	ldrb	w0, [x0]
    54e8:	mov	w1, w0
    54ec:	ldr	x0, [sp, #16]
    54f0:	add	x0, x0, #0x1
    54f4:	ldrb	w0, [x0]
    54f8:	lsl	w0, w0, #8
    54fc:	orr	w1, w1, w0
    5500:	ldr	x0, [sp, #16]
    5504:	add	x0, x0, #0x2
    5508:	ldrb	w0, [x0]
    550c:	lsl	w0, w0, #16
    5510:	orr	w1, w1, w0
    5514:	ldr	x0, [sp, #16]
    5518:	add	x0, x0, #0x3
    551c:	ldrb	w0, [x0]
    5520:	lsl	w0, w0, #24
    5524:	orr	w0, w1, w0
    5528:	ldr	w1, [sp, #44]
    552c:	add	w0, w1, w0
    5530:	str	w0, [sp, #44]
    5534:	b	5b3c <zaphod32_hash_with_state+0x8a0>
    5538:	ldr	x0, [sp, #16]
    553c:	add	x0, x0, #0x8
    5540:	ldrb	w0, [x0]
    5544:	mov	w1, w0
    5548:	ldr	w0, [sp, #52]
    554c:	add	w0, w0, w1
    5550:	str	w0, [sp, #52]
    5554:	ldr	x0, [sp, #16]
    5558:	add	x0, x0, #0x4
    555c:	ldrb	w0, [x0]
    5560:	mov	w1, w0
    5564:	ldr	x0, [sp, #16]
    5568:	add	x0, x0, #0x5
    556c:	ldrb	w0, [x0]
    5570:	lsl	w0, w0, #8
    5574:	orr	w1, w1, w0
    5578:	ldr	x0, [sp, #16]
    557c:	add	x0, x0, #0x6
    5580:	ldrb	w0, [x0]
    5584:	lsl	w0, w0, #16
    5588:	orr	w1, w1, w0
    558c:	ldr	x0, [sp, #16]
    5590:	add	x0, x0, #0x7
    5594:	ldrb	w0, [x0]
    5598:	lsl	w0, w0, #24
    559c:	orr	w0, w1, w0
    55a0:	ldr	w1, [sp, #48]
    55a4:	sub	w0, w1, w0
    55a8:	str	w0, [sp, #48]
    55ac:	ldr	x0, [sp, #16]
    55b0:	ldrb	w0, [x0]
    55b4:	mov	w1, w0
    55b8:	ldr	x0, [sp, #16]
    55bc:	add	x0, x0, #0x1
    55c0:	ldrb	w0, [x0]
    55c4:	lsl	w0, w0, #8
    55c8:	orr	w1, w1, w0
    55cc:	ldr	x0, [sp, #16]
    55d0:	add	x0, x0, #0x2
    55d4:	ldrb	w0, [x0]
    55d8:	lsl	w0, w0, #16
    55dc:	orr	w1, w1, w0
    55e0:	ldr	x0, [sp, #16]
    55e4:	add	x0, x0, #0x3
    55e8:	ldrb	w0, [x0]
    55ec:	lsl	w0, w0, #24
    55f0:	orr	w0, w1, w0
    55f4:	ldr	w1, [sp, #44]
    55f8:	add	w0, w1, w0
    55fc:	str	w0, [sp, #44]
    5600:	b	5b3c <zaphod32_hash_with_state+0x8a0>
    5604:	ldr	x0, [sp, #16]
    5608:	add	x0, x0, #0x6
    560c:	ldrb	w0, [x0]
    5610:	mov	w1, w0
    5614:	ldr	w0, [sp, #52]
    5618:	add	w0, w0, w1
    561c:	str	w0, [sp, #52]
    5620:	ldr	x0, [sp, #16]
    5624:	add	x0, x0, #0x4
    5628:	ldrb	w0, [x0]
    562c:	mov	w1, w0
    5630:	ldr	x0, [sp, #16]
    5634:	add	x0, x0, #0x5
    5638:	ldrb	w0, [x0]
    563c:	lsl	w0, w0, #8
    5640:	orr	w0, w1, w0
    5644:	ldr	w1, [sp, #44]
    5648:	add	w0, w1, w0
    564c:	str	w0, [sp, #44]
    5650:	ldr	x0, [sp, #16]
    5654:	ldrb	w0, [x0]
    5658:	mov	w1, w0
    565c:	ldr	x0, [sp, #16]
    5660:	add	x0, x0, #0x1
    5664:	ldrb	w0, [x0]
    5668:	lsl	w0, w0, #8
    566c:	orr	w1, w1, w0
    5670:	ldr	x0, [sp, #16]
    5674:	add	x0, x0, #0x2
    5678:	ldrb	w0, [x0]
    567c:	lsl	w0, w0, #16
    5680:	orr	w1, w1, w0
    5684:	ldr	x0, [sp, #16]
    5688:	add	x0, x0, #0x3
    568c:	ldrb	w0, [x0]
    5690:	lsl	w0, w0, #24
    5694:	orr	w0, w1, w0
    5698:	ldr	w1, [sp, #48]
    569c:	sub	w0, w1, w0
    56a0:	str	w0, [sp, #48]
    56a4:	b	5b3c <zaphod32_hash_with_state+0x8a0>
    56a8:	ldr	x0, [sp, #16]
    56ac:	add	x0, x0, #0x4
    56b0:	ldrb	w0, [x0]
    56b4:	mov	w1, w0
    56b8:	ldr	w0, [sp, #44]
    56bc:	add	w0, w0, w1
    56c0:	str	w0, [sp, #44]
    56c4:	ldr	x0, [sp, #16]
    56c8:	ldrb	w0, [x0]
    56cc:	mov	w1, w0
    56d0:	ldr	x0, [sp, #16]
    56d4:	add	x0, x0, #0x1
    56d8:	ldrb	w0, [x0]
    56dc:	lsl	w0, w0, #8
    56e0:	orr	w1, w1, w0
    56e4:	ldr	x0, [sp, #16]
    56e8:	add	x0, x0, #0x2
    56ec:	ldrb	w0, [x0]
    56f0:	lsl	w0, w0, #16
    56f4:	orr	w1, w1, w0
    56f8:	ldr	x0, [sp, #16]
    56fc:	add	x0, x0, #0x3
    5700:	ldrb	w0, [x0]
    5704:	lsl	w0, w0, #24
    5708:	orr	w0, w1, w0
    570c:	ldr	w1, [sp, #48]
    5710:	sub	w0, w1, w0
    5714:	str	w0, [sp, #48]
    5718:	b	5b3c <zaphod32_hash_with_state+0x8a0>
    571c:	ldr	x0, [sp, #16]
    5720:	add	x0, x0, #0x2
    5724:	ldrb	w0, [x0]
    5728:	mov	w1, w0
    572c:	ldr	w0, [sp, #52]
    5730:	add	w0, w0, w1
    5734:	str	w0, [sp, #52]
    5738:	ldr	x0, [sp, #16]
    573c:	ldrb	w0, [x0]
    5740:	mov	w1, w0
    5744:	ldr	x0, [sp, #16]
    5748:	add	x0, x0, #0x1
    574c:	ldrb	w0, [x0]
    5750:	lsl	w0, w0, #8
    5754:	orr	w0, w1, w0
    5758:	ldr	w1, [sp, #44]
    575c:	add	w0, w1, w0
    5760:	str	w0, [sp, #44]
    5764:	b	5794 <zaphod32_hash_with_state+0x4f8>
    5768:	ldr	x0, [sp, #16]
    576c:	ldrb	w0, [x0]
    5770:	mov	w1, w0
    5774:	ldr	w0, [sp, #44]
    5778:	add	w0, w0, w1
    577c:	str	w0, [sp, #44]
    5780:	b	5794 <zaphod32_hash_with_state+0x4f8>
    5784:	ldr	w0, [sp, #52]
    5788:	eor	w0, w0, #0xff
    578c:	str	w0, [sp, #52]
    5790:	nop
    5794:	ldr	w1, [sp, #44]
    5798:	ldr	w0, [sp, #52]
    579c:	sub	w0, w1, w0
    57a0:	str	w0, [sp, #44]
    57a4:	ldr	w0, [sp, #52]
    57a8:	ror	w0, w0, #24
    57ac:	ldr	w1, [sp, #44]
    57b0:	eor	w0, w1, w0
    57b4:	str	w0, [sp, #52]
    57b8:	ldr	w0, [sp, #44]
    57bc:	ror	w0, w0, #16
    57c0:	ldr	w1, [sp, #52]
    57c4:	add	w0, w1, w0
    57c8:	str	w0, [sp, #44]
    57cc:	ldr	w1, [sp, #52]
    57d0:	ldr	w0, [sp, #44]
    57d4:	add	w0, w1, w0
    57d8:	str	w0, [sp, #52]
    57dc:	ldr	w0, [sp, #44]
    57e0:	lsr	w0, w0, #9
    57e4:	ldr	w1, [sp, #44]
    57e8:	add	w0, w1, w0
    57ec:	str	w0, [sp, #44]
    57f0:	ldr	w1, [sp, #44]
    57f4:	ldr	w0, [sp, #52]
    57f8:	add	w0, w1, w0
    57fc:	str	w0, [sp, #44]
    5800:	ldr	w1, [sp, #52]
    5804:	ldr	w0, [sp, #44]
    5808:	eor	w0, w1, w0
    580c:	str	w0, [sp, #52]
    5810:	ldr	w0, [sp, #52]
    5814:	lsl	w0, w0, #4
    5818:	ldr	w1, [sp, #52]
    581c:	add	w0, w1, w0
    5820:	str	w0, [sp, #52]
    5824:	ldr	w1, [sp, #44]
    5828:	ldr	w0, [sp, #52]
    582c:	sub	w0, w1, w0
    5830:	str	w0, [sp, #44]
    5834:	ldr	w0, [sp, #52]
    5838:	ror	w0, w0, #8
    583c:	ldr	w1, [sp, #44]
    5840:	eor	w0, w1, w0
    5844:	str	w0, [sp, #52]
    5848:	ldr	w0, [sp, #44]
    584c:	ror	w0, w0, #16
    5850:	ldr	w1, [sp, #52]
    5854:	eor	w0, w1, w0
    5858:	str	w0, [sp, #44]
    585c:	ldr	w0, [sp, #52]
    5860:	ror	w0, w0, #22
    5864:	ldr	w1, [sp, #44]
    5868:	add	w0, w1, w0
    586c:	str	w0, [sp, #52]
    5870:	ldr	w0, [sp, #44]
    5874:	ror	w0, w0, #30
    5878:	ldr	w1, [sp, #52]
    587c:	add	w0, w1, w0
    5880:	str	w0, [sp, #44]
    5884:	ldr	w0, [sp, #52]
    5888:	ror	w0, w0, #12
    588c:	str	w0, [sp, #52]
    5890:	ldr	w1, [sp, #44]
    5894:	ldr	w0, [sp, #52]
    5898:	eor	w0, w1, w0
    589c:	b	5c88 <zaphod32_hash_with_state+0x9ec>
    58a0:	nop
    58a4:	ldr	x0, [sp, #8]
    58a8:	and	x0, x0, #0x7
    58ac:	str	x0, [sp, #64]
    58b0:	ldr	x1, [sp, #8]
    58b4:	ldr	x0, [sp, #64]
    58b8:	sub	x0, x1, x0
    58bc:	ldr	x1, [sp, #16]
    58c0:	add	x0, x1, x0
    58c4:	str	x0, [sp, #72]
    58c8:	ldr	x0, [sp, #16]
    58cc:	ldrb	w0, [x0]
    58d0:	mov	w1, w0
    58d4:	ldr	x0, [sp, #16]
    58d8:	add	x0, x0, #0x1
    58dc:	ldrb	w0, [x0]
    58e0:	lsl	w0, w0, #8
    58e4:	orr	w1, w1, w0
    58e8:	ldr	x0, [sp, #16]
    58ec:	add	x0, x0, #0x2
    58f0:	ldrb	w0, [x0]
    58f4:	lsl	w0, w0, #16
    58f8:	orr	w1, w1, w0
    58fc:	ldr	x0, [sp, #16]
    5900:	add	x0, x0, #0x3
    5904:	ldrb	w0, [x0]
    5908:	lsl	w0, w0, #24
    590c:	orr	w0, w1, w0
    5910:	ldr	w1, [sp, #48]
    5914:	sub	w0, w1, w0
    5918:	str	w0, [sp, #48]
    591c:	ldr	x0, [sp, #16]
    5920:	add	x0, x0, #0x4
    5924:	ldrb	w0, [x0]
    5928:	mov	w1, w0
    592c:	ldr	x0, [sp, #16]
    5930:	add	x0, x0, #0x5
    5934:	ldrb	w0, [x0]
    5938:	lsl	w0, w0, #8
    593c:	orr	w1, w1, w0
    5940:	ldr	x0, [sp, #16]
    5944:	add	x0, x0, #0x6
    5948:	ldrb	w0, [x0]
    594c:	lsl	w0, w0, #16
    5950:	orr	w1, w1, w0
    5954:	ldr	x0, [sp, #16]
    5958:	add	x0, x0, #0x7
    595c:	ldrb	w0, [x0]
    5960:	lsl	w0, w0, #24
    5964:	orr	w0, w1, w0
    5968:	ldr	w1, [sp, #44]
    596c:	add	w0, w1, w0
    5970:	str	w0, [sp, #44]
    5974:	ldr	w0, [sp, #44]
    5978:	ror	w1, w0, #16
    597c:	ldr	w0, [sp, #52]
    5980:	sub	w0, w1, w0
    5984:	str	w0, [sp, #44]
    5988:	ldr	w0, [sp, #48]
    598c:	ror	w0, w0, #13
    5990:	ldr	w1, [sp, #52]
    5994:	eor	w0, w1, w0
    5998:	str	w0, [sp, #48]
    599c:	ldr	w0, [sp, #52]
    59a0:	ror	w0, w0, #15
    59a4:	ldr	w1, [sp, #48]
    59a8:	add	w0, w1, w0
    59ac:	str	w0, [sp, #52]
    59b0:	ldr	w0, [sp, #44]
    59b4:	ror	w0, w0, #2
    59b8:	ldr	w1, [sp, #48]
    59bc:	add	w0, w1, w0
    59c0:	str	w0, [sp, #44]
    59c4:	ldr	w0, [sp, #48]
    59c8:	ror	w1, w0, #17
    59cc:	ldr	w0, [sp, #44]
    59d0:	sub	w0, w1, w0
    59d4:	str	w0, [sp, #48]
    59d8:	ldr	w0, [sp, #52]
    59dc:	ror	w0, w0, #7
    59e0:	ldr	w1, [sp, #44]
    59e4:	eor	w0, w1, w0
    59e8:	str	w0, [sp, #52]
    59ec:	ldr	x0, [sp, #16]
    59f0:	add	x0, x0, #0x8
    59f4:	str	x0, [sp, #16]
    59f8:	ldr	x1, [sp, #16]
    59fc:	ldr	x0, [sp, #72]
    5a00:	cmp	x1, x0
    5a04:	b.cc	58c8 <zaphod32_hash_with_state+0x62c>  // b.lo, b.ul, b.last
    5a08:	ldr	x0, [sp, #64]
    5a0c:	cmp	x0, #0x3
    5a10:	b.ls	5a74 <zaphod32_hash_with_state+0x7d8>  // b.plast
    5a14:	ldr	x0, [sp, #16]
    5a18:	ldrb	w0, [x0]
    5a1c:	mov	w1, w0
    5a20:	ldr	x0, [sp, #16]
    5a24:	add	x0, x0, #0x1
    5a28:	ldrb	w0, [x0]
    5a2c:	lsl	w0, w0, #8
    5a30:	orr	w1, w1, w0
    5a34:	ldr	x0, [sp, #16]
    5a38:	add	x0, x0, #0x2
    5a3c:	ldrb	w0, [x0]
    5a40:	lsl	w0, w0, #16
    5a44:	orr	w1, w1, w0
    5a48:	ldr	x0, [sp, #16]
    5a4c:	add	x0, x0, #0x3
    5a50:	ldrb	w0, [x0]
    5a54:	lsl	w0, w0, #24
    5a58:	orr	w0, w1, w0
    5a5c:	ldr	w1, [sp, #48]
    5a60:	sub	w0, w1, w0
    5a64:	str	w0, [sp, #48]
    5a68:	ldr	x0, [sp, #16]
    5a6c:	add	x0, x0, #0x4
    5a70:	str	x0, [sp, #16]
    5a74:	ldr	x0, [sp, #8]
    5a78:	lsl	w0, w0, #24
    5a7c:	ldr	w1, [sp, #44]
    5a80:	add	w0, w1, w0
    5a84:	str	w0, [sp, #44]
    5a88:	ldr	x0, [sp, #64]
    5a8c:	and	x0, x0, #0x3
    5a90:	cmp	x0, #0x3
    5a94:	b.eq	5ac4 <zaphod32_hash_with_state+0x828>  // b.none
    5a98:	cmp	x0, #0x3
    5a9c:	b.hi	5b3c <zaphod32_hash_with_state+0x8a0>  // b.pmore
    5aa0:	cmp	x0, #0x2
    5aa4:	b.eq	5ae0 <zaphod32_hash_with_state+0x844>  // b.none
    5aa8:	cmp	x0, #0x2
    5aac:	b.hi	5b3c <zaphod32_hash_with_state+0x8a0>  // b.pmore
    5ab0:	cmp	x0, #0x0
    5ab4:	b.eq	5b2c <zaphod32_hash_with_state+0x890>  // b.none
    5ab8:	cmp	x0, #0x1
    5abc:	b.eq	5b10 <zaphod32_hash_with_state+0x874>  // b.none
    5ac0:	b	5b3c <zaphod32_hash_with_state+0x8a0>
    5ac4:	ldr	x0, [sp, #16]
    5ac8:	add	x0, x0, #0x2
    5acc:	ldrb	w0, [x0]
    5ad0:	mov	w1, w0
    5ad4:	ldr	w0, [sp, #52]
    5ad8:	add	w0, w0, w1
    5adc:	str	w0, [sp, #52]
    5ae0:	ldr	x0, [sp, #16]
    5ae4:	ldrb	w0, [x0]
    5ae8:	mov	w1, w0
    5aec:	ldr	x0, [sp, #16]
    5af0:	add	x0, x0, #0x1
    5af4:	ldrb	w0, [x0]
    5af8:	lsl	w0, w0, #8
    5afc:	orr	w0, w1, w0
    5b00:	ldr	w1, [sp, #44]
    5b04:	add	w0, w1, w0
    5b08:	str	w0, [sp, #44]
    5b0c:	b	5b3c <zaphod32_hash_with_state+0x8a0>
    5b10:	ldr	x0, [sp, #16]
    5b14:	ldrb	w0, [x0]
    5b18:	mov	w1, w0
    5b1c:	ldr	w0, [sp, #44]
    5b20:	add	w0, w0, w1
    5b24:	str	w0, [sp, #44]
    5b28:	b	5b3c <zaphod32_hash_with_state+0x8a0>
    5b2c:	ldr	w0, [sp, #52]
    5b30:	eor	w0, w0, #0xff
    5b34:	str	w0, [sp, #52]
    5b38:	nop
    5b3c:	ldr	w1, [sp, #52]
    5b40:	ldr	w0, [sp, #44]
    5b44:	add	w0, w1, w0
    5b48:	str	w0, [sp, #52]
    5b4c:	ldr	w1, [sp, #48]
    5b50:	ldr	w0, [sp, #52]
    5b54:	sub	w0, w1, w0
    5b58:	str	w0, [sp, #48]
    5b5c:	ldr	w0, [sp, #48]
    5b60:	ror	w0, w0, #26
    5b64:	str	w0, [sp, #48]
    5b68:	ldr	w1, [sp, #52]
    5b6c:	ldr	w0, [sp, #48]
    5b70:	eor	w0, w1, w0
    5b74:	str	w0, [sp, #52]
    5b78:	ldr	w0, [sp, #52]
    5b7c:	ror	w0, w0, #4
    5b80:	str	w0, [sp, #52]
    5b84:	ldr	w1, [sp, #48]
    5b88:	ldr	w0, [sp, #52]
    5b8c:	eor	w0, w1, w0
    5b90:	str	w0, [sp, #48]
    5b94:	ldr	w1, [sp, #44]
    5b98:	ldr	w0, [sp, #48]
    5b9c:	add	w0, w1, w0
    5ba0:	str	w0, [sp, #44]
    5ba4:	ldr	w0, [sp, #48]
    5ba8:	ror	w0, w0, #8
    5bac:	str	w0, [sp, #48]
    5bb0:	ldr	w1, [sp, #52]
    5bb4:	ldr	w0, [sp, #48]
    5bb8:	add	w0, w1, w0
    5bbc:	str	w0, [sp, #52]
    5bc0:	ldr	w0, [sp, #52]
    5bc4:	ror	w0, w0, #14
    5bc8:	ldr	w1, [sp, #48]
    5bcc:	add	w0, w1, w0
    5bd0:	str	w0, [sp, #52]
    5bd4:	ldr	w1, [sp, #44]
    5bd8:	ldr	w0, [sp, #52]
    5bdc:	eor	w0, w1, w0
    5be0:	str	w0, [sp, #44]
    5be4:	ldr	w0, [sp, #44]
    5be8:	ror	w0, w0, #12
    5bec:	str	w0, [sp, #44]
    5bf0:	ldr	w1, [sp, #52]
    5bf4:	ldr	w0, [sp, #44]
    5bf8:	add	w0, w1, w0
    5bfc:	str	w0, [sp, #52]
    5c00:	ldr	w1, [sp, #48]
    5c04:	ldr	w0, [sp, #52]
    5c08:	eor	w0, w1, w0
    5c0c:	str	w0, [sp, #48]
    5c10:	ldr	w1, [sp, #44]
    5c14:	ldr	w0, [sp, #48]
    5c18:	add	w0, w1, w0
    5c1c:	str	w0, [sp, #44]
    5c20:	ldr	w0, [sp, #44]
    5c24:	ror	w0, w0, #27
    5c28:	str	w0, [sp, #44]
    5c2c:	ldr	w1, [sp, #52]
    5c30:	ldr	w0, [sp, #44]
    5c34:	add	w0, w1, w0
    5c38:	str	w0, [sp, #52]
    5c3c:	ldr	w0, [sp, #52]
    5c40:	ror	w0, w0, #10
    5c44:	str	w0, [sp, #52]
    5c48:	ldr	w1, [sp, #44]
    5c4c:	ldr	w0, [sp, #48]
    5c50:	sub	w0, w1, w0
    5c54:	str	w0, [sp, #44]
    5c58:	ldr	w1, [sp, #48]
    5c5c:	ldr	w0, [sp, #52]
    5c60:	sub	w0, w1, w0
    5c64:	str	w0, [sp, #48]
    5c68:	ldr	w0, [sp, #48]
    5c6c:	ror	w0, w0, #15
    5c70:	str	w0, [sp, #48]
    5c74:	ldr	w1, [sp, #44]
    5c78:	ldr	w0, [sp, #48]
    5c7c:	eor	w1, w1, w0
    5c80:	ldr	w0, [sp, #52]
    5c84:	eor	w0, w1, w0
    5c88:	add	sp, sp, #0x50
    5c8c:	ret

0000000000005c90 <sbox32_hash_with_state>:
    5c90:	stp	x29, x30, [sp, #-64]!
    5c94:	mov	x29, sp
    5c98:	str	x0, [sp, #40]
    5c9c:	str	x1, [sp, #32]
    5ca0:	str	x2, [sp, #24]
    5ca4:	ldr	x0, [sp, #40]
    5ca8:	str	x0, [sp, #56]
    5cac:	ldr	x0, [sp, #56]
    5cb0:	ldr	w0, [x0]
    5cb4:	str	w0, [sp, #52]
    5cb8:	ldr	x0, [sp, #24]
    5cbc:	add	x0, x0, #0x0
    5cc0:	cmp	x0, #0x18
    5cc4:	b.hi	5ce8 <sbox32_hash_with_state+0x58>  // b.pmore
    5cc8:	cmp	w0, #0x18
    5ccc:	b.hi	5ce8 <sbox32_hash_with_state+0x58>  // b.pmore
    5cd0:	adrp	x1, 18000 <boot_B+0x23d8>
    5cd4:	add	x1, x1, #0x7e0
    5cd8:	ldr	w0, [x1, w0, uxtw #2]
    5cdc:	adr	x1, 5ce8 <sbox32_hash_with_state+0x58>
    5ce0:	add	x0, x1, w0, sxtw #2
    5ce4:	br	x0
    5ce8:	ldr	x2, [sp, #24]
    5cec:	ldr	x1, [sp, #32]
    5cf0:	ldr	x0, [sp, #40]
    5cf4:	bl	529c <zaphod32_hash_with_state>
    5cf8:	b	61bc <sbox32_hash_with_state+0x52c>
    5cfc:	ldr	x0, [sp, #32]
    5d00:	add	x0, x0, #0x17
    5d04:	ldrb	w0, [x0]
    5d08:	mov	w1, w0
    5d0c:	mov	w0, #0x1701                	// #5889
    5d10:	add	w0, w1, w0
    5d14:	sxtw	x0, w0
    5d18:	lsl	x0, x0, #2
    5d1c:	ldr	x1, [sp, #56]
    5d20:	add	x0, x1, x0
    5d24:	ldr	w0, [x0]
    5d28:	ldr	w1, [sp, #52]
    5d2c:	eor	w0, w1, w0
    5d30:	str	w0, [sp, #52]
    5d34:	ldr	x0, [sp, #32]
    5d38:	add	x0, x0, #0x16
    5d3c:	ldrb	w0, [x0]
    5d40:	mov	w1, w0
    5d44:	mov	w0, #0x1601                	// #5633
    5d48:	add	w0, w1, w0
    5d4c:	sxtw	x0, w0
    5d50:	lsl	x0, x0, #2
    5d54:	ldr	x1, [sp, #56]
    5d58:	add	x0, x1, x0
    5d5c:	ldr	w0, [x0]
    5d60:	ldr	w1, [sp, #52]
    5d64:	eor	w0, w1, w0
    5d68:	str	w0, [sp, #52]
    5d6c:	ldr	x0, [sp, #32]
    5d70:	add	x0, x0, #0x15
    5d74:	ldrb	w0, [x0]
    5d78:	mov	w1, w0
    5d7c:	mov	w0, #0x1501                	// #5377
    5d80:	add	w0, w1, w0
    5d84:	sxtw	x0, w0
    5d88:	lsl	x0, x0, #2
    5d8c:	ldr	x1, [sp, #56]
    5d90:	add	x0, x1, x0
    5d94:	ldr	w0, [x0]
    5d98:	ldr	w1, [sp, #52]
    5d9c:	eor	w0, w1, w0
    5da0:	str	w0, [sp, #52]
    5da4:	ldr	x0, [sp, #32]
    5da8:	add	x0, x0, #0x14
    5dac:	ldrb	w0, [x0]
    5db0:	mov	w1, w0
    5db4:	mov	w0, #0x1401                	// #5121
    5db8:	add	w0, w1, w0
    5dbc:	sxtw	x0, w0
    5dc0:	lsl	x0, x0, #2
    5dc4:	ldr	x1, [sp, #56]
    5dc8:	add	x0, x1, x0
    5dcc:	ldr	w0, [x0]
    5dd0:	ldr	w1, [sp, #52]
    5dd4:	eor	w0, w1, w0
    5dd8:	str	w0, [sp, #52]
    5ddc:	ldr	x0, [sp, #32]
    5de0:	add	x0, x0, #0x13
    5de4:	ldrb	w0, [x0]
    5de8:	mov	w1, w0
    5dec:	mov	w0, #0x1301                	// #4865
    5df0:	add	w0, w1, w0
    5df4:	sxtw	x0, w0
    5df8:	lsl	x0, x0, #2
    5dfc:	ldr	x1, [sp, #56]
    5e00:	add	x0, x1, x0
    5e04:	ldr	w0, [x0]
    5e08:	ldr	w1, [sp, #52]
    5e0c:	eor	w0, w1, w0
    5e10:	str	w0, [sp, #52]
    5e14:	ldr	x0, [sp, #32]
    5e18:	add	x0, x0, #0x12
    5e1c:	ldrb	w0, [x0]
    5e20:	mov	w1, w0
    5e24:	mov	w0, #0x1201                	// #4609
    5e28:	add	w0, w1, w0
    5e2c:	sxtw	x0, w0
    5e30:	lsl	x0, x0, #2
    5e34:	ldr	x1, [sp, #56]
    5e38:	add	x0, x1, x0
    5e3c:	ldr	w0, [x0]
    5e40:	ldr	w1, [sp, #52]
    5e44:	eor	w0, w1, w0
    5e48:	str	w0, [sp, #52]
    5e4c:	ldr	x0, [sp, #32]
    5e50:	add	x0, x0, #0x11
    5e54:	ldrb	w0, [x0]
    5e58:	mov	w1, w0
    5e5c:	mov	w0, #0x1101                	// #4353
    5e60:	add	w0, w1, w0
    5e64:	sxtw	x0, w0
    5e68:	lsl	x0, x0, #2
    5e6c:	ldr	x1, [sp, #56]
    5e70:	add	x0, x1, x0
    5e74:	ldr	w0, [x0]
    5e78:	ldr	w1, [sp, #52]
    5e7c:	eor	w0, w1, w0
    5e80:	str	w0, [sp, #52]
    5e84:	ldr	x0, [sp, #32]
    5e88:	add	x0, x0, #0x10
    5e8c:	ldrb	w0, [x0]
    5e90:	mov	w1, w0
    5e94:	mov	w0, #0x1001                	// #4097
    5e98:	add	w0, w1, w0
    5e9c:	sxtw	x0, w0
    5ea0:	lsl	x0, x0, #2
    5ea4:	ldr	x1, [sp, #56]
    5ea8:	add	x0, x1, x0
    5eac:	ldr	w0, [x0]
    5eb0:	ldr	w1, [sp, #52]
    5eb4:	eor	w0, w1, w0
    5eb8:	str	w0, [sp, #52]
    5ebc:	ldr	x0, [sp, #32]
    5ec0:	add	x0, x0, #0xf
    5ec4:	ldrb	w0, [x0]
    5ec8:	add	w0, w0, #0xf01
    5ecc:	sxtw	x0, w0
    5ed0:	lsl	x0, x0, #2
    5ed4:	ldr	x1, [sp, #56]
    5ed8:	add	x0, x1, x0
    5edc:	ldr	w0, [x0]
    5ee0:	ldr	w1, [sp, #52]
    5ee4:	eor	w0, w1, w0
    5ee8:	str	w0, [sp, #52]
    5eec:	ldr	x0, [sp, #32]
    5ef0:	add	x0, x0, #0xe
    5ef4:	ldrb	w0, [x0]
    5ef8:	add	w0, w0, #0xe01
    5efc:	sxtw	x0, w0
    5f00:	lsl	x0, x0, #2
    5f04:	ldr	x1, [sp, #56]
    5f08:	add	x0, x1, x0
    5f0c:	ldr	w0, [x0]
    5f10:	ldr	w1, [sp, #52]
    5f14:	eor	w0, w1, w0
    5f18:	str	w0, [sp, #52]
    5f1c:	ldr	x0, [sp, #32]
    5f20:	add	x0, x0, #0xd
    5f24:	ldrb	w0, [x0]
    5f28:	add	w0, w0, #0xd01
    5f2c:	sxtw	x0, w0
    5f30:	lsl	x0, x0, #2
    5f34:	ldr	x1, [sp, #56]
    5f38:	add	x0, x1, x0
    5f3c:	ldr	w0, [x0]
    5f40:	ldr	w1, [sp, #52]
    5f44:	eor	w0, w1, w0
    5f48:	str	w0, [sp, #52]
    5f4c:	ldr	x0, [sp, #32]
    5f50:	add	x0, x0, #0xc
    5f54:	ldrb	w0, [x0]
    5f58:	add	w0, w0, #0xc01
    5f5c:	sxtw	x0, w0
    5f60:	lsl	x0, x0, #2
    5f64:	ldr	x1, [sp, #56]
    5f68:	add	x0, x1, x0
    5f6c:	ldr	w0, [x0]
    5f70:	ldr	w1, [sp, #52]
    5f74:	eor	w0, w1, w0
    5f78:	str	w0, [sp, #52]
    5f7c:	ldr	x0, [sp, #32]
    5f80:	add	x0, x0, #0xb
    5f84:	ldrb	w0, [x0]
    5f88:	add	w0, w0, #0xb01
    5f8c:	sxtw	x0, w0
    5f90:	lsl	x0, x0, #2
    5f94:	ldr	x1, [sp, #56]
    5f98:	add	x0, x1, x0
    5f9c:	ldr	w0, [x0]
    5fa0:	ldr	w1, [sp, #52]
    5fa4:	eor	w0, w1, w0
    5fa8:	str	w0, [sp, #52]
    5fac:	ldr	x0, [sp, #32]
    5fb0:	add	x0, x0, #0xa
    5fb4:	ldrb	w0, [x0]
    5fb8:	add	w0, w0, #0xa01
    5fbc:	sxtw	x0, w0
    5fc0:	lsl	x0, x0, #2
    5fc4:	ldr	x1, [sp, #56]
    5fc8:	add	x0, x1, x0
    5fcc:	ldr	w0, [x0]
    5fd0:	ldr	w1, [sp, #52]
    5fd4:	eor	w0, w1, w0
    5fd8:	str	w0, [sp, #52]
    5fdc:	ldr	x0, [sp, #32]
    5fe0:	add	x0, x0, #0x9
    5fe4:	ldrb	w0, [x0]
    5fe8:	add	w0, w0, #0x901
    5fec:	sxtw	x0, w0
    5ff0:	lsl	x0, x0, #2
    5ff4:	ldr	x1, [sp, #56]
    5ff8:	add	x0, x1, x0
    5ffc:	ldr	w0, [x0]
    6000:	ldr	w1, [sp, #52]
    6004:	eor	w0, w1, w0
    6008:	str	w0, [sp, #52]
    600c:	ldr	x0, [sp, #32]
    6010:	add	x0, x0, #0x8
    6014:	ldrb	w0, [x0]
    6018:	add	w0, w0, #0x801
    601c:	sxtw	x0, w0
    6020:	lsl	x0, x0, #2
    6024:	ldr	x1, [sp, #56]
    6028:	add	x0, x1, x0
    602c:	ldr	w0, [x0]
    6030:	ldr	w1, [sp, #52]
    6034:	eor	w0, w1, w0
    6038:	str	w0, [sp, #52]
    603c:	ldr	x0, [sp, #32]
    6040:	add	x0, x0, #0x7
    6044:	ldrb	w0, [x0]
    6048:	add	w0, w0, #0x701
    604c:	sxtw	x0, w0
    6050:	lsl	x0, x0, #2
    6054:	ldr	x1, [sp, #56]
    6058:	add	x0, x1, x0
    605c:	ldr	w0, [x0]
    6060:	ldr	w1, [sp, #52]
    6064:	eor	w0, w1, w0
    6068:	str	w0, [sp, #52]
    606c:	ldr	x0, [sp, #32]
    6070:	add	x0, x0, #0x6
    6074:	ldrb	w0, [x0]
    6078:	add	w0, w0, #0x601
    607c:	sxtw	x0, w0
    6080:	lsl	x0, x0, #2
    6084:	ldr	x1, [sp, #56]
    6088:	add	x0, x1, x0
    608c:	ldr	w0, [x0]
    6090:	ldr	w1, [sp, #52]
    6094:	eor	w0, w1, w0
    6098:	str	w0, [sp, #52]
    609c:	ldr	x0, [sp, #32]
    60a0:	add	x0, x0, #0x5
    60a4:	ldrb	w0, [x0]
    60a8:	add	w0, w0, #0x501
    60ac:	sxtw	x0, w0
    60b0:	lsl	x0, x0, #2
    60b4:	ldr	x1, [sp, #56]
    60b8:	add	x0, x1, x0
    60bc:	ldr	w0, [x0]
    60c0:	ldr	w1, [sp, #52]
    60c4:	eor	w0, w1, w0
    60c8:	str	w0, [sp, #52]
    60cc:	ldr	x0, [sp, #32]
    60d0:	add	x0, x0, #0x4
    60d4:	ldrb	w0, [x0]
    60d8:	add	w0, w0, #0x401
    60dc:	sxtw	x0, w0
    60e0:	lsl	x0, x0, #2
    60e4:	ldr	x1, [sp, #56]
    60e8:	add	x0, x1, x0
    60ec:	ldr	w0, [x0]
    60f0:	ldr	w1, [sp, #52]
    60f4:	eor	w0, w1, w0
    60f8:	str	w0, [sp, #52]
    60fc:	ldr	x0, [sp, #32]
    6100:	add	x0, x0, #0x3
    6104:	ldrb	w0, [x0]
    6108:	add	w0, w0, #0x301
    610c:	sxtw	x0, w0
    6110:	lsl	x0, x0, #2
    6114:	ldr	x1, [sp, #56]
    6118:	add	x0, x1, x0
    611c:	ldr	w0, [x0]
    6120:	ldr	w1, [sp, #52]
    6124:	eor	w0, w1, w0
    6128:	str	w0, [sp, #52]
    612c:	ldr	x0, [sp, #32]
    6130:	add	x0, x0, #0x2
    6134:	ldrb	w0, [x0]
    6138:	add	w0, w0, #0x201
    613c:	sxtw	x0, w0
    6140:	lsl	x0, x0, #2
    6144:	ldr	x1, [sp, #56]
    6148:	add	x0, x1, x0
    614c:	ldr	w0, [x0]
    6150:	ldr	w1, [sp, #52]
    6154:	eor	w0, w1, w0
    6158:	str	w0, [sp, #52]
    615c:	ldr	x0, [sp, #32]
    6160:	add	x0, x0, #0x1
    6164:	ldrb	w0, [x0]
    6168:	add	w0, w0, #0x101
    616c:	sxtw	x0, w0
    6170:	lsl	x0, x0, #2
    6174:	ldr	x1, [sp, #56]
    6178:	add	x0, x1, x0
    617c:	ldr	w0, [x0]
    6180:	ldr	w1, [sp, #52]
    6184:	eor	w0, w1, w0
    6188:	str	w0, [sp, #52]
    618c:	ldr	x0, [sp, #32]
    6190:	ldrb	w0, [x0]
    6194:	add	w0, w0, #0x1
    6198:	sxtw	x0, w0
    619c:	lsl	x0, x0, #2
    61a0:	ldr	x1, [sp, #56]
    61a4:	add	x0, x1, x0
    61a8:	ldr	w0, [x0]
    61ac:	ldr	w1, [sp, #52]
    61b0:	eor	w0, w1, w0
    61b4:	str	w0, [sp, #52]
    61b8:	ldr	w0, [sp, #52]
    61bc:	ldp	x29, x30, [sp], #64
    61c0:	ret

00000000000061c4 <stadtx_hash_with_state>:
    61c4:	sub	sp, sp, #0x50
    61c8:	str	x0, [sp, #24]
    61cc:	str	x1, [sp, #16]
    61d0:	str	x2, [sp, #8]
    61d4:	ldr	x0, [sp, #24]
    61d8:	str	x0, [sp, #72]
    61dc:	ldr	x0, [sp, #8]
    61e0:	str	x0, [sp, #32]
    61e4:	ldr	x0, [sp, #72]
    61e8:	ldr	x1, [x0]
    61ec:	ldr	x0, [sp, #8]
    61f0:	add	x2, x0, #0x1
    61f4:	mov	x0, #0x514f                	// #20815
    61f8:	movk	x0, #0x1655, lsl #16
    61fc:	movk	x0, #0xf8e, lsl #32
    6200:	movk	x0, #0xb89b, lsl #48
    6204:	mul	x0, x2, x0
    6208:	eor	x0, x1, x0
    620c:	str	x0, [sp, #40]
    6210:	ldr	x0, [sp, #72]
    6214:	add	x0, x0, #0x8
    6218:	ldr	x1, [x0]
    621c:	ldr	x2, [sp, #8]
    6220:	mov	x0, #0x5127                	// #20775
    6224:	movk	x0, #0x11bd, lsl #16
    6228:	movk	x0, #0x7360, lsl #32
    622c:	movk	x0, #0x8c6f, lsl #48
    6230:	mul	x2, x2, x0
    6234:	mov	x0, #0xa24e                	// #41550
    6238:	movk	x0, #0x237a, lsl #16
    623c:	movk	x0, #0xe6c0, lsl #32
    6240:	movk	x0, #0x18de, lsl #48
    6244:	add	x0, x2, x0
    6248:	eor	x0, x1, x0
    624c:	str	x0, [sp, #48]
    6250:	ldr	x0, [sp, #32]
    6254:	cmp	x0, #0x1f
    6258:	b.hi	6860 <stadtx_hash_with_state+0x69c>  // b.pmore
    625c:	ldr	x0, [sp, #32]
    6260:	lsr	x0, x0, #3
    6264:	cmp	x0, #0x3
    6268:	b.eq	6288 <stadtx_hash_with_state+0xc4>  // b.none
    626c:	cmp	x0, #0x3
    6270:	b.hi	65a0 <stadtx_hash_with_state+0x3dc>  // b.pmore
    6274:	cmp	x0, #0x1
    6278:	b.eq	6498 <stadtx_hash_with_state+0x2d4>  // b.none
    627c:	cmp	x0, #0x2
    6280:	b.eq	6390 <stadtx_hash_with_state+0x1cc>  // b.none
    6284:	b	65a0 <stadtx_hash_with_state+0x3dc>
    6288:	ldr	x0, [sp, #16]
    628c:	ldrb	w0, [x0]
    6290:	and	x1, x0, #0xff
    6294:	ldr	x0, [sp, #16]
    6298:	add	x0, x0, #0x1
    629c:	ldrb	w0, [x0]
    62a0:	and	x0, x0, #0xff
    62a4:	lsl	x0, x0, #8
    62a8:	orr	x1, x1, x0
    62ac:	ldr	x0, [sp, #16]
    62b0:	add	x0, x0, #0x2
    62b4:	ldrb	w0, [x0]
    62b8:	and	x0, x0, #0xff
    62bc:	lsl	x0, x0, #16
    62c0:	orr	x1, x1, x0
    62c4:	ldr	x0, [sp, #16]
    62c8:	add	x0, x0, #0x3
    62cc:	ldrb	w0, [x0]
    62d0:	and	x0, x0, #0xff
    62d4:	lsl	x0, x0, #24
    62d8:	orr	x1, x1, x0
    62dc:	ldr	x0, [sp, #16]
    62e0:	add	x0, x0, #0x4
    62e4:	ldrb	w0, [x0]
    62e8:	and	x0, x0, #0xff
    62ec:	lsl	x0, x0, #32
    62f0:	orr	x1, x1, x0
    62f4:	ldr	x0, [sp, #16]
    62f8:	add	x0, x0, #0x5
    62fc:	ldrb	w0, [x0]
    6300:	and	x0, x0, #0xff
    6304:	lsl	x0, x0, #40
    6308:	orr	x1, x1, x0
    630c:	ldr	x0, [sp, #16]
    6310:	add	x0, x0, #0x6
    6314:	ldrb	w0, [x0]
    6318:	and	x0, x0, #0xff
    631c:	lsl	x0, x0, #48
    6320:	orr	x1, x1, x0
    6324:	ldr	x0, [sp, #16]
    6328:	add	x0, x0, #0x7
    632c:	ldrb	w0, [x0]
    6330:	and	x0, x0, #0xff
    6334:	lsl	x0, x0, #56
    6338:	orr	x1, x1, x0
    633c:	mov	x0, #0x323f                	// #12863
    6340:	movk	x0, #0x9628, lsl #16
    6344:	movk	x0, #0x8e1e, lsl #32
    6348:	movk	x0, #0x9c1b, lsl #48
    634c:	mul	x0, x1, x0
    6350:	ldr	x1, [sp, #40]
    6354:	add	x0, x1, x0
    6358:	str	x0, [sp, #40]
    635c:	ldr	x0, [sp, #40]
    6360:	ror	x0, x0, #17
    6364:	ldr	x1, [sp, #48]
    6368:	eor	x0, x1, x0
    636c:	str	x0, [sp, #40]
    6370:	ldr	x0, [sp, #48]
    6374:	ror	x0, x0, #53
    6378:	ldr	x1, [sp, #40]
    637c:	add	x0, x1, x0
    6380:	str	x0, [sp, #48]
    6384:	ldr	x0, [sp, #16]
    6388:	add	x0, x0, #0x8
    638c:	str	x0, [sp, #16]
    6390:	ldr	x0, [sp, #16]
    6394:	ldrb	w0, [x0]
    6398:	and	x1, x0, #0xff
    639c:	ldr	x0, [sp, #16]
    63a0:	add	x0, x0, #0x1
    63a4:	ldrb	w0, [x0]
    63a8:	and	x0, x0, #0xff
    63ac:	lsl	x0, x0, #8
    63b0:	orr	x1, x1, x0
    63b4:	ldr	x0, [sp, #16]
    63b8:	add	x0, x0, #0x2
    63bc:	ldrb	w0, [x0]
    63c0:	and	x0, x0, #0xff
    63c4:	lsl	x0, x0, #16
    63c8:	orr	x1, x1, x0
    63cc:	ldr	x0, [sp, #16]
    63d0:	add	x0, x0, #0x3
    63d4:	ldrb	w0, [x0]
    63d8:	and	x0, x0, #0xff
    63dc:	lsl	x0, x0, #24
    63e0:	orr	x1, x1, x0
    63e4:	ldr	x0, [sp, #16]
    63e8:	add	x0, x0, #0x4
    63ec:	ldrb	w0, [x0]
    63f0:	and	x0, x0, #0xff
    63f4:	lsl	x0, x0, #32
    63f8:	orr	x1, x1, x0
    63fc:	ldr	x0, [sp, #16]
    6400:	add	x0, x0, #0x5
    6404:	ldrb	w0, [x0]
    6408:	and	x0, x0, #0xff
    640c:	lsl	x0, x0, #40
    6410:	orr	x1, x1, x0
    6414:	ldr	x0, [sp, #16]
    6418:	add	x0, x0, #0x6
    641c:	ldrb	w0, [x0]
    6420:	and	x0, x0, #0xff
    6424:	lsl	x0, x0, #48
    6428:	orr	x1, x1, x0
    642c:	ldr	x0, [sp, #16]
    6430:	add	x0, x0, #0x7
    6434:	ldrb	w0, [x0]
    6438:	and	x0, x0, #0xff
    643c:	lsl	x0, x0, #56
    6440:	orr	x1, x1, x0
    6444:	mov	x0, #0x323f                	// #12863
    6448:	movk	x0, #0x9628, lsl #16
    644c:	movk	x0, #0x8e1e, lsl #32
    6450:	movk	x0, #0x9c1b, lsl #48
    6454:	mul	x0, x1, x0
    6458:	ldr	x1, [sp, #40]
    645c:	add	x0, x1, x0
    6460:	str	x0, [sp, #40]
    6464:	ldr	x0, [sp, #40]
    6468:	ror	x0, x0, #17
    646c:	ldr	x1, [sp, #48]
    6470:	eor	x0, x1, x0
    6474:	str	x0, [sp, #40]
    6478:	ldr	x0, [sp, #48]
    647c:	ror	x0, x0, #53
    6480:	ldr	x1, [sp, #40]
    6484:	add	x0, x1, x0
    6488:	str	x0, [sp, #48]
    648c:	ldr	x0, [sp, #16]
    6490:	add	x0, x0, #0x8
    6494:	str	x0, [sp, #16]
    6498:	ldr	x0, [sp, #16]
    649c:	ldrb	w0, [x0]
    64a0:	and	x1, x0, #0xff
    64a4:	ldr	x0, [sp, #16]
    64a8:	add	x0, x0, #0x1
    64ac:	ldrb	w0, [x0]
    64b0:	and	x0, x0, #0xff
    64b4:	lsl	x0, x0, #8
    64b8:	orr	x1, x1, x0
    64bc:	ldr	x0, [sp, #16]
    64c0:	add	x0, x0, #0x2
    64c4:	ldrb	w0, [x0]
    64c8:	and	x0, x0, #0xff
    64cc:	lsl	x0, x0, #16
    64d0:	orr	x1, x1, x0
    64d4:	ldr	x0, [sp, #16]
    64d8:	add	x0, x0, #0x3
    64dc:	ldrb	w0, [x0]
    64e0:	and	x0, x0, #0xff
    64e4:	lsl	x0, x0, #24
    64e8:	orr	x1, x1, x0
    64ec:	ldr	x0, [sp, #16]
    64f0:	add	x0, x0, #0x4
    64f4:	ldrb	w0, [x0]
    64f8:	and	x0, x0, #0xff
    64fc:	lsl	x0, x0, #32
    6500:	orr	x1, x1, x0
    6504:	ldr	x0, [sp, #16]
    6508:	add	x0, x0, #0x5
    650c:	ldrb	w0, [x0]
    6510:	and	x0, x0, #0xff
    6514:	lsl	x0, x0, #40
    6518:	orr	x1, x1, x0
    651c:	ldr	x0, [sp, #16]
    6520:	add	x0, x0, #0x6
    6524:	ldrb	w0, [x0]
    6528:	and	x0, x0, #0xff
    652c:	lsl	x0, x0, #48
    6530:	orr	x1, x1, x0
    6534:	ldr	x0, [sp, #16]
    6538:	add	x0, x0, #0x7
    653c:	ldrb	w0, [x0]
    6540:	and	x0, x0, #0xff
    6544:	lsl	x0, x0, #56
    6548:	orr	x1, x1, x0
    654c:	mov	x0, #0x323f                	// #12863
    6550:	movk	x0, #0x9628, lsl #16
    6554:	movk	x0, #0x8e1e, lsl #32
    6558:	movk	x0, #0x9c1b, lsl #48
    655c:	mul	x0, x1, x0
    6560:	ldr	x1, [sp, #40]
    6564:	add	x0, x1, x0
    6568:	str	x0, [sp, #40]
    656c:	ldr	x0, [sp, #40]
    6570:	ror	x0, x0, #17
    6574:	ldr	x1, [sp, #48]
    6578:	eor	x0, x1, x0
    657c:	str	x0, [sp, #40]
    6580:	ldr	x0, [sp, #48]
    6584:	ror	x0, x0, #53
    6588:	ldr	x1, [sp, #40]
    658c:	add	x0, x1, x0
    6590:	str	x0, [sp, #48]
    6594:	ldr	x0, [sp, #16]
    6598:	add	x0, x0, #0x8
    659c:	str	x0, [sp, #16]
    65a0:	nop
    65a4:	ldr	x0, [sp, #32]
    65a8:	and	x0, x0, #0x7
    65ac:	cmp	x0, #0x7
    65b0:	b.eq	6620 <stadtx_hash_with_state+0x45c>  // b.none
    65b4:	cmp	x0, #0x7
    65b8:	b.hi	675c <stadtx_hash_with_state+0x598>  // b.pmore
    65bc:	cmp	x0, #0x6
    65c0:	b.eq	6640 <stadtx_hash_with_state+0x47c>  // b.none
    65c4:	cmp	x0, #0x6
    65c8:	b.hi	675c <stadtx_hash_with_state+0x598>  // b.pmore
    65cc:	cmp	x0, #0x5
    65d0:	b.eq	6660 <stadtx_hash_with_state+0x49c>  // b.none
    65d4:	cmp	x0, #0x5
    65d8:	b.hi	675c <stadtx_hash_with_state+0x598>  // b.pmore
    65dc:	cmp	x0, #0x4
    65e0:	b.eq	6680 <stadtx_hash_with_state+0x4bc>  // b.none
    65e4:	cmp	x0, #0x4
    65e8:	b.hi	675c <stadtx_hash_with_state+0x598>  // b.pmore
    65ec:	cmp	x0, #0x3
    65f0:	b.eq	66dc <stadtx_hash_with_state+0x518>  // b.none
    65f4:	cmp	x0, #0x3
    65f8:	b.hi	675c <stadtx_hash_with_state+0x598>  // b.pmore
    65fc:	cmp	x0, #0x2
    6600:	b.eq	66fc <stadtx_hash_with_state+0x538>  // b.none
    6604:	cmp	x0, #0x2
    6608:	b.hi	675c <stadtx_hash_with_state+0x598>  // b.pmore
    660c:	cmp	x0, #0x0
    6610:	b.eq	6748 <stadtx_hash_with_state+0x584>  // b.none
    6614:	cmp	x0, #0x1
    6618:	b.eq	6730 <stadtx_hash_with_state+0x56c>  // b.none
    661c:	b	675c <stadtx_hash_with_state+0x598>
    6620:	ldr	x0, [sp, #16]
    6624:	add	x0, x0, #0x6
    6628:	ldrb	w0, [x0]
    662c:	and	x0, x0, #0xff
    6630:	lsl	x0, x0, #32
    6634:	ldr	x1, [sp, #40]
    6638:	add	x0, x1, x0
    663c:	str	x0, [sp, #40]
    6640:	ldr	x0, [sp, #16]
    6644:	add	x0, x0, #0x5
    6648:	ldrb	w0, [x0]
    664c:	and	x0, x0, #0xff
    6650:	lsl	x0, x0, #48
    6654:	ldr	x1, [sp, #48]
    6658:	add	x0, x1, x0
    665c:	str	x0, [sp, #48]
    6660:	ldr	x0, [sp, #16]
    6664:	add	x0, x0, #0x4
    6668:	ldrb	w0, [x0]
    666c:	and	x0, x0, #0xff
    6670:	lsl	x0, x0, #16
    6674:	ldr	x1, [sp, #40]
    6678:	add	x0, x1, x0
    667c:	str	x0, [sp, #40]
    6680:	ldr	x0, [sp, #16]
    6684:	ldrb	w0, [x0]
    6688:	mov	w1, w0
    668c:	ldr	x0, [sp, #16]
    6690:	add	x0, x0, #0x1
    6694:	ldrb	w0, [x0]
    6698:	lsl	w0, w0, #8
    669c:	orr	w1, w1, w0
    66a0:	ldr	x0, [sp, #16]
    66a4:	add	x0, x0, #0x2
    66a8:	ldrb	w0, [x0]
    66ac:	lsl	w0, w0, #16
    66b0:	orr	w1, w1, w0
    66b4:	ldr	x0, [sp, #16]
    66b8:	add	x0, x0, #0x3
    66bc:	ldrb	w0, [x0]
    66c0:	lsl	w0, w0, #24
    66c4:	orr	w0, w1, w0
    66c8:	mov	w0, w0
    66cc:	ldr	x1, [sp, #48]
    66d0:	add	x0, x1, x0
    66d4:	str	x0, [sp, #48]
    66d8:	b	675c <stadtx_hash_with_state+0x598>
    66dc:	ldr	x0, [sp, #16]
    66e0:	add	x0, x0, #0x2
    66e4:	ldrb	w0, [x0]
    66e8:	and	x0, x0, #0xff
    66ec:	lsl	x0, x0, #48
    66f0:	ldr	x1, [sp, #40]
    66f4:	add	x0, x1, x0
    66f8:	str	x0, [sp, #40]
    66fc:	ldr	x0, [sp, #16]
    6700:	ldrb	w0, [x0]
    6704:	mov	w1, w0
    6708:	ldr	x0, [sp, #16]
    670c:	add	x0, x0, #0x1
    6710:	ldrb	w0, [x0]
    6714:	lsl	w0, w0, #8
    6718:	orr	w0, w1, w0
    671c:	mov	w0, w0
    6720:	ldr	x1, [sp, #48]
    6724:	add	x0, x1, x0
    6728:	str	x0, [sp, #48]
    672c:	b	675c <stadtx_hash_with_state+0x598>
    6730:	ldr	x0, [sp, #16]
    6734:	ldrb	w0, [x0]
    6738:	and	x0, x0, #0xff
    673c:	ldr	x1, [sp, #40]
    6740:	add	x0, x1, x0
    6744:	str	x0, [sp, #40]
    6748:	ldr	x0, [sp, #48]
    674c:	ror	x0, x0, #32
    6750:	eor	x0, x0, #0xff
    6754:	str	x0, [sp, #48]
    6758:	nop
    675c:	ldr	x1, [sp, #48]
    6760:	ldr	x0, [sp, #40]
    6764:	eor	x0, x1, x0
    6768:	str	x0, [sp, #48]
    676c:	ldr	x0, [sp, #40]
    6770:	ror	x0, x0, #33
    6774:	ldr	x1, [sp, #48]
    6778:	add	x0, x1, x0
    677c:	str	x0, [sp, #40]
    6780:	ldr	x0, [sp, #48]
    6784:	ror	x0, x0, #47
    6788:	ldr	x1, [sp, #40]
    678c:	eor	x0, x1, x0
    6790:	str	x0, [sp, #48]
    6794:	ldr	x0, [sp, #40]
    6798:	ror	x0, x0, #21
    679c:	ldr	x1, [sp, #48]
    67a0:	add	x0, x1, x0
    67a4:	str	x0, [sp, #40]
    67a8:	ldr	x0, [sp, #48]
    67ac:	ror	x1, x0, #33
    67b0:	ldr	x0, [sp, #40]
    67b4:	sub	x0, x1, x0
    67b8:	str	x0, [sp, #48]
    67bc:	ldr	x0, [sp, #40]
    67c0:	ror	x0, x0, #51
    67c4:	ldr	x1, [sp, #48]
    67c8:	eor	x0, x1, x0
    67cc:	str	x0, [sp, #40]
    67d0:	ldr	x1, [sp, #48]
    67d4:	ldr	x0, [sp, #40]
    67d8:	sub	x0, x1, x0
    67dc:	str	x0, [sp, #48]
    67e0:	ldr	x0, [sp, #40]
    67e4:	ror	x0, x0, #23
    67e8:	ldr	x1, [sp, #48]
    67ec:	add	x0, x1, x0
    67f0:	str	x0, [sp, #40]
    67f4:	ldr	x0, [sp, #48]
    67f8:	ror	x0, x0, #27
    67fc:	ldr	x1, [sp, #40]
    6800:	eor	x0, x1, x0
    6804:	str	x0, [sp, #48]
    6808:	ldr	x0, [sp, #40]
    680c:	ror	x0, x0, #39
    6810:	ldr	x1, [sp, #48]
    6814:	add	x0, x1, x0
    6818:	str	x0, [sp, #40]
    681c:	ldr	x0, [sp, #48]
    6820:	ror	x0, x0, #15
    6824:	ldr	x1, [sp, #40]
    6828:	add	x0, x1, x0
    682c:	str	x0, [sp, #48]
    6830:	ldr	x0, [sp, #40]
    6834:	ror	x0, x0, #49
    6838:	ldr	x1, [sp, #48]
    683c:	eor	x0, x1, x0
    6840:	str	x0, [sp, #40]
    6844:	ldr	x0, [sp, #48]
    6848:	ror	x0, x0, #5
    684c:	str	x0, [sp, #48]
    6850:	ldr	x1, [sp, #40]
    6854:	ldr	x0, [sp, #48]
    6858:	eor	x0, x1, x0
    685c:	b	73a4 <stadtx_hash_with_state+0x11e0>
    6860:	ldr	x0, [sp, #72]
    6864:	add	x0, x0, #0x10
    6868:	ldr	x1, [x0]
    686c:	ldr	x2, [sp, #8]
    6870:	mov	x0, #0x7b39                	// #31545
    6874:	movk	x0, #0xedce, lsl #16
    6878:	movk	x0, #0xbd94, lsl #32
    687c:	movk	x0, #0x8f29, lsl #48
    6880:	mul	x2, x2, x0
    6884:	mov	x0, #0x71ab                	// #29099
    6888:	movk	x0, #0xc96b, lsl #16
    688c:	movk	x0, #0x38be, lsl #32
    6890:	movk	x0, #0xad7d, lsl #48
    6894:	add	x0, x2, x0
    6898:	eor	x0, x1, x0
    689c:	str	x0, [sp, #56]
    68a0:	ldr	x0, [sp, #72]
    68a4:	add	x0, x0, #0x18
    68a8:	ldr	x1, [x0]
    68ac:	ldr	x2, [sp, #8]
    68b0:	mov	x0, #0x323f                	// #12863
    68b4:	movk	x0, #0x9628, lsl #16
    68b8:	movk	x0, #0x8e1e, lsl #32
    68bc:	movk	x0, #0x9c1b, lsl #48
    68c0:	mul	x2, x2, x0
    68c4:	mov	x0, #0xc8fc                	// #51452
    68c8:	movk	x0, #0x58a0, lsl #16
    68cc:	movk	x0, #0x387a, lsl #32
    68d0:	movk	x0, #0x706e, lsl #48
    68d4:	add	x0, x2, x0
    68d8:	eor	x0, x1, x0
    68dc:	str	x0, [sp, #64]
    68e0:	ldr	x0, [sp, #16]
    68e4:	ldrb	w0, [x0]
    68e8:	and	x1, x0, #0xff
    68ec:	ldr	x0, [sp, #16]
    68f0:	add	x0, x0, #0x1
    68f4:	ldrb	w0, [x0]
    68f8:	and	x0, x0, #0xff
    68fc:	lsl	x0, x0, #8
    6900:	orr	x1, x1, x0
    6904:	ldr	x0, [sp, #16]
    6908:	add	x0, x0, #0x2
    690c:	ldrb	w0, [x0]
    6910:	and	x0, x0, #0xff
    6914:	lsl	x0, x0, #16
    6918:	orr	x1, x1, x0
    691c:	ldr	x0, [sp, #16]
    6920:	add	x0, x0, #0x3
    6924:	ldrb	w0, [x0]
    6928:	and	x0, x0, #0xff
    692c:	lsl	x0, x0, #24
    6930:	orr	x1, x1, x0
    6934:	ldr	x0, [sp, #16]
    6938:	add	x0, x0, #0x4
    693c:	ldrb	w0, [x0]
    6940:	and	x0, x0, #0xff
    6944:	lsl	x0, x0, #32
    6948:	orr	x1, x1, x0
    694c:	ldr	x0, [sp, #16]
    6950:	add	x0, x0, #0x5
    6954:	ldrb	w0, [x0]
    6958:	and	x0, x0, #0xff
    695c:	lsl	x0, x0, #40
    6960:	orr	x1, x1, x0
    6964:	ldr	x0, [sp, #16]
    6968:	add	x0, x0, #0x6
    696c:	ldrb	w0, [x0]
    6970:	and	x0, x0, #0xff
    6974:	lsl	x0, x0, #48
    6978:	orr	x1, x1, x0
    697c:	ldr	x0, [sp, #16]
    6980:	add	x0, x0, #0x7
    6984:	ldrb	w0, [x0]
    6988:	and	x0, x0, #0xff
    698c:	lsl	x0, x0, #56
    6990:	orr	x1, x1, x0
    6994:	mov	x0, #0x10e3                	// #4323
    6998:	movk	x0, #0x8029, lsl #16
    699c:	mul	x0, x1, x0
    69a0:	ldr	x1, [sp, #40]
    69a4:	add	x0, x1, x0
    69a8:	str	x0, [sp, #40]
    69ac:	ldr	x0, [sp, #40]
    69b0:	ror	x0, x0, #7
    69b4:	ldr	x1, [sp, #64]
    69b8:	eor	x0, x1, x0
    69bc:	str	x0, [sp, #40]
    69c0:	ldr	x0, [sp, #16]
    69c4:	add	x0, x0, #0x8
    69c8:	ldrb	w0, [x0]
    69cc:	and	x1, x0, #0xff
    69d0:	ldr	x0, [sp, #16]
    69d4:	add	x0, x0, #0x9
    69d8:	ldrb	w0, [x0]
    69dc:	and	x0, x0, #0xff
    69e0:	lsl	x0, x0, #8
    69e4:	orr	x1, x1, x0
    69e8:	ldr	x0, [sp, #16]
    69ec:	add	x0, x0, #0xa
    69f0:	ldrb	w0, [x0]
    69f4:	and	x0, x0, #0xff
    69f8:	lsl	x0, x0, #16
    69fc:	orr	x1, x1, x0
    6a00:	ldr	x0, [sp, #16]
    6a04:	add	x0, x0, #0xb
    6a08:	ldrb	w0, [x0]
    6a0c:	and	x0, x0, #0xff
    6a10:	lsl	x0, x0, #24
    6a14:	orr	x1, x1, x0
    6a18:	ldr	x0, [sp, #16]
    6a1c:	add	x0, x0, #0xc
    6a20:	ldrb	w0, [x0]
    6a24:	and	x0, x0, #0xff
    6a28:	lsl	x0, x0, #32
    6a2c:	orr	x1, x1, x0
    6a30:	ldr	x0, [sp, #16]
    6a34:	add	x0, x0, #0xd
    6a38:	ldrb	w0, [x0]
    6a3c:	and	x0, x0, #0xff
    6a40:	lsl	x0, x0, #40
    6a44:	orr	x1, x1, x0
    6a48:	ldr	x0, [sp, #16]
    6a4c:	add	x0, x0, #0xe
    6a50:	ldrb	w0, [x0]
    6a54:	and	x0, x0, #0xff
    6a58:	lsl	x0, x0, #48
    6a5c:	orr	x1, x1, x0
    6a60:	ldr	x0, [sp, #16]
    6a64:	add	x0, x0, #0xf
    6a68:	ldrb	w0, [x0]
    6a6c:	and	x0, x0, #0xff
    6a70:	lsl	x0, x0, #56
    6a74:	orr	x1, x1, x0
    6a78:	mov	x0, #0x13af                	// #5039
    6a7c:	movk	x0, #0x819b, lsl #16
    6a80:	mul	x0, x1, x0
    6a84:	ldr	x1, [sp, #48]
    6a88:	add	x0, x1, x0
    6a8c:	str	x0, [sp, #48]
    6a90:	ldr	x0, [sp, #48]
    6a94:	ror	x0, x0, #1
    6a98:	ldr	x1, [sp, #56]
    6a9c:	eor	x0, x1, x0
    6aa0:	str	x0, [sp, #48]
    6aa4:	ldr	x0, [sp, #16]
    6aa8:	add	x0, x0, #0x10
    6aac:	ldrb	w0, [x0]
    6ab0:	and	x1, x0, #0xff
    6ab4:	ldr	x0, [sp, #16]
    6ab8:	add	x0, x0, #0x11
    6abc:	ldrb	w0, [x0]
    6ac0:	and	x0, x0, #0xff
    6ac4:	lsl	x0, x0, #8
    6ac8:	orr	x1, x1, x0
    6acc:	ldr	x0, [sp, #16]
    6ad0:	add	x0, x0, #0x12
    6ad4:	ldrb	w0, [x0]
    6ad8:	and	x0, x0, #0xff
    6adc:	lsl	x0, x0, #16
    6ae0:	orr	x1, x1, x0
    6ae4:	ldr	x0, [sp, #16]
    6ae8:	add	x0, x0, #0x13
    6aec:	ldrb	w0, [x0]
    6af0:	and	x0, x0, #0xff
    6af4:	lsl	x0, x0, #24
    6af8:	orr	x1, x1, x0
    6afc:	ldr	x0, [sp, #16]
    6b00:	add	x0, x0, #0x14
    6b04:	ldrb	w0, [x0]
    6b08:	and	x0, x0, #0xff
    6b0c:	lsl	x0, x0, #32
    6b10:	orr	x1, x1, x0
    6b14:	ldr	x0, [sp, #16]
    6b18:	add	x0, x0, #0x15
    6b1c:	ldrb	w0, [x0]
    6b20:	and	x0, x0, #0xff
    6b24:	lsl	x0, x0, #40
    6b28:	orr	x1, x1, x0
    6b2c:	ldr	x0, [sp, #16]
    6b30:	add	x0, x0, #0x16
    6b34:	ldrb	w0, [x0]
    6b38:	and	x0, x0, #0xff
    6b3c:	lsl	x0, x0, #48
    6b40:	orr	x1, x1, x0
    6b44:	ldr	x0, [sp, #16]
    6b48:	add	x0, x0, #0x17
    6b4c:	ldrb	w0, [x0]
    6b50:	and	x0, x0, #0xff
    6b54:	lsl	x0, x0, #56
    6b58:	orr	x1, x1, x0
    6b5c:	mov	x0, #0x27e5                	// #10213
    6b60:	movk	x0, #0x91cb, lsl #16
    6b64:	mul	x0, x1, x0
    6b68:	ldr	x1, [sp, #56]
    6b6c:	add	x0, x1, x0
    6b70:	str	x0, [sp, #56]
    6b74:	ldr	x0, [sp, #56]
    6b78:	ror	x0, x0, #47
    6b7c:	ldr	x1, [sp, #40]
    6b80:	add	x0, x1, x0
    6b84:	str	x0, [sp, #56]
    6b88:	ldr	x0, [sp, #16]
    6b8c:	add	x0, x0, #0x18
    6b90:	ldrb	w0, [x0]
    6b94:	and	x1, x0, #0xff
    6b98:	ldr	x0, [sp, #16]
    6b9c:	add	x0, x0, #0x19
    6ba0:	ldrb	w0, [x0]
    6ba4:	and	x0, x0, #0xff
    6ba8:	lsl	x0, x0, #8
    6bac:	orr	x1, x1, x0
    6bb0:	ldr	x0, [sp, #16]
    6bb4:	add	x0, x0, #0x1a
    6bb8:	ldrb	w0, [x0]
    6bbc:	and	x0, x0, #0xff
    6bc0:	lsl	x0, x0, #16
    6bc4:	orr	x1, x1, x0
    6bc8:	ldr	x0, [sp, #16]
    6bcc:	add	x0, x0, #0x1b
    6bd0:	ldrb	w0, [x0]
    6bd4:	and	x0, x0, #0xff
    6bd8:	lsl	x0, x0, #24
    6bdc:	orr	x1, x1, x0
    6be0:	ldr	x0, [sp, #16]
    6be4:	add	x0, x0, #0x1c
    6be8:	ldrb	w0, [x0]
    6bec:	and	x0, x0, #0xff
    6bf0:	lsl	x0, x0, #32
    6bf4:	orr	x1, x1, x0
    6bf8:	ldr	x0, [sp, #16]
    6bfc:	add	x0, x0, #0x1d
    6c00:	ldrb	w0, [x0]
    6c04:	and	x0, x0, #0xff
    6c08:	lsl	x0, x0, #40
    6c0c:	orr	x1, x1, x0
    6c10:	ldr	x0, [sp, #16]
    6c14:	add	x0, x0, #0x1e
    6c18:	ldrb	w0, [x0]
    6c1c:	and	x0, x0, #0xff
    6c20:	lsl	x0, x0, #48
    6c24:	orr	x1, x1, x0
    6c28:	ldr	x0, [sp, #16]
    6c2c:	add	x0, x0, #0x1f
    6c30:	ldrb	w0, [x0]
    6c34:	and	x0, x0, #0xff
    6c38:	lsl	x0, x0, #56
    6c3c:	orr	x1, x1, x0
    6c40:	mov	x0, #0x69c1                	// #27073
    6c44:	movk	x0, #0xc1a2, lsl #16
    6c48:	mul	x0, x1, x0
    6c4c:	ldr	x1, [sp, #64]
    6c50:	add	x0, x1, x0
    6c54:	str	x0, [sp, #64]
    6c58:	ldr	x0, [sp, #64]
    6c5c:	ror	x1, x0, #11
    6c60:	ldr	x0, [sp, #48]
    6c64:	sub	x0, x1, x0
    6c68:	str	x0, [sp, #64]
    6c6c:	ldr	x0, [sp, #16]
    6c70:	add	x0, x0, #0x20
    6c74:	str	x0, [sp, #16]
    6c78:	ldr	x0, [sp, #32]
    6c7c:	sub	x0, x0, #0x20
    6c80:	str	x0, [sp, #32]
    6c84:	ldr	x0, [sp, #32]
    6c88:	cmp	x0, #0x1f
    6c8c:	b.hi	68e0 <stadtx_hash_with_state+0x71c>  // b.pmore
    6c90:	ldr	x0, [sp, #32]
    6c94:	lsr	x0, x0, #3
    6c98:	cmp	x0, #0x3
    6c9c:	b.eq	6ccc <stadtx_hash_with_state+0xb08>  // b.none
    6ca0:	cmp	x0, #0x3
    6ca4:	b.hi	6fa4 <stadtx_hash_with_state+0xde0>  // b.pmore
    6ca8:	cmp	x0, #0x2
    6cac:	b.eq	6db8 <stadtx_hash_with_state+0xbf4>  // b.none
    6cb0:	cmp	x0, #0x2
    6cb4:	b.hi	6fa4 <stadtx_hash_with_state+0xde0>  // b.pmore
    6cb8:	cmp	x0, #0x0
    6cbc:	b.eq	6f90 <stadtx_hash_with_state+0xdcc>  // b.none
    6cc0:	cmp	x0, #0x1
    6cc4:	b.eq	6ea4 <stadtx_hash_with_state+0xce0>  // b.none
    6cc8:	b	6fa4 <stadtx_hash_with_state+0xde0>
    6ccc:	ldr	x0, [sp, #16]
    6cd0:	ldrb	w0, [x0]
    6cd4:	and	x1, x0, #0xff
    6cd8:	ldr	x0, [sp, #16]
    6cdc:	add	x0, x0, #0x1
    6ce0:	ldrb	w0, [x0]
    6ce4:	and	x0, x0, #0xff
    6ce8:	lsl	x0, x0, #8
    6cec:	orr	x1, x1, x0
    6cf0:	ldr	x0, [sp, #16]
    6cf4:	add	x0, x0, #0x2
    6cf8:	ldrb	w0, [x0]
    6cfc:	and	x0, x0, #0xff
    6d00:	lsl	x0, x0, #16
    6d04:	orr	x1, x1, x0
    6d08:	ldr	x0, [sp, #16]
    6d0c:	add	x0, x0, #0x3
    6d10:	ldrb	w0, [x0]
    6d14:	and	x0, x0, #0xff
    6d18:	lsl	x0, x0, #24
    6d1c:	orr	x1, x1, x0
    6d20:	ldr	x0, [sp, #16]
    6d24:	add	x0, x0, #0x4
    6d28:	ldrb	w0, [x0]
    6d2c:	and	x0, x0, #0xff
    6d30:	lsl	x0, x0, #32
    6d34:	orr	x1, x1, x0
    6d38:	ldr	x0, [sp, #16]
    6d3c:	add	x0, x0, #0x5
    6d40:	ldrb	w0, [x0]
    6d44:	and	x0, x0, #0xff
    6d48:	lsl	x0, x0, #40
    6d4c:	orr	x1, x1, x0
    6d50:	ldr	x0, [sp, #16]
    6d54:	add	x0, x0, #0x6
    6d58:	ldrb	w0, [x0]
    6d5c:	and	x0, x0, #0xff
    6d60:	lsl	x0, x0, #48
    6d64:	orr	x1, x1, x0
    6d68:	ldr	x0, [sp, #16]
    6d6c:	add	x0, x0, #0x7
    6d70:	ldrb	w0, [x0]
    6d74:	and	x0, x0, #0xff
    6d78:	lsl	x0, x0, #56
    6d7c:	orr	x1, x1, x0
    6d80:	mov	x0, #0x10e3                	// #4323
    6d84:	movk	x0, #0x8029, lsl #16
    6d88:	mul	x0, x1, x0
    6d8c:	ldr	x1, [sp, #40]
    6d90:	add	x0, x1, x0
    6d94:	str	x0, [sp, #40]
    6d98:	ldr	x0, [sp, #16]
    6d9c:	add	x0, x0, #0x8
    6da0:	str	x0, [sp, #16]
    6da4:	ldr	x0, [sp, #40]
    6da8:	ror	x0, x0, #7
    6dac:	ldr	x1, [sp, #64]
    6db0:	eor	x0, x1, x0
    6db4:	str	x0, [sp, #40]
    6db8:	ldr	x0, [sp, #16]
    6dbc:	ldrb	w0, [x0]
    6dc0:	and	x1, x0, #0xff
    6dc4:	ldr	x0, [sp, #16]
    6dc8:	add	x0, x0, #0x1
    6dcc:	ldrb	w0, [x0]
    6dd0:	and	x0, x0, #0xff
    6dd4:	lsl	x0, x0, #8
    6dd8:	orr	x1, x1, x0
    6ddc:	ldr	x0, [sp, #16]
    6de0:	add	x0, x0, #0x2
    6de4:	ldrb	w0, [x0]
    6de8:	and	x0, x0, #0xff
    6dec:	lsl	x0, x0, #16
    6df0:	orr	x1, x1, x0
    6df4:	ldr	x0, [sp, #16]
    6df8:	add	x0, x0, #0x3
    6dfc:	ldrb	w0, [x0]
    6e00:	and	x0, x0, #0xff
    6e04:	lsl	x0, x0, #24
    6e08:	orr	x1, x1, x0
    6e0c:	ldr	x0, [sp, #16]
    6e10:	add	x0, x0, #0x4
    6e14:	ldrb	w0, [x0]
    6e18:	and	x0, x0, #0xff
    6e1c:	lsl	x0, x0, #32
    6e20:	orr	x1, x1, x0
    6e24:	ldr	x0, [sp, #16]
    6e28:	add	x0, x0, #0x5
    6e2c:	ldrb	w0, [x0]
    6e30:	and	x0, x0, #0xff
    6e34:	lsl	x0, x0, #40
    6e38:	orr	x1, x1, x0
    6e3c:	ldr	x0, [sp, #16]
    6e40:	add	x0, x0, #0x6
    6e44:	ldrb	w0, [x0]
    6e48:	and	x0, x0, #0xff
    6e4c:	lsl	x0, x0, #48
    6e50:	orr	x1, x1, x0
    6e54:	ldr	x0, [sp, #16]
    6e58:	add	x0, x0, #0x7
    6e5c:	ldrb	w0, [x0]
    6e60:	and	x0, x0, #0xff
    6e64:	lsl	x0, x0, #56
    6e68:	orr	x1, x1, x0
    6e6c:	mov	x0, #0x13af                	// #5039
    6e70:	movk	x0, #0x819b, lsl #16
    6e74:	mul	x0, x1, x0
    6e78:	ldr	x1, [sp, #48]
    6e7c:	add	x0, x1, x0
    6e80:	str	x0, [sp, #48]
    6e84:	ldr	x0, [sp, #16]
    6e88:	add	x0, x0, #0x8
    6e8c:	str	x0, [sp, #16]
    6e90:	ldr	x0, [sp, #48]
    6e94:	ror	x0, x0, #1
    6e98:	ldr	x1, [sp, #56]
    6e9c:	eor	x0, x1, x0
    6ea0:	str	x0, [sp, #48]
    6ea4:	ldr	x0, [sp, #16]
    6ea8:	ldrb	w0, [x0]
    6eac:	and	x1, x0, #0xff
    6eb0:	ldr	x0, [sp, #16]
    6eb4:	add	x0, x0, #0x1
    6eb8:	ldrb	w0, [x0]
    6ebc:	and	x0, x0, #0xff
    6ec0:	lsl	x0, x0, #8
    6ec4:	orr	x1, x1, x0
    6ec8:	ldr	x0, [sp, #16]
    6ecc:	add	x0, x0, #0x2
    6ed0:	ldrb	w0, [x0]
    6ed4:	and	x0, x0, #0xff
    6ed8:	lsl	x0, x0, #16
    6edc:	orr	x1, x1, x0
    6ee0:	ldr	x0, [sp, #16]
    6ee4:	add	x0, x0, #0x3
    6ee8:	ldrb	w0, [x0]
    6eec:	and	x0, x0, #0xff
    6ef0:	lsl	x0, x0, #24
    6ef4:	orr	x1, x1, x0
    6ef8:	ldr	x0, [sp, #16]
    6efc:	add	x0, x0, #0x4
    6f00:	ldrb	w0, [x0]
    6f04:	and	x0, x0, #0xff
    6f08:	lsl	x0, x0, #32
    6f0c:	orr	x1, x1, x0
    6f10:	ldr	x0, [sp, #16]
    6f14:	add	x0, x0, #0x5
    6f18:	ldrb	w0, [x0]
    6f1c:	and	x0, x0, #0xff
    6f20:	lsl	x0, x0, #40
    6f24:	orr	x1, x1, x0
    6f28:	ldr	x0, [sp, #16]
    6f2c:	add	x0, x0, #0x6
    6f30:	ldrb	w0, [x0]
    6f34:	and	x0, x0, #0xff
    6f38:	lsl	x0, x0, #48
    6f3c:	orr	x1, x1, x0
    6f40:	ldr	x0, [sp, #16]
    6f44:	add	x0, x0, #0x7
    6f48:	ldrb	w0, [x0]
    6f4c:	and	x0, x0, #0xff
    6f50:	lsl	x0, x0, #56
    6f54:	orr	x1, x1, x0
    6f58:	mov	x0, #0x27e5                	// #10213
    6f5c:	movk	x0, #0x91cb, lsl #16
    6f60:	mul	x0, x1, x0
    6f64:	ldr	x1, [sp, #56]
    6f68:	add	x0, x1, x0
    6f6c:	str	x0, [sp, #56]
    6f70:	ldr	x0, [sp, #16]
    6f74:	add	x0, x0, #0x8
    6f78:	str	x0, [sp, #16]
    6f7c:	ldr	x0, [sp, #56]
    6f80:	ror	x0, x0, #47
    6f84:	ldr	x1, [sp, #40]
    6f88:	add	x0, x1, x0
    6f8c:	str	x0, [sp, #56]
    6f90:	ldr	x0, [sp, #64]
    6f94:	ror	x1, x0, #11
    6f98:	ldr	x0, [sp, #48]
    6f9c:	sub	x0, x1, x0
    6fa0:	str	x0, [sp, #64]
    6fa4:	ldr	x0, [sp, #32]
    6fa8:	add	x1, x0, #0x1
    6fac:	mov	x0, #0x323f                	// #12863
    6fb0:	movk	x0, #0x9628, lsl #16
    6fb4:	movk	x0, #0x8e1e, lsl #32
    6fb8:	movk	x0, #0x9c1b, lsl #48
    6fbc:	mul	x0, x1, x0
    6fc0:	ldr	x1, [sp, #40]
    6fc4:	eor	x0, x1, x0
    6fc8:	str	x0, [sp, #40]
    6fcc:	ldr	x0, [sp, #32]
    6fd0:	and	x0, x0, #0x7
    6fd4:	cmp	x0, #0x7
    6fd8:	b.eq	7048 <stadtx_hash_with_state+0xe84>  // b.none
    6fdc:	cmp	x0, #0x7
    6fe0:	b.hi	71e8 <stadtx_hash_with_state+0x1024>  // b.pmore
    6fe4:	cmp	x0, #0x6
    6fe8:	b.eq	7064 <stadtx_hash_with_state+0xea0>  // b.none
    6fec:	cmp	x0, #0x6
    6ff0:	b.hi	71e8 <stadtx_hash_with_state+0x1024>  // b.pmore
    6ff4:	cmp	x0, #0x5
    6ff8:	b.eq	70f4 <stadtx_hash_with_state+0xf30>  // b.none
    6ffc:	cmp	x0, #0x5
    7000:	b.hi	71e8 <stadtx_hash_with_state+0x1024>  // b.pmore
    7004:	cmp	x0, #0x4
    7008:	b.eq	7110 <stadtx_hash_with_state+0xf4c>  // b.none
    700c:	cmp	x0, #0x4
    7010:	b.hi	71e8 <stadtx_hash_with_state+0x1024>  // b.pmore
    7014:	cmp	x0, #0x3
    7018:	b.eq	716c <stadtx_hash_with_state+0xfa8>  // b.none
    701c:	cmp	x0, #0x3
    7020:	b.hi	71e8 <stadtx_hash_with_state+0x1024>  // b.pmore
    7024:	cmp	x0, #0x2
    7028:	b.eq	7188 <stadtx_hash_with_state+0xfc4>  // b.none
    702c:	cmp	x0, #0x2
    7030:	b.hi	71e8 <stadtx_hash_with_state+0x1024>  // b.pmore
    7034:	cmp	x0, #0x0
    7038:	b.eq	71d4 <stadtx_hash_with_state+0x1010>  // b.none
    703c:	cmp	x0, #0x1
    7040:	b.eq	71bc <stadtx_hash_with_state+0xff8>  // b.none
    7044:	b	71e8 <stadtx_hash_with_state+0x1024>
    7048:	ldr	x0, [sp, #16]
    704c:	add	x0, x0, #0x6
    7050:	ldrb	w0, [x0]
    7054:	and	x0, x0, #0xff
    7058:	ldr	x1, [sp, #48]
    705c:	add	x0, x1, x0
    7060:	str	x0, [sp, #48]
    7064:	ldr	x0, [sp, #16]
    7068:	add	x0, x0, #0x4
    706c:	ldrb	w0, [x0]
    7070:	mov	w1, w0
    7074:	ldr	x0, [sp, #16]
    7078:	add	x0, x0, #0x5
    707c:	ldrb	w0, [x0]
    7080:	lsl	w0, w0, #8
    7084:	orr	w0, w1, w0
    7088:	mov	w0, w0
    708c:	ldr	x1, [sp, #56]
    7090:	add	x0, x1, x0
    7094:	str	x0, [sp, #56]
    7098:	ldr	x0, [sp, #16]
    709c:	ldrb	w0, [x0]
    70a0:	mov	w1, w0
    70a4:	ldr	x0, [sp, #16]
    70a8:	add	x0, x0, #0x1
    70ac:	ldrb	w0, [x0]
    70b0:	lsl	w0, w0, #8
    70b4:	orr	w1, w1, w0
    70b8:	ldr	x0, [sp, #16]
    70bc:	add	x0, x0, #0x2
    70c0:	ldrb	w0, [x0]
    70c4:	lsl	w0, w0, #16
    70c8:	orr	w1, w1, w0
    70cc:	ldr	x0, [sp, #16]
    70d0:	add	x0, x0, #0x3
    70d4:	ldrb	w0, [x0]
    70d8:	lsl	w0, w0, #24
    70dc:	orr	w0, w1, w0
    70e0:	mov	w0, w0
    70e4:	ldr	x1, [sp, #64]
    70e8:	add	x0, x1, x0
    70ec:	str	x0, [sp, #64]
    70f0:	b	71e8 <stadtx_hash_with_state+0x1024>
    70f4:	ldr	x0, [sp, #16]
    70f8:	add	x0, x0, #0x4
    70fc:	ldrb	w0, [x0]
    7100:	and	x0, x0, #0xff
    7104:	ldr	x1, [sp, #48]
    7108:	add	x0, x1, x0
    710c:	str	x0, [sp, #48]
    7110:	ldr	x0, [sp, #16]
    7114:	ldrb	w0, [x0]
    7118:	mov	w1, w0
    711c:	ldr	x0, [sp, #16]
    7120:	add	x0, x0, #0x1
    7124:	ldrb	w0, [x0]
    7128:	lsl	w0, w0, #8
    712c:	orr	w1, w1, w0
    7130:	ldr	x0, [sp, #16]
    7134:	add	x0, x0, #0x2
    7138:	ldrb	w0, [x0]
    713c:	lsl	w0, w0, #16
    7140:	orr	w1, w1, w0
    7144:	ldr	x0, [sp, #16]
    7148:	add	x0, x0, #0x3
    714c:	ldrb	w0, [x0]
    7150:	lsl	w0, w0, #24
    7154:	orr	w0, w1, w0
    7158:	mov	w0, w0
    715c:	ldr	x1, [sp, #56]
    7160:	add	x0, x1, x0
    7164:	str	x0, [sp, #56]
    7168:	b	71e8 <stadtx_hash_with_state+0x1024>
    716c:	ldr	x0, [sp, #16]
    7170:	add	x0, x0, #0x2
    7174:	ldrb	w0, [x0]
    7178:	and	x0, x0, #0xff
    717c:	ldr	x1, [sp, #64]
    7180:	add	x0, x1, x0
    7184:	str	x0, [sp, #64]
    7188:	ldr	x0, [sp, #16]
    718c:	ldrb	w0, [x0]
    7190:	mov	w1, w0
    7194:	ldr	x0, [sp, #16]
    7198:	add	x0, x0, #0x1
    719c:	ldrb	w0, [x0]
    71a0:	lsl	w0, w0, #8
    71a4:	orr	w0, w1, w0
    71a8:	mov	w0, w0
    71ac:	ldr	x1, [sp, #48]
    71b0:	add	x0, x1, x0
    71b4:	str	x0, [sp, #48]
    71b8:	b	71e8 <stadtx_hash_with_state+0x1024>
    71bc:	ldr	x0, [sp, #16]
    71c0:	ldrb	w0, [x0]
    71c4:	and	x0, x0, #0xff
    71c8:	ldr	x1, [sp, #56]
    71cc:	add	x0, x1, x0
    71d0:	str	x0, [sp, #56]
    71d4:	ldr	x0, [sp, #64]
    71d8:	ror	x0, x0, #32
    71dc:	eor	x0, x0, #0xff
    71e0:	str	x0, [sp, #64]
    71e4:	nop
    71e8:	ldr	x1, [sp, #48]
    71ec:	ldr	x0, [sp, #56]
    71f0:	sub	x0, x1, x0
    71f4:	str	x0, [sp, #48]
    71f8:	ldr	x0, [sp, #40]
    71fc:	ror	x0, x0, #19
    7200:	str	x0, [sp, #40]
    7204:	ldr	x1, [sp, #48]
    7208:	ldr	x0, [sp, #40]
    720c:	sub	x0, x1, x0
    7210:	str	x0, [sp, #48]
    7214:	ldr	x0, [sp, #48]
    7218:	ror	x0, x0, #53
    721c:	str	x0, [sp, #48]
    7220:	ldr	x1, [sp, #64]
    7224:	ldr	x0, [sp, #48]
    7228:	eor	x0, x1, x0
    722c:	str	x0, [sp, #64]
    7230:	ldr	x1, [sp, #40]
    7234:	ldr	x0, [sp, #64]
    7238:	sub	x0, x1, x0
    723c:	str	x0, [sp, #40]
    7240:	ldr	x0, [sp, #64]
    7244:	ror	x0, x0, #21
    7248:	str	x0, [sp, #64]
    724c:	ldr	x1, [sp, #40]
    7250:	ldr	x0, [sp, #64]
    7254:	add	x0, x1, x0
    7258:	str	x0, [sp, #40]
    725c:	ldr	x0, [sp, #40]
    7260:	ror	x0, x0, #3
    7264:	str	x0, [sp, #40]
    7268:	ldr	x1, [sp, #64]
    726c:	ldr	x0, [sp, #40]
    7270:	sub	x0, x1, x0
    7274:	str	x0, [sp, #64]
    7278:	ldr	x0, [sp, #56]
    727c:	ror	x1, x0, #43
    7280:	ldr	x0, [sp, #64]
    7284:	sub	x0, x1, x0
    7288:	str	x0, [sp, #56]
    728c:	ldr	x0, [sp, #56]
    7290:	ror	x0, x0, #9
    7294:	ldr	x1, [sp, #40]
    7298:	eor	x0, x1, x0
    729c:	str	x0, [sp, #56]
    72a0:	ldr	x1, [sp, #48]
    72a4:	ldr	x0, [sp, #56]
    72a8:	sub	x0, x1, x0
    72ac:	str	x0, [sp, #48]
    72b0:	ldr	x0, [sp, #64]
    72b4:	ror	x1, x0, #7
    72b8:	ldr	x0, [sp, #56]
    72bc:	sub	x0, x1, x0
    72c0:	str	x0, [sp, #64]
    72c4:	ldr	x0, [sp, #56]
    72c8:	ror	x0, x0, #31
    72cc:	str	x0, [sp, #56]
    72d0:	ldr	x1, [sp, #64]
    72d4:	ldr	x0, [sp, #56]
    72d8:	add	x0, x1, x0
    72dc:	str	x0, [sp, #64]
    72e0:	ldr	x1, [sp, #56]
    72e4:	ldr	x0, [sp, #48]
    72e8:	sub	x0, x1, x0
    72ec:	str	x0, [sp, #56]
    72f0:	ldr	x0, [sp, #64]
    72f4:	ror	x0, x0, #39
    72f8:	str	x0, [sp, #64]
    72fc:	ldr	x1, [sp, #56]
    7300:	ldr	x0, [sp, #64]
    7304:	eor	x0, x1, x0
    7308:	str	x0, [sp, #56]
    730c:	ldr	x0, [sp, #64]
    7310:	ror	x0, x0, #17
    7314:	ldr	x1, [sp, #56]
    7318:	eor	x0, x1, x0
    731c:	str	x0, [sp, #64]
    7320:	ldr	x1, [sp, #48]
    7324:	ldr	x0, [sp, #64]
    7328:	add	x0, x1, x0
    732c:	str	x0, [sp, #48]
    7330:	ldr	x0, [sp, #48]
    7334:	ror	x0, x0, #9
    7338:	str	x0, [sp, #48]
    733c:	ldr	x1, [sp, #56]
    7340:	ldr	x0, [sp, #48]
    7344:	eor	x0, x1, x0
    7348:	str	x0, [sp, #56]
    734c:	ldr	x0, [sp, #56]
    7350:	ror	x0, x0, #40
    7354:	str	x0, [sp, #56]
    7358:	ldr	x1, [sp, #64]
    735c:	ldr	x0, [sp, #56]
    7360:	eor	x0, x1, x0
    7364:	str	x0, [sp, #64]
    7368:	ldr	x0, [sp, #64]
    736c:	ror	x0, x0, #59
    7370:	str	x0, [sp, #64]
    7374:	ldr	x0, [sp, #40]
    7378:	ror	x1, x0, #1
    737c:	ldr	x0, [sp, #48]
    7380:	sub	x0, x1, x0
    7384:	str	x0, [sp, #40]
    7388:	ldr	x1, [sp, #40]
    738c:	ldr	x0, [sp, #48]
    7390:	eor	x1, x1, x0
    7394:	ldr	x0, [sp, #56]
    7398:	eor	x1, x1, x0
    739c:	ldr	x0, [sp, #64]
    73a0:	eor	x0, x1, x0
    73a4:	add	sp, sp, #0x50
    73a8:	ret

00000000000073ac <S_CvGV>:
    73ac:	stp	x29, x30, [sp, #-48]!
    73b0:	mov	x29, sp
    73b4:	str	x0, [sp, #24]
    73b8:	str	x1, [sp, #16]
    73bc:	ldr	x0, [sp, #16]
    73c0:	ldr	x0, [x0]
    73c4:	str	x0, [sp, #32]
    73c8:	ldr	x0, [sp, #32]
    73cc:	ldr	w0, [x0, #92]
    73d0:	and	w0, w0, #0x8000
    73d4:	cmp	w0, #0x0
    73d8:	b.eq	73ec <S_CvGV+0x40>  // b.none
    73dc:	ldr	x1, [sp, #16]
    73e0:	ldr	x0, [sp, #24]
    73e4:	bl	4e40 <Perl_cvgv_from_hek@plt>
    73e8:	b	7400 <S_CvGV+0x54>
    73ec:	ldr	x0, [sp, #16]
    73f0:	ldr	x0, [x0]
    73f4:	str	x0, [sp, #40]
    73f8:	ldr	x0, [sp, #40]
    73fc:	ldr	x0, [x0, #56]
    7400:	ldp	x29, x30, [sp], #48
    7404:	ret

0000000000007408 <S_CvDEPTHp>:
    7408:	sub	sp, sp, #0x10
    740c:	str	x0, [sp, #8]
    7410:	ldr	x0, [sp, #8]
    7414:	ldr	x0, [x0]
    7418:	add	x0, x0, #0x60
    741c:	add	sp, sp, #0x10
    7420:	ret

0000000000007424 <S_POPMARK>:
    7424:	sub	sp, sp, #0x10
    7428:	str	x0, [sp, #8]
    742c:	ldr	x0, [sp, #8]
    7430:	ldr	x0, [x0, #120]
    7434:	sub	x2, x0, #0x4
    7438:	ldr	x1, [sp, #8]
    743c:	str	x2, [x1, #120]
    7440:	ldr	w0, [x0]
    7444:	add	sp, sp, #0x10
    7448:	ret

000000000000744c <S_ReANY>:
    744c:	sub	sp, sp, #0x20
    7450:	str	x0, [sp, #8]
    7454:	ldr	x0, [sp, #8]
    7458:	ldr	x0, [x0]
    745c:	str	x0, [sp, #24]
    7460:	ldr	x0, [sp, #8]
    7464:	ldr	w0, [x0, #12]
    7468:	and	w0, w0, #0xff
    746c:	cmp	w0, #0xa
    7470:	b.ne	7480 <S_ReANY+0x34>  // b.any
    7474:	ldr	x0, [sp, #24]
    7478:	ldr	x0, [x0, #24]
    747c:	b	7484 <S_ReANY+0x38>
    7480:	ldr	x0, [sp, #24]
    7484:	add	sp, sp, #0x20
    7488:	ret

000000000000748c <S_SvREFCNT_dec>:
    748c:	stp	x29, x30, [sp, #-48]!
    7490:	mov	x29, sp
    7494:	str	x0, [sp, #24]
    7498:	str	x1, [sp, #16]
    749c:	ldr	x0, [sp, #16]
    74a0:	cmp	x0, #0x0
    74a4:	cset	w0, ne  // ne = any
    74a8:	and	w0, w0, #0xff
    74ac:	and	x0, x0, #0xff
    74b0:	cmp	x0, #0x0
    74b4:	b.eq	7504 <S_SvREFCNT_dec+0x78>  // b.none
    74b8:	ldr	x0, [sp, #16]
    74bc:	ldr	w0, [x0, #8]
    74c0:	str	w0, [sp, #44]
    74c4:	ldr	w0, [sp, #44]
    74c8:	cmp	w0, #0x1
    74cc:	cset	w0, hi  // hi = pmore
    74d0:	and	w0, w0, #0xff
    74d4:	and	x0, x0, #0xff
    74d8:	cmp	x0, #0x0
    74dc:	b.eq	74f4 <S_SvREFCNT_dec+0x68>  // b.none
    74e0:	ldr	w0, [sp, #44]
    74e4:	sub	w1, w0, #0x1
    74e8:	ldr	x0, [sp, #16]
    74ec:	str	w1, [x0, #8]
    74f0:	b	7504 <S_SvREFCNT_dec+0x78>
    74f4:	ldr	w2, [sp, #44]
    74f8:	ldr	x1, [sp, #16]
    74fc:	ldr	x0, [sp, #24]
    7500:	bl	4ff0 <Perl_sv_free2@plt>
    7504:	nop
    7508:	ldp	x29, x30, [sp], #48
    750c:	ret

0000000000007510 <S_croak_memory_wrap>:
    7510:	stp	x29, x30, [sp, #-16]!
    7514:	mov	x29, sp
    7518:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    751c:	ldr	x1, [x0, #4016]
    7520:	adrp	x0, 18000 <boot_B+0x23d8>
    7524:	add	x0, x0, #0x848
    7528:	bl	4e60 <Perl_croak_nocontext@plt>

000000000000752c <B_init_my_cxt>:
    752c:	sub	sp, sp, #0x10
    7530:	str	x0, [sp, #8]
    7534:	str	x1, [sp]
    7538:	ldr	x0, [sp]
    753c:	str	xzr, [x0]
    7540:	ldr	x0, [sp, #8]
    7544:	add	x1, x0, #0x150
    7548:	ldr	x0, [sp]
    754c:	str	x1, [x0, #8]
    7550:	ldr	x0, [sp, #8]
    7554:	add	x1, x0, #0x138
    7558:	ldr	x0, [sp]
    755c:	str	x1, [x0, #16]
    7560:	ldr	x0, [sp, #8]
    7564:	add	x1, x0, #0x168
    7568:	ldr	x0, [sp]
    756c:	str	x1, [x0, #24]
    7570:	ldr	x0, [sp]
    7574:	adrp	x1, 2f000 <values_for_uv.22728+0x14b0>
    7578:	ldr	x1, [x1, #4032]
    757c:	str	x1, [x0, #32]
    7580:	ldr	x0, [sp]
    7584:	adrp	x1, 2f000 <values_for_uv.22728+0x14b0>
    7588:	ldr	x1, [x1, #3992]
    758c:	str	x1, [x0, #40]
    7590:	ldr	x0, [sp]
    7594:	str	xzr, [x0, #48]
    7598:	ldr	x0, [sp, #8]
    759c:	add	x1, x0, #0x180
    75a0:	ldr	x0, [sp]
    75a4:	str	x1, [x0, #56]
    75a8:	nop
    75ac:	add	sp, sp, #0x10
    75b0:	ret

00000000000075b4 <make_op_object>:
    75b4:	stp	x29, x30, [sp, #-48]!
    75b8:	mov	x29, sp
    75bc:	str	x0, [sp, #24]
    75c0:	str	x1, [sp, #16]
    75c4:	ldr	x0, [sp, #24]
    75c8:	bl	5080 <Perl_sv_newmortal@plt>
    75cc:	str	x0, [sp, #40]
    75d0:	ldr	x1, [sp, #16]
    75d4:	ldr	x0, [sp, #24]
    75d8:	bl	5050 <Perl_op_class@plt>
    75dc:	mov	w1, w0
    75e0:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    75e4:	add	x0, x0, #0x720
    75e8:	mov	w1, w1
    75ec:	ldr	x0, [x0, x1, lsl #3]
    75f0:	mov	x2, x0
    75f4:	ldr	x1, [sp, #40]
    75f8:	ldr	x0, [sp, #24]
    75fc:	bl	4fc0 <Perl_newSVrv@plt>
    7600:	mov	x1, x0
    7604:	ldr	x0, [sp, #16]
    7608:	mov	x2, x0
    760c:	ldr	x0, [sp, #24]
    7610:	bl	5040 <Perl_sv_setiv@plt>
    7614:	ldr	x0, [sp, #40]
    7618:	ldp	x29, x30, [sp], #48
    761c:	ret

0000000000007620 <get_overlay_object>:
    7620:	sub	sp, sp, #0x70
    7624:	stp	x29, x30, [sp, #16]
    7628:	add	x29, sp, #0x10
    762c:	str	x0, [sp, #56]
    7630:	str	x1, [sp, #48]
    7634:	str	x2, [sp, #40]
    7638:	str	w3, [sp, #36]
    763c:	mov	w2, #0x0                   	// #0
    7640:	adrp	x0, 18000 <boot_B+0x23d8>
    7644:	add	x1, x0, #0x9e8
    7648:	ldr	x0, [sp, #56]
    764c:	bl	4e50 <Perl_get_sv@plt>
    7650:	str	x0, [sp, #72]
    7654:	ldr	x0, [sp, #72]
    7658:	cmp	x0, #0x0
    765c:	b.eq	7674 <get_overlay_object+0x54>  // b.none
    7660:	ldr	x0, [sp, #72]
    7664:	ldr	w0, [x0, #12]
    7668:	and	w0, w0, #0x800
    766c:	cmp	w0, #0x0
    7670:	b.ne	767c <get_overlay_object+0x5c>  // b.any
    7674:	mov	x0, #0x0                   	// #0
    7678:	b	77b8 <get_overlay_object+0x198>
    767c:	ldr	x0, [sp, #72]
    7680:	ldr	x0, [x0, #16]
    7684:	str	x0, [sp, #72]
    7688:	ldr	x0, [sp, #72]
    768c:	ldr	w0, [x0, #12]
    7690:	and	w0, w0, #0xff
    7694:	cmp	w0, #0xc
    7698:	b.eq	76a4 <get_overlay_object+0x84>  // b.none
    769c:	mov	x0, #0x0                   	// #0
    76a0:	b	77b8 <get_overlay_object+0x198>
    76a4:	ldr	x0, [sp, #48]
    76a8:	mov	x1, x0
    76ac:	ldr	x0, [sp, #56]
    76b0:	bl	5020 <Perl_newSViv@plt>
    76b4:	str	x0, [sp, #80]
    76b8:	str	wzr, [sp]
    76bc:	mov	x7, #0x0                   	// #0
    76c0:	mov	w6, #0x0                   	// #0
    76c4:	mov	w5, #0x0                   	// #0
    76c8:	mov	x4, #0x0                   	// #0
    76cc:	mov	x3, #0x0                   	// #0
    76d0:	ldr	x2, [sp, #80]
    76d4:	ldr	x1, [sp, #72]
    76d8:	ldr	x0, [sp, #56]
    76dc:	bl	4ee0 <Perl_hv_common@plt>
    76e0:	str	x0, [sp, #88]
    76e4:	ldr	x0, [sp, #80]
    76e8:	str	x0, [sp, #96]
    76ec:	ldr	x0, [sp, #96]
    76f0:	mov	x1, x0
    76f4:	ldr	x0, [sp, #56]
    76f8:	bl	748c <S_SvREFCNT_dec>
    76fc:	ldr	x0, [sp, #88]
    7700:	cmp	x0, #0x0
    7704:	b.ne	7710 <get_overlay_object+0xf0>  // b.any
    7708:	mov	x0, #0x0                   	// #0
    770c:	b	77b8 <get_overlay_object+0x198>
    7710:	ldr	x0, [sp, #88]
    7714:	ldr	x0, [x0, #16]
    7718:	str	x0, [sp, #72]
    771c:	ldr	x0, [sp, #72]
    7720:	cmp	x0, #0x0
    7724:	b.eq	773c <get_overlay_object+0x11c>  // b.none
    7728:	ldr	x0, [sp, #72]
    772c:	ldr	w0, [x0, #12]
    7730:	and	w0, w0, #0x800
    7734:	cmp	w0, #0x0
    7738:	b.ne	7744 <get_overlay_object+0x124>  // b.any
    773c:	mov	x0, #0x0                   	// #0
    7740:	b	77b8 <get_overlay_object+0x198>
    7744:	ldr	x0, [sp, #72]
    7748:	ldr	x0, [x0, #16]
    774c:	str	x0, [sp, #72]
    7750:	ldr	x0, [sp, #72]
    7754:	ldr	w0, [x0, #12]
    7758:	and	w0, w0, #0xff
    775c:	cmp	w0, #0xc
    7760:	b.eq	776c <get_overlay_object+0x14c>  // b.none
    7764:	mov	x0, #0x0                   	// #0
    7768:	b	77b8 <get_overlay_object+0x198>
    776c:	ldr	w0, [sp, #36]
    7770:	mov	w6, #0x0                   	// #0
    7774:	mov	x5, #0x0                   	// #0
    7778:	mov	w4, #0x20                  	// #32
    777c:	mov	w3, w0
    7780:	ldr	x2, [sp, #40]
    7784:	ldr	x1, [sp, #72]
    7788:	ldr	x0, [sp, #56]
    778c:	bl	4f70 <Perl_hv_common_key_len@plt>
    7790:	str	x0, [sp, #104]
    7794:	ldr	x0, [sp, #104]
    7798:	cmp	x0, #0x0
    779c:	b.ne	77a8 <get_overlay_object+0x188>  // b.any
    77a0:	mov	x0, #0x0                   	// #0
    77a4:	b	77b8 <get_overlay_object+0x198>
    77a8:	ldr	x0, [sp, #104]
    77ac:	ldr	x0, [x0]
    77b0:	str	x0, [sp, #72]
    77b4:	ldr	x0, [sp, #72]
    77b8:	ldp	x29, x30, [sp, #16]
    77bc:	add	sp, sp, #0x70
    77c0:	ret

00000000000077c4 <make_sv_object>:
    77c4:	stp	x29, x30, [sp, #-64]!
    77c8:	mov	x29, sp
    77cc:	str	x0, [sp, #24]
    77d0:	str	x1, [sp, #16]
    77d4:	ldr	x0, [sp, #24]
    77d8:	bl	5080 <Perl_sv_newmortal@plt>
    77dc:	str	x0, [sp, #48]
    77e0:	str	xzr, [sp, #32]
    77e4:	ldr	x0, [sp, #24]
    77e8:	ldr	x1, [x0, #3032]
    77ec:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    77f0:	add	x0, x0, #0x2e0
    77f4:	ldr	w0, [x0]
    77f8:	sxtw	x0, w0
    77fc:	lsl	x0, x0, #3
    7800:	add	x0, x1, x0
    7804:	ldr	x0, [x0]
    7808:	str	x0, [sp, #56]
    780c:	str	xzr, [sp, #40]
    7810:	b	7848 <make_sv_object+0x84>
    7814:	ldr	x0, [sp, #56]
    7818:	ldr	x1, [sp, #40]
    781c:	ldr	x0, [x0, x1, lsl #3]
    7820:	ldr	x1, [sp, #16]
    7824:	cmp	x1, x0
    7828:	b.ne	783c <make_sv_object+0x78>  // b.any
    782c:	adrp	x0, 18000 <boot_B+0x23d8>
    7830:	add	x0, x0, #0x9f8
    7834:	str	x0, [sp, #32]
    7838:	b	7854 <make_sv_object+0x90>
    783c:	ldr	x0, [sp, #40]
    7840:	add	x0, x0, #0x1
    7844:	str	x0, [sp, #40]
    7848:	ldr	x0, [sp, #40]
    784c:	cmp	x0, #0x7
    7850:	b.le	7814 <make_sv_object+0x50>
    7854:	ldr	x0, [sp, #32]
    7858:	cmp	x0, #0x0
    785c:	b.ne	7888 <make_sv_object+0xc4>  // b.any
    7860:	ldr	x0, [sp, #16]
    7864:	ldr	w0, [x0, #12]
    7868:	and	w1, w0, #0xff
    786c:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    7870:	add	x0, x0, #0x6a0
    7874:	mov	w1, w1
    7878:	ldr	x0, [x0, x1, lsl #3]
    787c:	str	x0, [sp, #32]
    7880:	ldr	x0, [sp, #16]
    7884:	str	x0, [sp, #40]
    7888:	ldr	x2, [sp, #32]
    788c:	ldr	x1, [sp, #48]
    7890:	ldr	x0, [sp, #24]
    7894:	bl	4fc0 <Perl_newSVrv@plt>
    7898:	ldr	x2, [sp, #40]
    789c:	mov	x1, x0
    78a0:	ldr	x0, [sp, #24]
    78a4:	bl	5040 <Perl_sv_setiv@plt>
    78a8:	ldr	x0, [sp, #48]
    78ac:	ldp	x29, x30, [sp], #64
    78b0:	ret

00000000000078b4 <make_temp_object>:
    78b4:	stp	x29, x30, [sp, #-80]!
    78b8:	mov	x29, sp
    78bc:	str	x0, [sp, #24]
    78c0:	str	x1, [sp, #16]
    78c4:	ldr	x0, [sp, #24]
    78c8:	bl	5080 <Perl_sv_newmortal@plt>
    78cc:	str	x0, [sp, #40]
    78d0:	ldr	x0, [sp, #16]
    78d4:	ldr	w0, [x0, #12]
    78d8:	and	w1, w0, #0xff
    78dc:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    78e0:	add	x0, x0, #0x6a0
    78e4:	mov	w1, w1
    78e8:	ldr	x0, [x0, x1, lsl #3]
    78ec:	str	x0, [sp, #48]
    78f0:	ldr	x0, [sp, #16]
    78f4:	str	x0, [sp, #56]
    78f8:	ldr	x2, [sp, #48]
    78fc:	ldr	x1, [sp, #40]
    7900:	ldr	x0, [sp, #24]
    7904:	bl	4fc0 <Perl_newSVrv@plt>
    7908:	str	x0, [sp, #64]
    790c:	ldr	x2, [sp, #56]
    7910:	ldr	x1, [sp, #64]
    7914:	ldr	x0, [sp, #24]
    7918:	bl	5040 <Perl_sv_setiv@plt>
    791c:	mov	w6, #0x0                   	// #0
    7920:	mov	x5, #0x0                   	// #0
    7924:	mov	x4, #0x0                   	// #0
    7928:	mov	w3, #0x0                   	// #0
    792c:	ldr	x2, [sp, #16]
    7930:	ldr	x1, [sp, #64]
    7934:	ldr	x0, [sp, #24]
    7938:	bl	4be0 <Perl_sv_magicext@plt>
    793c:	ldr	x0, [sp, #16]
    7940:	str	x0, [sp, #72]
    7944:	ldr	x0, [sp, #72]
    7948:	mov	x1, x0
    794c:	ldr	x0, [sp, #24]
    7950:	bl	748c <S_SvREFCNT_dec>
    7954:	ldr	x0, [sp, #40]
    7958:	ldp	x29, x30, [sp], #80
    795c:	ret

0000000000007960 <make_warnings_object>:
    7960:	stp	x29, x30, [sp, #-80]!
    7964:	mov	x29, sp
    7968:	str	x0, [sp, #24]
    796c:	str	x1, [sp, #16]
    7970:	ldr	x0, [sp, #16]
    7974:	ldr	x0, [x0, #64]
    7978:	str	x0, [sp, #56]
    797c:	str	xzr, [sp, #40]
    7980:	ldr	x0, [sp, #24]
    7984:	ldr	x1, [x0, #3032]
    7988:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    798c:	add	x0, x0, #0x2e0
    7990:	ldr	w0, [x0]
    7994:	sxtw	x0, w0
    7998:	lsl	x0, x0, #3
    799c:	add	x0, x1, x0
    79a0:	ldr	x0, [x0]
    79a4:	str	x0, [sp, #64]
    79a8:	mov	x0, #0x8                   	// #8
    79ac:	str	x0, [sp, #48]
    79b0:	b	79dc <make_warnings_object+0x7c>
    79b4:	ldr	x0, [sp, #64]
    79b8:	ldr	x1, [sp, #48]
    79bc:	ldr	x0, [x0, x1, lsl #3]
    79c0:	ldr	x1, [sp, #56]
    79c4:	cmp	x1, x0
    79c8:	b.ne	79dc <make_warnings_object+0x7c>  // b.any
    79cc:	adrp	x0, 18000 <boot_B+0x23d8>
    79d0:	add	x0, x0, #0x9f8
    79d4:	str	x0, [sp, #40]
    79d8:	b	79f0 <make_warnings_object+0x90>
    79dc:	ldr	x0, [sp, #48]
    79e0:	sub	x1, x0, #0x1
    79e4:	str	x1, [sp, #48]
    79e8:	cmp	x0, #0x0
    79ec:	b.ne	79b4 <make_warnings_object+0x54>  // b.any
    79f0:	ldr	x0, [sp, #40]
    79f4:	cmp	x0, #0x0
    79f8:	b.eq	7a30 <make_warnings_object+0xd0>  // b.none
    79fc:	ldr	x0, [sp, #24]
    7a00:	bl	5080 <Perl_sv_newmortal@plt>
    7a04:	str	x0, [sp, #72]
    7a08:	ldr	x2, [sp, #40]
    7a0c:	ldr	x1, [sp, #72]
    7a10:	ldr	x0, [sp, #24]
    7a14:	bl	4fc0 <Perl_newSVrv@plt>
    7a18:	ldr	x2, [sp, #48]
    7a1c:	mov	x1, x0
    7a20:	ldr	x0, [sp, #24]
    7a24:	bl	5040 <Perl_sv_setiv@plt>
    7a28:	ldr	x0, [sp, #72]
    7a2c:	b	7a58 <make_warnings_object+0xf8>
    7a30:	ldr	x0, [sp, #56]
    7a34:	add	x1, x0, #0x8
    7a38:	ldr	x0, [sp, #56]
    7a3c:	ldr	x0, [x0]
    7a40:	mov	x2, x0
    7a44:	ldr	x0, [sp, #24]
    7a48:	bl	5070 <Perl_newSVpvn@plt>
    7a4c:	mov	x1, x0
    7a50:	ldr	x0, [sp, #24]
    7a54:	bl	78b4 <make_temp_object>
    7a58:	ldp	x29, x30, [sp], #80
    7a5c:	ret

0000000000007a60 <make_cop_io_object>:
    7a60:	stp	x29, x30, [sp, #-48]!
    7a64:	mov	x29, sp
    7a68:	str	x0, [sp, #24]
    7a6c:	str	x1, [sp, #16]
    7a70:	mov	x1, #0x0                   	// #0
    7a74:	ldr	x0, [sp, #24]
    7a78:	bl	4c10 <Perl_newSV@plt>
    7a7c:	str	x0, [sp, #32]
    7a80:	ldr	x2, [sp, #32]
    7a84:	ldr	x1, [sp, #16]
    7a88:	ldr	x0, [sp, #24]
    7a8c:	bl	4e00 <Perl_emulate_cop_io@plt>
    7a90:	ldr	x0, [sp, #32]
    7a94:	ldr	w0, [x0, #12]
    7a98:	and	w0, w0, #0xff00
    7a9c:	cmp	w0, #0x0
    7aa0:	b.eq	7ab4 <make_cop_io_object+0x54>  // b.none
    7aa4:	ldr	x1, [sp, #32]
    7aa8:	ldr	x0, [sp, #24]
    7aac:	bl	77c4 <make_sv_object>
    7ab0:	b	7ad8 <make_cop_io_object+0x78>
    7ab4:	ldr	x0, [sp, #32]
    7ab8:	str	x0, [sp, #40]
    7abc:	ldr	x0, [sp, #40]
    7ac0:	mov	x1, x0
    7ac4:	ldr	x0, [sp, #24]
    7ac8:	bl	748c <S_SvREFCNT_dec>
    7acc:	mov	x1, #0x0                   	// #0
    7ad0:	ldr	x0, [sp, #24]
    7ad4:	bl	77c4 <make_sv_object>
    7ad8:	ldp	x29, x30, [sp], #48
    7adc:	ret

0000000000007ae0 <make_mg_object>:
    7ae0:	stp	x29, x30, [sp, #-48]!
    7ae4:	mov	x29, sp
    7ae8:	str	x0, [sp, #24]
    7aec:	str	x1, [sp, #16]
    7af0:	ldr	x0, [sp, #24]
    7af4:	bl	5080 <Perl_sv_newmortal@plt>
    7af8:	str	x0, [sp, #40]
    7afc:	adrp	x0, 18000 <boot_B+0x23d8>
    7b00:	add	x2, x0, #0xa08
    7b04:	ldr	x1, [sp, #40]
    7b08:	ldr	x0, [sp, #24]
    7b0c:	bl	4fc0 <Perl_newSVrv@plt>
    7b10:	mov	x1, x0
    7b14:	ldr	x0, [sp, #16]
    7b18:	mov	x2, x0
    7b1c:	ldr	x0, [sp, #24]
    7b20:	bl	5040 <Perl_sv_setiv@plt>
    7b24:	ldr	x0, [sp, #40]
    7b28:	ldp	x29, x30, [sp], #48
    7b2c:	ret

0000000000007b30 <cstring>:
    7b30:	stp	x29, x30, [sp, #-112]!
    7b34:	mov	x29, sp
    7b38:	str	x0, [sp, #40]
    7b3c:	str	x1, [sp, #32]
    7b40:	strb	w2, [sp, #31]
    7b44:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    7b48:	ldr	x0, [x0, #4008]
    7b4c:	ldr	x1, [x0]
    7b50:	str	x1, [sp, #104]
    7b54:	mov	x1, #0x0                   	// #0
    7b58:	ldr	x0, [sp, #32]
    7b5c:	ldr	w0, [x0, #12]
    7b60:	and	w0, w0, #0xff00
    7b64:	cmp	w0, #0x0
    7b68:	b.ne	7b88 <cstring+0x58>  // b.any
    7b6c:	mov	w3, #0x80000               	// #524288
    7b70:	mov	x2, #0x1                   	// #1
    7b74:	adrp	x0, 18000 <boot_B+0x23d8>
    7b78:	add	x1, x0, #0xa18
    7b7c:	ldr	x0, [sp, #40]
    7b80:	bl	4d80 <Perl_newSVpvn_flags@plt>
    7b84:	b	80dc <cstring+0x5ac>
    7b88:	mov	w3, #0x80000               	// #524288
    7b8c:	mov	x2, #0x1                   	// #1
    7b90:	adrp	x0, 18000 <boot_B+0x23d8>
    7b94:	add	x1, x0, #0xa20
    7b98:	ldr	x0, [sp, #40]
    7b9c:	bl	4d80 <Perl_newSVpvn_flags@plt>
    7ba0:	str	x0, [sp, #80]
    7ba4:	ldrb	w0, [sp, #31]
    7ba8:	cmp	w0, #0x0
    7bac:	b.eq	7d4c <cstring+0x21c>  // b.none
    7bb0:	ldr	x0, [sp, #32]
    7bb4:	ldr	w0, [x0, #12]
    7bb8:	and	w0, w0, #0x20000000
    7bbc:	cmp	w0, #0x0
    7bc0:	b.eq	7d4c <cstring+0x21c>  // b.none
    7bc4:	ldr	x0, [sp, #40]
    7bc8:	bl	5080 <Perl_sv_newmortal@plt>
    7bcc:	str	x0, [sp, #88]
    7bd0:	ldr	x0, [sp, #32]
    7bd4:	ldr	x0, [x0]
    7bd8:	ldr	x0, [x0, #16]
    7bdc:	str	x0, [sp, #96]
    7be0:	ldr	x0, [sp, #96]
    7be4:	lsl	x0, x0, #3
    7be8:	mov	x4, #0x3                   	// #3
    7bec:	mov	x3, x0
    7bf0:	ldr	x2, [sp, #32]
    7bf4:	ldr	x1, [sp, #88]
    7bf8:	ldr	x0, [sp, #40]
    7bfc:	bl	5090 <Perl_sv_uni_display@plt>
    7c00:	str	x0, [sp, #64]
    7c04:	b	7d38 <cstring+0x208>
    7c08:	ldr	x0, [sp, #64]
    7c0c:	ldrb	w0, [x0]
    7c10:	cmp	w0, #0x22
    7c14:	b.ne	7c38 <cstring+0x108>  // b.any
    7c18:	mov	w4, #0x2                   	// #2
    7c1c:	mov	x3, #0x2                   	// #2
    7c20:	adrp	x0, 18000 <boot_B+0x23d8>
    7c24:	add	x2, x0, #0xa28
    7c28:	ldr	x1, [sp, #80]
    7c2c:	ldr	x0, [sp, #40]
    7c30:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7c34:	b	7d2c <cstring+0x1fc>
    7c38:	ldr	x0, [sp, #64]
    7c3c:	ldrb	w0, [x0]
    7c40:	cmp	w0, #0x24
    7c44:	b.ne	7c68 <cstring+0x138>  // b.any
    7c48:	mov	w4, #0x2                   	// #2
    7c4c:	mov	x3, #0x2                   	// #2
    7c50:	adrp	x0, 18000 <boot_B+0x23d8>
    7c54:	add	x2, x0, #0xa30
    7c58:	ldr	x1, [sp, #80]
    7c5c:	ldr	x0, [sp, #40]
    7c60:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7c64:	b	7d2c <cstring+0x1fc>
    7c68:	ldr	x0, [sp, #64]
    7c6c:	ldrb	w0, [x0]
    7c70:	cmp	w0, #0x40
    7c74:	b.ne	7c98 <cstring+0x168>  // b.any
    7c78:	mov	w4, #0x2                   	// #2
    7c7c:	mov	x3, #0x2                   	// #2
    7c80:	adrp	x0, 18000 <boot_B+0x23d8>
    7c84:	add	x2, x0, #0xa38
    7c88:	ldr	x1, [sp, #80]
    7c8c:	ldr	x0, [sp, #40]
    7c90:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7c94:	b	7d2c <cstring+0x1fc>
    7c98:	ldr	x0, [sp, #64]
    7c9c:	ldrb	w0, [x0]
    7ca0:	cmp	w0, #0x5c
    7ca4:	b.ne	7d14 <cstring+0x1e4>  // b.any
    7ca8:	ldr	x0, [sp, #64]
    7cac:	add	x0, x0, #0x1
    7cb0:	ldrb	w0, [x0]
    7cb4:	mov	w1, w0
    7cb8:	adrp	x0, 18000 <boot_B+0x23d8>
    7cbc:	add	x0, x0, #0xa40
    7cc0:	bl	4ef0 <strchr@plt>
    7cc4:	cmp	x0, #0x0
    7cc8:	b.eq	7cf4 <cstring+0x1c4>  // b.none
    7ccc:	ldr	x0, [sp, #64]
    7cd0:	add	x1, x0, #0x1
    7cd4:	str	x1, [sp, #64]
    7cd8:	mov	w4, #0x2                   	// #2
    7cdc:	mov	x3, #0x2                   	// #2
    7ce0:	mov	x2, x0
    7ce4:	ldr	x1, [sp, #80]
    7ce8:	ldr	x0, [sp, #40]
    7cec:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7cf0:	b	7d2c <cstring+0x1fc>
    7cf4:	mov	w4, #0x2                   	// #2
    7cf8:	mov	x3, #0x2                   	// #2
    7cfc:	adrp	x0, 18000 <boot_B+0x23d8>
    7d00:	add	x2, x0, #0xa48
    7d04:	ldr	x1, [sp, #80]
    7d08:	ldr	x0, [sp, #40]
    7d0c:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7d10:	b	7d2c <cstring+0x1fc>
    7d14:	mov	w4, #0x2                   	// #2
    7d18:	mov	x3, #0x1                   	// #1
    7d1c:	ldr	x2, [sp, #64]
    7d20:	ldr	x1, [sp, #80]
    7d24:	ldr	x0, [sp, #40]
    7d28:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7d2c:	ldr	x0, [sp, #64]
    7d30:	add	x0, x0, #0x1
    7d34:	str	x0, [sp, #64]
    7d38:	ldr	x0, [sp, #64]
    7d3c:	ldrb	w0, [x0]
    7d40:	cmp	w0, #0x0
    7d44:	b.ne	7c08 <cstring+0xd8>  // b.any
    7d48:	b	80bc <cstring+0x58c>
    7d4c:	ldr	x0, [sp, #32]
    7d50:	ldr	w1, [x0, #12]
    7d54:	mov	w0, #0x400                 	// #1024
    7d58:	movk	w0, #0x20, lsl #16
    7d5c:	and	w0, w1, w0
    7d60:	cmp	w0, #0x400
    7d64:	b.ne	7d84 <cstring+0x254>  // b.any
    7d68:	ldr	x0, [sp, #32]
    7d6c:	ldr	x0, [x0]
    7d70:	ldr	x0, [x0, #16]
    7d74:	str	x0, [sp, #56]
    7d78:	ldr	x0, [sp, #32]
    7d7c:	ldr	x0, [x0, #16]
    7d80:	b	7d9c <cstring+0x26c>
    7d84:	add	x0, sp, #0x38
    7d88:	mov	w3, #0x2                   	// #2
    7d8c:	mov	x2, x0
    7d90:	ldr	x1, [sp, #32]
    7d94:	ldr	x0, [sp, #40]
    7d98:	bl	4ce0 <Perl_sv_2pv_flags@plt>
    7d9c:	str	x0, [sp, #72]
    7da0:	b	80b0 <cstring+0x580>
    7da4:	ldr	x0, [sp, #72]
    7da8:	ldrb	w0, [x0]
    7dac:	cmp	w0, #0x22
    7db0:	b.ne	7dd4 <cstring+0x2a4>  // b.any
    7db4:	mov	w4, #0x2                   	// #2
    7db8:	mov	x3, #0x2                   	// #2
    7dbc:	adrp	x0, 18000 <boot_B+0x23d8>
    7dc0:	add	x2, x0, #0xa28
    7dc4:	ldr	x1, [sp, #80]
    7dc8:	ldr	x0, [sp, #40]
    7dcc:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7dd0:	b	8098 <cstring+0x568>
    7dd4:	ldr	x0, [sp, #72]
    7dd8:	ldrb	w0, [x0]
    7ddc:	cmp	w0, #0x5c
    7de0:	b.ne	7e04 <cstring+0x2d4>  // b.any
    7de4:	mov	w4, #0x2                   	// #2
    7de8:	mov	x3, #0x2                   	// #2
    7dec:	adrp	x0, 18000 <boot_B+0x23d8>
    7df0:	add	x2, x0, #0xa48
    7df4:	ldr	x1, [sp, #80]
    7df8:	ldr	x0, [sp, #40]
    7dfc:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7e00:	b	8098 <cstring+0x568>
    7e04:	ldrb	w0, [sp, #31]
    7e08:	eor	w0, w0, #0x1
    7e0c:	and	w0, w0, #0xff
    7e10:	cmp	w0, #0x0
    7e14:	b.eq	7e64 <cstring+0x334>  // b.none
    7e18:	ldr	x0, [sp, #72]
    7e1c:	ldrb	w0, [x0]
    7e20:	cmp	w0, #0x3f
    7e24:	b.ne	7e64 <cstring+0x334>  // b.any
    7e28:	ldr	x0, [sp, #56]
    7e2c:	cmp	x0, #0x2
    7e30:	b.ls	7e64 <cstring+0x334>  // b.plast
    7e34:	ldr	x0, [sp, #72]
    7e38:	add	x0, x0, #0x1
    7e3c:	ldrb	w0, [x0]
    7e40:	cmp	w0, #0x3f
    7e44:	b.ne	7e64 <cstring+0x334>  // b.any
    7e48:	mov	w3, #0x3f                  	// #63
    7e4c:	adrp	x0, 18000 <boot_B+0x23d8>
    7e50:	add	x2, x0, #0xa50
    7e54:	ldr	x1, [sp, #80]
    7e58:	ldr	x0, [sp, #40]
    7e5c:	bl	4c40 <Perl_sv_catpvf@plt>
    7e60:	b	8098 <cstring+0x568>
    7e64:	ldrb	w0, [sp, #31]
    7e68:	cmp	w0, #0x0
    7e6c:	b.eq	7ea0 <cstring+0x370>  // b.none
    7e70:	ldr	x0, [sp, #72]
    7e74:	ldrb	w0, [x0]
    7e78:	cmp	w0, #0x24
    7e7c:	b.ne	7ea0 <cstring+0x370>  // b.any
    7e80:	mov	w4, #0x2                   	// #2
    7e84:	mov	x3, #0x2                   	// #2
    7e88:	adrp	x0, 18000 <boot_B+0x23d8>
    7e8c:	add	x2, x0, #0xa30
    7e90:	ldr	x1, [sp, #80]
    7e94:	ldr	x0, [sp, #40]
    7e98:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7e9c:	b	8098 <cstring+0x568>
    7ea0:	ldrb	w0, [sp, #31]
    7ea4:	cmp	w0, #0x0
    7ea8:	b.eq	7edc <cstring+0x3ac>  // b.none
    7eac:	ldr	x0, [sp, #72]
    7eb0:	ldrb	w0, [x0]
    7eb4:	cmp	w0, #0x40
    7eb8:	b.ne	7edc <cstring+0x3ac>  // b.any
    7ebc:	mov	w4, #0x2                   	// #2
    7ec0:	mov	x3, #0x2                   	// #2
    7ec4:	adrp	x0, 18000 <boot_B+0x23d8>
    7ec8:	add	x2, x0, #0xa38
    7ecc:	ldr	x1, [sp, #80]
    7ed0:	ldr	x0, [sp, #40]
    7ed4:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7ed8:	b	8098 <cstring+0x568>
    7edc:	ldr	x0, [sp, #72]
    7ee0:	ldrb	w0, [x0]
    7ee4:	sub	w0, w0, #0x20
    7ee8:	cmp	w0, #0x5e
    7eec:	b.hi	7f0c <cstring+0x3dc>  // b.pmore
    7ef0:	mov	w4, #0x2                   	// #2
    7ef4:	mov	x3, #0x1                   	// #1
    7ef8:	ldr	x2, [sp, #72]
    7efc:	ldr	x1, [sp, #80]
    7f00:	ldr	x0, [sp, #40]
    7f04:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7f08:	b	8098 <cstring+0x568>
    7f0c:	ldr	x0, [sp, #72]
    7f10:	ldrb	w0, [x0]
    7f14:	cmp	w0, #0xa
    7f18:	b.ne	7f3c <cstring+0x40c>  // b.any
    7f1c:	mov	w4, #0x2                   	// #2
    7f20:	mov	x3, #0x2                   	// #2
    7f24:	adrp	x0, 18000 <boot_B+0x23d8>
    7f28:	add	x2, x0, #0xa58
    7f2c:	ldr	x1, [sp, #80]
    7f30:	ldr	x0, [sp, #40]
    7f34:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7f38:	b	8098 <cstring+0x568>
    7f3c:	ldr	x0, [sp, #72]
    7f40:	ldrb	w0, [x0]
    7f44:	cmp	w0, #0xd
    7f48:	b.ne	7f6c <cstring+0x43c>  // b.any
    7f4c:	mov	w4, #0x2                   	// #2
    7f50:	mov	x3, #0x2                   	// #2
    7f54:	adrp	x0, 18000 <boot_B+0x23d8>
    7f58:	add	x2, x0, #0xa60
    7f5c:	ldr	x1, [sp, #80]
    7f60:	ldr	x0, [sp, #40]
    7f64:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7f68:	b	8098 <cstring+0x568>
    7f6c:	ldr	x0, [sp, #72]
    7f70:	ldrb	w0, [x0]
    7f74:	cmp	w0, #0x9
    7f78:	b.ne	7f9c <cstring+0x46c>  // b.any
    7f7c:	mov	w4, #0x2                   	// #2
    7f80:	mov	x3, #0x2                   	// #2
    7f84:	adrp	x0, 18000 <boot_B+0x23d8>
    7f88:	add	x2, x0, #0xa68
    7f8c:	ldr	x1, [sp, #80]
    7f90:	ldr	x0, [sp, #40]
    7f94:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7f98:	b	8098 <cstring+0x568>
    7f9c:	ldr	x0, [sp, #72]
    7fa0:	ldrb	w0, [x0]
    7fa4:	cmp	w0, #0x7
    7fa8:	b.ne	7fcc <cstring+0x49c>  // b.any
    7fac:	mov	w4, #0x2                   	// #2
    7fb0:	mov	x3, #0x2                   	// #2
    7fb4:	adrp	x0, 18000 <boot_B+0x23d8>
    7fb8:	add	x2, x0, #0xa70
    7fbc:	ldr	x1, [sp, #80]
    7fc0:	ldr	x0, [sp, #40]
    7fc4:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7fc8:	b	8098 <cstring+0x568>
    7fcc:	ldr	x0, [sp, #72]
    7fd0:	ldrb	w0, [x0]
    7fd4:	cmp	w0, #0x8
    7fd8:	b.ne	7ffc <cstring+0x4cc>  // b.any
    7fdc:	mov	w4, #0x2                   	// #2
    7fe0:	mov	x3, #0x2                   	// #2
    7fe4:	adrp	x0, 18000 <boot_B+0x23d8>
    7fe8:	add	x2, x0, #0xa78
    7fec:	ldr	x1, [sp, #80]
    7ff0:	ldr	x0, [sp, #40]
    7ff4:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    7ff8:	b	8098 <cstring+0x568>
    7ffc:	ldr	x0, [sp, #72]
    8000:	ldrb	w0, [x0]
    8004:	cmp	w0, #0xc
    8008:	b.ne	802c <cstring+0x4fc>  // b.any
    800c:	mov	w4, #0x2                   	// #2
    8010:	mov	x3, #0x2                   	// #2
    8014:	adrp	x0, 18000 <boot_B+0x23d8>
    8018:	add	x2, x0, #0xa80
    801c:	ldr	x1, [sp, #80]
    8020:	ldr	x0, [sp, #40]
    8024:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    8028:	b	8098 <cstring+0x568>
    802c:	ldrb	w0, [sp, #31]
    8030:	eor	w0, w0, #0x1
    8034:	and	w0, w0, #0xff
    8038:	cmp	w0, #0x0
    803c:	b.eq	8070 <cstring+0x540>  // b.none
    8040:	ldr	x0, [sp, #72]
    8044:	ldrb	w0, [x0]
    8048:	cmp	w0, #0xb
    804c:	b.ne	8070 <cstring+0x540>  // b.any
    8050:	mov	w4, #0x2                   	// #2
    8054:	mov	x3, #0x2                   	// #2
    8058:	adrp	x0, 18000 <boot_B+0x23d8>
    805c:	add	x2, x0, #0xa88
    8060:	ldr	x1, [sp, #80]
    8064:	ldr	x0, [sp, #40]
    8068:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    806c:	b	8098 <cstring+0x568>
    8070:	ldr	x0, [sp, #72]
    8074:	ldrb	w0, [x0]
    8078:	strb	w0, [sp, #55]
    807c:	ldrb	w0, [sp, #55]
    8080:	mov	w3, w0
    8084:	adrp	x0, 18000 <boot_B+0x23d8>
    8088:	add	x2, x0, #0xa50
    808c:	ldr	x1, [sp, #80]
    8090:	ldr	x0, [sp, #40]
    8094:	bl	4c40 <Perl_sv_catpvf@plt>
    8098:	ldr	x0, [sp, #56]
    809c:	sub	x0, x0, #0x1
    80a0:	str	x0, [sp, #56]
    80a4:	ldr	x0, [sp, #72]
    80a8:	add	x0, x0, #0x1
    80ac:	str	x0, [sp, #72]
    80b0:	ldr	x0, [sp, #56]
    80b4:	cmp	x0, #0x0
    80b8:	b.ne	7da4 <cstring+0x274>  // b.any
    80bc:	mov	w4, #0x2                   	// #2
    80c0:	mov	x3, #0x1                   	// #1
    80c4:	adrp	x0, 18000 <boot_B+0x23d8>
    80c8:	add	x2, x0, #0xa20
    80cc:	ldr	x1, [sp, #80]
    80d0:	ldr	x0, [sp, #40]
    80d4:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    80d8:	ldr	x0, [sp, #80]
    80dc:	mov	x1, x0
    80e0:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    80e4:	ldr	x0, [x0, #4008]
    80e8:	ldr	x2, [sp, #104]
    80ec:	ldr	x0, [x0]
    80f0:	eor	x0, x2, x0
    80f4:	cmp	x0, #0x0
    80f8:	b.eq	8100 <cstring+0x5d0>  // b.none
    80fc:	bl	4d30 <__stack_chk_fail@plt>
    8100:	mov	x0, x1
    8104:	ldp	x29, x30, [sp], #112
    8108:	ret

000000000000810c <cchar>:
    810c:	stp	x29, x30, [sp, #-64]!
    8110:	mov	x29, sp
    8114:	str	x0, [sp, #24]
    8118:	str	x1, [sp, #16]
    811c:	mov	w3, #0x80000               	// #524288
    8120:	mov	x2, #0x1                   	// #1
    8124:	adrp	x0, 18000 <boot_B+0x23d8>
    8128:	add	x1, x0, #0xa90
    812c:	ldr	x0, [sp, #24]
    8130:	bl	4d80 <Perl_newSVpvn_flags@plt>
    8134:	str	x0, [sp, #48]
    8138:	ldr	x0, [sp, #16]
    813c:	ldr	w1, [x0, #12]
    8140:	mov	w0, #0x400                 	// #1024
    8144:	movk	w0, #0x20, lsl #16
    8148:	and	w0, w1, w0
    814c:	cmp	w0, #0x400
    8150:	b.ne	8160 <cchar+0x54>  // b.any
    8154:	ldr	x0, [sp, #16]
    8158:	ldr	x0, [x0, #16]
    815c:	b	8174 <cchar+0x68>
    8160:	mov	w3, #0x2                   	// #2
    8164:	mov	x2, #0x0                   	// #0
    8168:	ldr	x1, [sp, #16]
    816c:	ldr	x0, [sp, #24]
    8170:	bl	4ce0 <Perl_sv_2pv_flags@plt>
    8174:	str	x0, [sp, #56]
    8178:	ldr	x0, [sp, #56]
    817c:	ldrb	w0, [x0]
    8180:	strb	w0, [sp, #47]
    8184:	ldrb	w0, [sp, #47]
    8188:	cmp	w0, #0x27
    818c:	b.ne	81b0 <cchar+0xa4>  // b.any
    8190:	mov	w4, #0x2                   	// #2
    8194:	mov	x3, #0x2                   	// #2
    8198:	adrp	x0, 18000 <boot_B+0x23d8>
    819c:	add	x2, x0, #0xa98
    81a0:	ldr	x1, [sp, #48]
    81a4:	ldr	x0, [sp, #24]
    81a8:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    81ac:	b	8358 <cchar+0x24c>
    81b0:	ldrb	w0, [sp, #47]
    81b4:	cmp	w0, #0x5c
    81b8:	b.ne	81dc <cchar+0xd0>  // b.any
    81bc:	mov	w4, #0x2                   	// #2
    81c0:	mov	x3, #0x2                   	// #2
    81c4:	adrp	x0, 18000 <boot_B+0x23d8>
    81c8:	add	x2, x0, #0xa48
    81cc:	ldr	x1, [sp, #48]
    81d0:	ldr	x0, [sp, #24]
    81d4:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    81d8:	b	8358 <cchar+0x24c>
    81dc:	ldrb	w0, [sp, #47]
    81e0:	sub	w0, w0, #0x20
    81e4:	cmp	w0, #0x5e
    81e8:	b.hi	8208 <cchar+0xfc>  // b.pmore
    81ec:	mov	w4, #0x2                   	// #2
    81f0:	mov	x3, #0x1                   	// #1
    81f4:	ldr	x2, [sp, #56]
    81f8:	ldr	x1, [sp, #48]
    81fc:	ldr	x0, [sp, #24]
    8200:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    8204:	b	8358 <cchar+0x24c>
    8208:	ldrb	w0, [sp, #47]
    820c:	cmp	w0, #0xa
    8210:	b.ne	8234 <cchar+0x128>  // b.any
    8214:	mov	w4, #0x2                   	// #2
    8218:	mov	x3, #0x2                   	// #2
    821c:	adrp	x0, 18000 <boot_B+0x23d8>
    8220:	add	x2, x0, #0xa58
    8224:	ldr	x1, [sp, #48]
    8228:	ldr	x0, [sp, #24]
    822c:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    8230:	b	8358 <cchar+0x24c>
    8234:	ldrb	w0, [sp, #47]
    8238:	cmp	w0, #0xd
    823c:	b.ne	8260 <cchar+0x154>  // b.any
    8240:	mov	w4, #0x2                   	// #2
    8244:	mov	x3, #0x2                   	// #2
    8248:	adrp	x0, 18000 <boot_B+0x23d8>
    824c:	add	x2, x0, #0xa60
    8250:	ldr	x1, [sp, #48]
    8254:	ldr	x0, [sp, #24]
    8258:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    825c:	b	8358 <cchar+0x24c>
    8260:	ldrb	w0, [sp, #47]
    8264:	cmp	w0, #0x9
    8268:	b.ne	828c <cchar+0x180>  // b.any
    826c:	mov	w4, #0x2                   	// #2
    8270:	mov	x3, #0x2                   	// #2
    8274:	adrp	x0, 18000 <boot_B+0x23d8>
    8278:	add	x2, x0, #0xa68
    827c:	ldr	x1, [sp, #48]
    8280:	ldr	x0, [sp, #24]
    8284:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    8288:	b	8358 <cchar+0x24c>
    828c:	ldrb	w0, [sp, #47]
    8290:	cmp	w0, #0x7
    8294:	b.ne	82b8 <cchar+0x1ac>  // b.any
    8298:	mov	w4, #0x2                   	// #2
    829c:	mov	x3, #0x2                   	// #2
    82a0:	adrp	x0, 18000 <boot_B+0x23d8>
    82a4:	add	x2, x0, #0xa70
    82a8:	ldr	x1, [sp, #48]
    82ac:	ldr	x0, [sp, #24]
    82b0:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    82b4:	b	8358 <cchar+0x24c>
    82b8:	ldrb	w0, [sp, #47]
    82bc:	cmp	w0, #0x8
    82c0:	b.ne	82e4 <cchar+0x1d8>  // b.any
    82c4:	mov	w4, #0x2                   	// #2
    82c8:	mov	x3, #0x2                   	// #2
    82cc:	adrp	x0, 18000 <boot_B+0x23d8>
    82d0:	add	x2, x0, #0xa78
    82d4:	ldr	x1, [sp, #48]
    82d8:	ldr	x0, [sp, #24]
    82dc:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    82e0:	b	8358 <cchar+0x24c>
    82e4:	ldrb	w0, [sp, #47]
    82e8:	cmp	w0, #0xc
    82ec:	b.ne	8310 <cchar+0x204>  // b.any
    82f0:	mov	w4, #0x2                   	// #2
    82f4:	mov	x3, #0x2                   	// #2
    82f8:	adrp	x0, 18000 <boot_B+0x23d8>
    82fc:	add	x2, x0, #0xa80
    8300:	ldr	x1, [sp, #48]
    8304:	ldr	x0, [sp, #24]
    8308:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    830c:	b	8358 <cchar+0x24c>
    8310:	ldrb	w0, [sp, #47]
    8314:	cmp	w0, #0xb
    8318:	b.ne	833c <cchar+0x230>  // b.any
    831c:	mov	w4, #0x2                   	// #2
    8320:	mov	x3, #0x2                   	// #2
    8324:	adrp	x0, 18000 <boot_B+0x23d8>
    8328:	add	x2, x0, #0xa88
    832c:	ldr	x1, [sp, #48]
    8330:	ldr	x0, [sp, #24]
    8334:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    8338:	b	8358 <cchar+0x24c>
    833c:	ldrb	w0, [sp, #47]
    8340:	mov	w3, w0
    8344:	adrp	x0, 18000 <boot_B+0x23d8>
    8348:	add	x2, x0, #0xa50
    834c:	ldr	x1, [sp, #48]
    8350:	ldr	x0, [sp, #24]
    8354:	bl	4c40 <Perl_sv_catpvf@plt>
    8358:	mov	w4, #0x2                   	// #2
    835c:	mov	x3, #0x1                   	// #1
    8360:	adrp	x0, 18000 <boot_B+0x23d8>
    8364:	add	x2, x0, #0xa90
    8368:	ldr	x1, [sp, #48]
    836c:	ldr	x0, [sp, #24]
    8370:	bl	4b90 <Perl_sv_catpvn_flags@plt>
    8374:	ldr	x0, [sp, #48]
    8378:	ldp	x29, x30, [sp], #64
    837c:	ret

0000000000008380 <walkoptree>:
    8380:	stp	x29, x30, [sp, #-112]!
    8384:	mov	x29, sp
    8388:	str	x0, [sp, #40]
    838c:	str	x1, [sp, #32]
    8390:	str	x2, [sp, #24]
    8394:	str	x3, [sp, #16]
    8398:	ldr	x0, [sp, #40]
    839c:	ldr	x0, [x0]
    83a0:	str	x0, [sp, #56]
    83a4:	ldr	x1, [sp, #32]
    83a8:	ldr	x0, [sp, #40]
    83ac:	bl	5050 <Perl_op_class@plt>
    83b0:	mov	w1, w0
    83b4:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    83b8:	add	x0, x0, #0x720
    83bc:	mov	w1, w1
    83c0:	ldr	x0, [x0, x1, lsl #3]
    83c4:	str	x0, [sp, #96]
    83c8:	ldr	x0, [sp, #40]
    83cc:	ldr	x1, [x0, #3032]
    83d0:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    83d4:	add	x0, x0, #0x2e0
    83d8:	ldr	w0, [x0]
    83dc:	sxtw	x0, w0
    83e0:	lsl	x0, x0, #3
    83e4:	add	x0, x1, x0
    83e8:	ldr	x0, [x0]
    83ec:	str	x0, [sp, #104]
    83f0:	ldr	x0, [sp, #16]
    83f4:	ldr	w0, [x0, #8]
    83f8:	cmp	w0, #0x1
    83fc:	b.ne	8514 <walkoptree+0x194>  // b.any
    8400:	ldr	x0, [sp, #16]
    8404:	ldr	w0, [x0, #12]
    8408:	and	w0, w0, #0x800
    840c:	cmp	w0, #0x0
    8410:	b.eq	8514 <walkoptree+0x194>  // b.none
    8414:	ldr	x0, [sp, #16]
    8418:	ldr	w0, [x0, #12]
    841c:	and	w0, w0, #0xff
    8420:	cmp	w0, #0x1
    8424:	b.ne	8514 <walkoptree+0x194>  // b.any
    8428:	ldr	x0, [sp, #16]
    842c:	ldr	x0, [x0, #16]
    8430:	str	x0, [sp, #72]
    8434:	ldr	x0, [sp, #72]
    8438:	cmp	x0, #0x0
    843c:	b.eq	8514 <walkoptree+0x194>  // b.none
    8440:	ldr	x0, [sp, #72]
    8444:	ldr	w0, [x0, #8]
    8448:	cmp	w0, #0x1
    844c:	b.ne	8514 <walkoptree+0x194>  // b.any
    8450:	ldr	x0, [sp, #72]
    8454:	ldr	w0, [x0, #12]
    8458:	and	w0, w0, #0xff
    845c:	cmp	w0, #0x7
    8460:	b.ne	8514 <walkoptree+0x194>  // b.any
    8464:	ldr	x0, [sp, #72]
    8468:	ldr	w1, [x0, #12]
    846c:	mov	w0, #0xff                  	// #255
    8470:	movk	w0, #0x5fff, lsl #16
    8474:	and	w1, w1, w0
    8478:	ldr	x0, [sp, #72]
    847c:	str	w1, [x0, #12]
    8480:	ldr	x0, [sp, #72]
    8484:	ldr	w0, [x0, #12]
    8488:	and	w0, w0, #0x2000000
    848c:	cmp	w0, #0x0
    8490:	b.eq	849c <walkoptree+0x11c>  // b.none
    8494:	ldr	x0, [sp, #72]
    8498:	bl	4d50 <Perl_sv_backoff@plt>
    849c:	ldr	x0, [sp, #72]
    84a0:	ldr	w1, [x0, #12]
    84a4:	mov	w0, #0x1100                	// #4352
    84a8:	orr	w1, w1, w0
    84ac:	ldr	x0, [sp, #72]
    84b0:	str	w1, [x0, #12]
    84b4:	ldr	x0, [sp, #72]
    84b8:	ldr	w0, [x0, #12]
    84bc:	and	w0, w0, #0xe00000
    84c0:	cmp	w0, #0x0
    84c4:	b.ne	8514 <walkoptree+0x194>  // b.any
    84c8:	ldr	x0, [sp, #72]
    84cc:	ldr	x0, [x0]
    84d0:	ldr	x0, [x0, #8]
    84d4:	cmp	x0, #0x0
    84d8:	b.ne	8514 <walkoptree+0x194>  // b.any
    84dc:	ldr	x0, [sp, #72]
    84e0:	ldr	x0, [x0]
    84e4:	ldr	x0, [x0]
    84e8:	cmp	x0, #0x0
    84ec:	b.eq	8514 <walkoptree+0x194>  // b.none
    84f0:	mov	w2, #0x1                   	// #1
    84f4:	ldr	x1, [sp, #96]
    84f8:	ldr	x0, [sp, #40]
    84fc:	bl	4da0 <Perl_gv_stashpv@plt>
    8500:	mov	x2, x0
    8504:	ldr	x1, [sp, #16]
    8508:	ldr	x0, [sp, #40]
    850c:	bl	4ca0 <Perl_sv_bless@plt>
    8510:	b	8534 <walkoptree+0x1b4>
    8514:	ldr	x0, [sp, #40]
    8518:	bl	5080 <Perl_sv_newmortal@plt>
    851c:	str	x0, [sp, #16]
    8520:	ldr	x2, [sp, #96]
    8524:	ldr	x1, [sp, #16]
    8528:	ldr	x0, [sp, #40]
    852c:	bl	4fc0 <Perl_newSVrv@plt>
    8530:	str	x0, [sp, #72]
    8534:	ldr	x0, [sp, #32]
    8538:	mov	x2, x0
    853c:	ldr	x1, [sp, #72]
    8540:	ldr	x0, [sp, #40]
    8544:	bl	5040 <Perl_sv_setiv@plt>
    8548:	ldr	x0, [sp, #104]
    854c:	ldr	w0, [x0, #64]
    8550:	cmp	w0, #0x0
    8554:	b.eq	8640 <walkoptree+0x2c0>  // b.none
    8558:	ldr	x0, [sp, #40]
    855c:	ldr	x0, [x0, #120]
    8560:	add	x1, x0, #0x4
    8564:	ldr	x0, [sp, #40]
    8568:	str	x1, [x0, #120]
    856c:	ldr	x0, [sp, #40]
    8570:	ldr	x0, [x0, #120]
    8574:	str	x0, [sp, #80]
    8578:	ldr	x0, [sp, #40]
    857c:	ldr	x0, [x0, #128]
    8580:	ldr	x1, [sp, #80]
    8584:	cmp	x1, x0
    8588:	cset	w0, eq  // eq = none
    858c:	and	w0, w0, #0xff
    8590:	and	x0, x0, #0xff
    8594:	cmp	x0, #0x0
    8598:	b.eq	85a8 <walkoptree+0x228>  // b.none
    859c:	ldr	x0, [sp, #40]
    85a0:	bl	4f60 <Perl_markstack_grow@plt>
    85a4:	str	x0, [sp, #80]
    85a8:	ldr	x0, [sp, #40]
    85ac:	ldr	x0, [x0, #24]
    85b0:	ldr	x1, [sp, #56]
    85b4:	sub	x0, x1, x0
    85b8:	asr	x0, x0, #3
    85bc:	mov	w1, w0
    85c0:	ldr	x0, [sp, #80]
    85c4:	str	w1, [x0]
    85c8:	ldr	x0, [sp, #40]
    85cc:	ldr	x1, [x0, #32]
    85d0:	ldr	x0, [sp, #56]
    85d4:	sub	x0, x1, x0
    85d8:	cmp	x0, #0x0
    85dc:	cset	w0, le
    85e0:	and	w0, w0, #0xff
    85e4:	and	x0, x0, #0xff
    85e8:	cmp	x0, #0x0
    85ec:	b.eq	8608 <walkoptree+0x288>  // b.none
    85f0:	mov	x3, #0x1                   	// #1
    85f4:	ldr	x2, [sp, #56]
    85f8:	ldr	x1, [sp, #56]
    85fc:	ldr	x0, [sp, #40]
    8600:	bl	4b70 <Perl_stack_grow@plt>
    8604:	str	x0, [sp, #56]
    8608:	ldr	x0, [sp, #56]
    860c:	add	x0, x0, #0x8
    8610:	str	x0, [sp, #56]
    8614:	ldr	x0, [sp, #56]
    8618:	ldr	x1, [sp, #16]
    861c:	str	x1, [x0]
    8620:	ldr	x0, [sp, #40]
    8624:	ldr	x1, [sp, #56]
    8628:	str	x1, [x0]
    862c:	mov	w2, #0x4                   	// #4
    8630:	adrp	x0, 18000 <boot_B+0x23d8>
    8634:	add	x1, x0, #0xaa0
    8638:	ldr	x0, [sp, #40]
    863c:	bl	4bb0 <Perl_call_method@plt>
    8640:	ldr	x0, [sp, #40]
    8644:	ldr	x0, [x0, #120]
    8648:	add	x1, x0, #0x4
    864c:	ldr	x0, [sp, #40]
    8650:	str	x1, [x0, #120]
    8654:	ldr	x0, [sp, #40]
    8658:	ldr	x0, [x0, #120]
    865c:	str	x0, [sp, #88]
    8660:	ldr	x0, [sp, #40]
    8664:	ldr	x0, [x0, #128]
    8668:	ldr	x1, [sp, #88]
    866c:	cmp	x1, x0
    8670:	cset	w0, eq  // eq = none
    8674:	and	w0, w0, #0xff
    8678:	and	x0, x0, #0xff
    867c:	cmp	x0, #0x0
    8680:	b.eq	8690 <walkoptree+0x310>  // b.none
    8684:	ldr	x0, [sp, #40]
    8688:	bl	4f60 <Perl_markstack_grow@plt>
    868c:	str	x0, [sp, #88]
    8690:	ldr	x0, [sp, #40]
    8694:	ldr	x0, [x0, #24]
    8698:	ldr	x1, [sp, #56]
    869c:	sub	x0, x1, x0
    86a0:	asr	x0, x0, #3
    86a4:	mov	w1, w0
    86a8:	ldr	x0, [sp, #88]
    86ac:	str	w1, [x0]
    86b0:	ldr	x0, [sp, #40]
    86b4:	ldr	x1, [x0, #32]
    86b8:	ldr	x0, [sp, #56]
    86bc:	sub	x0, x1, x0
    86c0:	cmp	x0, #0x0
    86c4:	cset	w0, le
    86c8:	and	w0, w0, #0xff
    86cc:	and	x0, x0, #0xff
    86d0:	cmp	x0, #0x0
    86d4:	b.eq	86f0 <walkoptree+0x370>  // b.none
    86d8:	mov	x3, #0x1                   	// #1
    86dc:	ldr	x2, [sp, #56]
    86e0:	ldr	x1, [sp, #56]
    86e4:	ldr	x0, [sp, #40]
    86e8:	bl	4b70 <Perl_stack_grow@plt>
    86ec:	str	x0, [sp, #56]
    86f0:	ldr	x0, [sp, #56]
    86f4:	add	x0, x0, #0x8
    86f8:	str	x0, [sp, #56]
    86fc:	ldr	x0, [sp, #56]
    8700:	ldr	x1, [sp, #16]
    8704:	str	x1, [x0]
    8708:	ldr	x0, [sp, #40]
    870c:	ldr	x1, [sp, #56]
    8710:	str	x1, [x0]
    8714:	mov	w2, #0x4                   	// #4
    8718:	ldr	x1, [sp, #24]
    871c:	ldr	x0, [sp, #40]
    8720:	bl	4bb0 <Perl_call_method@plt>
    8724:	ldr	x0, [sp, #32]
    8728:	cmp	x0, #0x0
    872c:	b.eq	87a4 <walkoptree+0x424>  // b.none
    8730:	ldr	x0, [sp, #32]
    8734:	ldrb	w0, [x0, #34]
    8738:	and	w0, w0, #0x4
    873c:	cmp	w0, #0x0
    8740:	b.eq	87a4 <walkoptree+0x424>  // b.none
    8744:	ldr	x0, [sp, #32]
    8748:	ldr	x0, [x0, #40]
    874c:	str	x0, [sp, #64]
    8750:	b	8798 <walkoptree+0x418>
    8754:	ldr	x3, [sp, #16]
    8758:	ldr	x2, [sp, #24]
    875c:	ldr	x1, [sp, #64]
    8760:	ldr	x0, [sp, #40]
    8764:	bl	8380 <walkoptree>
    8768:	str	x0, [sp, #16]
    876c:	ldr	x0, [sp, #64]
    8770:	ldrb	w0, [x0, #33]
    8774:	and	w0, w0, #0x40
    8778:	and	w0, w0, #0xff
    877c:	cmp	w0, #0x0
    8780:	b.eq	8790 <walkoptree+0x410>  // b.none
    8784:	ldr	x0, [sp, #64]
    8788:	ldr	x0, [x0, #8]
    878c:	b	8794 <walkoptree+0x414>
    8790:	mov	x0, #0x0                   	// #0
    8794:	str	x0, [sp, #64]
    8798:	ldr	x0, [sp, #64]
    879c:	cmp	x0, #0x0
    87a0:	b.ne	8754 <walkoptree+0x3d4>  // b.any
    87a4:	ldr	x0, [sp, #32]
    87a8:	cmp	x0, #0x0
    87ac:	b.eq	880c <walkoptree+0x48c>  // b.none
    87b0:	ldr	x1, [sp, #32]
    87b4:	ldr	x0, [sp, #40]
    87b8:	bl	5050 <Perl_op_class@plt>
    87bc:	cmp	w0, #0x6
    87c0:	b.ne	880c <walkoptree+0x48c>  // b.any
    87c4:	ldr	x0, [sp, #32]
    87c8:	ldrh	w0, [x0, #32]
    87cc:	and	w0, w0, #0x1ff
    87d0:	and	w0, w0, #0xffff
    87d4:	cmp	w0, #0x9c
    87d8:	b.eq	880c <walkoptree+0x48c>  // b.none
    87dc:	ldr	x0, [sp, #32]
    87e0:	ldr	x0, [x0, #72]
    87e4:	str	x0, [sp, #64]
    87e8:	ldr	x0, [sp, #64]
    87ec:	cmp	x0, #0x0
    87f0:	b.eq	880c <walkoptree+0x48c>  // b.none
    87f4:	ldr	x3, [sp, #16]
    87f8:	ldr	x2, [sp, #24]
    87fc:	ldr	x1, [sp, #64]
    8800:	ldr	x0, [sp, #40]
    8804:	bl	8380 <walkoptree>
    8808:	str	x0, [sp, #16]
    880c:	ldr	x0, [sp, #16]
    8810:	ldp	x29, x30, [sp], #112
    8814:	ret

0000000000008818 <oplist>:
    8818:	stp	x29, x30, [sp, #-64]!
    881c:	mov	x29, sp
    8820:	str	x0, [sp, #40]
    8824:	str	x1, [sp, #32]
    8828:	str	x2, [sp, #24]
    882c:	b	8a58 <oplist+0x240>
    8830:	ldr	x0, [sp, #32]
    8834:	ldrb	w0, [x0, #33]
    8838:	and	w0, w0, #0x2
    883c:	and	w0, w0, #0xff
    8840:	cmp	w0, #0x0
    8844:	b.eq	8a68 <oplist+0x250>  // b.none
    8848:	ldr	x0, [sp, #32]
    884c:	ldrb	w1, [x0, #33]
    8850:	and	w1, w1, #0xfffffffd
    8854:	strb	w1, [x0, #33]
    8858:	ldr	x0, [sp, #40]
    885c:	ldr	x1, [x0, #32]
    8860:	ldr	x0, [sp, #24]
    8864:	sub	x0, x1, x0
    8868:	cmp	x0, #0x0
    886c:	cset	w0, le
    8870:	and	w0, w0, #0xff
    8874:	and	x0, x0, #0xff
    8878:	cmp	x0, #0x0
    887c:	b.eq	8898 <oplist+0x80>  // b.none
    8880:	mov	x3, #0x1                   	// #1
    8884:	ldr	x2, [sp, #24]
    8888:	ldr	x1, [sp, #24]
    888c:	ldr	x0, [sp, #40]
    8890:	bl	4b70 <Perl_stack_grow@plt>
    8894:	str	x0, [sp, #24]
    8898:	ldr	x0, [sp, #24]
    889c:	add	x0, x0, #0x8
    88a0:	str	x0, [sp, #24]
    88a4:	ldr	x1, [sp, #32]
    88a8:	ldr	x0, [sp, #40]
    88ac:	bl	75b4 <make_op_object>
    88b0:	mov	x1, x0
    88b4:	ldr	x0, [sp, #24]
    88b8:	str	x1, [x0]
    88bc:	ldr	x0, [sp, #32]
    88c0:	ldrh	w0, [x0, #32]
    88c4:	ubfx	x0, x0, #0, #9
    88c8:	and	w0, w0, #0xffff
    88cc:	cmp	w0, #0x20
    88d0:	b.eq	88e0 <oplist+0xc8>  // b.none
    88d4:	cmp	w0, #0xa7
    88d8:	b.eq	8900 <oplist+0xe8>  // b.none
    88dc:	b	8994 <oplist+0x17c>
    88e0:	ldr	x0, [sp, #32]
    88e4:	ldr	x0, [x0, #80]
    88e8:	ldr	x2, [sp, #24]
    88ec:	mov	x1, x0
    88f0:	ldr	x0, [sp, #40]
    88f4:	bl	8818 <oplist>
    88f8:	str	x0, [sp, #24]
    88fc:	b	8a4c <oplist+0x234>
    8900:	ldr	x0, [sp, #32]
    8904:	ldrb	w0, [x0, #34]
    8908:	and	w0, w0, #0x40
    890c:	cmp	w0, #0x0
    8910:	b.eq	8a48 <oplist+0x230>  // b.none
    8914:	ldr	x0, [sp, #32]
    8918:	ldrb	w0, [x0, #34]
    891c:	sxtb	w0, w0
    8920:	cmp	w0, #0x0
    8924:	b.ge	8a48 <oplist+0x230>  // b.tcont
    8928:	ldr	x0, [sp, #32]
    892c:	ldr	x0, [x0, #40]
    8930:	ldrb	w0, [x0, #33]
    8934:	and	w0, w0, #0x40
    8938:	and	w0, w0, #0xff
    893c:	cmp	w0, #0x0
    8940:	b.eq	8954 <oplist+0x13c>  // b.none
    8944:	ldr	x0, [sp, #32]
    8948:	ldr	x0, [x0, #40]
    894c:	ldr	x0, [x0, #8]
    8950:	b	8958 <oplist+0x140>
    8954:	mov	x0, #0x0                   	// #0
    8958:	str	x0, [sp, #56]
    895c:	ldr	x0, [sp, #56]
    8960:	ldr	x0, [x0, #40]
    8964:	str	x0, [sp, #56]
    8968:	ldr	x0, [sp, #56]
    896c:	ldr	x0, [x0, #40]
    8970:	str	x0, [sp, #56]
    8974:	ldr	x0, [sp, #56]
    8978:	ldr	x0, [x0]
    897c:	ldr	x2, [sp, #24]
    8980:	mov	x1, x0
    8984:	ldr	x0, [sp, #40]
    8988:	bl	8818 <oplist>
    898c:	str	x0, [sp, #24]
    8990:	b	8a48 <oplist+0x230>
    8994:	ldr	x0, [sp, #32]
    8998:	ldrh	w0, [x0, #32]
    899c:	ubfx	x0, x0, #0, #9
    89a0:	and	w0, w0, #0xffff
    89a4:	mov	w1, w0
    89a8:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    89ac:	ldr	x0, [x0, #4056]
    89b0:	sxtw	x1, w1
    89b4:	ldr	w0, [x0, x1, lsl #2]
    89b8:	and	w0, w0, #0xf00
    89bc:	cmp	w0, #0x300
    89c0:	b.eq	89d0 <oplist+0x1b8>  // b.none
    89c4:	cmp	w0, #0x900
    89c8:	b.eq	89f0 <oplist+0x1d8>  // b.none
    89cc:	b	8a4c <oplist+0x234>
    89d0:	ldr	x0, [sp, #32]
    89d4:	ldr	x0, [x0, #48]
    89d8:	ldr	x2, [sp, #24]
    89dc:	mov	x1, x0
    89e0:	ldr	x0, [sp, #40]
    89e4:	bl	8818 <oplist>
    89e8:	str	x0, [sp, #24]
    89ec:	b	8a4c <oplist+0x234>
    89f0:	ldr	x0, [sp, #32]
    89f4:	ldr	x0, [x0, #72]
    89f8:	ldr	x2, [sp, #24]
    89fc:	mov	x1, x0
    8a00:	ldr	x0, [sp, #40]
    8a04:	bl	8818 <oplist>
    8a08:	str	x0, [sp, #24]
    8a0c:	ldr	x0, [sp, #32]
    8a10:	ldr	x0, [x0, #64]
    8a14:	ldr	x2, [sp, #24]
    8a18:	mov	x1, x0
    8a1c:	ldr	x0, [sp, #40]
    8a20:	bl	8818 <oplist>
    8a24:	str	x0, [sp, #24]
    8a28:	ldr	x0, [sp, #32]
    8a2c:	ldr	x0, [x0, #56]
    8a30:	ldr	x2, [sp, #24]
    8a34:	mov	x1, x0
    8a38:	ldr	x0, [sp, #40]
    8a3c:	bl	8818 <oplist>
    8a40:	str	x0, [sp, #24]
    8a44:	b	8a4c <oplist+0x234>
    8a48:	nop
    8a4c:	ldr	x0, [sp, #32]
    8a50:	ldr	x0, [x0]
    8a54:	str	x0, [sp, #32]
    8a58:	ldr	x0, [sp, #32]
    8a5c:	cmp	x0, #0x0
    8a60:	b.ne	8830 <oplist+0x18>  // b.any
    8a64:	b	8a6c <oplist+0x254>
    8a68:	nop
    8a6c:	ldr	x0, [sp, #24]
    8a70:	ldp	x29, x30, [sp], #64
    8a74:	ret

0000000000008a78 <intrpvar_sv_common>:
    8a78:	stp	x29, x30, [sp, #-96]!
    8a7c:	mov	x29, sp
    8a80:	str	x19, [sp, #16]
    8a84:	str	x0, [sp, #40]
    8a88:	str	x1, [sp, #32]
    8a8c:	ldr	x0, [sp, #40]
    8a90:	ldr	x0, [x0]
    8a94:	str	x0, [sp, #56]
    8a98:	ldr	x0, [sp, #40]
    8a9c:	bl	7424 <S_POPMARK>
    8aa0:	str	w0, [sp, #48]
    8aa4:	ldr	x0, [sp, #40]
    8aa8:	ldr	x1, [x0, #24]
    8aac:	ldr	w0, [sp, #48]
    8ab0:	add	w2, w0, #0x1
    8ab4:	str	w2, [sp, #48]
    8ab8:	sxtw	x0, w0
    8abc:	lsl	x0, x0, #3
    8ac0:	add	x0, x1, x0
    8ac4:	str	x0, [sp, #64]
    8ac8:	ldr	x1, [sp, #56]
    8acc:	ldr	x0, [sp, #64]
    8ad0:	sub	x0, x1, x0
    8ad4:	asr	x0, x0, #3
    8ad8:	str	w0, [sp, #52]
    8adc:	ldr	w0, [sp, #52]
    8ae0:	cmp	w0, #0x0
    8ae4:	b.eq	8af8 <intrpvar_sv_common+0x80>  // b.none
    8ae8:	adrp	x0, 18000 <boot_B+0x23d8>
    8aec:	add	x1, x0, #0xab8
    8af0:	ldr	x0, [sp, #32]
    8af4:	bl	4d70 <Perl_croak_xs_usage@plt>
    8af8:	ldr	x0, [sp, #32]
    8afc:	ldr	x0, [x0]
    8b00:	str	x0, [sp, #72]
    8b04:	ldr	x0, [sp, #72]
    8b08:	ldr	w0, [x0, #40]
    8b0c:	sxtw	x0, w0
    8b10:	ldr	x1, [sp, #40]
    8b14:	add	x0, x1, x0
    8b18:	ldr	x0, [x0]
    8b1c:	str	x0, [sp, #80]
    8b20:	ldr	x0, [sp, #40]
    8b24:	ldr	x1, [x0, #24]
    8b28:	ldrsw	x0, [sp, #48]
    8b2c:	lsl	x0, x0, #3
    8b30:	add	x19, x1, x0
    8b34:	ldr	x1, [sp, #80]
    8b38:	ldr	x0, [sp, #40]
    8b3c:	bl	77c4 <make_sv_object>
    8b40:	str	x0, [x19]
    8b44:	mov	x0, #0x1                   	// #1
    8b48:	str	x0, [sp, #88]
    8b4c:	ldr	x0, [sp, #40]
    8b50:	ldr	x1, [x0, #24]
    8b54:	ldrsw	x2, [sp, #48]
    8b58:	ldr	x0, [sp, #88]
    8b5c:	add	x0, x2, x0
    8b60:	lsl	x0, x0, #3
    8b64:	sub	x0, x0, #0x8
    8b68:	add	x1, x1, x0
    8b6c:	ldr	x0, [sp, #40]
    8b70:	str	x1, [x0]
    8b74:	nop
    8b78:	ldr	x19, [sp, #16]
    8b7c:	ldp	x29, x30, [sp], #96
    8b80:	ret

0000000000008b84 <_add_symbol>:
    8b84:	stp	x29, x30, [sp, #-80]!
    8b88:	mov	x29, sp
    8b8c:	str	x0, [sp, #56]
    8b90:	str	x1, [sp, #48]
    8b94:	str	x2, [sp, #40]
    8b98:	str	w3, [sp, #36]
    8b9c:	str	x4, [sp, #24]
    8ba0:	mov	w6, #0x0                   	// #0
    8ba4:	mov	x5, #0x0                   	// #0
    8ba8:	mov	w4, #0x10                  	// #16
    8bac:	ldr	w3, [sp, #36]
    8bb0:	ldr	x2, [sp, #40]
    8bb4:	ldr	x1, [sp, #48]
    8bb8:	ldr	x0, [sp, #56]
    8bbc:	bl	4f70 <Perl_hv_common_key_len@plt>
    8bc0:	str	x0, [sp, #64]
    8bc4:	ldr	x0, [sp, #64]
    8bc8:	cmp	x0, #0x0
    8bcc:	b.ne	8be0 <_add_symbol+0x5c>  // b.any
    8bd0:	ldr	x1, [sp, #40]
    8bd4:	adrp	x0, 18000 <boot_B+0x23d8>
    8bd8:	add	x0, x0, #0xcc8
    8bdc:	bl	4e60 <Perl_croak_nocontext@plt>
    8be0:	ldr	x0, [sp, #64]
    8be4:	ldr	x0, [x0, #16]
    8be8:	str	x0, [sp, #72]
    8bec:	ldr	x0, [sp, #72]
    8bf0:	ldr	w0, [x0, #12]
    8bf4:	and	w0, w0, #0xff00
    8bf8:	cmp	w0, #0x0
    8bfc:	b.ne	8c14 <_add_symbol+0x90>  // b.any
    8c00:	ldr	x0, [sp, #72]
    8c04:	ldr	w0, [x0, #12]
    8c08:	and	w0, w0, #0xff
    8c0c:	cmp	w0, #0x9
    8c10:	b.ne	8c2c <_add_symbol+0xa8>  // b.any
    8c14:	ldr	x3, [sp, #24]
    8c18:	ldr	x2, [sp, #40]
    8c1c:	ldr	x1, [sp, #48]
    8c20:	ldr	x0, [sp, #56]
    8c24:	bl	4c00 <Perl_newCONSTSUB@plt>
    8c28:	b	8c84 <_add_symbol+0x100>
    8c2c:	ldr	x0, [sp, #72]
    8c30:	ldr	w0, [x0, #12]
    8c34:	and	w0, w0, #0xff
    8c38:	cmp	w0, #0x0
    8c3c:	b.ne	8c50 <_add_symbol+0xcc>  // b.any
    8c40:	mov	w2, #0x1                   	// #1
    8c44:	ldr	x1, [sp, #72]
    8c48:	ldr	x0, [sp, #56]
    8c4c:	bl	4c50 <Perl_sv_upgrade@plt>
    8c50:	ldr	x0, [sp, #72]
    8c54:	ldr	x1, [sp, #24]
    8c58:	str	x1, [x0, #16]
    8c5c:	ldr	x0, [sp, #72]
    8c60:	ldr	w0, [x0, #12]
    8c64:	orr	w1, w0, #0x800
    8c68:	ldr	x0, [sp, #72]
    8c6c:	str	w1, [x0, #12]
    8c70:	ldr	x0, [sp, #24]
    8c74:	ldr	w0, [x0, #12]
    8c78:	orr	w1, w0, #0x8000000
    8c7c:	ldr	x0, [sp, #24]
    8c80:	str	w1, [x0, #12]
    8c84:	ldr	x0, [sp, #64]
    8c88:	ldp	x29, x30, [sp], #80
    8c8c:	ret

0000000000008c90 <get_missing_hash>:
    8c90:	stp	x29, x30, [sp, #-64]!
    8c94:	mov	x29, sp
    8c98:	str	x0, [sp, #24]
    8c9c:	mov	w2, #0x2                   	// #2
    8ca0:	adrp	x0, 18000 <boot_B+0x23d8>
    8ca4:	add	x1, x0, #0xce8
    8ca8:	ldr	x0, [sp, #24]
    8cac:	bl	50b0 <Perl_get_hv@plt>
    8cb0:	str	x0, [sp, #32]
    8cb4:	mov	w6, #0x0                   	// #0
    8cb8:	mov	x5, #0x0                   	// #0
    8cbc:	mov	w4, #0x30                  	// #48
    8cc0:	mov	w3, #0x1                   	// #1
    8cc4:	adrp	x0, 18000 <boot_B+0x23d8>
    8cc8:	add	x2, x0, #0xd10
    8ccc:	ldr	x1, [sp, #32]
    8cd0:	ldr	x0, [sp, #24]
    8cd4:	bl	4f70 <Perl_hv_common_key_len@plt>
    8cd8:	str	x0, [sp, #40]
    8cdc:	ldr	x0, [sp, #40]
    8ce0:	cmp	x0, #0x0
    8ce4:	b.ne	8cf0 <get_missing_hash+0x60>  // b.any
    8ce8:	mov	x0, #0x0                   	// #0
    8cec:	b	8d90 <get_missing_hash+0x100>
    8cf0:	ldr	x0, [sp, #40]
    8cf4:	ldr	x0, [x0]
    8cf8:	ldr	w0, [x0, #12]
    8cfc:	and	w0, w0, #0x800
    8d00:	cmp	w0, #0x0
    8d04:	b.eq	8d18 <get_missing_hash+0x88>  // b.none
    8d08:	ldr	x0, [sp, #40]
    8d0c:	ldr	x0, [x0]
    8d10:	ldr	x0, [x0, #16]
    8d14:	b	8d90 <get_missing_hash+0x100>
    8d18:	mov	w1, #0xc                   	// #12
    8d1c:	ldr	x0, [sp, #24]
    8d20:	bl	4fb0 <Perl_newSV_type@plt>
    8d24:	str	x0, [sp, #48]
    8d28:	ldr	x0, [sp, #48]
    8d2c:	str	x0, [sp, #56]
    8d30:	ldr	x0, [sp, #40]
    8d34:	ldr	x0, [x0]
    8d38:	ldr	w0, [x0, #12]
    8d3c:	and	w0, w0, #0xff
    8d40:	cmp	w0, #0x0
    8d44:	b.ne	8d60 <get_missing_hash+0xd0>  // b.any
    8d48:	ldr	x0, [sp, #40]
    8d4c:	ldr	x0, [x0]
    8d50:	mov	w2, #0x1                   	// #1
    8d54:	mov	x1, x0
    8d58:	ldr	x0, [sp, #24]
    8d5c:	bl	4c50 <Perl_sv_upgrade@plt>
    8d60:	ldr	x0, [sp, #40]
    8d64:	ldr	x0, [x0]
    8d68:	ldr	x1, [sp, #56]
    8d6c:	str	x1, [x0, #16]
    8d70:	ldr	x0, [sp, #40]
    8d74:	ldr	x0, [x0]
    8d78:	ldr	w1, [x0, #12]
    8d7c:	ldr	x0, [sp, #40]
    8d80:	ldr	x0, [x0]
    8d84:	orr	w1, w1, #0x800
    8d88:	str	w1, [x0, #12]
    8d8c:	ldr	x0, [sp, #56]
    8d90:	ldp	x29, x30, [sp], #64
    8d94:	ret

0000000000008d98 <XS_B_formfeed>:
    8d98:	stp	x29, x30, [sp, #-64]!
    8d9c:	mov	x29, sp
    8da0:	str	x0, [sp, #24]
    8da4:	str	x1, [sp, #16]
    8da8:	ldr	x0, [sp, #24]
    8dac:	ldr	x0, [x0]
    8db0:	str	x0, [sp, #48]
    8db4:	ldr	x0, [sp, #24]
    8db8:	bl	7424 <S_POPMARK>
    8dbc:	str	w0, [sp, #40]
    8dc0:	ldr	x0, [sp, #24]
    8dc4:	ldr	x1, [x0, #24]
    8dc8:	ldr	w0, [sp, #40]
    8dcc:	add	w2, w0, #0x1
    8dd0:	str	w2, [sp, #40]
    8dd4:	sxtw	x0, w0
    8dd8:	lsl	x0, x0, #3
    8ddc:	add	x0, x1, x0
    8de0:	str	x0, [sp, #56]
    8de4:	ldr	x1, [sp, #48]
    8de8:	ldr	x0, [sp, #56]
    8dec:	sub	x0, x1, x0
    8df0:	asr	x0, x0, #3
    8df4:	str	w0, [sp, #44]
    8df8:	ldr	w0, [sp, #44]
    8dfc:	cmp	w0, #0x0
    8e00:	b.eq	8e14 <XS_B_formfeed+0x7c>  // b.none
    8e04:	adrp	x0, 18000 <boot_B+0x23d8>
    8e08:	add	x1, x0, #0xab8
    8e0c:	ldr	x0, [sp, #16]
    8e10:	bl	4d70 <Perl_croak_xs_usage@plt>
    8e14:	ldrsw	x0, [sp, #44]
    8e18:	lsl	x0, x0, #3
    8e1c:	neg	x0, x0
    8e20:	ldr	x1, [sp, #48]
    8e24:	add	x0, x1, x0
    8e28:	str	x0, [sp, #48]
    8e2c:	mov	w4, #0x3                   	// #3
    8e30:	mov	w3, #0x1                   	// #1
    8e34:	mov	x2, #0x1                   	// #1
    8e38:	adrp	x0, 18000 <boot_B+0x23d8>
    8e3c:	add	x1, x0, #0xd28
    8e40:	ldr	x0, [sp, #24]
    8e44:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
    8e48:	ldr	x0, [x0, #16]
    8e4c:	ldr	x1, [x0]
    8e50:	ldr	x0, [sp, #48]
    8e54:	add	x0, x0, #0x8
    8e58:	str	x0, [sp, #48]
    8e5c:	ldr	x0, [sp, #24]
    8e60:	bl	77c4 <make_sv_object>
    8e64:	mov	x1, x0
    8e68:	ldr	x0, [sp, #48]
    8e6c:	str	x1, [x0]
    8e70:	ldr	x0, [sp, #24]
    8e74:	ldr	x1, [sp, #48]
    8e78:	str	x1, [x0]
    8e7c:	nop
    8e80:	ldp	x29, x30, [sp], #64
    8e84:	ret

0000000000008e88 <XS_B_amagic_generation>:
    8e88:	stp	x29, x30, [sp, #-96]!
    8e8c:	mov	x29, sp
    8e90:	str	x0, [sp, #24]
    8e94:	str	x1, [sp, #16]
    8e98:	ldr	x0, [sp, #24]
    8e9c:	ldr	x0, [x0]
    8ea0:	str	x0, [sp, #48]
    8ea4:	ldr	x0, [sp, #24]
    8ea8:	bl	7424 <S_POPMARK>
    8eac:	str	w0, [sp, #40]
    8eb0:	ldr	x0, [sp, #24]
    8eb4:	ldr	x1, [x0, #24]
    8eb8:	ldr	w0, [sp, #40]
    8ebc:	add	w2, w0, #0x1
    8ec0:	str	w2, [sp, #40]
    8ec4:	sxtw	x0, w0
    8ec8:	lsl	x0, x0, #3
    8ecc:	add	x0, x1, x0
    8ed0:	str	x0, [sp, #56]
    8ed4:	ldr	x1, [sp, #48]
    8ed8:	ldr	x0, [sp, #56]
    8edc:	sub	x0, x1, x0
    8ee0:	asr	x0, x0, #3
    8ee4:	str	w0, [sp, #44]
    8ee8:	ldr	w0, [sp, #44]
    8eec:	cmp	w0, #0x0
    8ef0:	b.eq	8f04 <XS_B_amagic_generation+0x7c>  // b.none
    8ef4:	adrp	x0, 18000 <boot_B+0x23d8>
    8ef8:	add	x1, x0, #0xab8
    8efc:	ldr	x0, [sp, #16]
    8f00:	bl	4d70 <Perl_croak_xs_usage@plt>
    8f04:	ldr	x0, [sp, #24]
    8f08:	ldr	x0, [x0, #8]
    8f0c:	ldrb	w0, [x0, #35]
    8f10:	and	w0, w0, #0x4
    8f14:	cmp	w0, #0x0
    8f18:	b.eq	8f40 <XS_B_amagic_generation+0xb8>  // b.none
    8f1c:	ldr	x0, [sp, #24]
    8f20:	ldr	x1, [x0, #16]
    8f24:	ldr	x0, [sp, #24]
    8f28:	ldr	x0, [x0, #8]
    8f2c:	ldr	x0, [x0, #24]
    8f30:	lsl	x0, x0, #3
    8f34:	add	x0, x1, x0
    8f38:	ldr	x0, [x0]
    8f3c:	b	8f48 <XS_B_amagic_generation+0xc0>
    8f40:	ldr	x0, [sp, #24]
    8f44:	bl	5080 <Perl_sv_newmortal@plt>
    8f48:	str	x0, [sp, #64]
    8f4c:	ldr	x0, [sp, #24]
    8f50:	ldr	x0, [x0, #528]
    8f54:	str	x0, [sp, #72]
    8f58:	ldr	x0, [sp, #24]
    8f5c:	ldr	x1, [x0, #24]
    8f60:	ldrsw	x0, [sp, #40]
    8f64:	lsl	x0, x0, #3
    8f68:	sub	x0, x0, #0x8
    8f6c:	add	x0, x1, x0
    8f70:	str	x0, [sp, #48]
    8f74:	ldr	x0, [sp, #72]
    8f78:	str	x0, [sp, #80]
    8f7c:	ldr	x0, [sp, #64]
    8f80:	ldr	w1, [x0, #12]
    8f84:	mov	w0, #0x8ff                 	// #2303
    8f88:	movk	w0, #0x9981, lsl #16
    8f8c:	and	w0, w1, w0
    8f90:	cmp	w0, #0x1
    8f94:	cset	w0, eq  // eq = none
    8f98:	and	w0, w0, #0xff
    8f9c:	mov	w1, w0
    8fa0:	ldr	x0, [sp, #24]
    8fa4:	ldrb	w0, [x0, #185]
    8fa8:	eor	w0, w0, #0x1
    8fac:	and	w0, w0, #0xff
    8fb0:	and	w0, w1, w0
    8fb4:	cmp	w0, #0x0
    8fb8:	cset	w0, ne  // ne = any
    8fbc:	and	w0, w0, #0xff
    8fc0:	and	x0, x0, #0xff
    8fc4:	cmp	x0, #0x0
    8fc8:	b.eq	8ff4 <XS_B_amagic_generation+0x16c>  // b.none
    8fcc:	ldr	x0, [sp, #64]
    8fd0:	ldr	w1, [x0, #12]
    8fd4:	mov	w0, #0x1100                	// #4352
    8fd8:	orr	w1, w1, w0
    8fdc:	ldr	x0, [sp, #64]
    8fe0:	str	w1, [x0, #12]
    8fe4:	ldr	x0, [sp, #64]
    8fe8:	ldr	x1, [sp, #80]
    8fec:	str	x1, [x0, #16]
    8ff0:	b	9004 <XS_B_amagic_generation+0x17c>
    8ff4:	ldr	x2, [sp, #80]
    8ff8:	ldr	x1, [sp, #64]
    8ffc:	ldr	x0, [sp, #24]
    9000:	bl	4c60 <Perl_sv_setiv_mg@plt>
    9004:	ldr	x0, [sp, #48]
    9008:	add	x0, x0, #0x8
    900c:	str	x0, [sp, #48]
    9010:	ldr	x0, [sp, #48]
    9014:	ldr	x1, [sp, #64]
    9018:	str	x1, [x0]
    901c:	mov	x0, #0x1                   	// #1
    9020:	str	x0, [sp, #88]
    9024:	ldr	x0, [sp, #24]
    9028:	ldr	x1, [x0, #24]
    902c:	ldrsw	x2, [sp, #40]
    9030:	ldr	x0, [sp, #88]
    9034:	add	x0, x2, x0
    9038:	lsl	x0, x0, #3
    903c:	sub	x0, x0, #0x8
    9040:	add	x1, x1, x0
    9044:	ldr	x0, [sp, #24]
    9048:	str	x1, [x0]
    904c:	nop
    9050:	ldp	x29, x30, [sp], #96
    9054:	ret

0000000000009058 <XS_B_comppadlist>:
    9058:	stp	x29, x30, [sp, #-80]!
    905c:	mov	x29, sp
    9060:	str	x0, [sp, #24]
    9064:	str	x1, [sp, #16]
    9068:	ldr	x0, [sp, #24]
    906c:	ldr	x0, [x0]
    9070:	str	x0, [sp, #40]
    9074:	ldr	x0, [sp, #24]
    9078:	bl	7424 <S_POPMARK>
    907c:	str	w0, [sp, #32]
    9080:	ldr	x0, [sp, #24]
    9084:	ldr	x1, [x0, #24]
    9088:	ldr	w0, [sp, #32]
    908c:	add	w2, w0, #0x1
    9090:	str	w2, [sp, #32]
    9094:	sxtw	x0, w0
    9098:	lsl	x0, x0, #3
    909c:	add	x0, x1, x0
    90a0:	str	x0, [sp, #48]
    90a4:	ldr	x1, [sp, #40]
    90a8:	ldr	x0, [sp, #48]
    90ac:	sub	x0, x1, x0
    90b0:	asr	x0, x0, #3
    90b4:	str	w0, [sp, #36]
    90b8:	ldr	w0, [sp, #36]
    90bc:	cmp	w0, #0x0
    90c0:	b.eq	90d4 <XS_B_comppadlist+0x7c>  // b.none
    90c4:	adrp	x0, 18000 <boot_B+0x23d8>
    90c8:	add	x1, x0, #0xab8
    90cc:	ldr	x0, [sp, #16]
    90d0:	bl	4d70 <Perl_croak_xs_usage@plt>
    90d4:	ldrsw	x0, [sp, #36]
    90d8:	lsl	x0, x0, #3
    90dc:	neg	x0, x0
    90e0:	ldr	x1, [sp, #40]
    90e4:	add	x0, x1, x0
    90e8:	str	x0, [sp, #40]
    90ec:	ldr	x0, [sp, #24]
    90f0:	ldr	x0, [x0, #1912]
    90f4:	cmp	x0, #0x0
    90f8:	b.eq	9108 <XS_B_comppadlist+0xb0>  // b.none
    90fc:	ldr	x0, [sp, #24]
    9100:	ldr	x0, [x0, #1912]
    9104:	b	9110 <XS_B_comppadlist+0xb8>
    9108:	ldr	x0, [sp, #24]
    910c:	ldr	x0, [x0, #2128]
    9110:	ldr	x0, [x0]
    9114:	str	x0, [sp, #56]
    9118:	ldr	x0, [sp, #56]
    911c:	ldr	x0, [x0, #72]
    9120:	str	x0, [sp, #64]
    9124:	ldr	x0, [sp, #24]
    9128:	bl	5080 <Perl_sv_newmortal@plt>
    912c:	str	x0, [sp, #72]
    9130:	ldr	x0, [sp, #64]
    9134:	cmp	x0, #0x0
    9138:	b.eq	9148 <XS_B_comppadlist+0xf0>  // b.none
    913c:	adrp	x0, 18000 <boot_B+0x23d8>
    9140:	add	x0, x0, #0xd30
    9144:	b	9150 <XS_B_comppadlist+0xf8>
    9148:	adrp	x0, 18000 <boot_B+0x23d8>
    914c:	add	x0, x0, #0x850
    9150:	mov	x2, x0
    9154:	ldr	x1, [sp, #72]
    9158:	ldr	x0, [sp, #24]
    915c:	bl	4fc0 <Perl_newSVrv@plt>
    9160:	mov	x1, x0
    9164:	ldr	x0, [sp, #64]
    9168:	mov	x2, x0
    916c:	ldr	x0, [sp, #24]
    9170:	bl	5040 <Perl_sv_setiv@plt>
    9174:	ldr	x0, [sp, #40]
    9178:	add	x0, x0, #0x8
    917c:	str	x0, [sp, #40]
    9180:	ldr	x0, [sp, #40]
    9184:	ldr	x1, [sp, #72]
    9188:	str	x1, [x0]
    918c:	ldr	x0, [sp, #24]
    9190:	ldr	x1, [sp, #40]
    9194:	str	x1, [x0]
    9198:	nop
    919c:	ldp	x29, x30, [sp], #80
    91a0:	ret

00000000000091a4 <XS_B_sv_undef>:
    91a4:	stp	x29, x30, [sp, #-80]!
    91a8:	mov	x29, sp
    91ac:	str	x0, [sp, #24]
    91b0:	str	x1, [sp, #16]
    91b4:	ldr	x0, [sp, #24]
    91b8:	ldr	x0, [x0]
    91bc:	str	x0, [sp, #56]
    91c0:	ldr	x0, [sp, #24]
    91c4:	bl	7424 <S_POPMARK>
    91c8:	str	w0, [sp, #44]
    91cc:	ldr	x0, [sp, #24]
    91d0:	ldr	x1, [x0, #24]
    91d4:	ldr	w0, [sp, #44]
    91d8:	add	w2, w0, #0x1
    91dc:	str	w2, [sp, #44]
    91e0:	sxtw	x0, w0
    91e4:	lsl	x0, x0, #3
    91e8:	add	x0, x1, x0
    91ec:	str	x0, [sp, #64]
    91f0:	ldr	x1, [sp, #56]
    91f4:	ldr	x0, [sp, #64]
    91f8:	sub	x0, x1, x0
    91fc:	asr	x0, x0, #3
    9200:	str	w0, [sp, #48]
    9204:	ldr	x0, [sp, #16]
    9208:	ldr	x0, [x0]
    920c:	str	x0, [sp, #72]
    9210:	ldr	x0, [sp, #72]
    9214:	ldr	w0, [x0, #40]
    9218:	str	w0, [sp, #52]
    921c:	ldr	w0, [sp, #48]
    9220:	cmp	w0, #0x0
    9224:	b.eq	9238 <XS_B_sv_undef+0x94>  // b.none
    9228:	adrp	x0, 18000 <boot_B+0x23d8>
    922c:	add	x1, x0, #0xab8
    9230:	ldr	x0, [sp, #16]
    9234:	bl	4d70 <Perl_croak_xs_usage@plt>
    9238:	ldrsw	x0, [sp, #48]
    923c:	lsl	x0, x0, #3
    9240:	neg	x0, x0
    9244:	ldr	x1, [sp, #56]
    9248:	add	x0, x1, x0
    924c:	str	x0, [sp, #56]
    9250:	ldr	w0, [sp, #52]
    9254:	cmp	w0, #0x1
    9258:	b.le	9268 <XS_B_sv_undef+0xc4>
    925c:	ldr	x0, [sp, #24]
    9260:	add	x0, x0, #0x138
    9264:	b	9288 <XS_B_sv_undef+0xe4>
    9268:	ldr	w0, [sp, #52]
    926c:	cmp	w0, #0x0
    9270:	b.gt	9280 <XS_B_sv_undef+0xdc>
    9274:	ldr	x0, [sp, #24]
    9278:	add	x0, x0, #0x150
    927c:	b	9288 <XS_B_sv_undef+0xe4>
    9280:	ldr	x0, [sp, #24]
    9284:	add	x0, x0, #0x168
    9288:	ldr	x1, [sp, #56]
    928c:	add	x1, x1, #0x8
    9290:	str	x1, [sp, #56]
    9294:	mov	x1, x0
    9298:	ldr	x0, [sp, #24]
    929c:	bl	77c4 <make_sv_object>
    92a0:	mov	x1, x0
    92a4:	ldr	x0, [sp, #56]
    92a8:	str	x1, [x0]
    92ac:	ldr	x0, [sp, #24]
    92b0:	ldr	x1, [sp, #56]
    92b4:	str	x1, [x0]
    92b8:	nop
    92bc:	ldp	x29, x30, [sp], #80
    92c0:	ret

00000000000092c4 <XS_B_main_root>:
    92c4:	stp	x29, x30, [sp, #-80]!
    92c8:	mov	x29, sp
    92cc:	str	x0, [sp, #24]
    92d0:	str	x1, [sp, #16]
    92d4:	ldr	x0, [sp, #24]
    92d8:	ldr	x0, [x0]
    92dc:	str	x0, [sp, #56]
    92e0:	ldr	x0, [sp, #24]
    92e4:	bl	7424 <S_POPMARK>
    92e8:	str	w0, [sp, #44]
    92ec:	ldr	x0, [sp, #24]
    92f0:	ldr	x1, [x0, #24]
    92f4:	ldr	w0, [sp, #44]
    92f8:	add	w2, w0, #0x1
    92fc:	str	w2, [sp, #44]
    9300:	sxtw	x0, w0
    9304:	lsl	x0, x0, #3
    9308:	add	x0, x1, x0
    930c:	str	x0, [sp, #64]
    9310:	ldr	x1, [sp, #56]
    9314:	ldr	x0, [sp, #64]
    9318:	sub	x0, x1, x0
    931c:	asr	x0, x0, #3
    9320:	str	w0, [sp, #48]
    9324:	ldr	x0, [sp, #16]
    9328:	ldr	x0, [x0]
    932c:	str	x0, [sp, #72]
    9330:	ldr	x0, [sp, #72]
    9334:	ldr	w0, [x0, #40]
    9338:	str	w0, [sp, #52]
    933c:	ldr	w0, [sp, #48]
    9340:	cmp	w0, #0x0
    9344:	b.eq	9358 <XS_B_main_root+0x94>  // b.none
    9348:	adrp	x0, 18000 <boot_B+0x23d8>
    934c:	add	x1, x0, #0xab8
    9350:	ldr	x0, [sp, #16]
    9354:	bl	4d70 <Perl_croak_xs_usage@plt>
    9358:	ldrsw	x0, [sp, #48]
    935c:	lsl	x0, x0, #3
    9360:	neg	x0, x0
    9364:	ldr	x1, [sp, #56]
    9368:	add	x0, x1, x0
    936c:	str	x0, [sp, #56]
    9370:	ldr	w0, [sp, #52]
    9374:	cmp	w0, #0x0
    9378:	b.eq	9388 <XS_B_main_root+0xc4>  // b.none
    937c:	ldr	x0, [sp, #24]
    9380:	ldr	x0, [x0, #1928]
    9384:	b	9390 <XS_B_main_root+0xcc>
    9388:	ldr	x0, [sp, #24]
    938c:	ldr	x0, [x0, #1920]
    9390:	ldr	x1, [sp, #56]
    9394:	add	x1, x1, #0x8
    9398:	str	x1, [sp, #56]
    939c:	mov	x1, x0
    93a0:	ldr	x0, [sp, #24]
    93a4:	bl	75b4 <make_op_object>
    93a8:	mov	x1, x0
    93ac:	ldr	x0, [sp, #56]
    93b0:	str	x1, [x0]
    93b4:	ldr	x0, [sp, #24]
    93b8:	ldr	x1, [sp, #56]
    93bc:	str	x1, [x0]
    93c0:	nop
    93c4:	ldp	x29, x30, [sp], #80
    93c8:	ret

00000000000093cc <XS_B_sub_generation>:
    93cc:	stp	x29, x30, [sp, #-112]!
    93d0:	mov	x29, sp
    93d4:	str	x0, [sp, #24]
    93d8:	str	x1, [sp, #16]
    93dc:	ldr	x0, [sp, #24]
    93e0:	ldr	x0, [x0]
    93e4:	str	x0, [sp, #56]
    93e8:	ldr	x0, [sp, #24]
    93ec:	bl	7424 <S_POPMARK>
    93f0:	str	w0, [sp, #44]
    93f4:	ldr	x0, [sp, #24]
    93f8:	ldr	x1, [x0, #24]
    93fc:	ldr	w0, [sp, #44]
    9400:	add	w2, w0, #0x1
    9404:	str	w2, [sp, #44]
    9408:	sxtw	x0, w0
    940c:	lsl	x0, x0, #3
    9410:	add	x0, x1, x0
    9414:	str	x0, [sp, #64]
    9418:	ldr	x1, [sp, #56]
    941c:	ldr	x0, [sp, #64]
    9420:	sub	x0, x1, x0
    9424:	asr	x0, x0, #3
    9428:	str	w0, [sp, #48]
    942c:	ldr	x0, [sp, #16]
    9430:	ldr	x0, [x0]
    9434:	str	x0, [sp, #72]
    9438:	ldr	x0, [sp, #72]
    943c:	ldr	w0, [x0, #40]
    9440:	str	w0, [sp, #52]
    9444:	ldr	w0, [sp, #48]
    9448:	cmp	w0, #0x0
    944c:	b.eq	9460 <XS_B_sub_generation+0x94>  // b.none
    9450:	adrp	x0, 18000 <boot_B+0x23d8>
    9454:	add	x1, x0, #0xab8
    9458:	ldr	x0, [sp, #16]
    945c:	bl	4d70 <Perl_croak_xs_usage@plt>
    9460:	ldr	x0, [sp, #24]
    9464:	ldr	x0, [x0, #8]
    9468:	ldrb	w0, [x0, #35]
    946c:	and	w0, w0, #0x4
    9470:	cmp	w0, #0x0
    9474:	b.eq	949c <XS_B_sub_generation+0xd0>  // b.none
    9478:	ldr	x0, [sp, #24]
    947c:	ldr	x1, [x0, #16]
    9480:	ldr	x0, [sp, #24]
    9484:	ldr	x0, [x0, #8]
    9488:	ldr	x0, [x0, #24]
    948c:	lsl	x0, x0, #3
    9490:	add	x0, x1, x0
    9494:	ldr	x0, [x0]
    9498:	b	94a4 <XS_B_sub_generation+0xd8>
    949c:	ldr	x0, [sp, #24]
    94a0:	bl	5080 <Perl_sv_newmortal@plt>
    94a4:	str	x0, [sp, #80]
    94a8:	ldr	w0, [sp, #52]
    94ac:	cmp	w0, #0x0
    94b0:	b.eq	94c4 <XS_B_sub_generation+0xf8>  // b.none
    94b4:	ldr	x0, [sp, #24]
    94b8:	ldrb	w0, [x0, #200]
    94bc:	and	x0, x0, #0xff
    94c0:	b	94d0 <XS_B_sub_generation+0x104>
    94c4:	ldr	x0, [sp, #24]
    94c8:	ldr	w0, [x0, #104]
    94cc:	mov	w0, w0
    94d0:	str	x0, [sp, #88]
    94d4:	ldr	x0, [sp, #24]
    94d8:	ldr	x1, [x0, #24]
    94dc:	ldrsw	x0, [sp, #44]
    94e0:	lsl	x0, x0, #3
    94e4:	sub	x0, x0, #0x8
    94e8:	add	x0, x1, x0
    94ec:	str	x0, [sp, #56]
    94f0:	ldr	x0, [sp, #88]
    94f4:	str	x0, [sp, #96]
    94f8:	ldr	x0, [sp, #80]
    94fc:	ldr	w1, [x0, #12]
    9500:	mov	w0, #0x8ff                 	// #2303
    9504:	movk	w0, #0x9981, lsl #16
    9508:	and	w0, w1, w0
    950c:	cmp	w0, #0x1
    9510:	cset	w0, eq  // eq = none
    9514:	and	w0, w0, #0xff
    9518:	mov	w1, w0
    951c:	ldr	x0, [sp, #24]
    9520:	ldrb	w0, [x0, #185]
    9524:	eor	w0, w0, #0x1
    9528:	and	w0, w0, #0xff
    952c:	and	w0, w1, w0
    9530:	ldr	x1, [sp, #96]
    9534:	mvn	x1, x1
    9538:	lsr	x1, x1, #63
    953c:	and	w1, w1, #0xff
    9540:	and	w0, w0, w1
    9544:	cmp	w0, #0x0
    9548:	cset	w0, ne  // ne = any
    954c:	and	w0, w0, #0xff
    9550:	and	x0, x0, #0xff
    9554:	cmp	x0, #0x0
    9558:	b.eq	9584 <XS_B_sub_generation+0x1b8>  // b.none
    955c:	ldr	x0, [sp, #80]
    9560:	ldr	w1, [x0, #12]
    9564:	mov	w0, #0x1100                	// #4352
    9568:	orr	w1, w1, w0
    956c:	ldr	x0, [sp, #80]
    9570:	str	w1, [x0, #12]
    9574:	ldr	x1, [sp, #96]
    9578:	ldr	x0, [sp, #80]
    957c:	str	x1, [x0, #16]
    9580:	b	9594 <XS_B_sub_generation+0x1c8>
    9584:	ldr	x2, [sp, #96]
    9588:	ldr	x1, [sp, #80]
    958c:	ldr	x0, [sp, #24]
    9590:	bl	4fe0 <Perl_sv_setuv_mg@plt>
    9594:	ldr	x0, [sp, #56]
    9598:	add	x0, x0, #0x8
    959c:	str	x0, [sp, #56]
    95a0:	ldr	x0, [sp, #56]
    95a4:	ldr	x1, [sp, #80]
    95a8:	str	x1, [x0]
    95ac:	mov	x0, #0x1                   	// #1
    95b0:	str	x0, [sp, #104]
    95b4:	ldr	x0, [sp, #24]
    95b8:	ldr	x1, [x0, #24]
    95bc:	ldrsw	x2, [sp, #44]
    95c0:	ldr	x0, [sp, #104]
    95c4:	add	x0, x2, x0
    95c8:	lsl	x0, x0, #3
    95cc:	sub	x0, x0, #0x8
    95d0:	add	x1, x1, x0
    95d4:	ldr	x0, [sp, #24]
    95d8:	str	x1, [x0]
    95dc:	nop
    95e0:	ldp	x29, x30, [sp], #112
    95e4:	ret

00000000000095e8 <XS_B_walkoptree>:
    95e8:	stp	x29, x30, [sp, #-96]!
    95ec:	mov	x29, sp
    95f0:	str	x0, [sp, #24]
    95f4:	str	x1, [sp, #16]
    95f8:	ldr	x0, [sp, #24]
    95fc:	ldr	x0, [x0]
    9600:	str	x0, [sp, #48]
    9604:	ldr	x0, [sp, #24]
    9608:	bl	7424 <S_POPMARK>
    960c:	str	w0, [sp, #40]
    9610:	ldr	x0, [sp, #24]
    9614:	ldr	x1, [x0, #24]
    9618:	ldr	w0, [sp, #40]
    961c:	add	w2, w0, #0x1
    9620:	str	w2, [sp, #40]
    9624:	sxtw	x0, w0
    9628:	lsl	x0, x0, #3
    962c:	add	x0, x1, x0
    9630:	str	x0, [sp, #56]
    9634:	ldr	x1, [sp, #48]
    9638:	ldr	x0, [sp, #56]
    963c:	sub	x0, x1, x0
    9640:	asr	x0, x0, #3
    9644:	str	w0, [sp, #44]
    9648:	ldr	w0, [sp, #44]
    964c:	cmp	w0, #0x2
    9650:	b.eq	9664 <XS_B_walkoptree+0x7c>  // b.none
    9654:	adrp	x0, 18000 <boot_B+0x23d8>
    9658:	add	x1, x0, #0xd40
    965c:	ldr	x0, [sp, #16]
    9660:	bl	4d70 <Perl_croak_xs_usage@plt>
    9664:	ldr	x0, [sp, #24]
    9668:	ldr	x1, [x0, #24]
    966c:	ldrsw	x0, [sp, #40]
    9670:	add	x0, x0, #0x1
    9674:	lsl	x0, x0, #3
    9678:	add	x0, x1, x0
    967c:	ldr	x0, [x0]
    9680:	ldr	w1, [x0, #12]
    9684:	mov	w0, #0x400                 	// #1024
    9688:	movk	w0, #0x20, lsl #16
    968c:	and	w0, w1, w0
    9690:	cmp	w0, #0x400
    9694:	b.ne	96bc <XS_B_walkoptree+0xd4>  // b.any
    9698:	ldr	x0, [sp, #24]
    969c:	ldr	x1, [x0, #24]
    96a0:	ldrsw	x0, [sp, #40]
    96a4:	add	x0, x0, #0x1
    96a8:	lsl	x0, x0, #3
    96ac:	add	x0, x1, x0
    96b0:	ldr	x0, [x0]
    96b4:	ldr	x0, [x0, #16]
    96b8:	b	96ec <XS_B_walkoptree+0x104>
    96bc:	ldr	x0, [sp, #24]
    96c0:	ldr	x1, [x0, #24]
    96c4:	ldrsw	x0, [sp, #40]
    96c8:	add	x0, x0, #0x1
    96cc:	lsl	x0, x0, #3
    96d0:	add	x0, x1, x0
    96d4:	ldr	x0, [x0]
    96d8:	mov	w3, #0x2                   	// #2
    96dc:	mov	x2, #0x0                   	// #0
    96e0:	mov	x1, x0
    96e4:	ldr	x0, [sp, #24]
    96e8:	bl	4ce0 <Perl_sv_2pv_flags@plt>
    96ec:	str	x0, [sp, #64]
    96f0:	ldr	x0, [sp, #24]
    96f4:	ldr	x1, [x0, #24]
    96f8:	ldrsw	x0, [sp, #40]
    96fc:	lsl	x0, x0, #3
    9700:	add	x0, x1, x0
    9704:	ldr	x0, [x0]
    9708:	ldr	w0, [x0, #12]
    970c:	and	w0, w0, #0x800
    9710:	cmp	w0, #0x0
    9714:	b.eq	97b0 <XS_B_walkoptree+0x1c8>  // b.none
    9718:	ldr	x0, [sp, #24]
    971c:	ldr	x1, [x0, #24]
    9720:	ldrsw	x0, [sp, #40]
    9724:	lsl	x0, x0, #3
    9728:	add	x0, x1, x0
    972c:	ldr	x0, [x0]
    9730:	ldr	x0, [x0, #16]
    9734:	ldr	w1, [x0, #12]
    9738:	mov	w0, #0x100                 	// #256
    973c:	movk	w0, #0x20, lsl #16
    9740:	and	w0, w1, w0
    9744:	cmp	w0, #0x100
    9748:	b.ne	9774 <XS_B_walkoptree+0x18c>  // b.any
    974c:	ldr	x0, [sp, #24]
    9750:	ldr	x1, [x0, #24]
    9754:	ldrsw	x0, [sp, #40]
    9758:	lsl	x0, x0, #3
    975c:	add	x0, x1, x0
    9760:	ldr	x0, [x0]
    9764:	ldr	x0, [x0, #16]
    9768:	ldr	x0, [x0]
    976c:	ldr	x0, [x0, #32]
    9770:	b	97a0 <XS_B_walkoptree+0x1b8>
    9774:	ldr	x0, [sp, #24]
    9778:	ldr	x1, [x0, #24]
    977c:	ldrsw	x0, [sp, #40]
    9780:	lsl	x0, x0, #3
    9784:	add	x0, x1, x0
    9788:	ldr	x0, [x0]
    978c:	ldr	x0, [x0, #16]
    9790:	mov	w2, #0x2                   	// #2
    9794:	mov	x1, x0
    9798:	ldr	x0, [sp, #24]
    979c:	bl	4b20 <Perl_sv_2iv_flags@plt>
    97a0:	str	x0, [sp, #72]
    97a4:	ldr	x0, [sp, #72]
    97a8:	str	x0, [sp, #80]
    97ac:	b	97bc <XS_B_walkoptree+0x1d4>
    97b0:	adrp	x0, 18000 <boot_B+0x23d8>
    97b4:	add	x0, x0, #0xd50
    97b8:	bl	4e60 <Perl_croak_nocontext@plt>
    97bc:	ldr	x0, [sp, #24]
    97c0:	add	x0, x0, #0x150
    97c4:	mov	x3, x0
    97c8:	ldr	x2, [sp, #64]
    97cc:	ldr	x1, [sp, #80]
    97d0:	ldr	x0, [sp, #24]
    97d4:	bl	8380 <walkoptree>
    97d8:	str	xzr, [sp, #88]
    97dc:	ldr	x0, [sp, #24]
    97e0:	ldr	x1, [x0, #24]
    97e4:	ldrsw	x2, [sp, #40]
    97e8:	ldr	x0, [sp, #88]
    97ec:	add	x0, x2, x0
    97f0:	lsl	x0, x0, #3
    97f4:	sub	x0, x0, #0x8
    97f8:	add	x1, x1, x0
    97fc:	ldr	x0, [sp, #24]
    9800:	str	x1, [x0]
    9804:	nop
    9808:	ldp	x29, x30, [sp], #96
    980c:	ret

0000000000009810 <XS_B_walkoptree_debug>:
    9810:	stp	x29, x30, [sp, #-96]!
    9814:	mov	x29, sp
    9818:	str	x0, [sp, #24]
    981c:	str	x1, [sp, #16]
    9820:	ldr	x0, [sp, #24]
    9824:	ldr	x0, [x0]
    9828:	str	x0, [sp, #48]
    982c:	ldr	x0, [sp, #24]
    9830:	bl	7424 <S_POPMARK>
    9834:	str	w0, [sp, #36]
    9838:	ldr	x0, [sp, #24]
    983c:	ldr	x1, [x0, #24]
    9840:	ldr	w0, [sp, #36]
    9844:	add	w2, w0, #0x1
    9848:	str	w2, [sp, #36]
    984c:	sxtw	x0, w0
    9850:	lsl	x0, x0, #3
    9854:	add	x0, x1, x0
    9858:	str	x0, [sp, #56]
    985c:	ldr	x1, [sp, #48]
    9860:	ldr	x0, [sp, #56]
    9864:	sub	x0, x1, x0
    9868:	asr	x0, x0, #3
    986c:	str	w0, [sp, #40]
    9870:	ldr	x0, [sp, #24]
    9874:	ldr	x0, [x0, #8]
    9878:	ldrb	w0, [x0, #35]
    987c:	and	w0, w0, #0x4
    9880:	cmp	w0, #0x0
    9884:	b.eq	98ac <XS_B_walkoptree_debug+0x9c>  // b.none
    9888:	ldr	x0, [sp, #24]
    988c:	ldr	x1, [x0, #16]
    9890:	ldr	x0, [sp, #24]
    9894:	ldr	x0, [x0, #8]
    9898:	ldr	x0, [x0, #24]
    989c:	lsl	x0, x0, #3
    98a0:	add	x0, x1, x0
    98a4:	ldr	x0, [x0]
    98a8:	b	98b4 <XS_B_walkoptree_debug+0xa4>
    98ac:	ldr	x0, [sp, #24]
    98b0:	bl	5080 <Perl_sv_newmortal@plt>
    98b4:	str	x0, [sp, #64]
    98b8:	ldr	x0, [sp, #24]
    98bc:	ldr	x1, [x0, #3032]
    98c0:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    98c4:	add	x0, x0, #0x2e0
    98c8:	ldr	w0, [x0]
    98cc:	sxtw	x0, w0
    98d0:	lsl	x0, x0, #3
    98d4:	add	x0, x1, x0
    98d8:	ldr	x0, [x0]
    98dc:	str	x0, [sp, #72]
    98e0:	ldr	x0, [sp, #72]
    98e4:	ldr	w0, [x0, #64]
    98e8:	str	w0, [sp, #44]
    98ec:	ldr	w0, [sp, #40]
    98f0:	cmp	w0, #0x0
    98f4:	b.le	9c80 <XS_B_walkoptree_debug+0x470>
    98f8:	ldr	x0, [sp, #24]
    98fc:	ldr	x1, [x0, #24]
    9900:	ldrsw	x0, [sp, #36]
    9904:	add	x0, x0, #0x1
    9908:	lsl	x0, x0, #3
    990c:	add	x0, x1, x0
    9910:	ldr	x0, [x0]
    9914:	cmp	x0, #0x0
    9918:	cset	w0, ne  // ne = any
    991c:	and	w0, w0, #0xff
    9920:	and	x0, x0, #0xff
    9924:	cmp	x0, #0x0
    9928:	b.eq	9c80 <XS_B_walkoptree_debug+0x470>  // b.none
    992c:	ldr	x0, [sp, #24]
    9930:	ldr	x1, [x0, #24]
    9934:	ldrsw	x0, [sp, #36]
    9938:	add	x0, x0, #0x1
    993c:	lsl	x0, x0, #3
    9940:	add	x0, x1, x0
    9944:	ldr	x0, [x0]
    9948:	ldr	w0, [x0, #12]
    994c:	lsr	w0, w0, #21
    9950:	mov	w0, w0
    9954:	and	x0, x0, #0x1
    9958:	cmp	x0, #0x0
    995c:	b.eq	9990 <XS_B_walkoptree_debug+0x180>  // b.none
    9960:	ldr	x0, [sp, #24]
    9964:	ldr	x1, [x0, #24]
    9968:	ldrsw	x0, [sp, #36]
    996c:	add	x0, x0, #0x1
    9970:	lsl	x0, x0, #3
    9974:	add	x0, x1, x0
    9978:	ldr	x0, [x0]
    997c:	mov	x1, x0
    9980:	ldr	x0, [sp, #24]
    9984:	bl	4ed0 <Perl_mg_get@plt>
    9988:	cmp	w0, #0x0
    998c:	nop
    9990:	ldr	x0, [sp, #24]
    9994:	ldr	x1, [x0, #24]
    9998:	ldrsw	x0, [sp, #36]
    999c:	add	x0, x0, #0x1
    99a0:	lsl	x0, x0, #3
    99a4:	add	x0, x1, x0
    99a8:	ldr	x1, [x0]
    99ac:	ldr	x0, [sp, #24]
    99b0:	add	x0, x0, #0x138
    99b4:	sub	x0, x1, x0
    99b8:	asr	x1, x0, #3
    99bc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    99c0:	movk	x0, #0xaaab
    99c4:	mul	x0, x1, x0
    99c8:	cmp	x0, #0x3
    99cc:	b.hi	9a04 <XS_B_walkoptree_debug+0x1f4>  // b.pmore
    99d0:	ldr	x0, [sp, #24]
    99d4:	ldr	x1, [x0, #24]
    99d8:	ldrsw	x0, [sp, #36]
    99dc:	add	x0, x0, #0x1
    99e0:	lsl	x0, x0, #3
    99e4:	add	x0, x1, x0
    99e8:	ldr	x1, [x0]
    99ec:	ldr	x0, [sp, #24]
    99f0:	add	x0, x0, #0x138
    99f4:	cmp	x1, x0
    99f8:	cset	w0, eq  // eq = none
    99fc:	and	w0, w0, #0xff
    9a00:	b	9c6c <XS_B_walkoptree_debug+0x45c>
    9a04:	ldr	x0, [sp, #24]
    9a08:	ldr	x1, [x0, #24]
    9a0c:	ldrsw	x0, [sp, #36]
    9a10:	add	x0, x0, #0x1
    9a14:	lsl	x0, x0, #3
    9a18:	add	x0, x1, x0
    9a1c:	ldr	x0, [x0]
    9a20:	ldr	w0, [x0, #12]
    9a24:	and	w0, w0, #0xff00
    9a28:	cmp	w0, #0x0
    9a2c:	b.eq	9c68 <XS_B_walkoptree_debug+0x458>  // b.none
    9a30:	ldr	x0, [sp, #24]
    9a34:	ldr	x1, [x0, #24]
    9a38:	ldrsw	x0, [sp, #36]
    9a3c:	add	x0, x0, #0x1
    9a40:	lsl	x0, x0, #3
    9a44:	add	x0, x1, x0
    9a48:	ldr	x0, [x0]
    9a4c:	ldr	w0, [x0, #12]
    9a50:	and	w0, w0, #0x400
    9a54:	cmp	w0, #0x0
    9a58:	b.eq	9b24 <XS_B_walkoptree_debug+0x314>  // b.none
    9a5c:	ldr	x0, [sp, #24]
    9a60:	ldr	x1, [x0, #24]
    9a64:	ldrsw	x0, [sp, #36]
    9a68:	add	x0, x0, #0x1
    9a6c:	lsl	x0, x0, #3
    9a70:	add	x0, x1, x0
    9a74:	ldr	x0, [x0]
    9a78:	ldr	x0, [x0]
    9a7c:	cmp	x0, #0x0
    9a80:	b.eq	9b10 <XS_B_walkoptree_debug+0x300>  // b.none
    9a84:	ldr	x0, [sp, #24]
    9a88:	ldr	x1, [x0, #24]
    9a8c:	ldrsw	x0, [sp, #36]
    9a90:	add	x0, x0, #0x1
    9a94:	lsl	x0, x0, #3
    9a98:	add	x0, x1, x0
    9a9c:	ldr	x0, [x0]
    9aa0:	ldr	x0, [x0]
    9aa4:	ldr	x0, [x0, #16]
    9aa8:	cmp	x0, #0x1
    9aac:	b.hi	9b08 <XS_B_walkoptree_debug+0x2f8>  // b.pmore
    9ab0:	ldr	x0, [sp, #24]
    9ab4:	ldr	x1, [x0, #24]
    9ab8:	ldrsw	x0, [sp, #36]
    9abc:	add	x0, x0, #0x1
    9ac0:	lsl	x0, x0, #3
    9ac4:	add	x0, x1, x0
    9ac8:	ldr	x0, [x0]
    9acc:	ldr	x0, [x0]
    9ad0:	ldr	x0, [x0, #16]
    9ad4:	cmp	x0, #0x0
    9ad8:	b.eq	9b10 <XS_B_walkoptree_debug+0x300>  // b.none
    9adc:	ldr	x0, [sp, #24]
    9ae0:	ldr	x1, [x0, #24]
    9ae4:	ldrsw	x0, [sp, #36]
    9ae8:	add	x0, x0, #0x1
    9aec:	lsl	x0, x0, #3
    9af0:	add	x0, x1, x0
    9af4:	ldr	x0, [x0]
    9af8:	ldr	x0, [x0, #16]
    9afc:	ldrb	w0, [x0]
    9b00:	cmp	w0, #0x30
    9b04:	b.eq	9b10 <XS_B_walkoptree_debug+0x300>  // b.none
    9b08:	mov	w0, #0x1                   	// #1
    9b0c:	b	9b14 <XS_B_walkoptree_debug+0x304>
    9b10:	mov	w0, #0x0                   	// #0
    9b14:	cmp	w0, #0x0
    9b18:	cset	w0, ne  // ne = any
    9b1c:	and	w0, w0, #0xff
    9b20:	b	9c6c <XS_B_walkoptree_debug+0x45c>
    9b24:	ldr	x0, [sp, #24]
    9b28:	ldr	x1, [x0, #24]
    9b2c:	ldrsw	x0, [sp, #36]
    9b30:	add	x0, x0, #0x1
    9b34:	lsl	x0, x0, #3
    9b38:	add	x0, x1, x0
    9b3c:	ldr	x0, [x0]
    9b40:	ldr	w0, [x0, #12]
    9b44:	and	w0, w0, #0x100
    9b48:	cmp	w0, #0x0
    9b4c:	b.eq	9b84 <XS_B_walkoptree_debug+0x374>  // b.none
    9b50:	ldr	x0, [sp, #24]
    9b54:	ldr	x1, [x0, #24]
    9b58:	ldrsw	x0, [sp, #36]
    9b5c:	add	x0, x0, #0x1
    9b60:	lsl	x0, x0, #3
    9b64:	add	x0, x1, x0
    9b68:	ldr	x0, [x0]
    9b6c:	ldr	x0, [x0]
    9b70:	ldr	x0, [x0, #32]
    9b74:	cmp	x0, #0x0
    9b78:	cset	w0, ne  // ne = any
    9b7c:	and	w0, w0, #0xff
    9b80:	b	9c6c <XS_B_walkoptree_debug+0x45c>
    9b84:	ldr	x0, [sp, #24]
    9b88:	ldr	x1, [x0, #24]
    9b8c:	ldrsw	x0, [sp, #36]
    9b90:	add	x0, x0, #0x1
    9b94:	lsl	x0, x0, #3
    9b98:	add	x0, x1, x0
    9b9c:	ldr	x0, [x0]
    9ba0:	ldr	w0, [x0, #12]
    9ba4:	and	w0, w0, #0x800
    9ba8:	cmp	w0, #0x0
    9bac:	b.eq	9c18 <XS_B_walkoptree_debug+0x408>  // b.none
    9bb0:	ldr	x0, [sp, #24]
    9bb4:	ldr	x1, [x0, #24]
    9bb8:	ldrsw	x0, [sp, #36]
    9bbc:	add	x0, x0, #0x1
    9bc0:	lsl	x0, x0, #3
    9bc4:	add	x0, x1, x0
    9bc8:	ldr	x0, [x0]
    9bcc:	ldr	x0, [x0, #16]
    9bd0:	ldr	w0, [x0, #12]
    9bd4:	and	w0, w0, #0x100000
    9bd8:	cmp	w0, #0x0
    9bdc:	b.eq	9c50 <XS_B_walkoptree_debug+0x440>  // b.none
    9be0:	ldr	x0, [sp, #24]
    9be4:	ldr	x1, [x0, #24]
    9be8:	ldrsw	x0, [sp, #36]
    9bec:	add	x0, x0, #0x1
    9bf0:	lsl	x0, x0, #3
    9bf4:	add	x0, x1, x0
    9bf8:	ldr	x0, [x0]
    9bfc:	ldr	x0, [x0, #16]
    9c00:	ldr	x0, [x0]
    9c04:	ldr	x0, [x0]
    9c08:	ldr	w0, [x0, #12]
    9c0c:	and	w0, w0, #0x10000000
    9c10:	cmp	w0, #0x0
    9c14:	b.eq	9c50 <XS_B_walkoptree_debug+0x440>  // b.none
    9c18:	ldr	x0, [sp, #24]
    9c1c:	ldr	x1, [x0, #24]
    9c20:	ldrsw	x0, [sp, #36]
    9c24:	add	x0, x0, #0x1
    9c28:	lsl	x0, x0, #3
    9c2c:	add	x0, x1, x0
    9c30:	ldr	x0, [x0]
    9c34:	mov	w2, #0x0                   	// #0
    9c38:	mov	x1, x0
    9c3c:	ldr	x0, [sp, #24]
    9c40:	bl	4b30 <Perl_sv_2bool_flags@plt>
    9c44:	and	w0, w0, #0xff
    9c48:	cmp	w0, #0x0
    9c4c:	b.eq	9c58 <XS_B_walkoptree_debug+0x448>  // b.none
    9c50:	mov	w0, #0x1                   	// #1
    9c54:	b	9c5c <XS_B_walkoptree_debug+0x44c>
    9c58:	mov	w0, #0x0                   	// #0
    9c5c:	and	w0, w0, #0x1
    9c60:	and	w0, w0, #0xff
    9c64:	b	9c6c <XS_B_walkoptree_debug+0x45c>
    9c68:	mov	w0, #0x0                   	// #0
    9c6c:	cmp	w0, #0x0
    9c70:	b.eq	9c80 <XS_B_walkoptree_debug+0x470>  // b.none
    9c74:	ldr	x0, [sp, #72]
    9c78:	mov	w1, #0x1                   	// #1
    9c7c:	str	w1, [x0, #64]
    9c80:	ldr	x0, [sp, #24]
    9c84:	ldr	x1, [x0, #24]
    9c88:	ldrsw	x0, [sp, #36]
    9c8c:	lsl	x0, x0, #3
    9c90:	sub	x0, x0, #0x8
    9c94:	add	x0, x1, x0
    9c98:	str	x0, [sp, #48]
    9c9c:	ldrsw	x0, [sp, #44]
    9ca0:	str	x0, [sp, #80]
    9ca4:	ldr	x0, [sp, #64]
    9ca8:	ldr	w1, [x0, #12]
    9cac:	mov	w0, #0x8ff                 	// #2303
    9cb0:	movk	w0, #0x9981, lsl #16
    9cb4:	and	w0, w1, w0
    9cb8:	cmp	w0, #0x1
    9cbc:	cset	w0, eq  // eq = none
    9cc0:	and	w0, w0, #0xff
    9cc4:	mov	w1, w0
    9cc8:	ldr	x0, [sp, #24]
    9ccc:	ldrb	w0, [x0, #185]
    9cd0:	eor	w0, w0, #0x1
    9cd4:	and	w0, w0, #0xff
    9cd8:	and	w0, w1, w0
    9cdc:	cmp	w0, #0x0
    9ce0:	cset	w0, ne  // ne = any
    9ce4:	and	w0, w0, #0xff
    9ce8:	and	x0, x0, #0xff
    9cec:	cmp	x0, #0x0
    9cf0:	b.eq	9d1c <XS_B_walkoptree_debug+0x50c>  // b.none
    9cf4:	ldr	x0, [sp, #64]
    9cf8:	ldr	w1, [x0, #12]
    9cfc:	mov	w0, #0x1100                	// #4352
    9d00:	orr	w1, w1, w0
    9d04:	ldr	x0, [sp, #64]
    9d08:	str	w1, [x0, #12]
    9d0c:	ldr	x0, [sp, #64]
    9d10:	ldr	x1, [sp, #80]
    9d14:	str	x1, [x0, #16]
    9d18:	b	9d2c <XS_B_walkoptree_debug+0x51c>
    9d1c:	ldr	x2, [sp, #80]
    9d20:	ldr	x1, [sp, #64]
    9d24:	ldr	x0, [sp, #24]
    9d28:	bl	4c60 <Perl_sv_setiv_mg@plt>
    9d2c:	ldr	x0, [sp, #48]
    9d30:	add	x0, x0, #0x8
    9d34:	str	x0, [sp, #48]
    9d38:	ldr	x0, [sp, #48]
    9d3c:	ldr	x1, [sp, #64]
    9d40:	str	x1, [x0]
    9d44:	mov	x0, #0x1                   	// #1
    9d48:	str	x0, [sp, #88]
    9d4c:	ldr	x0, [sp, #24]
    9d50:	ldr	x1, [x0, #24]
    9d54:	ldrsw	x2, [sp, #36]
    9d58:	ldr	x0, [sp, #88]
    9d5c:	add	x0, x2, x0
    9d60:	lsl	x0, x0, #3
    9d64:	sub	x0, x0, #0x8
    9d68:	add	x1, x1, x0
    9d6c:	ldr	x0, [sp, #24]
    9d70:	str	x1, [x0]
    9d74:	nop
    9d78:	ldp	x29, x30, [sp], #96
    9d7c:	ret

0000000000009d80 <XS_B_address>:
    9d80:	stp	x29, x30, [sp, #-96]!
    9d84:	mov	x29, sp
    9d88:	str	x0, [sp, #24]
    9d8c:	str	x1, [sp, #16]
    9d90:	ldr	x0, [sp, #24]
    9d94:	ldr	x0, [x0]
    9d98:	str	x0, [sp, #40]
    9d9c:	ldr	x0, [sp, #24]
    9da0:	bl	7424 <S_POPMARK>
    9da4:	str	w0, [sp, #32]
    9da8:	ldr	x0, [sp, #24]
    9dac:	ldr	x1, [x0, #24]
    9db0:	ldr	w0, [sp, #32]
    9db4:	add	w2, w0, #0x1
    9db8:	str	w2, [sp, #32]
    9dbc:	sxtw	x0, w0
    9dc0:	lsl	x0, x0, #3
    9dc4:	add	x0, x1, x0
    9dc8:	str	x0, [sp, #48]
    9dcc:	ldr	x1, [sp, #40]
    9dd0:	ldr	x0, [sp, #48]
    9dd4:	sub	x0, x1, x0
    9dd8:	asr	x0, x0, #3
    9ddc:	str	w0, [sp, #36]
    9de0:	ldr	w0, [sp, #36]
    9de4:	cmp	w0, #0x1
    9de8:	b.eq	9dfc <XS_B_address+0x7c>  // b.none
    9dec:	adrp	x0, 18000 <boot_B+0x23d8>
    9df0:	add	x1, x0, #0xb40
    9df4:	ldr	x0, [sp, #16]
    9df8:	bl	4d70 <Perl_croak_xs_usage@plt>
    9dfc:	ldr	x0, [sp, #24]
    9e00:	ldr	x1, [x0, #24]
    9e04:	ldrsw	x0, [sp, #32]
    9e08:	lsl	x0, x0, #3
    9e0c:	add	x0, x1, x0
    9e10:	ldr	x0, [x0]
    9e14:	str	x0, [sp, #56]
    9e18:	ldr	x0, [sp, #24]
    9e1c:	ldr	x0, [x0, #8]
    9e20:	ldrb	w0, [x0, #35]
    9e24:	and	w0, w0, #0x4
    9e28:	cmp	w0, #0x0
    9e2c:	b.eq	9e54 <XS_B_address+0xd4>  // b.none
    9e30:	ldr	x0, [sp, #24]
    9e34:	ldr	x1, [x0, #16]
    9e38:	ldr	x0, [sp, #24]
    9e3c:	ldr	x0, [x0, #8]
    9e40:	ldr	x0, [x0, #24]
    9e44:	lsl	x0, x0, #3
    9e48:	add	x0, x1, x0
    9e4c:	ldr	x0, [x0]
    9e50:	b	9e5c <XS_B_address+0xdc>
    9e54:	ldr	x0, [sp, #24]
    9e58:	bl	5080 <Perl_sv_newmortal@plt>
    9e5c:	str	x0, [sp, #64]
    9e60:	ldr	x0, [sp, #56]
    9e64:	str	x0, [sp, #72]
    9e68:	ldr	x0, [sp, #24]
    9e6c:	ldr	x1, [x0, #24]
    9e70:	ldrsw	x0, [sp, #32]
    9e74:	lsl	x0, x0, #3
    9e78:	sub	x0, x0, #0x8
    9e7c:	add	x0, x1, x0
    9e80:	str	x0, [sp, #40]
    9e84:	ldr	x0, [sp, #72]
    9e88:	str	x0, [sp, #80]
    9e8c:	ldr	x0, [sp, #64]
    9e90:	ldr	w1, [x0, #12]
    9e94:	mov	w0, #0x8ff                 	// #2303
    9e98:	movk	w0, #0x9981, lsl #16
    9e9c:	and	w0, w1, w0
    9ea0:	cmp	w0, #0x1
    9ea4:	cset	w0, eq  // eq = none
    9ea8:	and	w0, w0, #0xff
    9eac:	mov	w1, w0
    9eb0:	ldr	x0, [sp, #24]
    9eb4:	ldrb	w0, [x0, #185]
    9eb8:	eor	w0, w0, #0x1
    9ebc:	and	w0, w0, #0xff
    9ec0:	and	w0, w1, w0
    9ec4:	cmp	w0, #0x0
    9ec8:	cset	w0, ne  // ne = any
    9ecc:	and	w0, w0, #0xff
    9ed0:	and	x0, x0, #0xff
    9ed4:	cmp	x0, #0x0
    9ed8:	b.eq	9f04 <XS_B_address+0x184>  // b.none
    9edc:	ldr	x0, [sp, #64]
    9ee0:	ldr	w1, [x0, #12]
    9ee4:	mov	w0, #0x1100                	// #4352
    9ee8:	orr	w1, w1, w0
    9eec:	ldr	x0, [sp, #64]
    9ef0:	str	w1, [x0, #12]
    9ef4:	ldr	x0, [sp, #64]
    9ef8:	ldr	x1, [sp, #80]
    9efc:	str	x1, [x0, #16]
    9f00:	b	9f14 <XS_B_address+0x194>
    9f04:	ldr	x2, [sp, #80]
    9f08:	ldr	x1, [sp, #64]
    9f0c:	ldr	x0, [sp, #24]
    9f10:	bl	4c60 <Perl_sv_setiv_mg@plt>
    9f14:	ldr	x0, [sp, #40]
    9f18:	add	x0, x0, #0x8
    9f1c:	str	x0, [sp, #40]
    9f20:	ldr	x0, [sp, #40]
    9f24:	ldr	x1, [sp, #64]
    9f28:	str	x1, [x0]
    9f2c:	mov	x0, #0x1                   	// #1
    9f30:	str	x0, [sp, #88]
    9f34:	ldr	x0, [sp, #24]
    9f38:	ldr	x1, [x0, #24]
    9f3c:	ldrsw	x2, [sp, #32]
    9f40:	ldr	x0, [sp, #88]
    9f44:	add	x0, x2, x0
    9f48:	lsl	x0, x0, #3
    9f4c:	sub	x0, x0, #0x8
    9f50:	add	x1, x1, x0
    9f54:	ldr	x0, [sp, #24]
    9f58:	str	x1, [x0]
    9f5c:	nop
    9f60:	ldp	x29, x30, [sp], #96
    9f64:	ret

0000000000009f68 <XS_B_svref_2object>:
    9f68:	stp	x29, x30, [sp, #-64]!
    9f6c:	mov	x29, sp
    9f70:	str	x0, [sp, #24]
    9f74:	str	x1, [sp, #16]
    9f78:	ldr	x0, [sp, #24]
    9f7c:	ldr	x0, [x0]
    9f80:	str	x0, [sp, #40]
    9f84:	ldr	x0, [sp, #24]
    9f88:	bl	7424 <S_POPMARK>
    9f8c:	str	w0, [sp, #32]
    9f90:	ldr	x0, [sp, #24]
    9f94:	ldr	x1, [x0, #24]
    9f98:	ldr	w0, [sp, #32]
    9f9c:	add	w2, w0, #0x1
    9fa0:	str	w2, [sp, #32]
    9fa4:	sxtw	x0, w0
    9fa8:	lsl	x0, x0, #3
    9fac:	add	x0, x1, x0
    9fb0:	str	x0, [sp, #48]
    9fb4:	ldr	x1, [sp, #40]
    9fb8:	ldr	x0, [sp, #48]
    9fbc:	sub	x0, x1, x0
    9fc0:	asr	x0, x0, #3
    9fc4:	str	w0, [sp, #36]
    9fc8:	ldr	w0, [sp, #36]
    9fcc:	cmp	w0, #0x1
    9fd0:	b.eq	9fe4 <XS_B_svref_2object+0x7c>  // b.none
    9fd4:	adrp	x0, 18000 <boot_B+0x23d8>
    9fd8:	add	x1, x0, #0xb40
    9fdc:	ldr	x0, [sp, #16]
    9fe0:	bl	4d70 <Perl_croak_xs_usage@plt>
    9fe4:	ldrsw	x0, [sp, #36]
    9fe8:	lsl	x0, x0, #3
    9fec:	neg	x0, x0
    9ff0:	ldr	x1, [sp, #40]
    9ff4:	add	x0, x1, x0
    9ff8:	str	x0, [sp, #40]
    9ffc:	ldr	x0, [sp, #24]
    a000:	ldr	x1, [x0, #24]
    a004:	ldrsw	x0, [sp, #32]
    a008:	lsl	x0, x0, #3
    a00c:	add	x0, x1, x0
    a010:	ldr	x0, [x0]
    a014:	str	x0, [sp, #56]
    a018:	ldr	x0, [sp, #56]
    a01c:	ldr	w0, [x0, #12]
    a020:	and	w0, w0, #0x800
    a024:	cmp	w0, #0x0
    a028:	b.ne	a038 <XS_B_svref_2object+0xd0>  // b.any
    a02c:	adrp	x0, 18000 <boot_B+0x23d8>
    a030:	add	x0, x0, #0xd68
    a034:	bl	4e60 <Perl_croak_nocontext@plt>
    a038:	ldr	x0, [sp, #56]
    a03c:	ldr	x1, [x0, #16]
    a040:	ldr	x0, [sp, #40]
    a044:	add	x0, x0, #0x8
    a048:	str	x0, [sp, #40]
    a04c:	ldr	x0, [sp, #24]
    a050:	bl	77c4 <make_sv_object>
    a054:	mov	x1, x0
    a058:	ldr	x0, [sp, #40]
    a05c:	str	x1, [x0]
    a060:	ldr	x0, [sp, #24]
    a064:	ldr	x1, [sp, #40]
    a068:	str	x1, [x0]
    a06c:	nop
    a070:	ldp	x29, x30, [sp], #64
    a074:	ret

000000000000a078 <XS_B_opnumber>:
    a078:	stp	x29, x30, [sp, #-112]!
    a07c:	mov	x29, sp
    a080:	str	x19, [sp, #16]
    a084:	str	x0, [sp, #40]
    a088:	str	x1, [sp, #32]
    a08c:	ldr	x0, [sp, #40]
    a090:	ldr	x0, [x0]
    a094:	str	x0, [sp, #88]
    a098:	ldr	x0, [sp, #40]
    a09c:	bl	7424 <S_POPMARK>
    a0a0:	str	w0, [sp, #64]
    a0a4:	ldr	x0, [sp, #40]
    a0a8:	ldr	x1, [x0, #24]
    a0ac:	ldr	w0, [sp, #64]
    a0b0:	add	w2, w0, #0x1
    a0b4:	str	w2, [sp, #64]
    a0b8:	sxtw	x0, w0
    a0bc:	lsl	x0, x0, #3
    a0c0:	add	x0, x1, x0
    a0c4:	str	x0, [sp, #96]
    a0c8:	ldr	x1, [sp, #88]
    a0cc:	ldr	x0, [sp, #96]
    a0d0:	sub	x0, x1, x0
    a0d4:	asr	x0, x0, #3
    a0d8:	str	w0, [sp, #68]
    a0dc:	ldr	w0, [sp, #68]
    a0e0:	cmp	w0, #0x1
    a0e4:	b.eq	a0f8 <XS_B_opnumber+0x80>  // b.none
    a0e8:	adrp	x0, 18000 <boot_B+0x23d8>
    a0ec:	add	x1, x0, #0xbb8
    a0f0:	ldr	x0, [sp, #32]
    a0f4:	bl	4d70 <Perl_croak_xs_usage@plt>
    a0f8:	ldr	x0, [sp, #40]
    a0fc:	ldr	x1, [x0, #24]
    a100:	ldrsw	x0, [sp, #64]
    a104:	lsl	x0, x0, #3
    a108:	add	x0, x1, x0
    a10c:	ldr	x0, [x0]
    a110:	ldr	w1, [x0, #12]
    a114:	mov	w0, #0x400                 	// #1024
    a118:	movk	w0, #0x20, lsl #16
    a11c:	and	w0, w1, w0
    a120:	cmp	w0, #0x400
    a124:	b.ne	a148 <XS_B_opnumber+0xd0>  // b.any
    a128:	ldr	x0, [sp, #40]
    a12c:	ldr	x1, [x0, #24]
    a130:	ldrsw	x0, [sp, #64]
    a134:	lsl	x0, x0, #3
    a138:	add	x0, x1, x0
    a13c:	ldr	x0, [x0]
    a140:	ldr	x0, [x0, #16]
    a144:	b	a174 <XS_B_opnumber+0xfc>
    a148:	ldr	x0, [sp, #40]
    a14c:	ldr	x1, [x0, #24]
    a150:	ldrsw	x0, [sp, #64]
    a154:	lsl	x0, x0, #3
    a158:	add	x0, x1, x0
    a15c:	ldr	x0, [x0]
    a160:	mov	w3, #0x2                   	// #2
    a164:	mov	x2, #0x0                   	// #0
    a168:	mov	x1, x0
    a16c:	ldr	x0, [sp, #40]
    a170:	bl	4ce0 <Perl_sv_2pv_flags@plt>
    a174:	str	x0, [sp, #72]
    a178:	mov	x0, #0xffffffffffffffff    	// #-1
    a17c:	str	x0, [sp, #80]
    a180:	ldr	x0, [sp, #40]
    a184:	ldr	x1, [x0, #24]
    a188:	ldrsw	x0, [sp, #64]
    a18c:	lsl	x0, x0, #3
    a190:	add	x19, x1, x0
    a194:	ldr	x0, [sp, #40]
    a198:	bl	5080 <Perl_sv_newmortal@plt>
    a19c:	str	x0, [x19]
    a1a0:	mov	x2, #0x3                   	// #3
    a1a4:	adrp	x0, 18000 <boot_B+0x23d8>
    a1a8:	add	x1, x0, #0xd88
    a1ac:	ldr	x0, [sp, #72]
    a1b0:	bl	4cb0 <strncmp@plt>
    a1b4:	cmp	w0, #0x0
    a1b8:	b.ne	a1c8 <XS_B_opnumber+0x150>  // b.any
    a1bc:	ldr	x0, [sp, #72]
    a1c0:	add	x0, x0, #0x3
    a1c4:	str	x0, [sp, #72]
    a1c8:	str	wzr, [sp, #60]
    a1cc:	b	a20c <XS_B_opnumber+0x194>
    a1d0:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    a1d4:	ldr	x0, [x0, #4024]
    a1d8:	ldrsw	x1, [sp, #60]
    a1dc:	ldr	x0, [x0, x1, lsl #3]
    a1e0:	mov	x1, x0
    a1e4:	ldr	x0, [sp, #72]
    a1e8:	bl	4e30 <strcmp@plt>
    a1ec:	cmp	w0, #0x0
    a1f0:	b.ne	a200 <XS_B_opnumber+0x188>  // b.any
    a1f4:	ldrsw	x0, [sp, #60]
    a1f8:	str	x0, [sp, #80]
    a1fc:	b	a218 <XS_B_opnumber+0x1a0>
    a200:	ldr	w0, [sp, #60]
    a204:	add	w0, w0, #0x1
    a208:	str	w0, [sp, #60]
    a20c:	ldr	w0, [sp, #60]
    a210:	cmp	w0, #0x18c
    a214:	b.le	a1d0 <XS_B_opnumber+0x158>
    a218:	ldr	x0, [sp, #40]
    a21c:	ldr	x1, [x0, #24]
    a220:	ldrsw	x0, [sp, #64]
    a224:	lsl	x0, x0, #3
    a228:	add	x0, x1, x0
    a22c:	ldr	x0, [x0]
    a230:	ldr	x2, [sp, #80]
    a234:	mov	x1, x0
    a238:	ldr	x0, [sp, #40]
    a23c:	bl	5040 <Perl_sv_setiv@plt>
    a240:	mov	x0, #0x1                   	// #1
    a244:	str	x0, [sp, #104]
    a248:	ldr	x0, [sp, #40]
    a24c:	ldr	x1, [x0, #24]
    a250:	ldrsw	x2, [sp, #64]
    a254:	ldr	x0, [sp, #104]
    a258:	add	x0, x2, x0
    a25c:	lsl	x0, x0, #3
    a260:	sub	x0, x0, #0x8
    a264:	add	x1, x1, x0
    a268:	ldr	x0, [sp, #40]
    a26c:	str	x1, [x0]
    a270:	nop
    a274:	ldr	x19, [sp, #16]
    a278:	ldp	x29, x30, [sp], #112
    a27c:	ret

000000000000a280 <XS_B_ppname>:
    a280:	stp	x29, x30, [sp, #-96]!
    a284:	mov	x29, sp
    a288:	str	x19, [sp, #16]
    a28c:	str	x0, [sp, #40]
    a290:	str	x1, [sp, #32]
    a294:	ldr	x0, [sp, #40]
    a298:	ldr	x0, [x0]
    a29c:	str	x0, [sp, #72]
    a2a0:	ldr	x0, [sp, #40]
    a2a4:	bl	7424 <S_POPMARK>
    a2a8:	str	w0, [sp, #60]
    a2ac:	ldr	x0, [sp, #40]
    a2b0:	ldr	x1, [x0, #24]
    a2b4:	ldr	w0, [sp, #60]
    a2b8:	add	w2, w0, #0x1
    a2bc:	str	w2, [sp, #60]
    a2c0:	sxtw	x0, w0
    a2c4:	lsl	x0, x0, #3
    a2c8:	add	x0, x1, x0
    a2cc:	str	x0, [sp, #80]
    a2d0:	ldr	x1, [sp, #72]
    a2d4:	ldr	x0, [sp, #80]
    a2d8:	sub	x0, x1, x0
    a2dc:	asr	x0, x0, #3
    a2e0:	str	w0, [sp, #64]
    a2e4:	ldr	w0, [sp, #64]
    a2e8:	cmp	w0, #0x1
    a2ec:	b.eq	a300 <XS_B_ppname+0x80>  // b.none
    a2f0:	adrp	x0, 18000 <boot_B+0x23d8>
    a2f4:	add	x1, x0, #0xd90
    a2f8:	ldr	x0, [sp, #32]
    a2fc:	bl	4d70 <Perl_croak_xs_usage@plt>
    a300:	ldr	x0, [sp, #40]
    a304:	ldr	x1, [x0, #24]
    a308:	ldrsw	x0, [sp, #60]
    a30c:	lsl	x0, x0, #3
    a310:	add	x0, x1, x0
    a314:	ldr	x0, [x0]
    a318:	ldr	w1, [x0, #12]
    a31c:	mov	w0, #0x100                 	// #256
    a320:	movk	w0, #0x20, lsl #16
    a324:	and	w0, w1, w0
    a328:	cmp	w0, #0x100
    a32c:	b.ne	a354 <XS_B_ppname+0xd4>  // b.any
    a330:	ldr	x0, [sp, #40]
    a334:	ldr	x1, [x0, #24]
    a338:	ldrsw	x0, [sp, #60]
    a33c:	lsl	x0, x0, #3
    a340:	add	x0, x1, x0
    a344:	ldr	x0, [x0]
    a348:	ldr	x0, [x0]
    a34c:	ldr	x0, [x0, #32]
    a350:	b	a37c <XS_B_ppname+0xfc>
    a354:	ldr	x0, [sp, #40]
    a358:	ldr	x1, [x0, #24]
    a35c:	ldrsw	x0, [sp, #60]
    a360:	lsl	x0, x0, #3
    a364:	add	x0, x1, x0
    a368:	ldr	x0, [x0]
    a36c:	mov	w2, #0x2                   	// #2
    a370:	mov	x1, x0
    a374:	ldr	x0, [sp, #40]
    a378:	bl	4b20 <Perl_sv_2iv_flags@plt>
    a37c:	str	w0, [sp, #68]
    a380:	ldr	x0, [sp, #40]
    a384:	ldr	x1, [x0, #24]
    a388:	ldrsw	x0, [sp, #60]
    a38c:	lsl	x0, x0, #3
    a390:	add	x19, x1, x0
    a394:	ldr	x0, [sp, #40]
    a398:	bl	5080 <Perl_sv_newmortal@plt>
    a39c:	str	x0, [x19]
    a3a0:	ldr	w0, [sp, #68]
    a3a4:	cmp	w0, #0x0
    a3a8:	b.lt	a3f8 <XS_B_ppname+0x178>  // b.tstop
    a3ac:	ldr	w0, [sp, #68]
    a3b0:	cmp	w0, #0x18c
    a3b4:	b.gt	a3f8 <XS_B_ppname+0x178>
    a3b8:	ldr	x0, [sp, #40]
    a3bc:	ldr	x1, [x0, #24]
    a3c0:	ldrsw	x0, [sp, #60]
    a3c4:	lsl	x0, x0, #3
    a3c8:	add	x0, x1, x0
    a3cc:	ldr	x4, [x0]
    a3d0:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    a3d4:	ldr	x0, [x0, #4024]
    a3d8:	ldrsw	x1, [sp, #68]
    a3dc:	ldr	x0, [x0, x1, lsl #3]
    a3e0:	mov	x3, x0
    a3e4:	adrp	x0, 18000 <boot_B+0x23d8>
    a3e8:	add	x2, x0, #0xd98
    a3ec:	mov	x1, x4
    a3f0:	ldr	x0, [sp, #40]
    a3f4:	bl	5000 <Perl_sv_setpvf@plt>
    a3f8:	mov	x0, #0x1                   	// #1
    a3fc:	str	x0, [sp, #88]
    a400:	ldr	x0, [sp, #40]
    a404:	ldr	x1, [x0, #24]
    a408:	ldrsw	x2, [sp, #60]
    a40c:	ldr	x0, [sp, #88]
    a410:	add	x0, x2, x0
    a414:	lsl	x0, x0, #3
    a418:	sub	x0, x0, #0x8
    a41c:	add	x1, x1, x0
    a420:	ldr	x0, [sp, #40]
    a424:	str	x1, [x0]
    a428:	nop
    a42c:	ldr	x19, [sp, #16]
    a430:	ldp	x29, x30, [sp], #96
    a434:	ret

000000000000a438 <XS_B_hash>:
    a438:	stp	x29, x30, [sp, #-128]!
    a43c:	mov	x29, sp
    a440:	str	x19, [sp, #16]
    a444:	str	x0, [sp, #40]
    a448:	str	x1, [sp, #32]
    a44c:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    a450:	ldr	x0, [x0, #4008]
    a454:	ldr	x1, [x0]
    a458:	str	x1, [sp, #120]
    a45c:	mov	x1, #0x0                   	// #0
    a460:	ldr	x0, [sp, #40]
    a464:	ldr	x0, [x0]
    a468:	str	x0, [sp, #80]
    a46c:	ldr	x0, [sp, #40]
    a470:	bl	7424 <S_POPMARK>
    a474:	str	w0, [sp, #60]
    a478:	ldr	x0, [sp, #40]
    a47c:	ldr	x1, [x0, #24]
    a480:	ldr	w0, [sp, #60]
    a484:	add	w2, w0, #0x1
    a488:	str	w2, [sp, #60]
    a48c:	sxtw	x0, w0
    a490:	lsl	x0, x0, #3
    a494:	add	x0, x1, x0
    a498:	str	x0, [sp, #88]
    a49c:	ldr	x1, [sp, #80]
    a4a0:	ldr	x0, [sp, #88]
    a4a4:	sub	x0, x1, x0
    a4a8:	asr	x0, x0, #3
    a4ac:	str	w0, [sp, #64]
    a4b0:	ldr	w0, [sp, #64]
    a4b4:	cmp	w0, #0x1
    a4b8:	b.eq	a4cc <XS_B_hash+0x94>  // b.none
    a4bc:	adrp	x0, 18000 <boot_B+0x23d8>
    a4c0:	add	x1, x0, #0xb40
    a4c4:	ldr	x0, [sp, #32]
    a4c8:	bl	4d70 <Perl_croak_xs_usage@plt>
    a4cc:	ldr	x0, [sp, #40]
    a4d0:	ldr	x1, [x0, #24]
    a4d4:	ldrsw	x0, [sp, #60]
    a4d8:	lsl	x0, x0, #3
    a4dc:	add	x0, x1, x0
    a4e0:	ldr	x0, [x0]
    a4e4:	str	x0, [sp, #96]
    a4e8:	str	wzr, [sp, #68]
    a4ec:	ldr	x0, [sp, #96]
    a4f0:	ldr	w1, [x0, #12]
    a4f4:	mov	w0, #0x400                 	// #1024
    a4f8:	movk	w0, #0x2020, lsl #16
    a4fc:	and	w0, w1, w0
    a500:	cmp	w0, #0x400
    a504:	b.ne	a524 <XS_B_hash+0xec>  // b.any
    a508:	ldr	x0, [sp, #96]
    a50c:	ldr	x0, [x0]
    a510:	ldr	x0, [x0, #16]
    a514:	str	x0, [sp, #72]
    a518:	ldr	x0, [sp, #96]
    a51c:	ldr	x0, [x0, #16]
    a520:	b	a538 <XS_B_hash+0x100>
    a524:	add	x0, sp, #0x48
    a528:	mov	x2, x0
    a52c:	ldr	x1, [sp, #96]
    a530:	ldr	x0, [sp, #40]
    a534:	bl	4cd0 <Perl_sv_2pvbyte@plt>
    a538:	str	x0, [sp, #104]
    a53c:	ldr	x0, [sp, #72]
    a540:	cmp	x0, #0x18
    a544:	cset	w0, ls  // ls = plast
    a548:	and	w0, w0, #0xff
    a54c:	and	x0, x0, #0xff
    a550:	cmp	x0, #0x0
    a554:	b.eq	a578 <XS_B_hash+0x140>  // b.none
    a558:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    a55c:	ldr	x0, [x0, #4040]
    a560:	add	x0, x0, #0x20
    a564:	ldr	x1, [sp, #72]
    a568:	mov	x2, x1
    a56c:	ldr	x1, [sp, #104]
    a570:	bl	5c90 <sbox32_hash_with_state>
    a574:	b	a590 <XS_B_hash+0x158>
    a578:	ldr	x0, [sp, #72]
    a57c:	mov	x2, x0
    a580:	ldr	x1, [sp, #104]
    a584:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    a588:	ldr	x0, [x0, #4040]
    a58c:	bl	61c4 <stadtx_hash_with_state>
    a590:	str	w0, [sp, #68]
    a594:	ldr	w0, [sp, #68]
    a598:	mov	x2, x0
    a59c:	adrp	x0, 18000 <boot_B+0x23d8>
    a5a0:	add	x1, x0, #0xda0
    a5a4:	ldr	x0, [sp, #40]
    a5a8:	bl	5060 <Perl_newSVpvf@plt>
    a5ac:	mov	x2, x0
    a5b0:	ldr	x0, [sp, #40]
    a5b4:	ldr	x1, [x0, #24]
    a5b8:	ldrsw	x0, [sp, #60]
    a5bc:	lsl	x0, x0, #3
    a5c0:	add	x19, x1, x0
    a5c4:	mov	x1, x2
    a5c8:	ldr	x0, [sp, #40]
    a5cc:	bl	4ec0 <Perl_sv_2mortal@plt>
    a5d0:	str	x0, [x19]
    a5d4:	mov	x0, #0x1                   	// #1
    a5d8:	str	x0, [sp, #112]
    a5dc:	ldr	x0, [sp, #40]
    a5e0:	ldr	x1, [x0, #24]
    a5e4:	ldrsw	x2, [sp, #60]
    a5e8:	ldr	x0, [sp, #112]
    a5ec:	add	x0, x2, x0
    a5f0:	lsl	x0, x0, #3
    a5f4:	sub	x0, x0, #0x8
    a5f8:	add	x1, x1, x0
    a5fc:	ldr	x0, [sp, #40]
    a600:	str	x1, [x0]
    a604:	nop
    a608:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    a60c:	ldr	x0, [x0, #4008]
    a610:	ldr	x1, [sp, #120]
    a614:	ldr	x0, [x0]
    a618:	eor	x0, x1, x0
    a61c:	cmp	x0, #0x0
    a620:	b.eq	a628 <XS_B_hash+0x1f0>  // b.none
    a624:	bl	4d30 <__stack_chk_fail@plt>
    a628:	ldr	x19, [sp, #16]
    a62c:	ldp	x29, x30, [sp], #128
    a630:	ret

000000000000a634 <XS_B_cast_I32>:
    a634:	stp	x29, x30, [sp, #-96]!
    a638:	mov	x29, sp
    a63c:	str	x0, [sp, #24]
    a640:	str	x1, [sp, #16]
    a644:	ldr	x0, [sp, #24]
    a648:	ldr	x0, [x0]
    a64c:	str	x0, [sp, #40]
    a650:	ldr	x0, [sp, #24]
    a654:	bl	7424 <S_POPMARK>
    a658:	str	w0, [sp, #32]
    a65c:	ldr	x0, [sp, #24]
    a660:	ldr	x1, [x0, #24]
    a664:	ldr	w0, [sp, #32]
    a668:	add	w2, w0, #0x1
    a66c:	str	w2, [sp, #32]
    a670:	sxtw	x0, w0
    a674:	lsl	x0, x0, #3
    a678:	add	x0, x1, x0
    a67c:	str	x0, [sp, #48]
    a680:	ldr	x1, [sp, #40]
    a684:	ldr	x0, [sp, #48]
    a688:	sub	x0, x1, x0
    a68c:	asr	x0, x0, #3
    a690:	str	w0, [sp, #36]
    a694:	ldr	w0, [sp, #36]
    a698:	cmp	w0, #0x1
    a69c:	b.eq	a6b0 <XS_B_cast_I32+0x7c>  // b.none
    a6a0:	adrp	x0, 18000 <boot_B+0x23d8>
    a6a4:	add	x1, x0, #0xda8
    a6a8:	ldr	x0, [sp, #16]
    a6ac:	bl	4d70 <Perl_croak_xs_usage@plt>
    a6b0:	ldr	x0, [sp, #24]
    a6b4:	ldr	x1, [x0, #24]
    a6b8:	ldrsw	x0, [sp, #32]
    a6bc:	lsl	x0, x0, #3
    a6c0:	add	x0, x1, x0
    a6c4:	ldr	x0, [x0]
    a6c8:	ldr	w1, [x0, #12]
    a6cc:	mov	w0, #0x100                 	// #256
    a6d0:	movk	w0, #0x20, lsl #16
    a6d4:	and	w0, w1, w0
    a6d8:	cmp	w0, #0x100
    a6dc:	b.ne	a704 <XS_B_cast_I32+0xd0>  // b.any
    a6e0:	ldr	x0, [sp, #24]
    a6e4:	ldr	x1, [x0, #24]
    a6e8:	ldrsw	x0, [sp, #32]
    a6ec:	lsl	x0, x0, #3
    a6f0:	add	x0, x1, x0
    a6f4:	ldr	x0, [x0]
    a6f8:	ldr	x0, [x0]
    a6fc:	ldr	x0, [x0, #32]
    a700:	b	a72c <XS_B_cast_I32+0xf8>
    a704:	ldr	x0, [sp, #24]
    a708:	ldr	x1, [x0, #24]
    a70c:	ldrsw	x0, [sp, #32]
    a710:	lsl	x0, x0, #3
    a714:	add	x0, x1, x0
    a718:	ldr	x0, [x0]
    a71c:	mov	w2, #0x2                   	// #2
    a720:	mov	x1, x0
    a724:	ldr	x0, [sp, #24]
    a728:	bl	4b20 <Perl_sv_2iv_flags@plt>
    a72c:	str	x0, [sp, #56]
    a730:	ldr	x0, [sp, #24]
    a734:	ldr	x0, [x0, #8]
    a738:	ldrb	w0, [x0, #35]
    a73c:	and	w0, w0, #0x4
    a740:	cmp	w0, #0x0
    a744:	b.eq	a76c <XS_B_cast_I32+0x138>  // b.none
    a748:	ldr	x0, [sp, #24]
    a74c:	ldr	x1, [x0, #16]
    a750:	ldr	x0, [sp, #24]
    a754:	ldr	x0, [x0, #8]
    a758:	ldr	x0, [x0, #24]
    a75c:	lsl	x0, x0, #3
    a760:	add	x0, x1, x0
    a764:	ldr	x0, [x0]
    a768:	b	a774 <XS_B_cast_I32+0x140>
    a76c:	ldr	x0, [sp, #24]
    a770:	bl	5080 <Perl_sv_newmortal@plt>
    a774:	str	x0, [sp, #64]
    a778:	ldr	x0, [sp, #56]
    a77c:	sxtw	x0, w0
    a780:	str	x0, [sp, #72]
    a784:	ldr	x0, [sp, #24]
    a788:	ldr	x1, [x0, #24]
    a78c:	ldrsw	x0, [sp, #32]
    a790:	lsl	x0, x0, #3
    a794:	sub	x0, x0, #0x8
    a798:	add	x0, x1, x0
    a79c:	str	x0, [sp, #40]
    a7a0:	ldr	x0, [sp, #72]
    a7a4:	str	x0, [sp, #80]
    a7a8:	ldr	x0, [sp, #64]
    a7ac:	ldr	w1, [x0, #12]
    a7b0:	mov	w0, #0x8ff                 	// #2303
    a7b4:	movk	w0, #0x9981, lsl #16
    a7b8:	and	w0, w1, w0
    a7bc:	cmp	w0, #0x1
    a7c0:	cset	w0, eq  // eq = none
    a7c4:	and	w0, w0, #0xff
    a7c8:	mov	w1, w0
    a7cc:	ldr	x0, [sp, #24]
    a7d0:	ldrb	w0, [x0, #185]
    a7d4:	eor	w0, w0, #0x1
    a7d8:	and	w0, w0, #0xff
    a7dc:	and	w0, w1, w0
    a7e0:	cmp	w0, #0x0
    a7e4:	cset	w0, ne  // ne = any
    a7e8:	and	w0, w0, #0xff
    a7ec:	and	x0, x0, #0xff
    a7f0:	cmp	x0, #0x0
    a7f4:	b.eq	a820 <XS_B_cast_I32+0x1ec>  // b.none
    a7f8:	ldr	x0, [sp, #64]
    a7fc:	ldr	w1, [x0, #12]
    a800:	mov	w0, #0x1100                	// #4352
    a804:	orr	w1, w1, w0
    a808:	ldr	x0, [sp, #64]
    a80c:	str	w1, [x0, #12]
    a810:	ldr	x0, [sp, #64]
    a814:	ldr	x1, [sp, #80]
    a818:	str	x1, [x0, #16]
    a81c:	b	a830 <XS_B_cast_I32+0x1fc>
    a820:	ldr	x2, [sp, #80]
    a824:	ldr	x1, [sp, #64]
    a828:	ldr	x0, [sp, #24]
    a82c:	bl	4c60 <Perl_sv_setiv_mg@plt>
    a830:	ldr	x0, [sp, #40]
    a834:	add	x0, x0, #0x8
    a838:	str	x0, [sp, #40]
    a83c:	ldr	x0, [sp, #40]
    a840:	ldr	x1, [sp, #64]
    a844:	str	x1, [x0]
    a848:	mov	x0, #0x1                   	// #1
    a84c:	str	x0, [sp, #88]
    a850:	ldr	x0, [sp, #24]
    a854:	ldr	x1, [x0, #24]
    a858:	ldrsw	x2, [sp, #32]
    a85c:	ldr	x0, [sp, #88]
    a860:	add	x0, x2, x0
    a864:	lsl	x0, x0, #3
    a868:	sub	x0, x0, #0x8
    a86c:	add	x1, x1, x0
    a870:	ldr	x0, [sp, #24]
    a874:	str	x1, [x0]
    a878:	nop
    a87c:	ldp	x29, x30, [sp], #96
    a880:	ret

000000000000a884 <XS_B_minus_c>:
    a884:	stp	x29, x30, [sp, #-80]!
    a888:	mov	x29, sp
    a88c:	str	x0, [sp, #24]
    a890:	str	x1, [sp, #16]
    a894:	ldr	x0, [sp, #24]
    a898:	ldr	x0, [x0]
    a89c:	str	x0, [sp, #48]
    a8a0:	ldr	x0, [sp, #24]
    a8a4:	bl	7424 <S_POPMARK>
    a8a8:	str	w0, [sp, #36]
    a8ac:	ldr	x0, [sp, #24]
    a8b0:	ldr	x1, [x0, #24]
    a8b4:	ldr	w0, [sp, #36]
    a8b8:	add	w2, w0, #0x1
    a8bc:	str	w2, [sp, #36]
    a8c0:	sxtw	x0, w0
    a8c4:	lsl	x0, x0, #3
    a8c8:	add	x0, x1, x0
    a8cc:	str	x0, [sp, #56]
    a8d0:	ldr	x1, [sp, #48]
    a8d4:	ldr	x0, [sp, #56]
    a8d8:	sub	x0, x1, x0
    a8dc:	asr	x0, x0, #3
    a8e0:	str	w0, [sp, #40]
    a8e4:	ldr	x0, [sp, #16]
    a8e8:	ldr	x0, [x0]
    a8ec:	str	x0, [sp, #64]
    a8f0:	ldr	x0, [sp, #64]
    a8f4:	ldr	w0, [x0, #40]
    a8f8:	str	w0, [sp, #44]
    a8fc:	ldr	w0, [sp, #40]
    a900:	cmp	w0, #0x0
    a904:	b.eq	a918 <XS_B_minus_c+0x94>  // b.none
    a908:	adrp	x0, 18000 <boot_B+0x23d8>
    a90c:	add	x1, x0, #0xab8
    a910:	ldr	x0, [sp, #16]
    a914:	bl	4d70 <Perl_croak_xs_usage@plt>
    a918:	ldr	w0, [sp, #44]
    a91c:	cmp	w0, #0x0
    a920:	b.eq	a934 <XS_B_minus_c+0xb0>  // b.none
    a924:	ldr	x0, [sp, #24]
    a928:	mov	w1, #0x1                   	// #1
    a92c:	strb	w1, [x0, #2179]
    a930:	b	a940 <XS_B_minus_c+0xbc>
    a934:	ldr	x0, [sp, #24]
    a938:	mov	w1, #0x1                   	// #1
    a93c:	strb	w1, [x0, #1640]
    a940:	str	xzr, [sp, #72]
    a944:	ldr	x0, [sp, #24]
    a948:	ldr	x1, [x0, #24]
    a94c:	ldrsw	x2, [sp, #36]
    a950:	ldr	x0, [sp, #72]
    a954:	add	x0, x2, x0
    a958:	lsl	x0, x0, #3
    a95c:	sub	x0, x0, #0x8
    a960:	add	x1, x1, x0
    a964:	ldr	x0, [sp, #24]
    a968:	str	x1, [x0]
    a96c:	nop
    a970:	ldp	x29, x30, [sp], #80
    a974:	ret

000000000000a978 <XS_B_cstring>:
    a978:	stp	x29, x30, [sp, #-80]!
    a97c:	mov	x29, sp
    a980:	str	x0, [sp, #24]
    a984:	str	x1, [sp, #16]
    a988:	ldr	x0, [sp, #24]
    a98c:	ldr	x0, [x0]
    a990:	str	x0, [sp, #48]
    a994:	ldr	x0, [sp, #24]
    a998:	bl	7424 <S_POPMARK>
    a99c:	str	w0, [sp, #36]
    a9a0:	ldr	x0, [sp, #24]
    a9a4:	ldr	x1, [x0, #24]
    a9a8:	ldr	w0, [sp, #36]
    a9ac:	add	w2, w0, #0x1
    a9b0:	str	w2, [sp, #36]
    a9b4:	sxtw	x0, w0
    a9b8:	lsl	x0, x0, #3
    a9bc:	add	x0, x1, x0
    a9c0:	str	x0, [sp, #56]
    a9c4:	ldr	x1, [sp, #48]
    a9c8:	ldr	x0, [sp, #56]
    a9cc:	sub	x0, x1, x0
    a9d0:	asr	x0, x0, #3
    a9d4:	str	w0, [sp, #40]
    a9d8:	ldr	x0, [sp, #16]
    a9dc:	ldr	x0, [x0]
    a9e0:	str	x0, [sp, #64]
    a9e4:	ldr	x0, [sp, #64]
    a9e8:	ldr	w0, [x0, #40]
    a9ec:	str	w0, [sp, #44]
    a9f0:	ldr	w0, [sp, #40]
    a9f4:	cmp	w0, #0x1
    a9f8:	b.eq	aa0c <XS_B_cstring+0x94>  // b.none
    a9fc:	adrp	x0, 18000 <boot_B+0x23d8>
    aa00:	add	x1, x0, #0xb40
    aa04:	ldr	x0, [sp, #16]
    aa08:	bl	4d70 <Perl_croak_xs_usage@plt>
    aa0c:	ldrsw	x0, [sp, #40]
    aa10:	lsl	x0, x0, #3
    aa14:	neg	x0, x0
    aa18:	ldr	x1, [sp, #48]
    aa1c:	add	x0, x1, x0
    aa20:	str	x0, [sp, #48]
    aa24:	ldr	x0, [sp, #24]
    aa28:	ldr	x1, [x0, #24]
    aa2c:	ldrsw	x0, [sp, #36]
    aa30:	lsl	x0, x0, #3
    aa34:	add	x0, x1, x0
    aa38:	ldr	x0, [x0]
    aa3c:	str	x0, [sp, #72]
    aa40:	ldr	w0, [sp, #44]
    aa44:	cmp	w0, #0x2
    aa48:	b.ne	aa5c <XS_B_cstring+0xe4>  // b.any
    aa4c:	ldr	x1, [sp, #72]
    aa50:	ldr	x0, [sp, #24]
    aa54:	bl	810c <cchar>
    aa58:	b	aa7c <XS_B_cstring+0x104>
    aa5c:	ldr	w0, [sp, #44]
    aa60:	cmp	w0, #0x0
    aa64:	cset	w0, ne  // ne = any
    aa68:	and	w0, w0, #0xff
    aa6c:	mov	w2, w0
    aa70:	ldr	x1, [sp, #72]
    aa74:	ldr	x0, [sp, #24]
    aa78:	bl	7b30 <cstring>
    aa7c:	ldr	x1, [sp, #48]
    aa80:	add	x1, x1, #0x8
    aa84:	str	x1, [sp, #48]
    aa88:	ldr	x1, [sp, #48]
    aa8c:	str	x0, [x1]
    aa90:	ldr	x0, [sp, #24]
    aa94:	ldr	x1, [sp, #48]
    aa98:	str	x1, [x0]
    aa9c:	nop
    aaa0:	ldp	x29, x30, [sp], #80
    aaa4:	ret

000000000000aaa8 <XS_B_threadsv_names>:
    aaa8:	stp	x29, x30, [sp, #-64]!
    aaac:	mov	x29, sp
    aab0:	str	x0, [sp, #24]
    aab4:	str	x1, [sp, #16]
    aab8:	ldr	x0, [sp, #24]
    aabc:	ldr	x0, [x0]
    aac0:	str	x0, [sp, #48]
    aac4:	ldr	x0, [sp, #24]
    aac8:	bl	7424 <S_POPMARK>
    aacc:	str	w0, [sp, #40]
    aad0:	ldr	x0, [sp, #24]
    aad4:	ldr	x1, [x0, #24]
    aad8:	ldr	w0, [sp, #40]
    aadc:	add	w2, w0, #0x1
    aae0:	str	w2, [sp, #40]
    aae4:	sxtw	x0, w0
    aae8:	lsl	x0, x0, #3
    aaec:	add	x0, x1, x0
    aaf0:	str	x0, [sp, #56]
    aaf4:	ldr	x1, [sp, #48]
    aaf8:	ldr	x0, [sp, #56]
    aafc:	sub	x0, x1, x0
    ab00:	asr	x0, x0, #3
    ab04:	str	w0, [sp, #44]
    ab08:	ldr	w0, [sp, #44]
    ab0c:	cmp	w0, #0x0
    ab10:	b.eq	ab24 <XS_B_threadsv_names+0x7c>  // b.none
    ab14:	adrp	x0, 18000 <boot_B+0x23d8>
    ab18:	add	x1, x0, #0xab8
    ab1c:	ldr	x0, [sp, #16]
    ab20:	bl	4d70 <Perl_croak_xs_usage@plt>
    ab24:	ldrsw	x0, [sp, #44]
    ab28:	lsl	x0, x0, #3
    ab2c:	neg	x0, x0
    ab30:	ldr	x1, [sp, #48]
    ab34:	add	x0, x1, x0
    ab38:	str	x0, [sp, #48]
    ab3c:	ldr	x0, [sp, #24]
    ab40:	ldr	x1, [sp, #48]
    ab44:	str	x1, [x0]
    ab48:	nop
    ab4c:	ldp	x29, x30, [sp], #64
    ab50:	ret

000000000000ab54 <XS_B_CLONE>:
    ab54:	stp	x29, x30, [sp, #-80]!
    ab58:	mov	x29, sp
    ab5c:	str	x0, [sp, #24]
    ab60:	str	x1, [sp, #16]
    ab64:	ldr	x0, [sp, #24]
    ab68:	ldr	x0, [x0]
    ab6c:	str	x0, [sp, #48]
    ab70:	ldr	x0, [sp, #24]
    ab74:	bl	7424 <S_POPMARK>
    ab78:	str	w0, [sp, #40]
    ab7c:	ldr	x0, [sp, #24]
    ab80:	ldr	x1, [x0, #24]
    ab84:	ldr	w0, [sp, #40]
    ab88:	add	w2, w0, #0x1
    ab8c:	str	w2, [sp, #40]
    ab90:	sxtw	x0, w0
    ab94:	lsl	x0, x0, #3
    ab98:	add	x0, x1, x0
    ab9c:	str	x0, [sp, #56]
    aba0:	ldr	x1, [sp, #48]
    aba4:	ldr	x0, [sp, #56]
    aba8:	sub	x0, x1, x0
    abac:	asr	x0, x0, #3
    abb0:	str	w0, [sp, #44]
    abb4:	ldrsw	x0, [sp, #44]
    abb8:	lsl	x0, x0, #3
    abbc:	neg	x0, x0
    abc0:	ldr	x1, [sp, #48]
    abc4:	add	x0, x1, x0
    abc8:	str	x0, [sp, #48]
    abcc:	ldr	x0, [sp, #24]
    abd0:	ldr	x1, [sp, #48]
    abd4:	str	x1, [x0]
    abd8:	mov	x1, #0x47                  	// #71
    abdc:	ldr	x0, [sp, #24]
    abe0:	bl	4c10 <Perl_newSV@plt>
    abe4:	ldr	x0, [x0, #16]
    abe8:	str	x0, [sp, #64]
    abec:	ldr	x0, [sp, #24]
    abf0:	ldr	x1, [x0, #3032]
    abf4:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    abf8:	add	x0, x0, #0x2e0
    abfc:	ldr	w0, [x0]
    ac00:	sxtw	x0, w0
    ac04:	lsl	x0, x0, #3
    ac08:	add	x0, x1, x0
    ac0c:	ldr	x0, [x0]
    ac10:	str	x0, [sp, #72]
    ac14:	ldr	x0, [sp, #24]
    ac18:	ldr	x1, [x0, #3032]
    ac1c:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
    ac20:	add	x0, x0, #0x2e0
    ac24:	ldr	w0, [x0]
    ac28:	sxtw	x0, w0
    ac2c:	lsl	x0, x0, #3
    ac30:	add	x0, x1, x0
    ac34:	ldr	x1, [sp, #64]
    ac38:	str	x1, [x0]
    ac3c:	mov	x2, #0x48                  	// #72
    ac40:	ldr	x1, [sp, #72]
    ac44:	ldr	x0, [sp, #64]
    ac48:	bl	4b10 <memcpy@plt>
    ac4c:	ldr	x1, [sp, #64]
    ac50:	ldr	x0, [sp, #24]
    ac54:	bl	752c <B_init_my_cxt>
    ac58:	nop
    ac5c:	ldp	x29, x30, [sp], #80
    ac60:	ret

000000000000ac64 <XS_B__OP_next>:
    ac64:	stp	x29, x30, [sp, #-176]!
    ac68:	mov	x29, sp
    ac6c:	stp	x19, x20, [sp, #16]
    ac70:	str	x0, [sp, #40]
    ac74:	str	x1, [sp, #32]
    ac78:	ldr	x0, [sp, #40]
    ac7c:	ldr	x0, [x0]
    ac80:	str	x0, [sp, #88]
    ac84:	ldr	x0, [sp, #40]
    ac88:	bl	7424 <S_POPMARK>
    ac8c:	str	w0, [sp, #52]
    ac90:	ldr	x0, [sp, #40]
    ac94:	ldr	x1, [x0, #24]
    ac98:	ldr	w0, [sp, #52]
    ac9c:	add	w2, w0, #0x1
    aca0:	str	w2, [sp, #52]
    aca4:	sxtw	x0, w0
    aca8:	lsl	x0, x0, #3
    acac:	add	x0, x1, x0
    acb0:	str	x0, [sp, #96]
    acb4:	ldr	x1, [sp, #88]
    acb8:	ldr	x0, [sp, #96]
    acbc:	sub	x0, x1, x0
    acc0:	asr	x0, x0, #3
    acc4:	str	w0, [sp, #56]
    acc8:	ldr	x0, [sp, #32]
    accc:	ldr	x0, [x0]
    acd0:	str	x0, [sp, #104]
    acd4:	ldr	x0, [sp, #104]
    acd8:	ldr	w0, [x0, #40]
    acdc:	str	w0, [sp, #60]
    ace0:	ldr	w0, [sp, #56]
    ace4:	cmp	w0, #0x1
    ace8:	b.eq	acfc <XS_B__OP_next+0x98>  // b.none
    acec:	adrp	x0, 18000 <boot_B+0x23d8>
    acf0:	add	x1, x0, #0xdb0
    acf4:	ldr	x0, [sp, #32]
    acf8:	bl	4d70 <Perl_croak_xs_usage@plt>
    acfc:	ldrsw	x0, [sp, #56]
    ad00:	lsl	x0, x0, #3
    ad04:	neg	x0, x0
    ad08:	ldr	x1, [sp, #88]
    ad0c:	add	x0, x1, x0
    ad10:	str	x0, [sp, #88]
    ad14:	ldr	x0, [sp, #40]
    ad18:	ldr	x1, [x0, #24]
    ad1c:	ldrsw	x0, [sp, #52]
    ad20:	lsl	x0, x0, #3
    ad24:	add	x0, x1, x0
    ad28:	ldr	x0, [x0]
    ad2c:	ldr	w0, [x0, #12]
    ad30:	and	w0, w0, #0x800
    ad34:	cmp	w0, #0x0
    ad38:	b.eq	ade0 <XS_B__OP_next+0x17c>  // b.none
    ad3c:	ldr	x0, [sp, #40]
    ad40:	ldr	x1, [x0, #24]
    ad44:	ldrsw	x0, [sp, #52]
    ad48:	lsl	x0, x0, #3
    ad4c:	add	x0, x1, x0
    ad50:	ldr	x0, [x0]
    ad54:	ldr	x0, [x0, #16]
    ad58:	ldr	w1, [x0, #12]
    ad5c:	mov	w0, #0x100                 	// #256
    ad60:	movk	w0, #0x20, lsl #16
    ad64:	and	w0, w1, w0
    ad68:	cmp	w0, #0x100
    ad6c:	b.ne	ad98 <XS_B__OP_next+0x134>  // b.any
    ad70:	ldr	x0, [sp, #40]
    ad74:	ldr	x1, [x0, #24]
    ad78:	ldrsw	x0, [sp, #52]
    ad7c:	lsl	x0, x0, #3
    ad80:	add	x0, x1, x0
    ad84:	ldr	x0, [x0]
    ad88:	ldr	x0, [x0, #16]
    ad8c:	ldr	x0, [x0]
    ad90:	ldr	x0, [x0, #32]
    ad94:	b	adc4 <XS_B__OP_next+0x160>
    ad98:	ldr	x0, [sp, #40]
    ad9c:	ldr	x1, [x0, #24]
    ada0:	ldrsw	x0, [sp, #52]
    ada4:	lsl	x0, x0, #3
    ada8:	add	x0, x1, x0
    adac:	ldr	x0, [x0]
    adb0:	ldr	x0, [x0, #16]
    adb4:	mov	w2, #0x2                   	// #2
    adb8:	mov	x1, x0
    adbc:	ldr	x0, [sp, #40]
    adc0:	bl	4b20 <Perl_sv_2iv_flags@plt>
    adc4:	str	x0, [sp, #112]
    adc8:	ldr	x0, [sp, #112]
    adcc:	str	x0, [sp, #120]
    add0:	ldr	w0, [sp, #60]
    add4:	cmp	w0, #0x0
    add8:	b.lt	adf8 <XS_B__OP_next+0x194>  // b.tstop
    addc:	b	adec <XS_B__OP_next+0x188>
    ade0:	adrp	x0, 18000 <boot_B+0x23d8>
    ade4:	add	x0, x0, #0xdb8
    ade8:	bl	4e60 <Perl_croak_nocontext@plt>
    adec:	ldr	w0, [sp, #60]
    adf0:	cmp	w0, #0x38
    adf4:	b.ls	ae08 <XS_B__OP_next+0x1a4>  // b.plast
    adf8:	ldr	w1, [sp, #60]
    adfc:	adrp	x0, 18000 <boot_B+0x23d8>
    ae00:	add	x0, x0, #0xdd0
    ae04:	bl	4e60 <Perl_croak_nocontext@plt>
    ae08:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    ae0c:	add	x1, x0, #0x790
    ae10:	ldrsw	x0, [sp, #60]
    ae14:	lsl	x0, x0, #4
    ae18:	add	x0, x1, x0
    ae1c:	ldr	x2, [x0]
    ae20:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    ae24:	add	x1, x0, #0x790
    ae28:	ldrsw	x0, [sp, #60]
    ae2c:	lsl	x0, x0, #4
    ae30:	add	x0, x1, x0
    ae34:	ldrb	w0, [x0, #8]
    ae38:	mov	w3, w0
    ae3c:	ldr	x1, [sp, #120]
    ae40:	ldr	x0, [sp, #40]
    ae44:	bl	7620 <get_overlay_object>
    ae48:	str	x0, [sp, #64]
    ae4c:	ldr	x0, [sp, #64]
    ae50:	cmp	x0, #0x0
    ae54:	b.eq	aea8 <XS_B__OP_next+0x244>  // b.none
    ae58:	ldr	x0, [sp, #40]
    ae5c:	ldr	x1, [x0, #24]
    ae60:	ldrsw	x0, [sp, #52]
    ae64:	lsl	x0, x0, #3
    ae68:	add	x0, x1, x0
    ae6c:	ldr	x1, [sp, #64]
    ae70:	str	x1, [x0]
    ae74:	mov	x0, #0x1                   	// #1
    ae78:	str	x0, [sp, #168]
    ae7c:	ldr	x0, [sp, #40]
    ae80:	ldr	x1, [x0, #24]
    ae84:	ldrsw	x2, [sp, #52]
    ae88:	ldr	x0, [sp, #168]
    ae8c:	add	x0, x2, x0
    ae90:	lsl	x0, x0, #3
    ae94:	sub	x0, x0, #0x8
    ae98:	add	x1, x1, x0
    ae9c:	ldr	x0, [sp, #40]
    aea0:	str	x1, [x0]
    aea4:	b	c178 <XS_B__OP_next+0x1514>
    aea8:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    aeac:	add	x1, x0, #0x790
    aeb0:	ldrsw	x0, [sp, #60]
    aeb4:	lsl	x0, x0, #4
    aeb8:	add	x0, x1, x0
    aebc:	ldrb	w0, [x0, #9]
    aec0:	cmp	w0, #0x8
    aec4:	b.ne	bef0 <XS_B__OP_next+0x128c>  // b.any
    aec8:	ldr	w0, [sp, #60]
    aecc:	sub	w0, w0, #0x1
    aed0:	cmp	w0, #0x37
    aed4:	b.hi	bec8 <XS_B__OP_next+0x1264>  // b.pmore
    aed8:	adrp	x1, 18000 <boot_B+0x23d8>
    aedc:	add	x1, x1, #0xe5c
    aee0:	ldr	w0, [x1, w0, uxtw #2]
    aee4:	adr	x1, aef0 <XS_B__OP_next+0x28c>
    aee8:	add	x0, x1, w0, sxtw #2
    aeec:	br	x0
    aef0:	ldr	x0, [sp, #120]
    aef4:	ldrb	w0, [x0, #33]
    aef8:	and	w0, w0, #0x40
    aefc:	and	w0, w0, #0xff
    af00:	cmp	w0, #0x0
    af04:	b.eq	af14 <XS_B__OP_next+0x2b0>  // b.none
    af08:	ldr	x0, [sp, #120]
    af0c:	ldr	x0, [x0, #8]
    af10:	b	af18 <XS_B__OP_next+0x2b4>
    af14:	mov	x0, #0x0                   	// #0
    af18:	mov	x1, x0
    af1c:	ldr	x0, [sp, #40]
    af20:	bl	75b4 <make_op_object>
    af24:	str	x0, [sp, #64]
    af28:	b	c128 <XS_B__OP_next+0x14c4>
    af2c:	ldr	x0, [sp, #120]
    af30:	ldrh	w0, [x0, #32]
    af34:	and	w0, w0, #0x1ff
    af38:	and	w0, w0, #0xffff
    af3c:	cmp	w0, #0x20
    af40:	b.ne	af50 <XS_B__OP_next+0x2ec>  // b.any
    af44:	ldr	x0, [sp, #120]
    af48:	ldr	x0, [x0, #80]
    af4c:	b	af54 <XS_B__OP_next+0x2f0>
    af50:	mov	x0, #0x0                   	// #0
    af54:	mov	x1, x0
    af58:	ldr	x0, [sp, #40]
    af5c:	bl	75b4 <make_op_object>
    af60:	str	x0, [sp, #64]
    af64:	b	c128 <XS_B__OP_next+0x14c4>
    af68:	ldr	x0, [sp, #120]
    af6c:	ldr	x0, [x0, #48]
    af70:	cmp	x0, #0x0
    af74:	b.eq	af90 <XS_B__OP_next+0x32c>  // b.none
    af78:	ldr	x0, [sp, #120]
    af7c:	ldr	x0, [x0, #48]
    af80:	mov	x1, x0
    af84:	ldr	x0, [sp, #40]
    af88:	bl	4f50 <Perl_gv_fetchfile@plt>
    af8c:	b	af94 <XS_B__OP_next+0x330>
    af90:	mov	x0, #0x0                   	// #0
    af94:	mov	x1, x0
    af98:	ldr	x0, [sp, #40]
    af9c:	bl	77c4 <make_sv_object>
    afa0:	str	x0, [sp, #64]
    afa4:	b	c128 <XS_B__OP_next+0x14c4>
    afa8:	ldr	x0, [sp, #40]
    afac:	ldr	x1, [x0, #2752]
    afb0:	ldr	x0, [sp, #120]
    afb4:	ldr	x0, [x0, #40]
    afb8:	lsl	x0, x0, #3
    afbc:	add	x0, x1, x0
    afc0:	ldr	x0, [x0]
    afc4:	mov	x1, x0
    afc8:	ldr	x0, [sp, #40]
    afcc:	bl	77c4 <make_sv_object>
    afd0:	str	x0, [sp, #64]
    afd4:	b	c128 <XS_B__OP_next+0x14c4>
    afd8:	ldr	x0, [sp, #40]
    afdc:	ldr	x1, [x0, #2752]
    afe0:	ldr	x0, [sp, #120]
    afe4:	ldr	x0, [x0, #40]
    afe8:	lsl	x0, x0, #3
    afec:	add	x0, x1, x0
    aff0:	ldr	x0, [x0]
    aff4:	cmp	x0, #0x0
    aff8:	b.eq	b1d4 <XS_B__OP_next+0x570>  // b.none
    affc:	ldr	x0, [sp, #40]
    b000:	ldr	x1, [x0, #2752]
    b004:	ldr	x0, [sp, #120]
    b008:	ldr	x0, [x0, #40]
    b00c:	lsl	x0, x0, #3
    b010:	add	x0, x1, x0
    b014:	ldr	x0, [x0]
    b018:	ldr	w0, [x0, #12]
    b01c:	and	w0, w0, #0xff
    b020:	cmp	w0, #0xc
    b024:	b.ne	b1d4 <XS_B__OP_next+0x570>  // b.any
    b028:	ldr	x0, [sp, #40]
    b02c:	ldr	x1, [x0, #2752]
    b030:	ldr	x0, [sp, #120]
    b034:	ldr	x0, [x0, #40]
    b038:	lsl	x0, x0, #3
    b03c:	add	x0, x1, x0
    b040:	ldr	x0, [x0]
    b044:	ldr	w0, [x0, #12]
    b048:	and	w0, w0, #0x2000000
    b04c:	cmp	w0, #0x0
    b050:	b.eq	b1c0 <XS_B__OP_next+0x55c>  // b.none
    b054:	ldr	x0, [sp, #40]
    b058:	ldr	x1, [x0, #2752]
    b05c:	ldr	x0, [sp, #120]
    b060:	ldr	x0, [x0, #40]
    b064:	lsl	x0, x0, #3
    b068:	add	x0, x1, x0
    b06c:	ldr	x0, [x0]
    b070:	ldr	x1, [x0, #16]
    b074:	ldr	x0, [sp, #40]
    b078:	ldr	x2, [x0, #2752]
    b07c:	ldr	x0, [sp, #120]
    b080:	ldr	x0, [x0, #40]
    b084:	lsl	x0, x0, #3
    b088:	add	x0, x2, x0
    b08c:	ldr	x0, [x0]
    b090:	ldr	x0, [x0]
    b094:	ldr	x0, [x0, #24]
    b098:	add	x0, x0, #0x1
    b09c:	lsl	x0, x0, #3
    b0a0:	add	x0, x1, x0
    b0a4:	ldr	x0, [x0]
    b0a8:	cmp	x0, #0x0
    b0ac:	b.eq	b1c0 <XS_B__OP_next+0x55c>  // b.none
    b0b0:	ldr	x0, [sp, #40]
    b0b4:	ldr	x1, [x0, #2752]
    b0b8:	ldr	x0, [sp, #120]
    b0bc:	ldr	x0, [x0, #40]
    b0c0:	lsl	x0, x0, #3
    b0c4:	add	x0, x1, x0
    b0c8:	ldr	x0, [x0]
    b0cc:	ldr	x1, [x0, #16]
    b0d0:	ldr	x0, [sp, #40]
    b0d4:	ldr	x2, [x0, #2752]
    b0d8:	ldr	x0, [sp, #120]
    b0dc:	ldr	x0, [x0, #40]
    b0e0:	lsl	x0, x0, #3
    b0e4:	add	x0, x2, x0
    b0e8:	ldr	x0, [x0]
    b0ec:	ldr	x0, [x0]
    b0f0:	ldr	x0, [x0, #24]
    b0f4:	add	x0, x0, #0x1
    b0f8:	lsl	x0, x0, #3
    b0fc:	add	x0, x1, x0
    b100:	ldr	w0, [x0, #28]
    b104:	cmp	w0, #0x0
    b108:	b.eq	b168 <XS_B__OP_next+0x504>  // b.none
    b10c:	ldr	x0, [sp, #40]
    b110:	ldr	x1, [x0, #2752]
    b114:	ldr	x0, [sp, #120]
    b118:	ldr	x0, [x0, #40]
    b11c:	lsl	x0, x0, #3
    b120:	add	x0, x1, x0
    b124:	ldr	x0, [x0]
    b128:	ldr	x1, [x0, #16]
    b12c:	ldr	x0, [sp, #40]
    b130:	ldr	x2, [x0, #2752]
    b134:	ldr	x0, [sp, #120]
    b138:	ldr	x0, [x0, #40]
    b13c:	lsl	x0, x0, #3
    b140:	add	x0, x2, x0
    b144:	ldr	x0, [x0]
    b148:	ldr	x0, [x0]
    b14c:	ldr	x0, [x0, #24]
    b150:	add	x0, x0, #0x1
    b154:	lsl	x0, x0, #3
    b158:	add	x0, x1, x0
    b15c:	ldr	x0, [x0]
    b160:	ldr	x0, [x0]
    b164:	b	b1c4 <XS_B__OP_next+0x560>
    b168:	ldr	x0, [sp, #40]
    b16c:	ldr	x1, [x0, #2752]
    b170:	ldr	x0, [sp, #120]
    b174:	ldr	x0, [x0, #40]
    b178:	lsl	x0, x0, #3
    b17c:	add	x0, x1, x0
    b180:	ldr	x0, [x0]
    b184:	ldr	x1, [x0, #16]
    b188:	ldr	x0, [sp, #40]
    b18c:	ldr	x2, [x0, #2752]
    b190:	ldr	x0, [sp, #120]
    b194:	ldr	x0, [x0, #40]
    b198:	lsl	x0, x0, #3
    b19c:	add	x0, x2, x0
    b1a0:	ldr	x0, [x0]
    b1a4:	ldr	x0, [x0]
    b1a8:	ldr	x0, [x0, #24]
    b1ac:	add	x0, x0, #0x1
    b1b0:	lsl	x0, x0, #3
    b1b4:	add	x0, x1, x0
    b1b8:	ldr	x0, [x0]
    b1bc:	b	b1c4 <XS_B__OP_next+0x560>
    b1c0:	mov	x0, #0x0                   	// #0
    b1c4:	mov	x1, x0
    b1c8:	ldr	x0, [sp, #40]
    b1cc:	bl	4bc0 <Perl_newSVhek@plt>
    b1d0:	b	b1dc <XS_B__OP_next+0x578>
    b1d4:	ldr	x0, [sp, #40]
    b1d8:	add	x0, x0, #0x150
    b1dc:	mov	x1, x0
    b1e0:	ldr	x0, [sp, #40]
    b1e4:	bl	4ec0 <Perl_sv_2mortal@plt>
    b1e8:	str	x0, [sp, #64]
    b1ec:	b	c128 <XS_B__OP_next+0x14c4>
    b1f0:	ldr	x1, [sp, #120]
    b1f4:	ldr	x0, [sp, #40]
    b1f8:	bl	5050 <Perl_op_class@plt>
    b1fc:	mov	w1, w0
    b200:	adrp	x0, 18000 <boot_B+0x23d8>
    b204:	add	x0, x0, #0x978
    b208:	mov	w1, w1
    b20c:	ldr	x0, [x0, x1, lsl #3]
    b210:	mov	x1, x0
    b214:	ldr	x0, [sp, #40]
    b218:	bl	4f00 <Perl_newSVuv@plt>
    b21c:	mov	x1, x0
    b220:	ldr	x0, [sp, #40]
    b224:	bl	4ec0 <Perl_sv_2mortal@plt>
    b228:	str	x0, [sp, #64]
    b22c:	b	c128 <XS_B__OP_next+0x14c4>
    b230:	ldr	w0, [sp, #60]
    b234:	cmp	w0, #0x1c
    b238:	b.ne	b290 <XS_B__OP_next+0x62c>  // b.any
    b23c:	ldr	x0, [sp, #120]
    b240:	ldrh	w0, [x0, #32]
    b244:	and	w0, w0, #0x1ff
    b248:	and	w0, w0, #0xffff
    b24c:	cmp	w0, #0x17f
    b250:	b.ne	b268 <XS_B__OP_next+0x604>  // b.any
    b254:	mov	w2, #0x2                   	// #2
    b258:	ldr	x1, [sp, #120]
    b25c:	ldr	x0, [sp, #40]
    b260:	bl	4c20 <Perl_custom_op_get_field@plt>
    b264:	b	b2e0 <XS_B__OP_next+0x67c>
    b268:	ldr	x0, [sp, #120]
    b26c:	ldrh	w0, [x0, #32]
    b270:	ubfx	x0, x0, #0, #9
    b274:	and	w0, w0, #0xffff
    b278:	mov	w1, w0
    b27c:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    b280:	ldr	x0, [x0, #4048]
    b284:	sxtw	x1, w1
    b288:	ldr	x0, [x0, x1, lsl #3]
    b28c:	b	b2e0 <XS_B__OP_next+0x67c>
    b290:	ldr	x0, [sp, #120]
    b294:	ldrh	w0, [x0, #32]
    b298:	and	w0, w0, #0x1ff
    b29c:	and	w0, w0, #0xffff
    b2a0:	cmp	w0, #0x17f
    b2a4:	b.ne	b2bc <XS_B__OP_next+0x658>  // b.any
    b2a8:	mov	w2, #0x1                   	// #1
    b2ac:	ldr	x1, [sp, #120]
    b2b0:	ldr	x0, [sp, #40]
    b2b4:	bl	4c20 <Perl_custom_op_get_field@plt>
    b2b8:	b	b2e0 <XS_B__OP_next+0x67c>
    b2bc:	ldr	x0, [sp, #120]
    b2c0:	ldrh	w0, [x0, #32]
    b2c4:	ubfx	x0, x0, #0, #9
    b2c8:	and	w0, w0, #0xffff
    b2cc:	mov	w1, w0
    b2d0:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    b2d4:	ldr	x0, [x0, #4024]
    b2d8:	sxtw	x1, w1
    b2dc:	ldr	x0, [x0, x1, lsl #3]
    b2e0:	mov	x2, #0x0                   	// #0
    b2e4:	mov	x1, x0
    b2e8:	ldr	x0, [sp, #40]
    b2ec:	bl	4e10 <Perl_newSVpv@plt>
    b2f0:	mov	x1, x0
    b2f4:	ldr	x0, [sp, #40]
    b2f8:	bl	4ec0 <Perl_sv_2mortal@plt>
    b2fc:	str	x0, [sp, #64]
    b300:	b	c128 <XS_B__OP_next+0x14c4>
    b304:	ldr	x0, [sp, #120]
    b308:	ldrh	w0, [x0, #32]
    b30c:	ubfx	x0, x0, #0, #9
    b310:	and	w0, w0, #0xffff
    b314:	mov	w1, w0
    b318:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    b31c:	ldr	x0, [x0, #4024]
    b320:	sxtw	x1, w1
    b324:	ldr	x0, [x0, x1, lsl #3]
    b328:	mov	x2, x0
    b32c:	adrp	x0, 18000 <boot_B+0x23d8>
    b330:	add	x1, x0, #0xdf8
    b334:	ldr	x0, [sp, #40]
    b338:	bl	5060 <Perl_newSVpvf@plt>
    b33c:	mov	x1, x0
    b340:	ldr	x0, [sp, #40]
    b344:	bl	4ec0 <Perl_sv_2mortal@plt>
    b348:	str	x0, [sp, #64]
    b34c:	mov	w0, #0xd                   	// #13
    b350:	str	w0, [sp, #48]
    b354:	b	b3d4 <XS_B__OP_next+0x770>
    b358:	ldr	x0, [sp, #64]
    b35c:	ldr	x1, [x0, #16]
    b360:	ldrsw	x0, [sp, #48]
    b364:	add	x0, x1, x0
    b368:	ldrb	w0, [x0]
    b36c:	sub	w0, w0, #0x61
    b370:	cmp	w0, #0x19
    b374:	b.hi	b3a0 <XS_B__OP_next+0x73c>  // b.pmore
    b378:	ldr	x0, [sp, #64]
    b37c:	ldr	x1, [x0, #16]
    b380:	ldrsw	x0, [sp, #48]
    b384:	add	x0, x1, x0
    b388:	ldrb	w0, [x0]
    b38c:	sxtb	w0, w0
    b390:	sub	w0, w0, #0x20
    b394:	sxtb	w0, w0
    b398:	and	w0, w0, #0xff
    b39c:	b	b3b4 <XS_B__OP_next+0x750>
    b3a0:	ldr	x0, [sp, #64]
    b3a4:	ldr	x1, [x0, #16]
    b3a8:	ldrsw	x0, [sp, #48]
    b3ac:	add	x0, x1, x0
    b3b0:	ldrb	w0, [x0]
    b3b4:	ldr	x1, [sp, #64]
    b3b8:	ldr	x2, [x1, #16]
    b3bc:	ldrsw	x1, [sp, #48]
    b3c0:	add	x1, x2, x1
    b3c4:	strb	w0, [x1]
    b3c8:	ldr	w0, [sp, #48]
    b3cc:	add	w0, w0, #0x1
    b3d0:	str	w0, [sp, #48]
    b3d4:	ldrsw	x1, [sp, #48]
    b3d8:	ldr	x0, [sp, #64]
    b3dc:	ldr	x0, [x0]
    b3e0:	ldr	x0, [x0, #16]
    b3e4:	cmp	x1, x0
    b3e8:	b.cc	b358 <XS_B__OP_next+0x6f4>  // b.lo, b.ul, b.last
    b3ec:	b	c128 <XS_B__OP_next+0x14c4>
    b3f0:	ldr	w0, [sp, #60]
    b3f4:	cmp	w0, #0x1e
    b3f8:	b.ne	b414 <XS_B__OP_next+0x7b0>  // b.any
    b3fc:	ldr	x0, [sp, #120]
    b400:	ldrh	w0, [x0, #32]
    b404:	ubfx	x0, x0, #0, #9
    b408:	and	w0, w0, #0xffff
    b40c:	and	x0, x0, #0xffff
    b410:	b	b500 <XS_B__OP_next+0x89c>
    b414:	ldr	w0, [sp, #60]
    b418:	cmp	w0, #0x1f
    b41c:	b.ne	b438 <XS_B__OP_next+0x7d4>  // b.any
    b420:	ldr	x0, [sp, #120]
    b424:	ldrb	w0, [x0, #33]
    b428:	ubfx	x0, x0, #1, #1
    b42c:	and	w0, w0, #0xff
    b430:	and	x0, x0, #0xff
    b434:	b	b500 <XS_B__OP_next+0x89c>
    b438:	ldr	w0, [sp, #60]
    b43c:	cmp	w0, #0x2f
    b440:	b.ne	b45c <XS_B__OP_next+0x7f8>  // b.any
    b444:	ldr	x0, [sp, #120]
    b448:	ldrb	w0, [x0, #33]
    b44c:	ubfx	x0, x0, #2, #1
    b450:	and	w0, w0, #0xff
    b454:	and	x0, x0, #0xff
    b458:	b	b500 <XS_B__OP_next+0x89c>
    b45c:	ldr	w0, [sp, #60]
    b460:	cmp	w0, #0x30
    b464:	b.ne	b480 <XS_B__OP_next+0x81c>  // b.any
    b468:	ldr	x0, [sp, #120]
    b46c:	ldrb	w0, [x0, #33]
    b470:	ubfx	x0, x0, #3, #1
    b474:	and	w0, w0, #0xff
    b478:	and	x0, x0, #0xff
    b47c:	b	b500 <XS_B__OP_next+0x89c>
    b480:	ldr	w0, [sp, #60]
    b484:	cmp	w0, #0x31
    b488:	b.ne	b4a4 <XS_B__OP_next+0x840>  // b.any
    b48c:	ldr	x0, [sp, #120]
    b490:	ldrb	w0, [x0, #33]
    b494:	ubfx	x0, x0, #4, #1
    b498:	and	w0, w0, #0xff
    b49c:	and	x0, x0, #0xff
    b4a0:	b	b500 <XS_B__OP_next+0x89c>
    b4a4:	ldr	w0, [sp, #60]
    b4a8:	cmp	w0, #0x32
    b4ac:	b.ne	b4c8 <XS_B__OP_next+0x864>  // b.any
    b4b0:	ldr	x0, [sp, #120]
    b4b4:	ldrb	w0, [x0, #33]
    b4b8:	ubfx	x0, x0, #5, #1
    b4bc:	and	w0, w0, #0xff
    b4c0:	and	x0, x0, #0xff
    b4c4:	b	b500 <XS_B__OP_next+0x89c>
    b4c8:	ldr	w0, [sp, #60]
    b4cc:	cmp	w0, #0x33
    b4d0:	b.ne	b4ec <XS_B__OP_next+0x888>  // b.any
    b4d4:	ldr	x0, [sp, #120]
    b4d8:	ldrb	w0, [x0, #33]
    b4dc:	ubfx	x0, x0, #6, #1
    b4e0:	and	w0, w0, #0xff
    b4e4:	and	x0, x0, #0xff
    b4e8:	b	b500 <XS_B__OP_next+0x89c>
    b4ec:	ldr	x0, [sp, #120]
    b4f0:	ldrb	w0, [x0, #33]
    b4f4:	ubfx	x0, x0, #7, #1
    b4f8:	and	w0, w0, #0xff
    b4fc:	and	x0, x0, #0xff
    b500:	mov	x1, x0
    b504:	ldr	x0, [sp, #40]
    b508:	bl	4f00 <Perl_newSVuv@plt>
    b50c:	mov	x1, x0
    b510:	ldr	x0, [sp, #40]
    b514:	bl	4ec0 <Perl_sv_2mortal@plt>
    b518:	str	x0, [sp, #64]
    b51c:	b	c128 <XS_B__OP_next+0x14c4>
    b520:	str	xzr, [sp, #80]
    b524:	ldr	x0, [sp, #120]
    b528:	ldr	x0, [x0, #40]
    b52c:	str	x0, [sp, #72]
    b530:	b	b56c <XS_B__OP_next+0x908>
    b534:	ldr	x0, [sp, #80]
    b538:	add	x0, x0, #0x1
    b53c:	str	x0, [sp, #80]
    b540:	ldr	x0, [sp, #72]
    b544:	ldrb	w0, [x0, #33]
    b548:	and	w0, w0, #0x40
    b54c:	and	w0, w0, #0xff
    b550:	cmp	w0, #0x0
    b554:	b.eq	b564 <XS_B__OP_next+0x900>  // b.none
    b558:	ldr	x0, [sp, #72]
    b55c:	ldr	x0, [x0, #8]
    b560:	b	b568 <XS_B__OP_next+0x904>
    b564:	mov	x0, #0x0                   	// #0
    b568:	str	x0, [sp, #72]
    b56c:	ldr	x0, [sp, #72]
    b570:	cmp	x0, #0x0
    b574:	b.ne	b534 <XS_B__OP_next+0x8d0>  // b.any
    b578:	ldr	x1, [sp, #80]
    b57c:	ldr	x0, [sp, #40]
    b580:	bl	4f00 <Perl_newSVuv@plt>
    b584:	mov	x1, x0
    b588:	ldr	x0, [sp, #40]
    b58c:	bl	4ec0 <Perl_sv_2mortal@plt>
    b590:	str	x0, [sp, #64]
    b594:	b	c128 <XS_B__OP_next+0x14c4>
    b598:	ldr	x0, [sp, #120]
    b59c:	ldrh	w0, [x0, #32]
    b5a0:	and	w0, w0, #0x1ff
    b5a4:	and	w0, w0, #0xffff
    b5a8:	cmp	w0, #0x9c
    b5ac:	b.ne	b5d8 <XS_B__OP_next+0x974>  // b.any
    b5b0:	ldr	x0, [sp, #40]
    b5b4:	bl	5080 <Perl_sv_newmortal@plt>
    b5b8:	str	x0, [sp, #64]
    b5bc:	ldr	x0, [sp, #120]
    b5c0:	ldr	x0, [x0, #72]
    b5c4:	mov	x2, x0
    b5c8:	ldr	x1, [sp, #64]
    b5cc:	ldr	x0, [sp, #40]
    b5d0:	bl	5040 <Perl_sv_setiv@plt>
    b5d4:	b	c128 <XS_B__OP_next+0x14c4>
    b5d8:	ldr	x0, [sp, #120]
    b5dc:	ldr	x0, [x0, #72]
    b5e0:	str	x0, [sp, #152]
    b5e4:	ldr	x1, [sp, #152]
    b5e8:	ldr	x0, [sp, #40]
    b5ec:	bl	75b4 <make_op_object>
    b5f0:	str	x0, [sp, #64]
    b5f4:	b	c128 <XS_B__OP_next+0x14c4>
    b5f8:	ldr	x0, [sp, #120]
    b5fc:	ldr	w0, [x0, #64]
    b600:	and	w0, w0, #0x100000
    b604:	cmp	w0, #0x0
    b608:	b.eq	ba94 <XS_B__OP_next+0xe30>  // b.none
    b60c:	ldr	x0, [sp, #40]
    b610:	ldr	x1, [x0, #2752]
    b614:	ldr	x0, [sp, #120]
    b618:	ldr	x0, [x0, #80]
    b61c:	lsl	x0, x0, #3
    b620:	add	x0, x1, x0
    b624:	ldr	x0, [x0]
    b628:	cmp	x0, #0x0
    b62c:	b.eq	ba94 <XS_B__OP_next+0xe30>  // b.none
    b630:	ldr	x0, [sp, #120]
    b634:	ldr	w0, [x0, #64]
    b638:	and	w0, w0, #0x100000
    b63c:	cmp	w0, #0x0
    b640:	b.eq	b664 <XS_B__OP_next+0xa00>  // b.none
    b644:	ldr	x0, [sp, #40]
    b648:	ldr	x1, [x0, #2752]
    b64c:	ldr	x0, [sp, #120]
    b650:	ldr	x0, [x0, #80]
    b654:	lsl	x0, x0, #3
    b658:	add	x0, x1, x0
    b65c:	ldr	x0, [x0]
    b660:	b	b668 <XS_B__OP_next+0xa04>
    b664:	mov	x0, #0x0                   	// #0
    b668:	ldr	w0, [x0, #12]
    b66c:	and	w0, w0, #0x2000000
    b670:	cmp	w0, #0x0
    b674:	b.eq	ba8c <XS_B__OP_next+0xe28>  // b.none
    b678:	ldr	x0, [sp, #120]
    b67c:	ldr	w0, [x0, #64]
    b680:	and	w0, w0, #0x100000
    b684:	cmp	w0, #0x0
    b688:	b.eq	b6ac <XS_B__OP_next+0xa48>  // b.none
    b68c:	ldr	x0, [sp, #40]
    b690:	ldr	x1, [x0, #2752]
    b694:	ldr	x0, [sp, #120]
    b698:	ldr	x0, [x0, #80]
    b69c:	lsl	x0, x0, #3
    b6a0:	add	x0, x1, x0
    b6a4:	ldr	x0, [x0]
    b6a8:	b	b6b0 <XS_B__OP_next+0xa4c>
    b6ac:	mov	x0, #0x0                   	// #0
    b6b0:	ldr	x1, [x0, #16]
    b6b4:	ldr	x0, [sp, #120]
    b6b8:	ldr	w0, [x0, #64]
    b6bc:	and	w0, w0, #0x100000
    b6c0:	cmp	w0, #0x0
    b6c4:	b.eq	b6e8 <XS_B__OP_next+0xa84>  // b.none
    b6c8:	ldr	x0, [sp, #40]
    b6cc:	ldr	x2, [x0, #2752]
    b6d0:	ldr	x0, [sp, #120]
    b6d4:	ldr	x0, [x0, #80]
    b6d8:	lsl	x0, x0, #3
    b6dc:	add	x0, x2, x0
    b6e0:	ldr	x0, [x0]
    b6e4:	b	b6ec <XS_B__OP_next+0xa88>
    b6e8:	mov	x0, #0x0                   	// #0
    b6ec:	ldr	x0, [x0]
    b6f0:	ldr	x0, [x0, #24]
    b6f4:	add	x0, x0, #0x1
    b6f8:	lsl	x0, x0, #3
    b6fc:	add	x0, x1, x0
    b700:	ldr	x0, [x0]
    b704:	cmp	x0, #0x0
    b708:	b.eq	ba8c <XS_B__OP_next+0xe28>  // b.none
    b70c:	ldr	x0, [sp, #120]
    b710:	ldr	w0, [x0, #64]
    b714:	and	w0, w0, #0x100000
    b718:	cmp	w0, #0x0
    b71c:	b.eq	b740 <XS_B__OP_next+0xadc>  // b.none
    b720:	ldr	x0, [sp, #40]
    b724:	ldr	x1, [x0, #2752]
    b728:	ldr	x0, [sp, #120]
    b72c:	ldr	x0, [x0, #80]
    b730:	lsl	x0, x0, #3
    b734:	add	x0, x1, x0
    b738:	ldr	x0, [x0]
    b73c:	b	b744 <XS_B__OP_next+0xae0>
    b740:	mov	x0, #0x0                   	// #0
    b744:	ldr	x1, [x0, #16]
    b748:	ldr	x0, [sp, #120]
    b74c:	ldr	w0, [x0, #64]
    b750:	and	w0, w0, #0x100000
    b754:	cmp	w0, #0x0
    b758:	b.eq	b77c <XS_B__OP_next+0xb18>  // b.none
    b75c:	ldr	x0, [sp, #40]
    b760:	ldr	x2, [x0, #2752]
    b764:	ldr	x0, [sp, #120]
    b768:	ldr	x0, [x0, #80]
    b76c:	lsl	x0, x0, #3
    b770:	add	x0, x2, x0
    b774:	ldr	x0, [x0]
    b778:	b	b780 <XS_B__OP_next+0xb1c>
    b77c:	mov	x0, #0x0                   	// #0
    b780:	ldr	x0, [x0]
    b784:	ldr	x0, [x0, #24]
    b788:	add	x0, x0, #0x1
    b78c:	lsl	x0, x0, #3
    b790:	add	x0, x1, x0
    b794:	ldr	w0, [x0, #28]
    b798:	cmp	w0, #0x0
    b79c:	b.eq	b83c <XS_B__OP_next+0xbd8>  // b.none
    b7a0:	ldr	x0, [sp, #120]
    b7a4:	ldr	w0, [x0, #64]
    b7a8:	and	w0, w0, #0x100000
    b7ac:	cmp	w0, #0x0
    b7b0:	b.eq	b7d4 <XS_B__OP_next+0xb70>  // b.none
    b7b4:	ldr	x0, [sp, #40]
    b7b8:	ldr	x1, [x0, #2752]
    b7bc:	ldr	x0, [sp, #120]
    b7c0:	ldr	x0, [x0, #80]
    b7c4:	lsl	x0, x0, #3
    b7c8:	add	x0, x1, x0
    b7cc:	ldr	x0, [x0]
    b7d0:	b	b7d8 <XS_B__OP_next+0xb74>
    b7d4:	mov	x0, #0x0                   	// #0
    b7d8:	ldr	x1, [x0, #16]
    b7dc:	ldr	x0, [sp, #120]
    b7e0:	ldr	w0, [x0, #64]
    b7e4:	and	w0, w0, #0x100000
    b7e8:	cmp	w0, #0x0
    b7ec:	b.eq	b810 <XS_B__OP_next+0xbac>  // b.none
    b7f0:	ldr	x0, [sp, #40]
    b7f4:	ldr	x2, [x0, #2752]
    b7f8:	ldr	x0, [sp, #120]
    b7fc:	ldr	x0, [x0, #80]
    b800:	lsl	x0, x0, #3
    b804:	add	x0, x2, x0
    b808:	ldr	x0, [x0]
    b80c:	b	b814 <XS_B__OP_next+0xbb0>
    b810:	mov	x0, #0x0                   	// #0
    b814:	ldr	x0, [x0]
    b818:	ldr	x0, [x0, #24]
    b81c:	add	x0, x0, #0x1
    b820:	lsl	x0, x0, #3
    b824:	add	x0, x1, x0
    b828:	ldr	x0, [x0]
    b82c:	ldr	x0, [x0]
    b830:	cmp	x0, #0x0
    b834:	b.ne	b8d0 <XS_B__OP_next+0xc6c>  // b.any
    b838:	b	ba8c <XS_B__OP_next+0xe28>
    b83c:	ldr	x0, [sp, #120]
    b840:	ldr	w0, [x0, #64]
    b844:	and	w0, w0, #0x100000
    b848:	cmp	w0, #0x0
    b84c:	b.eq	b870 <XS_B__OP_next+0xc0c>  // b.none
    b850:	ldr	x0, [sp, #40]
    b854:	ldr	x1, [x0, #2752]
    b858:	ldr	x0, [sp, #120]
    b85c:	ldr	x0, [x0, #80]
    b860:	lsl	x0, x0, #3
    b864:	add	x0, x1, x0
    b868:	ldr	x0, [x0]
    b86c:	b	b874 <XS_B__OP_next+0xc10>
    b870:	mov	x0, #0x0                   	// #0
    b874:	ldr	x1, [x0, #16]
    b878:	ldr	x0, [sp, #120]
    b87c:	ldr	w0, [x0, #64]
    b880:	and	w0, w0, #0x100000
    b884:	cmp	w0, #0x0
    b888:	b.eq	b8ac <XS_B__OP_next+0xc48>  // b.none
    b88c:	ldr	x0, [sp, #40]
    b890:	ldr	x2, [x0, #2752]
    b894:	ldr	x0, [sp, #120]
    b898:	ldr	x0, [x0, #80]
    b89c:	lsl	x0, x0, #3
    b8a0:	add	x0, x2, x0
    b8a4:	ldr	x0, [x0]
    b8a8:	b	b8b0 <XS_B__OP_next+0xc4c>
    b8ac:	mov	x0, #0x0                   	// #0
    b8b0:	ldr	x0, [x0]
    b8b4:	ldr	x0, [x0, #24]
    b8b8:	add	x0, x0, #0x1
    b8bc:	lsl	x0, x0, #3
    b8c0:	add	x0, x1, x0
    b8c4:	ldr	x0, [x0]
    b8c8:	cmp	x0, #0x0
    b8cc:	b.eq	ba8c <XS_B__OP_next+0xe28>  // b.none
    b8d0:	ldr	x0, [sp, #120]
    b8d4:	ldr	w0, [x0, #64]
    b8d8:	and	w0, w0, #0x100000
    b8dc:	cmp	w0, #0x0
    b8e0:	b.eq	b904 <XS_B__OP_next+0xca0>  // b.none
    b8e4:	ldr	x0, [sp, #40]
    b8e8:	ldr	x1, [x0, #2752]
    b8ec:	ldr	x0, [sp, #120]
    b8f0:	ldr	x0, [x0, #80]
    b8f4:	lsl	x0, x0, #3
    b8f8:	add	x0, x1, x0
    b8fc:	ldr	x0, [x0]
    b900:	b	b908 <XS_B__OP_next+0xca4>
    b904:	mov	x0, #0x0                   	// #0
    b908:	ldr	x1, [x0, #16]
    b90c:	ldr	x0, [sp, #120]
    b910:	ldr	w0, [x0, #64]
    b914:	and	w0, w0, #0x100000
    b918:	cmp	w0, #0x0
    b91c:	b.eq	b940 <XS_B__OP_next+0xcdc>  // b.none
    b920:	ldr	x0, [sp, #40]
    b924:	ldr	x2, [x0, #2752]
    b928:	ldr	x0, [sp, #120]
    b92c:	ldr	x0, [x0, #80]
    b930:	lsl	x0, x0, #3
    b934:	add	x0, x2, x0
    b938:	ldr	x0, [x0]
    b93c:	b	b944 <XS_B__OP_next+0xce0>
    b940:	mov	x0, #0x0                   	// #0
    b944:	ldr	x0, [x0]
    b948:	ldr	x0, [x0, #24]
    b94c:	add	x0, x0, #0x1
    b950:	lsl	x0, x0, #3
    b954:	add	x0, x1, x0
    b958:	ldr	w0, [x0, #28]
    b95c:	cmp	w0, #0x0
    b960:	b.eq	b9f8 <XS_B__OP_next+0xd94>  // b.none
    b964:	ldr	x0, [sp, #120]
    b968:	ldr	w0, [x0, #64]
    b96c:	and	w0, w0, #0x100000
    b970:	cmp	w0, #0x0
    b974:	b.eq	b998 <XS_B__OP_next+0xd34>  // b.none
    b978:	ldr	x0, [sp, #40]
    b97c:	ldr	x1, [x0, #2752]
    b980:	ldr	x0, [sp, #120]
    b984:	ldr	x0, [x0, #80]
    b988:	lsl	x0, x0, #3
    b98c:	add	x0, x1, x0
    b990:	ldr	x0, [x0]
    b994:	b	b99c <XS_B__OP_next+0xd38>
    b998:	mov	x0, #0x0                   	// #0
    b99c:	ldr	x1, [x0, #16]
    b9a0:	ldr	x0, [sp, #120]
    b9a4:	ldr	w0, [x0, #64]
    b9a8:	and	w0, w0, #0x100000
    b9ac:	cmp	w0, #0x0
    b9b0:	b.eq	b9d4 <XS_B__OP_next+0xd70>  // b.none
    b9b4:	ldr	x0, [sp, #40]
    b9b8:	ldr	x2, [x0, #2752]
    b9bc:	ldr	x0, [sp, #120]
    b9c0:	ldr	x0, [x0, #80]
    b9c4:	lsl	x0, x0, #3
    b9c8:	add	x0, x2, x0
    b9cc:	ldr	x0, [x0]
    b9d0:	b	b9d8 <XS_B__OP_next+0xd74>
    b9d4:	mov	x0, #0x0                   	// #0
    b9d8:	ldr	x0, [x0]
    b9dc:	ldr	x0, [x0, #24]
    b9e0:	add	x0, x0, #0x1
    b9e4:	lsl	x0, x0, #3
    b9e8:	add	x0, x1, x0
    b9ec:	ldr	x0, [x0]
    b9f0:	ldr	x0, [x0]
    b9f4:	b	ba84 <XS_B__OP_next+0xe20>
    b9f8:	ldr	x0, [sp, #120]
    b9fc:	ldr	w0, [x0, #64]
    ba00:	and	w0, w0, #0x100000
    ba04:	cmp	w0, #0x0
    ba08:	b.eq	ba2c <XS_B__OP_next+0xdc8>  // b.none
    ba0c:	ldr	x0, [sp, #40]
    ba10:	ldr	x1, [x0, #2752]
    ba14:	ldr	x0, [sp, #120]
    ba18:	ldr	x0, [x0, #80]
    ba1c:	lsl	x0, x0, #3
    ba20:	add	x0, x1, x0
    ba24:	ldr	x0, [x0]
    ba28:	b	ba30 <XS_B__OP_next+0xdcc>
    ba2c:	mov	x0, #0x0                   	// #0
    ba30:	ldr	x1, [x0, #16]
    ba34:	ldr	x0, [sp, #120]
    ba38:	ldr	w0, [x0, #64]
    ba3c:	and	w0, w0, #0x100000
    ba40:	cmp	w0, #0x0
    ba44:	b.eq	ba68 <XS_B__OP_next+0xe04>  // b.none
    ba48:	ldr	x0, [sp, #40]
    ba4c:	ldr	x2, [x0, #2752]
    ba50:	ldr	x0, [sp, #120]
    ba54:	ldr	x0, [x0, #80]
    ba58:	lsl	x0, x0, #3
    ba5c:	add	x0, x2, x0
    ba60:	ldr	x0, [x0]
    ba64:	b	ba6c <XS_B__OP_next+0xe08>
    ba68:	mov	x0, #0x0                   	// #0
    ba6c:	ldr	x0, [x0]
    ba70:	ldr	x0, [x0, #24]
    ba74:	add	x0, x0, #0x1
    ba78:	lsl	x0, x0, #3
    ba7c:	add	x0, x1, x0
    ba80:	ldr	x0, [x0]
    ba84:	add	x0, x0, #0x8
    ba88:	b	ba98 <XS_B__OP_next+0xe34>
    ba8c:	mov	x0, #0x0                   	// #0
    ba90:	b	ba98 <XS_B__OP_next+0xe34>
    ba94:	mov	x0, #0x0                   	// #0
    ba98:	mov	x2, #0x0                   	// #0
    ba9c:	mov	x1, x0
    baa0:	ldr	x0, [sp, #40]
    baa4:	bl	4e10 <Perl_newSVpv@plt>
    baa8:	mov	x1, x0
    baac:	ldr	x0, [sp, #40]
    bab0:	bl	4ec0 <Perl_sv_2mortal@plt>
    bab4:	str	x0, [sp, #64]
    bab8:	b	c128 <XS_B__OP_next+0x14c4>
    babc:	ldr	x0, [sp, #40]
    bac0:	ldr	x1, [x0, #2736]
    bac4:	ldr	x0, [sp, #120]
    bac8:	ldr	x0, [x0, #56]
    bacc:	lsl	x0, x0, #3
    bad0:	add	x0, x1, x0
    bad4:	ldr	x0, [x0]
    bad8:	ldr	w0, [x0, #12]
    badc:	and	w0, w0, #0xff
    bae0:	cmp	w0, #0x8
    bae4:	b.ne	bb08 <XS_B__OP_next+0xea4>  // b.any
    bae8:	ldr	x0, [sp, #40]
    baec:	ldr	x1, [x0, #2736]
    baf0:	ldr	x0, [sp, #120]
    baf4:	ldr	x0, [x0, #56]
    baf8:	lsl	x0, x0, #3
    bafc:	add	x0, x1, x0
    bb00:	ldr	x0, [x0]
    bb04:	b	bb0c <XS_B__OP_next+0xea8>
    bb08:	mov	x0, #0x0                   	// #0
    bb0c:	str	x0, [sp, #144]
    bb10:	ldr	x0, [sp, #40]
    bb14:	bl	5080 <Perl_sv_newmortal@plt>
    bb18:	str	x0, [sp, #64]
    bb1c:	ldr	x0, [sp, #144]
    bb20:	cmp	x0, #0x0
    bb24:	b.eq	c124 <XS_B__OP_next+0x14c0>  // b.none
    bb28:	ldr	w0, [sp, #60]
    bb2c:	cmp	w0, #0x26
    bb30:	b.ne	bb58 <XS_B__OP_next+0xef4>  // b.any
    bb34:	ldr	x0, [sp, #144]
    bb38:	bl	744c <S_ReANY>
    bb3c:	ldr	w0, [x0, #56]
    bb40:	mov	w0, w0
    bb44:	mov	x2, x0
    bb48:	ldr	x1, [sp, #64]
    bb4c:	ldr	x0, [sp, #40]
    bb50:	bl	4d40 <Perl_sv_setuv@plt>
    bb54:	b	c124 <XS_B__OP_next+0x14c0>
    bb58:	ldr	x0, [sp, #144]
    bb5c:	ldr	x19, [x0, #16]
    bb60:	ldr	x0, [sp, #144]
    bb64:	bl	744c <S_ReANY>
    bb68:	ldrb	w0, [x0, #184]
    bb6c:	ubfx	x0, x0, #0, #4
    bb70:	and	w0, w0, #0xff
    bb74:	and	x0, x0, #0xff
    bb78:	add	x20, x19, x0
    bb7c:	ldr	x0, [sp, #144]
    bb80:	ldr	x0, [x0]
    bb84:	ldr	x19, [x0, #16]
    bb88:	ldr	x0, [sp, #144]
    bb8c:	bl	744c <S_ReANY>
    bb90:	ldrb	w0, [x0, #184]
    bb94:	ubfx	x0, x0, #0, #4
    bb98:	and	w0, w0, #0xff
    bb9c:	and	x0, x0, #0xff
    bba0:	sub	x0, x19, x0
    bba4:	sub	x0, x0, #0x1
    bba8:	mov	x3, x0
    bbac:	mov	x2, x20
    bbb0:	ldr	x1, [sp, #64]
    bbb4:	ldr	x0, [sp, #40]
    bbb8:	bl	4f80 <Perl_sv_setpvn@plt>
    bbbc:	ldr	x0, [sp, #144]
    bbc0:	ldr	w0, [x0, #12]
    bbc4:	and	w0, w0, #0x20000000
    bbc8:	cmp	w0, #0x0
    bbcc:	b.eq	c124 <XS_B__OP_next+0x14c0>  // b.none
    bbd0:	ldr	x0, [sp, #64]
    bbd4:	ldr	w0, [x0, #12]
    bbd8:	orr	w1, w0, #0x20000000
    bbdc:	ldr	x0, [sp, #64]
    bbe0:	str	w1, [x0, #12]
    bbe4:	b	c124 <XS_B__OP_next+0x14c0>
    bbe8:	mov	x1, #0x0                   	// #0
    bbec:	ldr	x0, [sp, #40]
    bbf0:	bl	77c4 <make_sv_object>
    bbf4:	str	x0, [sp, #64]
    bbf8:	b	c128 <XS_B__OP_next+0x14c4>
    bbfc:	ldr	x0, [sp, #120]
    bc00:	ldrh	w0, [x0, #32]
    bc04:	and	w0, w0, #0x1ff
    bc08:	and	w0, w0, #0xffff
    bc0c:	cmp	w0, #0x22
    bc10:	b.eq	bc2c <XS_B__OP_next+0xfc8>  // b.none
    bc14:	ldr	x0, [sp, #120]
    bc18:	ldrh	w0, [x0, #32]
    bc1c:	and	w0, w0, #0x1ff
    bc20:	and	w0, w0, #0xffff
    bc24:	cmp	w0, #0x23
    bc28:	b.ne	bc84 <XS_B__OP_next+0x1020>  // b.any
    bc2c:	ldr	x0, [sp, #120]
    bc30:	ldr	x0, [x0, #40]
    bc34:	str	x0, [sp, #136]
    bc38:	ldr	x0, [sp, #120]
    bc3c:	ldr	x4, [x0, #40]
    bc40:	ldr	x0, [sp, #136]
    bc44:	ldr	x0, [x0]
    bc48:	add	x0, x0, #0x1
    bc4c:	lsl	x0, x0, #1
    bc50:	ldr	x1, [sp, #136]
    bc54:	add	x0, x1, x0
    bc58:	add	x1, x0, #0x8
    bc5c:	ldr	x0, [sp, #136]
    bc60:	sub	x0, x1, x0
    bc64:	mov	w3, #0x80000               	// #524288
    bc68:	mov	x2, x0
    bc6c:	mov	x1, x4
    bc70:	ldr	x0, [sp, #40]
    bc74:	bl	4d80 <Perl_newSVpvn_flags@plt>
    bc78:	str	x0, [sp, #64]
    bc7c:	nop
    bc80:	b	c128 <XS_B__OP_next+0x14c4>
    bc84:	ldr	x0, [sp, #120]
    bc88:	ldr	x19, [x0, #40]
    bc8c:	ldr	x0, [sp, #120]
    bc90:	ldr	x0, [x0, #40]
    bc94:	bl	4b40 <strlen@plt>
    bc98:	mov	w3, #0x80000               	// #524288
    bc9c:	mov	x2, x0
    bca0:	mov	x1, x19
    bca4:	ldr	x0, [sp, #40]
    bca8:	bl	4d80 <Perl_newSVpvn_flags@plt>
    bcac:	str	x0, [sp, #64]
    bcb0:	b	c128 <XS_B__OP_next+0x14c4>
    bcb4:	mov	x3, #0x0                   	// #0
    bcb8:	mov	x2, #0x0                   	// #0
    bcbc:	ldr	x1, [sp, #120]
    bcc0:	ldr	x0, [sp, #40]
    bcc4:	bl	4d20 <Perl_cop_fetch_label@plt>
    bcc8:	mov	x2, #0x0                   	// #0
    bccc:	mov	x1, x0
    bcd0:	ldr	x0, [sp, #40]
    bcd4:	bl	4e10 <Perl_newSVpv@plt>
    bcd8:	mov	x1, x0
    bcdc:	ldr	x0, [sp, #40]
    bce0:	bl	4ec0 <Perl_sv_2mortal@plt>
    bce4:	str	x0, [sp, #64]
    bce8:	b	c128 <XS_B__OP_next+0x14c4>
    bcec:	mov	x1, #0x0                   	// #0
    bcf0:	ldr	x0, [sp, #40]
    bcf4:	bl	4f00 <Perl_newSVuv@plt>
    bcf8:	mov	x1, x0
    bcfc:	ldr	x0, [sp, #40]
    bd00:	bl	4ec0 <Perl_sv_2mortal@plt>
    bd04:	str	x0, [sp, #64]
    bd08:	b	c128 <XS_B__OP_next+0x14c4>
    bd0c:	ldr	x1, [sp, #120]
    bd10:	ldr	x0, [sp, #40]
    bd14:	bl	7960 <make_warnings_object>
    bd18:	str	x0, [sp, #64]
    bd1c:	b	c128 <XS_B__OP_next+0x14c4>
    bd20:	ldr	x1, [sp, #120]
    bd24:	ldr	x0, [sp, #40]
    bd28:	bl	7a60 <make_cop_io_object>
    bd2c:	str	x0, [sp, #64]
    bd30:	b	c128 <XS_B__OP_next+0x14c4>
    bd34:	ldr	x0, [sp, #40]
    bd38:	bl	5080 <Perl_sv_newmortal@plt>
    bd3c:	str	x0, [sp, #64]
    bd40:	adrp	x0, 18000 <boot_B+0x23d8>
    bd44:	add	x2, x0, #0xe10
    bd48:	ldr	x1, [sp, #64]
    bd4c:	ldr	x0, [sp, #40]
    bd50:	bl	4fc0 <Perl_newSVrv@plt>
    bd54:	mov	x1, x0
    bd58:	ldr	x0, [sp, #120]
    bd5c:	ldr	x0, [x0, #72]
    bd60:	mov	x2, x0
    bd64:	ldr	x0, [sp, #40]
    bd68:	bl	5040 <Perl_sv_setiv@plt>
    bd6c:	b	c128 <XS_B__OP_next+0x14c4>
    bd70:	ldr	x0, [sp, #120]
    bd74:	bl	4df0 <Perl_op_parent@plt>
    bd78:	mov	x1, x0
    bd7c:	ldr	x0, [sp, #40]
    bd80:	bl	75b4 <make_op_object>
    bd84:	str	x0, [sp, #64]
    bd88:	b	c128 <XS_B__OP_next+0x14c4>
    bd8c:	ldr	x0, [sp, #120]
    bd90:	ldrh	w0, [x0, #32]
    bd94:	and	w0, w0, #0x1ff
    bd98:	and	w0, w0, #0xffff
    bd9c:	cmp	w0, #0xd4
    bda0:	b.ne	bdb0 <XS_B__OP_next+0x114c>  // b.any
    bda4:	ldr	x0, [sp, #120]
    bda8:	ldr	x0, [x0, #40]
    bdac:	b	bdb4 <XS_B__OP_next+0x1150>
    bdb0:	mov	x0, #0x0                   	// #0
    bdb4:	mov	x1, x0
    bdb8:	ldr	x0, [sp, #40]
    bdbc:	bl	75b4 <make_op_object>
    bdc0:	str	x0, [sp, #64]
    bdc4:	b	c128 <XS_B__OP_next+0x14c4>
    bdc8:	ldr	x0, [sp, #120]
    bdcc:	ldrh	w0, [x0, #32]
    bdd0:	and	w0, w0, #0x1ff
    bdd4:	and	w0, w0, #0xffff
    bdd8:	cmp	w0, #0xd4
    bddc:	b.eq	bdec <XS_B__OP_next+0x1188>  // b.none
    bde0:	ldr	x0, [sp, #120]
    bde4:	ldr	x0, [x0, #40]
    bde8:	b	bdf0 <XS_B__OP_next+0x118c>
    bdec:	mov	x0, #0x0                   	// #0
    bdf0:	mov	x1, x0
    bdf4:	ldr	x0, [sp, #40]
    bdf8:	bl	77c4 <make_sv_object>
    bdfc:	str	x0, [sp, #64]
    be00:	b	c128 <XS_B__OP_next+0x14c4>
    be04:	ldr	x0, [sp, #40]
    be08:	ldr	x1, [x0, #2736]
    be0c:	ldr	x0, [sp, #120]
    be10:	ldr	x0, [x0, #56]
    be14:	lsl	x0, x0, #3
    be18:	add	x0, x1, x0
    be1c:	ldr	x0, [x0]
    be20:	ldr	w0, [x0, #12]
    be24:	and	w0, w0, #0xff
    be28:	cmp	w0, #0x8
    be2c:	b.ne	be50 <XS_B__OP_next+0x11ec>  // b.any
    be30:	ldr	x0, [sp, #40]
    be34:	ldr	x1, [x0, #2736]
    be38:	ldr	x0, [sp, #120]
    be3c:	ldr	x0, [x0, #56]
    be40:	lsl	x0, x0, #3
    be44:	add	x0, x1, x0
    be48:	ldr	x0, [x0]
    be4c:	b	be54 <XS_B__OP_next+0x11f0>
    be50:	mov	x0, #0x0                   	// #0
    be54:	mov	x1, x0
    be58:	ldr	x0, [sp, #40]
    be5c:	bl	77c4 <make_sv_object>
    be60:	str	x0, [sp, #64]
    be64:	b	c128 <XS_B__OP_next+0x14c4>
    be68:	ldr	x0, [sp, #120]
    be6c:	ldrh	w0, [x0, #32]
    be70:	and	w0, w0, #0x1ff
    be74:	and	w0, w0, #0xffff
    be78:	cmp	w0, #0xd7
    be7c:	b.eq	be98 <XS_B__OP_next+0x1234>  // b.none
    be80:	ldr	x0, [sp, #120]
    be84:	ldrh	w0, [x0, #32]
    be88:	and	w0, w0, #0x1ff
    be8c:	and	w0, w0, #0xffff
    be90:	cmp	w0, #0xd8
    be94:	b.ne	bea4 <XS_B__OP_next+0x1240>  // b.any
    be98:	ldr	x0, [sp, #120]
    be9c:	ldr	x0, [x0, #48]
    bea0:	b	bea8 <XS_B__OP_next+0x1244>
    bea4:	mov	x0, #0x0                   	// #0
    bea8:	mov	x1, x0
    beac:	ldr	x0, [sp, #40]
    beb0:	bl	4f00 <Perl_newSVuv@plt>
    beb4:	mov	x1, x0
    beb8:	ldr	x0, [sp, #40]
    bebc:	bl	4ec0 <Perl_sv_2mortal@plt>
    bec0:	str	x0, [sp, #64]
    bec4:	b	c128 <XS_B__OP_next+0x14c4>
    bec8:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    becc:	add	x1, x0, #0x790
    bed0:	ldrsw	x0, [sp, #60]
    bed4:	lsl	x0, x0, #4
    bed8:	add	x0, x1, x0
    bedc:	ldr	x0, [x0]
    bee0:	mov	x1, x0
    bee4:	adrp	x0, 18000 <boot_B+0x23d8>
    bee8:	add	x0, x0, #0xe18
    beec:	bl	4e60 <Perl_croak_nocontext@plt>
    bef0:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    bef4:	add	x1, x0, #0x790
    bef8:	ldrsw	x0, [sp, #60]
    befc:	lsl	x0, x0, #4
    bf00:	add	x0, x1, x0
    bf04:	ldrh	w0, [x0, #10]
    bf08:	and	x0, x0, #0xffff
    bf0c:	ldr	x1, [sp, #120]
    bf10:	add	x0, x1, x0
    bf14:	str	x0, [sp, #128]
    bf18:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    bf1c:	add	x1, x0, #0x790
    bf20:	ldrsw	x0, [sp, #60]
    bf24:	lsl	x0, x0, #4
    bf28:	add	x0, x1, x0
    bf2c:	ldrb	w0, [x0, #9]
    bf30:	cmp	w0, #0x7
    bf34:	b.eq	c0b0 <XS_B__OP_next+0x144c>  // b.none
    bf38:	cmp	w0, #0x7
    bf3c:	b.gt	c0dc <XS_B__OP_next+0x1478>
    bf40:	cmp	w0, #0x6
    bf44:	b.eq	c088 <XS_B__OP_next+0x1424>  // b.none
    bf48:	cmp	w0, #0x6
    bf4c:	b.gt	c0dc <XS_B__OP_next+0x1478>
    bf50:	cmp	w0, #0x5
    bf54:	b.eq	bfe8 <XS_B__OP_next+0x1384>  // b.none
    bf58:	cmp	w0, #0x5
    bf5c:	b.gt	c0dc <XS_B__OP_next+0x1478>
    bf60:	cmp	w0, #0x4
    bf64:	b.eq	bfc0 <XS_B__OP_next+0x135c>  // b.none
    bf68:	cmp	w0, #0x4
    bf6c:	b.gt	c0dc <XS_B__OP_next+0x1478>
    bf70:	cmp	w0, #0x3
    bf74:	b.eq	bfa4 <XS_B__OP_next+0x1340>  // b.none
    bf78:	cmp	w0, #0x3
    bf7c:	b.gt	c0dc <XS_B__OP_next+0x1478>
    bf80:	cmp	w0, #0x2
    bf84:	b.eq	c05c <XS_B__OP_next+0x13f8>  // b.none
    bf88:	cmp	w0, #0x2
    bf8c:	b.gt	c0dc <XS_B__OP_next+0x1478>
    bf90:	cmp	w0, #0x0
    bf94:	b.eq	c040 <XS_B__OP_next+0x13dc>  // b.none
    bf98:	cmp	w0, #0x1
    bf9c:	b.eq	c014 <XS_B__OP_next+0x13b0>  // b.none
    bfa0:	b	c0dc <XS_B__OP_next+0x1478>
    bfa4:	ldr	x0, [sp, #128]
    bfa8:	ldr	x0, [x0]
    bfac:	mov	x1, x0
    bfb0:	ldr	x0, [sp, #40]
    bfb4:	bl	75b4 <make_op_object>
    bfb8:	str	x0, [sp, #64]
    bfbc:	b	c128 <XS_B__OP_next+0x14c4>
    bfc0:	ldr	x0, [sp, #128]
    bfc4:	ldr	x0, [x0]
    bfc8:	mov	x1, x0
    bfcc:	ldr	x0, [sp, #40]
    bfd0:	bl	4f00 <Perl_newSVuv@plt>
    bfd4:	mov	x1, x0
    bfd8:	ldr	x0, [sp, #40]
    bfdc:	bl	4ec0 <Perl_sv_2mortal@plt>
    bfe0:	str	x0, [sp, #64]
    bfe4:	b	c128 <XS_B__OP_next+0x14c4>
    bfe8:	ldr	x0, [sp, #128]
    bfec:	ldrb	w0, [x0]
    bff0:	and	x0, x0, #0xff
    bff4:	mov	x1, x0
    bff8:	ldr	x0, [sp, #40]
    bffc:	bl	4f00 <Perl_newSVuv@plt>
    c000:	mov	x1, x0
    c004:	ldr	x0, [sp, #40]
    c008:	bl	4ec0 <Perl_sv_2mortal@plt>
    c00c:	str	x0, [sp, #64]
    c010:	b	c128 <XS_B__OP_next+0x14c4>
    c014:	ldr	x0, [sp, #128]
    c018:	ldr	w0, [x0]
    c01c:	mov	w0, w0
    c020:	mov	x1, x0
    c024:	ldr	x0, [sp, #40]
    c028:	bl	4f00 <Perl_newSVuv@plt>
    c02c:	mov	x1, x0
    c030:	ldr	x0, [sp, #40]
    c034:	bl	4ec0 <Perl_sv_2mortal@plt>
    c038:	str	x0, [sp, #64]
    c03c:	b	c128 <XS_B__OP_next+0x14c4>
    c040:	ldr	x0, [sp, #128]
    c044:	ldr	x0, [x0]
    c048:	mov	x1, x0
    c04c:	ldr	x0, [sp, #40]
    c050:	bl	77c4 <make_sv_object>
    c054:	str	x0, [sp, #64]
    c058:	b	c128 <XS_B__OP_next+0x14c4>
    c05c:	ldr	x0, [sp, #128]
    c060:	ldr	w0, [x0]
    c064:	mov	w0, w0
    c068:	mov	x1, x0
    c06c:	ldr	x0, [sp, #40]
    c070:	bl	4f00 <Perl_newSVuv@plt>
    c074:	mov	x1, x0
    c078:	ldr	x0, [sp, #40]
    c07c:	bl	4ec0 <Perl_sv_2mortal@plt>
    c080:	str	x0, [sp, #64]
    c084:	b	c128 <XS_B__OP_next+0x14c4>
    c088:	ldr	x0, [sp, #128]
    c08c:	ldr	x0, [x0]
    c090:	mov	x1, x0
    c094:	ldr	x0, [sp, #40]
    c098:	bl	5020 <Perl_newSViv@plt>
    c09c:	mov	x1, x0
    c0a0:	ldr	x0, [sp, #40]
    c0a4:	bl	4ec0 <Perl_sv_2mortal@plt>
    c0a8:	str	x0, [sp, #64]
    c0ac:	b	c128 <XS_B__OP_next+0x14c4>
    c0b0:	ldr	x0, [sp, #128]
    c0b4:	ldr	x0, [x0]
    c0b8:	mov	x2, #0x0                   	// #0
    c0bc:	mov	x1, x0
    c0c0:	ldr	x0, [sp, #40]
    c0c4:	bl	4e10 <Perl_newSVpv@plt>
    c0c8:	mov	x1, x0
    c0cc:	ldr	x0, [sp, #40]
    c0d0:	bl	4ec0 <Perl_sv_2mortal@plt>
    c0d4:	str	x0, [sp, #64]
    c0d8:	b	c128 <XS_B__OP_next+0x14c4>
    c0dc:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    c0e0:	add	x1, x0, #0x790
    c0e4:	ldrsw	x0, [sp, #60]
    c0e8:	lsl	x0, x0, #4
    c0ec:	add	x0, x1, x0
    c0f0:	ldrb	w0, [x0, #9]
    c0f4:	mov	w3, w0
    c0f8:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
    c0fc:	add	x1, x0, #0x790
    c100:	ldrsw	x0, [sp, #60]
    c104:	lsl	x0, x0, #4
    c108:	add	x0, x1, x0
    c10c:	ldr	x0, [x0]
    c110:	mov	x2, x0
    c114:	mov	w1, w3
    c118:	adrp	x0, 18000 <boot_B+0x23d8>
    c11c:	add	x0, x0, #0xe38
    c120:	bl	4e60 <Perl_croak_nocontext@plt>
    c124:	nop
    c128:	ldr	x0, [sp, #40]
    c12c:	ldr	x1, [x0, #24]
    c130:	ldrsw	x0, [sp, #52]
    c134:	lsl	x0, x0, #3
    c138:	add	x0, x1, x0
    c13c:	ldr	x1, [sp, #64]
    c140:	str	x1, [x0]
    c144:	mov	x0, #0x1                   	// #1
    c148:	str	x0, [sp, #160]
    c14c:	ldr	x0, [sp, #40]
    c150:	ldr	x1, [x0, #24]
    c154:	ldrsw	x2, [sp, #52]
    c158:	ldr	x0, [sp, #160]
    c15c:	add	x0, x2, x0
    c160:	lsl	x0, x0, #3
    c164:	sub	x0, x0, #0x8
    c168:	add	x1, x1, x0
    c16c:	ldr	x0, [sp, #40]
    c170:	str	x1, [x0]
    c174:	nop
    c178:	ldp	x19, x20, [sp, #16]
    c17c:	ldp	x29, x30, [sp], #176
    c180:	ret

000000000000c184 <XS_B__OP_oplist>:
    c184:	stp	x29, x30, [sp, #-80]!
    c188:	mov	x29, sp
    c18c:	str	x0, [sp, #24]
    c190:	str	x1, [sp, #16]
    c194:	ldr	x0, [sp, #24]
    c198:	ldr	x0, [x0]
    c19c:	str	x0, [sp, #48]
    c1a0:	ldr	x0, [sp, #24]
    c1a4:	bl	7424 <S_POPMARK>
    c1a8:	str	w0, [sp, #40]
    c1ac:	ldr	x0, [sp, #24]
    c1b0:	ldr	x1, [x0, #24]
    c1b4:	ldr	w0, [sp, #40]
    c1b8:	add	w2, w0, #0x1
    c1bc:	str	w2, [sp, #40]
    c1c0:	sxtw	x0, w0
    c1c4:	lsl	x0, x0, #3
    c1c8:	add	x0, x1, x0
    c1cc:	str	x0, [sp, #56]
    c1d0:	ldr	x1, [sp, #48]
    c1d4:	ldr	x0, [sp, #56]
    c1d8:	sub	x0, x1, x0
    c1dc:	asr	x0, x0, #3
    c1e0:	str	w0, [sp, #44]
    c1e4:	ldr	w0, [sp, #44]
    c1e8:	cmp	w0, #0x1
    c1ec:	b.eq	c200 <XS_B__OP_oplist+0x7c>  // b.none
    c1f0:	adrp	x0, 18000 <boot_B+0x23d8>
    c1f4:	add	x1, x0, #0xdb0
    c1f8:	ldr	x0, [sp, #16]
    c1fc:	bl	4d70 <Perl_croak_xs_usage@plt>
    c200:	ldrsw	x0, [sp, #44]
    c204:	lsl	x0, x0, #3
    c208:	neg	x0, x0
    c20c:	ldr	x1, [sp, #48]
    c210:	add	x0, x1, x0
    c214:	str	x0, [sp, #48]
    c218:	ldr	x0, [sp, #24]
    c21c:	ldr	x1, [x0, #24]
    c220:	ldrsw	x0, [sp, #40]
    c224:	lsl	x0, x0, #3
    c228:	add	x0, x1, x0
    c22c:	ldr	x0, [x0]
    c230:	ldr	w0, [x0, #12]
    c234:	and	w0, w0, #0x800
    c238:	cmp	w0, #0x0
    c23c:	b.eq	c2d8 <XS_B__OP_oplist+0x154>  // b.none
    c240:	ldr	x0, [sp, #24]
    c244:	ldr	x1, [x0, #24]
    c248:	ldrsw	x0, [sp, #40]
    c24c:	lsl	x0, x0, #3
    c250:	add	x0, x1, x0
    c254:	ldr	x0, [x0]
    c258:	ldr	x0, [x0, #16]
    c25c:	ldr	w1, [x0, #12]
    c260:	mov	w0, #0x100                 	// #256
    c264:	movk	w0, #0x20, lsl #16
    c268:	and	w0, w1, w0
    c26c:	cmp	w0, #0x100
    c270:	b.ne	c29c <XS_B__OP_oplist+0x118>  // b.any
    c274:	ldr	x0, [sp, #24]
    c278:	ldr	x1, [x0, #24]
    c27c:	ldrsw	x0, [sp, #40]
    c280:	lsl	x0, x0, #3
    c284:	add	x0, x1, x0
    c288:	ldr	x0, [x0]
    c28c:	ldr	x0, [x0, #16]
    c290:	ldr	x0, [x0]
    c294:	ldr	x0, [x0, #32]
    c298:	b	c2c8 <XS_B__OP_oplist+0x144>
    c29c:	ldr	x0, [sp, #24]
    c2a0:	ldr	x1, [x0, #24]
    c2a4:	ldrsw	x0, [sp, #40]
    c2a8:	lsl	x0, x0, #3
    c2ac:	add	x0, x1, x0
    c2b0:	ldr	x0, [x0]
    c2b4:	ldr	x0, [x0, #16]
    c2b8:	mov	w2, #0x2                   	// #2
    c2bc:	mov	x1, x0
    c2c0:	ldr	x0, [sp, #24]
    c2c4:	bl	4b20 <Perl_sv_2iv_flags@plt>
    c2c8:	str	x0, [sp, #64]
    c2cc:	ldr	x0, [sp, #64]
    c2d0:	str	x0, [sp, #72]
    c2d4:	b	c2e4 <XS_B__OP_oplist+0x160>
    c2d8:	adrp	x0, 18000 <boot_B+0x23d8>
    c2dc:	add	x0, x0, #0xdb8
    c2e0:	bl	4e60 <Perl_croak_nocontext@plt>
    c2e4:	ldr	x2, [sp, #48]
    c2e8:	ldr	x1, [sp, #72]
    c2ec:	ldr	x0, [sp, #24]
    c2f0:	bl	8818 <oplist>
    c2f4:	str	x0, [sp, #48]
    c2f8:	ldr	x0, [sp, #24]
    c2fc:	ldr	x1, [sp, #48]
    c300:	str	x1, [x0]
    c304:	nop
    c308:	ldp	x29, x30, [sp], #80
    c30c:	ret

000000000000c310 <XS_B__UNOP_AUX_string>:
    c310:	stp	x29, x30, [sp, #-112]!
    c314:	mov	x29, sp
    c318:	str	x0, [sp, #24]
    c31c:	str	x1, [sp, #16]
    c320:	ldr	x0, [sp, #24]
    c324:	ldr	x0, [x0]
    c328:	str	x0, [sp, #48]
    c32c:	ldr	x0, [sp, #24]
    c330:	bl	7424 <S_POPMARK>
    c334:	str	w0, [sp, #32]
    c338:	ldr	x0, [sp, #24]
    c33c:	ldr	x1, [x0, #24]
    c340:	ldr	w0, [sp, #32]
    c344:	add	w2, w0, #0x1
    c348:	str	w2, [sp, #32]
    c34c:	sxtw	x0, w0
    c350:	lsl	x0, x0, #3
    c354:	add	x0, x1, x0
    c358:	str	x0, [sp, #56]
    c35c:	ldr	x1, [sp, #48]
    c360:	ldr	x0, [sp, #56]
    c364:	sub	x0, x1, x0
    c368:	asr	x0, x0, #3
    c36c:	str	w0, [sp, #36]
    c370:	ldr	w0, [sp, #36]
    c374:	cmp	w0, #0x2
    c378:	b.eq	c38c <XS_B__UNOP_AUX_string+0x7c>  // b.none
    c37c:	adrp	x0, 18000 <boot_B+0x23d8>
    c380:	add	x1, x0, #0xf40
    c384:	ldr	x0, [sp, #16]
    c388:	bl	4d70 <Perl_croak_xs_usage@plt>
    c38c:	ldrsw	x0, [sp, #36]
    c390:	lsl	x0, x0, #3
    c394:	neg	x0, x0
    c398:	ldr	x1, [sp, #48]
    c39c:	add	x0, x1, x0
    c3a0:	str	x0, [sp, #48]
    c3a4:	ldr	x0, [sp, #24]
    c3a8:	ldr	x1, [x0, #24]
    c3ac:	ldrsw	x0, [sp, #32]
    c3b0:	lsl	x0, x0, #3
    c3b4:	add	x0, x1, x0
    c3b8:	ldr	x0, [x0]
    c3bc:	ldr	w0, [x0, #12]
    c3c0:	and	w0, w0, #0x800
    c3c4:	cmp	w0, #0x0
    c3c8:	b.eq	c490 <XS_B__UNOP_AUX_string+0x180>  // b.none
    c3cc:	ldr	x0, [sp, #24]
    c3d0:	ldr	x1, [x0, #24]
    c3d4:	ldrsw	x0, [sp, #32]
    c3d8:	lsl	x0, x0, #3
    c3dc:	add	x0, x1, x0
    c3e0:	ldr	x0, [x0]
    c3e4:	ldr	x0, [x0, #16]
    c3e8:	ldr	w1, [x0, #12]
    c3ec:	mov	w0, #0x100                 	// #256
    c3f0:	movk	w0, #0x20, lsl #16
    c3f4:	and	w0, w1, w0
    c3f8:	cmp	w0, #0x100
    c3fc:	b.ne	c428 <XS_B__UNOP_AUX_string+0x118>  // b.any
    c400:	ldr	x0, [sp, #24]
    c404:	ldr	x1, [x0, #24]
    c408:	ldrsw	x0, [sp, #32]
    c40c:	lsl	x0, x0, #3
    c410:	add	x0, x1, x0
    c414:	ldr	x0, [x0]
    c418:	ldr	x0, [x0, #16]
    c41c:	ldr	x0, [x0]
    c420:	ldr	x0, [x0, #32]
    c424:	b	c454 <XS_B__UNOP_AUX_string+0x144>
    c428:	ldr	x0, [sp, #24]
    c42c:	ldr	x1, [x0, #24]
    c430:	ldrsw	x0, [sp, #32]
    c434:	lsl	x0, x0, #3
    c438:	add	x0, x1, x0
    c43c:	ldr	x0, [x0]
    c440:	ldr	x0, [x0, #16]
    c444:	mov	w2, #0x2                   	// #2
    c448:	mov	x1, x0
    c44c:	ldr	x0, [sp, #24]
    c450:	bl	4b20 <Perl_sv_2iv_flags@plt>
    c454:	str	x0, [sp, #64]
    c458:	ldr	x0, [sp, #64]
    c45c:	str	x0, [sp, #72]
    c460:	ldr	x0, [sp, #24]
    c464:	ldr	x1, [x0, #24]
    c468:	ldrsw	x0, [sp, #32]
    c46c:	add	x0, x0, #0x1
    c470:	lsl	x0, x0, #3
    c474:	add	x0, x1, x0
    c478:	ldr	x0, [x0]
    c47c:	ldr	w0, [x0, #12]
    c480:	and	w0, w0, #0x800
    c484:	cmp	w0, #0x0
    c488:	b.eq	c564 <XS_B__UNOP_AUX_string+0x254>  // b.none
    c48c:	b	c49c <XS_B__UNOP_AUX_string+0x18c>
    c490:	adrp	x0, 18000 <boot_B+0x23d8>
    c494:	add	x0, x0, #0xdb8
    c498:	bl	4e60 <Perl_croak_nocontext@plt>
    c49c:	ldr	x0, [sp, #24]
    c4a0:	ldr	x1, [x0, #24]
    c4a4:	ldrsw	x0, [sp, #32]
    c4a8:	add	x0, x0, #0x1
    c4ac:	lsl	x0, x0, #3
    c4b0:	add	x0, x1, x0
    c4b4:	ldr	x0, [x0]
    c4b8:	ldr	x0, [x0, #16]
    c4bc:	ldr	w1, [x0, #12]
    c4c0:	mov	w0, #0x100                 	// #256
    c4c4:	movk	w0, #0x20, lsl #16
    c4c8:	and	w0, w1, w0
    c4cc:	cmp	w0, #0x100
    c4d0:	b.ne	c500 <XS_B__UNOP_AUX_string+0x1f0>  // b.any
    c4d4:	ldr	x0, [sp, #24]
    c4d8:	ldr	x1, [x0, #24]
    c4dc:	ldrsw	x0, [sp, #32]
    c4e0:	add	x0, x0, #0x1
    c4e4:	lsl	x0, x0, #3
    c4e8:	add	x0, x1, x0
    c4ec:	ldr	x0, [x0]
    c4f0:	ldr	x0, [x0, #16]
    c4f4:	ldr	x0, [x0]
    c4f8:	ldr	x0, [x0, #32]
    c4fc:	b	c530 <XS_B__UNOP_AUX_string+0x220>
    c500:	ldr	x0, [sp, #24]
    c504:	ldr	x1, [x0, #24]
    c508:	ldrsw	x0, [sp, #32]
    c50c:	add	x0, x0, #0x1
    c510:	lsl	x0, x0, #3
    c514:	add	x0, x1, x0
    c518:	ldr	x0, [x0]
    c51c:	ldr	x0, [x0, #16]
    c520:	mov	w2, #0x2                   	// #2
    c524:	mov	x1, x0
    c528:	ldr	x0, [sp, #24]
    c52c:	bl	4b20 <Perl_sv_2iv_flags@plt>
    c530:	str	x0, [sp, #80]
    c534:	ldr	x0, [sp, #80]
    c538:	str	x0, [sp, #88]
    c53c:	ldr	x0, [sp, #72]
    c540:	ldr	x0, [x0, #48]
    c544:	str	x0, [sp, #96]
    c548:	ldr	x0, [sp, #72]
    c54c:	ldrh	w0, [x0, #32]
    c550:	ubfx	x0, x0, #0, #9
    c554:	and	w0, w0, #0xffff
    c558:	cmp	w0, #0xbc
    c55c:	b.eq	c5c8 <XS_B__UNOP_AUX_string+0x2b8>  // b.none
    c560:	b	c570 <XS_B__UNOP_AUX_string+0x260>
    c564:	adrp	x0, 18000 <boot_B+0x23d8>
    c568:	add	x0, x0, #0xf48
    c56c:	bl	4e60 <Perl_croak_nocontext@plt>
    c570:	cmp	w0, #0xbc
    c574:	b.gt	c674 <XS_B__UNOP_AUX_string+0x364>
    c578:	cmp	w0, #0xbb
    c57c:	b.eq	c5f4 <XS_B__UNOP_AUX_string+0x2e4>  // b.none
    c580:	cmp	w0, #0xbb
    c584:	b.gt	c674 <XS_B__UNOP_AUX_string+0x364>
    c588:	cmp	w0, #0x43
    c58c:	b.eq	c59c <XS_B__UNOP_AUX_string+0x28c>  // b.none
    c590:	cmp	w0, #0x99
    c594:	b.eq	c5b0 <XS_B__UNOP_AUX_string+0x2a0>  // b.none
    c598:	b	c674 <XS_B__UNOP_AUX_string+0x364>
    c59c:	ldr	x1, [sp, #72]
    c5a0:	ldr	x0, [sp, #24]
    c5a4:	bl	4d10 <Perl_multiconcat_stringify@plt>
    c5a8:	str	x0, [sp, #40]
    c5ac:	b	c698 <XS_B__UNOP_AUX_string+0x388>
    c5b0:	ldr	x2, [sp, #88]
    c5b4:	ldr	x1, [sp, #72]
    c5b8:	ldr	x0, [sp, #24]
    c5bc:	bl	4f40 <Perl_multideref_stringify@plt>
    c5c0:	str	x0, [sp, #40]
    c5c4:	b	c698 <XS_B__UNOP_AUX_string+0x388>
    c5c8:	ldr	x0, [sp, #96]
    c5cc:	mov	x2, x0
    c5d0:	adrp	x0, 18000 <boot_B+0x23d8>
    c5d4:	add	x1, x0, #0xf60
    c5d8:	ldr	x0, [sp, #24]
    c5dc:	bl	5060 <Perl_newSVpvf@plt>
    c5e0:	mov	x1, x0
    c5e4:	ldr	x0, [sp, #24]
    c5e8:	bl	4ec0 <Perl_sv_2mortal@plt>
    c5ec:	str	x0, [sp, #40]
    c5f0:	b	c698 <XS_B__UNOP_AUX_string+0x388>
    c5f4:	ldr	x0, [sp, #96]
    c5f8:	ldr	x1, [x0]
    c5fc:	ldr	x0, [sp, #96]
    c600:	add	x0, x0, #0x8
    c604:	ldr	x0, [x0]
    c608:	mov	x3, x0
    c60c:	mov	x2, x1
    c610:	adrp	x0, 18000 <boot_B+0x23d8>
    c614:	add	x1, x0, #0xf68
    c618:	ldr	x0, [sp, #24]
    c61c:	bl	5060 <Perl_newSVpvf@plt>
    c620:	str	x0, [sp, #40]
    c624:	ldr	x0, [sp, #96]
    c628:	add	x0, x0, #0x10
    c62c:	ldr	x0, [x0]
    c630:	cmp	x0, #0x0
    c634:	b.eq	c660 <XS_B__UNOP_AUX_string+0x350>  // b.none
    c638:	ldr	x0, [sp, #96]
    c63c:	add	x0, x0, #0x10
    c640:	ldr	x0, [x0]
    c644:	and	w0, w0, #0xff
    c648:	mov	w3, w0
    c64c:	adrp	x0, 18000 <boot_B+0x23d8>
    c650:	add	x2, x0, #0xf70
    c654:	ldr	x1, [sp, #40]
    c658:	ldr	x0, [sp, #24]
    c65c:	bl	4c40 <Perl_sv_catpvf@plt>
    c660:	ldr	x1, [sp, #40]
    c664:	ldr	x0, [sp, #24]
    c668:	bl	4ec0 <Perl_sv_2mortal@plt>
    c66c:	str	x0, [sp, #40]
    c670:	b	c698 <XS_B__UNOP_AUX_string+0x388>
    c674:	mov	x2, #0x0                   	// #0
    c678:	adrp	x0, 18000 <boot_B+0x23d8>
    c67c:	add	x1, x0, #0xab8
    c680:	ldr	x0, [sp, #24]
    c684:	bl	5070 <Perl_newSVpvn@plt>
    c688:	mov	x1, x0
    c68c:	ldr	x0, [sp, #24]
    c690:	bl	4ec0 <Perl_sv_2mortal@plt>
    c694:	str	x0, [sp, #40]
    c698:	ldr	x0, [sp, #24]
    c69c:	ldr	x1, [x0, #24]
    c6a0:	ldrsw	x0, [sp, #32]
    c6a4:	lsl	x0, x0, #3
    c6a8:	add	x0, x1, x0
    c6ac:	ldr	x1, [sp, #40]
    c6b0:	str	x1, [x0]
    c6b4:	mov	x0, #0x1                   	// #1
    c6b8:	str	x0, [sp, #104]
    c6bc:	ldr	x0, [sp, #24]
    c6c0:	ldr	x1, [x0, #24]
    c6c4:	ldrsw	x2, [sp, #32]
    c6c8:	ldr	x0, [sp, #104]
    c6cc:	add	x0, x2, x0
    c6d0:	lsl	x0, x0, #3
    c6d4:	sub	x0, x0, #0x8
    c6d8:	add	x1, x1, x0
    c6dc:	ldr	x0, [sp, #24]
    c6e0:	str	x1, [x0]
    c6e4:	nop
    c6e8:	ldp	x29, x30, [sp], #112
    c6ec:	ret

000000000000c6f0 <XS_B__UNOP_AUX_aux_list>:
    c6f0:	stp	x29, x30, [sp, #-256]!
    c6f4:	mov	x29, sp
    c6f8:	str	x0, [sp, #24]
    c6fc:	str	x1, [sp, #16]
    c700:	ldr	x0, [sp, #24]
    c704:	ldr	x0, [x0]
    c708:	str	x0, [sp, #56]
    c70c:	ldr	x0, [sp, #24]
    c710:	bl	7424 <S_POPMARK>
    c714:	str	w0, [sp, #48]
    c718:	ldr	x0, [sp, #24]
    c71c:	ldr	x1, [x0, #24]
    c720:	ldr	w0, [sp, #48]
    c724:	add	w2, w0, #0x1
    c728:	str	w2, [sp, #48]
    c72c:	sxtw	x0, w0
    c730:	lsl	x0, x0, #3
    c734:	add	x0, x1, x0
    c738:	str	x0, [sp, #128]
    c73c:	ldr	x1, [sp, #56]
    c740:	ldr	x0, [sp, #128]
    c744:	sub	x0, x1, x0
    c748:	asr	x0, x0, #3
    c74c:	str	w0, [sp, #52]
    c750:	ldr	w0, [sp, #52]
    c754:	cmp	w0, #0x2
    c758:	b.eq	c76c <XS_B__UNOP_AUX_aux_list+0x7c>  // b.none
    c75c:	adrp	x0, 18000 <boot_B+0x23d8>
    c760:	add	x1, x0, #0xf40
    c764:	ldr	x0, [sp, #16]
    c768:	bl	4d70 <Perl_croak_xs_usage@plt>
    c76c:	ldrsw	x0, [sp, #52]
    c770:	lsl	x0, x0, #3
    c774:	neg	x0, x0
    c778:	ldr	x1, [sp, #56]
    c77c:	add	x0, x1, x0
    c780:	str	x0, [sp, #56]
    c784:	ldr	x0, [sp, #24]
    c788:	ldr	x1, [x0, #24]
    c78c:	ldrsw	x0, [sp, #48]
    c790:	lsl	x0, x0, #3
    c794:	add	x0, x1, x0
    c798:	ldr	x0, [x0]
    c79c:	ldr	w0, [x0, #12]
    c7a0:	and	w0, w0, #0x800
    c7a4:	cmp	w0, #0x0
    c7a8:	b.eq	c870 <XS_B__UNOP_AUX_aux_list+0x180>  // b.none
    c7ac:	ldr	x0, [sp, #24]
    c7b0:	ldr	x1, [x0, #24]
    c7b4:	ldrsw	x0, [sp, #48]
    c7b8:	lsl	x0, x0, #3
    c7bc:	add	x0, x1, x0
    c7c0:	ldr	x0, [x0]
    c7c4:	ldr	x0, [x0, #16]
    c7c8:	ldr	w1, [x0, #12]
    c7cc:	mov	w0, #0x100                 	// #256
    c7d0:	movk	w0, #0x20, lsl #16
    c7d4:	and	w0, w1, w0
    c7d8:	cmp	w0, #0x100
    c7dc:	b.ne	c808 <XS_B__UNOP_AUX_aux_list+0x118>  // b.any
    c7e0:	ldr	x0, [sp, #24]
    c7e4:	ldr	x1, [x0, #24]
    c7e8:	ldrsw	x0, [sp, #48]
    c7ec:	lsl	x0, x0, #3
    c7f0:	add	x0, x1, x0
    c7f4:	ldr	x0, [x0]
    c7f8:	ldr	x0, [x0, #16]
    c7fc:	ldr	x0, [x0]
    c800:	ldr	x0, [x0, #32]
    c804:	b	c834 <XS_B__UNOP_AUX_aux_list+0x144>
    c808:	ldr	x0, [sp, #24]
    c80c:	ldr	x1, [x0, #24]
    c810:	ldrsw	x0, [sp, #48]
    c814:	lsl	x0, x0, #3
    c818:	add	x0, x1, x0
    c81c:	ldr	x0, [x0]
    c820:	ldr	x0, [x0, #16]
    c824:	mov	w2, #0x2                   	// #2
    c828:	mov	x1, x0
    c82c:	ldr	x0, [sp, #24]
    c830:	bl	4b20 <Perl_sv_2iv_flags@plt>
    c834:	str	x0, [sp, #136]
    c838:	ldr	x0, [sp, #136]
    c83c:	str	x0, [sp, #144]
    c840:	ldr	x0, [sp, #24]
    c844:	ldr	x1, [x0, #24]
    c848:	ldrsw	x0, [sp, #48]
    c84c:	add	x0, x0, #0x1
    c850:	lsl	x0, x0, #3
    c854:	add	x0, x1, x0
    c858:	ldr	x0, [x0]
    c85c:	ldr	w0, [x0, #12]
    c860:	and	w0, w0, #0x800
    c864:	cmp	w0, #0x0
    c868:	b.eq	c944 <XS_B__UNOP_AUX_aux_list+0x254>  // b.none
    c86c:	b	c87c <XS_B__UNOP_AUX_aux_list+0x18c>
    c870:	adrp	x0, 18000 <boot_B+0x23d8>
    c874:	add	x0, x0, #0xdb8
    c878:	bl	4e60 <Perl_croak_nocontext@plt>
    c87c:	ldr	x0, [sp, #24]
    c880:	ldr	x1, [x0, #24]
    c884:	ldrsw	x0, [sp, #48]
    c888:	add	x0, x0, #0x1
    c88c:	lsl	x0, x0, #3
    c890:	add	x0, x1, x0
    c894:	ldr	x0, [x0]
    c898:	ldr	x0, [x0, #16]
    c89c:	ldr	w1, [x0, #12]
    c8a0:	mov	w0, #0x100                 	// #256
    c8a4:	movk	w0, #0x20, lsl #16
    c8a8:	and	w0, w1, w0
    c8ac:	cmp	w0, #0x100
    c8b0:	b.ne	c8e0 <XS_B__UNOP_AUX_aux_list+0x1f0>  // b.any
    c8b4:	ldr	x0, [sp, #24]
    c8b8:	ldr	x1, [x0, #24]
    c8bc:	ldrsw	x0, [sp, #48]
    c8c0:	add	x0, x0, #0x1
    c8c4:	lsl	x0, x0, #3
    c8c8:	add	x0, x1, x0
    c8cc:	ldr	x0, [x0]
    c8d0:	ldr	x0, [x0, #16]
    c8d4:	ldr	x0, [x0]
    c8d8:	ldr	x0, [x0, #32]
    c8dc:	b	c910 <XS_B__UNOP_AUX_aux_list+0x220>
    c8e0:	ldr	x0, [sp, #24]
    c8e4:	ldr	x1, [x0, #24]
    c8e8:	ldrsw	x0, [sp, #48]
    c8ec:	add	x0, x0, #0x1
    c8f0:	lsl	x0, x0, #3
    c8f4:	add	x0, x1, x0
    c8f8:	ldr	x0, [x0]
    c8fc:	ldr	x0, [x0, #16]
    c900:	mov	w2, #0x2                   	// #2
    c904:	mov	x1, x0
    c908:	ldr	x0, [sp, #24]
    c90c:	bl	4b20 <Perl_sv_2iv_flags@plt>
    c910:	str	x0, [sp, #152]
    c914:	ldr	x0, [sp, #152]
    c918:	str	x0, [sp, #160]
    c91c:	ldr	x0, [sp, #144]
    c920:	ldr	x0, [x0, #48]
    c924:	str	x0, [sp, #168]
    c928:	ldr	x0, [sp, #144]
    c92c:	ldrh	w0, [x0, #32]
    c930:	ubfx	x0, x0, #0, #9
    c934:	and	w0, w0, #0xffff
    c938:	cmp	w0, #0xbc
    c93c:	b.eq	c9a8 <XS_B__UNOP_AUX_aux_list+0x2b8>  // b.none
    c940:	b	c950 <XS_B__UNOP_AUX_aux_list+0x260>
    c944:	adrp	x0, 18000 <boot_B+0x23d8>
    c948:	add	x0, x0, #0xf48
    c94c:	bl	4e60 <Perl_croak_nocontext@plt>
    c950:	cmp	w0, #0xbc
    c954:	b.gt	c978 <XS_B__UNOP_AUX_aux_list+0x288>
    c958:	cmp	w0, #0xbb
    c95c:	b.eq	ca50 <XS_B__UNOP_AUX_aux_list+0x360>  // b.none
    c960:	cmp	w0, #0xbb
    c964:	b.gt	c978 <XS_B__UNOP_AUX_aux_list+0x288>
    c968:	cmp	w0, #0x43
    c96c:	b.eq	cb70 <XS_B__UNOP_AUX_aux_list+0x480>  // b.none
    c970:	cmp	w0, #0x99
    c974:	b.eq	ce00 <XS_B__UNOP_AUX_aux_list+0x710>  // b.none
    c978:	str	xzr, [sp, #248]
    c97c:	ldr	x0, [sp, #24]
    c980:	ldr	x1, [x0, #24]
    c984:	ldrsw	x2, [sp, #48]
    c988:	ldr	x0, [sp, #248]
    c98c:	add	x0, x2, x0
    c990:	lsl	x0, x0, #3
    c994:	sub	x0, x0, #0x8
    c998:	add	x1, x1, x0
    c99c:	ldr	x0, [sp, #24]
    c9a0:	str	x1, [x0]
    c9a4:	b	d390 <XS_B__UNOP_AUX_aux_list+0xca0>
    c9a8:	ldr	x0, [sp, #24]
    c9ac:	ldr	x1, [x0, #32]
    c9b0:	ldr	x0, [sp, #56]
    c9b4:	sub	x0, x1, x0
    c9b8:	cmp	x0, #0x0
    c9bc:	cset	w0, le
    c9c0:	and	w0, w0, #0xff
    c9c4:	and	x0, x0, #0xff
    c9c8:	cmp	x0, #0x0
    c9cc:	b.eq	c9e8 <XS_B__UNOP_AUX_aux_list+0x2f8>  // b.none
    c9d0:	mov	x3, #0x1                   	// #1
    c9d4:	ldr	x2, [sp, #56]
    c9d8:	ldr	x1, [sp, #56]
    c9dc:	ldr	x0, [sp, #24]
    c9e0:	bl	4b70 <Perl_stack_grow@plt>
    c9e4:	str	x0, [sp, #56]
    c9e8:	ldr	x0, [sp, #168]
    c9ec:	mov	x1, x0
    c9f0:	ldr	x0, [sp, #24]
    c9f4:	bl	5020 <Perl_newSViv@plt>
    c9f8:	mov	x1, x0
    c9fc:	ldr	x0, [sp, #56]
    ca00:	add	x0, x0, #0x8
    ca04:	str	x0, [sp, #56]
    ca08:	ldr	x0, [sp, #24]
    ca0c:	bl	4ec0 <Perl_sv_2mortal@plt>
    ca10:	mov	x1, x0
    ca14:	ldr	x0, [sp, #56]
    ca18:	str	x1, [x0]
    ca1c:	mov	x0, #0x1                   	// #1
    ca20:	str	x0, [sp, #176]
    ca24:	ldr	x0, [sp, #24]
    ca28:	ldr	x1, [x0, #24]
    ca2c:	ldrsw	x2, [sp, #48]
    ca30:	ldr	x0, [sp, #176]
    ca34:	add	x0, x2, x0
    ca38:	lsl	x0, x0, #3
    ca3c:	sub	x0, x0, #0x8
    ca40:	add	x1, x1, x0
    ca44:	ldr	x0, [sp, #24]
    ca48:	str	x1, [x0]
    ca4c:	b	d390 <XS_B__UNOP_AUX_aux_list+0xca0>
    ca50:	ldr	x0, [sp, #24]
    ca54:	ldr	x1, [x0, #32]
    ca58:	ldr	x0, [sp, #56]
    ca5c:	sub	x0, x1, x0
    ca60:	cmp	x0, #0x10
    ca64:	cset	w0, le
    ca68:	and	w0, w0, #0xff
    ca6c:	and	x0, x0, #0xff
    ca70:	cmp	x0, #0x0
    ca74:	b.eq	ca90 <XS_B__UNOP_AUX_aux_list+0x3a0>  // b.none
    ca78:	mov	x3, #0x3                   	// #3
    ca7c:	ldr	x2, [sp, #56]
    ca80:	ldr	x1, [sp, #56]
    ca84:	ldr	x0, [sp, #24]
    ca88:	bl	4b70 <Perl_stack_grow@plt>
    ca8c:	str	x0, [sp, #56]
    ca90:	ldr	x0, [sp, #168]
    ca94:	ldr	x0, [x0]
    ca98:	mov	x1, x0
    ca9c:	ldr	x0, [sp, #24]
    caa0:	bl	5020 <Perl_newSViv@plt>
    caa4:	mov	x1, x0
    caa8:	ldr	x0, [sp, #56]
    caac:	add	x0, x0, #0x8
    cab0:	str	x0, [sp, #56]
    cab4:	ldr	x0, [sp, #24]
    cab8:	bl	4ec0 <Perl_sv_2mortal@plt>
    cabc:	mov	x1, x0
    cac0:	ldr	x0, [sp, #56]
    cac4:	str	x1, [x0]
    cac8:	ldr	x0, [sp, #168]
    cacc:	add	x0, x0, #0x8
    cad0:	ldr	x0, [x0]
    cad4:	mov	x1, x0
    cad8:	ldr	x0, [sp, #24]
    cadc:	bl	5020 <Perl_newSViv@plt>
    cae0:	mov	x1, x0
    cae4:	ldr	x0, [sp, #56]
    cae8:	add	x0, x0, #0x8
    caec:	str	x0, [sp, #56]
    caf0:	ldr	x0, [sp, #24]
    caf4:	bl	4ec0 <Perl_sv_2mortal@plt>
    caf8:	mov	x1, x0
    cafc:	ldr	x0, [sp, #56]
    cb00:	str	x1, [x0]
    cb04:	ldr	x0, [sp, #168]
    cb08:	add	x0, x0, #0x10
    cb0c:	ldr	x0, [x0]
    cb10:	cmp	x0, #0x0
    cb14:	b.eq	cb40 <XS_B__UNOP_AUX_aux_list+0x450>  // b.none
    cb18:	ldr	x0, [sp, #168]
    cb1c:	add	x0, x0, #0x10
    cb20:	ldr	x0, [x0]
    cb24:	and	w0, w0, #0xff
    cb28:	mov	w2, w0
    cb2c:	adrp	x0, 18000 <boot_B+0x23d8>
    cb30:	add	x1, x0, #0xf78
    cb34:	ldr	x0, [sp, #24]
    cb38:	bl	5060 <Perl_newSVpvf@plt>
    cb3c:	b	cb48 <XS_B__UNOP_AUX_aux_list+0x458>
    cb40:	ldr	x0, [sp, #24]
    cb44:	add	x0, x0, #0x168
    cb48:	ldr	x1, [sp, #56]
    cb4c:	add	x1, x1, #0x8
    cb50:	str	x1, [sp, #56]
    cb54:	mov	x1, x0
    cb58:	ldr	x0, [sp, #24]
    cb5c:	bl	4ec0 <Perl_sv_2mortal@plt>
    cb60:	mov	x1, x0
    cb64:	ldr	x0, [sp, #56]
    cb68:	str	x1, [x0]
    cb6c:	b	d380 <XS_B__UNOP_AUX_aux_list+0xc90>
    cb70:	str	wzr, [sp, #44]
    cb74:	ldr	x0, [sp, #168]
    cb78:	ldr	x0, [x0]
    cb7c:	str	x0, [sp, #64]
    cb80:	ldr	x0, [sp, #64]
    cb84:	add	x0, x0, #0x3
    cb88:	lsr	x0, x0, #63
    cb8c:	and	w0, w0, #0xff
    cb90:	and	x0, x0, #0xff
    cb94:	cmp	x0, #0x0
    cb98:	b.ne	cbd4 <XS_B__UNOP_AUX_aux_list+0x4e4>  // b.any
    cb9c:	ldr	x0, [sp, #24]
    cba0:	ldr	x1, [x0, #32]
    cba4:	ldr	x0, [sp, #56]
    cba8:	sub	x0, x1, x0
    cbac:	asr	x0, x0, #3
    cbb0:	mov	x1, x0
    cbb4:	ldr	x0, [sp, #64]
    cbb8:	add	x0, x0, #0x3
    cbbc:	cmp	x1, x0
    cbc0:	cset	w0, lt  // lt = tstop
    cbc4:	and	w0, w0, #0xff
    cbc8:	and	x0, x0, #0xff
    cbcc:	cmp	x0, #0x0
    cbd0:	b.eq	cbf4 <XS_B__UNOP_AUX_aux_list+0x504>  // b.none
    cbd4:	ldr	x0, [sp, #64]
    cbd8:	add	x0, x0, #0x3
    cbdc:	mov	x3, x0
    cbe0:	ldr	x2, [sp, #56]
    cbe4:	ldr	x1, [sp, #56]
    cbe8:	ldr	x0, [sp, #24]
    cbec:	bl	4b70 <Perl_stack_grow@plt>
    cbf0:	str	x0, [sp, #56]
    cbf4:	ldr	x1, [sp, #64]
    cbf8:	ldr	x0, [sp, #24]
    cbfc:	bl	5020 <Perl_newSViv@plt>
    cc00:	mov	x1, x0
    cc04:	ldr	x0, [sp, #56]
    cc08:	add	x0, x0, #0x8
    cc0c:	str	x0, [sp, #56]
    cc10:	ldr	x0, [sp, #24]
    cc14:	bl	4ec0 <Perl_sv_2mortal@plt>
    cc18:	mov	x1, x0
    cc1c:	ldr	x0, [sp, #56]
    cc20:	str	x1, [x0]
    cc24:	ldr	x0, [sp, #168]
    cc28:	add	x0, x0, #0x8
    cc2c:	ldr	x0, [x0]
    cc30:	str	x0, [sp, #72]
    cc34:	ldr	x0, [sp, #168]
    cc38:	add	x0, x0, #0x10
    cc3c:	ldr	x0, [x0]
    cc40:	str	x0, [sp, #80]
    cc44:	ldr	x0, [sp, #72]
    cc48:	cmp	x0, #0x0
    cc4c:	b.ne	cc78 <XS_B__UNOP_AUX_aux_list+0x588>  // b.any
    cc50:	ldr	x0, [sp, #168]
    cc54:	add	x0, x0, #0x18
    cc58:	ldr	x0, [x0]
    cc5c:	str	x0, [sp, #72]
    cc60:	ldr	x0, [sp, #168]
    cc64:	add	x0, x0, #0x20
    cc68:	ldr	x0, [x0]
    cc6c:	str	x0, [sp, #80]
    cc70:	mov	w0, #0x20000000            	// #536870912
    cc74:	str	w0, [sp, #44]
    cc78:	ldr	x2, [sp, #80]
    cc7c:	ldr	x1, [sp, #72]
    cc80:	ldr	x0, [sp, #24]
    cc84:	bl	5070 <Perl_newSVpvn@plt>
    cc88:	str	x0, [sp, #232]
    cc8c:	ldr	x0, [sp, #232]
    cc90:	ldr	w1, [x0, #12]
    cc94:	ldr	w0, [sp, #44]
    cc98:	orr	w1, w1, w0
    cc9c:	ldr	x0, [sp, #232]
    cca0:	str	w1, [x0, #12]
    cca4:	ldr	x0, [sp, #56]
    cca8:	add	x0, x0, #0x8
    ccac:	str	x0, [sp, #56]
    ccb0:	ldr	x1, [sp, #232]
    ccb4:	ldr	x0, [sp, #24]
    ccb8:	bl	4ec0 <Perl_sv_2mortal@plt>
    ccbc:	mov	x1, x0
    ccc0:	ldr	x0, [sp, #56]
    ccc4:	str	x1, [x0]
    ccc8:	ldr	x0, [sp, #168]
    cccc:	add	x0, x0, #0x28
    ccd0:	str	x0, [sp, #88]
    ccd4:	ldr	x0, [sp, #64]
    ccd8:	add	x0, x0, #0x1
    ccdc:	str	x0, [sp, #64]
    cce0:	ldr	w0, [sp, #44]
    cce4:	cmp	w0, #0x0
    cce8:	b.eq	cde8 <XS_B__UNOP_AUX_aux_list+0x6f8>  // b.none
    ccec:	ldr	x0, [sp, #232]
    ccf0:	ldr	x0, [x0, #16]
    ccf4:	str	x0, [sp, #96]
    ccf8:	b	cd8c <XS_B__UNOP_AUX_aux_list+0x69c>
    ccfc:	ldr	x0, [sp, #88]
    cd00:	ldr	x0, [x0]
    cd04:	str	x0, [sp, #240]
    cd08:	ldr	x0, [sp, #240]
    cd0c:	cmp	x0, #0x0
    cd10:	b.gt	cd20 <XS_B__UNOP_AUX_aux_list+0x630>
    cd14:	ldr	x0, [sp, #240]
    cd18:	str	x0, [sp, #104]
    cd1c:	b	cd50 <XS_B__UNOP_AUX_aux_list+0x660>
    cd20:	ldr	x0, [sp, #240]
    cd24:	ldr	x1, [sp, #96]
    cd28:	add	x0, x1, x0
    cd2c:	mov	x2, x0
    cd30:	ldr	x1, [sp, #96]
    cd34:	ldr	x0, [sp, #24]
    cd38:	bl	4f30 <Perl_utf8_length@plt>
    cd3c:	str	x0, [sp, #104]
    cd40:	ldr	x0, [sp, #240]
    cd44:	ldr	x1, [sp, #96]
    cd48:	add	x0, x1, x0
    cd4c:	str	x0, [sp, #96]
    cd50:	ldr	x0, [sp, #88]
    cd54:	add	x0, x0, #0x8
    cd58:	str	x0, [sp, #88]
    cd5c:	ldr	x1, [sp, #104]
    cd60:	ldr	x0, [sp, #24]
    cd64:	bl	5020 <Perl_newSViv@plt>
    cd68:	mov	x1, x0
    cd6c:	ldr	x0, [sp, #56]
    cd70:	add	x0, x0, #0x8
    cd74:	str	x0, [sp, #56]
    cd78:	ldr	x0, [sp, #24]
    cd7c:	bl	4ec0 <Perl_sv_2mortal@plt>
    cd80:	mov	x1, x0
    cd84:	ldr	x0, [sp, #56]
    cd88:	str	x1, [x0]
    cd8c:	ldr	x0, [sp, #64]
    cd90:	sub	x1, x0, #0x1
    cd94:	str	x1, [sp, #64]
    cd98:	cmp	x0, #0x0
    cd9c:	b.ne	ccfc <XS_B__UNOP_AUX_aux_list+0x60c>  // b.any
    cda0:	b	d380 <XS_B__UNOP_AUX_aux_list+0xc90>
    cda4:	ldr	x0, [sp, #88]
    cda8:	ldr	x0, [x0]
    cdac:	mov	x1, x0
    cdb0:	ldr	x0, [sp, #24]
    cdb4:	bl	5020 <Perl_newSViv@plt>
    cdb8:	mov	x1, x0
    cdbc:	ldr	x0, [sp, #56]
    cdc0:	add	x0, x0, #0x8
    cdc4:	str	x0, [sp, #56]
    cdc8:	ldr	x0, [sp, #24]
    cdcc:	bl	4ec0 <Perl_sv_2mortal@plt>
    cdd0:	mov	x1, x0
    cdd4:	ldr	x0, [sp, #56]
    cdd8:	str	x1, [x0]
    cddc:	ldr	x0, [sp, #88]
    cde0:	add	x0, x0, #0x8
    cde4:	str	x0, [sp, #88]
    cde8:	ldr	x0, [sp, #64]
    cdec:	sub	x1, x0, #0x1
    cdf0:	str	x1, [sp, #64]
    cdf4:	cmp	x0, #0x0
    cdf8:	b.ne	cda4 <XS_B__UNOP_AUX_aux_list+0x6b4>  // b.any
    cdfc:	b	d380 <XS_B__UNOP_AUX_aux_list+0xc90>
    ce00:	ldr	x0, [sp, #144]
    ce04:	ldr	x0, [x0, #48]
    ce08:	str	x0, [sp, #112]
    ce0c:	ldr	x0, [sp, #112]
    ce10:	ldr	x0, [x0]
    ce14:	str	x0, [sp, #120]
    ce18:	ldr	x0, [sp, #112]
    ce1c:	sub	x0, x0, #0x8
    ce20:	ldr	x0, [x0]
    ce24:	str	x0, [sp, #184]
    ce28:	strb	wzr, [sp, #42]
    ce2c:	strb	wzr, [sp, #43]
    ce30:	ldr	x0, [sp, #160]
    ce34:	ldr	x0, [x0]
    ce38:	str	x0, [sp, #192]
    ce3c:	ldr	x0, [sp, #192]
    ce40:	ldr	x0, [x0, #72]
    ce44:	str	x0, [sp, #200]
    ce48:	ldr	x0, [sp, #200]
    ce4c:	ldr	x0, [x0, #8]
    ce50:	ldr	x0, [x0, #8]
    ce54:	str	x0, [sp, #208]
    ce58:	ldr	x0, [sp, #184]
    ce5c:	lsr	x0, x0, #63
    ce60:	and	w0, w0, #0xff
    ce64:	and	x0, x0, #0xff
    ce68:	cmp	x0, #0x0
    ce6c:	b.ne	cea4 <XS_B__UNOP_AUX_aux_list+0x7b4>  // b.any
    ce70:	ldr	x0, [sp, #24]
    ce74:	ldr	x1, [x0, #32]
    ce78:	ldr	x0, [sp, #56]
    ce7c:	sub	x0, x1, x0
    ce80:	asr	x0, x0, #3
    ce84:	mov	x1, x0
    ce88:	ldr	x0, [sp, #184]
    ce8c:	cmp	x1, x0
    ce90:	cset	w0, lt  // lt = tstop
    ce94:	and	w0, w0, #0xff
    ce98:	and	x0, x0, #0xff
    ce9c:	cmp	x0, #0x0
    cea0:	b.eq	cec0 <XS_B__UNOP_AUX_aux_list+0x7d0>  // b.none
    cea4:	ldr	x0, [sp, #184]
    cea8:	mov	x3, x0
    ceac:	ldr	x2, [sp, #56]
    ceb0:	ldr	x1, [sp, #56]
    ceb4:	ldr	x0, [sp, #24]
    ceb8:	bl	4b70 <Perl_stack_grow@plt>
    cebc:	str	x0, [sp, #56]
    cec0:	ldr	x0, [sp, #120]
    cec4:	mov	x1, x0
    cec8:	ldr	x0, [sp, #24]
    cecc:	bl	5020 <Perl_newSViv@plt>
    ced0:	mov	x1, x0
    ced4:	ldr	x0, [sp, #56]
    ced8:	add	x0, x0, #0x8
    cedc:	str	x0, [sp, #56]
    cee0:	ldr	x0, [sp, #24]
    cee4:	bl	4ec0 <Perl_sv_2mortal@plt>
    cee8:	mov	x1, x0
    ceec:	ldr	x0, [sp, #56]
    cef0:	str	x1, [x0]
    cef4:	b	d338 <XS_B__UNOP_AUX_aux_list+0xc48>
    cef8:	ldr	x0, [sp, #120]
    cefc:	and	x0, x0, #0xf
    cf00:	cmp	x0, #0xd
    cf04:	b.eq	d060 <XS_B__UNOP_AUX_aux_list+0x970>  // b.none
    cf08:	cmp	x0, #0xd
    cf0c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf10:	cmp	x0, #0xc
    cf14:	b.eq	d010 <XS_B__UNOP_AUX_aux_list+0x920>  // b.none
    cf18:	cmp	x0, #0xc
    cf1c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf20:	cmp	x0, #0xb
    cf24:	b.eq	d170 <XS_B__UNOP_AUX_aux_list+0xa80>  // b.none
    cf28:	cmp	x0, #0xb
    cf2c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf30:	cmp	x0, #0xa
    cf34:	b.eq	d120 <XS_B__UNOP_AUX_aux_list+0xa30>  // b.none
    cf38:	cmp	x0, #0xa
    cf3c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf40:	cmp	x0, #0x9
    cf44:	b.eq	d0c0 <XS_B__UNOP_AUX_aux_list+0x9d0>  // b.none
    cf48:	cmp	x0, #0x9
    cf4c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf50:	cmp	x0, #0x8
    cf54:	b.eq	d170 <XS_B__UNOP_AUX_aux_list+0xa80>  // b.none
    cf58:	cmp	x0, #0x8
    cf5c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf60:	cmp	x0, #0x6
    cf64:	b.eq	d068 <XS_B__UNOP_AUX_aux_list+0x978>  // b.none
    cf68:	cmp	x0, #0x6
    cf6c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf70:	cmp	x0, #0x5
    cf74:	b.eq	d018 <XS_B__UNOP_AUX_aux_list+0x928>  // b.none
    cf78:	cmp	x0, #0x5
    cf7c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf80:	cmp	x0, #0x4
    cf84:	b.eq	d178 <XS_B__UNOP_AUX_aux_list+0xa88>  // b.none
    cf88:	cmp	x0, #0x4
    cf8c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cf90:	cmp	x0, #0x3
    cf94:	b.eq	d128 <XS_B__UNOP_AUX_aux_list+0xa38>  // b.none
    cf98:	cmp	x0, #0x3
    cf9c:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cfa0:	cmp	x0, #0x2
    cfa4:	b.eq	d0c8 <XS_B__UNOP_AUX_aux_list+0x9d8>  // b.none
    cfa8:	cmp	x0, #0x2
    cfac:	b.hi	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>  // b.pmore
    cfb0:	cmp	x0, #0x0
    cfb4:	b.eq	cfc4 <XS_B__UNOP_AUX_aux_list+0x8d4>  // b.none
    cfb8:	cmp	x0, #0x1
    cfbc:	b.eq	d178 <XS_B__UNOP_AUX_aux_list+0xa88>  // b.none
    cfc0:	b	d32c <XS_B__UNOP_AUX_aux_list+0xc3c>
    cfc4:	ldr	x0, [sp, #112]
    cfc8:	add	x0, x0, #0x8
    cfcc:	str	x0, [sp, #112]
    cfd0:	ldr	x0, [sp, #112]
    cfd4:	ldr	x0, [x0]
    cfd8:	str	x0, [sp, #120]
    cfdc:	ldr	x1, [sp, #120]
    cfe0:	ldr	x0, [sp, #24]
    cfe4:	bl	4f00 <Perl_newSVuv@plt>
    cfe8:	mov	x1, x0
    cfec:	ldr	x0, [sp, #56]
    cff0:	add	x0, x0, #0x8
    cff4:	str	x0, [sp, #56]
    cff8:	ldr	x0, [sp, #24]
    cffc:	bl	4ec0 <Perl_sv_2mortal@plt>
    d000:	mov	x1, x0
    d004:	ldr	x0, [sp, #56]
    d008:	str	x1, [x0]
    d00c:	b	d338 <XS_B__UNOP_AUX_aux_list+0xc48>
    d010:	mov	w0, #0x1                   	// #1
    d014:	strb	w0, [sp, #43]
    d018:	ldr	x0, [sp, #112]
    d01c:	add	x0, x0, #0x8
    d020:	str	x0, [sp, #112]
    d024:	ldr	x0, [sp, #112]
    d028:	ldr	x0, [x0]
    d02c:	mov	x1, x0
    d030:	ldr	x0, [sp, #24]
    d034:	bl	4f00 <Perl_newSVuv@plt>
    d038:	mov	x1, x0
    d03c:	ldr	x0, [sp, #56]
    d040:	add	x0, x0, #0x8
    d044:	str	x0, [sp, #56]
    d048:	ldr	x0, [sp, #24]
    d04c:	bl	4ec0 <Perl_sv_2mortal@plt>
    d050:	mov	x1, x0
    d054:	ldr	x0, [sp, #56]
    d058:	str	x1, [x0]
    d05c:	b	d178 <XS_B__UNOP_AUX_aux_list+0xa88>
    d060:	mov	w0, #0x1                   	// #1
    d064:	strb	w0, [sp, #43]
    d068:	ldr	x0, [sp, #112]
    d06c:	add	x0, x0, #0x8
    d070:	str	x0, [sp, #112]
    d074:	ldr	x0, [sp, #112]
    d078:	ldr	x0, [x0]
    d07c:	mov	w3, #0x0                   	// #0
    d080:	mov	x2, x0
    d084:	ldr	x1, [sp, #208]
    d088:	ldr	x0, [sp, #24]
    d08c:	bl	4f20 <Perl_av_fetch@plt>
    d090:	ldr	x0, [x0]
    d094:	str	x0, [sp, #224]
    d098:	ldr	x0, [sp, #56]
    d09c:	add	x0, x0, #0x8
    d0a0:	str	x0, [sp, #56]
    d0a4:	ldr	x1, [sp, #224]
    d0a8:	ldr	x0, [sp, #24]
    d0ac:	bl	77c4 <make_sv_object>
    d0b0:	mov	x1, x0
    d0b4:	ldr	x0, [sp, #56]
    d0b8:	str	x1, [x0]
    d0bc:	b	d178 <XS_B__UNOP_AUX_aux_list+0xa88>
    d0c0:	mov	w0, #0x1                   	// #1
    d0c4:	strb	w0, [sp, #43]
    d0c8:	ldr	x0, [sp, #112]
    d0cc:	add	x0, x0, #0x8
    d0d0:	str	x0, [sp, #112]
    d0d4:	ldr	x0, [sp, #112]
    d0d8:	ldr	x0, [x0]
    d0dc:	mov	w3, #0x0                   	// #0
    d0e0:	mov	x2, x0
    d0e4:	ldr	x1, [sp, #208]
    d0e8:	ldr	x0, [sp, #24]
    d0ec:	bl	4f20 <Perl_av_fetch@plt>
    d0f0:	ldr	x0, [x0]
    d0f4:	str	x0, [sp, #224]
    d0f8:	ldr	x0, [sp, #56]
    d0fc:	add	x0, x0, #0x8
    d100:	str	x0, [sp, #56]
    d104:	ldr	x1, [sp, #224]
    d108:	ldr	x0, [sp, #24]
    d10c:	bl	77c4 <make_sv_object>
    d110:	mov	x1, x0
    d114:	ldr	x0, [sp, #56]
    d118:	str	x1, [x0]
    d11c:	b	d178 <XS_B__UNOP_AUX_aux_list+0xa88>
    d120:	mov	w0, #0x1                   	// #1
    d124:	strb	w0, [sp, #43]
    d128:	ldr	x0, [sp, #112]
    d12c:	add	x0, x0, #0x8
    d130:	str	x0, [sp, #112]
    d134:	ldr	x0, [sp, #112]
    d138:	ldr	x0, [x0]
    d13c:	mov	x1, x0
    d140:	ldr	x0, [sp, #24]
    d144:	bl	4f00 <Perl_newSVuv@plt>
    d148:	mov	x1, x0
    d14c:	ldr	x0, [sp, #56]
    d150:	add	x0, x0, #0x8
    d154:	str	x0, [sp, #56]
    d158:	ldr	x0, [sp, #24]
    d15c:	bl	4ec0 <Perl_sv_2mortal@plt>
    d160:	mov	x1, x0
    d164:	ldr	x0, [sp, #56]
    d168:	str	x1, [x0]
    d16c:	b	d178 <XS_B__UNOP_AUX_aux_list+0xa88>
    d170:	mov	w0, #0x1                   	// #1
    d174:	strb	w0, [sp, #43]
    d178:	ldr	x0, [sp, #120]
    d17c:	and	x0, x0, #0x30
    d180:	cmp	x0, #0x30
    d184:	b.eq	d2b4 <XS_B__UNOP_AUX_aux_list+0xbc4>  // b.none
    d188:	cmp	x0, #0x30
    d18c:	b.hi	d30c <XS_B__UNOP_AUX_aux_list+0xc1c>  // b.pmore
    d190:	cmp	x0, #0x20
    d194:	b.eq	d26c <XS_B__UNOP_AUX_aux_list+0xb7c>  // b.none
    d198:	cmp	x0, #0x20
    d19c:	b.hi	d30c <XS_B__UNOP_AUX_aux_list+0xc1c>  // b.pmore
    d1a0:	cmp	x0, #0x0
    d1a4:	b.eq	d1b4 <XS_B__UNOP_AUX_aux_list+0xac4>  // b.none
    d1a8:	cmp	x0, #0x10
    d1ac:	b.eq	d1c0 <XS_B__UNOP_AUX_aux_list+0xad0>  // b.none
    d1b0:	b	d30c <XS_B__UNOP_AUX_aux_list+0xc1c>
    d1b4:	mov	w0, #0x1                   	// #1
    d1b8:	strb	w0, [sp, #42]
    d1bc:	b	d30c <XS_B__UNOP_AUX_aux_list+0xc1c>
    d1c0:	ldrb	w0, [sp, #43]
    d1c4:	cmp	w0, #0x0
    d1c8:	b.eq	d224 <XS_B__UNOP_AUX_aux_list+0xb34>  // b.none
    d1cc:	ldr	x0, [sp, #112]
    d1d0:	add	x0, x0, #0x8
    d1d4:	str	x0, [sp, #112]
    d1d8:	ldr	x0, [sp, #112]
    d1dc:	ldr	x0, [x0]
    d1e0:	mov	w3, #0x0                   	// #0
    d1e4:	mov	x2, x0
    d1e8:	ldr	x1, [sp, #208]
    d1ec:	ldr	x0, [sp, #24]
    d1f0:	bl	4f20 <Perl_av_fetch@plt>
    d1f4:	ldr	x0, [x0]
    d1f8:	str	x0, [sp, #224]
    d1fc:	ldr	x0, [sp, #56]
    d200:	add	x0, x0, #0x8
    d204:	str	x0, [sp, #56]
    d208:	ldr	x1, [sp, #224]
    d20c:	ldr	x0, [sp, #24]
    d210:	bl	77c4 <make_sv_object>
    d214:	mov	x1, x0
    d218:	ldr	x0, [sp, #56]
    d21c:	str	x1, [x0]
    d220:	b	d30c <XS_B__UNOP_AUX_aux_list+0xc1c>
    d224:	ldr	x0, [sp, #112]
    d228:	add	x0, x0, #0x8
    d22c:	str	x0, [sp, #112]
    d230:	ldr	x0, [sp, #112]
    d234:	ldr	x0, [x0]
    d238:	mov	x1, x0
    d23c:	ldr	x0, [sp, #24]
    d240:	bl	5020 <Perl_newSViv@plt>
    d244:	mov	x1, x0
    d248:	ldr	x0, [sp, #56]
    d24c:	add	x0, x0, #0x8
    d250:	str	x0, [sp, #56]
    d254:	ldr	x0, [sp, #24]
    d258:	bl	4ec0 <Perl_sv_2mortal@plt>
    d25c:	mov	x1, x0
    d260:	ldr	x0, [sp, #56]
    d264:	str	x1, [x0]
    d268:	b	d30c <XS_B__UNOP_AUX_aux_list+0xc1c>
    d26c:	ldr	x0, [sp, #112]
    d270:	add	x0, x0, #0x8
    d274:	str	x0, [sp, #112]
    d278:	ldr	x0, [sp, #112]
    d27c:	ldr	x0, [x0]
    d280:	mov	x1, x0
    d284:	ldr	x0, [sp, #24]
    d288:	bl	4f00 <Perl_newSVuv@plt>
    d28c:	mov	x1, x0
    d290:	ldr	x0, [sp, #56]
    d294:	add	x0, x0, #0x8
    d298:	str	x0, [sp, #56]
    d29c:	ldr	x0, [sp, #24]
    d2a0:	bl	4ec0 <Perl_sv_2mortal@plt>
    d2a4:	mov	x1, x0
    d2a8:	ldr	x0, [sp, #56]
    d2ac:	str	x1, [x0]
    d2b0:	b	d30c <XS_B__UNOP_AUX_aux_list+0xc1c>
    d2b4:	ldr	x0, [sp, #112]
    d2b8:	add	x0, x0, #0x8
    d2bc:	str	x0, [sp, #112]
    d2c0:	ldr	x0, [sp, #112]
    d2c4:	ldr	x0, [x0]
    d2c8:	mov	w3, #0x0                   	// #0
    d2cc:	mov	x2, x0
    d2d0:	ldr	x1, [sp, #208]
    d2d4:	ldr	x0, [sp, #24]
    d2d8:	bl	4f20 <Perl_av_fetch@plt>
    d2dc:	ldr	x0, [x0]
    d2e0:	str	x0, [sp, #224]
    d2e4:	ldr	x0, [sp, #56]
    d2e8:	add	x0, x0, #0x8
    d2ec:	str	x0, [sp, #56]
    d2f0:	ldr	x1, [sp, #224]
    d2f4:	ldr	x0, [sp, #24]
    d2f8:	bl	77c4 <make_sv_object>
    d2fc:	mov	x1, x0
    d300:	ldr	x0, [sp, #56]
    d304:	str	x1, [x0]
    d308:	nop
    d30c:	ldr	x0, [sp, #120]
    d310:	and	x0, x0, #0x40
    d314:	cmp	x0, #0x0
    d318:	b.eq	d324 <XS_B__UNOP_AUX_aux_list+0xc34>  // b.none
    d31c:	mov	w0, #0x1                   	// #1
    d320:	strb	w0, [sp, #42]
    d324:	strb	wzr, [sp, #43]
    d328:	nop
    d32c:	ldr	x0, [sp, #120]
    d330:	lsr	x0, x0, #7
    d334:	str	x0, [sp, #120]
    d338:	ldrb	w0, [sp, #42]
    d33c:	eor	w0, w0, #0x1
    d340:	and	w0, w0, #0xff
    d344:	cmp	w0, #0x0
    d348:	b.ne	cef8 <XS_B__UNOP_AUX_aux_list+0x808>  // b.any
    d34c:	ldr	x0, [sp, #184]
    d350:	str	x0, [sp, #216]
    d354:	ldr	x0, [sp, #24]
    d358:	ldr	x1, [x0, #24]
    d35c:	ldrsw	x2, [sp, #48]
    d360:	ldr	x0, [sp, #216]
    d364:	add	x0, x2, x0
    d368:	lsl	x0, x0, #3
    d36c:	sub	x0, x0, #0x8
    d370:	add	x1, x1, x0
    d374:	ldr	x0, [sp, #24]
    d378:	str	x1, [x0]
    d37c:	b	d390 <XS_B__UNOP_AUX_aux_list+0xca0>
    d380:	ldr	x0, [sp, #24]
    d384:	ldr	x1, [sp, #56]
    d388:	str	x1, [x0]
    d38c:	nop
    d390:	ldp	x29, x30, [sp], #256
    d394:	ret

000000000000d398 <XS_B__SV_REFCNT>:
    d398:	stp	x29, x30, [sp, #-112]!
    d39c:	mov	x29, sp
    d3a0:	str	x0, [sp, #24]
    d3a4:	str	x1, [sp, #16]
    d3a8:	ldr	x0, [sp, #24]
    d3ac:	ldr	x0, [x0]
    d3b0:	str	x0, [sp, #48]
    d3b4:	ldr	x0, [sp, #24]
    d3b8:	bl	7424 <S_POPMARK>
    d3bc:	str	w0, [sp, #32]
    d3c0:	ldr	x0, [sp, #24]
    d3c4:	ldr	x1, [x0, #24]
    d3c8:	ldr	w0, [sp, #32]
    d3cc:	add	w2, w0, #0x1
    d3d0:	str	w2, [sp, #32]
    d3d4:	sxtw	x0, w0
    d3d8:	lsl	x0, x0, #3
    d3dc:	add	x0, x1, x0
    d3e0:	str	x0, [sp, #56]
    d3e4:	ldr	x1, [sp, #48]
    d3e8:	ldr	x0, [sp, #56]
    d3ec:	sub	x0, x1, x0
    d3f0:	asr	x0, x0, #3
    d3f4:	str	w0, [sp, #36]
    d3f8:	ldr	x0, [sp, #16]
    d3fc:	ldr	x0, [x0]
    d400:	str	x0, [sp, #64]
    d404:	ldr	x0, [sp, #64]
    d408:	ldr	w0, [x0, #40]
    d40c:	str	w0, [sp, #40]
    d410:	ldr	w0, [sp, #36]
    d414:	cmp	w0, #0x1
    d418:	b.eq	d42c <XS_B__SV_REFCNT+0x94>  // b.none
    d41c:	adrp	x0, 18000 <boot_B+0x23d8>
    d420:	add	x1, x0, #0xb40
    d424:	ldr	x0, [sp, #16]
    d428:	bl	4d70 <Perl_croak_xs_usage@plt>
    d42c:	ldr	x0, [sp, #24]
    d430:	ldr	x0, [x0, #8]
    d434:	ldrb	w0, [x0, #35]
    d438:	and	w0, w0, #0x4
    d43c:	cmp	w0, #0x0
    d440:	b.eq	d468 <XS_B__SV_REFCNT+0xd0>  // b.none
    d444:	ldr	x0, [sp, #24]
    d448:	ldr	x1, [x0, #16]
    d44c:	ldr	x0, [sp, #24]
    d450:	ldr	x0, [x0, #8]
    d454:	ldr	x0, [x0, #24]
    d458:	lsl	x0, x0, #3
    d45c:	add	x0, x1, x0
    d460:	ldr	x0, [x0]
    d464:	b	d470 <XS_B__SV_REFCNT+0xd8>
    d468:	ldr	x0, [sp, #24]
    d46c:	bl	5080 <Perl_sv_newmortal@plt>
    d470:	str	x0, [sp, #72]
    d474:	ldr	x0, [sp, #24]
    d478:	ldr	x1, [x0, #24]
    d47c:	ldrsw	x0, [sp, #32]
    d480:	lsl	x0, x0, #3
    d484:	add	x0, x1, x0
    d488:	ldr	x0, [x0]
    d48c:	ldr	w0, [x0, #12]
    d490:	and	w0, w0, #0x800
    d494:	cmp	w0, #0x0
    d498:	b.eq	d540 <XS_B__SV_REFCNT+0x1a8>  // b.none
    d49c:	ldr	x0, [sp, #24]
    d4a0:	ldr	x1, [x0, #24]
    d4a4:	ldrsw	x0, [sp, #32]
    d4a8:	lsl	x0, x0, #3
    d4ac:	add	x0, x1, x0
    d4b0:	ldr	x0, [x0]
    d4b4:	ldr	x0, [x0, #16]
    d4b8:	ldr	w1, [x0, #12]
    d4bc:	mov	w0, #0x100                 	// #256
    d4c0:	movk	w0, #0x20, lsl #16
    d4c4:	and	w0, w1, w0
    d4c8:	cmp	w0, #0x100
    d4cc:	b.ne	d4f8 <XS_B__SV_REFCNT+0x160>  // b.any
    d4d0:	ldr	x0, [sp, #24]
    d4d4:	ldr	x1, [x0, #24]
    d4d8:	ldrsw	x0, [sp, #32]
    d4dc:	lsl	x0, x0, #3
    d4e0:	add	x0, x1, x0
    d4e4:	ldr	x0, [x0]
    d4e8:	ldr	x0, [x0, #16]
    d4ec:	ldr	x0, [x0]
    d4f0:	ldr	x0, [x0, #32]
    d4f4:	b	d524 <XS_B__SV_REFCNT+0x18c>
    d4f8:	ldr	x0, [sp, #24]
    d4fc:	ldr	x1, [x0, #24]
    d500:	ldrsw	x0, [sp, #32]
    d504:	lsl	x0, x0, #3
    d508:	add	x0, x1, x0
    d50c:	ldr	x0, [x0]
    d510:	ldr	x0, [x0, #16]
    d514:	mov	w2, #0x2                   	// #2
    d518:	mov	x1, x0
    d51c:	ldr	x0, [sp, #24]
    d520:	bl	4b20 <Perl_sv_2iv_flags@plt>
    d524:	str	x0, [sp, #80]
    d528:	ldr	x0, [sp, #80]
    d52c:	str	x0, [sp, #88]
    d530:	ldr	w0, [sp, #40]
    d534:	cmp	w0, #0x0
    d538:	b.eq	d560 <XS_B__SV_REFCNT+0x1c8>  // b.none
    d53c:	b	d54c <XS_B__SV_REFCNT+0x1b4>
    d540:	adrp	x0, 18000 <boot_B+0x23d8>
    d544:	add	x0, x0, #0xf80
    d548:	bl	4e60 <Perl_croak_nocontext@plt>
    d54c:	ldr	x0, [sp, #88]
    d550:	ldr	w1, [x0, #12]
    d554:	ldr	w0, [sp, #40]
    d558:	and	w0, w1, w0
    d55c:	b	d568 <XS_B__SV_REFCNT+0x1d0>
    d560:	ldr	x0, [sp, #88]
    d564:	ldr	w0, [x0, #8]
    d568:	str	w0, [sp, #44]
    d56c:	ldr	x0, [sp, #24]
    d570:	ldr	x1, [x0, #24]
    d574:	ldrsw	x0, [sp, #32]
    d578:	lsl	x0, x0, #3
    d57c:	sub	x0, x0, #0x8
    d580:	add	x0, x1, x0
    d584:	str	x0, [sp, #48]
    d588:	ldr	w0, [sp, #44]
    d58c:	str	x0, [sp, #96]
    d590:	ldr	x0, [sp, #72]
    d594:	ldr	w1, [x0, #12]
    d598:	mov	w0, #0x8ff                 	// #2303
    d59c:	movk	w0, #0x9981, lsl #16
    d5a0:	and	w0, w1, w0
    d5a4:	cmp	w0, #0x1
    d5a8:	cset	w0, eq  // eq = none
    d5ac:	and	w0, w0, #0xff
    d5b0:	mov	w1, w0
    d5b4:	ldr	x0, [sp, #24]
    d5b8:	ldrb	w0, [x0, #185]
    d5bc:	eor	w0, w0, #0x1
    d5c0:	and	w0, w0, #0xff
    d5c4:	and	w0, w1, w0
    d5c8:	ldr	x1, [sp, #96]
    d5cc:	mvn	x1, x1
    d5d0:	lsr	x1, x1, #63
    d5d4:	and	w1, w1, #0xff
    d5d8:	and	w0, w0, w1
    d5dc:	cmp	w0, #0x0
    d5e0:	cset	w0, ne  // ne = any
    d5e4:	and	w0, w0, #0xff
    d5e8:	and	x0, x0, #0xff
    d5ec:	cmp	x0, #0x0
    d5f0:	b.eq	d61c <XS_B__SV_REFCNT+0x284>  // b.none
    d5f4:	ldr	x0, [sp, #72]
    d5f8:	ldr	w1, [x0, #12]
    d5fc:	mov	w0, #0x1100                	// #4352
    d600:	orr	w1, w1, w0
    d604:	ldr	x0, [sp, #72]
    d608:	str	w1, [x0, #12]
    d60c:	ldr	x1, [sp, #96]
    d610:	ldr	x0, [sp, #72]
    d614:	str	x1, [x0, #16]
    d618:	b	d62c <XS_B__SV_REFCNT+0x294>
    d61c:	ldr	x2, [sp, #96]
    d620:	ldr	x1, [sp, #72]
    d624:	ldr	x0, [sp, #24]
    d628:	bl	4fe0 <Perl_sv_setuv_mg@plt>
    d62c:	ldr	x0, [sp, #48]
    d630:	add	x0, x0, #0x8
    d634:	str	x0, [sp, #48]
    d638:	ldr	x0, [sp, #48]
    d63c:	ldr	x1, [sp, #72]
    d640:	str	x1, [x0]
    d644:	mov	x0, #0x1                   	// #1
    d648:	str	x0, [sp, #104]
    d64c:	ldr	x0, [sp, #24]
    d650:	ldr	x1, [x0, #24]
    d654:	ldrsw	x2, [sp, #32]
    d658:	ldr	x0, [sp, #104]
    d65c:	add	x0, x2, x0
    d660:	lsl	x0, x0, #3
    d664:	sub	x0, x0, #0x8
    d668:	add	x1, x1, x0
    d66c:	ldr	x0, [sp, #24]
    d670:	str	x1, [x0]
    d674:	nop
    d678:	ldp	x29, x30, [sp], #112
    d67c:	ret

000000000000d680 <XS_B__SV_object_2svref>:
    d680:	stp	x29, x30, [sp, #-96]!
    d684:	mov	x29, sp
    d688:	str	x19, [sp, #16]
    d68c:	str	x0, [sp, #40]
    d690:	str	x1, [sp, #32]
    d694:	ldr	x0, [sp, #40]
    d698:	ldr	x0, [x0]
    d69c:	str	x0, [sp, #56]
    d6a0:	ldr	x0, [sp, #40]
    d6a4:	bl	7424 <S_POPMARK>
    d6a8:	str	w0, [sp, #48]
    d6ac:	ldr	x0, [sp, #40]
    d6b0:	ldr	x1, [x0, #24]
    d6b4:	ldr	w0, [sp, #48]
    d6b8:	add	w2, w0, #0x1
    d6bc:	str	w2, [sp, #48]
    d6c0:	sxtw	x0, w0
    d6c4:	lsl	x0, x0, #3
    d6c8:	add	x0, x1, x0
    d6cc:	str	x0, [sp, #64]
    d6d0:	ldr	x1, [sp, #56]
    d6d4:	ldr	x0, [sp, #64]
    d6d8:	sub	x0, x1, x0
    d6dc:	asr	x0, x0, #3
    d6e0:	str	w0, [sp, #52]
    d6e4:	ldr	w0, [sp, #52]
    d6e8:	cmp	w0, #0x1
    d6ec:	b.eq	d700 <XS_B__SV_object_2svref+0x80>  // b.none
    d6f0:	adrp	x0, 18000 <boot_B+0x23d8>
    d6f4:	add	x1, x0, #0xb40
    d6f8:	ldr	x0, [sp, #32]
    d6fc:	bl	4d70 <Perl_croak_xs_usage@plt>
    d700:	ldrsw	x0, [sp, #52]
    d704:	lsl	x0, x0, #3
    d708:	neg	x0, x0
    d70c:	ldr	x1, [sp, #56]
    d710:	add	x0, x1, x0
    d714:	str	x0, [sp, #56]
    d718:	ldr	x0, [sp, #40]
    d71c:	ldr	x1, [x0, #24]
    d720:	ldrsw	x0, [sp, #48]
    d724:	lsl	x0, x0, #3
    d728:	add	x0, x1, x0
    d72c:	ldr	x0, [x0]
    d730:	ldr	w0, [x0, #12]
    d734:	and	w0, w0, #0x800
    d738:	cmp	w0, #0x0
    d73c:	b.eq	d7d8 <XS_B__SV_object_2svref+0x158>  // b.none
    d740:	ldr	x0, [sp, #40]
    d744:	ldr	x1, [x0, #24]
    d748:	ldrsw	x0, [sp, #48]
    d74c:	lsl	x0, x0, #3
    d750:	add	x0, x1, x0
    d754:	ldr	x0, [x0]
    d758:	ldr	x0, [x0, #16]
    d75c:	ldr	w1, [x0, #12]
    d760:	mov	w0, #0x100                 	// #256
    d764:	movk	w0, #0x20, lsl #16
    d768:	and	w0, w1, w0
    d76c:	cmp	w0, #0x100
    d770:	b.ne	d79c <XS_B__SV_object_2svref+0x11c>  // b.any
    d774:	ldr	x0, [sp, #40]
    d778:	ldr	x1, [x0, #24]
    d77c:	ldrsw	x0, [sp, #48]
    d780:	lsl	x0, x0, #3
    d784:	add	x0, x1, x0
    d788:	ldr	x0, [x0]
    d78c:	ldr	x0, [x0, #16]
    d790:	ldr	x0, [x0]
    d794:	ldr	x0, [x0, #32]
    d798:	b	d7c8 <XS_B__SV_object_2svref+0x148>
    d79c:	ldr	x0, [sp, #40]
    d7a0:	ldr	x1, [x0, #24]
    d7a4:	ldrsw	x0, [sp, #48]
    d7a8:	lsl	x0, x0, #3
    d7ac:	add	x0, x1, x0
    d7b0:	ldr	x0, [x0]
    d7b4:	ldr	x0, [x0, #16]
    d7b8:	mov	w2, #0x2                   	// #2
    d7bc:	mov	x1, x0
    d7c0:	ldr	x0, [sp, #40]
    d7c4:	bl	4b20 <Perl_sv_2iv_flags@plt>
    d7c8:	str	x0, [sp, #72]
    d7cc:	ldr	x0, [sp, #72]
    d7d0:	str	x0, [sp, #80]
    d7d4:	b	d7e4 <XS_B__SV_object_2svref+0x164>
    d7d8:	adrp	x0, 18000 <boot_B+0x23d8>
    d7dc:	add	x0, x0, #0xf80
    d7e0:	bl	4e60 <Perl_croak_nocontext@plt>
    d7e4:	ldr	x1, [sp, #80]
    d7e8:	ldr	x0, [sp, #40]
    d7ec:	bl	4f90 <Perl_newRV@plt>
    d7f0:	mov	x2, x0
    d7f4:	ldr	x0, [sp, #40]
    d7f8:	ldr	x1, [x0, #24]
    d7fc:	ldrsw	x0, [sp, #48]
    d800:	lsl	x0, x0, #3
    d804:	add	x19, x1, x0
    d808:	mov	x1, x2
    d80c:	ldr	x0, [sp, #40]
    d810:	bl	4ec0 <Perl_sv_2mortal@plt>
    d814:	str	x0, [x19]
    d818:	mov	x0, #0x1                   	// #1
    d81c:	str	x0, [sp, #88]
    d820:	ldr	x0, [sp, #40]
    d824:	ldr	x1, [x0, #24]
    d828:	ldrsw	x2, [sp, #48]
    d82c:	ldr	x0, [sp, #88]
    d830:	add	x0, x2, x0
    d834:	lsl	x0, x0, #3
    d838:	sub	x0, x0, #0x8
    d83c:	add	x1, x1, x0
    d840:	ldr	x0, [sp, #40]
    d844:	str	x1, [x0]
    d848:	nop
    d84c:	ldr	x19, [sp, #16]
    d850:	ldp	x29, x30, [sp], #96
    d854:	ret

000000000000d858 <XS_B__IV_IV>:
    d858:	stp	x29, x30, [sp, #-112]!
    d85c:	mov	x29, sp
    d860:	str	x0, [sp, #24]
    d864:	str	x1, [sp, #16]
    d868:	ldr	x0, [sp, #24]
    d86c:	ldr	x0, [x0]
    d870:	str	x0, [sp, #48]
    d874:	ldr	x0, [sp, #24]
    d878:	bl	7424 <S_POPMARK>
    d87c:	str	w0, [sp, #40]
    d880:	ldr	x0, [sp, #24]
    d884:	ldr	x1, [x0, #24]
    d888:	ldr	w0, [sp, #40]
    d88c:	add	w2, w0, #0x1
    d890:	str	w2, [sp, #40]
    d894:	sxtw	x0, w0
    d898:	lsl	x0, x0, #3
    d89c:	add	x0, x1, x0
    d8a0:	str	x0, [sp, #56]
    d8a4:	ldr	x1, [sp, #48]
    d8a8:	ldr	x0, [sp, #56]
    d8ac:	sub	x0, x1, x0
    d8b0:	asr	x0, x0, #3
    d8b4:	str	w0, [sp, #44]
    d8b8:	ldr	w0, [sp, #44]
    d8bc:	cmp	w0, #0x1
    d8c0:	b.eq	d8d4 <XS_B__IV_IV+0x7c>  // b.none
    d8c4:	adrp	x0, 18000 <boot_B+0x23d8>
    d8c8:	add	x1, x0, #0xb40
    d8cc:	ldr	x0, [sp, #16]
    d8d0:	bl	4d70 <Perl_croak_xs_usage@plt>
    d8d4:	ldr	x0, [sp, #24]
    d8d8:	ldr	x0, [x0, #8]
    d8dc:	ldrb	w0, [x0, #35]
    d8e0:	and	w0, w0, #0x4
    d8e4:	cmp	w0, #0x0
    d8e8:	b.eq	d910 <XS_B__IV_IV+0xb8>  // b.none
    d8ec:	ldr	x0, [sp, #24]
    d8f0:	ldr	x1, [x0, #16]
    d8f4:	ldr	x0, [sp, #24]
    d8f8:	ldr	x0, [x0, #8]
    d8fc:	ldr	x0, [x0, #24]
    d900:	lsl	x0, x0, #3
    d904:	add	x0, x1, x0
    d908:	ldr	x0, [x0]
    d90c:	b	d918 <XS_B__IV_IV+0xc0>
    d910:	ldr	x0, [sp, #24]
    d914:	bl	5080 <Perl_sv_newmortal@plt>
    d918:	str	x0, [sp, #64]
    d91c:	ldr	x0, [sp, #24]
    d920:	ldr	x1, [x0, #24]
    d924:	ldrsw	x0, [sp, #40]
    d928:	lsl	x0, x0, #3
    d92c:	add	x0, x1, x0
    d930:	ldr	x0, [x0]
    d934:	ldr	w0, [x0, #12]
    d938:	and	w0, w0, #0x800
    d93c:	cmp	w0, #0x0
    d940:	b.eq	d9f8 <XS_B__IV_IV+0x1a0>  // b.none
    d944:	ldr	x0, [sp, #24]
    d948:	ldr	x1, [x0, #24]
    d94c:	ldrsw	x0, [sp, #40]
    d950:	lsl	x0, x0, #3
    d954:	add	x0, x1, x0
    d958:	ldr	x0, [x0]
    d95c:	ldr	x0, [x0, #16]
    d960:	ldr	w1, [x0, #12]
    d964:	mov	w0, #0x100                 	// #256
    d968:	movk	w0, #0x20, lsl #16
    d96c:	and	w0, w1, w0
    d970:	cmp	w0, #0x100
    d974:	b.ne	d9a0 <XS_B__IV_IV+0x148>  // b.any
    d978:	ldr	x0, [sp, #24]
    d97c:	ldr	x1, [x0, #24]
    d980:	ldrsw	x0, [sp, #40]
    d984:	lsl	x0, x0, #3
    d988:	add	x0, x1, x0
    d98c:	ldr	x0, [x0]
    d990:	ldr	x0, [x0, #16]
    d994:	ldr	x0, [x0]
    d998:	ldr	x0, [x0, #32]
    d99c:	b	d9cc <XS_B__IV_IV+0x174>
    d9a0:	ldr	x0, [sp, #24]
    d9a4:	ldr	x1, [x0, #24]
    d9a8:	ldrsw	x0, [sp, #40]
    d9ac:	lsl	x0, x0, #3
    d9b0:	add	x0, x1, x0
    d9b4:	ldr	x0, [x0]
    d9b8:	ldr	x0, [x0, #16]
    d9bc:	mov	w2, #0x2                   	// #2
    d9c0:	mov	x1, x0
    d9c4:	ldr	x0, [sp, #24]
    d9c8:	bl	4b20 <Perl_sv_2iv_flags@plt>
    d9cc:	str	x0, [sp, #72]
    d9d0:	ldr	x0, [sp, #72]
    d9d4:	str	x0, [sp, #80]
    d9d8:	ldr	x0, [sp, #80]
    d9dc:	ldr	w1, [x0, #12]
    d9e0:	mov	w0, #0x100                 	// #256
    d9e4:	movk	w0, #0x20, lsl #16
    d9e8:	and	w0, w1, w0
    d9ec:	cmp	w0, #0x100
    d9f0:	b.ne	da14 <XS_B__IV_IV+0x1bc>  // b.any
    d9f4:	b	da04 <XS_B__IV_IV+0x1ac>
    d9f8:	adrp	x0, 18000 <boot_B+0x23d8>
    d9fc:	add	x0, x0, #0xf80
    da00:	bl	4e60 <Perl_croak_nocontext@plt>
    da04:	ldr	x0, [sp, #80]
    da08:	ldr	x0, [x0]
    da0c:	ldr	x0, [x0, #32]
    da10:	b	da24 <XS_B__IV_IV+0x1cc>
    da14:	mov	w2, #0x2                   	// #2
    da18:	ldr	x1, [sp, #80]
    da1c:	ldr	x0, [sp, #24]
    da20:	bl	4b20 <Perl_sv_2iv_flags@plt>
    da24:	str	x0, [sp, #88]
    da28:	ldr	x0, [sp, #24]
    da2c:	ldr	x1, [x0, #24]
    da30:	ldrsw	x0, [sp, #40]
    da34:	lsl	x0, x0, #3
    da38:	sub	x0, x0, #0x8
    da3c:	add	x0, x1, x0
    da40:	str	x0, [sp, #48]
    da44:	ldr	x0, [sp, #88]
    da48:	str	x0, [sp, #96]
    da4c:	ldr	x0, [sp, #64]
    da50:	ldr	w1, [x0, #12]
    da54:	mov	w0, #0x8ff                 	// #2303
    da58:	movk	w0, #0x9981, lsl #16
    da5c:	and	w0, w1, w0
    da60:	cmp	w0, #0x1
    da64:	cset	w0, eq  // eq = none
    da68:	and	w0, w0, #0xff
    da6c:	mov	w1, w0
    da70:	ldr	x0, [sp, #24]
    da74:	ldrb	w0, [x0, #185]
    da78:	eor	w0, w0, #0x1
    da7c:	and	w0, w0, #0xff
    da80:	and	w0, w1, w0
    da84:	cmp	w0, #0x0
    da88:	cset	w0, ne  // ne = any
    da8c:	and	w0, w0, #0xff
    da90:	and	x0, x0, #0xff
    da94:	cmp	x0, #0x0
    da98:	b.eq	dac4 <XS_B__IV_IV+0x26c>  // b.none
    da9c:	ldr	x0, [sp, #64]
    daa0:	ldr	w1, [x0, #12]
    daa4:	mov	w0, #0x1100                	// #4352
    daa8:	orr	w1, w1, w0
    daac:	ldr	x0, [sp, #64]
    dab0:	str	w1, [x0, #12]
    dab4:	ldr	x0, [sp, #64]
    dab8:	ldr	x1, [sp, #96]
    dabc:	str	x1, [x0, #16]
    dac0:	b	dad4 <XS_B__IV_IV+0x27c>
    dac4:	ldr	x2, [sp, #96]
    dac8:	ldr	x1, [sp, #64]
    dacc:	ldr	x0, [sp, #24]
    dad0:	bl	4c60 <Perl_sv_setiv_mg@plt>
    dad4:	ldr	x0, [sp, #48]
    dad8:	add	x0, x0, #0x8
    dadc:	str	x0, [sp, #48]
    dae0:	ldr	x0, [sp, #48]
    dae4:	ldr	x1, [sp, #64]
    dae8:	str	x1, [x0]
    daec:	mov	x0, #0x1                   	// #1
    daf0:	str	x0, [sp, #104]
    daf4:	ldr	x0, [sp, #24]
    daf8:	ldr	x1, [x0, #24]
    dafc:	ldrsw	x2, [sp, #40]
    db00:	ldr	x0, [sp, #104]
    db04:	add	x0, x2, x0
    db08:	lsl	x0, x0, #3
    db0c:	sub	x0, x0, #0x8
    db10:	add	x1, x1, x0
    db14:	ldr	x0, [sp, #24]
    db18:	str	x1, [x0]
    db1c:	nop
    db20:	ldp	x29, x30, [sp], #112
    db24:	ret

000000000000db28 <XS_B__IV_IVX>:
    db28:	stp	x29, x30, [sp, #-112]!
    db2c:	mov	x29, sp
    db30:	str	x0, [sp, #24]
    db34:	str	x1, [sp, #16]
    db38:	ldr	x0, [sp, #24]
    db3c:	ldr	x0, [x0]
    db40:	str	x0, [sp, #56]
    db44:	ldr	x0, [sp, #24]
    db48:	bl	7424 <S_POPMARK>
    db4c:	str	w0, [sp, #36]
    db50:	ldr	x0, [sp, #24]
    db54:	ldr	x1, [x0, #24]
    db58:	ldr	w0, [sp, #36]
    db5c:	add	w2, w0, #0x1
    db60:	str	w2, [sp, #36]
    db64:	sxtw	x0, w0
    db68:	lsl	x0, x0, #3
    db6c:	add	x0, x1, x0
    db70:	str	x0, [sp, #64]
    db74:	ldr	x1, [sp, #56]
    db78:	ldr	x0, [sp, #64]
    db7c:	sub	x0, x1, x0
    db80:	asr	x0, x0, #3
    db84:	str	w0, [sp, #40]
    db88:	ldr	x0, [sp, #16]
    db8c:	ldr	x0, [x0]
    db90:	str	x0, [sp, #72]
    db94:	ldr	x0, [sp, #72]
    db98:	ldr	w0, [x0, #40]
    db9c:	str	w0, [sp, #44]
    dba0:	ldr	w0, [sp, #40]
    dba4:	cmp	w0, #0x1
    dba8:	b.eq	dbbc <XS_B__IV_IVX+0x94>  // b.none
    dbac:	adrp	x0, 18000 <boot_B+0x23d8>
    dbb0:	add	x1, x0, #0xb40
    dbb4:	ldr	x0, [sp, #16]
    dbb8:	bl	4d70 <Perl_croak_xs_usage@plt>
    dbbc:	ldrsw	x0, [sp, #40]
    dbc0:	lsl	x0, x0, #3
    dbc4:	neg	x0, x0
    dbc8:	ldr	x1, [sp, #56]
    dbcc:	add	x0, x1, x0
    dbd0:	str	x0, [sp, #56]
    dbd4:	ldr	x0, [sp, #24]
    dbd8:	ldr	x1, [x0, #24]
    dbdc:	ldrsw	x0, [sp, #36]
    dbe0:	lsl	x0, x0, #3
    dbe4:	add	x0, x1, x0
    dbe8:	ldr	x0, [x0]
    dbec:	ldr	w0, [x0, #12]
    dbf0:	and	w0, w0, #0x800
    dbf4:	cmp	w0, #0x0
    dbf8:	b.eq	dcc4 <XS_B__IV_IVX+0x19c>  // b.none
    dbfc:	ldr	x0, [sp, #24]
    dc00:	ldr	x1, [x0, #24]
    dc04:	ldrsw	x0, [sp, #36]
    dc08:	lsl	x0, x0, #3
    dc0c:	add	x0, x1, x0
    dc10:	ldr	x0, [x0]
    dc14:	ldr	x0, [x0, #16]
    dc18:	ldr	w1, [x0, #12]
    dc1c:	mov	w0, #0x100                 	// #256
    dc20:	movk	w0, #0x20, lsl #16
    dc24:	and	w0, w1, w0
    dc28:	cmp	w0, #0x100
    dc2c:	b.ne	dc58 <XS_B__IV_IVX+0x130>  // b.any
    dc30:	ldr	x0, [sp, #24]
    dc34:	ldr	x1, [x0, #24]
    dc38:	ldrsw	x0, [sp, #36]
    dc3c:	lsl	x0, x0, #3
    dc40:	add	x0, x1, x0
    dc44:	ldr	x0, [x0]
    dc48:	ldr	x0, [x0, #16]
    dc4c:	ldr	x0, [x0]
    dc50:	ldr	x0, [x0, #32]
    dc54:	b	dc84 <XS_B__IV_IVX+0x15c>
    dc58:	ldr	x0, [sp, #24]
    dc5c:	ldr	x1, [x0, #24]
    dc60:	ldrsw	x0, [sp, #36]
    dc64:	lsl	x0, x0, #3
    dc68:	add	x0, x1, x0
    dc6c:	ldr	x0, [x0]
    dc70:	ldr	x0, [x0, #16]
    dc74:	mov	w2, #0x2                   	// #2
    dc78:	mov	x1, x0
    dc7c:	ldr	x0, [sp, #24]
    dc80:	bl	4b20 <Perl_sv_2iv_flags@plt>
    dc84:	str	x0, [sp, #80]
    dc88:	ldr	x0, [sp, #80]
    dc8c:	str	x0, [sp, #88]
    dc90:	ldr	x0, [sp, #88]
    dc94:	ldr	x1, [x0]
    dc98:	ldr	w0, [sp, #44]
    dc9c:	mov	w0, w0
    dca0:	and	x0, x0, #0xffff
    dca4:	add	x0, x1, x0
    dca8:	str	x0, [sp, #96]
    dcac:	ldr	w0, [sp, #44]
    dcb0:	asr	w0, w0, #16
    dcb4:	and	w0, w0, #0xff
    dcb8:	cmp	w0, #0xb
    dcbc:	b.eq	df28 <XS_B__IV_IVX+0x400>  // b.none
    dcc0:	b	dcd0 <XS_B__IV_IVX+0x1a8>
    dcc4:	adrp	x0, 18000 <boot_B+0x23d8>
    dcc8:	add	x0, x0, #0xf80
    dccc:	bl	4e60 <Perl_croak_nocontext@plt>
    dcd0:	cmp	w0, #0xb
    dcd4:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dcd8:	cmp	w0, #0xa
    dcdc:	b.eq	defc <XS_B__IV_IVX+0x3d4>  // b.none
    dce0:	cmp	w0, #0xa
    dce4:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dce8:	cmp	w0, #0x9
    dcec:	b.eq	ded4 <XS_B__IV_IVX+0x3ac>  // b.none
    dcf0:	cmp	w0, #0x9
    dcf4:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dcf8:	cmp	w0, #0x8
    dcfc:	b.eq	deb8 <XS_B__IV_IVX+0x390>  // b.none
    dd00:	cmp	w0, #0x8
    dd04:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dd08:	cmp	w0, #0x7
    dd0c:	b.eq	de94 <XS_B__IV_IVX+0x36c>  // b.none
    dd10:	cmp	w0, #0x7
    dd14:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dd18:	cmp	w0, #0x6
    dd1c:	b.eq	de68 <XS_B__IV_IVX+0x340>  // b.none
    dd20:	cmp	w0, #0x6
    dd24:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dd28:	cmp	w0, #0x5
    dd2c:	b.eq	de3c <XS_B__IV_IVX+0x314>  // b.none
    dd30:	cmp	w0, #0x5
    dd34:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dd38:	cmp	w0, #0x4
    dd3c:	b.eq	de10 <XS_B__IV_IVX+0x2e8>  // b.none
    dd40:	cmp	w0, #0x4
    dd44:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dd48:	cmp	w0, #0x3
    dd4c:	b.eq	dde8 <XS_B__IV_IVX+0x2c0>  // b.none
    dd50:	cmp	w0, #0x3
    dd54:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dd58:	cmp	w0, #0x2
    dd5c:	b.eq	ddc0 <XS_B__IV_IVX+0x298>  // b.none
    dd60:	cmp	w0, #0x2
    dd64:	b.gt	df54 <XS_B__IV_IVX+0x42c>
    dd68:	cmp	w0, #0x0
    dd6c:	b.eq	dd7c <XS_B__IV_IVX+0x254>  // b.none
    dd70:	cmp	w0, #0x1
    dd74:	b.eq	dd98 <XS_B__IV_IVX+0x270>  // b.none
    dd78:	b	df54 <XS_B__IV_IVX+0x42c>
    dd7c:	ldr	x0, [sp, #96]
    dd80:	ldr	x0, [x0]
    dd84:	mov	x1, x0
    dd88:	ldr	x0, [sp, #24]
    dd8c:	bl	77c4 <make_sv_object>
    dd90:	str	x0, [sp, #48]
    dd94:	b	df68 <XS_B__IV_IVX+0x440>
    dd98:	ldr	x0, [sp, #96]
    dd9c:	ldr	x0, [x0]
    dda0:	mov	x1, x0
    dda4:	ldr	x0, [sp, #24]
    dda8:	bl	5020 <Perl_newSViv@plt>
    ddac:	mov	x1, x0
    ddb0:	ldr	x0, [sp, #24]
    ddb4:	bl	4ec0 <Perl_sv_2mortal@plt>
    ddb8:	str	x0, [sp, #48]
    ddbc:	b	df68 <XS_B__IV_IVX+0x440>
    ddc0:	ldr	x0, [sp, #96]
    ddc4:	ldr	x0, [x0]
    ddc8:	mov	x1, x0
    ddcc:	ldr	x0, [sp, #24]
    ddd0:	bl	4f00 <Perl_newSVuv@plt>
    ddd4:	mov	x1, x0
    ddd8:	ldr	x0, [sp, #24]
    dddc:	bl	4ec0 <Perl_sv_2mortal@plt>
    dde0:	str	x0, [sp, #48]
    dde4:	b	df68 <XS_B__IV_IVX+0x440>
    dde8:	ldr	x0, [sp, #96]
    ddec:	ldr	x0, [x0]
    ddf0:	mov	x1, x0
    ddf4:	ldr	x0, [sp, #24]
    ddf8:	bl	4f00 <Perl_newSVuv@plt>
    ddfc:	mov	x1, x0
    de00:	ldr	x0, [sp, #24]
    de04:	bl	4ec0 <Perl_sv_2mortal@plt>
    de08:	str	x0, [sp, #48]
    de0c:	b	df68 <XS_B__IV_IVX+0x440>
    de10:	ldr	x0, [sp, #96]
    de14:	ldr	w0, [x0]
    de18:	mov	w0, w0
    de1c:	mov	x1, x0
    de20:	ldr	x0, [sp, #24]
    de24:	bl	4f00 <Perl_newSVuv@plt>
    de28:	mov	x1, x0
    de2c:	ldr	x0, [sp, #24]
    de30:	bl	4ec0 <Perl_sv_2mortal@plt>
    de34:	str	x0, [sp, #48]
    de38:	b	df68 <XS_B__IV_IVX+0x440>
    de3c:	ldr	x0, [sp, #96]
    de40:	ldrb	w0, [x0]
    de44:	and	x0, x0, #0xff
    de48:	mov	x1, x0
    de4c:	ldr	x0, [sp, #24]
    de50:	bl	4f00 <Perl_newSVuv@plt>
    de54:	mov	x1, x0
    de58:	ldr	x0, [sp, #24]
    de5c:	bl	4ec0 <Perl_sv_2mortal@plt>
    de60:	str	x0, [sp, #48]
    de64:	b	df68 <XS_B__IV_IVX+0x440>
    de68:	ldr	x0, [sp, #96]
    de6c:	ldr	x0, [x0]
    de70:	mov	x2, #0x0                   	// #0
    de74:	mov	x1, x0
    de78:	ldr	x0, [sp, #24]
    de7c:	bl	4e10 <Perl_newSVpv@plt>
    de80:	mov	x1, x0
    de84:	ldr	x0, [sp, #24]
    de88:	bl	4ec0 <Perl_sv_2mortal@plt>
    de8c:	str	x0, [sp, #48]
    de90:	b	df68 <XS_B__IV_IVX+0x440>
    de94:	ldr	x0, [sp, #96]
    de98:	ldr	d0, [x0]
    de9c:	ldr	x0, [sp, #24]
    dea0:	bl	4c90 <Perl_newSVnv@plt>
    dea4:	mov	x1, x0
    dea8:	ldr	x0, [sp, #24]
    deac:	bl	4ec0 <Perl_sv_2mortal@plt>
    deb0:	str	x0, [sp, #48]
    deb4:	b	df68 <XS_B__IV_IVX+0x440>
    deb8:	mov	w3, #0x80000               	// #524288
    debc:	mov	x2, #0x1                   	// #1
    dec0:	ldr	x1, [sp, #96]
    dec4:	ldr	x0, [sp, #24]
    dec8:	bl	4d80 <Perl_newSVpvn_flags@plt>
    decc:	str	x0, [sp, #48]
    ded0:	b	df68 <XS_B__IV_IVX+0x440>
    ded4:	ldr	x0, [sp, #96]
    ded8:	ldr	x0, [x0]
    dedc:	mov	x1, x0
    dee0:	ldr	x0, [sp, #24]
    dee4:	bl	5020 <Perl_newSViv@plt>
    dee8:	mov	x1, x0
    deec:	ldr	x0, [sp, #24]
    def0:	bl	4ec0 <Perl_sv_2mortal@plt>
    def4:	str	x0, [sp, #48]
    def8:	b	df68 <XS_B__IV_IVX+0x440>
    defc:	ldr	x0, [sp, #96]
    df00:	ldr	w0, [x0]
    df04:	sxtw	x0, w0
    df08:	mov	x1, x0
    df0c:	ldr	x0, [sp, #24]
    df10:	bl	4f00 <Perl_newSVuv@plt>
    df14:	mov	x1, x0
    df18:	ldr	x0, [sp, #24]
    df1c:	bl	4ec0 <Perl_sv_2mortal@plt>
    df20:	str	x0, [sp, #48]
    df24:	b	df68 <XS_B__IV_IVX+0x440>
    df28:	ldr	x0, [sp, #96]
    df2c:	ldrh	w0, [x0]
    df30:	and	x0, x0, #0xffff
    df34:	mov	x1, x0
    df38:	ldr	x0, [sp, #24]
    df3c:	bl	4f00 <Perl_newSVuv@plt>
    df40:	mov	x1, x0
    df44:	ldr	x0, [sp, #24]
    df48:	bl	4ec0 <Perl_sv_2mortal@plt>
    df4c:	str	x0, [sp, #48]
    df50:	b	df68 <XS_B__IV_IVX+0x440>
    df54:	ldr	w0, [sp, #44]
    df58:	mov	w1, w0
    df5c:	adrp	x0, 18000 <boot_B+0x23d8>
    df60:	add	x0, x0, #0xf98
    df64:	bl	4e60 <Perl_croak_nocontext@plt>
    df68:	ldr	x0, [sp, #24]
    df6c:	ldr	x1, [x0, #24]
    df70:	ldrsw	x0, [sp, #36]
    df74:	lsl	x0, x0, #3
    df78:	add	x0, x1, x0
    df7c:	ldr	x1, [sp, #48]
    df80:	str	x1, [x0]
    df84:	mov	x0, #0x1                   	// #1
    df88:	str	x0, [sp, #104]
    df8c:	ldr	x0, [sp, #24]
    df90:	ldr	x1, [x0, #24]
    df94:	ldrsw	x2, [sp, #36]
    df98:	ldr	x0, [sp, #104]
    df9c:	add	x0, x2, x0
    dfa0:	lsl	x0, x0, #3
    dfa4:	sub	x0, x0, #0x8
    dfa8:	add	x1, x1, x0
    dfac:	ldr	x0, [sp, #24]
    dfb0:	str	x1, [x0]
    dfb4:	nop
    dfb8:	ldp	x29, x30, [sp], #112
    dfbc:	ret

000000000000dfc0 <XS_B__IV_packiv>:
    dfc0:	stp	x29, x30, [sp, #-144]!
    dfc4:	mov	x29, sp
    dfc8:	str	x19, [sp, #16]
    dfcc:	str	x0, [sp, #40]
    dfd0:	str	x1, [sp, #32]
    dfd4:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    dfd8:	ldr	x0, [x0, #4008]
    dfdc:	ldr	x1, [x0]
    dfe0:	str	x1, [sp, #136]
    dfe4:	mov	x1, #0x0                   	// #0
    dfe8:	ldr	x0, [sp, #40]
    dfec:	ldr	x0, [x0]
    dff0:	str	x0, [sp, #72]
    dff4:	ldr	x0, [sp, #40]
    dff8:	bl	7424 <S_POPMARK>
    dffc:	str	w0, [sp, #60]
    e000:	ldr	x0, [sp, #40]
    e004:	ldr	x1, [x0, #24]
    e008:	ldr	w0, [sp, #60]
    e00c:	add	w2, w0, #0x1
    e010:	str	w2, [sp, #60]
    e014:	sxtw	x0, w0
    e018:	lsl	x0, x0, #3
    e01c:	add	x0, x1, x0
    e020:	str	x0, [sp, #80]
    e024:	ldr	x1, [sp, #72]
    e028:	ldr	x0, [sp, #80]
    e02c:	sub	x0, x1, x0
    e030:	asr	x0, x0, #3
    e034:	str	w0, [sp, #64]
    e038:	ldr	x0, [sp, #32]
    e03c:	ldr	x0, [x0]
    e040:	str	x0, [sp, #88]
    e044:	ldr	x0, [sp, #88]
    e048:	ldr	w0, [x0, #40]
    e04c:	str	w0, [sp, #68]
    e050:	ldr	w0, [sp, #64]
    e054:	cmp	w0, #0x1
    e058:	b.eq	e06c <XS_B__IV_packiv+0xac>  // b.none
    e05c:	adrp	x0, 18000 <boot_B+0x23d8>
    e060:	add	x1, x0, #0xb40
    e064:	ldr	x0, [sp, #32]
    e068:	bl	4d70 <Perl_croak_xs_usage@plt>
    e06c:	ldr	x0, [sp, #40]
    e070:	ldr	x1, [x0, #24]
    e074:	ldrsw	x0, [sp, #60]
    e078:	lsl	x0, x0, #3
    e07c:	add	x0, x1, x0
    e080:	ldr	x0, [x0]
    e084:	ldr	w0, [x0, #12]
    e088:	and	w0, w0, #0x800
    e08c:	cmp	w0, #0x0
    e090:	b.eq	e138 <XS_B__IV_packiv+0x178>  // b.none
    e094:	ldr	x0, [sp, #40]
    e098:	ldr	x1, [x0, #24]
    e09c:	ldrsw	x0, [sp, #60]
    e0a0:	lsl	x0, x0, #3
    e0a4:	add	x0, x1, x0
    e0a8:	ldr	x0, [x0]
    e0ac:	ldr	x0, [x0, #16]
    e0b0:	ldr	w1, [x0, #12]
    e0b4:	mov	w0, #0x100                 	// #256
    e0b8:	movk	w0, #0x20, lsl #16
    e0bc:	and	w0, w1, w0
    e0c0:	cmp	w0, #0x100
    e0c4:	b.ne	e0f0 <XS_B__IV_packiv+0x130>  // b.any
    e0c8:	ldr	x0, [sp, #40]
    e0cc:	ldr	x1, [x0, #24]
    e0d0:	ldrsw	x0, [sp, #60]
    e0d4:	lsl	x0, x0, #3
    e0d8:	add	x0, x1, x0
    e0dc:	ldr	x0, [x0]
    e0e0:	ldr	x0, [x0, #16]
    e0e4:	ldr	x0, [x0]
    e0e8:	ldr	x0, [x0, #32]
    e0ec:	b	e11c <XS_B__IV_packiv+0x15c>
    e0f0:	ldr	x0, [sp, #40]
    e0f4:	ldr	x1, [x0, #24]
    e0f8:	ldrsw	x0, [sp, #60]
    e0fc:	lsl	x0, x0, #3
    e100:	add	x0, x1, x0
    e104:	ldr	x0, [x0]
    e108:	ldr	x0, [x0, #16]
    e10c:	mov	w2, #0x2                   	// #2
    e110:	mov	x1, x0
    e114:	ldr	x0, [sp, #40]
    e118:	bl	4b20 <Perl_sv_2iv_flags@plt>
    e11c:	str	x0, [sp, #96]
    e120:	ldr	x0, [sp, #96]
    e124:	str	x0, [sp, #104]
    e128:	ldr	w0, [sp, #68]
    e12c:	cmp	w0, #0x0
    e130:	b.eq	e198 <XS_B__IV_packiv+0x1d8>  // b.none
    e134:	b	e144 <XS_B__IV_packiv+0x184>
    e138:	adrp	x0, 18000 <boot_B+0x23d8>
    e13c:	add	x0, x0, #0xf80
    e140:	bl	4e60 <Perl_croak_nocontext@plt>
    e144:	ldr	x0, [sp, #104]
    e148:	ldr	x0, [x0]
    e14c:	ldr	x0, [x0, #32]
    e150:	sxtw	x1, w0
    e154:	ldr	x0, [sp, #104]
    e158:	ldr	x0, [x0]
    e15c:	ldr	x0, [x0, #32]
    e160:	cmp	x1, x0
    e164:	b.eq	e174 <XS_B__IV_packiv+0x1b4>  // b.none
    e168:	ldr	x0, [sp, #40]
    e16c:	add	x0, x0, #0x138
    e170:	b	e17c <XS_B__IV_packiv+0x1bc>
    e174:	ldr	x0, [sp, #40]
    e178:	add	x0, x0, #0x168
    e17c:	ldr	x1, [sp, #40]
    e180:	ldr	x2, [x1, #24]
    e184:	ldrsw	x1, [sp, #60]
    e188:	lsl	x1, x1, #3
    e18c:	add	x1, x2, x1
    e190:	str	x0, [x1]
    e194:	b	e1f4 <XS_B__IV_packiv+0x234>
    e198:	ldr	x0, [sp, #104]
    e19c:	ldr	x0, [x0]
    e1a0:	ldr	x0, [x0, #32]
    e1a4:	str	x0, [sp, #112]
    e1a8:	ldr	x0, [sp, #112]
    e1ac:	lsr	x0, x0, #32
    e1b0:	bl	4b80 <htonl@plt>
    e1b4:	str	w0, [sp, #128]
    e1b8:	ldr	x0, [sp, #112]
    e1bc:	bl	4b80 <htonl@plt>
    e1c0:	str	w0, [sp, #132]
    e1c4:	ldr	x0, [sp, #40]
    e1c8:	ldr	x1, [x0, #24]
    e1cc:	ldrsw	x0, [sp, #60]
    e1d0:	lsl	x0, x0, #3
    e1d4:	add	x19, x1, x0
    e1d8:	add	x0, sp, #0x80
    e1dc:	mov	w3, #0x80000               	// #524288
    e1e0:	mov	x2, #0x8                   	// #8
    e1e4:	mov	x1, x0
    e1e8:	ldr	x0, [sp, #40]
    e1ec:	bl	4d80 <Perl_newSVpvn_flags@plt>
    e1f0:	str	x0, [x19]
    e1f4:	mov	x0, #0x1                   	// #1
    e1f8:	str	x0, [sp, #120]
    e1fc:	ldr	x0, [sp, #40]
    e200:	ldr	x1, [x0, #24]
    e204:	ldrsw	x2, [sp, #60]
    e208:	ldr	x0, [sp, #120]
    e20c:	add	x0, x2, x0
    e210:	lsl	x0, x0, #3
    e214:	sub	x0, x0, #0x8
    e218:	add	x1, x1, x0
    e21c:	ldr	x0, [sp, #40]
    e220:	str	x1, [x0]
    e224:	nop
    e228:	adrp	x0, 2f000 <values_for_uv.22728+0x14b0>
    e22c:	ldr	x0, [x0, #4008]
    e230:	ldr	x1, [sp, #136]
    e234:	ldr	x0, [x0]
    e238:	eor	x0, x1, x0
    e23c:	cmp	x0, #0x0
    e240:	b.eq	e248 <XS_B__IV_packiv+0x288>  // b.none
    e244:	bl	4d30 <__stack_chk_fail@plt>
    e248:	ldr	x19, [sp, #16]
    e24c:	ldp	x29, x30, [sp], #144
    e250:	ret

000000000000e254 <XS_B__NV_NV>:
    e254:	stp	x29, x30, [sp, #-112]!
    e258:	mov	x29, sp
    e25c:	str	x0, [sp, #24]
    e260:	str	x1, [sp, #16]
    e264:	ldr	x0, [sp, #24]
    e268:	ldr	x0, [x0]
    e26c:	str	x0, [sp, #48]
    e270:	ldr	x0, [sp, #24]
    e274:	bl	7424 <S_POPMARK>
    e278:	str	w0, [sp, #40]
    e27c:	ldr	x0, [sp, #24]
    e280:	ldr	x1, [x0, #24]
    e284:	ldr	w0, [sp, #40]
    e288:	add	w2, w0, #0x1
    e28c:	str	w2, [sp, #40]
    e290:	sxtw	x0, w0
    e294:	lsl	x0, x0, #3
    e298:	add	x0, x1, x0
    e29c:	str	x0, [sp, #56]
    e2a0:	ldr	x1, [sp, #48]
    e2a4:	ldr	x0, [sp, #56]
    e2a8:	sub	x0, x1, x0
    e2ac:	asr	x0, x0, #3
    e2b0:	str	w0, [sp, #44]
    e2b4:	ldr	w0, [sp, #44]
    e2b8:	cmp	w0, #0x1
    e2bc:	b.eq	e2d0 <XS_B__NV_NV+0x7c>  // b.none
    e2c0:	adrp	x0, 18000 <boot_B+0x23d8>
    e2c4:	add	x1, x0, #0xb40
    e2c8:	ldr	x0, [sp, #16]
    e2cc:	bl	4d70 <Perl_croak_xs_usage@plt>
    e2d0:	ldr	x0, [sp, #24]
    e2d4:	ldr	x0, [x0, #8]
    e2d8:	ldrb	w0, [x0, #35]
    e2dc:	and	w0, w0, #0x4
    e2e0:	cmp	w0, #0x0
    e2e4:	b.eq	e30c <XS_B__NV_NV+0xb8>  // b.none
    e2e8:	ldr	x0, [sp, #24]
    e2ec:	ldr	x1, [x0, #16]
    e2f0:	ldr	x0, [sp, #24]
    e2f4:	ldr	x0, [x0, #8]
    e2f8:	ldr	x0, [x0, #24]
    e2fc:	lsl	x0, x0, #3
    e300:	add	x0, x1, x0
    e304:	ldr	x0, [x0]
    e308:	b	e314 <XS_B__NV_NV+0xc0>
    e30c:	ldr	x0, [sp, #24]
    e310:	bl	5080 <Perl_sv_newmortal@plt>
    e314:	str	x0, [sp, #64]
    e318:	ldr	x0, [sp, #24]
    e31c:	ldr	x1, [x0, #24]
    e320:	ldrsw	x0, [sp, #40]
    e324:	lsl	x0, x0, #3
    e328:	add	x0, x1, x0
    e32c:	ldr	x0, [x0]
    e330:	ldr	w0, [x0, #12]
    e334:	and	w0, w0, #0x800
    e338:	cmp	w0, #0x0
    e33c:	b.eq	e3f4 <XS_B__NV_NV+0x1a0>  // b.none
    e340:	ldr	x0, [sp, #24]
    e344:	ldr	x1, [x0, #24]
    e348:	ldrsw	x0, [sp, #40]
    e34c:	lsl	x0, x0, #3
    e350:	add	x0, x1, x0
    e354:	ldr	x0, [x0]
    e358:	ldr	x0, [x0, #16]
    e35c:	ldr	w1, [x0, #12]
    e360:	mov	w0, #0x100                 	// #256
    e364:	movk	w0, #0x20, lsl #16
    e368:	and	w0, w1, w0
    e36c:	cmp	w0, #0x100
    e370:	b.ne	e39c <XS_B__NV_NV+0x148>  // b.any
    e374:	ldr	x0, [sp, #24]
    e378:	ldr	x1, [x0, #24]
    e37c:	ldrsw	x0, [sp, #40]
    e380:	lsl	x0, x0, #3
    e384:	add	x0, x1, x0
    e388:	ldr	x0, [x0]
    e38c:	ldr	x0, [x0, #16]
    e390:	ldr	x0, [x0]
    e394:	ldr	x0, [x0, #32]
    e398:	b	e3c8 <XS_B__NV_NV+0x174>
    e39c:	ldr	x0, [sp, #24]
    e3a0:	ldr	x1, [x0, #24]
    e3a4:	ldrsw	x0, [sp, #40]
    e3a8:	lsl	x0, x0, #3
    e3ac:	add	x0, x1, x0
    e3b0:	ldr	x0, [x0]
    e3b4:	ldr	x0, [x0, #16]
    e3b8:	mov	w2, #0x2                   	// #2
    e3bc:	mov	x1, x0
    e3c0:	ldr	x0, [sp, #24]
    e3c4:	bl	4b20 <Perl_sv_2iv_flags@plt>
    e3c8:	str	x0, [sp, #72]
    e3cc:	ldr	x0, [sp, #72]
    e3d0:	str	x0, [sp, #80]
    e3d4:	ldr	x0, [sp, #80]
    e3d8:	ldr	w1, [x0, #12]
    e3dc:	mov	w0, #0x200                 	// #512
    e3e0:	movk	w0, #0x20, lsl #16
    e3e4:	and	w0, w1, w0
    e3e8:	cmp	w0, #0x200
    e3ec:	b.ne	e410 <XS_B__NV_NV+0x1bc>  // b.any
    e3f0:	b	e400 <XS_B__NV_NV+0x1ac>
    e3f4:	adrp	x0, 18000 <boot_B+0x23d8>
    e3f8:	add	x0, x0, #0xf80
    e3fc:	bl	4e60 <Perl_croak_nocontext@plt>
    e400:	ldr	x0, [sp, #80]
    e404:	ldr	x0, [x0]
    e408:	ldr	d0, [x0, #40]
    e40c:	b	e420 <XS_B__NV_NV+0x1cc>
    e410:	mov	w2, #0x2                   	// #2
    e414:	ldr	x1, [sp, #80]
    e418:	ldr	x0, [sp, #24]
    e41c:	bl	4d90 <Perl_sv_2nv_flags@plt>
    e420:	str	d0, [sp, #88]
    e424:	ldr	x0, [sp, #24]
    e428:	ldr	x1, [x0, #24]
    e42c:	ldrsw	x0, [sp, #40]
    e430:	lsl	x0, x0, #3
    e434:	sub	x0, x0, #0x8
    e438:	add	x0, x1, x0
    e43c:	str	x0, [sp, #48]
    e440:	ldr	d0, [sp, #88]
    e444:	str	d0, [sp, #96]
    e448:	ldr	x0, [sp, #64]
    e44c:	ldr	w1, [x0, #12]
    e450:	mov	w0, #0x8ff                 	// #2303
    e454:	movk	w0, #0x1981, lsl #16
    e458:	and	w0, w1, w0
    e45c:	cmp	w0, #0x2
    e460:	cset	w0, eq  // eq = none
    e464:	and	w0, w0, #0xff
    e468:	mov	w1, w0
    e46c:	ldr	x0, [sp, #24]
    e470:	ldrb	w0, [x0, #185]
    e474:	eor	w0, w0, #0x1
    e478:	and	w0, w0, #0xff
    e47c:	and	w0, w1, w0
    e480:	cmp	w0, #0x0
    e484:	cset	w0, ne  // ne = any
    e488:	and	w0, w0, #0xff
    e48c:	and	x0, x0, #0xff
    e490:	cmp	x0, #0x0
    e494:	b.eq	e4c4 <XS_B__NV_NV+0x270>  // b.none
    e498:	ldr	x0, [sp, #64]
    e49c:	ldr	w1, [x0, #12]
    e4a0:	mov	w0, #0x2200                	// #8704
    e4a4:	orr	w1, w1, w0
    e4a8:	ldr	x0, [sp, #64]
    e4ac:	str	w1, [x0, #12]
    e4b0:	ldr	x0, [sp, #64]
    e4b4:	ldr	x0, [x0]
    e4b8:	ldr	d0, [sp, #96]
    e4bc:	str	d0, [x0, #40]
    e4c0:	b	e4d4 <XS_B__NV_NV+0x280>
    e4c4:	ldr	d0, [sp, #96]
    e4c8:	ldr	x1, [sp, #64]
    e4cc:	ldr	x0, [sp, #24]
    e4d0:	bl	4cc0 <Perl_sv_setnv_mg@plt>
    e4d4:	ldr	x0, [sp, #48]
    e4d8:	add	x0, x0, #0x8
    e4dc:	str	x0, [sp, #48]
    e4e0:	ldr	x0, [sp, #48]
    e4e4:	ldr	x1, [sp, #64]
    e4e8:	str	x1, [x0]
    e4ec:	mov	x0, #0x1                   	// #1
    e4f0:	str	x0, [sp, #104]
    e4f4:	ldr	x0, [sp, #24]
    e4f8:	ldr	x1, [x0, #24]
    e4fc:	ldrsw	x2, [sp, #40]
    e500:	ldr	x0, [sp, #104]
    e504:	add	x0, x2, x0
    e508:	lsl	x0, x0, #3
    e50c:	sub	x0, x0, #0x8
    e510:	add	x1, x1, x0
    e514:	ldr	x0, [sp, #24]
    e518:	str	x1, [x0]
    e51c:	nop
    e520:	ldp	x29, x30, [sp], #112
    e524:	ret

000000000000e528 <XS_B__REGEXP_REGEX>:
    e528:	stp	x29, x30, [sp, #-128]!
    e52c:	mov	x29, sp
    e530:	stp	x19, x20, [sp, #16]
    e534:	str	x0, [sp, #40]
    e538:	str	x1, [sp, #32]
    e53c:	ldr	x0, [sp, #40]
    e540:	ldr	x0, [x0]
    e544:	str	x0, [sp, #64]
    e548:	ldr	x0, [sp, #40]
    e54c:	bl	7424 <S_POPMARK>
    e550:	str	w0, [sp, #52]
    e554:	ldr	x0, [sp, #40]
    e558:	ldr	x1, [x0, #24]
    e55c:	ldr	w0, [sp, #52]
    e560:	add	w2, w0, #0x1
    e564:	str	w2, [sp, #52]
    e568:	sxtw	x0, w0
    e56c:	lsl	x0, x0, #3
    e570:	add	x0, x1, x0
    e574:	str	x0, [sp, #72]
    e578:	ldr	x1, [sp, #64]
    e57c:	ldr	x0, [sp, #72]
    e580:	sub	x0, x1, x0
    e584:	asr	x0, x0, #3
    e588:	str	w0, [sp, #56]
    e58c:	ldr	x0, [sp, #32]
    e590:	ldr	x0, [x0]
    e594:	str	x0, [sp, #80]
    e598:	ldr	x0, [sp, #80]
    e59c:	ldr	w0, [x0, #40]
    e5a0:	str	w0, [sp, #60]
    e5a4:	ldr	w0, [sp, #56]
    e5a8:	cmp	w0, #0x1
    e5ac:	b.eq	e5c0 <XS_B__REGEXP_REGEX+0x98>  // b.none
    e5b0:	adrp	x0, 18000 <boot_B+0x23d8>
    e5b4:	add	x1, x0, #0xb40
    e5b8:	ldr	x0, [sp, #32]
    e5bc:	bl	4d70 <Perl_croak_xs_usage@plt>
    e5c0:	ldrsw	x0, [sp, #56]
    e5c4:	lsl	x0, x0, #3
    e5c8:	neg	x0, x0
    e5cc:	ldr	x1, [sp, #64]
    e5d0:	add	x0, x1, x0
    e5d4:	str	x0, [sp, #64]
    e5d8:	ldr	x0, [sp, #40]
    e5dc:	ldr	x1, [x0, #24]
    e5e0:	ldrsw	x0, [sp, #52]
    e5e4:	lsl	x0, x0, #3
    e5e8:	add	x0, x1, x0
    e5ec:	ldr	x0, [x0]
    e5f0:	ldr	w0, [x0, #12]
    e5f4:	and	w0, w0, #0x800
    e5f8:	cmp	w0, #0x0
    e5fc:	b.eq	e6a4 <XS_B__REGEXP_REGEX+0x17c>  // b.none
    e600:	ldr	x0, [sp, #40]
    e604:	ldr	x1, [x0, #24]
    e608:	ldrsw	x0, [sp, #52]
    e60c:	lsl	x0, x0, #3
    e610:	add	x0, x1, x0
    e614:	ldr	x0, [x0]
    e618:	ldr	x0, [x0, #16]
    e61c:	ldr	w1, [x0, #12]
    e620:	mov	w0, #0x100                 	// #256
    e624:	movk	w0, #0x20, lsl #16
    e628:	and	w0, w1, w0
    e62c:	cmp	w0, #0x100
    e630:	b.ne	e65c <XS_B__REGEXP_REGEX+0x134>  // b.any
    e634:	ldr	x0, [sp, #40]
    e638:	ldr	x1, [x0, #24]
    e63c:	ldrsw	x0, [sp, #52]
    e640:	lsl	x0, x0, #3
    e644:	add	x0, x1, x0
    e648:	ldr	x0, [x0]
    e64c:	ldr	x0, [x0, #16]
    e650:	ldr	x0, [x0]
    e654:	ldr	x0, [x0, #32]
    e658:	b	e688 <XS_B__REGEXP_REGEX+0x160>
    e65c:	ldr	x0, [sp, #40]
    e660:	ldr	x1, [x0, #24]
    e664:	ldrsw	x0, [sp, #52]
    e668:	lsl	x0, x0, #3
    e66c:	add	x0, x1, x0
    e670:	ldr	x0, [x0]
    e674:	ldr	x0, [x0, #16]
    e678:	mov	w2, #0x2                   	// #2
    e67c:	mov	x1, x0
    e680:	ldr	x0, [sp, #40]
    e684:	bl	4b20 <Perl_sv_2iv_flags@plt>
    e688:	str	x0, [sp, #88]
    e68c:	ldr	x0, [sp, #88]
    e690:	str	x0, [sp, #96]
    e694:	ldr	w0, [sp, #60]
    e698:	cmp	w0, #0x1
    e69c:	b.ne	e730 <XS_B__REGEXP_REGEX+0x208>  // b.any
    e6a0:	b	e6b0 <XS_B__REGEXP_REGEX+0x188>
    e6a4:	adrp	x0, 18000 <boot_B+0x23d8>
    e6a8:	add	x0, x0, #0xf80
    e6ac:	bl	4e60 <Perl_croak_nocontext@plt>
    e6b0:	ldr	x0, [sp, #96]
    e6b4:	ldr	x19, [x0, #16]
    e6b8:	ldr	x0, [sp, #96]
    e6bc:	bl	744c <S_ReANY>
    e6c0:	ldrb	w0, [x0, #184]
    e6c4:	ubfx	x0, x0, #0, #4
    e6c8:	and	w0, w0, #0xff
    e6cc:	and	x0, x0, #0xff
    e6d0:	add	x20, x19, x0
    e6d4:	ldr	x0, [sp, #96]
    e6d8:	ldr	x0, [x0]
    e6dc:	ldr	x19, [x0, #16]
    e6e0:	ldr	x0, [sp, #96]
    e6e4:	bl	744c <S_ReANY>
    e6e8:	ldrb	w0, [x0, #184]
    e6ec:	ubfx	x0, x0, #0, #4
    e6f0:	and	w0, w0, #0xff
    e6f4:	and	x0, x0, #0xff
    e6f8:	sub	x0, x19, x0
    e6fc:	sub	x1, x0, #0x1
    e700:	ldr	x0, [sp, #64]
    e704:	add	x0, x0, #0x8
    e708:	str	x0, [sp, #64]
    e70c:	mov	w3, #0x80000               	// #524288
    e710:	mov	x2, x1
    e714:	mov	x1, x20
    e718:	ldr	x0, [sp, #40]
    e71c:	bl	4d80 <Perl_newSVpvn_flags@plt>
    e720:	mov	x1, x0
    e724:	ldr	x0, [sp, #64]
    e728:	str	x1, [x0]
    e72c:	b	e93c <XS_B__REGEXP_REGEX+0x414>
    e730:	ldr	w0, [sp, #60]
    e734:	cmp	w0, #0x2
    e738:	b.ne	e76c <XS_B__REGEXP_REGEX+0x244>  // b.any
    e73c:	ldr	x0, [sp, #96]
    e740:	bl	744c <S_ReANY>
    e744:	ldr	x1, [x0, #192]
    e748:	ldr	x0, [sp, #64]
    e74c:	add	x0, x0, #0x8
    e750:	str	x0, [sp, #64]
    e754:	ldr	x0, [sp, #40]
    e758:	bl	77c4 <make_sv_object>
    e75c:	mov	x1, x0
    e760:	ldr	x0, [sp, #64]
    e764:	str	x1, [x0]
    e768:	b	e93c <XS_B__REGEXP_REGEX+0x414>
    e76c:	ldr	x0, [sp, #40]
    e770:	ldr	x0, [x0, #8]
    e774:	ldrb	w0, [x0, #35]
    e778:	and	w0, w0, #0x4
    e77c:	cmp	w0, #0x0
    e780:	b.eq	e7a8 <XS_B__REGEXP_REGEX+0x280>  // b.none
    e784:	ldr	x0, [sp, #40]
    e788:	ldr	x1, [x0, #16]
    e78c:	ldr	x0, [sp, #40]
    e790:	ldr	x0, [x0, #8]
    e794:	ldr	x0, [x0, #24]
    e798:	lsl	x0, x0, #3
    e79c:	add	x0, x1, x0
    e7a0:	ldr	x0, [x0]
    e7a4:	b	e7b0 <XS_B__REGEXP_REGEX+0x288>
    e7a8:	ldr	x0, [sp, #40]
    e7ac:	bl	5080 <Perl_sv_newmortal@plt>
    e7b0:	str	x0, [sp, #104]
    e7b4:	ldr	w0, [sp, #60]
    e7b8:	cmp	w0, #0x0
    e7bc:	b.eq	e894 <XS_B__REGEXP_REGEX+0x36c>  // b.none
    e7c0:	ldr	x0, [sp, #96]
    e7c4:	bl	744c <S_ReANY>
    e7c8:	ldrh	w0, [x0, #184]
    e7cc:	ubfx	x0, x0, #4, #9
    e7d0:	and	w0, w0, #0xffff
    e7d4:	and	x0, x0, #0xffff
    e7d8:	str	x0, [sp, #120]
    e7dc:	ldr	x0, [sp, #104]
    e7e0:	ldr	w1, [x0, #12]
    e7e4:	mov	w0, #0x8ff                 	// #2303
    e7e8:	movk	w0, #0x9981, lsl #16
    e7ec:	and	w0, w1, w0
    e7f0:	cmp	w0, #0x1
    e7f4:	cset	w0, eq  // eq = none
    e7f8:	and	w0, w0, #0xff
    e7fc:	mov	w1, w0
    e800:	ldr	x0, [sp, #40]
    e804:	ldrb	w0, [x0, #185]
    e808:	eor	w0, w0, #0x1
    e80c:	and	w0, w0, #0xff
    e810:	and	w0, w1, w0
    e814:	ldr	x1, [sp, #120]
    e818:	mvn	x1, x1
    e81c:	lsr	x1, x1, #63
    e820:	and	w1, w1, #0xff
    e824:	and	w0, w0, w1
    e828:	cmp	w0, #0x0
    e82c:	cset	w0, ne  // ne = any
    e830:	and	w0, w0, #0xff
    e834:	and	x0, x0, #0xff
    e838:	cmp	x0, #0x0
    e83c:	b.eq	e868 <XS_B__REGEXP_REGEX+0x340>  // b.none
    e840:	ldr	x0, [sp, #104]
    e844:	ldr	w1, [x0, #12]
    e848:	mov	w0, #0x1100                	// #4352
    e84c:	orr	w1, w1, w0
    e850:	ldr	x0, [sp, #104]
    e854:	str	w1, [x0, #12]
    e858:	ldr	x1, [sp, #120]
    e85c:	ldr	x0, [sp, #104]
    e860:	str	x1, [x0, #16]
    e864:	b	e878 <XS_B__REGEXP_REGEX+0x350>
    e868:	ldr	x2, [sp, #120]
    e86c:	ldr	x1, [sp, #104]
    e870:	ldr	x0, [sp, #40]
    e874:	bl	4fe0 <Perl_sv_setuv_mg@plt>
    e878:	ldr	x0, [sp, #64]
    e87c:	add	x0, x0, #0x8
    e880:	str	x0, [sp, #64]
    e884:	ldr	x0, [sp, #64]
    e888:	ldr	x1, [sp, #104]
    e88c:	str	x1, [x0]
    e890:	b	e93c <XS_B__REGEXP_REGEX+0x414>
    e894:	ldr	x0, [sp, #96]
    e898:	str	x0, [sp, #112]
    e89c:	ldr	x0, [sp, #104]
    e8a0:	ldr	w1, [x0, #12]
    e8a4:	mov	w0, #0x8ff                 	// #2303
    e8a8:	movk	w0, #0x9981, lsl #16
    e8ac:	and	w0, w1, w0
    e8b0:	cmp	w0, #0x1
    e8b4:	cset	w0, eq  // eq = none
    e8b8:	and	w0, w0, #0xff
    e8bc:	mov	w1, w0
    e8c0:	ldr	x0, [sp, #40]
    e8c4:	ldrb	w0, [x0, #185]
    e8c8:	eor	w0, w0, #0x1
    e8cc:	and	w0, w0, #0xff
    e8d0:	and	w0, w1, w0
    e8d4:	cmp	w0, #0x0
    e8d8:	cset	w0, ne  // ne = any
    e8dc:	and	w0, w0, #0xff
    e8e0:	and	x0, x0, #0xff
    e8e4:	cmp	x0, #0x0
    e8e8:	b.eq	e914 <XS_B__REGEXP_REGEX+0x3ec>  // b.none
    e8ec:	ldr	x0, [sp, #104]
    e8f0:	ldr	w1, [x0, #12]
    e8f4:	mov	w0, #0x1100                	// #4352
    e8f8:	orr	w1, w1, w0
    e8fc:	ldr	x0, [sp, #104]
    e900:	str	w1, [x0, #12]
    e904:	ldr	x0, [sp, #104]
    e908:	ldr	x1, [sp, #112]
    e90c:	str	x1, [x0, #16]
    e910:	b	e924 <XS_B__REGEXP_REGEX+0x3fc>
    e914:	ldr	x2, [sp, #112]
    e918:	ldr	x1, [sp, #104]
    e91c:	ldr	x0, [sp, #40]
    e920:	bl	4c60 <Perl_sv_setiv_mg@plt>
    e924:	ldr	x0, [sp, #64]
    e928:	add	x0, x0, #0x8
    e92c:	str	x0, [sp, #64]
    e930:	ldr	x0, [sp, #64]
    e934:	ldr	x1, [sp, #104]
    e938:	str	x1, [x0]
    e93c:	ldr	x0, [sp, #40]
    e940:	ldr	x1, [sp, #64]
    e944:	str	x1, [x0]
    e948:	nop
    e94c:	ldp	x19, x20, [sp, #16]
    e950:	ldp	x29, x30, [sp], #128
    e954:	ret

000000000000e958 <XS_B__PV_RV>:
    e958:	stp	x29, x30, [sp, #-80]!
    e95c:	mov	x29, sp
    e960:	str	x0, [sp, #24]
    e964:	str	x1, [sp, #16]
    e968:	ldr	x0, [sp, #24]
    e96c:	ldr	x0, [x0]
    e970:	str	x0, [sp, #48]
    e974:	ldr	x0, [sp, #24]
    e978:	bl	7424 <S_POPMARK>
    e97c:	str	w0, [sp, #40]
    e980:	ldr	x0, [sp, #24]
    e984:	ldr	x1, [x0, #24]
    e988:	ldr	w0, [sp, #40]
    e98c:	add	w2, w0, #0x1
    e990:	str	w2, [sp, #40]
    e994:	sxtw	x0, w0
    e998:	lsl	x0, x0, #3
    e99c:	add	x0, x1, x0
    e9a0:	str	x0, [sp, #56]
    e9a4:	ldr	x1, [sp, #48]
    e9a8:	ldr	x0, [sp, #56]
    e9ac:	sub	x0, x1, x0
    e9b0:	asr	x0, x0, #3
    e9b4:	str	w0, [sp, #44]
    e9b8:	ldr	w0, [sp, #44]
    e9bc:	cmp	w0, #0x1
    e9c0:	b.eq	e9d4 <XS_B__PV_RV+0x7c>  // b.none
    e9c4:	adrp	x0, 18000 <boot_B+0x23d8>
    e9c8:	add	x1, x0, #0xb40
    e9cc:	ldr	x0, [sp, #16]
    e9d0:	bl	4d70 <Perl_croak_xs_usage@plt>
    e9d4:	ldrsw	x0, [sp, #44]
    e9d8:	lsl	x0, x0, #3
    e9dc:	neg	x0, x0
    e9e0:	ldr	x1, [sp, #48]
    e9e4:	add	x0, x1, x0
    e9e8:	str	x0, [sp, #48]
    e9ec:	ldr	x0, [sp, #24]
    e9f0:	ldr	x1, [x0, #24]
    e9f4:	ldrsw	x0, [sp, #40]
    e9f8:	lsl	x0, x0, #3
    e9fc:	add	x0, x1, x0
    ea00:	ldr	x0, [x0]
    ea04:	ldr	w0, [x0, #12]
    ea08:	and	w0, w0, #0x800
    ea0c:	cmp	w0, #0x0
    ea10:	b.eq	eac0 <XS_B__PV_RV+0x168>  // b.none
    ea14:	ldr	x0, [sp, #24]
    ea18:	ldr	x1, [x0, #24]
    ea1c:	ldrsw	x0, [sp, #40]
    ea20:	lsl	x0, x0, #3
    ea24:	add	x0, x1, x0
    ea28:	ldr	x0, [x0]
    ea2c:	ldr	x0, [x0, #16]
    ea30:	ldr	w1, [x0, #12]
    ea34:	mov	w0, #0x100                 	// #256
    ea38:	movk	w0, #0x20, lsl #16
    ea3c:	and	w0, w1, w0
    ea40:	cmp	w0, #0x100
    ea44:	b.ne	ea70 <XS_B__PV_RV+0x118>  // b.any
    ea48:	ldr	x0, [sp, #24]
    ea4c:	ldr	x1, [x0, #24]
    ea50:	ldrsw	x0, [sp, #40]
    ea54:	lsl	x0, x0, #3
    ea58:	add	x0, x1, x0
    ea5c:	ldr	x0, [x0]
    ea60:	ldr	x0, [x0, #16]
    ea64:	ldr	x0, [x0]
    ea68:	ldr	x0, [x0, #32]
    ea6c:	b	ea9c <XS_B__PV_RV+0x144>
    ea70:	ldr	x0, [sp, #24]
    ea74:	ldr	x1, [x0, #24]
    ea78:	ldrsw	x0, [sp, #40]
    ea7c:	lsl	x0, x0, #3
    ea80:	add	x0, x1, x0
    ea84:	ldr	x0, [x0]
    ea88:	ldr	x0, [x0, #16]
    ea8c:	mov	w2, #0x2                   	// #2
    ea90:	mov	x1, x0
    ea94:	ldr	x0, [sp, #24]
    ea98:	bl	4b20 <Perl_sv_2iv_flags@plt>
    ea9c:	str	x0, [sp, #64]
    eaa0:	ldr	x0, [sp, #64]
    eaa4:	str	x0, [sp, #72]
    eaa8:	ldr	x0, [sp, #72]
    eaac:	ldr	w0, [x0, #12]
    eab0:	and	w0, w0, #0x800
    eab4:	cmp	w0, #0x0
    eab8:	b.ne	ead8 <XS_B__PV_RV+0x180>  // b.any
    eabc:	b	eacc <XS_B__PV_RV+0x174>
    eac0:	adrp	x0, 18000 <boot_B+0x23d8>
    eac4:	add	x0, x0, #0xf80
    eac8:	bl	4e60 <Perl_croak_nocontext@plt>
    eacc:	adrp	x0, 18000 <boot_B+0x23d8>
    ead0:	add	x0, x0, #0xfc0
    ead4:	bl	4e60 <Perl_croak_nocontext@plt>
    ead8:	ldr	x0, [sp, #72]
    eadc:	ldr	x1, [x0, #16]
    eae0:	ldr	x0, [sp, #48]
    eae4:	add	x0, x0, #0x8
    eae8:	str	x0, [sp, #48]
    eaec:	ldr	x0, [sp, #24]
    eaf0:	bl	77c4 <make_sv_object>
    eaf4:	mov	x1, x0
    eaf8:	ldr	x0, [sp, #48]
    eafc:	str	x1, [x0]
    eb00:	ldr	x0, [sp, #24]
    eb04:	ldr	x1, [sp, #48]
    eb08:	str	x1, [x0]
    eb0c:	nop
    eb10:	ldp	x29, x30, [sp], #80
    eb14:	ret

000000000000eb18 <XS_B__PV_PV>:
    eb18:	stp	x29, x30, [sp, #-144]!
    eb1c:	mov	x29, sp
    eb20:	str	x19, [sp, #16]
    eb24:	str	x0, [sp, #40]
    eb28:	str	x1, [sp, #32]
    eb2c:	ldr	x0, [sp, #40]
    eb30:	ldr	x0, [x0]
    eb34:	str	x0, [sp, #88]
    eb38:	ldr	x0, [sp, #40]
    eb3c:	bl	7424 <S_POPMARK>
    eb40:	str	w0, [sp, #60]
    eb44:	ldr	x0, [sp, #40]
    eb48:	ldr	x1, [x0, #24]
    eb4c:	ldr	w0, [sp, #60]
    eb50:	add	w2, w0, #0x1
    eb54:	str	w2, [sp, #60]
    eb58:	sxtw	x0, w0
    eb5c:	lsl	x0, x0, #3
    eb60:	add	x0, x1, x0
    eb64:	str	x0, [sp, #96]
    eb68:	ldr	x1, [sp, #88]
    eb6c:	ldr	x0, [sp, #96]
    eb70:	sub	x0, x1, x0
    eb74:	asr	x0, x0, #3
    eb78:	str	w0, [sp, #64]
    eb7c:	ldr	x0, [sp, #32]
    eb80:	ldr	x0, [x0]
    eb84:	str	x0, [sp, #104]
    eb88:	ldr	x0, [sp, #104]
    eb8c:	ldr	w0, [x0, #40]
    eb90:	str	w0, [sp, #68]
    eb94:	ldr	w0, [sp, #64]
    eb98:	cmp	w0, #0x1
    eb9c:	b.eq	ebb0 <XS_B__PV_PV+0x98>  // b.none
    eba0:	adrp	x0, 18000 <boot_B+0x23d8>
    eba4:	add	x1, x0, #0xb40
    eba8:	ldr	x0, [sp, #32]
    ebac:	bl	4d70 <Perl_croak_xs_usage@plt>
    ebb0:	str	xzr, [sp, #80]
    ebb4:	str	wzr, [sp, #56]
    ebb8:	ldr	x0, [sp, #40]
    ebbc:	ldr	x1, [x0, #24]
    ebc0:	ldrsw	x0, [sp, #60]
    ebc4:	lsl	x0, x0, #3
    ebc8:	add	x0, x1, x0
    ebcc:	ldr	x0, [x0]
    ebd0:	ldr	w0, [x0, #12]
    ebd4:	and	w0, w0, #0x800
    ebd8:	cmp	w0, #0x0
    ebdc:	b.eq	ec84 <XS_B__PV_PV+0x16c>  // b.none
    ebe0:	ldr	x0, [sp, #40]
    ebe4:	ldr	x1, [x0, #24]
    ebe8:	ldrsw	x0, [sp, #60]
    ebec:	lsl	x0, x0, #3
    ebf0:	add	x0, x1, x0
    ebf4:	ldr	x0, [x0]
    ebf8:	ldr	x0, [x0, #16]
    ebfc:	ldr	w1, [x0, #12]
    ec00:	mov	w0, #0x100                 	// #256
    ec04:	movk	w0, #0x20, lsl #16
    ec08:	and	w0, w1, w0
    ec0c:	cmp	w0, #0x100
    ec10:	b.ne	ec3c <XS_B__PV_PV+0x124>  // b.any
    ec14:	ldr	x0, [sp, #40]
    ec18:	ldr	x1, [x0, #24]
    ec1c:	ldrsw	x0, [sp, #60]
    ec20:	lsl	x0, x0, #3
    ec24:	add	x0, x1, x0
    ec28:	ldr	x0, [x0]
    ec2c:	ldr	x0, [x0, #16]
    ec30:	ldr	x0, [x0]
    ec34:	ldr	x0, [x0, #32]
    ec38:	b	ec68 <XS_B__PV_PV+0x150>
    ec3c:	ldr	x0, [sp, #40]
    ec40:	ldr	x1, [x0, #24]
    ec44:	ldrsw	x0, [sp, #60]
    ec48:	lsl	x0, x0, #3
    ec4c:	add	x0, x1, x0
    ec50:	ldr	x0, [x0]
    ec54:	ldr	x0, [x0, #16]
    ec58:	mov	w2, #0x2                   	// #2
    ec5c:	mov	x1, x0
    ec60:	ldr	x0, [sp, #40]
    ec64:	bl	4b20 <Perl_sv_2iv_flags@plt>
    ec68:	str	x0, [sp, #112]
    ec6c:	ldr	x0, [sp, #112]
    ec70:	str	x0, [sp, #120]
    ec74:	ldr	w0, [sp, #68]
    ec78:	cmp	w0, #0x3
    ec7c:	b.ne	ecd4 <XS_B__PV_PV+0x1bc>  // b.any
    ec80:	b	ec90 <XS_B__PV_PV+0x178>
    ec84:	adrp	x0, 18000 <boot_B+0x23d8>
    ec88:	add	x0, x0, #0xf80
    ec8c:	bl	4e60 <Perl_croak_nocontext@plt>
    ec90:	mov	w1, #0x42                  	// #66
    ec94:	ldr	x0, [sp, #120]
    ec98:	bl	4fa0 <Perl_mg_find@plt>
    ec9c:	str	x0, [sp, #128]
    eca0:	ldr	x0, [sp, #128]
    eca4:	cmp	x0, #0x0
    eca8:	b.ne	ecb8 <XS_B__PV_PV+0x1a0>  // b.any
    ecac:	adrp	x0, 18000 <boot_B+0x23d8>
    ecb0:	add	x0, x0, #0xfd8
    ecb4:	bl	4e60 <Perl_croak_nocontext@plt>
    ecb8:	ldr	x0, [sp, #128]
    ecbc:	ldr	x0, [x0, #40]
    ecc0:	str	x0, [sp, #72]
    ecc4:	ldr	x0, [sp, #128]
    ecc8:	ldr	x0, [x0, #24]
    eccc:	str	x0, [sp, #80]
    ecd0:	b	ee60 <XS_B__PV_PV+0x348>
    ecd4:	ldr	w0, [sp, #68]
    ecd8:	cmp	w0, #0x2
    ecdc:	b.ne	ed44 <XS_B__PV_PV+0x22c>  // b.any
    ece0:	ldr	x0, [sp, #120]
    ece4:	ldr	w0, [x0, #12]
    ece8:	and	w0, w0, #0xff
    ecec:	cmp	w0, #0x8
    ecf0:	b.eq	ed18 <XS_B__PV_PV+0x200>  // b.none
    ecf4:	ldr	x0, [sp, #120]
    ecf8:	ldr	w1, [x0, #12]
    ecfc:	mov	w0, #0x80ff                	// #33023
    ed00:	movk	w0, #0x100, lsl #16
    ed04:	and	w1, w1, w0
    ed08:	mov	w0, #0xa                   	// #10
    ed0c:	movk	w0, #0x100, lsl #16
    ed10:	cmp	w1, w0
    ed14:	b.ne	ed24 <XS_B__PV_PV+0x20c>  // b.any
    ed18:	ldr	x0, [sp, #120]
    ed1c:	ldr	x0, [x0, #16]
    ed20:	b	ed2c <XS_B__PV_PV+0x214>
    ed24:	ldr	x0, [sp, #120]
    ed28:	ldr	x0, [x0, #16]
    ed2c:	str	x0, [sp, #72]
    ed30:	ldr	x0, [sp, #120]
    ed34:	ldr	x0, [x0]
    ed38:	ldr	x0, [x0, #16]
    ed3c:	str	x0, [sp, #80]
    ed40:	b	ee60 <XS_B__PV_PV+0x348>
    ed44:	ldr	w0, [sp, #68]
    ed48:	cmp	w0, #0x0
    ed4c:	b.eq	edb0 <XS_B__PV_PV+0x298>  // b.none
    ed50:	ldr	x0, [sp, #120]
    ed54:	ldr	w0, [x0, #12]
    ed58:	and	w0, w0, #0xff
    ed5c:	cmp	w0, #0x8
    ed60:	b.eq	ed88 <XS_B__PV_PV+0x270>  // b.none
    ed64:	ldr	x0, [sp, #120]
    ed68:	ldr	w1, [x0, #12]
    ed6c:	mov	w0, #0x80ff                	// #33023
    ed70:	movk	w0, #0x100, lsl #16
    ed74:	and	w1, w1, w0
    ed78:	mov	w0, #0xa                   	// #10
    ed7c:	movk	w0, #0x100, lsl #16
    ed80:	cmp	w1, w0
    ed84:	b.ne	ed94 <XS_B__PV_PV+0x27c>  // b.any
    ed88:	ldr	x0, [sp, #120]
    ed8c:	ldr	x0, [x0, #16]
    ed90:	b	ed9c <XS_B__PV_PV+0x284>
    ed94:	ldr	x0, [sp, #120]
    ed98:	ldr	x0, [x0, #16]
    ed9c:	str	x0, [sp, #72]
    eda0:	ldr	x0, [sp, #72]
    eda4:	bl	4b40 <strlen@plt>
    eda8:	str	x0, [sp, #80]
    edac:	b	ee60 <XS_B__PV_PV+0x348>
    edb0:	ldr	x0, [sp, #120]
    edb4:	ldr	w0, [x0, #12]
    edb8:	and	w0, w0, #0x400
    edbc:	cmp	w0, #0x0
    edc0:	b.eq	edf4 <XS_B__PV_PV+0x2dc>  // b.none
    edc4:	ldr	x0, [sp, #120]
    edc8:	ldr	x0, [x0]
    edcc:	ldr	x0, [x0, #16]
    edd0:	str	x0, [sp, #80]
    edd4:	ldr	x0, [sp, #120]
    edd8:	ldr	x0, [x0, #16]
    eddc:	str	x0, [sp, #72]
    ede0:	ldr	x0, [sp, #120]
    ede4:	ldr	w0, [x0, #12]
    ede8:	and	w0, w0, #0x20000000
    edec:	str	w0, [sp, #56]
    edf0:	b	ee60 <XS_B__PV_PV+0x348>
    edf4:	ldr	x0, [sp, #120]
    edf8:	ldr	w0, [x0, #12]
    edfc:	and	w0, w0, #0xff
    ee00:	cmp	w0, #0x8
    ee04:	b.eq	ee2c <XS_B__PV_PV+0x314>  // b.none
    ee08:	ldr	x0, [sp, #120]
    ee0c:	ldr	w1, [x0, #12]
    ee10:	mov	w0, #0x80ff                	// #33023
    ee14:	movk	w0, #0x100, lsl #16
    ee18:	and	w1, w1, w0
    ee1c:	mov	w0, #0xa                   	// #10
    ee20:	movk	w0, #0x100, lsl #16
    ee24:	cmp	w1, w0
    ee28:	b.ne	ee5c <XS_B__PV_PV+0x344>  // b.any
    ee2c:	ldr	x0, [sp, #120]
    ee30:	ldr	x0, [x0]
    ee34:	ldr	x0, [x0, #16]
    ee38:	str	x0, [sp, #80]
    ee3c:	ldr	x0, [sp, #120]
    ee40:	ldr	x0, [x0, #16]
    ee44:	str	x0, [sp, #72]
    ee48:	ldr	x0, [sp, #120]
    ee4c:	ldr	w0, [x0, #12]
    ee50:	and	w0, w0, #0x20000000
    ee54:	str	w0, [sp, #56]
    ee58:	b	ee60 <XS_B__PV_PV+0x348>
    ee5c:	str	xzr, [sp, #72]
    ee60:	ldr	w0, [sp, #56]
    ee64:	orr	w2, w0, #0x80000
    ee68:	ldr	x0, [sp, #40]
    ee6c:	ldr	x1, [x0, #24]
    ee70:	ldrsw	x0, [sp, #60]
    ee74:	lsl	x0, x0, #3
    ee78:	add	x19, x1, x0
    ee7c:	mov	w3, w2
    ee80:	ldr	x2, [sp, #80]
    ee84:	ldr	x1, [sp, #72]
    ee88:	ldr	x0, [sp, #40]
    ee8c:	bl	4d80 <Perl_newSVpvn_flags@plt>
    ee90:	str	x0, [x19]
    ee94:	mov	x0, #0x1                   	// #1
    ee98:	str	x0, [sp, #136]
    ee9c:	ldr	x0, [sp, #40]
    eea0:	ldr	x1, [x0, #24]
    eea4:	ldrsw	x2, [sp, #60]
    eea8:	ldr	x0, [sp, #136]
    eeac:	add	x0, x2, x0
    eeb0:	lsl	x0, x0, #3
    eeb4:	sub	x0, x0, #0x8
    eeb8:	add	x1, x1, x0
    eebc:	ldr	x0, [sp, #40]
    eec0:	str	x1, [x0]
    eec4:	nop
    eec8:	ldr	x19, [sp, #16]
    eecc:	ldp	x29, x30, [sp], #144
    eed0:	ret

000000000000eed4 <XS_B__PVMG_MAGIC>:
    eed4:	stp	x29, x30, [sp, #-80]!
    eed8:	mov	x29, sp
    eedc:	str	x0, [sp, #24]
    eee0:	str	x1, [sp, #16]
    eee4:	ldr	x0, [sp, #24]
    eee8:	ldr	x0, [x0]
    eeec:	str	x0, [sp, #40]
    eef0:	ldr	x0, [sp, #24]
    eef4:	bl	7424 <S_POPMARK>
    eef8:	str	w0, [sp, #32]
    eefc:	ldr	x0, [sp, #24]
    ef00:	ldr	x1, [x0, #24]
    ef04:	ldr	w0, [sp, #32]
    ef08:	add	w2, w0, #0x1
    ef0c:	str	w2, [sp, #32]
    ef10:	sxtw	x0, w0
    ef14:	lsl	x0, x0, #3
    ef18:	add	x0, x1, x0
    ef1c:	str	x0, [sp, #56]
    ef20:	ldr	x1, [sp, #40]
    ef24:	ldr	x0, [sp, #56]
    ef28:	sub	x0, x1, x0
    ef2c:	asr	x0, x0, #3
    ef30:	str	w0, [sp, #36]
    ef34:	ldr	w0, [sp, #36]
    ef38:	cmp	w0, #0x1
    ef3c:	b.eq	ef50 <XS_B__PVMG_MAGIC+0x7c>  // b.none
    ef40:	adrp	x0, 18000 <boot_B+0x23d8>
    ef44:	add	x1, x0, #0xb40
    ef48:	ldr	x0, [sp, #16]
    ef4c:	bl	4d70 <Perl_croak_xs_usage@plt>
    ef50:	ldrsw	x0, [sp, #36]
    ef54:	lsl	x0, x0, #3
    ef58:	neg	x0, x0
    ef5c:	ldr	x1, [sp, #40]
    ef60:	add	x0, x1, x0
    ef64:	str	x0, [sp, #40]
    ef68:	ldr	x0, [sp, #24]
    ef6c:	ldr	x1, [x0, #24]
    ef70:	ldrsw	x0, [sp, #32]
    ef74:	lsl	x0, x0, #3
    ef78:	add	x0, x1, x0
    ef7c:	ldr	x0, [x0]
    ef80:	ldr	w0, [x0, #12]
    ef84:	and	w0, w0, #0x800
    ef88:	cmp	w0, #0x0
    ef8c:	b.eq	f038 <XS_B__PVMG_MAGIC+0x164>  // b.none
    ef90:	ldr	x0, [sp, #24]
    ef94:	ldr	x1, [x0, #24]
    ef98:	ldrsw	x0, [sp, #32]
    ef9c:	lsl	x0, x0, #3
    efa0:	add	x0, x1, x0
    efa4:	ldr	x0, [x0]
    efa8:	ldr	x0, [x0, #16]
    efac:	ldr	w1, [x0, #12]
    efb0:	mov	w0, #0x100                 	// #256
    efb4:	movk	w0, #0x20, lsl #16
    efb8:	and	w0, w1, w0
    efbc:	cmp	w0, #0x100
    efc0:	b.ne	efec <XS_B__PVMG_MAGIC+0x118>  // b.any
    efc4:	ldr	x0, [sp, #24]
    efc8:	ldr	x1, [x0, #24]
    efcc:	ldrsw	x0, [sp, #32]
    efd0:	lsl	x0, x0, #3
    efd4:	add	x0, x1, x0
    efd8:	ldr	x0, [x0]
    efdc:	ldr	x0, [x0, #16]
    efe0:	ldr	x0, [x0]
    efe4:	ldr	x0, [x0, #32]
    efe8:	b	f018 <XS_B__PVMG_MAGIC+0x144>
    efec:	ldr	x0, [sp, #24]
    eff0:	ldr	x1, [x0, #24]
    eff4:	ldrsw	x0, [sp, #32]
    eff8:	lsl	x0, x0, #3
    effc:	add	x0, x1, x0
    f000:	ldr	x0, [x0]
    f004:	ldr	x0, [x0, #16]
    f008:	mov	w2, #0x2                   	// #2
    f00c:	mov	x1, x0
    f010:	ldr	x0, [sp, #24]
    f014:	bl	4b20 <Perl_sv_2iv_flags@plt>
    f018:	str	x0, [sp, #64]
    f01c:	ldr	x0, [sp, #64]
    f020:	str	x0, [sp, #72]
    f024:	ldr	x0, [sp, #72]
    f028:	ldr	x0, [x0]
    f02c:	ldr	x0, [x0, #8]
    f030:	str	x0, [sp, #48]
    f034:	b	f0b4 <XS_B__PVMG_MAGIC+0x1e0>
    f038:	adrp	x0, 18000 <boot_B+0x23d8>
    f03c:	add	x0, x0, #0xf80
    f040:	bl	4e60 <Perl_croak_nocontext@plt>
    f044:	ldr	x0, [sp, #24]
    f048:	ldr	x1, [x0, #32]
    f04c:	ldr	x0, [sp, #40]
    f050:	sub	x0, x1, x0
    f054:	cmp	x0, #0x0
    f058:	cset	w0, le
    f05c:	and	w0, w0, #0xff
    f060:	and	x0, x0, #0xff
    f064:	cmp	x0, #0x0
    f068:	b.eq	f084 <XS_B__PVMG_MAGIC+0x1b0>  // b.none
    f06c:	mov	x3, #0x1                   	// #1
    f070:	ldr	x2, [sp, #40]
    f074:	ldr	x1, [sp, #40]
    f078:	ldr	x0, [sp, #24]
    f07c:	bl	4b70 <Perl_stack_grow@plt>
    f080:	str	x0, [sp, #40]
    f084:	ldr	x0, [sp, #40]
    f088:	add	x0, x0, #0x8
    f08c:	str	x0, [sp, #40]
    f090:	ldr	x1, [sp, #48]
    f094:	ldr	x0, [sp, #24]
    f098:	bl	7ae0 <make_mg_object>
    f09c:	mov	x1, x0
    f0a0:	ldr	x0, [sp, #40]
    f0a4:	str	x1, [x0]
    f0a8:	ldr	x0, [sp, #48]
    f0ac:	ldr	x0, [x0]
    f0b0:	str	x0, [sp, #48]
    f0b4:	ldr	x0, [sp, #48]
    f0b8:	cmp	x0, #0x0
    f0bc:	b.ne	f044 <XS_B__PVMG_MAGIC+0x170>  // b.any
    f0c0:	ldr	x0, [sp, #24]
    f0c4:	ldr	x1, [sp, #40]
    f0c8:	str	x1, [x0]
    f0cc:	nop
    f0d0:	ldp	x29, x30, [sp], #80
    f0d4:	ret

000000000000f0d8 <XS_B__MAGIC_MOREMAGIC>:
    f0d8:	stp	x29, x30, [sp, #-112]!
    f0dc:	mov	x29, sp
    f0e0:	stp	x19, x20, [sp, #16]
    f0e4:	str	x0, [sp, #40]
    f0e8:	str	x1, [sp, #32]
    f0ec:	ldr	x0, [sp, #40]
    f0f0:	ldr	x0, [x0]
    f0f4:	str	x0, [sp, #64]
    f0f8:	ldr	x0, [sp, #40]
    f0fc:	bl	7424 <S_POPMARK>
    f100:	str	w0, [sp, #52]
    f104:	ldr	x0, [sp, #40]
    f108:	ldr	x1, [x0, #24]
    f10c:	ldr	w0, [sp, #52]
    f110:	add	w2, w0, #0x1
    f114:	str	w2, [sp, #52]
    f118:	sxtw	x0, w0
    f11c:	lsl	x0, x0, #3
    f120:	add	x0, x1, x0
    f124:	str	x0, [sp, #72]
    f128:	ldr	x1, [sp, #64]
    f12c:	ldr	x0, [sp, #72]
    f130:	sub	x0, x1, x0
    f134:	asr	x0, x0, #3
    f138:	str	w0, [sp, #56]
    f13c:	ldr	x0, [sp, #32]
    f140:	ldr	x0, [x0]
    f144:	str	x0, [sp, #80]
    f148:	ldr	x0, [sp, #80]
    f14c:	ldr	w0, [x0, #40]
    f150:	str	w0, [sp, #60]
    f154:	ldr	w0, [sp, #56]
    f158:	cmp	w0, #0x1
    f15c:	b.eq	f170 <XS_B__MAGIC_MOREMAGIC+0x98>  // b.none
    f160:	adrp	x0, 19000 <values_for_notfound+0x2e8>
    f164:	add	x1, x0, #0x0
    f168:	ldr	x0, [sp, #32]
    f16c:	bl	4d70 <Perl_croak_xs_usage@plt>
    f170:	ldrsw	x0, [sp, #56]
    f174:	lsl	x0, x0, #3
    f178:	neg	x0, x0
    f17c:	ldr	x1, [sp, #64]
    f180:	add	x0, x1, x0
    f184:	str	x0, [sp, #64]
    f188:	ldr	x0, [sp, #40]
    f18c:	ldr	x1, [x0, #24]
    f190:	ldrsw	x0, [sp, #52]
    f194:	lsl	x0, x0, #3
    f198:	add	x0, x1, x0
    f19c:	ldr	x0, [x0]
    f1a0:	ldr	w0, [x0, #12]
    f1a4:	and	w0, w0, #0x800
    f1a8:	cmp	w0, #0x0
    f1ac:	b.eq	f254 <XS_B__MAGIC_MOREMAGIC+0x17c>  // b.none
    f1b0:	ldr	x0, [sp, #40]
    f1b4:	ldr	x1, [x0, #24]
    f1b8:	ldrsw	x0, [sp, #52]
    f1bc:	lsl	x0, x0, #3
    f1c0:	add	x0, x1, x0
    f1c4:	ldr	x0, [x0]
    f1c8:	ldr	x0, [x0, #16]
    f1cc:	ldr	w1, [x0, #12]
    f1d0:	mov	w0, #0x100                 	// #256
    f1d4:	movk	w0, #0x20, lsl #16
    f1d8:	and	w0, w1, w0
    f1dc:	cmp	w0, #0x100
    f1e0:	b.ne	f20c <XS_B__MAGIC_MOREMAGIC+0x134>  // b.any
    f1e4:	ldr	x0, [sp, #40]
    f1e8:	ldr	x1, [x0, #24]
    f1ec:	ldrsw	x0, [sp, #52]
    f1f0:	lsl	x0, x0, #3
    f1f4:	add	x0, x1, x0
    f1f8:	ldr	x0, [x0]
    f1fc:	ldr	x0, [x0, #16]
    f200:	ldr	x0, [x0]
    f204:	ldr	x0, [x0, #32]
    f208:	b	f238 <XS_B__MAGIC_MOREMAGIC+0x160>
    f20c:	ldr	x0, [sp, #40]
    f210:	ldr	x1, [x0, #24]
    f214:	ldrsw	x0, [sp, #52]
    f218:	lsl	x0, x0, #3
    f21c:	add	x0, x1, x0
    f220:	ldr	x0, [x0]
    f224:	ldr	x0, [x0, #16]
    f228:	mov	w2, #0x2                   	// #2
    f22c:	mov	x1, x0
    f230:	ldr	x0, [sp, #40]
    f234:	bl	4b20 <Perl_sv_2iv_flags@plt>
    f238:	str	x0, [sp, #88]
    f23c:	ldr	x0, [sp, #88]
    f240:	str	x0, [sp, #96]
    f244:	ldr	w0, [sp, #60]
    f248:	cmp	w0, #0x8
    f24c:	b.eq	f604 <XS_B__MAGIC_MOREMAGIC+0x52c>  // b.none
    f250:	b	f260 <XS_B__MAGIC_MOREMAGIC+0x188>
    f254:	adrp	x0, 19000 <values_for_notfound+0x2e8>
    f258:	add	x0, x0, #0x8
    f25c:	bl	4e60 <Perl_croak_nocontext@plt>
    f260:	ldr	w0, [sp, #60]
    f264:	cmp	w0, #0x8
    f268:	b.gt	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f26c:	ldr	w0, [sp, #60]
    f270:	cmp	w0, #0x7
    f274:	b.eq	f5a8 <XS_B__MAGIC_MOREMAGIC+0x4d0>  // b.none
    f278:	ldr	w0, [sp, #60]
    f27c:	cmp	w0, #0x7
    f280:	b.gt	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f284:	ldr	w0, [sp, #60]
    f288:	cmp	w0, #0x6
    f28c:	b.eq	f4c8 <XS_B__MAGIC_MOREMAGIC+0x3f0>  // b.none
    f290:	ldr	w0, [sp, #60]
    f294:	cmp	w0, #0x6
    f298:	b.gt	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f29c:	ldr	w0, [sp, #60]
    f2a0:	cmp	w0, #0x5
    f2a4:	b.eq	f49c <XS_B__MAGIC_MOREMAGIC+0x3c4>  // b.none
    f2a8:	ldr	w0, [sp, #60]
    f2ac:	cmp	w0, #0x5
    f2b0:	b.gt	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f2b4:	ldr	w0, [sp, #60]
    f2b8:	cmp	w0, #0x4
    f2bc:	b.eq	f45c <XS_B__MAGIC_MOREMAGIC+0x384>  // b.none
    f2c0:	ldr	w0, [sp, #60]
    f2c4:	cmp	w0, #0x4
    f2c8:	b.gt	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f2cc:	ldr	w0, [sp, #60]
    f2d0:	cmp	w0, #0x3
    f2d4:	b.eq	f418 <XS_B__MAGIC_MOREMAGIC+0x340>  // b.none
    f2d8:	ldr	w0, [sp, #60]
    f2dc:	cmp	w0, #0x3
    f2e0:	b.gt	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f2e4:	ldr	w0, [sp, #60]
    f2e8:	cmp	w0, #0x2
    f2ec:	b.eq	f3e4 <XS_B__MAGIC_MOREMAGIC+0x30c>  // b.none
    f2f0:	ldr	w0, [sp, #60]
    f2f4:	cmp	w0, #0x2
    f2f8:	b.gt	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f2fc:	ldr	w0, [sp, #60]
    f300:	cmp	w0, #0x0
    f304:	b.eq	f318 <XS_B__MAGIC_MOREMAGIC+0x240>  // b.none
    f308:	ldr	w0, [sp, #60]
    f30c:	cmp	w0, #0x1
    f310:	b.eq	f3a0 <XS_B__MAGIC_MOREMAGIC+0x2c8>  // b.none
    f314:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f318:	ldr	x0, [sp, #40]
    f31c:	ldr	x1, [x0, #32]
    f320:	ldr	x0, [sp, #64]
    f324:	sub	x0, x1, x0
    f328:	cmp	x0, #0x0
    f32c:	cset	w0, le
    f330:	and	w0, w0, #0xff
    f334:	and	x0, x0, #0xff
    f338:	cmp	x0, #0x0
    f33c:	b.eq	f358 <XS_B__MAGIC_MOREMAGIC+0x280>  // b.none
    f340:	mov	x3, #0x1                   	// #1
    f344:	ldr	x2, [sp, #64]
    f348:	ldr	x1, [sp, #64]
    f34c:	ldr	x0, [sp, #40]
    f350:	bl	4b70 <Perl_stack_grow@plt>
    f354:	str	x0, [sp, #64]
    f358:	ldr	x0, [sp, #96]
    f35c:	ldr	x0, [x0]
    f360:	cmp	x0, #0x0
    f364:	b.eq	f380 <XS_B__MAGIC_MOREMAGIC+0x2a8>  // b.none
    f368:	ldr	x0, [sp, #96]
    f36c:	ldr	x0, [x0]
    f370:	mov	x1, x0
    f374:	ldr	x0, [sp, #40]
    f378:	bl	7ae0 <make_mg_object>
    f37c:	b	f388 <XS_B__MAGIC_MOREMAGIC+0x2b0>
    f380:	ldr	x0, [sp, #40]
    f384:	add	x0, x0, #0x150
    f388:	ldr	x1, [sp, #64]
    f38c:	add	x1, x1, #0x8
    f390:	str	x1, [sp, #64]
    f394:	ldr	x1, [sp, #64]
    f398:	str	x0, [x1]
    f39c:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f3a0:	ldr	x0, [sp, #64]
    f3a4:	add	x0, x0, #0x8
    f3a8:	str	x0, [sp, #64]
    f3ac:	ldr	x0, [sp, #40]
    f3b0:	bl	5080 <Perl_sv_newmortal@plt>
    f3b4:	mov	x1, x0
    f3b8:	ldr	x0, [sp, #64]
    f3bc:	str	x1, [x0]
    f3c0:	ldr	x0, [sp, #64]
    f3c4:	ldr	x1, [x0]
    f3c8:	ldr	x0, [sp, #96]
    f3cc:	ldrh	w0, [x0, #16]
    f3d0:	and	x0, x0, #0xffff
    f3d4:	mov	x2, x0
    f3d8:	ldr	x0, [sp, #40]
    f3dc:	bl	4d40 <Perl_sv_setuv@plt>
    f3e0:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f3e4:	ldr	x0, [sp, #96]
    f3e8:	add	x1, x0, #0x12
    f3ec:	ldr	x0, [sp, #64]
    f3f0:	add	x0, x0, #0x8
    f3f4:	str	x0, [sp, #64]
    f3f8:	mov	w3, #0x80000               	// #524288
    f3fc:	mov	x2, #0x1                   	// #1
    f400:	ldr	x0, [sp, #40]
    f404:	bl	4d80 <Perl_newSVpvn_flags@plt>
    f408:	mov	x1, x0
    f40c:	ldr	x0, [sp, #64]
    f410:	str	x1, [x0]
    f414:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f418:	ldr	x0, [sp, #64]
    f41c:	add	x0, x0, #0x8
    f420:	str	x0, [sp, #64]
    f424:	ldr	x0, [sp, #40]
    f428:	bl	5080 <Perl_sv_newmortal@plt>
    f42c:	mov	x1, x0
    f430:	ldr	x0, [sp, #64]
    f434:	str	x1, [x0]
    f438:	ldr	x0, [sp, #64]
    f43c:	ldr	x1, [x0]
    f440:	ldr	x0, [sp, #96]
    f444:	ldrb	w0, [x0, #19]
    f448:	and	x0, x0, #0xff
    f44c:	mov	x2, x0
    f450:	ldr	x0, [sp, #40]
    f454:	bl	4d40 <Perl_sv_setuv@plt>
    f458:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f45c:	ldr	x0, [sp, #64]
    f460:	add	x0, x0, #0x8
    f464:	str	x0, [sp, #64]
    f468:	ldr	x0, [sp, #40]
    f46c:	bl	5080 <Perl_sv_newmortal@plt>
    f470:	mov	x1, x0
    f474:	ldr	x0, [sp, #64]
    f478:	str	x1, [x0]
    f47c:	ldr	x0, [sp, #64]
    f480:	ldr	x1, [x0]
    f484:	ldr	x0, [sp, #96]
    f488:	ldr	x0, [x0, #24]
    f48c:	mov	x2, x0
    f490:	ldr	x0, [sp, #40]
    f494:	bl	5040 <Perl_sv_setiv@plt>
    f498:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f49c:	ldr	x0, [sp, #96]
    f4a0:	ldr	x1, [x0, #32]
    f4a4:	ldr	x0, [sp, #64]
    f4a8:	add	x0, x0, #0x8
    f4ac:	str	x0, [sp, #64]
    f4b0:	ldr	x0, [sp, #40]
    f4b4:	bl	77c4 <make_sv_object>
    f4b8:	mov	x1, x0
    f4bc:	ldr	x0, [sp, #64]
    f4c0:	str	x1, [x0]
    f4c4:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f4c8:	ldr	x0, [sp, #96]
    f4cc:	ldr	x0, [x0, #40]
    f4d0:	cmp	x0, #0x0
    f4d4:	b.eq	f584 <XS_B__MAGIC_MOREMAGIC+0x4ac>  // b.none
    f4d8:	ldr	x0, [sp, #96]
    f4dc:	ldr	x0, [x0, #24]
    f4e0:	cmp	x0, #0x0
    f4e4:	b.lt	f524 <XS_B__MAGIC_MOREMAGIC+0x44c>  // b.tstop
    f4e8:	ldr	x0, [sp, #96]
    f4ec:	ldr	x1, [x0, #40]
    f4f0:	ldr	x0, [sp, #96]
    f4f4:	ldr	x0, [x0, #24]
    f4f8:	mov	x2, x0
    f4fc:	ldr	x0, [sp, #64]
    f500:	add	x0, x0, #0x8
    f504:	str	x0, [sp, #64]
    f508:	mov	w3, #0x80000               	// #524288
    f50c:	ldr	x0, [sp, #40]
    f510:	bl	4d80 <Perl_newSVpvn_flags@plt>
    f514:	mov	x1, x0
    f518:	ldr	x0, [sp, #64]
    f51c:	str	x1, [x0]
    f520:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f524:	ldr	x0, [sp, #96]
    f528:	ldr	x0, [x0, #24]
    f52c:	cmn	x0, #0x2
    f530:	b.ne	f560 <XS_B__MAGIC_MOREMAGIC+0x488>  // b.any
    f534:	ldr	x0, [sp, #96]
    f538:	ldr	x1, [x0, #40]
    f53c:	ldr	x0, [sp, #64]
    f540:	add	x0, x0, #0x8
    f544:	str	x0, [sp, #64]
    f548:	ldr	x0, [sp, #40]
    f54c:	bl	77c4 <make_sv_object>
    f550:	mov	x1, x0
    f554:	ldr	x0, [sp, #64]
    f558:	str	x1, [x0]
    f55c:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f560:	ldr	x0, [sp, #64]
    f564:	add	x0, x0, #0x8
    f568:	str	x0, [sp, #64]
    f56c:	ldr	x0, [sp, #40]
    f570:	bl	5080 <Perl_sv_newmortal@plt>
    f574:	mov	x1, x0
    f578:	ldr	x0, [sp, #64]
    f57c:	str	x1, [x0]
    f580:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f584:	ldr	x0, [sp, #64]
    f588:	add	x0, x0, #0x8
    f58c:	str	x0, [sp, #64]
    f590:	ldr	x0, [sp, #40]
    f594:	bl	5080 <Perl_sv_newmortal@plt>
    f598:	mov	x1, x0
    f59c:	ldr	x0, [sp, #64]
    f5a0:	str	x1, [x0]
    f5a4:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f5a8:	ldr	x0, [sp, #96]
    f5ac:	ldrb	w0, [x0, #18]
    f5b0:	cmp	w0, #0x72
    f5b4:	b.ne	f5f8 <XS_B__MAGIC_MOREMAGIC+0x520>  // b.any
    f5b8:	ldr	x0, [sp, #64]
    f5bc:	add	x0, x0, #0x8
    f5c0:	str	x0, [sp, #64]
    f5c4:	ldr	x0, [sp, #40]
    f5c8:	bl	5080 <Perl_sv_newmortal@plt>
    f5cc:	mov	x1, x0
    f5d0:	ldr	x0, [sp, #64]
    f5d4:	str	x1, [x0]
    f5d8:	ldr	x0, [sp, #64]
    f5dc:	ldr	x1, [x0]
    f5e0:	ldr	x0, [sp, #96]
    f5e4:	ldr	x0, [x0, #32]
    f5e8:	mov	x2, x0
    f5ec:	ldr	x0, [sp, #40]
    f5f0:	bl	5040 <Perl_sv_setiv@plt>
    f5f4:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f5f8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
    f5fc:	add	x0, x0, #0x20
    f600:	bl	4e60 <Perl_croak_nocontext@plt>
    f604:	ldr	x0, [sp, #96]
    f608:	ldrb	w0, [x0, #18]
    f60c:	cmp	w0, #0x72
    f610:	b.ne	f6c8 <XS_B__MAGIC_MOREMAGIC+0x5f0>  // b.any
    f614:	ldr	x0, [sp, #96]
    f618:	ldr	x0, [x0, #32]
    f61c:	str	x0, [sp, #104]
    f620:	ldr	x0, [sp, #104]
    f624:	cmp	x0, #0x0
    f628:	b.eq	f654 <XS_B__MAGIC_MOREMAGIC+0x57c>  // b.none
    f62c:	ldr	x0, [sp, #104]
    f630:	ldr	x19, [x0, #16]
    f634:	ldr	x0, [sp, #104]
    f638:	bl	744c <S_ReANY>
    f63c:	ldrb	w0, [x0, #184]
    f640:	ubfx	x0, x0, #0, #4
    f644:	and	w0, w0, #0xff
    f648:	and	x0, x0, #0xff
    f64c:	add	x19, x19, x0
    f650:	b	f658 <XS_B__MAGIC_MOREMAGIC+0x580>
    f654:	mov	x19, #0x0                   	// #0
    f658:	ldr	x0, [sp, #104]
    f65c:	cmp	x0, #0x0
    f660:	b.eq	f694 <XS_B__MAGIC_MOREMAGIC+0x5bc>  // b.none
    f664:	ldr	x0, [sp, #104]
    f668:	ldr	x0, [x0]
    f66c:	ldr	x20, [x0, #16]
    f670:	ldr	x0, [sp, #104]
    f674:	bl	744c <S_ReANY>
    f678:	ldrb	w0, [x0, #184]
    f67c:	ubfx	x0, x0, #0, #4
    f680:	and	w0, w0, #0xff
    f684:	and	x0, x0, #0xff
    f688:	sub	x0, x20, x0
    f68c:	sub	x0, x0, #0x1
    f690:	b	f698 <XS_B__MAGIC_MOREMAGIC+0x5c0>
    f694:	mov	x0, #0x0                   	// #0
    f698:	ldr	x1, [sp, #64]
    f69c:	add	x1, x1, #0x8
    f6a0:	str	x1, [sp, #64]
    f6a4:	mov	w3, #0x80000               	// #524288
    f6a8:	mov	x2, x0
    f6ac:	mov	x1, x19
    f6b0:	ldr	x0, [sp, #40]
    f6b4:	bl	4d80 <Perl_newSVpvn_flags@plt>
    f6b8:	mov	x1, x0
    f6bc:	ldr	x0, [sp, #64]
    f6c0:	str	x1, [x0]
    f6c4:	b	f6d4 <XS_B__MAGIC_MOREMAGIC+0x5fc>
    f6c8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
    f6cc:	add	x0, x0, #0x48
    f6d0:	bl	4e60 <Perl_croak_nocontext@plt>
    f6d4:	ldr	x0, [sp, #40]
    f6d8:	ldr	x1, [sp, #64]
    f6dc:	str	x1, [x0]
    f6e0:	nop
    f6e4:	ldp	x19, x20, [sp, #16]
    f6e8:	ldp	x29, x30, [sp], #112
    f6ec:	ret

000000000000f6f0 <XS_B__BM_PREVIOUS>:
    f6f0:	stp	x29, x30, [sp, #-112]!
    f6f4:	mov	x29, sp
    f6f8:	str	x0, [sp, #24]
    f6fc:	str	x1, [sp, #16]
    f700:	ldr	x0, [sp, #24]
    f704:	ldr	x0, [x0]
    f708:	str	x0, [sp, #56]
    f70c:	ldr	x0, [sp, #24]
    f710:	bl	7424 <S_POPMARK>
    f714:	str	w0, [sp, #44]
    f718:	ldr	x0, [sp, #24]
    f71c:	ldr	x1, [x0, #24]
    f720:	ldr	w0, [sp, #44]
    f724:	add	w2, w0, #0x1
    f728:	str	w2, [sp, #44]
    f72c:	sxtw	x0, w0
    f730:	lsl	x0, x0, #3
    f734:	add	x0, x1, x0
    f738:	str	x0, [sp, #64]
    f73c:	ldr	x1, [sp, #56]
    f740:	ldr	x0, [sp, #64]
    f744:	sub	x0, x1, x0
    f748:	asr	x0, x0, #3
    f74c:	str	w0, [sp, #48]
    f750:	ldr	w0, [sp, #48]
    f754:	cmp	w0, #0x1
    f758:	b.eq	f76c <XS_B__BM_PREVIOUS+0x7c>  // b.none
    f75c:	adrp	x0, 18000 <boot_B+0x23d8>
    f760:	add	x1, x0, #0xb40
    f764:	ldr	x0, [sp, #16]
    f768:	bl	4d70 <Perl_croak_xs_usage@plt>
    f76c:	ldr	x0, [sp, #24]
    f770:	ldr	x0, [x0, #8]
    f774:	ldrb	w0, [x0, #35]
    f778:	and	w0, w0, #0x4
    f77c:	cmp	w0, #0x0
    f780:	b.eq	f7a8 <XS_B__BM_PREVIOUS+0xb8>  // b.none
    f784:	ldr	x0, [sp, #24]
    f788:	ldr	x1, [x0, #16]
    f78c:	ldr	x0, [sp, #24]
    f790:	ldr	x0, [x0, #8]
    f794:	ldr	x0, [x0, #24]
    f798:	lsl	x0, x0, #3
    f79c:	add	x0, x1, x0
    f7a0:	ldr	x0, [x0]
    f7a4:	b	f7b0 <XS_B__BM_PREVIOUS+0xc0>
    f7a8:	ldr	x0, [sp, #24]
    f7ac:	bl	5080 <Perl_sv_newmortal@plt>
    f7b0:	str	x0, [sp, #72]
    f7b4:	ldr	x0, [sp, #24]
    f7b8:	ldr	x1, [x0, #24]
    f7bc:	ldrsw	x0, [sp, #44]
    f7c0:	lsl	x0, x0, #3
    f7c4:	add	x0, x1, x0
    f7c8:	ldr	x0, [x0]
    f7cc:	ldr	w0, [x0, #12]
    f7d0:	and	w0, w0, #0x800
    f7d4:	cmp	w0, #0x0
    f7d8:	b.eq	f900 <XS_B__BM_PREVIOUS+0x210>  // b.none
    f7dc:	ldr	x0, [sp, #24]
    f7e0:	ldr	x1, [x0, #24]
    f7e4:	ldrsw	x0, [sp, #44]
    f7e8:	lsl	x0, x0, #3
    f7ec:	add	x0, x1, x0
    f7f0:	ldr	x0, [x0]
    f7f4:	ldr	x0, [x0, #16]
    f7f8:	ldr	w1, [x0, #12]
    f7fc:	mov	w0, #0x100                 	// #256
    f800:	movk	w0, #0x20, lsl #16
    f804:	and	w0, w1, w0
    f808:	cmp	w0, #0x100
    f80c:	b.ne	f838 <XS_B__BM_PREVIOUS+0x148>  // b.any
    f810:	ldr	x0, [sp, #24]
    f814:	ldr	x1, [x0, #24]
    f818:	ldrsw	x0, [sp, #44]
    f81c:	lsl	x0, x0, #3
    f820:	add	x0, x1, x0
    f824:	ldr	x0, [x0]
    f828:	ldr	x0, [x0, #16]
    f82c:	ldr	x0, [x0]
    f830:	ldr	x0, [x0, #32]
    f834:	b	f864 <XS_B__BM_PREVIOUS+0x174>
    f838:	ldr	x0, [sp, #24]
    f83c:	ldr	x1, [x0, #24]
    f840:	ldrsw	x0, [sp, #44]
    f844:	lsl	x0, x0, #3
    f848:	add	x0, x1, x0
    f84c:	ldr	x0, [x0]
    f850:	ldr	x0, [x0, #16]
    f854:	mov	w2, #0x2                   	// #2
    f858:	mov	x1, x0
    f85c:	ldr	x0, [sp, #24]
    f860:	bl	4b20 <Perl_sv_2iv_flags@plt>
    f864:	str	x0, [sp, #80]
    f868:	ldr	x0, [sp, #80]
    f86c:	str	x0, [sp, #88]
    f870:	str	wzr, [sp, #52]
    f874:	ldr	x0, [sp, #24]
    f878:	ldr	x1, [x0, #24]
    f87c:	ldrsw	x0, [sp, #44]
    f880:	lsl	x0, x0, #3
    f884:	sub	x0, x0, #0x8
    f888:	add	x0, x1, x0
    f88c:	str	x0, [sp, #56]
    f890:	ldr	w0, [sp, #52]
    f894:	str	x0, [sp, #96]
    f898:	ldr	x0, [sp, #72]
    f89c:	ldr	w1, [x0, #12]
    f8a0:	mov	w0, #0x8ff                 	// #2303
    f8a4:	movk	w0, #0x9981, lsl #16
    f8a8:	and	w0, w1, w0
    f8ac:	cmp	w0, #0x1
    f8b0:	cset	w0, eq  // eq = none
    f8b4:	and	w0, w0, #0xff
    f8b8:	mov	w1, w0
    f8bc:	ldr	x0, [sp, #24]
    f8c0:	ldrb	w0, [x0, #185]
    f8c4:	eor	w0, w0, #0x1
    f8c8:	and	w0, w0, #0xff
    f8cc:	and	w0, w1, w0
    f8d0:	ldr	x1, [sp, #96]
    f8d4:	mvn	x1, x1
    f8d8:	lsr	x1, x1, #63
    f8dc:	and	w1, w1, #0xff
    f8e0:	and	w0, w0, w1
    f8e4:	cmp	w0, #0x0
    f8e8:	cset	w0, ne  // ne = any
    f8ec:	and	w0, w0, #0xff
    f8f0:	and	x0, x0, #0xff
    f8f4:	cmp	x0, #0x0
    f8f8:	b.eq	f934 <XS_B__BM_PREVIOUS+0x244>  // b.none
    f8fc:	b	f90c <XS_B__BM_PREVIOUS+0x21c>
    f900:	adrp	x0, 18000 <boot_B+0x23d8>
    f904:	add	x0, x0, #0xf80
    f908:	bl	4e60 <Perl_croak_nocontext@plt>
    f90c:	ldr	x0, [sp, #72]
    f910:	ldr	w1, [x0, #12]
    f914:	mov	w0, #0x1100                	// #4352
    f918:	orr	w1, w1, w0
    f91c:	ldr	x0, [sp, #72]
    f920:	str	w1, [x0, #12]
    f924:	ldr	x1, [sp, #96]
    f928:	ldr	x0, [sp, #72]
    f92c:	str	x1, [x0, #16]
    f930:	b	f944 <XS_B__BM_PREVIOUS+0x254>
    f934:	ldr	x2, [sp, #96]
    f938:	ldr	x1, [sp, #72]
    f93c:	ldr	x0, [sp, #24]
    f940:	bl	4fe0 <Perl_sv_setuv_mg@plt>
    f944:	ldr	x0, [sp, #56]
    f948:	add	x0, x0, #0x8
    f94c:	str	x0, [sp, #56]
    f950:	ldr	x0, [sp, #56]
    f954:	ldr	x1, [sp, #72]
    f958:	str	x1, [x0]
    f95c:	mov	x0, #0x1                   	// #1
    f960:	str	x0, [sp, #104]
    f964:	ldr	x0, [sp, #24]
    f968:	ldr	x1, [x0, #24]
    f96c:	ldrsw	x2, [sp, #44]
    f970:	ldr	x0, [sp, #104]
    f974:	add	x0, x2, x0
    f978:	lsl	x0, x0, #3
    f97c:	sub	x0, x0, #0x8
    f980:	add	x1, x1, x0
    f984:	ldr	x0, [sp, #24]
    f988:	str	x1, [x0]
    f98c:	nop
    f990:	ldp	x29, x30, [sp], #112
    f994:	ret

000000000000f998 <XS_B__BM_RARE>:
    f998:	stp	x29, x30, [sp, #-112]!
    f99c:	mov	x29, sp
    f9a0:	str	x0, [sp, #24]
    f9a4:	str	x1, [sp, #16]
    f9a8:	ldr	x0, [sp, #24]
    f9ac:	ldr	x0, [x0]
    f9b0:	str	x0, [sp, #56]
    f9b4:	ldr	x0, [sp, #24]
    f9b8:	bl	7424 <S_POPMARK>
    f9bc:	str	w0, [sp, #48]
    f9c0:	ldr	x0, [sp, #24]
    f9c4:	ldr	x1, [x0, #24]
    f9c8:	ldr	w0, [sp, #48]
    f9cc:	add	w2, w0, #0x1
    f9d0:	str	w2, [sp, #48]
    f9d4:	sxtw	x0, w0
    f9d8:	lsl	x0, x0, #3
    f9dc:	add	x0, x1, x0
    f9e0:	str	x0, [sp, #64]
    f9e4:	ldr	x1, [sp, #56]
    f9e8:	ldr	x0, [sp, #64]
    f9ec:	sub	x0, x1, x0
    f9f0:	asr	x0, x0, #3
    f9f4:	str	w0, [sp, #52]
    f9f8:	ldr	w0, [sp, #52]
    f9fc:	cmp	w0, #0x1
    fa00:	b.eq	fa14 <XS_B__BM_RARE+0x7c>  // b.none
    fa04:	adrp	x0, 18000 <boot_B+0x23d8>
    fa08:	add	x1, x0, #0xb40
    fa0c:	ldr	x0, [sp, #16]
    fa10:	bl	4d70 <Perl_croak_xs_usage@plt>
    fa14:	ldr	x0, [sp, #24]
    fa18:	ldr	x0, [x0, #8]
    fa1c:	ldrb	w0, [x0, #35]
    fa20:	and	w0, w0, #0x4
    fa24:	cmp	w0, #0x0
    fa28:	b.eq	fa50 <XS_B__BM_RARE+0xb8>  // b.none
    fa2c:	ldr	x0, [sp, #24]
    fa30:	ldr	x1, [x0, #16]
    fa34:	ldr	x0, [sp, #24]
    fa38:	ldr	x0, [x0, #8]
    fa3c:	ldr	x0, [x0, #24]
    fa40:	lsl	x0, x0, #3
    fa44:	add	x0, x1, x0
    fa48:	ldr	x0, [x0]
    fa4c:	b	fa58 <XS_B__BM_RARE+0xc0>
    fa50:	ldr	x0, [sp, #24]
    fa54:	bl	5080 <Perl_sv_newmortal@plt>
    fa58:	str	x0, [sp, #72]
    fa5c:	ldr	x0, [sp, #24]
    fa60:	ldr	x1, [x0, #24]
    fa64:	ldrsw	x0, [sp, #48]
    fa68:	lsl	x0, x0, #3
    fa6c:	add	x0, x1, x0
    fa70:	ldr	x0, [x0]
    fa74:	ldr	w0, [x0, #12]
    fa78:	and	w0, w0, #0x800
    fa7c:	cmp	w0, #0x0
    fa80:	b.eq	fba8 <XS_B__BM_RARE+0x210>  // b.none
    fa84:	ldr	x0, [sp, #24]
    fa88:	ldr	x1, [x0, #24]
    fa8c:	ldrsw	x0, [sp, #48]
    fa90:	lsl	x0, x0, #3
    fa94:	add	x0, x1, x0
    fa98:	ldr	x0, [x0]
    fa9c:	ldr	x0, [x0, #16]
    faa0:	ldr	w1, [x0, #12]
    faa4:	mov	w0, #0x100                 	// #256
    faa8:	movk	w0, #0x20, lsl #16
    faac:	and	w0, w1, w0
    fab0:	cmp	w0, #0x100
    fab4:	b.ne	fae0 <XS_B__BM_RARE+0x148>  // b.any
    fab8:	ldr	x0, [sp, #24]
    fabc:	ldr	x1, [x0, #24]
    fac0:	ldrsw	x0, [sp, #48]
    fac4:	lsl	x0, x0, #3
    fac8:	add	x0, x1, x0
    facc:	ldr	x0, [x0]
    fad0:	ldr	x0, [x0, #16]
    fad4:	ldr	x0, [x0]
    fad8:	ldr	x0, [x0, #32]
    fadc:	b	fb0c <XS_B__BM_RARE+0x174>
    fae0:	ldr	x0, [sp, #24]
    fae4:	ldr	x1, [x0, #24]
    fae8:	ldrsw	x0, [sp, #48]
    faec:	lsl	x0, x0, #3
    faf0:	add	x0, x1, x0
    faf4:	ldr	x0, [x0]
    faf8:	ldr	x0, [x0, #16]
    fafc:	mov	w2, #0x2                   	// #2
    fb00:	mov	x1, x0
    fb04:	ldr	x0, [sp, #24]
    fb08:	bl	4b20 <Perl_sv_2iv_flags@plt>
    fb0c:	str	x0, [sp, #80]
    fb10:	ldr	x0, [sp, #80]
    fb14:	str	x0, [sp, #88]
    fb18:	strb	wzr, [sp, #47]
    fb1c:	ldr	x0, [sp, #24]
    fb20:	ldr	x1, [x0, #24]
    fb24:	ldrsw	x0, [sp, #48]
    fb28:	lsl	x0, x0, #3
    fb2c:	sub	x0, x0, #0x8
    fb30:	add	x0, x1, x0
    fb34:	str	x0, [sp, #56]
    fb38:	ldrb	w0, [sp, #47]
    fb3c:	str	x0, [sp, #96]
    fb40:	ldr	x0, [sp, #72]
    fb44:	ldr	w1, [x0, #12]
    fb48:	mov	w0, #0x8ff                 	// #2303
    fb4c:	movk	w0, #0x9981, lsl #16
    fb50:	and	w0, w1, w0
    fb54:	cmp	w0, #0x1
    fb58:	cset	w0, eq  // eq = none
    fb5c:	and	w0, w0, #0xff
    fb60:	mov	w1, w0
    fb64:	ldr	x0, [sp, #24]
    fb68:	ldrb	w0, [x0, #185]
    fb6c:	eor	w0, w0, #0x1
    fb70:	and	w0, w0, #0xff
    fb74:	and	w0, w1, w0
    fb78:	ldr	x1, [sp, #96]
    fb7c:	mvn	x1, x1
    fb80:	lsr	x1, x1, #63
    fb84:	and	w1, w1, #0xff
    fb88:	and	w0, w0, w1
    fb8c:	cmp	w0, #0x0
    fb90:	cset	w0, ne  // ne = any
    fb94:	and	w0, w0, #0xff
    fb98:	and	x0, x0, #0xff
    fb9c:	cmp	x0, #0x0
    fba0:	b.eq	fbdc <XS_B__BM_RARE+0x244>  // b.none
    fba4:	b	fbb4 <XS_B__BM_RARE+0x21c>
    fba8:	adrp	x0, 18000 <boot_B+0x23d8>
    fbac:	add	x0, x0, #0xf80
    fbb0:	bl	4e60 <Perl_croak_nocontext@plt>
    fbb4:	ldr	x0, [sp, #72]
    fbb8:	ldr	w1, [x0, #12]
    fbbc:	mov	w0, #0x1100                	// #4352
    fbc0:	orr	w1, w1, w0
    fbc4:	ldr	x0, [sp, #72]
    fbc8:	str	w1, [x0, #12]
    fbcc:	ldr	x1, [sp, #96]
    fbd0:	ldr	x0, [sp, #72]
    fbd4:	str	x1, [x0, #16]
    fbd8:	b	fbec <XS_B__BM_RARE+0x254>
    fbdc:	ldr	x2, [sp, #96]
    fbe0:	ldr	x1, [sp, #72]
    fbe4:	ldr	x0, [sp, #24]
    fbe8:	bl	4fe0 <Perl_sv_setuv_mg@plt>
    fbec:	ldr	x0, [sp, #56]
    fbf0:	add	x0, x0, #0x8
    fbf4:	str	x0, [sp, #56]
    fbf8:	ldr	x0, [sp, #56]
    fbfc:	ldr	x1, [sp, #72]
    fc00:	str	x1, [x0]
    fc04:	mov	x0, #0x1                   	// #1
    fc08:	str	x0, [sp, #104]
    fc0c:	ldr	x0, [sp, #24]
    fc10:	ldr	x1, [x0, #24]
    fc14:	ldrsw	x2, [sp, #48]
    fc18:	ldr	x0, [sp, #104]
    fc1c:	add	x0, x2, x0
    fc20:	lsl	x0, x0, #3
    fc24:	sub	x0, x0, #0x8
    fc28:	add	x1, x1, x0
    fc2c:	ldr	x0, [sp, #24]
    fc30:	str	x1, [x0]
    fc34:	nop
    fc38:	ldp	x29, x30, [sp], #112
    fc3c:	ret

000000000000fc40 <XS_B__GV_NAME>:
    fc40:	stp	x29, x30, [sp, #-112]!
    fc44:	mov	x29, sp
    fc48:	str	x19, [sp, #16]
    fc4c:	str	x0, [sp, #40]
    fc50:	str	x1, [sp, #32]
    fc54:	ldr	x0, [sp, #40]
    fc58:	ldr	x0, [x0]
    fc5c:	str	x0, [sp, #64]
    fc60:	ldr	x0, [sp, #40]
    fc64:	bl	7424 <S_POPMARK>
    fc68:	str	w0, [sp, #52]
    fc6c:	ldr	x0, [sp, #40]
    fc70:	ldr	x1, [x0, #24]
    fc74:	ldr	w0, [sp, #52]
    fc78:	add	w2, w0, #0x1
    fc7c:	str	w2, [sp, #52]
    fc80:	sxtw	x0, w0
    fc84:	lsl	x0, x0, #3
    fc88:	add	x0, x1, x0
    fc8c:	str	x0, [sp, #72]
    fc90:	ldr	x1, [sp, #64]
    fc94:	ldr	x0, [sp, #72]
    fc98:	sub	x0, x1, x0
    fc9c:	asr	x0, x0, #3
    fca0:	str	w0, [sp, #56]
    fca4:	ldr	x0, [sp, #32]
    fca8:	ldr	x0, [x0]
    fcac:	str	x0, [sp, #80]
    fcb0:	ldr	x0, [sp, #80]
    fcb4:	ldr	w0, [x0, #40]
    fcb8:	str	w0, [sp, #60]
    fcbc:	ldr	w0, [sp, #56]
    fcc0:	cmp	w0, #0x1
    fcc4:	b.eq	fcd8 <XS_B__GV_NAME+0x98>  // b.none
    fcc8:	adrp	x0, 18000 <boot_B+0x23d8>
    fccc:	add	x1, x0, #0xb48
    fcd0:	ldr	x0, [sp, #32]
    fcd4:	bl	4d70 <Perl_croak_xs_usage@plt>
    fcd8:	ldr	x0, [sp, #40]
    fcdc:	ldr	x1, [x0, #24]
    fce0:	ldrsw	x0, [sp, #52]
    fce4:	lsl	x0, x0, #3
    fce8:	add	x0, x1, x0
    fcec:	ldr	x0, [x0]
    fcf0:	ldr	w0, [x0, #12]
    fcf4:	and	w0, w0, #0x800
    fcf8:	cmp	w0, #0x0
    fcfc:	b.eq	fda4 <XS_B__GV_NAME+0x164>  // b.none
    fd00:	ldr	x0, [sp, #40]
    fd04:	ldr	x1, [x0, #24]
    fd08:	ldrsw	x0, [sp, #52]
    fd0c:	lsl	x0, x0, #3
    fd10:	add	x0, x1, x0
    fd14:	ldr	x0, [x0]
    fd18:	ldr	x0, [x0, #16]
    fd1c:	ldr	w1, [x0, #12]
    fd20:	mov	w0, #0x100                 	// #256
    fd24:	movk	w0, #0x20, lsl #16
    fd28:	and	w0, w1, w0
    fd2c:	cmp	w0, #0x100
    fd30:	b.ne	fd5c <XS_B__GV_NAME+0x11c>  // b.any
    fd34:	ldr	x0, [sp, #40]
    fd38:	ldr	x1, [x0, #24]
    fd3c:	ldrsw	x0, [sp, #52]
    fd40:	lsl	x0, x0, #3
    fd44:	add	x0, x1, x0
    fd48:	ldr	x0, [x0]
    fd4c:	ldr	x0, [x0, #16]
    fd50:	ldr	x0, [x0]
    fd54:	ldr	x0, [x0, #32]
    fd58:	b	fd88 <XS_B__GV_NAME+0x148>
    fd5c:	ldr	x0, [sp, #40]
    fd60:	ldr	x1, [x0, #24]
    fd64:	ldrsw	x0, [sp, #52]
    fd68:	lsl	x0, x0, #3
    fd6c:	add	x0, x1, x0
    fd70:	ldr	x0, [x0]
    fd74:	ldr	x0, [x0, #16]
    fd78:	mov	w2, #0x2                   	// #2
    fd7c:	mov	x1, x0
    fd80:	ldr	x0, [sp, #40]
    fd84:	bl	4b20 <Perl_sv_2iv_flags@plt>
    fd88:	str	x0, [sp, #88]
    fd8c:	ldr	x0, [sp, #88]
    fd90:	str	x0, [sp, #96]
    fd94:	ldr	w0, [sp, #60]
    fd98:	cmp	w0, #0x0
    fd9c:	b.ne	fdc0 <XS_B__GV_NAME+0x180>  // b.any
    fda0:	b	fdb0 <XS_B__GV_NAME+0x170>
    fda4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
    fda8:	add	x0, x0, #0x70
    fdac:	bl	4e60 <Perl_croak_nocontext@plt>
    fdb0:	ldr	x0, [sp, #96]
    fdb4:	ldr	x0, [x0]
    fdb8:	ldr	x0, [x0, #32]
    fdbc:	b	fea0 <XS_B__GV_NAME+0x260>
    fdc0:	ldr	w0, [sp, #60]
    fdc4:	cmp	w0, #0x1
    fdc8:	b.ne	fddc <XS_B__GV_NAME+0x19c>  // b.any
    fdcc:	ldr	x0, [sp, #96]
    fdd0:	ldr	x0, [x0, #16]
    fdd4:	ldr	x0, [x0, #72]
    fdd8:	b	fea0 <XS_B__GV_NAME+0x260>
    fddc:	ldr	x0, [sp, #96]
    fde0:	ldr	w0, [x0, #12]
    fde4:	and	w0, w0, #0x2000000
    fde8:	cmp	w0, #0x0
    fdec:	b.eq	fe9c <XS_B__GV_NAME+0x25c>  // b.none
    fdf0:	ldr	x0, [sp, #96]
    fdf4:	ldr	x1, [x0, #16]
    fdf8:	ldr	x0, [sp, #96]
    fdfc:	ldr	x0, [x0]
    fe00:	ldr	x0, [x0, #24]
    fe04:	add	x0, x0, #0x1
    fe08:	lsl	x0, x0, #3
    fe0c:	add	x0, x1, x0
    fe10:	ldr	x0, [x0]
    fe14:	cmp	x0, #0x0
    fe18:	b.eq	fe9c <XS_B__GV_NAME+0x25c>  // b.none
    fe1c:	ldr	x0, [sp, #96]
    fe20:	ldr	x1, [x0, #16]
    fe24:	ldr	x0, [sp, #96]
    fe28:	ldr	x0, [x0]
    fe2c:	ldr	x0, [x0, #24]
    fe30:	add	x0, x0, #0x1
    fe34:	lsl	x0, x0, #3
    fe38:	add	x0, x1, x0
    fe3c:	ldr	w0, [x0, #28]
    fe40:	cmp	w0, #0x0
    fe44:	b.eq	fe74 <XS_B__GV_NAME+0x234>  // b.none
    fe48:	ldr	x0, [sp, #96]
    fe4c:	ldr	x1, [x0, #16]
    fe50:	ldr	x0, [sp, #96]
    fe54:	ldr	x0, [x0]
    fe58:	ldr	x0, [x0, #24]
    fe5c:	add	x0, x0, #0x1
    fe60:	lsl	x0, x0, #3
    fe64:	add	x0, x1, x0
    fe68:	ldr	x0, [x0]
    fe6c:	ldr	x0, [x0]
    fe70:	b	fea0 <XS_B__GV_NAME+0x260>
    fe74:	ldr	x0, [sp, #96]
    fe78:	ldr	x1, [x0, #16]
    fe7c:	ldr	x0, [sp, #96]
    fe80:	ldr	x0, [x0]
    fe84:	ldr	x0, [x0, #24]
    fe88:	add	x0, x0, #0x1
    fe8c:	lsl	x0, x0, #3
    fe90:	add	x0, x1, x0
    fe94:	ldr	x0, [x0]
    fe98:	b	fea0 <XS_B__GV_NAME+0x260>
    fe9c:	mov	x0, #0x0                   	// #0
    fea0:	mov	x1, x0
    fea4:	ldr	x0, [sp, #40]
    fea8:	bl	4bc0 <Perl_newSVhek@plt>
    feac:	mov	x2, x0
    feb0:	ldr	x0, [sp, #40]
    feb4:	ldr	x1, [x0, #24]
    feb8:	ldrsw	x0, [sp, #52]
    febc:	lsl	x0, x0, #3
    fec0:	add	x19, x1, x0
    fec4:	mov	x1, x2
    fec8:	ldr	x0, [sp, #40]
    fecc:	bl	4ec0 <Perl_sv_2mortal@plt>
    fed0:	str	x0, [x19]
    fed4:	mov	x0, #0x1                   	// #1
    fed8:	str	x0, [sp, #104]
    fedc:	ldr	x0, [sp, #40]
    fee0:	ldr	x1, [x0, #24]
    fee4:	ldrsw	x2, [sp, #52]
    fee8:	ldr	x0, [sp, #104]
    feec:	add	x0, x2, x0
    fef0:	lsl	x0, x0, #3
    fef4:	sub	x0, x0, #0x8
    fef8:	add	x1, x1, x0
    fefc:	ldr	x0, [sp, #40]
    ff00:	str	x1, [x0]
    ff04:	nop
    ff08:	ldr	x19, [sp, #16]
    ff0c:	ldp	x29, x30, [sp], #112
    ff10:	ret

000000000000ff14 <XS_B__GV_is_empty>:
    ff14:	stp	x29, x30, [sp, #-96]!
    ff18:	mov	x29, sp
    ff1c:	str	x0, [sp, #24]
    ff20:	str	x1, [sp, #16]
    ff24:	ldr	x0, [sp, #24]
    ff28:	ldr	x0, [x0]
    ff2c:	str	x0, [sp, #48]
    ff30:	ldr	x0, [sp, #24]
    ff34:	bl	7424 <S_POPMARK>
    ff38:	str	w0, [sp, #36]
    ff3c:	ldr	x0, [sp, #24]
    ff40:	ldr	x1, [x0, #24]
    ff44:	ldr	w0, [sp, #36]
    ff48:	add	w2, w0, #0x1
    ff4c:	str	w2, [sp, #36]
    ff50:	sxtw	x0, w0
    ff54:	lsl	x0, x0, #3
    ff58:	add	x0, x1, x0
    ff5c:	str	x0, [sp, #56]
    ff60:	ldr	x1, [sp, #48]
    ff64:	ldr	x0, [sp, #56]
    ff68:	sub	x0, x1, x0
    ff6c:	asr	x0, x0, #3
    ff70:	str	w0, [sp, #40]
    ff74:	ldr	x0, [sp, #16]
    ff78:	ldr	x0, [x0]
    ff7c:	str	x0, [sp, #64]
    ff80:	ldr	x0, [sp, #64]
    ff84:	ldr	w0, [x0, #40]
    ff88:	str	w0, [sp, #44]
    ff8c:	ldr	w0, [sp, #40]
    ff90:	cmp	w0, #0x1
    ff94:	b.eq	ffa8 <XS_B__GV_is_empty+0x94>  // b.none
    ff98:	adrp	x0, 18000 <boot_B+0x23d8>
    ff9c:	add	x1, x0, #0xb48
    ffa0:	ldr	x0, [sp, #16]
    ffa4:	bl	4d70 <Perl_croak_xs_usage@plt>
    ffa8:	ldr	x0, [sp, #24]
    ffac:	ldr	x1, [x0, #24]
    ffb0:	ldrsw	x0, [sp, #36]
    ffb4:	lsl	x0, x0, #3
    ffb8:	add	x0, x1, x0
    ffbc:	ldr	x0, [x0]
    ffc0:	ldr	w0, [x0, #12]
    ffc4:	and	w0, w0, #0x800
    ffc8:	cmp	w0, #0x0
    ffcc:	b.eq	10074 <XS_B__GV_is_empty+0x160>  // b.none
    ffd0:	ldr	x0, [sp, #24]
    ffd4:	ldr	x1, [x0, #24]
    ffd8:	ldrsw	x0, [sp, #36]
    ffdc:	lsl	x0, x0, #3
    ffe0:	add	x0, x1, x0
    ffe4:	ldr	x0, [x0]
    ffe8:	ldr	x0, [x0, #16]
    ffec:	ldr	w1, [x0, #12]
    fff0:	mov	w0, #0x100                 	// #256
    fff4:	movk	w0, #0x20, lsl #16
    fff8:	and	w0, w1, w0
    fffc:	cmp	w0, #0x100
   10000:	b.ne	1002c <XS_B__GV_is_empty+0x118>  // b.any
   10004:	ldr	x0, [sp, #24]
   10008:	ldr	x1, [x0, #24]
   1000c:	ldrsw	x0, [sp, #36]
   10010:	lsl	x0, x0, #3
   10014:	add	x0, x1, x0
   10018:	ldr	x0, [x0]
   1001c:	ldr	x0, [x0, #16]
   10020:	ldr	x0, [x0]
   10024:	ldr	x0, [x0, #32]
   10028:	b	10058 <XS_B__GV_is_empty+0x144>
   1002c:	ldr	x0, [sp, #24]
   10030:	ldr	x1, [x0, #24]
   10034:	ldrsw	x0, [sp, #36]
   10038:	lsl	x0, x0, #3
   1003c:	add	x0, x1, x0
   10040:	ldr	x0, [x0]
   10044:	ldr	x0, [x0, #16]
   10048:	mov	w2, #0x2                   	// #2
   1004c:	mov	x1, x0
   10050:	ldr	x0, [sp, #24]
   10054:	bl	4b20 <Perl_sv_2iv_flags@plt>
   10058:	str	x0, [sp, #72]
   1005c:	ldr	x0, [sp, #72]
   10060:	str	x0, [sp, #80]
   10064:	ldr	w0, [sp, #44]
   10068:	cmp	w0, #0x0
   1006c:	b.eq	100dc <XS_B__GV_is_empty+0x1c8>  // b.none
   10070:	b	10080 <XS_B__GV_is_empty+0x16c>
   10074:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10078:	add	x0, x0, #0x70
   1007c:	bl	4e60 <Perl_croak_nocontext@plt>
   10080:	ldr	x0, [sp, #80]
   10084:	ldr	w0, [x0, #12]
   10088:	and	w0, w0, #0xc000
   1008c:	cmp	w0, #0x8, lsl #12
   10090:	b.ne	100c4 <XS_B__GV_is_empty+0x1b0>  // b.any
   10094:	ldr	x0, [sp, #80]
   10098:	ldr	w0, [x0, #12]
   1009c:	and	w0, w0, #0xff
   100a0:	cmp	w0, #0x9
   100a4:	b.eq	100bc <XS_B__GV_is_empty+0x1a8>  // b.none
   100a8:	ldr	x0, [sp, #80]
   100ac:	ldr	w0, [x0, #12]
   100b0:	and	w0, w0, #0xff
   100b4:	cmp	w0, #0xa
   100b8:	b.ne	100c4 <XS_B__GV_is_empty+0x1b0>  // b.any
   100bc:	mov	w0, #0x1                   	// #1
   100c0:	b	100c8 <XS_B__GV_is_empty+0x1b4>
   100c4:	mov	w0, #0x0                   	// #0
   100c8:	strb	w0, [sp, #35]
   100cc:	ldrb	w0, [sp, #35]
   100d0:	and	w0, w0, #0x1
   100d4:	strb	w0, [sp, #35]
   100d8:	b	100f0 <XS_B__GV_is_empty+0x1dc>
   100dc:	ldr	x0, [sp, #80]
   100e0:	ldr	x0, [x0, #16]
   100e4:	cmp	x0, #0x0
   100e8:	cset	w0, eq  // eq = none
   100ec:	strb	w0, [sp, #35]
   100f0:	ldrb	w0, [sp, #35]
   100f4:	cmp	w0, #0x0
   100f8:	b.eq	10108 <XS_B__GV_is_empty+0x1f4>  // b.none
   100fc:	ldr	x0, [sp, #24]
   10100:	add	x0, x0, #0x138
   10104:	b	10110 <XS_B__GV_is_empty+0x1fc>
   10108:	ldr	x0, [sp, #24]
   1010c:	add	x0, x0, #0x168
   10110:	ldr	x1, [sp, #24]
   10114:	ldr	x2, [x1, #24]
   10118:	ldrsw	x1, [sp, #36]
   1011c:	lsl	x1, x1, #3
   10120:	add	x1, x2, x1
   10124:	str	x0, [x1]
   10128:	mov	x0, #0x1                   	// #1
   1012c:	str	x0, [sp, #88]
   10130:	ldr	x0, [sp, #24]
   10134:	ldr	x1, [x0, #24]
   10138:	ldrsw	x2, [sp, #36]
   1013c:	ldr	x0, [sp, #88]
   10140:	add	x0, x2, x0
   10144:	lsl	x0, x0, #3
   10148:	sub	x0, x0, #0x8
   1014c:	add	x1, x1, x0
   10150:	ldr	x0, [sp, #24]
   10154:	str	x1, [x0]
   10158:	nop
   1015c:	ldp	x29, x30, [sp], #96
   10160:	ret

0000000000010164 <XS_B__GV_GP>:
   10164:	stp	x29, x30, [sp, #-112]!
   10168:	mov	x29, sp
   1016c:	str	x0, [sp, #24]
   10170:	str	x1, [sp, #16]
   10174:	ldr	x0, [sp, #24]
   10178:	ldr	x0, [x0]
   1017c:	str	x0, [sp, #48]
   10180:	ldr	x0, [sp, #24]
   10184:	bl	7424 <S_POPMARK>
   10188:	str	w0, [sp, #40]
   1018c:	ldr	x0, [sp, #24]
   10190:	ldr	x1, [x0, #24]
   10194:	ldr	w0, [sp, #40]
   10198:	add	w2, w0, #0x1
   1019c:	str	w2, [sp, #40]
   101a0:	sxtw	x0, w0
   101a4:	lsl	x0, x0, #3
   101a8:	add	x0, x1, x0
   101ac:	str	x0, [sp, #56]
   101b0:	ldr	x1, [sp, #48]
   101b4:	ldr	x0, [sp, #56]
   101b8:	sub	x0, x1, x0
   101bc:	asr	x0, x0, #3
   101c0:	str	w0, [sp, #44]
   101c4:	ldr	w0, [sp, #44]
   101c8:	cmp	w0, #0x1
   101cc:	b.eq	101e0 <XS_B__GV_GP+0x7c>  // b.none
   101d0:	adrp	x0, 18000 <boot_B+0x23d8>
   101d4:	add	x1, x0, #0xb48
   101d8:	ldr	x0, [sp, #16]
   101dc:	bl	4d70 <Perl_croak_xs_usage@plt>
   101e0:	ldr	x0, [sp, #24]
   101e4:	ldr	x0, [x0, #8]
   101e8:	ldrb	w0, [x0, #35]
   101ec:	and	w0, w0, #0x4
   101f0:	cmp	w0, #0x0
   101f4:	b.eq	1021c <XS_B__GV_GP+0xb8>  // b.none
   101f8:	ldr	x0, [sp, #24]
   101fc:	ldr	x1, [x0, #16]
   10200:	ldr	x0, [sp, #24]
   10204:	ldr	x0, [x0, #8]
   10208:	ldr	x0, [x0, #24]
   1020c:	lsl	x0, x0, #3
   10210:	add	x0, x1, x0
   10214:	ldr	x0, [x0]
   10218:	b	10224 <XS_B__GV_GP+0xc0>
   1021c:	ldr	x0, [sp, #24]
   10220:	bl	5080 <Perl_sv_newmortal@plt>
   10224:	str	x0, [sp, #64]
   10228:	ldr	x0, [sp, #24]
   1022c:	ldr	x1, [x0, #24]
   10230:	ldrsw	x0, [sp, #40]
   10234:	lsl	x0, x0, #3
   10238:	add	x0, x1, x0
   1023c:	ldr	x0, [x0]
   10240:	ldr	w0, [x0, #12]
   10244:	and	w0, w0, #0x800
   10248:	cmp	w0, #0x0
   1024c:	b.eq	10368 <XS_B__GV_GP+0x204>  // b.none
   10250:	ldr	x0, [sp, #24]
   10254:	ldr	x1, [x0, #24]
   10258:	ldrsw	x0, [sp, #40]
   1025c:	lsl	x0, x0, #3
   10260:	add	x0, x1, x0
   10264:	ldr	x0, [x0]
   10268:	ldr	x0, [x0, #16]
   1026c:	ldr	w1, [x0, #12]
   10270:	mov	w0, #0x100                 	// #256
   10274:	movk	w0, #0x20, lsl #16
   10278:	and	w0, w1, w0
   1027c:	cmp	w0, #0x100
   10280:	b.ne	102ac <XS_B__GV_GP+0x148>  // b.any
   10284:	ldr	x0, [sp, #24]
   10288:	ldr	x1, [x0, #24]
   1028c:	ldrsw	x0, [sp, #40]
   10290:	lsl	x0, x0, #3
   10294:	add	x0, x1, x0
   10298:	ldr	x0, [x0]
   1029c:	ldr	x0, [x0, #16]
   102a0:	ldr	x0, [x0]
   102a4:	ldr	x0, [x0, #32]
   102a8:	b	102d8 <XS_B__GV_GP+0x174>
   102ac:	ldr	x0, [sp, #24]
   102b0:	ldr	x1, [x0, #24]
   102b4:	ldrsw	x0, [sp, #40]
   102b8:	lsl	x0, x0, #3
   102bc:	add	x0, x1, x0
   102c0:	ldr	x0, [x0]
   102c4:	ldr	x0, [x0, #16]
   102c8:	mov	w2, #0x2                   	// #2
   102cc:	mov	x1, x0
   102d0:	ldr	x0, [sp, #24]
   102d4:	bl	4b20 <Perl_sv_2iv_flags@plt>
   102d8:	str	x0, [sp, #72]
   102dc:	ldr	x0, [sp, #72]
   102e0:	str	x0, [sp, #80]
   102e4:	ldr	x0, [sp, #80]
   102e8:	ldr	x0, [x0, #16]
   102ec:	str	x0, [sp, #88]
   102f0:	ldr	x0, [sp, #24]
   102f4:	ldr	x1, [x0, #24]
   102f8:	ldrsw	x0, [sp, #40]
   102fc:	lsl	x0, x0, #3
   10300:	sub	x0, x0, #0x8
   10304:	add	x0, x1, x0
   10308:	str	x0, [sp, #48]
   1030c:	ldr	x0, [sp, #88]
   10310:	str	x0, [sp, #96]
   10314:	ldr	x0, [sp, #64]
   10318:	ldr	w1, [x0, #12]
   1031c:	mov	w0, #0x8ff                 	// #2303
   10320:	movk	w0, #0x9981, lsl #16
   10324:	and	w0, w1, w0
   10328:	cmp	w0, #0x1
   1032c:	cset	w0, eq  // eq = none
   10330:	and	w0, w0, #0xff
   10334:	mov	w1, w0
   10338:	ldr	x0, [sp, #24]
   1033c:	ldrb	w0, [x0, #185]
   10340:	eor	w0, w0, #0x1
   10344:	and	w0, w0, #0xff
   10348:	and	w0, w1, w0
   1034c:	cmp	w0, #0x0
   10350:	cset	w0, ne  // ne = any
   10354:	and	w0, w0, #0xff
   10358:	and	x0, x0, #0xff
   1035c:	cmp	x0, #0x0
   10360:	b.eq	1039c <XS_B__GV_GP+0x238>  // b.none
   10364:	b	10374 <XS_B__GV_GP+0x210>
   10368:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1036c:	add	x0, x0, #0x70
   10370:	bl	4e60 <Perl_croak_nocontext@plt>
   10374:	ldr	x0, [sp, #64]
   10378:	ldr	w1, [x0, #12]
   1037c:	mov	w0, #0x1100                	// #4352
   10380:	orr	w1, w1, w0
   10384:	ldr	x0, [sp, #64]
   10388:	str	w1, [x0, #12]
   1038c:	ldr	x0, [sp, #64]
   10390:	ldr	x1, [sp, #96]
   10394:	str	x1, [x0, #16]
   10398:	b	103ac <XS_B__GV_GP+0x248>
   1039c:	ldr	x2, [sp, #96]
   103a0:	ldr	x1, [sp, #64]
   103a4:	ldr	x0, [sp, #24]
   103a8:	bl	4c60 <Perl_sv_setiv_mg@plt>
   103ac:	ldr	x0, [sp, #48]
   103b0:	add	x0, x0, #0x8
   103b4:	str	x0, [sp, #48]
   103b8:	ldr	x0, [sp, #48]
   103bc:	ldr	x1, [sp, #64]
   103c0:	str	x1, [x0]
   103c4:	mov	x0, #0x1                   	// #1
   103c8:	str	x0, [sp, #104]
   103cc:	ldr	x0, [sp, #24]
   103d0:	ldr	x1, [x0, #24]
   103d4:	ldrsw	x2, [sp, #40]
   103d8:	ldr	x0, [sp, #104]
   103dc:	add	x0, x2, x0
   103e0:	lsl	x0, x0, #3
   103e4:	sub	x0, x0, #0x8
   103e8:	add	x1, x1, x0
   103ec:	ldr	x0, [sp, #24]
   103f0:	str	x1, [x0]
   103f4:	nop
   103f8:	ldp	x29, x30, [sp], #112
   103fc:	ret

0000000000010400 <XS_B__GV_SV>:
   10400:	stp	x29, x30, [sp, #-128]!
   10404:	mov	x29, sp
   10408:	str	x0, [sp, #24]
   1040c:	str	x1, [sp, #16]
   10410:	ldr	x0, [sp, #24]
   10414:	ldr	x0, [x0]
   10418:	str	x0, [sp, #56]
   1041c:	ldr	x0, [sp, #24]
   10420:	bl	7424 <S_POPMARK>
   10424:	str	w0, [sp, #36]
   10428:	ldr	x0, [sp, #24]
   1042c:	ldr	x1, [x0, #24]
   10430:	ldr	w0, [sp, #36]
   10434:	add	w2, w0, #0x1
   10438:	str	w2, [sp, #36]
   1043c:	sxtw	x0, w0
   10440:	lsl	x0, x0, #3
   10444:	add	x0, x1, x0
   10448:	str	x0, [sp, #64]
   1044c:	ldr	x1, [sp, #56]
   10450:	ldr	x0, [sp, #64]
   10454:	sub	x0, x1, x0
   10458:	asr	x0, x0, #3
   1045c:	str	w0, [sp, #40]
   10460:	ldr	x0, [sp, #16]
   10464:	ldr	x0, [x0]
   10468:	str	x0, [sp, #72]
   1046c:	ldr	x0, [sp, #72]
   10470:	ldr	w0, [x0, #40]
   10474:	str	w0, [sp, #44]
   10478:	ldr	w0, [sp, #40]
   1047c:	cmp	w0, #0x1
   10480:	b.eq	10494 <XS_B__GV_SV+0x94>  // b.none
   10484:	adrp	x0, 18000 <boot_B+0x23d8>
   10488:	add	x1, x0, #0xb48
   1048c:	ldr	x0, [sp, #16]
   10490:	bl	4d70 <Perl_croak_xs_usage@plt>
   10494:	ldrsw	x0, [sp, #40]
   10498:	lsl	x0, x0, #3
   1049c:	neg	x0, x0
   104a0:	ldr	x1, [sp, #56]
   104a4:	add	x0, x1, x0
   104a8:	str	x0, [sp, #56]
   104ac:	ldr	x0, [sp, #24]
   104b0:	ldr	x1, [x0, #24]
   104b4:	ldrsw	x0, [sp, #36]
   104b8:	lsl	x0, x0, #3
   104bc:	add	x0, x1, x0
   104c0:	ldr	x0, [x0]
   104c4:	ldr	w0, [x0, #12]
   104c8:	and	w0, w0, #0x800
   104cc:	cmp	w0, #0x0
   104d0:	b.eq	10584 <XS_B__GV_SV+0x184>  // b.none
   104d4:	ldr	x0, [sp, #24]
   104d8:	ldr	x1, [x0, #24]
   104dc:	ldrsw	x0, [sp, #36]
   104e0:	lsl	x0, x0, #3
   104e4:	add	x0, x1, x0
   104e8:	ldr	x0, [x0]
   104ec:	ldr	x0, [x0, #16]
   104f0:	ldr	w1, [x0, #12]
   104f4:	mov	w0, #0x100                 	// #256
   104f8:	movk	w0, #0x20, lsl #16
   104fc:	and	w0, w1, w0
   10500:	cmp	w0, #0x100
   10504:	b.ne	10530 <XS_B__GV_SV+0x130>  // b.any
   10508:	ldr	x0, [sp, #24]
   1050c:	ldr	x1, [x0, #24]
   10510:	ldrsw	x0, [sp, #36]
   10514:	lsl	x0, x0, #3
   10518:	add	x0, x1, x0
   1051c:	ldr	x0, [x0]
   10520:	ldr	x0, [x0, #16]
   10524:	ldr	x0, [x0]
   10528:	ldr	x0, [x0, #32]
   1052c:	b	1055c <XS_B__GV_SV+0x15c>
   10530:	ldr	x0, [sp, #24]
   10534:	ldr	x1, [x0, #24]
   10538:	ldrsw	x0, [sp, #36]
   1053c:	lsl	x0, x0, #3
   10540:	add	x0, x1, x0
   10544:	ldr	x0, [x0]
   10548:	ldr	x0, [x0, #16]
   1054c:	mov	w2, #0x2                   	// #2
   10550:	mov	x1, x0
   10554:	ldr	x0, [sp, #24]
   10558:	bl	4b20 <Perl_sv_2iv_flags@plt>
   1055c:	str	x0, [sp, #80]
   10560:	ldr	x0, [sp, #80]
   10564:	str	x0, [sp, #88]
   10568:	ldr	x0, [sp, #88]
   1056c:	ldr	x0, [x0, #16]
   10570:	str	x0, [sp, #96]
   10574:	ldr	x0, [sp, #96]
   10578:	cmp	x0, #0x0
   1057c:	b.ne	105dc <XS_B__GV_SV+0x1dc>  // b.any
   10580:	b	10590 <XS_B__GV_SV+0x190>
   10584:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10588:	add	x0, x0, #0x70
   1058c:	bl	4e60 <Perl_croak_nocontext@plt>
   10590:	ldr	x1, [sp, #16]
   10594:	ldr	x0, [sp, #24]
   10598:	bl	73ac <S_CvGV>
   1059c:	str	x0, [sp, #120]
   105a0:	ldr	x0, [sp, #120]
   105a4:	cmp	x0, #0x0
   105a8:	b.eq	105c0 <XS_B__GV_SV+0x1c0>  // b.none
   105ac:	ldr	x0, [sp, #120]
   105b0:	ldr	x0, [x0]
   105b4:	ldr	x0, [x0, #32]
   105b8:	add	x0, x0, #0x8
   105bc:	b	105c8 <XS_B__GV_SV+0x1c8>
   105c0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   105c4:	add	x0, x0, #0x88
   105c8:	mov	x2, x0
   105cc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   105d0:	add	x1, x0, #0x90
   105d4:	ldr	x0, [sp, #24]
   105d8:	bl	4dd0 <Perl_croak@plt>
   105dc:	ldr	w0, [sp, #44]
   105e0:	mov	w0, w0
   105e4:	and	x0, x0, #0xffff
   105e8:	ldr	x1, [sp, #96]
   105ec:	add	x0, x1, x0
   105f0:	str	x0, [sp, #104]
   105f4:	ldr	w0, [sp, #44]
   105f8:	asr	w0, w0, #16
   105fc:	and	w0, w0, #0xff
   10600:	cmp	w0, #0x0
   10604:	b.eq	10614 <XS_B__GV_SV+0x214>  // b.none
   10608:	cmp	w0, #0x1
   1060c:	b.eq	10630 <XS_B__GV_SV+0x230>  // b.none
   10610:	b	1065c <XS_B__GV_SV+0x25c>
   10614:	ldr	x0, [sp, #104]
   10618:	ldr	x0, [x0]
   1061c:	mov	x1, x0
   10620:	ldr	x0, [sp, #24]
   10624:	bl	77c4 <make_sv_object>
   10628:	str	x0, [sp, #48]
   1062c:	b	10670 <XS_B__GV_SV+0x270>
   10630:	ldr	x0, [sp, #104]
   10634:	ldr	w0, [x0]
   10638:	mov	w0, w0
   1063c:	mov	x1, x0
   10640:	ldr	x0, [sp, #24]
   10644:	bl	4f00 <Perl_newSVuv@plt>
   10648:	mov	x1, x0
   1064c:	ldr	x0, [sp, #24]
   10650:	bl	4ec0 <Perl_sv_2mortal@plt>
   10654:	str	x0, [sp, #48]
   10658:	b	10670 <XS_B__GV_SV+0x270>
   1065c:	ldr	w0, [sp, #44]
   10660:	mov	w1, w0
   10664:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10668:	add	x0, x0, #0xa8
   1066c:	bl	4e60 <Perl_croak_nocontext@plt>
   10670:	ldr	x0, [sp, #24]
   10674:	ldr	x1, [x0, #24]
   10678:	ldrsw	x0, [sp, #36]
   1067c:	lsl	x0, x0, #3
   10680:	add	x0, x1, x0
   10684:	ldr	x1, [sp, #48]
   10688:	str	x1, [x0]
   1068c:	mov	x0, #0x1                   	// #1
   10690:	str	x0, [sp, #112]
   10694:	ldr	x0, [sp, #24]
   10698:	ldr	x1, [x0, #24]
   1069c:	ldrsw	x2, [sp, #36]
   106a0:	ldr	x0, [sp, #112]
   106a4:	add	x0, x2, x0
   106a8:	lsl	x0, x0, #3
   106ac:	sub	x0, x0, #0x8
   106b0:	add	x1, x1, x0
   106b4:	ldr	x0, [sp, #24]
   106b8:	str	x1, [x0]
   106bc:	nop
   106c0:	ldp	x29, x30, [sp], #128
   106c4:	ret

00000000000106c8 <XS_B__GV_LINE>:
   106c8:	stp	x29, x30, [sp, #-112]!
   106cc:	mov	x29, sp
   106d0:	str	x0, [sp, #24]
   106d4:	str	x1, [sp, #16]
   106d8:	ldr	x0, [sp, #24]
   106dc:	ldr	x0, [x0]
   106e0:	str	x0, [sp, #56]
   106e4:	ldr	x0, [sp, #24]
   106e8:	bl	7424 <S_POPMARK>
   106ec:	str	w0, [sp, #44]
   106f0:	ldr	x0, [sp, #24]
   106f4:	ldr	x1, [x0, #24]
   106f8:	ldr	w0, [sp, #44]
   106fc:	add	w2, w0, #0x1
   10700:	str	w2, [sp, #44]
   10704:	sxtw	x0, w0
   10708:	lsl	x0, x0, #3
   1070c:	add	x0, x1, x0
   10710:	str	x0, [sp, #64]
   10714:	ldr	x1, [sp, #56]
   10718:	ldr	x0, [sp, #64]
   1071c:	sub	x0, x1, x0
   10720:	asr	x0, x0, #3
   10724:	str	w0, [sp, #48]
   10728:	ldr	w0, [sp, #48]
   1072c:	cmp	w0, #0x1
   10730:	b.eq	10744 <XS_B__GV_LINE+0x7c>  // b.none
   10734:	adrp	x0, 18000 <boot_B+0x23d8>
   10738:	add	x1, x0, #0xb48
   1073c:	ldr	x0, [sp, #16]
   10740:	bl	4d70 <Perl_croak_xs_usage@plt>
   10744:	ldr	x0, [sp, #24]
   10748:	ldr	x0, [x0, #8]
   1074c:	ldrb	w0, [x0, #35]
   10750:	and	w0, w0, #0x4
   10754:	cmp	w0, #0x0
   10758:	b.eq	10780 <XS_B__GV_LINE+0xb8>  // b.none
   1075c:	ldr	x0, [sp, #24]
   10760:	ldr	x1, [x0, #16]
   10764:	ldr	x0, [sp, #24]
   10768:	ldr	x0, [x0, #8]
   1076c:	ldr	x0, [x0, #24]
   10770:	lsl	x0, x0, #3
   10774:	add	x0, x1, x0
   10778:	ldr	x0, [x0]
   1077c:	b	10788 <XS_B__GV_LINE+0xc0>
   10780:	ldr	x0, [sp, #24]
   10784:	bl	5080 <Perl_sv_newmortal@plt>
   10788:	str	x0, [sp, #72]
   1078c:	ldr	x0, [sp, #24]
   10790:	ldr	x1, [x0, #24]
   10794:	ldrsw	x0, [sp, #44]
   10798:	lsl	x0, x0, #3
   1079c:	add	x0, x1, x0
   107a0:	ldr	x0, [x0]
   107a4:	ldr	w0, [x0, #12]
   107a8:	and	w0, w0, #0x800
   107ac:	cmp	w0, #0x0
   107b0:	b.eq	108e8 <XS_B__GV_LINE+0x220>  // b.none
   107b4:	ldr	x0, [sp, #24]
   107b8:	ldr	x1, [x0, #24]
   107bc:	ldrsw	x0, [sp, #44]
   107c0:	lsl	x0, x0, #3
   107c4:	add	x0, x1, x0
   107c8:	ldr	x0, [x0]
   107cc:	ldr	x0, [x0, #16]
   107d0:	ldr	w1, [x0, #12]
   107d4:	mov	w0, #0x100                 	// #256
   107d8:	movk	w0, #0x20, lsl #16
   107dc:	and	w0, w1, w0
   107e0:	cmp	w0, #0x100
   107e4:	b.ne	10810 <XS_B__GV_LINE+0x148>  // b.any
   107e8:	ldr	x0, [sp, #24]
   107ec:	ldr	x1, [x0, #24]
   107f0:	ldrsw	x0, [sp, #44]
   107f4:	lsl	x0, x0, #3
   107f8:	add	x0, x1, x0
   107fc:	ldr	x0, [x0]
   10800:	ldr	x0, [x0, #16]
   10804:	ldr	x0, [x0]
   10808:	ldr	x0, [x0, #32]
   1080c:	b	1083c <XS_B__GV_LINE+0x174>
   10810:	ldr	x0, [sp, #24]
   10814:	ldr	x1, [x0, #24]
   10818:	ldrsw	x0, [sp, #44]
   1081c:	lsl	x0, x0, #3
   10820:	add	x0, x1, x0
   10824:	ldr	x0, [x0]
   10828:	ldr	x0, [x0, #16]
   1082c:	mov	w2, #0x2                   	// #2
   10830:	mov	x1, x0
   10834:	ldr	x0, [sp, #24]
   10838:	bl	4b20 <Perl_sv_2iv_flags@plt>
   1083c:	str	x0, [sp, #80]
   10840:	ldr	x0, [sp, #80]
   10844:	str	x0, [sp, #88]
   10848:	ldr	x0, [sp, #88]
   1084c:	ldr	x0, [x0, #16]
   10850:	ldr	w0, [x0, #64]
   10854:	ubfx	x0, x0, #0, #31
   10858:	str	w0, [sp, #52]
   1085c:	ldr	x0, [sp, #24]
   10860:	ldr	x1, [x0, #24]
   10864:	ldrsw	x0, [sp, #44]
   10868:	lsl	x0, x0, #3
   1086c:	sub	x0, x0, #0x8
   10870:	add	x0, x1, x0
   10874:	str	x0, [sp, #56]
   10878:	ldr	w0, [sp, #52]
   1087c:	str	x0, [sp, #96]
   10880:	ldr	x0, [sp, #72]
   10884:	ldr	w1, [x0, #12]
   10888:	mov	w0, #0x8ff                 	// #2303
   1088c:	movk	w0, #0x9981, lsl #16
   10890:	and	w0, w1, w0
   10894:	cmp	w0, #0x1
   10898:	cset	w0, eq  // eq = none
   1089c:	and	w0, w0, #0xff
   108a0:	mov	w1, w0
   108a4:	ldr	x0, [sp, #24]
   108a8:	ldrb	w0, [x0, #185]
   108ac:	eor	w0, w0, #0x1
   108b0:	and	w0, w0, #0xff
   108b4:	and	w0, w1, w0
   108b8:	ldr	x1, [sp, #96]
   108bc:	mvn	x1, x1
   108c0:	lsr	x1, x1, #63
   108c4:	and	w1, w1, #0xff
   108c8:	and	w0, w0, w1
   108cc:	cmp	w0, #0x0
   108d0:	cset	w0, ne  // ne = any
   108d4:	and	w0, w0, #0xff
   108d8:	and	x0, x0, #0xff
   108dc:	cmp	x0, #0x0
   108e0:	b.eq	1091c <XS_B__GV_LINE+0x254>  // b.none
   108e4:	b	108f4 <XS_B__GV_LINE+0x22c>
   108e8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   108ec:	add	x0, x0, #0x70
   108f0:	bl	4e60 <Perl_croak_nocontext@plt>
   108f4:	ldr	x0, [sp, #72]
   108f8:	ldr	w1, [x0, #12]
   108fc:	mov	w0, #0x1100                	// #4352
   10900:	orr	w1, w1, w0
   10904:	ldr	x0, [sp, #72]
   10908:	str	w1, [x0, #12]
   1090c:	ldr	x1, [sp, #96]
   10910:	ldr	x0, [sp, #72]
   10914:	str	x1, [x0, #16]
   10918:	b	1092c <XS_B__GV_LINE+0x264>
   1091c:	ldr	x2, [sp, #96]
   10920:	ldr	x1, [sp, #72]
   10924:	ldr	x0, [sp, #24]
   10928:	bl	4fe0 <Perl_sv_setuv_mg@plt>
   1092c:	ldr	x0, [sp, #56]
   10930:	add	x0, x0, #0x8
   10934:	str	x0, [sp, #56]
   10938:	ldr	x0, [sp, #56]
   1093c:	ldr	x1, [sp, #72]
   10940:	str	x1, [x0]
   10944:	mov	x0, #0x1                   	// #1
   10948:	str	x0, [sp, #104]
   1094c:	ldr	x0, [sp, #24]
   10950:	ldr	x1, [x0, #24]
   10954:	ldrsw	x2, [sp, #44]
   10958:	ldr	x0, [sp, #104]
   1095c:	add	x0, x2, x0
   10960:	lsl	x0, x0, #3
   10964:	sub	x0, x0, #0x8
   10968:	add	x1, x1, x0
   1096c:	ldr	x0, [sp, #24]
   10970:	str	x1, [x0]
   10974:	nop
   10978:	ldp	x29, x30, [sp], #112
   1097c:	ret

0000000000010980 <XS_B__GV_GPFLAGS>:
   10980:	stp	x29, x30, [sp, #-112]!
   10984:	mov	x29, sp
   10988:	str	x0, [sp, #24]
   1098c:	str	x1, [sp, #16]
   10990:	ldr	x0, [sp, #24]
   10994:	ldr	x0, [x0]
   10998:	str	x0, [sp, #56]
   1099c:	ldr	x0, [sp, #24]
   109a0:	bl	7424 <S_POPMARK>
   109a4:	str	w0, [sp, #44]
   109a8:	ldr	x0, [sp, #24]
   109ac:	ldr	x1, [x0, #24]
   109b0:	ldr	w0, [sp, #44]
   109b4:	add	w2, w0, #0x1
   109b8:	str	w2, [sp, #44]
   109bc:	sxtw	x0, w0
   109c0:	lsl	x0, x0, #3
   109c4:	add	x0, x1, x0
   109c8:	str	x0, [sp, #64]
   109cc:	ldr	x1, [sp, #56]
   109d0:	ldr	x0, [sp, #64]
   109d4:	sub	x0, x1, x0
   109d8:	asr	x0, x0, #3
   109dc:	str	w0, [sp, #48]
   109e0:	ldr	w0, [sp, #48]
   109e4:	cmp	w0, #0x1
   109e8:	b.eq	109fc <XS_B__GV_GPFLAGS+0x7c>  // b.none
   109ec:	adrp	x0, 18000 <boot_B+0x23d8>
   109f0:	add	x1, x0, #0xb48
   109f4:	ldr	x0, [sp, #16]
   109f8:	bl	4d70 <Perl_croak_xs_usage@plt>
   109fc:	ldr	x0, [sp, #24]
   10a00:	ldr	x0, [x0, #8]
   10a04:	ldrb	w0, [x0, #35]
   10a08:	and	w0, w0, #0x4
   10a0c:	cmp	w0, #0x0
   10a10:	b.eq	10a38 <XS_B__GV_GPFLAGS+0xb8>  // b.none
   10a14:	ldr	x0, [sp, #24]
   10a18:	ldr	x1, [x0, #16]
   10a1c:	ldr	x0, [sp, #24]
   10a20:	ldr	x0, [x0, #8]
   10a24:	ldr	x0, [x0, #24]
   10a28:	lsl	x0, x0, #3
   10a2c:	add	x0, x1, x0
   10a30:	ldr	x0, [x0]
   10a34:	b	10a40 <XS_B__GV_GPFLAGS+0xc0>
   10a38:	ldr	x0, [sp, #24]
   10a3c:	bl	5080 <Perl_sv_newmortal@plt>
   10a40:	str	x0, [sp, #72]
   10a44:	ldr	x0, [sp, #24]
   10a48:	ldr	x1, [x0, #24]
   10a4c:	ldrsw	x0, [sp, #44]
   10a50:	lsl	x0, x0, #3
   10a54:	add	x0, x1, x0
   10a58:	ldr	x0, [x0]
   10a5c:	ldr	w0, [x0, #12]
   10a60:	and	w0, w0, #0x800
   10a64:	cmp	w0, #0x0
   10a68:	b.eq	10ba4 <XS_B__GV_GPFLAGS+0x224>  // b.none
   10a6c:	ldr	x0, [sp, #24]
   10a70:	ldr	x1, [x0, #24]
   10a74:	ldrsw	x0, [sp, #44]
   10a78:	lsl	x0, x0, #3
   10a7c:	add	x0, x1, x0
   10a80:	ldr	x0, [x0]
   10a84:	ldr	x0, [x0, #16]
   10a88:	ldr	w1, [x0, #12]
   10a8c:	mov	w0, #0x100                 	// #256
   10a90:	movk	w0, #0x20, lsl #16
   10a94:	and	w0, w1, w0
   10a98:	cmp	w0, #0x100
   10a9c:	b.ne	10ac8 <XS_B__GV_GPFLAGS+0x148>  // b.any
   10aa0:	ldr	x0, [sp, #24]
   10aa4:	ldr	x1, [x0, #24]
   10aa8:	ldrsw	x0, [sp, #44]
   10aac:	lsl	x0, x0, #3
   10ab0:	add	x0, x1, x0
   10ab4:	ldr	x0, [x0]
   10ab8:	ldr	x0, [x0, #16]
   10abc:	ldr	x0, [x0]
   10ac0:	ldr	x0, [x0, #32]
   10ac4:	b	10af4 <XS_B__GV_GPFLAGS+0x174>
   10ac8:	ldr	x0, [sp, #24]
   10acc:	ldr	x1, [x0, #24]
   10ad0:	ldrsw	x0, [sp, #44]
   10ad4:	lsl	x0, x0, #3
   10ad8:	add	x0, x1, x0
   10adc:	ldr	x0, [x0]
   10ae0:	ldr	x0, [x0, #16]
   10ae4:	mov	w2, #0x2                   	// #2
   10ae8:	mov	x1, x0
   10aec:	ldr	x0, [sp, #24]
   10af0:	bl	4b20 <Perl_sv_2iv_flags@plt>
   10af4:	str	x0, [sp, #80]
   10af8:	ldr	x0, [sp, #80]
   10afc:	str	x0, [sp, #88]
   10b00:	ldr	x0, [sp, #88]
   10b04:	ldr	x0, [x0, #16]
   10b08:	ldrb	w0, [x0, #67]
   10b0c:	ubfx	x0, x0, #7, #1
   10b10:	and	w0, w0, #0xff
   10b14:	str	w0, [sp, #52]
   10b18:	ldr	x0, [sp, #24]
   10b1c:	ldr	x1, [x0, #24]
   10b20:	ldrsw	x0, [sp, #44]
   10b24:	lsl	x0, x0, #3
   10b28:	sub	x0, x0, #0x8
   10b2c:	add	x0, x1, x0
   10b30:	str	x0, [sp, #56]
   10b34:	ldr	w0, [sp, #52]
   10b38:	str	x0, [sp, #96]
   10b3c:	ldr	x0, [sp, #72]
   10b40:	ldr	w1, [x0, #12]
   10b44:	mov	w0, #0x8ff                 	// #2303
   10b48:	movk	w0, #0x9981, lsl #16
   10b4c:	and	w0, w1, w0
   10b50:	cmp	w0, #0x1
   10b54:	cset	w0, eq  // eq = none
   10b58:	and	w0, w0, #0xff
   10b5c:	mov	w1, w0
   10b60:	ldr	x0, [sp, #24]
   10b64:	ldrb	w0, [x0, #185]
   10b68:	eor	w0, w0, #0x1
   10b6c:	and	w0, w0, #0xff
   10b70:	and	w0, w1, w0
   10b74:	ldr	x1, [sp, #96]
   10b78:	mvn	x1, x1
   10b7c:	lsr	x1, x1, #63
   10b80:	and	w1, w1, #0xff
   10b84:	and	w0, w0, w1
   10b88:	cmp	w0, #0x0
   10b8c:	cset	w0, ne  // ne = any
   10b90:	and	w0, w0, #0xff
   10b94:	and	x0, x0, #0xff
   10b98:	cmp	x0, #0x0
   10b9c:	b.eq	10bd8 <XS_B__GV_GPFLAGS+0x258>  // b.none
   10ba0:	b	10bb0 <XS_B__GV_GPFLAGS+0x230>
   10ba4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10ba8:	add	x0, x0, #0x70
   10bac:	bl	4e60 <Perl_croak_nocontext@plt>
   10bb0:	ldr	x0, [sp, #72]
   10bb4:	ldr	w1, [x0, #12]
   10bb8:	mov	w0, #0x1100                	// #4352
   10bbc:	orr	w1, w1, w0
   10bc0:	ldr	x0, [sp, #72]
   10bc4:	str	w1, [x0, #12]
   10bc8:	ldr	x1, [sp, #96]
   10bcc:	ldr	x0, [sp, #72]
   10bd0:	str	x1, [x0, #16]
   10bd4:	b	10be8 <XS_B__GV_GPFLAGS+0x268>
   10bd8:	ldr	x2, [sp, #96]
   10bdc:	ldr	x1, [sp, #72]
   10be0:	ldr	x0, [sp, #24]
   10be4:	bl	4fe0 <Perl_sv_setuv_mg@plt>
   10be8:	ldr	x0, [sp, #56]
   10bec:	add	x0, x0, #0x8
   10bf0:	str	x0, [sp, #56]
   10bf4:	ldr	x0, [sp, #56]
   10bf8:	ldr	x1, [sp, #72]
   10bfc:	str	x1, [x0]
   10c00:	mov	x0, #0x1                   	// #1
   10c04:	str	x0, [sp, #104]
   10c08:	ldr	x0, [sp, #24]
   10c0c:	ldr	x1, [x0, #24]
   10c10:	ldrsw	x2, [sp, #44]
   10c14:	ldr	x0, [sp, #104]
   10c18:	add	x0, x2, x0
   10c1c:	lsl	x0, x0, #3
   10c20:	sub	x0, x0, #0x8
   10c24:	add	x1, x1, x0
   10c28:	ldr	x0, [sp, #24]
   10c2c:	str	x1, [x0]
   10c30:	nop
   10c34:	ldp	x29, x30, [sp], #112
   10c38:	ret

0000000000010c3c <XS_B__GV_FILEGV>:
   10c3c:	stp	x29, x30, [sp, #-80]!
   10c40:	mov	x29, sp
   10c44:	str	x0, [sp, #24]
   10c48:	str	x1, [sp, #16]
   10c4c:	ldr	x0, [sp, #24]
   10c50:	ldr	x0, [x0]
   10c54:	str	x0, [sp, #48]
   10c58:	ldr	x0, [sp, #24]
   10c5c:	bl	7424 <S_POPMARK>
   10c60:	str	w0, [sp, #40]
   10c64:	ldr	x0, [sp, #24]
   10c68:	ldr	x1, [x0, #24]
   10c6c:	ldr	w0, [sp, #40]
   10c70:	add	w2, w0, #0x1
   10c74:	str	w2, [sp, #40]
   10c78:	sxtw	x0, w0
   10c7c:	lsl	x0, x0, #3
   10c80:	add	x0, x1, x0
   10c84:	str	x0, [sp, #56]
   10c88:	ldr	x1, [sp, #48]
   10c8c:	ldr	x0, [sp, #56]
   10c90:	sub	x0, x1, x0
   10c94:	asr	x0, x0, #3
   10c98:	str	w0, [sp, #44]
   10c9c:	ldr	w0, [sp, #44]
   10ca0:	cmp	w0, #0x1
   10ca4:	b.eq	10cb8 <XS_B__GV_FILEGV+0x7c>  // b.none
   10ca8:	adrp	x0, 18000 <boot_B+0x23d8>
   10cac:	add	x1, x0, #0xb48
   10cb0:	ldr	x0, [sp, #16]
   10cb4:	bl	4d70 <Perl_croak_xs_usage@plt>
   10cb8:	ldrsw	x0, [sp, #44]
   10cbc:	lsl	x0, x0, #3
   10cc0:	neg	x0, x0
   10cc4:	ldr	x1, [sp, #48]
   10cc8:	add	x0, x1, x0
   10ccc:	str	x0, [sp, #48]
   10cd0:	ldr	x0, [sp, #24]
   10cd4:	ldr	x1, [x0, #24]
   10cd8:	ldrsw	x0, [sp, #40]
   10cdc:	lsl	x0, x0, #3
   10ce0:	add	x0, x1, x0
   10ce4:	ldr	x0, [x0]
   10ce8:	ldr	w0, [x0, #12]
   10cec:	and	w0, w0, #0x800
   10cf0:	cmp	w0, #0x0
   10cf4:	b.eq	10da4 <XS_B__GV_FILEGV+0x168>  // b.none
   10cf8:	ldr	x0, [sp, #24]
   10cfc:	ldr	x1, [x0, #24]
   10d00:	ldrsw	x0, [sp, #40]
   10d04:	lsl	x0, x0, #3
   10d08:	add	x0, x1, x0
   10d0c:	ldr	x0, [x0]
   10d10:	ldr	x0, [x0, #16]
   10d14:	ldr	w1, [x0, #12]
   10d18:	mov	w0, #0x100                 	// #256
   10d1c:	movk	w0, #0x20, lsl #16
   10d20:	and	w0, w1, w0
   10d24:	cmp	w0, #0x100
   10d28:	b.ne	10d54 <XS_B__GV_FILEGV+0x118>  // b.any
   10d2c:	ldr	x0, [sp, #24]
   10d30:	ldr	x1, [x0, #24]
   10d34:	ldrsw	x0, [sp, #40]
   10d38:	lsl	x0, x0, #3
   10d3c:	add	x0, x1, x0
   10d40:	ldr	x0, [x0]
   10d44:	ldr	x0, [x0, #16]
   10d48:	ldr	x0, [x0]
   10d4c:	ldr	x0, [x0, #32]
   10d50:	b	10d80 <XS_B__GV_FILEGV+0x144>
   10d54:	ldr	x0, [sp, #24]
   10d58:	ldr	x1, [x0, #24]
   10d5c:	ldrsw	x0, [sp, #40]
   10d60:	lsl	x0, x0, #3
   10d64:	add	x0, x1, x0
   10d68:	ldr	x0, [x0]
   10d6c:	ldr	x0, [x0, #16]
   10d70:	mov	w2, #0x2                   	// #2
   10d74:	mov	x1, x0
   10d78:	ldr	x0, [sp, #24]
   10d7c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   10d80:	str	x0, [sp, #64]
   10d84:	ldr	x0, [sp, #64]
   10d88:	str	x0, [sp, #72]
   10d8c:	ldr	x0, [sp, #72]
   10d90:	ldr	x0, [x0, #16]
   10d94:	ldr	x0, [x0, #72]
   10d98:	cmp	x0, #0x0
   10d9c:	b.eq	10dd4 <XS_B__GV_FILEGV+0x198>  // b.none
   10da0:	b	10db0 <XS_B__GV_FILEGV+0x174>
   10da4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10da8:	add	x0, x0, #0x70
   10dac:	bl	4e60 <Perl_croak_nocontext@plt>
   10db0:	ldr	x0, [sp, #72]
   10db4:	ldr	x0, [x0, #16]
   10db8:	ldr	x0, [x0, #72]
   10dbc:	add	x0, x0, #0x8
   10dc0:	mov	x1, x0
   10dc4:	ldr	x0, [sp, #24]
   10dc8:	bl	4f50 <Perl_gv_fetchfile@plt>
   10dcc:	mov	x1, x0
   10dd0:	b	10dd8 <XS_B__GV_FILEGV+0x19c>
   10dd4:	mov	x1, #0x0                   	// #0
   10dd8:	ldr	x0, [sp, #48]
   10ddc:	add	x0, x0, #0x8
   10de0:	str	x0, [sp, #48]
   10de4:	ldr	x0, [sp, #24]
   10de8:	bl	77c4 <make_sv_object>
   10dec:	mov	x1, x0
   10df0:	ldr	x0, [sp, #48]
   10df4:	str	x1, [x0]
   10df8:	ldr	x0, [sp, #24]
   10dfc:	ldr	x1, [sp, #48]
   10e00:	str	x1, [x0]
   10e04:	nop
   10e08:	ldp	x29, x30, [sp], #80
   10e0c:	ret

0000000000010e10 <XS_B__IO_IsSTD>:
   10e10:	stp	x29, x30, [sp, #-112]!
   10e14:	mov	x29, sp
   10e18:	str	x0, [sp, #24]
   10e1c:	str	x1, [sp, #16]
   10e20:	ldr	x0, [sp, #24]
   10e24:	ldr	x0, [x0]
   10e28:	str	x0, [sp, #64]
   10e2c:	ldr	x0, [sp, #24]
   10e30:	bl	7424 <S_POPMARK>
   10e34:	str	w0, [sp, #48]
   10e38:	ldr	x0, [sp, #24]
   10e3c:	ldr	x1, [x0, #24]
   10e40:	ldr	w0, [sp, #48]
   10e44:	add	w2, w0, #0x1
   10e48:	str	w2, [sp, #48]
   10e4c:	sxtw	x0, w0
   10e50:	lsl	x0, x0, #3
   10e54:	add	x0, x1, x0
   10e58:	str	x0, [sp, #72]
   10e5c:	ldr	x1, [sp, #64]
   10e60:	ldr	x0, [sp, #72]
   10e64:	sub	x0, x1, x0
   10e68:	asr	x0, x0, #3
   10e6c:	str	w0, [sp, #52]
   10e70:	ldr	w0, [sp, #52]
   10e74:	cmp	w0, #0x2
   10e78:	b.eq	10e8c <XS_B__IO_IsSTD+0x7c>  // b.none
   10e7c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10e80:	add	x1, x0, #0xc8
   10e84:	ldr	x0, [sp, #16]
   10e88:	bl	4d70 <Perl_croak_xs_usage@plt>
   10e8c:	ldr	x0, [sp, #24]
   10e90:	ldr	x1, [x0, #24]
   10e94:	ldrsw	x0, [sp, #48]
   10e98:	add	x0, x0, #0x1
   10e9c:	lsl	x0, x0, #3
   10ea0:	add	x0, x1, x0
   10ea4:	ldr	x0, [x0]
   10ea8:	ldr	w1, [x0, #12]
   10eac:	mov	w0, #0x400                 	// #1024
   10eb0:	movk	w0, #0x20, lsl #16
   10eb4:	and	w0, w1, w0
   10eb8:	cmp	w0, #0x400
   10ebc:	b.ne	10ee4 <XS_B__IO_IsSTD+0xd4>  // b.any
   10ec0:	ldr	x0, [sp, #24]
   10ec4:	ldr	x1, [x0, #24]
   10ec8:	ldrsw	x0, [sp, #48]
   10ecc:	add	x0, x0, #0x1
   10ed0:	lsl	x0, x0, #3
   10ed4:	add	x0, x1, x0
   10ed8:	ldr	x0, [x0]
   10edc:	ldr	x0, [x0, #16]
   10ee0:	b	10f14 <XS_B__IO_IsSTD+0x104>
   10ee4:	ldr	x0, [sp, #24]
   10ee8:	ldr	x1, [x0, #24]
   10eec:	ldrsw	x0, [sp, #48]
   10ef0:	add	x0, x0, #0x1
   10ef4:	lsl	x0, x0, #3
   10ef8:	add	x0, x1, x0
   10efc:	ldr	x0, [x0]
   10f00:	mov	w3, #0x2                   	// #2
   10f04:	mov	x2, #0x0                   	// #0
   10f08:	mov	x1, x0
   10f0c:	ldr	x0, [sp, #24]
   10f10:	bl	4ce0 <Perl_sv_2pv_flags@plt>
   10f14:	str	x0, [sp, #80]
   10f18:	str	xzr, [sp, #56]
   10f1c:	ldr	x0, [sp, #24]
   10f20:	ldr	x1, [x0, #24]
   10f24:	ldrsw	x0, [sp, #48]
   10f28:	lsl	x0, x0, #3
   10f2c:	add	x0, x1, x0
   10f30:	ldr	x0, [x0]
   10f34:	ldr	w0, [x0, #12]
   10f38:	and	w0, w0, #0x800
   10f3c:	cmp	w0, #0x0
   10f40:	b.eq	10ff4 <XS_B__IO_IsSTD+0x1e4>  // b.none
   10f44:	ldr	x0, [sp, #24]
   10f48:	ldr	x1, [x0, #24]
   10f4c:	ldrsw	x0, [sp, #48]
   10f50:	lsl	x0, x0, #3
   10f54:	add	x0, x1, x0
   10f58:	ldr	x0, [x0]
   10f5c:	ldr	x0, [x0, #16]
   10f60:	ldr	w1, [x0, #12]
   10f64:	mov	w0, #0x100                 	// #256
   10f68:	movk	w0, #0x20, lsl #16
   10f6c:	and	w0, w1, w0
   10f70:	cmp	w0, #0x100
   10f74:	b.ne	10fa0 <XS_B__IO_IsSTD+0x190>  // b.any
   10f78:	ldr	x0, [sp, #24]
   10f7c:	ldr	x1, [x0, #24]
   10f80:	ldrsw	x0, [sp, #48]
   10f84:	lsl	x0, x0, #3
   10f88:	add	x0, x1, x0
   10f8c:	ldr	x0, [x0]
   10f90:	ldr	x0, [x0, #16]
   10f94:	ldr	x0, [x0]
   10f98:	ldr	x0, [x0, #32]
   10f9c:	b	10fcc <XS_B__IO_IsSTD+0x1bc>
   10fa0:	ldr	x0, [sp, #24]
   10fa4:	ldr	x1, [x0, #24]
   10fa8:	ldrsw	x0, [sp, #48]
   10fac:	lsl	x0, x0, #3
   10fb0:	add	x0, x1, x0
   10fb4:	ldr	x0, [x0]
   10fb8:	ldr	x0, [x0, #16]
   10fbc:	mov	w2, #0x2                   	// #2
   10fc0:	mov	x1, x0
   10fc4:	ldr	x0, [sp, #24]
   10fc8:	bl	4b20 <Perl_sv_2iv_flags@plt>
   10fcc:	str	x0, [sp, #88]
   10fd0:	ldr	x0, [sp, #88]
   10fd4:	str	x0, [sp, #96]
   10fd8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10fdc:	add	x1, x0, #0xf0
   10fe0:	ldr	x0, [sp, #80]
   10fe4:	bl	4e30 <strcmp@plt>
   10fe8:	cmp	w0, #0x0
   10fec:	b.ne	11010 <XS_B__IO_IsSTD+0x200>  // b.any
   10ff0:	b	11000 <XS_B__IO_IsSTD+0x1f0>
   10ff4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   10ff8:	add	x0, x0, #0xd8
   10ffc:	bl	4e60 <Perl_croak_nocontext@plt>
   11000:	ldr	x0, [sp, #24]
   11004:	bl	4c80 <Perl_PerlIO_stdin@plt>
   11008:	str	x0, [sp, #56]
   1100c:	b	11070 <XS_B__IO_IsSTD+0x260>
   11010:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11014:	add	x1, x0, #0xf8
   11018:	ldr	x0, [sp, #80]
   1101c:	bl	4e30 <strcmp@plt>
   11020:	cmp	w0, #0x0
   11024:	b.ne	11038 <XS_B__IO_IsSTD+0x228>  // b.any
   11028:	ldr	x0, [sp, #24]
   1102c:	bl	4b50 <Perl_PerlIO_stdout@plt>
   11030:	str	x0, [sp, #56]
   11034:	b	11070 <XS_B__IO_IsSTD+0x260>
   11038:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1103c:	add	x1, x0, #0x100
   11040:	ldr	x0, [sp, #80]
   11044:	bl	4e30 <strcmp@plt>
   11048:	cmp	w0, #0x0
   1104c:	b.ne	11060 <XS_B__IO_IsSTD+0x250>  // b.any
   11050:	ldr	x0, [sp, #24]
   11054:	bl	5030 <Perl_PerlIO_stderr@plt>
   11058:	str	x0, [sp, #56]
   1105c:	b	11070 <XS_B__IO_IsSTD+0x260>
   11060:	ldr	x1, [sp, #80]
   11064:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11068:	add	x0, x0, #0x108
   1106c:	bl	4e60 <Perl_croak_nocontext@plt>
   11070:	ldr	x0, [sp, #96]
   11074:	ldr	x0, [x0, #16]
   11078:	ldr	x1, [sp, #56]
   1107c:	cmp	x1, x0
   11080:	cset	w0, eq  // eq = none
   11084:	strb	w0, [sp, #47]
   11088:	ldrb	w0, [sp, #47]
   1108c:	cmp	w0, #0x0
   11090:	b.eq	110a0 <XS_B__IO_IsSTD+0x290>  // b.none
   11094:	ldr	x0, [sp, #24]
   11098:	add	x0, x0, #0x138
   1109c:	b	110a8 <XS_B__IO_IsSTD+0x298>
   110a0:	ldr	x0, [sp, #24]
   110a4:	add	x0, x0, #0x168
   110a8:	ldr	x1, [sp, #24]
   110ac:	ldr	x2, [x1, #24]
   110b0:	ldrsw	x1, [sp, #48]
   110b4:	lsl	x1, x1, #3
   110b8:	add	x1, x2, x1
   110bc:	str	x0, [x1]
   110c0:	mov	x0, #0x1                   	// #1
   110c4:	str	x0, [sp, #104]
   110c8:	ldr	x0, [sp, #24]
   110cc:	ldr	x1, [x0, #24]
   110d0:	ldrsw	x2, [sp, #48]
   110d4:	ldr	x0, [sp, #104]
   110d8:	add	x0, x2, x0
   110dc:	lsl	x0, x0, #3
   110e0:	sub	x0, x0, #0x8
   110e4:	add	x1, x1, x0
   110e8:	ldr	x0, [sp, #24]
   110ec:	str	x1, [x0]
   110f0:	nop
   110f4:	ldp	x29, x30, [sp], #112
   110f8:	ret

00000000000110fc <XS_B__AV_FILL>:
   110fc:	stp	x29, x30, [sp, #-112]!
   11100:	mov	x29, sp
   11104:	str	x0, [sp, #24]
   11108:	str	x1, [sp, #16]
   1110c:	ldr	x0, [sp, #24]
   11110:	ldr	x0, [x0]
   11114:	str	x0, [sp, #40]
   11118:	ldr	x0, [sp, #24]
   1111c:	bl	7424 <S_POPMARK>
   11120:	str	w0, [sp, #32]
   11124:	ldr	x0, [sp, #24]
   11128:	ldr	x1, [x0, #24]
   1112c:	ldr	w0, [sp, #32]
   11130:	add	w2, w0, #0x1
   11134:	str	w2, [sp, #32]
   11138:	sxtw	x0, w0
   1113c:	lsl	x0, x0, #3
   11140:	add	x0, x1, x0
   11144:	str	x0, [sp, #48]
   11148:	ldr	x1, [sp, #40]
   1114c:	ldr	x0, [sp, #48]
   11150:	sub	x0, x1, x0
   11154:	asr	x0, x0, #3
   11158:	str	w0, [sp, #36]
   1115c:	ldr	w0, [sp, #36]
   11160:	cmp	w0, #0x1
   11164:	b.eq	11178 <XS_B__AV_FILL+0x7c>  // b.none
   11168:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1116c:	add	x1, x0, #0x120
   11170:	ldr	x0, [sp, #16]
   11174:	bl	4d70 <Perl_croak_xs_usage@plt>
   11178:	ldr	x0, [sp, #24]
   1117c:	ldr	x0, [x0, #8]
   11180:	ldrb	w0, [x0, #35]
   11184:	and	w0, w0, #0x4
   11188:	cmp	w0, #0x0
   1118c:	b.eq	111b4 <XS_B__AV_FILL+0xb8>  // b.none
   11190:	ldr	x0, [sp, #24]
   11194:	ldr	x1, [x0, #16]
   11198:	ldr	x0, [sp, #24]
   1119c:	ldr	x0, [x0, #8]
   111a0:	ldr	x0, [x0, #24]
   111a4:	lsl	x0, x0, #3
   111a8:	add	x0, x1, x0
   111ac:	ldr	x0, [x0]
   111b0:	b	111bc <XS_B__AV_FILL+0xc0>
   111b4:	ldr	x0, [sp, #24]
   111b8:	bl	5080 <Perl_sv_newmortal@plt>
   111bc:	str	x0, [sp, #56]
   111c0:	ldr	x0, [sp, #24]
   111c4:	ldr	x1, [x0, #24]
   111c8:	ldrsw	x0, [sp, #32]
   111cc:	lsl	x0, x0, #3
   111d0:	add	x0, x1, x0
   111d4:	ldr	x0, [x0]
   111d8:	ldr	w0, [x0, #12]
   111dc:	and	w0, w0, #0x800
   111e0:	cmp	w0, #0x0
   111e4:	b.eq	11294 <XS_B__AV_FILL+0x198>  // b.none
   111e8:	ldr	x0, [sp, #24]
   111ec:	ldr	x1, [x0, #24]
   111f0:	ldrsw	x0, [sp, #32]
   111f4:	lsl	x0, x0, #3
   111f8:	add	x0, x1, x0
   111fc:	ldr	x0, [x0]
   11200:	ldr	x0, [x0, #16]
   11204:	ldr	w1, [x0, #12]
   11208:	mov	w0, #0x100                 	// #256
   1120c:	movk	w0, #0x20, lsl #16
   11210:	and	w0, w1, w0
   11214:	cmp	w0, #0x100
   11218:	b.ne	11244 <XS_B__AV_FILL+0x148>  // b.any
   1121c:	ldr	x0, [sp, #24]
   11220:	ldr	x1, [x0, #24]
   11224:	ldrsw	x0, [sp, #32]
   11228:	lsl	x0, x0, #3
   1122c:	add	x0, x1, x0
   11230:	ldr	x0, [x0]
   11234:	ldr	x0, [x0, #16]
   11238:	ldr	x0, [x0]
   1123c:	ldr	x0, [x0, #32]
   11240:	b	11270 <XS_B__AV_FILL+0x174>
   11244:	ldr	x0, [sp, #24]
   11248:	ldr	x1, [x0, #24]
   1124c:	ldrsw	x0, [sp, #32]
   11250:	lsl	x0, x0, #3
   11254:	add	x0, x1, x0
   11258:	ldr	x0, [x0]
   1125c:	ldr	x0, [x0, #16]
   11260:	mov	w2, #0x2                   	// #2
   11264:	mov	x1, x0
   11268:	ldr	x0, [sp, #24]
   1126c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   11270:	str	x0, [sp, #64]
   11274:	ldr	x0, [sp, #64]
   11278:	str	x0, [sp, #72]
   1127c:	ldr	x0, [sp, #72]
   11280:	ldr	w0, [x0, #12]
   11284:	and	w0, w0, #0x800000
   11288:	cmp	w0, #0x0
   1128c:	b.eq	112c0 <XS_B__AV_FILL+0x1c4>  // b.none
   11290:	b	112a0 <XS_B__AV_FILL+0x1a4>
   11294:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11298:	add	x0, x0, #0x128
   1129c:	bl	4e60 <Perl_croak_nocontext@plt>
   112a0:	ldr	x0, [sp, #72]
   112a4:	str	x0, [sp, #80]
   112a8:	ldr	x0, [sp, #80]
   112ac:	mov	x1, x0
   112b0:	ldr	x0, [sp, #24]
   112b4:	bl	4dc0 <Perl_mg_size@plt>
   112b8:	sxtw	x0, w0
   112bc:	b	112cc <XS_B__AV_FILL+0x1d0>
   112c0:	ldr	x0, [sp, #72]
   112c4:	ldr	x0, [x0]
   112c8:	ldr	x0, [x0, #16]
   112cc:	str	x0, [sp, #88]
   112d0:	ldr	x0, [sp, #24]
   112d4:	ldr	x1, [x0, #24]
   112d8:	ldrsw	x0, [sp, #32]
   112dc:	lsl	x0, x0, #3
   112e0:	sub	x0, x0, #0x8
   112e4:	add	x0, x1, x0
   112e8:	str	x0, [sp, #40]
   112ec:	ldr	x0, [sp, #88]
   112f0:	str	x0, [sp, #96]
   112f4:	ldr	x0, [sp, #56]
   112f8:	ldr	w1, [x0, #12]
   112fc:	mov	w0, #0x8ff                 	// #2303
   11300:	movk	w0, #0x9981, lsl #16
   11304:	and	w0, w1, w0
   11308:	cmp	w0, #0x1
   1130c:	cset	w0, eq  // eq = none
   11310:	and	w0, w0, #0xff
   11314:	mov	w1, w0
   11318:	ldr	x0, [sp, #24]
   1131c:	ldrb	w0, [x0, #185]
   11320:	eor	w0, w0, #0x1
   11324:	and	w0, w0, #0xff
   11328:	and	w0, w1, w0
   1132c:	cmp	w0, #0x0
   11330:	cset	w0, ne  // ne = any
   11334:	and	w0, w0, #0xff
   11338:	and	x0, x0, #0xff
   1133c:	cmp	x0, #0x0
   11340:	b.eq	1136c <XS_B__AV_FILL+0x270>  // b.none
   11344:	ldr	x0, [sp, #56]
   11348:	ldr	w1, [x0, #12]
   1134c:	mov	w0, #0x1100                	// #4352
   11350:	orr	w1, w1, w0
   11354:	ldr	x0, [sp, #56]
   11358:	str	w1, [x0, #12]
   1135c:	ldr	x0, [sp, #56]
   11360:	ldr	x1, [sp, #96]
   11364:	str	x1, [x0, #16]
   11368:	b	1137c <XS_B__AV_FILL+0x280>
   1136c:	ldr	x2, [sp, #96]
   11370:	ldr	x1, [sp, #56]
   11374:	ldr	x0, [sp, #24]
   11378:	bl	4c60 <Perl_sv_setiv_mg@plt>
   1137c:	ldr	x0, [sp, #40]
   11380:	add	x0, x0, #0x8
   11384:	str	x0, [sp, #40]
   11388:	ldr	x0, [sp, #40]
   1138c:	ldr	x1, [sp, #56]
   11390:	str	x1, [x0]
   11394:	mov	x0, #0x1                   	// #1
   11398:	str	x0, [sp, #104]
   1139c:	ldr	x0, [sp, #24]
   113a0:	ldr	x1, [x0, #24]
   113a4:	ldrsw	x2, [sp, #32]
   113a8:	ldr	x0, [sp, #104]
   113ac:	add	x0, x2, x0
   113b0:	lsl	x0, x0, #3
   113b4:	sub	x0, x0, #0x8
   113b8:	add	x1, x1, x0
   113bc:	ldr	x0, [sp, #24]
   113c0:	str	x1, [x0]
   113c4:	nop
   113c8:	ldp	x29, x30, [sp], #112
   113cc:	ret

00000000000113d0 <XS_B__AV_ARRAY>:
   113d0:	stp	x29, x30, [sp, #-128]!
   113d4:	mov	x29, sp
   113d8:	str	x19, [sp, #16]
   113dc:	str	x0, [sp, #40]
   113e0:	str	x1, [sp, #32]
   113e4:	ldr	x0, [sp, #40]
   113e8:	ldr	x0, [x0]
   113ec:	str	x0, [sp, #72]
   113f0:	ldr	x0, [sp, #40]
   113f4:	bl	7424 <S_POPMARK>
   113f8:	str	w0, [sp, #64]
   113fc:	ldr	x0, [sp, #40]
   11400:	ldr	x1, [x0, #24]
   11404:	ldr	w0, [sp, #64]
   11408:	add	w2, w0, #0x1
   1140c:	str	w2, [sp, #64]
   11410:	sxtw	x0, w0
   11414:	lsl	x0, x0, #3
   11418:	add	x0, x1, x0
   1141c:	str	x0, [sp, #80]
   11420:	ldr	x1, [sp, #72]
   11424:	ldr	x0, [sp, #80]
   11428:	sub	x0, x1, x0
   1142c:	asr	x0, x0, #3
   11430:	str	w0, [sp, #68]
   11434:	ldr	w0, [sp, #68]
   11438:	cmp	w0, #0x1
   1143c:	b.eq	11450 <XS_B__AV_ARRAY+0x80>  // b.none
   11440:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11444:	add	x1, x0, #0x120
   11448:	ldr	x0, [sp, #32]
   1144c:	bl	4d70 <Perl_croak_xs_usage@plt>
   11450:	ldrsw	x0, [sp, #68]
   11454:	lsl	x0, x0, #3
   11458:	neg	x0, x0
   1145c:	ldr	x1, [sp, #72]
   11460:	add	x0, x1, x0
   11464:	str	x0, [sp, #72]
   11468:	ldr	x0, [sp, #40]
   1146c:	ldr	x1, [x0, #24]
   11470:	ldrsw	x0, [sp, #64]
   11474:	lsl	x0, x0, #3
   11478:	add	x0, x1, x0
   1147c:	ldr	x0, [x0]
   11480:	ldr	w0, [x0, #12]
   11484:	and	w0, w0, #0x800
   11488:	cmp	w0, #0x0
   1148c:	b.eq	1153c <XS_B__AV_ARRAY+0x16c>  // b.none
   11490:	ldr	x0, [sp, #40]
   11494:	ldr	x1, [x0, #24]
   11498:	ldrsw	x0, [sp, #64]
   1149c:	lsl	x0, x0, #3
   114a0:	add	x0, x1, x0
   114a4:	ldr	x0, [x0]
   114a8:	ldr	x0, [x0, #16]
   114ac:	ldr	w1, [x0, #12]
   114b0:	mov	w0, #0x100                 	// #256
   114b4:	movk	w0, #0x20, lsl #16
   114b8:	and	w0, w1, w0
   114bc:	cmp	w0, #0x100
   114c0:	b.ne	114ec <XS_B__AV_ARRAY+0x11c>  // b.any
   114c4:	ldr	x0, [sp, #40]
   114c8:	ldr	x1, [x0, #24]
   114cc:	ldrsw	x0, [sp, #64]
   114d0:	lsl	x0, x0, #3
   114d4:	add	x0, x1, x0
   114d8:	ldr	x0, [x0]
   114dc:	ldr	x0, [x0, #16]
   114e0:	ldr	x0, [x0]
   114e4:	ldr	x0, [x0, #32]
   114e8:	b	11518 <XS_B__AV_ARRAY+0x148>
   114ec:	ldr	x0, [sp, #40]
   114f0:	ldr	x1, [x0, #24]
   114f4:	ldrsw	x0, [sp, #64]
   114f8:	lsl	x0, x0, #3
   114fc:	add	x0, x1, x0
   11500:	ldr	x0, [x0]
   11504:	ldr	x0, [x0, #16]
   11508:	mov	w2, #0x2                   	// #2
   1150c:	mov	x1, x0
   11510:	ldr	x0, [sp, #40]
   11514:	bl	4b20 <Perl_sv_2iv_flags@plt>
   11518:	str	x0, [sp, #88]
   1151c:	ldr	x0, [sp, #88]
   11520:	str	x0, [sp, #96]
   11524:	ldr	x0, [sp, #96]
   11528:	ldr	w0, [x0, #12]
   1152c:	and	w0, w0, #0x800000
   11530:	cmp	w0, #0x0
   11534:	b.eq	11570 <XS_B__AV_ARRAY+0x1a0>  // b.none
   11538:	b	11548 <XS_B__AV_ARRAY+0x178>
   1153c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11540:	add	x0, x0, #0x128
   11544:	bl	4e60 <Perl_croak_nocontext@plt>
   11548:	ldr	x0, [sp, #96]
   1154c:	str	x0, [sp, #104]
   11550:	ldr	x0, [sp, #104]
   11554:	mov	x1, x0
   11558:	ldr	x0, [sp, #40]
   1155c:	bl	4dc0 <Perl_mg_size@plt>
   11560:	mvn	w0, w0
   11564:	lsr	w0, w0, #31
   11568:	and	w0, w0, #0xff
   1156c:	b	11588 <XS_B__AV_ARRAY+0x1b8>
   11570:	ldr	x0, [sp, #96]
   11574:	ldr	x0, [x0]
   11578:	ldr	x0, [x0, #16]
   1157c:	mvn	x0, x0
   11580:	lsr	x0, x0, #63
   11584:	and	w0, w0, #0xff
   11588:	cmp	w0, #0x0
   1158c:	b.eq	11670 <XS_B__AV_ARRAY+0x2a0>  // b.none
   11590:	ldr	x0, [sp, #96]
   11594:	ldr	x0, [x0, #16]
   11598:	str	x0, [sp, #112]
   1159c:	str	wzr, [sp, #60]
   115a0:	b	11624 <XS_B__AV_ARRAY+0x254>
   115a4:	ldr	x0, [sp, #40]
   115a8:	ldr	x1, [x0, #32]
   115ac:	ldr	x0, [sp, #72]
   115b0:	sub	x0, x1, x0
   115b4:	cmp	x0, #0x0
   115b8:	cset	w0, le
   115bc:	and	w0, w0, #0xff
   115c0:	and	x0, x0, #0xff
   115c4:	cmp	x0, #0x0
   115c8:	b.eq	115e4 <XS_B__AV_ARRAY+0x214>  // b.none
   115cc:	mov	x3, #0x1                   	// #1
   115d0:	ldr	x2, [sp, #72]
   115d4:	ldr	x1, [sp, #72]
   115d8:	ldr	x0, [sp, #40]
   115dc:	bl	4b70 <Perl_stack_grow@plt>
   115e0:	str	x0, [sp, #72]
   115e4:	ldrsw	x0, [sp, #60]
   115e8:	lsl	x0, x0, #3
   115ec:	ldr	x1, [sp, #112]
   115f0:	add	x0, x1, x0
   115f4:	ldr	x1, [x0]
   115f8:	ldr	x0, [sp, #72]
   115fc:	add	x0, x0, #0x8
   11600:	str	x0, [sp, #72]
   11604:	ldr	x0, [sp, #40]
   11608:	bl	77c4 <make_sv_object>
   1160c:	mov	x1, x0
   11610:	ldr	x0, [sp, #72]
   11614:	str	x1, [x0]
   11618:	ldr	w0, [sp, #60]
   1161c:	add	w0, w0, #0x1
   11620:	str	w0, [sp, #60]
   11624:	ldrsw	x19, [sp, #60]
   11628:	ldr	x0, [sp, #96]
   1162c:	ldr	w0, [x0, #12]
   11630:	and	w0, w0, #0x800000
   11634:	cmp	w0, #0x0
   11638:	b.eq	1165c <XS_B__AV_ARRAY+0x28c>  // b.none
   1163c:	ldr	x0, [sp, #96]
   11640:	str	x0, [sp, #120]
   11644:	ldr	x0, [sp, #120]
   11648:	mov	x1, x0
   1164c:	ldr	x0, [sp, #40]
   11650:	bl	4dc0 <Perl_mg_size@plt>
   11654:	sxtw	x0, w0
   11658:	b	11668 <XS_B__AV_ARRAY+0x298>
   1165c:	ldr	x0, [sp, #96]
   11660:	ldr	x0, [x0]
   11664:	ldr	x0, [x0, #16]
   11668:	cmp	x0, x19
   1166c:	b.ge	115a4 <XS_B__AV_ARRAY+0x1d4>  // b.tcont
   11670:	ldr	x0, [sp, #40]
   11674:	ldr	x1, [sp, #72]
   11678:	str	x1, [x0]
   1167c:	nop
   11680:	ldr	x19, [sp, #16]
   11684:	ldp	x29, x30, [sp], #128
   11688:	ret

000000000001168c <XS_B__AV_ARRAYelt>:
   1168c:	stp	x29, x30, [sp, #-112]!
   11690:	mov	x29, sp
   11694:	str	x19, [sp, #16]
   11698:	str	x0, [sp, #40]
   1169c:	str	x1, [sp, #32]
   116a0:	ldr	x0, [sp, #40]
   116a4:	ldr	x0, [x0]
   116a8:	str	x0, [sp, #64]
   116ac:	ldr	x0, [sp, #40]
   116b0:	bl	7424 <S_POPMARK>
   116b4:	str	w0, [sp, #52]
   116b8:	ldr	x0, [sp, #40]
   116bc:	ldr	x1, [x0, #24]
   116c0:	ldr	w0, [sp, #52]
   116c4:	add	w2, w0, #0x1
   116c8:	str	w2, [sp, #52]
   116cc:	sxtw	x0, w0
   116d0:	lsl	x0, x0, #3
   116d4:	add	x0, x1, x0
   116d8:	str	x0, [sp, #72]
   116dc:	ldr	x1, [sp, #64]
   116e0:	ldr	x0, [sp, #72]
   116e4:	sub	x0, x1, x0
   116e8:	asr	x0, x0, #3
   116ec:	str	w0, [sp, #56]
   116f0:	ldr	w0, [sp, #56]
   116f4:	cmp	w0, #0x2
   116f8:	b.eq	1170c <XS_B__AV_ARRAYelt+0x80>  // b.none
   116fc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11700:	add	x1, x0, #0x140
   11704:	ldr	x0, [sp, #32]
   11708:	bl	4d70 <Perl_croak_xs_usage@plt>
   1170c:	ldrsw	x0, [sp, #56]
   11710:	lsl	x0, x0, #3
   11714:	neg	x0, x0
   11718:	ldr	x1, [sp, #64]
   1171c:	add	x0, x1, x0
   11720:	str	x0, [sp, #64]
   11724:	ldr	x0, [sp, #40]
   11728:	ldr	x1, [x0, #24]
   1172c:	ldrsw	x0, [sp, #52]
   11730:	add	x0, x0, #0x1
   11734:	lsl	x0, x0, #3
   11738:	add	x0, x1, x0
   1173c:	ldr	x0, [x0]
   11740:	ldr	w1, [x0, #12]
   11744:	mov	w0, #0x100                 	// #256
   11748:	movk	w0, #0x20, lsl #16
   1174c:	and	w0, w1, w0
   11750:	cmp	w0, #0x100
   11754:	b.ne	11780 <XS_B__AV_ARRAYelt+0xf4>  // b.any
   11758:	ldr	x0, [sp, #40]
   1175c:	ldr	x1, [x0, #24]
   11760:	ldrsw	x0, [sp, #52]
   11764:	add	x0, x0, #0x1
   11768:	lsl	x0, x0, #3
   1176c:	add	x0, x1, x0
   11770:	ldr	x0, [x0]
   11774:	ldr	x0, [x0]
   11778:	ldr	x0, [x0, #32]
   1177c:	b	117ac <XS_B__AV_ARRAYelt+0x120>
   11780:	ldr	x0, [sp, #40]
   11784:	ldr	x1, [x0, #24]
   11788:	ldrsw	x0, [sp, #52]
   1178c:	add	x0, x0, #0x1
   11790:	lsl	x0, x0, #3
   11794:	add	x0, x1, x0
   11798:	ldr	x0, [x0]
   1179c:	mov	w2, #0x2                   	// #2
   117a0:	mov	x1, x0
   117a4:	ldr	x0, [sp, #40]
   117a8:	bl	4b20 <Perl_sv_2iv_flags@plt>
   117ac:	str	w0, [sp, #60]
   117b0:	ldr	x0, [sp, #40]
   117b4:	ldr	x1, [x0, #24]
   117b8:	ldrsw	x0, [sp, #52]
   117bc:	lsl	x0, x0, #3
   117c0:	add	x0, x1, x0
   117c4:	ldr	x0, [x0]
   117c8:	ldr	w0, [x0, #12]
   117cc:	and	w0, w0, #0x800
   117d0:	cmp	w0, #0x0
   117d4:	b.eq	1187c <XS_B__AV_ARRAYelt+0x1f0>  // b.none
   117d8:	ldr	x0, [sp, #40]
   117dc:	ldr	x1, [x0, #24]
   117e0:	ldrsw	x0, [sp, #52]
   117e4:	lsl	x0, x0, #3
   117e8:	add	x0, x1, x0
   117ec:	ldr	x0, [x0]
   117f0:	ldr	x0, [x0, #16]
   117f4:	ldr	w1, [x0, #12]
   117f8:	mov	w0, #0x100                 	// #256
   117fc:	movk	w0, #0x20, lsl #16
   11800:	and	w0, w1, w0
   11804:	cmp	w0, #0x100
   11808:	b.ne	11834 <XS_B__AV_ARRAYelt+0x1a8>  // b.any
   1180c:	ldr	x0, [sp, #40]
   11810:	ldr	x1, [x0, #24]
   11814:	ldrsw	x0, [sp, #52]
   11818:	lsl	x0, x0, #3
   1181c:	add	x0, x1, x0
   11820:	ldr	x0, [x0]
   11824:	ldr	x0, [x0, #16]
   11828:	ldr	x0, [x0]
   1182c:	ldr	x0, [x0, #32]
   11830:	b	11860 <XS_B__AV_ARRAYelt+0x1d4>
   11834:	ldr	x0, [sp, #40]
   11838:	ldr	x1, [x0, #24]
   1183c:	ldrsw	x0, [sp, #52]
   11840:	lsl	x0, x0, #3
   11844:	add	x0, x1, x0
   11848:	ldr	x0, [x0]
   1184c:	ldr	x0, [x0, #16]
   11850:	mov	w2, #0x2                   	// #2
   11854:	mov	x1, x0
   11858:	ldr	x0, [sp, #40]
   1185c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   11860:	str	x0, [sp, #80]
   11864:	ldr	x0, [sp, #80]
   11868:	str	x0, [sp, #88]
   1186c:	ldr	w0, [sp, #60]
   11870:	cmp	w0, #0x0
   11874:	b.lt	1199c <XS_B__AV_ARRAYelt+0x310>  // b.tstop
   11878:	b	11888 <XS_B__AV_ARRAYelt+0x1fc>
   1187c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11880:	add	x0, x0, #0x128
   11884:	bl	4e60 <Perl_croak_nocontext@plt>
   11888:	ldr	x0, [sp, #88]
   1188c:	ldr	w0, [x0, #12]
   11890:	and	w0, w0, #0x800000
   11894:	cmp	w0, #0x0
   11898:	b.eq	118c0 <XS_B__AV_ARRAYelt+0x234>  // b.none
   1189c:	ldr	x0, [sp, #88]
   118a0:	str	x0, [sp, #96]
   118a4:	ldr	x0, [sp, #96]
   118a8:	mov	x1, x0
   118ac:	ldr	x0, [sp, #40]
   118b0:	bl	4dc0 <Perl_mg_size@plt>
   118b4:	cmp	w0, #0x0
   118b8:	b.ge	118d4 <XS_B__AV_ARRAYelt+0x248>  // b.tcont
   118bc:	b	1199c <XS_B__AV_ARRAYelt+0x310>
   118c0:	ldr	x0, [sp, #88]
   118c4:	ldr	x0, [x0]
   118c8:	ldr	x0, [x0, #16]
   118cc:	cmp	x0, #0x0
   118d0:	b.lt	1199c <XS_B__AV_ARRAYelt+0x310>  // b.tstop
   118d4:	ldrsw	x19, [sp, #60]
   118d8:	ldr	x0, [sp, #88]
   118dc:	ldr	w0, [x0, #12]
   118e0:	and	w0, w0, #0x800000
   118e4:	cmp	w0, #0x0
   118e8:	b.eq	1190c <XS_B__AV_ARRAYelt+0x280>  // b.none
   118ec:	ldr	x0, [sp, #88]
   118f0:	str	x0, [sp, #104]
   118f4:	ldr	x0, [sp, #104]
   118f8:	mov	x1, x0
   118fc:	ldr	x0, [sp, #40]
   11900:	bl	4dc0 <Perl_mg_size@plt>
   11904:	sxtw	x0, w0
   11908:	b	11918 <XS_B__AV_ARRAYelt+0x28c>
   1190c:	ldr	x0, [sp, #88]
   11910:	ldr	x0, [x0]
   11914:	ldr	x0, [x0, #16]
   11918:	cmp	x0, x19
   1191c:	b.lt	1199c <XS_B__AV_ARRAYelt+0x310>  // b.tstop
   11920:	ldr	x0, [sp, #40]
   11924:	ldr	x1, [x0, #32]
   11928:	ldr	x0, [sp, #64]
   1192c:	sub	x0, x1, x0
   11930:	cmp	x0, #0x0
   11934:	cset	w0, le
   11938:	and	w0, w0, #0xff
   1193c:	and	x0, x0, #0xff
   11940:	cmp	x0, #0x0
   11944:	b.eq	11960 <XS_B__AV_ARRAYelt+0x2d4>  // b.none
   11948:	mov	x3, #0x1                   	// #1
   1194c:	ldr	x2, [sp, #64]
   11950:	ldr	x1, [sp, #64]
   11954:	ldr	x0, [sp, #40]
   11958:	bl	4b70 <Perl_stack_grow@plt>
   1195c:	str	x0, [sp, #64]
   11960:	ldr	x0, [sp, #88]
   11964:	ldr	x1, [x0, #16]
   11968:	ldrsw	x0, [sp, #60]
   1196c:	lsl	x0, x0, #3
   11970:	add	x0, x1, x0
   11974:	ldr	x1, [x0]
   11978:	ldr	x0, [sp, #64]
   1197c:	add	x0, x0, #0x8
   11980:	str	x0, [sp, #64]
   11984:	ldr	x0, [sp, #40]
   11988:	bl	77c4 <make_sv_object>
   1198c:	mov	x1, x0
   11990:	ldr	x0, [sp, #64]
   11994:	str	x1, [x0]
   11998:	b	11a00 <XS_B__AV_ARRAYelt+0x374>
   1199c:	ldr	x0, [sp, #40]
   119a0:	ldr	x1, [x0, #32]
   119a4:	ldr	x0, [sp, #64]
   119a8:	sub	x0, x1, x0
   119ac:	cmp	x0, #0x0
   119b0:	cset	w0, le
   119b4:	and	w0, w0, #0xff
   119b8:	and	x0, x0, #0xff
   119bc:	cmp	x0, #0x0
   119c0:	b.eq	119dc <XS_B__AV_ARRAYelt+0x350>  // b.none
   119c4:	mov	x3, #0x1                   	// #1
   119c8:	ldr	x2, [sp, #64]
   119cc:	ldr	x1, [sp, #64]
   119d0:	ldr	x0, [sp, #40]
   119d4:	bl	4b70 <Perl_stack_grow@plt>
   119d8:	str	x0, [sp, #64]
   119dc:	ldr	x0, [sp, #64]
   119e0:	add	x0, x0, #0x8
   119e4:	str	x0, [sp, #64]
   119e8:	mov	x1, #0x0                   	// #0
   119ec:	ldr	x0, [sp, #40]
   119f0:	bl	77c4 <make_sv_object>
   119f4:	mov	x1, x0
   119f8:	ldr	x0, [sp, #64]
   119fc:	str	x1, [x0]
   11a00:	ldr	x0, [sp, #40]
   11a04:	ldr	x1, [sp, #64]
   11a08:	str	x1, [x0]
   11a0c:	nop
   11a10:	ldr	x19, [sp, #16]
   11a14:	ldp	x29, x30, [sp], #112
   11a18:	ret

0000000000011a1c <XS_B__FM_LINES>:
   11a1c:	stp	x29, x30, [sp, #-112]!
   11a20:	mov	x29, sp
   11a24:	str	x0, [sp, #24]
   11a28:	str	x1, [sp, #16]
   11a2c:	ldr	x0, [sp, #24]
   11a30:	ldr	x0, [x0]
   11a34:	str	x0, [sp, #48]
   11a38:	ldr	x0, [sp, #24]
   11a3c:	bl	7424 <S_POPMARK>
   11a40:	str	w0, [sp, #40]
   11a44:	ldr	x0, [sp, #24]
   11a48:	ldr	x1, [x0, #24]
   11a4c:	ldr	w0, [sp, #40]
   11a50:	add	w2, w0, #0x1
   11a54:	str	w2, [sp, #40]
   11a58:	sxtw	x0, w0
   11a5c:	lsl	x0, x0, #3
   11a60:	add	x0, x1, x0
   11a64:	str	x0, [sp, #56]
   11a68:	ldr	x1, [sp, #48]
   11a6c:	ldr	x0, [sp, #56]
   11a70:	sub	x0, x1, x0
   11a74:	asr	x0, x0, #3
   11a78:	str	w0, [sp, #44]
   11a7c:	ldr	w0, [sp, #44]
   11a80:	cmp	w0, #0x1
   11a84:	b.eq	11a98 <XS_B__FM_LINES+0x7c>  // b.none
   11a88:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11a8c:	add	x1, x0, #0x148
   11a90:	ldr	x0, [sp, #16]
   11a94:	bl	4d70 <Perl_croak_xs_usage@plt>
   11a98:	ldr	x0, [sp, #24]
   11a9c:	ldr	x0, [x0, #8]
   11aa0:	ldrb	w0, [x0, #35]
   11aa4:	and	w0, w0, #0x4
   11aa8:	cmp	w0, #0x0
   11aac:	b.eq	11ad4 <XS_B__FM_LINES+0xb8>  // b.none
   11ab0:	ldr	x0, [sp, #24]
   11ab4:	ldr	x1, [x0, #16]
   11ab8:	ldr	x0, [sp, #24]
   11abc:	ldr	x0, [x0, #8]
   11ac0:	ldr	x0, [x0, #24]
   11ac4:	lsl	x0, x0, #3
   11ac8:	add	x0, x1, x0
   11acc:	ldr	x0, [x0]
   11ad0:	b	11adc <XS_B__FM_LINES+0xc0>
   11ad4:	ldr	x0, [sp, #24]
   11ad8:	bl	5080 <Perl_sv_newmortal@plt>
   11adc:	str	x0, [sp, #64]
   11ae0:	ldr	x0, [sp, #24]
   11ae4:	ldr	x1, [x0, #24]
   11ae8:	ldrsw	x0, [sp, #40]
   11aec:	lsl	x0, x0, #3
   11af0:	add	x0, x1, x0
   11af4:	ldr	x0, [x0]
   11af8:	ldr	w0, [x0, #12]
   11afc:	and	w0, w0, #0x800
   11b00:	cmp	w0, #0x0
   11b04:	b.eq	11c18 <XS_B__FM_LINES+0x1fc>  // b.none
   11b08:	ldr	x0, [sp, #24]
   11b0c:	ldr	x1, [x0, #24]
   11b10:	ldrsw	x0, [sp, #40]
   11b14:	lsl	x0, x0, #3
   11b18:	add	x0, x1, x0
   11b1c:	ldr	x0, [x0]
   11b20:	ldr	x0, [x0, #16]
   11b24:	ldr	w1, [x0, #12]
   11b28:	mov	w0, #0x100                 	// #256
   11b2c:	movk	w0, #0x20, lsl #16
   11b30:	and	w0, w1, w0
   11b34:	cmp	w0, #0x100
   11b38:	b.ne	11b64 <XS_B__FM_LINES+0x148>  // b.any
   11b3c:	ldr	x0, [sp, #24]
   11b40:	ldr	x1, [x0, #24]
   11b44:	ldrsw	x0, [sp, #40]
   11b48:	lsl	x0, x0, #3
   11b4c:	add	x0, x1, x0
   11b50:	ldr	x0, [x0]
   11b54:	ldr	x0, [x0, #16]
   11b58:	ldr	x0, [x0]
   11b5c:	ldr	x0, [x0, #32]
   11b60:	b	11b90 <XS_B__FM_LINES+0x174>
   11b64:	ldr	x0, [sp, #24]
   11b68:	ldr	x1, [x0, #24]
   11b6c:	ldrsw	x0, [sp, #40]
   11b70:	lsl	x0, x0, #3
   11b74:	add	x0, x1, x0
   11b78:	ldr	x0, [x0]
   11b7c:	ldr	x0, [x0, #16]
   11b80:	mov	w2, #0x2                   	// #2
   11b84:	mov	x1, x0
   11b88:	ldr	x0, [sp, #24]
   11b8c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   11b90:	str	x0, [sp, #72]
   11b94:	ldr	x0, [sp, #72]
   11b98:	str	x0, [sp, #80]
   11b9c:	str	xzr, [sp, #88]
   11ba0:	ldr	x0, [sp, #24]
   11ba4:	ldr	x1, [x0, #24]
   11ba8:	ldrsw	x0, [sp, #40]
   11bac:	lsl	x0, x0, #3
   11bb0:	sub	x0, x0, #0x8
   11bb4:	add	x0, x1, x0
   11bb8:	str	x0, [sp, #48]
   11bbc:	ldr	x0, [sp, #88]
   11bc0:	str	x0, [sp, #96]
   11bc4:	ldr	x0, [sp, #64]
   11bc8:	ldr	w1, [x0, #12]
   11bcc:	mov	w0, #0x8ff                 	// #2303
   11bd0:	movk	w0, #0x9981, lsl #16
   11bd4:	and	w0, w1, w0
   11bd8:	cmp	w0, #0x1
   11bdc:	cset	w0, eq  // eq = none
   11be0:	and	w0, w0, #0xff
   11be4:	mov	w1, w0
   11be8:	ldr	x0, [sp, #24]
   11bec:	ldrb	w0, [x0, #185]
   11bf0:	eor	w0, w0, #0x1
   11bf4:	and	w0, w0, #0xff
   11bf8:	and	w0, w1, w0
   11bfc:	cmp	w0, #0x0
   11c00:	cset	w0, ne  // ne = any
   11c04:	and	w0, w0, #0xff
   11c08:	and	x0, x0, #0xff
   11c0c:	cmp	x0, #0x0
   11c10:	b.eq	11c4c <XS_B__FM_LINES+0x230>  // b.none
   11c14:	b	11c24 <XS_B__FM_LINES+0x208>
   11c18:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11c1c:	add	x0, x0, #0x150
   11c20:	bl	4e60 <Perl_croak_nocontext@plt>
   11c24:	ldr	x0, [sp, #64]
   11c28:	ldr	w1, [x0, #12]
   11c2c:	mov	w0, #0x1100                	// #4352
   11c30:	orr	w1, w1, w0
   11c34:	ldr	x0, [sp, #64]
   11c38:	str	w1, [x0, #12]
   11c3c:	ldr	x0, [sp, #64]
   11c40:	ldr	x1, [sp, #96]
   11c44:	str	x1, [x0, #16]
   11c48:	b	11c5c <XS_B__FM_LINES+0x240>
   11c4c:	ldr	x2, [sp, #96]
   11c50:	ldr	x1, [sp, #64]
   11c54:	ldr	x0, [sp, #24]
   11c58:	bl	4c60 <Perl_sv_setiv_mg@plt>
   11c5c:	ldr	x0, [sp, #48]
   11c60:	add	x0, x0, #0x8
   11c64:	str	x0, [sp, #48]
   11c68:	ldr	x0, [sp, #48]
   11c6c:	ldr	x1, [sp, #64]
   11c70:	str	x1, [x0]
   11c74:	mov	x0, #0x1                   	// #1
   11c78:	str	x0, [sp, #104]
   11c7c:	ldr	x0, [sp, #24]
   11c80:	ldr	x1, [x0, #24]
   11c84:	ldrsw	x2, [sp, #40]
   11c88:	ldr	x0, [sp, #104]
   11c8c:	add	x0, x2, x0
   11c90:	lsl	x0, x0, #3
   11c94:	sub	x0, x0, #0x8
   11c98:	add	x1, x1, x0
   11c9c:	ldr	x0, [sp, #24]
   11ca0:	str	x1, [x0]
   11ca4:	nop
   11ca8:	ldp	x29, x30, [sp], #112
   11cac:	ret

0000000000011cb0 <XS_B__CV_CONST>:
   11cb0:	stp	x29, x30, [sp, #-112]!
   11cb4:	mov	x29, sp
   11cb8:	str	x0, [sp, #24]
   11cbc:	str	x1, [sp, #16]
   11cc0:	ldr	x0, [sp, #24]
   11cc4:	ldr	x0, [x0]
   11cc8:	str	x0, [sp, #48]
   11ccc:	ldr	x0, [sp, #24]
   11cd0:	bl	7424 <S_POPMARK>
   11cd4:	str	w0, [sp, #36]
   11cd8:	ldr	x0, [sp, #24]
   11cdc:	ldr	x1, [x0, #24]
   11ce0:	ldr	w0, [sp, #36]
   11ce4:	add	w2, w0, #0x1
   11ce8:	str	w2, [sp, #36]
   11cec:	sxtw	x0, w0
   11cf0:	lsl	x0, x0, #3
   11cf4:	add	x0, x1, x0
   11cf8:	str	x0, [sp, #56]
   11cfc:	ldr	x1, [sp, #48]
   11d00:	ldr	x0, [sp, #56]
   11d04:	sub	x0, x1, x0
   11d08:	asr	x0, x0, #3
   11d0c:	str	w0, [sp, #40]
   11d10:	ldr	w0, [sp, #40]
   11d14:	cmp	w0, #0x1
   11d18:	b.eq	11d2c <XS_B__CV_CONST+0x7c>  // b.none
   11d1c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11d20:	add	x1, x0, #0x170
   11d24:	ldr	x0, [sp, #16]
   11d28:	bl	4d70 <Perl_croak_xs_usage@plt>
   11d2c:	ldr	x0, [sp, #24]
   11d30:	ldr	x0, [x0, #8]
   11d34:	ldrb	w0, [x0, #35]
   11d38:	and	w0, w0, #0x4
   11d3c:	cmp	w0, #0x0
   11d40:	b.eq	11d68 <XS_B__CV_CONST+0xb8>  // b.none
   11d44:	ldr	x0, [sp, #24]
   11d48:	ldr	x1, [x0, #16]
   11d4c:	ldr	x0, [sp, #24]
   11d50:	ldr	x0, [x0, #8]
   11d54:	ldr	x0, [x0, #24]
   11d58:	lsl	x0, x0, #3
   11d5c:	add	x0, x1, x0
   11d60:	ldr	x0, [x0]
   11d64:	b	11d70 <XS_B__CV_CONST+0xc0>
   11d68:	ldr	x0, [sp, #24]
   11d6c:	bl	5080 <Perl_sv_newmortal@plt>
   11d70:	str	x0, [sp, #64]
   11d74:	ldr	x0, [sp, #24]
   11d78:	ldr	x1, [x0, #24]
   11d7c:	ldrsw	x0, [sp, #36]
   11d80:	lsl	x0, x0, #3
   11d84:	add	x0, x1, x0
   11d88:	ldr	x0, [x0]
   11d8c:	ldr	w0, [x0, #12]
   11d90:	and	w0, w0, #0x800
   11d94:	cmp	w0, #0x0
   11d98:	b.eq	11ed8 <XS_B__CV_CONST+0x228>  // b.none
   11d9c:	ldr	x0, [sp, #24]
   11da0:	ldr	x1, [x0, #24]
   11da4:	ldrsw	x0, [sp, #36]
   11da8:	lsl	x0, x0, #3
   11dac:	add	x0, x1, x0
   11db0:	ldr	x0, [x0]
   11db4:	ldr	x0, [x0, #16]
   11db8:	ldr	w1, [x0, #12]
   11dbc:	mov	w0, #0x100                 	// #256
   11dc0:	movk	w0, #0x20, lsl #16
   11dc4:	and	w0, w1, w0
   11dc8:	cmp	w0, #0x100
   11dcc:	b.ne	11df8 <XS_B__CV_CONST+0x148>  // b.any
   11dd0:	ldr	x0, [sp, #24]
   11dd4:	ldr	x1, [x0, #24]
   11dd8:	ldrsw	x0, [sp, #36]
   11ddc:	lsl	x0, x0, #3
   11de0:	add	x0, x1, x0
   11de4:	ldr	x0, [x0]
   11de8:	ldr	x0, [x0, #16]
   11dec:	ldr	x0, [x0]
   11df0:	ldr	x0, [x0, #32]
   11df4:	b	11e24 <XS_B__CV_CONST+0x174>
   11df8:	ldr	x0, [sp, #24]
   11dfc:	ldr	x1, [x0, #24]
   11e00:	ldrsw	x0, [sp, #36]
   11e04:	lsl	x0, x0, #3
   11e08:	add	x0, x1, x0
   11e0c:	ldr	x0, [x0]
   11e10:	ldr	x0, [x0, #16]
   11e14:	mov	w2, #0x2                   	// #2
   11e18:	mov	x1, x0
   11e1c:	ldr	x0, [sp, #24]
   11e20:	bl	4b20 <Perl_sv_2iv_flags@plt>
   11e24:	str	x0, [sp, #72]
   11e28:	ldr	x0, [sp, #72]
   11e2c:	str	x0, [sp, #80]
   11e30:	ldr	x0, [sp, #80]
   11e34:	ldr	x0, [x0]
   11e38:	str	x0, [sp, #88]
   11e3c:	ldr	x0, [sp, #88]
   11e40:	ldr	w0, [x0, #92]
   11e44:	and	w0, w0, #0x4
   11e48:	str	w0, [sp, #44]
   11e4c:	ldr	x0, [sp, #24]
   11e50:	ldr	x1, [x0, #24]
   11e54:	ldrsw	x0, [sp, #36]
   11e58:	lsl	x0, x0, #3
   11e5c:	sub	x0, x0, #0x8
   11e60:	add	x0, x1, x0
   11e64:	str	x0, [sp, #48]
   11e68:	ldr	w0, [sp, #44]
   11e6c:	str	x0, [sp, #96]
   11e70:	ldr	x0, [sp, #64]
   11e74:	ldr	w1, [x0, #12]
   11e78:	mov	w0, #0x8ff                 	// #2303
   11e7c:	movk	w0, #0x9981, lsl #16
   11e80:	and	w0, w1, w0
   11e84:	cmp	w0, #0x1
   11e88:	cset	w0, eq  // eq = none
   11e8c:	and	w0, w0, #0xff
   11e90:	mov	w1, w0
   11e94:	ldr	x0, [sp, #24]
   11e98:	ldrb	w0, [x0, #185]
   11e9c:	eor	w0, w0, #0x1
   11ea0:	and	w0, w0, #0xff
   11ea4:	and	w0, w1, w0
   11ea8:	ldr	x1, [sp, #96]
   11eac:	mvn	x1, x1
   11eb0:	lsr	x1, x1, #63
   11eb4:	and	w1, w1, #0xff
   11eb8:	and	w0, w0, w1
   11ebc:	cmp	w0, #0x0
   11ec0:	cset	w0, ne  // ne = any
   11ec4:	and	w0, w0, #0xff
   11ec8:	and	x0, x0, #0xff
   11ecc:	cmp	x0, #0x0
   11ed0:	b.eq	11f0c <XS_B__CV_CONST+0x25c>  // b.none
   11ed4:	b	11ee4 <XS_B__CV_CONST+0x234>
   11ed8:	adrp	x0, 18000 <boot_B+0x23d8>
   11edc:	add	x0, x0, #0xf48
   11ee0:	bl	4e60 <Perl_croak_nocontext@plt>
   11ee4:	ldr	x0, [sp, #64]
   11ee8:	ldr	w1, [x0, #12]
   11eec:	mov	w0, #0x1100                	// #4352
   11ef0:	orr	w1, w1, w0
   11ef4:	ldr	x0, [sp, #64]
   11ef8:	str	w1, [x0, #12]
   11efc:	ldr	x1, [sp, #96]
   11f00:	ldr	x0, [sp, #64]
   11f04:	str	x1, [x0, #16]
   11f08:	b	11f1c <XS_B__CV_CONST+0x26c>
   11f0c:	ldr	x2, [sp, #96]
   11f10:	ldr	x1, [sp, #64]
   11f14:	ldr	x0, [sp, #24]
   11f18:	bl	4fe0 <Perl_sv_setuv_mg@plt>
   11f1c:	ldr	x0, [sp, #48]
   11f20:	add	x0, x0, #0x8
   11f24:	str	x0, [sp, #48]
   11f28:	ldr	x0, [sp, #48]
   11f2c:	ldr	x1, [sp, #64]
   11f30:	str	x1, [x0]
   11f34:	mov	x0, #0x1                   	// #1
   11f38:	str	x0, [sp, #104]
   11f3c:	ldr	x0, [sp, #24]
   11f40:	ldr	x1, [x0, #24]
   11f44:	ldrsw	x2, [sp, #36]
   11f48:	ldr	x0, [sp, #104]
   11f4c:	add	x0, x2, x0
   11f50:	lsl	x0, x0, #3
   11f54:	sub	x0, x0, #0x8
   11f58:	add	x1, x1, x0
   11f5c:	ldr	x0, [sp, #24]
   11f60:	str	x1, [x0]
   11f64:	nop
   11f68:	ldp	x29, x30, [sp], #112
   11f6c:	ret

0000000000011f70 <XS_B__CV_START>:
   11f70:	stp	x29, x30, [sp, #-112]!
   11f74:	mov	x29, sp
   11f78:	str	x0, [sp, #24]
   11f7c:	str	x1, [sp, #16]
   11f80:	ldr	x0, [sp, #24]
   11f84:	ldr	x0, [x0]
   11f88:	str	x0, [sp, #48]
   11f8c:	ldr	x0, [sp, #24]
   11f90:	bl	7424 <S_POPMARK>
   11f94:	str	w0, [sp, #36]
   11f98:	ldr	x0, [sp, #24]
   11f9c:	ldr	x1, [x0, #24]
   11fa0:	ldr	w0, [sp, #36]
   11fa4:	add	w2, w0, #0x1
   11fa8:	str	w2, [sp, #36]
   11fac:	sxtw	x0, w0
   11fb0:	lsl	x0, x0, #3
   11fb4:	add	x0, x1, x0
   11fb8:	str	x0, [sp, #56]
   11fbc:	ldr	x1, [sp, #48]
   11fc0:	ldr	x0, [sp, #56]
   11fc4:	sub	x0, x1, x0
   11fc8:	asr	x0, x0, #3
   11fcc:	str	w0, [sp, #40]
   11fd0:	ldr	x0, [sp, #16]
   11fd4:	ldr	x0, [x0]
   11fd8:	str	x0, [sp, #64]
   11fdc:	ldr	x0, [sp, #64]
   11fe0:	ldr	w0, [x0, #40]
   11fe4:	str	w0, [sp, #44]
   11fe8:	ldr	w0, [sp, #40]
   11fec:	cmp	w0, #0x1
   11ff0:	b.eq	12004 <XS_B__CV_START+0x94>  // b.none
   11ff4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   11ff8:	add	x1, x0, #0x170
   11ffc:	ldr	x0, [sp, #16]
   12000:	bl	4d70 <Perl_croak_xs_usage@plt>
   12004:	ldrsw	x0, [sp, #40]
   12008:	lsl	x0, x0, #3
   1200c:	neg	x0, x0
   12010:	ldr	x1, [sp, #48]
   12014:	add	x0, x1, x0
   12018:	str	x0, [sp, #48]
   1201c:	ldr	x0, [sp, #24]
   12020:	ldr	x1, [x0, #24]
   12024:	ldrsw	x0, [sp, #36]
   12028:	lsl	x0, x0, #3
   1202c:	add	x0, x1, x0
   12030:	ldr	x0, [x0]
   12034:	ldr	w0, [x0, #12]
   12038:	and	w0, w0, #0x800
   1203c:	cmp	w0, #0x0
   12040:	b.eq	120fc <XS_B__CV_START+0x18c>  // b.none
   12044:	ldr	x0, [sp, #24]
   12048:	ldr	x1, [x0, #24]
   1204c:	ldrsw	x0, [sp, #36]
   12050:	lsl	x0, x0, #3
   12054:	add	x0, x1, x0
   12058:	ldr	x0, [x0]
   1205c:	ldr	x0, [x0, #16]
   12060:	ldr	w1, [x0, #12]
   12064:	mov	w0, #0x100                 	// #256
   12068:	movk	w0, #0x20, lsl #16
   1206c:	and	w0, w1, w0
   12070:	cmp	w0, #0x100
   12074:	b.ne	120a0 <XS_B__CV_START+0x130>  // b.any
   12078:	ldr	x0, [sp, #24]
   1207c:	ldr	x1, [x0, #24]
   12080:	ldrsw	x0, [sp, #36]
   12084:	lsl	x0, x0, #3
   12088:	add	x0, x1, x0
   1208c:	ldr	x0, [x0]
   12090:	ldr	x0, [x0, #16]
   12094:	ldr	x0, [x0]
   12098:	ldr	x0, [x0, #32]
   1209c:	b	120cc <XS_B__CV_START+0x15c>
   120a0:	ldr	x0, [sp, #24]
   120a4:	ldr	x1, [x0, #24]
   120a8:	ldrsw	x0, [sp, #36]
   120ac:	lsl	x0, x0, #3
   120b0:	add	x0, x1, x0
   120b4:	ldr	x0, [x0]
   120b8:	ldr	x0, [x0, #16]
   120bc:	mov	w2, #0x2                   	// #2
   120c0:	mov	x1, x0
   120c4:	ldr	x0, [sp, #24]
   120c8:	bl	4b20 <Perl_sv_2iv_flags@plt>
   120cc:	str	x0, [sp, #72]
   120d0:	ldr	x0, [sp, #72]
   120d4:	str	x0, [sp, #80]
   120d8:	ldr	x0, [sp, #80]
   120dc:	ldr	x0, [x0]
   120e0:	str	x0, [sp, #88]
   120e4:	ldr	x0, [sp, #88]
   120e8:	ldr	w0, [x0, #92]
   120ec:	and	w0, w0, #0x8
   120f0:	cmp	w0, #0x0
   120f4:	b.ne	12144 <XS_B__CV_START+0x1d4>  // b.any
   120f8:	b	12108 <XS_B__CV_START+0x198>
   120fc:	adrp	x0, 18000 <boot_B+0x23d8>
   12100:	add	x0, x0, #0xf48
   12104:	bl	4e60 <Perl_croak_nocontext@plt>
   12108:	ldr	w0, [sp, #44]
   1210c:	cmp	w0, #0x0
   12110:	b.eq	1212c <XS_B__CV_START+0x1bc>  // b.none
   12114:	ldr	x0, [sp, #80]
   12118:	ldr	x0, [x0]
   1211c:	str	x0, [sp, #104]
   12120:	ldr	x0, [sp, #104]
   12124:	ldr	x0, [x0, #48]
   12128:	b	12148 <XS_B__CV_START+0x1d8>
   1212c:	ldr	x0, [sp, #80]
   12130:	ldr	x0, [x0]
   12134:	str	x0, [sp, #96]
   12138:	ldr	x0, [sp, #96]
   1213c:	ldr	x0, [x0, #40]
   12140:	b	12148 <XS_B__CV_START+0x1d8>
   12144:	mov	x0, #0x0                   	// #0
   12148:	ldr	x1, [sp, #48]
   1214c:	add	x1, x1, #0x8
   12150:	str	x1, [sp, #48]
   12154:	mov	x1, x0
   12158:	ldr	x0, [sp, #24]
   1215c:	bl	75b4 <make_op_object>
   12160:	mov	x1, x0
   12164:	ldr	x0, [sp, #48]
   12168:	str	x1, [x0]
   1216c:	ldr	x0, [sp, #24]
   12170:	ldr	x1, [sp, #48]
   12174:	str	x1, [x0]
   12178:	nop
   1217c:	ldp	x29, x30, [sp], #112
   12180:	ret

0000000000012184 <XS_B__CV_DEPTH>:
   12184:	stp	x29, x30, [sp, #-112]!
   12188:	mov	x29, sp
   1218c:	str	x0, [sp, #24]
   12190:	str	x1, [sp, #16]
   12194:	ldr	x0, [sp, #24]
   12198:	ldr	x0, [x0]
   1219c:	str	x0, [sp, #56]
   121a0:	ldr	x0, [sp, #24]
   121a4:	bl	7424 <S_POPMARK>
   121a8:	str	w0, [sp, #44]
   121ac:	ldr	x0, [sp, #24]
   121b0:	ldr	x1, [x0, #24]
   121b4:	ldr	w0, [sp, #44]
   121b8:	add	w2, w0, #0x1
   121bc:	str	w2, [sp, #44]
   121c0:	sxtw	x0, w0
   121c4:	lsl	x0, x0, #3
   121c8:	add	x0, x1, x0
   121cc:	str	x0, [sp, #64]
   121d0:	ldr	x1, [sp, #56]
   121d4:	ldr	x0, [sp, #64]
   121d8:	sub	x0, x1, x0
   121dc:	asr	x0, x0, #3
   121e0:	str	w0, [sp, #48]
   121e4:	ldr	w0, [sp, #48]
   121e8:	cmp	w0, #0x1
   121ec:	b.eq	12200 <XS_B__CV_DEPTH+0x7c>  // b.none
   121f0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   121f4:	add	x1, x0, #0x170
   121f8:	ldr	x0, [sp, #16]
   121fc:	bl	4d70 <Perl_croak_xs_usage@plt>
   12200:	ldr	x0, [sp, #24]
   12204:	ldr	x0, [x0, #8]
   12208:	ldrb	w0, [x0, #35]
   1220c:	and	w0, w0, #0x4
   12210:	cmp	w0, #0x0
   12214:	b.eq	1223c <XS_B__CV_DEPTH+0xb8>  // b.none
   12218:	ldr	x0, [sp, #24]
   1221c:	ldr	x1, [x0, #16]
   12220:	ldr	x0, [sp, #24]
   12224:	ldr	x0, [x0, #8]
   12228:	ldr	x0, [x0, #24]
   1222c:	lsl	x0, x0, #3
   12230:	add	x0, x1, x0
   12234:	ldr	x0, [x0]
   12238:	b	12244 <XS_B__CV_DEPTH+0xc0>
   1223c:	ldr	x0, [sp, #24]
   12240:	bl	5080 <Perl_sv_newmortal@plt>
   12244:	str	x0, [sp, #72]
   12248:	ldr	x0, [sp, #24]
   1224c:	ldr	x1, [x0, #24]
   12250:	ldrsw	x0, [sp, #44]
   12254:	lsl	x0, x0, #3
   12258:	add	x0, x1, x0
   1225c:	ldr	x0, [x0]
   12260:	ldr	w0, [x0, #12]
   12264:	and	w0, w0, #0x800
   12268:	cmp	w0, #0x0
   1226c:	b.eq	1238c <XS_B__CV_DEPTH+0x208>  // b.none
   12270:	ldr	x0, [sp, #24]
   12274:	ldr	x1, [x0, #24]
   12278:	ldrsw	x0, [sp, #44]
   1227c:	lsl	x0, x0, #3
   12280:	add	x0, x1, x0
   12284:	ldr	x0, [x0]
   12288:	ldr	x0, [x0, #16]
   1228c:	ldr	w1, [x0, #12]
   12290:	mov	w0, #0x100                 	// #256
   12294:	movk	w0, #0x20, lsl #16
   12298:	and	w0, w1, w0
   1229c:	cmp	w0, #0x100
   122a0:	b.ne	122cc <XS_B__CV_DEPTH+0x148>  // b.any
   122a4:	ldr	x0, [sp, #24]
   122a8:	ldr	x1, [x0, #24]
   122ac:	ldrsw	x0, [sp, #44]
   122b0:	lsl	x0, x0, #3
   122b4:	add	x0, x1, x0
   122b8:	ldr	x0, [x0]
   122bc:	ldr	x0, [x0, #16]
   122c0:	ldr	x0, [x0]
   122c4:	ldr	x0, [x0, #32]
   122c8:	b	122f8 <XS_B__CV_DEPTH+0x174>
   122cc:	ldr	x0, [sp, #24]
   122d0:	ldr	x1, [x0, #24]
   122d4:	ldrsw	x0, [sp, #44]
   122d8:	lsl	x0, x0, #3
   122dc:	add	x0, x1, x0
   122e0:	ldr	x0, [x0]
   122e4:	ldr	x0, [x0, #16]
   122e8:	mov	w2, #0x2                   	// #2
   122ec:	mov	x1, x0
   122f0:	ldr	x0, [sp, #24]
   122f4:	bl	4b20 <Perl_sv_2iv_flags@plt>
   122f8:	str	x0, [sp, #80]
   122fc:	ldr	x0, [sp, #80]
   12300:	str	x0, [sp, #88]
   12304:	ldr	x0, [sp, #88]
   12308:	bl	7408 <S_CvDEPTHp>
   1230c:	ldr	w0, [x0]
   12310:	str	w0, [sp, #52]
   12314:	ldr	x0, [sp, #24]
   12318:	ldr	x1, [x0, #24]
   1231c:	ldrsw	x0, [sp, #44]
   12320:	lsl	x0, x0, #3
   12324:	sub	x0, x0, #0x8
   12328:	add	x0, x1, x0
   1232c:	str	x0, [sp, #56]
   12330:	ldrsw	x0, [sp, #52]
   12334:	str	x0, [sp, #96]
   12338:	ldr	x0, [sp, #72]
   1233c:	ldr	w1, [x0, #12]
   12340:	mov	w0, #0x8ff                 	// #2303
   12344:	movk	w0, #0x9981, lsl #16
   12348:	and	w0, w1, w0
   1234c:	cmp	w0, #0x1
   12350:	cset	w0, eq  // eq = none
   12354:	and	w0, w0, #0xff
   12358:	mov	w1, w0
   1235c:	ldr	x0, [sp, #24]
   12360:	ldrb	w0, [x0, #185]
   12364:	eor	w0, w0, #0x1
   12368:	and	w0, w0, #0xff
   1236c:	and	w0, w1, w0
   12370:	cmp	w0, #0x0
   12374:	cset	w0, ne  // ne = any
   12378:	and	w0, w0, #0xff
   1237c:	and	x0, x0, #0xff
   12380:	cmp	x0, #0x0
   12384:	b.eq	123c0 <XS_B__CV_DEPTH+0x23c>  // b.none
   12388:	b	12398 <XS_B__CV_DEPTH+0x214>
   1238c:	adrp	x0, 18000 <boot_B+0x23d8>
   12390:	add	x0, x0, #0xf48
   12394:	bl	4e60 <Perl_croak_nocontext@plt>
   12398:	ldr	x0, [sp, #72]
   1239c:	ldr	w1, [x0, #12]
   123a0:	mov	w0, #0x1100                	// #4352
   123a4:	orr	w1, w1, w0
   123a8:	ldr	x0, [sp, #72]
   123ac:	str	w1, [x0, #12]
   123b0:	ldr	x0, [sp, #72]
   123b4:	ldr	x1, [sp, #96]
   123b8:	str	x1, [x0, #16]
   123bc:	b	123d0 <XS_B__CV_DEPTH+0x24c>
   123c0:	ldr	x2, [sp, #96]
   123c4:	ldr	x1, [sp, #72]
   123c8:	ldr	x0, [sp, #24]
   123cc:	bl	4c60 <Perl_sv_setiv_mg@plt>
   123d0:	ldr	x0, [sp, #56]
   123d4:	add	x0, x0, #0x8
   123d8:	str	x0, [sp, #56]
   123dc:	ldr	x0, [sp, #56]
   123e0:	ldr	x1, [sp, #72]
   123e4:	str	x1, [x0]
   123e8:	mov	x0, #0x1                   	// #1
   123ec:	str	x0, [sp, #104]
   123f0:	ldr	x0, [sp, #24]
   123f4:	ldr	x1, [x0, #24]
   123f8:	ldrsw	x2, [sp, #44]
   123fc:	ldr	x0, [sp, #104]
   12400:	add	x0, x2, x0
   12404:	lsl	x0, x0, #3
   12408:	sub	x0, x0, #0x8
   1240c:	add	x1, x1, x0
   12410:	ldr	x0, [sp, #24]
   12414:	str	x1, [x0]
   12418:	nop
   1241c:	ldp	x29, x30, [sp], #112
   12420:	ret

0000000000012424 <XS_B__CV_PADLIST>:
   12424:	stp	x29, x30, [sp, #-112]!
   12428:	mov	x29, sp
   1242c:	str	x0, [sp, #24]
   12430:	str	x1, [sp, #16]
   12434:	ldr	x0, [sp, #24]
   12438:	ldr	x0, [x0]
   1243c:	str	x0, [sp, #40]
   12440:	ldr	x0, [sp, #24]
   12444:	bl	7424 <S_POPMARK>
   12448:	str	w0, [sp, #32]
   1244c:	ldr	x0, [sp, #24]
   12450:	ldr	x1, [x0, #24]
   12454:	ldr	w0, [sp, #32]
   12458:	add	w2, w0, #0x1
   1245c:	str	w2, [sp, #32]
   12460:	sxtw	x0, w0
   12464:	lsl	x0, x0, #3
   12468:	add	x0, x1, x0
   1246c:	str	x0, [sp, #48]
   12470:	ldr	x1, [sp, #40]
   12474:	ldr	x0, [sp, #48]
   12478:	sub	x0, x1, x0
   1247c:	asr	x0, x0, #3
   12480:	str	w0, [sp, #36]
   12484:	ldr	w0, [sp, #36]
   12488:	cmp	w0, #0x1
   1248c:	b.eq	124a0 <XS_B__CV_PADLIST+0x7c>  // b.none
   12490:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   12494:	add	x1, x0, #0x170
   12498:	ldr	x0, [sp, #16]
   1249c:	bl	4d70 <Perl_croak_xs_usage@plt>
   124a0:	ldr	x0, [sp, #24]
   124a4:	ldr	x1, [x0, #24]
   124a8:	ldrsw	x0, [sp, #32]
   124ac:	lsl	x0, x0, #3
   124b0:	add	x0, x1, x0
   124b4:	ldr	x0, [x0]
   124b8:	ldr	w0, [x0, #12]
   124bc:	and	w0, w0, #0x800
   124c0:	cmp	w0, #0x0
   124c4:	b.eq	12580 <XS_B__CV_PADLIST+0x15c>  // b.none
   124c8:	ldr	x0, [sp, #24]
   124cc:	ldr	x1, [x0, #24]
   124d0:	ldrsw	x0, [sp, #32]
   124d4:	lsl	x0, x0, #3
   124d8:	add	x0, x1, x0
   124dc:	ldr	x0, [x0]
   124e0:	ldr	x0, [x0, #16]
   124e4:	ldr	w1, [x0, #12]
   124e8:	mov	w0, #0x100                 	// #256
   124ec:	movk	w0, #0x20, lsl #16
   124f0:	and	w0, w1, w0
   124f4:	cmp	w0, #0x100
   124f8:	b.ne	12524 <XS_B__CV_PADLIST+0x100>  // b.any
   124fc:	ldr	x0, [sp, #24]
   12500:	ldr	x1, [x0, #24]
   12504:	ldrsw	x0, [sp, #32]
   12508:	lsl	x0, x0, #3
   1250c:	add	x0, x1, x0
   12510:	ldr	x0, [x0]
   12514:	ldr	x0, [x0, #16]
   12518:	ldr	x0, [x0]
   1251c:	ldr	x0, [x0, #32]
   12520:	b	12550 <XS_B__CV_PADLIST+0x12c>
   12524:	ldr	x0, [sp, #24]
   12528:	ldr	x1, [x0, #24]
   1252c:	ldrsw	x0, [sp, #32]
   12530:	lsl	x0, x0, #3
   12534:	add	x0, x1, x0
   12538:	ldr	x0, [x0]
   1253c:	ldr	x0, [x0, #16]
   12540:	mov	w2, #0x2                   	// #2
   12544:	mov	x1, x0
   12548:	ldr	x0, [sp, #24]
   1254c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   12550:	str	x0, [sp, #56]
   12554:	ldr	x0, [sp, #56]
   12558:	str	x0, [sp, #64]
   1255c:	ldr	x0, [sp, #64]
   12560:	ldr	x0, [x0]
   12564:	str	x0, [sp, #72]
   12568:	ldr	x0, [sp, #72]
   1256c:	ldr	w0, [x0, #92]
   12570:	and	w0, w0, #0x8
   12574:	cmp	w0, #0x0
   12578:	b.ne	125a4 <XS_B__CV_PADLIST+0x180>  // b.any
   1257c:	b	1258c <XS_B__CV_PADLIST+0x168>
   12580:	adrp	x0, 18000 <boot_B+0x23d8>
   12584:	add	x0, x0, #0xf48
   12588:	bl	4e60 <Perl_croak_nocontext@plt>
   1258c:	ldr	x0, [sp, #64]
   12590:	ldr	x0, [x0]
   12594:	str	x0, [sp, #80]
   12598:	ldr	x0, [sp, #80]
   1259c:	ldr	x0, [x0, #72]
   125a0:	b	125a8 <XS_B__CV_PADLIST+0x184>
   125a4:	mov	x0, #0x0                   	// #0
   125a8:	str	x0, [sp, #88]
   125ac:	ldr	x0, [sp, #24]
   125b0:	bl	5080 <Perl_sv_newmortal@plt>
   125b4:	str	x0, [sp, #96]
   125b8:	ldr	x0, [sp, #88]
   125bc:	cmp	x0, #0x0
   125c0:	b.eq	125d0 <XS_B__CV_PADLIST+0x1ac>  // b.none
   125c4:	adrp	x0, 18000 <boot_B+0x23d8>
   125c8:	add	x0, x0, #0xd30
   125cc:	b	125d8 <XS_B__CV_PADLIST+0x1b4>
   125d0:	adrp	x0, 18000 <boot_B+0x23d8>
   125d4:	add	x0, x0, #0x850
   125d8:	mov	x2, x0
   125dc:	ldr	x1, [sp, #96]
   125e0:	ldr	x0, [sp, #24]
   125e4:	bl	4fc0 <Perl_newSVrv@plt>
   125e8:	mov	x1, x0
   125ec:	ldr	x0, [sp, #88]
   125f0:	mov	x2, x0
   125f4:	ldr	x0, [sp, #24]
   125f8:	bl	5040 <Perl_sv_setiv@plt>
   125fc:	ldr	x0, [sp, #24]
   12600:	ldr	x1, [x0, #24]
   12604:	ldrsw	x0, [sp, #32]
   12608:	lsl	x0, x0, #3
   1260c:	add	x0, x1, x0
   12610:	ldr	x1, [sp, #96]
   12614:	str	x1, [x0]
   12618:	mov	x0, #0x1                   	// #1
   1261c:	str	x0, [sp, #104]
   12620:	ldr	x0, [sp, #24]
   12624:	ldr	x1, [x0, #24]
   12628:	ldrsw	x2, [sp, #32]
   1262c:	ldr	x0, [sp, #104]
   12630:	add	x0, x2, x0
   12634:	lsl	x0, x0, #3
   12638:	sub	x0, x0, #0x8
   1263c:	add	x1, x1, x0
   12640:	ldr	x0, [sp, #24]
   12644:	str	x1, [x0]
   12648:	nop
   1264c:	ldp	x29, x30, [sp], #112
   12650:	ret

0000000000012654 <XS_B__CV_HSCXT>:
   12654:	stp	x29, x30, [sp, #-112]!
   12658:	mov	x29, sp
   1265c:	str	x0, [sp, #24]
   12660:	str	x1, [sp, #16]
   12664:	ldr	x0, [sp, #24]
   12668:	ldr	x0, [x0]
   1266c:	str	x0, [sp, #48]
   12670:	ldr	x0, [sp, #24]
   12674:	bl	7424 <S_POPMARK>
   12678:	str	w0, [sp, #40]
   1267c:	ldr	x0, [sp, #24]
   12680:	ldr	x1, [x0, #24]
   12684:	ldr	w0, [sp, #40]
   12688:	add	w2, w0, #0x1
   1268c:	str	w2, [sp, #40]
   12690:	sxtw	x0, w0
   12694:	lsl	x0, x0, #3
   12698:	add	x0, x1, x0
   1269c:	str	x0, [sp, #56]
   126a0:	ldr	x1, [sp, #48]
   126a4:	ldr	x0, [sp, #56]
   126a8:	sub	x0, x1, x0
   126ac:	asr	x0, x0, #3
   126b0:	str	w0, [sp, #44]
   126b4:	ldr	w0, [sp, #44]
   126b8:	cmp	w0, #0x1
   126bc:	b.eq	126d0 <XS_B__CV_HSCXT+0x7c>  // b.none
   126c0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   126c4:	add	x1, x0, #0x170
   126c8:	ldr	x0, [sp, #16]
   126cc:	bl	4d70 <Perl_croak_xs_usage@plt>
   126d0:	ldr	x0, [sp, #24]
   126d4:	ldr	x1, [x0, #24]
   126d8:	ldrsw	x0, [sp, #40]
   126dc:	lsl	x0, x0, #3
   126e0:	add	x0, x1, x0
   126e4:	ldr	x0, [x0]
   126e8:	ldr	w0, [x0, #12]
   126ec:	and	w0, w0, #0x800
   126f0:	cmp	w0, #0x0
   126f4:	b.eq	127b0 <XS_B__CV_HSCXT+0x15c>  // b.none
   126f8:	ldr	x0, [sp, #24]
   126fc:	ldr	x1, [x0, #24]
   12700:	ldrsw	x0, [sp, #40]
   12704:	lsl	x0, x0, #3
   12708:	add	x0, x1, x0
   1270c:	ldr	x0, [x0]
   12710:	ldr	x0, [x0, #16]
   12714:	ldr	w1, [x0, #12]
   12718:	mov	w0, #0x100                 	// #256
   1271c:	movk	w0, #0x20, lsl #16
   12720:	and	w0, w1, w0
   12724:	cmp	w0, #0x100
   12728:	b.ne	12754 <XS_B__CV_HSCXT+0x100>  // b.any
   1272c:	ldr	x0, [sp, #24]
   12730:	ldr	x1, [x0, #24]
   12734:	ldrsw	x0, [sp, #40]
   12738:	lsl	x0, x0, #3
   1273c:	add	x0, x1, x0
   12740:	ldr	x0, [x0]
   12744:	ldr	x0, [x0, #16]
   12748:	ldr	x0, [x0]
   1274c:	ldr	x0, [x0, #32]
   12750:	b	12780 <XS_B__CV_HSCXT+0x12c>
   12754:	ldr	x0, [sp, #24]
   12758:	ldr	x1, [x0, #24]
   1275c:	ldrsw	x0, [sp, #40]
   12760:	lsl	x0, x0, #3
   12764:	add	x0, x1, x0
   12768:	ldr	x0, [x0]
   1276c:	ldr	x0, [x0, #16]
   12770:	mov	w2, #0x2                   	// #2
   12774:	mov	x1, x0
   12778:	ldr	x0, [sp, #24]
   1277c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   12780:	str	x0, [sp, #64]
   12784:	ldr	x0, [sp, #64]
   12788:	str	x0, [sp, #72]
   1278c:	ldr	x0, [sp, #72]
   12790:	ldr	x0, [x0]
   12794:	str	x0, [sp, #80]
   12798:	ldr	x0, [sp, #80]
   1279c:	ldr	w0, [x0, #92]
   127a0:	and	w0, w0, #0x8
   127a4:	cmp	w0, #0x0
   127a8:	b.eq	127d4 <XS_B__CV_HSCXT+0x180>  // b.none
   127ac:	b	127bc <XS_B__CV_HSCXT+0x168>
   127b0:	adrp	x0, 18000 <boot_B+0x23d8>
   127b4:	add	x0, x0, #0xf48
   127b8:	bl	4e60 <Perl_croak_nocontext@plt>
   127bc:	ldr	x0, [sp, #72]
   127c0:	ldr	x0, [x0]
   127c4:	str	x0, [sp, #88]
   127c8:	ldr	x0, [sp, #88]
   127cc:	ldr	x0, [x0, #72]
   127d0:	b	127d8 <XS_B__CV_HSCXT+0x184>
   127d4:	mov	x0, #0x0                   	// #0
   127d8:	mov	x1, x0
   127dc:	ldr	x0, [sp, #24]
   127e0:	bl	4f00 <Perl_newSVuv@plt>
   127e4:	str	x0, [sp, #96]
   127e8:	ldr	x1, [sp, #96]
   127ec:	ldr	x0, [sp, #24]
   127f0:	bl	4ec0 <Perl_sv_2mortal@plt>
   127f4:	str	x0, [sp, #96]
   127f8:	ldr	x0, [sp, #24]
   127fc:	ldr	x1, [x0, #24]
   12800:	ldrsw	x0, [sp, #40]
   12804:	lsl	x0, x0, #3
   12808:	add	x0, x1, x0
   1280c:	ldr	x1, [sp, #96]
   12810:	str	x1, [x0]
   12814:	mov	x0, #0x1                   	// #1
   12818:	str	x0, [sp, #104]
   1281c:	ldr	x0, [sp, #24]
   12820:	ldr	x1, [x0, #24]
   12824:	ldrsw	x2, [sp, #40]
   12828:	ldr	x0, [sp, #104]
   1282c:	add	x0, x2, x0
   12830:	lsl	x0, x0, #3
   12834:	sub	x0, x0, #0x8
   12838:	add	x1, x1, x0
   1283c:	ldr	x0, [sp, #24]
   12840:	str	x1, [x0]
   12844:	nop
   12848:	ldp	x29, x30, [sp], #112
   1284c:	ret

0000000000012850 <XS_B__CV_XSUB>:
   12850:	stp	x29, x30, [sp, #-144]!
   12854:	mov	x29, sp
   12858:	str	x0, [sp, #24]
   1285c:	str	x1, [sp, #16]
   12860:	ldr	x0, [sp, #24]
   12864:	ldr	x0, [x0]
   12868:	str	x0, [sp, #56]
   1286c:	ldr	x0, [sp, #24]
   12870:	bl	7424 <S_POPMARK>
   12874:	str	w0, [sp, #44]
   12878:	ldr	x0, [sp, #24]
   1287c:	ldr	x1, [x0, #24]
   12880:	ldr	w0, [sp, #44]
   12884:	add	w2, w0, #0x1
   12888:	str	w2, [sp, #44]
   1288c:	sxtw	x0, w0
   12890:	lsl	x0, x0, #3
   12894:	add	x0, x1, x0
   12898:	str	x0, [sp, #64]
   1289c:	ldr	x1, [sp, #56]
   128a0:	ldr	x0, [sp, #64]
   128a4:	sub	x0, x1, x0
   128a8:	asr	x0, x0, #3
   128ac:	str	w0, [sp, #48]
   128b0:	ldr	x0, [sp, #16]
   128b4:	ldr	x0, [x0]
   128b8:	str	x0, [sp, #72]
   128bc:	ldr	x0, [sp, #72]
   128c0:	ldr	w0, [x0, #40]
   128c4:	str	w0, [sp, #52]
   128c8:	ldr	w0, [sp, #48]
   128cc:	cmp	w0, #0x1
   128d0:	b.eq	128e4 <XS_B__CV_XSUB+0x94>  // b.none
   128d4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   128d8:	add	x1, x0, #0x170
   128dc:	ldr	x0, [sp, #16]
   128e0:	bl	4d70 <Perl_croak_xs_usage@plt>
   128e4:	ldr	x0, [sp, #24]
   128e8:	ldr	x1, [x0, #24]
   128ec:	ldrsw	x0, [sp, #44]
   128f0:	lsl	x0, x0, #3
   128f4:	add	x0, x1, x0
   128f8:	ldr	x0, [x0]
   128fc:	ldr	w0, [x0, #12]
   12900:	and	w0, w0, #0x800
   12904:	cmp	w0, #0x0
   12908:	b.eq	129b0 <XS_B__CV_XSUB+0x160>  // b.none
   1290c:	ldr	x0, [sp, #24]
   12910:	ldr	x1, [x0, #24]
   12914:	ldrsw	x0, [sp, #44]
   12918:	lsl	x0, x0, #3
   1291c:	add	x0, x1, x0
   12920:	ldr	x0, [x0]
   12924:	ldr	x0, [x0, #16]
   12928:	ldr	w1, [x0, #12]
   1292c:	mov	w0, #0x100                 	// #256
   12930:	movk	w0, #0x20, lsl #16
   12934:	and	w0, w1, w0
   12938:	cmp	w0, #0x100
   1293c:	b.ne	12968 <XS_B__CV_XSUB+0x118>  // b.any
   12940:	ldr	x0, [sp, #24]
   12944:	ldr	x1, [x0, #24]
   12948:	ldrsw	x0, [sp, #44]
   1294c:	lsl	x0, x0, #3
   12950:	add	x0, x1, x0
   12954:	ldr	x0, [x0]
   12958:	ldr	x0, [x0, #16]
   1295c:	ldr	x0, [x0]
   12960:	ldr	x0, [x0, #32]
   12964:	b	12994 <XS_B__CV_XSUB+0x144>
   12968:	ldr	x0, [sp, #24]
   1296c:	ldr	x1, [x0, #24]
   12970:	ldrsw	x0, [sp, #44]
   12974:	lsl	x0, x0, #3
   12978:	add	x0, x1, x0
   1297c:	ldr	x0, [x0]
   12980:	ldr	x0, [x0, #16]
   12984:	mov	w2, #0x2                   	// #2
   12988:	mov	x1, x0
   1298c:	ldr	x0, [sp, #24]
   12990:	bl	4b20 <Perl_sv_2iv_flags@plt>
   12994:	str	x0, [sp, #80]
   12998:	ldr	x0, [sp, #80]
   1299c:	str	x0, [sp, #88]
   129a0:	ldr	w0, [sp, #52]
   129a4:	cmp	w0, #0x0
   129a8:	b.eq	12a00 <XS_B__CV_XSUB+0x1b0>  // b.none
   129ac:	b	129bc <XS_B__CV_XSUB+0x16c>
   129b0:	adrp	x0, 18000 <boot_B+0x23d8>
   129b4:	add	x0, x0, #0xf48
   129b8:	bl	4e60 <Perl_croak_nocontext@plt>
   129bc:	ldr	x0, [sp, #88]
   129c0:	ldr	x0, [x0]
   129c4:	str	x0, [sp, #96]
   129c8:	ldr	x0, [sp, #96]
   129cc:	ldr	w0, [x0, #92]
   129d0:	and	w0, w0, #0x4
   129d4:	cmp	w0, #0x0
   129d8:	b.eq	12a00 <XS_B__CV_XSUB+0x1b0>  // b.none
   129dc:	ldr	x0, [sp, #88]
   129e0:	ldr	x0, [x0]
   129e4:	str	x0, [sp, #104]
   129e8:	ldr	x0, [sp, #104]
   129ec:	ldr	x0, [x0, #40]
   129f0:	mov	x1, x0
   129f4:	ldr	x0, [sp, #24]
   129f8:	bl	77c4 <make_sv_object>
   129fc:	b	12a78 <XS_B__CV_XSUB+0x228>
   12a00:	ldr	x0, [sp, #88]
   12a04:	ldr	x0, [x0]
   12a08:	str	x0, [sp, #112]
   12a0c:	ldr	x0, [sp, #112]
   12a10:	ldr	w0, [x0, #92]
   12a14:	and	w0, w0, #0x8
   12a18:	cmp	w0, #0x0
   12a1c:	b.eq	12a5c <XS_B__CV_XSUB+0x20c>  // b.none
   12a20:	ldr	w0, [sp, #52]
   12a24:	cmp	w0, #0x0
   12a28:	b.eq	12a44 <XS_B__CV_XSUB+0x1f4>  // b.none
   12a2c:	ldr	x0, [sp, #88]
   12a30:	ldr	x0, [x0]
   12a34:	str	x0, [sp, #128]
   12a38:	ldr	x0, [sp, #128]
   12a3c:	ldr	x0, [x0, #40]
   12a40:	b	12a60 <XS_B__CV_XSUB+0x210>
   12a44:	ldr	x0, [sp, #88]
   12a48:	ldr	x0, [x0]
   12a4c:	str	x0, [sp, #120]
   12a50:	ldr	x0, [sp, #120]
   12a54:	ldr	x0, [x0, #48]
   12a58:	b	12a60 <XS_B__CV_XSUB+0x210>
   12a5c:	mov	x0, #0x0                   	// #0
   12a60:	mov	x1, x0
   12a64:	ldr	x0, [sp, #24]
   12a68:	bl	5020 <Perl_newSViv@plt>
   12a6c:	mov	x1, x0
   12a70:	ldr	x0, [sp, #24]
   12a74:	bl	4ec0 <Perl_sv_2mortal@plt>
   12a78:	ldr	x1, [sp, #24]
   12a7c:	ldr	x2, [x1, #24]
   12a80:	ldrsw	x1, [sp, #44]
   12a84:	lsl	x1, x1, #3
   12a88:	add	x1, x2, x1
   12a8c:	str	x0, [x1]
   12a90:	mov	x0, #0x1                   	// #1
   12a94:	str	x0, [sp, #136]
   12a98:	ldr	x0, [sp, #24]
   12a9c:	ldr	x1, [x0, #24]
   12aa0:	ldrsw	x2, [sp, #44]
   12aa4:	ldr	x0, [sp, #136]
   12aa8:	add	x0, x2, x0
   12aac:	lsl	x0, x0, #3
   12ab0:	sub	x0, x0, #0x8
   12ab4:	add	x1, x1, x0
   12ab8:	ldr	x0, [sp, #24]
   12abc:	str	x1, [x0]
   12ac0:	nop
   12ac4:	ldp	x29, x30, [sp], #144
   12ac8:	ret

0000000000012acc <XS_B__CV_const_sv>:
   12acc:	stp	x29, x30, [sp, #-80]!
   12ad0:	mov	x29, sp
   12ad4:	str	x0, [sp, #24]
   12ad8:	str	x1, [sp, #16]
   12adc:	ldr	x0, [sp, #24]
   12ae0:	ldr	x0, [x0]
   12ae4:	str	x0, [sp, #48]
   12ae8:	ldr	x0, [sp, #24]
   12aec:	bl	7424 <S_POPMARK>
   12af0:	str	w0, [sp, #40]
   12af4:	ldr	x0, [sp, #24]
   12af8:	ldr	x1, [x0, #24]
   12afc:	ldr	w0, [sp, #40]
   12b00:	add	w2, w0, #0x1
   12b04:	str	w2, [sp, #40]
   12b08:	sxtw	x0, w0
   12b0c:	lsl	x0, x0, #3
   12b10:	add	x0, x1, x0
   12b14:	str	x0, [sp, #56]
   12b18:	ldr	x1, [sp, #48]
   12b1c:	ldr	x0, [sp, #56]
   12b20:	sub	x0, x1, x0
   12b24:	asr	x0, x0, #3
   12b28:	str	w0, [sp, #44]
   12b2c:	ldr	w0, [sp, #44]
   12b30:	cmp	w0, #0x1
   12b34:	b.eq	12b48 <XS_B__CV_const_sv+0x7c>  // b.none
   12b38:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   12b3c:	add	x1, x0, #0x170
   12b40:	ldr	x0, [sp, #16]
   12b44:	bl	4d70 <Perl_croak_xs_usage@plt>
   12b48:	ldrsw	x0, [sp, #44]
   12b4c:	lsl	x0, x0, #3
   12b50:	neg	x0, x0
   12b54:	ldr	x1, [sp, #48]
   12b58:	add	x0, x1, x0
   12b5c:	str	x0, [sp, #48]
   12b60:	ldr	x0, [sp, #24]
   12b64:	ldr	x1, [x0, #24]
   12b68:	ldrsw	x0, [sp, #40]
   12b6c:	lsl	x0, x0, #3
   12b70:	add	x0, x1, x0
   12b74:	ldr	x0, [x0]
   12b78:	ldr	w0, [x0, #12]
   12b7c:	and	w0, w0, #0x800
   12b80:	cmp	w0, #0x0
   12b84:	b.eq	12c20 <XS_B__CV_const_sv+0x154>  // b.none
   12b88:	ldr	x0, [sp, #24]
   12b8c:	ldr	x1, [x0, #24]
   12b90:	ldrsw	x0, [sp, #40]
   12b94:	lsl	x0, x0, #3
   12b98:	add	x0, x1, x0
   12b9c:	ldr	x0, [x0]
   12ba0:	ldr	x0, [x0, #16]
   12ba4:	ldr	w1, [x0, #12]
   12ba8:	mov	w0, #0x100                 	// #256
   12bac:	movk	w0, #0x20, lsl #16
   12bb0:	and	w0, w1, w0
   12bb4:	cmp	w0, #0x100
   12bb8:	b.ne	12be4 <XS_B__CV_const_sv+0x118>  // b.any
   12bbc:	ldr	x0, [sp, #24]
   12bc0:	ldr	x1, [x0, #24]
   12bc4:	ldrsw	x0, [sp, #40]
   12bc8:	lsl	x0, x0, #3
   12bcc:	add	x0, x1, x0
   12bd0:	ldr	x0, [x0]
   12bd4:	ldr	x0, [x0, #16]
   12bd8:	ldr	x0, [x0]
   12bdc:	ldr	x0, [x0, #32]
   12be0:	b	12c10 <XS_B__CV_const_sv+0x144>
   12be4:	ldr	x0, [sp, #24]
   12be8:	ldr	x1, [x0, #24]
   12bec:	ldrsw	x0, [sp, #40]
   12bf0:	lsl	x0, x0, #3
   12bf4:	add	x0, x1, x0
   12bf8:	ldr	x0, [x0]
   12bfc:	ldr	x0, [x0, #16]
   12c00:	mov	w2, #0x2                   	// #2
   12c04:	mov	x1, x0
   12c08:	ldr	x0, [sp, #24]
   12c0c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   12c10:	str	x0, [sp, #64]
   12c14:	ldr	x0, [sp, #64]
   12c18:	str	x0, [sp, #72]
   12c1c:	b	12c2c <XS_B__CV_const_sv+0x160>
   12c20:	adrp	x0, 18000 <boot_B+0x23d8>
   12c24:	add	x0, x0, #0xf48
   12c28:	bl	4e60 <Perl_croak_nocontext@plt>
   12c2c:	ldr	x0, [sp, #72]
   12c30:	bl	4c30 <Perl_cv_const_sv@plt>
   12c34:	mov	x1, x0
   12c38:	ldr	x0, [sp, #48]
   12c3c:	add	x0, x0, #0x8
   12c40:	str	x0, [sp, #48]
   12c44:	ldr	x0, [sp, #24]
   12c48:	bl	77c4 <make_sv_object>
   12c4c:	mov	x1, x0
   12c50:	ldr	x0, [sp, #48]
   12c54:	str	x1, [x0]
   12c58:	ldr	x0, [sp, #24]
   12c5c:	ldr	x1, [sp, #48]
   12c60:	str	x1, [x0]
   12c64:	nop
   12c68:	ldp	x29, x30, [sp], #80
   12c6c:	ret

0000000000012c70 <XS_B__CV_GV>:
   12c70:	stp	x29, x30, [sp, #-96]!
   12c74:	mov	x29, sp
   12c78:	str	x19, [sp, #16]
   12c7c:	str	x0, [sp, #40]
   12c80:	str	x1, [sp, #32]
   12c84:	ldr	x0, [sp, #40]
   12c88:	ldr	x0, [x0]
   12c8c:	str	x0, [sp, #56]
   12c90:	ldr	x0, [sp, #40]
   12c94:	bl	7424 <S_POPMARK>
   12c98:	str	w0, [sp, #48]
   12c9c:	ldr	x0, [sp, #40]
   12ca0:	ldr	x1, [x0, #24]
   12ca4:	ldr	w0, [sp, #48]
   12ca8:	add	w2, w0, #0x1
   12cac:	str	w2, [sp, #48]
   12cb0:	sxtw	x0, w0
   12cb4:	lsl	x0, x0, #3
   12cb8:	add	x0, x1, x0
   12cbc:	str	x0, [sp, #64]
   12cc0:	ldr	x1, [sp, #56]
   12cc4:	ldr	x0, [sp, #64]
   12cc8:	sub	x0, x1, x0
   12ccc:	asr	x0, x0, #3
   12cd0:	str	w0, [sp, #52]
   12cd4:	ldr	w0, [sp, #52]
   12cd8:	cmp	w0, #0x1
   12cdc:	b.eq	12cf0 <XS_B__CV_GV+0x80>  // b.none
   12ce0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   12ce4:	add	x1, x0, #0x170
   12ce8:	ldr	x0, [sp, #32]
   12cec:	bl	4d70 <Perl_croak_xs_usage@plt>
   12cf0:	ldr	x0, [sp, #40]
   12cf4:	ldr	x1, [x0, #24]
   12cf8:	ldrsw	x0, [sp, #48]
   12cfc:	lsl	x0, x0, #3
   12d00:	add	x0, x1, x0
   12d04:	ldr	x0, [x0]
   12d08:	ldr	w0, [x0, #12]
   12d0c:	and	w0, w0, #0x800
   12d10:	cmp	w0, #0x0
   12d14:	b.eq	12db0 <XS_B__CV_GV+0x140>  // b.none
   12d18:	ldr	x0, [sp, #40]
   12d1c:	ldr	x1, [x0, #24]
   12d20:	ldrsw	x0, [sp, #48]
   12d24:	lsl	x0, x0, #3
   12d28:	add	x0, x1, x0
   12d2c:	ldr	x0, [x0]
   12d30:	ldr	x0, [x0, #16]
   12d34:	ldr	w1, [x0, #12]
   12d38:	mov	w0, #0x100                 	// #256
   12d3c:	movk	w0, #0x20, lsl #16
   12d40:	and	w0, w1, w0
   12d44:	cmp	w0, #0x100
   12d48:	b.ne	12d74 <XS_B__CV_GV+0x104>  // b.any
   12d4c:	ldr	x0, [sp, #40]
   12d50:	ldr	x1, [x0, #24]
   12d54:	ldrsw	x0, [sp, #48]
   12d58:	lsl	x0, x0, #3
   12d5c:	add	x0, x1, x0
   12d60:	ldr	x0, [x0]
   12d64:	ldr	x0, [x0, #16]
   12d68:	ldr	x0, [x0]
   12d6c:	ldr	x0, [x0, #32]
   12d70:	b	12da0 <XS_B__CV_GV+0x130>
   12d74:	ldr	x0, [sp, #40]
   12d78:	ldr	x1, [x0, #24]
   12d7c:	ldrsw	x0, [sp, #48]
   12d80:	lsl	x0, x0, #3
   12d84:	add	x0, x1, x0
   12d88:	ldr	x0, [x0]
   12d8c:	ldr	x0, [x0, #16]
   12d90:	mov	w2, #0x2                   	// #2
   12d94:	mov	x1, x0
   12d98:	ldr	x0, [sp, #40]
   12d9c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   12da0:	str	x0, [sp, #72]
   12da4:	ldr	x0, [sp, #72]
   12da8:	str	x0, [sp, #80]
   12dac:	b	12dbc <XS_B__CV_GV+0x14c>
   12db0:	adrp	x0, 18000 <boot_B+0x23d8>
   12db4:	add	x0, x0, #0xf48
   12db8:	bl	4e60 <Perl_croak_nocontext@plt>
   12dbc:	ldr	x1, [sp, #80]
   12dc0:	ldr	x0, [sp, #40]
   12dc4:	bl	73ac <S_CvGV>
   12dc8:	mov	x2, x0
   12dcc:	ldr	x0, [sp, #40]
   12dd0:	ldr	x1, [x0, #24]
   12dd4:	ldrsw	x0, [sp, #48]
   12dd8:	lsl	x0, x0, #3
   12ddc:	add	x19, x1, x0
   12de0:	mov	x1, x2
   12de4:	ldr	x0, [sp, #40]
   12de8:	bl	77c4 <make_sv_object>
   12dec:	str	x0, [x19]
   12df0:	mov	x0, #0x1                   	// #1
   12df4:	str	x0, [sp, #88]
   12df8:	ldr	x0, [sp, #40]
   12dfc:	ldr	x1, [x0, #24]
   12e00:	ldrsw	x2, [sp, #48]
   12e04:	ldr	x0, [sp, #88]
   12e08:	add	x0, x2, x0
   12e0c:	lsl	x0, x0, #3
   12e10:	sub	x0, x0, #0x8
   12e14:	add	x1, x1, x0
   12e18:	ldr	x0, [sp, #40]
   12e1c:	str	x1, [x0]
   12e20:	nop
   12e24:	ldr	x19, [sp, #16]
   12e28:	ldp	x29, x30, [sp], #96
   12e2c:	ret

0000000000012e30 <XS_B__CV_NAME_HEK>:
   12e30:	stp	x29, x30, [sp, #-96]!
   12e34:	mov	x29, sp
   12e38:	str	x0, [sp, #24]
   12e3c:	str	x1, [sp, #16]
   12e40:	ldr	x0, [sp, #24]
   12e44:	ldr	x0, [x0]
   12e48:	str	x0, [sp, #40]
   12e4c:	ldr	x0, [sp, #24]
   12e50:	bl	7424 <S_POPMARK>
   12e54:	str	w0, [sp, #32]
   12e58:	ldr	x0, [sp, #24]
   12e5c:	ldr	x1, [x0, #24]
   12e60:	ldr	w0, [sp, #32]
   12e64:	add	w2, w0, #0x1
   12e68:	str	w2, [sp, #32]
   12e6c:	sxtw	x0, w0
   12e70:	lsl	x0, x0, #3
   12e74:	add	x0, x1, x0
   12e78:	str	x0, [sp, #48]
   12e7c:	ldr	x1, [sp, #40]
   12e80:	ldr	x0, [sp, #48]
   12e84:	sub	x0, x1, x0
   12e88:	asr	x0, x0, #3
   12e8c:	str	w0, [sp, #36]
   12e90:	ldr	w0, [sp, #36]
   12e94:	cmp	w0, #0x1
   12e98:	b.eq	12eac <XS_B__CV_NAME_HEK+0x7c>  // b.none
   12e9c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   12ea0:	add	x1, x0, #0x170
   12ea4:	ldr	x0, [sp, #16]
   12ea8:	bl	4d70 <Perl_croak_xs_usage@plt>
   12eac:	ldr	x0, [sp, #24]
   12eb0:	ldr	x1, [x0, #24]
   12eb4:	ldrsw	x0, [sp, #32]
   12eb8:	lsl	x0, x0, #3
   12ebc:	add	x0, x1, x0
   12ec0:	ldr	x0, [x0]
   12ec4:	ldr	w0, [x0, #12]
   12ec8:	and	w0, w0, #0x800
   12ecc:	cmp	w0, #0x0
   12ed0:	b.eq	12f8c <XS_B__CV_NAME_HEK+0x15c>  // b.none
   12ed4:	ldr	x0, [sp, #24]
   12ed8:	ldr	x1, [x0, #24]
   12edc:	ldrsw	x0, [sp, #32]
   12ee0:	lsl	x0, x0, #3
   12ee4:	add	x0, x1, x0
   12ee8:	ldr	x0, [x0]
   12eec:	ldr	x0, [x0, #16]
   12ef0:	ldr	w1, [x0, #12]
   12ef4:	mov	w0, #0x100                 	// #256
   12ef8:	movk	w0, #0x20, lsl #16
   12efc:	and	w0, w1, w0
   12f00:	cmp	w0, #0x100
   12f04:	b.ne	12f30 <XS_B__CV_NAME_HEK+0x100>  // b.any
   12f08:	ldr	x0, [sp, #24]
   12f0c:	ldr	x1, [x0, #24]
   12f10:	ldrsw	x0, [sp, #32]
   12f14:	lsl	x0, x0, #3
   12f18:	add	x0, x1, x0
   12f1c:	ldr	x0, [x0]
   12f20:	ldr	x0, [x0, #16]
   12f24:	ldr	x0, [x0]
   12f28:	ldr	x0, [x0, #32]
   12f2c:	b	12f5c <XS_B__CV_NAME_HEK+0x12c>
   12f30:	ldr	x0, [sp, #24]
   12f34:	ldr	x1, [x0, #24]
   12f38:	ldrsw	x0, [sp, #32]
   12f3c:	lsl	x0, x0, #3
   12f40:	add	x0, x1, x0
   12f44:	ldr	x0, [x0]
   12f48:	ldr	x0, [x0, #16]
   12f4c:	mov	w2, #0x2                   	// #2
   12f50:	mov	x1, x0
   12f54:	ldr	x0, [sp, #24]
   12f58:	bl	4b20 <Perl_sv_2iv_flags@plt>
   12f5c:	str	x0, [sp, #56]
   12f60:	ldr	x0, [sp, #56]
   12f64:	str	x0, [sp, #64]
   12f68:	ldr	x0, [sp, #64]
   12f6c:	ldr	x0, [x0]
   12f70:	str	x0, [sp, #72]
   12f74:	ldr	x0, [sp, #72]
   12f78:	ldr	w0, [x0, #92]
   12f7c:	and	w0, w0, #0x8000
   12f80:	cmp	w0, #0x0
   12f84:	b.eq	12fb0 <XS_B__CV_NAME_HEK+0x180>  // b.none
   12f88:	b	12f98 <XS_B__CV_NAME_HEK+0x168>
   12f8c:	adrp	x0, 18000 <boot_B+0x23d8>
   12f90:	add	x0, x0, #0xf48
   12f94:	bl	4e60 <Perl_croak_nocontext@plt>
   12f98:	ldr	x0, [sp, #64]
   12f9c:	bl	5250 <CvNAME_HEK>
   12fa0:	mov	x1, x0
   12fa4:	ldr	x0, [sp, #24]
   12fa8:	bl	4bc0 <Perl_newSVhek@plt>
   12fac:	b	12fb8 <XS_B__CV_NAME_HEK+0x188>
   12fb0:	ldr	x0, [sp, #24]
   12fb4:	add	x0, x0, #0x150
   12fb8:	str	x0, [sp, #80]
   12fbc:	ldr	x1, [sp, #80]
   12fc0:	ldr	x0, [sp, #24]
   12fc4:	bl	4ec0 <Perl_sv_2mortal@plt>
   12fc8:	str	x0, [sp, #80]
   12fcc:	ldr	x0, [sp, #24]
   12fd0:	ldr	x1, [x0, #24]
   12fd4:	ldrsw	x0, [sp, #32]
   12fd8:	lsl	x0, x0, #3
   12fdc:	add	x0, x1, x0
   12fe0:	ldr	x1, [sp, #80]
   12fe4:	str	x1, [x0]
   12fe8:	mov	x0, #0x1                   	// #1
   12fec:	str	x0, [sp, #88]
   12ff0:	ldr	x0, [sp, #24]
   12ff4:	ldr	x1, [x0, #24]
   12ff8:	ldrsw	x2, [sp, #32]
   12ffc:	ldr	x0, [sp, #88]
   13000:	add	x0, x2, x0
   13004:	lsl	x0, x0, #3
   13008:	sub	x0, x0, #0x8
   1300c:	add	x1, x1, x0
   13010:	ldr	x0, [sp, #24]
   13014:	str	x1, [x0]
   13018:	nop
   1301c:	ldp	x29, x30, [sp], #96
   13020:	ret

0000000000013024 <XS_B__HV_FILL>:
   13024:	stp	x29, x30, [sp, #-112]!
   13028:	mov	x29, sp
   1302c:	str	x0, [sp, #24]
   13030:	str	x1, [sp, #16]
   13034:	ldr	x0, [sp, #24]
   13038:	ldr	x0, [x0]
   1303c:	str	x0, [sp, #40]
   13040:	ldr	x0, [sp, #24]
   13044:	bl	7424 <S_POPMARK>
   13048:	str	w0, [sp, #32]
   1304c:	ldr	x0, [sp, #24]
   13050:	ldr	x1, [x0, #24]
   13054:	ldr	w0, [sp, #32]
   13058:	add	w2, w0, #0x1
   1305c:	str	w2, [sp, #32]
   13060:	sxtw	x0, w0
   13064:	lsl	x0, x0, #3
   13068:	add	x0, x1, x0
   1306c:	str	x0, [sp, #48]
   13070:	ldr	x1, [sp, #40]
   13074:	ldr	x0, [sp, #48]
   13078:	sub	x0, x1, x0
   1307c:	asr	x0, x0, #3
   13080:	str	w0, [sp, #36]
   13084:	ldr	w0, [sp, #36]
   13088:	cmp	w0, #0x1
   1308c:	b.eq	130a0 <XS_B__HV_FILL+0x7c>  // b.none
   13090:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13094:	add	x1, x0, #0x178
   13098:	ldr	x0, [sp, #16]
   1309c:	bl	4d70 <Perl_croak_xs_usage@plt>
   130a0:	ldr	x0, [sp, #24]
   130a4:	ldr	x0, [x0, #8]
   130a8:	ldrb	w0, [x0, #35]
   130ac:	and	w0, w0, #0x4
   130b0:	cmp	w0, #0x0
   130b4:	b.eq	130dc <XS_B__HV_FILL+0xb8>  // b.none
   130b8:	ldr	x0, [sp, #24]
   130bc:	ldr	x1, [x0, #16]
   130c0:	ldr	x0, [sp, #24]
   130c4:	ldr	x0, [x0, #8]
   130c8:	ldr	x0, [x0, #24]
   130cc:	lsl	x0, x0, #3
   130d0:	add	x0, x1, x0
   130d4:	ldr	x0, [x0]
   130d8:	b	130e4 <XS_B__HV_FILL+0xc0>
   130dc:	ldr	x0, [sp, #24]
   130e0:	bl	5080 <Perl_sv_newmortal@plt>
   130e4:	str	x0, [sp, #56]
   130e8:	ldr	x0, [sp, #24]
   130ec:	ldr	x1, [x0, #24]
   130f0:	ldrsw	x0, [sp, #32]
   130f4:	lsl	x0, x0, #3
   130f8:	add	x0, x1, x0
   130fc:	ldr	x0, [x0]
   13100:	ldr	w0, [x0, #12]
   13104:	and	w0, w0, #0x800
   13108:	cmp	w0, #0x0
   1310c:	b.eq	1324c <XS_B__HV_FILL+0x228>  // b.none
   13110:	ldr	x0, [sp, #24]
   13114:	ldr	x1, [x0, #24]
   13118:	ldrsw	x0, [sp, #32]
   1311c:	lsl	x0, x0, #3
   13120:	add	x0, x1, x0
   13124:	ldr	x0, [x0]
   13128:	ldr	x0, [x0, #16]
   1312c:	ldr	w1, [x0, #12]
   13130:	mov	w0, #0x100                 	// #256
   13134:	movk	w0, #0x20, lsl #16
   13138:	and	w0, w1, w0
   1313c:	cmp	w0, #0x100
   13140:	b.ne	1316c <XS_B__HV_FILL+0x148>  // b.any
   13144:	ldr	x0, [sp, #24]
   13148:	ldr	x1, [x0, #24]
   1314c:	ldrsw	x0, [sp, #32]
   13150:	lsl	x0, x0, #3
   13154:	add	x0, x1, x0
   13158:	ldr	x0, [x0]
   1315c:	ldr	x0, [x0, #16]
   13160:	ldr	x0, [x0]
   13164:	ldr	x0, [x0, #32]
   13168:	b	13198 <XS_B__HV_FILL+0x174>
   1316c:	ldr	x0, [sp, #24]
   13170:	ldr	x1, [x0, #24]
   13174:	ldrsw	x0, [sp, #32]
   13178:	lsl	x0, x0, #3
   1317c:	add	x0, x1, x0
   13180:	ldr	x0, [x0]
   13184:	ldr	x0, [x0, #16]
   13188:	mov	w2, #0x2                   	// #2
   1318c:	mov	x1, x0
   13190:	ldr	x0, [sp, #24]
   13194:	bl	4b20 <Perl_sv_2iv_flags@plt>
   13198:	str	x0, [sp, #64]
   1319c:	ldr	x0, [sp, #64]
   131a0:	str	x0, [sp, #72]
   131a4:	ldr	x0, [sp, #72]
   131a8:	str	x0, [sp, #80]
   131ac:	ldr	x0, [sp, #80]
   131b0:	mov	x1, x0
   131b4:	ldr	x0, [sp, #24]
   131b8:	bl	5010 <Perl_hv_fill@plt>
   131bc:	str	x0, [sp, #88]
   131c0:	ldr	x0, [sp, #24]
   131c4:	ldr	x1, [x0, #24]
   131c8:	ldrsw	x0, [sp, #32]
   131cc:	lsl	x0, x0, #3
   131d0:	sub	x0, x0, #0x8
   131d4:	add	x0, x1, x0
   131d8:	str	x0, [sp, #40]
   131dc:	ldr	x0, [sp, #88]
   131e0:	str	x0, [sp, #96]
   131e4:	ldr	x0, [sp, #56]
   131e8:	ldr	w1, [x0, #12]
   131ec:	mov	w0, #0x8ff                 	// #2303
   131f0:	movk	w0, #0x9981, lsl #16
   131f4:	and	w0, w1, w0
   131f8:	cmp	w0, #0x1
   131fc:	cset	w0, eq  // eq = none
   13200:	and	w0, w0, #0xff
   13204:	mov	w1, w0
   13208:	ldr	x0, [sp, #24]
   1320c:	ldrb	w0, [x0, #185]
   13210:	eor	w0, w0, #0x1
   13214:	and	w0, w0, #0xff
   13218:	and	w0, w1, w0
   1321c:	ldr	x1, [sp, #96]
   13220:	mvn	x1, x1
   13224:	lsr	x1, x1, #63
   13228:	and	w1, w1, #0xff
   1322c:	and	w0, w0, w1
   13230:	cmp	w0, #0x0
   13234:	cset	w0, ne  // ne = any
   13238:	and	w0, w0, #0xff
   1323c:	and	x0, x0, #0xff
   13240:	cmp	x0, #0x0
   13244:	b.eq	13280 <XS_B__HV_FILL+0x25c>  // b.none
   13248:	b	13258 <XS_B__HV_FILL+0x234>
   1324c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13250:	add	x0, x0, #0x180
   13254:	bl	4e60 <Perl_croak_nocontext@plt>
   13258:	ldr	x0, [sp, #56]
   1325c:	ldr	w1, [x0, #12]
   13260:	mov	w0, #0x1100                	// #4352
   13264:	orr	w1, w1, w0
   13268:	ldr	x0, [sp, #56]
   1326c:	str	w1, [x0, #12]
   13270:	ldr	x1, [sp, #96]
   13274:	ldr	x0, [sp, #56]
   13278:	str	x1, [x0, #16]
   1327c:	b	13290 <XS_B__HV_FILL+0x26c>
   13280:	ldr	x2, [sp, #96]
   13284:	ldr	x1, [sp, #56]
   13288:	ldr	x0, [sp, #24]
   1328c:	bl	4fe0 <Perl_sv_setuv_mg@plt>
   13290:	ldr	x0, [sp, #40]
   13294:	add	x0, x0, #0x8
   13298:	str	x0, [sp, #40]
   1329c:	ldr	x0, [sp, #40]
   132a0:	ldr	x1, [sp, #56]
   132a4:	str	x1, [x0]
   132a8:	mov	x0, #0x1                   	// #1
   132ac:	str	x0, [sp, #104]
   132b0:	ldr	x0, [sp, #24]
   132b4:	ldr	x1, [x0, #24]
   132b8:	ldrsw	x2, [sp, #32]
   132bc:	ldr	x0, [sp, #104]
   132c0:	add	x0, x2, x0
   132c4:	lsl	x0, x0, #3
   132c8:	sub	x0, x0, #0x8
   132cc:	add	x1, x1, x0
   132d0:	ldr	x0, [sp, #24]
   132d4:	str	x1, [x0]
   132d8:	nop
   132dc:	ldp	x29, x30, [sp], #112
   132e0:	ret

00000000000132e4 <XS_B__HV_RITER>:
   132e4:	stp	x29, x30, [sp, #-112]!
   132e8:	mov	x29, sp
   132ec:	str	x0, [sp, #24]
   132f0:	str	x1, [sp, #16]
   132f4:	ldr	x0, [sp, #24]
   132f8:	ldr	x0, [x0]
   132fc:	str	x0, [sp, #48]
   13300:	ldr	x0, [sp, #24]
   13304:	bl	7424 <S_POPMARK>
   13308:	str	w0, [sp, #36]
   1330c:	ldr	x0, [sp, #24]
   13310:	ldr	x1, [x0, #24]
   13314:	ldr	w0, [sp, #36]
   13318:	add	w2, w0, #0x1
   1331c:	str	w2, [sp, #36]
   13320:	sxtw	x0, w0
   13324:	lsl	x0, x0, #3
   13328:	add	x0, x1, x0
   1332c:	str	x0, [sp, #56]
   13330:	ldr	x1, [sp, #48]
   13334:	ldr	x0, [sp, #56]
   13338:	sub	x0, x1, x0
   1333c:	asr	x0, x0, #3
   13340:	str	w0, [sp, #40]
   13344:	ldr	w0, [sp, #40]
   13348:	cmp	w0, #0x1
   1334c:	b.eq	13360 <XS_B__HV_RITER+0x7c>  // b.none
   13350:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13354:	add	x1, x0, #0x178
   13358:	ldr	x0, [sp, #16]
   1335c:	bl	4d70 <Perl_croak_xs_usage@plt>
   13360:	ldr	x0, [sp, #24]
   13364:	ldr	x0, [x0, #8]
   13368:	ldrb	w0, [x0, #35]
   1336c:	and	w0, w0, #0x4
   13370:	cmp	w0, #0x0
   13374:	b.eq	1339c <XS_B__HV_RITER+0xb8>  // b.none
   13378:	ldr	x0, [sp, #24]
   1337c:	ldr	x1, [x0, #16]
   13380:	ldr	x0, [sp, #24]
   13384:	ldr	x0, [x0, #8]
   13388:	ldr	x0, [x0, #24]
   1338c:	lsl	x0, x0, #3
   13390:	add	x0, x1, x0
   13394:	ldr	x0, [x0]
   13398:	b	133a4 <XS_B__HV_RITER+0xc0>
   1339c:	ldr	x0, [sp, #24]
   133a0:	bl	5080 <Perl_sv_newmortal@plt>
   133a4:	str	x0, [sp, #64]
   133a8:	ldr	x0, [sp, #24]
   133ac:	ldr	x1, [x0, #24]
   133b0:	ldrsw	x0, [sp, #36]
   133b4:	lsl	x0, x0, #3
   133b8:	add	x0, x1, x0
   133bc:	ldr	x0, [x0]
   133c0:	ldr	w0, [x0, #12]
   133c4:	and	w0, w0, #0x800
   133c8:	cmp	w0, #0x0
   133cc:	b.eq	134fc <XS_B__HV_RITER+0x218>  // b.none
   133d0:	ldr	x0, [sp, #24]
   133d4:	ldr	x1, [x0, #24]
   133d8:	ldrsw	x0, [sp, #36]
   133dc:	lsl	x0, x0, #3
   133e0:	add	x0, x1, x0
   133e4:	ldr	x0, [x0]
   133e8:	ldr	x0, [x0, #16]
   133ec:	ldr	w1, [x0, #12]
   133f0:	mov	w0, #0x100                 	// #256
   133f4:	movk	w0, #0x20, lsl #16
   133f8:	and	w0, w1, w0
   133fc:	cmp	w0, #0x100
   13400:	b.ne	1342c <XS_B__HV_RITER+0x148>  // b.any
   13404:	ldr	x0, [sp, #24]
   13408:	ldr	x1, [x0, #24]
   1340c:	ldrsw	x0, [sp, #36]
   13410:	lsl	x0, x0, #3
   13414:	add	x0, x1, x0
   13418:	ldr	x0, [x0]
   1341c:	ldr	x0, [x0, #16]
   13420:	ldr	x0, [x0]
   13424:	ldr	x0, [x0, #32]
   13428:	b	13458 <XS_B__HV_RITER+0x174>
   1342c:	ldr	x0, [sp, #24]
   13430:	ldr	x1, [x0, #24]
   13434:	ldrsw	x0, [sp, #36]
   13438:	lsl	x0, x0, #3
   1343c:	add	x0, x1, x0
   13440:	ldr	x0, [x0]
   13444:	ldr	x0, [x0, #16]
   13448:	mov	w2, #0x2                   	// #2
   1344c:	mov	x1, x0
   13450:	ldr	x0, [sp, #24]
   13454:	bl	4b20 <Perl_sv_2iv_flags@plt>
   13458:	str	x0, [sp, #72]
   1345c:	ldr	x0, [sp, #72]
   13460:	str	x0, [sp, #80]
   13464:	ldr	x0, [sp, #80]
   13468:	str	x0, [sp, #88]
   1346c:	ldr	x0, [sp, #88]
   13470:	mov	x1, x0
   13474:	ldr	x0, [sp, #24]
   13478:	bl	4db0 <Perl_hv_riter_p@plt>
   1347c:	ldr	w0, [x0]
   13480:	str	w0, [sp, #44]
   13484:	ldr	x0, [sp, #24]
   13488:	ldr	x1, [x0, #24]
   1348c:	ldrsw	x0, [sp, #36]
   13490:	lsl	x0, x0, #3
   13494:	sub	x0, x0, #0x8
   13498:	add	x0, x1, x0
   1349c:	str	x0, [sp, #48]
   134a0:	ldrsw	x0, [sp, #44]
   134a4:	str	x0, [sp, #96]
   134a8:	ldr	x0, [sp, #64]
   134ac:	ldr	w1, [x0, #12]
   134b0:	mov	w0, #0x8ff                 	// #2303
   134b4:	movk	w0, #0x9981, lsl #16
   134b8:	and	w0, w1, w0
   134bc:	cmp	w0, #0x1
   134c0:	cset	w0, eq  // eq = none
   134c4:	and	w0, w0, #0xff
   134c8:	mov	w1, w0
   134cc:	ldr	x0, [sp, #24]
   134d0:	ldrb	w0, [x0, #185]
   134d4:	eor	w0, w0, #0x1
   134d8:	and	w0, w0, #0xff
   134dc:	and	w0, w1, w0
   134e0:	cmp	w0, #0x0
   134e4:	cset	w0, ne  // ne = any
   134e8:	and	w0, w0, #0xff
   134ec:	and	x0, x0, #0xff
   134f0:	cmp	x0, #0x0
   134f4:	b.eq	13530 <XS_B__HV_RITER+0x24c>  // b.none
   134f8:	b	13508 <XS_B__HV_RITER+0x224>
   134fc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13500:	add	x0, x0, #0x180
   13504:	bl	4e60 <Perl_croak_nocontext@plt>
   13508:	ldr	x0, [sp, #64]
   1350c:	ldr	w1, [x0, #12]
   13510:	mov	w0, #0x1100                	// #4352
   13514:	orr	w1, w1, w0
   13518:	ldr	x0, [sp, #64]
   1351c:	str	w1, [x0, #12]
   13520:	ldr	x0, [sp, #64]
   13524:	ldr	x1, [sp, #96]
   13528:	str	x1, [x0, #16]
   1352c:	b	13540 <XS_B__HV_RITER+0x25c>
   13530:	ldr	x2, [sp, #96]
   13534:	ldr	x1, [sp, #64]
   13538:	ldr	x0, [sp, #24]
   1353c:	bl	4c60 <Perl_sv_setiv_mg@plt>
   13540:	ldr	x0, [sp, #48]
   13544:	add	x0, x0, #0x8
   13548:	str	x0, [sp, #48]
   1354c:	ldr	x0, [sp, #48]
   13550:	ldr	x1, [sp, #64]
   13554:	str	x1, [x0]
   13558:	mov	x0, #0x1                   	// #1
   1355c:	str	x0, [sp, #104]
   13560:	ldr	x0, [sp, #24]
   13564:	ldr	x1, [x0, #24]
   13568:	ldrsw	x2, [sp, #36]
   1356c:	ldr	x0, [sp, #104]
   13570:	add	x0, x2, x0
   13574:	lsl	x0, x0, #3
   13578:	sub	x0, x0, #0x8
   1357c:	add	x1, x1, x0
   13580:	ldr	x0, [sp, #24]
   13584:	str	x1, [x0]
   13588:	nop
   1358c:	ldp	x29, x30, [sp], #112
   13590:	ret

0000000000013594 <XS_B__HV_ARRAY>:
   13594:	stp	x29, x30, [sp, #-112]!
   13598:	mov	x29, sp
   1359c:	str	x19, [sp, #16]
   135a0:	str	x0, [sp, #40]
   135a4:	str	x1, [sp, #32]
   135a8:	ldr	x0, [sp, #40]
   135ac:	ldr	x0, [x0]
   135b0:	str	x0, [sp, #64]
   135b4:	ldr	x0, [sp, #40]
   135b8:	bl	7424 <S_POPMARK>
   135bc:	str	w0, [sp, #56]
   135c0:	ldr	x0, [sp, #40]
   135c4:	ldr	x1, [x0, #24]
   135c8:	ldr	w0, [sp, #56]
   135cc:	add	w2, w0, #0x1
   135d0:	str	w2, [sp, #56]
   135d4:	sxtw	x0, w0
   135d8:	lsl	x0, x0, #3
   135dc:	add	x0, x1, x0
   135e0:	str	x0, [sp, #72]
   135e4:	ldr	x1, [sp, #64]
   135e8:	ldr	x0, [sp, #72]
   135ec:	sub	x0, x1, x0
   135f0:	asr	x0, x0, #3
   135f4:	str	w0, [sp, #60]
   135f8:	ldr	w0, [sp, #60]
   135fc:	cmp	w0, #0x1
   13600:	b.eq	13614 <XS_B__HV_ARRAY+0x80>  // b.none
   13604:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13608:	add	x1, x0, #0x178
   1360c:	ldr	x0, [sp, #32]
   13610:	bl	4d70 <Perl_croak_xs_usage@plt>
   13614:	ldrsw	x0, [sp, #60]
   13618:	lsl	x0, x0, #3
   1361c:	neg	x0, x0
   13620:	ldr	x1, [sp, #64]
   13624:	add	x0, x1, x0
   13628:	str	x0, [sp, #64]
   1362c:	ldr	x0, [sp, #40]
   13630:	ldr	x1, [x0, #24]
   13634:	ldrsw	x0, [sp, #56]
   13638:	lsl	x0, x0, #3
   1363c:	add	x0, x1, x0
   13640:	ldr	x0, [x0]
   13644:	ldr	w0, [x0, #12]
   13648:	and	w0, w0, #0x800
   1364c:	cmp	w0, #0x0
   13650:	b.eq	1370c <XS_B__HV_ARRAY+0x178>  // b.none
   13654:	ldr	x0, [sp, #40]
   13658:	ldr	x1, [x0, #24]
   1365c:	ldrsw	x0, [sp, #56]
   13660:	lsl	x0, x0, #3
   13664:	add	x0, x1, x0
   13668:	ldr	x0, [x0]
   1366c:	ldr	x0, [x0, #16]
   13670:	ldr	w1, [x0, #12]
   13674:	mov	w0, #0x100                 	// #256
   13678:	movk	w0, #0x20, lsl #16
   1367c:	and	w0, w1, w0
   13680:	cmp	w0, #0x100
   13684:	b.ne	136b0 <XS_B__HV_ARRAY+0x11c>  // b.any
   13688:	ldr	x0, [sp, #40]
   1368c:	ldr	x1, [x0, #24]
   13690:	ldrsw	x0, [sp, #56]
   13694:	lsl	x0, x0, #3
   13698:	add	x0, x1, x0
   1369c:	ldr	x0, [x0]
   136a0:	ldr	x0, [x0, #16]
   136a4:	ldr	x0, [x0]
   136a8:	ldr	x0, [x0, #32]
   136ac:	b	136dc <XS_B__HV_ARRAY+0x148>
   136b0:	ldr	x0, [sp, #40]
   136b4:	ldr	x1, [x0, #24]
   136b8:	ldrsw	x0, [sp, #56]
   136bc:	lsl	x0, x0, #3
   136c0:	add	x0, x1, x0
   136c4:	ldr	x0, [x0]
   136c8:	ldr	x0, [x0, #16]
   136cc:	mov	w2, #0x2                   	// #2
   136d0:	mov	x1, x0
   136d4:	ldr	x0, [sp, #40]
   136d8:	bl	4b20 <Perl_sv_2iv_flags@plt>
   136dc:	str	x0, [sp, #80]
   136e0:	ldr	x0, [sp, #80]
   136e4:	str	x0, [sp, #88]
   136e8:	ldr	x0, [sp, #88]
   136ec:	ldr	x0, [x0]
   136f0:	ldr	x19, [x0, #16]
   136f4:	ldr	x0, [sp, #88]
   136f8:	ldr	x0, [x0]
   136fc:	ldr	x0, [x0, #8]
   13700:	cmp	x0, #0x0
   13704:	b.eq	1372c <XS_B__HV_ARRAY+0x198>  // b.none
   13708:	b	13718 <XS_B__HV_ARRAY+0x184>
   1370c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13710:	add	x0, x0, #0x180
   13714:	bl	4e60 <Perl_croak_nocontext@plt>
   13718:	ldr	x1, [sp, #88]
   1371c:	ldr	x0, [sp, #40]
   13720:	bl	50a0 <Perl_hv_placeholders_get@plt>
   13724:	sxtw	x0, w0
   13728:	b	13730 <XS_B__HV_ARRAY+0x19c>
   1372c:	mov	x0, #0x0                   	// #0
   13730:	cmp	x0, x19
   13734:	b.eq	13998 <XS_B__HV_ARRAY+0x404>  // b.none
   13738:	ldr	x1, [sp, #88]
   1373c:	ldr	x0, [sp, #40]
   13740:	bl	4ea0 <Perl_hv_iterinit@plt>
   13744:	ldr	x0, [sp, #88]
   13748:	ldr	x0, [x0]
   1374c:	ldr	x19, [x0, #16]
   13750:	ldr	x0, [sp, #88]
   13754:	ldr	x0, [x0]
   13758:	ldr	x0, [x0, #8]
   1375c:	cmp	x0, #0x0
   13760:	b.eq	13778 <XS_B__HV_ARRAY+0x1e4>  // b.none
   13764:	ldr	x1, [sp, #88]
   13768:	ldr	x0, [sp, #40]
   1376c:	bl	50a0 <Perl_hv_placeholders_get@plt>
   13770:	sxtw	x0, w0
   13774:	b	1377c <XS_B__HV_ARRAY+0x1e8>
   13778:	mov	x0, #0x0                   	// #0
   1377c:	sub	x0, x19, x0
   13780:	lsl	x0, x0, #1
   13784:	str	x0, [sp, #96]
   13788:	ldr	x0, [sp, #96]
   1378c:	lsr	x0, x0, #63
   13790:	and	w0, w0, #0xff
   13794:	and	x0, x0, #0xff
   13798:	cmp	x0, #0x0
   1379c:	b.ne	137d4 <XS_B__HV_ARRAY+0x240>  // b.any
   137a0:	ldr	x0, [sp, #40]
   137a4:	ldr	x1, [x0, #32]
   137a8:	ldr	x0, [sp, #64]
   137ac:	sub	x0, x1, x0
   137b0:	asr	x0, x0, #3
   137b4:	mov	x1, x0
   137b8:	ldr	x0, [sp, #96]
   137bc:	cmp	x0, x1
   137c0:	cset	w0, gt
   137c4:	and	w0, w0, #0xff
   137c8:	and	x0, x0, #0xff
   137cc:	cmp	x0, #0x0
   137d0:	b.eq	13978 <XS_B__HV_ARRAY+0x3e4>  // b.none
   137d4:	ldr	x3, [sp, #96]
   137d8:	ldr	x2, [sp, #64]
   137dc:	ldr	x1, [sp, #64]
   137e0:	ldr	x0, [sp, #40]
   137e4:	bl	4b70 <Perl_stack_grow@plt>
   137e8:	str	x0, [sp, #64]
   137ec:	b	13978 <XS_B__HV_ARRAY+0x3e4>
   137f0:	ldr	x0, [sp, #104]
   137f4:	ldr	x0, [x0, #8]
   137f8:	add	x0, x0, #0x8
   137fc:	cmp	x0, #0x0
   13800:	b.eq	13898 <XS_B__HV_ARRAY+0x304>  // b.none
   13804:	ldr	x0, [sp, #104]
   13808:	ldr	x0, [x0, #8]
   1380c:	ldr	w0, [x0, #4]
   13810:	cmn	w0, #0x2
   13814:	b.ne	13898 <XS_B__HV_ARRAY+0x304>  // b.any
   13818:	ldr	x0, [sp, #104]
   1381c:	ldr	x0, [x0, #8]
   13820:	add	x0, x0, #0x8
   13824:	ldr	x0, [x0]
   13828:	cmp	x0, #0x0
   1382c:	b.eq	13898 <XS_B__HV_ARRAY+0x304>  // b.none
   13830:	ldr	x0, [sp, #104]
   13834:	ldr	x0, [x0, #8]
   13838:	add	x0, x0, #0x8
   1383c:	cmp	x0, #0x0
   13840:	b.eq	1386c <XS_B__HV_ARRAY+0x2d8>  // b.none
   13844:	ldr	x0, [sp, #104]
   13848:	ldr	x0, [x0, #8]
   1384c:	ldr	w0, [x0, #4]
   13850:	cmn	w0, #0x2
   13854:	b.ne	1386c <XS_B__HV_ARRAY+0x2d8>  // b.any
   13858:	ldr	x0, [sp, #104]
   1385c:	ldr	x0, [x0, #8]
   13860:	add	x0, x0, #0x8
   13864:	ldr	x0, [x0]
   13868:	b	13870 <XS_B__HV_ARRAY+0x2dc>
   1386c:	mov	x0, #0x0                   	// #0
   13870:	ldr	x1, [sp, #64]
   13874:	add	x1, x1, #0x8
   13878:	str	x1, [sp, #64]
   1387c:	mov	x1, x0
   13880:	ldr	x0, [sp, #40]
   13884:	bl	4ec0 <Perl_sv_2mortal@plt>
   13888:	mov	x1, x0
   1388c:	ldr	x0, [sp, #64]
   13890:	str	x1, [x0]
   13894:	b	13950 <XS_B__HV_ARRAY+0x3bc>
   13898:	ldr	x0, [sp, #104]
   1389c:	ldr	x0, [x0, #8]
   138a0:	add	x1, x0, #0x8
   138a4:	ldr	x0, [sp, #104]
   138a8:	ldr	x0, [x0, #8]
   138ac:	ldr	w0, [x0, #4]
   138b0:	sxtw	x0, w0
   138b4:	add	x0, x0, #0x1
   138b8:	add	x0, x1, x0
   138bc:	ldrb	w0, [x0]
   138c0:	and	w0, w0, #0x1
   138c4:	cmp	w0, #0x0
   138c8:	b.eq	13910 <XS_B__HV_ARRAY+0x37c>  // b.none
   138cc:	ldr	x0, [sp, #104]
   138d0:	ldr	x0, [x0, #8]
   138d4:	add	x1, x0, #0x8
   138d8:	ldr	x0, [sp, #104]
   138dc:	ldr	x0, [x0, #8]
   138e0:	ldr	w0, [x0, #4]
   138e4:	sxtw	x2, w0
   138e8:	ldr	x0, [sp, #64]
   138ec:	add	x0, x0, #0x8
   138f0:	str	x0, [sp, #64]
   138f4:	mov	w3, #0x20080000            	// #537395200
   138f8:	ldr	x0, [sp, #40]
   138fc:	bl	4d80 <Perl_newSVpvn_flags@plt>
   13900:	mov	x1, x0
   13904:	ldr	x0, [sp, #64]
   13908:	str	x1, [x0]
   1390c:	b	13950 <XS_B__HV_ARRAY+0x3bc>
   13910:	ldr	x0, [sp, #104]
   13914:	ldr	x0, [x0, #8]
   13918:	add	x1, x0, #0x8
   1391c:	ldr	x0, [sp, #104]
   13920:	ldr	x0, [x0, #8]
   13924:	ldr	w0, [x0, #4]
   13928:	sxtw	x2, w0
   1392c:	ldr	x0, [sp, #64]
   13930:	add	x0, x0, #0x8
   13934:	str	x0, [sp, #64]
   13938:	mov	w3, #0x80000               	// #524288
   1393c:	ldr	x0, [sp, #40]
   13940:	bl	4d80 <Perl_newSVpvn_flags@plt>
   13944:	mov	x1, x0
   13948:	ldr	x0, [sp, #64]
   1394c:	str	x1, [x0]
   13950:	ldr	x0, [sp, #104]
   13954:	ldr	x1, [x0, #16]
   13958:	ldr	x0, [sp, #64]
   1395c:	add	x0, x0, #0x8
   13960:	str	x0, [sp, #64]
   13964:	ldr	x0, [sp, #40]
   13968:	bl	77c4 <make_sv_object>
   1396c:	mov	x1, x0
   13970:	ldr	x0, [sp, #64]
   13974:	str	x1, [x0]
   13978:	mov	w2, #0x0                   	// #0
   1397c:	ldr	x1, [sp, #88]
   13980:	ldr	x0, [sp, #40]
   13984:	bl	4d00 <Perl_hv_iternext_flags@plt>
   13988:	str	x0, [sp, #104]
   1398c:	ldr	x0, [sp, #104]
   13990:	cmp	x0, #0x0
   13994:	b.ne	137f0 <XS_B__HV_ARRAY+0x25c>  // b.any
   13998:	ldr	x0, [sp, #40]
   1399c:	ldr	x1, [sp, #64]
   139a0:	str	x1, [x0]
   139a4:	nop
   139a8:	ldr	x19, [sp, #16]
   139ac:	ldp	x29, x30, [sp], #112
   139b0:	ret

00000000000139b4 <XS_B__HE_VAL>:
   139b4:	stp	x29, x30, [sp, #-96]!
   139b8:	mov	x29, sp
   139bc:	str	x0, [sp, #24]
   139c0:	str	x1, [sp, #16]
   139c4:	ldr	x0, [sp, #24]
   139c8:	ldr	x0, [x0]
   139cc:	str	x0, [sp, #56]
   139d0:	ldr	x0, [sp, #24]
   139d4:	bl	7424 <S_POPMARK>
   139d8:	str	w0, [sp, #44]
   139dc:	ldr	x0, [sp, #24]
   139e0:	ldr	x1, [x0, #24]
   139e4:	ldr	w0, [sp, #44]
   139e8:	add	w2, w0, #0x1
   139ec:	str	w2, [sp, #44]
   139f0:	sxtw	x0, w0
   139f4:	lsl	x0, x0, #3
   139f8:	add	x0, x1, x0
   139fc:	str	x0, [sp, #64]
   13a00:	ldr	x1, [sp, #56]
   13a04:	ldr	x0, [sp, #64]
   13a08:	sub	x0, x1, x0
   13a0c:	asr	x0, x0, #3
   13a10:	str	w0, [sp, #48]
   13a14:	ldr	x0, [sp, #16]
   13a18:	ldr	x0, [x0]
   13a1c:	str	x0, [sp, #72]
   13a20:	ldr	x0, [sp, #72]
   13a24:	ldr	w0, [x0, #40]
   13a28:	str	w0, [sp, #52]
   13a2c:	ldr	w0, [sp, #48]
   13a30:	cmp	w0, #0x1
   13a34:	b.eq	13a48 <XS_B__HE_VAL+0x94>  // b.none
   13a38:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13a3c:	add	x1, x0, #0x198
   13a40:	ldr	x0, [sp, #16]
   13a44:	bl	4d70 <Perl_croak_xs_usage@plt>
   13a48:	ldrsw	x0, [sp, #48]
   13a4c:	lsl	x0, x0, #3
   13a50:	neg	x0, x0
   13a54:	ldr	x1, [sp, #56]
   13a58:	add	x0, x1, x0
   13a5c:	str	x0, [sp, #56]
   13a60:	ldr	x0, [sp, #24]
   13a64:	ldr	x1, [x0, #24]
   13a68:	ldrsw	x0, [sp, #44]
   13a6c:	lsl	x0, x0, #3
   13a70:	add	x0, x1, x0
   13a74:	ldr	x0, [x0]
   13a78:	ldr	w0, [x0, #12]
   13a7c:	and	w0, w0, #0x800
   13a80:	cmp	w0, #0x0
   13a84:	b.eq	13b2c <XS_B__HE_VAL+0x178>  // b.none
   13a88:	ldr	x0, [sp, #24]
   13a8c:	ldr	x1, [x0, #24]
   13a90:	ldrsw	x0, [sp, #44]
   13a94:	lsl	x0, x0, #3
   13a98:	add	x0, x1, x0
   13a9c:	ldr	x0, [x0]
   13aa0:	ldr	x0, [x0, #16]
   13aa4:	ldr	w1, [x0, #12]
   13aa8:	mov	w0, #0x100                 	// #256
   13aac:	movk	w0, #0x20, lsl #16
   13ab0:	and	w0, w1, w0
   13ab4:	cmp	w0, #0x100
   13ab8:	b.ne	13ae4 <XS_B__HE_VAL+0x130>  // b.any
   13abc:	ldr	x0, [sp, #24]
   13ac0:	ldr	x1, [x0, #24]
   13ac4:	ldrsw	x0, [sp, #44]
   13ac8:	lsl	x0, x0, #3
   13acc:	add	x0, x1, x0
   13ad0:	ldr	x0, [x0]
   13ad4:	ldr	x0, [x0, #16]
   13ad8:	ldr	x0, [x0]
   13adc:	ldr	x0, [x0, #32]
   13ae0:	b	13b10 <XS_B__HE_VAL+0x15c>
   13ae4:	ldr	x0, [sp, #24]
   13ae8:	ldr	x1, [x0, #24]
   13aec:	ldrsw	x0, [sp, #44]
   13af0:	lsl	x0, x0, #3
   13af4:	add	x0, x1, x0
   13af8:	ldr	x0, [x0]
   13afc:	ldr	x0, [x0, #16]
   13b00:	mov	w2, #0x2                   	// #2
   13b04:	mov	x1, x0
   13b08:	ldr	x0, [sp, #24]
   13b0c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   13b10:	str	x0, [sp, #80]
   13b14:	ldr	x0, [sp, #80]
   13b18:	str	x0, [sp, #88]
   13b1c:	ldr	w0, [sp, #52]
   13b20:	cmp	w0, #0x0
   13b24:	b.eq	13be4 <XS_B__HE_VAL+0x230>  // b.none
   13b28:	b	13b38 <XS_B__HE_VAL+0x184>
   13b2c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13b30:	add	x0, x0, #0x1a0
   13b34:	bl	4e60 <Perl_croak_nocontext@plt>
   13b38:	ldr	x0, [sp, #88]
   13b3c:	ldr	x0, [x0, #8]
   13b40:	add	x0, x0, #0x8
   13b44:	cmp	x0, #0x0
   13b48:	b.eq	13bd8 <XS_B__HE_VAL+0x224>  // b.none
   13b4c:	ldr	x0, [sp, #88]
   13b50:	ldr	x0, [x0, #8]
   13b54:	ldr	w0, [x0, #4]
   13b58:	cmn	w0, #0x2
   13b5c:	b.ne	13b74 <XS_B__HE_VAL+0x1c0>  // b.any
   13b60:	ldr	x0, [sp, #88]
   13b64:	ldr	x0, [x0, #8]
   13b68:	add	x0, x0, #0x8
   13b6c:	ldr	x0, [x0]
   13b70:	b	13bec <XS_B__HE_VAL+0x238>
   13b74:	ldr	x0, [sp, #88]
   13b78:	ldr	x0, [x0, #8]
   13b7c:	add	x4, x0, #0x8
   13b80:	ldr	x0, [sp, #88]
   13b84:	ldr	x0, [x0, #8]
   13b88:	ldr	w0, [x0, #4]
   13b8c:	sxtw	x2, w0
   13b90:	ldr	x0, [sp, #88]
   13b94:	ldr	x0, [x0, #8]
   13b98:	add	x1, x0, #0x8
   13b9c:	ldr	x0, [sp, #88]
   13ba0:	ldr	x0, [x0, #8]
   13ba4:	ldr	w0, [x0, #4]
   13ba8:	sxtw	x0, w0
   13bac:	add	x0, x0, #0x1
   13bb0:	add	x0, x1, x0
   13bb4:	ldrb	w0, [x0]
   13bb8:	lsl	w0, w0, #29
   13bbc:	and	w0, w0, #0x20000000
   13bc0:	orr	w0, w0, #0x80000
   13bc4:	mov	w3, w0
   13bc8:	mov	x1, x4
   13bcc:	ldr	x0, [sp, #24]
   13bd0:	bl	4d80 <Perl_newSVpvn_flags@plt>
   13bd4:	b	13bec <XS_B__HE_VAL+0x238>
   13bd8:	ldr	x0, [sp, #24]
   13bdc:	add	x0, x0, #0x150
   13be0:	b	13bec <XS_B__HE_VAL+0x238>
   13be4:	ldr	x0, [sp, #88]
   13be8:	ldr	x0, [x0, #16]
   13bec:	ldr	x1, [sp, #56]
   13bf0:	add	x1, x1, #0x8
   13bf4:	str	x1, [sp, #56]
   13bf8:	mov	x1, x0
   13bfc:	ldr	x0, [sp, #24]
   13c00:	bl	77c4 <make_sv_object>
   13c04:	mov	x1, x0
   13c08:	ldr	x0, [sp, #56]
   13c0c:	str	x1, [x0]
   13c10:	ldr	x0, [sp, #24]
   13c14:	ldr	x1, [sp, #56]
   13c18:	str	x1, [x0]
   13c1c:	nop
   13c20:	ldp	x29, x30, [sp], #96
   13c24:	ret

0000000000013c28 <XS_B__HE_HASH>:
   13c28:	stp	x29, x30, [sp, #-112]!
   13c2c:	mov	x29, sp
   13c30:	str	x0, [sp, #24]
   13c34:	str	x1, [sp, #16]
   13c38:	ldr	x0, [sp, #24]
   13c3c:	ldr	x0, [x0]
   13c40:	str	x0, [sp, #56]
   13c44:	ldr	x0, [sp, #24]
   13c48:	bl	7424 <S_POPMARK>
   13c4c:	str	w0, [sp, #44]
   13c50:	ldr	x0, [sp, #24]
   13c54:	ldr	x1, [x0, #24]
   13c58:	ldr	w0, [sp, #44]
   13c5c:	add	w2, w0, #0x1
   13c60:	str	w2, [sp, #44]
   13c64:	sxtw	x0, w0
   13c68:	lsl	x0, x0, #3
   13c6c:	add	x0, x1, x0
   13c70:	str	x0, [sp, #64]
   13c74:	ldr	x1, [sp, #56]
   13c78:	ldr	x0, [sp, #64]
   13c7c:	sub	x0, x1, x0
   13c80:	asr	x0, x0, #3
   13c84:	str	w0, [sp, #48]
   13c88:	ldr	w0, [sp, #48]
   13c8c:	cmp	w0, #0x1
   13c90:	b.eq	13ca4 <XS_B__HE_HASH+0x7c>  // b.none
   13c94:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13c98:	add	x1, x0, #0x198
   13c9c:	ldr	x0, [sp, #16]
   13ca0:	bl	4d70 <Perl_croak_xs_usage@plt>
   13ca4:	ldr	x0, [sp, #24]
   13ca8:	ldr	x0, [x0, #8]
   13cac:	ldrb	w0, [x0, #35]
   13cb0:	and	w0, w0, #0x4
   13cb4:	cmp	w0, #0x0
   13cb8:	b.eq	13ce0 <XS_B__HE_HASH+0xb8>  // b.none
   13cbc:	ldr	x0, [sp, #24]
   13cc0:	ldr	x1, [x0, #16]
   13cc4:	ldr	x0, [sp, #24]
   13cc8:	ldr	x0, [x0, #8]
   13ccc:	ldr	x0, [x0, #24]
   13cd0:	lsl	x0, x0, #3
   13cd4:	add	x0, x1, x0
   13cd8:	ldr	x0, [x0]
   13cdc:	b	13ce8 <XS_B__HE_HASH+0xc0>
   13ce0:	ldr	x0, [sp, #24]
   13ce4:	bl	5080 <Perl_sv_newmortal@plt>
   13ce8:	str	x0, [sp, #72]
   13cec:	ldr	x0, [sp, #24]
   13cf0:	ldr	x1, [x0, #24]
   13cf4:	ldrsw	x0, [sp, #44]
   13cf8:	lsl	x0, x0, #3
   13cfc:	add	x0, x1, x0
   13d00:	ldr	x0, [x0]
   13d04:	ldr	w0, [x0, #12]
   13d08:	and	w0, w0, #0x800
   13d0c:	cmp	w0, #0x0
   13d10:	b.eq	13e44 <XS_B__HE_HASH+0x21c>  // b.none
   13d14:	ldr	x0, [sp, #24]
   13d18:	ldr	x1, [x0, #24]
   13d1c:	ldrsw	x0, [sp, #44]
   13d20:	lsl	x0, x0, #3
   13d24:	add	x0, x1, x0
   13d28:	ldr	x0, [x0]
   13d2c:	ldr	x0, [x0, #16]
   13d30:	ldr	w1, [x0, #12]
   13d34:	mov	w0, #0x100                 	// #256
   13d38:	movk	w0, #0x20, lsl #16
   13d3c:	and	w0, w1, w0
   13d40:	cmp	w0, #0x100
   13d44:	b.ne	13d70 <XS_B__HE_HASH+0x148>  // b.any
   13d48:	ldr	x0, [sp, #24]
   13d4c:	ldr	x1, [x0, #24]
   13d50:	ldrsw	x0, [sp, #44]
   13d54:	lsl	x0, x0, #3
   13d58:	add	x0, x1, x0
   13d5c:	ldr	x0, [x0]
   13d60:	ldr	x0, [x0, #16]
   13d64:	ldr	x0, [x0]
   13d68:	ldr	x0, [x0, #32]
   13d6c:	b	13d9c <XS_B__HE_HASH+0x174>
   13d70:	ldr	x0, [sp, #24]
   13d74:	ldr	x1, [x0, #24]
   13d78:	ldrsw	x0, [sp, #44]
   13d7c:	lsl	x0, x0, #3
   13d80:	add	x0, x1, x0
   13d84:	ldr	x0, [x0]
   13d88:	ldr	x0, [x0, #16]
   13d8c:	mov	w2, #0x2                   	// #2
   13d90:	mov	x1, x0
   13d94:	ldr	x0, [sp, #24]
   13d98:	bl	4b20 <Perl_sv_2iv_flags@plt>
   13d9c:	str	x0, [sp, #80]
   13da0:	ldr	x0, [sp, #80]
   13da4:	str	x0, [sp, #88]
   13da8:	ldr	x0, [sp, #88]
   13dac:	ldr	x0, [x0, #8]
   13db0:	ldr	w0, [x0]
   13db4:	str	w0, [sp, #52]
   13db8:	ldr	x0, [sp, #24]
   13dbc:	ldr	x1, [x0, #24]
   13dc0:	ldrsw	x0, [sp, #44]
   13dc4:	lsl	x0, x0, #3
   13dc8:	sub	x0, x0, #0x8
   13dcc:	add	x0, x1, x0
   13dd0:	str	x0, [sp, #56]
   13dd4:	ldr	w0, [sp, #52]
   13dd8:	str	x0, [sp, #96]
   13ddc:	ldr	x0, [sp, #72]
   13de0:	ldr	w1, [x0, #12]
   13de4:	mov	w0, #0x8ff                 	// #2303
   13de8:	movk	w0, #0x9981, lsl #16
   13dec:	and	w0, w1, w0
   13df0:	cmp	w0, #0x1
   13df4:	cset	w0, eq  // eq = none
   13df8:	and	w0, w0, #0xff
   13dfc:	mov	w1, w0
   13e00:	ldr	x0, [sp, #24]
   13e04:	ldrb	w0, [x0, #185]
   13e08:	eor	w0, w0, #0x1
   13e0c:	and	w0, w0, #0xff
   13e10:	and	w0, w1, w0
   13e14:	ldr	x1, [sp, #96]
   13e18:	mvn	x1, x1
   13e1c:	lsr	x1, x1, #63
   13e20:	and	w1, w1, #0xff
   13e24:	and	w0, w0, w1
   13e28:	cmp	w0, #0x0
   13e2c:	cset	w0, ne  // ne = any
   13e30:	and	w0, w0, #0xff
   13e34:	and	x0, x0, #0xff
   13e38:	cmp	x0, #0x0
   13e3c:	b.eq	13e78 <XS_B__HE_HASH+0x250>  // b.none
   13e40:	b	13e50 <XS_B__HE_HASH+0x228>
   13e44:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13e48:	add	x0, x0, #0x1a0
   13e4c:	bl	4e60 <Perl_croak_nocontext@plt>
   13e50:	ldr	x0, [sp, #72]
   13e54:	ldr	w1, [x0, #12]
   13e58:	mov	w0, #0x1100                	// #4352
   13e5c:	orr	w1, w1, w0
   13e60:	ldr	x0, [sp, #72]
   13e64:	str	w1, [x0, #12]
   13e68:	ldr	x1, [sp, #96]
   13e6c:	ldr	x0, [sp, #72]
   13e70:	str	x1, [x0, #16]
   13e74:	b	13e88 <XS_B__HE_HASH+0x260>
   13e78:	ldr	x2, [sp, #96]
   13e7c:	ldr	x1, [sp, #72]
   13e80:	ldr	x0, [sp, #24]
   13e84:	bl	4fe0 <Perl_sv_setuv_mg@plt>
   13e88:	ldr	x0, [sp, #56]
   13e8c:	add	x0, x0, #0x8
   13e90:	str	x0, [sp, #56]
   13e94:	ldr	x0, [sp, #56]
   13e98:	ldr	x1, [sp, #72]
   13e9c:	str	x1, [x0]
   13ea0:	mov	x0, #0x1                   	// #1
   13ea4:	str	x0, [sp, #104]
   13ea8:	ldr	x0, [sp, #24]
   13eac:	ldr	x1, [x0, #24]
   13eb0:	ldrsw	x2, [sp, #44]
   13eb4:	ldr	x0, [sp, #104]
   13eb8:	add	x0, x2, x0
   13ebc:	lsl	x0, x0, #3
   13ec0:	sub	x0, x0, #0x8
   13ec4:	add	x1, x1, x0
   13ec8:	ldr	x0, [sp, #24]
   13ecc:	str	x1, [x0]
   13ed0:	nop
   13ed4:	ldp	x29, x30, [sp], #112
   13ed8:	ret

0000000000013edc <XS_B__RHE_HASH>:
   13edc:	stp	x29, x30, [sp, #-96]!
   13ee0:	mov	x29, sp
   13ee4:	str	x0, [sp, #24]
   13ee8:	str	x1, [sp, #16]
   13eec:	ldr	x0, [sp, #24]
   13ef0:	ldr	x0, [x0]
   13ef4:	str	x0, [sp, #48]
   13ef8:	ldr	x0, [sp, #24]
   13efc:	bl	7424 <S_POPMARK>
   13f00:	str	w0, [sp, #40]
   13f04:	ldr	x0, [sp, #24]
   13f08:	ldr	x1, [x0, #24]
   13f0c:	ldr	w0, [sp, #40]
   13f10:	add	w2, w0, #0x1
   13f14:	str	w2, [sp, #40]
   13f18:	sxtw	x0, w0
   13f1c:	lsl	x0, x0, #3
   13f20:	add	x0, x1, x0
   13f24:	str	x0, [sp, #56]
   13f28:	ldr	x1, [sp, #48]
   13f2c:	ldr	x0, [sp, #56]
   13f30:	sub	x0, x1, x0
   13f34:	asr	x0, x0, #3
   13f38:	str	w0, [sp, #44]
   13f3c:	ldr	w0, [sp, #44]
   13f40:	cmp	w0, #0x1
   13f44:	b.eq	13f58 <XS_B__RHE_HASH+0x7c>  // b.none
   13f48:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   13f4c:	add	x1, x0, #0x1b8
   13f50:	ldr	x0, [sp, #16]
   13f54:	bl	4d70 <Perl_croak_xs_usage@plt>
   13f58:	ldr	x0, [sp, #24]
   13f5c:	ldr	x1, [x0, #24]
   13f60:	ldrsw	x0, [sp, #40]
   13f64:	lsl	x0, x0, #3
   13f68:	add	x0, x1, x0
   13f6c:	ldr	x0, [x0]
   13f70:	ldr	w0, [x0, #12]
   13f74:	and	w0, w0, #0x800
   13f78:	cmp	w0, #0x0
   13f7c:	b.eq	14018 <XS_B__RHE_HASH+0x13c>  // b.none
   13f80:	ldr	x0, [sp, #24]
   13f84:	ldr	x1, [x0, #24]
   13f88:	ldrsw	x0, [sp, #40]
   13f8c:	lsl	x0, x0, #3
   13f90:	add	x0, x1, x0
   13f94:	ldr	x0, [x0]
   13f98:	ldr	x0, [x0, #16]
   13f9c:	ldr	w1, [x0, #12]
   13fa0:	mov	w0, #0x100                 	// #256
   13fa4:	movk	w0, #0x20, lsl #16
   13fa8:	and	w0, w1, w0
   13fac:	cmp	w0, #0x100
   13fb0:	b.ne	13fdc <XS_B__RHE_HASH+0x100>  // b.any
   13fb4:	ldr	x0, [sp, #24]
   13fb8:	ldr	x1, [x0, #24]
   13fbc:	ldrsw	x0, [sp, #40]
   13fc0:	lsl	x0, x0, #3
   13fc4:	add	x0, x1, x0
   13fc8:	ldr	x0, [x0]
   13fcc:	ldr	x0, [x0, #16]
   13fd0:	ldr	x0, [x0]
   13fd4:	ldr	x0, [x0, #32]
   13fd8:	b	14008 <XS_B__RHE_HASH+0x12c>
   13fdc:	ldr	x0, [sp, #24]
   13fe0:	ldr	x1, [x0, #24]
   13fe4:	ldrsw	x0, [sp, #40]
   13fe8:	lsl	x0, x0, #3
   13fec:	add	x0, x1, x0
   13ff0:	ldr	x0, [x0]
   13ff4:	ldr	x0, [x0, #16]
   13ff8:	mov	w2, #0x2                   	// #2
   13ffc:	mov	x1, x0
   14000:	ldr	x0, [sp, #24]
   14004:	bl	4b20 <Perl_sv_2iv_flags@plt>
   14008:	str	x0, [sp, #64]
   1400c:	ldr	x0, [sp, #64]
   14010:	str	x0, [sp, #72]
   14014:	b	14024 <XS_B__RHE_HASH+0x148>
   14018:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1401c:	add	x0, x0, #0x1c0
   14020:	bl	4e60 <Perl_croak_nocontext@plt>
   14024:	mov	w2, #0x0                   	// #0
   14028:	ldr	x1, [sp, #72]
   1402c:	ldr	x0, [sp, #24]
   14030:	bl	4ba0 <Perl_refcounted_he_chain_2hv@plt>
   14034:	mov	x1, x0
   14038:	ldr	x0, [sp, #24]
   1403c:	bl	4b60 <Perl_newRV_noinc@plt>
   14040:	str	x0, [sp, #80]
   14044:	ldr	x1, [sp, #80]
   14048:	ldr	x0, [sp, #24]
   1404c:	bl	4ec0 <Perl_sv_2mortal@plt>
   14050:	str	x0, [sp, #80]
   14054:	ldr	x0, [sp, #24]
   14058:	ldr	x1, [x0, #24]
   1405c:	ldrsw	x0, [sp, #40]
   14060:	lsl	x0, x0, #3
   14064:	add	x0, x1, x0
   14068:	ldr	x1, [sp, #80]
   1406c:	str	x1, [x0]
   14070:	mov	x0, #0x1                   	// #1
   14074:	str	x0, [sp, #88]
   14078:	ldr	x0, [sp, #24]
   1407c:	ldr	x1, [x0, #24]
   14080:	ldrsw	x2, [sp, #40]
   14084:	ldr	x0, [sp, #88]
   14088:	add	x0, x2, x0
   1408c:	lsl	x0, x0, #3
   14090:	sub	x0, x0, #0x8
   14094:	add	x1, x1, x0
   14098:	ldr	x0, [sp, #24]
   1409c:	str	x1, [x0]
   140a0:	nop
   140a4:	ldp	x29, x30, [sp], #96
   140a8:	ret

00000000000140ac <XS_B__PADLIST_MAX>:
   140ac:	stp	x29, x30, [sp, #-128]!
   140b0:	mov	x29, sp
   140b4:	str	x0, [sp, #24]
   140b8:	str	x1, [sp, #16]
   140bc:	ldr	x0, [sp, #24]
   140c0:	ldr	x0, [x0]
   140c4:	str	x0, [sp, #56]
   140c8:	ldr	x0, [sp, #24]
   140cc:	bl	7424 <S_POPMARK>
   140d0:	str	w0, [sp, #44]
   140d4:	ldr	x0, [sp, #24]
   140d8:	ldr	x1, [x0, #24]
   140dc:	ldr	w0, [sp, #44]
   140e0:	add	w2, w0, #0x1
   140e4:	str	w2, [sp, #44]
   140e8:	sxtw	x0, w0
   140ec:	lsl	x0, x0, #3
   140f0:	add	x0, x1, x0
   140f4:	str	x0, [sp, #64]
   140f8:	ldr	x1, [sp, #56]
   140fc:	ldr	x0, [sp, #64]
   14100:	sub	x0, x1, x0
   14104:	asr	x0, x0, #3
   14108:	str	w0, [sp, #48]
   1410c:	ldr	x0, [sp, #16]
   14110:	ldr	x0, [x0]
   14114:	str	x0, [sp, #72]
   14118:	ldr	x0, [sp, #72]
   1411c:	ldr	w0, [x0, #40]
   14120:	str	w0, [sp, #52]
   14124:	ldr	w0, [sp, #48]
   14128:	cmp	w0, #0x1
   1412c:	b.eq	14140 <XS_B__PADLIST_MAX+0x94>  // b.none
   14130:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   14134:	add	x1, x0, #0x1d8
   14138:	ldr	x0, [sp, #16]
   1413c:	bl	4d70 <Perl_croak_xs_usage@plt>
   14140:	ldr	x0, [sp, #24]
   14144:	ldr	x0, [x0, #8]
   14148:	ldrb	w0, [x0, #35]
   1414c:	and	w0, w0, #0x4
   14150:	cmp	w0, #0x0
   14154:	b.eq	1417c <XS_B__PADLIST_MAX+0xd0>  // b.none
   14158:	ldr	x0, [sp, #24]
   1415c:	ldr	x1, [x0, #16]
   14160:	ldr	x0, [sp, #24]
   14164:	ldr	x0, [x0, #8]
   14168:	ldr	x0, [x0, #24]
   1416c:	lsl	x0, x0, #3
   14170:	add	x0, x1, x0
   14174:	ldr	x0, [x0]
   14178:	b	14184 <XS_B__PADLIST_MAX+0xd8>
   1417c:	ldr	x0, [sp, #24]
   14180:	bl	5080 <Perl_sv_newmortal@plt>
   14184:	str	x0, [sp, #80]
   14188:	ldr	x0, [sp, #24]
   1418c:	ldr	x1, [x0, #24]
   14190:	ldrsw	x0, [sp, #44]
   14194:	lsl	x0, x0, #3
   14198:	add	x0, x1, x0
   1419c:	ldr	x0, [x0]
   141a0:	ldr	w0, [x0, #12]
   141a4:	and	w0, w0, #0x800
   141a8:	cmp	w0, #0x0
   141ac:	b.eq	142c8 <XS_B__PADLIST_MAX+0x21c>  // b.none
   141b0:	ldr	x0, [sp, #24]
   141b4:	ldr	x1, [x0, #24]
   141b8:	ldrsw	x0, [sp, #44]
   141bc:	lsl	x0, x0, #3
   141c0:	add	x0, x1, x0
   141c4:	ldr	x0, [x0]
   141c8:	ldr	x0, [x0, #16]
   141cc:	ldr	w1, [x0, #12]
   141d0:	mov	w0, #0x100                 	// #256
   141d4:	movk	w0, #0x20, lsl #16
   141d8:	and	w0, w1, w0
   141dc:	cmp	w0, #0x100
   141e0:	b.ne	1420c <XS_B__PADLIST_MAX+0x160>  // b.any
   141e4:	ldr	x0, [sp, #24]
   141e8:	ldr	x1, [x0, #24]
   141ec:	ldrsw	x0, [sp, #44]
   141f0:	lsl	x0, x0, #3
   141f4:	add	x0, x1, x0
   141f8:	ldr	x0, [x0]
   141fc:	ldr	x0, [x0, #16]
   14200:	ldr	x0, [x0]
   14204:	ldr	x0, [x0, #32]
   14208:	b	14238 <XS_B__PADLIST_MAX+0x18c>
   1420c:	ldr	x0, [sp, #24]
   14210:	ldr	x1, [x0, #24]
   14214:	ldrsw	x0, [sp, #44]
   14218:	lsl	x0, x0, #3
   1421c:	add	x0, x1, x0
   14220:	ldr	x0, [x0]
   14224:	ldr	x0, [x0, #16]
   14228:	mov	w2, #0x2                   	// #2
   1422c:	mov	x1, x0
   14230:	ldr	x0, [sp, #24]
   14234:	bl	4b20 <Perl_sv_2iv_flags@plt>
   14238:	str	x0, [sp, #88]
   1423c:	ldr	x0, [sp, #88]
   14240:	str	x0, [sp, #96]
   14244:	ldr	x0, [sp, #96]
   14248:	ldr	x0, [x0]
   1424c:	str	x0, [sp, #104]
   14250:	ldr	x0, [sp, #24]
   14254:	ldr	x1, [x0, #24]
   14258:	ldrsw	x0, [sp, #44]
   1425c:	lsl	x0, x0, #3
   14260:	sub	x0, x0, #0x8
   14264:	add	x0, x1, x0
   14268:	str	x0, [sp, #56]
   1426c:	ldr	x0, [sp, #104]
   14270:	str	x0, [sp, #112]
   14274:	ldr	x0, [sp, #80]
   14278:	ldr	w1, [x0, #12]
   1427c:	mov	w0, #0x8ff                 	// #2303
   14280:	movk	w0, #0x9981, lsl #16
   14284:	and	w0, w1, w0
   14288:	cmp	w0, #0x1
   1428c:	cset	w0, eq  // eq = none
   14290:	and	w0, w0, #0xff
   14294:	mov	w1, w0
   14298:	ldr	x0, [sp, #24]
   1429c:	ldrb	w0, [x0, #185]
   142a0:	eor	w0, w0, #0x1
   142a4:	and	w0, w0, #0xff
   142a8:	and	w0, w1, w0
   142ac:	cmp	w0, #0x0
   142b0:	cset	w0, ne  // ne = any
   142b4:	and	w0, w0, #0xff
   142b8:	and	x0, x0, #0xff
   142bc:	cmp	x0, #0x0
   142c0:	b.eq	142fc <XS_B__PADLIST_MAX+0x250>  // b.none
   142c4:	b	142d4 <XS_B__PADLIST_MAX+0x228>
   142c8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   142cc:	add	x0, x0, #0x1e0
   142d0:	bl	4e60 <Perl_croak_nocontext@plt>
   142d4:	ldr	x0, [sp, #80]
   142d8:	ldr	w1, [x0, #12]
   142dc:	mov	w0, #0x1100                	// #4352
   142e0:	orr	w1, w1, w0
   142e4:	ldr	x0, [sp, #80]
   142e8:	str	w1, [x0, #12]
   142ec:	ldr	x0, [sp, #80]
   142f0:	ldr	x1, [sp, #112]
   142f4:	str	x1, [x0, #16]
   142f8:	b	1430c <XS_B__PADLIST_MAX+0x260>
   142fc:	ldr	x2, [sp, #112]
   14300:	ldr	x1, [sp, #80]
   14304:	ldr	x0, [sp, #24]
   14308:	bl	4c60 <Perl_sv_setiv_mg@plt>
   1430c:	ldr	x0, [sp, #56]
   14310:	add	x0, x0, #0x8
   14314:	str	x0, [sp, #56]
   14318:	ldr	x0, [sp, #56]
   1431c:	ldr	x1, [sp, #80]
   14320:	str	x1, [x0]
   14324:	mov	x0, #0x1                   	// #1
   14328:	str	x0, [sp, #120]
   1432c:	ldr	x0, [sp, #24]
   14330:	ldr	x1, [x0, #24]
   14334:	ldrsw	x2, [sp, #44]
   14338:	ldr	x0, [sp, #120]
   1433c:	add	x0, x2, x0
   14340:	lsl	x0, x0, #3
   14344:	sub	x0, x0, #0x8
   14348:	add	x1, x1, x0
   1434c:	ldr	x0, [sp, #24]
   14350:	str	x1, [x0]
   14354:	nop
   14358:	ldp	x29, x30, [sp], #128
   1435c:	ret

0000000000014360 <XS_B__PADLIST_NAMES>:
   14360:	stp	x29, x30, [sp, #-96]!
   14364:	mov	x29, sp
   14368:	str	x0, [sp, #24]
   1436c:	str	x1, [sp, #16]
   14370:	ldr	x0, [sp, #24]
   14374:	ldr	x0, [x0]
   14378:	str	x0, [sp, #40]
   1437c:	ldr	x0, [sp, #24]
   14380:	bl	7424 <S_POPMARK>
   14384:	str	w0, [sp, #32]
   14388:	ldr	x0, [sp, #24]
   1438c:	ldr	x1, [x0, #24]
   14390:	ldr	w0, [sp, #32]
   14394:	add	w2, w0, #0x1
   14398:	str	w2, [sp, #32]
   1439c:	sxtw	x0, w0
   143a0:	lsl	x0, x0, #3
   143a4:	add	x0, x1, x0
   143a8:	str	x0, [sp, #48]
   143ac:	ldr	x1, [sp, #40]
   143b0:	ldr	x0, [sp, #48]
   143b4:	sub	x0, x1, x0
   143b8:	asr	x0, x0, #3
   143bc:	str	w0, [sp, #36]
   143c0:	ldr	w0, [sp, #36]
   143c4:	cmp	w0, #0x1
   143c8:	b.eq	143dc <XS_B__PADLIST_NAMES+0x7c>  // b.none
   143cc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   143d0:	add	x1, x0, #0x1d8
   143d4:	ldr	x0, [sp, #16]
   143d8:	bl	4d70 <Perl_croak_xs_usage@plt>
   143dc:	ldr	x0, [sp, #24]
   143e0:	ldr	x1, [x0, #24]
   143e4:	ldrsw	x0, [sp, #32]
   143e8:	lsl	x0, x0, #3
   143ec:	add	x0, x1, x0
   143f0:	ldr	x0, [x0]
   143f4:	ldr	w0, [x0, #12]
   143f8:	and	w0, w0, #0x800
   143fc:	cmp	w0, #0x0
   14400:	b.eq	144c4 <XS_B__PADLIST_NAMES+0x164>  // b.none
   14404:	ldr	x0, [sp, #24]
   14408:	ldr	x1, [x0, #24]
   1440c:	ldrsw	x0, [sp, #32]
   14410:	lsl	x0, x0, #3
   14414:	add	x0, x1, x0
   14418:	ldr	x0, [x0]
   1441c:	ldr	x0, [x0, #16]
   14420:	ldr	w1, [x0, #12]
   14424:	mov	w0, #0x100                 	// #256
   14428:	movk	w0, #0x20, lsl #16
   1442c:	and	w0, w1, w0
   14430:	cmp	w0, #0x100
   14434:	b.ne	14460 <XS_B__PADLIST_NAMES+0x100>  // b.any
   14438:	ldr	x0, [sp, #24]
   1443c:	ldr	x1, [x0, #24]
   14440:	ldrsw	x0, [sp, #32]
   14444:	lsl	x0, x0, #3
   14448:	add	x0, x1, x0
   1444c:	ldr	x0, [x0]
   14450:	ldr	x0, [x0, #16]
   14454:	ldr	x0, [x0]
   14458:	ldr	x0, [x0, #32]
   1445c:	b	1448c <XS_B__PADLIST_NAMES+0x12c>
   14460:	ldr	x0, [sp, #24]
   14464:	ldr	x1, [x0, #24]
   14468:	ldrsw	x0, [sp, #32]
   1446c:	lsl	x0, x0, #3
   14470:	add	x0, x1, x0
   14474:	ldr	x0, [x0]
   14478:	ldr	x0, [x0, #16]
   1447c:	mov	w2, #0x2                   	// #2
   14480:	mov	x1, x0
   14484:	ldr	x0, [sp, #24]
   14488:	bl	4b20 <Perl_sv_2iv_flags@plt>
   1448c:	str	x0, [sp, #56]
   14490:	ldr	x0, [sp, #56]
   14494:	str	x0, [sp, #64]
   14498:	ldr	x0, [sp, #64]
   1449c:	ldr	x0, [x0, #8]
   144a0:	ldr	x0, [x0]
   144a4:	str	x0, [sp, #72]
   144a8:	ldr	x0, [sp, #24]
   144ac:	bl	5080 <Perl_sv_newmortal@plt>
   144b0:	str	x0, [sp, #80]
   144b4:	ldr	x0, [sp, #72]
   144b8:	cmp	x0, #0x0
   144bc:	b.eq	144dc <XS_B__PADLIST_NAMES+0x17c>  // b.none
   144c0:	b	144d0 <XS_B__PADLIST_NAMES+0x170>
   144c4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   144c8:	add	x0, x0, #0x1e0
   144cc:	bl	4e60 <Perl_croak_nocontext@plt>
   144d0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   144d4:	add	x0, x0, #0x200
   144d8:	b	144e4 <XS_B__PADLIST_NAMES+0x184>
   144dc:	adrp	x0, 18000 <boot_B+0x23d8>
   144e0:	add	x0, x0, #0x850
   144e4:	mov	x2, x0
   144e8:	ldr	x1, [sp, #80]
   144ec:	ldr	x0, [sp, #24]
   144f0:	bl	4fc0 <Perl_newSVrv@plt>
   144f4:	mov	x1, x0
   144f8:	ldr	x0, [sp, #72]
   144fc:	mov	x2, x0
   14500:	ldr	x0, [sp, #24]
   14504:	bl	5040 <Perl_sv_setiv@plt>
   14508:	ldr	x0, [sp, #24]
   1450c:	ldr	x1, [x0, #24]
   14510:	ldrsw	x0, [sp, #32]
   14514:	lsl	x0, x0, #3
   14518:	add	x0, x1, x0
   1451c:	ldr	x1, [sp, #80]
   14520:	str	x1, [x0]
   14524:	mov	x0, #0x1                   	// #1
   14528:	str	x0, [sp, #88]
   1452c:	ldr	x0, [sp, #24]
   14530:	ldr	x1, [x0, #24]
   14534:	ldrsw	x2, [sp, #32]
   14538:	ldr	x0, [sp, #88]
   1453c:	add	x0, x2, x0
   14540:	lsl	x0, x0, #3
   14544:	sub	x0, x0, #0x8
   14548:	add	x1, x1, x0
   1454c:	ldr	x0, [sp, #24]
   14550:	str	x1, [x0]
   14554:	nop
   14558:	ldp	x29, x30, [sp], #96
   1455c:	ret

0000000000014560 <XS_B__PADLIST_ARRAY>:
   14560:	stp	x29, x30, [sp, #-96]!
   14564:	mov	x29, sp
   14568:	str	x0, [sp, #24]
   1456c:	str	x1, [sp, #16]
   14570:	ldr	x0, [sp, #24]
   14574:	ldr	x0, [x0]
   14578:	str	x0, [sp, #40]
   1457c:	ldr	x0, [sp, #24]
   14580:	bl	7424 <S_POPMARK>
   14584:	str	w0, [sp, #32]
   14588:	ldr	x0, [sp, #24]
   1458c:	ldr	x1, [x0, #24]
   14590:	ldr	w0, [sp, #32]
   14594:	add	w2, w0, #0x1
   14598:	str	w2, [sp, #32]
   1459c:	sxtw	x0, w0
   145a0:	lsl	x0, x0, #3
   145a4:	add	x0, x1, x0
   145a8:	str	x0, [sp, #56]
   145ac:	ldr	x1, [sp, #40]
   145b0:	ldr	x0, [sp, #56]
   145b4:	sub	x0, x1, x0
   145b8:	asr	x0, x0, #3
   145bc:	str	w0, [sp, #36]
   145c0:	ldr	w0, [sp, #36]
   145c4:	cmp	w0, #0x1
   145c8:	b.eq	145dc <XS_B__PADLIST_ARRAY+0x7c>  // b.none
   145cc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   145d0:	add	x1, x0, #0x1d8
   145d4:	ldr	x0, [sp, #16]
   145d8:	bl	4d70 <Perl_croak_xs_usage@plt>
   145dc:	ldrsw	x0, [sp, #36]
   145e0:	lsl	x0, x0, #3
   145e4:	neg	x0, x0
   145e8:	ldr	x1, [sp, #40]
   145ec:	add	x0, x1, x0
   145f0:	str	x0, [sp, #40]
   145f4:	ldr	x0, [sp, #24]
   145f8:	ldr	x1, [x0, #24]
   145fc:	ldrsw	x0, [sp, #32]
   14600:	lsl	x0, x0, #3
   14604:	add	x0, x1, x0
   14608:	ldr	x0, [x0]
   1460c:	ldr	w0, [x0, #12]
   14610:	and	w0, w0, #0x800
   14614:	cmp	w0, #0x0
   14618:	b.eq	146c4 <XS_B__PADLIST_ARRAY+0x164>  // b.none
   1461c:	ldr	x0, [sp, #24]
   14620:	ldr	x1, [x0, #24]
   14624:	ldrsw	x0, [sp, #32]
   14628:	lsl	x0, x0, #3
   1462c:	add	x0, x1, x0
   14630:	ldr	x0, [x0]
   14634:	ldr	x0, [x0, #16]
   14638:	ldr	w1, [x0, #12]
   1463c:	mov	w0, #0x100                 	// #256
   14640:	movk	w0, #0x20, lsl #16
   14644:	and	w0, w1, w0
   14648:	cmp	w0, #0x100
   1464c:	b.ne	14678 <XS_B__PADLIST_ARRAY+0x118>  // b.any
   14650:	ldr	x0, [sp, #24]
   14654:	ldr	x1, [x0, #24]
   14658:	ldrsw	x0, [sp, #32]
   1465c:	lsl	x0, x0, #3
   14660:	add	x0, x1, x0
   14664:	ldr	x0, [x0]
   14668:	ldr	x0, [x0, #16]
   1466c:	ldr	x0, [x0]
   14670:	ldr	x0, [x0, #32]
   14674:	b	146a4 <XS_B__PADLIST_ARRAY+0x144>
   14678:	ldr	x0, [sp, #24]
   1467c:	ldr	x1, [x0, #24]
   14680:	ldrsw	x0, [sp, #32]
   14684:	lsl	x0, x0, #3
   14688:	add	x0, x1, x0
   1468c:	ldr	x0, [x0]
   14690:	ldr	x0, [x0, #16]
   14694:	mov	w2, #0x2                   	// #2
   14698:	mov	x1, x0
   1469c:	ldr	x0, [sp, #24]
   146a0:	bl	4b20 <Perl_sv_2iv_flags@plt>
   146a4:	str	x0, [sp, #64]
   146a8:	ldr	x0, [sp, #64]
   146ac:	str	x0, [sp, #72]
   146b0:	ldr	x0, [sp, #72]
   146b4:	ldr	x0, [x0]
   146b8:	cmp	x0, #0x0
   146bc:	b.lt	14898 <XS_B__PADLIST_ARRAY+0x338>  // b.tstop
   146c0:	b	146d0 <XS_B__PADLIST_ARRAY+0x170>
   146c4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   146c8:	add	x0, x0, #0x1e0
   146cc:	bl	4e60 <Perl_croak_nocontext@plt>
   146d0:	ldr	x0, [sp, #24]
   146d4:	ldr	x0, [x0, #8]
   146d8:	ldrb	w0, [x0, #35]
   146dc:	and	w0, w0, #0x4
   146e0:	cmp	w0, #0x0
   146e4:	b.eq	1470c <XS_B__PADLIST_ARRAY+0x1ac>  // b.none
   146e8:	ldr	x0, [sp, #24]
   146ec:	ldr	x1, [x0, #16]
   146f0:	ldr	x0, [sp, #24]
   146f4:	ldr	x0, [x0, #8]
   146f8:	ldr	x0, [x0, #24]
   146fc:	lsl	x0, x0, #3
   14700:	add	x0, x1, x0
   14704:	ldr	x0, [x0]
   14708:	b	14714 <XS_B__PADLIST_ARRAY+0x1b4>
   1470c:	ldr	x0, [sp, #24]
   14710:	bl	5080 <Perl_sv_newmortal@plt>
   14714:	str	x0, [sp, #80]
   14718:	ldr	x0, [sp, #72]
   1471c:	ldr	x0, [x0, #8]
   14720:	str	x0, [sp, #88]
   14724:	ldr	x0, [sp, #72]
   14728:	ldr	x0, [x0, #8]
   1472c:	ldr	x0, [x0]
   14730:	cmp	x0, #0x0
   14734:	b.eq	14744 <XS_B__PADLIST_ARRAY+0x1e4>  // b.none
   14738:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1473c:	add	x0, x0, #0x200
   14740:	b	1474c <XS_B__PADLIST_ARRAY+0x1ec>
   14744:	adrp	x0, 18000 <boot_B+0x23d8>
   14748:	add	x0, x0, #0x850
   1474c:	mov	x2, x0
   14750:	ldr	x1, [sp, #80]
   14754:	ldr	x0, [sp, #24]
   14758:	bl	4fc0 <Perl_newSVrv@plt>
   1475c:	mov	x1, x0
   14760:	ldr	x0, [sp, #72]
   14764:	ldr	x0, [x0, #8]
   14768:	ldr	x0, [x0]
   1476c:	mov	x2, x0
   14770:	ldr	x0, [sp, #24]
   14774:	bl	5040 <Perl_sv_setiv@plt>
   14778:	ldr	x0, [sp, #80]
   1477c:	ldr	w0, [x0, #12]
   14780:	lsr	w0, w0, #22
   14784:	mov	w0, w0
   14788:	and	x0, x0, #0x1
   1478c:	cmp	x0, #0x0
   14790:	b.eq	147a0 <XS_B__PADLIST_ARRAY+0x240>  // b.none
   14794:	ldr	x1, [sp, #80]
   14798:	ldr	x0, [sp, #24]
   1479c:	bl	4e90 <Perl_mg_set@plt>
   147a0:	ldr	x0, [sp, #24]
   147a4:	ldr	x1, [x0, #32]
   147a8:	ldr	x0, [sp, #40]
   147ac:	sub	x0, x1, x0
   147b0:	cmp	x0, #0x0
   147b4:	cset	w0, le
   147b8:	and	w0, w0, #0xff
   147bc:	and	x0, x0, #0xff
   147c0:	cmp	x0, #0x0
   147c4:	b.eq	147e0 <XS_B__PADLIST_ARRAY+0x280>  // b.none
   147c8:	mov	x3, #0x1                   	// #1
   147cc:	ldr	x2, [sp, #40]
   147d0:	ldr	x1, [sp, #40]
   147d4:	ldr	x0, [sp, #24]
   147d8:	bl	4b70 <Perl_stack_grow@plt>
   147dc:	str	x0, [sp, #40]
   147e0:	ldr	x0, [sp, #40]
   147e4:	add	x0, x0, #0x8
   147e8:	str	x0, [sp, #40]
   147ec:	ldr	x0, [sp, #40]
   147f0:	ldr	x1, [sp, #80]
   147f4:	str	x1, [x0]
   147f8:	mov	x0, #0x1                   	// #1
   147fc:	str	x0, [sp, #48]
   14800:	b	14884 <XS_B__PADLIST_ARRAY+0x324>
   14804:	ldr	x0, [sp, #24]
   14808:	ldr	x1, [x0, #32]
   1480c:	ldr	x0, [sp, #40]
   14810:	sub	x0, x1, x0
   14814:	cmp	x0, #0x0
   14818:	cset	w0, le
   1481c:	and	w0, w0, #0xff
   14820:	and	x0, x0, #0xff
   14824:	cmp	x0, #0x0
   14828:	b.eq	14844 <XS_B__PADLIST_ARRAY+0x2e4>  // b.none
   1482c:	mov	x3, #0x1                   	// #1
   14830:	ldr	x2, [sp, #40]
   14834:	ldr	x1, [sp, #40]
   14838:	ldr	x0, [sp, #24]
   1483c:	bl	4b70 <Perl_stack_grow@plt>
   14840:	str	x0, [sp, #40]
   14844:	ldr	x0, [sp, #48]
   14848:	lsl	x0, x0, #3
   1484c:	ldr	x1, [sp, #88]
   14850:	add	x0, x1, x0
   14854:	ldr	x1, [x0]
   14858:	ldr	x0, [sp, #40]
   1485c:	add	x0, x0, #0x8
   14860:	str	x0, [sp, #40]
   14864:	ldr	x0, [sp, #24]
   14868:	bl	77c4 <make_sv_object>
   1486c:	mov	x1, x0
   14870:	ldr	x0, [sp, #40]
   14874:	str	x1, [x0]
   14878:	ldr	x0, [sp, #48]
   1487c:	add	x0, x0, #0x1
   14880:	str	x0, [sp, #48]
   14884:	ldr	x0, [sp, #72]
   14888:	ldr	x0, [x0]
   1488c:	ldr	x1, [sp, #48]
   14890:	cmp	x1, x0
   14894:	b.le	14804 <XS_B__PADLIST_ARRAY+0x2a4>
   14898:	ldr	x0, [sp, #24]
   1489c:	ldr	x1, [sp, #40]
   148a0:	str	x1, [x0]
   148a4:	nop
   148a8:	ldp	x29, x30, [sp], #96
   148ac:	ret

00000000000148b0 <XS_B__PADLIST_ARRAYelt>:
   148b0:	stp	x29, x30, [sp, #-96]!
   148b4:	mov	x29, sp
   148b8:	str	x0, [sp, #24]
   148bc:	str	x1, [sp, #16]
   148c0:	ldr	x0, [sp, #24]
   148c4:	ldr	x0, [x0]
   148c8:	str	x0, [sp, #48]
   148cc:	ldr	x0, [sp, #24]
   148d0:	bl	7424 <S_POPMARK>
   148d4:	str	w0, [sp, #40]
   148d8:	ldr	x0, [sp, #24]
   148dc:	ldr	x1, [x0, #24]
   148e0:	ldr	w0, [sp, #40]
   148e4:	add	w2, w0, #0x1
   148e8:	str	w2, [sp, #40]
   148ec:	sxtw	x0, w0
   148f0:	lsl	x0, x0, #3
   148f4:	add	x0, x1, x0
   148f8:	str	x0, [sp, #64]
   148fc:	ldr	x1, [sp, #48]
   14900:	ldr	x0, [sp, #64]
   14904:	sub	x0, x1, x0
   14908:	asr	x0, x0, #3
   1490c:	str	w0, [sp, #44]
   14910:	ldr	w0, [sp, #44]
   14914:	cmp	w0, #0x2
   14918:	b.eq	1492c <XS_B__PADLIST_ARRAYelt+0x7c>  // b.none
   1491c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   14920:	add	x1, x0, #0x210
   14924:	ldr	x0, [sp, #16]
   14928:	bl	4d70 <Perl_croak_xs_usage@plt>
   1492c:	ldrsw	x0, [sp, #44]
   14930:	lsl	x0, x0, #3
   14934:	neg	x0, x0
   14938:	ldr	x1, [sp, #48]
   1493c:	add	x0, x1, x0
   14940:	str	x0, [sp, #48]
   14944:	ldr	x0, [sp, #24]
   14948:	ldr	x1, [x0, #24]
   1494c:	ldrsw	x0, [sp, #40]
   14950:	add	x0, x0, #0x1
   14954:	lsl	x0, x0, #3
   14958:	add	x0, x1, x0
   1495c:	ldr	x0, [x0]
   14960:	ldr	w1, [x0, #12]
   14964:	mov	w0, #0x100                 	// #256
   14968:	movk	w0, #0x20, lsl #16
   1496c:	and	w0, w1, w0
   14970:	cmp	w0, #0x100
   14974:	b.ne	149a0 <XS_B__PADLIST_ARRAYelt+0xf0>  // b.any
   14978:	ldr	x0, [sp, #24]
   1497c:	ldr	x1, [x0, #24]
   14980:	ldrsw	x0, [sp, #40]
   14984:	add	x0, x0, #0x1
   14988:	lsl	x0, x0, #3
   1498c:	add	x0, x1, x0
   14990:	ldr	x0, [x0]
   14994:	ldr	x0, [x0]
   14998:	ldr	x0, [x0, #32]
   1499c:	b	149cc <XS_B__PADLIST_ARRAYelt+0x11c>
   149a0:	ldr	x0, [sp, #24]
   149a4:	ldr	x1, [x0, #24]
   149a8:	ldrsw	x0, [sp, #40]
   149ac:	add	x0, x0, #0x1
   149b0:	lsl	x0, x0, #3
   149b4:	add	x0, x1, x0
   149b8:	ldr	x0, [x0]
   149bc:	mov	w2, #0x2                   	// #2
   149c0:	mov	x1, x0
   149c4:	ldr	x0, [sp, #24]
   149c8:	bl	4b20 <Perl_sv_2iv_flags@plt>
   149cc:	str	x0, [sp, #72]
   149d0:	ldr	x0, [sp, #24]
   149d4:	ldr	x1, [x0, #24]
   149d8:	ldrsw	x0, [sp, #40]
   149dc:	lsl	x0, x0, #3
   149e0:	add	x0, x1, x0
   149e4:	ldr	x0, [x0]
   149e8:	ldr	w0, [x0, #12]
   149ec:	and	w0, w0, #0x800
   149f0:	cmp	w0, #0x0
   149f4:	b.eq	14a9c <XS_B__PADLIST_ARRAYelt+0x1ec>  // b.none
   149f8:	ldr	x0, [sp, #24]
   149fc:	ldr	x1, [x0, #24]
   14a00:	ldrsw	x0, [sp, #40]
   14a04:	lsl	x0, x0, #3
   14a08:	add	x0, x1, x0
   14a0c:	ldr	x0, [x0]
   14a10:	ldr	x0, [x0, #16]
   14a14:	ldr	w1, [x0, #12]
   14a18:	mov	w0, #0x100                 	// #256
   14a1c:	movk	w0, #0x20, lsl #16
   14a20:	and	w0, w1, w0
   14a24:	cmp	w0, #0x100
   14a28:	b.ne	14a54 <XS_B__PADLIST_ARRAYelt+0x1a4>  // b.any
   14a2c:	ldr	x0, [sp, #24]
   14a30:	ldr	x1, [x0, #24]
   14a34:	ldrsw	x0, [sp, #40]
   14a38:	lsl	x0, x0, #3
   14a3c:	add	x0, x1, x0
   14a40:	ldr	x0, [x0]
   14a44:	ldr	x0, [x0, #16]
   14a48:	ldr	x0, [x0]
   14a4c:	ldr	x0, [x0, #32]
   14a50:	b	14a80 <XS_B__PADLIST_ARRAYelt+0x1d0>
   14a54:	ldr	x0, [sp, #24]
   14a58:	ldr	x1, [x0, #24]
   14a5c:	ldrsw	x0, [sp, #40]
   14a60:	lsl	x0, x0, #3
   14a64:	add	x0, x1, x0
   14a68:	ldr	x0, [x0]
   14a6c:	ldr	x0, [x0, #16]
   14a70:	mov	w2, #0x2                   	// #2
   14a74:	mov	x1, x0
   14a78:	ldr	x0, [sp, #24]
   14a7c:	bl	4b20 <Perl_sv_2iv_flags@plt>
   14a80:	str	x0, [sp, #80]
   14a84:	ldr	x0, [sp, #80]
   14a88:	str	x0, [sp, #88]
   14a8c:	ldr	x0, [sp, #72]
   14a90:	cmp	x0, #0x0
   14a94:	b.lt	14abc <XS_B__PADLIST_ARRAYelt+0x20c>  // b.tstop
   14a98:	b	14aa8 <XS_B__PADLIST_ARRAYelt+0x1f8>
   14a9c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   14aa0:	add	x0, x0, #0x1e0
   14aa4:	bl	4e60 <Perl_croak_nocontext@plt>
   14aa8:	ldr	x0, [sp, #88]
   14aac:	ldr	x0, [x0]
   14ab0:	ldr	x1, [sp, #72]
   14ab4:	cmp	x1, x0
   14ab8:	b.le	14b24 <XS_B__PADLIST_ARRAYelt+0x274>
   14abc:	ldr	x0, [sp, #24]
   14ac0:	ldr	x1, [x0, #32]
   14ac4:	ldr	x0, [sp, #48]
   14ac8:	sub	x0, x1, x0
   14acc:	cmp	x0, #0x0
   14ad0:	cset	w0, le
   14ad4:	and	w0, w0, #0xff
   14ad8:	and	x0, x0, #0xff
   14adc:	cmp	x0, #0x0
   14ae0:	b.eq	14afc <XS_B__PADLIST_ARRAYelt+0x24c>  // b.none
   14ae4:	mov	x3, #0x1                   	// #1
   14ae8:	ldr	x2, [sp, #48]
   14aec:	ldr	x1, [sp, #48]
   14af0:	ldr	x0, [sp, #24]
   14af4:	bl	4b70 <Perl_stack_grow@plt>
   14af8:	str	x0, [sp, #48]
   14afc:	ldr	x0, [sp, #48]
   14b00:	add	x0, x0, #0x8
   14b04:	str	x0, [sp, #48]
   14b08:	mov	x1, #0x0                   	// #0
   14b0c:	ldr	x0, [sp, #24]
   14b10:	bl	77c4 <make_sv_object>
   14b14:	mov	x1, x0
   14b18:	ldr	x0, [sp, #48]
   14b1c:	str	x1, [x0]
   14b20:	b	14c44 <XS_B__PADLIST_ARRAYelt+0x394>
   14b24:	ldr	x0, [sp, #72]
   14b28:	cmp	x0, #0x0
   14b2c:	b.ne	14bcc <XS_B__PADLIST_ARRAYelt+0x31c>  // b.any
   14b30:	ldr	x0, [sp, #24]
   14b34:	ldr	x0, [x0]
   14b38:	sub	x1, x0, #0x8
   14b3c:	ldr	x0, [sp, #24]
   14b40:	str	x1, [x0]
   14b44:	ldr	x0, [sp, #24]
   14b48:	ldr	x0, [x0, #120]
   14b4c:	add	x1, x0, #0x4
   14b50:	ldr	x0, [sp, #24]
   14b54:	str	x1, [x0, #120]
   14b58:	ldr	x0, [sp, #24]
   14b5c:	ldr	x0, [x0, #120]
   14b60:	str	x0, [sp, #56]
   14b64:	ldr	x0, [sp, #24]
   14b68:	ldr	x0, [x0, #128]
   14b6c:	ldr	x1, [sp, #56]
   14b70:	cmp	x1, x0
   14b74:	cset	w0, eq  // eq = none
   14b78:	and	w0, w0, #0xff
   14b7c:	and	x0, x0, #0xff
   14b80:	cmp	x0, #0x0
   14b84:	b.eq	14b94 <XS_B__PADLIST_ARRAYelt+0x2e4>  // b.none
   14b88:	ldr	x0, [sp, #24]
   14b8c:	bl	4f60 <Perl_markstack_grow@plt>
   14b90:	str	x0, [sp, #56]
   14b94:	ldr	x0, [sp, #24]
   14b98:	ldr	x0, [x0]
   14b9c:	sub	x1, x0, #0x8
   14ba0:	ldr	x0, [sp, #24]
   14ba4:	ldr	x0, [x0, #24]
   14ba8:	sub	x0, x1, x0
   14bac:	asr	x0, x0, #3
   14bb0:	mov	w1, w0
   14bb4:	ldr	x0, [sp, #56]
   14bb8:	str	w1, [x0]
   14bbc:	ldr	x1, [sp, #16]
   14bc0:	ldr	x0, [sp, #24]
   14bc4:	bl	14360 <XS_B__PADLIST_NAMES>
   14bc8:	b	14c54 <XS_B__PADLIST_ARRAYelt+0x3a4>
   14bcc:	ldr	x0, [sp, #24]
   14bd0:	ldr	x1, [x0, #32]
   14bd4:	ldr	x0, [sp, #48]
   14bd8:	sub	x0, x1, x0
   14bdc:	cmp	x0, #0x0
   14be0:	cset	w0, le
   14be4:	and	w0, w0, #0xff
   14be8:	and	x0, x0, #0xff
   14bec:	cmp	x0, #0x0
   14bf0:	b.eq	14c0c <XS_B__PADLIST_ARRAYelt+0x35c>  // b.none
   14bf4:	mov	x3, #0x1                   	// #1
   14bf8:	ldr	x2, [sp, #48]
   14bfc:	ldr	x1, [sp, #48]
   14c00:	ldr	x0, [sp, #24]
   14c04:	bl	4b70 <Perl_stack_grow@plt>
   14c08:	str	x0, [sp, #48]
   14c0c:	ldr	x0, [sp, #88]
   14c10:	ldr	x1, [x0, #8]
   14c14:	ldr	x0, [sp, #72]
   14c18:	lsl	x0, x0, #3
   14c1c:	add	x0, x1, x0
   14c20:	ldr	x1, [x0]
   14c24:	ldr	x0, [sp, #48]
   14c28:	add	x0, x0, #0x8
   14c2c:	str	x0, [sp, #48]
   14c30:	ldr	x0, [sp, #24]
   14c34:	bl	77c4 <make_sv_object>
   14c38:	mov	x1, x0
   14c3c:	ldr	x0, [sp, #48]
   14c40:	str	x1, [x0]
   14c44:	ldr	x0, [sp, #24]
   14c48:	ldr	x1, [sp, #48]
   14c4c:	str	x1, [x0]
   14c50:	nop
   14c54:	ldp	x29, x30, [sp], #96
   14c58:	ret

0000000000014c5c <XS_B__PADLIST_REFCNT>:
   14c5c:	stp	x29, x30, [sp, #-112]!
   14c60:	mov	x29, sp
   14c64:	str	x0, [sp, #24]
   14c68:	str	x1, [sp, #16]
   14c6c:	ldr	x0, [sp, #24]
   14c70:	ldr	x0, [x0]
   14c74:	str	x0, [sp, #56]
   14c78:	ldr	x0, [sp, #24]
   14c7c:	bl	7424 <S_POPMARK>
   14c80:	str	w0, [sp, #44]
   14c84:	ldr	x0, [sp, #24]
   14c88:	ldr	x1, [x0, #24]
   14c8c:	ldr	w0, [sp, #44]
   14c90:	add	w2, w0, #0x1
   14c94:	str	w2, [sp, #44]
   14c98:	sxtw	x0, w0
   14c9c:	lsl	x0, x0, #3
   14ca0:	add	x0, x1, x0
   14ca4:	str	x0, [sp, #64]
   14ca8:	ldr	x1, [sp, #56]
   14cac:	ldr	x0, [sp, #64]
   14cb0:	sub	x0, x1, x0
   14cb4:	asr	x0, x0, #3
   14cb8:	str	w0, [sp, #48]
   14cbc:	ldr	w0, [sp, #48]
   14cc0:	cmp	w0, #0x1
   14cc4:	b.eq	14cd8 <XS_B__PADLIST_REFCNT+0x7c>  // b.none
   14cc8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   14ccc:	add	x1, x0, #0x1d8
   14cd0:	ldr	x0, [sp, #16]
   14cd4:	bl	4d70 <Perl_croak_xs_usage@plt>
   14cd8:	ldr	x0, [sp, #24]
   14cdc:	ldr	x0, [x0, #8]
   14ce0:	ldrb	w0, [x0, #35]
   14ce4:	and	w0, w0, #0x4
   14ce8:	cmp	w0, #0x0
   14cec:	b.eq	14d14 <XS_B__PADLIST_REFCNT+0xb8>  // b.none
   14cf0:	ldr	x0, [sp, #24]
   14cf4:	ldr	x1, [x0, #16]
   14cf8:	ldr	x0, [sp, #24]
   14cfc:	ldr	x0, [x0, #8]
   14d00:	ldr	x0, [x0, #24]
   14d04:	lsl	x0, x0, #3
   14d08:	add	x0, x1, x0
   14d0c:	ldr	x0, [x0]
   14d10:	b	14d1c <XS_B__PADLIST_REFCNT+0xc0>
   14d14:	ldr	x0, [sp, #24]
   14d18:	bl	5080 <Perl_sv_newmortal@plt>
   14d1c:	str	x0, [sp, #72]
   14d20:	ldr	x0, [sp, #24]
   14d24:	ldr	x1, [x0, #24]
   14d28:	ldrsw	x0, [sp, #44]
   14d2c:	lsl	x0, x0, #3
   14d30:	add	x0, x1, x0
   14d34:	ldr	x0, [x0]
   14d38:	ldr	w0, [x0, #12]
   14d3c:	and	w0, w0, #0x800
   14d40:	cmp	w0, #0x0
   14d44:	b.eq	14e70 <XS_B__PADLIST_REFCNT+0x214>  // b.none
   14d48:	ldr	x0, [sp, #24]
   14d4c:	ldr	x1, [x0, #24]
   14d50:	ldrsw	x0, [sp, #44]
   14d54:	lsl	x0, x0, #3
   14d58:	add	x0, x1, x0
   14d5c:	ldr	x0, [x0]
   14d60:	ldr	x0, [x0, #16]
   14d64:	ldr	w1, [x0, #12]
   14d68:	mov	w0, #0x100                 	// #256
   14d6c:	movk	w0, #0x20, lsl #16
   14d70:	and	w0, w1, w0
   14d74:	cmp	w0, #0x100
   14d78:	b.ne	14da4 <XS_B__PADLIST_REFCNT+0x148>  // b.any
   14d7c:	ldr	x0, [sp, #24]
   14d80:	ldr	x1, [x0, #24]
   14d84:	ldrsw	x0, [sp, #44]
   14d88:	lsl	x0, x0, #3
   14d8c:	add	x0, x1, x0
   14d90:	ldr	x0, [x0]
   14d94:	ldr	x0, [x0, #16]
   14d98:	ldr	x0, [x0]
   14d9c:	ldr	x0, [x0, #32]
   14da0:	b	14dd0 <XS_B__PADLIST_REFCNT+0x174>
   14da4:	ldr	x0, [sp, #24]
   14da8:	ldr	x1, [x0, #24]
   14dac:	ldrsw	x0, [sp, #44]
   14db0:	lsl	x0, x0, #3
   14db4:	add	x0, x1, x0
   14db8:	ldr	x0, [x0]
   14dbc:	ldr	x0, [x0, #16]
   14dc0:	mov	w2, #0x2                   	// #2
   14dc4:	mov	x1, x0
   14dc8:	ldr	x0, [sp, #24]
   14dcc:	bl	4b20 <Perl_sv_2iv_flags@plt>
   14dd0:	str	x0, [sp, #80]
   14dd4:	ldr	x0, [sp, #80]
   14dd8:	str	x0, [sp, #88]
   14ddc:	mov	w0, #0x1                   	// #1
   14de0:	str	w0, [sp, #52]
   14de4:	ldr	x0, [sp, #24]
   14de8:	ldr	x1, [x0, #24]
   14dec:	ldrsw	x0, [sp, #44]
   14df0:	lsl	x0, x0, #3
   14df4:	sub	x0, x0, #0x8
   14df8:	add	x0, x1, x0
   14dfc:	str	x0, [sp, #56]
   14e00:	ldr	w0, [sp, #52]
   14e04:	str	x0, [sp, #96]
   14e08:	ldr	x0, [sp, #72]
   14e0c:	ldr	w1, [x0, #12]
   14e10:	mov	w0, #0x8ff                 	// #2303
   14e14:	movk	w0, #0x9981, lsl #16
   14e18:	and	w0, w1, w0
   14e1c:	cmp	w0, #0x1
   14e20:	cset	w0, eq  // eq = none
   14e24:	and	w0, w0, #0xff
   14e28:	mov	w1, w0
   14e2c:	ldr	x0, [sp, #24]
   14e30:	ldrb	w0, [x0, #185]
   14e34:	eor	w0, w0, #0x1
   14e38:	and	w0, w0, #0xff
   14e3c:	and	w0, w1, w0
   14e40:	ldr	x1, [sp, #96]
   14e44:	mvn	x1, x1
   14e48:	lsr	x1, x1, #63
   14e4c:	and	w1, w1, #0xff
   14e50:	and	w0, w0, w1
   14e54:	cmp	w0, #0x0
   14e58:	cset	w0, ne  // ne = any
   14e5c:	and	w0, w0, #0xff
   14e60:	and	x0, x0, #0xff
   14e64:	cmp	x0, #0x0
   14e68:	b.eq	14ea4 <XS_B__PADLIST_REFCNT+0x248>  // b.none
   14e6c:	b	14e7c <XS_B__PADLIST_REFCNT+0x220>
   14e70:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   14e74:	add	x0, x0, #0x1e0
   14e78:	bl	4e60 <Perl_croak_nocontext@plt>
   14e7c:	ldr	x0, [sp, #72]
   14e80:	ldr	w1, [x0, #12]
   14e84:	mov	w0, #0x1100                	// #4352
   14e88:	orr	w1, w1, w0
   14e8c:	ldr	x0, [sp, #72]
   14e90:	str	w1, [x0, #12]
   14e94:	ldr	x1, [sp, #96]
   14e98:	ldr	x0, [sp, #72]
   14e9c:	str	x1, [x0, #16]
   14ea0:	b	14eb4 <XS_B__PADLIST_REFCNT+0x258>
   14ea4:	ldr	x2, [sp, #96]
   14ea8:	ldr	x1, [sp, #72]
   14eac:	ldr	x0, [sp, #24]
   14eb0:	bl	4fe0 <Perl_sv_setuv_mg@plt>
   14eb4:	ldr	x0, [sp, #56]
   14eb8:	add	x0, x0, #0x8
   14ebc:	str	x0, [sp, #56]
   14ec0:	ldr	x0, [sp, #56]
   14ec4:	ldr	x1, [sp, #72]
   14ec8:	str	x1, [x0]
   14ecc:	mov	x0, #0x1                   	// #1
   14ed0:	str	x0, [sp, #104]
   14ed4:	ldr	x0, [sp, #24]
   14ed8:	ldr	x1, [x0, #24]
   14edc:	ldrsw	x2, [sp, #44]
   14ee0:	ldr	x0, [sp, #104]
   14ee4:	add	x0, x2, x0
   14ee8:	lsl	x0, x0, #3
   14eec:	sub	x0, x0, #0x8
   14ef0:	add	x1, x1, x0
   14ef4:	ldr	x0, [sp, #24]
   14ef8:	str	x1, [x0]
   14efc:	nop
   14f00:	ldp	x29, x30, [sp], #112
   14f04:	ret

0000000000014f08 <XS_B__PADNAMELIST_ARRAY>:
   14f08:	stp	x29, x30, [sp, #-96]!
   14f0c:	mov	x29, sp
   14f10:	str	x0, [sp, #24]
   14f14:	str	x1, [sp, #16]
   14f18:	ldr	x0, [sp, #24]
   14f1c:	ldr	x0, [x0]
   14f20:	str	x0, [sp, #40]
   14f24:	ldr	x0, [sp, #24]
   14f28:	bl	7424 <S_POPMARK>
   14f2c:	str	w0, [sp, #32]
   14f30:	ldr	x0, [sp, #24]
   14f34:	ldr	x1, [x0, #24]
   14f38:	ldr	w0, [sp, #32]
   14f3c:	add	w2, w0, #0x1
   14f40:	str	w2, [sp, #32]
   14f44:	sxtw	x0, w0
   14f48:	lsl	x0, x0, #3
   14f4c:	add	x0, x1, x0
   14f50:	str	x0, [sp, #56]
   14f54:	ldr	x1, [sp, #40]
   14f58:	ldr	x0, [sp, #56]
   14f5c:	sub	x0, x1, x0
   14f60:	asr	x0, x0, #3
   14f64:	str	w0, [sp, #36]
   14f68:	ldr	w0, [sp, #36]
   14f6c:	cmp	w0, #0x1
   14f70:	b.eq	14f84 <XS_B__PADNAMELIST_ARRAY+0x7c>  // b.none
   14f74:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   14f78:	add	x1, x0, #0x220
   14f7c:	ldr	x0, [sp, #16]
   14f80:	bl	4d70 <Perl_croak_xs_usage@plt>
   14f84:	ldrsw	x0, [sp, #36]
   14f88:	lsl	x0, x0, #3
   14f8c:	neg	x0, x0
   14f90:	ldr	x1, [sp, #40]
   14f94:	add	x0, x1, x0
   14f98:	str	x0, [sp, #40]
   14f9c:	ldr	x0, [sp, #24]
   14fa0:	ldr	x1, [x0, #24]
   14fa4:	ldrsw	x0, [sp, #32]
   14fa8:	lsl	x0, x0, #3
   14fac:	add	x0, x1, x0
   14fb0:	ldr	x0, [x0]
   14fb4:	ldr	w0, [x0, #12]
   14fb8:	and	w0, w0, #0x800
   14fbc:	cmp	w0, #0x0
   14fc0:	b.eq	1506c <XS_B__PADNAMELIST_ARRAY+0x164>  // b.none
   14fc4:	ldr	x0, [sp, #24]
   14fc8:	ldr	x1, [x0, #24]
   14fcc:	ldrsw	x0, [sp, #32]
   14fd0:	lsl	x0, x0, #3
   14fd4:	add	x0, x1, x0
   14fd8:	ldr	x0, [x0]
   14fdc:	ldr	x0, [x0, #16]
   14fe0:	ldr	w1, [x0, #12]
   14fe4:	mov	w0, #0x100                 	// #256
   14fe8:	movk	w0, #0x20, lsl #16
   14fec:	and	w0, w1, w0
   14ff0:	cmp	w0, #0x100
   14ff4:	b.ne	15020 <XS_B__PADNAMELIST_ARRAY+0x118>  // b.any
   14ff8:	ldr	x0, [sp, #24]
   14ffc:	ldr	x1, [x0, #24]
   15000:	ldrsw	x0, [sp, #32]
   15004:	lsl	x0, x0, #3
   15008:	add	x0, x1, x0
   1500c:	ldr	x0, [x0]
   15010:	ldr	x0, [x0, #16]
   15014:	ldr	x0, [x0]
   15018:	ldr	x0, [x0, #32]
   1501c:	b	1504c <XS_B__PADNAMELIST_ARRAY+0x144>
   15020:	ldr	x0, [sp, #24]
   15024:	ldr	x1, [x0, #24]
   15028:	ldrsw	x0, [sp, #32]
   1502c:	lsl	x0, x0, #3
   15030:	add	x0, x1, x0
   15034:	ldr	x0, [x0]
   15038:	ldr	x0, [x0, #16]
   1503c:	mov	w2, #0x2                   	// #2
   15040:	mov	x1, x0
   15044:	ldr	x0, [sp, #24]
   15048:	bl	4b20 <Perl_sv_2iv_flags@plt>
   1504c:	str	x0, [sp, #64]
   15050:	ldr	x0, [sp, #64]
   15054:	str	x0, [sp, #72]
   15058:	ldr	x0, [sp, #72]
   1505c:	ldr	x0, [x0]
   15060:	cmp	x0, #0x0
   15064:	b.lt	15178 <XS_B__PADNAMELIST_ARRAY+0x270>  // b.tstop
   15068:	b	15078 <XS_B__PADNAMELIST_ARRAY+0x170>
   1506c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15070:	add	x0, x0, #0x228
   15074:	bl	4e60 <Perl_croak_nocontext@plt>
   15078:	ldr	x0, [sp, #72]
   1507c:	ldr	x0, [x0, #8]
   15080:	str	x0, [sp, #80]
   15084:	str	xzr, [sp, #48]
   15088:	b	15164 <XS_B__PADNAMELIST_ARRAY+0x25c>
   1508c:	ldr	x0, [sp, #24]
   15090:	bl	5080 <Perl_sv_newmortal@plt>
   15094:	str	x0, [sp, #88]
   15098:	ldr	x0, [sp, #48]
   1509c:	lsl	x0, x0, #3
   150a0:	ldr	x1, [sp, #80]
   150a4:	add	x0, x1, x0
   150a8:	ldr	x0, [x0]
   150ac:	cmp	x0, #0x0
   150b0:	b.eq	150c0 <XS_B__PADNAMELIST_ARRAY+0x1b8>  // b.none
   150b4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   150b8:	add	x0, x0, #0x240
   150bc:	b	150c8 <XS_B__PADNAMELIST_ARRAY+0x1c0>
   150c0:	adrp	x0, 18000 <boot_B+0x23d8>
   150c4:	add	x0, x0, #0x9f8
   150c8:	mov	x2, x0
   150cc:	ldr	x1, [sp, #88]
   150d0:	ldr	x0, [sp, #24]
   150d4:	bl	4fc0 <Perl_newSVrv@plt>
   150d8:	mov	x3, x0
   150dc:	ldr	x0, [sp, #48]
   150e0:	lsl	x0, x0, #3
   150e4:	ldr	x1, [sp, #80]
   150e8:	add	x0, x1, x0
   150ec:	ldr	x0, [x0]
   150f0:	mov	x2, x0
   150f4:	mov	x1, x3
   150f8:	ldr	x0, [sp, #24]
   150fc:	bl	5040 <Perl_sv_setiv@plt>
   15100:	ldr	x0, [sp, #24]
   15104:	ldr	x1, [x0, #32]
   15108:	ldr	x0, [sp, #40]
   1510c:	sub	x0, x1, x0
   15110:	cmp	x0, #0x0
   15114:	cset	w0, le
   15118:	and	w0, w0, #0xff
   1511c:	and	x0, x0, #0xff
   15120:	cmp	x0, #0x0
   15124:	b.eq	15140 <XS_B__PADNAMELIST_ARRAY+0x238>  // b.none
   15128:	mov	x3, #0x1                   	// #1
   1512c:	ldr	x2, [sp, #40]
   15130:	ldr	x1, [sp, #40]
   15134:	ldr	x0, [sp, #24]
   15138:	bl	4b70 <Perl_stack_grow@plt>
   1513c:	str	x0, [sp, #40]
   15140:	ldr	x0, [sp, #40]
   15144:	add	x0, x0, #0x8
   15148:	str	x0, [sp, #40]
   1514c:	ldr	x0, [sp, #40]
   15150:	ldr	x1, [sp, #88]
   15154:	str	x1, [x0]
   15158:	ldr	x0, [sp, #48]
   1515c:	add	x0, x0, #0x1
   15160:	str	x0, [sp, #48]
   15164:	ldr	x0, [sp, #72]
   15168:	ldr	x0, [x0]
   1516c:	ldr	x1, [sp, #48]
   15170:	cmp	x1, x0
   15174:	b.le	1508c <XS_B__PADNAMELIST_ARRAY+0x184>
   15178:	ldr	x0, [sp, #24]
   1517c:	ldr	x1, [sp, #40]
   15180:	str	x1, [x0]
   15184:	nop
   15188:	ldp	x29, x30, [sp], #96
   1518c:	ret

0000000000015190 <XS_B__PADNAMELIST_ARRAYelt>:
   15190:	stp	x29, x30, [sp, #-112]!
   15194:	mov	x29, sp
   15198:	str	x0, [sp, #24]
   1519c:	str	x1, [sp, #16]
   151a0:	ldr	x0, [sp, #24]
   151a4:	ldr	x0, [x0]
   151a8:	str	x0, [sp, #56]
   151ac:	ldr	x0, [sp, #24]
   151b0:	bl	7424 <S_POPMARK>
   151b4:	str	w0, [sp, #40]
   151b8:	ldr	x0, [sp, #24]
   151bc:	ldr	x1, [x0, #24]
   151c0:	ldr	w0, [sp, #40]
   151c4:	add	w2, w0, #0x1
   151c8:	str	w2, [sp, #40]
   151cc:	sxtw	x0, w0
   151d0:	lsl	x0, x0, #3
   151d4:	add	x0, x1, x0
   151d8:	str	x0, [sp, #64]
   151dc:	ldr	x1, [sp, #56]
   151e0:	ldr	x0, [sp, #64]
   151e4:	sub	x0, x1, x0
   151e8:	asr	x0, x0, #3
   151ec:	str	w0, [sp, #44]
   151f0:	ldr	w0, [sp, #44]
   151f4:	cmp	w0, #0x2
   151f8:	b.eq	1520c <XS_B__PADNAMELIST_ARRAYelt+0x7c>  // b.none
   151fc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15200:	add	x1, x0, #0x250
   15204:	ldr	x0, [sp, #16]
   15208:	bl	4d70 <Perl_croak_xs_usage@plt>
   1520c:	ldr	x0, [sp, #24]
   15210:	ldr	x1, [x0, #24]
   15214:	ldrsw	x0, [sp, #40]
   15218:	add	x0, x0, #0x1
   1521c:	lsl	x0, x0, #3
   15220:	add	x0, x1, x0
   15224:	ldr	x0, [x0]
   15228:	ldr	w1, [x0, #12]
   1522c:	mov	w0, #0x100                 	// #256
   15230:	movk	w0, #0x20, lsl #16
   15234:	and	w0, w1, w0
   15238:	cmp	w0, #0x100
   1523c:	b.ne	15268 <XS_B__PADNAMELIST_ARRAYelt+0xd8>  // b.any
   15240:	ldr	x0, [sp, #24]
   15244:	ldr	x1, [x0, #24]
   15248:	ldrsw	x0, [sp, #40]
   1524c:	add	x0, x0, #0x1
   15250:	lsl	x0, x0, #3
   15254:	add	x0, x1, x0
   15258:	ldr	x0, [x0]
   1525c:	ldr	x0, [x0]
   15260:	ldr	x0, [x0, #32]
   15264:	b	15294 <XS_B__PADNAMELIST_ARRAYelt+0x104>
   15268:	ldr	x0, [sp, #24]
   1526c:	ldr	x1, [x0, #24]
   15270:	ldrsw	x0, [sp, #40]
   15274:	add	x0, x0, #0x1
   15278:	lsl	x0, x0, #3
   1527c:	add	x0, x1, x0
   15280:	ldr	x0, [x0]
   15284:	mov	w2, #0x2                   	// #2
   15288:	mov	x1, x0
   1528c:	ldr	x0, [sp, #24]
   15290:	bl	4b20 <Perl_sv_2iv_flags@plt>
   15294:	str	x0, [sp, #72]
   15298:	ldr	x0, [sp, #24]
   1529c:	ldr	x1, [x0, #24]
   152a0:	ldrsw	x0, [sp, #40]
   152a4:	lsl	x0, x0, #3
   152a8:	add	x0, x1, x0
   152ac:	ldr	x0, [x0]
   152b0:	ldr	w0, [x0, #12]
   152b4:	and	w0, w0, #0x800
   152b8:	cmp	w0, #0x0
   152bc:	b.eq	15364 <XS_B__PADNAMELIST_ARRAYelt+0x1d4>  // b.none
   152c0:	ldr	x0, [sp, #24]
   152c4:	ldr	x1, [x0, #24]
   152c8:	ldrsw	x0, [sp, #40]
   152cc:	lsl	x0, x0, #3
   152d0:	add	x0, x1, x0
   152d4:	ldr	x0, [x0]
   152d8:	ldr	x0, [x0, #16]
   152dc:	ldr	w1, [x0, #12]
   152e0:	mov	w0, #0x100                 	// #256
   152e4:	movk	w0, #0x20, lsl #16
   152e8:	and	w0, w1, w0
   152ec:	cmp	w0, #0x100
   152f0:	b.ne	1531c <XS_B__PADNAMELIST_ARRAYelt+0x18c>  // b.any
   152f4:	ldr	x0, [sp, #24]
   152f8:	ldr	x1, [x0, #24]
   152fc:	ldrsw	x0, [sp, #40]
   15300:	lsl	x0, x0, #3
   15304:	add	x0, x1, x0
   15308:	ldr	x0, [x0]
   1530c:	ldr	x0, [x0, #16]
   15310:	ldr	x0, [x0]
   15314:	ldr	x0, [x0, #32]
   15318:	b	15348 <XS_B__PADNAMELIST_ARRAYelt+0x1b8>
   1531c:	ldr	x0, [sp, #24]
   15320:	ldr	x1, [x0, #24]
   15324:	ldrsw	x0, [sp, #40]
   15328:	lsl	x0, x0, #3
   1532c:	add	x0, x1, x0
   15330:	ldr	x0, [x0]
   15334:	ldr	x0, [x0, #16]
   15338:	mov	w2, #0x2                   	// #2
   1533c:	mov	x1, x0
   15340:	ldr	x0, [sp, #24]
   15344:	bl	4b20 <Perl_sv_2iv_flags@plt>
   15348:	str	x0, [sp, #80]
   1534c:	ldr	x0, [sp, #80]
   15350:	str	x0, [sp, #88]
   15354:	ldr	x0, [sp, #72]
   15358:	cmp	x0, #0x0
   1535c:	b.lt	15384 <XS_B__PADNAMELIST_ARRAYelt+0x1f4>  // b.tstop
   15360:	b	15370 <XS_B__PADNAMELIST_ARRAYelt+0x1e0>
   15364:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15368:	add	x0, x0, #0x228
   1536c:	bl	4e60 <Perl_croak_nocontext@plt>
   15370:	ldr	x0, [sp, #88]
   15374:	ldr	x0, [x0]
   15378:	ldr	x1, [sp, #72]
   1537c:	cmp	x1, x0
   15380:	b.le	1538c <XS_B__PADNAMELIST_ARRAYelt+0x1fc>
   15384:	str	xzr, [sp, #48]
   15388:	b	153a8 <XS_B__PADNAMELIST_ARRAYelt+0x218>
   1538c:	ldr	x0, [sp, #88]
   15390:	ldr	x1, [x0, #8]
   15394:	ldr	x0, [sp, #72]
   15398:	lsl	x0, x0, #3
   1539c:	add	x0, x1, x0
   153a0:	ldr	x0, [x0]
   153a4:	str	x0, [sp, #48]
   153a8:	ldr	x0, [sp, #24]
   153ac:	bl	5080 <Perl_sv_newmortal@plt>
   153b0:	str	x0, [sp, #96]
   153b4:	ldr	x0, [sp, #48]
   153b8:	cmp	x0, #0x0
   153bc:	b.eq	153cc <XS_B__PADNAMELIST_ARRAYelt+0x23c>  // b.none
   153c0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   153c4:	add	x0, x0, #0x240
   153c8:	b	153d4 <XS_B__PADNAMELIST_ARRAYelt+0x244>
   153cc:	adrp	x0, 18000 <boot_B+0x23d8>
   153d0:	add	x0, x0, #0x9f8
   153d4:	mov	x2, x0
   153d8:	ldr	x1, [sp, #96]
   153dc:	ldr	x0, [sp, #24]
   153e0:	bl	4fc0 <Perl_newSVrv@plt>
   153e4:	mov	x1, x0
   153e8:	ldr	x0, [sp, #48]
   153ec:	mov	x2, x0
   153f0:	ldr	x0, [sp, #24]
   153f4:	bl	5040 <Perl_sv_setiv@plt>
   153f8:	ldr	x0, [sp, #24]
   153fc:	ldr	x1, [x0, #24]
   15400:	ldrsw	x0, [sp, #40]
   15404:	lsl	x0, x0, #3
   15408:	add	x0, x1, x0
   1540c:	ldr	x1, [sp, #96]
   15410:	str	x1, [x0]
   15414:	mov	x0, #0x1                   	// #1
   15418:	str	x0, [sp, #104]
   1541c:	ldr	x0, [sp, #24]
   15420:	ldr	x1, [x0, #24]
   15424:	ldrsw	x2, [sp, #40]
   15428:	ldr	x0, [sp, #104]
   1542c:	add	x0, x2, x0
   15430:	lsl	x0, x0, #3
   15434:	sub	x0, x0, #0x8
   15438:	add	x1, x1, x0
   1543c:	ldr	x0, [sp, #24]
   15440:	str	x1, [x0]
   15444:	nop
   15448:	ldp	x29, x30, [sp], #112
   1544c:	ret

0000000000015450 <XS_B__PADNAME_TYPE>:
   15450:	stp	x29, x30, [sp, #-112]!
   15454:	mov	x29, sp
   15458:	str	x0, [sp, #24]
   1545c:	str	x1, [sp, #16]
   15460:	ldr	x0, [sp, #24]
   15464:	ldr	x0, [x0]
   15468:	str	x0, [sp, #56]
   1546c:	ldr	x0, [sp, #24]
   15470:	bl	7424 <S_POPMARK>
   15474:	str	w0, [sp, #36]
   15478:	ldr	x0, [sp, #24]
   1547c:	ldr	x1, [x0, #24]
   15480:	ldr	w0, [sp, #36]
   15484:	add	w2, w0, #0x1
   15488:	str	w2, [sp, #36]
   1548c:	sxtw	x0, w0
   15490:	lsl	x0, x0, #3
   15494:	add	x0, x1, x0
   15498:	str	x0, [sp, #64]
   1549c:	ldr	x1, [sp, #56]
   154a0:	ldr	x0, [sp, #64]
   154a4:	sub	x0, x1, x0
   154a8:	asr	x0, x0, #3
   154ac:	str	w0, [sp, #40]
   154b0:	ldr	x0, [sp, #16]
   154b4:	ldr	x0, [x0]
   154b8:	str	x0, [sp, #72]
   154bc:	ldr	x0, [sp, #72]
   154c0:	ldr	w0, [x0, #40]
   154c4:	str	w0, [sp, #44]
   154c8:	ldr	w0, [sp, #40]
   154cc:	cmp	w0, #0x1
   154d0:	b.eq	154e4 <XS_B__PADNAME_TYPE+0x94>  // b.none
   154d4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   154d8:	add	x1, x0, #0x260
   154dc:	ldr	x0, [sp, #16]
   154e0:	bl	4d70 <Perl_croak_xs_usage@plt>
   154e4:	ldrsw	x0, [sp, #40]
   154e8:	lsl	x0, x0, #3
   154ec:	neg	x0, x0
   154f0:	ldr	x1, [sp, #56]
   154f4:	add	x0, x1, x0
   154f8:	str	x0, [sp, #56]
   154fc:	ldr	x0, [sp, #24]
   15500:	ldr	x1, [x0, #24]
   15504:	ldrsw	x0, [sp, #36]
   15508:	lsl	x0, x0, #3
   1550c:	add	x0, x1, x0
   15510:	ldr	x0, [x0]
   15514:	ldr	w0, [x0, #12]
   15518:	and	w0, w0, #0x800
   1551c:	cmp	w0, #0x0
   15520:	b.eq	155e8 <XS_B__PADNAME_TYPE+0x198>  // b.none
   15524:	ldr	x0, [sp, #24]
   15528:	ldr	x1, [x0, #24]
   1552c:	ldrsw	x0, [sp, #36]
   15530:	lsl	x0, x0, #3
   15534:	add	x0, x1, x0
   15538:	ldr	x0, [x0]
   1553c:	ldr	x0, [x0, #16]
   15540:	ldr	w1, [x0, #12]
   15544:	mov	w0, #0x100                 	// #256
   15548:	movk	w0, #0x20, lsl #16
   1554c:	and	w0, w1, w0
   15550:	cmp	w0, #0x100
   15554:	b.ne	15580 <XS_B__PADNAME_TYPE+0x130>  // b.any
   15558:	ldr	x0, [sp, #24]
   1555c:	ldr	x1, [x0, #24]
   15560:	ldrsw	x0, [sp, #36]
   15564:	lsl	x0, x0, #3
   15568:	add	x0, x1, x0
   1556c:	ldr	x0, [x0]
   15570:	ldr	x0, [x0, #16]
   15574:	ldr	x0, [x0]
   15578:	ldr	x0, [x0, #32]
   1557c:	b	155ac <XS_B__PADNAME_TYPE+0x15c>
   15580:	ldr	x0, [sp, #24]
   15584:	ldr	x1, [x0, #24]
   15588:	ldrsw	x0, [sp, #36]
   1558c:	lsl	x0, x0, #3
   15590:	add	x0, x1, x0
   15594:	ldr	x0, [x0]
   15598:	ldr	x0, [x0, #16]
   1559c:	mov	w2, #0x2                   	// #2
   155a0:	mov	x1, x0
   155a4:	ldr	x0, [sp, #24]
   155a8:	bl	4b20 <Perl_sv_2iv_flags@plt>
   155ac:	str	x0, [sp, #80]
   155b0:	ldr	x0, [sp, #80]
   155b4:	str	x0, [sp, #88]
   155b8:	ldr	w0, [sp, #44]
   155bc:	mov	w0, w0
   155c0:	and	x0, x0, #0xffff
   155c4:	ldr	x1, [sp, #88]
   155c8:	add	x0, x1, x0
   155cc:	str	x0, [sp, #96]
   155d0:	ldr	w0, [sp, #44]
   155d4:	asr	w0, w0, #16
   155d8:	and	w0, w0, #0xff
   155dc:	cmp	w0, #0x5
   155e0:	b.eq	15658 <XS_B__PADNAME_TYPE+0x208>  // b.none
   155e4:	b	155f4 <XS_B__PADNAME_TYPE+0x1a4>
   155e8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   155ec:	add	x0, x0, #0x268
   155f0:	bl	4e60 <Perl_croak_nocontext@plt>
   155f4:	cmp	w0, #0x5
   155f8:	b.gt	15684 <XS_B__PADNAME_TYPE+0x234>
   155fc:	cmp	w0, #0x0
   15600:	b.eq	15610 <XS_B__PADNAME_TYPE+0x1c0>  // b.none
   15604:	cmp	w0, #0x4
   15608:	b.eq	1562c <XS_B__PADNAME_TYPE+0x1dc>  // b.none
   1560c:	b	15684 <XS_B__PADNAME_TYPE+0x234>
   15610:	ldr	x0, [sp, #96]
   15614:	ldr	x0, [x0]
   15618:	mov	x1, x0
   1561c:	ldr	x0, [sp, #24]
   15620:	bl	77c4 <make_sv_object>
   15624:	str	x0, [sp, #48]
   15628:	b	15684 <XS_B__PADNAME_TYPE+0x234>
   1562c:	ldr	x0, [sp, #96]
   15630:	ldr	w0, [x0]
   15634:	mov	w0, w0
   15638:	mov	x1, x0
   1563c:	ldr	x0, [sp, #24]
   15640:	bl	4f00 <Perl_newSVuv@plt>
   15644:	mov	x1, x0
   15648:	ldr	x0, [sp, #24]
   1564c:	bl	4ec0 <Perl_sv_2mortal@plt>
   15650:	str	x0, [sp, #48]
   15654:	b	15684 <XS_B__PADNAME_TYPE+0x234>
   15658:	ldr	x0, [sp, #96]
   1565c:	ldrb	w0, [x0]
   15660:	and	x0, x0, #0xff
   15664:	mov	x1, x0
   15668:	ldr	x0, [sp, #24]
   1566c:	bl	4f00 <Perl_newSVuv@plt>
   15670:	mov	x1, x0
   15674:	ldr	x0, [sp, #24]
   15678:	bl	4ec0 <Perl_sv_2mortal@plt>
   1567c:	str	x0, [sp, #48]
   15680:	b	15684 <XS_B__PADNAME_TYPE+0x234>
   15684:	ldr	x0, [sp, #24]
   15688:	ldr	x1, [x0, #24]
   1568c:	ldrsw	x0, [sp, #36]
   15690:	lsl	x0, x0, #3
   15694:	add	x0, x1, x0
   15698:	ldr	x1, [sp, #48]
   1569c:	str	x1, [x0]
   156a0:	mov	x0, #0x1                   	// #1
   156a4:	str	x0, [sp, #104]
   156a8:	ldr	x0, [sp, #24]
   156ac:	ldr	x1, [x0, #24]
   156b0:	ldrsw	x2, [sp, #36]
   156b4:	ldr	x0, [sp, #104]
   156b8:	add	x0, x2, x0
   156bc:	lsl	x0, x0, #3
   156c0:	sub	x0, x0, #0x8
   156c4:	add	x1, x1, x0
   156c8:	ldr	x0, [sp, #24]
   156cc:	str	x1, [x0]
   156d0:	nop
   156d4:	ldp	x29, x30, [sp], #112
   156d8:	ret

00000000000156dc <XS_B__PADNAME_PV>:
   156dc:	stp	x29, x30, [sp, #-80]!
   156e0:	mov	x29, sp
   156e4:	str	x0, [sp, #24]
   156e8:	str	x1, [sp, #16]
   156ec:	ldr	x0, [sp, #24]
   156f0:	ldr	x0, [x0]
   156f4:	str	x0, [sp, #40]
   156f8:	ldr	x0, [sp, #24]
   156fc:	bl	7424 <S_POPMARK>
   15700:	str	w0, [sp, #32]
   15704:	ldr	x0, [sp, #24]
   15708:	ldr	x1, [x0, #24]
   1570c:	ldr	w0, [sp, #32]
   15710:	add	w2, w0, #0x1
   15714:	str	w2, [sp, #32]
   15718:	sxtw	x0, w0
   1571c:	lsl	x0, x0, #3
   15720:	add	x0, x1, x0
   15724:	str	x0, [sp, #48]
   15728:	ldr	x1, [sp, #40]
   1572c:	ldr	x0, [sp, #48]
   15730:	sub	x0, x1, x0
   15734:	asr	x0, x0, #3
   15738:	str	w0, [sp, #36]
   1573c:	ldr	w0, [sp, #36]
   15740:	cmp	w0, #0x1
   15744:	b.eq	15758 <XS_B__PADNAME_PV+0x7c>  // b.none
   15748:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1574c:	add	x1, x0, #0x260
   15750:	ldr	x0, [sp, #16]
   15754:	bl	4d70 <Perl_croak_xs_usage@plt>
   15758:	ldrsw	x0, [sp, #36]
   1575c:	lsl	x0, x0, #3
   15760:	neg	x0, x0
   15764:	ldr	x1, [sp, #40]
   15768:	add	x0, x1, x0
   1576c:	str	x0, [sp, #40]
   15770:	ldr	x0, [sp, #24]
   15774:	ldr	x0, [x0, #8]
   15778:	ldrb	w0, [x0, #35]
   1577c:	and	w0, w0, #0x4
   15780:	cmp	w0, #0x0
   15784:	b.eq	157ac <XS_B__PADNAME_PV+0xd0>  // b.none
   15788:	ldr	x0, [sp, #24]
   1578c:	ldr	x1, [x0, #16]
   15790:	ldr	x0, [sp, #24]
   15794:	ldr	x0, [x0, #8]
   15798:	ldr	x0, [x0, #24]
   1579c:	lsl	x0, x0, #3
   157a0:	add	x0, x1, x0
   157a4:	ldr	x0, [x0]
   157a8:	b	157b4 <XS_B__PADNAME_PV+0xd8>
   157ac:	ldr	x0, [sp, #24]
   157b0:	bl	5080 <Perl_sv_newmortal@plt>
   157b4:	str	x0, [sp, #56]
   157b8:	ldr	x0, [sp, #24]
   157bc:	ldr	x1, [x0, #24]
   157c0:	ldrsw	x0, [sp, #32]
   157c4:	lsl	x0, x0, #3
   157c8:	add	x0, x1, x0
   157cc:	ldr	x0, [x0]
   157d0:	ldr	w0, [x0, #12]
   157d4:	and	w0, w0, #0x800
   157d8:	cmp	w0, #0x0
   157dc:	b.eq	158d0 <XS_B__PADNAME_PV+0x1f4>  // b.none
   157e0:	ldr	x0, [sp, #24]
   157e4:	ldr	x1, [x0, #24]
   157e8:	ldrsw	x0, [sp, #32]
   157ec:	lsl	x0, x0, #3
   157f0:	add	x0, x1, x0
   157f4:	ldr	x0, [x0]
   157f8:	ldr	x0, [x0, #16]
   157fc:	ldr	w1, [x0, #12]
   15800:	mov	w0, #0x100                 	// #256
   15804:	movk	w0, #0x20, lsl #16
   15808:	and	w0, w1, w0
   1580c:	cmp	w0, #0x100
   15810:	b.ne	1583c <XS_B__PADNAME_PV+0x160>  // b.any
   15814:	ldr	x0, [sp, #24]
   15818:	ldr	x1, [x0, #24]
   1581c:	ldrsw	x0, [sp, #32]
   15820:	lsl	x0, x0, #3
   15824:	add	x0, x1, x0
   15828:	ldr	x0, [x0]
   1582c:	ldr	x0, [x0, #16]
   15830:	ldr	x0, [x0]
   15834:	ldr	x0, [x0, #32]
   15838:	b	15868 <XS_B__PADNAME_PV+0x18c>
   1583c:	ldr	x0, [sp, #24]
   15840:	ldr	x1, [x0, #24]
   15844:	ldrsw	x0, [sp, #32]
   15848:	lsl	x0, x0, #3
   1584c:	add	x0, x1, x0
   15850:	ldr	x0, [x0]
   15854:	ldr	x0, [x0, #16]
   15858:	mov	w2, #0x2                   	// #2
   1585c:	mov	x1, x0
   15860:	ldr	x0, [sp, #24]
   15864:	bl	4b20 <Perl_sv_2iv_flags@plt>
   15868:	str	x0, [sp, #64]
   1586c:	ldr	x0, [sp, #64]
   15870:	str	x0, [sp, #72]
   15874:	ldr	x0, [sp, #72]
   15878:	ldr	x1, [x0]
   1587c:	ldr	x0, [sp, #72]
   15880:	ldrb	w0, [x0, #40]
   15884:	and	x0, x0, #0xff
   15888:	mov	x3, x0
   1588c:	mov	x2, x1
   15890:	ldr	x1, [sp, #56]
   15894:	ldr	x0, [sp, #24]
   15898:	bl	4f80 <Perl_sv_setpvn@plt>
   1589c:	ldr	x0, [sp, #56]
   158a0:	ldr	w0, [x0, #12]
   158a4:	orr	w1, w0, #0x20000000
   158a8:	ldr	x0, [sp, #56]
   158ac:	str	w1, [x0, #12]
   158b0:	ldr	x0, [sp, #56]
   158b4:	ldr	w0, [x0, #12]
   158b8:	lsr	w0, w0, #22
   158bc:	mov	w0, w0
   158c0:	and	x0, x0, #0x1
   158c4:	cmp	x0, #0x0
   158c8:	b.eq	158e8 <XS_B__PADNAME_PV+0x20c>  // b.none
   158cc:	b	158dc <XS_B__PADNAME_PV+0x200>
   158d0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   158d4:	add	x0, x0, #0x268
   158d8:	bl	4e60 <Perl_croak_nocontext@plt>
   158dc:	ldr	x1, [sp, #56]
   158e0:	ldr	x0, [sp, #24]
   158e4:	bl	4e90 <Perl_mg_set@plt>
   158e8:	ldr	x0, [sp, #24]
   158ec:	ldr	x1, [x0, #32]
   158f0:	ldr	x0, [sp, #40]
   158f4:	sub	x0, x1, x0
   158f8:	cmp	x0, #0x0
   158fc:	cset	w0, le
   15900:	and	w0, w0, #0xff
   15904:	and	x0, x0, #0xff
   15908:	cmp	x0, #0x0
   1590c:	b.eq	15928 <XS_B__PADNAME_PV+0x24c>  // b.none
   15910:	mov	x3, #0x1                   	// #1
   15914:	ldr	x2, [sp, #40]
   15918:	ldr	x1, [sp, #40]
   1591c:	ldr	x0, [sp, #24]
   15920:	bl	4b70 <Perl_stack_grow@plt>
   15924:	str	x0, [sp, #40]
   15928:	ldr	x0, [sp, #40]
   1592c:	add	x0, x0, #0x8
   15930:	str	x0, [sp, #40]
   15934:	ldr	x0, [sp, #40]
   15938:	ldr	x1, [sp, #56]
   1593c:	str	x1, [x0]
   15940:	ldr	x0, [sp, #24]
   15944:	ldr	x1, [sp, #40]
   15948:	str	x1, [x0]
   1594c:	nop
   15950:	ldp	x29, x30, [sp], #80
   15954:	ret

0000000000015958 <XS_B__PADNAME_FLAGS>:
   15958:	stp	x29, x30, [sp, #-112]!
   1595c:	mov	x29, sp
   15960:	str	x0, [sp, #24]
   15964:	str	x1, [sp, #16]
   15968:	ldr	x0, [sp, #24]
   1596c:	ldr	x0, [x0]
   15970:	str	x0, [sp, #56]
   15974:	ldr	x0, [sp, #24]
   15978:	bl	7424 <S_POPMARK>
   1597c:	str	w0, [sp, #48]
   15980:	ldr	x0, [sp, #24]
   15984:	ldr	x1, [x0, #24]
   15988:	ldr	w0, [sp, #48]
   1598c:	add	w2, w0, #0x1
   15990:	str	w2, [sp, #48]
   15994:	sxtw	x0, w0
   15998:	lsl	x0, x0, #3
   1599c:	add	x0, x1, x0
   159a0:	str	x0, [sp, #64]
   159a4:	ldr	x1, [sp, #56]
   159a8:	ldr	x0, [sp, #64]
   159ac:	sub	x0, x1, x0
   159b0:	asr	x0, x0, #3
   159b4:	str	w0, [sp, #52]
   159b8:	ldr	w0, [sp, #52]
   159bc:	cmp	w0, #0x1
   159c0:	b.eq	159d4 <XS_B__PADNAME_FLAGS+0x7c>  // b.none
   159c4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   159c8:	add	x1, x0, #0x260
   159cc:	ldr	x0, [sp, #16]
   159d0:	bl	4d70 <Perl_croak_xs_usage@plt>
   159d4:	ldr	x0, [sp, #24]
   159d8:	ldr	x0, [x0, #8]
   159dc:	ldrb	w0, [x0, #35]
   159e0:	and	w0, w0, #0x4
   159e4:	cmp	w0, #0x0
   159e8:	b.eq	15a10 <XS_B__PADNAME_FLAGS+0xb8>  // b.none
   159ec:	ldr	x0, [sp, #24]
   159f0:	ldr	x1, [x0, #16]
   159f4:	ldr	x0, [sp, #24]
   159f8:	ldr	x0, [x0, #8]
   159fc:	ldr	x0, [x0, #24]
   15a00:	lsl	x0, x0, #3
   15a04:	add	x0, x1, x0
   15a08:	ldr	x0, [x0]
   15a0c:	b	15a18 <XS_B__PADNAME_FLAGS+0xc0>
   15a10:	ldr	x0, [sp, #24]
   15a14:	bl	5080 <Perl_sv_newmortal@plt>
   15a18:	str	x0, [sp, #72]
   15a1c:	ldr	x0, [sp, #24]
   15a20:	ldr	x1, [x0, #24]
   15a24:	ldrsw	x0, [sp, #48]
   15a28:	lsl	x0, x0, #3
   15a2c:	add	x0, x1, x0
   15a30:	ldr	x0, [x0]
   15a34:	ldr	w0, [x0, #12]
   15a38:	and	w0, w0, #0x800
   15a3c:	cmp	w0, #0x0
   15a40:	b.eq	15afc <XS_B__PADNAME_FLAGS+0x1a4>  // b.none
   15a44:	ldr	x0, [sp, #24]
   15a48:	ldr	x1, [x0, #24]
   15a4c:	ldrsw	x0, [sp, #48]
   15a50:	lsl	x0, x0, #3
   15a54:	add	x0, x1, x0
   15a58:	ldr	x0, [x0]
   15a5c:	ldr	x0, [x0, #16]
   15a60:	ldr	w1, [x0, #12]
   15a64:	mov	w0, #0x100                 	// #256
   15a68:	movk	w0, #0x20, lsl #16
   15a6c:	and	w0, w1, w0
   15a70:	cmp	w0, #0x100
   15a74:	b.ne	15aa0 <XS_B__PADNAME_FLAGS+0x148>  // b.any
   15a78:	ldr	x0, [sp, #24]
   15a7c:	ldr	x1, [x0, #24]
   15a80:	ldrsw	x0, [sp, #48]
   15a84:	lsl	x0, x0, #3
   15a88:	add	x0, x1, x0
   15a8c:	ldr	x0, [x0]
   15a90:	ldr	x0, [x0, #16]
   15a94:	ldr	x0, [x0]
   15a98:	ldr	x0, [x0, #32]
   15a9c:	b	15acc <XS_B__PADNAME_FLAGS+0x174>
   15aa0:	ldr	x0, [sp, #24]
   15aa4:	ldr	x1, [x0, #24]
   15aa8:	ldrsw	x0, [sp, #48]
   15aac:	lsl	x0, x0, #3
   15ab0:	add	x0, x1, x0
   15ab4:	ldr	x0, [x0]
   15ab8:	ldr	x0, [x0, #16]
   15abc:	mov	w2, #0x2                   	// #2
   15ac0:	mov	x1, x0
   15ac4:	ldr	x0, [sp, #24]
   15ac8:	bl	4b20 <Perl_sv_2iv_flags@plt>
   15acc:	str	x0, [sp, #80]
   15ad0:	ldr	x0, [sp, #80]
   15ad4:	str	x0, [sp, #88]
   15ad8:	ldr	x0, [sp, #88]
   15adc:	ldrb	w0, [x0, #41]
   15ae0:	str	w0, [sp, #44]
   15ae4:	ldr	x0, [sp, #88]
   15ae8:	ldrb	w0, [x0, #41]
   15aec:	and	w0, w0, #0x1
   15af0:	cmp	w0, #0x0
   15af4:	b.eq	15b14 <XS_B__PADNAME_FLAGS+0x1bc>  // b.none
   15af8:	b	15b08 <XS_B__PADNAME_FLAGS+0x1b0>
   15afc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15b00:	add	x0, x0, #0x268
   15b04:	bl	4e60 <Perl_croak_nocontext@plt>
   15b08:	ldr	w0, [sp, #44]
   15b0c:	orr	w0, w0, #0x1000000
   15b10:	str	w0, [sp, #44]
   15b14:	ldr	x0, [sp, #24]
   15b18:	ldr	x1, [x0, #24]
   15b1c:	ldrsw	x0, [sp, #48]
   15b20:	lsl	x0, x0, #3
   15b24:	sub	x0, x0, #0x8
   15b28:	add	x0, x1, x0
   15b2c:	str	x0, [sp, #56]
   15b30:	ldr	w0, [sp, #44]
   15b34:	str	x0, [sp, #96]
   15b38:	ldr	x0, [sp, #72]
   15b3c:	ldr	w1, [x0, #12]
   15b40:	mov	w0, #0x8ff                 	// #2303
   15b44:	movk	w0, #0x9981, lsl #16
   15b48:	and	w0, w1, w0
   15b4c:	cmp	w0, #0x1
   15b50:	cset	w0, eq  // eq = none
   15b54:	and	w0, w0, #0xff
   15b58:	mov	w1, w0
   15b5c:	ldr	x0, [sp, #24]
   15b60:	ldrb	w0, [x0, #185]
   15b64:	eor	w0, w0, #0x1
   15b68:	and	w0, w0, #0xff
   15b6c:	and	w0, w1, w0
   15b70:	ldr	x1, [sp, #96]
   15b74:	mvn	x1, x1
   15b78:	lsr	x1, x1, #63
   15b7c:	and	w1, w1, #0xff
   15b80:	and	w0, w0, w1
   15b84:	cmp	w0, #0x0
   15b88:	cset	w0, ne  // ne = any
   15b8c:	and	w0, w0, #0xff
   15b90:	and	x0, x0, #0xff
   15b94:	cmp	x0, #0x0
   15b98:	b.eq	15bc4 <XS_B__PADNAME_FLAGS+0x26c>  // b.none
   15b9c:	ldr	x0, [sp, #72]
   15ba0:	ldr	w1, [x0, #12]
   15ba4:	mov	w0, #0x1100                	// #4352
   15ba8:	orr	w1, w1, w0
   15bac:	ldr	x0, [sp, #72]
   15bb0:	str	w1, [x0, #12]
   15bb4:	ldr	x1, [sp, #96]
   15bb8:	ldr	x0, [sp, #72]
   15bbc:	str	x1, [x0, #16]
   15bc0:	b	15bd4 <XS_B__PADNAME_FLAGS+0x27c>
   15bc4:	ldr	x2, [sp, #96]
   15bc8:	ldr	x1, [sp, #72]
   15bcc:	ldr	x0, [sp, #24]
   15bd0:	bl	4fe0 <Perl_sv_setuv_mg@plt>
   15bd4:	ldr	x0, [sp, #56]
   15bd8:	add	x0, x0, #0x8
   15bdc:	str	x0, [sp, #56]
   15be0:	ldr	x0, [sp, #56]
   15be4:	ldr	x1, [sp, #72]
   15be8:	str	x1, [x0]
   15bec:	mov	x0, #0x1                   	// #1
   15bf0:	str	x0, [sp, #104]
   15bf4:	ldr	x0, [sp, #24]
   15bf8:	ldr	x1, [x0, #24]
   15bfc:	ldrsw	x2, [sp, #48]
   15c00:	ldr	x0, [sp, #104]
   15c04:	add	x0, x2, x0
   15c08:	lsl	x0, x0, #3
   15c0c:	sub	x0, x0, #0x8
   15c10:	add	x1, x1, x0
   15c14:	ldr	x0, [sp, #24]
   15c18:	str	x1, [x0]
   15c1c:	nop
   15c20:	ldp	x29, x30, [sp], #112
   15c24:	ret

0000000000015c28 <boot_B>:
   15c28:	sub	sp, sp, #0x5f0
   15c2c:	stp	x29, x30, [sp]
   15c30:	mov	x29, sp
   15c34:	stp	x19, x20, [sp, #16]
   15c38:	str	x0, [sp, #40]
   15c3c:	str	x1, [sp, #32]
   15c40:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15c44:	add	x4, x0, #0x280
   15c48:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15c4c:	add	x3, x0, #0x288
   15c50:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15c54:	add	x2, x0, #0x290
   15c58:	ldr	x1, [sp, #40]
   15c5c:	mov	w0, #0x4e7                 	// #1255
   15c60:	movk	w0, #0xd30, lsl #16
   15c64:	bl	4f10 <Perl_xs_handshake@plt>
   15c68:	str	w0, [sp, #48]
   15c6c:	ldr	x0, [sp, #40]
   15c70:	ldr	x1, [x0, #24]
   15c74:	ldrsw	x0, [sp, #48]
   15c78:	lsl	x0, x0, #3
   15c7c:	add	x0, x1, x0
   15c80:	str	x0, [sp, #80]
   15c84:	ldr	x0, [sp, #40]
   15c88:	ldr	x0, [x0]
   15c8c:	str	x0, [sp, #88]
   15c90:	ldr	x1, [sp, #88]
   15c94:	ldr	x0, [sp, #80]
   15c98:	sub	x0, x1, x0
   15c9c:	asr	x0, x0, #3
   15ca0:	str	w0, [sp, #52]
   15ca4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15ca8:	add	x0, x0, #0x290
   15cac:	str	x0, [sp, #96]
   15cb0:	adrp	x0, 8000 <cstring+0x4d0>
   15cb4:	add	x2, x0, #0xd98
   15cb8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15cbc:	add	x1, x0, #0x298
   15cc0:	ldr	x0, [sp, #40]
   15cc4:	bl	4e80 <Perl_newXS_deffile@plt>
   15cc8:	adrp	x0, 8000 <cstring+0x4d0>
   15ccc:	add	x2, x0, #0xe88
   15cd0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15cd4:	add	x1, x0, #0x2a8
   15cd8:	ldr	x0, [sp, #40]
   15cdc:	bl	4e80 <Perl_newXS_deffile@plt>
   15ce0:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15ce4:	add	x2, x0, #0x58
   15ce8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15cec:	add	x1, x0, #0x2c0
   15cf0:	ldr	x0, [sp, #40]
   15cf4:	bl	4e80 <Perl_newXS_deffile@plt>
   15cf8:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15cfc:	add	x2, x0, #0x1a4
   15d00:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15d04:	add	x1, x0, #0x2d0
   15d08:	ldr	x0, [sp, #40]
   15d0c:	bl	4e80 <Perl_newXS_deffile@plt>
   15d10:	str	x0, [sp, #32]
   15d14:	ldr	x0, [sp, #32]
   15d18:	ldr	x0, [x0]
   15d1c:	str	x0, [sp, #72]
   15d20:	ldr	x0, [sp, #72]
   15d24:	mov	w1, #0x1                   	// #1
   15d28:	str	w1, [x0, #40]
   15d2c:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15d30:	add	x2, x0, #0x1a4
   15d34:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15d38:	add	x1, x0, #0x2e0
   15d3c:	ldr	x0, [sp, #40]
   15d40:	bl	4e80 <Perl_newXS_deffile@plt>
   15d44:	str	x0, [sp, #32]
   15d48:	ldr	x0, [sp, #32]
   15d4c:	ldr	x0, [x0]
   15d50:	str	x0, [sp, #64]
   15d54:	ldr	x0, [sp, #64]
   15d58:	str	wzr, [x0, #40]
   15d5c:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15d60:	add	x2, x0, #0x1a4
   15d64:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15d68:	add	x1, x0, #0x2f0
   15d6c:	ldr	x0, [sp, #40]
   15d70:	bl	4e80 <Perl_newXS_deffile@plt>
   15d74:	str	x0, [sp, #32]
   15d78:	ldr	x0, [sp, #32]
   15d7c:	ldr	x0, [x0]
   15d80:	str	x0, [sp, #56]
   15d84:	ldr	x0, [sp, #56]
   15d88:	mov	w1, #0x2                   	// #2
   15d8c:	str	w1, [x0, #40]
   15d90:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15d94:	add	x2, x0, #0x2c4
   15d98:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15d9c:	add	x1, x0, #0x300
   15da0:	ldr	x0, [sp, #40]
   15da4:	bl	4e80 <Perl_newXS_deffile@plt>
   15da8:	str	x0, [sp, #32]
   15dac:	ldr	x0, [sp, #32]
   15db0:	ldr	x0, [x0]
   15db4:	str	x0, [sp, #120]
   15db8:	ldr	x0, [sp, #120]
   15dbc:	str	wzr, [x0, #40]
   15dc0:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15dc4:	add	x2, x0, #0x2c4
   15dc8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15dcc:	add	x1, x0, #0x310
   15dd0:	ldr	x0, [sp, #40]
   15dd4:	bl	4e80 <Perl_newXS_deffile@plt>
   15dd8:	str	x0, [sp, #32]
   15ddc:	ldr	x0, [sp, #32]
   15de0:	ldr	x0, [x0]
   15de4:	str	x0, [sp, #128]
   15de8:	ldr	x0, [sp, #128]
   15dec:	mov	w1, #0x1                   	// #1
   15df0:	str	w1, [x0, #40]
   15df4:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15df8:	add	x2, x0, #0x3cc
   15dfc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15e00:	add	x1, x0, #0x320
   15e04:	ldr	x0, [sp, #40]
   15e08:	bl	4e80 <Perl_newXS_deffile@plt>
   15e0c:	str	x0, [sp, #32]
   15e10:	ldr	x0, [sp, #32]
   15e14:	ldr	x0, [x0]
   15e18:	str	x0, [sp, #136]
   15e1c:	ldr	x0, [sp, #136]
   15e20:	mov	w1, #0x1                   	// #1
   15e24:	str	w1, [x0, #40]
   15e28:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15e2c:	add	x2, x0, #0x3cc
   15e30:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15e34:	add	x1, x0, #0x330
   15e38:	ldr	x0, [sp, #40]
   15e3c:	bl	4e80 <Perl_newXS_deffile@plt>
   15e40:	str	x0, [sp, #32]
   15e44:	ldr	x0, [sp, #32]
   15e48:	ldr	x0, [x0]
   15e4c:	str	x0, [sp, #144]
   15e50:	ldr	x0, [sp, #144]
   15e54:	str	wzr, [x0, #40]
   15e58:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15e5c:	add	x2, x0, #0x5e8
   15e60:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15e64:	add	x1, x0, #0x348
   15e68:	ldr	x0, [sp, #40]
   15e6c:	bl	4e80 <Perl_newXS_deffile@plt>
   15e70:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15e74:	add	x2, x0, #0x810
   15e78:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15e7c:	add	x1, x0, #0x358
   15e80:	ldr	x0, [sp, #40]
   15e84:	bl	4e80 <Perl_newXS_deffile@plt>
   15e88:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15e8c:	add	x2, x0, #0xd80
   15e90:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15e94:	add	x1, x0, #0x370
   15e98:	ldr	x0, [sp, #40]
   15e9c:	bl	4e80 <Perl_newXS_deffile@plt>
   15ea0:	adrp	x0, 9000 <XS_B_amagic_generation+0x178>
   15ea4:	add	x2, x0, #0xf68
   15ea8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15eac:	add	x1, x0, #0x380
   15eb0:	ldr	x0, [sp, #40]
   15eb4:	bl	4e80 <Perl_newXS_deffile@plt>
   15eb8:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15ebc:	add	x2, x0, #0x78
   15ec0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15ec4:	add	x1, x0, #0x398
   15ec8:	ldr	x0, [sp, #40]
   15ecc:	bl	4e80 <Perl_newXS_deffile@plt>
   15ed0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15ed4:	add	x2, x0, #0x280
   15ed8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15edc:	add	x1, x0, #0x3a8
   15ee0:	ldr	x0, [sp, #40]
   15ee4:	bl	4e80 <Perl_newXS_deffile@plt>
   15ee8:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15eec:	add	x2, x0, #0x438
   15ef0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15ef4:	add	x1, x0, #0x3b8
   15ef8:	ldr	x0, [sp, #40]
   15efc:	bl	4e80 <Perl_newXS_deffile@plt>
   15f00:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15f04:	add	x2, x0, #0x634
   15f08:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15f0c:	add	x1, x0, #0x3c0
   15f10:	ldr	x0, [sp, #40]
   15f14:	bl	4e80 <Perl_newXS_deffile@plt>
   15f18:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15f1c:	add	x2, x0, #0x884
   15f20:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15f24:	add	x1, x0, #0x3d0
   15f28:	ldr	x0, [sp, #40]
   15f2c:	bl	4e80 <Perl_newXS_deffile@plt>
   15f30:	str	x0, [sp, #32]
   15f34:	ldr	x0, [sp, #32]
   15f38:	ldr	x0, [x0]
   15f3c:	str	x0, [sp, #152]
   15f40:	ldr	x0, [sp, #152]
   15f44:	str	wzr, [x0, #40]
   15f48:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15f4c:	add	x2, x0, #0x884
   15f50:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15f54:	add	x1, x0, #0x3e0
   15f58:	ldr	x0, [sp, #40]
   15f5c:	bl	4e80 <Perl_newXS_deffile@plt>
   15f60:	str	x0, [sp, #32]
   15f64:	ldr	x0, [sp, #32]
   15f68:	ldr	x0, [x0]
   15f6c:	str	x0, [sp, #160]
   15f70:	ldr	x0, [sp, #160]
   15f74:	mov	w1, #0x1                   	// #1
   15f78:	str	w1, [x0, #40]
   15f7c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15f80:	add	x2, x0, #0x978
   15f84:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15f88:	add	x1, x0, #0x3f0
   15f8c:	ldr	x0, [sp, #40]
   15f90:	bl	4e80 <Perl_newXS_deffile@plt>
   15f94:	str	x0, [sp, #32]
   15f98:	ldr	x0, [sp, #32]
   15f9c:	ldr	x0, [x0]
   15fa0:	str	x0, [sp, #168]
   15fa4:	ldr	x0, [sp, #168]
   15fa8:	mov	w1, #0x2                   	// #2
   15fac:	str	w1, [x0, #40]
   15fb0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15fb4:	add	x2, x0, #0x978
   15fb8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15fbc:	add	x1, x0, #0x400
   15fc0:	ldr	x0, [sp, #40]
   15fc4:	bl	4e80 <Perl_newXS_deffile@plt>
   15fc8:	str	x0, [sp, #32]
   15fcc:	ldr	x0, [sp, #32]
   15fd0:	ldr	x0, [x0]
   15fd4:	str	x0, [sp, #176]
   15fd8:	ldr	x0, [sp, #176]
   15fdc:	str	wzr, [x0, #40]
   15fe0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   15fe4:	add	x2, x0, #0x978
   15fe8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   15fec:	add	x1, x0, #0x410
   15ff0:	ldr	x0, [sp, #40]
   15ff4:	bl	4e80 <Perl_newXS_deffile@plt>
   15ff8:	str	x0, [sp, #32]
   15ffc:	ldr	x0, [sp, #32]
   16000:	ldr	x0, [x0]
   16004:	str	x0, [sp, #184]
   16008:	ldr	x0, [sp, #184]
   1600c:	mov	w1, #0x1                   	// #1
   16010:	str	w1, [x0, #40]
   16014:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16018:	add	x2, x0, #0xaa8
   1601c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16020:	add	x1, x0, #0x420
   16024:	ldr	x0, [sp, #40]
   16028:	bl	4e80 <Perl_newXS_deffile@plt>
   1602c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16030:	add	x2, x0, #0xb54
   16034:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16038:	add	x1, x0, #0x438
   1603c:	ldr	x0, [sp, #40]
   16040:	bl	4e80 <Perl_newXS_deffile@plt>
   16044:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16048:	add	x2, x0, #0xc64
   1604c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16050:	add	x1, x0, #0x448
   16054:	ldr	x0, [sp, #40]
   16058:	bl	4e80 <Perl_newXS_deffile@plt>
   1605c:	str	x0, [sp, #32]
   16060:	ldr	x0, [sp, #32]
   16064:	ldr	x0, [x0]
   16068:	str	x0, [sp, #192]
   1606c:	ldr	x0, [sp, #192]
   16070:	mov	w1, #0x6                   	// #6
   16074:	str	w1, [x0, #40]
   16078:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1607c:	add	x2, x0, #0xc64
   16080:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16084:	add	x1, x0, #0x458
   16088:	ldr	x0, [sp, #40]
   1608c:	bl	4e80 <Perl_newXS_deffile@plt>
   16090:	str	x0, [sp, #32]
   16094:	ldr	x0, [sp, #32]
   16098:	ldr	x0, [x0]
   1609c:	str	x0, [sp, #200]
   160a0:	ldr	x0, [sp, #200]
   160a4:	mov	w1, #0x2b                  	// #43
   160a8:	str	w1, [x0, #40]
   160ac:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   160b0:	add	x2, x0, #0xc64
   160b4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   160b8:	add	x1, x0, #0x468
   160bc:	ldr	x0, [sp, #40]
   160c0:	bl	4e80 <Perl_newXS_deffile@plt>
   160c4:	str	x0, [sp, #32]
   160c8:	ldr	x0, [sp, #32]
   160cc:	ldr	x0, [x0]
   160d0:	str	x0, [sp, #208]
   160d4:	ldr	x0, [sp, #208]
   160d8:	mov	w1, #0x11                  	// #17
   160dc:	str	w1, [x0, #40]
   160e0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   160e4:	add	x2, x0, #0xc64
   160e8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   160ec:	add	x1, x0, #0x478
   160f0:	ldr	x0, [sp, #40]
   160f4:	bl	4e80 <Perl_newXS_deffile@plt>
   160f8:	str	x0, [sp, #32]
   160fc:	ldr	x0, [sp, #32]
   16100:	ldr	x0, [x0]
   16104:	str	x0, [sp, #216]
   16108:	ldr	x0, [sp, #216]
   1610c:	mov	w1, #0x16                  	// #22
   16110:	str	w1, [x0, #40]
   16114:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16118:	add	x2, x0, #0xc64
   1611c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16120:	add	x1, x0, #0x488
   16124:	ldr	x0, [sp, #40]
   16128:	bl	4e80 <Perl_newXS_deffile@plt>
   1612c:	str	x0, [sp, #32]
   16130:	ldr	x0, [sp, #32]
   16134:	ldr	x0, [x0]
   16138:	str	x0, [sp, #224]
   1613c:	ldr	x0, [sp, #224]
   16140:	mov	w1, #0x15                  	// #21
   16144:	str	w1, [x0, #40]
   16148:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1614c:	add	x2, x0, #0xc64
   16150:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16154:	add	x1, x0, #0x498
   16158:	ldr	x0, [sp, #40]
   1615c:	bl	4e80 <Perl_newXS_deffile@plt>
   16160:	str	x0, [sp, #32]
   16164:	ldr	x0, [sp, #32]
   16168:	ldr	x0, [x0]
   1616c:	str	x0, [sp, #232]
   16170:	ldr	x0, [sp, #232]
   16174:	mov	w1, #0x13                  	// #19
   16178:	str	w1, [x0, #40]
   1617c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16180:	add	x2, x0, #0xc64
   16184:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16188:	add	x1, x0, #0x4a8
   1618c:	ldr	x0, [sp, #40]
   16190:	bl	4e80 <Perl_newXS_deffile@plt>
   16194:	str	x0, [sp, #32]
   16198:	ldr	x0, [sp, #32]
   1619c:	ldr	x0, [x0]
   161a0:	str	x0, [sp, #240]
   161a4:	ldr	x0, [sp, #240]
   161a8:	mov	w1, #0x2e                  	// #46
   161ac:	str	w1, [x0, #40]
   161b0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   161b4:	add	x2, x0, #0xc64
   161b8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   161bc:	add	x1, x0, #0x4c0
   161c0:	ldr	x0, [sp, #40]
   161c4:	bl	4e80 <Perl_newXS_deffile@plt>
   161c8:	str	x0, [sp, #32]
   161cc:	ldr	x0, [sp, #32]
   161d0:	ldr	x0, [x0]
   161d4:	str	x0, [sp, #248]
   161d8:	ldr	x0, [sp, #248]
   161dc:	mov	w1, #0x2d                  	// #45
   161e0:	str	w1, [x0, #40]
   161e4:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   161e8:	add	x2, x0, #0xc64
   161ec:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   161f0:	add	x1, x0, #0x4d0
   161f4:	ldr	x0, [sp, #40]
   161f8:	bl	4e80 <Perl_newXS_deffile@plt>
   161fc:	str	x0, [sp, #32]
   16200:	ldr	x0, [sp, #32]
   16204:	ldr	x0, [x0]
   16208:	str	x0, [sp, #256]
   1620c:	ldr	x0, [sp, #256]
   16210:	mov	w1, #0x2a                  	// #42
   16214:	str	w1, [x0, #40]
   16218:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1621c:	add	x2, x0, #0xc64
   16220:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16224:	add	x1, x0, #0x4e0
   16228:	ldr	x0, [sp, #40]
   1622c:	bl	4e80 <Perl_newXS_deffile@plt>
   16230:	str	x0, [sp, #32]
   16234:	ldr	x0, [sp, #32]
   16238:	ldr	x0, [x0]
   1623c:	str	x0, [sp, #264]
   16240:	ldr	x0, [sp, #264]
   16244:	mov	w1, #0x12                  	// #18
   16248:	str	w1, [x0, #40]
   1624c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16250:	add	x2, x0, #0xc64
   16254:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16258:	add	x1, x0, #0x4f0
   1625c:	ldr	x0, [sp, #40]
   16260:	bl	4e80 <Perl_newXS_deffile@plt>
   16264:	str	x0, [sp, #32]
   16268:	ldr	x0, [sp, #32]
   1626c:	ldr	x0, [x0]
   16270:	str	x0, [sp, #272]
   16274:	ldr	x0, [sp, #272]
   16278:	mov	w1, #0x17                  	// #23
   1627c:	str	w1, [x0, #40]
   16280:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16284:	add	x2, x0, #0xc64
   16288:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1628c:	add	x1, x0, #0x500
   16290:	ldr	x0, [sp, #40]
   16294:	bl	4e80 <Perl_newXS_deffile@plt>
   16298:	str	x0, [sp, #32]
   1629c:	ldr	x0, [sp, #32]
   162a0:	ldr	x0, [x0]
   162a4:	str	x0, [sp, #280]
   162a8:	ldr	x0, [sp, #280]
   162ac:	mov	w1, #0x19                  	// #25
   162b0:	str	w1, [x0, #40]
   162b4:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   162b8:	add	x2, x0, #0xc64
   162bc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   162c0:	add	x1, x0, #0x518
   162c4:	ldr	x0, [sp, #40]
   162c8:	bl	4e80 <Perl_newXS_deffile@plt>
   162cc:	str	x0, [sp, #32]
   162d0:	ldr	x0, [sp, #32]
   162d4:	ldr	x0, [x0]
   162d8:	str	x0, [sp, #288]
   162dc:	ldr	x0, [sp, #288]
   162e0:	mov	w1, #0x18                  	// #24
   162e4:	str	w1, [x0, #40]
   162e8:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   162ec:	add	x2, x0, #0xc64
   162f0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   162f4:	add	x1, x0, #0x528
   162f8:	ldr	x0, [sp, #40]
   162fc:	bl	4e80 <Perl_newXS_deffile@plt>
   16300:	str	x0, [sp, #32]
   16304:	ldr	x0, [sp, #32]
   16308:	ldr	x0, [x0]
   1630c:	str	x0, [sp, #296]
   16310:	ldr	x0, [sp, #296]
   16314:	mov	w1, #0x2c                  	// #44
   16318:	str	w1, [x0, #40]
   1631c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16320:	add	x2, x0, #0xc64
   16324:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16328:	add	x1, x0, #0x540
   1632c:	ldr	x0, [sp, #40]
   16330:	bl	4e80 <Perl_newXS_deffile@plt>
   16334:	str	x0, [sp, #32]
   16338:	ldr	x0, [sp, #32]
   1633c:	ldr	x0, [x0]
   16340:	str	x0, [sp, #304]
   16344:	ldr	x0, [sp, #304]
   16348:	mov	w1, #0x21                  	// #33
   1634c:	str	w1, [x0, #40]
   16350:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16354:	add	x2, x0, #0xc64
   16358:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1635c:	add	x1, x0, #0x558
   16360:	ldr	x0, [sp, #40]
   16364:	bl	4e80 <Perl_newXS_deffile@plt>
   16368:	str	x0, [sp, #32]
   1636c:	ldr	x0, [sp, #32]
   16370:	ldr	x0, [x0]
   16374:	str	x0, [sp, #312]
   16378:	ldr	x0, [sp, #312]
   1637c:	mov	w1, #0x7                   	// #7
   16380:	str	w1, [x0, #40]
   16384:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16388:	add	x2, x0, #0xc64
   1638c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16390:	add	x1, x0, #0x568
   16394:	ldr	x0, [sp, #40]
   16398:	bl	4e80 <Perl_newXS_deffile@plt>
   1639c:	str	x0, [sp, #32]
   163a0:	ldr	x0, [sp, #32]
   163a4:	ldr	x0, [x0]
   163a8:	str	x0, [sp, #320]
   163ac:	ldr	x0, [sp, #320]
   163b0:	mov	w1, #0xb                   	// #11
   163b4:	str	w1, [x0, #40]
   163b8:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   163bc:	add	x2, x0, #0xc64
   163c0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   163c4:	add	x1, x0, #0x578
   163c8:	ldr	x0, [sp, #40]
   163cc:	bl	4e80 <Perl_newXS_deffile@plt>
   163d0:	str	x0, [sp, #32]
   163d4:	ldr	x0, [sp, #32]
   163d8:	ldr	x0, [x0]
   163dc:	str	x0, [sp, #328]
   163e0:	ldr	x0, [sp, #328]
   163e4:	mov	w1, #0xa                   	// #10
   163e8:	str	w1, [x0, #40]
   163ec:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   163f0:	add	x2, x0, #0xc64
   163f4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   163f8:	add	x1, x0, #0x588
   163fc:	ldr	x0, [sp, #40]
   16400:	bl	4e80 <Perl_newXS_deffile@plt>
   16404:	str	x0, [sp, #32]
   16408:	ldr	x0, [sp, #32]
   1640c:	ldr	x0, [x0]
   16410:	str	x0, [sp, #336]
   16414:	ldr	x0, [sp, #336]
   16418:	mov	w1, #0x9                   	// #9
   1641c:	str	w1, [x0, #40]
   16420:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16424:	add	x2, x0, #0xc64
   16428:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1642c:	add	x1, x0, #0x598
   16430:	ldr	x0, [sp, #40]
   16434:	bl	4e80 <Perl_newXS_deffile@plt>
   16438:	str	x0, [sp, #32]
   1643c:	ldr	x0, [sp, #32]
   16440:	ldr	x0, [x0]
   16444:	str	x0, [sp, #344]
   16448:	ldr	x0, [sp, #344]
   1644c:	mov	w1, #0x35                  	// #53
   16450:	str	w1, [x0, #40]
   16454:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16458:	add	x2, x0, #0xc64
   1645c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16460:	add	x1, x0, #0x5b0
   16464:	ldr	x0, [sp, #40]
   16468:	bl	4e80 <Perl_newXS_deffile@plt>
   1646c:	str	x0, [sp, #32]
   16470:	ldr	x0, [sp, #32]
   16474:	ldr	x0, [x0]
   16478:	str	x0, [sp, #352]
   1647c:	ldr	x0, [sp, #352]
   16480:	mov	w1, #0x36                  	// #54
   16484:	str	w1, [x0, #40]
   16488:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1648c:	add	x2, x0, #0xc64
   16490:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16494:	add	x1, x0, #0x5c8
   16498:	ldr	x0, [sp, #40]
   1649c:	bl	4e80 <Perl_newXS_deffile@plt>
   164a0:	str	x0, [sp, #32]
   164a4:	ldr	x0, [sp, #32]
   164a8:	ldr	x0, [x0]
   164ac:	str	x0, [sp, #360]
   164b0:	ldr	x0, [sp, #360]
   164b4:	mov	w1, #0x38                  	// #56
   164b8:	str	w1, [x0, #40]
   164bc:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   164c0:	add	x2, x0, #0xc64
   164c4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   164c8:	add	x1, x0, #0x5e0
   164cc:	ldr	x0, [sp, #40]
   164d0:	bl	4e80 <Perl_newXS_deffile@plt>
   164d4:	str	x0, [sp, #32]
   164d8:	ldr	x0, [sp, #32]
   164dc:	ldr	x0, [x0]
   164e0:	str	x0, [sp, #368]
   164e4:	ldr	x0, [sp, #368]
   164e8:	mov	w1, #0x1c                  	// #28
   164ec:	str	w1, [x0, #40]
   164f0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   164f4:	add	x2, x0, #0xc64
   164f8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   164fc:	add	x1, x0, #0x5f0
   16500:	ldr	x0, [sp, #40]
   16504:	bl	4e80 <Perl_newXS_deffile@plt>
   16508:	str	x0, [sp, #32]
   1650c:	ldr	x0, [sp, #32]
   16510:	ldr	x0, [x0]
   16514:	str	x0, [sp, #376]
   16518:	ldr	x0, [sp, #376]
   1651c:	mov	w1, #0x3                   	// #3
   16520:	str	w1, [x0, #40]
   16524:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16528:	add	x2, x0, #0xc64
   1652c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16530:	add	x1, x0, #0x600
   16534:	ldr	x0, [sp, #40]
   16538:	bl	4e80 <Perl_newXS_deffile@plt>
   1653c:	str	x0, [sp, #32]
   16540:	ldr	x0, [sp, #32]
   16544:	ldr	x0, [x0]
   16548:	str	x0, [sp, #384]
   1654c:	ldr	x0, [sp, #384]
   16550:	mov	w1, #0x32                  	// #50
   16554:	str	w1, [x0, #40]
   16558:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1655c:	add	x2, x0, #0xc64
   16560:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16564:	add	x1, x0, #0x610
   16568:	ldr	x0, [sp, #40]
   1656c:	bl	4e80 <Perl_newXS_deffile@plt>
   16570:	str	x0, [sp, #32]
   16574:	ldr	x0, [sp, #32]
   16578:	ldr	x0, [x0]
   1657c:	str	x0, [sp, #392]
   16580:	ldr	x0, [sp, #392]
   16584:	mov	w1, #0x33                  	// #51
   16588:	str	w1, [x0, #40]
   1658c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16590:	add	x2, x0, #0xc64
   16594:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16598:	add	x1, x0, #0x620
   1659c:	ldr	x0, [sp, #40]
   165a0:	bl	4e80 <Perl_newXS_deffile@plt>
   165a4:	str	x0, [sp, #32]
   165a8:	ldr	x0, [sp, #32]
   165ac:	ldr	x0, [x0]
   165b0:	str	x0, [sp, #400]
   165b4:	ldr	x0, [sp, #400]
   165b8:	mov	w1, #0x1b                  	// #27
   165bc:	str	w1, [x0, #40]
   165c0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   165c4:	add	x2, x0, #0xc64
   165c8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   165cc:	add	x1, x0, #0x630
   165d0:	ldr	x0, [sp, #40]
   165d4:	bl	4e80 <Perl_newXS_deffile@plt>
   165d8:	str	x0, [sp, #32]
   165dc:	ldr	x0, [sp, #32]
   165e0:	ldr	x0, [x0]
   165e4:	str	x0, [sp, #408]
   165e8:	ldr	x0, [sp, #408]
   165ec:	str	wzr, [x0, #40]
   165f0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   165f4:	add	x2, x0, #0xc64
   165f8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   165fc:	add	x1, x0, #0x640
   16600:	ldr	x0, [sp, #40]
   16604:	bl	4e80 <Perl_newXS_deffile@plt>
   16608:	str	x0, [sp, #32]
   1660c:	ldr	x0, [sp, #32]
   16610:	ldr	x0, [x0]
   16614:	str	x0, [sp, #416]
   16618:	ldr	x0, [sp, #416]
   1661c:	mov	w1, #0x1f                  	// #31
   16620:	str	w1, [x0, #40]
   16624:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16628:	add	x2, x0, #0xc64
   1662c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16630:	add	x1, x0, #0x650
   16634:	ldr	x0, [sp, #40]
   16638:	bl	4e80 <Perl_newXS_deffile@plt>
   1663c:	str	x0, [sp, #32]
   16640:	ldr	x0, [sp, #32]
   16644:	ldr	x0, [x0]
   16648:	str	x0, [sp, #424]
   1664c:	ldr	x0, [sp, #424]
   16650:	mov	w1, #0x34                  	// #52
   16654:	str	w1, [x0, #40]
   16658:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1665c:	add	x2, x0, #0xc64
   16660:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16664:	add	x1, x0, #0x660
   16668:	ldr	x0, [sp, #40]
   1666c:	bl	4e80 <Perl_newXS_deffile@plt>
   16670:	str	x0, [sp, #32]
   16674:	ldr	x0, [sp, #32]
   16678:	ldr	x0, [x0]
   1667c:	str	x0, [sp, #432]
   16680:	ldr	x0, [sp, #432]
   16684:	mov	w1, #0x1d                  	// #29
   16688:	str	w1, [x0, #40]
   1668c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16690:	add	x2, x0, #0xc64
   16694:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16698:	add	x1, x0, #0x670
   1669c:	ldr	x0, [sp, #40]
   166a0:	bl	4e80 <Perl_newXS_deffile@plt>
   166a4:	str	x0, [sp, #32]
   166a8:	ldr	x0, [sp, #32]
   166ac:	ldr	x0, [x0]
   166b0:	str	x0, [sp, #440]
   166b4:	ldr	x0, [sp, #440]
   166b8:	mov	w1, #0x4                   	// #4
   166bc:	str	w1, [x0, #40]
   166c0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   166c4:	add	x2, x0, #0xc64
   166c8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   166cc:	add	x1, x0, #0x680
   166d0:	ldr	x0, [sp, #40]
   166d4:	bl	4e80 <Perl_newXS_deffile@plt>
   166d8:	str	x0, [sp, #32]
   166dc:	ldr	x0, [sp, #32]
   166e0:	ldr	x0, [x0]
   166e4:	str	x0, [sp, #448]
   166e8:	ldr	x0, [sp, #448]
   166ec:	mov	w1, #0x30                  	// #48
   166f0:	str	w1, [x0, #40]
   166f4:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   166f8:	add	x2, x0, #0xc64
   166fc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16700:	add	x1, x0, #0x690
   16704:	ldr	x0, [sp, #40]
   16708:	bl	4e80 <Perl_newXS_deffile@plt>
   1670c:	str	x0, [sp, #32]
   16710:	ldr	x0, [sp, #32]
   16714:	ldr	x0, [x0]
   16718:	str	x0, [sp, #456]
   1671c:	ldr	x0, [sp, #456]
   16720:	mov	w1, #0x1                   	// #1
   16724:	str	w1, [x0, #40]
   16728:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1672c:	add	x2, x0, #0xc64
   16730:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16734:	add	x1, x0, #0x6a0
   16738:	ldr	x0, [sp, #40]
   1673c:	bl	4e80 <Perl_newXS_deffile@plt>
   16740:	str	x0, [sp, #32]
   16744:	ldr	x0, [sp, #32]
   16748:	ldr	x0, [x0]
   1674c:	str	x0, [sp, #464]
   16750:	ldr	x0, [sp, #464]
   16754:	mov	w1, #0x1a                  	// #26
   16758:	str	w1, [x0, #40]
   1675c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16760:	add	x2, x0, #0xc64
   16764:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16768:	add	x1, x0, #0x6b0
   1676c:	ldr	x0, [sp, #40]
   16770:	bl	4e80 <Perl_newXS_deffile@plt>
   16774:	str	x0, [sp, #32]
   16778:	ldr	x0, [sp, #32]
   1677c:	ldr	x0, [x0]
   16780:	str	x0, [sp, #472]
   16784:	ldr	x0, [sp, #472]
   16788:	mov	w1, #0x2f                  	// #47
   1678c:	str	w1, [x0, #40]
   16790:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16794:	add	x2, x0, #0xc64
   16798:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1679c:	add	x1, x0, #0x6c0
   167a0:	ldr	x0, [sp, #40]
   167a4:	bl	4e80 <Perl_newXS_deffile@plt>
   167a8:	str	x0, [sp, #32]
   167ac:	ldr	x0, [sp, #32]
   167b0:	ldr	x0, [x0]
   167b4:	str	x0, [sp, #480]
   167b8:	ldr	x0, [sp, #480]
   167bc:	mov	w1, #0x20                  	// #32
   167c0:	str	w1, [x0, #40]
   167c4:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   167c8:	add	x2, x0, #0xc64
   167cc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   167d0:	add	x1, x0, #0x6d0
   167d4:	ldr	x0, [sp, #40]
   167d8:	bl	4e80 <Perl_newXS_deffile@plt>
   167dc:	str	x0, [sp, #32]
   167e0:	ldr	x0, [sp, #32]
   167e4:	ldr	x0, [x0]
   167e8:	str	x0, [sp, #488]
   167ec:	ldr	x0, [sp, #488]
   167f0:	mov	w1, #0x31                  	// #49
   167f4:	str	w1, [x0, #40]
   167f8:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   167fc:	add	x2, x0, #0xc64
   16800:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16804:	add	x1, x0, #0x6e0
   16808:	ldr	x0, [sp, #40]
   1680c:	bl	4e80 <Perl_newXS_deffile@plt>
   16810:	str	x0, [sp, #32]
   16814:	ldr	x0, [sp, #32]
   16818:	ldr	x0, [x0]
   1681c:	str	x0, [sp, #496]
   16820:	ldr	x0, [sp, #496]
   16824:	mov	w1, #0x2                   	// #2
   16828:	str	w1, [x0, #40]
   1682c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16830:	add	x2, x0, #0xc64
   16834:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16838:	add	x1, x0, #0x6f0
   1683c:	ldr	x0, [sp, #40]
   16840:	bl	4e80 <Perl_newXS_deffile@plt>
   16844:	str	x0, [sp, #32]
   16848:	ldr	x0, [sp, #32]
   1684c:	ldr	x0, [x0]
   16850:	str	x0, [sp, #504]
   16854:	ldr	x0, [sp, #504]
   16858:	mov	w1, #0x1e                  	// #30
   1685c:	str	w1, [x0, #40]
   16860:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16864:	add	x2, x0, #0xc64
   16868:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1686c:	add	x1, x0, #0x700
   16870:	ldr	x0, [sp, #40]
   16874:	bl	4e80 <Perl_newXS_deffile@plt>
   16878:	str	x0, [sp, #32]
   1687c:	ldr	x0, [sp, #32]
   16880:	ldr	x0, [x0]
   16884:	str	x0, [sp, #512]
   16888:	ldr	x0, [sp, #512]
   1688c:	mov	w1, #0x28                  	// #40
   16890:	str	w1, [x0, #40]
   16894:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16898:	add	x2, x0, #0xc64
   1689c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   168a0:	add	x1, x0, #0x710
   168a4:	ldr	x0, [sp, #40]
   168a8:	bl	4e80 <Perl_newXS_deffile@plt>
   168ac:	str	x0, [sp, #32]
   168b0:	ldr	x0, [sp, #32]
   168b4:	ldr	x0, [x0]
   168b8:	str	x0, [sp, #520]
   168bc:	ldr	x0, [sp, #520]
   168c0:	mov	w1, #0x10                  	// #16
   168c4:	str	w1, [x0, #40]
   168c8:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   168cc:	add	x2, x0, #0xc64
   168d0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   168d4:	add	x1, x0, #0x720
   168d8:	ldr	x0, [sp, #40]
   168dc:	bl	4e80 <Perl_newXS_deffile@plt>
   168e0:	str	x0, [sp, #32]
   168e4:	ldr	x0, [sp, #32]
   168e8:	ldr	x0, [x0]
   168ec:	str	x0, [sp, #528]
   168f0:	ldr	x0, [sp, #528]
   168f4:	mov	w1, #0x27                  	// #39
   168f8:	str	w1, [x0, #40]
   168fc:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16900:	add	x2, x0, #0xc64
   16904:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16908:	add	x1, x0, #0x730
   1690c:	ldr	x0, [sp, #40]
   16910:	bl	4e80 <Perl_newXS_deffile@plt>
   16914:	str	x0, [sp, #32]
   16918:	ldr	x0, [sp, #32]
   1691c:	ldr	x0, [x0]
   16920:	str	x0, [sp, #536]
   16924:	ldr	x0, [sp, #536]
   16928:	mov	w1, #0xd                   	// #13
   1692c:	str	w1, [x0, #40]
   16930:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16934:	add	x2, x0, #0xc64
   16938:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1693c:	add	x1, x0, #0x748
   16940:	ldr	x0, [sp, #40]
   16944:	bl	4e80 <Perl_newXS_deffile@plt>
   16948:	str	x0, [sp, #32]
   1694c:	ldr	x0, [sp, #32]
   16950:	ldr	x0, [x0]
   16954:	str	x0, [sp, #544]
   16958:	ldr	x0, [sp, #544]
   1695c:	mov	w1, #0xc                   	// #12
   16960:	str	w1, [x0, #40]
   16964:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16968:	add	x2, x0, #0xc64
   1696c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16970:	add	x1, x0, #0x760
   16974:	ldr	x0, [sp, #40]
   16978:	bl	4e80 <Perl_newXS_deffile@plt>
   1697c:	str	x0, [sp, #32]
   16980:	ldr	x0, [sp, #32]
   16984:	ldr	x0, [x0]
   16988:	str	x0, [sp, #552]
   1698c:	ldr	x0, [sp, #552]
   16990:	mov	w1, #0x14                  	// #20
   16994:	str	w1, [x0, #40]
   16998:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   1699c:	add	x2, x0, #0xc64
   169a0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   169a4:	add	x1, x0, #0x778
   169a8:	ldr	x0, [sp, #40]
   169ac:	bl	4e80 <Perl_newXS_deffile@plt>
   169b0:	str	x0, [sp, #32]
   169b4:	ldr	x0, [sp, #32]
   169b8:	ldr	x0, [x0]
   169bc:	str	x0, [sp, #560]
   169c0:	ldr	x0, [sp, #560]
   169c4:	mov	w1, #0x37                  	// #55
   169c8:	str	w1, [x0, #40]
   169cc:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   169d0:	add	x2, x0, #0xc64
   169d4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   169d8:	add	x1, x0, #0x790
   169dc:	ldr	x0, [sp, #40]
   169e0:	bl	4e80 <Perl_newXS_deffile@plt>
   169e4:	str	x0, [sp, #32]
   169e8:	ldr	x0, [sp, #32]
   169ec:	ldr	x0, [x0]
   169f0:	str	x0, [sp, #568]
   169f4:	ldr	x0, [sp, #568]
   169f8:	mov	w1, #0x22                  	// #34
   169fc:	str	w1, [x0, #40]
   16a00:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16a04:	add	x2, x0, #0xc64
   16a08:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16a0c:	add	x1, x0, #0x7a8
   16a10:	ldr	x0, [sp, #40]
   16a14:	bl	4e80 <Perl_newXS_deffile@plt>
   16a18:	str	x0, [sp, #32]
   16a1c:	ldr	x0, [sp, #32]
   16a20:	ldr	x0, [x0]
   16a24:	str	x0, [sp, #576]
   16a28:	ldr	x0, [sp, #576]
   16a2c:	mov	w1, #0x8                   	// #8
   16a30:	str	w1, [x0, #40]
   16a34:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16a38:	add	x2, x0, #0xc64
   16a3c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16a40:	add	x1, x0, #0x7c0
   16a44:	ldr	x0, [sp, #40]
   16a48:	bl	4e80 <Perl_newXS_deffile@plt>
   16a4c:	str	x0, [sp, #32]
   16a50:	ldr	x0, [sp, #32]
   16a54:	ldr	x0, [x0]
   16a58:	str	x0, [sp, #584]
   16a5c:	ldr	x0, [sp, #584]
   16a60:	mov	w1, #0x24                  	// #36
   16a64:	str	w1, [x0, #40]
   16a68:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16a6c:	add	x2, x0, #0xc64
   16a70:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16a74:	add	x1, x0, #0x7d8
   16a78:	ldr	x0, [sp, #40]
   16a7c:	bl	4e80 <Perl_newXS_deffile@plt>
   16a80:	str	x0, [sp, #32]
   16a84:	ldr	x0, [sp, #32]
   16a88:	ldr	x0, [x0]
   16a8c:	str	x0, [sp, #592]
   16a90:	ldr	x0, [sp, #592]
   16a94:	mov	w1, #0x23                  	// #35
   16a98:	str	w1, [x0, #40]
   16a9c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16aa0:	add	x2, x0, #0xc64
   16aa4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16aa8:	add	x1, x0, #0x7f0
   16aac:	ldr	x0, [sp, #40]
   16ab0:	bl	4e80 <Perl_newXS_deffile@plt>
   16ab4:	str	x0, [sp, #32]
   16ab8:	ldr	x0, [sp, #32]
   16abc:	ldr	x0, [x0]
   16ac0:	str	x0, [sp, #600]
   16ac4:	ldr	x0, [sp, #600]
   16ac8:	mov	w1, #0x25                  	// #37
   16acc:	str	w1, [x0, #40]
   16ad0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16ad4:	add	x2, x0, #0xc64
   16ad8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16adc:	add	x1, x0, #0x808
   16ae0:	ldr	x0, [sp, #40]
   16ae4:	bl	4e80 <Perl_newXS_deffile@plt>
   16ae8:	str	x0, [sp, #32]
   16aec:	ldr	x0, [sp, #32]
   16af0:	ldr	x0, [x0]
   16af4:	str	x0, [sp, #608]
   16af8:	ldr	x0, [sp, #608]
   16afc:	mov	w1, #0x26                  	// #38
   16b00:	str	w1, [x0, #40]
   16b04:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16b08:	add	x2, x0, #0xc64
   16b0c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16b10:	add	x1, x0, #0x820
   16b14:	ldr	x0, [sp, #40]
   16b18:	bl	4e80 <Perl_newXS_deffile@plt>
   16b1c:	str	x0, [sp, #32]
   16b20:	ldr	x0, [sp, #32]
   16b24:	ldr	x0, [x0]
   16b28:	str	x0, [sp, #616]
   16b2c:	ldr	x0, [sp, #616]
   16b30:	mov	w1, #0x29                  	// #41
   16b34:	str	w1, [x0, #40]
   16b38:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16b3c:	add	x2, x0, #0xc64
   16b40:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16b44:	add	x1, x0, #0x830
   16b48:	ldr	x0, [sp, #40]
   16b4c:	bl	4e80 <Perl_newXS_deffile@plt>
   16b50:	str	x0, [sp, #32]
   16b54:	ldr	x0, [sp, #32]
   16b58:	ldr	x0, [x0]
   16b5c:	str	x0, [sp, #624]
   16b60:	ldr	x0, [sp, #624]
   16b64:	mov	w1, #0xf                   	// #15
   16b68:	str	w1, [x0, #40]
   16b6c:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16b70:	add	x2, x0, #0xc64
   16b74:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16b78:	add	x1, x0, #0x840
   16b7c:	ldr	x0, [sp, #40]
   16b80:	bl	4e80 <Perl_newXS_deffile@plt>
   16b84:	str	x0, [sp, #32]
   16b88:	ldr	x0, [sp, #32]
   16b8c:	ldr	x0, [x0]
   16b90:	str	x0, [sp, #632]
   16b94:	ldr	x0, [sp, #632]
   16b98:	mov	w1, #0xe                   	// #14
   16b9c:	str	w1, [x0, #40]
   16ba0:	adrp	x0, a000 <XS_B_svref_2object+0x98>
   16ba4:	add	x2, x0, #0xc64
   16ba8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16bac:	add	x1, x0, #0x850
   16bb0:	ldr	x0, [sp, #40]
   16bb4:	bl	4e80 <Perl_newXS_deffile@plt>
   16bb8:	str	x0, [sp, #32]
   16bbc:	ldr	x0, [sp, #32]
   16bc0:	ldr	x0, [x0]
   16bc4:	str	x0, [sp, #640]
   16bc8:	ldr	x0, [sp, #640]
   16bcc:	mov	w1, #0x5                   	// #5
   16bd0:	str	w1, [x0, #40]
   16bd4:	adrp	x0, c000 <XS_B__OP_next+0x139c>
   16bd8:	add	x2, x0, #0x184
   16bdc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16be0:	add	x1, x0, #0x860
   16be4:	ldr	x0, [sp, #40]
   16be8:	bl	4e80 <Perl_newXS_deffile@plt>
   16bec:	adrp	x0, c000 <XS_B__OP_next+0x139c>
   16bf0:	add	x2, x0, #0x310
   16bf4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16bf8:	add	x1, x0, #0x870
   16bfc:	ldr	x0, [sp, #40]
   16c00:	bl	4e80 <Perl_newXS_deffile@plt>
   16c04:	adrp	x0, c000 <XS_B__OP_next+0x139c>
   16c08:	add	x2, x0, #0x6f0
   16c0c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16c10:	add	x1, x0, #0x888
   16c14:	ldr	x0, [sp, #40]
   16c18:	bl	4e80 <Perl_newXS_deffile@plt>
   16c1c:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16c20:	add	x2, x0, #0x398
   16c24:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16c28:	add	x1, x0, #0x8a0
   16c2c:	ldr	x0, [sp, #40]
   16c30:	bl	4e80 <Perl_newXS_deffile@plt>
   16c34:	str	x0, [sp, #32]
   16c38:	ldr	x0, [sp, #32]
   16c3c:	ldr	x0, [x0]
   16c40:	str	x0, [sp, #648]
   16c44:	ldr	x0, [sp, #648]
   16c48:	mov	w1, #0xffffffff            	// #-1
   16c4c:	str	w1, [x0, #40]
   16c50:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16c54:	add	x2, x0, #0x398
   16c58:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16c5c:	add	x1, x0, #0x8b0
   16c60:	ldr	x0, [sp, #40]
   16c64:	bl	4e80 <Perl_newXS_deffile@plt>
   16c68:	str	x0, [sp, #32]
   16c6c:	ldr	x0, [sp, #32]
   16c70:	ldr	x0, [x0]
   16c74:	str	x0, [sp, #656]
   16c78:	ldr	x0, [sp, #656]
   16c7c:	mov	w1, #0xe00000              	// #14680064
   16c80:	str	w1, [x0, #40]
   16c84:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16c88:	add	x2, x0, #0x398
   16c8c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16c90:	add	x1, x0, #0x8c0
   16c94:	ldr	x0, [sp, #40]
   16c98:	bl	4e80 <Perl_newXS_deffile@plt>
   16c9c:	str	x0, [sp, #32]
   16ca0:	ldr	x0, [sp, #32]
   16ca4:	ldr	x0, [x0]
   16ca8:	str	x0, [sp, #664]
   16cac:	ldr	x0, [sp, #664]
   16cb0:	mov	w1, #0x400                 	// #1024
   16cb4:	str	w1, [x0, #40]
   16cb8:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16cbc:	add	x2, x0, #0x398
   16cc0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16cc4:	add	x1, x0, #0x8d0
   16cc8:	ldr	x0, [sp, #40]
   16ccc:	bl	4e80 <Perl_newXS_deffile@plt>
   16cd0:	str	x0, [sp, #32]
   16cd4:	ldr	x0, [sp, #32]
   16cd8:	ldr	x0, [x0]
   16cdc:	str	x0, [sp, #672]
   16ce0:	ldr	x0, [sp, #672]
   16ce4:	str	wzr, [x0, #40]
   16ce8:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16cec:	add	x2, x0, #0x398
   16cf0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16cf4:	add	x1, x0, #0x8e0
   16cf8:	ldr	x0, [sp, #40]
   16cfc:	bl	4e80 <Perl_newXS_deffile@plt>
   16d00:	str	x0, [sp, #32]
   16d04:	ldr	x0, [sp, #32]
   16d08:	ldr	x0, [x0]
   16d0c:	str	x0, [sp, #680]
   16d10:	ldr	x0, [sp, #680]
   16d14:	mov	w1, #0x800                 	// #2048
   16d18:	str	w1, [x0, #40]
   16d1c:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16d20:	add	x2, x0, #0x398
   16d24:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16d28:	add	x1, x0, #0x8f0
   16d2c:	ldr	x0, [sp, #40]
   16d30:	bl	4e80 <Perl_newXS_deffile@plt>
   16d34:	str	x0, [sp, #32]
   16d38:	ldr	x0, [sp, #32]
   16d3c:	ldr	x0, [x0]
   16d40:	str	x0, [sp, #688]
   16d44:	ldr	x0, [sp, #688]
   16d48:	mov	w1, #0xff                  	// #255
   16d4c:	str	w1, [x0, #40]
   16d50:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16d54:	add	x2, x0, #0x680
   16d58:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16d5c:	add	x1, x0, #0x900
   16d60:	ldr	x0, [sp, #40]
   16d64:	bl	4e80 <Perl_newXS_deffile@plt>
   16d68:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16d6c:	add	x2, x0, #0x858
   16d70:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16d74:	add	x1, x0, #0x918
   16d78:	ldr	x0, [sp, #40]
   16d7c:	bl	4e80 <Perl_newXS_deffile@plt>
   16d80:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16d84:	add	x2, x0, #0xb28
   16d88:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16d8c:	add	x1, x0, #0x928
   16d90:	ldr	x0, [sp, #40]
   16d94:	bl	4e80 <Perl_newXS_deffile@plt>
   16d98:	str	x0, [sp, #32]
   16d9c:	ldr	x0, [sp, #32]
   16da0:	ldr	x0, [x0]
   16da4:	str	x0, [sp, #696]
   16da8:	ldr	x0, [sp, #696]
   16dac:	mov	w1, #0x18                  	// #24
   16db0:	movk	w1, #0x9, lsl #16
   16db4:	str	w1, [x0, #40]
   16db8:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16dbc:	add	x2, x0, #0xb28
   16dc0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16dc4:	add	x1, x0, #0x938
   16dc8:	ldr	x0, [sp, #40]
   16dcc:	bl	4e80 <Perl_newXS_deffile@plt>
   16dd0:	str	x0, [sp, #32]
   16dd4:	ldr	x0, [sp, #32]
   16dd8:	ldr	x0, [x0]
   16ddc:	str	x0, [sp, #704]
   16de0:	ldr	x0, [sp, #704]
   16de4:	mov	w1, #0x20                  	// #32
   16de8:	movk	w1, #0x1, lsl #16
   16dec:	str	w1, [x0, #40]
   16df0:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16df4:	add	x2, x0, #0xb28
   16df8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16dfc:	add	x1, x0, #0x948
   16e00:	ldr	x0, [sp, #40]
   16e04:	bl	4e80 <Perl_newXS_deffile@plt>
   16e08:	str	x0, [sp, #32]
   16e0c:	ldr	x0, [sp, #32]
   16e10:	ldr	x0, [x0]
   16e14:	str	x0, [sp, #712]
   16e18:	ldr	x0, [sp, #712]
   16e1c:	mov	w1, #0x5c                  	// #92
   16e20:	movk	w1, #0x4, lsl #16
   16e24:	str	w1, [x0, #40]
   16e28:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16e2c:	add	x2, x0, #0xb28
   16e30:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16e34:	add	x1, x0, #0x958
   16e38:	ldr	x0, [sp, #40]
   16e3c:	bl	4e80 <Perl_newXS_deffile@plt>
   16e40:	str	x0, [sp, #32]
   16e44:	ldr	x0, [sp, #32]
   16e48:	ldr	x0, [x0]
   16e4c:	str	x0, [sp, #720]
   16e50:	ldr	x0, [sp, #720]
   16e54:	mov	w1, #0x40                  	// #64
   16e58:	movk	w1, #0x6, lsl #16
   16e5c:	str	w1, [x0, #40]
   16e60:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16e64:	add	x2, x0, #0xb28
   16e68:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16e6c:	add	x1, x0, #0x968
   16e70:	ldr	x0, [sp, #40]
   16e74:	bl	4e80 <Perl_newXS_deffile@plt>
   16e78:	str	x0, [sp, #32]
   16e7c:	ldr	x0, [sp, #32]
   16e80:	ldr	x0, [x0]
   16e84:	str	x0, [sp, #728]
   16e88:	ldr	x0, [sp, #728]
   16e8c:	mov	w1, #0x50                  	// #80
   16e90:	str	w1, [x0, #40]
   16e94:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16e98:	add	x2, x0, #0xb28
   16e9c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16ea0:	add	x1, x0, #0x978
   16ea4:	ldr	x0, [sp, #40]
   16ea8:	bl	4e80 <Perl_newXS_deffile@plt>
   16eac:	str	x0, [sp, #32]
   16eb0:	ldr	x0, [sp, #32]
   16eb4:	ldr	x0, [x0]
   16eb8:	str	x0, [sp, #736]
   16ebc:	ldr	x0, [sp, #736]
   16ec0:	mov	w1, #0x58                  	// #88
   16ec4:	movk	w1, #0x4, lsl #16
   16ec8:	str	w1, [x0, #40]
   16ecc:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16ed0:	add	x2, x0, #0xb28
   16ed4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16ed8:	add	x1, x0, #0x990
   16edc:	ldr	x0, [sp, #40]
   16ee0:	bl	4e80 <Perl_newXS_deffile@plt>
   16ee4:	str	x0, [sp, #32]
   16ee8:	ldr	x0, [sp, #32]
   16eec:	ldr	x0, [x0]
   16ef0:	str	x0, [sp, #744]
   16ef4:	ldr	x0, [sp, #744]
   16ef8:	mov	w1, #0x20                  	// #32
   16efc:	str	w1, [x0, #40]
   16f00:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16f04:	add	x2, x0, #0xb28
   16f08:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16f0c:	add	x1, x0, #0x9a0
   16f10:	ldr	x0, [sp, #40]
   16f14:	bl	4e80 <Perl_newXS_deffile@plt>
   16f18:	str	x0, [sp, #32]
   16f1c:	ldr	x0, [sp, #32]
   16f20:	ldr	x0, [x0]
   16f24:	str	x0, [sp, #752]
   16f28:	ldr	x0, [sp, #752]
   16f2c:	mov	w1, #0x10                  	// #16
   16f30:	movk	w1, #0x3, lsl #16
   16f34:	str	w1, [x0, #40]
   16f38:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16f3c:	add	x2, x0, #0xb28
   16f40:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16f44:	add	x1, x0, #0x9b0
   16f48:	ldr	x0, [sp, #40]
   16f4c:	bl	4e80 <Perl_newXS_deffile@plt>
   16f50:	str	x0, [sp, #32]
   16f54:	ldr	x0, [sp, #32]
   16f58:	ldr	x0, [x0]
   16f5c:	str	x0, [sp, #760]
   16f60:	ldr	x0, [sp, #760]
   16f64:	mov	w1, #0x28                  	// #40
   16f68:	str	w1, [x0, #40]
   16f6c:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16f70:	add	x2, x0, #0xb28
   16f74:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16f78:	add	x1, x0, #0x9c0
   16f7c:	ldr	x0, [sp, #40]
   16f80:	bl	4e80 <Perl_newXS_deffile@plt>
   16f84:	str	x0, [sp, #32]
   16f88:	ldr	x0, [sp, #32]
   16f8c:	ldr	x0, [x0]
   16f90:	str	x0, [sp, #768]
   16f94:	ldr	x0, [sp, #768]
   16f98:	mov	w1, #0x10                  	// #16
   16f9c:	movk	w1, #0x3, lsl #16
   16fa0:	str	w1, [x0, #40]
   16fa4:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16fa8:	add	x2, x0, #0xb28
   16fac:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16fb0:	add	x1, x0, #0x9d0
   16fb4:	ldr	x0, [sp, #40]
   16fb8:	bl	4e80 <Perl_newXS_deffile@plt>
   16fbc:	str	x0, [sp, #32]
   16fc0:	ldr	x0, [sp, #32]
   16fc4:	ldr	x0, [x0]
   16fc8:	str	x0, [sp, #776]
   16fcc:	ldr	x0, [sp, #776]
   16fd0:	mov	w1, #0x18                  	// #24
   16fd4:	movk	w1, #0x3, lsl #16
   16fd8:	str	w1, [x0, #40]
   16fdc:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   16fe0:	add	x2, x0, #0xb28
   16fe4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   16fe8:	add	x1, x0, #0x9e0
   16fec:	ldr	x0, [sp, #40]
   16ff0:	bl	4e80 <Perl_newXS_deffile@plt>
   16ff4:	str	x0, [sp, #32]
   16ff8:	ldr	x0, [sp, #32]
   16ffc:	ldr	x0, [x0]
   17000:	str	x0, [sp, #784]
   17004:	ldr	x0, [sp, #784]
   17008:	mov	w1, #0x78                  	// #120
   1700c:	str	w1, [x0, #40]
   17010:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17014:	add	x2, x0, #0xb28
   17018:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1701c:	add	x1, x0, #0x9f8
   17020:	ldr	x0, [sp, #40]
   17024:	bl	4e80 <Perl_newXS_deffile@plt>
   17028:	str	x0, [sp, #32]
   1702c:	ldr	x0, [sp, #32]
   17030:	ldr	x0, [x0]
   17034:	str	x0, [sp, #792]
   17038:	ldr	x0, [sp, #792]
   1703c:	mov	w1, #0x70                  	// #112
   17040:	movk	w1, #0x6, lsl #16
   17044:	str	w1, [x0, #40]
   17048:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   1704c:	add	x2, x0, #0xb28
   17050:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17054:	add	x1, x0, #0xa10
   17058:	ldr	x0, [sp, #40]
   1705c:	bl	4e80 <Perl_newXS_deffile@plt>
   17060:	str	x0, [sp, #32]
   17064:	ldr	x0, [sp, #32]
   17068:	ldr	x0, [x0]
   1706c:	str	x0, [sp, #800]
   17070:	ldr	x0, [sp, #800]
   17074:	mov	w1, #0x68                  	// #104
   17078:	str	w1, [x0, #40]
   1707c:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17080:	add	x2, x0, #0xb28
   17084:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17088:	add	x1, x0, #0xa20
   1708c:	ldr	x0, [sp, #40]
   17090:	bl	4e80 <Perl_newXS_deffile@plt>
   17094:	str	x0, [sp, #32]
   17098:	ldr	x0, [sp, #32]
   1709c:	ldr	x0, [x0]
   170a0:	str	x0, [sp, #808]
   170a4:	ldr	x0, [sp, #808]
   170a8:	mov	w1, #0x60                  	// #96
   170ac:	movk	w1, #0x6, lsl #16
   170b0:	str	w1, [x0, #40]
   170b4:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   170b8:	add	x2, x0, #0xb28
   170bc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   170c0:	add	x1, x0, #0xa30
   170c4:	ldr	x0, [sp, #40]
   170c8:	bl	4e80 <Perl_newXS_deffile@plt>
   170cc:	str	x0, [sp, #32]
   170d0:	ldr	x0, [sp, #32]
   170d4:	ldr	x0, [x0]
   170d8:	str	x0, [sp, #816]
   170dc:	ldr	x0, [sp, #816]
   170e0:	mov	w1, #0x81                  	// #129
   170e4:	movk	w1, #0x5, lsl #16
   170e8:	str	w1, [x0, #40]
   170ec:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   170f0:	add	x2, x0, #0xb28
   170f4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   170f8:	add	x1, x0, #0xa40
   170fc:	ldr	x0, [sp, #40]
   17100:	bl	4e80 <Perl_newXS_deffile@plt>
   17104:	str	x0, [sp, #32]
   17108:	ldr	x0, [sp, #32]
   1710c:	ldr	x0, [x0]
   17110:	str	x0, [sp, #824]
   17114:	ldr	x0, [sp, #824]
   17118:	mov	w1, #0x80                  	// #128
   1711c:	movk	w1, #0x8, lsl #16
   17120:	str	w1, [x0, #40]
   17124:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17128:	add	x2, x0, #0xb28
   1712c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17130:	add	x1, x0, #0xa50
   17134:	ldr	x0, [sp, #40]
   17138:	bl	4e80 <Perl_newXS_deffile@plt>
   1713c:	str	x0, [sp, #32]
   17140:	ldr	x0, [sp, #32]
   17144:	ldr	x0, [x0]
   17148:	str	x0, [sp, #832]
   1714c:	ldr	x0, [sp, #832]
   17150:	mov	w1, #0x20                  	// #32
   17154:	movk	w1, #0x1, lsl #16
   17158:	str	w1, [x0, #40]
   1715c:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17160:	add	x2, x0, #0xb28
   17164:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17168:	add	x1, x0, #0xa60
   1716c:	ldr	x0, [sp, #40]
   17170:	bl	4e80 <Perl_newXS_deffile@plt>
   17174:	str	x0, [sp, #32]
   17178:	ldr	x0, [sp, #32]
   1717c:	ldr	x0, [x0]
   17180:	str	x0, [sp, #840]
   17184:	ldr	x0, [sp, #840]
   17188:	mov	w1, #0x48                  	// #72
   1718c:	movk	w1, #0x1, lsl #16
   17190:	str	w1, [x0, #40]
   17194:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17198:	add	x2, x0, #0xb28
   1719c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   171a0:	add	x1, x0, #0xa78
   171a4:	ldr	x0, [sp, #40]
   171a8:	bl	4e80 <Perl_newXS_deffile@plt>
   171ac:	str	x0, [sp, #32]
   171b0:	ldr	x0, [sp, #32]
   171b4:	ldr	x0, [x0]
   171b8:	str	x0, [sp, #848]
   171bc:	ldr	x0, [sp, #848]
   171c0:	mov	w1, #0x38                  	// #56
   171c4:	movk	w1, #0x1, lsl #16
   171c8:	str	w1, [x0, #40]
   171cc:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   171d0:	add	x2, x0, #0xb28
   171d4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   171d8:	add	x1, x0, #0xa88
   171dc:	ldr	x0, [sp, #40]
   171e0:	bl	4e80 <Perl_newXS_deffile@plt>
   171e4:	str	x0, [sp, #32]
   171e8:	ldr	x0, [sp, #32]
   171ec:	ldr	x0, [x0]
   171f0:	str	x0, [sp, #856]
   171f4:	ldr	x0, [sp, #856]
   171f8:	mov	w1, #0x40                  	// #64
   171fc:	movk	w1, #0x1, lsl #16
   17200:	str	w1, [x0, #40]
   17204:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17208:	add	x2, x0, #0xb28
   1720c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17210:	add	x1, x0, #0xa98
   17214:	ldr	x0, [sp, #40]
   17218:	bl	4e80 <Perl_newXS_deffile@plt>
   1721c:	str	x0, [sp, #32]
   17220:	ldr	x0, [sp, #32]
   17224:	ldr	x0, [x0]
   17228:	str	x0, [sp, #864]
   1722c:	ldr	x0, [sp, #864]
   17230:	mov	w1, #0x58                  	// #88
   17234:	str	w1, [x0, #40]
   17238:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   1723c:	add	x2, x0, #0xb28
   17240:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17244:	add	x1, x0, #0xaa8
   17248:	ldr	x0, [sp, #40]
   1724c:	bl	4e80 <Perl_newXS_deffile@plt>
   17250:	str	x0, [sp, #32]
   17254:	ldr	x0, [sp, #32]
   17258:	ldr	x0, [x0]
   1725c:	str	x0, [sp, #872]
   17260:	ldr	x0, [sp, #872]
   17264:	mov	w1, #0x50                  	// #80
   17268:	movk	w1, #0x6, lsl #16
   1726c:	str	w1, [x0, #40]
   17270:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17274:	add	x2, x0, #0xb28
   17278:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1727c:	add	x1, x0, #0xab8
   17280:	ldr	x0, [sp, #40]
   17284:	bl	4e80 <Perl_newXS_deffile@plt>
   17288:	str	x0, [sp, #32]
   1728c:	ldr	x0, [sp, #32]
   17290:	ldr	x0, [x0]
   17294:	str	x0, [sp, #880]
   17298:	ldr	x0, [sp, #880]
   1729c:	mov	w1, #0x20                  	// #32
   172a0:	movk	w1, #0x1, lsl #16
   172a4:	str	w1, [x0, #40]
   172a8:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   172ac:	add	x2, x0, #0xb28
   172b0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   172b4:	add	x1, x0, #0xac8
   172b8:	ldr	x0, [sp, #40]
   172bc:	bl	4e80 <Perl_newXS_deffile@plt>
   172c0:	str	x0, [sp, #32]
   172c4:	ldr	x0, [sp, #32]
   172c8:	ldr	x0, [x0]
   172cc:	str	x0, [sp, #888]
   172d0:	ldr	x0, [sp, #888]
   172d4:	mov	w1, #0x20                  	// #32
   172d8:	movk	w1, #0x2, lsl #16
   172dc:	str	w1, [x0, #40]
   172e0:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   172e4:	add	x2, x0, #0xb28
   172e8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   172ec:	add	x1, x0, #0xad8
   172f0:	ldr	x0, [sp, #40]
   172f4:	bl	4e80 <Perl_newXS_deffile@plt>
   172f8:	str	x0, [sp, #32]
   172fc:	ldr	x0, [sp, #32]
   17300:	ldr	x0, [x0]
   17304:	str	x0, [sp, #896]
   17308:	ldr	x0, [sp, #896]
   1730c:	mov	w1, #0x28                  	// #40
   17310:	movk	w1, #0x7, lsl #16
   17314:	str	w1, [x0, #40]
   17318:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   1731c:	add	x2, x0, #0xb28
   17320:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17324:	add	x1, x0, #0xae8
   17328:	ldr	x0, [sp, #40]
   1732c:	bl	4e80 <Perl_newXS_deffile@plt>
   17330:	str	x0, [sp, #32]
   17334:	ldr	x0, [sp, #32]
   17338:	ldr	x0, [x0]
   1733c:	str	x0, [sp, #904]
   17340:	ldr	x0, [sp, #904]
   17344:	mov	w1, #0x10                  	// #16
   17348:	movk	w1, #0x3, lsl #16
   1734c:	str	w1, [x0, #40]
   17350:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17354:	add	x2, x0, #0xb28
   17358:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1735c:	add	x1, x0, #0xaf8
   17360:	ldr	x0, [sp, #40]
   17364:	bl	4e80 <Perl_newXS_deffile@plt>
   17368:	str	x0, [sp, #32]
   1736c:	ldr	x0, [sp, #32]
   17370:	ldr	x0, [x0]
   17374:	str	x0, [sp, #912]
   17378:	ldr	x0, [sp, #912]
   1737c:	mov	w1, #0x18                  	// #24
   17380:	movk	w1, #0x3, lsl #16
   17384:	str	w1, [x0, #40]
   17388:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   1738c:	add	x2, x0, #0xb28
   17390:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17394:	add	x1, x0, #0xb08
   17398:	ldr	x0, [sp, #40]
   1739c:	bl	4e80 <Perl_newXS_deffile@plt>
   173a0:	str	x0, [sp, #32]
   173a4:	ldr	x0, [sp, #32]
   173a8:	ldr	x0, [x0]
   173ac:	str	x0, [sp, #920]
   173b0:	ldr	x0, [sp, #920]
   173b4:	mov	w1, #0x40                  	// #64
   173b8:	str	w1, [x0, #40]
   173bc:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   173c0:	add	x2, x0, #0xb28
   173c4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   173c8:	add	x1, x0, #0xb18
   173cc:	ldr	x0, [sp, #40]
   173d0:	bl	4e80 <Perl_newXS_deffile@plt>
   173d4:	str	x0, [sp, #32]
   173d8:	ldr	x0, [sp, #32]
   173dc:	ldr	x0, [x0]
   173e0:	str	x0, [sp, #928]
   173e4:	ldr	x0, [sp, #928]
   173e8:	mov	w1, #0x38                  	// #56
   173ec:	movk	w1, #0x4, lsl #16
   173f0:	str	w1, [x0, #40]
   173f4:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   173f8:	add	x2, x0, #0xb28
   173fc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17400:	add	x1, x0, #0xb30
   17404:	ldr	x0, [sp, #40]
   17408:	bl	4e80 <Perl_newXS_deffile@plt>
   1740c:	str	x0, [sp, #32]
   17410:	ldr	x0, [sp, #32]
   17414:	ldr	x0, [x0]
   17418:	str	x0, [sp, #936]
   1741c:	ldr	x0, [sp, #936]
   17420:	mov	w1, #0x30                  	// #48
   17424:	movk	w1, #0x4, lsl #16
   17428:	str	w1, [x0, #40]
   1742c:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17430:	add	x2, x0, #0xb28
   17434:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17438:	add	x1, x0, #0xb48
   1743c:	ldr	x0, [sp, #40]
   17440:	bl	4e80 <Perl_newXS_deffile@plt>
   17444:	str	x0, [sp, #32]
   17448:	ldr	x0, [sp, #32]
   1744c:	ldr	x0, [x0]
   17450:	str	x0, [sp, #944]
   17454:	ldr	x0, [sp, #944]
   17458:	mov	w1, #0x48                  	// #72
   1745c:	movk	w1, #0x8, lsl #16
   17460:	str	w1, [x0, #40]
   17464:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17468:	add	x2, x0, #0xb28
   1746c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17470:	add	x1, x0, #0xb58
   17474:	ldr	x0, [sp, #40]
   17478:	bl	4e80 <Perl_newXS_deffile@plt>
   1747c:	str	x0, [sp, #32]
   17480:	ldr	x0, [sp, #32]
   17484:	ldr	x0, [x0]
   17488:	str	x0, [sp, #952]
   1748c:	ldr	x0, [sp, #952]
   17490:	str	wzr, [x0, #40]
   17494:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   17498:	add	x2, x0, #0xfc0
   1749c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   174a0:	add	x1, x0, #0xb70
   174a4:	ldr	x0, [sp, #40]
   174a8:	bl	4e80 <Perl_newXS_deffile@plt>
   174ac:	str	x0, [sp, #32]
   174b0:	ldr	x0, [sp, #32]
   174b4:	ldr	x0, [x0]
   174b8:	str	x0, [sp, #960]
   174bc:	ldr	x0, [sp, #960]
   174c0:	mov	w1, #0x1                   	// #1
   174c4:	str	w1, [x0, #40]
   174c8:	adrp	x0, d000 <XS_B__UNOP_AUX_aux_list+0x910>
   174cc:	add	x2, x0, #0xfc0
   174d0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   174d4:	add	x1, x0, #0xb88
   174d8:	ldr	x0, [sp, #40]
   174dc:	bl	4e80 <Perl_newXS_deffile@plt>
   174e0:	str	x0, [sp, #32]
   174e4:	ldr	x0, [sp, #32]
   174e8:	ldr	x0, [x0]
   174ec:	str	x0, [sp, #968]
   174f0:	ldr	x0, [sp, #968]
   174f4:	str	wzr, [x0, #40]
   174f8:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   174fc:	add	x2, x0, #0x254
   17500:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17504:	add	x1, x0, #0xb98
   17508:	ldr	x0, [sp, #40]
   1750c:	bl	4e80 <Perl_newXS_deffile@plt>
   17510:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   17514:	add	x2, x0, #0x528
   17518:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1751c:	add	x1, x0, #0xba8
   17520:	ldr	x0, [sp, #40]
   17524:	bl	4e80 <Perl_newXS_deffile@plt>
   17528:	str	x0, [sp, #32]
   1752c:	ldr	x0, [sp, #32]
   17530:	ldr	x0, [x0]
   17534:	str	x0, [sp, #976]
   17538:	ldr	x0, [sp, #976]
   1753c:	str	wzr, [x0, #40]
   17540:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   17544:	add	x2, x0, #0x528
   17548:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1754c:	add	x1, x0, #0xbc0
   17550:	ldr	x0, [sp, #40]
   17554:	bl	4e80 <Perl_newXS_deffile@plt>
   17558:	str	x0, [sp, #32]
   1755c:	ldr	x0, [sp, #32]
   17560:	ldr	x0, [x0]
   17564:	str	x0, [sp, #984]
   17568:	ldr	x0, [sp, #984]
   1756c:	mov	w1, #0x3                   	// #3
   17570:	str	w1, [x0, #40]
   17574:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   17578:	add	x2, x0, #0x528
   1757c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17580:	add	x1, x0, #0xbd8
   17584:	ldr	x0, [sp, #40]
   17588:	bl	4e80 <Perl_newXS_deffile@plt>
   1758c:	str	x0, [sp, #32]
   17590:	ldr	x0, [sp, #32]
   17594:	ldr	x0, [x0]
   17598:	str	x0, [sp, #992]
   1759c:	ldr	x0, [sp, #992]
   175a0:	mov	w1, #0x1                   	// #1
   175a4:	str	w1, [x0, #40]
   175a8:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   175ac:	add	x2, x0, #0x528
   175b0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   175b4:	add	x1, x0, #0xbf0
   175b8:	ldr	x0, [sp, #40]
   175bc:	bl	4e80 <Perl_newXS_deffile@plt>
   175c0:	str	x0, [sp, #32]
   175c4:	ldr	x0, [sp, #32]
   175c8:	ldr	x0, [x0]
   175cc:	str	x0, [sp, #1000]
   175d0:	ldr	x0, [sp, #1000]
   175d4:	mov	w1, #0x2                   	// #2
   175d8:	str	w1, [x0, #40]
   175dc:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   175e0:	add	x2, x0, #0x958
   175e4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   175e8:	add	x1, x0, #0xc08
   175ec:	ldr	x0, [sp, #40]
   175f0:	bl	4e80 <Perl_newXS_deffile@plt>
   175f4:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   175f8:	add	x2, x0, #0xb18
   175fc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17600:	add	x1, x0, #0xc18
   17604:	ldr	x0, [sp, #40]
   17608:	bl	4e80 <Perl_newXS_deffile@plt>
   1760c:	str	x0, [sp, #32]
   17610:	ldr	x0, [sp, #32]
   17614:	ldr	x0, [x0]
   17618:	str	x0, [sp, #1008]
   1761c:	ldr	x0, [sp, #1008]
   17620:	mov	w1, #0x3                   	// #3
   17624:	str	w1, [x0, #40]
   17628:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   1762c:	add	x2, x0, #0xb18
   17630:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17634:	add	x1, x0, #0xc28
   17638:	ldr	x0, [sp, #40]
   1763c:	bl	4e80 <Perl_newXS_deffile@plt>
   17640:	str	x0, [sp, #32]
   17644:	ldr	x0, [sp, #32]
   17648:	ldr	x0, [x0]
   1764c:	str	x0, [sp, #1016]
   17650:	ldr	x0, [sp, #1016]
   17654:	str	wzr, [x0, #40]
   17658:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   1765c:	add	x2, x0, #0xb18
   17660:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17664:	add	x1, x0, #0xc38
   17668:	ldr	x0, [sp, #40]
   1766c:	bl	4e80 <Perl_newXS_deffile@plt>
   17670:	str	x0, [sp, #32]
   17674:	ldr	x0, [sp, #32]
   17678:	ldr	x0, [x0]
   1767c:	str	x0, [sp, #1024]
   17680:	ldr	x0, [sp, #1024]
   17684:	mov	w1, #0x2                   	// #2
   17688:	str	w1, [x0, #40]
   1768c:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   17690:	add	x2, x0, #0xb18
   17694:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17698:	add	x1, x0, #0xc48
   1769c:	ldr	x0, [sp, #40]
   176a0:	bl	4e80 <Perl_newXS_deffile@plt>
   176a4:	str	x0, [sp, #32]
   176a8:	ldr	x0, [sp, #32]
   176ac:	ldr	x0, [x0]
   176b0:	str	x0, [sp, #1032]
   176b4:	ldr	x0, [sp, #1032]
   176b8:	mov	w1, #0x1                   	// #1
   176bc:	str	w1, [x0, #40]
   176c0:	adrp	x0, e000 <XS_B__IV_packiv+0x40>
   176c4:	add	x2, x0, #0xed4
   176c8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   176cc:	add	x1, x0, #0xc58
   176d0:	ldr	x0, [sp, #40]
   176d4:	bl	4e80 <Perl_newXS_deffile@plt>
   176d8:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   176dc:	add	x2, x0, #0xd8
   176e0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   176e4:	add	x1, x0, #0xc68
   176e8:	ldr	x0, [sp, #40]
   176ec:	bl	4e80 <Perl_newXS_deffile@plt>
   176f0:	str	x0, [sp, #32]
   176f4:	ldr	x0, [sp, #32]
   176f8:	ldr	x0, [x0]
   176fc:	str	x0, [sp, #1040]
   17700:	ldr	x0, [sp, #1040]
   17704:	mov	w1, #0x3                   	// #3
   17708:	str	w1, [x0, #40]
   1770c:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17710:	add	x2, x0, #0xd8
   17714:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17718:	add	x1, x0, #0xc78
   1771c:	ldr	x0, [sp, #40]
   17720:	bl	4e80 <Perl_newXS_deffile@plt>
   17724:	str	x0, [sp, #32]
   17728:	ldr	x0, [sp, #32]
   1772c:	ldr	x0, [x0]
   17730:	str	x0, [sp, #1048]
   17734:	ldr	x0, [sp, #1048]
   17738:	mov	w1, #0x4                   	// #4
   1773c:	str	w1, [x0, #40]
   17740:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17744:	add	x2, x0, #0xd8
   17748:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1774c:	add	x1, x0, #0xc90
   17750:	ldr	x0, [sp, #40]
   17754:	bl	4e80 <Perl_newXS_deffile@plt>
   17758:	str	x0, [sp, #32]
   1775c:	ldr	x0, [sp, #32]
   17760:	ldr	x0, [x0]
   17764:	str	x0, [sp, #1056]
   17768:	ldr	x0, [sp, #1056]
   1776c:	str	wzr, [x0, #40]
   17770:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17774:	add	x2, x0, #0xd8
   17778:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1777c:	add	x1, x0, #0xca8
   17780:	ldr	x0, [sp, #40]
   17784:	bl	4e80 <Perl_newXS_deffile@plt>
   17788:	str	x0, [sp, #32]
   1778c:	ldr	x0, [sp, #32]
   17790:	ldr	x0, [x0]
   17794:	str	x0, [sp, #1064]
   17798:	ldr	x0, [sp, #1064]
   1779c:	mov	w1, #0x5                   	// #5
   177a0:	str	w1, [x0, #40]
   177a4:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   177a8:	add	x2, x0, #0xd8
   177ac:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   177b0:	add	x1, x0, #0xcb8
   177b4:	ldr	x0, [sp, #40]
   177b8:	bl	4e80 <Perl_newXS_deffile@plt>
   177bc:	str	x0, [sp, #32]
   177c0:	ldr	x0, [sp, #32]
   177c4:	ldr	x0, [x0]
   177c8:	str	x0, [sp, #1072]
   177cc:	ldr	x0, [sp, #1072]
   177d0:	mov	w1, #0x1                   	// #1
   177d4:	str	w1, [x0, #40]
   177d8:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   177dc:	add	x2, x0, #0xd8
   177e0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   177e4:	add	x1, x0, #0xcd0
   177e8:	ldr	x0, [sp, #40]
   177ec:	bl	4e80 <Perl_newXS_deffile@plt>
   177f0:	str	x0, [sp, #32]
   177f4:	ldr	x0, [sp, #32]
   177f8:	ldr	x0, [x0]
   177fc:	str	x0, [sp, #1080]
   17800:	ldr	x0, [sp, #1080]
   17804:	mov	w1, #0x6                   	// #6
   17808:	str	w1, [x0, #40]
   1780c:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17810:	add	x2, x0, #0xd8
   17814:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17818:	add	x1, x0, #0xce0
   1781c:	ldr	x0, [sp, #40]
   17820:	bl	4e80 <Perl_newXS_deffile@plt>
   17824:	str	x0, [sp, #32]
   17828:	ldr	x0, [sp, #32]
   1782c:	ldr	x0, [x0]
   17830:	str	x0, [sp, #1088]
   17834:	ldr	x0, [sp, #1088]
   17838:	mov	w1, #0x7                   	// #7
   1783c:	str	w1, [x0, #40]
   17840:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17844:	add	x2, x0, #0xd8
   17848:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1784c:	add	x1, x0, #0xcf0
   17850:	ldr	x0, [sp, #40]
   17854:	bl	4e80 <Perl_newXS_deffile@plt>
   17858:	str	x0, [sp, #32]
   1785c:	ldr	x0, [sp, #32]
   17860:	ldr	x0, [x0]
   17864:	str	x0, [sp, #1096]
   17868:	ldr	x0, [sp, #1096]
   1786c:	mov	w1, #0x2                   	// #2
   17870:	str	w1, [x0, #40]
   17874:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17878:	add	x2, x0, #0xd8
   1787c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17880:	add	x1, x0, #0xd00
   17884:	ldr	x0, [sp, #40]
   17888:	bl	4e80 <Perl_newXS_deffile@plt>
   1788c:	str	x0, [sp, #32]
   17890:	ldr	x0, [sp, #32]
   17894:	ldr	x0, [x0]
   17898:	str	x0, [sp, #1104]
   1789c:	ldr	x0, [sp, #1104]
   178a0:	mov	w1, #0x8                   	// #8
   178a4:	str	w1, [x0, #40]
   178a8:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   178ac:	add	x2, x0, #0x6f0
   178b0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   178b4:	add	x1, x0, #0xd18
   178b8:	ldr	x0, [sp, #40]
   178bc:	bl	4e80 <Perl_newXS_deffile@plt>
   178c0:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   178c4:	add	x2, x0, #0x998
   178c8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   178cc:	add	x1, x0, #0xd28
   178d0:	ldr	x0, [sp, #40]
   178d4:	bl	4e80 <Perl_newXS_deffile@plt>
   178d8:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   178dc:	add	x2, x0, #0xc40
   178e0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   178e4:	add	x1, x0, #0xd38
   178e8:	ldr	x0, [sp, #40]
   178ec:	bl	4e80 <Perl_newXS_deffile@plt>
   178f0:	str	x0, [sp, #32]
   178f4:	ldr	x0, [sp, #32]
   178f8:	ldr	x0, [x0]
   178fc:	str	x0, [sp, #1112]
   17900:	ldr	x0, [sp, #1112]
   17904:	mov	w1, #0x1                   	// #1
   17908:	str	w1, [x0, #40]
   1790c:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17910:	add	x2, x0, #0xc40
   17914:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17918:	add	x1, x0, #0xd48
   1791c:	ldr	x0, [sp, #40]
   17920:	bl	4e80 <Perl_newXS_deffile@plt>
   17924:	str	x0, [sp, #32]
   17928:	ldr	x0, [sp, #32]
   1792c:	ldr	x0, [x0]
   17930:	str	x0, [sp, #1120]
   17934:	ldr	x0, [sp, #1120]
   17938:	str	wzr, [x0, #40]
   1793c:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17940:	add	x2, x0, #0xc40
   17944:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17948:	add	x1, x0, #0xd58
   1794c:	ldr	x0, [sp, #40]
   17950:	bl	4e80 <Perl_newXS_deffile@plt>
   17954:	str	x0, [sp, #32]
   17958:	ldr	x0, [sp, #32]
   1795c:	ldr	x0, [x0]
   17960:	str	x0, [sp, #1128]
   17964:	ldr	x0, [sp, #1128]
   17968:	mov	w1, #0x2                   	// #2
   1796c:	str	w1, [x0, #40]
   17970:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   17974:	add	x2, x0, #0xf14
   17978:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   1797c:	add	x1, x0, #0xd68
   17980:	ldr	x0, [sp, #40]
   17984:	bl	4e80 <Perl_newXS_deffile@plt>
   17988:	str	x0, [sp, #32]
   1798c:	ldr	x0, [sp, #32]
   17990:	ldr	x0, [x0]
   17994:	str	x0, [sp, #1136]
   17998:	ldr	x0, [sp, #1136]
   1799c:	mov	w1, #0x1                   	// #1
   179a0:	str	w1, [x0, #40]
   179a4:	adrp	x0, f000 <XS_B__PVMG_MAGIC+0x12c>
   179a8:	add	x2, x0, #0xf14
   179ac:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   179b0:	add	x1, x0, #0xd80
   179b4:	ldr	x0, [sp, #40]
   179b8:	bl	4e80 <Perl_newXS_deffile@plt>
   179bc:	str	x0, [sp, #32]
   179c0:	ldr	x0, [sp, #32]
   179c4:	ldr	x0, [x0]
   179c8:	str	x0, [sp, #1144]
   179cc:	ldr	x0, [sp, #1144]
   179d0:	str	wzr, [x0, #40]
   179d4:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   179d8:	add	x2, x0, #0x164
   179dc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   179e0:	add	x1, x0, #0xd90
   179e4:	ldr	x0, [sp, #40]
   179e8:	bl	4e80 <Perl_newXS_deffile@plt>
   179ec:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   179f0:	add	x2, x0, #0x400
   179f4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   179f8:	add	x1, x0, #0xda0
   179fc:	ldr	x0, [sp, #40]
   17a00:	bl	4e80 <Perl_newXS_deffile@plt>
   17a04:	str	x0, [sp, #32]
   17a08:	ldr	x0, [sp, #32]
   17a0c:	ldr	x0, [x0]
   17a10:	str	x0, [sp, #1152]
   17a14:	ldr	x0, [sp, #1152]
   17a18:	mov	w1, #0x28                  	// #40
   17a1c:	str	w1, [x0, #40]
   17a20:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17a24:	add	x2, x0, #0x400
   17a28:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17a2c:	add	x1, x0, #0xdb0
   17a30:	ldr	x0, [sp, #40]
   17a34:	bl	4e80 <Perl_newXS_deffile@plt>
   17a38:	str	x0, [sp, #32]
   17a3c:	ldr	x0, [sp, #32]
   17a40:	ldr	x0, [x0]
   17a44:	str	x0, [sp, #1160]
   17a48:	ldr	x0, [sp, #1160]
   17a4c:	mov	w1, #0x10                  	// #16
   17a50:	str	w1, [x0, #40]
   17a54:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17a58:	add	x2, x0, #0x400
   17a5c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17a60:	add	x1, x0, #0xdc0
   17a64:	ldr	x0, [sp, #40]
   17a68:	bl	4e80 <Perl_newXS_deffile@plt>
   17a6c:	str	x0, [sp, #32]
   17a70:	ldr	x0, [sp, #32]
   17a74:	ldr	x0, [x0]
   17a78:	str	x0, [sp, #1168]
   17a7c:	ldr	x0, [sp, #1168]
   17a80:	mov	w1, #0x18                  	// #24
   17a84:	movk	w1, #0x1, lsl #16
   17a88:	str	w1, [x0, #40]
   17a8c:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17a90:	add	x2, x0, #0x400
   17a94:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17a98:	add	x1, x0, #0xdd0
   17a9c:	ldr	x0, [sp, #40]
   17aa0:	bl	4e80 <Perl_newXS_deffile@plt>
   17aa4:	str	x0, [sp, #32]
   17aa8:	ldr	x0, [sp, #32]
   17aac:	ldr	x0, [x0]
   17ab0:	str	x0, [sp, #1176]
   17ab4:	ldr	x0, [sp, #1176]
   17ab8:	mov	w1, #0x38                  	// #56
   17abc:	str	w1, [x0, #40]
   17ac0:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17ac4:	add	x2, x0, #0x400
   17ac8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17acc:	add	x1, x0, #0xde0
   17ad0:	ldr	x0, [sp, #40]
   17ad4:	bl	4e80 <Perl_newXS_deffile@plt>
   17ad8:	str	x0, [sp, #32]
   17adc:	ldr	x0, [sp, #32]
   17ae0:	ldr	x0, [x0]
   17ae4:	str	x0, [sp, #1184]
   17ae8:	ldr	x0, [sp, #1184]
   17aec:	mov	w1, #0x30                  	// #48
   17af0:	str	w1, [x0, #40]
   17af4:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17af8:	add	x2, x0, #0x400
   17afc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17b00:	add	x1, x0, #0xdf0
   17b04:	ldr	x0, [sp, #40]
   17b08:	bl	4e80 <Perl_newXS_deffile@plt>
   17b0c:	str	x0, [sp, #32]
   17b10:	ldr	x0, [sp, #32]
   17b14:	ldr	x0, [x0]
   17b18:	str	x0, [sp, #1192]
   17b1c:	ldr	x0, [sp, #1192]
   17b20:	mov	w1, #0x1c                  	// #28
   17b24:	movk	w1, #0x1, lsl #16
   17b28:	str	w1, [x0, #40]
   17b2c:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17b30:	add	x2, x0, #0x400
   17b34:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17b38:	add	x1, x0, #0xe00
   17b3c:	ldr	x0, [sp, #40]
   17b40:	bl	4e80 <Perl_newXS_deffile@plt>
   17b44:	str	x0, [sp, #32]
   17b48:	ldr	x0, [sp, #32]
   17b4c:	ldr	x0, [x0]
   17b50:	str	x0, [sp, #1200]
   17b54:	ldr	x0, [sp, #1200]
   17b58:	mov	w1, #0x20                  	// #32
   17b5c:	str	w1, [x0, #40]
   17b60:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17b64:	add	x2, x0, #0x400
   17b68:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17b6c:	add	x1, x0, #0xe10
   17b70:	ldr	x0, [sp, #40]
   17b74:	bl	4e80 <Perl_newXS_deffile@plt>
   17b78:	str	x0, [sp, #32]
   17b7c:	ldr	x0, [sp, #32]
   17b80:	ldr	x0, [x0]
   17b84:	str	x0, [sp, #1208]
   17b88:	ldr	x0, [sp, #1208]
   17b8c:	mov	w1, #0x8                   	// #8
   17b90:	str	w1, [x0, #40]
   17b94:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17b98:	add	x2, x0, #0x400
   17b9c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17ba0:	add	x1, x0, #0xe20
   17ba4:	ldr	x0, [sp, #40]
   17ba8:	bl	4e80 <Perl_newXS_deffile@plt>
   17bac:	str	x0, [sp, #32]
   17bb0:	ldr	x0, [sp, #32]
   17bb4:	ldr	x0, [x0]
   17bb8:	str	x0, [sp, #1216]
   17bbc:	ldr	x0, [sp, #1216]
   17bc0:	str	wzr, [x0, #40]
   17bc4:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17bc8:	add	x2, x0, #0x6c8
   17bcc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17bd0:	add	x1, x0, #0xe30
   17bd4:	ldr	x0, [sp, #40]
   17bd8:	bl	4e80 <Perl_newXS_deffile@plt>
   17bdc:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17be0:	add	x2, x0, #0x980
   17be4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17be8:	add	x1, x0, #0xe40
   17bec:	ldr	x0, [sp, #40]
   17bf0:	bl	4e80 <Perl_newXS_deffile@plt>
   17bf4:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17bf8:	add	x2, x0, #0xc3c
   17bfc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17c00:	add	x1, x0, #0xe50
   17c04:	ldr	x0, [sp, #40]
   17c08:	bl	4e80 <Perl_newXS_deffile@plt>
   17c0c:	adrp	x0, 10000 <XS_B__GV_is_empty+0xec>
   17c10:	add	x2, x0, #0xe10
   17c14:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17c18:	add	x1, x0, #0xe60
   17c1c:	ldr	x0, [sp, #40]
   17c20:	bl	4e80 <Perl_newXS_deffile@plt>
   17c24:	adrp	x0, 11000 <XS_B__IO_IsSTD+0x1f0>
   17c28:	add	x2, x0, #0xfc
   17c2c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17c30:	add	x1, x0, #0xe70
   17c34:	ldr	x0, [sp, #40]
   17c38:	bl	4e80 <Perl_newXS_deffile@plt>
   17c3c:	adrp	x0, 11000 <XS_B__IO_IsSTD+0x1f0>
   17c40:	add	x2, x0, #0x3d0
   17c44:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17c48:	add	x1, x0, #0xe80
   17c4c:	ldr	x0, [sp, #40]
   17c50:	bl	4e80 <Perl_newXS_deffile@plt>
   17c54:	adrp	x0, 11000 <XS_B__IO_IsSTD+0x1f0>
   17c58:	add	x2, x0, #0x68c
   17c5c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17c60:	add	x1, x0, #0xe90
   17c64:	ldr	x0, [sp, #40]
   17c68:	bl	4e80 <Perl_newXS_deffile@plt>
   17c6c:	adrp	x0, 11000 <XS_B__IO_IsSTD+0x1f0>
   17c70:	add	x2, x0, #0xa1c
   17c74:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17c78:	add	x1, x0, #0xea0
   17c7c:	ldr	x0, [sp, #40]
   17c80:	bl	4e80 <Perl_newXS_deffile@plt>
   17c84:	adrp	x0, 11000 <XS_B__IO_IsSTD+0x1f0>
   17c88:	add	x2, x0, #0xcb0
   17c8c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17c90:	add	x1, x0, #0xeb0
   17c94:	ldr	x0, [sp, #40]
   17c98:	bl	4e80 <Perl_newXS_deffile@plt>
   17c9c:	adrp	x0, 11000 <XS_B__IO_IsSTD+0x1f0>
   17ca0:	add	x2, x0, #0xf70
   17ca4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17ca8:	add	x1, x0, #0xec0
   17cac:	ldr	x0, [sp, #40]
   17cb0:	bl	4e80 <Perl_newXS_deffile@plt>
   17cb4:	str	x0, [sp, #32]
   17cb8:	ldr	x0, [sp, #32]
   17cbc:	ldr	x0, [x0]
   17cc0:	str	x0, [sp, #1224]
   17cc4:	ldr	x0, [sp, #1224]
   17cc8:	mov	w1, #0x1                   	// #1
   17ccc:	str	w1, [x0, #40]
   17cd0:	adrp	x0, 11000 <XS_B__IO_IsSTD+0x1f0>
   17cd4:	add	x2, x0, #0xf70
   17cd8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17cdc:	add	x1, x0, #0xed0
   17ce0:	ldr	x0, [sp, #40]
   17ce4:	bl	4e80 <Perl_newXS_deffile@plt>
   17ce8:	str	x0, [sp, #32]
   17cec:	ldr	x0, [sp, #32]
   17cf0:	ldr	x0, [x0]
   17cf4:	str	x0, [sp, #1232]
   17cf8:	ldr	x0, [sp, #1232]
   17cfc:	str	wzr, [x0, #40]
   17d00:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17d04:	add	x2, x0, #0x184
   17d08:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17d0c:	add	x1, x0, #0xee0
   17d10:	ldr	x0, [sp, #40]
   17d14:	bl	4e80 <Perl_newXS_deffile@plt>
   17d18:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17d1c:	add	x2, x0, #0x424
   17d20:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17d24:	add	x1, x0, #0xef0
   17d28:	ldr	x0, [sp, #40]
   17d2c:	bl	4e80 <Perl_newXS_deffile@plt>
   17d30:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17d34:	add	x2, x0, #0x654
   17d38:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17d3c:	add	x1, x0, #0xf00
   17d40:	ldr	x0, [sp, #40]
   17d44:	bl	4e80 <Perl_newXS_deffile@plt>
   17d48:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17d4c:	add	x2, x0, #0x850
   17d50:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17d54:	add	x1, x0, #0xf10
   17d58:	ldr	x0, [sp, #40]
   17d5c:	bl	4e80 <Perl_newXS_deffile@plt>
   17d60:	str	x0, [sp, #32]
   17d64:	ldr	x0, [sp, #32]
   17d68:	ldr	x0, [x0]
   17d6c:	str	x0, [sp, #1240]
   17d70:	ldr	x0, [sp, #1240]
   17d74:	str	wzr, [x0, #40]
   17d78:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17d7c:	add	x2, x0, #0x850
   17d80:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17d84:	add	x1, x0, #0xf20
   17d88:	ldr	x0, [sp, #40]
   17d8c:	bl	4e80 <Perl_newXS_deffile@plt>
   17d90:	str	x0, [sp, #32]
   17d94:	ldr	x0, [sp, #32]
   17d98:	ldr	x0, [x0]
   17d9c:	str	x0, [sp, #1248]
   17da0:	ldr	x0, [sp, #1248]
   17da4:	mov	w1, #0x1                   	// #1
   17da8:	str	w1, [x0, #40]
   17dac:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17db0:	add	x2, x0, #0xacc
   17db4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17db8:	add	x1, x0, #0xf30
   17dbc:	ldr	x0, [sp, #40]
   17dc0:	bl	4e80 <Perl_newXS_deffile@plt>
   17dc4:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17dc8:	add	x2, x0, #0xc70
   17dcc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17dd0:	add	x1, x0, #0xf40
   17dd4:	ldr	x0, [sp, #40]
   17dd8:	bl	4e80 <Perl_newXS_deffile@plt>
   17ddc:	adrp	x0, 12000 <XS_B__CV_START+0x90>
   17de0:	add	x2, x0, #0xe30
   17de4:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17de8:	add	x1, x0, #0xf50
   17dec:	ldr	x0, [sp, #40]
   17df0:	bl	4e80 <Perl_newXS_deffile@plt>
   17df4:	adrp	x0, 13000 <XS_B__CV_NAME_HEK+0x1d0>
   17df8:	add	x2, x0, #0x24
   17dfc:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17e00:	add	x1, x0, #0xf60
   17e04:	ldr	x0, [sp, #40]
   17e08:	bl	4e80 <Perl_newXS_deffile@plt>
   17e0c:	adrp	x0, 13000 <XS_B__CV_NAME_HEK+0x1d0>
   17e10:	add	x2, x0, #0x2e4
   17e14:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17e18:	add	x1, x0, #0xf70
   17e1c:	ldr	x0, [sp, #40]
   17e20:	bl	4e80 <Perl_newXS_deffile@plt>
   17e24:	adrp	x0, 13000 <XS_B__CV_NAME_HEK+0x1d0>
   17e28:	add	x2, x0, #0x594
   17e2c:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17e30:	add	x1, x0, #0xf80
   17e34:	ldr	x0, [sp, #40]
   17e38:	bl	4e80 <Perl_newXS_deffile@plt>
   17e3c:	adrp	x0, 13000 <XS_B__CV_NAME_HEK+0x1d0>
   17e40:	add	x2, x0, #0x9b4
   17e44:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17e48:	add	x1, x0, #0xf90
   17e4c:	ldr	x0, [sp, #40]
   17e50:	bl	4e80 <Perl_newXS_deffile@plt>
   17e54:	str	x0, [sp, #32]
   17e58:	ldr	x0, [sp, #32]
   17e5c:	ldr	x0, [x0]
   17e60:	str	x0, [sp, #1256]
   17e64:	ldr	x0, [sp, #1256]
   17e68:	mov	w1, #0x1                   	// #1
   17e6c:	str	w1, [x0, #40]
   17e70:	adrp	x0, 13000 <XS_B__CV_NAME_HEK+0x1d0>
   17e74:	add	x2, x0, #0x9b4
   17e78:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17e7c:	add	x1, x0, #0xfa8
   17e80:	ldr	x0, [sp, #40]
   17e84:	bl	4e80 <Perl_newXS_deffile@plt>
   17e88:	str	x0, [sp, #32]
   17e8c:	ldr	x0, [sp, #32]
   17e90:	ldr	x0, [x0]
   17e94:	str	x0, [sp, #1264]
   17e98:	ldr	x0, [sp, #1264]
   17e9c:	str	wzr, [x0, #40]
   17ea0:	adrp	x0, 13000 <XS_B__CV_NAME_HEK+0x1d0>
   17ea4:	add	x2, x0, #0xc28
   17ea8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17eac:	add	x1, x0, #0xfb8
   17eb0:	ldr	x0, [sp, #40]
   17eb4:	bl	4e80 <Perl_newXS_deffile@plt>
   17eb8:	adrp	x0, 13000 <XS_B__CV_NAME_HEK+0x1d0>
   17ebc:	add	x2, x0, #0xedc
   17ec0:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17ec4:	add	x1, x0, #0xfc8
   17ec8:	ldr	x0, [sp, #40]
   17ecc:	bl	4e80 <Perl_newXS_deffile@plt>
   17ed0:	adrp	x0, 14000 <XS_B__RHE_HASH+0x124>
   17ed4:	add	x2, x0, #0xac
   17ed8:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17edc:	add	x1, x0, #0xfd8
   17ee0:	ldr	x0, [sp, #40]
   17ee4:	bl	4e80 <Perl_newXS_deffile@plt>
   17ee8:	str	x0, [sp, #32]
   17eec:	ldr	x0, [sp, #32]
   17ef0:	ldr	x0, [x0]
   17ef4:	str	x0, [sp, #1272]
   17ef8:	ldr	x0, [sp, #1272]
   17efc:	str	wzr, [x0, #40]
   17f00:	adrp	x0, 14000 <XS_B__RHE_HASH+0x124>
   17f04:	add	x2, x0, #0xac
   17f08:	adrp	x0, 19000 <values_for_notfound+0x2e8>
   17f0c:	add	x1, x0, #0xfe8
   17f10:	ldr	x0, [sp, #40]
   17f14:	bl	4e80 <Perl_newXS_deffile@plt>
   17f18:	str	x0, [sp, #32]
   17f1c:	ldr	x0, [sp, #32]
   17f20:	ldr	x0, [x0]
   17f24:	str	x0, [sp, #1280]
   17f28:	ldr	x0, [sp, #1280]
   17f2c:	str	wzr, [x0, #40]
   17f30:	adrp	x0, 14000 <XS_B__RHE_HASH+0x124>
   17f34:	add	x2, x0, #0x360
   17f38:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   17f3c:	add	x1, x0, #0x0
   17f40:	ldr	x0, [sp, #40]
   17f44:	bl	4e80 <Perl_newXS_deffile@plt>
   17f48:	adrp	x0, 14000 <XS_B__RHE_HASH+0x124>
   17f4c:	add	x2, x0, #0x560
   17f50:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   17f54:	add	x1, x0, #0x18
   17f58:	ldr	x0, [sp, #40]
   17f5c:	bl	4e80 <Perl_newXS_deffile@plt>
   17f60:	adrp	x0, 14000 <XS_B__RHE_HASH+0x124>
   17f64:	add	x2, x0, #0x8b0
   17f68:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   17f6c:	add	x1, x0, #0x30
   17f70:	ldr	x0, [sp, #40]
   17f74:	bl	4e80 <Perl_newXS_deffile@plt>
   17f78:	adrp	x0, 14000 <XS_B__RHE_HASH+0x124>
   17f7c:	add	x2, x0, #0xc5c
   17f80:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   17f84:	add	x1, x0, #0x48
   17f88:	ldr	x0, [sp, #40]
   17f8c:	bl	4e80 <Perl_newXS_deffile@plt>
   17f90:	adrp	x0, 14000 <XS_B__RHE_HASH+0x124>
   17f94:	add	x2, x0, #0xf08
   17f98:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   17f9c:	add	x1, x0, #0x60
   17fa0:	ldr	x0, [sp, #40]
   17fa4:	bl	4e80 <Perl_newXS_deffile@plt>
   17fa8:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   17fac:	add	x2, x0, #0x190
   17fb0:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   17fb4:	add	x1, x0, #0x78
   17fb8:	ldr	x0, [sp, #40]
   17fbc:	bl	4e80 <Perl_newXS_deffile@plt>
   17fc0:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   17fc4:	add	x2, x0, #0x450
   17fc8:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   17fcc:	add	x1, x0, #0x98
   17fd0:	ldr	x0, [sp, #40]
   17fd4:	bl	4e80 <Perl_newXS_deffile@plt>
   17fd8:	str	x0, [sp, #32]
   17fdc:	ldr	x0, [sp, #32]
   17fe0:	ldr	x0, [x0]
   17fe4:	str	x0, [sp, #1288]
   17fe8:	ldr	x0, [sp, #1288]
   17fec:	mov	w1, #0x10                  	// #16
   17ff0:	movk	w1, #0x4, lsl #16
   17ff4:	str	w1, [x0, #40]
   17ff8:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   17ffc:	add	x2, x0, #0x450
   18000:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18004:	add	x1, x0, #0xa8
   18008:	ldr	x0, [sp, #40]
   1800c:	bl	4e80 <Perl_newXS_deffile@plt>
   18010:	str	x0, [sp, #32]
   18014:	ldr	x0, [sp, #32]
   18018:	ldr	x0, [x0]
   1801c:	str	x0, [sp, #1296]
   18020:	ldr	x0, [sp, #1296]
   18024:	mov	w1, #0x14                  	// #20
   18028:	movk	w1, #0x4, lsl #16
   1802c:	str	w1, [x0, #40]
   18030:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   18034:	add	x2, x0, #0x450
   18038:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   1803c:	add	x1, x0, #0xc0
   18040:	ldr	x0, [sp, #40]
   18044:	bl	4e80 <Perl_newXS_deffile@plt>
   18048:	str	x0, [sp, #32]
   1804c:	ldr	x0, [sp, #32]
   18050:	ldr	x0, [x0]
   18054:	str	x0, [sp, #1304]
   18058:	ldr	x0, [sp, #1304]
   1805c:	mov	w1, #0x1c                  	// #28
   18060:	movk	w1, #0x4, lsl #16
   18064:	str	w1, [x0, #40]
   18068:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   1806c:	add	x2, x0, #0x450
   18070:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18074:	add	x1, x0, #0xe0
   18078:	ldr	x0, [sp, #40]
   1807c:	bl	4e80 <Perl_newXS_deffile@plt>
   18080:	str	x0, [sp, #32]
   18084:	ldr	x0, [sp, #32]
   18088:	ldr	x0, [x0]
   1808c:	str	x0, [sp, #1312]
   18090:	ldr	x0, [sp, #1312]
   18094:	mov	w1, #0x18                  	// #24
   18098:	movk	w1, #0x4, lsl #16
   1809c:	str	w1, [x0, #40]
   180a0:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   180a4:	add	x2, x0, #0x450
   180a8:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   180ac:	add	x1, x0, #0x100
   180b0:	ldr	x0, [sp, #40]
   180b4:	bl	4e80 <Perl_newXS_deffile@plt>
   180b8:	str	x0, [sp, #32]
   180bc:	ldr	x0, [sp, #32]
   180c0:	ldr	x0, [x0]
   180c4:	str	x0, [sp, #1320]
   180c8:	ldr	x0, [sp, #1320]
   180cc:	mov	w1, #0x28                  	// #40
   180d0:	movk	w1, #0x5, lsl #16
   180d4:	str	w1, [x0, #40]
   180d8:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   180dc:	add	x2, x0, #0x450
   180e0:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   180e4:	add	x1, x0, #0x110
   180e8:	ldr	x0, [sp, #40]
   180ec:	bl	4e80 <Perl_newXS_deffile@plt>
   180f0:	str	x0, [sp, #32]
   180f4:	ldr	x0, [sp, #32]
   180f8:	ldr	x0, [x0]
   180fc:	str	x0, [sp, #1328]
   18100:	ldr	x0, [sp, #1328]
   18104:	mov	w1, #0x8                   	// #8
   18108:	str	w1, [x0, #40]
   1810c:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   18110:	add	x2, x0, #0x450
   18114:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18118:	add	x1, x0, #0x128
   1811c:	ldr	x0, [sp, #40]
   18120:	bl	4e80 <Perl_newXS_deffile@plt>
   18124:	str	x0, [sp, #32]
   18128:	ldr	x0, [sp, #32]
   1812c:	ldr	x0, [x0]
   18130:	str	x0, [sp, #1336]
   18134:	ldr	x0, [sp, #1336]
   18138:	mov	w1, #0x20                  	// #32
   1813c:	movk	w1, #0x4, lsl #16
   18140:	str	w1, [x0, #40]
   18144:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   18148:	add	x2, x0, #0x450
   1814c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18150:	add	x1, x0, #0x140
   18154:	ldr	x0, [sp, #40]
   18158:	bl	4e80 <Perl_newXS_deffile@plt>
   1815c:	str	x0, [sp, #32]
   18160:	ldr	x0, [sp, #32]
   18164:	ldr	x0, [x0]
   18168:	str	x0, [sp, #1344]
   1816c:	ldr	x0, [sp, #1344]
   18170:	mov	w1, #0x10                  	// #16
   18174:	str	w1, [x0, #40]
   18178:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   1817c:	add	x2, x0, #0x450
   18180:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18184:	add	x1, x0, #0x158
   18188:	ldr	x0, [sp, #40]
   1818c:	bl	4e80 <Perl_newXS_deffile@plt>
   18190:	str	x0, [sp, #32]
   18194:	ldr	x0, [sp, #32]
   18198:	ldr	x0, [x0]
   1819c:	str	x0, [sp, #1352]
   181a0:	ldr	x0, [sp, #1352]
   181a4:	mov	w1, #0x20                  	// #32
   181a8:	movk	w1, #0x4, lsl #16
   181ac:	str	w1, [x0, #40]
   181b0:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   181b4:	add	x2, x0, #0x6dc
   181b8:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   181bc:	add	x1, x0, #0x170
   181c0:	ldr	x0, [sp, #40]
   181c4:	bl	4e80 <Perl_newXS_deffile@plt>
   181c8:	adrp	x0, 15000 <XS_B__PADNAMELIST_ARRAY+0xf8>
   181cc:	add	x2, x0, #0x958
   181d0:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   181d4:	add	x1, x0, #0x180
   181d8:	ldr	x0, [sp, #40]
   181dc:	bl	4e80 <Perl_newXS_deffile@plt>
   181e0:	mov	w2, #0x1                   	// #1
   181e4:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   181e8:	add	x1, x0, #0x198
   181ec:	ldr	x0, [sp, #40]
   181f0:	bl	50b0 <Perl_get_hv@plt>
   181f4:	str	x0, [sp, #1360]
   181f8:	mov	w2, #0x1                   	// #1
   181fc:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18200:	add	x1, x0, #0x1a0
   18204:	ldr	x0, [sp, #40]
   18208:	bl	4fd0 <Perl_get_av@plt>
   1820c:	str	x0, [sp, #1368]
   18210:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
   18214:	add	x0, x0, #0xb20
   18218:	str	x0, [sp, #104]
   1821c:	adrp	x0, 2d000 <__FRAME_END__+0x1037c>
   18220:	add	x0, x0, #0xb50
   18224:	str	x0, [sp, #112]
   18228:	b	1829c <boot_B+0x2674>
   1822c:	ldr	x0, [sp, #104]
   18230:	ldr	x19, [x0]
   18234:	ldr	x0, [sp, #104]
   18238:	ldr	w20, [x0, #8]
   1823c:	ldr	x0, [sp, #104]
   18240:	ldr	x0, [x0, #16]
   18244:	mov	x1, x0
   18248:	ldr	x0, [sp, #40]
   1824c:	bl	5020 <Perl_newSViv@plt>
   18250:	mov	x4, x0
   18254:	mov	w3, w20
   18258:	mov	x2, x19
   1825c:	ldr	x1, [sp, #1360]
   18260:	ldr	x0, [sp, #40]
   18264:	bl	8b84 <_add_symbol>
   18268:	str	x0, [sp, #1512]
   1826c:	ldr	x0, [sp, #1512]
   18270:	ldr	x0, [x0, #8]
   18274:	mov	x1, x0
   18278:	ldr	x0, [sp, #40]
   1827c:	bl	4bc0 <Perl_newSVhek@plt>
   18280:	mov	x2, x0
   18284:	ldr	x1, [sp, #1368]
   18288:	ldr	x0, [sp, #40]
   1828c:	bl	4de0 <Perl_av_push@plt>
   18290:	ldr	x0, [sp, #104]
   18294:	add	x0, x0, #0x18
   18298:	str	x0, [sp, #104]
   1829c:	ldr	x0, [sp, #104]
   182a0:	ldr	x0, [x0]
   182a4:	cmp	x0, #0x0
   182a8:	b.ne	1822c <boot_B+0x2604>  // b.any
   182ac:	b	18320 <boot_B+0x26f8>
   182b0:	ldr	x0, [sp, #112]
   182b4:	ldr	x19, [x0]
   182b8:	ldr	x0, [sp, #112]
   182bc:	ldr	w20, [x0, #8]
   182c0:	ldr	x0, [sp, #112]
   182c4:	ldr	x0, [x0, #16]
   182c8:	mov	x1, x0
   182cc:	ldr	x0, [sp, #40]
   182d0:	bl	4f00 <Perl_newSVuv@plt>
   182d4:	mov	x4, x0
   182d8:	mov	w3, w20
   182dc:	mov	x2, x19
   182e0:	ldr	x1, [sp, #1360]
   182e4:	ldr	x0, [sp, #40]
   182e8:	bl	8b84 <_add_symbol>
   182ec:	str	x0, [sp, #1512]
   182f0:	ldr	x0, [sp, #1512]
   182f4:	ldr	x0, [x0, #8]
   182f8:	mov	x1, x0
   182fc:	ldr	x0, [sp, #40]
   18300:	bl	4bc0 <Perl_newSVhek@plt>
   18304:	mov	x2, x0
   18308:	ldr	x1, [sp, #1368]
   1830c:	ldr	x0, [sp, #40]
   18310:	bl	4de0 <Perl_av_push@plt>
   18314:	ldr	x0, [sp, #112]
   18318:	add	x0, x0, #0x18
   1831c:	str	x0, [sp, #112]
   18320:	ldr	x0, [sp, #112]
   18324:	ldr	x0, [x0]
   18328:	cmp	x0, #0x0
   1832c:	b.ne	182b0 <boot_B+0x2688>  // b.any
   18330:	ldr	x1, [sp, #1360]
   18334:	ldr	x0, [sp, #40]
   18338:	bl	4c70 <Perl_mro_method_changed_in@plt>
   1833c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18340:	add	x0, x0, #0x1b0
   18344:	str	x0, [sp, #1376]
   18348:	mov	x2, #0x48                  	// #72
   1834c:	adrp	x0, 30000 <memcpy@GLIBC_2.17>
   18350:	add	x1, x0, #0x2e0
   18354:	ldr	x0, [sp, #40]
   18358:	bl	4bf0 <Perl_my_cxt_init@plt>
   1835c:	str	x0, [sp, #1384]
   18360:	ldr	x1, [sp, #1384]
   18364:	ldr	x0, [sp, #40]
   18368:	bl	752c <B_init_my_cxt>
   1836c:	ldr	x3, [sp, #1376]
   18370:	adrp	x0, 8000 <cstring+0x4d0>
   18374:	add	x2, x0, #0xa78
   18378:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   1837c:	add	x1, x0, #0x1b8
   18380:	ldr	x0, [sp, #40]
   18384:	bl	4e70 <Perl_newXS@plt>
   18388:	str	x0, [sp, #1392]
   1838c:	ldr	x0, [sp, #1392]
   18390:	ldr	x0, [x0]
   18394:	str	x0, [sp, #1400]
   18398:	ldr	x0, [sp, #1400]
   1839c:	mov	w1, #0x760                 	// #1888
   183a0:	str	w1, [x0, #40]
   183a4:	ldr	x3, [sp, #1376]
   183a8:	adrp	x0, 8000 <cstring+0x4d0>
   183ac:	add	x2, x0, #0xa78
   183b0:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   183b4:	add	x1, x0, #0x1c8
   183b8:	ldr	x0, [sp, #40]
   183bc:	bl	4e70 <Perl_newXS@plt>
   183c0:	str	x0, [sp, #1392]
   183c4:	ldr	x0, [sp, #1392]
   183c8:	ldr	x0, [x0]
   183cc:	str	x0, [sp, #1408]
   183d0:	ldr	x0, [sp, #1408]
   183d4:	mov	w1, #0xb10                 	// #2832
   183d8:	str	w1, [x0, #40]
   183dc:	ldr	x3, [sp, #1376]
   183e0:	adrp	x0, 8000 <cstring+0x4d0>
   183e4:	add	x2, x0, #0xa78
   183e8:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   183ec:	add	x1, x0, #0x1d8
   183f0:	ldr	x0, [sp, #40]
   183f4:	bl	4e70 <Perl_newXS@plt>
   183f8:	str	x0, [sp, #1392]
   183fc:	ldr	x0, [sp, #1392]
   18400:	ldr	x0, [x0]
   18404:	str	x0, [sp, #1416]
   18408:	ldr	x0, [sp, #1416]
   1840c:	mov	w1, #0xb18                 	// #2840
   18410:	str	w1, [x0, #40]
   18414:	ldr	x3, [sp, #1376]
   18418:	adrp	x0, 8000 <cstring+0x4d0>
   1841c:	add	x2, x0, #0xa78
   18420:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18424:	add	x1, x0, #0x1e8
   18428:	ldr	x0, [sp, #40]
   1842c:	bl	4e70 <Perl_newXS@plt>
   18430:	str	x0, [sp, #1392]
   18434:	ldr	x0, [sp, #1392]
   18438:	ldr	x0, [x0]
   1843c:	str	x0, [sp, #1424]
   18440:	ldr	x0, [sp, #1424]
   18444:	mov	w1, #0xaa0                 	// #2720
   18448:	str	w1, [x0, #40]
   1844c:	ldr	x3, [sp, #1376]
   18450:	adrp	x0, 8000 <cstring+0x4d0>
   18454:	add	x2, x0, #0xa78
   18458:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   1845c:	add	x1, x0, #0x1f8
   18460:	ldr	x0, [sp, #40]
   18464:	bl	4e70 <Perl_newXS@plt>
   18468:	str	x0, [sp, #1392]
   1846c:	ldr	x0, [sp, #1392]
   18470:	ldr	x0, [x0]
   18474:	str	x0, [sp, #1432]
   18478:	ldr	x0, [sp, #1432]
   1847c:	mov	w1, #0x748                 	// #1864
   18480:	str	w1, [x0, #40]
   18484:	ldr	x3, [sp, #1376]
   18488:	adrp	x0, 8000 <cstring+0x4d0>
   1848c:	add	x2, x0, #0xa78
   18490:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18494:	add	x1, x0, #0x208
   18498:	ldr	x0, [sp, #40]
   1849c:	bl	4e70 <Perl_newXS@plt>
   184a0:	str	x0, [sp, #1392]
   184a4:	ldr	x0, [sp, #1392]
   184a8:	ldr	x0, [x0]
   184ac:	str	x0, [sp, #1440]
   184b0:	ldr	x0, [sp, #1440]
   184b4:	mov	w1, #0x778                 	// #1912
   184b8:	str	w1, [x0, #40]
   184bc:	ldr	x3, [sp, #1376]
   184c0:	adrp	x0, 8000 <cstring+0x4d0>
   184c4:	add	x2, x0, #0xa78
   184c8:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   184cc:	add	x1, x0, #0x218
   184d0:	ldr	x0, [sp, #40]
   184d4:	bl	4e70 <Perl_newXS@plt>
   184d8:	str	x0, [sp, #1392]
   184dc:	ldr	x0, [sp, #1392]
   184e0:	ldr	x0, [x0]
   184e4:	str	x0, [sp, #1448]
   184e8:	ldr	x0, [sp, #1448]
   184ec:	mov	w1, #0x620                 	// #1568
   184f0:	str	w1, [x0, #40]
   184f4:	ldr	x3, [sp, #1376]
   184f8:	adrp	x0, 8000 <cstring+0x4d0>
   184fc:	add	x2, x0, #0xa78
   18500:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18504:	add	x1, x0, #0x228
   18508:	ldr	x0, [sp, #40]
   1850c:	bl	4e70 <Perl_newXS@plt>
   18510:	str	x0, [sp, #1392]
   18514:	ldr	x0, [sp, #1392]
   18518:	ldr	x0, [x0]
   1851c:	str	x0, [sp, #1456]
   18520:	ldr	x0, [sp, #1456]
   18524:	mov	w1, #0xd0                  	// #208
   18528:	str	w1, [x0, #40]
   1852c:	ldr	x3, [sp, #1376]
   18530:	adrp	x0, 8000 <cstring+0x4d0>
   18534:	add	x2, x0, #0xa78
   18538:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   1853c:	add	x1, x0, #0x238
   18540:	ldr	x0, [sp, #40]
   18544:	bl	4e70 <Perl_newXS@plt>
   18548:	str	x0, [sp, #1392]
   1854c:	ldr	x0, [sp, #1392]
   18550:	ldr	x0, [x0]
   18554:	str	x0, [sp, #1464]
   18558:	ldr	x0, [sp, #1464]
   1855c:	mov	w1, #0xd8                  	// #216
   18560:	str	w1, [x0, #40]
   18564:	ldr	x3, [sp, #1376]
   18568:	adrp	x0, 8000 <cstring+0x4d0>
   1856c:	add	x2, x0, #0xa78
   18570:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18574:	add	x1, x0, #0x248
   18578:	ldr	x0, [sp, #40]
   1857c:	bl	4e70 <Perl_newXS@plt>
   18580:	str	x0, [sp, #1392]
   18584:	ldr	x0, [sp, #1392]
   18588:	ldr	x0, [x0]
   1858c:	str	x0, [sp, #1472]
   18590:	ldr	x0, [sp, #1472]
   18594:	mov	w1, #0xab8                 	// #2744
   18598:	str	w1, [x0, #40]
   1859c:	ldr	x3, [sp, #1376]
   185a0:	adrp	x0, 8000 <cstring+0x4d0>
   185a4:	add	x2, x0, #0xa78
   185a8:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   185ac:	add	x1, x0, #0x258
   185b0:	ldr	x0, [sp, #40]
   185b4:	bl	4e70 <Perl_newXS@plt>
   185b8:	str	x0, [sp, #1392]
   185bc:	ldr	x0, [sp, #1392]
   185c0:	ldr	x0, [x0]
   185c4:	str	x0, [sp, #1480]
   185c8:	ldr	x0, [sp, #1480]
   185cc:	mov	w1, #0x648                 	// #1608
   185d0:	str	w1, [x0, #40]
   185d4:	ldr	x3, [sp, #1376]
   185d8:	adrp	x0, 8000 <cstring+0x4d0>
   185dc:	add	x2, x0, #0xa78
   185e0:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   185e4:	add	x1, x0, #0x268
   185e8:	ldr	x0, [sp, #40]
   185ec:	bl	4e70 <Perl_newXS@plt>
   185f0:	str	x0, [sp, #1392]
   185f4:	ldr	x0, [sp, #1392]
   185f8:	ldr	x0, [x0]
   185fc:	str	x0, [sp, #1488]
   18600:	ldr	x0, [sp, #1488]
   18604:	mov	w1, #0x640                 	// #1600
   18608:	str	w1, [x0, #40]
   1860c:	mov	w2, #0x2                   	// #2
   18610:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18614:	add	x1, x0, #0x278
   18618:	ldr	x0, [sp, #40]
   1861c:	bl	4e50 <Perl_get_sv@plt>
   18620:	str	x0, [sp, #1496]
   18624:	ldr	x0, [sp, #40]
   18628:	add	x0, x0, #0x138
   1862c:	mov	w3, #0x2                   	// #2
   18630:	mov	x2, x0
   18634:	ldr	x1, [sp, #1496]
   18638:	ldr	x0, [sp, #40]
   1863c:	bl	4eb0 <Perl_sv_setsv_flags@plt>
   18640:	mov	w4, #0x9                   	// #9
   18644:	mov	w3, #0x1                   	// #1
   18648:	mov	x2, #0x10                  	// #16
   1864c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18650:	add	x1, x0, #0x140
   18654:	ldr	x0, [sp, #40]
   18658:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   1865c:	str	x0, [sp, #1504]
   18660:	mov	w4, #0x9                   	// #9
   18664:	mov	w3, #0x1                   	// #1
   18668:	mov	x2, #0x13                  	// #19
   1866c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18670:	add	x1, x0, #0x290
   18674:	ldr	x0, [sp, #40]
   18678:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   1867c:	mov	w3, #0x2                   	// #2
   18680:	ldr	x2, [sp, #1504]
   18684:	mov	x1, x0
   18688:	ldr	x0, [sp, #40]
   1868c:	bl	4eb0 <Perl_sv_setsv_flags@plt>
   18690:	mov	w4, #0x9                   	// #9
   18694:	mov	w3, #0x1                   	// #1
   18698:	mov	x2, #0x13                  	// #19
   1869c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   186a0:	add	x1, x0, #0x2a8
   186a4:	ldr	x0, [sp, #40]
   186a8:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   186ac:	mov	w3, #0x2                   	// #2
   186b0:	ldr	x2, [sp, #1504]
   186b4:	mov	x1, x0
   186b8:	ldr	x0, [sp, #40]
   186bc:	bl	4eb0 <Perl_sv_setsv_flags@plt>
   186c0:	mov	w4, #0x9                   	// #9
   186c4:	mov	w3, #0x1                   	// #1
   186c8:	mov	x2, #0xf                   	// #15
   186cc:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   186d0:	add	x1, x0, #0x2c0
   186d4:	ldr	x0, [sp, #40]
   186d8:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   186dc:	mov	x19, x0
   186e0:	mov	w4, #0x9                   	// #9
   186e4:	mov	w3, #0x1                   	// #1
   186e8:	mov	x2, #0xe                   	// #14
   186ec:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   186f0:	add	x1, x0, #0x170
   186f4:	ldr	x0, [sp, #40]
   186f8:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   186fc:	mov	w3, #0x2                   	// #2
   18700:	mov	x2, x0
   18704:	mov	x1, x19
   18708:	ldr	x0, [sp, #40]
   1870c:	bl	4eb0 <Perl_sv_setsv_flags@plt>
   18710:	mov	w4, #0x9                   	// #9
   18714:	mov	w3, #0x1                   	// #1
   18718:	mov	x2, #0x1c                  	// #28
   1871c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18720:	add	x1, x0, #0x2d0
   18724:	ldr	x0, [sp, #40]
   18728:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   1872c:	mov	x19, x0
   18730:	mov	w4, #0x9                   	// #9
   18734:	mov	w3, #0x1                   	// #1
   18738:	mov	x2, #0x1d                  	// #29
   1873c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18740:	add	x1, x0, #0xe0
   18744:	ldr	x0, [sp, #40]
   18748:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   1874c:	mov	w3, #0x2                   	// #2
   18750:	mov	x2, x0
   18754:	mov	x1, x19
   18758:	ldr	x0, [sp, #40]
   1875c:	bl	4eb0 <Perl_sv_setsv_flags@plt>
   18760:	mov	w4, #0x9                   	// #9
   18764:	mov	w3, #0x1                   	// #1
   18768:	mov	x2, #0x20                  	// #32
   1876c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18770:	add	x1, x0, #0x2f0
   18774:	ldr	x0, [sp, #40]
   18778:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   1877c:	mov	x19, x0
   18780:	mov	w4, #0x9                   	// #9
   18784:	mov	w3, #0x1                   	// #1
   18788:	mov	x2, #0x1e                  	// #30
   1878c:	adrp	x0, 1a000 <values_for_notfound+0x12e8>
   18790:	add	x1, x0, #0xc0
   18794:	ldr	x0, [sp, #40]
   18798:	bl	4e20 <Perl_gv_fetchpvn_flags@plt>
   1879c:	mov	w3, #0x2                   	// #2
   187a0:	mov	x2, x0
   187a4:	mov	x1, x19
   187a8:	ldr	x0, [sp, #40]
   187ac:	bl	4eb0 <Perl_sv_setsv_flags@plt>
   187b0:	ldr	w1, [sp, #48]
   187b4:	ldr	x0, [sp, #40]
   187b8:	bl	4cf0 <Perl_xs_boot_epilog@plt>
   187bc:	nop
   187c0:	ldp	x19, x20, [sp, #16]
   187c4:	ldp	x29, x30, [sp]
   187c8:	add	sp, sp, #0x5f0
   187cc:	ret

Disassembly of section .fini:

00000000000187d0 <_fini>:
   187d0:	stp	x29, x30, [sp, #-16]!
   187d4:	mov	x29, sp
   187d8:	ldp	x29, x30, [sp], #16
   187dc:	ret
