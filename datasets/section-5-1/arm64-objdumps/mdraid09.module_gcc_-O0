
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mdraid09.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_swap_bytes32>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	rev	w0, w0
  10:	add	sp, sp, #0x10
  14:	ret

0000000000000018 <grub_diskfilter_register_front>:
  18:	stp	x29, x30, [sp, #-32]!
  1c:	mov	x29, sp
  20:	str	x0, [sp, #24]
  24:	ldr	x1, [sp, #24]
  28:	adrp	x0, 0 <grub_swap_bytes32>
  2c:	add	x0, x0, #0x0
  30:	ldr	x0, [x0]
  34:	bl	0 <grub_list_push>
  38:	nop
  3c:	ldp	x29, x30, [sp], #32
  40:	ret
  44:	nop
	...

0000000000000050 <grub_diskfilter_unregister>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #24]
  5c:	ldr	x0, [sp, #24]
  60:	bl	0 <grub_list_remove>
  64:	nop
  68:	ldp	x29, x30, [sp], #32
  6c:	ret

0000000000000070 <grub_mdraid_detect>:
  70:	stp	x29, x30, [sp, #-144]!
  74:	mov	x29, sp
  78:	str	x19, [sp, #16]
  7c:	str	x0, [sp, #56]
  80:	str	x1, [sp, #48]
  84:	str	x2, [sp, #40]
  88:	str	xzr, [sp, #128]
  8c:	ldr	x0, [sp, #56]
  90:	bl	0 <grub_disk_get_size>
  94:	str	x0, [sp, #120]
  98:	ldr	x0, [sp, #120]
  9c:	cmn	x0, #0x1
  a0:	b.ne	ac <grub_mdraid_detect+0x3c>  // b.any
  a4:	mov	x0, #0x0                   	// #0
  a8:	b	394 <grub_mdraid_detect+0x324>
  ac:	ldr	x0, [sp, #120]
  b0:	and	x0, x0, #0xffffffffffffff80
  b4:	sub	x0, x0, #0x80
  b8:	str	x0, [sp, #112]
  bc:	mov	x0, #0x1000                	// #4096
  c0:	bl	0 <grub_malloc>
  c4:	str	x0, [sp, #128]
  c8:	ldr	x0, [sp, #128]
  cc:	cmp	x0, #0x0
  d0:	b.ne	dc <grub_mdraid_detect+0x6c>  // b.any
  d4:	mov	x0, #0x0                   	// #0
  d8:	b	394 <grub_mdraid_detect+0x324>
  dc:	ldr	x4, [sp, #128]
  e0:	mov	x3, #0x1000                	// #4096
  e4:	mov	x2, #0x0                   	// #0
  e8:	ldr	x1, [sp, #112]
  ec:	ldr	x0, [sp, #56]
  f0:	bl	0 <grub_disk_read>
  f4:	cmp	w0, #0x0
  f8:	b.ne	35c <grub_mdraid_detect+0x2ec>  // b.any
  fc:	ldr	x0, [sp, #128]
 100:	ldr	w1, [x0]
 104:	mov	w0, #0x4efc                	// #20220
 108:	movk	w0, #0xa92b, lsl #16
 10c:	cmp	w1, w0
 110:	b.ne	364 <grub_mdraid_detect+0x2f4>  // b.any
 114:	ldr	x0, [sp, #128]
 118:	ldr	w0, [x0, #4]
 11c:	cmp	w0, #0x0
 120:	b.ne	36c <grub_mdraid_detect+0x2fc>  // b.any
 124:	ldr	x0, [sp, #128]
 128:	ldr	w0, [x0, #8]
 12c:	cmp	w0, #0x5a
 130:	b.ne	36c <grub_mdraid_detect+0x2fc>  // b.any
 134:	ldr	x0, [sp, #128]
 138:	ldr	w0, [x0, #32]
 13c:	mov	w0, w0
 140:	lsl	x0, x0, #1
 144:	ldr	x1, [sp, #120]
 148:	cmp	x1, x0
 14c:	b.ls	374 <grub_mdraid_detect+0x304>  // b.plast
 150:	ldr	x0, [sp, #128]
 154:	ldr	w0, [x0, #28]
 158:	str	w0, [sp, #140]
 15c:	ldr	w0, [sp, #140]
 160:	cmn	w0, #0x4
 164:	b.ne	170 <grub_mdraid_detect+0x100>  // b.any
 168:	mov	w0, #0x1                   	// #1
 16c:	str	w0, [sp, #140]
 170:	ldr	w0, [sp, #140]
 174:	cmp	w0, #0x0
 178:	b.eq	1d4 <grub_mdraid_detect+0x164>  // b.none
 17c:	ldr	w0, [sp, #140]
 180:	cmp	w0, #0x1
 184:	b.eq	1d4 <grub_mdraid_detect+0x164>  // b.none
 188:	ldr	w0, [sp, #140]
 18c:	cmp	w0, #0x4
 190:	b.eq	1d4 <grub_mdraid_detect+0x164>  // b.none
 194:	ldr	w0, [sp, #140]
 198:	cmp	w0, #0x5
 19c:	b.eq	1d4 <grub_mdraid_detect+0x164>  // b.none
 1a0:	ldr	w0, [sp, #140]
 1a4:	cmp	w0, #0x6
 1a8:	b.eq	1d4 <grub_mdraid_detect+0x164>  // b.none
 1ac:	ldr	w0, [sp, #140]
 1b0:	cmp	w0, #0xa
 1b4:	b.eq	1d4 <grub_mdraid_detect+0x164>  // b.none
 1b8:	ldr	w2, [sp, #140]
 1bc:	adrp	x0, 0 <grub_swap_bytes32>
 1c0:	add	x0, x0, #0x0
 1c4:	ldr	x1, [x0]
 1c8:	mov	w0, #0x18                  	// #24
 1cc:	bl	0 <grub_error>
 1d0:	b	388 <grub_mdraid_detect+0x318>
 1d4:	ldr	x0, [sp, #128]
 1d8:	ldr	w1, [x0, #3968]
 1dc:	mov	w0, #0xffff                	// #65535
 1e0:	cmp	w1, w0
 1e4:	b.eq	37c <grub_mdraid_detect+0x30c>  // b.none
 1e8:	ldr	x0, [sp, #128]
 1ec:	ldr	w1, [x0, #3968]
 1f0:	mov	w0, #0xfffe                	// #65534
 1f4:	cmp	w1, w0
 1f8:	b.eq	37c <grub_mdraid_detect+0x30c>  // b.none
 1fc:	mov	x0, #0x10                  	// #16
 200:	bl	0 <grub_malloc>
 204:	str	x0, [sp, #104]
 208:	ldr	x0, [sp, #104]
 20c:	cmp	x0, #0x0
 210:	b.eq	384 <grub_mdraid_detect+0x314>  // b.none
 214:	ldr	x0, [sp, #128]
 218:	ldr	w0, [x0, #20]
 21c:	bl	0 <grub_swap_bytes32>
 220:	mov	w1, w0
 224:	ldr	x0, [sp, #104]
 228:	str	w1, [x0]
 22c:	ldr	x0, [sp, #128]
 230:	ldr	w1, [x0, #52]
 234:	ldr	x0, [sp, #104]
 238:	add	x19, x0, #0x4
 23c:	mov	w0, w1
 240:	bl	0 <grub_swap_bytes32>
 244:	str	w0, [x19]
 248:	ldr	x0, [sp, #128]
 24c:	ldr	w1, [x0, #56]
 250:	ldr	x0, [sp, #104]
 254:	add	x19, x0, #0x8
 258:	mov	w0, w1
 25c:	bl	0 <grub_swap_bytes32>
 260:	str	w0, [x19]
 264:	ldr	x0, [sp, #128]
 268:	ldr	w1, [x0, #60]
 26c:	ldr	x0, [sp, #104]
 270:	add	x19, x0, #0xc
 274:	mov	w0, w1
 278:	bl	0 <grub_swap_bytes32>
 27c:	str	w0, [x19]
 280:	ldr	x0, [sp, #40]
 284:	str	xzr, [x0]
 288:	ldr	x0, [sp, #48]
 28c:	str	xzr, [x0, #8]
 290:	ldr	x0, [sp, #128]
 294:	ldr	w0, [x0, #3968]
 298:	mov	w1, w0
 29c:	ldr	x0, [sp, #48]
 2a0:	str	w1, [x0]
 2a4:	ldr	x0, [sp, #128]
 2a8:	ldr	w0, [x0, #44]
 2ac:	add	x4, sp, #0x40
 2b0:	mov	w3, w0
 2b4:	adrp	x0, 0 <grub_swap_bytes32>
 2b8:	add	x0, x0, #0x0
 2bc:	ldr	x2, [x0]
 2c0:	mov	x1, #0x20                  	// #32
 2c4:	mov	x0, x4
 2c8:	bl	0 <grub_snprintf>
 2cc:	ldr	x0, [sp, #128]
 2d0:	ldr	w0, [x0, #40]
 2d4:	mov	w8, w0
 2d8:	ldr	x0, [sp, #128]
 2dc:	ldr	w0, [x0, #32]
 2e0:	cmp	w0, #0x0
 2e4:	b.eq	2fc <grub_mdraid_detect+0x28c>  // b.none
 2e8:	ldr	x0, [sp, #128]
 2ec:	ldr	w0, [x0, #32]
 2f0:	mov	w0, w0
 2f4:	lsl	x0, x0, #1
 2f8:	b	300 <grub_mdraid_detect+0x290>
 2fc:	ldr	x0, [sp, #112]
 300:	ldr	x1, [sp, #128]
 304:	ldr	w1, [x1, #260]
 308:	lsr	w1, w1, #9
 30c:	mov	w2, w1
 310:	ldr	x1, [sp, #128]
 314:	ldr	w1, [x1, #256]
 318:	mov	w4, w1
 31c:	ldr	w3, [sp, #140]
 320:	add	x1, sp, #0x40
 324:	mov	w7, w3
 328:	mov	w6, w4
 32c:	mov	x5, x2
 330:	mov	x4, x0
 334:	mov	x3, x1
 338:	mov	w2, w8
 33c:	ldr	x1, [sp, #104]
 340:	mov	x0, #0x10                  	// #16
 344:	bl	0 <grub_diskfilter_make_raid>
 348:	str	x0, [sp, #96]
 34c:	ldr	x0, [sp, #128]
 350:	bl	0 <grub_free>
 354:	ldr	x0, [sp, #96]
 358:	b	394 <grub_mdraid_detect+0x324>
 35c:	nop
 360:	b	388 <grub_mdraid_detect+0x318>
 364:	nop
 368:	b	388 <grub_mdraid_detect+0x318>
 36c:	nop
 370:	b	388 <grub_mdraid_detect+0x318>
 374:	nop
 378:	b	388 <grub_mdraid_detect+0x318>
 37c:	nop
 380:	b	388 <grub_mdraid_detect+0x318>
 384:	nop
 388:	ldr	x0, [sp, #128]
 38c:	bl	0 <grub_free>
 390:	mov	x0, #0x0                   	// #0
 394:	ldr	x19, [sp, #16]
 398:	ldp	x29, x30, [sp], #144
 39c:	ret
	...

00000000000003b0 <grub_mod_init>:
 3b0:	stp	x29, x30, [sp, #-32]!
 3b4:	mov	x29, sp
 3b8:	str	x0, [sp, #24]
 3bc:	adrp	x0, 0 <grub_swap_bytes32>
 3c0:	add	x0, x0, #0x0
 3c4:	ldr	x0, [x0]
 3c8:	bl	18 <grub_diskfilter_register_front>
 3cc:	nop
 3d0:	ldp	x29, x30, [sp], #32
 3d4:	ret
	...

00000000000003e0 <grub_mod_fini>:
 3e0:	stp	x29, x30, [sp, #-16]!
 3e4:	mov	x29, sp
 3e8:	adrp	x0, 0 <grub_swap_bytes32>
 3ec:	add	x0, x0, #0x0
 3f0:	ldr	x0, [x0]
 3f4:	bl	50 <grub_diskfilter_unregister>
 3f8:	nop
 3fc:	ldp	x29, x30, [sp], #16
 400:	ret
 404:	nop
	...
