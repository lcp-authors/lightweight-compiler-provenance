
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ln_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a38 <_init>:
 a38:	stp	x29, x30, [sp, #-16]!
 a3c:	mov	x29, sp
 a40:	bl	b80 <call_weak_fn>
 a44:	ldp	x29, x30, [sp], #16
 a48:	ret

Disassembly of section .plt:

0000000000000a50 <.plt>:
 a50:	stp	x16, x30, [sp, #-16]!
 a54:	adrp	x16, 11000 <__FRAME_END__+0xfbc8>
 a58:	ldr	x17, [x16, #4088]
 a5c:	add	x16, x16, #0xff8
 a60:	br	x17
 a64:	nop
 a68:	nop
 a6c:	nop

0000000000000a70 <strlen@plt>:
 a70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a74:	ldr	x17, [x16]
 a78:	add	x16, x16, #0x0
 a7c:	br	x17

0000000000000a80 <builtin_error@plt>:
 a80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a84:	ldr	x17, [x16, #8]
 a88:	add	x16, x16, #0x8
 a8c:	br	x17

0000000000000a90 <__cxa_finalize@plt>:
 a90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a94:	ldr	x17, [x16, #16]
 a98:	add	x16, x16, #0x10
 a9c:	br	x17

0000000000000aa0 <builtin_help@plt>:
 aa0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 aa4:	ldr	x17, [x16, #24]
 aa8:	add	x16, x16, #0x18
 aac:	br	x17

0000000000000ab0 <xmalloc@plt>:
 ab0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ab4:	ldr	x17, [x16, #32]
 ab8:	add	x16, x16, #0x20
 abc:	br	x17

0000000000000ac0 <builtin_usage@plt>:
 ac0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ac4:	ldr	x17, [x16, #40]
 ac8:	add	x16, x16, #0x28
 acc:	br	x17

0000000000000ad0 <strerror@plt>:
 ad0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ad4:	ldr	x17, [x16, #48]
 ad8:	add	x16, x16, #0x30
 adc:	br	x17

0000000000000ae0 <strrchr@plt>:
 ae0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ae4:	ldr	x17, [x16, #56]
 ae8:	add	x16, x16, #0x38
 aec:	br	x17

0000000000000af0 <__gmon_start__@plt>:
 af0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 af4:	ldr	x17, [x16, #64]
 af8:	add	x16, x16, #0x40
 afc:	br	x17

0000000000000b00 <free@plt>:
 b00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b04:	ldr	x17, [x16, #72]
 b08:	add	x16, x16, #0x48
 b0c:	br	x17

0000000000000b10 <internal_getopt@plt>:
 b10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b14:	ldr	x17, [x16, #80]
 b18:	add	x16, x16, #0x50
 b1c:	br	x17

0000000000000b20 <reset_internal_getopt@plt>:
 b20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b24:	ldr	x17, [x16, #88]
 b28:	add	x16, x16, #0x58
 b2c:	br	x17

0000000000000b30 <strcpy@plt>:
 b30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b34:	ldr	x17, [x16, #96]
 b38:	add	x16, x16, #0x60
 b3c:	br	x17

0000000000000b40 <__lxstat@plt>:
 b40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b44:	ldr	x17, [x16, #104]
 b48:	add	x16, x16, #0x68
 b4c:	br	x17

0000000000000b50 <__errno_location@plt>:
 b50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b54:	ldr	x17, [x16, #112]
 b58:	add	x16, x16, #0x70
 b5c:	br	x17

0000000000000b60 <__xstat@plt>:
 b60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b64:	ldr	x17, [x16, #120]
 b68:	add	x16, x16, #0x78
 b6c:	br	x17

0000000000000b70 <unlink@plt>:
 b70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 b74:	ldr	x17, [x16, #128]
 b78:	add	x16, x16, #0x80
 b7c:	br	x17

Disassembly of section .text:

0000000000000b80 <call_weak_fn>:
     b80:	adrp	x0, 11000 <__FRAME_END__+0xfbc8>
     b84:	ldr	x0, [x0, #4032]
     b88:	cbz	x0, b90 <call_weak_fn+0x10>
     b8c:	b	af0 <__gmon_start__@plt>
     b90:	ret
     b94:	nop

0000000000000b98 <deregister_tm_clones>:
     b98:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     b9c:	add	x0, x0, #0x100
     ba0:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     ba4:	add	x1, x1, #0x100
     ba8:	cmp	x1, x0
     bac:	b.eq	bc4 <deregister_tm_clones+0x2c>  // b.none
     bb0:	adrp	x1, 11000 <__FRAME_END__+0xfbc8>
     bb4:	ldr	x1, [x1, #4016]
     bb8:	cbz	x1, bc4 <deregister_tm_clones+0x2c>
     bbc:	mov	x16, x1
     bc0:	br	x16
     bc4:	ret

0000000000000bc8 <register_tm_clones>:
     bc8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     bcc:	add	x0, x0, #0x100
     bd0:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     bd4:	add	x1, x1, #0x100
     bd8:	sub	x1, x1, x0
     bdc:	lsr	x2, x1, #63
     be0:	add	x1, x2, x1, asr #3
     be4:	cmp	xzr, x1, asr #1
     be8:	asr	x1, x1, #1
     bec:	b.eq	c04 <register_tm_clones+0x3c>  // b.none
     bf0:	adrp	x2, 11000 <__FRAME_END__+0xfbc8>
     bf4:	ldr	x2, [x2, #4064]
     bf8:	cbz	x2, c04 <register_tm_clones+0x3c>
     bfc:	mov	x16, x2
     c00:	br	x16
     c04:	ret

0000000000000c08 <__do_global_dtors_aux>:
     c08:	stp	x29, x30, [sp, #-32]!
     c0c:	mov	x29, sp
     c10:	str	x19, [sp, #16]
     c14:	adrp	x19, 12000 <strlen@GLIBC_2.17>
     c18:	ldrb	w0, [x19, #256]
     c1c:	cbnz	w0, c44 <__do_global_dtors_aux+0x3c>
     c20:	adrp	x0, 11000 <__FRAME_END__+0xfbc8>
     c24:	ldr	x0, [x0, #4024]
     c28:	cbz	x0, c38 <__do_global_dtors_aux+0x30>
     c2c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     c30:	ldr	x0, [x0, #136]
     c34:	bl	a90 <__cxa_finalize@plt>
     c38:	bl	b98 <deregister_tm_clones>
     c3c:	mov	w0, #0x1                   	// #1
     c40:	strb	w0, [x19, #256]
     c44:	ldr	x19, [sp, #16]
     c48:	ldp	x29, x30, [sp], #32
     c4c:	ret

0000000000000c50 <frame_dummy>:
     c50:	b	bc8 <register_tm_clones>
     c54:	nop

0000000000000c58 <dolink>:
     c58:	stp	x29, x30, [sp, #-336]!
     c5c:	mov	x29, sp
     c60:	stp	x19, x20, [sp, #16]
     c64:	mov	x19, x1
     c68:	mov	w20, w2
     c6c:	stp	x23, x24, [sp, #48]
     c70:	mov	x23, x0
     c74:	tbz	w20, #0, d20 <dolink+0xc8>
     c78:	stp	x21, x22, [sp, #32]
     c7c:	add	x21, sp, #0xd0
     c80:	mov	x1, x19
     c84:	mov	x2, x21
     c88:	mov	w0, #0x0                   	// #0
     c8c:	tbnz	w20, #2, d10 <dolink+0xb8>
     c90:	bl	b60 <__xstat@plt>
     c94:	cmp	w0, #0x0
     c98:	cset	w0, eq  // eq = none
     c9c:	mov	x22, #0x0                   	// #0
     ca0:	cbz	w0, cb4 <dolink+0x5c>
     ca4:	ldr	w0, [sp, #224]
     ca8:	and	w0, w0, #0xf000
     cac:	cmp	w0, #0x4, lsl #12
     cb0:	b.eq	dc0 <dolink+0x168>  // b.none
     cb4:	mov	x2, x21
     cb8:	mov	x1, x19
     cbc:	mov	w0, #0x0                   	// #0
     cc0:	bl	b40 <__lxstat@plt>
     cc4:	tst	x20, #0x2
     cc8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     ccc:	b.eq	e60 <dolink+0x208>  // b.none
     cd0:	adrp	x2, 12000 <strlen@GLIBC_2.17>
     cd4:	mov	x1, x19
     cd8:	mov	x0, x23
     cdc:	ldr	x2, [x2, #264]
     ce0:	blr	x2
     ce4:	mov	w20, w0
     ce8:	cbnz	w0, d74 <dolink+0x11c>
     cec:	cbz	x22, d5c <dolink+0x104>
     cf0:	mov	x0, x22
     cf4:	bl	b00 <free@plt>
     cf8:	ldp	x21, x22, [sp, #32]
     cfc:	mov	w0, w20
     d00:	ldp	x19, x20, [sp, #16]
     d04:	ldp	x23, x24, [sp, #48]
     d08:	ldp	x29, x30, [sp], #336
     d0c:	ret
     d10:	bl	b40 <__lxstat@plt>
     d14:	cmp	w0, #0x0
     d18:	cset	w0, eq  // eq = none
     d1c:	b	c9c <dolink+0x44>
     d20:	mov	x1, x0
     d24:	add	x2, sp, #0x50
     d28:	mov	w0, #0x0                   	// #0
     d2c:	bl	b60 <__xstat@plt>
     d30:	cbnz	w0, e9c <dolink+0x244>
     d34:	ldr	w0, [sp, #96]
     d38:	and	w0, w0, #0xf000
     d3c:	cmp	w0, #0x4, lsl #12
     d40:	b.ne	c78 <dolink+0x20>  // b.any
     d44:	bl	b50 <__errno_location@plt>
     d48:	mov	x1, x0
     d4c:	mov	w20, #0x1                   	// #1
     d50:	mov	w0, #0x15                  	// #21
     d54:	str	w0, [x1]
     d58:	b	ea8 <dolink+0x250>
     d5c:	mov	w0, w20
     d60:	ldp	x19, x20, [sp, #16]
     d64:	ldp	x21, x22, [sp, #32]
     d68:	ldp	x23, x24, [sp, #48]
     d6c:	ldp	x29, x30, [sp], #336
     d70:	ret
     d74:	bl	b50 <__errno_location@plt>
     d78:	ldr	w0, [x0]
     d7c:	bl	ad0 <strerror@plt>
     d80:	mov	x3, x0
     d84:	mov	x2, x23
     d88:	adrp	x0, 1000 <ln_builtin+0x138>
     d8c:	mov	x1, x19
     d90:	add	x0, x0, #0xc0
     d94:	bl	a80 <builtin_error@plt>
     d98:	cbz	x22, e90 <dolink+0x238>
     d9c:	mov	x0, x22
     da0:	mov	w20, #0x1                   	// #1
     da4:	bl	b00 <free@plt>
     da8:	mov	w0, w20
     dac:	ldp	x19, x20, [sp, #16]
     db0:	ldp	x21, x22, [sp, #32]
     db4:	ldp	x23, x24, [sp, #48]
     db8:	ldp	x29, x30, [sp], #336
     dbc:	ret
     dc0:	mov	w1, #0x2f                  	// #47
     dc4:	mov	x0, x23
     dc8:	str	x25, [sp, #64]
     dcc:	bl	ae0 <strrchr@plt>
     dd0:	mov	x24, x0
     dd4:	mov	x0, x19
     dd8:	cmp	x24, #0x0
     ddc:	csinc	x24, x23, x24, eq  // eq = none
     de0:	bl	a70 <strlen@plt>
     de4:	mov	x25, x0
     de8:	mov	x0, x24
     dec:	bl	a70 <strlen@plt>
     df0:	add	w1, w25, #0x2
     df4:	add	w0, w1, w0
     df8:	sxtw	x0, w0
     dfc:	bl	ab0 <xmalloc@plt>
     e00:	mov	x1, x19
     e04:	mov	x22, x0
     e08:	bl	b30 <strcpy@plt>
     e0c:	add	x0, x22, w25, sxtw
     e10:	sxtw	x2, w25
     e14:	ldurb	w1, [x0, #-1]
     e18:	cmp	w1, #0x2f
     e1c:	b.eq	e30 <dolink+0x1d8>  // b.none
     e20:	add	w25, w25, #0x1
     e24:	mov	w0, #0x2f                  	// #47
     e28:	strb	w0, [x22, x2]
     e2c:	add	x0, x22, w25, sxtw
     e30:	mov	x1, x24
     e34:	mov	x19, x22
     e38:	bl	b30 <strcpy@plt>
     e3c:	mov	x2, x21
     e40:	mov	x1, x19
     e44:	mov	w0, #0x0                   	// #0
     e48:	ldr	x25, [sp, #64]
     e4c:	bl	b40 <__lxstat@plt>
     e50:	tst	x20, #0x2
     e54:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     e58:	b.ne	cd0 <dolink+0x78>  // b.any
     e5c:	nop
     e60:	mov	x0, x19
     e64:	bl	b70 <unlink@plt>
     e68:	cbz	w0, cd0 <dolink+0x78>
     e6c:	bl	b50 <__errno_location@plt>
     e70:	ldr	w0, [x0]
     e74:	bl	ad0 <strerror@plt>
     e78:	mov	x2, x0
     e7c:	mov	x1, x19
     e80:	adrp	x0, 1000 <ln_builtin+0x138>
     e84:	add	x0, x0, #0xa8
     e88:	bl	a80 <builtin_error@plt>
     e8c:	cbnz	x22, d9c <dolink+0x144>
     e90:	mov	w20, #0x1                   	// #1
     e94:	ldp	x21, x22, [sp, #32]
     e98:	b	cfc <dolink+0xa4>
     e9c:	bl	b50 <__errno_location@plt>
     ea0:	ldr	w0, [x0]
     ea4:	mov	w20, #0x1                   	// #1
     ea8:	bl	ad0 <strerror@plt>
     eac:	mov	x2, x0
     eb0:	mov	x1, x23
     eb4:	adrp	x0, 1000 <ln_builtin+0x138>
     eb8:	add	x0, x0, #0xa0
     ebc:	bl	a80 <builtin_error@plt>
     ec0:	b	cfc <dolink+0xa4>
     ec4:	nop

0000000000000ec8 <ln_builtin>:
     ec8:	stp	x29, x30, [sp, #-192]!
     ecc:	mov	x29, sp
     ed0:	stp	x19, x20, [sp, #16]
     ed4:	adrp	x19, 1000 <ln_builtin+0x138>
     ed8:	add	x19, x19, #0xe0
     edc:	stp	x21, x22, [sp, #32]
     ee0:	mov	w21, #0x0                   	// #0
     ee4:	mov	x20, x0
     ee8:	bl	b20 <reset_internal_getopt@plt>
     eec:	mov	x1, x19
     ef0:	mov	x0, x20
     ef4:	bl	b10 <internal_getopt@plt>
     ef8:	cmn	w0, #0x1
     efc:	b.eq	f3c <ln_builtin+0x74>  // b.none
     f00:	cmp	w0, #0x68
     f04:	b.eq	fd4 <ln_builtin+0x10c>  // b.none
     f08:	b.gt	f24 <ln_builtin+0x5c>
     f0c:	cmn	w0, #0x63
     f10:	b.eq	fdc <ln_builtin+0x114>  // b.none
     f14:	cmp	w0, #0x66
     f18:	b.ne	fb8 <ln_builtin+0xf0>  // b.any
     f1c:	orr	w21, w21, #0x2
     f20:	b	eec <ln_builtin+0x24>
     f24:	cmp	w0, #0x6e
     f28:	b.eq	fd4 <ln_builtin+0x10c>  // b.none
     f2c:	cmp	w0, #0x73
     f30:	b.ne	fb8 <ln_builtin+0xf0>  // b.any
     f34:	orr	w21, w21, #0x1
     f38:	b	eec <ln_builtin+0x24>
     f3c:	adrp	x0, 11000 <__FRAME_END__+0xfbc8>
     f40:	ldr	x0, [x0, #4048]
     f44:	ldr	x20, [x0]
     f48:	cbz	x20, fb8 <ln_builtin+0xf0>
     f4c:	adrp	x2, 11000 <__FRAME_END__+0xfbc8>
     f50:	adrp	x1, 11000 <__FRAME_END__+0xfbc8>
     f54:	adrp	x3, 12000 <strlen@GLIBC_2.17>
     f58:	tst	x21, #0x1
     f5c:	ldr	x2, [x2, #4056]
     f60:	ldr	x1, [x1, #4040]
     f64:	ldr	x0, [x20]
     f68:	csel	x1, x1, x2, ne  // ne = any
     f6c:	str	x1, [x3, #264]
     f70:	cbz	x0, 1050 <ln_builtin+0x188>
     f74:	ldr	x1, [x0]
     f78:	cbz	x1, 1070 <ln_builtin+0x1a8>
     f7c:	str	x23, [sp, #48]
     f80:	mov	x22, x0
     f84:	ldr	x0, [x0]
     f88:	cbnz	x0, f80 <ln_builtin+0xb8>
     f8c:	ldr	x1, [x22, #8]
     f90:	add	x2, sp, #0x40
     f94:	ldr	x23, [x1]
     f98:	mov	x1, x23
     f9c:	bl	b60 <__xstat@plt>
     fa0:	tbnz	w0, #31, 1034 <ln_builtin+0x16c>
     fa4:	ldr	w0, [sp, #80]
     fa8:	and	w0, w0, #0xf000
     fac:	cmp	w0, #0x4, lsl #12
     fb0:	b.eq	ff8 <ln_builtin+0x130>  // b.none
     fb4:	ldr	x23, [sp, #48]
     fb8:	mov	w19, #0x102                 	// #258
     fbc:	bl	ac0 <builtin_usage@plt>
     fc0:	mov	w0, w19
     fc4:	ldp	x19, x20, [sp, #16]
     fc8:	ldp	x21, x22, [sp, #32]
     fcc:	ldp	x29, x30, [sp], #192
     fd0:	ret
     fd4:	orr	w21, w21, #0x4
     fd8:	b	eec <ln_builtin+0x24>
     fdc:	bl	aa0 <builtin_help@plt>
     fe0:	mov	w19, #0x102                 	// #258
     fe4:	mov	w0, w19
     fe8:	ldp	x19, x20, [sp, #16]
     fec:	ldp	x21, x22, [sp, #32]
     ff0:	ldp	x29, x30, [sp], #192
     ff4:	ret
     ff8:	cmp	x20, x22
     ffc:	mov	w19, #0x0                   	// #0
    1000:	b.eq	102c <ln_builtin+0x164>  // b.none
    1004:	nop
    1008:	ldr	x0, [x20, #8]
    100c:	mov	w2, w21
    1010:	mov	x1, x23
    1014:	ldr	x0, [x0]
    1018:	bl	c58 <dolink>
    101c:	add	w19, w19, w0
    1020:	ldr	x20, [x20]
    1024:	cmp	x20, x22
    1028:	b.ne	1008 <ln_builtin+0x140>  // b.any
    102c:	ldr	x23, [sp, #48]
    1030:	b	fc0 <ln_builtin+0xf8>
    1034:	mov	x1, x23
    1038:	adrp	x0, 1000 <ln_builtin+0x138>
    103c:	mov	w19, #0x1                   	// #1
    1040:	add	x0, x0, #0xf0
    1044:	bl	a80 <builtin_error@plt>
    1048:	ldr	x23, [sp, #48]
    104c:	b	fc0 <ln_builtin+0xf8>
    1050:	ldr	x0, [x20, #8]
    1054:	mov	w2, w21
    1058:	adrp	x1, 1000 <ln_builtin+0x138>
    105c:	add	x1, x1, #0xe8
    1060:	ldr	x0, [x0]
    1064:	bl	c58 <dolink>
    1068:	mov	w19, w0
    106c:	b	fc0 <ln_builtin+0xf8>
    1070:	ldr	x1, [x0, #8]
    1074:	mov	w2, w21
    1078:	ldr	x0, [x20, #8]
    107c:	ldr	x1, [x1]
    1080:	ldr	x0, [x0]
    1084:	bl	c58 <dolink>
    1088:	mov	w19, w0
    108c:	b	fc0 <ln_builtin+0xf8>

Disassembly of section .fini:

0000000000001090 <_fini>:
    1090:	stp	x29, x30, [sp, #-16]!
    1094:	mov	x29, sp
    1098:	ldp	x29, x30, [sp], #16
    109c:	ret
