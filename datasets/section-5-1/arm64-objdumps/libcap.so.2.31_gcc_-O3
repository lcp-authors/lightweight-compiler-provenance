
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000019b0 <.init>:
    19b0:	stp	x29, x30, [sp, #-16]!
    19b4:	mov	x29, sp
    19b8:	bl	1d78 <cap_to_name@plt+0x98>
    19bc:	ldp	x29, x30, [sp], #16
    19c0:	ret

Disassembly of section .plt:

00000000000019d0 <memcpy@plt-0x20>:
    19d0:	stp	x16, x30, [sp, #-16]!
    19d4:	adrp	x16, 15000 <cap_set_nsowner@@Base+0x10900>
    19d8:	ldr	x17, [x16, #4088]
    19dc:	add	x16, x16, #0xff8
    19e0:	br	x17
    19e4:	nop
    19e8:	nop
    19ec:	nop

00000000000019f0 <memcpy@plt>:
    19f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16]
    19f8:	add	x16, x16, #0x0
    19fc:	br	x17

0000000000001a00 <removexattr@plt>:
    1a00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #8]
    1a08:	add	x16, x16, #0x8
    1a0c:	br	x17

0000000000001a10 <setuid@plt>:
    1a10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #16]
    1a18:	add	x16, x16, #0x10
    1a1c:	br	x17

0000000000001a20 <strtoul@plt>:
    1a20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #24]
    1a28:	add	x16, x16, #0x18
    1a2c:	br	x17

0000000000001a30 <strlen@plt>:
    1a30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #32]
    1a38:	add	x16, x16, #0x20
    1a3c:	br	x17

0000000000001a40 <psx_load_syscalls@plt>:
    1a40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #40]
    1a48:	add	x16, x16, #0x28
    1a4c:	br	x17

0000000000001a50 <cap_get_secbits@plt>:
    1a50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #48]
    1a58:	add	x16, x16, #0x30
    1a5c:	br	x17

0000000000001a60 <cap_clear_flag@plt>:
    1a60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #56]
    1a68:	add	x16, x16, #0x38
    1a6c:	br	x17

0000000000001a70 <cap_max_bits@plt>:
    1a70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #64]
    1a78:	add	x16, x16, #0x40
    1a7c:	br	x17

0000000000001a80 <_libcap_strdup@plt>:
    1a80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #72]
    1a88:	add	x16, x16, #0x48
    1a8c:	br	x17

0000000000001a90 <cap_get_ambient@plt>:
    1a90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #80]
    1a98:	add	x16, x16, #0x50
    1a9c:	br	x17

0000000000001aa0 <__cxa_finalize@plt>:
    1aa0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #88]
    1aa8:	add	x16, x16, #0x58
    1aac:	br	x17

0000000000001ab0 <sprintf@plt>:
    1ab0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #96]
    1ab8:	add	x16, x16, #0x60
    1abc:	br	x17

0000000000001ac0 <asprintf@plt>:
    1ac0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #104]
    1ac8:	add	x16, x16, #0x68
    1acc:	br	x17

0000000000001ad0 <__ctype_tolower_loc@plt>:
    1ad0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #112]
    1ad8:	add	x16, x16, #0x70
    1adc:	br	x17

0000000000001ae0 <capset@plt>:
    1ae0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #120]
    1ae8:	add	x16, x16, #0x78
    1aec:	br	x17

0000000000001af0 <malloc@plt>:
    1af0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #128]
    1af8:	add	x16, x16, #0x80
    1afc:	br	x17

0000000000001b00 <cap_set_syscall@plt>:
    1b00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #136]
    1b08:	add	x16, x16, #0x88
    1b0c:	br	x17

0000000000001b10 <setxattr@plt>:
    1b10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #144]
    1b18:	add	x16, x16, #0x90
    1b1c:	br	x17

0000000000001b20 <cap_reset_ambient@plt>:
    1b20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #152]
    1b28:	add	x16, x16, #0x98
    1b2c:	br	x17

0000000000001b30 <cap_get_bound@plt>:
    1b30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #160]
    1b38:	add	x16, x16, #0xa0
    1b3c:	br	x17

0000000000001b40 <memset@plt>:
    1b40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #168]
    1b48:	add	x16, x16, #0xa8
    1b4c:	br	x17

0000000000001b50 <calloc@plt>:
    1b50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #176]
    1b58:	add	x16, x16, #0xb0
    1b5c:	br	x17

0000000000001b60 <cap_set_proc@plt>:
    1b60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #184]
    1b68:	add	x16, x16, #0xb8
    1b6c:	br	x17

0000000000001b70 <__gmon_start__@plt>:
    1b70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #192]
    1b78:	add	x16, x16, #0xc0
    1b7c:	br	x17

0000000000001b80 <fremovexattr@plt>:
    1b80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #200]
    1b88:	add	x16, x16, #0xc8
    1b8c:	br	x17

0000000000001b90 <setgid@plt>:
    1b90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #208]
    1b98:	add	x16, x16, #0xd0
    1b9c:	br	x17

0000000000001ba0 <cap_init@plt>:
    1ba0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #216]
    1ba8:	add	x16, x16, #0xd8
    1bac:	br	x17

0000000000001bb0 <getxattr@plt>:
    1bb0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #224]
    1bb8:	add	x16, x16, #0xe0
    1bbc:	br	x17

0000000000001bc0 <__ctype_b_loc@plt>:
    1bc0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #232]
    1bc8:	add	x16, x16, #0xe8
    1bcc:	br	x17

0000000000001bd0 <cap_get_proc@plt>:
    1bd0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #240]
    1bd8:	add	x16, x16, #0xf0
    1bdc:	br	x17

0000000000001be0 <__lxstat64@plt>:
    1be0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #248]
    1be8:	add	x16, x16, #0xf8
    1bec:	br	x17

0000000000001bf0 <cap_drop_bound@plt>:
    1bf0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #256]
    1bf8:	add	x16, x16, #0x100
    1bfc:	br	x17

0000000000001c00 <free@plt>:
    1c00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #264]
    1c08:	add	x16, x16, #0x108
    1c0c:	br	x17

0000000000001c10 <__fxstat64@plt>:
    1c10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #272]
    1c18:	add	x16, x16, #0x110
    1c1c:	br	x17

0000000000001c20 <fgetxattr@plt>:
    1c20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #280]
    1c28:	add	x16, x16, #0x118
    1c2c:	br	x17

0000000000001c30 <setgroups@plt>:
    1c30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #288]
    1c38:	add	x16, x16, #0x120
    1c3c:	br	x17

0000000000001c40 <fsetxattr@plt>:
    1c40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #296]
    1c48:	add	x16, x16, #0x128
    1c4c:	br	x17

0000000000001c50 <capgetp@plt>:
    1c50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #304]
    1c58:	add	x16, x16, #0x130
    1c5c:	br	x17

0000000000001c60 <cap_free@plt>:
    1c60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #312]
    1c68:	add	x16, x16, #0x138
    1c6c:	br	x17

0000000000001c70 <cap_set_flag@plt>:
    1c70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #320]
    1c78:	add	x16, x16, #0x140
    1c7c:	br	x17

0000000000001c80 <cap_compare@plt>:
    1c80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #328]
    1c88:	add	x16, x16, #0x148
    1c8c:	br	x17

0000000000001c90 <capget@plt>:
    1c90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #336]
    1c98:	add	x16, x16, #0x150
    1c9c:	br	x17

0000000000001ca0 <cap_set_secbits@plt>:
    1ca0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #344]
    1ca8:	add	x16, x16, #0x158
    1cac:	br	x17

0000000000001cb0 <__errno_location@plt>:
    1cb0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #352]
    1cb8:	add	x16, x16, #0x160
    1cbc:	br	x17

0000000000001cc0 <prctl@plt>:
    1cc0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #360]
    1cc8:	add	x16, x16, #0x168
    1ccc:	br	x17

0000000000001cd0 <syscall@plt>:
    1cd0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #368]
    1cd8:	add	x16, x16, #0x170
    1cdc:	br	x17

0000000000001ce0 <cap_to_name@plt>:
    1ce0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #376]
    1ce8:	add	x16, x16, #0x178
    1cec:	br	x17

Disassembly of section .text:

0000000000001cf0 <cap_max_bits@@Base-0x160>:
    1cf0:	stp	x29, x30, [sp, #-48]!
    1cf4:	mov	x29, sp
    1cf8:	stp	x21, x22, [sp, #32]
    1cfc:	adrp	x22, 16000 <cap_set_nsowner@@Base+0x11900>
    1d00:	stp	x19, x20, [sp, #16]
    1d04:	ldr	w20, [x22, #724]
    1d08:	cbz	w20, 1d1c <cap_to_name@plt+0x3c>
    1d0c:	ldp	x19, x20, [sp, #16]
    1d10:	ldp	x21, x22, [sp, #32]
    1d14:	ldp	x29, x30, [sp], #48
    1d18:	ret
    1d1c:	mov	w21, #0x40                  	// #64
    1d20:	mov	x1, #0x0                   	// #0
    1d24:	mov	x0, #0x0                   	// #0
    1d28:	bl	1b00 <cap_set_syscall@plt>
    1d2c:	nop
    1d30:	add	w19, w20, w21
    1d34:	asr	w19, w19, #1
    1d38:	mov	w0, w19
    1d3c:	bl	1b30 <cap_get_bound@plt>
    1d40:	tbnz	w0, #31, 1d58 <cap_to_name@plt+0x78>
    1d44:	add	w20, w19, #0x1
    1d48:	cmp	w20, w21
    1d4c:	b.le	1d30 <cap_to_name@plt+0x50>
    1d50:	str	w20, [x22, #724]
    1d54:	b	1d0c <cap_to_name@plt+0x2c>
    1d58:	sub	w21, w19, #0x1
    1d5c:	cmp	w21, w20
    1d60:	b.ge	1d30 <cap_to_name@plt+0x50>  // b.tcont
    1d64:	cmp	w20, #0x0
    1d68:	mov	w0, #0x26                  	// #38
    1d6c:	csel	w20, w20, w0, ne  // ne = any
    1d70:	str	w20, [x22, #724]
    1d74:	b	1d0c <cap_to_name@plt+0x2c>
    1d78:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10900>
    1d7c:	ldr	x0, [x0, #4056]
    1d80:	cbz	x0, 1d88 <cap_to_name@plt+0xa8>
    1d84:	b	1b70 <__gmon_start__@plt>
    1d88:	ret
    1d8c:	nop
    1d90:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    1d94:	add	x0, x0, #0x2d0
    1d98:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11900>
    1d9c:	add	x1, x1, #0x2d0
    1da0:	cmp	x1, x0
    1da4:	b.eq	1dbc <cap_to_name@plt+0xdc>  // b.none
    1da8:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x10900>
    1dac:	ldr	x1, [x1, #4040]
    1db0:	cbz	x1, 1dbc <cap_to_name@plt+0xdc>
    1db4:	mov	x16, x1
    1db8:	br	x16
    1dbc:	ret
    1dc0:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    1dc4:	add	x0, x0, #0x2d0
    1dc8:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11900>
    1dcc:	add	x1, x1, #0x2d0
    1dd0:	sub	x1, x1, x0
    1dd4:	lsr	x2, x1, #63
    1dd8:	add	x1, x2, x1, asr #3
    1ddc:	cmp	xzr, x1, asr #1
    1de0:	asr	x1, x1, #1
    1de4:	b.eq	1dfc <cap_to_name@plt+0x11c>  // b.none
    1de8:	adrp	x2, 15000 <cap_set_nsowner@@Base+0x10900>
    1dec:	ldr	x2, [x2, #4064]
    1df0:	cbz	x2, 1dfc <cap_to_name@plt+0x11c>
    1df4:	mov	x16, x2
    1df8:	br	x16
    1dfc:	ret
    1e00:	stp	x29, x30, [sp, #-32]!
    1e04:	mov	x29, sp
    1e08:	str	x19, [sp, #16]
    1e0c:	adrp	x19, 16000 <cap_set_nsowner@@Base+0x11900>
    1e10:	ldrb	w0, [x19, #720]
    1e14:	cbnz	w0, 1e3c <cap_to_name@plt+0x15c>
    1e18:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10900>
    1e1c:	ldr	x0, [x0, #4048]
    1e20:	cbz	x0, 1e30 <cap_to_name@plt+0x150>
    1e24:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    1e28:	ldr	x0, [x0, #384]
    1e2c:	bl	1aa0 <__cxa_finalize@plt>
    1e30:	bl	1d90 <cap_to_name@plt+0xb0>
    1e34:	mov	w0, #0x1                   	// #1
    1e38:	strb	w0, [x19, #720]
    1e3c:	ldr	x19, [sp, #16]
    1e40:	ldp	x29, x30, [sp], #32
    1e44:	ret
    1e48:	b	1dc0 <cap_to_name@plt+0xe0>
    1e4c:	nop

0000000000001e50 <cap_max_bits@@Base>:
    1e50:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    1e54:	ldr	w0, [x0, #724]
    1e58:	ret
    1e5c:	nop

0000000000001e60 <_libcap_strdup@@Base>:
    1e60:	stp	x29, x30, [sp, #-32]!
    1e64:	mov	x29, sp
    1e68:	cbz	x0, 1ebc <_libcap_strdup@@Base+0x5c>
    1e6c:	stp	x19, x20, [sp, #16]
    1e70:	mov	x19, x0
    1e74:	bl	1a30 <strlen@plt>
    1e78:	mov	x20, x0
    1e7c:	add	x0, x0, #0x5
    1e80:	bl	1af0 <malloc@plt>
    1e84:	mov	x3, x0
    1e88:	cbz	x0, 1ed8 <_libcap_strdup@@Base+0x78>
    1e8c:	mov	w0, #0x95d0                	// #38352
    1e90:	add	x2, x20, #0x1
    1e94:	movk	w0, #0xca, lsl #16
    1e98:	str	w0, [x3], #4
    1e9c:	mov	x1, x19
    1ea0:	mov	x0, x3
    1ea4:	bl	19f0 <memcpy@plt>
    1ea8:	ldp	x19, x20, [sp, #16]
    1eac:	mov	x3, x0
    1eb0:	mov	x0, x3
    1eb4:	ldp	x29, x30, [sp], #32
    1eb8:	ret
    1ebc:	bl	1cb0 <__errno_location@plt>
    1ec0:	mov	w1, #0x16                  	// #22
    1ec4:	str	w1, [x0]
    1ec8:	mov	x3, #0x0                   	// #0
    1ecc:	mov	x0, x3
    1ed0:	ldp	x29, x30, [sp], #32
    1ed4:	ret
    1ed8:	bl	1cb0 <__errno_location@plt>
    1edc:	mov	w1, #0xc                   	// #12
    1ee0:	mov	x3, #0x0                   	// #0
    1ee4:	ldp	x19, x20, [sp, #16]
    1ee8:	str	w1, [x0]
    1eec:	b	1eb0 <_libcap_strdup@@Base+0x50>

0000000000001ef0 <cap_free@@Base>:
    1ef0:	cbz	x0, 1f58 <cap_free@@Base+0x68>
    1ef4:	stp	x29, x30, [sp, #-32]!
    1ef8:	mov	w2, #0x90d0                	// #37072
    1efc:	movk	w2, #0xca, lsl #16
    1f00:	mov	x29, sp
    1f04:	ldur	w1, [x0, #-4]
    1f08:	str	x19, [sp, #16]
    1f0c:	mov	x19, x0
    1f10:	cmp	w1, w2
    1f14:	b.eq	1f78 <cap_free@@Base+0x88>  // b.none
    1f18:	mov	w2, #0x95d0                	// #38352
    1f1c:	movk	w2, #0xca, lsl #16
    1f20:	cmp	w1, w2
    1f24:	b.ne	1f60 <cap_free@@Base+0x70>  // b.any
    1f28:	bl	1a30 <strlen@plt>
    1f2c:	add	x2, x0, #0x4
    1f30:	sub	x19, x19, #0x4
    1f34:	mov	w1, #0x0                   	// #0
    1f38:	mov	x0, x19
    1f3c:	bl	1b40 <memset@plt>
    1f40:	mov	x0, x19
    1f44:	bl	1c00 <free@plt>
    1f48:	mov	w0, #0x0                   	// #0
    1f4c:	ldr	x19, [sp, #16]
    1f50:	ldp	x29, x30, [sp], #32
    1f54:	ret
    1f58:	mov	w0, #0x0                   	// #0
    1f5c:	ret
    1f60:	bl	1cb0 <__errno_location@plt>
    1f64:	mov	x1, x0
    1f68:	mov	w2, #0x16                  	// #22
    1f6c:	mov	w0, #0xffffffff            	// #-1
    1f70:	str	w2, [x1]
    1f74:	b	1f4c <cap_free@@Base+0x5c>
    1f78:	sub	x0, x0, #0x4
    1f7c:	str	xzr, [x0, #32]
    1f80:	stp	xzr, xzr, [x0]
    1f84:	stp	xzr, xzr, [x0, #16]
    1f88:	bl	1c00 <free@plt>
    1f8c:	mov	w0, #0x0                   	// #0
    1f90:	b	1f4c <cap_free@@Base+0x5c>
    1f94:	nop

0000000000001f98 <cap_init@@Base>:
    1f98:	stp	x29, x30, [sp, #-32]!
    1f9c:	mov	x1, #0x28                  	// #40
    1fa0:	mov	x0, #0x1                   	// #1
    1fa4:	mov	x29, sp
    1fa8:	stp	x19, x20, [sp, #16]
    1fac:	bl	1b50 <calloc@plt>
    1fb0:	cbz	x0, 2024 <cap_init@@Base+0x8c>
    1fb4:	mov	x20, x0
    1fb8:	mov	x19, x0
    1fbc:	adrp	x0, 4000 <cap_to_text@@Base+0x528>
    1fc0:	mov	x1, #0x0                   	// #0
    1fc4:	ldr	d0, [x0, #1824]
    1fc8:	str	d0, [x20], #4
    1fcc:	mov	x0, x20
    1fd0:	bl	1c90 <capget@plt>
    1fd4:	ldr	w0, [x19, #4]
    1fd8:	mov	w1, #0x1026                	// #4134
    1fdc:	movk	w1, #0x2007, lsl #16
    1fe0:	cmp	w0, w1
    1fe4:	b.eq	2014 <cap_init@@Base+0x7c>  // b.none
    1fe8:	mov	w1, #0x522                 	// #1314
    1fec:	movk	w1, #0x2008, lsl #16
    1ff0:	cmp	w0, w1
    1ff4:	b.eq	2014 <cap_init@@Base+0x7c>  // b.none
    1ff8:	mov	w1, #0x330                 	// #816
    1ffc:	movk	w1, #0x1998, lsl #16
    2000:	cmp	w0, w1
    2004:	b.eq	2014 <cap_init@@Base+0x7c>  // b.none
    2008:	mov	x0, x20
    200c:	mov	x20, #0x0                   	// #0
    2010:	bl	1c60 <cap_free@plt>
    2014:	mov	x0, x20
    2018:	ldp	x19, x20, [sp, #16]
    201c:	ldp	x29, x30, [sp], #32
    2020:	ret
    2024:	bl	1cb0 <__errno_location@plt>
    2028:	mov	x20, #0x0                   	// #0
    202c:	mov	w1, #0xc                   	// #12
    2030:	str	w1, [x0]
    2034:	b	2014 <cap_init@@Base+0x7c>

0000000000002038 <cap_dup@@Base>:
    2038:	stp	x29, x30, [sp, #-32]!
    203c:	mov	x29, sp
    2040:	cbz	x0, 2090 <cap_dup@@Base+0x58>
    2044:	str	x19, [sp, #16]
    2048:	mov	x19, x0
    204c:	mov	w0, #0x90d0                	// #37072
    2050:	movk	w0, #0xca, lsl #16
    2054:	ldur	w1, [x19, #-4]
    2058:	cmp	w1, w0
    205c:	b.ne	208c <cap_dup@@Base+0x54>  // b.any
    2060:	bl	1ba0 <cap_init@plt>
    2064:	cbz	x0, 20ac <cap_dup@@Base+0x74>
    2068:	ldp	x2, x3, [x19]
    206c:	stp	x2, x3, [x0]
    2070:	ldp	x2, x3, [x19, #16]
    2074:	stp	x2, x3, [x0, #16]
    2078:	ldr	w1, [x19, #32]
    207c:	str	w1, [x0, #32]
    2080:	ldr	x19, [sp, #16]
    2084:	ldp	x29, x30, [sp], #32
    2088:	ret
    208c:	ldr	x19, [sp, #16]
    2090:	bl	1cb0 <__errno_location@plt>
    2094:	mov	x1, x0
    2098:	mov	w2, #0x16                  	// #22
    209c:	mov	x0, #0x0                   	// #0
    20a0:	str	w2, [x1]
    20a4:	ldp	x29, x30, [sp], #32
    20a8:	ret
    20ac:	ldr	x19, [sp, #16]
    20b0:	b	2084 <cap_dup@@Base+0x4c>
    20b4:	nop
    20b8:	b	1cd0 <syscall@plt>
    20bc:	nop
    20c0:	b	1cd0 <syscall@plt>
    20c4:	nop

00000000000020c8 <psx_load_syscalls@@Base>:
    20c8:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    20cc:	str	wzr, [x0, #392]
    20d0:	ret
    20d4:	nop

00000000000020d8 <cap_set_syscall@@Base>:
    20d8:	cbz	x0, 20f0 <cap_set_syscall@@Base+0x18>
    20dc:	adrp	x2, 16000 <cap_set_nsowner@@Base+0x11900>
    20e0:	add	x3, x2, #0x190
    20e4:	str	x1, [x2, #400]
    20e8:	str	x0, [x3, #8]
    20ec:	ret
    20f0:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11900>
    20f4:	add	x1, x1, #0x190
    20f8:	add	x0, x1, #0x8
    20fc:	b	1a40 <psx_load_syscalls@plt>

0000000000002100 <cap_get_proc@@Base>:
    2100:	stp	x29, x30, [sp, #-32]!
    2104:	mov	x29, sp
    2108:	str	x19, [sp, #16]
    210c:	bl	1ba0 <cap_init@plt>
    2110:	mov	x19, x0
    2114:	cbz	x0, 2124 <cap_get_proc@@Base+0x24>
    2118:	add	x1, x0, #0x8
    211c:	bl	1c90 <capget@plt>
    2120:	cbnz	w0, 2134 <cap_get_proc@@Base+0x34>
    2124:	mov	x0, x19
    2128:	ldr	x19, [sp, #16]
    212c:	ldp	x29, x30, [sp], #32
    2130:	ret
    2134:	mov	x0, x19
    2138:	mov	x19, #0x0                   	// #0
    213c:	bl	1c60 <cap_free@plt>
    2140:	b	2124 <cap_get_proc@@Base+0x24>
    2144:	nop

0000000000002148 <cap_set_proc@@Base>:
    2148:	stp	x29, x30, [sp, #-16]!
    214c:	mov	x29, sp
    2150:	cbz	x0, 218c <cap_set_proc@@Base+0x44>
    2154:	mov	x1, x0
    2158:	mov	w0, #0x90d0                	// #37072
    215c:	movk	w0, #0xca, lsl #16
    2160:	ldur	w2, [x1, #-4]
    2164:	cmp	w2, w0
    2168:	b.ne	218c <cap_set_proc@@Base+0x44>  // b.any
    216c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    2170:	add	x2, x1, #0x8
    2174:	mov	x3, #0x0                   	// #0
    2178:	ldr	x4, [x0, #408]
    217c:	mov	x0, #0x5b                  	// #91
    2180:	blr	x4
    2184:	ldp	x29, x30, [sp], #16
    2188:	ret
    218c:	bl	1cb0 <__errno_location@plt>
    2190:	mov	x1, x0
    2194:	mov	w2, #0x16                  	// #22
    2198:	mov	w0, #0xffffffff            	// #-1
    219c:	str	w2, [x1]
    21a0:	b	2184 <cap_set_proc@@Base+0x3c>
    21a4:	nop

00000000000021a8 <capgetp@@Base>:
    21a8:	stp	x29, x30, [sp, #-32]!
    21ac:	mov	x29, sp
    21b0:	cbz	x1, 21f4 <capgetp@@Base+0x4c>
    21b4:	str	x19, [sp, #16]
    21b8:	mov	x19, x1
    21bc:	mov	w1, #0x90d0                	// #37072
    21c0:	movk	w1, #0xca, lsl #16
    21c4:	ldur	w2, [x19, #-4]
    21c8:	cmp	w2, w1
    21cc:	b.ne	21f0 <capgetp@@Base+0x48>  // b.any
    21d0:	str	w0, [x19, #4]
    21d4:	add	x1, x19, #0x8
    21d8:	mov	x0, x19
    21dc:	bl	1c90 <capget@plt>
    21e0:	str	wzr, [x19, #4]
    21e4:	ldr	x19, [sp, #16]
    21e8:	ldp	x29, x30, [sp], #32
    21ec:	ret
    21f0:	ldr	x19, [sp, #16]
    21f4:	bl	1cb0 <__errno_location@plt>
    21f8:	mov	x1, x0
    21fc:	mov	w2, #0x16                  	// #22
    2200:	mov	w0, #0xffffffff            	// #-1
    2204:	str	w2, [x1]
    2208:	b	21e8 <capgetp@@Base+0x40>
    220c:	nop

0000000000002210 <cap_get_pid@@Base>:
    2210:	stp	x29, x30, [sp, #-48]!
    2214:	mov	x29, sp
    2218:	stp	x19, x20, [sp, #16]
    221c:	mov	w20, w0
    2220:	bl	1ba0 <cap_init@plt>
    2224:	mov	x19, x0
    2228:	cbz	x0, 223c <cap_get_pid@@Base+0x2c>
    222c:	mov	w0, w20
    2230:	mov	x1, x19
    2234:	bl	1c50 <capgetp@plt>
    2238:	cbnz	w0, 224c <cap_get_pid@@Base+0x3c>
    223c:	mov	x0, x19
    2240:	ldp	x19, x20, [sp, #16]
    2244:	ldp	x29, x30, [sp], #48
    2248:	ret
    224c:	str	x21, [sp, #32]
    2250:	bl	1cb0 <__errno_location@plt>
    2254:	mov	x20, x0
    2258:	mov	x0, x19
    225c:	mov	x19, #0x0                   	// #0
    2260:	ldr	w21, [x20]
    2264:	bl	1c60 <cap_free@plt>
    2268:	str	w21, [x20]
    226c:	ldr	x21, [sp, #32]
    2270:	b	223c <cap_get_pid@@Base+0x2c>
    2274:	nop

0000000000002278 <capsetp@@Base>:
    2278:	stp	x29, x30, [sp, #-32]!
    227c:	mov	x29, sp
    2280:	cbz	x1, 22cc <capsetp@@Base+0x54>
    2284:	str	x19, [sp, #16]
    2288:	mov	x19, x1
    228c:	mov	w1, #0x90d0                	// #37072
    2290:	movk	w1, #0xca, lsl #16
    2294:	ldur	w2, [x19, #-4]
    2298:	cmp	w2, w1
    229c:	b.ne	22c8 <capsetp@@Base+0x50>  // b.any
    22a0:	str	w0, [x19, #4]
    22a4:	add	x1, x19, #0x8
    22a8:	mov	x0, x19
    22ac:	bl	1ae0 <capset@plt>
    22b0:	mov	x1, #0x522                 	// #1314
    22b4:	movk	x1, #0x2008, lsl #16
    22b8:	str	x1, [x19]
    22bc:	ldr	x19, [sp, #16]
    22c0:	ldp	x29, x30, [sp], #32
    22c4:	ret
    22c8:	ldr	x19, [sp, #16]
    22cc:	bl	1cb0 <__errno_location@plt>
    22d0:	mov	x1, x0
    22d4:	mov	w2, #0x16                  	// #22
    22d8:	mov	w0, #0xffffffff            	// #-1
    22dc:	str	w2, [x1]
    22e0:	b	22c0 <capsetp@@Base+0x48>
    22e4:	nop

00000000000022e8 <cap_get_bound@@Base>:
    22e8:	stp	x29, x30, [sp, #-32]!
    22ec:	adrp	x4, 16000 <cap_set_nsowner@@Base+0x11900>
    22f0:	sxtw	x2, w0
    22f4:	mov	x29, sp
    22f8:	ldr	x4, [x4, #408]
    22fc:	mov	x3, #0x0                   	// #0
    2300:	mov	x1, #0x17                  	// #23
    2304:	mov	x0, #0xa7                  	// #167
    2308:	blr	x4
    230c:	tbnz	w0, #31, 2318 <cap_get_bound@@Base+0x30>
    2310:	ldp	x29, x30, [sp], #32
    2314:	ret
    2318:	str	x19, [sp, #16]
    231c:	mov	x19, x0
    2320:	bl	1cb0 <__errno_location@plt>
    2324:	mov	x1, x0
    2328:	neg	w19, w19
    232c:	mov	w0, #0xffffffff            	// #-1
    2330:	str	w19, [x1]
    2334:	ldr	x19, [sp, #16]
    2338:	b	2310 <cap_get_bound@@Base+0x28>
    233c:	nop

0000000000002340 <cap_drop_bound@@Base>:
    2340:	stp	x29, x30, [sp, #-32]!
    2344:	adrp	x4, 16000 <cap_set_nsowner@@Base+0x11900>
    2348:	sxtw	x2, w0
    234c:	mov	x29, sp
    2350:	ldr	x4, [x4, #408]
    2354:	mov	x3, #0x0                   	// #0
    2358:	mov	x1, #0x18                  	// #24
    235c:	mov	x0, #0xa7                  	// #167
    2360:	blr	x4
    2364:	tbnz	w0, #31, 2370 <cap_drop_bound@@Base+0x30>
    2368:	ldp	x29, x30, [sp], #32
    236c:	ret
    2370:	str	x19, [sp, #16]
    2374:	mov	x19, x0
    2378:	bl	1cb0 <__errno_location@plt>
    237c:	mov	x1, x0
    2380:	neg	w19, w19
    2384:	mov	w0, #0xffffffff            	// #-1
    2388:	str	w19, [x1]
    238c:	ldr	x19, [sp, #16]
    2390:	b	2368 <cap_drop_bound@@Base+0x28>
    2394:	nop

0000000000002398 <cap_get_ambient@@Base>:
    2398:	stp	x29, x30, [sp, #-32]!
    239c:	sxtw	x2, w0
    23a0:	mov	x4, #0x0                   	// #0
    23a4:	mov	x29, sp
    23a8:	mov	x3, #0x0                   	// #0
    23ac:	mov	x1, #0x1                   	// #1
    23b0:	mov	w0, #0x2f                  	// #47
    23b4:	str	x19, [sp, #16]
    23b8:	bl	1cc0 <prctl@plt>
    23bc:	mov	w19, w0
    23c0:	tbnz	w0, #31, 23d4 <cap_get_ambient@@Base+0x3c>
    23c4:	mov	w0, w19
    23c8:	ldr	x19, [sp, #16]
    23cc:	ldp	x29, x30, [sp], #32
    23d0:	ret
    23d4:	bl	1cb0 <__errno_location@plt>
    23d8:	neg	w1, w19
    23dc:	mov	w19, #0xffffffff            	// #-1
    23e0:	str	w1, [x0]
    23e4:	b	23c4 <cap_get_ambient@@Base+0x2c>

00000000000023e8 <cap_set_ambient@@Base>:
    23e8:	stp	x29, x30, [sp, #-32]!
    23ec:	mov	x29, sp
    23f0:	cbz	w1, 2458 <cap_set_ambient@@Base+0x70>
    23f4:	cmp	w1, #0x1
    23f8:	b.eq	2418 <cap_set_ambient@@Base+0x30>  // b.none
    23fc:	bl	1cb0 <__errno_location@plt>
    2400:	mov	x1, x0
    2404:	mov	w2, #0x16                  	// #22
    2408:	mov	w0, #0xffffffff            	// #-1
    240c:	str	w2, [x1]
    2410:	ldp	x29, x30, [sp], #32
    2414:	ret
    2418:	mov	x2, #0x2                   	// #2
    241c:	str	x19, [sp, #16]
    2420:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11900>
    2424:	sxtw	x3, w0
    2428:	mov	x6, #0x0                   	// #0
    242c:	mov	x5, #0x0                   	// #0
    2430:	ldr	x7, [x1, #400]
    2434:	mov	x4, #0x0                   	// #0
    2438:	mov	x1, #0x2f                  	// #47
    243c:	mov	x0, #0xa7                  	// #167
    2440:	blr	x7
    2444:	mov	x19, x0
    2448:	tbnz	w0, #31, 2464 <cap_set_ambient@@Base+0x7c>
    244c:	ldr	x19, [sp, #16]
    2450:	ldp	x29, x30, [sp], #32
    2454:	ret
    2458:	mov	x2, #0x3                   	// #3
    245c:	str	x19, [sp, #16]
    2460:	b	2420 <cap_set_ambient@@Base+0x38>
    2464:	bl	1cb0 <__errno_location@plt>
    2468:	mov	x1, x0
    246c:	neg	w19, w19
    2470:	mov	w0, #0xffffffff            	// #-1
    2474:	str	w19, [x1]
    2478:	ldr	x19, [sp, #16]
    247c:	b	2410 <cap_set_ambient@@Base+0x28>

0000000000002480 <cap_reset_ambient@@Base>:
    2480:	stp	x29, x30, [sp, #-48]!
    2484:	mov	x29, sp
    2488:	stp	x19, x20, [sp, #16]
    248c:	mov	w19, #0x0                   	// #0
    2490:	str	x21, [sp, #32]
    2494:	bl	1cb0 <__errno_location@plt>
    2498:	ldr	w21, [x0]
    249c:	mov	x20, x0
    24a0:	mov	w0, w19
    24a4:	add	w19, w19, #0x1
    24a8:	bl	1a90 <cap_get_ambient@plt>
    24ac:	cmn	w0, #0x1
    24b0:	b.eq	24f4 <cap_reset_ambient@@Base+0x74>  // b.none
    24b4:	cbz	w0, 24a0 <cap_reset_ambient@@Base+0x20>
    24b8:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    24bc:	mov	x6, #0x0                   	// #0
    24c0:	mov	x5, #0x0                   	// #0
    24c4:	mov	x4, #0x0                   	// #0
    24c8:	ldr	x7, [x0, #400]
    24cc:	mov	x3, #0x0                   	// #0
    24d0:	mov	x2, #0x4                   	// #4
    24d4:	mov	x1, #0x2f                  	// #47
    24d8:	mov	x0, #0xa7                  	// #167
    24dc:	blr	x7
    24e0:	tbnz	w0, #31, 250c <cap_reset_ambient@@Base+0x8c>
    24e4:	ldp	x19, x20, [sp, #16]
    24e8:	ldr	x21, [sp, #32]
    24ec:	ldp	x29, x30, [sp], #48
    24f0:	ret
    24f4:	str	w21, [x20]
    24f8:	mov	w0, #0x0                   	// #0
    24fc:	ldp	x19, x20, [sp, #16]
    2500:	ldr	x21, [sp, #32]
    2504:	ldp	x29, x30, [sp], #48
    2508:	ret
    250c:	neg	w1, w0
    2510:	mov	w0, #0xffffffff            	// #-1
    2514:	str	w1, [x20]
    2518:	b	24e4 <cap_reset_ambient@@Base+0x64>
    251c:	nop

0000000000002520 <cap_get_secbits@@Base>:
    2520:	mov	x2, #0x0                   	// #0
    2524:	mov	x1, #0x0                   	// #0
    2528:	mov	w0, #0x1b                  	// #27
    252c:	b	1cc0 <prctl@plt>

0000000000002530 <cap_set_secbits@@Base>:
    2530:	stp	x29, x30, [sp, #-16]!
    2534:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11900>
    2538:	mov	w2, w0
    253c:	mov	x29, sp
    2540:	ldr	x4, [x1, #408]
    2544:	mov	x3, #0x0                   	// #0
    2548:	mov	x1, #0x1c                  	// #28
    254c:	mov	x0, #0xa7                  	// #167
    2550:	blr	x4
    2554:	ldp	x29, x30, [sp], #16
    2558:	ret
    255c:	nop

0000000000002560 <cap_set_mode@@Base>:
    2560:	stp	x29, x30, [sp, #-64]!
    2564:	mov	w1, #0x8                   	// #8
    2568:	mov	x29, sp
    256c:	stp	x19, x20, [sp, #16]
    2570:	str	x21, [sp, #32]
    2574:	mov	w21, w0
    2578:	str	w1, [sp, #56]
    257c:	bl	1bd0 <cap_get_proc@plt>
    2580:	mov	w4, #0x1                   	// #1
    2584:	add	x3, sp, #0x38
    2588:	mov	w2, w4
    258c:	mov	w1, #0x0                   	// #0
    2590:	mov	x19, x0
    2594:	bl	1c70 <cap_set_flag@plt>
    2598:	mov	w20, w0
    259c:	mov	x0, x19
    25a0:	bl	1b60 <cap_set_proc@plt>
    25a4:	orr	w20, w0, w20
    25a8:	cbnz	w20, 25d4 <cap_set_mode@@Base+0x74>
    25ac:	cmp	w21, #0x2
    25b0:	b.ls	2608 <cap_set_mode@@Base+0xa8>  // b.plast
    25b4:	cmp	w21, #0x3
    25b8:	b.ne	260c <cap_set_mode@@Base+0xac>  // b.any
    25bc:	mov	w0, #0x0                   	// #0
    25c0:	bl	1a90 <cap_get_ambient@plt>
    25c4:	tbz	w0, #31, 2638 <cap_set_mode@@Base+0xd8>
    25c8:	mov	w0, #0x2f                  	// #47
    25cc:	bl	1ca0 <cap_set_secbits@plt>
    25d0:	mov	w20, w0
    25d4:	mov	w1, #0x0                   	// #0
    25d8:	mov	x0, x19
    25dc:	bl	1a60 <cap_clear_flag@plt>
    25e0:	mov	x0, x19
    25e4:	bl	1b60 <cap_set_proc@plt>
    25e8:	orr	w20, w0, w20
    25ec:	mov	x0, x19
    25f0:	bl	1c60 <cap_free@plt>
    25f4:	mov	w0, w20
    25f8:	ldp	x19, x20, [sp, #16]
    25fc:	ldr	x21, [sp, #32]
    2600:	ldp	x29, x30, [sp], #64
    2604:	ret
    2608:	cbnz	w21, 2620 <cap_set_mode@@Base+0xc0>
    260c:	bl	1cb0 <__errno_location@plt>
    2610:	mov	w20, #0xffffffff            	// #-1
    2614:	mov	w1, #0x16                  	// #22
    2618:	str	w1, [x0]
    261c:	b	25d4 <cap_set_mode@@Base+0x74>
    2620:	mov	w1, #0x2                   	// #2
    2624:	mov	x0, x19
    2628:	bl	1a60 <cap_clear_flag@plt>
    262c:	mov	w0, #0x0                   	// #0
    2630:	bl	1a90 <cap_get_ambient@plt>
    2634:	tbnz	w0, #31, 268c <cap_set_mode@@Base+0x12c>
    2638:	bl	1b20 <cap_reset_ambient@plt>
    263c:	mov	w20, w0
    2640:	mov	w0, #0xef                  	// #239
    2644:	cbnz	w20, 25d4 <cap_set_mode@@Base+0x74>
    2648:	bl	1ca0 <cap_set_secbits@plt>
    264c:	mov	w20, w0
    2650:	cmp	w21, #0x1
    2654:	b.ne	25d4 <cap_set_mode@@Base+0x74>  // b.any
    2658:	mov	w21, #0x0                   	// #0
    265c:	b	2664 <cap_set_mode@@Base+0x104>
    2660:	bl	1bf0 <cap_drop_bound@plt>
    2664:	mov	w0, w21
    2668:	bl	1b30 <cap_get_bound@plt>
    266c:	mov	w1, w0
    2670:	mov	w0, w21
    2674:	add	w21, w21, #0x1
    2678:	tbz	w1, #31, 2660 <cap_set_mode@@Base+0x100>
    267c:	mov	x0, x19
    2680:	mov	w1, #0x1                   	// #1
    2684:	bl	1a60 <cap_clear_flag@plt>
    2688:	b	25d4 <cap_set_mode@@Base+0x74>
    268c:	mov	w0, #0x2f                  	// #47
    2690:	b	2648 <cap_set_mode@@Base+0xe8>
    2694:	nop

0000000000002698 <cap_get_mode@@Base>:
    2698:	stp	x29, x30, [sp, #-48]!
    269c:	mov	x29, sp
    26a0:	stp	x19, x20, [sp, #16]
    26a4:	bl	1a50 <cap_get_secbits@plt>
    26a8:	mov	w20, w0
    26ac:	mov	w0, #0x2f                  	// #47
    26b0:	and	w0, w20, w0
    26b4:	cmp	w0, #0x2f
    26b8:	b.ne	2768 <cap_get_mode@@Base+0xd0>  // b.any
    26bc:	mov	w19, #0x0                   	// #0
    26c0:	stp	x21, x22, [sp, #32]
    26c4:	bl	1cb0 <__errno_location@plt>
    26c8:	ldr	w22, [x0]
    26cc:	mov	x21, x0
    26d0:	b	26dc <cap_get_mode@@Base+0x44>
    26d4:	add	w19, w19, #0x1
    26d8:	cbnz	w0, 2764 <cap_get_mode@@Base+0xcc>
    26dc:	mov	w0, w19
    26e0:	bl	1a90 <cap_get_ambient@plt>
    26e4:	cmn	w0, #0x1
    26e8:	b.ne	26d4 <cap_get_mode@@Base+0x3c>  // b.any
    26ec:	str	w22, [x21]
    26f0:	cmp	w20, #0xef
    26f4:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    26f8:	b.ne	2764 <cap_get_mode@@Base+0xcc>  // b.any
    26fc:	bl	1bd0 <cap_get_proc@plt>
    2700:	mov	x19, x0
    2704:	bl	1ba0 <cap_init@plt>
    2708:	mov	x21, x0
    270c:	mov	x1, x19
    2710:	bl	1c80 <cap_compare@plt>
    2714:	mov	w20, w0
    2718:	mov	x0, x21
    271c:	bl	1c60 <cap_free@plt>
    2720:	mov	x0, x19
    2724:	bl	1c60 <cap_free@plt>
    2728:	and	w19, w20, #0x4
    272c:	mov	w0, #0x3                   	// #3
    2730:	tbnz	w20, #2, 2784 <cap_get_mode@@Base+0xec>
    2734:	tst	x20, #0x3
    2738:	b.eq	2744 <cap_get_mode@@Base+0xac>  // b.none
    273c:	b	2778 <cap_get_mode@@Base+0xe0>
    2740:	cbnz	w0, 2778 <cap_get_mode@@Base+0xe0>
    2744:	mov	w0, w19
    2748:	add	w19, w19, #0x1
    274c:	bl	1b30 <cap_get_bound@plt>
    2750:	cmn	w0, #0x1
    2754:	b.ne	2740 <cap_get_mode@@Base+0xa8>  // b.any
    2758:	mov	w0, #0x1                   	// #1
    275c:	ldp	x21, x22, [sp, #32]
    2760:	b	276c <cap_get_mode@@Base+0xd4>
    2764:	ldp	x21, x22, [sp, #32]
    2768:	mov	w0, #0x0                   	// #0
    276c:	ldp	x19, x20, [sp, #16]
    2770:	ldp	x29, x30, [sp], #48
    2774:	ret
    2778:	mov	w0, #0x2                   	// #2
    277c:	ldp	x21, x22, [sp, #32]
    2780:	b	276c <cap_get_mode@@Base+0xd4>
    2784:	ldp	x21, x22, [sp, #32]
    2788:	b	276c <cap_get_mode@@Base+0xd4>
    278c:	nop

0000000000002790 <cap_setuid@@Base>:
    2790:	stp	x29, x30, [sp, #-80]!
    2794:	mov	w1, #0x7                   	// #7
    2798:	mov	x29, sp
    279c:	stp	x21, x22, [sp, #32]
    27a0:	adrp	x21, 16000 <cap_set_nsowner@@Base+0x11900>
    27a4:	stp	x23, x24, [sp, #48]
    27a8:	add	x24, x21, #0x190
    27ac:	mov	w23, w0
    27b0:	stp	x19, x20, [sp, #16]
    27b4:	str	w1, [sp, #72]
    27b8:	bl	1bd0 <cap_get_proc@plt>
    27bc:	mov	w4, #0x1                   	// #1
    27c0:	mov	x19, x0
    27c4:	mov	w2, w4
    27c8:	add	x3, sp, #0x48
    27cc:	mov	w1, #0x0                   	// #0
    27d0:	bl	1c70 <cap_set_flag@plt>
    27d4:	ldr	x4, [x24, #8]
    27d8:	mov	x3, #0x0                   	// #0
    27dc:	mov	x2, #0x1                   	// #1
    27e0:	mov	x1, #0x8                   	// #8
    27e4:	mov	x0, #0xa7                  	// #167
    27e8:	blr	x4
    27ec:	mov	x0, x19
    27f0:	bl	1b60 <cap_set_proc@plt>
    27f4:	mov	w20, w0
    27f8:	bl	1cb0 <__errno_location@plt>
    27fc:	mov	x22, x0
    2800:	cbnz	w20, 2830 <cap_setuid@@Base+0xa0>
    2804:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11900>
    2808:	ldr	w0, [x0, #392]
    280c:	cbz	w0, 2888 <cap_setuid@@Base+0xf8>
    2810:	ldr	x4, [x24, #8]
    2814:	mov	w1, w23
    2818:	mov	x3, #0x0                   	// #0
    281c:	mov	x2, #0x0                   	// #0
    2820:	mov	x0, #0x92                  	// #146
    2824:	blr	x4
    2828:	mov	w20, w0
    282c:	tbnz	w0, #31, 289c <cap_setuid@@Base+0x10c>
    2830:	ldr	w23, [x22]
    2834:	add	x21, x21, #0x190
    2838:	mov	x3, #0x0                   	// #0
    283c:	mov	x2, #0x0                   	// #0
    2840:	mov	x1, #0x8                   	// #8
    2844:	mov	x0, #0xa7                  	// #167
    2848:	ldr	x4, [x21, #8]
    284c:	blr	x4
    2850:	mov	w1, #0x0                   	// #0
    2854:	mov	x0, x19
    2858:	bl	1a60 <cap_clear_flag@plt>
    285c:	mov	x0, x19
    2860:	bl	1b60 <cap_set_proc@plt>
    2864:	mov	x0, x19
    2868:	bl	1c60 <cap_free@plt>
    286c:	mov	w0, w20
    2870:	ldp	x19, x20, [sp, #16]
    2874:	str	w23, [x22]
    2878:	ldp	x21, x22, [sp, #32]
    287c:	ldp	x23, x24, [sp, #48]
    2880:	ldp	x29, x30, [sp], #80
    2884:	ret
    2888:	mov	w0, w23
    288c:	bl	1a10 <setuid@plt>
    2890:	ldr	w23, [x22]
    2894:	mov	w20, w0
    2898:	b	2834 <cap_setuid@@Base+0xa4>
    289c:	neg	w23, w0
    28a0:	mov	w20, #0xffffffff            	// #-1
    28a4:	str	w23, [x22]
    28a8:	b	2834 <cap_setuid@@Base+0xa4>
    28ac:	nop

00000000000028b0 <cap_setgroups@@Base>:
    28b0:	stp	x29, x30, [sp, #-96]!
    28b4:	mov	x29, sp
    28b8:	stp	x23, x24, [sp, #48]
    28bc:	mov	w24, w0
    28c0:	mov	w0, #0x6                   	// #6
    28c4:	mov	x23, x2
    28c8:	stp	x19, x20, [sp, #16]
    28cc:	stp	x21, x22, [sp, #32]
    28d0:	mov	x22, x1
    28d4:	str	x25, [sp, #64]
    28d8:	str	w0, [sp, #88]
    28dc:	bl	1bd0 <cap_get_proc@plt>
    28e0:	mov	w4, #0x1                   	// #1
    28e4:	add	x3, sp, #0x58
    28e8:	mov	w2, w4
    28ec:	mov	w1, #0x0                   	// #0
    28f0:	mov	x20, x0
    28f4:	bl	1c70 <cap_set_flag@plt>
    28f8:	mov	x0, x20
    28fc:	bl	1b60 <cap_set_proc@plt>
    2900:	mov	w19, w0
    2904:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11900>
    2908:	ldr	w25, [x1, #392]
    290c:	bl	1cb0 <__errno_location@plt>
    2910:	mov	x21, x0
    2914:	cbz	w25, 29a4 <cap_setgroups@@Base+0xf4>
    2918:	cbnz	w19, 2960 <cap_setgroups@@Base+0xb0>
    291c:	adrp	x25, 16000 <cap_set_nsowner@@Base+0x11900>
    2920:	add	x25, x25, #0x190
    2924:	mov	w1, w24
    2928:	mov	x3, #0x0                   	// #0
    292c:	mov	x2, #0x0                   	// #0
    2930:	mov	x0, #0x90                  	// #144
    2934:	ldr	x4, [x25, #8]
    2938:	blr	x4
    293c:	mov	w19, w0
    2940:	cbnz	w0, 2960 <cap_setgroups@@Base+0xb0>
    2944:	ldr	x4, [x25, #8]
    2948:	mov	x2, x23
    294c:	mov	x1, x22
    2950:	mov	x3, #0x0                   	// #0
    2954:	mov	x0, #0x9f                  	// #159
    2958:	blr	x4
    295c:	mov	w19, w0
    2960:	tbnz	w19, #31, 29d0 <cap_setgroups@@Base+0x120>
    2964:	ldr	w22, [x21]
    2968:	mov	w1, #0x0                   	// #0
    296c:	mov	x0, x20
    2970:	bl	1a60 <cap_clear_flag@plt>
    2974:	mov	x0, x20
    2978:	bl	1b60 <cap_set_proc@plt>
    297c:	mov	x0, x20
    2980:	bl	1c60 <cap_free@plt>
    2984:	mov	w0, w19
    2988:	ldp	x19, x20, [sp, #16]
    298c:	ldp	x23, x24, [sp, #48]
    2990:	ldr	x25, [sp, #64]
    2994:	str	w22, [x21]
    2998:	ldp	x21, x22, [sp, #32]
    299c:	ldp	x29, x30, [sp], #96
    29a0:	ret
    29a4:	cbnz	w19, 2964 <cap_setgroups@@Base+0xb4>
    29a8:	mov	w0, w24
    29ac:	bl	1b90 <setgid@plt>
    29b0:	mov	w19, w0
    29b4:	cbnz	w0, 2964 <cap_setgroups@@Base+0xb4>
    29b8:	mov	x0, x22
    29bc:	mov	x1, x23
    29c0:	bl	1c30 <setgroups@plt>
    29c4:	ldr	w22, [x21]
    29c8:	mov	w19, w0
    29cc:	b	2968 <cap_setgroups@@Base+0xb8>
    29d0:	neg	w22, w19
    29d4:	mov	w19, #0xffffffff            	// #-1
    29d8:	str	w22, [x21]
    29dc:	b	2968 <cap_setgroups@@Base+0xb8>

00000000000029e0 <cap_size@@Base>:
    29e0:	mov	x0, #0x1d                  	// #29
    29e4:	ret

00000000000029e8 <cap_copy_ext@@Base>:
    29e8:	cbz	x1, 2aec <cap_copy_ext@@Base+0x104>
    29ec:	ldur	w4, [x1, #-4]
    29f0:	mov	x3, x0
    29f4:	mov	w0, #0x90d0                	// #37072
    29f8:	movk	w0, #0xca, lsl #16
    29fc:	cmp	w4, w0
    2a00:	b.ne	2aec <cap_copy_ext@@Base+0x104>  // b.any
    2a04:	cmp	x3, #0x0
    2a08:	ccmp	x2, #0x1c, #0x4, ne  // ne = any
    2a0c:	b.le	2aec <cap_copy_ext@@Base+0x104>
    2a10:	mov	w0, #0xc290                	// #49808
    2a14:	mov	w2, #0x8                   	// #8
    2a18:	movk	w0, #0x5101, lsl #16
    2a1c:	str	w0, [x3]
    2a20:	strb	w2, [x3, #4]
    2a24:	mov	x0, #0x1d                  	// #29
    2a28:	ldr	w2, [x1, #8]
    2a2c:	strb	w2, [x3, #5]
    2a30:	lsr	w5, w2, #8
    2a34:	lsr	w4, w2, #16
    2a38:	lsr	w2, w2, #24
    2a3c:	strb	w5, [x3, #8]
    2a40:	strb	w4, [x3, #11]
    2a44:	strb	w2, [x3, #14]
    2a48:	ldr	w2, [x1, #20]
    2a4c:	strb	w2, [x3, #17]
    2a50:	lsr	w5, w2, #8
    2a54:	lsr	w4, w2, #16
    2a58:	lsr	w2, w2, #24
    2a5c:	strb	w5, [x3, #20]
    2a60:	strb	w4, [x3, #23]
    2a64:	strb	w2, [x3, #26]
    2a68:	ldr	w2, [x1, #12]
    2a6c:	strb	w2, [x3, #6]
    2a70:	lsr	w5, w2, #8
    2a74:	lsr	w4, w2, #16
    2a78:	lsr	w2, w2, #24
    2a7c:	strb	w5, [x3, #9]
    2a80:	strb	w4, [x3, #12]
    2a84:	strb	w2, [x3, #15]
    2a88:	ldr	w2, [x1, #24]
    2a8c:	strb	w2, [x3, #18]
    2a90:	lsr	w5, w2, #8
    2a94:	lsr	w4, w2, #16
    2a98:	lsr	w2, w2, #24
    2a9c:	strb	w5, [x3, #21]
    2aa0:	strb	w4, [x3, #24]
    2aa4:	strb	w2, [x3, #27]
    2aa8:	ldr	w2, [x1, #16]
    2aac:	strb	w2, [x3, #7]
    2ab0:	lsr	w5, w2, #8
    2ab4:	lsr	w4, w2, #16
    2ab8:	lsr	w2, w2, #24
    2abc:	strb	w5, [x3, #10]
    2ac0:	strb	w4, [x3, #13]
    2ac4:	strb	w2, [x3, #16]
    2ac8:	ldr	w1, [x1, #28]
    2acc:	strb	w1, [x3, #19]
    2ad0:	lsr	w4, w1, #8
    2ad4:	lsr	w2, w1, #16
    2ad8:	lsr	w1, w1, #24
    2adc:	strb	w4, [x3, #22]
    2ae0:	strb	w2, [x3, #25]
    2ae4:	strb	w1, [x3, #28]
    2ae8:	ret
    2aec:	stp	x29, x30, [sp, #-16]!
    2af0:	mov	x29, sp
    2af4:	bl	1cb0 <__errno_location@plt>
    2af8:	mov	x1, x0
    2afc:	mov	w2, #0x16                  	// #22
    2b00:	mov	x0, #0xffffffffffffffff    	// #-1
    2b04:	str	w2, [x1]
    2b08:	ldp	x29, x30, [sp], #16
    2b0c:	ret

0000000000002b10 <cap_copy_int@@Base>:
    2b10:	stp	x29, x30, [sp, #-32]!
    2b14:	mov	x29, sp
    2b18:	cbz	x0, 2ca0 <cap_copy_int@@Base+0x190>
    2b1c:	str	x19, [sp, #16]
    2b20:	mov	x19, x0
    2b24:	mov	w0, #0xc290                	// #49808
    2b28:	movk	w0, #0x5101, lsl #16
    2b2c:	ldr	w1, [x19]
    2b30:	cmp	w1, w0
    2b34:	b.ne	2c9c <cap_copy_int@@Base+0x18c>  // b.any
    2b38:	bl	1ba0 <cap_init@plt>
    2b3c:	cbz	x0, 2d38 <cap_copy_int@@Base+0x228>
    2b40:	ldrb	w1, [x19, #4]
    2b44:	cbz	w1, 2c88 <cap_copy_int@@Base+0x178>
    2b48:	cmp	w1, #0x7
    2b4c:	b.eq	2d40 <cap_copy_int@@Base+0x230>  // b.none
    2b50:	cmp	w1, #0x6
    2b54:	b.eq	2da0 <cap_copy_int@@Base+0x290>  // b.none
    2b58:	cmp	w1, #0x5
    2b5c:	b.eq	2cf0 <cap_copy_int@@Base+0x1e0>  // b.none
    2b60:	ldrb	w2, [x19, #5]
    2b64:	cmp	w1, #0x1
    2b68:	b.eq	2cbc <cap_copy_int@@Base+0x1ac>  // b.none
    2b6c:	ldrb	w3, [x19, #8]
    2b70:	cmp	w1, #0x2
    2b74:	orr	w2, w2, w3, lsl #8
    2b78:	b.eq	2cbc <cap_copy_int@@Base+0x1ac>  // b.none
    2b7c:	ldrb	w3, [x19, #11]
    2b80:	cmp	w1, #0x3
    2b84:	orr	w2, w2, w3, lsl #16
    2b88:	b.eq	2cbc <cap_copy_int@@Base+0x1ac>  // b.none
    2b8c:	ldrb	w3, [x19, #14]
    2b90:	cmp	w1, #0x4
    2b94:	orr	w2, w2, w3, lsl #24
    2b98:	str	w2, [x0, #8]
    2b9c:	b.eq	2dfc <cap_copy_int@@Base+0x2ec>  // b.none
    2ba0:	ldrb	w4, [x19, #23]
    2ba4:	ldrb	w2, [x19, #20]
    2ba8:	ldrb	w3, [x19, #26]
    2bac:	ldrb	w5, [x19, #17]
    2bb0:	lsl	w4, w4, #16
    2bb4:	orr	w2, w4, w2, lsl #8
    2bb8:	orr	w3, w5, w3, lsl #24
    2bbc:	orr	w2, w2, w3
    2bc0:	str	w2, [x0, #20]
    2bc4:	ldrb	w2, [x19, #6]
    2bc8:	ldrb	w3, [x19, #9]
    2bcc:	cmp	w1, #0x2
    2bd0:	orr	w2, w2, w3, lsl #8
    2bd4:	b.eq	2cd0 <cap_copy_int@@Base+0x1c0>  // b.none
    2bd8:	ldrb	w3, [x19, #12]
    2bdc:	cmp	w1, #0x3
    2be0:	orr	w2, w2, w3, lsl #16
    2be4:	b.eq	2cd0 <cap_copy_int@@Base+0x1c0>  // b.none
    2be8:	ldrb	w3, [x19, #15]
    2bec:	cmp	w1, #0x4
    2bf0:	orr	w2, w2, w3, lsl #24
    2bf4:	str	w2, [x0, #12]
    2bf8:	b.eq	2e04 <cap_copy_int@@Base+0x2f4>  // b.none
    2bfc:	ldrb	w4, [x19, #24]
    2c00:	ldrb	w2, [x19, #21]
    2c04:	ldrb	w3, [x19, #27]
    2c08:	ldrb	w5, [x19, #18]
    2c0c:	lsl	w4, w4, #16
    2c10:	orr	w2, w4, w2, lsl #8
    2c14:	orr	w3, w5, w3, lsl #24
    2c18:	orr	w2, w2, w3
    2c1c:	str	w2, [x0, #24]
    2c20:	ldrb	w2, [x19, #7]
    2c24:	ldrb	w3, [x19, #10]
    2c28:	cmp	w1, #0x2
    2c2c:	orr	w2, w2, w3, lsl #8
    2c30:	b.eq	2ce4 <cap_copy_int@@Base+0x1d4>  // b.none
    2c34:	ldrb	w3, [x19, #13]
    2c38:	cmp	w1, #0x3
    2c3c:	orr	w2, w2, w3, lsl #16
    2c40:	b.eq	2ce4 <cap_copy_int@@Base+0x1d4>  // b.none
    2c44:	ldrb	w3, [x19, #16]
    2c48:	cmp	w1, #0x4
    2c4c:	orr	w2, w2, w3, lsl #24
    2c50:	str	w2, [x0, #16]
    2c54:	b.eq	2df4 <cap_copy_int@@Base+0x2e4>  // b.none
    2c58:	ldrb	w3, [x19, #25]
    2c5c:	ldrb	w1, [x19, #22]
    2c60:	ldrb	w2, [x19, #28]
    2c64:	ldrb	w4, [x19, #19]
    2c68:	lsl	w3, w3, #16
    2c6c:	orr	w1, w3, w1, lsl #8
    2c70:	orr	w2, w4, w2, lsl #24
    2c74:	orr	w1, w1, w2
    2c78:	ldr	x19, [sp, #16]
    2c7c:	str	w1, [x0, #28]
    2c80:	ldp	x29, x30, [sp], #32
    2c84:	ret
    2c88:	stp	xzr, xzr, [x0, #8]
    2c8c:	str	xzr, [x0, #24]
    2c90:	ldr	x19, [sp, #16]
    2c94:	ldp	x29, x30, [sp], #32
    2c98:	ret
    2c9c:	ldr	x19, [sp, #16]
    2ca0:	bl	1cb0 <__errno_location@plt>
    2ca4:	mov	x1, x0
    2ca8:	mov	w2, #0x16                  	// #22
    2cac:	mov	x0, #0x0                   	// #0
    2cb0:	str	w2, [x1]
    2cb4:	ldp	x29, x30, [sp], #32
    2cb8:	ret
    2cbc:	str	w2, [x0, #8]
    2cc0:	cmp	w1, #0x1
    2cc4:	str	wzr, [x0, #20]
    2cc8:	ldrb	w2, [x19, #6]
    2ccc:	b.ne	2bc8 <cap_copy_int@@Base+0xb8>  // b.any
    2cd0:	str	w2, [x0, #12]
    2cd4:	cmp	w1, #0x1
    2cd8:	str	wzr, [x0, #24]
    2cdc:	ldrb	w2, [x19, #7]
    2ce0:	b.ne	2c24 <cap_copy_int@@Base+0x114>  // b.any
    2ce4:	mov	w1, #0x0                   	// #0
    2ce8:	str	w2, [x0, #16]
    2cec:	b	2c78 <cap_copy_int@@Base+0x168>
    2cf0:	add	x1, x19, #0x5
    2cf4:	add	x2, x0, #0x8
    2cf8:	add	x19, x19, #0x8
    2cfc:	ldrb	w6, [x1]
    2d00:	add	x1, x1, #0x1
    2d04:	ldrb	w5, [x1, #2]
    2d08:	add	x2, x2, #0x4
    2d0c:	ldrb	w4, [x1, #5]
    2d10:	ldrb	w3, [x1, #8]
    2d14:	orr	w5, w6, w5, lsl #8
    2d18:	orr	w4, w5, w4, lsl #16
    2d1c:	orr	w3, w4, w3, lsl #24
    2d20:	stur	w3, [x2, #-4]
    2d24:	ldrb	w3, [x1, #11]
    2d28:	cmp	x1, x19
    2d2c:	str	w3, [x2, #8]
    2d30:	b.ne	2cfc <cap_copy_int@@Base+0x1ec>  // b.any
    2d34:	nop
    2d38:	ldr	x19, [sp, #16]
    2d3c:	b	2c80 <cap_copy_int@@Base+0x170>
    2d40:	add	x1, x19, #0x5
    2d44:	add	x3, x0, #0x8
    2d48:	add	x19, x19, #0x8
    2d4c:	ldrb	w5, [x1, #6]
    2d50:	add	x1, x1, #0x1
    2d54:	ldrb	w2, [x1, #8]
    2d58:	add	x3, x3, #0x4
    2d5c:	ldurb	w6, [x1, #-1]
    2d60:	ldrb	w4, [x1, #2]
    2d64:	lsl	w5, w5, #16
    2d68:	orr	w2, w5, w2, lsl #24
    2d6c:	orr	w4, w6, w4, lsl #8
    2d70:	orr	w2, w2, w4
    2d74:	stur	w2, [x3, #-4]
    2d78:	ldrb	w5, [x1, #11]
    2d7c:	ldrb	w4, [x1, #14]
    2d80:	ldrb	w2, [x1, #17]
    2d84:	cmp	x1, x19
    2d88:	orr	w4, w5, w4, lsl #8
    2d8c:	orr	w2, w4, w2, lsl #16
    2d90:	str	w2, [x3, #8]
    2d94:	b.ne	2d4c <cap_copy_int@@Base+0x23c>  // b.any
    2d98:	ldr	x19, [sp, #16]
    2d9c:	b	2c80 <cap_copy_int@@Base+0x170>
    2da0:	add	x1, x19, #0x5
    2da4:	add	x2, x0, #0x8
    2da8:	add	x19, x19, #0x8
    2dac:	ldrb	w6, [x1]
    2db0:	add	x1, x1, #0x1
    2db4:	ldrb	w5, [x1, #2]
    2db8:	add	x2, x2, #0x4
    2dbc:	ldrb	w4, [x1, #5]
    2dc0:	ldrb	w3, [x1, #8]
    2dc4:	orr	w5, w6, w5, lsl #8
    2dc8:	orr	w4, w5, w4, lsl #16
    2dcc:	orr	w3, w4, w3, lsl #24
    2dd0:	stur	w3, [x2, #-4]
    2dd4:	ldrb	w4, [x1, #11]
    2dd8:	ldrb	w3, [x1, #14]
    2ddc:	cmp	x1, x19
    2de0:	orr	w3, w4, w3, lsl #8
    2de4:	str	w3, [x2, #8]
    2de8:	b.ne	2dac <cap_copy_int@@Base+0x29c>  // b.any
    2dec:	ldr	x19, [sp, #16]
    2df0:	b	2c80 <cap_copy_int@@Base+0x170>
    2df4:	mov	w1, #0x0                   	// #0
    2df8:	b	2c78 <cap_copy_int@@Base+0x168>
    2dfc:	mov	w2, #0x0                   	// #0
    2e00:	b	2bc0 <cap_copy_int@@Base+0xb0>
    2e04:	mov	w2, #0x0                   	// #0
    2e08:	b	2c1c <cap_copy_int@@Base+0x10c>
    2e0c:	nop

0000000000002e10 <cap_get_flag@@Base>:
    2e10:	cmp	x3, #0x0
    2e14:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    2e18:	b.eq	2e74 <cap_get_flag@@Base+0x64>  // b.none
    2e1c:	mov	x4, x0
    2e20:	mov	w0, #0x90d0                	// #37072
    2e24:	movk	w0, #0xca, lsl #16
    2e28:	ldur	w5, [x4, #-4]
    2e2c:	cmp	w5, w0
    2e30:	b.ne	2e74 <cap_get_flag@@Base+0x64>  // b.any
    2e34:	cmp	w1, #0x3f
    2e38:	ccmp	w2, #0x2, #0x2, ls  // ls = plast
    2e3c:	b.hi	2e74 <cap_get_flag@@Base+0x64>  // b.pmore
    2e40:	asr	w5, w1, #5
    2e44:	mov	w0, #0x1                   	// #1
    2e48:	lsl	w1, w0, w1
    2e4c:	mov	w0, #0x0                   	// #0
    2e50:	sbfiz	x6, x5, #1, #32
    2e54:	add	x5, x6, w5, sxtw
    2e58:	add	x2, x5, w2, uxtw
    2e5c:	add	x2, x4, x2, lsl #2
    2e60:	ldr	w2, [x2, #8]
    2e64:	tst	w1, w2
    2e68:	cset	w1, ne  // ne = any
    2e6c:	str	w1, [x3]
    2e70:	ret
    2e74:	stp	x29, x30, [sp, #-16]!
    2e78:	mov	x29, sp
    2e7c:	bl	1cb0 <__errno_location@plt>
    2e80:	mov	x1, x0
    2e84:	mov	w2, #0x16                  	// #22
    2e88:	mov	w0, #0xffffffff            	// #-1
    2e8c:	str	w2, [x1]
    2e90:	ldp	x29, x30, [sp], #16
    2e94:	ret

0000000000002e98 <cap_set_flag@@Base>:
    2e98:	cbz	x0, 2f74 <cap_set_flag@@Base+0xdc>
    2e9c:	ldur	w6, [x0, #-4]
    2ea0:	mov	w5, #0x90d0                	// #37072
    2ea4:	movk	w5, #0xca, lsl #16
    2ea8:	cmp	w6, w5
    2eac:	b.ne	2f74 <cap_set_flag@@Base+0xdc>  // b.any
    2eb0:	sub	w5, w2, #0x1
    2eb4:	cmp	w5, #0x3e
    2eb8:	b.hi	2f74 <cap_set_flag@@Base+0xdc>  // b.pmore
    2ebc:	cmp	w1, #0x2
    2ec0:	ccmp	w4, #0x1, #0x2, ls  // ls = plast
    2ec4:	b.hi	2f74 <cap_set_flag@@Base+0xdc>  // b.pmore
    2ec8:	mov	w6, w1
    2ecc:	cmp	w4, #0x1
    2ed0:	b.eq	2f24 <cap_set_flag@@Base+0x8c>  // b.none
    2ed4:	mov	x5, #0x0                   	// #0
    2ed8:	mov	w8, #0x1                   	// #1
    2edc:	nop
    2ee0:	ldr	w1, [x3, x5, lsl #2]
    2ee4:	add	x5, x5, #0x1
    2ee8:	cmp	w1, #0x3f
    2eec:	b.hi	2f14 <cap_set_flag@@Base+0x7c>  // b.pmore
    2ef0:	asr	w4, w1, #5
    2ef4:	lsl	w1, w8, w1
    2ef8:	sbfiz	x7, x4, #1, #32
    2efc:	add	x4, x7, w4, sxtw
    2f00:	add	x4, x4, x6
    2f04:	add	x4, x0, x4, lsl #2
    2f08:	ldr	w7, [x4, #8]
    2f0c:	bic	w1, w7, w1
    2f10:	str	w1, [x4, #8]
    2f14:	cmp	w2, w5
    2f18:	b.gt	2ee0 <cap_set_flag@@Base+0x48>
    2f1c:	mov	w0, #0x0                   	// #0
    2f20:	ret
    2f24:	mov	w7, w4
    2f28:	mov	x5, #0x0                   	// #0
    2f2c:	nop
    2f30:	ldr	w4, [x3, x5, lsl #2]
    2f34:	add	x5, x5, #0x1
    2f38:	cmp	w4, #0x3f
    2f3c:	b.hi	2f64 <cap_set_flag@@Base+0xcc>  // b.pmore
    2f40:	asr	w1, w4, #5
    2f44:	lsl	w4, w7, w4
    2f48:	sbfiz	x8, x1, #1, #32
    2f4c:	add	x1, x8, w1, sxtw
    2f50:	add	x1, x1, x6
    2f54:	add	x1, x0, x1, lsl #2
    2f58:	ldr	w8, [x1, #8]
    2f5c:	orr	w4, w4, w8
    2f60:	str	w4, [x1, #8]
    2f64:	cmp	w2, w5
    2f68:	b.gt	2f30 <cap_set_flag@@Base+0x98>
    2f6c:	mov	w0, #0x0                   	// #0
    2f70:	ret
    2f74:	stp	x29, x30, [sp, #-16]!
    2f78:	mov	x29, sp
    2f7c:	bl	1cb0 <__errno_location@plt>
    2f80:	mov	x1, x0
    2f84:	mov	w2, #0x16                  	// #22
    2f88:	mov	w0, #0xffffffff            	// #-1
    2f8c:	str	w2, [x1]
    2f90:	ldp	x29, x30, [sp], #16
    2f94:	ret

0000000000002f98 <cap_clear@@Base>:
    2f98:	cbz	x0, 2fc4 <cap_clear@@Base+0x2c>
    2f9c:	mov	x1, x0
    2fa0:	mov	w0, #0x90d0                	// #37072
    2fa4:	movk	w0, #0xca, lsl #16
    2fa8:	ldur	w2, [x1, #-4]
    2fac:	cmp	w2, w0
    2fb0:	b.ne	2fc4 <cap_clear@@Base+0x2c>  // b.any
    2fb4:	mov	w0, #0x0                   	// #0
    2fb8:	stp	xzr, xzr, [x1, #8]
    2fbc:	str	xzr, [x1, #24]
    2fc0:	ret
    2fc4:	stp	x29, x30, [sp, #-16]!
    2fc8:	mov	x29, sp
    2fcc:	bl	1cb0 <__errno_location@plt>
    2fd0:	mov	x1, x0
    2fd4:	mov	w2, #0x16                  	// #22
    2fd8:	mov	w0, #0xffffffff            	// #-1
    2fdc:	str	w2, [x1]
    2fe0:	ldp	x29, x30, [sp], #16
    2fe4:	ret

0000000000002fe8 <cap_clear_flag@@Base>:
    2fe8:	cmp	x0, #0x0
    2fec:	ccmp	w1, #0x2, #0x2, ne  // ne = any
    2ff0:	b.hi	301c <cap_clear_flag@@Base+0x34>  // b.pmore
    2ff4:	ldur	w3, [x0, #-4]
    2ff8:	mov	w2, #0x90d0                	// #37072
    2ffc:	movk	w2, #0xca, lsl #16
    3000:	cmp	w3, w2
    3004:	b.ne	301c <cap_clear_flag@@Base+0x34>  // b.any
    3008:	add	x1, x0, w1, uxtw #2
    300c:	mov	w0, #0x0                   	// #0
    3010:	str	wzr, [x1, #8]
    3014:	str	wzr, [x1, #20]
    3018:	ret
    301c:	stp	x29, x30, [sp, #-16]!
    3020:	mov	x29, sp
    3024:	bl	1cb0 <__errno_location@plt>
    3028:	mov	x1, x0
    302c:	mov	w2, #0x16                  	// #22
    3030:	mov	w0, #0xffffffff            	// #-1
    3034:	str	w2, [x1]
    3038:	ldp	x29, x30, [sp], #16
    303c:	ret

0000000000003040 <cap_compare@@Base>:
    3040:	cbz	x0, 30d8 <cap_compare@@Base+0x98>
    3044:	ldur	w3, [x0, #-4]
    3048:	cmp	x1, #0x0
    304c:	mov	w2, #0x90d0                	// #37072
    3050:	movk	w2, #0xca, lsl #16
    3054:	ccmp	w3, w2, #0x0, ne  // ne = any
    3058:	b.ne	30d8 <cap_compare@@Base+0x98>  // b.any
    305c:	ldur	w3, [x1, #-4]
    3060:	cmp	w3, w2
    3064:	b.ne	30d8 <cap_compare@@Base+0x98>  // b.any
    3068:	ldp	w2, w4, [x0, #8]
    306c:	ldp	w3, w6, [x1, #8]
    3070:	ldr	w5, [x0, #16]
    3074:	cmp	w3, w2
    3078:	ldr	w3, [x1, #16]
    307c:	cset	w2, ne  // ne = any
    3080:	ldr	w8, [x0, #28]
    3084:	cmp	w5, w3
    3088:	orr	w7, w2, #0x4
    308c:	ldr	w3, [x0, #20]
    3090:	csel	w2, w7, w2, ne  // ne = any
    3094:	ldr	w5, [x1, #20]
    3098:	cmp	w6, w4
    309c:	ldr	w7, [x1, #28]
    30a0:	cset	w4, ne  // ne = any
    30a4:	cmp	w5, w3
    30a8:	ldr	w1, [x1, #24]
    30ac:	ldr	w5, [x0, #24]
    30b0:	cset	w3, ne  // ne = any
    30b4:	orr	w6, w3, #0x4
    30b8:	cmp	w8, w7
    30bc:	csel	w3, w6, w3, ne  // ne = any
    30c0:	orr	w0, w2, w4, lsl #1
    30c4:	cmp	w5, w1
    30c8:	orr	w2, w2, #0x2
    30cc:	csel	w0, w2, w0, ne  // ne = any
    30d0:	orr	w0, w3, w0
    30d4:	ret
    30d8:	stp	x29, x30, [sp, #-16]!
    30dc:	mov	x29, sp
    30e0:	bl	1cb0 <__errno_location@plt>
    30e4:	mov	x1, x0
    30e8:	mov	w2, #0x16                  	// #22
    30ec:	mov	w0, #0xffffffff            	// #-1
    30f0:	str	w2, [x1]
    30f4:	ldp	x29, x30, [sp], #16
    30f8:	ret
    30fc:	nop
    3100:	stp	x29, x30, [sp, #-96]!
    3104:	mov	x29, sp
    3108:	stp	x19, x20, [sp, #16]
    310c:	ldr	x19, [x0]
    3110:	stp	x21, x22, [sp, #32]
    3114:	stp	x23, x24, [sp, #48]
    3118:	mov	x23, x0
    311c:	str	x19, [sp, #88]
    3120:	bl	1bc0 <__ctype_b_loc@plt>
    3124:	ldrb	w1, [x19]
    3128:	mov	x22, x0
    312c:	ldr	x3, [x0]
    3130:	ubfiz	x0, x1, #1, #8
    3134:	ldrh	w2, [x3, x0]
    3138:	tbnz	w2, #11, 3240 <cap_compare@@Base+0x200>
    313c:	mov	w0, #0x0                   	// #0
    3140:	cbnz	w1, 314c <cap_compare@@Base+0x10c>
    3144:	b	316c <cap_compare@@Base+0x12c>
    3148:	ldrh	w2, [x3, x2]
    314c:	and	w2, w2, #0x400
    3150:	cmp	w1, #0x5f
    3154:	add	w0, w0, #0x1
    3158:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    315c:	b.eq	316c <cap_compare@@Base+0x12c>  // b.none
    3160:	ldrb	w1, [x19, w0, uxtw]
    3164:	ubfiz	x2, x1, #1, #8
    3168:	cbnz	w1, 3148 <cap_compare@@Base+0x108>
    316c:	bl	1a70 <cap_max_bits@plt>
    3170:	sub	w24, w0, #0x1
    3174:	cbz	w0, 31e0 <cap_compare@@Base+0x1a0>
    3178:	stp	x25, x26, [sp, #64]
    317c:	adrp	x26, 15000 <cap_set_nsowner@@Base+0x10900>
    3180:	ldr	x26, [x26, #4032]
    3184:	ldr	x25, [sp, #88]
    3188:	add	x19, x26, w24, uxtw #3
    318c:	nop
    3190:	ldr	x20, [x19]
    3194:	cbz	x20, 31cc <cap_compare@@Base+0x18c>
    3198:	ldrb	w21, [x20]
    319c:	cbz	w21, 31fc <cap_compare@@Base+0x1bc>
    31a0:	bl	1ad0 <__ctype_tolower_loc@plt>
    31a4:	mov	x1, x25
    31a8:	ldr	x2, [x0]
    31ac:	b	31b8 <cap_compare@@Base+0x178>
    31b0:	ldrb	w21, [x20, #1]!
    31b4:	cbz	w21, 3200 <cap_compare@@Base+0x1c0>
    31b8:	ldrb	w0, [x1]
    31bc:	add	x1, x1, #0x1
    31c0:	ldr	w0, [x2, x0, lsl #2]
    31c4:	cmp	w0, w21
    31c8:	b.eq	31b0 <cap_compare@@Base+0x170>  // b.none
    31cc:	cmp	x19, x26
    31d0:	sub	w24, w24, #0x1
    31d4:	sub	x19, x19, #0x8
    31d8:	b.ne	3190 <cap_compare@@Base+0x150>  // b.any
    31dc:	ldp	x25, x26, [sp, #64]
    31e0:	mov	w24, #0xffffffff            	// #-1
    31e4:	mov	w0, w24
    31e8:	ldp	x19, x20, [sp, #16]
    31ec:	ldp	x21, x22, [sp, #32]
    31f0:	ldp	x23, x24, [sp, #48]
    31f4:	ldp	x29, x30, [sp], #96
    31f8:	ret
    31fc:	mov	x1, x25
    3200:	ldrb	w0, [x1]
    3204:	ldr	x2, [x22]
    3208:	cmp	w0, #0x5f
    320c:	ubfiz	x0, x0, #1, #8
    3210:	ldrh	w0, [x2, x0]
    3214:	and	w0, w0, #0x8
    3218:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    321c:	b.ne	31cc <cap_compare@@Base+0x18c>  // b.any
    3220:	ldp	x25, x26, [sp, #64]
    3224:	str	x1, [x23]
    3228:	mov	w0, w24
    322c:	ldp	x19, x20, [sp, #16]
    3230:	ldp	x21, x22, [sp, #32]
    3234:	ldp	x23, x24, [sp, #48]
    3238:	ldp	x29, x30, [sp], #96
    323c:	ret
    3240:	mov	x0, x19
    3244:	add	x1, sp, #0x58
    3248:	mov	w2, #0x0                   	// #0
    324c:	bl	1a20 <strtoul@plt>
    3250:	cmp	x0, #0x3f
    3254:	b.hi	31e0 <cap_compare@@Base+0x1a0>  // b.pmore
    3258:	ldr	x1, [sp, #88]
    325c:	str	x1, [x23]
    3260:	mov	w24, w0
    3264:	mov	w0, w24
    3268:	ldp	x19, x20, [sp, #16]
    326c:	ldp	x21, x22, [sp, #32]
    3270:	ldp	x23, x24, [sp, #48]
    3274:	ldp	x29, x30, [sp], #96
    3278:	ret
    327c:	nop

0000000000003280 <cap_from_text@@Base>:
    3280:	stp	x29, x30, [sp, #-208]!
    3284:	mov	x29, sp
    3288:	stp	x27, x28, [sp, #80]
    328c:	str	x0, [sp, #184]
    3290:	cbz	x0, 3788 <cap_from_text@@Base+0x508>
    3294:	bl	1ba0 <cap_init@plt>
    3298:	mov	x28, x0
    329c:	cbz	x0, 32f4 <cap_from_text@@Base+0x74>
    32a0:	ldr	w0, [x0]
    32a4:	mov	w1, #0x1026                	// #4134
    32a8:	stp	x21, x22, [sp, #32]
    32ac:	movk	w1, #0x2007, lsl #16
    32b0:	cmp	w0, w1
    32b4:	stp	x25, x26, [sp, #64]
    32b8:	b.eq	3304 <cap_from_text@@Base+0x84>  // b.none
    32bc:	mov	w1, #0x522                 	// #1314
    32c0:	movk	w1, #0x2008, lsl #16
    32c4:	cmp	w0, w1
    32c8:	b.eq	3304 <cap_from_text@@Base+0x84>  // b.none
    32cc:	mov	w1, #0x330                 	// #816
    32d0:	movk	w1, #0x1998, lsl #16
    32d4:	cmp	w0, w1
    32d8:	b.eq	3414 <cap_from_text@@Base+0x194>  // b.none
    32dc:	bl	1cb0 <__errno_location@plt>
    32e0:	mov	x28, #0x0                   	// #0
    32e4:	mov	w1, #0x16                  	// #22
    32e8:	ldp	x21, x22, [sp, #32]
    32ec:	ldp	x25, x26, [sp, #64]
    32f0:	str	w1, [x0]
    32f4:	mov	x0, x28
    32f8:	ldp	x27, x28, [sp, #80]
    32fc:	ldp	x29, x30, [sp], #208
    3300:	ret
    3304:	mov	w22, #0x1                   	// #1
    3308:	mov	w26, w22
    330c:	stp	x19, x20, [sp, #16]
    3310:	stp	x23, x24, [sp, #48]
    3314:	bl	1bc0 <__ctype_b_loc@plt>
    3318:	mov	x19, x0
    331c:	sub	w0, w26, #0x1
    3320:	mov	w2, #0xc                   	// #12
    3324:	add	x20, sp, #0xc8
    3328:	sxtw	x3, w0
    332c:	sub	w24, w22, #0x1
    3330:	smaddl	x1, w26, w2, x28
    3334:	mov	w21, w22
    3338:	smull	x0, w0, w2
    333c:	str	x1, [sp, #128]
    3340:	add	x1, x20, x3, lsl #2
    3344:	lsl	w5, w24, #5
    3348:	sxtw	x4, w26
    334c:	str	x1, [sp, #120]
    3350:	stp	x3, x4, [sp, #144]
    3354:	add	w2, w5, #0x20
    3358:	add	x24, x20, x24, lsl #2
    335c:	str	x0, [sp, #160]
    3360:	lsl	w0, w22, #5
    3364:	ldr	x3, [x19]
    3368:	add	x21, x20, x21, lsl #2
    336c:	ldr	x1, [sp, #184]
    3370:	add	w27, w0, #0x20
    3374:	str	w2, [sp, #100]
    3378:	add	x2, x20, x4, lsl #2
    337c:	str	x2, [sp, #104]
    3380:	str	w0, [sp, #112]
    3384:	str	w5, [sp, #116]
    3388:	str	xzr, [x20]
    338c:	ldrb	w0, [x1]
    3390:	ubfiz	x2, x0, #1, #8
    3394:	ldrh	w4, [x3, x2]
    3398:	tbz	w4, #13, 33b8 <cap_from_text@@Base+0x138>
    339c:	add	x2, x1, #0x1
    33a0:	str	x2, [sp, #184]
    33a4:	mov	x1, x2
    33a8:	ldrb	w0, [x2], #1
    33ac:	ubfiz	x4, x0, #1, #8
    33b0:	ldrh	w4, [x3, x4]
    33b4:	tbnz	w4, #13, 33a0 <cap_from_text@@Base+0x120>
    33b8:	cbz	w0, 3a10 <cap_from_text@@Base+0x790>
    33bc:	and	w4, w4, #0x8
    33c0:	cmp	w0, #0x5f
    33c4:	ccmp	w4, #0x0, #0x0, ne  // ne = any
    33c8:	b.ne	3428 <cap_from_text@@Base+0x1a8>  // b.any
    33cc:	sub	w0, w0, #0x2b
    33d0:	mov	w1, #0xfd                  	// #253
    33d4:	tst	w0, w1
    33d8:	b.ne	38d4 <cap_from_text@@Base+0x654>  // b.any
    33dc:	mov	x0, x28
    33e0:	bl	1c60 <cap_free@plt>
    33e4:	bl	1cb0 <__errno_location@plt>
    33e8:	mov	x28, #0x0                   	// #0
    33ec:	mov	w1, #0x16                  	// #22
    33f0:	ldp	x19, x20, [sp, #16]
    33f4:	ldp	x21, x22, [sp, #32]
    33f8:	ldp	x23, x24, [sp, #48]
    33fc:	ldp	x25, x26, [sp, #64]
    3400:	str	w1, [x0]
    3404:	mov	x0, x28
    3408:	ldp	x27, x28, [sp, #80]
    340c:	ldp	x29, x30, [sp], #208
    3410:	ret
    3414:	mov	w22, #0x0                   	// #0
    3418:	mov	w26, #0x0                   	// #0
    341c:	stp	x19, x20, [sp, #16]
    3420:	stp	x23, x24, [sp, #48]
    3424:	b	3314 <cap_from_text@@Base+0x94>
    3428:	stp	x1, x3, [sp, #168]
    342c:	bl	1ad0 <__ctype_tolower_loc@plt>
    3430:	adrp	x25, 4000 <cap_to_text@@Base+0x528>
    3434:	ldp	x1, x3, [sp, #168]
    3438:	mov	x23, x0
    343c:	add	x0, sp, #0xb8
    3440:	str	x0, [sp, #136]
    3444:	nop
    3448:	mov	x2, x1
    344c:	add	x0, x25, #0x728
    3450:	mov	w4, #0x61                  	// #97
    3454:	ldr	x8, [x23]
    3458:	b	3468 <cap_from_text@@Base+0x1e8>
    345c:	ldrb	w4, [x0, #1]!
    3460:	cbz	w4, 34e4 <cap_from_text@@Base+0x264>
    3464:	mov	x2, x7
    3468:	ldrb	w6, [x2]
    346c:	add	x7, x2, #0x1
    3470:	ldr	w6, [x8, x6, lsl #2]
    3474:	cmp	w6, w4
    3478:	b.eq	345c <cap_from_text@@Base+0x1dc>  // b.none
    347c:	ldr	x0, [sp, #136]
    3480:	bl	3100 <cap_compare@@Base+0xc0>
    3484:	cmn	w0, #0x1
    3488:	b.eq	33dc <cap_from_text@@Base+0x15c>  // b.none
    348c:	asr	w1, w0, #5
    3490:	mov	w2, #0x1                   	// #1
    3494:	lsl	w0, w2, w0
    3498:	sxtw	x1, w1
    349c:	ldr	w2, [x20, x1, lsl #2]
    34a0:	orr	w0, w0, w2
    34a4:	str	w0, [x20, x1, lsl #2]
    34a8:	ldr	x2, [sp, #184]
    34ac:	mov	x1, x2
    34b0:	ldrb	w0, [x1], #1
    34b4:	cmp	w0, #0x2c
    34b8:	b.ne	3578 <cap_from_text@@Base+0x2f8>  // b.any
    34bc:	str	x1, [sp, #184]
    34c0:	ldr	x3, [x19]
    34c4:	ldrb	w2, [x2, #1]
    34c8:	cmp	w2, #0x5f
    34cc:	ubfiz	x2, x2, #1, #8
    34d0:	ldrh	w0, [x3, x2]
    34d4:	and	w0, w0, #0x8
    34d8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    34dc:	b.ne	3448 <cap_from_text@@Base+0x1c8>  // b.any
    34e0:	b	33dc <cap_from_text@@Base+0x15c>
    34e4:	ldrb	w2, [x2, #1]
    34e8:	cmp	w2, #0x5f
    34ec:	ubfiz	x2, x2, #1, #8
    34f0:	ldrh	w0, [x3, x2]
    34f4:	and	w0, w0, #0x8
    34f8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    34fc:	b.ne	347c <cap_from_text@@Base+0x1fc>  // b.any
    3500:	add	x1, x1, #0x3
    3504:	str	x1, [sp, #184]
    3508:	bl	1a70 <cap_max_bits@plt>
    350c:	negs	w1, w0
    3510:	and	w3, w0, #0x1f
    3514:	and	w1, w1, #0x1f
    3518:	csneg	w1, w3, w1, mi  // mi = first
    351c:	mov	x3, #0x1                   	// #1
    3520:	mov	w2, #0xffffffff            	// #-1
    3524:	cmp	w27, w0
    3528:	lsl	x1, x3, x1
    352c:	add	w1, w1, w2
    3530:	b.ls	3540 <cap_from_text@@Base+0x2c0>  // b.plast
    3534:	ldr	w2, [sp, #112]
    3538:	cmp	w2, w0
    353c:	csel	w2, w1, wzr, cc  // cc = lo, ul, last
    3540:	str	w2, [x21]
    3544:	cbz	w22, 34a8 <cap_from_text@@Base+0x228>
    3548:	ldr	w2, [sp, #100]
    354c:	cmp	w2, w0
    3550:	b.ls	377c <cap_from_text@@Base+0x4fc>  // b.plast
    3554:	ldr	w2, [sp, #116]
    3558:	cmp	w2, w0
    355c:	csel	w1, w1, wzr, cc  // cc = lo, ul, last
    3560:	str	w1, [x24]
    3564:	ldr	x2, [sp, #184]
    3568:	mov	x1, x2
    356c:	ldrb	w0, [x1], #1
    3570:	cmp	w0, #0x2c
    3574:	b.eq	34bc <cap_from_text@@Base+0x23c>  // b.none
    3578:	mov	w9, #0x1                   	// #1
    357c:	str	x1, [sp, #184]
    3580:	ldrb	w4, [x2]
    3584:	cmp	w4, #0x3d
    3588:	b.eq	3964 <cap_from_text@@Base+0x6e4>  // b.none
    358c:	sub	w0, w4, #0x2b
    3590:	mov	w3, #0xfd                  	// #253
    3594:	tst	w0, w3
    3598:	b.ne	33dc <cap_from_text@@Base+0x15c>  // b.any
    359c:	ldrb	w0, [x2, #1]
    35a0:	ldp	x2, x3, [sp, #144]
    35a4:	mov	w6, #0x0                   	// #0
    35a8:	lsl	x7, x2, #1
    35ac:	lsl	x8, x3, #1
    35b0:	add	x7, x7, x2
    35b4:	add	x8, x8, x3
    35b8:	ldr	x2, [sp, #160]
    35bc:	add	x7, x28, x7, lsl #2
    35c0:	add	x8, x28, x8, lsl #2
    35c4:	add	x10, x28, x2
    35c8:	cbz	w0, 36a8 <cap_from_text@@Base+0x428>
    35cc:	nop
    35d0:	ldr	x3, [x19]
    35d4:	ubfiz	x0, x0, #1, #8
    35d8:	ldrh	w0, [x3, x0]
    35dc:	tbnz	w0, #13, 36a8 <cap_from_text@@Base+0x428>
    35e0:	add	x2, x1, #0x1
    35e4:	str	x2, [sp, #184]
    35e8:	ldrb	w0, [x1]
    35ec:	cmp	w0, #0x69
    35f0:	b.eq	3948 <cap_from_text@@Base+0x6c8>  // b.none
    35f4:	cmp	w0, #0x70
    35f8:	b.eq	3940 <cap_from_text@@Base+0x6c0>  // b.none
    35fc:	cmp	w0, #0x65
    3600:	b.ne	33dc <cap_from_text@@Base+0x15c>  // b.any
    3604:	orr	w6, w6, #0x1
    3608:	cmp	w4, #0x2d
    360c:	b.eq	3720 <cap_from_text@@Base+0x4a0>  // b.none
    3610:	b.hi	3828 <cap_from_text@@Base+0x5a8>  // b.pmore
    3614:	cmp	w4, #0x2b
    3618:	b.ne	3658 <cap_from_text@@Base+0x3d8>  // b.any
    361c:	tbnz	w6, #0, 384c <cap_from_text@@Base+0x5cc>
    3620:	tbnz	w6, #1, 37a8 <cap_from_text@@Base+0x528>
    3624:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    3628:	ldr	x0, [sp, #104]
    362c:	ldr	w1, [x8, #16]
    3630:	ldr	w0, [x0]
    3634:	orr	w0, w0, w1
    3638:	str	w0, [x8, #16]
    363c:	cbz	w26, 3658 <cap_from_text@@Base+0x3d8>
    3640:	ldr	x0, [sp, #120]
    3644:	ldr	w0, [x0]
    3648:	ldr	w1, [x7, #16]
    364c:	orr	w0, w1, w0
    3650:	str	w0, [x7, #16]
    3654:	nop
    3658:	ldrb	w0, [x2]
    365c:	mov	w1, #0xfd                  	// #253
    3660:	sub	w3, w0, #0x2b
    3664:	tst	w3, w1
    3668:	b.ne	3770 <cap_from_text@@Base+0x4f0>  // b.any
    366c:	cbz	w9, 33dc <cap_from_text@@Base+0x15c>
    3670:	add	x1, x2, #0x1
    3674:	str	x1, [sp, #184]
    3678:	ldr	x3, [x19]
    367c:	ldrb	w0, [x2, #1]
    3680:	ldrb	w4, [x2]
    3684:	ubfiz	x2, x0, #1, #8
    3688:	ldrh	w2, [x3, x2]
    368c:	tbz	w2, #10, 33dc <cap_from_text@@Base+0x15c>
    3690:	mov	w6, #0x0                   	// #0
    3694:	cbz	w0, 3388 <cap_from_text@@Base+0x108>
    3698:	ubfiz	x2, x0, #1, #8
    369c:	ldrh	w2, [x3, x2]
    36a0:	tbnz	w2, #13, 3388 <cap_from_text@@Base+0x108>
    36a4:	cbnz	w0, 35d0 <cap_from_text@@Base+0x350>
    36a8:	cmp	w4, #0x3d
    36ac:	b.ne	33dc <cap_from_text@@Base+0x15c>  // b.any
    36b0:	ldr	x0, [sp, #104]
    36b4:	ldr	x5, [sp, #128]
    36b8:	ldr	w0, [x0]
    36bc:	ldr	w3, [x5, #8]
    36c0:	mvn	w2, w0
    36c4:	bic	w0, w3, w0
    36c8:	str	w0, [x5, #8]
    36cc:	cbz	w26, 3950 <cap_from_text@@Base+0x6d0>
    36d0:	ldr	x0, [sp, #120]
    36d4:	ldr	w3, [x10, #8]
    36d8:	ldr	w0, [x0]
    36dc:	bic	w3, w3, w0
    36e0:	str	w3, [x10, #8]
    36e4:	ldr	w3, [x28, #24]
    36e8:	and	w3, w3, w2
    36ec:	str	w3, [x28, #24]
    36f0:	ldr	w3, [x7, #12]
    36f4:	bic	w3, w3, w0
    36f8:	str	w3, [x7, #12]
    36fc:	ldr	w3, [x28, #28]
    3700:	and	w2, w3, w2
    3704:	str	w2, [x28, #28]
    3708:	ldr	w2, [x7, #16]
    370c:	bic	w0, w2, w0
    3710:	str	w0, [x7, #16]
    3714:	mov	x2, x1
    3718:	cmp	w4, #0x4d
    371c:	b.ne	361c <cap_from_text@@Base+0x39c>  // b.any
    3720:	tbnz	w6, #0, 3888 <cap_from_text@@Base+0x608>
    3724:	tbnz	w6, #1, 37e8 <cap_from_text@@Base+0x568>
    3728:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    372c:	ldr	x0, [sp, #104]
    3730:	ldr	w1, [x8, #16]
    3734:	ldr	w0, [x0]
    3738:	bic	w0, w1, w0
    373c:	str	w0, [x8, #16]
    3740:	cbz	w26, 3658 <cap_from_text@@Base+0x3d8>
    3744:	ldr	x0, [sp, #120]
    3748:	ldr	w0, [x0]
    374c:	ldr	w1, [x7, #16]
    3750:	bic	w0, w1, w0
    3754:	str	w0, [x7, #16]
    3758:	mov	w1, #0xfd                  	// #253
    375c:	ldrb	w0, [x2]
    3760:	sub	w3, w0, #0x2b
    3764:	tst	w3, w1
    3768:	b.eq	366c <cap_from_text@@Base+0x3ec>  // b.none
    376c:	nop
    3770:	mov	x1, x2
    3774:	ldr	x3, [x19]
    3778:	b	3694 <cap_from_text@@Base+0x414>
    377c:	mov	w1, #0xffffffff            	// #-1
    3780:	str	w1, [x24]
    3784:	b	3564 <cap_from_text@@Base+0x2e4>
    3788:	mov	x28, x0
    378c:	bl	1cb0 <__errno_location@plt>
    3790:	mov	w1, #0x16                  	// #22
    3794:	str	w1, [x0]
    3798:	mov	x0, x28
    379c:	ldp	x27, x28, [sp, #80]
    37a0:	ldp	x29, x30, [sp], #208
    37a4:	ret
    37a8:	ldr	x0, [sp, #104]
    37ac:	ldr	w1, [x0]
    37b0:	ldr	w0, [x8, #12]
    37b4:	orr	w0, w1, w0
    37b8:	str	w0, [x8, #12]
    37bc:	cbz	w26, 39b0 <cap_from_text@@Base+0x730>
    37c0:	ldr	x0, [sp, #120]
    37c4:	ldr	w0, [x0]
    37c8:	ldr	w3, [x7, #12]
    37cc:	orr	w3, w3, w0
    37d0:	str	w3, [x7, #12]
    37d4:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    37d8:	ldr	w3, [x8, #16]
    37dc:	orr	w1, w3, w1
    37e0:	str	w1, [x8, #16]
    37e4:	b	3648 <cap_from_text@@Base+0x3c8>
    37e8:	ldr	x0, [sp, #104]
    37ec:	ldr	w1, [x0]
    37f0:	ldr	w0, [x8, #12]
    37f4:	bic	w0, w0, w1
    37f8:	str	w0, [x8, #12]
    37fc:	cbz	w26, 39dc <cap_from_text@@Base+0x75c>
    3800:	ldr	x0, [sp, #120]
    3804:	ldr	w0, [x0]
    3808:	ldr	w3, [x7, #12]
    380c:	bic	w3, w3, w0
    3810:	str	w3, [x7, #12]
    3814:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    3818:	ldr	w3, [x8, #16]
    381c:	bic	w1, w3, w1
    3820:	str	w1, [x8, #16]
    3824:	b	374c <cap_from_text@@Base+0x4cc>
    3828:	cmp	w4, #0x50
    382c:	b.eq	3844 <cap_from_text@@Base+0x5c4>  // b.none
    3830:	b.hi	3658 <cap_from_text@@Base+0x3d8>  // b.pmore
    3834:	sub	w0, w4, #0x3d
    3838:	mov	w1, #0xef                  	// #239
    383c:	tst	w0, w1
    3840:	b.ne	3658 <cap_from_text@@Base+0x3d8>  // b.any
    3844:	mov	x1, x2
    3848:	b	36b0 <cap_from_text@@Base+0x430>
    384c:	ldr	x0, [sp, #104]
    3850:	ldr	x3, [sp, #128]
    3854:	ldr	w1, [x0]
    3858:	ldr	w0, [x3, #8]
    385c:	orr	w0, w0, w1
    3860:	str	w0, [x3, #8]
    3864:	cbz	w26, 39a0 <cap_from_text@@Base+0x720>
    3868:	ldr	x0, [sp, #120]
    386c:	ldr	w3, [x10, #8]
    3870:	ldr	w0, [x0]
    3874:	orr	w3, w3, w0
    3878:	str	w3, [x10, #8]
    387c:	tbnz	w6, #1, 39f0 <cap_from_text@@Base+0x770>
    3880:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    3884:	b	37d8 <cap_from_text@@Base+0x558>
    3888:	ldr	x0, [sp, #104]
    388c:	ldr	x3, [sp, #128]
    3890:	ldr	w1, [x0]
    3894:	ldr	w0, [x3, #8]
    3898:	mvn	w11, w1
    389c:	bic	w0, w0, w1
    38a0:	str	w0, [x3, #8]
    38a4:	cbz	w26, 39cc <cap_from_text@@Base+0x74c>
    38a8:	ldr	x0, [sp, #120]
    38ac:	ldr	w3, [x10, #8]
    38b0:	ldr	w0, [x0]
    38b4:	bic	w3, w3, w0
    38b8:	str	w3, [x10, #8]
    38bc:	tbnz	w6, #1, 3a00 <cap_from_text@@Base+0x780>
    38c0:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    38c4:	ldr	w1, [x8, #16]
    38c8:	and	w11, w11, w1
    38cc:	str	w11, [x8, #16]
    38d0:	b	374c <cap_from_text@@Base+0x4cc>
    38d4:	bl	1a70 <cap_max_bits@plt>
    38d8:	negs	w2, w0
    38dc:	and	w3, w0, #0x1f
    38e0:	and	w2, w2, #0x1f
    38e4:	csneg	w2, w3, w2, mi  // mi = first
    38e8:	mov	x1, #0x1                   	// #1
    38ec:	mov	w3, #0xffffffff            	// #-1
    38f0:	cmp	w27, w0
    38f4:	lsl	x1, x1, x2
    38f8:	add	w1, w1, w3
    38fc:	b.ls	390c <cap_from_text@@Base+0x68c>  // b.plast
    3900:	ldr	w2, [sp, #112]
    3904:	cmp	w2, w0
    3908:	csel	w3, w1, wzr, cc  // cc = lo, ul, last
    390c:	str	w3, [x21]
    3910:	cbz	w22, 3930 <cap_from_text@@Base+0x6b0>
    3914:	ldr	w2, [sp, #100]
    3918:	cmp	w2, w0
    391c:	b.ls	39c4 <cap_from_text@@Base+0x744>  // b.plast
    3920:	ldr	w2, [sp, #116]
    3924:	cmp	w2, w0
    3928:	csel	w1, w1, wzr, cc  // cc = lo, ul, last
    392c:	str	w1, [x24]
    3930:	ldr	x2, [sp, #184]
    3934:	mov	w9, #0x0                   	// #0
    3938:	add	x1, x2, #0x1
    393c:	b	357c <cap_from_text@@Base+0x2fc>
    3940:	orr	w6, w6, #0x2
    3944:	b	3608 <cap_from_text@@Base+0x388>
    3948:	orr	w6, w6, #0x4
    394c:	b	3608 <cap_from_text@@Base+0x388>
    3950:	ldp	w3, w0, [x28, #12]
    3954:	and	w3, w3, w2
    3958:	and	w2, w0, w2
    395c:	stp	w3, w2, [x28, #12]
    3960:	b	3714 <cap_from_text@@Base+0x494>
    3964:	ldrb	w0, [x2, #1]
    3968:	mov	w3, #0xfd                  	// #253
    396c:	sub	w6, w0, #0x2b
    3970:	tst	w6, w3
    3974:	b.ne	35a0 <cap_from_text@@Base+0x320>  // b.any
    3978:	cbz	w9, 33dc <cap_from_text@@Base+0x15c>
    397c:	add	x1, x2, #0x2
    3980:	str	x1, [sp, #184]
    3984:	mov	w4, #0x50                  	// #80
    3988:	ldrb	w0, [x2, #1]
    398c:	cmp	w0, #0x2b
    3990:	ldrb	w0, [x2, #2]
    3994:	b.eq	35a0 <cap_from_text@@Base+0x320>  // b.none
    3998:	mov	w4, #0x4d                  	// #77
    399c:	b	35a0 <cap_from_text@@Base+0x320>
    39a0:	tbz	w6, #1, 3624 <cap_from_text@@Base+0x3a4>
    39a4:	ldr	w0, [x28, #12]
    39a8:	orr	w0, w0, w1
    39ac:	str	w0, [x28, #12]
    39b0:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    39b4:	ldr	w0, [x28, #16]
    39b8:	orr	w1, w0, w1
    39bc:	str	w1, [x28, #16]
    39c0:	b	3658 <cap_from_text@@Base+0x3d8>
    39c4:	mov	w1, #0xffffffff            	// #-1
    39c8:	b	392c <cap_from_text@@Base+0x6ac>
    39cc:	tbz	w6, #1, 3728 <cap_from_text@@Base+0x4a8>
    39d0:	ldr	w0, [x28, #12]
    39d4:	and	w11, w11, w0
    39d8:	str	w11, [x28, #12]
    39dc:	tbz	w6, #2, 3658 <cap_from_text@@Base+0x3d8>
    39e0:	ldr	w0, [x28, #16]
    39e4:	bic	w1, w0, w1
    39e8:	str	w1, [x28, #16]
    39ec:	b	3658 <cap_from_text@@Base+0x3d8>
    39f0:	ldr	w3, [x28, #24]
    39f4:	orr	w3, w3, w1
    39f8:	str	w3, [x28, #24]
    39fc:	b	37c8 <cap_from_text@@Base+0x548>
    3a00:	ldr	w3, [x28, #24]
    3a04:	and	w11, w3, w11
    3a08:	str	w11, [x28, #24]
    3a0c:	b	3808 <cap_from_text@@Base+0x588>
    3a10:	ldp	x19, x20, [sp, #16]
    3a14:	ldp	x21, x22, [sp, #32]
    3a18:	ldp	x23, x24, [sp, #48]
    3a1c:	ldp	x25, x26, [sp, #64]
    3a20:	b	32f4 <cap_from_text@@Base+0x74>
    3a24:	nop

0000000000003a28 <cap_from_name@@Base>:
    3a28:	stp	x29, x30, [sp, #-48]!
    3a2c:	mov	x29, sp
    3a30:	str	x19, [sp, #16]
    3a34:	mov	x19, x1
    3a38:	str	x0, [sp, #40]
    3a3c:	add	x0, sp, #0x28
    3a40:	bl	3100 <cap_compare@@Base+0xc0>
    3a44:	cmp	w0, #0x0
    3a48:	ccmp	x19, #0x0, #0x4, ge  // ge = tcont
    3a4c:	b.eq	3a54 <cap_from_name@@Base+0x2c>  // b.none
    3a50:	str	w0, [x19]
    3a54:	asr	w0, w0, #31
    3a58:	ldr	x19, [sp, #16]
    3a5c:	ldp	x29, x30, [sp], #48
    3a60:	ret
    3a64:	nop

0000000000003a68 <cap_to_name@@Base>:
    3a68:	stp	x29, x30, [sp, #-48]!
    3a6c:	mov	w2, w0
    3a70:	cmp	w0, #0x25
    3a74:	mov	x29, sp
    3a78:	str	x19, [sp, #16]
    3a7c:	b.ls	3ab4 <cap_to_name@@Base+0x4c>  // b.plast
    3a80:	add	x0, sp, #0x28
    3a84:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    3a88:	add	x1, x1, #0x730
    3a8c:	bl	1ac0 <asprintf@plt>
    3a90:	ldr	x0, [sp, #40]
    3a94:	bl	1a80 <_libcap_strdup@plt>
    3a98:	mov	x19, x0
    3a9c:	ldr	x0, [sp, #40]
    3aa0:	bl	1c00 <free@plt>
    3aa4:	mov	x0, x19
    3aa8:	ldr	x19, [sp, #16]
    3aac:	ldp	x29, x30, [sp], #48
    3ab0:	ret
    3ab4:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10900>
    3ab8:	ldr	x0, [x0, #4032]
    3abc:	ldr	x0, [x0, w2, sxtw #3]
    3ac0:	bl	1a80 <_libcap_strdup@plt>
    3ac4:	mov	x19, x0
    3ac8:	mov	x0, x19
    3acc:	ldr	x19, [sp, #16]
    3ad0:	ldp	x29, x30, [sp], #48
    3ad4:	ret

0000000000003ad8 <cap_to_text@@Base>:
    3ad8:	sub	sp, sp, #0x660
    3adc:	stp	x29, x30, [sp]
    3ae0:	mov	x29, sp
    3ae4:	str	x1, [sp, #136]
    3ae8:	cbz	x0, 3e58 <cap_to_text@@Base+0x380>
    3aec:	stp	x27, x28, [sp, #80]
    3af0:	mov	x27, x0
    3af4:	mov	w0, #0x90d0                	// #37072
    3af8:	movk	w0, #0xca, lsl #16
    3afc:	ldur	w1, [x27, #-4]
    3b00:	cmp	w1, w0
    3b04:	b.ne	3e54 <cap_to_text@@Base+0x37c>  // b.any
    3b08:	stp	x19, x20, [sp, #16]
    3b0c:	stp	x21, x22, [sp, #32]
    3b10:	stp	x23, x24, [sp, #48]
    3b14:	stp	x25, x26, [sp, #64]
    3b18:	add	x25, sp, #0x98
    3b1c:	mov	w26, #0x0                   	// #0
    3b20:	stp	xzr, xzr, [sp, #152]
    3b24:	stp	xzr, xzr, [sp, #168]
    3b28:	bl	1a70 <cap_max_bits@plt>
    3b2c:	cbz	w0, 40dc <cap_to_text@@Base+0x604>
    3b30:	mov	w6, #0x1                   	// #1
    3b34:	nop
    3b38:	asr	w1, w26, #5
    3b3c:	lsl	w2, w6, w26
    3b40:	add	w26, w26, #0x1
    3b44:	sbfiz	x3, x1, #1, #32
    3b48:	add	x1, x3, w1, sxtw
    3b4c:	add	x1, x27, x1, lsl #2
    3b50:	ldp	w3, w4, [x1, #8]
    3b54:	tst	w2, w3
    3b58:	ldr	w3, [x1, #16]
    3b5c:	cset	w1, ne  // ne = any
    3b60:	tst	w2, w4
    3b64:	orr	w4, w1, #0x2
    3b68:	csel	w1, w4, w1, ne  // ne = any
    3b6c:	tst	w2, w3
    3b70:	orr	w2, w1, #0x4
    3b74:	csel	w1, w2, w1, ne  // ne = any
    3b78:	cmp	w0, w26
    3b7c:	sxtw	x1, w1
    3b80:	ldr	w2, [x25, x1, lsl #2]
    3b84:	add	w2, w2, #0x1
    3b88:	str	w2, [x25, x1, lsl #2]
    3b8c:	b.ne	3b38 <cap_to_text@@Base+0x60>  // b.any
    3b90:	ldr	w1, [sp, #180]
    3b94:	ldr	w0, [sp, #176]
    3b98:	mov	w2, #0x6                   	// #6
    3b9c:	str	w2, [sp, #104]
    3ba0:	cmp	w0, w1
    3ba4:	b.ge	3bb4 <cap_to_text@@Base+0xdc>  // b.tcont
    3ba8:	mov	w0, w1
    3bac:	mov	w1, #0x7                   	// #7
    3bb0:	str	w1, [sp, #104]
    3bb4:	ldr	w1, [sp, #172]
    3bb8:	cmp	w0, w1
    3bbc:	b.le	40d0 <cap_to_text@@Base+0x5f8>
    3bc0:	mov	w1, w0
    3bc4:	ldr	w0, [sp, #168]
    3bc8:	cmp	w0, w1
    3bcc:	b.ge	40c4 <cap_to_text@@Base+0x5ec>  // b.tcont
    3bd0:	mov	w0, w1
    3bd4:	ldr	w1, [sp, #164]
    3bd8:	cmp	w0, w1
    3bdc:	b.le	40b8 <cap_to_text@@Base+0x5e0>
    3be0:	mov	w1, w0
    3be4:	ldr	w0, [sp, #160]
    3be8:	cmp	w1, w0
    3bec:	b.le	407c <cap_to_text@@Base+0x5a4>
    3bf0:	mov	w0, w1
    3bf4:	ldr	w1, [sp, #156]
    3bf8:	cmp	w0, w1
    3bfc:	b.le	4090 <cap_to_text@@Base+0x5b8>
    3c00:	mov	w1, w0
    3c04:	ldr	w0, [sp, #152]
    3c08:	cmp	w1, w0
    3c0c:	b.le	40a4 <cap_to_text@@Base+0x5cc>
    3c10:	ldr	x0, [sp, #104]
    3c14:	tbz	w0, #0, 40fc <cap_to_text@@Base+0x624>
    3c18:	adrp	x2, 4000 <cap_to_text@@Base+0x528>
    3c1c:	add	x2, x2, #0x9a0
    3c20:	adrp	x3, 4000 <cap_to_text@@Base+0x528>
    3c24:	tbz	w0, #2, 40b0 <cap_to_text@@Base+0x5d8>
    3c28:	adrp	x3, 4000 <cap_to_text@@Base+0x528>
    3c2c:	add	x3, x3, #0x738
    3c30:	ldr	x0, [sp, #104]
    3c34:	add	x20, sp, #0xb8
    3c38:	adrp	x23, 4000 <cap_to_text@@Base+0x528>
    3c3c:	adrp	x4, 4000 <cap_to_text@@Base+0x528>
    3c40:	add	x23, x23, #0x958
    3c44:	add	x4, x4, #0x740
    3c48:	tst	x0, #0x2
    3c4c:	adrp	x24, 4000 <cap_to_text@@Base+0x528>
    3c50:	csel	x4, x4, x23, ne  // ne = any
    3c54:	mov	x0, x20
    3c58:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    3c5c:	add	x1, x1, #0x748
    3c60:	bl	1ab0 <sprintf@plt>
    3c64:	add	x28, x20, w0, sxtw
    3c68:	add	x0, x24, #0x750
    3c6c:	mov	x24, #0x7                   	// #7
    3c70:	stp	x0, x23, [sp, #120]
    3c74:	b	3c84 <cap_to_text@@Base+0x1ac>
    3c78:	sub	x24, x24, #0x1
    3c7c:	cmn	x24, #0x1
    3c80:	b.eq	3e78 <cap_to_text@@Base+0x3a0>  // b.none
    3c84:	ldr	w0, [sp, #104]
    3c88:	mov	w19, w24
    3c8c:	stp	w24, w24, [sp, #112]
    3c90:	cmp	w24, w0
    3c94:	b.eq	3c78 <cap_to_text@@Base+0x1a0>  // b.none
    3c98:	ldr	w0, [x25, x24, lsl #2]
    3c9c:	cbz	w0, 3c78 <cap_to_text@@Base+0x1a0>
    3ca0:	mov	x21, x28
    3ca4:	mov	w0, #0x20                  	// #32
    3ca8:	strb	w0, [x21], #1
    3cac:	cbz	w26, 3d64 <cap_to_text@@Base+0x28c>
    3cb0:	mov	w28, #0x0                   	// #0
    3cb4:	mov	w22, #0x1                   	// #1
    3cb8:	b	3cc8 <cap_to_text@@Base+0x1f0>
    3cbc:	add	w28, w28, #0x1
    3cc0:	cmp	w28, w26
    3cc4:	b.eq	3d60 <cap_to_text@@Base+0x288>  // b.none
    3cc8:	asr	w2, w28, #5
    3ccc:	lsl	w3, w22, w28
    3cd0:	sbfiz	x0, x2, #1, #32
    3cd4:	add	x2, x0, w2, sxtw
    3cd8:	add	x2, x27, x2, lsl #2
    3cdc:	ldp	w0, w9, [x2, #8]
    3ce0:	tst	w3, w0
    3ce4:	ldr	w0, [x2, #16]
    3ce8:	cset	w1, ne  // ne = any
    3cec:	tst	w3, w9
    3cf0:	orr	w2, w1, #0x2
    3cf4:	csel	w1, w2, w1, ne  // ne = any
    3cf8:	tst	w3, w0
    3cfc:	orr	w0, w1, #0x4
    3d00:	csel	w1, w0, w1, ne  // ne = any
    3d04:	cmp	w1, w19
    3d08:	b.ne	3cbc <cap_to_text@@Base+0x1e4>  // b.any
    3d0c:	mov	w0, w28
    3d10:	bl	1ce0 <cap_to_name@plt>
    3d14:	mov	x23, x0
    3d18:	bl	1a30 <strlen@plt>
    3d1c:	sub	x3, x21, x20
    3d20:	mov	x10, x0
    3d24:	add	x3, x3, x10
    3d28:	mov	x2, x23
    3d2c:	mov	x0, x21
    3d30:	cmp	x3, #0x540
    3d34:	ldr	x1, [sp, #120]
    3d38:	b.hi	40e4 <cap_to_text@@Base+0x60c>  // b.pmore
    3d3c:	bl	1ab0 <sprintf@plt>
    3d40:	mov	w1, w0
    3d44:	add	w28, w28, #0x1
    3d48:	mov	x0, x23
    3d4c:	add	x21, x21, w1, sxtw
    3d50:	bl	1c60 <cap_free@plt>
    3d54:	cmp	w28, w26
    3d58:	b.ne	3cc8 <cap_to_text@@Base+0x1f0>  // b.any
    3d5c:	nop
    3d60:	sub	x28, x21, #0x1
    3d64:	ldr	w0, [sp, #104]
    3d68:	ldr	w1, [sp, #116]
    3d6c:	bics	w22, w1, w0
    3d70:	b.eq	3dbc <cap_to_text@@Base+0x2e4>  // b.none
    3d74:	ldr	x0, [sp, #128]
    3d78:	tst	x22, #0x1
    3d7c:	adrp	x2, 4000 <cap_to_text@@Base+0x528>
    3d80:	add	x2, x2, #0x9a0
    3d84:	csel	x2, x2, x0, ne  // ne = any
    3d88:	adrp	x3, 4000 <cap_to_text@@Base+0x528>
    3d8c:	tst	x22, #0x4
    3d90:	add	x3, x3, #0x738
    3d94:	csel	x3, x3, x0, ne  // ne = any
    3d98:	tst	x22, #0x2
    3d9c:	adrp	x4, 4000 <cap_to_text@@Base+0x528>
    3da0:	add	x4, x4, #0x740
    3da4:	csel	x4, x4, x0, ne  // ne = any
    3da8:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    3dac:	mov	x0, x28
    3db0:	add	x1, x1, #0x758
    3db4:	bl	1ab0 <sprintf@plt>
    3db8:	add	x28, x28, w0, sxtw
    3dbc:	ldr	w1, [sp, #104]
    3dc0:	ldr	w0, [sp, #112]
    3dc4:	bics	w21, w1, w0
    3dc8:	b.eq	3e14 <cap_to_text@@Base+0x33c>  // b.none
    3dcc:	ldr	x0, [sp, #128]
    3dd0:	tst	x21, #0x1
    3dd4:	adrp	x2, 4000 <cap_to_text@@Base+0x528>
    3dd8:	add	x2, x2, #0x9a0
    3ddc:	csel	x2, x2, x0, ne  // ne = any
    3de0:	adrp	x3, 4000 <cap_to_text@@Base+0x528>
    3de4:	tst	x21, #0x4
    3de8:	add	x3, x3, #0x738
    3dec:	csel	x3, x3, x0, ne  // ne = any
    3df0:	tst	x21, #0x2
    3df4:	adrp	x4, 4000 <cap_to_text@@Base+0x528>
    3df8:	add	x4, x4, #0x740
    3dfc:	csel	x4, x4, x0, ne  // ne = any
    3e00:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    3e04:	mov	x0, x28
    3e08:	add	x1, x1, #0x760
    3e0c:	bl	1ab0 <sprintf@plt>
    3e10:	add	x28, x28, w0, sxtw
    3e14:	sub	x0, x28, x20
    3e18:	cmp	x0, #0x540
    3e1c:	b.le	3c78 <cap_to_text@@Base+0x1a0>
    3e20:	bl	1cb0 <__errno_location@plt>
    3e24:	mov	x1, x0
    3e28:	mov	w2, #0x22                  	// #34
    3e2c:	mov	x0, #0x0                   	// #0
    3e30:	str	w2, [x1]
    3e34:	ldp	x29, x30, [sp]
    3e38:	ldp	x19, x20, [sp, #16]
    3e3c:	ldp	x21, x22, [sp, #32]
    3e40:	ldp	x23, x24, [sp, #48]
    3e44:	ldp	x25, x26, [sp, #64]
    3e48:	ldp	x27, x28, [sp, #80]
    3e4c:	add	sp, sp, #0x660
    3e50:	ret
    3e54:	ldp	x27, x28, [sp, #80]
    3e58:	bl	1cb0 <__errno_location@plt>
    3e5c:	mov	x1, x0
    3e60:	mov	w2, #0x16                  	// #22
    3e64:	mov	x0, #0x0                   	// #0
    3e68:	ldp	x29, x30, [sp]
    3e6c:	str	w2, [x1]
    3e70:	add	sp, sp, #0x660
    3e74:	ret
    3e78:	stp	xzr, xzr, [sp, #152]
    3e7c:	cmp	w26, #0x3f
    3e80:	mov	w0, w26
    3e84:	stp	xzr, xzr, [sp, #168]
    3e88:	mov	w6, #0x1                   	// #1
    3e8c:	b.hi	3ee8 <cap_to_text@@Base+0x410>  // b.pmore
    3e90:	asr	w1, w0, #5
    3e94:	lsl	w2, w6, w0
    3e98:	add	w0, w0, #0x1
    3e9c:	sbfiz	x3, x1, #1, #32
    3ea0:	add	x1, x3, w1, sxtw
    3ea4:	add	x1, x27, x1, lsl #2
    3ea8:	ldp	w3, w4, [x1, #8]
    3eac:	tst	w2, w3
    3eb0:	ldr	w3, [x1, #16]
    3eb4:	cset	w1, ne  // ne = any
    3eb8:	tst	w2, w4
    3ebc:	orr	w4, w1, #0x2
    3ec0:	csel	w1, w4, w1, ne  // ne = any
    3ec4:	tst	w2, w3
    3ec8:	orr	w2, w1, #0x4
    3ecc:	csel	w1, w2, w1, ne  // ne = any
    3ed0:	cmp	w0, #0x40
    3ed4:	sxtw	x1, w1
    3ed8:	ldr	w2, [x25, x1, lsl #2]
    3edc:	add	w2, w2, #0x1
    3ee0:	str	w2, [x25, x1, lsl #2]
    3ee4:	b.ne	3e90 <cap_to_text@@Base+0x3b8>  // b.any
    3ee8:	adrp	x22, 4000 <cap_to_text@@Base+0x528>
    3eec:	adrp	x21, 4000 <cap_to_text@@Base+0x528>
    3ef0:	add	x0, x22, #0x958
    3ef4:	add	x19, x25, #0x1c
    3ef8:	add	x21, x21, #0x750
    3efc:	mov	w24, #0x7                   	// #7
    3f00:	str	x0, [sp, #104]
    3f04:	b	3f18 <cap_to_text@@Base+0x440>
    3f08:	cmp	w24, #0x1
    3f0c:	b.eq	4034 <cap_to_text@@Base+0x55c>  // b.none
    3f10:	sub	x19, x19, #0x4
    3f14:	sub	w24, w24, #0x1
    3f18:	ldr	w0, [x19]
    3f1c:	cbz	w0, 3f08 <cap_to_text@@Base+0x430>
    3f20:	mov	x22, x28
    3f24:	mov	w0, #0x20                  	// #32
    3f28:	cmp	w26, #0x3f
    3f2c:	strb	w0, [x22], #1
    3f30:	b.hi	3fe4 <cap_to_text@@Base+0x50c>  // b.pmore
    3f34:	mov	w23, w26
    3f38:	mov	w28, #0x1                   	// #1
    3f3c:	b	3f4c <cap_to_text@@Base+0x474>
    3f40:	add	w23, w23, #0x1
    3f44:	cmp	w23, #0x40
    3f48:	b.eq	3fe0 <cap_to_text@@Base+0x508>  // b.none
    3f4c:	asr	w1, w23, #5
    3f50:	lsl	w2, w28, w23
    3f54:	sbfiz	x0, x1, #1, #32
    3f58:	add	x1, x0, w1, sxtw
    3f5c:	add	x1, x27, x1, lsl #2
    3f60:	ldp	w0, w3, [x1, #8]
    3f64:	ldr	w1, [x1, #16]
    3f68:	tst	w2, w0
    3f6c:	cset	w0, ne  // ne = any
    3f70:	tst	w2, w3
    3f74:	orr	w3, w0, #0x2
    3f78:	csel	w0, w3, w0, ne  // ne = any
    3f7c:	tst	w2, w1
    3f80:	orr	w1, w0, #0x4
    3f84:	csel	w0, w1, w0, ne  // ne = any
    3f88:	cmp	w0, w24
    3f8c:	b.ne	3f40 <cap_to_text@@Base+0x468>  // b.any
    3f90:	mov	w0, w23
    3f94:	bl	1ce0 <cap_to_name@plt>
    3f98:	mov	x25, x0
    3f9c:	bl	1a30 <strlen@plt>
    3fa0:	sub	x3, x22, x20
    3fa4:	mov	x6, x0
    3fa8:	add	x3, x3, x6
    3fac:	mov	x2, x25
    3fb0:	mov	x1, x21
    3fb4:	mov	x0, x22
    3fb8:	cmp	x3, #0x540
    3fbc:	b.hi	40f0 <cap_to_text@@Base+0x618>  // b.pmore
    3fc0:	bl	1ab0 <sprintf@plt>
    3fc4:	mov	w1, w0
    3fc8:	add	w23, w23, #0x1
    3fcc:	mov	x0, x25
    3fd0:	add	x22, x22, w1, sxtw
    3fd4:	bl	1c60 <cap_free@plt>
    3fd8:	cmp	w23, #0x40
    3fdc:	b.ne	3f4c <cap_to_text@@Base+0x474>  // b.any
    3fe0:	sub	x28, x22, #0x1
    3fe4:	ldr	x4, [sp, #104]
    3fe8:	tst	x24, #0x1
    3fec:	adrp	x2, 4000 <cap_to_text@@Base+0x528>
    3ff0:	add	x2, x2, #0x9a0
    3ff4:	csel	x2, x2, x4, ne  // ne = any
    3ff8:	tst	x24, #0x4
    3ffc:	adrp	x3, 4000 <cap_to_text@@Base+0x528>
    4000:	add	x3, x3, #0x738
    4004:	csel	x3, x3, x4, ne  // ne = any
    4008:	tbnz	w24, #1, 4050 <cap_to_text@@Base+0x578>
    400c:	mov	x0, x28
    4010:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    4014:	add	x1, x1, #0x758
    4018:	bl	1ab0 <sprintf@plt>
    401c:	add	x28, x28, w0, sxtw
    4020:	sub	x0, x28, x20
    4024:	cmp	x0, #0x540
    4028:	b.gt	3e20 <cap_to_text@@Base+0x348>
    402c:	cmp	w24, #0x1
    4030:	b.ne	3f10 <cap_to_text@@Base+0x438>  // b.any
    4034:	ldr	x0, [sp, #136]
    4038:	cbz	x0, 4044 <cap_to_text@@Base+0x56c>
    403c:	sub	x28, x28, x20
    4040:	str	x28, [x0]
    4044:	mov	x0, x20
    4048:	bl	1a80 <_libcap_strdup@plt>
    404c:	b	3e34 <cap_to_text@@Base+0x35c>
    4050:	mov	x0, x28
    4054:	adrp	x4, 4000 <cap_to_text@@Base+0x528>
    4058:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    405c:	add	x4, x4, #0x740
    4060:	add	x1, x1, #0x758
    4064:	bl	1ab0 <sprintf@plt>
    4068:	add	x28, x28, w0, sxtw
    406c:	sub	x0, x28, x20
    4070:	cmp	x0, #0x540
    4074:	b.le	3f10 <cap_to_text@@Base+0x438>
    4078:	b	3e20 <cap_to_text@@Base+0x348>
    407c:	mov	w1, #0x2                   	// #2
    4080:	str	w1, [sp, #104]
    4084:	ldr	w1, [sp, #156]
    4088:	cmp	w0, w1
    408c:	b.gt	3c00 <cap_to_text@@Base+0x128>
    4090:	mov	w0, #0x1                   	// #1
    4094:	str	w0, [sp, #104]
    4098:	ldr	w0, [sp, #152]
    409c:	cmp	w1, w0
    40a0:	b.gt	3c10 <cap_to_text@@Base+0x138>
    40a4:	adrp	x3, 4000 <cap_to_text@@Base+0x528>
    40a8:	add	x2, x3, #0x958
    40ac:	str	wzr, [sp, #104]
    40b0:	add	x3, x3, #0x958
    40b4:	b	3c30 <cap_to_text@@Base+0x158>
    40b8:	mov	w0, #0x3                   	// #3
    40bc:	str	w0, [sp, #104]
    40c0:	b	3be4 <cap_to_text@@Base+0x10c>
    40c4:	mov	w1, #0x4                   	// #4
    40c8:	str	w1, [sp, #104]
    40cc:	b	3bd4 <cap_to_text@@Base+0xfc>
    40d0:	mov	w0, #0x5                   	// #5
    40d4:	str	w0, [sp, #104]
    40d8:	b	3bc4 <cap_to_text@@Base+0xec>
    40dc:	mov	w1, #0x0                   	// #0
    40e0:	b	3b94 <cap_to_text@@Base+0xbc>
    40e4:	mov	x0, x23
    40e8:	bl	1c60 <cap_free@plt>
    40ec:	b	3e20 <cap_to_text@@Base+0x348>
    40f0:	mov	x0, x25
    40f4:	bl	1c60 <cap_free@plt>
    40f8:	b	3e20 <cap_to_text@@Base+0x348>
    40fc:	adrp	x3, 4000 <cap_to_text@@Base+0x528>
    4100:	add	x2, x3, #0x958
    4104:	b	3c20 <cap_to_text@@Base+0x148>

0000000000004108 <cap_mode_name@@Base>:
    4108:	cmp	w0, #0x2
    410c:	b.eq	414c <cap_mode_name@@Base+0x44>  // b.none
    4110:	b.hi	4130 <cap_mode_name@@Base+0x28>  // b.pmore
    4114:	cmp	w0, #0x0
    4118:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    411c:	adrp	x0, 4000 <cap_to_text@@Base+0x528>
    4120:	add	x1, x1, #0x778
    4124:	add	x0, x0, #0x770
    4128:	csel	x0, x0, x1, ne  // ne = any
    412c:	ret
    4130:	cmp	w0, #0x3
    4134:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    4138:	adrp	x0, 4000 <cap_to_text@@Base+0x528>
    413c:	add	x1, x1, #0x798
    4140:	add	x0, x0, #0x768
    4144:	csel	x0, x0, x1, ne  // ne = any
    4148:	ret
    414c:	adrp	x0, 4000 <cap_to_text@@Base+0x528>
    4150:	add	x0, x0, #0x788
    4154:	ret

0000000000004158 <cap_get_fd@@Base>:
    4158:	stp	x29, x30, [sp, #-64]!
    415c:	mov	x29, sp
    4160:	stp	x19, x20, [sp, #16]
    4164:	mov	w20, w0
    4168:	bl	1ba0 <cap_init@plt>
    416c:	mov	x19, x0
    4170:	cbz	x0, 41cc <cap_get_fd@@Base+0x74>
    4174:	mov	w0, w20
    4178:	add	x2, sp, #0x28
    417c:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    4180:	mov	x3, #0x18                  	// #24
    4184:	add	x1, x1, #0xa50
    4188:	bl	1c20 <fgetxattr@plt>
    418c:	cmp	w0, #0x3
    4190:	b.le	41c0 <cap_get_fd@@Base+0x68>
    4194:	ldr	w2, [sp, #40]
    4198:	mov	w3, #0x2000000             	// #33554432
    419c:	and	w1, w2, #0xff000000
    41a0:	cmp	w1, w3
    41a4:	b.eq	4254 <cap_get_fd@@Base+0xfc>  // b.none
    41a8:	mov	w3, #0x3000000             	// #50331648
    41ac:	cmp	w1, w3
    41b0:	b.eq	422c <cap_get_fd@@Base+0xd4>  // b.none
    41b4:	mov	w3, #0x1000000             	// #16777216
    41b8:	cmp	w1, w3
    41bc:	b.eq	41dc <cap_get_fd@@Base+0x84>  // b.none
    41c0:	mov	x0, x19
    41c4:	mov	x19, #0x0                   	// #0
    41c8:	bl	1c60 <cap_free@plt>
    41cc:	mov	x0, x19
    41d0:	ldp	x19, x20, [sp, #16]
    41d4:	ldp	x29, x30, [sp], #64
    41d8:	ret
    41dc:	sub	w0, w0, #0xc
    41e0:	mov	w1, #0x1                   	// #1
    41e4:	cbnz	w0, 41c0 <cap_get_fd@@Base+0x68>
    41e8:	ldur	d0, [sp, #44]
    41ec:	ldr	w3, [sp, #44]
    41f0:	stur	d0, [x19, #12]
    41f4:	tbz	w2, #0, 4240 <cap_get_fd@@Base+0xe8>
    41f8:	ldr	w0, [x19, #16]
    41fc:	cmp	w1, #0x2
    4200:	orr	w0, w0, w3
    4204:	str	w0, [x19, #8]
    4208:	b.ne	4248 <cap_get_fd@@Base+0xf0>  // b.any
    420c:	ldur	d0, [sp, #52]
    4210:	ldr	w1, [sp, #52]
    4214:	fmov	x0, d0
    4218:	str	d0, [x19, #24]
    421c:	lsr	x0, x0, #32
    4220:	orr	w0, w0, w1
    4224:	str	w0, [x19, #20]
    4228:	b	41cc <cap_get_fd@@Base+0x74>
    422c:	ldr	w3, [sp, #60]
    4230:	sub	w0, w0, #0x18
    4234:	mov	w1, #0x2                   	// #2
    4238:	str	w3, [x19, #32]
    423c:	b	41e4 <cap_get_fd@@Base+0x8c>
    4240:	cmp	w1, #0x2
    4244:	b.eq	4260 <cap_get_fd@@Base+0x108>  // b.none
    4248:	stur	xzr, [x19, #20]
    424c:	str	wzr, [x19, #28]
    4250:	b	41cc <cap_get_fd@@Base+0x74>
    4254:	sub	w0, w0, #0x14
    4258:	mov	w1, #0x2                   	// #2
    425c:	b	41e4 <cap_get_fd@@Base+0x8c>
    4260:	ldur	d0, [sp, #52]
    4264:	str	d0, [x19, #24]
    4268:	b	41cc <cap_get_fd@@Base+0x74>
    426c:	nop

0000000000004270 <cap_get_file@@Base>:
    4270:	stp	x29, x30, [sp, #-64]!
    4274:	mov	x29, sp
    4278:	stp	x19, x20, [sp, #16]
    427c:	mov	x20, x0
    4280:	bl	1ba0 <cap_init@plt>
    4284:	mov	x19, x0
    4288:	cbz	x0, 42e4 <cap_get_file@@Base+0x74>
    428c:	mov	x0, x20
    4290:	add	x2, sp, #0x28
    4294:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    4298:	mov	x3, #0x18                  	// #24
    429c:	add	x1, x1, #0xa50
    42a0:	bl	1bb0 <getxattr@plt>
    42a4:	cmp	w0, #0x3
    42a8:	b.le	42d8 <cap_get_file@@Base+0x68>
    42ac:	ldr	w2, [sp, #40]
    42b0:	mov	w3, #0x2000000             	// #33554432
    42b4:	and	w1, w2, #0xff000000
    42b8:	cmp	w1, w3
    42bc:	b.eq	436c <cap_get_file@@Base+0xfc>  // b.none
    42c0:	mov	w3, #0x3000000             	// #50331648
    42c4:	cmp	w1, w3
    42c8:	b.eq	4344 <cap_get_file@@Base+0xd4>  // b.none
    42cc:	mov	w3, #0x1000000             	// #16777216
    42d0:	cmp	w1, w3
    42d4:	b.eq	42f4 <cap_get_file@@Base+0x84>  // b.none
    42d8:	mov	x0, x19
    42dc:	mov	x19, #0x0                   	// #0
    42e0:	bl	1c60 <cap_free@plt>
    42e4:	mov	x0, x19
    42e8:	ldp	x19, x20, [sp, #16]
    42ec:	ldp	x29, x30, [sp], #64
    42f0:	ret
    42f4:	sub	w0, w0, #0xc
    42f8:	mov	w1, #0x1                   	// #1
    42fc:	cbnz	w0, 42d8 <cap_get_file@@Base+0x68>
    4300:	ldur	d0, [sp, #44]
    4304:	ldr	w3, [sp, #44]
    4308:	stur	d0, [x19, #12]
    430c:	tbz	w2, #0, 4358 <cap_get_file@@Base+0xe8>
    4310:	ldr	w0, [x19, #16]
    4314:	cmp	w1, #0x2
    4318:	orr	w0, w0, w3
    431c:	str	w0, [x19, #8]
    4320:	b.ne	4360 <cap_get_file@@Base+0xf0>  // b.any
    4324:	ldur	d0, [sp, #52]
    4328:	ldr	w1, [sp, #52]
    432c:	fmov	x0, d0
    4330:	str	d0, [x19, #24]
    4334:	lsr	x0, x0, #32
    4338:	orr	w0, w0, w1
    433c:	str	w0, [x19, #20]
    4340:	b	42e4 <cap_get_file@@Base+0x74>
    4344:	ldr	w3, [sp, #60]
    4348:	sub	w0, w0, #0x18
    434c:	mov	w1, #0x2                   	// #2
    4350:	str	w3, [x19, #32]
    4354:	b	42fc <cap_get_file@@Base+0x8c>
    4358:	cmp	w1, #0x2
    435c:	b.eq	4378 <cap_get_file@@Base+0x108>  // b.none
    4360:	stur	xzr, [x19, #20]
    4364:	str	wzr, [x19, #28]
    4368:	b	42e4 <cap_get_file@@Base+0x74>
    436c:	sub	w0, w0, #0x14
    4370:	mov	w1, #0x2                   	// #2
    4374:	b	42fc <cap_get_file@@Base+0x8c>
    4378:	ldur	d0, [sp, #52]
    437c:	str	d0, [x19, #24]
    4380:	b	42e4 <cap_get_file@@Base+0x74>
    4384:	nop

0000000000004388 <cap_get_nsowner@@Base>:
    4388:	ldr	w0, [x0, #32]
    438c:	ret

0000000000004390 <cap_set_fd@@Base>:
    4390:	stp	x29, x30, [sp, #-192]!
    4394:	mov	x29, sp
    4398:	add	x2, sp, #0x40
    439c:	stp	x19, x20, [sp, #16]
    43a0:	mov	w20, w0
    43a4:	mov	x19, x1
    43a8:	mov	w1, w0
    43ac:	mov	w0, #0x0                   	// #0
    43b0:	bl	1c10 <__fxstat64@plt>
    43b4:	cbnz	w0, 4540 <cap_set_fd@@Base+0x1b0>
    43b8:	ldr	w2, [sp, #80]
    43bc:	and	w2, w2, #0xf000
    43c0:	cmp	w2, #0x8, lsl #12
    43c4:	b.ne	4414 <cap_set_fd@@Base+0x84>  // b.any
    43c8:	cbz	x19, 44e4 <cap_set_fd@@Base+0x154>
    43cc:	ldur	w1, [x19, #-4]
    43d0:	mov	w0, #0x90d0                	// #37072
    43d4:	movk	w0, #0xca, lsl #16
    43d8:	cmp	w1, w0
    43dc:	b.ne	4414 <cap_set_fd@@Base+0x84>  // b.any
    43e0:	ldr	w2, [x19]
    43e4:	mov	w0, #0x1026                	// #4134
    43e8:	movk	w0, #0x2007, lsl #16
    43ec:	cmp	w2, w0
    43f0:	b.eq	4528 <cap_set_fd@@Base+0x198>  // b.none
    43f4:	mov	w0, #0x522                 	// #1314
    43f8:	movk	w0, #0x2008, lsl #16
    43fc:	cmp	w2, w0
    4400:	b.eq	4500 <cap_set_fd@@Base+0x170>  // b.none
    4404:	mov	w0, #0x330                 	// #816
    4408:	movk	w0, #0x1998, lsl #16
    440c:	cmp	w2, w0
    4410:	b.eq	4434 <cap_set_fd@@Base+0xa4>  // b.none
    4414:	bl	1cb0 <__errno_location@plt>
    4418:	mov	x1, x0
    441c:	mov	w2, #0x16                  	// #22
    4420:	mov	w0, #0xffffffff            	// #-1
    4424:	str	w2, [x1]
    4428:	ldp	x19, x20, [sp, #16]
    442c:	ldp	x29, x30, [sp], #192
    4430:	ret
    4434:	ldr	w0, [x19, #32]
    4438:	cbnz	w0, 4414 <cap_set_fd@@Base+0x84>
    443c:	ldr	w5, [x19, #20]
    4440:	ldr	w2, [x19, #8]
    4444:	mov	w8, w2
    4448:	cbnz	w5, 4414 <cap_set_fd@@Base+0x84>
    444c:	ldr	w3, [x19, #28]
    4450:	cbnz	w3, 4414 <cap_set_fd@@Base+0x84>
    4454:	ldr	w4, [x19, #24]
    4458:	mov	x3, #0xc                   	// #12
    445c:	mov	w6, #0x1000000             	// #16777216
    4460:	mov	w7, #0x1                   	// #1
    4464:	cbnz	w4, 4414 <cap_set_fd@@Base+0x84>
    4468:	ldur	d0, [x19, #12]
    446c:	ldp	w0, w4, [x19, #12]
    4470:	stur	d0, [sp, #44]
    4474:	cbz	w8, 44ac <cap_set_fd@@Base+0x11c>
    4478:	orr	w4, w4, w0
    447c:	bics	wzr, w4, w2
    4480:	b.ne	4414 <cap_set_fd@@Base+0x84>  // b.any
    4484:	cmp	w7, #0x2
    4488:	b.ne	44a4 <cap_set_fd@@Base+0x114>  // b.any
    448c:	ldp	w2, w0, [x19, #24]
    4490:	ldr	d0, [x19, #24]
    4494:	orr	w2, w2, w0
    4498:	bics	wzr, w2, w5
    449c:	stur	d0, [sp, #52]
    44a0:	b.ne	4414 <cap_set_fd@@Base+0x84>  // b.any
    44a4:	orr	w6, w6, #0x1
    44a8:	b	44bc <cap_set_fd@@Base+0x12c>
    44ac:	cmp	w7, #0x2
    44b0:	b.ne	44bc <cap_set_fd@@Base+0x12c>  // b.any
    44b4:	ldr	d0, [x19, #24]
    44b8:	stur	d0, [sp, #52]
    44bc:	add	x2, sp, #0x28
    44c0:	mov	w0, w20
    44c4:	mov	w4, #0x0                   	// #0
    44c8:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    44cc:	add	x1, x1, #0xa50
    44d0:	str	w6, [sp, #40]
    44d4:	bl	1c40 <fsetxattr@plt>
    44d8:	ldp	x19, x20, [sp, #16]
    44dc:	ldp	x29, x30, [sp], #192
    44e0:	ret
    44e4:	mov	w0, w20
    44e8:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    44ec:	add	x1, x1, #0xa50
    44f0:	bl	1b80 <fremovexattr@plt>
    44f4:	ldp	x19, x20, [sp, #16]
    44f8:	ldp	x29, x30, [sp], #192
    44fc:	ret
    4500:	ldr	w0, [x19, #32]
    4504:	cbz	w0, 4530 <cap_set_fd@@Base+0x1a0>
    4508:	ldr	w2, [x19, #8]
    450c:	mov	x3, #0x18                  	// #24
    4510:	mov	w6, #0x3000000             	// #50331648
    4514:	str	w0, [sp, #60]
    4518:	ldr	w5, [x19, #20]
    451c:	mov	w7, #0x2                   	// #2
    4520:	orr	w8, w2, w5
    4524:	b	4468 <cap_set_fd@@Base+0xd8>
    4528:	ldr	w0, [x19, #32]
    452c:	cbnz	w0, 4414 <cap_set_fd@@Base+0x84>
    4530:	ldr	w2, [x19, #8]
    4534:	mov	x3, #0x14                  	// #20
    4538:	mov	w6, #0x2000000             	// #33554432
    453c:	b	4518 <cap_set_fd@@Base+0x188>
    4540:	mov	w0, #0xffffffff            	// #-1
    4544:	b	4428 <cap_set_fd@@Base+0x98>

0000000000004548 <cap_set_file@@Base>:
    4548:	stp	x29, x30, [sp, #-192]!
    454c:	mov	x29, sp
    4550:	add	x2, sp, #0x40
    4554:	stp	x19, x20, [sp, #16]
    4558:	mov	x20, x0
    455c:	mov	x19, x1
    4560:	mov	x1, x0
    4564:	mov	w0, #0x0                   	// #0
    4568:	bl	1be0 <__lxstat64@plt>
    456c:	cbnz	w0, 46f8 <cap_set_file@@Base+0x1b0>
    4570:	ldr	w2, [sp, #80]
    4574:	and	w2, w2, #0xf000
    4578:	cmp	w2, #0x8, lsl #12
    457c:	b.ne	45cc <cap_set_file@@Base+0x84>  // b.any
    4580:	cbz	x19, 469c <cap_set_file@@Base+0x154>
    4584:	ldur	w1, [x19, #-4]
    4588:	mov	w0, #0x90d0                	// #37072
    458c:	movk	w0, #0xca, lsl #16
    4590:	cmp	w1, w0
    4594:	b.ne	45cc <cap_set_file@@Base+0x84>  // b.any
    4598:	ldr	w2, [x19]
    459c:	mov	w0, #0x1026                	// #4134
    45a0:	movk	w0, #0x2007, lsl #16
    45a4:	cmp	w2, w0
    45a8:	b.eq	46e0 <cap_set_file@@Base+0x198>  // b.none
    45ac:	mov	w0, #0x522                 	// #1314
    45b0:	movk	w0, #0x2008, lsl #16
    45b4:	cmp	w2, w0
    45b8:	b.eq	46b8 <cap_set_file@@Base+0x170>  // b.none
    45bc:	mov	w0, #0x330                 	// #816
    45c0:	movk	w0, #0x1998, lsl #16
    45c4:	cmp	w2, w0
    45c8:	b.eq	45ec <cap_set_file@@Base+0xa4>  // b.none
    45cc:	bl	1cb0 <__errno_location@plt>
    45d0:	mov	x1, x0
    45d4:	mov	w2, #0x16                  	// #22
    45d8:	mov	w0, #0xffffffff            	// #-1
    45dc:	str	w2, [x1]
    45e0:	ldp	x19, x20, [sp, #16]
    45e4:	ldp	x29, x30, [sp], #192
    45e8:	ret
    45ec:	ldr	w0, [x19, #32]
    45f0:	cbnz	w0, 45cc <cap_set_file@@Base+0x84>
    45f4:	ldr	w5, [x19, #20]
    45f8:	ldr	w2, [x19, #8]
    45fc:	mov	w8, w2
    4600:	cbnz	w5, 45cc <cap_set_file@@Base+0x84>
    4604:	ldr	w3, [x19, #28]
    4608:	cbnz	w3, 45cc <cap_set_file@@Base+0x84>
    460c:	ldr	w4, [x19, #24]
    4610:	mov	x3, #0xc                   	// #12
    4614:	mov	w6, #0x1000000             	// #16777216
    4618:	mov	w7, #0x1                   	// #1
    461c:	cbnz	w4, 45cc <cap_set_file@@Base+0x84>
    4620:	ldur	d0, [x19, #12]
    4624:	ldp	w0, w4, [x19, #12]
    4628:	stur	d0, [sp, #44]
    462c:	cbz	w8, 4664 <cap_set_file@@Base+0x11c>
    4630:	orr	w4, w4, w0
    4634:	bics	wzr, w4, w2
    4638:	b.ne	45cc <cap_set_file@@Base+0x84>  // b.any
    463c:	cmp	w7, #0x2
    4640:	b.ne	465c <cap_set_file@@Base+0x114>  // b.any
    4644:	ldp	w2, w0, [x19, #24]
    4648:	ldr	d0, [x19, #24]
    464c:	orr	w2, w2, w0
    4650:	bics	wzr, w2, w5
    4654:	stur	d0, [sp, #52]
    4658:	b.ne	45cc <cap_set_file@@Base+0x84>  // b.any
    465c:	orr	w6, w6, #0x1
    4660:	b	4674 <cap_set_file@@Base+0x12c>
    4664:	cmp	w7, #0x2
    4668:	b.ne	4674 <cap_set_file@@Base+0x12c>  // b.any
    466c:	ldr	d0, [x19, #24]
    4670:	stur	d0, [sp, #52]
    4674:	add	x2, sp, #0x28
    4678:	mov	x0, x20
    467c:	mov	w4, #0x0                   	// #0
    4680:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    4684:	add	x1, x1, #0xa50
    4688:	str	w6, [sp, #40]
    468c:	bl	1b10 <setxattr@plt>
    4690:	ldp	x19, x20, [sp, #16]
    4694:	ldp	x29, x30, [sp], #192
    4698:	ret
    469c:	mov	x0, x20
    46a0:	adrp	x1, 4000 <cap_to_text@@Base+0x528>
    46a4:	add	x1, x1, #0xa50
    46a8:	bl	1a00 <removexattr@plt>
    46ac:	ldp	x19, x20, [sp, #16]
    46b0:	ldp	x29, x30, [sp], #192
    46b4:	ret
    46b8:	ldr	w0, [x19, #32]
    46bc:	cbz	w0, 46e8 <cap_set_file@@Base+0x1a0>
    46c0:	ldr	w2, [x19, #8]
    46c4:	mov	x3, #0x18                  	// #24
    46c8:	mov	w6, #0x3000000             	// #50331648
    46cc:	str	w0, [sp, #60]
    46d0:	ldr	w5, [x19, #20]
    46d4:	mov	w7, #0x2                   	// #2
    46d8:	orr	w8, w2, w5
    46dc:	b	4620 <cap_set_file@@Base+0xd8>
    46e0:	ldr	w0, [x19, #32]
    46e4:	cbnz	w0, 45cc <cap_set_file@@Base+0x84>
    46e8:	ldr	w2, [x19, #8]
    46ec:	mov	x3, #0x14                  	// #20
    46f0:	mov	w6, #0x2000000             	// #33554432
    46f4:	b	46d0 <cap_set_file@@Base+0x188>
    46f8:	mov	w0, #0xffffffff            	// #-1
    46fc:	b	45e0 <cap_set_file@@Base+0x98>

0000000000004700 <cap_set_nsowner@@Base>:
    4700:	mov	x2, x0
    4704:	mov	w0, #0x0                   	// #0
    4708:	str	w1, [x2, #32]
    470c:	ret

Disassembly of section .fini:

0000000000004710 <.fini>:
    4710:	stp	x29, x30, [sp, #-16]!
    4714:	mov	x29, sp
    4718:	ldp	x29, x30, [sp], #16
    471c:	ret
