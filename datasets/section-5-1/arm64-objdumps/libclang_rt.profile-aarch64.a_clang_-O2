In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_clang_-O2:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <llvm_gcda_start_file>:
       0:	sub	sp, sp, #0x70
       4:	stp	x29, x30, [sp, #16]
       8:	stp	x28, x27, [sp, #32]
       c:	stp	x26, x25, [sp, #48]
      10:	stp	x24, x23, [sp, #64]
      14:	stp	x22, x21, [sp, #80]
      18:	stp	x20, x19, [sp, #96]
      1c:	add	x29, sp, #0x10
      20:	mov	x20, x1
      24:	mov	x21, x0
      28:	add	x0, sp, #0x4
      2c:	add	x1, sp, #0x8
      30:	mov	w19, w2
      34:	bl	0 <lprofGetPathPrefix>
      38:	cbz	x0, 74 <llvm_gcda_start_file+0x74>
      3c:	ldr	x24, [sp, #8]
      40:	mov	x23, x0
      44:	mov	x0, x21
      48:	bl	0 <strlen>
      4c:	add	x8, x24, x0
      50:	add	x0, x8, #0x2
      54:	bl	0 <malloc>
      58:	ldr	w4, [sp, #4]
      5c:	mov	x1, x21
      60:	mov	x2, x23
      64:	mov	x3, x24
      68:	mov	x22, x0
      6c:	bl	0 <lprofApplyPathPrefix>
      70:	b	80 <llvm_gcda_start_file+0x80>
      74:	mov	x0, x21
      78:	bl	0 <strdup>
      7c:	mov	x22, x0
      80:	adrp	x28, 0 <llvm_gcda_start_file>
      84:	adrp	x23, 0 <llvm_gcda_start_file>
      88:	mov	w1, #0x2                   	// #2
      8c:	mov	x0, x22
      90:	str	x22, [x28]
      94:	strb	wzr, [x23]
      98:	bl	0 <open>
      9c:	adrp	x22, 0 <llvm_gcda_start_file>
      a0:	cmn	w0, #0x1
      a4:	str	w0, [x22]
      a8:	b.eq	b8 <llvm_gcda_start_file+0xb8>  // b.none
      ac:	adrp	x21, 0 <llvm_gcda_start_file>
      b0:	add	x21, x21, #0x0
      b4:	b	108 <llvm_gcda_start_file+0x108>
      b8:	ldr	x0, [x28]
      bc:	mov	w8, #0x1                   	// #1
      c0:	mov	w1, #0x42                  	// #66
      c4:	mov	w2, #0x1a4                 	// #420
      c8:	strb	w8, [x23]
      cc:	bl	0 <open>
      d0:	cmn	w0, #0x1
      d4:	str	w0, [x22]
      d8:	b.ne	100 <llvm_gcda_start_file+0x100>  // b.any
      dc:	ldr	x0, [x28]
      e0:	bl	0 <__llvm_profile_recursive_mkdir>
      e4:	ldr	x0, [x28]
      e8:	mov	w1, #0x42                  	// #66
      ec:	mov	w2, #0x1a4                 	// #420
      f0:	bl	0 <open>
      f4:	cmn	w0, #0x1
      f8:	str	w0, [x22]
      fc:	b.eq	388 <llvm_gcda_start_file+0x388>  // b.none
     100:	adrp	x21, 0 <llvm_gcda_start_file>
     104:	add	x21, x21, #0x0
     108:	mov	w27, #0x6461                	// #25697
     10c:	movk	w27, #0x6763, lsl #16
     110:	bl	0 <lprofLockFd>
     114:	ldr	w0, [x22]
     118:	mov	x1, x21
     11c:	bl	0 <fdopen>
     120:	ldrb	w8, [x23]
     124:	adrp	x21, 0 <llvm_gcda_start_file>
     128:	adrp	x25, 0 <llvm_gcda_start_file>
     12c:	adrp	x26, 0 <llvm_gcda_start_file>
     130:	adrp	x24, 0 <llvm_gcda_start_file>
     134:	cmp	w8, #0x1
     138:	str	x0, [x21]
     13c:	str	xzr, [x25]
     140:	str	xzr, [x26]
     144:	str	xzr, [x24]
     148:	b.ne	1d4 <llvm_gcda_start_file+0x1d4>  // b.any
     14c:	mov	w0, #0x20000               	// #131072
     150:	mov	w22, #0x20000               	// #131072
     154:	bl	0 <malloc>
     158:	mov	x21, x0
     15c:	str	x0, [x25]
     160:	str	x22, [x26]
     164:	mov	w2, #0x20000               	// #131072
     168:	mov	x0, x21
     16c:	mov	w1, wzr
     170:	bl	0 <memset>
     174:	ldr	x8, [x24]
     178:	ldr	x9, [x26]
     17c:	mov	w28, #0x7                   	// #7
     180:	movk	w28, #0x2, lsl #16
     184:	add	x10, x8, #0x4
     188:	cmp	x10, x9
     18c:	b.ls	24c <llvm_gcda_start_file+0x24c>  // b.plast
     190:	add	x8, x28, x8
     194:	sub	x8, x8, #0x4
     198:	and	x22, x8, #0xfffffffffffe0000
     19c:	mov	x0, x21
     1a0:	mov	x1, x22
     1a4:	bl	0 <realloc>
     1a8:	ldr	x9, [x24]
     1ac:	ldrb	w10, [x23]
     1b0:	mov	x21, x0
     1b4:	str	x0, [x25]
     1b8:	add	x8, x9, #0x4
     1bc:	cmp	w10, #0x1
     1c0:	str	x22, [x26]
     1c4:	str	w27, [x0, x9]
     1c8:	str	x8, [x24]
     1cc:	b.ne	238 <llvm_gcda_start_file+0x238>  // b.any
     1d0:	b	25c <llvm_gcda_start_file+0x25c>
     1d4:	mov	w2, #0x2                   	// #2
     1d8:	mov	x1, xzr
     1dc:	bl	0 <fseek>
     1e0:	ldr	x0, [x21]
     1e4:	bl	0 <ftell>
     1e8:	adrp	x8, 0 <llvm_gcda_start_file>
     1ec:	str	x0, [x8]
     1f0:	cbz	x0, 354 <llvm_gcda_start_file+0x354>
     1f4:	ldr	w4, [x22]
     1f8:	mov	x1, x0
     1fc:	mov	w2, #0x3                   	// #3
     200:	mov	w3, #0x1                   	// #1
     204:	mov	x0, xzr
     208:	mov	x5, xzr
     20c:	bl	0 <mmap>
     210:	cmn	x0, #0x1
     214:	str	x0, [x25]
     218:	b.eq	320 <llvm_gcda_start_file+0x320>  // b.none
     21c:	ldrb	w8, [x23]
     220:	mov	x21, x0
     224:	tbnz	w8, #0, 174 <llvm_gcda_start_file+0x174>
     228:	ldr	x8, [x24]
     22c:	str	w27, [x21, x8]
     230:	add	x8, x8, #0x4
     234:	str	x8, [x24]
     238:	ldr	w10, [x20]
     23c:	add	x9, x8, #0x4
     240:	str	w10, [x21, x8]
     244:	str	x9, [x24]
     248:	b	2f4 <llvm_gcda_start_file+0x2f4>
     24c:	ldr	x9, [x24]
     250:	add	x8, x9, #0x4
     254:	str	w27, [x21, x9]
     258:	str	x8, [x24]
     25c:	ldr	x10, [x26]
     260:	add	x11, x9, #0x8
     264:	cmp	x11, x10
     268:	b.ls	2b0 <llvm_gcda_start_file+0x2b0>  // b.plast
     26c:	add	x8, x9, x28
     270:	and	x22, x8, #0xfffffffffffe0000
     274:	mov	x0, x21
     278:	mov	x1, x22
     27c:	bl	0 <realloc>
     280:	str	x0, [x25]
     284:	str	x22, [x26]
     288:	ldr	x8, [x24]
     28c:	ldrb	w10, [x23]
     290:	ldr	w11, [x20]
     294:	mov	x21, x0
     298:	add	x9, x8, #0x4
     29c:	cmp	w10, #0x1
     2a0:	str	w11, [x0, x8]
     2a4:	str	x9, [x24]
     2a8:	b.eq	2c0 <llvm_gcda_start_file+0x2c0>  // b.none
     2ac:	b	2f4 <llvm_gcda_start_file+0x2f4>
     2b0:	ldr	w10, [x20]
     2b4:	add	x9, x8, #0x4
     2b8:	str	w10, [x21, x8]
     2bc:	str	x9, [x24]
     2c0:	ldr	x10, [x26]
     2c4:	add	x11, x8, #0x8
     2c8:	cmp	x11, x10
     2cc:	b.ls	2f4 <llvm_gcda_start_file+0x2f4>  // b.plast
     2d0:	add	x8, x8, x28
     2d4:	and	x20, x8, #0xfffffffffffe0000
     2d8:	mov	x0, x21
     2dc:	mov	x1, x20
     2e0:	bl	0 <realloc>
     2e4:	ldr	x9, [x24]
     2e8:	mov	x21, x0
     2ec:	str	x0, [x25]
     2f0:	str	x20, [x26]
     2f4:	add	x8, x9, #0x4
     2f8:	str	w19, [x21, x9]
     2fc:	str	x8, [x24]
     300:	ldp	x20, x19, [sp, #96]
     304:	ldp	x22, x21, [sp, #80]
     308:	ldp	x24, x23, [sp, #64]
     30c:	ldp	x26, x25, [sp, #48]
     310:	ldp	x28, x27, [sp, #32]
     314:	ldp	x29, x30, [sp, #16]
     318:	add	sp, sp, #0x70
     31c:	ret
     320:	bl	0 <__errno_location>
     324:	adrp	x8, 0 <stderr>
     328:	ldr	w0, [x0]
     32c:	ldr	x8, [x8]
     330:	ldr	x22, [x28]
     334:	ldr	x21, [x8]
     338:	bl	0 <strerror>
     33c:	adrp	x1, 0 <llvm_gcda_start_file>
     340:	mov	x3, x0
     344:	add	x1, x1, #0x0
     348:	mov	x0, x21
     34c:	mov	x2, x22
     350:	bl	0 <fprintf>
     354:	ldr	x8, [x24]
     358:	mov	x21, xzr
     35c:	mov	w9, #0x1                   	// #1
     360:	strb	w9, [x23]
     364:	cmn	x8, #0x20, lsl #12
     368:	str	xzr, [x25]
     36c:	str	xzr, [x26]
     370:	b.eq	164 <llvm_gcda_start_file+0x164>  // b.none
     374:	mov	w9, #0x3ffff               	// #262143
     378:	add	x8, x8, x9
     37c:	and	x22, x8, #0xfffffffffffe0000
     380:	mov	x0, x22
     384:	b	154 <llvm_gcda_start_file+0x154>
     388:	bl	0 <__errno_location>
     38c:	adrp	x8, 0 <stderr>
     390:	ldr	w0, [x0]
     394:	ldr	x8, [x8]
     398:	ldr	x20, [x28]
     39c:	ldr	x19, [x8]
     3a0:	bl	0 <strerror>
     3a4:	adrp	x1, 0 <llvm_gcda_start_file>
     3a8:	mov	x3, x0
     3ac:	add	x1, x1, #0x0
     3b0:	mov	x0, x19
     3b4:	mov	x2, x20
     3b8:	bl	0 <fprintf>
     3bc:	b	300 <llvm_gcda_start_file+0x300>

00000000000003c0 <llvm_gcda_increment_indirect_counter>:
     3c0:	ldr	w8, [x0]
     3c4:	cmn	w8, #0x1
     3c8:	b.eq	3e0 <llvm_gcda_increment_indirect_counter+0x20>  // b.none
     3cc:	ldr	x8, [x1, x8, lsl #3]
     3d0:	cbz	x8, 3e0 <llvm_gcda_increment_indirect_counter+0x20>
     3d4:	ldr	x9, [x8]
     3d8:	add	x9, x9, #0x1
     3dc:	str	x9, [x8]
     3e0:	ret

00000000000003e4 <llvm_gcda_emit_function>:
     3e4:	sub	sp, sp, #0x70
     3e8:	stp	x29, x30, [sp, #16]
     3ec:	stp	x28, x27, [sp, #32]
     3f0:	stp	x26, x25, [sp, #48]
     3f4:	stp	x24, x23, [sp, #64]
     3f8:	stp	x22, x21, [sp, #80]
     3fc:	stp	x20, x19, [sp, #96]
     400:	add	x29, sp, #0x10
     404:	adrp	x8, 0 <llvm_gcda_start_file>
     408:	ldr	x8, [x8]
     40c:	tst	w3, #0xff
     410:	mov	w9, #0x2                   	// #2
     414:	cinc	w28, w9, ne  // ne = any
     418:	cbz	x8, 7e8 <llvm_gcda_emit_function+0x404>
     41c:	adrp	x8, 0 <llvm_gcda_start_file>
     420:	ldrb	w8, [x8]
     424:	mov	w23, w3
     428:	mov	w22, w2
     42c:	mov	x19, x1
     430:	mov	w24, w0
     434:	cmp	w8, #0x1
     438:	adrp	x26, 0 <llvm_gcda_start_file>
     43c:	adrp	x25, 0 <llvm_gcda_start_file>
     440:	stur	w4, [x29, #-4]
     444:	b.ne	488 <llvm_gcda_emit_function+0xa4>  // b.any
     448:	ldr	x8, [x26]
     44c:	adrp	x21, 0 <llvm_gcda_start_file>
     450:	ldr	x9, [x21]
     454:	add	x10, x8, #0x4
     458:	cmp	x10, x9
     45c:	b.ls	488 <llvm_gcda_emit_function+0xa4>  // b.plast
     460:	mov	w9, #0x7                   	// #7
     464:	movk	w9, #0x2, lsl #16
     468:	ldr	x0, [x25]
     46c:	add	x8, x9, x8
     470:	sub	x8, x8, #0x4
     474:	and	x20, x8, #0xfffffffffffe0000
     478:	mov	x1, x20
     47c:	bl	0 <realloc>
     480:	str	x0, [x25]
     484:	str	x20, [x21]
     488:	ldr	x20, [x25]
     48c:	ldr	x25, [x26]
     490:	mov	w8, #0x1000000             	// #16777216
     494:	add	x21, x25, #0x4
     498:	str	w8, [x20, x25]
     49c:	str	x21, [x26]
     4a0:	cbz	x19, 4b8 <llvm_gcda_emit_function+0xd4>
     4a4:	mov	x0, x19
     4a8:	bl	0 <strlen>
     4ac:	lsr	x8, x0, #2
     4b0:	add	w8, w28, w8
     4b4:	add	w28, w8, #0x2
     4b8:	adrp	x8, 0 <llvm_gcda_start_file>
     4bc:	ldrb	w8, [x8]
     4c0:	tbz	w8, #0, 528 <llvm_gcda_emit_function+0x144>
     4c4:	adrp	x27, 0 <llvm_gcda_start_file>
     4c8:	ldr	x9, [x27]
     4cc:	add	x8, x25, #0x8
     4d0:	cmp	x8, x9
     4d4:	b.ls	640 <llvm_gcda_emit_function+0x25c>  // b.plast
     4d8:	mov	w8, #0x7                   	// #7
     4dc:	movk	w8, #0x2, lsl #16
     4e0:	add	x8, x25, x8
     4e4:	and	x25, x8, #0xfffffffffffe0000
     4e8:	mov	x0, x20
     4ec:	mov	x1, x25
     4f0:	bl	0 <realloc>
     4f4:	adrp	x8, 0 <llvm_gcda_start_file>
     4f8:	str	x0, [x8]
     4fc:	adrp	x8, 0 <llvm_gcda_start_file>
     500:	ldr	x21, [x26]
     504:	ldrb	w9, [x8]
     508:	mov	x20, x0
     50c:	str	x25, [x27]
     510:	add	x8, x21, #0x4
     514:	cmp	w9, #0x1
     518:	str	w28, [x0, x21]
     51c:	str	x8, [x26]
     520:	b.ne	534 <llvm_gcda_emit_function+0x150>  // b.any
     524:	b	648 <llvm_gcda_emit_function+0x264>
     528:	add	x8, x25, #0x8
     52c:	str	w28, [x20, x21]
     530:	str	x8, [x26]
     534:	add	x9, x8, #0x4
     538:	str	w24, [x20, x8]
     53c:	str	x9, [x26]
     540:	tst	w23, #0xff
     544:	add	x23, x9, #0x4
     548:	str	w22, [x20, x9]
     54c:	str	x23, [x26]
     550:	b.eq	5c0 <llvm_gcda_emit_function+0x1dc>  // b.none
     554:	adrp	x8, 0 <llvm_gcda_start_file>
     558:	ldrb	w8, [x8]
     55c:	adrp	x27, 0 <llvm_gcda_start_file>
     560:	cmp	w8, #0x1
     564:	b.ne	5a8 <llvm_gcda_emit_function+0x1c4>  // b.any
     568:	adrp	x21, 0 <llvm_gcda_start_file>
     56c:	ldr	x8, [x21]
     570:	add	x10, x9, #0x8
     574:	cmp	x10, x8
     578:	b.ls	5a8 <llvm_gcda_emit_function+0x1c4>  // b.plast
     57c:	mov	w8, #0x7                   	// #7
     580:	movk	w8, #0x2, lsl #16
     584:	add	x8, x9, x8
     588:	and	x22, x8, #0xfffffffffffe0000
     58c:	mov	x0, x20
     590:	mov	x1, x22
     594:	bl	0 <realloc>
     598:	ldr	x23, [x26]
     59c:	mov	x20, x0
     5a0:	str	x0, [x27]
     5a4:	str	x22, [x21]
     5a8:	ldur	w8, [x29, #-4]
     5ac:	str	w8, [x20, x23]
     5b0:	add	x23, x23, #0x4
     5b4:	str	x23, [x26]
     5b8:	cbnz	x19, 5c8 <llvm_gcda_emit_function+0x1e4>
     5bc:	b	7e8 <llvm_gcda_emit_function+0x404>
     5c0:	adrp	x27, 0 <llvm_gcda_start_file>
     5c4:	cbz	x19, 7e8 <llvm_gcda_emit_function+0x404>
     5c8:	mov	x0, x19
     5cc:	bl	0 <strlen>
     5d0:	adrp	x8, 0 <llvm_gcda_start_file>
     5d4:	ldrb	w8, [x8]
     5d8:	lsr	x9, x0, #2
     5dc:	add	w22, w9, #0x1
     5e0:	cmp	w8, #0x1
     5e4:	b.ne	638 <llvm_gcda_emit_function+0x254>  // b.any
     5e8:	adrp	x25, 0 <llvm_gcda_start_file>
     5ec:	ldr	x8, [x25]
     5f0:	add	x9, x23, #0x4
     5f4:	cmp	x9, x8
     5f8:	b.ls	6f8 <llvm_gcda_emit_function+0x314>  // b.plast
     5fc:	mov	w8, #0x7                   	// #7
     600:	movk	w8, #0x2, lsl #16
     604:	add	x8, x8, x23
     608:	sub	x8, x8, #0x4
     60c:	and	x21, x8, #0xfffffffffffe0000
     610:	mov	x0, x20
     614:	mov	x1, x21
     618:	bl	0 <realloc>
     61c:	adrp	x8, 0 <llvm_gcda_start_file>
     620:	ldrb	w24, [x8]
     624:	ldr	x23, [x26]
     628:	mov	x20, x0
     62c:	str	x0, [x27]
     630:	str	x21, [x25]
     634:	b	6fc <llvm_gcda_emit_function+0x318>
     638:	mov	w24, wzr
     63c:	b	6fc <llvm_gcda_emit_function+0x318>
     640:	str	w28, [x20, x21]
     644:	str	x8, [x26]
     648:	ldr	x9, [x27]
     64c:	add	x10, x21, #0x8
     650:	cmp	x10, x9
     654:	b.ls	6a8 <llvm_gcda_emit_function+0x2c4>  // b.plast
     658:	mov	w8, #0x7                   	// #7
     65c:	movk	w8, #0x2, lsl #16
     660:	add	x8, x21, x8
     664:	and	x25, x8, #0xfffffffffffe0000
     668:	mov	x0, x20
     66c:	mov	x1, x25
     670:	bl	0 <realloc>
     674:	adrp	x9, 0 <llvm_gcda_start_file>
     678:	str	x0, [x9]
     67c:	adrp	x9, 0 <llvm_gcda_start_file>
     680:	ldr	x8, [x26]
     684:	ldrb	w10, [x9]
     688:	mov	x20, x0
     68c:	str	x25, [x27]
     690:	add	x9, x8, #0x4
     694:	cmp	w10, #0x1
     698:	str	w24, [x0, x8]
     69c:	str	x9, [x26]
     6a0:	b.ne	540 <llvm_gcda_emit_function+0x15c>  // b.any
     6a4:	b	6b4 <llvm_gcda_emit_function+0x2d0>
     6a8:	add	x9, x8, #0x4
     6ac:	str	w24, [x20, x8]
     6b0:	str	x9, [x26]
     6b4:	ldr	x10, [x27]
     6b8:	add	x11, x8, #0x8
     6bc:	cmp	x11, x10
     6c0:	b.ls	540 <llvm_gcda_emit_function+0x15c>  // b.plast
     6c4:	mov	w9, #0x7                   	// #7
     6c8:	movk	w9, #0x2, lsl #16
     6cc:	add	x8, x8, x9
     6d0:	and	x24, x8, #0xfffffffffffe0000
     6d4:	mov	x0, x20
     6d8:	mov	x1, x24
     6dc:	bl	0 <realloc>
     6e0:	ldr	x9, [x26]
     6e4:	mov	x20, x0
     6e8:	adrp	x8, 0 <llvm_gcda_start_file>
     6ec:	str	x0, [x8]
     6f0:	str	x24, [x27]
     6f4:	b	540 <llvm_gcda_emit_function+0x15c>
     6f8:	mov	w24, #0x1                   	// #1
     6fc:	str	w22, [x20, x23]
     700:	add	x23, x23, #0x4
     704:	mov	x0, x19
     708:	str	x23, [x26]
     70c:	bl	0 <strlen>
     710:	mov	x21, x0
     714:	cbz	w24, 764 <llvm_gcda_emit_function+0x380>
     718:	adrp	x25, 0 <llvm_gcda_start_file>
     71c:	ldr	x9, [x25]
     720:	add	x8, x21, x23
     724:	cmp	x8, x9
     728:	b.ls	760 <llvm_gcda_emit_function+0x37c>  // b.plast
     72c:	mov	w9, #0x1ffff               	// #131071
     730:	add	x8, x8, x9
     734:	and	x22, x8, #0xfffffffffffe0000
     738:	mov	x0, x20
     73c:	mov	x1, x22
     740:	bl	0 <realloc>
     744:	adrp	x8, 0 <llvm_gcda_start_file>
     748:	ldr	x23, [x26]
     74c:	ldrb	w24, [x8]
     750:	mov	x20, x0
     754:	str	x0, [x27]
     758:	str	x22, [x25]
     75c:	b	764 <llvm_gcda_emit_function+0x380>
     760:	mov	w24, #0x1                   	// #1
     764:	add	x0, x20, x23
     768:	mov	x1, x19
     76c:	mov	x2, x21
     770:	bl	0 <memcpy>
     774:	add	x22, x23, x21
     778:	mov	x0, x19
     77c:	str	x22, [x26]
     780:	bl	0 <strlen>
     784:	and	x8, x0, #0x3
     788:	mov	w9, #0x4                   	// #4
     78c:	sub	x19, x9, x8
     790:	cbz	w24, 7d0 <llvm_gcda_emit_function+0x3ec>
     794:	adrp	x23, 0 <llvm_gcda_start_file>
     798:	ldr	x9, [x23]
     79c:	add	x8, x19, x22
     7a0:	cmp	x8, x9
     7a4:	b.ls	7d0 <llvm_gcda_emit_function+0x3ec>  // b.plast
     7a8:	mov	w9, #0x1ffff               	// #131071
     7ac:	add	x8, x8, x9
     7b0:	and	x21, x8, #0xfffffffffffe0000
     7b4:	mov	x0, x20
     7b8:	mov	x1, x21
     7bc:	bl	0 <realloc>
     7c0:	ldr	x22, [x26]
     7c4:	mov	x20, x0
     7c8:	str	x0, [x27]
     7cc:	str	x21, [x23]
     7d0:	add	x0, x20, x22
     7d4:	mov	w1, wzr
     7d8:	mov	x2, x19
     7dc:	bl	0 <memset>
     7e0:	add	x8, x22, x19
     7e4:	str	x8, [x26]
     7e8:	ldp	x20, x19, [sp, #96]
     7ec:	ldp	x22, x21, [sp, #80]
     7f0:	ldp	x24, x23, [sp, #64]
     7f4:	ldp	x26, x25, [sp, #48]
     7f8:	ldp	x28, x27, [sp, #32]
     7fc:	ldp	x29, x30, [sp, #16]
     800:	add	sp, sp, #0x70
     804:	ret

0000000000000808 <llvm_gcda_emit_arcs>:
     808:	stp	x29, x30, [sp, #-96]!
     80c:	stp	x28, x27, [sp, #16]
     810:	stp	x26, x25, [sp, #32]
     814:	stp	x24, x23, [sp, #48]
     818:	stp	x22, x21, [sp, #64]
     81c:	stp	x20, x19, [sp, #80]
     820:	mov	x29, sp
     824:	adrp	x8, 0 <llvm_gcda_start_file>
     828:	ldr	x8, [x8]
     82c:	cbz	x8, 8bc <llvm_gcda_emit_arcs+0xb4>
     830:	adrp	x24, 0 <llvm_gcda_start_file>
     834:	adrp	x25, 0 <llvm_gcda_start_file>
     838:	ldrb	w8, [x25]
     83c:	ldr	x23, [x24]
     840:	mov	x19, x1
     844:	mov	w22, w0
     848:	adrp	x9, 0 <llvm_gcda_start_file>
     84c:	adrp	x12, 0 <llvm_gcda_start_file>
     850:	tbz	w8, #0, 8d8 <llvm_gcda_emit_arcs+0xd0>
     854:	ldr	x8, [x12]
     858:	add	x26, x23, #0x4
     85c:	cmp	x26, x8
     860:	b.ls	944 <llvm_gcda_emit_arcs+0x13c>  // b.plast
     864:	mov	w8, #0x3                   	// #3
     868:	ldr	x0, [x9]
     86c:	movk	w8, #0x2, lsl #16
     870:	add	x8, x23, x8
     874:	and	x21, x8, #0xfffffffffffe0000
     878:	mov	x1, x21
     87c:	bl	0 <realloc>
     880:	adrp	x8, 0 <llvm_gcda_start_file>
     884:	str	x0, [x8]
     888:	ldr	x23, [x24]
     88c:	ldrb	w8, [x25]
     890:	adrp	x12, 0 <llvm_gcda_start_file>
     894:	mov	x20, x0
     898:	mov	w9, #0x1a10000             	// #27328512
     89c:	add	x26, x23, #0x4
     8a0:	cmp	w8, #0x1
     8a4:	lsl	w27, w22, #1
     8a8:	str	x21, [x12]
     8ac:	str	w9, [x0, x23]
     8b0:	str	x26, [x24]
     8b4:	b.eq	958 <llvm_gcda_emit_arcs+0x150>  // b.none
     8b8:	b	9a8 <llvm_gcda_emit_arcs+0x1a0>
     8bc:	ldp	x20, x19, [sp, #80]
     8c0:	ldp	x22, x21, [sp, #64]
     8c4:	ldp	x24, x23, [sp, #48]
     8c8:	ldp	x26, x25, [sp, #32]
     8cc:	ldp	x28, x27, [sp, #16]
     8d0:	ldp	x29, x30, [sp], #96
     8d4:	ret
     8d8:	ldr	x20, [x9]
     8dc:	add	x26, x23, #0x4
     8e0:	ldr	w3, [x20, x23]
     8e4:	str	x26, [x24]
     8e8:	cmn	w3, #0x1
     8ec:	b.eq	9b0 <llvm_gcda_emit_arcs+0x1a8>  // b.none
     8f0:	mov	w8, #0x1a10000             	// #27328512
     8f4:	cmp	w3, w8
     8f8:	b.ne	b94 <llvm_gcda_emit_arcs+0x38c>  // b.any
     8fc:	ldr	w3, [x20, x26]
     900:	add	x27, x23, #0x8
     904:	str	x27, [x24]
     908:	cmn	w3, #0x1
     90c:	b.eq	bb4 <llvm_gcda_emit_arcs+0x3ac>  // b.none
     910:	lsr	w8, w3, #1
     914:	cmp	w8, w22
     918:	b.ne	bb4 <llvm_gcda_emit_arcs+0x3ac>  // b.any
     91c:	mov	w28, w22
     920:	lsl	x0, x28, #3
     924:	bl	0 <malloc>
     928:	mov	x21, x0
     92c:	cbz	w22, 9b8 <llvm_gcda_emit_arcs+0x1b0>
     930:	cmp	w22, #0x4
     934:	b.cs	9c0 <llvm_gcda_emit_arcs+0x1b8>  // b.hs, b.nlast
     938:	mov	x8, xzr
     93c:	adrp	x12, 0 <llvm_gcda_start_file>
     940:	b	a1c <llvm_gcda_emit_arcs+0x214>
     944:	ldr	x20, [x9]
     948:	mov	w8, #0x1a10000             	// #27328512
     94c:	lsl	w27, w22, #1
     950:	str	w8, [x20, x23]
     954:	str	x26, [x24]
     958:	ldr	x8, [x12]
     95c:	add	x9, x23, #0x8
     960:	cmp	x9, x8
     964:	b.ls	9a8 <llvm_gcda_emit_arcs+0x1a0>  // b.plast
     968:	mov	w8, #0x3                   	// #3
     96c:	movk	w8, #0x2, lsl #16
     970:	add	x8, x8, x23
     974:	add	x8, x8, #0x4
     978:	and	x23, x8, #0xfffffffffffe0000
     97c:	mov	x0, x20
     980:	mov	x1, x23
     984:	bl	0 <realloc>
     988:	ldr	x26, [x24]
     98c:	adrp	x12, 0 <llvm_gcda_start_file>
     990:	mov	x20, x0
     994:	mov	x21, xzr
     998:	adrp	x8, 0 <llvm_gcda_start_file>
     99c:	str	x0, [x8]
     9a0:	str	x23, [x12]
     9a4:	b	a58 <llvm_gcda_emit_arcs+0x250>
     9a8:	mov	x21, xzr
     9ac:	b	a58 <llvm_gcda_emit_arcs+0x250>
     9b0:	mov	x21, xzr
     9b4:	b	a44 <llvm_gcda_emit_arcs+0x23c>
     9b8:	adrp	x12, 0 <llvm_gcda_start_file>
     9bc:	b	a44 <llvm_gcda_emit_arcs+0x23c>
     9c0:	and	x8, x28, #0xfffffffc
     9c4:	add	x10, x23, x20
     9c8:	add	x9, x21, #0x10
     9cc:	add	x27, x27, x8, lsl #3
     9d0:	add	x10, x10, #0x18
     9d4:	mov	x11, x8
     9d8:	sub	x12, x10, #0x10
     9dc:	ld2	{v0.2s, v1.2s}, [x10]
     9e0:	ld2	{v2.2s, v3.2s}, [x12]
     9e4:	subs	x11, x11, #0x4
     9e8:	add	x10, x10, #0x20
     9ec:	shll	v4.2d, v1.2s, #32
     9f0:	uxtl	v0.2d, v0.2s
     9f4:	shll	v1.2d, v3.2s, #32
     9f8:	uxtl	v2.2d, v2.2s
     9fc:	orr	v0.16b, v4.16b, v0.16b
     a00:	orr	v1.16b, v1.16b, v2.16b
     a04:	stp	q1, q0, [x9, #-16]
     a08:	add	x9, x9, #0x20
     a0c:	b.ne	9d8 <llvm_gcda_emit_arcs+0x1d0>  // b.any
     a10:	cmp	x8, x28
     a14:	adrp	x12, 0 <llvm_gcda_start_file>
     a18:	b.eq	a40 <llvm_gcda_emit_arcs+0x238>  // b.none
     a1c:	add	x9, x21, x8, lsl #3
     a20:	sub	x8, x28, x8
     a24:	mov	x10, x27
     a28:	ldr	x11, [x20, x10]
     a2c:	add	x27, x10, #0x8
     a30:	subs	x8, x8, #0x1
     a34:	mov	x10, x27
     a38:	str	x11, [x9], #8
     a3c:	b.ne	a28 <llvm_gcda_emit_arcs+0x220>  // b.any
     a40:	str	x27, [x24]
     a44:	mov	w8, #0x1a10000             	// #27328512
     a48:	str	x23, [x24]
     a4c:	str	w8, [x20, x23]
     a50:	str	x26, [x24]
     a54:	lsl	w27, w22, #1
     a58:	add	x8, x26, #0x4
     a5c:	str	w27, [x20, x26]
     a60:	str	x8, [x24]
     a64:	cbz	w22, b74 <llvm_gcda_emit_arcs+0x36c>
     a68:	mov	w23, w22
     a6c:	mov	x26, x21
     a70:	b	a9c <llvm_gcda_emit_arcs+0x294>
     a74:	add	x9, x8, #0x4
     a78:	str	w28, [x20, x8]
     a7c:	str	x9, [x24]
     a80:	add	x8, x9, #0x4
     a84:	add	x19, x19, #0x8
     a88:	subs	x23, x23, #0x1
     a8c:	add	x26, x26, #0x8
     a90:	str	w27, [x20, x9]
     a94:	str	x8, [x24]
     a98:	b.eq	b74 <llvm_gcda_emit_arcs+0x36c>  // b.none
     a9c:	cbz	x21, aa8 <llvm_gcda_emit_arcs+0x2a0>
     aa0:	ldr	x9, [x26]
     aa4:	b	aac <llvm_gcda_emit_arcs+0x2a4>
     aa8:	mov	x9, xzr
     aac:	ldr	x10, [x19]
     ab0:	add	x28, x10, x9
     ab4:	str	x28, [x19]
     ab8:	ldrb	w9, [x25]
     abc:	lsr	x27, x28, #32
     ac0:	tbz	w9, #0, a74 <llvm_gcda_emit_arcs+0x26c>
     ac4:	ldr	x22, [x12]
     ac8:	add	x9, x8, #0x4
     acc:	cmp	x9, x22
     ad0:	b.ls	b24 <llvm_gcda_emit_arcs+0x31c>  // b.plast
     ad4:	mov	w9, #0x3                   	// #3
     ad8:	movk	w9, #0x2, lsl #16
     adc:	add	x8, x8, x9
     ae0:	and	x22, x8, #0xfffffffffffe0000
     ae4:	mov	x0, x20
     ae8:	mov	x1, x22
     aec:	bl	0 <realloc>
     af0:	ldr	x8, [x24]
     af4:	ldrb	w10, [x25]
     af8:	adrp	x9, 0 <llvm_gcda_start_file>
     afc:	adrp	x12, 0 <llvm_gcda_start_file>
     b00:	mov	x20, x0
     b04:	str	x0, [x9]
     b08:	add	x9, x8, #0x4
     b0c:	cmp	w10, #0x1
     b10:	str	x22, [x12]
     b14:	str	w28, [x0, x8]
     b18:	str	x9, [x24]
     b1c:	b.ne	a80 <llvm_gcda_emit_arcs+0x278>  // b.any
     b20:	b	b2c <llvm_gcda_emit_arcs+0x324>
     b24:	str	w28, [x20, x8]
     b28:	str	x9, [x24]
     b2c:	add	x10, x8, #0x8
     b30:	cmp	x10, x22
     b34:	b.ls	a80 <llvm_gcda_emit_arcs+0x278>  // b.plast
     b38:	mov	w9, #0x3                   	// #3
     b3c:	movk	w9, #0x2, lsl #16
     b40:	add	x8, x9, x8
     b44:	add	x8, x8, #0x4
     b48:	and	x22, x8, #0xfffffffffffe0000
     b4c:	mov	x0, x20
     b50:	mov	x1, x22
     b54:	bl	0 <realloc>
     b58:	ldr	x9, [x24]
     b5c:	adrp	x12, 0 <llvm_gcda_start_file>
     b60:	mov	x20, x0
     b64:	adrp	x8, 0 <llvm_gcda_start_file>
     b68:	str	x0, [x8]
     b6c:	str	x22, [x12]
     b70:	b	a80 <llvm_gcda_emit_arcs+0x278>
     b74:	mov	x0, x21
     b78:	ldp	x20, x19, [sp, #80]
     b7c:	ldp	x22, x21, [sp, #64]
     b80:	ldp	x24, x23, [sp, #48]
     b84:	ldp	x26, x25, [sp, #32]
     b88:	ldp	x28, x27, [sp, #16]
     b8c:	ldp	x29, x30, [sp], #96
     b90:	b	0 <free>
     b94:	adrp	x8, 0 <stderr>
     b98:	ldr	x8, [x8]
     b9c:	adrp	x9, 0 <llvm_gcda_start_file>
     ba0:	ldr	x2, [x9]
     ba4:	adrp	x1, 0 <llvm_gcda_start_file>
     ba8:	ldr	x0, [x8]
     bac:	add	x1, x1, #0x0
     bb0:	b	bd0 <llvm_gcda_emit_arcs+0x3c8>
     bb4:	adrp	x8, 0 <stderr>
     bb8:	ldr	x8, [x8]
     bbc:	adrp	x9, 0 <llvm_gcda_start_file>
     bc0:	ldr	x2, [x9]
     bc4:	adrp	x1, 0 <llvm_gcda_start_file>
     bc8:	ldr	x0, [x8]
     bcc:	add	x1, x1, #0x0
     bd0:	ldp	x20, x19, [sp, #80]
     bd4:	ldp	x22, x21, [sp, #64]
     bd8:	ldp	x24, x23, [sp, #48]
     bdc:	ldp	x26, x25, [sp, #32]
     be0:	ldp	x28, x27, [sp, #16]
     be4:	ldp	x29, x30, [sp], #96
     be8:	b	0 <fprintf>

0000000000000bec <llvm_gcda_summary_info>:
     bec:	stp	x29, x30, [sp, #-80]!
     bf0:	stp	x26, x25, [sp, #16]
     bf4:	stp	x24, x23, [sp, #32]
     bf8:	stp	x22, x21, [sp, #48]
     bfc:	stp	x20, x19, [sp, #64]
     c00:	mov	x29, sp
     c04:	adrp	x8, 0 <llvm_gcda_start_file>
     c08:	ldr	x8, [x8]
     c0c:	cbz	x8, f4c <llvm_gcda_summary_info+0x360>
     c10:	adrp	x20, 0 <llvm_gcda_start_file>
     c14:	adrp	x23, 0 <llvm_gcda_start_file>
     c18:	ldrb	w8, [x23]
     c1c:	ldr	x10, [x20]
     c20:	adrp	x22, 0 <llvm_gcda_start_file>
     c24:	adrp	x21, 0 <llvm_gcda_start_file>
     c28:	tbz	w8, #0, c90 <llvm_gcda_summary_info+0xa4>
     c2c:	adrp	x24, 0 <llvm_gcda_start_file>
     c30:	ldr	x9, [x24]
     c34:	mov	w25, #0x7                   	// #7
     c38:	add	x8, x10, #0x4
     c3c:	movk	w25, #0x2, lsl #16
     c40:	cmp	x8, x9
     c44:	mov	w26, #0xa1000000            	// #-1593835520
     c48:	b.ls	cbc <llvm_gcda_summary_info+0xd0>  // b.plast
     c4c:	ldr	x0, [x22]
     c50:	add	x8, x25, x10
     c54:	sub	x8, x8, #0x4
     c58:	and	x19, x8, #0xfffffffffffe0000
     c5c:	mov	x1, x19
     c60:	bl	0 <realloc>
     c64:	ldr	x10, [x20]
     c68:	ldrb	w9, [x23]
     c6c:	str	x0, [x22]
     c70:	str	x19, [x24]
     c74:	add	x8, x10, #0x4
     c78:	cmp	w9, #0x1
     c7c:	str	w26, [x0, x10]
     c80:	str	x8, [x20]
     c84:	b.eq	cc8 <llvm_gcda_summary_info+0xdc>  // b.none
     c88:	mov	w9, #0x1                   	// #1
     c8c:	b	d58 <llvm_gcda_summary_info+0x16c>
     c90:	ldr	x0, [x22]
     c94:	mov	w9, #0xa1000000            	// #-1593835520
     c98:	add	x8, x10, #0x4
     c9c:	ldr	w3, [x0, x10]
     ca0:	str	x8, [x20]
     ca4:	cmp	w3, w9
     ca8:	b.eq	d18 <llvm_gcda_summary_info+0x12c>  // b.none
     cac:	cmn	w3, #0x1
     cb0:	b.ne	119c <llvm_gcda_summary_info+0x5b0>  // b.any
     cb4:	mov	w9, #0x1                   	// #1
     cb8:	b	d4c <llvm_gcda_summary_info+0x160>
     cbc:	ldr	x0, [x22]
     cc0:	str	w26, [x0, x10]
     cc4:	str	x8, [x20]
     cc8:	ldr	x9, [x24]
     ccc:	add	x11, x10, #0x8
     cd0:	cmp	x11, x9
     cd4:	b.ls	d84 <llvm_gcda_summary_info+0x198>  // b.plast
     cd8:	add	x8, x10, x25
     cdc:	and	x19, x8, #0xfffffffffffe0000
     ce0:	mov	x1, x19
     ce4:	bl	0 <realloc>
     ce8:	ldr	x8, [x20]
     cec:	ldrb	w9, [x23]
     cf0:	mov	w10, #0x9                   	// #9
     cf4:	str	x0, [x22]
     cf8:	str	w10, [x0, x8]
     cfc:	add	x10, x8, #0x4
     d00:	cmp	w9, #0x1
     d04:	str	x19, [x24]
     d08:	str	x10, [x20]
     d0c:	b.eq	d94 <llvm_gcda_summary_info+0x1a8>  // b.none
     d10:	mov	w9, #0x1                   	// #1
     d14:	b	d68 <llvm_gcda_summary_info+0x17c>
     d18:	ldr	w3, [x0, x8]
     d1c:	add	x9, x10, #0x8
     d20:	str	x9, [x20]
     d24:	cmp	w3, #0x9
     d28:	b.ne	11bc <llvm_gcda_summary_info+0x5d0>  // b.any
     d2c:	ldrb	w11, [x21]
     d30:	add	x9, x10, x0
     d34:	ldr	w9, [x9, #16]
     d38:	add	x12, x10, #0x14
     d3c:	mvn	w11, w11
     d40:	and	w11, w11, #0x1
     d44:	add	w9, w9, w11
     d48:	str	x12, [x20]
     d4c:	mov	w11, #0xa1000000            	// #-1593835520
     d50:	str	w11, [x0, x10]
     d54:	str	x8, [x20]
     d58:	mov	w11, #0x9                   	// #9
     d5c:	add	x10, x8, #0x4
     d60:	str	w11, [x0, x8]
     d64:	str	x10, [x20]
     d68:	add	x11, x10, #0x4
     d6c:	str	wzr, [x0, x10]
     d70:	str	x11, [x20]
     d74:	add	x8, x11, #0x4
     d78:	str	wzr, [x0, x11]
     d7c:	str	x8, [x20]
     d80:	b	e70 <llvm_gcda_summary_info+0x284>
     d84:	mov	w9, #0x9                   	// #9
     d88:	add	x10, x8, #0x4
     d8c:	str	w9, [x0, x8]
     d90:	str	x10, [x20]
     d94:	ldr	x9, [x24]
     d98:	add	x11, x8, #0x8
     d9c:	cmp	x11, x9
     da0:	b.ls	de0 <llvm_gcda_summary_info+0x1f4>  // b.plast
     da4:	add	x8, x8, x25
     da8:	and	x19, x8, #0xfffffffffffe0000
     dac:	mov	x1, x19
     db0:	bl	0 <realloc>
     db4:	ldr	x10, [x20]
     db8:	ldrb	w8, [x23]
     dbc:	str	x0, [x22]
     dc0:	str	x19, [x24]
     dc4:	add	x11, x10, #0x4
     dc8:	cmp	w8, #0x1
     dcc:	str	wzr, [x0, x10]
     dd0:	str	x11, [x20]
     dd4:	b.eq	dec <llvm_gcda_summary_info+0x200>  // b.none
     dd8:	mov	w9, #0x1                   	// #1
     ddc:	b	d74 <llvm_gcda_summary_info+0x188>
     de0:	add	x11, x10, #0x4
     de4:	str	wzr, [x0, x10]
     de8:	str	x11, [x20]
     dec:	ldr	x8, [x24]
     df0:	add	x9, x10, #0x8
     df4:	cmp	x9, x8
     df8:	b.ls	e34 <llvm_gcda_summary_info+0x248>  // b.plast
     dfc:	add	x8, x10, x25
     e00:	and	x19, x8, #0xfffffffffffe0000
     e04:	mov	x1, x19
     e08:	bl	0 <realloc>
     e0c:	ldr	x11, [x20]
     e10:	ldrb	w9, [x23]
     e14:	str	x0, [x22]
     e18:	str	x19, [x24]
     e1c:	add	x8, x11, #0x4
     e20:	cmp	w9, #0x1
     e24:	str	wzr, [x0, x11]
     e28:	str	x8, [x20]
     e2c:	b.eq	e40 <llvm_gcda_summary_info+0x254>  // b.none
     e30:	b	e6c <llvm_gcda_summary_info+0x280>
     e34:	add	x8, x11, #0x4
     e38:	str	wzr, [x0, x11]
     e3c:	str	x8, [x20]
     e40:	ldr	x9, [x24]
     e44:	add	x10, x11, #0x8
     e48:	cmp	x10, x9
     e4c:	b.ls	e6c <llvm_gcda_summary_info+0x280>  // b.plast
     e50:	add	x8, x11, x25
     e54:	and	x19, x8, #0xfffffffffffe0000
     e58:	mov	x1, x19
     e5c:	bl	0 <realloc>
     e60:	ldr	x8, [x20]
     e64:	str	x0, [x22]
     e68:	str	x19, [x24]
     e6c:	mov	w9, #0x1                   	// #1
     e70:	str	w9, [x0, x8]
     e74:	ldrb	w9, [x23]
     e78:	add	x10, x8, #0x4
     e7c:	str	x10, [x20]
     e80:	tbz	w9, #0, ed8 <llvm_gcda_summary_info+0x2ec>
     e84:	adrp	x24, 0 <llvm_gcda_start_file>
     e88:	ldr	x11, [x24]
     e8c:	add	x9, x8, #0x8
     e90:	mov	w25, #0x7                   	// #7
     e94:	movk	w25, #0x2, lsl #16
     e98:	cmp	x9, x11
     e9c:	b.ls	f64 <llvm_gcda_summary_info+0x378>  // b.plast
     ea0:	ldr	x0, [x22]
     ea4:	add	x8, x8, x25
     ea8:	and	x19, x8, #0xfffffffffffe0000
     eac:	mov	x1, x19
     eb0:	bl	0 <realloc>
     eb4:	ldr	x10, [x20]
     eb8:	ldrb	w8, [x23]
     ebc:	str	x0, [x22]
     ec0:	str	x19, [x24]
     ec4:	add	x9, x10, #0x4
     ec8:	str	wzr, [x0, x10]
     ecc:	str	x9, [x20]
     ed0:	tbz	w8, #0, ee8 <llvm_gcda_summary_info+0x2fc>
     ed4:	b	f70 <llvm_gcda_summary_info+0x384>
     ed8:	ldr	x0, [x22]
     edc:	add	x9, x8, #0x8
     ee0:	str	wzr, [x0, x10]
     ee4:	str	x9, [x20]
     ee8:	add	x8, x9, #0x4
     eec:	str	wzr, [x0, x9]
     ef0:	str	x8, [x20]
     ef4:	add	x9, x8, #0x4
     ef8:	str	wzr, [x0, x8]
     efc:	str	x9, [x20]
     f00:	add	x8, x9, #0x4
     f04:	str	wzr, [x0, x9]
     f08:	str	x8, [x20]
     f0c:	add	x9, x8, #0x4
     f10:	str	wzr, [x0, x8]
     f14:	str	x9, [x20]
     f18:	add	x8, x9, #0x4
     f1c:	str	wzr, [x0, x9]
     f20:	str	x8, [x20]
     f24:	mov	w10, #0xa3000000            	// #-1560281088
     f28:	add	x9, x8, #0x4
     f2c:	str	w10, [x0, x8]
     f30:	str	x9, [x20]
     f34:	ldr	x8, [x22]
     f38:	add	x10, x9, #0x4
     f3c:	mov	w11, #0x1                   	// #1
     f40:	str	wzr, [x8, x9]
     f44:	str	x10, [x20]
     f48:	strb	w11, [x21]
     f4c:	ldp	x20, x19, [sp, #64]
     f50:	ldp	x22, x21, [sp, #48]
     f54:	ldp	x24, x23, [sp, #32]
     f58:	ldp	x26, x25, [sp, #16]
     f5c:	ldp	x29, x30, [sp], #80
     f60:	ret
     f64:	ldr	x0, [x22]
     f68:	str	wzr, [x0, x10]
     f6c:	str	x9, [x20]
     f70:	ldr	x8, [x24]
     f74:	add	x11, x10, #0x8
     f78:	cmp	x11, x8
     f7c:	b.ls	fb8 <llvm_gcda_summary_info+0x3cc>  // b.plast
     f80:	add	x8, x10, x25
     f84:	and	x19, x8, #0xfffffffffffe0000
     f88:	mov	x1, x19
     f8c:	bl	0 <realloc>
     f90:	ldr	x9, [x20]
     f94:	ldrb	w10, [x23]
     f98:	str	x0, [x22]
     f9c:	str	x19, [x24]
     fa0:	add	x8, x9, #0x4
     fa4:	cmp	w10, #0x1
     fa8:	str	wzr, [x0, x9]
     fac:	str	x8, [x20]
     fb0:	b.ne	ef4 <llvm_gcda_summary_info+0x308>  // b.any
     fb4:	b	fc4 <llvm_gcda_summary_info+0x3d8>
     fb8:	add	x8, x9, #0x4
     fbc:	str	wzr, [x0, x9]
     fc0:	str	x8, [x20]
     fc4:	ldr	x10, [x24]
     fc8:	add	x11, x9, #0x8
     fcc:	cmp	x11, x10
     fd0:	b.ls	100c <llvm_gcda_summary_info+0x420>  // b.plast
     fd4:	add	x8, x9, x25
     fd8:	and	x19, x8, #0xfffffffffffe0000
     fdc:	mov	x1, x19
     fe0:	bl	0 <realloc>
     fe4:	ldr	x8, [x20]
     fe8:	ldrb	w10, [x23]
     fec:	str	x0, [x22]
     ff0:	str	x19, [x24]
     ff4:	add	x9, x8, #0x4
     ff8:	cmp	w10, #0x1
     ffc:	str	wzr, [x0, x8]
    1000:	str	x9, [x20]
    1004:	b.ne	f00 <llvm_gcda_summary_info+0x314>  // b.any
    1008:	b	1018 <llvm_gcda_summary_info+0x42c>
    100c:	add	x9, x8, #0x4
    1010:	str	wzr, [x0, x8]
    1014:	str	x9, [x20]
    1018:	ldr	x10, [x24]
    101c:	add	x11, x8, #0x8
    1020:	cmp	x11, x10
    1024:	b.ls	1060 <llvm_gcda_summary_info+0x474>  // b.plast
    1028:	add	x8, x8, x25
    102c:	and	x19, x8, #0xfffffffffffe0000
    1030:	mov	x1, x19
    1034:	bl	0 <realloc>
    1038:	ldr	x9, [x20]
    103c:	ldrb	w10, [x23]
    1040:	str	x0, [x22]
    1044:	str	x19, [x24]
    1048:	add	x8, x9, #0x4
    104c:	cmp	w10, #0x1
    1050:	str	wzr, [x0, x9]
    1054:	str	x8, [x20]
    1058:	b.ne	f0c <llvm_gcda_summary_info+0x320>  // b.any
    105c:	b	106c <llvm_gcda_summary_info+0x480>
    1060:	add	x8, x9, #0x4
    1064:	str	wzr, [x0, x9]
    1068:	str	x8, [x20]
    106c:	ldr	x10, [x24]
    1070:	add	x11, x9, #0x8
    1074:	cmp	x11, x10
    1078:	b.ls	10b4 <llvm_gcda_summary_info+0x4c8>  // b.plast
    107c:	add	x8, x9, x25
    1080:	and	x19, x8, #0xfffffffffffe0000
    1084:	mov	x1, x19
    1088:	bl	0 <realloc>
    108c:	ldr	x8, [x20]
    1090:	ldrb	w10, [x23]
    1094:	str	x0, [x22]
    1098:	str	x19, [x24]
    109c:	add	x9, x8, #0x4
    10a0:	cmp	w10, #0x1
    10a4:	str	wzr, [x0, x8]
    10a8:	str	x9, [x20]
    10ac:	b.ne	f18 <llvm_gcda_summary_info+0x32c>  // b.any
    10b0:	b	10c0 <llvm_gcda_summary_info+0x4d4>
    10b4:	add	x9, x8, #0x4
    10b8:	str	wzr, [x0, x8]
    10bc:	str	x9, [x20]
    10c0:	ldr	x10, [x24]
    10c4:	add	x11, x8, #0x8
    10c8:	cmp	x11, x10
    10cc:	b.ls	1104 <llvm_gcda_summary_info+0x518>  // b.plast
    10d0:	add	x8, x8, x25
    10d4:	and	x19, x8, #0xfffffffffffe0000
    10d8:	mov	x1, x19
    10dc:	bl	0 <realloc>
    10e0:	ldr	x9, [x20]
    10e4:	ldrb	w10, [x23]
    10e8:	str	x0, [x22]
    10ec:	str	x19, [x24]
    10f0:	add	x8, x9, #0x4
    10f4:	str	wzr, [x0, x9]
    10f8:	str	x8, [x20]
    10fc:	tbz	w10, #0, f24 <llvm_gcda_summary_info+0x338>
    1100:	b	1110 <llvm_gcda_summary_info+0x524>
    1104:	add	x8, x9, #0x4
    1108:	str	wzr, [x0, x9]
    110c:	str	x8, [x20]
    1110:	ldr	x10, [x24]
    1114:	add	x11, x9, #0x8
    1118:	cmp	x11, x10
    111c:	b.ls	115c <llvm_gcda_summary_info+0x570>  // b.plast
    1120:	add	x8, x9, x25
    1124:	and	x19, x8, #0xfffffffffffe0000
    1128:	mov	x1, x19
    112c:	bl	0 <realloc>
    1130:	ldr	x8, [x20]
    1134:	ldrb	w10, [x23]
    1138:	mov	w9, #0xa3000000            	// #-1560281088
    113c:	str	x0, [x22]
    1140:	str	w9, [x0, x8]
    1144:	add	x9, x8, #0x4
    1148:	cmp	w10, #0x1
    114c:	str	x19, [x24]
    1150:	str	x9, [x20]
    1154:	b.ne	f34 <llvm_gcda_summary_info+0x348>  // b.any
    1158:	b	116c <llvm_gcda_summary_info+0x580>
    115c:	mov	w10, #0xa3000000            	// #-1560281088
    1160:	add	x9, x8, #0x4
    1164:	str	w10, [x0, x8]
    1168:	str	x9, [x20]
    116c:	ldr	x10, [x24]
    1170:	add	x11, x8, #0x8
    1174:	cmp	x11, x10
    1178:	b.ls	f34 <llvm_gcda_summary_info+0x348>  // b.plast
    117c:	add	x8, x8, x25
    1180:	and	x19, x8, #0xfffffffffffe0000
    1184:	mov	x1, x19
    1188:	bl	0 <realloc>
    118c:	ldr	x9, [x20]
    1190:	str	x0, [x22]
    1194:	str	x19, [x24]
    1198:	b	f34 <llvm_gcda_summary_info+0x348>
    119c:	adrp	x8, 0 <stderr>
    11a0:	ldr	x8, [x8]
    11a4:	adrp	x9, 0 <llvm_gcda_start_file>
    11a8:	ldr	x2, [x9]
    11ac:	adrp	x1, 0 <llvm_gcda_start_file>
    11b0:	ldr	x0, [x8]
    11b4:	add	x1, x1, #0x0
    11b8:	b	11d8 <llvm_gcda_summary_info+0x5ec>
    11bc:	adrp	x8, 0 <stderr>
    11c0:	ldr	x8, [x8]
    11c4:	adrp	x9, 0 <llvm_gcda_start_file>
    11c8:	ldr	x2, [x9]
    11cc:	adrp	x1, 0 <llvm_gcda_start_file>
    11d0:	ldr	x0, [x8]
    11d4:	add	x1, x1, #0x0
    11d8:	ldp	x20, x19, [sp, #64]
    11dc:	ldp	x22, x21, [sp, #48]
    11e0:	ldp	x24, x23, [sp, #32]
    11e4:	ldp	x26, x25, [sp, #16]
    11e8:	ldp	x29, x30, [sp], #80
    11ec:	b	0 <fprintf>

00000000000011f0 <llvm_gcda_end_file>:
    11f0:	stp	x29, x30, [sp, #-80]!
    11f4:	str	x25, [sp, #16]
    11f8:	stp	x24, x23, [sp, #32]
    11fc:	stp	x22, x21, [sp, #48]
    1200:	stp	x20, x19, [sp, #64]
    1204:	mov	x29, sp
    1208:	adrp	x22, 0 <llvm_gcda_start_file>
    120c:	ldr	x8, [x22]
    1210:	adrp	x21, 0 <llvm_gcda_start_file>
    1214:	cbz	x8, 131c <llvm_gcda_end_file+0x12c>
    1218:	adrp	x24, 0 <llvm_gcda_start_file>
    121c:	ldrb	w8, [x24]
    1220:	adrp	x23, 0 <llvm_gcda_start_file>
    1224:	tbz	w8, #0, 1288 <llvm_gcda_end_file+0x98>
    1228:	adrp	x20, 0 <llvm_gcda_start_file>
    122c:	ldr	x8, [x20]
    1230:	adrp	x25, 0 <llvm_gcda_start_file>
    1234:	ldr	x9, [x25]
    1238:	add	x10, x8, #0x8
    123c:	cmp	x10, x9
    1240:	b.ls	12d0 <llvm_gcda_end_file+0xe0>  // b.plast
    1244:	mov	w9, #0x7                   	// #7
    1248:	ldr	x0, [x23]
    124c:	movk	w9, #0x2, lsl #16
    1250:	add	x8, x8, x9
    1254:	and	x19, x8, #0xfffffffffffe0000
    1258:	mov	x1, x19
    125c:	bl	0 <realloc>
    1260:	ldr	x8, [x20]
    1264:	ldrb	w9, [x24]
    1268:	str	x0, [x23]
    126c:	str	x19, [x25]
    1270:	add	x1, x8, #0x8
    1274:	cmp	w9, #0x1
    1278:	str	xzr, [x0, x8]
    127c:	str	x1, [x20]
    1280:	b.ne	12a0 <llvm_gcda_end_file+0xb0>  // b.any
    1284:	b	12e4 <llvm_gcda_end_file+0xf4>
    1288:	adrp	x8, 0 <llvm_gcda_start_file>
    128c:	ldr	x0, [x23]
    1290:	ldr	x9, [x8]
    1294:	str	xzr, [x0, x9]
    1298:	add	x9, x9, #0x8
    129c:	str	x9, [x8]
    12a0:	adrp	x24, 0 <llvm_gcda_start_file>
    12a4:	ldr	x1, [x24]
    12a8:	mov	w2, #0x4                   	// #4
    12ac:	bl	0 <msync>
    12b0:	cmn	w0, #0x1
    12b4:	b.eq	1338 <llvm_gcda_end_file+0x148>  // b.none
    12b8:	ldr	x0, [x23]
    12bc:	ldr	x1, [x24]
    12c0:	bl	0 <munmap>
    12c4:	str	xzr, [x23]
    12c8:	str	xzr, [x24]
    12cc:	b	12f8 <llvm_gcda_end_file+0x108>
    12d0:	ldr	x8, [x20]
    12d4:	ldr	x0, [x23]
    12d8:	add	x1, x8, #0x8
    12dc:	str	xzr, [x0, x8]
    12e0:	str	x1, [x20]
    12e4:	ldr	x3, [x22]
    12e8:	mov	w2, #0x1                   	// #1
    12ec:	bl	0 <fwrite>
    12f0:	ldr	x0, [x23]
    12f4:	bl	0 <free>
    12f8:	ldr	x0, [x22]
    12fc:	bl	0 <fflush>
    1300:	adrp	x8, 0 <llvm_gcda_start_file>
    1304:	ldr	w0, [x8]
    1308:	bl	0 <lprofUnlockFd>
    130c:	ldr	x0, [x22]
    1310:	bl	0 <fclose>
    1314:	str	xzr, [x22]
    1318:	str	xzr, [x23]
    131c:	ldr	x0, [x21]
    1320:	ldp	x20, x19, [sp, #64]
    1324:	ldp	x22, x21, [sp, #48]
    1328:	ldp	x24, x23, [sp, #32]
    132c:	ldr	x25, [sp, #16]
    1330:	ldp	x29, x30, [sp], #80
    1334:	b	0 <free>
    1338:	bl	0 <__errno_location>
    133c:	adrp	x8, 0 <stderr>
    1340:	ldr	w0, [x0]
    1344:	ldr	x8, [x8]
    1348:	ldr	x20, [x21]
    134c:	ldr	x19, [x8]
    1350:	bl	0 <strerror>
    1354:	adrp	x1, 0 <llvm_gcda_start_file>
    1358:	mov	x3, x0
    135c:	add	x1, x1, #0x0
    1360:	mov	x0, x19
    1364:	mov	x2, x20
    1368:	bl	0 <fprintf>
    136c:	b	12b8 <llvm_gcda_end_file+0xc8>

0000000000001370 <llvm_register_writeout_function>:
    1370:	stp	x29, x30, [sp, #-32]!
    1374:	str	x19, [sp, #16]
    1378:	mov	x29, sp
    137c:	mov	x19, x0
    1380:	mov	w0, #0x18                  	// #24
    1384:	bl	0 <malloc>
    1388:	str	xzr, [x0, #16]
    138c:	adrp	x9, 10 <llvm_gcda_start_file+0x10>
    1390:	ldr	x9, [x9]
    1394:	adrp	x8, 0 <llvm_gcda_start_file>
    1398:	add	x8, x8, #0x0
    139c:	stp	x8, x19, [x0]
    13a0:	mov	x8, x9
    13a4:	ldr	x10, [x9]
    13a8:	ldr	x11, [x8, #8]!
    13ac:	ldr	x19, [sp, #16]
    13b0:	cmp	x10, #0x0
    13b4:	add	x11, x11, #0x10
    13b8:	cset	w10, ne  // ne = any
    13bc:	csel	x8, x8, x11, eq  // eq = none
    13c0:	str	x0, [x8]
    13c4:	str	x0, [x9, w10, uxtw #3]
    13c8:	ldp	x29, x30, [sp], #32
    13cc:	ret

00000000000013d0 <llvm_writeout_files>:
    13d0:	stp	x29, x30, [sp, #-32]!
    13d4:	stp	x20, x19, [sp, #16]
    13d8:	mov	x29, sp
    13dc:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    13e0:	ldr	x8, [x8]
    13e4:	ldr	x19, [x8]
    13e8:	cbz	x19, 1418 <llvm_writeout_files+0x48>
    13ec:	adrp	x20, 0 <llvm_gcda_start_file>
    13f0:	add	x20, x20, #0x0
    13f4:	b	1400 <llvm_writeout_files+0x30>
    13f8:	ldr	x19, [x19, #16]
    13fc:	cbz	x19, 1418 <llvm_writeout_files+0x48>
    1400:	ldr	x8, [x19]
    1404:	cmp	x8, x20
    1408:	b.ne	13f8 <llvm_writeout_files+0x28>  // b.any
    140c:	ldr	x8, [x19, #8]
    1410:	blr	x8
    1414:	b	13f8 <llvm_writeout_files+0x28>
    1418:	ldp	x20, x19, [sp, #16]
    141c:	ldp	x29, x30, [sp], #32
    1420:	ret

0000000000001424 <llvm_delete_writeout_function_list>:
    1424:	stp	x29, x30, [sp, #-48]!
    1428:	stp	x22, x21, [sp, #16]
    142c:	stp	x20, x19, [sp, #32]
    1430:	mov	x29, sp
    1434:	adrp	x19, 10 <llvm_gcda_start_file+0x10>
    1438:	ldr	x19, [x19]
    143c:	ldr	x0, [x19]
    1440:	cbz	x0, 14b0 <llvm_delete_writeout_function_list+0x8c>
    1444:	adrp	x21, 0 <llvm_gcda_start_file>
    1448:	mov	x20, xzr
    144c:	add	x21, x21, #0x0
    1450:	b	1460 <llvm_delete_writeout_function_list+0x3c>
    1454:	mov	x20, x0
    1458:	mov	x0, x22
    145c:	cbz	x22, 14b0 <llvm_delete_writeout_function_list+0x8c>
    1460:	ldr	x8, [x0]
    1464:	ldr	x22, [x0, #16]
    1468:	cmp	x8, x21
    146c:	b.ne	1454 <llvm_delete_writeout_function_list+0x30>  // b.any
    1470:	ldr	x8, [x19]
    1474:	cmp	x0, x8
    1478:	b.ne	1480 <llvm_delete_writeout_function_list+0x5c>  // b.any
    147c:	str	x22, [x19]
    1480:	ldr	x8, [x19, #8]
    1484:	cmp	x0, x8
    1488:	b.eq	14a4 <llvm_delete_writeout_function_list+0x80>  // b.none
    148c:	cbz	x20, 1494 <llvm_delete_writeout_function_list+0x70>
    1490:	str	x22, [x20, #16]
    1494:	bl	0 <free>
    1498:	mov	x0, x22
    149c:	cbnz	x22, 1460 <llvm_delete_writeout_function_list+0x3c>
    14a0:	b	14b0 <llvm_delete_writeout_function_list+0x8c>
    14a4:	str	x20, [x19, #8]
    14a8:	cbnz	x20, 1490 <llvm_delete_writeout_function_list+0x6c>
    14ac:	b	1494 <llvm_delete_writeout_function_list+0x70>
    14b0:	ldp	x20, x19, [sp, #32]
    14b4:	ldp	x22, x21, [sp, #16]
    14b8:	ldp	x29, x30, [sp], #48
    14bc:	ret

00000000000014c0 <llvm_register_flush_function>:
    14c0:	stp	x29, x30, [sp, #-32]!
    14c4:	str	x19, [sp, #16]
    14c8:	mov	x29, sp
    14cc:	mov	x19, x0
    14d0:	mov	w0, #0x18                  	// #24
    14d4:	bl	0 <malloc>
    14d8:	str	xzr, [x0, #16]
    14dc:	adrp	x9, 10 <llvm_gcda_start_file+0x10>
    14e0:	ldr	x9, [x9]
    14e4:	adrp	x8, 0 <llvm_gcda_start_file>
    14e8:	add	x8, x8, #0x0
    14ec:	stp	x8, x19, [x0]
    14f0:	mov	x8, x9
    14f4:	ldr	x10, [x9]
    14f8:	ldr	x11, [x8, #8]!
    14fc:	ldr	x19, [sp, #16]
    1500:	cmp	x10, #0x0
    1504:	add	x11, x11, #0x10
    1508:	cset	w10, ne  // ne = any
    150c:	csel	x8, x8, x11, eq  // eq = none
    1510:	str	x0, [x8]
    1514:	str	x0, [x9, w10, uxtw #3]
    1518:	ldp	x29, x30, [sp], #32
    151c:	ret

0000000000001520 <__gcov_flush>:
    1520:	stp	x29, x30, [sp, #-32]!
    1524:	str	x19, [sp, #16]
    1528:	mov	x29, sp
    152c:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    1530:	ldr	x8, [x8]
    1534:	ldr	x19, [x8]
    1538:	cbz	x19, 154c <__gcov_flush+0x2c>
    153c:	ldr	x8, [x19, #8]
    1540:	blr	x8
    1544:	ldr	x19, [x19, #16]
    1548:	cbnz	x19, 153c <__gcov_flush+0x1c>
    154c:	ldr	x19, [sp, #16]
    1550:	ldp	x29, x30, [sp], #32
    1554:	ret

0000000000001558 <llvm_delete_flush_function_list>:
    1558:	stp	x29, x30, [sp, #-48]!
    155c:	stp	x22, x21, [sp, #16]
    1560:	stp	x20, x19, [sp, #32]
    1564:	mov	x29, sp
    1568:	adrp	x19, 10 <llvm_gcda_start_file+0x10>
    156c:	ldr	x19, [x19]
    1570:	ldr	x0, [x19]
    1574:	cbz	x0, 15e4 <llvm_delete_flush_function_list+0x8c>
    1578:	adrp	x21, 0 <llvm_gcda_start_file>
    157c:	mov	x20, xzr
    1580:	add	x21, x21, #0x0
    1584:	b	1594 <llvm_delete_flush_function_list+0x3c>
    1588:	mov	x20, x0
    158c:	mov	x0, x22
    1590:	cbz	x22, 15e4 <llvm_delete_flush_function_list+0x8c>
    1594:	ldr	x8, [x0]
    1598:	ldr	x22, [x0, #16]
    159c:	cmp	x8, x21
    15a0:	b.ne	1588 <llvm_delete_flush_function_list+0x30>  // b.any
    15a4:	ldr	x8, [x19]
    15a8:	cmp	x0, x8
    15ac:	b.ne	15b4 <llvm_delete_flush_function_list+0x5c>  // b.any
    15b0:	str	x22, [x19]
    15b4:	ldr	x8, [x19, #8]
    15b8:	cmp	x0, x8
    15bc:	b.eq	15d8 <llvm_delete_flush_function_list+0x80>  // b.none
    15c0:	cbz	x20, 15c8 <llvm_delete_flush_function_list+0x70>
    15c4:	str	x22, [x20, #16]
    15c8:	bl	0 <free>
    15cc:	mov	x0, x22
    15d0:	cbnz	x22, 1594 <llvm_delete_flush_function_list+0x3c>
    15d4:	b	15e4 <llvm_delete_flush_function_list+0x8c>
    15d8:	str	x20, [x19, #8]
    15dc:	cbnz	x20, 15c4 <llvm_delete_flush_function_list+0x6c>
    15e0:	b	15c8 <llvm_delete_flush_function_list+0x70>
    15e4:	ldp	x20, x19, [sp, #32]
    15e8:	ldp	x22, x21, [sp, #16]
    15ec:	ldp	x29, x30, [sp], #48
    15f0:	ret

00000000000015f4 <llvm_gcov_init>:
    15f4:	stp	x29, x30, [sp, #-48]!
    15f8:	str	x21, [sp, #16]
    15fc:	stp	x20, x19, [sp, #32]
    1600:	mov	x29, sp
    1604:	adrp	x21, 0 <llvm_gcda_start_file>
    1608:	mov	x19, x1
    160c:	add	x21, x21, #0x0
    1610:	cbz	x0, 1654 <llvm_gcov_init+0x60>
    1614:	mov	x20, x0
    1618:	mov	w0, #0x18                  	// #24
    161c:	bl	0 <malloc>
    1620:	str	xzr, [x0, #16]
    1624:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    1628:	ldr	x8, [x8]
    162c:	stp	x21, x20, [x0]
    1630:	mov	x10, x8
    1634:	ldr	x9, [x8]
    1638:	ldr	x11, [x10, #8]!
    163c:	cmp	x9, #0x0
    1640:	add	x11, x11, #0x10
    1644:	cset	w9, ne  // ne = any
    1648:	csel	x10, x10, x11, eq  // eq = none
    164c:	str	x0, [x10]
    1650:	str	x0, [x8, w9, uxtw #3]
    1654:	cbz	x19, 1694 <llvm_gcov_init+0xa0>
    1658:	mov	w0, #0x18                  	// #24
    165c:	bl	0 <malloc>
    1660:	str	xzr, [x0, #16]
    1664:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    1668:	ldr	x8, [x8]
    166c:	stp	x21, x19, [x0]
    1670:	mov	x10, x8
    1674:	ldr	x9, [x8]
    1678:	ldr	x11, [x10, #8]!
    167c:	cmp	x9, #0x0
    1680:	add	x11, x11, #0x10
    1684:	cset	w9, ne  // ne = any
    1688:	csel	x10, x10, x11, eq  // eq = none
    168c:	str	x0, [x10]
    1690:	str	x0, [x8, w9, uxtw #3]
    1694:	adrp	x8, 0 <llvm_gcda_start_file>
    1698:	ldrb	w9, [x8]
    169c:	tbz	w9, #0, 16b0 <llvm_gcov_init+0xbc>
    16a0:	ldp	x20, x19, [sp, #32]
    16a4:	ldr	x21, [sp, #16]
    16a8:	ldp	x29, x30, [sp], #48
    16ac:	ret
    16b0:	adrp	x0, 1558 <llvm_delete_flush_function_list>
    16b4:	mov	w9, #0x1                   	// #1
    16b8:	add	x0, x0, #0x0
    16bc:	strb	w9, [x8]
    16c0:	bl	0 <atexit>
    16c4:	adrp	x0, 1424 <llvm_delete_writeout_function_list>
    16c8:	add	x0, x0, #0x0
    16cc:	bl	0 <atexit>
    16d0:	ldp	x20, x19, [sp, #32]
    16d4:	ldr	x21, [sp, #16]
    16d8:	adrp	x0, 13d0 <llvm_writeout_files>
    16dc:	add	x0, x0, #0x0
    16e0:	ldp	x29, x30, [sp], #48
    16e4:	b	0 <atexit>

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret

0000000000000014 <lprofProfileDumped>:
  14:	adrp	x8, 0 <__llvm_profile_get_magic>
  18:	ldrb	w0, [x8]
  1c:	ret

0000000000000020 <lprofSetProfileDumped>:
  20:	adrp	x8, 0 <__llvm_profile_get_magic>
  24:	mov	w9, #0x1                   	// #1
  28:	strb	w9, [x8]
  2c:	ret

0000000000000030 <__llvm_profile_set_dumped>:
  30:	adrp	x8, 0 <__llvm_profile_get_magic>
  34:	mov	w9, #0x1                   	// #1
  38:	strb	w9, [x8]
  3c:	ret

0000000000000040 <__llvm_profile_get_num_padding_bytes>:
  40:	neg	w8, w0
  44:	and	w0, w8, #0x7
  48:	ret

000000000000004c <__llvm_profile_get_version>:
  4c:	adrp	x8, 0 <__llvm_profile_get_magic>
  50:	ldr	x8, [x8]
  54:	ldr	x0, [x8]
  58:	ret

000000000000005c <__llvm_profile_reset_counters>:
  5c:	stp	x29, x30, [sp, #-32]!
  60:	str	x19, [sp, #16]
  64:	mov	x29, sp
  68:	bl	0 <__llvm_profile_begin_counters>
  6c:	mov	x19, x0
  70:	bl	0 <__llvm_profile_end_counters>
  74:	sub	x2, x0, x19
  78:	mov	x0, x19
  7c:	mov	w1, wzr
  80:	bl	0 <memset>
  84:	bl	0 <__llvm_profile_begin_data>
  88:	mov	x19, x0
  8c:	bl	0 <__llvm_profile_end_data>
  90:	b	98 <__llvm_profile_reset_counters+0x3c>
  94:	add	x19, x19, #0x30
  98:	cmp	x19, x0
  9c:	b.cs	e4 <__llvm_profile_reset_counters+0x88>  // b.hs, b.nlast
  a0:	ldr	x8, [x19, #32]
  a4:	cbz	x8, 94 <__llvm_profile_reset_counters+0x38>
  a8:	ldrh	w9, [x19, #44]
  ac:	ldrh	w10, [x19, #46]
  b0:	adds	x9, x9, x10
  b4:	b.eq	94 <__llvm_profile_reset_counters+0x38>  // b.none
  b8:	mov	x10, xzr
  bc:	b	cc <__llvm_profile_reset_counters+0x70>
  c0:	add	w10, w10, #0x1
  c4:	cmp	x9, x10
  c8:	b.ls	94 <__llvm_profile_reset_counters+0x38>  // b.plast
  cc:	ldr	x11, [x8, x10, lsl #3]
  d0:	cbz	x11, c0 <__llvm_profile_reset_counters+0x64>
  d4:	str	xzr, [x11, #8]
  d8:	ldr	x11, [x11, #16]
  dc:	cbnz	x11, d4 <__llvm_profile_reset_counters+0x78>
  e0:	b	c0 <__llvm_profile_reset_counters+0x64>
  e4:	ldr	x19, [sp, #16]
  e8:	adrp	x8, 0 <__llvm_profile_get_magic>
  ec:	strb	wzr, [x8]
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
   0:	add	w8, w0, #0xf
   4:	and	w0, w8, #0xfffffff8
   8:	ret

000000000000000c <getValueProfRecordSize>:
   c:	add	w8, w0, #0xf
  10:	and	w8, w8, #0xfffffff8
  14:	add	w0, w8, w1, lsl #4
  18:	ret

000000000000001c <getValueProfRecordValueData>:
  1c:	ldr	w8, [x0, #4]
  20:	add	w8, w8, #0xf
  24:	and	w8, w8, #0xfffffff8
  28:	add	x0, x0, x8
  2c:	ret

0000000000000030 <getValueProfRecordNumValueData>:
  30:	ldr	w9, [x0, #4]
  34:	cbz	w9, 4c <getValueProfRecordNumValueData+0x1c>
  38:	cmp	w9, #0x1
  3c:	b.ne	54 <getValueProfRecordNumValueData+0x24>  // b.any
  40:	mov	x10, xzr
  44:	mov	w8, wzr
  48:	b	8c <getValueProfRecordNumValueData+0x5c>
  4c:	mov	w0, wzr
  50:	ret
  54:	and	x10, x9, #0xfffffffe
  58:	mov	w8, wzr
  5c:	mov	w11, wzr
  60:	add	x12, x0, #0x9
  64:	mov	x13, x10
  68:	ldurb	w14, [x12, #-1]
  6c:	ldrb	w15, [x12], #2
  70:	subs	x13, x13, #0x2
  74:	add	w8, w8, w14
  78:	add	w11, w11, w15
  7c:	b.ne	68 <getValueProfRecordNumValueData+0x38>  // b.any
  80:	cmp	x10, x9
  84:	add	w8, w11, w8
  88:	b.eq	a4 <getValueProfRecordNumValueData+0x74>  // b.none
  8c:	add	x11, x0, #0x8
  90:	ldrb	w12, [x11, x10]
  94:	add	x10, x10, #0x1
  98:	cmp	x10, x9
  9c:	add	w8, w8, w12
  a0:	b.cc	90 <getValueProfRecordNumValueData+0x60>  // b.lo, b.ul, b.last
  a4:	mov	w0, w8
  a8:	ret

00000000000000ac <getValueProfRecordNext>:
  ac:	ldr	w8, [x0, #4]
  b0:	cbz	w8, c8 <getValueProfRecordNext+0x1c>
  b4:	cmp	w8, #0x1
  b8:	b.ne	d0 <getValueProfRecordNext+0x24>  // b.any
  bc:	mov	x9, xzr
  c0:	mov	w10, wzr
  c4:	b	108 <getValueProfRecordNext+0x5c>
  c8:	mov	w9, wzr
  cc:	b	128 <getValueProfRecordNext+0x7c>
  d0:	and	x9, x8, #0xfffffffe
  d4:	mov	w10, wzr
  d8:	mov	w11, wzr
  dc:	add	x12, x0, #0x9
  e0:	mov	x13, x9
  e4:	ldurb	w14, [x12, #-1]
  e8:	ldrb	w15, [x12], #2
  ec:	subs	x13, x13, #0x2
  f0:	add	w10, w10, w14
  f4:	add	w11, w11, w15
  f8:	b.ne	e4 <getValueProfRecordNext+0x38>  // b.any
  fc:	cmp	x9, x8
 100:	add	w10, w11, w10
 104:	b.eq	124 <getValueProfRecordNext+0x78>  // b.none
 108:	sub	x11, x8, x9
 10c:	add	x9, x9, x0
 110:	add	x9, x9, #0x8
 114:	ldrb	w12, [x9], #1
 118:	subs	x11, x11, #0x1
 11c:	add	w10, w10, w12
 120:	b.ne	114 <getValueProfRecordNext+0x68>  // b.any
 124:	lsl	w9, w10, #4
 128:	add	w8, w8, #0xf
 12c:	and	w8, w8, #0xfffffff8
 130:	add	w8, w9, w8
 134:	add	x0, x0, x8
 138:	ret

000000000000013c <getFirstValueProfRecord>:
 13c:	add	x0, x0, #0x8
 140:	ret

0000000000000144 <getValueProfDataSize>:
 144:	stp	x29, x30, [sp, #-48]!
 148:	stp	x22, x21, [sp, #16]
 14c:	stp	x20, x19, [sp, #32]
 150:	mov	x29, sp
 154:	ldr	x19, [x0]
 158:	ldr	x8, [x0, #16]
 15c:	mov	x20, x0
 160:	mov	w1, wzr
 164:	mov	x0, x19
 168:	blr	x8
 16c:	cbz	w0, 194 <getValueProfDataSize+0x50>
 170:	ldr	x8, [x20, #24]
 174:	mov	w21, w0
 178:	mov	x0, x19
 17c:	mov	w1, wzr
 180:	blr	x8
 184:	add	w8, w21, #0x17
 188:	and	w8, w8, #0xfffffff8
 18c:	add	w21, w8, w0, lsl #4
 190:	b	198 <getValueProfDataSize+0x54>
 194:	mov	w21, #0x8                   	// #8
 198:	ldr	x8, [x20, #16]
 19c:	mov	w1, #0x1                   	// #1
 1a0:	mov	x0, x19
 1a4:	blr	x8
 1a8:	cbz	w0, 1d0 <getValueProfDataSize+0x8c>
 1ac:	ldr	x8, [x20, #24]
 1b0:	mov	w22, w0
 1b4:	mov	w1, #0x1                   	// #1
 1b8:	mov	x0, x19
 1bc:	blr	x8
 1c0:	add	w8, w22, #0xf
 1c4:	and	w8, w8, #0xfffffff8
 1c8:	add	w8, w8, w21
 1cc:	add	w21, w8, w0, lsl #4
 1d0:	mov	w0, w21
 1d4:	ldp	x20, x19, [sp, #32]
 1d8:	ldp	x22, x21, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #48
 1e0:	ret

00000000000001e4 <serializeValueProfRecordFrom>:
 1e4:	stp	x29, x30, [sp, #-80]!
 1e8:	stp	x26, x25, [sp, #16]
 1ec:	stp	x24, x23, [sp, #32]
 1f0:	stp	x22, x21, [sp, #48]
 1f4:	stp	x20, x19, [sp, #64]
 1f8:	mov	x29, sp
 1fc:	ldr	x21, [x1]
 200:	stp	w2, w3, [x0]
 204:	cbz	w3, 26c <serializeValueProfRecordFrom+0x88>
 208:	add	w8, w3, #0xf
 20c:	and	w8, w8, #0xfffffff8
 210:	mov	w19, w2
 214:	mov	x20, x1
 218:	mov	x22, xzr
 21c:	mov	w25, w3
 220:	add	x23, x0, x8
 224:	add	x26, x0, #0x8
 228:	ldr	x8, [x20, #32]
 22c:	mov	x0, x21
 230:	mov	w1, w19
 234:	mov	w2, w22
 238:	blr	x8
 23c:	strb	w0, [x26, x22]
 240:	ldr	x8, [x20, #48]
 244:	mov	w24, w0
 248:	mov	x0, x21
 24c:	mov	x1, x23
 250:	mov	w2, w19
 254:	mov	w3, w22
 258:	blr	x8
 25c:	add	x22, x22, #0x1
 260:	cmp	x25, x22
 264:	add	x23, x23, w24, uxtw #4
 268:	b.ne	228 <serializeValueProfRecordFrom+0x44>  // b.any
 26c:	ldp	x20, x19, [sp, #64]
 270:	ldp	x22, x21, [sp, #48]
 274:	ldp	x24, x23, [sp, #32]
 278:	ldp	x26, x25, [sp, #16]
 27c:	ldp	x29, x30, [sp], #80
 280:	ret

0000000000000284 <serializeValueProfDataFrom>:
 284:	stp	x29, x30, [sp, #-96]!
 288:	str	x27, [sp, #16]
 28c:	stp	x26, x25, [sp, #32]
 290:	stp	x24, x23, [sp, #48]
 294:	stp	x22, x21, [sp, #64]
 298:	stp	x20, x19, [sp, #80]
 29c:	mov	x29, sp
 2a0:	mov	x19, x0
 2a4:	cbz	x1, 2b4 <serializeValueProfDataFrom+0x30>
 2a8:	ldr	w22, [x1]
 2ac:	mov	x20, x1
 2b0:	b	338 <serializeValueProfDataFrom+0xb4>
 2b4:	ldr	x20, [x19]
 2b8:	ldr	x8, [x19, #16]
 2bc:	mov	x0, x20
 2c0:	blr	x8
 2c4:	cbz	w0, 2ec <serializeValueProfDataFrom+0x68>
 2c8:	ldr	x8, [x19, #24]
 2cc:	mov	w21, w0
 2d0:	mov	x0, x20
 2d4:	mov	w1, wzr
 2d8:	blr	x8
 2dc:	add	w8, w21, #0x17
 2e0:	and	w8, w8, #0xfffffff8
 2e4:	add	w22, w8, w0, lsl #4
 2e8:	b	2f0 <serializeValueProfDataFrom+0x6c>
 2ec:	mov	w22, #0x8                   	// #8
 2f0:	ldr	x8, [x19, #16]
 2f4:	mov	w1, #0x1                   	// #1
 2f8:	mov	x0, x20
 2fc:	blr	x8
 300:	cbz	w0, 328 <serializeValueProfDataFrom+0xa4>
 304:	ldr	x8, [x19, #24]
 308:	mov	w21, w0
 30c:	mov	w1, #0x1                   	// #1
 310:	mov	x0, x20
 314:	blr	x8
 318:	add	w8, w21, #0xf
 31c:	and	w8, w8, #0xfffffff8
 320:	add	w8, w8, w22
 324:	add	w22, w8, w0, lsl #4
 328:	ldr	x8, [x19, #56]
 32c:	mov	w0, w22
 330:	blr	x8
 334:	mov	x20, x0
 338:	str	w22, [x20]
 33c:	ldp	x0, x8, [x19]
 340:	blr	x8
 344:	str	w0, [x20, #4]
 348:	ldr	x8, [x19, #16]
 34c:	ldr	x0, [x19]
 350:	mov	w1, wzr
 354:	add	x25, x20, #0x8
 358:	blr	x8
 35c:	cbz	w0, 450 <serializeValueProfDataFrom+0x1cc>
 360:	ldr	x22, [x19]
 364:	add	w8, w0, #0xf
 368:	and	w8, w8, #0xfffffff8
 36c:	mov	x21, xzr
 370:	add	x23, x25, x8
 374:	mov	w26, w0
 378:	add	x27, x20, #0x10
 37c:	stp	wzr, w0, [x20, #8]
 380:	ldr	x8, [x19, #32]
 384:	mov	x0, x22
 388:	mov	w1, wzr
 38c:	mov	w2, w21
 390:	blr	x8
 394:	strb	w0, [x27, x21]
 398:	ldr	x8, [x19, #48]
 39c:	mov	w24, w0
 3a0:	mov	x0, x22
 3a4:	mov	x1, x23
 3a8:	mov	w2, wzr
 3ac:	mov	w3, w21
 3b0:	blr	x8
 3b4:	add	x21, x21, #0x1
 3b8:	cmp	x26, x21
 3bc:	add	x23, x23, w24, uxtw #4
 3c0:	b.ne	380 <serializeValueProfDataFrom+0xfc>  // b.any
 3c4:	ldr	w8, [x20, #12]
 3c8:	cbz	w8, 3e0 <serializeValueProfDataFrom+0x15c>
 3cc:	cmp	w8, #0x1
 3d0:	b.ne	3e8 <serializeValueProfDataFrom+0x164>  // b.any
 3d4:	mov	x9, xzr
 3d8:	mov	w10, wzr
 3dc:	b	420 <serializeValueProfDataFrom+0x19c>
 3e0:	mov	w9, wzr
 3e4:	b	440 <serializeValueProfDataFrom+0x1bc>
 3e8:	and	x9, x8, #0xfffffffe
 3ec:	mov	w10, wzr
 3f0:	mov	w11, wzr
 3f4:	add	x12, x20, #0x11
 3f8:	mov	x13, x9
 3fc:	ldurb	w14, [x12, #-1]
 400:	ldrb	w15, [x12], #2
 404:	subs	x13, x13, #0x2
 408:	add	w10, w10, w14
 40c:	add	w11, w11, w15
 410:	b.ne	3fc <serializeValueProfDataFrom+0x178>  // b.any
 414:	cmp	x9, x8
 418:	add	w10, w11, w10
 41c:	b.eq	43c <serializeValueProfDataFrom+0x1b8>  // b.none
 420:	sub	x11, x8, x9
 424:	add	x9, x20, x9
 428:	add	x9, x9, #0x10
 42c:	ldrb	w12, [x9], #1
 430:	subs	x11, x11, #0x1
 434:	add	w10, w10, w12
 438:	b.ne	42c <serializeValueProfDataFrom+0x1a8>  // b.any
 43c:	lsl	w9, w10, #4
 440:	add	w8, w8, #0xf
 444:	and	w8, w8, #0xfffffff8
 448:	add	w8, w9, w8
 44c:	add	x25, x25, x8
 450:	ldr	x8, [x19, #16]
 454:	ldr	x0, [x19]
 458:	mov	w1, #0x1                   	// #1
 45c:	mov	w23, #0x1                   	// #1
 460:	blr	x8
 464:	cbz	w0, 508 <serializeValueProfDataFrom+0x284>
 468:	ldr	x22, [x19]
 46c:	add	w8, w0, #0xf
 470:	and	w8, w8, #0xfffffff8
 474:	mov	x21, xzr
 478:	stp	w23, w0, [x25]
 47c:	add	x23, x25, x8
 480:	mov	w26, w0
 484:	add	x27, x25, #0x8
 488:	ldr	x8, [x19, #32]
 48c:	mov	w1, #0x1                   	// #1
 490:	mov	x0, x22
 494:	mov	w2, w21
 498:	blr	x8
 49c:	strb	w0, [x27, x21]
 4a0:	ldr	x8, [x19, #48]
 4a4:	mov	w24, w0
 4a8:	mov	w2, #0x1                   	// #1
 4ac:	mov	x0, x22
 4b0:	mov	x1, x23
 4b4:	mov	w3, w21
 4b8:	blr	x8
 4bc:	add	x21, x21, #0x1
 4c0:	cmp	x26, x21
 4c4:	add	x23, x23, w24, uxtw #4
 4c8:	b.ne	488 <serializeValueProfDataFrom+0x204>  // b.any
 4cc:	ldr	w8, [x25, #4]
 4d0:	cbz	w8, 508 <serializeValueProfDataFrom+0x284>
 4d4:	cmp	w8, #0x1
 4d8:	b.ne	4e4 <serializeValueProfDataFrom+0x260>  // b.any
 4dc:	mov	x9, xzr
 4e0:	b	4fc <serializeValueProfDataFrom+0x278>
 4e4:	and	x9, x8, #0xfffffffe
 4e8:	mov	x10, x9
 4ec:	subs	x10, x10, #0x2
 4f0:	b.ne	4ec <serializeValueProfDataFrom+0x268>  // b.any
 4f4:	cmp	x9, x8
 4f8:	b.eq	508 <serializeValueProfDataFrom+0x284>  // b.none
 4fc:	sub	x8, x8, x9
 500:	subs	x8, x8, #0x1
 504:	b.ne	500 <serializeValueProfDataFrom+0x27c>  // b.any
 508:	mov	x0, x20
 50c:	ldp	x20, x19, [sp, #80]
 510:	ldp	x22, x21, [sp, #64]
 514:	ldp	x24, x23, [sp, #48]
 518:	ldp	x26, x25, [sp, #32]
 51c:	ldr	x27, [sp, #16]
 520:	ldp	x29, x30, [sp], #96
 524:	ret

0000000000000528 <lprofSetupValueProfiler>:
 528:	stp	x29, x30, [sp, #-16]!
 52c:	mov	x29, sp
 530:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 534:	add	x0, x0, #0x0
 538:	bl	0 <getenv>
 53c:	cbz	x0, 574 <lprofSetupValueProfiler+0x4c>
 540:	ldrb	w8, [x0]
 544:	cbz	w8, 574 <lprofSetupValueProfiler+0x4c>
 548:	mov	w2, #0xa                   	// #10
 54c:	mov	x1, xzr
 550:	bl	0 <strtol>
 554:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 558:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 55c:	mov	w10, #0x1                   	// #1
 560:	str	w0, [x8]
 564:	strb	w10, [x9]
 568:	cmp	w0, #0x100
 56c:	b.cs	584 <lprofSetupValueProfiler+0x5c>  // b.hs, b.nlast
 570:	b	590 <lprofSetupValueProfiler+0x68>
 574:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 578:	ldr	w0, [x8]
 57c:	cmp	w0, #0x100
 580:	b.cc	590 <lprofSetupValueProfiler+0x68>  // b.lo, b.ul, b.last
 584:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 588:	mov	w9, #0xff                  	// #255
 58c:	str	w9, [x8]
 590:	ldp	x29, x30, [sp], #16
 594:	ret

0000000000000598 <lprofSetMaxValsPerSite>:
 598:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 59c:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 5a0:	mov	w10, #0x1                   	// #1
 5a4:	str	w0, [x8]
 5a8:	strb	w10, [x9]
 5ac:	ret

00000000000005b0 <__llvm_profile_set_num_value_sites>:
 5b0:	add	x8, x0, w1, uxtw #1
 5b4:	strh	w2, [x8, #44]
 5b8:	ret

00000000000005bc <__llvm_profile_iterate_data>:
 5bc:	add	x0, x0, #0x30
 5c0:	ret

00000000000005c4 <__llvm_get_function_addr>:
 5c4:	ldr	x0, [x0, #24]
 5c8:	ret

00000000000005cc <__llvm_profile_instrument_target>:
 5cc:	stp	x29, x30, [sp, #-48]!
 5d0:	stp	x22, x21, [sp, #16]
 5d4:	stp	x20, x19, [sp, #32]
 5d8:	mov	x29, sp
 5dc:	cbz	x1, 7f4 <__llvm_profile_instrument_target+0x228>
 5e0:	mov	x21, x1
 5e4:	ldr	x8, [x21, #32]!
 5e8:	mov	w20, w2
 5ec:	mov	x19, x0
 5f0:	cbz	x8, 640 <__llvm_profile_instrument_target+0x74>
 5f4:	add	x20, x8, w20, uxtw #3
 5f8:	ldr	x11, [x20]
 5fc:	cbz	x11, 694 <__llvm_profile_instrument_target+0xc8>
 600:	mov	w9, wzr
 604:	mov	x8, xzr
 608:	mov	x10, #0xffffffffffffffff    	// #-1
 60c:	mov	x22, x11
 610:	ldr	x11, [x11]
 614:	ldr	x12, [x22, #8]
 618:	cmp	x11, x19
 61c:	b.eq	750 <__llvm_profile_instrument_target+0x184>  // b.none
 620:	ldr	x11, [x22, #16]
 624:	cmp	x12, x10
 628:	csel	x8, x22, x8, cc  // cc = lo, ul, last
 62c:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 630:	add	w9, w9, #0x1
 634:	cbnz	x11, 60c <__llvm_profile_instrument_target+0x40>
 638:	and	w9, w9, #0xff
 63c:	b	6a0 <__llvm_profile_instrument_target+0xd4>
 640:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 644:	ldrb	w8, [x8]
 648:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 64c:	mov	w10, #0x1                   	// #1
 650:	strb	w10, [x9]
 654:	tbnz	w8, #0, 664 <__llvm_profile_instrument_target+0x98>
 658:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 65c:	mov	w9, #0xff                  	// #255
 660:	str	w9, [x8]
 664:	ldrh	w8, [x1, #44]
 668:	ldrh	w9, [x1, #46]
 66c:	mov	w1, #0x8                   	// #8
 670:	add	x0, x9, x8
 674:	bl	0 <calloc>
 678:	cbz	x0, 7f4 <__llvm_profile_instrument_target+0x228>
 67c:	ldaxr	x8, [x21]
 680:	cbnz	x8, 7bc <__llvm_profile_instrument_target+0x1f0>
 684:	stlxr	w8, x0, [x21]
 688:	cbnz	w8, 67c <__llvm_profile_instrument_target+0xb0>
 68c:	ldr	x8, [x21]
 690:	b	5f4 <__llvm_profile_instrument_target+0x28>
 694:	mov	x22, xzr
 698:	mov	x8, xzr
 69c:	mov	w9, wzr
 6a0:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 6a4:	ldr	w10, [x10]
 6a8:	cmp	w10, w9
 6ac:	b.ls	734 <__llvm_profile_instrument_target+0x168>  // b.plast
 6b0:	adrp	x21, 0 <getValueProfRecordHeaderSize>
 6b4:	ldrb	w8, [x21]
 6b8:	cmp	w8, #0x1
 6bc:	b.ne	75c <__llvm_profile_instrument_target+0x190>  // b.any
 6c0:	mov	w0, #0x1                   	// #1
 6c4:	mov	w1, #0x18                  	// #24
 6c8:	bl	0 <calloc>
 6cc:	cbz	x0, 7f4 <__llvm_profile_instrument_target+0x228>
 6d0:	ldr	x8, [x0, #8]
 6d4:	add	x8, x8, #0x1
 6d8:	stp	x19, x8, [x0]
 6dc:	ldr	x8, [x20]
 6e0:	cbz	x8, 714 <__llvm_profile_instrument_target+0x148>
 6e4:	cbz	x22, 720 <__llvm_profile_instrument_target+0x154>
 6e8:	ldr	x8, [x22, #16]!
 6ec:	cbnz	x8, 720 <__llvm_profile_instrument_target+0x154>
 6f0:	ldaxr	x8, [x22]
 6f4:	cbnz	x8, 71c <__llvm_profile_instrument_target+0x150>
 6f8:	stlxr	w8, x0, [x22]
 6fc:	cbnz	w8, 6f0 <__llvm_profile_instrument_target+0x124>
 700:	mov	w8, #0x1                   	// #1
 704:	tbz	w8, #0, 728 <__llvm_profile_instrument_target+0x15c>
 708:	b	7f4 <__llvm_profile_instrument_target+0x228>
 70c:	stlxr	w8, x0, [x20]
 710:	cbz	w8, 700 <__llvm_profile_instrument_target+0x134>
 714:	ldaxr	x8, [x20]
 718:	cbz	x8, 70c <__llvm_profile_instrument_target+0x140>
 71c:	clrex
 720:	mov	w8, wzr
 724:	tbnz	w8, #0, 7f4 <__llvm_profile_instrument_target+0x228>
 728:	ldrb	w8, [x21]
 72c:	cbnz	w8, 7c0 <__llvm_profile_instrument_target+0x1f4>
 730:	b	7f4 <__llvm_profile_instrument_target+0x228>
 734:	ldr	x9, [x8, #8]
 738:	subs	x9, x9, #0x1
 73c:	b.hi	748 <__llvm_profile_instrument_target+0x17c>  // b.pmore
 740:	mov	w9, #0x1                   	// #1
 744:	str	x19, [x8]
 748:	str	x9, [x8, #8]
 74c:	b	7f4 <__llvm_profile_instrument_target+0x228>
 750:	add	x8, x12, #0x1
 754:	str	x8, [x22, #8]
 758:	b	7f4 <__llvm_profile_instrument_target+0x228>
 75c:	adrp	x8, 0 <CurrentVNode>
 760:	ldr	x9, [x8]
 764:	adrp	x8, 0 <EndVNode>
 768:	ldr	x10, [x8]
 76c:	add	x9, x9, #0x18
 770:	cmp	x9, x10
 774:	b.ls	7d0 <__llvm_profile_instrument_target+0x204>  // b.plast
 778:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 77c:	ldr	w9, [x8]
 780:	add	w10, w9, #0x1
 784:	cmp	w9, #0x9
 788:	str	w10, [x8]
 78c:	b.gt	7f4 <__llvm_profile_instrument_target+0x228>
 790:	adrp	x8, 0 <stderr>
 794:	ldr	x8, [x8]
 798:	ldp	x20, x19, [sp, #32]
 79c:	ldp	x22, x21, [sp, #16]
 7a0:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 7a4:	ldr	x0, [x8]
 7a8:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 7ac:	add	x1, x1, #0x0
 7b0:	add	x2, x2, #0x0
 7b4:	ldp	x29, x30, [sp], #48
 7b8:	b	0 <fprintf>
 7bc:	clrex
 7c0:	ldp	x20, x19, [sp, #32]
 7c4:	ldp	x22, x21, [sp, #16]
 7c8:	ldp	x29, x30, [sp], #48
 7cc:	b	0 <free>
 7d0:	adrp	x9, 0 <CurrentVNode>
 7d4:	add	x9, x9, #0x0
 7d8:	ldaxr	x0, [x9]
 7dc:	add	x10, x0, #0x18
 7e0:	stlxr	w11, x10, [x9]
 7e4:	cbnz	w11, 7d8 <__llvm_profile_instrument_target+0x20c>
 7e8:	ldr	x8, [x8]
 7ec:	cmp	x10, x8
 7f0:	b.ls	6cc <__llvm_profile_instrument_target+0x100>  // b.plast
 7f4:	ldp	x20, x19, [sp, #32]
 7f8:	ldp	x22, x21, [sp, #16]
 7fc:	ldp	x29, x30, [sp], #48
 800:	ret

0000000000000804 <__llvm_profile_instrument_target_value>:
 804:	stp	x29, x30, [sp, #-64]!
 808:	str	x23, [sp, #16]
 80c:	stp	x22, x21, [sp, #32]
 810:	stp	x20, x19, [sp, #48]
 814:	mov	x29, sp
 818:	cbz	x1, a00 <__llvm_profile_instrument_target_value+0x1fc>
 81c:	mov	x19, x3
 820:	cbz	x3, a00 <__llvm_profile_instrument_target_value+0x1fc>
 824:	mov	x22, x1
 828:	ldr	x8, [x22, #32]!
 82c:	mov	w21, w2
 830:	mov	x20, x0
 834:	cbz	x8, 884 <__llvm_profile_instrument_target_value+0x80>
 838:	add	x21, x8, w21, uxtw #3
 83c:	ldr	x11, [x21]
 840:	cbz	x11, 8d8 <__llvm_profile_instrument_target_value+0xd4>
 844:	mov	w9, wzr
 848:	mov	x8, xzr
 84c:	mov	x10, #0xffffffffffffffff    	// #-1
 850:	mov	x23, x11
 854:	ldr	x11, [x11]
 858:	ldr	x12, [x23, #8]
 85c:	cmp	x11, x20
 860:	b.eq	98c <__llvm_profile_instrument_target_value+0x188>  // b.none
 864:	ldr	x11, [x23, #16]
 868:	cmp	x12, x10
 86c:	csel	x8, x23, x8, cc  // cc = lo, ul, last
 870:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 874:	add	w9, w9, #0x1
 878:	cbnz	x11, 850 <__llvm_profile_instrument_target_value+0x4c>
 87c:	and	w9, w9, #0xff
 880:	b	8e4 <__llvm_profile_instrument_target_value+0xe0>
 884:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 888:	ldrb	w8, [x8]
 88c:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 890:	mov	w10, #0x1                   	// #1
 894:	strb	w10, [x9]
 898:	tbnz	w8, #0, 8a8 <__llvm_profile_instrument_target_value+0xa4>
 89c:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 8a0:	mov	w9, #0xff                  	// #255
 8a4:	str	w9, [x8]
 8a8:	ldrh	w8, [x1, #44]
 8ac:	ldrh	w9, [x1, #46]
 8b0:	mov	w1, #0x8                   	// #8
 8b4:	add	x0, x9, x8
 8b8:	bl	0 <calloc>
 8bc:	cbz	x0, a00 <__llvm_profile_instrument_target_value+0x1fc>
 8c0:	ldaxr	x8, [x22]
 8c4:	cbnz	x8, a14 <__llvm_profile_instrument_target_value+0x210>
 8c8:	stlxr	w8, x0, [x22]
 8cc:	cbnz	w8, 8c0 <__llvm_profile_instrument_target_value+0xbc>
 8d0:	ldr	x8, [x22]
 8d4:	b	838 <__llvm_profile_instrument_target_value+0x34>
 8d8:	mov	x23, xzr
 8dc:	mov	x8, xzr
 8e0:	mov	w9, wzr
 8e4:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 8e8:	ldr	w10, [x10]
 8ec:	cmp	w10, w9
 8f0:	b.ls	978 <__llvm_profile_instrument_target_value+0x174>  // b.plast
 8f4:	adrp	x22, 0 <getValueProfRecordHeaderSize>
 8f8:	ldrb	w8, [x22]
 8fc:	cmp	w8, #0x1
 900:	b.ne	998 <__llvm_profile_instrument_target_value+0x194>  // b.any
 904:	mov	w0, #0x1                   	// #1
 908:	mov	w1, #0x18                  	// #24
 90c:	bl	0 <calloc>
 910:	cbz	x0, a00 <__llvm_profile_instrument_target_value+0x1fc>
 914:	ldr	x8, [x0, #8]
 918:	add	x8, x8, x19
 91c:	stp	x20, x8, [x0]
 920:	ldr	x8, [x21]
 924:	cbz	x8, 958 <__llvm_profile_instrument_target_value+0x154>
 928:	cbz	x23, 964 <__llvm_profile_instrument_target_value+0x160>
 92c:	ldr	x8, [x23, #16]!
 930:	cbnz	x8, 964 <__llvm_profile_instrument_target_value+0x160>
 934:	ldaxr	x8, [x23]
 938:	cbnz	x8, 960 <__llvm_profile_instrument_target_value+0x15c>
 93c:	stlxr	w8, x0, [x23]
 940:	cbnz	w8, 934 <__llvm_profile_instrument_target_value+0x130>
 944:	mov	w8, #0x1                   	// #1
 948:	tbz	w8, #0, 96c <__llvm_profile_instrument_target_value+0x168>
 94c:	b	a00 <__llvm_profile_instrument_target_value+0x1fc>
 950:	stlxr	w8, x0, [x21]
 954:	cbz	w8, 944 <__llvm_profile_instrument_target_value+0x140>
 958:	ldaxr	x8, [x21]
 95c:	cbz	x8, 950 <__llvm_profile_instrument_target_value+0x14c>
 960:	clrex
 964:	mov	w8, wzr
 968:	tbnz	w8, #0, a00 <__llvm_profile_instrument_target_value+0x1fc>
 96c:	ldrb	w8, [x22]
 970:	cbnz	w8, a18 <__llvm_profile_instrument_target_value+0x214>
 974:	b	a00 <__llvm_profile_instrument_target_value+0x1fc>
 978:	ldr	x9, [x8, #8]
 97c:	subs	x9, x9, x19
 980:	b.ls	9fc <__llvm_profile_instrument_target_value+0x1f8>  // b.plast
 984:	str	x9, [x8, #8]
 988:	b	a00 <__llvm_profile_instrument_target_value+0x1fc>
 98c:	add	x8, x12, x19
 990:	str	x8, [x23, #8]
 994:	b	a00 <__llvm_profile_instrument_target_value+0x1fc>
 998:	adrp	x8, 0 <CurrentVNode>
 99c:	ldr	x9, [x8]
 9a0:	adrp	x8, 0 <EndVNode>
 9a4:	ldr	x10, [x8]
 9a8:	add	x9, x9, #0x18
 9ac:	cmp	x9, x10
 9b0:	b.ls	a2c <__llvm_profile_instrument_target_value+0x228>  // b.plast
 9b4:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 9b8:	ldr	w9, [x8]
 9bc:	add	w10, w9, #0x1
 9c0:	cmp	w9, #0x9
 9c4:	str	w10, [x8]
 9c8:	b.gt	a00 <__llvm_profile_instrument_target_value+0x1fc>
 9cc:	adrp	x8, 0 <stderr>
 9d0:	ldr	x8, [x8]
 9d4:	ldp	x20, x19, [sp, #48]
 9d8:	ldp	x22, x21, [sp, #32]
 9dc:	ldr	x23, [sp, #16]
 9e0:	ldr	x0, [x8]
 9e4:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 9e8:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 9ec:	add	x1, x1, #0x0
 9f0:	add	x2, x2, #0x0
 9f4:	ldp	x29, x30, [sp], #64
 9f8:	b	0 <fprintf>
 9fc:	stp	x20, x19, [x8]
 a00:	ldp	x20, x19, [sp, #48]
 a04:	ldp	x22, x21, [sp, #32]
 a08:	ldr	x23, [sp, #16]
 a0c:	ldp	x29, x30, [sp], #64
 a10:	ret
 a14:	clrex
 a18:	ldp	x20, x19, [sp, #48]
 a1c:	ldp	x22, x21, [sp, #32]
 a20:	ldr	x23, [sp, #16]
 a24:	ldp	x29, x30, [sp], #64
 a28:	b	0 <free>
 a2c:	adrp	x9, 0 <CurrentVNode>
 a30:	add	x9, x9, #0x0
 a34:	ldaxr	x0, [x9]
 a38:	add	x10, x0, #0x18
 a3c:	stlxr	w11, x10, [x9]
 a40:	cbnz	w11, a34 <__llvm_profile_instrument_target_value+0x230>
 a44:	ldr	x8, [x8]
 a48:	cmp	x10, x8
 a4c:	b.ls	910 <__llvm_profile_instrument_target_value+0x10c>  // b.plast
 a50:	b	a00 <__llvm_profile_instrument_target_value+0x1fc>

0000000000000a54 <__llvm_profile_instrument_range>:
 a54:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
 a58:	cmp	x5, x8
 a5c:	b.eq	a70 <__llvm_profile_instrument_range+0x1c>  // b.none
 a60:	cmp	x0, x5
 a64:	b.lt	a70 <__llvm_profile_instrument_range+0x1c>  // b.tstop
 a68:	mov	x0, x5
 a6c:	b	5cc <__llvm_profile_instrument_target>
 a70:	cmp	x0, x4
 a74:	ccmp	x0, x3, #0x8, le
 a78:	csinc	x5, x0, x4, ge  // ge = tcont
 a7c:	mov	x0, x5
 a80:	b	5cc <__llvm_profile_instrument_target>

0000000000000a84 <lprofGetVPDataReader>:
 a84:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 a88:	add	x0, x0, #0x0
 a8c:	ret

0000000000000a90 <initializeValueProfRuntimeRecord>:
 a90:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 a94:	add	x8, x8, #0x0
 a98:	ldr	x9, [x0, #32]
 a9c:	str	x0, [x8]
 aa0:	str	x1, [x8, #24]
 aa4:	ldrh	w11, [x0, #44]
 aa8:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 aac:	cbz	x11, b8c <initializeValueProfRuntimeRecord+0xfc>
 ab0:	mov	x8, xzr
 ab4:	adrp	x12, 0 <getValueProfRecordHeaderSize>
 ab8:	str	x9, [x12]
 abc:	b	adc <initializeValueProfRuntimeRecord+0x4c>
 ac0:	mov	w13, wzr
 ac4:	ldr	x14, [x10]
 ac8:	ldr	x14, [x14]
 acc:	strb	w13, [x14, x8]
 ad0:	add	x8, x8, #0x1
 ad4:	cmp	x8, x11
 ad8:	b.eq	b0c <initializeValueProfRuntimeRecord+0x7c>  // b.none
 adc:	cbz	x9, ac0 <initializeValueProfRuntimeRecord+0x30>
 ae0:	ldr	x13, [x12]
 ae4:	ldr	x14, [x13, x8, lsl #3]
 ae8:	cbz	x14, ac0 <initializeValueProfRuntimeRecord+0x30>
 aec:	mov	w13, wzr
 af0:	ldr	x14, [x14, #16]
 af4:	add	w13, w13, #0x1
 af8:	cbnz	x14, af0 <initializeValueProfRuntimeRecord+0x60>
 afc:	cmp	w13, #0xfe
 b00:	b.ls	ac4 <initializeValueProfRuntimeRecord+0x34>  // b.plast
 b04:	mov	w13, #0xff                  	// #255
 b08:	b	ac4 <initializeValueProfRuntimeRecord+0x34>
 b0c:	mov	w8, #0x1                   	// #1
 b10:	ldrh	w12, [x0, #46]
 b14:	cbz	x12, b98 <initializeValueProfRuntimeRecord+0x108>
 b18:	add	x11, x9, x11, lsl #3
 b1c:	cmp	x9, #0x0
 b20:	mov	x13, xzr
 b24:	csel	x14, x11, xzr, ne  // ne = any
 b28:	adrp	x11, 0 <getValueProfRecordHeaderSize>
 b2c:	str	x14, [x11]
 b30:	b	b50 <initializeValueProfRuntimeRecord+0xc0>
 b34:	mov	w14, wzr
 b38:	ldr	x15, [x10]
 b3c:	ldr	x15, [x15, #8]
 b40:	strb	w14, [x15, x13]
 b44:	add	x13, x13, #0x1
 b48:	cmp	x13, x12
 b4c:	b.eq	b80 <initializeValueProfRuntimeRecord+0xf0>  // b.none
 b50:	cbz	x9, b34 <initializeValueProfRuntimeRecord+0xa4>
 b54:	ldr	x14, [x11]
 b58:	ldr	x15, [x14, x13, lsl #3]
 b5c:	cbz	x15, b34 <initializeValueProfRuntimeRecord+0xa4>
 b60:	mov	w14, wzr
 b64:	ldr	x15, [x15, #16]
 b68:	add	w14, w14, #0x1
 b6c:	cbnz	x15, b64 <initializeValueProfRuntimeRecord+0xd4>
 b70:	cmp	w14, #0xfe
 b74:	b.ls	b38 <initializeValueProfRuntimeRecord+0xa8>  // b.plast
 b78:	mov	w14, #0xff                  	// #255
 b7c:	b	b38 <initializeValueProfRuntimeRecord+0xa8>
 b80:	add	w8, w8, #0x1
 b84:	mov	w0, w8
 b88:	ret
 b8c:	mov	w8, wzr
 b90:	ldrh	w12, [x0, #46]
 b94:	cbnz	x12, b18 <initializeValueProfRuntimeRecord+0x88>
 b98:	mov	w0, w8
 b9c:	ret

0000000000000ba0 <getNumValueDataForSiteWrapper>:
 ba0:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 ba4:	ldr	x8, [x8]
 ba8:	ldr	x8, [x8, w0, uxtw #3]
 bac:	ldrb	w0, [x8, w1, uxtw]
 bb0:	ret

0000000000000bb4 <getValueProfDataSizeWrapper>:
 bb4:	stp	x29, x30, [sp, #-32]!
 bb8:	stp	x20, x19, [sp, #16]
 bbc:	mov	x29, sp
 bc0:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 bc4:	add	x0, x0, #0x0
 bc8:	mov	w1, wzr
 bcc:	bl	c88 <getNumValueSitesRT>
 bd0:	cbz	w0, bf8 <getValueProfDataSizeWrapper+0x44>
 bd4:	mov	w19, w0
 bd8:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 bdc:	add	x0, x0, #0x0
 be0:	mov	w1, wzr
 be4:	bl	c98 <getNumValueDataRT>
 be8:	add	w8, w19, #0x17
 bec:	and	w8, w8, #0xfffffff8
 bf0:	add	w19, w8, w0, lsl #4
 bf4:	b	bfc <getValueProfDataSizeWrapper+0x48>
 bf8:	mov	w19, #0x8                   	// #8
 bfc:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 c00:	add	x0, x0, #0x0
 c04:	mov	w1, #0x1                   	// #1
 c08:	bl	c88 <getNumValueSitesRT>
 c0c:	cbz	w0, c34 <getValueProfDataSizeWrapper+0x80>
 c10:	mov	w20, w0
 c14:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 c18:	add	x0, x0, #0x0
 c1c:	mov	w1, #0x1                   	// #1
 c20:	bl	c98 <getNumValueDataRT>
 c24:	add	w8, w20, #0xf
 c28:	and	w8, w8, #0xfffffff8
 c2c:	add	w8, w8, w19
 c30:	add	w19, w8, w0, lsl #4
 c34:	mov	w0, w19
 c38:	ldp	x20, x19, [sp, #16]
 c3c:	ldp	x29, x30, [sp], #32
 c40:	ret

0000000000000c44 <getNextNValueData>:
 c44:	cbz	x3, c50 <getNextNValueData+0xc>
 c48:	cbnz	w4, c68 <getNextNValueData+0x24>
 c4c:	b	c80 <getNextNValueData+0x3c>
 c50:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 c54:	add	x8, x8, #0x0
 c58:	add	x8, x8, w0, uxtw #3
 c5c:	ldr	x8, [x8, #8]
 c60:	ldr	x3, [x8, w1, uxtw #3]
 c64:	cbz	w4, c80 <getNextNValueData+0x3c>
 c68:	mov	w8, w4
 c6c:	ldr	q0, [x3]
 c70:	subs	x8, x8, #0x1
 c74:	str	q0, [x2], #16
 c78:	ldr	x3, [x3, #16]
 c7c:	b.ne	c6c <getNextNValueData+0x28>  // b.any
 c80:	mov	x0, x3
 c84:	ret

0000000000000c88 <getNumValueSitesRT>:
 c88:	ldr	x8, [x0]
 c8c:	add	x8, x8, w1, uxtw #1
 c90:	ldrh	w0, [x8, #44]
 c94:	ret

0000000000000c98 <getNumValueDataRT>:
 c98:	ldr	x8, [x0, #24]
 c9c:	ldr	x8, [x8, w1, uxtw #3]
 ca0:	cbz	x8, ccc <getNumValueDataRT+0x34>
 ca4:	ldr	x9, [x0]
 ca8:	mov	w10, w1
 cac:	add	x9, x9, x10, lsl #1
 cb0:	ldrh	w9, [x9, #44]
 cb4:	cbz	x9, ccc <getNumValueDataRT+0x34>
 cb8:	cmp	w9, #0x1
 cbc:	b.ne	cd4 <getNumValueDataRT+0x3c>  // b.any
 cc0:	mov	x10, xzr
 cc4:	mov	w0, wzr
 cc8:	b	d0c <getNumValueDataRT+0x74>
 ccc:	mov	w0, wzr
 cd0:	ret
 cd4:	and	x10, x9, #0xfffe
 cd8:	mov	w11, wzr
 cdc:	mov	w12, wzr
 ce0:	add	x13, x8, #0x1
 ce4:	mov	x14, x10
 ce8:	ldurb	w15, [x13, #-1]
 cec:	ldrb	w16, [x13], #2
 cf0:	subs	x14, x14, #0x2
 cf4:	add	w11, w11, w15
 cf8:	add	w12, w12, w16
 cfc:	b.ne	ce8 <getNumValueDataRT+0x50>  // b.any
 d00:	cmp	x10, x9
 d04:	add	w0, w12, w11
 d08:	b.eq	d20 <getNumValueDataRT+0x88>  // b.none
 d0c:	ldrb	w11, [x8, x10]
 d10:	add	x10, x10, #0x1
 d14:	cmp	x10, x9
 d18:	add	w0, w0, w11
 d1c:	b.cc	d0c <getNumValueDataRT+0x74>  // b.lo, b.ul, b.last
 d20:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	ldrb	w0, [x8]
   8:	ret

000000000000000c <__llvm_profile_enable_continuous_mode>:
   c:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
  10:	mov	w9, #0x1                   	// #1
  14:	strb	w9, [x8]
  18:	ret

000000000000001c <__llvm_profile_get_size_for_buffer>:
  1c:	stp	x29, x30, [sp, #-64]!
  20:	str	x23, [sp, #16]
  24:	stp	x22, x21, [sp, #32]
  28:	stp	x20, x19, [sp, #48]
  2c:	mov	x29, sp
  30:	bl	0 <__llvm_profile_begin_data>
  34:	mov	x20, x0
  38:	bl	0 <__llvm_profile_end_data>
  3c:	mov	x21, x0
  40:	bl	0 <__llvm_profile_begin_counters>
  44:	mov	x22, x0
  48:	bl	0 <__llvm_profile_end_counters>
  4c:	mov	x23, x0
  50:	bl	0 <__llvm_profile_begin_names>
  54:	mov	x19, x0
  58:	bl	0 <__llvm_profile_end_names>
  5c:	adrp	x9, 0 <__llvm_profile_is_continuous_mode_enabled>
  60:	sub	x8, x21, x20
  64:	ldrb	w9, [x9]
  68:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	add	x8, x8, #0x2f
  70:	movk	x10, #0xaaab
  74:	umulh	x8, x8, x10
  78:	sub	x19, x0, x19
  7c:	lsr	x21, x8, #5
  80:	sub	x20, x23, x22
  84:	tbz	w9, #0, dc <__llvm_profile_get_size_for_buffer+0xc0>
  88:	bl	0 <getpagesize>
  8c:	mov	w8, #0x30                  	// #48
  90:	mul	x8, x21, x8
  94:	mov	w9, w0
  98:	add	x11, x8, #0x50
  9c:	udiv	x8, x11, x9
  a0:	udiv	x10, x20, x9
  a4:	msub	x8, x8, x9, x11
  a8:	udiv	x12, x19, x9
  ac:	msub	x10, x10, x9, x20
  b0:	cmp	x8, #0x0
  b4:	sub	x8, x9, x8
  b8:	msub	x12, x12, x9, x19
  bc:	csel	x8, xzr, x8, eq  // eq = none
  c0:	cmp	x10, #0x0
  c4:	sub	x10, x9, x10
  c8:	sub	x13, x9, x12
  cc:	csel	x9, xzr, x10, eq  // eq = none
  d0:	cmp	x12, #0x0
  d4:	csel	x10, xzr, x13, eq  // eq = none
  d8:	b	fc <__llvm_profile_get_size_for_buffer+0xe0>
  dc:	mov	x0, x19
  e0:	bl	0 <__llvm_profile_get_num_padding_bytes>
  e4:	mov	w11, #0x30                  	// #48
  e8:	mul	x11, x21, x11
  ec:	mov	x9, xzr
  f0:	mov	x8, xzr
  f4:	and	x10, x0, #0xff
  f8:	add	x11, x11, #0x50
  fc:	add	x12, x19, x20
 100:	add	x11, x12, x11
 104:	ldp	x20, x19, [sp, #48]
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldr	x23, [sp, #16]
 110:	add	x9, x11, x9
 114:	add	x8, x9, x8
 118:	add	x0, x8, x10
 11c:	ldp	x29, x30, [sp], #64
 120:	ret

0000000000000124 <__llvm_profile_get_size_for_buffer_internal>:
 124:	stp	x29, x30, [sp, #-48]!
 128:	str	x21, [sp, #16]
 12c:	stp	x20, x19, [sp, #32]
 130:	mov	x29, sp
 134:	adrp	x9, 0 <__llvm_profile_is_continuous_mode_enabled>
 138:	sub	x8, x1, x0
 13c:	ldrb	w9, [x9]
 140:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 144:	add	x8, x8, #0x2f
 148:	movk	x10, #0xaaab
 14c:	umulh	x8, x8, x10
 150:	sub	x19, x5, x4
 154:	lsr	x21, x8, #5
 158:	sub	x20, x3, x2
 15c:	tbz	w9, #0, 1b4 <__llvm_profile_get_size_for_buffer_internal+0x90>
 160:	bl	0 <getpagesize>
 164:	mov	w8, #0x30                  	// #48
 168:	mul	x8, x21, x8
 16c:	mov	w9, w0
 170:	add	x11, x8, #0x50
 174:	udiv	x8, x11, x9
 178:	udiv	x10, x20, x9
 17c:	msub	x8, x8, x9, x11
 180:	udiv	x12, x19, x9
 184:	msub	x10, x10, x9, x20
 188:	cmp	x8, #0x0
 18c:	sub	x8, x9, x8
 190:	msub	x12, x12, x9, x19
 194:	csel	x8, xzr, x8, eq  // eq = none
 198:	cmp	x10, #0x0
 19c:	sub	x10, x9, x10
 1a0:	sub	x13, x9, x12
 1a4:	csel	x9, xzr, x10, eq  // eq = none
 1a8:	cmp	x12, #0x0
 1ac:	csel	x10, xzr, x13, eq  // eq = none
 1b0:	b	1d4 <__llvm_profile_get_size_for_buffer_internal+0xb0>
 1b4:	mov	x0, x19
 1b8:	bl	0 <__llvm_profile_get_num_padding_bytes>
 1bc:	mov	w11, #0x30                  	// #48
 1c0:	mul	x11, x21, x11
 1c4:	mov	x9, xzr
 1c8:	mov	x8, xzr
 1cc:	and	x10, x0, #0xff
 1d0:	add	x11, x11, #0x50
 1d4:	add	x11, x11, x20
 1d8:	add	x11, x11, x19
 1dc:	ldp	x20, x19, [sp, #32]
 1e0:	ldr	x21, [sp, #16]
 1e4:	add	x9, x11, x9
 1e8:	add	x8, x9, x8
 1ec:	add	x0, x8, x10
 1f0:	ldp	x29, x30, [sp], #48
 1f4:	ret

00000000000001f8 <__llvm_profile_get_data_size>:
 1f8:	sub	x8, x1, x0
 1fc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 200:	add	x8, x8, #0x2f
 204:	movk	x9, #0xaaab
 208:	umulh	x8, x8, x9
 20c:	lsr	x0, x8, #5
 210:	ret

0000000000000214 <__llvm_profile_get_padding_sizes_for_counters>:
 214:	stp	x29, x30, [sp, #-64]!
 218:	stp	x24, x23, [sp, #16]
 21c:	stp	x22, x21, [sp, #32]
 220:	stp	x20, x19, [sp, #48]
 224:	mov	x29, sp
 228:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
 22c:	ldrb	w8, [x8]
 230:	mov	x19, x5
 234:	mov	x20, x4
 238:	mov	x21, x3
 23c:	mov	x22, x2
 240:	tbz	w8, #0, 2ac <__llvm_profile_get_padding_sizes_for_counters+0x98>
 244:	mov	x23, x1
 248:	mov	x24, x0
 24c:	bl	0 <getpagesize>
 250:	mov	w8, #0x30                  	// #48
 254:	mul	x8, x24, x8
 258:	mov	w10, w0
 25c:	add	x8, x8, #0x50
 260:	lsl	x9, x23, #3
 264:	udiv	x12, x8, x10
 268:	udiv	x11, x9, x10
 26c:	msub	x8, x12, x10, x8
 270:	msub	x9, x11, x10, x9
 274:	udiv	x11, x22, x10
 278:	cmp	x8, #0x0
 27c:	sub	x8, x10, x8
 280:	msub	x11, x11, x10, x22
 284:	sub	x12, x10, x9
 288:	csel	x8, xzr, x8, eq  // eq = none
 28c:	cmp	x9, #0x0
 290:	sub	x10, x10, x11
 294:	str	x8, [x21]
 298:	csel	x8, xzr, x12, eq  // eq = none
 29c:	cmp	x11, #0x0
 2a0:	str	x8, [x20]
 2a4:	csel	x8, xzr, x10, eq  // eq = none
 2a8:	b	2c0 <__llvm_profile_get_padding_sizes_for_counters+0xac>
 2ac:	mov	x0, x22
 2b0:	str	xzr, [x21]
 2b4:	str	xzr, [x20]
 2b8:	bl	0 <__llvm_profile_get_num_padding_bytes>
 2bc:	and	x8, x0, #0xff
 2c0:	str	x8, [x19]
 2c4:	ldp	x20, x19, [sp, #48]
 2c8:	ldp	x22, x21, [sp, #32]
 2cc:	ldp	x24, x23, [sp, #16]
 2d0:	ldp	x29, x30, [sp], #64
 2d4:	ret

00000000000002d8 <initBufferWriter>:
 2d8:	adrp	x8, 0 <lprofBufferWriter>
 2dc:	ldr	x8, [x8]
 2e0:	stp	x8, x1, [x0]
 2e4:	ret

00000000000002e8 <__llvm_profile_write_buffer>:
 2e8:	sub	sp, sp, #0x20
 2ec:	stp	x29, x30, [sp, #16]
 2f0:	add	x29, sp, #0x10
 2f4:	adrp	x8, 0 <lprofBufferWriter>
 2f8:	ldr	x8, [x8]
 2fc:	mov	x1, xzr
 300:	mov	w2, wzr
 304:	stp	x8, x0, [sp]
 308:	mov	x0, sp
 30c:	bl	0 <lprofWriteData>
 310:	ldp	x29, x30, [sp, #16]
 314:	add	sp, sp, #0x20
 318:	ret

000000000000031c <__llvm_profile_write_buffer_internal>:
 31c:	sub	sp, sp, #0x30
 320:	stp	x29, x30, [sp, #32]
 324:	add	x29, sp, #0x20
 328:	adrp	x8, 0 <lprofBufferWriter>
 32c:	ldr	x8, [x8]
 330:	mov	x7, x6
 334:	mov	x6, x5
 338:	mov	x5, xzr
 33c:	stp	x8, x0, [sp, #16]
 340:	add	x0, sp, #0x10
 344:	str	wzr, [sp]
 348:	bl	0 <lprofWriteDataImpl>
 34c:	ldp	x29, x30, [sp, #32]
 350:	add	sp, sp, #0x30
 354:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_set_file_object>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	w20, w1
      10:	mov	x19, x0
      14:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
      18:	cbnz	w0, 38 <__llvm_profile_set_file_object+0x38>
      1c:	adrp	x8, 0 <__llvm_profile_set_file_object>
      20:	adrp	x9, 0 <__llvm_profile_set_file_object>
      24:	str	x19, [x8]
      28:	str	w20, [x9]
      2c:	ldp	x20, x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #32
      34:	ret
      38:	adrp	x8, 0 <stderr>
      3c:	ldr	x8, [x8]
      40:	mov	x0, x19
      44:	ldr	x20, [x8]
      48:	bl	0 <fileno>
      4c:	mov	w2, w0
      50:	mov	x0, x20
      54:	ldp	x20, x19, [sp, #16]
      58:	adrp	x1, 0 <__llvm_profile_set_file_object>
      5c:	add	x1, x1, #0x0
      60:	ldp	x29, x30, [sp], #32
      64:	b	0 <fprintf>

0000000000000068 <lprofCreateBufferIOInternal>:
      68:	stp	x29, x30, [sp, #-48]!
      6c:	str	x21, [sp, #16]
      70:	stp	x20, x19, [sp, #32]
      74:	mov	x29, sp
      78:	adrp	x9, 0 <free>
      7c:	ldr	x9, [x9]
      80:	mov	w19, w1
      84:	mov	x20, x0
      88:	adrp	x8, 0 <FreeHook>
      8c:	mov	w0, w1
      90:	mov	w1, #0x1                   	// #1
      94:	str	x9, [x8]
      98:	mov	w21, #0x1                   	// #1
      9c:	bl	0 <calloc>
      a0:	adrp	x8, 0 <DynamicBufferIOBuffer>
      a4:	adrp	x9, 0 <VPBufferSize>
      a8:	str	x0, [x8]
      ac:	mov	w0, #0x10                  	// #16
      b0:	mov	w1, #0x1                   	// #1
      b4:	str	w19, [x9]
      b8:	bl	0 <calloc>
      bc:	adrp	x8, 0 <__llvm_profile_set_file_object>
      c0:	add	x8, x8, #0x0
      c4:	stp	x8, x20, [x0]
      c8:	bl	0 <lprofCreateBufferIO>
      cc:	str	w21, [x0, #8]
      d0:	ldp	x20, x19, [sp, #32]
      d4:	ldr	x21, [sp, #16]
      d8:	ldp	x29, x30, [sp], #48
      dc:	ret

00000000000000e0 <__llvm_profile_get_path_prefix>:
      e0:	stp	x29, x30, [sp, #-64]!
      e4:	stp	x24, x23, [sp, #16]
      e8:	stp	x22, x21, [sp, #32]
      ec:	stp	x20, x19, [sp, #48]
      f0:	mov	x29, sp
      f4:	adrp	x22, 0 <__llvm_profile_set_file_object>
      f8:	ldr	x19, [x22]
      fc:	cbnz	x19, 214 <__llvm_profile_get_path_prefix+0x134>
     100:	adrp	x8, 0 <__llvm_profile_set_file_object>
     104:	ldr	x0, [x8]
     108:	cbz	x0, 170 <__llvm_profile_get_path_prefix+0x90>
     10c:	ldrb	w8, [x0]
     110:	cbz	w8, 170 <__llvm_profile_get_path_prefix+0x90>
     114:	adrp	x8, 0 <__llvm_profile_set_file_object>
     118:	add	x8, x8, #0x0
     11c:	ldp	w24, w21, [x8]
     120:	ldr	w23, [x8, #8]
     124:	orr	w8, w21, w24
     128:	orr	w20, w8, w23
     12c:	bl	0 <strlen>
     130:	mov	x19, x0
     134:	cbz	w20, 174 <__llvm_profile_get_path_prefix+0x94>
     138:	adrp	x20, 0 <__llvm_profile_set_file_object>
     13c:	add	x20, x20, #0x0
     140:	mov	x0, x20
     144:	bl	0 <strlen>
     148:	sub	x8, x0, #0x2
     14c:	add	x0, x20, #0x10
     150:	madd	x19, x8, x24, x19
     154:	bl	0 <strlen>
     158:	sub	x8, x0, #0x2
     15c:	madd	x8, x8, x21, x19
     160:	add	x9, x8, #0x18
     164:	cmp	w23, #0x0
     168:	csel	x19, x8, x9, eq  // eq = none
     16c:	b	174 <__llvm_profile_get_path_prefix+0x94>
     170:	mov	x19, xzr
     174:	add	w8, w19, #0x1
     178:	sxtw	x8, w8
     17c:	add	x8, x8, #0xf
     180:	and	x8, x8, #0xfffffffffffffff0
     184:	mov	x9, sp
     188:	sub	x0, x9, x8
     18c:	mov	sp, x0
     190:	mov	w1, wzr
     194:	bl	230 <getCurFilename>
     198:	cbz	x0, 20c <__llvm_profile_get_path_prefix+0x12c>
     19c:	mov	x20, x0
     1a0:	bl	0 <lprofFindLastDirSeparator>
     1a4:	cbz	x0, 20c <__llvm_profile_get_path_prefix+0x12c>
     1a8:	sub	w8, w0, w20
     1ac:	lsl	x21, x8, #32
     1b0:	mov	x8, #0x200000000           	// #8589934592
     1b4:	add	x8, x21, x8
     1b8:	asr	x0, x8, #32
     1bc:	bl	0 <malloc>
     1c0:	cbz	x0, 1ec <__llvm_profile_get_path_prefix+0x10c>
     1c4:	mov	x8, #0x100000000           	// #4294967296
     1c8:	add	x8, x21, x8
     1cc:	asr	x21, x8, #32
     1d0:	mov	x1, x20
     1d4:	mov	x2, x21
     1d8:	mov	x19, x0
     1dc:	bl	0 <memcpy>
     1e0:	strb	wzr, [x19, x21]
     1e4:	str	x19, [x22]
     1e8:	b	214 <__llvm_profile_get_path_prefix+0x134>
     1ec:	adrp	x8, 0 <stderr>
     1f0:	ldr	x8, [x8]
     1f4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     1f8:	adrp	x2, 0 <__llvm_profile_set_file_object>
     1fc:	add	x1, x1, #0x0
     200:	ldr	x0, [x8]
     204:	add	x2, x2, #0x0
     208:	bl	0 <fprintf>
     20c:	adrp	x19, 0 <__llvm_profile_set_file_object>
     210:	add	x19, x19, #0x0
     214:	mov	x0, x19
     218:	mov	sp, x29
     21c:	ldp	x20, x19, [sp, #48]
     220:	ldp	x22, x21, [sp, #32]
     224:	ldp	x24, x23, [sp, #16]
     228:	ldp	x29, x30, [sp], #64
     22c:	ret

0000000000000230 <getCurFilename>:
     230:	sub	sp, sp, #0x80
     234:	stp	x29, x30, [sp, #32]
     238:	stp	x28, x27, [sp, #48]
     23c:	stp	x26, x25, [sp, #64]
     240:	stp	x24, x23, [sp, #80]
     244:	stp	x22, x21, [sp, #96]
     248:	stp	x20, x19, [sp, #112]
     24c:	add	x29, sp, #0x20
     250:	adrp	x21, 0 <__llvm_profile_set_file_object>
     254:	ldr	x28, [x21]
     258:	cbz	x28, 3e0 <getCurFilename+0x1b0>
     25c:	ldrb	w8, [x28]
     260:	cbz	w8, 3e0 <getCurFilename+0x1b0>
     264:	adrp	x8, 0 <__llvm_profile_set_file_object>
     268:	add	x8, x8, #0x0
     26c:	ldp	w9, w10, [x8]
     270:	ldr	w8, [x8, #8]
     274:	mov	x19, x0
     278:	orr	w9, w10, w9
     27c:	orr	w8, w9, w8
     280:	cbnz	w8, 290 <getCurFilename+0x60>
     284:	mov	w20, w1
     288:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     28c:	cbz	w0, 410 <getCurFilename+0x1e0>
     290:	adrp	x20, 0 <__llvm_profile_set_file_object>
     294:	add	x20, x20, #0x0
     298:	mov	x0, x20
     29c:	bl	0 <strlen>
     2a0:	mov	x21, x0
     2a4:	add	x0, x20, #0x10
     2a8:	bl	0 <strlen>
     2ac:	mov	x22, x0
     2b0:	mov	w8, wzr
     2b4:	mov	w26, wzr
     2b8:	sxtw	x23, w0
     2bc:	sxtw	x24, w21
     2c0:	b	2e0 <getCurFilename+0xb0>
     2c4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     2c8:	add	x0, x19, w26, sxtw
     2cc:	add	x1, x1, #0x0
     2d0:	mov	x2, x23
     2d4:	bl	0 <memcpy>
     2d8:	add	w26, w26, w22
     2dc:	add	w8, w27, #0x1
     2e0:	sxtw	x10, w8
     2e4:	ldrb	w9, [x28, x10]
     2e8:	cmp	w9, #0x25
     2ec:	b.eq	30c <getCurFilename+0xdc>  // b.none
     2f0:	cbz	w9, 3e8 <getCurFilename+0x1b8>
     2f4:	add	w10, w26, #0x1
     2f8:	mov	w27, w8
     2fc:	strb	w9, [x19, w26, sxtw]
     300:	mov	w26, w10
     304:	add	w8, w27, #0x1
     308:	b	2e0 <getCurFilename+0xb0>
     30c:	add	x27, x10, #0x1
     310:	ldrb	w9, [x28, x27]
     314:	cmp	w9, #0x68
     318:	b.eq	2c4 <getCurFilename+0x94>  // b.none
     31c:	cmp	w9, #0x70
     320:	b.ne	340 <getCurFilename+0x110>  // b.any
     324:	add	x0, x19, w26, sxtw
     328:	mov	x1, x20
     32c:	mov	x2, x24
     330:	bl	0 <memcpy>
     334:	add	w26, w26, w21
     338:	add	w8, w27, #0x1
     33c:	b	2e0 <getCurFilename+0xb0>
     340:	ldrb	w9, [x28, w27, uxtw]
     344:	cmp	w9, #0x6d
     348:	b.ne	354 <getCurFilename+0x124>  // b.any
     34c:	mov	w25, w27
     350:	b	378 <getCurFilename+0x148>
     354:	add	w25, w8, #0x1
     358:	sub	w8, w9, #0x30
     35c:	and	w8, w8, #0xff
     360:	cmp	w8, #0x9
     364:	b.hi	3d8 <getCurFilename+0x1a8>  // b.pmore
     368:	add	w25, w25, #0x1
     36c:	ldrb	w9, [x28, w25, uxtw]
     370:	cmp	w9, #0x6d
     374:	b.ne	358 <getCurFilename+0x128>  // b.any
     378:	bl	0 <getpid>
     37c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     380:	ldr	w8, [x8]
     384:	udiv	w9, w0, w8
     388:	msub	w27, w9, w8, w0
     38c:	bl	0 <lprofGetLoadModuleSignature>
     390:	adrp	x2, 0 <__llvm_profile_set_file_object>
     394:	mov	x3, x0
     398:	add	x0, sp, #0x4
     39c:	mov	w1, #0x19                  	// #25
     3a0:	add	x2, x2, #0x0
     3a4:	mov	w4, w27
     3a8:	bl	0 <snprintf>
     3ac:	cmp	w0, #0x18
     3b0:	mov	w8, #0xffffffff            	// #-1
     3b4:	ccmp	w0, w8, #0x4, le
     3b8:	mov	w8, #0x18                  	// #24
     3bc:	csel	w27, w8, w0, eq  // eq = none
     3c0:	add	x0, x19, w26, sxtw
     3c4:	sxtw	x2, w27
     3c8:	add	x1, sp, #0x4
     3cc:	bl	0 <memcpy>
     3d0:	add	w26, w27, w26
     3d4:	mov	w27, w25
     3d8:	add	w8, w27, #0x1
     3dc:	b	2e0 <getCurFilename+0xb0>
     3e0:	mov	x19, xzr
     3e4:	b	3ec <getCurFilename+0x1bc>
     3e8:	strb	wzr, [x19, w26, sxtw]
     3ec:	mov	x0, x19
     3f0:	ldp	x20, x19, [sp, #112]
     3f4:	ldp	x22, x21, [sp, #96]
     3f8:	ldp	x24, x23, [sp, #80]
     3fc:	ldp	x26, x25, [sp, #64]
     400:	ldp	x28, x27, [sp, #48]
     404:	ldp	x29, x30, [sp, #32]
     408:	add	sp, sp, #0x80
     40c:	ret
     410:	ldr	x21, [x21]
     414:	cbz	w20, 43c <getCurFilename+0x20c>
     418:	mov	x0, x21
     41c:	bl	0 <strlen>
     420:	sxtw	x20, w0
     424:	mov	x0, x19
     428:	mov	x1, x21
     42c:	mov	x2, x20
     430:	bl	0 <memcpy>
     434:	strb	wzr, [x19, x20]
     438:	b	3ec <getCurFilename+0x1bc>
     43c:	mov	x19, x21
     440:	b	3ec <getCurFilename+0x1bc>

0000000000000444 <__llvm_profile_get_filename>:
     444:	stp	x29, x30, [sp, #-64]!
     448:	str	x23, [sp, #16]
     44c:	stp	x22, x21, [sp, #32]
     450:	stp	x20, x19, [sp, #48]
     454:	mov	x29, sp
     458:	adrp	x8, 0 <__llvm_profile_set_file_object>
     45c:	ldr	x0, [x8]
     460:	cbz	x0, 4c8 <__llvm_profile_get_filename+0x84>
     464:	ldrb	w8, [x0]
     468:	cbz	w8, 4c8 <__llvm_profile_get_filename+0x84>
     46c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     470:	add	x8, x8, #0x0
     474:	ldp	w23, w21, [x8]
     478:	ldr	w22, [x8, #8]
     47c:	orr	w8, w21, w23
     480:	orr	w20, w8, w22
     484:	bl	0 <strlen>
     488:	mov	x19, x0
     48c:	cbz	w20, 4cc <__llvm_profile_get_filename+0x88>
     490:	adrp	x20, 0 <__llvm_profile_set_file_object>
     494:	add	x20, x20, #0x0
     498:	mov	x0, x20
     49c:	bl	0 <strlen>
     4a0:	sub	x8, x0, #0x2
     4a4:	add	x0, x20, #0x10
     4a8:	madd	x19, x8, x23, x19
     4ac:	bl	0 <strlen>
     4b0:	sub	x8, x0, #0x2
     4b4:	madd	x8, x8, x21, x19
     4b8:	add	x9, x8, #0x18
     4bc:	cmp	w22, #0x0
     4c0:	csel	x19, x8, x9, eq  // eq = none
     4c4:	b	4cc <__llvm_profile_get_filename+0x88>
     4c8:	mov	x19, xzr
     4cc:	add	w8, w19, #0x1
     4d0:	sxtw	x0, w8
     4d4:	bl	0 <malloc>
     4d8:	cbz	x0, 50c <__llvm_profile_get_filename+0xc8>
     4dc:	mov	w1, #0x1                   	// #1
     4e0:	mov	x19, x0
     4e4:	bl	230 <getCurFilename>
     4e8:	adrp	x8, 0 <__llvm_profile_set_file_object>
     4ec:	add	x8, x8, #0x0
     4f0:	cmp	x0, #0x0
     4f4:	csel	x0, x8, x19, eq  // eq = none
     4f8:	ldp	x20, x19, [sp, #48]
     4fc:	ldp	x22, x21, [sp, #32]
     500:	ldr	x23, [sp, #16]
     504:	ldp	x29, x30, [sp], #64
     508:	ret
     50c:	adrp	x8, 0 <stderr>
     510:	ldr	x8, [x8]
     514:	adrp	x1, 0 <__llvm_profile_set_file_object>
     518:	adrp	x2, 0 <__llvm_profile_set_file_object>
     51c:	add	x1, x1, #0x0
     520:	ldr	x0, [x8]
     524:	add	x2, x2, #0x0
     528:	bl	0 <fprintf>
     52c:	adrp	x0, 0 <__llvm_profile_set_file_object>
     530:	add	x0, x0, #0x0
     534:	b	4f8 <__llvm_profile_get_filename+0xb4>

0000000000000538 <__llvm_profile_initialize_file>:
     538:	stp	x29, x30, [sp, #-32]!
     53c:	stp	x20, x19, [sp, #16]
     540:	mov	x29, sp
     544:	adrp	x19, 0 <__llvm_profile_filename>
     548:	ldr	x19, [x19]
     54c:	adrp	x0, 0 <__llvm_profile_set_file_object>
     550:	add	x0, x0, #0x0
     554:	ldrb	w20, [x19]
     558:	bl	0 <getenv>
     55c:	cbz	x0, 574 <__llvm_profile_initialize_file+0x3c>
     560:	ldrb	w8, [x0]
     564:	cbz	w8, 574 <__llvm_profile_initialize_file+0x3c>
     568:	mov	w1, #0x3                   	// #3
     56c:	mov	w2, #0x1                   	// #1
     570:	b	588 <__llvm_profile_initialize_file+0x50>
     574:	cmp	w20, #0x0
     578:	mov	w8, #0x1                   	// #1
     57c:	cinc	w1, w8, ne  // ne = any
     580:	csel	x0, xzr, x19, eq  // eq = none
     584:	mov	w2, wzr
     588:	ldp	x20, x19, [sp, #16]
     58c:	ldp	x29, x30, [sp], #32
     590:	b	594 <parseAndSetFilename>

0000000000000594 <parseAndSetFilename>:
     594:	sub	sp, sp, #0x70
     598:	stp	x29, x30, [sp, #16]
     59c:	stp	x28, x27, [sp, #32]
     5a0:	stp	x26, x25, [sp, #48]
     5a4:	stp	x24, x23, [sp, #64]
     5a8:	stp	x22, x21, [sp, #80]
     5ac:	stp	x20, x19, [sp, #96]
     5b0:	add	x29, sp, #0x10
     5b4:	adrp	x27, 0 <__llvm_profile_set_file_object>
     5b8:	add	x27, x27, #0x0
     5bc:	ldr	w26, [x27, #180]
     5c0:	cmp	w26, w1
     5c4:	b.ls	5e8 <parseAndSetFilename+0x54>  // b.plast
     5c8:	ldp	x20, x19, [sp, #96]
     5cc:	ldp	x22, x21, [sp, #80]
     5d0:	ldp	x24, x23, [sp, #64]
     5d4:	ldp	x26, x25, [sp, #48]
     5d8:	ldp	x28, x27, [sp, #32]
     5dc:	ldp	x29, x30, [sp, #16]
     5e0:	add	sp, sp, #0x70
     5e4:	ret
     5e8:	ldr	x19, [x27]
     5ec:	adrp	x8, 0 <__llvm_profile_set_file_object>
     5f0:	add	x8, x8, #0x0
     5f4:	cmp	x0, #0x0
     5f8:	mov	w22, w2
     5fc:	mov	w20, w1
     600:	csel	x21, x8, x0, eq  // eq = none
     604:	cbz	x19, 618 <parseAndSetFilename+0x84>
     608:	mov	x0, x19
     60c:	mov	x1, x21
     610:	bl	0 <strcmp>
     614:	cbz	w0, 7f4 <parseAndSetFilename+0x260>
     618:	adrp	x8, 0 <__llvm_profile_set_file_object>
     61c:	ldr	x8, [x8]
     620:	mov	x0, x19
     624:	cbz	x8, 638 <parseAndSetFilename+0xa4>
     628:	mov	x0, x8
     62c:	bl	0 <free>
     630:	adrp	x8, 0 <__llvm_profile_set_file_object>
     634:	ldr	x0, [x8]
     638:	cbz	x0, 64c <parseAndSetFilename+0xb8>
     63c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     640:	ldr	w8, [x8]
     644:	cbz	w8, 64c <parseAndSetFilename+0xb8>
     648:	bl	0 <free>
     64c:	movi	v0.2d, #0x0
     650:	str	xzr, [x27, #176]
     654:	stp	q0, q0, [x27, #144]
     658:	stp	q0, q0, [x27, #112]
     65c:	stp	q0, q0, [x27, #80]
     660:	stp	q0, q0, [x27, #48]
     664:	stp	q0, q0, [x27, #16]
     668:	str	q0, [x27]
     66c:	str	x19, [sp, #8]
     670:	cbz	w22, 68c <parseAndSetFilename+0xf8>
     674:	mov	x0, x21
     678:	bl	0 <strdup>
     67c:	mov	w8, #0x1                   	// #1
     680:	str	x0, [x27]
     684:	str	w8, [x27, #8]
     688:	b	694 <parseAndSetFilename+0x100>
     68c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     690:	str	x21, [x8]
     694:	mov	w22, wzr
     698:	mov	w24, wzr
     69c:	mov	w25, wzr
     6a0:	mov	w23, wzr
     6a4:	mov	w28, #0xa                   	// #10
     6a8:	sxtw	x9, w22
     6ac:	ldrb	w8, [x21, x9]
     6b0:	cmp	w8, #0x25
     6b4:	b.eq	6c8 <parseAndSetFilename+0x134>  // b.none
     6b8:	cbz	w8, 7e0 <parseAndSetFilename+0x24c>
     6bc:	mov	w19, w22
     6c0:	add	w22, w19, #0x1
     6c4:	b	6a8 <parseAndSetFilename+0x114>
     6c8:	add	x19, x9, #0x1
     6cc:	ldrb	w8, [x21, x19]
     6d0:	cmp	w8, #0x63
     6d4:	b.eq	6f8 <parseAndSetFilename+0x164>  // b.none
     6d8:	cmp	w8, #0x68
     6dc:	b.eq	710 <parseAndSetFilename+0x17c>  // b.none
     6e0:	cmp	w8, #0x70
     6e4:	b.ne	720 <parseAndSetFilename+0x18c>  // b.any
     6e8:	cbz	w25, 78c <parseAndSetFilename+0x1f8>
     6ec:	add	w25, w25, #0x1
     6f0:	add	w22, w19, #0x1
     6f4:	b	6a8 <parseAndSetFilename+0x114>
     6f8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     6fc:	cbnz	w0, 800 <parseAndSetFilename+0x26c>
     700:	bl	0 <__llvm_profile_enable_continuous_mode>
     704:	add	w19, w22, #0x2
     708:	add	w22, w19, #0x1
     70c:	b	6a8 <parseAndSetFilename+0x114>
     710:	cbz	w24, 7c0 <parseAndSetFilename+0x22c>
     714:	add	w24, w24, #0x1
     718:	add	w22, w19, #0x1
     71c:	b	6a8 <parseAndSetFilename+0x114>
     720:	ldrb	w10, [x21, w19, uxtw]
     724:	cmp	w10, #0x6d
     728:	b.ne	738 <parseAndSetFilename+0x1a4>  // b.any
     72c:	mov	w8, w19
     730:	mov	w9, #0x1                   	// #1
     734:	b	770 <parseAndSetFilename+0x1dc>
     738:	mov	w9, wzr
     73c:	add	w8, w22, #0x1
     740:	sub	w11, w10, #0x30
     744:	and	w11, w11, #0xff
     748:	cmp	w11, #0x9
     74c:	b.hi	784 <parseAndSetFilename+0x1f0>  // b.pmore
     750:	mul	w9, w9, w28
     754:	add	w8, w8, #0x1
     758:	add	w9, w9, w10, uxtb
     75c:	ldrb	w10, [x21, w8, uxtw]
     760:	sub	w9, w9, #0x30
     764:	cmp	w10, #0x6d
     768:	b.ne	740 <parseAndSetFilename+0x1ac>  // b.any
     76c:	cbz	w9, 730 <parseAndSetFilename+0x19c>
     770:	cbnz	w23, 80c <parseAndSetFilename+0x278>
     774:	adrp	x10, 0 <__llvm_profile_set_file_object>
     778:	mov	w23, #0x1                   	// #1
     77c:	mov	w19, w8
     780:	str	w9, [x10]
     784:	add	w22, w19, #0x1
     788:	b	6a8 <parseAndSetFilename+0x114>
     78c:	bl	0 <getpid>
     790:	sxtw	x3, w0
     794:	adrp	x0, 0 <__llvm_profile_set_file_object>
     798:	adrp	x2, 0 <__llvm_profile_set_file_object>
     79c:	mov	w1, #0x10                  	// #16
     7a0:	add	x0, x0, #0x0
     7a4:	add	x2, x2, #0x0
     7a8:	bl	0 <snprintf>
     7ac:	cmp	w0, #0x1
     7b0:	b.lt	818 <parseAndSetFilename+0x284>  // b.tstop
     7b4:	mov	w25, #0x1                   	// #1
     7b8:	add	w22, w19, #0x1
     7bc:	b	6a8 <parseAndSetFilename+0x114>
     7c0:	adrp	x0, 0 <__llvm_profile_set_file_object>
     7c4:	mov	w1, #0x80                  	// #128
     7c8:	add	x0, x0, #0x0
     7cc:	bl	0 <lprofGetHostName>
     7d0:	cbnz	w0, 830 <parseAndSetFilename+0x29c>
     7d4:	mov	w24, #0x1                   	// #1
     7d8:	add	w22, w19, #0x1
     7dc:	b	6a8 <parseAndSetFilename+0x114>
     7e0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     7e4:	add	x8, x8, #0x0
     7e8:	stp	w25, w24, [x8]
     7ec:	ldr	x19, [sp, #8]
     7f0:	b	8a8 <parseAndSetFilename+0x314>
     7f4:	adrp	x8, 0 <__llvm_profile_set_file_object>
     7f8:	str	w20, [x8]
     7fc:	b	5c8 <parseAndSetFilename+0x34>
     800:	adrp	x1, 0 <__llvm_profile_set_file_object>
     804:	add	x1, x1, #0x0
     808:	b	838 <parseAndSetFilename+0x2a4>
     80c:	adrp	x1, 0 <__llvm_profile_set_file_object>
     810:	add	x1, x1, #0x0
     814:	b	838 <parseAndSetFilename+0x2a4>
     818:	ldr	x19, [sp, #8]
     81c:	adrp	x22, 0 <__llvm_profile_set_file_object>
     820:	adrp	x1, 0 <__llvm_profile_set_file_object>
     824:	add	x22, x22, #0x0
     828:	add	x1, x1, #0x0
     82c:	b	844 <parseAndSetFilename+0x2b0>
     830:	adrp	x1, 0 <__llvm_profile_set_file_object>
     834:	add	x1, x1, #0x0
     838:	ldr	x19, [sp, #8]
     83c:	adrp	x22, 0 <__llvm_profile_set_file_object>
     840:	add	x22, x22, #0x0
     844:	adrp	x8, 0 <stderr>
     848:	ldr	x8, [x8]
     84c:	mov	x2, x21
     850:	ldr	x0, [x8]
     854:	bl	0 <fprintf>
     858:	ldr	x0, [x27]
     85c:	cbz	x0, 86c <parseAndSetFilename+0x2d8>
     860:	ldr	w8, [x27, #8]
     864:	cbz	w8, 86c <parseAndSetFilename+0x2d8>
     868:	bl	0 <free>
     86c:	movi	v0.2d, #0x0
     870:	mov	w8, #0x1                   	// #1
     874:	str	x22, [x27]
     878:	stur	q0, [x27, #168]
     87c:	stur	q0, [x27, #152]
     880:	stur	q0, [x27, #136]
     884:	stur	q0, [x27, #120]
     888:	stur	q0, [x27, #104]
     88c:	stur	q0, [x27, #88]
     890:	stur	q0, [x27, #72]
     894:	stur	q0, [x27, #56]
     898:	stur	q0, [x27, #40]
     89c:	stur	q0, [x27, #24]
     8a0:	stur	q0, [x27, #8]
     8a4:	str	w8, [x27, #180]
     8a8:	adrp	x0, 0 <__llvm_profile_set_file_object>
     8ac:	adrp	x8, 0 <__llvm_profile_set_file_object>
     8b0:	add	x0, x0, #0x0
     8b4:	str	w20, [x8]
     8b8:	bl	0 <getenv>
     8bc:	cbz	x19, 8ec <parseAndSetFilename+0x358>
     8c0:	cbz	x0, 8f0 <parseAndSetFilename+0x35c>
     8c4:	adrp	x8, 0 <stderr>
     8c8:	ldr	x8, [x8]
     8cc:	ldr	x0, [x8]
     8d0:	sub	w8, w26, #0x1
     8d4:	cmp	w8, #0x3
     8d8:	b.hi	944 <parseAndSetFilename+0x3b0>  // b.pmore
     8dc:	adrp	x9, 0 <__llvm_profile_set_file_object>
     8e0:	add	x9, x9, #0x0
     8e4:	ldr	x3, [x9, w8, sxtw #3]
     8e8:	b	94c <parseAndSetFilename+0x3b8>
     8ec:	cbnz	x0, 914 <parseAndSetFilename+0x380>
     8f0:	bl	122c <truncateCurrentFile>
     8f4:	ldp	x20, x19, [sp, #96]
     8f8:	ldp	x22, x21, [sp, #80]
     8fc:	ldp	x24, x23, [sp, #64]
     900:	ldp	x26, x25, [sp, #48]
     904:	ldp	x28, x27, [sp, #32]
     908:	ldp	x29, x30, [sp, #16]
     90c:	add	sp, sp, #0x70
     910:	b	1348 <initializeProfileForContinuousMode>
     914:	adrp	x8, 0 <stderr>
     918:	ldr	x8, [x8]
     91c:	adrp	x9, 0 <__llvm_profile_set_file_object>
     920:	ldr	x2, [x9]
     924:	ldr	x0, [x8]
     928:	sub	w8, w20, #0x1
     92c:	cmp	w8, #0x3
     930:	b.hi	98c <parseAndSetFilename+0x3f8>  // b.pmore
     934:	adrp	x9, 0 <__llvm_profile_set_file_object>
     938:	add	x9, x9, #0x0
     93c:	ldr	x3, [x9, w8, sxtw #3]
     940:	b	994 <parseAndSetFilename+0x400>
     944:	adrp	x3, 0 <__llvm_profile_set_file_object>
     948:	add	x3, x3, #0x0
     94c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     950:	ldr	x4, [x8]
     954:	sub	w8, w20, #0x1
     958:	cmp	w8, #0x3
     95c:	b.hi	970 <parseAndSetFilename+0x3dc>  // b.pmore
     960:	adrp	x9, 0 <__llvm_profile_set_file_object>
     964:	add	x9, x9, #0x0
     968:	ldr	x5, [x9, w8, sxtw #3]
     96c:	b	978 <parseAndSetFilename+0x3e4>
     970:	adrp	x5, 0 <__llvm_profile_set_file_object>
     974:	add	x5, x5, #0x0
     978:	adrp	x1, 0 <__llvm_profile_set_file_object>
     97c:	add	x1, x1, #0x0
     980:	mov	x2, x19
     984:	bl	0 <fprintf>
     988:	b	8f0 <parseAndSetFilename+0x35c>
     98c:	adrp	x3, 0 <__llvm_profile_set_file_object>
     990:	add	x3, x3, #0x0
     994:	adrp	x1, 0 <__llvm_profile_set_file_object>
     998:	add	x1, x1, #0x0
     99c:	bl	0 <fprintf>
     9a0:	b	8f0 <parseAndSetFilename+0x35c>

00000000000009a4 <__llvm_profile_set_filename>:
     9a4:	stp	x29, x30, [sp, #-32]!
     9a8:	str	x19, [sp, #16]
     9ac:	mov	x29, sp
     9b0:	mov	x19, x0
     9b4:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     9b8:	cbz	w0, 9c8 <__llvm_profile_set_filename+0x24>
     9bc:	ldr	x19, [sp, #16]
     9c0:	ldp	x29, x30, [sp], #32
     9c4:	ret
     9c8:	mov	x0, x19
     9cc:	ldr	x19, [sp, #16]
     9d0:	mov	w1, #0x4                   	// #4
     9d4:	mov	w2, #0x1                   	// #1
     9d8:	ldp	x29, x30, [sp], #32
     9dc:	b	594 <parseAndSetFilename>

00000000000009e0 <__llvm_profile_write_file>:
     9e0:	stp	x29, x30, [sp, #-64]!
     9e4:	str	x23, [sp, #16]
     9e8:	stp	x22, x21, [sp, #32]
     9ec:	stp	x20, x19, [sp, #48]
     9f0:	mov	x29, sp
     9f4:	bl	0 <lprofProfileDumped>
     9f8:	cbnz	w0, adc <__llvm_profile_write_file+0xfc>
     9fc:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     a00:	cbnz	w0, adc <__llvm_profile_write_file+0xfc>
     a04:	adrp	x8, 0 <__llvm_profile_set_file_object>
     a08:	ldr	x0, [x8]
     a0c:	cbz	x0, a74 <__llvm_profile_write_file+0x94>
     a10:	ldrb	w8, [x0]
     a14:	cbz	w8, a74 <__llvm_profile_write_file+0x94>
     a18:	adrp	x8, 0 <__llvm_profile_set_file_object>
     a1c:	add	x8, x8, #0x0
     a20:	ldp	w23, w21, [x8]
     a24:	ldr	w22, [x8, #8]
     a28:	orr	w8, w21, w23
     a2c:	orr	w20, w8, w22
     a30:	bl	0 <strlen>
     a34:	mov	x19, x0
     a38:	cbz	w20, a78 <__llvm_profile_write_file+0x98>
     a3c:	adrp	x20, 0 <__llvm_profile_set_file_object>
     a40:	add	x20, x20, #0x0
     a44:	mov	x0, x20
     a48:	bl	0 <strlen>
     a4c:	sub	x8, x0, #0x2
     a50:	add	x0, x20, #0x10
     a54:	madd	x19, x8, x23, x19
     a58:	bl	0 <strlen>
     a5c:	sub	x8, x0, #0x2
     a60:	madd	x8, x8, x21, x19
     a64:	add	x9, x8, #0x18
     a68:	cmp	w22, #0x0
     a6c:	csel	x19, x8, x9, eq  // eq = none
     a70:	b	a78 <__llvm_profile_write_file+0x98>
     a74:	mov	x19, xzr
     a78:	add	w8, w19, #0x1
     a7c:	sxtw	x8, w8
     a80:	add	x8, x8, #0xf
     a84:	and	x8, x8, #0xfffffffffffffff0
     a88:	mov	x9, sp
     a8c:	sub	x0, x9, x8
     a90:	mov	sp, x0
     a94:	mov	w1, wzr
     a98:	bl	230 <getCurFilename>
     a9c:	cbz	x0, b04 <__llvm_profile_write_file+0x124>
     aa0:	mov	x20, x0
     aa4:	bl	0 <__llvm_profile_get_version>
     aa8:	and	x8, x0, #0xffffffffffffff
     aac:	cmp	x8, #0x5
     ab0:	b.ne	b2c <__llvm_profile_write_file+0x14c>  // b.any
     ab4:	bl	0 <lprofSuspendSigKill>
     ab8:	mov	w21, w0
     abc:	mov	x0, x20
     ac0:	bl	bb0 <writeFile>
     ac4:	mov	w19, w0
     ac8:	cbnz	w0, b5c <__llvm_profile_write_file+0x17c>
     acc:	cmp	w21, #0x1
     ad0:	b.ne	b94 <__llvm_profile_write_file+0x1b4>  // b.any
     ad4:	bl	0 <lprofRestoreSigKill>
     ad8:	b	b94 <__llvm_profile_write_file+0x1b4>
     adc:	adrp	x8, 0 <stderr>
     ae0:	ldr	x8, [x8]
     ae4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     ae8:	adrp	x2, 0 <__llvm_profile_set_file_object>
     aec:	add	x1, x1, #0x0
     af0:	ldr	x0, [x8]
     af4:	add	x2, x2, #0x0
     af8:	bl	0 <fprintf>
     afc:	mov	w19, wzr
     b00:	b	b94 <__llvm_profile_write_file+0x1b4>
     b04:	adrp	x8, 0 <stderr>
     b08:	ldr	x8, [x8]
     b0c:	adrp	x1, 0 <__llvm_profile_set_file_object>
     b10:	adrp	x2, 0 <__llvm_profile_set_file_object>
     b14:	add	x1, x1, #0x0
     b18:	ldr	x0, [x8]
     b1c:	add	x2, x2, #0x0
     b20:	bl	0 <fprintf>
     b24:	mov	w19, #0xffffffff            	// #-1
     b28:	b	b94 <__llvm_profile_write_file+0x1b4>
     b2c:	adrp	x8, 0 <stderr>
     b30:	ldr	x8, [x8]
     b34:	ldr	x19, [x8]
     b38:	bl	0 <__llvm_profile_get_version>
     b3c:	adrp	x1, 0 <__llvm_profile_set_file_object>
     b40:	mov	x3, x0
     b44:	add	x1, x1, #0x0
     b48:	mov	w2, #0x5                   	// #5
     b4c:	mov	x0, x19
     b50:	bl	0 <fprintf>
     b54:	mov	w19, #0xffffffff            	// #-1
     b58:	b	b94 <__llvm_profile_write_file+0x1b4>
     b5c:	adrp	x8, 0 <stderr>
     b60:	ldr	x8, [x8]
     b64:	ldr	x22, [x8]
     b68:	bl	0 <__errno_location>
     b6c:	ldr	w0, [x0]
     b70:	bl	0 <strerror>
     b74:	adrp	x1, 0 <__llvm_profile_set_file_object>
     b78:	mov	x3, x0
     b7c:	add	x1, x1, #0x0
     b80:	mov	x0, x22
     b84:	mov	x2, x20
     b88:	bl	0 <fprintf>
     b8c:	cmp	w21, #0x1
     b90:	b.eq	ad4 <__llvm_profile_write_file+0xf4>  // b.none
     b94:	mov	w0, w19
     b98:	mov	sp, x29
     b9c:	ldp	x20, x19, [sp, #48]
     ba0:	ldp	x22, x21, [sp, #32]
     ba4:	ldr	x23, [sp, #16]
     ba8:	ldp	x29, x30, [sp], #64
     bac:	ret

0000000000000bb0 <writeFile>:
     bb0:	sub	sp, sp, #0x70
     bb4:	stp	x29, x30, [sp, #32]
     bb8:	stp	x26, x25, [sp, #48]
     bbc:	stp	x24, x23, [sp, #64]
     bc0:	stp	x22, x21, [sp, #80]
     bc4:	stp	x20, x19, [sp, #96]
     bc8:	add	x29, sp, #0x20
     bcc:	adrp	x8, 0 <VPMergeHook>
     bd0:	adrp	x24, 0 <__llvm_profile_set_file_object>
     bd4:	adrp	x25, 0 <__llvm_profile_set_file_object>
     bd8:	ldr	x8, [x8]
     bdc:	ldr	w9, [x24]
     be0:	ldr	w10, [x25]
     be4:	adrp	x26, 0 <__llvm_profile_set_file_object>
     be8:	adrp	x11, 0 <lprofMergeValueProfData>
     bec:	ldr	x19, [x26]
     bf0:	ldr	x11, [x11]
     bf4:	mov	x20, x0
     bf8:	orr	w9, w10, w9
     bfc:	str	x11, [x8]
     c00:	cbz	w9, c14 <writeFile+0x64>
     c04:	cbz	x19, c38 <writeFile+0x88>
     c08:	mov	x0, x19
     c0c:	bl	0 <lprofLockFileHandle>
     c10:	b	c50 <writeFile+0xa0>
     c14:	cbnz	x19, c30 <writeFile+0x80>
     c18:	adrp	x1, 0 <__llvm_profile_set_file_object>
     c1c:	add	x1, x1, #0x0
     c20:	mov	x0, x20
     c24:	bl	0 <fopen>
     c28:	cbz	x0, ddc <writeFile+0x22c>
     c2c:	mov	x19, x0
     c30:	mov	w21, wzr
     c34:	b	cf4 <writeFile+0x144>
     c38:	mov	x0, x20
     c3c:	bl	1754 <createProfileDir>
     c40:	mov	x0, x20
     c44:	bl	0 <lprofOpenFileEx>
     c48:	mov	x19, x0
     c4c:	cbz	x0, ddc <writeFile+0x22c>
     c50:	add	x1, sp, #0x8
     c54:	mov	x0, x19
     c58:	bl	17ac <getProfileFileSizeForMerging>
     c5c:	cmn	w0, #0x1
     c60:	b.eq	da4 <writeFile+0x1f4>  // b.none
     c64:	ldr	x21, [sp, #8]
     c68:	cbz	x21, cc4 <writeFile+0x114>
     c6c:	sub	x2, x29, #0x8
     c70:	mov	x0, x19
     c74:	mov	x1, x21
     c78:	bl	1898 <mmapProfileForMerging>
     c7c:	cmn	w0, #0x1
     c80:	b.eq	da4 <writeFile+0x1f4>  // b.none
     c84:	ldur	x22, [x29, #-8]
     c88:	mov	x1, x21
     c8c:	mov	x0, x22
     c90:	bl	0 <__llvm_profile_merge_from_buffer>
     c94:	mov	x0, x19
     c98:	bl	0 <fileno>
     c9c:	mov	w23, w0
     ca0:	bl	0 <__llvm_profile_get_size_for_buffer>
     ca4:	mov	x1, x0
     ca8:	mov	w0, w23
     cac:	bl	0 <ftruncate>
     cb0:	mov	x0, x22
     cb4:	mov	x1, x21
     cb8:	bl	0 <munmap>
     cbc:	mov	w21, #0x1                   	// #1
     cc0:	b	cdc <writeFile+0x12c>
     cc4:	mov	x0, x19
     cc8:	bl	0 <fileno>
     ccc:	mov	x1, xzr
     cd0:	bl	0 <ftruncate>
     cd4:	cbnz	w0, da4 <writeFile+0x1f4>
     cd8:	mov	w21, wzr
     cdc:	mov	x0, x19
     ce0:	mov	x1, xzr
     ce4:	mov	w2, wzr
     ce8:	bl	0 <fseek>
     cec:	cmn	w0, #0x1
     cf0:	b.eq	da4 <writeFile+0x1f4>  // b.none
     cf4:	adrp	x9, 0 <free>
     cf8:	ldr	x9, [x9]
     cfc:	adrp	x0, 0 <__llvm_profile_set_file_object>
     d00:	adrp	x8, 0 <FreeHook>
     d04:	add	x0, x0, #0x0
     d08:	str	x9, [x8]
     d0c:	bl	0 <getenv>
     d10:	cbz	x0, d44 <writeFile+0x194>
     d14:	ldrb	w8, [x0]
     d18:	cbz	w8, d44 <writeFile+0x194>
     d1c:	mov	w2, #0xa                   	// #10
     d20:	mov	x1, xzr
     d24:	bl	0 <strtol>
     d28:	adrp	x8, 0 <VPBufferSize>
     d2c:	str	w0, [x8]
     d30:	and	x0, x0, #0xffffffff
     d34:	mov	w1, #0x1                   	// #1
     d38:	bl	0 <calloc>
     d3c:	adrp	x8, 0 <DynamicBufferIOBuffer>
     d40:	str	x0, [x8]
     d44:	adrp	x8, 0 <__llvm_profile_set_file_object>
     d48:	add	x8, x8, #0x0
     d4c:	stp	x8, x19, [sp, #8]
     d50:	bl	0 <lprofGetVPDataReader>
     d54:	mov	x1, x0
     d58:	add	x0, sp, #0x8
     d5c:	mov	w2, w21
     d60:	bl	0 <lprofWriteData>
     d64:	ldr	x8, [x26]
     d68:	mov	w20, w0
     d6c:	cmp	x19, x8
     d70:	b.eq	d80 <writeFile+0x1d0>  // b.none
     d74:	mov	x0, x19
     d78:	bl	0 <fclose>
     d7c:	b	de0 <writeFile+0x230>
     d80:	mov	x0, x19
     d84:	bl	0 <fflush>
     d88:	ldr	w8, [x24]
     d8c:	ldr	w9, [x25]
     d90:	orr	w8, w9, w8
     d94:	cbz	w8, de0 <writeFile+0x230>
     d98:	mov	x0, x19
     d9c:	bl	0 <lprofUnlockFileHandle>
     da0:	b	de0 <writeFile+0x230>
     da4:	adrp	x8, 0 <stderr>
     da8:	ldr	x8, [x8]
     dac:	ldr	x21, [x8]
     db0:	bl	0 <__errno_location>
     db4:	ldr	w0, [x0]
     db8:	bl	0 <strerror>
     dbc:	adrp	x1, 0 <__llvm_profile_set_file_object>
     dc0:	mov	x3, x0
     dc4:	add	x1, x1, #0x0
     dc8:	mov	x0, x21
     dcc:	mov	x2, x20
     dd0:	bl	0 <fprintf>
     dd4:	mov	x0, x19
     dd8:	bl	0 <fclose>
     ddc:	mov	w20, #0xffffffff            	// #-1
     de0:	mov	w0, w20
     de4:	ldp	x20, x19, [sp, #96]
     de8:	ldp	x22, x21, [sp, #80]
     dec:	ldp	x24, x23, [sp, #64]
     df0:	ldp	x26, x25, [sp, #48]
     df4:	ldp	x29, x30, [sp, #32]
     df8:	add	sp, sp, #0x70
     dfc:	ret

0000000000000e00 <__llvm_profile_dump>:
     e00:	stp	x29, x30, [sp, #-32]!
     e04:	str	x19, [sp, #16]
     e08:	mov	x29, sp
     e0c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     e10:	adrp	x9, 0 <__llvm_profile_set_file_object>
     e14:	ldr	w8, [x8]
     e18:	ldr	w9, [x9]
     e1c:	orr	w8, w9, w8
     e20:	cbz	w8, e40 <__llvm_profile_dump+0x40>
     e24:	bl	9e0 <__llvm_profile_write_file>
     e28:	mov	w19, w0
     e2c:	bl	0 <lprofSetProfileDumped>
     e30:	mov	w0, w19
     e34:	ldr	x19, [sp, #16]
     e38:	ldp	x29, x30, [sp], #32
     e3c:	ret
     e40:	adrp	x8, 0 <stderr>
     e44:	ldr	x8, [x8]
     e48:	adrp	x1, 0 <__llvm_profile_set_file_object>
     e4c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     e50:	add	x1, x1, #0x0
     e54:	ldr	x0, [x8]
     e58:	add	x2, x2, #0x0
     e5c:	bl	0 <fprintf>
     e60:	b	e24 <__llvm_profile_dump+0x24>

0000000000000e64 <__llvm_orderfile_write_file>:
     e64:	stp	x29, x30, [sp, #-64]!
     e68:	str	x23, [sp, #16]
     e6c:	stp	x22, x21, [sp, #32]
     e70:	stp	x20, x19, [sp, #48]
     e74:	mov	x29, sp
     e78:	adrp	x8, 0 <__llvm_profile_set_file_object>
     e7c:	ldr	x0, [x8]
     e80:	cbz	x0, ee8 <__llvm_orderfile_write_file+0x84>
     e84:	ldrb	w8, [x0]
     e88:	cbz	w8, ee8 <__llvm_orderfile_write_file+0x84>
     e8c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     e90:	add	x8, x8, #0x0
     e94:	ldp	w23, w21, [x8]
     e98:	ldr	w22, [x8, #8]
     e9c:	orr	w8, w21, w23
     ea0:	orr	w20, w8, w22
     ea4:	bl	0 <strlen>
     ea8:	mov	x19, x0
     eac:	cbz	w20, eec <__llvm_orderfile_write_file+0x88>
     eb0:	adrp	x20, 0 <__llvm_profile_set_file_object>
     eb4:	add	x20, x20, #0x0
     eb8:	mov	x0, x20
     ebc:	bl	0 <strlen>
     ec0:	sub	x8, x0, #0x2
     ec4:	add	x0, x20, #0x10
     ec8:	madd	x19, x8, x23, x19
     ecc:	bl	0 <strlen>
     ed0:	sub	x8, x0, #0x2
     ed4:	madd	x8, x8, x21, x19
     ed8:	add	x9, x8, #0x18
     edc:	cmp	w22, #0x0
     ee0:	csel	x19, x8, x9, eq  // eq = none
     ee4:	b	eec <__llvm_orderfile_write_file+0x88>
     ee8:	mov	x19, xzr
     eec:	add	w8, w19, #0x7
     ef0:	sxtw	x8, w8
     ef4:	add	x8, x8, #0xf
     ef8:	and	x8, x8, #0xfffffffffffffff0
     efc:	mov	x9, sp
     f00:	sub	x20, x9, x8
     f04:	mov	sp, x20
     f08:	mov	w1, #0x1                   	// #1
     f0c:	mov	x0, x20
     f10:	bl	230 <getCurFilename>
     f14:	cbz	x0, 101c <__llvm_orderfile_write_file+0x1b8>
     f18:	mov	x19, x0
     f1c:	bl	0 <strlen>
     f20:	mov	w9, #0x6f2e                	// #28462
     f24:	add	x8, x20, w0, sxtw
     f28:	movk	w9, #0x6472, lsl #16
     f2c:	mov	w10, #0x7265                	// #29285
     f30:	mov	x11, #0x600000000           	// #25769803776
     f34:	str	w9, [x8]
     f38:	strh	w10, [x8, #4]
     f3c:	add	x8, x11, x0, lsl #32
     f40:	asr	x8, x8, #32
     f44:	strb	wzr, [x20, x8]
     f48:	bl	0 <__llvm_profile_get_version>
     f4c:	and	x8, x0, #0xffffffffffffff
     f50:	cmp	x8, #0x5
     f54:	b.ne	1044 <__llvm_orderfile_write_file+0x1e0>  // b.any
     f58:	bl	0 <lprofSuspendSigKill>
     f5c:	adrp	x1, 0 <__llvm_profile_set_file_object>
     f60:	mov	w20, w0
     f64:	add	x1, x1, #0x0
     f68:	mov	x0, x19
     f6c:	bl	0 <fopen>
     f70:	cbz	x0, 1074 <__llvm_orderfile_write_file+0x210>
     f74:	adrp	x9, 0 <free>
     f78:	ldr	x9, [x9]
     f7c:	mov	x21, x0
     f80:	adrp	x0, 0 <__llvm_profile_set_file_object>
     f84:	adrp	x8, 0 <FreeHook>
     f88:	add	x0, x0, #0x0
     f8c:	str	x9, [x8]
     f90:	bl	0 <getenv>
     f94:	cbz	x0, fc8 <__llvm_orderfile_write_file+0x164>
     f98:	ldrb	w8, [x0]
     f9c:	cbz	w8, fc8 <__llvm_orderfile_write_file+0x164>
     fa0:	mov	w2, #0xa                   	// #10
     fa4:	mov	x1, xzr
     fa8:	bl	0 <strtol>
     fac:	adrp	x8, 0 <VPBufferSize>
     fb0:	str	w0, [x8]
     fb4:	and	x0, x0, #0xffffffff
     fb8:	mov	w1, #0x1                   	// #1
     fbc:	bl	0 <calloc>
     fc0:	adrp	x8, 0 <DynamicBufferIOBuffer>
     fc4:	str	x0, [x8]
     fc8:	bl	0 <__llvm_profile_begin_orderfile>
     fcc:	mov	w1, #0x4                   	// #4
     fd0:	mov	w2, #0x20000               	// #131072
     fd4:	mov	x3, x21
     fd8:	bl	0 <fwrite_unlocked>
     fdc:	mov	x22, x0
     fe0:	mov	x0, x21
     fe4:	bl	0 <fclose>
     fe8:	cmp	x22, #0x20, lsl #12
     fec:	b.ne	1098 <__llvm_orderfile_write_file+0x234>  // b.any
     ff0:	mov	w21, wzr
     ff4:	cmp	w20, #0x1
     ff8:	b.ne	1000 <__llvm_orderfile_write_file+0x19c>  // b.any
     ffc:	bl	0 <lprofRestoreSigKill>
    1000:	mov	w0, w21
    1004:	mov	sp, x29
    1008:	ldp	x20, x19, [sp, #48]
    100c:	ldp	x22, x21, [sp, #32]
    1010:	ldr	x23, [sp, #16]
    1014:	ldp	x29, x30, [sp], #64
    1018:	ret
    101c:	adrp	x8, 0 <stderr>
    1020:	ldr	x8, [x8]
    1024:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1028:	adrp	x2, 0 <__llvm_profile_set_file_object>
    102c:	add	x1, x1, #0x0
    1030:	ldr	x0, [x8]
    1034:	add	x2, x2, #0x0
    1038:	bl	0 <fprintf>
    103c:	mov	w21, #0xffffffff            	// #-1
    1040:	b	1000 <__llvm_orderfile_write_file+0x19c>
    1044:	adrp	x8, 0 <stderr>
    1048:	ldr	x8, [x8]
    104c:	ldr	x19, [x8]
    1050:	bl	0 <__llvm_profile_get_version>
    1054:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1058:	mov	x3, x0
    105c:	add	x1, x1, #0x0
    1060:	mov	w2, #0x5                   	// #5
    1064:	mov	x0, x19
    1068:	bl	0 <fprintf>
    106c:	mov	w21, #0xffffffff            	// #-1
    1070:	b	1000 <__llvm_orderfile_write_file+0x19c>
    1074:	adrp	x8, 0 <stderr>
    1078:	ldr	x8, [x8]
    107c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1080:	add	x1, x1, #0x0
    1084:	mov	x2, x19
    1088:	ldr	x0, [x8]
    108c:	bl	0 <fprintf>
    1090:	mov	w21, #0xffffffff            	// #-1
    1094:	b	109c <__llvm_orderfile_write_file+0x238>
    1098:	mov	w21, #0x1                   	// #1
    109c:	adrp	x8, 0 <stderr>
    10a0:	ldr	x8, [x8]
    10a4:	ldr	x22, [x8]
    10a8:	bl	0 <__errno_location>
    10ac:	ldr	w0, [x0]
    10b0:	bl	0 <strerror>
    10b4:	adrp	x1, 0 <__llvm_profile_set_file_object>
    10b8:	mov	x3, x0
    10bc:	add	x1, x1, #0x0
    10c0:	mov	x0, x22
    10c4:	mov	x2, x19
    10c8:	bl	0 <fprintf>
    10cc:	cmp	w20, #0x1
    10d0:	b.eq	ffc <__llvm_orderfile_write_file+0x198>  // b.none
    10d4:	b	1000 <__llvm_orderfile_write_file+0x19c>

00000000000010d8 <__llvm_orderfile_dump>:
    10d8:	b	e64 <__llvm_orderfile_write_file>

00000000000010dc <__llvm_profile_register_write_file_atexit>:
    10dc:	stp	x29, x30, [sp, #-32]!
    10e0:	str	x19, [sp, #16]
    10e4:	mov	x29, sp
    10e8:	adrp	x19, 0 <__llvm_profile_set_file_object>
    10ec:	ldrb	w8, [x19]
    10f0:	tbz	w8, #0, 1104 <__llvm_profile_register_write_file_atexit+0x28>
    10f4:	ldr	x19, [sp, #16]
    10f8:	mov	w0, wzr
    10fc:	ldp	x29, x30, [sp], #32
    1100:	ret
    1104:	bl	0 <lprofSetupValueProfiler>
    1108:	mov	w8, #0x1                   	// #1
    110c:	strb	w8, [x19]
    1110:	ldr	x19, [sp, #16]
    1114:	adrp	x0, 0 <__llvm_profile_set_file_object>
    1118:	add	x0, x0, #0x0
    111c:	ldp	x29, x30, [sp], #32
    1120:	b	0 <atexit>

0000000000001124 <writeFileWithoutReturn>:
    1124:	b	9e0 <__llvm_profile_write_file>

0000000000001128 <fileWriter>:
    1128:	sub	sp, sp, #0x60
    112c:	stp	x29, x30, [sp, #16]
    1130:	stp	x26, x25, [sp, #32]
    1134:	stp	x24, x23, [sp, #48]
    1138:	stp	x22, x21, [sp, #64]
    113c:	stp	x20, x19, [sp, #80]
    1140:	add	x29, sp, #0x10
    1144:	ldr	x20, [x0, #8]
    1148:	str	xzr, [sp, #8]
    114c:	cbz	w2, 1200 <fileWriter+0xd8>
    1150:	mov	x19, x1
    1154:	mov	x24, xzr
    1158:	mov	w25, w2
    115c:	mov	w26, #0x8                   	// #8
    1160:	b	118c <fileWriter+0x64>
    1164:	add	x21, x19, x24, lsl #5
    1168:	ldp	x1, x2, [x21, #8]
    116c:	mov	x3, x20
    1170:	bl	0 <fwrite>
    1174:	ldr	x8, [x21, #16]
    1178:	cmp	x0, x8
    117c:	b.ne	1224 <fileWriter+0xfc>  // b.any
    1180:	add	x24, x24, #0x1
    1184:	cmp	x24, x25
    1188:	b.eq	1200 <fileWriter+0xd8>  // b.none
    118c:	lsl	x8, x24, #5
    1190:	ldr	x0, [x19, x8]
    1194:	cbnz	x0, 1164 <fileWriter+0x3c>
    1198:	add	x8, x19, x24, lsl #5
    119c:	ldr	w9, [x8, #24]
    11a0:	ldp	x10, x8, [x8, #8]
    11a4:	mul	x21, x8, x10
    11a8:	cbz	w9, 11e0 <fileWriter+0xb8>
    11ac:	cbz	x21, 1180 <fileWriter+0x58>
    11b0:	cmp	x21, #0x8
    11b4:	csel	x23, x21, x26, cc  // cc = lo, ul, last
    11b8:	add	x0, sp, #0x8
    11bc:	mov	w1, #0x1                   	// #1
    11c0:	mov	x2, x23
    11c4:	mov	x3, x20
    11c8:	mov	w22, #0x1                   	// #1
    11cc:	bl	0 <fwrite>
    11d0:	cmp	x0, x23
    11d4:	sub	x21, x21, x23
    11d8:	b.eq	11ac <fileWriter+0x84>  // b.none
    11dc:	b	1204 <fileWriter+0xdc>
    11e0:	mov	w2, #0x1                   	// #1
    11e4:	mov	x0, x20
    11e8:	mov	x1, x21
    11ec:	mov	w22, #0x1                   	// #1
    11f0:	bl	0 <fseek>
    11f4:	cmn	w0, #0x1
    11f8:	b.ne	1180 <fileWriter+0x58>  // b.any
    11fc:	b	1204 <fileWriter+0xdc>
    1200:	mov	w22, wzr
    1204:	mov	w0, w22
    1208:	ldp	x20, x19, [sp, #80]
    120c:	ldp	x22, x21, [sp, #64]
    1210:	ldp	x24, x23, [sp, #48]
    1214:	ldp	x26, x25, [sp, #32]
    1218:	ldp	x29, x30, [sp, #16]
    121c:	add	sp, sp, #0x60
    1220:	ret
    1224:	mov	w22, #0x1                   	// #1
    1228:	b	1204 <fileWriter+0xdc>

000000000000122c <truncateCurrentFile>:
    122c:	stp	x29, x30, [sp, #-64]!
    1230:	str	x23, [sp, #16]
    1234:	stp	x22, x21, [sp, #32]
    1238:	stp	x20, x19, [sp, #48]
    123c:	mov	x29, sp
    1240:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1244:	ldr	x0, [x8]
    1248:	cbz	x0, 12b0 <truncateCurrentFile+0x84>
    124c:	ldrb	w8, [x0]
    1250:	cbz	w8, 12b0 <truncateCurrentFile+0x84>
    1254:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1258:	add	x8, x8, #0x0
    125c:	ldp	w23, w21, [x8]
    1260:	ldr	w22, [x8, #8]
    1264:	orr	w8, w21, w23
    1268:	orr	w20, w8, w22
    126c:	bl	0 <strlen>
    1270:	mov	x19, x0
    1274:	cbz	w20, 12b4 <truncateCurrentFile+0x88>
    1278:	adrp	x20, 0 <__llvm_profile_set_file_object>
    127c:	add	x20, x20, #0x0
    1280:	mov	x0, x20
    1284:	bl	0 <strlen>
    1288:	sub	x8, x0, #0x2
    128c:	add	x0, x20, #0x10
    1290:	madd	x19, x8, x23, x19
    1294:	bl	0 <strlen>
    1298:	sub	x8, x0, #0x2
    129c:	madd	x8, x8, x21, x19
    12a0:	add	x9, x8, #0x18
    12a4:	cmp	w22, #0x0
    12a8:	csel	x19, x8, x9, eq  // eq = none
    12ac:	b	12b4 <truncateCurrentFile+0x88>
    12b0:	mov	x19, xzr
    12b4:	add	w8, w19, #0x1
    12b8:	sxtw	x8, w8
    12bc:	add	x8, x8, #0xf
    12c0:	and	x8, x8, #0xfffffffffffffff0
    12c4:	mov	x9, sp
    12c8:	sub	x0, x9, x8
    12cc:	mov	sp, x0
    12d0:	mov	w1, wzr
    12d4:	bl	230 <getCurFilename>
    12d8:	cbz	x0, 1330 <truncateCurrentFile+0x104>
    12dc:	mov	x19, x0
    12e0:	adrp	x0, 0 <__llvm_profile_set_file_object>
    12e4:	add	x0, x0, #0x0
    12e8:	bl	0 <getenv>
    12ec:	cbnz	x0, 1330 <truncateCurrentFile+0x104>
    12f0:	adrp	x0, 0 <__llvm_profile_set_file_object>
    12f4:	add	x0, x0, #0x0
    12f8:	mov	w2, #0x1                   	// #1
    12fc:	mov	x1, x0
    1300:	bl	0 <setenv>
    1304:	mov	x0, x19
    1308:	bl	1754 <createProfileDir>
    130c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1310:	ldr	w8, [x8]
    1314:	cbnz	w8, 1330 <truncateCurrentFile+0x104>
    1318:	adrp	x1, 0 <__llvm_profile_set_file_object>
    131c:	add	x1, x1, #0x0
    1320:	mov	x0, x19
    1324:	bl	0 <fopen>
    1328:	cbz	x0, 1330 <truncateCurrentFile+0x104>
    132c:	bl	0 <fclose>
    1330:	mov	sp, x29
    1334:	ldp	x20, x19, [sp, #48]
    1338:	ldp	x22, x21, [sp, #32]
    133c:	ldr	x23, [sp, #16]
    1340:	ldp	x29, x30, [sp], #64
    1344:	ret

0000000000001348 <initializeProfileForContinuousMode>:
    1348:	stp	x29, x30, [sp, #-96]!
    134c:	stp	x28, x27, [sp, #16]
    1350:	stp	x26, x25, [sp, #32]
    1354:	stp	x24, x23, [sp, #48]
    1358:	stp	x22, x21, [sp, #64]
    135c:	stp	x20, x19, [sp, #80]
    1360:	mov	x29, sp
    1364:	sub	sp, sp, #0x20
    1368:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    136c:	cbz	w0, 163c <initializeProfileForContinuousMode+0x2f4>
    1370:	bl	0 <__llvm_profile_begin_data>
    1374:	mov	x24, x0
    1378:	bl	0 <__llvm_profile_end_data>
    137c:	mov	x20, x0
    1380:	bl	0 <__llvm_profile_begin_counters>
    1384:	mov	x19, x0
    1388:	bl	0 <__llvm_profile_end_counters>
    138c:	mov	x21, x0
    1390:	bl	0 <__llvm_profile_begin_names>
    1394:	mov	x22, x0
    1398:	bl	0 <__llvm_profile_end_names>
    139c:	mov	x23, x0
    13a0:	mov	x0, x24
    13a4:	mov	x1, x20
    13a8:	bl	0 <__llvm_profile_get_data_size>
    13ac:	mov	x20, x0
    13b0:	bl	0 <getpagesize>
    13b4:	mov	w25, w0
    13b8:	sdiv	x8, x19, x25
    13bc:	msub	x8, x8, x25, x19
    13c0:	cbnz	x8, 1550 <initializeProfileForContinuousMode+0x208>
    13c4:	sdiv	x8, x24, x25
    13c8:	msub	x8, x8, x25, x24
    13cc:	cbnz	x8, 1568 <initializeProfileForContinuousMode+0x220>
    13d0:	adrp	x8, 0 <__llvm_profile_set_file_object>
    13d4:	ldr	x0, [x8]
    13d8:	cbz	x0, 1460 <initializeProfileForContinuousMode+0x118>
    13dc:	ldrb	w8, [x0]
    13e0:	cbz	w8, 1460 <initializeProfileForContinuousMode+0x118>
    13e4:	adrp	x8, 0 <__llvm_profile_set_file_object>
    13e8:	stur	x20, [x29, #-32]
    13ec:	add	x8, x8, #0x0
    13f0:	mov	x20, x23
    13f4:	mov	x23, x22
    13f8:	mov	x22, x21
    13fc:	ldp	w21, w27, [x8]
    1400:	ldr	w28, [x8, #8]
    1404:	orr	w8, w27, w21
    1408:	orr	w26, w8, w28
    140c:	bl	0 <strlen>
    1410:	mov	x24, x0
    1414:	cbz	w26, 144c <initializeProfileForContinuousMode+0x104>
    1418:	adrp	x26, 0 <__llvm_profile_set_file_object>
    141c:	add	x26, x26, #0x0
    1420:	mov	x0, x26
    1424:	bl	0 <strlen>
    1428:	sub	x8, x0, #0x2
    142c:	add	x0, x26, #0x10
    1430:	madd	x21, x8, x21, x24
    1434:	bl	0 <strlen>
    1438:	sub	x8, x0, #0x2
    143c:	madd	x8, x8, x27, x21
    1440:	add	x9, x8, #0x18
    1444:	cmp	w28, #0x0
    1448:	csel	x24, x8, x9, eq  // eq = none
    144c:	mov	x21, x22
    1450:	mov	x22, x23
    1454:	mov	x23, x20
    1458:	ldur	x20, [x29, #-32]
    145c:	b	1464 <initializeProfileForContinuousMode+0x11c>
    1460:	mov	x24, xzr
    1464:	add	w8, w24, #0x1
    1468:	sxtw	x8, w8
    146c:	add	x8, x8, #0xf
    1470:	and	x8, x8, #0xfffffffffffffff0
    1474:	mov	x9, sp
    1478:	sub	x0, x9, x8
    147c:	mov	sp, x0
    1480:	mov	w1, wzr
    1484:	bl	230 <getCurFilename>
    1488:	cbz	x0, 163c <initializeProfileForContinuousMode+0x2f4>
    148c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1490:	adrp	x9, 0 <__llvm_profile_set_file_object>
    1494:	ldr	w8, [x8]
    1498:	ldr	w9, [x9]
    149c:	mov	x26, x0
    14a0:	orr	w8, w9, w8
    14a4:	cbz	w8, 1500 <initializeProfileForContinuousMode+0x1b8>
    14a8:	mov	x0, x26
    14ac:	bl	0 <lprofOpenFileEx>
    14b0:	cbz	x0, 163c <initializeProfileForContinuousMode+0x2f4>
    14b4:	sub	x1, x29, #0x8
    14b8:	mov	x24, x0
    14bc:	bl	17ac <getProfileFileSizeForMerging>
    14c0:	cmn	w0, #0x1
    14c4:	b.eq	1634 <initializeProfileForContinuousMode+0x2ec>  // b.none
    14c8:	ldur	x25, [x29, #-8]
    14cc:	cbz	x25, 15a4 <initializeProfileForContinuousMode+0x25c>
    14d0:	sub	x2, x29, #0x10
    14d4:	mov	x0, x24
    14d8:	mov	x1, x25
    14dc:	bl	1898 <mmapProfileForMerging>
    14e0:	cmn	w0, #0x1
    14e4:	b.eq	1634 <initializeProfileForContinuousMode+0x2ec>  // b.none
    14e8:	ldur	x0, [x29, #-16]
    14ec:	mov	x1, x25
    14f0:	bl	0 <munmap>
    14f4:	cmn	w0, #0x1
    14f8:	b.ne	15bc <initializeProfileForContinuousMode+0x274>  // b.any
    14fc:	b	1634 <initializeProfileForContinuousMode+0x2ec>
    1500:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1504:	add	x1, x1, #0x0
    1508:	mov	x0, x26
    150c:	bl	0 <fopen>
    1510:	cbz	x0, 163c <initializeProfileForContinuousMode+0x2f4>
    1514:	mov	x24, x0
    1518:	bl	0 <ftello>
    151c:	sdiv	x8, x0, x25
    1520:	mov	x27, x0
    1524:	msub	x8, x8, x25, x0
    1528:	cbnz	x8, 16c0 <initializeProfileForContinuousMode+0x378>
    152c:	adrp	x28, 0 <__llvm_profile_set_file_object>
    1530:	mov	x0, x26
    1534:	str	x24, [x28]
    1538:	bl	bb0 <writeFile>
    153c:	cbnz	w0, 16e4 <initializeProfileForContinuousMode+0x39c>
    1540:	mov	w25, wzr
    1544:	str	xzr, [x28]
    1548:	add	x26, x27, #0x50
    154c:	b	15c4 <initializeProfileForContinuousMode+0x27c>
    1550:	adrp	x8, 0 <stderr>
    1554:	ldr	x8, [x8]
    1558:	adrp	x1, 0 <__llvm_profile_set_file_object>
    155c:	add	x1, x1, #0x0
    1560:	mov	x2, x19
    1564:	b	157c <initializeProfileForContinuousMode+0x234>
    1568:	adrp	x8, 0 <stderr>
    156c:	ldr	x8, [x8]
    1570:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1574:	add	x1, x1, #0x0
    1578:	mov	x2, x24
    157c:	ldr	x0, [x8]
    1580:	mov	w3, w25
    1584:	mov	sp, x29
    1588:	ldp	x20, x19, [sp, #80]
    158c:	ldp	x22, x21, [sp, #64]
    1590:	ldp	x24, x23, [sp, #48]
    1594:	ldp	x26, x25, [sp, #32]
    1598:	ldp	x28, x27, [sp, #16]
    159c:	ldp	x29, x30, [sp], #96
    15a0:	b	0 <fprintf>
    15a4:	adrp	x25, 0 <__llvm_profile_set_file_object>
    15a8:	mov	x0, x26
    15ac:	str	x24, [x25]
    15b0:	bl	bb0 <writeFile>
    15b4:	cbnz	w0, 171c <initializeProfileForContinuousMode+0x3d4>
    15b8:	str	xzr, [x25]
    15bc:	mov	w25, #0x1                   	// #1
    15c0:	mov	w26, #0x50                  	// #80
    15c4:	sub	x27, x21, x19
    15c8:	mov	x0, x24
    15cc:	sub	x22, x23, x22
    15d0:	asr	x23, x27, #3
    15d4:	bl	0 <fileno>
    15d8:	mov	w21, w0
    15dc:	sub	x3, x29, #0x8
    15e0:	sub	x4, x29, #0x10
    15e4:	sub	x5, x29, #0x18
    15e8:	mov	x0, x20
    15ec:	mov	x1, x23
    15f0:	mov	x2, x22
    15f4:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
    15f8:	ldp	x8, x9, [x29, #-16]
    15fc:	mov	w10, #0x30                  	// #48
    1600:	madd	x10, x20, x10, x26
    1604:	mov	w2, #0x3                   	// #3
    1608:	add	x22, x8, x27
    160c:	add	x20, x10, x9
    1610:	mov	w3, #0x11                  	// #17
    1614:	mov	x0, x19
    1618:	mov	x1, x22
    161c:	mov	w4, w21
    1620:	mov	x5, x20
    1624:	bl	0 <mmap>
    1628:	cmp	x19, x0
    162c:	b.ne	165c <initializeProfileForContinuousMode+0x314>  // b.any
    1630:	cbz	w25, 169c <initializeProfileForContinuousMode+0x354>
    1634:	mov	x0, x24
    1638:	bl	0 <lprofUnlockFileHandle>
    163c:	mov	sp, x29
    1640:	ldp	x20, x19, [sp, #80]
    1644:	ldp	x22, x21, [sp, #64]
    1648:	ldp	x24, x23, [sp, #48]
    164c:	ldp	x26, x25, [sp, #32]
    1650:	ldp	x28, x27, [sp, #16]
    1654:	ldp	x29, x30, [sp], #96
    1658:	ret
    165c:	adrp	x8, 0 <stderr>
    1660:	ldr	x8, [x8]
    1664:	ldr	x23, [x8]
    1668:	bl	0 <__errno_location>
    166c:	ldr	w0, [x0]
    1670:	bl	0 <strerror>
    1674:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1678:	mov	x2, x0
    167c:	add	x1, x1, #0x0
    1680:	mov	x0, x23
    1684:	mov	x3, x19
    1688:	mov	x4, x22
    168c:	mov	w5, w21
    1690:	mov	x6, x20
    1694:	bl	0 <fprintf>
    1698:	cbnz	w25, 1634 <initializeProfileForContinuousMode+0x2ec>
    169c:	adrp	x8, 0 <stderr>
    16a0:	ldr	x8, [x8]
    16a4:	adrp	x1, 0 <__llvm_profile_set_file_object>
    16a8:	adrp	x2, 0 <__llvm_profile_set_file_object>
    16ac:	add	x1, x1, #0x0
    16b0:	ldr	x0, [x8]
    16b4:	add	x2, x2, #0x0
    16b8:	bl	0 <fprintf>
    16bc:	b	1634 <initializeProfileForContinuousMode+0x2ec>
    16c0:	adrp	x8, 0 <stderr>
    16c4:	ldr	x8, [x8]
    16c8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    16cc:	add	x1, x1, #0x0
    16d0:	mov	x2, x27
    16d4:	ldr	x0, [x8]
    16d8:	mov	w3, w25
    16dc:	bl	0 <fprintf>
    16e0:	b	163c <initializeProfileForContinuousMode+0x2f4>
    16e4:	adrp	x8, 0 <stderr>
    16e8:	ldr	x8, [x8]
    16ec:	ldr	x19, [x8]
    16f0:	bl	0 <__errno_location>
    16f4:	ldr	w0, [x0]
    16f8:	bl	0 <strerror>
    16fc:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1700:	mov	x3, x0
    1704:	add	x1, x1, #0x0
    1708:	mov	x0, x19
    170c:	mov	x2, x26
    1710:	bl	0 <fprintf>
    1714:	str	xzr, [x28]
    1718:	b	163c <initializeProfileForContinuousMode+0x2f4>
    171c:	adrp	x8, 0 <stderr>
    1720:	ldr	x8, [x8]
    1724:	ldr	x19, [x8]
    1728:	bl	0 <__errno_location>
    172c:	ldr	w0, [x0]
    1730:	bl	0 <strerror>
    1734:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1738:	mov	x3, x0
    173c:	add	x1, x1, #0x0
    1740:	mov	x0, x19
    1744:	mov	x2, x26
    1748:	bl	0 <fprintf>
    174c:	str	xzr, [x25]
    1750:	b	1634 <initializeProfileForContinuousMode+0x2ec>

0000000000001754 <createProfileDir>:
    1754:	stp	x29, x30, [sp, #-32]!
    1758:	stp	x20, x19, [sp, #16]
    175c:	mov	x29, sp
    1760:	mov	x19, x0
    1764:	bl	0 <strlen>
    1768:	mov	x20, x0
    176c:	mov	x0, x19
    1770:	bl	0 <lprofFindFirstDirSeparator>
    1774:	cbz	x0, 179c <createProfileDir+0x48>
    1778:	add	x9, x20, #0x10
    177c:	mov	x8, sp
    1780:	and	x9, x9, #0xfffffffffffffff0
    1784:	sub	x0, x8, x9
    1788:	add	x2, x20, #0x1
    178c:	mov	sp, x0
    1790:	mov	x1, x19
    1794:	bl	0 <strncpy>
    1798:	bl	0 <__llvm_profile_recursive_mkdir>
    179c:	mov	sp, x29
    17a0:	ldp	x20, x19, [sp, #16]
    17a4:	ldp	x29, x30, [sp], #32
    17a8:	ret

00000000000017ac <getProfileFileSizeForMerging>:
    17ac:	stp	x29, x30, [sp, #-32]!
    17b0:	stp	x20, x19, [sp, #16]
    17b4:	mov	x29, sp
    17b8:	mov	x19, x1
    17bc:	mov	w2, #0x2                   	// #2
    17c0:	mov	x1, xzr
    17c4:	mov	x20, x0
    17c8:	bl	0 <fseek>
    17cc:	cmn	w0, #0x1
    17d0:	b.eq	1818 <getProfileFileSizeForMerging+0x6c>  // b.none
    17d4:	mov	x0, x20
    17d8:	bl	0 <ftell>
    17dc:	str	x0, [x19]
    17e0:	mov	x0, x20
    17e4:	mov	x1, xzr
    17e8:	mov	w2, wzr
    17ec:	bl	0 <fseek>
    17f0:	cmn	w0, #0x1
    17f4:	b.eq	1844 <getProfileFileSizeForMerging+0x98>  // b.none
    17f8:	ldr	x8, [x19]
    17fc:	sub	x8, x8, #0x1
    1800:	cmp	x8, #0x4e
    1804:	b.ls	1870 <getProfileFileSizeForMerging+0xc4>  // b.plast
    1808:	mov	w0, wzr
    180c:	ldp	x20, x19, [sp, #16]
    1810:	ldp	x29, x30, [sp], #32
    1814:	ret
    1818:	adrp	x8, 0 <stderr>
    181c:	ldr	x8, [x8]
    1820:	ldr	x19, [x8]
    1824:	bl	0 <__errno_location>
    1828:	ldr	w0, [x0]
    182c:	bl	0 <strerror>
    1830:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1834:	mov	x2, x0
    1838:	add	x1, x1, #0x0
    183c:	mov	x0, x19
    1840:	b	188c <getProfileFileSizeForMerging+0xe0>
    1844:	adrp	x8, 0 <stderr>
    1848:	ldr	x8, [x8]
    184c:	ldr	x19, [x8]
    1850:	bl	0 <__errno_location>
    1854:	ldr	w0, [x0]
    1858:	bl	0 <strerror>
    185c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1860:	mov	x2, x0
    1864:	add	x1, x1, #0x0
    1868:	mov	x0, x19
    186c:	b	188c <getProfileFileSizeForMerging+0xe0>
    1870:	adrp	x8, 0 <stderr>
    1874:	ldr	x8, [x8]
    1878:	adrp	x1, 0 <__llvm_profile_set_file_object>
    187c:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1880:	add	x1, x1, #0x0
    1884:	ldr	x0, [x8]
    1888:	add	x2, x2, #0x0
    188c:	bl	0 <fprintf>
    1890:	mov	w0, #0xffffffff            	// #-1
    1894:	b	180c <getProfileFileSizeForMerging+0x60>

0000000000001898 <mmapProfileForMerging>:
    1898:	stp	x29, x30, [sp, #-32]!
    189c:	stp	x20, x19, [sp, #16]
    18a0:	mov	x29, sp
    18a4:	mov	x20, x2
    18a8:	mov	x19, x1
    18ac:	bl	0 <fileno>
    18b0:	mov	w4, w0
    18b4:	mov	w2, #0x1                   	// #1
    18b8:	mov	w3, #0x1                   	// #1
    18bc:	mov	x0, xzr
    18c0:	mov	x1, x19
    18c4:	mov	x5, xzr
    18c8:	bl	0 <mmap>
    18cc:	cmn	x0, #0x1
    18d0:	str	x0, [x20]
    18d4:	b.eq	18f0 <mmapProfileForMerging+0x58>  // b.none
    18d8:	mov	x1, x19
    18dc:	bl	0 <__llvm_profile_check_compatibility>
    18e0:	cbnz	w0, 191c <mmapProfileForMerging+0x84>
    18e4:	ldp	x20, x19, [sp, #16]
    18e8:	ldp	x29, x30, [sp], #32
    18ec:	ret
    18f0:	adrp	x8, 0 <stderr>
    18f4:	ldr	x8, [x8]
    18f8:	ldr	x19, [x8]
    18fc:	bl	0 <__errno_location>
    1900:	ldr	w0, [x0]
    1904:	bl	0 <strerror>
    1908:	adrp	x1, 0 <__llvm_profile_set_file_object>
    190c:	mov	x2, x0
    1910:	add	x1, x1, #0x0
    1914:	mov	x0, x19
    1918:	b	1944 <mmapProfileForMerging+0xac>
    191c:	ldr	x0, [x20]
    1920:	mov	x1, x19
    1924:	bl	0 <munmap>
    1928:	adrp	x8, 0 <stderr>
    192c:	ldr	x8, [x8]
    1930:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1934:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1938:	add	x1, x1, #0x0
    193c:	ldr	x0, [x8]
    1940:	add	x2, x2, #0x0
    1944:	bl	0 <fprintf>
    1948:	mov	w0, #0xffffffff            	// #-1
    194c:	b	18e4 <mmapProfileForMerging+0x4c>

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	bl	0 <__llvm_profile_end_counters>
  14:	mov	x19, x0
  18:	bl	0 <__llvm_profile_begin_counters>
  1c:	sub	x21, x19, x0
  20:	bl	0 <__llvm_profile_begin_data>
  24:	mov	x19, x0
  28:	bl	0 <__llvm_profile_end_data>
  2c:	mov	x1, x0
  30:	mov	x0, x19
  34:	bl	0 <__llvm_profile_get_data_size>
  38:	mov	x19, x0
  3c:	bl	0 <__llvm_profile_end_names>
  40:	mov	x20, x0
  44:	bl	0 <__llvm_profile_begin_names>
  48:	sub	w22, w20, w0
  4c:	bl	0 <__llvm_profile_end_vnodes>
  50:	mov	x20, x0
  54:	bl	0 <__llvm_profile_begin_vnodes>
  58:	sub	x8, x20, x0
  5c:	lsr	x20, x8, #3
  60:	bl	0 <__llvm_profile_begin_data>
  64:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  68:	movk	x11, #0xac00
  6c:	lsl	x8, x22, #40
  70:	lsl	x9, x21, #27
  74:	lsl	x10, x19, #20
  78:	mul	x11, x20, x11
  7c:	cbz	x19, 88 <lprofGetLoadModuleSignature+0x88>
  80:	ldr	x12, [x0]
  84:	b	8c <lprofGetLoadModuleSignature+0x8c>
  88:	mov	x12, xzr
  8c:	add	x9, x10, x9
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	add	x8, x9, x8
  9c:	add	x8, x8, x11
  a0:	add	x0, x8, x12
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <__llvm_profile_check_compatibility>:
  ac:	stp	x29, x30, [sp, #-64]!
  b0:	str	x23, [sp, #16]
  b4:	stp	x22, x21, [sp, #32]
  b8:	stp	x20, x19, [sp, #48]
  bc:	mov	x29, sp
  c0:	cmp	x1, #0x50
  c4:	b.cc	180 <__llvm_profile_check_compatibility+0xd4>  // b.lo, b.ul, b.last
  c8:	ldr	x22, [x0, #16]
  cc:	ldr	x21, [x0]
  d0:	mov	x20, x1
  d4:	mov	x19, x0
  d8:	bl	0 <__llvm_profile_get_magic>
  dc:	cmp	x21, x0
  e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  e4:	ldr	x21, [x19, #8]
  e8:	bl	0 <__llvm_profile_get_version>
  ec:	cmp	x21, x0
  f0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  f4:	ldr	x23, [x19, #16]
  f8:	bl	0 <__llvm_profile_begin_data>
  fc:	mov	x21, x0
 100:	bl	0 <__llvm_profile_end_data>
 104:	mov	x1, x0
 108:	mov	x0, x21
 10c:	bl	0 <__llvm_profile_get_data_size>
 110:	cmp	x23, x0
 114:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 118:	ldr	x23, [x19, #32]
 11c:	bl	0 <__llvm_profile_end_counters>
 120:	mov	x21, x0
 124:	bl	0 <__llvm_profile_begin_counters>
 128:	sub	x8, x21, x0
 12c:	cmp	x23, x8, asr #3
 130:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 134:	ldr	x23, [x19, #48]
 138:	bl	0 <__llvm_profile_end_names>
 13c:	mov	x21, x0
 140:	bl	0 <__llvm_profile_begin_names>
 144:	sub	x8, x21, x0
 148:	cmp	x23, x8
 14c:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 150:	ldr	x8, [x19, #72]
 154:	cmp	x8, #0x1
 158:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 15c:	ldr	x8, [x19, #16]
 160:	ldr	x9, [x19, #48]
 164:	ldr	x10, [x19, #32]
 168:	mov	w11, #0x30                  	// #48
 16c:	madd	x8, x8, x11, x9
 170:	add	x8, x8, x10
 174:	add	x8, x8, #0x50
 178:	cmp	x8, x20
 17c:	b.ls	198 <__llvm_profile_check_compatibility+0xec>  // b.plast
 180:	mov	w0, #0x1                   	// #1
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	add	x19, x19, #0x50
 19c:	mov	w8, #0x30                  	// #48
 1a0:	madd	x20, x22, x8, x19
 1a4:	bl	0 <__llvm_profile_begin_data>
 1a8:	cmp	x20, x19
 1ac:	b.ls	1fc <__llvm_profile_check_compatibility+0x150>  // b.plast
 1b0:	mov	x8, x0
 1b4:	ldr	x9, [x19]
 1b8:	ldr	x10, [x8]
 1bc:	cmp	x9, x10
 1c0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1c4:	ldr	x9, [x19, #8]
 1c8:	ldr	x10, [x8, #8]
 1cc:	cmp	x9, x10
 1d0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1d4:	ldr	w9, [x19, #40]
 1d8:	ldr	w10, [x8, #40]
 1dc:	cmp	w9, w10
 1e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1e4:	add	x19, x19, #0x30
 1e8:	mov	w0, wzr
 1ec:	cmp	x19, x20
 1f0:	add	x8, x8, #0x30
 1f4:	b.cc	1b4 <__llvm_profile_check_compatibility+0x108>  // b.lo, b.ul, b.last
 1f8:	b	184 <__llvm_profile_check_compatibility+0xd8>
 1fc:	mov	w0, wzr
 200:	b	184 <__llvm_profile_check_compatibility+0xd8>

0000000000000204 <__llvm_profile_merge_from_buffer>:
 204:	stp	x29, x30, [sp, #-80]!
 208:	stp	x26, x25, [sp, #16]
 20c:	stp	x24, x23, [sp, #32]
 210:	stp	x22, x21, [sp, #48]
 214:	stp	x20, x19, [sp, #64]
 218:	mov	x29, sp
 21c:	ldr	x21, [x0, #48]
 220:	ldr	x25, [x0, #16]
 224:	ldr	x26, [x0, #32]
 228:	mov	x19, x0
 22c:	add	x23, x0, #0x50
 230:	mov	w8, #0x30                  	// #48
 234:	mov	x0, x21
 238:	madd	x24, x25, x8, x23
 23c:	bl	0 <__llvm_profile_get_num_padding_bytes>
 240:	mov	w22, w0
 244:	bl	0 <__llvm_profile_begin_data>
 248:	cmp	x24, x23
 24c:	b.ls	384 <__llvm_profile_merge_from_buffer+0x180>  // b.plast
 250:	add	x8, x24, x26, lsl #3
 254:	mov	w9, #0x30                  	// #48
 258:	add	x8, x8, x21
 25c:	madd	x9, x25, x9, x19
 260:	mov	x20, x0
 264:	add	x21, x8, w22, uxtb
 268:	add	x22, x9, #0x50
 26c:	add	x25, x9, #0x60
 270:	adrp	x26, 8 <lprofGetLoadModuleSignature+0x8>
 274:	b	288 <__llvm_profile_merge_from_buffer+0x84>
 278:	add	x23, x23, #0x30
 27c:	cmp	x23, x24
 280:	add	x20, x20, #0x30
 284:	b.cs	384 <__llvm_profile_merge_from_buffer+0x180>  // b.hs, b.nlast
 288:	ldr	w8, [x23, #40]
 28c:	cbz	w8, 304 <__llvm_profile_merge_from_buffer+0x100>
 290:	ldr	x10, [x23, #16]
 294:	ldr	x11, [x19, #56]
 298:	ldr	x9, [x20, #16]
 29c:	cmp	w8, #0x4
 2a0:	sub	x12, x10, x11
 2a4:	lsr	x10, x12, #3
 2a8:	b.cc	2d4 <__llvm_profile_merge_from_buffer+0xd0>  // b.lo, b.ul, b.last
 2ac:	lsl	x11, x8, #3
 2b0:	and	x12, x12, #0xfffffffffffffff8
 2b4:	add	x13, x12, x11
 2b8:	add	x13, x22, x13
 2bc:	cmp	x13, x9
 2c0:	b.ls	344 <__llvm_profile_merge_from_buffer+0x140>  // b.plast
 2c4:	add	x11, x9, x11
 2c8:	add	x12, x22, x12
 2cc:	cmp	x12, x11
 2d0:	b.cs	344 <__llvm_profile_merge_from_buffer+0x140>  // b.hs, b.nlast
 2d4:	mov	x11, xzr
 2d8:	lsl	x12, x11, #3
 2dc:	add	x10, x12, x10, lsl #3
 2e0:	add	x9, x9, x12
 2e4:	add	x10, x22, x10
 2e8:	sub	x8, x8, x11
 2ec:	ldr	x11, [x10], #8
 2f0:	ldr	x12, [x9]
 2f4:	subs	x8, x8, #0x1
 2f8:	add	x11, x12, x11
 2fc:	str	x11, [x9], #8
 300:	b.ne	2ec <__llvm_profile_merge_from_buffer+0xe8>  // b.any
 304:	ldr	x8, [x26]
 308:	cbz	x8, 278 <__llvm_profile_merge_from_buffer+0x74>
 30c:	ldrh	w9, [x23, #44]
 310:	ldrh	w10, [x23, #46]
 314:	cmp	w9, #0x0
 318:	cset	w9, ne  // ne = any
 31c:	cmp	w10, #0x0
 320:	csetm	w10, ne  // ne = any
 324:	cmp	w9, w10
 328:	b.eq	278 <__llvm_profile_merge_from_buffer+0x74>  // b.none
 32c:	mov	x0, x21
 330:	mov	x1, x20
 334:	blr	x8
 338:	ldr	w8, [x21]
 33c:	add	x21, x21, x8
 340:	b	278 <__llvm_profile_merge_from_buffer+0x74>
 344:	and	x11, x8, #0xfffffffc
 348:	add	x12, x25, x10, lsl #3
 34c:	add	x13, x9, #0x10
 350:	mov	x14, x11
 354:	ldp	q0, q1, [x12, #-16]
 358:	ldp	q2, q3, [x13, #-16]
 35c:	subs	x14, x14, #0x4
 360:	add	x12, x12, #0x20
 364:	add	v0.2d, v2.2d, v0.2d
 368:	add	v1.2d, v3.2d, v1.2d
 36c:	stp	q0, q1, [x13, #-16]
 370:	add	x13, x13, #0x20
 374:	b.ne	354 <__llvm_profile_merge_from_buffer+0x150>  // b.any
 378:	cmp	x11, x8
 37c:	b.eq	304 <__llvm_profile_merge_from_buffer+0x100>  // b.none
 380:	b	2d8 <__llvm_profile_merge_from_buffer+0xd4>
 384:	ldp	x20, x19, [sp, #64]
 388:	ldp	x22, x21, [sp, #48]
 38c:	ldp	x24, x23, [sp, #32]
 390:	ldp	x26, x25, [sp, #16]
 394:	ldp	x29, x30, [sp], #80
 398:	ret

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	bl	0 <getFirstValueProfRecord>
  28:	ldr	w8, [x20, #4]
  2c:	cbz	w8, c8 <lprofMergeValueProfData+0xc8>
  30:	mov	x21, x0
  34:	mov	w24, wzr
  38:	mov	w22, wzr
  3c:	b	5c <lprofMergeValueProfData+0x5c>
  40:	mov	x0, x21
  44:	bl	0 <getValueProfRecordNext>
  48:	ldr	w8, [x20, #4]
  4c:	add	w24, w24, #0x1
  50:	mov	x21, x0
  54:	cmp	w24, w8
  58:	b.cs	c8 <lprofMergeValueProfData+0xc8>  // b.hs, b.nlast
  5c:	mov	x0, x21
  60:	bl	0 <getValueProfRecordValueData>
  64:	ldr	w8, [x21, #4]
  68:	cbz	w8, 40 <lprofMergeValueProfData+0x40>
  6c:	mov	x23, x0
  70:	mov	x25, xzr
  74:	mov	w26, wzr
  78:	b	8c <lprofMergeValueProfData+0x8c>
  7c:	add	x25, x25, #0x1
  80:	cmp	x25, w8, uxtw
  84:	add	w22, w22, #0x1
  88:	b.cs	40 <lprofMergeValueProfData+0x40>  // b.hs, b.nlast
  8c:	add	x9, x21, x25
  90:	ldrb	w27, [x9, #8]
  94:	cbz	w27, 7c <lprofMergeValueProfData+0x7c>
  98:	add	w28, w26, w27
  9c:	add	x8, x23, w26, uxtw #4
  a0:	ldp	x0, x3, [x8]
  a4:	mov	x1, x19
  a8:	mov	w2, w22
  ac:	bl	0 <__llvm_profile_instrument_target_value>
  b0:	subs	w27, w27, #0x1
  b4:	add	w26, w26, #0x1
  b8:	b.ne	9c <lprofMergeValueProfData+0x9c>  // b.any
  bc:	ldr	w8, [x21, #4]
  c0:	mov	w26, w28
  c4:	b	7c <lprofMergeValueProfData+0x7c>
  c8:	ldp	x20, x19, [sp, #80]
  cc:	ldp	x22, x21, [sp, #64]
  d0:	ldp	x24, x23, [sp, #48]
  d4:	ldp	x26, x25, [sp, #32]
  d8:	ldp	x28, x27, [sp, #16]
  dc:	ldp	x29, x30, [sp], #96
  e0:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	w2, 5c <lprofBufferWriter+0x5c>
  14:	mov	x19, x0
  18:	mov	w21, w2
  1c:	add	x22, x1, #0x8
  20:	b	3c <lprofBufferWriter+0x3c>
  24:	ldr	x8, [x19, #8]
  28:	subs	x21, x21, #0x1
  2c:	add	x22, x22, #0x20
  30:	add	x8, x8, x20
  34:	str	x8, [x19, #8]
  38:	b.eq	5c <lprofBufferWriter+0x5c>  // b.none
  3c:	ldp	x8, x9, [x22]
  40:	ldur	x1, [x22, #-8]
  44:	mul	x20, x9, x8
  48:	cbz	x1, 24 <lprofBufferWriter+0x24>
  4c:	ldr	x0, [x19, #8]
  50:	mov	x2, x20
  54:	bl	0 <memcpy>
  58:	b	24 <lprofBufferWriter+0x24>
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	mov	w0, wzr
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

0000000000000070 <lprofCreateBufferIO>:
  70:	adrp	x9, 8 <lprofBufferWriter+0x8>
  74:	ldr	x9, [x9]
  78:	adrp	x10, 10 <lprofBufferWriter+0x10>
  7c:	ldr	w10, [x10]
  80:	adrp	x11, 0 <lprofBufferWriter>
  84:	adrp	x8, 0 <lprofBufferWriter>
  88:	add	x11, x11, #0x0
  8c:	cmp	x9, #0x0
  90:	add	x8, x8, #0x0
  94:	csel	x9, x11, x9, eq  // eq = none
  98:	mov	w11, #0x2000                	// #8192
  9c:	str	x0, [x8]
  a0:	csel	w10, w11, w10, eq  // eq = none
  a4:	mov	x0, x8
  a8:	str	wzr, [x8, #8]
  ac:	str	x9, [x8, #16]
  b0:	stp	w10, wzr, [x8, #24]
  b4:	ret

00000000000000b8 <lprofDeleteBufferIO>:
  b8:	stp	x29, x30, [sp, #-32]!
  bc:	stp	x20, x19, [sp, #16]
  c0:	mov	x29, sp
  c4:	ldr	w8, [x0, #8]
  c8:	adrp	x19, 0 <lprofBufferWriter>
  cc:	cbz	w8, dc <lprofDeleteBufferIO+0x24>
  d0:	ldr	x8, [x19]
  d4:	ldr	x0, [x0]
  d8:	blr	x8
  dc:	adrp	x20, 8 <lprofBufferWriter+0x8>
  e0:	ldr	x0, [x20]
  e4:	cbz	x0, fc <lprofDeleteBufferIO+0x44>
  e8:	ldr	x8, [x19]
  ec:	blr	x8
  f0:	adrp	x8, 10 <lprofBufferWriter+0x10>
  f4:	str	xzr, [x20]
  f8:	str	wzr, [x8]
  fc:	ldp	x20, x19, [sp, #16]
 100:	ldp	x29, x30, [sp], #32
 104:	ret

0000000000000108 <lprofBufferIOWrite>:
 108:	sub	sp, sp, #0x60
 10c:	stp	x29, x30, [sp, #48]
 110:	str	x21, [sp, #64]
 114:	stp	x20, x19, [sp, #80]
 118:	add	x29, sp, #0x30
 11c:	ldp	w9, w8, [x0, #24]
 120:	mov	w20, w2
 124:	mov	x19, x0
 128:	mov	x21, x1
 12c:	cbz	w8, 174 <lprofBufferIOWrite+0x6c>
 130:	add	w10, w8, w20
 134:	cmp	w10, w9
 138:	b.ls	174 <lprofBufferIOWrite+0x6c>  // b.plast
 13c:	ldr	x9, [x19, #16]
 140:	mov	w10, #0x1                   	// #1
 144:	stp	x10, x8, [sp, #24]
 148:	str	wzr, [sp, #40]
 14c:	str	x9, [sp, #16]
 150:	ldr	x0, [x19]
 154:	add	x1, sp, #0x10
 158:	mov	w2, #0x1                   	// #1
 15c:	ldr	x8, [x0]
 160:	blr	x8
 164:	cbnz	w0, 1a8 <lprofBufferIOWrite+0xa0>
 168:	ldr	w9, [x19, #24]
 16c:	mov	w8, wzr
 170:	str	wzr, [x19, #28]
 174:	mov	w10, #0x1                   	// #1
 178:	mov	w11, w20
 17c:	cmp	w9, w20
 180:	stp	x21, x10, [sp, #16]
 184:	str	x11, [sp, #32]
 188:	str	wzr, [sp, #40]
 18c:	b.cs	1b0 <lprofBufferIOWrite+0xa8>  // b.hs, b.nlast
 190:	ldr	x0, [x19]
 194:	add	x1, sp, #0x10
 198:	mov	w2, #0x1                   	// #1
 19c:	ldr	x8, [x0]
 1a0:	blr	x8
 1a4:	cbz	w0, 1f0 <lprofBufferIOWrite+0xe8>
 1a8:	mov	w0, #0xffffffff            	// #-1
 1ac:	b	1f4 <lprofBufferIOWrite+0xec>
 1b0:	ldr	x9, [x19, #16]
 1b4:	mov	x0, sp
 1b8:	add	x1, x9, w8, uxtw
 1bc:	bl	0 <initBufferWriter>
 1c0:	ldp	x9, x8, [sp, #24]
 1c4:	ldr	x1, [sp, #16]
 1c8:	mul	x20, x8, x9
 1cc:	cbz	x1, 1dc <lprofBufferIOWrite+0xd4>
 1d0:	ldr	x0, [sp, #8]
 1d4:	mov	x2, x20
 1d8:	bl	0 <memcpy>
 1dc:	ldr	w8, [sp, #8]
 1e0:	ldr	w9, [x19, #16]
 1e4:	add	w8, w8, w20
 1e8:	sub	w8, w8, w9
 1ec:	str	w8, [x19, #28]
 1f0:	mov	w0, wzr
 1f4:	ldp	x20, x19, [sp, #80]
 1f8:	ldr	x21, [sp, #64]
 1fc:	ldp	x29, x30, [sp, #48]
 200:	add	sp, sp, #0x60
 204:	ret

0000000000000208 <lprofBufferIOFlush>:
 208:	sub	sp, sp, #0x40
 20c:	stp	x29, x30, [sp, #32]
 210:	str	x19, [sp, #48]
 214:	add	x29, sp, #0x20
 218:	ldr	w8, [x0, #28]
 21c:	cbz	w8, 258 <lprofBufferIOFlush+0x50>
 220:	ldr	x9, [x0, #16]
 224:	mov	w10, #0x1                   	// #1
 228:	stp	x10, x8, [sp, #8]
 22c:	str	wzr, [sp, #24]
 230:	str	x9, [sp]
 234:	mov	x19, x0
 238:	ldr	x0, [x0]
 23c:	mov	x1, sp
 240:	mov	w2, #0x1                   	// #1
 244:	ldr	x8, [x0]
 248:	blr	x8
 24c:	cbz	w0, 260 <lprofBufferIOFlush+0x58>
 250:	mov	w0, #0xffffffff            	// #-1
 254:	b	264 <lprofBufferIOFlush+0x5c>
 258:	mov	w0, wzr
 25c:	b	264 <lprofBufferIOFlush+0x5c>
 260:	str	wzr, [x19, #28]
 264:	ldr	x19, [sp, #48]
 268:	ldp	x29, x30, [sp, #32]
 26c:	add	sp, sp, #0x40
 270:	ret

0000000000000274 <lprofWriteData>:
 274:	sub	sp, sp, #0x60
 278:	stp	x29, x30, [sp, #16]
 27c:	stp	x26, x25, [sp, #32]
 280:	stp	x24, x23, [sp, #48]
 284:	stp	x22, x21, [sp, #64]
 288:	stp	x20, x19, [sp, #80]
 28c:	add	x29, sp, #0x10
 290:	mov	w19, w2
 294:	mov	x20, x1
 298:	mov	x21, x0
 29c:	bl	0 <__llvm_profile_begin_data>
 2a0:	mov	x22, x0
 2a4:	bl	0 <__llvm_profile_end_data>
 2a8:	mov	x23, x0
 2ac:	bl	0 <__llvm_profile_begin_counters>
 2b0:	mov	x24, x0
 2b4:	bl	0 <__llvm_profile_end_counters>
 2b8:	mov	x25, x0
 2bc:	bl	0 <__llvm_profile_begin_names>
 2c0:	mov	x26, x0
 2c4:	bl	0 <__llvm_profile_end_names>
 2c8:	mov	x7, x0
 2cc:	mov	x0, x21
 2d0:	mov	x1, x22
 2d4:	mov	x2, x23
 2d8:	mov	x3, x24
 2dc:	mov	x4, x25
 2e0:	mov	x5, x20
 2e4:	mov	x6, x26
 2e8:	str	w19, [sp]
 2ec:	bl	30c <lprofWriteDataImpl>
 2f0:	ldp	x20, x19, [sp, #80]
 2f4:	ldp	x22, x21, [sp, #64]
 2f8:	ldp	x24, x23, [sp, #48]
 2fc:	ldp	x26, x25, [sp, #32]
 300:	ldp	x29, x30, [sp, #16]
 304:	add	sp, sp, #0x60
 308:	ret

000000000000030c <lprofWriteDataImpl>:
 30c:	sub	sp, sp, #0x1d0
 310:	stp	x29, x30, [sp, #368]
 314:	stp	x28, x27, [sp, #384]
 318:	stp	x26, x25, [sp, #400]
 31c:	stp	x24, x23, [sp, #416]
 320:	stp	x22, x21, [sp, #432]
 324:	stp	x20, x19, [sp, #448]
 328:	add	x29, sp, #0x170
 32c:	mov	x21, x1
 330:	mov	x22, x0
 334:	mov	x0, x1
 338:	mov	x1, x2
 33c:	mov	x26, x7
 340:	mov	x23, x6
 344:	mov	x19, x5
 348:	mov	x25, x4
 34c:	mov	x24, x3
 350:	mov	x20, x2
 354:	bl	0 <__llvm_profile_get_data_size>
 358:	cbz	x0, 440 <lprofWriteDataImpl+0x134>
 35c:	ldr	w28, [x29, #96]
 360:	sub	x8, x25, x24
 364:	asr	x25, x8, #3
 368:	sub	x26, x26, x23
 36c:	sub	x3, x29, #0x80
 370:	sub	x4, x29, #0x88
 374:	sub	x5, x29, #0x90
 378:	mov	x1, x25
 37c:	mov	x2, x26
 380:	mov	x27, x0
 384:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 388:	bl	0 <__llvm_profile_get_magic>
 38c:	stur	x0, [x29, #-120]
 390:	bl	0 <__llvm_profile_get_version>
 394:	adrp	x12, 0 <lprofBufferWriter>
 398:	ldp	x9, x8, [x29, #-136]
 39c:	ldr	q0, [x12]
 3a0:	ldur	x12, [x29, #-144]
 3a4:	sub	x11, x29, #0x78
 3a8:	cmp	w28, #0x0
 3ac:	str	x11, [sp]
 3b0:	mov	w11, #0x8                   	// #8
 3b4:	mov	w10, #0x1                   	// #1
 3b8:	mov	w13, #0x30                  	// #48
 3bc:	stp	x11, x25, [sp, #104]
 3c0:	csel	x11, x23, xzr, eq  // eq = none
 3c4:	stp	x0, x27, [x29, #-112]
 3c8:	stp	x24, x23, [x29, #-64]
 3cc:	str	wzr, [sp, #24]
 3d0:	str	wzr, [sp, #56]
 3d4:	str	wzr, [sp, #120]
 3d8:	stp	x10, x26, [sp, #168]
 3dc:	str	wzr, [sp, #184]
 3e0:	stur	x10, [x29, #-48]
 3e4:	str	x21, [sp, #32]
 3e8:	stp	x13, x27, [sp, #40]
 3ec:	stp	xzr, x10, [sp, #64]
 3f0:	str	w10, [sp, #88]
 3f4:	str	x24, [sp, #96]
 3f8:	stp	xzr, x10, [sp, #128]
 3fc:	str	w10, [sp, #152]
 400:	stp	xzr, x10, [sp, #192]
 404:	str	x11, [sp, #160]
 408:	stp	x8, x25, [x29, #-96]
 40c:	stp	x9, x26, [x29, #-80]
 410:	str	x8, [sp, #80]
 414:	str	x9, [sp, #144]
 418:	str	x12, [sp, #208]
 41c:	stur	q0, [sp, #8]
 420:	str	w10, [sp, #216]
 424:	ldr	x8, [x22]
 428:	mov	x1, sp
 42c:	mov	w2, #0x7                   	// #7
 430:	mov	x0, x22
 434:	blr	x8
 438:	cbz	w0, 460 <lprofWriteDataImpl+0x154>
 43c:	mov	w0, #0xffffffff            	// #-1
 440:	ldp	x20, x19, [sp, #448]
 444:	ldp	x22, x21, [sp, #432]
 448:	ldp	x24, x23, [sp, #416]
 44c:	ldp	x26, x25, [sp, #400]
 450:	ldp	x28, x27, [sp, #384]
 454:	ldp	x29, x30, [sp, #368]
 458:	add	sp, sp, #0x1d0
 45c:	ret
 460:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 464:	mov	w8, w0
 468:	mov	w0, wzr
 46c:	cbz	x19, 440 <lprofWriteDataImpl+0x134>
 470:	cbnz	w8, 440 <lprofWriteDataImpl+0x134>
 474:	adrp	x23, 8 <lprofBufferWriter+0x8>
 478:	ldr	x9, [x23]
 47c:	adrp	x24, 10 <lprofBufferWriter+0x10>
 480:	ldr	w10, [x24]
 484:	adrp	x8, 0 <lprofBufferWriter>
 488:	add	x8, x8, #0x0
 48c:	cmp	x9, #0x0
 490:	adrp	x25, 0 <lprofBufferWriter>
 494:	csel	x8, x8, x9, eq  // eq = none
 498:	mov	w9, #0x2000                	// #8192
 49c:	add	x25, x25, #0x0
 4a0:	csel	w9, w9, w10, eq  // eq = none
 4a4:	cmp	x21, x20
 4a8:	str	x22, [x25]
 4ac:	str	wzr, [x25, #8]
 4b0:	str	x8, [x25, #16]
 4b4:	stp	w9, wzr, [x25, #24]
 4b8:	b.cs	534 <lprofWriteDataImpl+0x228>  // b.hs, b.nlast
 4bc:	mov	x0, x19
 4c0:	mov	x1, x21
 4c4:	bl	558 <writeOneValueProfData>
 4c8:	cbnz	w0, 43c <lprofWriteDataImpl+0x130>
 4cc:	add	x21, x21, #0x30
 4d0:	cmp	x21, x20
 4d4:	b.cc	4bc <lprofWriteDataImpl+0x1b0>  // b.lo, b.ul, b.last
 4d8:	adrp	x19, 0 <lprofBufferWriter>
 4dc:	ldr	w8, [x19]
 4e0:	cbz	w8, 514 <lprofWriteDataImpl+0x208>
 4e4:	ldr	x9, [x25, #16]
 4e8:	ldr	x0, [x25]
 4ec:	mov	w10, #0x1                   	// #1
 4f0:	stp	x10, x8, [x29, #-32]
 4f4:	stur	x9, [x29, #-40]
 4f8:	stur	wzr, [x29, #-16]
 4fc:	ldr	x8, [x0]
 500:	sub	x1, x29, #0x28
 504:	mov	w2, #0x1                   	// #1
 508:	blr	x8
 50c:	cbnz	w0, 43c <lprofWriteDataImpl+0x130>
 510:	str	wzr, [x19]
 514:	adrp	x8, 0 <lprofBufferWriter>
 518:	ldr	w8, [x8]
 51c:	cbz	w8, 534 <lprofWriteDataImpl+0x228>
 520:	adrp	x8, 0 <lprofBufferWriter>
 524:	adrp	x9, 0 <lprofBufferWriter>
 528:	ldr	x8, [x8]
 52c:	ldr	x0, [x9]
 530:	blr	x8
 534:	ldr	x0, [x23]
 538:	cbz	x0, 440 <lprofWriteDataImpl+0x134>
 53c:	adrp	x8, 0 <lprofBufferWriter>
 540:	ldr	x8, [x8]
 544:	blr	x8
 548:	mov	w0, wzr
 54c:	str	xzr, [x23]
 550:	str	wzr, [x24]
 554:	b	440 <lprofWriteDataImpl+0x134>

0000000000000558 <writeOneValueProfData>:
 558:	stp	x29, x30, [sp, #-96]!
 55c:	str	x27, [sp, #16]
 560:	stp	x26, x25, [sp, #32]
 564:	stp	x24, x23, [sp, #48]
 568:	stp	x22, x21, [sp, #64]
 56c:	stp	x20, x19, [sp, #80]
 570:	mov	x29, sp
 574:	sub	sp, sp, #0x20
 578:	ldrh	w8, [x1, #44]
 57c:	mov	x19, x1
 580:	mov	x20, x0
 584:	cbz	w8, 5bc <writeOneValueProfData+0x64>
 588:	ldr	x9, [x20, #8]
 58c:	mov	w0, w8
 590:	blr	x9
 594:	sub	w2, w0, #0x8
 598:	add	x8, x2, #0xf
 59c:	and	x8, x8, #0x1fffffff0
 5a0:	mov	x9, sp
 5a4:	sub	x21, x9, x8
 5a8:	mov	sp, x21
 5ac:	mov	x0, x21
 5b0:	mov	w1, wzr
 5b4:	bl	0 <memset>
 5b8:	b	5c0 <writeOneValueProfData+0x68>
 5bc:	mov	x21, xzr
 5c0:	stur	x21, [x29, #-16]
 5c4:	ldrh	w0, [x19, #46]
 5c8:	cbz	w0, 5fc <writeOneValueProfData+0xa4>
 5cc:	ldr	x8, [x20, #8]
 5d0:	blr	x8
 5d4:	sub	w2, w0, #0x8
 5d8:	add	x8, x2, #0xf
 5dc:	and	x8, x8, #0x1fffffff0
 5e0:	mov	x9, sp
 5e4:	sub	x21, x9, x8
 5e8:	mov	sp, x21
 5ec:	mov	x0, x21
 5f0:	mov	w1, wzr
 5f4:	bl	0 <memset>
 5f8:	b	600 <writeOneValueProfData+0xa8>
 5fc:	mov	x21, xzr
 600:	stur	x21, [x29, #-8]
 604:	ldr	x8, [x20]
 608:	sub	x1, x29, #0x10
 60c:	mov	x0, x19
 610:	blr	x8
 614:	cbz	w0, 660 <writeOneValueProfData+0x108>
 618:	ldr	x8, [x20, #32]
 61c:	mov	w21, w0
 620:	blr	x8
 624:	stp	w0, w21, [x29, #24]
 628:	adrp	x0, 0 <lprofBufferWriter>
 62c:	add	x0, x0, #0x0
 630:	add	x1, x29, #0x18
 634:	mov	w2, #0x8                   	// #8
 638:	add	x21, x29, #0x18
 63c:	bl	108 <lprofBufferIOWrite>
 640:	cbnz	w0, 65c <writeOneValueProfData+0x104>
 644:	ldr	x8, [x20, #16]
 648:	add	x0, x29, #0x18
 64c:	blr	x8
 650:	add	x8, x21, #0x8
 654:	cmp	x0, x8
 658:	b.eq	680 <writeOneValueProfData+0x128>  // b.none
 65c:	mov	w0, #0xffffffff            	// #-1
 660:	mov	sp, x29
 664:	ldp	x20, x19, [sp, #80]
 668:	ldp	x22, x21, [sp, #64]
 66c:	ldp	x24, x23, [sp, #48]
 670:	ldp	x26, x25, [sp, #32]
 674:	ldr	x27, [sp, #16]
 678:	ldp	x29, x30, [sp], #96
 67c:	ret
 680:	ldrh	w8, [x19, #44]
 684:	cbz	w8, 760 <writeOneValueProfData+0x208>
 688:	adrp	x0, 0 <lprofBufferWriter>
 68c:	add	x0, x0, #0x0
 690:	sub	x1, x29, #0x20
 694:	mov	w2, #0x8                   	// #8
 698:	stp	wzr, w8, [x29, #-32]
 69c:	bl	108 <lprofBufferIOWrite>
 6a0:	cbnz	w0, 65c <writeOneValueProfData+0x104>
 6a4:	ldr	x8, [x20, #8]
 6a8:	ldrh	w0, [x19, #44]
 6ac:	blr	x8
 6b0:	ldur	x1, [x29, #-16]
 6b4:	sub	w2, w0, #0x8
 6b8:	adrp	x0, 0 <lprofBufferWriter>
 6bc:	add	x0, x0, #0x0
 6c0:	bl	108 <lprofBufferIOWrite>
 6c4:	cbnz	w0, 65c <writeOneValueProfData+0x104>
 6c8:	ldrh	w8, [x19, #44]
 6cc:	cbz	w8, 760 <writeOneValueProfData+0x208>
 6d0:	adrp	x22, 0 <lprofBufferWriter>
 6d4:	adrp	x23, 0 <lprofBufferWriter>
 6d8:	mov	w21, wzr
 6dc:	mov	w27, #0x10                  	// #16
 6e0:	add	x22, x22, #0x0
 6e4:	add	x23, x23, #0x0
 6e8:	b	6fc <writeOneValueProfData+0x1a4>
 6ec:	ldrh	w8, [x19, #44]
 6f0:	add	w21, w21, #0x1
 6f4:	cmp	w21, w8
 6f8:	b.cs	760 <writeOneValueProfData+0x208>  // b.hs, b.nlast
 6fc:	ldr	x8, [x20, #24]
 700:	mov	w0, wzr
 704:	mov	w1, w21
 708:	blr	x8
 70c:	cbz	w0, 6ec <writeOneValueProfData+0x194>
 710:	mov	w24, w0
 714:	mov	x25, xzr
 718:	ldr	x8, [x20, #40]
 71c:	cmp	w24, #0x10
 720:	csel	w26, w24, w27, cc  // cc = lo, ul, last
 724:	mov	w0, wzr
 728:	mov	w1, w21
 72c:	mov	x2, x22
 730:	mov	x3, x25
 734:	mov	w4, w26
 738:	blr	x8
 73c:	mov	x25, x0
 740:	lsl	w2, w26, #4
 744:	mov	x0, x23
 748:	mov	x1, x22
 74c:	bl	108 <lprofBufferIOWrite>
 750:	cbnz	w0, 65c <writeOneValueProfData+0x104>
 754:	subs	w24, w24, w26
 758:	b.ne	718 <writeOneValueProfData+0x1c0>  // b.any
 75c:	b	6ec <writeOneValueProfData+0x194>
 760:	ldrh	w8, [x19, #46]
 764:	cbz	w8, 844 <writeOneValueProfData+0x2ec>
 768:	adrp	x0, 0 <lprofBufferWriter>
 76c:	mov	w9, #0x1                   	// #1
 770:	add	x0, x0, #0x0
 774:	sub	x1, x29, #0x20
 778:	mov	w2, #0x8                   	// #8
 77c:	stp	w9, w8, [x29, #-32]
 780:	bl	108 <lprofBufferIOWrite>
 784:	cbnz	w0, 65c <writeOneValueProfData+0x104>
 788:	ldr	x8, [x20, #8]
 78c:	ldrh	w0, [x19, #46]
 790:	blr	x8
 794:	ldur	x1, [x29, #-8]
 798:	sub	w2, w0, #0x8
 79c:	adrp	x0, 0 <lprofBufferWriter>
 7a0:	add	x0, x0, #0x0
 7a4:	bl	108 <lprofBufferIOWrite>
 7a8:	cbnz	w0, 65c <writeOneValueProfData+0x104>
 7ac:	ldrh	w8, [x19, #46]
 7b0:	cbz	w8, 844 <writeOneValueProfData+0x2ec>
 7b4:	adrp	x22, 0 <lprofBufferWriter>
 7b8:	adrp	x23, 0 <lprofBufferWriter>
 7bc:	mov	w21, wzr
 7c0:	mov	w27, #0x10                  	// #16
 7c4:	add	x22, x22, #0x0
 7c8:	add	x23, x23, #0x0
 7cc:	b	7e0 <writeOneValueProfData+0x288>
 7d0:	ldrh	w8, [x19, #46]
 7d4:	add	w21, w21, #0x1
 7d8:	cmp	w21, w8
 7dc:	b.cs	844 <writeOneValueProfData+0x2ec>  // b.hs, b.nlast
 7e0:	ldr	x8, [x20, #24]
 7e4:	mov	w0, #0x1                   	// #1
 7e8:	mov	w1, w21
 7ec:	blr	x8
 7f0:	cbz	w0, 7d0 <writeOneValueProfData+0x278>
 7f4:	mov	w24, w0
 7f8:	mov	x25, xzr
 7fc:	ldr	x8, [x20, #40]
 800:	cmp	w24, #0x10
 804:	csel	w26, w24, w27, cc  // cc = lo, ul, last
 808:	mov	w0, #0x1                   	// #1
 80c:	mov	w1, w21
 810:	mov	x2, x22
 814:	mov	x3, x25
 818:	mov	w4, w26
 81c:	blr	x8
 820:	mov	x25, x0
 824:	lsl	w2, w26, #4
 828:	mov	x0, x23
 82c:	mov	x1, x22
 830:	bl	108 <lprofBufferIOWrite>
 834:	cbnz	w0, 65c <writeOneValueProfData+0x104>
 838:	subs	w24, w24, w26
 83c:	b.ne	7fc <writeOneValueProfData+0x2a4>  // b.any
 840:	b	7d0 <writeOneValueProfData+0x278>
 844:	mov	w0, wzr
 848:	b	660 <writeOneValueProfData+0x108>

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <__llvm_profile_end_data>:
   c:	adrp	x0, 0 <__stop___llvm_prf_data>
  10:	add	x0, x0, #0x0
  14:	ret

0000000000000018 <__llvm_profile_begin_names>:
  18:	adrp	x0, 0 <__start___llvm_prf_names>
  1c:	add	x0, x0, #0x0
  20:	ret

0000000000000024 <__llvm_profile_end_names>:
  24:	adrp	x0, 0 <__stop___llvm_prf_names>
  28:	add	x0, x0, #0x0
  2c:	ret

0000000000000030 <__llvm_profile_begin_counters>:
  30:	adrp	x0, 0 <__start___llvm_prf_cnts>
  34:	add	x0, x0, #0x0
  38:	ret

000000000000003c <__llvm_profile_end_counters>:
  3c:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  40:	add	x0, x0, #0x0
  44:	ret

0000000000000048 <__llvm_profile_begin_orderfile>:
  48:	adrp	x0, 0 <__start___llvm_orderfile>
  4c:	add	x0, x0, #0x0
  50:	ret

0000000000000054 <__llvm_profile_begin_vnodes>:
  54:	adrp	x0, 0 <__start___llvm_prf_vnds>
  58:	add	x0, x0, #0x0
  5c:	ret

0000000000000060 <__llvm_profile_end_vnodes>:
  60:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  64:	add	x0, x0, #0x0
  68:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__llvm_profile_initialize_file>
   c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  10:	cbz	w0, 1c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp+0x1c>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <__llvm_profile_register_write_file_atexit>

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x21, 0 <__llvm_profile_recursive_mkdir>
  14:	ldr	x21, [x21]
  18:	mov	x19, x0
  1c:	mov	w20, #0x1                   	// #1
  20:	mov	w22, #0x2f                  	// #47
  24:	b	40 <__llvm_profile_recursive_mkdir+0x40>
  28:	strb	wzr, [x19, x20]
  2c:	ldr	w1, [x21]
  30:	mov	x0, x19
  34:	bl	0 <mkdir>
  38:	strb	w22, [x19, x20]
  3c:	add	x20, x20, #0x1
  40:	ldrb	w8, [x19, x20]
  44:	cmp	w8, #0x2f
  48:	b.eq	28 <__llvm_profile_recursive_mkdir+0x28>  // b.none
  4c:	cbnz	w8, 3c <__llvm_profile_recursive_mkdir+0x3c>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldp	x22, x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

0000000000000060 <__llvm_profile_get_dir_mode>:
  60:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  64:	ldr	x8, [x8]
  68:	ldr	w0, [x8]
  6c:	ret

0000000000000070 <__llvm_profile_set_dir_mode>:
  70:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  74:	ldr	x8, [x8]
  78:	str	w0, [x8]
  7c:	ret

0000000000000080 <lprofGetHostName>:
  80:	sub	sp, sp, #0x1c0
  84:	stp	x29, x30, [sp, #400]
  88:	stp	x28, x21, [sp, #416]
  8c:	stp	x20, x19, [sp, #432]
  90:	add	x29, sp, #0x190
  94:	mov	x19, x0
  98:	add	x0, sp, #0x8
  9c:	mov	w20, w1
  a0:	add	x21, sp, #0x8
  a4:	bl	0 <uname>
  a8:	tbnz	w0, #31, c0 <lprofGetHostName+0x40>
  ac:	add	x1, x21, #0x41
  b0:	sxtw	x2, w20
  b4:	mov	x0, x19
  b8:	bl	0 <strncpy>
  bc:	mov	w0, wzr
  c0:	ldp	x20, x19, [sp, #432]
  c4:	ldp	x28, x21, [sp, #416]
  c8:	ldp	x29, x30, [sp, #400]
  cc:	add	sp, sp, #0x1c0
  d0:	ret

00000000000000d4 <lprofLockFd>:
  d4:	sub	sp, sp, #0x40
  d8:	stp	x29, x30, [sp, #32]
  dc:	str	x19, [sp, #48]
  e0:	add	x29, sp, #0x20
  e4:	mov	w19, w0
  e8:	strh	wzr, [sp, #2]
  ec:	stp	xzr, xzr, [sp, #8]
  f0:	bl	0 <getpid>
  f4:	mov	w8, #0x1                   	// #1
  f8:	str	w0, [sp, #24]
  fc:	strh	w8, [sp]
 100:	mov	x2, sp
 104:	mov	w1, #0x7                   	// #7
 108:	mov	w0, w19
 10c:	bl	0 <fcntl>
 110:	cmn	w0, #0x1
 114:	b.ne	138 <lprofLockFd+0x64>  // b.any
 118:	bl	0 <__errno_location>
 11c:	ldr	w8, [x0]
 120:	cmp	w8, #0x4
 124:	b.eq	100 <lprofLockFd+0x2c>  // b.none
 128:	cmp	w8, #0x25
 12c:	b.ne	138 <lprofLockFd+0x64>  // b.any
 130:	mov	w0, #0xffffffff            	// #-1
 134:	b	13c <lprofLockFd+0x68>
 138:	mov	w0, wzr
 13c:	ldr	x19, [sp, #48]
 140:	ldp	x29, x30, [sp, #32]
 144:	add	sp, sp, #0x40
 148:	ret

000000000000014c <lprofUnlockFd>:
 14c:	sub	sp, sp, #0x40
 150:	stp	x29, x30, [sp, #32]
 154:	str	x19, [sp, #48]
 158:	add	x29, sp, #0x20
 15c:	mov	w19, w0
 160:	strh	wzr, [sp, #2]
 164:	stp	xzr, xzr, [sp, #8]
 168:	bl	0 <getpid>
 16c:	mov	w8, #0x2                   	// #2
 170:	str	w0, [sp, #24]
 174:	strh	w8, [sp]
 178:	mov	x2, sp
 17c:	mov	w1, #0x7                   	// #7
 180:	mov	w0, w19
 184:	bl	0 <fcntl>
 188:	cmn	w0, #0x1
 18c:	b.ne	1b0 <lprofUnlockFd+0x64>  // b.any
 190:	bl	0 <__errno_location>
 194:	ldr	w8, [x0]
 198:	cmp	w8, #0x4
 19c:	b.eq	178 <lprofUnlockFd+0x2c>  // b.none
 1a0:	cmp	w8, #0x25
 1a4:	b.ne	1b0 <lprofUnlockFd+0x64>  // b.any
 1a8:	mov	w0, #0xffffffff            	// #-1
 1ac:	b	1b4 <lprofUnlockFd+0x68>
 1b0:	mov	w0, wzr
 1b4:	ldr	x19, [sp, #48]
 1b8:	ldp	x29, x30, [sp, #32]
 1bc:	add	sp, sp, #0x40
 1c0:	ret

00000000000001c4 <lprofLockFileHandle>:
 1c4:	sub	sp, sp, #0x40
 1c8:	stp	x29, x30, [sp, #32]
 1cc:	str	x19, [sp, #48]
 1d0:	add	x29, sp, #0x20
 1d4:	bl	0 <fileno>
 1d8:	mov	w19, w0
 1dc:	strh	wzr, [sp, #2]
 1e0:	stp	xzr, xzr, [sp, #8]
 1e4:	bl	0 <getpid>
 1e8:	mov	w8, #0x1                   	// #1
 1ec:	str	w0, [sp, #24]
 1f0:	strh	w8, [sp]
 1f4:	mov	x2, sp
 1f8:	mov	w1, #0x7                   	// #7
 1fc:	mov	w0, w19
 200:	bl	0 <fcntl>
 204:	cmn	w0, #0x1
 208:	b.ne	22c <lprofLockFileHandle+0x68>  // b.any
 20c:	bl	0 <__errno_location>
 210:	ldr	w8, [x0]
 214:	cmp	w8, #0x4
 218:	b.eq	1f4 <lprofLockFileHandle+0x30>  // b.none
 21c:	cmp	w8, #0x25
 220:	b.ne	22c <lprofLockFileHandle+0x68>  // b.any
 224:	mov	w0, #0xffffffff            	// #-1
 228:	b	230 <lprofLockFileHandle+0x6c>
 22c:	mov	w0, wzr
 230:	ldr	x19, [sp, #48]
 234:	ldp	x29, x30, [sp, #32]
 238:	add	sp, sp, #0x40
 23c:	ret

0000000000000240 <lprofUnlockFileHandle>:
 240:	sub	sp, sp, #0x40
 244:	stp	x29, x30, [sp, #32]
 248:	str	x19, [sp, #48]
 24c:	add	x29, sp, #0x20
 250:	bl	0 <fileno>
 254:	mov	w19, w0
 258:	strh	wzr, [sp, #2]
 25c:	stp	xzr, xzr, [sp, #8]
 260:	bl	0 <getpid>
 264:	mov	w8, #0x2                   	// #2
 268:	str	w0, [sp, #24]
 26c:	strh	w8, [sp]
 270:	mov	x2, sp
 274:	mov	w1, #0x7                   	// #7
 278:	mov	w0, w19
 27c:	bl	0 <fcntl>
 280:	cmn	w0, #0x1
 284:	b.ne	2a8 <lprofUnlockFileHandle+0x68>  // b.any
 288:	bl	0 <__errno_location>
 28c:	ldr	w8, [x0]
 290:	cmp	w8, #0x4
 294:	b.eq	270 <lprofUnlockFileHandle+0x30>  // b.none
 298:	cmp	w8, #0x25
 29c:	b.ne	2a8 <lprofUnlockFileHandle+0x68>  // b.any
 2a0:	mov	w0, #0xffffffff            	// #-1
 2a4:	b	2ac <lprofUnlockFileHandle+0x6c>
 2a8:	mov	w0, wzr
 2ac:	ldr	x19, [sp, #48]
 2b0:	ldp	x29, x30, [sp, #32]
 2b4:	add	sp, sp, #0x40
 2b8:	ret

00000000000002bc <lprofOpenFileEx>:
 2bc:	sub	sp, sp, #0x40
 2c0:	stp	x29, x30, [sp, #32]
 2c4:	str	x19, [sp, #48]
 2c8:	add	x29, sp, #0x20
 2cc:	mov	w1, #0x42                  	// #66
 2d0:	mov	w2, #0x1b6                 	// #438
 2d4:	bl	0 <open>
 2d8:	tbnz	w0, #31, 33c <lprofOpenFileEx+0x80>
 2dc:	mov	w19, w0
 2e0:	strh	wzr, [sp, #2]
 2e4:	stp	xzr, xzr, [sp, #8]
 2e8:	bl	0 <getpid>
 2ec:	mov	w8, #0x1                   	// #1
 2f0:	str	w0, [sp, #24]
 2f4:	strh	w8, [sp]
 2f8:	mov	x2, sp
 2fc:	mov	w1, #0x7                   	// #7
 300:	mov	w0, w19
 304:	bl	0 <fcntl>
 308:	cmn	w0, #0x1
 30c:	b.ne	328 <lprofOpenFileEx+0x6c>  // b.any
 310:	bl	0 <__errno_location>
 314:	ldr	w8, [x0]
 318:	cmp	w8, #0x4
 31c:	b.eq	2f8 <lprofOpenFileEx+0x3c>  // b.none
 320:	cmp	w8, #0x25
 324:	b.eq	350 <lprofOpenFileEx+0x94>  // b.none
 328:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 32c:	add	x1, x1, #0x0
 330:	mov	w0, w19
 334:	bl	0 <fdopen>
 338:	b	340 <lprofOpenFileEx+0x84>
 33c:	mov	x0, xzr
 340:	ldr	x19, [sp, #48]
 344:	ldp	x29, x30, [sp, #32]
 348:	add	sp, sp, #0x40
 34c:	ret
 350:	adrp	x8, 0 <stderr>
 354:	ldr	x8, [x8]
 358:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 35c:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 360:	add	x1, x1, #0x0
 364:	ldr	x0, [x8]
 368:	add	x2, x2, #0x0
 36c:	bl	0 <fprintf>
 370:	b	328 <lprofOpenFileEx+0x6c>

0000000000000374 <lprofGetPathPrefix>:
 374:	stp	x29, x30, [sp, #-48]!
 378:	str	x21, [sp, #16]
 37c:	stp	x20, x19, [sp, #32]
 380:	mov	x29, sp
 384:	mov	x21, x0
 388:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 38c:	add	x0, x0, #0x0
 390:	mov	x20, x1
 394:	bl	0 <getenv>
 398:	mov	x19, x0
 39c:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 3a0:	add	x0, x0, #0x0
 3a4:	bl	0 <getenv>
 3a8:	str	xzr, [x20]
 3ac:	str	wzr, [x21]
 3b0:	cbz	x19, 3f0 <lprofGetPathPrefix+0x7c>
 3b4:	ldrb	w8, [x19]
 3b8:	cbz	w8, 3d4 <lprofGetPathPrefix+0x60>
 3bc:	cbz	x0, 3dc <lprofGetPathPrefix+0x68>
 3c0:	mov	w2, #0xa                   	// #10
 3c4:	mov	x1, xzr
 3c8:	bl	0 <strtol>
 3cc:	bic	w8, w0, w0, asr #31
 3d0:	b	3e0 <lprofGetPathPrefix+0x6c>
 3d4:	mov	x19, xzr
 3d8:	b	3f0 <lprofGetPathPrefix+0x7c>
 3dc:	mov	w8, wzr
 3e0:	mov	x0, x19
 3e4:	str	w8, [x21]
 3e8:	bl	0 <strlen>
 3ec:	str	x0, [x20]
 3f0:	mov	x0, x19
 3f4:	ldp	x20, x19, [sp, #32]
 3f8:	ldr	x21, [sp, #16]
 3fc:	ldp	x29, x30, [sp], #48
 400:	ret

0000000000000404 <lprofApplyPathPrefix>:
 404:	stp	x29, x30, [sp, #-48]!
 408:	stp	x22, x21, [sp, #16]
 40c:	stp	x20, x19, [sp, #32]
 410:	mov	x29, sp
 414:	mov	x20, x3
 418:	mov	x22, x2
 41c:	mov	x19, x1
 420:	cmp	w4, #0x1
 424:	mov	x21, x0
 428:	b.lt	45c <lprofApplyPathPrefix+0x58>  // b.tstop
 42c:	mov	w8, wzr
 430:	add	x9, x19, #0x1
 434:	b	44c <lprofApplyPathPrefix+0x48>
 438:	add	w8, w8, #0x1
 43c:	mov	x19, x9
 440:	cmp	w8, w4
 444:	add	x9, x9, #0x1
 448:	b.ge	45c <lprofApplyPathPrefix+0x58>  // b.tcont
 44c:	ldrb	w10, [x9]
 450:	cmp	w10, #0x2f
 454:	b.eq	438 <lprofApplyPathPrefix+0x34>  // b.none
 458:	cbnz	w10, 440 <lprofApplyPathPrefix+0x3c>
 45c:	mov	x0, x21
 460:	mov	x1, x22
 464:	mov	x2, x20
 468:	bl	0 <memcpy>
 46c:	add	x8, x20, x22
 470:	ldurb	w8, [x8, #-1]
 474:	cmp	w8, #0x2f
 478:	b.eq	48c <lprofApplyPathPrefix+0x88>  // b.none
 47c:	add	x8, x20, #0x1
 480:	mov	w9, #0x2f                  	// #47
 484:	strb	w9, [x21, x20]
 488:	mov	x20, x8
 48c:	mov	x0, x19
 490:	add	x20, x21, x20
 494:	bl	0 <strlen>
 498:	add	x2, x0, #0x1
 49c:	mov	x0, x20
 4a0:	mov	x1, x19
 4a4:	ldp	x20, x19, [sp, #32]
 4a8:	ldp	x22, x21, [sp, #16]
 4ac:	ldp	x29, x30, [sp], #48
 4b0:	b	0 <memcpy>

00000000000004b4 <lprofFindFirstDirSeparator>:
 4b4:	mov	w1, #0x2f                  	// #47
 4b8:	b	0 <strchr>

00000000000004bc <lprofFindLastDirSeparator>:
 4bc:	mov	w1, #0x2f                  	// #47
 4c0:	b	0 <strrchr>

00000000000004c4 <lprofSuspendSigKill>:
 4c4:	sub	sp, sp, #0x20
 4c8:	stp	x29, x30, [sp, #16]
 4cc:	add	x29, sp, #0x10
 4d0:	sub	x1, x29, #0x4
 4d4:	mov	w0, #0x2                   	// #2
 4d8:	stur	wzr, [x29, #-4]
 4dc:	bl	0 <prctl>
 4e0:	ldur	w8, [x29, #-4]
 4e4:	cbnz	w0, 500 <lprofSuspendSigKill+0x3c>
 4e8:	cmp	w8, #0x9
 4ec:	b.ne	500 <lprofSuspendSigKill+0x3c>  // b.any
 4f0:	mov	w0, #0x1                   	// #1
 4f4:	mov	w1, wzr
 4f8:	bl	0 <prctl>
 4fc:	ldur	w8, [x29, #-4]
 500:	ldp	x29, x30, [sp, #16]
 504:	cmp	w8, #0x9
 508:	cset	w0, eq  // eq = none
 50c:	add	sp, sp, #0x20
 510:	ret

0000000000000514 <lprofRestoreSigKill>:
 514:	mov	w0, #0x1                   	// #1
 518:	mov	w1, #0x9                   	// #9
 51c:	b	0 <prctl>
