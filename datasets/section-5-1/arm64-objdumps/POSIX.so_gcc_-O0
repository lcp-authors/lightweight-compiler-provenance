
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//POSIX.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000064f0 <_init>:
    64f0:	stp	x29, x30, [sp, #-16]!
    64f4:	mov	x29, sp
    64f8:	bl	71b0 <call_weak_fn>
    64fc:	ldp	x29, x30, [sp], #16
    6500:	ret

Disassembly of section .plt:

0000000000006510 <.plt>:
    6510:	stp	x16, x30, [sp, #-16]!
    6514:	adrp	x16, 31000 <values_for_iv.23345+0x17b8>
    6518:	ldr	x17, [x16, #4088]
    651c:	add	x16, x16, #0xff8
    6520:	br	x17
    6524:	nop
    6528:	nop
    652c:	nop

0000000000006530 <Perl_setlocale@plt>:
    6530:	adrp	x16, 32000 <Perl_setlocale>
    6534:	ldr	x17, [x16]
    6538:	add	x16, x16, #0x0
    653c:	br	x17

0000000000006540 <mbrtowc@plt>:
    6540:	adrp	x16, 32000 <Perl_setlocale>
    6544:	ldr	x17, [x16, #8]
    6548:	add	x16, x16, #0x8
    654c:	br	x17

0000000000006550 <tcflush@plt>:
    6550:	adrp	x16, 32000 <Perl_setlocale>
    6554:	ldr	x17, [x16, #16]
    6558:	add	x16, x16, #0x10
    655c:	br	x17

0000000000006560 <Perl_sv_2iv_flags@plt>:
    6560:	adrp	x16, 32000 <Perl_setlocale>
    6564:	ldr	x17, [x16, #24]
    6568:	add	x16, x16, #0x18
    656c:	br	x17

0000000000006570 <_exit@plt>:
    6570:	adrp	x16, 32000 <Perl_setlocale>
    6574:	ldr	x17, [x16, #32]
    6578:	add	x16, x16, #0x20
    657c:	br	x17

0000000000006580 <exp2@plt>:
    6580:	adrp	x16, 32000 <Perl_setlocale>
    6584:	ldr	x17, [x16, #40]
    6588:	add	x16, x16, #0x28
    658c:	br	x17

0000000000006590 <Perl_sv_2bool_flags@plt>:
    6590:	adrp	x16, 32000 <Perl_setlocale>
    6594:	ldr	x17, [x16, #48]
    6598:	add	x16, x16, #0x30
    659c:	br	x17

00000000000065a0 <setuid@plt>:
    65a0:	adrp	x16, 32000 <Perl_setlocale>
    65a4:	ldr	x17, [x16, #56]
    65a8:	add	x16, x16, #0x38
    65ac:	br	x17

00000000000065b0 <strtoul@plt>:
    65b0:	adrp	x16, 32000 <Perl_setlocale>
    65b4:	ldr	x17, [x16, #64]
    65b8:	add	x16, x16, #0x40
    65bc:	br	x17

00000000000065c0 <strlen@plt>:
    65c0:	adrp	x16, 32000 <Perl_setlocale>
    65c4:	ldr	x17, [x16, #72]
    65c8:	add	x16, x16, #0x48
    65cc:	br	x17

00000000000065d0 <clock@plt>:
    65d0:	adrp	x16, 32000 <Perl_setlocale>
    65d4:	ldr	x17, [x16, #80]
    65d8:	add	x16, x16, #0x50
    65dc:	br	x17

00000000000065e0 <log2@plt>:
    65e0:	adrp	x16, 32000 <Perl_setlocale>
    65e4:	ldr	x17, [x16, #88]
    65e8:	add	x16, x16, #0x58
    65ec:	br	x17

00000000000065f0 <Perl_sv_setnv@plt>:
    65f0:	adrp	x16, 32000 <Perl_setlocale>
    65f4:	ldr	x17, [x16, #96]
    65f8:	add	x16, x16, #0x60
    65fc:	br	x17

0000000000006600 <copysign@plt>:
    6600:	adrp	x16, 32000 <Perl_setlocale>
    6604:	ldr	x17, [x16, #104]
    6608:	add	x16, x16, #0x68
    660c:	br	x17

0000000000006610 <mbstowcs@plt>:
    6610:	adrp	x16, 32000 <Perl_setlocale>
    6614:	ldr	x17, [x16, #112]
    6618:	add	x16, x16, #0x70
    661c:	br	x17

0000000000006620 <dup@plt>:
    6620:	adrp	x16, 32000 <Perl_setlocale>
    6624:	ldr	x17, [x16, #120]
    6628:	add	x16, x16, #0x78
    662c:	br	x17

0000000000006630 <__libc_current_sigrtmax@plt>:
    6630:	adrp	x16, 32000 <Perl_setlocale>
    6634:	ldr	x17, [x16, #128]
    6638:	add	x16, x16, #0x80
    663c:	br	x17

0000000000006640 <tcsetpgrp@plt>:
    6640:	adrp	x16, 32000 <Perl_setlocale>
    6644:	ldr	x17, [x16, #136]
    6648:	add	x16, x16, #0x88
    664c:	br	x17

0000000000006650 <Perl_sv_2uv_flags@plt>:
    6650:	adrp	x16, 32000 <Perl_setlocale>
    6654:	ldr	x17, [x16, #144]
    6658:	add	x16, x16, #0x90
    665c:	br	x17

0000000000006660 <Perl_stack_grow@plt>:
    6660:	adrp	x16, 32000 <Perl_setlocale>
    6664:	ldr	x17, [x16, #152]
    6668:	add	x16, x16, #0x98
    666c:	br	x17

0000000000006670 <asin@plt>:
    6670:	adrp	x16, 32000 <Perl_setlocale>
    6674:	ldr	x17, [x16, #160]
    6678:	add	x16, x16, #0xa0
    667c:	br	x17

0000000000006680 <Perl_set_numeric_underlying@plt>:
    6680:	adrp	x16, 32000 <Perl_setlocale>
    6684:	ldr	x17, [x16, #168]
    6688:	add	x16, x16, #0xa8
    668c:	br	x17

0000000000006690 <remainder@plt>:
    6690:	adrp	x16, 32000 <Perl_setlocale>
    6694:	ldr	x17, [x16, #176]
    6698:	add	x16, x16, #0xb0
    669c:	br	x17

00000000000066a0 <sigprocmask@plt>:
    66a0:	adrp	x16, 32000 <Perl_setlocale>
    66a4:	ldr	x17, [x16, #184]
    66a8:	add	x16, x16, #0xb8
    66ac:	br	x17

00000000000066b0 <strtod@plt>:
    66b0:	adrp	x16, 32000 <Perl_setlocale>
    66b4:	ldr	x17, [x16, #192]
    66b8:	add	x16, x16, #0xc0
    66bc:	br	x17

00000000000066c0 <cfgetospeed@plt>:
    66c0:	adrp	x16, 32000 <Perl_setlocale>
    66c4:	ldr	x17, [x16, #200]
    66c8:	add	x16, x16, #0xc8
    66cc:	br	x17

00000000000066d0 <Perl__is_cur_LC_category_utf8@plt>:
    66d0:	adrp	x16, 32000 <Perl_setlocale>
    66d4:	ldr	x17, [x16, #208]
    66d8:	add	x16, x16, #0xd0
    66dc:	br	x17

00000000000066e0 <pause@plt>:
    66e0:	adrp	x16, 32000 <Perl_setlocale>
    66e4:	ldr	x17, [x16, #216]
    66e8:	add	x16, x16, #0xd8
    66ec:	br	x17

00000000000066f0 <ldexp@plt>:
    66f0:	adrp	x16, 32000 <Perl_setlocale>
    66f4:	ldr	x17, [x16, #224]
    66f8:	add	x16, x16, #0xe0
    66fc:	br	x17

0000000000006700 <sigsuspend@plt>:
    6700:	adrp	x16, 32000 <Perl_setlocale>
    6704:	ldr	x17, [x16, #232]
    6708:	add	x16, x16, #0xe8
    670c:	br	x17

0000000000006710 <ttyname_r@plt>:
    6710:	adrp	x16, 32000 <Perl_setlocale>
    6714:	ldr	x17, [x16, #240]
    6718:	add	x16, x16, #0xf0
    671c:	br	x17

0000000000006720 <expm1@plt>:
    6720:	adrp	x16, 32000 <Perl_setlocale>
    6724:	ldr	x17, [x16, #248]
    6728:	add	x16, x16, #0xf8
    672c:	br	x17

0000000000006730 <__cxa_finalize@plt>:
    6730:	adrp	x16, 32000 <Perl_setlocale>
    6734:	ldr	x17, [x16, #256]
    6738:	add	x16, x16, #0x100
    673c:	br	x17

0000000000006740 <pipe@plt>:
    6740:	adrp	x16, 32000 <Perl_setlocale>
    6744:	ldr	x17, [x16, #264]
    6748:	add	x16, x16, #0x108
    674c:	br	x17

0000000000006750 <Perl_sv_derived_from@plt>:
    6750:	adrp	x16, 32000 <Perl_setlocale>
    6754:	ldr	x17, [x16, #272]
    6758:	add	x16, x16, #0x110
    675c:	br	x17

0000000000006760 <nice@plt>:
    6760:	adrp	x16, 32000 <Perl_setlocale>
    6764:	ldr	x17, [x16, #280]
    6768:	add	x16, x16, #0x118
    676c:	br	x17

0000000000006770 <Perl_pop_scope@plt>:
    6770:	adrp	x16, 32000 <Perl_setlocale>
    6774:	ldr	x17, [x16, #288]
    6778:	add	x16, x16, #0x120
    677c:	br	x17

0000000000006780 <pathconf@plt>:
    6780:	adrp	x16, 32000 <Perl_setlocale>
    6784:	ldr	x17, [x16, #296]
    6788:	add	x16, x16, #0x128
    678c:	br	x17

0000000000006790 <Perl_newCONSTSUB@plt>:
    6790:	adrp	x16, 32000 <Perl_setlocale>
    6794:	ldr	x17, [x16, #304]
    6798:	add	x16, x16, #0x130
    679c:	br	x17

00000000000067a0 <y1@plt>:
    67a0:	adrp	x16, 32000 <Perl_setlocale>
    67a4:	ldr	x17, [x16, #312]
    67a8:	add	x16, x16, #0x138
    67ac:	br	x17

00000000000067b0 <tgamma@plt>:
    67b0:	adrp	x16, 32000 <Perl_setlocale>
    67b4:	ldr	x17, [x16, #320]
    67b8:	add	x16, x16, #0x140
    67bc:	br	x17

00000000000067c0 <Perl_newSV@plt>:
    67c0:	adrp	x16, 32000 <Perl_setlocale>
    67c4:	ldr	x17, [x16, #328]
    67c8:	add	x16, x16, #0x148
    67cc:	br	x17

00000000000067d0 <mkfifo@plt>:
    67d0:	adrp	x16, 32000 <Perl_setlocale>
    67d4:	ldr	x17, [x16, #336]
    67d8:	add	x16, x16, #0x150
    67dc:	br	x17

00000000000067e0 <sigfillset@plt>:
    67e0:	adrp	x16, 32000 <Perl_setlocale>
    67e4:	ldr	x17, [x16, #344]
    67e8:	add	x16, x16, #0x158
    67ec:	br	x17

00000000000067f0 <log10@plt>:
    67f0:	adrp	x16, 32000 <Perl_setlocale>
    67f4:	ldr	x17, [x16, #352]
    67f8:	add	x16, x16, #0x160
    67fc:	br	x17

0000000000006800 <cfsetospeed@plt>:
    6800:	adrp	x16, 32000 <Perl_setlocale>
    6804:	ldr	x17, [x16, #360]
    6808:	add	x16, x16, #0x168
    680c:	br	x17

0000000000006810 <localeconv@plt>:
    6810:	adrp	x16, 32000 <Perl_setlocale>
    6814:	ldr	x17, [x16, #368]
    6818:	add	x16, x16, #0x170
    681c:	br	x17

0000000000006820 <tcgetattr@plt>:
    6820:	adrp	x16, 32000 <Perl_setlocale>
    6824:	ldr	x17, [x16, #376]
    6828:	add	x16, x16, #0x178
    682c:	br	x17

0000000000006830 <cbrt@plt>:
    6830:	adrp	x16, 32000 <Perl_setlocale>
    6834:	ldr	x17, [x16, #384]
    6838:	add	x16, x16, #0x180
    683c:	br	x17

0000000000006840 <fdim@plt>:
    6840:	adrp	x16, 32000 <Perl_setlocale>
    6844:	ldr	x17, [x16, #392]
    6848:	add	x16, x16, #0x188
    684c:	br	x17

0000000000006850 <Perl_warner@plt>:
    6850:	adrp	x16, 32000 <Perl_setlocale>
    6854:	ldr	x17, [x16, #400]
    6858:	add	x16, x16, #0x190
    685c:	br	x17

0000000000006860 <pthread_getspecific@plt>:
    6860:	adrp	x16, 32000 <Perl_setlocale>
    6864:	ldr	x17, [x16, #408]
    6868:	add	x16, x16, #0x198
    686c:	br	x17

0000000000006870 <Perl_sv_upgrade@plt>:
    6870:	adrp	x16, 32000 <Perl_setlocale>
    6874:	ldr	x17, [x16, #416]
    6878:	add	x16, x16, #0x1a0
    687c:	br	x17

0000000000006880 <Perl_sv_setiv_mg@plt>:
    6880:	adrp	x16, 32000 <Perl_setlocale>
    6884:	ldr	x17, [x16, #424]
    6888:	add	x16, x16, #0x1a8
    688c:	br	x17

0000000000006890 <ctime_r@plt>:
    6890:	adrp	x16, 32000 <Perl_setlocale>
    6894:	ldr	x17, [x16, #432]
    6898:	add	x16, x16, #0x1b0
    689c:	br	x17

00000000000068a0 <Perl_mro_method_changed_in@plt>:
    68a0:	adrp	x16, 32000 <Perl_setlocale>
    68a4:	ldr	x17, [x16, #440]
    68a8:	add	x16, x16, #0x1b8
    68ac:	br	x17

00000000000068b0 <Perl__is_utf8_char_helper@plt>:
    68b0:	adrp	x16, 32000 <Perl_setlocale>
    68b4:	ldr	x17, [x16, #448]
    68b8:	add	x16, x16, #0x1c0
    68bc:	br	x17

00000000000068c0 <tzset@plt>:
    68c0:	adrp	x16, 32000 <Perl_setlocale>
    68c4:	ldr	x17, [x16, #456]
    68c8:	add	x16, x16, #0x1c8
    68cc:	br	x17

00000000000068d0 <fmax@plt>:
    68d0:	adrp	x16, 32000 <Perl_setlocale>
    68d4:	ldr	x17, [x16, #464]
    68d8:	add	x16, x16, #0x1d0
    68dc:	br	x17

00000000000068e0 <ctermid@plt>:
    68e0:	adrp	x16, 32000 <Perl_setlocale>
    68e4:	ldr	x17, [x16, #472]
    68e8:	add	x16, x16, #0x1d8
    68ec:	br	x17

00000000000068f0 <j1@plt>:
    68f0:	adrp	x16, 32000 <Perl_setlocale>
    68f4:	ldr	x17, [x16, #480]
    68f8:	add	x16, x16, #0x1e0
    68fc:	br	x17

0000000000006900 <y0@plt>:
    6900:	adrp	x16, 32000 <Perl_setlocale>
    6904:	ldr	x17, [x16, #488]
    6908:	add	x16, x16, #0x1e8
    690c:	br	x17

0000000000006910 <Perl_sv_setpv@plt>:
    6910:	adrp	x16, 32000 <Perl_setlocale>
    6914:	ldr	x17, [x16, #496]
    6918:	add	x16, x16, #0x1f0
    691c:	br	x17

0000000000006920 <Perl_newSVnv@plt>:
    6920:	adrp	x16, 32000 <Perl_setlocale>
    6924:	ldr	x17, [x16, #504]
    6928:	add	x16, x16, #0x1f8
    692c:	br	x17

0000000000006930 <sigemptyset@plt>:
    6930:	adrp	x16, 32000 <Perl_setlocale>
    6934:	ldr	x17, [x16, #512]
    6938:	add	x16, x16, #0x200
    693c:	br	x17

0000000000006940 <ilogb@plt>:
    6940:	adrp	x16, 32000 <Perl_setlocale>
    6944:	ldr	x17, [x16, #520]
    6948:	add	x16, x16, #0x208
    694c:	br	x17

0000000000006950 <__libc_current_sigrtmin@plt>:
    6950:	adrp	x16, 32000 <Perl_setlocale>
    6954:	ldr	x17, [x16, #528]
    6958:	add	x16, x16, #0x210
    695c:	br	x17

0000000000006960 <Perl_sv_setnv_mg@plt>:
    6960:	adrp	x16, 32000 <Perl_setlocale>
    6964:	ldr	x17, [x16, #536]
    6968:	add	x16, x16, #0x218
    696c:	br	x17

0000000000006970 <Perl_getcwd_sv@plt>:
    6970:	adrp	x16, 32000 <Perl_setlocale>
    6974:	ldr	x17, [x16, #544]
    6978:	add	x16, x16, #0x220
    697c:	br	x17

0000000000006980 <Perl_warn@plt>:
    6980:	adrp	x16, 32000 <Perl_setlocale>
    6984:	ldr	x17, [x16, #552]
    6988:	add	x16, x16, #0x228
    698c:	br	x17

0000000000006990 <Perl_sv_isa@plt>:
    6990:	adrp	x16, 32000 <Perl_setlocale>
    6994:	ldr	x17, [x16, #560]
    6998:	add	x16, x16, #0x230
    699c:	br	x17

00000000000069a0 <memset@plt>:
    69a0:	adrp	x16, 32000 <Perl_setlocale>
    69a4:	ldr	x17, [x16, #568]
    69a8:	add	x16, x16, #0x238
    69ac:	br	x17

00000000000069b0 <Perl_sv_2pv_flags@plt>:
    69b0:	adrp	x16, 32000 <Perl_setlocale>
    69b4:	ldr	x17, [x16, #576]
    69b8:	add	x16, x16, #0x240
    69bc:	br	x17

00000000000069c0 <Perl_xs_boot_epilog@plt>:
    69c0:	adrp	x16, 32000 <Perl_setlocale>
    69c4:	ldr	x17, [x16, #584]
    69c8:	add	x16, x16, #0x248
    69cc:	br	x17

00000000000069d0 <tcdrain@plt>:
    69d0:	adrp	x16, 32000 <Perl_setlocale>
    69d4:	ldr	x17, [x16, #592]
    69d8:	add	x16, x16, #0x250
    69dc:	br	x17

00000000000069e0 <lseek64@plt>:
    69e0:	adrp	x16, 32000 <Perl_setlocale>
    69e4:	ldr	x17, [x16, #600]
    69e8:	add	x16, x16, #0x258
    69ec:	br	x17

00000000000069f0 <sleep@plt>:
    69f0:	adrp	x16, 32000 <Perl_setlocale>
    69f4:	ldr	x17, [x16, #608]
    69f8:	add	x16, x16, #0x260
    69fc:	br	x17

0000000000006a00 <acosh@plt>:
    6a00:	adrp	x16, 32000 <Perl_setlocale>
    6a04:	ldr	x17, [x16, #616]
    6a08:	add	x16, x16, #0x268
    6a0c:	br	x17

0000000000006a10 <hypot@plt>:
    6a10:	adrp	x16, 32000 <Perl_setlocale>
    6a14:	ldr	x17, [x16, #624]
    6a18:	add	x16, x16, #0x270
    6a1c:	br	x17

0000000000006a20 <nearbyint@plt>:
    6a20:	adrp	x16, 32000 <Perl_setlocale>
    6a24:	ldr	x17, [x16, #632]
    6a28:	add	x16, x16, #0x278
    6a2c:	br	x17

0000000000006a30 <cuserid@plt>:
    6a30:	adrp	x16, 32000 <Perl_setlocale>
    6a34:	ldr	x17, [x16, #640]
    6a38:	add	x16, x16, #0x280
    6a3c:	br	x17

0000000000006a40 <Perl_init_tm@plt>:
    6a40:	adrp	x16, 32000 <Perl_setlocale>
    6a44:	ldr	x17, [x16, #648]
    6a48:	add	x16, x16, #0x288
    6a4c:	br	x17

0000000000006a50 <tanh@plt>:
    6a50:	adrp	x16, 32000 <Perl_setlocale>
    6a54:	ldr	x17, [x16, #656]
    6a58:	add	x16, x16, #0x290
    6a5c:	br	x17

0000000000006a60 <__stack_chk_fail@plt>:
    6a60:	adrp	x16, 32000 <Perl_setlocale>
    6a64:	ldr	x17, [x16, #664]
    6a68:	add	x16, x16, #0x298
    6a6c:	br	x17

0000000000006a70 <close@plt>:
    6a70:	adrp	x16, 32000 <Perl_setlocale>
    6a74:	ldr	x17, [x16, #672]
    6a78:	add	x16, x16, #0x2a0
    6a7c:	br	x17

0000000000006a80 <Perl_my_strftime@plt>:
    6a80:	adrp	x16, 32000 <Perl_setlocale>
    6a84:	ldr	x17, [x16, #680]
    6a88:	add	x16, x16, #0x2a8
    6a8c:	br	x17

0000000000006a90 <sigaction@plt>:
    6a90:	adrp	x16, 32000 <Perl_setlocale>
    6a94:	ldr	x17, [x16, #688]
    6a98:	add	x16, x16, #0x2b0
    6a9c:	br	x17

0000000000006aa0 <log1p@plt>:
    6aa0:	adrp	x16, 32000 <Perl_setlocale>
    6aa4:	ldr	x17, [x16, #696]
    6aa8:	add	x16, x16, #0x2b8
    6aac:	br	x17

0000000000006ab0 <tcgetpgrp@plt>:
    6ab0:	adrp	x16, 32000 <Perl_setlocale>
    6ab4:	ldr	x17, [x16, #704]
    6ab8:	add	x16, x16, #0x2c0
    6abc:	br	x17

0000000000006ac0 <Perl_sv_backoff@plt>:
    6ac0:	adrp	x16, 32000 <Perl_setlocale>
    6ac4:	ldr	x17, [x16, #712]
    6ac8:	add	x16, x16, #0x2c8
    6acc:	br	x17

0000000000006ad0 <fma@plt>:
    6ad0:	adrp	x16, 32000 <Perl_setlocale>
    6ad4:	ldr	x17, [x16, #720]
    6ad8:	add	x16, x16, #0x2d0
    6adc:	br	x17

0000000000006ae0 <__gmon_start__@plt>:
    6ae0:	adrp	x16, 32000 <Perl_setlocale>
    6ae4:	ldr	x17, [x16, #728]
    6ae8:	add	x16, x16, #0x2d8
    6aec:	br	x17

0000000000006af0 <mktime@plt>:
    6af0:	adrp	x16, 32000 <Perl_setlocale>
    6af4:	ldr	x17, [x16, #736]
    6af8:	add	x16, x16, #0x2e0
    6afc:	br	x17

0000000000006b00 <lgamma@plt>:
    6b00:	adrp	x16, 32000 <Perl_setlocale>
    6b04:	ldr	x17, [x16, #744]
    6b08:	add	x16, x16, #0x2e8
    6b0c:	br	x17

0000000000006b10 <write@plt>:
    6b10:	adrp	x16, 32000 <Perl_setlocale>
    6b14:	ldr	x17, [x16, #752]
    6b18:	add	x16, x16, #0x2f0
    6b1c:	br	x17

0000000000006b20 <Perl_croak_xs_usage@plt>:
    6b20:	adrp	x16, 32000 <Perl_setlocale>
    6b24:	ldr	x17, [x16, #760]
    6b28:	add	x16, x16, #0x2f8
    6b2c:	br	x17

0000000000006b30 <erf@plt>:
    6b30:	adrp	x16, 32000 <Perl_setlocale>
    6b34:	ldr	x17, [x16, #768]
    6b38:	add	x16, x16, #0x300
    6b3c:	br	x17

0000000000006b40 <logb@plt>:
    6b40:	adrp	x16, 32000 <Perl_setlocale>
    6b44:	ldr	x17, [x16, #776]
    6b48:	add	x16, x16, #0x308
    6b4c:	br	x17

0000000000006b50 <Perl_newSVpvn_flags@plt>:
    6b50:	adrp	x16, 32000 <Perl_setlocale>
    6b54:	ldr	x17, [x16, #784]
    6b58:	add	x16, x16, #0x310
    6b5c:	br	x17

0000000000006b60 <Perl_sv_grow@plt>:
    6b60:	adrp	x16, 32000 <Perl_setlocale>
    6b64:	ldr	x17, [x16, #792]
    6b68:	add	x16, x16, #0x318
    6b6c:	br	x17

0000000000006b70 <abort@plt>:
    6b70:	adrp	x16, 32000 <Perl_setlocale>
    6b74:	ldr	x17, [x16, #800]
    6b78:	add	x16, x16, #0x320
    6b7c:	br	x17

0000000000006b80 <Perl_sv_2nv_flags@plt>:
    6b80:	adrp	x16, 32000 <Perl_setlocale>
    6b84:	ldr	x17, [x16, #808]
    6b88:	add	x16, x16, #0x328
    6b8c:	br	x17

0000000000006b90 <fesetround@plt>:
    6b90:	adrp	x16, 32000 <Perl_setlocale>
    6b94:	ldr	x17, [x16, #816]
    6b98:	add	x16, x16, #0x330
    6b9c:	br	x17

0000000000006ba0 <asinh@plt>:
    6ba0:	adrp	x16, 32000 <Perl_setlocale>
    6ba4:	ldr	x17, [x16, #824]
    6ba8:	add	x16, x16, #0x338
    6bac:	br	x17

0000000000006bb0 <setgid@plt>:
    6bb0:	adrp	x16, 32000 <Perl_setlocale>
    6bb4:	ldr	x17, [x16, #832]
    6bb8:	add	x16, x16, #0x340
    6bbc:	br	x17

0000000000006bc0 <acos@plt>:
    6bc0:	adrp	x16, 32000 <Perl_setlocale>
    6bc4:	ldr	x17, [x16, #840]
    6bc8:	add	x16, x16, #0x348
    6bcc:	br	x17

0000000000006bd0 <nexttoward@plt>:
    6bd0:	adrp	x16, 32000 <Perl_setlocale>
    6bd4:	ldr	x17, [x16, #848]
    6bd8:	add	x16, x16, #0x350
    6bdc:	br	x17

0000000000006be0 <access@plt>:
    6be0:	adrp	x16, 32000 <Perl_setlocale>
    6be4:	ldr	x17, [x16, #856]
    6be8:	add	x16, x16, #0x358
    6bec:	br	x17

0000000000006bf0 <Perl_sv_usepvn_flags@plt>:
    6bf0:	adrp	x16, 32000 <Perl_setlocale>
    6bf4:	ldr	x17, [x16, #864]
    6bf8:	add	x16, x16, #0x360
    6bfc:	br	x17

0000000000006c00 <fpathconf@plt>:
    6c00:	adrp	x16, 32000 <Perl_setlocale>
    6c04:	ldr	x17, [x16, #872]
    6c08:	add	x16, x16, #0x368
    6c0c:	br	x17

0000000000006c10 <memcmp@plt>:
    6c10:	adrp	x16, 32000 <Perl_setlocale>
    6c14:	ldr	x17, [x16, #880]
    6c18:	add	x16, x16, #0x370
    6c1c:	br	x17

0000000000006c20 <Perl_gv_fetchpvn_flags@plt>:
    6c20:	adrp	x16, 32000 <Perl_setlocale>
    6c24:	ldr	x17, [x16, #888]
    6c28:	add	x16, x16, #0x378
    6c2c:	br	x17

0000000000006c30 <sigismember@plt>:
    6c30:	adrp	x16, 32000 <Perl_setlocale>
    6c34:	ldr	x17, [x16, #896]
    6c38:	add	x16, x16, #0x380
    6c3c:	br	x17

0000000000006c40 <strcmp@plt>:
    6c40:	adrp	x16, 32000 <Perl_setlocale>
    6c44:	ldr	x17, [x16, #904]
    6c48:	add	x16, x16, #0x388
    6c4c:	br	x17

0000000000006c50 <Perl_cvgv_from_hek@plt>:
    6c50:	adrp	x16, 32000 <Perl_setlocale>
    6c54:	ldr	x17, [x16, #912]
    6c58:	add	x16, x16, #0x390
    6c5c:	br	x17

0000000000006c60 <Perl_save_pushptr@plt>:
    6c60:	adrp	x16, 32000 <Perl_setlocale>
    6c64:	ldr	x17, [x16, #920]
    6c68:	add	x16, x16, #0x398
    6c6c:	br	x17

0000000000006c70 <rint@plt>:
    6c70:	adrp	x16, 32000 <Perl_setlocale>
    6c74:	ldr	x17, [x16, #928]
    6c78:	add	x16, x16, #0x3a0
    6c7c:	br	x17

0000000000006c80 <lchown@plt>:
    6c80:	adrp	x16, 32000 <Perl_setlocale>
    6c84:	ldr	x17, [x16, #936]
    6c88:	add	x16, x16, #0x3a8
    6c8c:	br	x17

0000000000006c90 <strtol@plt>:
    6c90:	adrp	x16, 32000 <Perl_setlocale>
    6c94:	ldr	x17, [x16, #944]
    6c98:	add	x16, x16, #0x3b0
    6c9c:	br	x17

0000000000006ca0 <difftime@plt>:
    6ca0:	adrp	x16, 32000 <Perl_setlocale>
    6ca4:	ldr	x17, [x16, #952]
    6ca8:	add	x16, x16, #0x3b8
    6cac:	br	x17

0000000000006cb0 <wctomb@plt>:
    6cb0:	adrp	x16, 32000 <Perl_setlocale>
    6cb4:	ldr	x17, [x16, #960]
    6cb8:	add	x16, x16, #0x3c0
    6cbc:	br	x17

0000000000006cc0 <setpgid@plt>:
    6cc0:	adrp	x16, 32000 <Perl_setlocale>
    6cc4:	ldr	x17, [x16, #968]
    6cc8:	add	x16, x16, #0x3c8
    6ccc:	br	x17

0000000000006cd0 <Perl_croak_nocontext@plt>:
    6cd0:	adrp	x16, 32000 <Perl_setlocale>
    6cd4:	ldr	x17, [x16, #976]
    6cd8:	add	x16, x16, #0x3d0
    6cdc:	br	x17

0000000000006ce0 <fegetround@plt>:
    6ce0:	adrp	x16, 32000 <Perl_setlocale>
    6ce4:	ldr	x17, [x16, #984]
    6ce8:	add	x16, x16, #0x3d8
    6cec:	br	x17

0000000000006cf0 <strtold@plt>:
    6cf0:	adrp	x16, 32000 <Perl_setlocale>
    6cf4:	ldr	x17, [x16, #992]
    6cf8:	add	x16, x16, #0x3e0
    6cfc:	br	x17

0000000000006d00 <Perl_newXS_deffile@plt>:
    6d00:	adrp	x16, 32000 <Perl_setlocale>
    6d04:	ldr	x17, [x16, #1000]
    6d08:	add	x16, x16, #0x3e8
    6d0c:	br	x17

0000000000006d10 <sinh@plt>:
    6d10:	adrp	x16, 32000 <Perl_setlocale>
    6d14:	ldr	x17, [x16, #1008]
    6d18:	add	x16, x16, #0x3f0
    6d1c:	br	x17

0000000000006d20 <cosh@plt>:
    6d20:	adrp	x16, 32000 <Perl_setlocale>
    6d24:	ldr	x17, [x16, #1016]
    6d28:	add	x16, x16, #0x3f8
    6d2c:	br	x17

0000000000006d30 <__ctype_get_mb_cur_max@plt>:
    6d30:	adrp	x16, 32000 <Perl_setlocale>
    6d34:	ldr	x17, [x16, #1024]
    6d38:	add	x16, x16, #0x400
    6d3c:	br	x17

0000000000006d40 <Perl_mg_set@plt>:
    6d40:	adrp	x16, 32000 <Perl_setlocale>
    6d44:	ldr	x17, [x16, #1032]
    6d48:	add	x16, x16, #0x408
    6d4c:	br	x17

0000000000006d50 <Perl_sv_setsv_flags@plt>:
    6d50:	adrp	x16, 32000 <Perl_setlocale>
    6d54:	ldr	x17, [x16, #1040]
    6d58:	add	x16, x16, #0x410
    6d5c:	br	x17

0000000000006d60 <Perl_sv_2mortal@plt>:
    6d60:	adrp	x16, 32000 <Perl_setlocale>
    6d64:	ldr	x17, [x16, #1048]
    6d68:	add	x16, x16, #0x418
    6d6c:	br	x17

0000000000006d70 <erfc@plt>:
    6d70:	adrp	x16, 32000 <Perl_setlocale>
    6d74:	ldr	x17, [x16, #1056]
    6d78:	add	x16, x16, #0x420
    6d7c:	br	x17

0000000000006d80 <scalbn@plt>:
    6d80:	adrp	x16, 32000 <Perl_setlocale>
    6d84:	ldr	x17, [x16, #1064]
    6d88:	add	x16, x16, #0x428
    6d8c:	br	x17

0000000000006d90 <Perl_mg_get@plt>:
    6d90:	adrp	x16, 32000 <Perl_setlocale>
    6d94:	ldr	x17, [x16, #1072]
    6d98:	add	x16, x16, #0x430
    6d9c:	br	x17

0000000000006da0 <modf@plt>:
    6da0:	adrp	x16, 32000 <Perl_setlocale>
    6da4:	ldr	x17, [x16, #1080]
    6da8:	add	x16, x16, #0x438
    6dac:	br	x17

0000000000006db0 <Perl_hv_common@plt>:
    6db0:	adrp	x16, 32000 <Perl_setlocale>
    6db4:	ldr	x17, [x16, #1088]
    6db8:	add	x16, x16, #0x440
    6dbc:	br	x17

0000000000006dc0 <round@plt>:
    6dc0:	adrp	x16, 32000 <Perl_setlocale>
    6dc4:	ldr	x17, [x16, #1096]
    6dc8:	add	x16, x16, #0x448
    6dcc:	br	x17

0000000000006dd0 <Perl_newSVuv@plt>:
    6dd0:	adrp	x16, 32000 <Perl_setlocale>
    6dd4:	ldr	x17, [x16, #1104]
    6dd8:	add	x16, x16, #0x450
    6ddc:	br	x17

0000000000006de0 <frexp@plt>:
    6de0:	adrp	x16, 32000 <Perl_setlocale>
    6de4:	ldr	x17, [x16, #1112]
    6de8:	add	x16, x16, #0x458
    6dec:	br	x17

0000000000006df0 <tcsendbreak@plt>:
    6df0:	adrp	x16, 32000 <Perl_setlocale>
    6df4:	ldr	x17, [x16, #1120]
    6df8:	add	x16, x16, #0x460
    6dfc:	br	x17

0000000000006e00 <times@plt>:
    6e00:	adrp	x16, 32000 <Perl_setlocale>
    6e04:	ldr	x17, [x16, #1128]
    6e08:	add	x16, x16, #0x468
    6e0c:	br	x17

0000000000006e10 <strxfrm@plt>:
    6e10:	adrp	x16, 32000 <Perl_setlocale>
    6e14:	ldr	x17, [x16, #1136]
    6e18:	add	x16, x16, #0x470
    6e1c:	br	x17

0000000000006e20 <remquo@plt>:
    6e20:	adrp	x16, 32000 <Perl_setlocale>
    6e24:	ldr	x17, [x16, #1144]
    6e28:	add	x16, x16, #0x478
    6e2c:	br	x17

0000000000006e30 <Perl_croak_sv@plt>:
    6e30:	adrp	x16, 32000 <Perl_setlocale>
    6e34:	ldr	x17, [x16, #1152]
    6e38:	add	x16, x16, #0x480
    6e3c:	br	x17

0000000000006e40 <Perl_xs_handshake@plt>:
    6e40:	adrp	x16, 32000 <Perl_setlocale>
    6e44:	ldr	x17, [x16, #1160]
    6e48:	add	x16, x16, #0x488
    6e4c:	br	x17

0000000000006e50 <nextafter@plt>:
    6e50:	adrp	x16, 32000 <Perl_setlocale>
    6e54:	ldr	x17, [x16, #1168]
    6e58:	add	x16, x16, #0x490
    6e5c:	br	x17

0000000000006e60 <floor@plt>:
    6e60:	adrp	x16, 32000 <Perl_setlocale>
    6e64:	ldr	x17, [x16, #1176]
    6e68:	add	x16, x16, #0x498
    6e6c:	br	x17

0000000000006e70 <ceil@plt>:
    6e70:	adrp	x16, 32000 <Perl_setlocale>
    6e74:	ldr	x17, [x16, #1184]
    6e78:	add	x16, x16, #0x4a0
    6e7c:	br	x17

0000000000006e80 <read@plt>:
    6e80:	adrp	x16, 32000 <Perl_setlocale>
    6e84:	ldr	x17, [x16, #1192]
    6e88:	add	x16, x16, #0x4a8
    6e8c:	br	x17

0000000000006e90 <jn@plt>:
    6e90:	adrp	x16, 32000 <Perl_setlocale>
    6e94:	ldr	x17, [x16, #1200]
    6e98:	add	x16, x16, #0x4b0
    6e9c:	br	x17

0000000000006ea0 <tcsetattr@plt>:
    6ea0:	adrp	x16, 32000 <Perl_setlocale>
    6ea4:	ldr	x17, [x16, #1208]
    6ea8:	add	x16, x16, #0x4b8
    6eac:	br	x17

0000000000006eb0 <sysconf@plt>:
    6eb0:	adrp	x16, 32000 <Perl_setlocale>
    6eb4:	ldr	x17, [x16, #1216]
    6eb8:	add	x16, x16, #0x4c0
    6ebc:	br	x17

0000000000006ec0 <wcstombs@plt>:
    6ec0:	adrp	x16, 32000 <Perl_setlocale>
    6ec4:	ldr	x17, [x16, #1224]
    6ec8:	add	x16, x16, #0x4c8
    6ecc:	br	x17

0000000000006ed0 <cfgetispeed@plt>:
    6ed0:	adrp	x16, 32000 <Perl_setlocale>
    6ed4:	ldr	x17, [x16, #1232]
    6ed8:	add	x16, x16, #0x4d0
    6edc:	br	x17

0000000000006ee0 <open64@plt>:
    6ee0:	adrp	x16, 32000 <Perl_setlocale>
    6ee4:	ldr	x17, [x16, #1240]
    6ee8:	add	x16, x16, #0x4d8
    6eec:	br	x17

0000000000006ef0 <mbrlen@plt>:
    6ef0:	adrp	x16, 32000 <Perl_setlocale>
    6ef4:	ldr	x17, [x16, #1248]
    6ef8:	add	x16, x16, #0x4e0
    6efc:	br	x17

0000000000006f00 <Perl_hv_common_key_len@plt>:
    6f00:	adrp	x16, 32000 <Perl_setlocale>
    6f04:	ldr	x17, [x16, #1256]
    6f08:	add	x16, x16, #0x4e8
    6f0c:	br	x17

0000000000006f10 <Perl_sv_setpvn@plt>:
    6f10:	adrp	x16, 32000 <Perl_setlocale>
    6f14:	ldr	x17, [x16, #1264]
    6f18:	add	x16, x16, #0x4f0
    6f1c:	br	x17

0000000000006f20 <Perl_newRV@plt>:
    6f20:	adrp	x16, 32000 <Perl_setlocale>
    6f24:	ldr	x17, [x16, #1272]
    6f28:	add	x16, x16, #0x4f8
    6f2c:	br	x17

0000000000006f30 <trunc@plt>:
    6f30:	adrp	x16, 32000 <Perl_setlocale>
    6f34:	ldr	x17, [x16, #1280]
    6f38:	add	x16, x16, #0x500
    6f3c:	br	x17

0000000000006f40 <Perl_newSV_type@plt>:
    6f40:	adrp	x16, 32000 <Perl_setlocale>
    6f44:	ldr	x17, [x16, #1288]
    6f48:	add	x16, x16, #0x508
    6f4c:	br	x17

0000000000006f50 <Perl_newSVrv@plt>:
    6f50:	adrp	x16, 32000 <Perl_setlocale>
    6f54:	ldr	x17, [x16, #1296]
    6f58:	add	x16, x16, #0x510
    6f5c:	br	x17

0000000000006f60 <setsid@plt>:
    6f60:	adrp	x16, 32000 <Perl_setlocale>
    6f64:	ldr	x17, [x16, #1304]
    6f68:	add	x16, x16, #0x518
    6f6c:	br	x17

0000000000006f70 <Perl_block_gimme@plt>:
    6f70:	adrp	x16, 32000 <Perl_setlocale>
    6f74:	ldr	x17, [x16, #1312]
    6f78:	add	x16, x16, #0x520
    6f7c:	br	x17

0000000000006f80 <Perl_newSVpvf_nocontext@plt>:
    6f80:	adrp	x16, 32000 <Perl_setlocale>
    6f84:	ldr	x17, [x16, #1320]
    6f88:	add	x16, x16, #0x528
    6f8c:	br	x17

0000000000006f90 <fmod@plt>:
    6f90:	adrp	x16, 32000 <Perl_setlocale>
    6f94:	ldr	x17, [x16, #1328]
    6f98:	add	x16, x16, #0x530
    6f9c:	br	x17

0000000000006fa0 <atanh@plt>:
    6fa0:	adrp	x16, 32000 <Perl_setlocale>
    6fa4:	ldr	x17, [x16, #1336]
    6fa8:	add	x16, x16, #0x538
    6fac:	br	x17

0000000000006fb0 <cfsetispeed@plt>:
    6fb0:	adrp	x16, 32000 <Perl_setlocale>
    6fb4:	ldr	x17, [x16, #1344]
    6fb8:	add	x16, x16, #0x540
    6fbc:	br	x17

0000000000006fc0 <strcoll@plt>:
    6fc0:	adrp	x16, 32000 <Perl_setlocale>
    6fc4:	ldr	x17, [x16, #1352]
    6fc8:	add	x16, x16, #0x548
    6fcc:	br	x17

0000000000006fd0 <Perl_sv_magic@plt>:
    6fd0:	adrp	x16, 32000 <Perl_setlocale>
    6fd4:	ldr	x17, [x16, #1360]
    6fd8:	add	x16, x16, #0x550
    6fdc:	br	x17

0000000000006fe0 <lround@plt>:
    6fe0:	adrp	x16, 32000 <Perl_setlocale>
    6fe4:	ldr	x17, [x16, #1368]
    6fe8:	add	x16, x16, #0x558
    6fec:	br	x17

0000000000006ff0 <sigdelset@plt>:
    6ff0:	adrp	x16, 32000 <Perl_setlocale>
    6ff4:	ldr	x17, [x16, #1376]
    6ff8:	add	x16, x16, #0x560
    6ffc:	br	x17

0000000000007000 <Perl_taint_proper@plt>:
    7000:	adrp	x16, 32000 <Perl_setlocale>
    7004:	ldr	x17, [x16, #1384]
    7008:	add	x16, x16, #0x568
    700c:	br	x17

0000000000007010 <Perl_sv_setuv_mg@plt>:
    7010:	adrp	x16, 32000 <Perl_setlocale>
    7014:	ldr	x17, [x16, #1392]
    7018:	add	x16, x16, #0x570
    701c:	br	x17

0000000000007020 <sigpending@plt>:
    7020:	adrp	x16, 32000 <Perl_setlocale>
    7024:	ldr	x17, [x16, #1400]
    7028:	add	x16, x16, #0x578
    702c:	br	x17

0000000000007030 <dup2@plt>:
    7030:	adrp	x16, 32000 <Perl_setlocale>
    7034:	ldr	x17, [x16, #1408]
    7038:	add	x16, x16, #0x580
    703c:	br	x17

0000000000007040 <Perl_sv_free2@plt>:
    7040:	adrp	x16, 32000 <Perl_setlocale>
    7044:	ldr	x17, [x16, #1416]
    7048:	add	x16, x16, #0x588
    704c:	br	x17

0000000000007050 <Perl_ckwarn@plt>:
    7050:	adrp	x16, 32000 <Perl_setlocale>
    7054:	ldr	x17, [x16, #1424]
    7058:	add	x16, x16, #0x590
    705c:	br	x17

0000000000007060 <Perl_push_scope@plt>:
    7060:	adrp	x16, 32000 <Perl_setlocale>
    7064:	ldr	x17, [x16, #1432]
    7068:	add	x16, x16, #0x598
    706c:	br	x17

0000000000007070 <Perl_save_destructor_x@plt>:
    7070:	adrp	x16, 32000 <Perl_setlocale>
    7074:	ldr	x17, [x16, #1440]
    7078:	add	x16, x16, #0x5a0
    707c:	br	x17

0000000000007080 <sigaddset@plt>:
    7080:	adrp	x16, 32000 <Perl_setlocale>
    7084:	ldr	x17, [x16, #1448]
    7088:	add	x16, x16, #0x5a8
    708c:	br	x17

0000000000007090 <tan@plt>:
    7090:	adrp	x16, 32000 <Perl_setlocale>
    7094:	ldr	x17, [x16, #1456]
    7098:	add	x16, x16, #0x5b0
    709c:	br	x17

00000000000070a0 <j0@plt>:
    70a0:	adrp	x16, 32000 <Perl_setlocale>
    70a4:	ldr	x17, [x16, #1464]
    70a8:	add	x16, x16, #0x5b8
    70ac:	br	x17

00000000000070b0 <Perl_newSViv@plt>:
    70b0:	adrp	x16, 32000 <Perl_setlocale>
    70b4:	ldr	x17, [x16, #1472]
    70b8:	add	x16, x16, #0x5c0
    70bc:	br	x17

00000000000070c0 <lrint@plt>:
    70c0:	adrp	x16, 32000 <Perl_setlocale>
    70c4:	ldr	x17, [x16, #1480]
    70c8:	add	x16, x16, #0x5c8
    70cc:	br	x17

00000000000070d0 <__errno_location@plt>:
    70d0:	adrp	x16, 32000 <Perl_setlocale>
    70d4:	ldr	x17, [x16, #1488]
    70d8:	add	x16, x16, #0x5d0
    70dc:	br	x17

00000000000070e0 <uname@plt>:
    70e0:	adrp	x16, 32000 <Perl_setlocale>
    70e4:	ldr	x17, [x16, #1496]
    70e8:	add	x16, x16, #0x5d8
    70ec:	br	x17

00000000000070f0 <yn@plt>:
    70f0:	adrp	x16, 32000 <Perl_setlocale>
    70f4:	ldr	x17, [x16, #1504]
    70f8:	add	x16, x16, #0x5e0
    70fc:	br	x17

0000000000007100 <Perl_whichsig_pv@plt>:
    7100:	adrp	x16, 32000 <Perl_setlocale>
    7104:	ldr	x17, [x16, #1512]
    7108:	add	x16, x16, #0x5e8
    710c:	br	x17

0000000000007110 <Perl_gv_add_by_type@plt>:
    7110:	adrp	x16, 32000 <Perl_setlocale>
    7114:	ldr	x17, [x16, #1520]
    7118:	add	x16, x16, #0x5f0
    711c:	br	x17

0000000000007120 <Perl_sv_setiv@plt>:
    7120:	adrp	x16, 32000 <Perl_setlocale>
    7124:	ldr	x17, [x16, #1528]
    7128:	add	x16, x16, #0x5f8
    712c:	br	x17

0000000000007130 <asctime_r@plt>:
    7130:	adrp	x16, 32000 <Perl_setlocale>
    7134:	ldr	x17, [x16, #1536]
    7138:	add	x16, x16, #0x600
    713c:	br	x17

0000000000007140 <atan@plt>:
    7140:	adrp	x16, 32000 <Perl_setlocale>
    7144:	ldr	x17, [x16, #1544]
    7148:	add	x16, x16, #0x608
    714c:	br	x17

0000000000007150 <Perl_newSVpvn@plt>:
    7150:	adrp	x16, 32000 <Perl_setlocale>
    7154:	ldr	x17, [x16, #1552]
    7158:	add	x16, x16, #0x610
    715c:	br	x17

0000000000007160 <Perl_sv_newmortal@plt>:
    7160:	adrp	x16, 32000 <Perl_setlocale>
    7164:	ldr	x17, [x16, #1560]
    7168:	add	x16, x16, #0x618
    716c:	br	x17

0000000000007170 <Perl_caller_cx@plt>:
    7170:	adrp	x16, 32000 <Perl_setlocale>
    7174:	ldr	x17, [x16, #1568]
    7178:	add	x16, x16, #0x620
    717c:	br	x17

0000000000007180 <fmin@plt>:
    7180:	adrp	x16, 32000 <Perl_setlocale>
    7184:	ldr	x17, [x16, #1576]
    7188:	add	x16, x16, #0x628
    718c:	br	x17

0000000000007190 <tcflow@plt>:
    7190:	adrp	x16, 32000 <Perl_setlocale>
    7194:	ldr	x17, [x16, #1584]
    7198:	add	x16, x16, #0x630
    719c:	br	x17

00000000000071a0 <Perl_get_hv@plt>:
    71a0:	adrp	x16, 32000 <Perl_setlocale>
    71a4:	ldr	x17, [x16, #1592]
    71a8:	add	x16, x16, #0x638
    71ac:	br	x17

Disassembly of section .text:

00000000000071b0 <call_weak_fn>:
    71b0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    71b4:	ldr	x0, [x0, #3984]
    71b8:	cbz	x0, 71c0 <call_weak_fn+0x10>
    71bc:	b	6ae0 <__gmon_start__@plt>
    71c0:	ret

00000000000071c4 <deregister_tm_clones>:
    71c4:	stp	x29, x30, [sp, #-32]!
    71c8:	mov	x29, sp
    71cc:	adrp	x0, 32000 <Perl_setlocale>
    71d0:	add	x0, x0, #0x648
    71d4:	str	x0, [sp, #24]
    71d8:	ldr	x0, [sp, #24]
    71dc:	str	x0, [sp, #24]
    71e0:	ldr	x1, [sp, #24]
    71e4:	adrp	x0, 32000 <Perl_setlocale>
    71e8:	add	x0, x0, #0x648
    71ec:	cmp	x1, x0
    71f0:	b.eq	7228 <deregister_tm_clones+0x64>  // b.none
    71f4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    71f8:	ldr	x0, [x0, #3960]
    71fc:	str	x0, [sp, #16]
    7200:	ldr	x0, [sp, #16]
    7204:	str	x0, [sp, #16]
    7208:	ldr	x0, [sp, #16]
    720c:	cmp	x0, #0x0
    7210:	b.eq	722c <deregister_tm_clones+0x68>  // b.none
    7214:	ldr	x1, [sp, #16]
    7218:	adrp	x0, 32000 <Perl_setlocale>
    721c:	add	x0, x0, #0x648
    7220:	blr	x1
    7224:	b	722c <deregister_tm_clones+0x68>
    7228:	nop
    722c:	ldp	x29, x30, [sp], #32
    7230:	ret

0000000000007234 <register_tm_clones>:
    7234:	stp	x29, x30, [sp, #-48]!
    7238:	mov	x29, sp
    723c:	adrp	x0, 32000 <Perl_setlocale>
    7240:	add	x0, x0, #0x648
    7244:	str	x0, [sp, #40]
    7248:	ldr	x0, [sp, #40]
    724c:	str	x0, [sp, #40]
    7250:	ldr	x1, [sp, #40]
    7254:	adrp	x0, 32000 <Perl_setlocale>
    7258:	add	x0, x0, #0x648
    725c:	sub	x0, x1, x0
    7260:	asr	x0, x0, #3
    7264:	lsr	x1, x0, #63
    7268:	add	x0, x1, x0
    726c:	asr	x0, x0, #1
    7270:	str	x0, [sp, #32]
    7274:	ldr	x0, [sp, #32]
    7278:	cmp	x0, #0x0
    727c:	b.eq	72b8 <register_tm_clones+0x84>  // b.none
    7280:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7284:	ldr	x0, [x0, #4064]
    7288:	str	x0, [sp, #24]
    728c:	ldr	x0, [sp, #24]
    7290:	str	x0, [sp, #24]
    7294:	ldr	x0, [sp, #24]
    7298:	cmp	x0, #0x0
    729c:	b.eq	72bc <register_tm_clones+0x88>  // b.none
    72a0:	ldr	x2, [sp, #24]
    72a4:	ldr	x1, [sp, #32]
    72a8:	adrp	x0, 32000 <Perl_setlocale>
    72ac:	add	x0, x0, #0x648
    72b0:	blr	x2
    72b4:	b	72bc <register_tm_clones+0x88>
    72b8:	nop
    72bc:	ldp	x29, x30, [sp], #48
    72c0:	ret

00000000000072c4 <__do_global_dtors_aux>:
    72c4:	stp	x29, x30, [sp, #-16]!
    72c8:	mov	x29, sp
    72cc:	adrp	x0, 32000 <Perl_setlocale>
    72d0:	add	x0, x0, #0x648
    72d4:	ldrb	w0, [x0]
    72d8:	and	x0, x0, #0xff
    72dc:	cmp	x0, #0x0
    72e0:	b.ne	731c <__do_global_dtors_aux+0x58>  // b.any
    72e4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    72e8:	ldr	x0, [x0, #3968]
    72ec:	cmp	x0, #0x0
    72f0:	b.eq	7304 <__do_global_dtors_aux+0x40>  // b.none
    72f4:	adrp	x0, 32000 <Perl_setlocale>
    72f8:	add	x0, x0, #0x640
    72fc:	ldr	x0, [x0]
    7300:	bl	6730 <__cxa_finalize@plt>
    7304:	bl	71c4 <deregister_tm_clones>
    7308:	adrp	x0, 32000 <Perl_setlocale>
    730c:	add	x0, x0, #0x648
    7310:	mov	w1, #0x1                   	// #1
    7314:	strb	w1, [x0]
    7318:	b	7320 <__do_global_dtors_aux+0x5c>
    731c:	nop
    7320:	ldp	x29, x30, [sp], #16
    7324:	ret

0000000000007328 <frame_dummy>:
    7328:	stp	x29, x30, [sp, #-16]!
    732c:	mov	x29, sp
    7330:	bl	7234 <register_tm_clones>
    7334:	nop
    7338:	ldp	x29, x30, [sp], #16
    733c:	ret

0000000000007340 <S_CvGV>:
    7340:	stp	x29, x30, [sp, #-48]!
    7344:	mov	x29, sp
    7348:	str	x0, [sp, #24]
    734c:	str	x1, [sp, #16]
    7350:	ldr	x0, [sp, #16]
    7354:	ldr	x0, [x0]
    7358:	str	x0, [sp, #32]
    735c:	ldr	x0, [sp, #32]
    7360:	ldr	w0, [x0, #92]
    7364:	and	w0, w0, #0x8000
    7368:	cmp	w0, #0x0
    736c:	b.eq	7380 <S_CvGV+0x40>  // b.none
    7370:	ldr	x1, [sp, #16]
    7374:	ldr	x0, [sp, #24]
    7378:	bl	6c50 <Perl_cvgv_from_hek@plt>
    737c:	b	7394 <S_CvGV+0x54>
    7380:	ldr	x0, [sp, #16]
    7384:	ldr	x0, [x0]
    7388:	str	x0, [sp, #40]
    738c:	ldr	x0, [sp, #40]
    7390:	ldr	x0, [x0, #56]
    7394:	ldp	x29, x30, [sp], #48
    7398:	ret

000000000000739c <S_POPMARK>:
    739c:	sub	sp, sp, #0x10
    73a0:	str	x0, [sp, #8]
    73a4:	ldr	x0, [sp, #8]
    73a8:	ldr	x0, [x0, #120]
    73ac:	sub	x2, x0, #0x4
    73b0:	ldr	x1, [sp, #8]
    73b4:	str	x2, [x1, #120]
    73b8:	ldr	w0, [x0]
    73bc:	add	sp, sp, #0x10
    73c0:	ret

00000000000073c4 <S_SvREFCNT_dec>:
    73c4:	stp	x29, x30, [sp, #-48]!
    73c8:	mov	x29, sp
    73cc:	str	x0, [sp, #24]
    73d0:	str	x1, [sp, #16]
    73d4:	ldr	x0, [sp, #16]
    73d8:	cmp	x0, #0x0
    73dc:	cset	w0, ne  // ne = any
    73e0:	and	w0, w0, #0xff
    73e4:	and	x0, x0, #0xff
    73e8:	cmp	x0, #0x0
    73ec:	b.eq	743c <S_SvREFCNT_dec+0x78>  // b.none
    73f0:	ldr	x0, [sp, #16]
    73f4:	ldr	w0, [x0, #8]
    73f8:	str	w0, [sp, #44]
    73fc:	ldr	w0, [sp, #44]
    7400:	cmp	w0, #0x1
    7404:	cset	w0, hi  // hi = pmore
    7408:	and	w0, w0, #0xff
    740c:	and	x0, x0, #0xff
    7410:	cmp	x0, #0x0
    7414:	b.eq	742c <S_SvREFCNT_dec+0x68>  // b.none
    7418:	ldr	w0, [sp, #44]
    741c:	sub	w1, w0, #0x1
    7420:	ldr	x0, [sp, #16]
    7424:	str	w1, [x0, #8]
    7428:	b	743c <S_SvREFCNT_dec+0x78>
    742c:	ldr	w2, [sp, #44]
    7430:	ldr	x1, [sp, #16]
    7434:	ldr	x0, [sp, #24]
    7438:	bl	7040 <Perl_sv_free2@plt>
    743c:	nop
    7440:	ldp	x29, x30, [sp], #48
    7444:	ret

0000000000007448 <S_croak_memory_wrap>:
    7448:	stp	x29, x30, [sp, #-16]!
    744c:	mov	x29, sp
    7450:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7454:	ldr	x1, [x0, #4008]
    7458:	adrp	x0, 1a000 <boot_POSIX+0x1c40>
    745c:	add	x0, x0, #0xe18
    7460:	bl	6cd0 <Perl_croak_nocontext@plt>

0000000000007464 <S_is_utf8_invariant_string_loc>:
    7464:	stp	x29, x30, [sp, #-64]!
    7468:	mov	x29, sp
    746c:	str	x0, [sp, #40]
    7470:	str	x1, [sp, #32]
    7474:	str	x2, [sp, #24]
    7478:	ldr	x0, [sp, #40]
    747c:	str	x0, [sp, #48]
    7480:	ldr	x0, [sp, #32]
    7484:	cmp	x0, #0x0
    7488:	b.ne	7498 <S_is_utf8_invariant_string_loc+0x34>  // b.any
    748c:	ldr	x0, [sp, #40]
    7490:	bl	65c0 <strlen@plt>
    7494:	str	x0, [sp, #32]
    7498:	ldr	x1, [sp, #40]
    749c:	ldr	x0, [sp, #32]
    74a0:	add	x0, x1, x0
    74a4:	str	x0, [sp, #56]
    74a8:	ldr	x1, [sp, #56]
    74ac:	ldr	x0, [sp, #48]
    74b0:	sub	x0, x1, x0
    74b4:	mov	x2, x0
    74b8:	ldr	x0, [sp, #48]
    74bc:	lsr	x1, x0, #1
    74c0:	ldr	x0, [sp, #48]
    74c4:	orr	x1, x1, x0
    74c8:	ldr	x0, [sp, #48]
    74cc:	lsr	x0, x0, #2
    74d0:	and	x0, x0, #0x1
    74d4:	orr	x0, x1, x0
    74d8:	and	x0, x0, #0x1
    74dc:	add	x0, x0, #0x1
    74e0:	lsl	x1, x0, #3
    74e4:	ldr	x0, [sp, #48]
    74e8:	and	x0, x0, #0x7
    74ec:	sub	x0, x1, x0
    74f0:	cmp	x2, x0
    74f4:	b.cc	7600 <S_is_utf8_invariant_string_loc+0x19c>  // b.lo, b.ul, b.last
    74f8:	b	753c <S_is_utf8_invariant_string_loc+0xd8>
    74fc:	ldr	x0, [sp, #48]
    7500:	ldrb	w0, [x0]
    7504:	sxtb	w0, w0
    7508:	cmp	w0, #0x0
    750c:	b.ge	7530 <S_is_utf8_invariant_string_loc+0xcc>  // b.tcont
    7510:	ldr	x0, [sp, #24]
    7514:	cmp	x0, #0x0
    7518:	b.eq	7528 <S_is_utf8_invariant_string_loc+0xc4>  // b.none
    751c:	ldr	x0, [sp, #24]
    7520:	ldr	x1, [sp, #48]
    7524:	str	x1, [x0]
    7528:	mov	w0, #0x0                   	// #0
    752c:	b	7614 <S_is_utf8_invariant_string_loc+0x1b0>
    7530:	ldr	x0, [sp, #48]
    7534:	add	x0, x0, #0x1
    7538:	str	x0, [sp, #48]
    753c:	ldr	x0, [sp, #48]
    7540:	and	x0, x0, #0x7
    7544:	cmp	x0, #0x0
    7548:	b.ne	74fc <S_is_utf8_invariant_string_loc+0x98>  // b.any
    754c:	ldr	x0, [sp, #48]
    7550:	ldr	x0, [x0]
    7554:	and	x0, x0, #0x8080808080808080
    7558:	cmp	x0, #0x0
    755c:	b.eq	759c <S_is_utf8_invariant_string_loc+0x138>  // b.none
    7560:	ldr	x0, [sp, #24]
    7564:	cmp	x0, #0x0
    7568:	b.ne	7574 <S_is_utf8_invariant_string_loc+0x110>  // b.any
    756c:	mov	w0, #0x0                   	// #0
    7570:	b	7614 <S_is_utf8_invariant_string_loc+0x1b0>
    7574:	ldr	x0, [sp, #48]
    7578:	ldr	x0, [x0]
    757c:	bl	761c <S__variant_byte_number>
    7580:	mov	w0, w0
    7584:	ldr	x1, [sp, #48]
    7588:	add	x1, x1, x0
    758c:	ldr	x0, [sp, #24]
    7590:	str	x1, [x0]
    7594:	mov	w0, #0x0                   	// #0
    7598:	b	7614 <S_is_utf8_invariant_string_loc+0x1b0>
    759c:	ldr	x0, [sp, #48]
    75a0:	add	x0, x0, #0x8
    75a4:	str	x0, [sp, #48]
    75a8:	ldr	x0, [sp, #48]
    75ac:	add	x0, x0, #0x8
    75b0:	ldr	x1, [sp, #56]
    75b4:	cmp	x1, x0
    75b8:	b.cs	754c <S_is_utf8_invariant_string_loc+0xe8>  // b.hs, b.nlast
    75bc:	b	7600 <S_is_utf8_invariant_string_loc+0x19c>
    75c0:	ldr	x0, [sp, #48]
    75c4:	ldrb	w0, [x0]
    75c8:	sxtb	w0, w0
    75cc:	cmp	w0, #0x0
    75d0:	b.ge	75f4 <S_is_utf8_invariant_string_loc+0x190>  // b.tcont
    75d4:	ldr	x0, [sp, #24]
    75d8:	cmp	x0, #0x0
    75dc:	b.eq	75ec <S_is_utf8_invariant_string_loc+0x188>  // b.none
    75e0:	ldr	x0, [sp, #24]
    75e4:	ldr	x1, [sp, #48]
    75e8:	str	x1, [x0]
    75ec:	mov	w0, #0x0                   	// #0
    75f0:	b	7614 <S_is_utf8_invariant_string_loc+0x1b0>
    75f4:	ldr	x0, [sp, #48]
    75f8:	add	x0, x0, #0x1
    75fc:	str	x0, [sp, #48]
    7600:	ldr	x1, [sp, #48]
    7604:	ldr	x0, [sp, #56]
    7608:	cmp	x1, x0
    760c:	b.cc	75c0 <S_is_utf8_invariant_string_loc+0x15c>  // b.lo, b.ul, b.last
    7610:	mov	w0, #0x1                   	// #1
    7614:	ldp	x29, x30, [sp], #64
    7618:	ret

000000000000761c <S__variant_byte_number>:
    761c:	sub	sp, sp, #0x10
    7620:	str	x0, [sp, #8]
    7624:	ldr	x0, [sp, #8]
    7628:	and	x0, x0, #0x8080808080808080
    762c:	str	x0, [sp, #8]
    7630:	ldr	x0, [sp, #8]
    7634:	lsr	x0, x0, #1
    7638:	str	x0, [sp, #8]
    763c:	ldr	x0, [sp, #8]
    7640:	sub	x1, x0, #0x1
    7644:	ldr	x0, [sp, #8]
    7648:	eor	x0, x1, x0
    764c:	add	x0, x0, #0x1
    7650:	str	x0, [sp, #8]
    7654:	ldr	x0, [sp, #8]
    7658:	lsr	x1, x0, #7
    765c:	mov	x0, #0x373f                	// #14143
    7660:	movk	x0, #0x272f, lsl #16
    7664:	movk	x0, #0x171f, lsl #32
    7668:	movk	x0, #0x70f, lsl #48
    766c:	mul	x0, x1, x0
    7670:	str	x0, [sp, #8]
    7674:	ldr	x0, [sp, #8]
    7678:	lsr	x0, x0, #56
    767c:	str	x0, [sp, #8]
    7680:	ldr	x0, [sp, #8]
    7684:	add	x0, x0, #0x1
    7688:	lsr	x0, x0, #3
    768c:	sub	x0, x0, #0x1
    7690:	str	x0, [sp, #8]
    7694:	ldr	x0, [sp, #8]
    7698:	add	sp, sp, #0x10
    769c:	ret

00000000000076a0 <S_is_utf8_non_invariant_string>:
    76a0:	stp	x29, x30, [sp, #-48]!
    76a4:	mov	x29, sp
    76a8:	str	x0, [sp, #24]
    76ac:	str	x1, [sp, #16]
    76b0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    76b4:	ldr	x0, [x0, #3992]
    76b8:	ldr	x1, [x0]
    76bc:	str	x1, [sp, #40]
    76c0:	mov	x1, #0x0                   	// #0
    76c4:	add	x0, sp, #0x20
    76c8:	mov	x2, x0
    76cc:	ldr	x1, [sp, #16]
    76d0:	ldr	x0, [sp, #24]
    76d4:	bl	7464 <S_is_utf8_invariant_string_loc>
    76d8:	and	w0, w0, #0xff
    76dc:	cmp	w0, #0x0
    76e0:	b.eq	76ec <S_is_utf8_non_invariant_string+0x4c>  // b.none
    76e4:	mov	w0, #0x0                   	// #0
    76e8:	b	7720 <S_is_utf8_non_invariant_string+0x80>
    76ec:	ldr	x4, [sp, #32]
    76f0:	ldr	x1, [sp, #32]
    76f4:	ldr	x0, [sp, #24]
    76f8:	sub	x0, x1, x0
    76fc:	mov	x1, x0
    7700:	ldr	x0, [sp, #16]
    7704:	sub	x0, x0, x1
    7708:	mov	x3, #0x0                   	// #0
    770c:	mov	x2, #0x0                   	// #0
    7710:	mov	x1, x0
    7714:	mov	x0, x4
    7718:	bl	7750 <Perl_is_utf8_string_loclen>
    771c:	and	w0, w0, #0xff
    7720:	mov	w1, w0
    7724:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7728:	ldr	x0, [x0, #3992]
    772c:	ldr	x2, [sp, #40]
    7730:	ldr	x0, [x0]
    7734:	eor	x0, x2, x0
    7738:	cmp	x0, #0x0
    773c:	b.eq	7744 <S_is_utf8_non_invariant_string+0xa4>  // b.none
    7740:	bl	6a60 <__stack_chk_fail@plt>
    7744:	mov	w0, w1
    7748:	ldp	x29, x30, [sp], #48
    774c:	ret

0000000000007750 <Perl_is_utf8_string_loclen>:
    7750:	stp	x29, x30, [sp, #-96]!
    7754:	mov	x29, sp
    7758:	str	x0, [sp, #40]
    775c:	str	x1, [sp, #32]
    7760:	str	x2, [sp, #24]
    7764:	str	x3, [sp, #16]
    7768:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    776c:	ldr	x0, [x0, #3992]
    7770:	ldr	x1, [x0]
    7774:	str	x1, [sp, #88]
    7778:	mov	x1, #0x0                   	// #0
    777c:	ldr	x0, [sp, #32]
    7780:	cmp	x0, #0x0
    7784:	b.ne	7794 <Perl_is_utf8_string_loclen+0x44>  // b.any
    7788:	ldr	x0, [sp, #40]
    778c:	bl	65c0 <strlen@plt>
    7790:	str	x0, [sp, #32]
    7794:	add	x0, sp, #0x30
    7798:	mov	x2, x0
    779c:	ldr	x1, [sp, #32]
    77a0:	ldr	x0, [sp, #40]
    77a4:	bl	7464 <S_is_utf8_invariant_string_loc>
    77a8:	and	w0, w0, #0xff
    77ac:	cmp	w0, #0x0
    77b0:	b.eq	77f4 <Perl_is_utf8_string_loclen+0xa4>  // b.none
    77b4:	ldr	x0, [sp, #16]
    77b8:	cmp	x0, #0x0
    77bc:	b.eq	77cc <Perl_is_utf8_string_loclen+0x7c>  // b.none
    77c0:	ldr	x0, [sp, #16]
    77c4:	ldr	x1, [sp, #32]
    77c8:	str	x1, [x0]
    77cc:	ldr	x0, [sp, #24]
    77d0:	cmp	x0, #0x0
    77d4:	b.eq	77ec <Perl_is_utf8_string_loclen+0x9c>  // b.none
    77d8:	ldr	x1, [sp, #40]
    77dc:	ldr	x0, [sp, #32]
    77e0:	add	x1, x1, x0
    77e4:	ldr	x0, [sp, #24]
    77e8:	str	x1, [x0]
    77ec:	mov	w0, #0x1                   	// #1
    77f0:	b	78c4 <Perl_is_utf8_string_loclen+0x174>
    77f4:	ldr	x1, [sp, #40]
    77f8:	ldr	x0, [sp, #32]
    77fc:	add	x0, x1, x0
    7800:	str	x0, [sp, #72]
    7804:	ldr	x0, [sp, #48]
    7808:	str	x0, [sp, #56]
    780c:	ldr	x1, [sp, #48]
    7810:	ldr	x0, [sp, #40]
    7814:	sub	x0, x1, x0
    7818:	str	x0, [sp, #64]
    781c:	b	7868 <Perl_is_utf8_string_loclen+0x118>
    7820:	ldr	x1, [sp, #72]
    7824:	ldr	x0, [sp, #56]
    7828:	bl	78f4 <S_isUTF8_CHAR>
    782c:	str	x0, [sp, #80]
    7830:	ldr	x0, [sp, #80]
    7834:	cmp	x0, #0x0
    7838:	cset	w0, eq  // eq = none
    783c:	and	w0, w0, #0xff
    7840:	and	x0, x0, #0xff
    7844:	cmp	x0, #0x0
    7848:	b.ne	787c <Perl_is_utf8_string_loclen+0x12c>  // b.any
    784c:	ldr	x1, [sp, #56]
    7850:	ldr	x0, [sp, #80]
    7854:	add	x0, x1, x0
    7858:	str	x0, [sp, #56]
    785c:	ldr	x0, [sp, #64]
    7860:	add	x0, x0, #0x1
    7864:	str	x0, [sp, #64]
    7868:	ldr	x1, [sp, #56]
    786c:	ldr	x0, [sp, #72]
    7870:	cmp	x1, x0
    7874:	b.cc	7820 <Perl_is_utf8_string_loclen+0xd0>  // b.lo, b.ul, b.last
    7878:	b	7880 <Perl_is_utf8_string_loclen+0x130>
    787c:	nop
    7880:	ldr	x0, [sp, #16]
    7884:	cmp	x0, #0x0
    7888:	b.eq	7898 <Perl_is_utf8_string_loclen+0x148>  // b.none
    788c:	ldr	x0, [sp, #16]
    7890:	ldr	x1, [sp, #64]
    7894:	str	x1, [x0]
    7898:	ldr	x0, [sp, #24]
    789c:	cmp	x0, #0x0
    78a0:	b.eq	78b0 <Perl_is_utf8_string_loclen+0x160>  // b.none
    78a4:	ldr	x0, [sp, #24]
    78a8:	ldr	x1, [sp, #56]
    78ac:	str	x1, [x0]
    78b0:	ldr	x1, [sp, #56]
    78b4:	ldr	x0, [sp, #72]
    78b8:	cmp	x1, x0
    78bc:	cset	w0, eq  // eq = none
    78c0:	and	w0, w0, #0xff
    78c4:	mov	w1, w0
    78c8:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    78cc:	ldr	x0, [x0, #3992]
    78d0:	ldr	x2, [sp, #88]
    78d4:	ldr	x0, [x0]
    78d8:	eor	x0, x2, x0
    78dc:	cmp	x0, #0x0
    78e0:	b.eq	78e8 <Perl_is_utf8_string_loclen+0x198>  // b.none
    78e4:	bl	6a60 <__stack_chk_fail@plt>
    78e8:	mov	w0, w1
    78ec:	ldp	x29, x30, [sp], #96
    78f0:	ret

00000000000078f4 <S_isUTF8_CHAR>:
    78f4:	stp	x29, x30, [sp, #-48]!
    78f8:	mov	x29, sp
    78fc:	str	x0, [sp, #24]
    7900:	str	x1, [sp, #16]
    7904:	ldr	x0, [sp, #24]
    7908:	str	x0, [sp, #32]
    790c:	str	xzr, [sp, #40]
    7910:	b	7984 <S_isUTF8_CHAR+0x90>
    7914:	ldr	x0, [sp, #32]
    7918:	ldrb	w0, [x0]
    791c:	mov	w2, w0
    7920:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7924:	ldr	x1, [x0, #4040]
    7928:	sxtw	x0, w2
    792c:	ldrb	w0, [x1, x0]
    7930:	and	x1, x0, #0xff
    7934:	ldr	x0, [sp, #40]
    7938:	add	x0, x1, x0
    793c:	add	x0, x0, #0x100
    7940:	adrp	x1, 31000 <values_for_iv.23345+0x17b8>
    7944:	ldr	x1, [x1, #4040]
    7948:	ldrb	w0, [x1, x0]
    794c:	and	x0, x0, #0xff
    7950:	str	x0, [sp, #40]
    7954:	ldr	x0, [sp, #40]
    7958:	cmp	x0, #0x0
    795c:	b.eq	7970 <S_isUTF8_CHAR+0x7c>  // b.none
    7960:	ldr	x0, [sp, #32]
    7964:	add	x0, x0, #0x1
    7968:	str	x0, [sp, #32]
    796c:	b	7984 <S_isUTF8_CHAR+0x90>
    7970:	ldr	x1, [sp, #32]
    7974:	ldr	x0, [sp, #24]
    7978:	sub	x0, x1, x0
    797c:	add	x0, x0, #0x1
    7980:	b	79ec <S_isUTF8_CHAR+0xf8>
    7984:	ldr	x1, [sp, #32]
    7988:	ldr	x0, [sp, #16]
    798c:	cmp	x1, x0
    7990:	b.cs	79b0 <S_isUTF8_CHAR+0xbc>  // b.hs, b.nlast
    7994:	ldr	x0, [sp, #40]
    7998:	cmp	x0, #0x1
    799c:	cset	w0, ne  // ne = any
    79a0:	and	w0, w0, #0xff
    79a4:	and	x0, x0, #0xff
    79a8:	cmp	x0, #0x0
    79ac:	b.ne	7914 <S_isUTF8_CHAR+0x20>  // b.any
    79b0:	ldr	x0, [sp, #24]
    79b4:	ldrb	w0, [x0]
    79b8:	cmp	w0, #0xff
    79bc:	b.ne	79e8 <S_isUTF8_CHAR+0xf4>  // b.any
    79c0:	ldr	x1, [sp, #16]
    79c4:	ldr	x0, [sp, #24]
    79c8:	sub	x0, x1, x0
    79cc:	cmp	x0, #0xc
    79d0:	b.le	79e8 <S_isUTF8_CHAR+0xf4>
    79d4:	mov	w2, #0x0                   	// #0
    79d8:	ldr	x1, [sp, #16]
    79dc:	ldr	x0, [sp, #24]
    79e0:	bl	68b0 <Perl__is_utf8_char_helper@plt>
    79e4:	b	79ec <S_isUTF8_CHAR+0xf8>
    79e8:	mov	x0, #0x0                   	// #0
    79ec:	ldp	x29, x30, [sp], #48
    79f0:	ret

00000000000079f4 <my_fegetround>:
    79f4:	stp	x29, x30, [sp, #-16]!
    79f8:	mov	x29, sp
    79fc:	bl	6ce0 <fegetround@plt>
    7a00:	ldp	x29, x30, [sp], #16
    7a04:	ret

0000000000007a08 <S_setpayload>:
    7a08:	stp	x29, x30, [sp, #-96]!
    7a0c:	mov	x29, sp
    7a10:	str	x0, [sp, #40]
    7a14:	str	x1, [sp, #32]
    7a18:	strb	w2, [sp, #31]
    7a1c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7a20:	ldr	x0, [x0, #3992]
    7a24:	ldr	x1, [x0]
    7a28:	str	x1, [sp, #88]
    7a2c:	mov	x1, #0x0                   	// #0
    7a30:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7a34:	ldr	x0, [x0, #3976]
    7a38:	ldr	w0, [x0]
    7a3c:	bl	6860 <pthread_getspecific@plt>
    7a40:	str	x0, [sp, #64]
    7a44:	str	xzr, [sp, #80]
    7a48:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7a4c:	ldr	x0, [x0, #4016]
    7a50:	ldr	d0, [x0]
    7a54:	ldr	x0, [sp, #40]
    7a58:	str	d0, [x0]
    7a5c:	ldr	x0, [sp, #32]
    7a60:	str	x0, [sp, #80]
    7a64:	str	wzr, [sp, #60]
    7a68:	b	7c04 <S_setpayload+0x1fc>
    7a6c:	adrp	x0, 1c000 <_fini+0x11fc>
    7a70:	add	x1, x0, #0x558
    7a74:	ldrsw	x0, [sp, #60]
    7a78:	ldrb	w0, [x1, x0]
    7a7c:	cmp	w0, #0x0
    7a80:	b.eq	7bf8 <S_setpayload+0x1f0>  // b.none
    7a84:	adrp	x0, 1c000 <_fini+0x11fc>
    7a88:	add	x1, x0, #0x560
    7a8c:	ldrsw	x0, [sp, #60]
    7a90:	ldrb	w0, [x1, x0]
    7a94:	cmp	w0, #0x7
    7a98:	b.hi	7bf8 <S_setpayload+0x1f0>  // b.pmore
    7a9c:	adrp	x0, 1c000 <_fini+0x11fc>
    7aa0:	add	x1, x0, #0x560
    7aa4:	ldrsw	x0, [sp, #60]
    7aa8:	ldrb	w0, [x1, x0]
    7aac:	lsl	w0, w0, #3
    7ab0:	and	w0, w0, #0xff
    7ab4:	and	w0, w0, #0x38
    7ab8:	strb	w0, [sp, #58]
    7abc:	adrp	x0, 1c000 <_fini+0x11fc>
    7ac0:	add	x1, x0, #0x560
    7ac4:	ldrsw	x0, [sp, #60]
    7ac8:	ldrb	w0, [x1, x0]
    7acc:	lsr	w0, w0, #3
    7ad0:	and	w0, w0, #0xff
    7ad4:	sxtw	x0, w0
    7ad8:	lsl	x0, x0, #3
    7adc:	add	x1, sp, #0x50
    7ae0:	ldr	x1, [x1, x0]
    7ae4:	ldrb	w0, [sp, #58]
    7ae8:	mov	x2, #0xff                  	// #255
    7aec:	lsl	x0, x2, x0
    7af0:	and	x0, x1, x0
    7af4:	str	x0, [sp, #72]
    7af8:	ldrb	w0, [sp, #58]
    7afc:	ldr	x1, [sp, #72]
    7b00:	lsr	x0, x1, x0
    7b04:	and	w1, w0, #0xff
    7b08:	adrp	x0, 1c000 <_fini+0x11fc>
    7b0c:	add	x2, x0, #0x558
    7b10:	ldrsw	x0, [sp, #60]
    7b14:	ldrb	w0, [x2, x0]
    7b18:	and	w0, w1, w0
    7b1c:	strb	w0, [sp, #59]
    7b20:	ldrsw	x0, [sp, #60]
    7b24:	ldr	x1, [sp, #40]
    7b28:	add	x0, x1, x0
    7b2c:	ldrb	w0, [x0]
    7b30:	sxtb	w1, w0
    7b34:	adrp	x0, 1c000 <_fini+0x11fc>
    7b38:	add	x2, x0, #0x558
    7b3c:	ldrsw	x0, [sp, #60]
    7b40:	ldrb	w0, [x2, x0]
    7b44:	sxtb	w0, w0
    7b48:	mvn	w0, w0
    7b4c:	sxtb	w0, w0
    7b50:	and	w0, w1, w0
    7b54:	sxtb	w2, w0
    7b58:	ldrsw	x0, [sp, #60]
    7b5c:	ldr	x1, [sp, #40]
    7b60:	add	x0, x1, x0
    7b64:	and	w1, w2, #0xff
    7b68:	strb	w1, [x0]
    7b6c:	ldrsw	x0, [sp, #60]
    7b70:	ldr	x1, [sp, #40]
    7b74:	add	x0, x1, x0
    7b78:	ldrb	w2, [x0]
    7b7c:	ldrsw	x0, [sp, #60]
    7b80:	ldr	x1, [sp, #40]
    7b84:	add	x0, x1, x0
    7b88:	ldrb	w1, [sp, #59]
    7b8c:	orr	w1, w2, w1
    7b90:	and	w1, w1, #0xff
    7b94:	strb	w1, [x0]
    7b98:	adrp	x0, 1c000 <_fini+0x11fc>
    7b9c:	add	x1, x0, #0x560
    7ba0:	ldrsw	x0, [sp, #60]
    7ba4:	ldrb	w0, [x1, x0]
    7ba8:	lsr	w0, w0, #3
    7bac:	and	w0, w0, #0xff
    7bb0:	sxtw	x0, w0
    7bb4:	lsl	x0, x0, #3
    7bb8:	add	x1, sp, #0x50
    7bbc:	ldr	x1, [x1, x0]
    7bc0:	ldr	x0, [sp, #72]
    7bc4:	mvn	x0, x0
    7bc8:	adrp	x2, 1c000 <_fini+0x11fc>
    7bcc:	add	x3, x2, #0x560
    7bd0:	ldrsw	x2, [sp, #60]
    7bd4:	ldrb	w2, [x3, x2]
    7bd8:	lsr	w2, w2, #3
    7bdc:	and	w2, w2, #0xff
    7be0:	mov	w3, w2
    7be4:	and	x2, x1, x0
    7be8:	sxtw	x0, w3
    7bec:	lsl	x0, x0, #3
    7bf0:	add	x1, sp, #0x50
    7bf4:	str	x2, [x1, x0]
    7bf8:	ldr	w0, [sp, #60]
    7bfc:	add	w0, w0, #0x1
    7c00:	str	w0, [sp, #60]
    7c04:	ldr	w0, [sp, #60]
    7c08:	cmp	w0, #0x7
    7c0c:	b.le	7a6c <S_setpayload+0x64>
    7c10:	ldrb	w0, [sp, #31]
    7c14:	cmp	w0, #0x0
    7c18:	b.eq	7c7c <S_setpayload+0x274>  // b.none
    7c1c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7c20:	ldr	x0, [x0, #4016]
    7c24:	add	x0, x0, #0x6
    7c28:	ldrb	w0, [x0]
    7c2c:	and	w0, w0, #0x8
    7c30:	cmp	w0, #0x0
    7c34:	b.eq	7c5c <S_setpayload+0x254>  // b.none
    7c38:	ldr	x0, [sp, #40]
    7c3c:	add	x0, x0, #0x6
    7c40:	ldrb	w1, [x0]
    7c44:	ldr	x0, [sp, #40]
    7c48:	add	x0, x0, #0x6
    7c4c:	and	w1, w1, #0xfffffff7
    7c50:	and	w1, w1, #0xff
    7c54:	strb	w1, [x0]
    7c58:	b	7c7c <S_setpayload+0x274>
    7c5c:	ldr	x0, [sp, #40]
    7c60:	add	x0, x0, #0x6
    7c64:	ldrb	w1, [x0]
    7c68:	ldr	x0, [sp, #40]
    7c6c:	add	x0, x0, #0x6
    7c70:	orr	w1, w1, #0x8
    7c74:	and	w1, w1, #0xff
    7c78:	strb	w1, [x0]
    7c7c:	str	wzr, [sp, #60]
    7c80:	b	7cd0 <S_setpayload+0x2c8>
    7c84:	ldrsw	x0, [sp, #60]
    7c88:	lsl	x0, x0, #3
    7c8c:	add	x1, sp, #0x50
    7c90:	ldr	x0, [x1, x0]
    7c94:	cmp	x0, #0x0
    7c98:	b.eq	7cc4 <S_setpayload+0x2bc>  // b.none
    7c9c:	ldrsw	x0, [sp, #60]
    7ca0:	lsl	x0, x0, #3
    7ca4:	add	x1, sp, #0x50
    7ca8:	ldr	x0, [x1, x0]
    7cac:	mov	x2, x0
    7cb0:	adrp	x0, 1a000 <boot_POSIX+0x1c40>
    7cb4:	add	x1, x0, #0xe20
    7cb8:	ldr	x0, [sp, #64]
    7cbc:	bl	6980 <Perl_warn@plt>
    7cc0:	b	7cdc <S_setpayload+0x2d4>
    7cc4:	ldr	w0, [sp, #60]
    7cc8:	add	w0, w0, #0x1
    7ccc:	str	w0, [sp, #60]
    7cd0:	ldr	w0, [sp, #60]
    7cd4:	cmp	w0, #0x0
    7cd8:	b.le	7c84 <S_setpayload+0x27c>
    7cdc:	nop
    7ce0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7ce4:	ldr	x0, [x0, #3992]
    7ce8:	ldr	x1, [sp, #88]
    7cec:	ldr	x0, [x0]
    7cf0:	eor	x0, x1, x0
    7cf4:	cmp	x0, #0x0
    7cf8:	b.eq	7d00 <S_setpayload+0x2f8>  // b.none
    7cfc:	bl	6a60 <__stack_chk_fail@plt>
    7d00:	ldp	x29, x30, [sp], #96
    7d04:	ret

0000000000007d08 <S_getpayload>:
    7d08:	stp	x29, x30, [sp, #-80]!
    7d0c:	mov	x29, sp
    7d10:	str	d0, [sp, #24]
    7d14:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7d18:	ldr	x0, [x0, #3992]
    7d1c:	ldr	x1, [x0]
    7d20:	str	x1, [sp, #72]
    7d24:	mov	x1, #0x0                   	// #0
    7d28:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7d2c:	ldr	x0, [x0, #3976]
    7d30:	ldr	w0, [x0]
    7d34:	bl	6860 <pthread_getspecific@plt>
    7d38:	str	x0, [sp, #56]
    7d3c:	str	xzr, [sp, #64]
    7d40:	str	xzr, [sp, #48]
    7d44:	str	wzr, [sp, #44]
    7d48:	b	7e34 <S_getpayload+0x12c>
    7d4c:	adrp	x0, 1c000 <_fini+0x11fc>
    7d50:	add	x1, x0, #0x568
    7d54:	ldrsw	x0, [sp, #44]
    7d58:	ldrb	w0, [x1, x0]
    7d5c:	cmp	w0, #0x0
    7d60:	b.eq	7e28 <S_getpayload+0x120>  // b.none
    7d64:	adrp	x0, 1c000 <_fini+0x11fc>
    7d68:	add	x1, x0, #0x570
    7d6c:	ldrsw	x0, [sp, #44]
    7d70:	ldrb	w0, [x1, x0]
    7d74:	cmp	w0, #0x7
    7d78:	b.hi	7e28 <S_getpayload+0x120>  // b.pmore
    7d7c:	adrp	x0, 1c000 <_fini+0x11fc>
    7d80:	add	x1, x0, #0x570
    7d84:	ldrsw	x0, [sp, #44]
    7d88:	ldrb	w0, [x1, x0]
    7d8c:	lsl	w0, w0, #3
    7d90:	and	w0, w0, #0xff
    7d94:	and	w0, w0, #0x38
    7d98:	strb	w0, [sp, #43]
    7d9c:	adrp	x0, 1c000 <_fini+0x11fc>
    7da0:	add	x1, x0, #0x570
    7da4:	ldrsw	x0, [sp, #44]
    7da8:	ldrb	w0, [x1, x0]
    7dac:	lsr	w0, w0, #3
    7db0:	and	w0, w0, #0xff
    7db4:	sxtw	x0, w0
    7db8:	lsl	x0, x0, #3
    7dbc:	add	x1, sp, #0x40
    7dc0:	ldr	x1, [x1, x0]
    7dc4:	ldrsw	x0, [sp, #44]
    7dc8:	add	x2, sp, #0x18
    7dcc:	add	x0, x2, x0
    7dd0:	ldrb	w2, [x0]
    7dd4:	adrp	x0, 1c000 <_fini+0x11fc>
    7dd8:	add	x3, x0, #0x568
    7ddc:	ldrsw	x0, [sp, #44]
    7de0:	ldrb	w0, [x3, x0]
    7de4:	and	w0, w2, w0
    7de8:	and	w0, w0, #0xff
    7dec:	and	x2, x0, #0xff
    7df0:	ldrb	w0, [sp, #43]
    7df4:	lsl	x0, x2, x0
    7df8:	adrp	x2, 1c000 <_fini+0x11fc>
    7dfc:	add	x3, x2, #0x570
    7e00:	ldrsw	x2, [sp, #44]
    7e04:	ldrb	w2, [x3, x2]
    7e08:	lsr	w2, w2, #3
    7e0c:	and	w2, w2, #0xff
    7e10:	mov	w3, w2
    7e14:	orr	x2, x1, x0
    7e18:	sxtw	x0, w3
    7e1c:	lsl	x0, x0, #3
    7e20:	add	x1, sp, #0x40
    7e24:	str	x2, [x1, x0]
    7e28:	ldr	w0, [sp, #44]
    7e2c:	add	w0, w0, #0x1
    7e30:	str	w0, [sp, #44]
    7e34:	ldr	w0, [sp, #44]
    7e38:	cmp	w0, #0x7
    7e3c:	b.le	7d4c <S_getpayload+0x44>
    7e40:	str	wzr, [sp, #44]
    7e44:	b	7e88 <S_getpayload+0x180>
    7e48:	ldr	d0, [sp, #48]
    7e4c:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
    7e50:	fmov	d1, x0
    7e54:	fmul	d0, d0, d1
    7e58:	str	d0, [sp, #48]
    7e5c:	ldrsw	x0, [sp, #44]
    7e60:	lsl	x0, x0, #3
    7e64:	add	x1, sp, #0x40
    7e68:	ldr	d0, [x1, x0]
    7e6c:	ucvtf	d0, d0
    7e70:	ldr	d1, [sp, #48]
    7e74:	fadd	d0, d1, d0
    7e78:	str	d0, [sp, #48]
    7e7c:	ldr	w0, [sp, #44]
    7e80:	sub	w0, w0, #0x1
    7e84:	str	w0, [sp, #44]
    7e88:	ldr	w0, [sp, #44]
    7e8c:	cmp	w0, #0x0
    7e90:	b.ge	7e48 <S_getpayload+0x140>  // b.tcont
    7e94:	ldr	d0, [sp, #48]
    7e98:	fcvtzu	d0, d0
    7e9c:	fmov	x1, d0
    7ea0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    7ea4:	ldr	x0, [x0, #3992]
    7ea8:	ldr	x2, [sp, #72]
    7eac:	ldr	x0, [x0]
    7eb0:	eor	x0, x2, x0
    7eb4:	cmp	x0, #0x0
    7eb8:	b.eq	7ec0 <S_getpayload+0x1b8>  // b.none
    7ebc:	bl	6a60 <__stack_chk_fail@plt>
    7ec0:	mov	x0, x1
    7ec4:	ldp	x29, x30, [sp], #80
    7ec8:	ret

0000000000007ecc <not_here>:
    7ecc:	stp	x29, x30, [sp, #-32]!
    7ed0:	mov	x29, sp
    7ed4:	str	x0, [sp, #24]
    7ed8:	ldr	x1, [sp, #24]
    7edc:	adrp	x0, 1a000 <boot_POSIX+0x1c40>
    7ee0:	add	x0, x0, #0xfe8
    7ee4:	bl	6cd0 <Perl_croak_nocontext@plt>

0000000000007ee8 <constant_add_symbol>:
    7ee8:	stp	x29, x30, [sp, #-80]!
    7eec:	mov	x29, sp
    7ef0:	str	x0, [sp, #56]
    7ef4:	str	x1, [sp, #48]
    7ef8:	str	x2, [sp, #40]
    7efc:	str	w3, [sp, #36]
    7f00:	str	x4, [sp, #24]
    7f04:	mov	w6, #0x0                   	// #0
    7f08:	mov	x5, #0x0                   	// #0
    7f0c:	mov	w4, #0x10                  	// #16
    7f10:	ldr	w3, [sp, #36]
    7f14:	ldr	x2, [sp, #40]
    7f18:	ldr	x1, [sp, #48]
    7f1c:	ldr	x0, [sp, #56]
    7f20:	bl	6f00 <Perl_hv_common_key_len@plt>
    7f24:	str	x0, [sp, #64]
    7f28:	ldr	x0, [sp, #64]
    7f2c:	cmp	x0, #0x0
    7f30:	b.ne	7f44 <constant_add_symbol+0x5c>  // b.any
    7f34:	ldr	x1, [sp, #40]
    7f38:	adrp	x0, 1b000 <_fini+0x1fc>
    7f3c:	add	x0, x0, #0x18
    7f40:	bl	6cd0 <Perl_croak_nocontext@plt>
    7f44:	ldr	x0, [sp, #64]
    7f48:	ldr	x0, [x0, #16]
    7f4c:	str	x0, [sp, #72]
    7f50:	ldr	x0, [sp, #72]
    7f54:	ldr	w0, [x0, #12]
    7f58:	and	w0, w0, #0xff00
    7f5c:	cmp	w0, #0x0
    7f60:	b.ne	7f78 <constant_add_symbol+0x90>  // b.any
    7f64:	ldr	x0, [sp, #72]
    7f68:	ldr	w0, [x0, #12]
    7f6c:	and	w0, w0, #0xff
    7f70:	cmp	w0, #0x9
    7f74:	b.ne	7f90 <constant_add_symbol+0xa8>  // b.any
    7f78:	ldr	x3, [sp, #24]
    7f7c:	ldr	x2, [sp, #40]
    7f80:	ldr	x1, [sp, #48]
    7f84:	ldr	x0, [sp, #56]
    7f88:	bl	6790 <Perl_newCONSTSUB@plt>
    7f8c:	b	7fec <constant_add_symbol+0x104>
    7f90:	ldr	x0, [sp, #72]
    7f94:	ldr	w0, [x0, #12]
    7f98:	and	w0, w0, #0xff
    7f9c:	cmp	w0, #0x0
    7fa0:	b.ne	7fb4 <constant_add_symbol+0xcc>  // b.any
    7fa4:	mov	w2, #0x1                   	// #1
    7fa8:	ldr	x1, [sp, #72]
    7fac:	ldr	x0, [sp, #56]
    7fb0:	bl	6870 <Perl_sv_upgrade@plt>
    7fb4:	ldr	x0, [sp, #72]
    7fb8:	ldr	x1, [sp, #24]
    7fbc:	str	x1, [x0, #16]
    7fc0:	ldr	x0, [sp, #72]
    7fc4:	ldr	w0, [x0, #12]
    7fc8:	orr	w1, w0, #0x800
    7fcc:	ldr	x0, [sp, #72]
    7fd0:	str	w1, [x0, #12]
    7fd4:	ldr	x0, [sp, #24]
    7fd8:	ldr	w0, [x0, #12]
    7fdc:	orr	w1, w0, #0x8000000
    7fe0:	ldr	x0, [sp, #24]
    7fe4:	str	w1, [x0, #12]
    7fe8:	nop
    7fec:	nop
    7ff0:	ldp	x29, x30, [sp], #80
    7ff4:	ret

0000000000007ff8 <get_missing_hash>:
    7ff8:	stp	x29, x30, [sp, #-64]!
    7ffc:	mov	x29, sp
    8000:	str	x0, [sp, #24]
    8004:	mov	w2, #0x2                   	// #2
    8008:	adrp	x0, 1b000 <_fini+0x1fc>
    800c:	add	x1, x0, #0x40
    8010:	ldr	x0, [sp, #24]
    8014:	bl	71a0 <Perl_get_hv@plt>
    8018:	str	x0, [sp, #32]
    801c:	mov	w6, #0x0                   	// #0
    8020:	mov	x5, #0x0                   	// #0
    8024:	mov	w4, #0x30                  	// #48
    8028:	mov	w3, #0x5                   	// #5
    802c:	adrp	x0, 1b000 <_fini+0x1fc>
    8030:	add	x2, x0, #0x68
    8034:	ldr	x1, [sp, #32]
    8038:	ldr	x0, [sp, #24]
    803c:	bl	6f00 <Perl_hv_common_key_len@plt>
    8040:	str	x0, [sp, #40]
    8044:	ldr	x0, [sp, #40]
    8048:	cmp	x0, #0x0
    804c:	b.ne	8058 <get_missing_hash+0x60>  // b.any
    8050:	mov	x0, #0x0                   	// #0
    8054:	b	80f8 <get_missing_hash+0x100>
    8058:	ldr	x0, [sp, #40]
    805c:	ldr	x0, [x0]
    8060:	ldr	w0, [x0, #12]
    8064:	and	w0, w0, #0x800
    8068:	cmp	w0, #0x0
    806c:	b.eq	8080 <get_missing_hash+0x88>  // b.none
    8070:	ldr	x0, [sp, #40]
    8074:	ldr	x0, [x0]
    8078:	ldr	x0, [x0, #16]
    807c:	b	80f8 <get_missing_hash+0x100>
    8080:	mov	w1, #0xc                   	// #12
    8084:	ldr	x0, [sp, #24]
    8088:	bl	6f40 <Perl_newSV_type@plt>
    808c:	str	x0, [sp, #48]
    8090:	ldr	x0, [sp, #48]
    8094:	str	x0, [sp, #56]
    8098:	ldr	x0, [sp, #40]
    809c:	ldr	x0, [x0]
    80a0:	ldr	w0, [x0, #12]
    80a4:	and	w0, w0, #0xff
    80a8:	cmp	w0, #0x0
    80ac:	b.ne	80c8 <get_missing_hash+0xd0>  // b.any
    80b0:	ldr	x0, [sp, #40]
    80b4:	ldr	x0, [x0]
    80b8:	mov	w2, #0x1                   	// #1
    80bc:	mov	x1, x0
    80c0:	ldr	x0, [sp, #24]
    80c4:	bl	6870 <Perl_sv_upgrade@plt>
    80c8:	ldr	x0, [sp, #40]
    80cc:	ldr	x0, [x0]
    80d0:	ldr	x1, [sp, #56]
    80d4:	str	x1, [x0, #16]
    80d8:	ldr	x0, [sp, #40]
    80dc:	ldr	x0, [x0]
    80e0:	ldr	w1, [x0, #12]
    80e4:	ldr	x0, [sp, #40]
    80e8:	ldr	x0, [x0]
    80ec:	orr	w1, w1, #0x800
    80f0:	str	w1, [x0, #12]
    80f4:	ldr	x0, [sp, #56]
    80f8:	ldp	x29, x30, [sp], #64
    80fc:	ret

0000000000008100 <restore_sigmask>:
    8100:	stp	x29, x30, [sp, #-48]!
    8104:	mov	x29, sp
    8108:	str	x0, [sp, #24]
    810c:	str	x1, [sp, #16]
    8110:	ldr	x0, [sp, #16]
    8114:	ldr	w1, [x0, #12]
    8118:	mov	w0, #0x400                 	// #1024
    811c:	movk	w0, #0x20, lsl #16
    8120:	and	w0, w1, w0
    8124:	cmp	w0, #0x400
    8128:	b.ne	8138 <restore_sigmask+0x38>  // b.any
    812c:	ldr	x0, [sp, #16]
    8130:	ldr	x0, [x0, #16]
    8134:	b	814c <restore_sigmask+0x4c>
    8138:	mov	w3, #0x2                   	// #2
    813c:	mov	x2, #0x0                   	// #0
    8140:	ldr	x1, [sp, #16]
    8144:	ldr	x0, [sp, #24]
    8148:	bl	69b0 <Perl_sv_2pv_flags@plt>
    814c:	str	x0, [sp, #40]
    8150:	mov	x2, #0x0                   	// #0
    8154:	ldr	x1, [sp, #40]
    8158:	mov	w0, #0x2                   	// #2
    815c:	bl	66a0 <sigprocmask@plt>
    8160:	nop
    8164:	ldp	x29, x30, [sp], #48
    8168:	ret

000000000000816c <allocate_struct>:
    816c:	stp	x29, x30, [sp, #-64]!
    8170:	mov	x29, sp
    8174:	str	x0, [sp, #40]
    8178:	str	x1, [sp, #32]
    817c:	str	x2, [sp, #24]
    8180:	str	x3, [sp, #16]
    8184:	ldr	x2, [sp, #16]
    8188:	ldr	x1, [sp, #32]
    818c:	ldr	x0, [sp, #40]
    8190:	bl	6f50 <Perl_newSVrv@plt>
    8194:	str	x0, [sp, #48]
    8198:	ldr	x0, [sp, #24]
    819c:	add	x0, x0, #0x1
    81a0:	mov	x2, x0
    81a4:	ldr	x1, [sp, #48]
    81a8:	ldr	x0, [sp, #40]
    81ac:	bl	6b60 <Perl_sv_grow@plt>
    81b0:	str	x0, [sp, #56]
    81b4:	ldr	x0, [sp, #48]
    81b8:	ldr	x0, [x0]
    81bc:	ldr	x1, [sp, #24]
    81c0:	str	x1, [x0, #16]
    81c4:	ldr	x0, [sp, #48]
    81c8:	ldr	w1, [x0, #12]
    81cc:	mov	w0, #0x4400                	// #17408
    81d0:	orr	w1, w1, w0
    81d4:	ldr	x0, [sp, #48]
    81d8:	str	w1, [x0, #12]
    81dc:	ldr	x0, [sp, #56]
    81e0:	ldp	x29, x30, [sp], #64
    81e4:	ret

00000000000081e8 <my_tzset>:
    81e8:	stp	x29, x30, [sp, #-32]!
    81ec:	mov	x29, sp
    81f0:	str	x0, [sp, #24]
    81f4:	bl	68c0 <tzset@plt>
    81f8:	nop
    81fc:	ldp	x29, x30, [sp], #32
    8200:	ret

0000000000008204 <XS_POSIX__SigSet_new>:
    8204:	stp	x29, x30, [sp, #-112]!
    8208:	mov	x29, sp
    820c:	str	x19, [sp, #16]
    8210:	str	x0, [sp, #40]
    8214:	str	x1, [sp, #32]
    8218:	ldr	x0, [sp, #40]
    821c:	ldr	x0, [x0]
    8220:	str	x0, [sp, #80]
    8224:	ldr	x0, [sp, #40]
    8228:	bl	739c <S_POPMARK>
    822c:	str	w0, [sp, #64]
    8230:	ldr	x0, [sp, #40]
    8234:	ldr	x1, [x0, #24]
    8238:	ldr	w0, [sp, #64]
    823c:	add	w2, w0, #0x1
    8240:	str	w2, [sp, #64]
    8244:	sxtw	x0, w0
    8248:	lsl	x0, x0, #3
    824c:	add	x0, x1, x0
    8250:	str	x0, [sp, #88]
    8254:	ldr	x1, [sp, #80]
    8258:	ldr	x0, [sp, #88]
    825c:	sub	x0, x1, x0
    8260:	asr	x0, x0, #3
    8264:	str	w0, [sp, #68]
    8268:	ldr	w0, [sp, #68]
    826c:	cmp	w0, #0x0
    8270:	b.gt	8284 <XS_POSIX__SigSet_new+0x80>
    8274:	adrp	x0, 1b000 <_fini+0x1fc>
    8278:	add	x0, x0, #0x118
    827c:	str	x0, [sp, #72]
    8280:	b	8304 <XS_POSIX__SigSet_new+0x100>
    8284:	ldr	x0, [sp, #40]
    8288:	ldr	x1, [x0, #24]
    828c:	ldrsw	x0, [sp, #64]
    8290:	lsl	x0, x0, #3
    8294:	add	x0, x1, x0
    8298:	ldr	x0, [x0]
    829c:	ldr	w1, [x0, #12]
    82a0:	mov	w0, #0x400                 	// #1024
    82a4:	movk	w0, #0x20, lsl #16
    82a8:	and	w0, w1, w0
    82ac:	cmp	w0, #0x400
    82b0:	b.ne	82d4 <XS_POSIX__SigSet_new+0xd0>  // b.any
    82b4:	ldr	x0, [sp, #40]
    82b8:	ldr	x1, [x0, #24]
    82bc:	ldrsw	x0, [sp, #64]
    82c0:	lsl	x0, x0, #3
    82c4:	add	x0, x1, x0
    82c8:	ldr	x0, [x0]
    82cc:	ldr	x0, [x0, #16]
    82d0:	b	8300 <XS_POSIX__SigSet_new+0xfc>
    82d4:	ldr	x0, [sp, #40]
    82d8:	ldr	x1, [x0, #24]
    82dc:	ldrsw	x0, [sp, #64]
    82e0:	lsl	x0, x0, #3
    82e4:	add	x0, x1, x0
    82e8:	ldr	x0, [x0]
    82ec:	mov	w3, #0x2                   	// #2
    82f0:	mov	x2, #0x0                   	// #0
    82f4:	mov	x1, x0
    82f8:	ldr	x0, [sp, #40]
    82fc:	bl	69b0 <Perl_sv_2pv_flags@plt>
    8300:	str	x0, [sp, #72]
    8304:	ldr	x0, [sp, #40]
    8308:	ldr	x1, [x0, #24]
    830c:	ldrsw	x0, [sp, #64]
    8310:	lsl	x0, x0, #3
    8314:	add	x19, x1, x0
    8318:	ldr	x0, [sp, #40]
    831c:	bl	7160 <Perl_sv_newmortal@plt>
    8320:	str	x0, [x19]
    8324:	ldr	x0, [x19]
    8328:	ldr	x3, [sp, #72]
    832c:	mov	x2, #0x80                  	// #128
    8330:	mov	x1, x0
    8334:	ldr	x0, [sp, #40]
    8338:	bl	816c <allocate_struct>
    833c:	str	x0, [sp, #96]
    8340:	ldr	x0, [sp, #96]
    8344:	bl	6930 <sigemptyset@plt>
    8348:	mov	w0, #0x1                   	// #1
    834c:	str	w0, [sp, #60]
    8350:	b	840c <XS_POSIX__SigSet_new+0x208>
    8354:	ldr	x0, [sp, #40]
    8358:	ldr	x1, [x0, #24]
    835c:	ldr	w2, [sp, #64]
    8360:	ldr	w0, [sp, #60]
    8364:	add	w0, w2, w0
    8368:	sxtw	x0, w0
    836c:	lsl	x0, x0, #3
    8370:	add	x0, x1, x0
    8374:	ldr	x0, [x0]
    8378:	ldr	w1, [x0, #12]
    837c:	mov	w0, #0x100                 	// #256
    8380:	movk	w0, #0x20, lsl #16
    8384:	and	w0, w1, w0
    8388:	cmp	w0, #0x100
    838c:	b.ne	83c0 <XS_POSIX__SigSet_new+0x1bc>  // b.any
    8390:	ldr	x0, [sp, #40]
    8394:	ldr	x1, [x0, #24]
    8398:	ldr	w2, [sp, #64]
    839c:	ldr	w0, [sp, #60]
    83a0:	add	w0, w2, w0
    83a4:	sxtw	x0, w0
    83a8:	lsl	x0, x0, #3
    83ac:	add	x0, x1, x0
    83b0:	ldr	x0, [x0]
    83b4:	ldr	x0, [x0]
    83b8:	ldr	x0, [x0, #32]
    83bc:	b	83f4 <XS_POSIX__SigSet_new+0x1f0>
    83c0:	ldr	x0, [sp, #40]
    83c4:	ldr	x1, [x0, #24]
    83c8:	ldr	w2, [sp, #64]
    83cc:	ldr	w0, [sp, #60]
    83d0:	add	w0, w2, w0
    83d4:	sxtw	x0, w0
    83d8:	lsl	x0, x0, #3
    83dc:	add	x0, x1, x0
    83e0:	ldr	x0, [x0]
    83e4:	mov	w2, #0x2                   	// #2
    83e8:	mov	x1, x0
    83ec:	ldr	x0, [sp, #40]
    83f0:	bl	6560 <Perl_sv_2iv_flags@plt>
    83f4:	mov	w1, w0
    83f8:	ldr	x0, [sp, #96]
    83fc:	bl	7080 <sigaddset@plt>
    8400:	ldr	w0, [sp, #60]
    8404:	add	w0, w0, #0x1
    8408:	str	w0, [sp, #60]
    840c:	ldr	w1, [sp, #60]
    8410:	ldr	w0, [sp, #68]
    8414:	cmp	w1, w0
    8418:	b.lt	8354 <XS_POSIX__SigSet_new+0x150>  // b.tstop
    841c:	mov	x0, #0x1                   	// #1
    8420:	str	x0, [sp, #104]
    8424:	ldr	x0, [sp, #40]
    8428:	ldr	x1, [x0, #24]
    842c:	ldrsw	x2, [sp, #64]
    8430:	ldr	x0, [sp, #104]
    8434:	add	x0, x2, x0
    8438:	lsl	x0, x0, #3
    843c:	sub	x0, x0, #0x8
    8440:	add	x1, x1, x0
    8444:	ldr	x0, [sp, #40]
    8448:	str	x1, [x0]
    844c:	nop
    8450:	ldr	x19, [sp, #16]
    8454:	ldp	x29, x30, [sp], #112
    8458:	ret

000000000000845c <XS_POSIX__SigSet_addset>:
    845c:	stp	x29, x30, [sp, #-112]!
    8460:	mov	x29, sp
    8464:	str	x0, [sp, #24]
    8468:	str	x1, [sp, #16]
    846c:	ldr	x0, [sp, #24]
    8470:	ldr	x0, [x0]
    8474:	str	x0, [sp, #56]
    8478:	ldr	x0, [sp, #24]
    847c:	bl	739c <S_POPMARK>
    8480:	str	w0, [sp, #36]
    8484:	ldr	x0, [sp, #24]
    8488:	ldr	x1, [x0, #24]
    848c:	ldr	w0, [sp, #36]
    8490:	add	w2, w0, #0x1
    8494:	str	w2, [sp, #36]
    8498:	sxtw	x0, w0
    849c:	lsl	x0, x0, #3
    84a0:	add	x0, x1, x0
    84a4:	str	x0, [sp, #64]
    84a8:	ldr	x1, [sp, #56]
    84ac:	ldr	x0, [sp, #64]
    84b0:	sub	x0, x1, x0
    84b4:	asr	x0, x0, #3
    84b8:	str	w0, [sp, #40]
    84bc:	ldr	x0, [sp, #16]
    84c0:	ldr	x0, [x0]
    84c4:	str	x0, [sp, #72]
    84c8:	ldr	x0, [sp, #72]
    84cc:	ldr	w0, [x0, #40]
    84d0:	str	w0, [sp, #44]
    84d4:	ldr	w0, [sp, #40]
    84d8:	cmp	w0, #0x2
    84dc:	b.eq	84f0 <XS_POSIX__SigSet_addset+0x94>  // b.none
    84e0:	adrp	x0, 1b000 <_fini+0x1fc>
    84e4:	add	x1, x0, #0x128
    84e8:	ldr	x0, [sp, #16]
    84ec:	bl	6b20 <Perl_croak_xs_usage@plt>
    84f0:	ldr	x0, [sp, #24]
    84f4:	ldr	x1, [x0, #24]
    84f8:	ldrsw	x0, [sp, #36]
    84fc:	lsl	x0, x0, #3
    8500:	add	x0, x1, x0
    8504:	ldr	x0, [x0]
    8508:	str	x0, [sp, #80]
    850c:	ldr	x0, [sp, #80]
    8510:	ldr	w0, [x0, #12]
    8514:	and	w0, w0, #0x800
    8518:	cmp	w0, #0x0
    851c:	b.eq	85c8 <XS_POSIX__SigSet_addset+0x16c>  // b.none
    8520:	adrp	x0, 1b000 <_fini+0x1fc>
    8524:	add	x2, x0, #0x118
    8528:	ldr	x1, [sp, #80]
    852c:	ldr	x0, [sp, #24]
    8530:	bl	6750 <Perl_sv_derived_from@plt>
    8534:	and	w0, w0, #0xff
    8538:	cmp	w0, #0x0
    853c:	b.eq	85c8 <XS_POSIX__SigSet_addset+0x16c>  // b.none
    8540:	ldr	x0, [sp, #80]
    8544:	ldr	x0, [x0, #16]
    8548:	ldr	w1, [x0, #12]
    854c:	mov	w0, #0x400                 	// #1024
    8550:	movk	w0, #0x20, lsl #16
    8554:	and	w0, w1, w0
    8558:	cmp	w0, #0x400
    855c:	b.ne	8570 <XS_POSIX__SigSet_addset+0x114>  // b.any
    8560:	ldr	x0, [sp, #80]
    8564:	ldr	x0, [x0, #16]
    8568:	ldr	x0, [x0, #16]
    856c:	b	858c <XS_POSIX__SigSet_addset+0x130>
    8570:	ldr	x0, [sp, #80]
    8574:	ldr	x0, [x0, #16]
    8578:	mov	w3, #0x2                   	// #2
    857c:	mov	x2, #0x0                   	// #0
    8580:	mov	x1, x0
    8584:	ldr	x0, [sp, #24]
    8588:	bl	69b0 <Perl_sv_2pv_flags@plt>
    858c:	str	x0, [sp, #88]
    8590:	ldr	x0, [sp, #24]
    8594:	ldr	x1, [x0, #24]
    8598:	ldrsw	x0, [sp, #36]
    859c:	add	x0, x0, #0x1
    85a0:	lsl	x0, x0, #3
    85a4:	add	x0, x1, x0
    85a8:	ldr	x0, [x0]
    85ac:	ldr	w1, [x0, #12]
    85b0:	mov	w0, #0x100                 	// #256
    85b4:	movk	w0, #0x20, lsl #16
    85b8:	and	w0, w1, w0
    85bc:	cmp	w0, #0x100
    85c0:	b.eq	85fc <XS_POSIX__SigSet_addset+0x1a0>  // b.none
    85c4:	b	8624 <XS_POSIX__SigSet_addset+0x1c8>
    85c8:	ldr	x1, [sp, #16]
    85cc:	ldr	x0, [sp, #24]
    85d0:	bl	7340 <S_CvGV>
    85d4:	ldr	x0, [x0]
    85d8:	ldr	x0, [x0, #32]
    85dc:	add	x1, x0, #0x8
    85e0:	adrp	x0, 1b000 <_fini+0x1fc>
    85e4:	add	x3, x0, #0x118
    85e8:	adrp	x0, 1b000 <_fini+0x1fc>
    85ec:	add	x2, x0, #0x138
    85f0:	adrp	x0, 1b000 <_fini+0x1fc>
    85f4:	add	x0, x0, #0x140
    85f8:	bl	6cd0 <Perl_croak_nocontext@plt>
    85fc:	ldr	x0, [sp, #24]
    8600:	ldr	x1, [x0, #24]
    8604:	ldrsw	x0, [sp, #36]
    8608:	add	x0, x0, #0x1
    860c:	lsl	x0, x0, #3
    8610:	add	x0, x1, x0
    8614:	ldr	x0, [x0]
    8618:	ldr	x0, [x0]
    861c:	ldr	x0, [x0, #32]
    8620:	b	8650 <XS_POSIX__SigSet_addset+0x1f4>
    8624:	ldr	x0, [sp, #24]
    8628:	ldr	x1, [x0, #24]
    862c:	ldrsw	x0, [sp, #36]
    8630:	add	x0, x0, #0x1
    8634:	lsl	x0, x0, #3
    8638:	add	x0, x1, x0
    863c:	ldr	x0, [x0]
    8640:	mov	w2, #0x2                   	// #2
    8644:	mov	x1, x0
    8648:	ldr	x0, [sp, #24]
    864c:	bl	6560 <Perl_sv_2iv_flags@plt>
    8650:	str	w0, [sp, #48]
    8654:	ldr	w0, [sp, #48]
    8658:	cmp	w0, #0x0
    865c:	b.ge	868c <XS_POSIX__SigSet_addset+0x230>  // b.tcont
    8660:	ldr	x1, [sp, #16]
    8664:	ldr	x0, [sp, #24]
    8668:	bl	7340 <S_CvGV>
    866c:	ldr	x0, [x0]
    8670:	ldr	x0, [x0, #32]
    8674:	add	x0, x0, #0x8
    8678:	ldr	w2, [sp, #48]
    867c:	mov	x1, x0
    8680:	adrp	x0, 1b000 <_fini+0x1fc>
    8684:	add	x0, x0, #0x160
    8688:	bl	6cd0 <Perl_croak_nocontext@plt>
    868c:	ldr	w0, [sp, #44]
    8690:	cmp	w0, #0x0
    8694:	b.eq	86a8 <XS_POSIX__SigSet_addset+0x24c>  // b.none
    8698:	ldr	w1, [sp, #48]
    869c:	ldr	x0, [sp, #88]
    86a0:	bl	6ff0 <sigdelset@plt>
    86a4:	b	86b4 <XS_POSIX__SigSet_addset+0x258>
    86a8:	ldr	w1, [sp, #48]
    86ac:	ldr	x0, [sp, #88]
    86b0:	bl	7080 <sigaddset@plt>
    86b4:	str	w0, [sp, #52]
    86b8:	ldr	x0, [sp, #24]
    86bc:	bl	7160 <Perl_sv_newmortal@plt>
    86c0:	str	x0, [sp, #96]
    86c4:	ldr	w0, [sp, #52]
    86c8:	cmn	w0, #0x1
    86cc:	b.eq	870c <XS_POSIX__SigSet_addset+0x2b0>  // b.none
    86d0:	ldr	w0, [sp, #52]
    86d4:	cmp	w0, #0x0
    86d8:	b.ne	86f8 <XS_POSIX__SigSet_addset+0x29c>  // b.any
    86dc:	mov	x3, #0xa                   	// #10
    86e0:	adrp	x0, 1b000 <_fini+0x1fc>
    86e4:	add	x2, x0, #0x188
    86e8:	ldr	x1, [sp, #96]
    86ec:	ldr	x0, [sp, #24]
    86f0:	bl	6f10 <Perl_sv_setpvn@plt>
    86f4:	b	870c <XS_POSIX__SigSet_addset+0x2b0>
    86f8:	ldrsw	x0, [sp, #52]
    86fc:	mov	x2, x0
    8700:	ldr	x1, [sp, #96]
    8704:	ldr	x0, [sp, #24]
    8708:	bl	7120 <Perl_sv_setiv@plt>
    870c:	ldr	x0, [sp, #24]
    8710:	ldr	x1, [x0, #24]
    8714:	ldrsw	x0, [sp, #36]
    8718:	lsl	x0, x0, #3
    871c:	add	x0, x1, x0
    8720:	ldr	x1, [sp, #96]
    8724:	str	x1, [x0]
    8728:	mov	x0, #0x1                   	// #1
    872c:	str	x0, [sp, #104]
    8730:	ldr	x0, [sp, #24]
    8734:	ldr	x1, [x0, #24]
    8738:	ldrsw	x2, [sp, #36]
    873c:	ldr	x0, [sp, #104]
    8740:	add	x0, x2, x0
    8744:	lsl	x0, x0, #3
    8748:	sub	x0, x0, #0x8
    874c:	add	x1, x1, x0
    8750:	ldr	x0, [sp, #24]
    8754:	str	x1, [x0]
    8758:	nop
    875c:	ldp	x29, x30, [sp], #112
    8760:	ret

0000000000008764 <XS_POSIX__SigSet_emptyset>:
    8764:	stp	x29, x30, [sp, #-112]!
    8768:	mov	x29, sp
    876c:	str	x0, [sp, #24]
    8770:	str	x1, [sp, #16]
    8774:	ldr	x0, [sp, #24]
    8778:	ldr	x0, [x0]
    877c:	str	x0, [sp, #56]
    8780:	ldr	x0, [sp, #24]
    8784:	bl	739c <S_POPMARK>
    8788:	str	w0, [sp, #40]
    878c:	ldr	x0, [sp, #24]
    8790:	ldr	x1, [x0, #24]
    8794:	ldr	w0, [sp, #40]
    8798:	add	w2, w0, #0x1
    879c:	str	w2, [sp, #40]
    87a0:	sxtw	x0, w0
    87a4:	lsl	x0, x0, #3
    87a8:	add	x0, x1, x0
    87ac:	str	x0, [sp, #64]
    87b0:	ldr	x1, [sp, #56]
    87b4:	ldr	x0, [sp, #64]
    87b8:	sub	x0, x1, x0
    87bc:	asr	x0, x0, #3
    87c0:	str	w0, [sp, #44]
    87c4:	ldr	x0, [sp, #16]
    87c8:	ldr	x0, [x0]
    87cc:	str	x0, [sp, #72]
    87d0:	ldr	x0, [sp, #72]
    87d4:	ldr	w0, [x0, #40]
    87d8:	str	w0, [sp, #48]
    87dc:	ldr	w0, [sp, #44]
    87e0:	cmp	w0, #0x1
    87e4:	b.eq	87f8 <XS_POSIX__SigSet_emptyset+0x94>  // b.none
    87e8:	adrp	x0, 1b000 <_fini+0x1fc>
    87ec:	add	x1, x0, #0x138
    87f0:	ldr	x0, [sp, #16]
    87f4:	bl	6b20 <Perl_croak_xs_usage@plt>
    87f8:	ldr	x0, [sp, #24]
    87fc:	ldr	x1, [x0, #24]
    8800:	ldrsw	x0, [sp, #40]
    8804:	lsl	x0, x0, #3
    8808:	add	x0, x1, x0
    880c:	ldr	x0, [x0]
    8810:	str	x0, [sp, #80]
    8814:	ldr	x0, [sp, #80]
    8818:	ldr	w0, [x0, #12]
    881c:	and	w0, w0, #0x800
    8820:	cmp	w0, #0x0
    8824:	b.eq	88a8 <XS_POSIX__SigSet_emptyset+0x144>  // b.none
    8828:	adrp	x0, 1b000 <_fini+0x1fc>
    882c:	add	x2, x0, #0x118
    8830:	ldr	x1, [sp, #80]
    8834:	ldr	x0, [sp, #24]
    8838:	bl	6750 <Perl_sv_derived_from@plt>
    883c:	and	w0, w0, #0xff
    8840:	cmp	w0, #0x0
    8844:	b.eq	88a8 <XS_POSIX__SigSet_emptyset+0x144>  // b.none
    8848:	ldr	x0, [sp, #80]
    884c:	ldr	x0, [x0, #16]
    8850:	ldr	w1, [x0, #12]
    8854:	mov	w0, #0x400                 	// #1024
    8858:	movk	w0, #0x20, lsl #16
    885c:	and	w0, w1, w0
    8860:	cmp	w0, #0x400
    8864:	b.ne	8878 <XS_POSIX__SigSet_emptyset+0x114>  // b.any
    8868:	ldr	x0, [sp, #80]
    886c:	ldr	x0, [x0, #16]
    8870:	ldr	x0, [x0, #16]
    8874:	b	8894 <XS_POSIX__SigSet_emptyset+0x130>
    8878:	ldr	x0, [sp, #80]
    887c:	ldr	x0, [x0, #16]
    8880:	mov	w3, #0x2                   	// #2
    8884:	mov	x2, #0x0                   	// #0
    8888:	mov	x1, x0
    888c:	ldr	x0, [sp, #24]
    8890:	bl	69b0 <Perl_sv_2pv_flags@plt>
    8894:	str	x0, [sp, #88]
    8898:	ldr	w0, [sp, #48]
    889c:	cmp	w0, #0x0
    88a0:	b.ne	88dc <XS_POSIX__SigSet_emptyset+0x178>  // b.any
    88a4:	b	88e8 <XS_POSIX__SigSet_emptyset+0x184>
    88a8:	ldr	x1, [sp, #16]
    88ac:	ldr	x0, [sp, #24]
    88b0:	bl	7340 <S_CvGV>
    88b4:	ldr	x0, [x0]
    88b8:	ldr	x0, [x0, #32]
    88bc:	add	x1, x0, #0x8
    88c0:	adrp	x0, 1b000 <_fini+0x1fc>
    88c4:	add	x3, x0, #0x118
    88c8:	adrp	x0, 1b000 <_fini+0x1fc>
    88cc:	add	x2, x0, #0x138
    88d0:	adrp	x0, 1b000 <_fini+0x1fc>
    88d4:	add	x0, x0, #0x140
    88d8:	bl	6cd0 <Perl_croak_nocontext@plt>
    88dc:	ldr	x0, [sp, #88]
    88e0:	bl	67e0 <sigfillset@plt>
    88e4:	b	88f0 <XS_POSIX__SigSet_emptyset+0x18c>
    88e8:	ldr	x0, [sp, #88]
    88ec:	bl	6930 <sigemptyset@plt>
    88f0:	str	w0, [sp, #52]
    88f4:	ldr	x0, [sp, #24]
    88f8:	bl	7160 <Perl_sv_newmortal@plt>
    88fc:	str	x0, [sp, #96]
    8900:	ldr	w0, [sp, #52]
    8904:	cmn	w0, #0x1
    8908:	b.eq	8948 <XS_POSIX__SigSet_emptyset+0x1e4>  // b.none
    890c:	ldr	w0, [sp, #52]
    8910:	cmp	w0, #0x0
    8914:	b.ne	8934 <XS_POSIX__SigSet_emptyset+0x1d0>  // b.any
    8918:	mov	x3, #0xa                   	// #10
    891c:	adrp	x0, 1b000 <_fini+0x1fc>
    8920:	add	x2, x0, #0x188
    8924:	ldr	x1, [sp, #96]
    8928:	ldr	x0, [sp, #24]
    892c:	bl	6f10 <Perl_sv_setpvn@plt>
    8930:	b	8948 <XS_POSIX__SigSet_emptyset+0x1e4>
    8934:	ldrsw	x0, [sp, #52]
    8938:	mov	x2, x0
    893c:	ldr	x1, [sp, #96]
    8940:	ldr	x0, [sp, #24]
    8944:	bl	7120 <Perl_sv_setiv@plt>
    8948:	ldr	x0, [sp, #24]
    894c:	ldr	x1, [x0, #24]
    8950:	ldrsw	x0, [sp, #40]
    8954:	lsl	x0, x0, #3
    8958:	add	x0, x1, x0
    895c:	ldr	x1, [sp, #96]
    8960:	str	x1, [x0]
    8964:	mov	x0, #0x1                   	// #1
    8968:	str	x0, [sp, #104]
    896c:	ldr	x0, [sp, #24]
    8970:	ldr	x1, [x0, #24]
    8974:	ldrsw	x2, [sp, #40]
    8978:	ldr	x0, [sp, #104]
    897c:	add	x0, x2, x0
    8980:	lsl	x0, x0, #3
    8984:	sub	x0, x0, #0x8
    8988:	add	x1, x1, x0
    898c:	ldr	x0, [sp, #24]
    8990:	str	x1, [x0]
    8994:	nop
    8998:	ldp	x29, x30, [sp], #112
    899c:	ret

00000000000089a0 <XS_POSIX__SigSet_ismember>:
    89a0:	stp	x29, x30, [sp, #-112]!
    89a4:	mov	x29, sp
    89a8:	str	x0, [sp, #24]
    89ac:	str	x1, [sp, #16]
    89b0:	ldr	x0, [sp, #24]
    89b4:	ldr	x0, [x0]
    89b8:	str	x0, [sp, #56]
    89bc:	ldr	x0, [sp, #24]
    89c0:	bl	739c <S_POPMARK>
    89c4:	str	w0, [sp, #40]
    89c8:	ldr	x0, [sp, #24]
    89cc:	ldr	x1, [x0, #24]
    89d0:	ldr	w0, [sp, #40]
    89d4:	add	w2, w0, #0x1
    89d8:	str	w2, [sp, #40]
    89dc:	sxtw	x0, w0
    89e0:	lsl	x0, x0, #3
    89e4:	add	x0, x1, x0
    89e8:	str	x0, [sp, #64]
    89ec:	ldr	x1, [sp, #56]
    89f0:	ldr	x0, [sp, #64]
    89f4:	sub	x0, x1, x0
    89f8:	asr	x0, x0, #3
    89fc:	str	w0, [sp, #44]
    8a00:	ldr	w0, [sp, #44]
    8a04:	cmp	w0, #0x2
    8a08:	b.eq	8a1c <XS_POSIX__SigSet_ismember+0x7c>  // b.none
    8a0c:	adrp	x0, 1b000 <_fini+0x1fc>
    8a10:	add	x1, x0, #0x128
    8a14:	ldr	x0, [sp, #16]
    8a18:	bl	6b20 <Perl_croak_xs_usage@plt>
    8a1c:	ldr	x0, [sp, #24]
    8a20:	ldr	x0, [x0, #8]
    8a24:	ldrb	w0, [x0, #35]
    8a28:	and	w0, w0, #0x4
    8a2c:	cmp	w0, #0x0
    8a30:	b.eq	8a58 <XS_POSIX__SigSet_ismember+0xb8>  // b.none
    8a34:	ldr	x0, [sp, #24]
    8a38:	ldr	x1, [x0, #16]
    8a3c:	ldr	x0, [sp, #24]
    8a40:	ldr	x0, [x0, #8]
    8a44:	ldr	x0, [x0, #24]
    8a48:	lsl	x0, x0, #3
    8a4c:	add	x0, x1, x0
    8a50:	ldr	x0, [x0]
    8a54:	b	8a60 <XS_POSIX__SigSet_ismember+0xc0>
    8a58:	ldr	x0, [sp, #24]
    8a5c:	bl	7160 <Perl_sv_newmortal@plt>
    8a60:	str	x0, [sp, #72]
    8a64:	ldr	x0, [sp, #24]
    8a68:	ldr	x1, [x0, #24]
    8a6c:	ldrsw	x0, [sp, #40]
    8a70:	lsl	x0, x0, #3
    8a74:	add	x0, x1, x0
    8a78:	ldr	x0, [x0]
    8a7c:	str	x0, [sp, #80]
    8a80:	ldr	x0, [sp, #80]
    8a84:	ldr	w0, [x0, #12]
    8a88:	and	w0, w0, #0x800
    8a8c:	cmp	w0, #0x0
    8a90:	b.eq	8b3c <XS_POSIX__SigSet_ismember+0x19c>  // b.none
    8a94:	adrp	x0, 1b000 <_fini+0x1fc>
    8a98:	add	x2, x0, #0x118
    8a9c:	ldr	x1, [sp, #80]
    8aa0:	ldr	x0, [sp, #24]
    8aa4:	bl	6750 <Perl_sv_derived_from@plt>
    8aa8:	and	w0, w0, #0xff
    8aac:	cmp	w0, #0x0
    8ab0:	b.eq	8b3c <XS_POSIX__SigSet_ismember+0x19c>  // b.none
    8ab4:	ldr	x0, [sp, #80]
    8ab8:	ldr	x0, [x0, #16]
    8abc:	ldr	w1, [x0, #12]
    8ac0:	mov	w0, #0x400                 	// #1024
    8ac4:	movk	w0, #0x20, lsl #16
    8ac8:	and	w0, w1, w0
    8acc:	cmp	w0, #0x400
    8ad0:	b.ne	8ae4 <XS_POSIX__SigSet_ismember+0x144>  // b.any
    8ad4:	ldr	x0, [sp, #80]
    8ad8:	ldr	x0, [x0, #16]
    8adc:	ldr	x0, [x0, #16]
    8ae0:	b	8b00 <XS_POSIX__SigSet_ismember+0x160>
    8ae4:	ldr	x0, [sp, #80]
    8ae8:	ldr	x0, [x0, #16]
    8aec:	mov	w3, #0x2                   	// #2
    8af0:	mov	x2, #0x0                   	// #0
    8af4:	mov	x1, x0
    8af8:	ldr	x0, [sp, #24]
    8afc:	bl	69b0 <Perl_sv_2pv_flags@plt>
    8b00:	str	x0, [sp, #88]
    8b04:	ldr	x0, [sp, #24]
    8b08:	ldr	x1, [x0, #24]
    8b0c:	ldrsw	x0, [sp, #40]
    8b10:	add	x0, x0, #0x1
    8b14:	lsl	x0, x0, #3
    8b18:	add	x0, x1, x0
    8b1c:	ldr	x0, [x0]
    8b20:	ldr	w1, [x0, #12]
    8b24:	mov	w0, #0x100                 	// #256
    8b28:	movk	w0, #0x20, lsl #16
    8b2c:	and	w0, w1, w0
    8b30:	cmp	w0, #0x100
    8b34:	b.eq	8b60 <XS_POSIX__SigSet_ismember+0x1c0>  // b.none
    8b38:	b	8b88 <XS_POSIX__SigSet_ismember+0x1e8>
    8b3c:	adrp	x0, 1b000 <_fini+0x1fc>
    8b40:	add	x3, x0, #0x118
    8b44:	adrp	x0, 1b000 <_fini+0x1fc>
    8b48:	add	x2, x0, #0x138
    8b4c:	adrp	x0, 1b000 <_fini+0x1fc>
    8b50:	add	x1, x0, #0x198
    8b54:	adrp	x0, 1b000 <_fini+0x1fc>
    8b58:	add	x0, x0, #0x140
    8b5c:	bl	6cd0 <Perl_croak_nocontext@plt>
    8b60:	ldr	x0, [sp, #24]
    8b64:	ldr	x1, [x0, #24]
    8b68:	ldrsw	x0, [sp, #40]
    8b6c:	add	x0, x0, #0x1
    8b70:	lsl	x0, x0, #3
    8b74:	add	x0, x1, x0
    8b78:	ldr	x0, [x0]
    8b7c:	ldr	x0, [x0]
    8b80:	ldr	x0, [x0, #32]
    8b84:	b	8bb4 <XS_POSIX__SigSet_ismember+0x214>
    8b88:	ldr	x0, [sp, #24]
    8b8c:	ldr	x1, [x0, #24]
    8b90:	ldrsw	x0, [sp, #40]
    8b94:	add	x0, x0, #0x1
    8b98:	lsl	x0, x0, #3
    8b9c:	add	x0, x1, x0
    8ba0:	ldr	x0, [x0]
    8ba4:	mov	w2, #0x2                   	// #2
    8ba8:	mov	x1, x0
    8bac:	ldr	x0, [sp, #24]
    8bb0:	bl	6560 <Perl_sv_2iv_flags@plt>
    8bb4:	str	w0, [sp, #48]
    8bb8:	ldr	w0, [sp, #48]
    8bbc:	cmp	w0, #0x0
    8bc0:	b.ge	8bdc <XS_POSIX__SigSet_ismember+0x23c>  // b.tcont
    8bc4:	ldr	w2, [sp, #48]
    8bc8:	adrp	x0, 1b000 <_fini+0x1fc>
    8bcc:	add	x1, x0, #0x198
    8bd0:	adrp	x0, 1b000 <_fini+0x1fc>
    8bd4:	add	x0, x0, #0x160
    8bd8:	bl	6cd0 <Perl_croak_nocontext@plt>
    8bdc:	ldr	w1, [sp, #48]
    8be0:	ldr	x0, [sp, #88]
    8be4:	bl	6c30 <sigismember@plt>
    8be8:	str	w0, [sp, #52]
    8bec:	ldr	x0, [sp, #24]
    8bf0:	ldr	x1, [x0, #24]
    8bf4:	ldrsw	x0, [sp, #40]
    8bf8:	lsl	x0, x0, #3
    8bfc:	sub	x0, x0, #0x8
    8c00:	add	x0, x1, x0
    8c04:	str	x0, [sp, #56]
    8c08:	ldrsw	x0, [sp, #52]
    8c0c:	str	x0, [sp, #96]
    8c10:	ldr	x0, [sp, #72]
    8c14:	ldr	w1, [x0, #12]
    8c18:	mov	w0, #0x8ff                 	// #2303
    8c1c:	movk	w0, #0x9981, lsl #16
    8c20:	and	w0, w1, w0
    8c24:	cmp	w0, #0x1
    8c28:	cset	w0, eq  // eq = none
    8c2c:	and	w0, w0, #0xff
    8c30:	mov	w1, w0
    8c34:	ldr	x0, [sp, #24]
    8c38:	ldrb	w0, [x0, #185]
    8c3c:	eor	w0, w0, #0x1
    8c40:	and	w0, w0, #0xff
    8c44:	and	w0, w1, w0
    8c48:	cmp	w0, #0x0
    8c4c:	cset	w0, ne  // ne = any
    8c50:	and	w0, w0, #0xff
    8c54:	and	x0, x0, #0xff
    8c58:	cmp	x0, #0x0
    8c5c:	b.eq	8c88 <XS_POSIX__SigSet_ismember+0x2e8>  // b.none
    8c60:	ldr	x0, [sp, #72]
    8c64:	ldr	w1, [x0, #12]
    8c68:	mov	w0, #0x1100                	// #4352
    8c6c:	orr	w1, w1, w0
    8c70:	ldr	x0, [sp, #72]
    8c74:	str	w1, [x0, #12]
    8c78:	ldr	x0, [sp, #72]
    8c7c:	ldr	x1, [sp, #96]
    8c80:	str	x1, [x0, #16]
    8c84:	b	8c98 <XS_POSIX__SigSet_ismember+0x2f8>
    8c88:	ldr	x2, [sp, #96]
    8c8c:	ldr	x1, [sp, #72]
    8c90:	ldr	x0, [sp, #24]
    8c94:	bl	6880 <Perl_sv_setiv_mg@plt>
    8c98:	ldr	x0, [sp, #56]
    8c9c:	add	x0, x0, #0x8
    8ca0:	str	x0, [sp, #56]
    8ca4:	ldr	x0, [sp, #56]
    8ca8:	ldr	x1, [sp, #72]
    8cac:	str	x1, [x0]
    8cb0:	mov	x0, #0x1                   	// #1
    8cb4:	str	x0, [sp, #104]
    8cb8:	ldr	x0, [sp, #24]
    8cbc:	ldr	x1, [x0, #24]
    8cc0:	ldrsw	x2, [sp, #40]
    8cc4:	ldr	x0, [sp, #104]
    8cc8:	add	x0, x2, x0
    8ccc:	lsl	x0, x0, #3
    8cd0:	sub	x0, x0, #0x8
    8cd4:	add	x1, x1, x0
    8cd8:	ldr	x0, [sp, #24]
    8cdc:	str	x1, [x0]
    8ce0:	nop
    8ce4:	ldp	x29, x30, [sp], #112
    8ce8:	ret

0000000000008cec <XS_POSIX__Termios_new>:
    8cec:	stp	x29, x30, [sp, #-96]!
    8cf0:	mov	x29, sp
    8cf4:	str	x19, [sp, #16]
    8cf8:	str	x0, [sp, #40]
    8cfc:	str	x1, [sp, #32]
    8d00:	ldr	x0, [sp, #40]
    8d04:	ldr	x0, [x0]
    8d08:	str	x0, [sp, #64]
    8d0c:	ldr	x0, [sp, #40]
    8d10:	bl	739c <S_POPMARK>
    8d14:	str	w0, [sp, #48]
    8d18:	ldr	x0, [sp, #40]
    8d1c:	ldr	x1, [x0, #24]
    8d20:	ldr	w0, [sp, #48]
    8d24:	add	w2, w0, #0x1
    8d28:	str	w2, [sp, #48]
    8d2c:	sxtw	x0, w0
    8d30:	lsl	x0, x0, #3
    8d34:	add	x0, x1, x0
    8d38:	str	x0, [sp, #72]
    8d3c:	ldr	x1, [sp, #64]
    8d40:	ldr	x0, [sp, #72]
    8d44:	sub	x0, x1, x0
    8d48:	asr	x0, x0, #3
    8d4c:	str	w0, [sp, #52]
    8d50:	ldr	w0, [sp, #52]
    8d54:	cmp	w0, #0x0
    8d58:	b.gt	8d6c <XS_POSIX__Termios_new+0x80>
    8d5c:	adrp	x0, 1b000 <_fini+0x1fc>
    8d60:	add	x0, x0, #0x1b0
    8d64:	str	x0, [sp, #56]
    8d68:	b	8dec <XS_POSIX__Termios_new+0x100>
    8d6c:	ldr	x0, [sp, #40]
    8d70:	ldr	x1, [x0, #24]
    8d74:	ldrsw	x0, [sp, #48]
    8d78:	lsl	x0, x0, #3
    8d7c:	add	x0, x1, x0
    8d80:	ldr	x0, [x0]
    8d84:	ldr	w1, [x0, #12]
    8d88:	mov	w0, #0x400                 	// #1024
    8d8c:	movk	w0, #0x20, lsl #16
    8d90:	and	w0, w1, w0
    8d94:	cmp	w0, #0x400
    8d98:	b.ne	8dbc <XS_POSIX__Termios_new+0xd0>  // b.any
    8d9c:	ldr	x0, [sp, #40]
    8da0:	ldr	x1, [x0, #24]
    8da4:	ldrsw	x0, [sp, #48]
    8da8:	lsl	x0, x0, #3
    8dac:	add	x0, x1, x0
    8db0:	ldr	x0, [x0]
    8db4:	ldr	x0, [x0, #16]
    8db8:	b	8de8 <XS_POSIX__Termios_new+0xfc>
    8dbc:	ldr	x0, [sp, #40]
    8dc0:	ldr	x1, [x0, #24]
    8dc4:	ldrsw	x0, [sp, #48]
    8dc8:	lsl	x0, x0, #3
    8dcc:	add	x0, x1, x0
    8dd0:	ldr	x0, [x0]
    8dd4:	mov	w3, #0x2                   	// #2
    8dd8:	mov	x2, #0x0                   	// #0
    8ddc:	mov	x1, x0
    8de0:	ldr	x0, [sp, #40]
    8de4:	bl	69b0 <Perl_sv_2pv_flags@plt>
    8de8:	str	x0, [sp, #56]
    8dec:	ldr	x0, [sp, #40]
    8df0:	ldr	x1, [x0, #24]
    8df4:	ldrsw	x0, [sp, #48]
    8df8:	lsl	x0, x0, #3
    8dfc:	add	x19, x1, x0
    8e00:	ldr	x0, [sp, #40]
    8e04:	bl	7160 <Perl_sv_newmortal@plt>
    8e08:	str	x0, [x19]
    8e0c:	ldr	x0, [x19]
    8e10:	ldr	x3, [sp, #56]
    8e14:	mov	x2, #0x3c                  	// #60
    8e18:	mov	x1, x0
    8e1c:	ldr	x0, [sp, #40]
    8e20:	bl	816c <allocate_struct>
    8e24:	str	x0, [sp, #80]
    8e28:	mov	x2, #0x3d                  	// #61
    8e2c:	mov	w1, #0x0                   	// #0
    8e30:	ldr	x0, [sp, #80]
    8e34:	bl	69a0 <memset@plt>
    8e38:	mov	x0, #0x1                   	// #1
    8e3c:	str	x0, [sp, #88]
    8e40:	ldr	x0, [sp, #40]
    8e44:	ldr	x1, [x0, #24]
    8e48:	ldrsw	x2, [sp, #48]
    8e4c:	ldr	x0, [sp, #88]
    8e50:	add	x0, x2, x0
    8e54:	lsl	x0, x0, #3
    8e58:	sub	x0, x0, #0x8
    8e5c:	add	x1, x1, x0
    8e60:	ldr	x0, [sp, #40]
    8e64:	str	x1, [x0]
    8e68:	nop
    8e6c:	ldr	x19, [sp, #16]
    8e70:	ldp	x29, x30, [sp], #96
    8e74:	ret

0000000000008e78 <XS_POSIX__Termios_getattr>:
    8e78:	stp	x29, x30, [sp, #-128]!
    8e7c:	mov	x29, sp
    8e80:	str	x19, [sp, #16]
    8e84:	str	x0, [sp, #40]
    8e88:	str	x1, [sp, #32]
    8e8c:	ldr	x0, [sp, #40]
    8e90:	ldr	x0, [x0]
    8e94:	str	x0, [sp, #72]
    8e98:	ldr	x0, [sp, #40]
    8e9c:	bl	739c <S_POPMARK>
    8ea0:	str	w0, [sp, #60]
    8ea4:	ldr	x0, [sp, #40]
    8ea8:	ldr	x1, [x0, #24]
    8eac:	ldr	w0, [sp, #60]
    8eb0:	add	w2, w0, #0x1
    8eb4:	str	w2, [sp, #60]
    8eb8:	sxtw	x0, w0
    8ebc:	lsl	x0, x0, #3
    8ec0:	add	x0, x1, x0
    8ec4:	str	x0, [sp, #80]
    8ec8:	ldr	x1, [sp, #72]
    8ecc:	ldr	x0, [sp, #80]
    8ed0:	sub	x0, x1, x0
    8ed4:	asr	x0, x0, #3
    8ed8:	str	w0, [sp, #64]
    8edc:	ldr	w0, [sp, #64]
    8ee0:	cmp	w0, #0x0
    8ee4:	b.le	8ef4 <XS_POSIX__Termios_getattr+0x7c>
    8ee8:	ldr	w0, [sp, #64]
    8eec:	cmp	w0, #0x2
    8ef0:	b.le	8f04 <XS_POSIX__Termios_getattr+0x8c>
    8ef4:	adrp	x0, 1b000 <_fini+0x1fc>
    8ef8:	add	x1, x0, #0x1c0
    8efc:	ldr	x0, [sp, #32]
    8f00:	bl	6b20 <Perl_croak_xs_usage@plt>
    8f04:	ldr	x0, [sp, #40]
    8f08:	ldr	x1, [x0, #24]
    8f0c:	ldrsw	x0, [sp, #60]
    8f10:	lsl	x0, x0, #3
    8f14:	add	x0, x1, x0
    8f18:	ldr	x0, [x0]
    8f1c:	str	x0, [sp, #88]
    8f20:	ldr	x0, [sp, #88]
    8f24:	ldr	w0, [x0, #12]
    8f28:	and	w0, w0, #0x800
    8f2c:	cmp	w0, #0x0
    8f30:	b.eq	8fb4 <XS_POSIX__Termios_getattr+0x13c>  // b.none
    8f34:	adrp	x0, 1b000 <_fini+0x1fc>
    8f38:	add	x2, x0, #0x1b0
    8f3c:	ldr	x1, [sp, #88]
    8f40:	ldr	x0, [sp, #40]
    8f44:	bl	6750 <Perl_sv_derived_from@plt>
    8f48:	and	w0, w0, #0xff
    8f4c:	cmp	w0, #0x0
    8f50:	b.eq	8fb4 <XS_POSIX__Termios_getattr+0x13c>  // b.none
    8f54:	ldr	x0, [sp, #88]
    8f58:	ldr	x0, [x0, #16]
    8f5c:	ldr	w1, [x0, #12]
    8f60:	mov	w0, #0x400                 	// #1024
    8f64:	movk	w0, #0x20, lsl #16
    8f68:	and	w0, w1, w0
    8f6c:	cmp	w0, #0x400
    8f70:	b.ne	8f84 <XS_POSIX__Termios_getattr+0x10c>  // b.any
    8f74:	ldr	x0, [sp, #88]
    8f78:	ldr	x0, [x0, #16]
    8f7c:	ldr	x0, [x0, #16]
    8f80:	b	8fa0 <XS_POSIX__Termios_getattr+0x128>
    8f84:	ldr	x0, [sp, #88]
    8f88:	ldr	x0, [x0, #16]
    8f8c:	mov	w3, #0x2                   	// #2
    8f90:	mov	x2, #0x0                   	// #0
    8f94:	mov	x1, x0
    8f98:	ldr	x0, [sp, #40]
    8f9c:	bl	69b0 <Perl_sv_2pv_flags@plt>
    8fa0:	str	x0, [sp, #96]
    8fa4:	ldr	w0, [sp, #64]
    8fa8:	cmp	w0, #0x1
    8fac:	b.le	8fd8 <XS_POSIX__Termios_getattr+0x160>
    8fb0:	b	8fe0 <XS_POSIX__Termios_getattr+0x168>
    8fb4:	adrp	x0, 1b000 <_fini+0x1fc>
    8fb8:	add	x3, x0, #0x1b0
    8fbc:	adrp	x0, 1b000 <_fini+0x1fc>
    8fc0:	add	x2, x0, #0x1d8
    8fc4:	adrp	x0, 1b000 <_fini+0x1fc>
    8fc8:	add	x1, x0, #0x1e8
    8fcc:	adrp	x0, 1b000 <_fini+0x1fc>
    8fd0:	add	x0, x0, #0x140
    8fd4:	bl	6cd0 <Perl_croak_nocontext@plt>
    8fd8:	str	wzr, [sp, #56]
    8fdc:	b	90f0 <XS_POSIX__Termios_getattr+0x278>
    8fe0:	ldr	x0, [sp, #40]
    8fe4:	ldr	x1, [x0, #24]
    8fe8:	ldrsw	x0, [sp, #60]
    8fec:	add	x0, x0, #0x1
    8ff0:	lsl	x0, x0, #3
    8ff4:	add	x0, x1, x0
    8ff8:	ldr	x0, [x0]
    8ffc:	ldr	w1, [x0, #12]
    9000:	mov	w0, #0x100                 	// #256
    9004:	movk	w0, #0x20, lsl #16
    9008:	and	w0, w1, w0
    900c:	cmp	w0, #0x100
    9010:	b.ne	903c <XS_POSIX__Termios_getattr+0x1c4>  // b.any
    9014:	ldr	x0, [sp, #40]
    9018:	ldr	x1, [x0, #24]
    901c:	ldrsw	x0, [sp, #60]
    9020:	add	x0, x0, #0x1
    9024:	lsl	x0, x0, #3
    9028:	add	x0, x1, x0
    902c:	ldr	x0, [x0]
    9030:	ldr	x0, [x0]
    9034:	ldr	x0, [x0, #32]
    9038:	b	9068 <XS_POSIX__Termios_getattr+0x1f0>
    903c:	ldr	x0, [sp, #40]
    9040:	ldr	x1, [x0, #24]
    9044:	ldrsw	x0, [sp, #60]
    9048:	add	x0, x0, #0x1
    904c:	lsl	x0, x0, #3
    9050:	add	x0, x1, x0
    9054:	ldr	x0, [x0]
    9058:	mov	w2, #0x2                   	// #2
    905c:	mov	x1, x0
    9060:	ldr	x0, [sp, #40]
    9064:	bl	6560 <Perl_sv_2iv_flags@plt>
    9068:	str	w0, [sp, #56]
    906c:	ldr	w0, [sp, #56]
    9070:	cmp	w0, #0x0
    9074:	b.ge	90f0 <XS_POSIX__Termios_getattr+0x278>  // b.tcont
    9078:	bl	70d0 <__errno_location@plt>
    907c:	mov	x1, x0
    9080:	mov	w0, #0x9                   	// #9
    9084:	str	w0, [x1]
    9088:	mov	x1, #0xffffffffffffffff    	// #-1
    908c:	ldr	x0, [sp, #40]
    9090:	bl	70b0 <Perl_newSViv@plt>
    9094:	mov	x2, x0
    9098:	ldr	x0, [sp, #40]
    909c:	ldr	x1, [x0, #24]
    90a0:	ldrsw	x0, [sp, #60]
    90a4:	lsl	x0, x0, #3
    90a8:	add	x19, x1, x0
    90ac:	mov	x1, x2
    90b0:	ldr	x0, [sp, #40]
    90b4:	bl	6d60 <Perl_sv_2mortal@plt>
    90b8:	str	x0, [x19]
    90bc:	mov	x0, #0x1                   	// #1
    90c0:	str	x0, [sp, #104]
    90c4:	ldr	x0, [sp, #40]
    90c8:	ldr	x1, [x0, #24]
    90cc:	ldrsw	x2, [sp, #60]
    90d0:	ldr	x0, [sp, #104]
    90d4:	add	x0, x2, x0
    90d8:	lsl	x0, x0, #3
    90dc:	sub	x0, x0, #0x8
    90e0:	add	x1, x1, x0
    90e4:	ldr	x0, [sp, #40]
    90e8:	str	x1, [x0]
    90ec:	b	91a4 <XS_POSIX__Termios_getattr+0x32c>
    90f0:	ldr	x1, [sp, #96]
    90f4:	ldr	w0, [sp, #56]
    90f8:	bl	6820 <tcgetattr@plt>
    90fc:	str	w0, [sp, #68]
    9100:	ldr	x0, [sp, #40]
    9104:	bl	7160 <Perl_sv_newmortal@plt>
    9108:	str	x0, [sp, #112]
    910c:	ldr	w0, [sp, #68]
    9110:	cmn	w0, #0x1
    9114:	b.eq	9154 <XS_POSIX__Termios_getattr+0x2dc>  // b.none
    9118:	ldr	w0, [sp, #68]
    911c:	cmp	w0, #0x0
    9120:	b.ne	9140 <XS_POSIX__Termios_getattr+0x2c8>  // b.any
    9124:	mov	x3, #0xa                   	// #10
    9128:	adrp	x0, 1b000 <_fini+0x1fc>
    912c:	add	x2, x0, #0x188
    9130:	ldr	x1, [sp, #112]
    9134:	ldr	x0, [sp, #40]
    9138:	bl	6f10 <Perl_sv_setpvn@plt>
    913c:	b	9154 <XS_POSIX__Termios_getattr+0x2dc>
    9140:	ldrsw	x0, [sp, #68]
    9144:	mov	x2, x0
    9148:	ldr	x1, [sp, #112]
    914c:	ldr	x0, [sp, #40]
    9150:	bl	7120 <Perl_sv_setiv@plt>
    9154:	ldr	x0, [sp, #40]
    9158:	ldr	x1, [x0, #24]
    915c:	ldrsw	x0, [sp, #60]
    9160:	lsl	x0, x0, #3
    9164:	add	x0, x1, x0
    9168:	ldr	x1, [sp, #112]
    916c:	str	x1, [x0]
    9170:	mov	x0, #0x1                   	// #1
    9174:	str	x0, [sp, #120]
    9178:	ldr	x0, [sp, #40]
    917c:	ldr	x1, [x0, #24]
    9180:	ldrsw	x2, [sp, #60]
    9184:	ldr	x0, [sp, #120]
    9188:	add	x0, x2, x0
    918c:	lsl	x0, x0, #3
    9190:	sub	x0, x0, #0x8
    9194:	add	x1, x1, x0
    9198:	ldr	x0, [sp, #40]
    919c:	str	x1, [x0]
    91a0:	nop
    91a4:	ldr	x19, [sp, #16]
    91a8:	ldp	x29, x30, [sp], #128
    91ac:	ret

00000000000091b0 <XS_POSIX__Termios_setattr>:
    91b0:	stp	x29, x30, [sp, #-128]!
    91b4:	mov	x29, sp
    91b8:	str	x19, [sp, #16]
    91bc:	str	x0, [sp, #40]
    91c0:	str	x1, [sp, #32]
    91c4:	ldr	x0, [sp, #40]
    91c8:	ldr	x0, [x0]
    91cc:	str	x0, [sp, #72]
    91d0:	ldr	x0, [sp, #40]
    91d4:	bl	739c <S_POPMARK>
    91d8:	str	w0, [sp, #64]
    91dc:	ldr	x0, [sp, #40]
    91e0:	ldr	x1, [x0, #24]
    91e4:	ldr	w0, [sp, #64]
    91e8:	add	w2, w0, #0x1
    91ec:	str	w2, [sp, #64]
    91f0:	sxtw	x0, w0
    91f4:	lsl	x0, x0, #3
    91f8:	add	x0, x1, x0
    91fc:	str	x0, [sp, #80]
    9200:	ldr	x1, [sp, #72]
    9204:	ldr	x0, [sp, #80]
    9208:	sub	x0, x1, x0
    920c:	asr	x0, x0, #3
    9210:	str	w0, [sp, #68]
    9214:	ldr	w0, [sp, #68]
    9218:	cmp	w0, #0x0
    921c:	b.le	922c <XS_POSIX__Termios_setattr+0x7c>
    9220:	ldr	w0, [sp, #68]
    9224:	cmp	w0, #0x3
    9228:	b.le	923c <XS_POSIX__Termios_setattr+0x8c>
    922c:	adrp	x0, 1b000 <_fini+0x1fc>
    9230:	add	x1, x0, #0x200
    9234:	ldr	x0, [sp, #32]
    9238:	bl	6b20 <Perl_croak_xs_usage@plt>
    923c:	ldr	x0, [sp, #40]
    9240:	ldr	x1, [x0, #24]
    9244:	ldrsw	x0, [sp, #64]
    9248:	lsl	x0, x0, #3
    924c:	add	x0, x1, x0
    9250:	ldr	x0, [x0]
    9254:	str	x0, [sp, #88]
    9258:	ldr	x0, [sp, #88]
    925c:	ldr	w0, [x0, #12]
    9260:	and	w0, w0, #0x800
    9264:	cmp	w0, #0x0
    9268:	b.eq	92ec <XS_POSIX__Termios_setattr+0x13c>  // b.none
    926c:	adrp	x0, 1b000 <_fini+0x1fc>
    9270:	add	x2, x0, #0x1b0
    9274:	ldr	x1, [sp, #88]
    9278:	ldr	x0, [sp, #40]
    927c:	bl	6750 <Perl_sv_derived_from@plt>
    9280:	and	w0, w0, #0xff
    9284:	cmp	w0, #0x0
    9288:	b.eq	92ec <XS_POSIX__Termios_setattr+0x13c>  // b.none
    928c:	ldr	x0, [sp, #88]
    9290:	ldr	x0, [x0, #16]
    9294:	ldr	w1, [x0, #12]
    9298:	mov	w0, #0x400                 	// #1024
    929c:	movk	w0, #0x20, lsl #16
    92a0:	and	w0, w1, w0
    92a4:	cmp	w0, #0x400
    92a8:	b.ne	92bc <XS_POSIX__Termios_setattr+0x10c>  // b.any
    92ac:	ldr	x0, [sp, #88]
    92b0:	ldr	x0, [x0, #16]
    92b4:	ldr	x0, [x0, #16]
    92b8:	b	92d8 <XS_POSIX__Termios_setattr+0x128>
    92bc:	ldr	x0, [sp, #88]
    92c0:	ldr	x0, [x0, #16]
    92c4:	mov	w3, #0x2                   	// #2
    92c8:	mov	x2, #0x0                   	// #0
    92cc:	mov	x1, x0
    92d0:	ldr	x0, [sp, #40]
    92d4:	bl	69b0 <Perl_sv_2pv_flags@plt>
    92d8:	str	x0, [sp, #96]
    92dc:	ldr	w0, [sp, #68]
    92e0:	cmp	w0, #0x1
    92e4:	b.le	9310 <XS_POSIX__Termios_setattr+0x160>
    92e8:	b	9318 <XS_POSIX__Termios_setattr+0x168>
    92ec:	adrp	x0, 1b000 <_fini+0x1fc>
    92f0:	add	x3, x0, #0x1b0
    92f4:	adrp	x0, 1b000 <_fini+0x1fc>
    92f8:	add	x2, x0, #0x1d8
    92fc:	adrp	x0, 1b000 <_fini+0x1fc>
    9300:	add	x1, x0, #0x240
    9304:	adrp	x0, 1b000 <_fini+0x1fc>
    9308:	add	x0, x0, #0x140
    930c:	bl	6cd0 <Perl_croak_nocontext@plt>
    9310:	str	wzr, [sp, #52]
    9314:	b	9428 <XS_POSIX__Termios_setattr+0x278>
    9318:	ldr	x0, [sp, #40]
    931c:	ldr	x1, [x0, #24]
    9320:	ldrsw	x0, [sp, #64]
    9324:	add	x0, x0, #0x1
    9328:	lsl	x0, x0, #3
    932c:	add	x0, x1, x0
    9330:	ldr	x0, [x0]
    9334:	ldr	w1, [x0, #12]
    9338:	mov	w0, #0x100                 	// #256
    933c:	movk	w0, #0x20, lsl #16
    9340:	and	w0, w1, w0
    9344:	cmp	w0, #0x100
    9348:	b.ne	9374 <XS_POSIX__Termios_setattr+0x1c4>  // b.any
    934c:	ldr	x0, [sp, #40]
    9350:	ldr	x1, [x0, #24]
    9354:	ldrsw	x0, [sp, #64]
    9358:	add	x0, x0, #0x1
    935c:	lsl	x0, x0, #3
    9360:	add	x0, x1, x0
    9364:	ldr	x0, [x0]
    9368:	ldr	x0, [x0]
    936c:	ldr	x0, [x0, #32]
    9370:	b	93a0 <XS_POSIX__Termios_setattr+0x1f0>
    9374:	ldr	x0, [sp, #40]
    9378:	ldr	x1, [x0, #24]
    937c:	ldrsw	x0, [sp, #64]
    9380:	add	x0, x0, #0x1
    9384:	lsl	x0, x0, #3
    9388:	add	x0, x1, x0
    938c:	ldr	x0, [x0]
    9390:	mov	w2, #0x2                   	// #2
    9394:	mov	x1, x0
    9398:	ldr	x0, [sp, #40]
    939c:	bl	6560 <Perl_sv_2iv_flags@plt>
    93a0:	str	w0, [sp, #52]
    93a4:	ldr	w0, [sp, #52]
    93a8:	cmp	w0, #0x0
    93ac:	b.ge	9428 <XS_POSIX__Termios_setattr+0x278>  // b.tcont
    93b0:	bl	70d0 <__errno_location@plt>
    93b4:	mov	x1, x0
    93b8:	mov	w0, #0x9                   	// #9
    93bc:	str	w0, [x1]
    93c0:	mov	x1, #0xffffffffffffffff    	// #-1
    93c4:	ldr	x0, [sp, #40]
    93c8:	bl	70b0 <Perl_newSViv@plt>
    93cc:	mov	x2, x0
    93d0:	ldr	x0, [sp, #40]
    93d4:	ldr	x1, [x0, #24]
    93d8:	ldrsw	x0, [sp, #64]
    93dc:	lsl	x0, x0, #3
    93e0:	add	x19, x1, x0
    93e4:	mov	x1, x2
    93e8:	ldr	x0, [sp, #40]
    93ec:	bl	6d60 <Perl_sv_2mortal@plt>
    93f0:	str	x0, [x19]
    93f4:	mov	x0, #0x1                   	// #1
    93f8:	str	x0, [sp, #104]
    93fc:	ldr	x0, [sp, #40]
    9400:	ldr	x1, [x0, #24]
    9404:	ldrsw	x2, [sp, #64]
    9408:	ldr	x0, [sp, #104]
    940c:	add	x0, x2, x0
    9410:	lsl	x0, x0, #3
    9414:	sub	x0, x0, #0x8
    9418:	add	x1, x1, x0
    941c:	ldr	x0, [sp, #40]
    9420:	str	x1, [x0]
    9424:	b	95a8 <XS_POSIX__Termios_setattr+0x3f8>
    9428:	ldr	w0, [sp, #68]
    942c:	cmp	w0, #0x2
    9430:	b.gt	943c <XS_POSIX__Termios_setattr+0x28c>
    9434:	str	wzr, [sp, #56]
    9438:	b	94c8 <XS_POSIX__Termios_setattr+0x318>
    943c:	ldr	x0, [sp, #40]
    9440:	ldr	x1, [x0, #24]
    9444:	ldrsw	x0, [sp, #64]
    9448:	add	x0, x0, #0x2
    944c:	lsl	x0, x0, #3
    9450:	add	x0, x1, x0
    9454:	ldr	x0, [x0]
    9458:	ldr	w1, [x0, #12]
    945c:	mov	w0, #0x100                 	// #256
    9460:	movk	w0, #0x20, lsl #16
    9464:	and	w0, w1, w0
    9468:	cmp	w0, #0x100
    946c:	b.ne	9498 <XS_POSIX__Termios_setattr+0x2e8>  // b.any
    9470:	ldr	x0, [sp, #40]
    9474:	ldr	x1, [x0, #24]
    9478:	ldrsw	x0, [sp, #64]
    947c:	add	x0, x0, #0x2
    9480:	lsl	x0, x0, #3
    9484:	add	x0, x1, x0
    9488:	ldr	x0, [x0]
    948c:	ldr	x0, [x0]
    9490:	ldr	x0, [x0, #32]
    9494:	b	94c4 <XS_POSIX__Termios_setattr+0x314>
    9498:	ldr	x0, [sp, #40]
    949c:	ldr	x1, [x0, #24]
    94a0:	ldrsw	x0, [sp, #64]
    94a4:	add	x0, x0, #0x2
    94a8:	lsl	x0, x0, #3
    94ac:	add	x0, x1, x0
    94b0:	ldr	x0, [x0]
    94b4:	mov	w2, #0x2                   	// #2
    94b8:	mov	x1, x0
    94bc:	ldr	x0, [sp, #40]
    94c0:	bl	6560 <Perl_sv_2iv_flags@plt>
    94c4:	str	w0, [sp, #56]
    94c8:	ldr	w0, [sp, #56]
    94cc:	cmp	w0, #0x0
    94d0:	b.ge	94f0 <XS_POSIX__Termios_setattr+0x340>  // b.tcont
    94d4:	bl	70d0 <__errno_location@plt>
    94d8:	mov	x1, x0
    94dc:	mov	w0, #0x16                  	// #22
    94e0:	str	w0, [x1]
    94e4:	mov	w0, #0xffffffff            	// #-1
    94e8:	str	w0, [sp, #60]
    94ec:	b	9504 <XS_POSIX__Termios_setattr+0x354>
    94f0:	ldr	x2, [sp, #96]
    94f4:	ldr	w1, [sp, #56]
    94f8:	ldr	w0, [sp, #52]
    94fc:	bl	6ea0 <tcsetattr@plt>
    9500:	str	w0, [sp, #60]
    9504:	ldr	x0, [sp, #40]
    9508:	bl	7160 <Perl_sv_newmortal@plt>
    950c:	str	x0, [sp, #112]
    9510:	ldr	w0, [sp, #60]
    9514:	cmn	w0, #0x1
    9518:	b.eq	9558 <XS_POSIX__Termios_setattr+0x3a8>  // b.none
    951c:	ldr	w0, [sp, #60]
    9520:	cmp	w0, #0x0
    9524:	b.ne	9544 <XS_POSIX__Termios_setattr+0x394>  // b.any
    9528:	mov	x3, #0xa                   	// #10
    952c:	adrp	x0, 1b000 <_fini+0x1fc>
    9530:	add	x2, x0, #0x188
    9534:	ldr	x1, [sp, #112]
    9538:	ldr	x0, [sp, #40]
    953c:	bl	6f10 <Perl_sv_setpvn@plt>
    9540:	b	9558 <XS_POSIX__Termios_setattr+0x3a8>
    9544:	ldrsw	x0, [sp, #60]
    9548:	mov	x2, x0
    954c:	ldr	x1, [sp, #112]
    9550:	ldr	x0, [sp, #40]
    9554:	bl	7120 <Perl_sv_setiv@plt>
    9558:	ldr	x0, [sp, #40]
    955c:	ldr	x1, [x0, #24]
    9560:	ldrsw	x0, [sp, #64]
    9564:	lsl	x0, x0, #3
    9568:	add	x0, x1, x0
    956c:	ldr	x1, [sp, #112]
    9570:	str	x1, [x0]
    9574:	mov	x0, #0x1                   	// #1
    9578:	str	x0, [sp, #120]
    957c:	ldr	x0, [sp, #40]
    9580:	ldr	x1, [x0, #24]
    9584:	ldrsw	x2, [sp, #64]
    9588:	ldr	x0, [sp, #120]
    958c:	add	x0, x2, x0
    9590:	lsl	x0, x0, #3
    9594:	sub	x0, x0, #0x8
    9598:	add	x1, x1, x0
    959c:	ldr	x0, [sp, #40]
    95a0:	str	x1, [x0]
    95a4:	nop
    95a8:	ldr	x19, [sp, #16]
    95ac:	ldp	x29, x30, [sp], #128
    95b0:	ret

00000000000095b4 <XS_POSIX__Termios_getispeed>:
    95b4:	stp	x29, x30, [sp, #-112]!
    95b8:	mov	x29, sp
    95bc:	str	x0, [sp, #24]
    95c0:	str	x1, [sp, #16]
    95c4:	ldr	x0, [sp, #24]
    95c8:	ldr	x0, [x0]
    95cc:	str	x0, [sp, #48]
    95d0:	ldr	x0, [sp, #24]
    95d4:	bl	739c <S_POPMARK>
    95d8:	str	w0, [sp, #32]
    95dc:	ldr	x0, [sp, #24]
    95e0:	ldr	x1, [x0, #24]
    95e4:	ldr	w0, [sp, #32]
    95e8:	add	w2, w0, #0x1
    95ec:	str	w2, [sp, #32]
    95f0:	sxtw	x0, w0
    95f4:	lsl	x0, x0, #3
    95f8:	add	x0, x1, x0
    95fc:	str	x0, [sp, #56]
    9600:	ldr	x1, [sp, #48]
    9604:	ldr	x0, [sp, #56]
    9608:	sub	x0, x1, x0
    960c:	asr	x0, x0, #3
    9610:	str	w0, [sp, #36]
    9614:	ldr	x0, [sp, #16]
    9618:	ldr	x0, [x0]
    961c:	str	x0, [sp, #64]
    9620:	ldr	x0, [sp, #64]
    9624:	ldr	w0, [x0, #40]
    9628:	str	w0, [sp, #40]
    962c:	ldr	w0, [sp, #36]
    9630:	cmp	w0, #0x1
    9634:	b.eq	9648 <XS_POSIX__Termios_getispeed+0x94>  // b.none
    9638:	adrp	x0, 1b000 <_fini+0x1fc>
    963c:	add	x1, x0, #0x1d8
    9640:	ldr	x0, [sp, #16]
    9644:	bl	6b20 <Perl_croak_xs_usage@plt>
    9648:	ldr	x0, [sp, #24]
    964c:	ldr	x0, [x0, #8]
    9650:	ldrb	w0, [x0, #35]
    9654:	and	w0, w0, #0x4
    9658:	cmp	w0, #0x0
    965c:	b.eq	9684 <XS_POSIX__Termios_getispeed+0xd0>  // b.none
    9660:	ldr	x0, [sp, #24]
    9664:	ldr	x1, [x0, #16]
    9668:	ldr	x0, [sp, #24]
    966c:	ldr	x0, [x0, #8]
    9670:	ldr	x0, [x0, #24]
    9674:	lsl	x0, x0, #3
    9678:	add	x0, x1, x0
    967c:	ldr	x0, [x0]
    9680:	b	968c <XS_POSIX__Termios_getispeed+0xd8>
    9684:	ldr	x0, [sp, #24]
    9688:	bl	7160 <Perl_sv_newmortal@plt>
    968c:	str	x0, [sp, #72]
    9690:	ldr	x0, [sp, #24]
    9694:	ldr	x1, [x0, #24]
    9698:	ldrsw	x0, [sp, #32]
    969c:	lsl	x0, x0, #3
    96a0:	add	x0, x1, x0
    96a4:	ldr	x0, [x0]
    96a8:	str	x0, [sp, #80]
    96ac:	ldr	x0, [sp, #80]
    96b0:	ldr	w0, [x0, #12]
    96b4:	and	w0, w0, #0x800
    96b8:	cmp	w0, #0x0
    96bc:	b.eq	9740 <XS_POSIX__Termios_getispeed+0x18c>  // b.none
    96c0:	adrp	x0, 1b000 <_fini+0x1fc>
    96c4:	add	x2, x0, #0x1b0
    96c8:	ldr	x1, [sp, #80]
    96cc:	ldr	x0, [sp, #24]
    96d0:	bl	6750 <Perl_sv_derived_from@plt>
    96d4:	and	w0, w0, #0xff
    96d8:	cmp	w0, #0x0
    96dc:	b.eq	9740 <XS_POSIX__Termios_getispeed+0x18c>  // b.none
    96e0:	ldr	x0, [sp, #80]
    96e4:	ldr	x0, [x0, #16]
    96e8:	ldr	w1, [x0, #12]
    96ec:	mov	w0, #0x400                 	// #1024
    96f0:	movk	w0, #0x20, lsl #16
    96f4:	and	w0, w1, w0
    96f8:	cmp	w0, #0x400
    96fc:	b.ne	9710 <XS_POSIX__Termios_getispeed+0x15c>  // b.any
    9700:	ldr	x0, [sp, #80]
    9704:	ldr	x0, [x0, #16]
    9708:	ldr	x0, [x0, #16]
    970c:	b	972c <XS_POSIX__Termios_getispeed+0x178>
    9710:	ldr	x0, [sp, #80]
    9714:	ldr	x0, [x0, #16]
    9718:	mov	w3, #0x2                   	// #2
    971c:	mov	x2, #0x0                   	// #0
    9720:	mov	x1, x0
    9724:	ldr	x0, [sp, #24]
    9728:	bl	69b0 <Perl_sv_2pv_flags@plt>
    972c:	str	x0, [sp, #88]
    9730:	ldr	w0, [sp, #40]
    9734:	cmp	w0, #0x0
    9738:	b.ne	9774 <XS_POSIX__Termios_getispeed+0x1c0>  // b.any
    973c:	b	9780 <XS_POSIX__Termios_getispeed+0x1cc>
    9740:	ldr	x1, [sp, #16]
    9744:	ldr	x0, [sp, #24]
    9748:	bl	7340 <S_CvGV>
    974c:	ldr	x0, [x0]
    9750:	ldr	x0, [x0, #32]
    9754:	add	x1, x0, #0x8
    9758:	adrp	x0, 1b000 <_fini+0x1fc>
    975c:	add	x3, x0, #0x1b0
    9760:	adrp	x0, 1b000 <_fini+0x1fc>
    9764:	add	x2, x0, #0x1d8
    9768:	adrp	x0, 1b000 <_fini+0x1fc>
    976c:	add	x0, x0, #0x140
    9770:	bl	6cd0 <Perl_croak_nocontext@plt>
    9774:	ldr	x0, [sp, #88]
    9778:	bl	66c0 <cfgetospeed@plt>
    977c:	b	9788 <XS_POSIX__Termios_getispeed+0x1d4>
    9780:	ldr	x0, [sp, #88]
    9784:	bl	6ed0 <cfgetispeed@plt>
    9788:	str	w0, [sp, #44]
    978c:	ldr	x0, [sp, #24]
    9790:	ldr	x1, [x0, #24]
    9794:	ldrsw	x0, [sp, #32]
    9798:	lsl	x0, x0, #3
    979c:	sub	x0, x0, #0x8
    97a0:	add	x0, x1, x0
    97a4:	str	x0, [sp, #48]
    97a8:	ldr	w0, [sp, #44]
    97ac:	str	x0, [sp, #96]
    97b0:	ldr	x0, [sp, #72]
    97b4:	ldr	w1, [x0, #12]
    97b8:	mov	w0, #0x8ff                 	// #2303
    97bc:	movk	w0, #0x9981, lsl #16
    97c0:	and	w0, w1, w0
    97c4:	cmp	w0, #0x1
    97c8:	cset	w0, eq  // eq = none
    97cc:	and	w0, w0, #0xff
    97d0:	mov	w1, w0
    97d4:	ldr	x0, [sp, #24]
    97d8:	ldrb	w0, [x0, #185]
    97dc:	eor	w0, w0, #0x1
    97e0:	and	w0, w0, #0xff
    97e4:	and	w0, w1, w0
    97e8:	cmp	w0, #0x0
    97ec:	cset	w0, ne  // ne = any
    97f0:	and	w0, w0, #0xff
    97f4:	and	x0, x0, #0xff
    97f8:	cmp	x0, #0x0
    97fc:	b.eq	9828 <XS_POSIX__Termios_getispeed+0x274>  // b.none
    9800:	ldr	x0, [sp, #72]
    9804:	ldr	w1, [x0, #12]
    9808:	mov	w0, #0x1100                	// #4352
    980c:	orr	w1, w1, w0
    9810:	ldr	x0, [sp, #72]
    9814:	str	w1, [x0, #12]
    9818:	ldr	x0, [sp, #72]
    981c:	ldr	x1, [sp, #96]
    9820:	str	x1, [x0, #16]
    9824:	b	9838 <XS_POSIX__Termios_getispeed+0x284>
    9828:	ldr	x2, [sp, #96]
    982c:	ldr	x1, [sp, #72]
    9830:	ldr	x0, [sp, #24]
    9834:	bl	6880 <Perl_sv_setiv_mg@plt>
    9838:	ldr	x0, [sp, #48]
    983c:	add	x0, x0, #0x8
    9840:	str	x0, [sp, #48]
    9844:	ldr	x0, [sp, #48]
    9848:	ldr	x1, [sp, #72]
    984c:	str	x1, [x0]
    9850:	mov	x0, #0x1                   	// #1
    9854:	str	x0, [sp, #104]
    9858:	ldr	x0, [sp, #24]
    985c:	ldr	x1, [x0, #24]
    9860:	ldrsw	x2, [sp, #32]
    9864:	ldr	x0, [sp, #104]
    9868:	add	x0, x2, x0
    986c:	lsl	x0, x0, #3
    9870:	sub	x0, x0, #0x8
    9874:	add	x1, x1, x0
    9878:	ldr	x0, [sp, #24]
    987c:	str	x1, [x0]
    9880:	nop
    9884:	ldp	x29, x30, [sp], #112
    9888:	ret

000000000000988c <XS_POSIX__Termios_getiflag>:
    988c:	stp	x29, x30, [sp, #-112]!
    9890:	mov	x29, sp
    9894:	str	x0, [sp, #24]
    9898:	str	x1, [sp, #16]
    989c:	ldr	x0, [sp, #24]
    98a0:	ldr	x0, [x0]
    98a4:	str	x0, [sp, #48]
    98a8:	ldr	x0, [sp, #24]
    98ac:	bl	739c <S_POPMARK>
    98b0:	str	w0, [sp, #36]
    98b4:	ldr	x0, [sp, #24]
    98b8:	ldr	x1, [x0, #24]
    98bc:	ldr	w0, [sp, #36]
    98c0:	add	w2, w0, #0x1
    98c4:	str	w2, [sp, #36]
    98c8:	sxtw	x0, w0
    98cc:	lsl	x0, x0, #3
    98d0:	add	x0, x1, x0
    98d4:	str	x0, [sp, #56]
    98d8:	ldr	x1, [sp, #48]
    98dc:	ldr	x0, [sp, #56]
    98e0:	sub	x0, x1, x0
    98e4:	asr	x0, x0, #3
    98e8:	str	w0, [sp, #40]
    98ec:	ldr	x0, [sp, #16]
    98f0:	ldr	x0, [x0]
    98f4:	str	x0, [sp, #64]
    98f8:	ldr	x0, [sp, #64]
    98fc:	ldr	w0, [x0, #40]
    9900:	str	w0, [sp, #44]
    9904:	ldr	w0, [sp, #40]
    9908:	cmp	w0, #0x1
    990c:	b.eq	9920 <XS_POSIX__Termios_getiflag+0x94>  // b.none
    9910:	adrp	x0, 1b000 <_fini+0x1fc>
    9914:	add	x1, x0, #0x1d8
    9918:	ldr	x0, [sp, #16]
    991c:	bl	6b20 <Perl_croak_xs_usage@plt>
    9920:	ldr	x0, [sp, #24]
    9924:	ldr	x0, [x0, #8]
    9928:	ldrb	w0, [x0, #35]
    992c:	and	w0, w0, #0x4
    9930:	cmp	w0, #0x0
    9934:	b.eq	995c <XS_POSIX__Termios_getiflag+0xd0>  // b.none
    9938:	ldr	x0, [sp, #24]
    993c:	ldr	x1, [x0, #16]
    9940:	ldr	x0, [sp, #24]
    9944:	ldr	x0, [x0, #8]
    9948:	ldr	x0, [x0, #24]
    994c:	lsl	x0, x0, #3
    9950:	add	x0, x1, x0
    9954:	ldr	x0, [x0]
    9958:	b	9964 <XS_POSIX__Termios_getiflag+0xd8>
    995c:	ldr	x0, [sp, #24]
    9960:	bl	7160 <Perl_sv_newmortal@plt>
    9964:	str	x0, [sp, #72]
    9968:	ldr	x0, [sp, #24]
    996c:	ldr	x1, [x0, #24]
    9970:	ldrsw	x0, [sp, #36]
    9974:	lsl	x0, x0, #3
    9978:	add	x0, x1, x0
    997c:	ldr	x0, [x0]
    9980:	str	x0, [sp, #80]
    9984:	ldr	x0, [sp, #80]
    9988:	ldr	w0, [x0, #12]
    998c:	and	w0, w0, #0x800
    9990:	cmp	w0, #0x0
    9994:	b.eq	9a54 <XS_POSIX__Termios_getiflag+0x1c8>  // b.none
    9998:	adrp	x0, 1b000 <_fini+0x1fc>
    999c:	add	x2, x0, #0x1b0
    99a0:	ldr	x1, [sp, #80]
    99a4:	ldr	x0, [sp, #24]
    99a8:	bl	6750 <Perl_sv_derived_from@plt>
    99ac:	and	w0, w0, #0xff
    99b0:	cmp	w0, #0x0
    99b4:	b.eq	9a54 <XS_POSIX__Termios_getiflag+0x1c8>  // b.none
    99b8:	ldr	x0, [sp, #80]
    99bc:	ldr	x0, [x0, #16]
    99c0:	ldr	w1, [x0, #12]
    99c4:	mov	w0, #0x400                 	// #1024
    99c8:	movk	w0, #0x20, lsl #16
    99cc:	and	w0, w1, w0
    99d0:	cmp	w0, #0x400
    99d4:	b.ne	99e8 <XS_POSIX__Termios_getiflag+0x15c>  // b.any
    99d8:	ldr	x0, [sp, #80]
    99dc:	ldr	x0, [x0, #16]
    99e0:	ldr	x0, [x0, #16]
    99e4:	b	9a04 <XS_POSIX__Termios_getiflag+0x178>
    99e8:	ldr	x0, [sp, #80]
    99ec:	ldr	x0, [x0, #16]
    99f0:	mov	w3, #0x2                   	// #2
    99f4:	mov	x2, #0x0                   	// #0
    99f8:	mov	x1, x0
    99fc:	ldr	x0, [sp, #24]
    9a00:	bl	69b0 <Perl_sv_2pv_flags@plt>
    9a04:	str	x0, [sp, #88]
    9a08:	ldr	w0, [sp, #44]
    9a0c:	cmp	w0, #0x3
    9a10:	b.eq	9ab8 <XS_POSIX__Termios_getiflag+0x22c>  // b.none
    9a14:	ldr	w0, [sp, #44]
    9a18:	cmp	w0, #0x3
    9a1c:	b.gt	9ac8 <XS_POSIX__Termios_getiflag+0x23c>
    9a20:	ldr	w0, [sp, #44]
    9a24:	cmp	w0, #0x2
    9a28:	b.eq	9aa8 <XS_POSIX__Termios_getiflag+0x21c>  // b.none
    9a2c:	ldr	w0, [sp, #44]
    9a30:	cmp	w0, #0x2
    9a34:	b.gt	9ac8 <XS_POSIX__Termios_getiflag+0x23c>
    9a38:	ldr	w0, [sp, #44]
    9a3c:	cmp	w0, #0x0
    9a40:	b.eq	9a88 <XS_POSIX__Termios_getiflag+0x1fc>  // b.none
    9a44:	ldr	w0, [sp, #44]
    9a48:	cmp	w0, #0x1
    9a4c:	b.eq	9a98 <XS_POSIX__Termios_getiflag+0x20c>  // b.none
    9a50:	b	9ac8 <XS_POSIX__Termios_getiflag+0x23c>
    9a54:	ldr	x1, [sp, #16]
    9a58:	ldr	x0, [sp, #24]
    9a5c:	bl	7340 <S_CvGV>
    9a60:	ldr	x0, [x0]
    9a64:	ldr	x0, [x0, #32]
    9a68:	add	x1, x0, #0x8
    9a6c:	adrp	x0, 1b000 <_fini+0x1fc>
    9a70:	add	x3, x0, #0x1b0
    9a74:	adrp	x0, 1b000 <_fini+0x1fc>
    9a78:	add	x2, x0, #0x1d8
    9a7c:	adrp	x0, 1b000 <_fini+0x1fc>
    9a80:	add	x0, x0, #0x140
    9a84:	bl	6cd0 <Perl_croak_nocontext@plt>
    9a88:	ldr	x0, [sp, #88]
    9a8c:	ldr	w0, [x0]
    9a90:	str	w0, [sp, #32]
    9a94:	b	9acc <XS_POSIX__Termios_getiflag+0x240>
    9a98:	ldr	x0, [sp, #88]
    9a9c:	ldr	w0, [x0, #4]
    9aa0:	str	w0, [sp, #32]
    9aa4:	b	9acc <XS_POSIX__Termios_getiflag+0x240>
    9aa8:	ldr	x0, [sp, #88]
    9aac:	ldr	w0, [x0, #8]
    9ab0:	str	w0, [sp, #32]
    9ab4:	b	9acc <XS_POSIX__Termios_getiflag+0x240>
    9ab8:	ldr	x0, [sp, #88]
    9abc:	ldr	w0, [x0, #12]
    9ac0:	str	w0, [sp, #32]
    9ac4:	b	9acc <XS_POSIX__Termios_getiflag+0x240>
    9ac8:	str	wzr, [sp, #32]
    9acc:	ldr	x0, [sp, #24]
    9ad0:	ldr	x1, [x0, #24]
    9ad4:	ldrsw	x0, [sp, #36]
    9ad8:	lsl	x0, x0, #3
    9adc:	sub	x0, x0, #0x8
    9ae0:	add	x0, x1, x0
    9ae4:	str	x0, [sp, #48]
    9ae8:	ldr	w0, [sp, #32]
    9aec:	str	x0, [sp, #96]
    9af0:	ldr	x0, [sp, #72]
    9af4:	ldr	w1, [x0, #12]
    9af8:	mov	w0, #0x8ff                 	// #2303
    9afc:	movk	w0, #0x9981, lsl #16
    9b00:	and	w0, w1, w0
    9b04:	cmp	w0, #0x1
    9b08:	cset	w0, eq  // eq = none
    9b0c:	and	w0, w0, #0xff
    9b10:	mov	w1, w0
    9b14:	ldr	x0, [sp, #24]
    9b18:	ldrb	w0, [x0, #185]
    9b1c:	eor	w0, w0, #0x1
    9b20:	and	w0, w0, #0xff
    9b24:	and	w0, w1, w0
    9b28:	cmp	w0, #0x0
    9b2c:	cset	w0, ne  // ne = any
    9b30:	and	w0, w0, #0xff
    9b34:	and	x0, x0, #0xff
    9b38:	cmp	x0, #0x0
    9b3c:	b.eq	9b68 <XS_POSIX__Termios_getiflag+0x2dc>  // b.none
    9b40:	ldr	x0, [sp, #72]
    9b44:	ldr	w1, [x0, #12]
    9b48:	mov	w0, #0x1100                	// #4352
    9b4c:	orr	w1, w1, w0
    9b50:	ldr	x0, [sp, #72]
    9b54:	str	w1, [x0, #12]
    9b58:	ldr	x0, [sp, #72]
    9b5c:	ldr	x1, [sp, #96]
    9b60:	str	x1, [x0, #16]
    9b64:	b	9b78 <XS_POSIX__Termios_getiflag+0x2ec>
    9b68:	ldr	x2, [sp, #96]
    9b6c:	ldr	x1, [sp, #72]
    9b70:	ldr	x0, [sp, #24]
    9b74:	bl	6880 <Perl_sv_setiv_mg@plt>
    9b78:	ldr	x0, [sp, #48]
    9b7c:	add	x0, x0, #0x8
    9b80:	str	x0, [sp, #48]
    9b84:	ldr	x0, [sp, #48]
    9b88:	ldr	x1, [sp, #72]
    9b8c:	str	x1, [x0]
    9b90:	mov	x0, #0x1                   	// #1
    9b94:	str	x0, [sp, #104]
    9b98:	ldr	x0, [sp, #24]
    9b9c:	ldr	x1, [x0, #24]
    9ba0:	ldrsw	x2, [sp, #36]
    9ba4:	ldr	x0, [sp, #104]
    9ba8:	add	x0, x2, x0
    9bac:	lsl	x0, x0, #3
    9bb0:	sub	x0, x0, #0x8
    9bb4:	add	x1, x1, x0
    9bb8:	ldr	x0, [sp, #24]
    9bbc:	str	x1, [x0]
    9bc0:	nop
    9bc4:	ldp	x29, x30, [sp], #112
    9bc8:	ret

0000000000009bcc <XS_POSIX__Termios_getcc>:
    9bcc:	stp	x29, x30, [sp, #-112]!
    9bd0:	mov	x29, sp
    9bd4:	str	x0, [sp, #24]
    9bd8:	str	x1, [sp, #16]
    9bdc:	ldr	x0, [sp, #24]
    9be0:	ldr	x0, [x0]
    9be4:	str	x0, [sp, #56]
    9be8:	ldr	x0, [sp, #24]
    9bec:	bl	739c <S_POPMARK>
    9bf0:	str	w0, [sp, #44]
    9bf4:	ldr	x0, [sp, #24]
    9bf8:	ldr	x1, [x0, #24]
    9bfc:	ldr	w0, [sp, #44]
    9c00:	add	w2, w0, #0x1
    9c04:	str	w2, [sp, #44]
    9c08:	sxtw	x0, w0
    9c0c:	lsl	x0, x0, #3
    9c10:	add	x0, x1, x0
    9c14:	str	x0, [sp, #64]
    9c18:	ldr	x1, [sp, #56]
    9c1c:	ldr	x0, [sp, #64]
    9c20:	sub	x0, x1, x0
    9c24:	asr	x0, x0, #3
    9c28:	str	w0, [sp, #48]
    9c2c:	ldr	w0, [sp, #48]
    9c30:	cmp	w0, #0x2
    9c34:	b.eq	9c48 <XS_POSIX__Termios_getcc+0x7c>  // b.none
    9c38:	adrp	x0, 1b000 <_fini+0x1fc>
    9c3c:	add	x1, x0, #0x258
    9c40:	ldr	x0, [sp, #16]
    9c44:	bl	6b20 <Perl_croak_xs_usage@plt>
    9c48:	ldr	x0, [sp, #24]
    9c4c:	ldr	x1, [x0, #24]
    9c50:	ldrsw	x0, [sp, #44]
    9c54:	add	x0, x0, #0x1
    9c58:	lsl	x0, x0, #3
    9c5c:	add	x0, x1, x0
    9c60:	ldr	x0, [x0]
    9c64:	ldr	w1, [x0, #12]
    9c68:	mov	w0, #0x100                 	// #256
    9c6c:	movk	w0, #0x8020, lsl #16
    9c70:	and	w1, w1, w0
    9c74:	mov	w0, #0x100                 	// #256
    9c78:	movk	w0, #0x8000, lsl #16
    9c7c:	cmp	w1, w0
    9c80:	b.ne	9cac <XS_POSIX__Termios_getcc+0xe0>  // b.any
    9c84:	ldr	x0, [sp, #24]
    9c88:	ldr	x1, [x0, #24]
    9c8c:	ldrsw	x0, [sp, #44]
    9c90:	add	x0, x0, #0x1
    9c94:	lsl	x0, x0, #3
    9c98:	add	x0, x1, x0
    9c9c:	ldr	x0, [x0]
    9ca0:	ldr	x0, [x0]
    9ca4:	ldr	x0, [x0, #32]
    9ca8:	b	9cd8 <XS_POSIX__Termios_getcc+0x10c>
    9cac:	ldr	x0, [sp, #24]
    9cb0:	ldr	x1, [x0, #24]
    9cb4:	ldrsw	x0, [sp, #44]
    9cb8:	add	x0, x0, #0x1
    9cbc:	lsl	x0, x0, #3
    9cc0:	add	x0, x1, x0
    9cc4:	ldr	x0, [x0]
    9cc8:	mov	w2, #0x2                   	// #2
    9ccc:	mov	x1, x0
    9cd0:	ldr	x0, [sp, #24]
    9cd4:	bl	6650 <Perl_sv_2uv_flags@plt>
    9cd8:	str	w0, [sp, #52]
    9cdc:	ldr	x0, [sp, #24]
    9ce0:	ldr	x0, [x0, #8]
    9ce4:	ldrb	w0, [x0, #35]
    9ce8:	and	w0, w0, #0x4
    9cec:	cmp	w0, #0x0
    9cf0:	b.eq	9d18 <XS_POSIX__Termios_getcc+0x14c>  // b.none
    9cf4:	ldr	x0, [sp, #24]
    9cf8:	ldr	x1, [x0, #16]
    9cfc:	ldr	x0, [sp, #24]
    9d00:	ldr	x0, [x0, #8]
    9d04:	ldr	x0, [x0, #24]
    9d08:	lsl	x0, x0, #3
    9d0c:	add	x0, x1, x0
    9d10:	ldr	x0, [x0]
    9d14:	b	9d20 <XS_POSIX__Termios_getcc+0x154>
    9d18:	ldr	x0, [sp, #24]
    9d1c:	bl	7160 <Perl_sv_newmortal@plt>
    9d20:	str	x0, [sp, #72]
    9d24:	ldr	x0, [sp, #24]
    9d28:	ldr	x1, [x0, #24]
    9d2c:	ldrsw	x0, [sp, #44]
    9d30:	lsl	x0, x0, #3
    9d34:	add	x0, x1, x0
    9d38:	ldr	x0, [x0]
    9d3c:	str	x0, [sp, #80]
    9d40:	ldr	x0, [sp, #80]
    9d44:	ldr	w0, [x0, #12]
    9d48:	and	w0, w0, #0x800
    9d4c:	cmp	w0, #0x0
    9d50:	b.eq	9dd4 <XS_POSIX__Termios_getcc+0x208>  // b.none
    9d54:	adrp	x0, 1b000 <_fini+0x1fc>
    9d58:	add	x2, x0, #0x1b0
    9d5c:	ldr	x1, [sp, #80]
    9d60:	ldr	x0, [sp, #24]
    9d64:	bl	6750 <Perl_sv_derived_from@plt>
    9d68:	and	w0, w0, #0xff
    9d6c:	cmp	w0, #0x0
    9d70:	b.eq	9dd4 <XS_POSIX__Termios_getcc+0x208>  // b.none
    9d74:	ldr	x0, [sp, #80]
    9d78:	ldr	x0, [x0, #16]
    9d7c:	ldr	w1, [x0, #12]
    9d80:	mov	w0, #0x400                 	// #1024
    9d84:	movk	w0, #0x20, lsl #16
    9d88:	and	w0, w1, w0
    9d8c:	cmp	w0, #0x400
    9d90:	b.ne	9da4 <XS_POSIX__Termios_getcc+0x1d8>  // b.any
    9d94:	ldr	x0, [sp, #80]
    9d98:	ldr	x0, [x0, #16]
    9d9c:	ldr	x0, [x0, #16]
    9da0:	b	9dc0 <XS_POSIX__Termios_getcc+0x1f4>
    9da4:	ldr	x0, [sp, #80]
    9da8:	ldr	x0, [x0, #16]
    9dac:	mov	w3, #0x2                   	// #2
    9db0:	mov	x2, #0x0                   	// #0
    9db4:	mov	x1, x0
    9db8:	ldr	x0, [sp, #24]
    9dbc:	bl	69b0 <Perl_sv_2pv_flags@plt>
    9dc0:	str	x0, [sp, #88]
    9dc4:	ldr	w0, [sp, #52]
    9dc8:	cmp	w0, #0x1f
    9dcc:	b.hi	9df8 <XS_POSIX__Termios_getcc+0x22c>  // b.pmore
    9dd0:	b	9e04 <XS_POSIX__Termios_getcc+0x238>
    9dd4:	adrp	x0, 1b000 <_fini+0x1fc>
    9dd8:	add	x3, x0, #0x1b0
    9ddc:	adrp	x0, 1b000 <_fini+0x1fc>
    9de0:	add	x2, x0, #0x1d8
    9de4:	adrp	x0, 1b000 <_fini+0x1fc>
    9de8:	add	x1, x0, #0x270
    9dec:	adrp	x0, 1b000 <_fini+0x1fc>
    9df0:	add	x0, x0, #0x140
    9df4:	bl	6cd0 <Perl_croak_nocontext@plt>
    9df8:	adrp	x0, 1b000 <_fini+0x1fc>
    9dfc:	add	x0, x0, #0x288
    9e00:	bl	6cd0 <Perl_croak_nocontext@plt>
    9e04:	ldr	x1, [sp, #88]
    9e08:	ldr	w0, [sp, #52]
    9e0c:	add	x0, x1, x0
    9e10:	ldrb	w0, [x0, #17]
    9e14:	strb	w0, [sp, #43]
    9e18:	ldr	x0, [sp, #24]
    9e1c:	ldr	x1, [x0, #24]
    9e20:	ldrsw	x0, [sp, #44]
    9e24:	lsl	x0, x0, #3
    9e28:	sub	x0, x0, #0x8
    9e2c:	add	x0, x1, x0
    9e30:	str	x0, [sp, #56]
    9e34:	ldrb	w0, [sp, #43]
    9e38:	str	x0, [sp, #96]
    9e3c:	ldr	x0, [sp, #72]
    9e40:	ldr	w1, [x0, #12]
    9e44:	mov	w0, #0x8ff                 	// #2303
    9e48:	movk	w0, #0x9981, lsl #16
    9e4c:	and	w0, w1, w0
    9e50:	cmp	w0, #0x1
    9e54:	cset	w0, eq  // eq = none
    9e58:	and	w0, w0, #0xff
    9e5c:	mov	w1, w0
    9e60:	ldr	x0, [sp, #24]
    9e64:	ldrb	w0, [x0, #185]
    9e68:	eor	w0, w0, #0x1
    9e6c:	and	w0, w0, #0xff
    9e70:	and	w0, w1, w0
    9e74:	cmp	w0, #0x0
    9e78:	cset	w0, ne  // ne = any
    9e7c:	and	w0, w0, #0xff
    9e80:	and	x0, x0, #0xff
    9e84:	cmp	x0, #0x0
    9e88:	b.eq	9eb4 <XS_POSIX__Termios_getcc+0x2e8>  // b.none
    9e8c:	ldr	x0, [sp, #72]
    9e90:	ldr	w1, [x0, #12]
    9e94:	mov	w0, #0x1100                	// #4352
    9e98:	orr	w1, w1, w0
    9e9c:	ldr	x0, [sp, #72]
    9ea0:	str	w1, [x0, #12]
    9ea4:	ldr	x0, [sp, #72]
    9ea8:	ldr	x1, [sp, #96]
    9eac:	str	x1, [x0, #16]
    9eb0:	b	9ec4 <XS_POSIX__Termios_getcc+0x2f8>
    9eb4:	ldr	x2, [sp, #96]
    9eb8:	ldr	x1, [sp, #72]
    9ebc:	ldr	x0, [sp, #24]
    9ec0:	bl	6880 <Perl_sv_setiv_mg@plt>
    9ec4:	ldr	x0, [sp, #56]
    9ec8:	add	x0, x0, #0x8
    9ecc:	str	x0, [sp, #56]
    9ed0:	ldr	x0, [sp, #56]
    9ed4:	ldr	x1, [sp, #72]
    9ed8:	str	x1, [x0]
    9edc:	mov	x0, #0x1                   	// #1
    9ee0:	str	x0, [sp, #104]
    9ee4:	ldr	x0, [sp, #24]
    9ee8:	ldr	x1, [x0, #24]
    9eec:	ldrsw	x2, [sp, #44]
    9ef0:	ldr	x0, [sp, #104]
    9ef4:	add	x0, x2, x0
    9ef8:	lsl	x0, x0, #3
    9efc:	sub	x0, x0, #0x8
    9f00:	add	x1, x1, x0
    9f04:	ldr	x0, [sp, #24]
    9f08:	str	x1, [x0]
    9f0c:	nop
    9f10:	ldp	x29, x30, [sp], #112
    9f14:	ret

0000000000009f18 <XS_POSIX__Termios_setispeed>:
    9f18:	stp	x29, x30, [sp, #-112]!
    9f1c:	mov	x29, sp
    9f20:	str	x0, [sp, #24]
    9f24:	str	x1, [sp, #16]
    9f28:	ldr	x0, [sp, #24]
    9f2c:	ldr	x0, [x0]
    9f30:	str	x0, [sp, #56]
    9f34:	ldr	x0, [sp, #24]
    9f38:	bl	739c <S_POPMARK>
    9f3c:	str	w0, [sp, #36]
    9f40:	ldr	x0, [sp, #24]
    9f44:	ldr	x1, [x0, #24]
    9f48:	ldr	w0, [sp, #36]
    9f4c:	add	w2, w0, #0x1
    9f50:	str	w2, [sp, #36]
    9f54:	sxtw	x0, w0
    9f58:	lsl	x0, x0, #3
    9f5c:	add	x0, x1, x0
    9f60:	str	x0, [sp, #64]
    9f64:	ldr	x1, [sp, #56]
    9f68:	ldr	x0, [sp, #64]
    9f6c:	sub	x0, x1, x0
    9f70:	asr	x0, x0, #3
    9f74:	str	w0, [sp, #40]
    9f78:	ldr	x0, [sp, #16]
    9f7c:	ldr	x0, [x0]
    9f80:	str	x0, [sp, #72]
    9f84:	ldr	x0, [sp, #72]
    9f88:	ldr	w0, [x0, #40]
    9f8c:	str	w0, [sp, #44]
    9f90:	ldr	w0, [sp, #40]
    9f94:	cmp	w0, #0x2
    9f98:	b.eq	9fac <XS_POSIX__Termios_setispeed+0x94>  // b.none
    9f9c:	adrp	x0, 1b000 <_fini+0x1fc>
    9fa0:	add	x1, x0, #0x2a0
    9fa4:	ldr	x0, [sp, #16]
    9fa8:	bl	6b20 <Perl_croak_xs_usage@plt>
    9fac:	ldr	x0, [sp, #24]
    9fb0:	ldr	x1, [x0, #24]
    9fb4:	ldrsw	x0, [sp, #36]
    9fb8:	add	x0, x0, #0x1
    9fbc:	lsl	x0, x0, #3
    9fc0:	add	x0, x1, x0
    9fc4:	ldr	x0, [x0]
    9fc8:	ldr	w1, [x0, #12]
    9fcc:	mov	w0, #0x100                 	// #256
    9fd0:	movk	w0, #0x20, lsl #16
    9fd4:	and	w0, w1, w0
    9fd8:	cmp	w0, #0x100
    9fdc:	b.ne	a008 <XS_POSIX__Termios_setispeed+0xf0>  // b.any
    9fe0:	ldr	x0, [sp, #24]
    9fe4:	ldr	x1, [x0, #24]
    9fe8:	ldrsw	x0, [sp, #36]
    9fec:	add	x0, x0, #0x1
    9ff0:	lsl	x0, x0, #3
    9ff4:	add	x0, x1, x0
    9ff8:	ldr	x0, [x0]
    9ffc:	ldr	x0, [x0]
    a000:	ldr	x0, [x0, #32]
    a004:	b	a034 <XS_POSIX__Termios_setispeed+0x11c>
    a008:	ldr	x0, [sp, #24]
    a00c:	ldr	x1, [x0, #24]
    a010:	ldrsw	x0, [sp, #36]
    a014:	add	x0, x0, #0x1
    a018:	lsl	x0, x0, #3
    a01c:	add	x0, x1, x0
    a020:	ldr	x0, [x0]
    a024:	mov	w2, #0x2                   	// #2
    a028:	mov	x1, x0
    a02c:	ldr	x0, [sp, #24]
    a030:	bl	6560 <Perl_sv_2iv_flags@plt>
    a034:	str	w0, [sp, #48]
    a038:	ldr	x0, [sp, #24]
    a03c:	ldr	x1, [x0, #24]
    a040:	ldrsw	x0, [sp, #36]
    a044:	lsl	x0, x0, #3
    a048:	add	x0, x1, x0
    a04c:	ldr	x0, [x0]
    a050:	str	x0, [sp, #80]
    a054:	ldr	x0, [sp, #80]
    a058:	ldr	w0, [x0, #12]
    a05c:	and	w0, w0, #0x800
    a060:	cmp	w0, #0x0
    a064:	b.eq	a0e8 <XS_POSIX__Termios_setispeed+0x1d0>  // b.none
    a068:	adrp	x0, 1b000 <_fini+0x1fc>
    a06c:	add	x2, x0, #0x1b0
    a070:	ldr	x1, [sp, #80]
    a074:	ldr	x0, [sp, #24]
    a078:	bl	6750 <Perl_sv_derived_from@plt>
    a07c:	and	w0, w0, #0xff
    a080:	cmp	w0, #0x0
    a084:	b.eq	a0e8 <XS_POSIX__Termios_setispeed+0x1d0>  // b.none
    a088:	ldr	x0, [sp, #80]
    a08c:	ldr	x0, [x0, #16]
    a090:	ldr	w1, [x0, #12]
    a094:	mov	w0, #0x400                 	// #1024
    a098:	movk	w0, #0x20, lsl #16
    a09c:	and	w0, w1, w0
    a0a0:	cmp	w0, #0x400
    a0a4:	b.ne	a0b8 <XS_POSIX__Termios_setispeed+0x1a0>  // b.any
    a0a8:	ldr	x0, [sp, #80]
    a0ac:	ldr	x0, [x0, #16]
    a0b0:	ldr	x0, [x0, #16]
    a0b4:	b	a0d4 <XS_POSIX__Termios_setispeed+0x1bc>
    a0b8:	ldr	x0, [sp, #80]
    a0bc:	ldr	x0, [x0, #16]
    a0c0:	mov	w3, #0x2                   	// #2
    a0c4:	mov	x2, #0x0                   	// #0
    a0c8:	mov	x1, x0
    a0cc:	ldr	x0, [sp, #24]
    a0d0:	bl	69b0 <Perl_sv_2pv_flags@plt>
    a0d4:	str	x0, [sp, #88]
    a0d8:	ldr	w0, [sp, #44]
    a0dc:	cmp	w0, #0x0
    a0e0:	b.ne	a11c <XS_POSIX__Termios_setispeed+0x204>  // b.any
    a0e4:	b	a12c <XS_POSIX__Termios_setispeed+0x214>
    a0e8:	ldr	x1, [sp, #16]
    a0ec:	ldr	x0, [sp, #24]
    a0f0:	bl	7340 <S_CvGV>
    a0f4:	ldr	x0, [x0]
    a0f8:	ldr	x0, [x0, #32]
    a0fc:	add	x1, x0, #0x8
    a100:	adrp	x0, 1b000 <_fini+0x1fc>
    a104:	add	x3, x0, #0x1b0
    a108:	adrp	x0, 1b000 <_fini+0x1fc>
    a10c:	add	x2, x0, #0x1d8
    a110:	adrp	x0, 1b000 <_fini+0x1fc>
    a114:	add	x0, x0, #0x140
    a118:	bl	6cd0 <Perl_croak_nocontext@plt>
    a11c:	ldr	w1, [sp, #48]
    a120:	ldr	x0, [sp, #88]
    a124:	bl	6800 <cfsetospeed@plt>
    a128:	b	a138 <XS_POSIX__Termios_setispeed+0x220>
    a12c:	ldr	w1, [sp, #48]
    a130:	ldr	x0, [sp, #88]
    a134:	bl	6fb0 <cfsetispeed@plt>
    a138:	str	w0, [sp, #52]
    a13c:	ldr	x0, [sp, #24]
    a140:	bl	7160 <Perl_sv_newmortal@plt>
    a144:	str	x0, [sp, #96]
    a148:	ldr	w0, [sp, #52]
    a14c:	cmn	w0, #0x1
    a150:	b.eq	a190 <XS_POSIX__Termios_setispeed+0x278>  // b.none
    a154:	ldr	w0, [sp, #52]
    a158:	cmp	w0, #0x0
    a15c:	b.ne	a17c <XS_POSIX__Termios_setispeed+0x264>  // b.any
    a160:	mov	x3, #0xa                   	// #10
    a164:	adrp	x0, 1b000 <_fini+0x1fc>
    a168:	add	x2, x0, #0x188
    a16c:	ldr	x1, [sp, #96]
    a170:	ldr	x0, [sp, #24]
    a174:	bl	6f10 <Perl_sv_setpvn@plt>
    a178:	b	a190 <XS_POSIX__Termios_setispeed+0x278>
    a17c:	ldrsw	x0, [sp, #52]
    a180:	mov	x2, x0
    a184:	ldr	x1, [sp, #96]
    a188:	ldr	x0, [sp, #24]
    a18c:	bl	7120 <Perl_sv_setiv@plt>
    a190:	ldr	x0, [sp, #24]
    a194:	ldr	x1, [x0, #24]
    a198:	ldrsw	x0, [sp, #36]
    a19c:	lsl	x0, x0, #3
    a1a0:	add	x0, x1, x0
    a1a4:	ldr	x1, [sp, #96]
    a1a8:	str	x1, [x0]
    a1ac:	mov	x0, #0x1                   	// #1
    a1b0:	str	x0, [sp, #104]
    a1b4:	ldr	x0, [sp, #24]
    a1b8:	ldr	x1, [x0, #24]
    a1bc:	ldrsw	x2, [sp, #36]
    a1c0:	ldr	x0, [sp, #104]
    a1c4:	add	x0, x2, x0
    a1c8:	lsl	x0, x0, #3
    a1cc:	sub	x0, x0, #0x8
    a1d0:	add	x1, x1, x0
    a1d4:	ldr	x0, [sp, #24]
    a1d8:	str	x1, [x0]
    a1dc:	nop
    a1e0:	ldp	x29, x30, [sp], #112
    a1e4:	ret

000000000000a1e8 <XS_POSIX__Termios_setiflag>:
    a1e8:	stp	x29, x30, [sp, #-96]!
    a1ec:	mov	x29, sp
    a1f0:	str	x0, [sp, #24]
    a1f4:	str	x1, [sp, #16]
    a1f8:	ldr	x0, [sp, #24]
    a1fc:	ldr	x0, [x0]
    a200:	str	x0, [sp, #48]
    a204:	ldr	x0, [sp, #24]
    a208:	bl	739c <S_POPMARK>
    a20c:	str	w0, [sp, #32]
    a210:	ldr	x0, [sp, #24]
    a214:	ldr	x1, [x0, #24]
    a218:	ldr	w0, [sp, #32]
    a21c:	add	w2, w0, #0x1
    a220:	str	w2, [sp, #32]
    a224:	sxtw	x0, w0
    a228:	lsl	x0, x0, #3
    a22c:	add	x0, x1, x0
    a230:	str	x0, [sp, #56]
    a234:	ldr	x1, [sp, #48]
    a238:	ldr	x0, [sp, #56]
    a23c:	sub	x0, x1, x0
    a240:	asr	x0, x0, #3
    a244:	str	w0, [sp, #36]
    a248:	ldr	x0, [sp, #16]
    a24c:	ldr	x0, [x0]
    a250:	str	x0, [sp, #64]
    a254:	ldr	x0, [sp, #64]
    a258:	ldr	w0, [x0, #40]
    a25c:	str	w0, [sp, #40]
    a260:	ldr	w0, [sp, #36]
    a264:	cmp	w0, #0x2
    a268:	b.eq	a27c <XS_POSIX__Termios_setiflag+0x94>  // b.none
    a26c:	adrp	x0, 1b000 <_fini+0x1fc>
    a270:	add	x1, x0, #0x2b8
    a274:	ldr	x0, [sp, #16]
    a278:	bl	6b20 <Perl_croak_xs_usage@plt>
    a27c:	ldr	x0, [sp, #24]
    a280:	ldr	x1, [x0, #24]
    a284:	ldrsw	x0, [sp, #32]
    a288:	add	x0, x0, #0x1
    a28c:	lsl	x0, x0, #3
    a290:	add	x0, x1, x0
    a294:	ldr	x0, [x0]
    a298:	ldr	w1, [x0, #12]
    a29c:	mov	w0, #0x100                 	// #256
    a2a0:	movk	w0, #0x20, lsl #16
    a2a4:	and	w0, w1, w0
    a2a8:	cmp	w0, #0x100
    a2ac:	b.ne	a2d8 <XS_POSIX__Termios_setiflag+0xf0>  // b.any
    a2b0:	ldr	x0, [sp, #24]
    a2b4:	ldr	x1, [x0, #24]
    a2b8:	ldrsw	x0, [sp, #32]
    a2bc:	add	x0, x0, #0x1
    a2c0:	lsl	x0, x0, #3
    a2c4:	add	x0, x1, x0
    a2c8:	ldr	x0, [x0]
    a2cc:	ldr	x0, [x0]
    a2d0:	ldr	x0, [x0, #32]
    a2d4:	b	a304 <XS_POSIX__Termios_setiflag+0x11c>
    a2d8:	ldr	x0, [sp, #24]
    a2dc:	ldr	x1, [x0, #24]
    a2e0:	ldrsw	x0, [sp, #32]
    a2e4:	add	x0, x0, #0x1
    a2e8:	lsl	x0, x0, #3
    a2ec:	add	x0, x1, x0
    a2f0:	ldr	x0, [x0]
    a2f4:	mov	w2, #0x2                   	// #2
    a2f8:	mov	x1, x0
    a2fc:	ldr	x0, [sp, #24]
    a300:	bl	6560 <Perl_sv_2iv_flags@plt>
    a304:	str	w0, [sp, #44]
    a308:	ldr	x0, [sp, #24]
    a30c:	ldr	x1, [x0, #24]
    a310:	ldrsw	x0, [sp, #32]
    a314:	lsl	x0, x0, #3
    a318:	add	x0, x1, x0
    a31c:	ldr	x0, [x0]
    a320:	str	x0, [sp, #72]
    a324:	ldr	x0, [sp, #72]
    a328:	ldr	w0, [x0, #12]
    a32c:	and	w0, w0, #0x800
    a330:	cmp	w0, #0x0
    a334:	b.eq	a3f4 <XS_POSIX__Termios_setiflag+0x20c>  // b.none
    a338:	adrp	x0, 1b000 <_fini+0x1fc>
    a33c:	add	x2, x0, #0x1b0
    a340:	ldr	x1, [sp, #72]
    a344:	ldr	x0, [sp, #24]
    a348:	bl	6750 <Perl_sv_derived_from@plt>
    a34c:	and	w0, w0, #0xff
    a350:	cmp	w0, #0x0
    a354:	b.eq	a3f4 <XS_POSIX__Termios_setiflag+0x20c>  // b.none
    a358:	ldr	x0, [sp, #72]
    a35c:	ldr	x0, [x0, #16]
    a360:	ldr	w1, [x0, #12]
    a364:	mov	w0, #0x400                 	// #1024
    a368:	movk	w0, #0x20, lsl #16
    a36c:	and	w0, w1, w0
    a370:	cmp	w0, #0x400
    a374:	b.ne	a388 <XS_POSIX__Termios_setiflag+0x1a0>  // b.any
    a378:	ldr	x0, [sp, #72]
    a37c:	ldr	x0, [x0, #16]
    a380:	ldr	x0, [x0, #16]
    a384:	b	a3a4 <XS_POSIX__Termios_setiflag+0x1bc>
    a388:	ldr	x0, [sp, #72]
    a38c:	ldr	x0, [x0, #16]
    a390:	mov	w3, #0x2                   	// #2
    a394:	mov	x2, #0x0                   	// #0
    a398:	mov	x1, x0
    a39c:	ldr	x0, [sp, #24]
    a3a0:	bl	69b0 <Perl_sv_2pv_flags@plt>
    a3a4:	str	x0, [sp, #80]
    a3a8:	ldr	w0, [sp, #40]
    a3ac:	cmp	w0, #0x3
    a3b0:	b.eq	a458 <XS_POSIX__Termios_setiflag+0x270>  // b.none
    a3b4:	ldr	w0, [sp, #40]
    a3b8:	cmp	w0, #0x3
    a3bc:	b.gt	a468 <XS_POSIX__Termios_setiflag+0x280>
    a3c0:	ldr	w0, [sp, #40]
    a3c4:	cmp	w0, #0x2
    a3c8:	b.eq	a448 <XS_POSIX__Termios_setiflag+0x260>  // b.none
    a3cc:	ldr	w0, [sp, #40]
    a3d0:	cmp	w0, #0x2
    a3d4:	b.gt	a468 <XS_POSIX__Termios_setiflag+0x280>
    a3d8:	ldr	w0, [sp, #40]
    a3dc:	cmp	w0, #0x0
    a3e0:	b.eq	a428 <XS_POSIX__Termios_setiflag+0x240>  // b.none
    a3e4:	ldr	w0, [sp, #40]
    a3e8:	cmp	w0, #0x1
    a3ec:	b.eq	a438 <XS_POSIX__Termios_setiflag+0x250>  // b.none
    a3f0:	b	a468 <XS_POSIX__Termios_setiflag+0x280>
    a3f4:	ldr	x1, [sp, #16]
    a3f8:	ldr	x0, [sp, #24]
    a3fc:	bl	7340 <S_CvGV>
    a400:	ldr	x0, [x0]
    a404:	ldr	x0, [x0, #32]
    a408:	add	x1, x0, #0x8
    a40c:	adrp	x0, 1b000 <_fini+0x1fc>
    a410:	add	x3, x0, #0x1b0
    a414:	adrp	x0, 1b000 <_fini+0x1fc>
    a418:	add	x2, x0, #0x1d8
    a41c:	adrp	x0, 1b000 <_fini+0x1fc>
    a420:	add	x0, x0, #0x140
    a424:	bl	6cd0 <Perl_croak_nocontext@plt>
    a428:	ldr	x0, [sp, #80]
    a42c:	ldr	w1, [sp, #44]
    a430:	str	w1, [x0]
    a434:	b	a468 <XS_POSIX__Termios_setiflag+0x280>
    a438:	ldr	x0, [sp, #80]
    a43c:	ldr	w1, [sp, #44]
    a440:	str	w1, [x0, #4]
    a444:	b	a468 <XS_POSIX__Termios_setiflag+0x280>
    a448:	ldr	x0, [sp, #80]
    a44c:	ldr	w1, [sp, #44]
    a450:	str	w1, [x0, #8]
    a454:	b	a468 <XS_POSIX__Termios_setiflag+0x280>
    a458:	ldr	x0, [sp, #80]
    a45c:	ldr	w1, [sp, #44]
    a460:	str	w1, [x0, #12]
    a464:	nop
    a468:	str	xzr, [sp, #88]
    a46c:	ldr	x0, [sp, #24]
    a470:	ldr	x1, [x0, #24]
    a474:	ldrsw	x2, [sp, #32]
    a478:	ldr	x0, [sp, #88]
    a47c:	add	x0, x2, x0
    a480:	lsl	x0, x0, #3
    a484:	sub	x0, x0, #0x8
    a488:	add	x1, x1, x0
    a48c:	ldr	x0, [sp, #24]
    a490:	str	x1, [x0]
    a494:	nop
    a498:	ldp	x29, x30, [sp], #96
    a49c:	ret

000000000000a4a0 <XS_POSIX__Termios_setcc>:
    a4a0:	stp	x29, x30, [sp, #-96]!
    a4a4:	mov	x29, sp
    a4a8:	str	x0, [sp, #24]
    a4ac:	str	x1, [sp, #16]
    a4b0:	ldr	x0, [sp, #24]
    a4b4:	ldr	x0, [x0]
    a4b8:	str	x0, [sp, #56]
    a4bc:	ldr	x0, [sp, #24]
    a4c0:	bl	739c <S_POPMARK>
    a4c4:	str	w0, [sp, #44]
    a4c8:	ldr	x0, [sp, #24]
    a4cc:	ldr	x1, [x0, #24]
    a4d0:	ldr	w0, [sp, #44]
    a4d4:	add	w2, w0, #0x1
    a4d8:	str	w2, [sp, #44]
    a4dc:	sxtw	x0, w0
    a4e0:	lsl	x0, x0, #3
    a4e4:	add	x0, x1, x0
    a4e8:	str	x0, [sp, #64]
    a4ec:	ldr	x1, [sp, #56]
    a4f0:	ldr	x0, [sp, #64]
    a4f4:	sub	x0, x1, x0
    a4f8:	asr	x0, x0, #3
    a4fc:	str	w0, [sp, #48]
    a500:	ldr	w0, [sp, #48]
    a504:	cmp	w0, #0x3
    a508:	b.eq	a51c <XS_POSIX__Termios_setcc+0x7c>  // b.none
    a50c:	adrp	x0, 1b000 <_fini+0x1fc>
    a510:	add	x1, x0, #0x2d0
    a514:	ldr	x0, [sp, #16]
    a518:	bl	6b20 <Perl_croak_xs_usage@plt>
    a51c:	ldr	x0, [sp, #24]
    a520:	ldr	x1, [x0, #24]
    a524:	ldrsw	x0, [sp, #44]
    a528:	add	x0, x0, #0x1
    a52c:	lsl	x0, x0, #3
    a530:	add	x0, x1, x0
    a534:	ldr	x0, [x0]
    a538:	ldr	w1, [x0, #12]
    a53c:	mov	w0, #0x100                 	// #256
    a540:	movk	w0, #0x8020, lsl #16
    a544:	and	w1, w1, w0
    a548:	mov	w0, #0x100                 	// #256
    a54c:	movk	w0, #0x8000, lsl #16
    a550:	cmp	w1, w0
    a554:	b.ne	a580 <XS_POSIX__Termios_setcc+0xe0>  // b.any
    a558:	ldr	x0, [sp, #24]
    a55c:	ldr	x1, [x0, #24]
    a560:	ldrsw	x0, [sp, #44]
    a564:	add	x0, x0, #0x1
    a568:	lsl	x0, x0, #3
    a56c:	add	x0, x1, x0
    a570:	ldr	x0, [x0]
    a574:	ldr	x0, [x0]
    a578:	ldr	x0, [x0, #32]
    a57c:	b	a5ac <XS_POSIX__Termios_setcc+0x10c>
    a580:	ldr	x0, [sp, #24]
    a584:	ldr	x1, [x0, #24]
    a588:	ldrsw	x0, [sp, #44]
    a58c:	add	x0, x0, #0x1
    a590:	lsl	x0, x0, #3
    a594:	add	x0, x1, x0
    a598:	ldr	x0, [x0]
    a59c:	mov	w2, #0x2                   	// #2
    a5a0:	mov	x1, x0
    a5a4:	ldr	x0, [sp, #24]
    a5a8:	bl	6650 <Perl_sv_2uv_flags@plt>
    a5ac:	str	w0, [sp, #52]
    a5b0:	ldr	x0, [sp, #24]
    a5b4:	ldr	x1, [x0, #24]
    a5b8:	ldrsw	x0, [sp, #44]
    a5bc:	add	x0, x0, #0x2
    a5c0:	lsl	x0, x0, #3
    a5c4:	add	x0, x1, x0
    a5c8:	ldr	x0, [x0]
    a5cc:	ldr	w1, [x0, #12]
    a5d0:	mov	w0, #0x100                 	// #256
    a5d4:	movk	w0, #0x20, lsl #16
    a5d8:	and	w0, w1, w0
    a5dc:	cmp	w0, #0x100
    a5e0:	b.ne	a610 <XS_POSIX__Termios_setcc+0x170>  // b.any
    a5e4:	ldr	x0, [sp, #24]
    a5e8:	ldr	x1, [x0, #24]
    a5ec:	ldrsw	x0, [sp, #44]
    a5f0:	add	x0, x0, #0x2
    a5f4:	lsl	x0, x0, #3
    a5f8:	add	x0, x1, x0
    a5fc:	ldr	x0, [x0]
    a600:	ldr	x0, [x0]
    a604:	ldr	x0, [x0, #32]
    a608:	and	w0, w0, #0xff
    a60c:	b	a640 <XS_POSIX__Termios_setcc+0x1a0>
    a610:	ldr	x0, [sp, #24]
    a614:	ldr	x1, [x0, #24]
    a618:	ldrsw	x0, [sp, #44]
    a61c:	add	x0, x0, #0x2
    a620:	lsl	x0, x0, #3
    a624:	add	x0, x1, x0
    a628:	ldr	x0, [x0]
    a62c:	mov	w2, #0x2                   	// #2
    a630:	mov	x1, x0
    a634:	ldr	x0, [sp, #24]
    a638:	bl	6560 <Perl_sv_2iv_flags@plt>
    a63c:	and	w0, w0, #0xff
    a640:	strb	w0, [sp, #43]
    a644:	ldr	x0, [sp, #24]
    a648:	ldr	x1, [x0, #24]
    a64c:	ldrsw	x0, [sp, #44]
    a650:	lsl	x0, x0, #3
    a654:	add	x0, x1, x0
    a658:	ldr	x0, [x0]
    a65c:	str	x0, [sp, #72]
    a660:	ldr	x0, [sp, #72]
    a664:	ldr	w0, [x0, #12]
    a668:	and	w0, w0, #0x800
    a66c:	cmp	w0, #0x0
    a670:	b.eq	a6f4 <XS_POSIX__Termios_setcc+0x254>  // b.none
    a674:	adrp	x0, 1b000 <_fini+0x1fc>
    a678:	add	x2, x0, #0x1b0
    a67c:	ldr	x1, [sp, #72]
    a680:	ldr	x0, [sp, #24]
    a684:	bl	6750 <Perl_sv_derived_from@plt>
    a688:	and	w0, w0, #0xff
    a68c:	cmp	w0, #0x0
    a690:	b.eq	a6f4 <XS_POSIX__Termios_setcc+0x254>  // b.none
    a694:	ldr	x0, [sp, #72]
    a698:	ldr	x0, [x0, #16]
    a69c:	ldr	w1, [x0, #12]
    a6a0:	mov	w0, #0x400                 	// #1024
    a6a4:	movk	w0, #0x20, lsl #16
    a6a8:	and	w0, w1, w0
    a6ac:	cmp	w0, #0x400
    a6b0:	b.ne	a6c4 <XS_POSIX__Termios_setcc+0x224>  // b.any
    a6b4:	ldr	x0, [sp, #72]
    a6b8:	ldr	x0, [x0, #16]
    a6bc:	ldr	x0, [x0, #16]
    a6c0:	b	a6e0 <XS_POSIX__Termios_setcc+0x240>
    a6c4:	ldr	x0, [sp, #72]
    a6c8:	ldr	x0, [x0, #16]
    a6cc:	mov	w3, #0x2                   	// #2
    a6d0:	mov	x2, #0x0                   	// #0
    a6d4:	mov	x1, x0
    a6d8:	ldr	x0, [sp, #24]
    a6dc:	bl	69b0 <Perl_sv_2pv_flags@plt>
    a6e0:	str	x0, [sp, #80]
    a6e4:	ldr	w0, [sp, #52]
    a6e8:	cmp	w0, #0x1f
    a6ec:	b.hi	a718 <XS_POSIX__Termios_setcc+0x278>  // b.pmore
    a6f0:	b	a724 <XS_POSIX__Termios_setcc+0x284>
    a6f4:	adrp	x0, 1b000 <_fini+0x1fc>
    a6f8:	add	x3, x0, #0x1b0
    a6fc:	adrp	x0, 1b000 <_fini+0x1fc>
    a700:	add	x2, x0, #0x1d8
    a704:	adrp	x0, 1b000 <_fini+0x1fc>
    a708:	add	x1, x0, #0x2e8
    a70c:	adrp	x0, 1b000 <_fini+0x1fc>
    a710:	add	x0, x0, #0x140
    a714:	bl	6cd0 <Perl_croak_nocontext@plt>
    a718:	adrp	x0, 1b000 <_fini+0x1fc>
    a71c:	add	x0, x0, #0x300
    a720:	bl	6cd0 <Perl_croak_nocontext@plt>
    a724:	ldr	x1, [sp, #80]
    a728:	ldr	w0, [sp, #52]
    a72c:	add	x0, x1, x0
    a730:	ldrb	w1, [sp, #43]
    a734:	strb	w1, [x0, #17]
    a738:	str	xzr, [sp, #88]
    a73c:	ldr	x0, [sp, #24]
    a740:	ldr	x1, [x0, #24]
    a744:	ldrsw	x2, [sp, #44]
    a748:	ldr	x0, [sp, #88]
    a74c:	add	x0, x2, x0
    a750:	lsl	x0, x0, #3
    a754:	sub	x0, x0, #0x8
    a758:	add	x1, x1, x0
    a75c:	ldr	x0, [sp, #24]
    a760:	str	x1, [x0]
    a764:	nop
    a768:	ldp	x29, x30, [sp], #96
    a76c:	ret

000000000000a770 <XS_POSIX_constant>:
    a770:	sub	sp, sp, #0x70
    a774:	stp	x29, x30, [sp, #16]
    a778:	add	x29, sp, #0x10
    a77c:	str	x0, [sp, #40]
    a780:	str	x1, [sp, #32]
    a784:	ldr	x0, [sp, #40]
    a788:	ldr	x0, [x0]
    a78c:	str	x0, [sp, #72]
    a790:	ldr	x0, [sp, #40]
    a794:	bl	739c <S_POPMARK>
    a798:	str	w0, [sp, #56]
    a79c:	ldr	x0, [sp, #40]
    a7a0:	ldr	x1, [x0, #24]
    a7a4:	ldr	w0, [sp, #56]
    a7a8:	add	w2, w0, #0x1
    a7ac:	str	w2, [sp, #56]
    a7b0:	sxtw	x0, w0
    a7b4:	lsl	x0, x0, #3
    a7b8:	add	x0, x1, x0
    a7bc:	str	x0, [sp, #80]
    a7c0:	ldr	x1, [sp, #72]
    a7c4:	ldr	x0, [sp, #80]
    a7c8:	sub	x0, x1, x0
    a7cc:	asr	x0, x0, #3
    a7d0:	str	w0, [sp, #60]
    a7d4:	ldr	w0, [sp, #60]
    a7d8:	cmp	w0, #0x1
    a7dc:	b.eq	a7f0 <XS_POSIX_constant+0x80>  // b.none
    a7e0:	adrp	x0, 1b000 <_fini+0x1fc>
    a7e4:	add	x1, x0, #0x318
    a7e8:	ldr	x0, [sp, #32]
    a7ec:	bl	6b20 <Perl_croak_xs_usage@plt>
    a7f0:	ldrsw	x0, [sp, #60]
    a7f4:	lsl	x0, x0, #3
    a7f8:	neg	x0, x0
    a7fc:	ldr	x1, [sp, #72]
    a800:	add	x0, x1, x0
    a804:	str	x0, [sp, #72]
    a808:	ldr	x0, [sp, #40]
    a80c:	ldr	x1, [x0, #24]
    a810:	ldrsw	x0, [sp, #56]
    a814:	lsl	x0, x0, #3
    a818:	add	x0, x1, x0
    a81c:	ldr	x0, [x0]
    a820:	str	x0, [sp, #64]
    a824:	mov	x2, #0x0                   	// #0
    a828:	mov	w1, #0x0                   	// #0
    a82c:	ldr	x0, [sp, #40]
    a830:	bl	7170 <Perl_caller_cx@plt>
    a834:	str	x0, [sp, #88]
    a838:	ldr	x0, [sp, #88]
    a83c:	cmp	x0, #0x0
    a840:	b.eq	a850 <XS_POSIX_constant+0xe0>  // b.none
    a844:	ldr	x0, [sp, #88]
    a848:	ldr	x0, [x0, #16]
    a84c:	b	a858 <XS_POSIX_constant+0xe8>
    a850:	ldr	x0, [sp, #40]
    a854:	ldr	x0, [x0, #224]
    a858:	str	x0, [sp, #96]
    a85c:	ldr	x0, [sp, #40]
    a860:	bl	7ff8 <get_missing_hash>
    a864:	str	x0, [sp, #104]
    a868:	str	wzr, [sp]
    a86c:	mov	x7, #0x0                   	// #0
    a870:	mov	w6, #0x8                   	// #8
    a874:	mov	w5, #0x0                   	// #0
    a878:	mov	x4, #0x0                   	// #0
    a87c:	mov	x3, #0x0                   	// #0
    a880:	ldr	x2, [sp, #64]
    a884:	ldr	x1, [sp, #104]
    a888:	ldr	x0, [sp, #40]
    a88c:	bl	6db0 <Perl_hv_common@plt>
    a890:	cmp	x0, #0x0
    a894:	b.eq	a8cc <XS_POSIX_constant+0x15c>  // b.none
    a898:	ldr	x0, [sp, #96]
    a89c:	ldr	x1, [x0, #48]
    a8a0:	ldr	x0, [sp, #96]
    a8a4:	ldr	w0, [x0, #36]
    a8a8:	mov	w0, w0
    a8ac:	mov	x3, x0
    a8b0:	mov	x2, x1
    a8b4:	ldr	x1, [sp, #64]
    a8b8:	adrp	x0, 1b000 <_fini+0x1fc>
    a8bc:	add	x0, x0, #0x320
    a8c0:	bl	6f80 <Perl_newSVpvf_nocontext@plt>
    a8c4:	str	x0, [sp, #64]
    a8c8:	b	a8fc <XS_POSIX_constant+0x18c>
    a8cc:	ldr	x0, [sp, #96]
    a8d0:	ldr	x1, [x0, #48]
    a8d4:	ldr	x0, [sp, #96]
    a8d8:	ldr	w0, [x0, #36]
    a8dc:	mov	w0, w0
    a8e0:	mov	x3, x0
    a8e4:	mov	x2, x1
    a8e8:	ldr	x1, [sp, #64]
    a8ec:	adrp	x0, 1b000 <_fini+0x1fc>
    a8f0:	add	x0, x0, #0x368
    a8f4:	bl	6f80 <Perl_newSVpvf_nocontext@plt>
    a8f8:	str	x0, [sp, #64]
    a8fc:	ldr	x1, [sp, #64]
    a900:	ldr	x0, [sp, #40]
    a904:	bl	6d60 <Perl_sv_2mortal@plt>
    a908:	mov	x1, x0
    a90c:	ldr	x0, [sp, #40]
    a910:	bl	6e30 <Perl_croak_sv@plt>

000000000000a914 <XS_POSIX_WEXITSTATUS>:
    a914:	stp	x29, x30, [sp, #-112]!
    a918:	mov	x29, sp
    a91c:	str	x0, [sp, #24]
    a920:	str	x1, [sp, #16]
    a924:	ldr	x0, [sp, #24]
    a928:	ldr	x0, [x0]
    a92c:	str	x0, [sp, #64]
    a930:	ldr	x0, [sp, #24]
    a934:	bl	739c <S_POPMARK>
    a938:	str	w0, [sp, #48]
    a93c:	ldr	x0, [sp, #24]
    a940:	ldr	x1, [x0, #24]
    a944:	ldr	w0, [sp, #48]
    a948:	add	w2, w0, #0x1
    a94c:	str	w2, [sp, #48]
    a950:	sxtw	x0, w0
    a954:	lsl	x0, x0, #3
    a958:	add	x0, x1, x0
    a95c:	str	x0, [sp, #72]
    a960:	ldr	x1, [sp, #64]
    a964:	ldr	x0, [sp, #72]
    a968:	sub	x0, x1, x0
    a96c:	asr	x0, x0, #3
    a970:	str	w0, [sp, #52]
    a974:	ldr	x0, [sp, #16]
    a978:	ldr	x0, [x0]
    a97c:	str	x0, [sp, #80]
    a980:	ldr	x0, [sp, #80]
    a984:	ldr	w0, [x0, #40]
    a988:	str	w0, [sp, #56]
    a98c:	ldr	w0, [sp, #52]
    a990:	cmp	w0, #0x1
    a994:	b.eq	a9a8 <XS_POSIX_WEXITSTATUS+0x94>  // b.none
    a998:	adrp	x0, 1b000 <_fini+0x1fc>
    a99c:	add	x1, x0, #0x398
    a9a0:	ldr	x0, [sp, #16]
    a9a4:	bl	6b20 <Perl_croak_xs_usage@plt>
    a9a8:	ldr	x0, [sp, #24]
    a9ac:	ldr	x1, [x0, #24]
    a9b0:	ldrsw	x0, [sp, #48]
    a9b4:	lsl	x0, x0, #3
    a9b8:	add	x0, x1, x0
    a9bc:	ldr	x0, [x0]
    a9c0:	ldr	w1, [x0, #12]
    a9c4:	mov	w0, #0x100                 	// #256
    a9c8:	movk	w0, #0x20, lsl #16
    a9cc:	and	w0, w1, w0
    a9d0:	cmp	w0, #0x100
    a9d4:	b.ne	a9fc <XS_POSIX_WEXITSTATUS+0xe8>  // b.any
    a9d8:	ldr	x0, [sp, #24]
    a9dc:	ldr	x1, [x0, #24]
    a9e0:	ldrsw	x0, [sp, #48]
    a9e4:	lsl	x0, x0, #3
    a9e8:	add	x0, x1, x0
    a9ec:	ldr	x0, [x0]
    a9f0:	ldr	x0, [x0]
    a9f4:	ldr	x0, [x0, #32]
    a9f8:	b	aa24 <XS_POSIX_WEXITSTATUS+0x110>
    a9fc:	ldr	x0, [sp, #24]
    aa00:	ldr	x1, [x0, #24]
    aa04:	ldrsw	x0, [sp, #48]
    aa08:	lsl	x0, x0, #3
    aa0c:	add	x0, x1, x0
    aa10:	ldr	x0, [x0]
    aa14:	mov	w2, #0x2                   	// #2
    aa18:	mov	x1, x0
    aa1c:	ldr	x0, [sp, #24]
    aa20:	bl	6560 <Perl_sv_2iv_flags@plt>
    aa24:	str	w0, [sp, #60]
    aa28:	ldr	x0, [sp, #24]
    aa2c:	ldr	x0, [x0, #8]
    aa30:	ldrb	w0, [x0, #35]
    aa34:	and	w0, w0, #0x4
    aa38:	cmp	w0, #0x0
    aa3c:	b.eq	aa64 <XS_POSIX_WEXITSTATUS+0x150>  // b.none
    aa40:	ldr	x0, [sp, #24]
    aa44:	ldr	x1, [x0, #16]
    aa48:	ldr	x0, [sp, #24]
    aa4c:	ldr	x0, [x0, #8]
    aa50:	ldr	x0, [x0, #24]
    aa54:	lsl	x0, x0, #3
    aa58:	add	x0, x1, x0
    aa5c:	ldr	x0, [x0]
    aa60:	b	aa6c <XS_POSIX_WEXITSTATUS+0x158>
    aa64:	ldr	x0, [sp, #24]
    aa68:	bl	7160 <Perl_sv_newmortal@plt>
    aa6c:	str	x0, [sp, #88]
    aa70:	ldr	w0, [sp, #56]
    aa74:	cmp	w0, #0x5
    aa78:	b.eq	ab80 <XS_POSIX_WEXITSTATUS+0x26c>  // b.none
    aa7c:	ldr	w0, [sp, #56]
    aa80:	cmp	w0, #0x5
    aa84:	b.gt	ab90 <XS_POSIX_WEXITSTATUS+0x27c>
    aa88:	ldr	w0, [sp, #56]
    aa8c:	cmp	w0, #0x4
    aa90:	b.eq	ab6c <XS_POSIX_WEXITSTATUS+0x258>  // b.none
    aa94:	ldr	w0, [sp, #56]
    aa98:	cmp	w0, #0x4
    aa9c:	b.gt	ab90 <XS_POSIX_WEXITSTATUS+0x27c>
    aaa0:	ldr	w0, [sp, #56]
    aaa4:	cmp	w0, #0x3
    aaa8:	b.eq	ab50 <XS_POSIX_WEXITSTATUS+0x23c>  // b.none
    aaac:	ldr	w0, [sp, #56]
    aab0:	cmp	w0, #0x3
    aab4:	b.gt	ab90 <XS_POSIX_WEXITSTATUS+0x27c>
    aab8:	ldr	w0, [sp, #56]
    aabc:	cmp	w0, #0x2
    aac0:	b.eq	ab1c <XS_POSIX_WEXITSTATUS+0x208>  // b.none
    aac4:	ldr	w0, [sp, #56]
    aac8:	cmp	w0, #0x2
    aacc:	b.gt	ab90 <XS_POSIX_WEXITSTATUS+0x27c>
    aad0:	ldr	w0, [sp, #56]
    aad4:	cmp	w0, #0x0
    aad8:	b.eq	aaec <XS_POSIX_WEXITSTATUS+0x1d8>  // b.none
    aadc:	ldr	w0, [sp, #56]
    aae0:	cmp	w0, #0x1
    aae4:	b.eq	ab00 <XS_POSIX_WEXITSTATUS+0x1ec>  // b.none
    aae8:	b	ab90 <XS_POSIX_WEXITSTATUS+0x27c>
    aaec:	ldr	w0, [sp, #60]
    aaf0:	asr	w0, w0, #8
    aaf4:	and	w0, w0, #0xff
    aaf8:	str	w0, [sp, #44]
    aafc:	b	aba0 <XS_POSIX_WEXITSTATUS+0x28c>
    ab00:	ldr	w0, [sp, #60]
    ab04:	and	w0, w0, #0x7f
    ab08:	cmp	w0, #0x0
    ab0c:	cset	w0, eq  // eq = none
    ab10:	and	w0, w0, #0xff
    ab14:	str	w0, [sp, #44]
    ab18:	b	aba0 <XS_POSIX_WEXITSTATUS+0x28c>
    ab1c:	ldr	w0, [sp, #60]
    ab20:	sxtb	w0, w0
    ab24:	and	w0, w0, #0x7f
    ab28:	sxtb	w0, w0
    ab2c:	add	w0, w0, #0x1
    ab30:	sxtb	w0, w0
    ab34:	asr	w0, w0, #1
    ab38:	sxtb	w0, w0
    ab3c:	cmp	w0, #0x0
    ab40:	cset	w0, gt
    ab44:	and	w0, w0, #0xff
    ab48:	str	w0, [sp, #44]
    ab4c:	b	aba0 <XS_POSIX_WEXITSTATUS+0x28c>
    ab50:	ldr	w0, [sp, #60]
    ab54:	and	w0, w0, #0xff
    ab58:	cmp	w0, #0x7f
    ab5c:	cset	w0, eq  // eq = none
    ab60:	and	w0, w0, #0xff
    ab64:	str	w0, [sp, #44]
    ab68:	b	aba0 <XS_POSIX_WEXITSTATUS+0x28c>
    ab6c:	ldr	w0, [sp, #60]
    ab70:	asr	w0, w0, #8
    ab74:	and	w0, w0, #0xff
    ab78:	str	w0, [sp, #44]
    ab7c:	b	aba0 <XS_POSIX_WEXITSTATUS+0x28c>
    ab80:	ldr	w0, [sp, #60]
    ab84:	and	w0, w0, #0x7f
    ab88:	str	w0, [sp, #44]
    ab8c:	b	aba0 <XS_POSIX_WEXITSTATUS+0x28c>
    ab90:	ldr	w1, [sp, #56]
    ab94:	adrp	x0, 1b000 <_fini+0x1fc>
    ab98:	add	x0, x0, #0x3a0
    ab9c:	bl	6cd0 <Perl_croak_nocontext@plt>
    aba0:	ldr	x0, [sp, #24]
    aba4:	ldr	x1, [x0, #24]
    aba8:	ldrsw	x0, [sp, #48]
    abac:	lsl	x0, x0, #3
    abb0:	sub	x0, x0, #0x8
    abb4:	add	x0, x1, x0
    abb8:	str	x0, [sp, #64]
    abbc:	ldrsw	x0, [sp, #44]
    abc0:	str	x0, [sp, #96]
    abc4:	ldr	x0, [sp, #88]
    abc8:	ldr	w1, [x0, #12]
    abcc:	mov	w0, #0x8ff                 	// #2303
    abd0:	movk	w0, #0x9981, lsl #16
    abd4:	and	w0, w1, w0
    abd8:	cmp	w0, #0x1
    abdc:	cset	w0, eq  // eq = none
    abe0:	and	w0, w0, #0xff
    abe4:	mov	w1, w0
    abe8:	ldr	x0, [sp, #24]
    abec:	ldrb	w0, [x0, #185]
    abf0:	eor	w0, w0, #0x1
    abf4:	and	w0, w0, #0xff
    abf8:	and	w0, w1, w0
    abfc:	cmp	w0, #0x0
    ac00:	cset	w0, ne  // ne = any
    ac04:	and	w0, w0, #0xff
    ac08:	and	x0, x0, #0xff
    ac0c:	cmp	x0, #0x0
    ac10:	b.eq	ac3c <XS_POSIX_WEXITSTATUS+0x328>  // b.none
    ac14:	ldr	x0, [sp, #88]
    ac18:	ldr	w1, [x0, #12]
    ac1c:	mov	w0, #0x1100                	// #4352
    ac20:	orr	w1, w1, w0
    ac24:	ldr	x0, [sp, #88]
    ac28:	str	w1, [x0, #12]
    ac2c:	ldr	x0, [sp, #88]
    ac30:	ldr	x1, [sp, #96]
    ac34:	str	x1, [x0, #16]
    ac38:	b	ac4c <XS_POSIX_WEXITSTATUS+0x338>
    ac3c:	ldr	x2, [sp, #96]
    ac40:	ldr	x1, [sp, #88]
    ac44:	ldr	x0, [sp, #24]
    ac48:	bl	6880 <Perl_sv_setiv_mg@plt>
    ac4c:	ldr	x0, [sp, #64]
    ac50:	add	x0, x0, #0x8
    ac54:	str	x0, [sp, #64]
    ac58:	ldr	x0, [sp, #64]
    ac5c:	ldr	x1, [sp, #88]
    ac60:	str	x1, [x0]
    ac64:	mov	x0, #0x1                   	// #1
    ac68:	str	x0, [sp, #104]
    ac6c:	ldr	x0, [sp, #24]
    ac70:	ldr	x1, [x0, #24]
    ac74:	ldrsw	x2, [sp, #48]
    ac78:	ldr	x0, [sp, #104]
    ac7c:	add	x0, x2, x0
    ac80:	lsl	x0, x0, #3
    ac84:	sub	x0, x0, #0x8
    ac88:	add	x1, x1, x0
    ac8c:	ldr	x0, [sp, #24]
    ac90:	str	x1, [x0]
    ac94:	nop
    ac98:	ldp	x29, x30, [sp], #112
    ac9c:	ret

000000000000aca0 <XS_POSIX_open>:
    aca0:	stp	x29, x30, [sp, #-96]!
    aca4:	mov	x29, sp
    aca8:	str	x0, [sp, #24]
    acac:	str	x1, [sp, #16]
    acb0:	ldr	x0, [sp, #24]
    acb4:	ldr	x0, [x0]
    acb8:	str	x0, [sp, #56]
    acbc:	ldr	x0, [sp, #24]
    acc0:	bl	739c <S_POPMARK>
    acc4:	str	w0, [sp, #44]
    acc8:	ldr	x0, [sp, #24]
    accc:	ldr	x1, [x0, #24]
    acd0:	ldr	w0, [sp, #44]
    acd4:	add	w2, w0, #0x1
    acd8:	str	w2, [sp, #44]
    acdc:	sxtw	x0, w0
    ace0:	lsl	x0, x0, #3
    ace4:	add	x0, x1, x0
    ace8:	str	x0, [sp, #64]
    acec:	ldr	x1, [sp, #56]
    acf0:	ldr	x0, [sp, #64]
    acf4:	sub	x0, x1, x0
    acf8:	asr	x0, x0, #3
    acfc:	str	w0, [sp, #48]
    ad00:	ldr	w0, [sp, #48]
    ad04:	cmp	w0, #0x0
    ad08:	b.le	ad18 <XS_POSIX_open+0x78>
    ad0c:	ldr	w0, [sp, #48]
    ad10:	cmp	w0, #0x3
    ad14:	b.le	ad28 <XS_POSIX_open+0x88>
    ad18:	adrp	x0, 1b000 <_fini+0x1fc>
    ad1c:	add	x1, x0, #0x3c0
    ad20:	ldr	x0, [sp, #16]
    ad24:	bl	6b20 <Perl_croak_xs_usage@plt>
    ad28:	ldr	x0, [sp, #24]
    ad2c:	ldr	x1, [x0, #24]
    ad30:	ldrsw	x0, [sp, #44]
    ad34:	lsl	x0, x0, #3
    ad38:	add	x0, x1, x0
    ad3c:	ldr	x0, [x0]
    ad40:	ldr	w1, [x0, #12]
    ad44:	mov	w0, #0x400                 	// #1024
    ad48:	movk	w0, #0x20, lsl #16
    ad4c:	and	w0, w1, w0
    ad50:	cmp	w0, #0x400
    ad54:	b.ne	ad78 <XS_POSIX_open+0xd8>  // b.any
    ad58:	ldr	x0, [sp, #24]
    ad5c:	ldr	x1, [x0, #24]
    ad60:	ldrsw	x0, [sp, #44]
    ad64:	lsl	x0, x0, #3
    ad68:	add	x0, x1, x0
    ad6c:	ldr	x0, [x0]
    ad70:	ldr	x0, [x0, #16]
    ad74:	b	ada4 <XS_POSIX_open+0x104>
    ad78:	ldr	x0, [sp, #24]
    ad7c:	ldr	x1, [x0, #24]
    ad80:	ldrsw	x0, [sp, #44]
    ad84:	lsl	x0, x0, #3
    ad88:	add	x0, x1, x0
    ad8c:	ldr	x0, [x0]
    ad90:	mov	w3, #0x2                   	// #2
    ad94:	mov	x2, #0x0                   	// #0
    ad98:	mov	x1, x0
    ad9c:	ldr	x0, [sp, #24]
    ada0:	bl	69b0 <Perl_sv_2pv_flags@plt>
    ada4:	str	x0, [sp, #72]
    ada8:	ldr	w0, [sp, #48]
    adac:	cmp	w0, #0x1
    adb0:	b.gt	adbc <XS_POSIX_open+0x11c>
    adb4:	str	wzr, [sp, #36]
    adb8:	b	ae48 <XS_POSIX_open+0x1a8>
    adbc:	ldr	x0, [sp, #24]
    adc0:	ldr	x1, [x0, #24]
    adc4:	ldrsw	x0, [sp, #44]
    adc8:	add	x0, x0, #0x1
    adcc:	lsl	x0, x0, #3
    add0:	add	x0, x1, x0
    add4:	ldr	x0, [x0]
    add8:	ldr	w1, [x0, #12]
    addc:	mov	w0, #0x100                 	// #256
    ade0:	movk	w0, #0x20, lsl #16
    ade4:	and	w0, w1, w0
    ade8:	cmp	w0, #0x100
    adec:	b.ne	ae18 <XS_POSIX_open+0x178>  // b.any
    adf0:	ldr	x0, [sp, #24]
    adf4:	ldr	x1, [x0, #24]
    adf8:	ldrsw	x0, [sp, #44]
    adfc:	add	x0, x0, #0x1
    ae00:	lsl	x0, x0, #3
    ae04:	add	x0, x1, x0
    ae08:	ldr	x0, [x0]
    ae0c:	ldr	x0, [x0]
    ae10:	ldr	x0, [x0, #32]
    ae14:	b	ae44 <XS_POSIX_open+0x1a4>
    ae18:	ldr	x0, [sp, #24]
    ae1c:	ldr	x1, [x0, #24]
    ae20:	ldrsw	x0, [sp, #44]
    ae24:	add	x0, x0, #0x1
    ae28:	lsl	x0, x0, #3
    ae2c:	add	x0, x1, x0
    ae30:	ldr	x0, [x0]
    ae34:	mov	w2, #0x2                   	// #2
    ae38:	mov	x1, x0
    ae3c:	ldr	x0, [sp, #24]
    ae40:	bl	6560 <Perl_sv_2iv_flags@plt>
    ae44:	str	w0, [sp, #36]
    ae48:	ldr	w0, [sp, #48]
    ae4c:	cmp	w0, #0x2
    ae50:	b.gt	ae60 <XS_POSIX_open+0x1c0>
    ae54:	mov	w0, #0x1b6                 	// #438
    ae58:	str	w0, [sp, #40]
    ae5c:	b	aef4 <XS_POSIX_open+0x254>
    ae60:	ldr	x0, [sp, #24]
    ae64:	ldr	x1, [x0, #24]
    ae68:	ldrsw	x0, [sp, #44]
    ae6c:	add	x0, x0, #0x2
    ae70:	lsl	x0, x0, #3
    ae74:	add	x0, x1, x0
    ae78:	ldr	x0, [x0]
    ae7c:	ldr	w1, [x0, #12]
    ae80:	mov	w0, #0x200                 	// #512
    ae84:	movk	w0, #0x20, lsl #16
    ae88:	and	w0, w1, w0
    ae8c:	cmp	w0, #0x200
    ae90:	b.ne	aec0 <XS_POSIX_open+0x220>  // b.any
    ae94:	ldr	x0, [sp, #24]
    ae98:	ldr	x1, [x0, #24]
    ae9c:	ldrsw	x0, [sp, #44]
    aea0:	add	x0, x0, #0x2
    aea4:	lsl	x0, x0, #3
    aea8:	add	x0, x1, x0
    aeac:	ldr	x0, [x0]
    aeb0:	ldr	x0, [x0]
    aeb4:	ldr	d0, [x0, #40]
    aeb8:	fcvtzu	w0, d0
    aebc:	b	aef0 <XS_POSIX_open+0x250>
    aec0:	ldr	x0, [sp, #24]
    aec4:	ldr	x1, [x0, #24]
    aec8:	ldrsw	x0, [sp, #44]
    aecc:	add	x0, x0, #0x2
    aed0:	lsl	x0, x0, #3
    aed4:	add	x0, x1, x0
    aed8:	ldr	x0, [x0]
    aedc:	mov	w2, #0x2                   	// #2
    aee0:	mov	x1, x0
    aee4:	ldr	x0, [sp, #24]
    aee8:	bl	6b80 <Perl_sv_2nv_flags@plt>
    aeec:	fcvtzu	w0, d0
    aef0:	str	w0, [sp, #40]
    aef4:	ldr	w1, [sp, #36]
    aef8:	mov	w0, #0x6c3                 	// #1731
    aefc:	and	w0, w1, w0
    af00:	cmp	w0, #0x0
    af04:	b.eq	af30 <XS_POSIX_open+0x290>  // b.none
    af08:	ldr	x0, [sp, #24]
    af0c:	ldrb	w0, [x0, #184]
    af10:	and	x0, x0, #0xff
    af14:	cmp	x0, #0x0
    af18:	b.eq	af30 <XS_POSIX_open+0x290>  // b.none
    af1c:	adrp	x0, 1b000 <_fini+0x1fc>
    af20:	add	x2, x0, #0x3e8
    af24:	mov	x1, #0x0                   	// #0
    af28:	ldr	x0, [sp, #24]
    af2c:	bl	7000 <Perl_taint_proper@plt>
    af30:	ldr	w2, [sp, #40]
    af34:	ldr	w1, [sp, #36]
    af38:	ldr	x0, [sp, #72]
    af3c:	bl	6ee0 <open64@plt>
    af40:	str	w0, [sp, #52]
    af44:	ldr	x0, [sp, #24]
    af48:	bl	7160 <Perl_sv_newmortal@plt>
    af4c:	str	x0, [sp, #80]
    af50:	ldr	w0, [sp, #52]
    af54:	cmn	w0, #0x1
    af58:	b.eq	af98 <XS_POSIX_open+0x2f8>  // b.none
    af5c:	ldr	w0, [sp, #52]
    af60:	cmp	w0, #0x0
    af64:	b.ne	af84 <XS_POSIX_open+0x2e4>  // b.any
    af68:	mov	x3, #0xa                   	// #10
    af6c:	adrp	x0, 1b000 <_fini+0x1fc>
    af70:	add	x2, x0, #0x188
    af74:	ldr	x1, [sp, #80]
    af78:	ldr	x0, [sp, #24]
    af7c:	bl	6f10 <Perl_sv_setpvn@plt>
    af80:	b	af98 <XS_POSIX_open+0x2f8>
    af84:	ldrsw	x0, [sp, #52]
    af88:	mov	x2, x0
    af8c:	ldr	x1, [sp, #80]
    af90:	ldr	x0, [sp, #24]
    af94:	bl	7120 <Perl_sv_setiv@plt>
    af98:	ldr	x0, [sp, #24]
    af9c:	ldr	x1, [x0, #24]
    afa0:	ldrsw	x0, [sp, #44]
    afa4:	lsl	x0, x0, #3
    afa8:	add	x0, x1, x0
    afac:	ldr	x1, [sp, #80]
    afb0:	str	x1, [x0]
    afb4:	mov	x0, #0x1                   	// #1
    afb8:	str	x0, [sp, #88]
    afbc:	ldr	x0, [sp, #24]
    afc0:	ldr	x1, [x0, #24]
    afc4:	ldrsw	x2, [sp, #44]
    afc8:	ldr	x0, [sp, #88]
    afcc:	add	x0, x2, x0
    afd0:	lsl	x0, x0, #3
    afd4:	sub	x0, x0, #0x8
    afd8:	add	x1, x1, x0
    afdc:	ldr	x0, [sp, #24]
    afe0:	str	x1, [x0]
    afe4:	nop
    afe8:	ldp	x29, x30, [sp], #96
    afec:	ret

000000000000aff0 <XS_POSIX_localeconv>:
    aff0:	stp	x29, x30, [sp, #-176]!
    aff4:	mov	x29, sp
    aff8:	stp	x19, x20, [sp, #16]
    affc:	str	x0, [sp, #40]
    b000:	str	x1, [sp, #32]
    b004:	ldr	x0, [sp, #40]
    b008:	ldr	x0, [x0]
    b00c:	str	x0, [sp, #96]
    b010:	ldr	x0, [sp, #40]
    b014:	bl	739c <S_POPMARK>
    b018:	str	w0, [sp, #64]
    b01c:	ldr	x0, [sp, #40]
    b020:	ldr	x1, [x0, #24]
    b024:	ldr	w0, [sp, #64]
    b028:	add	w2, w0, #0x1
    b02c:	str	w2, [sp, #64]
    b030:	sxtw	x0, w0
    b034:	lsl	x0, x0, #3
    b038:	add	x0, x1, x0
    b03c:	str	x0, [sp, #104]
    b040:	ldr	x1, [sp, #96]
    b044:	ldr	x0, [sp, #104]
    b048:	sub	x0, x1, x0
    b04c:	asr	x0, x0, #3
    b050:	str	w0, [sp, #68]
    b054:	ldr	w0, [sp, #68]
    b058:	cmp	w0, #0x0
    b05c:	b.eq	b070 <XS_POSIX_localeconv+0x80>  // b.none
    b060:	adrp	x0, 1b000 <_fini+0x1fc>
    b064:	add	x1, x0, #0x3f0
    b068:	ldr	x0, [sp, #32]
    b06c:	bl	6b20 <Perl_croak_xs_usage@plt>
    b070:	str	xzr, [sp, #72]
    b074:	mov	w1, #0x4                   	// #4
    b078:	ldr	x0, [sp, #40]
    b07c:	bl	66d0 <Perl__is_cur_LC_category_utf8@plt>
    b080:	strb	w0, [sp, #59]
    b084:	ldr	x0, [sp, #40]
    b088:	ldrb	w0, [x0, #2616]
    b08c:	eor	w0, w0, #0x1
    b090:	and	w0, w0, #0xff
    b094:	cmp	w0, #0x0
    b098:	b.eq	b0c0 <XS_POSIX_localeconv+0xd0>  // b.none
    b09c:	ldr	x0, [sp, #40]
    b0a0:	ldr	w0, [x0, #2612]
    b0a4:	cmp	w0, #0x1
    b0a8:	b.gt	b0c0 <XS_POSIX_localeconv+0xd0>
    b0ac:	ldr	x0, [sp, #40]
    b0b0:	bl	6680 <Perl_set_numeric_underlying@plt>
    b0b4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    b0b8:	ldr	x0, [x0, #4024]
    b0bc:	str	x0, [sp, #72]
    b0c0:	mov	w1, #0x1                   	// #1
    b0c4:	ldr	x0, [sp, #40]
    b0c8:	bl	66d0 <Perl__is_cur_LC_category_utf8@plt>
    b0cc:	strb	w0, [sp, #60]
    b0d0:	mov	w1, #0xc                   	// #12
    b0d4:	ldr	x0, [sp, #40]
    b0d8:	bl	6f40 <Perl_newSV_type@plt>
    b0dc:	str	x0, [sp, #112]
    b0e0:	ldr	x0, [sp, #112]
    b0e4:	str	x0, [sp, #120]
    b0e8:	ldr	x1, [sp, #120]
    b0ec:	ldr	x0, [sp, #40]
    b0f0:	bl	6d60 <Perl_sv_2mortal@plt>
    b0f4:	bl	6810 <localeconv@plt>
    b0f8:	str	x0, [sp, #128]
    b0fc:	ldr	x0, [sp, #128]
    b100:	cmp	x0, #0x0
    b104:	b.eq	b340 <XS_POSIX_localeconv+0x350>  // b.none
    b108:	adrp	x0, 2f000 <__FRAME_END__+0x10580>
    b10c:	add	x0, x0, #0x5d8
    b110:	str	x0, [sp, #80]
    b114:	adrp	x0, 2f000 <__FRAME_END__+0x10580>
    b118:	add	x0, x0, #0x688
    b11c:	str	x0, [sp, #88]
    b120:	ldr	x0, [sp, #128]
    b124:	str	x0, [sp, #136]
    b128:	b	b2a4 <XS_POSIX_localeconv+0x2b4>
    b12c:	ldr	x0, [sp, #80]
    b130:	ldr	x2, [x0]
    b134:	adrp	x0, 1a000 <boot_POSIX+0x1c40>
    b138:	add	x1, x0, #0xe38
    b13c:	mov	x0, x2
    b140:	bl	6c40 <strcmp@plt>
    b144:	cmp	w0, #0x0
    b148:	b.eq	b18c <XS_POSIX_localeconv+0x19c>  // b.none
    b14c:	ldr	x0, [sp, #80]
    b150:	ldr	x2, [x0]
    b154:	adrp	x0, 1a000 <boot_POSIX+0x1c40>
    b158:	add	x1, x0, #0xe48
    b15c:	mov	x0, x2
    b160:	bl	6c40 <strcmp@plt>
    b164:	cmp	w0, #0x0
    b168:	b.eq	b18c <XS_POSIX_localeconv+0x19c>  // b.none
    b16c:	ldr	x0, [sp, #80]
    b170:	ldr	x2, [x0]
    b174:	adrp	x0, 1a000 <boot_POSIX+0x1c40>
    b178:	add	x1, x0, #0xe58
    b17c:	mov	x0, x2
    b180:	bl	6c40 <strcmp@plt>
    b184:	cmp	w0, #0x0
    b188:	b.ne	b1a0 <XS_POSIX_localeconv+0x1b0>  // b.any
    b18c:	ldrb	w0, [sp, #60]
    b190:	cmp	w0, #0x0
    b194:	cset	w0, ne  // ne = any
    b198:	and	w0, w0, #0xff
    b19c:	b	b1b0 <XS_POSIX_localeconv+0x1c0>
    b1a0:	ldrb	w0, [sp, #59]
    b1a4:	cmp	w0, #0x0
    b1a8:	cset	w0, ne  // ne = any
    b1ac:	and	w0, w0, #0xff
    b1b0:	strb	w0, [sp, #62]
    b1b4:	ldr	x0, [sp, #80]
    b1b8:	ldr	x0, [x0, #8]
    b1bc:	ldr	x1, [sp, #136]
    b1c0:	add	x0, x1, x0
    b1c4:	ldr	x0, [x0]
    b1c8:	str	x0, [sp, #144]
    b1cc:	ldr	x0, [sp, #144]
    b1d0:	cmp	x0, #0x0
    b1d4:	b.eq	b298 <XS_POSIX_localeconv+0x2a8>  // b.none
    b1d8:	ldr	x0, [sp, #144]
    b1dc:	ldrb	w0, [x0]
    b1e0:	cmp	w0, #0x0
    b1e4:	b.eq	b298 <XS_POSIX_localeconv+0x2a8>  // b.none
    b1e8:	ldr	x0, [sp, #144]
    b1ec:	bl	65c0 <strlen@plt>
    b1f0:	str	x0, [sp, #152]
    b1f4:	ldrb	w0, [sp, #62]
    b1f8:	cmp	w0, #0x0
    b1fc:	b.eq	b220 <XS_POSIX_localeconv+0x230>  // b.none
    b200:	ldr	x1, [sp, #152]
    b204:	ldr	x0, [sp, #144]
    b208:	bl	76a0 <S_is_utf8_non_invariant_string>
    b20c:	and	w0, w0, #0xff
    b210:	cmp	w0, #0x0
    b214:	b.eq	b220 <XS_POSIX_localeconv+0x230>  // b.none
    b218:	mov	w0, #0x1                   	// #1
    b21c:	b	b224 <XS_POSIX_localeconv+0x234>
    b220:	mov	w0, #0x0                   	// #0
    b224:	strb	w0, [sp, #63]
    b228:	ldrb	w0, [sp, #63]
    b22c:	and	w0, w0, #0x1
    b230:	strb	w0, [sp, #63]
    b234:	ldr	x0, [sp, #80]
    b238:	ldr	x19, [x0]
    b23c:	ldr	x0, [sp, #80]
    b240:	ldr	x0, [x0]
    b244:	bl	65c0 <strlen@plt>
    b248:	mov	w20, w0
    b24c:	ldrb	w0, [sp, #63]
    b250:	cmp	w0, #0x0
    b254:	b.eq	b260 <XS_POSIX_localeconv+0x270>  // b.none
    b258:	mov	w0, #0x20000000            	// #536870912
    b25c:	b	b264 <XS_POSIX_localeconv+0x274>
    b260:	mov	w0, #0x0                   	// #0
    b264:	mov	w3, w0
    b268:	ldr	x2, [sp, #152]
    b26c:	ldr	x1, [sp, #144]
    b270:	ldr	x0, [sp, #40]
    b274:	bl	6b50 <Perl_newSVpvn_flags@plt>
    b278:	mov	w6, #0x0                   	// #0
    b27c:	mov	x5, x0
    b280:	mov	w4, #0x24                  	// #36
    b284:	mov	w3, w20
    b288:	mov	x2, x19
    b28c:	ldr	x1, [sp, #120]
    b290:	ldr	x0, [sp, #40]
    b294:	bl	6f00 <Perl_hv_common_key_len@plt>
    b298:	ldr	x0, [sp, #80]
    b29c:	add	x0, x0, #0x10
    b2a0:	str	x0, [sp, #80]
    b2a4:	ldr	x0, [sp, #80]
    b2a8:	ldr	x0, [x0]
    b2ac:	cmp	x0, #0x0
    b2b0:	b.ne	b12c <XS_POSIX_localeconv+0x13c>  // b.any
    b2b4:	b	b330 <XS_POSIX_localeconv+0x340>
    b2b8:	ldr	x0, [sp, #88]
    b2bc:	ldr	x0, [x0, #8]
    b2c0:	ldr	x1, [sp, #136]
    b2c4:	add	x0, x1, x0
    b2c8:	ldrb	w0, [x0]
    b2cc:	strb	w0, [sp, #61]
    b2d0:	ldrb	w0, [sp, #61]
    b2d4:	cmp	w0, #0xff
    b2d8:	b.eq	b324 <XS_POSIX_localeconv+0x334>  // b.none
    b2dc:	ldr	x0, [sp, #88]
    b2e0:	ldr	x19, [x0]
    b2e4:	ldr	x0, [sp, #88]
    b2e8:	ldr	x0, [x0]
    b2ec:	bl	65c0 <strlen@plt>
    b2f0:	mov	w20, w0
    b2f4:	ldrb	w0, [sp, #61]
    b2f8:	mov	x1, x0
    b2fc:	ldr	x0, [sp, #40]
    b300:	bl	70b0 <Perl_newSViv@plt>
    b304:	mov	w6, #0x0                   	// #0
    b308:	mov	x5, x0
    b30c:	mov	w4, #0x24                  	// #36
    b310:	mov	w3, w20
    b314:	mov	x2, x19
    b318:	ldr	x1, [sp, #120]
    b31c:	ldr	x0, [sp, #40]
    b320:	bl	6f00 <Perl_hv_common_key_len@plt>
    b324:	ldr	x0, [sp, #88]
    b328:	add	x0, x0, #0x10
    b32c:	str	x0, [sp, #88]
    b330:	ldr	x0, [sp, #88]
    b334:	ldr	x0, [x0]
    b338:	cmp	x0, #0x0
    b33c:	b.ne	b2b8 <XS_POSIX_localeconv+0x2c8>  // b.any
    b340:	ldr	x0, [sp, #72]
    b344:	cmp	x0, #0x0
    b348:	b.eq	b358 <XS_POSIX_localeconv+0x368>  // b.none
    b34c:	ldr	x1, [sp, #72]
    b350:	ldr	x0, [sp, #40]
    b354:	blr	x1
    b358:	ldr	x1, [sp, #120]
    b35c:	ldr	x0, [sp, #40]
    b360:	bl	6f20 <Perl_newRV@plt>
    b364:	str	x0, [sp, #160]
    b368:	ldr	x1, [sp, #160]
    b36c:	ldr	x0, [sp, #40]
    b370:	bl	6d60 <Perl_sv_2mortal@plt>
    b374:	str	x0, [sp, #160]
    b378:	ldr	x0, [sp, #40]
    b37c:	ldr	x1, [x0, #24]
    b380:	ldrsw	x0, [sp, #64]
    b384:	lsl	x0, x0, #3
    b388:	add	x0, x1, x0
    b38c:	ldr	x1, [sp, #160]
    b390:	str	x1, [x0]
    b394:	mov	x0, #0x1                   	// #1
    b398:	str	x0, [sp, #168]
    b39c:	ldr	x0, [sp, #40]
    b3a0:	ldr	x1, [x0, #24]
    b3a4:	ldrsw	x2, [sp, #64]
    b3a8:	ldr	x0, [sp, #168]
    b3ac:	add	x0, x2, x0
    b3b0:	lsl	x0, x0, #3
    b3b4:	sub	x0, x0, #0x8
    b3b8:	add	x1, x1, x0
    b3bc:	ldr	x0, [sp, #40]
    b3c0:	str	x1, [x0]
    b3c4:	nop
    b3c8:	ldp	x19, x20, [sp, #16]
    b3cc:	ldp	x29, x30, [sp], #176
    b3d0:	ret

000000000000b3d4 <XS_POSIX_setlocale>:
    b3d4:	stp	x29, x30, [sp, #-112]!
    b3d8:	mov	x29, sp
    b3dc:	str	x0, [sp, #24]
    b3e0:	str	x1, [sp, #16]
    b3e4:	ldr	x0, [sp, #24]
    b3e8:	ldr	x0, [x0]
    b3ec:	str	x0, [sp, #56]
    b3f0:	ldr	x0, [sp, #24]
    b3f4:	bl	739c <S_POPMARK>
    b3f8:	str	w0, [sp, #36]
    b3fc:	ldr	x0, [sp, #24]
    b400:	ldr	x1, [x0, #24]
    b404:	ldr	w0, [sp, #36]
    b408:	add	w2, w0, #0x1
    b40c:	str	w2, [sp, #36]
    b410:	sxtw	x0, w0
    b414:	lsl	x0, x0, #3
    b418:	add	x0, x1, x0
    b41c:	str	x0, [sp, #64]
    b420:	ldr	x1, [sp, #56]
    b424:	ldr	x0, [sp, #64]
    b428:	sub	x0, x1, x0
    b42c:	asr	x0, x0, #3
    b430:	str	w0, [sp, #40]
    b434:	ldr	w0, [sp, #40]
    b438:	cmp	w0, #0x0
    b43c:	b.le	b44c <XS_POSIX_setlocale+0x78>
    b440:	ldr	w0, [sp, #40]
    b444:	cmp	w0, #0x2
    b448:	b.le	b45c <XS_POSIX_setlocale+0x88>
    b44c:	adrp	x0, 1b000 <_fini+0x1fc>
    b450:	add	x1, x0, #0x3f8
    b454:	ldr	x0, [sp, #16]
    b458:	bl	6b20 <Perl_croak_xs_usage@plt>
    b45c:	ldr	x0, [sp, #24]
    b460:	ldr	x1, [x0, #24]
    b464:	ldrsw	x0, [sp, #36]
    b468:	lsl	x0, x0, #3
    b46c:	add	x0, x1, x0
    b470:	ldr	x0, [x0]
    b474:	ldr	w1, [x0, #12]
    b478:	mov	w0, #0x100                 	// #256
    b47c:	movk	w0, #0x20, lsl #16
    b480:	and	w0, w1, w0
    b484:	cmp	w0, #0x100
    b488:	b.ne	b4b0 <XS_POSIX_setlocale+0xdc>  // b.any
    b48c:	ldr	x0, [sp, #24]
    b490:	ldr	x1, [x0, #24]
    b494:	ldrsw	x0, [sp, #36]
    b498:	lsl	x0, x0, #3
    b49c:	add	x0, x1, x0
    b4a0:	ldr	x0, [x0]
    b4a4:	ldr	x0, [x0]
    b4a8:	ldr	x0, [x0, #32]
    b4ac:	b	b4d8 <XS_POSIX_setlocale+0x104>
    b4b0:	ldr	x0, [sp, #24]
    b4b4:	ldr	x1, [x0, #24]
    b4b8:	ldrsw	x0, [sp, #36]
    b4bc:	lsl	x0, x0, #3
    b4c0:	add	x0, x1, x0
    b4c4:	ldr	x0, [x0]
    b4c8:	mov	w2, #0x2                   	// #2
    b4cc:	mov	x1, x0
    b4d0:	ldr	x0, [sp, #24]
    b4d4:	bl	6560 <Perl_sv_2iv_flags@plt>
    b4d8:	str	w0, [sp, #44]
    b4dc:	ldr	x0, [sp, #24]
    b4e0:	ldr	x0, [x0, #8]
    b4e4:	ldrb	w0, [x0, #35]
    b4e8:	and	w0, w0, #0x4
    b4ec:	cmp	w0, #0x0
    b4f0:	b.eq	b518 <XS_POSIX_setlocale+0x144>  // b.none
    b4f4:	ldr	x0, [sp, #24]
    b4f8:	ldr	x1, [x0, #16]
    b4fc:	ldr	x0, [sp, #24]
    b500:	ldr	x0, [x0, #8]
    b504:	ldr	x0, [x0, #24]
    b508:	lsl	x0, x0, #3
    b50c:	add	x0, x1, x0
    b510:	ldr	x0, [x0]
    b514:	b	b520 <XS_POSIX_setlocale+0x14c>
    b518:	ldr	x0, [sp, #24]
    b51c:	bl	7160 <Perl_sv_newmortal@plt>
    b520:	str	x0, [sp, #72]
    b524:	ldr	w0, [sp, #40]
    b528:	cmp	w0, #0x1
    b52c:	b.gt	b538 <XS_POSIX_setlocale+0x164>
    b530:	str	xzr, [sp, #48]
    b534:	b	b5c4 <XS_POSIX_setlocale+0x1f0>
    b538:	ldr	x0, [sp, #24]
    b53c:	ldr	x1, [x0, #24]
    b540:	ldrsw	x0, [sp, #36]
    b544:	add	x0, x0, #0x1
    b548:	lsl	x0, x0, #3
    b54c:	add	x0, x1, x0
    b550:	ldr	x0, [x0]
    b554:	ldr	w1, [x0, #12]
    b558:	mov	w0, #0x400                 	// #1024
    b55c:	movk	w0, #0x20, lsl #16
    b560:	and	w0, w1, w0
    b564:	cmp	w0, #0x400
    b568:	b.ne	b590 <XS_POSIX_setlocale+0x1bc>  // b.any
    b56c:	ldr	x0, [sp, #24]
    b570:	ldr	x1, [x0, #24]
    b574:	ldrsw	x0, [sp, #36]
    b578:	add	x0, x0, #0x1
    b57c:	lsl	x0, x0, #3
    b580:	add	x0, x1, x0
    b584:	ldr	x0, [x0]
    b588:	ldr	x0, [x0, #16]
    b58c:	b	b5c0 <XS_POSIX_setlocale+0x1ec>
    b590:	ldr	x0, [sp, #24]
    b594:	ldr	x1, [x0, #24]
    b598:	ldrsw	x0, [sp, #36]
    b59c:	add	x0, x0, #0x1
    b5a0:	lsl	x0, x0, #3
    b5a4:	add	x0, x1, x0
    b5a8:	ldr	x0, [x0]
    b5ac:	mov	w3, #0x2                   	// #2
    b5b0:	mov	x2, #0x0                   	// #0
    b5b4:	mov	x1, x0
    b5b8:	ldr	x0, [sp, #24]
    b5bc:	bl	69b0 <Perl_sv_2pv_flags@plt>
    b5c0:	str	x0, [sp, #48]
    b5c4:	ldr	x1, [sp, #48]
    b5c8:	ldr	w0, [sp, #44]
    b5cc:	bl	6530 <Perl_setlocale@plt>
    b5d0:	str	x0, [sp, #80]
    b5d4:	ldr	x0, [sp, #80]
    b5d8:	cmp	x0, #0x0
    b5dc:	b.ne	b634 <XS_POSIX_setlocale+0x260>  // b.any
    b5e0:	ldr	x0, [sp, #24]
    b5e4:	ldr	x1, [x0, #24]
    b5e8:	ldrsw	x0, [sp, #36]
    b5ec:	lsl	x0, x0, #3
    b5f0:	add	x0, x1, x0
    b5f4:	ldr	x1, [sp, #24]
    b5f8:	add	x1, x1, #0x150
    b5fc:	str	x1, [x0]
    b600:	mov	x0, #0x1                   	// #1
    b604:	str	x0, [sp, #104]
    b608:	ldr	x0, [sp, #24]
    b60c:	ldr	x1, [x0, #24]
    b610:	ldrsw	x2, [sp, #36]
    b614:	ldr	x0, [sp, #104]
    b618:	add	x0, x2, x0
    b61c:	lsl	x0, x0, #3
    b620:	sub	x0, x0, #0x8
    b624:	add	x1, x1, x0
    b628:	ldr	x0, [sp, #24]
    b62c:	str	x1, [x0]
    b630:	b	b6dc <XS_POSIX_setlocale+0x308>
    b634:	ldr	x0, [sp, #80]
    b638:	str	x0, [sp, #88]
    b63c:	ldr	x2, [sp, #88]
    b640:	ldr	x1, [sp, #72]
    b644:	ldr	x0, [sp, #24]
    b648:	bl	6910 <Perl_sv_setpv@plt>
    b64c:	ldr	x0, [sp, #24]
    b650:	ldr	x1, [x0, #24]
    b654:	ldrsw	x0, [sp, #36]
    b658:	lsl	x0, x0, #3
    b65c:	sub	x0, x0, #0x8
    b660:	add	x0, x1, x0
    b664:	str	x0, [sp, #56]
    b668:	ldr	x0, [sp, #72]
    b66c:	ldr	w0, [x0, #12]
    b670:	lsr	w0, w0, #22
    b674:	mov	w0, w0
    b678:	and	x0, x0, #0x1
    b67c:	cmp	x0, #0x0
    b680:	b.eq	b690 <XS_POSIX_setlocale+0x2bc>  // b.none
    b684:	ldr	x1, [sp, #72]
    b688:	ldr	x0, [sp, #24]
    b68c:	bl	6d40 <Perl_mg_set@plt>
    b690:	ldr	x0, [sp, #56]
    b694:	add	x0, x0, #0x8
    b698:	str	x0, [sp, #56]
    b69c:	ldr	x0, [sp, #56]
    b6a0:	ldr	x1, [sp, #72]
    b6a4:	str	x1, [x0]
    b6a8:	mov	x0, #0x1                   	// #1
    b6ac:	str	x0, [sp, #96]
    b6b0:	ldr	x0, [sp, #24]
    b6b4:	ldr	x1, [x0, #24]
    b6b8:	ldrsw	x2, [sp, #36]
    b6bc:	ldr	x0, [sp, #96]
    b6c0:	add	x0, x2, x0
    b6c4:	lsl	x0, x0, #3
    b6c8:	sub	x0, x0, #0x8
    b6cc:	add	x1, x1, x0
    b6d0:	ldr	x0, [sp, #24]
    b6d4:	str	x1, [x0]
    b6d8:	nop
    b6dc:	ldp	x29, x30, [sp], #112
    b6e0:	ret

000000000000b6e4 <XS_POSIX_acos>:
    b6e4:	stp	x29, x30, [sp, #-112]!
    b6e8:	mov	x29, sp
    b6ec:	str	x0, [sp, #24]
    b6f0:	str	x1, [sp, #16]
    b6f4:	ldr	x0, [sp, #24]
    b6f8:	ldr	x0, [x0]
    b6fc:	str	x0, [sp, #56]
    b700:	ldr	x0, [sp, #24]
    b704:	bl	739c <S_POPMARK>
    b708:	str	w0, [sp, #36]
    b70c:	ldr	x0, [sp, #24]
    b710:	ldr	x1, [x0, #24]
    b714:	ldr	w0, [sp, #36]
    b718:	add	w2, w0, #0x1
    b71c:	str	w2, [sp, #36]
    b720:	sxtw	x0, w0
    b724:	lsl	x0, x0, #3
    b728:	add	x0, x1, x0
    b72c:	str	x0, [sp, #64]
    b730:	ldr	x1, [sp, #56]
    b734:	ldr	x0, [sp, #64]
    b738:	sub	x0, x1, x0
    b73c:	asr	x0, x0, #3
    b740:	str	w0, [sp, #40]
    b744:	ldr	x0, [sp, #16]
    b748:	ldr	x0, [x0]
    b74c:	str	x0, [sp, #72]
    b750:	ldr	x0, [sp, #72]
    b754:	ldr	w0, [x0, #40]
    b758:	str	w0, [sp, #44]
    b75c:	ldr	w0, [sp, #40]
    b760:	cmp	w0, #0x1
    b764:	b.eq	b778 <XS_POSIX_acos+0x94>  // b.none
    b768:	adrp	x0, 1b000 <_fini+0x1fc>
    b76c:	add	x1, x0, #0x410
    b770:	ldr	x0, [sp, #16]
    b774:	bl	6b20 <Perl_croak_xs_usage@plt>
    b778:	ldr	x0, [sp, #24]
    b77c:	ldr	x1, [x0, #24]
    b780:	ldrsw	x0, [sp, #36]
    b784:	lsl	x0, x0, #3
    b788:	add	x0, x1, x0
    b78c:	ldr	x0, [x0]
    b790:	ldr	w1, [x0, #12]
    b794:	mov	w0, #0x200                 	// #512
    b798:	movk	w0, #0x20, lsl #16
    b79c:	and	w0, w1, w0
    b7a0:	cmp	w0, #0x200
    b7a4:	b.ne	b7cc <XS_POSIX_acos+0xe8>  // b.any
    b7a8:	ldr	x0, [sp, #24]
    b7ac:	ldr	x1, [x0, #24]
    b7b0:	ldrsw	x0, [sp, #36]
    b7b4:	lsl	x0, x0, #3
    b7b8:	add	x0, x1, x0
    b7bc:	ldr	x0, [x0]
    b7c0:	ldr	x0, [x0]
    b7c4:	ldr	d0, [x0, #40]
    b7c8:	b	b7f4 <XS_POSIX_acos+0x110>
    b7cc:	ldr	x0, [sp, #24]
    b7d0:	ldr	x1, [x0, #24]
    b7d4:	ldrsw	x0, [sp, #36]
    b7d8:	lsl	x0, x0, #3
    b7dc:	add	x0, x1, x0
    b7e0:	ldr	x0, [x0]
    b7e4:	mov	w2, #0x2                   	// #2
    b7e8:	mov	x1, x0
    b7ec:	ldr	x0, [sp, #24]
    b7f0:	bl	6b80 <Perl_sv_2nv_flags@plt>
    b7f4:	str	d0, [sp, #80]
    b7f8:	ldr	x0, [sp, #24]
    b7fc:	ldr	x0, [x0, #8]
    b800:	ldrb	w0, [x0, #35]
    b804:	and	w0, w0, #0x4
    b808:	cmp	w0, #0x0
    b80c:	b.eq	b834 <XS_POSIX_acos+0x150>  // b.none
    b810:	ldr	x0, [sp, #24]
    b814:	ldr	x1, [x0, #16]
    b818:	ldr	x0, [sp, #24]
    b81c:	ldr	x0, [x0, #8]
    b820:	ldr	x0, [x0, #24]
    b824:	lsl	x0, x0, #3
    b828:	add	x0, x1, x0
    b82c:	ldr	x0, [x0]
    b830:	b	b83c <XS_POSIX_acos+0x158>
    b834:	ldr	x0, [sp, #24]
    b838:	bl	7160 <Perl_sv_newmortal@plt>
    b83c:	str	x0, [sp, #88]
    b840:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    b844:	ldr	x0, [x0, #4016]
    b848:	ldr	d0, [x0]
    b84c:	str	d0, [sp, #48]
    b850:	ldr	w0, [sp, #44]
    b854:	cmp	w0, #0x1d
    b858:	b.hi	ba54 <XS_POSIX_acos+0x370>  // b.pmore
    b85c:	adrp	x1, 1b000 <_fini+0x1fc>
    b860:	add	x1, x1, #0x414
    b864:	ldr	w0, [x1, w0, uxtw #2]
    b868:	adr	x1, b874 <XS_POSIX_acos+0x190>
    b86c:	add	x0, x1, w0, sxtw #2
    b870:	br	x0
    b874:	ldr	d0, [sp, #80]
    b878:	bl	6bc0 <acos@plt>
    b87c:	str	d0, [sp, #48]
    b880:	b	ba60 <XS_POSIX_acos+0x37c>
    b884:	ldr	d0, [sp, #80]
    b888:	bl	6a00 <acosh@plt>
    b88c:	str	d0, [sp, #48]
    b890:	b	ba60 <XS_POSIX_acos+0x37c>
    b894:	ldr	d0, [sp, #80]
    b898:	bl	6670 <asin@plt>
    b89c:	str	d0, [sp, #48]
    b8a0:	b	ba60 <XS_POSIX_acos+0x37c>
    b8a4:	ldr	d0, [sp, #80]
    b8a8:	bl	6ba0 <asinh@plt>
    b8ac:	str	d0, [sp, #48]
    b8b0:	b	ba60 <XS_POSIX_acos+0x37c>
    b8b4:	ldr	d0, [sp, #80]
    b8b8:	bl	7140 <atan@plt>
    b8bc:	str	d0, [sp, #48]
    b8c0:	b	ba60 <XS_POSIX_acos+0x37c>
    b8c4:	ldr	d0, [sp, #80]
    b8c8:	bl	6fa0 <atanh@plt>
    b8cc:	str	d0, [sp, #48]
    b8d0:	b	ba60 <XS_POSIX_acos+0x37c>
    b8d4:	ldr	d0, [sp, #80]
    b8d8:	bl	6830 <cbrt@plt>
    b8dc:	str	d0, [sp, #48]
    b8e0:	b	ba60 <XS_POSIX_acos+0x37c>
    b8e4:	ldr	d0, [sp, #80]
    b8e8:	bl	6e70 <ceil@plt>
    b8ec:	str	d0, [sp, #48]
    b8f0:	b	ba60 <XS_POSIX_acos+0x37c>
    b8f4:	ldr	d0, [sp, #80]
    b8f8:	bl	6d20 <cosh@plt>
    b8fc:	str	d0, [sp, #48]
    b900:	b	ba60 <XS_POSIX_acos+0x37c>
    b904:	ldr	d0, [sp, #80]
    b908:	bl	6b30 <erf@plt>
    b90c:	str	d0, [sp, #48]
    b910:	b	ba60 <XS_POSIX_acos+0x37c>
    b914:	ldr	d0, [sp, #80]
    b918:	bl	6d70 <erfc@plt>
    b91c:	str	d0, [sp, #48]
    b920:	b	ba60 <XS_POSIX_acos+0x37c>
    b924:	ldr	d0, [sp, #80]
    b928:	bl	6580 <exp2@plt>
    b92c:	str	d0, [sp, #48]
    b930:	b	ba60 <XS_POSIX_acos+0x37c>
    b934:	ldr	d0, [sp, #80]
    b938:	bl	6720 <expm1@plt>
    b93c:	str	d0, [sp, #48]
    b940:	b	ba60 <XS_POSIX_acos+0x37c>
    b944:	ldr	d0, [sp, #80]
    b948:	bl	6e60 <floor@plt>
    b94c:	str	d0, [sp, #48]
    b950:	b	ba60 <XS_POSIX_acos+0x37c>
    b954:	ldr	d0, [sp, #80]
    b958:	bl	70a0 <j0@plt>
    b95c:	str	d0, [sp, #48]
    b960:	b	ba60 <XS_POSIX_acos+0x37c>
    b964:	ldr	d0, [sp, #80]
    b968:	bl	68f0 <j1@plt>
    b96c:	str	d0, [sp, #48]
    b970:	b	ba60 <XS_POSIX_acos+0x37c>
    b974:	ldr	d0, [sp, #80]
    b978:	bl	6b00 <lgamma@plt>
    b97c:	str	d0, [sp, #48]
    b980:	b	ba60 <XS_POSIX_acos+0x37c>
    b984:	ldr	d0, [sp, #80]
    b988:	bl	67f0 <log10@plt>
    b98c:	str	d0, [sp, #48]
    b990:	b	ba60 <XS_POSIX_acos+0x37c>
    b994:	ldr	d0, [sp, #80]
    b998:	bl	6aa0 <log1p@plt>
    b99c:	str	d0, [sp, #48]
    b9a0:	b	ba60 <XS_POSIX_acos+0x37c>
    b9a4:	ldr	d0, [sp, #80]
    b9a8:	bl	65e0 <log2@plt>
    b9ac:	str	d0, [sp, #48]
    b9b0:	b	ba60 <XS_POSIX_acos+0x37c>
    b9b4:	ldr	d0, [sp, #80]
    b9b8:	bl	6b40 <logb@plt>
    b9bc:	str	d0, [sp, #48]
    b9c0:	b	ba60 <XS_POSIX_acos+0x37c>
    b9c4:	ldr	d0, [sp, #80]
    b9c8:	bl	6a20 <nearbyint@plt>
    b9cc:	str	d0, [sp, #48]
    b9d0:	b	ba60 <XS_POSIX_acos+0x37c>
    b9d4:	ldr	d0, [sp, #80]
    b9d8:	bl	6c70 <rint@plt>
    b9dc:	str	d0, [sp, #48]
    b9e0:	b	ba60 <XS_POSIX_acos+0x37c>
    b9e4:	ldr	d0, [sp, #80]
    b9e8:	bl	6dc0 <round@plt>
    b9ec:	str	d0, [sp, #48]
    b9f0:	b	ba60 <XS_POSIX_acos+0x37c>
    b9f4:	ldr	d0, [sp, #80]
    b9f8:	bl	6d10 <sinh@plt>
    b9fc:	str	d0, [sp, #48]
    ba00:	b	ba60 <XS_POSIX_acos+0x37c>
    ba04:	ldr	d0, [sp, #80]
    ba08:	bl	7090 <tan@plt>
    ba0c:	str	d0, [sp, #48]
    ba10:	b	ba60 <XS_POSIX_acos+0x37c>
    ba14:	ldr	d0, [sp, #80]
    ba18:	bl	6a50 <tanh@plt>
    ba1c:	str	d0, [sp, #48]
    ba20:	b	ba60 <XS_POSIX_acos+0x37c>
    ba24:	ldr	d0, [sp, #80]
    ba28:	bl	67b0 <tgamma@plt>
    ba2c:	str	d0, [sp, #48]
    ba30:	b	ba60 <XS_POSIX_acos+0x37c>
    ba34:	ldr	d0, [sp, #80]
    ba38:	bl	6f30 <trunc@plt>
    ba3c:	str	d0, [sp, #48]
    ba40:	b	ba60 <XS_POSIX_acos+0x37c>
    ba44:	ldr	d0, [sp, #80]
    ba48:	bl	6900 <y0@plt>
    ba4c:	str	d0, [sp, #48]
    ba50:	b	ba60 <XS_POSIX_acos+0x37c>
    ba54:	ldr	d0, [sp, #80]
    ba58:	bl	67a0 <y1@plt>
    ba5c:	str	d0, [sp, #48]
    ba60:	ldr	x0, [sp, #24]
    ba64:	ldr	x1, [x0, #24]
    ba68:	ldrsw	x0, [sp, #36]
    ba6c:	lsl	x0, x0, #3
    ba70:	sub	x0, x0, #0x8
    ba74:	add	x0, x1, x0
    ba78:	str	x0, [sp, #56]
    ba7c:	ldr	d0, [sp, #48]
    ba80:	str	d0, [sp, #96]
    ba84:	ldr	x0, [sp, #88]
    ba88:	ldr	w1, [x0, #12]
    ba8c:	mov	w0, #0x8ff                 	// #2303
    ba90:	movk	w0, #0x1981, lsl #16
    ba94:	and	w0, w1, w0
    ba98:	cmp	w0, #0x2
    ba9c:	cset	w0, eq  // eq = none
    baa0:	and	w0, w0, #0xff
    baa4:	mov	w1, w0
    baa8:	ldr	x0, [sp, #24]
    baac:	ldrb	w0, [x0, #185]
    bab0:	eor	w0, w0, #0x1
    bab4:	and	w0, w0, #0xff
    bab8:	and	w0, w1, w0
    babc:	cmp	w0, #0x0
    bac0:	cset	w0, ne  // ne = any
    bac4:	and	w0, w0, #0xff
    bac8:	and	x0, x0, #0xff
    bacc:	cmp	x0, #0x0
    bad0:	b.eq	bb00 <XS_POSIX_acos+0x41c>  // b.none
    bad4:	ldr	x0, [sp, #88]
    bad8:	ldr	w1, [x0, #12]
    badc:	mov	w0, #0x2200                	// #8704
    bae0:	orr	w1, w1, w0
    bae4:	ldr	x0, [sp, #88]
    bae8:	str	w1, [x0, #12]
    baec:	ldr	x0, [sp, #88]
    baf0:	ldr	x0, [x0]
    baf4:	ldr	d0, [sp, #96]
    baf8:	str	d0, [x0, #40]
    bafc:	b	bb10 <XS_POSIX_acos+0x42c>
    bb00:	ldr	d0, [sp, #96]
    bb04:	ldr	x1, [sp, #88]
    bb08:	ldr	x0, [sp, #24]
    bb0c:	bl	6960 <Perl_sv_setnv_mg@plt>
    bb10:	ldr	x0, [sp, #56]
    bb14:	add	x0, x0, #0x8
    bb18:	str	x0, [sp, #56]
    bb1c:	ldr	x0, [sp, #56]
    bb20:	ldr	x1, [sp, #88]
    bb24:	str	x1, [x0]
    bb28:	mov	x0, #0x1                   	// #1
    bb2c:	str	x0, [sp, #104]
    bb30:	ldr	x0, [sp, #24]
    bb34:	ldr	x1, [x0, #24]
    bb38:	ldrsw	x2, [sp, #36]
    bb3c:	ldr	x0, [sp, #104]
    bb40:	add	x0, x2, x0
    bb44:	lsl	x0, x0, #3
    bb48:	sub	x0, x0, #0x8
    bb4c:	add	x1, x1, x0
    bb50:	ldr	x0, [sp, #24]
    bb54:	str	x1, [x0]
    bb58:	nop
    bb5c:	ldp	x29, x30, [sp], #112
    bb60:	ret

000000000000bb64 <XS_POSIX_fegetround>:
    bb64:	stp	x29, x30, [sp, #-96]!
    bb68:	mov	x29, sp
    bb6c:	str	x0, [sp, #24]
    bb70:	str	x1, [sp, #16]
    bb74:	ldr	x0, [sp, #24]
    bb78:	ldr	x0, [x0]
    bb7c:	str	x0, [sp, #48]
    bb80:	ldr	x0, [sp, #24]
    bb84:	bl	739c <S_POPMARK>
    bb88:	str	w0, [sp, #40]
    bb8c:	ldr	x0, [sp, #24]
    bb90:	ldr	x1, [x0, #24]
    bb94:	ldr	w0, [sp, #40]
    bb98:	add	w2, w0, #0x1
    bb9c:	str	w2, [sp, #40]
    bba0:	sxtw	x0, w0
    bba4:	lsl	x0, x0, #3
    bba8:	add	x0, x1, x0
    bbac:	str	x0, [sp, #56]
    bbb0:	ldr	x1, [sp, #48]
    bbb4:	ldr	x0, [sp, #56]
    bbb8:	sub	x0, x1, x0
    bbbc:	asr	x0, x0, #3
    bbc0:	str	w0, [sp, #44]
    bbc4:	ldr	w0, [sp, #44]
    bbc8:	cmp	w0, #0x0
    bbcc:	b.eq	bbe0 <XS_POSIX_fegetround+0x7c>  // b.none
    bbd0:	adrp	x0, 1b000 <_fini+0x1fc>
    bbd4:	add	x1, x0, #0x3f0
    bbd8:	ldr	x0, [sp, #16]
    bbdc:	bl	6b20 <Perl_croak_xs_usage@plt>
    bbe0:	ldr	x0, [sp, #24]
    bbe4:	ldr	x0, [x0, #8]
    bbe8:	ldrb	w0, [x0, #35]
    bbec:	and	w0, w0, #0x4
    bbf0:	cmp	w0, #0x0
    bbf4:	b.eq	bc1c <XS_POSIX_fegetround+0xb8>  // b.none
    bbf8:	ldr	x0, [sp, #24]
    bbfc:	ldr	x1, [x0, #16]
    bc00:	ldr	x0, [sp, #24]
    bc04:	ldr	x0, [x0, #8]
    bc08:	ldr	x0, [x0, #24]
    bc0c:	lsl	x0, x0, #3
    bc10:	add	x0, x1, x0
    bc14:	ldr	x0, [x0]
    bc18:	b	bc24 <XS_POSIX_fegetround+0xc0>
    bc1c:	ldr	x0, [sp, #24]
    bc20:	bl	7160 <Perl_sv_newmortal@plt>
    bc24:	str	x0, [sp, #64]
    bc28:	bl	79f4 <my_fegetround>
    bc2c:	sxtw	x0, w0
    bc30:	str	x0, [sp, #72]
    bc34:	ldr	x0, [sp, #24]
    bc38:	ldr	x1, [x0, #24]
    bc3c:	ldrsw	x0, [sp, #40]
    bc40:	lsl	x0, x0, #3
    bc44:	sub	x0, x0, #0x8
    bc48:	add	x0, x1, x0
    bc4c:	str	x0, [sp, #48]
    bc50:	ldr	x0, [sp, #72]
    bc54:	str	x0, [sp, #80]
    bc58:	ldr	x0, [sp, #64]
    bc5c:	ldr	w1, [x0, #12]
    bc60:	mov	w0, #0x8ff                 	// #2303
    bc64:	movk	w0, #0x9981, lsl #16
    bc68:	and	w0, w1, w0
    bc6c:	cmp	w0, #0x1
    bc70:	cset	w0, eq  // eq = none
    bc74:	and	w0, w0, #0xff
    bc78:	mov	w1, w0
    bc7c:	ldr	x0, [sp, #24]
    bc80:	ldrb	w0, [x0, #185]
    bc84:	eor	w0, w0, #0x1
    bc88:	and	w0, w0, #0xff
    bc8c:	and	w0, w1, w0
    bc90:	cmp	w0, #0x0
    bc94:	cset	w0, ne  // ne = any
    bc98:	and	w0, w0, #0xff
    bc9c:	and	x0, x0, #0xff
    bca0:	cmp	x0, #0x0
    bca4:	b.eq	bcd0 <XS_POSIX_fegetround+0x16c>  // b.none
    bca8:	ldr	x0, [sp, #64]
    bcac:	ldr	w1, [x0, #12]
    bcb0:	mov	w0, #0x1100                	// #4352
    bcb4:	orr	w1, w1, w0
    bcb8:	ldr	x0, [sp, #64]
    bcbc:	str	w1, [x0, #12]
    bcc0:	ldr	x0, [sp, #64]
    bcc4:	ldr	x1, [sp, #80]
    bcc8:	str	x1, [x0, #16]
    bccc:	b	bce0 <XS_POSIX_fegetround+0x17c>
    bcd0:	ldr	x2, [sp, #80]
    bcd4:	ldr	x1, [sp, #64]
    bcd8:	ldr	x0, [sp, #24]
    bcdc:	bl	6880 <Perl_sv_setiv_mg@plt>
    bce0:	ldr	x0, [sp, #48]
    bce4:	add	x0, x0, #0x8
    bce8:	str	x0, [sp, #48]
    bcec:	ldr	x0, [sp, #48]
    bcf0:	ldr	x1, [sp, #64]
    bcf4:	str	x1, [x0]
    bcf8:	mov	x0, #0x1                   	// #1
    bcfc:	str	x0, [sp, #88]
    bd00:	ldr	x0, [sp, #24]
    bd04:	ldr	x1, [x0, #24]
    bd08:	ldrsw	x2, [sp, #40]
    bd0c:	ldr	x0, [sp, #88]
    bd10:	add	x0, x2, x0
    bd14:	lsl	x0, x0, #3
    bd18:	sub	x0, x0, #0x8
    bd1c:	add	x1, x1, x0
    bd20:	ldr	x0, [sp, #24]
    bd24:	str	x1, [x0]
    bd28:	nop
    bd2c:	ldp	x29, x30, [sp], #96
    bd30:	ret

000000000000bd34 <XS_POSIX_fesetround>:
    bd34:	stp	x29, x30, [sp, #-96]!
    bd38:	mov	x29, sp
    bd3c:	str	x0, [sp, #24]
    bd40:	str	x1, [sp, #16]
    bd44:	ldr	x0, [sp, #24]
    bd48:	ldr	x0, [x0]
    bd4c:	str	x0, [sp, #40]
    bd50:	ldr	x0, [sp, #24]
    bd54:	bl	739c <S_POPMARK>
    bd58:	str	w0, [sp, #32]
    bd5c:	ldr	x0, [sp, #24]
    bd60:	ldr	x1, [x0, #24]
    bd64:	ldr	w0, [sp, #32]
    bd68:	add	w2, w0, #0x1
    bd6c:	str	w2, [sp, #32]
    bd70:	sxtw	x0, w0
    bd74:	lsl	x0, x0, #3
    bd78:	add	x0, x1, x0
    bd7c:	str	x0, [sp, #48]
    bd80:	ldr	x1, [sp, #40]
    bd84:	ldr	x0, [sp, #48]
    bd88:	sub	x0, x1, x0
    bd8c:	asr	x0, x0, #3
    bd90:	str	w0, [sp, #36]
    bd94:	ldr	w0, [sp, #36]
    bd98:	cmp	w0, #0x1
    bd9c:	b.eq	bdb0 <XS_POSIX_fesetround+0x7c>  // b.none
    bda0:	adrp	x0, 1b000 <_fini+0x1fc>
    bda4:	add	x1, x0, #0x410
    bda8:	ldr	x0, [sp, #16]
    bdac:	bl	6b20 <Perl_croak_xs_usage@plt>
    bdb0:	ldr	x0, [sp, #24]
    bdb4:	ldr	x1, [x0, #24]
    bdb8:	ldrsw	x0, [sp, #32]
    bdbc:	lsl	x0, x0, #3
    bdc0:	add	x0, x1, x0
    bdc4:	ldr	x0, [x0]
    bdc8:	ldr	w1, [x0, #12]
    bdcc:	mov	w0, #0x100                 	// #256
    bdd0:	movk	w0, #0x20, lsl #16
    bdd4:	and	w0, w1, w0
    bdd8:	cmp	w0, #0x100
    bddc:	b.ne	be04 <XS_POSIX_fesetround+0xd0>  // b.any
    bde0:	ldr	x0, [sp, #24]
    bde4:	ldr	x1, [x0, #24]
    bde8:	ldrsw	x0, [sp, #32]
    bdec:	lsl	x0, x0, #3
    bdf0:	add	x0, x1, x0
    bdf4:	ldr	x0, [x0]
    bdf8:	ldr	x0, [x0]
    bdfc:	ldr	x0, [x0, #32]
    be00:	b	be2c <XS_POSIX_fesetround+0xf8>
    be04:	ldr	x0, [sp, #24]
    be08:	ldr	x1, [x0, #24]
    be0c:	ldrsw	x0, [sp, #32]
    be10:	lsl	x0, x0, #3
    be14:	add	x0, x1, x0
    be18:	ldr	x0, [x0]
    be1c:	mov	w2, #0x2                   	// #2
    be20:	mov	x1, x0
    be24:	ldr	x0, [sp, #24]
    be28:	bl	6560 <Perl_sv_2iv_flags@plt>
    be2c:	str	x0, [sp, #56]
    be30:	ldr	x0, [sp, #24]
    be34:	ldr	x0, [x0, #8]
    be38:	ldrb	w0, [x0, #35]
    be3c:	and	w0, w0, #0x4
    be40:	cmp	w0, #0x0
    be44:	b.eq	be6c <XS_POSIX_fesetround+0x138>  // b.none
    be48:	ldr	x0, [sp, #24]
    be4c:	ldr	x1, [x0, #16]
    be50:	ldr	x0, [sp, #24]
    be54:	ldr	x0, [x0, #8]
    be58:	ldr	x0, [x0, #24]
    be5c:	lsl	x0, x0, #3
    be60:	add	x0, x1, x0
    be64:	ldr	x0, [x0]
    be68:	b	be74 <XS_POSIX_fesetround+0x140>
    be6c:	ldr	x0, [sp, #24]
    be70:	bl	7160 <Perl_sv_newmortal@plt>
    be74:	str	x0, [sp, #64]
    be78:	ldr	x0, [sp, #56]
    be7c:	bl	6b90 <fesetround@plt>
    be80:	sxtw	x0, w0
    be84:	str	x0, [sp, #72]
    be88:	ldr	x0, [sp, #24]
    be8c:	ldr	x1, [x0, #24]
    be90:	ldrsw	x0, [sp, #32]
    be94:	lsl	x0, x0, #3
    be98:	sub	x0, x0, #0x8
    be9c:	add	x0, x1, x0
    bea0:	str	x0, [sp, #40]
    bea4:	ldr	x0, [sp, #72]
    bea8:	str	x0, [sp, #80]
    beac:	ldr	x0, [sp, #64]
    beb0:	ldr	w1, [x0, #12]
    beb4:	mov	w0, #0x8ff                 	// #2303
    beb8:	movk	w0, #0x9981, lsl #16
    bebc:	and	w0, w1, w0
    bec0:	cmp	w0, #0x1
    bec4:	cset	w0, eq  // eq = none
    bec8:	and	w0, w0, #0xff
    becc:	mov	w1, w0
    bed0:	ldr	x0, [sp, #24]
    bed4:	ldrb	w0, [x0, #185]
    bed8:	eor	w0, w0, #0x1
    bedc:	and	w0, w0, #0xff
    bee0:	and	w0, w1, w0
    bee4:	cmp	w0, #0x0
    bee8:	cset	w0, ne  // ne = any
    beec:	and	w0, w0, #0xff
    bef0:	and	x0, x0, #0xff
    bef4:	cmp	x0, #0x0
    bef8:	b.eq	bf24 <XS_POSIX_fesetround+0x1f0>  // b.none
    befc:	ldr	x0, [sp, #64]
    bf00:	ldr	w1, [x0, #12]
    bf04:	mov	w0, #0x1100                	// #4352
    bf08:	orr	w1, w1, w0
    bf0c:	ldr	x0, [sp, #64]
    bf10:	str	w1, [x0, #12]
    bf14:	ldr	x0, [sp, #64]
    bf18:	ldr	x1, [sp, #80]
    bf1c:	str	x1, [x0, #16]
    bf20:	b	bf34 <XS_POSIX_fesetround+0x200>
    bf24:	ldr	x2, [sp, #80]
    bf28:	ldr	x1, [sp, #64]
    bf2c:	ldr	x0, [sp, #24]
    bf30:	bl	6880 <Perl_sv_setiv_mg@plt>
    bf34:	ldr	x0, [sp, #40]
    bf38:	add	x0, x0, #0x8
    bf3c:	str	x0, [sp, #40]
    bf40:	ldr	x0, [sp, #40]
    bf44:	ldr	x1, [sp, #64]
    bf48:	str	x1, [x0]
    bf4c:	mov	x0, #0x1                   	// #1
    bf50:	str	x0, [sp, #88]
    bf54:	ldr	x0, [sp, #24]
    bf58:	ldr	x1, [x0, #24]
    bf5c:	ldrsw	x2, [sp, #32]
    bf60:	ldr	x0, [sp, #88]
    bf64:	add	x0, x2, x0
    bf68:	lsl	x0, x0, #3
    bf6c:	sub	x0, x0, #0x8
    bf70:	add	x1, x1, x0
    bf74:	ldr	x0, [sp, #24]
    bf78:	str	x1, [x0]
    bf7c:	nop
    bf80:	ldp	x29, x30, [sp], #96
    bf84:	ret

000000000000bf88 <XS_POSIX_fpclassify>:
    bf88:	stp	x29, x30, [sp, #-112]!
    bf8c:	mov	x29, sp
    bf90:	str	x0, [sp, #24]
    bf94:	str	x1, [sp, #16]
    bf98:	ldr	x0, [sp, #24]
    bf9c:	ldr	x0, [x0]
    bfa0:	str	x0, [sp, #56]
    bfa4:	ldr	x0, [sp, #24]
    bfa8:	bl	739c <S_POPMARK>
    bfac:	str	w0, [sp, #36]
    bfb0:	ldr	x0, [sp, #24]
    bfb4:	ldr	x1, [x0, #24]
    bfb8:	ldr	w0, [sp, #36]
    bfbc:	add	w2, w0, #0x1
    bfc0:	str	w2, [sp, #36]
    bfc4:	sxtw	x0, w0
    bfc8:	lsl	x0, x0, #3
    bfcc:	add	x0, x1, x0
    bfd0:	str	x0, [sp, #64]
    bfd4:	ldr	x1, [sp, #56]
    bfd8:	ldr	x0, [sp, #64]
    bfdc:	sub	x0, x1, x0
    bfe0:	asr	x0, x0, #3
    bfe4:	str	w0, [sp, #40]
    bfe8:	ldr	x0, [sp, #16]
    bfec:	ldr	x0, [x0]
    bff0:	str	x0, [sp, #72]
    bff4:	ldr	x0, [sp, #72]
    bff8:	ldr	w0, [x0, #40]
    bffc:	str	w0, [sp, #44]
    c000:	ldr	w0, [sp, #40]
    c004:	cmp	w0, #0x1
    c008:	b.eq	c01c <XS_POSIX_fpclassify+0x94>  // b.none
    c00c:	adrp	x0, 1b000 <_fini+0x1fc>
    c010:	add	x1, x0, #0x410
    c014:	ldr	x0, [sp, #16]
    c018:	bl	6b20 <Perl_croak_xs_usage@plt>
    c01c:	ldr	x0, [sp, #24]
    c020:	ldr	x1, [x0, #24]
    c024:	ldrsw	x0, [sp, #36]
    c028:	lsl	x0, x0, #3
    c02c:	add	x0, x1, x0
    c030:	ldr	x0, [x0]
    c034:	ldr	w1, [x0, #12]
    c038:	mov	w0, #0x200                 	// #512
    c03c:	movk	w0, #0x20, lsl #16
    c040:	and	w0, w1, w0
    c044:	cmp	w0, #0x200
    c048:	b.ne	c070 <XS_POSIX_fpclassify+0xe8>  // b.any
    c04c:	ldr	x0, [sp, #24]
    c050:	ldr	x1, [x0, #24]
    c054:	ldrsw	x0, [sp, #36]
    c058:	lsl	x0, x0, #3
    c05c:	add	x0, x1, x0
    c060:	ldr	x0, [x0]
    c064:	ldr	x0, [x0]
    c068:	ldr	d0, [x0, #40]
    c06c:	b	c098 <XS_POSIX_fpclassify+0x110>
    c070:	ldr	x0, [sp, #24]
    c074:	ldr	x1, [x0, #24]
    c078:	ldrsw	x0, [sp, #36]
    c07c:	lsl	x0, x0, #3
    c080:	add	x0, x1, x0
    c084:	ldr	x0, [x0]
    c088:	mov	w2, #0x2                   	// #2
    c08c:	mov	x1, x0
    c090:	ldr	x0, [sp, #24]
    c094:	bl	6b80 <Perl_sv_2nv_flags@plt>
    c098:	str	d0, [sp, #80]
    c09c:	ldr	x0, [sp, #24]
    c0a0:	ldr	x0, [x0, #8]
    c0a4:	ldrb	w0, [x0, #35]
    c0a8:	and	w0, w0, #0x4
    c0ac:	cmp	w0, #0x0
    c0b0:	b.eq	c0d8 <XS_POSIX_fpclassify+0x150>  // b.none
    c0b4:	ldr	x0, [sp, #24]
    c0b8:	ldr	x1, [x0, #16]
    c0bc:	ldr	x0, [sp, #24]
    c0c0:	ldr	x0, [x0, #8]
    c0c4:	ldr	x0, [x0, #24]
    c0c8:	lsl	x0, x0, #3
    c0cc:	add	x0, x1, x0
    c0d0:	ldr	x0, [x0]
    c0d4:	b	c0e0 <XS_POSIX_fpclassify+0x158>
    c0d8:	ldr	x0, [sp, #24]
    c0dc:	bl	7160 <Perl_sv_newmortal@plt>
    c0e0:	str	x0, [sp, #88]
    c0e4:	mov	x0, #0xffffffffffffffff    	// #-1
    c0e8:	str	x0, [sp, #48]
    c0ec:	ldr	w0, [sp, #44]
    c0f0:	cmp	w0, #0x7
    c0f4:	b.eq	c324 <XS_POSIX_fpclassify+0x39c>  // b.none
    c0f8:	ldr	w0, [sp, #44]
    c0fc:	cmp	w0, #0x7
    c100:	b.gt	c334 <XS_POSIX_fpclassify+0x3ac>
    c104:	ldr	w0, [sp, #44]
    c108:	cmp	w0, #0x6
    c10c:	b.eq	c314 <XS_POSIX_fpclassify+0x38c>  // b.none
    c110:	ldr	w0, [sp, #44]
    c114:	cmp	w0, #0x6
    c118:	b.gt	c334 <XS_POSIX_fpclassify+0x3ac>
    c11c:	ldr	w0, [sp, #44]
    c120:	cmp	w0, #0x5
    c124:	b.eq	c2a8 <XS_POSIX_fpclassify+0x320>  // b.none
    c128:	ldr	w0, [sp, #44]
    c12c:	cmp	w0, #0x5
    c130:	b.gt	c334 <XS_POSIX_fpclassify+0x3ac>
    c134:	ldr	w0, [sp, #44]
    c138:	cmp	w0, #0x4
    c13c:	b.eq	c288 <XS_POSIX_fpclassify+0x300>  // b.none
    c140:	ldr	w0, [sp, #44]
    c144:	cmp	w0, #0x4
    c148:	b.gt	c334 <XS_POSIX_fpclassify+0x3ac>
    c14c:	ldr	w0, [sp, #44]
    c150:	cmp	w0, #0x3
    c154:	b.eq	c240 <XS_POSIX_fpclassify+0x2b8>  // b.none
    c158:	ldr	w0, [sp, #44]
    c15c:	cmp	w0, #0x3
    c160:	b.gt	c334 <XS_POSIX_fpclassify+0x3ac>
    c164:	ldr	w0, [sp, #44]
    c168:	cmp	w0, #0x2
    c16c:	b.eq	c210 <XS_POSIX_fpclassify+0x288>  // b.none
    c170:	ldr	w0, [sp, #44]
    c174:	cmp	w0, #0x2
    c178:	b.gt	c334 <XS_POSIX_fpclassify+0x3ac>
    c17c:	ldr	w0, [sp, #44]
    c180:	cmp	w0, #0x0
    c184:	b.eq	c198 <XS_POSIX_fpclassify+0x210>  // b.none
    c188:	ldr	w0, [sp, #44]
    c18c:	cmp	w0, #0x1
    c190:	b.eq	c1fc <XS_POSIX_fpclassify+0x274>  // b.none
    c194:	b	c334 <XS_POSIX_fpclassify+0x3ac>
    c198:	ldr	d0, [sp, #80]
    c19c:	fabs	d0, d0
    c1a0:	fcmp	d0, d0
    c1a4:	b.vs	c1f0 <XS_POSIX_fpclassify+0x268>
    c1a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    c1ac:	fmov	d1, x0
    c1b0:	fcmp	d0, d1
    c1b4:	b.gt	c1e8 <XS_POSIX_fpclassify+0x260>
    c1b8:	mov	x0, #0x10000000000000      	// #4503599627370496
    c1bc:	fmov	d1, x0
    c1c0:	fcmpe	d0, d1
    c1c4:	b.lt	c1d0 <XS_POSIX_fpclassify+0x248>  // b.tstop
    c1c8:	mov	x0, #0x4                   	// #4
    c1cc:	b	c1f4 <XS_POSIX_fpclassify+0x26c>
    c1d0:	fcmp	d0, #0.0
    c1d4:	b.ne	c1e0 <XS_POSIX_fpclassify+0x258>  // b.any
    c1d8:	mov	x0, #0x2                   	// #2
    c1dc:	b	c1f4 <XS_POSIX_fpclassify+0x26c>
    c1e0:	mov	x0, #0x3                   	// #3
    c1e4:	b	c1f4 <XS_POSIX_fpclassify+0x26c>
    c1e8:	mov	x0, #0x1                   	// #1
    c1ec:	b	c1f4 <XS_POSIX_fpclassify+0x26c>
    c1f0:	mov	x0, #0x0                   	// #0
    c1f4:	str	x0, [sp, #48]
    c1f8:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c1fc:	ldr	d0, [sp, #80]
    c200:	bl	6940 <ilogb@plt>
    c204:	sxtw	x0, w0
    c208:	str	x0, [sp, #48]
    c20c:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c210:	ldr	d0, [sp, #80]
    c214:	fabs	d0, d0
    c218:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    c21c:	fmov	d1, x0
    c220:	fcmp	d0, d1
    c224:	cset	w0, hi  // hi = pmore
    c228:	and	w0, w0, #0xff
    c22c:	eor	w0, w0, #0x1
    c230:	and	w0, w0, #0xff
    c234:	sxtw	x0, w0
    c238:	str	x0, [sp, #48]
    c23c:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c240:	ldr	d0, [sp, #80]
    c244:	fabs	d0, d0
    c248:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    c24c:	fmov	d1, x0
    c250:	fcmp	d0, d1
    c254:	b.gt	c260 <XS_POSIX_fpclassify+0x2d8>
    c258:	mov	x0, #0x0                   	// #0
    c25c:	b	c280 <XS_POSIX_fpclassify+0x2f8>
    c260:	ldr	x0, [sp, #80]
    c264:	lsr	x0, x0, #63
    c268:	and	w0, w0, #0x1
    c26c:	cmp	w0, #0x0
    c270:	b.eq	c27c <XS_POSIX_fpclassify+0x2f4>  // b.none
    c274:	mov	x0, #0xffffffffffffffff    	// #-1
    c278:	b	c280 <XS_POSIX_fpclassify+0x2f8>
    c27c:	mov	x0, #0x1                   	// #1
    c280:	str	x0, [sp, #48]
    c284:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c288:	ldr	d1, [sp, #80]
    c28c:	ldr	d0, [sp, #80]
    c290:	fcmp	d1, d0
    c294:	cset	w0, vs
    c298:	and	w0, w0, #0xff
    c29c:	and	x0, x0, #0xff
    c2a0:	str	x0, [sp, #48]
    c2a4:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c2a8:	ldr	d0, [sp, #80]
    c2ac:	fabs	d0, d0
    c2b0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    c2b4:	fmov	d1, x0
    c2b8:	fcmp	d0, d1
    c2bc:	cset	w0, hi  // hi = pmore
    c2c0:	and	w0, w0, #0xff
    c2c4:	eor	w0, w0, #0x1
    c2c8:	and	w0, w0, #0xff
    c2cc:	and	w0, w0, #0x1
    c2d0:	and	w1, w0, #0xff
    c2d4:	ldr	d0, [sp, #80]
    c2d8:	fabs	d0, d0
    c2dc:	mov	x0, #0x10000000000000      	// #4503599627370496
    c2e0:	fmov	d1, x0
    c2e4:	fcmp	d0, d1
    c2e8:	cset	w0, lt  // lt = tstop
    c2ec:	and	w0, w0, #0xff
    c2f0:	eor	w0, w0, #0x1
    c2f4:	and	w0, w0, #0xff
    c2f8:	and	w0, w0, #0x1
    c2fc:	and	w0, w0, #0xff
    c300:	and	w0, w1, w0
    c304:	and	w0, w0, #0xff
    c308:	and	x0, x0, #0xff
    c30c:	str	x0, [sp, #48]
    c310:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c314:	ldr	d0, [sp, #80]
    c318:	bl	70c0 <lrint@plt>
    c31c:	str	x0, [sp, #48]
    c320:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c324:	ldr	d0, [sp, #80]
    c328:	bl	6fe0 <lround@plt>
    c32c:	str	x0, [sp, #48]
    c330:	b	c34c <XS_POSIX_fpclassify+0x3c4>
    c334:	ldr	x0, [sp, #80]
    c338:	lsr	x0, x0, #63
    c33c:	and	w0, w0, #0x1
    c340:	sxtw	x0, w0
    c344:	str	x0, [sp, #48]
    c348:	nop
    c34c:	ldr	x0, [sp, #24]
    c350:	ldr	x1, [x0, #24]
    c354:	ldrsw	x0, [sp, #36]
    c358:	lsl	x0, x0, #3
    c35c:	sub	x0, x0, #0x8
    c360:	add	x0, x1, x0
    c364:	str	x0, [sp, #56]
    c368:	ldr	x0, [sp, #48]
    c36c:	str	x0, [sp, #96]
    c370:	ldr	x0, [sp, #88]
    c374:	ldr	w1, [x0, #12]
    c378:	mov	w0, #0x8ff                 	// #2303
    c37c:	movk	w0, #0x9981, lsl #16
    c380:	and	w0, w1, w0
    c384:	cmp	w0, #0x1
    c388:	cset	w0, eq  // eq = none
    c38c:	and	w0, w0, #0xff
    c390:	mov	w1, w0
    c394:	ldr	x0, [sp, #24]
    c398:	ldrb	w0, [x0, #185]
    c39c:	eor	w0, w0, #0x1
    c3a0:	and	w0, w0, #0xff
    c3a4:	and	w0, w1, w0
    c3a8:	cmp	w0, #0x0
    c3ac:	cset	w0, ne  // ne = any
    c3b0:	and	w0, w0, #0xff
    c3b4:	and	x0, x0, #0xff
    c3b8:	cmp	x0, #0x0
    c3bc:	b.eq	c3e8 <XS_POSIX_fpclassify+0x460>  // b.none
    c3c0:	ldr	x0, [sp, #88]
    c3c4:	ldr	w1, [x0, #12]
    c3c8:	mov	w0, #0x1100                	// #4352
    c3cc:	orr	w1, w1, w0
    c3d0:	ldr	x0, [sp, #88]
    c3d4:	str	w1, [x0, #12]
    c3d8:	ldr	x0, [sp, #88]
    c3dc:	ldr	x1, [sp, #96]
    c3e0:	str	x1, [x0, #16]
    c3e4:	b	c3f8 <XS_POSIX_fpclassify+0x470>
    c3e8:	ldr	x2, [sp, #96]
    c3ec:	ldr	x1, [sp, #88]
    c3f0:	ldr	x0, [sp, #24]
    c3f4:	bl	6880 <Perl_sv_setiv_mg@plt>
    c3f8:	ldr	x0, [sp, #56]
    c3fc:	add	x0, x0, #0x8
    c400:	str	x0, [sp, #56]
    c404:	ldr	x0, [sp, #56]
    c408:	ldr	x1, [sp, #88]
    c40c:	str	x1, [x0]
    c410:	mov	x0, #0x1                   	// #1
    c414:	str	x0, [sp, #104]
    c418:	ldr	x0, [sp, #24]
    c41c:	ldr	x1, [x0, #24]
    c420:	ldrsw	x2, [sp, #36]
    c424:	ldr	x0, [sp, #104]
    c428:	add	x0, x2, x0
    c42c:	lsl	x0, x0, #3
    c430:	sub	x0, x0, #0x8
    c434:	add	x1, x1, x0
    c438:	ldr	x0, [sp, #24]
    c43c:	str	x1, [x0]
    c440:	nop
    c444:	ldp	x29, x30, [sp], #112
    c448:	ret

000000000000c44c <XS_POSIX_getpayload>:
    c44c:	stp	x29, x30, [sp, #-96]!
    c450:	mov	x29, sp
    c454:	str	x0, [sp, #24]
    c458:	str	x1, [sp, #16]
    c45c:	ldr	x0, [sp, #24]
    c460:	ldr	x0, [x0]
    c464:	str	x0, [sp, #40]
    c468:	ldr	x0, [sp, #24]
    c46c:	bl	739c <S_POPMARK>
    c470:	str	w0, [sp, #32]
    c474:	ldr	x0, [sp, #24]
    c478:	ldr	x1, [x0, #24]
    c47c:	ldr	w0, [sp, #32]
    c480:	add	w2, w0, #0x1
    c484:	str	w2, [sp, #32]
    c488:	sxtw	x0, w0
    c48c:	lsl	x0, x0, #3
    c490:	add	x0, x1, x0
    c494:	str	x0, [sp, #48]
    c498:	ldr	x1, [sp, #40]
    c49c:	ldr	x0, [sp, #48]
    c4a0:	sub	x0, x1, x0
    c4a4:	asr	x0, x0, #3
    c4a8:	str	w0, [sp, #36]
    c4ac:	ldr	w0, [sp, #36]
    c4b0:	cmp	w0, #0x1
    c4b4:	b.eq	c4c8 <XS_POSIX_getpayload+0x7c>  // b.none
    c4b8:	adrp	x0, 1b000 <_fini+0x1fc>
    c4bc:	add	x1, x0, #0x490
    c4c0:	ldr	x0, [sp, #16]
    c4c4:	bl	6b20 <Perl_croak_xs_usage@plt>
    c4c8:	ldr	x0, [sp, #24]
    c4cc:	ldr	x1, [x0, #24]
    c4d0:	ldrsw	x0, [sp, #32]
    c4d4:	lsl	x0, x0, #3
    c4d8:	add	x0, x1, x0
    c4dc:	ldr	x0, [x0]
    c4e0:	ldr	w1, [x0, #12]
    c4e4:	mov	w0, #0x200                 	// #512
    c4e8:	movk	w0, #0x20, lsl #16
    c4ec:	and	w0, w1, w0
    c4f0:	cmp	w0, #0x200
    c4f4:	b.ne	c51c <XS_POSIX_getpayload+0xd0>  // b.any
    c4f8:	ldr	x0, [sp, #24]
    c4fc:	ldr	x1, [x0, #24]
    c500:	ldrsw	x0, [sp, #32]
    c504:	lsl	x0, x0, #3
    c508:	add	x0, x1, x0
    c50c:	ldr	x0, [x0]
    c510:	ldr	x0, [x0]
    c514:	ldr	d0, [x0, #40]
    c518:	b	c544 <XS_POSIX_getpayload+0xf8>
    c51c:	ldr	x0, [sp, #24]
    c520:	ldr	x1, [x0, #24]
    c524:	ldrsw	x0, [sp, #32]
    c528:	lsl	x0, x0, #3
    c52c:	add	x0, x1, x0
    c530:	ldr	x0, [x0]
    c534:	mov	w2, #0x2                   	// #2
    c538:	mov	x1, x0
    c53c:	ldr	x0, [sp, #24]
    c540:	bl	6b80 <Perl_sv_2nv_flags@plt>
    c544:	str	d0, [sp, #56]
    c548:	ldr	x0, [sp, #24]
    c54c:	ldr	x0, [x0, #8]
    c550:	ldrb	w0, [x0, #35]
    c554:	and	w0, w0, #0x4
    c558:	cmp	w0, #0x0
    c55c:	b.eq	c584 <XS_POSIX_getpayload+0x138>  // b.none
    c560:	ldr	x0, [sp, #24]
    c564:	ldr	x1, [x0, #16]
    c568:	ldr	x0, [sp, #24]
    c56c:	ldr	x0, [x0, #8]
    c570:	ldr	x0, [x0, #24]
    c574:	lsl	x0, x0, #3
    c578:	add	x0, x1, x0
    c57c:	ldr	x0, [x0]
    c580:	b	c58c <XS_POSIX_getpayload+0x140>
    c584:	ldr	x0, [sp, #24]
    c588:	bl	7160 <Perl_sv_newmortal@plt>
    c58c:	str	x0, [sp, #64]
    c590:	ldr	d0, [sp, #56]
    c594:	bl	7d08 <S_getpayload>
    c598:	ucvtf	d0, x0
    c59c:	str	d0, [sp, #72]
    c5a0:	ldr	x0, [sp, #24]
    c5a4:	ldr	x1, [x0, #24]
    c5a8:	ldrsw	x0, [sp, #32]
    c5ac:	lsl	x0, x0, #3
    c5b0:	sub	x0, x0, #0x8
    c5b4:	add	x0, x1, x0
    c5b8:	str	x0, [sp, #40]
    c5bc:	ldr	d0, [sp, #72]
    c5c0:	str	d0, [sp, #80]
    c5c4:	ldr	x0, [sp, #64]
    c5c8:	ldr	w1, [x0, #12]
    c5cc:	mov	w0, #0x8ff                 	// #2303
    c5d0:	movk	w0, #0x1981, lsl #16
    c5d4:	and	w0, w1, w0
    c5d8:	cmp	w0, #0x2
    c5dc:	cset	w0, eq  // eq = none
    c5e0:	and	w0, w0, #0xff
    c5e4:	mov	w1, w0
    c5e8:	ldr	x0, [sp, #24]
    c5ec:	ldrb	w0, [x0, #185]
    c5f0:	eor	w0, w0, #0x1
    c5f4:	and	w0, w0, #0xff
    c5f8:	and	w0, w1, w0
    c5fc:	cmp	w0, #0x0
    c600:	cset	w0, ne  // ne = any
    c604:	and	w0, w0, #0xff
    c608:	and	x0, x0, #0xff
    c60c:	cmp	x0, #0x0
    c610:	b.eq	c640 <XS_POSIX_getpayload+0x1f4>  // b.none
    c614:	ldr	x0, [sp, #64]
    c618:	ldr	w1, [x0, #12]
    c61c:	mov	w0, #0x2200                	// #8704
    c620:	orr	w1, w1, w0
    c624:	ldr	x0, [sp, #64]
    c628:	str	w1, [x0, #12]
    c62c:	ldr	x0, [sp, #64]
    c630:	ldr	x0, [x0]
    c634:	ldr	d0, [sp, #80]
    c638:	str	d0, [x0, #40]
    c63c:	b	c650 <XS_POSIX_getpayload+0x204>
    c640:	ldr	d0, [sp, #80]
    c644:	ldr	x1, [sp, #64]
    c648:	ldr	x0, [sp, #24]
    c64c:	bl	6960 <Perl_sv_setnv_mg@plt>
    c650:	ldr	x0, [sp, #40]
    c654:	add	x0, x0, #0x8
    c658:	str	x0, [sp, #40]
    c65c:	ldr	x0, [sp, #40]
    c660:	ldr	x1, [sp, #64]
    c664:	str	x1, [x0]
    c668:	mov	x0, #0x1                   	// #1
    c66c:	str	x0, [sp, #88]
    c670:	ldr	x0, [sp, #24]
    c674:	ldr	x1, [x0, #24]
    c678:	ldrsw	x2, [sp, #32]
    c67c:	ldr	x0, [sp, #88]
    c680:	add	x0, x2, x0
    c684:	lsl	x0, x0, #3
    c688:	sub	x0, x0, #0x8
    c68c:	add	x1, x1, x0
    c690:	ldr	x0, [sp, #24]
    c694:	str	x1, [x0]
    c698:	nop
    c69c:	ldp	x29, x30, [sp], #96
    c6a0:	ret

000000000000c6a4 <XS_POSIX_setpayload>:
    c6a4:	stp	x29, x30, [sp, #-96]!
    c6a8:	mov	x29, sp
    c6ac:	str	x0, [sp, #24]
    c6b0:	str	x1, [sp, #16]
    c6b4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    c6b8:	ldr	x0, [x0, #3992]
    c6bc:	ldr	x1, [x0]
    c6c0:	str	x1, [sp, #88]
    c6c4:	mov	x1, #0x0                   	// #0
    c6c8:	ldr	x0, [sp, #24]
    c6cc:	ldr	x0, [x0]
    c6d0:	str	x0, [sp, #56]
    c6d4:	ldr	x0, [sp, #24]
    c6d8:	bl	739c <S_POPMARK>
    c6dc:	str	w0, [sp, #40]
    c6e0:	ldr	x0, [sp, #24]
    c6e4:	ldr	x1, [x0, #24]
    c6e8:	ldr	w0, [sp, #40]
    c6ec:	add	w2, w0, #0x1
    c6f0:	str	w2, [sp, #40]
    c6f4:	sxtw	x0, w0
    c6f8:	lsl	x0, x0, #3
    c6fc:	add	x0, x1, x0
    c700:	str	x0, [sp, #64]
    c704:	ldr	x1, [sp, #56]
    c708:	ldr	x0, [sp, #64]
    c70c:	sub	x0, x1, x0
    c710:	asr	x0, x0, #3
    c714:	str	w0, [sp, #44]
    c718:	ldr	w0, [sp, #44]
    c71c:	cmp	w0, #0x2
    c720:	b.eq	c734 <XS_POSIX_setpayload+0x90>  // b.none
    c724:	adrp	x0, 1b000 <_fini+0x1fc>
    c728:	add	x1, x0, #0x498
    c72c:	ldr	x0, [sp, #16]
    c730:	bl	6b20 <Perl_croak_xs_usage@plt>
    c734:	ldr	x0, [sp, #24]
    c738:	ldr	x1, [x0, #24]
    c73c:	ldrsw	x0, [sp, #40]
    c740:	lsl	x0, x0, #3
    c744:	add	x0, x1, x0
    c748:	ldr	x0, [x0]
    c74c:	ldr	w1, [x0, #12]
    c750:	mov	w0, #0x200                 	// #512
    c754:	movk	w0, #0x20, lsl #16
    c758:	and	w0, w1, w0
    c75c:	cmp	w0, #0x200
    c760:	b.ne	c788 <XS_POSIX_setpayload+0xe4>  // b.any
    c764:	ldr	x0, [sp, #24]
    c768:	ldr	x1, [x0, #24]
    c76c:	ldrsw	x0, [sp, #40]
    c770:	lsl	x0, x0, #3
    c774:	add	x0, x1, x0
    c778:	ldr	x0, [x0]
    c77c:	ldr	x0, [x0]
    c780:	ldr	d0, [x0, #40]
    c784:	b	c7b0 <XS_POSIX_setpayload+0x10c>
    c788:	ldr	x0, [sp, #24]
    c78c:	ldr	x1, [x0, #24]
    c790:	ldrsw	x0, [sp, #40]
    c794:	lsl	x0, x0, #3
    c798:	add	x0, x1, x0
    c79c:	ldr	x0, [x0]
    c7a0:	mov	w2, #0x2                   	// #2
    c7a4:	mov	x1, x0
    c7a8:	ldr	x0, [sp, #24]
    c7ac:	bl	6b80 <Perl_sv_2nv_flags@plt>
    c7b0:	str	d0, [sp, #48]
    c7b4:	ldr	x0, [sp, #24]
    c7b8:	ldr	x1, [x0, #24]
    c7bc:	ldrsw	x0, [sp, #40]
    c7c0:	add	x0, x0, #0x1
    c7c4:	lsl	x0, x0, #3
    c7c8:	add	x0, x1, x0
    c7cc:	ldr	x0, [x0]
    c7d0:	ldr	w1, [x0, #12]
    c7d4:	mov	w0, #0x200                 	// #512
    c7d8:	movk	w0, #0x20, lsl #16
    c7dc:	and	w0, w1, w0
    c7e0:	cmp	w0, #0x200
    c7e4:	b.ne	c810 <XS_POSIX_setpayload+0x16c>  // b.any
    c7e8:	ldr	x0, [sp, #24]
    c7ec:	ldr	x1, [x0, #24]
    c7f0:	ldrsw	x0, [sp, #40]
    c7f4:	add	x0, x0, #0x1
    c7f8:	lsl	x0, x0, #3
    c7fc:	add	x0, x1, x0
    c800:	ldr	x0, [x0]
    c804:	ldr	x0, [x0]
    c808:	ldr	d0, [x0, #40]
    c80c:	b	c83c <XS_POSIX_setpayload+0x198>
    c810:	ldr	x0, [sp, #24]
    c814:	ldr	x1, [x0, #24]
    c818:	ldrsw	x0, [sp, #40]
    c81c:	add	x0, x0, #0x1
    c820:	lsl	x0, x0, #3
    c824:	add	x0, x1, x0
    c828:	ldr	x0, [x0]
    c82c:	mov	w2, #0x2                   	// #2
    c830:	mov	x1, x0
    c834:	ldr	x0, [sp, #24]
    c838:	bl	6b80 <Perl_sv_2nv_flags@plt>
    c83c:	str	d0, [sp, #72]
    c840:	ldr	d0, [sp, #72]
    c844:	fcvtzu	x1, d0
    c848:	add	x0, sp, #0x30
    c84c:	mov	w2, #0x0                   	// #0
    c850:	bl	7a08 <S_setpayload>
    c854:	ldr	x0, [sp, #24]
    c858:	ldr	x1, [x0, #24]
    c85c:	ldrsw	x0, [sp, #40]
    c860:	lsl	x0, x0, #3
    c864:	add	x0, x1, x0
    c868:	ldr	x0, [x0]
    c86c:	ldr	d0, [sp, #48]
    c870:	mov	x1, x0
    c874:	ldr	x0, [sp, #24]
    c878:	bl	65f0 <Perl_sv_setnv@plt>
    c87c:	ldr	x0, [sp, #24]
    c880:	ldr	x1, [x0, #24]
    c884:	ldrsw	x0, [sp, #40]
    c888:	lsl	x0, x0, #3
    c88c:	add	x0, x1, x0
    c890:	ldr	x0, [x0]
    c894:	ldr	w0, [x0, #12]
    c898:	lsr	w0, w0, #22
    c89c:	mov	w0, w0
    c8a0:	and	x0, x0, #0x1
    c8a4:	cmp	x0, #0x0
    c8a8:	b.eq	c8d0 <XS_POSIX_setpayload+0x22c>  // b.none
    c8ac:	ldr	x0, [sp, #24]
    c8b0:	ldr	x1, [x0, #24]
    c8b4:	ldrsw	x0, [sp, #40]
    c8b8:	lsl	x0, x0, #3
    c8bc:	add	x0, x1, x0
    c8c0:	ldr	x0, [x0]
    c8c4:	mov	x1, x0
    c8c8:	ldr	x0, [sp, #24]
    c8cc:	bl	6d40 <Perl_mg_set@plt>
    c8d0:	str	xzr, [sp, #80]
    c8d4:	ldr	x0, [sp, #24]
    c8d8:	ldr	x1, [x0, #24]
    c8dc:	ldrsw	x2, [sp, #40]
    c8e0:	ldr	x0, [sp, #80]
    c8e4:	add	x0, x2, x0
    c8e8:	lsl	x0, x0, #3
    c8ec:	sub	x0, x0, #0x8
    c8f0:	add	x1, x1, x0
    c8f4:	ldr	x0, [sp, #24]
    c8f8:	str	x1, [x0]
    c8fc:	nop
    c900:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    c904:	ldr	x0, [x0, #3992]
    c908:	ldr	x1, [sp, #88]
    c90c:	ldr	x0, [x0]
    c910:	eor	x0, x1, x0
    c914:	cmp	x0, #0x0
    c918:	b.eq	c920 <XS_POSIX_setpayload+0x27c>  // b.none
    c91c:	bl	6a60 <__stack_chk_fail@plt>
    c920:	ldp	x29, x30, [sp], #96
    c924:	ret

000000000000c928 <XS_POSIX_setpayloadsig>:
    c928:	stp	x29, x30, [sp, #-96]!
    c92c:	mov	x29, sp
    c930:	str	x0, [sp, #24]
    c934:	str	x1, [sp, #16]
    c938:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    c93c:	ldr	x0, [x0, #3992]
    c940:	ldr	x1, [x0]
    c944:	str	x1, [sp, #88]
    c948:	mov	x1, #0x0                   	// #0
    c94c:	ldr	x0, [sp, #24]
    c950:	ldr	x0, [x0]
    c954:	str	x0, [sp, #56]
    c958:	ldr	x0, [sp, #24]
    c95c:	bl	739c <S_POPMARK>
    c960:	str	w0, [sp, #40]
    c964:	ldr	x0, [sp, #24]
    c968:	ldr	x1, [x0, #24]
    c96c:	ldr	w0, [sp, #40]
    c970:	add	w2, w0, #0x1
    c974:	str	w2, [sp, #40]
    c978:	sxtw	x0, w0
    c97c:	lsl	x0, x0, #3
    c980:	add	x0, x1, x0
    c984:	str	x0, [sp, #64]
    c988:	ldr	x1, [sp, #56]
    c98c:	ldr	x0, [sp, #64]
    c990:	sub	x0, x1, x0
    c994:	asr	x0, x0, #3
    c998:	str	w0, [sp, #44]
    c99c:	ldr	w0, [sp, #44]
    c9a0:	cmp	w0, #0x2
    c9a4:	b.eq	c9b8 <XS_POSIX_setpayloadsig+0x90>  // b.none
    c9a8:	adrp	x0, 1b000 <_fini+0x1fc>
    c9ac:	add	x1, x0, #0x498
    c9b0:	ldr	x0, [sp, #16]
    c9b4:	bl	6b20 <Perl_croak_xs_usage@plt>
    c9b8:	ldr	x0, [sp, #24]
    c9bc:	ldr	x1, [x0, #24]
    c9c0:	ldrsw	x0, [sp, #40]
    c9c4:	lsl	x0, x0, #3
    c9c8:	add	x0, x1, x0
    c9cc:	ldr	x0, [x0]
    c9d0:	ldr	w1, [x0, #12]
    c9d4:	mov	w0, #0x200                 	// #512
    c9d8:	movk	w0, #0x20, lsl #16
    c9dc:	and	w0, w1, w0
    c9e0:	cmp	w0, #0x200
    c9e4:	b.ne	ca0c <XS_POSIX_setpayloadsig+0xe4>  // b.any
    c9e8:	ldr	x0, [sp, #24]
    c9ec:	ldr	x1, [x0, #24]
    c9f0:	ldrsw	x0, [sp, #40]
    c9f4:	lsl	x0, x0, #3
    c9f8:	add	x0, x1, x0
    c9fc:	ldr	x0, [x0]
    ca00:	ldr	x0, [x0]
    ca04:	ldr	d0, [x0, #40]
    ca08:	b	ca34 <XS_POSIX_setpayloadsig+0x10c>
    ca0c:	ldr	x0, [sp, #24]
    ca10:	ldr	x1, [x0, #24]
    ca14:	ldrsw	x0, [sp, #40]
    ca18:	lsl	x0, x0, #3
    ca1c:	add	x0, x1, x0
    ca20:	ldr	x0, [x0]
    ca24:	mov	w2, #0x2                   	// #2
    ca28:	mov	x1, x0
    ca2c:	ldr	x0, [sp, #24]
    ca30:	bl	6b80 <Perl_sv_2nv_flags@plt>
    ca34:	str	d0, [sp, #48]
    ca38:	ldr	x0, [sp, #24]
    ca3c:	ldr	x1, [x0, #24]
    ca40:	ldrsw	x0, [sp, #40]
    ca44:	add	x0, x0, #0x1
    ca48:	lsl	x0, x0, #3
    ca4c:	add	x0, x1, x0
    ca50:	ldr	x0, [x0]
    ca54:	ldr	w1, [x0, #12]
    ca58:	mov	w0, #0x200                 	// #512
    ca5c:	movk	w0, #0x20, lsl #16
    ca60:	and	w0, w1, w0
    ca64:	cmp	w0, #0x200
    ca68:	b.ne	ca94 <XS_POSIX_setpayloadsig+0x16c>  // b.any
    ca6c:	ldr	x0, [sp, #24]
    ca70:	ldr	x1, [x0, #24]
    ca74:	ldrsw	x0, [sp, #40]
    ca78:	add	x0, x0, #0x1
    ca7c:	lsl	x0, x0, #3
    ca80:	add	x0, x1, x0
    ca84:	ldr	x0, [x0]
    ca88:	ldr	x0, [x0]
    ca8c:	ldr	d0, [x0, #40]
    ca90:	b	cac0 <XS_POSIX_setpayloadsig+0x198>
    ca94:	ldr	x0, [sp, #24]
    ca98:	ldr	x1, [x0, #24]
    ca9c:	ldrsw	x0, [sp, #40]
    caa0:	add	x0, x0, #0x1
    caa4:	lsl	x0, x0, #3
    caa8:	add	x0, x1, x0
    caac:	ldr	x0, [x0]
    cab0:	mov	w2, #0x2                   	// #2
    cab4:	mov	x1, x0
    cab8:	ldr	x0, [sp, #24]
    cabc:	bl	6b80 <Perl_sv_2nv_flags@plt>
    cac0:	str	d0, [sp, #72]
    cac4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    cac8:	ldr	x0, [x0, #4016]
    cacc:	ldr	d0, [x0]
    cad0:	str	d0, [sp, #48]
    cad4:	ldr	d0, [sp, #72]
    cad8:	fcvtzu	x1, d0
    cadc:	add	x0, sp, #0x30
    cae0:	mov	w2, #0x1                   	// #1
    cae4:	bl	7a08 <S_setpayload>
    cae8:	ldr	x0, [sp, #24]
    caec:	ldr	x1, [x0, #24]
    caf0:	ldrsw	x0, [sp, #40]
    caf4:	lsl	x0, x0, #3
    caf8:	add	x0, x1, x0
    cafc:	ldr	x0, [x0]
    cb00:	ldr	d0, [sp, #48]
    cb04:	mov	x1, x0
    cb08:	ldr	x0, [sp, #24]
    cb0c:	bl	65f0 <Perl_sv_setnv@plt>
    cb10:	ldr	x0, [sp, #24]
    cb14:	ldr	x1, [x0, #24]
    cb18:	ldrsw	x0, [sp, #40]
    cb1c:	lsl	x0, x0, #3
    cb20:	add	x0, x1, x0
    cb24:	ldr	x0, [x0]
    cb28:	ldr	w0, [x0, #12]
    cb2c:	lsr	w0, w0, #22
    cb30:	mov	w0, w0
    cb34:	and	x0, x0, #0x1
    cb38:	cmp	x0, #0x0
    cb3c:	b.eq	cb64 <XS_POSIX_setpayloadsig+0x23c>  // b.none
    cb40:	ldr	x0, [sp, #24]
    cb44:	ldr	x1, [x0, #24]
    cb48:	ldrsw	x0, [sp, #40]
    cb4c:	lsl	x0, x0, #3
    cb50:	add	x0, x1, x0
    cb54:	ldr	x0, [x0]
    cb58:	mov	x1, x0
    cb5c:	ldr	x0, [sp, #24]
    cb60:	bl	6d40 <Perl_mg_set@plt>
    cb64:	str	xzr, [sp, #80]
    cb68:	ldr	x0, [sp, #24]
    cb6c:	ldr	x1, [x0, #24]
    cb70:	ldrsw	x2, [sp, #40]
    cb74:	ldr	x0, [sp, #80]
    cb78:	add	x0, x2, x0
    cb7c:	lsl	x0, x0, #3
    cb80:	sub	x0, x0, #0x8
    cb84:	add	x1, x1, x0
    cb88:	ldr	x0, [sp, #24]
    cb8c:	str	x1, [x0]
    cb90:	nop
    cb94:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    cb98:	ldr	x0, [x0, #3992]
    cb9c:	ldr	x1, [sp, #88]
    cba0:	ldr	x0, [x0]
    cba4:	eor	x0, x1, x0
    cba8:	cmp	x0, #0x0
    cbac:	b.eq	cbb4 <XS_POSIX_setpayloadsig+0x28c>  // b.none
    cbb0:	bl	6a60 <__stack_chk_fail@plt>
    cbb4:	ldp	x29, x30, [sp], #96
    cbb8:	ret

000000000000cbbc <XS_POSIX_issignaling>:
    cbbc:	stp	x29, x30, [sp, #-112]!
    cbc0:	mov	x29, sp
    cbc4:	str	x0, [sp, #24]
    cbc8:	str	x1, [sp, #16]
    cbcc:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    cbd0:	ldr	x0, [x0, #3992]
    cbd4:	ldr	x1, [x0]
    cbd8:	str	x1, [sp, #104]
    cbdc:	mov	x1, #0x0                   	// #0
    cbe0:	ldr	x0, [sp, #24]
    cbe4:	ldr	x0, [x0]
    cbe8:	str	x0, [sp, #64]
    cbec:	ldr	x0, [sp, #24]
    cbf0:	bl	739c <S_POPMARK>
    cbf4:	str	w0, [sp, #44]
    cbf8:	ldr	x0, [sp, #24]
    cbfc:	ldr	x1, [x0, #24]
    cc00:	ldr	w0, [sp, #44]
    cc04:	add	w2, w0, #0x1
    cc08:	str	w2, [sp, #44]
    cc0c:	sxtw	x0, w0
    cc10:	lsl	x0, x0, #3
    cc14:	add	x0, x1, x0
    cc18:	str	x0, [sp, #72]
    cc1c:	ldr	x1, [sp, #64]
    cc20:	ldr	x0, [sp, #72]
    cc24:	sub	x0, x1, x0
    cc28:	asr	x0, x0, #3
    cc2c:	str	w0, [sp, #48]
    cc30:	ldr	w0, [sp, #48]
    cc34:	cmp	w0, #0x1
    cc38:	b.eq	cc4c <XS_POSIX_issignaling+0x90>  // b.none
    cc3c:	adrp	x0, 1b000 <_fini+0x1fc>
    cc40:	add	x1, x0, #0x490
    cc44:	ldr	x0, [sp, #16]
    cc48:	bl	6b20 <Perl_croak_xs_usage@plt>
    cc4c:	ldr	x0, [sp, #24]
    cc50:	ldr	x1, [x0, #24]
    cc54:	ldrsw	x0, [sp, #44]
    cc58:	lsl	x0, x0, #3
    cc5c:	add	x0, x1, x0
    cc60:	ldr	x0, [x0]
    cc64:	ldr	w1, [x0, #12]
    cc68:	mov	w0, #0x200                 	// #512
    cc6c:	movk	w0, #0x20, lsl #16
    cc70:	and	w0, w1, w0
    cc74:	cmp	w0, #0x200
    cc78:	b.ne	cca0 <XS_POSIX_issignaling+0xe4>  // b.any
    cc7c:	ldr	x0, [sp, #24]
    cc80:	ldr	x1, [x0, #24]
    cc84:	ldrsw	x0, [sp, #44]
    cc88:	lsl	x0, x0, #3
    cc8c:	add	x0, x1, x0
    cc90:	ldr	x0, [x0]
    cc94:	ldr	x0, [x0]
    cc98:	ldr	d0, [x0, #40]
    cc9c:	b	ccc8 <XS_POSIX_issignaling+0x10c>
    cca0:	ldr	x0, [sp, #24]
    cca4:	ldr	x1, [x0, #24]
    cca8:	ldrsw	x0, [sp, #44]
    ccac:	lsl	x0, x0, #3
    ccb0:	add	x0, x1, x0
    ccb4:	ldr	x0, [x0]
    ccb8:	mov	w2, #0x2                   	// #2
    ccbc:	mov	x1, x0
    ccc0:	ldr	x0, [sp, #24]
    ccc4:	bl	6b80 <Perl_sv_2nv_flags@plt>
    ccc8:	str	d0, [sp, #56]
    cccc:	ldr	x0, [sp, #24]
    ccd0:	ldr	x0, [x0, #8]
    ccd4:	ldrb	w0, [x0, #35]
    ccd8:	and	w0, w0, #0x4
    ccdc:	cmp	w0, #0x0
    cce0:	b.eq	cd08 <XS_POSIX_issignaling+0x14c>  // b.none
    cce4:	ldr	x0, [sp, #24]
    cce8:	ldr	x1, [x0, #16]
    ccec:	ldr	x0, [sp, #24]
    ccf0:	ldr	x0, [x0, #8]
    ccf4:	ldr	x0, [x0, #24]
    ccf8:	lsl	x0, x0, #3
    ccfc:	add	x0, x1, x0
    cd00:	ldr	x0, [x0]
    cd04:	b	cd10 <XS_POSIX_issignaling+0x154>
    cd08:	ldr	x0, [sp, #24]
    cd0c:	bl	7160 <Perl_sv_newmortal@plt>
    cd10:	str	x0, [sp, #80]
    cd14:	ldr	d1, [sp, #56]
    cd18:	ldr	d0, [sp, #56]
    cd1c:	fcmp	d1, d0
    cd20:	b.vc	cd6c <XS_POSIX_issignaling+0x1b0>
    cd24:	add	x0, sp, #0x38
    cd28:	add	x0, x0, #0x6
    cd2c:	ldrb	w0, [x0]
    cd30:	and	w1, w0, #0x8
    cd34:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    cd38:	ldr	x0, [x0, #4016]
    cd3c:	add	x0, x0, #0x6
    cd40:	ldrb	w0, [x0]
    cd44:	and	w0, w0, #0x8
    cd48:	cmp	w0, #0x0
    cd4c:	b.eq	cd58 <XS_POSIX_issignaling+0x19c>  // b.none
    cd50:	mov	w0, #0x0                   	// #0
    cd54:	b	cd5c <XS_POSIX_issignaling+0x1a0>
    cd58:	mov	w0, #0x8                   	// #8
    cd5c:	cmp	w0, w1
    cd60:	b.ne	cd6c <XS_POSIX_issignaling+0x1b0>  // b.any
    cd64:	mov	w0, #0x1                   	// #1
    cd68:	b	cd70 <XS_POSIX_issignaling+0x1b4>
    cd6c:	mov	w0, #0x0                   	// #0
    cd70:	str	w0, [sp, #52]
    cd74:	ldr	x0, [sp, #24]
    cd78:	ldr	x1, [x0, #24]
    cd7c:	ldrsw	x0, [sp, #44]
    cd80:	lsl	x0, x0, #3
    cd84:	sub	x0, x0, #0x8
    cd88:	add	x0, x1, x0
    cd8c:	str	x0, [sp, #64]
    cd90:	ldrsw	x0, [sp, #52]
    cd94:	str	x0, [sp, #88]
    cd98:	ldr	x0, [sp, #80]
    cd9c:	ldr	w1, [x0, #12]
    cda0:	mov	w0, #0x8ff                 	// #2303
    cda4:	movk	w0, #0x9981, lsl #16
    cda8:	and	w0, w1, w0
    cdac:	cmp	w0, #0x1
    cdb0:	cset	w0, eq  // eq = none
    cdb4:	and	w0, w0, #0xff
    cdb8:	mov	w1, w0
    cdbc:	ldr	x0, [sp, #24]
    cdc0:	ldrb	w0, [x0, #185]
    cdc4:	eor	w0, w0, #0x1
    cdc8:	and	w0, w0, #0xff
    cdcc:	and	w0, w1, w0
    cdd0:	cmp	w0, #0x0
    cdd4:	cset	w0, ne  // ne = any
    cdd8:	and	w0, w0, #0xff
    cddc:	and	x0, x0, #0xff
    cde0:	cmp	x0, #0x0
    cde4:	b.eq	ce10 <XS_POSIX_issignaling+0x254>  // b.none
    cde8:	ldr	x0, [sp, #80]
    cdec:	ldr	w1, [x0, #12]
    cdf0:	mov	w0, #0x1100                	// #4352
    cdf4:	orr	w1, w1, w0
    cdf8:	ldr	x0, [sp, #80]
    cdfc:	str	w1, [x0, #12]
    ce00:	ldr	x0, [sp, #80]
    ce04:	ldr	x1, [sp, #88]
    ce08:	str	x1, [x0, #16]
    ce0c:	b	ce20 <XS_POSIX_issignaling+0x264>
    ce10:	ldr	x2, [sp, #88]
    ce14:	ldr	x1, [sp, #80]
    ce18:	ldr	x0, [sp, #24]
    ce1c:	bl	6880 <Perl_sv_setiv_mg@plt>
    ce20:	ldr	x0, [sp, #64]
    ce24:	add	x0, x0, #0x8
    ce28:	str	x0, [sp, #64]
    ce2c:	ldr	x0, [sp, #64]
    ce30:	ldr	x1, [sp, #80]
    ce34:	str	x1, [x0]
    ce38:	mov	x0, #0x1                   	// #1
    ce3c:	str	x0, [sp, #96]
    ce40:	ldr	x0, [sp, #24]
    ce44:	ldr	x1, [x0, #24]
    ce48:	ldrsw	x2, [sp, #44]
    ce4c:	ldr	x0, [sp, #96]
    ce50:	add	x0, x2, x0
    ce54:	lsl	x0, x0, #3
    ce58:	sub	x0, x0, #0x8
    ce5c:	add	x1, x1, x0
    ce60:	ldr	x0, [sp, #24]
    ce64:	str	x1, [x0]
    ce68:	nop
    ce6c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    ce70:	ldr	x0, [x0, #3992]
    ce74:	ldr	x1, [sp, #104]
    ce78:	ldr	x0, [x0]
    ce7c:	eor	x0, x1, x0
    ce80:	cmp	x0, #0x0
    ce84:	b.eq	ce8c <XS_POSIX_issignaling+0x2d0>  // b.none
    ce88:	bl	6a60 <__stack_chk_fail@plt>
    ce8c:	ldp	x29, x30, [sp], #112
    ce90:	ret

000000000000ce94 <XS_POSIX_copysign>:
    ce94:	stp	x29, x30, [sp, #-128]!
    ce98:	mov	x29, sp
    ce9c:	str	x0, [sp, #24]
    cea0:	str	x1, [sp, #16]
    cea4:	ldr	x0, [sp, #24]
    cea8:	ldr	x0, [x0]
    ceac:	str	x0, [sp, #64]
    ceb0:	ldr	x0, [sp, #24]
    ceb4:	bl	739c <S_POPMARK>
    ceb8:	str	w0, [sp, #44]
    cebc:	ldr	x0, [sp, #24]
    cec0:	ldr	x1, [x0, #24]
    cec4:	ldr	w0, [sp, #44]
    cec8:	add	w2, w0, #0x1
    cecc:	str	w2, [sp, #44]
    ced0:	sxtw	x0, w0
    ced4:	lsl	x0, x0, #3
    ced8:	add	x0, x1, x0
    cedc:	str	x0, [sp, #72]
    cee0:	ldr	x1, [sp, #64]
    cee4:	ldr	x0, [sp, #72]
    cee8:	sub	x0, x1, x0
    ceec:	asr	x0, x0, #3
    cef0:	str	w0, [sp, #48]
    cef4:	ldr	x0, [sp, #16]
    cef8:	ldr	x0, [x0]
    cefc:	str	x0, [sp, #80]
    cf00:	ldr	x0, [sp, #80]
    cf04:	ldr	w0, [x0, #40]
    cf08:	str	w0, [sp, #52]
    cf0c:	ldr	w0, [sp, #48]
    cf10:	cmp	w0, #0x2
    cf14:	b.eq	cf28 <XS_POSIX_copysign+0x94>  // b.none
    cf18:	adrp	x0, 1b000 <_fini+0x1fc>
    cf1c:	add	x1, x0, #0x4a8
    cf20:	ldr	x0, [sp, #16]
    cf24:	bl	6b20 <Perl_croak_xs_usage@plt>
    cf28:	ldr	x0, [sp, #24]
    cf2c:	ldr	x1, [x0, #24]
    cf30:	ldrsw	x0, [sp, #44]
    cf34:	lsl	x0, x0, #3
    cf38:	add	x0, x1, x0
    cf3c:	ldr	x0, [x0]
    cf40:	ldr	w1, [x0, #12]
    cf44:	mov	w0, #0x200                 	// #512
    cf48:	movk	w0, #0x20, lsl #16
    cf4c:	and	w0, w1, w0
    cf50:	cmp	w0, #0x200
    cf54:	b.ne	cf7c <XS_POSIX_copysign+0xe8>  // b.any
    cf58:	ldr	x0, [sp, #24]
    cf5c:	ldr	x1, [x0, #24]
    cf60:	ldrsw	x0, [sp, #44]
    cf64:	lsl	x0, x0, #3
    cf68:	add	x0, x1, x0
    cf6c:	ldr	x0, [x0]
    cf70:	ldr	x0, [x0]
    cf74:	ldr	d0, [x0, #40]
    cf78:	b	cfa4 <XS_POSIX_copysign+0x110>
    cf7c:	ldr	x0, [sp, #24]
    cf80:	ldr	x1, [x0, #24]
    cf84:	ldrsw	x0, [sp, #44]
    cf88:	lsl	x0, x0, #3
    cf8c:	add	x0, x1, x0
    cf90:	ldr	x0, [x0]
    cf94:	mov	w2, #0x2                   	// #2
    cf98:	mov	x1, x0
    cf9c:	ldr	x0, [sp, #24]
    cfa0:	bl	6b80 <Perl_sv_2nv_flags@plt>
    cfa4:	str	d0, [sp, #88]
    cfa8:	ldr	x0, [sp, #24]
    cfac:	ldr	x1, [x0, #24]
    cfb0:	ldrsw	x0, [sp, #44]
    cfb4:	add	x0, x0, #0x1
    cfb8:	lsl	x0, x0, #3
    cfbc:	add	x0, x1, x0
    cfc0:	ldr	x0, [x0]
    cfc4:	ldr	w1, [x0, #12]
    cfc8:	mov	w0, #0x200                 	// #512
    cfcc:	movk	w0, #0x20, lsl #16
    cfd0:	and	w0, w1, w0
    cfd4:	cmp	w0, #0x200
    cfd8:	b.ne	d004 <XS_POSIX_copysign+0x170>  // b.any
    cfdc:	ldr	x0, [sp, #24]
    cfe0:	ldr	x1, [x0, #24]
    cfe4:	ldrsw	x0, [sp, #44]
    cfe8:	add	x0, x0, #0x1
    cfec:	lsl	x0, x0, #3
    cff0:	add	x0, x1, x0
    cff4:	ldr	x0, [x0]
    cff8:	ldr	x0, [x0]
    cffc:	ldr	d0, [x0, #40]
    d000:	b	d030 <XS_POSIX_copysign+0x19c>
    d004:	ldr	x0, [sp, #24]
    d008:	ldr	x1, [x0, #24]
    d00c:	ldrsw	x0, [sp, #44]
    d010:	add	x0, x0, #0x1
    d014:	lsl	x0, x0, #3
    d018:	add	x0, x1, x0
    d01c:	ldr	x0, [x0]
    d020:	mov	w2, #0x2                   	// #2
    d024:	mov	x1, x0
    d028:	ldr	x0, [sp, #24]
    d02c:	bl	6b80 <Perl_sv_2nv_flags@plt>
    d030:	str	d0, [sp, #96]
    d034:	ldr	x0, [sp, #24]
    d038:	ldr	x0, [x0, #8]
    d03c:	ldrb	w0, [x0, #35]
    d040:	and	w0, w0, #0x4
    d044:	cmp	w0, #0x0
    d048:	b.eq	d070 <XS_POSIX_copysign+0x1dc>  // b.none
    d04c:	ldr	x0, [sp, #24]
    d050:	ldr	x1, [x0, #16]
    d054:	ldr	x0, [sp, #24]
    d058:	ldr	x0, [x0, #8]
    d05c:	ldr	x0, [x0, #24]
    d060:	lsl	x0, x0, #3
    d064:	add	x0, x1, x0
    d068:	ldr	x0, [x0]
    d06c:	b	d078 <XS_POSIX_copysign+0x1e4>
    d070:	ldr	x0, [sp, #24]
    d074:	bl	7160 <Perl_sv_newmortal@plt>
    d078:	str	x0, [sp, #104]
    d07c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    d080:	ldr	x0, [x0, #4016]
    d084:	ldr	d0, [x0]
    d088:	str	d0, [sp, #56]
    d08c:	ldr	w0, [sp, #52]
    d090:	cmp	w0, #0xd
    d094:	b.eq	d358 <XS_POSIX_copysign+0x4c4>  // b.none
    d098:	ldr	w0, [sp, #52]
    d09c:	cmp	w0, #0xd
    d0a0:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d0a4:	ldr	w0, [sp, #52]
    d0a8:	cmp	w0, #0xc
    d0ac:	b.eq	d344 <XS_POSIX_copysign+0x4b0>  // b.none
    d0b0:	ldr	w0, [sp, #52]
    d0b4:	cmp	w0, #0xc
    d0b8:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d0bc:	ldr	w0, [sp, #52]
    d0c0:	cmp	w0, #0xb
    d0c4:	b.eq	d320 <XS_POSIX_copysign+0x48c>  // b.none
    d0c8:	ldr	w0, [sp, #52]
    d0cc:	cmp	w0, #0xb
    d0d0:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d0d4:	ldr	w0, [sp, #52]
    d0d8:	cmp	w0, #0xa
    d0dc:	b.eq	d2e0 <XS_POSIX_copysign+0x44c>  // b.none
    d0e0:	ldr	w0, [sp, #52]
    d0e4:	cmp	w0, #0xa
    d0e8:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d0ec:	ldr	w0, [sp, #52]
    d0f0:	cmp	w0, #0x9
    d0f4:	b.eq	d2b8 <XS_POSIX_copysign+0x424>  // b.none
    d0f8:	ldr	w0, [sp, #52]
    d0fc:	cmp	w0, #0x9
    d100:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d104:	ldr	w0, [sp, #52]
    d108:	cmp	w0, #0x8
    d10c:	b.eq	d290 <XS_POSIX_copysign+0x3fc>  // b.none
    d110:	ldr	w0, [sp, #52]
    d114:	cmp	w0, #0x8
    d118:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d11c:	ldr	w0, [sp, #52]
    d120:	cmp	w0, #0x7
    d124:	b.eq	d268 <XS_POSIX_copysign+0x3d4>  // b.none
    d128:	ldr	w0, [sp, #52]
    d12c:	cmp	w0, #0x7
    d130:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d134:	ldr	w0, [sp, #52]
    d138:	cmp	w0, #0x6
    d13c:	b.eq	d240 <XS_POSIX_copysign+0x3ac>  // b.none
    d140:	ldr	w0, [sp, #52]
    d144:	cmp	w0, #0x6
    d148:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d14c:	ldr	w0, [sp, #52]
    d150:	cmp	w0, #0x5
    d154:	b.eq	d22c <XS_POSIX_copysign+0x398>  // b.none
    d158:	ldr	w0, [sp, #52]
    d15c:	cmp	w0, #0x5
    d160:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d164:	ldr	w0, [sp, #52]
    d168:	cmp	w0, #0x4
    d16c:	b.eq	d218 <XS_POSIX_copysign+0x384>  // b.none
    d170:	ldr	w0, [sp, #52]
    d174:	cmp	w0, #0x4
    d178:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d17c:	ldr	w0, [sp, #52]
    d180:	cmp	w0, #0x3
    d184:	b.eq	d204 <XS_POSIX_copysign+0x370>  // b.none
    d188:	ldr	w0, [sp, #52]
    d18c:	cmp	w0, #0x3
    d190:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d194:	ldr	w0, [sp, #52]
    d198:	cmp	w0, #0x2
    d19c:	b.eq	d1f0 <XS_POSIX_copysign+0x35c>  // b.none
    d1a0:	ldr	w0, [sp, #52]
    d1a4:	cmp	w0, #0x2
    d1a8:	b.gt	d374 <XS_POSIX_copysign+0x4e0>
    d1ac:	ldr	w0, [sp, #52]
    d1b0:	cmp	w0, #0x0
    d1b4:	b.eq	d1c8 <XS_POSIX_copysign+0x334>  // b.none
    d1b8:	ldr	w0, [sp, #52]
    d1bc:	cmp	w0, #0x1
    d1c0:	b.eq	d1dc <XS_POSIX_copysign+0x348>  // b.none
    d1c4:	b	d374 <XS_POSIX_copysign+0x4e0>
    d1c8:	ldr	d1, [sp, #96]
    d1cc:	ldr	d0, [sp, #88]
    d1d0:	bl	6600 <copysign@plt>
    d1d4:	str	d0, [sp, #56]
    d1d8:	b	d388 <XS_POSIX_copysign+0x4f4>
    d1dc:	ldr	d1, [sp, #96]
    d1e0:	ldr	d0, [sp, #88]
    d1e4:	bl	6840 <fdim@plt>
    d1e8:	str	d0, [sp, #56]
    d1ec:	b	d388 <XS_POSIX_copysign+0x4f4>
    d1f0:	ldr	d1, [sp, #96]
    d1f4:	ldr	d0, [sp, #88]
    d1f8:	bl	68d0 <fmax@plt>
    d1fc:	str	d0, [sp, #56]
    d200:	b	d388 <XS_POSIX_copysign+0x4f4>
    d204:	ldr	d1, [sp, #96]
    d208:	ldr	d0, [sp, #88]
    d20c:	bl	7180 <fmin@plt>
    d210:	str	d0, [sp, #56]
    d214:	b	d388 <XS_POSIX_copysign+0x4f4>
    d218:	ldr	d1, [sp, #96]
    d21c:	ldr	d0, [sp, #88]
    d220:	bl	6f90 <fmod@plt>
    d224:	str	d0, [sp, #56]
    d228:	b	d388 <XS_POSIX_copysign+0x4f4>
    d22c:	ldr	d1, [sp, #96]
    d230:	ldr	d0, [sp, #88]
    d234:	bl	6a10 <hypot@plt>
    d238:	str	d0, [sp, #56]
    d23c:	b	d388 <XS_POSIX_copysign+0x4f4>
    d240:	ldr	d1, [sp, #88]
    d244:	ldr	d0, [sp, #96]
    d248:	fcmp	d1, d0
    d24c:	cset	w0, le
    d250:	and	w0, w0, #0xff
    d254:	eor	w0, w0, #0x1
    d258:	and	w0, w0, #0xff
    d25c:	scvtf	d0, w0
    d260:	str	d0, [sp, #56]
    d264:	b	d388 <XS_POSIX_copysign+0x4f4>
    d268:	ldr	d1, [sp, #88]
    d26c:	ldr	d0, [sp, #96]
    d270:	fcmp	d1, d0
    d274:	cset	w0, lt  // lt = tstop
    d278:	and	w0, w0, #0xff
    d27c:	eor	w0, w0, #0x1
    d280:	and	w0, w0, #0xff
    d284:	scvtf	d0, w0
    d288:	str	d0, [sp, #56]
    d28c:	b	d388 <XS_POSIX_copysign+0x4f4>
    d290:	ldr	d1, [sp, #88]
    d294:	ldr	d0, [sp, #96]
    d298:	fcmp	d1, d0
    d29c:	cset	w0, pl  // pl = nfrst
    d2a0:	and	w0, w0, #0xff
    d2a4:	eor	w0, w0, #0x1
    d2a8:	and	w0, w0, #0xff
    d2ac:	scvtf	d0, w0
    d2b0:	str	d0, [sp, #56]
    d2b4:	b	d388 <XS_POSIX_copysign+0x4f4>
    d2b8:	ldr	d1, [sp, #88]
    d2bc:	ldr	d0, [sp, #96]
    d2c0:	fcmp	d1, d0
    d2c4:	cset	w0, hi  // hi = pmore
    d2c8:	and	w0, w0, #0xff
    d2cc:	eor	w0, w0, #0x1
    d2d0:	and	w0, w0, #0xff
    d2d4:	scvtf	d0, w0
    d2d8:	str	d0, [sp, #56]
    d2dc:	b	d388 <XS_POSIX_copysign+0x4f4>
    d2e0:	ldr	d1, [sp, #88]
    d2e4:	ldr	d0, [sp, #96]
    d2e8:	fcmp	d1, d0
    d2ec:	cset	w0, vs
    d2f0:	mov	w1, w0
    d2f4:	ldr	d1, [sp, #88]
    d2f8:	ldr	d0, [sp, #96]
    d2fc:	mov	w0, #0x1                   	// #1
    d300:	fcmp	d1, d0
    d304:	csel	w0, w1, w0, ne  // ne = any
    d308:	and	w0, w0, #0xff
    d30c:	eor	w0, w0, #0x1
    d310:	and	w0, w0, #0xff
    d314:	scvtf	d0, w0
    d318:	str	d0, [sp, #56]
    d31c:	b	d388 <XS_POSIX_copysign+0x4f4>
    d320:	ldr	d1, [sp, #88]
    d324:	ldr	d0, [sp, #96]
    d328:	fcmp	d1, d0
    d32c:	b.vc	d338 <XS_POSIX_copysign+0x4a4>
    d330:	fmov	d0, #1.000000000000000000e+00
    d334:	b	d33c <XS_POSIX_copysign+0x4a8>
    d338:	movi	d0, #0x0
    d33c:	str	d0, [sp, #56]
    d340:	b	d388 <XS_POSIX_copysign+0x4f4>
    d344:	ldr	d1, [sp, #96]
    d348:	ldr	d0, [sp, #88]
    d34c:	bl	6e50 <nextafter@plt>
    d350:	str	d0, [sp, #56]
    d354:	b	d388 <XS_POSIX_copysign+0x4f4>
    d358:	ldr	d0, [sp, #96]
    d35c:	bl	1a4a8 <__extenddftf2>
    d360:	mov	v1.16b, v0.16b
    d364:	ldr	d0, [sp, #88]
    d368:	bl	6bd0 <nexttoward@plt>
    d36c:	str	d0, [sp, #56]
    d370:	b	d388 <XS_POSIX_copysign+0x4f4>
    d374:	ldr	d1, [sp, #96]
    d378:	ldr	d0, [sp, #88]
    d37c:	bl	6690 <remainder@plt>
    d380:	str	d0, [sp, #56]
    d384:	nop
    d388:	ldr	x0, [sp, #24]
    d38c:	ldr	x1, [x0, #24]
    d390:	ldrsw	x0, [sp, #44]
    d394:	lsl	x0, x0, #3
    d398:	sub	x0, x0, #0x8
    d39c:	add	x0, x1, x0
    d3a0:	str	x0, [sp, #64]
    d3a4:	ldr	d0, [sp, #56]
    d3a8:	str	d0, [sp, #112]
    d3ac:	ldr	x0, [sp, #104]
    d3b0:	ldr	w1, [x0, #12]
    d3b4:	mov	w0, #0x8ff                 	// #2303
    d3b8:	movk	w0, #0x1981, lsl #16
    d3bc:	and	w0, w1, w0
    d3c0:	cmp	w0, #0x2
    d3c4:	cset	w0, eq  // eq = none
    d3c8:	and	w0, w0, #0xff
    d3cc:	mov	w1, w0
    d3d0:	ldr	x0, [sp, #24]
    d3d4:	ldrb	w0, [x0, #185]
    d3d8:	eor	w0, w0, #0x1
    d3dc:	and	w0, w0, #0xff
    d3e0:	and	w0, w1, w0
    d3e4:	cmp	w0, #0x0
    d3e8:	cset	w0, ne  // ne = any
    d3ec:	and	w0, w0, #0xff
    d3f0:	and	x0, x0, #0xff
    d3f4:	cmp	x0, #0x0
    d3f8:	b.eq	d428 <XS_POSIX_copysign+0x594>  // b.none
    d3fc:	ldr	x0, [sp, #104]
    d400:	ldr	w1, [x0, #12]
    d404:	mov	w0, #0x2200                	// #8704
    d408:	orr	w1, w1, w0
    d40c:	ldr	x0, [sp, #104]
    d410:	str	w1, [x0, #12]
    d414:	ldr	x0, [sp, #104]
    d418:	ldr	x0, [x0]
    d41c:	ldr	d0, [sp, #112]
    d420:	str	d0, [x0, #40]
    d424:	b	d438 <XS_POSIX_copysign+0x5a4>
    d428:	ldr	d0, [sp, #112]
    d42c:	ldr	x1, [sp, #104]
    d430:	ldr	x0, [sp, #24]
    d434:	bl	6960 <Perl_sv_setnv_mg@plt>
    d438:	ldr	x0, [sp, #64]
    d43c:	add	x0, x0, #0x8
    d440:	str	x0, [sp, #64]
    d444:	ldr	x0, [sp, #64]
    d448:	ldr	x1, [sp, #104]
    d44c:	str	x1, [x0]
    d450:	mov	x0, #0x1                   	// #1
    d454:	str	x0, [sp, #120]
    d458:	ldr	x0, [sp, #24]
    d45c:	ldr	x1, [x0, #24]
    d460:	ldrsw	x2, [sp, #44]
    d464:	ldr	x0, [sp, #120]
    d468:	add	x0, x2, x0
    d46c:	lsl	x0, x0, #3
    d470:	sub	x0, x0, #0x8
    d474:	add	x1, x1, x0
    d478:	ldr	x0, [sp, #24]
    d47c:	str	x1, [x0]
    d480:	nop
    d484:	ldp	x29, x30, [sp], #128
    d488:	ret

000000000000d48c <XS_POSIX_frexp>:
    d48c:	stp	x29, x30, [sp, #-80]!
    d490:	mov	x29, sp
    d494:	str	x0, [sp, #24]
    d498:	str	x1, [sp, #16]
    d49c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    d4a0:	ldr	x0, [x0, #3992]
    d4a4:	ldr	x1, [x0]
    d4a8:	str	x1, [sp, #72]
    d4ac:	mov	x1, #0x0                   	// #0
    d4b0:	ldr	x0, [sp, #24]
    d4b4:	ldr	x0, [x0]
    d4b8:	str	x0, [sp, #48]
    d4bc:	ldr	x0, [sp, #24]
    d4c0:	bl	739c <S_POPMARK>
    d4c4:	str	w0, [sp, #40]
    d4c8:	ldr	x0, [sp, #24]
    d4cc:	ldr	x1, [x0, #24]
    d4d0:	ldr	w0, [sp, #40]
    d4d4:	add	w2, w0, #0x1
    d4d8:	str	w2, [sp, #40]
    d4dc:	sxtw	x0, w0
    d4e0:	lsl	x0, x0, #3
    d4e4:	add	x0, x1, x0
    d4e8:	str	x0, [sp, #56]
    d4ec:	ldr	x1, [sp, #48]
    d4f0:	ldr	x0, [sp, #56]
    d4f4:	sub	x0, x1, x0
    d4f8:	asr	x0, x0, #3
    d4fc:	str	w0, [sp, #44]
    d500:	ldr	w0, [sp, #44]
    d504:	cmp	w0, #0x1
    d508:	b.eq	d51c <XS_POSIX_frexp+0x90>  // b.none
    d50c:	adrp	x0, 1b000 <_fini+0x1fc>
    d510:	add	x1, x0, #0x410
    d514:	ldr	x0, [sp, #16]
    d518:	bl	6b20 <Perl_croak_xs_usage@plt>
    d51c:	ldrsw	x0, [sp, #44]
    d520:	lsl	x0, x0, #3
    d524:	neg	x0, x0
    d528:	ldr	x1, [sp, #48]
    d52c:	add	x0, x1, x0
    d530:	str	x0, [sp, #48]
    d534:	ldr	x0, [sp, #24]
    d538:	ldr	x1, [x0, #24]
    d53c:	ldrsw	x0, [sp, #40]
    d540:	lsl	x0, x0, #3
    d544:	add	x0, x1, x0
    d548:	ldr	x0, [x0]
    d54c:	ldr	w1, [x0, #12]
    d550:	mov	w0, #0x200                 	// #512
    d554:	movk	w0, #0x20, lsl #16
    d558:	and	w0, w1, w0
    d55c:	cmp	w0, #0x200
    d560:	b.ne	d588 <XS_POSIX_frexp+0xfc>  // b.any
    d564:	ldr	x0, [sp, #24]
    d568:	ldr	x1, [x0, #24]
    d56c:	ldrsw	x0, [sp, #40]
    d570:	lsl	x0, x0, #3
    d574:	add	x0, x1, x0
    d578:	ldr	x0, [x0]
    d57c:	ldr	x0, [x0]
    d580:	ldr	d0, [x0, #40]
    d584:	b	d5b0 <XS_POSIX_frexp+0x124>
    d588:	ldr	x0, [sp, #24]
    d58c:	ldr	x1, [x0, #24]
    d590:	ldrsw	x0, [sp, #40]
    d594:	lsl	x0, x0, #3
    d598:	add	x0, x1, x0
    d59c:	ldr	x0, [x0]
    d5a0:	mov	w2, #0x2                   	// #2
    d5a4:	mov	x1, x0
    d5a8:	ldr	x0, [sp, #24]
    d5ac:	bl	6b80 <Perl_sv_2nv_flags@plt>
    d5b0:	str	d0, [sp, #64]
    d5b4:	add	x0, sp, #0x24
    d5b8:	ldr	d0, [sp, #64]
    d5bc:	bl	6de0 <frexp@plt>
    d5c0:	ldr	x0, [sp, #24]
    d5c4:	bl	6920 <Perl_newSVnv@plt>
    d5c8:	mov	x1, x0
    d5cc:	ldr	x0, [sp, #48]
    d5d0:	add	x0, x0, #0x8
    d5d4:	str	x0, [sp, #48]
    d5d8:	ldr	x0, [sp, #24]
    d5dc:	bl	6d60 <Perl_sv_2mortal@plt>
    d5e0:	mov	x1, x0
    d5e4:	ldr	x0, [sp, #48]
    d5e8:	str	x1, [x0]
    d5ec:	ldr	w0, [sp, #36]
    d5f0:	sxtw	x0, w0
    d5f4:	mov	x1, x0
    d5f8:	ldr	x0, [sp, #24]
    d5fc:	bl	70b0 <Perl_newSViv@plt>
    d600:	mov	x1, x0
    d604:	ldr	x0, [sp, #48]
    d608:	add	x0, x0, #0x8
    d60c:	str	x0, [sp, #48]
    d610:	ldr	x0, [sp, #24]
    d614:	bl	6d60 <Perl_sv_2mortal@plt>
    d618:	mov	x1, x0
    d61c:	ldr	x0, [sp, #48]
    d620:	str	x1, [x0]
    d624:	ldr	x0, [sp, #24]
    d628:	ldr	x1, [sp, #48]
    d62c:	str	x1, [x0]
    d630:	nop
    d634:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    d638:	ldr	x0, [x0, #3992]
    d63c:	ldr	x1, [sp, #72]
    d640:	ldr	x0, [x0]
    d644:	eor	x0, x1, x0
    d648:	cmp	x0, #0x0
    d64c:	b.eq	d654 <XS_POSIX_frexp+0x1c8>  // b.none
    d650:	bl	6a60 <__stack_chk_fail@plt>
    d654:	ldp	x29, x30, [sp], #80
    d658:	ret

000000000000d65c <XS_POSIX_ldexp>:
    d65c:	stp	x29, x30, [sp, #-112]!
    d660:	mov	x29, sp
    d664:	str	x0, [sp, #24]
    d668:	str	x1, [sp, #16]
    d66c:	ldr	x0, [sp, #24]
    d670:	ldr	x0, [x0]
    d674:	str	x0, [sp, #56]
    d678:	ldr	x0, [sp, #24]
    d67c:	bl	739c <S_POPMARK>
    d680:	str	w0, [sp, #44]
    d684:	ldr	x0, [sp, #24]
    d688:	ldr	x1, [x0, #24]
    d68c:	ldr	w0, [sp, #44]
    d690:	add	w2, w0, #0x1
    d694:	str	w2, [sp, #44]
    d698:	sxtw	x0, w0
    d69c:	lsl	x0, x0, #3
    d6a0:	add	x0, x1, x0
    d6a4:	str	x0, [sp, #64]
    d6a8:	ldr	x1, [sp, #56]
    d6ac:	ldr	x0, [sp, #64]
    d6b0:	sub	x0, x1, x0
    d6b4:	asr	x0, x0, #3
    d6b8:	str	w0, [sp, #48]
    d6bc:	ldr	w0, [sp, #48]
    d6c0:	cmp	w0, #0x2
    d6c4:	b.eq	d6d8 <XS_POSIX_ldexp+0x7c>  // b.none
    d6c8:	adrp	x0, 1b000 <_fini+0x1fc>
    d6cc:	add	x1, x0, #0x4b0
    d6d0:	ldr	x0, [sp, #16]
    d6d4:	bl	6b20 <Perl_croak_xs_usage@plt>
    d6d8:	ldr	x0, [sp, #24]
    d6dc:	ldr	x1, [x0, #24]
    d6e0:	ldrsw	x0, [sp, #44]
    d6e4:	lsl	x0, x0, #3
    d6e8:	add	x0, x1, x0
    d6ec:	ldr	x0, [x0]
    d6f0:	ldr	w1, [x0, #12]
    d6f4:	mov	w0, #0x200                 	// #512
    d6f8:	movk	w0, #0x20, lsl #16
    d6fc:	and	w0, w1, w0
    d700:	cmp	w0, #0x200
    d704:	b.ne	d72c <XS_POSIX_ldexp+0xd0>  // b.any
    d708:	ldr	x0, [sp, #24]
    d70c:	ldr	x1, [x0, #24]
    d710:	ldrsw	x0, [sp, #44]
    d714:	lsl	x0, x0, #3
    d718:	add	x0, x1, x0
    d71c:	ldr	x0, [x0]
    d720:	ldr	x0, [x0]
    d724:	ldr	d0, [x0, #40]
    d728:	b	d754 <XS_POSIX_ldexp+0xf8>
    d72c:	ldr	x0, [sp, #24]
    d730:	ldr	x1, [x0, #24]
    d734:	ldrsw	x0, [sp, #44]
    d738:	lsl	x0, x0, #3
    d73c:	add	x0, x1, x0
    d740:	ldr	x0, [x0]
    d744:	mov	w2, #0x2                   	// #2
    d748:	mov	x1, x0
    d74c:	ldr	x0, [sp, #24]
    d750:	bl	6b80 <Perl_sv_2nv_flags@plt>
    d754:	str	d0, [sp, #72]
    d758:	ldr	x0, [sp, #24]
    d75c:	ldr	x1, [x0, #24]
    d760:	ldrsw	x0, [sp, #44]
    d764:	add	x0, x0, #0x1
    d768:	lsl	x0, x0, #3
    d76c:	add	x0, x1, x0
    d770:	ldr	x0, [x0]
    d774:	ldr	w1, [x0, #12]
    d778:	mov	w0, #0x100                 	// #256
    d77c:	movk	w0, #0x20, lsl #16
    d780:	and	w0, w1, w0
    d784:	cmp	w0, #0x100
    d788:	b.ne	d7b4 <XS_POSIX_ldexp+0x158>  // b.any
    d78c:	ldr	x0, [sp, #24]
    d790:	ldr	x1, [x0, #24]
    d794:	ldrsw	x0, [sp, #44]
    d798:	add	x0, x0, #0x1
    d79c:	lsl	x0, x0, #3
    d7a0:	add	x0, x1, x0
    d7a4:	ldr	x0, [x0]
    d7a8:	ldr	x0, [x0]
    d7ac:	ldr	x0, [x0, #32]
    d7b0:	b	d7e0 <XS_POSIX_ldexp+0x184>
    d7b4:	ldr	x0, [sp, #24]
    d7b8:	ldr	x1, [x0, #24]
    d7bc:	ldrsw	x0, [sp, #44]
    d7c0:	add	x0, x0, #0x1
    d7c4:	lsl	x0, x0, #3
    d7c8:	add	x0, x1, x0
    d7cc:	ldr	x0, [x0]
    d7d0:	mov	w2, #0x2                   	// #2
    d7d4:	mov	x1, x0
    d7d8:	ldr	x0, [sp, #24]
    d7dc:	bl	6560 <Perl_sv_2iv_flags@plt>
    d7e0:	str	w0, [sp, #52]
    d7e4:	ldr	x0, [sp, #24]
    d7e8:	ldr	x0, [x0, #8]
    d7ec:	ldrb	w0, [x0, #35]
    d7f0:	and	w0, w0, #0x4
    d7f4:	cmp	w0, #0x0
    d7f8:	b.eq	d820 <XS_POSIX_ldexp+0x1c4>  // b.none
    d7fc:	ldr	x0, [sp, #24]
    d800:	ldr	x1, [x0, #16]
    d804:	ldr	x0, [sp, #24]
    d808:	ldr	x0, [x0, #8]
    d80c:	ldr	x0, [x0, #24]
    d810:	lsl	x0, x0, #3
    d814:	add	x0, x1, x0
    d818:	ldr	x0, [x0]
    d81c:	b	d828 <XS_POSIX_ldexp+0x1cc>
    d820:	ldr	x0, [sp, #24]
    d824:	bl	7160 <Perl_sv_newmortal@plt>
    d828:	str	x0, [sp, #80]
    d82c:	ldr	w0, [sp, #52]
    d830:	ldr	d0, [sp, #72]
    d834:	bl	66f0 <ldexp@plt>
    d838:	str	d0, [sp, #88]
    d83c:	ldr	x0, [sp, #24]
    d840:	ldr	x1, [x0, #24]
    d844:	ldrsw	x0, [sp, #44]
    d848:	lsl	x0, x0, #3
    d84c:	sub	x0, x0, #0x8
    d850:	add	x0, x1, x0
    d854:	str	x0, [sp, #56]
    d858:	ldr	d0, [sp, #88]
    d85c:	str	d0, [sp, #96]
    d860:	ldr	x0, [sp, #80]
    d864:	ldr	w1, [x0, #12]
    d868:	mov	w0, #0x8ff                 	// #2303
    d86c:	movk	w0, #0x1981, lsl #16
    d870:	and	w0, w1, w0
    d874:	cmp	w0, #0x2
    d878:	cset	w0, eq  // eq = none
    d87c:	and	w0, w0, #0xff
    d880:	mov	w1, w0
    d884:	ldr	x0, [sp, #24]
    d888:	ldrb	w0, [x0, #185]
    d88c:	eor	w0, w0, #0x1
    d890:	and	w0, w0, #0xff
    d894:	and	w0, w1, w0
    d898:	cmp	w0, #0x0
    d89c:	cset	w0, ne  // ne = any
    d8a0:	and	w0, w0, #0xff
    d8a4:	and	x0, x0, #0xff
    d8a8:	cmp	x0, #0x0
    d8ac:	b.eq	d8dc <XS_POSIX_ldexp+0x280>  // b.none
    d8b0:	ldr	x0, [sp, #80]
    d8b4:	ldr	w1, [x0, #12]
    d8b8:	mov	w0, #0x2200                	// #8704
    d8bc:	orr	w1, w1, w0
    d8c0:	ldr	x0, [sp, #80]
    d8c4:	str	w1, [x0, #12]
    d8c8:	ldr	x0, [sp, #80]
    d8cc:	ldr	x0, [x0]
    d8d0:	ldr	d0, [sp, #96]
    d8d4:	str	d0, [x0, #40]
    d8d8:	b	d8ec <XS_POSIX_ldexp+0x290>
    d8dc:	ldr	d0, [sp, #96]
    d8e0:	ldr	x1, [sp, #80]
    d8e4:	ldr	x0, [sp, #24]
    d8e8:	bl	6960 <Perl_sv_setnv_mg@plt>
    d8ec:	ldr	x0, [sp, #56]
    d8f0:	add	x0, x0, #0x8
    d8f4:	str	x0, [sp, #56]
    d8f8:	ldr	x0, [sp, #56]
    d8fc:	ldr	x1, [sp, #80]
    d900:	str	x1, [x0]
    d904:	mov	x0, #0x1                   	// #1
    d908:	str	x0, [sp, #104]
    d90c:	ldr	x0, [sp, #24]
    d910:	ldr	x1, [x0, #24]
    d914:	ldrsw	x2, [sp, #44]
    d918:	ldr	x0, [sp, #104]
    d91c:	add	x0, x2, x0
    d920:	lsl	x0, x0, #3
    d924:	sub	x0, x0, #0x8
    d928:	add	x1, x1, x0
    d92c:	ldr	x0, [sp, #24]
    d930:	str	x1, [x0]
    d934:	nop
    d938:	ldp	x29, x30, [sp], #112
    d93c:	ret

000000000000d940 <XS_POSIX_modf>:
    d940:	stp	x29, x30, [sp, #-80]!
    d944:	mov	x29, sp
    d948:	str	x0, [sp, #24]
    d94c:	str	x1, [sp, #16]
    d950:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    d954:	ldr	x0, [x0, #3992]
    d958:	ldr	x1, [x0]
    d95c:	str	x1, [sp, #72]
    d960:	mov	x1, #0x0                   	// #0
    d964:	ldr	x0, [sp, #24]
    d968:	ldr	x0, [x0]
    d96c:	str	x0, [sp, #48]
    d970:	ldr	x0, [sp, #24]
    d974:	bl	739c <S_POPMARK>
    d978:	str	w0, [sp, #32]
    d97c:	ldr	x0, [sp, #24]
    d980:	ldr	x1, [x0, #24]
    d984:	ldr	w0, [sp, #32]
    d988:	add	w2, w0, #0x1
    d98c:	str	w2, [sp, #32]
    d990:	sxtw	x0, w0
    d994:	lsl	x0, x0, #3
    d998:	add	x0, x1, x0
    d99c:	str	x0, [sp, #56]
    d9a0:	ldr	x1, [sp, #48]
    d9a4:	ldr	x0, [sp, #56]
    d9a8:	sub	x0, x1, x0
    d9ac:	asr	x0, x0, #3
    d9b0:	str	w0, [sp, #36]
    d9b4:	ldr	w0, [sp, #36]
    d9b8:	cmp	w0, #0x1
    d9bc:	b.eq	d9d0 <XS_POSIX_modf+0x90>  // b.none
    d9c0:	adrp	x0, 1b000 <_fini+0x1fc>
    d9c4:	add	x1, x0, #0x410
    d9c8:	ldr	x0, [sp, #16]
    d9cc:	bl	6b20 <Perl_croak_xs_usage@plt>
    d9d0:	ldrsw	x0, [sp, #36]
    d9d4:	lsl	x0, x0, #3
    d9d8:	neg	x0, x0
    d9dc:	ldr	x1, [sp, #48]
    d9e0:	add	x0, x1, x0
    d9e4:	str	x0, [sp, #48]
    d9e8:	ldr	x0, [sp, #24]
    d9ec:	ldr	x1, [x0, #24]
    d9f0:	ldrsw	x0, [sp, #32]
    d9f4:	lsl	x0, x0, #3
    d9f8:	add	x0, x1, x0
    d9fc:	ldr	x0, [x0]
    da00:	ldr	w1, [x0, #12]
    da04:	mov	w0, #0x200                 	// #512
    da08:	movk	w0, #0x20, lsl #16
    da0c:	and	w0, w1, w0
    da10:	cmp	w0, #0x200
    da14:	b.ne	da3c <XS_POSIX_modf+0xfc>  // b.any
    da18:	ldr	x0, [sp, #24]
    da1c:	ldr	x1, [x0, #24]
    da20:	ldrsw	x0, [sp, #32]
    da24:	lsl	x0, x0, #3
    da28:	add	x0, x1, x0
    da2c:	ldr	x0, [x0]
    da30:	ldr	x0, [x0]
    da34:	ldr	d0, [x0, #40]
    da38:	b	da64 <XS_POSIX_modf+0x124>
    da3c:	ldr	x0, [sp, #24]
    da40:	ldr	x1, [x0, #24]
    da44:	ldrsw	x0, [sp, #32]
    da48:	lsl	x0, x0, #3
    da4c:	add	x0, x1, x0
    da50:	ldr	x0, [x0]
    da54:	mov	w2, #0x2                   	// #2
    da58:	mov	x1, x0
    da5c:	ldr	x0, [sp, #24]
    da60:	bl	6b80 <Perl_sv_2nv_flags@plt>
    da64:	str	d0, [sp, #64]
    da68:	add	x0, sp, #0x28
    da6c:	ldr	d0, [sp, #64]
    da70:	bl	6da0 <modf@plt>
    da74:	ldr	x0, [sp, #24]
    da78:	bl	6920 <Perl_newSVnv@plt>
    da7c:	mov	x1, x0
    da80:	ldr	x0, [sp, #48]
    da84:	add	x0, x0, #0x8
    da88:	str	x0, [sp, #48]
    da8c:	ldr	x0, [sp, #24]
    da90:	bl	6d60 <Perl_sv_2mortal@plt>
    da94:	mov	x1, x0
    da98:	ldr	x0, [sp, #48]
    da9c:	str	x1, [x0]
    daa0:	ldr	d0, [sp, #40]
    daa4:	ldr	x0, [sp, #24]
    daa8:	bl	6920 <Perl_newSVnv@plt>
    daac:	mov	x1, x0
    dab0:	ldr	x0, [sp, #48]
    dab4:	add	x0, x0, #0x8
    dab8:	str	x0, [sp, #48]
    dabc:	ldr	x0, [sp, #24]
    dac0:	bl	6d60 <Perl_sv_2mortal@plt>
    dac4:	mov	x1, x0
    dac8:	ldr	x0, [sp, #48]
    dacc:	str	x1, [x0]
    dad0:	ldr	x0, [sp, #24]
    dad4:	ldr	x1, [sp, #48]
    dad8:	str	x1, [x0]
    dadc:	nop
    dae0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    dae4:	ldr	x0, [x0, #3992]
    dae8:	ldr	x1, [sp, #72]
    daec:	ldr	x0, [x0]
    daf0:	eor	x0, x1, x0
    daf4:	cmp	x0, #0x0
    daf8:	b.eq	db00 <XS_POSIX_modf+0x1c0>  // b.none
    dafc:	bl	6a60 <__stack_chk_fail@plt>
    db00:	ldp	x29, x30, [sp], #80
    db04:	ret

000000000000db08 <XS_POSIX_remquo>:
    db08:	stp	x29, x30, [sp, #-96]!
    db0c:	mov	x29, sp
    db10:	str	x0, [sp, #24]
    db14:	str	x1, [sp, #16]
    db18:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    db1c:	ldr	x0, [x0, #3992]
    db20:	ldr	x1, [x0]
    db24:	str	x1, [sp, #88]
    db28:	mov	x1, #0x0                   	// #0
    db2c:	ldr	x0, [sp, #24]
    db30:	ldr	x0, [x0]
    db34:	str	x0, [sp, #56]
    db38:	ldr	x0, [sp, #24]
    db3c:	bl	739c <S_POPMARK>
    db40:	str	w0, [sp, #48]
    db44:	ldr	x0, [sp, #24]
    db48:	ldr	x1, [x0, #24]
    db4c:	ldr	w0, [sp, #48]
    db50:	add	w2, w0, #0x1
    db54:	str	w2, [sp, #48]
    db58:	sxtw	x0, w0
    db5c:	lsl	x0, x0, #3
    db60:	add	x0, x1, x0
    db64:	str	x0, [sp, #64]
    db68:	ldr	x1, [sp, #56]
    db6c:	ldr	x0, [sp, #64]
    db70:	sub	x0, x1, x0
    db74:	asr	x0, x0, #3
    db78:	str	w0, [sp, #52]
    db7c:	ldr	w0, [sp, #52]
    db80:	cmp	w0, #0x2
    db84:	b.eq	db98 <XS_POSIX_remquo+0x90>  // b.none
    db88:	adrp	x0, 1b000 <_fini+0x1fc>
    db8c:	add	x1, x0, #0x4a8
    db90:	ldr	x0, [sp, #16]
    db94:	bl	6b20 <Perl_croak_xs_usage@plt>
    db98:	ldrsw	x0, [sp, #52]
    db9c:	lsl	x0, x0, #3
    dba0:	neg	x0, x0
    dba4:	ldr	x1, [sp, #56]
    dba8:	add	x0, x1, x0
    dbac:	str	x0, [sp, #56]
    dbb0:	ldr	x0, [sp, #24]
    dbb4:	ldr	x1, [x0, #24]
    dbb8:	ldrsw	x0, [sp, #48]
    dbbc:	lsl	x0, x0, #3
    dbc0:	add	x0, x1, x0
    dbc4:	ldr	x0, [x0]
    dbc8:	ldr	w1, [x0, #12]
    dbcc:	mov	w0, #0x200                 	// #512
    dbd0:	movk	w0, #0x20, lsl #16
    dbd4:	and	w0, w1, w0
    dbd8:	cmp	w0, #0x200
    dbdc:	b.ne	dc04 <XS_POSIX_remquo+0xfc>  // b.any
    dbe0:	ldr	x0, [sp, #24]
    dbe4:	ldr	x1, [x0, #24]
    dbe8:	ldrsw	x0, [sp, #48]
    dbec:	lsl	x0, x0, #3
    dbf0:	add	x0, x1, x0
    dbf4:	ldr	x0, [x0]
    dbf8:	ldr	x0, [x0]
    dbfc:	ldr	d0, [x0, #40]
    dc00:	b	dc2c <XS_POSIX_remquo+0x124>
    dc04:	ldr	x0, [sp, #24]
    dc08:	ldr	x1, [x0, #24]
    dc0c:	ldrsw	x0, [sp, #48]
    dc10:	lsl	x0, x0, #3
    dc14:	add	x0, x1, x0
    dc18:	ldr	x0, [x0]
    dc1c:	mov	w2, #0x2                   	// #2
    dc20:	mov	x1, x0
    dc24:	ldr	x0, [sp, #24]
    dc28:	bl	6b80 <Perl_sv_2nv_flags@plt>
    dc2c:	str	d0, [sp, #72]
    dc30:	ldr	x0, [sp, #24]
    dc34:	ldr	x1, [x0, #24]
    dc38:	ldrsw	x0, [sp, #48]
    dc3c:	add	x0, x0, #0x1
    dc40:	lsl	x0, x0, #3
    dc44:	add	x0, x1, x0
    dc48:	ldr	x0, [x0]
    dc4c:	ldr	w1, [x0, #12]
    dc50:	mov	w0, #0x200                 	// #512
    dc54:	movk	w0, #0x20, lsl #16
    dc58:	and	w0, w1, w0
    dc5c:	cmp	w0, #0x200
    dc60:	b.ne	dc8c <XS_POSIX_remquo+0x184>  // b.any
    dc64:	ldr	x0, [sp, #24]
    dc68:	ldr	x1, [x0, #24]
    dc6c:	ldrsw	x0, [sp, #48]
    dc70:	add	x0, x0, #0x1
    dc74:	lsl	x0, x0, #3
    dc78:	add	x0, x1, x0
    dc7c:	ldr	x0, [x0]
    dc80:	ldr	x0, [x0]
    dc84:	ldr	d0, [x0, #40]
    dc88:	b	dcb8 <XS_POSIX_remquo+0x1b0>
    dc8c:	ldr	x0, [sp, #24]
    dc90:	ldr	x1, [x0, #24]
    dc94:	ldrsw	x0, [sp, #48]
    dc98:	add	x0, x0, #0x1
    dc9c:	lsl	x0, x0, #3
    dca0:	add	x0, x1, x0
    dca4:	ldr	x0, [x0]
    dca8:	mov	w2, #0x2                   	// #2
    dcac:	mov	x1, x0
    dcb0:	ldr	x0, [sp, #24]
    dcb4:	bl	6b80 <Perl_sv_2nv_flags@plt>
    dcb8:	str	d0, [sp, #80]
    dcbc:	add	x0, sp, #0x2c
    dcc0:	ldr	d1, [sp, #80]
    dcc4:	ldr	d0, [sp, #72]
    dcc8:	bl	6e20 <remquo@plt>
    dccc:	ldr	x0, [sp, #24]
    dcd0:	bl	6920 <Perl_newSVnv@plt>
    dcd4:	mov	x1, x0
    dcd8:	ldr	x0, [sp, #56]
    dcdc:	add	x0, x0, #0x8
    dce0:	str	x0, [sp, #56]
    dce4:	ldr	x0, [sp, #24]
    dce8:	bl	6d60 <Perl_sv_2mortal@plt>
    dcec:	mov	x1, x0
    dcf0:	ldr	x0, [sp, #56]
    dcf4:	str	x1, [x0]
    dcf8:	ldr	w0, [sp, #44]
    dcfc:	scvtf	d0, w0
    dd00:	ldr	x0, [sp, #24]
    dd04:	bl	6920 <Perl_newSVnv@plt>
    dd08:	mov	x1, x0
    dd0c:	ldr	x0, [sp, #56]
    dd10:	add	x0, x0, #0x8
    dd14:	str	x0, [sp, #56]
    dd18:	ldr	x0, [sp, #24]
    dd1c:	bl	6d60 <Perl_sv_2mortal@plt>
    dd20:	mov	x1, x0
    dd24:	ldr	x0, [sp, #56]
    dd28:	str	x1, [x0]
    dd2c:	ldr	x0, [sp, #24]
    dd30:	ldr	x1, [sp, #56]
    dd34:	str	x1, [x0]
    dd38:	nop
    dd3c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    dd40:	ldr	x0, [x0, #3992]
    dd44:	ldr	x1, [sp, #88]
    dd48:	ldr	x0, [x0]
    dd4c:	eor	x0, x1, x0
    dd50:	cmp	x0, #0x0
    dd54:	b.eq	dd5c <XS_POSIX_remquo+0x254>  // b.none
    dd58:	bl	6a60 <__stack_chk_fail@plt>
    dd5c:	ldp	x29, x30, [sp], #96
    dd60:	ret

000000000000dd64 <XS_POSIX_scalbn>:
    dd64:	stp	x29, x30, [sp, #-112]!
    dd68:	mov	x29, sp
    dd6c:	str	x0, [sp, #24]
    dd70:	str	x1, [sp, #16]
    dd74:	ldr	x0, [sp, #24]
    dd78:	ldr	x0, [x0]
    dd7c:	str	x0, [sp, #48]
    dd80:	ldr	x0, [sp, #24]
    dd84:	bl	739c <S_POPMARK>
    dd88:	str	w0, [sp, #40]
    dd8c:	ldr	x0, [sp, #24]
    dd90:	ldr	x1, [x0, #24]
    dd94:	ldr	w0, [sp, #40]
    dd98:	add	w2, w0, #0x1
    dd9c:	str	w2, [sp, #40]
    dda0:	sxtw	x0, w0
    dda4:	lsl	x0, x0, #3
    dda8:	add	x0, x1, x0
    ddac:	str	x0, [sp, #56]
    ddb0:	ldr	x1, [sp, #48]
    ddb4:	ldr	x0, [sp, #56]
    ddb8:	sub	x0, x1, x0
    ddbc:	asr	x0, x0, #3
    ddc0:	str	w0, [sp, #44]
    ddc4:	ldr	w0, [sp, #44]
    ddc8:	cmp	w0, #0x2
    ddcc:	b.eq	dde0 <XS_POSIX_scalbn+0x7c>  // b.none
    ddd0:	adrp	x0, 1b000 <_fini+0x1fc>
    ddd4:	add	x1, x0, #0x4a8
    ddd8:	ldr	x0, [sp, #16]
    dddc:	bl	6b20 <Perl_croak_xs_usage@plt>
    dde0:	ldr	x0, [sp, #24]
    dde4:	ldr	x1, [x0, #24]
    dde8:	ldrsw	x0, [sp, #40]
    ddec:	lsl	x0, x0, #3
    ddf0:	add	x0, x1, x0
    ddf4:	ldr	x0, [x0]
    ddf8:	ldr	w1, [x0, #12]
    ddfc:	mov	w0, #0x200                 	// #512
    de00:	movk	w0, #0x20, lsl #16
    de04:	and	w0, w1, w0
    de08:	cmp	w0, #0x200
    de0c:	b.ne	de34 <XS_POSIX_scalbn+0xd0>  // b.any
    de10:	ldr	x0, [sp, #24]
    de14:	ldr	x1, [x0, #24]
    de18:	ldrsw	x0, [sp, #40]
    de1c:	lsl	x0, x0, #3
    de20:	add	x0, x1, x0
    de24:	ldr	x0, [x0]
    de28:	ldr	x0, [x0]
    de2c:	ldr	d0, [x0, #40]
    de30:	b	de5c <XS_POSIX_scalbn+0xf8>
    de34:	ldr	x0, [sp, #24]
    de38:	ldr	x1, [x0, #24]
    de3c:	ldrsw	x0, [sp, #40]
    de40:	lsl	x0, x0, #3
    de44:	add	x0, x1, x0
    de48:	ldr	x0, [x0]
    de4c:	mov	w2, #0x2                   	// #2
    de50:	mov	x1, x0
    de54:	ldr	x0, [sp, #24]
    de58:	bl	6b80 <Perl_sv_2nv_flags@plt>
    de5c:	str	d0, [sp, #64]
    de60:	ldr	x0, [sp, #24]
    de64:	ldr	x1, [x0, #24]
    de68:	ldrsw	x0, [sp, #40]
    de6c:	add	x0, x0, #0x1
    de70:	lsl	x0, x0, #3
    de74:	add	x0, x1, x0
    de78:	ldr	x0, [x0]
    de7c:	ldr	w1, [x0, #12]
    de80:	mov	w0, #0x100                 	// #256
    de84:	movk	w0, #0x20, lsl #16
    de88:	and	w0, w1, w0
    de8c:	cmp	w0, #0x100
    de90:	b.ne	debc <XS_POSIX_scalbn+0x158>  // b.any
    de94:	ldr	x0, [sp, #24]
    de98:	ldr	x1, [x0, #24]
    de9c:	ldrsw	x0, [sp, #40]
    dea0:	add	x0, x0, #0x1
    dea4:	lsl	x0, x0, #3
    dea8:	add	x0, x1, x0
    deac:	ldr	x0, [x0]
    deb0:	ldr	x0, [x0]
    deb4:	ldr	x0, [x0, #32]
    deb8:	b	dee8 <XS_POSIX_scalbn+0x184>
    debc:	ldr	x0, [sp, #24]
    dec0:	ldr	x1, [x0, #24]
    dec4:	ldrsw	x0, [sp, #40]
    dec8:	add	x0, x0, #0x1
    decc:	lsl	x0, x0, #3
    ded0:	add	x0, x1, x0
    ded4:	ldr	x0, [x0]
    ded8:	mov	w2, #0x2                   	// #2
    dedc:	mov	x1, x0
    dee0:	ldr	x0, [sp, #24]
    dee4:	bl	6560 <Perl_sv_2iv_flags@plt>
    dee8:	str	x0, [sp, #72]
    deec:	ldr	x0, [sp, #24]
    def0:	ldr	x0, [x0, #8]
    def4:	ldrb	w0, [x0, #35]
    def8:	and	w0, w0, #0x4
    defc:	cmp	w0, #0x0
    df00:	b.eq	df28 <XS_POSIX_scalbn+0x1c4>  // b.none
    df04:	ldr	x0, [sp, #24]
    df08:	ldr	x1, [x0, #16]
    df0c:	ldr	x0, [sp, #24]
    df10:	ldr	x0, [x0, #8]
    df14:	ldr	x0, [x0, #24]
    df18:	lsl	x0, x0, #3
    df1c:	add	x0, x1, x0
    df20:	ldr	x0, [x0]
    df24:	b	df30 <XS_POSIX_scalbn+0x1cc>
    df28:	ldr	x0, [sp, #24]
    df2c:	bl	7160 <Perl_sv_newmortal@plt>
    df30:	str	x0, [sp, #80]
    df34:	ldr	x0, [sp, #72]
    df38:	ldr	d0, [sp, #64]
    df3c:	bl	6d80 <scalbn@plt>
    df40:	str	d0, [sp, #88]
    df44:	ldr	x0, [sp, #24]
    df48:	ldr	x1, [x0, #24]
    df4c:	ldrsw	x0, [sp, #40]
    df50:	lsl	x0, x0, #3
    df54:	sub	x0, x0, #0x8
    df58:	add	x0, x1, x0
    df5c:	str	x0, [sp, #48]
    df60:	ldr	d0, [sp, #88]
    df64:	str	d0, [sp, #96]
    df68:	ldr	x0, [sp, #80]
    df6c:	ldr	w1, [x0, #12]
    df70:	mov	w0, #0x8ff                 	// #2303
    df74:	movk	w0, #0x1981, lsl #16
    df78:	and	w0, w1, w0
    df7c:	cmp	w0, #0x2
    df80:	cset	w0, eq  // eq = none
    df84:	and	w0, w0, #0xff
    df88:	mov	w1, w0
    df8c:	ldr	x0, [sp, #24]
    df90:	ldrb	w0, [x0, #185]
    df94:	eor	w0, w0, #0x1
    df98:	and	w0, w0, #0xff
    df9c:	and	w0, w1, w0
    dfa0:	cmp	w0, #0x0
    dfa4:	cset	w0, ne  // ne = any
    dfa8:	and	w0, w0, #0xff
    dfac:	and	x0, x0, #0xff
    dfb0:	cmp	x0, #0x0
    dfb4:	b.eq	dfe4 <XS_POSIX_scalbn+0x280>  // b.none
    dfb8:	ldr	x0, [sp, #80]
    dfbc:	ldr	w1, [x0, #12]
    dfc0:	mov	w0, #0x2200                	// #8704
    dfc4:	orr	w1, w1, w0
    dfc8:	ldr	x0, [sp, #80]
    dfcc:	str	w1, [x0, #12]
    dfd0:	ldr	x0, [sp, #80]
    dfd4:	ldr	x0, [x0]
    dfd8:	ldr	d0, [sp, #96]
    dfdc:	str	d0, [x0, #40]
    dfe0:	b	dff4 <XS_POSIX_scalbn+0x290>
    dfe4:	ldr	d0, [sp, #96]
    dfe8:	ldr	x1, [sp, #80]
    dfec:	ldr	x0, [sp, #24]
    dff0:	bl	6960 <Perl_sv_setnv_mg@plt>
    dff4:	ldr	x0, [sp, #48]
    dff8:	add	x0, x0, #0x8
    dffc:	str	x0, [sp, #48]
    e000:	ldr	x0, [sp, #48]
    e004:	ldr	x1, [sp, #80]
    e008:	str	x1, [x0]
    e00c:	mov	x0, #0x1                   	// #1
    e010:	str	x0, [sp, #104]
    e014:	ldr	x0, [sp, #24]
    e018:	ldr	x1, [x0, #24]
    e01c:	ldrsw	x2, [sp, #40]
    e020:	ldr	x0, [sp, #104]
    e024:	add	x0, x2, x0
    e028:	lsl	x0, x0, #3
    e02c:	sub	x0, x0, #0x8
    e030:	add	x1, x1, x0
    e034:	ldr	x0, [sp, #24]
    e038:	str	x1, [x0]
    e03c:	nop
    e040:	ldp	x29, x30, [sp], #112
    e044:	ret

000000000000e048 <XS_POSIX_fma>:
    e048:	stp	x29, x30, [sp, #-112]!
    e04c:	mov	x29, sp
    e050:	str	x0, [sp, #24]
    e054:	str	x1, [sp, #16]
    e058:	ldr	x0, [sp, #24]
    e05c:	ldr	x0, [x0]
    e060:	str	x0, [sp, #40]
    e064:	ldr	x0, [sp, #24]
    e068:	bl	739c <S_POPMARK>
    e06c:	str	w0, [sp, #32]
    e070:	ldr	x0, [sp, #24]
    e074:	ldr	x1, [x0, #24]
    e078:	ldr	w0, [sp, #32]
    e07c:	add	w2, w0, #0x1
    e080:	str	w2, [sp, #32]
    e084:	sxtw	x0, w0
    e088:	lsl	x0, x0, #3
    e08c:	add	x0, x1, x0
    e090:	str	x0, [sp, #48]
    e094:	ldr	x1, [sp, #40]
    e098:	ldr	x0, [sp, #48]
    e09c:	sub	x0, x1, x0
    e0a0:	asr	x0, x0, #3
    e0a4:	str	w0, [sp, #36]
    e0a8:	ldr	w0, [sp, #36]
    e0ac:	cmp	w0, #0x3
    e0b0:	b.eq	e0c4 <XS_POSIX_fma+0x7c>  // b.none
    e0b4:	adrp	x0, 1b000 <_fini+0x1fc>
    e0b8:	add	x1, x0, #0x4b8
    e0bc:	ldr	x0, [sp, #16]
    e0c0:	bl	6b20 <Perl_croak_xs_usage@plt>
    e0c4:	ldr	x0, [sp, #24]
    e0c8:	ldr	x1, [x0, #24]
    e0cc:	ldrsw	x0, [sp, #32]
    e0d0:	lsl	x0, x0, #3
    e0d4:	add	x0, x1, x0
    e0d8:	ldr	x0, [x0]
    e0dc:	ldr	w1, [x0, #12]
    e0e0:	mov	w0, #0x200                 	// #512
    e0e4:	movk	w0, #0x20, lsl #16
    e0e8:	and	w0, w1, w0
    e0ec:	cmp	w0, #0x200
    e0f0:	b.ne	e118 <XS_POSIX_fma+0xd0>  // b.any
    e0f4:	ldr	x0, [sp, #24]
    e0f8:	ldr	x1, [x0, #24]
    e0fc:	ldrsw	x0, [sp, #32]
    e100:	lsl	x0, x0, #3
    e104:	add	x0, x1, x0
    e108:	ldr	x0, [x0]
    e10c:	ldr	x0, [x0]
    e110:	ldr	d0, [x0, #40]
    e114:	b	e140 <XS_POSIX_fma+0xf8>
    e118:	ldr	x0, [sp, #24]
    e11c:	ldr	x1, [x0, #24]
    e120:	ldrsw	x0, [sp, #32]
    e124:	lsl	x0, x0, #3
    e128:	add	x0, x1, x0
    e12c:	ldr	x0, [x0]
    e130:	mov	w2, #0x2                   	// #2
    e134:	mov	x1, x0
    e138:	ldr	x0, [sp, #24]
    e13c:	bl	6b80 <Perl_sv_2nv_flags@plt>
    e140:	str	d0, [sp, #56]
    e144:	ldr	x0, [sp, #24]
    e148:	ldr	x1, [x0, #24]
    e14c:	ldrsw	x0, [sp, #32]
    e150:	add	x0, x0, #0x1
    e154:	lsl	x0, x0, #3
    e158:	add	x0, x1, x0
    e15c:	ldr	x0, [x0]
    e160:	ldr	w1, [x0, #12]
    e164:	mov	w0, #0x200                 	// #512
    e168:	movk	w0, #0x20, lsl #16
    e16c:	and	w0, w1, w0
    e170:	cmp	w0, #0x200
    e174:	b.ne	e1a0 <XS_POSIX_fma+0x158>  // b.any
    e178:	ldr	x0, [sp, #24]
    e17c:	ldr	x1, [x0, #24]
    e180:	ldrsw	x0, [sp, #32]
    e184:	add	x0, x0, #0x1
    e188:	lsl	x0, x0, #3
    e18c:	add	x0, x1, x0
    e190:	ldr	x0, [x0]
    e194:	ldr	x0, [x0]
    e198:	ldr	d0, [x0, #40]
    e19c:	b	e1cc <XS_POSIX_fma+0x184>
    e1a0:	ldr	x0, [sp, #24]
    e1a4:	ldr	x1, [x0, #24]
    e1a8:	ldrsw	x0, [sp, #32]
    e1ac:	add	x0, x0, #0x1
    e1b0:	lsl	x0, x0, #3
    e1b4:	add	x0, x1, x0
    e1b8:	ldr	x0, [x0]
    e1bc:	mov	w2, #0x2                   	// #2
    e1c0:	mov	x1, x0
    e1c4:	ldr	x0, [sp, #24]
    e1c8:	bl	6b80 <Perl_sv_2nv_flags@plt>
    e1cc:	str	d0, [sp, #64]
    e1d0:	ldr	x0, [sp, #24]
    e1d4:	ldr	x1, [x0, #24]
    e1d8:	ldrsw	x0, [sp, #32]
    e1dc:	add	x0, x0, #0x2
    e1e0:	lsl	x0, x0, #3
    e1e4:	add	x0, x1, x0
    e1e8:	ldr	x0, [x0]
    e1ec:	ldr	w1, [x0, #12]
    e1f0:	mov	w0, #0x200                 	// #512
    e1f4:	movk	w0, #0x20, lsl #16
    e1f8:	and	w0, w1, w0
    e1fc:	cmp	w0, #0x200
    e200:	b.ne	e22c <XS_POSIX_fma+0x1e4>  // b.any
    e204:	ldr	x0, [sp, #24]
    e208:	ldr	x1, [x0, #24]
    e20c:	ldrsw	x0, [sp, #32]
    e210:	add	x0, x0, #0x2
    e214:	lsl	x0, x0, #3
    e218:	add	x0, x1, x0
    e21c:	ldr	x0, [x0]
    e220:	ldr	x0, [x0]
    e224:	ldr	d0, [x0, #40]
    e228:	b	e258 <XS_POSIX_fma+0x210>
    e22c:	ldr	x0, [sp, #24]
    e230:	ldr	x1, [x0, #24]
    e234:	ldrsw	x0, [sp, #32]
    e238:	add	x0, x0, #0x2
    e23c:	lsl	x0, x0, #3
    e240:	add	x0, x1, x0
    e244:	ldr	x0, [x0]
    e248:	mov	w2, #0x2                   	// #2
    e24c:	mov	x1, x0
    e250:	ldr	x0, [sp, #24]
    e254:	bl	6b80 <Perl_sv_2nv_flags@plt>
    e258:	str	d0, [sp, #72]
    e25c:	ldr	x0, [sp, #24]
    e260:	ldr	x0, [x0, #8]
    e264:	ldrb	w0, [x0, #35]
    e268:	and	w0, w0, #0x4
    e26c:	cmp	w0, #0x0
    e270:	b.eq	e298 <XS_POSIX_fma+0x250>  // b.none
    e274:	ldr	x0, [sp, #24]
    e278:	ldr	x1, [x0, #16]
    e27c:	ldr	x0, [sp, #24]
    e280:	ldr	x0, [x0, #8]
    e284:	ldr	x0, [x0, #24]
    e288:	lsl	x0, x0, #3
    e28c:	add	x0, x1, x0
    e290:	ldr	x0, [x0]
    e294:	b	e2a0 <XS_POSIX_fma+0x258>
    e298:	ldr	x0, [sp, #24]
    e29c:	bl	7160 <Perl_sv_newmortal@plt>
    e2a0:	str	x0, [sp, #80]
    e2a4:	ldr	d2, [sp, #72]
    e2a8:	ldr	d1, [sp, #64]
    e2ac:	ldr	d0, [sp, #56]
    e2b0:	bl	6ad0 <fma@plt>
    e2b4:	str	d0, [sp, #88]
    e2b8:	ldr	x0, [sp, #24]
    e2bc:	ldr	x1, [x0, #24]
    e2c0:	ldrsw	x0, [sp, #32]
    e2c4:	lsl	x0, x0, #3
    e2c8:	sub	x0, x0, #0x8
    e2cc:	add	x0, x1, x0
    e2d0:	str	x0, [sp, #40]
    e2d4:	ldr	d0, [sp, #88]
    e2d8:	str	d0, [sp, #96]
    e2dc:	ldr	x0, [sp, #80]
    e2e0:	ldr	w1, [x0, #12]
    e2e4:	mov	w0, #0x8ff                 	// #2303
    e2e8:	movk	w0, #0x1981, lsl #16
    e2ec:	and	w0, w1, w0
    e2f0:	cmp	w0, #0x2
    e2f4:	cset	w0, eq  // eq = none
    e2f8:	and	w0, w0, #0xff
    e2fc:	mov	w1, w0
    e300:	ldr	x0, [sp, #24]
    e304:	ldrb	w0, [x0, #185]
    e308:	eor	w0, w0, #0x1
    e30c:	and	w0, w0, #0xff
    e310:	and	w0, w1, w0
    e314:	cmp	w0, #0x0
    e318:	cset	w0, ne  // ne = any
    e31c:	and	w0, w0, #0xff
    e320:	and	x0, x0, #0xff
    e324:	cmp	x0, #0x0
    e328:	b.eq	e358 <XS_POSIX_fma+0x310>  // b.none
    e32c:	ldr	x0, [sp, #80]
    e330:	ldr	w1, [x0, #12]
    e334:	mov	w0, #0x2200                	// #8704
    e338:	orr	w1, w1, w0
    e33c:	ldr	x0, [sp, #80]
    e340:	str	w1, [x0, #12]
    e344:	ldr	x0, [sp, #80]
    e348:	ldr	x0, [x0]
    e34c:	ldr	d0, [sp, #96]
    e350:	str	d0, [x0, #40]
    e354:	b	e368 <XS_POSIX_fma+0x320>
    e358:	ldr	d0, [sp, #96]
    e35c:	ldr	x1, [sp, #80]
    e360:	ldr	x0, [sp, #24]
    e364:	bl	6960 <Perl_sv_setnv_mg@plt>
    e368:	ldr	x0, [sp, #40]
    e36c:	add	x0, x0, #0x8
    e370:	str	x0, [sp, #40]
    e374:	ldr	x0, [sp, #40]
    e378:	ldr	x1, [sp, #80]
    e37c:	str	x1, [x0]
    e380:	mov	x0, #0x1                   	// #1
    e384:	str	x0, [sp, #104]
    e388:	ldr	x0, [sp, #24]
    e38c:	ldr	x1, [x0, #24]
    e390:	ldrsw	x2, [sp, #32]
    e394:	ldr	x0, [sp, #104]
    e398:	add	x0, x2, x0
    e39c:	lsl	x0, x0, #3
    e3a0:	sub	x0, x0, #0x8
    e3a4:	add	x1, x1, x0
    e3a8:	ldr	x0, [sp, #24]
    e3ac:	str	x1, [x0]
    e3b0:	nop
    e3b4:	ldp	x29, x30, [sp], #112
    e3b8:	ret

000000000000e3bc <XS_POSIX_nan>:
    e3bc:	stp	x29, x30, [sp, #-112]!
    e3c0:	mov	x29, sp
    e3c4:	str	x0, [sp, #24]
    e3c8:	str	x1, [sp, #16]
    e3cc:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    e3d0:	ldr	x0, [x0, #3992]
    e3d4:	ldr	x1, [x0]
    e3d8:	str	x1, [sp, #104]
    e3dc:	mov	x1, #0x0                   	// #0
    e3e0:	ldr	x0, [sp, #24]
    e3e4:	ldr	x0, [x0]
    e3e8:	str	x0, [sp, #64]
    e3ec:	ldr	x0, [sp, #24]
    e3f0:	bl	739c <S_POPMARK>
    e3f4:	str	w0, [sp, #40]
    e3f8:	ldr	x0, [sp, #24]
    e3fc:	ldr	x1, [x0, #24]
    e400:	ldr	w0, [sp, #40]
    e404:	add	w2, w0, #0x1
    e408:	str	w2, [sp, #40]
    e40c:	sxtw	x0, w0
    e410:	lsl	x0, x0, #3
    e414:	add	x0, x1, x0
    e418:	str	x0, [sp, #72]
    e41c:	ldr	x1, [sp, #64]
    e420:	ldr	x0, [sp, #72]
    e424:	sub	x0, x1, x0
    e428:	asr	x0, x0, #3
    e42c:	str	w0, [sp, #44]
    e430:	ldr	w0, [sp, #44]
    e434:	cmp	w0, #0x0
    e438:	b.lt	e448 <XS_POSIX_nan+0x8c>  // b.tstop
    e43c:	ldr	w0, [sp, #44]
    e440:	cmp	w0, #0x1
    e444:	b.le	e458 <XS_POSIX_nan+0x9c>
    e448:	adrp	x0, 1b000 <_fini+0x1fc>
    e44c:	add	x1, x0, #0x4c0
    e450:	ldr	x0, [sp, #16]
    e454:	bl	6b20 <Perl_croak_xs_usage@plt>
    e458:	ldr	x0, [sp, #24]
    e45c:	ldr	x0, [x0, #8]
    e460:	ldrb	w0, [x0, #35]
    e464:	and	w0, w0, #0x4
    e468:	cmp	w0, #0x0
    e46c:	b.eq	e494 <XS_POSIX_nan+0xd8>  // b.none
    e470:	ldr	x0, [sp, #24]
    e474:	ldr	x1, [x0, #16]
    e478:	ldr	x0, [sp, #24]
    e47c:	ldr	x0, [x0, #8]
    e480:	ldr	x0, [x0, #24]
    e484:	lsl	x0, x0, #3
    e488:	add	x0, x1, x0
    e48c:	ldr	x0, [x0]
    e490:	b	e49c <XS_POSIX_nan+0xe0>
    e494:	ldr	x0, [sp, #24]
    e498:	bl	7160 <Perl_sv_newmortal@plt>
    e49c:	str	x0, [sp, #80]
    e4a0:	ldr	w0, [sp, #44]
    e4a4:	cmp	w0, #0x0
    e4a8:	b.gt	e4b4 <XS_POSIX_nan+0xf8>
    e4ac:	str	xzr, [sp, #56]
    e4b0:	b	e534 <XS_POSIX_nan+0x178>
    e4b4:	ldr	x0, [sp, #24]
    e4b8:	ldr	x1, [x0, #24]
    e4bc:	ldrsw	x0, [sp, #40]
    e4c0:	lsl	x0, x0, #3
    e4c4:	add	x0, x1, x0
    e4c8:	ldr	x0, [x0]
    e4cc:	ldr	w1, [x0, #12]
    e4d0:	mov	w0, #0x200                 	// #512
    e4d4:	movk	w0, #0x20, lsl #16
    e4d8:	and	w0, w1, w0
    e4dc:	cmp	w0, #0x200
    e4e0:	b.ne	e508 <XS_POSIX_nan+0x14c>  // b.any
    e4e4:	ldr	x0, [sp, #24]
    e4e8:	ldr	x1, [x0, #24]
    e4ec:	ldrsw	x0, [sp, #40]
    e4f0:	lsl	x0, x0, #3
    e4f4:	add	x0, x1, x0
    e4f8:	ldr	x0, [x0]
    e4fc:	ldr	x0, [x0]
    e500:	ldr	d0, [x0, #40]
    e504:	b	e530 <XS_POSIX_nan+0x174>
    e508:	ldr	x0, [sp, #24]
    e50c:	ldr	x1, [x0, #24]
    e510:	ldrsw	x0, [sp, #40]
    e514:	lsl	x0, x0, #3
    e518:	add	x0, x1, x0
    e51c:	ldr	x0, [x0]
    e520:	mov	w2, #0x2                   	// #2
    e524:	mov	x1, x0
    e528:	ldr	x0, [sp, #24]
    e52c:	bl	6b80 <Perl_sv_2nv_flags@plt>
    e530:	str	d0, [sp, #56]
    e534:	ldr	w0, [sp, #44]
    e538:	cmp	w0, #0x0
    e53c:	b.ne	e554 <XS_POSIX_nan+0x198>  // b.any
    e540:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    e544:	ldr	x0, [x0, #4016]
    e548:	ldr	d0, [x0]
    e54c:	str	d0, [sp, #48]
    e550:	b	e568 <XS_POSIX_nan+0x1ac>
    e554:	ldr	d0, [sp, #56]
    e558:	fcvtzu	x1, d0
    e55c:	add	x0, sp, #0x30
    e560:	mov	w2, #0x0                   	// #0
    e564:	bl	7a08 <S_setpayload>
    e568:	ldr	x0, [sp, #24]
    e56c:	ldr	x1, [x0, #24]
    e570:	ldrsw	x0, [sp, #40]
    e574:	lsl	x0, x0, #3
    e578:	sub	x0, x0, #0x8
    e57c:	add	x0, x1, x0
    e580:	str	x0, [sp, #64]
    e584:	ldr	d0, [sp, #48]
    e588:	str	d0, [sp, #88]
    e58c:	ldr	x0, [sp, #80]
    e590:	ldr	w1, [x0, #12]
    e594:	mov	w0, #0x8ff                 	// #2303
    e598:	movk	w0, #0x1981, lsl #16
    e59c:	and	w0, w1, w0
    e5a0:	cmp	w0, #0x2
    e5a4:	cset	w0, eq  // eq = none
    e5a8:	and	w0, w0, #0xff
    e5ac:	mov	w1, w0
    e5b0:	ldr	x0, [sp, #24]
    e5b4:	ldrb	w0, [x0, #185]
    e5b8:	eor	w0, w0, #0x1
    e5bc:	and	w0, w0, #0xff
    e5c0:	and	w0, w1, w0
    e5c4:	cmp	w0, #0x0
    e5c8:	cset	w0, ne  // ne = any
    e5cc:	and	w0, w0, #0xff
    e5d0:	and	x0, x0, #0xff
    e5d4:	cmp	x0, #0x0
    e5d8:	b.eq	e608 <XS_POSIX_nan+0x24c>  // b.none
    e5dc:	ldr	x0, [sp, #80]
    e5e0:	ldr	w1, [x0, #12]
    e5e4:	mov	w0, #0x2200                	// #8704
    e5e8:	orr	w1, w1, w0
    e5ec:	ldr	x0, [sp, #80]
    e5f0:	str	w1, [x0, #12]
    e5f4:	ldr	x0, [sp, #80]
    e5f8:	ldr	x0, [x0]
    e5fc:	ldr	d0, [sp, #88]
    e600:	str	d0, [x0, #40]
    e604:	b	e618 <XS_POSIX_nan+0x25c>
    e608:	ldr	d0, [sp, #88]
    e60c:	ldr	x1, [sp, #80]
    e610:	ldr	x0, [sp, #24]
    e614:	bl	6960 <Perl_sv_setnv_mg@plt>
    e618:	ldr	x0, [sp, #64]
    e61c:	add	x0, x0, #0x8
    e620:	str	x0, [sp, #64]
    e624:	ldr	x0, [sp, #64]
    e628:	ldr	x1, [sp, #80]
    e62c:	str	x1, [x0]
    e630:	mov	x0, #0x1                   	// #1
    e634:	str	x0, [sp, #96]
    e638:	ldr	x0, [sp, #24]
    e63c:	ldr	x1, [x0, #24]
    e640:	ldrsw	x2, [sp, #40]
    e644:	ldr	x0, [sp, #96]
    e648:	add	x0, x2, x0
    e64c:	lsl	x0, x0, #3
    e650:	sub	x0, x0, #0x8
    e654:	add	x1, x1, x0
    e658:	ldr	x0, [sp, #24]
    e65c:	str	x1, [x0]
    e660:	nop
    e664:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    e668:	ldr	x0, [x0, #3992]
    e66c:	ldr	x1, [sp, #104]
    e670:	ldr	x0, [x0]
    e674:	eor	x0, x1, x0
    e678:	cmp	x0, #0x0
    e67c:	b.eq	e684 <XS_POSIX_nan+0x2c8>  // b.none
    e680:	bl	6a60 <__stack_chk_fail@plt>
    e684:	ldp	x29, x30, [sp], #112
    e688:	ret

000000000000e68c <XS_POSIX_jn>:
    e68c:	stp	x29, x30, [sp, #-128]!
    e690:	mov	x29, sp
    e694:	str	x0, [sp, #24]
    e698:	str	x1, [sp, #16]
    e69c:	ldr	x0, [sp, #24]
    e6a0:	ldr	x0, [x0]
    e6a4:	str	x0, [sp, #64]
    e6a8:	ldr	x0, [sp, #24]
    e6ac:	bl	739c <S_POPMARK>
    e6b0:	str	w0, [sp, #44]
    e6b4:	ldr	x0, [sp, #24]
    e6b8:	ldr	x1, [x0, #24]
    e6bc:	ldr	w0, [sp, #44]
    e6c0:	add	w2, w0, #0x1
    e6c4:	str	w2, [sp, #44]
    e6c8:	sxtw	x0, w0
    e6cc:	lsl	x0, x0, #3
    e6d0:	add	x0, x1, x0
    e6d4:	str	x0, [sp, #72]
    e6d8:	ldr	x1, [sp, #64]
    e6dc:	ldr	x0, [sp, #72]
    e6e0:	sub	x0, x1, x0
    e6e4:	asr	x0, x0, #3
    e6e8:	str	w0, [sp, #48]
    e6ec:	ldr	x0, [sp, #16]
    e6f0:	ldr	x0, [x0]
    e6f4:	str	x0, [sp, #80]
    e6f8:	ldr	x0, [sp, #80]
    e6fc:	ldr	w0, [x0, #40]
    e700:	str	w0, [sp, #52]
    e704:	ldr	w0, [sp, #48]
    e708:	cmp	w0, #0x2
    e70c:	b.eq	e720 <XS_POSIX_jn+0x94>  // b.none
    e710:	adrp	x0, 1b000 <_fini+0x1fc>
    e714:	add	x1, x0, #0x4a8
    e718:	ldr	x0, [sp, #16]
    e71c:	bl	6b20 <Perl_croak_xs_usage@plt>
    e720:	ldr	x0, [sp, #24]
    e724:	ldr	x1, [x0, #24]
    e728:	ldrsw	x0, [sp, #44]
    e72c:	lsl	x0, x0, #3
    e730:	add	x0, x1, x0
    e734:	ldr	x0, [x0]
    e738:	ldr	w1, [x0, #12]
    e73c:	mov	w0, #0x100                 	// #256
    e740:	movk	w0, #0x20, lsl #16
    e744:	and	w0, w1, w0
    e748:	cmp	w0, #0x100
    e74c:	b.ne	e774 <XS_POSIX_jn+0xe8>  // b.any
    e750:	ldr	x0, [sp, #24]
    e754:	ldr	x1, [x0, #24]
    e758:	ldrsw	x0, [sp, #44]
    e75c:	lsl	x0, x0, #3
    e760:	add	x0, x1, x0
    e764:	ldr	x0, [x0]
    e768:	ldr	x0, [x0]
    e76c:	ldr	x0, [x0, #32]
    e770:	b	e79c <XS_POSIX_jn+0x110>
    e774:	ldr	x0, [sp, #24]
    e778:	ldr	x1, [x0, #24]
    e77c:	ldrsw	x0, [sp, #44]
    e780:	lsl	x0, x0, #3
    e784:	add	x0, x1, x0
    e788:	ldr	x0, [x0]
    e78c:	mov	w2, #0x2                   	// #2
    e790:	mov	x1, x0
    e794:	ldr	x0, [sp, #24]
    e798:	bl	6560 <Perl_sv_2iv_flags@plt>
    e79c:	str	x0, [sp, #88]
    e7a0:	ldr	x0, [sp, #24]
    e7a4:	ldr	x1, [x0, #24]
    e7a8:	ldrsw	x0, [sp, #44]
    e7ac:	add	x0, x0, #0x1
    e7b0:	lsl	x0, x0, #3
    e7b4:	add	x0, x1, x0
    e7b8:	ldr	x0, [x0]
    e7bc:	ldr	w1, [x0, #12]
    e7c0:	mov	w0, #0x200                 	// #512
    e7c4:	movk	w0, #0x20, lsl #16
    e7c8:	and	w0, w1, w0
    e7cc:	cmp	w0, #0x200
    e7d0:	b.ne	e7fc <XS_POSIX_jn+0x170>  // b.any
    e7d4:	ldr	x0, [sp, #24]
    e7d8:	ldr	x1, [x0, #24]
    e7dc:	ldrsw	x0, [sp, #44]
    e7e0:	add	x0, x0, #0x1
    e7e4:	lsl	x0, x0, #3
    e7e8:	add	x0, x1, x0
    e7ec:	ldr	x0, [x0]
    e7f0:	ldr	x0, [x0]
    e7f4:	ldr	d0, [x0, #40]
    e7f8:	b	e828 <XS_POSIX_jn+0x19c>
    e7fc:	ldr	x0, [sp, #24]
    e800:	ldr	x1, [x0, #24]
    e804:	ldrsw	x0, [sp, #44]
    e808:	add	x0, x0, #0x1
    e80c:	lsl	x0, x0, #3
    e810:	add	x0, x1, x0
    e814:	ldr	x0, [x0]
    e818:	mov	w2, #0x2                   	// #2
    e81c:	mov	x1, x0
    e820:	ldr	x0, [sp, #24]
    e824:	bl	6b80 <Perl_sv_2nv_flags@plt>
    e828:	str	d0, [sp, #96]
    e82c:	ldr	x0, [sp, #24]
    e830:	ldr	x0, [x0, #8]
    e834:	ldrb	w0, [x0, #35]
    e838:	and	w0, w0, #0x4
    e83c:	cmp	w0, #0x0
    e840:	b.eq	e868 <XS_POSIX_jn+0x1dc>  // b.none
    e844:	ldr	x0, [sp, #24]
    e848:	ldr	x1, [x0, #16]
    e84c:	ldr	x0, [sp, #24]
    e850:	ldr	x0, [x0, #8]
    e854:	ldr	x0, [x0, #24]
    e858:	lsl	x0, x0, #3
    e85c:	add	x0, x1, x0
    e860:	ldr	x0, [x0]
    e864:	b	e870 <XS_POSIX_jn+0x1e4>
    e868:	ldr	x0, [sp, #24]
    e86c:	bl	7160 <Perl_sv_newmortal@plt>
    e870:	str	x0, [sp, #104]
    e874:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    e878:	ldr	x0, [x0, #4016]
    e87c:	ldr	d0, [x0]
    e880:	str	d0, [sp, #56]
    e884:	ldr	w0, [sp, #52]
    e888:	cmp	w0, #0x0
    e88c:	b.ne	e8a4 <XS_POSIX_jn+0x218>  // b.any
    e890:	ldr	x0, [sp, #88]
    e894:	ldr	d0, [sp, #96]
    e898:	bl	6e90 <jn@plt>
    e89c:	str	d0, [sp, #56]
    e8a0:	b	e8b8 <XS_POSIX_jn+0x22c>
    e8a4:	ldr	x0, [sp, #88]
    e8a8:	ldr	d0, [sp, #96]
    e8ac:	bl	70f0 <yn@plt>
    e8b0:	str	d0, [sp, #56]
    e8b4:	nop
    e8b8:	ldr	x0, [sp, #24]
    e8bc:	ldr	x1, [x0, #24]
    e8c0:	ldrsw	x0, [sp, #44]
    e8c4:	lsl	x0, x0, #3
    e8c8:	sub	x0, x0, #0x8
    e8cc:	add	x0, x1, x0
    e8d0:	str	x0, [sp, #64]
    e8d4:	ldr	d0, [sp, #56]
    e8d8:	str	d0, [sp, #112]
    e8dc:	ldr	x0, [sp, #104]
    e8e0:	ldr	w1, [x0, #12]
    e8e4:	mov	w0, #0x8ff                 	// #2303
    e8e8:	movk	w0, #0x1981, lsl #16
    e8ec:	and	w0, w1, w0
    e8f0:	cmp	w0, #0x2
    e8f4:	cset	w0, eq  // eq = none
    e8f8:	and	w0, w0, #0xff
    e8fc:	mov	w1, w0
    e900:	ldr	x0, [sp, #24]
    e904:	ldrb	w0, [x0, #185]
    e908:	eor	w0, w0, #0x1
    e90c:	and	w0, w0, #0xff
    e910:	and	w0, w1, w0
    e914:	cmp	w0, #0x0
    e918:	cset	w0, ne  // ne = any
    e91c:	and	w0, w0, #0xff
    e920:	and	x0, x0, #0xff
    e924:	cmp	x0, #0x0
    e928:	b.eq	e958 <XS_POSIX_jn+0x2cc>  // b.none
    e92c:	ldr	x0, [sp, #104]
    e930:	ldr	w1, [x0, #12]
    e934:	mov	w0, #0x2200                	// #8704
    e938:	orr	w1, w1, w0
    e93c:	ldr	x0, [sp, #104]
    e940:	str	w1, [x0, #12]
    e944:	ldr	x0, [sp, #104]
    e948:	ldr	x0, [x0]
    e94c:	ldr	d0, [sp, #112]
    e950:	str	d0, [x0, #40]
    e954:	b	e968 <XS_POSIX_jn+0x2dc>
    e958:	ldr	d0, [sp, #112]
    e95c:	ldr	x1, [sp, #104]
    e960:	ldr	x0, [sp, #24]
    e964:	bl	6960 <Perl_sv_setnv_mg@plt>
    e968:	ldr	x0, [sp, #64]
    e96c:	add	x0, x0, #0x8
    e970:	str	x0, [sp, #64]
    e974:	ldr	x0, [sp, #64]
    e978:	ldr	x1, [sp, #104]
    e97c:	str	x1, [x0]
    e980:	mov	x0, #0x1                   	// #1
    e984:	str	x0, [sp, #120]
    e988:	ldr	x0, [sp, #24]
    e98c:	ldr	x1, [x0, #24]
    e990:	ldrsw	x2, [sp, #44]
    e994:	ldr	x0, [sp, #120]
    e998:	add	x0, x2, x0
    e99c:	lsl	x0, x0, #3
    e9a0:	sub	x0, x0, #0x8
    e9a4:	add	x1, x1, x0
    e9a8:	ldr	x0, [sp, #24]
    e9ac:	str	x1, [x0]
    e9b0:	nop
    e9b4:	ldp	x29, x30, [sp], #128
    e9b8:	ret

000000000000e9bc <XS_POSIX_sigaction>:
    e9bc:	sub	sp, sp, #0x330
    e9c0:	stp	x29, x30, [sp]
    e9c4:	mov	x29, sp
    e9c8:	stp	x19, x20, [sp, #16]
    e9cc:	str	x0, [sp, #40]
    e9d0:	str	x1, [sp, #32]
    e9d4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    e9d8:	ldr	x0, [x0, #3992]
    e9dc:	ldr	x1, [x0]
    e9e0:	str	x1, [sp, #808]
    e9e4:	mov	x1, #0x0                   	// #0
    e9e8:	ldr	x0, [sp, #40]
    e9ec:	ldr	x0, [x0]
    e9f0:	str	x0, [sp, #104]
    e9f4:	ldr	x0, [sp, #40]
    e9f8:	bl	739c <S_POPMARK>
    e9fc:	str	w0, [sp, #72]
    ea00:	ldr	x0, [sp, #40]
    ea04:	ldr	x1, [x0, #24]
    ea08:	ldr	w0, [sp, #72]
    ea0c:	add	w2, w0, #0x1
    ea10:	str	w2, [sp, #72]
    ea14:	sxtw	x0, w0
    ea18:	lsl	x0, x0, #3
    ea1c:	add	x0, x1, x0
    ea20:	str	x0, [sp, #112]
    ea24:	ldr	x1, [sp, #104]
    ea28:	ldr	x0, [sp, #112]
    ea2c:	sub	x0, x1, x0
    ea30:	asr	x0, x0, #3
    ea34:	str	w0, [sp, #76]
    ea38:	ldr	w0, [sp, #76]
    ea3c:	cmp	w0, #0x1
    ea40:	b.le	ea50 <XS_POSIX_sigaction+0x94>
    ea44:	ldr	w0, [sp, #76]
    ea48:	cmp	w0, #0x3
    ea4c:	b.le	ea60 <XS_POSIX_sigaction+0xa4>
    ea50:	adrp	x0, 1b000 <_fini+0x1fc>
    ea54:	add	x1, x0, #0x4d0
    ea58:	ldr	x0, [sp, #32]
    ea5c:	bl	6b20 <Perl_croak_xs_usage@plt>
    ea60:	ldr	x0, [sp, #40]
    ea64:	ldr	x1, [x0, #24]
    ea68:	ldrsw	x0, [sp, #72]
    ea6c:	lsl	x0, x0, #3
    ea70:	add	x0, x1, x0
    ea74:	ldr	x0, [x0]
    ea78:	ldr	w1, [x0, #12]
    ea7c:	mov	w0, #0x100                 	// #256
    ea80:	movk	w0, #0x20, lsl #16
    ea84:	and	w0, w1, w0
    ea88:	cmp	w0, #0x100
    ea8c:	b.ne	eab4 <XS_POSIX_sigaction+0xf8>  // b.any
    ea90:	ldr	x0, [sp, #40]
    ea94:	ldr	x1, [x0, #24]
    ea98:	ldrsw	x0, [sp, #72]
    ea9c:	lsl	x0, x0, #3
    eaa0:	add	x0, x1, x0
    eaa4:	ldr	x0, [x0]
    eaa8:	ldr	x0, [x0]
    eaac:	ldr	x0, [x0, #32]
    eab0:	b	eadc <XS_POSIX_sigaction+0x120>
    eab4:	ldr	x0, [sp, #40]
    eab8:	ldr	x1, [x0, #24]
    eabc:	ldrsw	x0, [sp, #72]
    eac0:	lsl	x0, x0, #3
    eac4:	add	x0, x1, x0
    eac8:	ldr	x0, [x0]
    eacc:	mov	w2, #0x2                   	// #2
    ead0:	mov	x1, x0
    ead4:	ldr	x0, [sp, #40]
    ead8:	bl	6560 <Perl_sv_2iv_flags@plt>
    eadc:	str	w0, [sp, #60]
    eae0:	ldr	x0, [sp, #40]
    eae4:	ldr	x1, [x0, #24]
    eae8:	ldrsw	x0, [sp, #72]
    eaec:	add	x0, x0, #0x1
    eaf0:	lsl	x0, x0, #3
    eaf4:	add	x0, x1, x0
    eaf8:	ldr	x0, [x0]
    eafc:	str	x0, [sp, #120]
    eb00:	ldr	w0, [sp, #76]
    eb04:	cmp	w0, #0x2
    eb08:	b.gt	eb14 <XS_POSIX_sigaction+0x158>
    eb0c:	str	xzr, [sp, #80]
    eb10:	b	ebbc <XS_POSIX_sigaction+0x200>
    eb14:	ldr	x0, [sp, #40]
    eb18:	ldr	x1, [x0, #24]
    eb1c:	ldrsw	x0, [sp, #72]
    eb20:	add	x0, x0, #0x2
    eb24:	lsl	x0, x0, #3
    eb28:	add	x0, x1, x0
    eb2c:	ldr	x0, [x0]
    eb30:	str	x0, [sp, #128]
    eb34:	ldr	x0, [sp, #128]
    eb38:	ldr	w0, [x0, #12]
    eb3c:	lsr	w0, w0, #21
    eb40:	mov	w0, w0
    eb44:	and	x0, x0, #0x1
    eb48:	cmp	x0, #0x0
    eb4c:	b.eq	eb64 <XS_POSIX_sigaction+0x1a8>  // b.none
    eb50:	ldr	x1, [sp, #128]
    eb54:	ldr	x0, [sp, #40]
    eb58:	bl	6d90 <Perl_mg_get@plt>
    eb5c:	cmp	w0, #0x0
    eb60:	nop
    eb64:	ldr	x0, [sp, #128]
    eb68:	ldr	w0, [x0, #12]
    eb6c:	and	w0, w0, #0x800
    eb70:	cmp	w0, #0x0
    eb74:	b.eq	eba0 <XS_POSIX_sigaction+0x1e4>  // b.none
    eb78:	ldr	x0, [sp, #128]
    eb7c:	ldr	x0, [x0, #16]
    eb80:	ldr	w0, [x0, #12]
    eb84:	and	w0, w0, #0xff
    eb88:	cmp	w0, #0xc
    eb8c:	b.ne	eba0 <XS_POSIX_sigaction+0x1e4>  // b.any
    eb90:	ldr	x0, [sp, #128]
    eb94:	ldr	x0, [x0, #16]
    eb98:	str	x0, [sp, #80]
    eb9c:	b	ebbc <XS_POSIX_sigaction+0x200>
    eba0:	adrp	x0, 1b000 <_fini+0x1fc>
    eba4:	add	x2, x0, #0x4f0
    eba8:	adrp	x0, 1b000 <_fini+0x1fc>
    ebac:	add	x1, x0, #0x500
    ebb0:	adrp	x0, 1b000 <_fini+0x1fc>
    ebb4:	add	x0, x0, #0x518
    ebb8:	bl	6cd0 <Perl_croak_nocontext@plt>
    ebbc:	mov	w4, #0xc                   	// #12
    ebc0:	mov	w3, #0x1                   	// #1
    ebc4:	mov	x2, #0x3                   	// #3
    ebc8:	adrp	x0, 1b000 <_fini+0x1fc>
    ebcc:	add	x1, x0, #0x538
    ebd0:	ldr	x0, [sp, #40]
    ebd4:	bl	6c20 <Perl_gv_fetchpvn_flags@plt>
    ebd8:	str	x0, [sp, #136]
    ebdc:	ldr	w0, [sp, #60]
    ebe0:	cmp	w0, #0x0
    ebe4:	b.ge	ebf4 <XS_POSIX_sigaction+0x238>  // b.tcont
    ebe8:	adrp	x0, 1b000 <_fini+0x1fc>
    ebec:	add	x0, x0, #0x540
    ebf0:	bl	6cd0 <Perl_croak_nocontext@plt>
    ebf4:	ldr	w0, [sp, #60]
    ebf8:	cmp	w0, #0x0
    ebfc:	b.ne	ed58 <XS_POSIX_sigaction+0x39c>  // b.any
    ec00:	ldr	x0, [sp, #40]
    ec04:	ldr	x1, [x0, #24]
    ec08:	ldrsw	x0, [sp, #72]
    ec0c:	lsl	x0, x0, #3
    ec10:	add	x0, x1, x0
    ec14:	ldr	x0, [x0]
    ec18:	ldr	w0, [x0, #12]
    ec1c:	and	w0, w0, #0x400
    ec20:	cmp	w0, #0x0
    ec24:	b.eq	ed58 <XS_POSIX_sigaction+0x39c>  // b.none
    ec28:	ldr	x0, [sp, #40]
    ec2c:	ldr	x1, [x0, #24]
    ec30:	ldrsw	x0, [sp, #72]
    ec34:	lsl	x0, x0, #3
    ec38:	add	x0, x1, x0
    ec3c:	ldr	x0, [x0]
    ec40:	ldr	x0, [x0, #16]
    ec44:	str	x0, [sp, #144]
    ec48:	ldr	x1, [sp, #144]
    ec4c:	ldr	x0, [sp, #40]
    ec50:	bl	7100 <Perl_whichsig_pv@plt>
    ec54:	str	w0, [sp, #68]
    ec58:	ldr	w0, [sp, #68]
    ec5c:	cmp	w0, #0x0
    ec60:	b.ge	ecc0 <XS_POSIX_sigaction+0x304>  // b.tcont
    ec64:	ldr	x0, [sp, #40]
    ec68:	ldr	x1, [x0, #24]
    ec6c:	ldrsw	x0, [sp, #72]
    ec70:	lsl	x0, x0, #3
    ec74:	add	x0, x1, x0
    ec78:	ldr	x0, [x0]
    ec7c:	ldr	x0, [x0]
    ec80:	ldr	x0, [x0, #16]
    ec84:	cmp	x0, #0x2
    ec88:	b.le	ecc0 <XS_POSIX_sigaction+0x304>
    ec8c:	mov	x2, #0x3                   	// #3
    ec90:	adrp	x0, 1b000 <_fini+0x1fc>
    ec94:	add	x1, x0, #0x538
    ec98:	ldr	x0, [sp, #144]
    ec9c:	bl	6c10 <memcmp@plt>
    eca0:	cmp	w0, #0x0
    eca4:	b.ne	ecc0 <XS_POSIX_sigaction+0x304>  // b.any
    eca8:	ldr	x0, [sp, #144]
    ecac:	add	x0, x0, #0x3
    ecb0:	mov	x1, x0
    ecb4:	ldr	x0, [sp, #40]
    ecb8:	bl	7100 <Perl_whichsig_pv@plt>
    ecbc:	str	w0, [sp, #68]
    ecc0:	ldr	w0, [sp, #68]
    ecc4:	cmp	w0, #0x0
    ecc8:	b.ge	ed50 <XS_POSIX_sigaction+0x394>  // b.tcont
    eccc:	mov	w1, #0x1a                  	// #26
    ecd0:	ldr	x0, [sp, #40]
    ecd4:	bl	7050 <Perl_ckwarn@plt>
    ecd8:	and	w0, w0, #0xff
    ecdc:	cmp	w0, #0x0
    ece0:	b.eq	ecfc <XS_POSIX_sigaction+0x340>  // b.none
    ece4:	ldr	x3, [sp, #144]
    ece8:	adrp	x0, 1b000 <_fini+0x1fc>
    ecec:	add	x2, x0, #0x568
    ecf0:	mov	w1, #0x1a                  	// #26
    ecf4:	ldr	x0, [sp, #40]
    ecf8:	bl	6850 <Perl_warner@plt>
    ecfc:	ldr	x0, [sp, #40]
    ed00:	ldr	x1, [x0, #24]
    ed04:	ldrsw	x0, [sp, #72]
    ed08:	lsl	x0, x0, #3
    ed0c:	add	x0, x1, x0
    ed10:	ldr	x1, [sp, #40]
    ed14:	add	x1, x1, #0x150
    ed18:	str	x1, [x0]
    ed1c:	mov	x0, #0x1                   	// #1
    ed20:	str	x0, [sp, #152]
    ed24:	ldr	x0, [sp, #40]
    ed28:	ldr	x1, [x0, #24]
    ed2c:	ldrsw	x2, [sp, #72]
    ed30:	ldr	x0, [sp, #152]
    ed34:	add	x0, x2, x0
    ed38:	lsl	x0, x0, #3
    ed3c:	sub	x0, x0, #0x8
    ed40:	add	x1, x1, x0
    ed44:	ldr	x0, [sp, #40]
    ed48:	str	x1, [x0]
    ed4c:	b	fc98 <XS_POSIX_sigaction+0x12dc>
    ed50:	ldr	w0, [sp, #68]
    ed54:	str	w0, [sp, #60]
    ed58:	ldr	w0, [sp, #60]
    ed5c:	cmp	w0, #0x41
    ed60:	b.le	edd0 <XS_POSIX_sigaction+0x414>
    ed64:	ldr	w3, [sp, #60]
    ed68:	adrp	x0, 1b000 <_fini+0x1fc>
    ed6c:	add	x2, x0, #0x580
    ed70:	mov	w1, #0x1a                  	// #26
    ed74:	ldr	x0, [sp, #40]
    ed78:	bl	6850 <Perl_warner@plt>
    ed7c:	ldr	x0, [sp, #40]
    ed80:	ldr	x1, [x0, #24]
    ed84:	ldrsw	x0, [sp, #72]
    ed88:	lsl	x0, x0, #3
    ed8c:	add	x0, x1, x0
    ed90:	ldr	x1, [sp, #40]
    ed94:	add	x1, x1, #0x150
    ed98:	str	x1, [x0]
    ed9c:	mov	x0, #0x1                   	// #1
    eda0:	str	x0, [sp, #240]
    eda4:	ldr	x0, [sp, #40]
    eda8:	ldr	x1, [x0, #24]
    edac:	ldrsw	x2, [sp, #72]
    edb0:	ldr	x0, [sp, #240]
    edb4:	add	x0, x2, x0
    edb8:	lsl	x0, x0, #3
    edbc:	sub	x0, x0, #0x8
    edc0:	add	x1, x1, x0
    edc4:	ldr	x0, [sp, #40]
    edc8:	str	x1, [x0]
    edcc:	b	fc98 <XS_POSIX_sigaction+0x12dc>
    edd0:	ldr	x0, [sp, #136]
    edd4:	ldr	x0, [x0, #16]
    edd8:	ldr	x0, [x0, #32]
    eddc:	cmp	x0, #0x0
    ede0:	b.eq	edf4 <XS_POSIX_sigaction+0x438>  // b.none
    ede4:	ldr	x0, [sp, #136]
    ede8:	ldr	x0, [x0, #16]
    edec:	ldr	x19, [x0, #32]
    edf0:	b	ee0c <XS_POSIX_sigaction+0x450>
    edf4:	mov	w2, #0xc                   	// #12
    edf8:	ldr	x1, [sp, #136]
    edfc:	ldr	x0, [sp, #40]
    ee00:	bl	7110 <Perl_gv_add_by_type@plt>
    ee04:	ldr	x0, [x0, #16]
    ee08:	ldr	x19, [x0, #32]
    ee0c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    ee10:	ldr	x0, [x0, #4000]
    ee14:	ldrsw	x1, [sp, #60]
    ee18:	ldr	x20, [x0, x1, lsl #3]
    ee1c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    ee20:	ldr	x0, [x0, #4000]
    ee24:	ldrsw	x1, [sp, #60]
    ee28:	ldr	x0, [x0, x1, lsl #3]
    ee2c:	bl	65c0 <strlen@plt>
    ee30:	mov	w6, #0x0                   	// #0
    ee34:	mov	x5, #0x0                   	// #0
    ee38:	mov	w4, #0x30                  	// #48
    ee3c:	mov	w3, w0
    ee40:	mov	x2, x20
    ee44:	mov	x1, x19
    ee48:	ldr	x0, [sp, #40]
    ee4c:	bl	6f00 <Perl_hv_common_key_len@plt>
    ee50:	str	x0, [sp, #160]
    ee54:	ldr	x0, [sp, #120]
    ee58:	cmp	x0, #0x0
    ee5c:	cset	w0, ne  // ne = any
    ee60:	and	w0, w0, #0xff
    ee64:	and	x0, x0, #0xff
    ee68:	cmp	x0, #0x0
    ee6c:	b.eq	f068 <XS_POSIX_sigaction+0x6ac>  // b.none
    ee70:	ldr	x0, [sp, #120]
    ee74:	ldr	w0, [x0, #12]
    ee78:	lsr	w0, w0, #21
    ee7c:	mov	w0, w0
    ee80:	and	x0, x0, #0x1
    ee84:	cmp	x0, #0x0
    ee88:	b.eq	eea0 <XS_POSIX_sigaction+0x4e4>  // b.none
    ee8c:	ldr	x1, [sp, #120]
    ee90:	ldr	x0, [sp, #40]
    ee94:	bl	6d90 <Perl_mg_get@plt>
    ee98:	cmp	w0, #0x0
    ee9c:	nop
    eea0:	ldr	x0, [sp, #40]
    eea4:	add	x0, x0, #0x138
    eea8:	ldr	x1, [sp, #120]
    eeac:	sub	x0, x1, x0
    eeb0:	asr	x1, x0, #3
    eeb4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    eeb8:	movk	x0, #0xaaab
    eebc:	mul	x0, x1, x0
    eec0:	cmp	x0, #0x3
    eec4:	b.hi	eee4 <XS_POSIX_sigaction+0x528>  // b.pmore
    eec8:	ldr	x0, [sp, #40]
    eecc:	add	x0, x0, #0x138
    eed0:	ldr	x1, [sp, #120]
    eed4:	cmp	x1, x0
    eed8:	cset	w0, eq  // eq = none
    eedc:	and	w0, w0, #0xff
    eee0:	b	f028 <XS_POSIX_sigaction+0x66c>
    eee4:	ldr	x0, [sp, #120]
    eee8:	ldr	w0, [x0, #12]
    eeec:	and	w0, w0, #0xff00
    eef0:	cmp	w0, #0x0
    eef4:	b.eq	f024 <XS_POSIX_sigaction+0x668>  // b.none
    eef8:	ldr	x0, [sp, #120]
    eefc:	ldr	w0, [x0, #12]
    ef00:	and	w0, w0, #0x400
    ef04:	cmp	w0, #0x0
    ef08:	b.eq	ef74 <XS_POSIX_sigaction+0x5b8>  // b.none
    ef0c:	ldr	x0, [sp, #120]
    ef10:	ldr	x0, [x0]
    ef14:	cmp	x0, #0x0
    ef18:	b.eq	ef60 <XS_POSIX_sigaction+0x5a4>  // b.none
    ef1c:	ldr	x0, [sp, #120]
    ef20:	ldr	x0, [x0]
    ef24:	ldr	x0, [x0, #16]
    ef28:	cmp	x0, #0x1
    ef2c:	b.hi	ef58 <XS_POSIX_sigaction+0x59c>  // b.pmore
    ef30:	ldr	x0, [sp, #120]
    ef34:	ldr	x0, [x0]
    ef38:	ldr	x0, [x0, #16]
    ef3c:	cmp	x0, #0x0
    ef40:	b.eq	ef60 <XS_POSIX_sigaction+0x5a4>  // b.none
    ef44:	ldr	x0, [sp, #120]
    ef48:	ldr	x0, [x0, #16]
    ef4c:	ldrb	w0, [x0]
    ef50:	cmp	w0, #0x30
    ef54:	b.eq	ef60 <XS_POSIX_sigaction+0x5a4>  // b.none
    ef58:	mov	w0, #0x1                   	// #1
    ef5c:	b	ef64 <XS_POSIX_sigaction+0x5a8>
    ef60:	mov	w0, #0x0                   	// #0
    ef64:	cmp	w0, #0x0
    ef68:	cset	w0, ne  // ne = any
    ef6c:	and	w0, w0, #0xff
    ef70:	b	f028 <XS_POSIX_sigaction+0x66c>
    ef74:	ldr	x0, [sp, #120]
    ef78:	ldr	w0, [x0, #12]
    ef7c:	and	w0, w0, #0x100
    ef80:	cmp	w0, #0x0
    ef84:	b.eq	efa4 <XS_POSIX_sigaction+0x5e8>  // b.none
    ef88:	ldr	x0, [sp, #120]
    ef8c:	ldr	x0, [x0]
    ef90:	ldr	x0, [x0, #32]
    ef94:	cmp	x0, #0x0
    ef98:	cset	w0, ne  // ne = any
    ef9c:	and	w0, w0, #0xff
    efa0:	b	f028 <XS_POSIX_sigaction+0x66c>
    efa4:	ldr	x0, [sp, #120]
    efa8:	ldr	w0, [x0, #12]
    efac:	and	w0, w0, #0x800
    efb0:	cmp	w0, #0x0
    efb4:	b.eq	eff0 <XS_POSIX_sigaction+0x634>  // b.none
    efb8:	ldr	x0, [sp, #120]
    efbc:	ldr	x0, [x0, #16]
    efc0:	ldr	w0, [x0, #12]
    efc4:	and	w0, w0, #0x100000
    efc8:	cmp	w0, #0x0
    efcc:	b.eq	f00c <XS_POSIX_sigaction+0x650>  // b.none
    efd0:	ldr	x0, [sp, #120]
    efd4:	ldr	x0, [x0, #16]
    efd8:	ldr	x0, [x0]
    efdc:	ldr	x0, [x0]
    efe0:	ldr	w0, [x0, #12]
    efe4:	and	w0, w0, #0x10000000
    efe8:	cmp	w0, #0x0
    efec:	b.eq	f00c <XS_POSIX_sigaction+0x650>  // b.none
    eff0:	mov	w2, #0x0                   	// #0
    eff4:	ldr	x1, [sp, #120]
    eff8:	ldr	x0, [sp, #40]
    effc:	bl	6590 <Perl_sv_2bool_flags@plt>
    f000:	and	w0, w0, #0xff
    f004:	cmp	w0, #0x0
    f008:	b.eq	f014 <XS_POSIX_sigaction+0x658>  // b.none
    f00c:	mov	w0, #0x1                   	// #1
    f010:	b	f018 <XS_POSIX_sigaction+0x65c>
    f014:	mov	w0, #0x0                   	// #0
    f018:	and	w0, w0, #0x1
    f01c:	and	w0, w0, #0xff
    f020:	b	f028 <XS_POSIX_sigaction+0x66c>
    f024:	mov	w0, #0x0                   	// #0
    f028:	cmp	w0, #0x0
    f02c:	b.eq	f068 <XS_POSIX_sigaction+0x6ac>  // b.none
    f030:	adrp	x0, 1b000 <_fini+0x1fc>
    f034:	add	x2, x0, #0x598
    f038:	ldr	x1, [sp, #120]
    f03c:	ldr	x0, [sp, #40]
    f040:	bl	6990 <Perl_sv_isa@plt>
    f044:	cmp	w0, #0x0
    f048:	b.eq	f05c <XS_POSIX_sigaction+0x6a0>  // b.none
    f04c:	ldr	x0, [sp, #120]
    f050:	ldr	x0, [x0, #16]
    f054:	str	x0, [sp, #88]
    f058:	b	f06c <XS_POSIX_sigaction+0x6b0>
    f05c:	adrp	x0, 1b000 <_fini+0x1fc>
    f060:	add	x0, x0, #0x5b0
    f064:	bl	6cd0 <Perl_croak_nocontext@plt>
    f068:	str	xzr, [sp, #88]
    f06c:	add	x0, sp, #0xf8
    f070:	bl	67e0 <sigfillset@plt>
    f074:	add	x1, sp, #0x178
    f078:	add	x0, sp, #0xf8
    f07c:	mov	x2, x1
    f080:	mov	x1, x0
    f084:	mov	w0, #0x0                   	// #0
    f088:	bl	66a0 <sigprocmask@plt>
    f08c:	str	w0, [sp, #64]
    f090:	ldr	w0, [sp, #64]
    f094:	cmn	w0, #0x1
    f098:	b.ne	f0f0 <XS_POSIX_sigaction+0x734>  // b.any
    f09c:	ldr	x0, [sp, #40]
    f0a0:	ldr	x1, [x0, #24]
    f0a4:	ldrsw	x0, [sp, #72]
    f0a8:	lsl	x0, x0, #3
    f0ac:	add	x0, x1, x0
    f0b0:	ldr	x1, [sp, #40]
    f0b4:	add	x1, x1, #0x150
    f0b8:	str	x1, [x0]
    f0bc:	mov	x0, #0x1                   	// #1
    f0c0:	str	x0, [sp, #232]
    f0c4:	ldr	x0, [sp, #40]
    f0c8:	ldr	x1, [x0, #24]
    f0cc:	ldrsw	x2, [sp, #72]
    f0d0:	ldr	x0, [sp, #232]
    f0d4:	add	x0, x2, x0
    f0d8:	lsl	x0, x0, #3
    f0dc:	sub	x0, x0, #0x8
    f0e0:	add	x1, x1, x0
    f0e4:	ldr	x0, [sp, #40]
    f0e8:	str	x1, [x0]
    f0ec:	b	fc98 <XS_POSIX_sigaction+0x12dc>
    f0f0:	ldr	x0, [sp, #40]
    f0f4:	bl	7060 <Perl_push_scope@plt>
    f0f8:	add	x0, sp, #0x178
    f0fc:	mov	x2, #0x80                  	// #128
    f100:	mov	x1, x0
    f104:	ldr	x0, [sp, #40]
    f108:	bl	7150 <Perl_newSVpvn@plt>
    f10c:	str	x0, [sp, #168]
    f110:	ldr	x0, [sp, #168]
    f114:	str	x0, [sp, #176]
    f118:	ldr	x0, [sp, #176]
    f11c:	mov	w2, #0xb                   	// #11
    f120:	mov	x1, x0
    f124:	ldr	x0, [sp, #40]
    f128:	bl	6c60 <Perl_save_pushptr@plt>
    f12c:	ldr	x2, [sp, #168]
    f130:	adrp	x0, 8000 <get_missing_hash+0x8>
    f134:	add	x1, x0, #0x100
    f138:	ldr	x0, [sp, #40]
    f13c:	bl	7070 <Perl_save_destructor_x@plt>
    f140:	mov	w0, #0xffffffff            	// #-1
    f144:	str	w0, [sp, #64]
    f148:	ldr	x0, [sp, #80]
    f14c:	cmp	x0, #0x0
    f150:	b.eq	f638 <XS_POSIX_sigaction+0xc7c>  // b.none
    f154:	mov	w6, #0x0                   	// #0
    f158:	mov	x5, #0x0                   	// #0
    f15c:	mov	w4, #0x30                  	// #48
    f160:	mov	w3, #0x7                   	// #7
    f164:	adrp	x0, 1b000 <_fini+0x1fc>
    f168:	add	x2, x0, #0x5d8
    f16c:	ldr	x1, [sp, #80]
    f170:	ldr	x0, [sp, #40]
    f174:	bl	6f00 <Perl_hv_common_key_len@plt>
    f178:	str	x0, [sp, #184]
    f17c:	ldr	x0, [sp, #184]
    f180:	cmp	x0, #0x0
    f184:	b.ne	f194 <XS_POSIX_sigaction+0x7d8>  // b.any
    f188:	adrp	x0, 1b000 <_fini+0x1fc>
    f18c:	add	x0, x0, #0x5e0
    f190:	bl	6cd0 <Perl_croak_nocontext@plt>
    f194:	ldr	x0, [sp, #160]
    f198:	ldr	x0, [x0]
    f19c:	cmp	x0, #0x0
    f1a0:	cset	w0, ne  // ne = any
    f1a4:	and	w0, w0, #0xff
    f1a8:	and	x0, x0, #0xff
    f1ac:	cmp	x0, #0x0
    f1b0:	b.eq	f3e0 <XS_POSIX_sigaction+0xa24>  // b.none
    f1b4:	ldr	x0, [sp, #160]
    f1b8:	ldr	x0, [x0]
    f1bc:	ldr	w0, [x0, #12]
    f1c0:	lsr	w0, w0, #21
    f1c4:	mov	w0, w0
    f1c8:	and	x0, x0, #0x1
    f1cc:	cmp	x0, #0x0
    f1d0:	b.eq	f1f0 <XS_POSIX_sigaction+0x834>  // b.none
    f1d4:	ldr	x0, [sp, #160]
    f1d8:	ldr	x0, [x0]
    f1dc:	mov	x1, x0
    f1e0:	ldr	x0, [sp, #40]
    f1e4:	bl	6d90 <Perl_mg_get@plt>
    f1e8:	cmp	w0, #0x0
    f1ec:	nop
    f1f0:	ldr	x0, [sp, #160]
    f1f4:	ldr	x1, [x0]
    f1f8:	ldr	x0, [sp, #40]
    f1fc:	add	x0, x0, #0x138
    f200:	sub	x0, x1, x0
    f204:	asr	x1, x0, #3
    f208:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f20c:	movk	x0, #0xaaab
    f210:	mul	x0, x1, x0
    f214:	cmp	x0, #0x3
    f218:	b.hi	f23c <XS_POSIX_sigaction+0x880>  // b.pmore
    f21c:	ldr	x0, [sp, #160]
    f220:	ldr	x1, [x0]
    f224:	ldr	x0, [sp, #40]
    f228:	add	x0, x0, #0x138
    f22c:	cmp	x1, x0
    f230:	cset	w0, eq  // eq = none
    f234:	and	w0, w0, #0xff
    f238:	b	f3b4 <XS_POSIX_sigaction+0x9f8>
    f23c:	ldr	x0, [sp, #160]
    f240:	ldr	x0, [x0]
    f244:	ldr	w0, [x0, #12]
    f248:	and	w0, w0, #0xff00
    f24c:	cmp	w0, #0x0
    f250:	b.eq	f3b0 <XS_POSIX_sigaction+0x9f4>  // b.none
    f254:	ldr	x0, [sp, #160]
    f258:	ldr	x0, [x0]
    f25c:	ldr	w0, [x0, #12]
    f260:	and	w0, w0, #0x400
    f264:	cmp	w0, #0x0
    f268:	b.eq	f2e4 <XS_POSIX_sigaction+0x928>  // b.none
    f26c:	ldr	x0, [sp, #160]
    f270:	ldr	x0, [x0]
    f274:	ldr	x0, [x0]
    f278:	cmp	x0, #0x0
    f27c:	b.eq	f2d0 <XS_POSIX_sigaction+0x914>  // b.none
    f280:	ldr	x0, [sp, #160]
    f284:	ldr	x0, [x0]
    f288:	ldr	x0, [x0]
    f28c:	ldr	x0, [x0, #16]
    f290:	cmp	x0, #0x1
    f294:	b.hi	f2c8 <XS_POSIX_sigaction+0x90c>  // b.pmore
    f298:	ldr	x0, [sp, #160]
    f29c:	ldr	x0, [x0]
    f2a0:	ldr	x0, [x0]
    f2a4:	ldr	x0, [x0, #16]
    f2a8:	cmp	x0, #0x0
    f2ac:	b.eq	f2d0 <XS_POSIX_sigaction+0x914>  // b.none
    f2b0:	ldr	x0, [sp, #160]
    f2b4:	ldr	x0, [x0]
    f2b8:	ldr	x0, [x0, #16]
    f2bc:	ldrb	w0, [x0]
    f2c0:	cmp	w0, #0x30
    f2c4:	b.eq	f2d0 <XS_POSIX_sigaction+0x914>  // b.none
    f2c8:	mov	w0, #0x1                   	// #1
    f2cc:	b	f2d4 <XS_POSIX_sigaction+0x918>
    f2d0:	mov	w0, #0x0                   	// #0
    f2d4:	cmp	w0, #0x0
    f2d8:	cset	w0, ne  // ne = any
    f2dc:	and	w0, w0, #0xff
    f2e0:	b	f3b4 <XS_POSIX_sigaction+0x9f8>
    f2e4:	ldr	x0, [sp, #160]
    f2e8:	ldr	x0, [x0]
    f2ec:	ldr	w0, [x0, #12]
    f2f0:	and	w0, w0, #0x100
    f2f4:	cmp	w0, #0x0
    f2f8:	b.eq	f31c <XS_POSIX_sigaction+0x960>  // b.none
    f2fc:	ldr	x0, [sp, #160]
    f300:	ldr	x0, [x0]
    f304:	ldr	x0, [x0]
    f308:	ldr	x0, [x0, #32]
    f30c:	cmp	x0, #0x0
    f310:	cset	w0, ne  // ne = any
    f314:	and	w0, w0, #0xff
    f318:	b	f3b4 <XS_POSIX_sigaction+0x9f8>
    f31c:	ldr	x0, [sp, #160]
    f320:	ldr	x0, [x0]
    f324:	ldr	w0, [x0, #12]
    f328:	and	w0, w0, #0x800
    f32c:	cmp	w0, #0x0
    f330:	b.eq	f374 <XS_POSIX_sigaction+0x9b8>  // b.none
    f334:	ldr	x0, [sp, #160]
    f338:	ldr	x0, [x0]
    f33c:	ldr	x0, [x0, #16]
    f340:	ldr	w0, [x0, #12]
    f344:	and	w0, w0, #0x100000
    f348:	cmp	w0, #0x0
    f34c:	b.eq	f398 <XS_POSIX_sigaction+0x9dc>  // b.none
    f350:	ldr	x0, [sp, #160]
    f354:	ldr	x0, [x0]
    f358:	ldr	x0, [x0, #16]
    f35c:	ldr	x0, [x0]
    f360:	ldr	x0, [x0]
    f364:	ldr	w0, [x0, #12]
    f368:	and	w0, w0, #0x10000000
    f36c:	cmp	w0, #0x0
    f370:	b.eq	f398 <XS_POSIX_sigaction+0x9dc>  // b.none
    f374:	ldr	x0, [sp, #160]
    f378:	ldr	x0, [x0]
    f37c:	mov	w2, #0x0                   	// #0
    f380:	mov	x1, x0
    f384:	ldr	x0, [sp, #40]
    f388:	bl	6590 <Perl_sv_2bool_flags@plt>
    f38c:	and	w0, w0, #0xff
    f390:	cmp	w0, #0x0
    f394:	b.eq	f3a0 <XS_POSIX_sigaction+0x9e4>  // b.none
    f398:	mov	w0, #0x1                   	// #1
    f39c:	b	f3a4 <XS_POSIX_sigaction+0x9e8>
    f3a0:	mov	w0, #0x0                   	// #0
    f3a4:	and	w0, w0, #0x1
    f3a8:	and	w0, w0, #0xff
    f3ac:	b	f3b4 <XS_POSIX_sigaction+0x9f8>
    f3b0:	mov	w0, #0x0                   	// #0
    f3b4:	cmp	w0, #0x0
    f3b8:	b.eq	f3e0 <XS_POSIX_sigaction+0xa24>  // b.none
    f3bc:	ldr	x0, [sp, #184]
    f3c0:	ldr	x1, [x0]
    f3c4:	ldr	x0, [sp, #160]
    f3c8:	ldr	x0, [x0]
    f3cc:	mov	w3, #0x2                   	// #2
    f3d0:	mov	x2, x0
    f3d4:	ldr	x0, [sp, #40]
    f3d8:	bl	6d50 <Perl_sv_setsv_flags@plt>
    f3dc:	b	f3fc <XS_POSIX_sigaction+0xa40>
    f3e0:	ldr	x0, [sp, #184]
    f3e4:	ldr	x1, [x0]
    f3e8:	mov	x3, #0x7                   	// #7
    f3ec:	adrp	x0, 1b000 <_fini+0x1fc>
    f3f0:	add	x2, x0, #0x610
    f3f4:	ldr	x0, [sp, #40]
    f3f8:	bl	6f10 <Perl_sv_setpvn@plt>
    f3fc:	add	x0, sp, #0x290
    f400:	mov	x2, x0
    f404:	mov	x1, #0x0                   	// #0
    f408:	ldr	w0, [sp, #60]
    f40c:	bl	6a90 <sigaction@plt>
    f410:	str	w0, [sp, #64]
    f414:	ldr	w0, [sp, #64]
    f418:	cmn	w0, #0x1
    f41c:	b.ne	f47c <XS_POSIX_sigaction+0xac0>  // b.any
    f420:	ldr	x0, [sp, #40]
    f424:	bl	6770 <Perl_pop_scope@plt>
    f428:	ldr	x0, [sp, #40]
    f42c:	ldr	x1, [x0, #24]
    f430:	ldrsw	x0, [sp, #72]
    f434:	lsl	x0, x0, #3
    f438:	add	x0, x1, x0
    f43c:	ldr	x1, [sp, #40]
    f440:	add	x1, x1, #0x150
    f444:	str	x1, [x0]
    f448:	mov	x0, #0x1                   	// #1
    f44c:	str	x0, [sp, #192]
    f450:	ldr	x0, [sp, #40]
    f454:	ldr	x1, [x0, #24]
    f458:	ldrsw	x2, [sp, #72]
    f45c:	ldr	x0, [sp, #192]
    f460:	add	x0, x2, x0
    f464:	lsl	x0, x0, #3
    f468:	sub	x0, x0, #0x8
    f46c:	add	x1, x1, x0
    f470:	ldr	x0, [sp, #40]
    f474:	str	x1, [x0]
    f478:	b	fc98 <XS_POSIX_sigaction+0x12dc>
    f47c:	mov	w6, #0x0                   	// #0
    f480:	mov	x5, #0x0                   	// #0
    f484:	mov	w4, #0x30                  	// #48
    f488:	mov	w3, #0x4                   	// #4
    f48c:	adrp	x0, 1b000 <_fini+0x1fc>
    f490:	add	x2, x0, #0x618
    f494:	ldr	x1, [sp, #80]
    f498:	ldr	x0, [sp, #40]
    f49c:	bl	6f00 <Perl_hv_common_key_len@plt>
    f4a0:	str	x0, [sp, #184]
    f4a4:	ldr	x0, [sp, #184]
    f4a8:	ldr	x1, [x0]
    f4ac:	adrp	x0, 1b000 <_fini+0x1fc>
    f4b0:	add	x2, x0, #0x118
    f4b4:	ldr	x0, [sp, #40]
    f4b8:	bl	6990 <Perl_sv_isa@plt>
    f4bc:	cmp	w0, #0x0
    f4c0:	b.eq	f524 <XS_POSIX_sigaction+0xb68>  // b.none
    f4c4:	ldr	x0, [sp, #184]
    f4c8:	ldr	x0, [x0]
    f4cc:	ldr	x0, [x0, #16]
    f4d0:	ldr	w1, [x0, #12]
    f4d4:	mov	w0, #0x400                 	// #1024
    f4d8:	movk	w0, #0x20, lsl #16
    f4dc:	and	w0, w1, w0
    f4e0:	cmp	w0, #0x400
    f4e4:	b.ne	f4fc <XS_POSIX_sigaction+0xb40>  // b.any
    f4e8:	ldr	x0, [sp, #184]
    f4ec:	ldr	x0, [x0]
    f4f0:	ldr	x0, [x0, #16]
    f4f4:	ldr	x0, [x0, #16]
    f4f8:	b	f51c <XS_POSIX_sigaction+0xb60>
    f4fc:	ldr	x0, [sp, #184]
    f500:	ldr	x0, [x0]
    f504:	ldr	x0, [x0, #16]
    f508:	mov	w3, #0x2                   	// #2
    f50c:	mov	x2, #0x0                   	// #0
    f510:	mov	x1, x0
    f514:	ldr	x0, [sp, #40]
    f518:	bl	69b0 <Perl_sv_2pv_flags@plt>
    f51c:	str	x0, [sp, #96]
    f520:	b	f544 <XS_POSIX_sigaction+0xb88>
    f524:	ldr	x0, [sp, #184]
    f528:	ldr	x1, [x0]
    f52c:	adrp	x0, 1b000 <_fini+0x1fc>
    f530:	add	x3, x0, #0x118
    f534:	mov	x2, #0x80                  	// #128
    f538:	ldr	x0, [sp, #40]
    f53c:	bl	816c <allocate_struct>
    f540:	str	x0, [sp, #96]
    f544:	ldr	x0, [sp, #96]
    f548:	mov	x1, x0
    f54c:	add	x0, sp, #0x298
    f550:	ldp	x2, x3, [x0]
    f554:	stp	x2, x3, [x1]
    f558:	ldp	x2, x3, [x0, #16]
    f55c:	stp	x2, x3, [x1, #16]
    f560:	ldp	x2, x3, [x0, #32]
    f564:	stp	x2, x3, [x1, #32]
    f568:	ldp	x2, x3, [x0, #48]
    f56c:	stp	x2, x3, [x1, #48]
    f570:	ldp	x2, x3, [x0, #64]
    f574:	stp	x2, x3, [x1, #64]
    f578:	ldp	x2, x3, [x0, #80]
    f57c:	stp	x2, x3, [x1, #80]
    f580:	ldp	x2, x3, [x0, #96]
    f584:	stp	x2, x3, [x1, #96]
    f588:	ldp	x2, x3, [x0, #112]
    f58c:	stp	x2, x3, [x1, #112]
    f590:	mov	w6, #0x0                   	// #0
    f594:	mov	x5, #0x0                   	// #0
    f598:	mov	w4, #0x30                  	// #48
    f59c:	mov	w3, #0x5                   	// #5
    f5a0:	adrp	x0, 1b000 <_fini+0x1fc>
    f5a4:	add	x2, x0, #0x620
    f5a8:	ldr	x1, [sp, #80]
    f5ac:	ldr	x0, [sp, #40]
    f5b0:	bl	6f00 <Perl_hv_common_key_len@plt>
    f5b4:	str	x0, [sp, #184]
    f5b8:	ldr	x0, [sp, #184]
    f5bc:	ldr	x0, [x0]
    f5c0:	ldr	w1, [sp, #792]
    f5c4:	sxtw	x1, w1
    f5c8:	mov	x2, x1
    f5cc:	mov	x1, x0
    f5d0:	ldr	x0, [sp, #40]
    f5d4:	bl	7120 <Perl_sv_setiv@plt>
    f5d8:	mov	w6, #0x0                   	// #0
    f5dc:	mov	x5, #0x0                   	// #0
    f5e0:	mov	w4, #0x30                  	// #48
    f5e4:	mov	w3, #0x4                   	// #4
    f5e8:	adrp	x0, 1b000 <_fini+0x1fc>
    f5ec:	add	x2, x0, #0x628
    f5f0:	ldr	x1, [sp, #80]
    f5f4:	ldr	x0, [sp, #40]
    f5f8:	bl	6f00 <Perl_hv_common_key_len@plt>
    f5fc:	str	x0, [sp, #184]
    f600:	ldr	x0, [sp, #184]
    f604:	ldr	x1, [x0]
    f608:	ldr	x0, [sp, #656]
    f60c:	mov	x2, x0
    f610:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    f614:	ldr	x0, [x0, #4032]
    f618:	ldr	x0, [x0]
    f61c:	cmp	x2, x0
    f620:	cset	w0, eq  // eq = none
    f624:	and	w0, w0, #0xff
    f628:	and	x0, x0, #0xff
    f62c:	mov	x2, x0
    f630:	ldr	x0, [sp, #40]
    f634:	bl	7120 <Perl_sv_setiv@plt>
    f638:	ldr	x0, [sp, #88]
    f63c:	cmp	x0, #0x0
    f640:	b.eq	fbec <XS_POSIX_sigaction+0x1230>  // b.none
    f644:	mov	w6, #0x0                   	// #0
    f648:	mov	x5, #0x0                   	// #0
    f64c:	mov	w4, #0x20                  	// #32
    f650:	mov	w3, #0x4                   	// #4
    f654:	adrp	x0, 1b000 <_fini+0x1fc>
    f658:	add	x2, x0, #0x628
    f65c:	ldr	x1, [sp, #88]
    f660:	ldr	x0, [sp, #40]
    f664:	bl	6f00 <Perl_hv_common_key_len@plt>
    f668:	str	x0, [sp, #184]
    f66c:	ldr	x0, [sp, #184]
    f670:	ldr	x0, [x0]
    f674:	cmp	x0, #0x0
    f678:	b.eq	f8c0 <XS_POSIX_sigaction+0xf04>  // b.none
    f67c:	ldr	x0, [sp, #184]
    f680:	ldr	x0, [x0]
    f684:	cmp	x0, #0x0
    f688:	cset	w0, ne  // ne = any
    f68c:	and	w0, w0, #0xff
    f690:	and	x0, x0, #0xff
    f694:	cmp	x0, #0x0
    f698:	b.eq	f8c0 <XS_POSIX_sigaction+0xf04>  // b.none
    f69c:	ldr	x0, [sp, #184]
    f6a0:	ldr	x0, [x0]
    f6a4:	ldr	w0, [x0, #12]
    f6a8:	lsr	w0, w0, #21
    f6ac:	mov	w0, w0
    f6b0:	and	x0, x0, #0x1
    f6b4:	cmp	x0, #0x0
    f6b8:	b.eq	f6d8 <XS_POSIX_sigaction+0xd1c>  // b.none
    f6bc:	ldr	x0, [sp, #184]
    f6c0:	ldr	x0, [x0]
    f6c4:	mov	x1, x0
    f6c8:	ldr	x0, [sp, #40]
    f6cc:	bl	6d90 <Perl_mg_get@plt>
    f6d0:	cmp	w0, #0x0
    f6d4:	nop
    f6d8:	ldr	x0, [sp, #184]
    f6dc:	ldr	x1, [x0]
    f6e0:	ldr	x0, [sp, #40]
    f6e4:	add	x0, x0, #0x138
    f6e8:	sub	x0, x1, x0
    f6ec:	asr	x1, x0, #3
    f6f0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f6f4:	movk	x0, #0xaaab
    f6f8:	mul	x0, x1, x0
    f6fc:	cmp	x0, #0x3
    f700:	b.hi	f724 <XS_POSIX_sigaction+0xd68>  // b.pmore
    f704:	ldr	x0, [sp, #184]
    f708:	ldr	x1, [x0]
    f70c:	ldr	x0, [sp, #40]
    f710:	add	x0, x0, #0x138
    f714:	cmp	x1, x0
    f718:	cset	w0, ne  // ne = any
    f71c:	and	w0, w0, #0xff
    f720:	b	f8b8 <XS_POSIX_sigaction+0xefc>
    f724:	ldr	x0, [sp, #184]
    f728:	ldr	x0, [x0]
    f72c:	ldr	w0, [x0, #12]
    f730:	and	w0, w0, #0xff00
    f734:	cmp	w0, #0x0
    f738:	b.eq	f8b4 <XS_POSIX_sigaction+0xef8>  // b.none
    f73c:	ldr	x0, [sp, #184]
    f740:	ldr	x0, [x0]
    f744:	ldr	w0, [x0, #12]
    f748:	and	w0, w0, #0x400
    f74c:	cmp	w0, #0x0
    f750:	b.eq	f7cc <XS_POSIX_sigaction+0xe10>  // b.none
    f754:	ldr	x0, [sp, #184]
    f758:	ldr	x0, [x0]
    f75c:	ldr	x0, [x0]
    f760:	cmp	x0, #0x0
    f764:	b.eq	f7b8 <XS_POSIX_sigaction+0xdfc>  // b.none
    f768:	ldr	x0, [sp, #184]
    f76c:	ldr	x0, [x0]
    f770:	ldr	x0, [x0]
    f774:	ldr	x0, [x0, #16]
    f778:	cmp	x0, #0x1
    f77c:	b.hi	f7b0 <XS_POSIX_sigaction+0xdf4>  // b.pmore
    f780:	ldr	x0, [sp, #184]
    f784:	ldr	x0, [x0]
    f788:	ldr	x0, [x0]
    f78c:	ldr	x0, [x0, #16]
    f790:	cmp	x0, #0x0
    f794:	b.eq	f7b8 <XS_POSIX_sigaction+0xdfc>  // b.none
    f798:	ldr	x0, [sp, #184]
    f79c:	ldr	x0, [x0]
    f7a0:	ldr	x0, [x0, #16]
    f7a4:	ldrb	w0, [x0]
    f7a8:	cmp	w0, #0x30
    f7ac:	b.eq	f7b8 <XS_POSIX_sigaction+0xdfc>  // b.none
    f7b0:	mov	w0, #0x1                   	// #1
    f7b4:	b	f7bc <XS_POSIX_sigaction+0xe00>
    f7b8:	mov	w0, #0x0                   	// #0
    f7bc:	cmp	w0, #0x0
    f7c0:	cset	w0, eq  // eq = none
    f7c4:	and	w0, w0, #0xff
    f7c8:	b	f8b8 <XS_POSIX_sigaction+0xefc>
    f7cc:	ldr	x0, [sp, #184]
    f7d0:	ldr	x0, [x0]
    f7d4:	ldr	w0, [x0, #12]
    f7d8:	and	w0, w0, #0x100
    f7dc:	cmp	w0, #0x0
    f7e0:	b.eq	f804 <XS_POSIX_sigaction+0xe48>  // b.none
    f7e4:	ldr	x0, [sp, #184]
    f7e8:	ldr	x0, [x0]
    f7ec:	ldr	x0, [x0]
    f7f0:	ldr	x0, [x0, #32]
    f7f4:	cmp	x0, #0x0
    f7f8:	cset	w0, eq  // eq = none
    f7fc:	and	w0, w0, #0xff
    f800:	b	f8b8 <XS_POSIX_sigaction+0xefc>
    f804:	ldr	x0, [sp, #184]
    f808:	ldr	x0, [x0]
    f80c:	ldr	w0, [x0, #12]
    f810:	and	w0, w0, #0x800
    f814:	cmp	w0, #0x0
    f818:	b.eq	f85c <XS_POSIX_sigaction+0xea0>  // b.none
    f81c:	ldr	x0, [sp, #184]
    f820:	ldr	x0, [x0]
    f824:	ldr	x0, [x0, #16]
    f828:	ldr	w0, [x0, #12]
    f82c:	and	w0, w0, #0x100000
    f830:	cmp	w0, #0x0
    f834:	b.eq	f864 <XS_POSIX_sigaction+0xea8>  // b.none
    f838:	ldr	x0, [sp, #184]
    f83c:	ldr	x0, [x0]
    f840:	ldr	x0, [x0, #16]
    f844:	ldr	x0, [x0]
    f848:	ldr	x0, [x0]
    f84c:	ldr	w0, [x0, #12]
    f850:	and	w0, w0, #0x10000000
    f854:	cmp	w0, #0x0
    f858:	b.eq	f864 <XS_POSIX_sigaction+0xea8>  // b.none
    f85c:	mov	w0, #0x1                   	// #1
    f860:	b	f868 <XS_POSIX_sigaction+0xeac>
    f864:	mov	w0, #0x0                   	// #0
    f868:	and	w0, w0, #0x1
    f86c:	and	w0, w0, #0xff
    f870:	cmp	w0, #0x0
    f874:	b.eq	f8ac <XS_POSIX_sigaction+0xef0>  // b.none
    f878:	ldr	x0, [sp, #184]
    f87c:	ldr	x0, [x0]
    f880:	mov	w2, #0x0                   	// #0
    f884:	mov	x1, x0
    f888:	ldr	x0, [sp, #40]
    f88c:	bl	6590 <Perl_sv_2bool_flags@plt>
    f890:	and	w0, w0, #0xff
    f894:	eor	w0, w0, #0x1
    f898:	and	w0, w0, #0xff
    f89c:	cmp	w0, #0x0
    f8a0:	b.eq	f8ac <XS_POSIX_sigaction+0xef0>  // b.none
    f8a4:	mov	w0, #0x1                   	// #1
    f8a8:	b	f8b8 <XS_POSIX_sigaction+0xefc>
    f8ac:	mov	w0, #0x0                   	// #0
    f8b0:	b	f8b8 <XS_POSIX_sigaction+0xefc>
    f8b4:	mov	w0, #0x1                   	// #1
    f8b8:	cmp	w0, #0x0
    f8bc:	b.eq	f8cc <XS_POSIX_sigaction+0xf10>  // b.none
    f8c0:	ldr	x0, [sp, #40]
    f8c4:	ldr	x0, [x0, #2232]
    f8c8:	b	f8d8 <XS_POSIX_sigaction+0xf1c>
    f8cc:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    f8d0:	ldr	x0, [x0, #4032]
    f8d4:	ldr	x0, [x0]
    f8d8:	str	x0, [sp, #504]
    f8dc:	mov	w6, #0x0                   	// #0
    f8e0:	mov	x5, #0x0                   	// #0
    f8e4:	mov	w4, #0x20                  	// #32
    f8e8:	mov	w3, #0x7                   	// #7
    f8ec:	adrp	x0, 1b000 <_fini+0x1fc>
    f8f0:	add	x2, x0, #0x5d8
    f8f4:	ldr	x1, [sp, #88]
    f8f8:	ldr	x0, [sp, #40]
    f8fc:	bl	6f00 <Perl_hv_common_key_len@plt>
    f900:	str	x0, [sp, #184]
    f904:	ldr	x0, [sp, #184]
    f908:	cmp	x0, #0x0
    f90c:	b.ne	f91c <XS_POSIX_sigaction+0xf60>  // b.any
    f910:	adrp	x0, 1b000 <_fini+0x1fc>
    f914:	add	x0, x0, #0x630
    f918:	bl	6cd0 <Perl_croak_nocontext@plt>
    f91c:	ldr	x0, [sp, #160]
    f920:	ldr	x1, [x0]
    f924:	ldr	x0, [sp, #184]
    f928:	ldr	x0, [x0]
    f92c:	mov	w3, #0x2                   	// #2
    f930:	mov	x2, x0
    f934:	ldr	x0, [sp, #40]
    f938:	bl	6d50 <Perl_sv_setsv_flags@plt>
    f93c:	ldr	x0, [sp, #160]
    f940:	ldr	x0, [x0]
    f944:	ldr	w0, [x0, #12]
    f948:	lsr	w0, w0, #22
    f94c:	mov	w0, w0
    f950:	and	x0, x0, #0x1
    f954:	cmp	x0, #0x0
    f958:	b.eq	f970 <XS_POSIX_sigaction+0xfb4>  // b.none
    f95c:	ldr	x0, [sp, #160]
    f960:	ldr	x0, [x0]
    f964:	mov	x1, x0
    f968:	ldr	x0, [sp, #40]
    f96c:	bl	6d40 <Perl_mg_set@plt>
    f970:	ldr	x0, [sp, #184]
    f974:	ldr	x0, [x0]
    f978:	ldr	w0, [x0, #12]
    f97c:	and	w0, w0, #0x400
    f980:	cmp	w0, #0x0
    f984:	b.eq	f9d8 <XS_POSIX_sigaction+0x101c>  // b.none
    f988:	ldr	x0, [sp, #184]
    f98c:	ldr	x0, [x0]
    f990:	ldr	x0, [x0, #16]
    f994:	str	x0, [sp, #200]
    f998:	adrp	x0, 1b000 <_fini+0x1fc>
    f99c:	add	x1, x0, #0x660
    f9a0:	ldr	x0, [sp, #200]
    f9a4:	bl	6c40 <strcmp@plt>
    f9a8:	cmp	w0, #0x0
    f9ac:	b.ne	f9bc <XS_POSIX_sigaction+0x1000>  // b.any
    f9b0:	mov	x0, #0x1                   	// #1
    f9b4:	str	x0, [sp, #504]
    f9b8:	b	f9d8 <XS_POSIX_sigaction+0x101c>
    f9bc:	adrp	x0, 1b000 <_fini+0x1fc>
    f9c0:	add	x1, x0, #0x610
    f9c4:	ldr	x0, [sp, #200]
    f9c8:	bl	6c40 <strcmp@plt>
    f9cc:	cmp	w0, #0x0
    f9d0:	b.ne	f9d8 <XS_POSIX_sigaction+0x101c>  // b.any
    f9d4:	str	xzr, [sp, #504]
    f9d8:	mov	w6, #0x0                   	// #0
    f9dc:	mov	x5, #0x0                   	// #0
    f9e0:	mov	w4, #0x20                  	// #32
    f9e4:	mov	w3, #0x4                   	// #4
    f9e8:	adrp	x0, 1b000 <_fini+0x1fc>
    f9ec:	add	x2, x0, #0x618
    f9f0:	ldr	x1, [sp, #88]
    f9f4:	ldr	x0, [sp, #40]
    f9f8:	bl	6f00 <Perl_hv_common_key_len@plt>
    f9fc:	str	x0, [sp, #184]
    fa00:	ldr	x0, [sp, #184]
    fa04:	cmp	x0, #0x0
    fa08:	b.eq	fad4 <XS_POSIX_sigaction+0x1118>  // b.none
    fa0c:	ldr	x0, [sp, #184]
    fa10:	ldr	x1, [x0]
    fa14:	adrp	x0, 1b000 <_fini+0x1fc>
    fa18:	add	x2, x0, #0x118
    fa1c:	ldr	x0, [sp, #40]
    fa20:	bl	6990 <Perl_sv_isa@plt>
    fa24:	cmp	w0, #0x0
    fa28:	b.eq	fad4 <XS_POSIX_sigaction+0x1118>  // b.none
    fa2c:	ldr	x0, [sp, #184]
    fa30:	ldr	x0, [x0]
    fa34:	ldr	x0, [x0, #16]
    fa38:	ldr	w1, [x0, #12]
    fa3c:	mov	w0, #0x400                 	// #1024
    fa40:	movk	w0, #0x20, lsl #16
    fa44:	and	w0, w1, w0
    fa48:	cmp	w0, #0x400
    fa4c:	b.ne	fa64 <XS_POSIX_sigaction+0x10a8>  // b.any
    fa50:	ldr	x0, [sp, #184]
    fa54:	ldr	x0, [x0]
    fa58:	ldr	x0, [x0, #16]
    fa5c:	ldr	x0, [x0, #16]
    fa60:	b	fa84 <XS_POSIX_sigaction+0x10c8>
    fa64:	ldr	x0, [sp, #184]
    fa68:	ldr	x0, [x0]
    fa6c:	ldr	x0, [x0, #16]
    fa70:	mov	w3, #0x2                   	// #2
    fa74:	mov	x2, #0x0                   	// #0
    fa78:	mov	x1, x0
    fa7c:	ldr	x0, [sp, #40]
    fa80:	bl	69b0 <Perl_sv_2pv_flags@plt>
    fa84:	str	x0, [sp, #96]
    fa88:	ldr	x1, [sp, #96]
    fa8c:	add	x0, sp, #0x200
    fa90:	ldp	x2, x3, [x1]
    fa94:	stp	x2, x3, [x0]
    fa98:	ldp	x2, x3, [x1, #16]
    fa9c:	stp	x2, x3, [x0, #16]
    faa0:	ldp	x2, x3, [x1, #32]
    faa4:	stp	x2, x3, [x0, #32]
    faa8:	ldp	x2, x3, [x1, #48]
    faac:	stp	x2, x3, [x0, #48]
    fab0:	ldp	x2, x3, [x1, #64]
    fab4:	stp	x2, x3, [x0, #64]
    fab8:	ldp	x2, x3, [x1, #80]
    fabc:	stp	x2, x3, [x0, #80]
    fac0:	ldp	x2, x3, [x1, #96]
    fac4:	stp	x2, x3, [x0, #96]
    fac8:	ldp	x2, x3, [x1, #112]
    facc:	stp	x2, x3, [x0, #112]
    fad0:	b	fae0 <XS_POSIX_sigaction+0x1124>
    fad4:	add	x0, sp, #0x1f8
    fad8:	add	x0, x0, #0x8
    fadc:	bl	6930 <sigemptyset@plt>
    fae0:	mov	w6, #0x0                   	// #0
    fae4:	mov	x5, #0x0                   	// #0
    fae8:	mov	w4, #0x20                  	// #32
    faec:	mov	w3, #0x5                   	// #5
    faf0:	adrp	x0, 1b000 <_fini+0x1fc>
    faf4:	add	x2, x0, #0x620
    faf8:	ldr	x1, [sp, #88]
    fafc:	ldr	x0, [sp, #40]
    fb00:	bl	6f00 <Perl_hv_common_key_len@plt>
    fb04:	str	x0, [sp, #184]
    fb08:	ldr	x0, [sp, #184]
    fb0c:	cmp	x0, #0x0
    fb10:	b.eq	fb64 <XS_POSIX_sigaction+0x11a8>  // b.none
    fb14:	ldr	x0, [sp, #184]
    fb18:	ldr	x0, [x0]
    fb1c:	ldr	w1, [x0, #12]
    fb20:	mov	w0, #0x100                 	// #256
    fb24:	movk	w0, #0x20, lsl #16
    fb28:	and	w0, w1, w0
    fb2c:	cmp	w0, #0x100
    fb30:	b.ne	fb48 <XS_POSIX_sigaction+0x118c>  // b.any
    fb34:	ldr	x0, [sp, #184]
    fb38:	ldr	x0, [x0]
    fb3c:	ldr	x0, [x0]
    fb40:	ldr	x0, [x0, #32]
    fb44:	b	fb68 <XS_POSIX_sigaction+0x11ac>
    fb48:	ldr	x0, [sp, #184]
    fb4c:	ldr	x0, [x0]
    fb50:	mov	w2, #0x2                   	// #2
    fb54:	mov	x1, x0
    fb58:	ldr	x0, [sp, #40]
    fb5c:	bl	6560 <Perl_sv_2iv_flags@plt>
    fb60:	b	fb68 <XS_POSIX_sigaction+0x11ac>
    fb64:	mov	w0, #0x0                   	// #0
    fb68:	str	w0, [sp, #640]
    fb6c:	add	x0, sp, #0x1f8
    fb70:	mov	x2, #0x0                   	// #0
    fb74:	mov	x1, x0
    fb78:	ldr	w0, [sp, #60]
    fb7c:	bl	6a90 <sigaction@plt>
    fb80:	str	w0, [sp, #64]
    fb84:	ldr	w0, [sp, #64]
    fb88:	cmn	w0, #0x1
    fb8c:	b.ne	fbec <XS_POSIX_sigaction+0x1230>  // b.any
    fb90:	ldr	x0, [sp, #40]
    fb94:	bl	6770 <Perl_pop_scope@plt>
    fb98:	ldr	x0, [sp, #40]
    fb9c:	ldr	x1, [x0, #24]
    fba0:	ldrsw	x0, [sp, #72]
    fba4:	lsl	x0, x0, #3
    fba8:	add	x0, x1, x0
    fbac:	ldr	x1, [sp, #40]
    fbb0:	add	x1, x1, #0x150
    fbb4:	str	x1, [x0]
    fbb8:	mov	x0, #0x1                   	// #1
    fbbc:	str	x0, [sp, #208]
    fbc0:	ldr	x0, [sp, #40]
    fbc4:	ldr	x1, [x0, #24]
    fbc8:	ldrsw	x2, [sp, #72]
    fbcc:	ldr	x0, [sp, #208]
    fbd0:	add	x0, x2, x0
    fbd4:	lsl	x0, x0, #3
    fbd8:	sub	x0, x0, #0x8
    fbdc:	add	x1, x1, x0
    fbe0:	ldr	x0, [sp, #40]
    fbe4:	str	x1, [x0]
    fbe8:	b	fc98 <XS_POSIX_sigaction+0x12dc>
    fbec:	ldr	x0, [sp, #40]
    fbf0:	bl	6770 <Perl_pop_scope@plt>
    fbf4:	ldr	x0, [sp, #40]
    fbf8:	bl	7160 <Perl_sv_newmortal@plt>
    fbfc:	str	x0, [sp, #216]
    fc00:	ldr	w0, [sp, #64]
    fc04:	cmn	w0, #0x1
    fc08:	b.eq	fc48 <XS_POSIX_sigaction+0x128c>  // b.none
    fc0c:	ldr	w0, [sp, #64]
    fc10:	cmp	w0, #0x0
    fc14:	b.ne	fc34 <XS_POSIX_sigaction+0x1278>  // b.any
    fc18:	mov	x3, #0xa                   	// #10
    fc1c:	adrp	x0, 1b000 <_fini+0x1fc>
    fc20:	add	x2, x0, #0x188
    fc24:	ldr	x1, [sp, #216]
    fc28:	ldr	x0, [sp, #40]
    fc2c:	bl	6f10 <Perl_sv_setpvn@plt>
    fc30:	b	fc48 <XS_POSIX_sigaction+0x128c>
    fc34:	ldrsw	x0, [sp, #64]
    fc38:	mov	x2, x0
    fc3c:	ldr	x1, [sp, #216]
    fc40:	ldr	x0, [sp, #40]
    fc44:	bl	7120 <Perl_sv_setiv@plt>
    fc48:	ldr	x0, [sp, #40]
    fc4c:	ldr	x1, [x0, #24]
    fc50:	ldrsw	x0, [sp, #72]
    fc54:	lsl	x0, x0, #3
    fc58:	add	x0, x1, x0
    fc5c:	ldr	x1, [sp, #216]
    fc60:	str	x1, [x0]
    fc64:	mov	x0, #0x1                   	// #1
    fc68:	str	x0, [sp, #224]
    fc6c:	ldr	x0, [sp, #40]
    fc70:	ldr	x1, [x0, #24]
    fc74:	ldrsw	x2, [sp, #72]
    fc78:	ldr	x0, [sp, #224]
    fc7c:	add	x0, x2, x0
    fc80:	lsl	x0, x0, #3
    fc84:	sub	x0, x0, #0x8
    fc88:	add	x1, x1, x0
    fc8c:	ldr	x0, [sp, #40]
    fc90:	str	x1, [x0]
    fc94:	nop
    fc98:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
    fc9c:	ldr	x0, [x0, #3992]
    fca0:	ldr	x1, [sp, #808]
    fca4:	ldr	x0, [x0]
    fca8:	eor	x0, x1, x0
    fcac:	cmp	x0, #0x0
    fcb0:	b.eq	fcb8 <XS_POSIX_sigaction+0x12fc>  // b.none
    fcb4:	bl	6a60 <__stack_chk_fail@plt>
    fcb8:	ldp	x19, x20, [sp, #16]
    fcbc:	ldp	x29, x30, [sp]
    fcc0:	add	sp, sp, #0x330
    fcc4:	ret

000000000000fcc8 <XS_POSIX_sigpending>:
    fcc8:	stp	x29, x30, [sp, #-112]!
    fccc:	mov	x29, sp
    fcd0:	str	x0, [sp, #24]
    fcd4:	str	x1, [sp, #16]
    fcd8:	ldr	x0, [sp, #24]
    fcdc:	ldr	x0, [x0]
    fce0:	str	x0, [sp, #56]
    fce4:	ldr	x0, [sp, #24]
    fce8:	bl	739c <S_POPMARK>
    fcec:	str	w0, [sp, #40]
    fcf0:	ldr	x0, [sp, #24]
    fcf4:	ldr	x1, [x0, #24]
    fcf8:	ldr	w0, [sp, #40]
    fcfc:	add	w2, w0, #0x1
    fd00:	str	w2, [sp, #40]
    fd04:	sxtw	x0, w0
    fd08:	lsl	x0, x0, #3
    fd0c:	add	x0, x1, x0
    fd10:	str	x0, [sp, #64]
    fd14:	ldr	x1, [sp, #56]
    fd18:	ldr	x0, [sp, #64]
    fd1c:	sub	x0, x1, x0
    fd20:	asr	x0, x0, #3
    fd24:	str	w0, [sp, #44]
    fd28:	ldr	x0, [sp, #16]
    fd2c:	ldr	x0, [x0]
    fd30:	str	x0, [sp, #72]
    fd34:	ldr	x0, [sp, #72]
    fd38:	ldr	w0, [x0, #40]
    fd3c:	str	w0, [sp, #48]
    fd40:	ldr	w0, [sp, #44]
    fd44:	cmp	w0, #0x1
    fd48:	b.eq	fd5c <XS_POSIX_sigpending+0x94>  // b.none
    fd4c:	adrp	x0, 1b000 <_fini+0x1fc>
    fd50:	add	x1, x0, #0x138
    fd54:	ldr	x0, [sp, #16]
    fd58:	bl	6b20 <Perl_croak_xs_usage@plt>
    fd5c:	ldr	x0, [sp, #24]
    fd60:	ldr	x1, [x0, #24]
    fd64:	ldrsw	x0, [sp, #40]
    fd68:	lsl	x0, x0, #3
    fd6c:	add	x0, x1, x0
    fd70:	ldr	x0, [x0]
    fd74:	str	x0, [sp, #80]
    fd78:	ldr	x0, [sp, #80]
    fd7c:	ldr	w0, [x0, #12]
    fd80:	and	w0, w0, #0x800
    fd84:	cmp	w0, #0x0
    fd88:	b.eq	fe0c <XS_POSIX_sigpending+0x144>  // b.none
    fd8c:	adrp	x0, 1b000 <_fini+0x1fc>
    fd90:	add	x2, x0, #0x118
    fd94:	ldr	x1, [sp, #80]
    fd98:	ldr	x0, [sp, #24]
    fd9c:	bl	6750 <Perl_sv_derived_from@plt>
    fda0:	and	w0, w0, #0xff
    fda4:	cmp	w0, #0x0
    fda8:	b.eq	fe0c <XS_POSIX_sigpending+0x144>  // b.none
    fdac:	ldr	x0, [sp, #80]
    fdb0:	ldr	x0, [x0, #16]
    fdb4:	ldr	w1, [x0, #12]
    fdb8:	mov	w0, #0x400                 	// #1024
    fdbc:	movk	w0, #0x20, lsl #16
    fdc0:	and	w0, w1, w0
    fdc4:	cmp	w0, #0x400
    fdc8:	b.ne	fddc <XS_POSIX_sigpending+0x114>  // b.any
    fdcc:	ldr	x0, [sp, #80]
    fdd0:	ldr	x0, [x0, #16]
    fdd4:	ldr	x0, [x0, #16]
    fdd8:	b	fdf8 <XS_POSIX_sigpending+0x130>
    fddc:	ldr	x0, [sp, #80]
    fde0:	ldr	x0, [x0, #16]
    fde4:	mov	w3, #0x2                   	// #2
    fde8:	mov	x2, #0x0                   	// #0
    fdec:	mov	x1, x0
    fdf0:	ldr	x0, [sp, #24]
    fdf4:	bl	69b0 <Perl_sv_2pv_flags@plt>
    fdf8:	str	x0, [sp, #88]
    fdfc:	ldr	w0, [sp, #48]
    fe00:	cmp	w0, #0x0
    fe04:	b.ne	fe40 <XS_POSIX_sigpending+0x178>  // b.any
    fe08:	b	fe4c <XS_POSIX_sigpending+0x184>
    fe0c:	ldr	x1, [sp, #16]
    fe10:	ldr	x0, [sp, #24]
    fe14:	bl	7340 <S_CvGV>
    fe18:	ldr	x0, [x0]
    fe1c:	ldr	x0, [x0, #32]
    fe20:	add	x1, x0, #0x8
    fe24:	adrp	x0, 1b000 <_fini+0x1fc>
    fe28:	add	x3, x0, #0x118
    fe2c:	adrp	x0, 1b000 <_fini+0x1fc>
    fe30:	add	x2, x0, #0x138
    fe34:	adrp	x0, 1b000 <_fini+0x1fc>
    fe38:	add	x0, x0, #0x140
    fe3c:	bl	6cd0 <Perl_croak_nocontext@plt>
    fe40:	ldr	x0, [sp, #88]
    fe44:	bl	6700 <sigsuspend@plt>
    fe48:	b	fe54 <XS_POSIX_sigpending+0x18c>
    fe4c:	ldr	x0, [sp, #88]
    fe50:	bl	7020 <sigpending@plt>
    fe54:	str	w0, [sp, #52]
    fe58:	ldr	x0, [sp, #24]
    fe5c:	bl	7160 <Perl_sv_newmortal@plt>
    fe60:	str	x0, [sp, #96]
    fe64:	ldr	w0, [sp, #52]
    fe68:	cmn	w0, #0x1
    fe6c:	b.eq	feac <XS_POSIX_sigpending+0x1e4>  // b.none
    fe70:	ldr	w0, [sp, #52]
    fe74:	cmp	w0, #0x0
    fe78:	b.ne	fe98 <XS_POSIX_sigpending+0x1d0>  // b.any
    fe7c:	mov	x3, #0xa                   	// #10
    fe80:	adrp	x0, 1b000 <_fini+0x1fc>
    fe84:	add	x2, x0, #0x188
    fe88:	ldr	x1, [sp, #96]
    fe8c:	ldr	x0, [sp, #24]
    fe90:	bl	6f10 <Perl_sv_setpvn@plt>
    fe94:	b	feac <XS_POSIX_sigpending+0x1e4>
    fe98:	ldrsw	x0, [sp, #52]
    fe9c:	mov	x2, x0
    fea0:	ldr	x1, [sp, #96]
    fea4:	ldr	x0, [sp, #24]
    fea8:	bl	7120 <Perl_sv_setiv@plt>
    feac:	ldr	x0, [sp, #24]
    feb0:	ldr	x1, [x0, #24]
    feb4:	ldrsw	x0, [sp, #40]
    feb8:	lsl	x0, x0, #3
    febc:	add	x0, x1, x0
    fec0:	ldr	x1, [sp, #96]
    fec4:	str	x1, [x0]
    fec8:	ldr	x0, [sp, #24]
    fecc:	ldr	w0, [x0, #1684]
    fed0:	cmp	w0, #0x0
    fed4:	cset	w0, ne  // ne = any
    fed8:	and	w0, w0, #0xff
    fedc:	and	x0, x0, #0xff
    fee0:	cmp	x0, #0x0
    fee4:	b.eq	fef8 <XS_POSIX_sigpending+0x230>  // b.none
    fee8:	ldr	x0, [sp, #24]
    feec:	ldr	x1, [x0, #2896]
    fef0:	ldr	x0, [sp, #24]
    fef4:	blr	x1
    fef8:	mov	x0, #0x1                   	// #1
    fefc:	str	x0, [sp, #104]
    ff00:	ldr	x0, [sp, #24]
    ff04:	ldr	x1, [x0, #24]
    ff08:	ldrsw	x2, [sp, #40]
    ff0c:	ldr	x0, [sp, #104]
    ff10:	add	x0, x2, x0
    ff14:	lsl	x0, x0, #3
    ff18:	sub	x0, x0, #0x8
    ff1c:	add	x1, x1, x0
    ff20:	ldr	x0, [sp, #24]
    ff24:	str	x1, [x0]
    ff28:	nop
    ff2c:	ldp	x29, x30, [sp], #112
    ff30:	ret

000000000000ff34 <XS_POSIX_sigprocmask>:
    ff34:	stp	x29, x30, [sp, #-96]!
    ff38:	mov	x29, sp
    ff3c:	str	x0, [sp, #24]
    ff40:	str	x1, [sp, #16]
    ff44:	ldr	x0, [sp, #24]
    ff48:	ldr	x0, [x0]
    ff4c:	str	x0, [sp, #64]
    ff50:	ldr	x0, [sp, #24]
    ff54:	bl	739c <S_POPMARK>
    ff58:	str	w0, [sp, #32]
    ff5c:	ldr	x0, [sp, #24]
    ff60:	ldr	x1, [x0, #24]
    ff64:	ldr	w0, [sp, #32]
    ff68:	add	w2, w0, #0x1
    ff6c:	str	w2, [sp, #32]
    ff70:	sxtw	x0, w0
    ff74:	lsl	x0, x0, #3
    ff78:	add	x0, x1, x0
    ff7c:	str	x0, [sp, #72]
    ff80:	ldr	x1, [sp, #64]
    ff84:	ldr	x0, [sp, #72]
    ff88:	sub	x0, x1, x0
    ff8c:	asr	x0, x0, #3
    ff90:	str	w0, [sp, #36]
    ff94:	ldr	w0, [sp, #36]
    ff98:	cmp	w0, #0x1
    ff9c:	b.le	ffac <XS_POSIX_sigprocmask+0x78>
    ffa0:	ldr	w0, [sp, #36]
    ffa4:	cmp	w0, #0x3
    ffa8:	b.le	ffbc <XS_POSIX_sigprocmask+0x88>
    ffac:	adrp	x0, 1b000 <_fini+0x1fc>
    ffb0:	add	x1, x0, #0x668
    ffb4:	ldr	x0, [sp, #16]
    ffb8:	bl	6b20 <Perl_croak_xs_usage@plt>
    ffbc:	ldr	x0, [sp, #24]
    ffc0:	ldr	x1, [x0, #24]
    ffc4:	ldrsw	x0, [sp, #32]
    ffc8:	lsl	x0, x0, #3
    ffcc:	add	x0, x1, x0
    ffd0:	ldr	x0, [x0]
    ffd4:	ldr	w1, [x0, #12]
    ffd8:	mov	w0, #0x100                 	// #256
    ffdc:	movk	w0, #0x20, lsl #16
    ffe0:	and	w0, w1, w0
    ffe4:	cmp	w0, #0x100
    ffe8:	b.ne	10010 <XS_POSIX_sigprocmask+0xdc>  // b.any
    ffec:	ldr	x0, [sp, #24]
    fff0:	ldr	x1, [x0, #24]
    fff4:	ldrsw	x0, [sp, #32]
    fff8:	lsl	x0, x0, #3
    fffc:	add	x0, x1, x0
   10000:	ldr	x0, [x0]
   10004:	ldr	x0, [x0]
   10008:	ldr	x0, [x0, #32]
   1000c:	b	10038 <XS_POSIX_sigprocmask+0x104>
   10010:	ldr	x0, [sp, #24]
   10014:	ldr	x1, [x0, #24]
   10018:	ldrsw	x0, [sp, #32]
   1001c:	lsl	x0, x0, #3
   10020:	add	x0, x1, x0
   10024:	ldr	x0, [x0]
   10028:	mov	w2, #0x2                   	// #2
   1002c:	mov	x1, x0
   10030:	ldr	x0, [sp, #24]
   10034:	bl	6560 <Perl_sv_2iv_flags@plt>
   10038:	str	w0, [sp, #40]
   1003c:	ldr	x0, [sp, #24]
   10040:	ldr	x1, [x0, #24]
   10044:	ldrsw	x0, [sp, #32]
   10048:	add	x0, x0, #0x1
   1004c:	lsl	x0, x0, #3
   10050:	add	x0, x1, x0
   10054:	ldr	x0, [x0]
   10058:	ldr	w0, [x0, #12]
   1005c:	and	w0, w0, #0xff00
   10060:	cmp	w0, #0x0
   10064:	b.ne	10070 <XS_POSIX_sigprocmask+0x13c>  // b.any
   10068:	str	xzr, [sp, #48]
   1006c:	b	1014c <XS_POSIX_sigprocmask+0x218>
   10070:	ldr	x0, [sp, #24]
   10074:	ldr	x1, [x0, #24]
   10078:	ldrsw	x0, [sp, #32]
   1007c:	add	x0, x0, #0x1
   10080:	lsl	x0, x0, #3
   10084:	add	x0, x1, x0
   10088:	ldr	x1, [x0]
   1008c:	adrp	x0, 1b000 <_fini+0x1fc>
   10090:	add	x2, x0, #0x118
   10094:	ldr	x0, [sp, #24]
   10098:	bl	6990 <Perl_sv_isa@plt>
   1009c:	cmp	w0, #0x0
   100a0:	b.eq	10140 <XS_POSIX_sigprocmask+0x20c>  // b.none
   100a4:	ldr	x0, [sp, #24]
   100a8:	ldr	x1, [x0, #24]
   100ac:	ldrsw	x0, [sp, #32]
   100b0:	add	x0, x0, #0x1
   100b4:	lsl	x0, x0, #3
   100b8:	add	x0, x1, x0
   100bc:	ldr	x0, [x0]
   100c0:	ldr	x0, [x0, #16]
   100c4:	ldr	w1, [x0, #12]
   100c8:	mov	w0, #0x400                 	// #1024
   100cc:	movk	w0, #0x20, lsl #16
   100d0:	and	w0, w1, w0
   100d4:	cmp	w0, #0x400
   100d8:	b.ne	10104 <XS_POSIX_sigprocmask+0x1d0>  // b.any
   100dc:	ldr	x0, [sp, #24]
   100e0:	ldr	x1, [x0, #24]
   100e4:	ldrsw	x0, [sp, #32]
   100e8:	add	x0, x0, #0x1
   100ec:	lsl	x0, x0, #3
   100f0:	add	x0, x1, x0
   100f4:	ldr	x0, [x0]
   100f8:	ldr	x0, [x0, #16]
   100fc:	ldr	x0, [x0, #16]
   10100:	b	10138 <XS_POSIX_sigprocmask+0x204>
   10104:	ldr	x0, [sp, #24]
   10108:	ldr	x1, [x0, #24]
   1010c:	ldrsw	x0, [sp, #32]
   10110:	add	x0, x0, #0x1
   10114:	lsl	x0, x0, #3
   10118:	add	x0, x1, x0
   1011c:	ldr	x0, [x0]
   10120:	ldr	x0, [x0, #16]
   10124:	mov	w3, #0x2                   	// #2
   10128:	mov	x2, #0x0                   	// #0
   1012c:	mov	x1, x0
   10130:	ldr	x0, [sp, #24]
   10134:	bl	69b0 <Perl_sv_2pv_flags@plt>
   10138:	str	x0, [sp, #48]
   1013c:	b	1014c <XS_POSIX_sigprocmask+0x218>
   10140:	adrp	x0, 1b000 <_fini+0x1fc>
   10144:	add	x0, x0, #0x688
   10148:	bl	6cd0 <Perl_croak_nocontext@plt>
   1014c:	ldr	w0, [sp, #36]
   10150:	cmp	w0, #0x2
   10154:	b.le	10184 <XS_POSIX_sigprocmask+0x250>
   10158:	ldr	x0, [sp, #24]
   1015c:	ldr	x1, [x0, #24]
   10160:	ldrsw	x0, [sp, #32]
   10164:	add	x0, x0, #0x2
   10168:	lsl	x0, x0, #3
   1016c:	add	x0, x1, x0
   10170:	ldr	x0, [x0]
   10174:	ldr	w0, [x0, #12]
   10178:	and	w0, w0, #0xff00
   1017c:	cmp	w0, #0x0
   10180:	b.ne	1018c <XS_POSIX_sigprocmask+0x258>  // b.any
   10184:	str	xzr, [sp, #56]
   10188:	b	10268 <XS_POSIX_sigprocmask+0x334>
   1018c:	ldr	x0, [sp, #24]
   10190:	ldr	x1, [x0, #24]
   10194:	ldrsw	x0, [sp, #32]
   10198:	add	x0, x0, #0x2
   1019c:	lsl	x0, x0, #3
   101a0:	add	x0, x1, x0
   101a4:	ldr	x1, [x0]
   101a8:	adrp	x0, 1b000 <_fini+0x1fc>
   101ac:	add	x2, x0, #0x118
   101b0:	ldr	x0, [sp, #24]
   101b4:	bl	6990 <Perl_sv_isa@plt>
   101b8:	cmp	w0, #0x0
   101bc:	b.eq	1025c <XS_POSIX_sigprocmask+0x328>  // b.none
   101c0:	ldr	x0, [sp, #24]
   101c4:	ldr	x1, [x0, #24]
   101c8:	ldrsw	x0, [sp, #32]
   101cc:	add	x0, x0, #0x2
   101d0:	lsl	x0, x0, #3
   101d4:	add	x0, x1, x0
   101d8:	ldr	x0, [x0]
   101dc:	ldr	x0, [x0, #16]
   101e0:	ldr	w1, [x0, #12]
   101e4:	mov	w0, #0x400                 	// #1024
   101e8:	movk	w0, #0x20, lsl #16
   101ec:	and	w0, w1, w0
   101f0:	cmp	w0, #0x400
   101f4:	b.ne	10220 <XS_POSIX_sigprocmask+0x2ec>  // b.any
   101f8:	ldr	x0, [sp, #24]
   101fc:	ldr	x1, [x0, #24]
   10200:	ldrsw	x0, [sp, #32]
   10204:	add	x0, x0, #0x2
   10208:	lsl	x0, x0, #3
   1020c:	add	x0, x1, x0
   10210:	ldr	x0, [x0]
   10214:	ldr	x0, [x0, #16]
   10218:	ldr	x0, [x0, #16]
   1021c:	b	10254 <XS_POSIX_sigprocmask+0x320>
   10220:	ldr	x0, [sp, #24]
   10224:	ldr	x1, [x0, #24]
   10228:	ldrsw	x0, [sp, #32]
   1022c:	add	x0, x0, #0x2
   10230:	lsl	x0, x0, #3
   10234:	add	x0, x1, x0
   10238:	ldr	x0, [x0]
   1023c:	ldr	x0, [x0, #16]
   10240:	mov	w3, #0x2                   	// #2
   10244:	mov	x2, #0x0                   	// #0
   10248:	mov	x1, x0
   1024c:	ldr	x0, [sp, #24]
   10250:	bl	69b0 <Perl_sv_2pv_flags@plt>
   10254:	str	x0, [sp, #56]
   10258:	b	10268 <XS_POSIX_sigprocmask+0x334>
   1025c:	adrp	x0, 1b000 <_fini+0x1fc>
   10260:	add	x0, x0, #0x6b0
   10264:	bl	6cd0 <Perl_croak_nocontext@plt>
   10268:	ldr	x2, [sp, #56]
   1026c:	ldr	x1, [sp, #48]
   10270:	ldr	w0, [sp, #40]
   10274:	bl	66a0 <sigprocmask@plt>
   10278:	str	w0, [sp, #44]
   1027c:	ldr	x0, [sp, #24]
   10280:	bl	7160 <Perl_sv_newmortal@plt>
   10284:	str	x0, [sp, #80]
   10288:	ldr	w0, [sp, #44]
   1028c:	cmn	w0, #0x1
   10290:	b.eq	102d0 <XS_POSIX_sigprocmask+0x39c>  // b.none
   10294:	ldr	w0, [sp, #44]
   10298:	cmp	w0, #0x0
   1029c:	b.ne	102bc <XS_POSIX_sigprocmask+0x388>  // b.any
   102a0:	mov	x3, #0xa                   	// #10
   102a4:	adrp	x0, 1b000 <_fini+0x1fc>
   102a8:	add	x2, x0, #0x188
   102ac:	ldr	x1, [sp, #80]
   102b0:	ldr	x0, [sp, #24]
   102b4:	bl	6f10 <Perl_sv_setpvn@plt>
   102b8:	b	102d0 <XS_POSIX_sigprocmask+0x39c>
   102bc:	ldrsw	x0, [sp, #44]
   102c0:	mov	x2, x0
   102c4:	ldr	x1, [sp, #80]
   102c8:	ldr	x0, [sp, #24]
   102cc:	bl	7120 <Perl_sv_setiv@plt>
   102d0:	ldr	x0, [sp, #24]
   102d4:	ldr	x1, [x0, #24]
   102d8:	ldrsw	x0, [sp, #32]
   102dc:	lsl	x0, x0, #3
   102e0:	add	x0, x1, x0
   102e4:	ldr	x1, [sp, #80]
   102e8:	str	x1, [x0]
   102ec:	mov	x0, #0x1                   	// #1
   102f0:	str	x0, [sp, #88]
   102f4:	ldr	x0, [sp, #24]
   102f8:	ldr	x1, [x0, #24]
   102fc:	ldrsw	x2, [sp, #32]
   10300:	ldr	x0, [sp, #88]
   10304:	add	x0, x2, x0
   10308:	lsl	x0, x0, #3
   1030c:	sub	x0, x0, #0x8
   10310:	add	x1, x1, x0
   10314:	ldr	x0, [sp, #24]
   10318:	str	x1, [x0]
   1031c:	nop
   10320:	ldp	x29, x30, [sp], #96
   10324:	ret

0000000000010328 <XS_POSIX__exit>:
   10328:	stp	x29, x30, [sp, #-64]!
   1032c:	mov	x29, sp
   10330:	str	x0, [sp, #24]
   10334:	str	x1, [sp, #16]
   10338:	ldr	x0, [sp, #24]
   1033c:	ldr	x0, [x0]
   10340:	str	x0, [sp, #48]
   10344:	ldr	x0, [sp, #24]
   10348:	bl	739c <S_POPMARK>
   1034c:	str	w0, [sp, #36]
   10350:	ldr	x0, [sp, #24]
   10354:	ldr	x1, [x0, #24]
   10358:	ldr	w0, [sp, #36]
   1035c:	add	w2, w0, #0x1
   10360:	str	w2, [sp, #36]
   10364:	sxtw	x0, w0
   10368:	lsl	x0, x0, #3
   1036c:	add	x0, x1, x0
   10370:	str	x0, [sp, #56]
   10374:	ldr	x1, [sp, #48]
   10378:	ldr	x0, [sp, #56]
   1037c:	sub	x0, x1, x0
   10380:	asr	x0, x0, #3
   10384:	str	w0, [sp, #40]
   10388:	ldr	w0, [sp, #40]
   1038c:	cmp	w0, #0x1
   10390:	b.eq	103a4 <XS_POSIX__exit+0x7c>  // b.none
   10394:	adrp	x0, 1b000 <_fini+0x1fc>
   10398:	add	x1, x0, #0x398
   1039c:	ldr	x0, [sp, #16]
   103a0:	bl	6b20 <Perl_croak_xs_usage@plt>
   103a4:	ldr	x0, [sp, #24]
   103a8:	ldr	x1, [x0, #24]
   103ac:	ldrsw	x0, [sp, #36]
   103b0:	lsl	x0, x0, #3
   103b4:	add	x0, x1, x0
   103b8:	ldr	x0, [x0]
   103bc:	ldr	w1, [x0, #12]
   103c0:	mov	w0, #0x100                 	// #256
   103c4:	movk	w0, #0x20, lsl #16
   103c8:	and	w0, w1, w0
   103cc:	cmp	w0, #0x100
   103d0:	b.ne	103f8 <XS_POSIX__exit+0xd0>  // b.any
   103d4:	ldr	x0, [sp, #24]
   103d8:	ldr	x1, [x0, #24]
   103dc:	ldrsw	x0, [sp, #36]
   103e0:	lsl	x0, x0, #3
   103e4:	add	x0, x1, x0
   103e8:	ldr	x0, [x0]
   103ec:	ldr	x0, [x0]
   103f0:	ldr	x0, [x0, #32]
   103f4:	b	10420 <XS_POSIX__exit+0xf8>
   103f8:	ldr	x0, [sp, #24]
   103fc:	ldr	x1, [x0, #24]
   10400:	ldrsw	x0, [sp, #36]
   10404:	lsl	x0, x0, #3
   10408:	add	x0, x1, x0
   1040c:	ldr	x0, [x0]
   10410:	mov	w2, #0x2                   	// #2
   10414:	mov	x1, x0
   10418:	ldr	x0, [sp, #24]
   1041c:	bl	6560 <Perl_sv_2iv_flags@plt>
   10420:	str	w0, [sp, #44]
   10424:	ldr	w0, [sp, #44]
   10428:	bl	6570 <_exit@plt>

000000000001042c <XS_POSIX_dup2>:
   1042c:	stp	x29, x30, [sp, #-96]!
   10430:	mov	x29, sp
   10434:	str	x0, [sp, #24]
   10438:	str	x1, [sp, #16]
   1043c:	ldr	x0, [sp, #24]
   10440:	ldr	x0, [x0]
   10444:	str	x0, [sp, #64]
   10448:	ldr	x0, [sp, #24]
   1044c:	bl	739c <S_POPMARK>
   10450:	str	w0, [sp, #48]
   10454:	ldr	x0, [sp, #24]
   10458:	ldr	x1, [x0, #24]
   1045c:	ldr	w0, [sp, #48]
   10460:	add	w2, w0, #0x1
   10464:	str	w2, [sp, #48]
   10468:	sxtw	x0, w0
   1046c:	lsl	x0, x0, #3
   10470:	add	x0, x1, x0
   10474:	str	x0, [sp, #72]
   10478:	ldr	x1, [sp, #64]
   1047c:	ldr	x0, [sp, #72]
   10480:	sub	x0, x1, x0
   10484:	asr	x0, x0, #3
   10488:	str	w0, [sp, #52]
   1048c:	ldr	w0, [sp, #52]
   10490:	cmp	w0, #0x2
   10494:	b.eq	104a8 <XS_POSIX_dup2+0x7c>  // b.none
   10498:	adrp	x0, 1b000 <_fini+0x1fc>
   1049c:	add	x1, x0, #0x6d8
   104a0:	ldr	x0, [sp, #16]
   104a4:	bl	6b20 <Perl_croak_xs_usage@plt>
   104a8:	ldr	x0, [sp, #24]
   104ac:	ldr	x1, [x0, #24]
   104b0:	ldrsw	x0, [sp, #48]
   104b4:	lsl	x0, x0, #3
   104b8:	add	x0, x1, x0
   104bc:	ldr	x0, [x0]
   104c0:	ldr	w1, [x0, #12]
   104c4:	mov	w0, #0x100                 	// #256
   104c8:	movk	w0, #0x20, lsl #16
   104cc:	and	w0, w1, w0
   104d0:	cmp	w0, #0x100
   104d4:	b.ne	104fc <XS_POSIX_dup2+0xd0>  // b.any
   104d8:	ldr	x0, [sp, #24]
   104dc:	ldr	x1, [x0, #24]
   104e0:	ldrsw	x0, [sp, #48]
   104e4:	lsl	x0, x0, #3
   104e8:	add	x0, x1, x0
   104ec:	ldr	x0, [x0]
   104f0:	ldr	x0, [x0]
   104f4:	ldr	x0, [x0, #32]
   104f8:	b	10524 <XS_POSIX_dup2+0xf8>
   104fc:	ldr	x0, [sp, #24]
   10500:	ldr	x1, [x0, #24]
   10504:	ldrsw	x0, [sp, #48]
   10508:	lsl	x0, x0, #3
   1050c:	add	x0, x1, x0
   10510:	ldr	x0, [x0]
   10514:	mov	w2, #0x2                   	// #2
   10518:	mov	x1, x0
   1051c:	ldr	x0, [sp, #24]
   10520:	bl	6560 <Perl_sv_2iv_flags@plt>
   10524:	str	w0, [sp, #56]
   10528:	ldr	x0, [sp, #24]
   1052c:	ldr	x1, [x0, #24]
   10530:	ldrsw	x0, [sp, #48]
   10534:	add	x0, x0, #0x1
   10538:	lsl	x0, x0, #3
   1053c:	add	x0, x1, x0
   10540:	ldr	x0, [x0]
   10544:	ldr	w1, [x0, #12]
   10548:	mov	w0, #0x100                 	// #256
   1054c:	movk	w0, #0x20, lsl #16
   10550:	and	w0, w1, w0
   10554:	cmp	w0, #0x100
   10558:	b.ne	10584 <XS_POSIX_dup2+0x158>  // b.any
   1055c:	ldr	x0, [sp, #24]
   10560:	ldr	x1, [x0, #24]
   10564:	ldrsw	x0, [sp, #48]
   10568:	add	x0, x0, #0x1
   1056c:	lsl	x0, x0, #3
   10570:	add	x0, x1, x0
   10574:	ldr	x0, [x0]
   10578:	ldr	x0, [x0]
   1057c:	ldr	x0, [x0, #32]
   10580:	b	105b0 <XS_POSIX_dup2+0x184>
   10584:	ldr	x0, [sp, #24]
   10588:	ldr	x1, [x0, #24]
   1058c:	ldrsw	x0, [sp, #48]
   10590:	add	x0, x0, #0x1
   10594:	lsl	x0, x0, #3
   10598:	add	x0, x1, x0
   1059c:	ldr	x0, [x0]
   105a0:	mov	w2, #0x2                   	// #2
   105a4:	mov	x1, x0
   105a8:	ldr	x0, [sp, #24]
   105ac:	bl	6560 <Perl_sv_2iv_flags@plt>
   105b0:	str	w0, [sp, #60]
   105b4:	ldr	w0, [sp, #56]
   105b8:	cmp	w0, #0x0
   105bc:	b.lt	105e0 <XS_POSIX_dup2+0x1b4>  // b.tstop
   105c0:	ldr	w0, [sp, #60]
   105c4:	cmp	w0, #0x0
   105c8:	b.lt	105e0 <XS_POSIX_dup2+0x1b4>  // b.tstop
   105cc:	ldr	w1, [sp, #60]
   105d0:	ldr	w0, [sp, #56]
   105d4:	bl	7030 <dup2@plt>
   105d8:	str	w0, [sp, #44]
   105dc:	b	105f8 <XS_POSIX_dup2+0x1cc>
   105e0:	bl	70d0 <__errno_location@plt>
   105e4:	mov	x1, x0
   105e8:	mov	w0, #0x9                   	// #9
   105ec:	str	w0, [x1]
   105f0:	mov	w0, #0xffffffff            	// #-1
   105f4:	str	w0, [sp, #44]
   105f8:	ldr	x0, [sp, #24]
   105fc:	bl	7160 <Perl_sv_newmortal@plt>
   10600:	str	x0, [sp, #80]
   10604:	ldr	w0, [sp, #44]
   10608:	cmn	w0, #0x1
   1060c:	b.eq	1064c <XS_POSIX_dup2+0x220>  // b.none
   10610:	ldr	w0, [sp, #44]
   10614:	cmp	w0, #0x0
   10618:	b.ne	10638 <XS_POSIX_dup2+0x20c>  // b.any
   1061c:	mov	x3, #0xa                   	// #10
   10620:	adrp	x0, 1b000 <_fini+0x1fc>
   10624:	add	x2, x0, #0x188
   10628:	ldr	x1, [sp, #80]
   1062c:	ldr	x0, [sp, #24]
   10630:	bl	6f10 <Perl_sv_setpvn@plt>
   10634:	b	1064c <XS_POSIX_dup2+0x220>
   10638:	ldrsw	x0, [sp, #44]
   1063c:	mov	x2, x0
   10640:	ldr	x1, [sp, #80]
   10644:	ldr	x0, [sp, #24]
   10648:	bl	7120 <Perl_sv_setiv@plt>
   1064c:	ldr	x0, [sp, #24]
   10650:	ldr	x1, [x0, #24]
   10654:	ldrsw	x0, [sp, #48]
   10658:	lsl	x0, x0, #3
   1065c:	add	x0, x1, x0
   10660:	ldr	x1, [sp, #80]
   10664:	str	x1, [x0]
   10668:	mov	x0, #0x1                   	// #1
   1066c:	str	x0, [sp, #88]
   10670:	ldr	x0, [sp, #24]
   10674:	ldr	x1, [x0, #24]
   10678:	ldrsw	x2, [sp, #48]
   1067c:	ldr	x0, [sp, #88]
   10680:	add	x0, x2, x0
   10684:	lsl	x0, x0, #3
   10688:	sub	x0, x0, #0x8
   1068c:	add	x1, x1, x0
   10690:	ldr	x0, [sp, #24]
   10694:	str	x1, [x0]
   10698:	nop
   1069c:	ldp	x29, x30, [sp], #96
   106a0:	ret

00000000000106a4 <XS_POSIX_lseek>:
   106a4:	stp	x29, x30, [sp, #-128]!
   106a8:	mov	x29, sp
   106ac:	str	x19, [sp, #16]
   106b0:	str	x0, [sp, #40]
   106b4:	str	x1, [sp, #32]
   106b8:	ldr	x0, [sp, #40]
   106bc:	ldr	x0, [x0]
   106c0:	str	x0, [sp, #72]
   106c4:	ldr	x0, [sp, #40]
   106c8:	bl	739c <S_POPMARK>
   106cc:	str	w0, [sp, #56]
   106d0:	ldr	x0, [sp, #40]
   106d4:	ldr	x1, [x0, #24]
   106d8:	ldr	w0, [sp, #56]
   106dc:	add	w2, w0, #0x1
   106e0:	str	w2, [sp, #56]
   106e4:	sxtw	x0, w0
   106e8:	lsl	x0, x0, #3
   106ec:	add	x0, x1, x0
   106f0:	str	x0, [sp, #80]
   106f4:	ldr	x1, [sp, #72]
   106f8:	ldr	x0, [sp, #80]
   106fc:	sub	x0, x1, x0
   10700:	asr	x0, x0, #3
   10704:	str	w0, [sp, #60]
   10708:	ldr	w0, [sp, #60]
   1070c:	cmp	w0, #0x3
   10710:	b.eq	10724 <XS_POSIX_lseek+0x80>  // b.none
   10714:	adrp	x0, 1b000 <_fini+0x1fc>
   10718:	add	x1, x0, #0x6e8
   1071c:	ldr	x0, [sp, #32]
   10720:	bl	6b20 <Perl_croak_xs_usage@plt>
   10724:	ldr	x0, [sp, #40]
   10728:	ldr	x1, [x0, #24]
   1072c:	ldrsw	x0, [sp, #56]
   10730:	add	x0, x0, #0x1
   10734:	lsl	x0, x0, #3
   10738:	add	x0, x1, x0
   1073c:	ldr	x0, [x0]
   10740:	ldr	w1, [x0, #12]
   10744:	mov	w0, #0x200                 	// #512
   10748:	movk	w0, #0x20, lsl #16
   1074c:	and	w0, w1, w0
   10750:	cmp	w0, #0x200
   10754:	b.ne	10784 <XS_POSIX_lseek+0xe0>  // b.any
   10758:	ldr	x0, [sp, #40]
   1075c:	ldr	x1, [x0, #24]
   10760:	ldrsw	x0, [sp, #56]
   10764:	add	x0, x0, #0x1
   10768:	lsl	x0, x0, #3
   1076c:	add	x0, x1, x0
   10770:	ldr	x0, [x0]
   10774:	ldr	x0, [x0]
   10778:	ldr	d0, [x0, #40]
   1077c:	fcvtzs	d0, d0
   10780:	b	107b4 <XS_POSIX_lseek+0x110>
   10784:	ldr	x0, [sp, #40]
   10788:	ldr	x1, [x0, #24]
   1078c:	ldrsw	x0, [sp, #56]
   10790:	add	x0, x0, #0x1
   10794:	lsl	x0, x0, #3
   10798:	add	x0, x1, x0
   1079c:	ldr	x0, [x0]
   107a0:	mov	w2, #0x2                   	// #2
   107a4:	mov	x1, x0
   107a8:	ldr	x0, [sp, #40]
   107ac:	bl	6b80 <Perl_sv_2nv_flags@plt>
   107b0:	fcvtzs	d0, d0
   107b4:	str	d0, [sp, #88]
   107b8:	ldr	x0, [sp, #40]
   107bc:	ldr	x1, [x0, #24]
   107c0:	ldrsw	x0, [sp, #56]
   107c4:	add	x0, x0, #0x2
   107c8:	lsl	x0, x0, #3
   107cc:	add	x0, x1, x0
   107d0:	ldr	x0, [x0]
   107d4:	ldr	w1, [x0, #12]
   107d8:	mov	w0, #0x100                 	// #256
   107dc:	movk	w0, #0x20, lsl #16
   107e0:	and	w0, w1, w0
   107e4:	cmp	w0, #0x100
   107e8:	b.ne	10814 <XS_POSIX_lseek+0x170>  // b.any
   107ec:	ldr	x0, [sp, #40]
   107f0:	ldr	x1, [x0, #24]
   107f4:	ldrsw	x0, [sp, #56]
   107f8:	add	x0, x0, #0x2
   107fc:	lsl	x0, x0, #3
   10800:	add	x0, x1, x0
   10804:	ldr	x0, [x0]
   10808:	ldr	x0, [x0]
   1080c:	ldr	x0, [x0, #32]
   10810:	b	10840 <XS_POSIX_lseek+0x19c>
   10814:	ldr	x0, [sp, #40]
   10818:	ldr	x1, [x0, #24]
   1081c:	ldrsw	x0, [sp, #56]
   10820:	add	x0, x0, #0x2
   10824:	lsl	x0, x0, #3
   10828:	add	x0, x1, x0
   1082c:	ldr	x0, [x0]
   10830:	mov	w2, #0x2                   	// #2
   10834:	mov	x1, x0
   10838:	ldr	x0, [sp, #40]
   1083c:	bl	6560 <Perl_sv_2iv_flags@plt>
   10840:	str	w0, [sp, #64]
   10844:	ldr	x0, [sp, #40]
   10848:	ldr	x1, [x0, #24]
   1084c:	ldrsw	x0, [sp, #56]
   10850:	lsl	x0, x0, #3
   10854:	add	x0, x1, x0
   10858:	ldr	x0, [x0]
   1085c:	ldr	w1, [x0, #12]
   10860:	mov	w0, #0x100                 	// #256
   10864:	movk	w0, #0x20, lsl #16
   10868:	and	w0, w1, w0
   1086c:	cmp	w0, #0x100
   10870:	b.ne	10898 <XS_POSIX_lseek+0x1f4>  // b.any
   10874:	ldr	x0, [sp, #40]
   10878:	ldr	x1, [x0, #24]
   1087c:	ldrsw	x0, [sp, #56]
   10880:	lsl	x0, x0, #3
   10884:	add	x0, x1, x0
   10888:	ldr	x0, [x0]
   1088c:	ldr	x0, [x0]
   10890:	ldr	x0, [x0, #32]
   10894:	b	108c0 <XS_POSIX_lseek+0x21c>
   10898:	ldr	x0, [sp, #40]
   1089c:	ldr	x1, [x0, #24]
   108a0:	ldrsw	x0, [sp, #56]
   108a4:	lsl	x0, x0, #3
   108a8:	add	x0, x1, x0
   108ac:	ldr	x0, [x0]
   108b0:	mov	w2, #0x2                   	// #2
   108b4:	mov	x1, x0
   108b8:	ldr	x0, [sp, #40]
   108bc:	bl	6560 <Perl_sv_2iv_flags@plt>
   108c0:	str	w0, [sp, #68]
   108c4:	ldr	w0, [sp, #68]
   108c8:	cmp	w0, #0x0
   108cc:	b.ge	10948 <XS_POSIX_lseek+0x2a4>  // b.tcont
   108d0:	bl	70d0 <__errno_location@plt>
   108d4:	mov	x1, x0
   108d8:	mov	w0, #0x9                   	// #9
   108dc:	str	w0, [x1]
   108e0:	mov	x1, #0xffffffffffffffff    	// #-1
   108e4:	ldr	x0, [sp, #40]
   108e8:	bl	70b0 <Perl_newSViv@plt>
   108ec:	mov	x2, x0
   108f0:	ldr	x0, [sp, #40]
   108f4:	ldr	x1, [x0, #24]
   108f8:	ldrsw	x0, [sp, #56]
   108fc:	lsl	x0, x0, #3
   10900:	add	x19, x1, x0
   10904:	mov	x1, x2
   10908:	ldr	x0, [sp, #40]
   1090c:	bl	6d60 <Perl_sv_2mortal@plt>
   10910:	str	x0, [x19]
   10914:	mov	x0, #0x1                   	// #1
   10918:	str	x0, [sp, #120]
   1091c:	ldr	x0, [sp, #40]
   10920:	ldr	x1, [x0, #24]
   10924:	ldrsw	x2, [sp, #56]
   10928:	ldr	x0, [sp, #120]
   1092c:	add	x0, x2, x0
   10930:	lsl	x0, x0, #3
   10934:	sub	x0, x0, #0x8
   10938:	add	x1, x1, x0
   1093c:	ldr	x0, [sp, #40]
   10940:	str	x1, [x0]
   10944:	b	109cc <XS_POSIX_lseek+0x328>
   10948:	ldr	w2, [sp, #64]
   1094c:	ldr	x1, [sp, #88]
   10950:	ldr	w0, [sp, #68]
   10954:	bl	69e0 <lseek64@plt>
   10958:	str	x0, [sp, #96]
   1095c:	ldr	x1, [sp, #96]
   10960:	ldr	x0, [sp, #40]
   10964:	bl	70b0 <Perl_newSViv@plt>
   10968:	str	x0, [sp, #104]
   1096c:	ldr	x1, [sp, #104]
   10970:	ldr	x0, [sp, #40]
   10974:	bl	6d60 <Perl_sv_2mortal@plt>
   10978:	str	x0, [sp, #104]
   1097c:	ldr	x0, [sp, #40]
   10980:	ldr	x1, [x0, #24]
   10984:	ldrsw	x0, [sp, #56]
   10988:	lsl	x0, x0, #3
   1098c:	add	x0, x1, x0
   10990:	ldr	x1, [sp, #104]
   10994:	str	x1, [x0]
   10998:	mov	x0, #0x1                   	// #1
   1099c:	str	x0, [sp, #112]
   109a0:	ldr	x0, [sp, #40]
   109a4:	ldr	x1, [x0, #24]
   109a8:	ldrsw	x2, [sp, #56]
   109ac:	ldr	x0, [sp, #112]
   109b0:	add	x0, x2, x0
   109b4:	lsl	x0, x0, #3
   109b8:	sub	x0, x0, #0x8
   109bc:	add	x1, x1, x0
   109c0:	ldr	x0, [sp, #40]
   109c4:	str	x1, [x0]
   109c8:	nop
   109cc:	ldr	x19, [sp, #16]
   109d0:	ldp	x29, x30, [sp], #128
   109d4:	ret

00000000000109d8 <XS_POSIX_nice>:
   109d8:	stp	x29, x30, [sp, #-64]!
   109dc:	mov	x29, sp
   109e0:	str	x0, [sp, #24]
   109e4:	str	x1, [sp, #16]
   109e8:	ldr	x0, [sp, #24]
   109ec:	ldr	x0, [x0]
   109f0:	str	x0, [sp, #48]
   109f4:	ldr	x0, [sp, #24]
   109f8:	bl	739c <S_POPMARK>
   109fc:	str	w0, [sp, #36]
   10a00:	ldr	x0, [sp, #24]
   10a04:	ldr	x1, [x0, #24]
   10a08:	ldr	w0, [sp, #36]
   10a0c:	add	w2, w0, #0x1
   10a10:	str	w2, [sp, #36]
   10a14:	sxtw	x0, w0
   10a18:	lsl	x0, x0, #3
   10a1c:	add	x0, x1, x0
   10a20:	str	x0, [sp, #56]
   10a24:	ldr	x1, [sp, #48]
   10a28:	ldr	x0, [sp, #56]
   10a2c:	sub	x0, x1, x0
   10a30:	asr	x0, x0, #3
   10a34:	str	w0, [sp, #40]
   10a38:	ldr	w0, [sp, #40]
   10a3c:	cmp	w0, #0x1
   10a40:	b.eq	10a54 <XS_POSIX_nice+0x7c>  // b.none
   10a44:	adrp	x0, 1b000 <_fini+0x1fc>
   10a48:	add	x1, x0, #0x700
   10a4c:	ldr	x0, [sp, #16]
   10a50:	bl	6b20 <Perl_croak_xs_usage@plt>
   10a54:	ldrsw	x0, [sp, #40]
   10a58:	lsl	x0, x0, #3
   10a5c:	neg	x0, x0
   10a60:	ldr	x1, [sp, #48]
   10a64:	add	x0, x1, x0
   10a68:	str	x0, [sp, #48]
   10a6c:	ldr	x0, [sp, #24]
   10a70:	ldr	x1, [x0, #24]
   10a74:	ldrsw	x0, [sp, #36]
   10a78:	lsl	x0, x0, #3
   10a7c:	add	x0, x1, x0
   10a80:	ldr	x0, [x0]
   10a84:	ldr	w1, [x0, #12]
   10a88:	mov	w0, #0x100                 	// #256
   10a8c:	movk	w0, #0x20, lsl #16
   10a90:	and	w0, w1, w0
   10a94:	cmp	w0, #0x100
   10a98:	b.ne	10ac0 <XS_POSIX_nice+0xe8>  // b.any
   10a9c:	ldr	x0, [sp, #24]
   10aa0:	ldr	x1, [x0, #24]
   10aa4:	ldrsw	x0, [sp, #36]
   10aa8:	lsl	x0, x0, #3
   10aac:	add	x0, x1, x0
   10ab0:	ldr	x0, [x0]
   10ab4:	ldr	x0, [x0]
   10ab8:	ldr	x0, [x0, #32]
   10abc:	b	10ae8 <XS_POSIX_nice+0x110>
   10ac0:	ldr	x0, [sp, #24]
   10ac4:	ldr	x1, [x0, #24]
   10ac8:	ldrsw	x0, [sp, #36]
   10acc:	lsl	x0, x0, #3
   10ad0:	add	x0, x1, x0
   10ad4:	ldr	x0, [x0]
   10ad8:	mov	w2, #0x2                   	// #2
   10adc:	mov	x1, x0
   10ae0:	ldr	x0, [sp, #24]
   10ae4:	bl	6560 <Perl_sv_2iv_flags@plt>
   10ae8:	str	w0, [sp, #44]
   10aec:	bl	70d0 <__errno_location@plt>
   10af0:	str	wzr, [x0]
   10af4:	ldr	w0, [sp, #44]
   10af8:	bl	6760 <nice@plt>
   10afc:	str	w0, [sp, #44]
   10b00:	ldr	w0, [sp, #44]
   10b04:	cmn	w0, #0x1
   10b08:	b.ne	10b1c <XS_POSIX_nice+0x144>  // b.any
   10b0c:	bl	70d0 <__errno_location@plt>
   10b10:	ldr	w0, [x0]
   10b14:	cmp	w0, #0x0
   10b18:	b.ne	10c10 <XS_POSIX_nice+0x238>  // b.any
   10b1c:	ldr	w0, [sp, #44]
   10b20:	cmp	w0, #0x0
   10b24:	b.ne	10b9c <XS_POSIX_nice+0x1c4>  // b.any
   10b28:	ldr	x0, [sp, #24]
   10b2c:	ldr	x1, [x0, #32]
   10b30:	ldr	x0, [sp, #48]
   10b34:	sub	x0, x1, x0
   10b38:	cmp	x0, #0x0
   10b3c:	cset	w0, le
   10b40:	and	w0, w0, #0xff
   10b44:	and	x0, x0, #0xff
   10b48:	cmp	x0, #0x0
   10b4c:	b.eq	10b68 <XS_POSIX_nice+0x190>  // b.none
   10b50:	mov	x3, #0x1                   	// #1
   10b54:	ldr	x2, [sp, #48]
   10b58:	ldr	x1, [sp, #48]
   10b5c:	ldr	x0, [sp, #24]
   10b60:	bl	6660 <Perl_stack_grow@plt>
   10b64:	str	x0, [sp, #48]
   10b68:	ldr	x0, [sp, #48]
   10b6c:	add	x0, x0, #0x8
   10b70:	str	x0, [sp, #48]
   10b74:	mov	w3, #0x80000               	// #524288
   10b78:	mov	x2, #0xa                   	// #10
   10b7c:	adrp	x0, 1b000 <_fini+0x1fc>
   10b80:	add	x1, x0, #0x188
   10b84:	ldr	x0, [sp, #24]
   10b88:	bl	6b50 <Perl_newSVpvn_flags@plt>
   10b8c:	mov	x1, x0
   10b90:	ldr	x0, [sp, #48]
   10b94:	str	x1, [x0]
   10b98:	b	10c10 <XS_POSIX_nice+0x238>
   10b9c:	ldr	x0, [sp, #24]
   10ba0:	ldr	x1, [x0, #32]
   10ba4:	ldr	x0, [sp, #48]
   10ba8:	sub	x0, x1, x0
   10bac:	cmp	x0, #0x0
   10bb0:	cset	w0, le
   10bb4:	and	w0, w0, #0xff
   10bb8:	and	x0, x0, #0xff
   10bbc:	cmp	x0, #0x0
   10bc0:	b.eq	10bdc <XS_POSIX_nice+0x204>  // b.none
   10bc4:	mov	x3, #0x1                   	// #1
   10bc8:	ldr	x2, [sp, #48]
   10bcc:	ldr	x1, [sp, #48]
   10bd0:	ldr	x0, [sp, #24]
   10bd4:	bl	6660 <Perl_stack_grow@plt>
   10bd8:	str	x0, [sp, #48]
   10bdc:	ldrsw	x0, [sp, #44]
   10be0:	mov	x1, x0
   10be4:	ldr	x0, [sp, #24]
   10be8:	bl	70b0 <Perl_newSViv@plt>
   10bec:	mov	x1, x0
   10bf0:	ldr	x0, [sp, #48]
   10bf4:	add	x0, x0, #0x8
   10bf8:	str	x0, [sp, #48]
   10bfc:	ldr	x0, [sp, #24]
   10c00:	bl	6d60 <Perl_sv_2mortal@plt>
   10c04:	mov	x1, x0
   10c08:	ldr	x0, [sp, #48]
   10c0c:	str	x1, [x0]
   10c10:	ldr	x0, [sp, #24]
   10c14:	ldr	x1, [sp, #48]
   10c18:	str	x1, [x0]
   10c1c:	nop
   10c20:	ldp	x29, x30, [sp], #64
   10c24:	ret

0000000000010c28 <XS_POSIX_pipe>:
   10c28:	stp	x29, x30, [sp, #-80]!
   10c2c:	mov	x29, sp
   10c30:	str	x0, [sp, #24]
   10c34:	str	x1, [sp, #16]
   10c38:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   10c3c:	ldr	x0, [x0, #3992]
   10c40:	ldr	x1, [x0]
   10c44:	str	x1, [sp, #72]
   10c48:	mov	x1, #0x0                   	// #0
   10c4c:	ldr	x0, [sp, #24]
   10c50:	ldr	x0, [x0]
   10c54:	str	x0, [sp, #48]
   10c58:	ldr	x0, [sp, #24]
   10c5c:	bl	739c <S_POPMARK>
   10c60:	str	w0, [sp, #40]
   10c64:	ldr	x0, [sp, #24]
   10c68:	ldr	x1, [x0, #24]
   10c6c:	ldr	w0, [sp, #40]
   10c70:	add	w2, w0, #0x1
   10c74:	str	w2, [sp, #40]
   10c78:	sxtw	x0, w0
   10c7c:	lsl	x0, x0, #3
   10c80:	add	x0, x1, x0
   10c84:	str	x0, [sp, #56]
   10c88:	ldr	x1, [sp, #48]
   10c8c:	ldr	x0, [sp, #56]
   10c90:	sub	x0, x1, x0
   10c94:	asr	x0, x0, #3
   10c98:	str	w0, [sp, #44]
   10c9c:	ldr	w0, [sp, #44]
   10ca0:	cmp	w0, #0x0
   10ca4:	b.eq	10cb8 <XS_POSIX_pipe+0x90>  // b.none
   10ca8:	adrp	x0, 1b000 <_fini+0x1fc>
   10cac:	add	x1, x0, #0x3f0
   10cb0:	ldr	x0, [sp, #16]
   10cb4:	bl	6b20 <Perl_croak_xs_usage@plt>
   10cb8:	ldrsw	x0, [sp, #44]
   10cbc:	lsl	x0, x0, #3
   10cc0:	neg	x0, x0
   10cc4:	ldr	x1, [sp, #48]
   10cc8:	add	x0, x1, x0
   10ccc:	str	x0, [sp, #48]
   10cd0:	add	x0, sp, #0x40
   10cd4:	bl	6740 <pipe@plt>
   10cd8:	cmn	w0, #0x1
   10cdc:	b.eq	10d90 <XS_POSIX_pipe+0x168>  // b.none
   10ce0:	ldr	x0, [sp, #24]
   10ce4:	ldr	x1, [x0, #32]
   10ce8:	ldr	x0, [sp, #48]
   10cec:	sub	x0, x1, x0
   10cf0:	cmp	x0, #0x8
   10cf4:	cset	w0, le
   10cf8:	and	w0, w0, #0xff
   10cfc:	and	x0, x0, #0xff
   10d00:	cmp	x0, #0x0
   10d04:	b.eq	10d20 <XS_POSIX_pipe+0xf8>  // b.none
   10d08:	mov	x3, #0x2                   	// #2
   10d0c:	ldr	x2, [sp, #48]
   10d10:	ldr	x1, [sp, #48]
   10d14:	ldr	x0, [sp, #24]
   10d18:	bl	6660 <Perl_stack_grow@plt>
   10d1c:	str	x0, [sp, #48]
   10d20:	ldr	w0, [sp, #64]
   10d24:	sxtw	x0, w0
   10d28:	mov	x1, x0
   10d2c:	ldr	x0, [sp, #24]
   10d30:	bl	70b0 <Perl_newSViv@plt>
   10d34:	mov	x1, x0
   10d38:	ldr	x0, [sp, #48]
   10d3c:	add	x0, x0, #0x8
   10d40:	str	x0, [sp, #48]
   10d44:	ldr	x0, [sp, #24]
   10d48:	bl	6d60 <Perl_sv_2mortal@plt>
   10d4c:	mov	x1, x0
   10d50:	ldr	x0, [sp, #48]
   10d54:	str	x1, [x0]
   10d58:	ldr	w0, [sp, #68]
   10d5c:	sxtw	x0, w0
   10d60:	mov	x1, x0
   10d64:	ldr	x0, [sp, #24]
   10d68:	bl	70b0 <Perl_newSViv@plt>
   10d6c:	mov	x1, x0
   10d70:	ldr	x0, [sp, #48]
   10d74:	add	x0, x0, #0x8
   10d78:	str	x0, [sp, #48]
   10d7c:	ldr	x0, [sp, #24]
   10d80:	bl	6d60 <Perl_sv_2mortal@plt>
   10d84:	mov	x1, x0
   10d88:	ldr	x0, [sp, #48]
   10d8c:	str	x1, [x0]
   10d90:	ldr	x0, [sp, #24]
   10d94:	ldr	x1, [sp, #48]
   10d98:	str	x1, [x0]
   10d9c:	nop
   10da0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   10da4:	ldr	x0, [x0, #3992]
   10da8:	ldr	x1, [sp, #72]
   10dac:	ldr	x0, [x0]
   10db0:	eor	x0, x1, x0
   10db4:	cmp	x0, #0x0
   10db8:	b.eq	10dc0 <XS_POSIX_pipe+0x198>  // b.none
   10dbc:	bl	6a60 <__stack_chk_fail@plt>
   10dc0:	ldp	x29, x30, [sp], #80
   10dc4:	ret

0000000000010dc8 <XS_POSIX_read>:
   10dc8:	stp	x29, x30, [sp, #-128]!
   10dcc:	mov	x29, sp
   10dd0:	str	x19, [sp, #16]
   10dd4:	str	x0, [sp, #40]
   10dd8:	str	x1, [sp, #32]
   10ddc:	ldr	x0, [sp, #40]
   10de0:	ldr	x0, [x0]
   10de4:	str	x0, [sp, #64]
   10de8:	ldr	x0, [sp, #40]
   10dec:	bl	739c <S_POPMARK>
   10df0:	str	w0, [sp, #48]
   10df4:	ldr	x0, [sp, #40]
   10df8:	ldr	x1, [x0, #24]
   10dfc:	ldr	w0, [sp, #48]
   10e00:	add	w2, w0, #0x1
   10e04:	str	w2, [sp, #48]
   10e08:	sxtw	x0, w0
   10e0c:	lsl	x0, x0, #3
   10e10:	add	x0, x1, x0
   10e14:	str	x0, [sp, #72]
   10e18:	ldr	x1, [sp, #64]
   10e1c:	ldr	x0, [sp, #72]
   10e20:	sub	x0, x1, x0
   10e24:	asr	x0, x0, #3
   10e28:	str	w0, [sp, #52]
   10e2c:	ldr	w0, [sp, #52]
   10e30:	cmp	w0, #0x3
   10e34:	b.eq	10e48 <XS_POSIX_read+0x80>  // b.none
   10e38:	adrp	x0, 1b000 <_fini+0x1fc>
   10e3c:	add	x1, x0, #0x708
   10e40:	ldr	x0, [sp, #32]
   10e44:	bl	6b20 <Perl_croak_xs_usage@plt>
   10e48:	ldr	x0, [sp, #40]
   10e4c:	ldr	x1, [x0, #24]
   10e50:	ldrsw	x0, [sp, #48]
   10e54:	add	x0, x0, #0x1
   10e58:	lsl	x0, x0, #3
   10e5c:	add	x0, x1, x0
   10e60:	ldr	x0, [x0]
   10e64:	ldr	w0, [x0, #12]
   10e68:	and	w0, w0, #0x800
   10e6c:	cmp	w0, #0x0
   10e70:	b.eq	10e98 <XS_POSIX_read+0xd0>  // b.none
   10e74:	ldr	x0, [sp, #40]
   10e78:	ldr	x1, [x0, #24]
   10e7c:	ldrsw	x0, [sp, #48]
   10e80:	add	x0, x0, #0x1
   10e84:	lsl	x0, x0, #3
   10e88:	add	x0, x1, x0
   10e8c:	ldr	x0, [x0]
   10e90:	ldr	x0, [x0, #16]
   10e94:	b	10eb4 <XS_POSIX_read+0xec>
   10e98:	ldr	x0, [sp, #40]
   10e9c:	ldr	x1, [x0, #24]
   10ea0:	ldrsw	x0, [sp, #48]
   10ea4:	add	x0, x0, #0x1
   10ea8:	lsl	x0, x0, #3
   10eac:	add	x0, x1, x0
   10eb0:	ldr	x0, [x0]
   10eb4:	str	x0, [sp, #80]
   10eb8:	ldr	x0, [sp, #40]
   10ebc:	ldr	x1, [x0, #24]
   10ec0:	ldrsw	x0, [sp, #48]
   10ec4:	add	x0, x0, #0x2
   10ec8:	lsl	x0, x0, #3
   10ecc:	add	x0, x1, x0
   10ed0:	ldr	x0, [x0]
   10ed4:	ldr	w1, [x0, #12]
   10ed8:	mov	w0, #0x100                 	// #256
   10edc:	movk	w0, #0x8020, lsl #16
   10ee0:	and	w1, w1, w0
   10ee4:	mov	w0, #0x100                 	// #256
   10ee8:	movk	w0, #0x8000, lsl #16
   10eec:	cmp	w1, w0
   10ef0:	b.ne	10f1c <XS_POSIX_read+0x154>  // b.any
   10ef4:	ldr	x0, [sp, #40]
   10ef8:	ldr	x1, [x0, #24]
   10efc:	ldrsw	x0, [sp, #48]
   10f00:	add	x0, x0, #0x2
   10f04:	lsl	x0, x0, #3
   10f08:	add	x0, x1, x0
   10f0c:	ldr	x0, [x0]
   10f10:	ldr	x0, [x0]
   10f14:	ldr	x0, [x0, #32]
   10f18:	b	10f48 <XS_POSIX_read+0x180>
   10f1c:	ldr	x0, [sp, #40]
   10f20:	ldr	x1, [x0, #24]
   10f24:	ldrsw	x0, [sp, #48]
   10f28:	add	x0, x0, #0x2
   10f2c:	lsl	x0, x0, #3
   10f30:	add	x0, x1, x0
   10f34:	ldr	x0, [x0]
   10f38:	mov	w2, #0x2                   	// #2
   10f3c:	mov	x1, x0
   10f40:	ldr	x0, [sp, #40]
   10f44:	bl	6650 <Perl_sv_2uv_flags@plt>
   10f48:	str	x0, [sp, #88]
   10f4c:	ldr	x0, [sp, #88]
   10f50:	add	x0, x0, #0x1
   10f54:	mov	x2, x0
   10f58:	ldr	x1, [sp, #80]
   10f5c:	ldr	x0, [sp, #40]
   10f60:	bl	6b60 <Perl_sv_grow@plt>
   10f64:	str	x0, [sp, #96]
   10f68:	ldr	x0, [sp, #40]
   10f6c:	ldr	x1, [x0, #24]
   10f70:	ldrsw	x0, [sp, #48]
   10f74:	lsl	x0, x0, #3
   10f78:	add	x0, x1, x0
   10f7c:	ldr	x0, [x0]
   10f80:	ldr	w1, [x0, #12]
   10f84:	mov	w0, #0x100                 	// #256
   10f88:	movk	w0, #0x20, lsl #16
   10f8c:	and	w0, w1, w0
   10f90:	cmp	w0, #0x100
   10f94:	b.ne	10fbc <XS_POSIX_read+0x1f4>  // b.any
   10f98:	ldr	x0, [sp, #40]
   10f9c:	ldr	x1, [x0, #24]
   10fa0:	ldrsw	x0, [sp, #48]
   10fa4:	lsl	x0, x0, #3
   10fa8:	add	x0, x1, x0
   10fac:	ldr	x0, [x0]
   10fb0:	ldr	x0, [x0]
   10fb4:	ldr	x0, [x0, #32]
   10fb8:	b	10fe4 <XS_POSIX_read+0x21c>
   10fbc:	ldr	x0, [sp, #40]
   10fc0:	ldr	x1, [x0, #24]
   10fc4:	ldrsw	x0, [sp, #48]
   10fc8:	lsl	x0, x0, #3
   10fcc:	add	x0, x1, x0
   10fd0:	ldr	x0, [x0]
   10fd4:	mov	w2, #0x2                   	// #2
   10fd8:	mov	x1, x0
   10fdc:	ldr	x0, [sp, #40]
   10fe0:	bl	6560 <Perl_sv_2iv_flags@plt>
   10fe4:	str	w0, [sp, #56]
   10fe8:	ldr	w0, [sp, #56]
   10fec:	cmp	w0, #0x0
   10ff0:	b.ge	1106c <XS_POSIX_read+0x2a4>  // b.tcont
   10ff4:	bl	70d0 <__errno_location@plt>
   10ff8:	mov	x1, x0
   10ffc:	mov	w0, #0x9                   	// #9
   11000:	str	w0, [x1]
   11004:	mov	x1, #0xffffffffffffffff    	// #-1
   11008:	ldr	x0, [sp, #40]
   1100c:	bl	70b0 <Perl_newSViv@plt>
   11010:	mov	x2, x0
   11014:	ldr	x0, [sp, #40]
   11018:	ldr	x1, [x0, #24]
   1101c:	ldrsw	x0, [sp, #48]
   11020:	lsl	x0, x0, #3
   11024:	add	x19, x1, x0
   11028:	mov	x1, x2
   1102c:	ldr	x0, [sp, #40]
   11030:	bl	6d60 <Perl_sv_2mortal@plt>
   11034:	str	x0, [x19]
   11038:	mov	x0, #0x1                   	// #1
   1103c:	str	x0, [sp, #120]
   11040:	ldr	x0, [sp, #40]
   11044:	ldr	x1, [x0, #24]
   11048:	ldrsw	x2, [sp, #48]
   1104c:	ldr	x0, [sp, #120]
   11050:	add	x0, x2, x0
   11054:	lsl	x0, x0, #3
   11058:	sub	x0, x0, #0x8
   1105c:	add	x1, x1, x0
   11060:	ldr	x0, [sp, #40]
   11064:	str	x1, [x0]
   11068:	b	111c0 <XS_POSIX_read+0x3f8>
   1106c:	ldr	x2, [sp, #88]
   11070:	ldr	x1, [sp, #96]
   11074:	ldr	w0, [sp, #56]
   11078:	bl	6e80 <read@plt>
   1107c:	str	w0, [sp, #60]
   11080:	ldr	x0, [sp, #40]
   11084:	bl	7160 <Perl_sv_newmortal@plt>
   11088:	str	x0, [sp, #104]
   1108c:	ldr	w0, [sp, #60]
   11090:	cmn	w0, #0x1
   11094:	b.eq	110d4 <XS_POSIX_read+0x30c>  // b.none
   11098:	ldr	w0, [sp, #60]
   1109c:	cmp	w0, #0x0
   110a0:	b.ne	110c0 <XS_POSIX_read+0x2f8>  // b.any
   110a4:	mov	x3, #0xa                   	// #10
   110a8:	adrp	x0, 1b000 <_fini+0x1fc>
   110ac:	add	x2, x0, #0x188
   110b0:	ldr	x1, [sp, #104]
   110b4:	ldr	x0, [sp, #40]
   110b8:	bl	6f10 <Perl_sv_setpvn@plt>
   110bc:	b	110d4 <XS_POSIX_read+0x30c>
   110c0:	ldrsw	x0, [sp, #60]
   110c4:	mov	x2, x0
   110c8:	ldr	x1, [sp, #104]
   110cc:	ldr	x0, [sp, #40]
   110d0:	bl	7120 <Perl_sv_setiv@plt>
   110d4:	ldr	x0, [sp, #40]
   110d8:	ldr	x1, [x0, #24]
   110dc:	ldrsw	x0, [sp, #48]
   110e0:	lsl	x0, x0, #3
   110e4:	add	x0, x1, x0
   110e8:	ldr	x1, [sp, #104]
   110ec:	str	x1, [x0]
   110f0:	ldr	w0, [sp, #60]
   110f4:	cmp	w0, #0x0
   110f8:	b.lt	1118c <XS_POSIX_read+0x3c4>  // b.tstop
   110fc:	ldr	x0, [sp, #80]
   11100:	ldr	x0, [x0]
   11104:	ldrsw	x1, [sp, #60]
   11108:	str	x1, [x0, #16]
   1110c:	ldr	x0, [sp, #80]
   11110:	ldr	w1, [x0, #12]
   11114:	mov	w0, #0xff                  	// #255
   11118:	movk	w0, #0x5fff, lsl #16
   1111c:	and	w1, w1, w0
   11120:	ldr	x0, [sp, #80]
   11124:	str	w1, [x0, #12]
   11128:	ldr	x0, [sp, #80]
   1112c:	ldr	w1, [x0, #12]
   11130:	mov	w0, #0x4400                	// #17408
   11134:	orr	w1, w1, w0
   11138:	ldr	x0, [sp, #80]
   1113c:	str	w1, [x0, #12]
   11140:	ldr	x0, [sp, #80]
   11144:	ldr	x1, [x0, #16]
   11148:	ldr	x0, [sp, #80]
   1114c:	ldr	x0, [x0]
   11150:	ldr	x0, [x0, #16]
   11154:	add	x0, x1, x0
   11158:	strb	wzr, [x0]
   1115c:	ldr	x0, [sp, #40]
   11160:	ldrb	w0, [x0, #184]
   11164:	and	x0, x0, #0xff
   11168:	cmp	x0, #0x0
   1116c:	b.eq	1118c <XS_POSIX_read+0x3c4>  // b.none
   11170:	mov	w5, #0x0                   	// #0
   11174:	mov	x4, #0x0                   	// #0
   11178:	mov	w3, #0x74                  	// #116
   1117c:	mov	x2, #0x0                   	// #0
   11180:	ldr	x1, [sp, #80]
   11184:	ldr	x0, [sp, #40]
   11188:	bl	6fd0 <Perl_sv_magic@plt>
   1118c:	mov	x0, #0x1                   	// #1
   11190:	str	x0, [sp, #112]
   11194:	ldr	x0, [sp, #40]
   11198:	ldr	x1, [x0, #24]
   1119c:	ldrsw	x2, [sp, #48]
   111a0:	ldr	x0, [sp, #112]
   111a4:	add	x0, x2, x0
   111a8:	lsl	x0, x0, #3
   111ac:	sub	x0, x0, #0x8
   111b0:	add	x1, x1, x0
   111b4:	ldr	x0, [sp, #40]
   111b8:	str	x1, [x0]
   111bc:	nop
   111c0:	ldr	x19, [sp, #16]
   111c4:	ldp	x29, x30, [sp], #128
   111c8:	ret

00000000000111cc <XS_POSIX_setpgid>:
   111cc:	stp	x29, x30, [sp, #-96]!
   111d0:	mov	x29, sp
   111d4:	str	x0, [sp, #24]
   111d8:	str	x1, [sp, #16]
   111dc:	ldr	x0, [sp, #24]
   111e0:	ldr	x0, [x0]
   111e4:	str	x0, [sp, #64]
   111e8:	ldr	x0, [sp, #24]
   111ec:	bl	739c <S_POPMARK>
   111f0:	str	w0, [sp, #44]
   111f4:	ldr	x0, [sp, #24]
   111f8:	ldr	x1, [x0, #24]
   111fc:	ldr	w0, [sp, #44]
   11200:	add	w2, w0, #0x1
   11204:	str	w2, [sp, #44]
   11208:	sxtw	x0, w0
   1120c:	lsl	x0, x0, #3
   11210:	add	x0, x1, x0
   11214:	str	x0, [sp, #72]
   11218:	ldr	x1, [sp, #64]
   1121c:	ldr	x0, [sp, #72]
   11220:	sub	x0, x1, x0
   11224:	asr	x0, x0, #3
   11228:	str	w0, [sp, #48]
   1122c:	ldr	w0, [sp, #48]
   11230:	cmp	w0, #0x2
   11234:	b.eq	11248 <XS_POSIX_setpgid+0x7c>  // b.none
   11238:	adrp	x0, 1b000 <_fini+0x1fc>
   1123c:	add	x1, x0, #0x720
   11240:	ldr	x0, [sp, #16]
   11244:	bl	6b20 <Perl_croak_xs_usage@plt>
   11248:	ldr	x0, [sp, #24]
   1124c:	ldr	x1, [x0, #24]
   11250:	ldrsw	x0, [sp, #44]
   11254:	lsl	x0, x0, #3
   11258:	add	x0, x1, x0
   1125c:	ldr	x0, [x0]
   11260:	ldr	w1, [x0, #12]
   11264:	mov	w0, #0x200                 	// #512
   11268:	movk	w0, #0x20, lsl #16
   1126c:	and	w0, w1, w0
   11270:	cmp	w0, #0x200
   11274:	b.ne	112a0 <XS_POSIX_setpgid+0xd4>  // b.any
   11278:	ldr	x0, [sp, #24]
   1127c:	ldr	x1, [x0, #24]
   11280:	ldrsw	x0, [sp, #44]
   11284:	lsl	x0, x0, #3
   11288:	add	x0, x1, x0
   1128c:	ldr	x0, [x0]
   11290:	ldr	x0, [x0]
   11294:	ldr	d0, [x0, #40]
   11298:	fcvtzs	w0, d0
   1129c:	b	112cc <XS_POSIX_setpgid+0x100>
   112a0:	ldr	x0, [sp, #24]
   112a4:	ldr	x1, [x0, #24]
   112a8:	ldrsw	x0, [sp, #44]
   112ac:	lsl	x0, x0, #3
   112b0:	add	x0, x1, x0
   112b4:	ldr	x0, [x0]
   112b8:	mov	w2, #0x2                   	// #2
   112bc:	mov	x1, x0
   112c0:	ldr	x0, [sp, #24]
   112c4:	bl	6b80 <Perl_sv_2nv_flags@plt>
   112c8:	fcvtzs	w0, d0
   112cc:	str	w0, [sp, #52]
   112d0:	ldr	x0, [sp, #24]
   112d4:	ldr	x1, [x0, #24]
   112d8:	ldrsw	x0, [sp, #44]
   112dc:	add	x0, x0, #0x1
   112e0:	lsl	x0, x0, #3
   112e4:	add	x0, x1, x0
   112e8:	ldr	x0, [x0]
   112ec:	ldr	w1, [x0, #12]
   112f0:	mov	w0, #0x200                 	// #512
   112f4:	movk	w0, #0x20, lsl #16
   112f8:	and	w0, w1, w0
   112fc:	cmp	w0, #0x200
   11300:	b.ne	11330 <XS_POSIX_setpgid+0x164>  // b.any
   11304:	ldr	x0, [sp, #24]
   11308:	ldr	x1, [x0, #24]
   1130c:	ldrsw	x0, [sp, #44]
   11310:	add	x0, x0, #0x1
   11314:	lsl	x0, x0, #3
   11318:	add	x0, x1, x0
   1131c:	ldr	x0, [x0]
   11320:	ldr	x0, [x0]
   11324:	ldr	d0, [x0, #40]
   11328:	fcvtzs	w0, d0
   1132c:	b	11360 <XS_POSIX_setpgid+0x194>
   11330:	ldr	x0, [sp, #24]
   11334:	ldr	x1, [x0, #24]
   11338:	ldrsw	x0, [sp, #44]
   1133c:	add	x0, x0, #0x1
   11340:	lsl	x0, x0, #3
   11344:	add	x0, x1, x0
   11348:	ldr	x0, [x0]
   1134c:	mov	w2, #0x2                   	// #2
   11350:	mov	x1, x0
   11354:	ldr	x0, [sp, #24]
   11358:	bl	6b80 <Perl_sv_2nv_flags@plt>
   1135c:	fcvtzs	w0, d0
   11360:	str	w0, [sp, #56]
   11364:	ldr	w1, [sp, #56]
   11368:	ldr	w0, [sp, #52]
   1136c:	bl	6cc0 <setpgid@plt>
   11370:	str	w0, [sp, #60]
   11374:	ldr	x0, [sp, #24]
   11378:	bl	7160 <Perl_sv_newmortal@plt>
   1137c:	str	x0, [sp, #80]
   11380:	ldr	w0, [sp, #60]
   11384:	cmn	w0, #0x1
   11388:	b.eq	113c8 <XS_POSIX_setpgid+0x1fc>  // b.none
   1138c:	ldr	w0, [sp, #60]
   11390:	cmp	w0, #0x0
   11394:	b.ne	113b4 <XS_POSIX_setpgid+0x1e8>  // b.any
   11398:	mov	x3, #0xa                   	// #10
   1139c:	adrp	x0, 1b000 <_fini+0x1fc>
   113a0:	add	x2, x0, #0x188
   113a4:	ldr	x1, [sp, #80]
   113a8:	ldr	x0, [sp, #24]
   113ac:	bl	6f10 <Perl_sv_setpvn@plt>
   113b0:	b	113c8 <XS_POSIX_setpgid+0x1fc>
   113b4:	ldrsw	x0, [sp, #60]
   113b8:	mov	x2, x0
   113bc:	ldr	x1, [sp, #80]
   113c0:	ldr	x0, [sp, #24]
   113c4:	bl	7120 <Perl_sv_setiv@plt>
   113c8:	ldr	x0, [sp, #24]
   113cc:	ldr	x1, [x0, #24]
   113d0:	ldrsw	x0, [sp, #44]
   113d4:	lsl	x0, x0, #3
   113d8:	add	x0, x1, x0
   113dc:	ldr	x1, [sp, #80]
   113e0:	str	x1, [x0]
   113e4:	mov	x0, #0x1                   	// #1
   113e8:	str	x0, [sp, #88]
   113ec:	ldr	x0, [sp, #24]
   113f0:	ldr	x1, [x0, #24]
   113f4:	ldrsw	x2, [sp, #44]
   113f8:	ldr	x0, [sp, #88]
   113fc:	add	x0, x2, x0
   11400:	lsl	x0, x0, #3
   11404:	sub	x0, x0, #0x8
   11408:	add	x1, x1, x0
   1140c:	ldr	x0, [sp, #24]
   11410:	str	x1, [x0]
   11414:	nop
   11418:	ldp	x29, x30, [sp], #96
   1141c:	ret

0000000000011420 <XS_POSIX_setsid>:
   11420:	stp	x29, x30, [sp, #-96]!
   11424:	mov	x29, sp
   11428:	str	x0, [sp, #24]
   1142c:	str	x1, [sp, #16]
   11430:	ldr	x0, [sp, #24]
   11434:	ldr	x0, [x0]
   11438:	str	x0, [sp, #56]
   1143c:	ldr	x0, [sp, #24]
   11440:	bl	739c <S_POPMARK>
   11444:	str	w0, [sp, #44]
   11448:	ldr	x0, [sp, #24]
   1144c:	ldr	x1, [x0, #24]
   11450:	ldr	w0, [sp, #44]
   11454:	add	w2, w0, #0x1
   11458:	str	w2, [sp, #44]
   1145c:	sxtw	x0, w0
   11460:	lsl	x0, x0, #3
   11464:	add	x0, x1, x0
   11468:	str	x0, [sp, #64]
   1146c:	ldr	x1, [sp, #56]
   11470:	ldr	x0, [sp, #64]
   11474:	sub	x0, x1, x0
   11478:	asr	x0, x0, #3
   1147c:	str	w0, [sp, #48]
   11480:	ldr	w0, [sp, #48]
   11484:	cmp	w0, #0x0
   11488:	b.eq	1149c <XS_POSIX_setsid+0x7c>  // b.none
   1148c:	adrp	x0, 1b000 <_fini+0x1fc>
   11490:	add	x1, x0, #0x3f0
   11494:	ldr	x0, [sp, #16]
   11498:	bl	6b20 <Perl_croak_xs_usage@plt>
   1149c:	ldr	x0, [sp, #24]
   114a0:	ldr	x0, [x0, #8]
   114a4:	ldrb	w0, [x0, #35]
   114a8:	and	w0, w0, #0x4
   114ac:	cmp	w0, #0x0
   114b0:	b.eq	114d8 <XS_POSIX_setsid+0xb8>  // b.none
   114b4:	ldr	x0, [sp, #24]
   114b8:	ldr	x1, [x0, #16]
   114bc:	ldr	x0, [sp, #24]
   114c0:	ldr	x0, [x0, #8]
   114c4:	ldr	x0, [x0, #24]
   114c8:	lsl	x0, x0, #3
   114cc:	add	x0, x1, x0
   114d0:	ldr	x0, [x0]
   114d4:	b	114e0 <XS_POSIX_setsid+0xc0>
   114d8:	ldr	x0, [sp, #24]
   114dc:	bl	7160 <Perl_sv_newmortal@plt>
   114e0:	str	x0, [sp, #72]
   114e4:	bl	6f60 <setsid@plt>
   114e8:	str	w0, [sp, #52]
   114ec:	ldr	x0, [sp, #24]
   114f0:	ldr	x1, [x0, #24]
   114f4:	ldrsw	x0, [sp, #44]
   114f8:	lsl	x0, x0, #3
   114fc:	sub	x0, x0, #0x8
   11500:	add	x0, x1, x0
   11504:	str	x0, [sp, #56]
   11508:	ldr	w0, [sp, #52]
   1150c:	scvtf	d0, w0
   11510:	str	d0, [sp, #80]
   11514:	ldr	x0, [sp, #72]
   11518:	ldr	w1, [x0, #12]
   1151c:	mov	w0, #0x8ff                 	// #2303
   11520:	movk	w0, #0x1981, lsl #16
   11524:	and	w0, w1, w0
   11528:	cmp	w0, #0x2
   1152c:	cset	w0, eq  // eq = none
   11530:	and	w0, w0, #0xff
   11534:	mov	w1, w0
   11538:	ldr	x0, [sp, #24]
   1153c:	ldrb	w0, [x0, #185]
   11540:	eor	w0, w0, #0x1
   11544:	and	w0, w0, #0xff
   11548:	and	w0, w1, w0
   1154c:	cmp	w0, #0x0
   11550:	cset	w0, ne  // ne = any
   11554:	and	w0, w0, #0xff
   11558:	and	x0, x0, #0xff
   1155c:	cmp	x0, #0x0
   11560:	b.eq	11590 <XS_POSIX_setsid+0x170>  // b.none
   11564:	ldr	x0, [sp, #72]
   11568:	ldr	w1, [x0, #12]
   1156c:	mov	w0, #0x2200                	// #8704
   11570:	orr	w1, w1, w0
   11574:	ldr	x0, [sp, #72]
   11578:	str	w1, [x0, #12]
   1157c:	ldr	x0, [sp, #72]
   11580:	ldr	x0, [x0]
   11584:	ldr	d0, [sp, #80]
   11588:	str	d0, [x0, #40]
   1158c:	b	115a0 <XS_POSIX_setsid+0x180>
   11590:	ldr	d0, [sp, #80]
   11594:	ldr	x1, [sp, #72]
   11598:	ldr	x0, [sp, #24]
   1159c:	bl	6960 <Perl_sv_setnv_mg@plt>
   115a0:	ldr	x0, [sp, #56]
   115a4:	add	x0, x0, #0x8
   115a8:	str	x0, [sp, #56]
   115ac:	ldr	x0, [sp, #56]
   115b0:	ldr	x1, [sp, #72]
   115b4:	str	x1, [x0]
   115b8:	mov	x0, #0x1                   	// #1
   115bc:	str	x0, [sp, #88]
   115c0:	ldr	x0, [sp, #24]
   115c4:	ldr	x1, [x0, #24]
   115c8:	ldrsw	x2, [sp, #44]
   115cc:	ldr	x0, [sp, #88]
   115d0:	add	x0, x2, x0
   115d4:	lsl	x0, x0, #3
   115d8:	sub	x0, x0, #0x8
   115dc:	add	x1, x1, x0
   115e0:	ldr	x0, [sp, #24]
   115e4:	str	x1, [x0]
   115e8:	nop
   115ec:	ldp	x29, x30, [sp], #96
   115f0:	ret

00000000000115f4 <XS_POSIX_tcgetpgrp>:
   115f4:	stp	x29, x30, [sp, #-112]!
   115f8:	mov	x29, sp
   115fc:	str	x19, [sp, #16]
   11600:	str	x0, [sp, #40]
   11604:	str	x1, [sp, #32]
   11608:	ldr	x0, [sp, #40]
   1160c:	ldr	x0, [x0]
   11610:	str	x0, [sp, #64]
   11614:	ldr	x0, [sp, #40]
   11618:	bl	739c <S_POPMARK>
   1161c:	str	w0, [sp, #48]
   11620:	ldr	x0, [sp, #40]
   11624:	ldr	x1, [x0, #24]
   11628:	ldr	w0, [sp, #48]
   1162c:	add	w2, w0, #0x1
   11630:	str	w2, [sp, #48]
   11634:	sxtw	x0, w0
   11638:	lsl	x0, x0, #3
   1163c:	add	x0, x1, x0
   11640:	str	x0, [sp, #72]
   11644:	ldr	x1, [sp, #64]
   11648:	ldr	x0, [sp, #72]
   1164c:	sub	x0, x1, x0
   11650:	asr	x0, x0, #3
   11654:	str	w0, [sp, #52]
   11658:	ldr	w0, [sp, #52]
   1165c:	cmp	w0, #0x1
   11660:	b.eq	11674 <XS_POSIX_tcgetpgrp+0x80>  // b.none
   11664:	adrp	x0, 1b000 <_fini+0x1fc>
   11668:	add	x1, x0, #0x730
   1166c:	ldr	x0, [sp, #32]
   11670:	bl	6b20 <Perl_croak_xs_usage@plt>
   11674:	ldr	x0, [sp, #40]
   11678:	ldr	x0, [x0, #8]
   1167c:	ldrb	w0, [x0, #35]
   11680:	and	w0, w0, #0x4
   11684:	cmp	w0, #0x0
   11688:	b.eq	116b0 <XS_POSIX_tcgetpgrp+0xbc>  // b.none
   1168c:	ldr	x0, [sp, #40]
   11690:	ldr	x1, [x0, #16]
   11694:	ldr	x0, [sp, #40]
   11698:	ldr	x0, [x0, #8]
   1169c:	ldr	x0, [x0, #24]
   116a0:	lsl	x0, x0, #3
   116a4:	add	x0, x1, x0
   116a8:	ldr	x0, [x0]
   116ac:	b	116b8 <XS_POSIX_tcgetpgrp+0xc4>
   116b0:	ldr	x0, [sp, #40]
   116b4:	bl	7160 <Perl_sv_newmortal@plt>
   116b8:	str	x0, [sp, #80]
   116bc:	ldr	x0, [sp, #40]
   116c0:	ldr	x1, [x0, #24]
   116c4:	ldrsw	x0, [sp, #48]
   116c8:	lsl	x0, x0, #3
   116cc:	add	x0, x1, x0
   116d0:	ldr	x0, [x0]
   116d4:	ldr	w1, [x0, #12]
   116d8:	mov	w0, #0x100                 	// #256
   116dc:	movk	w0, #0x20, lsl #16
   116e0:	and	w0, w1, w0
   116e4:	cmp	w0, #0x100
   116e8:	b.ne	11710 <XS_POSIX_tcgetpgrp+0x11c>  // b.any
   116ec:	ldr	x0, [sp, #40]
   116f0:	ldr	x1, [x0, #24]
   116f4:	ldrsw	x0, [sp, #48]
   116f8:	lsl	x0, x0, #3
   116fc:	add	x0, x1, x0
   11700:	ldr	x0, [x0]
   11704:	ldr	x0, [x0]
   11708:	ldr	x0, [x0, #32]
   1170c:	b	11738 <XS_POSIX_tcgetpgrp+0x144>
   11710:	ldr	x0, [sp, #40]
   11714:	ldr	x1, [x0, #24]
   11718:	ldrsw	x0, [sp, #48]
   1171c:	lsl	x0, x0, #3
   11720:	add	x0, x1, x0
   11724:	ldr	x0, [x0]
   11728:	mov	w2, #0x2                   	// #2
   1172c:	mov	x1, x0
   11730:	ldr	x0, [sp, #40]
   11734:	bl	6560 <Perl_sv_2iv_flags@plt>
   11738:	str	w0, [sp, #56]
   1173c:	ldr	w0, [sp, #56]
   11740:	cmp	w0, #0x0
   11744:	b.ge	117c0 <XS_POSIX_tcgetpgrp+0x1cc>  // b.tcont
   11748:	bl	70d0 <__errno_location@plt>
   1174c:	mov	x1, x0
   11750:	mov	w0, #0x9                   	// #9
   11754:	str	w0, [x1]
   11758:	mov	x1, #0xffffffffffffffff    	// #-1
   1175c:	ldr	x0, [sp, #40]
   11760:	bl	70b0 <Perl_newSViv@plt>
   11764:	mov	x2, x0
   11768:	ldr	x0, [sp, #40]
   1176c:	ldr	x1, [x0, #24]
   11770:	ldrsw	x0, [sp, #48]
   11774:	lsl	x0, x0, #3
   11778:	add	x19, x1, x0
   1177c:	mov	x1, x2
   11780:	ldr	x0, [sp, #40]
   11784:	bl	6d60 <Perl_sv_2mortal@plt>
   11788:	str	x0, [x19]
   1178c:	mov	x0, #0x1                   	// #1
   11790:	str	x0, [sp, #104]
   11794:	ldr	x0, [sp, #40]
   11798:	ldr	x1, [x0, #24]
   1179c:	ldrsw	x2, [sp, #48]
   117a0:	ldr	x0, [sp, #104]
   117a4:	add	x0, x2, x0
   117a8:	lsl	x0, x0, #3
   117ac:	sub	x0, x0, #0x8
   117b0:	add	x1, x1, x0
   117b4:	ldr	x0, [sp, #40]
   117b8:	str	x1, [x0]
   117bc:	b	118cc <XS_POSIX_tcgetpgrp+0x2d8>
   117c0:	ldr	w0, [sp, #56]
   117c4:	bl	6ab0 <tcgetpgrp@plt>
   117c8:	str	w0, [sp, #60]
   117cc:	ldr	x0, [sp, #40]
   117d0:	ldr	x1, [x0, #24]
   117d4:	ldrsw	x0, [sp, #48]
   117d8:	lsl	x0, x0, #3
   117dc:	sub	x0, x0, #0x8
   117e0:	add	x0, x1, x0
   117e4:	str	x0, [sp, #64]
   117e8:	ldr	w0, [sp, #60]
   117ec:	scvtf	d0, w0
   117f0:	str	d0, [sp, #88]
   117f4:	ldr	x0, [sp, #80]
   117f8:	ldr	w1, [x0, #12]
   117fc:	mov	w0, #0x8ff                 	// #2303
   11800:	movk	w0, #0x1981, lsl #16
   11804:	and	w0, w1, w0
   11808:	cmp	w0, #0x2
   1180c:	cset	w0, eq  // eq = none
   11810:	and	w0, w0, #0xff
   11814:	mov	w1, w0
   11818:	ldr	x0, [sp, #40]
   1181c:	ldrb	w0, [x0, #185]
   11820:	eor	w0, w0, #0x1
   11824:	and	w0, w0, #0xff
   11828:	and	w0, w1, w0
   1182c:	cmp	w0, #0x0
   11830:	cset	w0, ne  // ne = any
   11834:	and	w0, w0, #0xff
   11838:	and	x0, x0, #0xff
   1183c:	cmp	x0, #0x0
   11840:	b.eq	11870 <XS_POSIX_tcgetpgrp+0x27c>  // b.none
   11844:	ldr	x0, [sp, #80]
   11848:	ldr	w1, [x0, #12]
   1184c:	mov	w0, #0x2200                	// #8704
   11850:	orr	w1, w1, w0
   11854:	ldr	x0, [sp, #80]
   11858:	str	w1, [x0, #12]
   1185c:	ldr	x0, [sp, #80]
   11860:	ldr	x0, [x0]
   11864:	ldr	d0, [sp, #88]
   11868:	str	d0, [x0, #40]
   1186c:	b	11880 <XS_POSIX_tcgetpgrp+0x28c>
   11870:	ldr	d0, [sp, #88]
   11874:	ldr	x1, [sp, #80]
   11878:	ldr	x0, [sp, #40]
   1187c:	bl	6960 <Perl_sv_setnv_mg@plt>
   11880:	ldr	x0, [sp, #64]
   11884:	add	x0, x0, #0x8
   11888:	str	x0, [sp, #64]
   1188c:	ldr	x0, [sp, #64]
   11890:	ldr	x1, [sp, #80]
   11894:	str	x1, [x0]
   11898:	mov	x0, #0x1                   	// #1
   1189c:	str	x0, [sp, #96]
   118a0:	ldr	x0, [sp, #40]
   118a4:	ldr	x1, [x0, #24]
   118a8:	ldrsw	x2, [sp, #48]
   118ac:	ldr	x0, [sp, #96]
   118b0:	add	x0, x2, x0
   118b4:	lsl	x0, x0, #3
   118b8:	sub	x0, x0, #0x8
   118bc:	add	x1, x1, x0
   118c0:	ldr	x0, [sp, #40]
   118c4:	str	x1, [x0]
   118c8:	nop
   118cc:	ldr	x19, [sp, #16]
   118d0:	ldp	x29, x30, [sp], #112
   118d4:	ret

00000000000118d8 <XS_POSIX_tcsetpgrp>:
   118d8:	stp	x29, x30, [sp, #-112]!
   118dc:	mov	x29, sp
   118e0:	str	x19, [sp, #16]
   118e4:	str	x0, [sp, #40]
   118e8:	str	x1, [sp, #32]
   118ec:	ldr	x0, [sp, #40]
   118f0:	ldr	x0, [x0]
   118f4:	str	x0, [sp, #72]
   118f8:	ldr	x0, [sp, #40]
   118fc:	bl	739c <S_POPMARK>
   11900:	str	w0, [sp, #52]
   11904:	ldr	x0, [sp, #40]
   11908:	ldr	x1, [x0, #24]
   1190c:	ldr	w0, [sp, #52]
   11910:	add	w2, w0, #0x1
   11914:	str	w2, [sp, #52]
   11918:	sxtw	x0, w0
   1191c:	lsl	x0, x0, #3
   11920:	add	x0, x1, x0
   11924:	str	x0, [sp, #80]
   11928:	ldr	x1, [sp, #72]
   1192c:	ldr	x0, [sp, #80]
   11930:	sub	x0, x1, x0
   11934:	asr	x0, x0, #3
   11938:	str	w0, [sp, #56]
   1193c:	ldr	w0, [sp, #56]
   11940:	cmp	w0, #0x2
   11944:	b.eq	11958 <XS_POSIX_tcsetpgrp+0x80>  // b.none
   11948:	adrp	x0, 1b000 <_fini+0x1fc>
   1194c:	add	x1, x0, #0x738
   11950:	ldr	x0, [sp, #32]
   11954:	bl	6b20 <Perl_croak_xs_usage@plt>
   11958:	ldr	x0, [sp, #40]
   1195c:	ldr	x1, [x0, #24]
   11960:	ldrsw	x0, [sp, #52]
   11964:	add	x0, x0, #0x1
   11968:	lsl	x0, x0, #3
   1196c:	add	x0, x1, x0
   11970:	ldr	x0, [x0]
   11974:	ldr	w1, [x0, #12]
   11978:	mov	w0, #0x200                 	// #512
   1197c:	movk	w0, #0x20, lsl #16
   11980:	and	w0, w1, w0
   11984:	cmp	w0, #0x200
   11988:	b.ne	119b8 <XS_POSIX_tcsetpgrp+0xe0>  // b.any
   1198c:	ldr	x0, [sp, #40]
   11990:	ldr	x1, [x0, #24]
   11994:	ldrsw	x0, [sp, #52]
   11998:	add	x0, x0, #0x1
   1199c:	lsl	x0, x0, #3
   119a0:	add	x0, x1, x0
   119a4:	ldr	x0, [x0]
   119a8:	ldr	x0, [x0]
   119ac:	ldr	d0, [x0, #40]
   119b0:	fcvtzs	w0, d0
   119b4:	b	119e8 <XS_POSIX_tcsetpgrp+0x110>
   119b8:	ldr	x0, [sp, #40]
   119bc:	ldr	x1, [x0, #24]
   119c0:	ldrsw	x0, [sp, #52]
   119c4:	add	x0, x0, #0x1
   119c8:	lsl	x0, x0, #3
   119cc:	add	x0, x1, x0
   119d0:	ldr	x0, [x0]
   119d4:	mov	w2, #0x2                   	// #2
   119d8:	mov	x1, x0
   119dc:	ldr	x0, [sp, #40]
   119e0:	bl	6b80 <Perl_sv_2nv_flags@plt>
   119e4:	fcvtzs	w0, d0
   119e8:	str	w0, [sp, #60]
   119ec:	ldr	x0, [sp, #40]
   119f0:	ldr	x1, [x0, #24]
   119f4:	ldrsw	x0, [sp, #52]
   119f8:	lsl	x0, x0, #3
   119fc:	add	x0, x1, x0
   11a00:	ldr	x0, [x0]
   11a04:	ldr	w1, [x0, #12]
   11a08:	mov	w0, #0x100                 	// #256
   11a0c:	movk	w0, #0x20, lsl #16
   11a10:	and	w0, w1, w0
   11a14:	cmp	w0, #0x100
   11a18:	b.ne	11a40 <XS_POSIX_tcsetpgrp+0x168>  // b.any
   11a1c:	ldr	x0, [sp, #40]
   11a20:	ldr	x1, [x0, #24]
   11a24:	ldrsw	x0, [sp, #52]
   11a28:	lsl	x0, x0, #3
   11a2c:	add	x0, x1, x0
   11a30:	ldr	x0, [x0]
   11a34:	ldr	x0, [x0]
   11a38:	ldr	x0, [x0, #32]
   11a3c:	b	11a68 <XS_POSIX_tcsetpgrp+0x190>
   11a40:	ldr	x0, [sp, #40]
   11a44:	ldr	x1, [x0, #24]
   11a48:	ldrsw	x0, [sp, #52]
   11a4c:	lsl	x0, x0, #3
   11a50:	add	x0, x1, x0
   11a54:	ldr	x0, [x0]
   11a58:	mov	w2, #0x2                   	// #2
   11a5c:	mov	x1, x0
   11a60:	ldr	x0, [sp, #40]
   11a64:	bl	6560 <Perl_sv_2iv_flags@plt>
   11a68:	str	w0, [sp, #64]
   11a6c:	ldr	w0, [sp, #64]
   11a70:	cmp	w0, #0x0
   11a74:	b.ge	11af0 <XS_POSIX_tcsetpgrp+0x218>  // b.tcont
   11a78:	bl	70d0 <__errno_location@plt>
   11a7c:	mov	x1, x0
   11a80:	mov	w0, #0x9                   	// #9
   11a84:	str	w0, [x1]
   11a88:	mov	x1, #0xffffffffffffffff    	// #-1
   11a8c:	ldr	x0, [sp, #40]
   11a90:	bl	70b0 <Perl_newSViv@plt>
   11a94:	mov	x2, x0
   11a98:	ldr	x0, [sp, #40]
   11a9c:	ldr	x1, [x0, #24]
   11aa0:	ldrsw	x0, [sp, #52]
   11aa4:	lsl	x0, x0, #3
   11aa8:	add	x19, x1, x0
   11aac:	mov	x1, x2
   11ab0:	ldr	x0, [sp, #40]
   11ab4:	bl	6d60 <Perl_sv_2mortal@plt>
   11ab8:	str	x0, [x19]
   11abc:	mov	x0, #0x1                   	// #1
   11ac0:	str	x0, [sp, #104]
   11ac4:	ldr	x0, [sp, #40]
   11ac8:	ldr	x1, [x0, #24]
   11acc:	ldrsw	x2, [sp, #52]
   11ad0:	ldr	x0, [sp, #104]
   11ad4:	add	x0, x2, x0
   11ad8:	lsl	x0, x0, #3
   11adc:	sub	x0, x0, #0x8
   11ae0:	add	x1, x1, x0
   11ae4:	ldr	x0, [sp, #40]
   11ae8:	str	x1, [x0]
   11aec:	b	11ba4 <XS_POSIX_tcsetpgrp+0x2cc>
   11af0:	ldr	w1, [sp, #60]
   11af4:	ldr	w0, [sp, #64]
   11af8:	bl	6640 <tcsetpgrp@plt>
   11afc:	str	w0, [sp, #68]
   11b00:	ldr	x0, [sp, #40]
   11b04:	bl	7160 <Perl_sv_newmortal@plt>
   11b08:	str	x0, [sp, #88]
   11b0c:	ldr	w0, [sp, #68]
   11b10:	cmn	w0, #0x1
   11b14:	b.eq	11b54 <XS_POSIX_tcsetpgrp+0x27c>  // b.none
   11b18:	ldr	w0, [sp, #68]
   11b1c:	cmp	w0, #0x0
   11b20:	b.ne	11b40 <XS_POSIX_tcsetpgrp+0x268>  // b.any
   11b24:	mov	x3, #0xa                   	// #10
   11b28:	adrp	x0, 1b000 <_fini+0x1fc>
   11b2c:	add	x2, x0, #0x188
   11b30:	ldr	x1, [sp, #88]
   11b34:	ldr	x0, [sp, #40]
   11b38:	bl	6f10 <Perl_sv_setpvn@plt>
   11b3c:	b	11b54 <XS_POSIX_tcsetpgrp+0x27c>
   11b40:	ldrsw	x0, [sp, #68]
   11b44:	mov	x2, x0
   11b48:	ldr	x1, [sp, #88]
   11b4c:	ldr	x0, [sp, #40]
   11b50:	bl	7120 <Perl_sv_setiv@plt>
   11b54:	ldr	x0, [sp, #40]
   11b58:	ldr	x1, [x0, #24]
   11b5c:	ldrsw	x0, [sp, #52]
   11b60:	lsl	x0, x0, #3
   11b64:	add	x0, x1, x0
   11b68:	ldr	x1, [sp, #88]
   11b6c:	str	x1, [x0]
   11b70:	mov	x0, #0x1                   	// #1
   11b74:	str	x0, [sp, #96]
   11b78:	ldr	x0, [sp, #40]
   11b7c:	ldr	x1, [x0, #24]
   11b80:	ldrsw	x2, [sp, #52]
   11b84:	ldr	x0, [sp, #96]
   11b88:	add	x0, x2, x0
   11b8c:	lsl	x0, x0, #3
   11b90:	sub	x0, x0, #0x8
   11b94:	add	x1, x1, x0
   11b98:	ldr	x0, [sp, #40]
   11b9c:	str	x1, [x0]
   11ba0:	nop
   11ba4:	ldr	x19, [sp, #16]
   11ba8:	ldp	x29, x30, [sp], #112
   11bac:	ret

0000000000011bb0 <XS_POSIX_uname>:
   11bb0:	stp	x29, x30, [sp, #-464]!
   11bb4:	mov	x29, sp
   11bb8:	str	x0, [sp, #24]
   11bbc:	str	x1, [sp, #16]
   11bc0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   11bc4:	ldr	x0, [x0, #3992]
   11bc8:	ldr	x1, [x0]
   11bcc:	str	x1, [sp, #456]
   11bd0:	mov	x1, #0x0                   	// #0
   11bd4:	ldr	x0, [sp, #24]
   11bd8:	ldr	x0, [x0]
   11bdc:	str	x0, [sp, #48]
   11be0:	ldr	x0, [sp, #24]
   11be4:	bl	739c <S_POPMARK>
   11be8:	str	w0, [sp, #40]
   11bec:	ldr	x0, [sp, #24]
   11bf0:	ldr	x1, [x0, #24]
   11bf4:	ldr	w0, [sp, #40]
   11bf8:	add	w2, w0, #0x1
   11bfc:	str	w2, [sp, #40]
   11c00:	sxtw	x0, w0
   11c04:	lsl	x0, x0, #3
   11c08:	add	x0, x1, x0
   11c0c:	str	x0, [sp, #56]
   11c10:	ldr	x1, [sp, #48]
   11c14:	ldr	x0, [sp, #56]
   11c18:	sub	x0, x1, x0
   11c1c:	asr	x0, x0, #3
   11c20:	str	w0, [sp, #44]
   11c24:	ldr	w0, [sp, #44]
   11c28:	cmp	w0, #0x0
   11c2c:	b.eq	11c40 <XS_POSIX_uname+0x90>  // b.none
   11c30:	adrp	x0, 1b000 <_fini+0x1fc>
   11c34:	add	x1, x0, #0x3f0
   11c38:	ldr	x0, [sp, #16]
   11c3c:	bl	6b20 <Perl_croak_xs_usage@plt>
   11c40:	ldrsw	x0, [sp, #44]
   11c44:	lsl	x0, x0, #3
   11c48:	neg	x0, x0
   11c4c:	ldr	x1, [sp, #48]
   11c50:	add	x0, x1, x0
   11c54:	str	x0, [sp, #48]
   11c58:	add	x0, sp, #0x40
   11c5c:	bl	70e0 <uname@plt>
   11c60:	cmp	w0, #0x0
   11c64:	b.lt	11df4 <XS_POSIX_uname+0x244>  // b.tstop
   11c68:	ldr	x0, [sp, #24]
   11c6c:	ldr	x1, [x0, #32]
   11c70:	ldr	x0, [sp, #48]
   11c74:	sub	x0, x1, x0
   11c78:	cmp	x0, #0x20
   11c7c:	cset	w0, le
   11c80:	and	w0, w0, #0xff
   11c84:	and	x0, x0, #0xff
   11c88:	cmp	x0, #0x0
   11c8c:	b.eq	11ca8 <XS_POSIX_uname+0xf8>  // b.none
   11c90:	mov	x3, #0x5                   	// #5
   11c94:	ldr	x2, [sp, #48]
   11c98:	ldr	x1, [sp, #48]
   11c9c:	ldr	x0, [sp, #24]
   11ca0:	bl	6660 <Perl_stack_grow@plt>
   11ca4:	str	x0, [sp, #48]
   11ca8:	add	x0, sp, #0x40
   11cac:	bl	65c0 <strlen@plt>
   11cb0:	mov	x1, x0
   11cb4:	ldr	x0, [sp, #48]
   11cb8:	add	x0, x0, #0x8
   11cbc:	str	x0, [sp, #48]
   11cc0:	add	x0, sp, #0x40
   11cc4:	mov	w3, #0x80000               	// #524288
   11cc8:	mov	x2, x1
   11ccc:	mov	x1, x0
   11cd0:	ldr	x0, [sp, #24]
   11cd4:	bl	6b50 <Perl_newSVpvn_flags@plt>
   11cd8:	mov	x1, x0
   11cdc:	ldr	x0, [sp, #48]
   11ce0:	str	x1, [x0]
   11ce4:	add	x0, sp, #0x40
   11ce8:	add	x0, x0, #0x41
   11cec:	bl	65c0 <strlen@plt>
   11cf0:	mov	x1, x0
   11cf4:	ldr	x0, [sp, #48]
   11cf8:	add	x0, x0, #0x8
   11cfc:	str	x0, [sp, #48]
   11d00:	add	x0, sp, #0x40
   11d04:	add	x0, x0, #0x41
   11d08:	mov	w3, #0x80000               	// #524288
   11d0c:	mov	x2, x1
   11d10:	mov	x1, x0
   11d14:	ldr	x0, [sp, #24]
   11d18:	bl	6b50 <Perl_newSVpvn_flags@plt>
   11d1c:	mov	x1, x0
   11d20:	ldr	x0, [sp, #48]
   11d24:	str	x1, [x0]
   11d28:	add	x0, sp, #0x40
   11d2c:	add	x0, x0, #0x82
   11d30:	bl	65c0 <strlen@plt>
   11d34:	mov	x1, x0
   11d38:	ldr	x0, [sp, #48]
   11d3c:	add	x0, x0, #0x8
   11d40:	str	x0, [sp, #48]
   11d44:	add	x0, sp, #0x40
   11d48:	add	x0, x0, #0x82
   11d4c:	mov	w3, #0x80000               	// #524288
   11d50:	mov	x2, x1
   11d54:	mov	x1, x0
   11d58:	ldr	x0, [sp, #24]
   11d5c:	bl	6b50 <Perl_newSVpvn_flags@plt>
   11d60:	mov	x1, x0
   11d64:	ldr	x0, [sp, #48]
   11d68:	str	x1, [x0]
   11d6c:	add	x0, sp, #0x40
   11d70:	add	x0, x0, #0xc3
   11d74:	bl	65c0 <strlen@plt>
   11d78:	mov	x1, x0
   11d7c:	ldr	x0, [sp, #48]
   11d80:	add	x0, x0, #0x8
   11d84:	str	x0, [sp, #48]
   11d88:	add	x0, sp, #0x40
   11d8c:	add	x0, x0, #0xc3
   11d90:	mov	w3, #0x80000               	// #524288
   11d94:	mov	x2, x1
   11d98:	mov	x1, x0
   11d9c:	ldr	x0, [sp, #24]
   11da0:	bl	6b50 <Perl_newSVpvn_flags@plt>
   11da4:	mov	x1, x0
   11da8:	ldr	x0, [sp, #48]
   11dac:	str	x1, [x0]
   11db0:	add	x0, sp, #0x40
   11db4:	add	x0, x0, #0x104
   11db8:	bl	65c0 <strlen@plt>
   11dbc:	mov	x1, x0
   11dc0:	ldr	x0, [sp, #48]
   11dc4:	add	x0, x0, #0x8
   11dc8:	str	x0, [sp, #48]
   11dcc:	add	x0, sp, #0x40
   11dd0:	add	x0, x0, #0x104
   11dd4:	mov	w3, #0x80000               	// #524288
   11dd8:	mov	x2, x1
   11ddc:	mov	x1, x0
   11de0:	ldr	x0, [sp, #24]
   11de4:	bl	6b50 <Perl_newSVpvn_flags@plt>
   11de8:	mov	x1, x0
   11dec:	ldr	x0, [sp, #48]
   11df0:	str	x1, [x0]
   11df4:	ldr	x0, [sp, #24]
   11df8:	ldr	x1, [sp, #48]
   11dfc:	str	x1, [x0]
   11e00:	nop
   11e04:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   11e08:	ldr	x0, [x0, #3992]
   11e0c:	ldr	x1, [sp, #456]
   11e10:	ldr	x0, [x0]
   11e14:	eor	x0, x1, x0
   11e18:	cmp	x0, #0x0
   11e1c:	b.eq	11e24 <XS_POSIX_uname+0x274>  // b.none
   11e20:	bl	6a60 <__stack_chk_fail@plt>
   11e24:	ldp	x29, x30, [sp], #464
   11e28:	ret

0000000000011e2c <XS_POSIX_write>:
   11e2c:	stp	x29, x30, [sp, #-128]!
   11e30:	mov	x29, sp
   11e34:	str	x19, [sp, #16]
   11e38:	str	x0, [sp, #40]
   11e3c:	str	x1, [sp, #32]
   11e40:	ldr	x0, [sp, #40]
   11e44:	ldr	x0, [x0]
   11e48:	str	x0, [sp, #72]
   11e4c:	ldr	x0, [sp, #40]
   11e50:	bl	739c <S_POPMARK>
   11e54:	str	w0, [sp, #56]
   11e58:	ldr	x0, [sp, #40]
   11e5c:	ldr	x1, [x0, #24]
   11e60:	ldr	w0, [sp, #56]
   11e64:	add	w2, w0, #0x1
   11e68:	str	w2, [sp, #56]
   11e6c:	sxtw	x0, w0
   11e70:	lsl	x0, x0, #3
   11e74:	add	x0, x1, x0
   11e78:	str	x0, [sp, #80]
   11e7c:	ldr	x1, [sp, #72]
   11e80:	ldr	x0, [sp, #80]
   11e84:	sub	x0, x1, x0
   11e88:	asr	x0, x0, #3
   11e8c:	str	w0, [sp, #60]
   11e90:	ldr	w0, [sp, #60]
   11e94:	cmp	w0, #0x3
   11e98:	b.eq	11eac <XS_POSIX_write+0x80>  // b.none
   11e9c:	adrp	x0, 1b000 <_fini+0x1fc>
   11ea0:	add	x1, x0, #0x708
   11ea4:	ldr	x0, [sp, #32]
   11ea8:	bl	6b20 <Perl_croak_xs_usage@plt>
   11eac:	ldr	x0, [sp, #40]
   11eb0:	ldr	x1, [x0, #24]
   11eb4:	ldrsw	x0, [sp, #56]
   11eb8:	add	x0, x0, #0x1
   11ebc:	lsl	x0, x0, #3
   11ec0:	add	x0, x1, x0
   11ec4:	ldr	x0, [x0]
   11ec8:	ldr	w1, [x0, #12]
   11ecc:	mov	w0, #0x400                 	// #1024
   11ed0:	movk	w0, #0x20, lsl #16
   11ed4:	and	w0, w1, w0
   11ed8:	cmp	w0, #0x400
   11edc:	b.ne	11f04 <XS_POSIX_write+0xd8>  // b.any
   11ee0:	ldr	x0, [sp, #40]
   11ee4:	ldr	x1, [x0, #24]
   11ee8:	ldrsw	x0, [sp, #56]
   11eec:	add	x0, x0, #0x1
   11ef0:	lsl	x0, x0, #3
   11ef4:	add	x0, x1, x0
   11ef8:	ldr	x0, [x0]
   11efc:	ldr	x0, [x0, #16]
   11f00:	b	11f34 <XS_POSIX_write+0x108>
   11f04:	ldr	x0, [sp, #40]
   11f08:	ldr	x1, [x0, #24]
   11f0c:	ldrsw	x0, [sp, #56]
   11f10:	add	x0, x0, #0x1
   11f14:	lsl	x0, x0, #3
   11f18:	add	x0, x1, x0
   11f1c:	ldr	x0, [x0]
   11f20:	mov	w3, #0x2                   	// #2
   11f24:	mov	x2, #0x0                   	// #0
   11f28:	mov	x1, x0
   11f2c:	ldr	x0, [sp, #40]
   11f30:	bl	69b0 <Perl_sv_2pv_flags@plt>
   11f34:	str	x0, [sp, #88]
   11f38:	ldr	x0, [sp, #40]
   11f3c:	ldr	x1, [x0, #24]
   11f40:	ldrsw	x0, [sp, #56]
   11f44:	add	x0, x0, #0x2
   11f48:	lsl	x0, x0, #3
   11f4c:	add	x0, x1, x0
   11f50:	ldr	x0, [x0]
   11f54:	ldr	w1, [x0, #12]
   11f58:	mov	w0, #0x100                 	// #256
   11f5c:	movk	w0, #0x8020, lsl #16
   11f60:	and	w1, w1, w0
   11f64:	mov	w0, #0x100                 	// #256
   11f68:	movk	w0, #0x8000, lsl #16
   11f6c:	cmp	w1, w0
   11f70:	b.ne	11f9c <XS_POSIX_write+0x170>  // b.any
   11f74:	ldr	x0, [sp, #40]
   11f78:	ldr	x1, [x0, #24]
   11f7c:	ldrsw	x0, [sp, #56]
   11f80:	add	x0, x0, #0x2
   11f84:	lsl	x0, x0, #3
   11f88:	add	x0, x1, x0
   11f8c:	ldr	x0, [x0]
   11f90:	ldr	x0, [x0]
   11f94:	ldr	x0, [x0, #32]
   11f98:	b	11fc8 <XS_POSIX_write+0x19c>
   11f9c:	ldr	x0, [sp, #40]
   11fa0:	ldr	x1, [x0, #24]
   11fa4:	ldrsw	x0, [sp, #56]
   11fa8:	add	x0, x0, #0x2
   11fac:	lsl	x0, x0, #3
   11fb0:	add	x0, x1, x0
   11fb4:	ldr	x0, [x0]
   11fb8:	mov	w2, #0x2                   	// #2
   11fbc:	mov	x1, x0
   11fc0:	ldr	x0, [sp, #40]
   11fc4:	bl	6650 <Perl_sv_2uv_flags@plt>
   11fc8:	str	x0, [sp, #96]
   11fcc:	ldr	x0, [sp, #40]
   11fd0:	ldr	x1, [x0, #24]
   11fd4:	ldrsw	x0, [sp, #56]
   11fd8:	lsl	x0, x0, #3
   11fdc:	add	x0, x1, x0
   11fe0:	ldr	x0, [x0]
   11fe4:	ldr	w1, [x0, #12]
   11fe8:	mov	w0, #0x100                 	// #256
   11fec:	movk	w0, #0x20, lsl #16
   11ff0:	and	w0, w1, w0
   11ff4:	cmp	w0, #0x100
   11ff8:	b.ne	12020 <XS_POSIX_write+0x1f4>  // b.any
   11ffc:	ldr	x0, [sp, #40]
   12000:	ldr	x1, [x0, #24]
   12004:	ldrsw	x0, [sp, #56]
   12008:	lsl	x0, x0, #3
   1200c:	add	x0, x1, x0
   12010:	ldr	x0, [x0]
   12014:	ldr	x0, [x0]
   12018:	ldr	x0, [x0, #32]
   1201c:	b	12048 <XS_POSIX_write+0x21c>
   12020:	ldr	x0, [sp, #40]
   12024:	ldr	x1, [x0, #24]
   12028:	ldrsw	x0, [sp, #56]
   1202c:	lsl	x0, x0, #3
   12030:	add	x0, x1, x0
   12034:	ldr	x0, [x0]
   12038:	mov	w2, #0x2                   	// #2
   1203c:	mov	x1, x0
   12040:	ldr	x0, [sp, #40]
   12044:	bl	6560 <Perl_sv_2iv_flags@plt>
   12048:	str	w0, [sp, #64]
   1204c:	ldr	w0, [sp, #64]
   12050:	cmp	w0, #0x0
   12054:	b.ge	120d0 <XS_POSIX_write+0x2a4>  // b.tcont
   12058:	bl	70d0 <__errno_location@plt>
   1205c:	mov	x1, x0
   12060:	mov	w0, #0x9                   	// #9
   12064:	str	w0, [x1]
   12068:	mov	x1, #0xffffffffffffffff    	// #-1
   1206c:	ldr	x0, [sp, #40]
   12070:	bl	70b0 <Perl_newSViv@plt>
   12074:	mov	x2, x0
   12078:	ldr	x0, [sp, #40]
   1207c:	ldr	x1, [x0, #24]
   12080:	ldrsw	x0, [sp, #56]
   12084:	lsl	x0, x0, #3
   12088:	add	x19, x1, x0
   1208c:	mov	x1, x2
   12090:	ldr	x0, [sp, #40]
   12094:	bl	6d60 <Perl_sv_2mortal@plt>
   12098:	str	x0, [x19]
   1209c:	mov	x0, #0x1                   	// #1
   120a0:	str	x0, [sp, #120]
   120a4:	ldr	x0, [sp, #40]
   120a8:	ldr	x1, [x0, #24]
   120ac:	ldrsw	x2, [sp, #56]
   120b0:	ldr	x0, [sp, #120]
   120b4:	add	x0, x2, x0
   120b8:	lsl	x0, x0, #3
   120bc:	sub	x0, x0, #0x8
   120c0:	add	x1, x1, x0
   120c4:	ldr	x0, [sp, #40]
   120c8:	str	x1, [x0]
   120cc:	b	12188 <XS_POSIX_write+0x35c>
   120d0:	ldr	x2, [sp, #96]
   120d4:	ldr	x1, [sp, #88]
   120d8:	ldr	w0, [sp, #64]
   120dc:	bl	6b10 <write@plt>
   120e0:	str	w0, [sp, #68]
   120e4:	ldr	x0, [sp, #40]
   120e8:	bl	7160 <Perl_sv_newmortal@plt>
   120ec:	str	x0, [sp, #104]
   120f0:	ldr	w0, [sp, #68]
   120f4:	cmn	w0, #0x1
   120f8:	b.eq	12138 <XS_POSIX_write+0x30c>  // b.none
   120fc:	ldr	w0, [sp, #68]
   12100:	cmp	w0, #0x0
   12104:	b.ne	12124 <XS_POSIX_write+0x2f8>  // b.any
   12108:	mov	x3, #0xa                   	// #10
   1210c:	adrp	x0, 1b000 <_fini+0x1fc>
   12110:	add	x2, x0, #0x188
   12114:	ldr	x1, [sp, #104]
   12118:	ldr	x0, [sp, #40]
   1211c:	bl	6f10 <Perl_sv_setpvn@plt>
   12120:	b	12138 <XS_POSIX_write+0x30c>
   12124:	ldrsw	x0, [sp, #68]
   12128:	mov	x2, x0
   1212c:	ldr	x1, [sp, #104]
   12130:	ldr	x0, [sp, #40]
   12134:	bl	7120 <Perl_sv_setiv@plt>
   12138:	ldr	x0, [sp, #40]
   1213c:	ldr	x1, [x0, #24]
   12140:	ldrsw	x0, [sp, #56]
   12144:	lsl	x0, x0, #3
   12148:	add	x0, x1, x0
   1214c:	ldr	x1, [sp, #104]
   12150:	str	x1, [x0]
   12154:	mov	x0, #0x1                   	// #1
   12158:	str	x0, [sp, #112]
   1215c:	ldr	x0, [sp, #40]
   12160:	ldr	x1, [x0, #24]
   12164:	ldrsw	x2, [sp, #56]
   12168:	ldr	x0, [sp, #112]
   1216c:	add	x0, x2, x0
   12170:	lsl	x0, x0, #3
   12174:	sub	x0, x0, #0x8
   12178:	add	x1, x1, x0
   1217c:	ldr	x0, [sp, #40]
   12180:	str	x1, [x0]
   12184:	nop
   12188:	ldr	x19, [sp, #16]
   1218c:	ldp	x29, x30, [sp], #128
   12190:	ret

0000000000012194 <XS_POSIX_abort>:
   12194:	stp	x29, x30, [sp, #-64]!
   12198:	mov	x29, sp
   1219c:	str	x0, [sp, #24]
   121a0:	str	x1, [sp, #16]
   121a4:	ldr	x0, [sp, #24]
   121a8:	ldr	x0, [x0]
   121ac:	str	x0, [sp, #48]
   121b0:	ldr	x0, [sp, #24]
   121b4:	bl	739c <S_POPMARK>
   121b8:	str	w0, [sp, #40]
   121bc:	ldr	x0, [sp, #24]
   121c0:	ldr	x1, [x0, #24]
   121c4:	ldr	w0, [sp, #40]
   121c8:	add	w2, w0, #0x1
   121cc:	str	w2, [sp, #40]
   121d0:	sxtw	x0, w0
   121d4:	lsl	x0, x0, #3
   121d8:	add	x0, x1, x0
   121dc:	str	x0, [sp, #56]
   121e0:	ldr	x1, [sp, #48]
   121e4:	ldr	x0, [sp, #56]
   121e8:	sub	x0, x1, x0
   121ec:	asr	x0, x0, #3
   121f0:	str	w0, [sp, #44]
   121f4:	ldr	w0, [sp, #44]
   121f8:	cmp	w0, #0x0
   121fc:	b.eq	12210 <XS_POSIX_abort+0x7c>  // b.none
   12200:	adrp	x0, 1b000 <_fini+0x1fc>
   12204:	add	x1, x0, #0x3f0
   12208:	ldr	x0, [sp, #16]
   1220c:	bl	6b20 <Perl_croak_xs_usage@plt>
   12210:	bl	6b70 <abort@plt>

0000000000012214 <XS_POSIX_mblen>:
   12214:	stp	x29, x30, [sp, #-128]!
   12218:	mov	x29, sp
   1221c:	str	x0, [sp, #24]
   12220:	str	x1, [sp, #16]
   12224:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   12228:	ldr	x0, [x0, #3992]
   1222c:	ldr	x1, [x0]
   12230:	str	x1, [sp, #120]
   12234:	mov	x1, #0x0                   	// #0
   12238:	ldr	x0, [sp, #24]
   1223c:	ldr	x0, [x0]
   12240:	str	x0, [sp, #56]
   12244:	ldr	x0, [sp, #24]
   12248:	bl	739c <S_POPMARK>
   1224c:	str	w0, [sp, #44]
   12250:	ldr	x0, [sp, #24]
   12254:	ldr	x1, [x0, #24]
   12258:	ldr	w0, [sp, #44]
   1225c:	add	w2, w0, #0x1
   12260:	str	w2, [sp, #44]
   12264:	sxtw	x0, w0
   12268:	lsl	x0, x0, #3
   1226c:	add	x0, x1, x0
   12270:	str	x0, [sp, #64]
   12274:	ldr	x1, [sp, #56]
   12278:	ldr	x0, [sp, #64]
   1227c:	sub	x0, x1, x0
   12280:	asr	x0, x0, #3
   12284:	str	w0, [sp, #48]
   12288:	ldr	w0, [sp, #48]
   1228c:	cmp	w0, #0x2
   12290:	b.eq	122a4 <XS_POSIX_mblen+0x90>  // b.none
   12294:	adrp	x0, 1b000 <_fini+0x1fc>
   12298:	add	x1, x0, #0x748
   1229c:	ldr	x0, [sp, #16]
   122a0:	bl	6b20 <Perl_croak_xs_usage@plt>
   122a4:	ldr	x0, [sp, #24]
   122a8:	ldr	x1, [x0, #24]
   122ac:	ldrsw	x0, [sp, #44]
   122b0:	lsl	x0, x0, #3
   122b4:	add	x0, x1, x0
   122b8:	ldr	x0, [x0]
   122bc:	ldr	w1, [x0, #12]
   122c0:	mov	w0, #0x400                 	// #1024
   122c4:	movk	w0, #0x20, lsl #16
   122c8:	and	w0, w1, w0
   122cc:	cmp	w0, #0x400
   122d0:	b.ne	122f4 <XS_POSIX_mblen+0xe0>  // b.any
   122d4:	ldr	x0, [sp, #24]
   122d8:	ldr	x1, [x0, #24]
   122dc:	ldrsw	x0, [sp, #44]
   122e0:	lsl	x0, x0, #3
   122e4:	add	x0, x1, x0
   122e8:	ldr	x0, [x0]
   122ec:	ldr	x0, [x0, #16]
   122f0:	b	12320 <XS_POSIX_mblen+0x10c>
   122f4:	ldr	x0, [sp, #24]
   122f8:	ldr	x1, [x0, #24]
   122fc:	ldrsw	x0, [sp, #44]
   12300:	lsl	x0, x0, #3
   12304:	add	x0, x1, x0
   12308:	ldr	x0, [x0]
   1230c:	mov	w3, #0x2                   	// #2
   12310:	mov	x2, #0x0                   	// #0
   12314:	mov	x1, x0
   12318:	ldr	x0, [sp, #24]
   1231c:	bl	69b0 <Perl_sv_2pv_flags@plt>
   12320:	str	x0, [sp, #72]
   12324:	ldr	x0, [sp, #24]
   12328:	ldr	x1, [x0, #24]
   1232c:	ldrsw	x0, [sp, #44]
   12330:	add	x0, x0, #0x1
   12334:	lsl	x0, x0, #3
   12338:	add	x0, x1, x0
   1233c:	ldr	x0, [x0]
   12340:	ldr	w1, [x0, #12]
   12344:	mov	w0, #0x100                 	// #256
   12348:	movk	w0, #0x8020, lsl #16
   1234c:	and	w1, w1, w0
   12350:	mov	w0, #0x100                 	// #256
   12354:	movk	w0, #0x8000, lsl #16
   12358:	cmp	w1, w0
   1235c:	b.ne	12388 <XS_POSIX_mblen+0x174>  // b.any
   12360:	ldr	x0, [sp, #24]
   12364:	ldr	x1, [x0, #24]
   12368:	ldrsw	x0, [sp, #44]
   1236c:	add	x0, x0, #0x1
   12370:	lsl	x0, x0, #3
   12374:	add	x0, x1, x0
   12378:	ldr	x0, [x0]
   1237c:	ldr	x0, [x0]
   12380:	ldr	x0, [x0, #32]
   12384:	b	123b4 <XS_POSIX_mblen+0x1a0>
   12388:	ldr	x0, [sp, #24]
   1238c:	ldr	x1, [x0, #24]
   12390:	ldrsw	x0, [sp, #44]
   12394:	add	x0, x0, #0x1
   12398:	lsl	x0, x0, #3
   1239c:	add	x0, x1, x0
   123a0:	ldr	x0, [x0]
   123a4:	mov	w2, #0x2                   	// #2
   123a8:	mov	x1, x0
   123ac:	ldr	x0, [sp, #24]
   123b0:	bl	6650 <Perl_sv_2uv_flags@plt>
   123b4:	str	x0, [sp, #80]
   123b8:	ldr	x0, [sp, #24]
   123bc:	ldr	x0, [x0, #8]
   123c0:	ldrb	w0, [x0, #35]
   123c4:	and	w0, w0, #0x4
   123c8:	cmp	w0, #0x0
   123cc:	b.eq	123f4 <XS_POSIX_mblen+0x1e0>  // b.none
   123d0:	ldr	x0, [sp, #24]
   123d4:	ldr	x1, [x0, #16]
   123d8:	ldr	x0, [sp, #24]
   123dc:	ldr	x0, [x0, #8]
   123e0:	ldr	x0, [x0, #24]
   123e4:	lsl	x0, x0, #3
   123e8:	add	x0, x1, x0
   123ec:	ldr	x0, [x0]
   123f0:	b	123fc <XS_POSIX_mblen+0x1e8>
   123f4:	ldr	x0, [sp, #24]
   123f8:	bl	7160 <Perl_sv_newmortal@plt>
   123fc:	str	x0, [sp, #88]
   12400:	add	x0, sp, #0x70
   12404:	mov	x2, #0x8                   	// #8
   12408:	mov	w1, #0x0                   	// #0
   1240c:	bl	69a0 <memset@plt>
   12410:	add	x0, sp, #0x70
   12414:	mov	x2, x0
   12418:	ldr	x1, [sp, #80]
   1241c:	ldr	x0, [sp, #72]
   12420:	bl	6ef0 <mbrlen@plt>
   12424:	str	w0, [sp, #52]
   12428:	ldr	x0, [sp, #24]
   1242c:	ldr	x1, [x0, #24]
   12430:	ldrsw	x0, [sp, #44]
   12434:	lsl	x0, x0, #3
   12438:	sub	x0, x0, #0x8
   1243c:	add	x0, x1, x0
   12440:	str	x0, [sp, #56]
   12444:	ldrsw	x0, [sp, #52]
   12448:	str	x0, [sp, #96]
   1244c:	ldr	x0, [sp, #88]
   12450:	ldr	w1, [x0, #12]
   12454:	mov	w0, #0x8ff                 	// #2303
   12458:	movk	w0, #0x9981, lsl #16
   1245c:	and	w0, w1, w0
   12460:	cmp	w0, #0x1
   12464:	cset	w0, eq  // eq = none
   12468:	and	w0, w0, #0xff
   1246c:	mov	w1, w0
   12470:	ldr	x0, [sp, #24]
   12474:	ldrb	w0, [x0, #185]
   12478:	eor	w0, w0, #0x1
   1247c:	and	w0, w0, #0xff
   12480:	and	w0, w1, w0
   12484:	cmp	w0, #0x0
   12488:	cset	w0, ne  // ne = any
   1248c:	and	w0, w0, #0xff
   12490:	and	x0, x0, #0xff
   12494:	cmp	x0, #0x0
   12498:	b.eq	124c4 <XS_POSIX_mblen+0x2b0>  // b.none
   1249c:	ldr	x0, [sp, #88]
   124a0:	ldr	w1, [x0, #12]
   124a4:	mov	w0, #0x1100                	// #4352
   124a8:	orr	w1, w1, w0
   124ac:	ldr	x0, [sp, #88]
   124b0:	str	w1, [x0, #12]
   124b4:	ldr	x0, [sp, #88]
   124b8:	ldr	x1, [sp, #96]
   124bc:	str	x1, [x0, #16]
   124c0:	b	124d4 <XS_POSIX_mblen+0x2c0>
   124c4:	ldr	x2, [sp, #96]
   124c8:	ldr	x1, [sp, #88]
   124cc:	ldr	x0, [sp, #24]
   124d0:	bl	6880 <Perl_sv_setiv_mg@plt>
   124d4:	ldr	x0, [sp, #56]
   124d8:	add	x0, x0, #0x8
   124dc:	str	x0, [sp, #56]
   124e0:	ldr	x0, [sp, #56]
   124e4:	ldr	x1, [sp, #88]
   124e8:	str	x1, [x0]
   124ec:	mov	x0, #0x1                   	// #1
   124f0:	str	x0, [sp, #104]
   124f4:	ldr	x0, [sp, #24]
   124f8:	ldr	x1, [x0, #24]
   124fc:	ldrsw	x2, [sp, #44]
   12500:	ldr	x0, [sp, #104]
   12504:	add	x0, x2, x0
   12508:	lsl	x0, x0, #3
   1250c:	sub	x0, x0, #0x8
   12510:	add	x1, x1, x0
   12514:	ldr	x0, [sp, #24]
   12518:	str	x1, [x0]
   1251c:	nop
   12520:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   12524:	ldr	x0, [x0, #3992]
   12528:	ldr	x1, [sp, #120]
   1252c:	ldr	x0, [x0]
   12530:	eor	x0, x1, x0
   12534:	cmp	x0, #0x0
   12538:	b.eq	12540 <XS_POSIX_mblen+0x32c>  // b.none
   1253c:	bl	6a60 <__stack_chk_fail@plt>
   12540:	ldp	x29, x30, [sp], #128
   12544:	ret

0000000000012548 <XS_POSIX_mbstowcs>:
   12548:	stp	x29, x30, [sp, #-112]!
   1254c:	mov	x29, sp
   12550:	str	x0, [sp, #24]
   12554:	str	x1, [sp, #16]
   12558:	ldr	x0, [sp, #24]
   1255c:	ldr	x0, [x0]
   12560:	str	x0, [sp, #40]
   12564:	ldr	x0, [sp, #24]
   12568:	bl	739c <S_POPMARK>
   1256c:	str	w0, [sp, #32]
   12570:	ldr	x0, [sp, #24]
   12574:	ldr	x1, [x0, #24]
   12578:	ldr	w0, [sp, #32]
   1257c:	add	w2, w0, #0x1
   12580:	str	w2, [sp, #32]
   12584:	sxtw	x0, w0
   12588:	lsl	x0, x0, #3
   1258c:	add	x0, x1, x0
   12590:	str	x0, [sp, #48]
   12594:	ldr	x1, [sp, #40]
   12598:	ldr	x0, [sp, #48]
   1259c:	sub	x0, x1, x0
   125a0:	asr	x0, x0, #3
   125a4:	str	w0, [sp, #36]
   125a8:	ldr	w0, [sp, #36]
   125ac:	cmp	w0, #0x3
   125b0:	b.eq	125c4 <XS_POSIX_mbstowcs+0x7c>  // b.none
   125b4:	adrp	x0, 1b000 <_fini+0x1fc>
   125b8:	add	x1, x0, #0x750
   125bc:	ldr	x0, [sp, #16]
   125c0:	bl	6b20 <Perl_croak_xs_usage@plt>
   125c4:	ldr	x0, [sp, #24]
   125c8:	ldr	x1, [x0, #24]
   125cc:	ldrsw	x0, [sp, #32]
   125d0:	lsl	x0, x0, #3
   125d4:	add	x0, x1, x0
   125d8:	ldr	x0, [x0]
   125dc:	ldr	w1, [x0, #12]
   125e0:	mov	w0, #0x400                 	// #1024
   125e4:	movk	w0, #0x20, lsl #16
   125e8:	and	w0, w1, w0
   125ec:	cmp	w0, #0x400
   125f0:	b.ne	12614 <XS_POSIX_mbstowcs+0xcc>  // b.any
   125f4:	ldr	x0, [sp, #24]
   125f8:	ldr	x1, [x0, #24]
   125fc:	ldrsw	x0, [sp, #32]
   12600:	lsl	x0, x0, #3
   12604:	add	x0, x1, x0
   12608:	ldr	x0, [x0]
   1260c:	ldr	x0, [x0, #16]
   12610:	b	12640 <XS_POSIX_mbstowcs+0xf8>
   12614:	ldr	x0, [sp, #24]
   12618:	ldr	x1, [x0, #24]
   1261c:	ldrsw	x0, [sp, #32]
   12620:	lsl	x0, x0, #3
   12624:	add	x0, x1, x0
   12628:	ldr	x0, [x0]
   1262c:	mov	w3, #0x2                   	// #2
   12630:	mov	x2, #0x0                   	// #0
   12634:	mov	x1, x0
   12638:	ldr	x0, [sp, #24]
   1263c:	bl	69b0 <Perl_sv_2pv_flags@plt>
   12640:	str	x0, [sp, #56]
   12644:	ldr	x0, [sp, #24]
   12648:	ldr	x1, [x0, #24]
   1264c:	ldrsw	x0, [sp, #32]
   12650:	add	x0, x0, #0x1
   12654:	lsl	x0, x0, #3
   12658:	add	x0, x1, x0
   1265c:	ldr	x0, [x0]
   12660:	ldr	w1, [x0, #12]
   12664:	mov	w0, #0x400                 	// #1024
   12668:	movk	w0, #0x20, lsl #16
   1266c:	and	w0, w1, w0
   12670:	cmp	w0, #0x400
   12674:	b.ne	1269c <XS_POSIX_mbstowcs+0x154>  // b.any
   12678:	ldr	x0, [sp, #24]
   1267c:	ldr	x1, [x0, #24]
   12680:	ldrsw	x0, [sp, #32]
   12684:	add	x0, x0, #0x1
   12688:	lsl	x0, x0, #3
   1268c:	add	x0, x1, x0
   12690:	ldr	x0, [x0]
   12694:	ldr	x0, [x0, #16]
   12698:	b	126cc <XS_POSIX_mbstowcs+0x184>
   1269c:	ldr	x0, [sp, #24]
   126a0:	ldr	x1, [x0, #24]
   126a4:	ldrsw	x0, [sp, #32]
   126a8:	add	x0, x0, #0x1
   126ac:	lsl	x0, x0, #3
   126b0:	add	x0, x1, x0
   126b4:	ldr	x0, [x0]
   126b8:	mov	w3, #0x2                   	// #2
   126bc:	mov	x2, #0x0                   	// #0
   126c0:	mov	x1, x0
   126c4:	ldr	x0, [sp, #24]
   126c8:	bl	69b0 <Perl_sv_2pv_flags@plt>
   126cc:	str	x0, [sp, #64]
   126d0:	ldr	x0, [sp, #24]
   126d4:	ldr	x1, [x0, #24]
   126d8:	ldrsw	x0, [sp, #32]
   126dc:	add	x0, x0, #0x2
   126e0:	lsl	x0, x0, #3
   126e4:	add	x0, x1, x0
   126e8:	ldr	x0, [x0]
   126ec:	ldr	w1, [x0, #12]
   126f0:	mov	w0, #0x100                 	// #256
   126f4:	movk	w0, #0x8020, lsl #16
   126f8:	and	w1, w1, w0
   126fc:	mov	w0, #0x100                 	// #256
   12700:	movk	w0, #0x8000, lsl #16
   12704:	cmp	w1, w0
   12708:	b.ne	12734 <XS_POSIX_mbstowcs+0x1ec>  // b.any
   1270c:	ldr	x0, [sp, #24]
   12710:	ldr	x1, [x0, #24]
   12714:	ldrsw	x0, [sp, #32]
   12718:	add	x0, x0, #0x2
   1271c:	lsl	x0, x0, #3
   12720:	add	x0, x1, x0
   12724:	ldr	x0, [x0]
   12728:	ldr	x0, [x0]
   1272c:	ldr	x0, [x0, #32]
   12730:	b	12760 <XS_POSIX_mbstowcs+0x218>
   12734:	ldr	x0, [sp, #24]
   12738:	ldr	x1, [x0, #24]
   1273c:	ldrsw	x0, [sp, #32]
   12740:	add	x0, x0, #0x2
   12744:	lsl	x0, x0, #3
   12748:	add	x0, x1, x0
   1274c:	ldr	x0, [x0]
   12750:	mov	w2, #0x2                   	// #2
   12754:	mov	x1, x0
   12758:	ldr	x0, [sp, #24]
   1275c:	bl	6650 <Perl_sv_2uv_flags@plt>
   12760:	str	x0, [sp, #72]
   12764:	ldr	x0, [sp, #24]
   12768:	ldr	x0, [x0, #8]
   1276c:	ldrb	w0, [x0, #35]
   12770:	and	w0, w0, #0x4
   12774:	cmp	w0, #0x0
   12778:	b.eq	127a0 <XS_POSIX_mbstowcs+0x258>  // b.none
   1277c:	ldr	x0, [sp, #24]
   12780:	ldr	x1, [x0, #16]
   12784:	ldr	x0, [sp, #24]
   12788:	ldr	x0, [x0, #8]
   1278c:	ldr	x0, [x0, #24]
   12790:	lsl	x0, x0, #3
   12794:	add	x0, x1, x0
   12798:	ldr	x0, [x0]
   1279c:	b	127a8 <XS_POSIX_mbstowcs+0x260>
   127a0:	ldr	x0, [sp, #24]
   127a4:	bl	7160 <Perl_sv_newmortal@plt>
   127a8:	str	x0, [sp, #80]
   127ac:	ldr	x2, [sp, #72]
   127b0:	ldr	x1, [sp, #64]
   127b4:	ldr	x0, [sp, #56]
   127b8:	bl	6610 <mbstowcs@plt>
   127bc:	str	x0, [sp, #88]
   127c0:	ldr	x0, [sp, #24]
   127c4:	ldr	x1, [x0, #24]
   127c8:	ldrsw	x0, [sp, #32]
   127cc:	lsl	x0, x0, #3
   127d0:	sub	x0, x0, #0x8
   127d4:	add	x0, x1, x0
   127d8:	str	x0, [sp, #40]
   127dc:	ldr	x0, [sp, #88]
   127e0:	str	x0, [sp, #96]
   127e4:	ldr	x0, [sp, #80]
   127e8:	ldr	w1, [x0, #12]
   127ec:	mov	w0, #0x8ff                 	// #2303
   127f0:	movk	w0, #0x9981, lsl #16
   127f4:	and	w0, w1, w0
   127f8:	cmp	w0, #0x1
   127fc:	cset	w0, eq  // eq = none
   12800:	and	w0, w0, #0xff
   12804:	mov	w1, w0
   12808:	ldr	x0, [sp, #24]
   1280c:	ldrb	w0, [x0, #185]
   12810:	eor	w0, w0, #0x1
   12814:	and	w0, w0, #0xff
   12818:	and	w0, w1, w0
   1281c:	ldr	x1, [sp, #96]
   12820:	mvn	x1, x1
   12824:	lsr	x1, x1, #63
   12828:	and	w1, w1, #0xff
   1282c:	and	w0, w0, w1
   12830:	cmp	w0, #0x0
   12834:	cset	w0, ne  // ne = any
   12838:	and	w0, w0, #0xff
   1283c:	and	x0, x0, #0xff
   12840:	cmp	x0, #0x0
   12844:	b.eq	12870 <XS_POSIX_mbstowcs+0x328>  // b.none
   12848:	ldr	x0, [sp, #80]
   1284c:	ldr	w1, [x0, #12]
   12850:	mov	w0, #0x1100                	// #4352
   12854:	orr	w1, w1, w0
   12858:	ldr	x0, [sp, #80]
   1285c:	str	w1, [x0, #12]
   12860:	ldr	x1, [sp, #96]
   12864:	ldr	x0, [sp, #80]
   12868:	str	x1, [x0, #16]
   1286c:	b	12880 <XS_POSIX_mbstowcs+0x338>
   12870:	ldr	x2, [sp, #96]
   12874:	ldr	x1, [sp, #80]
   12878:	ldr	x0, [sp, #24]
   1287c:	bl	7010 <Perl_sv_setuv_mg@plt>
   12880:	ldr	x0, [sp, #40]
   12884:	add	x0, x0, #0x8
   12888:	str	x0, [sp, #40]
   1288c:	ldr	x0, [sp, #40]
   12890:	ldr	x1, [sp, #80]
   12894:	str	x1, [x0]
   12898:	mov	x0, #0x1                   	// #1
   1289c:	str	x0, [sp, #104]
   128a0:	ldr	x0, [sp, #24]
   128a4:	ldr	x1, [x0, #24]
   128a8:	ldrsw	x2, [sp, #32]
   128ac:	ldr	x0, [sp, #104]
   128b0:	add	x0, x2, x0
   128b4:	lsl	x0, x0, #3
   128b8:	sub	x0, x0, #0x8
   128bc:	add	x1, x1, x0
   128c0:	ldr	x0, [sp, #24]
   128c4:	str	x1, [x0]
   128c8:	nop
   128cc:	ldp	x29, x30, [sp], #112
   128d0:	ret

00000000000128d4 <XS_POSIX_mbtowc>:
   128d4:	stp	x29, x30, [sp, #-144]!
   128d8:	mov	x29, sp
   128dc:	str	x0, [sp, #24]
   128e0:	str	x1, [sp, #16]
   128e4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   128e8:	ldr	x0, [x0, #3992]
   128ec:	ldr	x1, [x0]
   128f0:	str	x1, [sp, #136]
   128f4:	mov	x1, #0x0                   	// #0
   128f8:	ldr	x0, [sp, #24]
   128fc:	ldr	x0, [x0]
   12900:	str	x0, [sp, #56]
   12904:	ldr	x0, [sp, #24]
   12908:	bl	739c <S_POPMARK>
   1290c:	str	w0, [sp, #44]
   12910:	ldr	x0, [sp, #24]
   12914:	ldr	x1, [x0, #24]
   12918:	ldr	w0, [sp, #44]
   1291c:	add	w2, w0, #0x1
   12920:	str	w2, [sp, #44]
   12924:	sxtw	x0, w0
   12928:	lsl	x0, x0, #3
   1292c:	add	x0, x1, x0
   12930:	str	x0, [sp, #64]
   12934:	ldr	x1, [sp, #56]
   12938:	ldr	x0, [sp, #64]
   1293c:	sub	x0, x1, x0
   12940:	asr	x0, x0, #3
   12944:	str	w0, [sp, #48]
   12948:	ldr	w0, [sp, #48]
   1294c:	cmp	w0, #0x3
   12950:	b.eq	12964 <XS_POSIX_mbtowc+0x90>  // b.none
   12954:	adrp	x0, 1b000 <_fini+0x1fc>
   12958:	add	x1, x0, #0x760
   1295c:	ldr	x0, [sp, #16]
   12960:	bl	6b20 <Perl_croak_xs_usage@plt>
   12964:	ldr	x0, [sp, #24]
   12968:	ldr	x1, [x0, #24]
   1296c:	ldrsw	x0, [sp, #44]
   12970:	lsl	x0, x0, #3
   12974:	add	x0, x1, x0
   12978:	ldr	x0, [x0]
   1297c:	ldr	w1, [x0, #12]
   12980:	mov	w0, #0x400                 	// #1024
   12984:	movk	w0, #0x20, lsl #16
   12988:	and	w0, w1, w0
   1298c:	cmp	w0, #0x400
   12990:	b.ne	129b4 <XS_POSIX_mbtowc+0xe0>  // b.any
   12994:	ldr	x0, [sp, #24]
   12998:	ldr	x1, [x0, #24]
   1299c:	ldrsw	x0, [sp, #44]
   129a0:	lsl	x0, x0, #3
   129a4:	add	x0, x1, x0
   129a8:	ldr	x0, [x0]
   129ac:	ldr	x0, [x0, #16]
   129b0:	b	129e0 <XS_POSIX_mbtowc+0x10c>
   129b4:	ldr	x0, [sp, #24]
   129b8:	ldr	x1, [x0, #24]
   129bc:	ldrsw	x0, [sp, #44]
   129c0:	lsl	x0, x0, #3
   129c4:	add	x0, x1, x0
   129c8:	ldr	x0, [x0]
   129cc:	mov	w3, #0x2                   	// #2
   129d0:	mov	x2, #0x0                   	// #0
   129d4:	mov	x1, x0
   129d8:	ldr	x0, [sp, #24]
   129dc:	bl	69b0 <Perl_sv_2pv_flags@plt>
   129e0:	str	x0, [sp, #72]
   129e4:	ldr	x0, [sp, #24]
   129e8:	ldr	x1, [x0, #24]
   129ec:	ldrsw	x0, [sp, #44]
   129f0:	add	x0, x0, #0x1
   129f4:	lsl	x0, x0, #3
   129f8:	add	x0, x1, x0
   129fc:	ldr	x0, [x0]
   12a00:	ldr	w1, [x0, #12]
   12a04:	mov	w0, #0x400                 	// #1024
   12a08:	movk	w0, #0x20, lsl #16
   12a0c:	and	w0, w1, w0
   12a10:	cmp	w0, #0x400
   12a14:	b.ne	12a3c <XS_POSIX_mbtowc+0x168>  // b.any
   12a18:	ldr	x0, [sp, #24]
   12a1c:	ldr	x1, [x0, #24]
   12a20:	ldrsw	x0, [sp, #44]
   12a24:	add	x0, x0, #0x1
   12a28:	lsl	x0, x0, #3
   12a2c:	add	x0, x1, x0
   12a30:	ldr	x0, [x0]
   12a34:	ldr	x0, [x0, #16]
   12a38:	b	12a6c <XS_POSIX_mbtowc+0x198>
   12a3c:	ldr	x0, [sp, #24]
   12a40:	ldr	x1, [x0, #24]
   12a44:	ldrsw	x0, [sp, #44]
   12a48:	add	x0, x0, #0x1
   12a4c:	lsl	x0, x0, #3
   12a50:	add	x0, x1, x0
   12a54:	ldr	x0, [x0]
   12a58:	mov	w3, #0x2                   	// #2
   12a5c:	mov	x2, #0x0                   	// #0
   12a60:	mov	x1, x0
   12a64:	ldr	x0, [sp, #24]
   12a68:	bl	69b0 <Perl_sv_2pv_flags@plt>
   12a6c:	str	x0, [sp, #80]
   12a70:	ldr	x0, [sp, #24]
   12a74:	ldr	x1, [x0, #24]
   12a78:	ldrsw	x0, [sp, #44]
   12a7c:	add	x0, x0, #0x2
   12a80:	lsl	x0, x0, #3
   12a84:	add	x0, x1, x0
   12a88:	ldr	x0, [x0]
   12a8c:	ldr	w1, [x0, #12]
   12a90:	mov	w0, #0x100                 	// #256
   12a94:	movk	w0, #0x8020, lsl #16
   12a98:	and	w1, w1, w0
   12a9c:	mov	w0, #0x100                 	// #256
   12aa0:	movk	w0, #0x8000, lsl #16
   12aa4:	cmp	w1, w0
   12aa8:	b.ne	12ad4 <XS_POSIX_mbtowc+0x200>  // b.any
   12aac:	ldr	x0, [sp, #24]
   12ab0:	ldr	x1, [x0, #24]
   12ab4:	ldrsw	x0, [sp, #44]
   12ab8:	add	x0, x0, #0x2
   12abc:	lsl	x0, x0, #3
   12ac0:	add	x0, x1, x0
   12ac4:	ldr	x0, [x0]
   12ac8:	ldr	x0, [x0]
   12acc:	ldr	x0, [x0, #32]
   12ad0:	b	12b00 <XS_POSIX_mbtowc+0x22c>
   12ad4:	ldr	x0, [sp, #24]
   12ad8:	ldr	x1, [x0, #24]
   12adc:	ldrsw	x0, [sp, #44]
   12ae0:	add	x0, x0, #0x2
   12ae4:	lsl	x0, x0, #3
   12ae8:	add	x0, x1, x0
   12aec:	ldr	x0, [x0]
   12af0:	mov	w2, #0x2                   	// #2
   12af4:	mov	x1, x0
   12af8:	ldr	x0, [sp, #24]
   12afc:	bl	6650 <Perl_sv_2uv_flags@plt>
   12b00:	str	x0, [sp, #88]
   12b04:	ldr	x0, [sp, #24]
   12b08:	ldr	x0, [x0, #8]
   12b0c:	ldrb	w0, [x0, #35]
   12b10:	and	w0, w0, #0x4
   12b14:	cmp	w0, #0x0
   12b18:	b.eq	12b40 <XS_POSIX_mbtowc+0x26c>  // b.none
   12b1c:	ldr	x0, [sp, #24]
   12b20:	ldr	x1, [x0, #16]
   12b24:	ldr	x0, [sp, #24]
   12b28:	ldr	x0, [x0, #8]
   12b2c:	ldr	x0, [x0, #24]
   12b30:	lsl	x0, x0, #3
   12b34:	add	x0, x1, x0
   12b38:	ldr	x0, [x0]
   12b3c:	b	12b48 <XS_POSIX_mbtowc+0x274>
   12b40:	ldr	x0, [sp, #24]
   12b44:	bl	7160 <Perl_sv_newmortal@plt>
   12b48:	str	x0, [sp, #96]
   12b4c:	add	x0, sp, #0x80
   12b50:	mov	x2, #0x8                   	// #8
   12b54:	mov	w1, #0x0                   	// #0
   12b58:	bl	69a0 <memset@plt>
   12b5c:	add	x0, sp, #0x80
   12b60:	mov	x3, x0
   12b64:	mov	x2, #0x0                   	// #0
   12b68:	mov	x1, #0x0                   	// #0
   12b6c:	ldr	x0, [sp, #72]
   12b70:	bl	6540 <mbrtowc@plt>
   12b74:	str	x0, [sp, #104]
   12b78:	bl	70d0 <__errno_location@plt>
   12b7c:	str	wzr, [x0]
   12b80:	add	x0, sp, #0x80
   12b84:	mov	x3, x0
   12b88:	ldr	x2, [sp, #88]
   12b8c:	ldr	x1, [sp, #80]
   12b90:	ldr	x0, [sp, #72]
   12b94:	bl	6540 <mbrtowc@plt>
   12b98:	str	w0, [sp, #52]
   12b9c:	ldr	x0, [sp, #24]
   12ba0:	ldr	x1, [x0, #24]
   12ba4:	ldrsw	x0, [sp, #44]
   12ba8:	lsl	x0, x0, #3
   12bac:	sub	x0, x0, #0x8
   12bb0:	add	x0, x1, x0
   12bb4:	str	x0, [sp, #56]
   12bb8:	ldrsw	x0, [sp, #52]
   12bbc:	str	x0, [sp, #112]
   12bc0:	ldr	x0, [sp, #96]
   12bc4:	ldr	w1, [x0, #12]
   12bc8:	mov	w0, #0x8ff                 	// #2303
   12bcc:	movk	w0, #0x9981, lsl #16
   12bd0:	and	w0, w1, w0
   12bd4:	cmp	w0, #0x1
   12bd8:	cset	w0, eq  // eq = none
   12bdc:	and	w0, w0, #0xff
   12be0:	mov	w1, w0
   12be4:	ldr	x0, [sp, #24]
   12be8:	ldrb	w0, [x0, #185]
   12bec:	eor	w0, w0, #0x1
   12bf0:	and	w0, w0, #0xff
   12bf4:	and	w0, w1, w0
   12bf8:	cmp	w0, #0x0
   12bfc:	cset	w0, ne  // ne = any
   12c00:	and	w0, w0, #0xff
   12c04:	and	x0, x0, #0xff
   12c08:	cmp	x0, #0x0
   12c0c:	b.eq	12c38 <XS_POSIX_mbtowc+0x364>  // b.none
   12c10:	ldr	x0, [sp, #96]
   12c14:	ldr	w1, [x0, #12]
   12c18:	mov	w0, #0x1100                	// #4352
   12c1c:	orr	w1, w1, w0
   12c20:	ldr	x0, [sp, #96]
   12c24:	str	w1, [x0, #12]
   12c28:	ldr	x0, [sp, #96]
   12c2c:	ldr	x1, [sp, #112]
   12c30:	str	x1, [x0, #16]
   12c34:	b	12c48 <XS_POSIX_mbtowc+0x374>
   12c38:	ldr	x2, [sp, #112]
   12c3c:	ldr	x1, [sp, #96]
   12c40:	ldr	x0, [sp, #24]
   12c44:	bl	6880 <Perl_sv_setiv_mg@plt>
   12c48:	ldr	x0, [sp, #56]
   12c4c:	add	x0, x0, #0x8
   12c50:	str	x0, [sp, #56]
   12c54:	ldr	x0, [sp, #56]
   12c58:	ldr	x1, [sp, #96]
   12c5c:	str	x1, [x0]
   12c60:	mov	x0, #0x1                   	// #1
   12c64:	str	x0, [sp, #120]
   12c68:	ldr	x0, [sp, #24]
   12c6c:	ldr	x1, [x0, #24]
   12c70:	ldrsw	x2, [sp, #44]
   12c74:	ldr	x0, [sp, #120]
   12c78:	add	x0, x2, x0
   12c7c:	lsl	x0, x0, #3
   12c80:	sub	x0, x0, #0x8
   12c84:	add	x1, x1, x0
   12c88:	ldr	x0, [sp, #24]
   12c8c:	str	x1, [x0]
   12c90:	nop
   12c94:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   12c98:	ldr	x0, [x0, #3992]
   12c9c:	ldr	x1, [sp, #136]
   12ca0:	ldr	x0, [x0]
   12ca4:	eor	x0, x1, x0
   12ca8:	cmp	x0, #0x0
   12cac:	b.eq	12cb4 <XS_POSIX_mbtowc+0x3e0>  // b.none
   12cb0:	bl	6a60 <__stack_chk_fail@plt>
   12cb4:	ldp	x29, x30, [sp], #144
   12cb8:	ret

0000000000012cbc <XS_POSIX_wcstombs>:
   12cbc:	stp	x29, x30, [sp, #-112]!
   12cc0:	mov	x29, sp
   12cc4:	str	x0, [sp, #24]
   12cc8:	str	x1, [sp, #16]
   12ccc:	ldr	x0, [sp, #24]
   12cd0:	ldr	x0, [x0]
   12cd4:	str	x0, [sp, #48]
   12cd8:	ldr	x0, [sp, #24]
   12cdc:	bl	739c <S_POPMARK>
   12ce0:	str	w0, [sp, #36]
   12ce4:	ldr	x0, [sp, #24]
   12ce8:	ldr	x1, [x0, #24]
   12cec:	ldr	w0, [sp, #36]
   12cf0:	add	w2, w0, #0x1
   12cf4:	str	w2, [sp, #36]
   12cf8:	sxtw	x0, w0
   12cfc:	lsl	x0, x0, #3
   12d00:	add	x0, x1, x0
   12d04:	str	x0, [sp, #56]
   12d08:	ldr	x1, [sp, #48]
   12d0c:	ldr	x0, [sp, #56]
   12d10:	sub	x0, x1, x0
   12d14:	asr	x0, x0, #3
   12d18:	str	w0, [sp, #40]
   12d1c:	ldr	w0, [sp, #40]
   12d20:	cmp	w0, #0x3
   12d24:	b.eq	12d38 <XS_POSIX_wcstombs+0x7c>  // b.none
   12d28:	adrp	x0, 1b000 <_fini+0x1fc>
   12d2c:	add	x1, x0, #0x750
   12d30:	ldr	x0, [sp, #16]
   12d34:	bl	6b20 <Perl_croak_xs_usage@plt>
   12d38:	ldr	x0, [sp, #24]
   12d3c:	ldr	x1, [x0, #24]
   12d40:	ldrsw	x0, [sp, #36]
   12d44:	lsl	x0, x0, #3
   12d48:	add	x0, x1, x0
   12d4c:	ldr	x0, [x0]
   12d50:	ldr	w1, [x0, #12]
   12d54:	mov	w0, #0x400                 	// #1024
   12d58:	movk	w0, #0x20, lsl #16
   12d5c:	and	w0, w1, w0
   12d60:	cmp	w0, #0x400
   12d64:	b.ne	12d88 <XS_POSIX_wcstombs+0xcc>  // b.any
   12d68:	ldr	x0, [sp, #24]
   12d6c:	ldr	x1, [x0, #24]
   12d70:	ldrsw	x0, [sp, #36]
   12d74:	lsl	x0, x0, #3
   12d78:	add	x0, x1, x0
   12d7c:	ldr	x0, [x0]
   12d80:	ldr	x0, [x0, #16]
   12d84:	b	12db4 <XS_POSIX_wcstombs+0xf8>
   12d88:	ldr	x0, [sp, #24]
   12d8c:	ldr	x1, [x0, #24]
   12d90:	ldrsw	x0, [sp, #36]
   12d94:	lsl	x0, x0, #3
   12d98:	add	x0, x1, x0
   12d9c:	ldr	x0, [x0]
   12da0:	mov	w3, #0x2                   	// #2
   12da4:	mov	x2, #0x0                   	// #0
   12da8:	mov	x1, x0
   12dac:	ldr	x0, [sp, #24]
   12db0:	bl	69b0 <Perl_sv_2pv_flags@plt>
   12db4:	str	x0, [sp, #64]
   12db8:	ldr	x0, [sp, #24]
   12dbc:	ldr	x1, [x0, #24]
   12dc0:	ldrsw	x0, [sp, #36]
   12dc4:	add	x0, x0, #0x1
   12dc8:	lsl	x0, x0, #3
   12dcc:	add	x0, x1, x0
   12dd0:	ldr	x0, [x0]
   12dd4:	ldr	w1, [x0, #12]
   12dd8:	mov	w0, #0x400                 	// #1024
   12ddc:	movk	w0, #0x20, lsl #16
   12de0:	and	w0, w1, w0
   12de4:	cmp	w0, #0x400
   12de8:	b.ne	12e10 <XS_POSIX_wcstombs+0x154>  // b.any
   12dec:	ldr	x0, [sp, #24]
   12df0:	ldr	x1, [x0, #24]
   12df4:	ldrsw	x0, [sp, #36]
   12df8:	add	x0, x0, #0x1
   12dfc:	lsl	x0, x0, #3
   12e00:	add	x0, x1, x0
   12e04:	ldr	x0, [x0]
   12e08:	ldr	x0, [x0, #16]
   12e0c:	b	12e40 <XS_POSIX_wcstombs+0x184>
   12e10:	ldr	x0, [sp, #24]
   12e14:	ldr	x1, [x0, #24]
   12e18:	ldrsw	x0, [sp, #36]
   12e1c:	add	x0, x0, #0x1
   12e20:	lsl	x0, x0, #3
   12e24:	add	x0, x1, x0
   12e28:	ldr	x0, [x0]
   12e2c:	mov	w3, #0x2                   	// #2
   12e30:	mov	x2, #0x0                   	// #0
   12e34:	mov	x1, x0
   12e38:	ldr	x0, [sp, #24]
   12e3c:	bl	69b0 <Perl_sv_2pv_flags@plt>
   12e40:	str	x0, [sp, #72]
   12e44:	ldr	x0, [sp, #24]
   12e48:	ldr	x1, [x0, #24]
   12e4c:	ldrsw	x0, [sp, #36]
   12e50:	add	x0, x0, #0x2
   12e54:	lsl	x0, x0, #3
   12e58:	add	x0, x1, x0
   12e5c:	ldr	x0, [x0]
   12e60:	ldr	w1, [x0, #12]
   12e64:	mov	w0, #0x100                 	// #256
   12e68:	movk	w0, #0x8020, lsl #16
   12e6c:	and	w1, w1, w0
   12e70:	mov	w0, #0x100                 	// #256
   12e74:	movk	w0, #0x8000, lsl #16
   12e78:	cmp	w1, w0
   12e7c:	b.ne	12ea8 <XS_POSIX_wcstombs+0x1ec>  // b.any
   12e80:	ldr	x0, [sp, #24]
   12e84:	ldr	x1, [x0, #24]
   12e88:	ldrsw	x0, [sp, #36]
   12e8c:	add	x0, x0, #0x2
   12e90:	lsl	x0, x0, #3
   12e94:	add	x0, x1, x0
   12e98:	ldr	x0, [x0]
   12e9c:	ldr	x0, [x0]
   12ea0:	ldr	x0, [x0, #32]
   12ea4:	b	12ed4 <XS_POSIX_wcstombs+0x218>
   12ea8:	ldr	x0, [sp, #24]
   12eac:	ldr	x1, [x0, #24]
   12eb0:	ldrsw	x0, [sp, #36]
   12eb4:	add	x0, x0, #0x2
   12eb8:	lsl	x0, x0, #3
   12ebc:	add	x0, x1, x0
   12ec0:	ldr	x0, [x0]
   12ec4:	mov	w2, #0x2                   	// #2
   12ec8:	mov	x1, x0
   12ecc:	ldr	x0, [sp, #24]
   12ed0:	bl	6650 <Perl_sv_2uv_flags@plt>
   12ed4:	str	x0, [sp, #80]
   12ed8:	ldr	x0, [sp, #24]
   12edc:	ldr	x0, [x0, #8]
   12ee0:	ldrb	w0, [x0, #35]
   12ee4:	and	w0, w0, #0x4
   12ee8:	cmp	w0, #0x0
   12eec:	b.eq	12f14 <XS_POSIX_wcstombs+0x258>  // b.none
   12ef0:	ldr	x0, [sp, #24]
   12ef4:	ldr	x1, [x0, #16]
   12ef8:	ldr	x0, [sp, #24]
   12efc:	ldr	x0, [x0, #8]
   12f00:	ldr	x0, [x0, #24]
   12f04:	lsl	x0, x0, #3
   12f08:	add	x0, x1, x0
   12f0c:	ldr	x0, [x0]
   12f10:	b	12f1c <XS_POSIX_wcstombs+0x260>
   12f14:	ldr	x0, [sp, #24]
   12f18:	bl	7160 <Perl_sv_newmortal@plt>
   12f1c:	str	x0, [sp, #88]
   12f20:	ldr	x2, [sp, #80]
   12f24:	ldr	x1, [sp, #72]
   12f28:	ldr	x0, [sp, #64]
   12f2c:	bl	6ec0 <wcstombs@plt>
   12f30:	str	w0, [sp, #44]
   12f34:	ldr	x0, [sp, #24]
   12f38:	ldr	x1, [x0, #24]
   12f3c:	ldrsw	x0, [sp, #36]
   12f40:	lsl	x0, x0, #3
   12f44:	sub	x0, x0, #0x8
   12f48:	add	x0, x1, x0
   12f4c:	str	x0, [sp, #48]
   12f50:	ldrsw	x0, [sp, #44]
   12f54:	str	x0, [sp, #96]
   12f58:	ldr	x0, [sp, #88]
   12f5c:	ldr	w1, [x0, #12]
   12f60:	mov	w0, #0x8ff                 	// #2303
   12f64:	movk	w0, #0x9981, lsl #16
   12f68:	and	w0, w1, w0
   12f6c:	cmp	w0, #0x1
   12f70:	cset	w0, eq  // eq = none
   12f74:	and	w0, w0, #0xff
   12f78:	mov	w1, w0
   12f7c:	ldr	x0, [sp, #24]
   12f80:	ldrb	w0, [x0, #185]
   12f84:	eor	w0, w0, #0x1
   12f88:	and	w0, w0, #0xff
   12f8c:	and	w0, w1, w0
   12f90:	cmp	w0, #0x0
   12f94:	cset	w0, ne  // ne = any
   12f98:	and	w0, w0, #0xff
   12f9c:	and	x0, x0, #0xff
   12fa0:	cmp	x0, #0x0
   12fa4:	b.eq	12fd0 <XS_POSIX_wcstombs+0x314>  // b.none
   12fa8:	ldr	x0, [sp, #88]
   12fac:	ldr	w1, [x0, #12]
   12fb0:	mov	w0, #0x1100                	// #4352
   12fb4:	orr	w1, w1, w0
   12fb8:	ldr	x0, [sp, #88]
   12fbc:	str	w1, [x0, #12]
   12fc0:	ldr	x0, [sp, #88]
   12fc4:	ldr	x1, [sp, #96]
   12fc8:	str	x1, [x0, #16]
   12fcc:	b	12fe0 <XS_POSIX_wcstombs+0x324>
   12fd0:	ldr	x2, [sp, #96]
   12fd4:	ldr	x1, [sp, #88]
   12fd8:	ldr	x0, [sp, #24]
   12fdc:	bl	6880 <Perl_sv_setiv_mg@plt>
   12fe0:	ldr	x0, [sp, #48]
   12fe4:	add	x0, x0, #0x8
   12fe8:	str	x0, [sp, #48]
   12fec:	ldr	x0, [sp, #48]
   12ff0:	ldr	x1, [sp, #88]
   12ff4:	str	x1, [x0]
   12ff8:	mov	x0, #0x1                   	// #1
   12ffc:	str	x0, [sp, #104]
   13000:	ldr	x0, [sp, #24]
   13004:	ldr	x1, [x0, #24]
   13008:	ldrsw	x2, [sp, #36]
   1300c:	ldr	x0, [sp, #104]
   13010:	add	x0, x2, x0
   13014:	lsl	x0, x0, #3
   13018:	sub	x0, x0, #0x8
   1301c:	add	x1, x1, x0
   13020:	ldr	x0, [sp, #24]
   13024:	str	x1, [x0]
   13028:	nop
   1302c:	ldp	x29, x30, [sp], #112
   13030:	ret

0000000000013034 <XS_POSIX_wctomb>:
   13034:	stp	x29, x30, [sp, #-96]!
   13038:	mov	x29, sp
   1303c:	str	x0, [sp, #24]
   13040:	str	x1, [sp, #16]
   13044:	ldr	x0, [sp, #24]
   13048:	ldr	x0, [x0]
   1304c:	str	x0, [sp, #48]
   13050:	ldr	x0, [sp, #24]
   13054:	bl	739c <S_POPMARK>
   13058:	str	w0, [sp, #32]
   1305c:	ldr	x0, [sp, #24]
   13060:	ldr	x1, [x0, #24]
   13064:	ldr	w0, [sp, #32]
   13068:	add	w2, w0, #0x1
   1306c:	str	w2, [sp, #32]
   13070:	sxtw	x0, w0
   13074:	lsl	x0, x0, #3
   13078:	add	x0, x1, x0
   1307c:	str	x0, [sp, #56]
   13080:	ldr	x1, [sp, #48]
   13084:	ldr	x0, [sp, #56]
   13088:	sub	x0, x1, x0
   1308c:	asr	x0, x0, #3
   13090:	str	w0, [sp, #36]
   13094:	ldr	w0, [sp, #36]
   13098:	cmp	w0, #0x2
   1309c:	b.eq	130b0 <XS_POSIX_wctomb+0x7c>  // b.none
   130a0:	adrp	x0, 1b000 <_fini+0x1fc>
   130a4:	add	x1, x0, #0x770
   130a8:	ldr	x0, [sp, #16]
   130ac:	bl	6b20 <Perl_croak_xs_usage@plt>
   130b0:	ldr	x0, [sp, #24]
   130b4:	ldr	x1, [x0, #24]
   130b8:	ldrsw	x0, [sp, #32]
   130bc:	lsl	x0, x0, #3
   130c0:	add	x0, x1, x0
   130c4:	ldr	x0, [x0]
   130c8:	ldr	w1, [x0, #12]
   130cc:	mov	w0, #0x400                 	// #1024
   130d0:	movk	w0, #0x20, lsl #16
   130d4:	and	w0, w1, w0
   130d8:	cmp	w0, #0x400
   130dc:	b.ne	13100 <XS_POSIX_wctomb+0xcc>  // b.any
   130e0:	ldr	x0, [sp, #24]
   130e4:	ldr	x1, [x0, #24]
   130e8:	ldrsw	x0, [sp, #32]
   130ec:	lsl	x0, x0, #3
   130f0:	add	x0, x1, x0
   130f4:	ldr	x0, [x0]
   130f8:	ldr	x0, [x0, #16]
   130fc:	b	1312c <XS_POSIX_wctomb+0xf8>
   13100:	ldr	x0, [sp, #24]
   13104:	ldr	x1, [x0, #24]
   13108:	ldrsw	x0, [sp, #32]
   1310c:	lsl	x0, x0, #3
   13110:	add	x0, x1, x0
   13114:	ldr	x0, [x0]
   13118:	mov	w3, #0x2                   	// #2
   1311c:	mov	x2, #0x0                   	// #0
   13120:	mov	x1, x0
   13124:	ldr	x0, [sp, #24]
   13128:	bl	69b0 <Perl_sv_2pv_flags@plt>
   1312c:	str	x0, [sp, #64]
   13130:	ldr	x0, [sp, #24]
   13134:	ldr	x1, [x0, #24]
   13138:	ldrsw	x0, [sp, #32]
   1313c:	add	x0, x0, #0x1
   13140:	lsl	x0, x0, #3
   13144:	add	x0, x1, x0
   13148:	ldr	x0, [x0]
   1314c:	ldr	w1, [x0, #12]
   13150:	mov	w0, #0x100                 	// #256
   13154:	movk	w0, #0x20, lsl #16
   13158:	and	w0, w1, w0
   1315c:	cmp	w0, #0x100
   13160:	b.ne	1318c <XS_POSIX_wctomb+0x158>  // b.any
   13164:	ldr	x0, [sp, #24]
   13168:	ldr	x1, [x0, #24]
   1316c:	ldrsw	x0, [sp, #32]
   13170:	add	x0, x0, #0x1
   13174:	lsl	x0, x0, #3
   13178:	add	x0, x1, x0
   1317c:	ldr	x0, [x0]
   13180:	ldr	x0, [x0]
   13184:	ldr	x0, [x0, #32]
   13188:	b	131b8 <XS_POSIX_wctomb+0x184>
   1318c:	ldr	x0, [sp, #24]
   13190:	ldr	x1, [x0, #24]
   13194:	ldrsw	x0, [sp, #32]
   13198:	add	x0, x0, #0x1
   1319c:	lsl	x0, x0, #3
   131a0:	add	x0, x1, x0
   131a4:	ldr	x0, [x0]
   131a8:	mov	w2, #0x2                   	// #2
   131ac:	mov	x1, x0
   131b0:	ldr	x0, [sp, #24]
   131b4:	bl	6560 <Perl_sv_2iv_flags@plt>
   131b8:	str	w0, [sp, #40]
   131bc:	ldr	x0, [sp, #24]
   131c0:	ldr	x0, [x0, #8]
   131c4:	ldrb	w0, [x0, #35]
   131c8:	and	w0, w0, #0x4
   131cc:	cmp	w0, #0x0
   131d0:	b.eq	131f8 <XS_POSIX_wctomb+0x1c4>  // b.none
   131d4:	ldr	x0, [sp, #24]
   131d8:	ldr	x1, [x0, #16]
   131dc:	ldr	x0, [sp, #24]
   131e0:	ldr	x0, [x0, #8]
   131e4:	ldr	x0, [x0, #24]
   131e8:	lsl	x0, x0, #3
   131ec:	add	x0, x1, x0
   131f0:	ldr	x0, [x0]
   131f4:	b	13200 <XS_POSIX_wctomb+0x1cc>
   131f8:	ldr	x0, [sp, #24]
   131fc:	bl	7160 <Perl_sv_newmortal@plt>
   13200:	str	x0, [sp, #72]
   13204:	ldr	w1, [sp, #40]
   13208:	ldr	x0, [sp, #64]
   1320c:	bl	6cb0 <wctomb@plt>
   13210:	str	w0, [sp, #44]
   13214:	ldr	x0, [sp, #24]
   13218:	ldr	x1, [x0, #24]
   1321c:	ldrsw	x0, [sp, #32]
   13220:	lsl	x0, x0, #3
   13224:	sub	x0, x0, #0x8
   13228:	add	x0, x1, x0
   1322c:	str	x0, [sp, #48]
   13230:	ldrsw	x0, [sp, #44]
   13234:	str	x0, [sp, #80]
   13238:	ldr	x0, [sp, #72]
   1323c:	ldr	w1, [x0, #12]
   13240:	mov	w0, #0x8ff                 	// #2303
   13244:	movk	w0, #0x9981, lsl #16
   13248:	and	w0, w1, w0
   1324c:	cmp	w0, #0x1
   13250:	cset	w0, eq  // eq = none
   13254:	and	w0, w0, #0xff
   13258:	mov	w1, w0
   1325c:	ldr	x0, [sp, #24]
   13260:	ldrb	w0, [x0, #185]
   13264:	eor	w0, w0, #0x1
   13268:	and	w0, w0, #0xff
   1326c:	and	w0, w1, w0
   13270:	cmp	w0, #0x0
   13274:	cset	w0, ne  // ne = any
   13278:	and	w0, w0, #0xff
   1327c:	and	x0, x0, #0xff
   13280:	cmp	x0, #0x0
   13284:	b.eq	132b0 <XS_POSIX_wctomb+0x27c>  // b.none
   13288:	ldr	x0, [sp, #72]
   1328c:	ldr	w1, [x0, #12]
   13290:	mov	w0, #0x1100                	// #4352
   13294:	orr	w1, w1, w0
   13298:	ldr	x0, [sp, #72]
   1329c:	str	w1, [x0, #12]
   132a0:	ldr	x0, [sp, #72]
   132a4:	ldr	x1, [sp, #80]
   132a8:	str	x1, [x0, #16]
   132ac:	b	132c0 <XS_POSIX_wctomb+0x28c>
   132b0:	ldr	x2, [sp, #80]
   132b4:	ldr	x1, [sp, #72]
   132b8:	ldr	x0, [sp, #24]
   132bc:	bl	6880 <Perl_sv_setiv_mg@plt>
   132c0:	ldr	x0, [sp, #48]
   132c4:	add	x0, x0, #0x8
   132c8:	str	x0, [sp, #48]
   132cc:	ldr	x0, [sp, #48]
   132d0:	ldr	x1, [sp, #72]
   132d4:	str	x1, [x0]
   132d8:	mov	x0, #0x1                   	// #1
   132dc:	str	x0, [sp, #88]
   132e0:	ldr	x0, [sp, #24]
   132e4:	ldr	x1, [x0, #24]
   132e8:	ldrsw	x2, [sp, #32]
   132ec:	ldr	x0, [sp, #88]
   132f0:	add	x0, x2, x0
   132f4:	lsl	x0, x0, #3
   132f8:	sub	x0, x0, #0x8
   132fc:	add	x1, x1, x0
   13300:	ldr	x0, [sp, #24]
   13304:	str	x1, [x0]
   13308:	nop
   1330c:	ldp	x29, x30, [sp], #96
   13310:	ret

0000000000013314 <XS_POSIX_strcoll>:
   13314:	stp	x29, x30, [sp, #-112]!
   13318:	mov	x29, sp
   1331c:	str	x0, [sp, #24]
   13320:	str	x1, [sp, #16]
   13324:	ldr	x0, [sp, #24]
   13328:	ldr	x0, [x0]
   1332c:	str	x0, [sp, #56]
   13330:	ldr	x0, [sp, #24]
   13334:	bl	739c <S_POPMARK>
   13338:	str	w0, [sp, #44]
   1333c:	ldr	x0, [sp, #24]
   13340:	ldr	x1, [x0, #24]
   13344:	ldr	w0, [sp, #44]
   13348:	add	w2, w0, #0x1
   1334c:	str	w2, [sp, #44]
   13350:	sxtw	x0, w0
   13354:	lsl	x0, x0, #3
   13358:	add	x0, x1, x0
   1335c:	str	x0, [sp, #64]
   13360:	ldr	x1, [sp, #56]
   13364:	ldr	x0, [sp, #64]
   13368:	sub	x0, x1, x0
   1336c:	asr	x0, x0, #3
   13370:	str	w0, [sp, #48]
   13374:	ldr	w0, [sp, #48]
   13378:	cmp	w0, #0x2
   1337c:	b.eq	13390 <XS_POSIX_strcoll+0x7c>  // b.none
   13380:	adrp	x0, 1b000 <_fini+0x1fc>
   13384:	add	x1, x0, #0x780
   13388:	ldr	x0, [sp, #16]
   1338c:	bl	6b20 <Perl_croak_xs_usage@plt>
   13390:	ldr	x0, [sp, #24]
   13394:	ldr	x1, [x0, #24]
   13398:	ldrsw	x0, [sp, #44]
   1339c:	lsl	x0, x0, #3
   133a0:	add	x0, x1, x0
   133a4:	ldr	x0, [x0]
   133a8:	ldr	w1, [x0, #12]
   133ac:	mov	w0, #0x400                 	// #1024
   133b0:	movk	w0, #0x20, lsl #16
   133b4:	and	w0, w1, w0
   133b8:	cmp	w0, #0x400
   133bc:	b.ne	133e0 <XS_POSIX_strcoll+0xcc>  // b.any
   133c0:	ldr	x0, [sp, #24]
   133c4:	ldr	x1, [x0, #24]
   133c8:	ldrsw	x0, [sp, #44]
   133cc:	lsl	x0, x0, #3
   133d0:	add	x0, x1, x0
   133d4:	ldr	x0, [x0]
   133d8:	ldr	x0, [x0, #16]
   133dc:	b	1340c <XS_POSIX_strcoll+0xf8>
   133e0:	ldr	x0, [sp, #24]
   133e4:	ldr	x1, [x0, #24]
   133e8:	ldrsw	x0, [sp, #44]
   133ec:	lsl	x0, x0, #3
   133f0:	add	x0, x1, x0
   133f4:	ldr	x0, [x0]
   133f8:	mov	w3, #0x2                   	// #2
   133fc:	mov	x2, #0x0                   	// #0
   13400:	mov	x1, x0
   13404:	ldr	x0, [sp, #24]
   13408:	bl	69b0 <Perl_sv_2pv_flags@plt>
   1340c:	str	x0, [sp, #72]
   13410:	ldr	x0, [sp, #24]
   13414:	ldr	x1, [x0, #24]
   13418:	ldrsw	x0, [sp, #44]
   1341c:	add	x0, x0, #0x1
   13420:	lsl	x0, x0, #3
   13424:	add	x0, x1, x0
   13428:	ldr	x0, [x0]
   1342c:	ldr	w1, [x0, #12]
   13430:	mov	w0, #0x400                 	// #1024
   13434:	movk	w0, #0x20, lsl #16
   13438:	and	w0, w1, w0
   1343c:	cmp	w0, #0x400
   13440:	b.ne	13468 <XS_POSIX_strcoll+0x154>  // b.any
   13444:	ldr	x0, [sp, #24]
   13448:	ldr	x1, [x0, #24]
   1344c:	ldrsw	x0, [sp, #44]
   13450:	add	x0, x0, #0x1
   13454:	lsl	x0, x0, #3
   13458:	add	x0, x1, x0
   1345c:	ldr	x0, [x0]
   13460:	ldr	x0, [x0, #16]
   13464:	b	13498 <XS_POSIX_strcoll+0x184>
   13468:	ldr	x0, [sp, #24]
   1346c:	ldr	x1, [x0, #24]
   13470:	ldrsw	x0, [sp, #44]
   13474:	add	x0, x0, #0x1
   13478:	lsl	x0, x0, #3
   1347c:	add	x0, x1, x0
   13480:	ldr	x0, [x0]
   13484:	mov	w3, #0x2                   	// #2
   13488:	mov	x2, #0x0                   	// #0
   1348c:	mov	x1, x0
   13490:	ldr	x0, [sp, #24]
   13494:	bl	69b0 <Perl_sv_2pv_flags@plt>
   13498:	str	x0, [sp, #80]
   1349c:	ldr	x0, [sp, #24]
   134a0:	ldr	x0, [x0, #8]
   134a4:	ldrb	w0, [x0, #35]
   134a8:	and	w0, w0, #0x4
   134ac:	cmp	w0, #0x0
   134b0:	b.eq	134d8 <XS_POSIX_strcoll+0x1c4>  // b.none
   134b4:	ldr	x0, [sp, #24]
   134b8:	ldr	x1, [x0, #16]
   134bc:	ldr	x0, [sp, #24]
   134c0:	ldr	x0, [x0, #8]
   134c4:	ldr	x0, [x0, #24]
   134c8:	lsl	x0, x0, #3
   134cc:	add	x0, x1, x0
   134d0:	ldr	x0, [x0]
   134d4:	b	134e0 <XS_POSIX_strcoll+0x1cc>
   134d8:	ldr	x0, [sp, #24]
   134dc:	bl	7160 <Perl_sv_newmortal@plt>
   134e0:	str	x0, [sp, #88]
   134e4:	ldr	x1, [sp, #80]
   134e8:	ldr	x0, [sp, #72]
   134ec:	bl	6fc0 <strcoll@plt>
   134f0:	str	w0, [sp, #52]
   134f4:	ldr	x0, [sp, #24]
   134f8:	ldr	x1, [x0, #24]
   134fc:	ldrsw	x0, [sp, #44]
   13500:	lsl	x0, x0, #3
   13504:	sub	x0, x0, #0x8
   13508:	add	x0, x1, x0
   1350c:	str	x0, [sp, #56]
   13510:	ldrsw	x0, [sp, #52]
   13514:	str	x0, [sp, #96]
   13518:	ldr	x0, [sp, #88]
   1351c:	ldr	w1, [x0, #12]
   13520:	mov	w0, #0x8ff                 	// #2303
   13524:	movk	w0, #0x9981, lsl #16
   13528:	and	w0, w1, w0
   1352c:	cmp	w0, #0x1
   13530:	cset	w0, eq  // eq = none
   13534:	and	w0, w0, #0xff
   13538:	mov	w1, w0
   1353c:	ldr	x0, [sp, #24]
   13540:	ldrb	w0, [x0, #185]
   13544:	eor	w0, w0, #0x1
   13548:	and	w0, w0, #0xff
   1354c:	and	w0, w1, w0
   13550:	cmp	w0, #0x0
   13554:	cset	w0, ne  // ne = any
   13558:	and	w0, w0, #0xff
   1355c:	and	x0, x0, #0xff
   13560:	cmp	x0, #0x0
   13564:	b.eq	13590 <XS_POSIX_strcoll+0x27c>  // b.none
   13568:	ldr	x0, [sp, #88]
   1356c:	ldr	w1, [x0, #12]
   13570:	mov	w0, #0x1100                	// #4352
   13574:	orr	w1, w1, w0
   13578:	ldr	x0, [sp, #88]
   1357c:	str	w1, [x0, #12]
   13580:	ldr	x0, [sp, #88]
   13584:	ldr	x1, [sp, #96]
   13588:	str	x1, [x0, #16]
   1358c:	b	135a0 <XS_POSIX_strcoll+0x28c>
   13590:	ldr	x2, [sp, #96]
   13594:	ldr	x1, [sp, #88]
   13598:	ldr	x0, [sp, #24]
   1359c:	bl	6880 <Perl_sv_setiv_mg@plt>
   135a0:	ldr	x0, [sp, #56]
   135a4:	add	x0, x0, #0x8
   135a8:	str	x0, [sp, #56]
   135ac:	ldr	x0, [sp, #56]
   135b0:	ldr	x1, [sp, #88]
   135b4:	str	x1, [x0]
   135b8:	mov	x0, #0x1                   	// #1
   135bc:	str	x0, [sp, #104]
   135c0:	ldr	x0, [sp, #24]
   135c4:	ldr	x1, [x0, #24]
   135c8:	ldrsw	x2, [sp, #44]
   135cc:	ldr	x0, [sp, #104]
   135d0:	add	x0, x2, x0
   135d4:	lsl	x0, x0, #3
   135d8:	sub	x0, x0, #0x8
   135dc:	add	x1, x1, x0
   135e0:	ldr	x0, [sp, #24]
   135e4:	str	x1, [x0]
   135e8:	nop
   135ec:	ldp	x29, x30, [sp], #112
   135f0:	ret

00000000000135f4 <XS_POSIX_strtod>:
   135f4:	stp	x29, x30, [sp, #-96]!
   135f8:	mov	x29, sp
   135fc:	str	x0, [sp, #24]
   13600:	str	x1, [sp, #16]
   13604:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   13608:	ldr	x0, [x0, #3992]
   1360c:	ldr	x1, [x0]
   13610:	str	x1, [sp, #88]
   13614:	mov	x1, #0x0                   	// #0
   13618:	ldr	x0, [sp, #24]
   1361c:	ldr	x0, [x0]
   13620:	str	x0, [sp, #48]
   13624:	ldr	x0, [sp, #24]
   13628:	bl	739c <S_POPMARK>
   1362c:	str	w0, [sp, #32]
   13630:	ldr	x0, [sp, #24]
   13634:	ldr	x1, [x0, #24]
   13638:	ldr	w0, [sp, #32]
   1363c:	add	w2, w0, #0x1
   13640:	str	w2, [sp, #32]
   13644:	sxtw	x0, w0
   13648:	lsl	x0, x0, #3
   1364c:	add	x0, x1, x0
   13650:	str	x0, [sp, #64]
   13654:	ldr	x1, [sp, #48]
   13658:	ldr	x0, [sp, #64]
   1365c:	sub	x0, x1, x0
   13660:	asr	x0, x0, #3
   13664:	str	w0, [sp, #36]
   13668:	ldr	w0, [sp, #36]
   1366c:	cmp	w0, #0x1
   13670:	b.eq	13684 <XS_POSIX_strtod+0x90>  // b.none
   13674:	adrp	x0, 1b000 <_fini+0x1fc>
   13678:	add	x1, x0, #0x788
   1367c:	ldr	x0, [sp, #16]
   13680:	bl	6b20 <Perl_croak_xs_usage@plt>
   13684:	ldrsw	x0, [sp, #36]
   13688:	lsl	x0, x0, #3
   1368c:	neg	x0, x0
   13690:	ldr	x1, [sp, #48]
   13694:	add	x0, x1, x0
   13698:	str	x0, [sp, #48]
   1369c:	ldr	x0, [sp, #24]
   136a0:	ldr	x1, [x0, #24]
   136a4:	ldrsw	x0, [sp, #32]
   136a8:	lsl	x0, x0, #3
   136ac:	add	x0, x1, x0
   136b0:	ldr	x0, [x0]
   136b4:	ldr	w1, [x0, #12]
   136b8:	mov	w0, #0x400                 	// #1024
   136bc:	movk	w0, #0x20, lsl #16
   136c0:	and	w0, w1, w0
   136c4:	cmp	w0, #0x400
   136c8:	b.ne	136ec <XS_POSIX_strtod+0xf8>  // b.any
   136cc:	ldr	x0, [sp, #24]
   136d0:	ldr	x1, [x0, #24]
   136d4:	ldrsw	x0, [sp, #32]
   136d8:	lsl	x0, x0, #3
   136dc:	add	x0, x1, x0
   136e0:	ldr	x0, [x0]
   136e4:	ldr	x0, [x0, #16]
   136e8:	b	13718 <XS_POSIX_strtod+0x124>
   136ec:	ldr	x0, [sp, #24]
   136f0:	ldr	x1, [x0, #24]
   136f4:	ldrsw	x0, [sp, #32]
   136f8:	lsl	x0, x0, #3
   136fc:	add	x0, x1, x0
   13700:	ldr	x0, [x0]
   13704:	mov	w3, #0x2                   	// #2
   13708:	mov	x2, #0x0                   	// #0
   1370c:	mov	x1, x0
   13710:	ldr	x0, [sp, #24]
   13714:	bl	69b0 <Perl_sv_2pv_flags@plt>
   13718:	str	x0, [sp, #72]
   1371c:	str	xzr, [sp, #56]
   13720:	ldr	x0, [sp, #24]
   13724:	ldrb	w0, [x0, #2616]
   13728:	eor	w0, w0, #0x1
   1372c:	and	w0, w0, #0xff
   13730:	cmp	w0, #0x0
   13734:	b.eq	1375c <XS_POSIX_strtod+0x168>  // b.none
   13738:	ldr	x0, [sp, #24]
   1373c:	ldr	w0, [x0, #2612]
   13740:	cmp	w0, #0x1
   13744:	b.gt	1375c <XS_POSIX_strtod+0x168>
   13748:	ldr	x0, [sp, #24]
   1374c:	bl	6680 <Perl_set_numeric_underlying@plt>
   13750:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   13754:	ldr	x0, [x0, #4024]
   13758:	str	x0, [sp, #56]
   1375c:	add	x0, sp, #0x28
   13760:	mov	x1, x0
   13764:	ldr	x0, [sp, #72]
   13768:	bl	66b0 <strtod@plt>
   1376c:	str	d0, [sp, #80]
   13770:	ldr	x0, [sp, #56]
   13774:	cmp	x0, #0x0
   13778:	b.eq	13788 <XS_POSIX_strtod+0x194>  // b.none
   1377c:	ldr	x1, [sp, #56]
   13780:	ldr	x0, [sp, #24]
   13784:	blr	x1
   13788:	ldr	d0, [sp, #80]
   1378c:	ldr	x0, [sp, #24]
   13790:	bl	6920 <Perl_newSVnv@plt>
   13794:	mov	x1, x0
   13798:	ldr	x0, [sp, #48]
   1379c:	add	x0, x0, #0x8
   137a0:	str	x0, [sp, #48]
   137a4:	ldr	x0, [sp, #24]
   137a8:	bl	6d60 <Perl_sv_2mortal@plt>
   137ac:	mov	x1, x0
   137b0:	ldr	x0, [sp, #48]
   137b4:	str	x1, [x0]
   137b8:	ldr	x0, [sp, #24]
   137bc:	ldr	x0, [x0, #8]
   137c0:	ldrb	w0, [x0, #34]
   137c4:	and	w0, w0, #0x3
   137c8:	cmp	w0, #0x0
   137cc:	b.eq	137f0 <XS_POSIX_strtod+0x1fc>  // b.none
   137d0:	ldr	x0, [sp, #24]
   137d4:	ldr	x0, [x0, #8]
   137d8:	ldrb	w0, [x0, #34]
   137dc:	and	w0, w0, #0x3
   137e0:	cmp	w0, #0x3
   137e4:	cset	w0, eq  // eq = none
   137e8:	and	w0, w0, #0xff
   137ec:	b	13808 <XS_POSIX_strtod+0x214>
   137f0:	ldr	x0, [sp, #24]
   137f4:	bl	6f70 <Perl_block_gimme@plt>
   137f8:	and	w0, w0, #0xff
   137fc:	cmp	w0, #0x3
   13800:	cset	w0, eq  // eq = none
   13804:	and	w0, w0, #0xff
   13808:	cmp	w0, #0x0
   1380c:	b.eq	138b4 <XS_POSIX_strtod+0x2c0>  // b.none
   13810:	ldr	x0, [sp, #24]
   13814:	ldr	x1, [x0, #32]
   13818:	ldr	x0, [sp, #48]
   1381c:	sub	x0, x1, x0
   13820:	cmp	x0, #0x0
   13824:	cset	w0, le
   13828:	and	w0, w0, #0xff
   1382c:	and	x0, x0, #0xff
   13830:	cmp	x0, #0x0
   13834:	b.eq	13850 <XS_POSIX_strtod+0x25c>  // b.none
   13838:	mov	x3, #0x1                   	// #1
   1383c:	ldr	x2, [sp, #48]
   13840:	ldr	x1, [sp, #48]
   13844:	ldr	x0, [sp, #24]
   13848:	bl	6660 <Perl_stack_grow@plt>
   1384c:	str	x0, [sp, #48]
   13850:	ldr	x0, [sp, #40]
   13854:	cmp	x0, #0x0
   13858:	b.eq	13898 <XS_POSIX_strtod+0x2a4>  // b.none
   1385c:	ldr	x0, [sp, #40]
   13860:	bl	65c0 <strlen@plt>
   13864:	mov	x1, x0
   13868:	ldr	x0, [sp, #24]
   1386c:	bl	70b0 <Perl_newSViv@plt>
   13870:	mov	x1, x0
   13874:	ldr	x0, [sp, #48]
   13878:	add	x0, x0, #0x8
   1387c:	str	x0, [sp, #48]
   13880:	ldr	x0, [sp, #24]
   13884:	bl	6d60 <Perl_sv_2mortal@plt>
   13888:	mov	x1, x0
   1388c:	ldr	x0, [sp, #48]
   13890:	str	x1, [x0]
   13894:	b	138b4 <XS_POSIX_strtod+0x2c0>
   13898:	ldr	x0, [sp, #48]
   1389c:	add	x0, x0, #0x8
   138a0:	str	x0, [sp, #48]
   138a4:	ldr	x0, [sp, #24]
   138a8:	add	x1, x0, #0x150
   138ac:	ldr	x0, [sp, #48]
   138b0:	str	x1, [x0]
   138b4:	ldr	x0, [sp, #24]
   138b8:	ldr	x1, [sp, #48]
   138bc:	str	x1, [x0]
   138c0:	nop
   138c4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   138c8:	ldr	x0, [x0, #3992]
   138cc:	ldr	x1, [sp, #88]
   138d0:	ldr	x0, [x0]
   138d4:	eor	x0, x1, x0
   138d8:	cmp	x0, #0x0
   138dc:	b.eq	138e4 <XS_POSIX_strtod+0x2f0>  // b.none
   138e0:	bl	6a60 <__stack_chk_fail@plt>
   138e4:	ldp	x29, x30, [sp], #96
   138e8:	ret

00000000000138ec <XS_POSIX_strtold>:
   138ec:	stp	x29, x30, [sp, #-112]!
   138f0:	mov	x29, sp
   138f4:	str	x0, [sp, #24]
   138f8:	str	x1, [sp, #16]
   138fc:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   13900:	ldr	x0, [x0, #3992]
   13904:	ldr	x1, [x0]
   13908:	str	x1, [sp, #104]
   1390c:	mov	x1, #0x0                   	// #0
   13910:	ldr	x0, [sp, #24]
   13914:	ldr	x0, [x0]
   13918:	str	x0, [sp, #48]
   1391c:	ldr	x0, [sp, #24]
   13920:	bl	739c <S_POPMARK>
   13924:	str	w0, [sp, #32]
   13928:	ldr	x0, [sp, #24]
   1392c:	ldr	x1, [x0, #24]
   13930:	ldr	w0, [sp, #32]
   13934:	add	w2, w0, #0x1
   13938:	str	w2, [sp, #32]
   1393c:	sxtw	x0, w0
   13940:	lsl	x0, x0, #3
   13944:	add	x0, x1, x0
   13948:	str	x0, [sp, #64]
   1394c:	ldr	x1, [sp, #48]
   13950:	ldr	x0, [sp, #64]
   13954:	sub	x0, x1, x0
   13958:	asr	x0, x0, #3
   1395c:	str	w0, [sp, #36]
   13960:	ldr	w0, [sp, #36]
   13964:	cmp	w0, #0x1
   13968:	b.eq	1397c <XS_POSIX_strtold+0x90>  // b.none
   1396c:	adrp	x0, 1b000 <_fini+0x1fc>
   13970:	add	x1, x0, #0x788
   13974:	ldr	x0, [sp, #16]
   13978:	bl	6b20 <Perl_croak_xs_usage@plt>
   1397c:	ldrsw	x0, [sp, #36]
   13980:	lsl	x0, x0, #3
   13984:	neg	x0, x0
   13988:	ldr	x1, [sp, #48]
   1398c:	add	x0, x1, x0
   13990:	str	x0, [sp, #48]
   13994:	ldr	x0, [sp, #24]
   13998:	ldr	x1, [x0, #24]
   1399c:	ldrsw	x0, [sp, #32]
   139a0:	lsl	x0, x0, #3
   139a4:	add	x0, x1, x0
   139a8:	ldr	x0, [x0]
   139ac:	ldr	w1, [x0, #12]
   139b0:	mov	w0, #0x400                 	// #1024
   139b4:	movk	w0, #0x20, lsl #16
   139b8:	and	w0, w1, w0
   139bc:	cmp	w0, #0x400
   139c0:	b.ne	139e4 <XS_POSIX_strtold+0xf8>  // b.any
   139c4:	ldr	x0, [sp, #24]
   139c8:	ldr	x1, [x0, #24]
   139cc:	ldrsw	x0, [sp, #32]
   139d0:	lsl	x0, x0, #3
   139d4:	add	x0, x1, x0
   139d8:	ldr	x0, [x0]
   139dc:	ldr	x0, [x0, #16]
   139e0:	b	13a10 <XS_POSIX_strtold+0x124>
   139e4:	ldr	x0, [sp, #24]
   139e8:	ldr	x1, [x0, #24]
   139ec:	ldrsw	x0, [sp, #32]
   139f0:	lsl	x0, x0, #3
   139f4:	add	x0, x1, x0
   139f8:	ldr	x0, [x0]
   139fc:	mov	w3, #0x2                   	// #2
   13a00:	mov	x2, #0x0                   	// #0
   13a04:	mov	x1, x0
   13a08:	ldr	x0, [sp, #24]
   13a0c:	bl	69b0 <Perl_sv_2pv_flags@plt>
   13a10:	str	x0, [sp, #72]
   13a14:	str	xzr, [sp, #56]
   13a18:	ldr	x0, [sp, #24]
   13a1c:	ldrb	w0, [x0, #2616]
   13a20:	eor	w0, w0, #0x1
   13a24:	and	w0, w0, #0xff
   13a28:	cmp	w0, #0x0
   13a2c:	b.eq	13a54 <XS_POSIX_strtold+0x168>  // b.none
   13a30:	ldr	x0, [sp, #24]
   13a34:	ldr	w0, [x0, #2612]
   13a38:	cmp	w0, #0x1
   13a3c:	b.gt	13a54 <XS_POSIX_strtold+0x168>
   13a40:	ldr	x0, [sp, #24]
   13a44:	bl	6680 <Perl_set_numeric_underlying@plt>
   13a48:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   13a4c:	ldr	x0, [x0, #4024]
   13a50:	str	x0, [sp, #56]
   13a54:	add	x0, sp, #0x28
   13a58:	mov	x1, x0
   13a5c:	ldr	x0, [sp, #72]
   13a60:	bl	6cf0 <strtold@plt>
   13a64:	str	q0, [sp, #80]
   13a68:	ldr	x0, [sp, #56]
   13a6c:	cmp	x0, #0x0
   13a70:	b.eq	13a80 <XS_POSIX_strtold+0x194>  // b.none
   13a74:	ldr	x1, [sp, #56]
   13a78:	ldr	x0, [sp, #24]
   13a7c:	blr	x1
   13a80:	ldr	q0, [sp, #80]
   13a84:	bl	1a6e0 <__trunctfdf2>
   13a88:	ldr	x0, [sp, #24]
   13a8c:	bl	6920 <Perl_newSVnv@plt>
   13a90:	mov	x1, x0
   13a94:	ldr	x0, [sp, #48]
   13a98:	add	x0, x0, #0x8
   13a9c:	str	x0, [sp, #48]
   13aa0:	ldr	x0, [sp, #24]
   13aa4:	bl	6d60 <Perl_sv_2mortal@plt>
   13aa8:	mov	x1, x0
   13aac:	ldr	x0, [sp, #48]
   13ab0:	str	x1, [x0]
   13ab4:	ldr	x0, [sp, #24]
   13ab8:	ldr	x0, [x0, #8]
   13abc:	ldrb	w0, [x0, #34]
   13ac0:	and	w0, w0, #0x3
   13ac4:	cmp	w0, #0x0
   13ac8:	b.eq	13aec <XS_POSIX_strtold+0x200>  // b.none
   13acc:	ldr	x0, [sp, #24]
   13ad0:	ldr	x0, [x0, #8]
   13ad4:	ldrb	w0, [x0, #34]
   13ad8:	and	w0, w0, #0x3
   13adc:	cmp	w0, #0x3
   13ae0:	cset	w0, eq  // eq = none
   13ae4:	and	w0, w0, #0xff
   13ae8:	b	13b04 <XS_POSIX_strtold+0x218>
   13aec:	ldr	x0, [sp, #24]
   13af0:	bl	6f70 <Perl_block_gimme@plt>
   13af4:	and	w0, w0, #0xff
   13af8:	cmp	w0, #0x3
   13afc:	cset	w0, eq  // eq = none
   13b00:	and	w0, w0, #0xff
   13b04:	cmp	w0, #0x0
   13b08:	b.eq	13bb0 <XS_POSIX_strtold+0x2c4>  // b.none
   13b0c:	ldr	x0, [sp, #24]
   13b10:	ldr	x1, [x0, #32]
   13b14:	ldr	x0, [sp, #48]
   13b18:	sub	x0, x1, x0
   13b1c:	cmp	x0, #0x0
   13b20:	cset	w0, le
   13b24:	and	w0, w0, #0xff
   13b28:	and	x0, x0, #0xff
   13b2c:	cmp	x0, #0x0
   13b30:	b.eq	13b4c <XS_POSIX_strtold+0x260>  // b.none
   13b34:	mov	x3, #0x1                   	// #1
   13b38:	ldr	x2, [sp, #48]
   13b3c:	ldr	x1, [sp, #48]
   13b40:	ldr	x0, [sp, #24]
   13b44:	bl	6660 <Perl_stack_grow@plt>
   13b48:	str	x0, [sp, #48]
   13b4c:	ldr	x0, [sp, #40]
   13b50:	cmp	x0, #0x0
   13b54:	b.eq	13b94 <XS_POSIX_strtold+0x2a8>  // b.none
   13b58:	ldr	x0, [sp, #40]
   13b5c:	bl	65c0 <strlen@plt>
   13b60:	mov	x1, x0
   13b64:	ldr	x0, [sp, #24]
   13b68:	bl	70b0 <Perl_newSViv@plt>
   13b6c:	mov	x1, x0
   13b70:	ldr	x0, [sp, #48]
   13b74:	add	x0, x0, #0x8
   13b78:	str	x0, [sp, #48]
   13b7c:	ldr	x0, [sp, #24]
   13b80:	bl	6d60 <Perl_sv_2mortal@plt>
   13b84:	mov	x1, x0
   13b88:	ldr	x0, [sp, #48]
   13b8c:	str	x1, [x0]
   13b90:	b	13bb0 <XS_POSIX_strtold+0x2c4>
   13b94:	ldr	x0, [sp, #48]
   13b98:	add	x0, x0, #0x8
   13b9c:	str	x0, [sp, #48]
   13ba0:	ldr	x0, [sp, #24]
   13ba4:	add	x1, x0, #0x150
   13ba8:	ldr	x0, [sp, #48]
   13bac:	str	x1, [x0]
   13bb0:	ldr	x0, [sp, #24]
   13bb4:	ldr	x1, [sp, #48]
   13bb8:	str	x1, [x0]
   13bbc:	nop
   13bc0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   13bc4:	ldr	x0, [x0, #3992]
   13bc8:	ldr	x1, [sp, #104]
   13bcc:	ldr	x0, [x0]
   13bd0:	eor	x0, x1, x0
   13bd4:	cmp	x0, #0x0
   13bd8:	b.eq	13be0 <XS_POSIX_strtold+0x2f4>  // b.none
   13bdc:	bl	6a60 <__stack_chk_fail@plt>
   13be0:	ldp	x29, x30, [sp], #112
   13be4:	ret

0000000000013be8 <XS_POSIX_strtol>:
   13be8:	stp	x29, x30, [sp, #-96]!
   13bec:	mov	x29, sp
   13bf0:	str	x0, [sp, #24]
   13bf4:	str	x1, [sp, #16]
   13bf8:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   13bfc:	ldr	x0, [x0, #3992]
   13c00:	ldr	x1, [x0]
   13c04:	str	x1, [sp, #88]
   13c08:	mov	x1, #0x0                   	// #0
   13c0c:	ldr	x0, [sp, #24]
   13c10:	ldr	x0, [x0]
   13c14:	str	x0, [sp, #56]
   13c18:	ldr	x0, [sp, #24]
   13c1c:	bl	739c <S_POPMARK>
   13c20:	str	w0, [sp, #40]
   13c24:	ldr	x0, [sp, #24]
   13c28:	ldr	x1, [x0, #24]
   13c2c:	ldr	w0, [sp, #40]
   13c30:	add	w2, w0, #0x1
   13c34:	str	w2, [sp, #40]
   13c38:	sxtw	x0, w0
   13c3c:	lsl	x0, x0, #3
   13c40:	add	x0, x1, x0
   13c44:	str	x0, [sp, #64]
   13c48:	ldr	x1, [sp, #56]
   13c4c:	ldr	x0, [sp, #64]
   13c50:	sub	x0, x1, x0
   13c54:	asr	x0, x0, #3
   13c58:	str	w0, [sp, #44]
   13c5c:	ldr	w0, [sp, #44]
   13c60:	cmp	w0, #0x0
   13c64:	b.le	13c74 <XS_POSIX_strtol+0x8c>
   13c68:	ldr	w0, [sp, #44]
   13c6c:	cmp	w0, #0x2
   13c70:	b.le	13c84 <XS_POSIX_strtol+0x9c>
   13c74:	adrp	x0, 1b000 <_fini+0x1fc>
   13c78:	add	x1, x0, #0x790
   13c7c:	ldr	x0, [sp, #16]
   13c80:	bl	6b20 <Perl_croak_xs_usage@plt>
   13c84:	ldrsw	x0, [sp, #44]
   13c88:	lsl	x0, x0, #3
   13c8c:	neg	x0, x0
   13c90:	ldr	x1, [sp, #56]
   13c94:	add	x0, x1, x0
   13c98:	str	x0, [sp, #56]
   13c9c:	ldr	x0, [sp, #24]
   13ca0:	ldr	x1, [x0, #24]
   13ca4:	ldrsw	x0, [sp, #40]
   13ca8:	lsl	x0, x0, #3
   13cac:	add	x0, x1, x0
   13cb0:	ldr	x0, [x0]
   13cb4:	ldr	w1, [x0, #12]
   13cb8:	mov	w0, #0x400                 	// #1024
   13cbc:	movk	w0, #0x20, lsl #16
   13cc0:	and	w0, w1, w0
   13cc4:	cmp	w0, #0x400
   13cc8:	b.ne	13cec <XS_POSIX_strtol+0x104>  // b.any
   13ccc:	ldr	x0, [sp, #24]
   13cd0:	ldr	x1, [x0, #24]
   13cd4:	ldrsw	x0, [sp, #40]
   13cd8:	lsl	x0, x0, #3
   13cdc:	add	x0, x1, x0
   13ce0:	ldr	x0, [x0]
   13ce4:	ldr	x0, [x0, #16]
   13ce8:	b	13d18 <XS_POSIX_strtol+0x130>
   13cec:	ldr	x0, [sp, #24]
   13cf0:	ldr	x1, [x0, #24]
   13cf4:	ldrsw	x0, [sp, #40]
   13cf8:	lsl	x0, x0, #3
   13cfc:	add	x0, x1, x0
   13d00:	ldr	x0, [x0]
   13d04:	mov	w3, #0x2                   	// #2
   13d08:	mov	x2, #0x0                   	// #0
   13d0c:	mov	x1, x0
   13d10:	ldr	x0, [sp, #24]
   13d14:	bl	69b0 <Perl_sv_2pv_flags@plt>
   13d18:	str	x0, [sp, #72]
   13d1c:	ldr	w0, [sp, #44]
   13d20:	cmp	w0, #0x1
   13d24:	b.gt	13d30 <XS_POSIX_strtol+0x148>
   13d28:	str	wzr, [sp, #36]
   13d2c:	b	13dbc <XS_POSIX_strtol+0x1d4>
   13d30:	ldr	x0, [sp, #24]
   13d34:	ldr	x1, [x0, #24]
   13d38:	ldrsw	x0, [sp, #40]
   13d3c:	add	x0, x0, #0x1
   13d40:	lsl	x0, x0, #3
   13d44:	add	x0, x1, x0
   13d48:	ldr	x0, [x0]
   13d4c:	ldr	w1, [x0, #12]
   13d50:	mov	w0, #0x100                 	// #256
   13d54:	movk	w0, #0x20, lsl #16
   13d58:	and	w0, w1, w0
   13d5c:	cmp	w0, #0x100
   13d60:	b.ne	13d8c <XS_POSIX_strtol+0x1a4>  // b.any
   13d64:	ldr	x0, [sp, #24]
   13d68:	ldr	x1, [x0, #24]
   13d6c:	ldrsw	x0, [sp, #40]
   13d70:	add	x0, x0, #0x1
   13d74:	lsl	x0, x0, #3
   13d78:	add	x0, x1, x0
   13d7c:	ldr	x0, [x0]
   13d80:	ldr	x0, [x0]
   13d84:	ldr	x0, [x0, #32]
   13d88:	b	13db8 <XS_POSIX_strtol+0x1d0>
   13d8c:	ldr	x0, [sp, #24]
   13d90:	ldr	x1, [x0, #24]
   13d94:	ldrsw	x0, [sp, #40]
   13d98:	add	x0, x0, #0x1
   13d9c:	lsl	x0, x0, #3
   13da0:	add	x0, x1, x0
   13da4:	ldr	x0, [x0]
   13da8:	mov	w2, #0x2                   	// #2
   13dac:	mov	x1, x0
   13db0:	ldr	x0, [sp, #24]
   13db4:	bl	6560 <Perl_sv_2iv_flags@plt>
   13db8:	str	w0, [sp, #36]
   13dbc:	ldr	w0, [sp, #36]
   13dc0:	cmp	w0, #0x0
   13dc4:	b.eq	13dd8 <XS_POSIX_strtol+0x1f0>  // b.none
   13dc8:	ldr	w0, [sp, #36]
   13dcc:	sub	w0, w0, #0x2
   13dd0:	cmp	w0, #0x22
   13dd4:	b.hi	13f20 <XS_POSIX_strtol+0x338>  // b.pmore
   13dd8:	add	x0, sp, #0x30
   13ddc:	ldr	w2, [sp, #36]
   13de0:	mov	x1, x0
   13de4:	ldr	x0, [sp, #72]
   13de8:	bl	6c90 <strtol@plt>
   13dec:	str	x0, [sp, #80]
   13df0:	ldr	x1, [sp, #80]
   13df4:	ldr	x0, [sp, #24]
   13df8:	bl	70b0 <Perl_newSViv@plt>
   13dfc:	mov	x1, x0
   13e00:	ldr	x0, [sp, #56]
   13e04:	add	x0, x0, #0x8
   13e08:	str	x0, [sp, #56]
   13e0c:	ldr	x0, [sp, #24]
   13e10:	bl	6d60 <Perl_sv_2mortal@plt>
   13e14:	mov	x1, x0
   13e18:	ldr	x0, [sp, #56]
   13e1c:	str	x1, [x0]
   13e20:	ldr	x0, [sp, #24]
   13e24:	ldr	x0, [x0, #8]
   13e28:	ldrb	w0, [x0, #34]
   13e2c:	and	w0, w0, #0x3
   13e30:	cmp	w0, #0x0
   13e34:	b.eq	13e58 <XS_POSIX_strtol+0x270>  // b.none
   13e38:	ldr	x0, [sp, #24]
   13e3c:	ldr	x0, [x0, #8]
   13e40:	ldrb	w0, [x0, #34]
   13e44:	and	w0, w0, #0x3
   13e48:	cmp	w0, #0x3
   13e4c:	cset	w0, eq  // eq = none
   13e50:	and	w0, w0, #0xff
   13e54:	b	13e70 <XS_POSIX_strtol+0x288>
   13e58:	ldr	x0, [sp, #24]
   13e5c:	bl	6f70 <Perl_block_gimme@plt>
   13e60:	and	w0, w0, #0xff
   13e64:	cmp	w0, #0x3
   13e68:	cset	w0, eq  // eq = none
   13e6c:	and	w0, w0, #0xff
   13e70:	cmp	w0, #0x0
   13e74:	b.eq	14000 <XS_POSIX_strtol+0x418>  // b.none
   13e78:	ldr	x0, [sp, #24]
   13e7c:	ldr	x1, [x0, #32]
   13e80:	ldr	x0, [sp, #56]
   13e84:	sub	x0, x1, x0
   13e88:	cmp	x0, #0x0
   13e8c:	cset	w0, le
   13e90:	and	w0, w0, #0xff
   13e94:	and	x0, x0, #0xff
   13e98:	cmp	x0, #0x0
   13e9c:	b.eq	13eb8 <XS_POSIX_strtol+0x2d0>  // b.none
   13ea0:	mov	x3, #0x1                   	// #1
   13ea4:	ldr	x2, [sp, #56]
   13ea8:	ldr	x1, [sp, #56]
   13eac:	ldr	x0, [sp, #24]
   13eb0:	bl	6660 <Perl_stack_grow@plt>
   13eb4:	str	x0, [sp, #56]
   13eb8:	ldr	x0, [sp, #48]
   13ebc:	cmp	x0, #0x0
   13ec0:	b.eq	13f00 <XS_POSIX_strtol+0x318>  // b.none
   13ec4:	ldr	x0, [sp, #48]
   13ec8:	bl	65c0 <strlen@plt>
   13ecc:	mov	x1, x0
   13ed0:	ldr	x0, [sp, #24]
   13ed4:	bl	70b0 <Perl_newSViv@plt>
   13ed8:	mov	x1, x0
   13edc:	ldr	x0, [sp, #56]
   13ee0:	add	x0, x0, #0x8
   13ee4:	str	x0, [sp, #56]
   13ee8:	ldr	x0, [sp, #24]
   13eec:	bl	6d60 <Perl_sv_2mortal@plt>
   13ef0:	mov	x1, x0
   13ef4:	ldr	x0, [sp, #56]
   13ef8:	str	x1, [x0]
   13efc:	b	14000 <XS_POSIX_strtol+0x418>
   13f00:	ldr	x0, [sp, #56]
   13f04:	add	x0, x0, #0x8
   13f08:	str	x0, [sp, #56]
   13f0c:	ldr	x0, [sp, #24]
   13f10:	add	x1, x0, #0x150
   13f14:	ldr	x0, [sp, #56]
   13f18:	str	x1, [x0]
   13f1c:	b	14000 <XS_POSIX_strtol+0x418>
   13f20:	bl	70d0 <__errno_location@plt>
   13f24:	mov	x1, x0
   13f28:	mov	w0, #0x16                  	// #22
   13f2c:	str	w0, [x1]
   13f30:	ldr	x0, [sp, #56]
   13f34:	add	x0, x0, #0x8
   13f38:	str	x0, [sp, #56]
   13f3c:	ldr	x0, [sp, #24]
   13f40:	add	x1, x0, #0x150
   13f44:	ldr	x0, [sp, #56]
   13f48:	str	x1, [x0]
   13f4c:	ldr	x0, [sp, #24]
   13f50:	ldr	x0, [x0, #8]
   13f54:	ldrb	w0, [x0, #34]
   13f58:	and	w0, w0, #0x3
   13f5c:	cmp	w0, #0x0
   13f60:	b.eq	13f84 <XS_POSIX_strtol+0x39c>  // b.none
   13f64:	ldr	x0, [sp, #24]
   13f68:	ldr	x0, [x0, #8]
   13f6c:	ldrb	w0, [x0, #34]
   13f70:	and	w0, w0, #0x3
   13f74:	cmp	w0, #0x3
   13f78:	cset	w0, eq  // eq = none
   13f7c:	and	w0, w0, #0xff
   13f80:	b	13f9c <XS_POSIX_strtol+0x3b4>
   13f84:	ldr	x0, [sp, #24]
   13f88:	bl	6f70 <Perl_block_gimme@plt>
   13f8c:	and	w0, w0, #0xff
   13f90:	cmp	w0, #0x3
   13f94:	cset	w0, eq  // eq = none
   13f98:	and	w0, w0, #0xff
   13f9c:	cmp	w0, #0x0
   13fa0:	b.eq	14000 <XS_POSIX_strtol+0x418>  // b.none
   13fa4:	ldr	x0, [sp, #24]
   13fa8:	ldr	x1, [x0, #32]
   13fac:	ldr	x0, [sp, #56]
   13fb0:	sub	x0, x1, x0
   13fb4:	cmp	x0, #0x0
   13fb8:	cset	w0, le
   13fbc:	and	w0, w0, #0xff
   13fc0:	and	x0, x0, #0xff
   13fc4:	cmp	x0, #0x0
   13fc8:	b.eq	13fe4 <XS_POSIX_strtol+0x3fc>  // b.none
   13fcc:	mov	x3, #0x1                   	// #1
   13fd0:	ldr	x2, [sp, #56]
   13fd4:	ldr	x1, [sp, #56]
   13fd8:	ldr	x0, [sp, #24]
   13fdc:	bl	6660 <Perl_stack_grow@plt>
   13fe0:	str	x0, [sp, #56]
   13fe4:	ldr	x0, [sp, #56]
   13fe8:	add	x0, x0, #0x8
   13fec:	str	x0, [sp, #56]
   13ff0:	ldr	x0, [sp, #24]
   13ff4:	add	x1, x0, #0x150
   13ff8:	ldr	x0, [sp, #56]
   13ffc:	str	x1, [x0]
   14000:	ldr	x0, [sp, #24]
   14004:	ldr	x1, [sp, #56]
   14008:	str	x1, [x0]
   1400c:	nop
   14010:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   14014:	ldr	x0, [x0, #3992]
   14018:	ldr	x1, [sp, #88]
   1401c:	ldr	x0, [x0]
   14020:	eor	x0, x1, x0
   14024:	cmp	x0, #0x0
   14028:	b.eq	14030 <XS_POSIX_strtol+0x448>  // b.none
   1402c:	bl	6a60 <__stack_chk_fail@plt>
   14030:	ldp	x29, x30, [sp], #96
   14034:	ret

0000000000014038 <XS_POSIX_strtoul>:
   14038:	stp	x29, x30, [sp, #-96]!
   1403c:	mov	x29, sp
   14040:	str	x0, [sp, #24]
   14044:	str	x1, [sp, #16]
   14048:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   1404c:	ldr	x0, [x0, #3992]
   14050:	ldr	x1, [x0]
   14054:	str	x1, [sp, #88]
   14058:	mov	x1, #0x0                   	// #0
   1405c:	ldr	x0, [sp, #24]
   14060:	ldr	x0, [x0]
   14064:	str	x0, [sp, #56]
   14068:	ldr	x0, [sp, #24]
   1406c:	bl	739c <S_POPMARK>
   14070:	str	w0, [sp, #40]
   14074:	ldr	x0, [sp, #24]
   14078:	ldr	x1, [x0, #24]
   1407c:	ldr	w0, [sp, #40]
   14080:	add	w2, w0, #0x1
   14084:	str	w2, [sp, #40]
   14088:	sxtw	x0, w0
   1408c:	lsl	x0, x0, #3
   14090:	add	x0, x1, x0
   14094:	str	x0, [sp, #64]
   14098:	ldr	x1, [sp, #56]
   1409c:	ldr	x0, [sp, #64]
   140a0:	sub	x0, x1, x0
   140a4:	asr	x0, x0, #3
   140a8:	str	w0, [sp, #44]
   140ac:	ldr	w0, [sp, #44]
   140b0:	cmp	w0, #0x0
   140b4:	b.le	140c4 <XS_POSIX_strtoul+0x8c>
   140b8:	ldr	w0, [sp, #44]
   140bc:	cmp	w0, #0x2
   140c0:	b.le	140d4 <XS_POSIX_strtoul+0x9c>
   140c4:	adrp	x0, 1b000 <_fini+0x1fc>
   140c8:	add	x1, x0, #0x790
   140cc:	ldr	x0, [sp, #16]
   140d0:	bl	6b20 <Perl_croak_xs_usage@plt>
   140d4:	ldrsw	x0, [sp, #44]
   140d8:	lsl	x0, x0, #3
   140dc:	neg	x0, x0
   140e0:	ldr	x1, [sp, #56]
   140e4:	add	x0, x1, x0
   140e8:	str	x0, [sp, #56]
   140ec:	ldr	x0, [sp, #24]
   140f0:	ldr	x1, [x0, #24]
   140f4:	ldrsw	x0, [sp, #40]
   140f8:	lsl	x0, x0, #3
   140fc:	add	x0, x1, x0
   14100:	ldr	x0, [x0]
   14104:	ldr	w1, [x0, #12]
   14108:	mov	w0, #0x400                 	// #1024
   1410c:	movk	w0, #0x20, lsl #16
   14110:	and	w0, w1, w0
   14114:	cmp	w0, #0x400
   14118:	b.ne	1413c <XS_POSIX_strtoul+0x104>  // b.any
   1411c:	ldr	x0, [sp, #24]
   14120:	ldr	x1, [x0, #24]
   14124:	ldrsw	x0, [sp, #40]
   14128:	lsl	x0, x0, #3
   1412c:	add	x0, x1, x0
   14130:	ldr	x0, [x0]
   14134:	ldr	x0, [x0, #16]
   14138:	b	14168 <XS_POSIX_strtoul+0x130>
   1413c:	ldr	x0, [sp, #24]
   14140:	ldr	x1, [x0, #24]
   14144:	ldrsw	x0, [sp, #40]
   14148:	lsl	x0, x0, #3
   1414c:	add	x0, x1, x0
   14150:	ldr	x0, [x0]
   14154:	mov	w3, #0x2                   	// #2
   14158:	mov	x2, #0x0                   	// #0
   1415c:	mov	x1, x0
   14160:	ldr	x0, [sp, #24]
   14164:	bl	69b0 <Perl_sv_2pv_flags@plt>
   14168:	str	x0, [sp, #72]
   1416c:	str	xzr, [sp, #48]
   14170:	ldr	w0, [sp, #44]
   14174:	cmp	w0, #0x1
   14178:	b.gt	14184 <XS_POSIX_strtoul+0x14c>
   1417c:	str	wzr, [sp, #36]
   14180:	b	14210 <XS_POSIX_strtoul+0x1d8>
   14184:	ldr	x0, [sp, #24]
   14188:	ldr	x1, [x0, #24]
   1418c:	ldrsw	x0, [sp, #40]
   14190:	add	x0, x0, #0x1
   14194:	lsl	x0, x0, #3
   14198:	add	x0, x1, x0
   1419c:	ldr	x0, [x0]
   141a0:	ldr	w1, [x0, #12]
   141a4:	mov	w0, #0x100                 	// #256
   141a8:	movk	w0, #0x20, lsl #16
   141ac:	and	w0, w1, w0
   141b0:	cmp	w0, #0x100
   141b4:	b.ne	141e0 <XS_POSIX_strtoul+0x1a8>  // b.any
   141b8:	ldr	x0, [sp, #24]
   141bc:	ldr	x1, [x0, #24]
   141c0:	ldrsw	x0, [sp, #40]
   141c4:	add	x0, x0, #0x1
   141c8:	lsl	x0, x0, #3
   141cc:	add	x0, x1, x0
   141d0:	ldr	x0, [x0]
   141d4:	ldr	x0, [x0]
   141d8:	ldr	x0, [x0, #32]
   141dc:	b	1420c <XS_POSIX_strtoul+0x1d4>
   141e0:	ldr	x0, [sp, #24]
   141e4:	ldr	x1, [x0, #24]
   141e8:	ldrsw	x0, [sp, #40]
   141ec:	add	x0, x0, #0x1
   141f0:	lsl	x0, x0, #3
   141f4:	add	x0, x1, x0
   141f8:	ldr	x0, [x0]
   141fc:	mov	w2, #0x2                   	// #2
   14200:	mov	x1, x0
   14204:	ldr	x0, [sp, #24]
   14208:	bl	6560 <Perl_sv_2iv_flags@plt>
   1420c:	str	w0, [sp, #36]
   14210:	ldr	w0, [sp, #36]
   14214:	cmp	w0, #0x0
   14218:	b.eq	1422c <XS_POSIX_strtoul+0x1f4>  // b.none
   1421c:	ldr	w0, [sp, #36]
   14220:	sub	w0, w0, #0x2
   14224:	cmp	w0, #0x22
   14228:	b.hi	143bc <XS_POSIX_strtoul+0x384>  // b.pmore
   1422c:	add	x0, sp, #0x30
   14230:	ldr	w2, [sp, #36]
   14234:	mov	x1, x0
   14238:	ldr	x0, [sp, #72]
   1423c:	bl	65b0 <strtoul@plt>
   14240:	str	x0, [sp, #80]
   14244:	ldr	x0, [sp, #80]
   14248:	cmp	x0, #0x0
   1424c:	b.ge	14288 <XS_POSIX_strtoul+0x250>  // b.tcont
   14250:	ldr	d0, [sp, #80]
   14254:	ucvtf	d0, d0
   14258:	ldr	x0, [sp, #24]
   1425c:	bl	6920 <Perl_newSVnv@plt>
   14260:	mov	x1, x0
   14264:	ldr	x0, [sp, #56]
   14268:	add	x0, x0, #0x8
   1426c:	str	x0, [sp, #56]
   14270:	ldr	x0, [sp, #24]
   14274:	bl	6d60 <Perl_sv_2mortal@plt>
   14278:	mov	x1, x0
   1427c:	ldr	x0, [sp, #56]
   14280:	str	x1, [x0]
   14284:	b	142bc <XS_POSIX_strtoul+0x284>
   14288:	ldr	x0, [sp, #80]
   1428c:	mov	x1, x0
   14290:	ldr	x0, [sp, #24]
   14294:	bl	70b0 <Perl_newSViv@plt>
   14298:	mov	x1, x0
   1429c:	ldr	x0, [sp, #56]
   142a0:	add	x0, x0, #0x8
   142a4:	str	x0, [sp, #56]
   142a8:	ldr	x0, [sp, #24]
   142ac:	bl	6d60 <Perl_sv_2mortal@plt>
   142b0:	mov	x1, x0
   142b4:	ldr	x0, [sp, #56]
   142b8:	str	x1, [x0]
   142bc:	ldr	x0, [sp, #24]
   142c0:	ldr	x0, [x0, #8]
   142c4:	ldrb	w0, [x0, #34]
   142c8:	and	w0, w0, #0x3
   142cc:	cmp	w0, #0x0
   142d0:	b.eq	142f4 <XS_POSIX_strtoul+0x2bc>  // b.none
   142d4:	ldr	x0, [sp, #24]
   142d8:	ldr	x0, [x0, #8]
   142dc:	ldrb	w0, [x0, #34]
   142e0:	and	w0, w0, #0x3
   142e4:	cmp	w0, #0x3
   142e8:	cset	w0, eq  // eq = none
   142ec:	and	w0, w0, #0xff
   142f0:	b	1430c <XS_POSIX_strtoul+0x2d4>
   142f4:	ldr	x0, [sp, #24]
   142f8:	bl	6f70 <Perl_block_gimme@plt>
   142fc:	and	w0, w0, #0xff
   14300:	cmp	w0, #0x3
   14304:	cset	w0, eq  // eq = none
   14308:	and	w0, w0, #0xff
   1430c:	cmp	w0, #0x0
   14310:	b.eq	1449c <XS_POSIX_strtoul+0x464>  // b.none
   14314:	ldr	x0, [sp, #24]
   14318:	ldr	x1, [x0, #32]
   1431c:	ldr	x0, [sp, #56]
   14320:	sub	x0, x1, x0
   14324:	cmp	x0, #0x0
   14328:	cset	w0, le
   1432c:	and	w0, w0, #0xff
   14330:	and	x0, x0, #0xff
   14334:	cmp	x0, #0x0
   14338:	b.eq	14354 <XS_POSIX_strtoul+0x31c>  // b.none
   1433c:	mov	x3, #0x1                   	// #1
   14340:	ldr	x2, [sp, #56]
   14344:	ldr	x1, [sp, #56]
   14348:	ldr	x0, [sp, #24]
   1434c:	bl	6660 <Perl_stack_grow@plt>
   14350:	str	x0, [sp, #56]
   14354:	ldr	x0, [sp, #48]
   14358:	cmp	x0, #0x0
   1435c:	b.eq	1439c <XS_POSIX_strtoul+0x364>  // b.none
   14360:	ldr	x0, [sp, #48]
   14364:	bl	65c0 <strlen@plt>
   14368:	mov	x1, x0
   1436c:	ldr	x0, [sp, #24]
   14370:	bl	70b0 <Perl_newSViv@plt>
   14374:	mov	x1, x0
   14378:	ldr	x0, [sp, #56]
   1437c:	add	x0, x0, #0x8
   14380:	str	x0, [sp, #56]
   14384:	ldr	x0, [sp, #24]
   14388:	bl	6d60 <Perl_sv_2mortal@plt>
   1438c:	mov	x1, x0
   14390:	ldr	x0, [sp, #56]
   14394:	str	x1, [x0]
   14398:	b	1449c <XS_POSIX_strtoul+0x464>
   1439c:	ldr	x0, [sp, #56]
   143a0:	add	x0, x0, #0x8
   143a4:	str	x0, [sp, #56]
   143a8:	ldr	x0, [sp, #24]
   143ac:	add	x1, x0, #0x150
   143b0:	ldr	x0, [sp, #56]
   143b4:	str	x1, [x0]
   143b8:	b	1449c <XS_POSIX_strtoul+0x464>
   143bc:	bl	70d0 <__errno_location@plt>
   143c0:	mov	x1, x0
   143c4:	mov	w0, #0x16                  	// #22
   143c8:	str	w0, [x1]
   143cc:	ldr	x0, [sp, #56]
   143d0:	add	x0, x0, #0x8
   143d4:	str	x0, [sp, #56]
   143d8:	ldr	x0, [sp, #24]
   143dc:	add	x1, x0, #0x150
   143e0:	ldr	x0, [sp, #56]
   143e4:	str	x1, [x0]
   143e8:	ldr	x0, [sp, #24]
   143ec:	ldr	x0, [x0, #8]
   143f0:	ldrb	w0, [x0, #34]
   143f4:	and	w0, w0, #0x3
   143f8:	cmp	w0, #0x0
   143fc:	b.eq	14420 <XS_POSIX_strtoul+0x3e8>  // b.none
   14400:	ldr	x0, [sp, #24]
   14404:	ldr	x0, [x0, #8]
   14408:	ldrb	w0, [x0, #34]
   1440c:	and	w0, w0, #0x3
   14410:	cmp	w0, #0x3
   14414:	cset	w0, eq  // eq = none
   14418:	and	w0, w0, #0xff
   1441c:	b	14438 <XS_POSIX_strtoul+0x400>
   14420:	ldr	x0, [sp, #24]
   14424:	bl	6f70 <Perl_block_gimme@plt>
   14428:	and	w0, w0, #0xff
   1442c:	cmp	w0, #0x3
   14430:	cset	w0, eq  // eq = none
   14434:	and	w0, w0, #0xff
   14438:	cmp	w0, #0x0
   1443c:	b.eq	1449c <XS_POSIX_strtoul+0x464>  // b.none
   14440:	ldr	x0, [sp, #24]
   14444:	ldr	x1, [x0, #32]
   14448:	ldr	x0, [sp, #56]
   1444c:	sub	x0, x1, x0
   14450:	cmp	x0, #0x0
   14454:	cset	w0, le
   14458:	and	w0, w0, #0xff
   1445c:	and	x0, x0, #0xff
   14460:	cmp	x0, #0x0
   14464:	b.eq	14480 <XS_POSIX_strtoul+0x448>  // b.none
   14468:	mov	x3, #0x1                   	// #1
   1446c:	ldr	x2, [sp, #56]
   14470:	ldr	x1, [sp, #56]
   14474:	ldr	x0, [sp, #24]
   14478:	bl	6660 <Perl_stack_grow@plt>
   1447c:	str	x0, [sp, #56]
   14480:	ldr	x0, [sp, #56]
   14484:	add	x0, x0, #0x8
   14488:	str	x0, [sp, #56]
   1448c:	ldr	x0, [sp, #24]
   14490:	add	x1, x0, #0x150
   14494:	ldr	x0, [sp, #56]
   14498:	str	x1, [x0]
   1449c:	ldr	x0, [sp, #24]
   144a0:	ldr	x1, [sp, #56]
   144a4:	str	x1, [x0]
   144a8:	nop
   144ac:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   144b0:	ldr	x0, [x0, #3992]
   144b4:	ldr	x1, [sp, #88]
   144b8:	ldr	x0, [x0]
   144bc:	eor	x0, x1, x0
   144c0:	cmp	x0, #0x0
   144c4:	b.eq	144cc <XS_POSIX_strtoul+0x494>  // b.none
   144c8:	bl	6a60 <__stack_chk_fail@plt>
   144cc:	ldp	x29, x30, [sp], #96
   144d0:	ret

00000000000144d4 <XS_POSIX_strxfrm>:
   144d4:	stp	x29, x30, [sp, #-128]!
   144d8:	mov	x29, sp
   144dc:	str	x19, [sp, #16]
   144e0:	str	x0, [sp, #40]
   144e4:	str	x1, [sp, #32]
   144e8:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   144ec:	ldr	x0, [x0, #3992]
   144f0:	ldr	x1, [x0]
   144f4:	str	x1, [sp, #120]
   144f8:	mov	x1, #0x0                   	// #0
   144fc:	ldr	x0, [sp, #40]
   14500:	ldr	x0, [x0]
   14504:	str	x0, [sp, #72]
   14508:	ldr	x0, [sp, #40]
   1450c:	bl	739c <S_POPMARK>
   14510:	str	w0, [sp, #48]
   14514:	ldr	x0, [sp, #40]
   14518:	ldr	x1, [x0, #24]
   1451c:	ldr	w0, [sp, #48]
   14520:	add	w2, w0, #0x1
   14524:	str	w2, [sp, #48]
   14528:	sxtw	x0, w0
   1452c:	lsl	x0, x0, #3
   14530:	add	x0, x1, x0
   14534:	str	x0, [sp, #80]
   14538:	ldr	x1, [sp, #72]
   1453c:	ldr	x0, [sp, #80]
   14540:	sub	x0, x1, x0
   14544:	asr	x0, x0, #3
   14548:	str	w0, [sp, #52]
   1454c:	ldr	w0, [sp, #52]
   14550:	cmp	w0, #0x1
   14554:	b.eq	14568 <XS_POSIX_strxfrm+0x94>  // b.none
   14558:	adrp	x0, 1b000 <_fini+0x1fc>
   1455c:	add	x1, x0, #0x7a0
   14560:	ldr	x0, [sp, #32]
   14564:	bl	6b20 <Perl_croak_xs_usage@plt>
   14568:	ldr	x0, [sp, #40]
   1456c:	ldr	x1, [x0, #24]
   14570:	ldrsw	x0, [sp, #48]
   14574:	lsl	x0, x0, #3
   14578:	add	x0, x1, x0
   1457c:	ldr	x0, [x0]
   14580:	str	x0, [sp, #88]
   14584:	ldr	x0, [sp, #88]
   14588:	ldr	w1, [x0, #12]
   1458c:	mov	w0, #0x400                 	// #1024
   14590:	movk	w0, #0x20, lsl #16
   14594:	and	w0, w1, w0
   14598:	cmp	w0, #0x400
   1459c:	b.ne	145bc <XS_POSIX_strxfrm+0xe8>  // b.any
   145a0:	ldr	x0, [sp, #88]
   145a4:	ldr	x0, [x0]
   145a8:	ldr	x0, [x0, #16]
   145ac:	str	x0, [sp, #56]
   145b0:	ldr	x0, [sp, #88]
   145b4:	ldr	x0, [x0, #16]
   145b8:	b	145d4 <XS_POSIX_strxfrm+0x100>
   145bc:	add	x0, sp, #0x38
   145c0:	mov	w3, #0x2                   	// #2
   145c4:	mov	x2, x0
   145c8:	ldr	x1, [sp, #88]
   145cc:	ldr	x0, [sp, #40]
   145d0:	bl	69b0 <Perl_sv_2pv_flags@plt>
   145d4:	str	x0, [sp, #96]
   145d8:	ldr	x0, [sp, #56]
   145dc:	add	x0, x0, #0x1
   145e0:	str	x0, [sp, #56]
   145e4:	ldr	x0, [sp, #56]
   145e8:	lsl	x0, x0, #2
   145ec:	add	x0, x0, #0x1
   145f0:	str	x0, [sp, #104]
   145f4:	ldr	x1, [sp, #104]
   145f8:	ldr	x0, [sp, #40]
   145fc:	bl	67c0 <Perl_newSV@plt>
   14600:	mov	x2, x0
   14604:	ldr	x0, [sp, #40]
   14608:	ldr	x1, [x0, #24]
   1460c:	ldrsw	x0, [sp, #48]
   14610:	lsl	x0, x0, #3
   14614:	add	x19, x1, x0
   14618:	mov	x1, x2
   1461c:	ldr	x0, [sp, #40]
   14620:	bl	6d60 <Perl_sv_2mortal@plt>
   14624:	str	x0, [x19]
   14628:	ldr	x0, [sp, #40]
   1462c:	ldr	x1, [x0, #24]
   14630:	ldrsw	x0, [sp, #48]
   14634:	lsl	x0, x0, #3
   14638:	add	x0, x1, x0
   1463c:	ldr	x0, [x0]
   14640:	ldr	x0, [x0, #16]
   14644:	ldr	x2, [sp, #104]
   14648:	ldr	x1, [sp, #96]
   1464c:	bl	6e10 <strxfrm@plt>
   14650:	str	x0, [sp, #64]
   14654:	ldr	x1, [sp, #64]
   14658:	ldr	x0, [sp, #104]
   1465c:	cmp	x1, x0
   14660:	b.cc	14724 <XS_POSIX_strxfrm+0x250>  // b.lo, b.ul, b.last
   14664:	ldr	x0, [sp, #64]
   14668:	add	x0, x0, #0x1
   1466c:	str	x0, [sp, #64]
   14670:	ldr	x0, [sp, #40]
   14674:	ldr	x1, [x0, #24]
   14678:	ldrsw	x0, [sp, #48]
   1467c:	lsl	x0, x0, #3
   14680:	add	x0, x1, x0
   14684:	ldr	x0, [x0]
   14688:	ldr	w0, [x0, #12]
   1468c:	and	w0, w0, #0x10000000
   14690:	cmp	w0, #0x0
   14694:	b.ne	146c4 <XS_POSIX_strxfrm+0x1f0>  // b.any
   14698:	ldr	x0, [sp, #40]
   1469c:	ldr	x1, [x0, #24]
   146a0:	ldrsw	x0, [sp, #48]
   146a4:	lsl	x0, x0, #3
   146a8:	add	x0, x1, x0
   146ac:	ldr	x0, [x0]
   146b0:	ldr	x0, [x0]
   146b4:	ldr	x0, [x0, #24]
   146b8:	ldr	x1, [sp, #64]
   146bc:	cmp	x1, x0
   146c0:	b.ls	146f0 <XS_POSIX_strxfrm+0x21c>  // b.plast
   146c4:	ldr	x0, [sp, #40]
   146c8:	ldr	x1, [x0, #24]
   146cc:	ldrsw	x0, [sp, #48]
   146d0:	lsl	x0, x0, #3
   146d4:	add	x0, x1, x0
   146d8:	ldr	x0, [x0]
   146dc:	ldr	x2, [sp, #64]
   146e0:	mov	x1, x0
   146e4:	ldr	x0, [sp, #40]
   146e8:	bl	6b60 <Perl_sv_grow@plt>
   146ec:	nop
   146f0:	ldr	x0, [sp, #40]
   146f4:	ldr	x1, [x0, #24]
   146f8:	ldrsw	x0, [sp, #48]
   146fc:	lsl	x0, x0, #3
   14700:	add	x0, x1, x0
   14704:	ldr	x0, [x0]
   14708:	ldr	x0, [x0, #16]
   1470c:	ldr	x2, [sp, #64]
   14710:	ldr	x1, [sp, #96]
   14714:	bl	6e10 <strxfrm@plt>
   14718:	ldr	x0, [sp, #64]
   1471c:	sub	x0, x0, #0x1
   14720:	str	x0, [sp, #64]
   14724:	ldr	x0, [sp, #40]
   14728:	ldr	x1, [x0, #24]
   1472c:	ldrsw	x0, [sp, #48]
   14730:	lsl	x0, x0, #3
   14734:	add	x0, x1, x0
   14738:	ldr	x0, [x0]
   1473c:	ldr	x0, [x0]
   14740:	ldr	x1, [sp, #64]
   14744:	str	x1, [x0, #16]
   14748:	ldr	x0, [sp, #40]
   1474c:	ldr	x1, [x0, #24]
   14750:	ldrsw	x0, [sp, #48]
   14754:	lsl	x0, x0, #3
   14758:	add	x0, x1, x0
   1475c:	ldr	x0, [x0]
   14760:	ldr	w2, [x0, #12]
   14764:	ldr	x0, [sp, #40]
   14768:	ldr	x1, [x0, #24]
   1476c:	ldrsw	x0, [sp, #48]
   14770:	lsl	x0, x0, #3
   14774:	add	x0, x1, x0
   14778:	ldr	x0, [x0]
   1477c:	mov	w1, #0xff                  	// #255
   14780:	movk	w1, #0x5fff, lsl #16
   14784:	and	w1, w2, w1
   14788:	str	w1, [x0, #12]
   1478c:	ldr	x0, [sp, #40]
   14790:	ldr	x1, [x0, #24]
   14794:	ldrsw	x0, [sp, #48]
   14798:	lsl	x0, x0, #3
   1479c:	add	x0, x1, x0
   147a0:	ldr	x0, [x0]
   147a4:	ldr	w2, [x0, #12]
   147a8:	ldr	x0, [sp, #40]
   147ac:	ldr	x1, [x0, #24]
   147b0:	ldrsw	x0, [sp, #48]
   147b4:	lsl	x0, x0, #3
   147b8:	add	x0, x1, x0
   147bc:	ldr	x0, [x0]
   147c0:	mov	w1, #0x4400                	// #17408
   147c4:	orr	w1, w2, w1
   147c8:	str	w1, [x0, #12]
   147cc:	mov	x0, #0x1                   	// #1
   147d0:	str	x0, [sp, #112]
   147d4:	ldr	x0, [sp, #40]
   147d8:	ldr	x1, [x0, #24]
   147dc:	ldrsw	x2, [sp, #48]
   147e0:	ldr	x0, [sp, #112]
   147e4:	add	x0, x2, x0
   147e8:	lsl	x0, x0, #3
   147ec:	sub	x0, x0, #0x8
   147f0:	add	x1, x1, x0
   147f4:	ldr	x0, [sp, #40]
   147f8:	str	x1, [x0]
   147fc:	nop
   14800:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   14804:	ldr	x0, [x0, #3992]
   14808:	ldr	x1, [sp, #120]
   1480c:	ldr	x0, [x0]
   14810:	eor	x0, x1, x0
   14814:	cmp	x0, #0x0
   14818:	b.eq	14820 <XS_POSIX_strxfrm+0x34c>  // b.none
   1481c:	bl	6a60 <__stack_chk_fail@plt>
   14820:	ldr	x19, [sp, #16]
   14824:	ldp	x29, x30, [sp], #128
   14828:	ret

000000000001482c <XS_POSIX_mkfifo>:
   1482c:	stp	x29, x30, [sp, #-112]!
   14830:	mov	x29, sp
   14834:	str	x0, [sp, #24]
   14838:	str	x1, [sp, #16]
   1483c:	ldr	x0, [sp, #24]
   14840:	ldr	x0, [x0]
   14844:	str	x0, [sp, #64]
   14848:	ldr	x0, [sp, #24]
   1484c:	bl	739c <S_POPMARK>
   14850:	str	w0, [sp, #48]
   14854:	ldr	x0, [sp, #24]
   14858:	ldr	x1, [x0, #24]
   1485c:	ldr	w0, [sp, #48]
   14860:	add	w2, w0, #0x1
   14864:	str	w2, [sp, #48]
   14868:	sxtw	x0, w0
   1486c:	lsl	x0, x0, #3
   14870:	add	x0, x1, x0
   14874:	str	x0, [sp, #72]
   14878:	ldr	x1, [sp, #64]
   1487c:	ldr	x0, [sp, #72]
   14880:	sub	x0, x1, x0
   14884:	asr	x0, x0, #3
   14888:	str	w0, [sp, #52]
   1488c:	ldr	x0, [sp, #16]
   14890:	ldr	x0, [x0]
   14894:	str	x0, [sp, #80]
   14898:	ldr	x0, [sp, #80]
   1489c:	ldr	w0, [x0, #40]
   148a0:	str	w0, [sp, #56]
   148a4:	ldr	w0, [sp, #52]
   148a8:	cmp	w0, #0x2
   148ac:	b.eq	148c0 <XS_POSIX_mkfifo+0x94>  // b.none
   148b0:	adrp	x0, 1b000 <_fini+0x1fc>
   148b4:	add	x1, x0, #0x7a8
   148b8:	ldr	x0, [sp, #16]
   148bc:	bl	6b20 <Perl_croak_xs_usage@plt>
   148c0:	ldr	x0, [sp, #24]
   148c4:	ldr	x1, [x0, #24]
   148c8:	ldrsw	x0, [sp, #48]
   148cc:	lsl	x0, x0, #3
   148d0:	add	x0, x1, x0
   148d4:	ldr	x0, [x0]
   148d8:	ldr	w1, [x0, #12]
   148dc:	mov	w0, #0x400                 	// #1024
   148e0:	movk	w0, #0x20, lsl #16
   148e4:	and	w0, w1, w0
   148e8:	cmp	w0, #0x400
   148ec:	b.ne	14910 <XS_POSIX_mkfifo+0xe4>  // b.any
   148f0:	ldr	x0, [sp, #24]
   148f4:	ldr	x1, [x0, #24]
   148f8:	ldrsw	x0, [sp, #48]
   148fc:	lsl	x0, x0, #3
   14900:	add	x0, x1, x0
   14904:	ldr	x0, [x0]
   14908:	ldr	x0, [x0, #16]
   1490c:	b	1493c <XS_POSIX_mkfifo+0x110>
   14910:	ldr	x0, [sp, #24]
   14914:	ldr	x1, [x0, #24]
   14918:	ldrsw	x0, [sp, #48]
   1491c:	lsl	x0, x0, #3
   14920:	add	x0, x1, x0
   14924:	ldr	x0, [x0]
   14928:	mov	w3, #0x2                   	// #2
   1492c:	mov	x2, #0x0                   	// #0
   14930:	mov	x1, x0
   14934:	ldr	x0, [sp, #24]
   14938:	bl	69b0 <Perl_sv_2pv_flags@plt>
   1493c:	str	x0, [sp, #88]
   14940:	ldr	x0, [sp, #24]
   14944:	ldr	x1, [x0, #24]
   14948:	ldrsw	x0, [sp, #48]
   1494c:	add	x0, x0, #0x1
   14950:	lsl	x0, x0, #3
   14954:	add	x0, x1, x0
   14958:	ldr	x0, [x0]
   1495c:	ldr	w1, [x0, #12]
   14960:	mov	w0, #0x200                 	// #512
   14964:	movk	w0, #0x20, lsl #16
   14968:	and	w0, w1, w0
   1496c:	cmp	w0, #0x200
   14970:	b.ne	149a0 <XS_POSIX_mkfifo+0x174>  // b.any
   14974:	ldr	x0, [sp, #24]
   14978:	ldr	x1, [x0, #24]
   1497c:	ldrsw	x0, [sp, #48]
   14980:	add	x0, x0, #0x1
   14984:	lsl	x0, x0, #3
   14988:	add	x0, x1, x0
   1498c:	ldr	x0, [x0]
   14990:	ldr	x0, [x0]
   14994:	ldr	d0, [x0, #40]
   14998:	fcvtzu	w0, d0
   1499c:	b	149d0 <XS_POSIX_mkfifo+0x1a4>
   149a0:	ldr	x0, [sp, #24]
   149a4:	ldr	x1, [x0, #24]
   149a8:	ldrsw	x0, [sp, #48]
   149ac:	add	x0, x0, #0x1
   149b0:	lsl	x0, x0, #3
   149b4:	add	x0, x1, x0
   149b8:	ldr	x0, [x0]
   149bc:	mov	w2, #0x2                   	// #2
   149c0:	mov	x1, x0
   149c4:	ldr	x0, [sp, #24]
   149c8:	bl	6b80 <Perl_sv_2nv_flags@plt>
   149cc:	fcvtzu	w0, d0
   149d0:	str	w0, [sp, #60]
   149d4:	ldr	w0, [sp, #56]
   149d8:	cmp	w0, #0x0
   149dc:	b.eq	149f8 <XS_POSIX_mkfifo+0x1cc>  // b.none
   149e0:	ldr	w0, [sp, #60]
   149e4:	mov	w1, w0
   149e8:	ldr	x0, [sp, #88]
   149ec:	bl	6be0 <access@plt>
   149f0:	str	w0, [sp, #44]
   149f4:	b	14a30 <XS_POSIX_mkfifo+0x204>
   149f8:	ldr	x0, [sp, #24]
   149fc:	ldrb	w0, [x0, #184]
   14a00:	and	x0, x0, #0xff
   14a04:	cmp	x0, #0x0
   14a08:	b.eq	14a20 <XS_POSIX_mkfifo+0x1f4>  // b.none
   14a0c:	adrp	x0, 1b000 <_fini+0x1fc>
   14a10:	add	x2, x0, #0x7b8
   14a14:	mov	x1, #0x0                   	// #0
   14a18:	ldr	x0, [sp, #24]
   14a1c:	bl	7000 <Perl_taint_proper@plt>
   14a20:	ldr	w1, [sp, #60]
   14a24:	ldr	x0, [sp, #88]
   14a28:	bl	67d0 <mkfifo@plt>
   14a2c:	str	w0, [sp, #44]
   14a30:	ldr	x0, [sp, #24]
   14a34:	bl	7160 <Perl_sv_newmortal@plt>
   14a38:	str	x0, [sp, #96]
   14a3c:	ldr	w0, [sp, #44]
   14a40:	cmn	w0, #0x1
   14a44:	b.eq	14a84 <XS_POSIX_mkfifo+0x258>  // b.none
   14a48:	ldr	w0, [sp, #44]
   14a4c:	cmp	w0, #0x0
   14a50:	b.ne	14a70 <XS_POSIX_mkfifo+0x244>  // b.any
   14a54:	mov	x3, #0xa                   	// #10
   14a58:	adrp	x0, 1b000 <_fini+0x1fc>
   14a5c:	add	x2, x0, #0x188
   14a60:	ldr	x1, [sp, #96]
   14a64:	ldr	x0, [sp, #24]
   14a68:	bl	6f10 <Perl_sv_setpvn@plt>
   14a6c:	b	14a84 <XS_POSIX_mkfifo+0x258>
   14a70:	ldrsw	x0, [sp, #44]
   14a74:	mov	x2, x0
   14a78:	ldr	x1, [sp, #96]
   14a7c:	ldr	x0, [sp, #24]
   14a80:	bl	7120 <Perl_sv_setiv@plt>
   14a84:	ldr	x0, [sp, #24]
   14a88:	ldr	x1, [x0, #24]
   14a8c:	ldrsw	x0, [sp, #48]
   14a90:	lsl	x0, x0, #3
   14a94:	add	x0, x1, x0
   14a98:	ldr	x1, [sp, #96]
   14a9c:	str	x1, [x0]
   14aa0:	mov	x0, #0x1                   	// #1
   14aa4:	str	x0, [sp, #104]
   14aa8:	ldr	x0, [sp, #24]
   14aac:	ldr	x1, [x0, #24]
   14ab0:	ldrsw	x2, [sp, #48]
   14ab4:	ldr	x0, [sp, #104]
   14ab8:	add	x0, x2, x0
   14abc:	lsl	x0, x0, #3
   14ac0:	sub	x0, x0, #0x8
   14ac4:	add	x1, x1, x0
   14ac8:	ldr	x0, [sp, #24]
   14acc:	str	x1, [x0]
   14ad0:	nop
   14ad4:	ldp	x29, x30, [sp], #112
   14ad8:	ret

0000000000014adc <XS_POSIX_tcdrain>:
   14adc:	stp	x29, x30, [sp, #-128]!
   14ae0:	mov	x29, sp
   14ae4:	str	x19, [sp, #16]
   14ae8:	str	x0, [sp, #40]
   14aec:	str	x1, [sp, #32]
   14af0:	ldr	x0, [sp, #40]
   14af4:	ldr	x0, [x0]
   14af8:	str	x0, [sp, #80]
   14afc:	ldr	x0, [sp, #40]
   14b00:	bl	739c <S_POPMARK>
   14b04:	str	w0, [sp, #64]
   14b08:	ldr	x0, [sp, #40]
   14b0c:	ldr	x1, [x0, #24]
   14b10:	ldr	w0, [sp, #64]
   14b14:	add	w2, w0, #0x1
   14b18:	str	w2, [sp, #64]
   14b1c:	sxtw	x0, w0
   14b20:	lsl	x0, x0, #3
   14b24:	add	x0, x1, x0
   14b28:	str	x0, [sp, #88]
   14b2c:	ldr	x1, [sp, #80]
   14b30:	ldr	x0, [sp, #88]
   14b34:	sub	x0, x1, x0
   14b38:	asr	x0, x0, #3
   14b3c:	str	w0, [sp, #68]
   14b40:	ldr	x0, [sp, #32]
   14b44:	ldr	x0, [x0]
   14b48:	str	x0, [sp, #96]
   14b4c:	ldr	x0, [sp, #96]
   14b50:	ldr	w0, [x0, #40]
   14b54:	str	w0, [sp, #72]
   14b58:	ldr	w0, [sp, #68]
   14b5c:	cmp	w0, #0x1
   14b60:	b.eq	14b74 <XS_POSIX_tcdrain+0x98>  // b.none
   14b64:	adrp	x0, 1b000 <_fini+0x1fc>
   14b68:	add	x1, x0, #0x730
   14b6c:	ldr	x0, [sp, #32]
   14b70:	bl	6b20 <Perl_croak_xs_usage@plt>
   14b74:	ldr	x0, [sp, #40]
   14b78:	ldr	x1, [x0, #24]
   14b7c:	ldrsw	x0, [sp, #64]
   14b80:	lsl	x0, x0, #3
   14b84:	add	x0, x1, x0
   14b88:	ldr	x0, [x0]
   14b8c:	ldr	w1, [x0, #12]
   14b90:	mov	w0, #0x100                 	// #256
   14b94:	movk	w0, #0x20, lsl #16
   14b98:	and	w0, w1, w0
   14b9c:	cmp	w0, #0x100
   14ba0:	b.ne	14bc8 <XS_POSIX_tcdrain+0xec>  // b.any
   14ba4:	ldr	x0, [sp, #40]
   14ba8:	ldr	x1, [x0, #24]
   14bac:	ldrsw	x0, [sp, #64]
   14bb0:	lsl	x0, x0, #3
   14bb4:	add	x0, x1, x0
   14bb8:	ldr	x0, [x0]
   14bbc:	ldr	x0, [x0]
   14bc0:	ldr	x0, [x0, #32]
   14bc4:	b	14bf0 <XS_POSIX_tcdrain+0x114>
   14bc8:	ldr	x0, [sp, #40]
   14bcc:	ldr	x1, [x0, #24]
   14bd0:	ldrsw	x0, [sp, #64]
   14bd4:	lsl	x0, x0, #3
   14bd8:	add	x0, x1, x0
   14bdc:	ldr	x0, [x0]
   14be0:	mov	w2, #0x2                   	// #2
   14be4:	mov	x1, x0
   14be8:	ldr	x0, [sp, #40]
   14bec:	bl	6560 <Perl_sv_2iv_flags@plt>
   14bf0:	str	w0, [sp, #76]
   14bf4:	ldr	w0, [sp, #76]
   14bf8:	cmp	w0, #0x0
   14bfc:	b.ge	14c78 <XS_POSIX_tcdrain+0x19c>  // b.tcont
   14c00:	bl	70d0 <__errno_location@plt>
   14c04:	mov	x1, x0
   14c08:	mov	w0, #0x9                   	// #9
   14c0c:	str	w0, [x1]
   14c10:	mov	x1, #0xffffffffffffffff    	// #-1
   14c14:	ldr	x0, [sp, #40]
   14c18:	bl	70b0 <Perl_newSViv@plt>
   14c1c:	mov	x2, x0
   14c20:	ldr	x0, [sp, #40]
   14c24:	ldr	x1, [x0, #24]
   14c28:	ldrsw	x0, [sp, #64]
   14c2c:	lsl	x0, x0, #3
   14c30:	add	x19, x1, x0
   14c34:	mov	x1, x2
   14c38:	ldr	x0, [sp, #40]
   14c3c:	bl	6d60 <Perl_sv_2mortal@plt>
   14c40:	str	x0, [x19]
   14c44:	mov	x0, #0x1                   	// #1
   14c48:	str	x0, [sp, #120]
   14c4c:	ldr	x0, [sp, #40]
   14c50:	ldr	x1, [x0, #24]
   14c54:	ldrsw	x2, [sp, #64]
   14c58:	ldr	x0, [sp, #120]
   14c5c:	add	x0, x2, x0
   14c60:	lsl	x0, x0, #3
   14c64:	sub	x0, x0, #0x8
   14c68:	add	x1, x1, x0
   14c6c:	ldr	x0, [sp, #40]
   14c70:	str	x1, [x0]
   14c74:	b	14d80 <XS_POSIX_tcdrain+0x2a4>
   14c78:	ldr	w0, [sp, #76]
   14c7c:	cmp	w0, #0x0
   14c80:	b.lt	14cc4 <XS_POSIX_tcdrain+0x1e8>  // b.tstop
   14c84:	ldr	w0, [sp, #72]
   14c88:	cmp	w0, #0x1
   14c8c:	b.ne	14c9c <XS_POSIX_tcdrain+0x1c0>  // b.any
   14c90:	ldr	w0, [sp, #76]
   14c94:	bl	6a70 <close@plt>
   14c98:	b	14cbc <XS_POSIX_tcdrain+0x1e0>
   14c9c:	ldr	w0, [sp, #72]
   14ca0:	cmp	w0, #0x0
   14ca4:	b.gt	14cb4 <XS_POSIX_tcdrain+0x1d8>
   14ca8:	ldr	w0, [sp, #76]
   14cac:	bl	69d0 <tcdrain@plt>
   14cb0:	b	14cbc <XS_POSIX_tcdrain+0x1e0>
   14cb4:	ldr	w0, [sp, #76]
   14cb8:	bl	6620 <dup@plt>
   14cbc:	str	w0, [sp, #60]
   14cc0:	b	14cdc <XS_POSIX_tcdrain+0x200>
   14cc4:	bl	70d0 <__errno_location@plt>
   14cc8:	mov	x1, x0
   14ccc:	mov	w0, #0x9                   	// #9
   14cd0:	str	w0, [x1]
   14cd4:	mov	w0, #0xffffffff            	// #-1
   14cd8:	str	w0, [sp, #60]
   14cdc:	ldr	x0, [sp, #40]
   14ce0:	bl	7160 <Perl_sv_newmortal@plt>
   14ce4:	str	x0, [sp, #104]
   14ce8:	ldr	w0, [sp, #60]
   14cec:	cmn	w0, #0x1
   14cf0:	b.eq	14d30 <XS_POSIX_tcdrain+0x254>  // b.none
   14cf4:	ldr	w0, [sp, #60]
   14cf8:	cmp	w0, #0x0
   14cfc:	b.ne	14d1c <XS_POSIX_tcdrain+0x240>  // b.any
   14d00:	mov	x3, #0xa                   	// #10
   14d04:	adrp	x0, 1b000 <_fini+0x1fc>
   14d08:	add	x2, x0, #0x188
   14d0c:	ldr	x1, [sp, #104]
   14d10:	ldr	x0, [sp, #40]
   14d14:	bl	6f10 <Perl_sv_setpvn@plt>
   14d18:	b	14d30 <XS_POSIX_tcdrain+0x254>
   14d1c:	ldrsw	x0, [sp, #60]
   14d20:	mov	x2, x0
   14d24:	ldr	x1, [sp, #104]
   14d28:	ldr	x0, [sp, #40]
   14d2c:	bl	7120 <Perl_sv_setiv@plt>
   14d30:	ldr	x0, [sp, #40]
   14d34:	ldr	x1, [x0, #24]
   14d38:	ldrsw	x0, [sp, #64]
   14d3c:	lsl	x0, x0, #3
   14d40:	add	x0, x1, x0
   14d44:	ldr	x1, [sp, #104]
   14d48:	str	x1, [x0]
   14d4c:	mov	x0, #0x1                   	// #1
   14d50:	str	x0, [sp, #112]
   14d54:	ldr	x0, [sp, #40]
   14d58:	ldr	x1, [x0, #24]
   14d5c:	ldrsw	x2, [sp, #64]
   14d60:	ldr	x0, [sp, #112]
   14d64:	add	x0, x2, x0
   14d68:	lsl	x0, x0, #3
   14d6c:	sub	x0, x0, #0x8
   14d70:	add	x1, x1, x0
   14d74:	ldr	x0, [sp, #40]
   14d78:	str	x1, [x0]
   14d7c:	nop
   14d80:	ldr	x19, [sp, #16]
   14d84:	ldp	x29, x30, [sp], #128
   14d88:	ret

0000000000014d8c <XS_POSIX_tcflow>:
   14d8c:	stp	x29, x30, [sp, #-128]!
   14d90:	mov	x29, sp
   14d94:	str	x19, [sp, #16]
   14d98:	str	x0, [sp, #40]
   14d9c:	str	x1, [sp, #32]
   14da0:	ldr	x0, [sp, #40]
   14da4:	ldr	x0, [x0]
   14da8:	str	x0, [sp, #80]
   14dac:	ldr	x0, [sp, #40]
   14db0:	bl	739c <S_POPMARK>
   14db4:	str	w0, [sp, #60]
   14db8:	ldr	x0, [sp, #40]
   14dbc:	ldr	x1, [x0, #24]
   14dc0:	ldr	w0, [sp, #60]
   14dc4:	add	w2, w0, #0x1
   14dc8:	str	w2, [sp, #60]
   14dcc:	sxtw	x0, w0
   14dd0:	lsl	x0, x0, #3
   14dd4:	add	x0, x1, x0
   14dd8:	str	x0, [sp, #88]
   14ddc:	ldr	x1, [sp, #80]
   14de0:	ldr	x0, [sp, #88]
   14de4:	sub	x0, x1, x0
   14de8:	asr	x0, x0, #3
   14dec:	str	w0, [sp, #64]
   14df0:	ldr	x0, [sp, #32]
   14df4:	ldr	x0, [x0]
   14df8:	str	x0, [sp, #96]
   14dfc:	ldr	x0, [sp, #96]
   14e00:	ldr	w0, [x0, #40]
   14e04:	str	w0, [sp, #68]
   14e08:	ldr	w0, [sp, #64]
   14e0c:	cmp	w0, #0x2
   14e10:	b.eq	14e24 <XS_POSIX_tcflow+0x98>  // b.none
   14e14:	adrp	x0, 1b000 <_fini+0x1fc>
   14e18:	add	x1, x0, #0x7c0
   14e1c:	ldr	x0, [sp, #32]
   14e20:	bl	6b20 <Perl_croak_xs_usage@plt>
   14e24:	ldr	x0, [sp, #40]
   14e28:	ldr	x1, [x0, #24]
   14e2c:	ldrsw	x0, [sp, #60]
   14e30:	add	x0, x0, #0x1
   14e34:	lsl	x0, x0, #3
   14e38:	add	x0, x1, x0
   14e3c:	ldr	x0, [x0]
   14e40:	ldr	w1, [x0, #12]
   14e44:	mov	w0, #0x100                 	// #256
   14e48:	movk	w0, #0x20, lsl #16
   14e4c:	and	w0, w1, w0
   14e50:	cmp	w0, #0x100
   14e54:	b.ne	14e80 <XS_POSIX_tcflow+0xf4>  // b.any
   14e58:	ldr	x0, [sp, #40]
   14e5c:	ldr	x1, [x0, #24]
   14e60:	ldrsw	x0, [sp, #60]
   14e64:	add	x0, x0, #0x1
   14e68:	lsl	x0, x0, #3
   14e6c:	add	x0, x1, x0
   14e70:	ldr	x0, [x0]
   14e74:	ldr	x0, [x0]
   14e78:	ldr	x0, [x0, #32]
   14e7c:	b	14eac <XS_POSIX_tcflow+0x120>
   14e80:	ldr	x0, [sp, #40]
   14e84:	ldr	x1, [x0, #24]
   14e88:	ldrsw	x0, [sp, #60]
   14e8c:	add	x0, x0, #0x1
   14e90:	lsl	x0, x0, #3
   14e94:	add	x0, x1, x0
   14e98:	ldr	x0, [x0]
   14e9c:	mov	w2, #0x2                   	// #2
   14ea0:	mov	x1, x0
   14ea4:	ldr	x0, [sp, #40]
   14ea8:	bl	6560 <Perl_sv_2iv_flags@plt>
   14eac:	str	w0, [sp, #72]
   14eb0:	ldr	x0, [sp, #40]
   14eb4:	ldr	x1, [x0, #24]
   14eb8:	ldrsw	x0, [sp, #60]
   14ebc:	lsl	x0, x0, #3
   14ec0:	add	x0, x1, x0
   14ec4:	ldr	x0, [x0]
   14ec8:	ldr	w1, [x0, #12]
   14ecc:	mov	w0, #0x100                 	// #256
   14ed0:	movk	w0, #0x20, lsl #16
   14ed4:	and	w0, w1, w0
   14ed8:	cmp	w0, #0x100
   14edc:	b.ne	14f04 <XS_POSIX_tcflow+0x178>  // b.any
   14ee0:	ldr	x0, [sp, #40]
   14ee4:	ldr	x1, [x0, #24]
   14ee8:	ldrsw	x0, [sp, #60]
   14eec:	lsl	x0, x0, #3
   14ef0:	add	x0, x1, x0
   14ef4:	ldr	x0, [x0]
   14ef8:	ldr	x0, [x0]
   14efc:	ldr	x0, [x0, #32]
   14f00:	b	14f2c <XS_POSIX_tcflow+0x1a0>
   14f04:	ldr	x0, [sp, #40]
   14f08:	ldr	x1, [x0, #24]
   14f0c:	ldrsw	x0, [sp, #60]
   14f10:	lsl	x0, x0, #3
   14f14:	add	x0, x1, x0
   14f18:	ldr	x0, [x0]
   14f1c:	mov	w2, #0x2                   	// #2
   14f20:	mov	x1, x0
   14f24:	ldr	x0, [sp, #40]
   14f28:	bl	6560 <Perl_sv_2iv_flags@plt>
   14f2c:	str	w0, [sp, #76]
   14f30:	ldr	w0, [sp, #76]
   14f34:	cmp	w0, #0x0
   14f38:	b.ge	14fb4 <XS_POSIX_tcflow+0x228>  // b.tcont
   14f3c:	bl	70d0 <__errno_location@plt>
   14f40:	mov	x1, x0
   14f44:	mov	w0, #0x9                   	// #9
   14f48:	str	w0, [x1]
   14f4c:	mov	x1, #0xffffffffffffffff    	// #-1
   14f50:	ldr	x0, [sp, #40]
   14f54:	bl	70b0 <Perl_newSViv@plt>
   14f58:	mov	x2, x0
   14f5c:	ldr	x0, [sp, #40]
   14f60:	ldr	x1, [x0, #24]
   14f64:	ldrsw	x0, [sp, #60]
   14f68:	lsl	x0, x0, #3
   14f6c:	add	x19, x1, x0
   14f70:	mov	x1, x2
   14f74:	ldr	x0, [sp, #40]
   14f78:	bl	6d60 <Perl_sv_2mortal@plt>
   14f7c:	str	x0, [x19]
   14f80:	mov	x0, #0x1                   	// #1
   14f84:	str	x0, [sp, #120]
   14f88:	ldr	x0, [sp, #40]
   14f8c:	ldr	x1, [x0, #24]
   14f90:	ldrsw	x2, [sp, #60]
   14f94:	ldr	x0, [sp, #120]
   14f98:	add	x0, x2, x0
   14f9c:	lsl	x0, x0, #3
   14fa0:	sub	x0, x0, #0x8
   14fa4:	add	x1, x1, x0
   14fa8:	ldr	x0, [sp, #40]
   14fac:	str	x1, [x0]
   14fb0:	b	150c8 <XS_POSIX_tcflow+0x33c>
   14fb4:	ldr	w0, [sp, #72]
   14fb8:	cmp	w0, #0x0
   14fbc:	b.lt	1500c <XS_POSIX_tcflow+0x280>  // b.tstop
   14fc0:	ldr	w0, [sp, #68]
   14fc4:	cmp	w0, #0x1
   14fc8:	b.ne	14fdc <XS_POSIX_tcflow+0x250>  // b.any
   14fcc:	ldr	w1, [sp, #72]
   14fd0:	ldr	w0, [sp, #76]
   14fd4:	bl	6550 <tcflush@plt>
   14fd8:	b	15004 <XS_POSIX_tcflow+0x278>
   14fdc:	ldr	w0, [sp, #68]
   14fe0:	cmp	w0, #0x0
   14fe4:	b.gt	14ff8 <XS_POSIX_tcflow+0x26c>
   14fe8:	ldr	w1, [sp, #72]
   14fec:	ldr	w0, [sp, #76]
   14ff0:	bl	7190 <tcflow@plt>
   14ff4:	b	15004 <XS_POSIX_tcflow+0x278>
   14ff8:	ldr	w1, [sp, #72]
   14ffc:	ldr	w0, [sp, #76]
   15000:	bl	6df0 <tcsendbreak@plt>
   15004:	str	w0, [sp, #56]
   15008:	b	15024 <XS_POSIX_tcflow+0x298>
   1500c:	bl	70d0 <__errno_location@plt>
   15010:	mov	x1, x0
   15014:	mov	w0, #0x16                  	// #22
   15018:	str	w0, [x1]
   1501c:	mov	w0, #0xffffffff            	// #-1
   15020:	str	w0, [sp, #56]
   15024:	ldr	x0, [sp, #40]
   15028:	bl	7160 <Perl_sv_newmortal@plt>
   1502c:	str	x0, [sp, #104]
   15030:	ldr	w0, [sp, #56]
   15034:	cmn	w0, #0x1
   15038:	b.eq	15078 <XS_POSIX_tcflow+0x2ec>  // b.none
   1503c:	ldr	w0, [sp, #56]
   15040:	cmp	w0, #0x0
   15044:	b.ne	15064 <XS_POSIX_tcflow+0x2d8>  // b.any
   15048:	mov	x3, #0xa                   	// #10
   1504c:	adrp	x0, 1b000 <_fini+0x1fc>
   15050:	add	x2, x0, #0x188
   15054:	ldr	x1, [sp, #104]
   15058:	ldr	x0, [sp, #40]
   1505c:	bl	6f10 <Perl_sv_setpvn@plt>
   15060:	b	15078 <XS_POSIX_tcflow+0x2ec>
   15064:	ldrsw	x0, [sp, #56]
   15068:	mov	x2, x0
   1506c:	ldr	x1, [sp, #104]
   15070:	ldr	x0, [sp, #40]
   15074:	bl	7120 <Perl_sv_setiv@plt>
   15078:	ldr	x0, [sp, #40]
   1507c:	ldr	x1, [x0, #24]
   15080:	ldrsw	x0, [sp, #60]
   15084:	lsl	x0, x0, #3
   15088:	add	x0, x1, x0
   1508c:	ldr	x1, [sp, #104]
   15090:	str	x1, [x0]
   15094:	mov	x0, #0x1                   	// #1
   15098:	str	x0, [sp, #112]
   1509c:	ldr	x0, [sp, #40]
   150a0:	ldr	x1, [x0, #24]
   150a4:	ldrsw	x2, [sp, #60]
   150a8:	ldr	x0, [sp, #112]
   150ac:	add	x0, x2, x0
   150b0:	lsl	x0, x0, #3
   150b4:	sub	x0, x0, #0x8
   150b8:	add	x1, x1, x0
   150bc:	ldr	x0, [sp, #40]
   150c0:	str	x1, [x0]
   150c4:	nop
   150c8:	ldr	x19, [sp, #16]
   150cc:	ldp	x29, x30, [sp], #128
   150d0:	ret

00000000000150d4 <XS_POSIX_asctime>:
   150d4:	stp	x29, x30, [sp, #-192]!
   150d8:	mov	x29, sp
   150dc:	str	x0, [sp, #24]
   150e0:	str	x1, [sp, #16]
   150e4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   150e8:	ldr	x0, [x0, #3992]
   150ec:	ldr	x1, [x0]
   150f0:	str	x1, [sp, #184]
   150f4:	mov	x1, #0x0                   	// #0
   150f8:	ldr	x0, [sp, #24]
   150fc:	ldr	x0, [x0]
   15100:	str	x0, [sp, #80]
   15104:	ldr	x0, [sp, #24]
   15108:	bl	739c <S_POPMARK>
   1510c:	str	w0, [sp, #44]
   15110:	ldr	x0, [sp, #24]
   15114:	ldr	x1, [x0, #24]
   15118:	ldr	w0, [sp, #44]
   1511c:	add	w2, w0, #0x1
   15120:	str	w2, [sp, #44]
   15124:	sxtw	x0, w0
   15128:	lsl	x0, x0, #3
   1512c:	add	x0, x1, x0
   15130:	str	x0, [sp, #88]
   15134:	ldr	x1, [sp, #80]
   15138:	ldr	x0, [sp, #88]
   1513c:	sub	x0, x1, x0
   15140:	asr	x0, x0, #3
   15144:	str	w0, [sp, #48]
   15148:	ldr	x0, [sp, #16]
   1514c:	ldr	x0, [x0]
   15150:	str	x0, [sp, #96]
   15154:	ldr	x0, [sp, #96]
   15158:	ldr	w0, [x0, #40]
   1515c:	str	w0, [sp, #52]
   15160:	ldr	w0, [sp, #48]
   15164:	cmp	w0, #0x5
   15168:	b.le	15178 <XS_POSIX_asctime+0xa4>
   1516c:	ldr	w0, [sp, #48]
   15170:	cmp	w0, #0x9
   15174:	b.le	15188 <XS_POSIX_asctime+0xb4>
   15178:	adrp	x0, 1b000 <_fini+0x1fc>
   1517c:	add	x1, x0, #0x7d0
   15180:	ldr	x0, [sp, #16]
   15184:	bl	6b20 <Perl_croak_xs_usage@plt>
   15188:	ldrsw	x0, [sp, #48]
   1518c:	lsl	x0, x0, #3
   15190:	neg	x0, x0
   15194:	ldr	x1, [sp, #80]
   15198:	add	x0, x1, x0
   1519c:	str	x0, [sp, #80]
   151a0:	ldr	x0, [sp, #24]
   151a4:	ldr	x1, [x0, #24]
   151a8:	ldrsw	x0, [sp, #44]
   151ac:	lsl	x0, x0, #3
   151b0:	add	x0, x1, x0
   151b4:	ldr	x0, [x0]
   151b8:	ldr	w1, [x0, #12]
   151bc:	mov	w0, #0x100                 	// #256
   151c0:	movk	w0, #0x20, lsl #16
   151c4:	and	w0, w1, w0
   151c8:	cmp	w0, #0x100
   151cc:	b.ne	151f4 <XS_POSIX_asctime+0x120>  // b.any
   151d0:	ldr	x0, [sp, #24]
   151d4:	ldr	x1, [x0, #24]
   151d8:	ldrsw	x0, [sp, #44]
   151dc:	lsl	x0, x0, #3
   151e0:	add	x0, x1, x0
   151e4:	ldr	x0, [x0]
   151e8:	ldr	x0, [x0]
   151ec:	ldr	x0, [x0, #32]
   151f0:	b	1521c <XS_POSIX_asctime+0x148>
   151f4:	ldr	x0, [sp, #24]
   151f8:	ldr	x1, [x0, #24]
   151fc:	ldrsw	x0, [sp, #44]
   15200:	lsl	x0, x0, #3
   15204:	add	x0, x1, x0
   15208:	ldr	x0, [x0]
   1520c:	mov	w2, #0x2                   	// #2
   15210:	mov	x1, x0
   15214:	ldr	x0, [sp, #24]
   15218:	bl	6560 <Perl_sv_2iv_flags@plt>
   1521c:	str	w0, [sp, #56]
   15220:	ldr	x0, [sp, #24]
   15224:	ldr	x1, [x0, #24]
   15228:	ldrsw	x0, [sp, #44]
   1522c:	add	x0, x0, #0x1
   15230:	lsl	x0, x0, #3
   15234:	add	x0, x1, x0
   15238:	ldr	x0, [x0]
   1523c:	ldr	w1, [x0, #12]
   15240:	mov	w0, #0x100                 	// #256
   15244:	movk	w0, #0x20, lsl #16
   15248:	and	w0, w1, w0
   1524c:	cmp	w0, #0x100
   15250:	b.ne	1527c <XS_POSIX_asctime+0x1a8>  // b.any
   15254:	ldr	x0, [sp, #24]
   15258:	ldr	x1, [x0, #24]
   1525c:	ldrsw	x0, [sp, #44]
   15260:	add	x0, x0, #0x1
   15264:	lsl	x0, x0, #3
   15268:	add	x0, x1, x0
   1526c:	ldr	x0, [x0]
   15270:	ldr	x0, [x0]
   15274:	ldr	x0, [x0, #32]
   15278:	b	152a8 <XS_POSIX_asctime+0x1d4>
   1527c:	ldr	x0, [sp, #24]
   15280:	ldr	x1, [x0, #24]
   15284:	ldrsw	x0, [sp, #44]
   15288:	add	x0, x0, #0x1
   1528c:	lsl	x0, x0, #3
   15290:	add	x0, x1, x0
   15294:	ldr	x0, [x0]
   15298:	mov	w2, #0x2                   	// #2
   1529c:	mov	x1, x0
   152a0:	ldr	x0, [sp, #24]
   152a4:	bl	6560 <Perl_sv_2iv_flags@plt>
   152a8:	str	w0, [sp, #60]
   152ac:	ldr	x0, [sp, #24]
   152b0:	ldr	x1, [x0, #24]
   152b4:	ldrsw	x0, [sp, #44]
   152b8:	add	x0, x0, #0x2
   152bc:	lsl	x0, x0, #3
   152c0:	add	x0, x1, x0
   152c4:	ldr	x0, [x0]
   152c8:	ldr	w1, [x0, #12]
   152cc:	mov	w0, #0x100                 	// #256
   152d0:	movk	w0, #0x20, lsl #16
   152d4:	and	w0, w1, w0
   152d8:	cmp	w0, #0x100
   152dc:	b.ne	15308 <XS_POSIX_asctime+0x234>  // b.any
   152e0:	ldr	x0, [sp, #24]
   152e4:	ldr	x1, [x0, #24]
   152e8:	ldrsw	x0, [sp, #44]
   152ec:	add	x0, x0, #0x2
   152f0:	lsl	x0, x0, #3
   152f4:	add	x0, x1, x0
   152f8:	ldr	x0, [x0]
   152fc:	ldr	x0, [x0]
   15300:	ldr	x0, [x0, #32]
   15304:	b	15334 <XS_POSIX_asctime+0x260>
   15308:	ldr	x0, [sp, #24]
   1530c:	ldr	x1, [x0, #24]
   15310:	ldrsw	x0, [sp, #44]
   15314:	add	x0, x0, #0x2
   15318:	lsl	x0, x0, #3
   1531c:	add	x0, x1, x0
   15320:	ldr	x0, [x0]
   15324:	mov	w2, #0x2                   	// #2
   15328:	mov	x1, x0
   1532c:	ldr	x0, [sp, #24]
   15330:	bl	6560 <Perl_sv_2iv_flags@plt>
   15334:	str	w0, [sp, #64]
   15338:	ldr	x0, [sp, #24]
   1533c:	ldr	x1, [x0, #24]
   15340:	ldrsw	x0, [sp, #44]
   15344:	add	x0, x0, #0x3
   15348:	lsl	x0, x0, #3
   1534c:	add	x0, x1, x0
   15350:	ldr	x0, [x0]
   15354:	ldr	w1, [x0, #12]
   15358:	mov	w0, #0x100                 	// #256
   1535c:	movk	w0, #0x20, lsl #16
   15360:	and	w0, w1, w0
   15364:	cmp	w0, #0x100
   15368:	b.ne	15394 <XS_POSIX_asctime+0x2c0>  // b.any
   1536c:	ldr	x0, [sp, #24]
   15370:	ldr	x1, [x0, #24]
   15374:	ldrsw	x0, [sp, #44]
   15378:	add	x0, x0, #0x3
   1537c:	lsl	x0, x0, #3
   15380:	add	x0, x1, x0
   15384:	ldr	x0, [x0]
   15388:	ldr	x0, [x0]
   1538c:	ldr	x0, [x0, #32]
   15390:	b	153c0 <XS_POSIX_asctime+0x2ec>
   15394:	ldr	x0, [sp, #24]
   15398:	ldr	x1, [x0, #24]
   1539c:	ldrsw	x0, [sp, #44]
   153a0:	add	x0, x0, #0x3
   153a4:	lsl	x0, x0, #3
   153a8:	add	x0, x1, x0
   153ac:	ldr	x0, [x0]
   153b0:	mov	w2, #0x2                   	// #2
   153b4:	mov	x1, x0
   153b8:	ldr	x0, [sp, #24]
   153bc:	bl	6560 <Perl_sv_2iv_flags@plt>
   153c0:	str	w0, [sp, #68]
   153c4:	ldr	x0, [sp, #24]
   153c8:	ldr	x1, [x0, #24]
   153cc:	ldrsw	x0, [sp, #44]
   153d0:	add	x0, x0, #0x4
   153d4:	lsl	x0, x0, #3
   153d8:	add	x0, x1, x0
   153dc:	ldr	x0, [x0]
   153e0:	ldr	w1, [x0, #12]
   153e4:	mov	w0, #0x100                 	// #256
   153e8:	movk	w0, #0x20, lsl #16
   153ec:	and	w0, w1, w0
   153f0:	cmp	w0, #0x100
   153f4:	b.ne	15420 <XS_POSIX_asctime+0x34c>  // b.any
   153f8:	ldr	x0, [sp, #24]
   153fc:	ldr	x1, [x0, #24]
   15400:	ldrsw	x0, [sp, #44]
   15404:	add	x0, x0, #0x4
   15408:	lsl	x0, x0, #3
   1540c:	add	x0, x1, x0
   15410:	ldr	x0, [x0]
   15414:	ldr	x0, [x0]
   15418:	ldr	x0, [x0, #32]
   1541c:	b	1544c <XS_POSIX_asctime+0x378>
   15420:	ldr	x0, [sp, #24]
   15424:	ldr	x1, [x0, #24]
   15428:	ldrsw	x0, [sp, #44]
   1542c:	add	x0, x0, #0x4
   15430:	lsl	x0, x0, #3
   15434:	add	x0, x1, x0
   15438:	ldr	x0, [x0]
   1543c:	mov	w2, #0x2                   	// #2
   15440:	mov	x1, x0
   15444:	ldr	x0, [sp, #24]
   15448:	bl	6560 <Perl_sv_2iv_flags@plt>
   1544c:	str	w0, [sp, #72]
   15450:	ldr	x0, [sp, #24]
   15454:	ldr	x1, [x0, #24]
   15458:	ldrsw	x0, [sp, #44]
   1545c:	add	x0, x0, #0x5
   15460:	lsl	x0, x0, #3
   15464:	add	x0, x1, x0
   15468:	ldr	x0, [x0]
   1546c:	ldr	w1, [x0, #12]
   15470:	mov	w0, #0x100                 	// #256
   15474:	movk	w0, #0x20, lsl #16
   15478:	and	w0, w1, w0
   1547c:	cmp	w0, #0x100
   15480:	b.ne	154ac <XS_POSIX_asctime+0x3d8>  // b.any
   15484:	ldr	x0, [sp, #24]
   15488:	ldr	x1, [x0, #24]
   1548c:	ldrsw	x0, [sp, #44]
   15490:	add	x0, x0, #0x5
   15494:	lsl	x0, x0, #3
   15498:	add	x0, x1, x0
   1549c:	ldr	x0, [x0]
   154a0:	ldr	x0, [x0]
   154a4:	ldr	x0, [x0, #32]
   154a8:	b	154d8 <XS_POSIX_asctime+0x404>
   154ac:	ldr	x0, [sp, #24]
   154b0:	ldr	x1, [x0, #24]
   154b4:	ldrsw	x0, [sp, #44]
   154b8:	add	x0, x0, #0x5
   154bc:	lsl	x0, x0, #3
   154c0:	add	x0, x1, x0
   154c4:	ldr	x0, [x0]
   154c8:	mov	w2, #0x2                   	// #2
   154cc:	mov	x1, x0
   154d0:	ldr	x0, [sp, #24]
   154d4:	bl	6560 <Perl_sv_2iv_flags@plt>
   154d8:	str	w0, [sp, #76]
   154dc:	ldr	w0, [sp, #48]
   154e0:	cmp	w0, #0x6
   154e4:	b.gt	154f0 <XS_POSIX_asctime+0x41c>
   154e8:	str	wzr, [sp, #32]
   154ec:	b	1557c <XS_POSIX_asctime+0x4a8>
   154f0:	ldr	x0, [sp, #24]
   154f4:	ldr	x1, [x0, #24]
   154f8:	ldrsw	x0, [sp, #44]
   154fc:	add	x0, x0, #0x6
   15500:	lsl	x0, x0, #3
   15504:	add	x0, x1, x0
   15508:	ldr	x0, [x0]
   1550c:	ldr	w1, [x0, #12]
   15510:	mov	w0, #0x100                 	// #256
   15514:	movk	w0, #0x20, lsl #16
   15518:	and	w0, w1, w0
   1551c:	cmp	w0, #0x100
   15520:	b.ne	1554c <XS_POSIX_asctime+0x478>  // b.any
   15524:	ldr	x0, [sp, #24]
   15528:	ldr	x1, [x0, #24]
   1552c:	ldrsw	x0, [sp, #44]
   15530:	add	x0, x0, #0x6
   15534:	lsl	x0, x0, #3
   15538:	add	x0, x1, x0
   1553c:	ldr	x0, [x0]
   15540:	ldr	x0, [x0]
   15544:	ldr	x0, [x0, #32]
   15548:	b	15578 <XS_POSIX_asctime+0x4a4>
   1554c:	ldr	x0, [sp, #24]
   15550:	ldr	x1, [x0, #24]
   15554:	ldrsw	x0, [sp, #44]
   15558:	add	x0, x0, #0x6
   1555c:	lsl	x0, x0, #3
   15560:	add	x0, x1, x0
   15564:	ldr	x0, [x0]
   15568:	mov	w2, #0x2                   	// #2
   1556c:	mov	x1, x0
   15570:	ldr	x0, [sp, #24]
   15574:	bl	6560 <Perl_sv_2iv_flags@plt>
   15578:	str	w0, [sp, #32]
   1557c:	ldr	w0, [sp, #48]
   15580:	cmp	w0, #0x7
   15584:	b.gt	15590 <XS_POSIX_asctime+0x4bc>
   15588:	str	wzr, [sp, #36]
   1558c:	b	1561c <XS_POSIX_asctime+0x548>
   15590:	ldr	x0, [sp, #24]
   15594:	ldr	x1, [x0, #24]
   15598:	ldrsw	x0, [sp, #44]
   1559c:	add	x0, x0, #0x7
   155a0:	lsl	x0, x0, #3
   155a4:	add	x0, x1, x0
   155a8:	ldr	x0, [x0]
   155ac:	ldr	w1, [x0, #12]
   155b0:	mov	w0, #0x100                 	// #256
   155b4:	movk	w0, #0x20, lsl #16
   155b8:	and	w0, w1, w0
   155bc:	cmp	w0, #0x100
   155c0:	b.ne	155ec <XS_POSIX_asctime+0x518>  // b.any
   155c4:	ldr	x0, [sp, #24]
   155c8:	ldr	x1, [x0, #24]
   155cc:	ldrsw	x0, [sp, #44]
   155d0:	add	x0, x0, #0x7
   155d4:	lsl	x0, x0, #3
   155d8:	add	x0, x1, x0
   155dc:	ldr	x0, [x0]
   155e0:	ldr	x0, [x0]
   155e4:	ldr	x0, [x0, #32]
   155e8:	b	15618 <XS_POSIX_asctime+0x544>
   155ec:	ldr	x0, [sp, #24]
   155f0:	ldr	x1, [x0, #24]
   155f4:	ldrsw	x0, [sp, #44]
   155f8:	add	x0, x0, #0x7
   155fc:	lsl	x0, x0, #3
   15600:	add	x0, x1, x0
   15604:	ldr	x0, [x0]
   15608:	mov	w2, #0x2                   	// #2
   1560c:	mov	x1, x0
   15610:	ldr	x0, [sp, #24]
   15614:	bl	6560 <Perl_sv_2iv_flags@plt>
   15618:	str	w0, [sp, #36]
   1561c:	ldr	w0, [sp, #48]
   15620:	cmp	w0, #0x8
   15624:	b.gt	15634 <XS_POSIX_asctime+0x560>
   15628:	mov	w0, #0xffffffff            	// #-1
   1562c:	str	w0, [sp, #40]
   15630:	b	156c0 <XS_POSIX_asctime+0x5ec>
   15634:	ldr	x0, [sp, #24]
   15638:	ldr	x1, [x0, #24]
   1563c:	ldrsw	x0, [sp, #44]
   15640:	add	x0, x0, #0x8
   15644:	lsl	x0, x0, #3
   15648:	add	x0, x1, x0
   1564c:	ldr	x0, [x0]
   15650:	ldr	w1, [x0, #12]
   15654:	mov	w0, #0x100                 	// #256
   15658:	movk	w0, #0x20, lsl #16
   1565c:	and	w0, w1, w0
   15660:	cmp	w0, #0x100
   15664:	b.ne	15690 <XS_POSIX_asctime+0x5bc>  // b.any
   15668:	ldr	x0, [sp, #24]
   1566c:	ldr	x1, [x0, #24]
   15670:	ldrsw	x0, [sp, #44]
   15674:	add	x0, x0, #0x8
   15678:	lsl	x0, x0, #3
   1567c:	add	x0, x1, x0
   15680:	ldr	x0, [x0]
   15684:	ldr	x0, [x0]
   15688:	ldr	x0, [x0, #32]
   1568c:	b	156bc <XS_POSIX_asctime+0x5e8>
   15690:	ldr	x0, [sp, #24]
   15694:	ldr	x1, [x0, #24]
   15698:	ldrsw	x0, [sp, #44]
   1569c:	add	x0, x0, #0x8
   156a0:	lsl	x0, x0, #3
   156a4:	add	x0, x1, x0
   156a8:	ldr	x0, [x0]
   156ac:	mov	w2, #0x2                   	// #2
   156b0:	mov	x1, x0
   156b4:	ldr	x0, [sp, #24]
   156b8:	bl	6560 <Perl_sv_2iv_flags@plt>
   156bc:	str	w0, [sp, #40]
   156c0:	ldr	x0, [sp, #24]
   156c4:	ldr	x0, [x0, #8]
   156c8:	ldrb	w0, [x0, #35]
   156cc:	and	w0, w0, #0x4
   156d0:	cmp	w0, #0x0
   156d4:	b.eq	156fc <XS_POSIX_asctime+0x628>  // b.none
   156d8:	ldr	x0, [sp, #24]
   156dc:	ldr	x1, [x0, #16]
   156e0:	ldr	x0, [sp, #24]
   156e4:	ldr	x0, [x0, #8]
   156e8:	ldr	x0, [x0, #24]
   156ec:	lsl	x0, x0, #3
   156f0:	add	x0, x1, x0
   156f4:	ldr	x0, [x0]
   156f8:	b	15704 <XS_POSIX_asctime+0x630>
   156fc:	ldr	x0, [sp, #24]
   15700:	bl	7160 <Perl_sv_newmortal@plt>
   15704:	str	x0, [sp, #104]
   15708:	add	x0, sp, #0x80
   1570c:	mov	x1, x0
   15710:	ldr	x0, [sp, #24]
   15714:	bl	6a40 <Perl_init_tm@plt>
   15718:	ldr	w0, [sp, #56]
   1571c:	str	w0, [sp, #128]
   15720:	ldr	w0, [sp, #60]
   15724:	str	w0, [sp, #132]
   15728:	ldr	w0, [sp, #64]
   1572c:	str	w0, [sp, #136]
   15730:	ldr	w0, [sp, #68]
   15734:	str	w0, [sp, #140]
   15738:	ldr	w0, [sp, #72]
   1573c:	str	w0, [sp, #144]
   15740:	ldr	w0, [sp, #76]
   15744:	str	w0, [sp, #148]
   15748:	ldr	w0, [sp, #32]
   1574c:	str	w0, [sp, #152]
   15750:	ldr	w0, [sp, #36]
   15754:	str	w0, [sp, #156]
   15758:	ldr	w0, [sp, #40]
   1575c:	str	w0, [sp, #160]
   15760:	ldr	w0, [sp, #52]
   15764:	cmp	w0, #0x0
   15768:	b.eq	157fc <XS_POSIX_asctime+0x728>  // b.none
   1576c:	add	x0, sp, #0x80
   15770:	bl	6af0 <mktime@plt>
   15774:	str	x0, [sp, #112]
   15778:	ldr	x0, [sp, #112]
   1577c:	cmn	x0, #0x1
   15780:	b.ne	157c0 <XS_POSIX_asctime+0x6ec>  // b.any
   15784:	ldr	x0, [sp, #104]
   15788:	ldr	w1, [x0, #12]
   1578c:	mov	w0, #0xff                  	// #255
   15790:	movk	w0, #0x5fff, lsl #16
   15794:	and	w1, w1, w0
   15798:	ldr	x0, [sp, #104]
   1579c:	str	w1, [x0, #12]
   157a0:	ldr	x0, [sp, #104]
   157a4:	ldr	w0, [x0, #12]
   157a8:	and	w0, w0, #0x2000000
   157ac:	cmp	w0, #0x0
   157b0:	b.eq	15820 <XS_POSIX_asctime+0x74c>  // b.none
   157b4:	ldr	x0, [sp, #104]
   157b8:	bl	6ac0 <Perl_sv_backoff@plt>
   157bc:	b	15820 <XS_POSIX_asctime+0x74c>
   157c0:	ldr	x0, [sp, #112]
   157c4:	cmp	x0, #0x0
   157c8:	b.ne	157e8 <XS_POSIX_asctime+0x714>  // b.any
   157cc:	mov	x3, #0xa                   	// #10
   157d0:	adrp	x0, 1b000 <_fini+0x1fc>
   157d4:	add	x2, x0, #0x188
   157d8:	ldr	x1, [sp, #104]
   157dc:	ldr	x0, [sp, #24]
   157e0:	bl	6f10 <Perl_sv_setpvn@plt>
   157e4:	b	15820 <XS_POSIX_asctime+0x74c>
   157e8:	ldr	x2, [sp, #112]
   157ec:	ldr	x1, [sp, #104]
   157f0:	ldr	x0, [sp, #24]
   157f4:	bl	7120 <Perl_sv_setiv@plt>
   157f8:	b	15820 <XS_POSIX_asctime+0x74c>
   157fc:	ldr	x0, [sp, #24]
   15800:	ldr	x0, [x0, #2776]
   15804:	ldr	x1, [x0]
   15808:	add	x0, sp, #0x80
   1580c:	bl	7130 <asctime_r@plt>
   15810:	mov	x2, x0
   15814:	ldr	x1, [sp, #104]
   15818:	ldr	x0, [sp, #24]
   1581c:	bl	6910 <Perl_sv_setpv@plt>
   15820:	ldr	x0, [sp, #24]
   15824:	ldr	x1, [x0, #24]
   15828:	ldrsw	x0, [sp, #44]
   1582c:	lsl	x0, x0, #3
   15830:	add	x0, x1, x0
   15834:	ldr	x1, [sp, #104]
   15838:	str	x1, [x0]
   1583c:	mov	x0, #0x1                   	// #1
   15840:	str	x0, [sp, #120]
   15844:	ldr	x0, [sp, #24]
   15848:	ldr	x1, [x0, #24]
   1584c:	ldrsw	x2, [sp, #44]
   15850:	ldr	x0, [sp, #120]
   15854:	add	x0, x2, x0
   15858:	lsl	x0, x0, #3
   1585c:	sub	x0, x0, #0x8
   15860:	add	x1, x1, x0
   15864:	ldr	x0, [sp, #24]
   15868:	str	x1, [x0]
   1586c:	nop
   15870:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   15874:	ldr	x0, [x0, #3992]
   15878:	ldr	x1, [sp, #184]
   1587c:	ldr	x0, [x0]
   15880:	eor	x0, x1, x0
   15884:	cmp	x0, #0x0
   15888:	b.eq	15890 <XS_POSIX_asctime+0x7bc>  // b.none
   1588c:	bl	6a60 <__stack_chk_fail@plt>
   15890:	ldp	x29, x30, [sp], #192
   15894:	ret

0000000000015898 <XS_POSIX_clock>:
   15898:	stp	x29, x30, [sp, #-96]!
   1589c:	mov	x29, sp
   158a0:	str	x0, [sp, #24]
   158a4:	str	x1, [sp, #16]
   158a8:	ldr	x0, [sp, #24]
   158ac:	ldr	x0, [x0]
   158b0:	str	x0, [sp, #48]
   158b4:	ldr	x0, [sp, #24]
   158b8:	bl	739c <S_POPMARK>
   158bc:	str	w0, [sp, #40]
   158c0:	ldr	x0, [sp, #24]
   158c4:	ldr	x1, [x0, #24]
   158c8:	ldr	w0, [sp, #40]
   158cc:	add	w2, w0, #0x1
   158d0:	str	w2, [sp, #40]
   158d4:	sxtw	x0, w0
   158d8:	lsl	x0, x0, #3
   158dc:	add	x0, x1, x0
   158e0:	str	x0, [sp, #56]
   158e4:	ldr	x1, [sp, #48]
   158e8:	ldr	x0, [sp, #56]
   158ec:	sub	x0, x1, x0
   158f0:	asr	x0, x0, #3
   158f4:	str	w0, [sp, #44]
   158f8:	ldr	w0, [sp, #44]
   158fc:	cmp	w0, #0x0
   15900:	b.eq	15914 <XS_POSIX_clock+0x7c>  // b.none
   15904:	adrp	x0, 1b000 <_fini+0x1fc>
   15908:	add	x1, x0, #0x3f0
   1590c:	ldr	x0, [sp, #16]
   15910:	bl	6b20 <Perl_croak_xs_usage@plt>
   15914:	ldr	x0, [sp, #24]
   15918:	ldr	x0, [x0, #8]
   1591c:	ldrb	w0, [x0, #35]
   15920:	and	w0, w0, #0x4
   15924:	cmp	w0, #0x0
   15928:	b.eq	15950 <XS_POSIX_clock+0xb8>  // b.none
   1592c:	ldr	x0, [sp, #24]
   15930:	ldr	x1, [x0, #16]
   15934:	ldr	x0, [sp, #24]
   15938:	ldr	x0, [x0, #8]
   1593c:	ldr	x0, [x0, #24]
   15940:	lsl	x0, x0, #3
   15944:	add	x0, x1, x0
   15948:	ldr	x0, [x0]
   1594c:	b	15958 <XS_POSIX_clock+0xc0>
   15950:	ldr	x0, [sp, #24]
   15954:	bl	7160 <Perl_sv_newmortal@plt>
   15958:	str	x0, [sp, #64]
   1595c:	bl	65d0 <clock@plt>
   15960:	str	x0, [sp, #72]
   15964:	ldr	x0, [sp, #24]
   15968:	ldr	x1, [x0, #24]
   1596c:	ldrsw	x0, [sp, #40]
   15970:	lsl	x0, x0, #3
   15974:	sub	x0, x0, #0x8
   15978:	add	x0, x1, x0
   1597c:	str	x0, [sp, #48]
   15980:	ldr	x0, [sp, #72]
   15984:	str	x0, [sp, #80]
   15988:	ldr	x0, [sp, #64]
   1598c:	ldr	w1, [x0, #12]
   15990:	mov	w0, #0x8ff                 	// #2303
   15994:	movk	w0, #0x9981, lsl #16
   15998:	and	w0, w1, w0
   1599c:	cmp	w0, #0x1
   159a0:	cset	w0, eq  // eq = none
   159a4:	and	w0, w0, #0xff
   159a8:	mov	w1, w0
   159ac:	ldr	x0, [sp, #24]
   159b0:	ldrb	w0, [x0, #185]
   159b4:	eor	w0, w0, #0x1
   159b8:	and	w0, w0, #0xff
   159bc:	and	w0, w1, w0
   159c0:	cmp	w0, #0x0
   159c4:	cset	w0, ne  // ne = any
   159c8:	and	w0, w0, #0xff
   159cc:	and	x0, x0, #0xff
   159d0:	cmp	x0, #0x0
   159d4:	b.eq	15a00 <XS_POSIX_clock+0x168>  // b.none
   159d8:	ldr	x0, [sp, #64]
   159dc:	ldr	w1, [x0, #12]
   159e0:	mov	w0, #0x1100                	// #4352
   159e4:	orr	w1, w1, w0
   159e8:	ldr	x0, [sp, #64]
   159ec:	str	w1, [x0, #12]
   159f0:	ldr	x0, [sp, #64]
   159f4:	ldr	x1, [sp, #80]
   159f8:	str	x1, [x0, #16]
   159fc:	b	15a10 <XS_POSIX_clock+0x178>
   15a00:	ldr	x2, [sp, #80]
   15a04:	ldr	x1, [sp, #64]
   15a08:	ldr	x0, [sp, #24]
   15a0c:	bl	6880 <Perl_sv_setiv_mg@plt>
   15a10:	ldr	x0, [sp, #48]
   15a14:	add	x0, x0, #0x8
   15a18:	str	x0, [sp, #48]
   15a1c:	ldr	x0, [sp, #48]
   15a20:	ldr	x1, [sp, #64]
   15a24:	str	x1, [x0]
   15a28:	mov	x0, #0x1                   	// #1
   15a2c:	str	x0, [sp, #88]
   15a30:	ldr	x0, [sp, #24]
   15a34:	ldr	x1, [x0, #24]
   15a38:	ldrsw	x2, [sp, #40]
   15a3c:	ldr	x0, [sp, #88]
   15a40:	add	x0, x2, x0
   15a44:	lsl	x0, x0, #3
   15a48:	sub	x0, x0, #0x8
   15a4c:	add	x1, x1, x0
   15a50:	ldr	x0, [sp, #24]
   15a54:	str	x1, [x0]
   15a58:	nop
   15a5c:	ldp	x29, x30, [sp], #96
   15a60:	ret

0000000000015a64 <XS_POSIX_ctime>:
   15a64:	stp	x29, x30, [sp, #-96]!
   15a68:	mov	x29, sp
   15a6c:	str	x0, [sp, #24]
   15a70:	str	x1, [sp, #16]
   15a74:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   15a78:	ldr	x0, [x0, #3992]
   15a7c:	ldr	x1, [x0]
   15a80:	str	x1, [sp, #88]
   15a84:	mov	x1, #0x0                   	// #0
   15a88:	ldr	x0, [sp, #24]
   15a8c:	ldr	x0, [x0]
   15a90:	str	x0, [sp, #48]
   15a94:	ldr	x0, [sp, #24]
   15a98:	bl	739c <S_POPMARK>
   15a9c:	str	w0, [sp, #32]
   15aa0:	ldr	x0, [sp, #24]
   15aa4:	ldr	x1, [x0, #24]
   15aa8:	ldr	w0, [sp, #32]
   15aac:	add	w2, w0, #0x1
   15ab0:	str	w2, [sp, #32]
   15ab4:	sxtw	x0, w0
   15ab8:	lsl	x0, x0, #3
   15abc:	add	x0, x1, x0
   15ac0:	str	x0, [sp, #56]
   15ac4:	ldr	x1, [sp, #48]
   15ac8:	ldr	x0, [sp, #56]
   15acc:	sub	x0, x1, x0
   15ad0:	asr	x0, x0, #3
   15ad4:	str	w0, [sp, #36]
   15ad8:	ldr	w0, [sp, #36]
   15adc:	cmp	w0, #0x1
   15ae0:	b.eq	15af4 <XS_POSIX_ctime+0x90>  // b.none
   15ae4:	adrp	x0, 1b000 <_fini+0x1fc>
   15ae8:	add	x1, x0, #0x810
   15aec:	ldr	x0, [sp, #16]
   15af0:	bl	6b20 <Perl_croak_xs_usage@plt>
   15af4:	ldr	x0, [sp, #24]
   15af8:	ldr	x1, [x0, #24]
   15afc:	ldrsw	x0, [sp, #32]
   15b00:	lsl	x0, x0, #3
   15b04:	add	x0, x1, x0
   15b08:	ldr	x0, [x0]
   15b0c:	ldr	w1, [x0, #12]
   15b10:	mov	w0, #0x200                 	// #512
   15b14:	movk	w0, #0x20, lsl #16
   15b18:	and	w0, w1, w0
   15b1c:	cmp	w0, #0x200
   15b20:	b.ne	15b4c <XS_POSIX_ctime+0xe8>  // b.any
   15b24:	ldr	x0, [sp, #24]
   15b28:	ldr	x1, [x0, #24]
   15b2c:	ldrsw	x0, [sp, #32]
   15b30:	lsl	x0, x0, #3
   15b34:	add	x0, x1, x0
   15b38:	ldr	x0, [x0]
   15b3c:	ldr	x0, [x0]
   15b40:	ldr	d0, [x0, #40]
   15b44:	fcvtzs	d0, d0
   15b48:	b	15b78 <XS_POSIX_ctime+0x114>
   15b4c:	ldr	x0, [sp, #24]
   15b50:	ldr	x1, [x0, #24]
   15b54:	ldrsw	x0, [sp, #32]
   15b58:	lsl	x0, x0, #3
   15b5c:	add	x0, x1, x0
   15b60:	ldr	x0, [x0]
   15b64:	mov	w2, #0x2                   	// #2
   15b68:	mov	x1, x0
   15b6c:	ldr	x0, [sp, #24]
   15b70:	bl	6b80 <Perl_sv_2nv_flags@plt>
   15b74:	fcvtzs	d0, d0
   15b78:	str	d0, [sp, #40]
   15b7c:	ldr	x0, [sp, #24]
   15b80:	ldr	x0, [x0, #8]
   15b84:	ldrb	w0, [x0, #35]
   15b88:	and	w0, w0, #0x4
   15b8c:	cmp	w0, #0x0
   15b90:	b.eq	15bb8 <XS_POSIX_ctime+0x154>  // b.none
   15b94:	ldr	x0, [sp, #24]
   15b98:	ldr	x1, [x0, #16]
   15b9c:	ldr	x0, [sp, #24]
   15ba0:	ldr	x0, [x0, #8]
   15ba4:	ldr	x0, [x0, #24]
   15ba8:	lsl	x0, x0, #3
   15bac:	add	x0, x1, x0
   15bb0:	ldr	x0, [x0]
   15bb4:	b	15bc0 <XS_POSIX_ctime+0x15c>
   15bb8:	ldr	x0, [sp, #24]
   15bbc:	bl	7160 <Perl_sv_newmortal@plt>
   15bc0:	str	x0, [sp, #64]
   15bc4:	ldr	x0, [sp, #24]
   15bc8:	ldr	x0, [x0, #2776]
   15bcc:	ldr	x1, [x0, #24]
   15bd0:	add	x0, sp, #0x28
   15bd4:	bl	6890 <ctime_r@plt>
   15bd8:	str	x0, [sp, #72]
   15bdc:	ldr	x2, [sp, #72]
   15be0:	ldr	x1, [sp, #64]
   15be4:	ldr	x0, [sp, #24]
   15be8:	bl	6910 <Perl_sv_setpv@plt>
   15bec:	ldr	x0, [sp, #24]
   15bf0:	ldr	x1, [x0, #24]
   15bf4:	ldrsw	x0, [sp, #32]
   15bf8:	lsl	x0, x0, #3
   15bfc:	sub	x0, x0, #0x8
   15c00:	add	x0, x1, x0
   15c04:	str	x0, [sp, #48]
   15c08:	ldr	x0, [sp, #64]
   15c0c:	ldr	w0, [x0, #12]
   15c10:	lsr	w0, w0, #22
   15c14:	mov	w0, w0
   15c18:	and	x0, x0, #0x1
   15c1c:	cmp	x0, #0x0
   15c20:	b.eq	15c30 <XS_POSIX_ctime+0x1cc>  // b.none
   15c24:	ldr	x1, [sp, #64]
   15c28:	ldr	x0, [sp, #24]
   15c2c:	bl	6d40 <Perl_mg_set@plt>
   15c30:	ldr	x0, [sp, #48]
   15c34:	add	x0, x0, #0x8
   15c38:	str	x0, [sp, #48]
   15c3c:	ldr	x0, [sp, #48]
   15c40:	ldr	x1, [sp, #64]
   15c44:	str	x1, [x0]
   15c48:	mov	x0, #0x1                   	// #1
   15c4c:	str	x0, [sp, #80]
   15c50:	ldr	x0, [sp, #24]
   15c54:	ldr	x1, [x0, #24]
   15c58:	ldrsw	x2, [sp, #32]
   15c5c:	ldr	x0, [sp, #80]
   15c60:	add	x0, x2, x0
   15c64:	lsl	x0, x0, #3
   15c68:	sub	x0, x0, #0x8
   15c6c:	add	x1, x1, x0
   15c70:	ldr	x0, [sp, #24]
   15c74:	str	x1, [x0]
   15c78:	nop
   15c7c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   15c80:	ldr	x0, [x0, #3992]
   15c84:	ldr	x1, [sp, #88]
   15c88:	ldr	x0, [x0]
   15c8c:	eor	x0, x1, x0
   15c90:	cmp	x0, #0x0
   15c94:	b.eq	15c9c <XS_POSIX_ctime+0x238>  // b.none
   15c98:	bl	6a60 <__stack_chk_fail@plt>
   15c9c:	ldp	x29, x30, [sp], #96
   15ca0:	ret

0000000000015ca4 <XS_POSIX_times>:
   15ca4:	stp	x29, x30, [sp, #-112]!
   15ca8:	mov	x29, sp
   15cac:	str	x0, [sp, #24]
   15cb0:	str	x1, [sp, #16]
   15cb4:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   15cb8:	ldr	x0, [x0, #3992]
   15cbc:	ldr	x1, [x0]
   15cc0:	str	x1, [sp, #104]
   15cc4:	mov	x1, #0x0                   	// #0
   15cc8:	ldr	x0, [sp, #24]
   15ccc:	ldr	x0, [x0]
   15cd0:	str	x0, [sp, #48]
   15cd4:	ldr	x0, [sp, #24]
   15cd8:	bl	739c <S_POPMARK>
   15cdc:	str	w0, [sp, #40]
   15ce0:	ldr	x0, [sp, #24]
   15ce4:	ldr	x1, [x0, #24]
   15ce8:	ldr	w0, [sp, #40]
   15cec:	add	w2, w0, #0x1
   15cf0:	str	w2, [sp, #40]
   15cf4:	sxtw	x0, w0
   15cf8:	lsl	x0, x0, #3
   15cfc:	add	x0, x1, x0
   15d00:	str	x0, [sp, #56]
   15d04:	ldr	x1, [sp, #48]
   15d08:	ldr	x0, [sp, #56]
   15d0c:	sub	x0, x1, x0
   15d10:	asr	x0, x0, #3
   15d14:	str	w0, [sp, #44]
   15d18:	ldr	w0, [sp, #44]
   15d1c:	cmp	w0, #0x0
   15d20:	b.eq	15d34 <XS_POSIX_times+0x90>  // b.none
   15d24:	adrp	x0, 1b000 <_fini+0x1fc>
   15d28:	add	x1, x0, #0x3f0
   15d2c:	ldr	x0, [sp, #16]
   15d30:	bl	6b20 <Perl_croak_xs_usage@plt>
   15d34:	ldrsw	x0, [sp, #44]
   15d38:	lsl	x0, x0, #3
   15d3c:	neg	x0, x0
   15d40:	ldr	x1, [sp, #48]
   15d44:	add	x0, x1, x0
   15d48:	str	x0, [sp, #48]
   15d4c:	add	x0, sp, #0x48
   15d50:	bl	6e00 <times@plt>
   15d54:	str	x0, [sp, #64]
   15d58:	ldr	x0, [sp, #24]
   15d5c:	ldr	x1, [x0, #32]
   15d60:	ldr	x0, [sp, #48]
   15d64:	sub	x0, x1, x0
   15d68:	cmp	x0, #0x20
   15d6c:	cset	w0, le
   15d70:	and	w0, w0, #0xff
   15d74:	and	x0, x0, #0xff
   15d78:	cmp	x0, #0x0
   15d7c:	b.eq	15d98 <XS_POSIX_times+0xf4>  // b.none
   15d80:	mov	x3, #0x5                   	// #5
   15d84:	ldr	x2, [sp, #48]
   15d88:	ldr	x1, [sp, #48]
   15d8c:	ldr	x0, [sp, #24]
   15d90:	bl	6660 <Perl_stack_grow@plt>
   15d94:	str	x0, [sp, #48]
   15d98:	ldr	x1, [sp, #64]
   15d9c:	ldr	x0, [sp, #24]
   15da0:	bl	70b0 <Perl_newSViv@plt>
   15da4:	mov	x1, x0
   15da8:	ldr	x0, [sp, #48]
   15dac:	add	x0, x0, #0x8
   15db0:	str	x0, [sp, #48]
   15db4:	ldr	x0, [sp, #24]
   15db8:	bl	6d60 <Perl_sv_2mortal@plt>
   15dbc:	mov	x1, x0
   15dc0:	ldr	x0, [sp, #48]
   15dc4:	str	x1, [x0]
   15dc8:	ldr	x0, [sp, #72]
   15dcc:	mov	x1, x0
   15dd0:	ldr	x0, [sp, #24]
   15dd4:	bl	70b0 <Perl_newSViv@plt>
   15dd8:	mov	x1, x0
   15ddc:	ldr	x0, [sp, #48]
   15de0:	add	x0, x0, #0x8
   15de4:	str	x0, [sp, #48]
   15de8:	ldr	x0, [sp, #24]
   15dec:	bl	6d60 <Perl_sv_2mortal@plt>
   15df0:	mov	x1, x0
   15df4:	ldr	x0, [sp, #48]
   15df8:	str	x1, [x0]
   15dfc:	ldr	x0, [sp, #80]
   15e00:	mov	x1, x0
   15e04:	ldr	x0, [sp, #24]
   15e08:	bl	70b0 <Perl_newSViv@plt>
   15e0c:	mov	x1, x0
   15e10:	ldr	x0, [sp, #48]
   15e14:	add	x0, x0, #0x8
   15e18:	str	x0, [sp, #48]
   15e1c:	ldr	x0, [sp, #24]
   15e20:	bl	6d60 <Perl_sv_2mortal@plt>
   15e24:	mov	x1, x0
   15e28:	ldr	x0, [sp, #48]
   15e2c:	str	x1, [x0]
   15e30:	ldr	x0, [sp, #88]
   15e34:	mov	x1, x0
   15e38:	ldr	x0, [sp, #24]
   15e3c:	bl	70b0 <Perl_newSViv@plt>
   15e40:	mov	x1, x0
   15e44:	ldr	x0, [sp, #48]
   15e48:	add	x0, x0, #0x8
   15e4c:	str	x0, [sp, #48]
   15e50:	ldr	x0, [sp, #24]
   15e54:	bl	6d60 <Perl_sv_2mortal@plt>
   15e58:	mov	x1, x0
   15e5c:	ldr	x0, [sp, #48]
   15e60:	str	x1, [x0]
   15e64:	ldr	x0, [sp, #96]
   15e68:	mov	x1, x0
   15e6c:	ldr	x0, [sp, #24]
   15e70:	bl	70b0 <Perl_newSViv@plt>
   15e74:	mov	x1, x0
   15e78:	ldr	x0, [sp, #48]
   15e7c:	add	x0, x0, #0x8
   15e80:	str	x0, [sp, #48]
   15e84:	ldr	x0, [sp, #24]
   15e88:	bl	6d60 <Perl_sv_2mortal@plt>
   15e8c:	mov	x1, x0
   15e90:	ldr	x0, [sp, #48]
   15e94:	str	x1, [x0]
   15e98:	ldr	x0, [sp, #24]
   15e9c:	ldr	x1, [sp, #48]
   15ea0:	str	x1, [x0]
   15ea4:	nop
   15ea8:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   15eac:	ldr	x0, [x0, #3992]
   15eb0:	ldr	x1, [sp, #104]
   15eb4:	ldr	x0, [x0]
   15eb8:	eor	x0, x1, x0
   15ebc:	cmp	x0, #0x0
   15ec0:	b.eq	15ec8 <XS_POSIX_times+0x224>  // b.none
   15ec4:	bl	6a60 <__stack_chk_fail@plt>
   15ec8:	ldp	x29, x30, [sp], #112
   15ecc:	ret

0000000000015ed0 <XS_POSIX_difftime>:
   15ed0:	stp	x29, x30, [sp, #-112]!
   15ed4:	mov	x29, sp
   15ed8:	str	x0, [sp, #24]
   15edc:	str	x1, [sp, #16]
   15ee0:	ldr	x0, [sp, #24]
   15ee4:	ldr	x0, [x0]
   15ee8:	str	x0, [sp, #48]
   15eec:	ldr	x0, [sp, #24]
   15ef0:	bl	739c <S_POPMARK>
   15ef4:	str	w0, [sp, #40]
   15ef8:	ldr	x0, [sp, #24]
   15efc:	ldr	x1, [x0, #24]
   15f00:	ldr	w0, [sp, #40]
   15f04:	add	w2, w0, #0x1
   15f08:	str	w2, [sp, #40]
   15f0c:	sxtw	x0, w0
   15f10:	lsl	x0, x0, #3
   15f14:	add	x0, x1, x0
   15f18:	str	x0, [sp, #56]
   15f1c:	ldr	x1, [sp, #48]
   15f20:	ldr	x0, [sp, #56]
   15f24:	sub	x0, x1, x0
   15f28:	asr	x0, x0, #3
   15f2c:	str	w0, [sp, #44]
   15f30:	ldr	w0, [sp, #44]
   15f34:	cmp	w0, #0x2
   15f38:	b.eq	15f4c <XS_POSIX_difftime+0x7c>  // b.none
   15f3c:	adrp	x0, 1b000 <_fini+0x1fc>
   15f40:	add	x1, x0, #0x818
   15f44:	ldr	x0, [sp, #16]
   15f48:	bl	6b20 <Perl_croak_xs_usage@plt>
   15f4c:	ldr	x0, [sp, #24]
   15f50:	ldr	x1, [x0, #24]
   15f54:	ldrsw	x0, [sp, #40]
   15f58:	lsl	x0, x0, #3
   15f5c:	add	x0, x1, x0
   15f60:	ldr	x0, [x0]
   15f64:	ldr	w1, [x0, #12]
   15f68:	mov	w0, #0x200                 	// #512
   15f6c:	movk	w0, #0x20, lsl #16
   15f70:	and	w0, w1, w0
   15f74:	cmp	w0, #0x200
   15f78:	b.ne	15fa4 <XS_POSIX_difftime+0xd4>  // b.any
   15f7c:	ldr	x0, [sp, #24]
   15f80:	ldr	x1, [x0, #24]
   15f84:	ldrsw	x0, [sp, #40]
   15f88:	lsl	x0, x0, #3
   15f8c:	add	x0, x1, x0
   15f90:	ldr	x0, [x0]
   15f94:	ldr	x0, [x0]
   15f98:	ldr	d0, [x0, #40]
   15f9c:	fcvtzs	d0, d0
   15fa0:	b	15fd0 <XS_POSIX_difftime+0x100>
   15fa4:	ldr	x0, [sp, #24]
   15fa8:	ldr	x1, [x0, #24]
   15fac:	ldrsw	x0, [sp, #40]
   15fb0:	lsl	x0, x0, #3
   15fb4:	add	x0, x1, x0
   15fb8:	ldr	x0, [x0]
   15fbc:	mov	w2, #0x2                   	// #2
   15fc0:	mov	x1, x0
   15fc4:	ldr	x0, [sp, #24]
   15fc8:	bl	6b80 <Perl_sv_2nv_flags@plt>
   15fcc:	fcvtzs	d0, d0
   15fd0:	str	d0, [sp, #64]
   15fd4:	ldr	x0, [sp, #24]
   15fd8:	ldr	x1, [x0, #24]
   15fdc:	ldrsw	x0, [sp, #40]
   15fe0:	add	x0, x0, #0x1
   15fe4:	lsl	x0, x0, #3
   15fe8:	add	x0, x1, x0
   15fec:	ldr	x0, [x0]
   15ff0:	ldr	w1, [x0, #12]
   15ff4:	mov	w0, #0x200                 	// #512
   15ff8:	movk	w0, #0x20, lsl #16
   15ffc:	and	w0, w1, w0
   16000:	cmp	w0, #0x200
   16004:	b.ne	16034 <XS_POSIX_difftime+0x164>  // b.any
   16008:	ldr	x0, [sp, #24]
   1600c:	ldr	x1, [x0, #24]
   16010:	ldrsw	x0, [sp, #40]
   16014:	add	x0, x0, #0x1
   16018:	lsl	x0, x0, #3
   1601c:	add	x0, x1, x0
   16020:	ldr	x0, [x0]
   16024:	ldr	x0, [x0]
   16028:	ldr	d0, [x0, #40]
   1602c:	fcvtzs	d0, d0
   16030:	b	16064 <XS_POSIX_difftime+0x194>
   16034:	ldr	x0, [sp, #24]
   16038:	ldr	x1, [x0, #24]
   1603c:	ldrsw	x0, [sp, #40]
   16040:	add	x0, x0, #0x1
   16044:	lsl	x0, x0, #3
   16048:	add	x0, x1, x0
   1604c:	ldr	x0, [x0]
   16050:	mov	w2, #0x2                   	// #2
   16054:	mov	x1, x0
   16058:	ldr	x0, [sp, #24]
   1605c:	bl	6b80 <Perl_sv_2nv_flags@plt>
   16060:	fcvtzs	d0, d0
   16064:	str	d0, [sp, #72]
   16068:	ldr	x0, [sp, #24]
   1606c:	ldr	x0, [x0, #8]
   16070:	ldrb	w0, [x0, #35]
   16074:	and	w0, w0, #0x4
   16078:	cmp	w0, #0x0
   1607c:	b.eq	160a4 <XS_POSIX_difftime+0x1d4>  // b.none
   16080:	ldr	x0, [sp, #24]
   16084:	ldr	x1, [x0, #16]
   16088:	ldr	x0, [sp, #24]
   1608c:	ldr	x0, [x0, #8]
   16090:	ldr	x0, [x0, #24]
   16094:	lsl	x0, x0, #3
   16098:	add	x0, x1, x0
   1609c:	ldr	x0, [x0]
   160a0:	b	160ac <XS_POSIX_difftime+0x1dc>
   160a4:	ldr	x0, [sp, #24]
   160a8:	bl	7160 <Perl_sv_newmortal@plt>
   160ac:	str	x0, [sp, #80]
   160b0:	ldr	x1, [sp, #72]
   160b4:	ldr	x0, [sp, #64]
   160b8:	bl	6ca0 <difftime@plt>
   160bc:	str	d0, [sp, #88]
   160c0:	ldr	x0, [sp, #24]
   160c4:	ldr	x1, [x0, #24]
   160c8:	ldrsw	x0, [sp, #40]
   160cc:	lsl	x0, x0, #3
   160d0:	sub	x0, x0, #0x8
   160d4:	add	x0, x1, x0
   160d8:	str	x0, [sp, #48]
   160dc:	ldr	d0, [sp, #88]
   160e0:	str	d0, [sp, #96]
   160e4:	ldr	x0, [sp, #80]
   160e8:	ldr	w1, [x0, #12]
   160ec:	mov	w0, #0x8ff                 	// #2303
   160f0:	movk	w0, #0x1981, lsl #16
   160f4:	and	w0, w1, w0
   160f8:	cmp	w0, #0x2
   160fc:	cset	w0, eq  // eq = none
   16100:	and	w0, w0, #0xff
   16104:	mov	w1, w0
   16108:	ldr	x0, [sp, #24]
   1610c:	ldrb	w0, [x0, #185]
   16110:	eor	w0, w0, #0x1
   16114:	and	w0, w0, #0xff
   16118:	and	w0, w1, w0
   1611c:	cmp	w0, #0x0
   16120:	cset	w0, ne  // ne = any
   16124:	and	w0, w0, #0xff
   16128:	and	x0, x0, #0xff
   1612c:	cmp	x0, #0x0
   16130:	b.eq	16160 <XS_POSIX_difftime+0x290>  // b.none
   16134:	ldr	x0, [sp, #80]
   16138:	ldr	w1, [x0, #12]
   1613c:	mov	w0, #0x2200                	// #8704
   16140:	orr	w1, w1, w0
   16144:	ldr	x0, [sp, #80]
   16148:	str	w1, [x0, #12]
   1614c:	ldr	x0, [sp, #80]
   16150:	ldr	x0, [x0]
   16154:	ldr	d0, [sp, #96]
   16158:	str	d0, [x0, #40]
   1615c:	b	16170 <XS_POSIX_difftime+0x2a0>
   16160:	ldr	d0, [sp, #96]
   16164:	ldr	x1, [sp, #80]
   16168:	ldr	x0, [sp, #24]
   1616c:	bl	6960 <Perl_sv_setnv_mg@plt>
   16170:	ldr	x0, [sp, #48]
   16174:	add	x0, x0, #0x8
   16178:	str	x0, [sp, #48]
   1617c:	ldr	x0, [sp, #48]
   16180:	ldr	x1, [sp, #80]
   16184:	str	x1, [x0]
   16188:	mov	x0, #0x1                   	// #1
   1618c:	str	x0, [sp, #104]
   16190:	ldr	x0, [sp, #24]
   16194:	ldr	x1, [x0, #24]
   16198:	ldrsw	x2, [sp, #40]
   1619c:	ldr	x0, [sp, #104]
   161a0:	add	x0, x2, x0
   161a4:	lsl	x0, x0, #3
   161a8:	sub	x0, x0, #0x8
   161ac:	add	x1, x1, x0
   161b0:	ldr	x0, [sp, #24]
   161b4:	str	x1, [x0]
   161b8:	nop
   161bc:	ldp	x29, x30, [sp], #112
   161c0:	ret

00000000000161c4 <XS_POSIX_strftime>:
   161c4:	sub	sp, sp, #0xb0
   161c8:	stp	x29, x30, [sp, #32]
   161cc:	add	x29, sp, #0x20
   161d0:	str	x0, [sp, #56]
   161d4:	str	x1, [sp, #48]
   161d8:	ldr	x0, [sp, #56]
   161dc:	ldr	x0, [x0]
   161e0:	str	x0, [sp, #120]
   161e4:	ldr	x0, [sp, #56]
   161e8:	bl	739c <S_POPMARK>
   161ec:	str	w0, [sp, #88]
   161f0:	ldr	x0, [sp, #56]
   161f4:	ldr	x1, [x0, #24]
   161f8:	ldr	w0, [sp, #88]
   161fc:	add	w2, w0, #0x1
   16200:	str	w2, [sp, #88]
   16204:	sxtw	x0, w0
   16208:	lsl	x0, x0, #3
   1620c:	add	x0, x1, x0
   16210:	str	x0, [sp, #128]
   16214:	ldr	x1, [sp, #120]
   16218:	ldr	x0, [sp, #128]
   1621c:	sub	x0, x1, x0
   16220:	asr	x0, x0, #3
   16224:	str	w0, [sp, #92]
   16228:	ldr	w0, [sp, #92]
   1622c:	cmp	w0, #0x6
   16230:	b.le	16240 <XS_POSIX_strftime+0x7c>
   16234:	ldr	w0, [sp, #92]
   16238:	cmp	w0, #0xa
   1623c:	b.le	16250 <XS_POSIX_strftime+0x8c>
   16240:	adrp	x0, 1b000 <_fini+0x1fc>
   16244:	add	x1, x0, #0x828
   16248:	ldr	x0, [sp, #48]
   1624c:	bl	6b20 <Perl_croak_xs_usage@plt>
   16250:	ldr	x0, [sp, #56]
   16254:	ldr	x1, [x0, #24]
   16258:	ldrsw	x0, [sp, #88]
   1625c:	lsl	x0, x0, #3
   16260:	add	x0, x1, x0
   16264:	ldr	x0, [x0]
   16268:	str	x0, [sp, #136]
   1626c:	ldr	x0, [sp, #56]
   16270:	ldr	x1, [x0, #24]
   16274:	ldrsw	x0, [sp, #88]
   16278:	add	x0, x0, #0x1
   1627c:	lsl	x0, x0, #3
   16280:	add	x0, x1, x0
   16284:	ldr	x0, [x0]
   16288:	ldr	w1, [x0, #12]
   1628c:	mov	w0, #0x100                 	// #256
   16290:	movk	w0, #0x20, lsl #16
   16294:	and	w0, w1, w0
   16298:	cmp	w0, #0x100
   1629c:	b.ne	162c8 <XS_POSIX_strftime+0x104>  // b.any
   162a0:	ldr	x0, [sp, #56]
   162a4:	ldr	x1, [x0, #24]
   162a8:	ldrsw	x0, [sp, #88]
   162ac:	add	x0, x0, #0x1
   162b0:	lsl	x0, x0, #3
   162b4:	add	x0, x1, x0
   162b8:	ldr	x0, [x0]
   162bc:	ldr	x0, [x0]
   162c0:	ldr	x0, [x0, #32]
   162c4:	b	162f4 <XS_POSIX_strftime+0x130>
   162c8:	ldr	x0, [sp, #56]
   162cc:	ldr	x1, [x0, #24]
   162d0:	ldrsw	x0, [sp, #88]
   162d4:	add	x0, x0, #0x1
   162d8:	lsl	x0, x0, #3
   162dc:	add	x0, x1, x0
   162e0:	ldr	x0, [x0]
   162e4:	mov	w2, #0x2                   	// #2
   162e8:	mov	x1, x0
   162ec:	ldr	x0, [sp, #56]
   162f0:	bl	6560 <Perl_sv_2iv_flags@plt>
   162f4:	str	w0, [sp, #96]
   162f8:	ldr	x0, [sp, #56]
   162fc:	ldr	x1, [x0, #24]
   16300:	ldrsw	x0, [sp, #88]
   16304:	add	x0, x0, #0x2
   16308:	lsl	x0, x0, #3
   1630c:	add	x0, x1, x0
   16310:	ldr	x0, [x0]
   16314:	ldr	w1, [x0, #12]
   16318:	mov	w0, #0x100                 	// #256
   1631c:	movk	w0, #0x20, lsl #16
   16320:	and	w0, w1, w0
   16324:	cmp	w0, #0x100
   16328:	b.ne	16354 <XS_POSIX_strftime+0x190>  // b.any
   1632c:	ldr	x0, [sp, #56]
   16330:	ldr	x1, [x0, #24]
   16334:	ldrsw	x0, [sp, #88]
   16338:	add	x0, x0, #0x2
   1633c:	lsl	x0, x0, #3
   16340:	add	x0, x1, x0
   16344:	ldr	x0, [x0]
   16348:	ldr	x0, [x0]
   1634c:	ldr	x0, [x0, #32]
   16350:	b	16380 <XS_POSIX_strftime+0x1bc>
   16354:	ldr	x0, [sp, #56]
   16358:	ldr	x1, [x0, #24]
   1635c:	ldrsw	x0, [sp, #88]
   16360:	add	x0, x0, #0x2
   16364:	lsl	x0, x0, #3
   16368:	add	x0, x1, x0
   1636c:	ldr	x0, [x0]
   16370:	mov	w2, #0x2                   	// #2
   16374:	mov	x1, x0
   16378:	ldr	x0, [sp, #56]
   1637c:	bl	6560 <Perl_sv_2iv_flags@plt>
   16380:	str	w0, [sp, #100]
   16384:	ldr	x0, [sp, #56]
   16388:	ldr	x1, [x0, #24]
   1638c:	ldrsw	x0, [sp, #88]
   16390:	add	x0, x0, #0x3
   16394:	lsl	x0, x0, #3
   16398:	add	x0, x1, x0
   1639c:	ldr	x0, [x0]
   163a0:	ldr	w1, [x0, #12]
   163a4:	mov	w0, #0x100                 	// #256
   163a8:	movk	w0, #0x20, lsl #16
   163ac:	and	w0, w1, w0
   163b0:	cmp	w0, #0x100
   163b4:	b.ne	163e0 <XS_POSIX_strftime+0x21c>  // b.any
   163b8:	ldr	x0, [sp, #56]
   163bc:	ldr	x1, [x0, #24]
   163c0:	ldrsw	x0, [sp, #88]
   163c4:	add	x0, x0, #0x3
   163c8:	lsl	x0, x0, #3
   163cc:	add	x0, x1, x0
   163d0:	ldr	x0, [x0]
   163d4:	ldr	x0, [x0]
   163d8:	ldr	x0, [x0, #32]
   163dc:	b	1640c <XS_POSIX_strftime+0x248>
   163e0:	ldr	x0, [sp, #56]
   163e4:	ldr	x1, [x0, #24]
   163e8:	ldrsw	x0, [sp, #88]
   163ec:	add	x0, x0, #0x3
   163f0:	lsl	x0, x0, #3
   163f4:	add	x0, x1, x0
   163f8:	ldr	x0, [x0]
   163fc:	mov	w2, #0x2                   	// #2
   16400:	mov	x1, x0
   16404:	ldr	x0, [sp, #56]
   16408:	bl	6560 <Perl_sv_2iv_flags@plt>
   1640c:	str	w0, [sp, #104]
   16410:	ldr	x0, [sp, #56]
   16414:	ldr	x1, [x0, #24]
   16418:	ldrsw	x0, [sp, #88]
   1641c:	add	x0, x0, #0x4
   16420:	lsl	x0, x0, #3
   16424:	add	x0, x1, x0
   16428:	ldr	x0, [x0]
   1642c:	ldr	w1, [x0, #12]
   16430:	mov	w0, #0x100                 	// #256
   16434:	movk	w0, #0x20, lsl #16
   16438:	and	w0, w1, w0
   1643c:	cmp	w0, #0x100
   16440:	b.ne	1646c <XS_POSIX_strftime+0x2a8>  // b.any
   16444:	ldr	x0, [sp, #56]
   16448:	ldr	x1, [x0, #24]
   1644c:	ldrsw	x0, [sp, #88]
   16450:	add	x0, x0, #0x4
   16454:	lsl	x0, x0, #3
   16458:	add	x0, x1, x0
   1645c:	ldr	x0, [x0]
   16460:	ldr	x0, [x0]
   16464:	ldr	x0, [x0, #32]
   16468:	b	16498 <XS_POSIX_strftime+0x2d4>
   1646c:	ldr	x0, [sp, #56]
   16470:	ldr	x1, [x0, #24]
   16474:	ldrsw	x0, [sp, #88]
   16478:	add	x0, x0, #0x4
   1647c:	lsl	x0, x0, #3
   16480:	add	x0, x1, x0
   16484:	ldr	x0, [x0]
   16488:	mov	w2, #0x2                   	// #2
   1648c:	mov	x1, x0
   16490:	ldr	x0, [sp, #56]
   16494:	bl	6560 <Perl_sv_2iv_flags@plt>
   16498:	str	w0, [sp, #108]
   1649c:	ldr	x0, [sp, #56]
   164a0:	ldr	x1, [x0, #24]
   164a4:	ldrsw	x0, [sp, #88]
   164a8:	add	x0, x0, #0x5
   164ac:	lsl	x0, x0, #3
   164b0:	add	x0, x1, x0
   164b4:	ldr	x0, [x0]
   164b8:	ldr	w1, [x0, #12]
   164bc:	mov	w0, #0x100                 	// #256
   164c0:	movk	w0, #0x20, lsl #16
   164c4:	and	w0, w1, w0
   164c8:	cmp	w0, #0x100
   164cc:	b.ne	164f8 <XS_POSIX_strftime+0x334>  // b.any
   164d0:	ldr	x0, [sp, #56]
   164d4:	ldr	x1, [x0, #24]
   164d8:	ldrsw	x0, [sp, #88]
   164dc:	add	x0, x0, #0x5
   164e0:	lsl	x0, x0, #3
   164e4:	add	x0, x1, x0
   164e8:	ldr	x0, [x0]
   164ec:	ldr	x0, [x0]
   164f0:	ldr	x0, [x0, #32]
   164f4:	b	16524 <XS_POSIX_strftime+0x360>
   164f8:	ldr	x0, [sp, #56]
   164fc:	ldr	x1, [x0, #24]
   16500:	ldrsw	x0, [sp, #88]
   16504:	add	x0, x0, #0x5
   16508:	lsl	x0, x0, #3
   1650c:	add	x0, x1, x0
   16510:	ldr	x0, [x0]
   16514:	mov	w2, #0x2                   	// #2
   16518:	mov	x1, x0
   1651c:	ldr	x0, [sp, #56]
   16520:	bl	6560 <Perl_sv_2iv_flags@plt>
   16524:	str	w0, [sp, #112]
   16528:	ldr	x0, [sp, #56]
   1652c:	ldr	x1, [x0, #24]
   16530:	ldrsw	x0, [sp, #88]
   16534:	add	x0, x0, #0x6
   16538:	lsl	x0, x0, #3
   1653c:	add	x0, x1, x0
   16540:	ldr	x0, [x0]
   16544:	ldr	w1, [x0, #12]
   16548:	mov	w0, #0x100                 	// #256
   1654c:	movk	w0, #0x20, lsl #16
   16550:	and	w0, w1, w0
   16554:	cmp	w0, #0x100
   16558:	b.ne	16584 <XS_POSIX_strftime+0x3c0>  // b.any
   1655c:	ldr	x0, [sp, #56]
   16560:	ldr	x1, [x0, #24]
   16564:	ldrsw	x0, [sp, #88]
   16568:	add	x0, x0, #0x6
   1656c:	lsl	x0, x0, #3
   16570:	add	x0, x1, x0
   16574:	ldr	x0, [x0]
   16578:	ldr	x0, [x0]
   1657c:	ldr	x0, [x0, #32]
   16580:	b	165b0 <XS_POSIX_strftime+0x3ec>
   16584:	ldr	x0, [sp, #56]
   16588:	ldr	x1, [x0, #24]
   1658c:	ldrsw	x0, [sp, #88]
   16590:	add	x0, x0, #0x6
   16594:	lsl	x0, x0, #3
   16598:	add	x0, x1, x0
   1659c:	ldr	x0, [x0]
   165a0:	mov	w2, #0x2                   	// #2
   165a4:	mov	x1, x0
   165a8:	ldr	x0, [sp, #56]
   165ac:	bl	6560 <Perl_sv_2iv_flags@plt>
   165b0:	str	w0, [sp, #116]
   165b4:	ldr	w0, [sp, #92]
   165b8:	cmp	w0, #0x7
   165bc:	b.gt	165cc <XS_POSIX_strftime+0x408>
   165c0:	mov	w0, #0xffffffff            	// #-1
   165c4:	str	w0, [sp, #76]
   165c8:	b	16658 <XS_POSIX_strftime+0x494>
   165cc:	ldr	x0, [sp, #56]
   165d0:	ldr	x1, [x0, #24]
   165d4:	ldrsw	x0, [sp, #88]
   165d8:	add	x0, x0, #0x7
   165dc:	lsl	x0, x0, #3
   165e0:	add	x0, x1, x0
   165e4:	ldr	x0, [x0]
   165e8:	ldr	w1, [x0, #12]
   165ec:	mov	w0, #0x100                 	// #256
   165f0:	movk	w0, #0x20, lsl #16
   165f4:	and	w0, w1, w0
   165f8:	cmp	w0, #0x100
   165fc:	b.ne	16628 <XS_POSIX_strftime+0x464>  // b.any
   16600:	ldr	x0, [sp, #56]
   16604:	ldr	x1, [x0, #24]
   16608:	ldrsw	x0, [sp, #88]
   1660c:	add	x0, x0, #0x7
   16610:	lsl	x0, x0, #3
   16614:	add	x0, x1, x0
   16618:	ldr	x0, [x0]
   1661c:	ldr	x0, [x0]
   16620:	ldr	x0, [x0, #32]
   16624:	b	16654 <XS_POSIX_strftime+0x490>
   16628:	ldr	x0, [sp, #56]
   1662c:	ldr	x1, [x0, #24]
   16630:	ldrsw	x0, [sp, #88]
   16634:	add	x0, x0, #0x7
   16638:	lsl	x0, x0, #3
   1663c:	add	x0, x1, x0
   16640:	ldr	x0, [x0]
   16644:	mov	w2, #0x2                   	// #2
   16648:	mov	x1, x0
   1664c:	ldr	x0, [sp, #56]
   16650:	bl	6560 <Perl_sv_2iv_flags@plt>
   16654:	str	w0, [sp, #76]
   16658:	ldr	w0, [sp, #92]
   1665c:	cmp	w0, #0x8
   16660:	b.gt	16670 <XS_POSIX_strftime+0x4ac>
   16664:	mov	w0, #0xffffffff            	// #-1
   16668:	str	w0, [sp, #80]
   1666c:	b	166fc <XS_POSIX_strftime+0x538>
   16670:	ldr	x0, [sp, #56]
   16674:	ldr	x1, [x0, #24]
   16678:	ldrsw	x0, [sp, #88]
   1667c:	add	x0, x0, #0x8
   16680:	lsl	x0, x0, #3
   16684:	add	x0, x1, x0
   16688:	ldr	x0, [x0]
   1668c:	ldr	w1, [x0, #12]
   16690:	mov	w0, #0x100                 	// #256
   16694:	movk	w0, #0x20, lsl #16
   16698:	and	w0, w1, w0
   1669c:	cmp	w0, #0x100
   166a0:	b.ne	166cc <XS_POSIX_strftime+0x508>  // b.any
   166a4:	ldr	x0, [sp, #56]
   166a8:	ldr	x1, [x0, #24]
   166ac:	ldrsw	x0, [sp, #88]
   166b0:	add	x0, x0, #0x8
   166b4:	lsl	x0, x0, #3
   166b8:	add	x0, x1, x0
   166bc:	ldr	x0, [x0]
   166c0:	ldr	x0, [x0]
   166c4:	ldr	x0, [x0, #32]
   166c8:	b	166f8 <XS_POSIX_strftime+0x534>
   166cc:	ldr	x0, [sp, #56]
   166d0:	ldr	x1, [x0, #24]
   166d4:	ldrsw	x0, [sp, #88]
   166d8:	add	x0, x0, #0x8
   166dc:	lsl	x0, x0, #3
   166e0:	add	x0, x1, x0
   166e4:	ldr	x0, [x0]
   166e8:	mov	w2, #0x2                   	// #2
   166ec:	mov	x1, x0
   166f0:	ldr	x0, [sp, #56]
   166f4:	bl	6560 <Perl_sv_2iv_flags@plt>
   166f8:	str	w0, [sp, #80]
   166fc:	ldr	w0, [sp, #92]
   16700:	cmp	w0, #0x9
   16704:	b.gt	16714 <XS_POSIX_strftime+0x550>
   16708:	mov	w0, #0xffffffff            	// #-1
   1670c:	str	w0, [sp, #84]
   16710:	b	167a0 <XS_POSIX_strftime+0x5dc>
   16714:	ldr	x0, [sp, #56]
   16718:	ldr	x1, [x0, #24]
   1671c:	ldrsw	x0, [sp, #88]
   16720:	add	x0, x0, #0x9
   16724:	lsl	x0, x0, #3
   16728:	add	x0, x1, x0
   1672c:	ldr	x0, [x0]
   16730:	ldr	w1, [x0, #12]
   16734:	mov	w0, #0x100                 	// #256
   16738:	movk	w0, #0x20, lsl #16
   1673c:	and	w0, w1, w0
   16740:	cmp	w0, #0x100
   16744:	b.ne	16770 <XS_POSIX_strftime+0x5ac>  // b.any
   16748:	ldr	x0, [sp, #56]
   1674c:	ldr	x1, [x0, #24]
   16750:	ldrsw	x0, [sp, #88]
   16754:	add	x0, x0, #0x9
   16758:	lsl	x0, x0, #3
   1675c:	add	x0, x1, x0
   16760:	ldr	x0, [x0]
   16764:	ldr	x0, [x0]
   16768:	ldr	x0, [x0, #32]
   1676c:	b	1679c <XS_POSIX_strftime+0x5d8>
   16770:	ldr	x0, [sp, #56]
   16774:	ldr	x1, [x0, #24]
   16778:	ldrsw	x0, [sp, #88]
   1677c:	add	x0, x0, #0x9
   16780:	lsl	x0, x0, #3
   16784:	add	x0, x1, x0
   16788:	ldr	x0, [x0]
   1678c:	mov	w2, #0x2                   	// #2
   16790:	mov	x1, x0
   16794:	ldr	x0, [sp, #56]
   16798:	bl	6560 <Perl_sv_2iv_flags@plt>
   1679c:	str	w0, [sp, #84]
   167a0:	ldr	x0, [sp, #136]
   167a4:	ldr	w1, [x0, #12]
   167a8:	mov	w0, #0x400                 	// #1024
   167ac:	movk	w0, #0x20, lsl #16
   167b0:	and	w0, w1, w0
   167b4:	cmp	w0, #0x400
   167b8:	b.ne	167c8 <XS_POSIX_strftime+0x604>  // b.any
   167bc:	ldr	x0, [sp, #136]
   167c0:	ldr	x0, [x0, #16]
   167c4:	b	167dc <XS_POSIX_strftime+0x618>
   167c8:	mov	w3, #0x2                   	// #2
   167cc:	mov	x2, #0x0                   	// #0
   167d0:	ldr	x1, [sp, #136]
   167d4:	ldr	x0, [sp, #56]
   167d8:	bl	69b0 <Perl_sv_2pv_flags@plt>
   167dc:	ldr	w1, [sp, #84]
   167e0:	str	w1, [sp, #16]
   167e4:	ldr	w1, [sp, #80]
   167e8:	str	w1, [sp, #8]
   167ec:	ldr	w1, [sp, #76]
   167f0:	str	w1, [sp]
   167f4:	ldr	w7, [sp, #116]
   167f8:	ldr	w6, [sp, #112]
   167fc:	ldr	w5, [sp, #108]
   16800:	ldr	w4, [sp, #104]
   16804:	ldr	w3, [sp, #100]
   16808:	ldr	w2, [sp, #96]
   1680c:	mov	x1, x0
   16810:	ldr	x0, [sp, #56]
   16814:	bl	6a80 <Perl_my_strftime@plt>
   16818:	str	x0, [sp, #144]
   1681c:	ldr	x0, [sp, #56]
   16820:	bl	7160 <Perl_sv_newmortal@plt>
   16824:	str	x0, [sp, #152]
   16828:	ldr	x0, [sp, #144]
   1682c:	cmp	x0, #0x0
   16830:	b.eq	168b4 <XS_POSIX_strftime+0x6f0>  // b.none
   16834:	ldr	x0, [sp, #144]
   16838:	bl	65c0 <strlen@plt>
   1683c:	str	x0, [sp, #160]
   16840:	mov	w4, #0x100                 	// #256
   16844:	ldr	x3, [sp, #160]
   16848:	ldr	x2, [sp, #144]
   1684c:	ldr	x1, [sp, #152]
   16850:	ldr	x0, [sp, #56]
   16854:	bl	6bf0 <Perl_sv_usepvn_flags@plt>
   16858:	ldr	x0, [sp, #136]
   1685c:	ldr	w0, [x0, #12]
   16860:	and	w0, w0, #0x20000000
   16864:	cmp	w0, #0x0
   16868:	b.ne	1689c <XS_POSIX_strftime+0x6d8>  // b.any
   1686c:	ldr	x1, [sp, #160]
   16870:	ldr	x0, [sp, #144]
   16874:	bl	76a0 <S_is_utf8_non_invariant_string>
   16878:	and	w0, w0, #0xff
   1687c:	cmp	w0, #0x0
   16880:	b.eq	16918 <XS_POSIX_strftime+0x754>  // b.none
   16884:	mov	w1, #0x2                   	// #2
   16888:	ldr	x0, [sp, #56]
   1688c:	bl	66d0 <Perl__is_cur_LC_category_utf8@plt>
   16890:	and	w0, w0, #0xff
   16894:	cmp	w0, #0x0
   16898:	b.eq	16918 <XS_POSIX_strftime+0x754>  // b.none
   1689c:	ldr	x0, [sp, #152]
   168a0:	ldr	w0, [x0, #12]
   168a4:	orr	w1, w0, #0x20000000
   168a8:	ldr	x0, [sp, #152]
   168ac:	str	w1, [x0, #12]
   168b0:	b	16918 <XS_POSIX_strftime+0x754>
   168b4:	ldr	x0, [sp, #152]
   168b8:	ldr	w0, [x0, #12]
   168bc:	and	w0, w0, #0xff
   168c0:	cmp	w0, #0x2
   168c4:	b.hi	168d8 <XS_POSIX_strftime+0x714>  // b.pmore
   168c8:	mov	w2, #0x3                   	// #3
   168cc:	ldr	x1, [sp, #152]
   168d0:	ldr	x0, [sp, #56]
   168d4:	bl	6870 <Perl_sv_upgrade@plt>
   168d8:	ldr	x0, [sp, #152]
   168dc:	adrp	x1, 1b000 <_fini+0x1fc>
   168e0:	add	x1, x1, #0x3f0
   168e4:	str	x1, [x0, #16]
   168e8:	ldr	x0, [sp, #152]
   168ec:	ldr	w1, [x0, #12]
   168f0:	mov	w0, #0x4400                	// #17408
   168f4:	orr	w1, w1, w0
   168f8:	ldr	x0, [sp, #152]
   168fc:	str	w1, [x0, #12]
   16900:	ldr	x0, [sp, #152]
   16904:	ldr	x0, [x0]
   16908:	str	xzr, [x0, #16]
   1690c:	ldr	x0, [sp, #152]
   16910:	ldr	x0, [x0]
   16914:	str	xzr, [x0, #24]
   16918:	ldr	x0, [sp, #56]
   1691c:	ldr	x1, [x0, #24]
   16920:	ldrsw	x0, [sp, #88]
   16924:	lsl	x0, x0, #3
   16928:	add	x0, x1, x0
   1692c:	ldr	x1, [sp, #152]
   16930:	str	x1, [x0]
   16934:	mov	x0, #0x1                   	// #1
   16938:	str	x0, [sp, #168]
   1693c:	ldr	x0, [sp, #56]
   16940:	ldr	x1, [x0, #24]
   16944:	ldrsw	x2, [sp, #88]
   16948:	ldr	x0, [sp, #168]
   1694c:	add	x0, x2, x0
   16950:	lsl	x0, x0, #3
   16954:	sub	x0, x0, #0x8
   16958:	add	x1, x1, x0
   1695c:	ldr	x0, [sp, #56]
   16960:	str	x1, [x0]
   16964:	nop
   16968:	ldp	x29, x30, [sp, #32]
   1696c:	add	sp, sp, #0xb0
   16970:	ret

0000000000016974 <XS_POSIX_tzset>:
   16974:	stp	x29, x30, [sp, #-64]!
   16978:	mov	x29, sp
   1697c:	str	x0, [sp, #24]
   16980:	str	x1, [sp, #16]
   16984:	ldr	x0, [sp, #24]
   16988:	ldr	x0, [x0]
   1698c:	str	x0, [sp, #48]
   16990:	ldr	x0, [sp, #24]
   16994:	bl	739c <S_POPMARK>
   16998:	str	w0, [sp, #40]
   1699c:	ldr	x0, [sp, #24]
   169a0:	ldr	x1, [x0, #24]
   169a4:	ldr	w0, [sp, #40]
   169a8:	add	w2, w0, #0x1
   169ac:	str	w2, [sp, #40]
   169b0:	sxtw	x0, w0
   169b4:	lsl	x0, x0, #3
   169b8:	add	x0, x1, x0
   169bc:	str	x0, [sp, #56]
   169c0:	ldr	x1, [sp, #48]
   169c4:	ldr	x0, [sp, #56]
   169c8:	sub	x0, x1, x0
   169cc:	asr	x0, x0, #3
   169d0:	str	w0, [sp, #44]
   169d4:	ldr	w0, [sp, #44]
   169d8:	cmp	w0, #0x0
   169dc:	b.eq	169f0 <XS_POSIX_tzset+0x7c>  // b.none
   169e0:	adrp	x0, 1b000 <_fini+0x1fc>
   169e4:	add	x1, x0, #0x3f0
   169e8:	ldr	x0, [sp, #16]
   169ec:	bl	6b20 <Perl_croak_xs_usage@plt>
   169f0:	ldrsw	x0, [sp, #44]
   169f4:	lsl	x0, x0, #3
   169f8:	neg	x0, x0
   169fc:	ldr	x1, [sp, #48]
   16a00:	add	x0, x1, x0
   16a04:	str	x0, [sp, #48]
   16a08:	ldr	x0, [sp, #24]
   16a0c:	bl	81e8 <my_tzset>
   16a10:	ldr	x0, [sp, #24]
   16a14:	ldr	x1, [sp, #48]
   16a18:	str	x1, [x0]
   16a1c:	nop
   16a20:	ldp	x29, x30, [sp], #64
   16a24:	ret

0000000000016a28 <XS_POSIX_tzname>:
   16a28:	stp	x29, x30, [sp, #-80]!
   16a2c:	mov	x29, sp
   16a30:	str	x19, [sp, #16]
   16a34:	str	x0, [sp, #40]
   16a38:	str	x1, [sp, #32]
   16a3c:	ldr	x0, [sp, #40]
   16a40:	ldr	x0, [x0]
   16a44:	str	x0, [sp, #64]
   16a48:	ldr	x0, [sp, #40]
   16a4c:	bl	739c <S_POPMARK>
   16a50:	str	w0, [sp, #56]
   16a54:	ldr	x0, [sp, #40]
   16a58:	ldr	x1, [x0, #24]
   16a5c:	ldr	w0, [sp, #56]
   16a60:	add	w2, w0, #0x1
   16a64:	str	w2, [sp, #56]
   16a68:	sxtw	x0, w0
   16a6c:	lsl	x0, x0, #3
   16a70:	add	x0, x1, x0
   16a74:	str	x0, [sp, #72]
   16a78:	ldr	x1, [sp, #64]
   16a7c:	ldr	x0, [sp, #72]
   16a80:	sub	x0, x1, x0
   16a84:	asr	x0, x0, #3
   16a88:	str	w0, [sp, #60]
   16a8c:	ldr	w0, [sp, #60]
   16a90:	cmp	w0, #0x0
   16a94:	b.eq	16aa8 <XS_POSIX_tzname+0x80>  // b.none
   16a98:	adrp	x0, 1b000 <_fini+0x1fc>
   16a9c:	add	x1, x0, #0x3f0
   16aa0:	ldr	x0, [sp, #32]
   16aa4:	bl	6b20 <Perl_croak_xs_usage@plt>
   16aa8:	ldrsw	x0, [sp, #60]
   16aac:	lsl	x0, x0, #3
   16ab0:	neg	x0, x0
   16ab4:	ldr	x1, [sp, #64]
   16ab8:	add	x0, x1, x0
   16abc:	str	x0, [sp, #64]
   16ac0:	ldr	x0, [sp, #40]
   16ac4:	ldr	x1, [x0, #32]
   16ac8:	ldr	x0, [sp, #64]
   16acc:	sub	x0, x1, x0
   16ad0:	cmp	x0, #0x8
   16ad4:	cset	w0, le
   16ad8:	and	w0, w0, #0xff
   16adc:	and	x0, x0, #0xff
   16ae0:	cmp	x0, #0x0
   16ae4:	b.eq	16b00 <XS_POSIX_tzname+0xd8>  // b.none
   16ae8:	mov	x3, #0x2                   	// #2
   16aec:	ldr	x2, [sp, #64]
   16af0:	ldr	x1, [sp, #64]
   16af4:	ldr	x0, [sp, #40]
   16af8:	bl	6660 <Perl_stack_grow@plt>
   16afc:	str	x0, [sp, #64]
   16b00:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   16b04:	ldr	x0, [x0, #4048]
   16b08:	ldr	x19, [x0]
   16b0c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   16b10:	ldr	x0, [x0, #4048]
   16b14:	ldr	x0, [x0]
   16b18:	bl	65c0 <strlen@plt>
   16b1c:	mov	x1, x0
   16b20:	ldr	x0, [sp, #64]
   16b24:	add	x0, x0, #0x8
   16b28:	str	x0, [sp, #64]
   16b2c:	mov	w3, #0x80000               	// #524288
   16b30:	mov	x2, x1
   16b34:	mov	x1, x19
   16b38:	ldr	x0, [sp, #40]
   16b3c:	bl	6b50 <Perl_newSVpvn_flags@plt>
   16b40:	mov	x1, x0
   16b44:	ldr	x0, [sp, #64]
   16b48:	str	x1, [x0]
   16b4c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   16b50:	ldr	x0, [x0, #4048]
   16b54:	ldr	x19, [x0, #8]
   16b58:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   16b5c:	ldr	x0, [x0, #4048]
   16b60:	ldr	x0, [x0, #8]
   16b64:	bl	65c0 <strlen@plt>
   16b68:	mov	x1, x0
   16b6c:	ldr	x0, [sp, #64]
   16b70:	add	x0, x0, #0x8
   16b74:	str	x0, [sp, #64]
   16b78:	mov	w3, #0x80000               	// #524288
   16b7c:	mov	x2, x1
   16b80:	mov	x1, x19
   16b84:	ldr	x0, [sp, #40]
   16b88:	bl	6b50 <Perl_newSVpvn_flags@plt>
   16b8c:	mov	x1, x0
   16b90:	ldr	x0, [sp, #64]
   16b94:	str	x1, [x0]
   16b98:	ldr	x0, [sp, #40]
   16b9c:	ldr	x1, [sp, #64]
   16ba0:	str	x1, [x0]
   16ba4:	nop
   16ba8:	ldr	x19, [sp, #16]
   16bac:	ldp	x29, x30, [sp], #80
   16bb0:	ret

0000000000016bb4 <XS_POSIX_ctermid>:
   16bb4:	stp	x29, x30, [sp, #-96]!
   16bb8:	mov	x29, sp
   16bbc:	str	x0, [sp, #24]
   16bc0:	str	x1, [sp, #16]
   16bc4:	ldr	x0, [sp, #24]
   16bc8:	ldr	x0, [x0]
   16bcc:	str	x0, [sp, #48]
   16bd0:	ldr	x0, [sp, #24]
   16bd4:	bl	739c <S_POPMARK>
   16bd8:	str	w0, [sp, #40]
   16bdc:	ldr	x0, [sp, #24]
   16be0:	ldr	x1, [x0, #24]
   16be4:	ldr	w0, [sp, #40]
   16be8:	add	w2, w0, #0x1
   16bec:	str	w2, [sp, #40]
   16bf0:	sxtw	x0, w0
   16bf4:	lsl	x0, x0, #3
   16bf8:	add	x0, x1, x0
   16bfc:	str	x0, [sp, #56]
   16c00:	ldr	x1, [sp, #48]
   16c04:	ldr	x0, [sp, #56]
   16c08:	sub	x0, x1, x0
   16c0c:	asr	x0, x0, #3
   16c10:	str	w0, [sp, #44]
   16c14:	ldr	w0, [sp, #44]
   16c18:	cmp	w0, #0x0
   16c1c:	b.lt	16c2c <XS_POSIX_ctermid+0x78>  // b.tstop
   16c20:	ldr	w0, [sp, #44]
   16c24:	cmp	w0, #0x1
   16c28:	b.le	16c3c <XS_POSIX_ctermid+0x88>
   16c2c:	adrp	x0, 1b000 <_fini+0x1fc>
   16c30:	add	x1, x0, #0x870
   16c34:	ldr	x0, [sp, #16]
   16c38:	bl	6b20 <Perl_croak_xs_usage@plt>
   16c3c:	str	xzr, [sp, #64]
   16c40:	ldr	x0, [sp, #24]
   16c44:	ldr	x0, [x0, #8]
   16c48:	ldrb	w0, [x0, #35]
   16c4c:	and	w0, w0, #0x4
   16c50:	cmp	w0, #0x0
   16c54:	b.eq	16c7c <XS_POSIX_ctermid+0xc8>  // b.none
   16c58:	ldr	x0, [sp, #24]
   16c5c:	ldr	x1, [x0, #16]
   16c60:	ldr	x0, [sp, #24]
   16c64:	ldr	x0, [x0, #8]
   16c68:	ldr	x0, [x0, #24]
   16c6c:	lsl	x0, x0, #3
   16c70:	add	x0, x1, x0
   16c74:	ldr	x0, [x0]
   16c78:	b	16c84 <XS_POSIX_ctermid+0xd0>
   16c7c:	ldr	x0, [sp, #24]
   16c80:	bl	7160 <Perl_sv_newmortal@plt>
   16c84:	str	x0, [sp, #72]
   16c88:	ldr	x0, [sp, #64]
   16c8c:	bl	68e0 <ctermid@plt>
   16c90:	str	x0, [sp, #80]
   16c94:	ldr	x2, [sp, #80]
   16c98:	ldr	x1, [sp, #72]
   16c9c:	ldr	x0, [sp, #24]
   16ca0:	bl	6910 <Perl_sv_setpv@plt>
   16ca4:	ldr	x0, [sp, #24]
   16ca8:	ldr	x1, [x0, #24]
   16cac:	ldrsw	x0, [sp, #40]
   16cb0:	lsl	x0, x0, #3
   16cb4:	sub	x0, x0, #0x8
   16cb8:	add	x0, x1, x0
   16cbc:	str	x0, [sp, #48]
   16cc0:	ldr	x0, [sp, #72]
   16cc4:	ldr	w0, [x0, #12]
   16cc8:	lsr	w0, w0, #22
   16ccc:	mov	w0, w0
   16cd0:	and	x0, x0, #0x1
   16cd4:	cmp	x0, #0x0
   16cd8:	b.eq	16ce8 <XS_POSIX_ctermid+0x134>  // b.none
   16cdc:	ldr	x1, [sp, #72]
   16ce0:	ldr	x0, [sp, #24]
   16ce4:	bl	6d40 <Perl_mg_set@plt>
   16ce8:	ldr	x0, [sp, #48]
   16cec:	add	x0, x0, #0x8
   16cf0:	str	x0, [sp, #48]
   16cf4:	ldr	x0, [sp, #48]
   16cf8:	ldr	x1, [sp, #72]
   16cfc:	str	x1, [x0]
   16d00:	mov	x0, #0x1                   	// #1
   16d04:	str	x0, [sp, #88]
   16d08:	ldr	x0, [sp, #24]
   16d0c:	ldr	x1, [x0, #24]
   16d10:	ldrsw	x2, [sp, #40]
   16d14:	ldr	x0, [sp, #88]
   16d18:	add	x0, x2, x0
   16d1c:	lsl	x0, x0, #3
   16d20:	sub	x0, x0, #0x8
   16d24:	add	x1, x1, x0
   16d28:	ldr	x0, [sp, #24]
   16d2c:	str	x1, [x0]
   16d30:	nop
   16d34:	ldp	x29, x30, [sp], #96
   16d38:	ret

0000000000016d3c <XS_POSIX_cuserid>:
   16d3c:	stp	x29, x30, [sp, #-96]!
   16d40:	mov	x29, sp
   16d44:	str	x0, [sp, #24]
   16d48:	str	x1, [sp, #16]
   16d4c:	ldr	x0, [sp, #24]
   16d50:	ldr	x0, [x0]
   16d54:	str	x0, [sp, #48]
   16d58:	ldr	x0, [sp, #24]
   16d5c:	bl	739c <S_POPMARK>
   16d60:	str	w0, [sp, #40]
   16d64:	ldr	x0, [sp, #24]
   16d68:	ldr	x1, [x0, #24]
   16d6c:	ldr	w0, [sp, #40]
   16d70:	add	w2, w0, #0x1
   16d74:	str	w2, [sp, #40]
   16d78:	sxtw	x0, w0
   16d7c:	lsl	x0, x0, #3
   16d80:	add	x0, x1, x0
   16d84:	str	x0, [sp, #56]
   16d88:	ldr	x1, [sp, #48]
   16d8c:	ldr	x0, [sp, #56]
   16d90:	sub	x0, x1, x0
   16d94:	asr	x0, x0, #3
   16d98:	str	w0, [sp, #44]
   16d9c:	ldr	w0, [sp, #44]
   16da0:	cmp	w0, #0x0
   16da4:	b.lt	16db4 <XS_POSIX_cuserid+0x78>  // b.tstop
   16da8:	ldr	w0, [sp, #44]
   16dac:	cmp	w0, #0x1
   16db0:	b.le	16dc4 <XS_POSIX_cuserid+0x88>
   16db4:	adrp	x0, 1b000 <_fini+0x1fc>
   16db8:	add	x1, x0, #0x870
   16dbc:	ldr	x0, [sp, #16]
   16dc0:	bl	6b20 <Perl_croak_xs_usage@plt>
   16dc4:	str	xzr, [sp, #64]
   16dc8:	ldr	x0, [sp, #24]
   16dcc:	ldr	x0, [x0, #8]
   16dd0:	ldrb	w0, [x0, #35]
   16dd4:	and	w0, w0, #0x4
   16dd8:	cmp	w0, #0x0
   16ddc:	b.eq	16e04 <XS_POSIX_cuserid+0xc8>  // b.none
   16de0:	ldr	x0, [sp, #24]
   16de4:	ldr	x1, [x0, #16]
   16de8:	ldr	x0, [sp, #24]
   16dec:	ldr	x0, [x0, #8]
   16df0:	ldr	x0, [x0, #24]
   16df4:	lsl	x0, x0, #3
   16df8:	add	x0, x1, x0
   16dfc:	ldr	x0, [x0]
   16e00:	b	16e0c <XS_POSIX_cuserid+0xd0>
   16e04:	ldr	x0, [sp, #24]
   16e08:	bl	7160 <Perl_sv_newmortal@plt>
   16e0c:	str	x0, [sp, #72]
   16e10:	ldr	x0, [sp, #64]
   16e14:	bl	6a30 <cuserid@plt>
   16e18:	str	x0, [sp, #80]
   16e1c:	ldr	x2, [sp, #80]
   16e20:	ldr	x1, [sp, #72]
   16e24:	ldr	x0, [sp, #24]
   16e28:	bl	6910 <Perl_sv_setpv@plt>
   16e2c:	ldr	x0, [sp, #24]
   16e30:	ldr	x1, [x0, #24]
   16e34:	ldrsw	x0, [sp, #40]
   16e38:	lsl	x0, x0, #3
   16e3c:	sub	x0, x0, #0x8
   16e40:	add	x0, x1, x0
   16e44:	str	x0, [sp, #48]
   16e48:	ldr	x0, [sp, #72]
   16e4c:	ldr	w0, [x0, #12]
   16e50:	lsr	w0, w0, #22
   16e54:	mov	w0, w0
   16e58:	and	x0, x0, #0x1
   16e5c:	cmp	x0, #0x0
   16e60:	b.eq	16e70 <XS_POSIX_cuserid+0x134>  // b.none
   16e64:	ldr	x1, [sp, #72]
   16e68:	ldr	x0, [sp, #24]
   16e6c:	bl	6d40 <Perl_mg_set@plt>
   16e70:	ldr	x0, [sp, #48]
   16e74:	add	x0, x0, #0x8
   16e78:	str	x0, [sp, #48]
   16e7c:	ldr	x0, [sp, #48]
   16e80:	ldr	x1, [sp, #72]
   16e84:	str	x1, [x0]
   16e88:	mov	x0, #0x1                   	// #1
   16e8c:	str	x0, [sp, #88]
   16e90:	ldr	x0, [sp, #24]
   16e94:	ldr	x1, [x0, #24]
   16e98:	ldrsw	x2, [sp, #40]
   16e9c:	ldr	x0, [sp, #88]
   16ea0:	add	x0, x2, x0
   16ea4:	lsl	x0, x0, #3
   16ea8:	sub	x0, x0, #0x8
   16eac:	add	x1, x1, x0
   16eb0:	ldr	x0, [sp, #24]
   16eb4:	str	x1, [x0]
   16eb8:	nop
   16ebc:	ldp	x29, x30, [sp], #96
   16ec0:	ret

0000000000016ec4 <XS_POSIX_fpathconf>:
   16ec4:	stp	x29, x30, [sp, #-112]!
   16ec8:	mov	x29, sp
   16ecc:	str	x19, [sp, #16]
   16ed0:	str	x0, [sp, #40]
   16ed4:	str	x1, [sp, #32]
   16ed8:	ldr	x0, [sp, #40]
   16edc:	ldr	x0, [x0]
   16ee0:	str	x0, [sp, #64]
   16ee4:	ldr	x0, [sp, #40]
   16ee8:	bl	739c <S_POPMARK>
   16eec:	str	w0, [sp, #48]
   16ef0:	ldr	x0, [sp, #40]
   16ef4:	ldr	x1, [x0, #24]
   16ef8:	ldr	w0, [sp, #48]
   16efc:	add	w2, w0, #0x1
   16f00:	str	w2, [sp, #48]
   16f04:	sxtw	x0, w0
   16f08:	lsl	x0, x0, #3
   16f0c:	add	x0, x1, x0
   16f10:	str	x0, [sp, #72]
   16f14:	ldr	x1, [sp, #64]
   16f18:	ldr	x0, [sp, #72]
   16f1c:	sub	x0, x1, x0
   16f20:	asr	x0, x0, #3
   16f24:	str	w0, [sp, #52]
   16f28:	ldr	w0, [sp, #52]
   16f2c:	cmp	w0, #0x2
   16f30:	b.eq	16f44 <XS_POSIX_fpathconf+0x80>  // b.none
   16f34:	adrp	x0, 1b000 <_fini+0x1fc>
   16f38:	add	x1, x0, #0x878
   16f3c:	ldr	x0, [sp, #32]
   16f40:	bl	6b20 <Perl_croak_xs_usage@plt>
   16f44:	ldr	x0, [sp, #40]
   16f48:	ldr	x1, [x0, #24]
   16f4c:	ldrsw	x0, [sp, #48]
   16f50:	add	x0, x0, #0x1
   16f54:	lsl	x0, x0, #3
   16f58:	add	x0, x1, x0
   16f5c:	ldr	x0, [x0]
   16f60:	ldr	w1, [x0, #12]
   16f64:	mov	w0, #0x100                 	// #256
   16f68:	movk	w0, #0x20, lsl #16
   16f6c:	and	w0, w1, w0
   16f70:	cmp	w0, #0x100
   16f74:	b.ne	16fa0 <XS_POSIX_fpathconf+0xdc>  // b.any
   16f78:	ldr	x0, [sp, #40]
   16f7c:	ldr	x1, [x0, #24]
   16f80:	ldrsw	x0, [sp, #48]
   16f84:	add	x0, x0, #0x1
   16f88:	lsl	x0, x0, #3
   16f8c:	add	x0, x1, x0
   16f90:	ldr	x0, [x0]
   16f94:	ldr	x0, [x0]
   16f98:	ldr	x0, [x0, #32]
   16f9c:	b	16fcc <XS_POSIX_fpathconf+0x108>
   16fa0:	ldr	x0, [sp, #40]
   16fa4:	ldr	x1, [x0, #24]
   16fa8:	ldrsw	x0, [sp, #48]
   16fac:	add	x0, x0, #0x1
   16fb0:	lsl	x0, x0, #3
   16fb4:	add	x0, x1, x0
   16fb8:	ldr	x0, [x0]
   16fbc:	mov	w2, #0x2                   	// #2
   16fc0:	mov	x1, x0
   16fc4:	ldr	x0, [sp, #40]
   16fc8:	bl	6560 <Perl_sv_2iv_flags@plt>
   16fcc:	str	w0, [sp, #56]
   16fd0:	ldr	x0, [sp, #40]
   16fd4:	ldr	x1, [x0, #24]
   16fd8:	ldrsw	x0, [sp, #48]
   16fdc:	lsl	x0, x0, #3
   16fe0:	add	x0, x1, x0
   16fe4:	ldr	x0, [x0]
   16fe8:	ldr	w1, [x0, #12]
   16fec:	mov	w0, #0x100                 	// #256
   16ff0:	movk	w0, #0x20, lsl #16
   16ff4:	and	w0, w1, w0
   16ff8:	cmp	w0, #0x100
   16ffc:	b.ne	17024 <XS_POSIX_fpathconf+0x160>  // b.any
   17000:	ldr	x0, [sp, #40]
   17004:	ldr	x1, [x0, #24]
   17008:	ldrsw	x0, [sp, #48]
   1700c:	lsl	x0, x0, #3
   17010:	add	x0, x1, x0
   17014:	ldr	x0, [x0]
   17018:	ldr	x0, [x0]
   1701c:	ldr	x0, [x0, #32]
   17020:	b	1704c <XS_POSIX_fpathconf+0x188>
   17024:	ldr	x0, [sp, #40]
   17028:	ldr	x1, [x0, #24]
   1702c:	ldrsw	x0, [sp, #48]
   17030:	lsl	x0, x0, #3
   17034:	add	x0, x1, x0
   17038:	ldr	x0, [x0]
   1703c:	mov	w2, #0x2                   	// #2
   17040:	mov	x1, x0
   17044:	ldr	x0, [sp, #40]
   17048:	bl	6560 <Perl_sv_2iv_flags@plt>
   1704c:	str	w0, [sp, #60]
   17050:	ldr	w0, [sp, #60]
   17054:	cmp	w0, #0x0
   17058:	b.ge	170d4 <XS_POSIX_fpathconf+0x210>  // b.tcont
   1705c:	bl	70d0 <__errno_location@plt>
   17060:	mov	x1, x0
   17064:	mov	w0, #0x9                   	// #9
   17068:	str	w0, [x1]
   1706c:	mov	x1, #0xffffffffffffffff    	// #-1
   17070:	ldr	x0, [sp, #40]
   17074:	bl	70b0 <Perl_newSViv@plt>
   17078:	mov	x2, x0
   1707c:	ldr	x0, [sp, #40]
   17080:	ldr	x1, [x0, #24]
   17084:	ldrsw	x0, [sp, #48]
   17088:	lsl	x0, x0, #3
   1708c:	add	x19, x1, x0
   17090:	mov	x1, x2
   17094:	ldr	x0, [sp, #40]
   17098:	bl	6d60 <Perl_sv_2mortal@plt>
   1709c:	str	x0, [x19]
   170a0:	mov	x0, #0x1                   	// #1
   170a4:	str	x0, [sp, #104]
   170a8:	ldr	x0, [sp, #40]
   170ac:	ldr	x1, [x0, #24]
   170b0:	ldrsw	x2, [sp, #48]
   170b4:	ldr	x0, [sp, #104]
   170b8:	add	x0, x2, x0
   170bc:	lsl	x0, x0, #3
   170c0:	sub	x0, x0, #0x8
   170c4:	add	x1, x1, x0
   170c8:	ldr	x0, [sp, #40]
   170cc:	str	x1, [x0]
   170d0:	b	17184 <XS_POSIX_fpathconf+0x2c0>
   170d4:	ldr	w1, [sp, #56]
   170d8:	ldr	w0, [sp, #60]
   170dc:	bl	6c00 <fpathconf@plt>
   170e0:	str	x0, [sp, #80]
   170e4:	ldr	x0, [sp, #40]
   170e8:	bl	7160 <Perl_sv_newmortal@plt>
   170ec:	str	x0, [sp, #88]
   170f0:	ldr	x0, [sp, #80]
   170f4:	cmn	x0, #0x1
   170f8:	b.eq	17134 <XS_POSIX_fpathconf+0x270>  // b.none
   170fc:	ldr	x0, [sp, #80]
   17100:	cmp	x0, #0x0
   17104:	b.ne	17124 <XS_POSIX_fpathconf+0x260>  // b.any
   17108:	mov	x3, #0xa                   	// #10
   1710c:	adrp	x0, 1b000 <_fini+0x1fc>
   17110:	add	x2, x0, #0x188
   17114:	ldr	x1, [sp, #88]
   17118:	ldr	x0, [sp, #40]
   1711c:	bl	6f10 <Perl_sv_setpvn@plt>
   17120:	b	17134 <XS_POSIX_fpathconf+0x270>
   17124:	ldr	x2, [sp, #80]
   17128:	ldr	x1, [sp, #88]
   1712c:	ldr	x0, [sp, #40]
   17130:	bl	7120 <Perl_sv_setiv@plt>
   17134:	ldr	x0, [sp, #40]
   17138:	ldr	x1, [x0, #24]
   1713c:	ldrsw	x0, [sp, #48]
   17140:	lsl	x0, x0, #3
   17144:	add	x0, x1, x0
   17148:	ldr	x1, [sp, #88]
   1714c:	str	x1, [x0]
   17150:	mov	x0, #0x1                   	// #1
   17154:	str	x0, [sp, #96]
   17158:	ldr	x0, [sp, #40]
   1715c:	ldr	x1, [x0, #24]
   17160:	ldrsw	x2, [sp, #48]
   17164:	ldr	x0, [sp, #96]
   17168:	add	x0, x2, x0
   1716c:	lsl	x0, x0, #3
   17170:	sub	x0, x0, #0x8
   17174:	add	x1, x1, x0
   17178:	ldr	x0, [sp, #40]
   1717c:	str	x1, [x0]
   17180:	nop
   17184:	ldr	x19, [sp, #16]
   17188:	ldp	x29, x30, [sp], #112
   1718c:	ret

0000000000017190 <XS_POSIX_pathconf>:
   17190:	stp	x29, x30, [sp, #-96]!
   17194:	mov	x29, sp
   17198:	str	x0, [sp, #24]
   1719c:	str	x1, [sp, #16]
   171a0:	ldr	x0, [sp, #24]
   171a4:	ldr	x0, [x0]
   171a8:	str	x0, [sp, #48]
   171ac:	ldr	x0, [sp, #24]
   171b0:	bl	739c <S_POPMARK>
   171b4:	str	w0, [sp, #36]
   171b8:	ldr	x0, [sp, #24]
   171bc:	ldr	x1, [x0, #24]
   171c0:	ldr	w0, [sp, #36]
   171c4:	add	w2, w0, #0x1
   171c8:	str	w2, [sp, #36]
   171cc:	sxtw	x0, w0
   171d0:	lsl	x0, x0, #3
   171d4:	add	x0, x1, x0
   171d8:	str	x0, [sp, #56]
   171dc:	ldr	x1, [sp, #48]
   171e0:	ldr	x0, [sp, #56]
   171e4:	sub	x0, x1, x0
   171e8:	asr	x0, x0, #3
   171ec:	str	w0, [sp, #40]
   171f0:	ldr	w0, [sp, #40]
   171f4:	cmp	w0, #0x2
   171f8:	b.eq	1720c <XS_POSIX_pathconf+0x7c>  // b.none
   171fc:	adrp	x0, 1b000 <_fini+0x1fc>
   17200:	add	x1, x0, #0x888
   17204:	ldr	x0, [sp, #16]
   17208:	bl	6b20 <Perl_croak_xs_usage@plt>
   1720c:	ldr	x0, [sp, #24]
   17210:	ldr	x1, [x0, #24]
   17214:	ldrsw	x0, [sp, #36]
   17218:	lsl	x0, x0, #3
   1721c:	add	x0, x1, x0
   17220:	ldr	x0, [x0]
   17224:	ldr	w1, [x0, #12]
   17228:	mov	w0, #0x400                 	// #1024
   1722c:	movk	w0, #0x20, lsl #16
   17230:	and	w0, w1, w0
   17234:	cmp	w0, #0x400
   17238:	b.ne	1725c <XS_POSIX_pathconf+0xcc>  // b.any
   1723c:	ldr	x0, [sp, #24]
   17240:	ldr	x1, [x0, #24]
   17244:	ldrsw	x0, [sp, #36]
   17248:	lsl	x0, x0, #3
   1724c:	add	x0, x1, x0
   17250:	ldr	x0, [x0]
   17254:	ldr	x0, [x0, #16]
   17258:	b	17288 <XS_POSIX_pathconf+0xf8>
   1725c:	ldr	x0, [sp, #24]
   17260:	ldr	x1, [x0, #24]
   17264:	ldrsw	x0, [sp, #36]
   17268:	lsl	x0, x0, #3
   1726c:	add	x0, x1, x0
   17270:	ldr	x0, [x0]
   17274:	mov	w3, #0x2                   	// #2
   17278:	mov	x2, #0x0                   	// #0
   1727c:	mov	x1, x0
   17280:	ldr	x0, [sp, #24]
   17284:	bl	69b0 <Perl_sv_2pv_flags@plt>
   17288:	str	x0, [sp, #64]
   1728c:	ldr	x0, [sp, #24]
   17290:	ldr	x1, [x0, #24]
   17294:	ldrsw	x0, [sp, #36]
   17298:	add	x0, x0, #0x1
   1729c:	lsl	x0, x0, #3
   172a0:	add	x0, x1, x0
   172a4:	ldr	x0, [x0]
   172a8:	ldr	w1, [x0, #12]
   172ac:	mov	w0, #0x100                 	// #256
   172b0:	movk	w0, #0x20, lsl #16
   172b4:	and	w0, w1, w0
   172b8:	cmp	w0, #0x100
   172bc:	b.ne	172e8 <XS_POSIX_pathconf+0x158>  // b.any
   172c0:	ldr	x0, [sp, #24]
   172c4:	ldr	x1, [x0, #24]
   172c8:	ldrsw	x0, [sp, #36]
   172cc:	add	x0, x0, #0x1
   172d0:	lsl	x0, x0, #3
   172d4:	add	x0, x1, x0
   172d8:	ldr	x0, [x0]
   172dc:	ldr	x0, [x0]
   172e0:	ldr	x0, [x0, #32]
   172e4:	b	17314 <XS_POSIX_pathconf+0x184>
   172e8:	ldr	x0, [sp, #24]
   172ec:	ldr	x1, [x0, #24]
   172f0:	ldrsw	x0, [sp, #36]
   172f4:	add	x0, x0, #0x1
   172f8:	lsl	x0, x0, #3
   172fc:	add	x0, x1, x0
   17300:	ldr	x0, [x0]
   17304:	mov	w2, #0x2                   	// #2
   17308:	mov	x1, x0
   1730c:	ldr	x0, [sp, #24]
   17310:	bl	6560 <Perl_sv_2iv_flags@plt>
   17314:	str	w0, [sp, #44]
   17318:	ldr	w1, [sp, #44]
   1731c:	ldr	x0, [sp, #64]
   17320:	bl	6780 <pathconf@plt>
   17324:	str	x0, [sp, #72]
   17328:	ldr	x0, [sp, #24]
   1732c:	bl	7160 <Perl_sv_newmortal@plt>
   17330:	str	x0, [sp, #80]
   17334:	ldr	x0, [sp, #72]
   17338:	cmn	x0, #0x1
   1733c:	b.eq	17378 <XS_POSIX_pathconf+0x1e8>  // b.none
   17340:	ldr	x0, [sp, #72]
   17344:	cmp	x0, #0x0
   17348:	b.ne	17368 <XS_POSIX_pathconf+0x1d8>  // b.any
   1734c:	mov	x3, #0xa                   	// #10
   17350:	adrp	x0, 1b000 <_fini+0x1fc>
   17354:	add	x2, x0, #0x188
   17358:	ldr	x1, [sp, #80]
   1735c:	ldr	x0, [sp, #24]
   17360:	bl	6f10 <Perl_sv_setpvn@plt>
   17364:	b	17378 <XS_POSIX_pathconf+0x1e8>
   17368:	ldr	x2, [sp, #72]
   1736c:	ldr	x1, [sp, #80]
   17370:	ldr	x0, [sp, #24]
   17374:	bl	7120 <Perl_sv_setiv@plt>
   17378:	ldr	x0, [sp, #24]
   1737c:	ldr	x1, [x0, #24]
   17380:	ldrsw	x0, [sp, #36]
   17384:	lsl	x0, x0, #3
   17388:	add	x0, x1, x0
   1738c:	ldr	x1, [sp, #80]
   17390:	str	x1, [x0]
   17394:	mov	x0, #0x1                   	// #1
   17398:	str	x0, [sp, #88]
   1739c:	ldr	x0, [sp, #24]
   173a0:	ldr	x1, [x0, #24]
   173a4:	ldrsw	x2, [sp, #36]
   173a8:	ldr	x0, [sp, #88]
   173ac:	add	x0, x2, x0
   173b0:	lsl	x0, x0, #3
   173b4:	sub	x0, x0, #0x8
   173b8:	add	x1, x1, x0
   173bc:	ldr	x0, [sp, #24]
   173c0:	str	x1, [x0]
   173c4:	nop
   173c8:	ldp	x29, x30, [sp], #96
   173cc:	ret

00000000000173d0 <XS_POSIX_pause>:
   173d0:	stp	x29, x30, [sp, #-80]!
   173d4:	mov	x29, sp
   173d8:	str	x0, [sp, #24]
   173dc:	str	x1, [sp, #16]
   173e0:	ldr	x0, [sp, #24]
   173e4:	ldr	x0, [x0]
   173e8:	str	x0, [sp, #48]
   173ec:	ldr	x0, [sp, #24]
   173f0:	bl	739c <S_POPMARK>
   173f4:	str	w0, [sp, #36]
   173f8:	ldr	x0, [sp, #24]
   173fc:	ldr	x1, [x0, #24]
   17400:	ldr	w0, [sp, #36]
   17404:	add	w2, w0, #0x1
   17408:	str	w2, [sp, #36]
   1740c:	sxtw	x0, w0
   17410:	lsl	x0, x0, #3
   17414:	add	x0, x1, x0
   17418:	str	x0, [sp, #56]
   1741c:	ldr	x1, [sp, #48]
   17420:	ldr	x0, [sp, #56]
   17424:	sub	x0, x1, x0
   17428:	asr	x0, x0, #3
   1742c:	str	w0, [sp, #40]
   17430:	ldr	w0, [sp, #40]
   17434:	cmp	w0, #0x0
   17438:	b.eq	1744c <XS_POSIX_pause+0x7c>  // b.none
   1743c:	adrp	x0, 1b000 <_fini+0x1fc>
   17440:	add	x1, x0, #0x3f0
   17444:	ldr	x0, [sp, #16]
   17448:	bl	6b20 <Perl_croak_xs_usage@plt>
   1744c:	bl	66e0 <pause@plt>
   17450:	str	w0, [sp, #44]
   17454:	ldr	x0, [sp, #24]
   17458:	bl	7160 <Perl_sv_newmortal@plt>
   1745c:	str	x0, [sp, #64]
   17460:	ldr	w0, [sp, #44]
   17464:	cmn	w0, #0x1
   17468:	b.eq	174a8 <XS_POSIX_pause+0xd8>  // b.none
   1746c:	ldr	w0, [sp, #44]
   17470:	cmp	w0, #0x0
   17474:	b.ne	17494 <XS_POSIX_pause+0xc4>  // b.any
   17478:	mov	x3, #0xa                   	// #10
   1747c:	adrp	x0, 1b000 <_fini+0x1fc>
   17480:	add	x2, x0, #0x188
   17484:	ldr	x1, [sp, #64]
   17488:	ldr	x0, [sp, #24]
   1748c:	bl	6f10 <Perl_sv_setpvn@plt>
   17490:	b	174a8 <XS_POSIX_pause+0xd8>
   17494:	ldrsw	x0, [sp, #44]
   17498:	mov	x2, x0
   1749c:	ldr	x1, [sp, #64]
   174a0:	ldr	x0, [sp, #24]
   174a4:	bl	7120 <Perl_sv_setiv@plt>
   174a8:	ldr	x0, [sp, #24]
   174ac:	ldr	x1, [x0, #24]
   174b0:	ldrsw	x0, [sp, #36]
   174b4:	lsl	x0, x0, #3
   174b8:	add	x0, x1, x0
   174bc:	ldr	x1, [sp, #64]
   174c0:	str	x1, [x0]
   174c4:	ldr	x0, [sp, #24]
   174c8:	ldr	w0, [x0, #1684]
   174cc:	cmp	w0, #0x0
   174d0:	cset	w0, ne  // ne = any
   174d4:	and	w0, w0, #0xff
   174d8:	and	x0, x0, #0xff
   174dc:	cmp	x0, #0x0
   174e0:	b.eq	174f4 <XS_POSIX_pause+0x124>  // b.none
   174e4:	ldr	x0, [sp, #24]
   174e8:	ldr	x1, [x0, #2896]
   174ec:	ldr	x0, [sp, #24]
   174f0:	blr	x1
   174f4:	mov	x0, #0x1                   	// #1
   174f8:	str	x0, [sp, #72]
   174fc:	ldr	x0, [sp, #24]
   17500:	ldr	x1, [x0, #24]
   17504:	ldrsw	x2, [sp, #36]
   17508:	ldr	x0, [sp, #72]
   1750c:	add	x0, x2, x0
   17510:	lsl	x0, x0, #3
   17514:	sub	x0, x0, #0x8
   17518:	add	x1, x1, x0
   1751c:	ldr	x0, [sp, #24]
   17520:	str	x1, [x0]
   17524:	nop
   17528:	ldp	x29, x30, [sp], #80
   1752c:	ret

0000000000017530 <XS_POSIX_sleep>:
   17530:	stp	x29, x30, [sp, #-96]!
   17534:	mov	x29, sp
   17538:	str	x0, [sp, #24]
   1753c:	str	x1, [sp, #16]
   17540:	ldr	x0, [sp, #24]
   17544:	ldr	x0, [x0]
   17548:	str	x0, [sp, #56]
   1754c:	ldr	x0, [sp, #24]
   17550:	bl	739c <S_POPMARK>
   17554:	str	w0, [sp, #40]
   17558:	ldr	x0, [sp, #24]
   1755c:	ldr	x1, [x0, #24]
   17560:	ldr	w0, [sp, #40]
   17564:	add	w2, w0, #0x1
   17568:	str	w2, [sp, #40]
   1756c:	sxtw	x0, w0
   17570:	lsl	x0, x0, #3
   17574:	add	x0, x1, x0
   17578:	str	x0, [sp, #64]
   1757c:	ldr	x1, [sp, #56]
   17580:	ldr	x0, [sp, #64]
   17584:	sub	x0, x1, x0
   17588:	asr	x0, x0, #3
   1758c:	str	w0, [sp, #44]
   17590:	ldr	w0, [sp, #44]
   17594:	cmp	w0, #0x1
   17598:	b.eq	175ac <XS_POSIX_sleep+0x7c>  // b.none
   1759c:	adrp	x0, 1b000 <_fini+0x1fc>
   175a0:	add	x1, x0, #0x898
   175a4:	ldr	x0, [sp, #16]
   175a8:	bl	6b20 <Perl_croak_xs_usage@plt>
   175ac:	ldr	x0, [sp, #24]
   175b0:	ldr	x1, [x0, #24]
   175b4:	ldrsw	x0, [sp, #40]
   175b8:	lsl	x0, x0, #3
   175bc:	add	x0, x1, x0
   175c0:	ldr	x0, [x0]
   175c4:	ldr	w1, [x0, #12]
   175c8:	mov	w0, #0x100                 	// #256
   175cc:	movk	w0, #0x8020, lsl #16
   175d0:	and	w1, w1, w0
   175d4:	mov	w0, #0x100                 	// #256
   175d8:	movk	w0, #0x8000, lsl #16
   175dc:	cmp	w1, w0
   175e0:	b.ne	17608 <XS_POSIX_sleep+0xd8>  // b.any
   175e4:	ldr	x0, [sp, #24]
   175e8:	ldr	x1, [x0, #24]
   175ec:	ldrsw	x0, [sp, #40]
   175f0:	lsl	x0, x0, #3
   175f4:	add	x0, x1, x0
   175f8:	ldr	x0, [x0]
   175fc:	ldr	x0, [x0]
   17600:	ldr	x0, [x0, #32]
   17604:	b	17630 <XS_POSIX_sleep+0x100>
   17608:	ldr	x0, [sp, #24]
   1760c:	ldr	x1, [x0, #24]
   17610:	ldrsw	x0, [sp, #40]
   17614:	lsl	x0, x0, #3
   17618:	add	x0, x1, x0
   1761c:	ldr	x0, [x0]
   17620:	mov	w2, #0x2                   	// #2
   17624:	mov	x1, x0
   17628:	ldr	x0, [sp, #24]
   1762c:	bl	6650 <Perl_sv_2uv_flags@plt>
   17630:	str	w0, [sp, #48]
   17634:	ldr	x0, [sp, #24]
   17638:	ldr	x0, [x0, #8]
   1763c:	ldrb	w0, [x0, #35]
   17640:	and	w0, w0, #0x4
   17644:	cmp	w0, #0x0
   17648:	b.eq	17670 <XS_POSIX_sleep+0x140>  // b.none
   1764c:	ldr	x0, [sp, #24]
   17650:	ldr	x1, [x0, #16]
   17654:	ldr	x0, [sp, #24]
   17658:	ldr	x0, [x0, #8]
   1765c:	ldr	x0, [x0, #24]
   17660:	lsl	x0, x0, #3
   17664:	add	x0, x1, x0
   17668:	ldr	x0, [x0]
   1766c:	b	17678 <XS_POSIX_sleep+0x148>
   17670:	ldr	x0, [sp, #24]
   17674:	bl	7160 <Perl_sv_newmortal@plt>
   17678:	str	x0, [sp, #72]
   1767c:	ldr	w0, [sp, #48]
   17680:	bl	69f0 <sleep@plt>
   17684:	str	w0, [sp, #52]
   17688:	ldr	x0, [sp, #24]
   1768c:	ldr	x1, [x0, #24]
   17690:	ldrsw	x0, [sp, #40]
   17694:	lsl	x0, x0, #3
   17698:	sub	x0, x0, #0x8
   1769c:	add	x0, x1, x0
   176a0:	str	x0, [sp, #56]
   176a4:	ldr	w0, [sp, #52]
   176a8:	str	x0, [sp, #80]
   176ac:	ldr	x0, [sp, #72]
   176b0:	ldr	w1, [x0, #12]
   176b4:	mov	w0, #0x8ff                 	// #2303
   176b8:	movk	w0, #0x9981, lsl #16
   176bc:	and	w0, w1, w0
   176c0:	cmp	w0, #0x1
   176c4:	cset	w0, eq  // eq = none
   176c8:	and	w0, w0, #0xff
   176cc:	mov	w1, w0
   176d0:	ldr	x0, [sp, #24]
   176d4:	ldrb	w0, [x0, #185]
   176d8:	eor	w0, w0, #0x1
   176dc:	and	w0, w0, #0xff
   176e0:	and	w0, w1, w0
   176e4:	ldr	x1, [sp, #80]
   176e8:	mvn	x1, x1
   176ec:	lsr	x1, x1, #63
   176f0:	and	w1, w1, #0xff
   176f4:	and	w0, w0, w1
   176f8:	cmp	w0, #0x0
   176fc:	cset	w0, ne  // ne = any
   17700:	and	w0, w0, #0xff
   17704:	and	x0, x0, #0xff
   17708:	cmp	x0, #0x0
   1770c:	b.eq	17738 <XS_POSIX_sleep+0x208>  // b.none
   17710:	ldr	x0, [sp, #72]
   17714:	ldr	w1, [x0, #12]
   17718:	mov	w0, #0x1100                	// #4352
   1771c:	orr	w1, w1, w0
   17720:	ldr	x0, [sp, #72]
   17724:	str	w1, [x0, #12]
   17728:	ldr	x1, [sp, #80]
   1772c:	ldr	x0, [sp, #72]
   17730:	str	x1, [x0, #16]
   17734:	b	17748 <XS_POSIX_sleep+0x218>
   17738:	ldr	x2, [sp, #80]
   1773c:	ldr	x1, [sp, #72]
   17740:	ldr	x0, [sp, #24]
   17744:	bl	7010 <Perl_sv_setuv_mg@plt>
   17748:	ldr	x0, [sp, #56]
   1774c:	add	x0, x0, #0x8
   17750:	str	x0, [sp, #56]
   17754:	ldr	x0, [sp, #56]
   17758:	ldr	x1, [sp, #72]
   1775c:	str	x1, [x0]
   17760:	mov	x0, #0x1                   	// #1
   17764:	str	x0, [sp, #88]
   17768:	ldr	x0, [sp, #24]
   1776c:	ldr	x1, [x0, #24]
   17770:	ldrsw	x2, [sp, #40]
   17774:	ldr	x0, [sp, #88]
   17778:	add	x0, x2, x0
   1777c:	lsl	x0, x0, #3
   17780:	sub	x0, x0, #0x8
   17784:	add	x1, x1, x0
   17788:	ldr	x0, [sp, #24]
   1778c:	str	x1, [x0]
   17790:	nop
   17794:	ldp	x29, x30, [sp], #96
   17798:	ret

000000000001779c <XS_POSIX_setgid>:
   1779c:	stp	x29, x30, [sp, #-80]!
   177a0:	mov	x29, sp
   177a4:	str	x0, [sp, #24]
   177a8:	str	x1, [sp, #16]
   177ac:	ldr	x0, [sp, #24]
   177b0:	ldr	x0, [x0]
   177b4:	str	x0, [sp, #48]
   177b8:	ldr	x0, [sp, #24]
   177bc:	bl	739c <S_POPMARK>
   177c0:	str	w0, [sp, #32]
   177c4:	ldr	x0, [sp, #24]
   177c8:	ldr	x1, [x0, #24]
   177cc:	ldr	w0, [sp, #32]
   177d0:	add	w2, w0, #0x1
   177d4:	str	w2, [sp, #32]
   177d8:	sxtw	x0, w0
   177dc:	lsl	x0, x0, #3
   177e0:	add	x0, x1, x0
   177e4:	str	x0, [sp, #56]
   177e8:	ldr	x1, [sp, #48]
   177ec:	ldr	x0, [sp, #56]
   177f0:	sub	x0, x1, x0
   177f4:	asr	x0, x0, #3
   177f8:	str	w0, [sp, #36]
   177fc:	ldr	w0, [sp, #36]
   17800:	cmp	w0, #0x1
   17804:	b.eq	17818 <XS_POSIX_setgid+0x7c>  // b.none
   17808:	adrp	x0, 1b000 <_fini+0x1fc>
   1780c:	add	x1, x0, #0x8a0
   17810:	ldr	x0, [sp, #16]
   17814:	bl	6b20 <Perl_croak_xs_usage@plt>
   17818:	ldr	x0, [sp, #24]
   1781c:	ldr	x1, [x0, #24]
   17820:	ldrsw	x0, [sp, #32]
   17824:	lsl	x0, x0, #3
   17828:	add	x0, x1, x0
   1782c:	ldr	x0, [x0]
   17830:	ldr	w1, [x0, #12]
   17834:	mov	w0, #0x200                 	// #512
   17838:	movk	w0, #0x20, lsl #16
   1783c:	and	w0, w1, w0
   17840:	cmp	w0, #0x200
   17844:	b.ne	17870 <XS_POSIX_setgid+0xd4>  // b.any
   17848:	ldr	x0, [sp, #24]
   1784c:	ldr	x1, [x0, #24]
   17850:	ldrsw	x0, [sp, #32]
   17854:	lsl	x0, x0, #3
   17858:	add	x0, x1, x0
   1785c:	ldr	x0, [x0]
   17860:	ldr	x0, [x0]
   17864:	ldr	d0, [x0, #40]
   17868:	fcvtzu	w0, d0
   1786c:	b	1789c <XS_POSIX_setgid+0x100>
   17870:	ldr	x0, [sp, #24]
   17874:	ldr	x1, [x0, #24]
   17878:	ldrsw	x0, [sp, #32]
   1787c:	lsl	x0, x0, #3
   17880:	add	x0, x1, x0
   17884:	ldr	x0, [x0]
   17888:	mov	w2, #0x2                   	// #2
   1788c:	mov	x1, x0
   17890:	ldr	x0, [sp, #24]
   17894:	bl	6b80 <Perl_sv_2nv_flags@plt>
   17898:	fcvtzu	w0, d0
   1789c:	str	w0, [sp, #40]
   178a0:	ldr	w0, [sp, #40]
   178a4:	bl	6bb0 <setgid@plt>
   178a8:	str	w0, [sp, #44]
   178ac:	ldr	x0, [sp, #24]
   178b0:	bl	7160 <Perl_sv_newmortal@plt>
   178b4:	str	x0, [sp, #64]
   178b8:	ldr	w0, [sp, #44]
   178bc:	cmn	w0, #0x1
   178c0:	b.eq	17900 <XS_POSIX_setgid+0x164>  // b.none
   178c4:	ldr	w0, [sp, #44]
   178c8:	cmp	w0, #0x0
   178cc:	b.ne	178ec <XS_POSIX_setgid+0x150>  // b.any
   178d0:	mov	x3, #0xa                   	// #10
   178d4:	adrp	x0, 1b000 <_fini+0x1fc>
   178d8:	add	x2, x0, #0x188
   178dc:	ldr	x1, [sp, #64]
   178e0:	ldr	x0, [sp, #24]
   178e4:	bl	6f10 <Perl_sv_setpvn@plt>
   178e8:	b	17900 <XS_POSIX_setgid+0x164>
   178ec:	ldrsw	x0, [sp, #44]
   178f0:	mov	x2, x0
   178f4:	ldr	x1, [sp, #64]
   178f8:	ldr	x0, [sp, #24]
   178fc:	bl	7120 <Perl_sv_setiv@plt>
   17900:	ldr	x0, [sp, #24]
   17904:	ldr	x1, [x0, #24]
   17908:	ldrsw	x0, [sp, #32]
   1790c:	lsl	x0, x0, #3
   17910:	add	x0, x1, x0
   17914:	ldr	x1, [sp, #64]
   17918:	str	x1, [x0]
   1791c:	mov	x0, #0x1                   	// #1
   17920:	str	x0, [sp, #72]
   17924:	ldr	x0, [sp, #24]
   17928:	ldr	x1, [x0, #24]
   1792c:	ldrsw	x2, [sp, #32]
   17930:	ldr	x0, [sp, #72]
   17934:	add	x0, x2, x0
   17938:	lsl	x0, x0, #3
   1793c:	sub	x0, x0, #0x8
   17940:	add	x1, x1, x0
   17944:	ldr	x0, [sp, #24]
   17948:	str	x1, [x0]
   1794c:	nop
   17950:	ldp	x29, x30, [sp], #80
   17954:	ret

0000000000017958 <XS_POSIX_setuid>:
   17958:	stp	x29, x30, [sp, #-80]!
   1795c:	mov	x29, sp
   17960:	str	x0, [sp, #24]
   17964:	str	x1, [sp, #16]
   17968:	ldr	x0, [sp, #24]
   1796c:	ldr	x0, [x0]
   17970:	str	x0, [sp, #48]
   17974:	ldr	x0, [sp, #24]
   17978:	bl	739c <S_POPMARK>
   1797c:	str	w0, [sp, #32]
   17980:	ldr	x0, [sp, #24]
   17984:	ldr	x1, [x0, #24]
   17988:	ldr	w0, [sp, #32]
   1798c:	add	w2, w0, #0x1
   17990:	str	w2, [sp, #32]
   17994:	sxtw	x0, w0
   17998:	lsl	x0, x0, #3
   1799c:	add	x0, x1, x0
   179a0:	str	x0, [sp, #56]
   179a4:	ldr	x1, [sp, #48]
   179a8:	ldr	x0, [sp, #56]
   179ac:	sub	x0, x1, x0
   179b0:	asr	x0, x0, #3
   179b4:	str	w0, [sp, #36]
   179b8:	ldr	w0, [sp, #36]
   179bc:	cmp	w0, #0x1
   179c0:	b.eq	179d4 <XS_POSIX_setuid+0x7c>  // b.none
   179c4:	adrp	x0, 1b000 <_fini+0x1fc>
   179c8:	add	x1, x0, #0x8a8
   179cc:	ldr	x0, [sp, #16]
   179d0:	bl	6b20 <Perl_croak_xs_usage@plt>
   179d4:	ldr	x0, [sp, #24]
   179d8:	ldr	x1, [x0, #24]
   179dc:	ldrsw	x0, [sp, #32]
   179e0:	lsl	x0, x0, #3
   179e4:	add	x0, x1, x0
   179e8:	ldr	x0, [x0]
   179ec:	ldr	w1, [x0, #12]
   179f0:	mov	w0, #0x200                 	// #512
   179f4:	movk	w0, #0x20, lsl #16
   179f8:	and	w0, w1, w0
   179fc:	cmp	w0, #0x200
   17a00:	b.ne	17a2c <XS_POSIX_setuid+0xd4>  // b.any
   17a04:	ldr	x0, [sp, #24]
   17a08:	ldr	x1, [x0, #24]
   17a0c:	ldrsw	x0, [sp, #32]
   17a10:	lsl	x0, x0, #3
   17a14:	add	x0, x1, x0
   17a18:	ldr	x0, [x0]
   17a1c:	ldr	x0, [x0]
   17a20:	ldr	d0, [x0, #40]
   17a24:	fcvtzu	w0, d0
   17a28:	b	17a58 <XS_POSIX_setuid+0x100>
   17a2c:	ldr	x0, [sp, #24]
   17a30:	ldr	x1, [x0, #24]
   17a34:	ldrsw	x0, [sp, #32]
   17a38:	lsl	x0, x0, #3
   17a3c:	add	x0, x1, x0
   17a40:	ldr	x0, [x0]
   17a44:	mov	w2, #0x2                   	// #2
   17a48:	mov	x1, x0
   17a4c:	ldr	x0, [sp, #24]
   17a50:	bl	6b80 <Perl_sv_2nv_flags@plt>
   17a54:	fcvtzu	w0, d0
   17a58:	str	w0, [sp, #40]
   17a5c:	ldr	w0, [sp, #40]
   17a60:	bl	65a0 <setuid@plt>
   17a64:	str	w0, [sp, #44]
   17a68:	ldr	x0, [sp, #24]
   17a6c:	bl	7160 <Perl_sv_newmortal@plt>
   17a70:	str	x0, [sp, #64]
   17a74:	ldr	w0, [sp, #44]
   17a78:	cmn	w0, #0x1
   17a7c:	b.eq	17abc <XS_POSIX_setuid+0x164>  // b.none
   17a80:	ldr	w0, [sp, #44]
   17a84:	cmp	w0, #0x0
   17a88:	b.ne	17aa8 <XS_POSIX_setuid+0x150>  // b.any
   17a8c:	mov	x3, #0xa                   	// #10
   17a90:	adrp	x0, 1b000 <_fini+0x1fc>
   17a94:	add	x2, x0, #0x188
   17a98:	ldr	x1, [sp, #64]
   17a9c:	ldr	x0, [sp, #24]
   17aa0:	bl	6f10 <Perl_sv_setpvn@plt>
   17aa4:	b	17abc <XS_POSIX_setuid+0x164>
   17aa8:	ldrsw	x0, [sp, #44]
   17aac:	mov	x2, x0
   17ab0:	ldr	x1, [sp, #64]
   17ab4:	ldr	x0, [sp, #24]
   17ab8:	bl	7120 <Perl_sv_setiv@plt>
   17abc:	ldr	x0, [sp, #24]
   17ac0:	ldr	x1, [x0, #24]
   17ac4:	ldrsw	x0, [sp, #32]
   17ac8:	lsl	x0, x0, #3
   17acc:	add	x0, x1, x0
   17ad0:	ldr	x1, [sp, #64]
   17ad4:	str	x1, [x0]
   17ad8:	mov	x0, #0x1                   	// #1
   17adc:	str	x0, [sp, #72]
   17ae0:	ldr	x0, [sp, #24]
   17ae4:	ldr	x1, [x0, #24]
   17ae8:	ldrsw	x2, [sp, #32]
   17aec:	ldr	x0, [sp, #72]
   17af0:	add	x0, x2, x0
   17af4:	lsl	x0, x0, #3
   17af8:	sub	x0, x0, #0x8
   17afc:	add	x1, x1, x0
   17b00:	ldr	x0, [sp, #24]
   17b04:	str	x1, [x0]
   17b08:	nop
   17b0c:	ldp	x29, x30, [sp], #80
   17b10:	ret

0000000000017b14 <XS_POSIX_sysconf>:
   17b14:	stp	x29, x30, [sp, #-96]!
   17b18:	mov	x29, sp
   17b1c:	str	x0, [sp, #24]
   17b20:	str	x1, [sp, #16]
   17b24:	ldr	x0, [sp, #24]
   17b28:	ldr	x0, [x0]
   17b2c:	str	x0, [sp, #56]
   17b30:	ldr	x0, [sp, #24]
   17b34:	bl	739c <S_POPMARK>
   17b38:	str	w0, [sp, #44]
   17b3c:	ldr	x0, [sp, #24]
   17b40:	ldr	x1, [x0, #24]
   17b44:	ldr	w0, [sp, #44]
   17b48:	add	w2, w0, #0x1
   17b4c:	str	w2, [sp, #44]
   17b50:	sxtw	x0, w0
   17b54:	lsl	x0, x0, #3
   17b58:	add	x0, x1, x0
   17b5c:	str	x0, [sp, #64]
   17b60:	ldr	x1, [sp, #56]
   17b64:	ldr	x0, [sp, #64]
   17b68:	sub	x0, x1, x0
   17b6c:	asr	x0, x0, #3
   17b70:	str	w0, [sp, #48]
   17b74:	ldr	w0, [sp, #48]
   17b78:	cmp	w0, #0x1
   17b7c:	b.eq	17b90 <XS_POSIX_sysconf+0x7c>  // b.none
   17b80:	adrp	x0, 1b000 <_fini+0x1fc>
   17b84:	add	x1, x0, #0x8b0
   17b88:	ldr	x0, [sp, #16]
   17b8c:	bl	6b20 <Perl_croak_xs_usage@plt>
   17b90:	ldr	x0, [sp, #24]
   17b94:	ldr	x1, [x0, #24]
   17b98:	ldrsw	x0, [sp, #44]
   17b9c:	lsl	x0, x0, #3
   17ba0:	add	x0, x1, x0
   17ba4:	ldr	x0, [x0]
   17ba8:	ldr	w1, [x0, #12]
   17bac:	mov	w0, #0x100                 	// #256
   17bb0:	movk	w0, #0x20, lsl #16
   17bb4:	and	w0, w1, w0
   17bb8:	cmp	w0, #0x100
   17bbc:	b.ne	17be4 <XS_POSIX_sysconf+0xd0>  // b.any
   17bc0:	ldr	x0, [sp, #24]
   17bc4:	ldr	x1, [x0, #24]
   17bc8:	ldrsw	x0, [sp, #44]
   17bcc:	lsl	x0, x0, #3
   17bd0:	add	x0, x1, x0
   17bd4:	ldr	x0, [x0]
   17bd8:	ldr	x0, [x0]
   17bdc:	ldr	x0, [x0, #32]
   17be0:	b	17c0c <XS_POSIX_sysconf+0xf8>
   17be4:	ldr	x0, [sp, #24]
   17be8:	ldr	x1, [x0, #24]
   17bec:	ldrsw	x0, [sp, #44]
   17bf0:	lsl	x0, x0, #3
   17bf4:	add	x0, x1, x0
   17bf8:	ldr	x0, [x0]
   17bfc:	mov	w2, #0x2                   	// #2
   17c00:	mov	x1, x0
   17c04:	ldr	x0, [sp, #24]
   17c08:	bl	6560 <Perl_sv_2iv_flags@plt>
   17c0c:	str	w0, [sp, #52]
   17c10:	ldr	w0, [sp, #52]
   17c14:	bl	6eb0 <sysconf@plt>
   17c18:	str	x0, [sp, #72]
   17c1c:	ldr	x0, [sp, #24]
   17c20:	bl	7160 <Perl_sv_newmortal@plt>
   17c24:	str	x0, [sp, #80]
   17c28:	ldr	x0, [sp, #72]
   17c2c:	cmn	x0, #0x1
   17c30:	b.eq	17c6c <XS_POSIX_sysconf+0x158>  // b.none
   17c34:	ldr	x0, [sp, #72]
   17c38:	cmp	x0, #0x0
   17c3c:	b.ne	17c5c <XS_POSIX_sysconf+0x148>  // b.any
   17c40:	mov	x3, #0xa                   	// #10
   17c44:	adrp	x0, 1b000 <_fini+0x1fc>
   17c48:	add	x2, x0, #0x188
   17c4c:	ldr	x1, [sp, #80]
   17c50:	ldr	x0, [sp, #24]
   17c54:	bl	6f10 <Perl_sv_setpvn@plt>
   17c58:	b	17c6c <XS_POSIX_sysconf+0x158>
   17c5c:	ldr	x2, [sp, #72]
   17c60:	ldr	x1, [sp, #80]
   17c64:	ldr	x0, [sp, #24]
   17c68:	bl	7120 <Perl_sv_setiv@plt>
   17c6c:	ldr	x0, [sp, #24]
   17c70:	ldr	x1, [x0, #24]
   17c74:	ldrsw	x0, [sp, #44]
   17c78:	lsl	x0, x0, #3
   17c7c:	add	x0, x1, x0
   17c80:	ldr	x1, [sp, #80]
   17c84:	str	x1, [x0]
   17c88:	mov	x0, #0x1                   	// #1
   17c8c:	str	x0, [sp, #88]
   17c90:	ldr	x0, [sp, #24]
   17c94:	ldr	x1, [x0, #24]
   17c98:	ldrsw	x2, [sp, #44]
   17c9c:	ldr	x0, [sp, #88]
   17ca0:	add	x0, x2, x0
   17ca4:	lsl	x0, x0, #3
   17ca8:	sub	x0, x0, #0x8
   17cac:	add	x1, x1, x0
   17cb0:	ldr	x0, [sp, #24]
   17cb4:	str	x1, [x0]
   17cb8:	nop
   17cbc:	ldp	x29, x30, [sp], #96
   17cc0:	ret

0000000000017cc4 <XS_POSIX_ttyname>:
   17cc4:	stp	x29, x30, [sp, #-112]!
   17cc8:	mov	x29, sp
   17ccc:	str	x19, [sp, #16]
   17cd0:	str	x0, [sp, #40]
   17cd4:	str	x1, [sp, #32]
   17cd8:	ldr	x0, [sp, #40]
   17cdc:	ldr	x0, [x0]
   17ce0:	str	x0, [sp, #64]
   17ce4:	ldr	x0, [sp, #40]
   17ce8:	bl	739c <S_POPMARK>
   17cec:	str	w0, [sp, #52]
   17cf0:	ldr	x0, [sp, #40]
   17cf4:	ldr	x1, [x0, #24]
   17cf8:	ldr	w0, [sp, #52]
   17cfc:	add	w2, w0, #0x1
   17d00:	str	w2, [sp, #52]
   17d04:	sxtw	x0, w0
   17d08:	lsl	x0, x0, #3
   17d0c:	add	x0, x1, x0
   17d10:	str	x0, [sp, #72]
   17d14:	ldr	x1, [sp, #64]
   17d18:	ldr	x0, [sp, #72]
   17d1c:	sub	x0, x1, x0
   17d20:	asr	x0, x0, #3
   17d24:	str	w0, [sp, #56]
   17d28:	ldr	w0, [sp, #56]
   17d2c:	cmp	w0, #0x1
   17d30:	b.eq	17d44 <XS_POSIX_ttyname+0x80>  // b.none
   17d34:	adrp	x0, 1b000 <_fini+0x1fc>
   17d38:	add	x1, x0, #0x730
   17d3c:	ldr	x0, [sp, #32]
   17d40:	bl	6b20 <Perl_croak_xs_usage@plt>
   17d44:	ldr	x0, [sp, #40]
   17d48:	ldr	x0, [x0, #8]
   17d4c:	ldrb	w0, [x0, #35]
   17d50:	and	w0, w0, #0x4
   17d54:	cmp	w0, #0x0
   17d58:	b.eq	17d80 <XS_POSIX_ttyname+0xbc>  // b.none
   17d5c:	ldr	x0, [sp, #40]
   17d60:	ldr	x1, [x0, #16]
   17d64:	ldr	x0, [sp, #40]
   17d68:	ldr	x0, [x0, #8]
   17d6c:	ldr	x0, [x0, #24]
   17d70:	lsl	x0, x0, #3
   17d74:	add	x0, x1, x0
   17d78:	ldr	x0, [x0]
   17d7c:	b	17d88 <XS_POSIX_ttyname+0xc4>
   17d80:	ldr	x0, [sp, #40]
   17d84:	bl	7160 <Perl_sv_newmortal@plt>
   17d88:	str	x0, [sp, #80]
   17d8c:	ldr	x0, [sp, #40]
   17d90:	ldr	x1, [x0, #24]
   17d94:	ldrsw	x0, [sp, #52]
   17d98:	lsl	x0, x0, #3
   17d9c:	add	x0, x1, x0
   17da0:	ldr	x0, [x0]
   17da4:	ldr	w1, [x0, #12]
   17da8:	mov	w0, #0x100                 	// #256
   17dac:	movk	w0, #0x20, lsl #16
   17db0:	and	w0, w1, w0
   17db4:	cmp	w0, #0x100
   17db8:	b.ne	17de0 <XS_POSIX_ttyname+0x11c>  // b.any
   17dbc:	ldr	x0, [sp, #40]
   17dc0:	ldr	x1, [x0, #24]
   17dc4:	ldrsw	x0, [sp, #52]
   17dc8:	lsl	x0, x0, #3
   17dcc:	add	x0, x1, x0
   17dd0:	ldr	x0, [x0]
   17dd4:	ldr	x0, [x0]
   17dd8:	ldr	x0, [x0, #32]
   17ddc:	b	17e08 <XS_POSIX_ttyname+0x144>
   17de0:	ldr	x0, [sp, #40]
   17de4:	ldr	x1, [x0, #24]
   17de8:	ldrsw	x0, [sp, #52]
   17dec:	lsl	x0, x0, #3
   17df0:	add	x0, x1, x0
   17df4:	ldr	x0, [x0]
   17df8:	mov	w2, #0x2                   	// #2
   17dfc:	mov	x1, x0
   17e00:	ldr	x0, [sp, #40]
   17e04:	bl	6560 <Perl_sv_2iv_flags@plt>
   17e08:	str	w0, [sp, #60]
   17e0c:	ldr	w0, [sp, #60]
   17e10:	cmp	w0, #0x0
   17e14:	b.ge	17e90 <XS_POSIX_ttyname+0x1cc>  // b.tcont
   17e18:	bl	70d0 <__errno_location@plt>
   17e1c:	mov	x1, x0
   17e20:	mov	w0, #0x9                   	// #9
   17e24:	str	w0, [x1]
   17e28:	mov	x1, #0xffffffffffffffff    	// #-1
   17e2c:	ldr	x0, [sp, #40]
   17e30:	bl	70b0 <Perl_newSViv@plt>
   17e34:	mov	x2, x0
   17e38:	ldr	x0, [sp, #40]
   17e3c:	ldr	x1, [x0, #24]
   17e40:	ldrsw	x0, [sp, #52]
   17e44:	lsl	x0, x0, #3
   17e48:	add	x19, x1, x0
   17e4c:	mov	x1, x2
   17e50:	ldr	x0, [sp, #40]
   17e54:	bl	6d60 <Perl_sv_2mortal@plt>
   17e58:	str	x0, [x19]
   17e5c:	mov	x0, #0x1                   	// #1
   17e60:	str	x0, [sp, #104]
   17e64:	ldr	x0, [sp, #40]
   17e68:	ldr	x1, [x0, #24]
   17e6c:	ldrsw	x2, [sp, #52]
   17e70:	ldr	x0, [sp, #104]
   17e74:	add	x0, x2, x0
   17e78:	lsl	x0, x0, #3
   17e7c:	sub	x0, x0, #0x8
   17e80:	add	x1, x1, x0
   17e84:	ldr	x0, [sp, #40]
   17e88:	str	x1, [x0]
   17e8c:	b	17f74 <XS_POSIX_ttyname+0x2b0>
   17e90:	ldr	x0, [sp, #40]
   17e94:	ldr	x0, [x0, #2776]
   17e98:	ldr	x1, [x0, #520]
   17e9c:	ldr	x0, [sp, #40]
   17ea0:	ldr	x0, [x0, #2776]
   17ea4:	ldr	x0, [x0, #528]
   17ea8:	mov	x2, x0
   17eac:	ldr	w0, [sp, #60]
   17eb0:	bl	6710 <ttyname_r@plt>
   17eb4:	cmp	w0, #0x0
   17eb8:	b.ne	17ecc <XS_POSIX_ttyname+0x208>  // b.any
   17ebc:	ldr	x0, [sp, #40]
   17ec0:	ldr	x0, [x0, #2776]
   17ec4:	ldr	x0, [x0, #520]
   17ec8:	b	17ed0 <XS_POSIX_ttyname+0x20c>
   17ecc:	mov	x0, #0x0                   	// #0
   17ed0:	str	x0, [sp, #88]
   17ed4:	ldr	x2, [sp, #88]
   17ed8:	ldr	x1, [sp, #80]
   17edc:	ldr	x0, [sp, #40]
   17ee0:	bl	6910 <Perl_sv_setpv@plt>
   17ee4:	ldr	x0, [sp, #40]
   17ee8:	ldr	x1, [x0, #24]
   17eec:	ldrsw	x0, [sp, #52]
   17ef0:	lsl	x0, x0, #3
   17ef4:	sub	x0, x0, #0x8
   17ef8:	add	x0, x1, x0
   17efc:	str	x0, [sp, #64]
   17f00:	ldr	x0, [sp, #80]
   17f04:	ldr	w0, [x0, #12]
   17f08:	lsr	w0, w0, #22
   17f0c:	mov	w0, w0
   17f10:	and	x0, x0, #0x1
   17f14:	cmp	x0, #0x0
   17f18:	b.eq	17f28 <XS_POSIX_ttyname+0x264>  // b.none
   17f1c:	ldr	x1, [sp, #80]
   17f20:	ldr	x0, [sp, #40]
   17f24:	bl	6d40 <Perl_mg_set@plt>
   17f28:	ldr	x0, [sp, #64]
   17f2c:	add	x0, x0, #0x8
   17f30:	str	x0, [sp, #64]
   17f34:	ldr	x0, [sp, #64]
   17f38:	ldr	x1, [sp, #80]
   17f3c:	str	x1, [x0]
   17f40:	mov	x0, #0x1                   	// #1
   17f44:	str	x0, [sp, #96]
   17f48:	ldr	x0, [sp, #40]
   17f4c:	ldr	x1, [x0, #24]
   17f50:	ldrsw	x2, [sp, #52]
   17f54:	ldr	x0, [sp, #96]
   17f58:	add	x0, x2, x0
   17f5c:	lsl	x0, x0, #3
   17f60:	sub	x0, x0, #0x8
   17f64:	add	x1, x1, x0
   17f68:	ldr	x0, [sp, #40]
   17f6c:	str	x1, [x0]
   17f70:	nop
   17f74:	ldr	x19, [sp, #16]
   17f78:	ldp	x29, x30, [sp], #112
   17f7c:	ret

0000000000017f80 <XS_POSIX_getcwd>:
   17f80:	stp	x29, x30, [sp, #-64]!
   17f84:	mov	x29, sp
   17f88:	str	x0, [sp, #24]
   17f8c:	str	x1, [sp, #16]
   17f90:	ldr	x0, [sp, #24]
   17f94:	ldr	x0, [x0]
   17f98:	str	x0, [sp, #40]
   17f9c:	ldr	x0, [sp, #24]
   17fa0:	bl	739c <S_POPMARK>
   17fa4:	str	w0, [sp, #32]
   17fa8:	ldr	x0, [sp, #24]
   17fac:	ldr	x1, [x0, #24]
   17fb0:	ldr	w0, [sp, #32]
   17fb4:	add	w2, w0, #0x1
   17fb8:	str	w2, [sp, #32]
   17fbc:	sxtw	x0, w0
   17fc0:	lsl	x0, x0, #3
   17fc4:	add	x0, x1, x0
   17fc8:	str	x0, [sp, #48]
   17fcc:	ldr	x1, [sp, #40]
   17fd0:	ldr	x0, [sp, #48]
   17fd4:	sub	x0, x1, x0
   17fd8:	asr	x0, x0, #3
   17fdc:	str	w0, [sp, #36]
   17fe0:	ldr	w0, [sp, #36]
   17fe4:	cmp	w0, #0x0
   17fe8:	b.eq	17ffc <XS_POSIX_getcwd+0x7c>  // b.none
   17fec:	adrp	x0, 1b000 <_fini+0x1fc>
   17ff0:	add	x1, x0, #0x3f0
   17ff4:	ldr	x0, [sp, #16]
   17ff8:	bl	6b20 <Perl_croak_xs_usage@plt>
   17ffc:	ldrsw	x0, [sp, #36]
   18000:	lsl	x0, x0, #3
   18004:	neg	x0, x0
   18008:	ldr	x1, [sp, #40]
   1800c:	add	x0, x1, x0
   18010:	str	x0, [sp, #40]
   18014:	ldr	x0, [sp, #24]
   18018:	ldr	x0, [x0, #8]
   1801c:	ldrb	w0, [x0, #35]
   18020:	and	w0, w0, #0x4
   18024:	cmp	w0, #0x0
   18028:	b.eq	18050 <XS_POSIX_getcwd+0xd0>  // b.none
   1802c:	ldr	x0, [sp, #24]
   18030:	ldr	x1, [x0, #16]
   18034:	ldr	x0, [sp, #24]
   18038:	ldr	x0, [x0, #8]
   1803c:	ldr	x0, [x0, #24]
   18040:	lsl	x0, x0, #3
   18044:	add	x0, x1, x0
   18048:	ldr	x0, [x0]
   1804c:	b	18058 <XS_POSIX_getcwd+0xd8>
   18050:	ldr	x0, [sp, #24]
   18054:	bl	7160 <Perl_sv_newmortal@plt>
   18058:	str	x0, [sp, #56]
   1805c:	ldr	x1, [sp, #56]
   18060:	ldr	x0, [sp, #24]
   18064:	bl	6970 <Perl_getcwd_sv@plt>
   18068:	ldr	x0, [sp, #24]
   1806c:	ldr	x1, [x0, #24]
   18070:	ldrsw	x0, [sp, #32]
   18074:	lsl	x0, x0, #3
   18078:	sub	x0, x0, #0x8
   1807c:	add	x0, x1, x0
   18080:	str	x0, [sp, #40]
   18084:	ldr	x0, [sp, #56]
   18088:	ldr	w0, [x0, #12]
   1808c:	lsr	w0, w0, #22
   18090:	mov	w0, w0
   18094:	and	x0, x0, #0x1
   18098:	cmp	x0, #0x0
   1809c:	b.eq	180ac <XS_POSIX_getcwd+0x12c>  // b.none
   180a0:	ldr	x1, [sp, #56]
   180a4:	ldr	x0, [sp, #24]
   180a8:	bl	6d40 <Perl_mg_set@plt>
   180ac:	ldr	x0, [sp, #40]
   180b0:	add	x0, x0, #0x8
   180b4:	str	x0, [sp, #40]
   180b8:	ldr	x0, [sp, #40]
   180bc:	ldr	x1, [sp, #56]
   180c0:	str	x1, [x0]
   180c4:	ldr	x0, [sp, #24]
   180c8:	ldr	x1, [sp, #40]
   180cc:	str	x1, [x0]
   180d0:	nop
   180d4:	ldp	x29, x30, [sp], #64
   180d8:	ret

00000000000180dc <XS_POSIX_lchown>:
   180dc:	stp	x29, x30, [sp, #-96]!
   180e0:	mov	x29, sp
   180e4:	str	x0, [sp, #24]
   180e8:	str	x1, [sp, #16]
   180ec:	ldr	x0, [sp, #24]
   180f0:	ldr	x0, [x0]
   180f4:	str	x0, [sp, #56]
   180f8:	ldr	x0, [sp, #24]
   180fc:	bl	739c <S_POPMARK>
   18100:	str	w0, [sp, #36]
   18104:	ldr	x0, [sp, #24]
   18108:	ldr	x1, [x0, #24]
   1810c:	ldr	w0, [sp, #36]
   18110:	add	w2, w0, #0x1
   18114:	str	w2, [sp, #36]
   18118:	sxtw	x0, w0
   1811c:	lsl	x0, x0, #3
   18120:	add	x0, x1, x0
   18124:	str	x0, [sp, #64]
   18128:	ldr	x1, [sp, #56]
   1812c:	ldr	x0, [sp, #64]
   18130:	sub	x0, x1, x0
   18134:	asr	x0, x0, #3
   18138:	str	w0, [sp, #40]
   1813c:	ldr	w0, [sp, #40]
   18140:	cmp	w0, #0x3
   18144:	b.eq	18158 <XS_POSIX_lchown+0x7c>  // b.none
   18148:	adrp	x0, 1b000 <_fini+0x1fc>
   1814c:	add	x1, x0, #0x8b8
   18150:	ldr	x0, [sp, #16]
   18154:	bl	6b20 <Perl_croak_xs_usage@plt>
   18158:	ldr	x0, [sp, #24]
   1815c:	ldr	x1, [x0, #24]
   18160:	ldrsw	x0, [sp, #36]
   18164:	lsl	x0, x0, #3
   18168:	add	x0, x1, x0
   1816c:	ldr	x0, [x0]
   18170:	ldr	w1, [x0, #12]
   18174:	mov	w0, #0x200                 	// #512
   18178:	movk	w0, #0x20, lsl #16
   1817c:	and	w0, w1, w0
   18180:	cmp	w0, #0x200
   18184:	b.ne	181b0 <XS_POSIX_lchown+0xd4>  // b.any
   18188:	ldr	x0, [sp, #24]
   1818c:	ldr	x1, [x0, #24]
   18190:	ldrsw	x0, [sp, #36]
   18194:	lsl	x0, x0, #3
   18198:	add	x0, x1, x0
   1819c:	ldr	x0, [x0]
   181a0:	ldr	x0, [x0]
   181a4:	ldr	d0, [x0, #40]
   181a8:	fcvtzu	w0, d0
   181ac:	b	181dc <XS_POSIX_lchown+0x100>
   181b0:	ldr	x0, [sp, #24]
   181b4:	ldr	x1, [x0, #24]
   181b8:	ldrsw	x0, [sp, #36]
   181bc:	lsl	x0, x0, #3
   181c0:	add	x0, x1, x0
   181c4:	ldr	x0, [x0]
   181c8:	mov	w2, #0x2                   	// #2
   181cc:	mov	x1, x0
   181d0:	ldr	x0, [sp, #24]
   181d4:	bl	6b80 <Perl_sv_2nv_flags@plt>
   181d8:	fcvtzu	w0, d0
   181dc:	str	w0, [sp, #44]
   181e0:	ldr	x0, [sp, #24]
   181e4:	ldr	x1, [x0, #24]
   181e8:	ldrsw	x0, [sp, #36]
   181ec:	add	x0, x0, #0x1
   181f0:	lsl	x0, x0, #3
   181f4:	add	x0, x1, x0
   181f8:	ldr	x0, [x0]
   181fc:	ldr	w1, [x0, #12]
   18200:	mov	w0, #0x200                 	// #512
   18204:	movk	w0, #0x20, lsl #16
   18208:	and	w0, w1, w0
   1820c:	cmp	w0, #0x200
   18210:	b.ne	18240 <XS_POSIX_lchown+0x164>  // b.any
   18214:	ldr	x0, [sp, #24]
   18218:	ldr	x1, [x0, #24]
   1821c:	ldrsw	x0, [sp, #36]
   18220:	add	x0, x0, #0x1
   18224:	lsl	x0, x0, #3
   18228:	add	x0, x1, x0
   1822c:	ldr	x0, [x0]
   18230:	ldr	x0, [x0]
   18234:	ldr	d0, [x0, #40]
   18238:	fcvtzu	w0, d0
   1823c:	b	18270 <XS_POSIX_lchown+0x194>
   18240:	ldr	x0, [sp, #24]
   18244:	ldr	x1, [x0, #24]
   18248:	ldrsw	x0, [sp, #36]
   1824c:	add	x0, x0, #0x1
   18250:	lsl	x0, x0, #3
   18254:	add	x0, x1, x0
   18258:	ldr	x0, [x0]
   1825c:	mov	w2, #0x2                   	// #2
   18260:	mov	x1, x0
   18264:	ldr	x0, [sp, #24]
   18268:	bl	6b80 <Perl_sv_2nv_flags@plt>
   1826c:	fcvtzu	w0, d0
   18270:	str	w0, [sp, #48]
   18274:	ldr	x0, [sp, #24]
   18278:	ldr	x1, [x0, #24]
   1827c:	ldrsw	x0, [sp, #36]
   18280:	add	x0, x0, #0x2
   18284:	lsl	x0, x0, #3
   18288:	add	x0, x1, x0
   1828c:	ldr	x0, [x0]
   18290:	ldr	w1, [x0, #12]
   18294:	mov	w0, #0x400                 	// #1024
   18298:	movk	w0, #0x20, lsl #16
   1829c:	and	w0, w1, w0
   182a0:	cmp	w0, #0x400
   182a4:	b.ne	182cc <XS_POSIX_lchown+0x1f0>  // b.any
   182a8:	ldr	x0, [sp, #24]
   182ac:	ldr	x1, [x0, #24]
   182b0:	ldrsw	x0, [sp, #36]
   182b4:	add	x0, x0, #0x2
   182b8:	lsl	x0, x0, #3
   182bc:	add	x0, x1, x0
   182c0:	ldr	x0, [x0]
   182c4:	ldr	x0, [x0, #16]
   182c8:	b	182fc <XS_POSIX_lchown+0x220>
   182cc:	ldr	x0, [sp, #24]
   182d0:	ldr	x1, [x0, #24]
   182d4:	ldrsw	x0, [sp, #36]
   182d8:	add	x0, x0, #0x2
   182dc:	lsl	x0, x0, #3
   182e0:	add	x0, x1, x0
   182e4:	ldr	x0, [x0]
   182e8:	mov	w3, #0x2                   	// #2
   182ec:	mov	x2, #0x0                   	// #0
   182f0:	mov	x1, x0
   182f4:	ldr	x0, [sp, #24]
   182f8:	bl	69b0 <Perl_sv_2pv_flags@plt>
   182fc:	str	x0, [sp, #72]
   18300:	ldr	w2, [sp, #48]
   18304:	ldr	w1, [sp, #44]
   18308:	ldr	x0, [sp, #72]
   1830c:	bl	6c80 <lchown@plt>
   18310:	str	w0, [sp, #52]
   18314:	ldr	x0, [sp, #24]
   18318:	bl	7160 <Perl_sv_newmortal@plt>
   1831c:	str	x0, [sp, #80]
   18320:	ldr	w0, [sp, #52]
   18324:	cmn	w0, #0x1
   18328:	b.eq	18368 <XS_POSIX_lchown+0x28c>  // b.none
   1832c:	ldr	w0, [sp, #52]
   18330:	cmp	w0, #0x0
   18334:	b.ne	18354 <XS_POSIX_lchown+0x278>  // b.any
   18338:	mov	x3, #0xa                   	// #10
   1833c:	adrp	x0, 1b000 <_fini+0x1fc>
   18340:	add	x2, x0, #0x188
   18344:	ldr	x1, [sp, #80]
   18348:	ldr	x0, [sp, #24]
   1834c:	bl	6f10 <Perl_sv_setpvn@plt>
   18350:	b	18368 <XS_POSIX_lchown+0x28c>
   18354:	ldrsw	x0, [sp, #52]
   18358:	mov	x2, x0
   1835c:	ldr	x1, [sp, #80]
   18360:	ldr	x0, [sp, #24]
   18364:	bl	7120 <Perl_sv_setiv@plt>
   18368:	ldr	x0, [sp, #24]
   1836c:	ldr	x1, [x0, #24]
   18370:	ldrsw	x0, [sp, #36]
   18374:	lsl	x0, x0, #3
   18378:	add	x0, x1, x0
   1837c:	ldr	x1, [sp, #80]
   18380:	str	x1, [x0]
   18384:	mov	x0, #0x1                   	// #1
   18388:	str	x0, [sp, #88]
   1838c:	ldr	x0, [sp, #24]
   18390:	ldr	x1, [x0, #24]
   18394:	ldrsw	x2, [sp, #36]
   18398:	ldr	x0, [sp, #88]
   1839c:	add	x0, x2, x0
   183a0:	lsl	x0, x0, #3
   183a4:	sub	x0, x0, #0x8
   183a8:	add	x1, x1, x0
   183ac:	ldr	x0, [sp, #24]
   183b0:	str	x1, [x0]
   183b4:	nop
   183b8:	ldp	x29, x30, [sp], #96
   183bc:	ret

00000000000183c0 <boot_POSIX>:
   183c0:	sub	sp, sp, #0x450
   183c4:	stp	x29, x30, [sp, #16]
   183c8:	add	x29, sp, #0x10
   183cc:	stp	x19, x20, [sp, #32]
   183d0:	str	x0, [sp, #56]
   183d4:	str	x1, [sp, #48]
   183d8:	adrp	x0, 1b000 <_fini+0x1fc>
   183dc:	add	x4, x0, #0x8c8
   183e0:	adrp	x0, 1b000 <_fini+0x1fc>
   183e4:	add	x3, x0, #0x8d0
   183e8:	adrp	x0, 1b000 <_fini+0x1fc>
   183ec:	add	x2, x0, #0x8d8
   183f0:	ldr	x1, [sp, #56]
   183f4:	mov	w0, #0x4e7                 	// #1255
   183f8:	movk	w0, #0xd30, lsl #16
   183fc:	bl	6e40 <Perl_xs_handshake@plt>
   18400:	str	w0, [sp, #72]
   18404:	ldr	x0, [sp, #56]
   18408:	ldr	x1, [x0, #24]
   1840c:	ldrsw	x0, [sp, #72]
   18410:	lsl	x0, x0, #3
   18414:	add	x0, x1, x0
   18418:	str	x0, [sp, #120]
   1841c:	ldr	x0, [sp, #56]
   18420:	ldr	x0, [x0]
   18424:	str	x0, [sp, #128]
   18428:	ldr	x1, [sp, #128]
   1842c:	ldr	x0, [sp, #120]
   18430:	sub	x0, x1, x0
   18434:	asr	x0, x0, #3
   18438:	str	w0, [sp, #76]
   1843c:	adrp	x0, 1b000 <_fini+0x1fc>
   18440:	add	x0, x0, #0x8d8
   18444:	str	x0, [sp, #136]
   18448:	adrp	x0, 8000 <get_missing_hash+0x8>
   1844c:	add	x2, x0, #0x204
   18450:	adrp	x0, 1b000 <_fini+0x1fc>
   18454:	add	x1, x0, #0x8e0
   18458:	ldr	x0, [sp, #56]
   1845c:	bl	6d00 <Perl_newXS_deffile@plt>
   18460:	adrp	x0, 8000 <get_missing_hash+0x8>
   18464:	add	x2, x0, #0x45c
   18468:	adrp	x0, 1b000 <_fini+0x1fc>
   1846c:	add	x1, x0, #0x8f8
   18470:	ldr	x0, [sp, #56]
   18474:	bl	6d00 <Perl_newXS_deffile@plt>
   18478:	str	x0, [sp, #48]
   1847c:	ldr	x0, [sp, #48]
   18480:	ldr	x0, [x0]
   18484:	str	x0, [sp, #144]
   18488:	ldr	x0, [sp, #144]
   1848c:	str	wzr, [x0, #40]
   18490:	adrp	x0, 8000 <get_missing_hash+0x8>
   18494:	add	x2, x0, #0x45c
   18498:	adrp	x0, 1b000 <_fini+0x1fc>
   1849c:	add	x1, x0, #0x910
   184a0:	ldr	x0, [sp, #56]
   184a4:	bl	6d00 <Perl_newXS_deffile@plt>
   184a8:	str	x0, [sp, #48]
   184ac:	ldr	x0, [sp, #48]
   184b0:	ldr	x0, [x0]
   184b4:	str	x0, [sp, #152]
   184b8:	ldr	x0, [sp, #152]
   184bc:	mov	w1, #0x1                   	// #1
   184c0:	str	w1, [x0, #40]
   184c4:	adrp	x0, 8000 <get_missing_hash+0x8>
   184c8:	add	x2, x0, #0x764
   184cc:	adrp	x0, 1b000 <_fini+0x1fc>
   184d0:	add	x1, x0, #0x928
   184d4:	ldr	x0, [sp, #56]
   184d8:	bl	6d00 <Perl_newXS_deffile@plt>
   184dc:	str	x0, [sp, #48]
   184e0:	ldr	x0, [sp, #48]
   184e4:	ldr	x0, [x0]
   184e8:	str	x0, [sp, #160]
   184ec:	ldr	x0, [sp, #160]
   184f0:	str	wzr, [x0, #40]
   184f4:	adrp	x0, 8000 <get_missing_hash+0x8>
   184f8:	add	x2, x0, #0x764
   184fc:	adrp	x0, 1b000 <_fini+0x1fc>
   18500:	add	x1, x0, #0x940
   18504:	ldr	x0, [sp, #56]
   18508:	bl	6d00 <Perl_newXS_deffile@plt>
   1850c:	str	x0, [sp, #48]
   18510:	ldr	x0, [sp, #48]
   18514:	ldr	x0, [x0]
   18518:	str	x0, [sp, #168]
   1851c:	ldr	x0, [sp, #168]
   18520:	mov	w1, #0x1                   	// #1
   18524:	str	w1, [x0, #40]
   18528:	adrp	x0, 8000 <get_missing_hash+0x8>
   1852c:	add	x2, x0, #0x9a0
   18530:	adrp	x0, 1b000 <_fini+0x1fc>
   18534:	add	x1, x0, #0x198
   18538:	ldr	x0, [sp, #56]
   1853c:	bl	6d00 <Perl_newXS_deffile@plt>
   18540:	adrp	x0, 8000 <get_missing_hash+0x8>
   18544:	add	x2, x0, #0xcec
   18548:	adrp	x0, 1b000 <_fini+0x1fc>
   1854c:	add	x1, x0, #0x958
   18550:	ldr	x0, [sp, #56]
   18554:	bl	6d00 <Perl_newXS_deffile@plt>
   18558:	adrp	x0, 8000 <get_missing_hash+0x8>
   1855c:	add	x2, x0, #0xe78
   18560:	adrp	x0, 1b000 <_fini+0x1fc>
   18564:	add	x1, x0, #0x1e8
   18568:	ldr	x0, [sp, #56]
   1856c:	bl	6d00 <Perl_newXS_deffile@plt>
   18570:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   18574:	add	x2, x0, #0x1b0
   18578:	adrp	x0, 1b000 <_fini+0x1fc>
   1857c:	add	x1, x0, #0x240
   18580:	ldr	x0, [sp, #56]
   18584:	bl	6d00 <Perl_newXS_deffile@plt>
   18588:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   1858c:	add	x2, x0, #0x5b4
   18590:	adrp	x0, 1b000 <_fini+0x1fc>
   18594:	add	x1, x0, #0x970
   18598:	ldr	x0, [sp, #56]
   1859c:	bl	6d00 <Perl_newXS_deffile@plt>
   185a0:	str	x0, [sp, #48]
   185a4:	ldr	x0, [sp, #48]
   185a8:	ldr	x0, [x0]
   185ac:	str	x0, [sp, #176]
   185b0:	ldr	x0, [sp, #176]
   185b4:	str	wzr, [x0, #40]
   185b8:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   185bc:	add	x2, x0, #0x5b4
   185c0:	adrp	x0, 1b000 <_fini+0x1fc>
   185c4:	add	x1, x0, #0x990
   185c8:	ldr	x0, [sp, #56]
   185cc:	bl	6d00 <Perl_newXS_deffile@plt>
   185d0:	str	x0, [sp, #48]
   185d4:	ldr	x0, [sp, #48]
   185d8:	ldr	x0, [x0]
   185dc:	str	x0, [sp, #184]
   185e0:	ldr	x0, [sp, #184]
   185e4:	mov	w1, #0x1                   	// #1
   185e8:	str	w1, [x0, #40]
   185ec:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   185f0:	add	x2, x0, #0x88c
   185f4:	adrp	x0, 1b000 <_fini+0x1fc>
   185f8:	add	x1, x0, #0x9b0
   185fc:	ldr	x0, [sp, #56]
   18600:	bl	6d00 <Perl_newXS_deffile@plt>
   18604:	str	x0, [sp, #48]
   18608:	ldr	x0, [sp, #48]
   1860c:	ldr	x0, [x0]
   18610:	str	x0, [sp, #192]
   18614:	ldr	x0, [sp, #192]
   18618:	mov	w1, #0x2                   	// #2
   1861c:	str	w1, [x0, #40]
   18620:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   18624:	add	x2, x0, #0x88c
   18628:	adrp	x0, 1b000 <_fini+0x1fc>
   1862c:	add	x1, x0, #0x9d0
   18630:	ldr	x0, [sp, #56]
   18634:	bl	6d00 <Perl_newXS_deffile@plt>
   18638:	str	x0, [sp, #48]
   1863c:	ldr	x0, [sp, #48]
   18640:	ldr	x0, [x0]
   18644:	str	x0, [sp, #200]
   18648:	ldr	x0, [sp, #200]
   1864c:	str	wzr, [x0, #40]
   18650:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   18654:	add	x2, x0, #0x88c
   18658:	adrp	x0, 1b000 <_fini+0x1fc>
   1865c:	add	x1, x0, #0x9f0
   18660:	ldr	x0, [sp, #56]
   18664:	bl	6d00 <Perl_newXS_deffile@plt>
   18668:	str	x0, [sp, #48]
   1866c:	ldr	x0, [sp, #48]
   18670:	ldr	x0, [x0]
   18674:	str	x0, [sp, #208]
   18678:	ldr	x0, [sp, #208]
   1867c:	mov	w1, #0x3                   	// #3
   18680:	str	w1, [x0, #40]
   18684:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   18688:	add	x2, x0, #0x88c
   1868c:	adrp	x0, 1b000 <_fini+0x1fc>
   18690:	add	x1, x0, #0xa10
   18694:	ldr	x0, [sp, #56]
   18698:	bl	6d00 <Perl_newXS_deffile@plt>
   1869c:	str	x0, [sp, #48]
   186a0:	ldr	x0, [sp, #48]
   186a4:	ldr	x0, [x0]
   186a8:	str	x0, [sp, #216]
   186ac:	ldr	x0, [sp, #216]
   186b0:	mov	w1, #0x1                   	// #1
   186b4:	str	w1, [x0, #40]
   186b8:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   186bc:	add	x2, x0, #0xbcc
   186c0:	adrp	x0, 1b000 <_fini+0x1fc>
   186c4:	add	x1, x0, #0x270
   186c8:	ldr	x0, [sp, #56]
   186cc:	bl	6d00 <Perl_newXS_deffile@plt>
   186d0:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   186d4:	add	x2, x0, #0xf18
   186d8:	adrp	x0, 1b000 <_fini+0x1fc>
   186dc:	add	x1, x0, #0xa30
   186e0:	ldr	x0, [sp, #56]
   186e4:	bl	6d00 <Perl_newXS_deffile@plt>
   186e8:	str	x0, [sp, #48]
   186ec:	ldr	x0, [sp, #48]
   186f0:	ldr	x0, [x0]
   186f4:	str	x0, [sp, #224]
   186f8:	ldr	x0, [sp, #224]
   186fc:	str	wzr, [x0, #40]
   18700:	adrp	x0, 9000 <XS_POSIX__Termios_getattr+0x188>
   18704:	add	x2, x0, #0xf18
   18708:	adrp	x0, 1b000 <_fini+0x1fc>
   1870c:	add	x1, x0, #0xa50
   18710:	ldr	x0, [sp, #56]
   18714:	bl	6d00 <Perl_newXS_deffile@plt>
   18718:	str	x0, [sp, #48]
   1871c:	ldr	x0, [sp, #48]
   18720:	ldr	x0, [x0]
   18724:	str	x0, [sp, #232]
   18728:	ldr	x0, [sp, #232]
   1872c:	mov	w1, #0x1                   	// #1
   18730:	str	w1, [x0, #40]
   18734:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18738:	add	x2, x0, #0x1e8
   1873c:	adrp	x0, 1b000 <_fini+0x1fc>
   18740:	add	x1, x0, #0xa70
   18744:	ldr	x0, [sp, #56]
   18748:	bl	6d00 <Perl_newXS_deffile@plt>
   1874c:	str	x0, [sp, #48]
   18750:	ldr	x0, [sp, #48]
   18754:	ldr	x0, [x0]
   18758:	str	x0, [sp, #240]
   1875c:	ldr	x0, [sp, #240]
   18760:	mov	w1, #0x2                   	// #2
   18764:	str	w1, [x0, #40]
   18768:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   1876c:	add	x2, x0, #0x1e8
   18770:	adrp	x0, 1b000 <_fini+0x1fc>
   18774:	add	x1, x0, #0xa90
   18778:	ldr	x0, [sp, #56]
   1877c:	bl	6d00 <Perl_newXS_deffile@plt>
   18780:	str	x0, [sp, #48]
   18784:	ldr	x0, [sp, #48]
   18788:	ldr	x0, [x0]
   1878c:	str	x0, [sp, #248]
   18790:	ldr	x0, [sp, #248]
   18794:	str	wzr, [x0, #40]
   18798:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   1879c:	add	x2, x0, #0x1e8
   187a0:	adrp	x0, 1b000 <_fini+0x1fc>
   187a4:	add	x1, x0, #0xab0
   187a8:	ldr	x0, [sp, #56]
   187ac:	bl	6d00 <Perl_newXS_deffile@plt>
   187b0:	str	x0, [sp, #48]
   187b4:	ldr	x0, [sp, #48]
   187b8:	ldr	x0, [x0]
   187bc:	str	x0, [sp, #256]
   187c0:	ldr	x0, [sp, #256]
   187c4:	mov	w1, #0x3                   	// #3
   187c8:	str	w1, [x0, #40]
   187cc:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   187d0:	add	x2, x0, #0x1e8
   187d4:	adrp	x0, 1b000 <_fini+0x1fc>
   187d8:	add	x1, x0, #0xad0
   187dc:	ldr	x0, [sp, #56]
   187e0:	bl	6d00 <Perl_newXS_deffile@plt>
   187e4:	str	x0, [sp, #48]
   187e8:	ldr	x0, [sp, #48]
   187ec:	ldr	x0, [x0]
   187f0:	str	x0, [sp, #264]
   187f4:	ldr	x0, [sp, #264]
   187f8:	mov	w1, #0x1                   	// #1
   187fc:	str	w1, [x0, #40]
   18800:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18804:	add	x2, x0, #0x4a0
   18808:	adrp	x0, 1b000 <_fini+0x1fc>
   1880c:	add	x1, x0, #0x2e8
   18810:	ldr	x0, [sp, #56]
   18814:	bl	6d00 <Perl_newXS_deffile@plt>
   18818:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   1881c:	add	x2, x0, #0x770
   18820:	adrp	x0, 1b000 <_fini+0x1fc>
   18824:	add	x1, x0, #0xaf0
   18828:	ldr	x0, [sp, #56]
   1882c:	bl	6d00 <Perl_newXS_deffile@plt>
   18830:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18834:	add	x2, x0, #0x914
   18838:	adrp	x0, 1b000 <_fini+0x1fc>
   1883c:	add	x1, x0, #0xb00
   18840:	ldr	x0, [sp, #56]
   18844:	bl	6d00 <Perl_newXS_deffile@plt>
   18848:	str	x0, [sp, #48]
   1884c:	ldr	x0, [sp, #48]
   18850:	ldr	x0, [x0]
   18854:	str	x0, [sp, #272]
   18858:	ldr	x0, [sp, #272]
   1885c:	str	wzr, [x0, #40]
   18860:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18864:	add	x2, x0, #0x914
   18868:	adrp	x0, 1b000 <_fini+0x1fc>
   1886c:	add	x1, x0, #0xb18
   18870:	ldr	x0, [sp, #56]
   18874:	bl	6d00 <Perl_newXS_deffile@plt>
   18878:	str	x0, [sp, #48]
   1887c:	ldr	x0, [sp, #48]
   18880:	ldr	x0, [x0]
   18884:	str	x0, [sp, #280]
   18888:	ldr	x0, [sp, #280]
   1888c:	mov	w1, #0x1                   	// #1
   18890:	str	w1, [x0, #40]
   18894:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18898:	add	x2, x0, #0x914
   1889c:	adrp	x0, 1b000 <_fini+0x1fc>
   188a0:	add	x1, x0, #0xb30
   188a4:	ldr	x0, [sp, #56]
   188a8:	bl	6d00 <Perl_newXS_deffile@plt>
   188ac:	str	x0, [sp, #48]
   188b0:	ldr	x0, [sp, #48]
   188b4:	ldr	x0, [x0]
   188b8:	str	x0, [sp, #288]
   188bc:	ldr	x0, [sp, #288]
   188c0:	mov	w1, #0x2                   	// #2
   188c4:	str	w1, [x0, #40]
   188c8:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   188cc:	add	x2, x0, #0x914
   188d0:	adrp	x0, 1b000 <_fini+0x1fc>
   188d4:	add	x1, x0, #0xb48
   188d8:	ldr	x0, [sp, #56]
   188dc:	bl	6d00 <Perl_newXS_deffile@plt>
   188e0:	str	x0, [sp, #48]
   188e4:	ldr	x0, [sp, #48]
   188e8:	ldr	x0, [x0]
   188ec:	str	x0, [sp, #296]
   188f0:	ldr	x0, [sp, #296]
   188f4:	mov	w1, #0x3                   	// #3
   188f8:	str	w1, [x0, #40]
   188fc:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18900:	add	x2, x0, #0x914
   18904:	adrp	x0, 1b000 <_fini+0x1fc>
   18908:	add	x1, x0, #0xb60
   1890c:	ldr	x0, [sp, #56]
   18910:	bl	6d00 <Perl_newXS_deffile@plt>
   18914:	str	x0, [sp, #48]
   18918:	ldr	x0, [sp, #48]
   1891c:	ldr	x0, [x0]
   18920:	str	x0, [sp, #304]
   18924:	ldr	x0, [sp, #304]
   18928:	mov	w1, #0x4                   	// #4
   1892c:	str	w1, [x0, #40]
   18930:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18934:	add	x2, x0, #0x914
   18938:	adrp	x0, 1b000 <_fini+0x1fc>
   1893c:	add	x1, x0, #0xb70
   18940:	ldr	x0, [sp, #56]
   18944:	bl	6d00 <Perl_newXS_deffile@plt>
   18948:	str	x0, [sp, #48]
   1894c:	ldr	x0, [sp, #48]
   18950:	ldr	x0, [x0]
   18954:	str	x0, [sp, #312]
   18958:	ldr	x0, [sp, #312]
   1895c:	mov	w1, #0x5                   	// #5
   18960:	str	w1, [x0, #40]
   18964:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18968:	add	x2, x0, #0xca0
   1896c:	adrp	x0, 1b000 <_fini+0x1fc>
   18970:	add	x1, x0, #0xb80
   18974:	ldr	x0, [sp, #56]
   18978:	bl	6d00 <Perl_newXS_deffile@plt>
   1897c:	adrp	x0, a000 <XS_POSIX__Termios_setispeed+0xe8>
   18980:	add	x2, x0, #0xff0
   18984:	adrp	x0, 1b000 <_fini+0x1fc>
   18988:	add	x1, x0, #0xb90
   1898c:	ldr	x0, [sp, #56]
   18990:	bl	6d00 <Perl_newXS_deffile@plt>
   18994:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18998:	add	x2, x0, #0x3d4
   1899c:	adrp	x0, 1b000 <_fini+0x1fc>
   189a0:	add	x1, x0, #0xba8
   189a4:	ldr	x0, [sp, #56]
   189a8:	bl	6d00 <Perl_newXS_deffile@plt>
   189ac:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   189b0:	add	x2, x0, #0x6e4
   189b4:	adrp	x0, 1b000 <_fini+0x1fc>
   189b8:	add	x1, x0, #0xbc0
   189bc:	ldr	x0, [sp, #56]
   189c0:	bl	6d00 <Perl_newXS_deffile@plt>
   189c4:	str	x0, [sp, #48]
   189c8:	ldr	x0, [sp, #48]
   189cc:	ldr	x0, [x0]
   189d0:	str	x0, [sp, #320]
   189d4:	ldr	x0, [sp, #320]
   189d8:	str	wzr, [x0, #40]
   189dc:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   189e0:	add	x2, x0, #0x6e4
   189e4:	adrp	x0, 1b000 <_fini+0x1fc>
   189e8:	add	x1, x0, #0xbd0
   189ec:	ldr	x0, [sp, #56]
   189f0:	bl	6d00 <Perl_newXS_deffile@plt>
   189f4:	str	x0, [sp, #48]
   189f8:	ldr	x0, [sp, #48]
   189fc:	ldr	x0, [x0]
   18a00:	str	x0, [sp, #328]
   18a04:	ldr	x0, [sp, #328]
   18a08:	mov	w1, #0x1                   	// #1
   18a0c:	str	w1, [x0, #40]
   18a10:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18a14:	add	x2, x0, #0x6e4
   18a18:	adrp	x0, 1b000 <_fini+0x1fc>
   18a1c:	add	x1, x0, #0xbe0
   18a20:	ldr	x0, [sp, #56]
   18a24:	bl	6d00 <Perl_newXS_deffile@plt>
   18a28:	str	x0, [sp, #48]
   18a2c:	ldr	x0, [sp, #48]
   18a30:	ldr	x0, [x0]
   18a34:	str	x0, [sp, #336]
   18a38:	ldr	x0, [sp, #336]
   18a3c:	mov	w1, #0x2                   	// #2
   18a40:	str	w1, [x0, #40]
   18a44:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18a48:	add	x2, x0, #0x6e4
   18a4c:	adrp	x0, 1b000 <_fini+0x1fc>
   18a50:	add	x1, x0, #0xbf0
   18a54:	ldr	x0, [sp, #56]
   18a58:	bl	6d00 <Perl_newXS_deffile@plt>
   18a5c:	str	x0, [sp, #48]
   18a60:	ldr	x0, [sp, #48]
   18a64:	ldr	x0, [x0]
   18a68:	str	x0, [sp, #344]
   18a6c:	ldr	x0, [sp, #344]
   18a70:	mov	w1, #0x3                   	// #3
   18a74:	str	w1, [x0, #40]
   18a78:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18a7c:	add	x2, x0, #0x6e4
   18a80:	adrp	x0, 1b000 <_fini+0x1fc>
   18a84:	add	x1, x0, #0xc00
   18a88:	ldr	x0, [sp, #56]
   18a8c:	bl	6d00 <Perl_newXS_deffile@plt>
   18a90:	str	x0, [sp, #48]
   18a94:	ldr	x0, [sp, #48]
   18a98:	ldr	x0, [x0]
   18a9c:	str	x0, [sp, #352]
   18aa0:	ldr	x0, [sp, #352]
   18aa4:	mov	w1, #0x4                   	// #4
   18aa8:	str	w1, [x0, #40]
   18aac:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18ab0:	add	x2, x0, #0x6e4
   18ab4:	adrp	x0, 1b000 <_fini+0x1fc>
   18ab8:	add	x1, x0, #0xc10
   18abc:	ldr	x0, [sp, #56]
   18ac0:	bl	6d00 <Perl_newXS_deffile@plt>
   18ac4:	str	x0, [sp, #48]
   18ac8:	ldr	x0, [sp, #48]
   18acc:	ldr	x0, [x0]
   18ad0:	str	x0, [sp, #360]
   18ad4:	ldr	x0, [sp, #360]
   18ad8:	mov	w1, #0x5                   	// #5
   18adc:	str	w1, [x0, #40]
   18ae0:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18ae4:	add	x2, x0, #0x6e4
   18ae8:	adrp	x0, 1b000 <_fini+0x1fc>
   18aec:	add	x1, x0, #0xc20
   18af0:	ldr	x0, [sp, #56]
   18af4:	bl	6d00 <Perl_newXS_deffile@plt>
   18af8:	str	x0, [sp, #48]
   18afc:	ldr	x0, [sp, #48]
   18b00:	ldr	x0, [x0]
   18b04:	str	x0, [sp, #368]
   18b08:	ldr	x0, [sp, #368]
   18b0c:	mov	w1, #0x6                   	// #6
   18b10:	str	w1, [x0, #40]
   18b14:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18b18:	add	x2, x0, #0x6e4
   18b1c:	adrp	x0, 1b000 <_fini+0x1fc>
   18b20:	add	x1, x0, #0xc30
   18b24:	ldr	x0, [sp, #56]
   18b28:	bl	6d00 <Perl_newXS_deffile@plt>
   18b2c:	str	x0, [sp, #48]
   18b30:	ldr	x0, [sp, #48]
   18b34:	ldr	x0, [x0]
   18b38:	str	x0, [sp, #376]
   18b3c:	ldr	x0, [sp, #376]
   18b40:	mov	w1, #0x7                   	// #7
   18b44:	str	w1, [x0, #40]
   18b48:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18b4c:	add	x2, x0, #0x6e4
   18b50:	adrp	x0, 1b000 <_fini+0x1fc>
   18b54:	add	x1, x0, #0xc40
   18b58:	ldr	x0, [sp, #56]
   18b5c:	bl	6d00 <Perl_newXS_deffile@plt>
   18b60:	str	x0, [sp, #48]
   18b64:	ldr	x0, [sp, #48]
   18b68:	ldr	x0, [x0]
   18b6c:	str	x0, [sp, #384]
   18b70:	ldr	x0, [sp, #384]
   18b74:	mov	w1, #0x8                   	// #8
   18b78:	str	w1, [x0, #40]
   18b7c:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18b80:	add	x2, x0, #0x6e4
   18b84:	adrp	x0, 1b000 <_fini+0x1fc>
   18b88:	add	x1, x0, #0xc50
   18b8c:	ldr	x0, [sp, #56]
   18b90:	bl	6d00 <Perl_newXS_deffile@plt>
   18b94:	str	x0, [sp, #48]
   18b98:	ldr	x0, [sp, #48]
   18b9c:	ldr	x0, [x0]
   18ba0:	str	x0, [sp, #392]
   18ba4:	ldr	x0, [sp, #392]
   18ba8:	mov	w1, #0x9                   	// #9
   18bac:	str	w1, [x0, #40]
   18bb0:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18bb4:	add	x2, x0, #0x6e4
   18bb8:	adrp	x0, 1b000 <_fini+0x1fc>
   18bbc:	add	x1, x0, #0xc60
   18bc0:	ldr	x0, [sp, #56]
   18bc4:	bl	6d00 <Perl_newXS_deffile@plt>
   18bc8:	str	x0, [sp, #48]
   18bcc:	ldr	x0, [sp, #48]
   18bd0:	ldr	x0, [x0]
   18bd4:	str	x0, [sp, #400]
   18bd8:	ldr	x0, [sp, #400]
   18bdc:	mov	w1, #0xa                   	// #10
   18be0:	str	w1, [x0, #40]
   18be4:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18be8:	add	x2, x0, #0x6e4
   18bec:	adrp	x0, 1b000 <_fini+0x1fc>
   18bf0:	add	x1, x0, #0xc70
   18bf4:	ldr	x0, [sp, #56]
   18bf8:	bl	6d00 <Perl_newXS_deffile@plt>
   18bfc:	str	x0, [sp, #48]
   18c00:	ldr	x0, [sp, #48]
   18c04:	ldr	x0, [x0]
   18c08:	str	x0, [sp, #408]
   18c0c:	ldr	x0, [sp, #408]
   18c10:	mov	w1, #0xb                   	// #11
   18c14:	str	w1, [x0, #40]
   18c18:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18c1c:	add	x2, x0, #0x6e4
   18c20:	adrp	x0, 1b000 <_fini+0x1fc>
   18c24:	add	x1, x0, #0xc80
   18c28:	ldr	x0, [sp, #56]
   18c2c:	bl	6d00 <Perl_newXS_deffile@plt>
   18c30:	str	x0, [sp, #48]
   18c34:	ldr	x0, [sp, #48]
   18c38:	ldr	x0, [x0]
   18c3c:	str	x0, [sp, #416]
   18c40:	ldr	x0, [sp, #416]
   18c44:	mov	w1, #0xc                   	// #12
   18c48:	str	w1, [x0, #40]
   18c4c:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18c50:	add	x2, x0, #0x6e4
   18c54:	adrp	x0, 1b000 <_fini+0x1fc>
   18c58:	add	x1, x0, #0xc90
   18c5c:	ldr	x0, [sp, #56]
   18c60:	bl	6d00 <Perl_newXS_deffile@plt>
   18c64:	str	x0, [sp, #48]
   18c68:	ldr	x0, [sp, #48]
   18c6c:	ldr	x0, [x0]
   18c70:	str	x0, [sp, #424]
   18c74:	ldr	x0, [sp, #424]
   18c78:	mov	w1, #0xd                   	// #13
   18c7c:	str	w1, [x0, #40]
   18c80:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18c84:	add	x2, x0, #0x6e4
   18c88:	adrp	x0, 1b000 <_fini+0x1fc>
   18c8c:	add	x1, x0, #0xca0
   18c90:	ldr	x0, [sp, #56]
   18c94:	bl	6d00 <Perl_newXS_deffile@plt>
   18c98:	str	x0, [sp, #48]
   18c9c:	ldr	x0, [sp, #48]
   18ca0:	ldr	x0, [x0]
   18ca4:	str	x0, [sp, #432]
   18ca8:	ldr	x0, [sp, #432]
   18cac:	mov	w1, #0xe                   	// #14
   18cb0:	str	w1, [x0, #40]
   18cb4:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18cb8:	add	x2, x0, #0x6e4
   18cbc:	adrp	x0, 1b000 <_fini+0x1fc>
   18cc0:	add	x1, x0, #0xcb0
   18cc4:	ldr	x0, [sp, #56]
   18cc8:	bl	6d00 <Perl_newXS_deffile@plt>
   18ccc:	str	x0, [sp, #48]
   18cd0:	ldr	x0, [sp, #48]
   18cd4:	ldr	x0, [x0]
   18cd8:	str	x0, [sp, #440]
   18cdc:	ldr	x0, [sp, #440]
   18ce0:	mov	w1, #0xf                   	// #15
   18ce4:	str	w1, [x0, #40]
   18ce8:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18cec:	add	x2, x0, #0x6e4
   18cf0:	adrp	x0, 1b000 <_fini+0x1fc>
   18cf4:	add	x1, x0, #0xcc0
   18cf8:	ldr	x0, [sp, #56]
   18cfc:	bl	6d00 <Perl_newXS_deffile@plt>
   18d00:	str	x0, [sp, #48]
   18d04:	ldr	x0, [sp, #48]
   18d08:	ldr	x0, [x0]
   18d0c:	str	x0, [sp, #448]
   18d10:	ldr	x0, [sp, #448]
   18d14:	mov	w1, #0x10                  	// #16
   18d18:	str	w1, [x0, #40]
   18d1c:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18d20:	add	x2, x0, #0x6e4
   18d24:	adrp	x0, 1b000 <_fini+0x1fc>
   18d28:	add	x1, x0, #0xcd0
   18d2c:	ldr	x0, [sp, #56]
   18d30:	bl	6d00 <Perl_newXS_deffile@plt>
   18d34:	str	x0, [sp, #48]
   18d38:	ldr	x0, [sp, #48]
   18d3c:	ldr	x0, [x0]
   18d40:	str	x0, [sp, #456]
   18d44:	ldr	x0, [sp, #456]
   18d48:	mov	w1, #0x11                  	// #17
   18d4c:	str	w1, [x0, #40]
   18d50:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18d54:	add	x2, x0, #0x6e4
   18d58:	adrp	x0, 1b000 <_fini+0x1fc>
   18d5c:	add	x1, x0, #0xce0
   18d60:	ldr	x0, [sp, #56]
   18d64:	bl	6d00 <Perl_newXS_deffile@plt>
   18d68:	str	x0, [sp, #48]
   18d6c:	ldr	x0, [sp, #48]
   18d70:	ldr	x0, [x0]
   18d74:	str	x0, [sp, #464]
   18d78:	ldr	x0, [sp, #464]
   18d7c:	mov	w1, #0x12                  	// #18
   18d80:	str	w1, [x0, #40]
   18d84:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18d88:	add	x2, x0, #0x6e4
   18d8c:	adrp	x0, 1b000 <_fini+0x1fc>
   18d90:	add	x1, x0, #0xcf0
   18d94:	ldr	x0, [sp, #56]
   18d98:	bl	6d00 <Perl_newXS_deffile@plt>
   18d9c:	str	x0, [sp, #48]
   18da0:	ldr	x0, [sp, #48]
   18da4:	ldr	x0, [x0]
   18da8:	str	x0, [sp, #472]
   18dac:	ldr	x0, [sp, #472]
   18db0:	mov	w1, #0x13                  	// #19
   18db4:	str	w1, [x0, #40]
   18db8:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18dbc:	add	x2, x0, #0x6e4
   18dc0:	adrp	x0, 1b000 <_fini+0x1fc>
   18dc4:	add	x1, x0, #0xd00
   18dc8:	ldr	x0, [sp, #56]
   18dcc:	bl	6d00 <Perl_newXS_deffile@plt>
   18dd0:	str	x0, [sp, #48]
   18dd4:	ldr	x0, [sp, #48]
   18dd8:	ldr	x0, [x0]
   18ddc:	str	x0, [sp, #480]
   18de0:	ldr	x0, [sp, #480]
   18de4:	mov	w1, #0x14                  	// #20
   18de8:	str	w1, [x0, #40]
   18dec:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18df0:	add	x2, x0, #0x6e4
   18df4:	adrp	x0, 1b000 <_fini+0x1fc>
   18df8:	add	x1, x0, #0xd10
   18dfc:	ldr	x0, [sp, #56]
   18e00:	bl	6d00 <Perl_newXS_deffile@plt>
   18e04:	str	x0, [sp, #48]
   18e08:	ldr	x0, [sp, #48]
   18e0c:	ldr	x0, [x0]
   18e10:	str	x0, [sp, #488]
   18e14:	ldr	x0, [sp, #488]
   18e18:	mov	w1, #0x15                  	// #21
   18e1c:	str	w1, [x0, #40]
   18e20:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18e24:	add	x2, x0, #0x6e4
   18e28:	adrp	x0, 1b000 <_fini+0x1fc>
   18e2c:	add	x1, x0, #0xd28
   18e30:	ldr	x0, [sp, #56]
   18e34:	bl	6d00 <Perl_newXS_deffile@plt>
   18e38:	str	x0, [sp, #48]
   18e3c:	ldr	x0, [sp, #48]
   18e40:	ldr	x0, [x0]
   18e44:	str	x0, [sp, #496]
   18e48:	ldr	x0, [sp, #496]
   18e4c:	mov	w1, #0x16                  	// #22
   18e50:	str	w1, [x0, #40]
   18e54:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18e58:	add	x2, x0, #0x6e4
   18e5c:	adrp	x0, 1b000 <_fini+0x1fc>
   18e60:	add	x1, x0, #0xd38
   18e64:	ldr	x0, [sp, #56]
   18e68:	bl	6d00 <Perl_newXS_deffile@plt>
   18e6c:	str	x0, [sp, #48]
   18e70:	ldr	x0, [sp, #48]
   18e74:	ldr	x0, [x0]
   18e78:	str	x0, [sp, #504]
   18e7c:	ldr	x0, [sp, #504]
   18e80:	mov	w1, #0x17                  	// #23
   18e84:	str	w1, [x0, #40]
   18e88:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18e8c:	add	x2, x0, #0x6e4
   18e90:	adrp	x0, 1b000 <_fini+0x1fc>
   18e94:	add	x1, x0, #0xd48
   18e98:	ldr	x0, [sp, #56]
   18e9c:	bl	6d00 <Perl_newXS_deffile@plt>
   18ea0:	str	x0, [sp, #48]
   18ea4:	ldr	x0, [sp, #48]
   18ea8:	ldr	x0, [x0]
   18eac:	str	x0, [sp, #512]
   18eb0:	ldr	x0, [sp, #512]
   18eb4:	mov	w1, #0x18                  	// #24
   18eb8:	str	w1, [x0, #40]
   18ebc:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18ec0:	add	x2, x0, #0x6e4
   18ec4:	adrp	x0, 1b000 <_fini+0x1fc>
   18ec8:	add	x1, x0, #0xd58
   18ecc:	ldr	x0, [sp, #56]
   18ed0:	bl	6d00 <Perl_newXS_deffile@plt>
   18ed4:	str	x0, [sp, #48]
   18ed8:	ldr	x0, [sp, #48]
   18edc:	ldr	x0, [x0]
   18ee0:	str	x0, [sp, #520]
   18ee4:	ldr	x0, [sp, #520]
   18ee8:	mov	w1, #0x19                  	// #25
   18eec:	str	w1, [x0, #40]
   18ef0:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18ef4:	add	x2, x0, #0x6e4
   18ef8:	adrp	x0, 1b000 <_fini+0x1fc>
   18efc:	add	x1, x0, #0xd68
   18f00:	ldr	x0, [sp, #56]
   18f04:	bl	6d00 <Perl_newXS_deffile@plt>
   18f08:	str	x0, [sp, #48]
   18f0c:	ldr	x0, [sp, #48]
   18f10:	ldr	x0, [x0]
   18f14:	str	x0, [sp, #528]
   18f18:	ldr	x0, [sp, #528]
   18f1c:	mov	w1, #0x1a                  	// #26
   18f20:	str	w1, [x0, #40]
   18f24:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18f28:	add	x2, x0, #0x6e4
   18f2c:	adrp	x0, 1b000 <_fini+0x1fc>
   18f30:	add	x1, x0, #0xd78
   18f34:	ldr	x0, [sp, #56]
   18f38:	bl	6d00 <Perl_newXS_deffile@plt>
   18f3c:	str	x0, [sp, #48]
   18f40:	ldr	x0, [sp, #48]
   18f44:	ldr	x0, [x0]
   18f48:	str	x0, [sp, #536]
   18f4c:	ldr	x0, [sp, #536]
   18f50:	mov	w1, #0x1b                  	// #27
   18f54:	str	w1, [x0, #40]
   18f58:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18f5c:	add	x2, x0, #0x6e4
   18f60:	adrp	x0, 1b000 <_fini+0x1fc>
   18f64:	add	x1, x0, #0xd88
   18f68:	ldr	x0, [sp, #56]
   18f6c:	bl	6d00 <Perl_newXS_deffile@plt>
   18f70:	str	x0, [sp, #48]
   18f74:	ldr	x0, [sp, #48]
   18f78:	ldr	x0, [x0]
   18f7c:	str	x0, [sp, #544]
   18f80:	ldr	x0, [sp, #544]
   18f84:	mov	w1, #0x1c                  	// #28
   18f88:	str	w1, [x0, #40]
   18f8c:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18f90:	add	x2, x0, #0x6e4
   18f94:	adrp	x0, 1b000 <_fini+0x1fc>
   18f98:	add	x1, x0, #0xd98
   18f9c:	ldr	x0, [sp, #56]
   18fa0:	bl	6d00 <Perl_newXS_deffile@plt>
   18fa4:	str	x0, [sp, #48]
   18fa8:	ldr	x0, [sp, #48]
   18fac:	ldr	x0, [x0]
   18fb0:	str	x0, [sp, #552]
   18fb4:	ldr	x0, [sp, #552]
   18fb8:	mov	w1, #0x1d                  	// #29
   18fbc:	str	w1, [x0, #40]
   18fc0:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18fc4:	add	x2, x0, #0x6e4
   18fc8:	adrp	x0, 1b000 <_fini+0x1fc>
   18fcc:	add	x1, x0, #0xda8
   18fd0:	ldr	x0, [sp, #56]
   18fd4:	bl	6d00 <Perl_newXS_deffile@plt>
   18fd8:	str	x0, [sp, #48]
   18fdc:	ldr	x0, [sp, #48]
   18fe0:	ldr	x0, [x0]
   18fe4:	str	x0, [sp, #560]
   18fe8:	ldr	x0, [sp, #560]
   18fec:	mov	w1, #0x1e                  	// #30
   18ff0:	str	w1, [x0, #40]
   18ff4:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   18ff8:	add	x2, x0, #0xb64
   18ffc:	adrp	x0, 1b000 <_fini+0x1fc>
   19000:	add	x1, x0, #0xdb8
   19004:	ldr	x0, [sp, #56]
   19008:	bl	6d00 <Perl_newXS_deffile@plt>
   1900c:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   19010:	add	x2, x0, #0xd34
   19014:	adrp	x0, 1b000 <_fini+0x1fc>
   19018:	add	x1, x0, #0xdd0
   1901c:	ldr	x0, [sp, #56]
   19020:	bl	6d00 <Perl_newXS_deffile@plt>
   19024:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   19028:	add	x2, x0, #0xf88
   1902c:	adrp	x0, 1b000 <_fini+0x1fc>
   19030:	add	x1, x0, #0xde8
   19034:	ldr	x0, [sp, #56]
   19038:	bl	6d00 <Perl_newXS_deffile@plt>
   1903c:	str	x0, [sp, #48]
   19040:	ldr	x0, [sp, #48]
   19044:	ldr	x0, [x0]
   19048:	str	x0, [sp, #568]
   1904c:	ldr	x0, [sp, #568]
   19050:	str	wzr, [x0, #40]
   19054:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   19058:	add	x2, x0, #0xf88
   1905c:	adrp	x0, 1b000 <_fini+0x1fc>
   19060:	add	x1, x0, #0xe00
   19064:	ldr	x0, [sp, #56]
   19068:	bl	6d00 <Perl_newXS_deffile@plt>
   1906c:	str	x0, [sp, #48]
   19070:	ldr	x0, [sp, #48]
   19074:	ldr	x0, [x0]
   19078:	str	x0, [sp, #576]
   1907c:	ldr	x0, [sp, #576]
   19080:	mov	w1, #0x1                   	// #1
   19084:	str	w1, [x0, #40]
   19088:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   1908c:	add	x2, x0, #0xf88
   19090:	adrp	x0, 1b000 <_fini+0x1fc>
   19094:	add	x1, x0, #0xe10
   19098:	ldr	x0, [sp, #56]
   1909c:	bl	6d00 <Perl_newXS_deffile@plt>
   190a0:	str	x0, [sp, #48]
   190a4:	ldr	x0, [sp, #48]
   190a8:	ldr	x0, [x0]
   190ac:	str	x0, [sp, #584]
   190b0:	ldr	x0, [sp, #584]
   190b4:	mov	w1, #0x2                   	// #2
   190b8:	str	w1, [x0, #40]
   190bc:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   190c0:	add	x2, x0, #0xf88
   190c4:	adrp	x0, 1b000 <_fini+0x1fc>
   190c8:	add	x1, x0, #0xe20
   190cc:	ldr	x0, [sp, #56]
   190d0:	bl	6d00 <Perl_newXS_deffile@plt>
   190d4:	str	x0, [sp, #48]
   190d8:	ldr	x0, [sp, #48]
   190dc:	ldr	x0, [x0]
   190e0:	str	x0, [sp, #592]
   190e4:	ldr	x0, [sp, #592]
   190e8:	mov	w1, #0x3                   	// #3
   190ec:	str	w1, [x0, #40]
   190f0:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   190f4:	add	x2, x0, #0xf88
   190f8:	adrp	x0, 1b000 <_fini+0x1fc>
   190fc:	add	x1, x0, #0xe30
   19100:	ldr	x0, [sp, #56]
   19104:	bl	6d00 <Perl_newXS_deffile@plt>
   19108:	str	x0, [sp, #48]
   1910c:	ldr	x0, [sp, #48]
   19110:	ldr	x0, [x0]
   19114:	str	x0, [sp, #600]
   19118:	ldr	x0, [sp, #600]
   1911c:	mov	w1, #0x4                   	// #4
   19120:	str	w1, [x0, #40]
   19124:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   19128:	add	x2, x0, #0xf88
   1912c:	adrp	x0, 1b000 <_fini+0x1fc>
   19130:	add	x1, x0, #0xe40
   19134:	ldr	x0, [sp, #56]
   19138:	bl	6d00 <Perl_newXS_deffile@plt>
   1913c:	str	x0, [sp, #48]
   19140:	ldr	x0, [sp, #48]
   19144:	ldr	x0, [x0]
   19148:	str	x0, [sp, #608]
   1914c:	ldr	x0, [sp, #608]
   19150:	mov	w1, #0x5                   	// #5
   19154:	str	w1, [x0, #40]
   19158:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   1915c:	add	x2, x0, #0xf88
   19160:	adrp	x0, 1b000 <_fini+0x1fc>
   19164:	add	x1, x0, #0xe50
   19168:	ldr	x0, [sp, #56]
   1916c:	bl	6d00 <Perl_newXS_deffile@plt>
   19170:	str	x0, [sp, #48]
   19174:	ldr	x0, [sp, #48]
   19178:	ldr	x0, [x0]
   1917c:	str	x0, [sp, #616]
   19180:	ldr	x0, [sp, #616]
   19184:	mov	w1, #0x6                   	// #6
   19188:	str	w1, [x0, #40]
   1918c:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   19190:	add	x2, x0, #0xf88
   19194:	adrp	x0, 1b000 <_fini+0x1fc>
   19198:	add	x1, x0, #0xe60
   1919c:	ldr	x0, [sp, #56]
   191a0:	bl	6d00 <Perl_newXS_deffile@plt>
   191a4:	str	x0, [sp, #48]
   191a8:	ldr	x0, [sp, #48]
   191ac:	ldr	x0, [x0]
   191b0:	str	x0, [sp, #624]
   191b4:	ldr	x0, [sp, #624]
   191b8:	mov	w1, #0x7                   	// #7
   191bc:	str	w1, [x0, #40]
   191c0:	adrp	x0, b000 <XS_POSIX_localeconv+0x10>
   191c4:	add	x2, x0, #0xf88
   191c8:	adrp	x0, 1b000 <_fini+0x1fc>
   191cc:	add	x1, x0, #0xe70
   191d0:	ldr	x0, [sp, #56]
   191d4:	bl	6d00 <Perl_newXS_deffile@plt>
   191d8:	str	x0, [sp, #48]
   191dc:	ldr	x0, [sp, #48]
   191e0:	ldr	x0, [x0]
   191e4:	str	x0, [sp, #632]
   191e8:	ldr	x0, [sp, #632]
   191ec:	mov	w1, #0x8                   	// #8
   191f0:	str	w1, [x0, #40]
   191f4:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   191f8:	add	x2, x0, #0x44c
   191fc:	adrp	x0, 1b000 <_fini+0x1fc>
   19200:	add	x1, x0, #0xe80
   19204:	ldr	x0, [sp, #56]
   19208:	bl	6d00 <Perl_newXS_deffile@plt>
   1920c:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19210:	add	x2, x0, #0x6a4
   19214:	adrp	x0, 1b000 <_fini+0x1fc>
   19218:	add	x1, x0, #0xe98
   1921c:	ldr	x0, [sp, #56]
   19220:	bl	6d00 <Perl_newXS_deffile@plt>
   19224:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19228:	add	x2, x0, #0x928
   1922c:	adrp	x0, 1b000 <_fini+0x1fc>
   19230:	add	x1, x0, #0xeb0
   19234:	ldr	x0, [sp, #56]
   19238:	bl	6d00 <Perl_newXS_deffile@plt>
   1923c:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19240:	add	x2, x0, #0xbbc
   19244:	adrp	x0, 1b000 <_fini+0x1fc>
   19248:	add	x1, x0, #0xec8
   1924c:	ldr	x0, [sp, #56]
   19250:	bl	6d00 <Perl_newXS_deffile@plt>
   19254:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19258:	add	x2, x0, #0xe94
   1925c:	adrp	x0, 1b000 <_fini+0x1fc>
   19260:	add	x1, x0, #0xee0
   19264:	ldr	x0, [sp, #56]
   19268:	bl	6d00 <Perl_newXS_deffile@plt>
   1926c:	str	x0, [sp, #48]
   19270:	ldr	x0, [sp, #48]
   19274:	ldr	x0, [x0]
   19278:	str	x0, [sp, #640]
   1927c:	ldr	x0, [sp, #640]
   19280:	str	wzr, [x0, #40]
   19284:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19288:	add	x2, x0, #0xe94
   1928c:	adrp	x0, 1b000 <_fini+0x1fc>
   19290:	add	x1, x0, #0xef0
   19294:	ldr	x0, [sp, #56]
   19298:	bl	6d00 <Perl_newXS_deffile@plt>
   1929c:	str	x0, [sp, #48]
   192a0:	ldr	x0, [sp, #48]
   192a4:	ldr	x0, [x0]
   192a8:	str	x0, [sp, #648]
   192ac:	ldr	x0, [sp, #648]
   192b0:	mov	w1, #0x1                   	// #1
   192b4:	str	w1, [x0, #40]
   192b8:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   192bc:	add	x2, x0, #0xe94
   192c0:	adrp	x0, 1b000 <_fini+0x1fc>
   192c4:	add	x1, x0, #0xf00
   192c8:	ldr	x0, [sp, #56]
   192cc:	bl	6d00 <Perl_newXS_deffile@plt>
   192d0:	str	x0, [sp, #48]
   192d4:	ldr	x0, [sp, #48]
   192d8:	ldr	x0, [x0]
   192dc:	str	x0, [sp, #656]
   192e0:	ldr	x0, [sp, #656]
   192e4:	mov	w1, #0x2                   	// #2
   192e8:	str	w1, [x0, #40]
   192ec:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   192f0:	add	x2, x0, #0xe94
   192f4:	adrp	x0, 1b000 <_fini+0x1fc>
   192f8:	add	x1, x0, #0xf10
   192fc:	ldr	x0, [sp, #56]
   19300:	bl	6d00 <Perl_newXS_deffile@plt>
   19304:	str	x0, [sp, #48]
   19308:	ldr	x0, [sp, #48]
   1930c:	ldr	x0, [x0]
   19310:	str	x0, [sp, #664]
   19314:	ldr	x0, [sp, #664]
   19318:	mov	w1, #0x3                   	// #3
   1931c:	str	w1, [x0, #40]
   19320:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19324:	add	x2, x0, #0xe94
   19328:	adrp	x0, 1b000 <_fini+0x1fc>
   1932c:	add	x1, x0, #0xf20
   19330:	ldr	x0, [sp, #56]
   19334:	bl	6d00 <Perl_newXS_deffile@plt>
   19338:	str	x0, [sp, #48]
   1933c:	ldr	x0, [sp, #48]
   19340:	ldr	x0, [x0]
   19344:	str	x0, [sp, #672]
   19348:	ldr	x0, [sp, #672]
   1934c:	mov	w1, #0x4                   	// #4
   19350:	str	w1, [x0, #40]
   19354:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19358:	add	x2, x0, #0xe94
   1935c:	adrp	x0, 1b000 <_fini+0x1fc>
   19360:	add	x1, x0, #0xf30
   19364:	ldr	x0, [sp, #56]
   19368:	bl	6d00 <Perl_newXS_deffile@plt>
   1936c:	str	x0, [sp, #48]
   19370:	ldr	x0, [sp, #48]
   19374:	ldr	x0, [x0]
   19378:	str	x0, [sp, #680]
   1937c:	ldr	x0, [sp, #680]
   19380:	mov	w1, #0x5                   	// #5
   19384:	str	w1, [x0, #40]
   19388:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   1938c:	add	x2, x0, #0xe94
   19390:	adrp	x0, 1b000 <_fini+0x1fc>
   19394:	add	x1, x0, #0xf40
   19398:	ldr	x0, [sp, #56]
   1939c:	bl	6d00 <Perl_newXS_deffile@plt>
   193a0:	str	x0, [sp, #48]
   193a4:	ldr	x0, [sp, #48]
   193a8:	ldr	x0, [x0]
   193ac:	str	x0, [sp, #688]
   193b0:	ldr	x0, [sp, #688]
   193b4:	mov	w1, #0x6                   	// #6
   193b8:	str	w1, [x0, #40]
   193bc:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   193c0:	add	x2, x0, #0xe94
   193c4:	adrp	x0, 1b000 <_fini+0x1fc>
   193c8:	add	x1, x0, #0xf58
   193cc:	ldr	x0, [sp, #56]
   193d0:	bl	6d00 <Perl_newXS_deffile@plt>
   193d4:	str	x0, [sp, #48]
   193d8:	ldr	x0, [sp, #48]
   193dc:	ldr	x0, [x0]
   193e0:	str	x0, [sp, #696]
   193e4:	ldr	x0, [sp, #696]
   193e8:	mov	w1, #0x7                   	// #7
   193ec:	str	w1, [x0, #40]
   193f0:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   193f4:	add	x2, x0, #0xe94
   193f8:	adrp	x0, 1b000 <_fini+0x1fc>
   193fc:	add	x1, x0, #0xf70
   19400:	ldr	x0, [sp, #56]
   19404:	bl	6d00 <Perl_newXS_deffile@plt>
   19408:	str	x0, [sp, #48]
   1940c:	ldr	x0, [sp, #48]
   19410:	ldr	x0, [x0]
   19414:	str	x0, [sp, #704]
   19418:	ldr	x0, [sp, #704]
   1941c:	mov	w1, #0x8                   	// #8
   19420:	str	w1, [x0, #40]
   19424:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19428:	add	x2, x0, #0xe94
   1942c:	adrp	x0, 1b000 <_fini+0x1fc>
   19430:	add	x1, x0, #0xf80
   19434:	ldr	x0, [sp, #56]
   19438:	bl	6d00 <Perl_newXS_deffile@plt>
   1943c:	str	x0, [sp, #48]
   19440:	ldr	x0, [sp, #48]
   19444:	ldr	x0, [x0]
   19448:	str	x0, [sp, #712]
   1944c:	ldr	x0, [sp, #712]
   19450:	mov	w1, #0x9                   	// #9
   19454:	str	w1, [x0, #40]
   19458:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   1945c:	add	x2, x0, #0xe94
   19460:	adrp	x0, 1b000 <_fini+0x1fc>
   19464:	add	x1, x0, #0xf98
   19468:	ldr	x0, [sp, #56]
   1946c:	bl	6d00 <Perl_newXS_deffile@plt>
   19470:	str	x0, [sp, #48]
   19474:	ldr	x0, [sp, #48]
   19478:	ldr	x0, [x0]
   1947c:	str	x0, [sp, #720]
   19480:	ldr	x0, [sp, #720]
   19484:	mov	w1, #0xa                   	// #10
   19488:	str	w1, [x0, #40]
   1948c:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   19490:	add	x2, x0, #0xe94
   19494:	adrp	x0, 1b000 <_fini+0x1fc>
   19498:	add	x1, x0, #0xfb0
   1949c:	ldr	x0, [sp, #56]
   194a0:	bl	6d00 <Perl_newXS_deffile@plt>
   194a4:	str	x0, [sp, #48]
   194a8:	ldr	x0, [sp, #48]
   194ac:	ldr	x0, [x0]
   194b0:	str	x0, [sp, #728]
   194b4:	ldr	x0, [sp, #728]
   194b8:	mov	w1, #0xb                   	// #11
   194bc:	str	w1, [x0, #40]
   194c0:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   194c4:	add	x2, x0, #0xe94
   194c8:	adrp	x0, 1b000 <_fini+0x1fc>
   194cc:	add	x1, x0, #0xfc8
   194d0:	ldr	x0, [sp, #56]
   194d4:	bl	6d00 <Perl_newXS_deffile@plt>
   194d8:	str	x0, [sp, #48]
   194dc:	ldr	x0, [sp, #48]
   194e0:	ldr	x0, [x0]
   194e4:	str	x0, [sp, #736]
   194e8:	ldr	x0, [sp, #736]
   194ec:	mov	w1, #0xc                   	// #12
   194f0:	str	w1, [x0, #40]
   194f4:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   194f8:	add	x2, x0, #0xe94
   194fc:	adrp	x0, 1b000 <_fini+0x1fc>
   19500:	add	x1, x0, #0xfe0
   19504:	ldr	x0, [sp, #56]
   19508:	bl	6d00 <Perl_newXS_deffile@plt>
   1950c:	str	x0, [sp, #48]
   19510:	ldr	x0, [sp, #48]
   19514:	ldr	x0, [x0]
   19518:	str	x0, [sp, #744]
   1951c:	ldr	x0, [sp, #744]
   19520:	mov	w1, #0xd                   	// #13
   19524:	str	w1, [x0, #40]
   19528:	adrp	x0, c000 <XS_POSIX_fpclassify+0x78>
   1952c:	add	x2, x0, #0xe94
   19530:	adrp	x0, 1b000 <_fini+0x1fc>
   19534:	add	x1, x0, #0xff8
   19538:	ldr	x0, [sp, #56]
   1953c:	bl	6d00 <Perl_newXS_deffile@plt>
   19540:	str	x0, [sp, #48]
   19544:	ldr	x0, [sp, #48]
   19548:	ldr	x0, [x0]
   1954c:	str	x0, [sp, #752]
   19550:	ldr	x0, [sp, #752]
   19554:	mov	w1, #0xe                   	// #14
   19558:	str	w1, [x0, #40]
   1955c:	adrp	x0, d000 <XS_POSIX_copysign+0x16c>
   19560:	add	x2, x0, #0x48c
   19564:	adrp	x0, 1c000 <_fini+0x11fc>
   19568:	add	x1, x0, #0x10
   1956c:	ldr	x0, [sp, #56]
   19570:	bl	6d00 <Perl_newXS_deffile@plt>
   19574:	adrp	x0, d000 <XS_POSIX_copysign+0x16c>
   19578:	add	x2, x0, #0x65c
   1957c:	adrp	x0, 1c000 <_fini+0x11fc>
   19580:	add	x1, x0, #0x20
   19584:	ldr	x0, [sp, #56]
   19588:	bl	6d00 <Perl_newXS_deffile@plt>
   1958c:	adrp	x0, d000 <XS_POSIX_copysign+0x16c>
   19590:	add	x2, x0, #0x940
   19594:	adrp	x0, 1c000 <_fini+0x11fc>
   19598:	add	x1, x0, #0x30
   1959c:	ldr	x0, [sp, #56]
   195a0:	bl	6d00 <Perl_newXS_deffile@plt>
   195a4:	adrp	x0, d000 <XS_POSIX_copysign+0x16c>
   195a8:	add	x2, x0, #0xb08
   195ac:	adrp	x0, 1c000 <_fini+0x11fc>
   195b0:	add	x1, x0, #0x40
   195b4:	ldr	x0, [sp, #56]
   195b8:	bl	6d00 <Perl_newXS_deffile@plt>
   195bc:	adrp	x0, d000 <XS_POSIX_copysign+0x16c>
   195c0:	add	x2, x0, #0xd64
   195c4:	adrp	x0, 1c000 <_fini+0x11fc>
   195c8:	add	x1, x0, #0x50
   195cc:	ldr	x0, [sp, #56]
   195d0:	bl	6d00 <Perl_newXS_deffile@plt>
   195d4:	adrp	x0, e000 <XS_POSIX_scalbn+0x29c>
   195d8:	add	x2, x0, #0x48
   195dc:	adrp	x0, 1c000 <_fini+0x11fc>
   195e0:	add	x1, x0, #0x60
   195e4:	ldr	x0, [sp, #56]
   195e8:	bl	6d00 <Perl_newXS_deffile@plt>
   195ec:	adrp	x0, e000 <XS_POSIX_scalbn+0x29c>
   195f0:	add	x2, x0, #0x3bc
   195f4:	adrp	x0, 1c000 <_fini+0x11fc>
   195f8:	add	x1, x0, #0x70
   195fc:	ldr	x0, [sp, #56]
   19600:	bl	6d00 <Perl_newXS_deffile@plt>
   19604:	adrp	x0, e000 <XS_POSIX_scalbn+0x29c>
   19608:	add	x2, x0, #0x68c
   1960c:	adrp	x0, 1c000 <_fini+0x11fc>
   19610:	add	x1, x0, #0x80
   19614:	ldr	x0, [sp, #56]
   19618:	bl	6d00 <Perl_newXS_deffile@plt>
   1961c:	str	x0, [sp, #48]
   19620:	ldr	x0, [sp, #48]
   19624:	ldr	x0, [x0]
   19628:	str	x0, [sp, #760]
   1962c:	ldr	x0, [sp, #760]
   19630:	str	wzr, [x0, #40]
   19634:	adrp	x0, e000 <XS_POSIX_scalbn+0x29c>
   19638:	add	x2, x0, #0x68c
   1963c:	adrp	x0, 1c000 <_fini+0x11fc>
   19640:	add	x1, x0, #0x90
   19644:	ldr	x0, [sp, #56]
   19648:	bl	6d00 <Perl_newXS_deffile@plt>
   1964c:	str	x0, [sp, #48]
   19650:	ldr	x0, [sp, #48]
   19654:	ldr	x0, [x0]
   19658:	str	x0, [sp, #768]
   1965c:	ldr	x0, [sp, #768]
   19660:	mov	w1, #0x1                   	// #1
   19664:	str	w1, [x0, #40]
   19668:	adrp	x0, e000 <XS_POSIX_scalbn+0x29c>
   1966c:	add	x2, x0, #0x9bc
   19670:	adrp	x0, 1b000 <_fini+0x1fc>
   19674:	add	x1, x0, #0x500
   19678:	ldr	x0, [sp, #56]
   1967c:	bl	6d00 <Perl_newXS_deffile@plt>
   19680:	adrp	x0, f000 <XS_POSIX_sigaction+0x644>
   19684:	add	x2, x0, #0xcc8
   19688:	adrp	x0, 1c000 <_fini+0x11fc>
   1968c:	add	x1, x0, #0xa0
   19690:	ldr	x0, [sp, #56]
   19694:	bl	6d00 <Perl_newXS_deffile@plt>
   19698:	str	x0, [sp, #48]
   1969c:	ldr	x0, [sp, #48]
   196a0:	ldr	x0, [x0]
   196a4:	str	x0, [sp, #776]
   196a8:	ldr	x0, [sp, #776]
   196ac:	str	wzr, [x0, #40]
   196b0:	adrp	x0, f000 <XS_POSIX_sigaction+0x644>
   196b4:	add	x2, x0, #0xcc8
   196b8:	adrp	x0, 1c000 <_fini+0x11fc>
   196bc:	add	x1, x0, #0xb8
   196c0:	ldr	x0, [sp, #56]
   196c4:	bl	6d00 <Perl_newXS_deffile@plt>
   196c8:	str	x0, [sp, #48]
   196cc:	ldr	x0, [sp, #48]
   196d0:	ldr	x0, [x0]
   196d4:	str	x0, [sp, #784]
   196d8:	ldr	x0, [sp, #784]
   196dc:	mov	w1, #0x1                   	// #1
   196e0:	str	w1, [x0, #40]
   196e4:	adrp	x0, f000 <XS_POSIX_sigaction+0x644>
   196e8:	add	x2, x0, #0xf34
   196ec:	adrp	x0, 1c000 <_fini+0x11fc>
   196f0:	add	x1, x0, #0xd0
   196f4:	ldr	x0, [sp, #56]
   196f8:	bl	6d00 <Perl_newXS_deffile@plt>
   196fc:	adrp	x0, 10000 <XS_POSIX_sigprocmask+0xcc>
   19700:	add	x2, x0, #0x328
   19704:	adrp	x0, 1c000 <_fini+0x11fc>
   19708:	add	x1, x0, #0xe8
   1970c:	ldr	x0, [sp, #56]
   19710:	bl	6d00 <Perl_newXS_deffile@plt>
   19714:	adrp	x0, 10000 <XS_POSIX_sigprocmask+0xcc>
   19718:	add	x2, x0, #0x42c
   1971c:	adrp	x0, 1c000 <_fini+0x11fc>
   19720:	add	x1, x0, #0xf8
   19724:	ldr	x0, [sp, #56]
   19728:	bl	6d00 <Perl_newXS_deffile@plt>
   1972c:	adrp	x0, 10000 <XS_POSIX_sigprocmask+0xcc>
   19730:	add	x2, x0, #0x6a4
   19734:	adrp	x0, 1c000 <_fini+0x11fc>
   19738:	add	x1, x0, #0x108
   1973c:	ldr	x0, [sp, #56]
   19740:	bl	6d00 <Perl_newXS_deffile@plt>
   19744:	adrp	x0, 10000 <XS_POSIX_sigprocmask+0xcc>
   19748:	add	x2, x0, #0x9d8
   1974c:	adrp	x0, 1c000 <_fini+0x11fc>
   19750:	add	x1, x0, #0x118
   19754:	ldr	x0, [sp, #56]
   19758:	bl	6d00 <Perl_newXS_deffile@plt>
   1975c:	adrp	x0, 10000 <XS_POSIX_sigprocmask+0xcc>
   19760:	add	x2, x0, #0xc28
   19764:	adrp	x0, 1c000 <_fini+0x11fc>
   19768:	add	x1, x0, #0x128
   1976c:	ldr	x0, [sp, #56]
   19770:	bl	6d00 <Perl_newXS_deffile@plt>
   19774:	adrp	x0, 10000 <XS_POSIX_sigprocmask+0xcc>
   19778:	add	x2, x0, #0xdc8
   1977c:	adrp	x0, 1c000 <_fini+0x11fc>
   19780:	add	x1, x0, #0x138
   19784:	ldr	x0, [sp, #56]
   19788:	bl	6d00 <Perl_newXS_deffile@plt>
   1978c:	adrp	x0, 11000 <XS_POSIX_read+0x238>
   19790:	add	x2, x0, #0x1cc
   19794:	adrp	x0, 1c000 <_fini+0x11fc>
   19798:	add	x1, x0, #0x148
   1979c:	ldr	x0, [sp, #56]
   197a0:	bl	6d00 <Perl_newXS_deffile@plt>
   197a4:	adrp	x0, 11000 <XS_POSIX_read+0x238>
   197a8:	add	x2, x0, #0x420
   197ac:	adrp	x0, 1c000 <_fini+0x11fc>
   197b0:	add	x1, x0, #0x158
   197b4:	ldr	x0, [sp, #56]
   197b8:	bl	6d00 <Perl_newXS_deffile@plt>
   197bc:	adrp	x0, 11000 <XS_POSIX_read+0x238>
   197c0:	add	x2, x0, #0x5f4
   197c4:	adrp	x0, 1c000 <_fini+0x11fc>
   197c8:	add	x1, x0, #0x168
   197cc:	ldr	x0, [sp, #56]
   197d0:	bl	6d00 <Perl_newXS_deffile@plt>
   197d4:	adrp	x0, 11000 <XS_POSIX_read+0x238>
   197d8:	add	x2, x0, #0x8d8
   197dc:	adrp	x0, 1c000 <_fini+0x11fc>
   197e0:	add	x1, x0, #0x180
   197e4:	ldr	x0, [sp, #56]
   197e8:	bl	6d00 <Perl_newXS_deffile@plt>
   197ec:	adrp	x0, 11000 <XS_POSIX_read+0x238>
   197f0:	add	x2, x0, #0xbb0
   197f4:	adrp	x0, 1c000 <_fini+0x11fc>
   197f8:	add	x1, x0, #0x198
   197fc:	ldr	x0, [sp, #56]
   19800:	bl	6d00 <Perl_newXS_deffile@plt>
   19804:	adrp	x0, 11000 <XS_POSIX_read+0x238>
   19808:	add	x2, x0, #0xe2c
   1980c:	adrp	x0, 1c000 <_fini+0x11fc>
   19810:	add	x1, x0, #0x1a8
   19814:	ldr	x0, [sp, #56]
   19818:	bl	6d00 <Perl_newXS_deffile@plt>
   1981c:	adrp	x0, 12000 <XS_POSIX_write+0x1d4>
   19820:	add	x2, x0, #0x194
   19824:	adrp	x0, 1c000 <_fini+0x11fc>
   19828:	add	x1, x0, #0x1b8
   1982c:	ldr	x0, [sp, #56]
   19830:	bl	6d00 <Perl_newXS_deffile@plt>
   19834:	adrp	x0, 12000 <XS_POSIX_write+0x1d4>
   19838:	add	x2, x0, #0x214
   1983c:	adrp	x0, 1c000 <_fini+0x11fc>
   19840:	add	x1, x0, #0x1c8
   19844:	ldr	x0, [sp, #56]
   19848:	bl	6d00 <Perl_newXS_deffile@plt>
   1984c:	adrp	x0, 12000 <XS_POSIX_write+0x1d4>
   19850:	add	x2, x0, #0x548
   19854:	adrp	x0, 1c000 <_fini+0x11fc>
   19858:	add	x1, x0, #0x1d8
   1985c:	ldr	x0, [sp, #56]
   19860:	bl	6d00 <Perl_newXS_deffile@plt>
   19864:	adrp	x0, 12000 <XS_POSIX_write+0x1d4>
   19868:	add	x2, x0, #0x8d4
   1986c:	adrp	x0, 1c000 <_fini+0x11fc>
   19870:	add	x1, x0, #0x1e8
   19874:	ldr	x0, [sp, #56]
   19878:	bl	6d00 <Perl_newXS_deffile@plt>
   1987c:	adrp	x0, 12000 <XS_POSIX_write+0x1d4>
   19880:	add	x2, x0, #0xcbc
   19884:	adrp	x0, 1c000 <_fini+0x11fc>
   19888:	add	x1, x0, #0x1f8
   1988c:	ldr	x0, [sp, #56]
   19890:	bl	6d00 <Perl_newXS_deffile@plt>
   19894:	adrp	x0, 13000 <XS_POSIX_wcstombs+0x344>
   19898:	add	x2, x0, #0x34
   1989c:	adrp	x0, 1c000 <_fini+0x11fc>
   198a0:	add	x1, x0, #0x208
   198a4:	ldr	x0, [sp, #56]
   198a8:	bl	6d00 <Perl_newXS_deffile@plt>
   198ac:	adrp	x0, 13000 <XS_POSIX_wcstombs+0x344>
   198b0:	add	x2, x0, #0x314
   198b4:	adrp	x0, 1c000 <_fini+0x11fc>
   198b8:	add	x1, x0, #0x218
   198bc:	ldr	x0, [sp, #56]
   198c0:	bl	6d00 <Perl_newXS_deffile@plt>
   198c4:	adrp	x0, 13000 <XS_POSIX_wcstombs+0x344>
   198c8:	add	x2, x0, #0x5f4
   198cc:	adrp	x0, 1c000 <_fini+0x11fc>
   198d0:	add	x1, x0, #0x228
   198d4:	ldr	x0, [sp, #56]
   198d8:	bl	6d00 <Perl_newXS_deffile@plt>
   198dc:	adrp	x0, 13000 <XS_POSIX_wcstombs+0x344>
   198e0:	add	x2, x0, #0x8ec
   198e4:	adrp	x0, 1c000 <_fini+0x11fc>
   198e8:	add	x1, x0, #0x238
   198ec:	ldr	x0, [sp, #56]
   198f0:	bl	6d00 <Perl_newXS_deffile@plt>
   198f4:	adrp	x0, 13000 <XS_POSIX_wcstombs+0x344>
   198f8:	add	x2, x0, #0xbe8
   198fc:	adrp	x0, 1c000 <_fini+0x11fc>
   19900:	add	x1, x0, #0x248
   19904:	ldr	x0, [sp, #56]
   19908:	bl	6d00 <Perl_newXS_deffile@plt>
   1990c:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19910:	add	x2, x0, #0x38
   19914:	adrp	x0, 1c000 <_fini+0x11fc>
   19918:	add	x1, x0, #0x258
   1991c:	ldr	x0, [sp, #56]
   19920:	bl	6d00 <Perl_newXS_deffile@plt>
   19924:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19928:	add	x2, x0, #0x4d4
   1992c:	adrp	x0, 1c000 <_fini+0x11fc>
   19930:	add	x1, x0, #0x268
   19934:	ldr	x0, [sp, #56]
   19938:	bl	6d00 <Perl_newXS_deffile@plt>
   1993c:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19940:	add	x2, x0, #0x82c
   19944:	adrp	x0, 1c000 <_fini+0x11fc>
   19948:	add	x1, x0, #0x278
   1994c:	ldr	x0, [sp, #56]
   19950:	bl	6d00 <Perl_newXS_deffile@plt>
   19954:	str	x0, [sp, #48]
   19958:	ldr	x0, [sp, #48]
   1995c:	ldr	x0, [x0]
   19960:	str	x0, [sp, #792]
   19964:	ldr	x0, [sp, #792]
   19968:	mov	w1, #0x1                   	// #1
   1996c:	str	w1, [x0, #40]
   19970:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19974:	add	x2, x0, #0x82c
   19978:	adrp	x0, 1c000 <_fini+0x11fc>
   1997c:	add	x1, x0, #0x288
   19980:	ldr	x0, [sp, #56]
   19984:	bl	6d00 <Perl_newXS_deffile@plt>
   19988:	str	x0, [sp, #48]
   1998c:	ldr	x0, [sp, #48]
   19990:	ldr	x0, [x0]
   19994:	str	x0, [sp, #800]
   19998:	ldr	x0, [sp, #800]
   1999c:	str	wzr, [x0, #40]
   199a0:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   199a4:	add	x2, x0, #0xadc
   199a8:	adrp	x0, 1c000 <_fini+0x11fc>
   199ac:	add	x1, x0, #0x298
   199b0:	ldr	x0, [sp, #56]
   199b4:	bl	6d00 <Perl_newXS_deffile@plt>
   199b8:	str	x0, [sp, #48]
   199bc:	ldr	x0, [sp, #48]
   199c0:	ldr	x0, [x0]
   199c4:	str	x0, [sp, #808]
   199c8:	ldr	x0, [sp, #808]
   199cc:	mov	w1, #0x1                   	// #1
   199d0:	str	w1, [x0, #40]
   199d4:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   199d8:	add	x2, x0, #0xadc
   199dc:	adrp	x0, 1c000 <_fini+0x11fc>
   199e0:	add	x1, x0, #0x2a8
   199e4:	ldr	x0, [sp, #56]
   199e8:	bl	6d00 <Perl_newXS_deffile@plt>
   199ec:	str	x0, [sp, #48]
   199f0:	ldr	x0, [sp, #48]
   199f4:	ldr	x0, [x0]
   199f8:	str	x0, [sp, #816]
   199fc:	ldr	x0, [sp, #816]
   19a00:	mov	w1, #0x2                   	// #2
   19a04:	str	w1, [x0, #40]
   19a08:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19a0c:	add	x2, x0, #0xadc
   19a10:	adrp	x0, 1c000 <_fini+0x11fc>
   19a14:	add	x1, x0, #0x2b8
   19a18:	ldr	x0, [sp, #56]
   19a1c:	bl	6d00 <Perl_newXS_deffile@plt>
   19a20:	str	x0, [sp, #48]
   19a24:	ldr	x0, [sp, #48]
   19a28:	ldr	x0, [x0]
   19a2c:	str	x0, [sp, #824]
   19a30:	ldr	x0, [sp, #824]
   19a34:	str	wzr, [x0, #40]
   19a38:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19a3c:	add	x2, x0, #0xd8c
   19a40:	adrp	x0, 1c000 <_fini+0x11fc>
   19a44:	add	x1, x0, #0x2c8
   19a48:	ldr	x0, [sp, #56]
   19a4c:	bl	6d00 <Perl_newXS_deffile@plt>
   19a50:	str	x0, [sp, #48]
   19a54:	ldr	x0, [sp, #48]
   19a58:	ldr	x0, [x0]
   19a5c:	str	x0, [sp, #832]
   19a60:	ldr	x0, [sp, #832]
   19a64:	str	wzr, [x0, #40]
   19a68:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19a6c:	add	x2, x0, #0xd8c
   19a70:	adrp	x0, 1c000 <_fini+0x11fc>
   19a74:	add	x1, x0, #0x2d8
   19a78:	ldr	x0, [sp, #56]
   19a7c:	bl	6d00 <Perl_newXS_deffile@plt>
   19a80:	str	x0, [sp, #48]
   19a84:	ldr	x0, [sp, #48]
   19a88:	ldr	x0, [x0]
   19a8c:	str	x0, [sp, #840]
   19a90:	ldr	x0, [sp, #840]
   19a94:	mov	w1, #0x1                   	// #1
   19a98:	str	w1, [x0, #40]
   19a9c:	adrp	x0, 14000 <XS_POSIX_strtol+0x418>
   19aa0:	add	x2, x0, #0xd8c
   19aa4:	adrp	x0, 1c000 <_fini+0x11fc>
   19aa8:	add	x1, x0, #0x2e8
   19aac:	ldr	x0, [sp, #56]
   19ab0:	bl	6d00 <Perl_newXS_deffile@plt>
   19ab4:	str	x0, [sp, #48]
   19ab8:	ldr	x0, [sp, #48]
   19abc:	ldr	x0, [x0]
   19ac0:	str	x0, [sp, #848]
   19ac4:	ldr	x0, [sp, #848]
   19ac8:	mov	w1, #0x2                   	// #2
   19acc:	str	w1, [x0, #40]
   19ad0:	adrp	x0, 15000 <XS_POSIX_tcflow+0x274>
   19ad4:	add	x2, x0, #0xd4
   19ad8:	adrp	x0, 1c000 <_fini+0x11fc>
   19adc:	add	x1, x0, #0x300
   19ae0:	ldr	x0, [sp, #56]
   19ae4:	bl	6d00 <Perl_newXS_deffile@plt>
   19ae8:	str	x0, [sp, #48]
   19aec:	ldr	x0, [sp, #48]
   19af0:	ldr	x0, [x0]
   19af4:	str	x0, [sp, #856]
   19af8:	ldr	x0, [sp, #856]
   19afc:	str	wzr, [x0, #40]
   19b00:	adrp	x0, 15000 <XS_POSIX_tcflow+0x274>
   19b04:	add	x2, x0, #0xd4
   19b08:	adrp	x0, 1c000 <_fini+0x11fc>
   19b0c:	add	x1, x0, #0x310
   19b10:	ldr	x0, [sp, #56]
   19b14:	bl	6d00 <Perl_newXS_deffile@plt>
   19b18:	str	x0, [sp, #48]
   19b1c:	ldr	x0, [sp, #48]
   19b20:	ldr	x0, [x0]
   19b24:	str	x0, [sp, #864]
   19b28:	ldr	x0, [sp, #864]
   19b2c:	mov	w1, #0x1                   	// #1
   19b30:	str	w1, [x0, #40]
   19b34:	adrp	x0, 15000 <XS_POSIX_tcflow+0x274>
   19b38:	add	x2, x0, #0x898
   19b3c:	adrp	x0, 1c000 <_fini+0x11fc>
   19b40:	add	x1, x0, #0x320
   19b44:	ldr	x0, [sp, #56]
   19b48:	bl	6d00 <Perl_newXS_deffile@plt>
   19b4c:	adrp	x0, 15000 <XS_POSIX_tcflow+0x274>
   19b50:	add	x2, x0, #0xa64
   19b54:	adrp	x0, 1c000 <_fini+0x11fc>
   19b58:	add	x1, x0, #0x330
   19b5c:	ldr	x0, [sp, #56]
   19b60:	bl	6d00 <Perl_newXS_deffile@plt>
   19b64:	adrp	x0, 15000 <XS_POSIX_tcflow+0x274>
   19b68:	add	x2, x0, #0xca4
   19b6c:	adrp	x0, 1c000 <_fini+0x11fc>
   19b70:	add	x1, x0, #0x340
   19b74:	ldr	x0, [sp, #56]
   19b78:	bl	6d00 <Perl_newXS_deffile@plt>
   19b7c:	adrp	x0, 15000 <XS_POSIX_tcflow+0x274>
   19b80:	add	x2, x0, #0xed0
   19b84:	adrp	x0, 1c000 <_fini+0x11fc>
   19b88:	add	x1, x0, #0x350
   19b8c:	ldr	x0, [sp, #56]
   19b90:	bl	6d00 <Perl_newXS_deffile@plt>
   19b94:	adrp	x0, 16000 <XS_POSIX_difftime+0x130>
   19b98:	add	x2, x0, #0x1c4
   19b9c:	adrp	x0, 1c000 <_fini+0x11fc>
   19ba0:	add	x1, x0, #0x360
   19ba4:	ldr	x0, [sp, #56]
   19ba8:	bl	6d00 <Perl_newXS_deffile@plt>
   19bac:	adrp	x0, 16000 <XS_POSIX_difftime+0x130>
   19bb0:	add	x2, x0, #0x974
   19bb4:	adrp	x0, 1c000 <_fini+0x11fc>
   19bb8:	add	x1, x0, #0x370
   19bbc:	ldr	x0, [sp, #56]
   19bc0:	bl	6d00 <Perl_newXS_deffile@plt>
   19bc4:	adrp	x0, 16000 <XS_POSIX_difftime+0x130>
   19bc8:	add	x2, x0, #0xa28
   19bcc:	adrp	x0, 1c000 <_fini+0x11fc>
   19bd0:	add	x1, x0, #0x380
   19bd4:	ldr	x0, [sp, #56]
   19bd8:	bl	6d00 <Perl_newXS_deffile@plt>
   19bdc:	adrp	x0, 16000 <XS_POSIX_difftime+0x130>
   19be0:	add	x2, x0, #0xbb4
   19be4:	adrp	x0, 1c000 <_fini+0x11fc>
   19be8:	add	x1, x0, #0x390
   19bec:	ldr	x0, [sp, #56]
   19bf0:	bl	6d00 <Perl_newXS_deffile@plt>
   19bf4:	adrp	x0, 16000 <XS_POSIX_difftime+0x130>
   19bf8:	add	x2, x0, #0xd3c
   19bfc:	adrp	x0, 1c000 <_fini+0x11fc>
   19c00:	add	x1, x0, #0x3a0
   19c04:	ldr	x0, [sp, #56]
   19c08:	bl	6d00 <Perl_newXS_deffile@plt>
   19c0c:	adrp	x0, 16000 <XS_POSIX_difftime+0x130>
   19c10:	add	x2, x0, #0xec4
   19c14:	adrp	x0, 1c000 <_fini+0x11fc>
   19c18:	add	x1, x0, #0x3b0
   19c1c:	ldr	x0, [sp, #56]
   19c20:	bl	6d00 <Perl_newXS_deffile@plt>
   19c24:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19c28:	add	x2, x0, #0x190
   19c2c:	adrp	x0, 1c000 <_fini+0x11fc>
   19c30:	add	x1, x0, #0x3c8
   19c34:	ldr	x0, [sp, #56]
   19c38:	bl	6d00 <Perl_newXS_deffile@plt>
   19c3c:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19c40:	add	x2, x0, #0x3d0
   19c44:	adrp	x0, 1c000 <_fini+0x11fc>
   19c48:	add	x1, x0, #0x3d8
   19c4c:	ldr	x0, [sp, #56]
   19c50:	bl	6d00 <Perl_newXS_deffile@plt>
   19c54:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19c58:	add	x2, x0, #0x530
   19c5c:	adrp	x0, 1c000 <_fini+0x11fc>
   19c60:	add	x1, x0, #0x3e8
   19c64:	ldr	x0, [sp, #56]
   19c68:	bl	6d00 <Perl_newXS_deffile@plt>
   19c6c:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19c70:	add	x2, x0, #0x79c
   19c74:	adrp	x0, 1c000 <_fini+0x11fc>
   19c78:	add	x1, x0, #0x3f8
   19c7c:	ldr	x0, [sp, #56]
   19c80:	bl	6d00 <Perl_newXS_deffile@plt>
   19c84:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19c88:	add	x2, x0, #0x958
   19c8c:	adrp	x0, 1c000 <_fini+0x11fc>
   19c90:	add	x1, x0, #0x408
   19c94:	ldr	x0, [sp, #56]
   19c98:	bl	6d00 <Perl_newXS_deffile@plt>
   19c9c:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19ca0:	add	x2, x0, #0xb14
   19ca4:	adrp	x0, 1c000 <_fini+0x11fc>
   19ca8:	add	x1, x0, #0x418
   19cac:	ldr	x0, [sp, #56]
   19cb0:	bl	6d00 <Perl_newXS_deffile@plt>
   19cb4:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19cb8:	add	x2, x0, #0xcc4
   19cbc:	adrp	x0, 1c000 <_fini+0x11fc>
   19cc0:	add	x1, x0, #0x428
   19cc4:	ldr	x0, [sp, #56]
   19cc8:	bl	6d00 <Perl_newXS_deffile@plt>
   19ccc:	adrp	x0, 17000 <XS_POSIX_fpathconf+0x13c>
   19cd0:	add	x2, x0, #0xf80
   19cd4:	adrp	x0, 1c000 <_fini+0x11fc>
   19cd8:	add	x1, x0, #0x438
   19cdc:	ldr	x0, [sp, #56]
   19ce0:	bl	6d00 <Perl_newXS_deffile@plt>
   19ce4:	adrp	x0, 18000 <XS_POSIX_getcwd+0x80>
   19ce8:	add	x2, x0, #0xdc
   19cec:	adrp	x0, 1c000 <_fini+0x11fc>
   19cf0:	add	x1, x0, #0x448
   19cf4:	ldr	x0, [sp, #56]
   19cf8:	bl	6d00 <Perl_newXS_deffile@plt>
   19cfc:	mov	w2, #0x1                   	// #1
   19d00:	adrp	x0, 1c000 <_fini+0x11fc>
   19d04:	add	x1, x0, #0x458
   19d08:	ldr	x0, [sp, #56]
   19d0c:	bl	71a0 <Perl_get_hv@plt>
   19d10:	str	x0, [sp, #872]
   19d14:	adrp	x0, 2f000 <__FRAME_END__+0x10580>
   19d18:	add	x0, x0, #0x848
   19d1c:	str	x0, [sp, #80]
   19d20:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   19d24:	add	x0, x0, #0x870
   19d28:	str	x0, [sp, #88]
   19d2c:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   19d30:	add	x0, x0, #0xc30
   19d34:	str	x0, [sp, #96]
   19d38:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   19d3c:	add	x0, x0, #0xd50
   19d40:	str	x0, [sp, #104]
   19d44:	b	19d90 <boot_POSIX+0x19d0>
   19d48:	ldr	x0, [sp, #80]
   19d4c:	ldr	x19, [x0]
   19d50:	ldr	x0, [sp, #80]
   19d54:	ldr	w20, [x0, #8]
   19d58:	ldr	x0, [sp, #80]
   19d5c:	ldr	x0, [x0, #16]
   19d60:	mov	x1, x0
   19d64:	ldr	x0, [sp, #56]
   19d68:	bl	70b0 <Perl_newSViv@plt>
   19d6c:	mov	x4, x0
   19d70:	mov	w3, w20
   19d74:	mov	x2, x19
   19d78:	ldr	x1, [sp, #872]
   19d7c:	ldr	x0, [sp, #56]
   19d80:	bl	7ee8 <constant_add_symbol>
   19d84:	ldr	x0, [sp, #80]
   19d88:	add	x0, x0, #0x18
   19d8c:	str	x0, [sp, #80]
   19d90:	ldr	x0, [sp, #80]
   19d94:	ldr	x0, [x0]
   19d98:	cmp	x0, #0x0
   19d9c:	b.ne	19d48 <boot_POSIX+0x1988>  // b.any
   19da0:	b	19de8 <boot_POSIX+0x1a28>
   19da4:	ldr	x0, [sp, #88]
   19da8:	ldr	x19, [x0]
   19dac:	ldr	x0, [sp, #88]
   19db0:	ldr	w20, [x0, #8]
   19db4:	ldr	x0, [sp, #88]
   19db8:	ldr	d0, [x0, #16]
   19dbc:	ldr	x0, [sp, #56]
   19dc0:	bl	6920 <Perl_newSVnv@plt>
   19dc4:	mov	x4, x0
   19dc8:	mov	w3, w20
   19dcc:	mov	x2, x19
   19dd0:	ldr	x1, [sp, #872]
   19dd4:	ldr	x0, [sp, #56]
   19dd8:	bl	7ee8 <constant_add_symbol>
   19ddc:	ldr	x0, [sp, #88]
   19de0:	add	x0, x0, #0x18
   19de4:	str	x0, [sp, #88]
   19de8:	ldr	x0, [sp, #88]
   19dec:	ldr	x0, [x0]
   19df0:	cmp	x0, #0x0
   19df4:	b.ne	19da4 <boot_POSIX+0x19e4>  // b.any
   19df8:	b	19e44 <boot_POSIX+0x1a84>
   19dfc:	ldr	x0, [sp, #96]
   19e00:	ldr	x19, [x0]
   19e04:	ldr	x0, [sp, #96]
   19e08:	ldr	w20, [x0, #8]
   19e0c:	ldr	x0, [sp, #96]
   19e10:	ldr	x0, [x0, #16]
   19e14:	mov	x1, x0
   19e18:	ldr	x0, [sp, #56]
   19e1c:	bl	6dd0 <Perl_newSVuv@plt>
   19e20:	mov	x4, x0
   19e24:	mov	w3, w20
   19e28:	mov	x2, x19
   19e2c:	ldr	x1, [sp, #872]
   19e30:	ldr	x0, [sp, #56]
   19e34:	bl	7ee8 <constant_add_symbol>
   19e38:	ldr	x0, [sp, #96]
   19e3c:	add	x0, x0, #0x18
   19e40:	str	x0, [sp, #96]
   19e44:	ldr	x0, [sp, #96]
   19e48:	ldr	x0, [x0]
   19e4c:	cmp	x0, #0x0
   19e50:	b.ne	19dfc <boot_POSIX+0x1a3c>  // b.any
   19e54:	b	19e94 <boot_POSIX+0x1ad4>
   19e58:	ldr	x0, [sp, #104]
   19e5c:	ldr	x1, [x0]
   19e60:	ldr	x0, [sp, #104]
   19e64:	ldr	w2, [x0, #8]
   19e68:	ldr	x0, [sp, #56]
   19e6c:	add	x0, x0, #0x138
   19e70:	mov	x4, x0
   19e74:	mov	w3, w2
   19e78:	mov	x2, x1
   19e7c:	ldr	x1, [sp, #872]
   19e80:	ldr	x0, [sp, #56]
   19e84:	bl	7ee8 <constant_add_symbol>
   19e88:	ldr	x0, [sp, #104]
   19e8c:	add	x0, x0, #0x10
   19e90:	str	x0, [sp, #104]
   19e94:	ldr	x0, [sp, #104]
   19e98:	ldr	x0, [x0]
   19e9c:	cmp	x0, #0x0
   19ea0:	b.ne	19e58 <boot_POSIX+0x1a98>  // b.any
   19ea4:	ldr	x0, [sp, #56]
   19ea8:	bl	7ff8 <get_missing_hash>
   19eac:	str	x0, [sp, #880]
   19eb0:	adrp	x0, 2f000 <__FRAME_END__+0x10580>
   19eb4:	add	x0, x0, #0x778
   19eb8:	str	x0, [sp, #112]
   19ebc:	ldr	x0, [sp, #112]
   19ec0:	ldr	x1, [x0]
   19ec4:	ldr	x0, [sp, #112]
   19ec8:	ldr	w0, [x0, #8]
   19ecc:	mov	w6, #0x0                   	// #0
   19ed0:	mov	x5, #0x0                   	// #0
   19ed4:	mov	w4, #0x10                  	// #16
   19ed8:	mov	w3, w0
   19edc:	mov	x2, x1
   19ee0:	ldr	x1, [sp, #872]
   19ee4:	ldr	x0, [sp, #56]
   19ee8:	bl	6f00 <Perl_hv_common_key_len@plt>
   19eec:	str	x0, [sp, #888]
   19ef0:	ldr	x0, [sp, #888]
   19ef4:	cmp	x0, #0x0
   19ef8:	b.ne	19f14 <boot_POSIX+0x1b54>  // b.any
   19efc:	ldr	x0, [sp, #112]
   19f00:	ldr	x0, [x0]
   19f04:	mov	x1, x0
   19f08:	adrp	x0, 1b000 <_fini+0x1fc>
   19f0c:	add	x0, x0, #0x18
   19f10:	bl	6cd0 <Perl_croak_nocontext@plt>
   19f14:	ldr	x0, [sp, #888]
   19f18:	ldr	x0, [x0, #16]
   19f1c:	str	x0, [sp, #896]
   19f20:	ldr	x0, [sp, #896]
   19f24:	ldr	w0, [x0, #12]
   19f28:	and	w0, w0, #0xff00
   19f2c:	cmp	w0, #0x0
   19f30:	b.ne	19f64 <boot_POSIX+0x1ba4>  // b.any
   19f34:	ldr	x0, [sp, #896]
   19f38:	ldr	w0, [x0, #12]
   19f3c:	and	w0, w0, #0xff
   19f40:	cmp	w0, #0x9
   19f44:	b.eq	19f64 <boot_POSIX+0x1ba4>  // b.none
   19f48:	mov	x3, #0x0                   	// #0
   19f4c:	adrp	x0, 1b000 <_fini+0x1fc>
   19f50:	add	x2, x0, #0x3f0
   19f54:	ldr	x1, [sp, #896]
   19f58:	ldr	x0, [sp, #56]
   19f5c:	bl	6f10 <Perl_sv_setpvn@plt>
   19f60:	b	1a020 <boot_POSIX+0x1c60>
   19f64:	ldr	x0, [sp, #896]
   19f68:	ldr	w0, [x0, #12]
   19f6c:	and	w0, w0, #0x400
   19f70:	cmp	w0, #0x0
   19f74:	b.eq	19f8c <boot_POSIX+0x1bcc>  // b.none
   19f78:	ldr	x0, [sp, #896]
   19f7c:	ldr	x0, [x0]
   19f80:	ldr	x0, [x0, #16]
   19f84:	cmp	x0, #0x0
   19f88:	b.eq	1a020 <boot_POSIX+0x1c60>  // b.none
   19f8c:	ldr	x0, [sp, #112]
   19f90:	ldr	x1, [x0]
   19f94:	ldr	x0, [sp, #56]
   19f98:	add	x0, x0, #0x138
   19f9c:	mov	x3, x0
   19fa0:	mov	x2, x1
   19fa4:	ldr	x1, [sp, #872]
   19fa8:	ldr	x0, [sp, #56]
   19fac:	bl	6790 <Perl_newCONSTSUB@plt>
   19fb0:	str	x0, [sp, #904]
   19fb4:	ldr	x0, [sp, #904]
   19fb8:	ldr	x0, [x0]
   19fbc:	str	x0, [sp, #912]
   19fc0:	ldr	x0, [sp, #912]
   19fc4:	ldr	x0, [x0, #40]
   19fc8:	str	x0, [sp, #920]
   19fcc:	ldr	x0, [sp, #920]
   19fd0:	mov	x1, x0
   19fd4:	ldr	x0, [sp, #56]
   19fd8:	bl	73c4 <S_SvREFCNT_dec>
   19fdc:	ldr	x0, [sp, #904]
   19fe0:	ldr	x0, [x0]
   19fe4:	str	x0, [sp, #928]
   19fe8:	ldr	x0, [sp, #928]
   19fec:	ldr	w1, [x0, #92]
   19ff0:	and	w1, w1, #0xfffffffb
   19ff4:	str	w1, [x0, #92]
   19ff8:	ldr	x0, [sp, #904]
   19ffc:	ldr	x0, [x0]
   1a000:	str	x0, [sp, #936]
   1a004:	ldr	x0, [sp, #936]
   1a008:	str	xzr, [x0, #48]
   1a00c:	ldr	x0, [sp, #904]
   1a010:	ldr	x0, [x0]
   1a014:	str	x0, [sp, #944]
   1a018:	ldr	x0, [sp, #944]
   1a01c:	str	xzr, [x0, #40]
   1a020:	ldr	x0, [sp, #888]
   1a024:	ldr	x0, [x0, #8]
   1a028:	str	x0, [sp, #952]
   1a02c:	ldr	x0, [sp, #952]
   1a030:	add	x2, x0, #0x8
   1a034:	ldr	x0, [sp, #952]
   1a038:	ldr	w0, [x0, #4]
   1a03c:	sxtw	x3, w0
   1a040:	ldr	x0, [sp, #952]
   1a044:	add	x1, x0, #0x8
   1a048:	ldr	x0, [sp, #952]
   1a04c:	ldr	w0, [x0, #4]
   1a050:	sxtw	x0, w0
   1a054:	add	x0, x0, #0x1
   1a058:	add	x0, x1, x0
   1a05c:	ldrb	w0, [x0]
   1a060:	mov	w4, w0
   1a064:	ldr	x0, [sp, #56]
   1a068:	add	x1, x0, #0x138
   1a06c:	ldr	x0, [sp, #952]
   1a070:	ldr	w0, [x0]
   1a074:	str	w0, [sp]
   1a078:	mov	x7, x1
   1a07c:	mov	w6, #0x4                   	// #4
   1a080:	mov	w5, w4
   1a084:	mov	x4, x3
   1a088:	mov	x3, x2
   1a08c:	mov	x2, #0x0                   	// #0
   1a090:	ldr	x1, [sp, #880]
   1a094:	ldr	x0, [sp, #56]
   1a098:	bl	6db0 <Perl_hv_common@plt>
   1a09c:	cmp	x0, #0x0
   1a0a0:	b.ne	1a0bc <boot_POSIX+0x1cfc>  // b.any
   1a0a4:	ldr	x0, [sp, #112]
   1a0a8:	ldr	x0, [x0]
   1a0ac:	mov	x1, x0
   1a0b0:	adrp	x0, 1c000 <_fini+0x11fc>
   1a0b4:	add	x0, x0, #0x460
   1a0b8:	bl	6cd0 <Perl_croak_nocontext@plt>
   1a0bc:	ldr	x0, [sp, #112]
   1a0c0:	add	x0, x0, #0x10
   1a0c4:	str	x0, [sp, #112]
   1a0c8:	ldr	x0, [sp, #112]
   1a0cc:	ldr	x0, [x0]
   1a0d0:	cmp	x0, #0x0
   1a0d4:	b.ne	19ebc <boot_POSIX+0x1afc>  // b.any
   1a0d8:	bl	6d30 <__ctype_get_mb_cur_max@plt>
   1a0dc:	str	x0, [sp, #960]
   1a0e0:	ldr	x1, [sp, #960]
   1a0e4:	ldr	x0, [sp, #56]
   1a0e8:	bl	70b0 <Perl_newSViv@plt>
   1a0ec:	mov	x4, x0
   1a0f0:	mov	w3, #0xa                   	// #10
   1a0f4:	adrp	x0, 1c000 <_fini+0x11fc>
   1a0f8:	add	x2, x0, #0x488
   1a0fc:	ldr	x1, [sp, #872]
   1a100:	ldr	x0, [sp, #56]
   1a104:	bl	7ee8 <constant_add_symbol>
   1a108:	str	xzr, [sp, #968]
   1a10c:	ldr	x1, [sp, #968]
   1a110:	ldr	x0, [sp, #56]
   1a114:	bl	70b0 <Perl_newSViv@plt>
   1a118:	mov	x4, x0
   1a11c:	mov	w3, #0x7                   	// #7
   1a120:	adrp	x0, 1c000 <_fini+0x11fc>
   1a124:	add	x2, x0, #0x498
   1a128:	ldr	x1, [sp, #872]
   1a12c:	ldr	x0, [sp, #56]
   1a130:	bl	7ee8 <constant_add_symbol>
   1a134:	mov	x0, #0xffffffffffffffff    	// #-1
   1a138:	str	x0, [sp, #976]
   1a13c:	ldr	x1, [sp, #976]
   1a140:	ldr	x0, [sp, #56]
   1a144:	bl	70b0 <Perl_newSViv@plt>
   1a148:	mov	x4, x0
   1a14c:	mov	w3, #0x7                   	// #7
   1a150:	adrp	x0, 1c000 <_fini+0x11fc>
   1a154:	add	x2, x0, #0x4a0
   1a158:	ldr	x1, [sp, #872]
   1a15c:	ldr	x0, [sp, #56]
   1a160:	bl	7ee8 <constant_add_symbol>
   1a164:	mov	x0, #0x1                   	// #1
   1a168:	str	x0, [sp, #984]
   1a16c:	ldr	x1, [sp, #984]
   1a170:	ldr	x0, [sp, #56]
   1a174:	bl	70b0 <Perl_newSViv@plt>
   1a178:	mov	x4, x0
   1a17c:	mov	w3, #0x7                   	// #7
   1a180:	adrp	x0, 1c000 <_fini+0x11fc>
   1a184:	add	x2, x0, #0x4a8
   1a188:	ldr	x1, [sp, #872]
   1a18c:	ldr	x0, [sp, #56]
   1a190:	bl	7ee8 <constant_add_symbol>
   1a194:	fmov	d0, #1.000000000000000000e+00
   1a198:	str	d0, [sp, #992]
   1a19c:	ldr	d0, [sp, #992]
   1a1a0:	ldr	x0, [sp, #56]
   1a1a4:	bl	6920 <Perl_newSVnv@plt>
   1a1a8:	mov	x4, x0
   1a1ac:	mov	w3, #0xa                   	// #10
   1a1b0:	adrp	x0, 1c000 <_fini+0x11fc>
   1a1b4:	add	x2, x0, #0x4b0
   1a1b8:	ldr	x1, [sp, #872]
   1a1bc:	ldr	x0, [sp, #56]
   1a1c0:	bl	7ee8 <constant_add_symbol>
   1a1c4:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
   1a1c8:	fmov	d0, x0
   1a1cc:	str	d0, [sp, #1000]
   1a1d0:	ldr	d0, [sp, #1000]
   1a1d4:	ldr	x0, [sp, #56]
   1a1d8:	bl	6920 <Perl_newSVnv@plt>
   1a1dc:	mov	x4, x0
   1a1e0:	mov	w3, #0x8                   	// #8
   1a1e4:	adrp	x0, 1c000 <_fini+0x11fc>
   1a1e8:	add	x2, x0, #0x4c0
   1a1ec:	ldr	x1, [sp, #872]
   1a1f0:	ldr	x0, [sp, #56]
   1a1f4:	bl	7ee8 <constant_add_symbol>
   1a1f8:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   1a1fc:	ldr	x0, [x0, #4056]
   1a200:	ldr	d0, [x0]
   1a204:	str	d0, [sp, #1008]
   1a208:	ldr	d0, [sp, #1008]
   1a20c:	ldr	x0, [sp, #56]
   1a210:	bl	6920 <Perl_newSVnv@plt>
   1a214:	mov	x4, x0
   1a218:	mov	w3, #0x8                   	// #8
   1a21c:	adrp	x0, 1c000 <_fini+0x11fc>
   1a220:	add	x2, x0, #0x4d0
   1a224:	ldr	x1, [sp, #872]
   1a228:	ldr	x0, [sp, #56]
   1a22c:	bl	7ee8 <constant_add_symbol>
   1a230:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   1a234:	ldr	x0, [x0, #4056]
   1a238:	ldr	d0, [x0]
   1a23c:	str	d0, [sp, #1016]
   1a240:	ldr	d0, [sp, #1016]
   1a244:	ldr	x0, [sp, #56]
   1a248:	bl	6920 <Perl_newSVnv@plt>
   1a24c:	mov	x4, x0
   1a250:	mov	w3, #0x3                   	// #3
   1a254:	adrp	x0, 1c000 <_fini+0x11fc>
   1a258:	add	x2, x0, #0x4e0
   1a25c:	ldr	x1, [sp, #872]
   1a260:	ldr	x0, [sp, #56]
   1a264:	bl	7ee8 <constant_add_symbol>
   1a268:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   1a26c:	ldr	x0, [x0, #4016]
   1a270:	ldr	d0, [x0]
   1a274:	str	d0, [sp, #1024]
   1a278:	ldr	d0, [sp, #1024]
   1a27c:	ldr	x0, [sp, #56]
   1a280:	bl	6920 <Perl_newSVnv@plt>
   1a284:	mov	x4, x0
   1a288:	mov	w3, #0x3                   	// #3
   1a28c:	adrp	x0, 1c000 <_fini+0x11fc>
   1a290:	add	x2, x0, #0x4e8
   1a294:	ldr	x1, [sp, #872]
   1a298:	ldr	x0, [sp, #56]
   1a29c:	bl	7ee8 <constant_add_symbol>
   1a2a0:	adrp	x0, 31000 <values_for_iv.23345+0x17b8>
   1a2a4:	ldr	x0, [x0, #4016]
   1a2a8:	ldr	d0, [x0]
   1a2ac:	str	d0, [sp, #1032]
   1a2b0:	ldr	d0, [sp, #1032]
   1a2b4:	ldr	x0, [sp, #56]
   1a2b8:	bl	6920 <Perl_newSVnv@plt>
   1a2bc:	mov	x4, x0
   1a2c0:	mov	w3, #0x3                   	// #3
   1a2c4:	adrp	x0, 1c000 <_fini+0x11fc>
   1a2c8:	add	x2, x0, #0x4f0
   1a2cc:	ldr	x1, [sp, #872]
   1a2d0:	ldr	x0, [sp, #56]
   1a2d4:	bl	7ee8 <constant_add_symbol>
   1a2d8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   1a2dc:	fmov	d0, x0
   1a2e0:	str	d0, [sp, #1040]
   1a2e4:	ldr	d0, [sp, #1040]
   1a2e8:	ldr	x0, [sp, #56]
   1a2ec:	bl	6920 <Perl_newSVnv@plt>
   1a2f0:	mov	x4, x0
   1a2f4:	mov	w3, #0x7                   	// #7
   1a2f8:	adrp	x0, 1c000 <_fini+0x11fc>
   1a2fc:	add	x2, x0, #0x4f8
   1a300:	ldr	x1, [sp, #872]
   1a304:	ldr	x0, [sp, #56]
   1a308:	bl	7ee8 <constant_add_symbol>
   1a30c:	mov	x0, #0xffffe0000000        	// #281474439839744
   1a310:	movk	x0, #0x47ef, lsl #48
   1a314:	fmov	d0, x0
   1a318:	str	d0, [sp, #1048]
   1a31c:	ldr	d0, [sp, #1048]
   1a320:	ldr	x0, [sp, #56]
   1a324:	bl	6920 <Perl_newSVnv@plt>
   1a328:	mov	x4, x0
   1a32c:	mov	w3, #0x7                   	// #7
   1a330:	adrp	x0, 1c000 <_fini+0x11fc>
   1a334:	add	x2, x0, #0x500
   1a338:	ldr	x1, [sp, #872]
   1a33c:	ldr	x0, [sp, #56]
   1a340:	bl	7ee8 <constant_add_symbol>
   1a344:	mov	x0, #0x3cb0000000000000    	// #4372995238176751616
   1a348:	fmov	d0, x0
   1a34c:	str	d0, [sp, #1056]
   1a350:	ldr	d0, [sp, #1056]
   1a354:	ldr	x0, [sp, #56]
   1a358:	bl	6920 <Perl_newSVnv@plt>
   1a35c:	mov	x4, x0
   1a360:	mov	w3, #0xb                   	// #11
   1a364:	adrp	x0, 1c000 <_fini+0x11fc>
   1a368:	add	x2, x0, #0x508
   1a36c:	ldr	x1, [sp, #872]
   1a370:	ldr	x0, [sp, #56]
   1a374:	bl	7ee8 <constant_add_symbol>
   1a378:	mov	x0, #0x10000000000000      	// #4503599627370496
   1a37c:	fmov	d0, x0
   1a380:	str	d0, [sp, #1064]
   1a384:	ldr	d0, [sp, #1064]
   1a388:	ldr	x0, [sp, #56]
   1a38c:	bl	6920 <Perl_newSVnv@plt>
   1a390:	mov	x4, x0
   1a394:	mov	w3, #0x7                   	// #7
   1a398:	adrp	x0, 1c000 <_fini+0x11fc>
   1a39c:	add	x2, x0, #0x518
   1a3a0:	ldr	x1, [sp, #872]
   1a3a4:	ldr	x0, [sp, #56]
   1a3a8:	bl	7ee8 <constant_add_symbol>
   1a3ac:	mov	x0, #0x3e80000000000000    	// #4503599627370496000
   1a3b0:	fmov	d0, x0
   1a3b4:	str	d0, [sp, #1072]
   1a3b8:	ldr	d0, [sp, #1072]
   1a3bc:	ldr	x0, [sp, #56]
   1a3c0:	bl	6920 <Perl_newSVnv@plt>
   1a3c4:	mov	x4, x0
   1a3c8:	mov	w3, #0xb                   	// #11
   1a3cc:	adrp	x0, 1c000 <_fini+0x11fc>
   1a3d0:	add	x2, x0, #0x520
   1a3d4:	ldr	x1, [sp, #872]
   1a3d8:	ldr	x0, [sp, #56]
   1a3dc:	bl	7ee8 <constant_add_symbol>
   1a3e0:	mov	x0, #0x3810000000000000    	// #4039728865751334912
   1a3e4:	fmov	d0, x0
   1a3e8:	str	d0, [sp, #1080]
   1a3ec:	ldr	d0, [sp, #1080]
   1a3f0:	ldr	x0, [sp, #56]
   1a3f4:	bl	6920 <Perl_newSVnv@plt>
   1a3f8:	mov	x4, x0
   1a3fc:	mov	w3, #0x7                   	// #7
   1a400:	adrp	x0, 1c000 <_fini+0x11fc>
   1a404:	add	x2, x0, #0x530
   1a408:	ldr	x1, [sp, #872]
   1a40c:	ldr	x0, [sp, #56]
   1a410:	bl	7ee8 <constant_add_symbol>
   1a414:	bl	6630 <__libc_current_sigrtmax@plt>
   1a418:	sxtw	x0, w0
   1a41c:	str	x0, [sp, #1088]
   1a420:	ldr	x1, [sp, #1088]
   1a424:	ldr	x0, [sp, #56]
   1a428:	bl	70b0 <Perl_newSViv@plt>
   1a42c:	mov	x4, x0
   1a430:	mov	w3, #0x8                   	// #8
   1a434:	adrp	x0, 1c000 <_fini+0x11fc>
   1a438:	add	x2, x0, #0x538
   1a43c:	ldr	x1, [sp, #872]
   1a440:	ldr	x0, [sp, #56]
   1a444:	bl	7ee8 <constant_add_symbol>
   1a448:	bl	6950 <__libc_current_sigrtmin@plt>
   1a44c:	sxtw	x0, w0
   1a450:	str	x0, [sp, #1096]
   1a454:	ldr	x1, [sp, #1096]
   1a458:	ldr	x0, [sp, #56]
   1a45c:	bl	70b0 <Perl_newSViv@plt>
   1a460:	mov	x4, x0
   1a464:	mov	w3, #0x8                   	// #8
   1a468:	adrp	x0, 1c000 <_fini+0x11fc>
   1a46c:	add	x2, x0, #0x548
   1a470:	ldr	x1, [sp, #872]
   1a474:	ldr	x0, [sp, #56]
   1a478:	bl	7ee8 <constant_add_symbol>
   1a47c:	ldr	x1, [sp, #872]
   1a480:	ldr	x0, [sp, #56]
   1a484:	bl	68a0 <Perl_mro_method_changed_in@plt>
   1a488:	ldr	w1, [sp, #72]
   1a48c:	ldr	x0, [sp, #56]
   1a490:	bl	69c0 <Perl_xs_boot_epilog@plt>
   1a494:	nop
   1a498:	ldp	x19, x20, [sp, #32]
   1a49c:	ldp	x29, x30, [sp, #16]
   1a4a0:	add	sp, sp, #0x450
   1a4a4:	ret

000000000001a4a8 <__extenddftf2>:
   1a4a8:	stp	x29, x30, [sp, #-160]!
   1a4ac:	mov	x29, sp
   1a4b0:	str	d0, [sp, #24]
   1a4b4:	str	wzr, [sp, #100]
   1a4b8:	str	xzr, [sp, #112]
   1a4bc:	mrs	x0, fpcr
   1a4c0:	str	x0, [sp, #112]
   1a4c4:	ldr	d0, [sp, #24]
   1a4c8:	str	d0, [sp, #56]
   1a4cc:	ldr	x0, [sp, #56]
   1a4d0:	ubfx	x0, x0, #0, #52
   1a4d4:	str	x0, [sp, #128]
   1a4d8:	ldrh	w0, [sp, #62]
   1a4dc:	ubfx	x0, x0, #4, #11
   1a4e0:	and	w0, w0, #0xffff
   1a4e4:	and	x0, x0, #0xffff
   1a4e8:	str	x0, [sp, #120]
   1a4ec:	ldrb	w0, [sp, #63]
   1a4f0:	ubfx	x0, x0, #7, #1
   1a4f4:	and	w0, w0, #0xff
   1a4f8:	and	x0, x0, #0xff
   1a4fc:	str	x0, [sp, #152]
   1a500:	ldr	x0, [sp, #152]
   1a504:	str	x0, [sp, #144]
   1a508:	ldr	x0, [sp, #128]
   1a50c:	str	x0, [sp, #136]
   1a510:	str	xzr, [sp, #104]
   1a514:	ldr	x0, [sp, #120]
   1a518:	add	x0, x0, #0x1
   1a51c:	and	x0, x0, #0x7fe
   1a520:	cmp	x0, #0x0
   1a524:	b.eq	1a560 <__extenddftf2+0xb8>  // b.none
   1a528:	ldr	x1, [sp, #120]
   1a52c:	mov	x0, #0x3c00                	// #15360
   1a530:	add	x0, x1, x0
   1a534:	str	x0, [sp, #88]
   1a538:	ldr	x0, [sp, #104]
   1a53c:	lsl	x1, x0, #60
   1a540:	ldr	x0, [sp, #136]
   1a544:	lsr	x0, x0, #4
   1a548:	orr	x0, x1, x0
   1a54c:	str	x0, [sp, #104]
   1a550:	ldr	x0, [sp, #136]
   1a554:	lsl	x0, x0, #60
   1a558:	str	x0, [sp, #136]
   1a55c:	b	1a66c <__extenddftf2+0x1c4>
   1a560:	ldr	x0, [sp, #120]
   1a564:	cmp	x0, #0x0
   1a568:	b.ne	1a60c <__extenddftf2+0x164>  // b.any
   1a56c:	ldr	x0, [sp, #128]
   1a570:	cmp	x0, #0x0
   1a574:	b.ne	1a580 <__extenddftf2+0xd8>  // b.any
   1a578:	str	xzr, [sp, #88]
   1a57c:	b	1a66c <__extenddftf2+0x1c4>
   1a580:	ldr	x0, [sp, #128]
   1a584:	clz	x0, x0
   1a588:	str	w0, [sp, #84]
   1a58c:	ldr	w0, [sp, #84]
   1a590:	cmp	w0, #0xe
   1a594:	b.gt	1a5dc <__extenddftf2+0x134>
   1a598:	ldr	w0, [sp, #84]
   1a59c:	add	w0, w0, #0x31
   1a5a0:	ldr	x1, [sp, #104]
   1a5a4:	lsl	x1, x1, x0
   1a5a8:	mov	w2, #0xf                   	// #15
   1a5ac:	ldr	w0, [sp, #84]
   1a5b0:	sub	w0, w2, w0
   1a5b4:	ldr	x2, [sp, #136]
   1a5b8:	lsr	x0, x2, x0
   1a5bc:	orr	x0, x1, x0
   1a5c0:	str	x0, [sp, #104]
   1a5c4:	ldr	w0, [sp, #84]
   1a5c8:	add	w0, w0, #0x31
   1a5cc:	ldr	x1, [sp, #136]
   1a5d0:	lsl	x0, x1, x0
   1a5d4:	str	x0, [sp, #136]
   1a5d8:	b	1a5f4 <__extenddftf2+0x14c>
   1a5dc:	ldr	w0, [sp, #84]
   1a5e0:	sub	w0, w0, #0xf
   1a5e4:	ldr	x1, [sp, #136]
   1a5e8:	lsl	x0, x1, x0
   1a5ec:	str	x0, [sp, #104]
   1a5f0:	str	xzr, [sp, #136]
   1a5f4:	mov	w1, #0x3c0c                	// #15372
   1a5f8:	ldr	w0, [sp, #84]
   1a5fc:	sub	w0, w1, w0
   1a600:	sxtw	x0, w0
   1a604:	str	x0, [sp, #88]
   1a608:	b	1a66c <__extenddftf2+0x1c4>
   1a60c:	mov	x0, #0x7fff                	// #32767
   1a610:	str	x0, [sp, #88]
   1a614:	ldr	x0, [sp, #128]
   1a618:	cmp	x0, #0x0
   1a61c:	b.eq	1a66c <__extenddftf2+0x1c4>  // b.none
   1a620:	ldr	x0, [sp, #128]
   1a624:	and	x0, x0, #0x8000000000000
   1a628:	cmp	x0, #0x0
   1a62c:	b.ne	1a63c <__extenddftf2+0x194>  // b.any
   1a630:	ldr	w0, [sp, #100]
   1a634:	orr	w0, w0, #0x1
   1a638:	str	w0, [sp, #100]
   1a63c:	ldr	x0, [sp, #104]
   1a640:	lsl	x1, x0, #60
   1a644:	ldr	x0, [sp, #136]
   1a648:	lsr	x0, x0, #4
   1a64c:	orr	x0, x1, x0
   1a650:	str	x0, [sp, #104]
   1a654:	ldr	x0, [sp, #136]
   1a658:	lsl	x0, x0, #60
   1a65c:	str	x0, [sp, #136]
   1a660:	ldr	x0, [sp, #104]
   1a664:	orr	x0, x0, #0x800000000000
   1a668:	str	x0, [sp, #104]
   1a66c:	ldr	x0, [sp, #136]
   1a670:	str	x0, [sp, #32]
   1a674:	ldr	x0, [sp, #104]
   1a678:	and	x1, x0, #0xffffffffffff
   1a67c:	ldr	x0, [sp, #40]
   1a680:	bfxil	x0, x1, #0, #48
   1a684:	str	x0, [sp, #40]
   1a688:	ldr	x0, [sp, #88]
   1a68c:	and	w0, w0, #0x7fff
   1a690:	and	w1, w0, #0xffff
   1a694:	ldrh	w0, [sp, #46]
   1a698:	bfxil	w0, w1, #0, #15
   1a69c:	strh	w0, [sp, #46]
   1a6a0:	ldr	x0, [sp, #144]
   1a6a4:	and	w0, w0, #0x1
   1a6a8:	and	w1, w0, #0xff
   1a6ac:	ldrb	w0, [sp, #47]
   1a6b0:	bfi	w0, w1, #7, #1
   1a6b4:	strb	w0, [sp, #47]
   1a6b8:	ldr	q0, [sp, #32]
   1a6bc:	str	q0, [sp, #64]
   1a6c0:	ldrsw	x0, [sp, #100]
   1a6c4:	cmp	x0, #0x0
   1a6c8:	b.eq	1a6d4 <__extenddftf2+0x22c>  // b.none
   1a6cc:	ldr	w0, [sp, #100]
   1a6d0:	bl	1ad14 <__sfp_handle_exceptions>
   1a6d4:	ldr	q0, [sp, #64]
   1a6d8:	ldp	x29, x30, [sp], #160
   1a6dc:	ret

000000000001a6e0 <__trunctfdf2>:
   1a6e0:	stp	x29, x30, [sp, #-160]!
   1a6e4:	mov	x29, sp
   1a6e8:	str	q0, [sp, #16]
   1a6ec:	str	wzr, [sp, #132]
   1a6f0:	str	xzr, [sp, #120]
   1a6f4:	mrs	x0, fpcr
   1a6f8:	str	x0, [sp, #120]
   1a6fc:	ldr	q0, [sp, #16]
   1a700:	str	q0, [sp, #48]
   1a704:	ldr	x0, [sp, #48]
   1a708:	str	x0, [sp, #144]
   1a70c:	ldr	x0, [sp, #56]
   1a710:	ubfx	x0, x0, #0, #48
   1a714:	str	x0, [sp, #112]
   1a718:	ldrh	w0, [sp, #62]
   1a71c:	ubfx	x0, x0, #0, #15
   1a720:	and	w0, w0, #0xffff
   1a724:	and	x0, x0, #0xffff
   1a728:	str	x0, [sp, #104]
   1a72c:	ldrb	w0, [sp, #63]
   1a730:	ubfx	x0, x0, #7, #1
   1a734:	and	w0, w0, #0xff
   1a738:	and	x0, x0, #0xff
   1a73c:	str	x0, [sp, #96]
   1a740:	ldr	x0, [sp, #112]
   1a744:	lsl	x1, x0, #3
   1a748:	ldr	x0, [sp, #144]
   1a74c:	lsr	x0, x0, #61
   1a750:	orr	x0, x1, x0
   1a754:	str	x0, [sp, #112]
   1a758:	ldr	x0, [sp, #144]
   1a75c:	lsl	x0, x0, #3
   1a760:	str	x0, [sp, #144]
   1a764:	ldr	x0, [sp, #96]
   1a768:	str	x0, [sp, #88]
   1a76c:	ldr	x0, [sp, #104]
   1a770:	add	x0, x0, #0x1
   1a774:	and	x0, x0, #0x7ffe
   1a778:	cmp	x0, #0x0
   1a77c:	b.eq	1a9a0 <__trunctfdf2+0x2c0>  // b.none
   1a780:	ldr	x1, [sp, #104]
   1a784:	mov	x0, #0xffffffffffffc400    	// #-15360
   1a788:	add	x0, x1, x0
   1a78c:	str	x0, [sp, #136]
   1a790:	ldr	x0, [sp, #136]
   1a794:	cmp	x0, #0x7fe
   1a798:	b.le	1a820 <__trunctfdf2+0x140>
   1a79c:	ldr	x0, [sp, #120]
   1a7a0:	and	x0, x0, #0xc00000
   1a7a4:	cmp	x0, #0x0
   1a7a8:	b.eq	1a7e4 <__trunctfdf2+0x104>  // b.none
   1a7ac:	ldr	x0, [sp, #120]
   1a7b0:	and	x0, x0, #0xc00000
   1a7b4:	cmp	x0, #0x400, lsl #12
   1a7b8:	b.ne	1a7c8 <__trunctfdf2+0xe8>  // b.any
   1a7bc:	ldr	x0, [sp, #88]
   1a7c0:	cmp	x0, #0x0
   1a7c4:	b.eq	1a7e4 <__trunctfdf2+0x104>  // b.none
   1a7c8:	ldr	x0, [sp, #120]
   1a7cc:	and	x0, x0, #0xc00000
   1a7d0:	cmp	x0, #0x800, lsl #12
   1a7d4:	b.ne	1a7f4 <__trunctfdf2+0x114>  // b.any
   1a7d8:	ldr	x0, [sp, #88]
   1a7dc:	cmp	x0, #0x0
   1a7e0:	b.eq	1a7f4 <__trunctfdf2+0x114>  // b.none
   1a7e4:	mov	x0, #0x7ff                 	// #2047
   1a7e8:	str	x0, [sp, #136]
   1a7ec:	str	xzr, [sp, #152]
   1a7f0:	b	1a804 <__trunctfdf2+0x124>
   1a7f4:	mov	x0, #0x7fe                 	// #2046
   1a7f8:	str	x0, [sp, #136]
   1a7fc:	mov	x0, #0xffffffffffffffff    	// #-1
   1a800:	str	x0, [sp, #152]
   1a804:	ldr	w0, [sp, #132]
   1a808:	orr	w0, w0, #0x10
   1a80c:	str	w0, [sp, #132]
   1a810:	ldr	w0, [sp, #132]
   1a814:	orr	w0, w0, #0x4
   1a818:	str	w0, [sp, #132]
   1a81c:	b	1aa88 <__trunctfdf2+0x3a8>
   1a820:	ldr	x0, [sp, #136]
   1a824:	cmp	x0, #0x0
   1a828:	b.gt	1a954 <__trunctfdf2+0x274>
   1a82c:	ldr	x0, [sp, #136]
   1a830:	cmn	x0, #0x34
   1a834:	b.ge	1a850 <__trunctfdf2+0x170>  // b.tcont
   1a838:	str	xzr, [sp, #144]
   1a83c:	str	xzr, [sp, #112]
   1a840:	ldr	x0, [sp, #144]
   1a844:	orr	x0, x0, #0x1
   1a848:	str	x0, [sp, #144]
   1a84c:	b	1a94c <__trunctfdf2+0x26c>
   1a850:	ldr	x0, [sp, #112]
   1a854:	orr	x0, x0, #0x8000000000000
   1a858:	str	x0, [sp, #112]
   1a85c:	mov	x1, #0x3d                  	// #61
   1a860:	ldr	x0, [sp, #136]
   1a864:	sub	x0, x1, x0
   1a868:	cmp	x0, #0x3f
   1a86c:	b.gt	1a8e4 <__trunctfdf2+0x204>
   1a870:	ldr	x0, [sp, #136]
   1a874:	add	w0, w0, #0x3
   1a878:	ldr	x1, [sp, #112]
   1a87c:	lsl	x1, x1, x0
   1a880:	ldr	x0, [sp, #136]
   1a884:	mov	w2, w0
   1a888:	mov	w0, #0x3d                  	// #61
   1a88c:	sub	w0, w0, w2
   1a890:	ldr	x2, [sp, #144]
   1a894:	lsr	x0, x2, x0
   1a898:	orr	x1, x1, x0
   1a89c:	ldr	x0, [sp, #136]
   1a8a0:	add	w0, w0, #0x3
   1a8a4:	ldr	x2, [sp, #144]
   1a8a8:	lsl	x0, x2, x0
   1a8ac:	cmp	x0, #0x0
   1a8b0:	cset	w0, ne  // ne = any
   1a8b4:	and	w0, w0, #0xff
   1a8b8:	sxtw	x0, w0
   1a8bc:	orr	x0, x1, x0
   1a8c0:	str	x0, [sp, #144]
   1a8c4:	ldr	x0, [sp, #136]
   1a8c8:	mov	w1, w0
   1a8cc:	mov	w0, #0x3d                  	// #61
   1a8d0:	sub	w0, w0, w1
   1a8d4:	ldr	x1, [sp, #112]
   1a8d8:	lsr	x0, x1, x0
   1a8dc:	str	x0, [sp, #112]
   1a8e0:	b	1a94c <__trunctfdf2+0x26c>
   1a8e4:	ldr	x0, [sp, #136]
   1a8e8:	mov	w1, w0
   1a8ec:	mov	w0, #0xfffffffd            	// #-3
   1a8f0:	sub	w0, w0, w1
   1a8f4:	ldr	x1, [sp, #112]
   1a8f8:	lsr	x1, x1, x0
   1a8fc:	mov	x2, #0x3d                  	// #61
   1a900:	ldr	x0, [sp, #136]
   1a904:	sub	x0, x2, x0
   1a908:	cmp	x0, #0x40
   1a90c:	b.eq	1a924 <__trunctfdf2+0x244>  // b.none
   1a910:	ldr	x0, [sp, #136]
   1a914:	add	w0, w0, #0x43
   1a918:	ldr	x2, [sp, #112]
   1a91c:	lsl	x0, x2, x0
   1a920:	b	1a928 <__trunctfdf2+0x248>
   1a924:	mov	x0, #0x0                   	// #0
   1a928:	ldr	x2, [sp, #144]
   1a92c:	orr	x0, x0, x2
   1a930:	cmp	x0, #0x0
   1a934:	cset	w0, ne  // ne = any
   1a938:	and	w0, w0, #0xff
   1a93c:	and	x0, x0, #0xff
   1a940:	orr	x0, x1, x0
   1a944:	str	x0, [sp, #144]
   1a948:	str	xzr, [sp, #112]
   1a94c:	str	xzr, [sp, #136]
   1a950:	b	1a994 <__trunctfdf2+0x2b4>
   1a954:	ldr	x0, [sp, #112]
   1a958:	lsl	x1, x0, #4
   1a95c:	ldr	x0, [sp, #144]
   1a960:	lsr	x0, x0, #60
   1a964:	orr	x1, x1, x0
   1a968:	ldr	x0, [sp, #144]
   1a96c:	lsl	x0, x0, #4
   1a970:	cmp	x0, #0x0
   1a974:	cset	w0, ne  // ne = any
   1a978:	and	w0, w0, #0xff
   1a97c:	sxtw	x0, w0
   1a980:	orr	x0, x1, x0
   1a984:	str	x0, [sp, #144]
   1a988:	ldr	x0, [sp, #112]
   1a98c:	lsr	x0, x0, #60
   1a990:	str	x0, [sp, #112]
   1a994:	ldr	x0, [sp, #144]
   1a998:	str	x0, [sp, #152]
   1a99c:	b	1aa88 <__trunctfdf2+0x3a8>
   1a9a0:	ldr	x0, [sp, #104]
   1a9a4:	cmp	x0, #0x0
   1a9a8:	b.ne	1a9e0 <__trunctfdf2+0x300>  // b.any
   1a9ac:	str	xzr, [sp, #136]
   1a9b0:	ldr	x1, [sp, #112]
   1a9b4:	ldr	x0, [sp, #144]
   1a9b8:	orr	x0, x1, x0
   1a9bc:	cmp	x0, #0x0
   1a9c0:	b.ne	1a9cc <__trunctfdf2+0x2ec>  // b.any
   1a9c4:	str	xzr, [sp, #152]
   1a9c8:	b	1aa88 <__trunctfdf2+0x3a8>
   1a9cc:	str	xzr, [sp, #152]
   1a9d0:	ldr	x0, [sp, #152]
   1a9d4:	orr	x0, x0, #0x1
   1a9d8:	str	x0, [sp, #152]
   1a9dc:	b	1aa88 <__trunctfdf2+0x3a8>
   1a9e0:	mov	x0, #0x7ff                 	// #2047
   1a9e4:	str	x0, [sp, #136]
   1a9e8:	ldr	x1, [sp, #112]
   1a9ec:	ldr	x0, [sp, #144]
   1a9f0:	orr	x0, x1, x0
   1a9f4:	cmp	x0, #0x0
   1a9f8:	b.ne	1aa04 <__trunctfdf2+0x324>  // b.any
   1a9fc:	str	xzr, [sp, #152]
   1aa00:	b	1aa88 <__trunctfdf2+0x3a8>
   1aa04:	ldr	x1, [sp, #104]
   1aa08:	mov	x0, #0x7fff                	// #32767
   1aa0c:	cmp	x1, x0
   1aa10:	b.ne	1aa44 <__trunctfdf2+0x364>  // b.any
   1aa14:	ldr	x1, [sp, #112]
   1aa18:	ldr	x0, [sp, #144]
   1aa1c:	orr	x0, x1, x0
   1aa20:	cmp	x0, #0x0
   1aa24:	b.eq	1aa44 <__trunctfdf2+0x364>  // b.none
   1aa28:	ldr	x0, [sp, #112]
   1aa2c:	and	x0, x0, #0x4000000000000
   1aa30:	cmp	x0, #0x0
   1aa34:	b.ne	1aa44 <__trunctfdf2+0x364>  // b.any
   1aa38:	ldr	w0, [sp, #132]
   1aa3c:	orr	w0, w0, #0x1
   1aa40:	str	w0, [sp, #132]
   1aa44:	ldr	x0, [sp, #144]
   1aa48:	lsr	x1, x0, #60
   1aa4c:	ldr	x0, [sp, #112]
   1aa50:	lsl	x0, x0, #4
   1aa54:	orr	x0, x1, x0
   1aa58:	str	x0, [sp, #144]
   1aa5c:	ldr	x0, [sp, #112]
   1aa60:	lsr	x0, x0, #60
   1aa64:	str	x0, [sp, #112]
   1aa68:	ldr	x0, [sp, #144]
   1aa6c:	str	x0, [sp, #152]
   1aa70:	ldr	x0, [sp, #152]
   1aa74:	and	x0, x0, #0xfffffffffffffff8
   1aa78:	str	x0, [sp, #152]
   1aa7c:	ldr	x0, [sp, #152]
   1aa80:	orr	x0, x0, #0x40000000000000
   1aa84:	str	x0, [sp, #152]
   1aa88:	ldr	x0, [sp, #136]
   1aa8c:	cmp	x0, #0x0
   1aa90:	b.ne	1aaa8 <__trunctfdf2+0x3c8>  // b.any
   1aa94:	ldr	x0, [sp, #152]
   1aa98:	cmp	x0, #0x0
   1aa9c:	b.eq	1aaa8 <__trunctfdf2+0x3c8>  // b.none
   1aaa0:	mov	w0, #0x1                   	// #1
   1aaa4:	b	1aaac <__trunctfdf2+0x3cc>
   1aaa8:	mov	w0, #0x0                   	// #0
   1aaac:	str	w0, [sp, #84]
   1aab0:	ldr	x0, [sp, #152]
   1aab4:	and	x0, x0, #0x7
   1aab8:	cmp	x0, #0x0
   1aabc:	b.eq	1ab80 <__trunctfdf2+0x4a0>  // b.none
   1aac0:	ldr	w0, [sp, #132]
   1aac4:	orr	w0, w0, #0x10
   1aac8:	str	w0, [sp, #132]
   1aacc:	ldr	x0, [sp, #120]
   1aad0:	and	x0, x0, #0xc00000
   1aad4:	cmp	x0, #0xc00, lsl #12
   1aad8:	b.eq	1ab88 <__trunctfdf2+0x4a8>  // b.none
   1aadc:	cmp	x0, #0xc00, lsl #12
   1aae0:	b.hi	1ab8c <__trunctfdf2+0x4ac>  // b.pmore
   1aae4:	cmp	x0, #0x800, lsl #12
   1aae8:	b.eq	1ab54 <__trunctfdf2+0x474>  // b.none
   1aaec:	cmp	x0, #0x800, lsl #12
   1aaf0:	b.hi	1ab8c <__trunctfdf2+0x4ac>  // b.pmore
   1aaf4:	cmp	x0, #0x0
   1aaf8:	b.eq	1ab08 <__trunctfdf2+0x428>  // b.none
   1aafc:	cmp	x0, #0x400, lsl #12
   1ab00:	b.eq	1ab28 <__trunctfdf2+0x448>  // b.none
   1ab04:	b	1ab8c <__trunctfdf2+0x4ac>
   1ab08:	ldr	x0, [sp, #152]
   1ab0c:	and	x0, x0, #0xf
   1ab10:	cmp	x0, #0x4
   1ab14:	b.eq	1ab88 <__trunctfdf2+0x4a8>  // b.none
   1ab18:	ldr	x0, [sp, #152]
   1ab1c:	add	x0, x0, #0x4
   1ab20:	str	x0, [sp, #152]
   1ab24:	b	1ab88 <__trunctfdf2+0x4a8>
   1ab28:	ldr	x0, [sp, #88]
   1ab2c:	cmp	x0, #0x0
   1ab30:	b.ne	1ab88 <__trunctfdf2+0x4a8>  // b.any
   1ab34:	ldr	x0, [sp, #152]
   1ab38:	and	x0, x0, #0x7
   1ab3c:	cmp	x0, #0x0
   1ab40:	b.eq	1ab88 <__trunctfdf2+0x4a8>  // b.none
   1ab44:	ldr	x0, [sp, #152]
   1ab48:	add	x0, x0, #0x8
   1ab4c:	str	x0, [sp, #152]
   1ab50:	b	1ab88 <__trunctfdf2+0x4a8>
   1ab54:	ldr	x0, [sp, #88]
   1ab58:	cmp	x0, #0x0
   1ab5c:	b.eq	1ab88 <__trunctfdf2+0x4a8>  // b.none
   1ab60:	ldr	x0, [sp, #152]
   1ab64:	and	x0, x0, #0x7
   1ab68:	cmp	x0, #0x0
   1ab6c:	b.eq	1ab88 <__trunctfdf2+0x4a8>  // b.none
   1ab70:	ldr	x0, [sp, #152]
   1ab74:	add	x0, x0, #0x8
   1ab78:	str	x0, [sp, #152]
   1ab7c:	b	1ab88 <__trunctfdf2+0x4a8>
   1ab80:	nop
   1ab84:	b	1ab8c <__trunctfdf2+0x4ac>
   1ab88:	nop
   1ab8c:	ldr	w0, [sp, #84]
   1ab90:	cmp	w0, #0x0
   1ab94:	b.eq	1abc4 <__trunctfdf2+0x4e4>  // b.none
   1ab98:	ldr	w0, [sp, #132]
   1ab9c:	and	w0, w0, #0x10
   1aba0:	cmp	w0, #0x0
   1aba4:	b.ne	1abb8 <__trunctfdf2+0x4d8>  // b.any
   1aba8:	ldr	x0, [sp, #120]
   1abac:	and	x0, x0, #0x800
   1abb0:	cmp	x0, #0x0
   1abb4:	b.eq	1abc4 <__trunctfdf2+0x4e4>  // b.none
   1abb8:	ldr	w0, [sp, #132]
   1abbc:	orr	w0, w0, #0x8
   1abc0:	str	w0, [sp, #132]
   1abc4:	ldr	x0, [sp, #152]
   1abc8:	and	x0, x0, #0x80000000000000
   1abcc:	cmp	x0, #0x0
   1abd0:	b.eq	1ac78 <__trunctfdf2+0x598>  // b.none
   1abd4:	ldr	x0, [sp, #152]
   1abd8:	and	x0, x0, #0xff7fffffffffffff
   1abdc:	str	x0, [sp, #152]
   1abe0:	ldr	x0, [sp, #136]
   1abe4:	add	x0, x0, #0x1
   1abe8:	str	x0, [sp, #136]
   1abec:	ldr	x0, [sp, #136]
   1abf0:	cmp	x0, #0x7ff
   1abf4:	b.ne	1ac78 <__trunctfdf2+0x598>  // b.any
   1abf8:	ldr	x0, [sp, #120]
   1abfc:	and	x0, x0, #0xc00000
   1ac00:	cmp	x0, #0x0
   1ac04:	b.eq	1ac40 <__trunctfdf2+0x560>  // b.none
   1ac08:	ldr	x0, [sp, #120]
   1ac0c:	and	x0, x0, #0xc00000
   1ac10:	cmp	x0, #0x400, lsl #12
   1ac14:	b.ne	1ac24 <__trunctfdf2+0x544>  // b.any
   1ac18:	ldr	x0, [sp, #88]
   1ac1c:	cmp	x0, #0x0
   1ac20:	b.eq	1ac40 <__trunctfdf2+0x560>  // b.none
   1ac24:	ldr	x0, [sp, #120]
   1ac28:	and	x0, x0, #0xc00000
   1ac2c:	cmp	x0, #0x800, lsl #12
   1ac30:	b.ne	1ac50 <__trunctfdf2+0x570>  // b.any
   1ac34:	ldr	x0, [sp, #88]
   1ac38:	cmp	x0, #0x0
   1ac3c:	b.eq	1ac50 <__trunctfdf2+0x570>  // b.none
   1ac40:	mov	x0, #0x7ff                 	// #2047
   1ac44:	str	x0, [sp, #136]
   1ac48:	str	xzr, [sp, #152]
   1ac4c:	b	1ac60 <__trunctfdf2+0x580>
   1ac50:	mov	x0, #0x7fe                 	// #2046
   1ac54:	str	x0, [sp, #136]
   1ac58:	mov	x0, #0xffffffffffffffff    	// #-1
   1ac5c:	str	x0, [sp, #152]
   1ac60:	ldr	w0, [sp, #132]
   1ac64:	orr	w0, w0, #0x10
   1ac68:	str	w0, [sp, #132]
   1ac6c:	ldr	w0, [sp, #132]
   1ac70:	orr	w0, w0, #0x4
   1ac74:	str	w0, [sp, #132]
   1ac78:	ldr	x0, [sp, #152]
   1ac7c:	lsr	x0, x0, #3
   1ac80:	str	x0, [sp, #152]
   1ac84:	ldr	x0, [sp, #136]
   1ac88:	cmp	x0, #0x7ff
   1ac8c:	b.ne	1aca8 <__trunctfdf2+0x5c8>  // b.any
   1ac90:	ldr	x0, [sp, #152]
   1ac94:	cmp	x0, #0x0
   1ac98:	b.eq	1aca8 <__trunctfdf2+0x5c8>  // b.none
   1ac9c:	ldr	x0, [sp, #152]
   1aca0:	orr	x0, x0, #0x8000000000000
   1aca4:	str	x0, [sp, #152]
   1aca8:	ldr	x0, [sp, #152]
   1acac:	and	x1, x0, #0xfffffffffffff
   1acb0:	ldr	x0, [sp, #40]
   1acb4:	bfxil	x0, x1, #0, #52
   1acb8:	str	x0, [sp, #40]
   1acbc:	ldr	x0, [sp, #136]
   1acc0:	and	w0, w0, #0x7ff
   1acc4:	and	w1, w0, #0xffff
   1acc8:	ldrh	w0, [sp, #46]
   1accc:	bfi	w0, w1, #4, #11
   1acd0:	strh	w0, [sp, #46]
   1acd4:	ldr	x0, [sp, #88]
   1acd8:	and	w0, w0, #0x1
   1acdc:	and	w1, w0, #0xff
   1ace0:	ldrb	w0, [sp, #47]
   1ace4:	bfi	w0, w1, #7, #1
   1ace8:	strb	w0, [sp, #47]
   1acec:	ldr	d0, [sp, #40]
   1acf0:	str	d0, [sp, #72]
   1acf4:	ldrsw	x0, [sp, #132]
   1acf8:	cmp	x0, #0x0
   1acfc:	b.eq	1ad08 <__trunctfdf2+0x628>  // b.none
   1ad00:	ldr	w0, [sp, #132]
   1ad04:	bl	1ad14 <__sfp_handle_exceptions>
   1ad08:	ldr	d0, [sp, #72]
   1ad0c:	ldp	x29, x30, [sp], #160
   1ad10:	ret

000000000001ad14 <__sfp_handle_exceptions>:
   1ad14:	sub	sp, sp, #0x30
   1ad18:	str	w0, [sp, #12]
   1ad1c:	mov	w0, #0x7f7fffff            	// #2139095039
   1ad20:	fmov	s0, w0
   1ad24:	str	s0, [sp, #44]
   1ad28:	movi	v0.2s, #0x80, lsl #16
   1ad2c:	str	s0, [sp, #40]
   1ad30:	mov	w0, #0xc5ae                	// #50606
   1ad34:	movk	w0, #0x749d, lsl #16
   1ad38:	fmov	s0, w0
   1ad3c:	str	s0, [sp, #36]
   1ad40:	str	wzr, [sp, #32]
   1ad44:	fmov	s0, #1.000000000000000000e+00
   1ad48:	str	s0, [sp, #28]
   1ad4c:	ldr	w0, [sp, #12]
   1ad50:	and	w0, w0, #0x1
   1ad54:	cmp	w0, #0x0
   1ad58:	b.eq	1ad6c <__sfp_handle_exceptions+0x58>  // b.none
   1ad5c:	ldr	s1, [sp, #32]
   1ad60:	fdiv	s0, s1, s1
   1ad64:	mrs	x0, fpsr
   1ad68:	str	w0, [sp, #24]
   1ad6c:	ldr	w0, [sp, #12]
   1ad70:	and	w0, w0, #0x2
   1ad74:	cmp	w0, #0x0
   1ad78:	b.eq	1ad90 <__sfp_handle_exceptions+0x7c>  // b.none
   1ad7c:	ldr	s1, [sp, #28]
   1ad80:	ldr	s2, [sp, #32]
   1ad84:	fdiv	s0, s1, s2
   1ad88:	mrs	x0, fpsr
   1ad8c:	str	w0, [sp, #24]
   1ad90:	ldr	w0, [sp, #12]
   1ad94:	and	w0, w0, #0x4
   1ad98:	cmp	w0, #0x0
   1ad9c:	b.eq	1adb4 <__sfp_handle_exceptions+0xa0>  // b.none
   1ada0:	ldr	s1, [sp, #44]
   1ada4:	ldr	s2, [sp, #36]
   1ada8:	fadd	s0, s1, s2
   1adac:	mrs	x0, fpsr
   1adb0:	str	w0, [sp, #24]
   1adb4:	ldr	w0, [sp, #12]
   1adb8:	and	w0, w0, #0x8
   1adbc:	cmp	w0, #0x0
   1adc0:	b.eq	1add4 <__sfp_handle_exceptions+0xc0>  // b.none
   1adc4:	ldr	s1, [sp, #40]
   1adc8:	fmul	s0, s1, s1
   1adcc:	mrs	x0, fpsr
   1add0:	str	w0, [sp, #24]
   1add4:	ldr	w0, [sp, #12]
   1add8:	and	w0, w0, #0x10
   1addc:	cmp	w0, #0x0
   1ade0:	b.eq	1adf8 <__sfp_handle_exceptions+0xe4>  // b.none
   1ade4:	ldr	s1, [sp, #44]
   1ade8:	ldr	s2, [sp, #28]
   1adec:	fsub	s0, s1, s2
   1adf0:	mrs	x0, fpsr
   1adf4:	str	w0, [sp, #24]
   1adf8:	nop
   1adfc:	add	sp, sp, #0x30
   1ae00:	ret

Disassembly of section .fini:

000000000001ae04 <_fini>:
   1ae04:	stp	x29, x30, [sp, #-16]!
   1ae08:	mov	x29, sp
   1ae0c:	ldp	x29, x30, [sp], #16
   1ae10:	ret
