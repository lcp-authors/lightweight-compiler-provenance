
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//pbkdf2.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_crypto_pbkdf2>:
   0:	stp	x29, x30, [sp, #-288]!
   4:	cmp	w5, #0x0
   8:	mov	x8, #0xfffffffe            	// #4294967294
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	sub	x0, x7, #0x1
  1c:	stp	x23, x24, [sp, #48]
  20:	mov	w20, w5
  24:	ccmp	x0, x8, #0x2, ne  // ne = any
  28:	ldr	x23, [x19, #32]
  2c:	stp	x21, x22, [sp, #32]
  30:	mov	x21, x1
  34:	str	x4, [sp, #96]
  38:	sub	x5, x23, #0x1
  3c:	str	x6, [sp, #136]
  40:	mov	x1, #0x3f                  	// #63
  44:	ccmp	x5, x1, #0x2, ls  // ls = plast
  48:	b.ls	68 <grub_crypto_pbkdf2+0x68>  // b.plast
  4c:	mov	w7, #0xa                   	// #10
  50:	mov	w0, w7
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x21, x22, [sp, #32]
  5c:	ldp	x23, x24, [sp, #48]
  60:	ldp	x29, x30, [sp], #288
  64:	ret
  68:	udiv	x1, x0, x23
  6c:	mov	x22, x2
  70:	add	x0, x4, #0x4
  74:	mov	x24, x4
  78:	stp	x25, x26, [sp, #64]
  7c:	mov	x25, x3
  80:	msub	w2, w23, w1, w7
  84:	add	w1, w1, #0x1
  88:	stp	x27, x28, [sp, #80]
  8c:	str	x0, [sp, #128]
  90:	stp	w23, w1, [sp, #148]
  94:	str	w2, [sp, #156]
  98:	bl	0 <grub_malloc>
  9c:	mov	x26, x0
  a0:	cbz	x0, 218 <grub_crypto_pbkdf2+0x218>
  a4:	mov	x1, x25
  a8:	mov	x2, x24
  ac:	add	x25, x0, x24
  b0:	sub	w28, w23, #0x1
  b4:	mov	w27, #0x1                   	// #1
  b8:	str	wzr, [sp, #144]
  bc:	bl	0 <grub_memmove>
  c0:	lsr	w0, w27, #24
  c4:	str	w0, [sp, #108]
  c8:	ubfx	x0, x27, #16, #8
  cc:	str	x0, [sp, #112]
  d0:	ubfx	x0, x27, #8, #8
  d4:	mov	x2, x23
  d8:	mov	w1, #0x0                   	// #0
  dc:	mov	w24, #0x0                   	// #0
  e0:	str	x0, [sp, #120]
  e4:	add	x0, sp, #0xe0
  e8:	bl	0 <grub_memset>
  ec:	nop
  f0:	cbz	w24, 1a4 <grub_crypto_pbkdf2+0x1a4>
  f4:	add	x5, sp, #0xa0
  f8:	mov	x4, x23
  fc:	mov	x3, x5
 100:	mov	x2, x22
 104:	mov	x1, x21
 108:	mov	x0, x19
 10c:	bl	0 <grub_crypto_hmac_buffer>
 110:	mov	w7, w0
 114:	cbnz	w0, 1e8 <grub_crypto_pbkdf2+0x1e8>
 118:	add	x0, sp, #0xe0
 11c:	add	x1, sp, #0xe1
 120:	mov	x3, x0
 124:	add	x6, x28, x1
 128:	add	x4, sp, #0xa0
 12c:	nop
 130:	ldrb	w2, [x3]
 134:	cmp	x6, x1
 138:	ldrb	w5, [x4], #1
 13c:	eor	w2, w2, w5
 140:	strb	w2, [x3]
 144:	mov	x3, x1
 148:	add	x1, x1, #0x1
 14c:	b.ne	130 <grub_crypto_pbkdf2+0x130>  // b.any
 150:	add	w24, w24, #0x1
 154:	cmp	w20, w24
 158:	b.hi	f0 <grub_crypto_pbkdf2+0xf0>  // b.pmore
 15c:	ldr	x4, [sp, #136]
 160:	add	x1, sp, #0xe0
 164:	ldr	w3, [sp, #144]
 168:	ldp	w24, w2, [sp, #152]
 16c:	str	w7, [sp, #108]
 170:	add	x0, x4, w3, uxtw
 174:	ldr	w4, [sp, #148]
 178:	cmp	w24, w27
 17c:	add	w3, w3, w4
 180:	csel	x2, x2, x23, eq  // eq = none
 184:	str	w3, [sp, #144]
 188:	bl	0 <grub_memmove>
 18c:	ldr	w7, [sp, #108]
 190:	add	w0, w27, #0x1
 194:	cmp	w24, w27
 198:	b.ls	1e8 <grub_crypto_pbkdf2+0x1e8>  // b.plast
 19c:	mov	w27, w0
 1a0:	b	c0 <grub_crypto_pbkdf2+0xc0>
 1a4:	ldr	x0, [sp, #96]
 1a8:	add	x5, sp, #0xa0
 1ac:	ldrb	w1, [sp, #108]
 1b0:	mov	x3, x26
 1b4:	ldr	x4, [sp, #128]
 1b8:	strb	w1, [x26, x0]
 1bc:	ldrb	w0, [sp, #112]
 1c0:	mov	x2, x22
 1c4:	strb	w0, [x25, #1]
 1c8:	mov	x1, x21
 1cc:	ldrb	w0, [sp, #120]
 1d0:	strb	w0, [x25, #2]
 1d4:	mov	x0, x19
 1d8:	strb	w27, [x25, #3]
 1dc:	bl	0 <grub_crypto_hmac_buffer>
 1e0:	mov	w7, w0
 1e4:	cbz	w0, 118 <grub_crypto_pbkdf2+0x118>
 1e8:	mov	x0, x26
 1ec:	str	w7, [sp, #96]
 1f0:	bl	0 <grub_free>
 1f4:	ldr	w7, [sp, #96]
 1f8:	ldp	x19, x20, [sp, #16]
 1fc:	mov	w0, w7
 200:	ldp	x21, x22, [sp, #32]
 204:	ldp	x23, x24, [sp, #48]
 208:	ldp	x25, x26, [sp, #64]
 20c:	ldp	x27, x28, [sp, #80]
 210:	ldp	x29, x30, [sp], #288
 214:	ret
 218:	mov	w7, #0x22                  	// #34
 21c:	ldp	x25, x26, [sp, #64]
 220:	ldp	x27, x28, [sp, #80]
 224:	b	50 <grub_crypto_pbkdf2+0x50>
