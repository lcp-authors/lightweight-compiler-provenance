
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002068 <.init>:
    2068:	stp	x29, x30, [sp, #-16]!
    206c:	mov	x29, sp
    2070:	bl	21a0 <printf@plt+0x10>
    2074:	ldp	x29, x30, [sp], #16
    2078:	ret

Disassembly of section .plt:

0000000000002080 <memcpy@plt-0x20>:
    2080:	stp	x16, x30, [sp, #-16]!
    2084:	adrp	x16, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2088:	ldr	x17, [x16, #4088]
    208c:	add	x16, x16, #0xff8
    2090:	br	x17
    2094:	nop
    2098:	nop
    209c:	nop

00000000000020a0 <memcpy@plt>:
    20a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16]
    20a8:	add	x16, x16, #0x0
    20ac:	br	x17

00000000000020b0 <strtok@plt>:
    20b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #8]
    20b8:	add	x16, x16, #0x8
    20bc:	br	x17

00000000000020c0 <strlen@plt>:
    20c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #16]
    20c8:	add	x16, x16, #0x10
    20cc:	br	x17

00000000000020d0 <__cxa_finalize@plt>:
    20d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #24]
    20d8:	add	x16, x16, #0x18
    20dc:	br	x17

00000000000020e0 <qsort@plt>:
    20e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #32]
    20e8:	add	x16, x16, #0x20
    20ec:	br	x17

00000000000020f0 <sqrt@plt>:
    20f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #40]
    20f8:	add	x16, x16, #0x28
    20fc:	br	x17

0000000000002100 <malloc@plt>:
    2100:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #48]
    2108:	add	x16, x16, #0x30
    210c:	br	x17

0000000000002110 <wcslen@plt>:
    2110:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #56]
    2118:	add	x16, x16, #0x38
    211c:	br	x17

0000000000002120 <__gmon_start__@plt>:
    2120:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #64]
    2128:	add	x16, x16, #0x40
    212c:	br	x17

0000000000002130 <PyModule_Create2@plt>:
    2130:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #72]
    2138:	add	x16, x16, #0x48
    213c:	br	x17

0000000000002140 <puts@plt>:
    2140:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #80]
    2148:	add	x16, x16, #0x50
    214c:	br	x17

0000000000002150 <PyArg_ParseTuple@plt>:
    2150:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #88]
    2158:	add	x16, x16, #0x58
    215c:	br	x17

0000000000002160 <free@plt>:
    2160:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #96]
    2168:	add	x16, x16, #0x60
    216c:	br	x17

0000000000002170 <strchr@plt>:
    2170:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #104]
    2178:	add	x16, x16, #0x68
    217c:	br	x17

0000000000002180 <vfprintf@plt>:
    2180:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #112]
    2188:	add	x16, x16, #0x70
    218c:	br	x17

0000000000002190 <printf@plt>:
    2190:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #120]
    2198:	add	x16, x16, #0x78
    219c:	br	x17

Disassembly of section .text:

00000000000021a0 <py_func@@Base-0xd8>:
    21a0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    21a4:	ldr	x0, [x0, #4000]
    21a8:	cbz	x0, 21b0 <printf@plt+0x20>
    21ac:	b	2120 <__gmon_start__@plt>
    21b0:	ret
    21b4:	nop
    21b8:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13b10>
    21bc:	add	x0, x0, #0x1b8
    21c0:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x13b10>
    21c4:	add	x1, x1, #0x1b8
    21c8:	cmp	x1, x0
    21cc:	b.eq	21e4 <printf@plt+0x54>  // b.none
    21d0:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    21d4:	ldr	x1, [x1, #3952]
    21d8:	cbz	x1, 21e4 <printf@plt+0x54>
    21dc:	mov	x16, x1
    21e0:	br	x16
    21e4:	ret
    21e8:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13b10>
    21ec:	add	x0, x0, #0x1b8
    21f0:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x13b10>
    21f4:	add	x1, x1, #0x1b8
    21f8:	sub	x1, x1, x0
    21fc:	lsr	x2, x1, #63
    2200:	add	x1, x2, x1, asr #3
    2204:	cmp	xzr, x1, asr #1
    2208:	asr	x1, x1, #1
    220c:	b.eq	2224 <printf@plt+0x94>  // b.none
    2210:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2214:	ldr	x2, [x2, #4048]
    2218:	cbz	x2, 2224 <printf@plt+0x94>
    221c:	mov	x16, x2
    2220:	br	x16
    2224:	ret
    2228:	stp	x29, x30, [sp, #-32]!
    222c:	mov	x29, sp
    2230:	str	x19, [sp, #16]
    2234:	adrp	x19, 17000 <PyInit__ctypes_test@@Base+0x13b10>
    2238:	ldrb	w0, [x19, #440]
    223c:	cbnz	w0, 2264 <printf@plt+0xd4>
    2240:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2244:	ldr	x0, [x0, #3960]
    2248:	cbz	x0, 2258 <printf@plt+0xc8>
    224c:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13b10>
    2250:	ldr	x0, [x0, #128]
    2254:	bl	20d0 <__cxa_finalize@plt>
    2258:	bl	21b8 <printf@plt+0x28>
    225c:	mov	w0, #0x1                   	// #1
    2260:	strb	w0, [x19, #440]
    2264:	ldr	x19, [sp, #16]
    2268:	ldp	x29, x30, [sp], #32
    226c:	ret
    2270:	b	21e8 <printf@plt+0x58>
    2274:	nop

0000000000002278 <py_func@@Base>:
    2278:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    227c:	ldr	x0, [x0, #4008]
    2280:	ldr	x1, [x0]
    2284:	add	x1, x1, #0x1
    2288:	str	x1, [x0]
    228c:	ret
    2290:	stp	x29, x30, [sp, #-32]!
    2294:	mov	x2, x1
    2298:	mov	x29, sp
    229c:	stp	x19, x20, [sp, #16]
    22a0:	mov	x19, x1
    22a4:	mov	x1, x0
    22a8:	mov	x20, x0
    22ac:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    22b0:	add	x0, x0, #0x580
    22b4:	bl	2190 <printf@plt>
    22b8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    22bc:	add	x0, x0, #0x598
    22c0:	bl	2140 <puts@plt>
    22c4:	mov	w0, #0x20                  	// #32
    22c8:	blr	x20
    22cc:	mov	x20, x0
    22d0:	blr	x19
    22d4:	mov	x1, x20
    22d8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    22dc:	ldp	x19, x20, [sp, #16]
    22e0:	add	x0, x0, #0x5a0
    22e4:	ldp	x29, x30, [sp], #32
    22e8:	b	2190 <printf@plt>
    22ec:	nop

00000000000022f0 <py_func_si@@Base>:
    22f0:	stp	x29, x30, [sp, #-32]!
    22f4:	mov	x0, x1
    22f8:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    22fc:	mov	x29, sp
    2300:	add	x1, x1, #0x5b8
    2304:	add	x3, sp, #0x14
    2308:	add	x2, sp, #0x18
    230c:	bl	2150 <PyArg_ParseTuple@plt>
    2310:	cbz	w0, 2334 <py_func_si@@Base+0x44>
    2314:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2318:	ldr	x1, [x1, #4008]
    231c:	mov	x0, x1
    2320:	ldr	x2, [x1]
    2324:	add	x2, x2, #0x1
    2328:	str	x2, [x1]
    232c:	ldp	x29, x30, [sp], #32
    2330:	ret
    2334:	mov	x0, #0x0                   	// #0
    2338:	ldp	x29, x30, [sp], #32
    233c:	ret

0000000000002340 <_testfunc_cbk_reg_int@@Base>:
    2340:	mul	w0, w0, w0
    2344:	mov	x16, x5
    2348:	mul	w1, w1, w1
    234c:	mul	w2, w2, w2
    2350:	mul	w3, w3, w3
    2354:	mul	w4, w4, w4
    2358:	br	x16
    235c:	nop

0000000000002360 <_testfunc_cbk_reg_double@@Base>:
    2360:	fmul	d0, d0, d0
    2364:	fmul	d1, d1, d1
    2368:	fmul	d2, d2, d2
    236c:	fmul	d3, d3, d3
    2370:	fmul	d4, d4, d4
    2374:	mov	x16, x0
    2378:	br	x16
    237c:	nop

0000000000002380 <_testfunc_cbk_large_struct@@Base>:
    2380:	mov	x2, x0
    2384:	stp	x29, x30, [sp, #-48]!
    2388:	mov	x29, sp
    238c:	ldp	x4, x5, [x2]
    2390:	stp	x4, x5, [sp, #16]
    2394:	add	x0, sp, #0x10
    2398:	ldr	x2, [x2, #16]
    239c:	str	x2, [sp, #32]
    23a0:	blr	x1
    23a4:	ldp	x29, x30, [sp], #48
    23a8:	ret
    23ac:	nop

00000000000023b0 <_testfunc_large_struct_update_value@@Base>:
    23b0:	mov	x1, #0xf00d                	// #61453
    23b4:	movk	x1, #0xbad, lsl #16
    23b8:	str	x1, [x0]
    23bc:	str	x1, [x0, #8]
    23c0:	str	x1, [x0, #16]
    23c4:	ret

00000000000023c8 <_testfunc_reg_struct_update_value@@Base>:
    23c8:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    23cc:	ldr	x1, [x1, #4040]
    23d0:	str	x0, [x1]
    23d4:	ret

00000000000023d8 <_testfunc_array_in_struct1@@Base>:
    23d8:	fmov	d0, x0
    23dc:	sub	sp, sp, #0x10
    23e0:	add	sp, sp, #0x10
    23e4:	mov	v0.d[1], x1
    23e8:	uxtl2	v2.8h, v0.16b
    23ec:	uxtl	v1.8h, v0.8b
    23f0:	uxtl	v0.4s, v2.4h
    23f4:	uaddw2	v0.4s, v0.4s, v1.8h
    23f8:	uaddw2	v0.4s, v0.4s, v2.8h
    23fc:	uaddw	v0.4s, v0.4s, v1.4h
    2400:	addv	s0, v0.4s
    2404:	mov	w0, v0.s[0]
    2408:	ret
    240c:	nop

0000000000002410 <_testfunc_array_in_struct2@@Base>:
    2410:	movi	d2, #0x0
    2414:	fadd	d0, d0, d2
    2418:	fadd	d0, d0, d1
    241c:	ret

0000000000002420 <_testfunc_array_in_struct2a@@Base>:
    2420:	fmov	w2, s0
    2424:	fmov	w3, s1
    2428:	fmov	w4, s2
    242c:	mov	x0, #0x0                   	// #0
    2430:	mov	x1, #0x0                   	// #0
    2434:	movi	d4, #0x0
    2438:	bfxil	x0, x2, #0, #32
    243c:	fmov	w2, s3
    2440:	bfxil	x1, x4, #0, #32
    2444:	bfi	x0, x3, #32, #32
    2448:	fmov	d0, x0
    244c:	bfi	x1, x2, #32, #32
    2450:	sxtw	x2, w0
    2454:	fmov	d3, x2
    2458:	ushr	d1, d0, #32
    245c:	sxtw	x0, w1
    2460:	fmov	d2, x1
    2464:	fcvt	d3, s3
    2468:	fmov	d0, x0
    246c:	ushr	d2, d2, #32
    2470:	fcvt	d1, s1
    2474:	fcvt	d0, s0
    2478:	fadd	d3, d3, d4
    247c:	fcvt	d2, s2
    2480:	fadd	d1, d1, d3
    2484:	fadd	d0, d0, d1
    2488:	fadd	d0, d2, d0
    248c:	ret

0000000000002490 <_testfunc_union_by_value1@@Base>:
    2490:	asr	x1, x0, #32
    2494:	add	x1, x1, w0, sxtw
    2498:	add	x0, x1, x0
    249c:	ret

00000000000024a0 <_testfunc_union_by_value2@@Base>:
    24a0:	ldr	w1, [x0]
    24a4:	ldr	w0, [x0, #8]
    24a8:	add	w0, w1, w0
    24ac:	sxtw	x0, w0
    24b0:	ret
    24b4:	nop

00000000000024b8 <_testfunc_union_by_reference1@@Base>:
    24b8:	mov	x1, x0
    24bc:	ldr	x0, [x0]
    24c0:	str	xzr, [x1]
    24c4:	ret

00000000000024c8 <_testfunc_union_by_reference2@@Base>:
    24c8:	ldp	w1, w2, [x0]
    24cc:	str	xzr, [x0]
    24d0:	add	w0, w1, w2
    24d4:	sxtw	x0, w0
    24d8:	ret
    24dc:	nop

00000000000024e0 <_testfunc_union_by_reference3@@Base>:
    24e0:	ldr	w1, [x0]
    24e4:	ldr	w3, [x0, #8]
    24e8:	ldr	w2, [x0, #24]
    24ec:	add	w1, w1, w3
    24f0:	stp	xzr, xzr, [x0]
    24f4:	add	w1, w1, w2
    24f8:	stp	xzr, xzr, [x0, #16]
    24fc:	sxtw	x0, w1
    2500:	ret
    2504:	nop

0000000000002508 <_testfunc_bitfield_by_value1@@Base>:
    2508:	sbfx	x1, x0, #0, #1
    250c:	sbfx	x3, x0, #1, #2
    2510:	sbfx	x2, x0, #3, #3
    2514:	sbfx	x0, x0, #6, #2
    2518:	add	w1, w3, w1, sxtb
    251c:	add	w0, w2, w0
    2520:	add	w0, w1, w0
    2524:	sxtw	x0, w0
    2528:	ret
    252c:	nop

0000000000002530 <_testfunc_bitfield_by_reference1@@Base>:
    2530:	ldrb	w1, [x0]
    2534:	str	wzr, [x0]
    2538:	sbfx	x0, x1, #0, #1
    253c:	sbfx	x3, x1, #1, #2
    2540:	sbfx	x2, x1, #3, #3
    2544:	sbfx	x1, x1, #6, #2
    2548:	add	w0, w3, w0, sxtb
    254c:	add	w1, w2, w1
    2550:	add	w0, w0, w1
    2554:	sxtw	x0, w0
    2558:	ret
    255c:	nop

0000000000002560 <_testfunc_bitfield_by_reference2@@Base>:
    2560:	ldrb	w1, [x0]
    2564:	str	wzr, [x0]
    2568:	and	w0, w1, #0x1
    256c:	ubfx	x3, x1, #1, #2
    2570:	ubfx	x2, x1, #3, #3
    2574:	ubfx	x1, x1, #6, #2
    2578:	add	w0, w0, w3
    257c:	add	w1, w2, w1
    2580:	add	w0, w0, w1
    2584:	sxtw	x0, w0
    2588:	ret
    258c:	nop

0000000000002590 <_testfunc_bitfield_by_value2@@Base>:
    2590:	sbfx	x1, x0, #0, #1
    2594:	sbfx	x2, x0, #0, #3
    2598:	sbfx	x0, x0, #0, #2
    259c:	add	w1, w2, w1, sxtb
    25a0:	add	w0, w1, w0, lsl #1
    25a4:	sxtw	x0, w0
    25a8:	ret
    25ac:	nop

00000000000025b0 <testfunc_array@@Base>:
    25b0:	mov	x4, x0
    25b4:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    25b8:	add	x0, x1, #0x5c0
    25bc:	ldp	w1, w2, [x4]
    25c0:	ldp	w3, w4, [x4, #8]
    25c4:	b	2190 <printf@plt>

00000000000025c8 <testfunc_Ddd@@Base>:
    25c8:	stp	x29, x30, [sp, #-48]!
    25cc:	mov	x29, sp
    25d0:	stp	d1, d0, [sp, #32]
    25d4:	fmul	d0, d0, d1
    25d8:	bl	53b0 <PyInit__ctypes_test@@Base+0x1ec0>
    25dc:	str	q0, [sp, #16]
    25e0:	add	x2, sp, #0x20
    25e4:	add	x1, sp, #0x28
    25e8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    25ec:	add	x0, x0, #0x5e0
    25f0:	bl	2190 <printf@plt>
    25f4:	ldp	d1, d0, [sp, #32]
    25f8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    25fc:	add	x0, x0, #0x5f8
    2600:	bl	2190 <printf@plt>
    2604:	ldr	q2, [sp, #16]
    2608:	ldp	x29, x30, [sp], #48
    260c:	mov	v0.16b, v2.16b
    2610:	ret
    2614:	nop

0000000000002618 <testfunc_DDD@@Base>:
    2618:	stp	x29, x30, [sp, #-64]!
    261c:	mov	x29, sp
    2620:	str	q1, [sp, #32]
    2624:	str	q0, [sp, #48]
    2628:	bl	4958 <PyInit__ctypes_test@@Base+0x1468>
    262c:	add	x2, sp, #0x20
    2630:	add	x1, sp, #0x30
    2634:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    2638:	add	x0, x0, #0x610
    263c:	str	q0, [sp, #16]
    2640:	bl	2190 <printf@plt>
    2644:	ldr	q1, [sp, #32]
    2648:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    264c:	ldr	q0, [sp, #48]
    2650:	add	x0, x0, #0x628
    2654:	bl	2190 <printf@plt>
    2658:	ldr	q2, [sp, #16]
    265c:	ldp	x29, x30, [sp], #64
    2660:	mov	v0.16b, v2.16b
    2664:	ret

0000000000002668 <testfunc_iii@@Base>:
    2668:	stp	x29, x30, [sp, #-48]!
    266c:	adrp	x3, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    2670:	mov	x29, sp
    2674:	str	x19, [sp, #16]
    2678:	mov	w19, w1
    267c:	add	x2, sp, #0x28
    2680:	stp	w1, w0, [sp, #40]
    2684:	add	x1, sp, #0x2c
    2688:	mul	w19, w0, w19
    268c:	add	x0, x3, #0x640
    2690:	bl	2190 <printf@plt>
    2694:	mov	w0, w19
    2698:	ldr	x19, [sp, #16]
    269c:	ldp	x29, x30, [sp], #48
    26a0:	ret
    26a4:	nop

00000000000026a8 <myprintf@@Base>:
    26a8:	stp	x29, x30, [sp, #-304]!
    26ac:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    26b0:	mov	x12, x0
    26b4:	mov	x29, sp
    26b8:	ldr	x8, [x8, #3984]
    26bc:	add	x11, sp, #0xf0
    26c0:	add	x0, sp, #0x130
    26c4:	mov	w10, #0xffffffc8            	// #-56
    26c8:	mov	w9, #0xffffff80            	// #-128
    26cc:	stp	x0, x0, [sp, #48]
    26d0:	str	x11, [sp, #64]
    26d4:	stp	w10, w9, [sp, #72]
    26d8:	ldr	x0, [x8]
    26dc:	str	q0, [sp, #112]
    26e0:	ldp	x10, x11, [sp, #48]
    26e4:	stp	x10, x11, [sp, #16]
    26e8:	ldp	x8, x9, [sp, #64]
    26ec:	stp	x8, x9, [sp, #32]
    26f0:	stp	x10, x11, [sp, #80]
    26f4:	stp	x8, x9, [sp, #96]
    26f8:	str	q1, [sp, #128]
    26fc:	str	q2, [sp, #144]
    2700:	str	q3, [sp, #160]
    2704:	str	q4, [sp, #176]
    2708:	str	q5, [sp, #192]
    270c:	str	q6, [sp, #208]
    2710:	str	q7, [sp, #224]
    2714:	stp	x1, x2, [sp, #248]
    2718:	add	x2, sp, #0x10
    271c:	mov	x1, x12
    2720:	stp	x3, x4, [sp, #264]
    2724:	stp	x5, x6, [sp, #280]
    2728:	str	x7, [sp, #296]
    272c:	bl	2180 <vfprintf@plt>
    2730:	ldp	x29, x30, [sp], #304
    2734:	ret

0000000000002738 <my_strtok@@Base>:
    2738:	b	20b0 <strtok@plt>
    273c:	nop

0000000000002740 <my_strchr@@Base>:
    2740:	b	2170 <strchr@plt>
    2744:	nop

0000000000002748 <my_sqrt@@Base>:
    2748:	fsqrt	d1, d0
    274c:	fcmp	d0, #0.0
    2750:	b.mi	275c <my_sqrt@@Base+0x14>  // b.first
    2754:	fmov	d0, d1
    2758:	ret
    275c:	stp	x29, x30, [sp, #-32]!
    2760:	mov	x29, sp
    2764:	str	d1, [sp, #24]
    2768:	bl	20f0 <sqrt@plt>
    276c:	ldr	d1, [sp, #24]
    2770:	ldp	x29, x30, [sp], #32
    2774:	fmov	d0, d1
    2778:	ret
    277c:	nop

0000000000002780 <my_qsort@@Base>:
    2780:	b	20e0 <qsort@plt>
    2784:	nop

0000000000002788 <_testfunc_ai8@@Base>:
    2788:	ret
    278c:	nop

0000000000002790 <_testfunc_v@@Base>:
    2790:	add	w0, w0, w1
    2794:	str	w0, [x2]
    2798:	ret
    279c:	nop

00000000000027a0 <_testfunc_i_bhilfd@@Base>:
    27a0:	add	w2, w2, w1, sxth
    27a4:	add	w2, w2, w0, sxtb
    27a8:	add	x2, x3, w2, sxtw
    27ac:	scvtf	s2, x2
    27b0:	fadd	s2, s2, s0
    27b4:	fcvt	d2, s2
    27b8:	fadd	d2, d2, d1
    27bc:	fcvtzs	w0, d2
    27c0:	ret
    27c4:	nop

00000000000027c8 <_testfunc_f_bhilfd@@Base>:
    27c8:	add	w2, w2, w1, sxth
    27cc:	add	w2, w2, w0, sxtb
    27d0:	add	x2, x3, w2, sxtw
    27d4:	scvtf	s2, x2
    27d8:	fadd	s0, s2, s0
    27dc:	fcvt	d0, s0
    27e0:	fadd	d0, d0, d1
    27e4:	fcvt	s0, d0
    27e8:	ret
    27ec:	nop

00000000000027f0 <_testfunc_d_bhilfd@@Base>:
    27f0:	add	w2, w2, w1, sxth
    27f4:	add	w2, w2, w0, sxtb
    27f8:	add	x2, x3, w2, sxtw
    27fc:	scvtf	s2, x2
    2800:	fadd	s2, s2, s0
    2804:	fcvt	d2, s2
    2808:	fadd	d0, d2, d1
    280c:	ret

0000000000002810 <_testfunc_D_bhilfD@@Base>:
    2810:	add	w2, w2, w1, sxth
    2814:	stp	x29, x30, [sp, #-32]!
    2818:	add	w2, w2, w0, sxtb
    281c:	mov	x29, sp
    2820:	add	x2, x3, w2, sxtw
    2824:	str	q1, [sp, #16]
    2828:	scvtf	s2, x2
    282c:	fadd	s0, s2, s0
    2830:	bl	5278 <PyInit__ctypes_test@@Base+0x1d88>
    2834:	ldr	q1, [sp, #16]
    2838:	bl	3500 <PyInit__ctypes_test@@Base+0x10>
    283c:	ldp	x29, x30, [sp], #32
    2840:	ret
    2844:	nop

0000000000002848 <_testfunc_p_p@@Base>:
    2848:	ret
    284c:	nop

0000000000002850 <_testfunc_c_p_p@@Base>:
    2850:	ldr	w0, [x0]
    2854:	add	x0, x1, w0, sxtw #3
    2858:	ldur	x0, [x0, #-8]
    285c:	ret

0000000000002860 <get_strchr@@Base>:
    2860:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2864:	ldr	x0, [x0, #4016]
    2868:	ret
    286c:	nop

0000000000002870 <my_strdup@@Base>:
    2870:	stp	x29, x30, [sp, #-48]!
    2874:	mov	x29, sp
    2878:	stp	x19, x20, [sp, #16]
    287c:	str	x21, [sp, #32]
    2880:	mov	x21, x0
    2884:	bl	20c0 <strlen@plt>
    2888:	add	x20, x0, #0x1
    288c:	mov	x0, x20
    2890:	bl	2100 <malloc@plt>
    2894:	mov	x19, x0
    2898:	cbz	x0, 28a8 <my_strdup@@Base+0x38>
    289c:	mov	x2, x20
    28a0:	mov	x1, x21
    28a4:	bl	20a0 <memcpy@plt>
    28a8:	mov	x0, x19
    28ac:	ldp	x19, x20, [sp, #16]
    28b0:	ldr	x21, [sp, #32]
    28b4:	ldp	x29, x30, [sp], #48
    28b8:	ret
    28bc:	nop

00000000000028c0 <my_free@@Base>:
    28c0:	b	2160 <free@plt>
    28c4:	nop

00000000000028c8 <my_wcsdup@@Base>:
    28c8:	stp	x29, x30, [sp, #-48]!
    28cc:	mov	x29, sp
    28d0:	stp	x19, x20, [sp, #16]
    28d4:	str	x21, [sp, #32]
    28d8:	mov	x21, x0
    28dc:	bl	2110 <wcslen@plt>
    28e0:	add	x19, x0, #0x1
    28e4:	lsl	x19, x19, #2
    28e8:	mov	x0, x19
    28ec:	bl	2100 <malloc@plt>
    28f0:	mov	x20, x0
    28f4:	cbz	x0, 2904 <my_wcsdup@@Base+0x3c>
    28f8:	mov	x2, x19
    28fc:	mov	x1, x21
    2900:	bl	20a0 <memcpy@plt>
    2904:	mov	x0, x20
    2908:	ldp	x19, x20, [sp, #16]
    290c:	ldr	x21, [sp, #32]
    2910:	ldp	x29, x30, [sp], #48
    2914:	ret

0000000000002918 <my_wcslen@@Base>:
    2918:	b	2110 <wcslen@plt>
    291c:	nop

0000000000002920 <_testfunc_callfuncp@@Base>:
    2920:	stp	x29, x30, [sp, #-32]!
    2924:	mov	w1, #0x2                   	// #2
    2928:	mov	x29, sp
    292c:	str	x19, [sp, #16]
    2930:	mov	x19, x0
    2934:	mov	w0, #0x1                   	// #1
    2938:	ldr	x2, [x19]
    293c:	blr	x2
    2940:	ldr	x2, [x19, #8]
    2944:	mov	w1, #0x4                   	// #4
    2948:	mov	w0, #0x3                   	// #3
    294c:	blr	x2
    2950:	mov	w0, #0x0                   	// #0
    2954:	ldr	x19, [sp, #16]
    2958:	ldp	x29, x30, [sp], #32
    295c:	ret

0000000000002960 <_testfunc_deref_pointer@@Base>:
    2960:	ldr	w0, [x0]
    2964:	ret

0000000000002968 <_testfunc_callback_with_pointer@@Base>:
    2968:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    296c:	add	x1, x1, #0x6e0
    2970:	stp	x29, x30, [sp, #-64]!
    2974:	mov	x2, x0
    2978:	mov	x29, sp
    297c:	ldp	x4, x5, [x1]
    2980:	stp	x4, x5, [sp, #24]
    2984:	add	x0, sp, #0x18
    2988:	ldp	x4, x5, [x1, #16]
    298c:	stp	x4, x5, [sp, #40]
    2990:	ldr	x1, [x1, #32]
    2994:	str	x1, [sp, #56]
    2998:	blr	x2
    299c:	ldp	x29, x30, [sp], #64
    29a0:	ret
    29a4:	nop

00000000000029a8 <_testfunc_q_bhilfdq@@Base>:
    29a8:	add	w2, w2, w1, sxth
    29ac:	scvtf	d3, x4
    29b0:	add	w2, w2, w0, sxtb
    29b4:	add	x2, x3, w2, sxtw
    29b8:	scvtf	s2, x2
    29bc:	fadd	s2, s2, s0
    29c0:	fcvt	d2, s2
    29c4:	fadd	d2, d2, d1
    29c8:	fadd	d2, d2, d3
    29cc:	fcvtzs	x0, d2
    29d0:	ret
    29d4:	nop

00000000000029d8 <_testfunc_q_bhilfd@@Base>:
    29d8:	add	w2, w2, w1, sxth
    29dc:	add	w2, w2, w0, sxtb
    29e0:	add	x2, x3, w2, sxtw
    29e4:	scvtf	s2, x2
    29e8:	fadd	s2, s2, s0
    29ec:	fcvt	d2, s2
    29f0:	fadd	d2, d2, d1
    29f4:	fcvtzs	x0, d2
    29f8:	ret
    29fc:	nop

0000000000002a00 <_testfunc_callback_i_if@@Base>:
    2a00:	stp	x29, x30, [sp, #-48]!
    2a04:	mov	x29, sp
    2a08:	stp	x19, x20, [sp, #16]
    2a0c:	cbz	w0, 2a50 <_testfunc_callback_i_if@@Base+0x50>
    2a10:	mov	w19, w0
    2a14:	str	x21, [sp, #32]
    2a18:	mov	x21, x1
    2a1c:	mov	w20, #0x0                   	// #0
    2a20:	mov	w0, w19
    2a24:	add	w19, w19, w19, lsr #31
    2a28:	blr	x21
    2a2c:	add	w20, w20, w0
    2a30:	cmp	wzr, w19, asr #1
    2a34:	asr	w19, w19, #1
    2a38:	b.ne	2a20 <_testfunc_callback_i_if@@Base+0x20>  // b.any
    2a3c:	mov	w0, w20
    2a40:	ldp	x19, x20, [sp, #16]
    2a44:	ldr	x21, [sp, #32]
    2a48:	ldp	x29, x30, [sp], #48
    2a4c:	ret
    2a50:	mov	w20, #0x0                   	// #0
    2a54:	mov	w0, w20
    2a58:	ldp	x19, x20, [sp, #16]
    2a5c:	ldp	x29, x30, [sp], #48
    2a60:	ret
    2a64:	nop

0000000000002a68 <_testfunc_callback_q_qf@@Base>:
    2a68:	stp	x29, x30, [sp, #-48]!
    2a6c:	mov	x29, sp
    2a70:	stp	x19, x20, [sp, #16]
    2a74:	cbz	x0, 2ab8 <_testfunc_callback_q_qf@@Base+0x50>
    2a78:	mov	x19, x0
    2a7c:	str	x21, [sp, #32]
    2a80:	mov	x21, x1
    2a84:	mov	x20, #0x0                   	// #0
    2a88:	mov	x0, x19
    2a8c:	add	x19, x19, x19, lsr #63
    2a90:	blr	x21
    2a94:	add	x20, x20, x0
    2a98:	cmp	xzr, x19, asr #1
    2a9c:	asr	x19, x19, #1
    2aa0:	b.ne	2a88 <_testfunc_callback_q_qf@@Base+0x20>  // b.any
    2aa4:	mov	x0, x20
    2aa8:	ldp	x19, x20, [sp, #16]
    2aac:	ldr	x21, [sp, #32]
    2ab0:	ldp	x29, x30, [sp], #48
    2ab4:	ret
    2ab8:	mov	x20, #0x0                   	// #0
    2abc:	mov	x0, x20
    2ac0:	ldp	x19, x20, [sp, #16]
    2ac4:	ldp	x29, x30, [sp], #48
    2ac8:	ret
    2acc:	nop

0000000000002ad0 <getSPAMANDEGGS@@Base>:
    2ad0:	mov	x2, x0
    2ad4:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2ad8:	mov	w0, #0x1                   	// #1
    2adc:	ldr	x1, [x1, #3992]
    2ae0:	str	x1, [x2]
    2ae4:	ret

0000000000002ae8 <_testfunc_byval@@Base>:
    2ae8:	asr	x2, x0, #32
    2aec:	cbz	x1, 2af4 <_testfunc_byval@@Base+0xc>
    2af0:	stp	w0, w2, [x1]
    2af4:	add	w0, w2, w0
    2af8:	ret
    2afc:	nop

0000000000002b00 <get_an_integer@@Base>:
    2b00:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2b04:	ldr	x0, [x0, #4056]
    2b08:	ldr	w0, [x0]
    2b0c:	ret

0000000000002b10 <integrate@@Base>:
    2b10:	stp	x29, x30, [sp, #-80]!
    2b14:	mov	x29, sp
    2b18:	stp	d10, d11, [sp, #48]
    2b1c:	fsub	d11, d1, d0
    2b20:	fmov	d10, d1
    2b24:	stp	d12, d13, [sp, #64]
    2b28:	scvtf	d12, x1
    2b2c:	movi	d13, #0x0
    2b30:	stp	d8, d9, [sp, #32]
    2b34:	fmov	d8, #5.000000000000000000e-01
    2b38:	fmov	d9, d0
    2b3c:	fdiv	d11, d11, d12
    2b40:	fmul	d8, d11, d8
    2b44:	fadd	d8, d8, d0
    2b48:	fsub	d0, d1, d8
    2b4c:	fsub	d1, d8, d9
    2b50:	fmul	d0, d0, d1
    2b54:	fcmpe	d0, d13
    2b58:	b.le	2b90 <integrate@@Base+0x80>
    2b5c:	str	x19, [sp, #16]
    2b60:	mov	x19, x0
    2b64:	nop
    2b68:	fmov	d0, d8
    2b6c:	blr	x19
    2b70:	fadd	d8, d8, d11
    2b74:	fadd	d13, d13, d0
    2b78:	fsub	d2, d10, d8
    2b7c:	fsub	d0, d8, d9
    2b80:	fmul	d2, d2, d0
    2b84:	fcmpe	d2, #0.0
    2b88:	b.gt	2b68 <integrate@@Base+0x58>
    2b8c:	ldr	x19, [sp, #16]
    2b90:	fdiv	d0, d13, d12
    2b94:	ldp	d8, d9, [sp, #32]
    2b98:	ldp	d10, d11, [sp, #48]
    2b9c:	ldp	d12, d13, [sp, #64]
    2ba0:	ldp	x29, x30, [sp], #80
    2ba4:	ret

0000000000002ba8 <library_get@@Base>:
    2ba8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2bac:	ldr	x0, [x0, #4064]
    2bb0:	ret
    2bb4:	nop

0000000000002bb8 <_py_func_si@@Base>:
    2bb8:	ret
    2bbc:	nop

0000000000002bc0 <_py_func@@Base>:
    2bc0:	ret
    2bc4:	nop

0000000000002bc8 <set_bitfields@@Base>:
    2bc8:	and	w1, w1, #0xff
    2bcc:	cmp	w1, #0x49
    2bd0:	b.eq	2cd4 <set_bitfields@@Base+0x10c>  // b.none
    2bd4:	b.hi	2c38 <set_bitfields@@Base+0x70>  // b.pmore
    2bd8:	cmp	w1, #0x45
    2bdc:	b.eq	2ce4 <set_bitfields@@Base+0x11c>  // b.none
    2be0:	b.ls	2c14 <set_bitfields@@Base+0x4c>  // b.plast
    2be4:	cmp	w1, #0x47
    2be8:	b.eq	2cf4 <set_bitfields@@Base+0x12c>  // b.none
    2bec:	cmp	w1, #0x48
    2bf0:	b.ne	2bfc <set_bitfields@@Base+0x34>  // b.any
    2bf4:	strb	w2, [x0, #4]
    2bf8:	ret
    2bfc:	cmp	w1, #0x46
    2c00:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c04:	ldr	w1, [x0]
    2c08:	bfi	w1, w2, #15, #6
    2c0c:	str	w1, [x0]
    2c10:	ret
    2c14:	cmp	w1, #0x43
    2c18:	b.eq	2d04 <set_bitfields@@Base+0x13c>  // b.none
    2c1c:	b.ls	2c64 <set_bitfields@@Base+0x9c>  // b.plast
    2c20:	cmp	w1, #0x44
    2c24:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c28:	ldrh	w1, [x0]
    2c2c:	bfi	w1, w2, #6, #4
    2c30:	strh	w1, [x0]
    2c34:	ret
    2c38:	cmp	w1, #0x50
    2c3c:	b.eq	2d14 <set_bitfields@@Base+0x14c>  // b.none
    2c40:	b.ls	2c9c <set_bitfields@@Base+0xd4>  // b.plast
    2c44:	cmp	w1, #0x52
    2c48:	b.eq	2d24 <set_bitfields@@Base+0x15c>  // b.none
    2c4c:	cmp	w1, #0x53
    2c50:	b.ne	2c84 <set_bitfields@@Base+0xbc>  // b.any
    2c54:	ldrh	w1, [x0, #8]
    2c58:	bfi	w1, w2, #6, #7
    2c5c:	strh	w1, [x0, #8]
    2c60:	ret
    2c64:	cmp	w1, #0x41
    2c68:	b.eq	2d34 <set_bitfields@@Base+0x16c>  // b.none
    2c6c:	cmp	w1, #0x42
    2c70:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c74:	ldrb	w1, [x0]
    2c78:	bfi	w1, w2, #1, #2
    2c7c:	strb	w1, [x0]
    2c80:	ret
    2c84:	cmp	w1, #0x51
    2c88:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c8c:	ldrb	w1, [x0, #7]
    2c90:	bfi	w1, w2, #3, #5
    2c94:	strb	w1, [x0, #7]
    2c98:	ret
    2c9c:	cmp	w1, #0x4e
    2ca0:	b.eq	2d44 <set_bitfields@@Base+0x17c>  // b.none
    2ca4:	cmp	w1, #0x4f
    2ca8:	b.ne	2cbc <set_bitfields@@Base+0xf4>  // b.any
    2cac:	ldrb	w1, [x0, #6]
    2cb0:	bfi	w1, w2, #4, #3
    2cb4:	strb	w1, [x0, #6]
    2cb8:	ret
    2cbc:	cmp	w1, #0x4d
    2cc0:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2cc4:	ldrb	w1, [x0, #6]
    2cc8:	bfi	w1, w2, #1, #1
    2ccc:	strb	w1, [x0, #6]
    2cd0:	ret
    2cd4:	ldr	w1, [x0, #4]
    2cd8:	bfi	w1, w2, #8, #9
    2cdc:	str	w1, [x0, #4]
    2ce0:	ret
    2ce4:	ldrb	w1, [x0, #1]
    2ce8:	bfi	w1, w2, #2, #5
    2cec:	strb	w1, [x0, #1]
    2cf0:	ret
    2cf4:	ldrh	w1, [x0, #2]
    2cf8:	bfi	w1, w2, #5, #7
    2cfc:	strh	w1, [x0, #2]
    2d00:	ret
    2d04:	ldrb	w1, [x0]
    2d08:	bfi	w1, w2, #3, #3
    2d0c:	strb	w1, [x0]
    2d10:	ret
    2d14:	ldrh	w1, [x0, #6]
    2d18:	bfi	w1, w2, #7, #4
    2d1c:	strh	w1, [x0, #6]
    2d20:	ret
    2d24:	ldrb	w1, [x0, #8]
    2d28:	bfxil	w1, w2, #0, #6
    2d2c:	strb	w1, [x0, #8]
    2d30:	ret
    2d34:	ldrb	w1, [x0]
    2d38:	bfxil	w1, w2, #0, #1
    2d3c:	strb	w1, [x0]
    2d40:	ret
    2d44:	ldrb	w1, [x0, #6]
    2d48:	bfi	w1, w2, #2, #2
    2d4c:	strb	w1, [x0, #6]
    2d50:	ret
    2d54:	nop

0000000000002d58 <unpack_bitfields@@Base>:
    2d58:	and	w1, w1, #0xff
    2d5c:	cmp	w1, #0x49
    2d60:	b.eq	2e94 <unpack_bitfields@@Base+0x13c>  // b.none
    2d64:	b.hi	2dc0 <unpack_bitfields@@Base+0x68>  // b.pmore
    2d68:	cmp	w1, #0x45
    2d6c:	b.eq	2ea0 <unpack_bitfields@@Base+0x148>  // b.none
    2d70:	b.ls	2da0 <unpack_bitfields@@Base+0x48>  // b.plast
    2d74:	cmp	w1, #0x47
    2d78:	b.eq	2eac <unpack_bitfields@@Base+0x154>  // b.none
    2d7c:	cmp	w1, #0x48
    2d80:	b.ne	2d8c <unpack_bitfields@@Base+0x34>  // b.any
    2d84:	ldrsb	w0, [x0, #4]
    2d88:	ret
    2d8c:	cmp	w1, #0x46
    2d90:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2d94:	ldr	w0, [x0]
    2d98:	sbfx	x0, x0, #15, #6
    2d9c:	ret
    2da0:	cmp	w1, #0x43
    2da4:	b.eq	2e54 <unpack_bitfields@@Base+0xfc>  // b.none
    2da8:	b.ls	2de8 <unpack_bitfields@@Base+0x90>  // b.plast
    2dac:	cmp	w1, #0x44
    2db0:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2db4:	ldrh	w0, [x0]
    2db8:	sbfx	x0, x0, #6, #4
    2dbc:	ret
    2dc0:	cmp	w1, #0x50
    2dc4:	b.eq	2e60 <unpack_bitfields@@Base+0x108>  // b.none
    2dc8:	b.ls	2e18 <unpack_bitfields@@Base+0xc0>  // b.plast
    2dcc:	cmp	w1, #0x52
    2dd0:	b.eq	2e6c <unpack_bitfields@@Base+0x114>  // b.none
    2dd4:	cmp	w1, #0x53
    2dd8:	b.ne	2e04 <unpack_bitfields@@Base+0xac>  // b.any
    2ddc:	ldrh	w0, [x0, #8]
    2de0:	sbfx	x0, x0, #6, #7
    2de4:	ret
    2de8:	cmp	w1, #0x41
    2dec:	b.eq	2e78 <unpack_bitfields@@Base+0x120>  // b.none
    2df0:	cmp	w1, #0x42
    2df4:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2df8:	ldrb	w0, [x0]
    2dfc:	sbfx	x0, x0, #1, #2
    2e00:	ret
    2e04:	cmp	w1, #0x51
    2e08:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2e0c:	ldrb	w0, [x0, #7]
    2e10:	sbfx	x0, x0, #3, #5
    2e14:	ret
    2e18:	cmp	w1, #0x4e
    2e1c:	b.eq	2e88 <unpack_bitfields@@Base+0x130>  // b.none
    2e20:	cmp	w1, #0x4f
    2e24:	b.ne	2e34 <unpack_bitfields@@Base+0xdc>  // b.any
    2e28:	ldrb	w0, [x0, #6]
    2e2c:	sbfx	x0, x0, #4, #3
    2e30:	ret
    2e34:	cmp	w1, #0x4d
    2e38:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2e3c:	ldrb	w0, [x0, #6]
    2e40:	sbfx	x0, x0, #1, #1
    2e44:	sxtb	w0, w0
    2e48:	ret
    2e4c:	mov	w0, #0x3e7                 	// #999
    2e50:	ret
    2e54:	ldrb	w0, [x0]
    2e58:	sbfx	x0, x0, #3, #3
    2e5c:	ret
    2e60:	ldrh	w0, [x0, #6]
    2e64:	sbfx	x0, x0, #7, #4
    2e68:	ret
    2e6c:	ldrb	w0, [x0, #8]
    2e70:	sbfx	x0, x0, #0, #6
    2e74:	ret
    2e78:	ldrb	w0, [x0]
    2e7c:	sbfx	x0, x0, #0, #1
    2e80:	sxtb	w0, w0
    2e84:	ret
    2e88:	ldrb	w0, [x0, #6]
    2e8c:	sbfx	x0, x0, #2, #2
    2e90:	ret
    2e94:	ldr	w0, [x0, #4]
    2e98:	sbfx	x0, x0, #8, #9
    2e9c:	ret
    2ea0:	ldrb	w0, [x0, #1]
    2ea4:	sbfx	x0, x0, #2, #5
    2ea8:	ret
    2eac:	ldrh	w0, [x0, #2]
    2eb0:	sbfx	x0, x0, #5, #7
    2eb4:	ret

0000000000002eb8 <tf_b@@Base>:
    2eb8:	sxtb	w2, w0
    2ebc:	mov	w1, #0x5556                	// #21846
    2ec0:	movk	w1, #0x5555, lsl #16
    2ec4:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2ec8:	sxtb	x4, w0
    2ecc:	smull	x0, w2, w1
    2ed0:	ldr	x1, [x3, #4024]
    2ed4:	lsr	x0, x0, #32
    2ed8:	sub	w0, w0, w2, asr #31
    2edc:	str	x4, [x1]
    2ee0:	ret
    2ee4:	nop

0000000000002ee8 <tf_B@@Base>:
    2ee8:	and	w2, w0, #0xff
    2eec:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2ef0:	mov	w4, #0xaaab                	// #43691
    2ef4:	and	x3, x0, #0xff
    2ef8:	movk	w4, #0xaaaa, lsl #16
    2efc:	ldr	x1, [x1, #4032]
    2f00:	umull	x0, w2, w4
    2f04:	ubfx	x0, x0, #33, #8
    2f08:	str	x3, [x1]
    2f0c:	ret

0000000000002f10 <tf_h@@Base>:
    2f10:	sxth	w2, w0
    2f14:	mov	w1, #0x5556                	// #21846
    2f18:	movk	w1, #0x5555, lsl #16
    2f1c:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2f20:	sxth	x4, w0
    2f24:	smull	x0, w2, w1
    2f28:	ldr	x1, [x3, #4024]
    2f2c:	lsr	x0, x0, #32
    2f30:	sub	w0, w0, w2, asr #31
    2f34:	str	x4, [x1]
    2f38:	ret
    2f3c:	nop

0000000000002f40 <tf_H@@Base>:
    2f40:	and	w2, w0, #0xffff
    2f44:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2f48:	mov	w4, #0xaaab                	// #43691
    2f4c:	and	x3, x0, #0xffff
    2f50:	movk	w4, #0xaaaa, lsl #16
    2f54:	ldr	x1, [x1, #4032]
    2f58:	umull	x0, w2, w4
    2f5c:	ubfx	x0, x0, #33, #16
    2f60:	str	x3, [x1]
    2f64:	ret

0000000000002f68 <tf_i@@Base>:
    2f68:	mov	w1, #0x5556                	// #21846
    2f6c:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2f70:	movk	w1, #0x5555, lsl #16
    2f74:	sxtw	x3, w0
    2f78:	ldr	x2, [x2, #4024]
    2f7c:	smull	x1, w0, w1
    2f80:	lsr	x1, x1, #32
    2f84:	str	x3, [x2]
    2f88:	sub	w0, w1, w0, asr #31
    2f8c:	ret

0000000000002f90 <tf_I@@Base>:
    2f90:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2f94:	mov	w3, #0xaaab                	// #43691
    2f98:	movk	w3, #0xaaaa, lsl #16
    2f9c:	mov	w2, w0
    2fa0:	ldr	x1, [x1, #4032]
    2fa4:	umull	x0, w0, w3
    2fa8:	lsr	x0, x0, #33
    2fac:	str	x2, [x1]
    2fb0:	ret
    2fb4:	nop

0000000000002fb8 <tf_l@@Base>:
    2fb8:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2fbc:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    2fc0:	movk	x1, #0x5556
    2fc4:	ldr	x2, [x2, #4024]
    2fc8:	smulh	x1, x0, x1
    2fcc:	str	x0, [x2]
    2fd0:	sub	x0, x1, x0, asr #63
    2fd4:	ret

0000000000002fd8 <tf_L@@Base>:
    2fd8:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2fdc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2fe0:	movk	x1, #0xaaab
    2fe4:	ldr	x2, [x2, #4032]
    2fe8:	umulh	x1, x0, x1
    2fec:	str	x0, [x2]
    2ff0:	lsr	x0, x1, #1
    2ff4:	ret

0000000000002ff8 <tf_q@@Base>:
    2ff8:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    2ffc:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    3000:	movk	x1, #0x5556
    3004:	ldr	x2, [x2, #4024]
    3008:	smulh	x1, x0, x1
    300c:	str	x0, [x2]
    3010:	sub	x0, x1, x0, asr #63
    3014:	ret

0000000000003018 <tf_Q@@Base>:
    3018:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    301c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3020:	movk	x1, #0xaaab
    3024:	ldr	x2, [x2, #4032]
    3028:	umulh	x1, x0, x1
    302c:	str	x0, [x2]
    3030:	lsr	x0, x1, #1
    3034:	ret

0000000000003038 <tf_f@@Base>:
    3038:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    303c:	fcvtzs	x1, s0
    3040:	fmov	s1, #3.000000000000000000e+00
    3044:	ldr	x0, [x0, #4024]
    3048:	fdiv	s0, s0, s1
    304c:	str	x1, [x0]
    3050:	ret
    3054:	nop

0000000000003058 <tf_d@@Base>:
    3058:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    305c:	fcvtzs	d1, d0
    3060:	fmov	d2, #3.000000000000000000e+00
    3064:	ldr	x0, [x0, #4024]
    3068:	fdiv	d0, d0, d2
    306c:	str	d1, [x0]
    3070:	ret
    3074:	nop

0000000000003078 <tf_D@@Base>:
    3078:	stp	x29, x30, [sp, #-48]!
    307c:	mov	x29, sp
    3080:	str	x19, [sp, #16]
    3084:	adrp	x19, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3088:	str	q0, [sp, #32]
    308c:	bl	5140 <PyInit__ctypes_test@@Base+0x1c50>
    3090:	ldr	x19, [x19, #4024]
    3094:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    3098:	add	x1, x1, #0x6b0
    309c:	ldr	q2, [sp, #32]
    30a0:	str	x0, [x19]
    30a4:	ldr	q1, [x1]
    30a8:	mov	v0.16b, v2.16b
    30ac:	bl	4028 <PyInit__ctypes_test@@Base+0xb38>
    30b0:	ldr	x19, [sp, #16]
    30b4:	ldp	x29, x30, [sp], #48
    30b8:	ret
    30bc:	nop

00000000000030c0 <tf_bb@@Base>:
    30c0:	sxtb	w0, w1
    30c4:	mov	w2, #0x5556                	// #21846
    30c8:	movk	w2, #0x5555, lsl #16
    30cc:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    30d0:	sxtb	x1, w1
    30d4:	smull	x2, w0, w2
    30d8:	ldr	x3, [x3, #4024]
    30dc:	lsr	x2, x2, #32
    30e0:	sub	w0, w2, w0, asr #31
    30e4:	str	x1, [x3]
    30e8:	ret
    30ec:	nop

00000000000030f0 <tf_bB@@Base>:
    30f0:	and	w0, w1, #0xff
    30f4:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    30f8:	mov	w3, #0xaaab                	// #43691
    30fc:	and	x1, x1, #0xff
    3100:	movk	w3, #0xaaaa, lsl #16
    3104:	ldr	x2, [x2, #4032]
    3108:	umull	x0, w0, w3
    310c:	ubfx	x0, x0, #33, #8
    3110:	str	x1, [x2]
    3114:	ret

0000000000003118 <tf_bh@@Base>:
    3118:	sxth	w0, w1
    311c:	mov	w2, #0x5556                	// #21846
    3120:	movk	w2, #0x5555, lsl #16
    3124:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3128:	sxth	x1, w1
    312c:	smull	x2, w0, w2
    3130:	ldr	x3, [x3, #4024]
    3134:	lsr	x2, x2, #32
    3138:	sub	w0, w2, w0, asr #31
    313c:	str	x1, [x3]
    3140:	ret
    3144:	nop

0000000000003148 <tf_bH@@Base>:
    3148:	and	w0, w1, #0xffff
    314c:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3150:	mov	w3, #0xaaab                	// #43691
    3154:	and	x1, x1, #0xffff
    3158:	movk	w3, #0xaaaa, lsl #16
    315c:	ldr	x2, [x2, #4032]
    3160:	umull	x0, w0, w3
    3164:	ubfx	x0, x0, #33, #16
    3168:	str	x1, [x2]
    316c:	ret

0000000000003170 <tf_bi@@Base>:
    3170:	mov	w0, #0x5556                	// #21846
    3174:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3178:	movk	w0, #0x5555, lsl #16
    317c:	sxtw	x3, w1
    3180:	ldr	x2, [x2, #4024]
    3184:	smull	x0, w1, w0
    3188:	lsr	x0, x0, #32
    318c:	str	x3, [x2]
    3190:	sub	w0, w0, w1, asr #31
    3194:	ret

0000000000003198 <tf_bI@@Base>:
    3198:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    319c:	mov	w0, #0xaaab                	// #43691
    31a0:	movk	w0, #0xaaaa, lsl #16
    31a4:	mov	w3, w1
    31a8:	ldr	x2, [x2, #4032]
    31ac:	umull	x0, w1, w0
    31b0:	lsr	x0, x0, #33
    31b4:	str	x3, [x2]
    31b8:	ret
    31bc:	nop

00000000000031c0 <tf_bl@@Base>:
    31c0:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    31c4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    31c8:	movk	x0, #0x5556
    31cc:	ldr	x2, [x2, #4024]
    31d0:	smulh	x0, x1, x0
    31d4:	sub	x0, x0, x1, asr #63
    31d8:	str	x1, [x2]
    31dc:	ret

00000000000031e0 <tf_bL@@Base>:
    31e0:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    31e4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    31e8:	movk	x0, #0xaaab
    31ec:	ldr	x2, [x2, #4032]
    31f0:	umulh	x0, x1, x0
    31f4:	lsr	x0, x0, #1
    31f8:	str	x1, [x2]
    31fc:	ret

0000000000003200 <tf_bq@@Base>:
    3200:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3204:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    3208:	movk	x0, #0x5556
    320c:	ldr	x2, [x2, #4024]
    3210:	smulh	x0, x1, x0
    3214:	sub	x0, x0, x1, asr #63
    3218:	str	x1, [x2]
    321c:	ret

0000000000003220 <tf_bQ@@Base>:
    3220:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3224:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3228:	movk	x0, #0xaaab
    322c:	ldr	x2, [x2, #4032]
    3230:	umulh	x0, x1, x0
    3234:	lsr	x0, x0, #1
    3238:	str	x1, [x2]
    323c:	ret

0000000000003240 <tf_bf@@Base>:
    3240:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3244:	fcvtzs	x1, s0
    3248:	fmov	s1, #3.000000000000000000e+00
    324c:	ldr	x0, [x0, #4024]
    3250:	fdiv	s0, s0, s1
    3254:	str	x1, [x0]
    3258:	ret
    325c:	nop

0000000000003260 <tf_bd@@Base>:
    3260:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3264:	fcvtzs	d1, d0
    3268:	fmov	d2, #3.000000000000000000e+00
    326c:	ldr	x0, [x0, #4024]
    3270:	fdiv	d0, d0, d2
    3274:	str	d1, [x0]
    3278:	ret
    327c:	nop

0000000000003280 <tf_bD@@Base>:
    3280:	stp	x29, x30, [sp, #-48]!
    3284:	mov	x29, sp
    3288:	str	x19, [sp, #16]
    328c:	adrp	x19, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    3290:	str	q0, [sp, #32]
    3294:	bl	5140 <PyInit__ctypes_test@@Base+0x1c50>
    3298:	ldr	x19, [x19, #4024]
    329c:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    32a0:	add	x1, x1, #0x6b0
    32a4:	ldr	q2, [sp, #32]
    32a8:	str	x0, [x19]
    32ac:	ldr	q1, [x1]
    32b0:	mov	v0.16b, v2.16b
    32b4:	bl	4028 <PyInit__ctypes_test@@Base+0xb38>
    32b8:	ldr	x19, [sp, #16]
    32bc:	ldp	x29, x30, [sp], #48
    32c0:	ret
    32c4:	nop

00000000000032c8 <tv_i@@Base>:
    32c8:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    32cc:	sxtw	x0, w0
    32d0:	ldr	x1, [x1, #4024]
    32d4:	str	x0, [x1]
    32d8:	ret
    32dc:	nop

00000000000032e0 <PointInRect@@Base>:
    32e0:	mov	x3, x0
    32e4:	ldr	x0, [x0]
    32e8:	cmp	x0, x1
    32ec:	b.gt	331c <PointInRect@@Base+0x3c>
    32f0:	ldr	x4, [x3, #16]
    32f4:	mov	w0, #0x0                   	// #0
    32f8:	cmp	x4, x1
    32fc:	b.lt	3318 <PointInRect@@Base+0x38>  // b.tstop
    3300:	ldr	x1, [x3, #8]
    3304:	cmp	x1, x2
    3308:	b.gt	3318 <PointInRect@@Base+0x38>
    330c:	ldr	x0, [x3, #24]
    3310:	cmp	x0, x2
    3314:	cset	w0, ge  // ge = tcont
    3318:	ret
    331c:	mov	w0, #0x0                   	// #0
    3320:	ret
    3324:	nop

0000000000003328 <ReturnRect@@Base>:
    3328:	adrp	x7, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    332c:	ldr	x13, [sp, #16]
    3330:	ldr	x11, [x7, #3968]
    3334:	ldr	x9, [x5]
    3338:	ldr	x12, [x1]
    333c:	ldr	x7, [x6]
    3340:	add	x10, x12, x9
    3344:	ldr	x14, [x13]
    3348:	ldr	x9, [x11]
    334c:	add	x7, x7, x14
    3350:	ldr	x11, [x2]
    3354:	add	x7, x7, x10
    3358:	add	x9, x9, x9, lsl #2
    335c:	add	x7, x7, x11
    3360:	cmp	x7, x9
    3364:	ldp	x11, x10, [sp]
    3368:	b.eq	3388 <ReturnRect@@Base+0x60>  // b.none
    336c:	mov	x0, #0x64                  	// #100
    3370:	str	x0, [x1]
    3374:	ldp	x2, x3, [x1, #16]
    3378:	stp	x2, x3, [x8, #16]
    337c:	ldp	x0, x1, [x1]
    3380:	stp	x0, x1, [x8]
    3384:	ret
    3388:	adrp	x7, 16000 <PyInit__ctypes_test@@Base+0x12b10>
    338c:	ldr	x14, [x13, #16]
    3390:	ldr	x6, [x6, #16]
    3394:	ldr	x7, [x7, #3976]
    3398:	add	x6, x6, x14
    339c:	ldr	x9, [x5, #16]
    33a0:	ldr	x14, [x1, #16]
    33a4:	ldr	x7, [x7]
    33a8:	add	x9, x9, x14
    33ac:	ldr	x14, [x2, #16]
    33b0:	add	x2, x6, x9
    33b4:	add	x7, x7, x7, lsl #2
    33b8:	add	x2, x2, x14
    33bc:	cmp	x2, x7
    33c0:	b.eq	33e0 <ReturnRect@@Base+0xb8>  // b.none
    33c4:	mov	x0, #0x64                  	// #100
    33c8:	str	x0, [x1, #16]
    33cc:	ldp	x2, x3, [x1]
    33d0:	stp	x2, x3, [x8]
    33d4:	ldp	x0, x1, [x1, #16]
    33d8:	stp	x0, x1, [x8, #16]
    33dc:	ret
    33e0:	cmp	x3, x11
    33e4:	mov	x2, #0xffffffffffffff9c    	// #-100
    33e8:	csel	x12, x12, x2, eq  // eq = none
    33ec:	cmp	x4, x10
    33f0:	mov	x2, #0xffffffffffffff38    	// #-200
    33f4:	csel	x12, x12, x2, eq  // eq = none
    33f8:	cmp	w0, #0x1
    33fc:	b.eq	3434 <ReturnRect@@Base+0x10c>  // b.none
    3400:	cmp	w0, #0x2
    3404:	b.eq	3420 <ReturnRect@@Base+0xf8>  // b.none
    3408:	str	x12, [x1]
    340c:	ldp	x2, x3, [x1, #16]
    3410:	stp	x2, x3, [x8, #16]
    3414:	ldp	x0, x1, [x1]
    3418:	stp	x0, x1, [x8]
    341c:	ret
    3420:	ldp	x0, x1, [x13]
    3424:	stp	x0, x1, [x8]
    3428:	ldp	x0, x1, [x13, #16]
    342c:	stp	x0, x1, [x8, #16]
    3430:	ret
    3434:	ldp	x0, x1, [x5]
    3438:	stp	x0, x1, [x8]
    343c:	ldp	x0, x1, [x5, #16]
    3440:	stp	x0, x1, [x8, #16]
    3444:	ret

0000000000003448 <ret_2h_func@@Base>:
    3448:	mov	w1, w0
    344c:	mov	w3, #0x0                   	// #0
    3450:	sbfx	x0, x1, #16, #16
    3454:	lsl	w1, w1, #1
    3458:	ubfiz	w2, w0, #1, #15
    345c:	bfxil	w3, w1, #0, #16
    3460:	add	w1, w2, w0
    3464:	mov	w0, w3
    3468:	bfi	w0, w1, #16, #16
    346c:	ret

0000000000003470 <ret_8i_func@@Base>:
    3470:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    3474:	ldp	q1, q0, [x0]
    3478:	ldr	q3, [x1, #1728]
    347c:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1b10>
    3480:	ldr	q2, [x1, #1744]
    3484:	mul	v1.4s, v1.4s, v3.4s
    3488:	mul	v0.4s, v0.4s, v2.4s
    348c:	stp	q1, q0, [x8]
    3490:	ret
    3494:	nop

0000000000003498 <GetRectangle@@Base>:
    3498:	cbz	w0, 34c8 <GetRectangle@@Base+0x30>
    349c:	add	w5, w0, #0x1
    34a0:	add	w4, w0, #0x2
    34a4:	add	w3, w0, #0x3
    34a8:	sxtw	x2, w0
    34ac:	sxtw	x5, w5
    34b0:	sxtw	x4, w4
    34b4:	sxtw	x3, w3
    34b8:	mov	w0, #0x1                   	// #1
    34bc:	stp	x2, x5, [x1]
    34c0:	stp	x4, x3, [x1, #16]
    34c4:	ret
    34c8:	mov	w0, #0x0                   	// #0
    34cc:	ret

00000000000034d0 <TwoOutArgs@@Base>:
    34d0:	ldr	w4, [x1]
    34d4:	add	w4, w4, w0
    34d8:	str	w4, [x1]
    34dc:	ldr	w0, [x3]
    34e0:	add	w0, w0, w2
    34e4:	str	w0, [x3]
    34e8:	ret
    34ec:	nop

00000000000034f0 <PyInit__ctypes_test@@Base>:
    34f0:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13b10>
    34f4:	mov	w1, #0x3f5                 	// #1013
    34f8:	add	x0, x0, #0x128
    34fc:	b	2130 <PyModule_Create2@plt>
    3500:	stp	x29, x30, [sp, #-48]!
    3504:	mov	x29, sp
    3508:	str	q0, [sp, #16]
    350c:	str	q1, [sp, #32]
    3510:	ldp	x4, x1, [sp, #16]
    3514:	ldp	x0, x3, [sp, #32]
    3518:	mrs	x15, fpcr
    351c:	mov	x11, x0
    3520:	ubfiz	x0, x3, #3, #48
    3524:	lsr	x6, x1, #63
    3528:	lsr	x5, x3, #63
    352c:	ubfiz	x2, x1, #3, #48
    3530:	orr	x9, x0, x11, lsr #61
    3534:	ubfx	x7, x1, #48, #15
    3538:	ubfx	x0, x3, #48, #15
    353c:	mov	x12, x6
    3540:	and	w10, w6, #0xff
    3544:	mov	x16, x6
    3548:	cmp	x6, x5
    354c:	orr	x2, x2, x4, lsr #61
    3550:	and	w6, w5, #0xff
    3554:	mov	x1, x7
    3558:	lsl	x8, x4, #3
    355c:	mov	x3, x0
    3560:	lsl	x13, x11, #3
    3564:	b.eq	3710 <PyInit__ctypes_test@@Base+0x220>  // b.none
    3568:	sub	w0, w7, w0
    356c:	cmp	w0, #0x0
    3570:	b.le	36bc <PyInit__ctypes_test@@Base+0x1cc>
    3574:	cbz	x3, 3770 <PyInit__ctypes_test@@Base+0x280>
    3578:	orr	x9, x9, #0x8000000000000
    357c:	mov	x3, #0x7fff                	// #32767
    3580:	cmp	x1, x3
    3584:	b.eq	3974 <PyInit__ctypes_test@@Base+0x484>  // b.none
    3588:	cmp	w0, #0x74
    358c:	b.gt	39f8 <PyInit__ctypes_test@@Base+0x508>
    3590:	cmp	w0, #0x3f
    3594:	b.gt	3b58 <PyInit__ctypes_test@@Base+0x668>
    3598:	mov	w3, #0x40                  	// #64
    359c:	sub	w3, w3, w0
    35a0:	lsr	x5, x13, x0
    35a4:	lsl	x13, x13, x3
    35a8:	cmp	x13, #0x0
    35ac:	cset	x4, ne  // ne = any
    35b0:	lsl	x3, x9, x3
    35b4:	orr	x3, x3, x5
    35b8:	lsr	x0, x9, x0
    35bc:	orr	x3, x3, x4
    35c0:	sub	x2, x2, x0
    35c4:	subs	x8, x8, x3
    35c8:	sbc	x2, x2, xzr
    35cc:	and	x3, x2, #0x7ffffffffffff
    35d0:	tbz	x2, #51, 37b0 <PyInit__ctypes_test@@Base+0x2c0>
    35d4:	cbz	x3, 39dc <PyInit__ctypes_test@@Base+0x4ec>
    35d8:	clz	x0, x3
    35dc:	sub	w0, w0, #0xc
    35e0:	neg	w2, w0
    35e4:	lsl	x4, x3, x0
    35e8:	lsl	x3, x8, x0
    35ec:	lsr	x8, x8, x2
    35f0:	orr	x2, x8, x4
    35f4:	cmp	x1, w0, sxtw
    35f8:	sxtw	x4, w0
    35fc:	b.gt	39bc <PyInit__ctypes_test@@Base+0x4cc>
    3600:	sub	w1, w0, w1
    3604:	add	w0, w1, #0x1
    3608:	cmp	w0, #0x3f
    360c:	b.gt	3b20 <PyInit__ctypes_test@@Base+0x630>
    3610:	mov	w1, #0x40                  	// #64
    3614:	sub	w1, w1, w0
    3618:	lsr	x4, x3, x0
    361c:	lsl	x3, x3, x1
    3620:	cmp	x3, #0x0
    3624:	lsl	x8, x2, x1
    3628:	cset	x1, ne  // ne = any
    362c:	orr	x8, x8, x4
    3630:	lsr	x2, x2, x0
    3634:	orr	x8, x8, x1
    3638:	orr	x5, x8, x2
    363c:	cbz	x5, 37c4 <PyInit__ctypes_test@@Base+0x2d4>
    3640:	and	x3, x8, #0x7
    3644:	mov	x1, #0x0                   	// #0
    3648:	mov	w7, #0x1                   	// #1
    364c:	cbz	x3, 3a08 <PyInit__ctypes_test@@Base+0x518>
    3650:	and	x3, x15, #0xc00000
    3654:	cmp	x3, #0x400, lsl #12
    3658:	b.eq	394c <PyInit__ctypes_test@@Base+0x45c>  // b.none
    365c:	cmp	x3, #0x800, lsl #12
    3660:	b.eq	392c <PyInit__ctypes_test@@Base+0x43c>  // b.none
    3664:	cbz	x3, 3958 <PyInit__ctypes_test@@Base+0x468>
    3668:	and	x3, x2, #0x8000000000000
    366c:	mov	w0, #0x10                  	// #16
    3670:	cbz	w7, 3678 <PyInit__ctypes_test@@Base+0x188>
    3674:	orr	w0, w0, #0x8
    3678:	cbz	x3, 3990 <PyInit__ctypes_test@@Base+0x4a0>
    367c:	add	x1, x1, #0x1
    3680:	mov	x3, #0x7fff                	// #32767
    3684:	cmp	x1, x3
    3688:	b.eq	3874 <PyInit__ctypes_test@@Base+0x384>  // b.none
    368c:	ubfx	x5, x2, #3, #48
    3690:	extr	x8, x2, x8, #3
    3694:	and	w1, w1, #0x7fff
    3698:	mov	x7, #0x0                   	// #0
    369c:	orr	w1, w1, w10, lsl #15
    36a0:	bfxil	x7, x5, #0, #48
    36a4:	fmov	d0, x8
    36a8:	bfi	x7, x1, #48, #16
    36ac:	fmov	v0.d[1], x7
    36b0:	cbnz	w0, 38d0 <PyInit__ctypes_test@@Base+0x3e0>
    36b4:	ldp	x29, x30, [sp], #48
    36b8:	ret
    36bc:	mov	x14, x5
    36c0:	b.eq	37dc <PyInit__ctypes_test@@Base+0x2ec>  // b.none
    36c4:	cbnz	x7, 3a60 <PyInit__ctypes_test@@Base+0x570>
    36c8:	orr	x1, x2, x8
    36cc:	cbz	x1, 378c <PyInit__ctypes_test@@Base+0x29c>
    36d0:	cmn	w0, #0x1
    36d4:	b.eq	3e7c <PyInit__ctypes_test@@Base+0x98c>  // b.none
    36d8:	mov	x1, #0x7fff                	// #32767
    36dc:	mvn	w0, w0
    36e0:	cmp	x3, x1
    36e4:	b.ne	3a74 <PyInit__ctypes_test@@Base+0x584>  // b.any
    36e8:	orr	x0, x9, x13
    36ec:	cbnz	x0, 3dd4 <PyInit__ctypes_test@@Base+0x8e4>
    36f0:	mov	x16, x14
    36f4:	nop
    36f8:	mov	x6, #0x0                   	// #0
    36fc:	fmov	d0, x6
    3700:	lsl	x16, x16, #63
    3704:	orr	x7, x16, #0x7fff000000000000
    3708:	fmov	v0.d[1], x7
    370c:	b	36b4 <PyInit__ctypes_test@@Base+0x1c4>
    3710:	sub	w7, w7, w0
    3714:	cmp	w7, #0x0
    3718:	b.le	38e4 <PyInit__ctypes_test@@Base+0x3f4>
    371c:	cbz	x0, 3824 <PyInit__ctypes_test@@Base+0x334>
    3720:	orr	x9, x9, #0x8000000000000
    3724:	mov	x0, #0x7fff                	// #32767
    3728:	cmp	x1, x0
    372c:	b.eq	3974 <PyInit__ctypes_test@@Base+0x484>  // b.none
    3730:	cmp	w7, #0x74
    3734:	b.gt	3b08 <PyInit__ctypes_test@@Base+0x618>
    3738:	cmp	w7, #0x3f
    373c:	b.gt	3c08 <PyInit__ctypes_test@@Base+0x718>
    3740:	mov	w0, #0x40                  	// #64
    3744:	sub	w0, w0, w7
    3748:	lsr	x5, x13, x7
    374c:	lsl	x13, x13, x0
    3750:	cmp	x13, #0x0
    3754:	lsl	x3, x9, x0
    3758:	cset	x4, ne  // ne = any
    375c:	orr	x3, x3, x5
    3760:	lsr	x0, x9, x7
    3764:	orr	x3, x3, x4
    3768:	add	x2, x2, x0
    376c:	b	3b14 <PyInit__ctypes_test@@Base+0x624>
    3770:	orr	x3, x9, x13
    3774:	cbz	x3, 3ae4 <PyInit__ctypes_test@@Base+0x5f4>
    3778:	subs	w0, w0, #0x1
    377c:	b.ne	357c <PyInit__ctypes_test@@Base+0x8c>  // b.any
    3780:	subs	x8, x8, x13
    3784:	sbc	x2, x2, x9
    3788:	b	35cc <PyInit__ctypes_test@@Base+0xdc>
    378c:	mov	x0, #0x7fff                	// #32767
    3790:	cmp	x3, x0
    3794:	b.eq	3ec8 <PyInit__ctypes_test@@Base+0x9d8>  // b.none
    3798:	mov	w10, w6
    379c:	mov	x2, x9
    37a0:	mov	x8, x13
    37a4:	mov	x1, x3
    37a8:	mov	x12, x5
    37ac:	nop
    37b0:	orr	x5, x8, x2
    37b4:	and	x3, x8, #0x7
    37b8:	mov	w7, #0x0                   	// #0
    37bc:	cbnz	x1, 364c <PyInit__ctypes_test@@Base+0x15c>
    37c0:	cbnz	x5, 3640 <PyInit__ctypes_test@@Base+0x150>
    37c4:	mov	x8, #0x0                   	// #0
    37c8:	mov	x1, #0x0                   	// #0
    37cc:	mov	w0, #0x0                   	// #0
    37d0:	and	x5, x5, #0xffffffffffff
    37d4:	and	w1, w1, #0x7fff
    37d8:	b	3698 <PyInit__ctypes_test@@Base+0x1a8>
    37dc:	add	x5, x7, #0x1
    37e0:	tst	x5, #0x7ffe
    37e4:	b.ne	3ab4 <PyInit__ctypes_test@@Base+0x5c4>  // b.any
    37e8:	orr	x7, x2, x8
    37ec:	orr	x5, x9, x13
    37f0:	cbnz	x1, 3c74 <PyInit__ctypes_test@@Base+0x784>
    37f4:	cbz	x7, 3d1c <PyInit__ctypes_test@@Base+0x82c>
    37f8:	cbz	x5, 3d30 <PyInit__ctypes_test@@Base+0x840>
    37fc:	subs	x4, x8, x13
    3800:	cmp	x8, x13
    3804:	sbc	x3, x2, x9
    3808:	tbz	x3, #51, 3efc <PyInit__ctypes_test@@Base+0xa0c>
    380c:	subs	x8, x13, x8
    3810:	mov	w10, w6
    3814:	sbc	x2, x9, x2
    3818:	mov	x12, x14
    381c:	orr	x5, x8, x2
    3820:	b	363c <PyInit__ctypes_test@@Base+0x14c>
    3824:	orr	x0, x9, x13
    3828:	cbz	x0, 3cfc <PyInit__ctypes_test@@Base+0x80c>
    382c:	subs	w7, w7, #0x1
    3830:	b.ne	3724 <PyInit__ctypes_test@@Base+0x234>  // b.any
    3834:	adds	x8, x8, x13
    3838:	adc	x2, x9, x2
    383c:	nop
    3840:	tbz	x2, #51, 37b0 <PyInit__ctypes_test@@Base+0x2c0>
    3844:	add	x1, x1, #0x1
    3848:	mov	x0, #0x7fff                	// #32767
    384c:	cmp	x1, x0
    3850:	b.eq	3d3c <PyInit__ctypes_test@@Base+0x84c>  // b.none
    3854:	and	x0, x8, #0x1
    3858:	and	x3, x2, #0xfff7ffffffffffff
    385c:	orr	x8, x0, x8, lsr #1
    3860:	mov	w7, #0x0                   	// #0
    3864:	orr	x8, x8, x2, lsl #63
    3868:	lsr	x2, x3, #1
    386c:	and	x3, x8, #0x7
    3870:	b	364c <PyInit__ctypes_test@@Base+0x15c>
    3874:	and	x3, x15, #0xc00000
    3878:	cbz	x3, 38b0 <PyInit__ctypes_test@@Base+0x3c0>
    387c:	cmp	x3, #0x400, lsl #12
    3880:	b.eq	38a8 <PyInit__ctypes_test@@Base+0x3b8>  // b.none
    3884:	cmp	x3, #0x800, lsl #12
    3888:	csel	w12, w12, wzr, eq  // eq = none
    388c:	cbnz	w12, 38b0 <PyInit__ctypes_test@@Base+0x3c0>
    3890:	mov	w1, #0x14                  	// #20
    3894:	mov	x8, #0xffffffffffffffff    	// #-1
    3898:	orr	w0, w0, w1
    389c:	mov	x5, #0x1fffffffffffffff    	// #2305843009213693951
    38a0:	mov	x1, #0x7ffe                	// #32766
    38a4:	b	37d0 <PyInit__ctypes_test@@Base+0x2e0>
    38a8:	cbnz	x12, 3890 <PyInit__ctypes_test@@Base+0x3a0>
    38ac:	nop
    38b0:	mov	w1, #0x14                  	// #20
    38b4:	and	x16, x10, #0xff
    38b8:	orr	w0, w0, w1
    38bc:	mov	x6, #0x0                   	// #0
    38c0:	fmov	d0, x6
    38c4:	lsl	x16, x16, #63
    38c8:	orr	x7, x16, #0x7fff000000000000
    38cc:	fmov	v0.d[1], x7
    38d0:	str	q0, [sp, #16]
    38d4:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    38d8:	ldr	q0, [sp, #16]
    38dc:	ldp	x29, x30, [sp], #48
    38e0:	ret
    38e4:	b.eq	3a24 <PyInit__ctypes_test@@Base+0x534>  // b.none
    38e8:	cbnz	x1, 3ba8 <PyInit__ctypes_test@@Base+0x6b8>
    38ec:	orr	x0, x2, x8
    38f0:	cbz	x0, 3e14 <PyInit__ctypes_test@@Base+0x924>
    38f4:	cmn	w7, #0x1
    38f8:	b.eq	3f74 <PyInit__ctypes_test@@Base+0xa84>  // b.none
    38fc:	mov	x0, #0x7fff                	// #32767
    3900:	mvn	w7, w7
    3904:	cmp	x3, x0
    3908:	b.ne	3bbc <PyInit__ctypes_test@@Base+0x6cc>  // b.any
    390c:	orr	x0, x9, x13
    3910:	cbz	x0, 36f8 <PyInit__ctypes_test@@Base+0x208>
    3914:	lsr	x7, x9, #50
    3918:	mov	x8, x13
    391c:	eor	x7, x7, #0x1
    3920:	mov	x2, x9
    3924:	and	w7, w7, #0x1
    3928:	b	3988 <PyInit__ctypes_test@@Base+0x498>
    392c:	mov	w0, #0x10                  	// #16
    3930:	cbz	x12, 393c <PyInit__ctypes_test@@Base+0x44c>
    3934:	adds	x8, x8, #0x8
    3938:	cinc	x2, x2, cs  // cs = hs, nlast
    393c:	and	x3, x2, #0x8000000000000
    3940:	cbz	w7, 3678 <PyInit__ctypes_test@@Base+0x188>
    3944:	orr	w0, w0, #0x8
    3948:	b	3678 <PyInit__ctypes_test@@Base+0x188>
    394c:	mov	w0, #0x10                  	// #16
    3950:	cbnz	x12, 393c <PyInit__ctypes_test@@Base+0x44c>
    3954:	b	3934 <PyInit__ctypes_test@@Base+0x444>
    3958:	and	x3, x8, #0xf
    395c:	mov	w0, #0x10                  	// #16
    3960:	cmp	x3, #0x4
    3964:	b.eq	393c <PyInit__ctypes_test@@Base+0x44c>  // b.none
    3968:	adds	x8, x8, #0x4
    396c:	cinc	x2, x2, cs  // cs = hs, nlast
    3970:	b	393c <PyInit__ctypes_test@@Base+0x44c>
    3974:	orr	x0, x2, x8
    3978:	cbz	x0, 36f8 <PyInit__ctypes_test@@Base+0x208>
    397c:	lsr	x7, x2, #50
    3980:	eor	x7, x7, #0x1
    3984:	and	w7, w7, #0x1
    3988:	mov	w0, w7
    398c:	mov	x1, #0x7fff                	// #32767
    3990:	lsr	x5, x2, #3
    3994:	extr	x8, x2, x8, #3
    3998:	mov	x2, #0x7fff                	// #32767
    399c:	cmp	x1, x2
    39a0:	b.ne	37d0 <PyInit__ctypes_test@@Base+0x2e0>  // b.any
    39a4:	orr	x1, x5, x8
    39a8:	cbz	x1, 4014 <PyInit__ctypes_test@@Base+0xb24>
    39ac:	orr	x5, x5, #0x800000000000
    39b0:	mov	w1, #0x7fff                	// #32767
    39b4:	and	x5, x5, #0xffffffffffff
    39b8:	b	3698 <PyInit__ctypes_test@@Base+0x1a8>
    39bc:	mov	x8, x3
    39c0:	and	x2, x2, #0xfff7ffffffffffff
    39c4:	sub	x1, x1, x4
    39c8:	orr	x5, x8, x2
    39cc:	and	x3, x8, #0x7
    39d0:	mov	w7, #0x0                   	// #0
    39d4:	cbz	x1, 37c0 <PyInit__ctypes_test@@Base+0x2d0>
    39d8:	b	364c <PyInit__ctypes_test@@Base+0x15c>
    39dc:	clz	x2, x8
    39e0:	add	w0, w2, #0x34
    39e4:	cmp	w0, #0x3f
    39e8:	b.le	35e0 <PyInit__ctypes_test@@Base+0xf0>
    39ec:	sub	w2, w2, #0xc
    39f0:	lsl	x2, x8, x2
    39f4:	b	35f4 <PyInit__ctypes_test@@Base+0x104>
    39f8:	orr	x0, x9, x13
    39fc:	cmp	x0, #0x0
    3a00:	cset	x3, ne  // ne = any
    3a04:	b	35c4 <PyInit__ctypes_test@@Base+0xd4>
    3a08:	and	x3, x2, #0x8000000000000
    3a0c:	mov	w0, #0x0                   	// #0
    3a10:	cbz	w7, 3678 <PyInit__ctypes_test@@Base+0x188>
    3a14:	mov	w0, #0x0                   	// #0
    3a18:	tbz	w15, #11, 3678 <PyInit__ctypes_test@@Base+0x188>
    3a1c:	orr	w0, w0, #0x8
    3a20:	b	3678 <PyInit__ctypes_test@@Base+0x188>
    3a24:	add	x0, x1, #0x1
    3a28:	tst	x0, #0x7ffe
    3a2c:	b.ne	3c34 <PyInit__ctypes_test@@Base+0x744>  // b.any
    3a30:	orr	x14, x2, x8
    3a34:	cbnz	x1, 3df0 <PyInit__ctypes_test@@Base+0x900>
    3a38:	orr	x5, x9, x13
    3a3c:	cbz	x14, 3e44 <PyInit__ctypes_test@@Base+0x954>
    3a40:	cbz	x5, 3d30 <PyInit__ctypes_test@@Base+0x840>
    3a44:	adds	x8, x8, x13
    3a48:	adc	x2, x9, x2
    3a4c:	tbz	x2, #51, 381c <PyInit__ctypes_test@@Base+0x32c>
    3a50:	and	x2, x2, #0xfff7ffffffffffff
    3a54:	and	x3, x8, #0x7
    3a58:	mov	x1, #0x1                   	// #1
    3a5c:	b	364c <PyInit__ctypes_test@@Base+0x15c>
    3a60:	mov	x1, #0x7fff                	// #32767
    3a64:	neg	w0, w0
    3a68:	orr	x2, x2, #0x8000000000000
    3a6c:	cmp	x3, x1
    3a70:	b.eq	36e8 <PyInit__ctypes_test@@Base+0x1f8>  // b.none
    3a74:	cmp	w0, #0x74
    3a78:	b.gt	3b84 <PyInit__ctypes_test@@Base+0x694>
    3a7c:	cmp	w0, #0x3f
    3a80:	b.gt	3da0 <PyInit__ctypes_test@@Base+0x8b0>
    3a84:	mov	w1, #0x40                  	// #64
    3a88:	sub	w1, w1, w0
    3a8c:	lsr	x4, x8, x0
    3a90:	lsl	x8, x8, x1
    3a94:	cmp	x8, #0x0
    3a98:	lsl	x8, x2, x1
    3a9c:	cset	x1, ne  // ne = any
    3aa0:	orr	x8, x8, x4
    3aa4:	lsr	x0, x2, x0
    3aa8:	orr	x8, x8, x1
    3aac:	sub	x9, x9, x0
    3ab0:	b	3b90 <PyInit__ctypes_test@@Base+0x6a0>
    3ab4:	subs	x4, x8, x13
    3ab8:	cmp	x8, x13
    3abc:	sbc	x3, x2, x9
    3ac0:	tbnz	x3, #51, 3c5c <PyInit__ctypes_test@@Base+0x76c>
    3ac4:	orr	x5, x4, x3
    3ac8:	cbnz	x5, 3d88 <PyInit__ctypes_test@@Base+0x898>
    3acc:	and	x15, x15, #0xc00000
    3ad0:	mov	x8, #0x0                   	// #0
    3ad4:	cmp	x15, #0x800, lsl #12
    3ad8:	mov	x1, #0x0                   	// #0
    3adc:	cset	w10, eq  // eq = none
    3ae0:	b	37d0 <PyInit__ctypes_test@@Base+0x2e0>
    3ae4:	mov	x0, #0x7fff                	// #32767
    3ae8:	cmp	x7, x0
    3aec:	b.ne	37b0 <PyInit__ctypes_test@@Base+0x2c0>  // b.any
    3af0:	orr	x0, x2, x8
    3af4:	cbnz	x0, 397c <PyInit__ctypes_test@@Base+0x48c>
    3af8:	mov	x8, #0x0                   	// #0
    3afc:	mov	x5, #0x0                   	// #0
    3b00:	mov	w0, #0x0                   	// #0
    3b04:	b	39a4 <PyInit__ctypes_test@@Base+0x4b4>
    3b08:	orr	x0, x9, x13
    3b0c:	cmp	x0, #0x0
    3b10:	cset	x3, ne  // ne = any
    3b14:	adds	x8, x3, x8
    3b18:	cinc	x2, x2, cs  // cs = hs, nlast
    3b1c:	b	3840 <PyInit__ctypes_test@@Base+0x350>
    3b20:	mov	w4, #0x80                  	// #128
    3b24:	sub	w4, w4, w0
    3b28:	cmp	w0, #0x40
    3b2c:	sub	w8, w1, #0x3f
    3b30:	lsl	x0, x2, x4
    3b34:	orr	x0, x3, x0
    3b38:	csel	x3, x0, x3, ne  // ne = any
    3b3c:	lsr	x8, x2, x8
    3b40:	cmp	x3, #0x0
    3b44:	mov	x2, #0x0                   	// #0
    3b48:	cset	x0, ne  // ne = any
    3b4c:	orr	x8, x0, x8
    3b50:	mov	x5, x8
    3b54:	b	363c <PyInit__ctypes_test@@Base+0x14c>
    3b58:	mov	w4, #0x80                  	// #128
    3b5c:	sub	w4, w4, w0
    3b60:	subs	w0, w0, #0x40
    3b64:	lsl	x4, x9, x4
    3b68:	orr	x4, x13, x4
    3b6c:	csel	x13, x4, x13, ne  // ne = any
    3b70:	lsr	x0, x9, x0
    3b74:	cmp	x13, #0x0
    3b78:	cset	x3, ne  // ne = any
    3b7c:	orr	x3, x3, x0
    3b80:	b	35c4 <PyInit__ctypes_test@@Base+0xd4>
    3b84:	orr	x2, x2, x8
    3b88:	cmp	x2, #0x0
    3b8c:	cset	x8, ne  // ne = any
    3b90:	subs	x8, x13, x8
    3b94:	mov	w10, w6
    3b98:	sbc	x2, x9, xzr
    3b9c:	mov	x1, x3
    3ba0:	mov	x12, x14
    3ba4:	b	35cc <PyInit__ctypes_test@@Base+0xdc>
    3ba8:	mov	x0, #0x7fff                	// #32767
    3bac:	neg	w7, w7
    3bb0:	orr	x2, x2, #0x8000000000000
    3bb4:	cmp	x3, x0
    3bb8:	b.eq	390c <PyInit__ctypes_test@@Base+0x41c>  // b.none
    3bbc:	cmp	w7, #0x74
    3bc0:	b.gt	3d90 <PyInit__ctypes_test@@Base+0x8a0>
    3bc4:	cmp	w7, #0x3f
    3bc8:	b.gt	3e50 <PyInit__ctypes_test@@Base+0x960>
    3bcc:	mov	w1, #0x40                  	// #64
    3bd0:	sub	w1, w1, w7
    3bd4:	lsr	x4, x8, x7
    3bd8:	lsl	x8, x8, x1
    3bdc:	cmp	x8, #0x0
    3be0:	cset	x0, ne  // ne = any
    3be4:	lsl	x8, x2, x1
    3be8:	orr	x8, x8, x4
    3bec:	lsr	x7, x2, x7
    3bf0:	orr	x8, x8, x0
    3bf4:	add	x9, x9, x7
    3bf8:	adds	x8, x8, x13
    3bfc:	mov	x1, x3
    3c00:	cinc	x2, x9, cs  // cs = hs, nlast
    3c04:	b	3840 <PyInit__ctypes_test@@Base+0x350>
    3c08:	mov	w3, #0x80                  	// #128
    3c0c:	sub	w3, w3, w7
    3c10:	subs	w0, w7, #0x40
    3c14:	lsl	x3, x9, x3
    3c18:	orr	x3, x13, x3
    3c1c:	csel	x13, x3, x13, ne  // ne = any
    3c20:	lsr	x0, x9, x0
    3c24:	cmp	x13, #0x0
    3c28:	cset	x3, ne  // ne = any
    3c2c:	orr	x3, x3, x0
    3c30:	b	3b14 <PyInit__ctypes_test@@Base+0x624>
    3c34:	mov	x1, #0x7fff                	// #32767
    3c38:	cmp	x0, x1
    3c3c:	b.eq	3e98 <PyInit__ctypes_test@@Base+0x9a8>  // b.none
    3c40:	adds	x8, x8, x13
    3c44:	mov	x1, x0
    3c48:	adc	x2, x9, x2
    3c4c:	ubfx	x3, x8, #1, #3
    3c50:	extr	x8, x2, x8, #1
    3c54:	lsr	x2, x2, #1
    3c58:	b	364c <PyInit__ctypes_test@@Base+0x15c>
    3c5c:	cmp	x13, x8
    3c60:	mov	w10, w6
    3c64:	sbc	x3, x9, x2
    3c68:	sub	x8, x13, x8
    3c6c:	mov	x12, x14
    3c70:	b	35d4 <PyInit__ctypes_test@@Base+0xe4>
    3c74:	mov	x12, #0x7fff                	// #32767
    3c78:	cmp	x1, x12
    3c7c:	b.eq	3ca8 <PyInit__ctypes_test@@Base+0x7b8>  // b.none
    3c80:	cmp	x3, x12
    3c84:	b.eq	3ed8 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3c88:	cbnz	x7, 3cc0 <PyInit__ctypes_test@@Base+0x7d0>
    3c8c:	mov	w7, w0
    3c90:	cbnz	x5, 3fb8 <PyInit__ctypes_test@@Base+0xac8>
    3c94:	mov	x8, #0xffffffffffffffff    	// #-1
    3c98:	mov	x5, #0xffffffffffff        	// #281474976710655
    3c9c:	mov	w0, #0x1                   	// #1
    3ca0:	mov	w10, #0x0                   	// #0
    3ca4:	b	39ac <PyInit__ctypes_test@@Base+0x4bc>
    3ca8:	cbz	x7, 3fd4 <PyInit__ctypes_test@@Base+0xae4>
    3cac:	lsr	x0, x2, #50
    3cb0:	cmp	x3, x1
    3cb4:	eor	x0, x0, #0x1
    3cb8:	and	w0, w0, #0x1
    3cbc:	b.eq	3ed8 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3cc0:	cbz	x5, 3ef4 <PyInit__ctypes_test@@Base+0xa04>
    3cc4:	bfi	x4, x2, #61, #3
    3cc8:	lsr	x5, x2, #3
    3ccc:	mov	x8, x4
    3cd0:	tbz	x2, #50, 3cec <PyInit__ctypes_test@@Base+0x7fc>
    3cd4:	lsr	x1, x9, #3
    3cd8:	tbnz	x9, #50, 3cec <PyInit__ctypes_test@@Base+0x7fc>
    3cdc:	mov	x8, x11
    3ce0:	mov	w10, w6
    3ce4:	bfi	x8, x9, #61, #3
    3ce8:	mov	x5, x1
    3cec:	extr	x5, x5, x8, #61
    3cf0:	bfi	x8, x5, #61, #3
    3cf4:	lsr	x5, x5, #3
    3cf8:	b	39a4 <PyInit__ctypes_test@@Base+0x4b4>
    3cfc:	mov	x0, #0x7fff                	// #32767
    3d00:	cmp	x1, x0
    3d04:	b.ne	37b0 <PyInit__ctypes_test@@Base+0x2c0>  // b.any
    3d08:	orr	x0, x2, x8
    3d0c:	cbz	x0, 3af8 <PyInit__ctypes_test@@Base+0x608>
    3d10:	lsr	x7, x2, #50
    3d14:	eor	w7, w7, #0x1
    3d18:	b	3988 <PyInit__ctypes_test@@Base+0x498>
    3d1c:	cbz	x5, 3e30 <PyInit__ctypes_test@@Base+0x940>
    3d20:	mov	w10, w6
    3d24:	mov	x2, x9
    3d28:	mov	x8, x13
    3d2c:	mov	x12, x14
    3d30:	mov	x1, #0x0                   	// #0
    3d34:	mov	x3, #0x0                   	// #0
    3d38:	b	3a14 <PyInit__ctypes_test@@Base+0x524>
    3d3c:	ands	x3, x15, #0xc00000
    3d40:	b.eq	3dcc <PyInit__ctypes_test@@Base+0x8dc>  // b.none
    3d44:	cmp	x3, #0x400, lsl #12
    3d48:	eor	w0, w10, #0x1
    3d4c:	cset	w1, eq  // eq = none
    3d50:	tst	w1, w0
    3d54:	b.ne	3ff0 <PyInit__ctypes_test@@Base+0xb00>  // b.any
    3d58:	cmp	x3, #0x800, lsl #12
    3d5c:	b.eq	3f9c <PyInit__ctypes_test@@Base+0xaac>  // b.none
    3d60:	cmp	x3, #0x400, lsl #12
    3d64:	mov	w0, #0x14                  	// #20
    3d68:	b.ne	3878 <PyInit__ctypes_test@@Base+0x388>  // b.any
    3d6c:	mov	x2, #0xffffffffffffffff    	// #-1
    3d70:	mov	x1, #0x7ffe                	// #32766
    3d74:	mov	x8, x2
    3d78:	mov	w7, #0x0                   	// #0
    3d7c:	mov	w0, #0x14                  	// #20
    3d80:	cbnz	x12, 393c <PyInit__ctypes_test@@Base+0x44c>
    3d84:	b	3934 <PyInit__ctypes_test@@Base+0x444>
    3d88:	mov	x8, x4
    3d8c:	b	35d4 <PyInit__ctypes_test@@Base+0xe4>
    3d90:	orr	x2, x2, x8
    3d94:	cmp	x2, #0x0
    3d98:	cset	x8, ne  // ne = any
    3d9c:	b	3bf8 <PyInit__ctypes_test@@Base+0x708>
    3da0:	mov	w1, #0x80                  	// #128
    3da4:	sub	w1, w1, w0
    3da8:	subs	w0, w0, #0x40
    3dac:	lsl	x1, x2, x1
    3db0:	orr	x1, x8, x1
    3db4:	csel	x8, x1, x8, ne  // ne = any
    3db8:	lsr	x2, x2, x0
    3dbc:	cmp	x8, #0x0
    3dc0:	cset	x8, ne  // ne = any
    3dc4:	orr	x8, x8, x2
    3dc8:	b	3b90 <PyInit__ctypes_test@@Base+0x6a0>
    3dcc:	mov	w0, #0x14                  	// #20
    3dd0:	b	38bc <PyInit__ctypes_test@@Base+0x3cc>
    3dd4:	lsr	x7, x9, #50
    3dd8:	mov	w10, w6
    3ddc:	eor	x7, x7, #0x1
    3de0:	mov	x8, x13
    3de4:	and	w7, w7, #0x1
    3de8:	mov	x2, x9
    3dec:	b	3988 <PyInit__ctypes_test@@Base+0x498>
    3df0:	mov	x0, #0x7fff                	// #32767
    3df4:	cmp	x1, x0
    3df8:	b.eq	3f18 <PyInit__ctypes_test@@Base+0xa28>  // b.none
    3dfc:	cmp	x3, x0
    3e00:	b.eq	3f8c <PyInit__ctypes_test@@Base+0xa9c>  // b.none
    3e04:	cbnz	x14, 3f30 <PyInit__ctypes_test@@Base+0xa40>
    3e08:	mov	x2, x9
    3e0c:	mov	x8, x13
    3e10:	b	3988 <PyInit__ctypes_test@@Base+0x498>
    3e14:	mov	x0, #0x7fff                	// #32767
    3e18:	cmp	x3, x0
    3e1c:	b.eq	3fc8 <PyInit__ctypes_test@@Base+0xad8>  // b.none
    3e20:	mov	x2, x9
    3e24:	mov	x8, x13
    3e28:	mov	x1, x3
    3e2c:	b	37b0 <PyInit__ctypes_test@@Base+0x2c0>
    3e30:	and	x15, x15, #0xc00000
    3e34:	mov	x8, #0x0                   	// #0
    3e38:	cmp	x15, #0x800, lsl #12
    3e3c:	cset	w10, eq  // eq = none
    3e40:	b	37d0 <PyInit__ctypes_test@@Base+0x2e0>
    3e44:	mov	x2, x9
    3e48:	mov	x8, x13
    3e4c:	b	363c <PyInit__ctypes_test@@Base+0x14c>
    3e50:	mov	w0, #0x80                  	// #128
    3e54:	sub	w0, w0, w7
    3e58:	subs	w7, w7, #0x40
    3e5c:	lsl	x0, x2, x0
    3e60:	orr	x0, x8, x0
    3e64:	csel	x8, x0, x8, ne  // ne = any
    3e68:	lsr	x2, x2, x7
    3e6c:	cmp	x8, #0x0
    3e70:	cset	x8, ne  // ne = any
    3e74:	orr	x8, x8, x2
    3e78:	b	3bf8 <PyInit__ctypes_test@@Base+0x708>
    3e7c:	cmp	x13, x8
    3e80:	mov	w10, w6
    3e84:	sbc	x2, x9, x2
    3e88:	sub	x8, x13, x8
    3e8c:	mov	x1, x3
    3e90:	mov	x12, x5
    3e94:	b	35cc <PyInit__ctypes_test@@Base+0xdc>
    3e98:	ands	x3, x15, #0xc00000
    3e9c:	b.eq	3dcc <PyInit__ctypes_test@@Base+0x8dc>  // b.none
    3ea0:	cmp	x3, #0x400, lsl #12
    3ea4:	eor	w0, w10, #0x1
    3ea8:	csel	w0, w0, wzr, eq  // eq = none
    3eac:	cbnz	w0, 3ff0 <PyInit__ctypes_test@@Base+0xb00>
    3eb0:	cmp	x3, #0x800, lsl #12
    3eb4:	b.ne	3d60 <PyInit__ctypes_test@@Base+0x870>  // b.any
    3eb8:	cbz	x12, 3fa0 <PyInit__ctypes_test@@Base+0xab0>
    3ebc:	mov	w0, #0x14                  	// #20
    3ec0:	mov	x16, #0x1                   	// #1
    3ec4:	b	38bc <PyInit__ctypes_test@@Base+0x3cc>
    3ec8:	orr	x0, x9, x13
    3ecc:	cbnz	x0, 3dd4 <PyInit__ctypes_test@@Base+0x8e4>
    3ed0:	mov	w10, w6
    3ed4:	b	3af8 <PyInit__ctypes_test@@Base+0x608>
    3ed8:	cbz	x5, 3fe4 <PyInit__ctypes_test@@Base+0xaf4>
    3edc:	tst	x9, #0x4000000000000
    3ee0:	csinc	w0, w0, wzr, ne  // ne = any
    3ee4:	cbnz	x7, 3cc4 <PyInit__ctypes_test@@Base+0x7d4>
    3ee8:	mov	w10, w6
    3eec:	mov	x2, x9
    3ef0:	mov	x8, x13
    3ef4:	mov	w7, w0
    3ef8:	b	3988 <PyInit__ctypes_test@@Base+0x498>
    3efc:	orr	x5, x4, x3
    3f00:	cbz	x5, 3e30 <PyInit__ctypes_test@@Base+0x940>
    3f04:	mov	x2, x3
    3f08:	mov	x8, x4
    3f0c:	and	x3, x4, #0x7
    3f10:	mov	w7, #0x1                   	// #1
    3f14:	b	364c <PyInit__ctypes_test@@Base+0x15c>
    3f18:	cbz	x14, 3f84 <PyInit__ctypes_test@@Base+0xa94>
    3f1c:	lsr	x7, x2, #50
    3f20:	cmp	x3, x1
    3f24:	eor	x7, x7, #0x1
    3f28:	and	w7, w7, #0x1
    3f2c:	b.eq	3ffc <PyInit__ctypes_test@@Base+0xb0c>  // b.none
    3f30:	orr	x13, x9, x13
    3f34:	cbz	x13, 3988 <PyInit__ctypes_test@@Base+0x498>
    3f38:	bfi	x4, x2, #61, #3
    3f3c:	lsr	x5, x2, #3
    3f40:	mov	x8, x4
    3f44:	tbz	x2, #50, 3f60 <PyInit__ctypes_test@@Base+0xa70>
    3f48:	lsr	x0, x9, #3
    3f4c:	tbnz	x9, #50, 3f60 <PyInit__ctypes_test@@Base+0xa70>
    3f50:	and	x8, x11, #0x1fffffffffffffff
    3f54:	mov	w10, w6
    3f58:	orr	x8, x8, x9, lsl #61
    3f5c:	mov	x5, x0
    3f60:	mov	w0, w7
    3f64:	extr	x5, x5, x8, #61
    3f68:	bfi	x8, x5, #61, #3
    3f6c:	lsr	x5, x5, #3
    3f70:	b	39a4 <PyInit__ctypes_test@@Base+0x4b4>
    3f74:	adds	x8, x8, x13
    3f78:	mov	x1, x3
    3f7c:	adc	x2, x9, x2
    3f80:	b	3840 <PyInit__ctypes_test@@Base+0x350>
    3f84:	cmp	x3, x1
    3f88:	b.ne	3e08 <PyInit__ctypes_test@@Base+0x918>  // b.any
    3f8c:	orr	x0, x9, x13
    3f90:	cbnz	x0, 4004 <PyInit__ctypes_test@@Base+0xb14>
    3f94:	cbz	x14, 3af8 <PyInit__ctypes_test@@Base+0x608>
    3f98:	b	3988 <PyInit__ctypes_test@@Base+0x498>
    3f9c:	cbnz	x16, 3ebc <PyInit__ctypes_test@@Base+0x9cc>
    3fa0:	mov	x2, #0xffffffffffffffff    	// #-1
    3fa4:	mov	w10, #0x0                   	// #0
    3fa8:	mov	x8, x2
    3fac:	mov	x1, #0x7ffe                	// #32766
    3fb0:	mov	w0, #0x14                  	// #20
    3fb4:	b	367c <PyInit__ctypes_test@@Base+0x18c>
    3fb8:	mov	w10, w6
    3fbc:	mov	x2, x9
    3fc0:	mov	x8, x13
    3fc4:	b	3988 <PyInit__ctypes_test@@Base+0x498>
    3fc8:	orr	x0, x9, x13
    3fcc:	cbz	x0, 3af8 <PyInit__ctypes_test@@Base+0x608>
    3fd0:	b	3914 <PyInit__ctypes_test@@Base+0x424>
    3fd4:	cmp	x3, x1
    3fd8:	b.eq	3ed8 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3fdc:	mov	w7, #0x0                   	// #0
    3fe0:	b	3c90 <PyInit__ctypes_test@@Base+0x7a0>
    3fe4:	cbnz	x7, 3ef4 <PyInit__ctypes_test@@Base+0xa04>
    3fe8:	mov	w7, w0
    3fec:	b	3c90 <PyInit__ctypes_test@@Base+0x7a0>
    3ff0:	mov	w0, #0x14                  	// #20
    3ff4:	mov	x16, #0x0                   	// #0
    3ff8:	b	38bc <PyInit__ctypes_test@@Base+0x3cc>
    3ffc:	orr	x0, x9, x13
    4000:	cbz	x0, 3988 <PyInit__ctypes_test@@Base+0x498>
    4004:	tst	x9, #0x4000000000000
    4008:	csinc	w7, w7, wzr, ne  // ne = any
    400c:	cbnz	x14, 3f38 <PyInit__ctypes_test@@Base+0xa48>
    4010:	b	3e08 <PyInit__ctypes_test@@Base+0x918>
    4014:	mov	x8, #0x0                   	// #0
    4018:	mov	w1, #0x7fff                	// #32767
    401c:	mov	x5, #0x0                   	// #0
    4020:	b	3698 <PyInit__ctypes_test@@Base+0x1a8>
    4024:	nop
    4028:	stp	x29, x30, [sp, #-48]!
    402c:	mov	x29, sp
    4030:	str	q0, [sp, #16]
    4034:	str	q1, [sp, #32]
    4038:	ldp	x2, x0, [sp, #16]
    403c:	ldp	x5, x3, [sp, #32]
    4040:	mrs	x11, fpcr
    4044:	lsr	x1, x0, #63
    4048:	ubfx	x6, x0, #0, #48
    404c:	and	w13, w1, #0xff
    4050:	mov	x9, x1
    4054:	ubfx	x7, x0, #48, #15
    4058:	cbz	w7, 4470 <PyInit__ctypes_test@@Base+0xf80>
    405c:	mov	w1, #0x7fff                	// #32767
    4060:	cmp	w7, w1
    4064:	b.eq	44b0 <PyInit__ctypes_test@@Base+0xfc0>  // b.none
    4068:	and	x7, x7, #0xffff
    406c:	extr	x6, x6, x2, #61
    4070:	mov	x15, #0xffffffffffffc001    	// #-16383
    4074:	orr	x4, x6, #0x8000000000000
    4078:	add	x7, x7, x15
    407c:	lsl	x2, x2, #3
    4080:	mov	x14, #0x2                   	// #2
    4084:	mov	x12, #0x1                   	// #1
    4088:	mov	x1, #0x3                   	// #3
    408c:	mov	x16, #0x0                   	// #0
    4090:	mov	x17, #0x0                   	// #0
    4094:	mov	w0, #0x0                   	// #0
    4098:	lsr	x8, x3, #63
    409c:	ubfx	x6, x3, #0, #48
    40a0:	and	w15, w8, #0xff
    40a4:	ubfx	x10, x3, #48, #15
    40a8:	cbz	w10, 4428 <PyInit__ctypes_test@@Base+0xf38>
    40ac:	mov	w12, #0x7fff                	// #32767
    40b0:	cmp	w10, w12
    40b4:	b.eq	43f4 <PyInit__ctypes_test@@Base+0xf04>  // b.none
    40b8:	and	x10, x10, #0xffff
    40bc:	extr	x6, x6, x5, #61
    40c0:	mov	x14, #0xffffffffffffc001    	// #-16383
    40c4:	add	x10, x10, x14
    40c8:	orr	x6, x6, #0x8000000000000
    40cc:	sub	x7, x7, x10
    40d0:	lsl	x5, x5, #3
    40d4:	mov	x1, x16
    40d8:	mov	x3, #0x0                   	// #0
    40dc:	eor	w10, w13, w15
    40e0:	cmp	x1, #0x9
    40e4:	and	x12, x10, #0xff
    40e8:	mov	x14, x12
    40ec:	b.gt	41b4 <PyInit__ctypes_test@@Base+0xcc4>
    40f0:	cmp	x1, #0x7
    40f4:	b.gt	456c <PyInit__ctypes_test@@Base+0x107c>
    40f8:	cmp	x1, #0x3
    40fc:	b.eq	4118 <PyInit__ctypes_test@@Base+0xc28>  // b.none
    4100:	b.le	41dc <PyInit__ctypes_test@@Base+0xcec>
    4104:	cmp	x1, #0x5
    4108:	b.eq	41c4 <PyInit__ctypes_test@@Base+0xcd4>  // b.none
    410c:	b.le	420c <PyInit__ctypes_test@@Base+0xd1c>
    4110:	cmp	x1, #0x6
    4114:	b.eq	4180 <PyInit__ctypes_test@@Base+0xc90>  // b.none
    4118:	cmp	x3, #0x1
    411c:	b.eq	417c <PyInit__ctypes_test@@Base+0xc8c>  // b.none
    4120:	cbz	x3, 4134 <PyInit__ctypes_test@@Base+0xc44>
    4124:	cmp	x3, #0x2
    4128:	b.eq	4568 <PyInit__ctypes_test@@Base+0x1078>  // b.none
    412c:	cmp	x3, #0x3
    4130:	b.eq	4760 <PyInit__ctypes_test@@Base+0x1270>  // b.none
    4134:	mov	x1, #0x3fff                	// #16383
    4138:	mov	w10, w15
    413c:	mov	x14, x8
    4140:	add	x3, x7, x1
    4144:	cmp	x3, #0x0
    4148:	b.le	4638 <PyInit__ctypes_test@@Base+0x1148>
    414c:	tst	x5, #0x7
    4150:	b.ne	4598 <PyInit__ctypes_test@@Base+0x10a8>  // b.any
    4154:	tbz	x6, #52, 4160 <PyInit__ctypes_test@@Base+0xc70>
    4158:	and	x6, x6, #0xffefffffffffffff
    415c:	add	x3, x7, #0x4, lsl #12
    4160:	mov	x1, #0x7ffe                	// #32766
    4164:	cmp	x3, x1
    4168:	b.gt	471c <PyInit__ctypes_test@@Base+0x122c>
    416c:	and	w1, w3, #0x7fff
    4170:	extr	x2, x6, x5, #3
    4174:	ubfx	x6, x6, #3, #48
    4178:	b	418c <PyInit__ctypes_test@@Base+0xc9c>
    417c:	mov	w10, w15
    4180:	mov	w1, #0x0                   	// #0
    4184:	mov	x6, #0x0                   	// #0
    4188:	mov	x2, #0x0                   	// #0
    418c:	mov	x5, #0x0                   	// #0
    4190:	orr	w1, w1, w10, lsl #15
    4194:	bfxil	x5, x6, #0, #48
    4198:	fmov	d0, x2
    419c:	bfi	x5, x1, #48, #16
    41a0:	fmov	v0.d[1], x5
    41a4:	cbnz	w0, 41fc <PyInit__ctypes_test@@Base+0xd0c>
    41a8:	ldp	x29, x30, [sp], #48
    41ac:	ret
    41b0:	mov	x3, #0x3                   	// #3
    41b4:	cmp	x1, #0xb
    41b8:	b.gt	44dc <PyInit__ctypes_test@@Base+0xfec>
    41bc:	cmp	x1, #0xa
    41c0:	b.ne	4118 <PyInit__ctypes_test@@Base+0xc28>  // b.any
    41c4:	mov	w10, #0x0                   	// #0
    41c8:	mov	x6, #0xffffffffffff        	// #281474976710655
    41cc:	mov	x2, #0xffffffffffffffff    	// #-1
    41d0:	mov	w0, #0x1                   	// #1
    41d4:	mov	w1, #0x7fff                	// #32767
    41d8:	b	418c <PyInit__ctypes_test@@Base+0xc9c>
    41dc:	cmp	x1, #0x1
    41e0:	b.ne	43e8 <PyInit__ctypes_test@@Base+0xef8>  // b.any
    41e4:	mov	x4, #0x0                   	// #0
    41e8:	fmov	d0, x4
    41ec:	lsl	x12, x12, #63
    41f0:	orr	w0, w0, #0x2
    41f4:	orr	x5, x12, #0x7fff000000000000
    41f8:	fmov	v0.d[1], x5
    41fc:	str	q0, [sp, #16]
    4200:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    4204:	ldr	q0, [sp, #16]
    4208:	b	41a8 <PyInit__ctypes_test@@Base+0xcb8>
    420c:	cmp	x1, #0x4
    4210:	b.eq	4180 <PyInit__ctypes_test@@Base+0xc90>  // b.none
    4214:	cmp	x4, x6
    4218:	b.ls	457c <PyInit__ctypes_test@@Base+0x108c>  // b.plast
    421c:	lsr	x3, x4, #1
    4220:	extr	x8, x4, x2, #1
    4224:	lsl	x2, x2, #63
    4228:	ubfx	x13, x6, #20, #32
    422c:	extr	x9, x6, x5, #52
    4230:	lsl	x12, x5, #12
    4234:	and	x15, x9, #0xffffffff
    4238:	udiv	x5, x3, x13
    423c:	msub	x3, x5, x13, x3
    4240:	mul	x1, x15, x5
    4244:	extr	x3, x3, x8, #32
    4248:	cmp	x1, x3
    424c:	b.ls	4260 <PyInit__ctypes_test@@Base+0xd70>  // b.plast
    4250:	adds	x3, x9, x3
    4254:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
    4258:	b.hi	4838 <PyInit__ctypes_test@@Base+0x1348>  // b.pmore
    425c:	sub	x5, x5, #0x1
    4260:	sub	x3, x3, x1
    4264:	mov	x4, x8
    4268:	udiv	x1, x3, x13
    426c:	msub	x3, x1, x13, x3
    4270:	mul	x6, x15, x1
    4274:	bfi	x4, x3, #32, #32
    4278:	cmp	x6, x4
    427c:	b.ls	4290 <PyInit__ctypes_test@@Base+0xda0>  // b.plast
    4280:	adds	x4, x9, x4
    4284:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
    4288:	b.hi	4844 <PyInit__ctypes_test@@Base+0x1354>  // b.pmore
    428c:	sub	x1, x1, #0x1
    4290:	orr	x8, x1, x5, lsl #32
    4294:	and	x17, x12, #0xffffffff
    4298:	and	x1, x8, #0xffffffff
    429c:	lsr	x16, x12, #32
    42a0:	lsr	x5, x8, #32
    42a4:	sub	x4, x4, x6
    42a8:	mov	x18, #0x100000000           	// #4294967296
    42ac:	mul	x3, x1, x17
    42b0:	mul	x30, x5, x17
    42b4:	madd	x6, x16, x1, x30
    42b8:	and	x1, x3, #0xffffffff
    42bc:	mul	x5, x5, x16
    42c0:	add	x3, x6, x3, lsr #32
    42c4:	add	x6, x5, x18
    42c8:	cmp	x30, x3
    42cc:	csel	x5, x6, x5, hi  // hi = pmore
    42d0:	add	x1, x1, x3, lsl #32
    42d4:	add	x5, x5, x3, lsr #32
    42d8:	cmp	x4, x5
    42dc:	b.cc	4604 <PyInit__ctypes_test@@Base+0x1114>  // b.lo, b.ul, b.last
    42e0:	ccmp	x2, x1, #0x2, eq  // eq = none
    42e4:	mov	x6, x8
    42e8:	b.cc	4604 <PyInit__ctypes_test@@Base+0x1114>  // b.lo, b.ul, b.last
    42ec:	subs	x8, x2, x1
    42f0:	mov	x3, #0x3fff                	// #16383
    42f4:	cmp	x2, x1
    42f8:	add	x3, x7, x3
    42fc:	sbc	x4, x4, x5
    4300:	cmp	x9, x4
    4304:	b.eq	4850 <PyInit__ctypes_test@@Base+0x1360>  // b.none
    4308:	udiv	x5, x4, x13
    430c:	msub	x4, x5, x13, x4
    4310:	mul	x2, x15, x5
    4314:	extr	x1, x4, x8, #32
    4318:	cmp	x2, x1
    431c:	b.ls	4330 <PyInit__ctypes_test@@Base+0xe40>  // b.plast
    4320:	adds	x1, x9, x1
    4324:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
    4328:	b.hi	4908 <PyInit__ctypes_test@@Base+0x1418>  // b.pmore
    432c:	sub	x5, x5, #0x1
    4330:	sub	x1, x1, x2
    4334:	udiv	x2, x1, x13
    4338:	msub	x1, x2, x13, x1
    433c:	mul	x15, x15, x2
    4340:	bfi	x8, x1, #32, #32
    4344:	mov	x1, x8
    4348:	cmp	x15, x8
    434c:	b.ls	4360 <PyInit__ctypes_test@@Base+0xe70>  // b.plast
    4350:	adds	x1, x9, x8
    4354:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
    4358:	b.hi	4914 <PyInit__ctypes_test@@Base+0x1424>  // b.pmore
    435c:	sub	x2, x2, #0x1
    4360:	orr	x5, x2, x5, lsl #32
    4364:	sub	x1, x1, x15
    4368:	and	x4, x5, #0xffffffff
    436c:	mov	x13, #0x100000000           	// #4294967296
    4370:	lsr	x15, x5, #32
    4374:	mul	x2, x17, x4
    4378:	mul	x17, x15, x17
    437c:	madd	x4, x16, x4, x17
    4380:	and	x8, x2, #0xffffffff
    4384:	mul	x16, x16, x15
    4388:	add	x2, x4, x2, lsr #32
    438c:	add	x4, x16, x13
    4390:	cmp	x17, x2
    4394:	csel	x16, x4, x16, hi  // hi = pmore
    4398:	add	x4, x8, x2, lsl #32
    439c:	add	x16, x16, x2, lsr #32
    43a0:	cmp	x1, x16
    43a4:	b.cs	4788 <PyInit__ctypes_test@@Base+0x1298>  // b.hs, b.nlast
    43a8:	adds	x2, x9, x1
    43ac:	sub	x8, x5, #0x1
    43b0:	mov	x1, x2
    43b4:	b.cs	43c8 <PyInit__ctypes_test@@Base+0xed8>  // b.hs, b.nlast
    43b8:	cmp	x2, x16
    43bc:	b.cc	4888 <PyInit__ctypes_test@@Base+0x1398>  // b.lo, b.ul, b.last
    43c0:	ccmp	x12, x4, #0x2, eq  // eq = none
    43c4:	b.cc	4888 <PyInit__ctypes_test@@Base+0x1398>  // b.lo, b.ul, b.last
    43c8:	cmp	x12, x4
    43cc:	mov	x5, x8
    43d0:	cset	w2, ne  // ne = any
    43d4:	cmp	w2, #0x0
    43d8:	orr	x2, x5, #0x1
    43dc:	ccmp	x1, x16, #0x0, eq  // eq = none
    43e0:	csel	x5, x2, x5, ne  // ne = any
    43e4:	b	4144 <PyInit__ctypes_test@@Base+0xc54>
    43e8:	cmp	x1, #0x2
    43ec:	b.eq	4180 <PyInit__ctypes_test@@Base+0xc90>  // b.none
    43f0:	b	4214 <PyInit__ctypes_test@@Base+0xd24>
    43f4:	mov	x10, #0xffffffffffff8001    	// #-32767
    43f8:	orr	x3, x6, x5
    43fc:	add	x7, x7, x10
    4400:	cbz	x3, 4554 <PyInit__ctypes_test@@Base+0x1064>
    4404:	eor	w10, w13, w15
    4408:	ands	x3, x6, #0x800000000000
    440c:	and	x12, x10, #0xff
    4410:	csinc	w0, w0, wzr, ne  // ne = any
    4414:	mov	x14, x12
    4418:	cmp	x1, #0x9
    441c:	b.gt	45cc <PyInit__ctypes_test@@Base+0x10dc>
    4420:	mov	x3, #0x3                   	// #3
    4424:	b	40f0 <PyInit__ctypes_test@@Base+0xc00>
    4428:	orr	x1, x6, x5
    442c:	cbz	x1, 4540 <PyInit__ctypes_test@@Base+0x1050>
    4430:	cbz	x6, 46d4 <PyInit__ctypes_test@@Base+0x11e4>
    4434:	clz	x1, x6
    4438:	sub	x3, x1, #0xf
    443c:	add	w12, w3, #0x3
    4440:	mov	w10, #0x3d                  	// #61
    4444:	sub	w3, w10, w3
    4448:	lsl	x6, x6, x12
    444c:	lsr	x3, x5, x3
    4450:	orr	x6, x3, x6
    4454:	lsl	x5, x5, x12
    4458:	add	x7, x1, x7
    445c:	mov	x12, #0x3fef                	// #16367
    4460:	mov	x1, x16
    4464:	add	x7, x7, x12
    4468:	mov	x3, #0x0                   	// #0
    446c:	b	40dc <PyInit__ctypes_test@@Base+0xbec>
    4470:	orr	x4, x6, x2
    4474:	cbz	x4, 451c <PyInit__ctypes_test@@Base+0x102c>
    4478:	cbz	x6, 46f8 <PyInit__ctypes_test@@Base+0x1208>
    447c:	clz	x0, x6
    4480:	sub	x4, x0, #0xf
    4484:	add	w7, w4, #0x3
    4488:	mov	w1, #0x3d                  	// #61
    448c:	sub	w4, w1, w4
    4490:	lsl	x6, x6, x7
    4494:	lsr	x4, x2, x4
    4498:	orr	x4, x4, x6
    449c:	lsl	x2, x2, x7
    44a0:	mov	x7, #0xffffffffffffc011    	// #-16367
    44a4:	mov	x14, #0x2                   	// #2
    44a8:	sub	x7, x7, x0
    44ac:	b	4084 <PyInit__ctypes_test@@Base+0xb94>
    44b0:	orr	x4, x6, x2
    44b4:	cbnz	x4, 44f4 <PyInit__ctypes_test@@Base+0x1004>
    44b8:	mov	x2, #0x0                   	// #0
    44bc:	mov	x14, #0xa                   	// #10
    44c0:	mov	x12, #0x9                   	// #9
    44c4:	mov	x1, #0xb                   	// #11
    44c8:	mov	x16, #0x8                   	// #8
    44cc:	mov	x7, #0x7fff                	// #32767
    44d0:	mov	x17, #0x2                   	// #2
    44d4:	mov	w0, #0x0                   	// #0
    44d8:	b	4098 <PyInit__ctypes_test@@Base+0xba8>
    44dc:	mov	w15, w13
    44e0:	mov	x6, x4
    44e4:	mov	x5, x2
    44e8:	mov	x8, x9
    44ec:	mov	x3, x17
    44f0:	b	4118 <PyInit__ctypes_test@@Base+0xc28>
    44f4:	lsr	x0, x6, #47
    44f8:	mov	x4, x6
    44fc:	eor	w0, w0, #0x1
    4500:	mov	x14, #0xe                   	// #14
    4504:	mov	x12, #0xd                   	// #13
    4508:	mov	x1, #0xf                   	// #15
    450c:	mov	x16, #0xc                   	// #12
    4510:	mov	x7, #0x7fff                	// #32767
    4514:	mov	x17, #0x3                   	// #3
    4518:	b	4098 <PyInit__ctypes_test@@Base+0xba8>
    451c:	mov	x2, #0x0                   	// #0
    4520:	mov	x14, #0x6                   	// #6
    4524:	mov	x12, #0x5                   	// #5
    4528:	mov	x1, #0x7                   	// #7
    452c:	mov	x16, #0x4                   	// #4
    4530:	mov	x7, #0x0                   	// #0
    4534:	mov	x17, #0x1                   	// #1
    4538:	mov	w0, #0x0                   	// #0
    453c:	b	4098 <PyInit__ctypes_test@@Base+0xba8>
    4540:	mov	x1, x12
    4544:	mov	x6, #0x0                   	// #0
    4548:	mov	x5, #0x0                   	// #0
    454c:	mov	x3, #0x1                   	// #1
    4550:	b	40dc <PyInit__ctypes_test@@Base+0xbec>
    4554:	mov	x1, x14
    4558:	mov	x6, #0x0                   	// #0
    455c:	mov	x5, #0x0                   	// #0
    4560:	mov	x3, #0x2                   	// #2
    4564:	b	40dc <PyInit__ctypes_test@@Base+0xbec>
    4568:	mov	w10, w15
    456c:	mov	w1, #0x7fff                	// #32767
    4570:	mov	x6, #0x0                   	// #0
    4574:	mov	x2, #0x0                   	// #0
    4578:	b	418c <PyInit__ctypes_test@@Base+0xc9c>
    457c:	ccmp	x5, x2, #0x2, eq  // eq = none
    4580:	b.ls	421c <PyInit__ctypes_test@@Base+0xd2c>  // b.plast
    4584:	mov	x8, x2
    4588:	sub	x7, x7, #0x1
    458c:	mov	x3, x4
    4590:	mov	x2, #0x0                   	// #0
    4594:	b	4228 <PyInit__ctypes_test@@Base+0xd38>
    4598:	and	x1, x11, #0xc00000
    459c:	orr	w0, w0, #0x10
    45a0:	cmp	x1, #0x400, lsl #12
    45a4:	b.eq	48d4 <PyInit__ctypes_test@@Base+0x13e4>  // b.none
    45a8:	cmp	x1, #0x800, lsl #12
    45ac:	b.eq	4804 <PyInit__ctypes_test@@Base+0x1314>  // b.none
    45b0:	cbnz	x1, 4154 <PyInit__ctypes_test@@Base+0xc64>
    45b4:	and	x1, x5, #0xf
    45b8:	cmp	x1, #0x4
    45bc:	b.eq	4154 <PyInit__ctypes_test@@Base+0xc64>  // b.none
    45c0:	adds	x5, x5, #0x4
    45c4:	cinc	x6, x6, cs  // cs = hs, nlast
    45c8:	b	4154 <PyInit__ctypes_test@@Base+0xc64>
    45cc:	cmp	x1, #0xf
    45d0:	b.ne	41b0 <PyInit__ctypes_test@@Base+0xcc0>  // b.any
    45d4:	tbz	x4, #47, 45f0 <PyInit__ctypes_test@@Base+0x1100>
    45d8:	cbnz	x3, 45f0 <PyInit__ctypes_test@@Base+0x1100>
    45dc:	orr	x6, x6, #0x800000000000
    45e0:	mov	w10, w15
    45e4:	mov	x2, x5
    45e8:	mov	w1, #0x7fff                	// #32767
    45ec:	b	418c <PyInit__ctypes_test@@Base+0xc9c>
    45f0:	orr	x6, x4, #0x800000000000
    45f4:	mov	w10, w13
    45f8:	and	x6, x6, #0xffffffffffff
    45fc:	mov	w1, #0x7fff                	// #32767
    4600:	b	418c <PyInit__ctypes_test@@Base+0xc9c>
    4604:	adds	x3, x2, x12
    4608:	sub	x6, x8, #0x1
    460c:	adc	x4, x4, x9
    4610:	cset	x18, cs  // cs = hs, nlast
    4614:	mov	x2, x3
    4618:	cmp	x9, x4
    461c:	b.cs	4778 <PyInit__ctypes_test@@Base+0x1288>  // b.hs, b.nlast
    4620:	cmp	x5, x4
    4624:	b.ls	47a0 <PyInit__ctypes_test@@Base+0x12b0>  // b.plast
    4628:	adds	x2, x12, x3
    462c:	sub	x6, x8, #0x2
    4630:	adc	x4, x4, x9
    4634:	b	42ec <PyInit__ctypes_test@@Base+0xdfc>
    4638:	mov	x1, #0x1                   	// #1
    463c:	sub	x1, x1, x3
    4640:	cmp	x1, #0x74
    4644:	b.le	4660 <PyInit__ctypes_test@@Base+0x1170>
    4648:	orr	x2, x5, x6
    464c:	cbnz	x2, 486c <PyInit__ctypes_test@@Base+0x137c>
    4650:	orr	w0, w0, #0x8
    4654:	mov	w1, #0x0                   	// #0
    4658:	mov	x6, #0x0                   	// #0
    465c:	b	4744 <PyInit__ctypes_test@@Base+0x1254>
    4660:	cmp	x1, #0x3f
    4664:	b.le	47ac <PyInit__ctypes_test@@Base+0x12bc>
    4668:	mov	w2, #0x80                  	// #128
    466c:	sub	w2, w2, w1
    4670:	cmp	x1, #0x40
    4674:	sub	w1, w1, #0x40
    4678:	lsl	x2, x6, x2
    467c:	orr	x2, x5, x2
    4680:	csel	x5, x2, x5, ne  // ne = any
    4684:	lsr	x6, x6, x1
    4688:	cmp	x5, #0x0
    468c:	cset	x2, ne  // ne = any
    4690:	orr	x2, x2, x6
    4694:	ands	x6, x2, #0x7
    4698:	b.eq	47e0 <PyInit__ctypes_test@@Base+0x12f0>  // b.none
    469c:	mov	x6, #0x0                   	// #0
    46a0:	and	x11, x11, #0xc00000
    46a4:	orr	w0, w0, #0x10
    46a8:	cmp	x11, #0x400, lsl #12
    46ac:	b.eq	4920 <PyInit__ctypes_test@@Base+0x1430>  // b.none
    46b0:	cmp	x11, #0x800, lsl #12
    46b4:	b.eq	4940 <PyInit__ctypes_test@@Base+0x1450>  // b.none
    46b8:	cbz	x11, 48a8 <PyInit__ctypes_test@@Base+0x13b8>
    46bc:	tbnz	x6, #51, 48c0 <PyInit__ctypes_test@@Base+0x13d0>
    46c0:	orr	w0, w0, #0x8
    46c4:	extr	x2, x6, x2, #3
    46c8:	mov	w1, #0x0                   	// #0
    46cc:	ubfx	x6, x6, #3, #48
    46d0:	b	4744 <PyInit__ctypes_test@@Base+0x1254>
    46d4:	clz	x1, x5
    46d8:	add	x3, x1, #0x31
    46dc:	add	x1, x1, #0x40
    46e0:	cmp	x3, #0x3c
    46e4:	b.le	443c <PyInit__ctypes_test@@Base+0xf4c>
    46e8:	sub	w6, w3, #0x3d
    46ec:	lsl	x6, x5, x6
    46f0:	mov	x5, #0x0                   	// #0
    46f4:	b	4458 <PyInit__ctypes_test@@Base+0xf68>
    46f8:	clz	x7, x2
    46fc:	add	x4, x7, #0x31
    4700:	add	x0, x7, #0x40
    4704:	cmp	x4, #0x3c
    4708:	b.le	4484 <PyInit__ctypes_test@@Base+0xf94>
    470c:	sub	w4, w4, #0x3d
    4710:	lsl	x4, x2, x4
    4714:	mov	x2, #0x0                   	// #0
    4718:	b	44a0 <PyInit__ctypes_test@@Base+0xfb0>
    471c:	and	x2, x11, #0xc00000
    4720:	cmp	x2, #0x400, lsl #12
    4724:	b.eq	48ec <PyInit__ctypes_test@@Base+0x13fc>  // b.none
    4728:	cmp	x2, #0x800, lsl #12
    472c:	b.eq	481c <PyInit__ctypes_test@@Base+0x132c>  // b.none
    4730:	cbz	x2, 47f8 <PyInit__ctypes_test@@Base+0x1308>
    4734:	mov	x6, #0xffffffffffff        	// #281474976710655
    4738:	mov	x2, #0xffffffffffffffff    	// #-1
    473c:	mov	w3, #0x14                  	// #20
    4740:	orr	w0, w0, w3
    4744:	mov	x5, #0x0                   	// #0
    4748:	orr	w1, w1, w10, lsl #15
    474c:	bfxil	x5, x6, #0, #48
    4750:	fmov	d0, x2
    4754:	bfi	x5, x1, #48, #16
    4758:	fmov	v0.d[1], x5
    475c:	b	41fc <PyInit__ctypes_test@@Base+0xd0c>
    4760:	orr	x6, x6, #0x800000000000
    4764:	mov	w10, w15
    4768:	and	x6, x6, #0xffffffffffff
    476c:	mov	x2, x5
    4770:	mov	w1, #0x7fff                	// #32767
    4774:	b	418c <PyInit__ctypes_test@@Base+0xc9c>
    4778:	cmp	x18, #0x0
    477c:	ccmp	x9, x4, #0x0, eq  // eq = none
    4780:	b.ne	42ec <PyInit__ctypes_test@@Base+0xdfc>  // b.any
    4784:	b	4620 <PyInit__ctypes_test@@Base+0x1130>
    4788:	cmp	x4, #0x0
    478c:	cset	w2, ne  // ne = any
    4790:	cmp	w2, #0x0
    4794:	ccmp	x1, x16, #0x0, ne  // ne = any
    4798:	b.ne	43d4 <PyInit__ctypes_test@@Base+0xee4>  // b.any
    479c:	b	43a8 <PyInit__ctypes_test@@Base+0xeb8>
    47a0:	ccmp	x1, x3, #0x0, eq  // eq = none
    47a4:	b.ls	42ec <PyInit__ctypes_test@@Base+0xdfc>  // b.plast
    47a8:	b	4628 <PyInit__ctypes_test@@Base+0x1138>
    47ac:	mov	w2, #0x40                  	// #64
    47b0:	sub	w2, w2, w1
    47b4:	lsr	x4, x5, x1
    47b8:	lsl	x5, x5, x2
    47bc:	cmp	x5, #0x0
    47c0:	cset	x3, ne  // ne = any
    47c4:	lsl	x2, x6, x2
    47c8:	orr	x2, x2, x4
    47cc:	lsr	x6, x6, x1
    47d0:	orr	x2, x2, x3
    47d4:	tst	x2, #0x7
    47d8:	b.ne	46a0 <PyInit__ctypes_test@@Base+0x11b0>  // b.any
    47dc:	tbnz	x6, #51, 494c <PyInit__ctypes_test@@Base+0x145c>
    47e0:	mov	w1, #0x0                   	// #0
    47e4:	extr	x2, x6, x2, #3
    47e8:	ubfx	x6, x6, #3, #48
    47ec:	tbz	w11, #11, 418c <PyInit__ctypes_test@@Base+0xc9c>
    47f0:	orr	w0, w0, #0x8
    47f4:	b	4744 <PyInit__ctypes_test@@Base+0x1254>
    47f8:	mov	w1, #0x7fff                	// #32767
    47fc:	mov	x6, #0x0                   	// #0
    4800:	b	473c <PyInit__ctypes_test@@Base+0x124c>
    4804:	mov	w10, #0x0                   	// #0
    4808:	cbz	x14, 4154 <PyInit__ctypes_test@@Base+0xc64>
    480c:	adds	x5, x5, #0x8
    4810:	mov	w10, #0x1                   	// #1
    4814:	cinc	x6, x6, cs  // cs = hs, nlast
    4818:	b	4154 <PyInit__ctypes_test@@Base+0xc64>
    481c:	cmp	x14, #0x0
    4820:	mov	w2, #0x7fff                	// #32767
    4824:	mov	x6, #0xffffffffffff        	// #281474976710655
    4828:	csel	w1, w1, w2, eq  // eq = none
    482c:	csel	x6, x6, xzr, eq  // eq = none
    4830:	csetm	x2, eq  // eq = none
    4834:	b	473c <PyInit__ctypes_test@@Base+0x124c>
    4838:	sub	x5, x5, #0x2
    483c:	add	x3, x3, x9
    4840:	b	4260 <PyInit__ctypes_test@@Base+0xd70>
    4844:	sub	x1, x1, #0x2
    4848:	add	x4, x4, x9
    484c:	b	4290 <PyInit__ctypes_test@@Base+0xda0>
    4850:	cmp	x3, #0x0
    4854:	mov	x5, #0xffffffffffffffff    	// #-1
    4858:	b.gt	4598 <PyInit__ctypes_test@@Base+0x10a8>
    485c:	mov	x1, #0x1                   	// #1
    4860:	sub	x1, x1, x3
    4864:	cmp	x1, #0x74
    4868:	b.le	4660 <PyInit__ctypes_test@@Base+0x1170>
    486c:	and	x11, x11, #0xc00000
    4870:	orr	w0, w0, #0x10
    4874:	cmp	x11, #0x400, lsl #12
    4878:	b.eq	4934 <PyInit__ctypes_test@@Base+0x1444>  // b.none
    487c:	cmp	x11, #0x800, lsl #12
    4880:	csel	x2, x14, xzr, eq  // eq = none
    4884:	b	4650 <PyInit__ctypes_test@@Base+0x1160>
    4888:	lsl	x8, x12, #1
    488c:	sub	x5, x5, #0x2
    4890:	cmp	x12, x8
    4894:	cinc	x1, x9, hi  // hi = pmore
    4898:	cmp	x4, x8
    489c:	add	x1, x2, x1
    48a0:	cset	w2, ne  // ne = any
    48a4:	b	43d4 <PyInit__ctypes_test@@Base+0xee4>
    48a8:	and	x1, x2, #0xf
    48ac:	cmp	x1, #0x4
    48b0:	b.eq	48bc <PyInit__ctypes_test@@Base+0x13cc>  // b.none
    48b4:	adds	x2, x2, #0x4
    48b8:	cinc	x6, x6, cs  // cs = hs, nlast
    48bc:	tbz	x6, #51, 46c0 <PyInit__ctypes_test@@Base+0x11d0>
    48c0:	orr	w0, w0, #0x8
    48c4:	mov	w1, #0x1                   	// #1
    48c8:	mov	x6, #0x0                   	// #0
    48cc:	mov	x2, #0x0                   	// #0
    48d0:	b	4744 <PyInit__ctypes_test@@Base+0x1254>
    48d4:	mov	w10, #0x1                   	// #1
    48d8:	cbnz	x14, 4154 <PyInit__ctypes_test@@Base+0xc64>
    48dc:	adds	x5, x5, #0x8
    48e0:	mov	w10, #0x0                   	// #0
    48e4:	cinc	x6, x6, cs  // cs = hs, nlast
    48e8:	b	4154 <PyInit__ctypes_test@@Base+0xc64>
    48ec:	cmp	x14, #0x0
    48f0:	mov	w2, #0x7fff                	// #32767
    48f4:	mov	x6, #0xffffffffffff        	// #281474976710655
    48f8:	csel	w1, w1, w2, ne  // ne = any
    48fc:	csel	x6, x6, xzr, ne  // ne = any
    4900:	csetm	x2, ne  // ne = any
    4904:	b	473c <PyInit__ctypes_test@@Base+0x124c>
    4908:	sub	x5, x5, #0x2
    490c:	add	x1, x1, x9
    4910:	b	4330 <PyInit__ctypes_test@@Base+0xe40>
    4914:	sub	x2, x2, #0x2
    4918:	add	x1, x1, x9
    491c:	b	4360 <PyInit__ctypes_test@@Base+0xe70>
    4920:	cbnz	x14, 48bc <PyInit__ctypes_test@@Base+0x13cc>
    4924:	adds	x2, x2, #0x8
    4928:	cinc	x6, x6, cs  // cs = hs, nlast
    492c:	tbnz	x6, #51, 48c0 <PyInit__ctypes_test@@Base+0x13d0>
    4930:	b	46c0 <PyInit__ctypes_test@@Base+0x11d0>
    4934:	mov	x2, #0x1                   	// #1
    4938:	sub	x2, x2, x14
    493c:	b	4650 <PyInit__ctypes_test@@Base+0x1160>
    4940:	cbnz	x14, 4924 <PyInit__ctypes_test@@Base+0x1434>
    4944:	tbnz	x6, #51, 48c0 <PyInit__ctypes_test@@Base+0x13d0>
    4948:	b	46c0 <PyInit__ctypes_test@@Base+0x11d0>
    494c:	orr	w0, w0, #0x10
    4950:	b	48c0 <PyInit__ctypes_test@@Base+0x13d0>
    4954:	nop
    4958:	stp	x29, x30, [sp, #-80]!
    495c:	mov	x29, sp
    4960:	str	q0, [sp, #48]
    4964:	str	q1, [sp, #64]
    4968:	ldp	x1, x0, [sp, #48]
    496c:	ldp	x3, x2, [sp, #64]
    4970:	mrs	x12, fpcr
    4974:	lsr	x4, x0, #63
    4978:	ubfx	x8, x0, #0, #48
    497c:	and	w16, w4, #0xff
    4980:	mov	x14, x4
    4984:	ubfx	x10, x0, #48, #15
    4988:	cbz	w10, 4d0c <PyInit__ctypes_test@@Base+0x181c>
    498c:	mov	w4, #0x7fff                	// #32767
    4990:	cmp	w10, w4
    4994:	b.eq	4d4c <PyInit__ctypes_test@@Base+0x185c>  // b.none
    4998:	and	x10, x10, #0xffff
    499c:	extr	x4, x8, x1, #61
    49a0:	mov	x5, #0xffffffffffffc001    	// #-16383
    49a4:	orr	x8, x4, #0x8000000000000
    49a8:	add	x10, x10, x5
    49ac:	lsl	x7, x1, #3
    49b0:	mov	x11, #0x2                   	// #2
    49b4:	mov	x9, #0x1                   	// #1
    49b8:	mov	x6, #0x3                   	// #3
    49bc:	mov	x1, #0x0                   	// #0
    49c0:	mov	x17, #0x0                   	// #0
    49c4:	mov	w0, #0x0                   	// #0
    49c8:	lsr	x5, x2, #63
    49cc:	ubfx	x4, x2, #0, #48
    49d0:	and	w15, w5, #0xff
    49d4:	mov	x13, x5
    49d8:	ubfx	x5, x2, #48, #15
    49dc:	cbz	w5, 4d90 <PyInit__ctypes_test@@Base+0x18a0>
    49e0:	mov	w9, #0x7fff                	// #32767
    49e4:	cmp	w5, w9
    49e8:	b.eq	4a78 <PyInit__ctypes_test@@Base+0x1588>  // b.none
    49ec:	and	x5, x5, #0xffff
    49f0:	extr	x2, x4, x3, #61
    49f4:	mov	x4, #0xffffffffffffc001    	// #-16383
    49f8:	add	x5, x5, x4
    49fc:	add	x10, x10, x5
    4a00:	orr	x4, x2, #0x8000000000000
    4a04:	lsl	x5, x3, #3
    4a08:	mov	x6, #0x0                   	// #0
    4a0c:	eor	w3, w16, w15
    4a10:	cmp	x1, #0xa
    4a14:	and	w11, w3, #0xff
    4a18:	and	x9, x3, #0xff
    4a1c:	add	x18, x10, #0x1
    4a20:	b.gt	4cf8 <PyInit__ctypes_test@@Base+0x1808>
    4a24:	cmp	x1, #0x2
    4a28:	b.gt	4ab8 <PyInit__ctypes_test@@Base+0x15c8>
    4a2c:	sub	x1, x1, #0x1
    4a30:	cmp	x1, #0x1
    4a34:	b.hi	4b18 <PyInit__ctypes_test@@Base+0x1628>  // b.pmore
    4a38:	cmp	x6, #0x2
    4a3c:	b.eq	4dd4 <PyInit__ctypes_test@@Base+0x18e4>  // b.none
    4a40:	cmp	x6, #0x1
    4a44:	b.ne	4c78 <PyInit__ctypes_test@@Base+0x1788>  // b.any
    4a48:	mov	w1, #0x0                   	// #0
    4a4c:	mov	x4, #0x0                   	// #0
    4a50:	mov	x7, #0x0                   	// #0
    4a54:	mov	x3, #0x0                   	// #0
    4a58:	orr	w1, w1, w11, lsl #15
    4a5c:	bfxil	x3, x4, #0, #48
    4a60:	fmov	d0, x7
    4a64:	bfi	x3, x1, #48, #16
    4a68:	fmov	v0.d[1], x3
    4a6c:	cbnz	w0, 4f80 <PyInit__ctypes_test@@Base+0x1a90>
    4a70:	ldp	x29, x30, [sp], #80
    4a74:	ret
    4a78:	mov	x2, #0x7fff                	// #32767
    4a7c:	orr	x5, x4, x3
    4a80:	add	x2, x10, x2
    4a84:	cbz	x5, 4de4 <PyInit__ctypes_test@@Base+0x18f4>
    4a88:	ands	x1, x4, #0x800000000000
    4a8c:	eor	w9, w16, w15
    4a90:	csinc	w0, w0, wzr, ne  // ne = any
    4a94:	and	w11, w9, #0xff
    4a98:	add	x18, x10, #0x8, lsl #12
    4a9c:	cmp	x6, #0xa
    4aa0:	and	x9, x9, #0xff
    4aa4:	b.gt	4edc <PyInit__ctypes_test@@Base+0x19ec>
    4aa8:	mov	x10, x2
    4aac:	mov	x5, x3
    4ab0:	mov	x1, x6
    4ab4:	mov	x6, #0x3                   	// #3
    4ab8:	mov	x2, #0x1                   	// #1
    4abc:	mov	x3, #0x530                 	// #1328
    4ac0:	lsl	x1, x2, x1
    4ac4:	tst	x1, x3
    4ac8:	b.ne	4cec <PyInit__ctypes_test@@Base+0x17fc>  // b.any
    4acc:	mov	x3, #0x240                 	// #576
    4ad0:	tst	x1, x3
    4ad4:	b.ne	4cd4 <PyInit__ctypes_test@@Base+0x17e4>  // b.any
    4ad8:	mov	x2, #0x88                  	// #136
    4adc:	tst	x1, x2
    4ae0:	b.eq	4b18 <PyInit__ctypes_test@@Base+0x1628>  // b.none
    4ae4:	mov	x8, x4
    4ae8:	mov	x7, x5
    4aec:	mov	x17, x6
    4af0:	cmp	x17, #0x2
    4af4:	b.eq	512c <PyInit__ctypes_test@@Base+0x1c3c>  // b.none
    4af8:	mov	x6, x17
    4afc:	mov	w11, w15
    4b00:	cmp	x17, #0x3
    4b04:	mov	x4, x8
    4b08:	mov	x5, x7
    4b0c:	mov	x9, x13
    4b10:	b.ne	4a40 <PyInit__ctypes_test@@Base+0x1550>  // b.any
    4b14:	b	4f24 <PyInit__ctypes_test@@Base+0x1a34>
    4b18:	lsr	x13, x7, #32
    4b1c:	and	x6, x5, #0xffffffff
    4b20:	and	x17, x4, #0xffffffff
    4b24:	and	x7, x7, #0xffffffff
    4b28:	stp	x21, x22, [sp, #32]
    4b2c:	lsr	x22, x5, #32
    4b30:	lsr	x2, x4, #32
    4b34:	stp	x19, x20, [sp, #16]
    4b38:	mul	x19, x13, x6
    4b3c:	lsr	x4, x8, #32
    4b40:	mul	x1, x13, x17
    4b44:	and	x3, x8, #0xffffffff
    4b48:	madd	x5, x22, x7, x19
    4b4c:	mov	x14, #0x100000000           	// #4294967296
    4b50:	mul	x15, x6, x7
    4b54:	mul	x16, x7, x17
    4b58:	madd	x7, x2, x7, x1
    4b5c:	and	x30, x15, #0xffffffff
    4b60:	mul	x21, x4, x6
    4b64:	add	x15, x5, x15, lsr #32
    4b68:	mul	x20, x4, x17
    4b6c:	cmp	x19, x15
    4b70:	mul	x5, x13, x22
    4b74:	add	x30, x30, x15, lsl #32
    4b78:	mul	x19, x13, x2
    4b7c:	add	x13, x7, x16, lsr #32
    4b80:	mul	x6, x6, x3
    4b84:	add	x8, x5, x14
    4b88:	mul	x17, x3, x17
    4b8c:	csel	x5, x8, x5, hi  // hi = pmore
    4b90:	madd	x7, x22, x3, x21
    4b94:	cmp	x1, x13
    4b98:	madd	x3, x2, x3, x20
    4b9c:	and	x16, x16, #0xffffffff
    4ba0:	mul	x8, x22, x4
    4ba4:	add	x16, x16, x13, lsl #32
    4ba8:	add	x7, x7, x6, lsr #32
    4bac:	mul	x2, x2, x4
    4bb0:	add	x3, x3, x17, lsr #32
    4bb4:	add	x4, x19, x14
    4bb8:	csel	x19, x4, x19, hi  // hi = pmore
    4bbc:	and	x1, x17, #0xffffffff
    4bc0:	cmp	x21, x7
    4bc4:	add	x4, x8, x14
    4bc8:	csel	x8, x4, x8, hi  // hi = pmore
    4bcc:	add	x1, x1, x3, lsl #32
    4bd0:	cmp	x20, x3
    4bd4:	add	x15, x16, x15, lsr #32
    4bd8:	add	x13, x19, x13, lsr #32
    4bdc:	add	x14, x2, x14
    4be0:	add	x15, x5, x15
    4be4:	csel	x2, x14, x2, hi  // hi = pmore
    4be8:	adds	x1, x1, x13
    4bec:	and	x6, x6, #0xffffffff
    4bf0:	cset	x5, cs  // cs = hs, nlast
    4bf4:	cmp	x15, x16
    4bf8:	cset	x4, cc  // cc = lo, ul, last
    4bfc:	add	x6, x6, x7, lsl #32
    4c00:	adds	x1, x1, x4
    4c04:	lsr	x3, x3, #32
    4c08:	cset	x4, cs  // cs = hs, nlast
    4c0c:	cmp	x5, #0x0
    4c10:	ccmp	x4, #0x0, #0x0, eq  // eq = none
    4c14:	add	x7, x8, x7, lsr #32
    4c18:	cinc	x3, x3, ne  // ne = any
    4c1c:	adds	x5, x15, x6
    4c20:	cset	x4, cs  // cs = hs, nlast
    4c24:	adds	x1, x1, x7
    4c28:	cset	x6, cs  // cs = hs, nlast
    4c2c:	adds	x1, x1, x4
    4c30:	cset	x4, cs  // cs = hs, nlast
    4c34:	cmp	x6, #0x0
    4c38:	ccmp	x4, #0x0, #0x0, eq  // eq = none
    4c3c:	orr	x30, x30, x5, lsl #13
    4c40:	cinc	x2, x2, ne  // ne = any
    4c44:	cmp	x30, #0x0
    4c48:	add	x2, x2, x3
    4c4c:	cset	x3, ne  // ne = any
    4c50:	orr	x5, x3, x5, lsr #51
    4c54:	orr	x5, x5, x1, lsl #13
    4c58:	extr	x4, x2, x1, #51
    4c5c:	tbz	x2, #39, 5008 <PyInit__ctypes_test@@Base+0x1b18>
    4c60:	ldp	x19, x20, [sp, #16]
    4c64:	and	x1, x5, #0x1
    4c68:	ldp	x21, x22, [sp, #32]
    4c6c:	orr	x5, x1, x5, lsr #1
    4c70:	orr	x5, x5, x4, lsl #63
    4c74:	lsr	x4, x4, #1
    4c78:	mov	x1, #0x3fff                	// #16383
    4c7c:	add	x2, x18, x1
    4c80:	cmp	x2, #0x0
    4c84:	b.le	4e58 <PyInit__ctypes_test@@Base+0x1968>
    4c88:	tst	x5, #0x7
    4c8c:	b.eq	4cac <PyInit__ctypes_test@@Base+0x17bc>  // b.none
    4c90:	and	x1, x12, #0xc00000
    4c94:	orr	w0, w0, #0x10
    4c98:	cmp	x1, #0x400, lsl #12
    4c9c:	b.eq	50e0 <PyInit__ctypes_test@@Base+0x1bf0>  // b.none
    4ca0:	cmp	x1, #0x800, lsl #12
    4ca4:	b.eq	5070 <PyInit__ctypes_test@@Base+0x1b80>  // b.none
    4ca8:	cbz	x1, 509c <PyInit__ctypes_test@@Base+0x1bac>
    4cac:	tbz	x4, #52, 4cb8 <PyInit__ctypes_test@@Base+0x17c8>
    4cb0:	and	x4, x4, #0xffefffffffffffff
    4cb4:	add	x2, x18, #0x4, lsl #12
    4cb8:	mov	x1, #0x7ffe                	// #32766
    4cbc:	cmp	x2, x1
    4cc0:	b.gt	4fdc <PyInit__ctypes_test@@Base+0x1aec>
    4cc4:	and	w1, w2, #0x7fff
    4cc8:	extr	x7, x4, x5, #3
    4ccc:	ubfx	x4, x4, #3, #48
    4cd0:	b	4a54 <PyInit__ctypes_test@@Base+0x1564>
    4cd4:	mov	w0, w2
    4cd8:	mov	w11, #0x0                   	// #0
    4cdc:	mov	x4, #0xffffffffffff        	// #281474976710655
    4ce0:	mov	x7, #0xffffffffffffffff    	// #-1
    4ce4:	mov	w1, #0x7fff                	// #32767
    4ce8:	b	4a54 <PyInit__ctypes_test@@Base+0x1564>
    4cec:	mov	w15, w11
    4cf0:	mov	x13, x9
    4cf4:	b	4af0 <PyInit__ctypes_test@@Base+0x1600>
    4cf8:	cmp	x1, #0xb
    4cfc:	b.eq	4ae4 <PyInit__ctypes_test@@Base+0x15f4>  // b.none
    4d00:	mov	w15, w16
    4d04:	mov	x13, x14
    4d08:	b	4af0 <PyInit__ctypes_test@@Base+0x1600>
    4d0c:	orr	x7, x8, x1
    4d10:	cbz	x7, 4e34 <PyInit__ctypes_test@@Base+0x1944>
    4d14:	cbz	x8, 4f94 <PyInit__ctypes_test@@Base+0x1aa4>
    4d18:	clz	x0, x8
    4d1c:	sub	x4, x0, #0xf
    4d20:	add	w7, w4, #0x3
    4d24:	mov	w5, #0x3d                  	// #61
    4d28:	sub	w5, w5, w4
    4d2c:	lsl	x4, x8, x7
    4d30:	lsr	x5, x1, x5
    4d34:	orr	x8, x5, x4
    4d38:	lsl	x7, x1, x7
    4d3c:	mov	x10, #0xffffffffffffc011    	// #-16367
    4d40:	mov	x11, #0x2                   	// #2
    4d44:	sub	x10, x10, x0
    4d48:	b	49b4 <PyInit__ctypes_test@@Base+0x14c4>
    4d4c:	orr	x7, x8, x1
    4d50:	cbnz	x7, 4e08 <PyInit__ctypes_test@@Base+0x1918>
    4d54:	lsr	x5, x2, #63
    4d58:	ubfx	x4, x2, #0, #48
    4d5c:	and	w15, w5, #0xff
    4d60:	mov	x13, x5
    4d64:	mov	x8, #0x0                   	// #0
    4d68:	ubfx	x5, x2, #48, #15
    4d6c:	mov	x11, #0xa                   	// #10
    4d70:	mov	x9, #0x9                   	// #9
    4d74:	mov	x6, #0xb                   	// #11
    4d78:	mov	x1, #0x8                   	// #8
    4d7c:	mov	x10, #0x7fff                	// #32767
    4d80:	mov	x17, #0x2                   	// #2
    4d84:	mov	w0, #0x0                   	// #0
    4d88:	cbnz	w5, 49e0 <PyInit__ctypes_test@@Base+0x14f0>
    4d8c:	nop
    4d90:	orr	x5, x4, x3
    4d94:	cbz	x5, 4df8 <PyInit__ctypes_test@@Base+0x1908>
    4d98:	cbz	x4, 4fb8 <PyInit__ctypes_test@@Base+0x1ac8>
    4d9c:	clz	x6, x4
    4da0:	sub	x2, x6, #0xf
    4da4:	add	w5, w2, #0x3
    4da8:	mov	w9, #0x3d                  	// #61
    4dac:	sub	w9, w9, w2
    4db0:	lsl	x2, x4, x5
    4db4:	lsr	x9, x3, x9
    4db8:	orr	x4, x9, x2
    4dbc:	lsl	x5, x3, x5
    4dc0:	sub	x10, x10, x6
    4dc4:	mov	x3, #0xffffffffffffc011    	// #-16367
    4dc8:	mov	x6, #0x0                   	// #0
    4dcc:	add	x10, x10, x3
    4dd0:	b	4a0c <PyInit__ctypes_test@@Base+0x151c>
    4dd4:	mov	w1, #0x7fff                	// #32767
    4dd8:	mov	x4, #0x0                   	// #0
    4ddc:	mov	x7, #0x0                   	// #0
    4de0:	b	4a54 <PyInit__ctypes_test@@Base+0x1564>
    4de4:	mov	x1, x11
    4de8:	mov	x10, x2
    4dec:	mov	x4, #0x0                   	// #0
    4df0:	mov	x6, #0x2                   	// #2
    4df4:	b	4a0c <PyInit__ctypes_test@@Base+0x151c>
    4df8:	mov	x1, x9
    4dfc:	mov	x4, #0x0                   	// #0
    4e00:	mov	x6, #0x1                   	// #1
    4e04:	b	4a0c <PyInit__ctypes_test@@Base+0x151c>
    4e08:	lsr	x0, x8, #47
    4e0c:	mov	x7, x1
    4e10:	eor	x0, x0, #0x1
    4e14:	mov	x11, #0xe                   	// #14
    4e18:	and	w0, w0, #0x1
    4e1c:	mov	x9, #0xd                   	// #13
    4e20:	mov	x6, #0xf                   	// #15
    4e24:	mov	x1, #0xc                   	// #12
    4e28:	mov	x10, #0x7fff                	// #32767
    4e2c:	mov	x17, #0x3                   	// #3
    4e30:	b	49c8 <PyInit__ctypes_test@@Base+0x14d8>
    4e34:	mov	x8, #0x0                   	// #0
    4e38:	mov	x11, #0x6                   	// #6
    4e3c:	mov	x9, #0x5                   	// #5
    4e40:	mov	x6, #0x7                   	// #7
    4e44:	mov	x1, #0x4                   	// #4
    4e48:	mov	x10, #0x0                   	// #0
    4e4c:	mov	x17, #0x1                   	// #1
    4e50:	mov	w0, #0x0                   	// #0
    4e54:	b	49c8 <PyInit__ctypes_test@@Base+0x14d8>
    4e58:	mov	x1, #0x1                   	// #1
    4e5c:	sub	x2, x1, x2
    4e60:	cmp	x2, #0x74
    4e64:	b.gt	4f38 <PyInit__ctypes_test@@Base+0x1a48>
    4e68:	cmp	x2, #0x3f
    4e6c:	b.le	5018 <PyInit__ctypes_test@@Base+0x1b28>
    4e70:	mov	w1, #0x80                  	// #128
    4e74:	sub	w1, w1, w2
    4e78:	cmp	x2, #0x40
    4e7c:	sub	w2, w2, #0x40
    4e80:	lsl	x1, x4, x1
    4e84:	orr	x1, x5, x1
    4e88:	csel	x5, x1, x5, ne  // ne = any
    4e8c:	lsr	x2, x4, x2
    4e90:	cmp	x5, #0x0
    4e94:	cset	x7, ne  // ne = any
    4e98:	orr	x7, x7, x2
    4e9c:	ands	x4, x7, #0x7
    4ea0:	b.eq	504c <PyInit__ctypes_test@@Base+0x1b5c>  // b.none
    4ea4:	mov	x4, #0x0                   	// #0
    4ea8:	and	x12, x12, #0xc00000
    4eac:	orr	w0, w0, #0x10
    4eb0:	cmp	x12, #0x400, lsl #12
    4eb4:	b.eq	5118 <PyInit__ctypes_test@@Base+0x1c28>  // b.none
    4eb8:	cmp	x12, #0x800, lsl #12
    4ebc:	b.eq	5104 <PyInit__ctypes_test@@Base+0x1c14>  // b.none
    4ec0:	cbz	x12, 50b4 <PyInit__ctypes_test@@Base+0x1bc4>
    4ec4:	tbnz	x4, #51, 50cc <PyInit__ctypes_test@@Base+0x1bdc>
    4ec8:	orr	w0, w0, #0x8
    4ecc:	extr	x7, x4, x7, #3
    4ed0:	mov	w1, #0x0                   	// #0
    4ed4:	ubfx	x4, x4, #3, #48
    4ed8:	b	4f68 <PyInit__ctypes_test@@Base+0x1a78>
    4edc:	cmp	x6, #0xf
    4ee0:	b.ne	4f14 <PyInit__ctypes_test@@Base+0x1a24>  // b.any
    4ee4:	tbz	x8, #47, 4f00 <PyInit__ctypes_test@@Base+0x1a10>
    4ee8:	cbnz	x1, 4f00 <PyInit__ctypes_test@@Base+0x1a10>
    4eec:	orr	x4, x4, #0x800000000000
    4ef0:	mov	w11, w15
    4ef4:	mov	x7, x3
    4ef8:	mov	w1, #0x7fff                	// #32767
    4efc:	b	4a54 <PyInit__ctypes_test@@Base+0x1564>
    4f00:	orr	x4, x8, #0x800000000000
    4f04:	mov	w11, w16
    4f08:	and	x4, x4, #0xffffffffffff
    4f0c:	mov	w1, #0x7fff                	// #32767
    4f10:	b	4a54 <PyInit__ctypes_test@@Base+0x1564>
    4f14:	cmp	x6, #0xb
    4f18:	b.ne	4d00 <PyInit__ctypes_test@@Base+0x1810>  // b.any
    4f1c:	mov	w11, w15
    4f20:	mov	x5, x3
    4f24:	orr	x4, x4, #0x800000000000
    4f28:	mov	x7, x5
    4f2c:	and	x4, x4, #0xffffffffffff
    4f30:	mov	w1, #0x7fff                	// #32767
    4f34:	b	4a54 <PyInit__ctypes_test@@Base+0x1564>
    4f38:	orr	x7, x5, x4
    4f3c:	cbz	x7, 4f5c <PyInit__ctypes_test@@Base+0x1a6c>
    4f40:	and	x12, x12, #0xc00000
    4f44:	orr	w0, w0, #0x10
    4f48:	cmp	x12, #0x400, lsl #12
    4f4c:	sub	x7, x1, x9
    4f50:	b.eq	4f5c <PyInit__ctypes_test@@Base+0x1a6c>  // b.none
    4f54:	cmp	x12, #0x800, lsl #12
    4f58:	csel	x7, x9, xzr, eq  // eq = none
    4f5c:	orr	w0, w0, #0x8
    4f60:	mov	w1, #0x0                   	// #0
    4f64:	mov	x4, #0x0                   	// #0
    4f68:	mov	x3, #0x0                   	// #0
    4f6c:	fmov	d0, x7
    4f70:	bfxil	x3, x4, #0, #48
    4f74:	bfi	x3, x1, #48, #15
    4f78:	bfi	x3, x11, #63, #1
    4f7c:	fmov	v0.d[1], x3
    4f80:	str	q0, [sp, #48]
    4f84:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    4f88:	ldr	q0, [sp, #48]
    4f8c:	ldp	x29, x30, [sp], #80
    4f90:	ret
    4f94:	clz	x10, x1
    4f98:	add	x4, x10, #0x31
    4f9c:	add	x0, x10, #0x40
    4fa0:	cmp	x4, #0x3c
    4fa4:	b.le	4d20 <PyInit__ctypes_test@@Base+0x1830>
    4fa8:	sub	w4, w4, #0x3d
    4fac:	mov	x7, #0x0                   	// #0
    4fb0:	lsl	x8, x1, x4
    4fb4:	b	4d3c <PyInit__ctypes_test@@Base+0x184c>
    4fb8:	clz	x6, x3
    4fbc:	add	x2, x6, #0x31
    4fc0:	add	x6, x6, #0x40
    4fc4:	cmp	x2, #0x3c
    4fc8:	b.le	4da4 <PyInit__ctypes_test@@Base+0x18b4>
    4fcc:	sub	w2, w2, #0x3d
    4fd0:	mov	x5, #0x0                   	// #0
    4fd4:	lsl	x4, x3, x2
    4fd8:	b	4dc0 <PyInit__ctypes_test@@Base+0x18d0>
    4fdc:	and	x7, x12, #0xc00000
    4fe0:	cmp	x7, #0x400, lsl #12
    4fe4:	b.eq	50e8 <PyInit__ctypes_test@@Base+0x1bf8>  // b.none
    4fe8:	cmp	x7, #0x800, lsl #12
    4fec:	b.eq	5080 <PyInit__ctypes_test@@Base+0x1b90>  // b.none
    4ff0:	cbz	x7, 5064 <PyInit__ctypes_test@@Base+0x1b74>
    4ff4:	mov	x4, #0xffffffffffff        	// #281474976710655
    4ff8:	mov	x7, #0xffffffffffffffff    	// #-1
    4ffc:	mov	w2, #0x14                  	// #20
    5000:	orr	w0, w0, w2
    5004:	b	4f68 <PyInit__ctypes_test@@Base+0x1a78>
    5008:	mov	x18, x10
    500c:	ldp	x19, x20, [sp, #16]
    5010:	ldp	x21, x22, [sp, #32]
    5014:	b	4c78 <PyInit__ctypes_test@@Base+0x1788>
    5018:	mov	w1, #0x40                  	// #64
    501c:	sub	w1, w1, w2
    5020:	lsr	x3, x5, x2
    5024:	lsl	x5, x5, x1
    5028:	cmp	x5, #0x0
    502c:	lsl	x7, x4, x1
    5030:	cset	x1, ne  // ne = any
    5034:	orr	x7, x7, x3
    5038:	lsr	x4, x4, x2
    503c:	orr	x7, x7, x1
    5040:	tst	x7, #0x7
    5044:	b.ne	4ea8 <PyInit__ctypes_test@@Base+0x19b8>  // b.any
    5048:	tbnz	x4, #51, 5124 <PyInit__ctypes_test@@Base+0x1c34>
    504c:	mov	w1, #0x0                   	// #0
    5050:	extr	x7, x4, x7, #3
    5054:	ubfx	x4, x4, #3, #48
    5058:	tbz	w12, #11, 4a54 <PyInit__ctypes_test@@Base+0x1564>
    505c:	orr	w0, w0, #0x8
    5060:	b	4f68 <PyInit__ctypes_test@@Base+0x1a78>
    5064:	mov	w1, #0x7fff                	// #32767
    5068:	mov	x4, #0x0                   	// #0
    506c:	b	4ffc <PyInit__ctypes_test@@Base+0x1b0c>
    5070:	cbz	x9, 4cac <PyInit__ctypes_test@@Base+0x17bc>
    5074:	adds	x5, x5, #0x8
    5078:	cinc	x4, x4, cs  // cs = hs, nlast
    507c:	b	4cac <PyInit__ctypes_test@@Base+0x17bc>
    5080:	cmp	x9, #0x0
    5084:	mov	w2, #0x7fff                	// #32767
    5088:	mov	x4, #0xffffffffffff        	// #281474976710655
    508c:	csel	w1, w1, w2, eq  // eq = none
    5090:	csel	x4, x4, xzr, eq  // eq = none
    5094:	csetm	x7, eq  // eq = none
    5098:	b	4ffc <PyInit__ctypes_test@@Base+0x1b0c>
    509c:	and	x1, x5, #0xf
    50a0:	cmp	x1, #0x4
    50a4:	b.eq	4cac <PyInit__ctypes_test@@Base+0x17bc>  // b.none
    50a8:	adds	x5, x5, #0x4
    50ac:	cinc	x4, x4, cs  // cs = hs, nlast
    50b0:	b	4cac <PyInit__ctypes_test@@Base+0x17bc>
    50b4:	and	x1, x7, #0xf
    50b8:	cmp	x1, #0x4
    50bc:	b.eq	50c8 <PyInit__ctypes_test@@Base+0x1bd8>  // b.none
    50c0:	adds	x7, x7, #0x4
    50c4:	cinc	x4, x4, cs  // cs = hs, nlast
    50c8:	tbz	x4, #51, 4ec8 <PyInit__ctypes_test@@Base+0x19d8>
    50cc:	orr	w0, w0, #0x8
    50d0:	mov	w1, #0x1                   	// #1
    50d4:	mov	x4, #0x0                   	// #0
    50d8:	mov	x7, #0x0                   	// #0
    50dc:	b	4f68 <PyInit__ctypes_test@@Base+0x1a78>
    50e0:	cbnz	x9, 4cac <PyInit__ctypes_test@@Base+0x17bc>
    50e4:	b	5074 <PyInit__ctypes_test@@Base+0x1b84>
    50e8:	cmp	x9, #0x0
    50ec:	mov	w2, #0x7fff                	// #32767
    50f0:	mov	x4, #0xffffffffffff        	// #281474976710655
    50f4:	csel	w1, w1, w2, ne  // ne = any
    50f8:	csel	x4, x4, xzr, ne  // ne = any
    50fc:	csetm	x7, ne  // ne = any
    5100:	b	4ffc <PyInit__ctypes_test@@Base+0x1b0c>
    5104:	cbz	x9, 50c8 <PyInit__ctypes_test@@Base+0x1bd8>
    5108:	adds	x7, x7, #0x8
    510c:	cinc	x4, x4, cs  // cs = hs, nlast
    5110:	tbnz	x4, #51, 50cc <PyInit__ctypes_test@@Base+0x1bdc>
    5114:	b	4ec8 <PyInit__ctypes_test@@Base+0x19d8>
    5118:	cbz	x9, 5108 <PyInit__ctypes_test@@Base+0x1c18>
    511c:	tbnz	x4, #51, 50cc <PyInit__ctypes_test@@Base+0x1bdc>
    5120:	b	4ec8 <PyInit__ctypes_test@@Base+0x19d8>
    5124:	orr	w0, w0, #0x10
    5128:	b	50cc <PyInit__ctypes_test@@Base+0x1bdc>
    512c:	mov	w11, w15
    5130:	mov	w1, #0x7fff                	// #32767
    5134:	mov	x4, #0x0                   	// #0
    5138:	mov	x7, #0x0                   	// #0
    513c:	b	4a54 <PyInit__ctypes_test@@Base+0x1564>
    5140:	stp	x29, x30, [sp, #-48]!
    5144:	mov	x29, sp
    5148:	str	x19, [sp, #16]
    514c:	str	q0, [sp, #32]
    5150:	ldp	x2, x0, [sp, #32]
    5154:	mrs	x1, fpcr
    5158:	ubfx	x19, x0, #48, #15
    515c:	mov	x3, #0x3ffe                	// #16382
    5160:	ubfx	x4, x0, #0, #48
    5164:	cmp	x19, x3
    5168:	b.gt	5190 <PyInit__ctypes_test@@Base+0x1ca0>
    516c:	cbnz	x19, 5230 <PyInit__ctypes_test@@Base+0x1d40>
    5170:	orr	x2, x4, x2
    5174:	cbz	x2, 5180 <PyInit__ctypes_test@@Base+0x1c90>
    5178:	mov	w0, #0x10                  	// #16
    517c:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    5180:	mov	x0, x19
    5184:	ldr	x19, [sp, #16]
    5188:	ldp	x29, x30, [sp], #48
    518c:	ret
    5190:	lsr	x1, x0, #63
    5194:	and	w3, w1, #0xff
    5198:	mov	x1, #0x403d                	// #16445
    519c:	cmp	x19, x1
    51a0:	b.le	51d8 <PyInit__ctypes_test@@Base+0x1ce8>
    51a4:	mov	x0, #0x403e                	// #16446
    51a8:	and	x5, x3, #0xff
    51ac:	cmp	x19, x0
    51b0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    51b4:	csel	w1, w3, wzr, eq  // eq = none
    51b8:	add	x19, x5, x0
    51bc:	cbz	w1, 5240 <PyInit__ctypes_test@@Base+0x1d50>
    51c0:	extr	x4, x4, x2, #49
    51c4:	cbnz	x4, 5240 <PyInit__ctypes_test@@Base+0x1d50>
    51c8:	cmp	xzr, x2, lsl #15
    51cc:	b.eq	5180 <PyInit__ctypes_test@@Base+0x1c90>  // b.none
    51d0:	mov	w0, #0x10                  	// #16
    51d4:	b	517c <PyInit__ctypes_test@@Base+0x1c8c>
    51d8:	mov	x5, #0x406f                	// #16495
    51dc:	sub	x1, x5, x19
    51e0:	mov	x0, x19
    51e4:	cmp	x1, #0x3f
    51e8:	orr	x19, x4, #0x1000000000000
    51ec:	b.le	524c <PyInit__ctypes_test@@Base+0x1d5c>
    51f0:	mov	w4, #0xffffc011            	// #-16367
    51f4:	add	w4, w0, w4
    51f8:	cmp	x1, #0x40
    51fc:	mov	w1, #0x402f                	// #16431
    5200:	sub	w0, w1, w0
    5204:	lsl	x1, x19, x4
    5208:	orr	x1, x2, x1
    520c:	csel	x2, x1, x2, ne  // ne = any
    5210:	lsr	x19, x19, x0
    5214:	cmp	x2, #0x0
    5218:	cset	w0, ne  // ne = any
    521c:	cmp	w3, #0x0
    5220:	cneg	x19, x19, ne  // ne = any
    5224:	cbz	w0, 5180 <PyInit__ctypes_test@@Base+0x1c90>
    5228:	mov	w0, #0x10                  	// #16
    522c:	b	517c <PyInit__ctypes_test@@Base+0x1c8c>
    5230:	mov	x19, #0x0                   	// #0
    5234:	mov	w0, #0x10                  	// #16
    5238:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    523c:	b	5180 <PyInit__ctypes_test@@Base+0x1c90>
    5240:	mov	w0, #0x1                   	// #1
    5244:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    5248:	b	5180 <PyInit__ctypes_test@@Base+0x1c90>
    524c:	mov	w6, #0xffffbfd1            	// #-16431
    5250:	add	w4, w0, w6
    5254:	sub	w0, w5, w0
    5258:	lsl	x1, x2, x4
    525c:	cmp	x1, #0x0
    5260:	lsr	x2, x2, x0
    5264:	cset	w0, ne  // ne = any
    5268:	lsl	x19, x19, x4
    526c:	orr	x19, x2, x19
    5270:	b	521c <PyInit__ctypes_test@@Base+0x1d2c>
    5274:	nop
    5278:	mrs	x0, fpcr
    527c:	fmov	w0, s0
    5280:	ubfx	x2, x0, #23, #8
    5284:	and	x1, x0, #0x7fffff
    5288:	add	x3, x2, #0x1
    528c:	ubfx	x5, x0, #0, #23
    5290:	tst	x3, #0xfe
    5294:	lsr	w0, w0, #31
    5298:	b.eq	52c8 <PyInit__ctypes_test@@Base+0x1dd8>  // b.none
    529c:	lsl	x1, x1, #25
    52a0:	mov	w3, #0x3f80                	// #16256
    52a4:	add	w4, w2, w3
    52a8:	mov	x3, #0x0                   	// #0
    52ac:	bfxil	x3, x1, #0, #48
    52b0:	mov	x2, #0x0                   	// #0
    52b4:	fmov	d0, x2
    52b8:	bfi	x3, x4, #48, #15
    52bc:	bfi	x3, x0, #63, #1
    52c0:	fmov	v0.d[1], x3
    52c4:	ret
    52c8:	cbnz	w2, 52f8 <PyInit__ctypes_test@@Base+0x1e08>
    52cc:	cbnz	x1, 5344 <PyInit__ctypes_test@@Base+0x1e54>
    52d0:	mov	x1, #0x0                   	// #0
    52d4:	mov	x3, #0x0                   	// #0
    52d8:	bfxil	x3, x1, #0, #48
    52dc:	mov	w4, #0x0                   	// #0
    52e0:	mov	x2, #0x0                   	// #0
    52e4:	fmov	d0, x2
    52e8:	bfi	x3, x4, #48, #15
    52ec:	bfi	x3, x0, #63, #1
    52f0:	fmov	v0.d[1], x3
    52f4:	ret
    52f8:	cbz	x1, 5380 <PyInit__ctypes_test@@Base+0x1e90>
    52fc:	lsl	x1, x1, #25
    5300:	mov	x3, #0x0                   	// #0
    5304:	orr	x1, x1, #0x800000000000
    5308:	mov	x2, #0x0                   	// #0
    530c:	fmov	d0, x2
    5310:	bfxil	x3, x1, #0, #48
    5314:	orr	x3, x3, #0x7fff000000000000
    5318:	bfi	x3, x0, #63, #1
    531c:	fmov	v0.d[1], x3
    5320:	tbnz	w5, #22, 53a8 <PyInit__ctypes_test@@Base+0x1eb8>
    5324:	stp	x29, x30, [sp, #-32]!
    5328:	mov	w0, #0x1                   	// #1
    532c:	mov	x29, sp
    5330:	str	q0, [sp, #16]
    5334:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    5338:	ldr	q0, [sp, #16]
    533c:	ldp	x29, x30, [sp], #32
    5340:	ret
    5344:	clz	x4, x1
    5348:	mov	w2, #0x3fa9                	// #16297
    534c:	sub	w3, w4, #0xf
    5350:	sub	w2, w2, w4
    5354:	and	w4, w2, #0x7fff
    5358:	mov	x2, #0x0                   	// #0
    535c:	lsl	x1, x1, x3
    5360:	and	x1, x1, #0xffffffffffff
    5364:	mov	x3, #0x0                   	// #0
    5368:	fmov	d0, x2
    536c:	bfxil	x3, x1, #0, #48
    5370:	bfi	x3, x4, #48, #15
    5374:	bfi	x3, x0, #63, #1
    5378:	fmov	v0.d[1], x3
    537c:	ret
    5380:	mov	x1, #0x0                   	// #0
    5384:	mov	x3, #0x0                   	// #0
    5388:	bfxil	x3, x1, #0, #48
    538c:	mov	w4, #0x7fff                	// #32767
    5390:	mov	x2, #0x0                   	// #0
    5394:	fmov	d0, x2
    5398:	bfi	x3, x4, #48, #15
    539c:	bfi	x3, x0, #63, #1
    53a0:	fmov	v0.d[1], x3
    53a4:	ret
    53a8:	ret
    53ac:	nop
    53b0:	mrs	x0, fpcr
    53b4:	fmov	x0, d0
    53b8:	ubfx	x1, x0, #52, #11
    53bc:	lsr	x4, x0, #63
    53c0:	add	x2, x1, #0x1
    53c4:	and	w4, w4, #0xff
    53c8:	tst	x2, #0x7fe
    53cc:	ubfx	x0, x0, #0, #52
    53d0:	b.eq	5404 <PyInit__ctypes_test@@Base+0x1f14>  // b.none
    53d4:	lsr	x5, x0, #4
    53d8:	mov	x3, #0x0                   	// #0
    53dc:	and	x5, x5, #0xffffffffffff
    53e0:	mov	w2, #0x3c00                	// #15360
    53e4:	add	w1, w1, w2
    53e8:	lsl	x0, x0, #60
    53ec:	bfxil	x3, x5, #0, #48
    53f0:	fmov	d0, x0
    53f4:	bfi	x3, x1, #48, #15
    53f8:	bfi	x3, x4, #63, #1
    53fc:	fmov	v0.d[1], x3
    5400:	ret
    5404:	cbnz	x1, 5458 <PyInit__ctypes_test@@Base+0x1f68>
    5408:	cbz	x0, 54a4 <PyInit__ctypes_test@@Base+0x1fb4>
    540c:	clz	x2, x0
    5410:	cmp	w2, #0xe
    5414:	b.gt	54f0 <PyInit__ctypes_test@@Base+0x2000>
    5418:	add	w1, w2, #0x31
    541c:	mov	w5, #0xf                   	// #15
    5420:	sub	w5, w5, w2
    5424:	lsr	x5, x0, x5
    5428:	lsl	x0, x0, x1
    542c:	and	x5, x5, #0xffffffffffff
    5430:	mov	w1, #0x3c0c                	// #15372
    5434:	mov	x3, #0x0                   	// #0
    5438:	sub	w1, w1, w2
    543c:	and	w1, w1, #0x7fff
    5440:	bfxil	x3, x5, #0, #48
    5444:	fmov	d0, x0
    5448:	bfi	x3, x1, #48, #15
    544c:	bfi	x3, x4, #63, #1
    5450:	fmov	v0.d[1], x3
    5454:	ret
    5458:	cbz	x0, 54c8 <PyInit__ctypes_test@@Base+0x1fd8>
    545c:	lsr	x1, x0, #4
    5460:	mov	x3, #0x0                   	// #0
    5464:	orr	x1, x1, #0x800000000000
    5468:	lsl	x2, x0, #60
    546c:	fmov	d0, x2
    5470:	bfxil	x3, x1, #0, #48
    5474:	orr	x3, x3, #0x7fff000000000000
    5478:	bfi	x3, x4, #63, #1
    547c:	fmov	v0.d[1], x3
    5480:	tbnz	x0, #51, 54ec <PyInit__ctypes_test@@Base+0x1ffc>
    5484:	stp	x29, x30, [sp, #-32]!
    5488:	mov	w0, #0x1                   	// #1
    548c:	mov	x29, sp
    5490:	str	q0, [sp, #16]
    5494:	bl	5500 <PyInit__ctypes_test@@Base+0x2010>
    5498:	ldr	q0, [sp, #16]
    549c:	ldp	x29, x30, [sp], #32
    54a0:	ret
    54a4:	mov	x5, #0x0                   	// #0
    54a8:	mov	x3, #0x0                   	// #0
    54ac:	bfxil	x3, x5, #0, #48
    54b0:	mov	w1, #0x0                   	// #0
    54b4:	fmov	d0, x0
    54b8:	bfi	x3, x1, #48, #15
    54bc:	bfi	x3, x4, #63, #1
    54c0:	fmov	v0.d[1], x3
    54c4:	ret
    54c8:	mov	x5, #0x0                   	// #0
    54cc:	mov	x3, #0x0                   	// #0
    54d0:	bfxil	x3, x5, #0, #48
    54d4:	mov	w1, #0x7fff                	// #32767
    54d8:	fmov	d0, x0
    54dc:	bfi	x3, x1, #48, #15
    54e0:	bfi	x3, x4, #63, #1
    54e4:	fmov	v0.d[1], x3
    54e8:	ret
    54ec:	ret
    54f0:	sub	w5, w2, #0xf
    54f4:	lsl	x5, x0, x5
    54f8:	mov	x0, #0x0                   	// #0
    54fc:	b	542c <PyInit__ctypes_test@@Base+0x1f3c>
    5500:	tbz	w0, #0, 5510 <PyInit__ctypes_test@@Base+0x2020>
    5504:	movi	v1.2s, #0x0
    5508:	fdiv	s0, s1, s1
    550c:	mrs	x1, fpsr
    5510:	tbz	w0, #1, 5524 <PyInit__ctypes_test@@Base+0x2034>
    5514:	fmov	s1, #1.000000000000000000e+00
    5518:	movi	v2.2s, #0x0
    551c:	fdiv	s0, s1, s2
    5520:	mrs	x1, fpsr
    5524:	tbz	w0, #2, 5544 <PyInit__ctypes_test@@Base+0x2054>
    5528:	mov	w2, #0xc5ae                	// #50606
    552c:	mov	w1, #0x7f7fffff            	// #2139095039
    5530:	movk	w2, #0x749d, lsl #16
    5534:	fmov	s1, w1
    5538:	fmov	s2, w2
    553c:	fadd	s0, s1, s2
    5540:	mrs	x1, fpsr
    5544:	tbz	w0, #3, 5554 <PyInit__ctypes_test@@Base+0x2064>
    5548:	movi	v1.2s, #0x80, lsl #16
    554c:	fmul	s0, s1, s1
    5550:	mrs	x1, fpsr
    5554:	tbz	w0, #4, 556c <PyInit__ctypes_test@@Base+0x207c>
    5558:	mov	w0, #0x7f7fffff            	// #2139095039
    555c:	fmov	s2, #1.000000000000000000e+00
    5560:	fmov	s1, w0
    5564:	fsub	s0, s1, s2
    5568:	mrs	x0, fpsr
    556c:	ret

Disassembly of section .fini:

0000000000005570 <.fini>:
    5570:	stp	x29, x30, [sp, #-16]!
    5574:	mov	x29, sp
    5578:	ldp	x29, x30, [sp], #16
    557c:	ret
