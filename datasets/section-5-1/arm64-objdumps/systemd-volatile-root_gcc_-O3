
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-volatile-root_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ff8 <_init>:
  400ff8:	stp	x29, x30, [sp, #-16]!
  400ffc:	mov	x29, sp
  401000:	bl	401b88 <call_weak_fn>
  401004:	ldp	x29, x30, [sp], #16
  401008:	ret

Disassembly of section .plt:

0000000000401010 <.plt>:
  401010:	stp	x16, x30, [sp, #-16]!
  401014:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401018:	ldr	x17, [x16, #3784]
  40101c:	add	x16, x16, #0xec8
  401020:	br	x17
  401024:	nop
  401028:	nop
  40102c:	nop

0000000000401030 <mount_verbose@plt>:
  401030:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401034:	ldr	x17, [x16, #3792]
  401038:	add	x16, x16, #0xed0
  40103c:	br	x17

0000000000401040 <stpcpy@plt>:
  401040:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401044:	ldr	x17, [x16, #3800]
  401048:	add	x16, x16, #0xed8
  40104c:	br	x17

0000000000401050 <__libc_start_main@plt>:
  401050:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401054:	ldr	x17, [x16, #3808]
  401058:	add	x16, x16, #0xee0
  40105c:	br	x17

0000000000401060 <__gmon_start__@plt>:
  401060:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401064:	ldr	x17, [x16, #3816]
  401068:	add	x16, x16, #0xee8
  40106c:	br	x17

0000000000401070 <chase_symlinks@plt>:
  401070:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401074:	ldr	x17, [x16, #3824]
  401078:	add	x16, x16, #0xef0
  40107c:	br	x17

0000000000401080 <polkit_agent_close@plt>:
  401080:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401084:	ldr	x17, [x16, #3832]
  401088:	add	x16, x16, #0xef8
  40108c:	br	x17

0000000000401090 <umount_verbose@plt>:
  401090:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401094:	ldr	x17, [x16, #3840]
  401098:	add	x16, x16, #0xf00
  40109c:	br	x17

00000000004010a0 <query_volatile_mode@plt>:
  4010a0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4010a4:	ldr	x17, [x16, #3848]
  4010a8:	add	x16, x16, #0xf08
  4010ac:	br	x17

00000000004010b0 <path_equal@plt>:
  4010b0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4010b4:	ldr	x17, [x16, #3856]
  4010b8:	add	x16, x16, #0xf10
  4010bc:	br	x17

00000000004010c0 <device_path_make_major_minor@plt>:
  4010c0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4010c4:	ldr	x17, [x16, #3864]
  4010c8:	add	x16, x16, #0xf18
  4010cc:	br	x17

00000000004010d0 <symlink@plt>:
  4010d0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4010d4:	ldr	x17, [x16, #3872]
  4010d8:	add	x16, x16, #0xf20
  4010dc:	br	x17

00000000004010e0 <volatile_mode_from_string@plt>:
  4010e0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4010e4:	ldr	x17, [x16, #3880]
  4010e8:	add	x16, x16, #0xf28
  4010ec:	br	x17

00000000004010f0 <log_setup_service@plt>:
  4010f0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4010f4:	ldr	x17, [x16, #3888]
  4010f8:	add	x16, x16, #0xf30
  4010fc:	br	x17

0000000000401100 <log_assert_failed_realm@plt>:
  401100:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401104:	ldr	x17, [x16, #3896]
  401108:	add	x16, x16, #0xf38
  40110c:	br	x17

0000000000401110 <path_is_absolute@plt>:
  401110:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401114:	ldr	x17, [x16, #3904]
  401118:	add	x16, x16, #0xf40
  40111c:	br	x17

0000000000401120 <abort@plt>:
  401120:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401124:	ldr	x17, [x16, #3912]
  401128:	add	x16, x16, #0xf48
  40112c:	br	x17

0000000000401130 <get_block_device_harder@plt>:
  401130:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401134:	ldr	x17, [x16, #3920]
  401138:	add	x16, x16, #0xf50
  40113c:	br	x17

0000000000401140 <rmdir@plt>:
  401140:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401144:	ldr	x17, [x16, #3928]
  401148:	add	x16, x16, #0xf58
  40114c:	br	x17

0000000000401150 <__errno_location@plt>:
  401150:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401154:	ldr	x17, [x16, #3936]
  401158:	add	x16, x16, #0xf60
  40115c:	br	x17

0000000000401160 <__stack_chk_fail@plt>:
  401160:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401164:	ldr	x17, [x16, #3944]
  401168:	add	x16, x16, #0xf68
  40116c:	br	x17

0000000000401170 <path_is_temporary_fs@plt>:
  401170:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401174:	ldr	x17, [x16, #3952]
  401178:	add	x16, x16, #0xf70
  40117c:	br	x17

0000000000401180 <ask_password_agent_close@plt>:
  401180:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401184:	ldr	x17, [x16, #3960]
  401188:	add	x16, x16, #0xf78
  40118c:	br	x17

0000000000401190 <umount_recursive@plt>:
  401190:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401194:	ldr	x17, [x16, #3968]
  401198:	add	x16, x16, #0xf80
  40119c:	br	x17

00000000004011a0 <pager_close@plt>:
  4011a0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4011a4:	ldr	x17, [x16, #3976]
  4011a8:	add	x16, x16, #0xf88
  4011ac:	br	x17

00000000004011b0 <shell_escape@plt>:
  4011b0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4011b4:	ldr	x17, [x16, #3984]
  4011b8:	add	x16, x16, #0xf90
  4011bc:	br	x17

00000000004011c0 <log_internal_realm@plt>:
  4011c0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4011c4:	ldr	x17, [x16, #3992]
  4011c8:	add	x16, x16, #0xf98
  4011cc:	br	x17

00000000004011d0 <path_is_mount_point@plt>:
  4011d0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4011d4:	ldr	x17, [x16, #4000]
  4011d8:	add	x16, x16, #0xfa0
  4011dc:	br	x17

00000000004011e0 <mkdir@plt>:
  4011e0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4011e4:	ldr	x17, [x16, #4008]
  4011e8:	add	x16, x16, #0xfa8
  4011ec:	br	x17

00000000004011f0 <mount@plt>:
  4011f0:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  4011f4:	ldr	x17, [x16, #4016]
  4011f8:	add	x16, x16, #0xfb0
  4011fc:	br	x17

0000000000401200 <free@plt>:
  401200:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401204:	ldr	x17, [x16, #4024]
  401208:	add	x16, x16, #0xfb8
  40120c:	br	x17

0000000000401210 <bind_remount_recursive@plt>:
  401210:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401214:	ldr	x17, [x16, #4032]
  401218:	add	x16, x16, #0xfc0
  40121c:	br	x17

0000000000401220 <mac_selinux_finish@plt>:
  401220:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401224:	ldr	x17, [x16, #4040]
  401228:	add	x16, x16, #0xfc8
  40122c:	br	x17

0000000000401230 <mkdir_p@plt>:
  401230:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401234:	ldr	x17, [x16, #4048]
  401238:	add	x16, x16, #0xfd0
  40123c:	br	x17

0000000000401240 <strlen@plt>:
  401240:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401244:	ldr	x17, [x16, #4056]
  401248:	add	x16, x16, #0xfd8
  40124c:	br	x17

0000000000401250 <log_oom_internal@plt>:
  401250:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401254:	ldr	x17, [x16, #4064]
  401258:	add	x16, x16, #0xfe0
  40125c:	br	x17

0000000000401260 <log_get_max_level_realm@plt>:
  401260:	adrp	x16, 412000 <__FRAME_END__+0xf800>
  401264:	ldr	x17, [x16, #4072]
  401268:	add	x16, x16, #0xfe8
  40126c:	br	x17

Disassembly of section .text:

0000000000401270 <main>:
  401270:	stp	x29, x30, [sp, #-96]!
  401274:	adrp	x3, 413000 <saved_argv@@SD_SHARED>
  401278:	adrp	x2, 413000 <saved_argv@@SD_SHARED>
  40127c:	mov	x29, sp
  401280:	stp	x21, x22, [sp, #32]
  401284:	adrp	x22, 412000 <__FRAME_END__+0xf800>
  401288:	add	x22, x22, #0xc80
  40128c:	str	w0, [x3, #8]
  401290:	stp	x19, x20, [sp, #16]
  401294:	mov	w19, w0
  401298:	ldr	x0, [x22]
  40129c:	str	x0, [sp, #88]
  4012a0:	mov	x0, #0x0                   	// #0
  4012a4:	mov	w0, #0xffffffff            	// #-1
  4012a8:	mov	x20, x1
  4012ac:	str	x1, [x2]
  4012b0:	str	w0, [sp, #68]
  4012b4:	bl	4010f0 <log_setup_service@plt>
  4012b8:	cmp	w19, #0x3
  4012bc:	b.le	401340 <main+0xd0>
  4012c0:	mov	w0, #0x0                   	// #0
  4012c4:	bl	401260 <log_get_max_level_realm@plt>
  4012c8:	cmp	w0, #0x2
  4012cc:	b.gt	401384 <main+0x114>
  4012d0:	mov	w20, #0xffffffea            	// #-22
  4012d4:	bl	401180 <ask_password_agent_close@plt>
  4012d8:	bl	401080 <polkit_agent_close@plt>
  4012dc:	bl	4011a0 <pager_close@plt>
  4012e0:	bl	401220 <mac_selinux_finish@plt>
  4012e4:	adrp	x0, 402000 <_fini+0x14>
  4012e8:	ldr	x19, [x0, #1560]
  4012ec:	cbz	x19, 40131c <main+0xac>
  4012f0:	adrp	x0, 402000 <_fini+0x14>
  4012f4:	add	x19, x19, #0x7
  4012f8:	and	x19, x19, #0xfffffffffffffff8
  4012fc:	ldr	x21, [x0, #1568]
  401300:	cmp	x19, x21
  401304:	b.cs	40131c <main+0xac>  // b.hs, b.nlast
  401308:	ldp	x0, x1, [x19]
  40130c:	add	x19, x19, #0x10
  401310:	blr	x1
  401314:	cmp	x19, x21
  401318:	b.cc	401308 <main+0x98>  // b.lo, b.ul, b.last
  40131c:	lsr	w0, w20, #31
  401320:	ldr	x2, [sp, #88]
  401324:	ldr	x1, [x22]
  401328:	eor	x1, x2, x1
  40132c:	cbnz	x1, 4017cc <main+0x55c>
  401330:	ldp	x19, x20, [sp, #16]
  401334:	ldp	x21, x22, [sp, #32]
  401338:	ldp	x29, x30, [sp], #96
  40133c:	ret
  401340:	add	x0, sp, #0x44
  401344:	bl	4010a0 <query_volatile_mode@plt>
  401348:	mov	w21, w0
  40134c:	cmp	w0, #0x0
  401350:	b.lt	40141c <main+0x1ac>  // b.tstop
  401354:	ccmp	w19, #0x1, #0x4, eq  // eq = none
  401358:	b.gt	40143c <main+0x1cc>
  40135c:	cmp	w19, #0x3
  401360:	b.eq	401494 <main+0x224>  // b.none
  401364:	adrp	x0, 402000 <_fini+0x14>
  401368:	add	x21, x0, #0x200
  40136c:	ldr	w0, [sp, #68]
  401370:	and	w0, w0, #0xfffffffd
  401374:	cmp	w0, #0x1
  401378:	b.eq	4013b8 <main+0x148>  // b.none
  40137c:	mov	w20, #0x0                   	// #0
  401380:	b	4012d4 <main+0x64>
  401384:	mov	w1, #0x16                  	// #22
  401388:	adrp	x5, 402000 <_fini+0x14>
  40138c:	movk	w1, #0x4000, lsl #16
  401390:	add	x5, x5, #0x210
  401394:	adrp	x4, 402000 <_fini+0x14>
  401398:	adrp	x2, 402000 <_fini+0x14>
  40139c:	add	x4, x4, #0x660
  4013a0:	add	x2, x2, #0x23
  4013a4:	mov	w3, #0x7d                  	// #125
  4013a8:	mov	w0, #0x3                   	// #3
  4013ac:	bl	4011c0 <log_internal_realm@plt>
  4013b0:	mov	w20, w0
  4013b4:	b	4012d4 <main+0x64>
  4013b8:	mov	x0, x21
  4013bc:	mov	w2, #0x400                 	// #1024
  4013c0:	mov	x1, #0x0                   	// #0
  4013c4:	bl	4011d0 <path_is_mount_point@plt>
  4013c8:	mov	w20, w0
  4013cc:	cmp	w0, #0x0
  4013d0:	b.lt	401624 <main+0x3b4>  // b.tstop
  4013d4:	b.ne	401554 <main+0x2e4>  // b.any
  4013d8:	bl	401260 <log_get_max_level_realm@plt>
  4013dc:	cmp	w0, #0x2
  4013e0:	b.le	4012d0 <main+0x60>
  4013e4:	mov	w1, #0x16                  	// #22
  4013e8:	mov	x6, x21
  4013ec:	movk	w1, #0x4000, lsl #16
  4013f0:	adrp	x5, 402000 <_fini+0x14>
  4013f4:	adrp	x4, 402000 <_fini+0x14>
  4013f8:	add	x5, x5, #0x368
  4013fc:	add	x4, x4, #0x660
  401400:	adrp	x2, 402000 <_fini+0x14>
  401404:	mov	w3, #0xa1                  	// #161
  401408:	add	x2, x2, #0x23
  40140c:	mov	w0, #0x3                   	// #3
  401410:	bl	4011c0 <log_internal_realm@plt>
  401414:	mov	w20, w0
  401418:	b	4012d4 <main+0x64>
  40141c:	mov	w0, #0x0                   	// #0
  401420:	bl	401260 <log_get_max_level_realm@plt>
  401424:	cmp	w0, #0x2
  401428:	b.gt	4015f4 <main+0x384>
  40142c:	neg	w20, w21
  401430:	and	w20, w20, #0xff
  401434:	neg	w20, w20
  401438:	b	4012d4 <main+0x64>
  40143c:	ldr	x0, [x20, #8]
  401440:	bl	4010e0 <volatile_mode_from_string@plt>
  401444:	str	w0, [sp, #68]
  401448:	tbz	w0, #31, 40135c <main+0xec>
  40144c:	mov	w0, #0x0                   	// #0
  401450:	bl	401260 <log_get_max_level_realm@plt>
  401454:	cmp	w0, #0x2
  401458:	b.le	4012d0 <main+0x60>
  40145c:	ldr	x6, [x20, #8]
  401460:	mov	w1, #0x16                  	// #22
  401464:	movk	w1, #0x4000, lsl #16
  401468:	adrp	x5, 402000 <_fini+0x14>
  40146c:	adrp	x4, 402000 <_fini+0x14>
  401470:	add	x5, x5, #0x288
  401474:	add	x4, x4, #0x660
  401478:	adrp	x2, 402000 <_fini+0x14>
  40147c:	mov	w3, #0x87                  	// #135
  401480:	add	x2, x2, #0x23
  401484:	mov	w0, #0x3                   	// #3
  401488:	bl	4011c0 <log_internal_realm@plt>
  40148c:	mov	w20, w0
  401490:	b	4012d4 <main+0x64>
  401494:	ldr	x21, [x20, #16]
  401498:	cbz	x21, 4014a4 <main+0x234>
  40149c:	ldrb	w0, [x21]
  4014a0:	cbnz	w0, 4014e8 <main+0x278>
  4014a4:	mov	w0, #0x0                   	// #0
  4014a8:	bl	401260 <log_get_max_level_realm@plt>
  4014ac:	cmp	w0, #0x2
  4014b0:	b.le	4012d0 <main+0x60>
  4014b4:	mov	w1, #0x16                  	// #22
  4014b8:	adrp	x5, 402000 <_fini+0x14>
  4014bc:	movk	w1, #0x4000, lsl #16
  4014c0:	add	x5, x5, #0x2b0
  4014c4:	adrp	x4, 402000 <_fini+0x14>
  4014c8:	adrp	x2, 402000 <_fini+0x14>
  4014cc:	add	x4, x4, #0x660
  4014d0:	add	x2, x2, #0x23
  4014d4:	mov	w3, #0x90                  	// #144
  4014d8:	mov	w0, #0x3                   	// #3
  4014dc:	bl	4011c0 <log_internal_realm@plt>
  4014e0:	mov	w20, w0
  4014e4:	b	4012d4 <main+0x64>
  4014e8:	mov	x0, x21
  4014ec:	bl	401110 <path_is_absolute@plt>
  4014f0:	tst	w0, #0xff
  4014f4:	b.eq	4015b0 <main+0x340>  // b.none
  4014f8:	mov	x0, x21
  4014fc:	adrp	x1, 402000 <_fini+0x14>
  401500:	add	x1, x1, #0x300
  401504:	bl	4010b0 <path_equal@plt>
  401508:	tst	w0, #0xff
  40150c:	b.eq	40136c <main+0xfc>  // b.none
  401510:	mov	w0, #0x0                   	// #0
  401514:	bl	401260 <log_get_max_level_realm@plt>
  401518:	cmp	w0, #0x2
  40151c:	b.le	4012d0 <main+0x60>
  401520:	mov	w1, #0x16                  	// #22
  401524:	mov	w0, w19
  401528:	movk	w1, #0x4000, lsl #16
  40152c:	adrp	x5, 402000 <_fini+0x14>
  401530:	adrp	x4, 402000 <_fini+0x14>
  401534:	add	x5, x5, #0x308
  401538:	add	x4, x4, #0x660
  40153c:	adrp	x2, 402000 <_fini+0x14>
  401540:	mov	w3, #0x96                  	// #150
  401544:	add	x2, x2, #0x23
  401548:	bl	4011c0 <log_internal_realm@plt>
  40154c:	mov	w20, w0
  401550:	b	4012d4 <main+0x64>
  401554:	mov	x0, x21
  401558:	bl	401170 <path_is_temporary_fs@plt>
  40155c:	mov	w20, w0
  401560:	cmp	w0, #0x0
  401564:	b.lt	401684 <main+0x414>  // b.tstop
  401568:	b.eq	401644 <main+0x3d4>  // b.none
  40156c:	mov	w0, #0x0                   	// #0
  401570:	bl	401260 <log_get_max_level_realm@plt>
  401574:	cmp	w0, #0x5
  401578:	b.le	40137c <main+0x10c>
  40157c:	mov	x6, x21
  401580:	adrp	x5, 402000 <_fini+0x14>
  401584:	adrp	x4, 402000 <_fini+0x14>
  401588:	add	x5, x5, #0x3c8
  40158c:	add	x4, x4, #0x660
  401590:	adrp	x2, 402000 <_fini+0x14>
  401594:	mov	w3, #0xa7                  	// #167
  401598:	add	x2, x2, #0x23
  40159c:	mov	w1, #0x0                   	// #0
  4015a0:	mov	w20, #0x0                   	// #0
  4015a4:	mov	w0, #0x6                   	// #6
  4015a8:	bl	4011c0 <log_internal_realm@plt>
  4015ac:	b	4012d4 <main+0x64>
  4015b0:	mov	w0, #0x0                   	// #0
  4015b4:	bl	401260 <log_get_max_level_realm@plt>
  4015b8:	cmp	w0, #0x2
  4015bc:	b.le	4012d0 <main+0x60>
  4015c0:	mov	w1, #0x16                  	// #22
  4015c4:	mov	w0, w19
  4015c8:	movk	w1, #0x4000, lsl #16
  4015cc:	adrp	x5, 402000 <_fini+0x14>
  4015d0:	adrp	x4, 402000 <_fini+0x14>
  4015d4:	add	x5, x5, #0x2d0
  4015d8:	add	x4, x4, #0x660
  4015dc:	adrp	x2, 402000 <_fini+0x14>
  4015e0:	mov	w3, #0x93                  	// #147
  4015e4:	add	x2, x2, #0x23
  4015e8:	bl	4011c0 <log_internal_realm@plt>
  4015ec:	mov	w20, w0
  4015f0:	b	4012d4 <main+0x64>
  4015f4:	mov	w1, w21
  4015f8:	adrp	x5, 402000 <_fini+0x14>
  4015fc:	adrp	x4, 402000 <_fini+0x14>
  401600:	add	x5, x5, #0x248
  401604:	add	x4, x4, #0x660
  401608:	adrp	x2, 402000 <_fini+0x14>
  40160c:	mov	w3, #0x82                  	// #130
  401610:	add	x2, x2, #0x23
  401614:	mov	w0, #0x3                   	// #3
  401618:	bl	4011c0 <log_internal_realm@plt>
  40161c:	mov	w20, w0
  401620:	b	4012d4 <main+0x64>
  401624:	mov	w0, #0x0                   	// #0
  401628:	bl	401260 <log_get_max_level_realm@plt>
  40162c:	cmp	w0, #0x2
  401630:	b.gt	4016c8 <main+0x458>
  401634:	neg	w20, w20
  401638:	and	w20, w20, #0xff
  40163c:	neg	w20, w20
  401640:	b	4012d4 <main+0x64>
  401644:	add	x1, sp, #0x48
  401648:	mov	x0, x21
  40164c:	bl	401130 <get_block_device_harder@plt>
  401650:	mov	w20, w0
  401654:	cmp	w0, #0x0
  401658:	b.lt	4016fc <main+0x48c>  // b.tstop
  40165c:	b.ne	401740 <main+0x4d0>  // b.any
  401660:	ldr	w2, [sp, #68]
  401664:	cmp	w2, #0x1
  401668:	b.eq	401814 <main+0x5a4>  // b.none
  40166c:	cmp	w2, #0x3
  401670:	b.ne	4017a4 <main+0x534>  // b.any
  401674:	mov	x0, x21
  401678:	bl	401c48 <make_overlay>
  40167c:	mov	w20, w0
  401680:	b	4012d4 <main+0x64>
  401684:	mov	w0, #0x0                   	// #0
  401688:	bl	401260 <log_get_max_level_realm@plt>
  40168c:	cmp	w0, #0x2
  401690:	b.le	401634 <main+0x3c4>
  401694:	mov	w1, w20
  401698:	mov	x6, x21
  40169c:	adrp	x5, 402000 <_fini+0x14>
  4016a0:	adrp	x4, 402000 <_fini+0x14>
  4016a4:	add	x5, x5, #0x388
  4016a8:	add	x4, x4, #0x660
  4016ac:	adrp	x2, 402000 <_fini+0x14>
  4016b0:	mov	w3, #0xa5                  	// #165
  4016b4:	add	x2, x2, #0x23
  4016b8:	mov	w0, #0x3                   	// #3
  4016bc:	bl	4011c0 <log_internal_realm@plt>
  4016c0:	mov	w20, w0
  4016c4:	b	4012d4 <main+0x64>
  4016c8:	mov	w1, w20
  4016cc:	mov	x6, x21
  4016d0:	adrp	x5, 402000 <_fini+0x14>
  4016d4:	adrp	x4, 402000 <_fini+0x14>
  4016d8:	add	x5, x5, #0x330
  4016dc:	add	x4, x4, #0x660
  4016e0:	adrp	x2, 402000 <_fini+0x14>
  4016e4:	mov	w3, #0x9f                  	// #159
  4016e8:	add	x2, x2, #0x23
  4016ec:	mov	w0, #0x3                   	// #3
  4016f0:	bl	4011c0 <log_internal_realm@plt>
  4016f4:	mov	w20, w0
  4016f8:	b	4012d4 <main+0x64>
  4016fc:	mov	w0, #0x0                   	// #0
  401700:	bl	401260 <log_get_max_level_realm@plt>
  401704:	cmp	w0, #0x2
  401708:	b.le	401634 <main+0x3c4>
  40170c:	mov	w1, w20
  401710:	mov	x6, x21
  401714:	adrp	x5, 402000 <_fini+0x14>
  401718:	adrp	x4, 402000 <_fini+0x14>
  40171c:	add	x5, x5, #0x3f0
  401720:	add	x4, x4, #0x660
  401724:	adrp	x2, 402000 <_fini+0x14>
  401728:	mov	w3, #0xb1                  	// #177
  40172c:	add	x2, x2, #0x23
  401730:	mov	w0, #0x3                   	// #3
  401734:	bl	4011c0 <log_internal_realm@plt>
  401738:	mov	w20, w0
  40173c:	b	4012d4 <main+0x64>
  401740:	ldr	x1, [sp, #72]
  401744:	add	x2, sp, #0x50
  401748:	mov	w0, #0x6000                	// #24576
  40174c:	str	xzr, [sp, #80]
  401750:	bl	4010c0 <device_path_make_major_minor@plt>
  401754:	mov	w20, w0
  401758:	tbnz	w0, #31, 40177c <main+0x50c>
  40175c:	ldr	x0, [sp, #80]
  401760:	adrp	x1, 402000 <_fini+0x14>
  401764:	add	x1, x1, #0x450
  401768:	bl	4010d0 <symlink@plt>
  40176c:	tbnz	w0, #31, 4017d4 <main+0x564>
  401770:	ldr	x0, [sp, #80]
  401774:	bl	401200 <free@plt>
  401778:	b	401660 <main+0x3f0>
  40177c:	mov	w0, #0x0                   	// #0
  401780:	bl	401260 <log_get_max_level_realm@plt>
  401784:	cmp	w0, #0x2
  401788:	b.gt	401990 <main+0x720>
  40178c:	neg	w20, w20
  401790:	and	w20, w20, #0xff
  401794:	neg	w20, w20
  401798:	ldr	x0, [sp, #80]
  40179c:	bl	401200 <free@plt>
  4017a0:	b	4012d4 <main+0x64>
  4017a4:	adrp	x4, 402000 <_fini+0x14>
  4017a8:	adrp	x1, 402000 <_fini+0x14>
  4017ac:	adrp	x2, 402000 <_fini+0x14>
  4017b0:	add	x4, x4, #0x638
  4017b4:	add	x1, x1, #0x5f8
  4017b8:	add	x2, x2, #0x23
  4017bc:	mov	w3, #0xc0                  	// #192
  4017c0:	mov	w0, #0x0                   	// #0
  4017c4:	str	x23, [sp, #48]
  4017c8:	bl	401100 <log_assert_failed_realm@plt>
  4017cc:	str	x23, [sp, #48]
  4017d0:	bl	401160 <__stack_chk_fail@plt>
  4017d4:	mov	w0, #0x0                   	// #0
  4017d8:	bl	401260 <log_get_max_level_realm@plt>
  4017dc:	cmp	w0, #0x3
  4017e0:	b.le	401770 <main+0x500>
  4017e4:	bl	401150 <__errno_location@plt>
  4017e8:	ldr	w1, [x0]
  4017ec:	adrp	x5, 402000 <_fini+0x14>
  4017f0:	adrp	x4, 402000 <_fini+0x14>
  4017f4:	add	x5, x5, #0x470
  4017f8:	add	x4, x4, #0x660
  4017fc:	adrp	x2, 402000 <_fini+0x14>
  401800:	mov	w3, #0xba                  	// #186
  401804:	add	x2, x2, #0x23
  401808:	mov	w0, #0x4                   	// #4
  40180c:	bl	4011c0 <log_internal_realm@plt>
  401810:	b	401770 <main+0x500>
  401814:	add	x3, sp, #0x50
  401818:	mov	x1, x21
  40181c:	adrp	x0, 402000 <_fini+0x14>
  401820:	mov	x4, #0x0                   	// #0
  401824:	add	x0, x0, #0x610
  401828:	str	xzr, [sp, #80]
  40182c:	bl	401070 <chase_symlinks@plt>
  401830:	mov	w20, w0
  401834:	tbnz	w0, #31, 401950 <main+0x6e0>
  401838:	str	x23, [sp, #48]
  40183c:	adrp	x23, 402000 <_fini+0x14>
  401840:	add	x23, x23, #0x4d0
  401844:	mov	w1, #0x1c0                 	// #448
  401848:	mov	x0, x23
  40184c:	bl	401230 <mkdir_p@plt>
  401850:	mov	w20, w0
  401854:	tbnz	w0, #31, 401a34 <main+0x7c4>
  401858:	adrp	x3, 402000 <_fini+0x14>
  40185c:	add	x3, x3, #0xb0
  401860:	mov	x1, x3
  401864:	mov	x2, x23
  401868:	adrp	x5, 402000 <_fini+0x14>
  40186c:	mov	x4, #0x1000000             	// #16777216
  401870:	add	x5, x5, #0xa0
  401874:	mov	w0, #0x3                   	// #3
  401878:	bl	401030 <mount_verbose@plt>
  40187c:	mov	w20, w0
  401880:	tbnz	w0, #31, 401940 <main+0x6d0>
  401884:	adrp	x19, 402000 <_fini+0x14>
  401888:	add	x19, x19, #0x528
  40188c:	mov	x0, x19
  401890:	mov	w1, #0x1ed                 	// #493
  401894:	bl	4011e0 <mkdir@plt>
  401898:	tbnz	w0, #31, 401a04 <main+0x794>
  40189c:	ldr	x1, [sp, #80]
  4018a0:	mov	x2, x19
  4018a4:	mov	x5, #0x0                   	// #0
  4018a8:	mov	x4, #0x5000                	// #20480
  4018ac:	mov	x3, #0x0                   	// #0
  4018b0:	mov	w0, #0x3                   	// #3
  4018b4:	bl	401030 <mount_verbose@plt>
  4018b8:	mov	w20, w0
  4018bc:	tbnz	w0, #31, 401934 <main+0x6c4>
  4018c0:	mov	x2, #0x1                   	// #1
  4018c4:	mov	x0, x19
  4018c8:	mov	x1, x2
  4018cc:	mov	x3, #0x0                   	// #0
  4018d0:	bl	401210 <bind_remount_recursive@plt>
  4018d4:	mov	w20, w0
  4018d8:	tbnz	w0, #31, 401afc <main+0x88c>
  4018dc:	mov	x0, x21
  4018e0:	mov	w1, #0x0                   	// #0
  4018e4:	bl	401190 <umount_recursive@plt>
  4018e8:	mov	w20, w0
  4018ec:	tbnz	w0, #31, 401abc <main+0x84c>
  4018f0:	mov	x3, #0x4000                	// #16384
  4018f4:	adrp	x1, 402000 <_fini+0x14>
  4018f8:	movk	x3, #0x8, lsl #16
  4018fc:	add	x1, x1, #0x300
  401900:	mov	x4, #0x0                   	// #0
  401904:	mov	x2, #0x0                   	// #0
  401908:	mov	x0, #0x0                   	// #0
  40190c:	bl	4011f0 <mount@plt>
  401910:	tbnz	w0, #31, 4019c0 <main+0x750>
  401914:	mov	x2, x21
  401918:	mov	x1, x23
  40191c:	mov	x5, #0x0                   	// #0
  401920:	mov	x4, #0x2000                	// #8192
  401924:	mov	x3, #0x0                   	// #0
  401928:	mov	w0, #0x3                   	// #3
  40192c:	bl	401030 <mount_verbose@plt>
  401930:	mov	w20, w0
  401934:	mov	x0, x23
  401938:	mov	w1, #0x0                   	// #0
  40193c:	bl	401190 <umount_recursive@plt>
  401940:	mov	x0, x23
  401944:	bl	401140 <rmdir@plt>
  401948:	ldr	x23, [sp, #48]
  40194c:	b	401798 <main+0x528>
  401950:	mov	w0, #0x0                   	// #0
  401954:	bl	401260 <log_get_max_level_realm@plt>
  401958:	cmp	w0, #0x2
  40195c:	b.le	40178c <main+0x51c>
  401960:	mov	w1, w20
  401964:	adrp	x5, 402000 <_fini+0x14>
  401968:	adrp	x4, 402000 <_fini+0x14>
  40196c:	add	x5, x5, #0x4a8
  401970:	add	x4, x4, #0x640
  401974:	adrp	x2, 402000 <_fini+0x14>
  401978:	mov	w3, #0x1a                  	// #26
  40197c:	add	x2, x2, #0x23
  401980:	mov	w0, #0x3                   	// #3
  401984:	bl	4011c0 <log_internal_realm@plt>
  401988:	mov	w20, w0
  40198c:	b	401798 <main+0x528>
  401990:	mov	w1, w20
  401994:	adrp	x5, 402000 <_fini+0x14>
  401998:	adrp	x4, 402000 <_fini+0x14>
  40199c:	add	x5, x5, #0x428
  4019a0:	add	x4, x4, #0x660
  4019a4:	adrp	x2, 402000 <_fini+0x14>
  4019a8:	mov	w3, #0xb7                  	// #183
  4019ac:	add	x2, x2, #0x23
  4019b0:	mov	w0, #0x3                   	// #3
  4019b4:	bl	4011c0 <log_internal_realm@plt>
  4019b8:	mov	w20, w0
  4019bc:	b	401798 <main+0x528>
  4019c0:	mov	w0, #0x0                   	// #0
  4019c4:	bl	401260 <log_get_max_level_realm@plt>
  4019c8:	cmp	w0, #0x3
  4019cc:	b.le	401914 <main+0x6a4>
  4019d0:	bl	401150 <__errno_location@plt>
  4019d4:	ldr	w1, [x0]
  4019d8:	mov	x6, x21
  4019dc:	adrp	x5, 402000 <_fini+0x14>
  4019e0:	adrp	x4, 402000 <_fini+0x14>
  4019e4:	add	x5, x5, #0x5c0
  4019e8:	add	x4, x4, #0x640
  4019ec:	adrp	x2, 402000 <_fini+0x14>
  4019f0:	mov	w3, #0x3a                  	// #58
  4019f4:	add	x2, x2, #0x23
  4019f8:	mov	w0, #0x4                   	// #4
  4019fc:	bl	4011c0 <log_internal_realm@plt>
  401a00:	b	401914 <main+0x6a4>
  401a04:	bl	401150 <__errno_location@plt>
  401a08:	mov	x1, x0
  401a0c:	mov	w0, #0x0                   	// #0
  401a10:	ldr	w19, [x1]
  401a14:	bl	401260 <log_get_max_level_realm@plt>
  401a18:	cmp	w0, #0x2
  401a1c:	b.gt	401a58 <main+0x7e8>
  401a20:	cmp	w19, #0x0
  401a24:	cneg	w19, w19, lt  // lt = tstop
  401a28:	and	w20, w19, #0xff
  401a2c:	neg	w20, w20
  401a30:	b	401934 <main+0x6c4>
  401a34:	mov	w0, #0x0                   	// #0
  401a38:	bl	401260 <log_get_max_level_realm@plt>
  401a3c:	cmp	w0, #0x2
  401a40:	b.gt	401a88 <main+0x818>
  401a44:	neg	w20, w20
  401a48:	and	w20, w20, #0xff
  401a4c:	neg	w20, w20
  401a50:	ldr	x23, [sp, #48]
  401a54:	b	401798 <main+0x528>
  401a58:	mov	w1, w19
  401a5c:	adrp	x5, 402000 <_fini+0x14>
  401a60:	adrp	x4, 402000 <_fini+0x14>
  401a64:	add	x5, x5, #0x550
  401a68:	add	x4, x4, #0x640
  401a6c:	adrp	x2, 402000 <_fini+0x14>
  401a70:	mov	w3, #0x25                  	// #37
  401a74:	add	x2, x2, #0x23
  401a78:	mov	w0, #0x3                   	// #3
  401a7c:	bl	4011c0 <log_internal_realm@plt>
  401a80:	mov	w20, w0
  401a84:	b	401934 <main+0x6c4>
  401a88:	mov	w1, w20
  401a8c:	adrp	x5, 402000 <_fini+0x14>
  401a90:	adrp	x4, 402000 <_fini+0x14>
  401a94:	add	x5, x5, #0x4f0
  401a98:	add	x4, x4, #0x640
  401a9c:	adrp	x2, 402000 <_fini+0x14>
  401aa0:	mov	w3, #0x1e                  	// #30
  401aa4:	add	x2, x2, #0x23
  401aa8:	mov	w0, #0x3                   	// #3
  401aac:	bl	4011c0 <log_internal_realm@plt>
  401ab0:	mov	w20, w0
  401ab4:	ldr	x23, [sp, #48]
  401ab8:	b	401798 <main+0x528>
  401abc:	mov	w0, #0x0                   	// #0
  401ac0:	bl	401260 <log_get_max_level_realm@plt>
  401ac4:	cmp	w0, #0x2
  401ac8:	b.le	401934 <main+0x6c4>
  401acc:	mov	x6, x21
  401ad0:	mov	w1, w20
  401ad4:	adrp	x5, 402000 <_fini+0x14>
  401ad8:	adrp	x4, 402000 <_fini+0x14>
  401adc:	add	x5, x5, #0x5a0
  401ae0:	add	x4, x4, #0x640
  401ae4:	adrp	x2, 402000 <_fini+0x14>
  401ae8:	mov	w3, #0x35                  	// #53
  401aec:	add	x2, x2, #0x23
  401af0:	mov	w0, #0x3                   	// #3
  401af4:	bl	4011c0 <log_internal_realm@plt>
  401af8:	b	401934 <main+0x6c4>
  401afc:	mov	w0, #0x0                   	// #0
  401b00:	bl	401260 <log_get_max_level_realm@plt>
  401b04:	cmp	w0, #0x2
  401b08:	b.le	401934 <main+0x6c4>
  401b0c:	mov	w1, w20
  401b10:	adrp	x5, 402000 <_fini+0x14>
  401b14:	adrp	x4, 402000 <_fini+0x14>
  401b18:	add	x5, x5, #0x578
  401b1c:	add	x4, x4, #0x640
  401b20:	adrp	x2, 402000 <_fini+0x14>
  401b24:	mov	w3, #0x2f                  	// #47
  401b28:	add	x2, x2, #0x23
  401b2c:	mov	w0, #0x3                   	// #3
  401b30:	bl	4011c0 <log_internal_realm@plt>
  401b34:	b	401934 <main+0x6c4>

0000000000401b38 <_start>:
  401b38:	mov	x29, #0x0                   	// #0
  401b3c:	mov	x30, #0x0                   	// #0
  401b40:	mov	x5, x0
  401b44:	ldr	x1, [sp]
  401b48:	add	x2, sp, #0x8
  401b4c:	mov	x6, sp
  401b50:	movz	x0, #0x0, lsl #48
  401b54:	movk	x0, #0x0, lsl #32
  401b58:	movk	x0, #0x40, lsl #16
  401b5c:	movk	x0, #0x1270
  401b60:	movz	x3, #0x0, lsl #48
  401b64:	movk	x3, #0x0, lsl #32
  401b68:	movk	x3, #0x40, lsl #16
  401b6c:	movk	x3, #0x1f68
  401b70:	movz	x4, #0x0, lsl #48
  401b74:	movk	x4, #0x0, lsl #32
  401b78:	movk	x4, #0x40, lsl #16
  401b7c:	movk	x4, #0x1fe8
  401b80:	bl	401050 <__libc_start_main@plt>
  401b84:	bl	401120 <abort@plt>

0000000000401b88 <call_weak_fn>:
  401b88:	adrp	x0, 412000 <__FRAME_END__+0xf800>
  401b8c:	ldr	x0, [x0, #4088]
  401b90:	cbz	x0, 401b98 <call_weak_fn+0x10>
  401b94:	b	401060 <__gmon_start__@plt>
  401b98:	ret
  401b9c:	nop

0000000000401ba0 <deregister_tm_clones>:
  401ba0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401ba4:	add	x0, x0, #0x0
  401ba8:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  401bac:	add	x1, x1, #0x0
  401bb0:	cmp	x1, x0
  401bb4:	b.eq	401bcc <deregister_tm_clones+0x2c>  // b.none
  401bb8:	adrp	x1, 402000 <_fini+0x14>
  401bbc:	ldr	x1, [x1]
  401bc0:	cbz	x1, 401bcc <deregister_tm_clones+0x2c>
  401bc4:	mov	x16, x1
  401bc8:	br	x16
  401bcc:	ret

0000000000401bd0 <register_tm_clones>:
  401bd0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401bd4:	add	x0, x0, #0x0
  401bd8:	adrp	x1, 413000 <saved_argv@@SD_SHARED>
  401bdc:	add	x1, x1, #0x0
  401be0:	sub	x1, x1, x0
  401be4:	lsr	x2, x1, #63
  401be8:	add	x1, x2, x1, asr #3
  401bec:	cmp	xzr, x1, asr #1
  401bf0:	asr	x1, x1, #1
  401bf4:	b.eq	401c0c <register_tm_clones+0x3c>  // b.none
  401bf8:	adrp	x2, 402000 <_fini+0x14>
  401bfc:	ldr	x2, [x2, #8]
  401c00:	cbz	x2, 401c0c <register_tm_clones+0x3c>
  401c04:	mov	x16, x2
  401c08:	br	x16
  401c0c:	ret

0000000000401c10 <__do_global_dtors_aux>:
  401c10:	stp	x29, x30, [sp, #-32]!
  401c14:	mov	x29, sp
  401c18:	str	x19, [sp, #16]
  401c1c:	adrp	x19, 413000 <saved_argv@@SD_SHARED>
  401c20:	ldrb	w0, [x19, #12]
  401c24:	cbnz	w0, 401c34 <__do_global_dtors_aux+0x24>
  401c28:	bl	401ba0 <deregister_tm_clones>
  401c2c:	mov	w0, #0x1                   	// #1
  401c30:	strb	w0, [x19, #12]
  401c34:	ldr	x19, [sp, #16]
  401c38:	ldp	x29, x30, [sp], #32
  401c3c:	ret

0000000000401c40 <frame_dummy>:
  401c40:	b	401bd0 <register_tm_clones>
  401c44:	nop

0000000000401c48 <make_overlay>:
  401c48:	stp	x29, x30, [sp, #-112]!
  401c4c:	mov	x29, sp
  401c50:	stp	x19, x20, [sp, #16]
  401c54:	adrp	x20, 412000 <__FRAME_END__+0xf800>
  401c58:	add	x20, x20, #0xc80
  401c5c:	ldr	x1, [x20]
  401c60:	str	x1, [x29, #104]
  401c64:	mov	x1, #0x0                   	// #0
  401c68:	stp	x21, x22, [sp, #32]
  401c6c:	stp	x23, x24, [sp, #48]
  401c70:	stp	x25, x26, [sp, #64]
  401c74:	cbz	x0, 401e88 <make_overlay+0x240>
  401c78:	adrp	x21, 402000 <_fini+0x14>
  401c7c:	add	x21, x21, #0x50
  401c80:	mov	x22, x0
  401c84:	mov	w1, #0x1c0                 	// #448
  401c88:	mov	x0, x21
  401c8c:	bl	401230 <mkdir_p@plt>
  401c90:	mov	w19, w0
  401c94:	tbnz	w0, #31, 401df4 <make_overlay+0x1ac>
  401c98:	adrp	x3, 402000 <_fini+0x14>
  401c9c:	add	x3, x3, #0xb0
  401ca0:	mov	x1, x3
  401ca4:	mov	x2, x21
  401ca8:	adrp	x5, 402000 <_fini+0x14>
  401cac:	mov	x4, #0x1000000             	// #16777216
  401cb0:	add	x5, x5, #0xa0
  401cb4:	mov	w0, #0x3                   	// #3
  401cb8:	bl	401030 <mount_verbose@plt>
  401cbc:	mov	w19, w0
  401cc0:	tbnz	w0, #31, 401db0 <make_overlay+0x168>
  401cc4:	adrp	x0, 402000 <_fini+0x14>
  401cc8:	mov	w1, #0x1ed                 	// #493
  401ccc:	add	x0, x0, #0xb8
  401cd0:	bl	4011e0 <mkdir@plt>
  401cd4:	tbnz	w0, #31, 401e18 <make_overlay+0x1d0>
  401cd8:	adrp	x0, 402000 <_fini+0x14>
  401cdc:	mov	w1, #0x1ed                 	// #493
  401ce0:	add	x0, x0, #0x118
  401ce4:	bl	4011e0 <mkdir@plt>
  401ce8:	tbnz	w0, #31, 401eac <make_overlay+0x264>
  401cec:	mov	x0, x22
  401cf0:	adrp	x1, 402000 <_fini+0x14>
  401cf4:	add	x1, x1, #0x178
  401cf8:	bl	4011b0 <shell_escape@plt>
  401cfc:	mov	x23, x0
  401d00:	cbz	x0, 401f1c <make_overlay+0x2d4>
  401d04:	adrp	x1, 402000 <_fini+0x14>
  401d08:	add	x25, x1, #0x10
  401d0c:	mov	x0, x25
  401d10:	add	x26, x29, #0x50
  401d14:	adrp	x1, 402000 <_fini+0x14>
  401d18:	mov	x24, #0x0                   	// #0
  401d1c:	add	x1, x1, #0x180
  401d20:	mov	x19, #0x0                   	// #0
  401d24:	stp	x23, x1, [x29, #88]
  401d28:	bl	401240 <strlen@plt>
  401d2c:	add	x24, x24, #0x1
  401d30:	add	x19, x19, x0
  401d34:	cmp	x24, #0x3
  401d38:	b.eq	401d44 <make_overlay+0xfc>  // b.none
  401d3c:	ldr	x0, [x26, x24, lsl #3]
  401d40:	cbnz	x0, 401d28 <make_overlay+0xe0>
  401d44:	add	x0, x19, #0x1
  401d48:	cmp	x0, #0x400, lsl #12
  401d4c:	b.hi	401f40 <make_overlay+0x2f8>  // b.pmore
  401d50:	add	x19, x19, #0x10
  401d54:	mov	x1, x25
  401d58:	and	x19, x19, #0xfffffffffffffff0
  401d5c:	add	x24, x29, #0x50
  401d60:	sub	sp, sp, x19
  401d64:	mov	x19, #0x0                   	// #0
  401d68:	mov	x25, sp
  401d6c:	mov	x0, x25
  401d70:	add	x19, x19, #0x1
  401d74:	bl	401040 <stpcpy@plt>
  401d78:	cmp	x19, #0x3
  401d7c:	b.eq	401d88 <make_overlay+0x140>  // b.none
  401d80:	ldr	x1, [x24, x19, lsl #3]
  401d84:	cbnz	x1, 401d70 <make_overlay+0x128>
  401d88:	adrp	x3, 402000 <_fini+0x14>
  401d8c:	add	x3, x3, #0x1f8
  401d90:	mov	x5, x25
  401d94:	mov	x2, x22
  401d98:	mov	x1, x3
  401d9c:	mov	x4, #0x0                   	// #0
  401da0:	mov	w0, #0x3                   	// #3
  401da4:	bl	401030 <mount_verbose@plt>
  401da8:	mov	w19, w0
  401dac:	b	401e48 <make_overlay+0x200>
  401db0:	mov	x23, #0x0                   	// #0
  401db4:	mov	x0, x21
  401db8:	bl	401140 <rmdir@plt>
  401dbc:	mov	x0, x23
  401dc0:	bl	401200 <free@plt>
  401dc4:	ldr	x1, [x29, #104]
  401dc8:	ldr	x0, [x20]
  401dcc:	eor	x0, x1, x0
  401dd0:	cbnz	x0, 401f64 <make_overlay+0x31c>
  401dd4:	mov	sp, x29
  401dd8:	mov	w0, w19
  401ddc:	ldp	x19, x20, [sp, #16]
  401de0:	ldp	x21, x22, [sp, #32]
  401de4:	ldp	x23, x24, [sp, #48]
  401de8:	ldp	x25, x26, [sp, #64]
  401dec:	ldp	x29, x30, [sp], #112
  401df0:	ret
  401df4:	mov	w0, #0x0                   	// #0
  401df8:	bl	401260 <log_get_max_level_realm@plt>
  401dfc:	cmp	w0, #0x2
  401e00:	b.gt	401e54 <make_overlay+0x20c>
  401e04:	neg	w19, w19
  401e08:	mov	x23, #0x0                   	// #0
  401e0c:	and	w19, w19, #0xff
  401e10:	neg	w19, w19
  401e14:	b	401dbc <make_overlay+0x174>
  401e18:	bl	401150 <__errno_location@plt>
  401e1c:	mov	x1, x0
  401e20:	mov	w0, #0x0                   	// #0
  401e24:	ldr	w19, [x1]
  401e28:	bl	401260 <log_get_max_level_realm@plt>
  401e2c:	cmp	w0, #0x2
  401e30:	b.gt	401efc <make_overlay+0x2b4>
  401e34:	cmp	w19, #0x0
  401e38:	mov	x23, #0x0                   	// #0
  401e3c:	cneg	w19, w19, lt  // lt = tstop
  401e40:	and	w19, w19, #0xff
  401e44:	neg	w19, w19
  401e48:	mov	x0, x21
  401e4c:	bl	401090 <umount_verbose@plt>
  401e50:	b	401db4 <make_overlay+0x16c>
  401e54:	mov	w1, w19
  401e58:	adrp	x5, 402000 <_fini+0x14>
  401e5c:	adrp	x4, 402000 <_fini+0x14>
  401e60:	add	x5, x5, #0x70
  401e64:	add	x4, x4, #0x650
  401e68:	adrp	x2, 402000 <_fini+0x14>
  401e6c:	mov	w3, #0x51                  	// #81
  401e70:	add	x2, x2, #0x23
  401e74:	mov	w0, #0x3                   	// #3
  401e78:	mov	x23, #0x0                   	// #0
  401e7c:	bl	4011c0 <log_internal_realm@plt>
  401e80:	mov	w19, w0
  401e84:	b	401dbc <make_overlay+0x174>
  401e88:	adrp	x4, 402000 <_fini+0x14>
  401e8c:	adrp	x1, 402000 <_fini+0x14>
  401e90:	adrp	x2, 402000 <_fini+0x14>
  401e94:	add	x4, x4, #0x628
  401e98:	add	x1, x1, #0x48
  401e9c:	add	x2, x2, #0x23
  401ea0:	mov	w3, #0x4d                  	// #77
  401ea4:	mov	w0, #0x0                   	// #0
  401ea8:	bl	401100 <log_assert_failed_realm@plt>
  401eac:	bl	401150 <__errno_location@plt>
  401eb0:	mov	x1, x0
  401eb4:	mov	w0, #0x0                   	// #0
  401eb8:	ldr	w19, [x1]
  401ebc:	bl	401260 <log_get_max_level_realm@plt>
  401ec0:	cmp	w0, #0x2
  401ec4:	b.le	401e34 <make_overlay+0x1ec>
  401ec8:	adrp	x5, 402000 <_fini+0x14>
  401ecc:	adrp	x4, 402000 <_fini+0x14>
  401ed0:	mov	w1, w19
  401ed4:	add	x5, x5, #0x140
  401ed8:	add	x4, x4, #0x650
  401edc:	adrp	x2, 402000 <_fini+0x14>
  401ee0:	mov	w3, #0x5f                  	// #95
  401ee4:	add	x2, x2, #0x23
  401ee8:	mov	w0, #0x3                   	// #3
  401eec:	mov	x23, #0x0                   	// #0
  401ef0:	bl	4011c0 <log_internal_realm@plt>
  401ef4:	mov	w19, w0
  401ef8:	b	401e48 <make_overlay+0x200>
  401efc:	adrp	x5, 402000 <_fini+0x14>
  401f00:	adrp	x4, 402000 <_fini+0x14>
  401f04:	mov	w1, w19
  401f08:	add	x5, x5, #0xe0
  401f0c:	add	x4, x4, #0x650
  401f10:	adrp	x2, 402000 <_fini+0x14>
  401f14:	mov	w3, #0x5a                  	// #90
  401f18:	b	401ee4 <make_overlay+0x29c>
  401f1c:	adrp	x3, 402000 <_fini+0x14>
  401f20:	adrp	x1, 402000 <_fini+0x14>
  401f24:	add	x3, x3, #0x650
  401f28:	add	x1, x1, #0x23
  401f2c:	mov	w2, #0x65                  	// #101
  401f30:	mov	w0, #0x0                   	// #0
  401f34:	bl	401250 <log_oom_internal@plt>
  401f38:	mov	w19, w0
  401f3c:	b	401e48 <make_overlay+0x200>
  401f40:	adrp	x4, 402000 <_fini+0x14>
  401f44:	adrp	x1, 402000 <_fini+0x14>
  401f48:	adrp	x2, 402000 <_fini+0x14>
  401f4c:	add	x4, x4, #0x628
  401f50:	add	x1, x1, #0x1d8
  401f54:	add	x2, x2, #0x23
  401f58:	mov	w3, #0x69                  	// #105
  401f5c:	mov	w0, #0x0                   	// #0
  401f60:	bl	401100 <log_assert_failed_realm@plt>
  401f64:	bl	401160 <__stack_chk_fail@plt>

0000000000401f68 <__libc_csu_init>:
  401f68:	stp	x29, x30, [sp, #-64]!
  401f6c:	mov	x29, sp
  401f70:	stp	x19, x20, [sp, #16]
  401f74:	adrp	x20, 412000 <__FRAME_END__+0xf800>
  401f78:	add	x20, x20, #0xc78
  401f7c:	stp	x21, x22, [sp, #32]
  401f80:	adrp	x21, 412000 <__FRAME_END__+0xf800>
  401f84:	add	x21, x21, #0xc70
  401f88:	sub	x20, x20, x21
  401f8c:	mov	w22, w0
  401f90:	stp	x23, x24, [sp, #48]
  401f94:	mov	x23, x1
  401f98:	mov	x24, x2
  401f9c:	bl	400ff8 <_init>
  401fa0:	cmp	xzr, x20, asr #3
  401fa4:	b.eq	401fd0 <__libc_csu_init+0x68>  // b.none
  401fa8:	asr	x20, x20, #3
  401fac:	mov	x19, #0x0                   	// #0
  401fb0:	ldr	x3, [x21, x19, lsl #3]
  401fb4:	mov	x2, x24
  401fb8:	add	x19, x19, #0x1
  401fbc:	mov	x1, x23
  401fc0:	mov	w0, w22
  401fc4:	blr	x3
  401fc8:	cmp	x20, x19
  401fcc:	b.ne	401fb0 <__libc_csu_init+0x48>  // b.any
  401fd0:	ldp	x19, x20, [sp, #16]
  401fd4:	ldp	x21, x22, [sp, #32]
  401fd8:	ldp	x23, x24, [sp, #48]
  401fdc:	ldp	x29, x30, [sp], #64
  401fe0:	ret
  401fe4:	nop

0000000000401fe8 <__libc_csu_fini>:
  401fe8:	ret

Disassembly of section .fini:

0000000000401fec <_fini>:
  401fec:	stp	x29, x30, [sp, #-16]!
  401ff0:	mov	x29, sp
  401ff4:	ldp	x29, x30, [sp], #16
  401ff8:	ret
