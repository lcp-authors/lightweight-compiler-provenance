
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//math.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002e98 <.init>:
    2e98:	stp	x29, x30, [sp, #-16]!
    2e9c:	mov	x29, sp
    2ea0:	bl	3440 <PyNumber_FloorDivide@plt+0x10>
    2ea4:	ldp	x29, x30, [sp], #16
    2ea8:	ret

Disassembly of section .plt:

0000000000002eb0 <memcpy@plt-0x20>:
    2eb0:	stp	x16, x30, [sp, #-16]!
    2eb4:	adrp	x16, 1e000 <_Py_log1p@@Base+0x13908>
    2eb8:	ldr	x17, [x16, #4088]
    2ebc:	add	x16, x16, #0xff8
    2ec0:	br	x17
    2ec4:	nop
    2ec8:	nop
    2ecc:	nop

0000000000002ed0 <memcpy@plt>:
    2ed0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2ed4:	ldr	x17, [x16]
    2ed8:	add	x16, x16, #0x0
    2edc:	br	x17

0000000000002ee0 <atan2@plt>:
    2ee0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2ee4:	ldr	x17, [x16, #8]
    2ee8:	add	x16, x16, #0x8
    2eec:	br	x17

0000000000002ef0 <PyLong_AsLongLongAndOverflow@plt>:
    2ef0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2ef4:	ldr	x17, [x16, #16]
    2ef8:	add	x16, x16, #0x10
    2efc:	br	x17

0000000000002f00 <log2@plt>:
    2f00:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f04:	ldr	x17, [x16, #24]
    2f08:	add	x16, x16, #0x18
    2f0c:	br	x17

0000000000002f10 <asin@plt>:
    2f10:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f14:	ldr	x17, [x16, #32]
    2f18:	add	x16, x16, #0x20
    2f1c:	br	x17

0000000000002f20 <PyLong_FromDouble@plt>:
    2f20:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f24:	ldr	x17, [x16, #40]
    2f28:	add	x16, x16, #0x28
    2f2c:	br	x17

0000000000002f30 <PyMem_Free@plt>:
    2f30:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f34:	ldr	x17, [x16, #48]
    2f38:	add	x16, x16, #0x30
    2f3c:	br	x17

0000000000002f40 <ldexp@plt>:
    2f40:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f44:	ldr	x17, [x16, #56]
    2f48:	add	x16, x16, #0x38
    2f4c:	br	x17

0000000000002f50 <PyErr_SetFromErrno@plt>:
    2f50:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f54:	ldr	x17, [x16, #64]
    2f58:	add	x16, x16, #0x40
    2f5c:	br	x17

0000000000002f60 <PyLong_FromUnsignedLongLong@plt>:
    2f60:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f64:	ldr	x17, [x16, #72]
    2f68:	add	x16, x16, #0x48
    2f6c:	br	x17

0000000000002f70 <PyLong_AsUnsignedLongLong@plt>:
    2f70:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f74:	ldr	x17, [x16, #80]
    2f78:	add	x16, x16, #0x50
    2f7c:	br	x17

0000000000002f80 <PyNumber_Add@plt>:
    2f80:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f84:	ldr	x17, [x16, #88]
    2f88:	add	x16, x16, #0x58
    2f8c:	br	x17

0000000000002f90 <expm1@plt>:
    2f90:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2f94:	ldr	x17, [x16, #96]
    2f98:	add	x16, x16, #0x60
    2f9c:	br	x17

0000000000002fa0 <__cxa_finalize@plt>:
    2fa0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2fa4:	ldr	x17, [x16, #104]
    2fa8:	add	x16, x16, #0x68
    2fac:	br	x17

0000000000002fb0 <_Py_Dealloc@plt>:
    2fb0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2fb4:	ldr	x17, [x16, #112]
    2fb8:	add	x16, x16, #0x70
    2fbc:	br	x17

0000000000002fc0 <pow@plt>:
    2fc0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2fc4:	ldr	x17, [x16, #120]
    2fc8:	add	x16, x16, #0x78
    2fcc:	br	x17

0000000000002fd0 <PyErr_NoMemory@plt>:
    2fd0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2fd4:	ldr	x17, [x16, #128]
    2fd8:	add	x16, x16, #0x80
    2fdc:	br	x17

0000000000002fe0 <PyIter_Next@plt>:
    2fe0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2fe4:	ldr	x17, [x16, #136]
    2fe8:	add	x16, x16, #0x88
    2fec:	br	x17

0000000000002ff0 <_PyLong_Sign@plt>:
    2ff0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    2ff4:	ldr	x17, [x16, #144]
    2ff8:	add	x16, x16, #0x90
    2ffc:	br	x17

0000000000003000 <PyNumber_Multiply@plt>:
    3000:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3004:	ldr	x17, [x16, #152]
    3008:	add	x16, x16, #0x98
    300c:	br	x17

0000000000003010 <log10@plt>:
    3010:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3014:	ldr	x17, [x16, #160]
    3018:	add	x16, x16, #0xa0
    301c:	br	x17

0000000000003020 <_PyLong_NumBits@plt>:
    3020:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3024:	ldr	x17, [x16, #168]
    3028:	add	x16, x16, #0xa8
    302c:	br	x17

0000000000003030 <_PyLong_Rshift@plt>:
    3030:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3034:	ldr	x17, [x16, #176]
    3038:	add	x16, x16, #0xb0
    303c:	br	x17

0000000000003040 <sqrt@plt>:
    3040:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3044:	ldr	x17, [x16, #184]
    3048:	add	x16, x16, #0xb8
    304c:	br	x17

0000000000003050 <_PyArg_UnpackKeywords@plt>:
    3050:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3054:	ldr	x17, [x16, #192]
    3058:	add	x16, x16, #0xc0
    305c:	br	x17

0000000000003060 <PyErr_SetString@plt>:
    3060:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16, #200]
    3068:	add	x16, x16, #0xc8
    306c:	br	x17

0000000000003070 <PyObject_Malloc@plt>:
    3070:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #208]
    3078:	add	x16, x16, #0xd0
    307c:	br	x17

0000000000003080 <_PyLong_Frexp@plt>:
    3080:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #216]
    3088:	add	x16, x16, #0xd8
    308c:	br	x17

0000000000003090 <_PyObject_LookupSpecial@plt>:
    3090:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #224]
    3098:	add	x16, x16, #0xe0
    309c:	br	x17

00000000000030a0 <_PyLong_Copy@plt>:
    30a0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #232]
    30a8:	add	x16, x16, #0xe8
    30ac:	br	x17

00000000000030b0 <PyMem_Realloc@plt>:
    30b0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #240]
    30b8:	add	x16, x16, #0xf0
    30bc:	br	x17

00000000000030c0 <PyErr_ExceptionMatches@plt>:
    30c0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #248]
    30c8:	add	x16, x16, #0xf8
    30cc:	br	x17

00000000000030d0 <log@plt>:
    30d0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #256]
    30d8:	add	x16, x16, #0x100
    30dc:	br	x17

00000000000030e0 <acosh@plt>:
    30e0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #264]
    30e8:	add	x16, x16, #0x108
    30ec:	br	x17

00000000000030f0 <PyObject_Free@plt>:
    30f0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #272]
    30f8:	add	x16, x16, #0x110
    30fc:	br	x17

0000000000003100 <PyFloat_FromDouble@plt>:
    3100:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #280]
    3108:	add	x16, x16, #0x118
    310c:	br	x17

0000000000003110 <PyType_Ready@plt>:
    3110:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #288]
    3118:	add	x16, x16, #0x120
    311c:	br	x17

0000000000003120 <PyLong_FromLong@plt>:
    3120:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #296]
    3128:	add	x16, x16, #0x128
    312c:	br	x17

0000000000003130 <PyObject_RichCompareBool@plt>:
    3130:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #304]
    3138:	add	x16, x16, #0x130
    313c:	br	x17

0000000000003140 <_PyLong_GCD@plt>:
    3140:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #312]
    3148:	add	x16, x16, #0x138
    314c:	br	x17

0000000000003150 <PyErr_Clear@plt>:
    3150:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #320]
    3158:	add	x16, x16, #0x140
    315c:	br	x17

0000000000003160 <PyBool_FromLong@plt>:
    3160:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #328]
    3168:	add	x16, x16, #0x148
    316c:	br	x17

0000000000003170 <sin@plt>:
    3170:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #336]
    3178:	add	x16, x16, #0x150
    317c:	br	x17

0000000000003180 <tanh@plt>:
    3180:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #344]
    3188:	add	x16, x16, #0x158
    318c:	br	x17

0000000000003190 <_Py_dg_stdnan@plt>:
    3190:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #352]
    3198:	add	x16, x16, #0x160
    319c:	br	x17

00000000000031a0 <log1p@plt>:
    31a0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #360]
    31a8:	add	x16, x16, #0x168
    31ac:	br	x17

00000000000031b0 <__gmon_start__@plt>:
    31b0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #368]
    31b8:	add	x16, x16, #0x170
    31bc:	br	x17

00000000000031c0 <erf@plt>:
    31c0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #376]
    31c8:	add	x16, x16, #0x178
    31cc:	br	x17

00000000000031d0 <_PyArg_CheckPositional@plt>:
    31d0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #384]
    31d8:	add	x16, x16, #0x180
    31dc:	br	x17

00000000000031e0 <PyLong_AsLongAndOverflow@plt>:
    31e0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #392]
    31e8:	add	x16, x16, #0x188
    31ec:	br	x17

00000000000031f0 <asinh@plt>:
    31f0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #400]
    31f8:	add	x16, x16, #0x190
    31fc:	br	x17

0000000000003200 <Py_BuildValue@plt>:
    3200:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #408]
    3208:	add	x16, x16, #0x198
    320c:	br	x17

0000000000003210 <acos@plt>:
    3210:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #416]
    3218:	add	x16, x16, #0x1a0
    321c:	br	x17

0000000000003220 <PyErr_Occurred@plt>:
    3220:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #424]
    3228:	add	x16, x16, #0x1a8
    322c:	br	x17

0000000000003230 <PyModule_Create2@plt>:
    3230:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #432]
    3238:	add	x16, x16, #0x1b0
    323c:	br	x17

0000000000003240 <_Py_CheckFunctionResult@plt>:
    3240:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #440]
    3248:	add	x16, x16, #0x1b8
    324c:	br	x17

0000000000003250 <PyFloat_AsDouble@plt>:
    3250:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #448]
    3258:	add	x16, x16, #0x1c0
    325c:	br	x17

0000000000003260 <PyArg_ParseTuple@plt>:
    3260:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #456]
    3268:	add	x16, x16, #0x1c8
    326c:	br	x17

0000000000003270 <Py_FatalError@plt>:
    3270:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #464]
    3278:	add	x16, x16, #0x1d0
    327c:	br	x17

0000000000003280 <sinh@plt>:
    3280:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #472]
    3288:	add	x16, x16, #0x1d8
    328c:	br	x17

0000000000003290 <cosh@plt>:
    3290:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #480]
    3298:	add	x16, x16, #0x1e0
    329c:	br	x17

00000000000032a0 <erfc@plt>:
    32a0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #488]
    32a8:	add	x16, x16, #0x1e8
    32ac:	br	x17

00000000000032b0 <modf@plt>:
    32b0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #496]
    32b8:	add	x16, x16, #0x1f0
    32bc:	br	x17

00000000000032c0 <PyLong_AsDouble@plt>:
    32c0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #504]
    32c8:	add	x16, x16, #0x1f8
    32cc:	br	x17

00000000000032d0 <frexp@plt>:
    32d0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #512]
    32d8:	add	x16, x16, #0x200
    32dc:	br	x17

00000000000032e0 <PyLong_FromUnsignedLong@plt>:
    32e0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #520]
    32e8:	add	x16, x16, #0x208
    32ec:	br	x17

00000000000032f0 <_Py_dg_infinity@plt>:
    32f0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #528]
    32f8:	add	x16, x16, #0x210
    32fc:	br	x17

0000000000003300 <PyObject_GetIter@plt>:
    3300:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #536]
    3308:	add	x16, x16, #0x218
    330c:	br	x17

0000000000003310 <PyModule_AddObject@plt>:
    3310:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #544]
    3318:	add	x16, x16, #0x220
    331c:	br	x17

0000000000003320 <PySequence_Tuple@plt>:
    3320:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #552]
    3328:	add	x16, x16, #0x228
    332c:	br	x17

0000000000003330 <_Py_log1p@plt>:
    3330:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #560]
    3338:	add	x16, x16, #0x230
    333c:	br	x17

0000000000003340 <fmod@plt>:
    3340:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #568]
    3348:	add	x16, x16, #0x238
    334c:	br	x17

0000000000003350 <PyType_IsSubtype@plt>:
    3350:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #576]
    3358:	add	x16, x16, #0x240
    335c:	br	x17

0000000000003360 <atanh@plt>:
    3360:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #584]
    3368:	add	x16, x16, #0x248
    336c:	br	x17

0000000000003370 <PyErr_Format@plt>:
    3370:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #592]
    3378:	add	x16, x16, #0x250
    337c:	br	x17

0000000000003380 <tan@plt>:
    3380:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #600]
    3388:	add	x16, x16, #0x258
    338c:	br	x17

0000000000003390 <_PyObject_MakeTpCall@plt>:
    3390:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #608]
    3398:	add	x16, x16, #0x260
    339c:	br	x17

00000000000033a0 <PyNumber_Index@plt>:
    33a0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    33a4:	ldr	x17, [x16, #616]
    33a8:	add	x16, x16, #0x268
    33ac:	br	x17

00000000000033b0 <__errno_location@plt>:
    33b0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x17, [x16, #624]
    33b8:	add	x16, x16, #0x270
    33bc:	br	x17

00000000000033c0 <cos@plt>:
    33c0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    33c4:	ldr	x17, [x16, #632]
    33c8:	add	x16, x16, #0x278
    33cc:	br	x17

00000000000033d0 <atan@plt>:
    33d0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    33d4:	ldr	x17, [x16, #640]
    33d8:	add	x16, x16, #0x280
    33dc:	br	x17

00000000000033e0 <PyMem_Malloc@plt>:
    33e0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    33e4:	ldr	x17, [x16, #648]
    33e8:	add	x16, x16, #0x288
    33ec:	br	x17

00000000000033f0 <PyNumber_Subtract@plt>:
    33f0:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    33f4:	ldr	x17, [x16, #656]
    33f8:	add	x16, x16, #0x290
    33fc:	br	x17

0000000000003400 <PyNumber_TrueDivide@plt>:
    3400:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3404:	ldr	x17, [x16, #664]
    3408:	add	x16, x16, #0x298
    340c:	br	x17

0000000000003410 <exp@plt>:
    3410:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3414:	ldr	x17, [x16, #672]
    3418:	add	x16, x16, #0x2a0
    341c:	br	x17

0000000000003420 <_PyLong_Lshift@plt>:
    3420:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3424:	ldr	x17, [x16, #680]
    3428:	add	x16, x16, #0x2a8
    342c:	br	x17

0000000000003430 <PyNumber_FloorDivide@plt>:
    3430:	adrp	x16, 1f000 <memcpy@GLIBC_2.17>
    3434:	ldr	x17, [x16, #688]
    3438:	add	x16, x16, #0x2b0
    343c:	br	x17

Disassembly of section .text:

0000000000003440 <PyInit_math@@Base-0x71e0>:
    3440:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    3444:	ldr	x0, [x0, #4008]
    3448:	cbz	x0, 3450 <PyNumber_FloorDivide@plt+0x20>
    344c:	b	31b0 <__gmon_start__@plt>
    3450:	ret
    3454:	nop
    3458:	adrp	x0, 1f000 <_Py_log1p@@Base+0x14908>
    345c:	add	x0, x0, #0xa50
    3460:	adrp	x1, 1f000 <_Py_log1p@@Base+0x14908>
    3464:	add	x1, x1, #0xa50
    3468:	cmp	x1, x0
    346c:	b.eq	3484 <PyNumber_FloorDivide@plt+0x54>  // b.none
    3470:	adrp	x1, 1e000 <_Py_log1p@@Base+0x13908>
    3474:	ldr	x1, [x1, #3952]
    3478:	cbz	x1, 3484 <PyNumber_FloorDivide@plt+0x54>
    347c:	mov	x16, x1
    3480:	br	x16
    3484:	ret
    3488:	adrp	x0, 1f000 <_Py_log1p@@Base+0x14908>
    348c:	add	x0, x0, #0xa50
    3490:	adrp	x1, 1f000 <_Py_log1p@@Base+0x14908>
    3494:	add	x1, x1, #0xa50
    3498:	sub	x1, x1, x0
    349c:	lsr	x2, x1, #63
    34a0:	add	x1, x2, x1, asr #3
    34a4:	cmp	xzr, x1, asr #1
    34a8:	asr	x1, x1, #1
    34ac:	b.eq	34c4 <PyNumber_FloorDivide@plt+0x94>  // b.none
    34b0:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    34b4:	ldr	x2, [x2, #4064]
    34b8:	cbz	x2, 34c4 <PyNumber_FloorDivide@plt+0x94>
    34bc:	mov	x16, x2
    34c0:	br	x16
    34c4:	ret
    34c8:	stp	x29, x30, [sp, #-32]!
    34cc:	mov	x29, sp
    34d0:	str	x19, [sp, #16]
    34d4:	adrp	x19, 1f000 <_Py_log1p@@Base+0x14908>
    34d8:	ldrb	w0, [x19, #2640]
    34dc:	cbnz	w0, 3504 <PyNumber_FloorDivide@plt+0xd4>
    34e0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    34e4:	ldr	x0, [x0, #3976]
    34e8:	cbz	x0, 34f8 <PyNumber_FloorDivide@plt+0xc8>
    34ec:	adrp	x0, 1f000 <_Py_log1p@@Base+0x14908>
    34f0:	ldr	x0, [x0, #696]
    34f4:	bl	2fa0 <__cxa_finalize@plt>
    34f8:	bl	3458 <PyNumber_FloorDivide@plt+0x28>
    34fc:	mov	w0, #0x1                   	// #1
    3500:	strb	w0, [x19, #2640]
    3504:	ldr	x19, [sp, #16]
    3508:	ldp	x29, x30, [sp], #32
    350c:	ret
    3510:	b	3488 <PyNumber_FloorDivide@plt+0x58>
    3514:	nop
    3518:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    351c:	mov	x0, x1
    3520:	ldr	x1, [x1, #8]
    3524:	ldr	x2, [x2, #3960]
    3528:	cmp	x1, x2
    352c:	b.eq	355c <PyNumber_FloorDivide@plt+0x12c>  // b.none
    3530:	stp	x29, x30, [sp, #-16]!
    3534:	mov	x29, sp
    3538:	bl	3250 <PyFloat_AsDouble@plt>
    353c:	fmov	d1, #-1.000000000000000000e+00
    3540:	fcmp	d0, d1
    3544:	b.eq	3570 <PyNumber_FloorDivide@plt+0x140>  // b.none
    3548:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    354c:	ldp	x29, x30, [sp], #16
    3550:	ldr	d1, [x0, #3136]
    3554:	fmul	d0, d0, d1
    3558:	b	3100 <PyFloat_FromDouble@plt>
    355c:	ldr	d0, [x0, #16]
    3560:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3564:	ldr	d1, [x0, #3136]
    3568:	fmul	d0, d0, d1
    356c:	b	3100 <PyFloat_FromDouble@plt>
    3570:	bl	3220 <PyErr_Occurred@plt>
    3574:	cbnz	x0, 3588 <PyNumber_FloorDivide@plt+0x158>
    3578:	ldp	x29, x30, [sp], #16
    357c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3580:	ldr	d0, [x0, #3144]
    3584:	b	3100 <PyFloat_FromDouble@plt>
    3588:	mov	x0, #0x0                   	// #0
    358c:	ldp	x29, x30, [sp], #16
    3590:	ret
    3594:	nop
    3598:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    359c:	mov	x0, x1
    35a0:	ldr	x1, [x1, #8]
    35a4:	ldr	x2, [x2, #3960]
    35a8:	cmp	x1, x2
    35ac:	b.eq	35dc <PyNumber_FloorDivide@plt+0x1ac>  // b.none
    35b0:	stp	x29, x30, [sp, #-16]!
    35b4:	mov	x29, sp
    35b8:	bl	3250 <PyFloat_AsDouble@plt>
    35bc:	fmov	d1, #-1.000000000000000000e+00
    35c0:	fcmp	d0, d1
    35c4:	b.eq	35f0 <PyNumber_FloorDivide@plt+0x1c0>  // b.none
    35c8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    35cc:	ldp	x29, x30, [sp], #16
    35d0:	ldr	d1, [x0, #3152]
    35d4:	fmul	d0, d0, d1
    35d8:	b	3100 <PyFloat_FromDouble@plt>
    35dc:	ldr	d0, [x0, #16]
    35e0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    35e4:	ldr	d1, [x0, #3152]
    35e8:	fmul	d0, d0, d1
    35ec:	b	3100 <PyFloat_FromDouble@plt>
    35f0:	bl	3220 <PyErr_Occurred@plt>
    35f4:	cbnz	x0, 3608 <PyNumber_FloorDivide@plt+0x1d8>
    35f8:	ldp	x29, x30, [sp], #16
    35fc:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3600:	ldr	d0, [x0, #3160]
    3604:	b	3100 <PyFloat_FromDouble@plt>
    3608:	mov	x0, #0x0                   	// #0
    360c:	ldp	x29, x30, [sp], #16
    3610:	ret
    3614:	nop
    3618:	stp	x29, x30, [sp, #-32]!
    361c:	fmov	d1, #2.000000000000000000e+00
    3620:	mov	x29, sp
    3624:	str	d8, [sp, #16]
    3628:	fmov	d8, d0
    362c:	fabs	d0, d0
    3630:	bl	3340 <fmod@plt>
    3634:	fadd	d1, d0, d0
    3638:	fcvtas	w0, d1
    363c:	cmp	w0, #0x2
    3640:	b.eq	36cc <PyNumber_FloorDivide@plt+0x29c>  // b.none
    3644:	b.gt	3688 <PyNumber_FloorDivide@plt+0x258>
    3648:	cbz	w0, 3700 <PyNumber_FloorDivide@plt+0x2d0>
    364c:	cmp	w0, #0x1
    3650:	b.ne	3764 <PyNumber_FloorDivide@plt+0x334>  // b.any
    3654:	fmov	d2, #5.000000000000000000e-01
    3658:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    365c:	fsub	d0, d0, d2
    3660:	ldr	d1, [x0, #3168]
    3664:	fmul	d0, d0, d1
    3668:	bl	33c0 <cos@plt>
    366c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3670:	fmov	d1, x0
    3674:	and	v8.8b, v8.8b, v1.8b
    3678:	eor	v0.8b, v8.8b, v0.8b
    367c:	ldr	d8, [sp, #16]
    3680:	ldp	x29, x30, [sp], #32
    3684:	ret
    3688:	cmp	w0, #0x3
    368c:	b.eq	372c <PyNumber_FloorDivide@plt+0x2fc>  // b.none
    3690:	cmp	w0, #0x4
    3694:	b.ne	3764 <PyNumber_FloorDivide@plt+0x334>  // b.any
    3698:	fmov	d2, #2.000000000000000000e+00
    369c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    36a0:	fsub	d0, d0, d2
    36a4:	ldr	d1, [x0, #3168]
    36a8:	fmul	d0, d0, d1
    36ac:	bl	3170 <sin@plt>
    36b0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    36b4:	fmov	d1, x0
    36b8:	and	v8.8b, v8.8b, v1.8b
    36bc:	eor	v0.8b, v8.8b, v0.8b
    36c0:	ldr	d8, [sp, #16]
    36c4:	ldp	x29, x30, [sp], #32
    36c8:	ret
    36cc:	fmov	d1, #1.000000000000000000e+00
    36d0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    36d4:	fsub	d0, d1, d0
    36d8:	ldr	d2, [x0, #3168]
    36dc:	fmul	d0, d0, d2
    36e0:	bl	3170 <sin@plt>
    36e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    36e8:	fmov	d1, x0
    36ec:	and	v8.8b, v8.8b, v1.8b
    36f0:	eor	v0.8b, v8.8b, v0.8b
    36f4:	ldr	d8, [sp, #16]
    36f8:	ldp	x29, x30, [sp], #32
    36fc:	ret
    3700:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3704:	ldr	d1, [x0, #3168]
    3708:	fmul	d0, d0, d1
    370c:	bl	3170 <sin@plt>
    3710:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3714:	fmov	d1, x0
    3718:	and	v8.8b, v8.8b, v1.8b
    371c:	eor	v0.8b, v8.8b, v0.8b
    3720:	ldr	d8, [sp, #16]
    3724:	ldp	x29, x30, [sp], #32
    3728:	ret
    372c:	fmov	d2, #1.500000000000000000e+00
    3730:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3734:	fsub	d0, d0, d2
    3738:	ldr	d1, [x0, #3168]
    373c:	fmul	d0, d0, d1
    3740:	bl	33c0 <cos@plt>
    3744:	fneg	d0, d0
    3748:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    374c:	fmov	d1, x0
    3750:	and	v8.8b, v8.8b, v1.8b
    3754:	eor	v0.8b, v8.8b, v0.8b
    3758:	ldr	d8, [sp, #16]
    375c:	ldp	x29, x30, [sp], #32
    3760:	ret
    3764:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3768:	add	x0, x0, #0x720
    376c:	bl	3270 <Py_FatalError@plt>
    3770:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    3774:	mov	x0, x1
    3778:	ldr	x1, [x1, #8]
    377c:	ldr	x2, [x2, #3960]
    3780:	cmp	x1, x2
    3784:	b.eq	37b0 <PyNumber_FloorDivide@plt+0x380>  // b.none
    3788:	stp	x29, x30, [sp, #-16]!
    378c:	mov	x29, sp
    3790:	bl	3250 <PyFloat_AsDouble@plt>
    3794:	fmov	d1, #-1.000000000000000000e+00
    3798:	fcmp	d0, d1
    379c:	b.eq	37c0 <PyNumber_FloorDivide@plt+0x390>  // b.none
    37a0:	fcmp	d0, d0
    37a4:	cset	x0, vs
    37a8:	ldp	x29, x30, [sp], #16
    37ac:	b	3160 <PyBool_FromLong@plt>
    37b0:	ldr	d0, [x0, #16]
    37b4:	fcmp	d0, d0
    37b8:	cset	x0, vs
    37bc:	b	3160 <PyBool_FromLong@plt>
    37c0:	bl	3220 <PyErr_Occurred@plt>
    37c4:	cbz	x0, 37a8 <PyNumber_FloorDivide@plt+0x378>
    37c8:	mov	x0, #0x0                   	// #0
    37cc:	ldp	x29, x30, [sp], #16
    37d0:	ret
    37d4:	nop
    37d8:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    37dc:	mov	x0, x1
    37e0:	ldr	x1, [x1, #8]
    37e4:	ldr	x2, [x2, #3960]
    37e8:	cmp	x1, x2
    37ec:	b.eq	3824 <PyNumber_FloorDivide@plt+0x3f4>  // b.none
    37f0:	stp	x29, x30, [sp, #-16]!
    37f4:	mov	x29, sp
    37f8:	bl	3250 <PyFloat_AsDouble@plt>
    37fc:	fmov	d1, #-1.000000000000000000e+00
    3800:	fcmp	d0, d1
    3804:	b.eq	3840 <PyNumber_FloorDivide@plt+0x410>  // b.none
    3808:	fabs	d0, d0
    380c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    3810:	ldp	x29, x30, [sp], #16
    3814:	fmov	d1, x0
    3818:	fcmp	d0, d1
    381c:	cset	x0, ls  // ls = plast
    3820:	b	3160 <PyBool_FromLong@plt>
    3824:	ldr	d1, [x0, #16]
    3828:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    382c:	fmov	d0, x0
    3830:	fabs	d1, d1
    3834:	fcmp	d1, d0
    3838:	cset	x0, ls  // ls = plast
    383c:	b	3160 <PyBool_FromLong@plt>
    3840:	bl	3220 <PyErr_Occurred@plt>
    3844:	cbnz	x0, 3854 <PyNumber_FloorDivide@plt+0x424>
    3848:	ldp	x29, x30, [sp], #16
    384c:	mov	x0, #0x1                   	// #1
    3850:	b	3160 <PyBool_FromLong@plt>
    3854:	mov	x0, #0x0                   	// #0
    3858:	ldp	x29, x30, [sp], #16
    385c:	ret
    3860:	stp	x29, x30, [sp, #-416]!
    3864:	mov	x0, x1
    3868:	mov	x29, sp
    386c:	stp	x21, x22, [sp, #32]
    3870:	bl	3300 <PyObject_GetIter@plt>
    3874:	cbz	x0, 3c60 <PyNumber_FloorDivide@plt+0x830>
    3878:	stp	d10, d11, [sp, #96]
    387c:	movi	d11, #0x0
    3880:	adrp	x22, 1e000 <_Py_log1p@@Base+0x13908>
    3884:	stp	x23, x24, [sp, #48]
    3888:	adrp	x23, 1e000 <_Py_log1p@@Base+0x13908>
    388c:	add	x24, sp, #0xa0
    3890:	ldr	x22, [x22, #3960]
    3894:	fmov	d10, d11
    3898:	ldr	x23, [x23, #4032]
    389c:	stp	x19, x20, [sp, #16]
    38a0:	mov	x19, x24
    38a4:	mov	x21, x0
    38a8:	mov	x20, #0x0                   	// #0
    38ac:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    38b0:	stp	x25, x26, [sp, #64]
    38b4:	mov	x25, #0x20                  	// #32
    38b8:	stp	d8, d9, [sp, #80]
    38bc:	fmov	d9, x0
    38c0:	str	d12, [sp, #112]
    38c4:	nop
    38c8:	mov	x0, x21
    38cc:	bl	2fe0 <PyIter_Next@plt>
    38d0:	mov	x26, x0
    38d4:	cbz	x0, 39d0 <PyNumber_FloorDivide@plt+0x5a0>
    38d8:	ldr	x1, [x0, #8]
    38dc:	cmp	x1, x22
    38e0:	b.eq	3a64 <PyNumber_FloorDivide@plt+0x634>  // b.none
    38e4:	cmp	x1, x23
    38e8:	b.eq	3a84 <PyNumber_FloorDivide@plt+0x654>  // b.none
    38ec:	bl	3250 <PyFloat_AsDouble@plt>
    38f0:	fmov	d12, d0
    38f4:	fmov	d1, #-1.000000000000000000e+00
    38f8:	fcmp	d0, d1
    38fc:	b.eq	3a98 <PyNumber_FloorDivide@plt+0x668>  // b.none
    3900:	ldr	x0, [x26]
    3904:	sub	x0, x0, #0x1
    3908:	str	x0, [x26]
    390c:	cbz	x0, 3a48 <PyNumber_FloorDivide@plt+0x618>
    3910:	fmov	d8, d12
    3914:	cmp	x20, #0x0
    3918:	b.le	3a5c <PyNumber_FloorDivide@plt+0x62c>
    391c:	mov	x1, #0x0                   	// #0
    3920:	mov	x2, #0x0                   	// #0
    3924:	nop
    3928:	ldr	d2, [x19, x1, lsl #3]
    392c:	fabs	d4, d8
    3930:	add	x3, x2, #0x1
    3934:	fabs	d1, d2
    3938:	fcmpe	d4, d1
    393c:	fcsel	d3, d2, d8, mi  // mi = first
    3940:	fcsel	d8, d8, d2, mi  // mi = first
    3944:	fadd	d1, d3, d8
    3948:	str	d1, [sp, #136]
    394c:	ldr	d1, [sp, #136]
    3950:	fsub	d1, d1, d3
    3954:	str	d1, [sp, #144]
    3958:	ldr	d1, [sp, #144]
    395c:	fsub	d8, d8, d1
    3960:	str	d8, [sp, #152]
    3964:	ldr	d1, [sp, #152]
    3968:	fcmp	d1, #0.0
    396c:	b.eq	3a30 <PyNumber_FloorDivide@plt+0x600>  // b.none
    3970:	ldr	d1, [sp, #152]
    3974:	add	x1, x1, #0x1
    3978:	ldr	d8, [sp, #136]
    397c:	cmp	x1, x20
    3980:	str	d1, [x19, x2, lsl #3]
    3984:	mov	x2, x3
    3988:	b.ne	3928 <PyNumber_FloorDivide@plt+0x4f8>  // b.any
    398c:	mov	x20, x3
    3990:	fcmp	d8, #0.0
    3994:	b.eq	38c8 <PyNumber_FloorDivide@plt+0x498>  // b.none
    3998:	fabs	d0, d8
    399c:	fcmp	d0, d9
    39a0:	b.ls	3a6c <PyNumber_FloorDivide@plt+0x63c>  // b.plast
    39a4:	fabs	d0, d12
    39a8:	fcmp	d0, d9
    39ac:	b.ls	3c20 <PyNumber_FloorDivide@plt+0x7f0>  // b.plast
    39b0:	b.le	39b8 <PyNumber_FloorDivide@plt+0x588>
    39b4:	fadd	d11, d11, d12
    39b8:	fadd	d10, d10, d12
    39bc:	mov	x0, x21
    39c0:	mov	x20, #0x0                   	// #0
    39c4:	bl	2fe0 <PyIter_Next@plt>
    39c8:	mov	x26, x0
    39cc:	cbnz	x0, 38d8 <PyNumber_FloorDivide@plt+0x4a8>
    39d0:	bl	3220 <PyErr_Occurred@plt>
    39d4:	mov	x22, x0
    39d8:	cbz	x0, 3b40 <PyNumber_FloorDivide@plt+0x710>
    39dc:	ldr	x0, [x21]
    39e0:	mov	x22, #0x0                   	// #0
    39e4:	sub	x0, x0, #0x1
    39e8:	str	x0, [x21]
    39ec:	cbnz	x0, 3b1c <PyNumber_FloorDivide@plt+0x6ec>
    39f0:	mov	x0, x21
    39f4:	bl	2fb0 <_Py_Dealloc@plt>
    39f8:	cmp	x19, x24
    39fc:	b.eq	3a08 <PyNumber_FloorDivide@plt+0x5d8>  // b.none
    3a00:	mov	x0, x19
    3a04:	bl	2f30 <PyMem_Free@plt>
    3a08:	ldp	x19, x20, [sp, #16]
    3a0c:	ldp	x23, x24, [sp, #48]
    3a10:	ldp	x25, x26, [sp, #64]
    3a14:	ldp	d8, d9, [sp, #80]
    3a18:	ldp	d10, d11, [sp, #96]
    3a1c:	ldr	d12, [sp, #112]
    3a20:	mov	x0, x22
    3a24:	ldp	x21, x22, [sp, #32]
    3a28:	ldp	x29, x30, [sp], #416
    3a2c:	ret
    3a30:	ldr	d8, [sp, #136]
    3a34:	add	x1, x1, #0x1
    3a38:	cmp	x20, x1
    3a3c:	b.ne	3928 <PyNumber_FloorDivide@plt+0x4f8>  // b.any
    3a40:	mov	x3, x2
    3a44:	b	398c <PyNumber_FloorDivide@plt+0x55c>
    3a48:	mov	x0, x26
    3a4c:	bl	2fb0 <_Py_Dealloc@plt>
    3a50:	cmp	x20, #0x0
    3a54:	fmov	d8, d12
    3a58:	b.gt	391c <PyNumber_FloorDivide@plt+0x4ec>
    3a5c:	mov	x20, #0x0                   	// #0
    3a60:	b	3990 <PyNumber_FloorDivide@plt+0x560>
    3a64:	ldr	d12, [x0, #16]
    3a68:	b	3900 <PyNumber_FloorDivide@plt+0x4d0>
    3a6c:	cmp	x20, x25
    3a70:	lsl	x26, x20, #3
    3a74:	b.ge	3aa8 <PyNumber_FloorDivide@plt+0x678>  // b.tcont
    3a78:	add	x20, x20, #0x1
    3a7c:	str	d8, [x19, x26]
    3a80:	b	38c8 <PyNumber_FloorDivide@plt+0x498>
    3a84:	bl	32c0 <PyLong_AsDouble@plt>
    3a88:	fmov	d12, d0
    3a8c:	fmov	d1, #-1.000000000000000000e+00
    3a90:	fcmp	d0, d1
    3a94:	b.ne	3900 <PyNumber_FloorDivide@plt+0x4d0>  // b.any
    3a98:	bl	3220 <PyErr_Occurred@plt>
    3a9c:	cbnz	x0, 3c40 <PyNumber_FloorDivide@plt+0x810>
    3aa0:	fmov	d12, #-1.000000000000000000e+00
    3aa4:	b	3900 <PyNumber_FloorDivide@plt+0x4d0>
    3aa8:	lsl	x25, x25, #1
    3aac:	mov	x0, #0xffffffffffffffe     	// #1152921504606846974
    3ab0:	cmp	x25, x20
    3ab4:	ccmp	x25, x0, #0x2, gt
    3ab8:	b.hi	3af0 <PyNumber_FloorDivide@plt+0x6c0>  // b.pmore
    3abc:	cmp	x19, x24
    3ac0:	lsl	x1, x25, #3
    3ac4:	b.eq	3adc <PyNumber_FloorDivide@plt+0x6ac>  // b.none
    3ac8:	mov	x0, x19
    3acc:	bl	30b0 <PyMem_Realloc@plt>
    3ad0:	cbz	x0, 3af0 <PyNumber_FloorDivide@plt+0x6c0>
    3ad4:	mov	x19, x0
    3ad8:	b	3a78 <PyNumber_FloorDivide@plt+0x648>
    3adc:	mov	x0, x1
    3ae0:	bl	33e0 <PyMem_Malloc@plt>
    3ae4:	mov	x19, x0
    3ae8:	cbnz	x0, 3b30 <PyNumber_FloorDivide@plt+0x700>
    3aec:	mov	x19, x24
    3af0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    3af4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3af8:	mov	x22, #0x0                   	// #0
    3afc:	add	x1, x1, #0x760
    3b00:	ldr	x0, [x0, #3984]
    3b04:	ldr	x0, [x0]
    3b08:	bl	3060 <PyErr_SetString@plt>
    3b0c:	ldr	x0, [x21]
    3b10:	sub	x0, x0, #0x1
    3b14:	str	x0, [x21]
    3b18:	cbz	x0, 39f0 <PyNumber_FloorDivide@plt+0x5c0>
    3b1c:	cmp	x19, x24
    3b20:	b.eq	3a08 <PyNumber_FloorDivide@plt+0x5d8>  // b.none
    3b24:	mov	x0, x19
    3b28:	bl	2f30 <PyMem_Free@plt>
    3b2c:	b	3a08 <PyNumber_FloorDivide@plt+0x5d8>
    3b30:	mov	x2, x26
    3b34:	mov	x1, x24
    3b38:	bl	2ed0 <memcpy@plt>
    3b3c:	b	3a78 <PyNumber_FloorDivide@plt+0x648>
    3b40:	fcmp	d10, #0.0
    3b44:	b.ne	3c08 <PyNumber_FloorDivide@plt+0x7d8>  // b.any
    3b48:	str	xzr, [sp, #136]
    3b4c:	cmp	x20, #0x0
    3b50:	b.le	3bf8 <PyNumber_FloorDivide@plt+0x7c8>
    3b54:	sub	x20, x20, #0x1
    3b58:	ldr	d0, [x19, x20, lsl #3]
    3b5c:	str	d0, [sp, #136]
    3b60:	cbz	x20, 3bf8 <PyNumber_FloorDivide@plt+0x7c8>
    3b64:	sub	x20, x20, #0x1
    3b68:	ldr	d2, [sp, #136]
    3b6c:	lsl	x0, x20, #3
    3b70:	ldr	d0, [x19, x20, lsl #3]
    3b74:	fadd	d1, d2, d0
    3b78:	str	d1, [sp, #136]
    3b7c:	ldr	d1, [sp, #136]
    3b80:	fsub	d1, d1, d2
    3b84:	str	d1, [sp, #144]
    3b88:	ldr	d1, [sp, #144]
    3b8c:	fsub	d0, d0, d1
    3b90:	str	d0, [sp, #152]
    3b94:	ldr	d0, [sp, #152]
    3b98:	fcmp	d0, #0.0
    3b9c:	b.eq	3b60 <PyNumber_FloorDivide@plt+0x730>  // b.none
    3ba0:	cbz	x20, 3bf8 <PyNumber_FloorDivide@plt+0x7c8>
    3ba4:	ldr	d0, [sp, #152]
    3ba8:	fcmpe	d0, #0.0
    3bac:	b.mi	3c68 <PyNumber_FloorDivide@plt+0x838>  // b.first
    3bb0:	ldr	d0, [sp, #152]
    3bb4:	fcmpe	d0, #0.0
    3bb8:	b.le	3bf8 <PyNumber_FloorDivide@plt+0x7c8>
    3bbc:	add	x0, x19, x0
    3bc0:	ldur	d0, [x0, #-8]
    3bc4:	fcmpe	d0, #0.0
    3bc8:	b.le	3bf8 <PyNumber_FloorDivide@plt+0x7c8>
    3bcc:	ldr	d0, [sp, #152]
    3bd0:	ldr	d1, [sp, #136]
    3bd4:	ldr	d2, [sp, #136]
    3bd8:	fadd	d0, d0, d0
    3bdc:	fadd	d1, d1, d0
    3be0:	fsub	d2, d1, d2
    3be4:	str	d2, [sp, #144]
    3be8:	ldr	d2, [sp, #144]
    3bec:	fcmp	d2, d0
    3bf0:	b.ne	3bf8 <PyNumber_FloorDivide@plt+0x7c8>  // b.any
    3bf4:	str	d1, [sp, #136]
    3bf8:	ldr	d0, [sp, #136]
    3bfc:	bl	3100 <PyFloat_FromDouble@plt>
    3c00:	mov	x22, x0
    3c04:	b	3b0c <PyNumber_FloorDivide@plt+0x6dc>
    3c08:	fcmp	d11, d11
    3c0c:	b.vs	3c7c <PyNumber_FloorDivide@plt+0x84c>
    3c10:	fmov	d0, d10
    3c14:	bl	3100 <PyFloat_FromDouble@plt>
    3c18:	mov	x22, x0
    3c1c:	b	3b0c <PyNumber_FloorDivide@plt+0x6dc>
    3c20:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    3c24:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3c28:	mov	x22, #0x0                   	// #0
    3c2c:	add	x1, x1, #0x740
    3c30:	ldr	x0, [x0, #4016]
    3c34:	ldr	x0, [x0]
    3c38:	bl	3060 <PyErr_SetString@plt>
    3c3c:	b	3b0c <PyNumber_FloorDivide@plt+0x6dc>
    3c40:	ldr	x0, [x26]
    3c44:	sub	x0, x0, #0x1
    3c48:	str	x0, [x26]
    3c4c:	cbnz	x0, 39dc <PyNumber_FloorDivide@plt+0x5ac>
    3c50:	mov	x0, x26
    3c54:	mov	x22, #0x0                   	// #0
    3c58:	bl	2fb0 <_Py_Dealloc@plt>
    3c5c:	b	3b0c <PyNumber_FloorDivide@plt+0x6dc>
    3c60:	mov	x22, #0x0                   	// #0
    3c64:	b	3a20 <PyNumber_FloorDivide@plt+0x5f0>
    3c68:	add	x1, x19, x0
    3c6c:	ldur	d0, [x1, #-8]
    3c70:	fcmpe	d0, #0.0
    3c74:	b.pl	3bb0 <PyNumber_FloorDivide@plt+0x780>  // b.nfrst
    3c78:	b	3bcc <PyNumber_FloorDivide@plt+0x79c>
    3c7c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    3c80:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    3c84:	add	x1, x1, #0x778
    3c88:	ldr	x0, [x0, #3992]
    3c8c:	ldr	x0, [x0]
    3c90:	bl	3060 <PyErr_SetString@plt>
    3c94:	b	3b0c <PyNumber_FloorDivide@plt+0x6dc>
    3c98:	stp	x29, x30, [sp, #-48]!
    3c9c:	mov	x29, sp
    3ca0:	stp	x19, x20, [sp, #16]
    3ca4:	sub	x19, x1, x0
    3ca8:	cmp	x19, #0x81
    3cac:	stp	x21, x22, [sp, #32]
    3cb0:	mov	x20, x1
    3cb4:	mov	x22, x2
    3cb8:	lsr	x19, x19, #1
    3cbc:	b.hi	3ccc <PyNumber_FloorDivide@plt+0x89c>  // b.pmore
    3cc0:	mul	x1, x19, x2
    3cc4:	cmp	x1, #0x40
    3cc8:	b.ls	3da0 <PyNumber_FloorDivide@plt+0x970>  // b.plast
    3ccc:	add	x19, x0, x19
    3cd0:	mov	x2, #0x0                   	// #0
    3cd4:	orr	x19, x19, #0x1
    3cd8:	sub	x3, x19, #0x2
    3cdc:	nop
    3ce0:	add	x2, x2, #0x1
    3ce4:	lsr	x3, x3, #1
    3ce8:	cbnz	x3, 3ce0 <PyNumber_FloorDivide@plt+0x8b0>
    3cec:	mov	x1, x19
    3cf0:	bl	3c98 <PyNumber_FloorDivide@plt+0x868>
    3cf4:	mov	x21, x0
    3cf8:	cbz	x0, 3d58 <PyNumber_FloorDivide@plt+0x928>
    3cfc:	mov	x0, x19
    3d00:	mov	x2, x22
    3d04:	mov	x1, x20
    3d08:	bl	3c98 <PyNumber_FloorDivide@plt+0x868>
    3d0c:	mov	x19, x0
    3d10:	cbz	x0, 3d70 <PyNumber_FloorDivide@plt+0x940>
    3d14:	mov	x1, x0
    3d18:	mov	x0, x21
    3d1c:	bl	3000 <PyNumber_Multiply@plt>
    3d20:	mov	x20, x0
    3d24:	ldr	x1, [x21]
    3d28:	sub	x0, x1, #0x1
    3d2c:	str	x0, [x21]
    3d30:	cbz	x0, 3dec <PyNumber_FloorDivide@plt+0x9bc>
    3d34:	ldr	x1, [x19]
    3d38:	sub	x1, x1, #0x1
    3d3c:	str	x1, [x19]
    3d40:	cbz	x1, 3dd0 <PyNumber_FloorDivide@plt+0x9a0>
    3d44:	mov	x0, x20
    3d48:	ldp	x19, x20, [sp, #16]
    3d4c:	ldp	x21, x22, [sp, #32]
    3d50:	ldp	x29, x30, [sp], #48
    3d54:	ret
    3d58:	mov	x20, #0x0                   	// #0
    3d5c:	mov	x0, x20
    3d60:	ldp	x19, x20, [sp, #16]
    3d64:	ldp	x21, x22, [sp, #32]
    3d68:	ldp	x29, x30, [sp], #48
    3d6c:	ret
    3d70:	ldr	x0, [x21]
    3d74:	sub	x0, x0, #0x1
    3d78:	str	x0, [x21]
    3d7c:	cbnz	x0, 3d58 <PyNumber_FloorDivide@plt+0x928>
    3d80:	mov	x0, x21
    3d84:	mov	x20, #0x0                   	// #0
    3d88:	bl	2fb0 <_Py_Dealloc@plt>
    3d8c:	mov	x0, x20
    3d90:	ldp	x19, x20, [sp, #16]
    3d94:	ldp	x21, x22, [sp, #32]
    3d98:	ldp	x29, x30, [sp], #48
    3d9c:	ret
    3da0:	add	x1, x0, #0x2
    3da4:	cmp	x20, x1
    3da8:	b.ls	3dc0 <PyNumber_FloorDivide@plt+0x990>  // b.plast
    3dac:	nop
    3db0:	mul	x0, x0, x1
    3db4:	add	x1, x1, #0x2
    3db8:	cmp	x20, x1
    3dbc:	b.hi	3db0 <PyNumber_FloorDivide@plt+0x980>  // b.pmore
    3dc0:	ldp	x19, x20, [sp, #16]
    3dc4:	ldp	x21, x22, [sp, #32]
    3dc8:	ldp	x29, x30, [sp], #48
    3dcc:	b	32e0 <PyLong_FromUnsignedLong@plt>
    3dd0:	mov	x0, x19
    3dd4:	bl	2fb0 <_Py_Dealloc@plt>
    3dd8:	mov	x0, x20
    3ddc:	ldp	x19, x20, [sp, #16]
    3de0:	ldp	x21, x22, [sp, #32]
    3de4:	ldp	x29, x30, [sp], #48
    3de8:	ret
    3dec:	mov	x0, x21
    3df0:	bl	2fb0 <_Py_Dealloc@plt>
    3df4:	b	3d34 <PyNumber_FloorDivide@plt+0x904>
    3df8:	stp	x29, x30, [sp, #-96]!
    3dfc:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    3e00:	mov	x29, sp
    3e04:	stp	x19, x20, [sp, #16]
    3e08:	mov	x19, x1
    3e0c:	ldr	x1, [x0, #3960]
    3e10:	stp	x23, x24, [sp, #48]
    3e14:	ldr	x0, [x19, #8]
    3e18:	cmp	x0, x1
    3e1c:	b.eq	3e28 <PyNumber_FloorDivide@plt+0x9f8>  // b.none
    3e20:	bl	3350 <PyType_IsSubtype@plt>
    3e24:	cbz	w0, 40b8 <PyNumber_FloorDivide@plt+0xc88>
    3e28:	ldr	d0, [x19, #16]
    3e2c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    3e30:	fmov	d1, x0
    3e34:	fabs	d2, d0
    3e38:	fcmp	d2, d1
    3e3c:	b.hi	4074 <PyNumber_FloorDivide@plt+0xc44>  // b.pmore
    3e40:	frintm	d1, d0
    3e44:	fcmp	d1, d0
    3e48:	b.ne	4074 <PyNumber_FloorDivide@plt+0xc44>  // b.any
    3e4c:	bl	2f20 <PyLong_FromDouble@plt>
    3e50:	mov	x19, x0
    3e54:	cbz	x0, 4038 <PyNumber_FloorDivide@plt+0xc08>
    3e58:	add	x1, sp, #0x5c
    3e5c:	bl	31e0 <PyLong_AsLongAndOverflow@plt>
    3e60:	ldr	x1, [x19]
    3e64:	mov	x24, x0
    3e68:	sub	x0, x1, #0x1
    3e6c:	str	x0, [x19]
    3e70:	cbz	x0, 40a4 <PyNumber_FloorDivide@plt+0xc74>
    3e74:	cmn	x24, #0x1
    3e78:	b.eq	40e8 <PyNumber_FloorDivide@plt+0xcb8>  // b.none
    3e7c:	ldr	w0, [sp, #92]
    3e80:	cmp	w0, #0x1
    3e84:	b.eq	4188 <PyNumber_FloorDivide@plt+0xd58>  // b.none
    3e88:	cmp	x24, #0x0
    3e8c:	ccmn	w0, #0x1, #0x4, ge  // ge = tcont
    3e90:	b.eq	40fc <PyNumber_FloorDivide@plt+0xccc>  // b.none
    3e94:	cmp	x24, #0x14
    3e98:	b.le	411c <PyNumber_FloorDivide@plt+0xcec>
    3e9c:	mov	x0, #0x1                   	// #1
    3ea0:	str	x25, [sp, #64]
    3ea4:	bl	3120 <PyLong_FromLong@plt>
    3ea8:	mov	x25, x0
    3eac:	cbz	x0, 4034 <PyNumber_FloorDivide@plt+0xc04>
    3eb0:	ldr	x2, [x25]
    3eb4:	mov	x1, x24
    3eb8:	stp	x21, x22, [sp, #32]
    3ebc:	mov	x0, #0x0                   	// #0
    3ec0:	add	x3, x2, #0x1
    3ec4:	str	x3, [x25]
    3ec8:	mov	x22, x0
    3ecc:	lsr	x1, x1, #1
    3ed0:	add	x0, x0, #0x1
    3ed4:	cbnz	x1, 3ec8 <PyNumber_FloorDivide@plt+0xa98>
    3ed8:	mov	x23, x25
    3edc:	subs	x22, x22, #0x1
    3ee0:	b.mi	3fac <PyNumber_FloorDivide@plt+0xb7c>  // b.first
    3ee4:	mov	x0, #0x3                   	// #3
    3ee8:	b	3ef8 <PyNumber_FloorDivide@plt+0xac8>
    3eec:	sub	x22, x22, #0x1
    3ef0:	cmn	x22, #0x1
    3ef4:	b.eq	3fa4 <PyNumber_FloorDivide@plt+0xb74>  // b.none
    3ef8:	lsr	x19, x24, x22
    3efc:	cmp	x19, #0x2
    3f00:	b.ls	3eec <PyNumber_FloorDivide@plt+0xabc>  // b.plast
    3f04:	add	x19, x19, #0x1
    3f08:	mov	x2, #0x0                   	// #0
    3f0c:	orr	x19, x19, #0x1
    3f10:	sub	x1, x19, #0x2
    3f14:	nop
    3f18:	add	x2, x2, #0x1
    3f1c:	lsr	x1, x1, #1
    3f20:	cbnz	x1, 3f18 <PyNumber_FloorDivide@plt+0xae8>
    3f24:	mov	x1, x19
    3f28:	bl	3c98 <PyNumber_FloorDivide@plt+0x868>
    3f2c:	mov	x20, x0
    3f30:	cbz	x0, 4010 <PyNumber_FloorDivide@plt+0xbe0>
    3f34:	mov	x1, x0
    3f38:	mov	x0, x25
    3f3c:	bl	3000 <PyNumber_Multiply@plt>
    3f40:	mov	x21, x0
    3f44:	ldr	x1, [x20]
    3f48:	sub	x0, x1, #0x1
    3f4c:	str	x0, [x20]
    3f50:	cbz	x0, 4000 <PyNumber_FloorDivide@plt+0xbd0>
    3f54:	cbz	x21, 4010 <PyNumber_FloorDivide@plt+0xbe0>
    3f58:	ldr	x0, [x25]
    3f5c:	sub	x0, x0, #0x1
    3f60:	str	x0, [x25]
    3f64:	cbz	x0, 4050 <PyNumber_FloorDivide@plt+0xc20>
    3f68:	mov	x1, x21
    3f6c:	mov	x0, x23
    3f70:	bl	3000 <PyNumber_Multiply@plt>
    3f74:	mov	x20, x0
    3f78:	cbz	x0, 400c <PyNumber_FloorDivide@plt+0xbdc>
    3f7c:	ldr	x0, [x23]
    3f80:	sub	x0, x0, #0x1
    3f84:	str	x0, [x23]
    3f88:	cbz	x0, 405c <PyNumber_FloorDivide@plt+0xc2c>
    3f8c:	sub	x22, x22, #0x1
    3f90:	mov	x23, x20
    3f94:	mov	x25, x21
    3f98:	mov	x0, x19
    3f9c:	cmn	x22, #0x1
    3fa0:	b.ne	3ef8 <PyNumber_FloorDivide@plt+0xac8>  // b.any
    3fa4:	ldr	x2, [x25]
    3fa8:	sub	x2, x2, #0x1
    3fac:	str	x2, [x25]
    3fb0:	cbz	x2, 417c <PyNumber_FloorDivide@plt+0xd4c>
    3fb4:	fmov	d0, x24
    3fb8:	mov	x0, x23
    3fbc:	cnt	v0.8b, v0.8b
    3fc0:	addv	b0, v0.8b
    3fc4:	umov	w1, v0.b[0]
    3fc8:	sub	x1, x24, x1
    3fcc:	bl	3420 <_PyLong_Lshift@plt>
    3fd0:	ldr	x1, [x23]
    3fd4:	mov	x19, x0
    3fd8:	sub	x0, x1, #0x1
    3fdc:	str	x0, [x23]
    3fe0:	cbz	x0, 4144 <PyNumber_FloorDivide@plt+0xd14>
    3fe4:	mov	x0, x19
    3fe8:	ldp	x19, x20, [sp, #16]
    3fec:	ldp	x21, x22, [sp, #32]
    3ff0:	ldp	x23, x24, [sp, #48]
    3ff4:	ldr	x25, [sp, #64]
    3ff8:	ldp	x29, x30, [sp], #96
    3ffc:	ret
    4000:	mov	x0, x20
    4004:	bl	2fb0 <_Py_Dealloc@plt>
    4008:	b	3f54 <PyNumber_FloorDivide@plt+0xb24>
    400c:	mov	x25, x21
    4010:	ldr	x0, [x23]
    4014:	sub	x0, x0, #0x1
    4018:	str	x0, [x23]
    401c:	cbz	x0, 4158 <PyNumber_FloorDivide@plt+0xd28>
    4020:	ldr	x0, [x25]
    4024:	sub	x0, x0, #0x1
    4028:	str	x0, [x25]
    402c:	cbz	x0, 4164 <PyNumber_FloorDivide@plt+0xd34>
    4030:	ldp	x21, x22, [sp, #32]
    4034:	ldr	x25, [sp, #64]
    4038:	mov	x19, #0x0                   	// #0
    403c:	mov	x0, x19
    4040:	ldp	x19, x20, [sp, #16]
    4044:	ldp	x23, x24, [sp, #48]
    4048:	ldp	x29, x30, [sp], #96
    404c:	ret
    4050:	mov	x0, x25
    4054:	bl	2fb0 <_Py_Dealloc@plt>
    4058:	b	3f68 <PyNumber_FloorDivide@plt+0xb38>
    405c:	mov	x0, x23
    4060:	bl	2fb0 <_Py_Dealloc@plt>
    4064:	mov	x25, x21
    4068:	mov	x23, x20
    406c:	mov	x0, x19
    4070:	b	3eec <PyNumber_FloorDivide@plt+0xabc>
    4074:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    4078:	mov	x19, #0x0                   	// #0
    407c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4080:	add	x1, x1, #0x790
    4084:	ldr	x0, [x0, #3992]
    4088:	ldr	x0, [x0]
    408c:	bl	3060 <PyErr_SetString@plt>
    4090:	mov	x0, x19
    4094:	ldp	x19, x20, [sp, #16]
    4098:	ldp	x23, x24, [sp, #48]
    409c:	ldp	x29, x30, [sp], #96
    40a0:	ret
    40a4:	mov	x0, x19
    40a8:	bl	2fb0 <_Py_Dealloc@plt>
    40ac:	cmn	x24, #0x1
    40b0:	b.ne	3e7c <PyNumber_FloorDivide@plt+0xa4c>  // b.any
    40b4:	b	40e8 <PyNumber_FloorDivide@plt+0xcb8>
    40b8:	mov	x0, x19
    40bc:	bl	33a0 <PyNumber_Index@plt>
    40c0:	mov	x19, x0
    40c4:	cbz	x0, 4038 <PyNumber_FloorDivide@plt+0xc08>
    40c8:	add	x1, sp, #0x5c
    40cc:	bl	31e0 <PyLong_AsLongAndOverflow@plt>
    40d0:	ldr	x1, [x19]
    40d4:	mov	x24, x0
    40d8:	sub	x0, x1, #0x1
    40dc:	str	x0, [x19]
    40e0:	cbnz	x0, 3e74 <PyNumber_FloorDivide@plt+0xa44>
    40e4:	b	40a4 <PyNumber_FloorDivide@plt+0xc74>
    40e8:	bl	3220 <PyErr_Occurred@plt>
    40ec:	cbnz	x0, 4038 <PyNumber_FloorDivide@plt+0xc08>
    40f0:	ldr	w0, [sp, #92]
    40f4:	cmp	w0, #0x1
    40f8:	b.eq	4188 <PyNumber_FloorDivide@plt+0xd58>  // b.none
    40fc:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    4100:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4104:	mov	x19, #0x0                   	// #0
    4108:	add	x1, x1, #0x7f0
    410c:	ldr	x0, [x0, #3992]
    4110:	ldr	x0, [x0]
    4114:	bl	3060 <PyErr_SetString@plt>
    4118:	b	403c <PyNumber_FloorDivide@plt+0xc0c>
    411c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4120:	add	x0, x0, #0xdd0
    4124:	ldr	x0, [x0, x24, lsl #3]
    4128:	bl	32e0 <PyLong_FromUnsignedLong@plt>
    412c:	mov	x19, x0
    4130:	mov	x0, x19
    4134:	ldp	x19, x20, [sp, #16]
    4138:	ldp	x23, x24, [sp, #48]
    413c:	ldp	x29, x30, [sp], #96
    4140:	ret
    4144:	mov	x0, x23
    4148:	bl	2fb0 <_Py_Dealloc@plt>
    414c:	ldp	x21, x22, [sp, #32]
    4150:	ldr	x25, [sp, #64]
    4154:	b	403c <PyNumber_FloorDivide@plt+0xc0c>
    4158:	mov	x0, x23
    415c:	bl	2fb0 <_Py_Dealloc@plt>
    4160:	b	4020 <PyNumber_FloorDivide@plt+0xbf0>
    4164:	mov	x0, x25
    4168:	mov	x19, #0x0                   	// #0
    416c:	bl	2fb0 <_Py_Dealloc@plt>
    4170:	ldp	x21, x22, [sp, #32]
    4174:	ldr	x25, [sp, #64]
    4178:	b	403c <PyNumber_FloorDivide@plt+0xc0c>
    417c:	mov	x0, x25
    4180:	bl	2fb0 <_Py_Dealloc@plt>
    4184:	b	3fb4 <PyNumber_FloorDivide@plt+0xb84>
    4188:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    418c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4190:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    4194:	add	x1, x1, #0x7c0
    4198:	ldr	x0, [x0, #4016]
    419c:	mov	x19, #0x0                   	// #0
    41a0:	ldr	x0, [x0]
    41a4:	bl	3370 <PyErr_Format@plt>
    41a8:	b	403c <PyNumber_FloorDivide@plt+0xc0c>
    41ac:	nop
    41b0:	stp	x29, x30, [sp, #-96]!
    41b4:	mov	x29, sp
    41b8:	stp	x19, x20, [sp, #16]
    41bc:	mov	x19, x2
    41c0:	sub	x2, x2, #0x1
    41c4:	stp	x21, x22, [sp, #32]
    41c8:	mov	x20, x1
    41cc:	mov	x21, x0
    41d0:	cmp	x2, #0x1
    41d4:	b.hi	42e4 <PyNumber_FloorDivide@plt+0xeb4>  // b.pmore
    41d8:	cmp	x19, #0x1
    41dc:	ldr	x0, [x20]
    41e0:	b.le	430c <PyNumber_FloorDivide@plt+0xedc>
    41e4:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    41e8:	ldr	x22, [x20, #8]
    41ec:	ldr	x2, [x2, #4024]
    41f0:	cmp	x22, x2
    41f4:	b.eq	430c <PyNumber_FloorDivide@plt+0xedc>  // b.none
    41f8:	bl	33a0 <PyNumber_Index@plt>
    41fc:	mov	x19, x0
    4200:	cbz	x0, 42c4 <PyNumber_FloorDivide@plt+0xe94>
    4204:	adrp	x21, 1e000 <_Py_log1p@@Base+0x13908>
    4208:	ldr	x2, [x0, #8]
    420c:	ldr	x1, [x21, #4032]
    4210:	cmp	x2, x1
    4214:	b.eq	42dc <PyNumber_FloorDivide@plt+0xeac>  // b.none
    4218:	bl	30a0 <_PyLong_Copy@plt>
    421c:	mov	x20, x0
    4220:	ldr	x1, [x19]
    4224:	sub	x0, x1, #0x1
    4228:	str	x0, [x19]
    422c:	cbz	x0, 4338 <PyNumber_FloorDivide@plt+0xf08>
    4230:	cbz	x20, 42c4 <PyNumber_FloorDivide@plt+0xe94>
    4234:	mov	x0, x22
    4238:	bl	33a0 <PyNumber_Index@plt>
    423c:	mov	x19, x0
    4240:	cbz	x0, 44bc <PyNumber_FloorDivide@plt+0x108c>
    4244:	ldr	x1, [x21, #4032]
    4248:	stp	x25, x26, [sp, #64]
    424c:	ldr	x2, [x0, #8]
    4250:	cmp	x2, x1
    4254:	b.eq	4330 <PyNumber_FloorDivide@plt+0xf00>  // b.none
    4258:	bl	30a0 <_PyLong_Copy@plt>
    425c:	mov	x26, x0
    4260:	ldr	x1, [x19]
    4264:	sub	x1, x1, #0x1
    4268:	str	x1, [x19]
    426c:	cbz	x1, 4368 <PyNumber_FloorDivide@plt+0xf38>
    4270:	cbz	x26, 454c <PyNumber_FloorDivide@plt+0x111c>
    4274:	ldr	x0, [x20, #16]
    4278:	tbnz	x0, #63, 44a0 <PyNumber_FloorDivide@plt+0x1070>
    427c:	ldr	x0, [x26, #16]
    4280:	tbnz	x0, #63, 43b4 <PyNumber_FloorDivide@plt+0xf84>
    4284:	mov	x1, x26
    4288:	mov	x0, x20
    428c:	mov	w2, #0x0                   	// #0
    4290:	bl	3130 <PyObject_RichCompareBool@plt>
    4294:	cmp	w0, #0x0
    4298:	cbz	w0, 43d0 <PyNumber_FloorDivide@plt+0xfa0>
    429c:	b.gt	4374 <PyNumber_FloorDivide@plt+0xf44>
    42a0:	ldr	x1, [x20]
    42a4:	sub	x1, x1, #0x1
    42a8:	str	x1, [x20]
    42ac:	cbz	x1, 43a8 <PyNumber_FloorDivide@plt+0xf78>
    42b0:	ldr	x1, [x26]
    42b4:	sub	x1, x1, #0x1
    42b8:	str	x1, [x26]
    42bc:	cbz	x1, 4344 <PyNumber_FloorDivide@plt+0xf14>
    42c0:	ldp	x25, x26, [sp, #64]
    42c4:	mov	x19, #0x0                   	// #0
    42c8:	mov	x0, x19
    42cc:	ldp	x19, x20, [sp, #16]
    42d0:	ldp	x21, x22, [sp, #32]
    42d4:	ldp	x29, x30, [sp], #96
    42d8:	ret
    42dc:	mov	x20, x0
    42e0:	b	4234 <PyNumber_FloorDivide@plt+0xe04>
    42e4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    42e8:	mov	x1, x19
    42ec:	add	x0, x0, #0x820
    42f0:	mov	x3, #0x2                   	// #2
    42f4:	mov	x2, #0x1                   	// #1
    42f8:	bl	31d0 <_PyArg_CheckPositional@plt>
    42fc:	cbz	w0, 42c4 <PyNumber_FloorDivide@plt+0xe94>
    4300:	cmp	x19, #0x1
    4304:	ldr	x0, [x20]
    4308:	b.gt	41e4 <PyNumber_FloorDivide@plt+0xdb4>
    430c:	mov	x1, x0
    4310:	mov	x0, x21
    4314:	bl	3df8 <PyNumber_FloorDivide@plt+0x9c8>
    4318:	mov	x19, x0
    431c:	mov	x0, x19
    4320:	ldp	x19, x20, [sp, #16]
    4324:	ldp	x21, x22, [sp, #32]
    4328:	ldp	x29, x30, [sp], #96
    432c:	ret
    4330:	mov	x26, x0
    4334:	b	4274 <PyNumber_FloorDivide@plt+0xe44>
    4338:	mov	x0, x19
    433c:	bl	2fb0 <_Py_Dealloc@plt>
    4340:	b	4230 <PyNumber_FloorDivide@plt+0xe00>
    4344:	mov	x0, x26
    4348:	mov	x19, #0x0                   	// #0
    434c:	bl	2fb0 <_Py_Dealloc@plt>
    4350:	mov	x0, x19
    4354:	ldp	x19, x20, [sp, #16]
    4358:	ldp	x21, x22, [sp, #32]
    435c:	ldp	x25, x26, [sp, #64]
    4360:	ldp	x29, x30, [sp], #96
    4364:	ret
    4368:	mov	x0, x19
    436c:	bl	2fb0 <_Py_Dealloc@plt>
    4370:	b	4270 <PyNumber_FloorDivide@plt+0xe40>
    4374:	mov	x0, #0x0                   	// #0
    4378:	bl	3120 <PyLong_FromLong@plt>
    437c:	ldr	x1, [x20]
    4380:	mov	x19, x0
    4384:	sub	x0, x1, #0x1
    4388:	str	x0, [x20]
    438c:	cbz	x0, 451c <PyNumber_FloorDivide@plt+0x10ec>
    4390:	ldr	x0, [x26]
    4394:	sub	x0, x0, #0x1
    4398:	str	x0, [x26]
    439c:	cbz	x0, 450c <PyNumber_FloorDivide@plt+0x10dc>
    43a0:	ldp	x25, x26, [sp, #64]
    43a4:	b	42c8 <PyNumber_FloorDivide@plt+0xe98>
    43a8:	mov	x0, x20
    43ac:	bl	2fb0 <_Py_Dealloc@plt>
    43b0:	b	42b0 <PyNumber_FloorDivide@plt+0xe80>
    43b4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    43b8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    43bc:	add	x1, x1, #0x850
    43c0:	ldr	x0, [x0, #3992]
    43c4:	ldr	x0, [x0]
    43c8:	bl	3060 <PyErr_SetString@plt>
    43cc:	b	42a0 <PyNumber_FloorDivide@plt+0xe70>
    43d0:	add	x1, sp, #0x5c
    43d4:	mov	x0, x26
    43d8:	stp	x23, x24, [sp, #48]
    43dc:	bl	2ef0 <PyLong_AsLongLongAndOverflow@plt>
    43e0:	ldr	w1, [sp, #92]
    43e4:	mov	x24, x0
    43e8:	cmp	w1, #0x0
    43ec:	b.gt	4528 <PyNumber_FloorDivide@plt+0x10f8>
    43f0:	cmn	x0, #0x1
    43f4:	b.eq	4498 <PyNumber_FloorDivide@plt+0x1068>  // b.none
    43f8:	cbz	x0, 4590 <PyNumber_FloorDivide@plt+0x1160>
    43fc:	cmp	x0, #0x1
    4400:	ldr	x0, [x20]
    4404:	add	x1, x0, #0x1
    4408:	b.eq	44d8 <PyNumber_FloorDivide@plt+0x10a8>  // b.none
    440c:	add	x0, x0, #0x2
    4410:	str	x0, [x20]
    4414:	b.le	45d8 <PyNumber_FloorDivide@plt+0x11a8>
    4418:	adrp	x25, 1e000 <_Py_log1p@@Base+0x13908>
    441c:	mov	x22, x20
    4420:	mov	x21, x20
    4424:	mov	x23, #0x1                   	// #1
    4428:	ldr	x25, [x25, #4056]
    442c:	b	4464 <PyNumber_FloorDivide@plt+0x1034>
    4430:	mov	x1, x21
    4434:	mov	x0, x22
    4438:	cbz	x21, 44e4 <PyNumber_FloorDivide@plt+0x10b4>
    443c:	bl	3000 <PyNumber_Multiply@plt>
    4440:	mov	x19, x0
    4444:	ldr	x1, [x22]
    4448:	sub	x1, x1, #0x1
    444c:	str	x1, [x22]
    4450:	cbz	x1, 4500 <PyNumber_FloorDivide@plt+0x10d0>
    4454:	mov	x22, x19
    4458:	cbz	x19, 4570 <PyNumber_FloorDivide@plt+0x1140>
    445c:	cmp	x24, x23
    4460:	b.eq	45ac <PyNumber_FloorDivide@plt+0x117c>  // b.none
    4464:	ldr	x1, [x25]
    4468:	mov	x19, x21
    446c:	mov	x0, x21
    4470:	add	x23, x23, #0x1
    4474:	bl	33f0 <PyNumber_Subtract@plt>
    4478:	mov	x21, x0
    447c:	ldr	x1, [x19]
    4480:	sub	x1, x1, #0x1
    4484:	str	x1, [x19]
    4488:	cbnz	x1, 4430 <PyNumber_FloorDivide@plt+0x1000>
    448c:	mov	x0, x19
    4490:	bl	2fb0 <_Py_Dealloc@plt>
    4494:	b	4430 <PyNumber_FloorDivide@plt+0x1000>
    4498:	ldp	x23, x24, [sp, #48]
    449c:	b	42a0 <PyNumber_FloorDivide@plt+0xe70>
    44a0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    44a4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    44a8:	add	x1, x1, #0x828
    44ac:	ldr	x0, [x0, #3992]
    44b0:	ldr	x0, [x0]
    44b4:	bl	3060 <PyErr_SetString@plt>
    44b8:	b	42a0 <PyNumber_FloorDivide@plt+0xe70>
    44bc:	ldr	x0, [x20]
    44c0:	sub	x0, x0, #0x1
    44c4:	str	x0, [x20]
    44c8:	cbnz	x0, 42c4 <PyNumber_FloorDivide@plt+0xe94>
    44cc:	mov	x0, x20
    44d0:	bl	2fb0 <_Py_Dealloc@plt>
    44d4:	b	42c8 <PyNumber_FloorDivide@plt+0xe98>
    44d8:	mov	x19, x20
    44dc:	ldp	x23, x24, [sp, #48]
    44e0:	b	4388 <PyNumber_FloorDivide@plt+0xf58>
    44e4:	ldr	x1, [x22]
    44e8:	sub	x1, x1, #0x1
    44ec:	str	x1, [x22]
    44f0:	cbnz	x1, 4498 <PyNumber_FloorDivide@plt+0x1068>
    44f4:	bl	2fb0 <_Py_Dealloc@plt>
    44f8:	ldp	x23, x24, [sp, #48]
    44fc:	b	42a0 <PyNumber_FloorDivide@plt+0xe70>
    4500:	mov	x0, x22
    4504:	bl	2fb0 <_Py_Dealloc@plt>
    4508:	b	4454 <PyNumber_FloorDivide@plt+0x1024>
    450c:	mov	x0, x26
    4510:	bl	2fb0 <_Py_Dealloc@plt>
    4514:	ldp	x25, x26, [sp, #64]
    4518:	b	42c8 <PyNumber_FloorDivide@plt+0xe98>
    451c:	mov	x0, x20
    4520:	bl	2fb0 <_Py_Dealloc@plt>
    4524:	b	4390 <PyNumber_FloorDivide@plt+0xf60>
    4528:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    452c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4530:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    4534:	add	x1, x1, #0x878
    4538:	ldr	x0, [x0, #4016]
    453c:	ldr	x0, [x0]
    4540:	bl	3370 <PyErr_Format@plt>
    4544:	ldp	x23, x24, [sp, #48]
    4548:	b	42a0 <PyNumber_FloorDivide@plt+0xe70>
    454c:	ldr	x0, [x20]
    4550:	sub	x0, x0, #0x1
    4554:	str	x0, [x20]
    4558:	cbnz	x0, 42c0 <PyNumber_FloorDivide@plt+0xe90>
    455c:	mov	x0, x20
    4560:	mov	x19, #0x0                   	// #0
    4564:	bl	2fb0 <_Py_Dealloc@plt>
    4568:	ldp	x25, x26, [sp, #64]
    456c:	b	42c8 <PyNumber_FloorDivide@plt+0xe98>
    4570:	ldr	x0, [x21]
    4574:	sub	x0, x0, #0x1
    4578:	str	x0, [x21]
    457c:	cbnz	x0, 4498 <PyNumber_FloorDivide@plt+0x1068>
    4580:	mov	x0, x21
    4584:	bl	2fb0 <_Py_Dealloc@plt>
    4588:	ldp	x23, x24, [sp, #48]
    458c:	b	42a0 <PyNumber_FloorDivide@plt+0xe70>
    4590:	mov	x0, #0x1                   	// #1
    4594:	bl	3120 <PyLong_FromLong@plt>
    4598:	ldr	x1, [x20]
    459c:	mov	x19, x0
    45a0:	ldp	x23, x24, [sp, #48]
    45a4:	sub	x0, x1, #0x1
    45a8:	b	4388 <PyNumber_FloorDivide@plt+0xf58>
    45ac:	ldr	x1, [x21]
    45b0:	sub	x1, x1, #0x1
    45b4:	str	x1, [x21]
    45b8:	cbz	x1, 45cc <PyNumber_FloorDivide@plt+0x119c>
    45bc:	ldr	x0, [x20]
    45c0:	ldp	x23, x24, [sp, #48]
    45c4:	sub	x0, x0, #0x1
    45c8:	b	4388 <PyNumber_FloorDivide@plt+0xf58>
    45cc:	mov	x0, x21
    45d0:	bl	2fb0 <_Py_Dealloc@plt>
    45d4:	b	45bc <PyNumber_FloorDivide@plt+0x118c>
    45d8:	mov	x19, x20
    45dc:	mov	x21, x20
    45e0:	b	45b4 <PyNumber_FloorDivide@plt+0x1184>
    45e4:	nop
    45e8:	sub	sp, sp, #0x70
    45ec:	stp	x29, x30, [sp, #16]
    45f0:	add	x29, sp, #0x10
    45f4:	stp	x19, x20, [sp, #32]
    45f8:	mov	x19, x1
    45fc:	mov	x1, x2
    4600:	str	x21, [sp, #48]
    4604:	cbz	x3, 477c <PyNumber_FloorDivide@plt+0x134c>
    4608:	ldr	x21, [x3, #16]
    460c:	add	x21, x2, x21
    4610:	add	x0, sp, #0x50
    4614:	str	x0, [sp]
    4618:	mov	w6, #0x2                   	// #2
    461c:	mov	x0, x19
    4620:	mov	w5, w6
    4624:	adrp	x4, 1f000 <_Py_log1p@@Base+0x14908>
    4628:	mov	w7, #0x0                   	// #0
    462c:	add	x4, x4, #0x2c0
    4630:	mov	x2, #0x0                   	// #0
    4634:	bl	3050 <_PyArg_UnpackKeywords@plt>
    4638:	mov	x19, x0
    463c:	cbz	x0, 4804 <PyNumber_FloorDivide@plt+0x13d4>
    4640:	stp	d8, d9, [sp, #64]
    4644:	adrp	x20, 1e000 <_Py_log1p@@Base+0x13908>
    4648:	ldr	x0, [x19]
    464c:	ldr	x1, [x20, #3960]
    4650:	ldr	x2, [x0, #8]
    4654:	cmp	x2, x1
    4658:	b.eq	4790 <PyNumber_FloorDivide@plt+0x1360>  // b.none
    465c:	bl	3250 <PyFloat_AsDouble@plt>
    4660:	fmov	d9, d0
    4664:	fmov	d1, #-1.000000000000000000e+00
    4668:	fcmp	d0, d1
    466c:	b.eq	4870 <PyNumber_FloorDivide@plt+0x1440>  // b.none
    4670:	ldr	x0, [x19, #8]
    4674:	ldr	x1, [x20, #3960]
    4678:	ldr	x2, [x0, #8]
    467c:	cmp	x2, x1
    4680:	b.eq	47a8 <PyNumber_FloorDivide@plt+0x1378>  // b.none
    4684:	bl	3250 <PyFloat_AsDouble@plt>
    4688:	fmov	d8, d0
    468c:	fmov	d1, #-1.000000000000000000e+00
    4690:	fcmp	d0, d1
    4694:	b.eq	4834 <PyNumber_FloorDivide@plt+0x1404>  // b.none
    4698:	str	d10, [sp, #56]
    469c:	cmp	x21, #0x2
    46a0:	b.eq	47b8 <PyNumber_FloorDivide@plt+0x1388>  // b.none
    46a4:	ldr	x0, [x19, #16]
    46a8:	cbz	x0, 4864 <PyNumber_FloorDivide@plt+0x1434>
    46ac:	ldr	x1, [x20, #3960]
    46b0:	ldr	x2, [x0, #8]
    46b4:	cmp	x2, x1
    46b8:	b.eq	4824 <PyNumber_FloorDivide@plt+0x13f4>  // b.none
    46bc:	bl	3250 <PyFloat_AsDouble@plt>
    46c0:	fmov	d10, d0
    46c4:	fmov	d1, #-1.000000000000000000e+00
    46c8:	fcmp	d0, d1
    46cc:	b.eq	4848 <PyNumber_FloorDivide@plt+0x1418>  // b.none
    46d0:	cmp	x21, #0x3
    46d4:	b.eq	4880 <PyNumber_FloorDivide@plt+0x1450>  // b.none
    46d8:	ldr	x0, [x19, #24]
    46dc:	ldr	x20, [x20, #3960]
    46e0:	ldr	x1, [x0, #8]
    46e4:	cmp	x1, x20
    46e8:	b.eq	481c <PyNumber_FloorDivide@plt+0x13ec>  // b.none
    46ec:	bl	3250 <PyFloat_AsDouble@plt>
    46f0:	fmov	d1, #-1.000000000000000000e+00
    46f4:	fcmp	d0, d1
    46f8:	b.eq	47d4 <PyNumber_FloorDivide@plt+0x13a4>  // b.none
    46fc:	fcmpe	d10, #0.0
    4700:	b.mi	47dc <PyNumber_FloorDivide@plt+0x13ac>  // b.first
    4704:	fcmpe	d0, #0.0
    4708:	b.mi	47dc <PyNumber_FloorDivide@plt+0x13ac>  // b.first
    470c:	fcmp	d9, d8
    4710:	mov	x0, #0x1                   	// #1
    4714:	b.eq	475c <PyNumber_FloorDivide@plt+0x132c>  // b.none
    4718:	fabs	d2, d9
    471c:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    4720:	fmov	d1, x1
    4724:	fcmp	d2, d1
    4728:	b.gt	485c <PyNumber_FloorDivide@plt+0x142c>
    472c:	fabs	d2, d8
    4730:	fcmp	d2, d1
    4734:	b.gt	485c <PyNumber_FloorDivide@plt+0x142c>
    4738:	fmul	d1, d8, d10
    473c:	fabd	d8, d8, d9
    4740:	fabs	d1, d1
    4744:	fcmpe	d8, d1
    4748:	b.ls	475c <PyNumber_FloorDivide@plt+0x132c>  // b.plast
    474c:	fmul	d9, d9, d10
    4750:	fabs	d9, d9
    4754:	fcmpe	d8, d9
    4758:	b.hi	4890 <PyNumber_FloorDivide@plt+0x1460>  // b.pmore
    475c:	bl	3160 <PyBool_FromLong@plt>
    4760:	ldp	x29, x30, [sp, #16]
    4764:	ldp	x19, x20, [sp, #32]
    4768:	ldr	x21, [sp, #48]
    476c:	ldr	d10, [sp, #56]
    4770:	ldp	d8, d9, [sp, #64]
    4774:	add	sp, sp, #0x70
    4778:	ret
    477c:	cmp	x2, #0x2
    4780:	b.ne	4788 <PyNumber_FloorDivide@plt+0x1358>  // b.any
    4784:	cbnz	x19, 47c8 <PyNumber_FloorDivide@plt+0x1398>
    4788:	mov	x21, x1
    478c:	b	4610 <PyNumber_FloorDivide@plt+0x11e0>
    4790:	ldr	d9, [x0, #16]
    4794:	ldr	x0, [x19, #8]
    4798:	ldr	x1, [x20, #3960]
    479c:	ldr	x2, [x0, #8]
    47a0:	cmp	x2, x1
    47a4:	b.ne	4684 <PyNumber_FloorDivide@plt+0x1254>  // b.any
    47a8:	ldr	d8, [x0, #16]
    47ac:	cmp	x21, #0x2
    47b0:	str	d10, [sp, #56]
    47b4:	b.ne	46a4 <PyNumber_FloorDivide@plt+0x1274>  // b.any
    47b8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    47bc:	movi	d0, #0x0
    47c0:	ldr	d10, [x0, #3176]
    47c4:	b	470c <PyNumber_FloorDivide@plt+0x12dc>
    47c8:	mov	x21, x2
    47cc:	stp	d8, d9, [sp, #64]
    47d0:	b	4644 <PyNumber_FloorDivide@plt+0x1214>
    47d4:	bl	3220 <PyErr_Occurred@plt>
    47d8:	cbnz	x0, 47fc <PyNumber_FloorDivide@plt+0x13cc>
    47dc:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    47e0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    47e4:	add	x1, x1, #0x890
    47e8:	ldr	x0, [x0, #3992]
    47ec:	ldr	x0, [x0]
    47f0:	bl	3060 <PyErr_SetString@plt>
    47f4:	bl	3220 <PyErr_Occurred@plt>
    47f8:	cbz	x0, 482c <PyNumber_FloorDivide@plt+0x13fc>
    47fc:	ldp	d8, d9, [sp, #64]
    4800:	ldr	d10, [sp, #56]
    4804:	mov	x0, #0x0                   	// #0
    4808:	ldp	x29, x30, [sp, #16]
    480c:	ldp	x19, x20, [sp, #32]
    4810:	ldr	x21, [sp, #48]
    4814:	add	sp, sp, #0x70
    4818:	ret
    481c:	ldr	d0, [x0, #16]
    4820:	b	46fc <PyNumber_FloorDivide@plt+0x12cc>
    4824:	ldr	d10, [x0, #16]
    4828:	b	46d0 <PyNumber_FloorDivide@plt+0x12a0>
    482c:	mov	x0, #0xffffffffffffffff    	// #-1
    4830:	b	475c <PyNumber_FloorDivide@plt+0x132c>
    4834:	bl	3220 <PyErr_Occurred@plt>
    4838:	cbz	x0, 4698 <PyNumber_FloorDivide@plt+0x1268>
    483c:	ldp	d8, d9, [sp, #64]
    4840:	mov	x0, #0x0                   	// #0
    4844:	b	4808 <PyNumber_FloorDivide@plt+0x13d8>
    4848:	bl	3220 <PyErr_Occurred@plt>
    484c:	cbnz	x0, 47fc <PyNumber_FloorDivide@plt+0x13cc>
    4850:	cmp	x21, #0x3
    4854:	b.ne	46d8 <PyNumber_FloorDivide@plt+0x12a8>  // b.any
    4858:	b	47dc <PyNumber_FloorDivide@plt+0x13ac>
    485c:	mov	x0, #0x0                   	// #0
    4860:	b	475c <PyNumber_FloorDivide@plt+0x132c>
    4864:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4868:	ldr	d10, [x0, #3176]
    486c:	b	46d8 <PyNumber_FloorDivide@plt+0x12a8>
    4870:	bl	3220 <PyErr_Occurred@plt>
    4874:	cbz	x0, 4670 <PyNumber_FloorDivide@plt+0x1240>
    4878:	ldp	d8, d9, [sp, #64]
    487c:	b	4840 <PyNumber_FloorDivide@plt+0x1410>
    4880:	fcmpe	d10, #0.0
    4884:	b.mi	47dc <PyNumber_FloorDivide@plt+0x13ac>  // b.first
    4888:	movi	d0, #0x0
    488c:	b	470c <PyNumber_FloorDivide@plt+0x12dc>
    4890:	fcmpe	d8, d0
    4894:	cset	x0, ls  // ls = plast
    4898:	b	475c <PyNumber_FloorDivide@plt+0x132c>
    489c:	nop
    48a0:	stp	x29, x30, [sp, #-112]!
    48a4:	cmp	x2, #0x2
    48a8:	mov	x29, sp
    48ac:	stp	x19, x20, [sp, #16]
    48b0:	mov	x19, x1
    48b4:	b.eq	48d4 <PyNumber_FloorDivide@plt+0x14a4>  // b.none
    48b8:	mov	x1, x2
    48bc:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    48c0:	mov	x3, #0x2                   	// #2
    48c4:	add	x0, x0, #0x8b0
    48c8:	mov	x2, x3
    48cc:	bl	31d0 <_PyArg_CheckPositional@plt>
    48d0:	cbz	w0, 4c50 <PyNumber_FloorDivide@plt+0x1820>
    48d4:	stp	x21, x22, [sp, #32]
    48d8:	ldp	x0, x22, [x19]
    48dc:	bl	33a0 <PyNumber_Index@plt>
    48e0:	mov	x19, x0
    48e4:	cbz	x0, 49c8 <PyNumber_FloorDivide@plt+0x1598>
    48e8:	adrp	x21, 1e000 <_Py_log1p@@Base+0x13908>
    48ec:	ldr	x2, [x0, #8]
    48f0:	ldr	x1, [x21, #4032]
    48f4:	cmp	x2, x1
    48f8:	b.eq	4b64 <PyNumber_FloorDivide@plt+0x1734>  // b.none
    48fc:	bl	30a0 <_PyLong_Copy@plt>
    4900:	mov	x20, x0
    4904:	ldr	x1, [x19]
    4908:	sub	x0, x1, #0x1
    490c:	str	x0, [x19]
    4910:	cbz	x0, 4b84 <PyNumber_FloorDivide@plt+0x1754>
    4914:	cbz	x20, 49c8 <PyNumber_FloorDivide@plt+0x1598>
    4918:	mov	x0, x22
    491c:	bl	33a0 <PyNumber_Index@plt>
    4920:	mov	x19, x0
    4924:	cbz	x0, 4cb8 <PyNumber_FloorDivide@plt+0x1888>
    4928:	ldr	x21, [x21, #4032]
    492c:	ldr	x1, [x0, #8]
    4930:	cmp	x1, x21
    4934:	b.eq	49e0 <PyNumber_FloorDivide@plt+0x15b0>  // b.none
    4938:	bl	30a0 <_PyLong_Copy@plt>
    493c:	mov	x21, x0
    4940:	ldr	x1, [x19]
    4944:	sub	x0, x1, #0x1
    4948:	str	x0, [x19]
    494c:	cbz	x0, 4c0c <PyNumber_FloorDivide@plt+0x17dc>
    4950:	cbnz	x21, 49e4 <PyNumber_FloorDivide@plt+0x15b4>
    4954:	ldr	x0, [x20]
    4958:	sub	x0, x0, #0x1
    495c:	str	x0, [x20]
    4960:	cbnz	x0, 49c8 <PyNumber_FloorDivide@plt+0x1598>
    4964:	mov	x0, x20
    4968:	mov	x19, #0x0                   	// #0
    496c:	bl	2fb0 <_Py_Dealloc@plt>
    4970:	ldp	x21, x22, [sp, #32]
    4974:	b	49d0 <PyNumber_FloorDivide@plt+0x15a0>
    4978:	mov	x22, x19
    497c:	nop
    4980:	ldr	x0, [x22]
    4984:	sub	x0, x0, #0x1
    4988:	str	x0, [x22]
    498c:	cbnz	x0, 4d50 <PyNumber_FloorDivide@plt+0x1920>
    4990:	mov	x0, x22
    4994:	bl	2fb0 <_Py_Dealloc@plt>
    4998:	ldp	x23, x24, [sp, #48]
    499c:	ldp	x25, x26, [sp, #64]
    49a0:	ldr	x27, [sp, #80]
    49a4:	nop
    49a8:	ldr	x0, [x20]
    49ac:	sub	x0, x0, #0x1
    49b0:	str	x0, [x20]
    49b4:	cbz	x0, 4c28 <PyNumber_FloorDivide@plt+0x17f8>
    49b8:	ldr	x0, [x21]
    49bc:	sub	x0, x0, #0x1
    49c0:	str	x0, [x21]
    49c4:	cbz	x0, 4b9c <PyNumber_FloorDivide@plt+0x176c>
    49c8:	ldp	x21, x22, [sp, #32]
    49cc:	mov	x19, #0x0                   	// #0
    49d0:	mov	x0, x19
    49d4:	ldp	x19, x20, [sp, #16]
    49d8:	ldp	x29, x30, [sp], #112
    49dc:	ret
    49e0:	mov	x21, x0
    49e4:	ldr	x0, [x20, #16]
    49e8:	tbnz	x0, #63, 4c64 <PyNumber_FloorDivide@plt+0x1834>
    49ec:	ldr	x0, [x21, #16]
    49f0:	tbnz	x0, #63, 4c34 <PyNumber_FloorDivide@plt+0x1804>
    49f4:	mov	x1, x21
    49f8:	mov	x0, x20
    49fc:	bl	33f0 <PyNumber_Subtract@plt>
    4a00:	mov	x19, x0
    4a04:	cbz	x0, 49a8 <PyNumber_FloorDivide@plt+0x1578>
    4a08:	ldr	x1, [x0, #16]
    4a0c:	tbnz	x1, #63, 4bbc <PyNumber_FloorDivide@plt+0x178c>
    4a10:	mov	x1, x21
    4a14:	mov	w2, #0x0                   	// #0
    4a18:	bl	3130 <PyObject_RichCompareBool@plt>
    4a1c:	mov	w22, w0
    4a20:	cmp	w0, #0x0
    4a24:	b.le	4c80 <PyNumber_FloorDivide@plt+0x1850>
    4a28:	ldr	x0, [x21]
    4a2c:	stp	x25, x26, [sp, #64]
    4a30:	sub	x0, x0, #0x1
    4a34:	str	x0, [x21]
    4a38:	cbz	x0, 4d10 <PyNumber_FloorDivide@plt+0x18e0>
    4a3c:	mov	x21, x19
    4a40:	add	x1, sp, #0x6c
    4a44:	mov	x0, x21
    4a48:	bl	2ef0 <PyLong_AsLongLongAndOverflow@plt>
    4a4c:	mov	x26, x0
    4a50:	ldr	w1, [sp, #108]
    4a54:	cmp	w1, #0x0
    4a58:	b.gt	4cec <PyNumber_FloorDivide@plt+0x18bc>
    4a5c:	cmn	x0, #0x1
    4a60:	b.eq	4d20 <PyNumber_FloorDivide@plt+0x18f0>  // b.none
    4a64:	cbz	x0, 4d60 <PyNumber_FloorDivide@plt+0x1930>
    4a68:	cmp	x0, #0x1
    4a6c:	ldr	x0, [x20]
    4a70:	add	x1, x0, #0x1
    4a74:	b.eq	4d7c <PyNumber_FloorDivide@plt+0x194c>  // b.none
    4a78:	stp	x23, x24, [sp, #48]
    4a7c:	add	x0, x0, #0x2
    4a80:	str	x0, [x20]
    4a84:	b.le	4db0 <PyNumber_FloorDivide@plt+0x1980>
    4a88:	str	x27, [sp, #80]
    4a8c:	adrp	x27, 1e000 <_Py_log1p@@Base+0x13908>
    4a90:	mov	x19, x20
    4a94:	mov	x24, x20
    4a98:	ldr	x27, [x27, #4056]
    4a9c:	mov	x25, #0x2                   	// #2
    4aa0:	ldr	x1, [x27]
    4aa4:	mov	x22, x24
    4aa8:	mov	x0, x24
    4aac:	bl	33f0 <PyNumber_Subtract@plt>
    4ab0:	mov	x24, x0
    4ab4:	ldr	x1, [x22]
    4ab8:	sub	x0, x1, #0x1
    4abc:	str	x0, [x22]
    4ac0:	cbz	x0, 4b6c <PyNumber_FloorDivide@plt+0x173c>
    4ac4:	cbz	x24, 4978 <PyNumber_FloorDivide@plt+0x1548>
    4ac8:	mov	x1, x24
    4acc:	mov	x0, x19
    4ad0:	bl	3000 <PyNumber_Multiply@plt>
    4ad4:	mov	x22, x0
    4ad8:	ldr	x1, [x19]
    4adc:	sub	x0, x1, #0x1
    4ae0:	str	x0, [x19]
    4ae4:	cbz	x0, 4b78 <PyNumber_FloorDivide@plt+0x1748>
    4ae8:	cbz	x22, 4d28 <PyNumber_FloorDivide@plt+0x18f8>
    4aec:	mov	x0, x25
    4af0:	bl	2f60 <PyLong_FromUnsignedLongLong@plt>
    4af4:	mov	x23, x0
    4af8:	cbz	x0, 4d88 <PyNumber_FloorDivide@plt+0x1958>
    4afc:	mov	x1, x0
    4b00:	mov	x0, x22
    4b04:	bl	3430 <PyNumber_FloorDivide@plt>
    4b08:	mov	x19, x0
    4b0c:	ldr	x1, [x22]
    4b10:	sub	x0, x1, #0x1
    4b14:	str	x0, [x22]
    4b18:	cbz	x0, 4c1c <PyNumber_FloorDivide@plt+0x17ec>
    4b1c:	ldr	x0, [x23]
    4b20:	sub	x0, x0, #0x1
    4b24:	str	x0, [x23]
    4b28:	cbz	x0, 4b90 <PyNumber_FloorDivide@plt+0x1760>
    4b2c:	cbz	x19, 4d28 <PyNumber_FloorDivide@plt+0x18f8>
    4b30:	cmp	x26, x25
    4b34:	add	x25, x25, #0x1
    4b38:	b.ne	4aa0 <PyNumber_FloorDivide@plt+0x1670>  // b.any
    4b3c:	ldr	x1, [x24]
    4b40:	ldr	x27, [sp, #80]
    4b44:	sub	x1, x1, #0x1
    4b48:	str	x1, [x24]
    4b4c:	cbz	x1, 4da4 <PyNumber_FloorDivide@plt+0x1974>
    4b50:	ldr	x0, [x20]
    4b54:	ldp	x23, x24, [sp, #48]
    4b58:	sub	x0, x0, #0x1
    4b5c:	ldp	x25, x26, [sp, #64]
    4b60:	b	4be0 <PyNumber_FloorDivide@plt+0x17b0>
    4b64:	mov	x20, x0
    4b68:	b	4918 <PyNumber_FloorDivide@plt+0x14e8>
    4b6c:	mov	x0, x22
    4b70:	bl	2fb0 <_Py_Dealloc@plt>
    4b74:	b	4ac4 <PyNumber_FloorDivide@plt+0x1694>
    4b78:	mov	x0, x19
    4b7c:	bl	2fb0 <_Py_Dealloc@plt>
    4b80:	b	4ae8 <PyNumber_FloorDivide@plt+0x16b8>
    4b84:	mov	x0, x19
    4b88:	bl	2fb0 <_Py_Dealloc@plt>
    4b8c:	b	4914 <PyNumber_FloorDivide@plt+0x14e4>
    4b90:	mov	x0, x23
    4b94:	bl	2fb0 <_Py_Dealloc@plt>
    4b98:	b	4b2c <PyNumber_FloorDivide@plt+0x16fc>
    4b9c:	mov	x0, x21
    4ba0:	mov	x19, #0x0                   	// #0
    4ba4:	bl	2fb0 <_Py_Dealloc@plt>
    4ba8:	mov	x0, x19
    4bac:	ldp	x19, x20, [sp, #16]
    4bb0:	ldp	x21, x22, [sp, #32]
    4bb4:	ldp	x29, x30, [sp], #112
    4bb8:	ret
    4bbc:	ldr	x1, [x0]
    4bc0:	sub	x1, x1, #0x1
    4bc4:	str	x1, [x0]
    4bc8:	cbz	x1, 4ce4 <PyNumber_FloorDivide@plt+0x18b4>
    4bcc:	mov	x0, #0x0                   	// #0
    4bd0:	bl	3120 <PyLong_FromLong@plt>
    4bd4:	ldr	x1, [x20]
    4bd8:	mov	x19, x0
    4bdc:	sub	x0, x1, #0x1
    4be0:	str	x0, [x20]
    4be4:	cbz	x0, 4cac <PyNumber_FloorDivide@plt+0x187c>
    4be8:	ldr	x0, [x21]
    4bec:	sub	x0, x0, #0x1
    4bf0:	str	x0, [x21]
    4bf4:	cbz	x0, 4c9c <PyNumber_FloorDivide@plt+0x186c>
    4bf8:	mov	x0, x19
    4bfc:	ldp	x19, x20, [sp, #16]
    4c00:	ldp	x21, x22, [sp, #32]
    4c04:	ldp	x29, x30, [sp], #112
    4c08:	ret
    4c0c:	mov	x0, x19
    4c10:	bl	2fb0 <_Py_Dealloc@plt>
    4c14:	cbnz	x21, 49e4 <PyNumber_FloorDivide@plt+0x15b4>
    4c18:	b	4954 <PyNumber_FloorDivide@plt+0x1524>
    4c1c:	mov	x0, x22
    4c20:	bl	2fb0 <_Py_Dealloc@plt>
    4c24:	b	4b1c <PyNumber_FloorDivide@plt+0x16ec>
    4c28:	mov	x0, x20
    4c2c:	bl	2fb0 <_Py_Dealloc@plt>
    4c30:	b	49b8 <PyNumber_FloorDivide@plt+0x1588>
    4c34:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    4c38:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4c3c:	add	x1, x1, #0x850
    4c40:	ldr	x0, [x0, #3992]
    4c44:	ldr	x0, [x0]
    4c48:	bl	3060 <PyErr_SetString@plt>
    4c4c:	b	49a8 <PyNumber_FloorDivide@plt+0x1578>
    4c50:	mov	x19, #0x0                   	// #0
    4c54:	mov	x0, x19
    4c58:	ldp	x19, x20, [sp, #16]
    4c5c:	ldp	x29, x30, [sp], #112
    4c60:	ret
    4c64:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    4c68:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4c6c:	add	x1, x1, #0x828
    4c70:	ldr	x0, [x0, #3992]
    4c74:	ldr	x0, [x0]
    4c78:	bl	3060 <PyErr_SetString@plt>
    4c7c:	b	49a8 <PyNumber_FloorDivide@plt+0x1578>
    4c80:	ldr	x0, [x19]
    4c84:	sub	x0, x0, #0x1
    4c88:	str	x0, [x19]
    4c8c:	cbz	x0, 4cd8 <PyNumber_FloorDivide@plt+0x18a8>
    4c90:	cbnz	w22, 49a8 <PyNumber_FloorDivide@plt+0x1578>
    4c94:	stp	x25, x26, [sp, #64]
    4c98:	b	4a40 <PyNumber_FloorDivide@plt+0x1610>
    4c9c:	mov	x0, x21
    4ca0:	bl	2fb0 <_Py_Dealloc@plt>
    4ca4:	ldp	x21, x22, [sp, #32]
    4ca8:	b	49d0 <PyNumber_FloorDivide@plt+0x15a0>
    4cac:	mov	x0, x20
    4cb0:	bl	2fb0 <_Py_Dealloc@plt>
    4cb4:	b	4be8 <PyNumber_FloorDivide@plt+0x17b8>
    4cb8:	ldr	x0, [x20]
    4cbc:	sub	x0, x0, #0x1
    4cc0:	str	x0, [x20]
    4cc4:	cbnz	x0, 49c8 <PyNumber_FloorDivide@plt+0x1598>
    4cc8:	mov	x0, x20
    4ccc:	bl	2fb0 <_Py_Dealloc@plt>
    4cd0:	ldp	x21, x22, [sp, #32]
    4cd4:	b	49d0 <PyNumber_FloorDivide@plt+0x15a0>
    4cd8:	mov	x0, x19
    4cdc:	bl	2fb0 <_Py_Dealloc@plt>
    4ce0:	b	4c90 <PyNumber_FloorDivide@plt+0x1860>
    4ce4:	bl	2fb0 <_Py_Dealloc@plt>
    4ce8:	b	4bcc <PyNumber_FloorDivide@plt+0x179c>
    4cec:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    4cf0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    4cf4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    4cf8:	add	x1, x1, #0x8b8
    4cfc:	ldr	x0, [x0, #4016]
    4d00:	ldr	x0, [x0]
    4d04:	bl	3370 <PyErr_Format@plt>
    4d08:	ldp	x25, x26, [sp, #64]
    4d0c:	b	49a8 <PyNumber_FloorDivide@plt+0x1578>
    4d10:	mov	x0, x21
    4d14:	mov	x21, x19
    4d18:	bl	2fb0 <_Py_Dealloc@plt>
    4d1c:	b	4a40 <PyNumber_FloorDivide@plt+0x1610>
    4d20:	ldp	x25, x26, [sp, #64]
    4d24:	b	49a8 <PyNumber_FloorDivide@plt+0x1578>
    4d28:	ldr	x0, [x24]
    4d2c:	sub	x0, x0, #0x1
    4d30:	str	x0, [x24]
    4d34:	cbnz	x0, 4d50 <PyNumber_FloorDivide@plt+0x1920>
    4d38:	mov	x0, x24
    4d3c:	bl	2fb0 <_Py_Dealloc@plt>
    4d40:	ldp	x23, x24, [sp, #48]
    4d44:	ldp	x25, x26, [sp, #64]
    4d48:	ldr	x27, [sp, #80]
    4d4c:	b	49a8 <PyNumber_FloorDivide@plt+0x1578>
    4d50:	ldp	x23, x24, [sp, #48]
    4d54:	ldp	x25, x26, [sp, #64]
    4d58:	ldr	x27, [sp, #80]
    4d5c:	b	49a8 <PyNumber_FloorDivide@plt+0x1578>
    4d60:	mov	x0, #0x1                   	// #1
    4d64:	bl	3120 <PyLong_FromLong@plt>
    4d68:	ldr	x1, [x20]
    4d6c:	mov	x19, x0
    4d70:	ldp	x25, x26, [sp, #64]
    4d74:	sub	x0, x1, #0x1
    4d78:	b	4be0 <PyNumber_FloorDivide@plt+0x17b0>
    4d7c:	mov	x19, x20
    4d80:	ldp	x25, x26, [sp, #64]
    4d84:	b	4be0 <PyNumber_FloorDivide@plt+0x17b0>
    4d88:	ldr	x0, [x24]
    4d8c:	sub	x0, x0, #0x1
    4d90:	str	x0, [x24]
    4d94:	cbnz	x0, 4980 <PyNumber_FloorDivide@plt+0x1550>
    4d98:	mov	x0, x24
    4d9c:	bl	2fb0 <_Py_Dealloc@plt>
    4da0:	b	4980 <PyNumber_FloorDivide@plt+0x1550>
    4da4:	mov	x0, x24
    4da8:	bl	2fb0 <_Py_Dealloc@plt>
    4dac:	b	4b50 <PyNumber_FloorDivide@plt+0x1720>
    4db0:	mov	x19, x20
    4db4:	mov	x24, x20
    4db8:	b	4b48 <PyNumber_FloorDivide@plt+0x1718>
    4dbc:	nop
    4dc0:	sub	sp, sp, #0x80
    4dc4:	mov	x0, x1
    4dc8:	mov	x1, x2
    4dcc:	stp	x29, x30, [sp, #16]
    4dd0:	add	x29, sp, #0x10
    4dd4:	stp	x19, x20, [sp, #32]
    4dd8:	stp	x21, x22, [sp, #48]
    4ddc:	cbz	x3, 4f04 <PyNumber_FloorDivide@plt+0x1ad4>
    4de0:	ldr	x19, [x3, #16]
    4de4:	add	x2, sp, #0x70
    4de8:	str	x2, [sp]
    4dec:	adrp	x4, 1f000 <_Py_log1p@@Base+0x14908>
    4df0:	add	x4, x4, #0x2c0
    4df4:	add	x19, x1, x19
    4df8:	mov	w6, #0x1                   	// #1
    4dfc:	add	x4, x4, #0x40
    4e00:	mov	w5, w6
    4e04:	mov	w7, #0x0                   	// #0
    4e08:	mov	x2, #0x0                   	// #0
    4e0c:	bl	3050 <_PyArg_UnpackKeywords@plt>
    4e10:	mov	x1, x0
    4e14:	cbz	x0, 501c <PyNumber_FloorDivide@plt+0x1bec>
    4e18:	cmp	x19, #0x1
    4e1c:	ldr	x0, [x0]
    4e20:	b.eq	4f14 <PyNumber_FloorDivide@plt+0x1ae4>  // b.none
    4e24:	ldr	x19, [x1, #8]
    4e28:	bl	3300 <PyObject_GetIter@plt>
    4e2c:	mov	x21, x0
    4e30:	cbz	x0, 501c <PyNumber_FloorDivide@plt+0x1bec>
    4e34:	cbz	x19, 4f20 <PyNumber_FloorDivide@plt+0x1af0>
    4e38:	ldr	x0, [x19]
    4e3c:	stp	x23, x24, [sp, #64]
    4e40:	adrp	x23, 1e000 <_Py_log1p@@Base+0x13908>
    4e44:	add	x0, x0, #0x1
    4e48:	str	x0, [x19]
    4e4c:	ldr	x1, [x23, #4032]
    4e50:	ldr	x0, [x19, #8]
    4e54:	cmp	x0, x1
    4e58:	b.eq	4f48 <PyNumber_FloorDivide@plt+0x1b18>  // b.none
    4e5c:	adrp	x20, 1e000 <_Py_log1p@@Base+0x13908>
    4e60:	ldr	x1, [x20, #3960]
    4e64:	cmp	x0, x1
    4e68:	b.eq	5060 <PyNumber_FloorDivide@plt+0x1c30>  // b.none
    4e6c:	nop
    4e70:	mov	x0, x21
    4e74:	bl	2fe0 <PyIter_Next@plt>
    4e78:	mov	x20, x0
    4e7c:	mov	x0, x19
    4e80:	cbz	x20, 5038 <PyNumber_FloorDivide@plt+0x1c08>
    4e84:	mov	x1, x20
    4e88:	bl	3000 <PyNumber_Multiply@plt>
    4e8c:	ldr	x1, [x19]
    4e90:	mov	x22, x0
    4e94:	sub	x0, x1, #0x1
    4e98:	str	x0, [x19]
    4e9c:	cbz	x0, 4ef8 <PyNumber_FloorDivide@plt+0x1ac8>
    4ea0:	ldr	x0, [x20]
    4ea4:	mov	x19, x22
    4ea8:	sub	x0, x0, #0x1
    4eac:	str	x0, [x20]
    4eb0:	cbz	x0, 4ee8 <PyNumber_FloorDivide@plt+0x1ab8>
    4eb4:	cbnz	x22, 4e70 <PyNumber_FloorDivide@plt+0x1a40>
    4eb8:	mov	x19, #0x0                   	// #0
    4ebc:	ldr	x0, [x21]
    4ec0:	sub	x0, x0, #0x1
    4ec4:	str	x0, [x21]
    4ec8:	cbz	x0, 516c <PyNumber_FloorDivide@plt+0x1d3c>
    4ecc:	mov	x0, x19
    4ed0:	ldp	x29, x30, [sp, #16]
    4ed4:	ldp	x19, x20, [sp, #32]
    4ed8:	ldp	x21, x22, [sp, #48]
    4edc:	ldp	x23, x24, [sp, #64]
    4ee0:	add	sp, sp, #0x80
    4ee4:	ret
    4ee8:	mov	x0, x20
    4eec:	bl	2fb0 <_Py_Dealloc@plt>
    4ef0:	cbnz	x22, 4e70 <PyNumber_FloorDivide@plt+0x1a40>
    4ef4:	b	4eb8 <PyNumber_FloorDivide@plt+0x1a88>
    4ef8:	mov	x0, x19
    4efc:	bl	2fb0 <_Py_Dealloc@plt>
    4f00:	b	4ea0 <PyNumber_FloorDivide@plt+0x1a70>
    4f04:	cmp	x2, #0x1
    4f08:	b.ne	5384 <PyNumber_FloorDivide@plt+0x1f54>  // b.any
    4f0c:	cbz	x0, 4fec <PyNumber_FloorDivide@plt+0x1bbc>
    4f10:	ldr	x0, [x0]
    4f14:	bl	3300 <PyObject_GetIter@plt>
    4f18:	mov	x21, x0
    4f1c:	cbz	x0, 501c <PyNumber_FloorDivide@plt+0x1bec>
    4f20:	mov	x0, #0x1                   	// #1
    4f24:	bl	3120 <PyLong_FromLong@plt>
    4f28:	mov	x19, x0
    4f2c:	cbz	x0, 5344 <PyNumber_FloorDivide@plt+0x1f14>
    4f30:	stp	x23, x24, [sp, #64]
    4f34:	adrp	x23, 1e000 <_Py_log1p@@Base+0x13908>
    4f38:	ldr	x1, [x23, #4032]
    4f3c:	ldr	x0, [x19, #8]
    4f40:	cmp	x0, x1
    4f44:	b.ne	4e5c <PyNumber_FloorDivide@plt+0x1a2c>  // b.any
    4f48:	add	x24, sp, #0x6c
    4f4c:	mov	x0, x19
    4f50:	mov	x1, x24
    4f54:	bl	31e0 <PyLong_AsLongAndOverflow@plt>
    4f58:	ldr	w1, [sp, #108]
    4f5c:	mov	x22, x0
    4f60:	cbnz	w1, 4fe4 <PyNumber_FloorDivide@plt+0x1bb4>
    4f64:	ldr	x0, [x19]
    4f68:	str	d8, [sp, #80]
    4f6c:	sub	x0, x0, #0x1
    4f70:	str	x0, [x19]
    4f74:	cbz	x0, 5240 <PyNumber_FloorDivide@plt+0x1e10>
    4f78:	ldr	x19, [x23, #4032]
    4f7c:	mov	x0, #0x4040000000000000    	// #4629700416936869888
    4f80:	fmov	d8, x0
    4f84:	mov	x0, x21
    4f88:	bl	2fe0 <PyIter_Next@plt>
    4f8c:	mov	x20, x0
    4f90:	cbz	x0, 52cc <PyNumber_FloorDivide@plt+0x1e9c>
    4f94:	ldr	x1, [x0, #8]
    4f98:	cmp	x1, x19
    4f9c:	b.eq	519c <PyNumber_FloorDivide@plt+0x1d6c>  // b.none
    4fa0:	mov	x0, x22
    4fa4:	bl	3120 <PyLong_FromLong@plt>
    4fa8:	mov	x22, x0
    4fac:	cbz	x0, 52f4 <PyNumber_FloorDivide@plt+0x1ec4>
    4fb0:	mov	x1, x20
    4fb4:	bl	3000 <PyNumber_Multiply@plt>
    4fb8:	ldr	x1, [x22]
    4fbc:	mov	x19, x0
    4fc0:	sub	x0, x1, #0x1
    4fc4:	str	x0, [x22]
    4fc8:	cbz	x0, 5210 <PyNumber_FloorDivide@plt+0x1de0>
    4fcc:	ldr	x0, [x20]
    4fd0:	sub	x0, x0, #0x1
    4fd4:	str	x0, [x20]
    4fd8:	cbz	x0, 5190 <PyNumber_FloorDivide@plt+0x1d60>
    4fdc:	cbz	x19, 5318 <PyNumber_FloorDivide@plt+0x1ee8>
    4fe0:	ldr	d8, [sp, #80]
    4fe4:	ldr	x0, [x19, #8]
    4fe8:	b	4e5c <PyNumber_FloorDivide@plt+0x1a2c>
    4fec:	add	x0, sp, #0x70
    4ff0:	str	x0, [sp]
    4ff4:	adrp	x4, 1f000 <_Py_log1p@@Base+0x14908>
    4ff8:	add	x4, x4, #0x2c0
    4ffc:	mov	w6, w2
    5000:	mov	w5, w2
    5004:	add	x4, x4, #0x40
    5008:	mov	w7, #0x0                   	// #0
    500c:	mov	x2, #0x0                   	// #0
    5010:	mov	x0, #0x0                   	// #0
    5014:	bl	3050 <_PyArg_UnpackKeywords@plt>
    5018:	cbnz	x0, 4f10 <PyNumber_FloorDivide@plt+0x1ae0>
    501c:	mov	x19, #0x0                   	// #0
    5020:	mov	x0, x19
    5024:	ldp	x29, x30, [sp, #16]
    5028:	ldp	x19, x20, [sp, #32]
    502c:	ldp	x21, x22, [sp, #48]
    5030:	add	sp, sp, #0x80
    5034:	ret
    5038:	bl	3220 <PyErr_Occurred@plt>
    503c:	cbz	x0, 4ebc <PyNumber_FloorDivide@plt+0x1a8c>
    5040:	ldr	x0, [x19]
    5044:	sub	x0, x0, #0x1
    5048:	str	x0, [x19]
    504c:	cbnz	x0, 4eb8 <PyNumber_FloorDivide@plt+0x1a88>
    5050:	mov	x0, x19
    5054:	mov	x19, #0x0                   	// #0
    5058:	bl	2fb0 <_Py_Dealloc@plt>
    505c:	b	4ebc <PyNumber_FloorDivide@plt+0x1a8c>
    5060:	ldr	x0, [x19]
    5064:	str	d8, [sp, #80]
    5068:	ldr	d8, [x19, #16]
    506c:	sub	x0, x0, #0x1
    5070:	str	x0, [x19]
    5074:	cbz	x0, 5160 <PyNumber_FloorDivide@plt+0x1d30>
    5078:	ldr	x19, [x20, #3960]
    507c:	add	x22, sp, #0x6c
    5080:	ldr	x23, [x23, #4032]
    5084:	mov	x0, x21
    5088:	bl	2fe0 <PyIter_Next@plt>
    508c:	mov	x20, x0
    5090:	cbz	x0, 521c <PyNumber_FloorDivide@plt+0x1dec>
    5094:	ldr	x1, [x0, #8]
    5098:	cmp	x1, x19
    509c:	b.eq	5140 <PyNumber_FloorDivide@plt+0x1d10>  // b.none
    50a0:	cmp	x1, x23
    50a4:	b.eq	50fc <PyNumber_FloorDivide@plt+0x1ccc>  // b.none
    50a8:	fmov	d0, d8
    50ac:	bl	3100 <PyFloat_FromDouble@plt>
    50b0:	mov	x22, x0
    50b4:	cbz	x0, 5270 <PyNumber_FloorDivide@plt+0x1e40>
    50b8:	mov	x1, x20
    50bc:	bl	3000 <PyNumber_Multiply@plt>
    50c0:	ldr	x1, [x22]
    50c4:	mov	x19, x0
    50c8:	sub	x0, x1, #0x1
    50cc:	str	x0, [x22]
    50d0:	cbz	x0, 5134 <PyNumber_FloorDivide@plt+0x1d04>
    50d4:	ldr	x0, [x20]
    50d8:	sub	x0, x0, #0x1
    50dc:	str	x0, [x20]
    50e0:	cbz	x0, 50f0 <PyNumber_FloorDivide@plt+0x1cc0>
    50e4:	cbz	x19, 52a8 <PyNumber_FloorDivide@plt+0x1e78>
    50e8:	ldr	d8, [sp, #80]
    50ec:	b	4e70 <PyNumber_FloorDivide@plt+0x1a40>
    50f0:	mov	x0, x20
    50f4:	bl	2fb0 <_Py_Dealloc@plt>
    50f8:	b	50e4 <PyNumber_FloorDivide@plt+0x1cb4>
    50fc:	mov	x1, x22
    5100:	bl	31e0 <PyLong_AsLongAndOverflow@plt>
    5104:	ldr	w1, [sp, #108]
    5108:	fmov	d0, x0
    510c:	cbnz	w1, 50a8 <PyNumber_FloorDivide@plt+0x1c78>
    5110:	ldr	x0, [x20]
    5114:	scvtf	d0, d0
    5118:	sub	x0, x0, #0x1
    511c:	str	x0, [x20]
    5120:	fmul	d8, d8, d0
    5124:	cbnz	x0, 5084 <PyNumber_FloorDivide@plt+0x1c54>
    5128:	mov	x0, x20
    512c:	bl	2fb0 <_Py_Dealloc@plt>
    5130:	b	5084 <PyNumber_FloorDivide@plt+0x1c54>
    5134:	mov	x0, x22
    5138:	bl	2fb0 <_Py_Dealloc@plt>
    513c:	b	50d4 <PyNumber_FloorDivide@plt+0x1ca4>
    5140:	ldr	x1, [x0]
    5144:	ldr	d0, [x0, #16]
    5148:	sub	x1, x1, #0x1
    514c:	str	x1, [x0]
    5150:	fmul	d8, d8, d0
    5154:	cbnz	x1, 5084 <PyNumber_FloorDivide@plt+0x1c54>
    5158:	bl	2fb0 <_Py_Dealloc@plt>
    515c:	b	5084 <PyNumber_FloorDivide@plt+0x1c54>
    5160:	mov	x0, x19
    5164:	bl	2fb0 <_Py_Dealloc@plt>
    5168:	b	5078 <PyNumber_FloorDivide@plt+0x1c48>
    516c:	mov	x0, x21
    5170:	bl	2fb0 <_Py_Dealloc@plt>
    5174:	mov	x0, x19
    5178:	ldp	x29, x30, [sp, #16]
    517c:	ldp	x19, x20, [sp, #32]
    5180:	ldp	x21, x22, [sp, #48]
    5184:	ldp	x23, x24, [sp, #64]
    5188:	add	sp, sp, #0x80
    518c:	ret
    5190:	mov	x0, x20
    5194:	bl	2fb0 <_Py_Dealloc@plt>
    5198:	b	4fdc <PyNumber_FloorDivide@plt+0x1bac>
    519c:	mov	x1, x24
    51a0:	bl	31e0 <PyLong_AsLongAndOverflow@plt>
    51a4:	ldr	w1, [sp, #108]
    51a8:	mul	x2, x22, x0
    51ac:	cbnz	w1, 4fa0 <PyNumber_FloorDivide@plt+0x1b70>
    51b0:	scvtf	d0, x0
    51b4:	scvtf	d1, x22
    51b8:	scvtf	d2, x2
    51bc:	fmul	d0, d1, d0
    51c0:	fcmp	d0, d2
    51c4:	fneg	d3, d0
    51c8:	b.eq	51f0 <PyNumber_FloorDivide@plt+0x1dc0>  // b.none
    51cc:	fsub	d1, d2, d0
    51d0:	fcmp	d1, #0.0
    51d4:	fneg	d2, d1
    51d8:	fcsel	d1, d2, d1, lt  // lt = tstop
    51dc:	fcmp	d0, #0.0
    51e0:	fmul	d1, d1, d8
    51e4:	fcsel	d0, d3, d0, lt  // lt = tstop
    51e8:	fcmpe	d1, d0
    51ec:	b.hi	4fa0 <PyNumber_FloorDivide@plt+0x1b70>  // b.pmore
    51f0:	ldr	x0, [x20]
    51f4:	mov	x22, x2
    51f8:	sub	x0, x0, #0x1
    51fc:	str	x0, [x20]
    5200:	cbnz	x0, 4f84 <PyNumber_FloorDivide@plt+0x1b54>
    5204:	mov	x0, x20
    5208:	bl	2fb0 <_Py_Dealloc@plt>
    520c:	b	4f84 <PyNumber_FloorDivide@plt+0x1b54>
    5210:	mov	x0, x22
    5214:	bl	2fb0 <_Py_Dealloc@plt>
    5218:	b	4fcc <PyNumber_FloorDivide@plt+0x1b9c>
    521c:	ldr	x0, [x21]
    5220:	sub	x0, x0, #0x1
    5224:	str	x0, [x21]
    5228:	cbz	x0, 5264 <PyNumber_FloorDivide@plt+0x1e34>
    522c:	bl	3220 <PyErr_Occurred@plt>
    5230:	cbz	x0, 524c <PyNumber_FloorDivide@plt+0x1e1c>
    5234:	ldp	x23, x24, [sp, #64]
    5238:	ldr	d8, [sp, #80]
    523c:	b	501c <PyNumber_FloorDivide@plt+0x1bec>
    5240:	mov	x0, x19
    5244:	bl	2fb0 <_Py_Dealloc@plt>
    5248:	b	4f78 <PyNumber_FloorDivide@plt+0x1b48>
    524c:	fmov	d0, d8
    5250:	bl	3100 <PyFloat_FromDouble@plt>
    5254:	mov	x19, x0
    5258:	ldp	x23, x24, [sp, #64]
    525c:	ldr	d8, [sp, #80]
    5260:	b	5020 <PyNumber_FloorDivide@plt+0x1bf0>
    5264:	mov	x0, x21
    5268:	bl	2fb0 <_Py_Dealloc@plt>
    526c:	b	522c <PyNumber_FloorDivide@plt+0x1dfc>
    5270:	ldr	x0, [x20]
    5274:	sub	x0, x0, #0x1
    5278:	str	x0, [x20]
    527c:	cbz	x0, 532c <PyNumber_FloorDivide@plt+0x1efc>
    5280:	ldr	x0, [x21]
    5284:	sub	x0, x0, #0x1
    5288:	str	x0, [x21]
    528c:	cbnz	x0, 5234 <PyNumber_FloorDivide@plt+0x1e04>
    5290:	mov	x0, x21
    5294:	bl	2fb0 <_Py_Dealloc@plt>
    5298:	mov	x19, #0x0                   	// #0
    529c:	ldr	d8, [sp, #80]
    52a0:	ldp	x23, x24, [sp, #64]
    52a4:	b	5020 <PyNumber_FloorDivide@plt+0x1bf0>
    52a8:	ldr	x0, [x21]
    52ac:	sub	x0, x0, #0x1
    52b0:	str	x0, [x21]
    52b4:	cbnz	x0, 5234 <PyNumber_FloorDivide@plt+0x1e04>
    52b8:	mov	x0, x21
    52bc:	bl	2fb0 <_Py_Dealloc@plt>
    52c0:	ldp	x23, x24, [sp, #64]
    52c4:	ldr	d8, [sp, #80]
    52c8:	b	5020 <PyNumber_FloorDivide@plt+0x1bf0>
    52cc:	ldr	x0, [x21]
    52d0:	sub	x0, x0, #0x1
    52d4:	str	x0, [x21]
    52d8:	cbz	x0, 5338 <PyNumber_FloorDivide@plt+0x1f08>
    52dc:	bl	3220 <PyErr_Occurred@plt>
    52e0:	cbz	x0, 536c <PyNumber_FloorDivide@plt+0x1f3c>
    52e4:	mov	x19, #0x0                   	// #0
    52e8:	ldr	d8, [sp, #80]
    52ec:	ldp	x23, x24, [sp, #64]
    52f0:	b	5020 <PyNumber_FloorDivide@plt+0x1bf0>
    52f4:	ldr	x0, [x20]
    52f8:	sub	x0, x0, #0x1
    52fc:	str	x0, [x20]
    5300:	cbz	x0, 5360 <PyNumber_FloorDivide@plt+0x1f30>
    5304:	ldr	x0, [x21]
    5308:	sub	x0, x0, #0x1
    530c:	str	x0, [x21]
    5310:	cbnz	x0, 52e4 <PyNumber_FloorDivide@plt+0x1eb4>
    5314:	b	5290 <PyNumber_FloorDivide@plt+0x1e60>
    5318:	ldr	x0, [x21]
    531c:	sub	x0, x0, #0x1
    5320:	str	x0, [x21]
    5324:	cbnz	x0, 52e4 <PyNumber_FloorDivide@plt+0x1eb4>
    5328:	b	52b8 <PyNumber_FloorDivide@plt+0x1e88>
    532c:	mov	x0, x20
    5330:	bl	2fb0 <_Py_Dealloc@plt>
    5334:	b	5280 <PyNumber_FloorDivide@plt+0x1e50>
    5338:	mov	x0, x21
    533c:	bl	2fb0 <_Py_Dealloc@plt>
    5340:	b	52dc <PyNumber_FloorDivide@plt+0x1eac>
    5344:	ldr	x0, [x21]
    5348:	sub	x0, x0, #0x1
    534c:	str	x0, [x21]
    5350:	cbnz	x0, 501c <PyNumber_FloorDivide@plt+0x1bec>
    5354:	mov	x0, x21
    5358:	bl	2fb0 <_Py_Dealloc@plt>
    535c:	b	5020 <PyNumber_FloorDivide@plt+0x1bf0>
    5360:	mov	x0, x20
    5364:	bl	2fb0 <_Py_Dealloc@plt>
    5368:	b	5304 <PyNumber_FloorDivide@plt+0x1ed4>
    536c:	mov	x0, x22
    5370:	bl	3120 <PyLong_FromLong@plt>
    5374:	mov	x19, x0
    5378:	ldr	d8, [sp, #80]
    537c:	ldp	x23, x24, [sp, #64]
    5380:	b	5020 <PyNumber_FloorDivide@plt+0x1bf0>
    5384:	add	x2, sp, #0x70
    5388:	str	x2, [sp]
    538c:	adrp	x4, 1f000 <_Py_log1p@@Base+0x14908>
    5390:	add	x4, x4, #0x2c0
    5394:	mov	w6, #0x1                   	// #1
    5398:	add	x4, x4, #0x40
    539c:	mov	w5, w6
    53a0:	mov	w7, #0x0                   	// #0
    53a4:	mov	x2, #0x0                   	// #0
    53a8:	bl	3050 <_PyArg_UnpackKeywords@plt>
    53ac:	mov	x1, x0
    53b0:	cbz	x0, 501c <PyNumber_FloorDivide@plt+0x1bec>
    53b4:	ldr	x0, [x1]
    53b8:	b	4e24 <PyNumber_FloorDivide@plt+0x19f4>
    53bc:	nop
    53c0:	stp	x29, x30, [sp, #-48]!
    53c4:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    53c8:	mov	x0, x1
    53cc:	mov	x29, sp
    53d0:	ldr	x2, [x2, #3960]
    53d4:	ldr	x1, [x1, #8]
    53d8:	str	d8, [sp, #16]
    53dc:	cmp	x1, x2
    53e0:	b.eq	5454 <PyNumber_FloorDivide@plt+0x2024>  // b.none
    53e4:	bl	3250 <PyFloat_AsDouble@plt>
    53e8:	fmov	d8, d0
    53ec:	fmov	d1, #-1.000000000000000000e+00
    53f0:	fcmp	d0, d1
    53f4:	b.eq	545c <PyNumber_FloorDivide@plt+0x202c>  // b.none
    53f8:	fabs	d1, d8
    53fc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5400:	fmov	d0, x0
    5404:	fcmp	d1, d0
    5408:	b.ls	5424 <PyNumber_FloorDivide@plt+0x1ff4>  // b.plast
    540c:	b.gt	5474 <PyNumber_FloorDivide@plt+0x2044>
    5410:	fcmp	d8, d8
    5414:	fmov	d1, d8
    5418:	fmov	d0, d8
    541c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    5420:	b.vs	5444 <PyNumber_FloorDivide@plt+0x2014>
    5424:	bl	33b0 <__errno_location@plt>
    5428:	mov	x1, x0
    542c:	fmov	d0, d8
    5430:	add	x0, sp, #0x28
    5434:	str	wzr, [x1]
    5438:	bl	32b0 <modf@plt>
    543c:	ldr	d1, [sp, #40]
    5440:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    5444:	ldr	d8, [sp, #16]
    5448:	ldp	x29, x30, [sp], #48
    544c:	add	x0, x0, #0x8e0
    5450:	b	3200 <Py_BuildValue@plt>
    5454:	ldr	d8, [x0, #16]
    5458:	b	53f8 <PyNumber_FloorDivide@plt+0x1fc8>
    545c:	bl	3220 <PyErr_Occurred@plt>
    5460:	cbz	x0, 5424 <PyNumber_FloorDivide@plt+0x1ff4>
    5464:	mov	x0, #0x0                   	// #0
    5468:	ldr	d8, [sp, #16]
    546c:	ldp	x29, x30, [sp], #48
    5470:	ret
    5474:	movi	d0, #0x0
    5478:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    547c:	fmov	d2, x0
    5480:	fmov	d1, d8
    5484:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    5488:	add	x0, x0, #0x8e0
    548c:	bit	v0.8b, v8.8b, v2.8b
    5490:	ldr	d8, [sp, #16]
    5494:	ldp	x29, x30, [sp], #48
    5498:	b	3200 <Py_BuildValue@plt>
    549c:	nop
    54a0:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    54a4:	mov	x0, x1
    54a8:	ldr	x1, [x1, #8]
    54ac:	ldr	x2, [x2, #3960]
    54b0:	cmp	x1, x2
    54b4:	b.eq	54fc <PyNumber_FloorDivide@plt+0x20cc>  // b.none
    54b8:	stp	x29, x30, [sp, #-16]!
    54bc:	mov	x29, sp
    54c0:	bl	3250 <PyFloat_AsDouble@plt>
    54c4:	fmov	d1, #-1.000000000000000000e+00
    54c8:	fcmp	d0, d1
    54cc:	b.eq	5538 <PyNumber_FloorDivide@plt+0x2108>  // b.none
    54d0:	fabs	d2, d0
    54d4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    54d8:	fmov	d1, x0
    54dc:	fcmp	d2, d1
    54e0:	b.le	552c <PyNumber_FloorDivide@plt+0x20fc>
    54e4:	ldp	x29, x30, [sp], #16
    54e8:	fmov	x1, d0
    54ec:	mov	x0, #0x1                   	// #1
    54f0:	cmp	x1, #0x0
    54f4:	cneg	x0, x0, lt  // lt = tstop
    54f8:	b	3160 <PyBool_FromLong@plt>
    54fc:	ldr	d0, [x0, #16]
    5500:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5504:	fmov	d1, x0
    5508:	mov	x0, #0x0                   	// #0
    550c:	fabs	d2, d0
    5510:	fcmp	d2, d1
    5514:	b.le	5528 <PyNumber_FloorDivide@plt+0x20f8>
    5518:	fmov	x1, d0
    551c:	mov	x0, #0x1                   	// #1
    5520:	cmp	x1, #0x0
    5524:	cneg	x0, x0, lt  // lt = tstop
    5528:	b	3160 <PyBool_FromLong@plt>
    552c:	ldp	x29, x30, [sp], #16
    5530:	mov	x0, #0x0                   	// #0
    5534:	b	3160 <PyBool_FromLong@plt>
    5538:	bl	3220 <PyErr_Occurred@plt>
    553c:	cbz	x0, 552c <PyNumber_FloorDivide@plt+0x20fc>
    5540:	mov	x0, #0x0                   	// #0
    5544:	ldp	x29, x30, [sp], #16
    5548:	ret
    554c:	nop
    5550:	stp	x29, x30, [sp, #-48]!
    5554:	cmp	x2, #0x2
    5558:	mov	x29, sp
    555c:	stp	x19, x20, [sp, #16]
    5560:	mov	x19, x1
    5564:	str	x21, [sp, #32]
    5568:	b.eq	5588 <PyNumber_FloorDivide@plt+0x2158>  // b.none
    556c:	mov	x1, x2
    5570:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    5574:	mov	x3, #0x2                   	// #2
    5578:	add	x0, x0, #0x8e8
    557c:	mov	x2, x3
    5580:	bl	31d0 <_PyArg_CheckPositional@plt>
    5584:	cbz	w0, 5634 <PyNumber_FloorDivide@plt+0x2204>
    5588:	ldp	x0, x20, [x19]
    558c:	bl	33a0 <PyNumber_Index@plt>
    5590:	mov	x19, x0
    5594:	cbz	x0, 5634 <PyNumber_FloorDivide@plt+0x2204>
    5598:	mov	x0, x20
    559c:	bl	33a0 <PyNumber_Index@plt>
    55a0:	mov	x20, x0
    55a4:	cbz	x0, 5624 <PyNumber_FloorDivide@plt+0x21f4>
    55a8:	mov	x1, x0
    55ac:	mov	x0, x19
    55b0:	bl	3140 <_PyLong_GCD@plt>
    55b4:	mov	x21, x0
    55b8:	ldr	x1, [x19]
    55bc:	sub	x0, x1, #0x1
    55c0:	str	x0, [x19]
    55c4:	cbz	x0, 5608 <PyNumber_FloorDivide@plt+0x21d8>
    55c8:	ldr	x0, [x20]
    55cc:	sub	x0, x0, #0x1
    55d0:	str	x0, [x20]
    55d4:	cbz	x0, 55ec <PyNumber_FloorDivide@plt+0x21bc>
    55d8:	mov	x0, x21
    55dc:	ldp	x19, x20, [sp, #16]
    55e0:	ldr	x21, [sp, #32]
    55e4:	ldp	x29, x30, [sp], #48
    55e8:	ret
    55ec:	mov	x0, x20
    55f0:	bl	2fb0 <_Py_Dealloc@plt>
    55f4:	mov	x0, x21
    55f8:	ldp	x19, x20, [sp, #16]
    55fc:	ldr	x21, [sp, #32]
    5600:	ldp	x29, x30, [sp], #48
    5604:	ret
    5608:	mov	x0, x19
    560c:	bl	2fb0 <_Py_Dealloc@plt>
    5610:	ldr	x0, [x20]
    5614:	sub	x0, x0, #0x1
    5618:	str	x0, [x20]
    561c:	cbnz	x0, 55d8 <PyNumber_FloorDivide@plt+0x21a8>
    5620:	b	55ec <PyNumber_FloorDivide@plt+0x21bc>
    5624:	ldr	x0, [x19]
    5628:	sub	x0, x0, #0x1
    562c:	str	x0, [x19]
    5630:	cbz	x0, 564c <PyNumber_FloorDivide@plt+0x221c>
    5634:	mov	x21, #0x0                   	// #0
    5638:	mov	x0, x21
    563c:	ldp	x19, x20, [sp, #16]
    5640:	ldr	x21, [sp, #32]
    5644:	ldp	x29, x30, [sp], #48
    5648:	ret
    564c:	mov	x0, x19
    5650:	mov	x21, #0x0                   	// #0
    5654:	bl	2fb0 <_Py_Dealloc@plt>
    5658:	b	55d8 <PyNumber_FloorDivide@plt+0x21a8>
    565c:	nop
    5660:	stp	x29, x30, [sp, #-48]!
    5664:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    5668:	mov	x0, x1
    566c:	mov	x29, sp
    5670:	ldr	x2, [x2, #3960]
    5674:	ldr	x1, [x1, #8]
    5678:	cmp	x1, x2
    567c:	b.eq	56cc <PyNumber_FloorDivide@plt+0x229c>  // b.none
    5680:	bl	3250 <PyFloat_AsDouble@plt>
    5684:	fmov	d1, #-1.000000000000000000e+00
    5688:	fcmp	d0, d1
    568c:	b.eq	56d4 <PyNumber_FloorDivide@plt+0x22a4>  // b.none
    5690:	fcmp	d0, d0
    5694:	b.vs	5700 <PyNumber_FloorDivide@plt+0x22d0>
    5698:	fabs	d2, d0
    569c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    56a0:	fmov	d1, x0
    56a4:	mov	w1, #0x0                   	// #0
    56a8:	fcmp	d2, d1
    56ac:	cset	w0, gt
    56b0:	fcmp	d0, #0.0
    56b4:	csinc	w0, w0, wzr, ne  // ne = any
    56b8:	cbz	w0, 56e4 <PyNumber_FloorDivide@plt+0x22b4>
    56bc:	ldp	x29, x30, [sp], #48
    56c0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    56c4:	add	x0, x0, #0x8f0
    56c8:	b	3200 <Py_BuildValue@plt>
    56cc:	ldr	d0, [x0, #16]
    56d0:	b	5690 <PyNumber_FloorDivide@plt+0x2260>
    56d4:	str	d0, [sp, #24]
    56d8:	bl	3220 <PyErr_Occurred@plt>
    56dc:	ldr	d0, [sp, #24]
    56e0:	cbnz	x0, 5708 <PyNumber_FloorDivide@plt+0x22d8>
    56e4:	add	x0, sp, #0x2c
    56e8:	bl	32d0 <frexp@plt>
    56ec:	ldr	w1, [sp, #44]
    56f0:	ldp	x29, x30, [sp], #48
    56f4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    56f8:	add	x0, x0, #0x8f0
    56fc:	b	3200 <Py_BuildValue@plt>
    5700:	mov	w1, #0x0                   	// #0
    5704:	b	56bc <PyNumber_FloorDivide@plt+0x228c>
    5708:	mov	x0, #0x0                   	// #0
    570c:	ldp	x29, x30, [sp], #48
    5710:	ret
    5714:	nop
    5718:	stp	x29, x30, [sp, #-224]!
    571c:	cmp	x2, #0x10
    5720:	mov	x29, sp
    5724:	stp	x19, x20, [sp, #16]
    5728:	stp	x21, x22, [sp, #32]
    572c:	mov	x21, x2
    5730:	stp	x23, x24, [sp, #48]
    5734:	mov	x23, x1
    5738:	stp	x25, x26, [sp, #64]
    573c:	stp	d8, d9, [sp, #80]
    5740:	b.gt	58c0 <PyNumber_FloorDivide@plt+0x2490>
    5744:	cmp	x2, #0x0
    5748:	b.le	590c <PyNumber_FloorDivide@plt+0x24dc>
    574c:	add	x25, sp, #0x60
    5750:	mov	x22, x25
    5754:	adrp	x24, 1e000 <_Py_log1p@@Base+0x13908>
    5758:	adrp	x26, 1e000 <_Py_log1p@@Base+0x13908>
    575c:	movi	d8, #0x0
    5760:	mov	w20, #0x0                   	// #0
    5764:	ldr	x24, [x24, #3960]
    5768:	mov	x19, #0x0                   	// #0
    576c:	ldr	x26, [x26, #4032]
    5770:	fmov	d9, #-1.000000000000000000e+00
    5774:	b	57b4 <PyNumber_FloorDivide@plt+0x2384>
    5778:	cmp	x3, x26
    577c:	b.eq	58a4 <PyNumber_FloorDivide@plt+0x2474>  // b.none
    5780:	bl	3250 <PyFloat_AsDouble@plt>
    5784:	fcmp	d0, d9
    5788:	b.eq	58b0 <PyNumber_FloorDivide@plt+0x2480>  // b.none
    578c:	fabs	d0, d0
    5790:	fcmp	d0, d0
    5794:	cset	w0, vs
    5798:	orr	w20, w20, w0
    579c:	fcmp	d8, d0
    57a0:	str	d0, [x22, x19, lsl #3]
    57a4:	add	x19, x19, #0x1
    57a8:	fcsel	d8, d8, d0, pl  // pl = nfrst
    57ac:	cmp	x21, x19
    57b0:	b.le	57f0 <PyNumber_FloorDivide@plt+0x23c0>
    57b4:	ldr	x0, [x23, x19, lsl #3]
    57b8:	ldr	x3, [x0, #8]
    57bc:	cmp	x3, x24
    57c0:	b.ne	5778 <PyNumber_FloorDivide@plt+0x2348>  // b.any
    57c4:	ldr	d0, [x0, #16]
    57c8:	fabs	d0, d0
    57cc:	fcmp	d0, d0
    57d0:	str	d0, [x22, x19, lsl #3]
    57d4:	add	x19, x19, #0x1
    57d8:	cset	w0, vs
    57dc:	fcmp	d8, d0
    57e0:	orr	w20, w20, w0
    57e4:	fcsel	d8, d8, d0, pl  // pl = nfrst
    57e8:	cmp	x21, x19
    57ec:	b.gt	57b4 <PyNumber_FloorDivide@plt+0x2384>
    57f0:	fabs	d1, d8
    57f4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    57f8:	fmov	d0, x0
    57fc:	fcmp	d1, d0
    5800:	b.gt	5868 <PyNumber_FloorDivide@plt+0x2438>
    5804:	cbnz	w20, 58e0 <PyNumber_FloorDivide@plt+0x24b0>
    5808:	fcmp	d8, #0.0
    580c:	ccmp	x21, #0x1, #0x4, ne  // ne = any
    5810:	b.le	5868 <PyNumber_FloorDivide@plt+0x2438>
    5814:	movi	d3, #0x0
    5818:	fmov	d2, #1.000000000000000000e+00
    581c:	mov	x0, #0x0                   	// #0
    5820:	ldr	d0, [x22, x0, lsl #3]
    5824:	fmov	d1, d2
    5828:	add	x0, x0, #0x1
    582c:	cmp	x21, x0
    5830:	fdiv	d0, d0, d8
    5834:	fmul	d0, d0, d0
    5838:	fadd	d2, d2, d0
    583c:	fsub	d1, d1, d2
    5840:	fadd	d0, d1, d0
    5844:	fadd	d3, d3, d0
    5848:	b.gt	5820 <PyNumber_FloorDivide@plt+0x23f0>
    584c:	fmov	d0, #1.000000000000000000e+00
    5850:	fsub	d0, d2, d0
    5854:	fadd	d0, d0, d3
    5858:	fsqrt	d9, d0
    585c:	fcmp	d0, #0.0
    5860:	b.mi	5914 <PyNumber_FloorDivide@plt+0x24e4>  // b.first
    5864:	fmul	d8, d8, d9
    5868:	cmp	x22, x25
    586c:	b.eq	5878 <PyNumber_FloorDivide@plt+0x2448>  // b.none
    5870:	mov	x0, x22
    5874:	bl	30f0 <PyObject_Free@plt>
    5878:	fmov	d0, d8
    587c:	bl	3100 <PyFloat_FromDouble@plt>
    5880:	mov	x19, x0
    5884:	mov	x0, x19
    5888:	ldp	x19, x20, [sp, #16]
    588c:	ldp	x21, x22, [sp, #32]
    5890:	ldp	x23, x24, [sp, #48]
    5894:	ldp	x25, x26, [sp, #64]
    5898:	ldp	d8, d9, [sp, #80]
    589c:	ldp	x29, x30, [sp], #224
    58a0:	ret
    58a4:	bl	32c0 <PyLong_AsDouble@plt>
    58a8:	fcmp	d0, d9
    58ac:	b.ne	578c <PyNumber_FloorDivide@plt+0x235c>  // b.any
    58b0:	bl	3220 <PyErr_Occurred@plt>
    58b4:	cbnz	x0, 58f4 <PyNumber_FloorDivide@plt+0x24c4>
    58b8:	fmov	d0, #1.000000000000000000e+00
    58bc:	b	579c <PyNumber_FloorDivide@plt+0x236c>
    58c0:	lsl	x0, x2, #3
    58c4:	add	x25, sp, #0x60
    58c8:	bl	3070 <PyObject_Malloc@plt>
    58cc:	mov	x22, x0
    58d0:	cbnz	x0, 5754 <PyNumber_FloorDivide@plt+0x2324>
    58d4:	bl	2fd0 <PyErr_NoMemory@plt>
    58d8:	mov	x19, x0
    58dc:	b	5884 <PyNumber_FloorDivide@plt+0x2454>
    58e0:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    58e4:	cmp	x22, x25
    58e8:	fmov	d8, x1
    58ec:	b.ne	5870 <PyNumber_FloorDivide@plt+0x2440>  // b.any
    58f0:	b	5878 <PyNumber_FloorDivide@plt+0x2448>
    58f4:	cmp	x22, x25
    58f8:	mov	x19, #0x0                   	// #0
    58fc:	b.eq	5884 <PyNumber_FloorDivide@plt+0x2454>  // b.none
    5900:	mov	x0, x22
    5904:	bl	30f0 <PyObject_Free@plt>
    5908:	b	5884 <PyNumber_FloorDivide@plt+0x2454>
    590c:	movi	d8, #0x0
    5910:	b	5878 <PyNumber_FloorDivide@plt+0x2448>
    5914:	bl	3040 <sqrt@plt>
    5918:	fmul	d8, d8, d9
    591c:	b	5868 <PyNumber_FloorDivide@plt+0x2438>
    5920:	stp	x29, x30, [sp, #-304]!
    5924:	cmp	x2, #0x2
    5928:	mov	x29, sp
    592c:	stp	x19, x20, [sp, #16]
    5930:	mov	x19, x1
    5934:	b.eq	5954 <PyNumber_FloorDivide@plt+0x2524>  // b.none
    5938:	mov	x1, x2
    593c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    5940:	mov	x3, #0x2                   	// #2
    5944:	add	x0, x0, #0x8f8
    5948:	mov	x2, x3
    594c:	bl	31d0 <_PyArg_CheckPositional@plt>
    5950:	cbz	w0, 5d20 <PyNumber_FloorDivide@plt+0x28f0>
    5954:	stp	x21, x22, [sp, #32]
    5958:	ldp	x21, x19, [x19]
    595c:	ldr	x0, [x21, #8]
    5960:	ldr	x0, [x0, #168]
    5964:	tbz	w0, #26, 5b80 <PyNumber_FloorDivide@plt+0x2750>
    5968:	ldr	x0, [x19, #8]
    596c:	stp	x27, x28, [sp, #80]
    5970:	mov	w28, #0x0                   	// #0
    5974:	str	wzr, [sp, #172]
    5978:	ldr	x0, [x0, #168]
    597c:	tbz	w0, #26, 5bac <PyNumber_FloorDivide@plt+0x277c>
    5980:	ldr	x22, [x19, #16]
    5984:	ldr	x0, [x21, #16]
    5988:	cmp	x0, x22
    598c:	b.ne	5cec <PyNumber_FloorDivide@plt+0x28bc>  // b.any
    5990:	stp	x23, x24, [sp, #48]
    5994:	cmp	x0, #0x10
    5998:	b.gt	5aa0 <PyNumber_FloorDivide@plt+0x2670>
    599c:	add	x27, sp, #0xb0
    59a0:	stp	d8, d9, [sp, #96]
    59a4:	mov	x23, x27
    59a8:	cmp	x22, #0x0
    59ac:	b.le	5d98 <PyNumber_FloorDivide@plt+0x2968>
    59b0:	stp	x25, x26, [sp, #64]
    59b4:	adrp	x26, 1e000 <_Py_log1p@@Base+0x13908>
    59b8:	add	x0, x21, #0x18
    59bc:	adrp	x25, 1e000 <_Py_log1p@@Base+0x13908>
    59c0:	str	x0, [sp, #144]
    59c4:	ldr	x0, [x26, #3960]
    59c8:	str	x0, [sp, #136]
    59cc:	add	x0, x19, #0x18
    59d0:	str	x0, [sp, #160]
    59d4:	ldr	x0, [x25, #4032]
    59d8:	movi	d9, #0x0
    59dc:	mov	w24, #0x0                   	// #0
    59e0:	mov	x20, #0x0                   	// #0
    59e4:	str	d10, [sp, #112]
    59e8:	fmov	d10, #-1.000000000000000000e+00
    59ec:	str	x0, [sp, #152]
    59f0:	b	5a68 <PyNumber_FloorDivide@plt+0x2638>
    59f4:	ldr	x2, [sp, #152]
    59f8:	cmp	x1, x2
    59fc:	b.eq	5ad8 <PyNumber_FloorDivide@plt+0x26a8>  // b.none
    5a00:	bl	3250 <PyFloat_AsDouble@plt>
    5a04:	fcmp	d0, d10
    5a08:	fmov	d8, d0
    5a0c:	b.eq	5ae8 <PyNumber_FloorDivide@plt+0x26b8>  // b.none
    5a10:	ldr	x0, [sp, #160]
    5a14:	ldr	x1, [x26, #3960]
    5a18:	ldr	x0, [x0, x20, lsl #3]
    5a1c:	ldr	x2, [x0, #8]
    5a20:	cmp	x2, x1
    5a24:	b.eq	5a98 <PyNumber_FloorDivide@plt+0x2668>  // b.none
    5a28:	ldr	x1, [x25, #4032]
    5a2c:	cmp	x2, x1
    5a30:	b.eq	5abc <PyNumber_FloorDivide@plt+0x268c>  // b.none
    5a34:	bl	3250 <PyFloat_AsDouble@plt>
    5a38:	fcmp	d0, d10
    5a3c:	b.eq	5ac8 <PyNumber_FloorDivide@plt+0x2698>  // b.none
    5a40:	fabd	d0, d8, d0
    5a44:	fcmp	d0, d0
    5a48:	str	d0, [x23, x20, lsl #3]
    5a4c:	add	x20, x20, #0x1
    5a50:	cset	w0, vs
    5a54:	fcmp	d0, d9
    5a58:	orr	w24, w24, w0
    5a5c:	fcsel	d9, d9, d0, le
    5a60:	cmp	x22, x20
    5a64:	b.eq	5af8 <PyNumber_FloorDivide@plt+0x26c8>  // b.none
    5a68:	ldp	x2, x0, [sp, #136]
    5a6c:	ldr	x0, [x0, x20, lsl #3]
    5a70:	ldr	x1, [x0, #8]
    5a74:	cmp	x1, x2
    5a78:	b.ne	59f4 <PyNumber_FloorDivide@plt+0x25c4>  // b.any
    5a7c:	ldr	d8, [x0, #16]
    5a80:	ldr	x0, [sp, #160]
    5a84:	ldr	x1, [x26, #3960]
    5a88:	ldr	x0, [x0, x20, lsl #3]
    5a8c:	ldr	x2, [x0, #8]
    5a90:	cmp	x2, x1
    5a94:	b.ne	5a28 <PyNumber_FloorDivide@plt+0x25f8>  // b.any
    5a98:	ldr	d0, [x0, #16]
    5a9c:	b	5a40 <PyNumber_FloorDivide@plt+0x2610>
    5aa0:	lsl	x0, x0, #3
    5aa4:	add	x27, sp, #0xb0
    5aa8:	bl	3070 <PyObject_Malloc@plt>
    5aac:	mov	x23, x0
    5ab0:	cbz	x0, 5d80 <PyNumber_FloorDivide@plt+0x2950>
    5ab4:	stp	d8, d9, [sp, #96]
    5ab8:	b	59a8 <PyNumber_FloorDivide@plt+0x2578>
    5abc:	bl	32c0 <PyLong_AsDouble@plt>
    5ac0:	fcmp	d0, d10
    5ac4:	b.ne	5a40 <PyNumber_FloorDivide@plt+0x2610>  // b.any
    5ac8:	bl	3220 <PyErr_Occurred@plt>
    5acc:	cbnz	x0, 5bf4 <PyNumber_FloorDivide@plt+0x27c4>
    5ad0:	fmov	d0, #-1.000000000000000000e+00
    5ad4:	b	5a40 <PyNumber_FloorDivide@plt+0x2610>
    5ad8:	bl	32c0 <PyLong_AsDouble@plt>
    5adc:	fcmp	d0, d10
    5ae0:	fmov	d8, d0
    5ae4:	b.ne	5a10 <PyNumber_FloorDivide@plt+0x25e0>  // b.any
    5ae8:	bl	3220 <PyErr_Occurred@plt>
    5aec:	cbnz	x0, 5bf4 <PyNumber_FloorDivide@plt+0x27c4>
    5af0:	fmov	d8, #-1.000000000000000000e+00
    5af4:	b	5a10 <PyNumber_FloorDivide@plt+0x25e0>
    5af8:	fabs	d1, d9
    5afc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5b00:	fmov	d0, x0
    5b04:	fcmp	d1, d0
    5b08:	b.gt	5c50 <PyNumber_FloorDivide@plt+0x2820>
    5b0c:	cbnz	w24, 5cc0 <PyNumber_FloorDivide@plt+0x2890>
    5b10:	fcmp	d9, #0.0
    5b14:	ccmp	x22, #0x1, #0x4, ne  // ne = any
    5b18:	b.le	5c50 <PyNumber_FloorDivide@plt+0x2820>
    5b1c:	movi	d3, #0x0
    5b20:	add	x22, x23, x22, lsl #3
    5b24:	mov	x0, x23
    5b28:	fmov	d0, #1.000000000000000000e+00
    5b2c:	nop
    5b30:	ldr	d1, [x0], #8
    5b34:	fmov	d2, d0
    5b38:	fdiv	d1, d1, d9
    5b3c:	cmp	x22, x0
    5b40:	fmul	d1, d1, d1
    5b44:	fadd	d0, d0, d1
    5b48:	fsub	d2, d2, d0
    5b4c:	fadd	d1, d2, d1
    5b50:	fadd	d3, d3, d1
    5b54:	b.ne	5b30 <PyNumber_FloorDivide@plt+0x2700>  // b.any
    5b58:	fmov	d1, #1.000000000000000000e+00
    5b5c:	fsub	d0, d0, d1
    5b60:	fadd	d0, d0, d3
    5b64:	fsqrt	d8, d0
    5b68:	fcmp	d0, #0.0
    5b6c:	b.mi	5da0 <PyNumber_FloorDivide@plt+0x2970>  // b.first
    5b70:	fmul	d9, d9, d8
    5b74:	ldr	d10, [sp, #112]
    5b78:	ldp	x25, x26, [sp, #64]
    5b7c:	b	5c58 <PyNumber_FloorDivide@plt+0x2828>
    5b80:	mov	x0, x21
    5b84:	bl	3320 <PySequence_Tuple@plt>
    5b88:	mov	w1, #0x1                   	// #1
    5b8c:	str	w1, [sp, #172]
    5b90:	mov	x21, x0
    5b94:	cbz	x0, 5bdc <PyNumber_FloorDivide@plt+0x27ac>
    5b98:	ldr	x0, [x19, #8]
    5b9c:	stp	x27, x28, [sp, #80]
    5ba0:	mov	w28, #0x0                   	// #0
    5ba4:	ldr	x0, [x0, #168]
    5ba8:	tbnz	w0, #26, 5980 <PyNumber_FloorDivide@plt+0x2550>
    5bac:	mov	x0, x19
    5bb0:	mov	w28, #0x1                   	// #1
    5bb4:	bl	3320 <PySequence_Tuple@plt>
    5bb8:	mov	x19, x0
    5bbc:	cbnz	x0, 5980 <PyNumber_FloorDivide@plt+0x2550>
    5bc0:	ldr	w0, [sp, #172]
    5bc4:	cbz	w0, 5bd8 <PyNumber_FloorDivide@plt+0x27a8>
    5bc8:	ldr	x0, [x21]
    5bcc:	sub	x0, x0, #0x1
    5bd0:	str	x0, [x21]
    5bd4:	cbz	x0, 5d44 <PyNumber_FloorDivide@plt+0x2914>
    5bd8:	ldp	x27, x28, [sp, #80]
    5bdc:	mov	x19, #0x0                   	// #0
    5be0:	ldp	x21, x22, [sp, #32]
    5be4:	mov	x0, x19
    5be8:	ldp	x19, x20, [sp, #16]
    5bec:	ldp	x29, x30, [sp], #304
    5bf0:	ret
    5bf4:	cmp	x23, x27
    5bf8:	b.eq	5c04 <PyNumber_FloorDivide@plt+0x27d4>  // b.none
    5bfc:	mov	x0, x23
    5c00:	bl	30f0 <PyObject_Free@plt>
    5c04:	ldr	w0, [sp, #172]
    5c08:	cbz	w0, 5c1c <PyNumber_FloorDivide@plt+0x27ec>
    5c0c:	ldr	x0, [x21]
    5c10:	sub	x0, x0, #0x1
    5c14:	str	x0, [x21]
    5c18:	cbz	x0, 5d34 <PyNumber_FloorDivide@plt+0x2904>
    5c1c:	cbz	w28, 5c30 <PyNumber_FloorDivide@plt+0x2800>
    5c20:	ldr	x0, [x19]
    5c24:	sub	x0, x0, #0x1
    5c28:	str	x0, [x19]
    5c2c:	cbz	x0, 5d58 <PyNumber_FloorDivide@plt+0x2928>
    5c30:	mov	x19, #0x0                   	// #0
    5c34:	ldr	d10, [sp, #112]
    5c38:	ldp	x21, x22, [sp, #32]
    5c3c:	ldp	x23, x24, [sp, #48]
    5c40:	ldp	x25, x26, [sp, #64]
    5c44:	ldp	x27, x28, [sp, #80]
    5c48:	ldp	d8, d9, [sp, #96]
    5c4c:	b	5be4 <PyNumber_FloorDivide@plt+0x27b4>
    5c50:	ldp	x25, x26, [sp, #64]
    5c54:	ldr	d10, [sp, #112]
    5c58:	cmp	x23, x27
    5c5c:	b.eq	5c68 <PyNumber_FloorDivide@plt+0x2838>  // b.none
    5c60:	mov	x0, x23
    5c64:	bl	30f0 <PyObject_Free@plt>
    5c68:	ldr	w0, [sp, #172]
    5c6c:	cbz	w0, 5c80 <PyNumber_FloorDivide@plt+0x2850>
    5c70:	ldr	x0, [x21]
    5c74:	sub	x0, x0, #0x1
    5c78:	str	x0, [x21]
    5c7c:	cbz	x0, 5ce0 <PyNumber_FloorDivide@plt+0x28b0>
    5c80:	cbz	w28, 5c94 <PyNumber_FloorDivide@plt+0x2864>
    5c84:	ldr	x0, [x19]
    5c88:	sub	x0, x0, #0x1
    5c8c:	str	x0, [x19]
    5c90:	cbz	x0, 5cd4 <PyNumber_FloorDivide@plt+0x28a4>
    5c94:	fmov	d0, d9
    5c98:	bl	3100 <PyFloat_FromDouble@plt>
    5c9c:	mov	x19, x0
    5ca0:	ldp	x21, x22, [sp, #32]
    5ca4:	ldp	x23, x24, [sp, #48]
    5ca8:	ldp	x27, x28, [sp, #80]
    5cac:	ldp	d8, d9, [sp, #96]
    5cb0:	mov	x0, x19
    5cb4:	ldp	x19, x20, [sp, #16]
    5cb8:	ldp	x29, x30, [sp], #304
    5cbc:	ret
    5cc0:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    5cc4:	fmov	d9, x0
    5cc8:	ldp	x25, x26, [sp, #64]
    5ccc:	ldr	d10, [sp, #112]
    5cd0:	b	5c58 <PyNumber_FloorDivide@plt+0x2828>
    5cd4:	mov	x0, x19
    5cd8:	bl	2fb0 <_Py_Dealloc@plt>
    5cdc:	b	5c94 <PyNumber_FloorDivide@plt+0x2864>
    5ce0:	mov	x0, x21
    5ce4:	bl	2fb0 <_Py_Dealloc@plt>
    5ce8:	b	5c80 <PyNumber_FloorDivide@plt+0x2850>
    5cec:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    5cf0:	mov	x19, #0x0                   	// #0
    5cf4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    5cf8:	add	x1, x1, #0x900
    5cfc:	ldr	x0, [x0, #3992]
    5d00:	ldr	x0, [x0]
    5d04:	bl	3060 <PyErr_SetString@plt>
    5d08:	mov	x0, x19
    5d0c:	ldp	x19, x20, [sp, #16]
    5d10:	ldp	x21, x22, [sp, #32]
    5d14:	ldp	x27, x28, [sp, #80]
    5d18:	ldp	x29, x30, [sp], #304
    5d1c:	ret
    5d20:	mov	x19, #0x0                   	// #0
    5d24:	mov	x0, x19
    5d28:	ldp	x19, x20, [sp, #16]
    5d2c:	ldp	x29, x30, [sp], #304
    5d30:	ret
    5d34:	mov	x0, x21
    5d38:	bl	2fb0 <_Py_Dealloc@plt>
    5d3c:	cbnz	w28, 5c20 <PyNumber_FloorDivide@plt+0x27f0>
    5d40:	b	5c30 <PyNumber_FloorDivide@plt+0x2800>
    5d44:	mov	x0, x21
    5d48:	bl	2fb0 <_Py_Dealloc@plt>
    5d4c:	ldp	x21, x22, [sp, #32]
    5d50:	ldp	x27, x28, [sp, #80]
    5d54:	b	5cb0 <PyNumber_FloorDivide@plt+0x2880>
    5d58:	mov	x0, x19
    5d5c:	bl	2fb0 <_Py_Dealloc@plt>
    5d60:	mov	x19, #0x0                   	// #0
    5d64:	ldr	d10, [sp, #112]
    5d68:	ldp	x21, x22, [sp, #32]
    5d6c:	ldp	x23, x24, [sp, #48]
    5d70:	ldp	x25, x26, [sp, #64]
    5d74:	ldp	x27, x28, [sp, #80]
    5d78:	ldp	d8, d9, [sp, #96]
    5d7c:	b	5cb0 <PyNumber_FloorDivide@plt+0x2880>
    5d80:	bl	2fd0 <PyErr_NoMemory@plt>
    5d84:	mov	x19, x0
    5d88:	ldp	x21, x22, [sp, #32]
    5d8c:	ldp	x23, x24, [sp, #48]
    5d90:	ldp	x27, x28, [sp, #80]
    5d94:	b	5cb0 <PyNumber_FloorDivide@plt+0x2880>
    5d98:	movi	d9, #0x0
    5d9c:	b	5c58 <PyNumber_FloorDivide@plt+0x2828>
    5da0:	bl	3040 <sqrt@plt>
    5da4:	b	5b70 <PyNumber_FloorDivide@plt+0x2740>
    5da8:	stp	x29, x30, [sp, #-48]!
    5dac:	mov	x29, sp
    5db0:	ldr	x0, [x1, #8]
    5db4:	stp	x19, x20, [sp, #16]
    5db8:	mov	x20, x1
    5dbc:	ldr	x1, [x0, #264]
    5dc0:	str	x21, [sp, #32]
    5dc4:	cbz	x1, 5e44 <PyNumber_FloorDivide@plt+0x2a14>
    5dc8:	adrp	x1, 1f000 <_Py_log1p@@Base+0x14908>
    5dcc:	add	x1, x1, #0x2c0
    5dd0:	add	x1, x1, #0x80
    5dd4:	mov	x0, x20
    5dd8:	bl	3090 <_PyObject_LookupSpecial@plt>
    5ddc:	mov	x19, x0
    5de0:	cbz	x0, 5e9c <PyNumber_FloorDivide@plt+0x2a6c>
    5de4:	ldr	x1, [x0, #8]
    5de8:	ldr	x2, [x1, #168]
    5dec:	ldr	x1, [x1, #56]
    5df0:	tbz	w2, #11, 5e80 <PyNumber_FloorDivide@plt+0x2a50>
    5df4:	ldr	x4, [x0, x1]
    5df8:	cbz	x4, 5e80 <PyNumber_FloorDivide@plt+0x2a50>
    5dfc:	mov	x3, #0x0                   	// #0
    5e00:	mov	x2, #0x0                   	// #0
    5e04:	mov	x1, #0x0                   	// #0
    5e08:	blr	x4
    5e0c:	mov	x2, #0x0                   	// #0
    5e10:	mov	x1, x0
    5e14:	mov	x0, x19
    5e18:	bl	3240 <_Py_CheckFunctionResult@plt>
    5e1c:	mov	x21, x0
    5e20:	ldr	x1, [x19]
    5e24:	sub	x1, x1, #0x1
    5e28:	str	x1, [x19]
    5e2c:	cbz	x1, 5e64 <PyNumber_FloorDivide@plt+0x2a34>
    5e30:	mov	x0, x21
    5e34:	ldp	x19, x20, [sp, #16]
    5e38:	ldr	x21, [sp, #32]
    5e3c:	ldp	x29, x30, [sp], #48
    5e40:	ret
    5e44:	bl	3110 <PyType_Ready@plt>
    5e48:	tbz	w0, #31, 5dc8 <PyNumber_FloorDivide@plt+0x2998>
    5e4c:	mov	x21, #0x0                   	// #0
    5e50:	mov	x0, x21
    5e54:	ldp	x19, x20, [sp, #16]
    5e58:	ldr	x21, [sp, #32]
    5e5c:	ldp	x29, x30, [sp], #48
    5e60:	ret
    5e64:	mov	x0, x19
    5e68:	bl	2fb0 <_Py_Dealloc@plt>
    5e6c:	mov	x0, x21
    5e70:	ldp	x19, x20, [sp, #16]
    5e74:	ldr	x21, [sp, #32]
    5e78:	ldp	x29, x30, [sp], #48
    5e7c:	ret
    5e80:	mov	x0, x19
    5e84:	mov	x3, #0x0                   	// #0
    5e88:	mov	x2, #0x0                   	// #0
    5e8c:	mov	x1, #0x0                   	// #0
    5e90:	bl	3390 <_PyObject_MakeTpCall@plt>
    5e94:	mov	x21, x0
    5e98:	b	5e20 <PyNumber_FloorDivide@plt+0x29f0>
    5e9c:	bl	3220 <PyErr_Occurred@plt>
    5ea0:	mov	x21, x0
    5ea4:	cbnz	x0, 5e4c <PyNumber_FloorDivide@plt+0x2a1c>
    5ea8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    5eac:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    5eb0:	ldr	x2, [x20, #8]
    5eb4:	add	x1, x1, #0x938
    5eb8:	ldr	x0, [x0, #4000]
    5ebc:	ldr	x2, [x2, #24]
    5ec0:	ldr	x0, [x0]
    5ec4:	bl	3370 <PyErr_Format@plt>
    5ec8:	b	5e30 <PyNumber_FloorDivide@plt+0x2a00>
    5ecc:	nop
    5ed0:	stp	x29, x30, [sp, #-96]!
    5ed4:	mov	x0, x1
    5ed8:	mov	x29, sp
    5edc:	stp	x21, x22, [sp, #32]
    5ee0:	bl	33a0 <PyNumber_Index@plt>
    5ee4:	cbz	x0, 6160 <PyNumber_FloorDivide@plt+0x2d30>
    5ee8:	stp	x19, x20, [sp, #16]
    5eec:	mov	x20, x0
    5ef0:	bl	2ff0 <_PyLong_Sign@plt>
    5ef4:	tbnz	w0, #31, 61b0 <PyNumber_FloorDivide@plt+0x2d80>
    5ef8:	mov	x0, x20
    5efc:	bl	2ff0 <_PyLong_Sign@plt>
    5f00:	cbnz	w0, 5f28 <PyNumber_FloorDivide@plt+0x2af8>
    5f04:	ldr	x0, [x20]
    5f08:	sub	x0, x0, #0x1
    5f0c:	str	x0, [x20]
    5f10:	cbz	x0, 62bc <PyNumber_FloorDivide@plt+0x2e8c>
    5f14:	ldp	x19, x20, [sp, #16]
    5f18:	mov	x0, #0x0                   	// #0
    5f1c:	ldp	x21, x22, [sp, #32]
    5f20:	ldp	x29, x30, [sp], #96
    5f24:	b	3120 <PyLong_FromLong@plt>
    5f28:	mov	x0, x20
    5f2c:	bl	3020 <_PyLong_NumBits@plt>
    5f30:	cmn	x0, #0x1
    5f34:	b.eq	6198 <PyNumber_FloorDivide@plt+0x2d68>  // b.none
    5f38:	stp	x25, x26, [sp, #64]
    5f3c:	sub	x25, x0, #0x1
    5f40:	cmp	x25, #0x3f
    5f44:	lsr	x26, x25, #1
    5f48:	b.ls	6128 <PyNumber_FloorDivide@plt+0x2cf8>  // b.plast
    5f4c:	stp	x23, x24, [sp, #48]
    5f50:	cmp	xzr, x25, lsr #7
    5f54:	mov	w24, #0x1                   	// #1
    5f58:	mov	w19, #0x6                   	// #6
    5f5c:	b.eq	5f74 <PyNumber_FloorDivide@plt+0x2b44>  // b.none
    5f60:	mov	w24, w19
    5f64:	add	w19, w19, #0x1
    5f68:	lsr	x0, x26, x19
    5f6c:	cbnz	x0, 5f60 <PyNumber_FloorDivide@plt+0x2b30>
    5f70:	sub	w24, w24, #0x4
    5f74:	and	x1, x25, #0xfffffffffffffffe
    5f78:	mov	x0, x20
    5f7c:	sub	x1, x1, #0x3e
    5f80:	orr	x25, x25, #0x1
    5f84:	bl	3030 <_PyLong_Rshift@plt>
    5f88:	mov	x22, x0
    5f8c:	cbz	x0, 62b0 <PyNumber_FloorDivide@plt+0x2e80>
    5f90:	bl	2f70 <PyLong_AsUnsignedLongLong@plt>
    5f94:	mov	x21, x0
    5f98:	ldr	x1, [x22]
    5f9c:	sub	x0, x1, #0x1
    5fa0:	str	x0, [x22]
    5fa4:	cbz	x0, 6300 <PyNumber_FloorDivide@plt+0x2ed0>
    5fa8:	cmn	x21, #0x1
    5fac:	b.eq	62a8 <PyNumber_FloorDivide@plt+0x2e78>  // b.none
    5fb0:	lsr	x1, x21, #62
    5fb4:	lsr	x4, x21, #59
    5fb8:	add	x0, x1, #0x1
    5fbc:	add	w1, w1, #0x1
    5fc0:	lsr	x3, x21, #53
    5fc4:	lsr	x2, x21, #41
    5fc8:	lsr	x21, x21, #17
    5fcc:	lsr	x24, x26, x24
    5fd0:	udiv	x4, x4, x0
    5fd4:	mov	w0, #0x1f                  	// #31
    5fd8:	sub	w0, w0, w24
    5fdc:	add	w4, w4, w1, lsl #1
    5fe0:	udiv	x3, x3, x4
    5fe4:	add	w3, w3, w4, lsl #3
    5fe8:	udiv	x2, x2, x3
    5fec:	add	w2, w2, w3, lsl #7
    5ff0:	lsl	w1, w2, #15
    5ff4:	udiv	x21, x21, x2
    5ff8:	add	x1, x21, x1
    5ffc:	lsr	x0, x1, x0
    6000:	bl	2f60 <PyLong_FromUnsignedLongLong@plt>
    6004:	mov	x21, x0
    6008:	cbz	x0, 62b0 <PyNumber_FloorDivide@plt+0x2e80>
    600c:	subs	w19, w19, #0x6
    6010:	b.mi	60c4 <PyNumber_FloorDivide@plt+0x2c94>  // b.first
    6014:	str	x27, [sp, #80]
    6018:	mov	x27, x24
    601c:	lsr	x24, x26, x19
    6020:	add	x1, x27, x24
    6024:	mov	x0, x20
    6028:	sub	x1, x25, x1
    602c:	bl	3030 <_PyLong_Rshift@plt>
    6030:	mov	x23, x0
    6034:	cbz	x0, 62d8 <PyNumber_FloorDivide@plt+0x2ea8>
    6038:	mov	x1, x21
    603c:	bl	3430 <PyNumber_FloorDivide@plt>
    6040:	ldr	x1, [x23]
    6044:	mov	x22, x0
    6048:	sub	x0, x1, #0x1
    604c:	str	x0, [x23]
    6050:	cbz	x0, 61f8 <PyNumber_FloorDivide@plt+0x2dc8>
    6054:	cbz	x22, 62d8 <PyNumber_FloorDivide@plt+0x2ea8>
    6058:	sub	x1, x24, x27
    605c:	mov	x0, x21
    6060:	sub	x1, x1, #0x1
    6064:	bl	3420 <_PyLong_Lshift@plt>
    6068:	ldr	x1, [x21]
    606c:	mov	x23, x0
    6070:	sub	x0, x1, #0x1
    6074:	str	x0, [x21]
    6078:	cbz	x0, 6204 <PyNumber_FloorDivide@plt+0x2dd4>
    607c:	cbz	x23, 6174 <PyNumber_FloorDivide@plt+0x2d44>
    6080:	mov	x1, x22
    6084:	mov	x0, x23
    6088:	bl	2f80 <PyNumber_Add@plt>
    608c:	mov	x21, x0
    6090:	ldr	x1, [x23]
    6094:	sub	x0, x1, #0x1
    6098:	str	x0, [x23]
    609c:	cbz	x0, 629c <PyNumber_FloorDivide@plt+0x2e6c>
    60a0:	ldr	x0, [x22]
    60a4:	sub	x0, x0, #0x1
    60a8:	str	x0, [x22]
    60ac:	cbz	x0, 6210 <PyNumber_FloorDivide@plt+0x2de0>
    60b0:	cbz	x21, 6318 <PyNumber_FloorDivide@plt+0x2ee8>
    60b4:	sub	w19, w19, #0x1
    60b8:	cmn	w19, #0x1
    60bc:	b.ne	6018 <PyNumber_FloorDivide@plt+0x2be8>  // b.any
    60c0:	ldr	x27, [sp, #80]
    60c4:	mov	x1, x21
    60c8:	mov	x0, x21
    60cc:	bl	3000 <PyNumber_Multiply@plt>
    60d0:	mov	x19, x0
    60d4:	cbz	x0, 62dc <PyNumber_FloorDivide@plt+0x2eac>
    60d8:	mov	x1, x0
    60dc:	mov	w2, #0x0                   	// #0
    60e0:	mov	x0, x20
    60e4:	bl	3130 <PyObject_RichCompareBool@plt>
    60e8:	ldr	x1, [x19]
    60ec:	mov	w22, w0
    60f0:	sub	x1, x1, #0x1
    60f4:	str	x1, [x19]
    60f8:	cbz	x1, 6328 <PyNumber_FloorDivide@plt+0x2ef8>
    60fc:	cmn	w22, #0x1
    6100:	b.eq	62dc <PyNumber_FloorDivide@plt+0x2eac>  // b.none
    6104:	cbnz	w22, 634c <PyNumber_FloorDivide@plt+0x2f1c>
    6108:	ldr	x0, [x20]
    610c:	sub	x0, x0, #0x1
    6110:	str	x0, [x20]
    6114:	cbz	x0, 6334 <PyNumber_FloorDivide@plt+0x2f04>
    6118:	ldp	x19, x20, [sp, #16]
    611c:	ldp	x23, x24, [sp, #48]
    6120:	ldp	x25, x26, [sp, #64]
    6124:	b	6164 <PyNumber_FloorDivide@plt+0x2d34>
    6128:	mov	x0, x20
    612c:	bl	2f70 <PyLong_AsUnsignedLongLong@plt>
    6130:	ldr	x1, [x20]
    6134:	mov	x19, x0
    6138:	sub	x0, x1, #0x1
    613c:	str	x0, [x20]
    6140:	cbz	x0, 630c <PyNumber_FloorDivide@plt+0x2edc>
    6144:	cmn	x19, #0x1
    6148:	b.ne	621c <PyNumber_FloorDivide@plt+0x2dec>  // b.any
    614c:	bl	3220 <PyErr_Occurred@plt>
    6150:	cbz	x0, 621c <PyNumber_FloorDivide@plt+0x2dec>
    6154:	ldp	x19, x20, [sp, #16]
    6158:	ldp	x25, x26, [sp, #64]
    615c:	nop
    6160:	mov	x21, #0x0                   	// #0
    6164:	mov	x0, x21
    6168:	ldp	x21, x22, [sp, #32]
    616c:	ldp	x29, x30, [sp], #96
    6170:	ret
    6174:	ldr	x0, [x22]
    6178:	sub	x0, x0, #0x1
    617c:	str	x0, [x22]
    6180:	cbnz	x0, 6318 <PyNumber_FloorDivide@plt+0x2ee8>
    6184:	mov	x0, x22
    6188:	bl	2fb0 <_Py_Dealloc@plt>
    618c:	ldp	x23, x24, [sp, #48]
    6190:	ldp	x25, x26, [sp, #64]
    6194:	ldr	x27, [sp, #80]
    6198:	ldr	x0, [x20]
    619c:	sub	x0, x0, #0x1
    61a0:	str	x0, [x20]
    61a4:	cbz	x0, 61d8 <PyNumber_FloorDivide@plt+0x2da8>
    61a8:	ldp	x19, x20, [sp, #16]
    61ac:	b	6160 <PyNumber_FloorDivide@plt+0x2d30>
    61b0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    61b4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    61b8:	add	x1, x1, #0x968
    61bc:	ldr	x0, [x0, #3992]
    61c0:	ldr	x0, [x0]
    61c4:	bl	3060 <PyErr_SetString@plt>
    61c8:	ldr	x0, [x20]
    61cc:	sub	x0, x0, #0x1
    61d0:	str	x0, [x20]
    61d4:	cbnz	x0, 61a8 <PyNumber_FloorDivide@plt+0x2d78>
    61d8:	mov	x0, x20
    61dc:	mov	x21, #0x0                   	// #0
    61e0:	bl	2fb0 <_Py_Dealloc@plt>
    61e4:	mov	x0, x21
    61e8:	ldp	x19, x20, [sp, #16]
    61ec:	ldp	x21, x22, [sp, #32]
    61f0:	ldp	x29, x30, [sp], #96
    61f4:	ret
    61f8:	mov	x0, x23
    61fc:	bl	2fb0 <_Py_Dealloc@plt>
    6200:	b	6054 <PyNumber_FloorDivide@plt+0x2c24>
    6204:	mov	x0, x21
    6208:	bl	2fb0 <_Py_Dealloc@plt>
    620c:	b	607c <PyNumber_FloorDivide@plt+0x2c4c>
    6210:	mov	x0, x22
    6214:	bl	2fb0 <_Py_Dealloc@plt>
    6218:	b	60b0 <PyNumber_FloorDivide@plt+0x2c80>
    621c:	mov	x0, #0x1f                  	// #31
    6220:	sub	x1, x0, x26
    6224:	sub	w0, w0, w26
    6228:	lsl	w1, w1, #1
    622c:	ldp	x21, x22, [sp, #32]
    6230:	lsl	x1, x19, x1
    6234:	lsr	x2, x1, #62
    6238:	lsr	x4, x1, #59
    623c:	add	x5, x2, #0x1
    6240:	add	w2, w2, #0x1
    6244:	lsr	x3, x1, #53
    6248:	lsr	x26, x1, #41
    624c:	lsr	x1, x1, #17
    6250:	udiv	x4, x4, x5
    6254:	add	w4, w4, w2, lsl #1
    6258:	udiv	x3, x3, x4
    625c:	add	w3, w3, w4, lsl #3
    6260:	udiv	x26, x26, x3
    6264:	add	w26, w26, w3, lsl #7
    6268:	lsl	w2, w26, #15
    626c:	udiv	x26, x1, x26
    6270:	add	x26, x26, x2
    6274:	lsr	x26, x26, x0
    6278:	mul	x0, x26, x26
    627c:	sub	x0, x0, #0x1
    6280:	cmp	x0, x19
    6284:	cset	x0, cs  // cs = hs, nlast
    6288:	sub	x0, x26, x0
    628c:	ldp	x19, x20, [sp, #16]
    6290:	ldp	x25, x26, [sp, #64]
    6294:	ldp	x29, x30, [sp], #96
    6298:	b	2f60 <PyLong_FromUnsignedLongLong@plt>
    629c:	mov	x0, x23
    62a0:	bl	2fb0 <_Py_Dealloc@plt>
    62a4:	b	60a0 <PyNumber_FloorDivide@plt+0x2c70>
    62a8:	bl	3220 <PyErr_Occurred@plt>
    62ac:	cbz	x0, 5fb0 <PyNumber_FloorDivide@plt+0x2b80>
    62b0:	ldp	x23, x24, [sp, #48]
    62b4:	ldp	x25, x26, [sp, #64]
    62b8:	b	6198 <PyNumber_FloorDivide@plt+0x2d68>
    62bc:	mov	x0, x20
    62c0:	bl	2fb0 <_Py_Dealloc@plt>
    62c4:	ldp	x19, x20, [sp, #16]
    62c8:	mov	x0, #0x0                   	// #0
    62cc:	ldp	x21, x22, [sp, #32]
    62d0:	ldp	x29, x30, [sp], #96
    62d4:	b	3120 <PyLong_FromLong@plt>
    62d8:	ldr	x27, [sp, #80]
    62dc:	ldr	x0, [x21]
    62e0:	sub	x0, x0, #0x1
    62e4:	str	x0, [x21]
    62e8:	cbnz	x0, 62b0 <PyNumber_FloorDivide@plt+0x2e80>
    62ec:	mov	x0, x21
    62f0:	bl	2fb0 <_Py_Dealloc@plt>
    62f4:	ldp	x23, x24, [sp, #48]
    62f8:	ldp	x25, x26, [sp, #64]
    62fc:	b	6198 <PyNumber_FloorDivide@plt+0x2d68>
    6300:	mov	x0, x22
    6304:	bl	2fb0 <_Py_Dealloc@plt>
    6308:	b	5fa8 <PyNumber_FloorDivide@plt+0x2b78>
    630c:	mov	x0, x20
    6310:	bl	2fb0 <_Py_Dealloc@plt>
    6314:	b	6144 <PyNumber_FloorDivide@plt+0x2d14>
    6318:	ldp	x23, x24, [sp, #48]
    631c:	ldp	x25, x26, [sp, #64]
    6320:	ldr	x27, [sp, #80]
    6324:	b	6198 <PyNumber_FloorDivide@plt+0x2d68>
    6328:	mov	x0, x19
    632c:	bl	2fb0 <_Py_Dealloc@plt>
    6330:	b	60fc <PyNumber_FloorDivide@plt+0x2ccc>
    6334:	mov	x0, x20
    6338:	bl	2fb0 <_Py_Dealloc@plt>
    633c:	ldp	x19, x20, [sp, #16]
    6340:	ldp	x23, x24, [sp, #48]
    6344:	ldp	x25, x26, [sp, #64]
    6348:	b	6164 <PyNumber_FloorDivide@plt+0x2d34>
    634c:	adrp	x1, 1e000 <_Py_log1p@@Base+0x13908>
    6350:	mov	x0, x21
    6354:	ldr	x1, [x1, #4056]
    6358:	ldr	x1, [x1]
    635c:	bl	33f0 <PyNumber_Subtract@plt>
    6360:	mov	x1, x0
    6364:	ldr	x2, [x21]
    6368:	sub	x0, x2, #0x1
    636c:	str	x0, [x21]
    6370:	cbz	x0, 637c <PyNumber_FloorDivide@plt+0x2f4c>
    6374:	mov	x21, x1
    6378:	b	6108 <PyNumber_FloorDivide@plt+0x2cd8>
    637c:	mov	x0, x21
    6380:	mov	x21, x1
    6384:	bl	2fb0 <_Py_Dealloc@plt>
    6388:	b	6108 <PyNumber_FloorDivide@plt+0x2cd8>
    638c:	nop
    6390:	stp	x29, x30, [sp, #-64]!
    6394:	cmp	x2, #0x2
    6398:	mov	x29, sp
    639c:	str	x19, [sp, #16]
    63a0:	mov	x19, x1
    63a4:	b.eq	63c4 <PyNumber_FloorDivide@plt+0x2f94>  // b.none
    63a8:	mov	x1, x2
    63ac:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    63b0:	mov	x3, #0x2                   	// #2
    63b4:	add	x0, x0, #0x990
    63b8:	mov	x2, x3
    63bc:	bl	31d0 <_PyArg_CheckPositional@plt>
    63c0:	cbz	w0, 650c <PyNumber_FloorDivide@plt+0x30dc>
    63c4:	ldr	x0, [x19]
    63c8:	stp	d8, d9, [sp, #32]
    63cc:	bl	3250 <PyFloat_AsDouble@plt>
    63d0:	fmov	d8, d0
    63d4:	ldr	x0, [x19, #8]
    63d8:	bl	3250 <PyFloat_AsDouble@plt>
    63dc:	fmov	d9, d0
    63e0:	fmov	d1, #-1.000000000000000000e+00
    63e4:	fcmp	d8, d1
    63e8:	fccmp	d0, d1, #0x4, ne  // ne = any
    63ec:	b.eq	651c <PyNumber_FloorDivide@plt+0x30ec>  // b.none
    63f0:	bl	33b0 <__errno_location@plt>
    63f4:	fcmp	d8, d9
    63f8:	str	wzr, [x0]
    63fc:	mov	x19, x0
    6400:	b.vs	65e4 <PyNumber_FloorDivide@plt+0x31b4>
    6404:	stp	d10, d11, [sp, #48]
    6408:	fabs	d10, d8
    640c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6410:	fmov	d0, x0
    6414:	fabs	d11, d9
    6418:	fcmp	d10, d0
    641c:	b.le	6450 <PyNumber_FloorDivide@plt+0x3020>
    6420:	fcmp	d11, d0
    6424:	b.le	6584 <PyNumber_FloorDivide@plt+0x3154>
    6428:	fmov	d1, #1.000000000000000000e+00
    642c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6430:	fmov	d0, x0
    6434:	bif	v9.8b, v1.8b, v0.8b
    6438:	fcmp	d9, d1
    643c:	b.ne	6538 <PyNumber_FloorDivide@plt+0x3108>  // b.any
    6440:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6444:	ldr	d1, [x0, #3184]
    6448:	bsl	v0.8b, v8.8b, v1.8b
    644c:	b	6488 <PyNumber_FloorDivide@plt+0x3058>
    6450:	fcmp	d11, d0
    6454:	cset	w0, gt
    6458:	fcmp	d8, #0.0
    645c:	csinc	w0, w0, wzr, ne  // ne = any
    6460:	cbz	w0, 65d4 <PyNumber_FloorDivide@plt+0x31a4>
    6464:	fmov	d1, #1.000000000000000000e+00
    6468:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    646c:	fmov	d0, x0
    6470:	bif	v9.8b, v1.8b, v0.8b
    6474:	fcmp	d9, d1
    6478:	b.eq	652c <PyNumber_FloorDivide@plt+0x30fc>  // b.none
    647c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6480:	ldr	d1, [x0, #3168]
    6484:	bsl	v0.8b, v8.8b, v1.8b
    6488:	fcmp	d0, d0
    648c:	b.vs	659c <PyNumber_FloorDivide@plt+0x316c>
    6490:	fabs	d2, d0
    6494:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6498:	fmov	d1, x0
    649c:	fcmp	d2, d1
    64a0:	b.le	64dc <PyNumber_FloorDivide@plt+0x30ac>
    64a4:	fcmp	d10, d1
    64a8:	b.hi	656c <PyNumber_FloorDivide@plt+0x313c>  // b.pmore
    64ac:	fcmp	d11, d1
    64b0:	b.hi	656c <PyNumber_FloorDivide@plt+0x313c>  // b.pmore
    64b4:	mov	w0, #0x22                  	// #34
    64b8:	str	w0, [x19]
    64bc:	fmov	d1, #1.000000000000000000e+00
    64c0:	fcmpe	d2, d1
    64c4:	b.pl	6548 <PyNumber_FloorDivide@plt+0x3118>  // b.nfrst
    64c8:	ldp	d10, d11, [sp, #48]
    64cc:	ldr	x19, [sp, #16]
    64d0:	ldp	d8, d9, [sp, #32]
    64d4:	ldp	x29, x30, [sp], #64
    64d8:	b	3100 <PyFloat_FromDouble@plt>
    64dc:	ldr	w0, [x19]
    64e0:	cbz	w0, 64c8 <PyNumber_FloorDivide@plt+0x3098>
    64e4:	cmp	w0, #0x21
    64e8:	b.eq	65a4 <PyNumber_FloorDivide@plt+0x3174>  // b.none
    64ec:	cmp	w0, #0x22
    64f0:	b.eq	64bc <PyNumber_FloorDivide@plt+0x308c>  // b.none
    64f4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    64f8:	ldr	x0, [x0, #3992]
    64fc:	ldr	x0, [x0]
    6500:	bl	2f50 <PyErr_SetFromErrno@plt>
    6504:	ldp	d8, d9, [sp, #32]
    6508:	ldp	d10, d11, [sp, #48]
    650c:	mov	x0, #0x0                   	// #0
    6510:	ldr	x19, [sp, #16]
    6514:	ldp	x29, x30, [sp], #64
    6518:	ret
    651c:	bl	3220 <PyErr_Occurred@plt>
    6520:	cbz	x0, 63f0 <PyNumber_FloorDivide@plt+0x2fc0>
    6524:	ldp	d8, d9, [sp, #32]
    6528:	b	650c <PyNumber_FloorDivide@plt+0x30dc>
    652c:	movi	d1, #0x0
    6530:	bsl	v0.8b, v8.8b, v1.8b
    6534:	b	6488 <PyNumber_FloorDivide@plt+0x3058>
    6538:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    653c:	ldr	d1, [x0, #3192]
    6540:	bsl	v0.8b, v8.8b, v1.8b
    6544:	b	6488 <PyNumber_FloorDivide@plt+0x3058>
    6548:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    654c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6550:	add	x1, x1, #0x9b0
    6554:	ldr	x0, [x0, #4016]
    6558:	ldr	x0, [x0]
    655c:	bl	3060 <PyErr_SetString@plt>
    6560:	ldp	d8, d9, [sp, #32]
    6564:	ldp	d10, d11, [sp, #48]
    6568:	b	650c <PyNumber_FloorDivide@plt+0x30dc>
    656c:	ldp	d10, d11, [sp, #48]
    6570:	str	wzr, [x19]
    6574:	ldr	x19, [sp, #16]
    6578:	ldp	d8, d9, [sp, #32]
    657c:	ldp	x29, x30, [sp], #64
    6580:	b	3100 <PyFloat_FromDouble@plt>
    6584:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6588:	ldr	d0, [x0, #3200]
    658c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6590:	fmov	d1, x0
    6594:	bit	v0.8b, v8.8b, v1.8b
    6598:	b	6488 <PyNumber_FloorDivide@plt+0x3058>
    659c:	mov	w0, #0x21                  	// #33
    65a0:	str	w0, [x19]
    65a4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    65a8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    65ac:	add	x1, x1, #0x998
    65b0:	ldr	x0, [x0, #3992]
    65b4:	ldr	x0, [x0]
    65b8:	bl	3060 <PyErr_SetString@plt>
    65bc:	mov	x0, #0x0                   	// #0
    65c0:	ldr	x19, [sp, #16]
    65c4:	ldp	d8, d9, [sp, #32]
    65c8:	ldp	d10, d11, [sp, #48]
    65cc:	ldp	x29, x30, [sp], #64
    65d0:	ret
    65d4:	fmov	d1, d9
    65d8:	fmov	d0, d8
    65dc:	bl	2ee0 <atan2@plt>
    65e0:	b	6488 <PyNumber_FloorDivide@plt+0x3058>
    65e4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    65e8:	fmov	d0, x0
    65ec:	b	64cc <PyNumber_FloorDivide@plt+0x309c>
    65f0:	stp	x29, x30, [sp, #-64]!
    65f4:	cmp	x2, #0x2
    65f8:	mov	x29, sp
    65fc:	str	x19, [sp, #16]
    6600:	mov	x19, x1
    6604:	b.eq	6624 <PyNumber_FloorDivide@plt+0x31f4>  // b.none
    6608:	mov	x1, x2
    660c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6610:	mov	x3, #0x2                   	// #2
    6614:	add	x0, x0, #0x9c8
    6618:	mov	x2, x3
    661c:	bl	31d0 <_PyArg_CheckPositional@plt>
    6620:	cbz	w0, 66c4 <PyNumber_FloorDivide@plt+0x3294>
    6624:	ldr	x0, [x19]
    6628:	stp	d8, d9, [sp, #32]
    662c:	bl	3250 <PyFloat_AsDouble@plt>
    6630:	fmov	d8, d0
    6634:	ldr	x0, [x19, #8]
    6638:	bl	3250 <PyFloat_AsDouble@plt>
    663c:	fmov	d9, d0
    6640:	fmov	d1, #-1.000000000000000000e+00
    6644:	fcmp	d8, d1
    6648:	fccmp	d0, d1, #0x4, ne  // ne = any
    664c:	b.eq	6730 <PyNumber_FloorDivide@plt+0x3300>  // b.none
    6650:	stp	d10, d11, [sp, #48]
    6654:	fabs	d10, d8
    6658:	bl	33b0 <__errno_location@plt>
    665c:	str	wzr, [x0]
    6660:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    6664:	fmov	d0, x1
    6668:	mov	x19, x0
    666c:	fcmp	d10, d0
    6670:	b.ls	66d4 <PyNumber_FloorDivide@plt+0x32a4>  // b.plast
    6674:	fcmp	d8, d8
    6678:	b.vs	682c <PyNumber_FloorDivide@plt+0x33fc>
    667c:	fcmp	d9, d9
    6680:	b.vs	6834 <PyNumber_FloorDivide@plt+0x3404>
    6684:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6688:	fmov	d0, x0
    668c:	fcmp	d10, d0
    6690:	b.gt	6740 <PyNumber_FloorDivide@plt+0x3310>
    6694:	ldr	w0, [x19]
    6698:	cbz	w0, 6874 <PyNumber_FloorDivide@plt+0x3444>
    669c:	cmp	w0, #0x21
    66a0:	b.eq	6700 <PyNumber_FloorDivide@plt+0x32d0>  // b.none
    66a4:	cmp	w0, #0x22
    66a8:	b.eq	674c <PyNumber_FloorDivide@plt+0x331c>  // b.none
    66ac:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    66b0:	ldr	x0, [x0, #3992]
    66b4:	ldr	x0, [x0]
    66b8:	bl	2f50 <PyErr_SetFromErrno@plt>
    66bc:	ldp	d8, d9, [sp, #32]
    66c0:	ldp	d10, d11, [sp, #48]
    66c4:	mov	x0, #0x0                   	// #0
    66c8:	ldr	x19, [sp, #16]
    66cc:	ldp	x29, x30, [sp], #64
    66d0:	ret
    66d4:	fabs	d11, d9
    66d8:	fcmp	d11, d0
    66dc:	b.hi	6674 <PyNumber_FloorDivide@plt+0x3244>  // b.pmore
    66e0:	fcmp	d9, #0.0
    66e4:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    66e8:	fmov	d0, x1
    66ec:	b.ne	6794 <PyNumber_FloorDivide@plt+0x3364>  // b.any
    66f0:	fcmp	d8, d9
    66f4:	b.vs	685c <PyNumber_FloorDivide@plt+0x342c>
    66f8:	mov	w0, #0x21                  	// #33
    66fc:	str	w0, [x19]
    6700:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6704:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6708:	add	x1, x1, #0x998
    670c:	ldr	x0, [x0, #3992]
    6710:	ldr	x0, [x0]
    6714:	bl	3060 <PyErr_SetString@plt>
    6718:	mov	x0, #0x0                   	// #0
    671c:	ldr	x19, [sp, #16]
    6720:	ldp	d8, d9, [sp, #32]
    6724:	ldp	d10, d11, [sp, #48]
    6728:	ldp	x29, x30, [sp], #64
    672c:	ret
    6730:	bl	3220 <PyErr_Occurred@plt>
    6734:	cbz	x0, 6650 <PyNumber_FloorDivide@plt+0x3220>
    6738:	ldp	d8, d9, [sp, #32]
    673c:	b	66c4 <PyNumber_FloorDivide@plt+0x3294>
    6740:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    6744:	fmov	d0, x1
    6748:	b	66f0 <PyNumber_FloorDivide@plt+0x32c0>
    674c:	fmov	d0, d8
    6750:	fmov	d1, #1.000000000000000000e+00
    6754:	fcmpe	d10, d1
    6758:	b.pl	6770 <PyNumber_FloorDivide@plt+0x3340>  // b.nfrst
    675c:	ldr	x19, [sp, #16]
    6760:	ldp	d8, d9, [sp, #32]
    6764:	ldp	d10, d11, [sp, #48]
    6768:	ldp	x29, x30, [sp], #64
    676c:	b	3100 <PyFloat_FromDouble@plt>
    6770:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6774:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6778:	add	x1, x1, #0x9b0
    677c:	ldr	x0, [x0, #4016]
    6780:	ldr	x0, [x0]
    6784:	bl	3060 <PyErr_SetString@plt>
    6788:	ldp	d8, d9, [sp, #32]
    678c:	ldp	d10, d11, [sp, #48]
    6790:	b	66c4 <PyNumber_FloorDivide@plt+0x3294>
    6794:	fmov	d1, d11
    6798:	fmov	d0, d10
    679c:	str	d12, [sp, #24]
    67a0:	bl	3340 <fmod@plt>
    67a4:	fmov	d12, d0
    67a8:	fsub	d0, d11, d0
    67ac:	fcmpe	d12, d0
    67b0:	b.pl	6820 <PyNumber_FloorDivide@plt+0x33f0>  // b.nfrst
    67b4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    67b8:	fmov	d0, x0
    67bc:	and	v0.8b, v8.8b, v0.8b
    67c0:	eor	v0.8b, v0.8b, v12.8b
    67c4:	fcmp	d0, d0
    67c8:	b.vs	687c <PyNumber_FloorDivide@plt+0x344c>
    67cc:	fabs	d1, d0
    67d0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    67d4:	fmov	d2, x0
    67d8:	fcmp	d1, d2
    67dc:	b.le	6864 <PyNumber_FloorDivide@plt+0x3434>
    67e0:	fcmp	d10, d2
    67e4:	b.hi	6804 <PyNumber_FloorDivide@plt+0x33d4>  // b.pmore
    67e8:	fcmp	d11, d2
    67ec:	b.hi	6804 <PyNumber_FloorDivide@plt+0x33d4>  // b.pmore
    67f0:	mov	w0, #0x22                  	// #34
    67f4:	fmov	d10, d1
    67f8:	ldr	d12, [sp, #24]
    67fc:	str	w0, [x19]
    6800:	b	6750 <PyNumber_FloorDivide@plt+0x3320>
    6804:	ldr	d12, [sp, #24]
    6808:	str	wzr, [x19]
    680c:	ldr	x19, [sp, #16]
    6810:	ldp	d8, d9, [sp, #32]
    6814:	ldp	d10, d11, [sp, #48]
    6818:	ldp	x29, x30, [sp], #64
    681c:	b	3100 <PyFloat_FromDouble@plt>
    6820:	b.le	683c <PyNumber_FloorDivide@plt+0x340c>
    6824:	fneg	d12, d0
    6828:	b	67b4 <PyNumber_FloorDivide@plt+0x3384>
    682c:	fmov	d0, d8
    6830:	b	66f0 <PyNumber_FloorDivide@plt+0x32c0>
    6834:	fmov	d0, d9
    6838:	b	66f0 <PyNumber_FloorDivide@plt+0x32c0>
    683c:	fsub	d2, d10, d12
    6840:	fmov	d0, #5.000000000000000000e-01
    6844:	fmov	d1, d11
    6848:	fmul	d0, d2, d0
    684c:	bl	3340 <fmod@plt>
    6850:	fadd	d0, d0, d0
    6854:	fsub	d12, d12, d0
    6858:	b	67b4 <PyNumber_FloorDivide@plt+0x3384>
    685c:	str	wzr, [x19]
    6860:	b	675c <PyNumber_FloorDivide@plt+0x332c>
    6864:	fmov	d8, d0
    6868:	fmov	d10, d1
    686c:	ldr	d12, [sp, #24]
    6870:	b	6694 <PyNumber_FloorDivide@plt+0x3264>
    6874:	fmov	d0, d8
    6878:	b	675c <PyNumber_FloorDivide@plt+0x332c>
    687c:	ldr	d12, [sp, #24]
    6880:	b	66f0 <PyNumber_FloorDivide@plt+0x32c0>
    6884:	nop
    6888:	stp	x29, x30, [sp, #-80]!
    688c:	mov	x0, x1
    6890:	mov	x29, sp
    6894:	bl	3250 <PyFloat_AsDouble@plt>
    6898:	fmov	d1, #-1.000000000000000000e+00
    689c:	fcmp	d0, d1
    68a0:	b.eq	6b6c <PyNumber_FloorDivide@plt+0x373c>  // b.none
    68a4:	stp	d8, d9, [sp, #32]
    68a8:	fabs	d9, d0
    68ac:	fmov	d8, d0
    68b0:	str	x19, [sp, #16]
    68b4:	bl	33b0 <__errno_location@plt>
    68b8:	str	wzr, [x0]
    68bc:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    68c0:	fmov	d0, x1
    68c4:	mov	x19, x0
    68c8:	fcmp	d9, d0
    68cc:	b.ls	68f4 <PyNumber_FloorDivide@plt+0x34c4>  // b.plast
    68d0:	fcmp	d8, d8
    68d4:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    68d8:	fmov	d0, x0
    68dc:	fcsel	d8, d8, d0, vs
    68e0:	fmov	d0, d8
    68e4:	ldr	x19, [sp, #16]
    68e8:	ldp	d8, d9, [sp, #32]
    68ec:	ldp	x29, x30, [sp], #80
    68f0:	b	3100 <PyFloat_FromDouble@plt>
    68f4:	frintm	d0, d8
    68f8:	fcmp	d8, d0
    68fc:	b.eq	6d5c <PyNumber_FloorDivide@plt+0x392c>  // b.none
    6900:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6904:	ldr	d0, [x0, #3208]
    6908:	fcmpe	d9, d0
    690c:	b.mi	6d78 <PyNumber_FloorDivide@plt+0x3948>  // b.first
    6910:	fmov	d0, #5.000000000000000000e+00
    6914:	stp	d10, d11, [sp, #48]
    6918:	fcmpe	d9, d0
    691c:	b.mi	6bac <PyNumber_FloorDivide@plt+0x377c>  // b.first
    6920:	movi	d4, #0x0
    6924:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6928:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    692c:	stp	d12, d13, [sp, #64]
    6930:	ldr	d3, [x0, #3352]
    6934:	ldr	d12, [x1, #3344]
    6938:	mov	x0, #0x8a800000000         	// #9517647527936
    693c:	fdiv	d2, d4, d9
    6940:	movk	x0, #0x4183, lsl #48
    6944:	fmov	d13, x0
    6948:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    694c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6950:	fmov	d6, #1.000000000000000000e+00
    6954:	ldr	d11, [x0, #3328]
    6958:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    695c:	ldr	d1, [x1, #3256]
    6960:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6964:	ldr	d10, [x0, #3336]
    6968:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    696c:	ldr	d21, [x1, #3248]
    6970:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6974:	ldr	d31, [x0, #3312]
    6978:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    697c:	ldr	d19, [x1, #3240]
    6980:	mov	x1, #0x140000000000        	// #21990232555520
    6984:	ldr	d30, [x0, #3320]
    6988:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    698c:	movk	x1, #0x409e, lsl #48
    6990:	fmov	d18, x1
    6994:	ldr	d29, [x0, #3296]
    6998:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    699c:	ldr	d28, [x0, #3304]
    69a0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    69a4:	ldr	d27, [x0, #3280]
    69a8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    69ac:	ldr	d26, [x0, #3288]
    69b0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    69b4:	ldr	d25, [x0, #3264]
    69b8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    69bc:	ldr	d24, [x0, #3272]
    69c0:	mov	x0, #0x1f7b00000000        	// #34613141438464
    69c4:	movk	x0, #0x4144, lsl #48
    69c8:	fmov	d23, x0
    69cc:	mov	x0, #0xd0bc00000000        	// #229505872429056
    69d0:	movk	x0, #0x4115, lsl #48
    69d4:	fmov	d22, x0
    69d8:	mov	x0, #0xe78000000000        	// #254536941830144
    69dc:	movk	x0, #0x40df, lsl #48
    69e0:	fmov	d20, x0
    69e4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    69e8:	fadd	d0, d2, d4
    69ec:	fadd	d3, d2, d3
    69f0:	ldr	d17, [x0, #3232]
    69f4:	mov	x0, #0x800000000000        	// #140737488355328
    69f8:	movk	x0, #0x4050, lsl #48
    69fc:	fmov	d16, x0
    6a00:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6a04:	fdiv	d0, d0, d9
    6a08:	fdiv	d3, d3, d9
    6a0c:	ldr	d7, [x0, #3224]
    6a10:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6a14:	ldr	d5, [x0, #3216]
    6a18:	fadd	d0, d0, d13
    6a1c:	fadd	d2, d3, d12
    6a20:	ldp	d12, d13, [sp, #64]
    6a24:	fdiv	d0, d0, d9
    6a28:	fdiv	d2, d2, d9
    6a2c:	fadd	d0, d0, d11
    6a30:	fadd	d2, d2, d10
    6a34:	fdiv	d0, d0, d9
    6a38:	fdiv	d2, d2, d9
    6a3c:	fadd	d0, d0, d31
    6a40:	fadd	d2, d2, d30
    6a44:	fdiv	d0, d0, d9
    6a48:	fdiv	d2, d2, d9
    6a4c:	fadd	d0, d0, d29
    6a50:	fadd	d2, d2, d28
    6a54:	fdiv	d0, d0, d9
    6a58:	fdiv	d2, d2, d9
    6a5c:	fadd	d0, d0, d27
    6a60:	fadd	d2, d2, d26
    6a64:	fdiv	d0, d0, d9
    6a68:	fdiv	d2, d2, d9
    6a6c:	fadd	d0, d0, d25
    6a70:	fadd	d2, d2, d24
    6a74:	fdiv	d0, d0, d9
    6a78:	fdiv	d2, d2, d9
    6a7c:	fadd	d0, d0, d23
    6a80:	fadd	d1, d2, d1
    6a84:	fdiv	d0, d0, d9
    6a88:	fdiv	d1, d1, d9
    6a8c:	fadd	d0, d0, d22
    6a90:	fadd	d1, d1, d21
    6a94:	fdiv	d0, d0, d9
    6a98:	fdiv	d1, d1, d9
    6a9c:	fadd	d0, d0, d20
    6aa0:	fadd	d1, d1, d19
    6aa4:	fdiv	d0, d0, d9
    6aa8:	fdiv	d1, d1, d9
    6aac:	fadd	d0, d0, d18
    6ab0:	fadd	d1, d1, d17
    6ab4:	fdiv	d0, d0, d9
    6ab8:	fdiv	d1, d1, d9
    6abc:	fadd	d0, d0, d16
    6ac0:	fadd	d1, d1, d7
    6ac4:	fdiv	d0, d0, d9
    6ac8:	fdiv	d1, d1, d9
    6acc:	fadd	d0, d0, d6
    6ad0:	fadd	d1, d1, d5
    6ad4:	fdiv	d0, d1, d0
    6ad8:	fmov	d10, #5.000000000000000000e-01
    6adc:	bl	30d0 <log@plt>
    6ae0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6ae4:	ldr	d11, [x0, #3360]
    6ae8:	fadd	d1, d9, d11
    6aec:	fsub	d11, d0, d11
    6af0:	fsub	d0, d1, d10
    6af4:	bl	30d0 <log@plt>
    6af8:	fsub	d10, d9, d10
    6afc:	fmov	d1, #1.000000000000000000e+00
    6b00:	fcmpe	d8, #0.0
    6b04:	fsub	d8, d0, d1
    6b08:	fmul	d10, d10, d8
    6b0c:	fadd	d8, d10, d11
    6b10:	b.mi	6dd0 <PyNumber_FloorDivide@plt+0x39a0>  // b.first
    6b14:	fabs	d1, d8
    6b18:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6b1c:	fmov	d0, x0
    6b20:	fcmp	d1, d0
    6b24:	b.le	6dc0 <PyNumber_FloorDivide@plt+0x3990>
    6b28:	mov	w0, #0x22                  	// #34
    6b2c:	ldp	d10, d11, [sp, #48]
    6b30:	str	w0, [x19]
    6b34:	fmov	d0, #1.000000000000000000e+00
    6b38:	fcmpe	d1, d0
    6b3c:	b.mi	68e0 <PyNumber_FloorDivide@plt+0x34b0>  // b.first
    6b40:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6b44:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6b48:	add	x1, x1, #0x9b0
    6b4c:	ldr	x0, [x0, #4016]
    6b50:	ldr	x0, [x0]
    6b54:	bl	3060 <PyErr_SetString@plt>
    6b58:	ldr	x19, [sp, #16]
    6b5c:	ldp	d8, d9, [sp, #32]
    6b60:	mov	x0, #0x0                   	// #0
    6b64:	ldp	x29, x30, [sp], #80
    6b68:	ret
    6b6c:	bl	3220 <PyErr_Occurred@plt>
    6b70:	cbnz	x0, 6b60 <PyNumber_FloorDivide@plt+0x3730>
    6b74:	str	x19, [sp, #16]
    6b78:	bl	33b0 <__errno_location@plt>
    6b7c:	mov	x19, x0
    6b80:	str	wzr, [x0]
    6b84:	mov	w0, #0x21                  	// #33
    6b88:	str	w0, [x19]
    6b8c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6b90:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6b94:	add	x1, x1, #0x998
    6b98:	ldr	x0, [x0, #3992]
    6b9c:	ldr	x0, [x0]
    6ba0:	bl	3060 <PyErr_SetString@plt>
    6ba4:	ldr	x19, [sp, #16]
    6ba8:	b	6b60 <PyNumber_FloorDivide@plt+0x3730>
    6bac:	movi	d4, #0x0
    6bb0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6bb4:	fmov	d0, #1.000000000000000000e+00
    6bb8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6bbc:	ldr	d3, [x0, #3216]
    6bc0:	mov	x0, #0x800000000000        	// #140737488355328
    6bc4:	ldr	d2, [x1, #3224]
    6bc8:	movk	x0, #0x4050, lsl #48
    6bcc:	fmul	d1, d9, d4
    6bd0:	fmov	d5, x0
    6bd4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6bd8:	mov	x0, #0x140000000000        	// #21990232555520
    6bdc:	movk	x0, #0x409e, lsl #48
    6be0:	fmov	d29, x0
    6be4:	ldr	d28, [x1, #3232]
    6be8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6bec:	fadd	d0, d1, d0
    6bf0:	fadd	d1, d1, d3
    6bf4:	ldr	d26, [x1, #3240]
    6bf8:	mov	x0, #0xe78000000000        	// #254536941830144
    6bfc:	movk	x0, #0x40df, lsl #48
    6c00:	fmov	d27, x0
    6c04:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c08:	mov	x0, #0xd0bc00000000        	// #229505872429056
    6c0c:	fmul	d3, d1, d9
    6c10:	fmul	d0, d0, d9
    6c14:	ldr	d24, [x1, #3248]
    6c18:	movk	x0, #0x4115, lsl #48
    6c1c:	fmov	d25, x0
    6c20:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c24:	mov	x0, #0x1f7b00000000        	// #34613141438464
    6c28:	fadd	d0, d0, d5
    6c2c:	fadd	d2, d3, d2
    6c30:	ldr	d22, [x1, #3256]
    6c34:	movk	x0, #0x4144, lsl #48
    6c38:	fmov	d23, x0
    6c3c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c40:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c44:	fmul	d0, d0, d9
    6c48:	fmul	d2, d2, d9
    6c4c:	ldr	d21, [x0, #3264]
    6c50:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c54:	ldr	d5, [x1, #3344]
    6c58:	ldr	d20, [x0, #3272]
    6c5c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c60:	fadd	d0, d0, d29
    6c64:	fadd	d2, d2, d28
    6c68:	ldr	d19, [x0, #3280]
    6c6c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c70:	ldr	d1, [x0, #3288]
    6c74:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c78:	fmul	d0, d0, d9
    6c7c:	fmul	d2, d2, d9
    6c80:	ldr	d18, [x0, #3296]
    6c84:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c88:	ldr	d17, [x0, #3304]
    6c8c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6c90:	fadd	d0, d0, d27
    6c94:	fadd	d2, d2, d26
    6c98:	ldr	d16, [x0, #3312]
    6c9c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6ca0:	ldr	d11, [x0, #3320]
    6ca4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6ca8:	fmul	d0, d0, d9
    6cac:	fmul	d2, d2, d9
    6cb0:	ldr	d10, [x0, #3328]
    6cb4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6cb8:	ldr	d7, [x0, #3336]
    6cbc:	mov	x0, #0x8a800000000         	// #9517647527936
    6cc0:	fadd	d0, d0, d25
    6cc4:	fadd	d2, d2, d24
    6cc8:	movk	x0, #0x4183, lsl #48
    6ccc:	fmov	d6, x0
    6cd0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6cd4:	fmul	d0, d0, d9
    6cd8:	fmul	d2, d2, d9
    6cdc:	ldr	d3, [x0, #3352]
    6ce0:	fadd	d0, d0, d23
    6ce4:	fadd	d2, d2, d22
    6ce8:	fmul	d0, d0, d9
    6cec:	fmul	d2, d2, d9
    6cf0:	fadd	d0, d0, d21
    6cf4:	fadd	d2, d2, d20
    6cf8:	fmul	d0, d0, d9
    6cfc:	fmul	d2, d2, d9
    6d00:	fadd	d0, d0, d19
    6d04:	fadd	d1, d2, d1
    6d08:	fmul	d0, d0, d9
    6d0c:	fmul	d1, d1, d9
    6d10:	fadd	d0, d0, d18
    6d14:	fadd	d1, d1, d17
    6d18:	fmul	d0, d0, d9
    6d1c:	fmul	d1, d1, d9
    6d20:	fadd	d0, d0, d16
    6d24:	fadd	d1, d1, d11
    6d28:	fmul	d0, d0, d9
    6d2c:	fmul	d1, d1, d9
    6d30:	fadd	d0, d0, d10
    6d34:	fadd	d1, d1, d7
    6d38:	fmul	d0, d0, d9
    6d3c:	fmul	d1, d1, d9
    6d40:	fadd	d0, d0, d6
    6d44:	fadd	d1, d1, d5
    6d48:	fmul	d0, d0, d9
    6d4c:	fmul	d1, d1, d9
    6d50:	fadd	d0, d0, d4
    6d54:	fadd	d1, d1, d3
    6d58:	b	6ad4 <PyNumber_FloorDivide@plt+0x36a4>
    6d5c:	fmov	d0, #2.000000000000000000e+00
    6d60:	fcmpe	d8, d0
    6d64:	b.hi	6900 <PyNumber_FloorDivide@plt+0x34d0>  // b.pmore
    6d68:	fcmpe	d8, #0.0
    6d6c:	b.ls	6e10 <PyNumber_FloorDivide@plt+0x39e0>  // b.plast
    6d70:	movi	d8, #0x0
    6d74:	b	68e0 <PyNumber_FloorDivide@plt+0x34b0>
    6d78:	fmov	d0, d9
    6d7c:	bl	30d0 <log@plt>
    6d80:	fneg	d8, d0
    6d84:	ldr	w0, [x19]
    6d88:	cbz	w0, 68e0 <PyNumber_FloorDivide@plt+0x34b0>
    6d8c:	cmp	w0, #0x21
    6d90:	b.eq	6e08 <PyNumber_FloorDivide@plt+0x39d8>  // b.none
    6d94:	cmp	w0, #0x22
    6d98:	b.eq	6dc8 <PyNumber_FloorDivide@plt+0x3998>  // b.none
    6d9c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6da0:	ldr	x0, [x0, #3992]
    6da4:	ldr	x0, [x0]
    6da8:	bl	2f50 <PyErr_SetFromErrno@plt>
    6dac:	mov	x0, #0x0                   	// #0
    6db0:	ldr	x19, [sp, #16]
    6db4:	ldp	d8, d9, [sp, #32]
    6db8:	ldp	x29, x30, [sp], #80
    6dbc:	ret
    6dc0:	ldp	d10, d11, [sp, #48]
    6dc4:	b	6d84 <PyNumber_FloorDivide@plt+0x3954>
    6dc8:	fabs	d1, d8
    6dcc:	b	6b34 <PyNumber_FloorDivide@plt+0x3704>
    6dd0:	fmov	d0, d9
    6dd4:	bl	3618 <PyNumber_FloorDivide@plt+0x1e8>
    6dd8:	fabs	d0, d0
    6ddc:	bl	30d0 <log@plt>
    6de0:	fmov	d1, d0
    6de4:	fmov	d0, d9
    6de8:	fmov	d9, d1
    6dec:	bl	30d0 <log@plt>
    6df0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6df4:	ldr	d1, [x0, #3368]
    6df8:	fsub	d1, d1, d9
    6dfc:	fsub	d1, d1, d0
    6e00:	fsub	d8, d1, d8
    6e04:	b	6b14 <PyNumber_FloorDivide@plt+0x36e4>
    6e08:	ldp	d8, d9, [sp, #32]
    6e0c:	b	6b8c <PyNumber_FloorDivide@plt+0x375c>
    6e10:	ldp	d8, d9, [sp, #32]
    6e14:	b	6b84 <PyNumber_FloorDivide@plt+0x3754>
    6e18:	stp	x29, x30, [sp, #-32]!
    6e1c:	mov	x0, x1
    6e20:	mov	x29, sp
    6e24:	str	d8, [sp, #16]
    6e28:	bl	3250 <PyFloat_AsDouble@plt>
    6e2c:	fmov	d1, #-1.000000000000000000e+00
    6e30:	fmov	d8, d0
    6e34:	fcmp	d0, d1
    6e38:	b.eq	6e58 <PyNumber_FloorDivide@plt+0x3a28>  // b.none
    6e3c:	bl	33b0 <__errno_location@plt>
    6e40:	fmov	d0, d8
    6e44:	str	wzr, [x0]
    6e48:	bl	31c0 <erf@plt>
    6e4c:	ldr	d8, [sp, #16]
    6e50:	ldp	x29, x30, [sp], #32
    6e54:	b	3100 <PyFloat_FromDouble@plt>
    6e58:	bl	3220 <PyErr_Occurred@plt>
    6e5c:	cbz	x0, 6e3c <PyNumber_FloorDivide@plt+0x3a0c>
    6e60:	mov	x0, #0x0                   	// #0
    6e64:	ldr	d8, [sp, #16]
    6e68:	ldp	x29, x30, [sp], #32
    6e6c:	ret
    6e70:	stp	x29, x30, [sp, #-32]!
    6e74:	mov	x0, x1
    6e78:	mov	x29, sp
    6e7c:	str	d8, [sp, #24]
    6e80:	bl	3250 <PyFloat_AsDouble@plt>
    6e84:	fmov	d1, #-1.000000000000000000e+00
    6e88:	fmov	d8, d0
    6e8c:	fcmp	d0, d1
    6e90:	b.eq	6f0c <PyNumber_FloorDivide@plt+0x3adc>  // b.none
    6e94:	str	x19, [sp, #16]
    6e98:	bl	33b0 <__errno_location@plt>
    6e9c:	fmov	d0, d8
    6ea0:	mov	x19, x0
    6ea4:	str	wzr, [x0]
    6ea8:	bl	32a0 <erfc@plt>
    6eac:	ldr	w0, [x19]
    6eb0:	cbz	w0, 6efc <PyNumber_FloorDivide@plt+0x3acc>
    6eb4:	cmp	w0, #0x21
    6eb8:	b.eq	6f48 <PyNumber_FloorDivide@plt+0x3b18>  // b.none
    6ebc:	cmp	w0, #0x22
    6ec0:	b.ne	6f24 <PyNumber_FloorDivide@plt+0x3af4>  // b.any
    6ec4:	fmov	d1, #1.000000000000000000e+00
    6ec8:	fcmpe	d0, d1
    6ecc:	b.mi	6efc <PyNumber_FloorDivide@plt+0x3acc>  // b.first
    6ed0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6ed4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6ed8:	add	x1, x1, #0x9b0
    6edc:	ldr	x0, [x0, #4016]
    6ee0:	ldr	x0, [x0]
    6ee4:	bl	3060 <PyErr_SetString@plt>
    6ee8:	ldr	x19, [sp, #16]
    6eec:	mov	x0, #0x0                   	// #0
    6ef0:	ldr	d8, [sp, #24]
    6ef4:	ldp	x29, x30, [sp], #32
    6ef8:	ret
    6efc:	ldr	x19, [sp, #16]
    6f00:	ldr	d8, [sp, #24]
    6f04:	ldp	x29, x30, [sp], #32
    6f08:	b	3100 <PyFloat_FromDouble@plt>
    6f0c:	bl	3220 <PyErr_Occurred@plt>
    6f10:	cbz	x0, 6e94 <PyNumber_FloorDivide@plt+0x3a64>
    6f14:	mov	x0, #0x0                   	// #0
    6f18:	ldr	d8, [sp, #24]
    6f1c:	ldp	x29, x30, [sp], #32
    6f20:	ret
    6f24:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6f28:	ldr	x0, [x0, #3992]
    6f2c:	ldr	x0, [x0]
    6f30:	bl	2f50 <PyErr_SetFromErrno@plt>
    6f34:	mov	x0, #0x0                   	// #0
    6f38:	ldr	d8, [sp, #24]
    6f3c:	ldr	x19, [sp, #16]
    6f40:	ldp	x29, x30, [sp], #32
    6f44:	ret
    6f48:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    6f4c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6f50:	add	x1, x1, #0x998
    6f54:	ldr	x0, [x0, #3992]
    6f58:	ldr	x0, [x0]
    6f5c:	bl	3060 <PyErr_SetString@plt>
    6f60:	ldr	x19, [sp, #16]
    6f64:	b	6eec <PyNumber_FloorDivide@plt+0x3abc>
    6f68:	stp	x29, x30, [sp, #-48]!
    6f6c:	cmp	x2, #0x2
    6f70:	mov	x29, sp
    6f74:	str	x19, [sp, #16]
    6f78:	mov	x19, x1
    6f7c:	b.eq	6f9c <PyNumber_FloorDivide@plt+0x3b6c>  // b.none
    6f80:	mov	x1, x2
    6f84:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    6f88:	mov	x3, #0x2                   	// #2
    6f8c:	add	x0, x0, #0x9d8
    6f90:	mov	x2, x3
    6f94:	bl	31d0 <_PyArg_CheckPositional@plt>
    6f98:	cbz	w0, 7060 <PyNumber_FloorDivide@plt+0x3c30>
    6f9c:	ldr	x0, [x19]
    6fa0:	stp	d8, d9, [sp, #32]
    6fa4:	bl	3250 <PyFloat_AsDouble@plt>
    6fa8:	fmov	d8, d0
    6fac:	ldr	x0, [x19, #8]
    6fb0:	bl	3250 <PyFloat_AsDouble@plt>
    6fb4:	fmov	d9, d0
    6fb8:	fmov	d1, #-1.000000000000000000e+00
    6fbc:	fcmp	d8, d1
    6fc0:	fccmp	d0, d1, #0x4, ne  // ne = any
    6fc4:	b.eq	7054 <PyNumber_FloorDivide@plt+0x3c24>  // b.none
    6fc8:	bl	33b0 <__errno_location@plt>
    6fcc:	str	wzr, [x0]
    6fd0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    6fd4:	fmov	d0, x1
    6fd8:	bsl	v0.8b, v9.8b, v8.8b
    6fdc:	fcmp	d0, d0
    6fe0:	b.vs	7070 <PyNumber_FloorDivide@plt+0x3c40>
    6fe4:	fabs	d2, d0
    6fe8:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    6fec:	fmov	d1, x1
    6ff0:	fcmp	d2, d1
    6ff4:	b.le	7044 <PyNumber_FloorDivide@plt+0x3c14>
    6ff8:	fabs	d8, d8
    6ffc:	fcmp	d8, d1
    7000:	b.hi	7044 <PyNumber_FloorDivide@plt+0x3c14>  // b.pmore
    7004:	fabs	d9, d9
    7008:	fcmp	d9, d1
    700c:	b.hi	7044 <PyNumber_FloorDivide@plt+0x3c14>  // b.pmore
    7010:	fmov	d1, #1.000000000000000000e+00
    7014:	mov	w1, #0x22                  	// #34
    7018:	str	w1, [x0]
    701c:	fcmpe	d2, d1
    7020:	b.mi	7044 <PyNumber_FloorDivide@plt+0x3c14>  // b.first
    7024:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    7028:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    702c:	add	x1, x1, #0x9b0
    7030:	ldr	x0, [x0, #4016]
    7034:	ldr	x0, [x0]
    7038:	bl	3060 <PyErr_SetString@plt>
    703c:	ldp	d8, d9, [sp, #32]
    7040:	b	7060 <PyNumber_FloorDivide@plt+0x3c30>
    7044:	ldr	x19, [sp, #16]
    7048:	ldp	d8, d9, [sp, #32]
    704c:	ldp	x29, x30, [sp], #48
    7050:	b	3100 <PyFloat_FromDouble@plt>
    7054:	bl	3220 <PyErr_Occurred@plt>
    7058:	cbz	x0, 6fc8 <PyNumber_FloorDivide@plt+0x3b98>
    705c:	ldp	d8, d9, [sp, #32]
    7060:	mov	x0, #0x0                   	// #0
    7064:	ldr	x19, [sp, #16]
    7068:	ldp	x29, x30, [sp], #48
    706c:	ret
    7070:	fcmp	d8, d9
    7074:	b.vs	7044 <PyNumber_FloorDivide@plt+0x3c14>
    7078:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    707c:	mov	w1, #0x21                  	// #33
    7080:	str	w1, [x0]
    7084:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7088:	ldr	x0, [x2, #3992]
    708c:	add	x1, x1, #0x998
    7090:	ldr	x0, [x0]
    7094:	bl	3060 <PyErr_SetString@plt>
    7098:	b	705c <PyNumber_FloorDivide@plt+0x3c2c>
    709c:	nop
    70a0:	stp	x29, x30, [sp, #-64]!
    70a4:	cmp	x2, #0x2
    70a8:	mov	x29, sp
    70ac:	stp	x19, x20, [sp, #16]
    70b0:	mov	x19, x1
    70b4:	b.ne	71c0 <PyNumber_FloorDivide@plt+0x3d90>  // b.any
    70b8:	ldr	x0, [x19]
    70bc:	adrp	x20, 1e000 <_Py_log1p@@Base+0x13908>
    70c0:	stp	d8, d9, [sp, #32]
    70c4:	ldr	x1, [x20, #3960]
    70c8:	ldr	x2, [x0, #8]
    70cc:	cmp	x2, x1
    70d0:	b.eq	7108 <PyNumber_FloorDivide@plt+0x3cd8>  // b.none
    70d4:	bl	3250 <PyFloat_AsDouble@plt>
    70d8:	fmov	d9, d0
    70dc:	fmov	d1, #-1.000000000000000000e+00
    70e0:	fcmp	d0, d1
    70e4:	b.eq	7218 <PyNumber_FloorDivide@plt+0x3de8>  // b.none
    70e8:	ldr	x0, [x19, #8]
    70ec:	str	d10, [sp, #48]
    70f0:	ldr	x20, [x20, #3960]
    70f4:	ldr	x1, [x0, #8]
    70f8:	cmp	x1, x20
    70fc:	b.ne	7124 <PyNumber_FloorDivide@plt+0x3cf4>  // b.any
    7100:	ldr	d8, [x0, #16]
    7104:	b	7138 <PyNumber_FloorDivide@plt+0x3d08>
    7108:	ldr	d9, [x0, #16]
    710c:	ldr	x0, [x19, #8]
    7110:	str	d10, [sp, #48]
    7114:	ldr	x20, [x20, #3960]
    7118:	ldr	x1, [x0, #8]
    711c:	cmp	x1, x20
    7120:	b.eq	7100 <PyNumber_FloorDivide@plt+0x3cd0>  // b.none
    7124:	bl	3250 <PyFloat_AsDouble@plt>
    7128:	fmov	d8, d0
    712c:	fmov	d1, #-1.000000000000000000e+00
    7130:	fcmp	d0, d1
    7134:	b.eq	72dc <PyNumber_FloorDivide@plt+0x3eac>  // b.none
    7138:	fabs	d10, d9
    713c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7140:	fmov	d0, x0
    7144:	fcmp	d10, d0
    7148:	b.hi	7158 <PyNumber_FloorDivide@plt+0x3d28>  // b.pmore
    714c:	fabs	d1, d8
    7150:	fcmp	d1, d0
    7154:	b.ls	7318 <PyNumber_FloorDivide@plt+0x3ee8>  // b.plast
    7158:	bl	33b0 <__errno_location@plt>
    715c:	fcmp	d9, d9
    7160:	str	wzr, [x0]
    7164:	mov	x19, x0
    7168:	b.vs	73ec <PyNumber_FloorDivide@plt+0x3fbc>
    716c:	fcmp	d8, d8
    7170:	b.vs	73fc <PyNumber_FloorDivide@plt+0x3fcc>
    7174:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7178:	fmov	d1, x0
    717c:	fabs	d0, d8
    7180:	fcmp	d10, d1
    7184:	b.le	71ec <PyNumber_FloorDivide@plt+0x3dbc>
    7188:	fcmp	d0, d1
    718c:	b.ls	7244 <PyNumber_FloorDivide@plt+0x3e14>  // b.plast
    7190:	fcmpe	d8, #0.0
    7194:	b.gt	71a8 <PyNumber_FloorDivide@plt+0x3d78>
    7198:	fcmp	d8, #0.0
    719c:	movi	d10, #0x0
    71a0:	fmov	d0, #1.000000000000000000e+00
    71a4:	fcsel	d10, d10, d0, ne  // ne = any
    71a8:	fmov	d0, d10
    71ac:	ldr	d10, [sp, #48]
    71b0:	ldp	x19, x20, [sp, #16]
    71b4:	ldp	d8, d9, [sp, #32]
    71b8:	ldp	x29, x30, [sp], #64
    71bc:	b	3100 <PyFloat_FromDouble@plt>
    71c0:	mov	x1, x2
    71c4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    71c8:	mov	x3, #0x2                   	// #2
    71cc:	add	x0, x0, #0x9e8
    71d0:	mov	x2, x3
    71d4:	bl	31d0 <_PyArg_CheckPositional@plt>
    71d8:	cbnz	w0, 70b8 <PyNumber_FloorDivide@plt+0x3c88>
    71dc:	mov	x0, #0x0                   	// #0
    71e0:	ldp	x19, x20, [sp, #16]
    71e4:	ldp	x29, x30, [sp], #64
    71e8:	ret
    71ec:	fcmp	d0, d1
    71f0:	b.le	7228 <PyNumber_FloorDivide@plt+0x3df8>
    71f4:	fmov	d0, #1.000000000000000000e+00
    71f8:	fcmp	d10, d0
    71fc:	b.eq	71a8 <PyNumber_FloorDivide@plt+0x3d78>  // b.none
    7200:	fcmpe	d8, #0.0
    7204:	b.le	739c <PyNumber_FloorDivide@plt+0x3f6c>
    7208:	fcmpe	d10, d0
    720c:	b.le	739c <PyNumber_FloorDivide@plt+0x3f6c>
    7210:	fmov	d10, d8
    7214:	b	71a8 <PyNumber_FloorDivide@plt+0x3d78>
    7218:	bl	3220 <PyErr_Occurred@plt>
    721c:	cbz	x0, 70e8 <PyNumber_FloorDivide@plt+0x3cb8>
    7220:	ldp	d8, d9, [sp, #32]
    7224:	b	71dc <PyNumber_FloorDivide@plt+0x3dac>
    7228:	movi	d10, #0x0
    722c:	ldp	x19, x20, [sp, #16]
    7230:	ldp	d8, d9, [sp, #32]
    7234:	fmov	d0, d10
    7238:	ldr	d10, [sp, #48]
    723c:	ldp	x29, x30, [sp], #64
    7240:	b	3100 <PyFloat_FromDouble@plt>
    7244:	fmov	d1, #2.000000000000000000e+00
    7248:	bl	3340 <fmod@plt>
    724c:	fmov	d1, #1.000000000000000000e+00
    7250:	fcmp	d0, d1
    7254:	b.ne	740c <PyNumber_FloorDivide@plt+0x3fdc>  // b.any
    7258:	fcmpe	d8, #0.0
    725c:	fmov	d10, d9
    7260:	ldr	w0, [x19]
    7264:	b.gt	7288 <PyNumber_FloorDivide@plt+0x3e58>
    7268:	fcmp	d8, #0.0
    726c:	fmov	d10, d0
    7270:	b.eq	7288 <PyNumber_FloorDivide@plt+0x3e58>  // b.none
    7274:	movi	d10, #0x0
    7278:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    727c:	fmov	d0, x1
    7280:	bit	v10.8b, v9.8b, v0.8b
    7284:	nop
    7288:	cbz	w0, 71a8 <PyNumber_FloorDivide@plt+0x3d78>
    728c:	cmp	w0, #0x21
    7290:	b.eq	73c8 <PyNumber_FloorDivide@plt+0x3f98>  // b.none
    7294:	cmp	w0, #0x22
    7298:	b.ne	7374 <PyNumber_FloorDivide@plt+0x3f44>  // b.any
    729c:	fabs	d0, d10
    72a0:	fmov	d1, #1.000000000000000000e+00
    72a4:	fcmpe	d0, d1
    72a8:	b.mi	71a8 <PyNumber_FloorDivide@plt+0x3d78>  // b.first
    72ac:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    72b0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    72b4:	add	x1, x1, #0x9b0
    72b8:	ldr	x0, [x0, #4016]
    72bc:	ldr	x0, [x0]
    72c0:	bl	3060 <PyErr_SetString@plt>
    72c4:	mov	x0, #0x0                   	// #0
    72c8:	ldr	d10, [sp, #48]
    72cc:	ldp	x19, x20, [sp, #16]
    72d0:	ldp	d8, d9, [sp, #32]
    72d4:	ldp	x29, x30, [sp], #64
    72d8:	ret
    72dc:	bl	3220 <PyErr_Occurred@plt>
    72e0:	cbnz	x0, 72c4 <PyNumber_FloorDivide@plt+0x3e94>
    72e4:	fabs	d10, d9
    72e8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    72ec:	fmov	d0, x0
    72f0:	fcmp	d10, d0
    72f4:	b.ls	7318 <PyNumber_FloorDivide@plt+0x3ee8>  // b.plast
    72f8:	bl	33b0 <__errno_location@plt>
    72fc:	fcmp	d9, d9
    7300:	str	wzr, [x0]
    7304:	mov	x19, x0
    7308:	b.vc	716c <PyNumber_FloorDivide@plt+0x3d3c>
    730c:	nop
    7310:	fmov	d10, d9
    7314:	b	71a8 <PyNumber_FloorDivide@plt+0x3d78>
    7318:	bl	33b0 <__errno_location@plt>
    731c:	fmov	d1, d8
    7320:	fmov	d0, d9
    7324:	str	wzr, [x0]
    7328:	mov	x19, x0
    732c:	bl	2fc0 <pow@plt>
    7330:	fmov	d10, d0
    7334:	fabs	d0, d0
    7338:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    733c:	fmov	d1, x0
    7340:	fcmp	d0, d1
    7344:	b.ls	736c <PyNumber_FloorDivide@plt+0x3f3c>  // b.plast
    7348:	fcmp	d10, d10
    734c:	b.vs	73c0 <PyNumber_FloorDivide@plt+0x3f90>
    7350:	fcmp	d0, d1
    7354:	b.le	736c <PyNumber_FloorDivide@plt+0x3f3c>
    7358:	fcmp	d9, #0.0
    735c:	b.eq	73c0 <PyNumber_FloorDivide@plt+0x3f90>  // b.none
    7360:	mov	w0, #0x22                  	// #34
    7364:	str	w0, [x19]
    7368:	b	72a0 <PyNumber_FloorDivide@plt+0x3e70>
    736c:	ldr	w0, [x19]
    7370:	b	7288 <PyNumber_FloorDivide@plt+0x3e58>
    7374:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    7378:	ldr	x0, [x0, #3992]
    737c:	ldr	x0, [x0]
    7380:	bl	2f50 <PyErr_SetFromErrno@plt>
    7384:	mov	x0, #0x0                   	// #0
    7388:	ldr	d10, [sp, #48]
    738c:	ldp	x19, x20, [sp, #16]
    7390:	ldp	d8, d9, [sp, #32]
    7394:	ldp	x29, x30, [sp], #64
    7398:	ret
    739c:	fcmpe	d8, #0.0
    73a0:	b.pl	7228 <PyNumber_FloorDivide@plt+0x3df8>  // b.nfrst
    73a4:	fmov	d0, #1.000000000000000000e+00
    73a8:	fcmpe	d10, d0
    73ac:	b.pl	7228 <PyNumber_FloorDivide@plt+0x3df8>  // b.nfrst
    73b0:	fcmp	d9, #0.0
    73b4:	fneg	d10, d8
    73b8:	b.ne	71a8 <PyNumber_FloorDivide@plt+0x3d78>  // b.any
    73bc:	nop
    73c0:	mov	w0, #0x21                  	// #33
    73c4:	str	w0, [x19]
    73c8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    73cc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    73d0:	add	x1, x1, #0x998
    73d4:	ldr	x0, [x0, #3992]
    73d8:	ldr	x0, [x0]
    73dc:	bl	3060 <PyErr_SetString@plt>
    73e0:	ldp	d8, d9, [sp, #32]
    73e4:	ldr	d10, [sp, #48]
    73e8:	b	71dc <PyNumber_FloorDivide@plt+0x3dac>
    73ec:	fcmp	d8, #0.0
    73f0:	fmov	d10, #1.000000000000000000e+00
    73f4:	b.eq	71a8 <PyNumber_FloorDivide@plt+0x3d78>  // b.none
    73f8:	b	7310 <PyNumber_FloorDivide@plt+0x3ee0>
    73fc:	fmov	d0, #1.000000000000000000e+00
    7400:	fcmp	d9, d0
    7404:	fcsel	d10, d8, d9, ne  // ne = any
    7408:	b	71a8 <PyNumber_FloorDivide@plt+0x3d78>
    740c:	fcmpe	d8, #0.0
    7410:	ldr	w0, [x19]
    7414:	b.gt	7288 <PyNumber_FloorDivide@plt+0x3e58>
    7418:	fcmp	d8, #0.0
    741c:	movi	d10, #0x0
    7420:	fcsel	d10, d1, d10, eq  // eq = none
    7424:	b	7288 <PyNumber_FloorDivide@plt+0x3e58>
    7428:	stp	x29, x30, [sp, #-48]!
    742c:	cmp	x2, #0x2
    7430:	mov	x29, sp
    7434:	stp	x19, x20, [sp, #16]
    7438:	mov	x19, x1
    743c:	b.ne	7560 <PyNumber_FloorDivide@plt+0x4130>  // b.any
    7440:	ldr	x0, [x19]
    7444:	adrp	x20, 1e000 <_Py_log1p@@Base+0x13908>
    7448:	stp	d8, d9, [sp, #32]
    744c:	ldr	x1, [x20, #3960]
    7450:	ldr	x2, [x0, #8]
    7454:	cmp	x2, x1
    7458:	b.eq	752c <PyNumber_FloorDivide@plt+0x40fc>  // b.none
    745c:	bl	3250 <PyFloat_AsDouble@plt>
    7460:	fmov	d8, d0
    7464:	fmov	d1, #-1.000000000000000000e+00
    7468:	fcmp	d0, d1
    746c:	b.eq	75a4 <PyNumber_FloorDivide@plt+0x4174>  // b.none
    7470:	ldr	x0, [x19, #8]
    7474:	ldr	x20, [x20, #3960]
    7478:	ldr	x1, [x0, #8]
    747c:	cmp	x1, x20
    7480:	b.eq	7544 <PyNumber_FloorDivide@plt+0x4114>  // b.none
    7484:	bl	3250 <PyFloat_AsDouble@plt>
    7488:	fmov	d9, d0
    748c:	fmov	d1, #-1.000000000000000000e+00
    7490:	fcmp	d0, d1
    7494:	b.eq	75c0 <PyNumber_FloorDivide@plt+0x4190>  // b.none
    7498:	fabs	d1, d9
    749c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    74a0:	fmov	d0, x0
    74a4:	fcmp	d1, d0
    74a8:	b.le	74b8 <PyNumber_FloorDivide@plt+0x4088>
    74ac:	fabs	d1, d8
    74b0:	fcmp	d1, d0
    74b4:	b.ls	75d0 <PyNumber_FloorDivide@plt+0x41a0>  // b.plast
    74b8:	bl	33b0 <__errno_location@plt>
    74bc:	fmov	d1, d9
    74c0:	fmov	d0, d8
    74c4:	str	wzr, [x0]
    74c8:	mov	x19, x0
    74cc:	bl	3340 <fmod@plt>
    74d0:	fcmp	d0, d0
    74d4:	b.vs	75e4 <PyNumber_FloorDivide@plt+0x41b4>
    74d8:	ldr	w0, [x19]
    74dc:	cbz	w0, 7550 <PyNumber_FloorDivide@plt+0x4120>
    74e0:	cmp	w0, #0x21
    74e4:	b.eq	75f4 <PyNumber_FloorDivide@plt+0x41c4>  // b.none
    74e8:	cmp	w0, #0x22
    74ec:	b.ne	7580 <PyNumber_FloorDivide@plt+0x4150>  // b.any
    74f0:	fabs	d2, d0
    74f4:	fmov	d1, #1.000000000000000000e+00
    74f8:	fcmpe	d2, d1
    74fc:	b.mi	7550 <PyNumber_FloorDivide@plt+0x4120>  // b.first
    7500:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    7504:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7508:	add	x1, x1, #0x9b0
    750c:	ldr	x0, [x0, #4016]
    7510:	ldr	x0, [x0]
    7514:	bl	3060 <PyErr_SetString@plt>
    7518:	ldp	d8, d9, [sp, #32]
    751c:	mov	x0, #0x0                   	// #0
    7520:	ldp	x19, x20, [sp, #16]
    7524:	ldp	x29, x30, [sp], #48
    7528:	ret
    752c:	ldr	d8, [x0, #16]
    7530:	ldr	x0, [x19, #8]
    7534:	ldr	x20, [x20, #3960]
    7538:	ldr	x1, [x0, #8]
    753c:	cmp	x1, x20
    7540:	b.ne	7484 <PyNumber_FloorDivide@plt+0x4054>  // b.any
    7544:	ldr	d9, [x0, #16]
    7548:	b	7498 <PyNumber_FloorDivide@plt+0x4068>
    754c:	str	wzr, [x19]
    7550:	ldp	x19, x20, [sp, #16]
    7554:	ldp	d8, d9, [sp, #32]
    7558:	ldp	x29, x30, [sp], #48
    755c:	b	3100 <PyFloat_FromDouble@plt>
    7560:	mov	x1, x2
    7564:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7568:	mov	x3, #0x2                   	// #2
    756c:	add	x0, x0, #0x9f0
    7570:	mov	x2, x3
    7574:	bl	31d0 <_PyArg_CheckPositional@plt>
    7578:	cbnz	w0, 7440 <PyNumber_FloorDivide@plt+0x4010>
    757c:	b	751c <PyNumber_FloorDivide@plt+0x40ec>
    7580:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    7584:	ldr	x0, [x0, #3992]
    7588:	ldr	x0, [x0]
    758c:	bl	2f50 <PyErr_SetFromErrno@plt>
    7590:	mov	x0, #0x0                   	// #0
    7594:	ldp	x19, x20, [sp, #16]
    7598:	ldp	d8, d9, [sp, #32]
    759c:	ldp	x29, x30, [sp], #48
    75a0:	ret
    75a4:	bl	3220 <PyErr_Occurred@plt>
    75a8:	cbz	x0, 7470 <PyNumber_FloorDivide@plt+0x4040>
    75ac:	ldp	d8, d9, [sp, #32]
    75b0:	mov	x0, #0x0                   	// #0
    75b4:	ldp	x19, x20, [sp, #16]
    75b8:	ldp	x29, x30, [sp], #48
    75bc:	ret
    75c0:	bl	3220 <PyErr_Occurred@plt>
    75c4:	cbz	x0, 74b8 <PyNumber_FloorDivide@plt+0x4088>
    75c8:	ldp	d8, d9, [sp, #32]
    75cc:	b	75b0 <PyNumber_FloorDivide@plt+0x4180>
    75d0:	fmov	d0, d8
    75d4:	ldp	x19, x20, [sp, #16]
    75d8:	ldp	d8, d9, [sp, #32]
    75dc:	ldp	x29, x30, [sp], #48
    75e0:	b	3100 <PyFloat_FromDouble@plt>
    75e4:	fcmp	d8, d9
    75e8:	b.vs	754c <PyNumber_FloorDivide@plt+0x411c>
    75ec:	mov	w0, #0x21                  	// #33
    75f0:	str	w0, [x19]
    75f4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    75f8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    75fc:	add	x1, x1, #0x998
    7600:	ldr	x0, [x0, #3992]
    7604:	ldr	x0, [x0]
    7608:	bl	3060 <PyErr_SetString@plt>
    760c:	ldp	d8, d9, [sp, #32]
    7610:	b	751c <PyNumber_FloorDivide@plt+0x40ec>
    7614:	nop
    7618:	stp	x29, x30, [sp, #-80]!
    761c:	cmp	x2, #0x2
    7620:	mov	x29, sp
    7624:	stp	x19, x20, [sp, #16]
    7628:	mov	x19, x1
    762c:	b.ne	7720 <PyNumber_FloorDivide@plt+0x42f0>  // b.any
    7630:	ldr	x0, [x19]
    7634:	adrp	x1, 1e000 <_Py_log1p@@Base+0x13908>
    7638:	stp	d8, d9, [sp, #48]
    763c:	ldr	x1, [x1, #3960]
    7640:	ldr	x2, [x0, #8]
    7644:	cmp	x2, x1
    7648:	b.eq	76e0 <PyNumber_FloorDivide@plt+0x42b0>  // b.none
    764c:	bl	3250 <PyFloat_AsDouble@plt>
    7650:	fmov	d8, d0
    7654:	fmov	d1, #-1.000000000000000000e+00
    7658:	fcmp	d0, d1
    765c:	b.eq	7804 <PyNumber_FloorDivide@plt+0x43d4>  // b.none
    7660:	ldr	x0, [x19, #8]
    7664:	ldr	x1, [x0, #8]
    7668:	ldr	x1, [x1, #168]
    766c:	tbz	w1, #24, 76f4 <PyNumber_FloorDivide@plt+0x42c4>
    7670:	add	x1, sp, #0x4c
    7674:	bl	31e0 <PyLong_AsLongAndOverflow@plt>
    7678:	mov	x19, x0
    767c:	cmn	x0, #0x1
    7680:	b.eq	7818 <PyNumber_FloorDivide@plt+0x43e8>  // b.none
    7684:	str	x21, [sp, #32]
    7688:	bl	33b0 <__errno_location@plt>
    768c:	ldr	w21, [sp, #76]
    7690:	mov	x20, x0
    7694:	cmp	w21, #0x0
    7698:	cbz	w21, 774c <PyNumber_FloorDivide@plt+0x431c>
    769c:	b.lt	77d0 <PyNumber_FloorDivide@plt+0x43a0>  // b.tstop
    76a0:	fcmp	d8, #0.0
    76a4:	b.eq	76c0 <PyNumber_FloorDivide@plt+0x4290>  // b.none
    76a8:	fabs	d1, d8
    76ac:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    76b0:	fmov	d0, x0
    76b4:	fcmp	d1, d0
    76b8:	b.ls	7774 <PyNumber_FloorDivide@plt+0x4344>  // b.plast
    76bc:	nop
    76c0:	str	wzr, [x20]
    76c4:	fmov	d0, d8
    76c8:	bl	3100 <PyFloat_FromDouble@plt>
    76cc:	ldr	x21, [sp, #32]
    76d0:	ldp	x19, x20, [sp, #16]
    76d4:	ldp	d8, d9, [sp, #48]
    76d8:	ldp	x29, x30, [sp], #80
    76dc:	ret
    76e0:	ldr	d8, [x0, #16]
    76e4:	ldr	x0, [x19, #8]
    76e8:	ldr	x1, [x0, #8]
    76ec:	ldr	x1, [x1, #168]
    76f0:	tbnz	w1, #24, 7670 <PyNumber_FloorDivide@plt+0x4240>
    76f4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    76f8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    76fc:	add	x1, x1, #0xa00
    7700:	ldr	x0, [x0, #4000]
    7704:	ldr	x0, [x0]
    7708:	bl	3060 <PyErr_SetString@plt>
    770c:	mov	x0, #0x0                   	// #0
    7710:	ldp	x19, x20, [sp, #16]
    7714:	ldp	d8, d9, [sp, #48]
    7718:	ldp	x29, x30, [sp], #80
    771c:	ret
    7720:	mov	x1, x2
    7724:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7728:	mov	x3, #0x2                   	// #2
    772c:	add	x0, x0, #0x9f8
    7730:	mov	x2, x3
    7734:	bl	31d0 <_PyArg_CheckPositional@plt>
    7738:	cbnz	w0, 7630 <PyNumber_FloorDivide@plt+0x4200>
    773c:	mov	x0, #0x0                   	// #0
    7740:	ldp	x19, x20, [sp, #16]
    7744:	ldp	x29, x30, [sp], #80
    7748:	ret
    774c:	fcmp	d8, #0.0
    7750:	b.eq	76c0 <PyNumber_FloorDivide@plt+0x4290>  // b.none
    7754:	fabs	d0, d8
    7758:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    775c:	fmov	d9, x0
    7760:	fcmp	d0, d9
    7764:	b.hi	76c0 <PyNumber_FloorDivide@plt+0x4290>  // b.pmore
    7768:	mov	x0, #0x7fffffff            	// #2147483647
    776c:	cmp	x19, x0
    7770:	b.le	782c <PyNumber_FloorDivide@plt+0x43fc>
    7774:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    7778:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    777c:	fmov	d0, x0
    7780:	fmov	d1, x1
    7784:	mov	w0, #0x22                  	// #34
    7788:	str	w0, [x20]
    778c:	bif	v8.8b, v0.8b, v1.8b
    7790:	fabs	d0, d8
    7794:	fmov	d1, #1.000000000000000000e+00
    7798:	fcmpe	d0, d1
    779c:	b.mi	76c4 <PyNumber_FloorDivide@plt+0x4294>  // b.first
    77a0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    77a4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    77a8:	add	x1, x1, #0x9b0
    77ac:	ldr	x0, [x0, #4016]
    77b0:	ldr	x0, [x0]
    77b4:	bl	3060 <PyErr_SetString@plt>
    77b8:	mov	x0, #0x0                   	// #0
    77bc:	ldp	x19, x20, [sp, #16]
    77c0:	ldr	x21, [sp, #32]
    77c4:	ldp	d8, d9, [sp, #48]
    77c8:	ldp	x29, x30, [sp], #80
    77cc:	ret
    77d0:	fcmp	d8, #0.0
    77d4:	b.eq	76c0 <PyNumber_FloorDivide@plt+0x4290>  // b.none
    77d8:	fabs	d1, d8
    77dc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    77e0:	fmov	d0, x0
    77e4:	fcmp	d1, d0
    77e8:	b.hi	76c0 <PyNumber_FloorDivide@plt+0x4290>  // b.pmore
    77ec:	movi	d0, #0x0
    77f0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    77f4:	fmov	d1, x0
    77f8:	str	wzr, [x20]
    77fc:	bif	v8.8b, v0.8b, v1.8b
    7800:	b	76c4 <PyNumber_FloorDivide@plt+0x4294>
    7804:	bl	3220 <PyErr_Occurred@plt>
    7808:	cbz	x0, 7660 <PyNumber_FloorDivide@plt+0x4230>
    780c:	mov	x0, #0x0                   	// #0
    7810:	ldp	d8, d9, [sp, #48]
    7814:	b	7740 <PyNumber_FloorDivide@plt+0x4310>
    7818:	bl	3220 <PyErr_Occurred@plt>
    781c:	mov	x1, x0
    7820:	mov	x0, #0x0                   	// #0
    7824:	cbz	x1, 7684 <PyNumber_FloorDivide@plt+0x4254>
    7828:	b	76d0 <PyNumber_FloorDivide@plt+0x42a0>
    782c:	mov	x0, #0xffffffff80000000    	// #-2147483648
    7830:	cmp	x19, x0
    7834:	b.lt	77ec <PyNumber_FloorDivide@plt+0x43bc>  // b.tstop
    7838:	fmov	d0, d8
    783c:	str	wzr, [x20]
    7840:	mov	w0, w19
    7844:	bl	2f40 <ldexp@plt>
    7848:	fmov	d8, d0
    784c:	fabs	d0, d0
    7850:	fcmp	d0, d9
    7854:	b.gt	78ac <PyNumber_FloorDivide@plt+0x447c>
    7858:	ldr	w0, [x20]
    785c:	cbz	w0, 76c4 <PyNumber_FloorDivide@plt+0x4294>
    7860:	cmp	w0, #0x21
    7864:	b.eq	7898 <PyNumber_FloorDivide@plt+0x4468>  // b.none
    7868:	cmp	w0, #0x22
    786c:	b.eq	7794 <PyNumber_FloorDivide@plt+0x4364>  // b.none
    7870:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    7874:	ldr	x0, [x0, #3992]
    7878:	ldr	x0, [x0]
    787c:	bl	2f50 <PyErr_SetFromErrno@plt>
    7880:	mov	x0, #0x0                   	// #0
    7884:	ldp	x19, x20, [sp, #16]
    7888:	ldr	x21, [sp, #32]
    788c:	ldp	d8, d9, [sp, #48]
    7890:	ldp	x29, x30, [sp], #80
    7894:	ret
    7898:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    789c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    78a0:	add	x1, x1, #0x998
    78a4:	ldr	x0, [x0, #3992]
    78a8:	b	77b0 <PyNumber_FloorDivide@plt+0x4380>
    78ac:	mov	w0, #0x22                  	// #34
    78b0:	str	w0, [x20]
    78b4:	b	7794 <PyNumber_FloorDivide@plt+0x4364>
    78b8:	stp	x29, x30, [sp, #-80]!
    78bc:	mov	x0, x1
    78c0:	mov	x29, sp
    78c4:	bl	3250 <PyFloat_AsDouble@plt>
    78c8:	fmov	d1, #-1.000000000000000000e+00
    78cc:	fcmp	d0, d1
    78d0:	b.eq	79c0 <PyNumber_FloorDivide@plt+0x4590>  // b.none
    78d4:	stp	d8, d9, [sp, #32]
    78d8:	fabs	d9, d0
    78dc:	fmov	d8, d0
    78e0:	str	x19, [sp, #16]
    78e4:	bl	33b0 <__errno_location@plt>
    78e8:	str	wzr, [x0]
    78ec:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    78f0:	fmov	d0, x1
    78f4:	mov	x19, x0
    78f8:	fcmp	d9, d0
    78fc:	b.ls	7924 <PyNumber_FloorDivide@plt+0x44f4>  // b.plast
    7900:	fcmp	d8, d8
    7904:	b.vs	7910 <PyNumber_FloorDivide@plt+0x44e0>
    7908:	fcmpe	d8, #0.0
    790c:	b.le	792c <PyNumber_FloorDivide@plt+0x44fc>
    7910:	fmov	d0, d8
    7914:	ldr	x19, [sp, #16]
    7918:	ldp	d8, d9, [sp, #32]
    791c:	ldp	x29, x30, [sp], #80
    7920:	b	3100 <PyFloat_FromDouble@plt>
    7924:	fcmp	d8, #0.0
    7928:	b.ne	7958 <PyNumber_FloorDivide@plt+0x4528>  // b.any
    792c:	mov	w0, #0x21                  	// #33
    7930:	ldp	d8, d9, [sp, #32]
    7934:	str	w0, [x19]
    7938:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    793c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7940:	add	x1, x1, #0x998
    7944:	ldr	x0, [x0, #3992]
    7948:	ldr	x0, [x0]
    794c:	bl	3060 <PyErr_SetString@plt>
    7950:	ldr	x19, [sp, #16]
    7954:	b	79b4 <PyNumber_FloorDivide@plt+0x4584>
    7958:	frintm	d0, d8
    795c:	fcmp	d8, d0
    7960:	b.eq	79e4 <PyNumber_FloorDivide@plt+0x45b4>  // b.none
    7964:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7968:	ldr	d0, [x0, #3208]
    796c:	fcmpe	d9, d0
    7970:	b.mi	7a14 <PyNumber_FloorDivide@plt+0x45e4>  // b.first
    7974:	mov	x0, #0x4069000000000000    	// #4641240890982006784
    7978:	fmov	d0, x0
    797c:	fcmpe	d9, d0
    7980:	b.le	7a58 <PyNumber_FloorDivide@plt+0x4628>
    7984:	fcmpe	d8, #0.0
    7988:	b.mi	8108 <PyNumber_FloorDivide@plt+0x4cd8>  // b.first
    798c:	mov	w0, #0x22                  	// #34
    7990:	str	w0, [x19]
    7994:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    7998:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    799c:	add	x1, x1, #0x9b0
    79a0:	ldr	x0, [x0, #4016]
    79a4:	ldr	x0, [x0]
    79a8:	bl	3060 <PyErr_SetString@plt>
    79ac:	ldr	x19, [sp, #16]
    79b0:	ldp	d8, d9, [sp, #32]
    79b4:	mov	x0, #0x0                   	// #0
    79b8:	ldp	x29, x30, [sp], #80
    79bc:	ret
    79c0:	bl	3220 <PyErr_Occurred@plt>
    79c4:	cbnz	x0, 79b4 <PyNumber_FloorDivide@plt+0x4584>
    79c8:	str	x19, [sp, #16]
    79cc:	bl	33b0 <__errno_location@plt>
    79d0:	mov	x19, x0
    79d4:	str	wzr, [x0]
    79d8:	mov	w0, #0x21                  	// #33
    79dc:	str	w0, [x19]
    79e0:	b	7938 <PyNumber_FloorDivide@plt+0x4508>
    79e4:	fcmpe	d8, #0.0
    79e8:	b.mi	82f8 <PyNumber_FloorDivide@plt+0x4ec8>  // b.first
    79ec:	fmov	d0, #2.300000000000000000e+01
    79f0:	fcmpe	d8, d0
    79f4:	b.hi	7964 <PyNumber_FloorDivide@plt+0x4534>  // b.pmore
    79f8:	fcvtzs	w0, d8
    79fc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7a00:	add	x1, x1, #0xdd0
    7a04:	add	x1, x1, #0xb0
    7a08:	sub	w0, w0, #0x1
    7a0c:	ldr	d8, [x1, w0, sxtw #3]
    7a10:	b	7910 <PyNumber_FloorDivide@plt+0x44e0>
    7a14:	fmov	d0, #1.000000000000000000e+00
    7a18:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7a1c:	fmov	d1, x0
    7a20:	fdiv	d8, d0, d8
    7a24:	fabs	d0, d8
    7a28:	fcmp	d0, d1
    7a2c:	b.le	7910 <PyNumber_FloorDivide@plt+0x44e0>
    7a30:	mov	w0, #0x22                  	// #34
    7a34:	str	w0, [x19]
    7a38:	fmov	d1, #1.000000000000000000e+00
    7a3c:	fcmpe	d0, d1
    7a40:	b.pl	7994 <PyNumber_FloorDivide@plt+0x4564>  // b.nfrst
    7a44:	fmov	d0, d8
    7a48:	ldr	x19, [sp, #16]
    7a4c:	ldp	d8, d9, [sp, #32]
    7a50:	ldp	x29, x30, [sp], #80
    7a54:	b	3100 <PyFloat_FromDouble@plt>
    7a58:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7a5c:	str	d14, [sp, #24]
    7a60:	stp	d10, d11, [sp, #48]
    7a64:	ldr	d0, [x0, #3376]
    7a68:	stp	d12, d13, [sp, #64]
    7a6c:	fcmpe	d9, d0
    7a70:	fadd	d10, d9, d0
    7a74:	b.gt	7cbc <PyNumber_FloorDivide@plt+0x488c>
    7a78:	fsub	d0, d10, d0
    7a7c:	fsub	d0, d0, d9
    7a80:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7a84:	fcmpe	d8, #0.0
    7a88:	ldr	d11, [x0, #3360]
    7a8c:	fmul	d0, d0, d11
    7a90:	fdiv	d11, d0, d10
    7a94:	b.mi	7d18 <PyNumber_FloorDivide@plt+0x48e8>  // b.first
    7a98:	fmov	d0, #5.000000000000000000e+00
    7a9c:	fcmpe	d9, d0
    7aa0:	b.pl	7f34 <PyNumber_FloorDivide@plt+0x4b04>  // b.nfrst
    7aa4:	movi	d12, #0x0
    7aa8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7aac:	fmov	d8, #1.000000000000000000e+00
    7ab0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7ab4:	ldr	d1, [x0, #3216]
    7ab8:	mov	x0, #0x800000000000        	// #140737488355328
    7abc:	ldr	d3, [x1, #3224]
    7ac0:	movk	x0, #0x4050, lsl #48
    7ac4:	fmul	d0, d9, d12
    7ac8:	fmov	d2, x0
    7acc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7ad0:	mov	x0, #0x140000000000        	// #21990232555520
    7ad4:	movk	x0, #0x409e, lsl #48
    7ad8:	fmov	d28, x0
    7adc:	ldr	d27, [x1, #3232]
    7ae0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7ae4:	fadd	d8, d0, d8
    7ae8:	fadd	d0, d0, d1
    7aec:	ldr	d25, [x1, #3240]
    7af0:	mov	x0, #0xe78000000000        	// #254536941830144
    7af4:	movk	x0, #0x40df, lsl #48
    7af8:	fmov	d26, x0
    7afc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b00:	mov	x0, #0xd0bc00000000        	// #229505872429056
    7b04:	fmul	d1, d0, d9
    7b08:	fmul	d8, d8, d9
    7b0c:	ldr	d23, [x1, #3248]
    7b10:	movk	x0, #0x4115, lsl #48
    7b14:	fmov	d24, x0
    7b18:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b1c:	mov	x0, #0x1f7b00000000        	// #34613141438464
    7b20:	fadd	d8, d8, d2
    7b24:	fadd	d1, d1, d3
    7b28:	ldr	d21, [x1, #3256]
    7b2c:	movk	x0, #0x4144, lsl #48
    7b30:	fmov	d22, x0
    7b34:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b38:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b3c:	fmul	d8, d8, d9
    7b40:	fmul	d1, d1, d9
    7b44:	ldr	d20, [x0, #3264]
    7b48:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b4c:	ldr	d6, [x1, #3328]
    7b50:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b54:	ldr	d19, [x0, #3272]
    7b58:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b5c:	fadd	d8, d8, d28
    7b60:	fadd	d1, d1, d27
    7b64:	ldr	d18, [x0, #3280]
    7b68:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b6c:	ldr	d5, [x1, #3336]
    7b70:	ldr	d17, [x0, #3288]
    7b74:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b78:	fmul	d8, d8, d9
    7b7c:	fmul	d1, d1, d9
    7b80:	ldr	d16, [x0, #3296]
    7b84:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b88:	ldr	d14, [x0, #3304]
    7b8c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7b90:	fadd	d8, d8, d26
    7b94:	fadd	d1, d1, d25
    7b98:	ldr	d13, [x0, #3312]
    7b9c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7ba0:	ldr	d7, [x0, #3320]
    7ba4:	mov	x0, #0x8a800000000         	// #9517647527936
    7ba8:	fmul	d8, d8, d9
    7bac:	fmul	d1, d1, d9
    7bb0:	movk	x0, #0x4183, lsl #48
    7bb4:	fmov	d4, x0
    7bb8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7bbc:	fadd	d8, d8, d24
    7bc0:	fadd	d1, d1, d23
    7bc4:	ldr	d3, [x0, #3344]
    7bc8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7bcc:	ldr	d2, [x0, #3352]
    7bd0:	fmul	d8, d8, d9
    7bd4:	fmul	d1, d1, d9
    7bd8:	fadd	d8, d8, d22
    7bdc:	fadd	d1, d1, d21
    7be0:	fmul	d8, d8, d9
    7be4:	fmul	d1, d1, d9
    7be8:	fadd	d8, d8, d20
    7bec:	fadd	d0, d1, d19
    7bf0:	fmul	d8, d8, d9
    7bf4:	fmul	d0, d0, d9
    7bf8:	fadd	d8, d8, d18
    7bfc:	fadd	d0, d0, d17
    7c00:	fmul	d8, d8, d9
    7c04:	fmul	d0, d0, d9
    7c08:	fadd	d8, d8, d16
    7c0c:	fadd	d0, d0, d14
    7c10:	fmul	d8, d8, d9
    7c14:	fmul	d0, d0, d9
    7c18:	fadd	d8, d8, d13
    7c1c:	fadd	d0, d0, d7
    7c20:	fmul	d8, d8, d9
    7c24:	fmul	d0, d0, d9
    7c28:	fadd	d8, d8, d6
    7c2c:	fadd	d0, d0, d5
    7c30:	fmul	d8, d8, d9
    7c34:	fmul	d0, d0, d9
    7c38:	fadd	d8, d8, d4
    7c3c:	fadd	d0, d0, d3
    7c40:	fmul	d8, d8, d9
    7c44:	fmul	d0, d0, d9
    7c48:	fadd	d12, d8, d12
    7c4c:	fadd	d8, d0, d2
    7c50:	fmov	d0, d10
    7c54:	bl	3410 <exp@plt>
    7c58:	fdiv	d8, d8, d12
    7c5c:	mov	x0, #0x800000000000        	// #140737488355328
    7c60:	movk	x0, #0x4061, lsl #48
    7c64:	fmov	d1, x0
    7c68:	fcmpe	d9, d1
    7c6c:	fdiv	d0, d8, d0
    7c70:	fmul	d8, d11, d0
    7c74:	fadd	d8, d0, d8
    7c78:	b.pl	80e4 <PyNumber_FloorDivide@plt+0x4cb4>  // b.nfrst
    7c7c:	fmov	d1, #5.000000000000000000e-01
    7c80:	fmov	d0, d10
    7c84:	fsub	d1, d9, d1
    7c88:	bl	2fc0 <pow@plt>
    7c8c:	fmul	d8, d8, d0
    7c90:	fabs	d0, d8
    7c94:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7c98:	fmov	d1, x0
    7c9c:	fcmp	d0, d1
    7ca0:	b.le	7cc8 <PyNumber_FloorDivide@plt+0x4898>
    7ca4:	mov	w0, #0x22                  	// #34
    7ca8:	ldr	d14, [sp, #24]
    7cac:	ldp	d10, d11, [sp, #48]
    7cb0:	ldp	d12, d13, [sp, #64]
    7cb4:	str	w0, [x19]
    7cb8:	b	7a38 <PyNumber_FloorDivide@plt+0x4608>
    7cbc:	fsub	d11, d10, d9
    7cc0:	fsub	d0, d11, d0
    7cc4:	b	7a80 <PyNumber_FloorDivide@plt+0x4650>
    7cc8:	ldp	d10, d11, [sp, #48]
    7ccc:	ldp	d12, d13, [sp, #64]
    7cd0:	ldr	d14, [sp, #24]
    7cd4:	ldr	w0, [x19]
    7cd8:	cbz	w0, 7910 <PyNumber_FloorDivide@plt+0x44e0>
    7cdc:	cmp	w0, #0x21
    7ce0:	b.eq	82f0 <PyNumber_FloorDivide@plt+0x4ec0>  // b.none
    7ce4:	cmp	w0, #0x22
    7ce8:	b.eq	7d10 <PyNumber_FloorDivide@plt+0x48e0>  // b.none
    7cec:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    7cf0:	ldr	x0, [x0, #3992]
    7cf4:	ldr	x0, [x0]
    7cf8:	bl	2f50 <PyErr_SetFromErrno@plt>
    7cfc:	mov	x0, #0x0                   	// #0
    7d00:	ldr	x19, [sp, #16]
    7d04:	ldp	d8, d9, [sp, #32]
    7d08:	ldp	x29, x30, [sp], #80
    7d0c:	ret
    7d10:	fabs	d0, d8
    7d14:	b	7a38 <PyNumber_FloorDivide@plt+0x4608>
    7d18:	fmov	d0, d9
    7d1c:	bl	3618 <PyNumber_FloorDivide@plt+0x1e8>
    7d20:	fmov	d12, d0
    7d24:	fmov	d0, d10
    7d28:	bl	3410 <exp@plt>
    7d2c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7d30:	fmov	d1, #5.000000000000000000e+00
    7d34:	ldr	d8, [x0, #3384]
    7d38:	fcmpe	d9, d1
    7d3c:	fdiv	d8, d8, d12
    7d40:	fdiv	d8, d8, d9
    7d44:	fmul	d8, d8, d0
    7d48:	b.pl	8140 <PyNumber_FloorDivide@plt+0x4d10>  // b.nfrst
    7d4c:	movi	d2, #0x0
    7d50:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7d54:	fmov	d1, #1.000000000000000000e+00
    7d58:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7d5c:	ldr	d6, [x0, #3216]
    7d60:	mov	x0, #0x800000000000        	// #140737488355328
    7d64:	ldr	d5, [x1, #3224]
    7d68:	movk	x0, #0x4050, lsl #48
    7d6c:	fmul	d0, d9, d2
    7d70:	fmov	d4, x0
    7d74:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7d78:	mov	x0, #0x140000000000        	// #21990232555520
    7d7c:	movk	x0, #0x409e, lsl #48
    7d80:	fmov	d27, x0
    7d84:	ldr	d3, [x1, #3232]
    7d88:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7d8c:	fadd	d1, d0, d1
    7d90:	fadd	d0, d0, d6
    7d94:	ldr	d25, [x1, #3240]
    7d98:	mov	x0, #0xe78000000000        	// #254536941830144
    7d9c:	movk	x0, #0x40df, lsl #48
    7da0:	fmov	d26, x0
    7da4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7da8:	mov	x0, #0xd0bc00000000        	// #229505872429056
    7dac:	fmul	d1, d1, d9
    7db0:	fmul	d0, d0, d9
    7db4:	ldr	d23, [x1, #3248]
    7db8:	movk	x0, #0x4115, lsl #48
    7dbc:	fmov	d24, x0
    7dc0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7dc4:	mov	x0, #0x1f7b00000000        	// #34613141438464
    7dc8:	fadd	d1, d1, d4
    7dcc:	fadd	d0, d0, d5
    7dd0:	ldr	d21, [x1, #3256]
    7dd4:	movk	x0, #0x4144, lsl #48
    7dd8:	fmov	d22, x0
    7ddc:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7de0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7de4:	fmul	d1, d1, d9
    7de8:	fmul	d0, d0, d9
    7dec:	ldr	d20, [x0, #3264]
    7df0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7df4:	ldr	d12, [x1, #3320]
    7df8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7dfc:	ldr	d19, [x0, #3272]
    7e00:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e04:	fadd	d0, d0, d3
    7e08:	fadd	d1, d1, d27
    7e0c:	ldr	d18, [x0, #3280]
    7e10:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e14:	ldr	d7, [x1, #3328]
    7e18:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e1c:	ldr	d17, [x0, #3288]
    7e20:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e24:	fmul	d1, d1, d9
    7e28:	fmul	d0, d0, d9
    7e2c:	ldr	d16, [x0, #3296]
    7e30:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e34:	ldr	d6, [x1, #3336]
    7e38:	ldr	d14, [x0, #3304]
    7e3c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e40:	fadd	d1, d1, d26
    7e44:	fadd	d0, d0, d25
    7e48:	ldr	d13, [x0, #3312]
    7e4c:	mov	x0, #0x8a800000000         	// #9517647527936
    7e50:	movk	x0, #0x4183, lsl #48
    7e54:	fmov	d4, x0
    7e58:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e5c:	fmul	d1, d1, d9
    7e60:	fmul	d0, d0, d9
    7e64:	ldr	d5, [x0, #3344]
    7e68:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7e6c:	ldr	d3, [x0, #3352]
    7e70:	fadd	d1, d1, d24
    7e74:	fadd	d0, d0, d23
    7e78:	fmul	d1, d1, d9
    7e7c:	fmul	d0, d0, d9
    7e80:	fadd	d1, d1, d22
    7e84:	fadd	d0, d0, d21
    7e88:	fmul	d1, d1, d9
    7e8c:	fmul	d0, d0, d9
    7e90:	fadd	d1, d1, d20
    7e94:	fadd	d0, d0, d19
    7e98:	fmul	d1, d1, d9
    7e9c:	fmul	d0, d0, d9
    7ea0:	fadd	d1, d1, d18
    7ea4:	fadd	d0, d0, d17
    7ea8:	fmul	d1, d1, d9
    7eac:	fmul	d0, d0, d9
    7eb0:	fadd	d1, d1, d16
    7eb4:	fadd	d0, d0, d14
    7eb8:	fmul	d1, d1, d9
    7ebc:	fmul	d0, d0, d9
    7ec0:	fadd	d1, d1, d13
    7ec4:	fadd	d0, d0, d12
    7ec8:	fmul	d1, d1, d9
    7ecc:	fmul	d0, d0, d9
    7ed0:	fadd	d1, d1, d7
    7ed4:	fadd	d0, d0, d6
    7ed8:	fmul	d1, d1, d9
    7edc:	fmul	d0, d0, d9
    7ee0:	fadd	d1, d1, d4
    7ee4:	fadd	d0, d0, d5
    7ee8:	fmul	d1, d1, d9
    7eec:	fmul	d0, d0, d9
    7ef0:	fadd	d1, d1, d2
    7ef4:	fadd	d0, d0, d3
    7ef8:	fdiv	d0, d0, d1
    7efc:	mov	x0, #0x800000000000        	// #140737488355328
    7f00:	movk	x0, #0x4061, lsl #48
    7f04:	fmov	d1, x0
    7f08:	fcmpe	d9, d1
    7f0c:	fdiv	d8, d8, d0
    7f10:	fmul	d11, d11, d8
    7f14:	fsub	d8, d8, d11
    7f18:	b.pl	811c <PyNumber_FloorDivide@plt+0x4cec>  // b.nfrst
    7f1c:	fmov	d1, #5.000000000000000000e-01
    7f20:	fmov	d0, d10
    7f24:	fsub	d1, d9, d1
    7f28:	bl	2fc0 <pow@plt>
    7f2c:	fdiv	d8, d8, d0
    7f30:	b	7c90 <PyNumber_FloorDivide@plt+0x4860>
    7f34:	movi	d1, #0x0
    7f38:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f3c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f40:	fmov	d4, #1.000000000000000000e+00
    7f44:	ldr	d2, [x0, #3352]
    7f48:	mov	x0, #0x8a800000000         	// #9517647527936
    7f4c:	ldr	d13, [x1, #3344]
    7f50:	movk	x0, #0x4183, lsl #48
    7f54:	fdiv	d0, d1, d9
    7f58:	fmov	d14, x0
    7f5c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f60:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f64:	ldr	d31, [x0, #3328]
    7f68:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f6c:	ldr	d20, [x1, #3256]
    7f70:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f74:	ldr	d30, [x0, #3336]
    7f78:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f7c:	ldr	d18, [x1, #3248]
    7f80:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f84:	ldr	d29, [x0, #3312]
    7f88:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f8c:	ldr	d16, [x1, #3240]
    7f90:	mov	x1, #0x140000000000        	// #21990232555520
    7f94:	ldr	d28, [x0, #3320]
    7f98:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7f9c:	movk	x1, #0x409e, lsl #48
    7fa0:	fmov	d7, x1
    7fa4:	ldr	d27, [x0, #3296]
    7fa8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7fac:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7fb0:	ldr	d26, [x0, #3304]
    7fb4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7fb8:	ldr	d6, [x1, #3232]
    7fbc:	ldr	d25, [x0, #3280]
    7fc0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7fc4:	ldr	d24, [x0, #3288]
    7fc8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7fcc:	ldr	d23, [x0, #3264]
    7fd0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    7fd4:	ldr	d22, [x0, #3272]
    7fd8:	mov	x0, #0x1f7b00000000        	// #34613141438464
    7fdc:	movk	x0, #0x4144, lsl #48
    7fe0:	fmov	d21, x0
    7fe4:	mov	x0, #0xd0bc00000000        	// #229505872429056
    7fe8:	movk	x0, #0x4115, lsl #48
    7fec:	fmov	d19, x0
    7ff0:	mov	x0, #0xe78000000000        	// #254536941830144
    7ff4:	movk	x0, #0x40df, lsl #48
    7ff8:	fmov	d17, x0
    7ffc:	mov	x0, #0x800000000000        	// #140737488355328
    8000:	movk	x0, #0x4050, lsl #48
    8004:	fmov	d12, x0
    8008:	fadd	d8, d0, d1
    800c:	fadd	d2, d0, d2
    8010:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8014:	ldr	d5, [x0, #3224]
    8018:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    801c:	fdiv	d8, d8, d9
    8020:	fdiv	d2, d2, d9
    8024:	ldr	d3, [x0, #3216]
    8028:	fadd	d8, d8, d14
    802c:	fadd	d2, d2, d13
    8030:	fdiv	d8, d8, d9
    8034:	fdiv	d2, d2, d9
    8038:	fadd	d8, d8, d31
    803c:	fadd	d2, d2, d30
    8040:	fdiv	d8, d8, d9
    8044:	fdiv	d2, d2, d9
    8048:	fadd	d8, d8, d29
    804c:	fadd	d2, d2, d28
    8050:	fdiv	d8, d8, d9
    8054:	fdiv	d2, d2, d9
    8058:	fadd	d8, d8, d27
    805c:	fadd	d2, d2, d26
    8060:	fdiv	d8, d8, d9
    8064:	fdiv	d2, d2, d9
    8068:	fadd	d8, d8, d25
    806c:	fadd	d2, d2, d24
    8070:	fdiv	d8, d8, d9
    8074:	fdiv	d2, d2, d9
    8078:	fadd	d8, d8, d23
    807c:	fadd	d0, d2, d22
    8080:	fdiv	d8, d8, d9
    8084:	fdiv	d0, d0, d9
    8088:	fadd	d8, d8, d21
    808c:	fadd	d0, d0, d20
    8090:	fdiv	d8, d8, d9
    8094:	fdiv	d0, d0, d9
    8098:	fadd	d8, d8, d19
    809c:	fadd	d0, d0, d18
    80a0:	fdiv	d8, d8, d9
    80a4:	fdiv	d0, d0, d9
    80a8:	fadd	d8, d8, d17
    80ac:	fadd	d0, d0, d16
    80b0:	fdiv	d8, d8, d9
    80b4:	fdiv	d0, d0, d9
    80b8:	fadd	d8, d8, d7
    80bc:	fadd	d0, d0, d6
    80c0:	fdiv	d8, d8, d9
    80c4:	fdiv	d0, d0, d9
    80c8:	fadd	d8, d8, d12
    80cc:	fadd	d0, d0, d5
    80d0:	fdiv	d8, d8, d9
    80d4:	fdiv	d0, d0, d9
    80d8:	fadd	d12, d8, d4
    80dc:	fadd	d8, d0, d3
    80e0:	b	7c50 <PyNumber_FloorDivide@plt+0x4820>
    80e4:	fmov	d2, #5.000000000000000000e-01
    80e8:	fmov	d1, #2.500000000000000000e-01
    80ec:	fmov	d0, d10
    80f0:	fmul	d9, d9, d2
    80f4:	fsub	d1, d9, d1
    80f8:	bl	2fc0 <pow@plt>
    80fc:	fmul	d8, d8, d0
    8100:	fmul	d8, d8, d0
    8104:	b	7c90 <PyNumber_FloorDivide@plt+0x4860>
    8108:	fmov	d0, d8
    810c:	bl	3618 <PyNumber_FloorDivide@plt+0x1e8>
    8110:	movi	d8, #0x0
    8114:	fdiv	d8, d8, d0
    8118:	b	7cd4 <PyNumber_FloorDivide@plt+0x48a4>
    811c:	fmov	d2, #5.000000000000000000e-01
    8120:	fmov	d1, #2.500000000000000000e-01
    8124:	fmov	d0, d10
    8128:	fmul	d2, d9, d2
    812c:	fsub	d1, d2, d1
    8130:	bl	2fc0 <pow@plt>
    8134:	fdiv	d8, d8, d0
    8138:	fdiv	d8, d8, d0
    813c:	b	7c90 <PyNumber_FloorDivide@plt+0x4860>
    8140:	movi	d1, #0x0
    8144:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8148:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    814c:	mov	x2, #0xe78000000000        	// #254536941830144
    8150:	ldr	d31, [x0, #3352]
    8154:	mov	x0, #0x8a800000000         	// #9517647527936
    8158:	ldr	d29, [x1, #3344]
    815c:	movk	x0, #0x4183, lsl #48
    8160:	fdiv	d0, d1, d9
    8164:	fmov	d30, x0
    8168:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    816c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8170:	movk	x2, #0x40df, lsl #48
    8174:	fmov	d13, x2
    8178:	ldr	d28, [x0, #3328]
    817c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8180:	ldr	d17, [x1, #3256]
    8184:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8188:	ldr	d27, [x0, #3336]
    818c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8190:	ldr	d14, [x1, #3248]
    8194:	mov	x1, #0x140000000000        	// #21990232555520
    8198:	ldr	d26, [x0, #3312]
    819c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81a0:	movk	x1, #0x409e, lsl #48
    81a4:	fmov	d7, x1
    81a8:	ldr	d25, [x0, #3320]
    81ac:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81b0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81b4:	fmov	d3, #1.000000000000000000e+00
    81b8:	ldr	d24, [x0, #3296]
    81bc:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81c0:	ldr	d6, [x1, #3232]
    81c4:	ldr	d23, [x0, #3304]
    81c8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81cc:	ldr	d22, [x0, #3280]
    81d0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81d4:	ldr	d21, [x0, #3288]
    81d8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81dc:	ldr	d20, [x0, #3264]
    81e0:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    81e4:	ldr	d19, [x0, #3272]
    81e8:	mov	x0, #0x1f7b00000000        	// #34613141438464
    81ec:	movk	x0, #0x4144, lsl #48
    81f0:	fmov	d18, x0
    81f4:	mov	x0, #0xd0bc00000000        	// #229505872429056
    81f8:	movk	x0, #0x4115, lsl #48
    81fc:	fmov	d16, x0
    8200:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8204:	ldr	d12, [x0, #3240]
    8208:	mov	x0, #0x800000000000        	// #140737488355328
    820c:	movk	x0, #0x4050, lsl #48
    8210:	fmov	d5, x0
    8214:	fadd	d1, d0, d1
    8218:	fadd	d0, d0, d31
    821c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8220:	ldr	d4, [x0, #3224]
    8224:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8228:	fdiv	d1, d1, d9
    822c:	fdiv	d0, d0, d9
    8230:	ldr	d2, [x0, #3216]
    8234:	fadd	d1, d1, d30
    8238:	fadd	d0, d0, d29
    823c:	fdiv	d1, d1, d9
    8240:	fdiv	d0, d0, d9
    8244:	fadd	d1, d1, d28
    8248:	fadd	d0, d0, d27
    824c:	fdiv	d1, d1, d9
    8250:	fdiv	d0, d0, d9
    8254:	fadd	d1, d1, d26
    8258:	fadd	d0, d0, d25
    825c:	fdiv	d1, d1, d9
    8260:	fdiv	d0, d0, d9
    8264:	fadd	d1, d1, d24
    8268:	fadd	d0, d0, d23
    826c:	fdiv	d1, d1, d9
    8270:	fdiv	d0, d0, d9
    8274:	fadd	d1, d1, d22
    8278:	fadd	d0, d0, d21
    827c:	fdiv	d1, d1, d9
    8280:	fdiv	d0, d0, d9
    8284:	fadd	d1, d1, d20
    8288:	fadd	d0, d0, d19
    828c:	fdiv	d1, d1, d9
    8290:	fdiv	d0, d0, d9
    8294:	fadd	d1, d1, d18
    8298:	fadd	d0, d0, d17
    829c:	fdiv	d1, d1, d9
    82a0:	fdiv	d0, d0, d9
    82a4:	fadd	d1, d1, d16
    82a8:	fadd	d0, d0, d14
    82ac:	fdiv	d1, d1, d9
    82b0:	fdiv	d0, d0, d9
    82b4:	fadd	d1, d1, d13
    82b8:	fadd	d0, d0, d12
    82bc:	fdiv	d1, d1, d9
    82c0:	fdiv	d0, d0, d9
    82c4:	fadd	d1, d1, d7
    82c8:	fadd	d0, d0, d6
    82cc:	fdiv	d1, d1, d9
    82d0:	fdiv	d0, d0, d9
    82d4:	fadd	d1, d1, d5
    82d8:	fadd	d0, d0, d4
    82dc:	fdiv	d1, d1, d9
    82e0:	fdiv	d0, d0, d9
    82e4:	fadd	d1, d1, d3
    82e8:	fadd	d0, d0, d2
    82ec:	b	7ef8 <PyNumber_FloorDivide@plt+0x4ac8>
    82f0:	ldp	d8, d9, [sp, #32]
    82f4:	b	7938 <PyNumber_FloorDivide@plt+0x4508>
    82f8:	ldp	d8, d9, [sp, #32]
    82fc:	b	79d8 <PyNumber_FloorDivide@plt+0x45a8>
    8300:	stp	x29, x30, [sp, #-32]!
    8304:	mov	x0, x1
    8308:	mov	x29, sp
    830c:	bl	3250 <PyFloat_AsDouble@plt>
    8310:	fmov	d1, #-1.000000000000000000e+00
    8314:	fcmp	d0, d1
    8318:	b.eq	8384 <PyNumber_FloorDivide@plt+0x4f54>  // b.none
    831c:	str	d8, [sp, #24]
    8320:	fmov	d8, d0
    8324:	str	x19, [sp, #16]
    8328:	bl	33b0 <__errno_location@plt>
    832c:	fmov	d0, d8
    8330:	str	wzr, [x0]
    8334:	mov	x19, x0
    8338:	bl	3210 <acos@plt>
    833c:	fcmp	d0, d0
    8340:	fccmp	d8, d8, #0x1, vs
    8344:	b.vc	83f4 <PyNumber_FloorDivide@plt+0x4fc4>
    8348:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    834c:	fmov	d1, x0
    8350:	fcmp	d0, d1
    8354:	b.le	8364 <PyNumber_FloorDivide@plt+0x4f34>
    8358:	fabs	d8, d8
    835c:	fcmp	d8, d1
    8360:	b.ls	83f4 <PyNumber_FloorDivide@plt+0x4fc4>  // b.plast
    8364:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8368:	fmov	d1, x0
    836c:	fcmp	d0, d1
    8370:	b.ls	83a4 <PyNumber_FloorDivide@plt+0x4f74>  // b.plast
    8374:	ldr	x19, [sp, #16]
    8378:	ldr	d8, [sp, #24]
    837c:	ldp	x29, x30, [sp], #32
    8380:	b	3100 <PyFloat_FromDouble@plt>
    8384:	bl	3220 <PyErr_Occurred@plt>
    8388:	cbnz	x0, 83e8 <PyNumber_FloorDivide@plt+0x4fb8>
    838c:	bl	33b0 <__errno_location@plt>
    8390:	str	wzr, [x0]
    8394:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8398:	ldp	x29, x30, [sp], #32
    839c:	ldr	d0, [x1, #3168]
    83a0:	b	3100 <PyFloat_FromDouble@plt>
    83a4:	ldr	w0, [x19]
    83a8:	cbz	w0, 8374 <PyNumber_FloorDivide@plt+0x4f44>
    83ac:	cmp	w0, #0x21
    83b0:	b.eq	83f4 <PyNumber_FloorDivide@plt+0x4fc4>  // b.none
    83b4:	cmp	w0, #0x22
    83b8:	b.ne	8420 <PyNumber_FloorDivide@plt+0x4ff0>  // b.any
    83bc:	fmov	d1, #1.000000000000000000e+00
    83c0:	fcmpe	d0, d1
    83c4:	b.mi	8374 <PyNumber_FloorDivide@plt+0x4f44>  // b.first
    83c8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    83cc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    83d0:	add	x1, x1, #0x9b0
    83d4:	ldr	x0, [x0, #4016]
    83d8:	ldr	x0, [x0]
    83dc:	bl	3060 <PyErr_SetString@plt>
    83e0:	ldr	x19, [sp, #16]
    83e4:	ldr	d8, [sp, #24]
    83e8:	mov	x0, #0x0                   	// #0
    83ec:	ldp	x29, x30, [sp], #32
    83f0:	ret
    83f4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    83f8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    83fc:	add	x1, x1, #0x998
    8400:	ldr	x0, [x0, #3992]
    8404:	ldr	x0, [x0]
    8408:	bl	3060 <PyErr_SetString@plt>
    840c:	mov	x0, #0x0                   	// #0
    8410:	ldr	d8, [sp, #24]
    8414:	ldr	x19, [sp, #16]
    8418:	ldp	x29, x30, [sp], #32
    841c:	ret
    8420:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8424:	ldr	x0, [x0, #3992]
    8428:	ldr	x0, [x0]
    842c:	bl	2f50 <PyErr_SetFromErrno@plt>
    8430:	ldr	x19, [sp, #16]
    8434:	ldr	d8, [sp, #24]
    8438:	b	83e8 <PyNumber_FloorDivide@plt+0x4fb8>
    843c:	nop
    8440:	stp	x29, x30, [sp, #-32]!
    8444:	mov	x0, x1
    8448:	mov	x29, sp
    844c:	str	d8, [sp, #24]
    8450:	bl	3250 <PyFloat_AsDouble@plt>
    8454:	fmov	d1, #-1.000000000000000000e+00
    8458:	fmov	d8, d0
    845c:	fcmp	d0, d1
    8460:	b.eq	84cc <PyNumber_FloorDivide@plt+0x509c>  // b.none
    8464:	str	x19, [sp, #16]
    8468:	bl	33b0 <__errno_location@plt>
    846c:	fmov	d0, d8
    8470:	str	wzr, [x0]
    8474:	mov	x19, x0
    8478:	bl	30e0 <acosh@plt>
    847c:	fcmp	d0, d0
    8480:	fccmp	d8, d8, #0x1, vs
    8484:	b.vc	8520 <PyNumber_FloorDivide@plt+0x50f0>
    8488:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    848c:	fmov	d1, x0
    8490:	fcmp	d0, d1
    8494:	b.le	84a4 <PyNumber_FloorDivide@plt+0x5074>
    8498:	fabs	d8, d8
    849c:	fcmp	d8, d1
    84a0:	b.ls	8520 <PyNumber_FloorDivide@plt+0x50f0>  // b.plast
    84a4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    84a8:	fmov	d1, x0
    84ac:	fcmp	d0, d1
    84b0:	b.hi	84bc <PyNumber_FloorDivide@plt+0x508c>  // b.pmore
    84b4:	ldr	w0, [x19]
    84b8:	cbnz	w0, 84e4 <PyNumber_FloorDivide@plt+0x50b4>
    84bc:	ldr	x19, [sp, #16]
    84c0:	ldr	d8, [sp, #24]
    84c4:	ldp	x29, x30, [sp], #32
    84c8:	b	3100 <PyFloat_FromDouble@plt>
    84cc:	bl	3220 <PyErr_Occurred@plt>
    84d0:	cbz	x0, 8464 <PyNumber_FloorDivide@plt+0x5034>
    84d4:	mov	x0, #0x0                   	// #0
    84d8:	ldr	d8, [sp, #24]
    84dc:	ldp	x29, x30, [sp], #32
    84e0:	ret
    84e4:	cmp	w0, #0x21
    84e8:	b.eq	8520 <PyNumber_FloorDivide@plt+0x50f0>  // b.none
    84ec:	cmp	w0, #0x22
    84f0:	b.ne	854c <PyNumber_FloorDivide@plt+0x511c>  // b.any
    84f4:	fmov	d1, #1.000000000000000000e+00
    84f8:	fcmpe	d0, d1
    84fc:	b.mi	84bc <PyNumber_FloorDivide@plt+0x508c>  // b.first
    8500:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8504:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8508:	add	x1, x1, #0x9b0
    850c:	ldr	x0, [x0, #4016]
    8510:	ldr	x0, [x0]
    8514:	bl	3060 <PyErr_SetString@plt>
    8518:	ldr	x19, [sp, #16]
    851c:	b	84d4 <PyNumber_FloorDivide@plt+0x50a4>
    8520:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8524:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8528:	add	x1, x1, #0x998
    852c:	ldr	x0, [x0, #3992]
    8530:	ldr	x0, [x0]
    8534:	bl	3060 <PyErr_SetString@plt>
    8538:	mov	x0, #0x0                   	// #0
    853c:	ldr	d8, [sp, #24]
    8540:	ldr	x19, [sp, #16]
    8544:	ldp	x29, x30, [sp], #32
    8548:	ret
    854c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8550:	ldr	x0, [x0, #3992]
    8554:	ldr	x0, [x0]
    8558:	bl	2f50 <PyErr_SetFromErrno@plt>
    855c:	ldr	x19, [sp, #16]
    8560:	b	84d4 <PyNumber_FloorDivide@plt+0x50a4>
    8564:	nop
    8568:	stp	x29, x30, [sp, #-32]!
    856c:	mov	x0, x1
    8570:	mov	x29, sp
    8574:	bl	3250 <PyFloat_AsDouble@plt>
    8578:	fmov	d1, #-1.000000000000000000e+00
    857c:	fcmp	d0, d1
    8580:	b.eq	85d4 <PyNumber_FloorDivide@plt+0x51a4>  // b.none
    8584:	str	d8, [sp, #16]
    8588:	fmov	d8, d0
    858c:	bl	33b0 <__errno_location@plt>
    8590:	fmov	d0, d8
    8594:	str	wzr, [x0]
    8598:	bl	33c0 <cos@plt>
    859c:	fcmp	d0, d0
    85a0:	fccmp	d8, d8, #0x1, vs
    85a4:	b.vc	85f4 <PyNumber_FloorDivide@plt+0x51c4>
    85a8:	fabs	d2, d0
    85ac:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    85b0:	fmov	d1, x0
    85b4:	fcmp	d2, d1
    85b8:	b.le	85c8 <PyNumber_FloorDivide@plt+0x5198>
    85bc:	fabs	d8, d8
    85c0:	fcmp	d8, d1
    85c4:	b.ls	85f4 <PyNumber_FloorDivide@plt+0x51c4>  // b.plast
    85c8:	ldr	d8, [sp, #16]
    85cc:	ldp	x29, x30, [sp], #32
    85d0:	b	3100 <PyFloat_FromDouble@plt>
    85d4:	bl	3220 <PyErr_Occurred@plt>
    85d8:	cbnz	x0, 8610 <PyNumber_FloorDivide@plt+0x51e0>
    85dc:	bl	33b0 <__errno_location@plt>
    85e0:	str	wzr, [x0]
    85e4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    85e8:	ldp	x29, x30, [sp], #32
    85ec:	ldr	d0, [x1, #3392]
    85f0:	b	3100 <PyFloat_FromDouble@plt>
    85f4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    85f8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    85fc:	add	x1, x1, #0x998
    8600:	ldr	x0, [x0, #3992]
    8604:	ldr	x0, [x0]
    8608:	bl	3060 <PyErr_SetString@plt>
    860c:	ldr	d8, [sp, #16]
    8610:	mov	x0, #0x0                   	// #0
    8614:	ldp	x29, x30, [sp], #32
    8618:	ret
    861c:	nop
    8620:	stp	x29, x30, [sp, #-32]!
    8624:	mov	x0, x1
    8628:	mov	x29, sp
    862c:	bl	3250 <PyFloat_AsDouble@plt>
    8630:	fmov	d1, #-1.000000000000000000e+00
    8634:	fcmp	d0, d1
    8638:	b.eq	86a4 <PyNumber_FloorDivide@plt+0x5274>  // b.none
    863c:	str	d8, [sp, #24]
    8640:	fmov	d8, d0
    8644:	str	x19, [sp, #16]
    8648:	bl	33b0 <__errno_location@plt>
    864c:	fmov	d0, d8
    8650:	str	wzr, [x0]
    8654:	mov	x19, x0
    8658:	bl	3290 <cosh@plt>
    865c:	fcmp	d0, d0
    8660:	fccmp	d8, d8, #0x1, vs
    8664:	b.vc	8714 <PyNumber_FloorDivide@plt+0x52e4>
    8668:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    866c:	fmov	d1, x0
    8670:	fcmp	d0, d1
    8674:	b.le	8684 <PyNumber_FloorDivide@plt+0x5254>
    8678:	fabs	d8, d8
    867c:	fcmp	d8, d1
    8680:	b.ls	86e8 <PyNumber_FloorDivide@plt+0x52b8>  // b.plast
    8684:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8688:	fmov	d1, x0
    868c:	fcmp	d0, d1
    8690:	b.ls	86c4 <PyNumber_FloorDivide@plt+0x5294>  // b.plast
    8694:	ldr	x19, [sp, #16]
    8698:	ldr	d8, [sp, #24]
    869c:	ldp	x29, x30, [sp], #32
    86a0:	b	3100 <PyFloat_FromDouble@plt>
    86a4:	bl	3220 <PyErr_Occurred@plt>
    86a8:	cbnz	x0, 8708 <PyNumber_FloorDivide@plt+0x52d8>
    86ac:	bl	33b0 <__errno_location@plt>
    86b0:	str	wzr, [x0]
    86b4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    86b8:	ldp	x29, x30, [sp], #32
    86bc:	ldr	d0, [x1, #3400]
    86c0:	b	3100 <PyFloat_FromDouble@plt>
    86c4:	ldr	w0, [x19]
    86c8:	cbz	w0, 8694 <PyNumber_FloorDivide@plt+0x5264>
    86cc:	cmp	w0, #0x21
    86d0:	b.eq	8714 <PyNumber_FloorDivide@plt+0x52e4>  // b.none
    86d4:	cmp	w0, #0x22
    86d8:	b.ne	8740 <PyNumber_FloorDivide@plt+0x5310>  // b.any
    86dc:	fmov	d1, #1.000000000000000000e+00
    86e0:	fcmpe	d0, d1
    86e4:	b.mi	8694 <PyNumber_FloorDivide@plt+0x5264>  // b.first
    86e8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    86ec:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    86f0:	add	x1, x1, #0x9b0
    86f4:	ldr	x0, [x0, #4016]
    86f8:	ldr	x0, [x0]
    86fc:	bl	3060 <PyErr_SetString@plt>
    8700:	ldr	x19, [sp, #16]
    8704:	ldr	d8, [sp, #24]
    8708:	mov	x0, #0x0                   	// #0
    870c:	ldp	x29, x30, [sp], #32
    8710:	ret
    8714:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8718:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    871c:	add	x1, x1, #0x998
    8720:	ldr	x0, [x0, #3992]
    8724:	ldr	x0, [x0]
    8728:	bl	3060 <PyErr_SetString@plt>
    872c:	mov	x0, #0x0                   	// #0
    8730:	ldr	d8, [sp, #24]
    8734:	ldr	x19, [sp, #16]
    8738:	ldp	x29, x30, [sp], #32
    873c:	ret
    8740:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8744:	ldr	x0, [x0, #3992]
    8748:	ldr	x0, [x0]
    874c:	bl	2f50 <PyErr_SetFromErrno@plt>
    8750:	ldr	x19, [sp, #16]
    8754:	ldr	d8, [sp, #24]
    8758:	b	8708 <PyNumber_FloorDivide@plt+0x52d8>
    875c:	nop
    8760:	stp	x29, x30, [sp, #-32]!
    8764:	mov	x0, x1
    8768:	mov	x29, sp
    876c:	bl	3250 <PyFloat_AsDouble@plt>
    8770:	fmov	d1, #-1.000000000000000000e+00
    8774:	fcmp	d0, d1
    8778:	b.eq	87e4 <PyNumber_FloorDivide@plt+0x53b4>  // b.none
    877c:	str	d8, [sp, #24]
    8780:	fmov	d8, d0
    8784:	str	x19, [sp, #16]
    8788:	bl	33b0 <__errno_location@plt>
    878c:	fmov	d0, d8
    8790:	str	wzr, [x0]
    8794:	mov	x19, x0
    8798:	bl	3410 <exp@plt>
    879c:	fcmp	d0, d0
    87a0:	fccmp	d8, d8, #0x1, vs
    87a4:	b.vc	8854 <PyNumber_FloorDivide@plt+0x5424>
    87a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    87ac:	fmov	d1, x0
    87b0:	fcmp	d0, d1
    87b4:	b.le	87c4 <PyNumber_FloorDivide@plt+0x5394>
    87b8:	fabs	d8, d8
    87bc:	fcmp	d8, d1
    87c0:	b.ls	8828 <PyNumber_FloorDivide@plt+0x53f8>  // b.plast
    87c4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    87c8:	fmov	d1, x0
    87cc:	fcmp	d0, d1
    87d0:	b.ls	8804 <PyNumber_FloorDivide@plt+0x53d4>  // b.plast
    87d4:	ldr	x19, [sp, #16]
    87d8:	ldr	d8, [sp, #24]
    87dc:	ldp	x29, x30, [sp], #32
    87e0:	b	3100 <PyFloat_FromDouble@plt>
    87e4:	bl	3220 <PyErr_Occurred@plt>
    87e8:	cbnz	x0, 8848 <PyNumber_FloorDivide@plt+0x5418>
    87ec:	bl	33b0 <__errno_location@plt>
    87f0:	str	wzr, [x0]
    87f4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    87f8:	ldp	x29, x30, [sp], #32
    87fc:	ldr	d0, [x1, #3408]
    8800:	b	3100 <PyFloat_FromDouble@plt>
    8804:	ldr	w0, [x19]
    8808:	cbz	w0, 87d4 <PyNumber_FloorDivide@plt+0x53a4>
    880c:	cmp	w0, #0x21
    8810:	b.eq	8854 <PyNumber_FloorDivide@plt+0x5424>  // b.none
    8814:	cmp	w0, #0x22
    8818:	b.ne	8880 <PyNumber_FloorDivide@plt+0x5450>  // b.any
    881c:	fmov	d1, #1.000000000000000000e+00
    8820:	fcmpe	d0, d1
    8824:	b.mi	87d4 <PyNumber_FloorDivide@plt+0x53a4>  // b.first
    8828:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    882c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8830:	add	x1, x1, #0x9b0
    8834:	ldr	x0, [x0, #4016]
    8838:	ldr	x0, [x0]
    883c:	bl	3060 <PyErr_SetString@plt>
    8840:	ldr	x19, [sp, #16]
    8844:	ldr	d8, [sp, #24]
    8848:	mov	x0, #0x0                   	// #0
    884c:	ldp	x29, x30, [sp], #32
    8850:	ret
    8854:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8858:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    885c:	add	x1, x1, #0x998
    8860:	ldr	x0, [x0, #3992]
    8864:	ldr	x0, [x0]
    8868:	bl	3060 <PyErr_SetString@plt>
    886c:	mov	x0, #0x0                   	// #0
    8870:	ldr	d8, [sp, #24]
    8874:	ldr	x19, [sp, #16]
    8878:	ldp	x29, x30, [sp], #32
    887c:	ret
    8880:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8884:	ldr	x0, [x0, #3992]
    8888:	ldr	x0, [x0]
    888c:	bl	2f50 <PyErr_SetFromErrno@plt>
    8890:	ldr	x19, [sp, #16]
    8894:	ldr	d8, [sp, #24]
    8898:	b	8848 <PyNumber_FloorDivide@plt+0x5418>
    889c:	nop
    88a0:	stp	x29, x30, [sp, #-32]!
    88a4:	mov	x0, x1
    88a8:	mov	x29, sp
    88ac:	str	x19, [sp, #16]
    88b0:	bl	3250 <PyFloat_AsDouble@plt>
    88b4:	fmov	d1, #-1.000000000000000000e+00
    88b8:	fcmp	d0, d1
    88bc:	b.eq	8928 <PyNumber_FloorDivide@plt+0x54f8>  // b.none
    88c0:	str	d8, [sp, #24]
    88c4:	fmov	d8, d0
    88c8:	bl	33b0 <__errno_location@plt>
    88cc:	fmov	d0, d8
    88d0:	str	wzr, [x0]
    88d4:	mov	x19, x0
    88d8:	bl	2f90 <expm1@plt>
    88dc:	fcmp	d0, d0
    88e0:	fccmp	d8, d8, #0x1, vs
    88e4:	b.vc	89a0 <PyNumber_FloorDivide@plt+0x5570>
    88e8:	fabs	d2, d0
    88ec:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    88f0:	fmov	d1, x0
    88f4:	fcmp	d2, d1
    88f8:	b.le	8908 <PyNumber_FloorDivide@plt+0x54d8>
    88fc:	fabs	d8, d8
    8900:	fcmp	d8, d1
    8904:	b.ls	8974 <PyNumber_FloorDivide@plt+0x5544>  // b.plast
    8908:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    890c:	fmov	d1, x0
    8910:	ldr	d8, [sp, #24]
    8914:	fcmp	d2, d1
    8918:	b.ls	894c <PyNumber_FloorDivide@plt+0x551c>  // b.plast
    891c:	ldr	x19, [sp, #16]
    8920:	ldp	x29, x30, [sp], #32
    8924:	b	3100 <PyFloat_FromDouble@plt>
    8928:	bl	3220 <PyErr_Occurred@plt>
    892c:	cbnz	x0, 8990 <PyNumber_FloorDivide@plt+0x5560>
    8930:	bl	33b0 <__errno_location@plt>
    8934:	mov	x19, x0
    8938:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    893c:	ldr	d0, [x0, #3416]
    8940:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8944:	str	wzr, [x19]
    8948:	ldr	d2, [x0, #3424]
    894c:	ldr	w0, [x19]
    8950:	cbz	w0, 891c <PyNumber_FloorDivide@plt+0x54ec>
    8954:	cmp	w0, #0x21
    8958:	b.eq	89d4 <PyNumber_FloorDivide@plt+0x55a4>  // b.none
    895c:	cmp	w0, #0x22
    8960:	b.ne	89c0 <PyNumber_FloorDivide@plt+0x5590>  // b.any
    8964:	fmov	d1, #1.000000000000000000e+00
    8968:	fcmpe	d2, d1
    896c:	b.mi	891c <PyNumber_FloorDivide@plt+0x54ec>  // b.first
    8970:	b	8978 <PyNumber_FloorDivide@plt+0x5548>
    8974:	ldr	d8, [sp, #24]
    8978:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    897c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8980:	add	x1, x1, #0x9b0
    8984:	ldr	x0, [x0, #4016]
    8988:	ldr	x0, [x0]
    898c:	bl	3060 <PyErr_SetString@plt>
    8990:	mov	x0, #0x0                   	// #0
    8994:	ldr	x19, [sp, #16]
    8998:	ldp	x29, x30, [sp], #32
    899c:	ret
    89a0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    89a4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    89a8:	add	x1, x1, #0x998
    89ac:	ldr	x0, [x0, #3992]
    89b0:	ldr	x0, [x0]
    89b4:	bl	3060 <PyErr_SetString@plt>
    89b8:	ldr	d8, [sp, #24]
    89bc:	b	8990 <PyNumber_FloorDivide@plt+0x5560>
    89c0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    89c4:	ldr	x0, [x0, #3992]
    89c8:	ldr	x0, [x0]
    89cc:	bl	2f50 <PyErr_SetFromErrno@plt>
    89d0:	b	8990 <PyNumber_FloorDivide@plt+0x5560>
    89d4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    89d8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    89dc:	add	x1, x1, #0x998
    89e0:	ldr	x0, [x0, #3992]
    89e4:	ldr	x0, [x0]
    89e8:	bl	3060 <PyErr_SetString@plt>
    89ec:	b	8990 <PyNumber_FloorDivide@plt+0x5560>
    89f0:	stp	x29, x30, [sp, #-32]!
    89f4:	mov	x0, x1
    89f8:	mov	x29, sp
    89fc:	str	d8, [sp, #24]
    8a00:	bl	3250 <PyFloat_AsDouble@plt>
    8a04:	fmov	d1, #-1.000000000000000000e+00
    8a08:	fmov	d8, d0
    8a0c:	fcmp	d0, d1
    8a10:	b.eq	8a80 <PyNumber_FloorDivide@plt+0x5650>  // b.none
    8a14:	str	x19, [sp, #16]
    8a18:	bl	33b0 <__errno_location@plt>
    8a1c:	fmov	d0, d8
    8a20:	str	wzr, [x0]
    8a24:	mov	x19, x0
    8a28:	bl	3360 <atanh@plt>
    8a2c:	fcmp	d0, d0
    8a30:	fccmp	d8, d8, #0x1, vs
    8a34:	b.vc	8ad4 <PyNumber_FloorDivide@plt+0x56a4>
    8a38:	fabs	d2, d0
    8a3c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8a40:	fmov	d1, x0
    8a44:	fcmp	d2, d1
    8a48:	b.le	8a58 <PyNumber_FloorDivide@plt+0x5628>
    8a4c:	fabs	d8, d8
    8a50:	fcmp	d8, d1
    8a54:	b.ls	8ad4 <PyNumber_FloorDivide@plt+0x56a4>  // b.plast
    8a58:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8a5c:	fmov	d1, x0
    8a60:	fcmp	d2, d1
    8a64:	b.hi	8a70 <PyNumber_FloorDivide@plt+0x5640>  // b.pmore
    8a68:	ldr	w0, [x19]
    8a6c:	cbnz	w0, 8a98 <PyNumber_FloorDivide@plt+0x5668>
    8a70:	ldr	x19, [sp, #16]
    8a74:	ldr	d8, [sp, #24]
    8a78:	ldp	x29, x30, [sp], #32
    8a7c:	b	3100 <PyFloat_FromDouble@plt>
    8a80:	bl	3220 <PyErr_Occurred@plt>
    8a84:	cbz	x0, 8a14 <PyNumber_FloorDivide@plt+0x55e4>
    8a88:	mov	x0, #0x0                   	// #0
    8a8c:	ldr	d8, [sp, #24]
    8a90:	ldp	x29, x30, [sp], #32
    8a94:	ret
    8a98:	cmp	w0, #0x21
    8a9c:	b.eq	8ad4 <PyNumber_FloorDivide@plt+0x56a4>  // b.none
    8aa0:	cmp	w0, #0x22
    8aa4:	b.ne	8b00 <PyNumber_FloorDivide@plt+0x56d0>  // b.any
    8aa8:	fmov	d1, #1.000000000000000000e+00
    8aac:	fcmpe	d2, d1
    8ab0:	b.mi	8a70 <PyNumber_FloorDivide@plt+0x5640>  // b.first
    8ab4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8ab8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8abc:	add	x1, x1, #0x9b0
    8ac0:	ldr	x0, [x0, #4016]
    8ac4:	ldr	x0, [x0]
    8ac8:	bl	3060 <PyErr_SetString@plt>
    8acc:	ldr	x19, [sp, #16]
    8ad0:	b	8a88 <PyNumber_FloorDivide@plt+0x5658>
    8ad4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8ad8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8adc:	add	x1, x1, #0x998
    8ae0:	ldr	x0, [x0, #3992]
    8ae4:	ldr	x0, [x0]
    8ae8:	bl	3060 <PyErr_SetString@plt>
    8aec:	mov	x0, #0x0                   	// #0
    8af0:	ldr	d8, [sp, #24]
    8af4:	ldr	x19, [sp, #16]
    8af8:	ldp	x29, x30, [sp], #32
    8afc:	ret
    8b00:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8b04:	ldr	x0, [x0, #3992]
    8b08:	ldr	x0, [x0]
    8b0c:	bl	2f50 <PyErr_SetFromErrno@plt>
    8b10:	ldr	x19, [sp, #16]
    8b14:	b	8a88 <PyNumber_FloorDivide@plt+0x5658>
    8b18:	stp	x29, x30, [sp, #-32]!
    8b1c:	mov	x0, x1
    8b20:	mov	x29, sp
    8b24:	bl	3250 <PyFloat_AsDouble@plt>
    8b28:	fmov	d1, #-1.000000000000000000e+00
    8b2c:	fcmp	d0, d1
    8b30:	b.eq	8b74 <PyNumber_FloorDivide@plt+0x5744>  // b.none
    8b34:	str	d8, [sp, #16]
    8b38:	fmov	d8, d0
    8b3c:	bl	33b0 <__errno_location@plt>
    8b40:	fabs	d0, d8
    8b44:	str	wzr, [x0]
    8b48:	fcmp	d0, d0
    8b4c:	fccmp	d8, d8, #0x1, vs
    8b50:	b.vc	8b90 <PyNumber_FloorDivide@plt+0x5760>
    8b54:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8b58:	fmov	d1, x0
    8b5c:	fcmp	d0, d1
    8b60:	b.le	8b68 <PyNumber_FloorDivide@plt+0x5738>
    8b64:	b.ls	8b90 <PyNumber_FloorDivide@plt+0x5760>  // b.plast
    8b68:	ldr	d8, [sp, #16]
    8b6c:	ldp	x29, x30, [sp], #32
    8b70:	b	3100 <PyFloat_FromDouble@plt>
    8b74:	bl	3220 <PyErr_Occurred@plt>
    8b78:	cbnz	x0, 8bac <PyNumber_FloorDivide@plt+0x577c>
    8b7c:	bl	33b0 <__errno_location@plt>
    8b80:	str	wzr, [x0]
    8b84:	fmov	d0, #1.000000000000000000e+00
    8b88:	ldp	x29, x30, [sp], #32
    8b8c:	b	3100 <PyFloat_FromDouble@plt>
    8b90:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8b94:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8b98:	add	x1, x1, #0x998
    8b9c:	ldr	x0, [x0, #3992]
    8ba0:	ldr	x0, [x0]
    8ba4:	bl	3060 <PyErr_SetString@plt>
    8ba8:	ldr	d8, [sp, #16]
    8bac:	mov	x0, #0x0                   	// #0
    8bb0:	ldp	x29, x30, [sp], #32
    8bb4:	ret
    8bb8:	stp	x29, x30, [sp, #-32]!
    8bbc:	mov	x0, x1
    8bc0:	mov	x29, sp
    8bc4:	bl	3250 <PyFloat_AsDouble@plt>
    8bc8:	fmov	d1, #-1.000000000000000000e+00
    8bcc:	fcmp	d0, d1
    8bd0:	b.eq	8c24 <PyNumber_FloorDivide@plt+0x57f4>  // b.none
    8bd4:	str	d8, [sp, #16]
    8bd8:	fmov	d8, d0
    8bdc:	bl	33b0 <__errno_location@plt>
    8be0:	fmov	d0, d8
    8be4:	str	wzr, [x0]
    8be8:	bl	3380 <tan@plt>
    8bec:	fcmp	d0, d0
    8bf0:	fccmp	d8, d8, #0x1, vs
    8bf4:	b.vc	8c44 <PyNumber_FloorDivide@plt+0x5814>
    8bf8:	fabs	d2, d0
    8bfc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8c00:	fmov	d1, x0
    8c04:	fcmp	d2, d1
    8c08:	b.le	8c18 <PyNumber_FloorDivide@plt+0x57e8>
    8c0c:	fabs	d8, d8
    8c10:	fcmp	d8, d1
    8c14:	b.ls	8c44 <PyNumber_FloorDivide@plt+0x5814>  // b.plast
    8c18:	ldr	d8, [sp, #16]
    8c1c:	ldp	x29, x30, [sp], #32
    8c20:	b	3100 <PyFloat_FromDouble@plt>
    8c24:	bl	3220 <PyErr_Occurred@plt>
    8c28:	cbnz	x0, 8c60 <PyNumber_FloorDivide@plt+0x5830>
    8c2c:	bl	33b0 <__errno_location@plt>
    8c30:	str	wzr, [x0]
    8c34:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8c38:	ldp	x29, x30, [sp], #32
    8c3c:	ldr	d0, [x1, #3432]
    8c40:	b	3100 <PyFloat_FromDouble@plt>
    8c44:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8c48:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8c4c:	add	x1, x1, #0x998
    8c50:	ldr	x0, [x0, #3992]
    8c54:	ldr	x0, [x0]
    8c58:	bl	3060 <PyErr_SetString@plt>
    8c5c:	ldr	d8, [sp, #16]
    8c60:	mov	x0, #0x0                   	// #0
    8c64:	ldp	x29, x30, [sp], #32
    8c68:	ret
    8c6c:	nop
    8c70:	stp	x29, x30, [sp, #-32]!
    8c74:	mov	x0, x1
    8c78:	mov	x29, sp
    8c7c:	bl	3250 <PyFloat_AsDouble@plt>
    8c80:	fmov	d1, #-1.000000000000000000e+00
    8c84:	fcmp	d0, d1
    8c88:	b.eq	8cdc <PyNumber_FloorDivide@plt+0x58ac>  // b.none
    8c8c:	str	d8, [sp, #16]
    8c90:	fmov	d8, d0
    8c94:	bl	33b0 <__errno_location@plt>
    8c98:	fmov	d0, d8
    8c9c:	str	wzr, [x0]
    8ca0:	bl	3180 <tanh@plt>
    8ca4:	fcmp	d0, d0
    8ca8:	fccmp	d8, d8, #0x1, vs
    8cac:	b.vc	8cfc <PyNumber_FloorDivide@plt+0x58cc>
    8cb0:	fabs	d2, d0
    8cb4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8cb8:	fmov	d1, x0
    8cbc:	fcmp	d2, d1
    8cc0:	b.le	8cd0 <PyNumber_FloorDivide@plt+0x58a0>
    8cc4:	fabs	d8, d8
    8cc8:	fcmp	d8, d1
    8ccc:	b.ls	8cfc <PyNumber_FloorDivide@plt+0x58cc>  // b.plast
    8cd0:	ldr	d8, [sp, #16]
    8cd4:	ldp	x29, x30, [sp], #32
    8cd8:	b	3100 <PyFloat_FromDouble@plt>
    8cdc:	bl	3220 <PyErr_Occurred@plt>
    8ce0:	cbnz	x0, 8d18 <PyNumber_FloorDivide@plt+0x58e8>
    8ce4:	bl	33b0 <__errno_location@plt>
    8ce8:	str	wzr, [x0]
    8cec:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8cf0:	ldp	x29, x30, [sp], #32
    8cf4:	ldr	d0, [x1, #3440]
    8cf8:	b	3100 <PyFloat_FromDouble@plt>
    8cfc:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8d00:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8d04:	add	x1, x1, #0x998
    8d08:	ldr	x0, [x0, #3992]
    8d0c:	ldr	x0, [x0]
    8d10:	bl	3060 <PyErr_SetString@plt>
    8d14:	ldr	d8, [sp, #16]
    8d18:	mov	x0, #0x0                   	// #0
    8d1c:	ldp	x29, x30, [sp], #32
    8d20:	ret
    8d24:	nop
    8d28:	stp	x29, x30, [sp, #-32]!
    8d2c:	mov	x0, x1
    8d30:	mov	x29, sp
    8d34:	bl	3250 <PyFloat_AsDouble@plt>
    8d38:	fmov	d1, #-1.000000000000000000e+00
    8d3c:	fcmp	d0, d1
    8d40:	b.eq	8d94 <PyNumber_FloorDivide@plt+0x5964>  // b.none
    8d44:	str	d8, [sp, #16]
    8d48:	fmov	d8, d0
    8d4c:	bl	33b0 <__errno_location@plt>
    8d50:	fmov	d0, d8
    8d54:	str	wzr, [x0]
    8d58:	bl	3170 <sin@plt>
    8d5c:	fcmp	d0, d0
    8d60:	fccmp	d8, d8, #0x1, vs
    8d64:	b.vc	8db4 <PyNumber_FloorDivide@plt+0x5984>
    8d68:	fabs	d2, d0
    8d6c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8d70:	fmov	d1, x0
    8d74:	fcmp	d2, d1
    8d78:	b.le	8d88 <PyNumber_FloorDivide@plt+0x5958>
    8d7c:	fabs	d8, d8
    8d80:	fcmp	d8, d1
    8d84:	b.ls	8db4 <PyNumber_FloorDivide@plt+0x5984>  // b.plast
    8d88:	ldr	d8, [sp, #16]
    8d8c:	ldp	x29, x30, [sp], #32
    8d90:	b	3100 <PyFloat_FromDouble@plt>
    8d94:	bl	3220 <PyErr_Occurred@plt>
    8d98:	cbnz	x0, 8dd0 <PyNumber_FloorDivide@plt+0x59a0>
    8d9c:	bl	33b0 <__errno_location@plt>
    8da0:	str	wzr, [x0]
    8da4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8da8:	ldp	x29, x30, [sp], #32
    8dac:	ldr	d0, [x1, #3448]
    8db0:	b	3100 <PyFloat_FromDouble@plt>
    8db4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8db8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8dbc:	add	x1, x1, #0x998
    8dc0:	ldr	x0, [x0, #3992]
    8dc4:	ldr	x0, [x0]
    8dc8:	bl	3060 <PyErr_SetString@plt>
    8dcc:	ldr	d8, [sp, #16]
    8dd0:	mov	x0, #0x0                   	// #0
    8dd4:	ldp	x29, x30, [sp], #32
    8dd8:	ret
    8ddc:	nop
    8de0:	stp	x29, x30, [sp, #-32]!
    8de4:	mov	x0, x1
    8de8:	mov	x29, sp
    8dec:	str	x19, [sp, #16]
    8df0:	bl	3250 <PyFloat_AsDouble@plt>
    8df4:	fmov	d1, #-1.000000000000000000e+00
    8df8:	fcmp	d0, d1
    8dfc:	b.eq	8e68 <PyNumber_FloorDivide@plt+0x5a38>  // b.none
    8e00:	str	d8, [sp, #24]
    8e04:	fmov	d8, d0
    8e08:	bl	33b0 <__errno_location@plt>
    8e0c:	fmov	d0, d8
    8e10:	str	wzr, [x0]
    8e14:	mov	x19, x0
    8e18:	bl	3280 <sinh@plt>
    8e1c:	fcmp	d0, d0
    8e20:	fccmp	d8, d8, #0x1, vs
    8e24:	b.vc	8ee0 <PyNumber_FloorDivide@plt+0x5ab0>
    8e28:	fabs	d2, d0
    8e2c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8e30:	fmov	d1, x0
    8e34:	fcmp	d2, d1
    8e38:	b.le	8e48 <PyNumber_FloorDivide@plt+0x5a18>
    8e3c:	fabs	d8, d8
    8e40:	fcmp	d8, d1
    8e44:	b.ls	8eb4 <PyNumber_FloorDivide@plt+0x5a84>  // b.plast
    8e48:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8e4c:	fmov	d1, x0
    8e50:	ldr	d8, [sp, #24]
    8e54:	fcmp	d2, d1
    8e58:	b.ls	8e8c <PyNumber_FloorDivide@plt+0x5a5c>  // b.plast
    8e5c:	ldr	x19, [sp, #16]
    8e60:	ldp	x29, x30, [sp], #32
    8e64:	b	3100 <PyFloat_FromDouble@plt>
    8e68:	bl	3220 <PyErr_Occurred@plt>
    8e6c:	cbnz	x0, 8ed0 <PyNumber_FloorDivide@plt+0x5aa0>
    8e70:	bl	33b0 <__errno_location@plt>
    8e74:	mov	x19, x0
    8e78:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8e7c:	ldr	d0, [x0, #3456]
    8e80:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8e84:	str	wzr, [x19]
    8e88:	ldr	d2, [x0, #3464]
    8e8c:	ldr	w0, [x19]
    8e90:	cbz	w0, 8e5c <PyNumber_FloorDivide@plt+0x5a2c>
    8e94:	cmp	w0, #0x21
    8e98:	b.eq	8f14 <PyNumber_FloorDivide@plt+0x5ae4>  // b.none
    8e9c:	cmp	w0, #0x22
    8ea0:	b.ne	8f00 <PyNumber_FloorDivide@plt+0x5ad0>  // b.any
    8ea4:	fmov	d1, #1.000000000000000000e+00
    8ea8:	fcmpe	d2, d1
    8eac:	b.mi	8e5c <PyNumber_FloorDivide@plt+0x5a2c>  // b.first
    8eb0:	b	8eb8 <PyNumber_FloorDivide@plt+0x5a88>
    8eb4:	ldr	d8, [sp, #24]
    8eb8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8ebc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8ec0:	add	x1, x1, #0x9b0
    8ec4:	ldr	x0, [x0, #4016]
    8ec8:	ldr	x0, [x0]
    8ecc:	bl	3060 <PyErr_SetString@plt>
    8ed0:	mov	x0, #0x0                   	// #0
    8ed4:	ldr	x19, [sp, #16]
    8ed8:	ldp	x29, x30, [sp], #32
    8edc:	ret
    8ee0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8ee4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8ee8:	add	x1, x1, #0x998
    8eec:	ldr	x0, [x0, #3992]
    8ef0:	ldr	x0, [x0]
    8ef4:	bl	3060 <PyErr_SetString@plt>
    8ef8:	ldr	d8, [sp, #24]
    8efc:	b	8ed0 <PyNumber_FloorDivide@plt+0x5aa0>
    8f00:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8f04:	ldr	x0, [x0, #3992]
    8f08:	ldr	x0, [x0]
    8f0c:	bl	2f50 <PyErr_SetFromErrno@plt>
    8f10:	b	8ed0 <PyNumber_FloorDivide@plt+0x5aa0>
    8f14:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    8f18:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    8f1c:	add	x1, x1, #0x998
    8f20:	ldr	x0, [x0, #3992]
    8f24:	ldr	x0, [x0]
    8f28:	bl	3060 <PyErr_SetString@plt>
    8f2c:	b	8ed0 <PyNumber_FloorDivide@plt+0x5aa0>
    8f30:	stp	x29, x30, [sp, #-48]!
    8f34:	mov	x0, x1
    8f38:	mov	x29, sp
    8f3c:	stp	d8, d9, [sp, #16]
    8f40:	fmov	d9, #-1.000000000000000000e+00
    8f44:	bl	3250 <PyFloat_AsDouble@plt>
    8f48:	fcmp	d0, d9
    8f4c:	fmov	d8, d0
    8f50:	b.eq	8fbc <PyNumber_FloorDivide@plt+0x5b8c>  // b.none
    8f54:	bl	33b0 <__errno_location@plt>
    8f58:	fcmp	d8, #0.0
    8f5c:	fsqrt	d9, d8
    8f60:	str	wzr, [x0]
    8f64:	b.mi	8fd0 <PyNumber_FloorDivide@plt+0x5ba0>  // b.first
    8f68:	fcmp	d9, d9
    8f6c:	fccmp	d8, d8, #0x1, vs
    8f70:	b.vc	9028 <PyNumber_FloorDivide@plt+0x5bf8>
    8f74:	fabs	d1, d9
    8f78:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    8f7c:	fmov	d0, x1
    8f80:	fcmp	d1, d0
    8f84:	b.le	8f94 <PyNumber_FloorDivide@plt+0x5b64>
    8f88:	fabs	d8, d8
    8f8c:	fcmp	d8, d0
    8f90:	b.ls	9028 <PyNumber_FloorDivide@plt+0x5bf8>  // b.plast
    8f94:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    8f98:	fmov	d0, x1
    8f9c:	fcmp	d1, d0
    8fa0:	b.hi	8fac <PyNumber_FloorDivide@plt+0x5b7c>  // b.pmore
    8fa4:	ldr	w0, [x0]
    8fa8:	cbnz	w0, 8fe4 <PyNumber_FloorDivide@plt+0x5bb4>
    8fac:	fmov	d0, d9
    8fb0:	ldp	d8, d9, [sp, #16]
    8fb4:	ldp	x29, x30, [sp], #48
    8fb8:	b	3100 <PyFloat_FromDouble@plt>
    8fbc:	bl	3220 <PyErr_Occurred@plt>
    8fc0:	cbnz	x0, 9018 <PyNumber_FloorDivide@plt+0x5be8>
    8fc4:	bl	33b0 <__errno_location@plt>
    8fc8:	str	wzr, [x0]
    8fcc:	fsqrt	d9, d9
    8fd0:	fmov	d0, d8
    8fd4:	str	x0, [sp, #40]
    8fd8:	bl	3040 <sqrt@plt>
    8fdc:	ldr	x0, [sp, #40]
    8fe0:	b	8f68 <PyNumber_FloorDivide@plt+0x5b38>
    8fe4:	cmp	w0, #0x21
    8fe8:	b.eq	9028 <PyNumber_FloorDivide@plt+0x5bf8>  // b.none
    8fec:	cmp	w0, #0x22
    8ff0:	b.ne	9050 <PyNumber_FloorDivide@plt+0x5c20>  // b.any
    8ff4:	fmov	d0, #1.000000000000000000e+00
    8ff8:	fcmpe	d1, d0
    8ffc:	b.mi	8fac <PyNumber_FloorDivide@plt+0x5b7c>  // b.first
    9000:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9004:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9008:	add	x1, x1, #0x9b0
    900c:	ldr	x0, [x0, #4016]
    9010:	ldr	x0, [x0]
    9014:	bl	3060 <PyErr_SetString@plt>
    9018:	mov	x0, #0x0                   	// #0
    901c:	ldp	d8, d9, [sp, #16]
    9020:	ldp	x29, x30, [sp], #48
    9024:	ret
    9028:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    902c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9030:	add	x1, x1, #0x998
    9034:	ldr	x0, [x0, #3992]
    9038:	ldr	x0, [x0]
    903c:	bl	3060 <PyErr_SetString@plt>
    9040:	mov	x0, #0x0                   	// #0
    9044:	ldp	d8, d9, [sp, #16]
    9048:	ldp	x29, x30, [sp], #48
    904c:	ret
    9050:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9054:	ldr	x0, [x0, #3992]
    9058:	ldr	x0, [x0]
    905c:	bl	2f50 <PyErr_SetFromErrno@plt>
    9060:	b	9018 <PyNumber_FloorDivide@plt+0x5be8>
    9064:	nop
    9068:	stp	x29, x30, [sp, #-32]!
    906c:	mov	x0, x1
    9070:	mov	x29, sp
    9074:	str	x19, [sp, #16]
    9078:	bl	3250 <PyFloat_AsDouble@plt>
    907c:	fmov	d1, #-1.000000000000000000e+00
    9080:	fcmp	d0, d1
    9084:	b.eq	90f0 <PyNumber_FloorDivide@plt+0x5cc0>  // b.none
    9088:	str	d8, [sp, #24]
    908c:	fmov	d8, d0
    9090:	bl	33b0 <__errno_location@plt>
    9094:	fmov	d0, d8
    9098:	str	wzr, [x0]
    909c:	mov	x19, x0
    90a0:	bl	2f10 <asin@plt>
    90a4:	fcmp	d0, d0
    90a8:	fccmp	d8, d8, #0x1, vs
    90ac:	b.vc	9180 <PyNumber_FloorDivide@plt+0x5d50>
    90b0:	fabs	d2, d0
    90b4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    90b8:	fmov	d1, x0
    90bc:	fcmp	d2, d1
    90c0:	b.le	90d0 <PyNumber_FloorDivide@plt+0x5ca0>
    90c4:	fabs	d8, d8
    90c8:	fcmp	d8, d1
    90cc:	b.ls	9160 <PyNumber_FloorDivide@plt+0x5d30>  // b.plast
    90d0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    90d4:	fmov	d1, x0
    90d8:	ldr	d8, [sp, #24]
    90dc:	fcmp	d2, d1
    90e0:	b.ls	9114 <PyNumber_FloorDivide@plt+0x5ce4>  // b.plast
    90e4:	ldr	x19, [sp, #16]
    90e8:	ldp	x29, x30, [sp], #32
    90ec:	b	3100 <PyFloat_FromDouble@plt>
    90f0:	bl	3220 <PyErr_Occurred@plt>
    90f4:	cbnz	x0, 9150 <PyNumber_FloorDivide@plt+0x5d20>
    90f8:	bl	33b0 <__errno_location@plt>
    90fc:	mov	x19, x0
    9100:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9104:	ldr	d0, [x0, #3472]
    9108:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    910c:	str	wzr, [x19]
    9110:	ldr	d2, [x0, #3200]
    9114:	ldr	w0, [x19]
    9118:	cbz	w0, 90e4 <PyNumber_FloorDivide@plt+0x5cb4>
    911c:	cmp	w0, #0x21
    9120:	b.eq	9164 <PyNumber_FloorDivide@plt+0x5d34>  // b.none
    9124:	cmp	w0, #0x22
    9128:	b.ne	91a0 <PyNumber_FloorDivide@plt+0x5d70>  // b.any
    912c:	fmov	d1, #1.000000000000000000e+00
    9130:	fcmpe	d2, d1
    9134:	b.mi	90e4 <PyNumber_FloorDivide@plt+0x5cb4>  // b.first
    9138:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    913c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9140:	add	x1, x1, #0x9b0
    9144:	ldr	x0, [x0, #4016]
    9148:	ldr	x0, [x0]
    914c:	bl	3060 <PyErr_SetString@plt>
    9150:	mov	x0, #0x0                   	// #0
    9154:	ldr	x19, [sp, #16]
    9158:	ldp	x29, x30, [sp], #32
    915c:	ret
    9160:	ldr	d8, [sp, #24]
    9164:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9168:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    916c:	add	x1, x1, #0x998
    9170:	ldr	x0, [x0, #3992]
    9174:	ldr	x0, [x0]
    9178:	bl	3060 <PyErr_SetString@plt>
    917c:	b	9150 <PyNumber_FloorDivide@plt+0x5d20>
    9180:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9184:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9188:	add	x1, x1, #0x998
    918c:	ldr	x0, [x0, #3992]
    9190:	ldr	x0, [x0]
    9194:	bl	3060 <PyErr_SetString@plt>
    9198:	ldr	d8, [sp, #24]
    919c:	b	9150 <PyNumber_FloorDivide@plt+0x5d20>
    91a0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    91a4:	ldr	x0, [x0, #3992]
    91a8:	ldr	x0, [x0]
    91ac:	bl	2f50 <PyErr_SetFromErrno@plt>
    91b0:	b	9150 <PyNumber_FloorDivide@plt+0x5d20>
    91b4:	nop
    91b8:	stp	x29, x30, [sp, #-32]!
    91bc:	mov	x0, x1
    91c0:	mov	x29, sp
    91c4:	bl	3250 <PyFloat_AsDouble@plt>
    91c8:	fmov	d1, #-1.000000000000000000e+00
    91cc:	fcmp	d0, d1
    91d0:	b.eq	9224 <PyNumber_FloorDivide@plt+0x5df4>  // b.none
    91d4:	str	d8, [sp, #16]
    91d8:	fmov	d8, d0
    91dc:	bl	33b0 <__errno_location@plt>
    91e0:	fmov	d0, d8
    91e4:	str	wzr, [x0]
    91e8:	bl	31f0 <asinh@plt>
    91ec:	fcmp	d0, d0
    91f0:	fccmp	d8, d8, #0x1, vs
    91f4:	b.vc	9244 <PyNumber_FloorDivide@plt+0x5e14>
    91f8:	fabs	d2, d0
    91fc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9200:	fmov	d1, x0
    9204:	fcmp	d2, d1
    9208:	b.le	9218 <PyNumber_FloorDivide@plt+0x5de8>
    920c:	fabs	d8, d8
    9210:	fcmp	d8, d1
    9214:	b.ls	9244 <PyNumber_FloorDivide@plt+0x5e14>  // b.plast
    9218:	ldr	d8, [sp, #16]
    921c:	ldp	x29, x30, [sp], #32
    9220:	b	3100 <PyFloat_FromDouble@plt>
    9224:	bl	3220 <PyErr_Occurred@plt>
    9228:	cbnz	x0, 9260 <PyNumber_FloorDivide@plt+0x5e30>
    922c:	bl	33b0 <__errno_location@plt>
    9230:	str	wzr, [x0]
    9234:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9238:	ldp	x29, x30, [sp], #32
    923c:	ldr	d0, [x1, #3480]
    9240:	b	3100 <PyFloat_FromDouble@plt>
    9244:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9248:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    924c:	add	x1, x1, #0x998
    9250:	ldr	x0, [x0, #3992]
    9254:	ldr	x0, [x0]
    9258:	bl	3060 <PyErr_SetString@plt>
    925c:	ldr	d8, [sp, #16]
    9260:	mov	x0, #0x0                   	// #0
    9264:	ldp	x29, x30, [sp], #32
    9268:	ret
    926c:	nop
    9270:	stp	x29, x30, [sp, #-32]!
    9274:	mov	x0, x1
    9278:	mov	x29, sp
    927c:	bl	3250 <PyFloat_AsDouble@plt>
    9280:	fmov	d1, #-1.000000000000000000e+00
    9284:	fcmp	d0, d1
    9288:	b.eq	92dc <PyNumber_FloorDivide@plt+0x5eac>  // b.none
    928c:	str	d8, [sp, #16]
    9290:	fmov	d8, d0
    9294:	bl	33b0 <__errno_location@plt>
    9298:	fmov	d0, d8
    929c:	str	wzr, [x0]
    92a0:	bl	33d0 <atan@plt>
    92a4:	fcmp	d0, d0
    92a8:	fccmp	d8, d8, #0x1, vs
    92ac:	b.vc	92fc <PyNumber_FloorDivide@plt+0x5ecc>
    92b0:	fabs	d2, d0
    92b4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    92b8:	fmov	d1, x0
    92bc:	fcmp	d2, d1
    92c0:	b.le	92d0 <PyNumber_FloorDivide@plt+0x5ea0>
    92c4:	fabs	d8, d8
    92c8:	fcmp	d8, d1
    92cc:	b.ls	92fc <PyNumber_FloorDivide@plt+0x5ecc>  // b.plast
    92d0:	ldr	d8, [sp, #16]
    92d4:	ldp	x29, x30, [sp], #32
    92d8:	b	3100 <PyFloat_FromDouble@plt>
    92dc:	bl	3220 <PyErr_Occurred@plt>
    92e0:	cbnz	x0, 9318 <PyNumber_FloorDivide@plt+0x5ee8>
    92e4:	bl	33b0 <__errno_location@plt>
    92e8:	str	wzr, [x0]
    92ec:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    92f0:	ldp	x29, x30, [sp], #32
    92f4:	ldr	d0, [x1, #3488]
    92f8:	b	3100 <PyFloat_FromDouble@plt>
    92fc:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9300:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9304:	add	x1, x1, #0x998
    9308:	ldr	x0, [x0, #3992]
    930c:	ldr	x0, [x0]
    9310:	bl	3060 <PyErr_SetString@plt>
    9314:	ldr	d8, [sp, #16]
    9318:	mov	x0, #0x0                   	// #0
    931c:	ldp	x29, x30, [sp], #32
    9320:	ret
    9324:	nop
    9328:	stp	x29, x30, [sp, #-32]!
    932c:	mov	x0, x1
    9330:	mov	x29, sp
    9334:	str	d8, [sp, #24]
    9338:	bl	3250 <PyFloat_AsDouble@plt>
    933c:	fmov	d1, #-1.000000000000000000e+00
    9340:	fmov	d8, d0
    9344:	fcmp	d0, d1
    9348:	b.eq	93b8 <PyNumber_FloorDivide@plt+0x5f88>  // b.none
    934c:	str	x19, [sp, #16]
    9350:	bl	33b0 <__errno_location@plt>
    9354:	fmov	d0, d8
    9358:	str	wzr, [x0]
    935c:	mov	x19, x0
    9360:	bl	3330 <_Py_log1p@plt>
    9364:	fcmp	d0, d0
    9368:	fccmp	d8, d8, #0x1, vs
    936c:	b.vc	940c <PyNumber_FloorDivide@plt+0x5fdc>
    9370:	fabs	d2, d0
    9374:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9378:	fmov	d1, x0
    937c:	fcmp	d2, d1
    9380:	b.le	9390 <PyNumber_FloorDivide@plt+0x5f60>
    9384:	fabs	d8, d8
    9388:	fcmp	d8, d1
    938c:	b.ls	940c <PyNumber_FloorDivide@plt+0x5fdc>  // b.plast
    9390:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9394:	fmov	d1, x0
    9398:	fcmp	d2, d1
    939c:	b.hi	93a8 <PyNumber_FloorDivide@plt+0x5f78>  // b.pmore
    93a0:	ldr	w0, [x19]
    93a4:	cbnz	w0, 93d0 <PyNumber_FloorDivide@plt+0x5fa0>
    93a8:	ldr	x19, [sp, #16]
    93ac:	ldr	d8, [sp, #24]
    93b0:	ldp	x29, x30, [sp], #32
    93b4:	b	3100 <PyFloat_FromDouble@plt>
    93b8:	bl	3220 <PyErr_Occurred@plt>
    93bc:	cbz	x0, 934c <PyNumber_FloorDivide@plt+0x5f1c>
    93c0:	mov	x0, #0x0                   	// #0
    93c4:	ldr	d8, [sp, #24]
    93c8:	ldp	x29, x30, [sp], #32
    93cc:	ret
    93d0:	cmp	w0, #0x21
    93d4:	b.eq	940c <PyNumber_FloorDivide@plt+0x5fdc>  // b.none
    93d8:	cmp	w0, #0x22
    93dc:	b.ne	9438 <PyNumber_FloorDivide@plt+0x6008>  // b.any
    93e0:	fmov	d1, #1.000000000000000000e+00
    93e4:	fcmpe	d2, d1
    93e8:	b.mi	93a8 <PyNumber_FloorDivide@plt+0x5f78>  // b.first
    93ec:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    93f0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    93f4:	add	x1, x1, #0x9b0
    93f8:	ldr	x0, [x0, #4016]
    93fc:	ldr	x0, [x0]
    9400:	bl	3060 <PyErr_SetString@plt>
    9404:	ldr	x19, [sp, #16]
    9408:	b	93c0 <PyNumber_FloorDivide@plt+0x5f90>
    940c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9410:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9414:	add	x1, x1, #0x998
    9418:	ldr	x0, [x0, #3992]
    941c:	ldr	x0, [x0]
    9420:	bl	3060 <PyErr_SetString@plt>
    9424:	mov	x0, #0x0                   	// #0
    9428:	ldr	d8, [sp, #24]
    942c:	ldr	x19, [sp, #16]
    9430:	ldp	x29, x30, [sp], #32
    9434:	ret
    9438:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    943c:	ldr	x0, [x0, #3992]
    9440:	ldr	x0, [x0]
    9444:	bl	2f50 <PyErr_SetFromErrno@plt>
    9448:	ldr	x19, [sp, #16]
    944c:	b	93c0 <PyNumber_FloorDivide@plt+0x5f90>
    9450:	stp	x29, x30, [sp, #-64]!
    9454:	mov	x29, sp
    9458:	ldr	x0, [x1, #8]
    945c:	ldr	x0, [x0, #168]
    9460:	str	x19, [sp, #16]
    9464:	mov	x19, x1
    9468:	tbz	w0, #24, 9514 <PyNumber_FloorDivide@plt+0x60e4>
    946c:	ldr	x0, [x1, #16]
    9470:	cmp	x0, #0x0
    9474:	b.le	9610 <PyNumber_FloorDivide@plt+0x61e0>
    9478:	mov	x0, x1
    947c:	stp	d8, d9, [sp, #32]
    9480:	bl	32c0 <PyLong_AsDouble@plt>
    9484:	fmov	d9, #-1.000000000000000000e+00
    9488:	fmov	d8, d0
    948c:	fcmp	d0, d9
    9490:	b.ne	95d4 <PyNumber_FloorDivide@plt+0x61a4>  // b.any
    9494:	bl	3220 <PyErr_Occurred@plt>
    9498:	cbz	x0, 9660 <PyNumber_FloorDivide@plt+0x6230>
    949c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    94a0:	ldr	x0, [x0, #4016]
    94a4:	ldr	x0, [x0]
    94a8:	bl	30c0 <PyErr_ExceptionMatches@plt>
    94ac:	cbz	w0, 96ec <PyNumber_FloorDivide@plt+0x62bc>
    94b0:	str	d10, [sp, #24]
    94b4:	bl	3150 <PyErr_Clear@plt>
    94b8:	mov	x0, x19
    94bc:	add	x1, sp, #0x38
    94c0:	bl	3080 <_PyLong_Frexp@plt>
    94c4:	fcmp	d0, d9
    94c8:	fmov	d10, d0
    94cc:	b.eq	96e0 <PyNumber_FloorDivide@plt+0x62b0>  // b.none
    94d0:	fabs	d2, d0
    94d4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    94d8:	fmov	d1, x0
    94dc:	fcmp	d2, d1
    94e0:	b.ls	9778 <PyNumber_FloorDivide@plt+0x6348>  // b.plast
    94e4:	fcmp	d0, d0
    94e8:	b.vs	94f4 <PyNumber_FloorDivide@plt+0x60c4>
    94ec:	fcmpe	d0, #0.0
    94f0:	b.le	974c <PyNumber_FloorDivide@plt+0x631c>
    94f4:	ldr	d8, [sp, #56]
    94f8:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    94fc:	ldr	d0, [x0, #3496]
    9500:	scvtf	d8, d8
    9504:	fmul	d8, d8, d0
    9508:	fadd	d8, d8, d10
    950c:	ldr	d10, [sp, #24]
    9510:	b	95f8 <PyNumber_FloorDivide@plt+0x61c8>
    9514:	mov	x0, x1
    9518:	stp	d8, d9, [sp, #32]
    951c:	bl	3250 <PyFloat_AsDouble@plt>
    9520:	fmov	d1, #-1.000000000000000000e+00
    9524:	fmov	d8, d0
    9528:	fcmp	d0, d1
    952c:	b.eq	9700 <PyNumber_FloorDivide@plt+0x62d0>  // b.none
    9530:	fabs	d9, d0
    9534:	bl	33b0 <__errno_location@plt>
    9538:	str	wzr, [x0]
    953c:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    9540:	fmov	d0, x1
    9544:	mov	x19, x0
    9548:	fcmp	d9, d0
    954c:	b.ls	9678 <PyNumber_FloorDivide@plt+0x6248>  // b.plast
    9550:	fcmp	d8, d8
    9554:	b.vs	97ac <PyNumber_FloorDivide@plt+0x637c>
    9558:	fcmpe	d8, #0.0
    955c:	fmov	d1, d9
    9560:	b.le	9734 <PyNumber_FloorDivide@plt+0x6304>
    9564:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9568:	fmov	d0, x0
    956c:	fcmp	d1, d0
    9570:	b.le	957c <PyNumber_FloorDivide@plt+0x614c>
    9574:	fcmp	d9, d0
    9578:	b.ls	96a0 <PyNumber_FloorDivide@plt+0x6270>  // b.plast
    957c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9580:	fmov	d0, x0
    9584:	fcmp	d1, d0
    9588:	b.hi	95f8 <PyNumber_FloorDivide@plt+0x61c8>  // b.pmore
    958c:	ldr	w0, [x19]
    9590:	cbz	w0, 95f8 <PyNumber_FloorDivide@plt+0x61c8>
    9594:	cmp	w0, #0x21
    9598:	b.eq	96a0 <PyNumber_FloorDivide@plt+0x6270>  // b.none
    959c:	cmp	w0, #0x22
    95a0:	b.ne	9764 <PyNumber_FloorDivide@plt+0x6334>  // b.any
    95a4:	fmov	d0, #1.000000000000000000e+00
    95a8:	fcmpe	d1, d0
    95ac:	b.mi	95f8 <PyNumber_FloorDivide@plt+0x61c8>  // b.first
    95b0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    95b4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    95b8:	add	x1, x1, #0x9b0
    95bc:	ldr	x0, [x0, #4016]
    95c0:	ldr	x0, [x0]
    95c4:	bl	3060 <PyErr_SetString@plt>
    95c8:	mov	x0, #0x0                   	// #0
    95cc:	ldp	d8, d9, [sp, #32]
    95d0:	b	962c <PyNumber_FloorDivide@plt+0x61fc>
    95d4:	fabs	d2, d0
    95d8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    95dc:	fmov	d1, x0
    95e0:	fcmp	d2, d1
    95e4:	b.ls	9638 <PyNumber_FloorDivide@plt+0x6208>  // b.plast
    95e8:	fcmp	d0, d0
    95ec:	b.vs	95f8 <PyNumber_FloorDivide@plt+0x61c8>
    95f0:	fcmpe	d0, #0.0
    95f4:	b.le	9660 <PyNumber_FloorDivide@plt+0x6230>
    95f8:	fmov	d0, d8
    95fc:	bl	3100 <PyFloat_FromDouble@plt>
    9600:	ldr	x19, [sp, #16]
    9604:	ldp	d8, d9, [sp, #32]
    9608:	ldp	x29, x30, [sp], #64
    960c:	ret
    9610:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9614:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9618:	add	x1, x1, #0x998
    961c:	ldr	x0, [x0, #3992]
    9620:	ldr	x0, [x0]
    9624:	bl	3060 <PyErr_SetString@plt>
    9628:	mov	x0, #0x0                   	// #0
    962c:	ldr	x19, [sp, #16]
    9630:	ldp	x29, x30, [sp], #64
    9634:	ret
    9638:	fcmpe	d0, #0.0
    963c:	b.gt	9740 <PyNumber_FloorDivide@plt+0x6310>
    9640:	bl	33b0 <__errno_location@plt>
    9644:	fcmp	d8, #0.0
    9648:	mov	w1, #0x21                  	// #33
    964c:	str	w1, [x0]
    9650:	b.ne	9728 <PyNumber_FloorDivide@plt+0x62f8>  // b.any
    9654:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    9658:	fmov	d8, x0
    965c:	b	95f8 <PyNumber_FloorDivide@plt+0x61c8>
    9660:	bl	33b0 <__errno_location@plt>
    9664:	mov	w2, #0x21                  	// #33
    9668:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    966c:	fmov	d8, x1
    9670:	str	w2, [x0]
    9674:	b	95f8 <PyNumber_FloorDivide@plt+0x61c8>
    9678:	fcmpe	d8, #0.0
    967c:	b.le	96c4 <PyNumber_FloorDivide@plt+0x6294>
    9680:	fmov	d0, d8
    9684:	bl	3010 <log10@plt>
    9688:	fcmp	d0, d0
    968c:	fabs	d1, d0
    9690:	fccmp	d8, d8, #0x1, vs
    9694:	fmov	d8, d0
    9698:	b.vs	9564 <PyNumber_FloorDivide@plt+0x6134>
    969c:	nop
    96a0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    96a4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    96a8:	add	x1, x1, #0x998
    96ac:	ldr	x0, [x0, #3992]
    96b0:	ldr	x0, [x0]
    96b4:	bl	3060 <PyErr_SetString@plt>
    96b8:	mov	x0, #0x0                   	// #0
    96bc:	ldp	d8, d9, [sp, #32]
    96c0:	b	962c <PyNumber_FloorDivide@plt+0x61fc>
    96c4:	fcmp	d8, #0.0
    96c8:	mov	w0, #0x21                  	// #33
    96cc:	str	w0, [x19]
    96d0:	b.ne	9720 <PyNumber_FloorDivide@plt+0x62f0>  // b.any
    96d4:	fcmp	d9, d0
    96d8:	b.ls	96a0 <PyNumber_FloorDivide@plt+0x6270>  // b.plast
    96dc:	b	9654 <PyNumber_FloorDivide@plt+0x6224>
    96e0:	bl	3220 <PyErr_Occurred@plt>
    96e4:	cbz	x0, 974c <PyNumber_FloorDivide@plt+0x631c>
    96e8:	ldr	d10, [sp, #24]
    96ec:	mov	x0, #0x0                   	// #0
    96f0:	ldr	x19, [sp, #16]
    96f4:	ldp	d8, d9, [sp, #32]
    96f8:	ldp	x29, x30, [sp], #64
    96fc:	ret
    9700:	bl	3220 <PyErr_Occurred@plt>
    9704:	mov	x1, x0
    9708:	mov	x0, #0x0                   	// #0
    970c:	cbnz	x1, 9600 <PyNumber_FloorDivide@plt+0x61d0>
    9710:	bl	33b0 <__errno_location@plt>
    9714:	mov	w1, #0x21                  	// #33
    9718:	str	w1, [x0]
    971c:	b	96a0 <PyNumber_FloorDivide@plt+0x6270>
    9720:	fcmp	d8, d8
    9724:	b.vc	96a0 <PyNumber_FloorDivide@plt+0x6270>
    9728:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    972c:	fmov	d8, x0
    9730:	b	95f8 <PyNumber_FloorDivide@plt+0x61c8>
    9734:	mov	w0, #0x21                  	// #33
    9738:	str	w0, [x19]
    973c:	b	96a0 <PyNumber_FloorDivide@plt+0x6270>
    9740:	bl	3010 <log10@plt>
    9744:	fmov	d8, d0
    9748:	b	95f8 <PyNumber_FloorDivide@plt+0x61c8>
    974c:	bl	33b0 <__errno_location@plt>
    9750:	mov	w2, #0x21                  	// #33
    9754:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    9758:	fmov	d10, x1
    975c:	str	w2, [x0]
    9760:	b	94f4 <PyNumber_FloorDivide@plt+0x60c4>
    9764:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9768:	ldr	x0, [x0, #3992]
    976c:	ldr	x0, [x0]
    9770:	bl	2f50 <PyErr_SetFromErrno@plt>
    9774:	b	96ec <PyNumber_FloorDivide@plt+0x62bc>
    9778:	fcmpe	d0, #0.0
    977c:	b.le	978c <PyNumber_FloorDivide@plt+0x635c>
    9780:	bl	3010 <log10@plt>
    9784:	fmov	d10, d0
    9788:	b	94f4 <PyNumber_FloorDivide@plt+0x60c4>
    978c:	bl	33b0 <__errno_location@plt>
    9790:	fcmp	d10, #0.0
    9794:	mov	w1, #0x21                  	// #33
    9798:	str	w1, [x0]
    979c:	b.ne	97b4 <PyNumber_FloorDivide@plt+0x6384>  // b.any
    97a0:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    97a4:	fmov	d10, x0
    97a8:	b	94f4 <PyNumber_FloorDivide@plt+0x60c4>
    97ac:	fmov	d1, d9
    97b0:	b	9564 <PyNumber_FloorDivide@plt+0x6134>
    97b4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    97b8:	fmov	d10, x0
    97bc:	b	94f4 <PyNumber_FloorDivide@plt+0x60c4>
    97c0:	stp	x29, x30, [sp, #-64]!
    97c4:	mov	x29, sp
    97c8:	ldr	x0, [x1, #8]
    97cc:	ldr	x0, [x0, #168]
    97d0:	str	x19, [sp, #16]
    97d4:	mov	x19, x1
    97d8:	tbz	w0, #24, 9878 <PyNumber_FloorDivide@plt+0x6448>
    97dc:	ldr	x0, [x1, #16]
    97e0:	cmp	x0, #0x0
    97e4:	b.le	9978 <PyNumber_FloorDivide@plt+0x6548>
    97e8:	mov	x0, x1
    97ec:	stp	d8, d9, [sp, #32]
    97f0:	bl	32c0 <PyLong_AsDouble@plt>
    97f4:	fmov	d9, #-1.000000000000000000e+00
    97f8:	fmov	d8, d0
    97fc:	fcmp	d0, d9
    9800:	b.ne	9938 <PyNumber_FloorDivide@plt+0x6508>  // b.any
    9804:	bl	3220 <PyErr_Occurred@plt>
    9808:	cbz	x0, 9a0c <PyNumber_FloorDivide@plt+0x65dc>
    980c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9810:	ldr	x0, [x0, #4016]
    9814:	ldr	x0, [x0]
    9818:	bl	30c0 <PyErr_ExceptionMatches@plt>
    981c:	cbz	w0, 9a30 <PyNumber_FloorDivide@plt+0x6600>
    9820:	str	d10, [sp, #24]
    9824:	bl	3150 <PyErr_Clear@plt>
    9828:	mov	x0, x19
    982c:	add	x1, sp, #0x38
    9830:	bl	3080 <_PyLong_Frexp@plt>
    9834:	fcmp	d0, d9
    9838:	fmov	d10, d0
    983c:	b.eq	9a24 <PyNumber_FloorDivide@plt+0x65f4>  // b.none
    9840:	fabs	d2, d0
    9844:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9848:	fmov	d1, x0
    984c:	fcmp	d2, d1
    9850:	b.ls	9adc <PyNumber_FloorDivide@plt+0x66ac>  // b.plast
    9854:	fcmp	d0, d0
    9858:	b.vs	9864 <PyNumber_FloorDivide@plt+0x6434>
    985c:	fcmpe	d0, #0.0
    9860:	b.le	9ac4 <PyNumber_FloorDivide@plt+0x6694>
    9864:	ldr	d8, [sp, #56]
    9868:	scvtf	d8, d8
    986c:	fadd	d8, d8, d10
    9870:	ldr	d10, [sp, #24]
    9874:	b	9960 <PyNumber_FloorDivide@plt+0x6530>
    9878:	mov	x0, x1
    987c:	stp	d8, d9, [sp, #32]
    9880:	bl	3250 <PyFloat_AsDouble@plt>
    9884:	fmov	d1, #-1.000000000000000000e+00
    9888:	fmov	d8, d0
    988c:	fcmp	d0, d1
    9890:	b.eq	9a44 <PyNumber_FloorDivide@plt+0x6614>  // b.none
    9894:	fabs	d9, d0
    9898:	bl	33b0 <__errno_location@plt>
    989c:	str	wzr, [x0]
    98a0:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    98a4:	fmov	d0, x1
    98a8:	mov	x19, x0
    98ac:	fcmp	d9, d0
    98b0:	b.ls	99c8 <PyNumber_FloorDivide@plt+0x6598>  // b.plast
    98b4:	fcmp	d8, d8
    98b8:	b.vs	9b18 <PyNumber_FloorDivide@plt+0x66e8>
    98bc:	fcmpe	d8, #0.0
    98c0:	fmov	d1, d9
    98c4:	b.le	9a80 <PyNumber_FloorDivide@plt+0x6650>
    98c8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    98cc:	fmov	d0, x0
    98d0:	fcmp	d1, d0
    98d4:	b.le	98e0 <PyNumber_FloorDivide@plt+0x64b0>
    98d8:	fcmp	d9, d0
    98dc:	b.ls	99e8 <PyNumber_FloorDivide@plt+0x65b8>  // b.plast
    98e0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    98e4:	fmov	d0, x0
    98e8:	fcmp	d1, d0
    98ec:	b.hi	9960 <PyNumber_FloorDivide@plt+0x6530>  // b.pmore
    98f0:	ldr	w0, [x19]
    98f4:	cbz	w0, 9960 <PyNumber_FloorDivide@plt+0x6530>
    98f8:	cmp	w0, #0x21
    98fc:	b.eq	99e8 <PyNumber_FloorDivide@plt+0x65b8>  // b.none
    9900:	cmp	w0, #0x22
    9904:	b.ne	9b04 <PyNumber_FloorDivide@plt+0x66d4>  // b.any
    9908:	fmov	d0, #1.000000000000000000e+00
    990c:	fcmpe	d1, d0
    9910:	b.mi	9960 <PyNumber_FloorDivide@plt+0x6530>  // b.first
    9914:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9918:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    991c:	add	x1, x1, #0x9b0
    9920:	ldr	x0, [x0, #4016]
    9924:	ldr	x0, [x0]
    9928:	bl	3060 <PyErr_SetString@plt>
    992c:	mov	x0, #0x0                   	// #0
    9930:	ldp	d8, d9, [sp, #32]
    9934:	b	9994 <PyNumber_FloorDivide@plt+0x6564>
    9938:	fabs	d2, d0
    993c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9940:	fmov	d1, x0
    9944:	fcmp	d2, d1
    9948:	b.ls	99a0 <PyNumber_FloorDivide@plt+0x6570>  // b.plast
    994c:	fcmp	d0, d0
    9950:	b.vs	9960 <PyNumber_FloorDivide@plt+0x6530>
    9954:	fcmpe	d0, #0.0
    9958:	b.le	9a0c <PyNumber_FloorDivide@plt+0x65dc>
    995c:	nop
    9960:	fmov	d0, d8
    9964:	bl	3100 <PyFloat_FromDouble@plt>
    9968:	ldr	x19, [sp, #16]
    996c:	ldp	d8, d9, [sp, #32]
    9970:	ldp	x29, x30, [sp], #64
    9974:	ret
    9978:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    997c:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9980:	add	x1, x1, #0x998
    9984:	ldr	x0, [x0, #3992]
    9988:	ldr	x0, [x0]
    998c:	bl	3060 <PyErr_SetString@plt>
    9990:	mov	x0, #0x0                   	// #0
    9994:	ldr	x19, [sp, #16]
    9998:	ldp	x29, x30, [sp], #64
    999c:	ret
    99a0:	fcmpe	d0, #0.0
    99a4:	b.gt	9a98 <PyNumber_FloorDivide@plt+0x6668>
    99a8:	bl	33b0 <__errno_location@plt>
    99ac:	fcmp	d8, #0.0
    99b0:	b.ne	9a0c <PyNumber_FloorDivide@plt+0x65dc>  // b.any
    99b4:	mov	w2, #0x21                  	// #33
    99b8:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
    99bc:	fmov	d8, x1
    99c0:	str	w2, [x0]
    99c4:	b	9960 <PyNumber_FloorDivide@plt+0x6530>
    99c8:	fcmpe	d8, #0.0
    99cc:	b.gt	9aa4 <PyNumber_FloorDivide@plt+0x6674>
    99d0:	fcmp	d8, #0.0
    99d4:	b.ne	9a64 <PyNumber_FloorDivide@plt+0x6634>  // b.any
    99d8:	fcmp	d9, d0
    99dc:	mov	w0, #0x21                  	// #33
    99e0:	str	w0, [x19]
    99e4:	b.hi	9a8c <PyNumber_FloorDivide@plt+0x665c>  // b.pmore
    99e8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    99ec:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    99f0:	add	x1, x1, #0x998
    99f4:	ldr	x0, [x0, #3992]
    99f8:	ldr	x0, [x0]
    99fc:	bl	3060 <PyErr_SetString@plt>
    9a00:	mov	x0, #0x0                   	// #0
    9a04:	ldp	d8, d9, [sp, #32]
    9a08:	b	9994 <PyNumber_FloorDivide@plt+0x6564>
    9a0c:	bl	33b0 <__errno_location@plt>
    9a10:	mov	w2, #0x21                  	// #33
    9a14:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    9a18:	fmov	d8, x1
    9a1c:	str	w2, [x0]
    9a20:	b	9960 <PyNumber_FloorDivide@plt+0x6530>
    9a24:	bl	3220 <PyErr_Occurred@plt>
    9a28:	cbz	x0, 9ac4 <PyNumber_FloorDivide@plt+0x6694>
    9a2c:	ldr	d10, [sp, #24]
    9a30:	mov	x0, #0x0                   	// #0
    9a34:	ldr	x19, [sp, #16]
    9a38:	ldp	d8, d9, [sp, #32]
    9a3c:	ldp	x29, x30, [sp], #64
    9a40:	ret
    9a44:	bl	3220 <PyErr_Occurred@plt>
    9a48:	mov	x1, x0
    9a4c:	mov	x0, #0x0                   	// #0
    9a50:	cbnz	x1, 9968 <PyNumber_FloorDivide@plt+0x6538>
    9a54:	bl	33b0 <__errno_location@plt>
    9a58:	mov	w1, #0x21                  	// #33
    9a5c:	str	w1, [x0]
    9a60:	b	99e8 <PyNumber_FloorDivide@plt+0x65b8>
    9a64:	fcmp	d8, d8
    9a68:	mov	w0, #0x21                  	// #33
    9a6c:	str	w0, [x19]
    9a70:	b.vc	99e8 <PyNumber_FloorDivide@plt+0x65b8>
    9a74:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    9a78:	fmov	d8, x0
    9a7c:	b	9960 <PyNumber_FloorDivide@plt+0x6530>
    9a80:	mov	w0, #0x21                  	// #33
    9a84:	str	w0, [x19]
    9a88:	b	99e8 <PyNumber_FloorDivide@plt+0x65b8>
    9a8c:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    9a90:	fmov	d8, x0
    9a94:	b	9960 <PyNumber_FloorDivide@plt+0x6530>
    9a98:	bl	2f00 <log2@plt>
    9a9c:	fmov	d8, d0
    9aa0:	b	9960 <PyNumber_FloorDivide@plt+0x6530>
    9aa4:	fmov	d0, d8
    9aa8:	bl	2f00 <log2@plt>
    9aac:	fcmp	d0, d0
    9ab0:	fabs	d1, d0
    9ab4:	fccmp	d8, d8, #0x1, vs
    9ab8:	fmov	d8, d0
    9abc:	b.vs	98c8 <PyNumber_FloorDivide@plt+0x6498>
    9ac0:	b	99e8 <PyNumber_FloorDivide@plt+0x65b8>
    9ac4:	bl	33b0 <__errno_location@plt>
    9ac8:	mov	w2, #0x21                  	// #33
    9acc:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    9ad0:	fmov	d10, x1
    9ad4:	str	w2, [x0]
    9ad8:	b	9864 <PyNumber_FloorDivide@plt+0x6434>
    9adc:	fcmpe	d0, #0.0
    9ae0:	b.gt	9b20 <PyNumber_FloorDivide@plt+0x66f0>
    9ae4:	bl	33b0 <__errno_location@plt>
    9ae8:	fcmp	d10, #0.0
    9aec:	b.ne	9ac4 <PyNumber_FloorDivide@plt+0x6694>  // b.any
    9af0:	mov	w2, #0x21                  	// #33
    9af4:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
    9af8:	fmov	d10, x1
    9afc:	str	w2, [x0]
    9b00:	b	9864 <PyNumber_FloorDivide@plt+0x6434>
    9b04:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9b08:	ldr	x0, [x0, #3992]
    9b0c:	ldr	x0, [x0]
    9b10:	bl	2f50 <PyErr_SetFromErrno@plt>
    9b14:	b	9a30 <PyNumber_FloorDivide@plt+0x6600>
    9b18:	fmov	d1, d9
    9b1c:	b	98c8 <PyNumber_FloorDivide@plt+0x6498>
    9b20:	bl	2f00 <log2@plt>
    9b24:	fmov	d10, d0
    9b28:	b	9864 <PyNumber_FloorDivide@plt+0x6434>
    9b2c:	nop
    9b30:	stp	x29, x30, [sp, #-64]!
    9b34:	mov	x29, sp
    9b38:	stp	x19, x20, [sp, #16]
    9b3c:	mov	x20, x1
    9b40:	stp	x21, x22, [sp, #32]
    9b44:	mov	x21, x2
    9b48:	mov	w22, w3
    9b4c:	str	d8, [sp, #48]
    9b50:	bl	3250 <PyFloat_AsDouble@plt>
    9b54:	fmov	d1, #-1.000000000000000000e+00
    9b58:	fmov	d8, d0
    9b5c:	fcmp	d0, d1
    9b60:	b.eq	9bd4 <PyNumber_FloorDivide@plt+0x67a4>  // b.none
    9b64:	bl	33b0 <__errno_location@plt>
    9b68:	fmov	d0, d8
    9b6c:	str	wzr, [x0]
    9b70:	mov	x19, x0
    9b74:	blr	x20
    9b78:	fcmp	d0, d0
    9b7c:	fccmp	d8, d8, #0x1, vs
    9b80:	b.vc	9c30 <PyNumber_FloorDivide@plt+0x6800>
    9b84:	fabs	d2, d0
    9b88:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9b8c:	fmov	d1, x0
    9b90:	fcmp	d2, d1
    9b94:	b.le	9ba4 <PyNumber_FloorDivide@plt+0x6774>
    9b98:	fabs	d8, d8
    9b9c:	fcmp	d8, d1
    9ba0:	b.ls	9c2c <PyNumber_FloorDivide@plt+0x67fc>  // b.plast
    9ba4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9ba8:	fmov	d1, x0
    9bac:	fcmp	d2, d1
    9bb0:	b.hi	9bbc <PyNumber_FloorDivide@plt+0x678c>  // b.pmore
    9bb4:	ldr	w0, [x19]
    9bb8:	cbnz	w0, 9bf4 <PyNumber_FloorDivide@plt+0x67c4>
    9bbc:	mov	x16, x21
    9bc0:	ldr	d8, [sp, #48]
    9bc4:	ldp	x19, x20, [sp, #16]
    9bc8:	ldp	x21, x22, [sp, #32]
    9bcc:	ldp	x29, x30, [sp], #64
    9bd0:	br	x16
    9bd4:	bl	3220 <PyErr_Occurred@plt>
    9bd8:	cbz	x0, 9b64 <PyNumber_FloorDivide@plt+0x6734>
    9bdc:	mov	x0, #0x0                   	// #0
    9be0:	ldr	d8, [sp, #48]
    9be4:	ldp	x19, x20, [sp, #16]
    9be8:	ldp	x21, x22, [sp, #32]
    9bec:	ldp	x29, x30, [sp], #64
    9bf0:	ret
    9bf4:	cmp	w0, #0x21
    9bf8:	b.eq	9c30 <PyNumber_FloorDivide@plt+0x6800>  // b.none
    9bfc:	cmp	w0, #0x22
    9c00:	b.ne	9c60 <PyNumber_FloorDivide@plt+0x6830>  // b.any
    9c04:	fmov	d1, #1.000000000000000000e+00
    9c08:	fcmpe	d2, d1
    9c0c:	b.mi	9bbc <PyNumber_FloorDivide@plt+0x678c>  // b.first
    9c10:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9c14:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9c18:	add	x1, x1, #0x9b0
    9c1c:	ldr	x0, [x0, #4016]
    9c20:	ldr	x0, [x0]
    9c24:	bl	3060 <PyErr_SetString@plt>
    9c28:	b	9bdc <PyNumber_FloorDivide@plt+0x67ac>
    9c2c:	cbnz	w22, 9c10 <PyNumber_FloorDivide@plt+0x67e0>
    9c30:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9c34:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9c38:	add	x1, x1, #0x998
    9c3c:	ldr	x0, [x0, #3992]
    9c40:	ldr	x0, [x0]
    9c44:	bl	3060 <PyErr_SetString@plt>
    9c48:	mov	x0, #0x0                   	// #0
    9c4c:	ldr	d8, [sp, #48]
    9c50:	ldp	x19, x20, [sp, #16]
    9c54:	ldp	x21, x22, [sp, #32]
    9c58:	ldp	x29, x30, [sp], #64
    9c5c:	ret
    9c60:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9c64:	ldr	x0, [x0, #3992]
    9c68:	ldr	x0, [x0]
    9c6c:	bl	2f50 <PyErr_SetFromErrno@plt>
    9c70:	b	9bdc <PyNumber_FloorDivide@plt+0x67ac>
    9c74:	nop
    9c78:	stp	x29, x30, [sp, #-48]!
    9c7c:	adrp	x0, 1f000 <_Py_log1p@@Base+0x14908>
    9c80:	mov	x29, sp
    9c84:	stp	x19, x20, [sp, #16]
    9c88:	mov	x20, x1
    9c8c:	add	x1, x0, #0x2c0
    9c90:	add	x1, x1, #0x98
    9c94:	mov	x0, x20
    9c98:	str	x21, [sp, #32]
    9c9c:	bl	3090 <_PyObject_LookupSpecial@plt>
    9ca0:	cbz	x0, 9d4c <PyNumber_FloorDivide@plt+0x691c>
    9ca4:	ldr	x1, [x0, #8]
    9ca8:	mov	x19, x0
    9cac:	ldr	x2, [x1, #168]
    9cb0:	ldr	x1, [x1, #56]
    9cb4:	tbz	w2, #11, 9d08 <PyNumber_FloorDivide@plt+0x68d8>
    9cb8:	ldr	x4, [x0, x1]
    9cbc:	cbz	x4, 9d08 <PyNumber_FloorDivide@plt+0x68d8>
    9cc0:	mov	x3, #0x0                   	// #0
    9cc4:	mov	x2, #0x0                   	// #0
    9cc8:	mov	x1, #0x0                   	// #0
    9ccc:	blr	x4
    9cd0:	mov	x2, #0x0                   	// #0
    9cd4:	mov	x1, x0
    9cd8:	mov	x0, x19
    9cdc:	bl	3240 <_Py_CheckFunctionResult@plt>
    9ce0:	ldr	x1, [x19]
    9ce4:	mov	x21, x0
    9ce8:	sub	x1, x1, #0x1
    9cec:	str	x1, [x19]
    9cf0:	cbz	x1, 9d30 <PyNumber_FloorDivide@plt+0x6900>
    9cf4:	mov	x0, x21
    9cf8:	ldp	x19, x20, [sp, #16]
    9cfc:	ldr	x21, [sp, #32]
    9d00:	ldp	x29, x30, [sp], #48
    9d04:	ret
    9d08:	mov	x1, #0x0                   	// #0
    9d0c:	mov	x0, x19
    9d10:	mov	x3, #0x0                   	// #0
    9d14:	mov	x2, #0x0                   	// #0
    9d18:	bl	3390 <_PyObject_MakeTpCall@plt>
    9d1c:	mov	x21, x0
    9d20:	ldr	x1, [x19]
    9d24:	sub	x1, x1, #0x1
    9d28:	str	x1, [x19]
    9d2c:	cbnz	x1, 9cf4 <PyNumber_FloorDivide@plt+0x68c4>
    9d30:	mov	x0, x19
    9d34:	bl	2fb0 <_Py_Dealloc@plt>
    9d38:	mov	x0, x21
    9d3c:	ldp	x19, x20, [sp, #16]
    9d40:	ldr	x21, [sp, #32]
    9d44:	ldp	x29, x30, [sp], #48
    9d48:	ret
    9d4c:	mov	x21, #0x0                   	// #0
    9d50:	bl	3220 <PyErr_Occurred@plt>
    9d54:	cbnz	x0, 9cf4 <PyNumber_FloorDivide@plt+0x68c4>
    9d58:	mov	x0, x20
    9d5c:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    9d60:	adrp	x1, 1e000 <_Py_log1p@@Base+0x13908>
    9d64:	mov	w3, #0x0                   	// #0
    9d68:	ldp	x19, x20, [sp, #16]
    9d6c:	ldr	x21, [sp, #32]
    9d70:	ldp	x29, x30, [sp], #48
    9d74:	ldr	x2, [x2, #3968]
    9d78:	ldr	x1, [x1, #4040]
    9d7c:	b	9b30 <PyNumber_FloorDivide@plt+0x6700>
    9d80:	stp	x29, x30, [sp, #-48]!
    9d84:	adrp	x0, 1f000 <_Py_log1p@@Base+0x14908>
    9d88:	mov	x29, sp
    9d8c:	stp	x19, x20, [sp, #16]
    9d90:	mov	x20, x1
    9d94:	add	x1, x0, #0x2c0
    9d98:	add	x1, x1, #0xb0
    9d9c:	mov	x0, x20
    9da0:	str	x21, [sp, #32]
    9da4:	bl	3090 <_PyObject_LookupSpecial@plt>
    9da8:	cbz	x0, 9e54 <PyNumber_FloorDivide@plt+0x6a24>
    9dac:	ldr	x1, [x0, #8]
    9db0:	mov	x19, x0
    9db4:	ldr	x2, [x1, #168]
    9db8:	ldr	x1, [x1, #56]
    9dbc:	tbz	w2, #11, 9e10 <PyNumber_FloorDivide@plt+0x69e0>
    9dc0:	ldr	x4, [x0, x1]
    9dc4:	cbz	x4, 9e10 <PyNumber_FloorDivide@plt+0x69e0>
    9dc8:	mov	x3, #0x0                   	// #0
    9dcc:	mov	x2, #0x0                   	// #0
    9dd0:	mov	x1, #0x0                   	// #0
    9dd4:	blr	x4
    9dd8:	mov	x2, #0x0                   	// #0
    9ddc:	mov	x1, x0
    9de0:	mov	x0, x19
    9de4:	bl	3240 <_Py_CheckFunctionResult@plt>
    9de8:	ldr	x1, [x19]
    9dec:	mov	x21, x0
    9df0:	sub	x1, x1, #0x1
    9df4:	str	x1, [x19]
    9df8:	cbz	x1, 9e38 <PyNumber_FloorDivide@plt+0x6a08>
    9dfc:	mov	x0, x21
    9e00:	ldp	x19, x20, [sp, #16]
    9e04:	ldr	x21, [sp, #32]
    9e08:	ldp	x29, x30, [sp], #48
    9e0c:	ret
    9e10:	mov	x1, #0x0                   	// #0
    9e14:	mov	x0, x19
    9e18:	mov	x3, #0x0                   	// #0
    9e1c:	mov	x2, #0x0                   	// #0
    9e20:	bl	3390 <_PyObject_MakeTpCall@plt>
    9e24:	mov	x21, x0
    9e28:	ldr	x1, [x19]
    9e2c:	sub	x1, x1, #0x1
    9e30:	str	x1, [x19]
    9e34:	cbnz	x1, 9dfc <PyNumber_FloorDivide@plt+0x69cc>
    9e38:	mov	x0, x19
    9e3c:	bl	2fb0 <_Py_Dealloc@plt>
    9e40:	mov	x0, x21
    9e44:	ldp	x19, x20, [sp, #16]
    9e48:	ldr	x21, [sp, #32]
    9e4c:	ldp	x29, x30, [sp], #48
    9e50:	ret
    9e54:	mov	x21, #0x0                   	// #0
    9e58:	bl	3220 <PyErr_Occurred@plt>
    9e5c:	cbnz	x0, 9dfc <PyNumber_FloorDivide@plt+0x69cc>
    9e60:	mov	x0, x20
    9e64:	adrp	x2, 1e000 <_Py_log1p@@Base+0x13908>
    9e68:	adrp	x1, 1e000 <_Py_log1p@@Base+0x13908>
    9e6c:	mov	w3, #0x0                   	// #0
    9e70:	ldp	x19, x20, [sp, #16]
    9e74:	ldr	x21, [sp, #32]
    9e78:	ldp	x29, x30, [sp], #48
    9e7c:	ldr	x2, [x2, #3968]
    9e80:	ldr	x1, [x1, #4048]
    9e84:	b	9b30 <PyNumber_FloorDivide@plt+0x6700>
    9e88:	stp	x29, x30, [sp, #-96]!
    9e8c:	mov	x0, x1
    9e90:	mov	x29, sp
    9e94:	ldr	x1, [x1, #16]
    9e98:	stp	x19, x20, [sp, #16]
    9e9c:	str	xzr, [sp, #80]
    9ea0:	cmp	x1, #0x1
    9ea4:	b.eq	9edc <PyNumber_FloorDivide@plt+0x6aac>  // b.none
    9ea8:	cmp	x1, #0x2
    9eac:	b.eq	9fec <PyNumber_FloorDivide@plt+0x6bbc>  // b.none
    9eb0:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9eb4:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9eb8:	mov	x19, #0x0                   	// #0
    9ebc:	add	x1, x1, #0xa40
    9ec0:	ldr	x0, [x0, #4000]
    9ec4:	ldr	x0, [x0]
    9ec8:	bl	3060 <PyErr_SetString@plt>
    9ecc:	mov	x0, x19
    9ed0:	ldp	x19, x20, [sp, #16]
    9ed4:	ldp	x29, x30, [sp], #96
    9ed8:	ret
    9edc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9ee0:	add	x2, sp, #0x48
    9ee4:	add	x1, x1, #0xa30
    9ee8:	bl	3260 <PyArg_ParseTuple@plt>
    9eec:	cbz	w0, a004 <PyNumber_FloorDivide@plt+0x6bd4>
    9ef0:	ldp	x19, x20, [sp, #72]
    9ef4:	stp	d8, d9, [sp, #48]
    9ef8:	ldr	x0, [x19, #8]
    9efc:	ldr	x0, [x0, #168]
    9f00:	str	x21, [sp, #32]
    9f04:	tbz	w0, #24, a044 <PyNumber_FloorDivide@plt+0x6c14>
    9f08:	ldr	x0, [x19, #16]
    9f0c:	cmp	x0, #0x0
    9f10:	b.le	a10c <PyNumber_FloorDivide@plt+0x6cdc>
    9f14:	mov	x0, x19
    9f18:	bl	32c0 <PyLong_AsDouble@plt>
    9f1c:	fmov	d9, #-1.000000000000000000e+00
    9f20:	fmov	d8, d0
    9f24:	fcmp	d0, d9
    9f28:	b.eq	a018 <PyNumber_FloorDivide@plt+0x6be8>  // b.none
    9f2c:	fabs	d2, d0
    9f30:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    9f34:	fmov	d1, x0
    9f38:	fcmp	d2, d1
    9f3c:	b.ls	a3a8 <PyNumber_FloorDivide@plt+0x6f78>  // b.plast
    9f40:	fcmp	d0, d0
    9f44:	b.vs	9f50 <PyNumber_FloorDivide@plt+0x6b20>
    9f48:	fcmpe	d0, #0.0
    9f4c:	b.le	a270 <PyNumber_FloorDivide@plt+0x6e40>
    9f50:	fmov	d0, d8
    9f54:	bl	3100 <PyFloat_FromDouble@plt>
    9f58:	mov	x21, x0
    9f5c:	cmp	x20, #0x0
    9f60:	cset	w1, eq  // eq = none
    9f64:	cmp	x0, #0x0
    9f68:	csinc	w1, w1, wzr, ne  // ne = any
    9f6c:	cbnz	w1, a458 <PyNumber_FloorDivide@plt+0x7028>
    9f70:	ldr	x1, [x20, #8]
    9f74:	ldr	x1, [x1, #168]
    9f78:	tbz	w1, #24, a140 <PyNumber_FloorDivide@plt+0x6d10>
    9f7c:	ldr	x0, [x20, #16]
    9f80:	cmp	x0, #0x0
    9f84:	b.le	a29c <PyNumber_FloorDivide@plt+0x6e6c>
    9f88:	mov	x0, x20
    9f8c:	bl	32c0 <PyLong_AsDouble@plt>
    9f90:	fmov	d9, #-1.000000000000000000e+00
    9f94:	fmov	d8, d0
    9f98:	fcmp	d0, d9
    9f9c:	b.ne	a1f4 <PyNumber_FloorDivide@plt+0x6dc4>  // b.any
    9fa0:	bl	3220 <PyErr_Occurred@plt>
    9fa4:	cbz	x0, a330 <PyNumber_FloorDivide@plt+0x6f00>
    9fa8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    9fac:	ldr	x0, [x0, #4016]
    9fb0:	ldr	x0, [x0]
    9fb4:	bl	30c0 <PyErr_ExceptionMatches@plt>
    9fb8:	cbz	w0, a2b4 <PyNumber_FloorDivide@plt+0x6e84>
    9fbc:	str	d10, [sp, #40]
    9fc0:	bl	3150 <PyErr_Clear@plt>
    9fc4:	mov	x0, x20
    9fc8:	add	x1, sp, #0x58
    9fcc:	bl	3080 <_PyLong_Frexp@plt>
    9fd0:	fcmp	d0, d9
    9fd4:	fmov	d10, d0
    9fd8:	b.ne	a4e4 <PyNumber_FloorDivide@plt+0x70b4>  // b.any
    9fdc:	bl	3220 <PyErr_Occurred@plt>
    9fe0:	cbz	x0, a574 <PyNumber_FloorDivide@plt+0x7144>
    9fe4:	ldr	d10, [sp, #40]
    9fe8:	b	a2b4 <PyNumber_FloorDivide@plt+0x6e84>
    9fec:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    9ff0:	add	x3, sp, #0x50
    9ff4:	add	x1, x1, #0xa38
    9ff8:	add	x2, sp, #0x48
    9ffc:	bl	3260 <PyArg_ParseTuple@plt>
    a000:	cbnz	w0, 9ef0 <PyNumber_FloorDivide@plt+0x6ac0>
    a004:	mov	x19, #0x0                   	// #0
    a008:	mov	x0, x19
    a00c:	ldp	x19, x20, [sp, #16]
    a010:	ldp	x29, x30, [sp], #96
    a014:	ret
    a018:	bl	3220 <PyErr_Occurred@plt>
    a01c:	cbz	x0, a270 <PyNumber_FloorDivide@plt+0x6e40>
    a020:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    a024:	ldr	x0, [x0, #4016]
    a028:	ldr	x0, [x0]
    a02c:	bl	30c0 <PyErr_ExceptionMatches@plt>
    a030:	cbnz	w0, a2ec <PyNumber_FloorDivide@plt+0x6ebc>
    a034:	mov	x19, #0x0                   	// #0
    a038:	ldr	x21, [sp, #32]
    a03c:	ldp	d8, d9, [sp, #48]
    a040:	b	9ecc <PyNumber_FloorDivide@plt+0x6a9c>
    a044:	mov	x0, x19
    a048:	bl	3250 <PyFloat_AsDouble@plt>
    a04c:	fmov	d1, #-1.000000000000000000e+00
    a050:	fmov	d8, d0
    a054:	fcmp	d0, d1
    a058:	b.eq	a2d4 <PyNumber_FloorDivide@plt+0x6ea4>  // b.none
    a05c:	fabs	d9, d0
    a060:	bl	33b0 <__errno_location@plt>
    a064:	str	wzr, [x0]
    a068:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    a06c:	fmov	d0, x1
    a070:	mov	x19, x0
    a074:	fcmp	d9, d0
    a078:	b.ls	a3bc <PyNumber_FloorDivide@plt+0x6f8c>  // b.plast
    a07c:	fcmp	d8, d8
    a080:	b.vs	a5ac <PyNumber_FloorDivide@plt+0x717c>
    a084:	fcmpe	d8, #0.0
    a088:	fmov	d1, d9
    a08c:	b.le	a104 <PyNumber_FloorDivide@plt+0x6cd4>
    a090:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    a094:	fmov	d0, x0
    a098:	fcmp	d1, d0
    a09c:	b.le	a0a8 <PyNumber_FloorDivide@plt+0x6c78>
    a0a0:	fcmp	d9, d0
    a0a4:	b.ls	a10c <PyNumber_FloorDivide@plt+0x6cdc>  // b.plast
    a0a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    a0ac:	fmov	d0, x0
    a0b0:	fcmp	d1, d0
    a0b4:	b.hi	9f50 <PyNumber_FloorDivide@plt+0x6b20>  // b.pmore
    a0b8:	ldr	w0, [x19]
    a0bc:	cbz	w0, 9f50 <PyNumber_FloorDivide@plt+0x6b20>
    a0c0:	cmp	w0, #0x21
    a0c4:	b.eq	a10c <PyNumber_FloorDivide@plt+0x6cdc>  // b.none
    a0c8:	cmp	w0, #0x22
    a0cc:	b.ne	a540 <PyNumber_FloorDivide@plt+0x7110>  // b.any
    a0d0:	fmov	d0, #1.000000000000000000e+00
    a0d4:	fcmpe	d1, d0
    a0d8:	b.mi	9f50 <PyNumber_FloorDivide@plt+0x6b20>  // b.first
    a0dc:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    a0e0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a0e4:	add	x1, x1, #0x9b0
    a0e8:	mov	x19, #0x0                   	// #0
    a0ec:	ldr	x0, [x0, #4016]
    a0f0:	ldr	x0, [x0]
    a0f4:	bl	3060 <PyErr_SetString@plt>
    a0f8:	ldr	x21, [sp, #32]
    a0fc:	ldp	d8, d9, [sp, #48]
    a100:	b	9ecc <PyNumber_FloorDivide@plt+0x6a9c>
    a104:	mov	w0, #0x21                  	// #33
    a108:	str	w0, [x19]
    a10c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    a110:	mov	x19, #0x0                   	// #0
    a114:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a118:	add	x1, x1, #0x998
    a11c:	ldr	x0, [x0, #3992]
    a120:	ldr	x0, [x0]
    a124:	bl	3060 <PyErr_SetString@plt>
    a128:	mov	x0, x19
    a12c:	ldp	x19, x20, [sp, #16]
    a130:	ldr	x21, [sp, #32]
    a134:	ldp	d8, d9, [sp, #48]
    a138:	ldp	x29, x30, [sp], #96
    a13c:	ret
    a140:	mov	x0, x20
    a144:	bl	3250 <PyFloat_AsDouble@plt>
    a148:	fmov	d1, #-1.000000000000000000e+00
    a14c:	fmov	d8, d0
    a150:	fcmp	d0, d1
    a154:	b.eq	a288 <PyNumber_FloorDivide@plt+0x6e58>  // b.none
    a158:	fabs	d9, d0
    a15c:	bl	33b0 <__errno_location@plt>
    a160:	str	wzr, [x0]
    a164:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    a168:	fmov	d0, x1
    a16c:	mov	x19, x0
    a170:	fcmp	d9, d0
    a174:	b.ls	a348 <PyNumber_FloorDivide@plt+0x6f18>  // b.plast
    a178:	fcmp	d8, d8
    a17c:	b.vs	a5fc <PyNumber_FloorDivide@plt+0x71cc>
    a180:	fcmpe	d8, #0.0
    a184:	fmov	d1, d9
    a188:	b.le	a4d8 <PyNumber_FloorDivide@plt+0x70a8>
    a18c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    a190:	fmov	d0, x0
    a194:	fcmp	d1, d0
    a198:	b.le	a1a4 <PyNumber_FloorDivide@plt+0x6d74>
    a19c:	fcmp	d9, d0
    a1a0:	b.ls	a29c <PyNumber_FloorDivide@plt+0x6e6c>  // b.plast
    a1a4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    a1a8:	fmov	d0, x0
    a1ac:	fcmp	d1, d0
    a1b0:	b.hi	a218 <PyNumber_FloorDivide@plt+0x6de8>  // b.pmore
    a1b4:	ldr	w0, [x19]
    a1b8:	cbz	w0, a218 <PyNumber_FloorDivide@plt+0x6de8>
    a1bc:	cmp	w0, #0x21
    a1c0:	b.eq	a29c <PyNumber_FloorDivide@plt+0x6e6c>  // b.none
    a1c4:	cmp	w0, #0x22
    a1c8:	b.ne	a5b4 <PyNumber_FloorDivide@plt+0x7184>  // b.any
    a1cc:	fmov	d0, #1.000000000000000000e+00
    a1d0:	fcmpe	d1, d0
    a1d4:	b.mi	a218 <PyNumber_FloorDivide@plt+0x6de8>  // b.first
    a1d8:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    a1dc:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a1e0:	add	x1, x1, #0x9b0
    a1e4:	ldr	x0, [x0, #4016]
    a1e8:	ldr	x0, [x0]
    a1ec:	bl	3060 <PyErr_SetString@plt>
    a1f0:	b	a2b4 <PyNumber_FloorDivide@plt+0x6e84>
    a1f4:	fabs	d2, d0
    a1f8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    a1fc:	fmov	d1, x0
    a200:	fcmp	d2, d1
    a204:	b.ls	a31c <PyNumber_FloorDivide@plt+0x6eec>  // b.plast
    a208:	fcmp	d0, d0
    a20c:	b.vs	a218 <PyNumber_FloorDivide@plt+0x6de8>
    a210:	fcmpe	d0, #0.0
    a214:	b.le	a330 <PyNumber_FloorDivide@plt+0x6f00>
    a218:	fmov	d0, d8
    a21c:	bl	3100 <PyFloat_FromDouble@plt>
    a220:	mov	x20, x0
    a224:	cbz	x0, a2b4 <PyNumber_FloorDivide@plt+0x6e84>
    a228:	mov	x1, x0
    a22c:	mov	x0, x21
    a230:	bl	3400 <PyNumber_TrueDivide@plt>
    a234:	mov	x19, x0
    a238:	ldr	x1, [x21]
    a23c:	sub	x1, x1, #0x1
    a240:	str	x1, [x21]
    a244:	cbz	x1, a39c <PyNumber_FloorDivide@plt+0x6f6c>
    a248:	ldr	x0, [x20]
    a24c:	sub	x0, x0, #0x1
    a250:	str	x0, [x20]
    a254:	cbz	x0, a388 <PyNumber_FloorDivide@plt+0x6f58>
    a258:	mov	x0, x19
    a25c:	ldp	x19, x20, [sp, #16]
    a260:	ldr	x21, [sp, #32]
    a264:	ldp	d8, d9, [sp, #48]
    a268:	ldp	x29, x30, [sp], #96
    a26c:	ret
    a270:	bl	33b0 <__errno_location@plt>
    a274:	mov	w2, #0x21                  	// #33
    a278:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    a27c:	fmov	d8, x1
    a280:	str	w2, [x0]
    a284:	b	9f50 <PyNumber_FloorDivide@plt+0x6b20>
    a288:	bl	3220 <PyErr_Occurred@plt>
    a28c:	cbnz	x0, a2b4 <PyNumber_FloorDivide@plt+0x6e84>
    a290:	bl	33b0 <__errno_location@plt>
    a294:	mov	w1, #0x21                  	// #33
    a298:	str	w1, [x0]
    a29c:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    a2a0:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a2a4:	add	x1, x1, #0x998
    a2a8:	ldr	x0, [x0, #3992]
    a2ac:	ldr	x0, [x0]
    a2b0:	bl	3060 <PyErr_SetString@plt>
    a2b4:	ldr	x0, [x21]
    a2b8:	sub	x0, x0, #0x1
    a2bc:	str	x0, [x21]
    a2c0:	cbz	x0, a370 <PyNumber_FloorDivide@plt+0x6f40>
    a2c4:	mov	x19, #0x0                   	// #0
    a2c8:	ldr	x21, [sp, #32]
    a2cc:	ldp	d8, d9, [sp, #48]
    a2d0:	b	a008 <PyNumber_FloorDivide@plt+0x6bd8>
    a2d4:	bl	3220 <PyErr_Occurred@plt>
    a2d8:	cbnz	x0, a2c4 <PyNumber_FloorDivide@plt+0x6e94>
    a2dc:	bl	33b0 <__errno_location@plt>
    a2e0:	mov	w1, #0x21                  	// #33
    a2e4:	str	w1, [x0]
    a2e8:	b	a10c <PyNumber_FloorDivide@plt+0x6cdc>
    a2ec:	str	d10, [sp, #40]
    a2f0:	bl	3150 <PyErr_Clear@plt>
    a2f4:	mov	x0, x19
    a2f8:	add	x1, sp, #0x58
    a2fc:	bl	3080 <_PyLong_Frexp@plt>
    a300:	fcmp	d0, d9
    a304:	fmov	d10, d0
    a308:	b.ne	a47c <PyNumber_FloorDivide@plt+0x704c>  // b.any
    a30c:	bl	3220 <PyErr_Occurred@plt>
    a310:	cbz	x0, a528 <PyNumber_FloorDivide@plt+0x70f8>
    a314:	ldr	d10, [sp, #40]
    a318:	b	a034 <PyNumber_FloorDivide@plt+0x6c04>
    a31c:	fcmpe	d0, #0.0
    a320:	b.le	a4c0 <PyNumber_FloorDivide@plt+0x7090>
    a324:	bl	30d0 <log@plt>
    a328:	fmov	d8, d0
    a32c:	b	a218 <PyNumber_FloorDivide@plt+0x6de8>
    a330:	bl	33b0 <__errno_location@plt>
    a334:	mov	w2, #0x21                  	// #33
    a338:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    a33c:	fmov	d8, x1
    a340:	str	w2, [x0]
    a344:	b	a218 <PyNumber_FloorDivide@plt+0x6de8>
    a348:	fcmpe	d8, #0.0
    a34c:	b.le	a434 <PyNumber_FloorDivide@plt+0x7004>
    a350:	fmov	d0, d8
    a354:	bl	30d0 <log@plt>
    a358:	fcmp	d0, d0
    a35c:	fabs	d1, d0
    a360:	fccmp	d8, d8, #0x1, vs
    a364:	fmov	d8, d0
    a368:	b.vs	a18c <PyNumber_FloorDivide@plt+0x6d5c>
    a36c:	b	a29c <PyNumber_FloorDivide@plt+0x6e6c>
    a370:	mov	x0, x21
    a374:	bl	2fb0 <_Py_Dealloc@plt>
    a378:	mov	x19, #0x0                   	// #0
    a37c:	ldr	x21, [sp, #32]
    a380:	ldp	d8, d9, [sp, #48]
    a384:	b	9ecc <PyNumber_FloorDivide@plt+0x6a9c>
    a388:	mov	x0, x20
    a38c:	bl	2fb0 <_Py_Dealloc@plt>
    a390:	ldr	x21, [sp, #32]
    a394:	ldp	d8, d9, [sp, #48]
    a398:	b	9ecc <PyNumber_FloorDivide@plt+0x6a9c>
    a39c:	mov	x0, x21
    a3a0:	bl	2fb0 <_Py_Dealloc@plt>
    a3a4:	b	a248 <PyNumber_FloorDivide@plt+0x6e18>
    a3a8:	fcmpe	d0, #0.0
    a3ac:	b.le	a41c <PyNumber_FloorDivide@plt+0x6fec>
    a3b0:	bl	30d0 <log@plt>
    a3b4:	fmov	d8, d0
    a3b8:	b	9f50 <PyNumber_FloorDivide@plt+0x6b20>
    a3bc:	fcmpe	d8, #0.0
    a3c0:	b.le	a3e4 <PyNumber_FloorDivide@plt+0x6fb4>
    a3c4:	fmov	d0, d8
    a3c8:	bl	30d0 <log@plt>
    a3cc:	fcmp	d0, d0
    a3d0:	fabs	d1, d0
    a3d4:	fccmp	d8, d8, #0x1, vs
    a3d8:	fmov	d8, d0
    a3dc:	b.vs	a090 <PyNumber_FloorDivide@plt+0x6c60>
    a3e0:	b	a10c <PyNumber_FloorDivide@plt+0x6cdc>
    a3e4:	fcmp	d8, #0.0
    a3e8:	mov	w0, #0x21                  	// #33
    a3ec:	str	w0, [x19]
    a3f0:	b.ne	a408 <PyNumber_FloorDivide@plt+0x6fd8>  // b.any
    a3f4:	fcmp	d9, d0
    a3f8:	b.ls	a10c <PyNumber_FloorDivide@plt+0x6cdc>  // b.plast
    a3fc:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    a400:	fmov	d8, x0
    a404:	b	9f50 <PyNumber_FloorDivide@plt+0x6b20>
    a408:	fcmp	d8, d8
    a40c:	b.vc	a10c <PyNumber_FloorDivide@plt+0x6cdc>
    a410:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    a414:	fmov	d8, x0
    a418:	b	9f50 <PyNumber_FloorDivide@plt+0x6b20>
    a41c:	bl	33b0 <__errno_location@plt>
    a420:	fcmp	d8, #0.0
    a424:	mov	w1, #0x21                  	// #33
    a428:	str	w1, [x0]
    a42c:	b.eq	a3fc <PyNumber_FloorDivide@plt+0x6fcc>  // b.none
    a430:	b	a410 <PyNumber_FloorDivide@plt+0x6fe0>
    a434:	fcmp	d8, #0.0
    a438:	mov	w0, #0x21                  	// #33
    a43c:	str	w0, [x19]
    a440:	b.ne	a468 <PyNumber_FloorDivide@plt+0x7038>  // b.any
    a444:	fcmp	d9, d0
    a448:	b.ls	a29c <PyNumber_FloorDivide@plt+0x6e6c>  // b.plast
    a44c:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
    a450:	fmov	d8, x1
    a454:	b	a218 <PyNumber_FloorDivide@plt+0x6de8>
    a458:	mov	x19, x0
    a45c:	ldr	x21, [sp, #32]
    a460:	ldp	d8, d9, [sp, #48]
    a464:	b	9ecc <PyNumber_FloorDivide@plt+0x6a9c>
    a468:	fcmp	d8, d8
    a46c:	b.vc	a29c <PyNumber_FloorDivide@plt+0x6e6c>
    a470:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    a474:	fmov	d8, x1
    a478:	b	a218 <PyNumber_FloorDivide@plt+0x6de8>
    a47c:	fabs	d2, d0
    a480:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    a484:	fmov	d1, x0
    a488:	fcmp	d2, d1
    a48c:	b.ls	a560 <PyNumber_FloorDivide@plt+0x7130>  // b.plast
    a490:	fcmp	d0, d0
    a494:	b.vs	a4a0 <PyNumber_FloorDivide@plt+0x7070>
    a498:	fcmpe	d0, #0.0
    a49c:	b.le	a528 <PyNumber_FloorDivide@plt+0x70f8>
    a4a0:	ldr	d8, [sp, #88]
    a4a4:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a4a8:	ldr	d0, [x0, #3504]
    a4ac:	scvtf	d8, d8
    a4b0:	fmul	d8, d8, d0
    a4b4:	fadd	d8, d8, d10
    a4b8:	ldr	d10, [sp, #40]
    a4bc:	b	9f50 <PyNumber_FloorDivide@plt+0x6b20>
    a4c0:	bl	33b0 <__errno_location@plt>
    a4c4:	fcmp	d8, #0.0
    a4c8:	mov	w1, #0x21                  	// #33
    a4cc:	str	w1, [x0]
    a4d0:	b.eq	a44c <PyNumber_FloorDivide@plt+0x701c>  // b.none
    a4d4:	b	a470 <PyNumber_FloorDivide@plt+0x7040>
    a4d8:	mov	w0, #0x21                  	// #33
    a4dc:	str	w0, [x19]
    a4e0:	b	a29c <PyNumber_FloorDivide@plt+0x6e6c>
    a4e4:	fabs	d2, d0
    a4e8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    a4ec:	fmov	d1, x0
    a4f0:	fcmp	d2, d1
    a4f4:	b.ls	a5c8 <PyNumber_FloorDivide@plt+0x7198>  // b.plast
    a4f8:	fcmp	d0, d0
    a4fc:	b.vs	a508 <PyNumber_FloorDivide@plt+0x70d8>
    a500:	fcmpe	d0, #0.0
    a504:	b.le	a574 <PyNumber_FloorDivide@plt+0x7144>
    a508:	ldr	d8, [sp, #88]
    a50c:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a510:	ldr	d0, [x0, #3504]
    a514:	scvtf	d8, d8
    a518:	fmul	d8, d8, d0
    a51c:	fadd	d8, d8, d10
    a520:	ldr	d10, [sp, #40]
    a524:	b	a218 <PyNumber_FloorDivide@plt+0x6de8>
    a528:	bl	33b0 <__errno_location@plt>
    a52c:	mov	w2, #0x21                  	// #33
    a530:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    a534:	fmov	d10, x1
    a538:	str	w2, [x0]
    a53c:	b	a4a0 <PyNumber_FloorDivide@plt+0x7070>
    a540:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    a544:	mov	x19, #0x0                   	// #0
    a548:	ldr	x0, [x0, #3992]
    a54c:	ldr	x0, [x0]
    a550:	bl	2f50 <PyErr_SetFromErrno@plt>
    a554:	ldr	x21, [sp, #32]
    a558:	ldp	d8, d9, [sp, #48]
    a55c:	b	9ecc <PyNumber_FloorDivide@plt+0x6a9c>
    a560:	fcmpe	d0, #0.0
    a564:	b.le	a58c <PyNumber_FloorDivide@plt+0x715c>
    a568:	bl	30d0 <log@plt>
    a56c:	fmov	d10, d0
    a570:	b	a4a0 <PyNumber_FloorDivide@plt+0x7070>
    a574:	bl	33b0 <__errno_location@plt>
    a578:	mov	w2, #0x21                  	// #33
    a57c:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    a580:	fmov	d10, x1
    a584:	str	w2, [x0]
    a588:	b	a508 <PyNumber_FloorDivide@plt+0x70d8>
    a58c:	bl	33b0 <__errno_location@plt>
    a590:	fcmp	d10, #0.0
    a594:	mov	w1, #0x21                  	// #33
    a598:	str	w1, [x0]
    a59c:	b.ne	a604 <PyNumber_FloorDivide@plt+0x71d4>  // b.any
    a5a0:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    a5a4:	fmov	d10, x0
    a5a8:	b	a4a0 <PyNumber_FloorDivide@plt+0x7070>
    a5ac:	fmov	d1, d9
    a5b0:	b	a090 <PyNumber_FloorDivide@plt+0x6c60>
    a5b4:	adrp	x0, 1e000 <_Py_log1p@@Base+0x13908>
    a5b8:	ldr	x0, [x0, #3992]
    a5bc:	ldr	x0, [x0]
    a5c0:	bl	2f50 <PyErr_SetFromErrno@plt>
    a5c4:	b	a2b4 <PyNumber_FloorDivide@plt+0x6e84>
    a5c8:	fcmpe	d0, #0.0
    a5cc:	b.le	a5dc <PyNumber_FloorDivide@plt+0x71ac>
    a5d0:	bl	30d0 <log@plt>
    a5d4:	fmov	d10, d0
    a5d8:	b	a508 <PyNumber_FloorDivide@plt+0x70d8>
    a5dc:	bl	33b0 <__errno_location@plt>
    a5e0:	fcmp	d10, #0.0
    a5e4:	mov	w1, #0x21                  	// #33
    a5e8:	str	w1, [x0]
    a5ec:	b.ne	a610 <PyNumber_FloorDivide@plt+0x71e0>  // b.any
    a5f0:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    a5f4:	fmov	d10, x0
    a5f8:	b	a508 <PyNumber_FloorDivide@plt+0x70d8>
    a5fc:	fmov	d1, d9
    a600:	b	a18c <PyNumber_FloorDivide@plt+0x6d5c>
    a604:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    a608:	fmov	d10, x0
    a60c:	b	a4a0 <PyNumber_FloorDivide@plt+0x7070>
    a610:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    a614:	fmov	d10, x0
    a618:	b	a508 <PyNumber_FloorDivide@plt+0x70d8>
    a61c:	nop

000000000000a620 <PyInit_math@@Base>:
    a620:	stp	x29, x30, [sp, #-32]!
    a624:	adrp	x0, 1f000 <_Py_log1p@@Base+0x14908>
    a628:	add	x0, x0, #0x2c0
    a62c:	mov	x29, sp
    a630:	add	x0, x0, #0xc8
    a634:	mov	w1, #0x3f5                 	// #1013
    a638:	str	x19, [sp, #16]
    a63c:	bl	3230 <PyModule_Create2@plt>
    a640:	mov	x19, x0
    a644:	cbz	x0, a6e8 <PyInit_math@@Base+0xc8>
    a648:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a64c:	ldr	d0, [x0, #3168]
    a650:	bl	3100 <PyFloat_FromDouble@plt>
    a654:	mov	x2, x0
    a658:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a65c:	mov	x0, x19
    a660:	add	x1, x1, #0xa68
    a664:	bl	3310 <PyModule_AddObject@plt>
    a668:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a66c:	ldr	d0, [x0, #3512]
    a670:	bl	3100 <PyFloat_FromDouble@plt>
    a674:	mov	x2, x0
    a678:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a67c:	mov	x0, x19
    a680:	add	x1, x1, #0xa70
    a684:	bl	3310 <PyModule_AddObject@plt>
    a688:	adrp	x0, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a68c:	ldr	d0, [x0, #3520]
    a690:	bl	3100 <PyFloat_FromDouble@plt>
    a694:	mov	x2, x0
    a698:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a69c:	mov	x0, x19
    a6a0:	add	x1, x1, #0xa78
    a6a4:	bl	3310 <PyModule_AddObject@plt>
    a6a8:	mov	w0, #0x0                   	// #0
    a6ac:	bl	32f0 <_Py_dg_infinity@plt>
    a6b0:	bl	3100 <PyFloat_FromDouble@plt>
    a6b4:	mov	x2, x0
    a6b8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a6bc:	mov	x0, x19
    a6c0:	add	x1, x1, #0xa80
    a6c4:	bl	3310 <PyModule_AddObject@plt>
    a6c8:	mov	w0, #0x0                   	// #0
    a6cc:	bl	3190 <_Py_dg_stdnan@plt>
    a6d0:	bl	3100 <PyFloat_FromDouble@plt>
    a6d4:	mov	x2, x0
    a6d8:	adrp	x1, a000 <PyNumber_FloorDivide@plt+0x6bd0>
    a6dc:	mov	x0, x19
    a6e0:	add	x1, x1, #0xa88
    a6e4:	bl	3310 <PyModule_AddObject@plt>
    a6e8:	mov	x0, x19
    a6ec:	ldr	x19, [sp, #16]
    a6f0:	ldp	x29, x30, [sp], #32
    a6f4:	ret

000000000000a6f8 <_Py_log1p@@Base>:
    a6f8:	fcmp	d0, #0.0
    a6fc:	b.ne	a704 <_Py_log1p@@Base+0xc>  // b.any
    a700:	ret
    a704:	b	31a0 <log1p@plt>

Disassembly of section .fini:

000000000000a708 <.fini>:
    a708:	stp	x29, x30, [sp, #-16]!
    a70c:	mov	x29, sp
    a710:	ldp	x29, x30, [sp], #16
    a714:	ret
