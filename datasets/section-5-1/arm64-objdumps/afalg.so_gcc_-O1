
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//afalg.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001560 <.init>:
    1560:	stp	x29, x30, [sp, #-16]!
    1564:	mov	x29, sp
    1568:	bl	18e0 <ASYNC_WAIT_CTX_get_fd@plt+0x10>
    156c:	ldp	x29, x30, [sp], #16
    1570:	ret

Disassembly of section .plt:

0000000000001580 <EVP_CIPHER_meth_new@plt-0x20>:
    1580:	stp	x16, x30, [sp, #-16]!
    1584:	adrp	x16, 13000 <bind_engine@@Base+0x1088c>
    1588:	ldr	x17, [x16, #4088]
    158c:	add	x16, x16, #0xff8
    1590:	br	x17
    1594:	nop
    1598:	nop
    159c:	nop

00000000000015a0 <EVP_CIPHER_meth_new@plt>:
    15a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15a4:	ldr	x17, [x16]
    15a8:	add	x16, x16, #0x0
    15ac:	br	x17

00000000000015b0 <EVP_CIPHER_meth_set_cleanup@plt>:
    15b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15b4:	ldr	x17, [x16, #8]
    15b8:	add	x16, x16, #0x8
    15bc:	br	x17

00000000000015c0 <EVP_CIPHER_CTX_iv_length@plt>:
    15c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15c4:	ldr	x17, [x16, #16]
    15c8:	add	x16, x16, #0x10
    15cc:	br	x17

00000000000015d0 <EVP_CIPHER_meth_set_iv_length@plt>:
    15d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15d4:	ldr	x17, [x16, #24]
    15d8:	add	x16, x16, #0x18
    15dc:	br	x17

00000000000015e0 <EVP_CIPHER_CTX_get_cipher_data@plt>:
    15e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15e4:	ldr	x17, [x16, #32]
    15e8:	add	x16, x16, #0x20
    15ec:	br	x17

00000000000015f0 <ENGINE_set_id@plt>:
    15f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15f4:	ldr	x17, [x16, #40]
    15f8:	add	x16, x16, #0x28
    15fc:	br	x17

0000000000001600 <EVP_CIPHER_CTX_key_length@plt>:
    1600:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1604:	ldr	x17, [x16, #48]
    1608:	add	x16, x16, #0x30
    160c:	br	x17

0000000000001610 <ENGINE_get_static_state@plt>:
    1610:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1614:	ldr	x17, [x16, #56]
    1618:	add	x16, x16, #0x38
    161c:	br	x17

0000000000001620 <strtok@plt>:
    1620:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1624:	ldr	x17, [x16, #64]
    1628:	add	x16, x16, #0x40
    162c:	br	x17

0000000000001630 <__gmon_start__@plt>:
    1630:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1634:	ldr	x17, [x16, #72]
    1638:	add	x16, x16, #0x48
    163c:	br	x17

0000000000001640 <ASYNC_get_current_job@plt>:
    1640:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1644:	ldr	x17, [x16, #80]
    1648:	add	x16, x16, #0x50
    164c:	br	x17

0000000000001650 <socket@plt>:
    1650:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1654:	ldr	x17, [x16, #88]
    1658:	add	x16, x16, #0x58
    165c:	br	x17

0000000000001660 <EVP_CIPHER_CTX_cipher@plt>:
    1660:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1664:	ldr	x17, [x16, #96]
    1668:	add	x16, x16, #0x60
    166c:	br	x17

0000000000001670 <fprintf@plt>:
    1670:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1674:	ldr	x17, [x16, #104]
    1678:	add	x16, x16, #0x68
    167c:	br	x17

0000000000001680 <CRYPTO_set_mem_functions@plt>:
    1680:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1684:	ldr	x17, [x16, #112]
    1688:	add	x16, x16, #0x70
    168c:	br	x17

0000000000001690 <__cxa_finalize@plt>:
    1690:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1694:	ldr	x17, [x16, #120]
    1698:	add	x16, x16, #0x78
    169c:	br	x17

00000000000016a0 <EVP_CIPHER_meth_set_init@plt>:
    16a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16a4:	ldr	x17, [x16, #128]
    16a8:	add	x16, x16, #0x80
    16ac:	br	x17

00000000000016b0 <ASYNC_WAIT_CTX_set_wait_fd@plt>:
    16b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16b4:	ldr	x17, [x16, #136]
    16b8:	add	x16, x16, #0x88
    16bc:	br	x17

00000000000016c0 <ENGINE_set_destroy_function@plt>:
    16c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16c4:	ldr	x17, [x16, #144]
    16c8:	add	x16, x16, #0x90
    16cc:	br	x17

00000000000016d0 <ERR_get_next_error_library@plt>:
    16d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16d4:	ldr	x17, [x16, #152]
    16d8:	add	x16, x16, #0x98
    16dc:	br	x17

00000000000016e0 <uname@plt>:
    16e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16e4:	ldr	x17, [x16, #160]
    16e8:	add	x16, x16, #0xa0
    16ec:	br	x17

00000000000016f0 <__errno_location@plt>:
    16f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16f4:	ldr	x17, [x16, #168]
    16f8:	add	x16, x16, #0xa8
    16fc:	br	x17

0000000000001700 <read@plt>:
    1700:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1704:	ldr	x17, [x16, #176]
    1708:	add	x16, x16, #0xb0
    170c:	br	x17

0000000000001710 <perror@plt>:
    1710:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1714:	ldr	x17, [x16, #184]
    1718:	add	x16, x16, #0xb8
    171c:	br	x17

0000000000001720 <syscall@plt>:
    1720:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1724:	ldr	x17, [x16, #192]
    1728:	add	x16, x16, #0xc0
    172c:	br	x17

0000000000001730 <ENGINE_set_name@plt>:
    1730:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1734:	ldr	x17, [x16, #200]
    1738:	add	x16, x16, #0xc8
    173c:	br	x17

0000000000001740 <ERR_unload_strings@plt>:
    1740:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1744:	ldr	x17, [x16, #208]
    1748:	add	x16, x16, #0xd0
    174c:	br	x17

0000000000001750 <EVP_CIPHER_CTX_iv@plt>:
    1750:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1754:	ldr	x17, [x16, #216]
    1758:	add	x16, x16, #0xd8
    175c:	br	x17

0000000000001760 <ENGINE_set_init_function@plt>:
    1760:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1764:	ldr	x17, [x16, #224]
    1768:	add	x16, x16, #0xe0
    176c:	br	x17

0000000000001770 <bind@plt>:
    1770:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1774:	ldr	x17, [x16, #232]
    1778:	add	x16, x16, #0xe8
    177c:	br	x17

0000000000001780 <EVP_CIPHER_meth_free@plt>:
    1780:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1784:	ldr	x17, [x16, #240]
    1788:	add	x16, x16, #0xf0
    178c:	br	x17

0000000000001790 <ASYNC_get_wait_ctx@plt>:
    1790:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1794:	ldr	x17, [x16, #248]
    1798:	add	x16, x16, #0xf8
    179c:	br	x17

00000000000017a0 <ERR_put_error@plt>:
    17a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17a4:	ldr	x17, [x16, #256]
    17a8:	add	x16, x16, #0x100
    17ac:	br	x17

00000000000017b0 <ERR_load_strings@plt>:
    17b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17b4:	ldr	x17, [x16, #264]
    17b8:	add	x16, x16, #0x108
    17bc:	br	x17

00000000000017c0 <EVP_CIPHER_CTX_nid@plt>:
    17c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17c4:	ldr	x17, [x16, #272]
    17c8:	add	x16, x16, #0x110
    17cc:	br	x17

00000000000017d0 <strcmp@plt>:
    17d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17d4:	ldr	x17, [x16, #280]
    17d8:	add	x16, x16, #0x118
    17dc:	br	x17

00000000000017e0 <strtol@plt>:
    17e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17e4:	ldr	x17, [x16, #288]
    17e8:	add	x16, x16, #0x120
    17ec:	br	x17

00000000000017f0 <setsockopt@plt>:
    17f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17f4:	ldr	x17, [x16, #296]
    17f8:	add	x16, x16, #0x128
    17fc:	br	x17

0000000000001800 <EVP_CIPHER_meth_set_flags@plt>:
    1800:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1804:	ldr	x17, [x16, #304]
    1808:	add	x16, x16, #0x130
    180c:	br	x17

0000000000001810 <ENGINE_set_ciphers@plt>:
    1810:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1814:	ldr	x17, [x16, #312]
    1818:	add	x16, x16, #0x138
    181c:	br	x17

0000000000001820 <EVP_CIPHER_meth_set_do_cipher@plt>:
    1820:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1824:	ldr	x17, [x16, #320]
    1828:	add	x16, x16, #0x140
    182c:	br	x17

0000000000001830 <accept@plt>:
    1830:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1834:	ldr	x17, [x16, #328]
    1838:	add	x16, x16, #0x148
    183c:	br	x17

0000000000001840 <ENGINE_set_finish_function@plt>:
    1840:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1844:	ldr	x17, [x16, #336]
    1848:	add	x16, x16, #0x150
    184c:	br	x17

0000000000001850 <sendmsg@plt>:
    1850:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1854:	ldr	x17, [x16, #344]
    1858:	add	x16, x16, #0x158
    185c:	br	x17

0000000000001860 <OPENSSL_strlcpy@plt>:
    1860:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1864:	ldr	x17, [x16, #352]
    1868:	add	x16, x16, #0x160
    186c:	br	x17

0000000000001870 <ASYNC_pause_job@plt>:
    1870:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1874:	ldr	x17, [x16, #360]
    1878:	add	x16, x16, #0x168
    187c:	br	x17

0000000000001880 <EVP_CIPHER_CTX_iv_noconst@plt>:
    1880:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1884:	ldr	x17, [x16, #368]
    1888:	add	x16, x16, #0x170
    188c:	br	x17

0000000000001890 <close@plt>:
    1890:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1894:	ldr	x17, [x16, #376]
    1898:	add	x16, x16, #0x178
    189c:	br	x17

00000000000018a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>:
    18a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18a4:	ldr	x17, [x16, #384]
    18a8:	add	x16, x16, #0x180
    18ac:	br	x17

00000000000018b0 <fcntl@plt>:
    18b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18b4:	ldr	x17, [x16, #392]
    18b8:	add	x16, x16, #0x188
    18bc:	br	x17

00000000000018c0 <EVP_CIPHER_CTX_encrypting@plt>:
    18c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18c4:	ldr	x17, [x16, #400]
    18c8:	add	x16, x16, #0x190
    18cc:	br	x17

00000000000018d0 <ASYNC_WAIT_CTX_get_fd@plt>:
    18d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18d4:	ldr	x17, [x16, #408]
    18d8:	add	x16, x16, #0x198
    18dc:	br	x17

Disassembly of section .text:

00000000000018e0 <v_check@@Base-0xe80>:
    18e0:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    18e4:	ldr	x0, [x0, #4032]
    18e8:	cbz	x0, 18f0 <ASYNC_WAIT_CTX_get_fd@plt+0x20>
    18ec:	b	1630 <__gmon_start__@plt>
    18f0:	ret
    18f4:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    18f8:	add	x0, x0, #0x328
    18fc:	adrp	x1, 14000 <bind_engine@@Base+0x1188c>
    1900:	add	x1, x1, #0x328
    1904:	cmp	x0, x1
    1908:	b.eq	1934 <ASYNC_WAIT_CTX_get_fd@plt+0x64>  // b.none
    190c:	adrp	x1, 13000 <bind_engine@@Base+0x1088c>
    1910:	ldr	x1, [x1, #4048]
    1914:	cbz	x1, 1934 <ASYNC_WAIT_CTX_get_fd@plt+0x64>
    1918:	stp	x29, x30, [sp, #-16]!
    191c:	mov	x29, sp
    1920:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    1924:	add	x0, x0, #0x328
    1928:	blr	x1
    192c:	ldp	x29, x30, [sp], #16
    1930:	ret
    1934:	ret
    1938:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    193c:	add	x0, x0, #0x328
    1940:	adrp	x1, 14000 <bind_engine@@Base+0x1188c>
    1944:	add	x1, x1, #0x328
    1948:	sub	x0, x0, x1
    194c:	lsr	x1, x0, #63
    1950:	add	x0, x1, x0, asr #3
    1954:	cmp	xzr, x0, asr #1
    1958:	b.eq	1988 <ASYNC_WAIT_CTX_get_fd@plt+0xb8>  // b.none
    195c:	asr	x1, x0, #1
    1960:	adrp	x2, 13000 <bind_engine@@Base+0x1088c>
    1964:	ldr	x2, [x2, #4056]
    1968:	cbz	x2, 1988 <ASYNC_WAIT_CTX_get_fd@plt+0xb8>
    196c:	stp	x29, x30, [sp, #-16]!
    1970:	mov	x29, sp
    1974:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    1978:	add	x0, x0, #0x328
    197c:	blr	x2
    1980:	ldp	x29, x30, [sp], #16
    1984:	ret
    1988:	ret
    198c:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    1990:	ldrb	w0, [x0, #808]
    1994:	cbnz	w0, 19d0 <ASYNC_WAIT_CTX_get_fd@plt+0x100>
    1998:	stp	x29, x30, [sp, #-16]!
    199c:	mov	x29, sp
    19a0:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    19a4:	ldr	x0, [x0, #4040]
    19a8:	cbz	x0, 19b8 <ASYNC_WAIT_CTX_get_fd@plt+0xe8>
    19ac:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    19b0:	ldr	x0, [x0, #416]
    19b4:	bl	1690 <__cxa_finalize@plt>
    19b8:	bl	18f4 <ASYNC_WAIT_CTX_get_fd@plt+0x24>
    19bc:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    19c0:	mov	w1, #0x1                   	// #1
    19c4:	strb	w1, [x0, #808]
    19c8:	ldp	x29, x30, [sp], #16
    19cc:	ret
    19d0:	ret
    19d4:	stp	x29, x30, [sp, #-16]!
    19d8:	mov	x29, sp
    19dc:	bl	1938 <ASYNC_WAIT_CTX_get_fd@plt+0x68>
    19e0:	ldp	x29, x30, [sp], #16
    19e4:	ret
    19e8:	mov	w0, #0x1                   	// #1
    19ec:	ret
    19f0:	mov	w0, #0x1                   	// #1
    19f4:	ret
    19f8:	stp	x29, x30, [sp, #-16]!
    19fc:	mov	x29, sp
    1a00:	mov	w0, w2
    1a04:	bl	1890 <close@plt>
    1a08:	ldp	x29, x30, [sp], #16
    1a0c:	ret
    1a10:	stp	x29, x30, [sp, #-48]!
    1a14:	mov	x29, sp
    1a18:	stp	x19, x20, [sp, #16]
    1a1c:	stp	x21, x22, [sp, #32]
    1a20:	mov	w19, w0
    1a24:	mov	w20, w1
    1a28:	mov	x21, x2
    1a2c:	mov	w22, w3
    1a30:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    1a34:	ldr	w0, [x0, #812]
    1a38:	cbz	w0, 1a68 <ASYNC_WAIT_CTX_get_fd@plt+0x198>
    1a3c:	mov	w4, w22
    1a40:	mov	x3, x21
    1a44:	mov	w2, w20
    1a48:	mov	w1, w19
    1a4c:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    1a50:	ldr	w0, [x0, #812]
    1a54:	bl	17a0 <ERR_put_error@plt>
    1a58:	ldp	x19, x20, [sp, #16]
    1a5c:	ldp	x21, x22, [sp, #32]
    1a60:	ldp	x29, x30, [sp], #48
    1a64:	ret
    1a68:	bl	16d0 <ERR_get_next_error_library@plt>
    1a6c:	adrp	x1, 14000 <bind_engine@@Base+0x1188c>
    1a70:	str	w0, [x1, #812]
    1a74:	b	1a3c <ASYNC_WAIT_CTX_get_fd@plt+0x16c>
    1a78:	stp	x29, x30, [sp, #-480]!
    1a7c:	mov	x29, sp
    1a80:	stp	x19, x20, [sp, #16]
    1a84:	mov	w0, #0xffffffff            	// #-1
    1a88:	str	w0, [sp, #464]
    1a8c:	str	w0, [sp, #468]
    1a90:	str	w0, [sp, #472]
    1a94:	add	x0, sp, #0x48
    1a98:	bl	16e0 <uname@plt>
    1a9c:	cbnz	w0, 1b6c <ASYNC_WAIT_CTX_get_fd@plt+0x29c>
    1aa0:	mov	w20, w0
    1aa4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1aa8:	add	x1, x1, #0x988
    1aac:	add	x0, sp, #0xca
    1ab0:	bl	1620 <strtok@plt>
    1ab4:	cbz	x0, 1b98 <ASYNC_WAIT_CTX_get_fd@plt+0x2c8>
    1ab8:	stp	x21, x22, [sp, #32]
    1abc:	str	x23, [sp, #48]
    1ac0:	mov	x19, #0x1                   	// #1
    1ac4:	mov	w23, #0xa                   	// #10
    1ac8:	add	x22, sp, #0x1d0
    1acc:	adrp	x21, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1ad0:	add	x21, x21, #0x988
    1ad4:	mov	w2, w23
    1ad8:	mov	x1, #0x0                   	// #0
    1adc:	bl	17e0 <strtol@plt>
    1ae0:	add	x1, x22, x19, lsl #2
    1ae4:	stur	w0, [x1, #-4]
    1ae8:	mov	x1, x21
    1aec:	mov	x0, #0x0                   	// #0
    1af0:	bl	1620 <strtok@plt>
    1af4:	cmp	w19, #0x2
    1af8:	cset	w1, le
    1afc:	cmp	x0, #0x0
    1b00:	csel	w1, w1, wzr, ne  // ne = any
    1b04:	add	x19, x19, #0x1
    1b08:	cbnz	w1, 1ad4 <ASYNC_WAIT_CTX_get_fd@plt+0x204>
    1b0c:	ldr	w2, [sp, #464]
    1b10:	ldr	w3, [sp, #468]
    1b14:	ldr	w4, [sp, #472]
    1b18:	lsl	w0, w3, #8
    1b1c:	add	w0, w0, w2, lsl #16
    1b20:	add	w0, w0, w4
    1b24:	mov	w1, #0xff                  	// #255
    1b28:	movk	w1, #0x4, lsl #16
    1b2c:	cmp	w0, w1
    1b30:	b.le	1b8c <ASYNC_WAIT_CTX_get_fd@plt+0x2bc>
    1b34:	mov	w2, #0x0                   	// #0
    1b38:	mov	w1, #0x5                   	// #5
    1b3c:	mov	w0, #0x26                  	// #38
    1b40:	bl	1650 <socket@plt>
    1b44:	cmn	w0, #0x1
    1b48:	b.eq	1bf4 <ASYNC_WAIT_CTX_get_fd@plt+0x324>  // b.none
    1b4c:	bl	1890 <close@plt>
    1b50:	mov	w20, #0x1                   	// #1
    1b54:	ldp	x21, x22, [sp, #32]
    1b58:	ldr	x23, [sp, #48]
    1b5c:	mov	w0, w20
    1b60:	ldp	x19, x20, [sp, #16]
    1b64:	ldp	x29, x30, [sp], #480
    1b68:	ret
    1b6c:	mov	w3, #0x307                 	// #775
    1b70:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1b74:	add	x2, x2, #0x970
    1b78:	mov	w1, #0x6f                  	// #111
    1b7c:	mov	w0, #0x64                  	// #100
    1b80:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    1b84:	mov	w20, #0x0                   	// #0
    1b88:	b	1b5c <ASYNC_WAIT_CTX_get_fd@plt+0x28c>
    1b8c:	ldp	x21, x22, [sp, #32]
    1b90:	ldr	x23, [sp, #48]
    1b94:	b	1ba4 <ASYNC_WAIT_CTX_get_fd@plt+0x2d4>
    1b98:	mov	w4, #0xffffffff            	// #-1
    1b9c:	mov	w3, w4
    1ba0:	mov	w2, w4
    1ba4:	adrp	x19, 13000 <bind_engine@@Base+0x1088c>
    1ba8:	ldr	x19, [x19, #4064]
    1bac:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1bb0:	add	x1, x1, #0x990
    1bb4:	ldr	x0, [x19]
    1bb8:	bl	1670 <fprintf@plt>
    1bbc:	mov	w4, #0x0                   	// #0
    1bc0:	mov	w3, #0x1                   	// #1
    1bc4:	mov	w2, #0x4                   	// #4
    1bc8:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1bcc:	add	x1, x1, #0x9d0
    1bd0:	ldr	x0, [x19]
    1bd4:	bl	1670 <fprintf@plt>
    1bd8:	mov	w3, #0x318                 	// #792
    1bdc:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1be0:	add	x2, x2, #0x970
    1be4:	mov	w1, #0x6b                  	// #107
    1be8:	mov	w0, #0x64                  	// #100
    1bec:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    1bf0:	b	1b5c <ASYNC_WAIT_CTX_get_fd@plt+0x28c>
    1bf4:	mov	w3, #0x320                 	// #800
    1bf8:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1bfc:	add	x2, x2, #0x970
    1c00:	mov	w1, #0x6d                  	// #109
    1c04:	mov	w0, #0x64                  	// #100
    1c08:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    1c0c:	ldp	x21, x22, [sp, #32]
    1c10:	ldr	x23, [sp, #48]
    1c14:	b	1b5c <ASYNC_WAIT_CTX_get_fd@plt+0x28c>
    1c18:	stp	x29, x30, [sp, #-48]!
    1c1c:	mov	x29, sp
    1c20:	stp	x19, x20, [sp, #16]
    1c24:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    1c28:	ldr	w0, [x0, #816]
    1c2c:	cbnz	w0, 1c6c <ASYNC_WAIT_CTX_get_fd@plt+0x39c>
    1c30:	adrp	x19, 14000 <bind_engine@@Base+0x1188c>
    1c34:	add	x19, x19, #0x1a8
    1c38:	ldr	x0, [x19, #8]
    1c3c:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1c40:	str	xzr, [x19, #8]
    1c44:	ldr	x0, [x19, #24]
    1c48:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1c4c:	str	xzr, [x19, #24]
    1c50:	ldr	x0, [x19, #40]
    1c54:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1c58:	str	xzr, [x19, #40]
    1c5c:	mov	w0, #0x1                   	// #1
    1c60:	ldp	x19, x20, [sp, #16]
    1c64:	ldp	x29, x30, [sp], #48
    1c68:	ret
    1c6c:	str	x21, [sp, #32]
    1c70:	adrp	x19, 14000 <bind_engine@@Base+0x1188c>
    1c74:	add	x19, x19, #0x1e8
    1c78:	adrp	x20, 14000 <bind_engine@@Base+0x1188c>
    1c7c:	add	x21, x20, #0x32c
    1c80:	mov	x1, x19
    1c84:	ldr	w0, [x20, #812]
    1c88:	bl	1740 <ERR_unload_strings@plt>
    1c8c:	add	x1, x19, #0x70
    1c90:	ldr	w0, [x20, #812]
    1c94:	bl	1740 <ERR_unload_strings@plt>
    1c98:	str	wzr, [x21, #4]
    1c9c:	ldr	x21, [sp, #32]
    1ca0:	b	1c30 <ASYNC_WAIT_CTX_get_fd@plt+0x360>
    1ca4:	stp	x29, x30, [sp, #-32]!
    1ca8:	mov	x29, sp
    1cac:	str	x19, [sp, #16]
    1cb0:	cmp	w0, #0x1a7
    1cb4:	b.eq	1ce8 <ASYNC_WAIT_CTX_get_fd@plt+0x418>  // b.none
    1cb8:	cmp	w0, #0x1ab
    1cbc:	b.eq	1cf8 <ASYNC_WAIT_CTX_get_fd@plt+0x428>  // b.none
    1cc0:	adrp	x19, 14000 <bind_engine@@Base+0x1188c>
    1cc4:	add	x19, x19, #0x1a8
    1cc8:	cmp	w0, #0x1a3
    1ccc:	csel	x19, x19, xzr, eq  // eq = none
    1cd0:	ldr	x1, [x19, #8]
    1cd4:	cbz	x1, 1d08 <ASYNC_WAIT_CTX_get_fd@plt+0x438>
    1cd8:	ldr	x0, [x19, #8]
    1cdc:	ldr	x19, [sp, #16]
    1ce0:	ldp	x29, x30, [sp], #32
    1ce4:	ret
    1ce8:	adrp	x19, 14000 <bind_engine@@Base+0x1188c>
    1cec:	add	x19, x19, #0x1a8
    1cf0:	add	x19, x19, #0x10
    1cf4:	b	1cd0 <ASYNC_WAIT_CTX_get_fd@plt+0x400>
    1cf8:	adrp	x19, 14000 <bind_engine@@Base+0x1188c>
    1cfc:	add	x19, x19, #0x1a8
    1d00:	add	x19, x19, #0x20
    1d04:	b	1cd0 <ASYNC_WAIT_CTX_get_fd@plt+0x400>
    1d08:	ldr	w2, [x19]
    1d0c:	mov	w1, #0x10                  	// #16
    1d10:	bl	15a0 <EVP_CIPHER_meth_new@plt>
    1d14:	str	x0, [x19, #8]
    1d18:	cbz	x0, 1d28 <ASYNC_WAIT_CTX_get_fd@plt+0x458>
    1d1c:	mov	w1, #0x10                  	// #16
    1d20:	bl	15d0 <EVP_CIPHER_meth_set_iv_length@plt>
    1d24:	cbnz	w0, 1d38 <ASYNC_WAIT_CTX_get_fd@plt+0x468>
    1d28:	ldr	x0, [x19, #8]
    1d2c:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1d30:	str	xzr, [x19, #8]
    1d34:	b	1cd8 <ASYNC_WAIT_CTX_get_fd@plt+0x408>
    1d38:	mov	x1, #0x1002                	// #4098
    1d3c:	ldr	x0, [x19, #8]
    1d40:	bl	1800 <EVP_CIPHER_meth_set_flags@plt>
    1d44:	cbz	w0, 1d28 <ASYNC_WAIT_CTX_get_fd@plt+0x458>
    1d48:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1d4c:	add	x1, x1, #0x3e0
    1d50:	ldr	x0, [x19, #8]
    1d54:	bl	16a0 <EVP_CIPHER_meth_set_init@plt>
    1d58:	cbz	w0, 1d28 <ASYNC_WAIT_CTX_get_fd@plt+0x458>
    1d5c:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    1d60:	add	x1, x1, #0xe98
    1d64:	ldr	x0, [x19, #8]
    1d68:	bl	1820 <EVP_CIPHER_meth_set_do_cipher@plt>
    1d6c:	cbz	w0, 1d28 <ASYNC_WAIT_CTX_get_fd@plt+0x458>
    1d70:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    1d74:	add	x1, x1, #0xe0c
    1d78:	ldr	x0, [x19, #8]
    1d7c:	bl	15b0 <EVP_CIPHER_meth_set_cleanup@plt>
    1d80:	cbz	w0, 1d28 <ASYNC_WAIT_CTX_get_fd@plt+0x458>
    1d84:	mov	w1, #0x80                  	// #128
    1d88:	ldr	x0, [x19, #8]
    1d8c:	bl	18a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>
    1d90:	cbnz	w0, 1cd8 <ASYNC_WAIT_CTX_get_fd@plt+0x408>
    1d94:	b	1d28 <ASYNC_WAIT_CTX_get_fd@plt+0x458>
    1d98:	cbz	x1, 1de0 <ASYNC_WAIT_CTX_get_fd@plt+0x510>
    1d9c:	stp	x29, x30, [sp, #-32]!
    1da0:	mov	x29, sp
    1da4:	str	x19, [sp, #16]
    1da8:	mov	x19, x1
    1dac:	sub	w2, w3, #0x1a3
    1db0:	cmp	w2, #0x8
    1db4:	b.hi	1df8 <ASYNC_WAIT_CTX_get_fd@plt+0x528>  // b.pmore
    1db8:	mov	x1, #0x1                   	// #1
    1dbc:	lsl	x1, x1, x2
    1dc0:	mov	x2, #0x111                 	// #273
    1dc4:	tst	x1, x2
    1dc8:	b.eq	1df8 <ASYNC_WAIT_CTX_get_fd@plt+0x528>  // b.none
    1dcc:	mov	w0, w3
    1dd0:	bl	1ca4 <ASYNC_WAIT_CTX_get_fd@plt+0x3d4>
    1dd4:	str	x0, [x19]
    1dd8:	mov	w0, #0x1                   	// #1
    1ddc:	b	1e00 <ASYNC_WAIT_CTX_get_fd@plt+0x530>
    1de0:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    1de4:	add	x0, x0, #0x1a8
    1de8:	add	x0, x0, #0x30
    1dec:	str	x0, [x2]
    1df0:	mov	w0, #0x3                   	// #3
    1df4:	ret
    1df8:	str	xzr, [x19]
    1dfc:	mov	w0, #0x0                   	// #0
    1e00:	ldr	x19, [sp, #16]
    1e04:	ldp	x29, x30, [sp], #32
    1e08:	ret
    1e0c:	cbz	x0, 1e88 <ASYNC_WAIT_CTX_get_fd@plt+0x5b8>
    1e10:	stp	x29, x30, [sp, #-32]!
    1e14:	mov	x29, sp
    1e18:	str	x19, [sp, #16]
    1e1c:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    1e20:	mov	x19, x0
    1e24:	cbz	x0, 1e90 <ASYNC_WAIT_CTX_get_fd@plt+0x5c0>
    1e28:	ldr	w2, [x0]
    1e2c:	mov	w0, #0x0                   	// #0
    1e30:	mov	w1, #0x671                 	// #1649
    1e34:	movk	w1, #0x189, lsl #16
    1e38:	cmp	w2, w1
    1e3c:	b.eq	1e4c <ASYNC_WAIT_CTX_get_fd@plt+0x57c>  // b.none
    1e40:	ldr	x19, [sp, #16]
    1e44:	ldp	x29, x30, [sp], #32
    1e48:	ret
    1e4c:	ldr	w0, [x19, #4]
    1e50:	bl	1890 <close@plt>
    1e54:	ldr	w0, [x19, #8]
    1e58:	bl	1890 <close@plt>
    1e5c:	ldr	w0, [x19, #20]
    1e60:	cmp	w0, #0x1
    1e64:	b.eq	1e7c <ASYNC_WAIT_CTX_get_fd@plt+0x5ac>  // b.none
    1e68:	ldr	x1, [x19, #24]
    1e6c:	mov	x0, #0x1                   	// #1
    1e70:	bl	1720 <syscall@plt>
    1e74:	mov	w0, #0x1                   	// #1
    1e78:	b	1e40 <ASYNC_WAIT_CTX_get_fd@plt+0x570>
    1e7c:	ldr	w0, [x19, #16]
    1e80:	bl	1890 <close@plt>
    1e84:	b	1e68 <ASYNC_WAIT_CTX_get_fd@plt+0x598>
    1e88:	mov	w0, #0x0                   	// #0
    1e8c:	ret
    1e90:	mov	w0, #0x0                   	// #0
    1e94:	b	1e40 <ASYNC_WAIT_CTX_get_fd@plt+0x570>
    1e98:	cmp	x1, #0x0
    1e9c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    1ea0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    1ea4:	b.ne	1eb0 <ASYNC_WAIT_CTX_get_fd@plt+0x5e0>  // b.any
    1ea8:	mov	w0, #0x0                   	// #0
    1eac:	ret
    1eb0:	stp	x29, x30, [sp, #-256]!
    1eb4:	mov	x29, sp
    1eb8:	stp	x19, x20, [sp, #16]
    1ebc:	stp	x21, x22, [sp, #32]
    1ec0:	stp	x23, x24, [sp, #48]
    1ec4:	mov	x19, x0
    1ec8:	mov	x20, x1
    1ecc:	mov	x23, x2
    1ed0:	mov	x21, x3
    1ed4:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    1ed8:	mov	x22, x0
    1edc:	cbz	x0, 2398 <ASYNC_WAIT_CTX_get_fd@plt+0xac8>
    1ee0:	ldr	w2, [x0]
    1ee4:	mov	w0, #0x0                   	// #0
    1ee8:	mov	w1, #0x671                 	// #1649
    1eec:	movk	w1, #0x189, lsl #16
    1ef0:	cmp	w2, w1
    1ef4:	b.eq	1f0c <ASYNC_WAIT_CTX_get_fd@plt+0x63c>  // b.none
    1ef8:	ldp	x19, x20, [sp, #16]
    1efc:	ldp	x21, x22, [sp, #32]
    1f00:	ldp	x23, x24, [sp, #48]
    1f04:	ldp	x29, x30, [sp], #256
    1f08:	ret
    1f0c:	stp	x25, x26, [sp, #64]
    1f10:	mov	x0, x19
    1f14:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    1f18:	mov	x24, #0x0                   	// #0
    1f1c:	mov	x25, #0x0                   	// #0
    1f20:	cbnz	w0, 1f2c <ASYNC_WAIT_CTX_get_fd@plt+0x65c>
    1f24:	add	x0, x23, x21
    1f28:	ldp	x24, x25, [x0, #-16]
    1f2c:	mov	x0, x19
    1f30:	bl	1750 <EVP_CIPHER_CTX_iv@plt>
    1f34:	mov	x26, x0
    1f38:	mov	x0, x19
    1f3c:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    1f40:	stp	xzr, xzr, [sp, #136]
    1f44:	stp	xzr, xzr, [sp, #152]
    1f48:	str	xzr, [sp, #184]
    1f4c:	add	x1, sp, #0xc0
    1f50:	stp	xzr, xzr, [sp, #208]
    1f54:	stp	xzr, xzr, [sp, #224]
    1f58:	stp	xzr, xzr, [sp, #240]
    1f5c:	str	x1, [sp, #168]
    1f60:	mov	x1, #0x40                  	// #64
    1f64:	str	x1, [sp, #176]
    1f68:	mov	w1, #0x117                 	// #279
    1f6c:	str	w1, [sp, #200]
    1f70:	mov	w2, #0x3                   	// #3
    1f74:	str	w2, [sp, #204]
    1f78:	mov	x2, #0x14                  	// #20
    1f7c:	str	x2, [sp, #192]
    1f80:	str	w0, [sp, #208]
    1f84:	str	w1, [sp, #224]
    1f88:	mov	w0, #0x2                   	// #2
    1f8c:	str	w0, [sp, #228]
    1f90:	mov	x0, #0x24                  	// #36
    1f94:	str	x0, [sp, #216]
    1f98:	mov	w0, #0x10                  	// #16
    1f9c:	str	w0, [sp, #232]
    1fa0:	ldp	x0, x1, [x26]
    1fa4:	add	x2, sp, x2
    1fa8:	stp	x0, x1, [x2, #216]
    1fac:	str	x23, [sp, #120]
    1fb0:	str	x21, [sp, #128]
    1fb4:	mov	w0, #0x8000                	// #32768
    1fb8:	str	w0, [sp, #184]
    1fbc:	mov	x0, #0x1                   	// #1
    1fc0:	str	x0, [sp, #160]
    1fc4:	add	x0, sp, #0x78
    1fc8:	str	x0, [sp, #152]
    1fcc:	mov	w2, #0x0                   	// #0
    1fd0:	add	x1, sp, #0x88
    1fd4:	ldr	w0, [x22, #4]
    1fd8:	bl	1850 <sendmsg@plt>
    1fdc:	mov	x1, x0
    1fe0:	tbnz	x0, #63, 2138 <ASYNC_WAIT_CTX_get_fd@plt+0x868>
    1fe4:	mov	w0, #0x0                   	// #0
    1fe8:	cmp	x1, x21
    1fec:	b.ne	23d8 <ASYNC_WAIT_CTX_get_fd@plt+0xb08>  // b.any
    1ff0:	ldr	w23, [x22, #4]
    1ff4:	str	xzr, [sp, #120]
    1ff8:	str	xzr, [sp, #136]
    1ffc:	str	xzr, [sp, #144]
    2000:	ldr	w0, [x22, #20]
    2004:	cbnz	w0, 2040 <ASYNC_WAIT_CTX_get_fd@plt+0x770>
    2008:	str	xzr, [sp, #192]
    200c:	bl	1640 <ASYNC_get_current_job@plt>
    2010:	cbz	x0, 2218 <ASYNC_WAIT_CTX_get_fd@plt+0x948>
    2014:	bl	1790 <ASYNC_get_wait_ctx@plt>
    2018:	mov	x26, x0
    201c:	cbz	x0, 22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    2020:	add	x3, sp, #0xc0
    2024:	add	x2, x22, #0x10
    2028:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    202c:	add	x1, x1, #0xcd0
    2030:	bl	18d0 <ASYNC_WAIT_CTX_get_fd@plt>
    2034:	cbz	w0, 2170 <ASYNC_WAIT_CTX_get_fd@plt+0x8a0>
    2038:	mov	w0, #0x2                   	// #2
    203c:	str	w0, [x22, #20]
    2040:	add	x0, x22, #0x40
    2044:	str	x0, [sp, #112]
    2048:	stp	xzr, xzr, [x22, #64]
    204c:	stp	xzr, xzr, [x22, #80]
    2050:	stp	xzr, xzr, [x22, #112]
    2054:	str	w23, [x22, #84]
    2058:	str	x20, [x22, #88]
    205c:	str	xzr, [x22, #104]
    2060:	str	x21, [x22, #96]
    2064:	mov	w1, #0x1                   	// #1
    2068:	str	w1, [x22, #120]
    206c:	ldr	w1, [x22, #16]
    2070:	str	w1, [x22, #124]
    2074:	add	x3, sp, #0x70
    2078:	mov	x2, #0x1                   	// #1
    207c:	ldr	x1, [x22, #24]
    2080:	mov	x0, #0x2                   	// #2
    2084:	bl	1720 <syscall@plt>
    2088:	str	wzr, [sp, #100]
    208c:	tbnz	w0, #31, 2288 <ASYNC_WAIT_CTX_get_fd@plt+0x9b8>
    2090:	stp	x27, x28, [sp, #80]
    2094:	add	x26, sp, #0x78
    2098:	mov	x23, #0x8                   	// #8
    209c:	add	x28, sp, #0x88
    20a0:	add	x27, sp, #0xc0
    20a4:	add	x0, sp, #0x70
    20a8:	str	x0, [sp, #104]
    20ac:	bl	1870 <ASYNC_pause_job@plt>
    20b0:	mov	x2, x23
    20b4:	mov	x1, x26
    20b8:	ldr	w0, [x22, #16]
    20bc:	bl	1700 <read@plt>
    20c0:	tbnz	w0, #31, 22b8 <ASYNC_WAIT_CTX_get_fd@plt+0x9e8>
    20c4:	ldr	x0, [sp, #120]
    20c8:	cbz	x0, 20ac <ASYNC_WAIT_CTX_get_fd@plt+0x7dc>
    20cc:	mov	x5, x28
    20d0:	mov	x4, x27
    20d4:	mov	x3, #0x1                   	// #1
    20d8:	mov	x2, x3
    20dc:	ldr	x1, [x22, #24]
    20e0:	mov	x0, #0x4                   	// #4
    20e4:	bl	1720 <syscall@plt>
    20e8:	cmp	w0, #0x0
    20ec:	b.le	233c <ASYNC_WAIT_CTX_get_fd@plt+0xa6c>
    20f0:	ldr	x0, [sp, #208]
    20f4:	tbz	x0, #63, 23b0 <ASYNC_WAIT_CTX_get_fd@plt+0xae0>
    20f8:	cmn	x0, #0x10
    20fc:	b.ne	23a0 <ASYNC_WAIT_CTX_get_fd@plt+0xad0>  // b.any
    2100:	ldr	w0, [sp, #100]
    2104:	add	w1, w0, #0x1
    2108:	str	w1, [sp, #100]
    210c:	cmp	w0, #0x2
    2110:	b.gt	23a8 <ASYNC_WAIT_CTX_get_fd@plt+0xad8>
    2114:	ldr	x3, [sp, #104]
    2118:	mov	x2, #0x1                   	// #1
    211c:	ldr	x1, [x22, #24]
    2120:	mov	x0, #0x2                   	// #2
    2124:	bl	1720 <syscall@plt>
    2128:	tbnz	w0, #31, 2304 <ASYNC_WAIT_CTX_get_fd@plt+0xa34>
    212c:	ldr	w0, [sp, #100]
    2130:	str	w0, [sp, #100]
    2134:	b	20ac <ASYNC_WAIT_CTX_get_fd@plt+0x7dc>
    2138:	mov	w3, #0x1e0                 	// #480
    213c:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2140:	add	x2, x2, #0x970
    2144:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2148:	add	x1, x1, #0xa10
    214c:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    2150:	ldr	x0, [x0, #4064]
    2154:	ldr	x0, [x0]
    2158:	bl	1670 <fprintf@plt>
    215c:	mov	x0, #0x0                   	// #0
    2160:	bl	1710 <perror@plt>
    2164:	mov	w0, #0x0                   	// #0
    2168:	ldp	x25, x26, [sp, #64]
    216c:	b	1ef8 <ASYNC_WAIT_CTX_get_fd@plt+0x628>
    2170:	mov	w2, #0x0                   	// #0
    2174:	mov	w1, #0x0                   	// #0
    2178:	mov	x0, #0x13                  	// #19
    217c:	bl	1720 <syscall@plt>
    2180:	str	w0, [x22, #16]
    2184:	cmn	w0, #0x1
    2188:	b.eq	21c4 <ASYNC_WAIT_CTX_get_fd@plt+0x8f4>  // b.none
    218c:	adrp	x4, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2190:	add	x4, x4, #0x9f8
    2194:	ldr	x3, [sp, #192]
    2198:	mov	w2, w0
    219c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    21a0:	add	x1, x1, #0xcd0
    21a4:	mov	x0, x26
    21a8:	bl	16b0 <ASYNC_WAIT_CTX_set_wait_fd@plt>
    21ac:	cbz	w0, 220c <ASYNC_WAIT_CTX_get_fd@plt+0x93c>
    21b0:	mov	w2, #0x800                 	// #2048
    21b4:	mov	w1, #0x4                   	// #4
    21b8:	ldr	w0, [x22, #16]
    21bc:	bl	18b0 <fcntl@plt>
    21c0:	b	2038 <ASYNC_WAIT_CTX_get_fd@plt+0x768>
    21c4:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    21c8:	add	x19, x19, #0x970
    21cc:	mov	w3, #0xa2                  	// #162
    21d0:	mov	x2, x19
    21d4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    21d8:	add	x1, x1, #0xa50
    21dc:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    21e0:	ldr	x0, [x0, #4064]
    21e4:	ldr	x0, [x0]
    21e8:	bl	1670 <fprintf@plt>
    21ec:	mov	x0, #0x0                   	// #0
    21f0:	bl	1710 <perror@plt>
    21f4:	mov	w3, #0xa3                  	// #163
    21f8:	mov	x2, x19
    21fc:	mov	w1, #0x6c                  	// #108
    2200:	mov	w0, #0x67                  	// #103
    2204:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2208:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    220c:	ldr	w0, [x22, #16]
    2210:	bl	1890 <close@plt>
    2214:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    2218:	mov	w2, #0x0                   	// #0
    221c:	mov	w1, #0x0                   	// #0
    2220:	mov	x0, #0x13                  	// #19
    2224:	bl	1720 <syscall@plt>
    2228:	str	w0, [x22, #16]
    222c:	cmn	w0, #0x1
    2230:	b.eq	2240 <ASYNC_WAIT_CTX_get_fd@plt+0x970>  // b.none
    2234:	mov	w0, #0x1                   	// #1
    2238:	str	w0, [x22, #20]
    223c:	b	2040 <ASYNC_WAIT_CTX_get_fd@plt+0x770>
    2240:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2244:	add	x19, x19, #0x970
    2248:	mov	w3, #0xba                  	// #186
    224c:	mov	x2, x19
    2250:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2254:	add	x1, x1, #0xa50
    2258:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    225c:	ldr	x0, [x0, #4064]
    2260:	ldr	x0, [x0]
    2264:	bl	1670 <fprintf@plt>
    2268:	mov	x0, #0x0                   	// #0
    226c:	bl	1710 <perror@plt>
    2270:	mov	w3, #0xbb                  	// #187
    2274:	mov	x2, x19
    2278:	mov	w1, #0x6c                  	// #108
    227c:	mov	w0, #0x67                  	// #103
    2280:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2284:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    2288:	mov	w3, #0x102                 	// #258
    228c:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2290:	add	x2, x2, #0x970
    2294:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2298:	add	x1, x1, #0xa80
    229c:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    22a0:	ldr	x0, [x0, #4064]
    22a4:	ldr	x0, [x0]
    22a8:	bl	1670 <fprintf@plt>
    22ac:	mov	x0, #0x0                   	// #0
    22b0:	bl	1710 <perror@plt>
    22b4:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    22b8:	bl	16f0 <__errno_location@plt>
    22bc:	ldr	w0, [x0]
    22c0:	cmp	w0, #0xb
    22c4:	b.eq	20ac <ASYNC_WAIT_CTX_get_fd@plt+0x7dc>  // b.none
    22c8:	mov	w3, #0x10f                 	// #271
    22cc:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    22d0:	add	x2, x2, #0x970
    22d4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    22d8:	add	x1, x1, #0xaa8
    22dc:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    22e0:	ldr	x0, [x0, #4064]
    22e4:	ldr	x0, [x0]
    22e8:	bl	1670 <fprintf@plt>
    22ec:	mov	x0, #0x0                   	// #0
    22f0:	bl	1710 <perror@plt>
    22f4:	ldp	x27, x28, [sp, #80]
    22f8:	mov	w0, #0x0                   	// #0
    22fc:	ldp	x25, x26, [sp, #64]
    2300:	b	1ef8 <ASYNC_WAIT_CTX_get_fd@plt+0x628>
    2304:	ldr	w4, [sp, #100]
    2308:	mov	w3, #0x128                 	// #296
    230c:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2310:	add	x2, x2, #0x970
    2314:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2318:	add	x1, x1, #0xad8
    231c:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    2320:	ldr	x0, [x0, #4064]
    2324:	ldr	x0, [x0]
    2328:	bl	1670 <fprintf@plt>
    232c:	mov	x0, #0x0                   	// #0
    2330:	bl	1710 <perror@plt>
    2334:	ldp	x27, x28, [sp, #80]
    2338:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    233c:	tbz	w0, #31, 20ac <ASYNC_WAIT_CTX_get_fd@plt+0x7dc>
    2340:	mov	w3, #0x13a                 	// #314
    2344:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2348:	add	x2, x2, #0x970
    234c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2350:	add	x1, x1, #0xb10
    2354:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    2358:	ldr	x0, [x0, #4064]
    235c:	ldr	x0, [x0]
    2360:	bl	1670 <fprintf@plt>
    2364:	mov	x0, #0x0                   	// #0
    2368:	bl	1710 <perror@plt>
    236c:	ldp	x27, x28, [sp, #80]
    2370:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    2374:	mov	x0, x19
    2378:	bl	1880 <EVP_CIPHER_CTX_iv_noconst@plt>
    237c:	add	x20, x20, x21
    2380:	ldp	x2, x3, [x20, #-16]
    2384:	stp	x2, x3, [x0]
    2388:	mov	w0, #0x1                   	// #1
    238c:	ldp	x25, x26, [sp, #64]
    2390:	ldp	x27, x28, [sp, #80]
    2394:	b	1ef8 <ASYNC_WAIT_CTX_get_fd@plt+0x628>
    2398:	mov	w0, #0x0                   	// #0
    239c:	b	1ef8 <ASYNC_WAIT_CTX_get_fd@plt+0x628>
    23a0:	ldp	x27, x28, [sp, #80]
    23a4:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    23a8:	ldp	x27, x28, [sp, #80]
    23ac:	b	22f8 <ASYNC_WAIT_CTX_get_fd@plt+0xa28>
    23b0:	mov	x0, x19
    23b4:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    23b8:	cbnz	w0, 2374 <ASYNC_WAIT_CTX_get_fd@plt+0xaa4>
    23bc:	mov	x0, x19
    23c0:	bl	1880 <EVP_CIPHER_CTX_iv_noconst@plt>
    23c4:	stp	x24, x25, [x0]
    23c8:	mov	w0, #0x1                   	// #1
    23cc:	ldp	x25, x26, [sp, #64]
    23d0:	ldp	x27, x28, [sp, #80]
    23d4:	b	1ef8 <ASYNC_WAIT_CTX_get_fd@plt+0x628>
    23d8:	ldp	x25, x26, [sp, #64]
    23dc:	b	1ef8 <ASYNC_WAIT_CTX_get_fd@plt+0x628>
    23e0:	cmp	x0, #0x0
    23e4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    23e8:	b.ne	23f4 <ASYNC_WAIT_CTX_get_fd@plt+0xb24>  // b.any
    23ec:	mov	w0, #0x0                   	// #0
    23f0:	ret
    23f4:	stp	x29, x30, [sp, #-144]!
    23f8:	mov	x29, sp
    23fc:	stp	x19, x20, [sp, #16]
    2400:	mov	x19, x0
    2404:	mov	x20, x1
    2408:	bl	1660 <EVP_CIPHER_CTX_cipher@plt>
    240c:	mov	x1, x0
    2410:	mov	w0, #0x0                   	// #0
    2414:	cbz	x1, 274c <ASYNC_WAIT_CTX_get_fd@plt+0xe7c>
    2418:	stp	x21, x22, [sp, #32]
    241c:	mov	x0, x19
    2420:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    2424:	mov	x21, x0
    2428:	mov	w0, #0x0                   	// #0
    242c:	cbz	x21, 2748 <ASYNC_WAIT_CTX_get_fd@plt+0xe78>
    2430:	mov	x0, x19
    2434:	bl	17c0 <EVP_CIPHER_CTX_nid@plt>
    2438:	sub	w2, w0, #0x1a3
    243c:	cmp	w2, #0x8
    2440:	b.hi	273c <ASYNC_WAIT_CTX_get_fd@plt+0xe6c>  // b.pmore
    2444:	mov	x1, #0x1                   	// #1
    2448:	lsl	x1, x1, x2
    244c:	mov	w0, #0x0                   	// #0
    2450:	mov	x2, #0x111                 	// #273
    2454:	tst	x1, x2
    2458:	b.eq	2758 <ASYNC_WAIT_CTX_get_fd@plt+0xe88>  // b.none
    245c:	mov	x0, x19
    2460:	bl	15c0 <EVP_CIPHER_CTX_iv_length@plt>
    2464:	mov	w1, w0
    2468:	mov	w0, #0x0                   	// #0
    246c:	cmp	w1, #0x10
    2470:	b.eq	247c <ASYNC_WAIT_CTX_get_fd@plt+0xbac>  // b.none
    2474:	ldp	x21, x22, [sp, #32]
    2478:	b	274c <ASYNC_WAIT_CTX_get_fd@plt+0xe7c>
    247c:	mov	w0, #0xffffffff            	// #-1
    2480:	str	w0, [x21, #4]
    2484:	str	w0, [x21, #8]
    2488:	add	x22, sp, #0x38
    248c:	stp	xzr, xzr, [sp, #56]
    2490:	stp	xzr, xzr, [sp, #72]
    2494:	stp	xzr, xzr, [sp, #88]
    2498:	stp	xzr, xzr, [sp, #104]
    249c:	stp	xzr, xzr, [sp, #120]
    24a0:	str	xzr, [sp, #136]
    24a4:	mov	w0, #0x26                  	// #38
    24a8:	strh	w0, [sp, #56]
    24ac:	mov	x2, #0xe                   	// #14
    24b0:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    24b4:	add	x1, x1, #0xb40
    24b8:	add	x0, sp, #0x3a
    24bc:	bl	1860 <OPENSSL_strlcpy@plt>
    24c0:	mov	x2, #0x40                  	// #64
    24c4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    24c8:	add	x1, x1, #0xb50
    24cc:	add	x0, x22, #0x18
    24d0:	bl	1860 <OPENSSL_strlcpy@plt>
    24d4:	mov	w2, #0x0                   	// #0
    24d8:	mov	w1, #0x5                   	// #5
    24dc:	mov	w0, #0x26                  	// #38
    24e0:	bl	1650 <socket@plt>
    24e4:	str	w0, [x21, #8]
    24e8:	cmn	w0, #0x1
    24ec:	b.eq	2588 <ASYNC_WAIT_CTX_get_fd@plt+0xcb8>  // b.none
    24f0:	mov	w2, #0x58                  	// #88
    24f4:	add	x1, sp, #0x38
    24f8:	bl	1770 <bind@plt>
    24fc:	tbnz	w0, #31, 25f4 <ASYNC_WAIT_CTX_get_fd@plt+0xd24>
    2500:	mov	x2, #0x0                   	// #0
    2504:	mov	x1, #0x0                   	// #0
    2508:	ldr	w0, [x21, #8]
    250c:	bl	1830 <accept@plt>
    2510:	str	w0, [x21, #4]
    2514:	tbnz	w0, #31, 263c <ASYNC_WAIT_CTX_get_fd@plt+0xd6c>
    2518:	mov	x0, x19
    251c:	bl	1600 <EVP_CIPHER_CTX_key_length@plt>
    2520:	mov	w4, w0
    2524:	mov	x3, x20
    2528:	mov	w2, #0x1                   	// #1
    252c:	mov	w1, #0x117                 	// #279
    2530:	ldr	w0, [x21, #8]
    2534:	bl	17f0 <setsockopt@plt>
    2538:	tbnz	w0, #31, 2694 <ASYNC_WAIT_CTX_get_fd@plt+0xdc4>
    253c:	str	xzr, [x21, #24]
    2540:	add	x2, x21, #0x18
    2544:	mov	w1, #0x1                   	// #1
    2548:	mov	x0, #0x0                   	// #0
    254c:	bl	1720 <syscall@plt>
    2550:	tbnz	w0, #31, 26dc <ASYNC_WAIT_CTX_get_fd@plt+0xe0c>
    2554:	stp	xzr, xzr, [x21, #64]
    2558:	stp	xzr, xzr, [x21, #80]
    255c:	stp	xzr, xzr, [x21, #96]
    2560:	stp	xzr, xzr, [x21, #112]
    2564:	mov	w0, #0xffffffff            	// #-1
    2568:	str	w0, [x21, #16]
    256c:	str	wzr, [x21, #20]
    2570:	mov	w0, #0x671                 	// #1649
    2574:	movk	w0, #0x189, lsl #16
    2578:	str	w0, [x21]
    257c:	mov	w0, #0x1                   	// #1
    2580:	ldp	x21, x22, [sp, #32]
    2584:	b	274c <ASYNC_WAIT_CTX_get_fd@plt+0xe7c>
    2588:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    258c:	add	x19, x19, #0x970
    2590:	mov	w3, #0x178                 	// #376
    2594:	mov	x2, x19
    2598:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    259c:	add	x1, x1, #0xb60
    25a0:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    25a4:	ldr	x0, [x0, #4064]
    25a8:	ldr	x0, [x0]
    25ac:	bl	1670 <fprintf@plt>
    25b0:	mov	x0, #0x0                   	// #0
    25b4:	bl	1710 <perror@plt>
    25b8:	mov	w3, #0x179                 	// #377
    25bc:	mov	x2, x19
    25c0:	mov	w1, #0x6d                  	// #109
    25c4:	mov	w0, #0x65                  	// #101
    25c8:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    25cc:	ldr	w0, [x21, #8]
    25d0:	tbz	w0, #31, 2684 <ASYNC_WAIT_CTX_get_fd@plt+0xdb4>
    25d4:	ldr	w0, [x21, #4]
    25d8:	tbz	w0, #31, 268c <ASYNC_WAIT_CTX_get_fd@plt+0xdbc>
    25dc:	mov	w0, #0xffffffff            	// #-1
    25e0:	str	w0, [x21, #4]
    25e4:	str	w0, [x21, #8]
    25e8:	mov	w0, #0x0                   	// #0
    25ec:	ldp	x21, x22, [sp, #32]
    25f0:	b	274c <ASYNC_WAIT_CTX_get_fd@plt+0xe7c>
    25f4:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    25f8:	add	x19, x19, #0x970
    25fc:	mov	w3, #0x17f                 	// #383
    2600:	mov	x2, x19
    2604:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2608:	add	x1, x1, #0xb90
    260c:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    2610:	ldr	x0, [x0, #4064]
    2614:	ldr	x0, [x0]
    2618:	bl	1670 <fprintf@plt>
    261c:	mov	x0, #0x0                   	// #0
    2620:	bl	1710 <perror@plt>
    2624:	mov	w3, #0x180                 	// #384
    2628:	mov	x2, x19
    262c:	mov	w1, #0x67                  	// #103
    2630:	mov	w0, #0x65                  	// #101
    2634:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2638:	b	25cc <ASYNC_WAIT_CTX_get_fd@plt+0xcfc>
    263c:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2640:	add	x19, x19, #0x970
    2644:	mov	w3, #0x186                 	// #390
    2648:	mov	x2, x19
    264c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2650:	add	x1, x1, #0xbc0
    2654:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    2658:	ldr	x0, [x0, #4064]
    265c:	ldr	x0, [x0]
    2660:	bl	1670 <fprintf@plt>
    2664:	mov	x0, #0x0                   	// #0
    2668:	bl	1710 <perror@plt>
    266c:	mov	w3, #0x187                 	// #391
    2670:	mov	x2, x19
    2674:	mov	w1, #0x6e                  	// #110
    2678:	mov	w0, #0x65                  	// #101
    267c:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2680:	b	25cc <ASYNC_WAIT_CTX_get_fd@plt+0xcfc>
    2684:	bl	1890 <close@plt>
    2688:	b	25d4 <ASYNC_WAIT_CTX_get_fd@plt+0xd04>
    268c:	bl	1890 <close@plt>
    2690:	b	25dc <ASYNC_WAIT_CTX_get_fd@plt+0xd0c>
    2694:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2698:	add	x19, x19, #0x970
    269c:	mov	w3, #0x162                 	// #354
    26a0:	mov	x2, x19
    26a4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    26a8:	add	x1, x1, #0xbf0
    26ac:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    26b0:	ldr	x0, [x0, #4064]
    26b4:	ldr	x0, [x0]
    26b8:	bl	1670 <fprintf@plt>
    26bc:	mov	x0, #0x0                   	// #0
    26c0:	bl	1710 <perror@plt>
    26c4:	mov	w3, #0x163                 	// #355
    26c8:	mov	x2, x19
    26cc:	mov	w1, #0x6a                  	// #106
    26d0:	mov	w0, #0x68                  	// #104
    26d4:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    26d8:	b	2720 <ASYNC_WAIT_CTX_get_fd@plt+0xe50>
    26dc:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    26e0:	add	x19, x19, #0x970
    26e4:	mov	w3, #0xcc                  	// #204
    26e8:	mov	x2, x19
    26ec:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    26f0:	add	x1, x1, #0xc28
    26f4:	adrp	x0, 13000 <bind_engine@@Base+0x1088c>
    26f8:	ldr	x0, [x0, #4064]
    26fc:	ldr	x0, [x0]
    2700:	bl	1670 <fprintf@plt>
    2704:	mov	x0, #0x0                   	// #0
    2708:	bl	1710 <perror@plt>
    270c:	mov	w3, #0xcd                  	// #205
    2710:	mov	x2, x19
    2714:	mov	w1, #0x69                  	// #105
    2718:	mov	w0, #0x66                  	// #102
    271c:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2720:	ldr	w0, [x21, #4]
    2724:	bl	1890 <close@plt>
    2728:	ldr	w0, [x21, #8]
    272c:	bl	1890 <close@plt>
    2730:	mov	w0, #0x0                   	// #0
    2734:	ldp	x21, x22, [sp, #32]
    2738:	b	274c <ASYNC_WAIT_CTX_get_fd@plt+0xe7c>
    273c:	mov	w0, #0x0                   	// #0
    2740:	ldp	x21, x22, [sp, #32]
    2744:	b	274c <ASYNC_WAIT_CTX_get_fd@plt+0xe7c>
    2748:	ldp	x21, x22, [sp, #32]
    274c:	ldp	x19, x20, [sp, #16]
    2750:	ldp	x29, x30, [sp], #144
    2754:	ret
    2758:	ldp	x21, x22, [sp, #32]
    275c:	b	274c <ASYNC_WAIT_CTX_get_fd@plt+0xe7c>

0000000000002760 <v_check@@Base>:
    2760:	mov	w1, #0x2ffff               	// #196607
    2764:	cmp	x0, x1
    2768:	mov	x0, #0x30000               	// #196608
    276c:	csel	x0, x0, xzr, hi  // hi = pmore
    2770:	ret

0000000000002774 <bind_engine@@Base>:
    2774:	stp	x29, x30, [sp, #-48]!
    2778:	mov	x29, sp
    277c:	stp	x19, x20, [sp, #16]
    2780:	stp	x21, x22, [sp, #32]
    2784:	mov	x21, x0
    2788:	mov	x20, x1
    278c:	mov	x19, x2
    2790:	bl	1610 <ENGINE_get_static_state@plt>
    2794:	ldr	x1, [x19]
    2798:	cmp	x1, x0
    279c:	b.eq	27b0 <bind_engine@@Base+0x3c>  // b.none
    27a0:	ldr	x2, [x19, #24]
    27a4:	ldr	x1, [x19, #16]
    27a8:	ldr	x0, [x19, #8]
    27ac:	bl	1680 <CRYPTO_set_mem_functions@plt>
    27b0:	cbz	x20, 27cc <bind_engine@@Base+0x58>
    27b4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    27b8:	add	x1, x1, #0xcd0
    27bc:	mov	x0, x20
    27c0:	bl	17d0 <strcmp@plt>
    27c4:	mov	w1, #0x0                   	// #0
    27c8:	cbnz	w0, 27d8 <bind_engine@@Base+0x64>
    27cc:	bl	1a78 <ASYNC_WAIT_CTX_get_fd@plt+0x1a8>
    27d0:	mov	w1, w0
    27d4:	cbnz	w0, 27f0 <bind_engine@@Base+0x7c>
    27d8:	cmp	w1, #0x0
    27dc:	cset	w0, ne  // ne = any
    27e0:	ldp	x19, x20, [sp, #16]
    27e4:	ldp	x21, x22, [sp, #32]
    27e8:	ldp	x29, x30, [sp], #48
    27ec:	ret
    27f0:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    27f4:	ldr	w0, [x0, #812]
    27f8:	cbz	w0, 2858 <bind_engine@@Base+0xe4>
    27fc:	adrp	x0, 14000 <bind_engine@@Base+0x1188c>
    2800:	ldr	w0, [x0, #816]
    2804:	cbz	w0, 2868 <bind_engine@@Base+0xf4>
    2808:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    280c:	add	x1, x1, #0xcd0
    2810:	mov	x0, x21
    2814:	bl	15f0 <ENGINE_set_id@plt>
    2818:	cbz	w0, 2830 <bind_engine@@Base+0xbc>
    281c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2820:	add	x1, x1, #0xc50
    2824:	mov	x0, x21
    2828:	bl	1730 <ENGINE_set_name@plt>
    282c:	cbnz	w0, 289c <bind_engine@@Base+0x128>
    2830:	mov	w3, #0x2d2                 	// #722
    2834:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2838:	add	x2, x2, #0x970
    283c:	mov	w1, #0x64                  	// #100
    2840:	mov	w0, #0x69                  	// #105
    2844:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2848:	mov	w19, #0x0                   	// #0
    284c:	cmp	w19, #0x0
    2850:	cset	w1, ne  // ne = any
    2854:	b	27d8 <bind_engine@@Base+0x64>
    2858:	bl	16d0 <ERR_get_next_error_library@plt>
    285c:	adrp	x1, 14000 <bind_engine@@Base+0x1188c>
    2860:	str	w0, [x1, #812]
    2864:	b	27fc <bind_engine@@Base+0x88>
    2868:	adrp	x19, 14000 <bind_engine@@Base+0x1188c>
    286c:	add	x19, x19, #0x1e8
    2870:	adrp	x20, 14000 <bind_engine@@Base+0x1188c>
    2874:	add	x22, x20, #0x32c
    2878:	mov	x1, x19
    287c:	ldr	w0, [x20, #812]
    2880:	bl	17b0 <ERR_load_strings@plt>
    2884:	add	x1, x19, #0x70
    2888:	ldr	w0, [x20, #812]
    288c:	bl	17b0 <ERR_load_strings@plt>
    2890:	mov	w0, #0x1                   	// #1
    2894:	str	w0, [x22, #4]
    2898:	b	2808 <bind_engine@@Base+0x94>
    289c:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    28a0:	add	x1, x1, #0xc18
    28a4:	mov	x0, x21
    28a8:	bl	16c0 <ENGINE_set_destroy_function@plt>
    28ac:	cbz	w0, 2830 <bind_engine@@Base+0xbc>
    28b0:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    28b4:	add	x1, x1, #0x9e8
    28b8:	mov	x0, x21
    28bc:	bl	1760 <ENGINE_set_init_function@plt>
    28c0:	cbz	w0, 2830 <bind_engine@@Base+0xbc>
    28c4:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    28c8:	add	x1, x1, #0x9f0
    28cc:	mov	x0, x21
    28d0:	bl	1840 <ENGINE_set_finish_function@plt>
    28d4:	mov	x19, #0x0                   	// #0
    28d8:	cbz	w0, 2830 <bind_engine@@Base+0xbc>
    28dc:	adrp	x20, 14000 <bind_engine@@Base+0x1188c>
    28e0:	add	x20, x20, #0x1a8
    28e4:	add	x20, x20, #0x30
    28e8:	ldr	w0, [x20, x19, lsl #2]
    28ec:	bl	1ca4 <ASYNC_WAIT_CTX_get_fd@plt+0x3d4>
    28f0:	cbz	x0, 2920 <bind_engine@@Base+0x1ac>
    28f4:	add	x19, x19, #0x1
    28f8:	cmp	x19, #0x3
    28fc:	b.ne	28e8 <bind_engine@@Base+0x174>  // b.any
    2900:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2904:	add	x1, x1, #0xd98
    2908:	mov	x0, x21
    290c:	bl	1810 <ENGINE_set_ciphers@plt>
    2910:	mov	w19, w0
    2914:	cbz	w0, 2940 <bind_engine@@Base+0x1cc>
    2918:	mov	w19, #0x1                   	// #1
    291c:	b	284c <bind_engine@@Base+0xd8>
    2920:	mov	w3, #0x2dd                 	// #733
    2924:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2928:	add	x2, x2, #0x970
    292c:	mov	w1, #0x64                  	// #100
    2930:	mov	w0, #0x69                  	// #105
    2934:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2938:	mov	w19, #0x0                   	// #0
    293c:	b	284c <bind_engine@@Base+0xd8>
    2940:	mov	w3, #0x2e3                 	// #739
    2944:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2948:	add	x2, x2, #0x970
    294c:	mov	w1, #0x64                  	// #100
    2950:	mov	w0, #0x69                  	// #105
    2954:	bl	1a10 <ASYNC_WAIT_CTX_get_fd@plt+0x140>
    2958:	b	284c <bind_engine@@Base+0xd8>

Disassembly of section .fini:

000000000000295c <.fini>:
    295c:	stp	x29, x30, [sp, #-16]!
    2960:	mov	x29, sp
    2964:	ldp	x29, x30, [sp], #16
    2968:	ret
