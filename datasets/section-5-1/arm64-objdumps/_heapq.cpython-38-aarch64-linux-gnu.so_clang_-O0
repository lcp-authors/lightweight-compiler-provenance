
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000ae8 <.init>:
 ae8:	stp	x29, x30, [sp, #-16]!
 aec:	mov	x29, sp
 af0:	bl	be0 <PyModule_AddObject@plt+0x10>
 af4:	ldp	x29, x30, [sp], #16
 af8:	ret

Disassembly of section .plt:

0000000000000b00 <strlen@plt-0x20>:
 b00:	stp	x16, x30, [sp, #-16]!
 b04:	adrp	x16, 13000 <PyInit__heapq@@Base+0x1234c>
 b08:	ldr	x17, [x16, #4088]
 b0c:	add	x16, x16, #0xff8
 b10:	br	x17
 b14:	nop
 b18:	nop
 b1c:	nop

0000000000000b20 <strlen@plt>:
 b20:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b24:	ldr	x17, [x16]
 b28:	add	x16, x16, #0x0
 b2c:	br	x17

0000000000000b30 <__cxa_finalize@plt>:
 b30:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b34:	ldr	x17, [x16, #8]
 b38:	add	x16, x16, #0x8
 b3c:	br	x17

0000000000000b40 <PyList_SetSlice@plt>:
 b40:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b44:	ldr	x17, [x16, #16]
 b48:	add	x16, x16, #0x10
 b4c:	br	x17

0000000000000b50 <_Py_Dealloc@plt>:
 b50:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b54:	ldr	x17, [x16, #24]
 b58:	add	x16, x16, #0x18
 b5c:	br	x17

0000000000000b60 <PyErr_SetString@plt>:
 b60:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b64:	ldr	x17, [x16, #32]
 b68:	add	x16, x16, #0x20
 b6c:	br	x17

0000000000000b70 <PyObject_RichCompareBool@plt>:
 b70:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b74:	ldr	x17, [x16, #40]
 b78:	add	x16, x16, #0x28
 b7c:	br	x17

0000000000000b80 <PyList_Append@plt>:
 b80:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b84:	ldr	x17, [x16, #48]
 b88:	add	x16, x16, #0x30
 b8c:	br	x17

0000000000000b90 <__gmon_start__@plt>:
 b90:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 b94:	ldr	x17, [x16, #56]
 b98:	add	x16, x16, #0x38
 b9c:	br	x17

0000000000000ba0 <_PyArg_CheckPositional@plt>:
 ba0:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 ba4:	ldr	x17, [x16, #64]
 ba8:	add	x16, x16, #0x40
 bac:	br	x17

0000000000000bb0 <PyModule_Create2@plt>:
 bb0:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 bb4:	ldr	x17, [x16, #72]
 bb8:	add	x16, x16, #0x48
 bbc:	br	x17

0000000000000bc0 <PyUnicode_DecodeUTF8@plt>:
 bc0:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #80]
 bc8:	add	x16, x16, #0x50
 bcc:	br	x17

0000000000000bd0 <PyModule_AddObject@plt>:
 bd0:	adrp	x16, 14000 <strlen@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #88]
 bd8:	add	x16, x16, #0x58
 bdc:	br	x17

Disassembly of section .text:

0000000000000be0 <PyInit__heapq@@Base-0xd4>:
     be0:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1234c>
     be4:	ldr	x0, [x0, #4040]
     be8:	cbz	x0, bf0 <PyModule_AddObject@plt+0x20>
     bec:	b	b90 <__gmon_start__@plt>
     bf0:	ret
     bf4:	nop
     bf8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1334c>
     bfc:	add	x0, x0, #0x1f0
     c00:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1334c>
     c04:	add	x1, x1, #0x1f0
     c08:	cmp	x1, x0
     c0c:	b.eq	c24 <PyModule_AddObject@plt+0x54>  // b.none
     c10:	adrp	x1, 13000 <PyInit__heapq@@Base+0x1234c>
     c14:	ldr	x1, [x1, #4008]
     c18:	cbz	x1, c24 <PyModule_AddObject@plt+0x54>
     c1c:	mov	x16, x1
     c20:	br	x16
     c24:	ret
     c28:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1334c>
     c2c:	add	x0, x0, #0x1f0
     c30:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1334c>
     c34:	add	x1, x1, #0x1f0
     c38:	sub	x1, x1, x0
     c3c:	lsr	x2, x1, #63
     c40:	add	x1, x2, x1, asr #3
     c44:	cmp	xzr, x1, asr #1
     c48:	asr	x1, x1, #1
     c4c:	b.eq	c64 <PyModule_AddObject@plt+0x94>  // b.none
     c50:	adrp	x2, 13000 <PyInit__heapq@@Base+0x1234c>
     c54:	ldr	x2, [x2, #4064]
     c58:	cbz	x2, c64 <PyModule_AddObject@plt+0x94>
     c5c:	mov	x16, x2
     c60:	br	x16
     c64:	ret
     c68:	stp	x29, x30, [sp, #-32]!
     c6c:	mov	x29, sp
     c70:	str	x19, [sp, #16]
     c74:	adrp	x19, 14000 <PyInit__heapq@@Base+0x1334c>
     c78:	ldrb	w0, [x19, #496]
     c7c:	cbnz	w0, ca4 <PyModule_AddObject@plt+0xd4>
     c80:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1234c>
     c84:	ldr	x0, [x0, #4016]
     c88:	cbz	x0, c98 <PyModule_AddObject@plt+0xc8>
     c8c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1334c>
     c90:	ldr	x0, [x0, #96]
     c94:	bl	b30 <__cxa_finalize@plt>
     c98:	bl	bf8 <PyModule_AddObject@plt+0x28>
     c9c:	mov	w0, #0x1                   	// #1
     ca0:	strb	w0, [x19, #496]
     ca4:	ldr	x19, [sp, #16]
     ca8:	ldp	x29, x30, [sp], #32
     cac:	ret
     cb0:	b	c28 <PyModule_AddObject@plt+0x58>

0000000000000cb4 <PyInit__heapq@@Base>:
     cb4:	sub	sp, sp, #0x40
     cb8:	stp	x29, x30, [sp, #48]
     cbc:	add	x29, sp, #0x30
     cc0:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1334c>
     cc4:	add	x0, x0, #0x68
     cc8:	mov	w1, #0x3f5                 	// #1013
     ccc:	bl	bb0 <PyModule_Create2@plt>
     cd0:	stur	x0, [x29, #-16]
     cd4:	ldur	x8, [x29, #-16]
     cd8:	cbnz	x8, ce8 <PyInit__heapq@@Base+0x34>
     cdc:	mov	x8, xzr
     ce0:	stur	x8, [x29, #-8]
     ce4:	b	d38 <PyInit__heapq@@Base+0x84>
     ce8:	adrp	x8, 2000 <PyInit__heapq@@Base+0x134c>
     cec:	add	x8, x8, #0x34
     cf0:	mov	x0, x8
     cf4:	str	x8, [sp, #16]
     cf8:	bl	b20 <strlen@plt>
     cfc:	ldr	x8, [sp, #16]
     d00:	str	x0, [sp, #8]
     d04:	mov	x0, x8
     d08:	ldr	x1, [sp, #8]
     d0c:	mov	x9, xzr
     d10:	mov	x2, x9
     d14:	bl	bc0 <PyUnicode_DecodeUTF8@plt>
     d18:	str	x0, [sp, #24]
     d1c:	ldur	x0, [x29, #-16]
     d20:	ldr	x2, [sp, #24]
     d24:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
     d28:	add	x1, x1, #0xc0c
     d2c:	bl	bd0 <PyModule_AddObject@plt>
     d30:	ldur	x8, [x29, #-16]
     d34:	stur	x8, [x29, #-8]
     d38:	ldur	x0, [x29, #-8]
     d3c:	ldp	x29, x30, [sp, #48]
     d40:	add	sp, sp, #0x40
     d44:	ret
     d48:	sub	sp, sp, #0x40
     d4c:	stp	x29, x30, [sp, #48]
     d50:	add	x29, sp, #0x30
     d54:	mov	x8, xzr
     d58:	mov	x9, #0x2                   	// #2
     d5c:	stur	x0, [x29, #-8]
     d60:	stur	x1, [x29, #-16]
     d64:	str	x2, [sp, #24]
     d68:	str	x8, [sp, #16]
     d6c:	ldr	x8, [sp, #24]
     d70:	cmp	x9, x8
     d74:	b.gt	d84 <PyInit__heapq@@Base+0xd0>
     d78:	ldr	x8, [sp, #24]
     d7c:	cmp	x8, #0x2
     d80:	b.le	da8 <PyInit__heapq@@Base+0xf4>
     d84:	ldr	x1, [sp, #24]
     d88:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
     d8c:	add	x0, x0, #0xc1d
     d90:	mov	x8, #0x2                   	// #2
     d94:	mov	x2, x8
     d98:	mov	x3, x8
     d9c:	bl	ba0 <_PyArg_CheckPositional@plt>
     da0:	cbnz	w0, da8 <PyInit__heapq@@Base+0xf4>
     da4:	b	dd4 <PyInit__heapq@@Base+0x120>
     da8:	ldur	x8, [x29, #-16]
     dac:	ldr	x8, [x8]
     db0:	str	x8, [sp, #8]
     db4:	ldur	x8, [x29, #-16]
     db8:	ldr	x8, [x8, #8]
     dbc:	str	x8, [sp]
     dc0:	ldur	x0, [x29, #-8]
     dc4:	ldr	x1, [sp, #8]
     dc8:	ldr	x2, [sp]
     dcc:	bl	1088 <PyInit__heapq@@Base+0x3d4>
     dd0:	str	x0, [sp, #16]
     dd4:	ldr	x0, [sp, #16]
     dd8:	ldp	x29, x30, [sp, #48]
     ddc:	add	sp, sp, #0x40
     de0:	ret
     de4:	sub	sp, sp, #0x40
     de8:	stp	x29, x30, [sp, #48]
     dec:	add	x29, sp, #0x30
     df0:	mov	x8, xzr
     df4:	mov	x9, #0x2                   	// #2
     df8:	stur	x0, [x29, #-8]
     dfc:	stur	x1, [x29, #-16]
     e00:	str	x2, [sp, #24]
     e04:	str	x8, [sp, #16]
     e08:	ldr	x8, [sp, #24]
     e0c:	cmp	x9, x8
     e10:	b.gt	e20 <PyInit__heapq@@Base+0x16c>
     e14:	ldr	x8, [sp, #24]
     e18:	cmp	x8, #0x2
     e1c:	b.le	e44 <PyInit__heapq@@Base+0x190>
     e20:	ldr	x1, [sp, #24]
     e24:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
     e28:	add	x0, x0, #0xc26
     e2c:	mov	x8, #0x2                   	// #2
     e30:	mov	x2, x8
     e34:	mov	x3, x8
     e38:	bl	ba0 <_PyArg_CheckPositional@plt>
     e3c:	cbnz	w0, e44 <PyInit__heapq@@Base+0x190>
     e40:	b	e70 <PyInit__heapq@@Base+0x1bc>
     e44:	ldur	x8, [x29, #-16]
     e48:	ldr	x8, [x8]
     e4c:	str	x8, [sp, #8]
     e50:	ldur	x8, [x29, #-16]
     e54:	ldr	x8, [x8, #8]
     e58:	str	x8, [sp]
     e5c:	ldur	x0, [x29, #-8]
     e60:	ldr	x1, [sp, #8]
     e64:	ldr	x2, [sp]
     e68:	bl	1330 <PyInit__heapq@@Base+0x67c>
     e6c:	str	x0, [sp, #16]
     e70:	ldr	x0, [sp, #16]
     e74:	ldp	x29, x30, [sp, #48]
     e78:	add	sp, sp, #0x40
     e7c:	ret
     e80:	sub	sp, sp, #0x20
     e84:	stp	x29, x30, [sp, #16]
     e88:	add	x29, sp, #0x10
     e8c:	adrp	x8, 1000 <PyInit__heapq@@Base+0x34c>
     e90:	add	x8, x8, #0x49c
     e94:	str	x0, [sp, #8]
     e98:	str	x1, [sp]
     e9c:	ldr	x0, [sp]
     ea0:	mov	x1, x8
     ea4:	bl	16dc <PyInit__heapq@@Base+0xa28>
     ea8:	ldp	x29, x30, [sp, #16]
     eac:	add	sp, sp, #0x20
     eb0:	ret
     eb4:	sub	sp, sp, #0x40
     eb8:	stp	x29, x30, [sp, #48]
     ebc:	add	x29, sp, #0x30
     ec0:	mov	x8, xzr
     ec4:	mov	x9, #0x2                   	// #2
     ec8:	stur	x0, [x29, #-8]
     ecc:	stur	x1, [x29, #-16]
     ed0:	str	x2, [sp, #24]
     ed4:	str	x8, [sp, #16]
     ed8:	ldr	x8, [sp, #24]
     edc:	cmp	x9, x8
     ee0:	b.gt	ef0 <PyInit__heapq@@Base+0x23c>
     ee4:	ldr	x8, [sp, #24]
     ee8:	cmp	x8, #0x2
     eec:	b.le	f14 <PyInit__heapq@@Base+0x260>
     ef0:	ldr	x1, [sp, #24]
     ef4:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
     ef8:	add	x0, x0, #0xc3a
     efc:	mov	x8, #0x2                   	// #2
     f00:	mov	x2, x8
     f04:	mov	x3, x8
     f08:	bl	ba0 <_PyArg_CheckPositional@plt>
     f0c:	cbnz	w0, f14 <PyInit__heapq@@Base+0x260>
     f10:	b	f40 <PyInit__heapq@@Base+0x28c>
     f14:	ldur	x8, [x29, #-16]
     f18:	ldr	x8, [x8]
     f1c:	str	x8, [sp, #8]
     f20:	ldur	x8, [x29, #-16]
     f24:	ldr	x8, [x8, #8]
     f28:	str	x8, [sp]
     f2c:	ldur	x0, [x29, #-8]
     f30:	ldr	x1, [sp, #8]
     f34:	ldr	x2, [sp]
     f38:	bl	185c <PyInit__heapq@@Base+0xba8>
     f3c:	str	x0, [sp, #16]
     f40:	ldr	x0, [sp, #16]
     f44:	ldp	x29, x30, [sp, #48]
     f48:	add	sp, sp, #0x40
     f4c:	ret
     f50:	sub	sp, sp, #0x20
     f54:	stp	x29, x30, [sp, #16]
     f58:	add	x29, sp, #0x10
     f5c:	adrp	x8, 1000 <PyInit__heapq@@Base+0x34c>
     f60:	add	x8, x8, #0x49c
     f64:	str	x0, [sp, #8]
     f68:	str	x1, [sp]
     f6c:	ldr	x0, [sp]
     f70:	mov	x1, x8
     f74:	bl	1990 <PyInit__heapq@@Base+0xcdc>
     f78:	ldp	x29, x30, [sp, #16]
     f7c:	add	sp, sp, #0x20
     f80:	ret
     f84:	sub	sp, sp, #0x20
     f88:	stp	x29, x30, [sp, #16]
     f8c:	add	x29, sp, #0x10
     f90:	adrp	x8, 1000 <PyInit__heapq@@Base+0x34c>
     f94:	add	x8, x8, #0xc28
     f98:	str	x0, [sp, #8]
     f9c:	str	x1, [sp]
     fa0:	ldr	x0, [sp]
     fa4:	mov	x1, x8
     fa8:	bl	16dc <PyInit__heapq@@Base+0xa28>
     fac:	ldp	x29, x30, [sp, #16]
     fb0:	add	sp, sp, #0x20
     fb4:	ret
     fb8:	sub	sp, sp, #0x20
     fbc:	stp	x29, x30, [sp, #16]
     fc0:	add	x29, sp, #0x10
     fc4:	adrp	x8, 1000 <PyInit__heapq@@Base+0x34c>
     fc8:	add	x8, x8, #0xc28
     fcc:	str	x0, [sp, #8]
     fd0:	str	x1, [sp]
     fd4:	ldr	x0, [sp]
     fd8:	mov	x1, x8
     fdc:	bl	1990 <PyInit__heapq@@Base+0xcdc>
     fe0:	ldp	x29, x30, [sp, #16]
     fe4:	add	sp, sp, #0x20
     fe8:	ret
     fec:	sub	sp, sp, #0x40
     ff0:	stp	x29, x30, [sp, #48]
     ff4:	add	x29, sp, #0x30
     ff8:	mov	x8, xzr
     ffc:	mov	x9, #0x2                   	// #2
    1000:	stur	x0, [x29, #-8]
    1004:	stur	x1, [x29, #-16]
    1008:	str	x2, [sp, #24]
    100c:	str	x8, [sp, #16]
    1010:	ldr	x8, [sp, #24]
    1014:	cmp	x9, x8
    1018:	b.gt	1028 <PyInit__heapq@@Base+0x374>
    101c:	ldr	x8, [sp, #24]
    1020:	cmp	x8, #0x2
    1024:	b.le	104c <PyInit__heapq@@Base+0x398>
    1028:	ldr	x1, [sp, #24]
    102c:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
    1030:	add	x0, x0, #0xc68
    1034:	mov	x8, #0x2                   	// #2
    1038:	mov	x2, x8
    103c:	mov	x3, x8
    1040:	bl	ba0 <_PyArg_CheckPositional@plt>
    1044:	cbnz	w0, 104c <PyInit__heapq@@Base+0x398>
    1048:	b	1078 <PyInit__heapq@@Base+0x3c4>
    104c:	ldur	x8, [x29, #-16]
    1050:	ldr	x8, [x8]
    1054:	str	x8, [sp, #8]
    1058:	ldur	x8, [x29, #-16]
    105c:	ldr	x8, [x8, #8]
    1060:	str	x8, [sp]
    1064:	ldur	x0, [x29, #-8]
    1068:	ldr	x1, [sp, #8]
    106c:	ldr	x2, [sp]
    1070:	bl	1fe8 <PyInit__heapq@@Base+0x1334>
    1074:	str	x0, [sp, #16]
    1078:	ldr	x0, [sp, #16]
    107c:	ldp	x29, x30, [sp, #48]
    1080:	add	sp, sp, #0x40
    1084:	ret
    1088:	sub	sp, sp, #0x40
    108c:	stp	x29, x30, [sp, #48]
    1090:	add	x29, sp, #0x30
    1094:	stur	x0, [x29, #-16]
    1098:	str	x1, [sp, #24]
    109c:	str	x2, [sp, #16]
    10a0:	ldr	x8, [sp, #24]
    10a4:	ldr	x8, [x8, #8]
    10a8:	ldr	x8, [x8, #168]
    10ac:	and	x8, x8, #0x2000000
    10b0:	cbnz	x8, 10d8 <PyInit__heapq@@Base+0x424>
    10b4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    10b8:	ldr	x8, [x8, #4032]
    10bc:	ldr	x0, [x8]
    10c0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    10c4:	add	x1, x1, #0xc79
    10c8:	bl	b60 <PyErr_SetString@plt>
    10cc:	mov	x8, xzr
    10d0:	stur	x8, [x29, #-8]
    10d4:	b	113c <PyInit__heapq@@Base+0x488>
    10d8:	ldr	x0, [sp, #24]
    10dc:	ldr	x1, [sp, #16]
    10e0:	bl	b80 <PyList_Append@plt>
    10e4:	cbz	w0, 10f4 <PyInit__heapq@@Base+0x440>
    10e8:	mov	x8, xzr
    10ec:	stur	x8, [x29, #-8]
    10f0:	b	113c <PyInit__heapq@@Base+0x488>
    10f4:	ldr	x0, [sp, #24]
    10f8:	ldr	x8, [sp, #24]
    10fc:	ldr	x8, [x8, #16]
    1100:	subs	x2, x8, #0x1
    1104:	mov	x8, xzr
    1108:	mov	x1, x8
    110c:	bl	114c <PyInit__heapq@@Base+0x498>
    1110:	cbz	w0, 1120 <PyInit__heapq@@Base+0x46c>
    1114:	mov	x8, xzr
    1118:	stur	x8, [x29, #-8]
    111c:	b	113c <PyInit__heapq@@Base+0x488>
    1120:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1124:	ldr	x8, [x8, #4048]
    1128:	mov	x0, x8
    112c:	str	x8, [sp, #8]
    1130:	bl	1310 <PyInit__heapq@@Base+0x65c>
    1134:	ldr	x8, [sp, #8]
    1138:	stur	x8, [x29, #-8]
    113c:	ldur	x0, [x29, #-8]
    1140:	ldp	x29, x30, [sp, #48]
    1144:	add	sp, sp, #0x40
    1148:	ret
    114c:	sub	sp, sp, #0x60
    1150:	stp	x29, x30, [sp, #80]
    1154:	add	x29, sp, #0x50
    1158:	stur	x0, [x29, #-16]
    115c:	stur	x1, [x29, #-24]
    1160:	stur	x2, [x29, #-32]
    1164:	ldur	x8, [x29, #-16]
    1168:	ldr	x8, [x8, #16]
    116c:	str	x8, [sp, #8]
    1170:	ldur	x8, [x29, #-32]
    1174:	ldr	x9, [sp, #8]
    1178:	cmp	x8, x9
    117c:	b.lt	11a4 <PyInit__heapq@@Base+0x4f0>  // b.tstop
    1180:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1184:	ldr	x8, [x8, #4056]
    1188:	ldr	x0, [x8]
    118c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1190:	add	x1, x1, #0xc96
    1194:	bl	b60 <PyErr_SetString@plt>
    1198:	mov	w9, #0xffffffff            	// #-1
    119c:	stur	w9, [x29, #-4]
    11a0:	b	1300 <PyInit__heapq@@Base+0x64c>
    11a4:	ldur	x8, [x29, #-16]
    11a8:	ldr	x8, [x8, #24]
    11ac:	str	x8, [sp, #24]
    11b0:	ldr	x8, [sp, #24]
    11b4:	ldur	x9, [x29, #-32]
    11b8:	mov	x10, #0x8                   	// #8
    11bc:	mul	x9, x10, x9
    11c0:	add	x8, x8, x9
    11c4:	ldr	x8, [x8]
    11c8:	str	x8, [sp, #40]
    11cc:	ldur	x8, [x29, #-32]
    11d0:	ldur	x9, [x29, #-24]
    11d4:	cmp	x8, x9
    11d8:	b.le	12fc <PyInit__heapq@@Base+0x648>
    11dc:	ldur	x8, [x29, #-32]
    11e0:	subs	x8, x8, #0x1
    11e4:	asr	x8, x8, #1
    11e8:	str	x8, [sp, #16]
    11ec:	ldr	x8, [sp, #24]
    11f0:	ldr	x9, [sp, #16]
    11f4:	mov	x10, #0x8                   	// #8
    11f8:	mul	x9, x10, x9
    11fc:	add	x8, x8, x9
    1200:	ldr	x8, [x8]
    1204:	str	x8, [sp, #32]
    1208:	ldr	x0, [sp, #40]
    120c:	ldr	x1, [sp, #32]
    1210:	mov	w11, wzr
    1214:	mov	w2, w11
    1218:	bl	b70 <PyObject_RichCompareBool@plt>
    121c:	str	w0, [sp, #4]
    1220:	ldr	w11, [sp, #4]
    1224:	cmp	w11, #0x0
    1228:	cset	w11, ge  // ge = tcont
    122c:	tbnz	w11, #0, 123c <PyInit__heapq@@Base+0x588>
    1230:	mov	w8, #0xffffffff            	// #-1
    1234:	stur	w8, [x29, #-4]
    1238:	b	1300 <PyInit__heapq@@Base+0x64c>
    123c:	ldr	x8, [sp, #8]
    1240:	ldur	x9, [x29, #-16]
    1244:	ldr	x9, [x9, #16]
    1248:	cmp	x8, x9
    124c:	b.eq	1274 <PyInit__heapq@@Base+0x5c0>  // b.none
    1250:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1254:	ldr	x8, [x8, #4024]
    1258:	ldr	x0, [x8]
    125c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1260:	add	x1, x1, #0xca9
    1264:	bl	b60 <PyErr_SetString@plt>
    1268:	mov	w9, #0xffffffff            	// #-1
    126c:	stur	w9, [x29, #-4]
    1270:	b	1300 <PyInit__heapq@@Base+0x64c>
    1274:	ldr	w8, [sp, #4]
    1278:	cbnz	w8, 1280 <PyInit__heapq@@Base+0x5cc>
    127c:	b	12fc <PyInit__heapq@@Base+0x648>
    1280:	ldur	x8, [x29, #-16]
    1284:	ldr	x8, [x8, #24]
    1288:	str	x8, [sp, #24]
    128c:	ldr	x8, [sp, #24]
    1290:	ldr	x9, [sp, #16]
    1294:	mov	x10, #0x8                   	// #8
    1298:	mul	x9, x10, x9
    129c:	add	x8, x8, x9
    12a0:	ldr	x8, [x8]
    12a4:	str	x8, [sp, #32]
    12a8:	ldr	x8, [sp, #24]
    12ac:	ldur	x9, [x29, #-32]
    12b0:	mul	x9, x10, x9
    12b4:	add	x8, x8, x9
    12b8:	ldr	x8, [x8]
    12bc:	str	x8, [sp, #40]
    12c0:	ldr	x8, [sp, #40]
    12c4:	ldr	x9, [sp, #24]
    12c8:	ldr	x11, [sp, #16]
    12cc:	mul	x11, x10, x11
    12d0:	add	x9, x9, x11
    12d4:	str	x8, [x9]
    12d8:	ldr	x8, [sp, #32]
    12dc:	ldr	x9, [sp, #24]
    12e0:	ldur	x11, [x29, #-32]
    12e4:	mul	x10, x10, x11
    12e8:	add	x9, x9, x10
    12ec:	str	x8, [x9]
    12f0:	ldr	x8, [sp, #16]
    12f4:	stur	x8, [x29, #-32]
    12f8:	b	11cc <PyInit__heapq@@Base+0x518>
    12fc:	stur	wzr, [x29, #-4]
    1300:	ldur	w0, [x29, #-4]
    1304:	ldp	x29, x30, [sp, #80]
    1308:	add	sp, sp, #0x60
    130c:	ret
    1310:	sub	sp, sp, #0x10
    1314:	str	x0, [sp, #8]
    1318:	ldr	x8, [sp, #8]
    131c:	ldr	x9, [x8]
    1320:	add	x9, x9, #0x1
    1324:	str	x9, [x8]
    1328:	add	sp, sp, #0x10
    132c:	ret
    1330:	sub	sp, sp, #0x40
    1334:	stp	x29, x30, [sp, #48]
    1338:	add	x29, sp, #0x30
    133c:	stur	x0, [x29, #-16]
    1340:	str	x1, [sp, #24]
    1344:	str	x2, [sp, #16]
    1348:	ldr	x8, [sp, #24]
    134c:	ldr	x8, [x8, #8]
    1350:	ldr	x8, [x8, #168]
    1354:	and	x8, x8, #0x2000000
    1358:	cbnz	x8, 1380 <PyInit__heapq@@Base+0x6cc>
    135c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1360:	ldr	x8, [x8, #4032]
    1364:	ldr	x0, [x8]
    1368:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    136c:	add	x1, x1, #0xc79
    1370:	bl	b60 <PyErr_SetString@plt>
    1374:	mov	x8, xzr
    1378:	stur	x8, [x29, #-8]
    137c:	b	148c <PyInit__heapq@@Base+0x7d8>
    1380:	ldr	x8, [sp, #24]
    1384:	ldr	x8, [x8, #16]
    1388:	cbnz	x8, 13a0 <PyInit__heapq@@Base+0x6ec>
    138c:	ldr	x0, [sp, #16]
    1390:	bl	1310 <PyInit__heapq@@Base+0x65c>
    1394:	ldr	x8, [sp, #16]
    1398:	stur	x8, [x29, #-8]
    139c:	b	148c <PyInit__heapq@@Base+0x7d8>
    13a0:	ldr	x8, [sp, #24]
    13a4:	ldr	x8, [x8, #24]
    13a8:	ldr	x0, [x8]
    13ac:	ldr	x1, [sp, #16]
    13b0:	mov	w9, wzr
    13b4:	mov	w2, w9
    13b8:	bl	b70 <PyObject_RichCompareBool@plt>
    13bc:	str	w0, [sp, #4]
    13c0:	ldr	w9, [sp, #4]
    13c4:	cmp	w9, #0x0
    13c8:	cset	w9, ge  // ge = tcont
    13cc:	tbnz	w9, #0, 13dc <PyInit__heapq@@Base+0x728>
    13d0:	mov	x8, xzr
    13d4:	stur	x8, [x29, #-8]
    13d8:	b	148c <PyInit__heapq@@Base+0x7d8>
    13dc:	ldr	w8, [sp, #4]
    13e0:	cbnz	w8, 13f8 <PyInit__heapq@@Base+0x744>
    13e4:	ldr	x0, [sp, #16]
    13e8:	bl	1310 <PyInit__heapq@@Base+0x65c>
    13ec:	ldr	x8, [sp, #16]
    13f0:	stur	x8, [x29, #-8]
    13f4:	b	148c <PyInit__heapq@@Base+0x7d8>
    13f8:	ldr	x8, [sp, #24]
    13fc:	ldr	x8, [x8, #16]
    1400:	cbnz	x8, 1428 <PyInit__heapq@@Base+0x774>
    1404:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1408:	ldr	x8, [x8, #4056]
    140c:	ldr	x0, [x8]
    1410:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1414:	add	x1, x1, #0xc96
    1418:	bl	b60 <PyErr_SetString@plt>
    141c:	mov	x8, xzr
    1420:	stur	x8, [x29, #-8]
    1424:	b	148c <PyInit__heapq@@Base+0x7d8>
    1428:	ldr	x8, [sp, #24]
    142c:	ldr	x8, [x8, #24]
    1430:	ldr	x8, [x8]
    1434:	str	x8, [sp, #8]
    1438:	ldr	x0, [sp, #16]
    143c:	bl	1310 <PyInit__heapq@@Base+0x65c>
    1440:	ldr	x8, [sp, #16]
    1444:	ldr	x9, [sp, #24]
    1448:	ldr	x9, [x9, #24]
    144c:	str	x8, [x9]
    1450:	ldr	x0, [sp, #24]
    1454:	mov	x8, xzr
    1458:	mov	x1, x8
    145c:	bl	149c <PyInit__heapq@@Base+0x7e8>
    1460:	cbz	w0, 1484 <PyInit__heapq@@Base+0x7d0>
    1464:	ldr	x2, [sp, #8]
    1468:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
    146c:	add	x0, x0, #0xccc
    1470:	mov	w1, #0x11c                 	// #284
    1474:	bl	1698 <PyInit__heapq@@Base+0x9e4>
    1478:	mov	x8, xzr
    147c:	stur	x8, [x29, #-8]
    1480:	b	148c <PyInit__heapq@@Base+0x7d8>
    1484:	ldr	x8, [sp, #8]
    1488:	stur	x8, [x29, #-8]
    148c:	ldur	x0, [x29, #-8]
    1490:	ldp	x29, x30, [sp, #48]
    1494:	add	sp, sp, #0x40
    1498:	ret
    149c:	sub	sp, sp, #0x70
    14a0:	stp	x29, x30, [sp, #96]
    14a4:	add	x29, sp, #0x60
    14a8:	stur	x0, [x29, #-16]
    14ac:	stur	x1, [x29, #-24]
    14b0:	ldur	x8, [x29, #-16]
    14b4:	ldr	x8, [x8, #16]
    14b8:	stur	x8, [x29, #-40]
    14bc:	ldur	x8, [x29, #-24]
    14c0:	stur	x8, [x29, #-32]
    14c4:	ldur	x8, [x29, #-24]
    14c8:	ldur	x9, [x29, #-40]
    14cc:	cmp	x8, x9
    14d0:	b.lt	14f8 <PyInit__heapq@@Base+0x844>  // b.tstop
    14d4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    14d8:	ldr	x8, [x8, #4056]
    14dc:	ldr	x0, [x8]
    14e0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    14e4:	add	x1, x1, #0xc96
    14e8:	bl	b60 <PyErr_SetString@plt>
    14ec:	mov	w9, #0xffffffff            	// #-1
    14f0:	stur	w9, [x29, #-4]
    14f4:	b	1688 <PyInit__heapq@@Base+0x9d4>
    14f8:	ldur	x8, [x29, #-16]
    14fc:	ldr	x8, [x8, #24]
    1500:	str	x8, [sp, #16]
    1504:	ldur	x8, [x29, #-40]
    1508:	asr	x8, x8, #1
    150c:	str	x8, [sp, #40]
    1510:	ldur	x8, [x29, #-24]
    1514:	ldr	x9, [sp, #40]
    1518:	cmp	x8, x9
    151c:	b.ge	1674 <PyInit__heapq@@Base+0x9c0>  // b.tcont
    1520:	ldur	x8, [x29, #-24]
    1524:	mov	x9, #0x2                   	// #2
    1528:	mul	x8, x9, x8
    152c:	add	x8, x8, #0x1
    1530:	str	x8, [sp, #48]
    1534:	ldr	x8, [sp, #48]
    1538:	add	x8, x8, #0x1
    153c:	ldur	x9, [x29, #-40]
    1540:	cmp	x8, x9
    1544:	b.ge	1604 <PyInit__heapq@@Base+0x950>  // b.tcont
    1548:	ldr	x8, [sp, #16]
    154c:	ldr	x9, [sp, #48]
    1550:	mov	x10, #0x8                   	// #8
    1554:	mul	x9, x10, x9
    1558:	add	x8, x8, x9
    155c:	ldr	x0, [x8]
    1560:	ldr	x8, [sp, #16]
    1564:	ldr	x9, [sp, #48]
    1568:	add	x9, x9, #0x1
    156c:	mul	x9, x10, x9
    1570:	add	x8, x8, x9
    1574:	ldr	x1, [x8]
    1578:	mov	w11, wzr
    157c:	mov	w2, w11
    1580:	bl	b70 <PyObject_RichCompareBool@plt>
    1584:	str	w0, [sp, #12]
    1588:	ldr	w11, [sp, #12]
    158c:	cmp	w11, #0x0
    1590:	cset	w11, ge  // ge = tcont
    1594:	tbnz	w11, #0, 15a4 <PyInit__heapq@@Base+0x8f0>
    1598:	mov	w8, #0xffffffff            	// #-1
    159c:	stur	w8, [x29, #-4]
    15a0:	b	1688 <PyInit__heapq@@Base+0x9d4>
    15a4:	ldr	w8, [sp, #12]
    15a8:	eor	w8, w8, #0x1
    15ac:	mov	w9, w8
    15b0:	ubfx	x9, x9, #0, #32
    15b4:	ldr	x10, [sp, #48]
    15b8:	add	x9, x10, x9
    15bc:	str	x9, [sp, #48]
    15c0:	ldur	x9, [x29, #-16]
    15c4:	ldr	x9, [x9, #24]
    15c8:	str	x9, [sp, #16]
    15cc:	ldur	x9, [x29, #-40]
    15d0:	ldur	x10, [x29, #-16]
    15d4:	ldr	x10, [x10, #16]
    15d8:	cmp	x9, x10
    15dc:	b.eq	1604 <PyInit__heapq@@Base+0x950>  // b.none
    15e0:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    15e4:	ldr	x8, [x8, #4024]
    15e8:	ldr	x0, [x8]
    15ec:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    15f0:	add	x1, x1, #0xca9
    15f4:	bl	b60 <PyErr_SetString@plt>
    15f8:	mov	w9, #0xffffffff            	// #-1
    15fc:	stur	w9, [x29, #-4]
    1600:	b	1688 <PyInit__heapq@@Base+0x9d4>
    1604:	ldr	x8, [sp, #16]
    1608:	ldr	x9, [sp, #48]
    160c:	mov	x10, #0x8                   	// #8
    1610:	mul	x9, x10, x9
    1614:	add	x8, x8, x9
    1618:	ldr	x8, [x8]
    161c:	str	x8, [sp, #32]
    1620:	ldr	x8, [sp, #16]
    1624:	ldur	x9, [x29, #-24]
    1628:	mul	x9, x10, x9
    162c:	add	x8, x8, x9
    1630:	ldr	x8, [x8]
    1634:	str	x8, [sp, #24]
    1638:	ldr	x8, [sp, #24]
    163c:	ldr	x9, [sp, #16]
    1640:	ldr	x11, [sp, #48]
    1644:	mul	x11, x10, x11
    1648:	add	x9, x9, x11
    164c:	str	x8, [x9]
    1650:	ldr	x8, [sp, #32]
    1654:	ldr	x9, [sp, #16]
    1658:	ldur	x11, [x29, #-24]
    165c:	mul	x10, x10, x11
    1660:	add	x9, x9, x10
    1664:	str	x8, [x9]
    1668:	ldr	x8, [sp, #48]
    166c:	stur	x8, [x29, #-24]
    1670:	b	1510 <PyInit__heapq@@Base+0x85c>
    1674:	ldur	x0, [x29, #-16]
    1678:	ldur	x1, [x29, #-32]
    167c:	ldur	x2, [x29, #-24]
    1680:	bl	114c <PyInit__heapq@@Base+0x498>
    1684:	stur	w0, [x29, #-4]
    1688:	ldur	w0, [x29, #-4]
    168c:	ldp	x29, x30, [sp, #96]
    1690:	add	sp, sp, #0x70
    1694:	ret
    1698:	sub	sp, sp, #0x30
    169c:	stp	x29, x30, [sp, #32]
    16a0:	add	x29, sp, #0x20
    16a4:	stur	x0, [x29, #-8]
    16a8:	stur	w1, [x29, #-12]
    16ac:	str	x2, [sp, #8]
    16b0:	ldr	x8, [sp, #8]
    16b4:	ldr	x9, [x8]
    16b8:	subs	x9, x9, #0x1
    16bc:	str	x9, [x8]
    16c0:	cbz	x9, 16c8 <PyInit__heapq@@Base+0xa14>
    16c4:	b	16d0 <PyInit__heapq@@Base+0xa1c>
    16c8:	ldr	x0, [sp, #8]
    16cc:	bl	b50 <_Py_Dealloc@plt>
    16d0:	ldp	x29, x30, [sp, #32]
    16d4:	add	sp, sp, #0x30
    16d8:	ret
    16dc:	sub	sp, sp, #0x40
    16e0:	stp	x29, x30, [sp, #48]
    16e4:	add	x29, sp, #0x30
    16e8:	stur	x0, [x29, #-16]
    16ec:	str	x1, [sp, #24]
    16f0:	ldur	x8, [x29, #-16]
    16f4:	ldr	x8, [x8, #8]
    16f8:	ldr	x8, [x8, #168]
    16fc:	and	x8, x8, #0x2000000
    1700:	cbnz	x8, 1728 <PyInit__heapq@@Base+0xa74>
    1704:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1708:	ldr	x8, [x8, #4032]
    170c:	ldr	x0, [x8]
    1710:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1714:	add	x1, x1, #0xc79
    1718:	bl	b60 <PyErr_SetString@plt>
    171c:	mov	x8, xzr
    1720:	stur	x8, [x29, #-8]
    1724:	b	184c <PyInit__heapq@@Base+0xb98>
    1728:	ldur	x8, [x29, #-16]
    172c:	ldr	x8, [x8, #16]
    1730:	str	x8, [sp]
    1734:	ldr	x8, [sp]
    1738:	cbnz	x8, 1760 <PyInit__heapq@@Base+0xaac>
    173c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1740:	ldr	x8, [x8, #4056]
    1744:	ldr	x0, [x8]
    1748:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    174c:	add	x1, x1, #0xc96
    1750:	bl	b60 <PyErr_SetString@plt>
    1754:	mov	x8, xzr
    1758:	stur	x8, [x29, #-8]
    175c:	b	184c <PyInit__heapq@@Base+0xb98>
    1760:	ldur	x8, [x29, #-16]
    1764:	ldr	x8, [x8, #24]
    1768:	ldr	x9, [sp]
    176c:	subs	x9, x9, #0x1
    1770:	mov	x10, #0x8                   	// #8
    1774:	mul	x9, x10, x9
    1778:	add	x8, x8, x9
    177c:	ldr	x8, [x8]
    1780:	str	x8, [sp, #16]
    1784:	ldr	x0, [sp, #16]
    1788:	bl	1310 <PyInit__heapq@@Base+0x65c>
    178c:	ldur	x0, [x29, #-16]
    1790:	ldr	x8, [sp]
    1794:	subs	x1, x8, #0x1
    1798:	ldr	x2, [sp]
    179c:	mov	x8, xzr
    17a0:	mov	x3, x8
    17a4:	bl	b40 <PyList_SetSlice@plt>
    17a8:	cbz	w0, 17cc <PyInit__heapq@@Base+0xb18>
    17ac:	ldr	x2, [sp, #16]
    17b0:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
    17b4:	add	x0, x0, #0xccc
    17b8:	mov	w1, #0x9a                  	// #154
    17bc:	bl	1698 <PyInit__heapq@@Base+0x9e4>
    17c0:	mov	x8, xzr
    17c4:	stur	x8, [x29, #-8]
    17c8:	b	184c <PyInit__heapq@@Base+0xb98>
    17cc:	ldr	x8, [sp]
    17d0:	subs	x8, x8, #0x1
    17d4:	str	x8, [sp]
    17d8:	ldr	x8, [sp]
    17dc:	cbnz	x8, 17ec <PyInit__heapq@@Base+0xb38>
    17e0:	ldr	x8, [sp, #16]
    17e4:	stur	x8, [x29, #-8]
    17e8:	b	184c <PyInit__heapq@@Base+0xb98>
    17ec:	ldur	x8, [x29, #-16]
    17f0:	ldr	x8, [x8, #24]
    17f4:	ldr	x8, [x8]
    17f8:	str	x8, [sp, #8]
    17fc:	ldr	x8, [sp, #16]
    1800:	ldur	x9, [x29, #-16]
    1804:	ldr	x9, [x9, #24]
    1808:	str	x8, [x9]
    180c:	ldr	x8, [sp, #24]
    1810:	ldur	x0, [x29, #-16]
    1814:	mov	x9, xzr
    1818:	mov	x1, x9
    181c:	blr	x8
    1820:	cbz	w0, 1844 <PyInit__heapq@@Base+0xb90>
    1824:	ldr	x2, [sp, #8]
    1828:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
    182c:	add	x0, x0, #0xccc
    1830:	mov	w1, #0xa4                  	// #164
    1834:	bl	1698 <PyInit__heapq@@Base+0x9e4>
    1838:	mov	x8, xzr
    183c:	stur	x8, [x29, #-8]
    1840:	b	184c <PyInit__heapq@@Base+0xb98>
    1844:	ldr	x8, [sp, #8]
    1848:	stur	x8, [x29, #-8]
    184c:	ldur	x0, [x29, #-8]
    1850:	ldp	x29, x30, [sp, #48]
    1854:	add	sp, sp, #0x40
    1858:	ret
    185c:	sub	sp, sp, #0x30
    1860:	stp	x29, x30, [sp, #32]
    1864:	add	x29, sp, #0x20
    1868:	adrp	x8, 1000 <PyInit__heapq@@Base+0x34c>
    186c:	add	x8, x8, #0x49c
    1870:	stur	x0, [x29, #-8]
    1874:	str	x1, [sp, #16]
    1878:	str	x2, [sp, #8]
    187c:	ldr	x0, [sp, #16]
    1880:	ldr	x1, [sp, #8]
    1884:	mov	x2, x8
    1888:	bl	1898 <PyInit__heapq@@Base+0xbe4>
    188c:	ldp	x29, x30, [sp, #32]
    1890:	add	sp, sp, #0x30
    1894:	ret
    1898:	sub	sp, sp, #0x40
    189c:	stp	x29, x30, [sp, #48]
    18a0:	add	x29, sp, #0x30
    18a4:	stur	x0, [x29, #-16]
    18a8:	str	x1, [sp, #24]
    18ac:	str	x2, [sp, #16]
    18b0:	ldur	x8, [x29, #-16]
    18b4:	ldr	x8, [x8, #8]
    18b8:	ldr	x8, [x8, #168]
    18bc:	and	x8, x8, #0x2000000
    18c0:	cbnz	x8, 18e8 <PyInit__heapq@@Base+0xc34>
    18c4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    18c8:	ldr	x8, [x8, #4032]
    18cc:	ldr	x0, [x8]
    18d0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    18d4:	add	x1, x1, #0xc79
    18d8:	bl	b60 <PyErr_SetString@plt>
    18dc:	mov	x8, xzr
    18e0:	stur	x8, [x29, #-8]
    18e4:	b	1980 <PyInit__heapq@@Base+0xccc>
    18e8:	ldur	x8, [x29, #-16]
    18ec:	ldr	x8, [x8, #16]
    18f0:	cbnz	x8, 1918 <PyInit__heapq@@Base+0xc64>
    18f4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    18f8:	ldr	x8, [x8, #4056]
    18fc:	ldr	x0, [x8]
    1900:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1904:	add	x1, x1, #0xc96
    1908:	bl	b60 <PyErr_SetString@plt>
    190c:	mov	x8, xzr
    1910:	stur	x8, [x29, #-8]
    1914:	b	1980 <PyInit__heapq@@Base+0xccc>
    1918:	ldur	x8, [x29, #-16]
    191c:	ldr	x8, [x8, #24]
    1920:	ldr	x8, [x8]
    1924:	str	x8, [sp, #8]
    1928:	ldr	x0, [sp, #24]
    192c:	bl	1310 <PyInit__heapq@@Base+0x65c>
    1930:	ldr	x8, [sp, #24]
    1934:	ldur	x9, [x29, #-16]
    1938:	ldr	x9, [x9, #24]
    193c:	str	x8, [x9]
    1940:	ldr	x8, [sp, #16]
    1944:	ldur	x0, [x29, #-16]
    1948:	mov	x9, xzr
    194c:	mov	x1, x9
    1950:	blr	x8
    1954:	cbz	w0, 1978 <PyInit__heapq@@Base+0xcc4>
    1958:	ldr	x2, [sp, #8]
    195c:	adrp	x0, 3000 <PyInit__heapq@@Base+0x234c>
    1960:	add	x0, x0, #0xccc
    1964:	mov	w1, #0xcd                  	// #205
    1968:	bl	1698 <PyInit__heapq@@Base+0x9e4>
    196c:	mov	x8, xzr
    1970:	stur	x8, [x29, #-8]
    1974:	b	1980 <PyInit__heapq@@Base+0xccc>
    1978:	ldr	x8, [sp, #8]
    197c:	stur	x8, [x29, #-8]
    1980:	ldur	x0, [x29, #-8]
    1984:	ldp	x29, x30, [sp, #48]
    1988:	add	sp, sp, #0x40
    198c:	ret
    1990:	sub	sp, sp, #0x40
    1994:	stp	x29, x30, [sp, #48]
    1998:	add	x29, sp, #0x30
    199c:	stur	x0, [x29, #-16]
    19a0:	str	x1, [sp, #24]
    19a4:	ldur	x8, [x29, #-16]
    19a8:	ldr	x8, [x8, #8]
    19ac:	ldr	x8, [x8, #168]
    19b0:	and	x8, x8, #0x2000000
    19b4:	cbnz	x8, 19dc <PyInit__heapq@@Base+0xd28>
    19b8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    19bc:	ldr	x8, [x8, #4032]
    19c0:	ldr	x0, [x8]
    19c4:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    19c8:	add	x1, x1, #0xc79
    19cc:	bl	b60 <PyErr_SetString@plt>
    19d0:	mov	x8, xzr
    19d4:	stur	x8, [x29, #-8]
    19d8:	b	1a74 <PyInit__heapq@@Base+0xdc0>
    19dc:	ldur	x8, [x29, #-16]
    19e0:	ldr	x8, [x8, #16]
    19e4:	str	x8, [sp, #8]
    19e8:	ldr	x8, [sp, #8]
    19ec:	cmp	x8, #0x9c4
    19f0:	b.le	1a08 <PyInit__heapq@@Base+0xd54>
    19f4:	ldur	x0, [x29, #-16]
    19f8:	ldr	x1, [sp, #24]
    19fc:	bl	1a84 <PyInit__heapq@@Base+0xdd0>
    1a00:	stur	x0, [x29, #-8]
    1a04:	b	1a74 <PyInit__heapq@@Base+0xdc0>
    1a08:	ldr	x8, [sp, #8]
    1a0c:	asr	x8, x8, #1
    1a10:	subs	x8, x8, #0x1
    1a14:	str	x8, [sp, #16]
    1a18:	ldr	x8, [sp, #16]
    1a1c:	cmp	x8, #0x0
    1a20:	cset	w9, lt  // lt = tstop
    1a24:	tbnz	w9, #0, 1a58 <PyInit__heapq@@Base+0xda4>
    1a28:	ldr	x8, [sp, #24]
    1a2c:	ldur	x0, [x29, #-16]
    1a30:	ldr	x1, [sp, #16]
    1a34:	blr	x8
    1a38:	cbz	w0, 1a48 <PyInit__heapq@@Base+0xd94>
    1a3c:	mov	x8, xzr
    1a40:	stur	x8, [x29, #-8]
    1a44:	b	1a74 <PyInit__heapq@@Base+0xdc0>
    1a48:	ldr	x8, [sp, #16]
    1a4c:	subs	x8, x8, #0x1
    1a50:	str	x8, [sp, #16]
    1a54:	b	1a18 <PyInit__heapq@@Base+0xd64>
    1a58:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1a5c:	ldr	x8, [x8, #4048]
    1a60:	mov	x0, x8
    1a64:	str	x8, [sp]
    1a68:	bl	1310 <PyInit__heapq@@Base+0x65c>
    1a6c:	ldr	x8, [sp]
    1a70:	stur	x8, [x29, #-8]
    1a74:	ldur	x0, [x29, #-8]
    1a78:	ldp	x29, x30, [sp, #48]
    1a7c:	add	sp, sp, #0x40
    1a80:	ret
    1a84:	sub	sp, sp, #0x60
    1a88:	stp	x29, x30, [sp, #80]
    1a8c:	add	x29, sp, #0x50
    1a90:	stur	x0, [x29, #-16]
    1a94:	stur	x1, [x29, #-24]
    1a98:	ldur	x8, [x29, #-16]
    1a9c:	ldr	x8, [x8, #16]
    1aa0:	asr	x8, x8, #1
    1aa4:	str	x8, [sp, #32]
    1aa8:	ldr	x8, [sp, #32]
    1aac:	add	x0, x8, #0x1
    1ab0:	bl	1bdc <PyInit__heapq@@Base+0xf28>
    1ab4:	subs	x8, x0, #0x1
    1ab8:	str	x8, [sp, #16]
    1abc:	ldr	x8, [sp, #32]
    1ac0:	asr	x8, x8, #1
    1ac4:	str	x8, [sp, #24]
    1ac8:	ldr	x8, [sp, #16]
    1acc:	subs	x8, x8, #0x1
    1ad0:	stur	x8, [x29, #-32]
    1ad4:	ldur	x8, [x29, #-32]
    1ad8:	ldr	x9, [sp, #24]
    1adc:	cmp	x8, x9
    1ae0:	b.lt	1b3c <PyInit__heapq@@Base+0xe88>  // b.tstop
    1ae4:	ldur	x8, [x29, #-32]
    1ae8:	str	x8, [sp, #40]
    1aec:	ldur	x8, [x29, #-24]
    1af0:	ldur	x0, [x29, #-16]
    1af4:	ldr	x1, [sp, #40]
    1af8:	blr	x8
    1afc:	cbz	w0, 1b0c <PyInit__heapq@@Base+0xe58>
    1b00:	mov	x8, xzr
    1b04:	stur	x8, [x29, #-8]
    1b08:	b	1bcc <PyInit__heapq@@Base+0xf18>
    1b0c:	ldr	x8, [sp, #40]
    1b10:	and	x8, x8, #0x1
    1b14:	cbnz	x8, 1b1c <PyInit__heapq@@Base+0xe68>
    1b18:	b	1b2c <PyInit__heapq@@Base+0xe78>
    1b1c:	ldr	x8, [sp, #40]
    1b20:	asr	x8, x8, #1
    1b24:	str	x8, [sp, #40]
    1b28:	b	1aec <PyInit__heapq@@Base+0xe38>
    1b2c:	ldur	x8, [x29, #-32]
    1b30:	subs	x8, x8, #0x1
    1b34:	stur	x8, [x29, #-32]
    1b38:	b	1ad4 <PyInit__heapq@@Base+0xe20>
    1b3c:	ldr	x8, [sp, #32]
    1b40:	subs	x8, x8, #0x1
    1b44:	stur	x8, [x29, #-32]
    1b48:	ldur	x8, [x29, #-32]
    1b4c:	ldr	x9, [sp, #16]
    1b50:	cmp	x8, x9
    1b54:	b.lt	1bb0 <PyInit__heapq@@Base+0xefc>  // b.tstop
    1b58:	ldur	x8, [x29, #-32]
    1b5c:	str	x8, [sp, #40]
    1b60:	ldur	x8, [x29, #-24]
    1b64:	ldur	x0, [x29, #-16]
    1b68:	ldr	x1, [sp, #40]
    1b6c:	blr	x8
    1b70:	cbz	w0, 1b80 <PyInit__heapq@@Base+0xecc>
    1b74:	mov	x8, xzr
    1b78:	stur	x8, [x29, #-8]
    1b7c:	b	1bcc <PyInit__heapq@@Base+0xf18>
    1b80:	ldr	x8, [sp, #40]
    1b84:	and	x8, x8, #0x1
    1b88:	cbnz	x8, 1b90 <PyInit__heapq@@Base+0xedc>
    1b8c:	b	1ba0 <PyInit__heapq@@Base+0xeec>
    1b90:	ldr	x8, [sp, #40]
    1b94:	asr	x8, x8, #1
    1b98:	str	x8, [sp, #40]
    1b9c:	b	1b60 <PyInit__heapq@@Base+0xeac>
    1ba0:	ldur	x8, [x29, #-32]
    1ba4:	subs	x8, x8, #0x1
    1ba8:	stur	x8, [x29, #-32]
    1bac:	b	1b48 <PyInit__heapq@@Base+0xe94>
    1bb0:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1bb4:	ldr	x8, [x8, #4048]
    1bb8:	mov	x0, x8
    1bbc:	str	x8, [sp, #8]
    1bc0:	bl	1310 <PyInit__heapq@@Base+0x65c>
    1bc4:	ldr	x8, [sp, #8]
    1bc8:	stur	x8, [x29, #-8]
    1bcc:	ldur	x0, [x29, #-8]
    1bd0:	ldp	x29, x30, [sp, #80]
    1bd4:	add	sp, sp, #0x60
    1bd8:	ret
    1bdc:	sub	sp, sp, #0x10
    1be0:	str	x0, [sp, #8]
    1be4:	str	wzr, [sp, #4]
    1be8:	ldr	x8, [sp, #8]
    1bec:	cmp	x8, #0x1
    1bf0:	b.le	1c10 <PyInit__heapq@@Base+0xf5c>
    1bf4:	ldr	x8, [sp, #8]
    1bf8:	asr	x8, x8, #1
    1bfc:	str	x8, [sp, #8]
    1c00:	ldr	w9, [sp, #4]
    1c04:	add	w9, w9, #0x1
    1c08:	str	w9, [sp, #4]
    1c0c:	b	1be8 <PyInit__heapq@@Base+0xf34>
    1c10:	ldr	x8, [sp, #8]
    1c14:	ldr	w9, [sp, #4]
    1c18:	mov	w10, w9
    1c1c:	lsl	x0, x8, x10
    1c20:	add	sp, sp, #0x10
    1c24:	ret
    1c28:	sub	sp, sp, #0x70
    1c2c:	stp	x29, x30, [sp, #96]
    1c30:	add	x29, sp, #0x60
    1c34:	stur	x0, [x29, #-16]
    1c38:	stur	x1, [x29, #-24]
    1c3c:	ldur	x8, [x29, #-16]
    1c40:	ldr	x8, [x8, #16]
    1c44:	stur	x8, [x29, #-40]
    1c48:	ldur	x8, [x29, #-24]
    1c4c:	stur	x8, [x29, #-32]
    1c50:	ldur	x8, [x29, #-24]
    1c54:	ldur	x9, [x29, #-40]
    1c58:	cmp	x8, x9
    1c5c:	b.lt	1c84 <PyInit__heapq@@Base+0xfd0>  // b.tstop
    1c60:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1c64:	ldr	x8, [x8, #4056]
    1c68:	ldr	x0, [x8]
    1c6c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1c70:	add	x1, x1, #0xc96
    1c74:	bl	b60 <PyErr_SetString@plt>
    1c78:	mov	w9, #0xffffffff            	// #-1
    1c7c:	stur	w9, [x29, #-4]
    1c80:	b	1e14 <PyInit__heapq@@Base+0x1160>
    1c84:	ldur	x8, [x29, #-16]
    1c88:	ldr	x8, [x8, #24]
    1c8c:	str	x8, [sp, #16]
    1c90:	ldur	x8, [x29, #-40]
    1c94:	asr	x8, x8, #1
    1c98:	str	x8, [sp, #40]
    1c9c:	ldur	x8, [x29, #-24]
    1ca0:	ldr	x9, [sp, #40]
    1ca4:	cmp	x8, x9
    1ca8:	b.ge	1e00 <PyInit__heapq@@Base+0x114c>  // b.tcont
    1cac:	ldur	x8, [x29, #-24]
    1cb0:	mov	x9, #0x2                   	// #2
    1cb4:	mul	x8, x9, x8
    1cb8:	add	x8, x8, #0x1
    1cbc:	str	x8, [sp, #48]
    1cc0:	ldr	x8, [sp, #48]
    1cc4:	add	x8, x8, #0x1
    1cc8:	ldur	x9, [x29, #-40]
    1ccc:	cmp	x8, x9
    1cd0:	b.ge	1d90 <PyInit__heapq@@Base+0x10dc>  // b.tcont
    1cd4:	ldr	x8, [sp, #16]
    1cd8:	ldr	x9, [sp, #48]
    1cdc:	add	x9, x9, #0x1
    1ce0:	mov	x10, #0x8                   	// #8
    1ce4:	mul	x9, x10, x9
    1ce8:	add	x8, x8, x9
    1cec:	ldr	x0, [x8]
    1cf0:	ldr	x8, [sp, #16]
    1cf4:	ldr	x9, [sp, #48]
    1cf8:	mul	x9, x10, x9
    1cfc:	add	x8, x8, x9
    1d00:	ldr	x1, [x8]
    1d04:	mov	w11, wzr
    1d08:	mov	w2, w11
    1d0c:	bl	b70 <PyObject_RichCompareBool@plt>
    1d10:	str	w0, [sp, #12]
    1d14:	ldr	w11, [sp, #12]
    1d18:	cmp	w11, #0x0
    1d1c:	cset	w11, ge  // ge = tcont
    1d20:	tbnz	w11, #0, 1d30 <PyInit__heapq@@Base+0x107c>
    1d24:	mov	w8, #0xffffffff            	// #-1
    1d28:	stur	w8, [x29, #-4]
    1d2c:	b	1e14 <PyInit__heapq@@Base+0x1160>
    1d30:	ldr	w8, [sp, #12]
    1d34:	eor	w8, w8, #0x1
    1d38:	mov	w9, w8
    1d3c:	ubfx	x9, x9, #0, #32
    1d40:	ldr	x10, [sp, #48]
    1d44:	add	x9, x10, x9
    1d48:	str	x9, [sp, #48]
    1d4c:	ldur	x9, [x29, #-16]
    1d50:	ldr	x9, [x9, #24]
    1d54:	str	x9, [sp, #16]
    1d58:	ldur	x9, [x29, #-40]
    1d5c:	ldur	x10, [x29, #-16]
    1d60:	ldr	x10, [x10, #16]
    1d64:	cmp	x9, x10
    1d68:	b.eq	1d90 <PyInit__heapq@@Base+0x10dc>  // b.none
    1d6c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1d70:	ldr	x8, [x8, #4024]
    1d74:	ldr	x0, [x8]
    1d78:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1d7c:	add	x1, x1, #0xca9
    1d80:	bl	b60 <PyErr_SetString@plt>
    1d84:	mov	w9, #0xffffffff            	// #-1
    1d88:	stur	w9, [x29, #-4]
    1d8c:	b	1e14 <PyInit__heapq@@Base+0x1160>
    1d90:	ldr	x8, [sp, #16]
    1d94:	ldr	x9, [sp, #48]
    1d98:	mov	x10, #0x8                   	// #8
    1d9c:	mul	x9, x10, x9
    1da0:	add	x8, x8, x9
    1da4:	ldr	x8, [x8]
    1da8:	str	x8, [sp, #32]
    1dac:	ldr	x8, [sp, #16]
    1db0:	ldur	x9, [x29, #-24]
    1db4:	mul	x9, x10, x9
    1db8:	add	x8, x8, x9
    1dbc:	ldr	x8, [x8]
    1dc0:	str	x8, [sp, #24]
    1dc4:	ldr	x8, [sp, #24]
    1dc8:	ldr	x9, [sp, #16]
    1dcc:	ldr	x11, [sp, #48]
    1dd0:	mul	x11, x10, x11
    1dd4:	add	x9, x9, x11
    1dd8:	str	x8, [x9]
    1ddc:	ldr	x8, [sp, #32]
    1de0:	ldr	x9, [sp, #16]
    1de4:	ldur	x11, [x29, #-24]
    1de8:	mul	x10, x10, x11
    1dec:	add	x9, x9, x10
    1df0:	str	x8, [x9]
    1df4:	ldr	x8, [sp, #48]
    1df8:	stur	x8, [x29, #-24]
    1dfc:	b	1c9c <PyInit__heapq@@Base+0xfe8>
    1e00:	ldur	x0, [x29, #-16]
    1e04:	ldur	x1, [x29, #-32]
    1e08:	ldur	x2, [x29, #-24]
    1e0c:	bl	1e24 <PyInit__heapq@@Base+0x1170>
    1e10:	stur	w0, [x29, #-4]
    1e14:	ldur	w0, [x29, #-4]
    1e18:	ldp	x29, x30, [sp, #96]
    1e1c:	add	sp, sp, #0x70
    1e20:	ret
    1e24:	sub	sp, sp, #0x60
    1e28:	stp	x29, x30, [sp, #80]
    1e2c:	add	x29, sp, #0x50
    1e30:	stur	x0, [x29, #-16]
    1e34:	stur	x1, [x29, #-24]
    1e38:	stur	x2, [x29, #-32]
    1e3c:	ldur	x8, [x29, #-16]
    1e40:	ldr	x8, [x8, #16]
    1e44:	str	x8, [sp, #8]
    1e48:	ldur	x8, [x29, #-32]
    1e4c:	ldr	x9, [sp, #8]
    1e50:	cmp	x8, x9
    1e54:	b.lt	1e7c <PyInit__heapq@@Base+0x11c8>  // b.tstop
    1e58:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1e5c:	ldr	x8, [x8, #4056]
    1e60:	ldr	x0, [x8]
    1e64:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1e68:	add	x1, x1, #0xc96
    1e6c:	bl	b60 <PyErr_SetString@plt>
    1e70:	mov	w9, #0xffffffff            	// #-1
    1e74:	stur	w9, [x29, #-4]
    1e78:	b	1fd8 <PyInit__heapq@@Base+0x1324>
    1e7c:	ldur	x8, [x29, #-16]
    1e80:	ldr	x8, [x8, #24]
    1e84:	str	x8, [sp, #24]
    1e88:	ldr	x8, [sp, #24]
    1e8c:	ldur	x9, [x29, #-32]
    1e90:	mov	x10, #0x8                   	// #8
    1e94:	mul	x9, x10, x9
    1e98:	add	x8, x8, x9
    1e9c:	ldr	x8, [x8]
    1ea0:	str	x8, [sp, #40]
    1ea4:	ldur	x8, [x29, #-32]
    1ea8:	ldur	x9, [x29, #-24]
    1eac:	cmp	x8, x9
    1eb0:	b.le	1fd4 <PyInit__heapq@@Base+0x1320>
    1eb4:	ldur	x8, [x29, #-32]
    1eb8:	subs	x8, x8, #0x1
    1ebc:	asr	x8, x8, #1
    1ec0:	str	x8, [sp, #16]
    1ec4:	ldr	x8, [sp, #24]
    1ec8:	ldr	x9, [sp, #16]
    1ecc:	mov	x10, #0x8                   	// #8
    1ed0:	mul	x9, x10, x9
    1ed4:	add	x8, x8, x9
    1ed8:	ldr	x8, [x8]
    1edc:	str	x8, [sp, #32]
    1ee0:	ldr	x0, [sp, #32]
    1ee4:	ldr	x1, [sp, #40]
    1ee8:	mov	w11, wzr
    1eec:	mov	w2, w11
    1ef0:	bl	b70 <PyObject_RichCompareBool@plt>
    1ef4:	str	w0, [sp, #4]
    1ef8:	ldr	w11, [sp, #4]
    1efc:	cmp	w11, #0x0
    1f00:	cset	w11, ge  // ge = tcont
    1f04:	tbnz	w11, #0, 1f14 <PyInit__heapq@@Base+0x1260>
    1f08:	mov	w8, #0xffffffff            	// #-1
    1f0c:	stur	w8, [x29, #-4]
    1f10:	b	1fd8 <PyInit__heapq@@Base+0x1324>
    1f14:	ldr	x8, [sp, #8]
    1f18:	ldur	x9, [x29, #-16]
    1f1c:	ldr	x9, [x9, #16]
    1f20:	cmp	x8, x9
    1f24:	b.eq	1f4c <PyInit__heapq@@Base+0x1298>  // b.none
    1f28:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1234c>
    1f2c:	ldr	x8, [x8, #4024]
    1f30:	ldr	x0, [x8]
    1f34:	adrp	x1, 3000 <PyInit__heapq@@Base+0x234c>
    1f38:	add	x1, x1, #0xca9
    1f3c:	bl	b60 <PyErr_SetString@plt>
    1f40:	mov	w9, #0xffffffff            	// #-1
    1f44:	stur	w9, [x29, #-4]
    1f48:	b	1fd8 <PyInit__heapq@@Base+0x1324>
    1f4c:	ldr	w8, [sp, #4]
    1f50:	cbnz	w8, 1f58 <PyInit__heapq@@Base+0x12a4>
    1f54:	b	1fd4 <PyInit__heapq@@Base+0x1320>
    1f58:	ldur	x8, [x29, #-16]
    1f5c:	ldr	x8, [x8, #24]
    1f60:	str	x8, [sp, #24]
    1f64:	ldr	x8, [sp, #24]
    1f68:	ldr	x9, [sp, #16]
    1f6c:	mov	x10, #0x8                   	// #8
    1f70:	mul	x9, x10, x9
    1f74:	add	x8, x8, x9
    1f78:	ldr	x8, [x8]
    1f7c:	str	x8, [sp, #32]
    1f80:	ldr	x8, [sp, #24]
    1f84:	ldur	x9, [x29, #-32]
    1f88:	mul	x9, x10, x9
    1f8c:	add	x8, x8, x9
    1f90:	ldr	x8, [x8]
    1f94:	str	x8, [sp, #40]
    1f98:	ldr	x8, [sp, #40]
    1f9c:	ldr	x9, [sp, #24]
    1fa0:	ldr	x11, [sp, #16]
    1fa4:	mul	x11, x10, x11
    1fa8:	add	x9, x9, x11
    1fac:	str	x8, [x9]
    1fb0:	ldr	x8, [sp, #32]
    1fb4:	ldr	x9, [sp, #24]
    1fb8:	ldur	x11, [x29, #-32]
    1fbc:	mul	x10, x10, x11
    1fc0:	add	x9, x9, x10
    1fc4:	str	x8, [x9]
    1fc8:	ldr	x8, [sp, #16]
    1fcc:	stur	x8, [x29, #-32]
    1fd0:	b	1ea4 <PyInit__heapq@@Base+0x11f0>
    1fd4:	stur	wzr, [x29, #-4]
    1fd8:	ldur	w0, [x29, #-4]
    1fdc:	ldp	x29, x30, [sp, #80]
    1fe0:	add	sp, sp, #0x60
    1fe4:	ret
    1fe8:	sub	sp, sp, #0x30
    1fec:	stp	x29, x30, [sp, #32]
    1ff0:	add	x29, sp, #0x20
    1ff4:	adrp	x8, 1000 <PyInit__heapq@@Base+0x34c>
    1ff8:	add	x8, x8, #0xc28
    1ffc:	stur	x0, [x29, #-8]
    2000:	str	x1, [sp, #16]
    2004:	str	x2, [sp, #8]
    2008:	ldr	x0, [sp, #16]
    200c:	ldr	x1, [sp, #8]
    2010:	mov	x2, x8
    2014:	bl	1898 <PyInit__heapq@@Base+0xbe4>
    2018:	ldp	x29, x30, [sp, #32]
    201c:	add	sp, sp, #0x30
    2020:	ret

Disassembly of section .fini:

0000000000002024 <.fini>:
    2024:	stp	x29, x30, [sp, #-16]!
    2028:	mov	x29, sp
    202c:	ldp	x29, x30, [sp], #16
    2030:	ret
