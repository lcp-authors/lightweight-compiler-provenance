
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_opcode.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000009b0 <.init>:
 9b0:	stp	x29, x30, [sp, #-16]!
 9b4:	mov	x29, sp
 9b8:	bl	aa0 <_PyLong_AsInt@plt+0x10>
 9bc:	ldp	x29, x30, [sp], #16
 9c0:	ret

Disassembly of section .plt:

00000000000009d0 <__cxa_finalize@plt-0x20>:
 9d0:	stp	x16, x30, [sp, #-16]!
 9d4:	adrp	x16, 11000 <PyInit__opcode@@Base+0x1048c>
 9d8:	ldr	x17, [x16, #4088]
 9dc:	add	x16, x16, #0xff8
 9e0:	br	x17
 9e4:	nop
 9e8:	nop
 9ec:	nop

00000000000009f0 <__cxa_finalize@plt>:
 9f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 9f4:	ldr	x17, [x16]
 9f8:	add	x16, x16, #0x0
 9fc:	br	x17

0000000000000a00 <_PyArg_UnpackKeywords@plt>:
 a00:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a04:	ldr	x17, [x16, #8]
 a08:	add	x16, x16, #0x8
 a0c:	br	x17

0000000000000a10 <PyErr_SetString@plt>:
 a10:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a14:	ldr	x17, [x16, #16]
 a18:	add	x16, x16, #0x10
 a1c:	br	x17

0000000000000a20 <PyLong_FromLong@plt>:
 a20:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a24:	ldr	x17, [x16, #24]
 a28:	add	x16, x16, #0x18
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a34:	ldr	x17, [x16, #32]
 a38:	add	x16, x16, #0x20
 a3c:	br	x17

0000000000000a40 <PyErr_Occurred@plt>:
 a40:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a44:	ldr	x17, [x16, #40]
 a48:	add	x16, x16, #0x28
 a4c:	br	x17

0000000000000a50 <PyModule_Create2@plt>:
 a50:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a54:	ldr	x17, [x16, #48]
 a58:	add	x16, x16, #0x30
 a5c:	br	x17

0000000000000a60 <PyLong_AsLong@plt>:
 a60:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a64:	ldr	x17, [x16, #56]
 a68:	add	x16, x16, #0x38
 a6c:	br	x17

0000000000000a70 <PyCompile_OpcodeStackEffectWithJump@plt>:
 a70:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a74:	ldr	x17, [x16, #64]
 a78:	add	x16, x16, #0x40
 a7c:	br	x17

0000000000000a80 <PyType_IsSubtype@plt>:
 a80:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a84:	ldr	x17, [x16, #72]
 a88:	add	x16, x16, #0x48
 a8c:	br	x17

0000000000000a90 <_PyLong_AsInt@plt>:
 a90:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 a94:	ldr	x17, [x16, #80]
 a98:	add	x16, x16, #0x50
 a9c:	br	x17

Disassembly of section .text:

0000000000000aa0 <PyInit__opcode@@Base-0xd4>:
 aa0:	adrp	x0, 11000 <PyInit__opcode@@Base+0x1048c>
 aa4:	ldr	x0, [x0, #4040]
 aa8:	cbz	x0, ab0 <_PyLong_AsInt@plt+0x20>
 aac:	b	a30 <__gmon_start__@plt>
 ab0:	ret
 ab4:	nop
 ab8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 abc:	add	x0, x0, #0x148
 ac0:	adrp	x1, 12000 <PyInit__opcode@@Base+0x1148c>
 ac4:	add	x1, x1, #0x148
 ac8:	cmp	x1, x0
 acc:	b.eq	ae4 <_PyLong_AsInt@plt+0x54>  // b.none
 ad0:	adrp	x1, 11000 <PyInit__opcode@@Base+0x1048c>
 ad4:	ldr	x1, [x1, #3992]
 ad8:	cbz	x1, ae4 <_PyLong_AsInt@plt+0x54>
 adc:	mov	x16, x1
 ae0:	br	x16
 ae4:	ret
 ae8:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 aec:	add	x0, x0, #0x148
 af0:	adrp	x1, 12000 <PyInit__opcode@@Base+0x1148c>
 af4:	add	x1, x1, #0x148
 af8:	sub	x1, x1, x0
 afc:	lsr	x2, x1, #63
 b00:	add	x1, x2, x1, asr #3
 b04:	cmp	xzr, x1, asr #1
 b08:	asr	x1, x1, #1
 b0c:	b.eq	b24 <_PyLong_AsInt@plt+0x94>  // b.none
 b10:	adrp	x2, 11000 <PyInit__opcode@@Base+0x1048c>
 b14:	ldr	x2, [x2, #4064]
 b18:	cbz	x2, b24 <_PyLong_AsInt@plt+0x94>
 b1c:	mov	x16, x2
 b20:	br	x16
 b24:	ret
 b28:	stp	x29, x30, [sp, #-32]!
 b2c:	mov	x29, sp
 b30:	str	x19, [sp, #16]
 b34:	adrp	x19, 12000 <PyInit__opcode@@Base+0x1148c>
 b38:	ldrb	w0, [x19, #328]
 b3c:	cbnz	w0, b64 <_PyLong_AsInt@plt+0xd4>
 b40:	adrp	x0, 11000 <PyInit__opcode@@Base+0x1048c>
 b44:	ldr	x0, [x0, #4008]
 b48:	cbz	x0, b58 <_PyLong_AsInt@plt+0xc8>
 b4c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 b50:	ldr	x0, [x0, #88]
 b54:	bl	9f0 <__cxa_finalize@plt>
 b58:	bl	ab8 <_PyLong_AsInt@plt+0x28>
 b5c:	mov	w0, #0x1                   	// #1
 b60:	strb	w0, [x19, #328]
 b64:	ldr	x19, [sp, #16]
 b68:	ldp	x29, x30, [sp], #32
 b6c:	ret
 b70:	b	ae8 <_PyLong_AsInt@plt+0x58>

0000000000000b74 <PyInit__opcode@@Base>:
 b74:	stp	x29, x30, [sp, #-16]!
 b78:	mov	x29, sp
 b7c:	adrp	x0, 12000 <PyInit__opcode@@Base+0x1148c>
 b80:	add	x0, x0, #0x60
 b84:	mov	w1, #0x3f5                 	// #1013
 b88:	bl	a50 <PyModule_Create2@plt>
 b8c:	ldp	x29, x30, [sp], #16
 b90:	ret
 b94:	sub	sp, sp, #0xa0
 b98:	stp	x29, x30, [sp, #144]
 b9c:	add	x29, sp, #0x90
 ba0:	mov	x8, xzr
 ba4:	stur	x0, [x29, #-8]
 ba8:	stur	x1, [x29, #-16]
 bac:	stur	x2, [x29, #-24]
 bb0:	stur	x3, [x29, #-32]
 bb4:	stur	x8, [x29, #-40]
 bb8:	ldur	x8, [x29, #-24]
 bbc:	ldur	x9, [x29, #-32]
 bc0:	str	x8, [sp, #32]
 bc4:	cbz	x9, bd8 <PyInit__opcode@@Base+0x64>
 bc8:	ldur	x8, [x29, #-32]
 bcc:	ldr	x8, [x8, #16]
 bd0:	str	x8, [sp, #24]
 bd4:	b	be0 <PyInit__opcode@@Base+0x6c>
 bd8:	mov	x8, xzr
 bdc:	str	x8, [sp, #24]
 be0:	ldr	x8, [sp, #24]
 be4:	ldr	x9, [sp, #32]
 be8:	add	x8, x9, x8
 bec:	subs	x8, x8, #0x1
 bf0:	str	x8, [sp, #72]
 bf4:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 bf8:	ldr	x8, [x8, #4048]
 bfc:	str	x8, [sp, #56]
 c00:	str	x8, [sp, #48]
 c04:	ldur	x8, [x29, #-32]
 c08:	cbnz	x8, c3c <PyInit__opcode@@Base+0xc8>
 c0c:	ldur	x8, [x29, #-24]
 c10:	mov	x9, #0x1                   	// #1
 c14:	cmp	x9, x8
 c18:	b.gt	c3c <PyInit__opcode@@Base+0xc8>
 c1c:	ldur	x8, [x29, #-24]
 c20:	cmp	x8, #0x2
 c24:	b.gt	c3c <PyInit__opcode@@Base+0xc8>
 c28:	ldur	x8, [x29, #-16]
 c2c:	cbz	x8, c3c <PyInit__opcode@@Base+0xc8>
 c30:	ldur	x8, [x29, #-16]
 c34:	str	x8, [sp, #16]
 c38:	b	c7c <PyInit__opcode@@Base+0x108>
 c3c:	ldur	x0, [x29, #-16]
 c40:	ldur	x1, [x29, #-24]
 c44:	ldur	x3, [x29, #-32]
 c48:	mov	x8, xzr
 c4c:	mov	x2, x8
 c50:	adrp	x4, 12000 <PyInit__opcode@@Base+0x1148c>
 c54:	add	x4, x4, #0x108
 c58:	mov	w5, #0x1                   	// #1
 c5c:	mov	w6, #0x2                   	// #2
 c60:	mov	w9, wzr
 c64:	mov	w7, w9
 c68:	mov	x8, sp
 c6c:	sub	x10, x29, #0x40
 c70:	str	x10, [x8]
 c74:	bl	a00 <_PyArg_UnpackKeywords@plt>
 c78:	str	x0, [sp, #16]
 c7c:	ldr	x8, [sp, #16]
 c80:	stur	x8, [x29, #-16]
 c84:	ldur	x8, [x29, #-16]
 c88:	cbnz	x8, c90 <PyInit__opcode@@Base+0x11c>
 c8c:	b	d90 <PyInit__opcode@@Base+0x21c>
 c90:	ldur	x8, [x29, #-16]
 c94:	ldr	x8, [x8]
 c98:	ldr	x8, [x8, #8]
 c9c:	adrp	x9, 11000 <PyInit__opcode@@Base+0x1048c>
 ca0:	ldr	x9, [x9, #4000]
 ca4:	cmp	x8, x9
 ca8:	b.eq	cc8 <PyInit__opcode@@Base+0x154>  // b.none
 cac:	ldur	x8, [x29, #-16]
 cb0:	ldr	x8, [x8]
 cb4:	ldr	x0, [x8, #8]
 cb8:	adrp	x1, 11000 <PyInit__opcode@@Base+0x1048c>
 cbc:	ldr	x1, [x1, #4000]
 cc0:	bl	a80 <PyType_IsSubtype@plt>
 cc4:	cbz	w0, ce4 <PyInit__opcode@@Base+0x170>
 cc8:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 ccc:	ldr	x8, [x8, #4024]
 cd0:	ldr	x0, [x8]
 cd4:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 cd8:	add	x1, x1, #0xf8d
 cdc:	bl	a10 <PyErr_SetString@plt>
 ce0:	b	d90 <PyInit__opcode@@Base+0x21c>
 ce4:	ldur	x8, [x29, #-16]
 ce8:	ldr	x0, [x8]
 cec:	bl	a90 <_PyLong_AsInt@plt>
 cf0:	str	w0, [sp, #68]
 cf4:	ldr	w9, [sp, #68]
 cf8:	mov	w10, #0xffffffff            	// #-1
 cfc:	cmp	w9, w10
 d00:	b.ne	d10 <PyInit__opcode@@Base+0x19c>  // b.any
 d04:	bl	a40 <PyErr_Occurred@plt>
 d08:	cbz	x0, d10 <PyInit__opcode@@Base+0x19c>
 d0c:	b	d90 <PyInit__opcode@@Base+0x21c>
 d10:	ldur	x8, [x29, #-24]
 d14:	cmp	x8, #0x2
 d18:	b.ge	d20 <PyInit__opcode@@Base+0x1ac>  // b.tcont
 d1c:	b	d38 <PyInit__opcode@@Base+0x1c4>
 d20:	ldr	x8, [sp, #72]
 d24:	subs	x8, x8, #0x1
 d28:	str	x8, [sp, #72]
 d2c:	ldur	x8, [x29, #-16]
 d30:	ldr	x8, [x8, #8]
 d34:	str	x8, [sp, #56]
 d38:	ldr	x8, [sp, #72]
 d3c:	cbnz	x8, d44 <PyInit__opcode@@Base+0x1d0>
 d40:	b	d50 <PyInit__opcode@@Base+0x1dc>
 d44:	ldur	x8, [x29, #-16]
 d48:	ldr	x8, [x8, #16]
 d4c:	str	x8, [sp, #48]
 d50:	ldur	x0, [x29, #-8]
 d54:	ldr	w1, [sp, #68]
 d58:	ldr	x2, [sp, #56]
 d5c:	ldr	x3, [sp, #48]
 d60:	bl	da0 <PyInit__opcode@@Base+0x22c>
 d64:	str	w0, [sp, #44]
 d68:	ldr	w8, [sp, #44]
 d6c:	mov	w9, #0xffffffff            	// #-1
 d70:	cmp	w8, w9
 d74:	b.ne	d84 <PyInit__opcode@@Base+0x210>  // b.any
 d78:	bl	a40 <PyErr_Occurred@plt>
 d7c:	cbz	x0, d84 <PyInit__opcode@@Base+0x210>
 d80:	b	d90 <PyInit__opcode@@Base+0x21c>
 d84:	ldrsw	x0, [sp, #44]
 d88:	bl	a20 <PyLong_FromLong@plt>
 d8c:	stur	x0, [x29, #-40]
 d90:	ldur	x0, [x29, #-40]
 d94:	ldp	x29, x30, [sp, #144]
 d98:	add	sp, sp, #0xa0
 d9c:	ret
 da0:	sub	sp, sp, #0x60
 da4:	stp	x29, x30, [sp, #80]
 da8:	add	x29, sp, #0x50
 dac:	adrp	x8, 11000 <PyInit__opcode@@Base+0x1048c>
 db0:	ldr	x8, [x8, #4048]
 db4:	adrp	x9, 11000 <PyInit__opcode@@Base+0x1048c>
 db8:	ldr	x9, [x9, #4016]
 dbc:	stur	x0, [x29, #-16]
 dc0:	stur	w1, [x29, #-20]
 dc4:	stur	x2, [x29, #-32]
 dc8:	str	x3, [sp, #40]
 dcc:	str	wzr, [sp, #32]
 dd0:	ldur	w10, [x29, #-20]
 dd4:	cmp	w10, #0x5a
 dd8:	str	x8, [sp, #16]
 ddc:	str	x9, [sp, #8]
 de0:	b.lt	e48 <PyInit__opcode@@Base+0x2d4>  // b.tstop
 de4:	ldur	x8, [x29, #-32]
 de8:	ldr	x9, [sp, #16]
 dec:	cmp	x8, x9
 df0:	b.ne	e14 <PyInit__opcode@@Base+0x2a0>  // b.any
 df4:	ldr	x8, [sp, #8]
 df8:	ldr	x0, [x8]
 dfc:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 e00:	add	x1, x1, #0xfb2
 e04:	bl	a10 <PyErr_SetString@plt>
 e08:	mov	w9, #0xffffffff            	// #-1
 e0c:	stur	w9, [x29, #-4]
 e10:	b	f3c <PyInit__opcode@@Base+0x3c8>
 e14:	ldur	x0, [x29, #-32]
 e18:	bl	a60 <PyLong_AsLong@plt>
 e1c:	str	w0, [sp, #32]
 e20:	ldr	w8, [sp, #32]
 e24:	mov	w9, #0xffffffff            	// #-1
 e28:	cmp	w8, w9
 e2c:	b.ne	e44 <PyInit__opcode@@Base+0x2d0>  // b.any
 e30:	bl	a40 <PyErr_Occurred@plt>
 e34:	cbz	x0, e44 <PyInit__opcode@@Base+0x2d0>
 e38:	mov	w8, #0xffffffff            	// #-1
 e3c:	stur	w8, [x29, #-4]
 e40:	b	f3c <PyInit__opcode@@Base+0x3c8>
 e44:	b	e78 <PyInit__opcode@@Base+0x304>
 e48:	ldur	x8, [x29, #-32]
 e4c:	ldr	x9, [sp, #16]
 e50:	cmp	x8, x9
 e54:	b.eq	e78 <PyInit__opcode@@Base+0x304>  // b.none
 e58:	ldr	x8, [sp, #8]
 e5c:	ldr	x0, [x8]
 e60:	adrp	x1, 0 <__cxa_finalize@plt-0x9f0>
 e64:	add	x1, x1, #0xff2
 e68:	bl	a10 <PyErr_SetString@plt>
 e6c:	mov	w9, #0xffffffff            	// #-1
 e70:	stur	w9, [x29, #-4]
 e74:	b	f3c <PyInit__opcode@@Base+0x3c8>
 e78:	ldr	x8, [sp, #40]
 e7c:	ldr	x9, [sp, #16]
 e80:	cmp	x8, x9
 e84:	b.ne	e94 <PyInit__opcode@@Base+0x320>  // b.any
 e88:	mov	w8, #0xffffffff            	// #-1
 e8c:	str	w8, [sp, #28]
 e90:	b	ef0 <PyInit__opcode@@Base+0x37c>
 e94:	ldr	x8, [sp, #40]
 e98:	adrp	x9, 11000 <PyInit__opcode@@Base+0x1048c>
 e9c:	ldr	x9, [x9, #4056]
 ea0:	cmp	x8, x9
 ea4:	b.ne	eb4 <PyInit__opcode@@Base+0x340>  // b.any
 ea8:	mov	w8, #0x1                   	// #1
 eac:	str	w8, [sp, #28]
 eb0:	b	ef0 <PyInit__opcode@@Base+0x37c>
 eb4:	ldr	x8, [sp, #40]
 eb8:	adrp	x9, 11000 <PyInit__opcode@@Base+0x1048c>
 ebc:	ldr	x9, [x9, #4032]
 ec0:	cmp	x8, x9
 ec4:	b.ne	ed0 <PyInit__opcode@@Base+0x35c>  // b.any
 ec8:	str	wzr, [sp, #28]
 ecc:	b	ef0 <PyInit__opcode@@Base+0x37c>
 ed0:	ldr	x8, [sp, #8]
 ed4:	ldr	x0, [x8]
 ed8:	adrp	x1, 1000 <PyInit__opcode@@Base+0x48c>
 edc:	add	x1, x1, #0x35
 ee0:	bl	a10 <PyErr_SetString@plt>
 ee4:	mov	w9, #0xffffffff            	// #-1
 ee8:	stur	w9, [x29, #-4]
 eec:	b	f3c <PyInit__opcode@@Base+0x3c8>
 ef0:	ldur	w0, [x29, #-20]
 ef4:	ldr	w1, [sp, #32]
 ef8:	ldr	w2, [sp, #28]
 efc:	bl	a70 <PyCompile_OpcodeStackEffectWithJump@plt>
 f00:	str	w0, [sp, #36]
 f04:	ldr	w8, [sp, #36]
 f08:	mov	w9, #0x7fffffff            	// #2147483647
 f0c:	cmp	w8, w9
 f10:	b.ne	f34 <PyInit__opcode@@Base+0x3c0>  // b.any
 f14:	ldr	x8, [sp, #8]
 f18:	ldr	x0, [x8]
 f1c:	adrp	x1, 1000 <PyInit__opcode@@Base+0x48c>
 f20:	add	x1, x1, #0x64
 f24:	bl	a10 <PyErr_SetString@plt>
 f28:	mov	w9, #0xffffffff            	// #-1
 f2c:	stur	w9, [x29, #-4]
 f30:	b	f3c <PyInit__opcode@@Base+0x3c8>
 f34:	ldr	w8, [sp, #36]
 f38:	stur	w8, [x29, #-4]
 f3c:	ldur	w0, [x29, #-4]
 f40:	ldp	x29, x30, [sp, #80]
 f44:	add	sp, sp, #0x60
 f48:	ret

Disassembly of section .fini:

0000000000000f4c <.fini>:
 f4c:	stp	x29, x30, [sp, #-16]!
 f50:	mov	x29, sp
 f54:	ldp	x29, x30, [sp], #16
 f58:	ret
