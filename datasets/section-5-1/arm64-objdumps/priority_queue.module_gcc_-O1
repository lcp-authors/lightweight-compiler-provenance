
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//priority_queue.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_priority_queue_top>:
   0:	ldr	x1, [x0, #16]
   4:	cbz	x1, 10 <grub_priority_queue_top+0x10>
   8:	ldr	x0, [x0, #32]
   c:	ret
  10:	mov	x0, #0x0                   	// #0
  14:	b	c <grub_priority_queue_top+0xc>

0000000000000018 <grub_priority_queue_destroy>:
  18:	stp	x29, x30, [sp, #-32]!
  1c:	mov	x29, sp
  20:	str	x19, [sp, #16]
  24:	mov	x19, x0
  28:	ldr	x0, [x0, #32]
  2c:	bl	0 <grub_free>
  30:	mov	x0, x19
  34:	bl	0 <grub_free>
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <grub_priority_queue_new>:
  44:	stp	x29, x30, [sp, #-48]!
  48:	mov	x29, sp
  4c:	stp	x19, x20, [sp, #16]
  50:	stp	x21, x22, [sp, #32]
  54:	mov	x21, x0
  58:	mov	x22, x1
  5c:	lsl	x0, x0, #3
  60:	bl	0 <grub_malloc>
  64:	mov	x20, x0
  68:	cbz	x0, b4 <grub_priority_queue_new+0x70>
  6c:	mov	x0, #0x28                  	// #40
  70:	bl	0 <grub_malloc>
  74:	mov	x19, x0
  78:	cbz	x0, a8 <grub_priority_queue_new+0x64>
  7c:	str	x21, [x0]
  80:	mov	x0, #0x8                   	// #8
  84:	str	x0, [x19, #8]
  88:	str	xzr, [x19, #16]
  8c:	str	x22, [x19, #24]
  90:	str	x20, [x19, #32]
  94:	mov	x0, x19
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldp	x21, x22, [sp, #32]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret
  a8:	mov	x0, x20
  ac:	bl	0 <grub_free>
  b0:	b	94 <grub_priority_queue_new+0x50>
  b4:	mov	x19, x0
  b8:	b	94 <grub_priority_queue_new+0x50>

00000000000000bc <grub_priority_queue_push>:
  bc:	stp	x29, x30, [sp, #-48]!
  c0:	mov	x29, sp
  c4:	stp	x19, x20, [sp, #16]
  c8:	stp	x21, x22, [sp, #32]
  cc:	mov	x21, x0
  d0:	mov	x19, x1
  d4:	ldr	x0, [x0, #8]
  d8:	ldr	x2, [x21, #16]
  dc:	cmp	x2, x0
  e0:	b.eq	118 <grub_priority_queue_push+0x5c>  // b.none
  e4:	ldr	x0, [x21, #16]
  e8:	add	x1, x0, #0x1
  ec:	str	x1, [x21, #16]
  f0:	ldr	x2, [x21]
  f4:	ldr	x3, [x21, #32]
  f8:	mov	x1, x19
  fc:	madd	x0, x0, x2, x3
 100:	bl	0 <grub_memmove>
 104:	ldr	x20, [x21, #16]
 108:	subs	x20, x20, #0x1
 10c:	b.ne	15c <grub_priority_queue_push+0xa0>  // b.any
 110:	mov	w0, #0x0                   	// #0
 114:	b	1cc <grub_priority_queue_push+0x110>
 118:	ldr	x1, [x21]
 11c:	mul	x1, x0, x1
 120:	lsl	x1, x1, #1
 124:	ldr	x0, [x21, #32]
 128:	bl	0 <grub_realloc>
 12c:	cbz	x0, 144 <grub_priority_queue_push+0x88>
 130:	ldr	x1, [x21, #8]
 134:	lsl	x1, x1, #1
 138:	str	x1, [x21, #8]
 13c:	str	x0, [x21, #32]
 140:	b	e4 <grub_priority_queue_push+0x28>
 144:	adrp	x0, 0 <grub_priority_queue_top>
 148:	ldr	x0, [x0]
 14c:	ldr	w0, [x0]
 150:	b	1cc <grub_priority_queue_push+0x110>
 154:	cmp	x22, #0x1
 158:	b.ls	1c0 <grub_priority_queue_push+0x104>  // b.plast
 15c:	ldr	x1, [x21, #32]
 160:	ldr	x2, [x21]
 164:	madd	x0, x2, x20, x1
 168:	sub	x22, x20, #0x1
 16c:	mov	x19, x20
 170:	lsr	x20, x22, #1
 174:	ldr	x3, [x21, #24]
 178:	madd	x1, x20, x2, x1
 17c:	blr	x3
 180:	cmp	w0, #0x0
 184:	b.le	1c8 <grub_priority_queue_push+0x10c>
 188:	ldr	x2, [x21, #32]
 18c:	ldr	x0, [x21]
 190:	madd	x3, x0, x19, x2
 194:	madd	x2, x20, x0, x2
 198:	cbz	x0, 154 <grub_priority_queue_push+0x98>
 19c:	mov	x1, #0x0                   	// #0
 1a0:	ldrb	w4, [x3, x1]
 1a4:	ldrb	w5, [x2, x1]
 1a8:	strb	w5, [x3, x1]
 1ac:	strb	w4, [x2, x1]
 1b0:	add	x1, x1, #0x1
 1b4:	cmp	x1, x0
 1b8:	b.ne	1a0 <grub_priority_queue_push+0xe4>  // b.any
 1bc:	b	154 <grub_priority_queue_push+0x98>
 1c0:	mov	w0, #0x0                   	// #0
 1c4:	b	1cc <grub_priority_queue_push+0x110>
 1c8:	mov	w0, #0x0                   	// #0
 1cc:	ldp	x19, x20, [sp, #16]
 1d0:	ldp	x21, x22, [sp, #32]
 1d4:	ldp	x29, x30, [sp], #48
 1d8:	ret
 1dc:	nop
	...

00000000000001e8 <grub_priority_queue_pop>:
 1e8:	stp	x29, x30, [sp, #-48]!
 1ec:	mov	x29, sp
 1f0:	stp	x19, x20, [sp, #16]
 1f4:	mov	x20, x0
 1f8:	ldr	x2, [x0, #32]
 1fc:	ldr	x5, [x0]
 200:	ldr	x1, [x0, #16]
 204:	sub	x1, x1, #0x1
 208:	madd	x1, x1, x5, x2
 20c:	cbz	x5, 230 <grub_priority_queue_pop+0x48>
 210:	mov	x0, #0x0                   	// #0
 214:	ldrb	w3, [x2, x0]
 218:	ldrb	w4, [x1, x0]
 21c:	strb	w4, [x2, x0]
 220:	strb	w3, [x1, x0]
 224:	add	x0, x0, #0x1
 228:	cmp	x5, x0
 22c:	b.ne	214 <grub_priority_queue_pop+0x2c>  // b.any
 230:	ldr	x0, [x20, #16]
 234:	sub	x0, x0, #0x1
 238:	str	x0, [x20, #16]
 23c:	cmp	x0, #0x1
 240:	b.ls	33c <grub_priority_queue_pop+0x154>  // b.plast
 244:	stp	x21, x22, [sp, #32]
 248:	mov	x22, #0x1                   	// #1
 24c:	mov	x19, #0x0                   	// #0
 250:	b	2e0 <grub_priority_queue_pop+0xf8>
 254:	add	x1, x19, #0x1
 258:	lsl	x3, x1, #1
 25c:	ldr	x2, [x20, #16]
 260:	cmp	x2, x1, lsl #1
 264:	b.ls	348 <grub_priority_queue_pop+0x160>  // b.plast
 268:	ldr	x2, [x20, #32]
 26c:	ldr	x0, [x20]
 270:	ldr	x4, [x20, #24]
 274:	madd	x1, x0, x19, x2
 278:	madd	x0, x3, x0, x2
 27c:	blr	x4
 280:	cmp	w0, #0x0
 284:	b.gt	300 <grub_priority_queue_pop+0x118>
 288:	ldp	x21, x22, [sp, #32]
 28c:	b	33c <grub_priority_queue_pop+0x154>
 290:	mov	x21, x22
 294:	ldr	x2, [x20, #32]
 298:	ldr	x6, [x20]
 29c:	madd	x3, x6, x19, x2
 2a0:	madd	x2, x21, x6, x2
 2a4:	cbz	x6, 2c8 <grub_priority_queue_pop+0xe0>
 2a8:	mov	x1, #0x0                   	// #0
 2ac:	ldrb	w4, [x3, x1]
 2b0:	ldrb	w5, [x2, x1]
 2b4:	strb	w5, [x3, x1]
 2b8:	strb	w4, [x2, x1]
 2bc:	add	x1, x1, #0x1
 2c0:	cmp	x1, x6
 2c4:	b.ne	2ac <grub_priority_queue_pop+0xc4>  // b.any
 2c8:	lsl	x22, x21, #1
 2cc:	add	x22, x22, #0x1
 2d0:	ldr	x0, [x20, #16]
 2d4:	cmp	x0, x22
 2d8:	b.ls	338 <grub_priority_queue_pop+0x150>  // b.plast
 2dc:	mov	x19, x21
 2e0:	ldr	x0, [x20, #32]
 2e4:	ldr	x2, [x20]
 2e8:	ldr	x3, [x20, #24]
 2ec:	madd	x1, x2, x19, x0
 2f0:	madd	x0, x2, x22, x0
 2f4:	blr	x3
 2f8:	cmp	w0, #0x0
 2fc:	b.le	254 <grub_priority_queue_pop+0x6c>
 300:	add	x0, x19, #0x1
 304:	lsl	x21, x0, #1
 308:	ldr	x1, [x20, #16]
 30c:	cmp	x1, x0, lsl #1
 310:	b.ls	290 <grub_priority_queue_pop+0xa8>  // b.plast
 314:	ldr	x0, [x20, #32]
 318:	ldr	x2, [x20]
 31c:	ldr	x3, [x20, #24]
 320:	madd	x1, x21, x2, x0
 324:	madd	x0, x2, x22, x0
 328:	blr	x3
 32c:	cmp	w0, #0x0
 330:	csel	x21, x21, x22, le
 334:	b	294 <grub_priority_queue_pop+0xac>
 338:	ldp	x21, x22, [sp, #32]
 33c:	ldp	x19, x20, [sp, #16]
 340:	ldp	x29, x30, [sp], #48
 344:	ret
 348:	ldp	x21, x22, [sp, #32]
 34c:	b	33c <grub_priority_queue_pop+0x154>
