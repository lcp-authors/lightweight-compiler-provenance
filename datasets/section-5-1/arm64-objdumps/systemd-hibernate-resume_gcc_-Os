
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400980 <_init>:
  400980:	stp	x29, x30, [sp, #-16]!
  400984:	mov	x29, sp
  400988:	bl	400d70 <call_weak_fn>
  40098c:	ldp	x29, x30, [sp], #16
  400990:	ret

Disassembly of section .plt:

00000000004009a0 <.plt>:
  4009a0:	stp	x16, x30, [sp, #-16]!
  4009a4:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  4009a8:	ldr	x17, [x16, #3936]
  4009ac:	add	x16, x16, #0xf60
  4009b0:	br	x17
  4009b4:	nop
  4009b8:	nop
  4009bc:	nop

00000000004009c0 <__libc_start_main@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  4009c4:	ldr	x17, [x16, #3944]
  4009c8:	add	x16, x16, #0xf68
  4009cc:	br	x17

00000000004009d0 <__gmon_start__@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  4009d4:	ldr	x17, [x16, #3952]
  4009d8:	add	x16, x16, #0xf70
  4009dc:	br	x17

00000000004009e0 <write_string_file_ts@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  4009e4:	ldr	x17, [x16, #3960]
  4009e8:	add	x16, x16, #0xf78
  4009ec:	br	x17

00000000004009f0 <log_setup_service@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  4009f4:	ldr	x17, [x16, #3968]
  4009f8:	add	x16, x16, #0xf80
  4009fc:	br	x17

0000000000400a00 <umask@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a04:	ldr	x17, [x16, #3976]
  400a08:	add	x16, x16, #0xf88
  400a0c:	br	x17

0000000000400a10 <in_initrd@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a14:	ldr	x17, [x16, #3984]
  400a18:	add	x16, x16, #0xf90
  400a1c:	br	x17

0000000000400a20 <abort@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a24:	ldr	x17, [x16, #3992]
  400a28:	add	x16, x16, #0xf98
  400a2c:	br	x17

0000000000400a30 <__errno_location@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a34:	ldr	x17, [x16, #4000]
  400a38:	add	x16, x16, #0xfa0
  400a3c:	br	x17

0000000000400a40 <__stack_chk_fail@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a44:	ldr	x17, [x16, #4008]
  400a48:	add	x16, x16, #0xfa8
  400a4c:	br	x17

0000000000400a50 <__xstat64@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a54:	ldr	x17, [x16, #4016]
  400a58:	add	x16, x16, #0xfb0
  400a5c:	br	x17

0000000000400a60 <log_internal_realm@plt>:
  400a60:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a64:	ldr	x17, [x16, #4024]
  400a68:	add	x16, x16, #0xfb8
  400a6c:	br	x17

0000000000400a70 <gnu_dev_major@plt>:
  400a70:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a74:	ldr	x17, [x16, #4032]
  400a78:	add	x16, x16, #0xfc0
  400a7c:	br	x17

0000000000400a80 <asprintf@plt>:
  400a80:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a84:	ldr	x17, [x16, #4040]
  400a88:	add	x16, x16, #0xfc8
  400a8c:	br	x17

0000000000400a90 <free@plt>:
  400a90:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400a94:	ldr	x17, [x16, #4048]
  400a98:	add	x16, x16, #0xfd0
  400a9c:	br	x17

0000000000400aa0 <gnu_dev_minor@plt>:
  400aa0:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400aa4:	ldr	x17, [x16, #4056]
  400aa8:	add	x16, x16, #0xfd8
  400aac:	br	x17

0000000000400ab0 <log_oom_internal@plt>:
  400ab0:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400ab4:	ldr	x17, [x16, #4064]
  400ab8:	add	x16, x16, #0xfe0
  400abc:	br	x17

0000000000400ac0 <log_get_max_level_realm@plt>:
  400ac0:	adrp	x16, 411000 <__FRAME_END__+0xfe94>
  400ac4:	ldr	x17, [x16, #4072]
  400ac8:	add	x16, x16, #0xfe8
  400acc:	br	x17

Disassembly of section .text:

0000000000400ad0 <main>:
  400ad0:	stp	x29, x30, [sp, #-192]!
  400ad4:	cmp	w0, #0x2
  400ad8:	mov	x29, sp
  400adc:	stp	x19, x20, [sp, #16]
  400ae0:	adrp	x20, 411000 <__FRAME_END__+0xfe94>
  400ae4:	add	x20, x20, #0xd18
  400ae8:	mov	x19, x1
  400aec:	ldr	x1, [x20]
  400af0:	str	x1, [sp, #184]
  400af4:	mov	x1, #0x0                   	// #0
  400af8:	stp	x21, x22, [sp, #32]
  400afc:	str	xzr, [sp, #48]
  400b00:	b.eq	400b60 <main+0x90>  // b.none
  400b04:	mov	w0, #0x0                   	// #0
  400b08:	bl	400ac0 <log_get_max_level_realm@plt>
  400b0c:	cmp	w0, #0x2
  400b10:	b.gt	400b34 <main+0x64>
  400b14:	mov	w19, #0x1                   	// #1
  400b18:	ldr	x0, [sp, #48]
  400b1c:	bl	400a90 <free@plt>
  400b20:	ldr	x1, [sp, #184]
  400b24:	ldr	x0, [x20]
  400b28:	eor	x0, x1, x0
  400b2c:	cbz	x0, 400d0c <main+0x23c>
  400b30:	bl	400a40 <__stack_chk_fail@plt>
  400b34:	adrp	x5, 400000 <_init-0x980>
  400b38:	adrp	x4, 400000 <_init-0x980>
  400b3c:	add	x5, x5, #0xf08
  400b40:	add	x4, x4, #0xfff
  400b44:	mov	w3, #0x13                  	// #19
  400b48:	adrp	x2, 400000 <_init-0x980>
  400b4c:	mov	w1, #0x0                   	// #0
  400b50:	add	x2, x2, #0xf2e
  400b54:	mov	w0, #0x3                   	// #3
  400b58:	bl	400a60 <log_internal_realm@plt>
  400b5c:	b	400b14 <main+0x44>
  400b60:	bl	4009f0 <log_setup_service@plt>
  400b64:	mov	w0, #0x12                  	// #18
  400b68:	bl	400a00 <umask@plt>
  400b6c:	bl	400a10 <in_initrd@plt>
  400b70:	tst	w0, #0xff
  400b74:	b.ne	400b80 <main+0xb0>  // b.any
  400b78:	mov	w19, #0x0                   	// #0
  400b7c:	b	400b18 <main+0x48>
  400b80:	ldr	x19, [x19, #8]
  400b84:	add	x1, sp, #0x38
  400b88:	mov	x0, x19
  400b8c:	bl	400ed8 <stat64>
  400b90:	tbz	w0, #31, 400bd8 <main+0x108>
  400b94:	mov	w0, #0x0                   	// #0
  400b98:	bl	400ac0 <log_get_max_level_realm@plt>
  400b9c:	cmp	w0, #0x2
  400ba0:	b.le	400b14 <main+0x44>
  400ba4:	bl	400a30 <__errno_location@plt>
  400ba8:	ldr	w1, [x0]
  400bac:	adrp	x5, 400000 <_init-0x980>
  400bb0:	adrp	x4, 400000 <_init-0x980>
  400bb4:	adrp	x2, 400000 <_init-0x980>
  400bb8:	mov	x6, x19
  400bbc:	add	x5, x5, #0xf56
  400bc0:	add	x4, x4, #0xfff
  400bc4:	add	x2, x2, #0xf2e
  400bc8:	mov	w3, #0x22                  	// #34
  400bcc:	mov	w0, #0x3                   	// #3
  400bd0:	bl	400a60 <log_internal_realm@plt>
  400bd4:	b	400b14 <main+0x44>
  400bd8:	ldr	w0, [sp, #72]
  400bdc:	and	w0, w0, #0xf000
  400be0:	cmp	w0, #0x6, lsl #12
  400be4:	b.eq	400c20 <main+0x150>  // b.none
  400be8:	mov	w0, #0x0                   	// #0
  400bec:	bl	400ac0 <log_get_max_level_realm@plt>
  400bf0:	cmp	w0, #0x2
  400bf4:	b.le	400b14 <main+0x44>
  400bf8:	adrp	x5, 400000 <_init-0x980>
  400bfc:	adrp	x4, 400000 <_init-0x980>
  400c00:	adrp	x2, 400000 <_init-0x980>
  400c04:	mov	x6, x19
  400c08:	add	x5, x5, #0xf6e
  400c0c:	add	x4, x4, #0xfff
  400c10:	add	x2, x2, #0xf2e
  400c14:	mov	w3, #0x27                  	// #39
  400c18:	mov	w1, #0x0                   	// #0
  400c1c:	b	400bcc <main+0xfc>
  400c20:	ldr	x22, [sp, #88]
  400c24:	mov	x0, x22
  400c28:	bl	400a70 <gnu_dev_major@plt>
  400c2c:	mov	w21, w0
  400c30:	mov	x0, x22
  400c34:	bl	400aa0 <gnu_dev_minor@plt>
  400c38:	mov	w3, w0
  400c3c:	adrp	x1, 400000 <_init-0x980>
  400c40:	mov	w2, w21
  400c44:	add	x1, x1, #0xf98
  400c48:	add	x0, sp, #0x30
  400c4c:	bl	400a80 <asprintf@plt>
  400c50:	tbz	w0, #31, 400c74 <main+0x1a4>
  400c54:	adrp	x3, 400000 <_init-0x980>
  400c58:	mov	w2, #0x2c                  	// #44
  400c5c:	add	x3, x3, #0xfff
  400c60:	adrp	x1, 400000 <_init-0x980>
  400c64:	mov	w0, #0x0                   	// #0
  400c68:	add	x1, x1, #0xf2e
  400c6c:	bl	400ab0 <log_oom_internal@plt>
  400c70:	b	400b14 <main+0x44>
  400c74:	ldr	x1, [sp, #48]
  400c78:	mov	x3, #0x0                   	// #0
  400c7c:	mov	w2, #0x20                  	// #32
  400c80:	adrp	x0, 400000 <_init-0x980>
  400c84:	add	x0, x0, #0xf9e
  400c88:	bl	4009e0 <write_string_file_ts@plt>
  400c8c:	mov	w21, w0
  400c90:	mov	w0, #0x0                   	// #0
  400c94:	tbz	w21, #31, 400ccc <main+0x1fc>
  400c98:	bl	400ac0 <log_get_max_level_realm@plt>
  400c9c:	cmp	w0, #0x2
  400ca0:	b.le	400b14 <main+0x44>
  400ca4:	adrp	x5, 400000 <_init-0x980>
  400ca8:	adrp	x4, 400000 <_init-0x980>
  400cac:	adrp	x2, 400000 <_init-0x980>
  400cb0:	add	x5, x5, #0xfb0
  400cb4:	add	x4, x4, #0xfff
  400cb8:	add	x2, x2, #0xf2e
  400cbc:	mov	w1, w21
  400cc0:	mov	w3, #0x32                  	// #50
  400cc4:	ldr	x6, [sp, #48]
  400cc8:	b	400bcc <main+0xfc>
  400ccc:	bl	400ac0 <log_get_max_level_realm@plt>
  400cd0:	cmp	w0, #0x5
  400cd4:	b.le	400b78 <main+0xa8>
  400cd8:	ldr	x7, [sp, #48]
  400cdc:	mov	x6, x19
  400ce0:	adrp	x5, 400000 <_init-0x980>
  400ce4:	adrp	x4, 400000 <_init-0x980>
  400ce8:	add	x5, x5, #0xfde
  400cec:	add	x4, x4, #0xfff
  400cf0:	mov	w3, #0x3d                  	// #61
  400cf4:	adrp	x2, 400000 <_init-0x980>
  400cf8:	mov	w1, #0x0                   	// #0
  400cfc:	add	x2, x2, #0xf2e
  400d00:	mov	w0, #0x6                   	// #6
  400d04:	bl	400a60 <log_internal_realm@plt>
  400d08:	b	400b78 <main+0xa8>
  400d0c:	mov	w0, w19
  400d10:	ldp	x19, x20, [sp, #16]
  400d14:	ldp	x21, x22, [sp, #32]
  400d18:	ldp	x29, x30, [sp], #192
  400d1c:	ret

0000000000400d20 <_start>:
  400d20:	mov	x29, #0x0                   	// #0
  400d24:	mov	x30, #0x0                   	// #0
  400d28:	mov	x5, x0
  400d2c:	ldr	x1, [sp]
  400d30:	add	x2, sp, #0x8
  400d34:	mov	x6, sp
  400d38:	movz	x0, #0x0, lsl #48
  400d3c:	movk	x0, #0x0, lsl #32
  400d40:	movk	x0, #0x40, lsl #16
  400d44:	movk	x0, #0xad0
  400d48:	movz	x3, #0x0, lsl #48
  400d4c:	movk	x3, #0x0, lsl #32
  400d50:	movk	x3, #0x40, lsl #16
  400d54:	movk	x3, #0xe50
  400d58:	movz	x4, #0x0, lsl #48
  400d5c:	movk	x4, #0x0, lsl #32
  400d60:	movk	x4, #0x40, lsl #16
  400d64:	movk	x4, #0xed0
  400d68:	bl	4009c0 <__libc_start_main@plt>
  400d6c:	bl	400a20 <abort@plt>

0000000000400d70 <call_weak_fn>:
  400d70:	adrp	x0, 411000 <__FRAME_END__+0xfe94>
  400d74:	ldr	x0, [x0, #4088]
  400d78:	cbz	x0, 400d80 <call_weak_fn+0x10>
  400d7c:	b	4009d0 <__gmon_start__@plt>
  400d80:	ret

0000000000400d84 <deregister_tm_clones>:
  400d84:	adrp	x0, 412000 <__TMC_END__>
  400d88:	add	x1, x0, #0x0
  400d8c:	adrp	x0, 412000 <__TMC_END__>
  400d90:	add	x0, x0, #0x0
  400d94:	cmp	x1, x0
  400d98:	b.eq	400dc4 <deregister_tm_clones+0x40>  // b.none
  400d9c:	sub	sp, sp, #0x10
  400da0:	adrp	x1, 400000 <_init-0x980>
  400da4:	ldr	x1, [x1, #3832]
  400da8:	str	x1, [sp, #8]
  400dac:	cbz	x1, 400dbc <deregister_tm_clones+0x38>
  400db0:	mov	x16, x1
  400db4:	add	sp, sp, #0x10
  400db8:	br	x16
  400dbc:	add	sp, sp, #0x10
  400dc0:	ret
  400dc4:	ret

0000000000400dc8 <register_tm_clones>:
  400dc8:	adrp	x0, 412000 <__TMC_END__>
  400dcc:	add	x1, x0, #0x0
  400dd0:	adrp	x0, 412000 <__TMC_END__>
  400dd4:	add	x0, x0, #0x0
  400dd8:	sub	x1, x1, x0
  400ddc:	mov	x2, #0x2                   	// #2
  400de0:	asr	x1, x1, #3
  400de4:	sdiv	x1, x1, x2
  400de8:	cbz	x1, 400e14 <register_tm_clones+0x4c>
  400dec:	sub	sp, sp, #0x10
  400df0:	adrp	x2, 400000 <_init-0x980>
  400df4:	ldr	x2, [x2, #3840]
  400df8:	str	x2, [sp, #8]
  400dfc:	cbz	x2, 400e0c <register_tm_clones+0x44>
  400e00:	mov	x16, x2
  400e04:	add	sp, sp, #0x10
  400e08:	br	x16
  400e0c:	add	sp, sp, #0x10
  400e10:	ret
  400e14:	ret

0000000000400e18 <__do_global_dtors_aux>:
  400e18:	stp	x29, x30, [sp, #-32]!
  400e1c:	mov	x29, sp
  400e20:	str	x19, [sp, #16]
  400e24:	adrp	x19, 412000 <__TMC_END__>
  400e28:	ldrb	w0, [x19]
  400e2c:	cbnz	w0, 400e3c <__do_global_dtors_aux+0x24>
  400e30:	bl	400d84 <deregister_tm_clones>
  400e34:	mov	w0, #0x1                   	// #1
  400e38:	strb	w0, [x19]
  400e3c:	ldr	x19, [sp, #16]
  400e40:	ldp	x29, x30, [sp], #32
  400e44:	ret

0000000000400e48 <frame_dummy>:
  400e48:	b	400dc8 <register_tm_clones>
  400e4c:	nop

0000000000400e50 <__libc_csu_init>:
  400e50:	stp	x29, x30, [sp, #-64]!
  400e54:	mov	x29, sp
  400e58:	stp	x19, x20, [sp, #16]
  400e5c:	adrp	x20, 411000 <__FRAME_END__+0xfe94>
  400e60:	add	x20, x20, #0xd10
  400e64:	stp	x21, x22, [sp, #32]
  400e68:	adrp	x21, 411000 <__FRAME_END__+0xfe94>
  400e6c:	add	x21, x21, #0xd08
  400e70:	sub	x20, x20, x21
  400e74:	mov	w22, w0
  400e78:	stp	x23, x24, [sp, #48]
  400e7c:	mov	x23, x1
  400e80:	mov	x24, x2
  400e84:	bl	400980 <_init>
  400e88:	cmp	xzr, x20, asr #3
  400e8c:	b.eq	400eb8 <__libc_csu_init+0x68>  // b.none
  400e90:	asr	x20, x20, #3
  400e94:	mov	x19, #0x0                   	// #0
  400e98:	ldr	x3, [x21, x19, lsl #3]
  400e9c:	mov	x2, x24
  400ea0:	add	x19, x19, #0x1
  400ea4:	mov	x1, x23
  400ea8:	mov	w0, w22
  400eac:	blr	x3
  400eb0:	cmp	x20, x19
  400eb4:	b.ne	400e98 <__libc_csu_init+0x48>  // b.any
  400eb8:	ldp	x19, x20, [sp, #16]
  400ebc:	ldp	x21, x22, [sp, #32]
  400ec0:	ldp	x23, x24, [sp, #48]
  400ec4:	ldp	x29, x30, [sp], #64
  400ec8:	ret
  400ecc:	nop

0000000000400ed0 <__libc_csu_fini>:
  400ed0:	ret
  400ed4:	nop

0000000000400ed8 <stat64>:
  400ed8:	mov	x2, x1
  400edc:	mov	x1, x0
  400ee0:	mov	w0, #0x0                   	// #0
  400ee4:	b	400a50 <__xstat64@plt>

Disassembly of section .fini:

0000000000400ee8 <_fini>:
  400ee8:	stp	x29, x30, [sp, #-16]!
  400eec:	mov	x29, sp
  400ef0:	ldp	x29, x30, [sp], #16
  400ef4:	ret
