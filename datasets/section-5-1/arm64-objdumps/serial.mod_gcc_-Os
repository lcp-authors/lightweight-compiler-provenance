
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//serial.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_efiserial_init-0x1d8>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, #0x1                   	// #1
  14:	movk	x0, #0x3, lsl #32
  18:	str	x0, [sp, #32]
  1c:	mov	w0, #0x2                   	// #2
  20:	str	w0, [sp, #40]
  24:	mov	x0, #0x1                   	// #1
  28:	movk	x0, #0x2, lsl #32
  2c:	str	x0, [sp, #48]
  30:	mov	w0, #0x3                   	// #3
  34:	str	w0, [sp, #56]
  38:	ldr	w0, [x19, #64]
  3c:	cbnz	w0, a4 <grub_efiserial_init-0x134>
  40:	ldp	w2, w3, [x19, #40]
  44:	add	x1, sp, #0x30
  48:	ldr	x0, [x19, #72]
  4c:	ldr	w6, [x1, x3, lsl #2]
  50:	add	x1, sp, #0x20
  54:	ldrb	w5, [x19, #36]
  58:	mov	w3, #0x0                   	// #0
  5c:	ldr	x7, [x0, #16]
  60:	ldr	w4, [x1, x2, lsl #2]
  64:	mov	w2, #0x0                   	// #0
  68:	ldr	w1, [x19, #32]
  6c:	blr	x7
  70:	cbz	x0, 7c <grub_efiserial_init-0x15c>
  74:	mov	w0, #0x1                   	// #1
  78:	str	w0, [x19, #68]
  7c:	ldr	x0, [x19, #72]
  80:	mov	w3, #0x4002                	// #16386
  84:	ldr	w1, [x19, #56]
  88:	ldr	x2, [x0, #24]
  8c:	cmp	w1, #0x0
  90:	mov	w1, #0x2                   	// #2
  94:	csel	w1, w3, w1, ne  // ne = any
  98:	blr	x2
  9c:	mov	w0, #0x1                   	// #1
  a0:	str	w0, [x19, #64]
  a4:	ldr	x19, [sp, #16]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret
  b0:	stp	x29, x30, [sp, #-48]!
  b4:	mov	x1, #0x1                   	// #1
  b8:	mov	x29, sp
  bc:	str	x19, [sp, #16]
  c0:	mov	x19, x0
  c4:	str	x1, [sp, #40]
  c8:	bl	0 <grub_efiserial_init-0x1d8>
  cc:	ldr	w0, [x19, #68]
  d0:	cbz	w0, e4 <grub_efiserial_init-0xf4>
  d4:	mov	w0, #0xffffffff            	// #-1
  d8:	ldr	x19, [sp, #16]
  dc:	ldp	x29, x30, [sp], #48
  e0:	ret
  e4:	ldr	x0, [x19, #72]
  e8:	add	x2, sp, #0x27
  ec:	add	x1, sp, #0x28
  f0:	ldr	x3, [x0, #48]
  f4:	blr	x3
  f8:	cbnz	x0, d4 <grub_efiserial_init-0x104>
  fc:	ldr	x0, [sp, #40]
 100:	cbz	x0, d4 <grub_efiserial_init-0x104>
 104:	ldrb	w0, [sp, #39]
 108:	b	d8 <grub_efiserial_init-0x100>
 10c:	stp	x29, x30, [sp, #-48]!
 110:	mov	x2, #0x1                   	// #1
 114:	mov	x29, sp
 118:	str	x19, [sp, #16]
 11c:	mov	x19, x0
 120:	strb	w1, [sp, #39]
 124:	str	x2, [sp, #40]
 128:	bl	0 <grub_efiserial_init-0x1d8>
 12c:	ldr	w0, [x19, #68]
 130:	cbnz	w0, 148 <grub_efiserial_init-0x90>
 134:	ldr	x0, [x19, #72]
 138:	add	x2, sp, #0x27
 13c:	add	x1, sp, #0x28
 140:	ldr	x3, [x0, #40]
 144:	blr	x3
 148:	ldr	x19, [sp, #16]
 14c:	ldp	x29, x30, [sp], #48
 150:	ret
 154:	ldr	w2, [x1, #8]
 158:	cmp	w2, #0x2
 15c:	b.ls	170 <grub_efiserial_init-0x68>  // b.plast
 160:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 164:	ldr	x1, [x0]
 168:	mov	w0, #0x12                  	// #18
 16c:	b	0 <grub_error>
 170:	ldr	w2, [x1, #12]
 174:	cmp	w2, #0x2
 178:	b.ls	188 <grub_efiserial_init-0x50>  // b.plast
 17c:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 180:	ldr	x1, [x0]
 184:	b	168 <grub_efiserial_init-0x70>
 188:	ldr	w2, [x1, #4]
 18c:	sub	w2, w2, #0x5
 190:	cmp	w2, #0x3
 194:	b.ls	1a4 <grub_efiserial_init-0x34>  // b.plast
 198:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 19c:	ldr	x1, [x0]
 1a0:	b	168 <grub_efiserial_init-0x70>
 1a4:	ldp	x2, x3, [x1]
 1a8:	stp	x2, x3, [x0, #32]
 1ac:	ldp	x2, x3, [x1, #16]
 1b0:	stp	x2, x3, [x0, #48]
 1b4:	str	wzr, [x0, #64]
 1b8:	mov	w0, #0x0                   	// #0
 1bc:	ret
	...

00000000000001d8 <grub_efiserial_init>:
 1d8:	stp	x29, x30, [sp, #-128]!
 1dc:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 1e0:	mov	x2, #0x0                   	// #0
 1e4:	mov	x29, sp
 1e8:	stp	x21, x22, [sp, #32]
 1ec:	add	x3, sp, #0x58
 1f0:	ldr	x21, [x0]
 1f4:	mov	w0, #0x2                   	// #2
 1f8:	stp	x19, x20, [sp, #16]
 1fc:	mov	x1, x21
 200:	stp	x23, x24, [sp, #48]
 204:	stp	x25, x26, [sp, #64]
 208:	bl	0 <grub_efi_locate_handle>
 20c:	cbnz	x0, 2e4 <grub_efiserial_init+0x10c>
 210:	ldp	x19, x20, [sp, #16]
 214:	ldp	x21, x22, [sp, #32]
 218:	ldp	x23, x24, [sp, #48]
 21c:	ldp	x25, x26, [sp, #64]
 220:	ldp	x29, x30, [sp], #128
 224:	ret
 228:	ldr	x0, [x23]
 22c:	mov	x1, x21
 230:	mov	w2, #0x2                   	// #2
 234:	bl	0 <grub_efi_open_protocol>
 238:	mov	x22, x0
 23c:	cbz	x0, 2c8 <grub_efiserial_init+0xf0>
 240:	mov	x0, #0xc0                  	// #192
 244:	bl	0 <grub_zalloc>
 248:	mov	x19, x0
 24c:	cbz	x0, 210 <grub_efiserial_init+0x38>
 250:	mov	x0, #0x18                  	// #24
 254:	bl	0 <grub_malloc>
 258:	str	x0, [x19, #16]
 25c:	cbnz	x0, 26c <grub_efiserial_init+0x94>
 260:	mov	x0, x19
 264:	bl	0 <grub_free>
 268:	b	210 <grub_efiserial_init+0x38>
 26c:	ldr	x2, [x25]
 270:	mov	w3, w24
 274:	mov	x1, #0x18                  	// #24
 278:	add	w26, w24, #0x1
 27c:	bl	0 <grub_snprintf>
 280:	str	x22, [x19, #72]
 284:	add	x0, x21, #0x10
 288:	str	x0, [x19, #24]
 28c:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 290:	ldr	x0, [x0]
 294:	ldp	x2, x3, [x0]
 298:	stp	x2, x3, [sp, #96]
 29c:	ldr	x2, [x21, #16]
 2a0:	ldp	x0, x1, [x0, #16]
 2a4:	stp	x0, x1, [sp, #112]
 2a8:	add	x1, sp, #0x60
 2ac:	mov	x0, x19
 2b0:	blr	x2
 2b4:	cbz	w0, 2bc <grub_efiserial_init+0xe4>
 2b8:	bl	0 <grub_print_error>
 2bc:	mov	w24, w26
 2c0:	mov	x0, x19
 2c4:	bl	708 <grub_serial_register>
 2c8:	add	x23, x23, #0x8
 2cc:	ldr	x0, [sp, #88]
 2d0:	sub	x1, x0, #0x1
 2d4:	str	x1, [sp, #88]
 2d8:	cbnz	x0, 228 <grub_efiserial_init+0x50>
 2dc:	mov	x0, x20
 2e0:	b	264 <grub_efiserial_init+0x8c>
 2e4:	mov	x20, x0
 2e8:	mov	x23, x0
 2ec:	mov	w24, #0x0                   	// #0
 2f0:	adrp	x25, 0 <grub_efiserial_init-0x1d8>
 2f4:	b	2cc <grub_efiserial_init+0xf4>
	...
 310:	ldr	x0, [x0, #136]
 314:	ldr	x0, [x0, #88]
 318:	ldr	x2, [x0, #24]
 31c:	ldr	x2, [x2, #16]
 320:	mov	x16, x2
 324:	br	x16
 328:	ldr	x0, [x0, #56]
 32c:	ldr	x0, [x0, #40]
 330:	ldr	x1, [x0, #24]
 334:	ldr	x1, [x1, #8]
 338:	mov	x16, x1
 33c:	br	x16

0000000000000340 <grub_serial_find>:
 340:	stp	x29, x30, [sp, #-32]!
 344:	mov	x29, sp
 348:	stp	x19, x20, [sp, #16]
 34c:	mov	x20, x0
 350:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 354:	ldr	x0, [x0]
 358:	ldr	x19, [x0]
 35c:	cbnz	x19, 370 <grub_serial_find+0x30>
 360:	mov	x0, x19
 364:	ldp	x19, x20, [sp, #16]
 368:	ldp	x29, x30, [sp], #32
 36c:	ret
 370:	ldr	x0, [x19, #16]
 374:	mov	x1, x20
 378:	bl	0 <grub_strcmp>
 37c:	cbz	w0, 360 <grub_serial_find+0x20>
 380:	ldr	x19, [x19]
 384:	b	35c <grub_serial_find+0x1c>
	...
 390:	stp	x29, x30, [sp, #-128]!
 394:	mov	x29, sp
 398:	stp	x19, x20, [sp, #16]
 39c:	ldr	x19, [x0, #8]
 3a0:	stp	x21, x22, [sp, #32]
 3a4:	mov	w21, w1
 3a8:	mov	x22, x2
 3ac:	ldr	w0, [x19]
 3b0:	cbz	w0, 45c <grub_serial_find+0x11c>
 3b4:	ldr	x0, [x19, #8]
 3b8:	mov	w2, #0x0                   	// #0
 3bc:	mov	x1, #0x0                   	// #0
 3c0:	add	x20, sp, #0x58
 3c4:	bl	0 <grub_strtoul>
 3c8:	mov	x3, x0
 3cc:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 3d0:	mov	x1, #0x28                  	// #40
 3d4:	ldr	x2, [x0]
 3d8:	add	x0, sp, #0x58
 3dc:	bl	0 <grub_snprintf>
 3e0:	ldr	w0, [x19, #16]
 3e4:	cbz	w0, 464 <grub_serial_find+0x124>
 3e8:	ldr	x0, [x19, #24]
 3ec:	mov	w2, #0x0                   	// #0
 3f0:	mov	x1, #0x0                   	// #0
 3f4:	bl	0 <grub_strtoul>
 3f8:	mov	x3, x0
 3fc:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 400:	mov	x1, #0x28                  	// #40
 404:	ldr	x2, [x0]
 408:	add	x0, sp, #0x58
 40c:	bl	0 <grub_snprintf>
 410:	cmp	w21, #0x0
 414:	b.le	470 <grub_serial_find+0x130>
 418:	ldr	x20, [x22]
 41c:	cbnz	x20, 428 <grub_serial_find+0xe8>
 420:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 424:	ldr	x20, [x0]
 428:	mov	x0, x20
 42c:	bl	340 <grub_serial_find>
 430:	mov	x21, x0
 434:	cbnz	x0, 478 <grub_serial_find+0x138>
 438:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 43c:	mov	x2, x20
 440:	ldr	x1, [x0]
 444:	mov	w0, #0x12                  	// #18
 448:	bl	0 <grub_error>
 44c:	ldp	x19, x20, [sp, #16]
 450:	ldp	x21, x22, [sp, #32]
 454:	ldp	x29, x30, [sp], #128
 458:	ret
 45c:	mov	x20, #0x0                   	// #0
 460:	b	3e0 <grub_serial_find+0xa0>
 464:	cmp	w21, #0x0
 468:	b.gt	418 <grub_serial_find+0xd8>
 46c:	b	41c <grub_serial_find+0xdc>
 470:	add	x20, sp, #0x58
 474:	b	428 <grub_serial_find+0xe8>
 478:	ldp	x0, x1, [x0, #32]
 47c:	stp	x0, x1, [sp, #56]
 480:	ldp	x0, x1, [x21, #48]
 484:	stp	x0, x1, [sp, #72]
 488:	ldr	w0, [x19, #32]
 48c:	cbz	w0, 4bc <grub_serial_find+0x17c>
 490:	ldr	x0, [x19, #40]
 494:	mov	w2, #0x0                   	// #0
 498:	mov	x1, #0x0                   	// #0
 49c:	bl	0 <grub_strtoul>
 4a0:	str	w0, [sp, #56]
 4a4:	cbnz	w0, 4bc <grub_serial_find+0x17c>
 4a8:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 4ac:	ldr	x1, [x0]
 4b0:	mov	w0, #0x12                  	// #18
 4b4:	bl	0 <grub_error>
 4b8:	b	44c <grub_serial_find+0x10c>
 4bc:	ldr	w0, [x19, #48]
 4c0:	cbz	w0, 4d8 <grub_serial_find+0x198>
 4c4:	ldr	x0, [x19, #56]
 4c8:	mov	w2, #0x0                   	// #0
 4cc:	mov	x1, #0x0                   	// #0
 4d0:	bl	0 <grub_strtoul>
 4d4:	str	w0, [sp, #60]
 4d8:	ldr	w0, [x19, #64]
 4dc:	cbz	w0, 4f8 <grub_serial_find+0x1b8>
 4e0:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 4e4:	ldr	x1, [x0]
 4e8:	ldr	x0, [x19, #72]
 4ec:	bl	0 <grub_strcmp>
 4f0:	cbnz	w0, 5dc <grub_serial_find+0x29c>
 4f4:	str	wzr, [sp, #64]
 4f8:	ldr	w0, [x19, #112]
 4fc:	cbz	w0, 51c <grub_serial_find+0x1dc>
 500:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 504:	ldr	x1, [x0]
 508:	ldr	x0, [x19, #120]
 50c:	bl	0 <grub_strcmp>
 510:	cbnz	w0, 618 <grub_serial_find+0x2d8>
 514:	mov	w0, #0x1                   	// #1
 518:	str	w0, [sp, #80]
 51c:	ldr	w0, [x19, #80]
 520:	cbz	w0, 53c <grub_serial_find+0x1fc>
 524:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 528:	ldr	x1, [x0]
 52c:	ldr	x0, [x19, #88]
 530:	bl	0 <grub_strcmp>
 534:	cbnz	w0, 640 <grub_serial_find+0x300>
 538:	str	wzr, [sp, #68]
 53c:	ldr	w0, [x19, #96]
 540:	cbz	w0, 5b4 <grub_serial_find+0x274>
 544:	ldr	x0, [x19, #104]
 548:	add	x1, sp, #0x30
 54c:	mov	w2, #0x0                   	// #0
 550:	bl	0 <grub_strtoull>
 554:	mov	x1, x0
 558:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 55c:	str	x1, [sp, #72]
 560:	ldr	x0, [x0]
 564:	ldr	w0, [x0]
 568:	cbnz	w0, 44c <grub_serial_find+0x10c>
 56c:	ldr	x2, [sp, #48]
 570:	cbz	x2, 5b4 <grub_serial_find+0x274>
 574:	ldrb	w0, [x2]
 578:	cmp	w0, #0x4d
 57c:	b.ne	590 <grub_serial_find+0x250>  // b.any
 580:	mov	x0, #0x4240                	// #16960
 584:	movk	x0, #0xf, lsl #16
 588:	mul	x1, x1, x0
 58c:	str	x1, [sp, #72]
 590:	ldrb	w0, [x2]
 594:	and	w0, w0, #0xffffffdf
 598:	and	w0, w0, #0xff
 59c:	cmp	w0, #0x4b
 5a0:	b.ne	5b4 <grub_serial_find+0x274>  // b.any
 5a4:	ldr	x0, [sp, #72]
 5a8:	mov	x1, #0x3e8                 	// #1000
 5ac:	mul	x0, x0, x1
 5b0:	str	x0, [sp, #72]
 5b4:	ldr	w0, [sp, #56]
 5b8:	cbnz	w0, 5c4 <grub_serial_find+0x284>
 5bc:	mov	w0, #0x2580                	// #9600
 5c0:	str	w0, [sp, #56]
 5c4:	ldr	x0, [x21, #24]
 5c8:	add	x1, sp, #0x38
 5cc:	ldr	x2, [x0]
 5d0:	mov	x0, x21
 5d4:	blr	x2
 5d8:	b	44c <grub_serial_find+0x10c>
 5dc:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 5e0:	ldr	x1, [x0]
 5e4:	ldr	x0, [x19, #72]
 5e8:	bl	0 <grub_strcmp>
 5ec:	cbnz	w0, 5fc <grub_serial_find+0x2bc>
 5f0:	mov	w0, #0x1                   	// #1
 5f4:	str	w0, [sp, #64]
 5f8:	b	4f8 <grub_serial_find+0x1b8>
 5fc:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 600:	ldr	x1, [x0]
 604:	ldr	x0, [x19, #72]
 608:	bl	0 <grub_strcmp>
 60c:	cbnz	w0, 4a8 <grub_serial_find+0x168>
 610:	mov	w0, #0x2                   	// #2
 614:	b	5f4 <grub_serial_find+0x2b4>
 618:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 61c:	ldr	x1, [x0]
 620:	ldr	x0, [x19, #120]
 624:	bl	0 <grub_strcmp>
 628:	cbnz	w0, 634 <grub_serial_find+0x2f4>
 62c:	str	wzr, [sp, #80]
 630:	b	51c <grub_serial_find+0x1dc>
 634:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 638:	ldr	x1, [x0]
 63c:	b	4b0 <grub_serial_find+0x170>
 640:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 644:	ldr	x1, [x0]
 648:	ldr	x0, [x19, #88]
 64c:	bl	0 <grub_strcmp>
 650:	cbnz	w0, 660 <grub_serial_find+0x320>
 654:	mov	w0, #0x2                   	// #2
 658:	str	w0, [sp, #68]
 65c:	b	53c <grub_serial_find+0x1fc>
 660:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 664:	ldr	x1, [x0]
 668:	ldr	x0, [x19, #88]
 66c:	bl	0 <grub_strcmp>
 670:	cbnz	w0, 67c <grub_serial_find+0x33c>
 674:	mov	w0, #0x1                   	// #1
 678:	b	658 <grub_serial_find+0x318>
 67c:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 680:	ldr	x1, [x0]
 684:	b	4b0 <grub_serial_find+0x170>
	...

0000000000000708 <grub_serial_register>:
 708:	stp	x29, x30, [sp, #-80]!
 70c:	mov	x29, sp
 710:	stp	x19, x20, [sp, #16]
 714:	stp	x21, x22, [sp, #32]
 718:	mov	x21, x0
 71c:	mov	x0, #0x40                  	// #64
 720:	stp	x23, x24, [sp, #48]
 724:	str	x25, [sp, #64]
 728:	bl	0 <grub_malloc>
 72c:	cbnz	x0, 754 <grub_serial_register+0x4c>
 730:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 734:	ldr	x0, [x0]
 738:	ldr	w0, [x0]
 73c:	ldp	x19, x20, [sp, #16]
 740:	ldp	x21, x22, [sp, #32]
 744:	ldp	x23, x24, [sp, #48]
 748:	ldr	x25, [sp, #64]
 74c:	ldp	x29, x30, [sp], #80
 750:	ret
 754:	mov	x19, x0
 758:	mov	x0, #0x30                  	// #48
 75c:	bl	0 <grub_malloc>
 760:	mov	x22, x0
 764:	cbnz	x0, 770 <grub_serial_register+0x68>
 768:	mov	x0, x19
 76c:	b	7cc <grub_serial_register+0xc4>
 770:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 774:	mov	x2, #0x40                  	// #64
 778:	ldr	x25, [x0]
 77c:	mov	x0, x19
 780:	mov	x1, x25
 784:	bl	0 <grub_memmove>
 788:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 78c:	ldr	x1, [x21, #16]
 790:	str	x22, [x19, #56]
 794:	ldr	x0, [x0]
 798:	bl	0 <grub_xasprintf>
 79c:	str	x0, [x19, #16]
 7a0:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 7a4:	mov	x2, #0x30                  	// #48
 7a8:	ldr	x24, [x0]
 7ac:	mov	x0, x22
 7b0:	add	x1, x24, #0x8
 7b4:	bl	0 <grub_memmove>
 7b8:	ldr	x0, [x19, #16]
 7bc:	cbnz	x0, 7d4 <grub_serial_register+0xcc>
 7c0:	mov	x0, x19
 7c4:	bl	0 <grub_free>
 7c8:	mov	x0, x22
 7cc:	bl	0 <grub_free>
 7d0:	b	730 <grub_serial_register+0x28>
 7d4:	mov	x0, #0x90                  	// #144
 7d8:	bl	0 <grub_zalloc>
 7dc:	mov	x20, x0
 7e0:	cbnz	x0, 7f8 <grub_serial_register+0xf0>
 7e4:	mov	x0, x22
 7e8:	bl	0 <grub_free>
 7ec:	ldr	x0, [x19, #16]
 7f0:	bl	0 <grub_free>
 7f4:	b	768 <grub_serial_register+0x60>
 7f8:	mov	x0, #0x60                  	// #96
 7fc:	bl	0 <grub_malloc>
 800:	mov	x23, x0
 804:	cbnz	x0, 820 <grub_serial_register+0x118>
 808:	mov	x0, x22
 80c:	bl	0 <grub_free>
 810:	ldr	x0, [x19, #16]
 814:	bl	0 <grub_free>
 818:	mov	x0, x20
 81c:	b	7f0 <grub_serial_register+0xe8>
 820:	add	x1, x25, #0x40
 824:	mov	x2, #0x90                  	// #144
 828:	mov	x0, x20
 82c:	bl	0 <grub_memmove>
 830:	ldr	x0, [x19, #16]
 834:	str	x0, [x20, #16]
 838:	str	x23, [x20, #136]
 83c:	mov	x2, #0x60                  	// #96
 840:	add	x1, x24, #0x38
 844:	mov	x0, x23
 848:	bl	0 <grub_memmove>
 84c:	mov	x1, x21
 850:	mov	x0, x24
 854:	bl	0 <grub_list_push>
 858:	ldr	x0, [x19, #56]
 85c:	str	x21, [x0, #40]
 860:	ldr	x0, [x20, #136]
 864:	str	x21, [x0, #88]
 868:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 86c:	stp	x20, x19, [x21, #176]
 870:	ldr	x1, [x0]
 874:	mov	x0, x20
 878:	bl	0 <grub_terminfo_output_register>
 87c:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 880:	mov	x21, x0
 884:	ldr	x1, [x0]
 888:	ldr	x1, [x1]
 88c:	cbz	x1, 8cc <grub_serial_register+0x1c4>
 890:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 894:	mov	x1, x19
 898:	ldr	x0, [x0]
 89c:	bl	0 <grub_list_push>
 8a0:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 8a4:	mov	x19, x0
 8a8:	ldr	x1, [x0]
 8ac:	ldr	x1, [x1]
 8b0:	cbz	x1, 8f0 <grub_serial_register+0x1e8>
 8b4:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 8b8:	mov	x1, x20
 8bc:	ldr	x0, [x0]
 8c0:	bl	0 <grub_list_push>
 8c4:	mov	w0, #0x0                   	// #0
 8c8:	b	73c <grub_serial_register+0x34>
 8cc:	ldr	x1, [x19, #24]
 8d0:	cbnz	x1, 8e0 <grub_serial_register+0x1d8>
 8d4:	ldr	x0, [x21]
 8d8:	mov	x1, x19
 8dc:	b	89c <grub_serial_register+0x194>
 8e0:	mov	x0, x19
 8e4:	blr	x1
 8e8:	cbz	w0, 8d4 <grub_serial_register+0x1cc>
 8ec:	b	8a0 <grub_serial_register+0x198>
 8f0:	ldr	x1, [x20, #24]
 8f4:	cbnz	x1, 904 <grub_serial_register+0x1fc>
 8f8:	ldr	x0, [x19]
 8fc:	mov	x1, x20
 900:	b	8c0 <grub_serial_register+0x1b8>
 904:	mov	x0, x20
 908:	blr	x1
 90c:	cbz	w0, 8f8 <grub_serial_register+0x1f0>
 910:	b	8c4 <grub_serial_register+0x1bc>
 914:	nop
	...

0000000000000960 <grub_serial_unregister>:
 960:	stp	x29, x30, [sp, #-32]!
 964:	mov	x29, sp
 968:	ldr	x1, [x0, #24]
 96c:	stp	x19, x20, [sp, #16]
 970:	mov	x19, x0
 974:	ldr	x1, [x1, #24]
 978:	cbz	x1, 980 <grub_serial_unregister+0x20>
 97c:	blr	x1
 980:	ldr	x20, [x19, #184]
 984:	cbz	x20, 998 <grub_serial_unregister+0x38>
 988:	mov	x0, x20
 98c:	bl	0 <grub_list_remove>
 990:	mov	x0, x20
 994:	bl	0 <grub_list_remove>
 998:	ldr	x20, [x19, #176]
 99c:	cbz	x20, 9b0 <grub_serial_unregister+0x50>
 9a0:	mov	x0, x20
 9a4:	bl	0 <grub_list_remove>
 9a8:	mov	x0, x20
 9ac:	bl	0 <grub_list_remove>
 9b0:	mov	x0, x19
 9b4:	ldp	x19, x20, [sp, #16]
 9b8:	ldp	x29, x30, [sp], #32
 9bc:	b	0 <grub_list_remove>

00000000000009c0 <grub_serial_unregister_driver>:
 9c0:	stp	x29, x30, [sp, #-32]!
 9c4:	mov	x29, sp
 9c8:	stp	x19, x20, [sp, #16]
 9cc:	mov	x19, x0
 9d0:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 9d4:	ldr	x0, [x0]
 9d8:	ldr	x0, [x0]
 9dc:	cbnz	x0, 9ec <grub_serial_unregister_driver+0x2c>
 9e0:	ldp	x19, x20, [sp, #16]
 9e4:	ldp	x29, x30, [sp], #32
 9e8:	ret
 9ec:	ldr	x1, [x0, #24]
 9f0:	ldr	x20, [x0]
 9f4:	cmp	x1, x19
 9f8:	b.ne	a00 <grub_serial_unregister_driver+0x40>  // b.any
 9fc:	bl	960 <grub_serial_unregister>
 a00:	mov	x0, x20
 a04:	b	9dc <grub_serial_unregister_driver+0x1c>
	...

0000000000000a10 <grub_mod_init>:
 a10:	stp	x29, x30, [sp, #-32]!
 a14:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 a18:	mov	w2, #0x0                   	// #0
 a1c:	mov	x29, sp
 a20:	stp	x19, x20, [sp, #16]
 a24:	ldr	x20, [x0]
 a28:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 a2c:	ldr	x4, [x0]
 a30:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 a34:	mov	x5, x20
 a38:	ldr	x3, [x0]
 a3c:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 a40:	ldr	x1, [x0]
 a44:	adrp	x0, 0 <grub_efiserial_init-0x1d8>
 a48:	ldr	x0, [x0]
 a4c:	bl	0 <grub_register_extcmd>
 a50:	adrp	x1, 0 <grub_efiserial_init-0x1d8>
 a54:	mov	x2, #0x60                  	// #96
 a58:	ldr	x19, [x1]
 a5c:	add	x1, x20, #0x168
 a60:	str	x0, [x19, #152]
 a64:	add	x0, x19, #0x38
 a68:	bl	0 <grub_memmove>
 a6c:	add	x1, x20, #0x1c8
 a70:	add	x0, x19, #0x8
 a74:	mov	x2, #0x30                  	// #48
 a78:	bl	0 <grub_memmove>
 a7c:	ldp	x19, x20, [sp, #16]
 a80:	ldp	x29, x30, [sp], #32
 a84:	b	1d8 <grub_efiserial_init>
	...

0000000000000ab8 <grub_mod_fini>:
 ab8:	stp	x29, x30, [sp, #-32]!
 abc:	mov	x29, sp
 ac0:	str	x19, [sp, #16]
 ac4:	adrp	x19, 0 <grub_efiserial_init-0x1d8>
 ac8:	ldr	x1, [x19]
 acc:	ldr	x0, [x1]
 ad0:	cbnz	x0, ae4 <grub_mod_fini+0x2c>
 ad4:	ldr	x19, [sp, #16]
 ad8:	ldp	x29, x30, [sp], #32
 adc:	ldr	x0, [x1, #152]
 ae0:	b	0 <grub_unregister_extcmd>
 ae4:	bl	960 <grub_serial_unregister>
 ae8:	b	ac8 <grub_mod_fini+0x10>
 aec:	nop
	...
