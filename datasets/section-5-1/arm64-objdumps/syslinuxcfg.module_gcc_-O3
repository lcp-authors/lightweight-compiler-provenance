
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//syslinuxcfg.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_strcasecmp>:
       0:	ldrb	w2, [x0]
       4:	cbnz	w2, 28 <grub_strcasecmp+0x28>
       8:	b	64 <grub_strcasecmp+0x64>
       c:	csel	w2, w8, w2, cc  // cc = lo, ul, last
      10:	cmp	w6, #0x1a
      14:	csel	w3, w4, w3, cc  // cc = lo, ul, last
      18:	cmp	w3, w2
      1c:	b.ne	84 <grub_strcasecmp+0x84>  // b.any
      20:	ldrb	w2, [x0, #1]!
      24:	cbz	w2, 64 <grub_strcasecmp+0x64>
      28:	ldrb	w3, [x1]
      2c:	sub	w7, w2, #0x41
      30:	add	w8, w2, #0x20
      34:	mov	w5, w2
      38:	add	x1, x1, #0x1
      3c:	sub	w6, w3, #0x41
      40:	add	w4, w3, #0x20
      44:	mov	w9, w3
      48:	cmp	w7, #0x1a
      4c:	cbnz	w3, c <grub_strcasecmp+0xc>
      50:	add	w0, w2, #0x20
      54:	mov	w9, #0x0                   	// #0
      58:	csel	w5, w0, w2, cc  // cc = lo, ul, last
      5c:	sub	w0, w5, w9
      60:	ret
      64:	ldrb	w9, [x1]
      68:	mov	w5, #0x0                   	// #0
      6c:	sub	w6, w9, #0x41
      70:	cmp	w6, #0x1a
      74:	add	w0, w9, #0x20
      78:	csel	w9, w0, w9, cc  // cc = lo, ul, last
      7c:	sub	w0, w5, w9
      80:	ret
      84:	cmp	w7, #0x1a
      88:	csel	w5, w8, w5, cc  // cc = lo, ul, last
      8c:	b	70 <grub_strcasecmp+0x70>

0000000000000090 <cmd_say>:
      90:	stp	x29, x30, [sp, #-48]!
      94:	mov	x29, sp
      98:	stp	x19, x20, [sp, #16]
      9c:	mov	x20, x0
      a0:	str	x21, [sp, #32]
      a4:	mov	x21, x1
      a8:	bl	0 <grub_strlen>
      ac:	add	x0, x0, #0x11
      b0:	bl	0 <grub_malloc>
      b4:	cbz	x0, 118 <cmd_say+0x88>
      b8:	ldr	x1, [x21, #8]
      bc:	str	xzr, [x0, #8]
      c0:	mov	x19, x0
      c4:	cbz	x1, 108 <cmd_say+0x78>
      c8:	ldr	x0, [x1, #104]
      cc:	str	x0, [x19]
      d0:	str	x19, [x1, #104]
      d4:	cbz	x0, dc <cmd_say+0x4c>
      d8:	str	x19, [x0, #8]
      dc:	mov	x0, x20
      e0:	bl	0 <grub_strlen>
      e4:	mov	x1, x20
      e8:	add	x2, x0, #0x1
      ec:	add	x0, x19, #0x10
      f0:	bl	0 <grub_memmove>
      f4:	mov	w0, #0x0                   	// #0
      f8:	ldp	x19, x20, [sp, #16]
      fc:	ldr	x21, [sp, #32]
     100:	ldp	x29, x30, [sp], #48
     104:	ret
     108:	ldr	x0, [x21, #96]
     10c:	str	x0, [x19]
     110:	str	x19, [x21, #96]
     114:	b	d4 <cmd_say+0x44>
     118:	adrp	x0, 0 <grub_strcasecmp>
     11c:	ldp	x19, x20, [sp, #16]
     120:	ldr	x0, [x0]
     124:	ldr	x21, [sp, #32]
     128:	ldr	w0, [x0]
     12c:	ldp	x29, x30, [sp], #48
     130:	ret
     134:	nop
	...

0000000000000140 <cmd_timeout>:
     140:	stp	x29, x30, [sp, #-32]!
     144:	mov	w2, #0x0                   	// #0
     148:	mov	x29, sp
     14c:	str	x19, [sp, #16]
     150:	mov	x19, x1
     154:	mov	x1, #0x0                   	// #0
     158:	bl	0 <grub_strtoul>
     15c:	mov	x1, x0
     160:	mov	w0, #0x0                   	// #0
     164:	str	x1, [x19, #88]
     168:	ldr	x19, [sp, #16]
     16c:	ldp	x29, x30, [sp], #32
     170:	ret
     174:	nop

0000000000000178 <cmd_menubackground>:
     178:	stp	x29, x30, [sp, #-32]!
     17c:	mov	x29, sp
     180:	str	x19, [sp, #16]
     184:	mov	x19, x1
     188:	bl	0 <grub_strdup>
     18c:	mov	x1, x0
     190:	mov	w0, #0x0                   	// #0
     194:	str	x1, [x19, #32]
     198:	ldr	x19, [sp, #16]
     19c:	ldp	x29, x30, [sp], #32
     1a0:	ret
     1a4:	nop

00000000000001a8 <cmd_default>:
     1a8:	stp	x29, x30, [sp, #-32]!
     1ac:	mov	x29, sp
     1b0:	str	x19, [sp, #16]
     1b4:	mov	x19, x1
     1b8:	bl	0 <grub_strdup>
     1bc:	str	x0, [x19, #16]
     1c0:	cbz	x0, 1d4 <cmd_default+0x2c>
     1c4:	mov	w0, #0x0                   	// #0
     1c8:	ldr	x19, [sp, #16]
     1cc:	ldp	x29, x30, [sp], #32
     1d0:	ret
     1d4:	adrp	x0, 0 <grub_strcasecmp>
     1d8:	ldr	x19, [sp, #16]
     1dc:	ldr	x0, [x0]
     1e0:	ldp	x29, x30, [sp], #32
     1e4:	ldr	w0, [x0]
     1e8:	ret
     1ec:	nop
	...

00000000000001f8 <cmd_extlabel>:
     1f8:	stp	x29, x30, [sp, #-48]!
     1fc:	mov	x29, sp
     200:	stp	x19, x20, [sp, #16]
     204:	mov	x20, x1
     208:	ldr	x1, [x1, #8]
     20c:	cbz	x1, 2b4 <cmd_extlabel+0xbc>
     210:	mov	x19, x0
     214:	str	x21, [sp, #32]
     218:	bl	0 <grub_strlen>
     21c:	add	x0, x0, #0x1
     220:	ldr	x21, [x20, #8]
     224:	bl	0 <grub_malloc>
     228:	ldr	x1, [x20, #8]
     22c:	str	x0, [x21, #24]
     230:	ldr	x4, [x1, #24]
     234:	cbz	x4, 2cc <cmd_extlabel+0xd4>
     238:	ldrb	w2, [x19]
     23c:	cbnz	w2, 254 <cmd_extlabel+0x5c>
     240:	b	29c <cmd_extlabel+0xa4>
     244:	strb	w2, [x4], #1
     248:	add	x19, x3, #0x1
     24c:	ldrb	w2, [x3, #1]
     250:	cbz	w2, 29c <cmd_extlabel+0xa4>
     254:	cmp	w2, #0x5e
     258:	mov	x3, x19
     25c:	b.ne	244 <cmd_extlabel+0x4c>  // b.any
     260:	ldrb	w0, [x19, #1]
     264:	sub	w5, w0, #0x41
     268:	add	w1, w0, #0x20
     26c:	and	w1, w1, #0xff
     270:	cmp	w5, #0x1a
     274:	cbz	w0, 244 <cmd_extlabel+0x4c>
     278:	ldr	x2, [x20, #8]
     27c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     280:	add	x3, x19, #0x1
     284:	strb	w0, [x2, #96]
     288:	ldrb	w2, [x19, #1]
     28c:	add	x19, x3, #0x1
     290:	strb	w2, [x4], #1
     294:	ldrb	w2, [x3, #1]
     298:	cbnz	w2, 254 <cmd_extlabel+0x5c>
     29c:	strb	wzr, [x4]
     2a0:	mov	w0, #0x0                   	// #0
     2a4:	ldp	x19, x20, [sp, #16]
     2a8:	ldr	x21, [sp, #32]
     2ac:	ldp	x29, x30, [sp], #48
     2b0:	ret
     2b4:	adrp	x1, 0 <grub_strcasecmp>
     2b8:	mov	w0, #0x12                  	// #18
     2bc:	ldp	x19, x20, [sp, #16]
     2c0:	ldp	x29, x30, [sp], #48
     2c4:	ldr	x1, [x1]
     2c8:	b	0 <grub_error>
     2cc:	adrp	x0, 0 <grub_strcasecmp>
     2d0:	ldp	x19, x20, [sp, #16]
     2d4:	ldr	x0, [x0]
     2d8:	ldr	x21, [sp, #32]
     2dc:	ldr	w0, [x0]
     2e0:	ldp	x29, x30, [sp], #48
     2e4:	ret
	...

00000000000002f8 <label>:
     2f8:	stp	x29, x30, [sp, #-48]!
     2fc:	mov	x29, sp
     300:	stp	x19, x20, [sp, #16]
     304:	mov	x20, x1
     308:	str	x21, [sp, #32]
     30c:	mov	x21, x0
     310:	mov	x0, #0x78                  	// #120
     314:	bl	0 <grub_malloc>
     318:	cbz	x0, 36c <label+0x74>
     31c:	mov	x19, x0
     320:	mov	x2, #0x78                  	// #120
     324:	mov	w1, #0x0                   	// #0
     328:	bl	0 <grub_memset>
     32c:	mov	x0, x21
     330:	bl	0 <grub_strdup>
     334:	str	x0, [x19, #16]
     338:	cbz	x0, 364 <label+0x6c>
     33c:	ldr	x0, [x20, #8]
     340:	stp	x0, xzr, [x19]
     344:	cbz	x0, 34c <label+0x54>
     348:	str	x19, [x0, #8]
     34c:	str	x19, [x20, #8]
     350:	mov	w0, #0x0                   	// #0
     354:	ldp	x19, x20, [sp, #16]
     358:	ldr	x21, [sp, #32]
     35c:	ldp	x29, x30, [sp], #48
     360:	ret
     364:	mov	x0, x19
     368:	bl	0 <grub_free>
     36c:	adrp	x0, 0 <grub_strcasecmp>
     370:	ldp	x19, x20, [sp, #16]
     374:	ldr	x0, [x0]
     378:	ldr	x21, [sp, #32]
     37c:	ldr	w0, [x0]
     380:	ldp	x29, x30, [sp], #48
     384:	ret
	...

0000000000000390 <add_comment>:
     390:	stp	x29, x30, [sp, #-64]!
     394:	mov	x29, sp
     398:	ldr	x3, [x0, #8]
     39c:	stp	x19, x20, [sp, #16]
     3a0:	mov	x19, x1
     3a4:	stp	x21, x22, [sp, #32]
     3a8:	mov	x21, x0
     3ac:	mov	w22, w2
     3b0:	cbz	x3, 450 <add_comment+0xc0>
     3b4:	ldr	x20, [x3, #88]
     3b8:	cbnz	x20, 3c8 <add_comment+0x38>
     3bc:	ldrb	w1, [x1]
     3c0:	mov	w0, #0x0                   	// #0
     3c4:	cbz	w1, 440 <add_comment+0xb0>
     3c8:	stp	x23, x24, [sp, #48]
     3cc:	mov	x0, x19
     3d0:	add	x20, x20, #0x2
     3d4:	ldr	x24, [x3, #80]
     3d8:	bl	0 <grub_strlen>
     3dc:	mov	x1, x0
     3e0:	ldr	x23, [x21, #8]
     3e4:	add	x1, x20, x1
     3e8:	mov	x0, x24
     3ec:	bl	0 <grub_realloc>
     3f0:	ldr	x2, [x21, #8]
     3f4:	str	x0, [x23, #80]
     3f8:	ldr	x1, [x2, #80]
     3fc:	cbz	x1, 4ec <add_comment+0x15c>
     400:	ldr	x0, [x2, #88]
     404:	add	x1, x1, x0
     408:	ldrb	w3, [x19]
     40c:	mov	x4, x1
     410:	strb	w3, [x1], #1
     414:	ldrb	w3, [x19], #1
     418:	cbnz	w3, 408 <add_comment+0x78>
     41c:	ldr	x0, [x21, #8]
     420:	mov	x1, x4
     424:	ldr	x2, [x0, #80]
     428:	sub	x4, x4, x2
     42c:	cbnz	w22, 4cc <add_comment+0x13c>
     430:	str	x4, [x0, #88]
     434:	strb	wzr, [x1]
     438:	mov	w0, #0x0                   	// #0
     43c:	ldp	x23, x24, [sp, #48]
     440:	ldp	x19, x20, [sp, #16]
     444:	ldp	x21, x22, [sp, #32]
     448:	ldp	x29, x30, [sp], #64
     44c:	ret
     450:	ldr	x20, [x0, #80]
     454:	cbnz	x20, 464 <add_comment+0xd4>
     458:	ldrb	w1, [x1]
     45c:	mov	w0, #0x0                   	// #0
     460:	cbz	w1, 440 <add_comment+0xb0>
     464:	stp	x23, x24, [sp, #48]
     468:	mov	x0, x19
     46c:	add	x20, x20, #0x2
     470:	ldr	x23, [x21, #24]
     474:	bl	0 <grub_strlen>
     478:	mov	x1, x0
     47c:	add	x1, x20, x1
     480:	mov	x0, x23
     484:	bl	0 <grub_realloc>
     488:	str	x0, [x21, #24]
     48c:	mov	x1, x0
     490:	cbz	x0, 4ec <add_comment+0x15c>
     494:	ldr	x0, [x21, #80]
     498:	add	x1, x1, x0
     49c:	nop
     4a0:	ldrb	w3, [x19]
     4a4:	mov	x4, x1
     4a8:	strb	w3, [x1], #1
     4ac:	ldrb	w3, [x19], #1
     4b0:	cbnz	w3, 4a0 <add_comment+0x110>
     4b4:	ldr	x0, [x21, #24]
     4b8:	mov	x1, x4
     4bc:	sub	x4, x4, x0
     4c0:	cbnz	w22, 50c <add_comment+0x17c>
     4c4:	str	x4, [x21, #80]
     4c8:	b	434 <add_comment+0xa4>
     4cc:	add	x1, x4, #0x1
     4d0:	str	x1, [x0, #88]
     4d4:	mov	w0, #0xa                   	// #10
     4d8:	strb	w0, [x2, x4]
     4dc:	ldr	x0, [x21, #8]
     4e0:	ldp	x1, x0, [x0, #80]
     4e4:	add	x1, x1, x0
     4e8:	b	434 <add_comment+0xa4>
     4ec:	adrp	x0, 0 <grub_strcasecmp>
     4f0:	ldp	x19, x20, [sp, #16]
     4f4:	ldr	x0, [x0]
     4f8:	ldp	x21, x22, [sp, #32]
     4fc:	ldr	w0, [x0]
     500:	ldp	x23, x24, [sp, #48]
     504:	ldp	x29, x30, [sp], #64
     508:	ret
     50c:	add	x1, x4, #0x1
     510:	str	x1, [x21, #80]
     514:	mov	w1, #0xa                   	// #10
     518:	strb	w1, [x0, x4]
     51c:	ldr	x1, [x21, #24]
     520:	ldr	x0, [x21, #80]
     524:	add	x1, x1, x0
     528:	b	434 <add_comment+0xa4>
     52c:	nop
	...

0000000000000538 <print_escaped>:
     538:	stp	x29, x30, [sp, #-48]!
     53c:	mov	x29, sp
     540:	stp	x19, x20, [sp, #16]
     544:	mov	x19, x0
     548:	mov	x20, x1
     54c:	stp	x21, x22, [sp, #32]
     550:	mov	x21, x2
     554:	cbz	x2, 660 <print_escaped+0x128>
     558:	ldp	x3, x2, [x19]
     55c:	sub	x1, x21, x20
     560:	ldr	x0, [x19, #16]
     564:	lsl	x1, x1, #2
     568:	add	x1, x1, #0x2
     56c:	sub	x3, x3, x2
     570:	cmp	x1, x3
     574:	b.cs	638 <print_escaped+0x100>  // b.hs, b.nlast
     578:	add	x1, x2, #0x1
     57c:	str	x1, [x19, #8]
     580:	mov	w1, #0x27                  	// #39
     584:	strb	w1, [x0, x2]
     588:	mov	w4, #0x5c                  	// #92
     58c:	ldrb	w0, [x20]
     590:	cmp	w0, #0x0
     594:	ccmp	x21, x20, #0x0, ne  // ne = any
     598:	b.hi	5b8 <print_escaped+0x80>  // b.pmore
     59c:	b	610 <print_escaped+0xd8>
     5a0:	ldrb	w0, [x20]
     5a4:	strb	w0, [x2, x1]
     5a8:	ldrb	w0, [x20, #1]!
     5ac:	cmp	w0, #0x0
     5b0:	ccmp	x21, x20, #0x0, ne  // ne = any
     5b4:	b.ls	610 <print_escaped+0xd8>  // b.plast
     5b8:	ldp	x1, x2, [x19, #8]
     5bc:	cmp	w0, #0x27
     5c0:	add	x3, x1, #0x1
     5c4:	str	x3, [x19, #8]
     5c8:	b.ne	5a0 <print_escaped+0x68>  // b.any
     5cc:	strb	w0, [x2, x1]
     5d0:	ldp	x1, x2, [x19, #8]
     5d4:	add	x3, x1, #0x1
     5d8:	str	x3, [x19, #8]
     5dc:	strb	w4, [x2, x1]
     5e0:	ldp	x1, x2, [x19, #8]
     5e4:	add	x3, x1, #0x1
     5e8:	str	x3, [x19, #8]
     5ec:	strb	w0, [x2, x1]
     5f0:	ldp	x1, x2, [x19, #8]
     5f4:	add	x3, x1, #0x1
     5f8:	str	x3, [x19, #8]
     5fc:	strb	w0, [x2, x1]
     600:	ldrb	w0, [x20, #1]!
     604:	cmp	w0, #0x0
     608:	ccmp	x21, x20, #0x0, ne  // ne = any
     60c:	b.hi	5b8 <print_escaped+0x80>  // b.pmore
     610:	ldp	x1, x2, [x19, #8]
     614:	mov	w3, #0x27                  	// #39
     618:	add	x0, x1, #0x1
     61c:	str	x0, [x19, #8]
     620:	mov	w0, #0x0                   	// #0
     624:	strb	w3, [x2, x1]
     628:	ldp	x19, x20, [sp, #16]
     62c:	ldp	x21, x22, [sp, #32]
     630:	ldp	x29, x30, [sp], #48
     634:	ret
     638:	add	x2, x2, #0xa
     63c:	add	x2, x2, x1
     640:	lsl	x22, x2, #1
     644:	mov	x1, x22
     648:	bl	0 <grub_realloc>
     64c:	cbz	x0, 670 <print_escaped+0x138>
     650:	str	x22, [x19]
     654:	str	x0, [x19, #16]
     658:	ldr	x2, [x19, #8]
     65c:	b	578 <print_escaped+0x40>
     660:	mov	x0, x1
     664:	bl	0 <grub_strlen>
     668:	add	x21, x20, x0
     66c:	b	558 <print_escaped+0x20>
     670:	adrp	x0, 0 <grub_strcasecmp>
     674:	ldr	x0, [x0]
     678:	ldr	w0, [x0]
     67c:	cbnz	w0, 628 <print_escaped+0xf0>
     680:	ldp	x2, x0, [x19, #8]
     684:	b	578 <print_escaped+0x40>
	...

0000000000000690 <cmd_menudefault>:
     690:	ldr	x1, [x1, #8]
     694:	cbz	x1, 6a8 <cmd_menudefault+0x18>
     698:	mov	w2, #0x1                   	// #1
     69c:	mov	w0, #0x0                   	// #0
     6a0:	str	w2, [x1, #100]
     6a4:	ret
     6a8:	adrp	x1, 0 <grub_strcasecmp>
     6ac:	mov	w0, #0x12                  	// #18
     6b0:	ldr	x1, [x1]
     6b4:	b	0 <grub_error>
	...

00000000000006c0 <cmd_initrd>:
     6c0:	stp	x29, x30, [sp, #-48]!
     6c4:	mov	x29, sp
     6c8:	stp	x19, x20, [sp, #16]
     6cc:	mov	x20, x0
     6d0:	ldr	x0, [x1, #8]
     6d4:	cbz	x0, 7a0 <cmd_initrd+0xe0>
     6d8:	stp	x21, x22, [sp, #32]
     6dc:	mov	x22, x1
     6e0:	ldrb	w0, [x20]
     6e4:	cbz	w0, 760 <cmd_initrd+0xa0>
     6e8:	cmp	w0, #0x2c
     6ec:	mov	x19, x20
     6f0:	b.eq	708 <cmd_initrd+0x48>  // b.none
     6f4:	nop
     6f8:	ldrb	w2, [x19, #1]!
     6fc:	cmp	w2, #0x2c
     700:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     704:	b.ne	6f8 <cmd_initrd+0x38>  // b.any
     708:	mov	x0, #0x10                  	// #16
     70c:	bl	0 <grub_malloc>
     710:	mov	x21, x0
     714:	cbz	x0, 784 <cmd_initrd+0xc4>
     718:	sub	x1, x19, x20
     71c:	mov	x0, x20
     720:	bl	0 <grub_strndup>
     724:	str	x0, [x21, #8]
     728:	cbz	x0, 77c <cmd_initrd+0xbc>
     72c:	ldr	x1, [x22, #8]
     730:	ldr	x0, [x1, #48]
     734:	str	xzr, [x21]
     738:	cbz	x0, 774 <cmd_initrd+0xb4>
     73c:	str	x21, [x0]
     740:	ldrb	w0, [x19]
     744:	mov	x20, x19
     748:	cmp	w0, #0x2c
     74c:	b.ne	75c <cmd_initrd+0x9c>  // b.any
     750:	ldrb	w0, [x20, #1]!
     754:	cmp	w0, #0x2c
     758:	b.eq	750 <cmd_initrd+0x90>  // b.none
     75c:	cbnz	w0, 6e8 <cmd_initrd+0x28>
     760:	mov	w0, #0x0                   	// #0
     764:	ldp	x19, x20, [sp, #16]
     768:	ldp	x21, x22, [sp, #32]
     76c:	ldp	x29, x30, [sp], #48
     770:	ret
     774:	stp	x21, x21, [x1, #40]
     778:	b	740 <cmd_initrd+0x80>
     77c:	mov	x0, x21
     780:	bl	0 <grub_free>
     784:	adrp	x0, 0 <grub_strcasecmp>
     788:	ldp	x19, x20, [sp, #16]
     78c:	ldr	x0, [x0]
     790:	ldp	x21, x22, [sp, #32]
     794:	ldr	w0, [x0]
     798:	ldp	x29, x30, [sp], #48
     79c:	ret
     7a0:	adrp	x1, 0 <grub_strcasecmp>
     7a4:	mov	w0, #0x12                  	// #18
     7a8:	ldp	x19, x20, [sp, #16]
     7ac:	ldp	x29, x30, [sp], #48
     7b0:	ldr	x1, [x1]
     7b4:	b	0 <grub_error>
	...

00000000000007c8 <cmd_config>:
     7c8:	stp	x29, x30, [sp, #-48]!
     7cc:	mov	x29, sp
     7d0:	stp	x21, x22, [sp, #32]
     7d4:	ldr	x22, [x1, #8]
     7d8:	cbz	x22, 8b8 <cmd_config+0xf0>
     7dc:	stp	x19, x20, [sp, #16]
     7e0:	mov	x21, x0
     7e4:	mov	x20, x1
     7e8:	ldrb	w0, [x0]
     7ec:	mov	x19, x21
     7f0:	mov	x1, #0x0                   	// #0
     7f4:	cbnz	w0, 804 <cmd_config+0x3c>
     7f8:	b	814 <cmd_config+0x4c>
     7fc:	ldrb	w0, [x19, #1]!
     800:	cbz	w0, 8a4 <cmd_config+0xdc>
     804:	bl	0 <grub_isspace>
     808:	cbz	w0, 7fc <cmd_config+0x34>
     80c:	ldr	x22, [x20, #8]
     810:	sub	x1, x19, x21
     814:	mov	x0, x21
     818:	bl	0 <grub_strndup>
     81c:	ldr	x21, [x20, #8]
     820:	str	x0, [x22, #32]
     824:	ldr	x0, [x21, #32]
     828:	cbz	x0, 888 <cmd_config+0xc0>
     82c:	ldrb	w0, [x19]
     830:	cbnz	w0, 840 <cmd_config+0x78>
     834:	b	86c <cmd_config+0xa4>
     838:	ldrb	w0, [x19, #1]!
     83c:	cbz	w0, 8b0 <cmd_config+0xe8>
     840:	bl	0 <grub_isspace>
     844:	cbnz	w0, 838 <cmd_config+0x70>
     848:	ldrb	w0, [x19]
     84c:	ldr	x21, [x20, #8]
     850:	cbz	w0, 86c <cmd_config+0xa4>
     854:	mov	x0, x19
     858:	bl	0 <grub_strdup>
     85c:	str	x0, [x21, #64]
     860:	ldr	x21, [x20, #8]
     864:	ldr	x0, [x21, #64]
     868:	cbz	x0, 888 <cmd_config+0xc0>
     86c:	mov	w1, #0x9                   	// #9
     870:	str	w1, [x21, #112]
     874:	mov	w0, #0x0                   	// #0
     878:	ldp	x19, x20, [sp, #16]
     87c:	ldp	x21, x22, [sp, #32]
     880:	ldp	x29, x30, [sp], #48
     884:	ret
     888:	adrp	x0, 0 <grub_strcasecmp>
     88c:	ldp	x19, x20, [sp, #16]
     890:	ldr	x0, [x0]
     894:	ldp	x21, x22, [sp, #32]
     898:	ldr	w0, [x0]
     89c:	ldp	x29, x30, [sp], #48
     8a0:	ret
     8a4:	sub	x1, x19, x21
     8a8:	ldr	x22, [x20, #8]
     8ac:	b	814 <cmd_config+0x4c>
     8b0:	ldr	x21, [x20, #8]
     8b4:	b	86c <cmd_config+0xa4>
     8b8:	adrp	x1, 0 <grub_strcasecmp>
     8bc:	mov	w0, #0x12                  	// #18
     8c0:	ldp	x21, x22, [sp, #32]
     8c4:	ldp	x29, x30, [sp], #48
     8c8:	ldr	x1, [x1]
     8cc:	b	0 <grub_error>
	...

00000000000008e0 <cmd_append>:
     8e0:	stp	x29, x30, [sp, #-32]!
     8e4:	mov	x29, sp
     8e8:	stp	x19, x20, [sp, #16]
     8ec:	ldr	x20, [x1, #8]
     8f0:	cbz	x20, 91c <cmd_append+0x3c>
     8f4:	mov	x19, x1
     8f8:	bl	0 <grub_strdup>
     8fc:	ldr	x1, [x19, #8]
     900:	str	x0, [x20, #56]
     904:	mov	w0, #0x0                   	// #0
     908:	ldr	x1, [x1, #56]
     90c:	cbz	x1, 934 <cmd_append+0x54>
     910:	ldp	x19, x20, [sp, #16]
     914:	ldp	x29, x30, [sp], #32
     918:	ret
     91c:	adrp	x1, 0 <grub_strcasecmp>
     920:	mov	w0, #0x12                  	// #18
     924:	ldp	x19, x20, [sp, #16]
     928:	ldp	x29, x30, [sp], #32
     92c:	ldr	x1, [x1]
     930:	b	0 <grub_error>
     934:	adrp	x0, 0 <grub_strcasecmp>
     938:	ldp	x19, x20, [sp, #16]
     93c:	ldr	x0, [x0]
     940:	ldp	x29, x30, [sp], #32
     944:	ldr	w0, [x0]
     948:	ret
     94c:	nop
	...

0000000000000960 <cmd_comboot>:
     960:	stp	x29, x30, [sp, #-32]!
     964:	mov	x29, sp
     968:	stp	x19, x20, [sp, #16]
     96c:	ldr	x20, [x1, #8]
     970:	cbz	x20, 9a4 <cmd_comboot+0x44>
     974:	mov	x19, x1
     978:	bl	0 <grub_strdup>
     97c:	ldr	x1, [x19, #8]
     980:	str	x0, [x20, #32]
     984:	ldr	x0, [x1, #32]
     988:	cbz	x0, 9bc <cmd_comboot+0x5c>
     98c:	mov	w2, #0x7                   	// #7
     990:	str	w2, [x1, #112]
     994:	mov	w0, #0x0                   	// #0
     998:	ldp	x19, x20, [sp, #16]
     99c:	ldp	x29, x30, [sp], #32
     9a0:	ret
     9a4:	adrp	x1, 0 <grub_strcasecmp>
     9a8:	mov	w0, #0x12                  	// #18
     9ac:	ldp	x19, x20, [sp, #16]
     9b0:	ldp	x29, x30, [sp], #32
     9b4:	ldr	x1, [x1]
     9b8:	b	0 <grub_error>
     9bc:	adrp	x0, 0 <grub_strcasecmp>
     9c0:	ldp	x19, x20, [sp, #16]
     9c4:	ldr	x0, [x0]
     9c8:	ldp	x29, x30, [sp], #32
     9cc:	ldr	w0, [x0]
     9d0:	ret
     9d4:	nop
	...

00000000000009e8 <cmd_com32>:
     9e8:	stp	x29, x30, [sp, #-32]!
     9ec:	mov	x29, sp
     9f0:	stp	x19, x20, [sp, #16]
     9f4:	ldr	x20, [x1, #8]
     9f8:	cbz	x20, a2c <cmd_com32+0x44>
     9fc:	mov	x19, x1
     a00:	bl	0 <grub_strdup>
     a04:	ldr	x1, [x19, #8]
     a08:	str	x0, [x20, #32]
     a0c:	ldr	x0, [x1, #32]
     a10:	cbz	x0, a44 <cmd_com32+0x5c>
     a14:	mov	w2, #0x6                   	// #6
     a18:	str	w2, [x1, #112]
     a1c:	mov	w0, #0x0                   	// #0
     a20:	ldp	x19, x20, [sp, #16]
     a24:	ldp	x29, x30, [sp], #32
     a28:	ret
     a2c:	adrp	x1, 0 <grub_strcasecmp>
     a30:	mov	w0, #0x12                  	// #18
     a34:	ldp	x19, x20, [sp, #16]
     a38:	ldp	x29, x30, [sp], #32
     a3c:	ldr	x1, [x1]
     a40:	b	0 <grub_error>
     a44:	adrp	x0, 0 <grub_strcasecmp>
     a48:	ldp	x19, x20, [sp, #16]
     a4c:	ldr	x0, [x0]
     a50:	ldp	x29, x30, [sp], #32
     a54:	ldr	w0, [x0]
     a58:	ret
     a5c:	nop
	...

0000000000000a70 <cmd_localboot>:
     a70:	stp	x29, x30, [sp, #-32]!
     a74:	mov	x29, sp
     a78:	stp	x19, x20, [sp, #16]
     a7c:	ldr	x20, [x1, #8]
     a80:	cbz	x20, ab4 <cmd_localboot+0x44>
     a84:	mov	x19, x1
     a88:	bl	0 <grub_strdup>
     a8c:	ldr	x1, [x19, #8]
     a90:	str	x0, [x20, #32]
     a94:	ldr	x0, [x1, #32]
     a98:	cbz	x0, acc <cmd_localboot+0x5c>
     a9c:	mov	w2, #0xa                   	// #10
     aa0:	str	w2, [x1, #112]
     aa4:	mov	w0, #0x0                   	// #0
     aa8:	ldp	x19, x20, [sp, #16]
     aac:	ldp	x29, x30, [sp], #32
     ab0:	ret
     ab4:	adrp	x1, 0 <grub_strcasecmp>
     ab8:	mov	w0, #0x12                  	// #18
     abc:	ldp	x19, x20, [sp, #16]
     ac0:	ldp	x29, x30, [sp], #32
     ac4:	ldr	x1, [x1]
     ac8:	b	0 <grub_error>
     acc:	adrp	x0, 0 <grub_strcasecmp>
     ad0:	ldp	x19, x20, [sp, #16]
     ad4:	ldr	x0, [x0]
     ad8:	ldp	x29, x30, [sp], #32
     adc:	ldr	w0, [x0]
     ae0:	ret
     ae4:	nop
	...

0000000000000af8 <cmd_linux>:
     af8:	stp	x29, x30, [sp, #-32]!
     afc:	mov	x29, sp
     b00:	stp	x19, x20, [sp, #16]
     b04:	ldr	x20, [x1, #8]
     b08:	cbz	x20, b3c <cmd_linux+0x44>
     b0c:	mov	x19, x1
     b10:	bl	0 <grub_strdup>
     b14:	ldr	x1, [x19, #8]
     b18:	str	x0, [x20, #32]
     b1c:	ldr	x0, [x1, #32]
     b20:	cbz	x0, b54 <cmd_linux+0x5c>
     b24:	mov	w2, #0x1                   	// #1
     b28:	str	w2, [x1, #112]
     b2c:	mov	w0, #0x0                   	// #0
     b30:	ldp	x19, x20, [sp, #16]
     b34:	ldp	x29, x30, [sp], #32
     b38:	ret
     b3c:	adrp	x1, 0 <grub_strcasecmp>
     b40:	mov	w0, #0x12                  	// #18
     b44:	ldp	x19, x20, [sp, #16]
     b48:	ldp	x29, x30, [sp], #32
     b4c:	ldr	x1, [x1]
     b50:	b	0 <grub_error>
     b54:	adrp	x0, 0 <grub_strcasecmp>
     b58:	ldp	x19, x20, [sp, #16]
     b5c:	ldr	x0, [x0]
     b60:	ldp	x29, x30, [sp], #32
     b64:	ldr	w0, [x0]
     b68:	ret
     b6c:	nop
	...

0000000000000b80 <cmd_boot>:
     b80:	stp	x29, x30, [sp, #-32]!
     b84:	mov	x29, sp
     b88:	stp	x19, x20, [sp, #16]
     b8c:	ldr	x20, [x1, #8]
     b90:	cbz	x20, bc4 <cmd_boot+0x44>
     b94:	mov	x19, x1
     b98:	bl	0 <grub_strdup>
     b9c:	ldr	x1, [x19, #8]
     ba0:	str	x0, [x20, #32]
     ba4:	ldr	x0, [x1, #32]
     ba8:	cbz	x0, bdc <cmd_boot+0x5c>
     bac:	mov	w2, #0x2                   	// #2
     bb0:	str	w2, [x1, #112]
     bb4:	mov	w0, #0x0                   	// #0
     bb8:	ldp	x19, x20, [sp, #16]
     bbc:	ldp	x29, x30, [sp], #32
     bc0:	ret
     bc4:	adrp	x1, 0 <grub_strcasecmp>
     bc8:	mov	w0, #0x12                  	// #18
     bcc:	ldp	x19, x20, [sp, #16]
     bd0:	ldp	x29, x30, [sp], #32
     bd4:	ldr	x1, [x1]
     bd8:	b	0 <grub_error>
     bdc:	adrp	x0, 0 <grub_strcasecmp>
     be0:	ldp	x19, x20, [sp, #16]
     be4:	ldr	x0, [x0]
     be8:	ldp	x29, x30, [sp], #32
     bec:	ldr	w0, [x0]
     bf0:	ret
     bf4:	nop
	...

0000000000000c08 <cmd_bss>:
     c08:	stp	x29, x30, [sp, #-32]!
     c0c:	mov	x29, sp
     c10:	stp	x19, x20, [sp, #16]
     c14:	ldr	x20, [x1, #8]
     c18:	cbz	x20, c4c <cmd_bss+0x44>
     c1c:	mov	x19, x1
     c20:	bl	0 <grub_strdup>
     c24:	ldr	x1, [x19, #8]
     c28:	str	x0, [x20, #32]
     c2c:	ldr	x0, [x1, #32]
     c30:	cbz	x0, c64 <cmd_bss+0x5c>
     c34:	mov	w2, #0x5                   	// #5
     c38:	str	w2, [x1, #112]
     c3c:	mov	w0, #0x0                   	// #0
     c40:	ldp	x19, x20, [sp, #16]
     c44:	ldp	x29, x30, [sp], #32
     c48:	ret
     c4c:	adrp	x1, 0 <grub_strcasecmp>
     c50:	mov	w0, #0x12                  	// #18
     c54:	ldp	x19, x20, [sp, #16]
     c58:	ldp	x29, x30, [sp], #32
     c5c:	ldr	x1, [x1]
     c60:	b	0 <grub_error>
     c64:	adrp	x0, 0 <grub_strcasecmp>
     c68:	ldp	x19, x20, [sp, #16]
     c6c:	ldr	x0, [x0]
     c70:	ldp	x29, x30, [sp], #32
     c74:	ldr	w0, [x0]
     c78:	ret
     c7c:	nop
	...

0000000000000c90 <cmd_pxe>:
     c90:	stp	x29, x30, [sp, #-32]!
     c94:	mov	x29, sp
     c98:	stp	x19, x20, [sp, #16]
     c9c:	ldr	x20, [x1, #8]
     ca0:	cbz	x20, cd4 <cmd_pxe+0x44>
     ca4:	mov	x19, x1
     ca8:	bl	0 <grub_strdup>
     cac:	ldr	x1, [x19, #8]
     cb0:	str	x0, [x20, #32]
     cb4:	ldr	x0, [x1, #32]
     cb8:	cbz	x0, cec <cmd_pxe+0x5c>
     cbc:	mov	w2, #0x4                   	// #4
     cc0:	str	w2, [x1, #112]
     cc4:	mov	w0, #0x0                   	// #0
     cc8:	ldp	x19, x20, [sp, #16]
     ccc:	ldp	x29, x30, [sp], #32
     cd0:	ret
     cd4:	adrp	x1, 0 <grub_strcasecmp>
     cd8:	mov	w0, #0x12                  	// #18
     cdc:	ldp	x19, x20, [sp, #16]
     ce0:	ldp	x29, x30, [sp], #32
     ce4:	ldr	x1, [x1]
     ce8:	b	0 <grub_error>
     cec:	adrp	x0, 0 <grub_strcasecmp>
     cf0:	ldp	x19, x20, [sp, #16]
     cf4:	ldr	x0, [x0]
     cf8:	ldp	x29, x30, [sp], #32
     cfc:	ldr	w0, [x0]
     d00:	ret
     d04:	nop
	...

0000000000000d18 <cmd_fdimage>:
     d18:	stp	x29, x30, [sp, #-32]!
     d1c:	mov	x29, sp
     d20:	stp	x19, x20, [sp, #16]
     d24:	ldr	x20, [x1, #8]
     d28:	cbz	x20, d5c <cmd_fdimage+0x44>
     d2c:	mov	x19, x1
     d30:	bl	0 <grub_strdup>
     d34:	ldr	x1, [x19, #8]
     d38:	str	x0, [x20, #32]
     d3c:	ldr	x0, [x1, #32]
     d40:	cbz	x0, d74 <cmd_fdimage+0x5c>
     d44:	mov	w2, #0x8                   	// #8
     d48:	str	w2, [x1, #112]
     d4c:	mov	w0, #0x0                   	// #0
     d50:	ldp	x19, x20, [sp, #16]
     d54:	ldp	x29, x30, [sp], #32
     d58:	ret
     d5c:	adrp	x1, 0 <grub_strcasecmp>
     d60:	mov	w0, #0x12                  	// #18
     d64:	ldp	x19, x20, [sp, #16]
     d68:	ldp	x29, x30, [sp], #32
     d6c:	ldr	x1, [x1]
     d70:	b	0 <grub_error>
     d74:	adrp	x0, 0 <grub_strcasecmp>
     d78:	ldp	x19, x20, [sp, #16]
     d7c:	ldr	x0, [x0]
     d80:	ldp	x29, x30, [sp], #32
     d84:	ldr	w0, [x0]
     d88:	ret
     d8c:	nop
	...

0000000000000da0 <print>:
     da0:	stp	x29, x30, [sp, #-48]!
     da4:	mov	x29, sp
     da8:	stp	x19, x20, [sp, #16]
     dac:	mov	x20, x2
     db0:	mov	x19, x0
     db4:	ldp	x2, x3, [x0]
     db8:	stp	x21, x22, [sp, #32]
     dbc:	mov	x22, x1
     dc0:	ldr	x0, [x0, #16]
     dc4:	sub	x2, x2, x3
     dc8:	cmp	x20, x2
     dcc:	b.cs	e00 <print+0x60>  // b.hs, b.nlast
     dd0:	mov	x2, x20
     dd4:	mov	x1, x22
     dd8:	add	x0, x0, x3
     ddc:	bl	0 <grub_memmove>
     de0:	ldr	x2, [x19, #8]
     de4:	mov	w0, #0x0                   	// #0
     de8:	add	x2, x2, x20
     dec:	str	x2, [x19, #8]
     df0:	ldp	x19, x20, [sp, #16]
     df4:	ldp	x21, x22, [sp, #32]
     df8:	ldp	x29, x30, [sp], #48
     dfc:	ret
     e00:	add	x21, x20, #0xa
     e04:	add	x21, x21, x3
     e08:	lsl	x21, x21, #1
     e0c:	mov	x1, x21
     e10:	bl	0 <grub_realloc>
     e14:	cbz	x0, e28 <print+0x88>
     e18:	str	x21, [x19]
     e1c:	str	x0, [x19, #16]
     e20:	ldr	x3, [x19, #8]
     e24:	b	dd0 <print+0x30>
     e28:	adrp	x0, 0 <grub_strcasecmp>
     e2c:	ldr	x0, [x0]
     e30:	ldr	w0, [x0]
     e34:	cbnz	w0, df0 <print+0x50>
     e38:	ldp	x3, x0, [x19, #8]
     e3c:	b	dd0 <print+0x30>
	...

0000000000000e48 <print_escaped.constprop.0>:
     e48:	stp	x29, x30, [sp, #-48]!
     e4c:	mov	x29, sp
     e50:	stp	x19, x20, [sp, #16]
     e54:	mov	x19, x0
     e58:	mov	x20, x1
     e5c:	mov	x0, x1
     e60:	stp	x21, x22, [sp, #32]
     e64:	bl	0 <grub_strlen>
     e68:	lsl	x1, x0, #2
     e6c:	mov	x21, x0
     e70:	ldp	x0, x2, [x19]
     e74:	add	x1, x1, #0x2
     e78:	sub	x0, x0, x2
     e7c:	cmp	x1, x0
     e80:	b.cs	f4c <print_escaped.constprop.0+0x104>  // b.hs, b.nlast
     e84:	ldr	x0, [x19, #16]
     e88:	add	x1, x2, #0x1
     e8c:	str	x1, [x19, #8]
     e90:	mov	w1, #0x27                  	// #39
     e94:	strb	w1, [x0, x2]
     e98:	add	x2, x20, x21
     e9c:	mov	w5, #0x5c                  	// #92
     ea0:	ldrb	w0, [x20]
     ea4:	cmp	w0, #0x0
     ea8:	ccmp	x20, x2, #0x2, ne  // ne = any
     eac:	b.cc	ecc <print_escaped.constprop.0+0x84>  // b.lo, b.ul, b.last
     eb0:	b	f24 <print_escaped.constprop.0+0xdc>
     eb4:	ldrb	w0, [x20]
     eb8:	strb	w0, [x3, x1]
     ebc:	ldrb	w0, [x20, #1]!
     ec0:	cmp	w0, #0x0
     ec4:	ccmp	x2, x20, #0x0, ne  // ne = any
     ec8:	b.ls	f24 <print_escaped.constprop.0+0xdc>  // b.plast
     ecc:	ldp	x1, x3, [x19, #8]
     ed0:	cmp	w0, #0x27
     ed4:	add	x4, x1, #0x1
     ed8:	str	x4, [x19, #8]
     edc:	b.ne	eb4 <print_escaped.constprop.0+0x6c>  // b.any
     ee0:	strb	w0, [x3, x1]
     ee4:	ldp	x1, x3, [x19, #8]
     ee8:	add	x4, x1, #0x1
     eec:	str	x4, [x19, #8]
     ef0:	strb	w5, [x3, x1]
     ef4:	ldp	x1, x3, [x19, #8]
     ef8:	add	x4, x1, #0x1
     efc:	str	x4, [x19, #8]
     f00:	strb	w0, [x3, x1]
     f04:	ldp	x1, x3, [x19, #8]
     f08:	add	x4, x1, #0x1
     f0c:	str	x4, [x19, #8]
     f10:	strb	w0, [x3, x1]
     f14:	ldrb	w0, [x20, #1]!
     f18:	cmp	w0, #0x0
     f1c:	ccmp	x2, x20, #0x0, ne  // ne = any
     f20:	b.hi	ecc <print_escaped.constprop.0+0x84>  // b.pmore
     f24:	ldp	x1, x2, [x19, #8]
     f28:	mov	w3, #0x27                  	// #39
     f2c:	add	x0, x1, #0x1
     f30:	str	x0, [x19, #8]
     f34:	mov	w0, #0x0                   	// #0
     f38:	strb	w3, [x2, x1]
     f3c:	ldp	x19, x20, [sp, #16]
     f40:	ldp	x21, x22, [sp, #32]
     f44:	ldp	x29, x30, [sp], #48
     f48:	ret
     f4c:	add	x2, x2, #0xa
     f50:	ldr	x0, [x19, #16]
     f54:	add	x1, x2, x1
     f58:	lsl	x22, x1, #1
     f5c:	mov	x1, x22
     f60:	bl	0 <grub_realloc>
     f64:	cbz	x0, f78 <print_escaped.constprop.0+0x130>
     f68:	str	x22, [x19]
     f6c:	str	x0, [x19, #16]
     f70:	ldr	x2, [x19, #8]
     f74:	b	e88 <print_escaped.constprop.0+0x40>
     f78:	adrp	x0, 0 <grub_strcasecmp>
     f7c:	ldr	x0, [x0]
     f80:	ldr	w0, [x0]
     f84:	cbnz	w0, f3c <print_escaped.constprop.0+0xf4>
     f88:	ldr	x2, [x19, #8]
     f8c:	b	e84 <print_escaped.constprop.0+0x3c>
	...

0000000000000f98 <syslinux_parse_real>:
     f98:	stp	x29, x30, [sp, #-128]!
     f9c:	mov	w1, #0x33                  	// #51
     fa0:	mov	x29, sp
     fa4:	stp	x27, x28, [sp, #80]
     fa8:	mov	x27, x0
     fac:	ldr	x0, [x0, #72]
     fb0:	stp	x19, x20, [sp, #16]
     fb4:	stp	x23, x24, [sp, #48]
     fb8:	mov	x23, #0x0                   	// #0
     fbc:	stp	x25, x26, [sp, #64]
     fc0:	bl	0 <grub_file_open>
     fc4:	mov	x26, x0
     fc8:	cbz	x0, 15dc <syslinux_parse_real+0x644>
     fcc:	stp	x21, x22, [sp, #32]
     fd0:	mov	x0, x23
     fd4:	bl	0 <grub_free>
     fd8:	mov	x0, x26
     fdc:	bl	0 <grub_file_getline>
     fe0:	mov	x23, x0
     fe4:	cbz	x0, 1638 <syslinux_parse_real+0x6a0>
     fe8:	bl	0 <grub_strlen>
     fec:	add	x0, x23, x0
     ff0:	cmp	x23, x0
     ff4:	b.cc	1008 <syslinux_parse_real+0x70>  // b.lo, b.ul, b.last
     ff8:	b	1018 <syslinux_parse_real+0x80>
     ffc:	sub	x0, x0, #0x1
    1000:	cmp	x23, x0
    1004:	b.eq	12bc <syslinux_parse_real+0x324>  // b.none
    1008:	ldurb	w1, [x0, #-1]
    100c:	cmp	w1, #0xa
    1010:	ccmp	w1, #0xd, #0x4, ne  // ne = any
    1014:	b.eq	ffc <syslinux_parse_real+0x64>  // b.none
    1018:	strb	wzr, [x0]
    101c:	mov	x21, x23
    1020:	ldrb	w0, [x23]
    1024:	cbnz	w0, 1034 <syslinux_parse_real+0x9c>
    1028:	b	127c <syslinux_parse_real+0x2e4>
    102c:	ldrb	w0, [x21, #1]!
    1030:	cbz	w0, 127c <syslinux_parse_real+0x2e4>
    1034:	bl	0 <grub_isspace>
    1038:	mov	w19, w0
    103c:	cbnz	w0, 102c <syslinux_parse_real+0x94>
    1040:	ldrb	w0, [x21]
    1044:	mov	x20, x21
    1048:	cmp	w0, #0x23
    104c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    1050:	b.ne	1064 <syslinux_parse_real+0xcc>  // b.any
    1054:	b	127c <syslinux_parse_real+0x2e4>
    1058:	ldrb	w0, [x20]
    105c:	cbz	w0, 1070 <syslinux_parse_real+0xd8>
    1060:	add	x20, x20, #0x1
    1064:	ldrb	w0, [x20]
    1068:	bl	0 <grub_isspace>
    106c:	cbz	w0, 1058 <syslinux_parse_real+0xc0>
    1070:	mov	x24, x20
    1074:	b	1084 <syslinux_parse_real+0xec>
    1078:	ldrb	w0, [x24]
    107c:	cbz	w0, 1090 <syslinux_parse_real+0xf8>
    1080:	add	x24, x24, #0x1
    1084:	ldrb	w0, [x24]
    1088:	bl	0 <grub_isspace>
    108c:	cbnz	w0, 1078 <syslinux_parse_real+0xe0>
    1090:	mov	x22, x24
    1094:	b	10a4 <syslinux_parse_real+0x10c>
    1098:	ldrb	w0, [x22]
    109c:	cbz	w0, 10b0 <syslinux_parse_real+0x118>
    10a0:	add	x22, x22, #0x1
    10a4:	ldrb	w0, [x22]
    10a8:	bl	0 <grub_isspace>
    10ac:	cbz	w0, 1098 <syslinux_parse_real+0x100>
    10b0:	mov	x25, x22
    10b4:	b	10c4 <syslinux_parse_real+0x12c>
    10b8:	ldrb	w0, [x25]
    10bc:	cbz	w0, 10d0 <syslinux_parse_real+0x138>
    10c0:	add	x25, x25, #0x1
    10c4:	ldrb	w0, [x25]
    10c8:	bl	0 <grub_isspace>
    10cc:	cbnz	w0, 10b8 <syslinux_parse_real+0x120>
    10d0:	sub	x0, x22, x24
    10d4:	sub	x20, x20, x21
    10d8:	sub	x1, x20, #0x1
    10dc:	stp	x0, x1, [sp, #104]
    10e0:	sub	x0, x0, #0x1
    10e4:	str	x0, [sp, #120]
    10e8:	adrp	x0, 0 <grub_strcasecmp>
    10ec:	add	x0, x0, #0x0
    10f0:	mov	w28, #0x0                   	// #0
    10f4:	ldr	x22, [x0]
    10f8:	b	110c <syslinux_parse_real+0x174>
    10fc:	add	w28, w28, #0x1
    1100:	add	x22, x22, #0x18
    1104:	cmp	w28, #0x1a
    1108:	b.eq	1318 <syslinux_parse_real+0x380>  // b.none
    110c:	ldr	x0, [x22]
    1110:	bl	0 <grub_strlen>
    1114:	cmp	x0, x20
    1118:	b.ne	10fc <syslinux_parse_real+0x164>  // b.any
    111c:	cbz	x20, 11a4 <syslinux_parse_real+0x20c>
    1120:	ldr	x4, [x22]
    1124:	ldrb	w1, [x4]
    1128:	cbz	w1, 12c4 <syslinux_parse_real+0x32c>
    112c:	ldr	x0, [sp, #112]
    1130:	mov	x5, x21
    1134:	add	x11, x4, x0
    1138:	b	115c <syslinux_parse_real+0x1c4>
    113c:	cmp	w8, #0x1a
    1140:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    1144:	cmp	w7, #0x1a
    1148:	csel	w0, w3, w0, cc  // cc = lo, ul, last
    114c:	cmp	w0, w2
    1150:	b.ne	1184 <syslinux_parse_real+0x1ec>  // b.any
    1154:	ldrb	w1, [x4, #1]!
    1158:	cbz	w1, 12c8 <syslinux_parse_real+0x330>
    115c:	ldrb	w0, [x5]
    1160:	add	w2, w1, #0x20
    1164:	sub	w8, w1, #0x41
    1168:	cmp	x11, x4
    116c:	sub	w7, w0, #0x41
    1170:	add	w3, w0, #0x20
    1174:	mov	w10, w0
    1178:	add	x5, x5, #0x1
    117c:	cbz	w0, 10fc <syslinux_parse_real+0x164>
    1180:	b.ne	113c <syslinux_parse_real+0x1a4>  // b.any
    1184:	cmp	w8, #0x1a
    1188:	add	w0, w1, #0x20
    118c:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    1190:	cmp	w7, #0x1a
    1194:	add	w0, w10, #0x20
    1198:	csel	w10, w0, w10, cc  // cc = lo, ul, last
    119c:	cmp	w1, w10
    11a0:	b.ne	10fc <syslinux_parse_real+0x164>  // b.any
    11a4:	ldr	x0, [x22, #8]
    11a8:	cbz	x0, 1604 <syslinux_parse_real+0x66c>
    11ac:	bl	0 <grub_strlen>
    11b0:	ldr	x1, [sp, #104]
    11b4:	cmp	x0, x1
    11b8:	b.ne	10fc <syslinux_parse_real+0x164>  // b.any
    11bc:	ldr	x4, [x22, #8]
    11c0:	cbz	x1, 12d8 <syslinux_parse_real+0x340>
    11c4:	ldrb	w1, [x4]
    11c8:	cbz	w1, 15c8 <syslinux_parse_real+0x630>
    11cc:	ldr	x0, [sp, #120]
    11d0:	mov	x5, x24
    11d4:	add	x11, x4, x0
    11d8:	b	11fc <syslinux_parse_real+0x264>
    11dc:	cmp	w8, #0x1a
    11e0:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    11e4:	cmp	w7, #0x1a
    11e8:	csel	w0, w3, w0, cc  // cc = lo, ul, last
    11ec:	cmp	w0, w2
    11f0:	b.ne	1224 <syslinux_parse_real+0x28c>  // b.any
    11f4:	ldrb	w1, [x4, #1]!
    11f8:	cbz	w1, 15cc <syslinux_parse_real+0x634>
    11fc:	ldrb	w0, [x5]
    1200:	add	w2, w1, #0x20
    1204:	sub	w8, w1, #0x41
    1208:	cmp	x4, x11
    120c:	sub	w7, w0, #0x41
    1210:	add	w3, w0, #0x20
    1214:	mov	w10, w0
    1218:	add	x5, x5, #0x1
    121c:	cbz	w0, 10fc <syslinux_parse_real+0x164>
    1220:	b.ne	11dc <syslinux_parse_real+0x244>  // b.any
    1224:	cmp	w8, #0x1a
    1228:	add	w0, w1, #0x20
    122c:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    1230:	cmp	w7, #0x1a
    1234:	add	w0, w10, #0x20
    1238:	csel	w10, w0, w10, cc  // cc = lo, ul, last
    123c:	cmp	w1, w10
    1240:	b.ne	10fc <syslinux_parse_real+0x164>  // b.any
    1244:	ubfiz	x0, x28, #1, #32
    1248:	add	x0, x0, w28, uxtw
    124c:	adrp	x1, 0 <grub_strcasecmp>
    1250:	add	x1, x1, #0x0
    1254:	ldr	x1, [x1]
    1258:	add	x0, x1, x0, lsl #3
    125c:	ldr	x2, [x0, #16]
    1260:	cbz	x2, fd0 <syslinux_parse_real+0x38>
    1264:	mov	x0, x25
    1268:	mov	x1, x27
    126c:	blr	x2
    1270:	mov	w19, w0
    1274:	cbz	w0, fd0 <syslinux_parse_real+0x38>
    1278:	b	1294 <syslinux_parse_real+0x2fc>
    127c:	mov	x1, x21
    1280:	mov	x0, x27
    1284:	mov	w2, #0x1                   	// #1
    1288:	bl	390 <add_comment>
    128c:	mov	w19, w0
    1290:	cbz	w0, fd0 <syslinux_parse_real+0x38>
    1294:	mov	x0, x26
    1298:	bl	0 <grub_file_close>
    129c:	ldp	x21, x22, [sp, #32]
    12a0:	mov	w0, w19
    12a4:	ldp	x19, x20, [sp, #16]
    12a8:	ldp	x23, x24, [sp, #48]
    12ac:	ldp	x25, x26, [sp, #64]
    12b0:	ldp	x27, x28, [sp, #80]
    12b4:	ldp	x29, x30, [sp], #128
    12b8:	ret
    12bc:	mov	x0, x23
    12c0:	b	1018 <syslinux_parse_real+0x80>
    12c4:	mov	x5, x21
    12c8:	ldrb	w10, [x5]
    12cc:	mov	w1, #0x0                   	// #0
    12d0:	sub	w7, w10, #0x41
    12d4:	b	1190 <syslinux_parse_real+0x1f8>
    12d8:	adrp	x1, 0 <grub_strcasecmp>
    12dc:	add	x1, x1, #0x0
    12e0:	ubfiz	x0, x28, #1, #32
    12e4:	cmp	x4, #0x0
    12e8:	add	x0, x0, w28, uxtw
    12ec:	csel	x25, x25, x24, ne  // ne = any
    12f0:	ldr	x1, [x1]
    12f4:	add	x0, x1, x0, lsl #3
    12f8:	ldr	x2, [x0, #16]
    12fc:	cbz	x2, fd0 <syslinux_parse_real+0x38>
    1300:	mov	x0, x25
    1304:	mov	x1, x27
    1308:	blr	x2
    130c:	mov	w19, w0
    1310:	cbz	w0, fd0 <syslinux_parse_real+0x38>
    1314:	b	1294 <syslinux_parse_real+0x2fc>
    1318:	cmp	x20, #0x4
    131c:	b.ne	1578 <syslinux_parse_real+0x5e0>  // b.any
    1320:	ldrb	w0, [x21]
    1324:	cbz	w0, 1578 <syslinux_parse_real+0x5e0>
    1328:	sub	w1, w0, #0x41
    132c:	cmp	w1, #0x19
    1330:	b.ls	15b4 <syslinux_parse_real+0x61c>  // b.plast
    1334:	cmp	w0, #0x74
    1338:	b.ne	1578 <syslinux_parse_real+0x5e0>  // b.any
    133c:	ldrb	w0, [x21, #1]
    1340:	sub	w1, w0, #0x41
    1344:	cmp	w1, #0x19
    1348:	cbz	w0, 1574 <syslinux_parse_real+0x5dc>
    134c:	b.ls	1624 <syslinux_parse_real+0x68c>  // b.plast
    1350:	cmp	w0, #0x65
    1354:	b.ne	17a4 <syslinux_parse_real+0x80c>  // b.any
    1358:	ldrb	w0, [x21, #2]
    135c:	sub	w1, w0, #0x41
    1360:	cmp	w1, #0x19
    1364:	cbz	w0, 1614 <syslinux_parse_real+0x67c>
    1368:	b.ls	1640 <syslinux_parse_real+0x6a8>  // b.plast
    136c:	cmp	w0, #0x78
    1370:	b.ne	17ac <syslinux_parse_real+0x814>  // b.any
    1374:	ldrb	w0, [x21, #3]
    1378:	mov	w1, #0x74                  	// #116
    137c:	sub	w2, w0, #0x41
    1380:	cmp	w2, #0x19
    1384:	b.ls	161c <syslinux_parse_real+0x684>  // b.plast
    1388:	cmp	w0, w1
    138c:	b.ne	1578 <syslinux_parse_real+0x5e0>  // b.any
    1390:	ldr	x0, [sp, #104]
    1394:	cmp	x0, #0x4
    1398:	b.ne	1578 <syslinux_parse_real+0x5e0>  // b.any
    139c:	ldrb	w0, [x24]
    13a0:	cbz	w0, 1578 <syslinux_parse_real+0x5e0>
    13a4:	sub	w1, w0, #0x41
    13a8:	cmp	w1, #0x19
    13ac:	b.ls	1774 <syslinux_parse_real+0x7dc>  // b.plast
    13b0:	cmp	w0, #0x68
    13b4:	b.ne	1578 <syslinux_parse_real+0x5e0>  // b.any
    13b8:	ldrb	w0, [x24, #1]
    13bc:	sub	w1, w0, #0x41
    13c0:	cmp	w1, #0x19
    13c4:	cbz	w0, 17b4 <syslinux_parse_real+0x81c>
    13c8:	b.ls	1650 <syslinux_parse_real+0x6b8>  // b.plast
    13cc:	cmp	w0, #0x65
    13d0:	b.ne	17e0 <syslinux_parse_real+0x848>  // b.any
    13d4:	ldrb	w0, [x24, #2]
    13d8:	sub	w1, w0, #0x41
    13dc:	cmp	w1, #0x19
    13e0:	cbz	w0, 17d0 <syslinux_parse_real+0x838>
    13e4:	b.ls	178c <syslinux_parse_real+0x7f4>  // b.plast
    13e8:	cmp	w0, #0x6c
    13ec:	b.ne	17c4 <syslinux_parse_real+0x82c>  // b.any
    13f0:	ldrb	w19, [x24, #3]
    13f4:	mov	w0, #0x70                  	// #112
    13f8:	sub	w1, w19, #0x41
    13fc:	cmp	w1, #0x19
    1400:	b.ls	1660 <syslinux_parse_real+0x6c8>  // b.plast
    1404:	cmp	w19, w0
    1408:	b.ne	1578 <syslinux_parse_real+0x5e0>  // b.any
    140c:	mov	x0, x25
    1410:	bl	0 <grub_strdup>
    1414:	mov	x22, x0
    1418:	cbz	x0, 1764 <syslinux_parse_real+0x7cc>
    141c:	mov	x0, x25
    1420:	bl	0 <grub_strlen>
    1424:	mov	x21, x0
    1428:	mov	x24, #0x0                   	// #0
    142c:	mov	x20, #0x0                   	// #0
    1430:	mov	x0, x20
    1434:	bl	0 <grub_free>
    1438:	mov	x0, x26
    143c:	bl	0 <grub_file_getline>
    1440:	mov	x20, x0
    1444:	cbz	x0, 1758 <syslinux_parse_real+0x7c0>
    1448:	ldrb	w0, [x0]
    144c:	mov	x19, x20
    1450:	cbnz	w0, 1460 <syslinux_parse_real+0x4c8>
    1454:	b	166c <syslinux_parse_real+0x6d4>
    1458:	ldrb	w0, [x19, #1]!
    145c:	cbz	w0, 166c <syslinux_parse_real+0x6d4>
    1460:	bl	0 <grub_isspace>
    1464:	cbnz	w0, 1458 <syslinux_parse_real+0x4c0>
    1468:	ldrb	w0, [x19]
    146c:	cbz	w0, 166c <syslinux_parse_real+0x6d4>
    1470:	sub	w1, w0, #0x41
    1474:	cmp	w1, #0x19
    1478:	b.ls	16e8 <syslinux_parse_real+0x750>  // b.plast
    147c:	cmp	w0, #0x65
    1480:	b.ne	166c <syslinux_parse_real+0x6d4>  // b.any
    1484:	ldrb	w0, [x19, #1]
    1488:	cbz	w0, 166c <syslinux_parse_real+0x6d4>
    148c:	sub	w1, w0, #0x41
    1490:	cmp	w1, #0x19
    1494:	b.ls	16fc <syslinux_parse_real+0x764>  // b.plast
    1498:	cmp	w0, #0x6e
    149c:	b.ne	166c <syslinux_parse_real+0x6d4>  // b.any
    14a0:	ldrb	w0, [x19, #2]
    14a4:	cbz	w0, 166c <syslinux_parse_real+0x6d4>
    14a8:	sub	w1, w0, #0x41
    14ac:	cmp	w1, #0x19
    14b0:	b.ls	1710 <syslinux_parse_real+0x778>  // b.plast
    14b4:	cmp	w0, #0x64
    14b8:	b.ne	166c <syslinux_parse_real+0x6d4>  // b.any
    14bc:	ldrb	w0, [x19, #3]
    14c0:	cbz	w0, 166c <syslinux_parse_real+0x6d4>
    14c4:	sub	w1, w0, #0x41
    14c8:	cmp	w1, #0x19
    14cc:	b.ls	1724 <syslinux_parse_real+0x78c>  // b.plast
    14d0:	cmp	w0, #0x74
    14d4:	b.ne	166c <syslinux_parse_real+0x6d4>  // b.any
    14d8:	ldrb	w0, [x19, #4]
    14dc:	cbz	w0, 166c <syslinux_parse_real+0x6d4>
    14e0:	sub	w1, w0, #0x41
    14e4:	cmp	w1, #0x19
    14e8:	b.ls	1738 <syslinux_parse_real+0x7a0>  // b.plast
    14ec:	cmp	w0, #0x65
    14f0:	b.ne	166c <syslinux_parse_real+0x6d4>  // b.any
    14f4:	ldrb	w0, [x19, #5]
    14f8:	cbz	w0, 166c <syslinux_parse_real+0x6d4>
    14fc:	sub	w1, w0, #0x41
    1500:	cmp	w1, #0x19
    1504:	b.ls	1744 <syslinux_parse_real+0x7ac>  // b.plast
    1508:	cmp	w0, #0x78
    150c:	b.ne	166c <syslinux_parse_real+0x6d4>  // b.any
    1510:	ldrb	w0, [x19, #6]
    1514:	mov	w1, #0x74                  	// #116
    1518:	sub	w2, w0, #0x41
    151c:	cmp	w2, #0x1a
    1520:	add	w2, w0, #0x20
    1524:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    1528:	cmp	w0, w1
    152c:	b.ne	166c <syslinux_parse_real+0x6d4>  // b.any
    1530:	ldrb	w0, [x19, #7]
    1534:	add	x19, x19, #0x7
    1538:	cbz	w0, 1560 <syslinux_parse_real+0x5c8>
    153c:	nop
    1540:	bl	0 <grub_isspace>
    1544:	cbnz	w0, 1558 <syslinux_parse_real+0x5c0>
    1548:	ldrb	w0, [x19]
    154c:	cmp	w0, #0xa
    1550:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    1554:	b.ne	1668 <syslinux_parse_real+0x6d0>  // b.any
    1558:	ldrb	w0, [x19, #1]!
    155c:	cbnz	w0, 1540 <syslinux_parse_real+0x5a8>
    1560:	ldr	x1, [x27, #8]
    1564:	mov	x0, x20
    1568:	str	x22, [x1, #72]
    156c:	bl	0 <grub_free>
    1570:	b	fd0 <syslinux_parse_real+0x38>
    1574:	b.ls	162c <syslinux_parse_real+0x694>  // b.plast
    1578:	adrp	x1, 0 <grub_strcasecmp>
    157c:	mov	x0, x27
    1580:	mov	w2, #0x0                   	// #0
    1584:	ldr	x1, [x1]
    1588:	bl	390 <add_comment>
    158c:	mov	x1, x21
    1590:	mov	x0, x27
    1594:	mov	w2, #0x0                   	// #0
    1598:	bl	390 <add_comment>
    159c:	adrp	x1, 0 <grub_strcasecmp>
    15a0:	mov	x0, x27
    15a4:	mov	w2, #0x1                   	// #1
    15a8:	ldr	x1, [x1]
    15ac:	bl	390 <add_comment>
    15b0:	b	fd0 <syslinux_parse_real+0x38>
    15b4:	cmp	w0, #0x54
    15b8:	b.eq	133c <syslinux_parse_real+0x3a4>  // b.none
    15bc:	add	w0, w0, #0x20
    15c0:	mov	w1, #0x74                  	// #116
    15c4:	b	1388 <syslinux_parse_real+0x3f0>
    15c8:	mov	x5, x24
    15cc:	ldrb	w10, [x5]
    15d0:	mov	w1, #0x0                   	// #0
    15d4:	sub	w7, w10, #0x41
    15d8:	b	1230 <syslinux_parse_real+0x298>
    15dc:	adrp	x0, 0 <grub_strcasecmp>
    15e0:	ldp	x23, x24, [sp, #48]
    15e4:	ldr	x0, [x0]
    15e8:	ldp	x25, x26, [sp, #64]
    15ec:	ldr	w19, [x0]
    15f0:	ldp	x27, x28, [sp, #80]
    15f4:	mov	w0, w19
    15f8:	ldp	x19, x20, [sp, #16]
    15fc:	ldp	x29, x30, [sp], #128
    1600:	ret
    1604:	ubfiz	x0, x28, #1, #32
    1608:	mov	x25, x24
    160c:	add	x0, x0, w28, uxtw
    1610:	b	124c <syslinux_parse_real+0x2b4>
    1614:	b.hi	1578 <syslinux_parse_real+0x5e0>  // b.pmore
    1618:	mov	w1, #0x78                  	// #120
    161c:	add	w0, w0, #0x20
    1620:	b	1388 <syslinux_parse_real+0x3f0>
    1624:	cmp	w0, #0x45
    1628:	b.eq	1358 <syslinux_parse_real+0x3c0>  // b.none
    162c:	add	w0, w0, #0x20
    1630:	mov	w1, #0x65                  	// #101
    1634:	b	1388 <syslinux_parse_real+0x3f0>
    1638:	mov	w19, #0x0                   	// #0
    163c:	b	1294 <syslinux_parse_real+0x2fc>
    1640:	cmp	w0, #0x58
    1644:	b.eq	1374 <syslinux_parse_real+0x3dc>  // b.none
    1648:	mov	w1, #0x78                  	// #120
    164c:	b	161c <syslinux_parse_real+0x684>
    1650:	cmp	w0, #0x45
    1654:	b.eq	13d4 <syslinux_parse_real+0x43c>  // b.none
    1658:	mov	w19, w0
    165c:	mov	w0, #0x65                  	// #101
    1660:	add	w19, w19, #0x20
    1664:	b	1404 <syslinux_parse_real+0x46c>
    1668:	cbz	w0, 1560 <syslinux_parse_real+0x5c8>
    166c:	mov	x0, x20
    1670:	bl	0 <grub_strlen>
    1674:	add	x1, x21, #0x1
    1678:	add	x0, x1, x0
    167c:	cmp	x0, x24
    1680:	b.hi	16ac <syslinux_parse_real+0x714>  // b.pmore
    1684:	add	x4, x22, x21
    1688:	mov	x2, x20
    168c:	mov	x1, x4
    1690:	ldrb	w0, [x2], #1
    1694:	mov	x3, x1
    1698:	strb	w0, [x1], #1
    169c:	cbnz	w0, 1690 <syslinux_parse_real+0x6f8>
    16a0:	sub	x3, x3, x4
    16a4:	add	x21, x21, x3
    16a8:	b	1430 <syslinux_parse_real+0x498>
    16ac:	lsl	x24, x0, #1
    16b0:	mov	x0, x22
    16b4:	mov	x1, x24
    16b8:	bl	0 <grub_realloc>
    16bc:	mov	x22, x0
    16c0:	cbnz	x0, 1684 <syslinux_parse_real+0x6ec>
    16c4:	mov	x0, x20
    16c8:	bl	0 <grub_free>
    16cc:	adrp	x0, 0 <grub_strcasecmp>
    16d0:	ldr	x0, [x0]
    16d4:	ldr	w0, [x0]
    16d8:	cbz	w0, fd0 <syslinux_parse_real+0x38>
    16dc:	mov	w19, #0x1                   	// #1
    16e0:	ldp	x21, x22, [sp, #32]
    16e4:	b	12a0 <syslinux_parse_real+0x308>
    16e8:	cmp	w0, #0x45
    16ec:	b.eq	1484 <syslinux_parse_real+0x4ec>  // b.none
    16f0:	add	w0, w0, #0x20
    16f4:	mov	w1, #0x65                  	// #101
    16f8:	b	1528 <syslinux_parse_real+0x590>
    16fc:	cmp	w0, #0x4e
    1700:	b.eq	14a0 <syslinux_parse_real+0x508>  // b.none
    1704:	add	w0, w0, #0x20
    1708:	mov	w1, #0x6e                  	// #110
    170c:	b	1528 <syslinux_parse_real+0x590>
    1710:	cmp	w0, #0x44
    1714:	b.eq	14bc <syslinux_parse_real+0x524>  // b.none
    1718:	add	w0, w0, #0x20
    171c:	mov	w1, #0x64                  	// #100
    1720:	b	1528 <syslinux_parse_real+0x590>
    1724:	cmp	w0, #0x54
    1728:	b.eq	14d8 <syslinux_parse_real+0x540>  // b.none
    172c:	add	w0, w0, #0x20
    1730:	mov	w1, #0x74                  	// #116
    1734:	b	1528 <syslinux_parse_real+0x590>
    1738:	cmp	w0, #0x45
    173c:	b.eq	14f4 <syslinux_parse_real+0x55c>  // b.none
    1740:	b	16f0 <syslinux_parse_real+0x758>
    1744:	cmp	w0, #0x58
    1748:	b.eq	1510 <syslinux_parse_real+0x578>  // b.none
    174c:	add	w0, w0, #0x20
    1750:	mov	w1, #0x78                  	// #120
    1754:	b	1528 <syslinux_parse_real+0x590>
    1758:	bl	0 <grub_free>
    175c:	mov	x0, x22
    1760:	bl	0 <grub_free>
    1764:	adrp	x0, 0 <grub_strcasecmp>
    1768:	ldr	x0, [x0]
    176c:	ldr	w0, [x0]
    1770:	b	16d8 <syslinux_parse_real+0x740>
    1774:	cmp	w0, #0x48
    1778:	b.eq	13b8 <syslinux_parse_real+0x420>  // b.none
    177c:	mov	w19, w0
    1780:	mov	w0, #0x68                  	// #104
    1784:	add	w19, w19, #0x20
    1788:	b	1404 <syslinux_parse_real+0x46c>
    178c:	cmp	w0, #0x4c
    1790:	b.eq	13f0 <syslinux_parse_real+0x458>  // b.none
    1794:	mov	w19, w0
    1798:	mov	w0, #0x6c                  	// #108
    179c:	add	w19, w19, #0x20
    17a0:	b	1404 <syslinux_parse_real+0x46c>
    17a4:	mov	w1, #0x65                  	// #101
    17a8:	b	1388 <syslinux_parse_real+0x3f0>
    17ac:	mov	w1, #0x78                  	// #120
    17b0:	b	1388 <syslinux_parse_real+0x3f0>
    17b4:	b.hi	1578 <syslinux_parse_real+0x5e0>  // b.pmore
    17b8:	add	w19, w19, #0x20
    17bc:	mov	w0, #0x65                  	// #101
    17c0:	b	1404 <syslinux_parse_real+0x46c>
    17c4:	mov	w19, w0
    17c8:	mov	w0, #0x6c                  	// #108
    17cc:	b	1404 <syslinux_parse_real+0x46c>
    17d0:	b.hi	1578 <syslinux_parse_real+0x5e0>  // b.pmore
    17d4:	add	w19, w19, #0x20
    17d8:	mov	w0, #0x6c                  	// #108
    17dc:	b	1404 <syslinux_parse_real+0x46c>
    17e0:	mov	w19, w0
    17e4:	mov	w0, #0x65                  	// #101
    17e8:	b	1404 <syslinux_parse_real+0x46c>
    17ec:	nop
	...

0000000000001810 <syslinux_parse>:
    1810:	stp	x29, x30, [sp, #-48]!
    1814:	mov	x2, x0
    1818:	mov	x29, sp
    181c:	stp	x19, x20, [sp, #16]
    1820:	mov	x19, x1
    1824:	stp	x21, x22, [sp, #32]
    1828:	ldrb	w0, [x0]
    182c:	ldr	x1, [x1, #40]
    1830:	cmp	w0, #0x2f
    1834:	ldr	x22, [x19, #72]
    1838:	b.eq	1840 <syslinux_parse+0x30>  // b.none
    183c:	ldr	x1, [x19, #56]
    1840:	adrp	x0, 0 <grub_strcasecmp>
    1844:	ldr	x0, [x0]
    1848:	bl	0 <grub_xasprintf>
    184c:	mov	x20, x0
    1850:	cbz	x0, 18dc <syslinux_parse+0xcc>
    1854:	str	x20, [x19, #72]
    1858:	mov	x0, x19
    185c:	bl	f98 <syslinux_parse_real>
    1860:	mov	w21, w0
    1864:	and	w0, w0, #0xfffffffd
    1868:	cmp	w0, #0x5
    186c:	b.eq	1890 <syslinux_parse+0x80>  // b.none
    1870:	mov	x0, x20
    1874:	bl	0 <grub_free>
    1878:	str	x22, [x19, #72]
    187c:	mov	w0, w21
    1880:	ldp	x19, x20, [sp, #16]
    1884:	ldp	x21, x22, [sp, #32]
    1888:	ldp	x29, x30, [sp], #48
    188c:	ret
    1890:	adrp	x3, 0 <grub_strcasecmp>
    1894:	adrp	x1, 0 <grub_strcasecmp>
    1898:	mov	x0, x19
    189c:	mov	w2, #0x0                   	// #0
    18a0:	ldr	x3, [x3]
    18a4:	mov	w21, #0x0                   	// #0
    18a8:	ldr	x1, [x1]
    18ac:	str	wzr, [x3]
    18b0:	bl	390 <add_comment>
    18b4:	mov	x1, x20
    18b8:	mov	x0, x19
    18bc:	mov	w2, #0x0                   	// #0
    18c0:	bl	390 <add_comment>
    18c4:	adrp	x1, 0 <grub_strcasecmp>
    18c8:	mov	x0, x19
    18cc:	mov	w2, #0x1                   	// #1
    18d0:	ldr	x1, [x1]
    18d4:	bl	390 <add_comment>
    18d8:	b	1870 <syslinux_parse+0x60>
    18dc:	adrp	x0, 0 <grub_strcasecmp>
    18e0:	ldp	x19, x20, [sp, #16]
    18e4:	ldr	x0, [x0]
    18e8:	ldr	w21, [x0]
    18ec:	mov	w0, w21
    18f0:	ldp	x21, x22, [sp, #32]
    18f4:	ldp	x29, x30, [sp], #48
    18f8:	ret
    18fc:	nop
	...

0000000000001920 <print_num>:
    1920:	stp	x29, x30, [sp, #-80]!
    1924:	adrp	x2, 0 <grub_strcasecmp>
    1928:	mov	w3, w1
    192c:	mov	x29, sp
    1930:	ldr	x2, [x2]
    1934:	mov	x1, #0x14                  	// #20
    1938:	stp	x19, x20, [sp, #16]
    193c:	mov	x19, x0
    1940:	add	x0, sp, #0x38
    1944:	bl	0 <grub_snprintf>
    1948:	add	x0, sp, #0x38
    194c:	bl	0 <grub_strlen>
    1950:	ldp	x1, x2, [x19]
    1954:	mov	x20, x0
    1958:	sub	x1, x1, x2
    195c:	cmp	x0, x1
    1960:	b.cs	1994 <print_num+0x74>  // b.hs, b.nlast
    1964:	ldr	x0, [x19, #16]
    1968:	add	x0, x0, x2
    196c:	add	x1, sp, #0x38
    1970:	mov	x2, x20
    1974:	bl	0 <grub_memmove>
    1978:	ldr	x2, [x19, #8]
    197c:	mov	w0, #0x0                   	// #0
    1980:	add	x2, x2, x20
    1984:	str	x2, [x19, #8]
    1988:	ldp	x19, x20, [sp, #16]
    198c:	ldp	x29, x30, [sp], #80
    1990:	ret
    1994:	add	x1, x2, #0xa
    1998:	add	x1, x1, x0
    199c:	ldr	x0, [x19, #16]
    19a0:	str	x21, [sp, #32]
    19a4:	lsl	x21, x1, #1
    19a8:	mov	x1, x21
    19ac:	bl	0 <grub_realloc>
    19b0:	cbz	x0, 19c8 <print_num+0xa8>
    19b4:	str	x21, [x19]
    19b8:	str	x0, [x19, #16]
    19bc:	ldr	x2, [x19, #8]
    19c0:	ldr	x21, [sp, #32]
    19c4:	b	1968 <print_num+0x48>
    19c8:	adrp	x0, 0 <grub_strcasecmp>
    19cc:	ldr	x0, [x0]
    19d0:	ldr	w0, [x0]
    19d4:	cbz	w0, 19e0 <print_num+0xc0>
    19d8:	ldr	x21, [sp, #32]
    19dc:	b	1988 <print_num+0x68>
    19e0:	ldp	x2, x0, [x19, #8]
    19e4:	ldr	x21, [sp, #32]
    19e8:	b	1968 <print_num+0x48>
    19ec:	nop
	...

0000000000001a00 <kernel>:
    1a00:	stp	x29, x30, [sp, #-48]!
    1a04:	mov	x29, sp
    1a08:	stp	x21, x22, [sp, #32]
    1a0c:	mov	x21, x1
    1a10:	stp	x19, x20, [sp, #16]
    1a14:	mov	x19, x0
    1a18:	bl	0 <grub_strlen>
    1a1c:	ldr	x22, [x21, #8]
    1a20:	cbz	x22, 1cd4 <kernel+0x2d4>
    1a24:	mov	x20, x0
    1a28:	mov	x0, x19
    1a2c:	bl	0 <grub_strdup>
    1a30:	str	x0, [x22, #32]
    1a34:	ldr	x0, [x21, #8]
    1a38:	ldr	x1, [x0, #32]
    1a3c:	cbz	x1, 1cf0 <kernel+0x2f0>
    1a40:	mov	w1, #0x1                   	// #1
    1a44:	str	w1, [x0, #112]
    1a48:	add	x19, x19, x20
    1a4c:	cmp	x20, #0x1
    1a50:	b.gt	1a68 <kernel+0x68>
    1a54:	mov	w0, #0x0                   	// #0
    1a58:	ldp	x19, x20, [sp, #16]
    1a5c:	ldp	x21, x22, [sp, #32]
    1a60:	ldp	x29, x30, [sp], #48
    1a64:	ret
    1a68:	adrp	x1, 0 <grub_strcasecmp>
    1a6c:	sub	x0, x19, #0x2
    1a70:	ldr	x1, [x1]
    1a74:	bl	0 <grub_strcmp>
    1a78:	cbz	w0, 1cc4 <kernel+0x2c4>
    1a7c:	cmp	x20, #0x3
    1a80:	b.le	1ed8 <kernel+0x4d8>
    1a84:	ldurb	w3, [x19, #-4]
    1a88:	sub	x5, x19, #0x4
    1a8c:	cbz	w3, 1ad8 <kernel+0xd8>
    1a90:	adrp	x0, 0 <grub_strcasecmp>
    1a94:	mov	w2, #0x2e                  	// #46
    1a98:	ldr	x4, [x0]
    1a9c:	nop
    1aa0:	sub	w6, w3, #0x41
    1aa4:	cmp	w6, #0x1a
    1aa8:	sub	w8, w2, #0x41
    1aac:	add	w1, w3, #0x20
    1ab0:	add	w0, w2, #0x20
    1ab4:	csel	w7, w1, w3, cc  // cc = lo, ul, last
    1ab8:	cmp	w8, #0x1a
    1abc:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1ac0:	cmp	w2, w7
    1ac4:	b.ne	1d7c <kernel+0x37c>  // b.any
    1ac8:	ldrb	w3, [x5, #1]!
    1acc:	ldrb	w2, [x4, #1]!
    1ad0:	cbz	w3, 1d88 <kernel+0x388>
    1ad4:	cbnz	w2, 1aa0 <kernel+0xa0>
    1ad8:	ldurb	w3, [x19, #-3]
    1adc:	sub	x5, x19, #0x3
    1ae0:	cbz	w3, 1b28 <kernel+0x128>
    1ae4:	adrp	x0, 0 <grub_strcasecmp>
    1ae8:	mov	w2, #0x2e                  	// #46
    1aec:	ldr	x4, [x0]
    1af0:	sub	w6, w3, #0x41
    1af4:	cmp	w6, #0x1a
    1af8:	sub	w8, w2, #0x41
    1afc:	add	w1, w3, #0x20
    1b00:	add	w0, w2, #0x20
    1b04:	csel	w7, w1, w3, cc  // cc = lo, ul, last
    1b08:	cmp	w8, #0x1a
    1b0c:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1b10:	cmp	w2, w7
    1b14:	b.ne	1d48 <kernel+0x348>  // b.any
    1b18:	ldrb	w3, [x5, #1]!
    1b1c:	ldrb	w2, [x4, #1]!
    1b20:	cbz	w3, 1d54 <kernel+0x354>
    1b24:	cbnz	w2, 1af0 <kernel+0xf0>
    1b28:	cmp	x20, #0x3
    1b2c:	b.le	1a54 <kernel+0x54>
    1b30:	ldurb	w2, [x19, #-4]
    1b34:	sub	x4, x19, #0x4
    1b38:	cbz	w2, 1a54 <kernel+0x54>
    1b3c:	adrp	x1, 0 <grub_strcasecmp>
    1b40:	mov	w0, w2
    1b44:	mov	x7, x4
    1b48:	mov	w3, #0x2e                  	// #46
    1b4c:	ldr	x6, [x1]
    1b50:	sub	w8, w0, #0x41
    1b54:	cmp	w8, #0x1a
    1b58:	sub	w10, w3, #0x41
    1b5c:	add	w5, w0, #0x20
    1b60:	add	w1, w3, #0x20
    1b64:	csel	w9, w5, w0, cc  // cc = lo, ul, last
    1b68:	cmp	w10, #0x1a
    1b6c:	csel	w3, w1, w3, cc  // cc = lo, ul, last
    1b70:	cmp	w3, w9
    1b74:	b.ne	1d0c <kernel+0x30c>  // b.any
    1b78:	ldrb	w0, [x7, #1]!
    1b7c:	ldrb	w1, [x6, #1]!
    1b80:	mov	w3, w1
    1b84:	cbz	w0, 1d18 <kernel+0x318>
    1b88:	cbnz	w1, 1b50 <kernel+0x150>
    1b8c:	adrp	x1, 0 <grub_strcasecmp>
    1b90:	mov	w3, w2
    1b94:	mov	x7, x4
    1b98:	mov	w0, #0x2e                  	// #46
    1b9c:	ldr	x6, [x1]
    1ba0:	sub	w8, w3, #0x41
    1ba4:	cmp	w8, #0x1a
    1ba8:	sub	w10, w0, #0x41
    1bac:	add	w5, w3, #0x20
    1bb0:	add	w1, w0, #0x20
    1bb4:	csel	w9, w5, w3, cc  // cc = lo, ul, last
    1bb8:	cmp	w10, #0x1a
    1bbc:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1bc0:	cmp	w0, w9
    1bc4:	b.ne	1e6c <kernel+0x46c>  // b.any
    1bc8:	ldrb	w3, [x7, #1]!
    1bcc:	ldrb	w0, [x6, #1]!
    1bd0:	cbz	w3, 1ec0 <kernel+0x4c0>
    1bd4:	cbnz	w0, 1ba0 <kernel+0x1a0>
    1bd8:	adrp	x1, 0 <grub_strcasecmp>
    1bdc:	mov	x7, x4
    1be0:	mov	w3, w2
    1be4:	mov	w0, #0x2e                  	// #46
    1be8:	ldr	x6, [x1]
    1bec:	nop
    1bf0:	sub	w8, w3, #0x41
    1bf4:	cmp	w8, #0x1a
    1bf8:	sub	w10, w0, #0x41
    1bfc:	add	w5, w3, #0x20
    1c00:	add	w1, w0, #0x20
    1c04:	csel	w9, w5, w3, cc  // cc = lo, ul, last
    1c08:	cmp	w10, #0x1a
    1c0c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1c10:	cmp	w0, w9
    1c14:	b.ne	1dec <kernel+0x3ec>  // b.any
    1c18:	ldrb	w3, [x7, #1]!
    1c1c:	ldrb	w0, [x6, #1]!
    1c20:	cbz	w3, 1eb4 <kernel+0x4b4>
    1c24:	cbnz	w0, 1bf0 <kernel+0x1f0>
    1c28:	adrp	x1, 0 <grub_strcasecmp>
    1c2c:	mov	w3, w2
    1c30:	mov	x7, x4
    1c34:	mov	w0, #0x2e                  	// #46
    1c38:	ldr	x6, [x1]
    1c3c:	nop
    1c40:	sub	w8, w3, #0x41
    1c44:	cmp	w8, #0x1a
    1c48:	sub	w10, w0, #0x41
    1c4c:	add	w5, w3, #0x20
    1c50:	add	w1, w0, #0x20
    1c54:	csel	w9, w5, w3, cc  // cc = lo, ul, last
    1c58:	cmp	w10, #0x1a
    1c5c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1c60:	cmp	w0, w9
    1c64:	b.ne	1db0 <kernel+0x3b0>  // b.any
    1c68:	ldrb	w3, [x7, #1]!
    1c6c:	ldrb	w0, [x6, #1]!
    1c70:	mov	w1, w0
    1c74:	cbz	w3, 1ecc <kernel+0x4cc>
    1c78:	cbnz	w0, 1c40 <kernel+0x240>
    1c7c:	adrp	x1, 0 <grub_strcasecmp>
    1c80:	mov	w0, #0x2e                  	// #46
    1c84:	ldr	x5, [x1]
    1c88:	sub	w6, w2, #0x41
    1c8c:	cmp	w6, #0x1a
    1c90:	sub	w8, w0, #0x41
    1c94:	add	w3, w2, #0x20
    1c98:	add	w1, w0, #0x20
    1c9c:	csel	w7, w3, w2, cc  // cc = lo, ul, last
    1ca0:	cmp	w8, #0x1a
    1ca4:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1ca8:	cmp	w0, w7
    1cac:	b.ne	1e28 <kernel+0x428>  // b.any
    1cb0:	ldrb	w2, [x4, #1]!
    1cb4:	ldrb	w0, [x5, #1]!
    1cb8:	cbz	w2, 1ea8 <kernel+0x4a8>
    1cbc:	cbnz	w0, 1c88 <kernel+0x288>
    1cc0:	b	1a54 <kernel+0x54>
    1cc4:	ldr	x0, [x21, #8]
    1cc8:	mov	w1, #0x4                   	// #4
    1ccc:	str	w1, [x0, #112]
    1cd0:	b	1a7c <kernel+0x7c>
    1cd4:	adrp	x1, 0 <grub_strcasecmp>
    1cd8:	mov	w0, #0x12                  	// #18
    1cdc:	ldp	x19, x20, [sp, #16]
    1ce0:	ldp	x21, x22, [sp, #32]
    1ce4:	ldp	x29, x30, [sp], #48
    1ce8:	ldr	x1, [x1]
    1cec:	b	0 <grub_error>
    1cf0:	adrp	x0, 0 <grub_strcasecmp>
    1cf4:	ldp	x19, x20, [sp, #16]
    1cf8:	ldr	x0, [x0]
    1cfc:	ldp	x21, x22, [sp, #32]
    1d00:	ldr	w0, [x0]
    1d04:	ldp	x29, x30, [sp], #48
    1d08:	ret
    1d0c:	cmp	w8, #0x1a
    1d10:	ldrb	w1, [x6]
    1d14:	csel	w0, w5, w0, cc  // cc = lo, ul, last
    1d18:	sub	w3, w1, #0x41
    1d1c:	cmp	w3, #0x1a
    1d20:	add	w3, w1, #0x20
    1d24:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    1d28:	cmp	w0, w1
    1d2c:	b.ne	1b8c <kernel+0x18c>  // b.any
    1d30:	ldr	x0, [x21, #8]
    1d34:	mov	w1, #0x5                   	// #5
    1d38:	str	w1, [x0, #112]
    1d3c:	ldurb	w2, [x19, #-4]
    1d40:	cbnz	w2, 1b8c <kernel+0x18c>
    1d44:	b	1a54 <kernel+0x54>
    1d48:	cmp	w6, #0x1a
    1d4c:	ldrb	w2, [x4]
    1d50:	csel	w3, w1, w3, cc  // cc = lo, ul, last
    1d54:	sub	w0, w2, #0x41
    1d58:	cmp	w0, #0x1a
    1d5c:	add	w0, w2, #0x20
    1d60:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1d64:	cmp	w3, w2
    1d68:	b.ne	1b28 <kernel+0x128>  // b.any
    1d6c:	ldr	x0, [x21, #8]
    1d70:	mov	w1, #0x2                   	// #2
    1d74:	str	w1, [x0, #112]
    1d78:	b	1b28 <kernel+0x128>
    1d7c:	cmp	w6, #0x1a
    1d80:	ldrb	w2, [x4]
    1d84:	csel	w3, w1, w3, cc  // cc = lo, ul, last
    1d88:	sub	w0, w2, #0x41
    1d8c:	cmp	w0, #0x1a
    1d90:	add	w0, w2, #0x20
    1d94:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1d98:	cmp	w3, w2
    1d9c:	b.ne	1ad8 <kernel+0xd8>  // b.any
    1da0:	ldr	x0, [x21, #8]
    1da4:	mov	w1, #0x3                   	// #3
    1da8:	str	w1, [x0, #112]
    1dac:	b	1ad8 <kernel+0xd8>
    1db0:	ldrb	w1, [x6]
    1db4:	cmp	w8, #0x1a
    1db8:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    1dbc:	sub	w0, w1, #0x41
    1dc0:	cmp	w0, #0x1a
    1dc4:	add	w0, w1, #0x20
    1dc8:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    1dcc:	cmp	w3, w1
    1dd0:	b.ne	1c7c <kernel+0x27c>  // b.any
    1dd4:	ldr	x0, [x21, #8]
    1dd8:	mov	w1, #0x7                   	// #7
    1ddc:	str	w1, [x0, #112]
    1de0:	ldurb	w2, [x19, #-4]
    1de4:	cbnz	w2, 1c7c <kernel+0x27c>
    1de8:	b	1a54 <kernel+0x54>
    1dec:	ldrb	w0, [x6]
    1df0:	cmp	w8, #0x1a
    1df4:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    1df8:	sub	w1, w0, #0x41
    1dfc:	cmp	w1, #0x1a
    1e00:	add	w1, w0, #0x20
    1e04:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1e08:	cmp	w3, w0
    1e0c:	b.ne	1c28 <kernel+0x228>  // b.any
    1e10:	ldr	x0, [x21, #8]
    1e14:	mov	w1, #0x7                   	// #7
    1e18:	str	w1, [x0, #112]
    1e1c:	ldurb	w2, [x19, #-4]
    1e20:	cbnz	w2, 1c28 <kernel+0x228>
    1e24:	b	1a54 <kernel+0x54>
    1e28:	ldrb	w0, [x5]
    1e2c:	cmp	w6, #0x1a
    1e30:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    1e34:	sub	w1, w0, #0x41
    1e38:	cmp	w1, #0x1a
    1e3c:	add	w1, w0, #0x20
    1e40:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1e44:	cmp	w2, w0
    1e48:	b.ne	1a54 <kernel+0x54>  // b.any
    1e4c:	ldr	x1, [x21, #8]
    1e50:	mov	w2, #0x8                   	// #8
    1e54:	mov	w0, #0x0                   	// #0
    1e58:	ldp	x19, x20, [sp, #16]
    1e5c:	str	w2, [x1, #112]
    1e60:	ldp	x21, x22, [sp, #32]
    1e64:	ldp	x29, x30, [sp], #48
    1e68:	ret
    1e6c:	ldrb	w0, [x6]
    1e70:	cmp	w8, #0x1a
    1e74:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    1e78:	sub	w1, w0, #0x41
    1e7c:	cmp	w1, #0x1a
    1e80:	add	w1, w0, #0x20
    1e84:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1e88:	cmp	w3, w0
    1e8c:	b.ne	1bd8 <kernel+0x1d8>  // b.any
    1e90:	ldr	x0, [x21, #8]
    1e94:	mov	w1, #0x6                   	// #6
    1e98:	str	w1, [x0, #112]
    1e9c:	ldurb	w2, [x19, #-4]
    1ea0:	cbnz	w2, 1bd8 <kernel+0x1d8>
    1ea4:	b	1a54 <kernel+0x54>
    1ea8:	sub	w1, w0, #0x41
    1eac:	mov	w2, #0x0                   	// #0
    1eb0:	b	1e38 <kernel+0x438>
    1eb4:	sub	w1, w0, #0x41
    1eb8:	mov	w3, #0x0                   	// #0
    1ebc:	b	1dfc <kernel+0x3fc>
    1ec0:	sub	w1, w0, #0x41
    1ec4:	mov	w3, #0x0                   	// #0
    1ec8:	b	1e7c <kernel+0x47c>
    1ecc:	sub	w0, w0, #0x41
    1ed0:	mov	w3, #0x0                   	// #0
    1ed4:	b	1dc0 <kernel+0x3c0>
    1ed8:	cmp	x20, #0x2
    1edc:	b.le	1a54 <kernel+0x54>
    1ee0:	b	1ad8 <kernel+0xd8>
    1ee4:	nop
	...

0000000000001f38 <print_file.isra.0>:
    1f38:	stp	x29, x30, [sp, #-64]!
    1f3c:	mov	x29, sp
    1f40:	stp	x19, x20, [sp, #16]
    1f44:	mov	x19, x0
    1f48:	mov	x20, x1
    1f4c:	stp	x21, x22, [sp, #32]
    1f50:	mov	x21, x2
    1f54:	mov	x22, x4
    1f58:	stp	x23, x24, [sp, #48]
    1f5c:	mov	x23, x3
    1f60:	cbz	x4, 2108 <print_file.isra.0+0x1d0>
    1f64:	ldrb	w0, [x23]
    1f68:	cmp	w0, #0x2f
    1f6c:	csel	x20, x20, x21, eq  // eq = none
    1f70:	ldr	x20, [x20]
    1f74:	mov	x0, x20
    1f78:	bl	0 <grub_strlen>
    1f7c:	lsl	x1, x0, #2
    1f80:	mov	x21, x0
    1f84:	ldp	x0, x2, [x19]
    1f88:	add	x1, x1, #0x2
    1f8c:	sub	x0, x0, x2
    1f90:	cmp	x1, x0
    1f94:	b.cs	20c0 <print_file.isra.0+0x188>  // b.hs, b.nlast
    1f98:	ldr	x0, [x19, #16]
    1f9c:	add	x1, x2, #0x1
    1fa0:	str	x1, [x19, #8]
    1fa4:	mov	w1, #0x27                  	// #39
    1fa8:	strb	w1, [x0, x2]
    1fac:	add	x2, x20, x21
    1fb0:	mov	w5, #0x5c                  	// #92
    1fb4:	ldrb	w1, [x20]
    1fb8:	cmp	w1, #0x0
    1fbc:	ccmp	x20, x2, #0x2, ne  // ne = any
    1fc0:	b.cc	1fe0 <print_file.isra.0+0xa8>  // b.lo, b.ul, b.last
    1fc4:	b	2038 <print_file.isra.0+0x100>
    1fc8:	ldrb	w1, [x20]
    1fcc:	strb	w1, [x3, x0]
    1fd0:	ldrb	w1, [x20, #1]!
    1fd4:	cmp	w1, #0x0
    1fd8:	ccmp	x2, x20, #0x0, ne  // ne = any
    1fdc:	b.ls	2038 <print_file.isra.0+0x100>  // b.plast
    1fe0:	ldp	x0, x3, [x19, #8]
    1fe4:	cmp	w1, #0x27
    1fe8:	add	x4, x0, #0x1
    1fec:	str	x4, [x19, #8]
    1ff0:	b.ne	1fc8 <print_file.isra.0+0x90>  // b.any
    1ff4:	strb	w1, [x3, x0]
    1ff8:	ldp	x0, x3, [x19, #8]
    1ffc:	add	x4, x0, #0x1
    2000:	str	x4, [x19, #8]
    2004:	strb	w5, [x3, x0]
    2008:	ldp	x0, x3, [x19, #8]
    200c:	add	x4, x0, #0x1
    2010:	str	x4, [x19, #8]
    2014:	strb	w1, [x3, x0]
    2018:	ldp	x0, x3, [x19, #8]
    201c:	add	x4, x0, #0x1
    2020:	str	x4, [x19, #8]
    2024:	strb	w1, [x3, x0]
    2028:	ldrb	w1, [x20, #1]!
    202c:	cmp	w1, #0x0
    2030:	ccmp	x2, x20, #0x0, ne  // ne = any
    2034:	b.hi	1fe0 <print_file.isra.0+0xa8>  // b.pmore
    2038:	ldp	x0, x1, [x19, #8]
    203c:	mov	w2, #0x27                  	// #39
    2040:	add	x3, x0, #0x1
    2044:	str	x3, [x19, #8]
    2048:	strb	w2, [x1, x0]
    204c:	ldp	x0, x2, [x19]
    2050:	sub	x0, x0, x2
    2054:	cmp	x0, #0x1
    2058:	b.hi	2100 <print_file.isra.0+0x1c8>  // b.pmore
    205c:	ldr	x0, [x19, #16]
    2060:	add	x2, x2, #0xb
    2064:	lsl	x20, x2, #1
    2068:	mov	x1, x20
    206c:	bl	0 <grub_realloc>
    2070:	cbz	x0, 20ec <print_file.isra.0+0x1b4>
    2074:	ldr	x2, [x19, #8]
    2078:	str	x20, [x19]
    207c:	str	x0, [x19, #16]
    2080:	adrp	x1, 0 <grub_strcasecmp>
    2084:	add	x0, x0, x2
    2088:	mov	x2, #0x1                   	// #1
    208c:	ldr	x1, [x1]
    2090:	bl	0 <grub_memmove>
    2094:	ldr	x3, [x19, #8]
    2098:	mov	x2, x22
    209c:	mov	x1, x23
    20a0:	mov	x0, x19
    20a4:	add	x3, x3, #0x1
    20a8:	ldp	x21, x22, [sp, #32]
    20ac:	ldp	x23, x24, [sp, #48]
    20b0:	str	x3, [x19, #8]
    20b4:	ldp	x19, x20, [sp, #16]
    20b8:	ldp	x29, x30, [sp], #64
    20bc:	b	538 <print_escaped>
    20c0:	add	x2, x2, #0xa
    20c4:	ldr	x0, [x19, #16]
    20c8:	add	x1, x2, x1
    20cc:	lsl	x24, x1, #1
    20d0:	mov	x1, x24
    20d4:	bl	0 <grub_realloc>
    20d8:	cbz	x0, 2118 <print_file.isra.0+0x1e0>
    20dc:	str	x24, [x19]
    20e0:	str	x0, [x19, #16]
    20e4:	ldr	x2, [x19, #8]
    20e8:	b	1f9c <print_file.isra.0+0x64>
    20ec:	adrp	x0, 0 <grub_strcasecmp>
    20f0:	ldr	x0, [x0]
    20f4:	ldr	w0, [x0]
    20f8:	cbnz	w0, 2128 <print_file.isra.0+0x1f0>
    20fc:	ldr	x2, [x19, #8]
    2100:	ldr	x0, [x19, #16]
    2104:	b	2080 <print_file.isra.0+0x148>
    2108:	mov	x0, x3
    210c:	bl	0 <grub_strlen>
    2110:	add	x22, x23, x0
    2114:	b	1f64 <print_file.isra.0+0x2c>
    2118:	adrp	x0, 0 <grub_strcasecmp>
    211c:	ldr	x0, [x0]
    2120:	ldr	w0, [x0]
    2124:	cbz	w0, 213c <print_file.isra.0+0x204>
    2128:	ldp	x19, x20, [sp, #16]
    212c:	ldp	x21, x22, [sp, #32]
    2130:	ldp	x23, x24, [sp, #48]
    2134:	ldp	x29, x30, [sp], #64
    2138:	ret
    213c:	ldr	x2, [x19, #8]
    2140:	b	1f98 <print_file.isra.0+0x60>
    2144:	nop
	...

0000000000002158 <write_entry>:
    2158:	stp	x29, x30, [sp, #-128]!
    215c:	mov	x29, sp
    2160:	stp	x21, x22, [sp, #32]
    2164:	ldr	x21, [x2, #80]
    2168:	stp	x19, x20, [sp, #16]
    216c:	mov	x19, x0
    2170:	stp	x23, x24, [sp, #48]
    2174:	mov	x23, x2
    2178:	mov	x24, x1
    217c:	stp	x27, x28, [sp, #80]
    2180:	cbz	x21, 21c0 <write_entry+0x68>
    2184:	mov	x0, x21
    2188:	bl	0 <grub_strlen>
    218c:	ldp	x1, x2, [x19]
    2190:	mov	x20, x0
    2194:	sub	x1, x1, x2
    2198:	cmp	x0, x1
    219c:	b.cs	26f0 <write_entry+0x598>  // b.hs, b.nlast
    21a0:	ldr	x0, [x19, #16]
    21a4:	add	x0, x0, x2
    21a8:	mov	x1, x21
    21ac:	mov	x2, x20
    21b0:	bl	0 <grub_memmove>
    21b4:	ldr	x3, [x19, #8]
    21b8:	add	x3, x3, x20
    21bc:	str	x3, [x19, #8]
    21c0:	ldr	x20, [x23, #104]
    21c4:	cbz	x20, 21d8 <write_entry+0x80>
    21c8:	ldr	x0, [x20]
    21cc:	cbz	x0, 271c <write_entry+0x5c4>
    21d0:	mov	x20, x0
    21d4:	cbnz	x20, 21c8 <write_entry+0x70>
    21d8:	ldr	w0, [x23, #112]
    21dc:	cmp	w0, #0x5
    21e0:	b.eq	2f94 <write_entry+0xe3c>  // b.none
    21e4:	b.ls	2324 <write_entry+0x1cc>  // b.plast
    21e8:	cmp	w0, #0x9
    21ec:	b.eq	2998 <write_entry+0x840>  // b.none
    21f0:	b.ls	23d0 <write_entry+0x278>  // b.plast
    21f4:	cmp	w0, #0xa
    21f8:	b.ne	25cc <write_entry+0x474>  // b.any
    21fc:	ldr	x21, [x23, #32]
    2200:	ldrb	w0, [x21]
    2204:	cbnz	w0, 2214 <write_entry+0xbc>
    2208:	b	2ff0 <write_entry+0xe98>
    220c:	ldrb	w0, [x21, #1]!
    2210:	cbz	w0, 2ff0 <write_entry+0xe98>
    2214:	bl	0 <grub_isspace>
    2218:	mov	w20, w0
    221c:	cbnz	w0, 220c <write_entry+0xb4>
    2220:	ldrb	w0, [x21]
    2224:	cmp	w0, #0x2d
    2228:	b.ne	2ff0 <write_entry+0xe98>  // b.any
    222c:	mov	w2, #0x0                   	// #0
    2230:	add	x0, x21, #0x1
    2234:	mov	x1, #0x0                   	// #0
    2238:	bl	0 <grub_strtoull>
    223c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    2240:	cmp	x0, x2
    2244:	b.hi	3140 <write_entry+0xfe8>  // b.pmore
    2248:	neg	x1, x0
    224c:	ldp	x3, x2, [x19]
    2250:	cmp	w1, #0x2
    2254:	mov	w20, w1
    2258:	ldr	x0, [x19, #16]
    225c:	sub	x3, x3, x2
    2260:	b.ls	315c <write_entry+0x1004>  // b.plast
    2264:	sub	w1, w1, #0x80
    2268:	cmp	w1, #0x9
    226c:	b.hi	3028 <write_entry+0xed0>  // b.pmore
    2270:	cmp	x3, #0x9
    2274:	b.hi	2298 <write_entry+0x140>  // b.pmore
    2278:	add	x2, x2, #0x13
    227c:	lsl	x21, x2, #1
    2280:	mov	x1, x21
    2284:	bl	0 <grub_realloc>
    2288:	cbz	x0, 3a14 <write_entry+0x18bc>
    228c:	ldr	x2, [x19, #8]
    2290:	str	x21, [x19]
    2294:	str	x0, [x19, #16]
    2298:	adrp	x1, 0 <grub_strcasecmp>
    229c:	add	x0, x0, x2
    22a0:	mov	x2, #0x9                   	// #9
    22a4:	ldr	x1, [x1]
    22a8:	bl	0 <grub_memmove>
    22ac:	ldr	x2, [x19, #8]
    22b0:	sub	w1, w20, #0x80
    22b4:	add	x2, x2, #0x9
    22b8:	str	x2, [x19, #8]
    22bc:	mov	x0, x19
    22c0:	bl	1920 <print_num>
    22c4:	cbnz	w0, 3130 <write_entry+0xfd8>
    22c8:	ldp	x1, x2, [x19]
    22cc:	ldr	x0, [x19, #16]
    22d0:	sub	x1, x1, x2
    22d4:	cmp	x1, #0x14
    22d8:	b.hi	22fc <write_entry+0x1a4>  // b.pmore
    22dc:	add	x2, x2, #0x1e
    22e0:	lsl	x20, x2, #1
    22e4:	mov	x1, x20
    22e8:	bl	0 <grub_realloc>
    22ec:	cbz	x0, 3adc <write_entry+0x1984>
    22f0:	ldr	x2, [x19, #8]
    22f4:	str	x20, [x19]
    22f8:	str	x0, [x19, #16]
    22fc:	adrp	x1, 0 <grub_strcasecmp>
    2300:	add	x0, x0, x2
    2304:	mov	x2, #0x14                  	// #20
    2308:	mov	w28, #0x0                   	// #0
    230c:	ldr	x1, [x1]
    2310:	bl	0 <grub_memmove>
    2314:	ldr	x0, [x19, #8]
    2318:	add	x0, x0, #0x14
    231c:	str	x0, [x19, #8]
    2320:	b	25d0 <write_entry+0x478>
    2324:	cmp	w0, #0x2
    2328:	b.eq	28d0 <write_entry+0x778>  // b.none
    232c:	b.ls	25ec <write_entry+0x494>  // b.plast
    2330:	ldp	x1, x2, [x19]
    2334:	ldr	x0, [x19, #16]
    2338:	sub	x1, x1, x2
    233c:	cmp	x1, #0x1b
    2340:	b.ls	29c0 <write_entry+0x868>  // b.plast
    2344:	adrp	x1, 0 <grub_strcasecmp>
    2348:	add	x0, x0, x2
    234c:	mov	x2, #0x1b                  	// #27
    2350:	ldr	x1, [x1]
    2354:	bl	0 <grub_memmove>
    2358:	ldr	x2, [x19, #8]
    235c:	mov	x0, x19
    2360:	ldr	w1, [x23, #112]
    2364:	add	x2, x2, #0x1b
    2368:	str	x2, [x19, #8]
    236c:	bl	1920 <print_num>
    2370:	mov	w28, w0
    2374:	cbnz	w0, 3130 <write_entry+0xfd8>
    2378:	ldp	x1, x2, [x19]
    237c:	ldr	x0, [x19, #16]
    2380:	sub	x1, x1, x2
    2384:	cmp	x1, #0x7
    2388:	b.hi	23ac <write_entry+0x254>  // b.pmore
    238c:	add	x2, x2, #0x11
    2390:	lsl	x20, x2, #1
    2394:	mov	x1, x20
    2398:	bl	0 <grub_realloc>
    239c:	cbz	x0, 3b00 <write_entry+0x19a8>
    23a0:	ldr	x2, [x19, #8]
    23a4:	str	x20, [x19]
    23a8:	str	x0, [x19, #16]
    23ac:	adrp	x1, 0 <grub_strcasecmp>
    23b0:	add	x0, x0, x2
    23b4:	mov	x2, #0x7                   	// #7
    23b8:	ldr	x1, [x1]
    23bc:	bl	0 <grub_memmove>
    23c0:	ldr	x0, [x19, #8]
    23c4:	add	x0, x0, #0x7
    23c8:	str	x0, [x19, #8]
    23cc:	b	25d0 <write_entry+0x478>
    23d0:	cmp	w0, #0x7
    23d4:	b.hi	25c4 <write_entry+0x46c>  // b.pmore
    23d8:	ldr	x20, [x23, #32]
    23dc:	ldrb	w10, [x20]
    23e0:	cbz	w10, 3d78 <write_entry+0x1c20>
    23e4:	mov	x1, x20
    23e8:	mov	w0, w10
    23ec:	mov	x2, #0x0                   	// #0
    23f0:	mov	w3, #0x5c                  	// #92
    23f4:	nop
    23f8:	cmp	w0, #0x2f
    23fc:	ccmp	w0, w3, #0x4, ne  // ne = any
    2400:	csel	x2, x2, x1, ne  // ne = any
    2404:	ldrb	w0, [x1, #1]!
    2408:	cbnz	w0, 23f8 <write_entry+0x2a0>
    240c:	cbz	x2, 241c <write_entry+0x2c4>
    2410:	ldrb	w10, [x2, #1]
    2414:	add	x20, x2, #0x1
    2418:	cbz	w10, 3d78 <write_entry+0x1c20>
    241c:	mov	w1, w10
    2420:	add	x9, x20, #0x1
    2424:	mov	x3, #0x0                   	// #0
    2428:	mov	w0, #0x63                  	// #99
    242c:	adrp	x8, 0 <grub_strcasecmp>
    2430:	b	245c <write_entry+0x304>
    2434:	csel	w7, w4, w1, cc  // cc = lo, ul, last
    2438:	cmp	w5, #0x1a
    243c:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    2440:	cmp	w2, w7
    2444:	b.ne	31a4 <write_entry+0x104c>  // b.any
    2448:	ldrb	w1, [x9, x3]
    244c:	add	x3, x3, #0x1
    2450:	ldr	x0, [x8]
    2454:	ldrb	w0, [x3, x0]
    2458:	cbz	w1, 36c8 <write_entry+0x1570>
    245c:	sub	w6, w1, #0x41
    2460:	add	w4, w1, #0x20
    2464:	sub	w5, w0, #0x41
    2468:	add	w2, w0, #0x20
    246c:	cmp	w6, #0x1a
    2470:	cbnz	w0, 2434 <write_entry+0x2dc>
    2474:	adrp	x1, 0 <grub_strcasecmp>
    2478:	mov	x5, x20
    247c:	mov	w0, w10
    2480:	mov	w2, #0x6d                  	// #109
    2484:	ldr	x4, [x1]
    2488:	sub	w6, w0, #0x41
    248c:	sub	w7, w2, #0x41
    2490:	cmp	w6, #0x1a
    2494:	add	w1, w0, #0x20
    2498:	add	w3, w2, #0x20
    249c:	csel	w1, w1, w0, cc  // cc = lo, ul, last
    24a0:	cmp	w7, #0x1a
    24a4:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    24a8:	mov	w7, w0
    24ac:	cmp	w2, w1
    24b0:	b.ne	37b4 <write_entry+0x165c>  // b.any
    24b4:	ldrb	w0, [x5, #1]!
    24b8:	ldrb	w2, [x4, #1]!
    24bc:	cbz	w0, 37ac <write_entry+0x1654>
    24c0:	cbnz	w2, 2488 <write_entry+0x330>
    24c4:	sub	w1, w0, #0x41
    24c8:	cmp	w1, #0x19
    24cc:	b.hi	2d34 <write_entry+0xbdc>  // b.pmore
    24d0:	add	w7, w0, #0x20
    24d4:	sub	w1, w2, #0x41
    24d8:	add	w0, w2, #0x20
    24dc:	cmp	w1, #0x1a
    24e0:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    24e4:	cmp	w7, w2
    24e8:	b.ne	2d34 <write_entry+0xbdc>  // b.any
    24ec:	ldr	x21, [x23, #56]
    24f0:	ldrb	w0, [x21]
    24f4:	cbz	w0, 25cc <write_entry+0x474>
    24f8:	mov	w23, #0x1                   	// #1
    24fc:	mov	w22, w23
    2500:	stp	x25, x26, [sp, #64]
    2504:	add	x25, x24, #0x40
    2508:	add	x24, x24, #0x30
    250c:	adrp	x26, 0 <grub_strcasecmp>
    2510:	mov	x20, x21
    2514:	b	2520 <write_entry+0x3c8>
    2518:	ldrb	w0, [x20, #1]!
    251c:	cbz	w0, 2528 <write_entry+0x3d0>
    2520:	bl	0 <grub_isspace>
    2524:	cbz	w0, 2518 <write_entry+0x3c0>
    2528:	add	x0, x21, #0x2
    252c:	cmp	x20, x0
    2530:	b.eq	2f34 <write_entry+0xddc>  // b.none
    2534:	cbz	w22, 2844 <write_entry+0x6ec>
    2538:	ldp	x1, x2, [x19]
    253c:	ldr	x0, [x19, #16]
    2540:	sub	x1, x1, x2
    2544:	cbz	w23, 3744 <write_entry+0x15ec>
    2548:	cmp	x1, #0xc
    254c:	b.hi	2570 <write_entry+0x418>  // b.pmore
    2550:	add	x2, x2, #0x16
    2554:	lsl	x22, x2, #1
    2558:	mov	x1, x22
    255c:	bl	0 <grub_realloc>
    2560:	cbz	x0, 3be4 <write_entry+0x1a8c>
    2564:	ldr	x2, [x19, #8]
    2568:	str	x22, [x19]
    256c:	str	x0, [x19, #16]
    2570:	adrp	x1, 0 <grub_strcasecmp>
    2574:	add	x0, x0, x2
    2578:	mov	x2, #0xc                   	// #12
    257c:	ldr	x1, [x1]
    2580:	bl	0 <grub_memmove>
    2584:	ldr	x0, [x19, #8]
    2588:	add	x0, x0, #0xc
    258c:	str	x0, [x19, #8]
    2590:	mov	x3, x21
    2594:	mov	x4, x20
    2598:	mov	x2, x25
    259c:	mov	x1, x24
    25a0:	mov	x0, x19
    25a4:	bl	1f38 <print_file.isra.0>
    25a8:	cbnz	w0, 2858 <write_entry+0x700>
    25ac:	mov	w23, #0x0                   	// #0
    25b0:	mov	w22, #0x0                   	// #0
    25b4:	ldrb	w0, [x20]
    25b8:	cbz	w0, 3cc0 <write_entry+0x1b68>
    25bc:	mov	x21, x20
    25c0:	b	2510 <write_entry+0x3b8>
    25c4:	cmp	w0, #0x8
    25c8:	b.eq	2330 <write_entry+0x1d8>  // b.none
    25cc:	mov	w28, #0x0                   	// #0
    25d0:	mov	w0, w28
    25d4:	ldp	x19, x20, [sp, #16]
    25d8:	ldp	x21, x22, [sp, #32]
    25dc:	ldp	x23, x24, [sp, #48]
    25e0:	ldp	x27, x28, [sp, #80]
    25e4:	ldp	x29, x30, [sp], #128
    25e8:	ret
    25ec:	cbz	w0, 2330 <write_entry+0x1d8>
    25f0:	cmp	w0, #0x1
    25f4:	b.ne	25cc <write_entry+0x474>  // b.any
    25f8:	ldr	x20, [x23, #56]
    25fc:	cbz	x20, 2f70 <write_entry+0xe18>
    2600:	ldrb	w0, [x20]
    2604:	cbz	w0, 2f70 <write_entry+0xe18>
    2608:	ldr	x1, [x23, #56]
    260c:	cmp	x1, x20
    2610:	b.eq	2628 <write_entry+0x4d0>  // b.none
    2614:	ldurb	w0, [x20, #-1]
    2618:	bl	0 <grub_isspace>
    261c:	cbz	w0, 26e8 <write_entry+0x590>
    2620:	ldrb	w0, [x20]
    2624:	cbz	w0, 26e8 <write_entry+0x590>
    2628:	sub	w1, w0, #0x41
    262c:	cmp	w1, #0x19
    2630:	b.ls	2830 <write_entry+0x6d8>  // b.plast
    2634:	cmp	w0, #0x69
    2638:	b.ne	26e8 <write_entry+0x590>  // b.any
    263c:	ldrb	w0, [x20, #1]
    2640:	cbz	w0, 26e8 <write_entry+0x590>
    2644:	sub	w1, w0, #0x41
    2648:	cmp	w1, #0x19
    264c:	b.ls	2874 <write_entry+0x71c>  // b.plast
    2650:	cmp	w0, #0x6e
    2654:	b.ne	26e8 <write_entry+0x590>  // b.any
    2658:	ldrb	w0, [x20, #2]
    265c:	cbz	w0, 26e8 <write_entry+0x590>
    2660:	sub	w1, w0, #0x41
    2664:	cmp	w1, #0x19
    2668:	b.ls	2888 <write_entry+0x730>  // b.plast
    266c:	cmp	w0, #0x69
    2670:	b.ne	26e8 <write_entry+0x590>  // b.any
    2674:	ldrb	w0, [x20, #3]
    2678:	cbz	w0, 26e8 <write_entry+0x590>
    267c:	sub	w1, w0, #0x41
    2680:	cmp	w1, #0x19
    2684:	b.ls	2894 <write_entry+0x73c>  // b.plast
    2688:	cmp	w0, #0x74
    268c:	b.ne	26e8 <write_entry+0x590>  // b.any
    2690:	ldrb	w0, [x20, #4]
    2694:	cbz	w0, 26e8 <write_entry+0x590>
    2698:	sub	w1, w0, #0x41
    269c:	cmp	w1, #0x19
    26a0:	b.ls	28a8 <write_entry+0x750>  // b.plast
    26a4:	cmp	w0, #0x72
    26a8:	b.ne	26e8 <write_entry+0x590>  // b.any
    26ac:	ldrb	w0, [x20, #5]
    26b0:	cbz	w0, 26e8 <write_entry+0x590>
    26b4:	sub	w1, w0, #0x41
    26b8:	cmp	w1, #0x19
    26bc:	b.ls	28bc <write_entry+0x764>  // b.plast
    26c0:	cmp	w0, #0x64
    26c4:	b.ne	26e8 <write_entry+0x590>  // b.any
    26c8:	ldrb	w0, [x20, #6]
    26cc:	mov	w1, #0x3d                  	// #61
    26d0:	sub	w2, w0, #0x41
    26d4:	cmp	w2, #0x1a
    26d8:	add	w2, w0, #0x20
    26dc:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    26e0:	cmp	w1, w0
    26e4:	b.eq	29e4 <write_entry+0x88c>  // b.none
    26e8:	add	x20, x20, #0x1
    26ec:	b	2600 <write_entry+0x4a8>
    26f0:	add	x1, x2, #0xa
    26f4:	add	x1, x1, x0
    26f8:	ldr	x0, [x19, #16]
    26fc:	lsl	x22, x1, #1
    2700:	mov	x1, x22
    2704:	bl	0 <grub_realloc>
    2708:	cbz	x0, 2f7c <write_entry+0xe24>
    270c:	str	x22, [x19]
    2710:	str	x0, [x19, #16]
    2714:	ldr	x2, [x19, #8]
    2718:	b	21a4 <write_entry+0x4c>
    271c:	adrp	x21, 0 <grub_strcasecmp>
    2720:	adrp	x22, 0 <grub_strcasecmp>
    2724:	stp	x25, x26, [sp, #64]
    2728:	adrp	x25, 0 <grub_strcasecmp>
    272c:	b	27c0 <write_entry+0x668>
    2730:	ldr	x3, [x19, #8]
    2734:	str	x26, [x19]
    2738:	str	x0, [x19, #16]
    273c:	ldr	x1, [x21]
    2740:	mov	x2, #0x5                   	// #5
    2744:	add	x0, x0, x3
    2748:	bl	0 <grub_memmove>
    274c:	ldr	x2, [x19, #8]
    2750:	add	x1, x20, #0x10
    2754:	mov	x0, x19
    2758:	add	x2, x2, #0x5
    275c:	str	x2, [x19, #8]
    2760:	bl	e48 <print_escaped.constprop.0>
    2764:	cbnz	w0, 2858 <write_entry+0x700>
    2768:	ldp	x1, x2, [x19]
    276c:	ldr	x0, [x19, #16]
    2770:	sub	x1, x1, x2
    2774:	cmp	x1, #0x1
    2778:	b.hi	279c <write_entry+0x644>  // b.pmore
    277c:	add	x2, x2, #0xb
    2780:	lsl	x26, x2, #1
    2784:	mov	x1, x26
    2788:	bl	0 <grub_realloc>
    278c:	cbz	x0, 281c <write_entry+0x6c4>
    2790:	ldr	x2, [x19, #8]
    2794:	str	x26, [x19]
    2798:	str	x0, [x19, #16]
    279c:	ldr	x1, [x22]
    27a0:	add	x0, x0, x2
    27a4:	mov	x2, #0x1                   	// #1
    27a8:	bl	0 <grub_memmove>
    27ac:	ldr	x3, [x19, #8]
    27b0:	ldr	x20, [x20, #8]
    27b4:	add	x3, x3, #0x1
    27b8:	str	x3, [x19, #8]
    27bc:	cbz	x20, 286c <write_entry+0x714>
    27c0:	ldr	x0, [x20, #8]
    27c4:	cbz	x0, 286c <write_entry+0x714>
    27c8:	ldp	x1, x3, [x19]
    27cc:	ldr	x0, [x19, #16]
    27d0:	sub	x1, x1, x3
    27d4:	cmp	x1, #0x5
    27d8:	b.hi	273c <write_entry+0x5e4>  // b.pmore
    27dc:	add	x3, x3, #0xf
    27e0:	lsl	x26, x3, #1
    27e4:	mov	x1, x26
    27e8:	bl	0 <grub_realloc>
    27ec:	cbnz	x0, 2730 <write_entry+0x5d8>
    27f0:	ldr	x0, [x25]
    27f4:	ldr	w28, [x0]
    27f8:	cbz	w28, 29b8 <write_entry+0x860>
    27fc:	ldp	x25, x26, [sp, #64]
    2800:	mov	w0, w28
    2804:	ldp	x19, x20, [sp, #16]
    2808:	ldp	x21, x22, [sp, #32]
    280c:	ldp	x23, x24, [sp, #48]
    2810:	ldp	x27, x28, [sp, #80]
    2814:	ldp	x29, x30, [sp], #128
    2818:	ret
    281c:	ldr	x0, [x25]
    2820:	ldr	w28, [x0]
    2824:	cbnz	w28, 27fc <write_entry+0x6a4>
    2828:	ldp	x2, x0, [x19, #8]
    282c:	b	279c <write_entry+0x644>
    2830:	cmp	w0, #0x49
    2834:	b.eq	263c <write_entry+0x4e4>  // b.none
    2838:	add	w0, w0, #0x20
    283c:	mov	w1, #0x69                  	// #105
    2840:	b	26e0 <write_entry+0x588>
    2844:	mov	x1, x21
    2848:	mov	x2, x20
    284c:	mov	x0, x19
    2850:	bl	538 <print_escaped>
    2854:	cbz	w0, 25b4 <write_entry+0x45c>
    2858:	adrp	x0, 0 <grub_strcasecmp>
    285c:	ldp	x25, x26, [sp, #64]
    2860:	ldr	x0, [x0]
    2864:	ldr	w28, [x0]
    2868:	b	25d0 <write_entry+0x478>
    286c:	ldp	x25, x26, [sp, #64]
    2870:	b	21d8 <write_entry+0x80>
    2874:	cmp	w0, #0x4e
    2878:	b.eq	2658 <write_entry+0x500>  // b.none
    287c:	add	w0, w0, #0x20
    2880:	mov	w1, #0x6e                  	// #110
    2884:	b	26e0 <write_entry+0x588>
    2888:	cmp	w0, #0x49
    288c:	b.eq	2674 <write_entry+0x51c>  // b.none
    2890:	b	2838 <write_entry+0x6e0>
    2894:	cmp	w0, #0x54
    2898:	b.eq	2690 <write_entry+0x538>  // b.none
    289c:	add	w0, w0, #0x20
    28a0:	mov	w1, #0x74                  	// #116
    28a4:	b	26e0 <write_entry+0x588>
    28a8:	cmp	w0, #0x52
    28ac:	b.eq	26ac <write_entry+0x554>  // b.none
    28b0:	add	w0, w0, #0x20
    28b4:	mov	w1, #0x72                  	// #114
    28b8:	b	26e0 <write_entry+0x588>
    28bc:	cmp	w0, #0x44
    28c0:	b.eq	26c8 <write_entry+0x570>  // b.none
    28c4:	add	w0, w0, #0x20
    28c8:	mov	w1, #0x64                  	// #100
    28cc:	b	26e0 <write_entry+0x588>
    28d0:	ldp	x1, x2, [x19]
    28d4:	ldr	x0, [x19, #16]
    28d8:	sub	x1, x1, x2
    28dc:	cmp	x1, #0xe
    28e0:	b.hi	2904 <write_entry+0x7ac>  // b.pmore
    28e4:	add	x2, x2, #0x18
    28e8:	lsl	x20, x2, #1
    28ec:	mov	x1, x20
    28f0:	bl	0 <grub_realloc>
    28f4:	cbz	x0, 37c4 <write_entry+0x166c>
    28f8:	ldr	x2, [x19, #8]
    28fc:	str	x20, [x19]
    2900:	str	x0, [x19, #16]
    2904:	adrp	x1, 0 <grub_strcasecmp>
    2908:	add	x0, x0, x2
    290c:	mov	x2, #0xe                   	// #14
    2910:	ldr	x1, [x1]
    2914:	bl	0 <grub_memmove>
    2918:	ldr	x0, [x19, #8]
    291c:	mov	x4, #0x0                   	// #0
    2920:	ldr	x3, [x23, #32]
    2924:	add	x0, x0, #0xe
    2928:	str	x0, [x19, #8]
    292c:	add	x2, x24, #0x40
    2930:	add	x1, x24, #0x30
    2934:	mov	x0, x19
    2938:	bl	1f38 <print_file.isra.0>
    293c:	ldp	x0, x2, [x19]
    2940:	sub	x0, x0, x2
    2944:	cmp	x0, #0x1
    2948:	ldr	x0, [x19, #16]
    294c:	b.hi	2970 <write_entry+0x818>  // b.pmore
    2950:	add	x2, x2, #0xb
    2954:	lsl	x20, x2, #1
    2958:	mov	x1, x20
    295c:	bl	0 <grub_realloc>
    2960:	cbz	x0, 37dc <write_entry+0x1684>
    2964:	ldr	x2, [x19, #8]
    2968:	str	x20, [x19]
    296c:	str	x0, [x19, #16]
    2970:	adrp	x1, 0 <grub_strcasecmp>
    2974:	add	x0, x0, x2
    2978:	mov	x2, #0x1                   	// #1
    297c:	mov	w28, #0x0                   	// #0
    2980:	ldr	x1, [x1]
    2984:	bl	0 <grub_memmove>
    2988:	ldr	x0, [x19, #8]
    298c:	add	x0, x0, #0x1
    2990:	str	x0, [x19, #8]
    2994:	b	25d0 <write_entry+0x478>
    2998:	ldr	x3, [x23, #56]
    299c:	cbz	x3, 36d4 <write_entry+0x157c>
    29a0:	ldr	x2, [x23, #32]
    29a4:	mov	x1, x24
    29a8:	mov	x0, x19
    29ac:	mov	w28, #0x0                   	// #0
    29b0:	bl	4e30 <print_config>
    29b4:	b	25d0 <write_entry+0x478>
    29b8:	ldp	x3, x0, [x19, #8]
    29bc:	b	273c <write_entry+0x5e4>
    29c0:	add	x2, x2, #0x25
    29c4:	lsl	x20, x2, #1
    29c8:	mov	x1, x20
    29cc:	bl	0 <grub_realloc>
    29d0:	cbz	x0, 380c <write_entry+0x16b4>
    29d4:	str	x20, [x19]
    29d8:	str	x0, [x19, #16]
    29dc:	ldr	x2, [x19, #8]
    29e0:	b	2344 <write_entry+0x1ec>
    29e4:	ldrb	w0, [x20]
    29e8:	cbz	w0, 2f70 <write_entry+0xe18>
    29ec:	ldrb	w0, [x20, #7]
    29f0:	add	x20, x20, #0x7
    29f4:	mov	x21, x20
    29f8:	cbnz	w0, 2a08 <write_entry+0x8b0>
    29fc:	b	2a10 <write_entry+0x8b8>
    2a00:	ldrb	w0, [x21, #1]!
    2a04:	cbz	w0, 2a10 <write_entry+0x8b8>
    2a08:	bl	0 <grub_isspace>
    2a0c:	cbz	w0, 2a00 <write_entry+0x8a8>
    2a10:	ldp	x1, x2, [x19]
    2a14:	ldr	x0, [x19, #16]
    2a18:	sub	x1, x1, x2
    2a1c:	cmp	x1, #0x4e
    2a20:	b.hi	2a44 <write_entry+0x8ec>  // b.pmore
    2a24:	add	x2, x2, #0x58
    2a28:	lsl	x22, x2, #1
    2a2c:	mov	x1, x22
    2a30:	bl	0 <grub_realloc>
    2a34:	cbz	x0, 3824 <write_entry+0x16cc>
    2a38:	ldr	x2, [x19, #8]
    2a3c:	str	x22, [x19]
    2a40:	str	x0, [x19, #16]
    2a44:	adrp	x1, 0 <grub_strcasecmp>
    2a48:	add	x0, x0, x2
    2a4c:	mov	x2, #0x4e                  	// #78
    2a50:	ldr	x1, [x1]
    2a54:	bl	0 <grub_memmove>
    2a58:	ldp	x2, x1, [x19]
    2a5c:	add	x0, x1, #0x4e
    2a60:	str	x0, [x19, #8]
    2a64:	sub	x2, x2, x0
    2a68:	cmp	x2, #0x15
    2a6c:	b.ls	3714 <write_entry+0x15bc>  // b.plast
    2a70:	ldr	x1, [x19, #16]
    2a74:	stp	x25, x26, [sp, #64]
    2a78:	adrp	x3, 0 <grub_strcasecmp>
    2a7c:	add	x0, x1, x0
    2a80:	mov	x2, #0x15                  	// #21
    2a84:	ldr	x1, [x3]
    2a88:	add	x22, x24, #0x30
    2a8c:	add	x24, x24, #0x40
    2a90:	bl	0 <grub_memmove>
    2a94:	ldr	x0, [x19, #8]
    2a98:	mov	x2, x24
    2a9c:	ldr	x3, [x23, #32]
    2aa0:	add	x0, x0, #0x15
    2aa4:	str	x0, [x19, #8]
    2aa8:	mov	x1, x22
    2aac:	mov	x0, x19
    2ab0:	mov	x4, #0x0                   	// #0
    2ab4:	bl	1f38 <print_file.isra.0>
    2ab8:	ldp	x0, x2, [x19]
    2abc:	sub	x0, x0, x2
    2ac0:	cmp	x0, #0x1
    2ac4:	ldr	x0, [x19, #16]
    2ac8:	b.hi	2aec <write_entry+0x994>  // b.pmore
    2acc:	add	x2, x2, #0xb
    2ad0:	lsl	x25, x2, #1
    2ad4:	mov	x1, x25
    2ad8:	bl	0 <grub_realloc>
    2adc:	cbz	x0, 3bb4 <write_entry+0x1a5c>
    2ae0:	ldr	x2, [x19, #8]
    2ae4:	str	x25, [x19]
    2ae8:	str	x0, [x19, #16]
    2aec:	adrp	x27, 0 <grub_strcasecmp>
    2af0:	add	x1, x27, #0x0
    2af4:	add	x0, x0, x2
    2af8:	mov	x2, #0x1                   	// #1
    2afc:	ldr	x1, [x1]
    2b00:	bl	0 <grub_memmove>
    2b04:	ldr	x2, [x19, #8]
    2b08:	ldr	x25, [x23, #56]
    2b0c:	add	x2, x2, #0x1
    2b10:	str	x2, [x19, #8]
    2b14:	cbz	x25, 2b7c <write_entry+0xa24>
    2b18:	mov	x0, x25
    2b1c:	bl	0 <grub_strlen>
    2b20:	mov	x26, x0
    2b24:	ldp	x1, x0, [x19]
    2b28:	sub	x1, x1, x0
    2b2c:	cmp	x26, x1
    2b30:	b.cc	3850 <write_entry+0x16f8>  // b.lo, b.ul, b.last
    2b34:	add	x1, x0, #0xa
    2b38:	ldr	x0, [x19, #16]
    2b3c:	add	x1, x1, x26
    2b40:	lsl	x28, x1, #1
    2b44:	mov	x1, x28
    2b48:	bl	0 <grub_realloc>
    2b4c:	mov	x2, x0
    2b50:	cbz	x0, 383c <write_entry+0x16e4>
    2b54:	ldr	x0, [x19, #8]
    2b58:	str	x28, [x19]
    2b5c:	str	x2, [x19, #16]
    2b60:	add	x0, x2, x0
    2b64:	mov	x1, x25
    2b68:	mov	x2, x26
    2b6c:	bl	0 <grub_memmove>
    2b70:	ldr	x2, [x19, #8]
    2b74:	add	x2, x26, x2
    2b78:	str	x2, [x19, #8]
    2b7c:	ldr	x1, [x19]
    2b80:	ldr	x0, [x19, #16]
    2b84:	sub	x1, x1, x2
    2b88:	cmp	x1, #0x1
    2b8c:	b.hi	2bb0 <write_entry+0xa58>  // b.pmore
    2b90:	add	x2, x2, #0xb
    2b94:	lsl	x26, x2, #1
    2b98:	mov	x1, x26
    2b9c:	bl	0 <grub_realloc>
    2ba0:	cbz	x0, 3b9c <write_entry+0x1a44>
    2ba4:	ldr	x2, [x19, #8]
    2ba8:	str	x26, [x19]
    2bac:	str	x0, [x19, #16]
    2bb0:	adrp	x26, 0 <grub_strcasecmp>
    2bb4:	add	x0, x0, x2
    2bb8:	mov	x2, #0x1                   	// #1
    2bbc:	ldr	x1, [x26]
    2bc0:	bl	0 <grub_memmove>
    2bc4:	ldr	x1, [x19, #8]
    2bc8:	add	x2, x1, #0x1
    2bcc:	str	x2, [x19, #8]
    2bd0:	cbz	x20, 3998 <write_entry+0x1840>
    2bd4:	ldr	x3, [x19]
    2bd8:	ldr	x0, [x19, #16]
    2bdc:	sub	x3, x3, x2
    2be0:	cmp	x3, #0x16
    2be4:	b.hi	3b78 <write_entry+0x1a20>  // b.pmore
    2be8:	add	x1, x1, #0x21
    2bec:	lsl	x28, x1, #1
    2bf0:	mov	x1, x28
    2bf4:	bl	0 <grub_realloc>
    2bf8:	cbz	x0, 3d60 <write_entry+0x1c08>
    2bfc:	str	x28, [x19]
    2c00:	str	x0, [x19, #16]
    2c04:	adrp	x1, 0 <grub_strcasecmp>
    2c08:	mov	x2, #0x16                  	// #22
    2c0c:	ldr	x3, [x19, #8]
    2c10:	ldr	x1, [x1]
    2c14:	add	x0, x0, x3
    2c18:	bl	0 <grub_memmove>
    2c1c:	ldr	x0, [x19, #8]
    2c20:	add	x0, x0, #0x16
    2c24:	str	x0, [x19, #8]
    2c28:	cbz	x20, 2c98 <write_entry+0xb40>
    2c2c:	mov	x3, x20
    2c30:	mov	x4, x21
    2c34:	mov	x2, x24
    2c38:	mov	x1, x22
    2c3c:	mov	x0, x19
    2c40:	bl	1f38 <print_file.isra.0>
    2c44:	ldp	x0, x3, [x19]
    2c48:	sub	x0, x0, x3
    2c4c:	cmp	x0, #0x1
    2c50:	b.hi	2c78 <write_entry+0xb20>  // b.pmore
    2c54:	ldr	x0, [x19, #16]
    2c58:	add	x3, x3, #0xb
    2c5c:	lsl	x20, x3, #1
    2c60:	mov	x1, x20
    2c64:	bl	0 <grub_realloc>
    2c68:	cbz	x0, 3d48 <write_entry+0x1bf0>
    2c6c:	ldr	x3, [x19, #8]
    2c70:	str	x20, [x19]
    2c74:	str	x0, [x19, #16]
    2c78:	ldr	x1, [x27]
    2c7c:	mov	x2, #0x1                   	// #1
    2c80:	ldr	x0, [x19, #16]
    2c84:	add	x0, x0, x3
    2c88:	bl	0 <grub_memmove>
    2c8c:	ldr	x0, [x19, #8]
    2c90:	add	x0, x0, #0x1
    2c94:	str	x0, [x19, #8]
    2c98:	ldr	x20, [x23, #40]
    2c9c:	adrp	x21, 0 <grub_strcasecmp>
    2ca0:	cbnz	x20, 2ce0 <write_entry+0xb88>
    2ca4:	b	3ce0 <write_entry+0x1b88>
    2ca8:	ldr	x2, [x19, #8]
    2cac:	str	x23, [x19]
    2cb0:	str	x0, [x19, #16]
    2cb4:	adrp	x1, 0 <grub_strcasecmp>
    2cb8:	add	x1, x1, #0x0
    2cbc:	add	x0, x0, x2
    2cc0:	mov	x2, #0x1                   	// #1
    2cc4:	ldr	x1, [x1]
    2cc8:	bl	0 <grub_memmove>
    2ccc:	ldr	x0, [x19, #8]
    2cd0:	ldr	x20, [x20]
    2cd4:	add	x0, x0, #0x1
    2cd8:	str	x0, [x19, #8]
    2cdc:	cbz	x20, 3ce0 <write_entry+0x1b88>
    2ce0:	ldr	x3, [x20, #8]
    2ce4:	mov	x2, x24
    2ce8:	mov	x1, x22
    2cec:	mov	x0, x19
    2cf0:	mov	x4, #0x0                   	// #0
    2cf4:	bl	1f38 <print_file.isra.0>
    2cf8:	ldp	x0, x2, [x19]
    2cfc:	sub	x0, x0, x2
    2d00:	add	x23, x2, #0xb
    2d04:	cmp	x0, #0x1
    2d08:	ldr	x0, [x19, #16]
    2d0c:	b.hi	2cb4 <write_entry+0xb5c>  // b.pmore
    2d10:	lsl	x23, x23, #1
    2d14:	mov	x1, x23
    2d18:	bl	0 <grub_realloc>
    2d1c:	cbnz	x0, 2ca8 <write_entry+0xb50>
    2d20:	ldr	x0, [x21]
    2d24:	ldr	w28, [x0]
    2d28:	cbnz	w28, 27fc <write_entry+0x6a4>
    2d2c:	ldp	x2, x0, [x19, #8]
    2d30:	b	2cb4 <write_entry+0xb5c>
    2d34:	adrp	x2, 0 <grub_strcasecmp>
    2d38:	mov	x5, x20
    2d3c:	mov	w0, w10
    2d40:	mov	w1, #0x69                  	// #105
    2d44:	ldr	x4, [x2]
    2d48:	sub	w6, w0, #0x41
    2d4c:	sub	w7, w1, #0x41
    2d50:	cmp	w6, #0x1a
    2d54:	add	w2, w0, #0x20
    2d58:	add	w3, w1, #0x20
    2d5c:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    2d60:	cmp	w7, #0x1a
    2d64:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    2d68:	mov	w7, w0
    2d6c:	cmp	w1, w2
    2d70:	b.ne	3988 <write_entry+0x1830>  // b.any
    2d74:	ldrb	w0, [x5, #1]!
    2d78:	ldrb	w1, [x4, #1]!
    2d7c:	cbz	w0, 3980 <write_entry+0x1828>
    2d80:	cbnz	w1, 2d48 <write_entry+0xbf0>
    2d84:	sub	w1, w0, #0x41
    2d88:	cmp	w1, #0x19
    2d8c:	b.hi	38ec <write_entry+0x1794>  // b.pmore
    2d90:	ldrb	w1, [x4]
    2d94:	add	w7, w0, #0x20
    2d98:	sub	w2, w1, #0x41
    2d9c:	add	w0, w1, #0x20
    2da0:	cmp	w2, #0x1a
    2da4:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    2da8:	cmp	w7, w1
    2dac:	b.ne	38ec <write_entry+0x1794>  // b.any
    2db0:	stp	x25, x26, [sp, #64]
    2db4:	ldr	x21, [x23, #56]
    2db8:	b	2dc0 <write_entry+0xc68>
    2dbc:	add	x21, x21, #0x1
    2dc0:	ldrb	w0, [x21]
    2dc4:	bl	0 <grub_isspace>
    2dc8:	cbnz	w0, 2dbc <write_entry+0xc64>
    2dcc:	ldrb	w0, [x21]
    2dd0:	mov	x25, x21
    2dd4:	cbnz	w0, 2de4 <write_entry+0xc8c>
    2dd8:	b	2dec <write_entry+0xc94>
    2ddc:	ldrb	w0, [x25, #1]!
    2de0:	cbz	w0, 2dec <write_entry+0xc94>
    2de4:	bl	0 <grub_isspace>
    2de8:	cbz	w0, 2ddc <write_entry+0xc84>
    2dec:	mov	x20, x25
    2df0:	b	2df8 <write_entry+0xca0>
    2df4:	add	x20, x20, #0x1
    2df8:	ldrb	w0, [x20]
    2dfc:	bl	0 <grub_isspace>
    2e00:	cbnz	w0, 2df4 <write_entry+0xc9c>
    2e04:	ldrb	w0, [x20]
    2e08:	mov	x23, #0x0                   	// #0
    2e0c:	mov	x22, #0x0                   	// #0
    2e10:	cmp	w0, #0x2d
    2e14:	b.ne	2e20 <write_entry+0xcc8>  // b.any
    2e18:	b	3a8c <write_entry+0x1934>
    2e1c:	add	x20, x20, #0x1
    2e20:	ldrb	w0, [x20]
    2e24:	bl	0 <grub_isspace>
    2e28:	cbnz	w0, 2e1c <write_entry+0xcc4>
    2e2c:	ldrb	w0, [x20]
    2e30:	cmp	w0, #0x2d
    2e34:	b.eq	3a2c <write_entry+0x18d4>  // b.none
    2e38:	strb	wzr, [x25]
    2e3c:	cbz	x23, 2e48 <write_entry+0xcf0>
    2e40:	strb	wzr, [x23]
    2e44:	mov	x23, #0x0                   	// #0
    2e48:	ldp	x1, x3, [x19]
    2e4c:	ldr	x0, [x19, #16]
    2e50:	sub	x1, x1, x3
    2e54:	cmp	x1, #0x21
    2e58:	b.hi	2e7c <write_entry+0xd24>  // b.pmore
    2e5c:	add	x3, x3, #0x2b
    2e60:	lsl	x20, x3, #1
    2e64:	mov	x1, x20
    2e68:	bl	0 <grub_realloc>
    2e6c:	cbz	x0, 3cfc <write_entry+0x1ba4>
    2e70:	ldr	x3, [x19, #8]
    2e74:	str	x20, [x19]
    2e78:	str	x0, [x19, #16]
    2e7c:	adrp	x1, 0 <grub_strcasecmp>
    2e80:	add	x0, x0, x3
    2e84:	mov	x2, #0x21                  	// #33
    2e88:	ldr	x1, [x1]
    2e8c:	bl	0 <grub_memmove>
    2e90:	ldr	x3, [x19, #8]
    2e94:	mov	x2, x21
    2e98:	mov	x1, x24
    2e9c:	mov	x0, x19
    2ea0:	add	x3, x3, #0x21
    2ea4:	str	x3, [x19, #8]
    2ea8:	bl	43c0 <print_entry>
    2eac:	cbnz	w0, 2858 <write_entry+0x700>
    2eb0:	cbz	x23, 2ee4 <write_entry+0xd8c>
    2eb4:	adrp	x1, 0 <grub_strcasecmp>
    2eb8:	mov	x0, x19
    2ebc:	mov	x2, #0x1d                  	// #29
    2ec0:	ldr	x1, [x1]
    2ec4:	bl	da0 <print>
    2ec8:	mov	w28, w0
    2ecc:	cbnz	w0, 27fc <write_entry+0x6a4>
    2ed0:	mov	x2, x23
    2ed4:	mov	x1, x24
    2ed8:	mov	x0, x19
    2edc:	bl	43c0 <print_entry>
    2ee0:	cbnz	w0, 2858 <write_entry+0x700>
    2ee4:	adrp	x1, 0 <grub_strcasecmp>
    2ee8:	mov	x0, x19
    2eec:	mov	x2, #0x5                   	// #5
    2ef0:	ldr	x1, [x1]
    2ef4:	bl	da0 <print>
    2ef8:	mov	w28, w0
    2efc:	cbnz	w0, 27fc <write_entry+0x6a4>
    2f00:	mov	x2, x22
    2f04:	mov	x1, x24
    2f08:	mov	x0, x19
    2f0c:	bl	43c0 <print_entry>
    2f10:	cbnz	w0, 2858 <write_entry+0x700>
    2f14:	adrp	x1, 0 <grub_strcasecmp>
    2f18:	mov	x0, x19
    2f1c:	mov	x2, #0x3                   	// #3
    2f20:	ldr	x1, [x1]
    2f24:	bl	da0 <print>
    2f28:	mov	w28, w0
    2f2c:	ldp	x25, x26, [sp, #64]
    2f30:	b	25d0 <write_entry+0x478>
    2f34:	ldrb	w0, [x21]
    2f38:	cmp	w0, #0x2d
    2f3c:	b.ne	2534 <write_entry+0x3dc>  // b.any
    2f40:	ldrb	w0, [x21, #1]
    2f44:	cmp	w0, #0x2d
    2f48:	b.ne	2534 <write_entry+0x3dc>  // b.any
    2f4c:	adrp	x1, 0 <grub_strcasecmp>
    2f50:	mov	x0, x19
    2f54:	mov	x2, #0x1                   	// #1
    2f58:	ldr	x1, [x1]
    2f5c:	bl	da0 <print>
    2f60:	mov	w28, w0
    2f64:	cbnz	w0, 27fc <write_entry+0x6a4>
    2f68:	mov	w22, #0x1                   	// #1
    2f6c:	b	25b4 <write_entry+0x45c>
    2f70:	mov	x21, #0x0                   	// #0
    2f74:	mov	x20, #0x0                   	// #0
    2f78:	b	2a10 <write_entry+0x8b8>
    2f7c:	adrp	x0, 0 <grub_strcasecmp>
    2f80:	ldr	x0, [x0]
    2f84:	ldr	w28, [x0]
    2f88:	cbnz	w28, 25d0 <write_entry+0x478>
    2f8c:	ldr	x2, [x19, #8]
    2f90:	b	21a0 <write_entry+0x48>
    2f94:	ldp	x1, x2, [x19]
    2f98:	ldr	x0, [x19, #16]
    2f9c:	sub	x1, x1, x2
    2fa0:	cmp	x1, #0x14
    2fa4:	b.hi	2fc8 <write_entry+0xe70>  // b.pmore
    2fa8:	add	x2, x2, #0x1e
    2fac:	lsl	x20, x2, #1
    2fb0:	mov	x1, x20
    2fb4:	bl	0 <grub_realloc>
    2fb8:	cbz	x0, 37f4 <write_entry+0x169c>
    2fbc:	ldr	x2, [x19, #8]
    2fc0:	str	x20, [x19]
    2fc4:	str	x0, [x19, #16]
    2fc8:	adrp	x1, 0 <grub_strcasecmp>
    2fcc:	add	x0, x0, x2
    2fd0:	mov	x2, #0x14                  	// #20
    2fd4:	ldr	x1, [x1]
    2fd8:	bl	0 <grub_memmove>
    2fdc:	ldr	x0, [x19, #8]
    2fe0:	mov	x4, #0x0                   	// #0
    2fe4:	ldr	x3, [x23, #32]
    2fe8:	add	x0, x0, #0x14
    2fec:	b	2928 <write_entry+0x7d0>
    2ff0:	mov	x1, #0x0                   	// #0
    2ff4:	mov	x0, x21
    2ff8:	mov	w2, #0x0                   	// #0
    2ffc:	bl	0 <grub_strtoull>
    3000:	mov	x1, x0
    3004:	tbz	x0, #63, 224c <write_entry+0xf4>
    3008:	adrp	x1, 0 <grub_strcasecmp>
    300c:	mov	w0, #0xb                   	// #11
    3010:	mov	w20, #0xffffffff            	// #-1
    3014:	ldr	x1, [x1]
    3018:	bl	0 <grub_error>
    301c:	ldp	x3, x2, [x19]
    3020:	ldr	x0, [x19, #16]
    3024:	sub	x3, x3, x2
    3028:	cmp	x3, #0x1f
    302c:	b.hi	3050 <write_entry+0xef8>  // b.pmore
    3030:	add	x2, x2, #0x29
    3034:	lsl	x21, x2, #1
    3038:	mov	x1, x21
    303c:	bl	0 <grub_realloc>
    3040:	cbz	x0, 39e4 <write_entry+0x188c>
    3044:	ldr	x2, [x19, #8]
    3048:	str	x21, [x19]
    304c:	str	x0, [x19, #16]
    3050:	adrp	x1, 0 <grub_strcasecmp>
    3054:	add	x0, x0, x2
    3058:	mov	x2, #0x1f                  	// #31
    305c:	ldr	x1, [x1]
    3060:	bl	0 <grub_memmove>
    3064:	ldp	x0, x1, [x19]
    3068:	add	x2, x1, #0x1f
    306c:	str	x2, [x19, #8]
    3070:	sub	x0, x0, x2
    3074:	cmp	x0, #0x7
    3078:	ldr	x0, [x19, #16]
    307c:	b.hi	30a0 <write_entry+0xf48>  // b.pmore
    3080:	add	x1, x1, #0x30
    3084:	lsl	x21, x1, #1
    3088:	mov	x1, x21
    308c:	bl	0 <grub_realloc>
    3090:	cbz	x0, 3b18 <write_entry+0x19c0>
    3094:	ldr	x2, [x19, #8]
    3098:	str	x21, [x19]
    309c:	str	x0, [x19, #16]
    30a0:	adrp	x1, 0 <grub_strcasecmp>
    30a4:	add	x0, x0, x2
    30a8:	mov	x2, #0x7                   	// #7
    30ac:	ldr	x1, [x1]
    30b0:	bl	0 <grub_memmove>
    30b4:	ldr	x2, [x19, #8]
    30b8:	mov	w1, w20
    30bc:	mov	x0, x19
    30c0:	add	x2, x2, #0x7
    30c4:	str	x2, [x19, #8]
    30c8:	bl	1920 <print_num>
    30cc:	cbnz	w0, 3130 <write_entry+0xfd8>
    30d0:	ldp	x0, x3, [x19]
    30d4:	sub	x0, x0, x3
    30d8:	cmp	x0, #0x1
    30dc:	b.hi	3104 <write_entry+0xfac>  // b.pmore
    30e0:	ldr	x0, [x19, #16]
    30e4:	add	x3, x3, #0xb
    30e8:	lsl	x20, x3, #1
    30ec:	mov	x1, x20
    30f0:	bl	0 <grub_realloc>
    30f4:	cbz	x0, 4214 <write_entry+0x20bc>
    30f8:	ldr	x3, [x19, #8]
    30fc:	str	x20, [x19]
    3100:	str	x0, [x19, #16]
    3104:	adrp	x1, 0 <grub_strcasecmp>
    3108:	mov	x2, #0x1                   	// #1
    310c:	ldr	x0, [x19, #16]
    3110:	mov	w28, #0x0                   	// #0
    3114:	ldr	x1, [x1]
    3118:	add	x0, x0, x3
    311c:	bl	0 <grub_memmove>
    3120:	ldr	x0, [x19, #8]
    3124:	add	x0, x0, #0x1
    3128:	str	x0, [x19, #8]
    312c:	b	25d0 <write_entry+0x478>
    3130:	adrp	x0, 0 <grub_strcasecmp>
    3134:	ldr	x0, [x0]
    3138:	ldr	w28, [x0]
    313c:	b	25d0 <write_entry+0x478>
    3140:	adrp	x1, 0 <grub_strcasecmp>
    3144:	mov	w0, #0xb                   	// #11
    3148:	ldr	x1, [x1]
    314c:	bl	0 <grub_error>
    3150:	ldp	x3, x2, [x19]
    3154:	ldr	x0, [x19, #16]
    3158:	sub	x3, x3, x2
    315c:	cmp	x3, #0x9
    3160:	b.hi	3184 <write_entry+0x102c>  // b.pmore
    3164:	add	x2, x2, #0x13
    3168:	lsl	x21, x2, #1
    316c:	mov	x1, x21
    3170:	bl	0 <grub_realloc>
    3174:	cbz	x0, 39fc <write_entry+0x18a4>
    3178:	ldr	x2, [x19, #8]
    317c:	str	x21, [x19]
    3180:	str	x0, [x19, #16]
    3184:	adrp	x1, 0 <grub_strcasecmp>
    3188:	add	x0, x0, x2
    318c:	mov	x2, #0x9                   	// #9
    3190:	ldr	x1, [x1]
    3194:	bl	0 <grub_memmove>
    3198:	mov	w1, w20
    319c:	ldr	x2, [x19, #8]
    31a0:	b	22b4 <write_entry+0x15c>
    31a4:	cmp	w6, #0x1a
    31a8:	stp	x25, x26, [sp, #64]
    31ac:	csel	w1, w4, w1, cc  // cc = lo, ul, last
    31b0:	cmp	w5, #0x1a
    31b4:	add	w2, w0, #0x20
    31b8:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    31bc:	cmp	w1, w0
    31c0:	b.ne	3d2c <write_entry+0x1bd4>  // b.any
    31c4:	ldr	x0, [x23, #56]
    31c8:	str	x0, [sp, #96]
    31cc:	ldrb	w0, [x0]
    31d0:	cbz	w0, 3870 <write_entry+0x1718>
    31d4:	mov	w20, #0xffffffff            	// #-1
    31d8:	mov	w25, #0x0                   	// #0
    31dc:	mov	w22, w20
    31e0:	mov	w21, #0x0                   	// #0
    31e4:	mov	x23, #0x0                   	// #0
    31e8:	b	31fc <write_entry+0x10a4>
    31ec:	ldr	x0, [sp, #96]
    31f0:	add	x1, x0, #0x1
    31f4:	str	x1, [sp, #96]
    31f8:	ldrb	w0, [x0, #1]
    31fc:	bl	0 <grub_isspace>
    3200:	cbnz	w0, 31ec <write_entry+0x1094>
    3204:	ldr	x0, [sp, #96]
    3208:	ldrb	w2, [x0]
    320c:	cmp	w2, #0x68
    3210:	b.eq	3610 <write_entry+0x14b8>  // b.none
    3214:	cbz	w2, 3318 <write_entry+0x11c0>
    3218:	sub	w3, w2, #0x41
    321c:	cmp	w3, #0x19
    3220:	b.hi	34d0 <write_entry+0x1378>  // b.pmore
    3224:	cmp	w2, #0x46
    3228:	b.ne	3af4 <write_entry+0x199c>  // b.any
    322c:	ldrb	w1, [x0, #1]
    3230:	cbz	w1, 329c <write_entry+0x1144>
    3234:	sub	w4, w1, #0x41
    3238:	cmp	w4, #0x19
    323c:	b.ls	3640 <write_entry+0x14e8>  // b.plast
    3240:	cmp	w1, #0x69
    3244:	b.ne	329c <write_entry+0x1144>  // b.any
    3248:	ldrb	w1, [x0, #2]
    324c:	cbz	w1, 329c <write_entry+0x1144>
    3250:	sub	w4, w1, #0x41
    3254:	cmp	w4, #0x19
    3258:	b.ls	368c <write_entry+0x1534>  // b.plast
    325c:	cmp	w1, #0x6c
    3260:	b.ne	329c <write_entry+0x1144>  // b.any
    3264:	ldrb	w1, [x0, #3]
    3268:	cbz	w1, 329c <write_entry+0x1144>
    326c:	sub	w4, w1, #0x41
    3270:	cmp	w4, #0x19
    3274:	b.ls	36a0 <write_entry+0x1548>  // b.plast
    3278:	cmp	w1, #0x65
    327c:	b.ne	329c <write_entry+0x1144>  // b.any
    3280:	ldrb	w1, [x0, #4]
    3284:	sub	w4, w1, #0x41
    3288:	cmp	w4, #0x19
    328c:	b.ls	329c <write_entry+0x1144>  // b.plast
    3290:	mov	w4, #0x3d                  	// #61
    3294:	cmp	w4, w1
    3298:	b.eq	3480 <write_entry+0x1328>  // b.none
    329c:	cbz	w2, 3318 <write_entry+0x11c0>
    32a0:	cmp	w3, #0x19
    32a4:	mov	w1, w2
    32a8:	b.ls	3678 <write_entry+0x1520>  // b.plast
    32ac:	cmp	w2, #0x73
    32b0:	b.ne	3310 <write_entry+0x11b8>  // b.any
    32b4:	ldrb	w3, [x0, #1]
    32b8:	cbz	w3, 34dc <write_entry+0x1384>
    32bc:	sub	w4, w3, #0x41
    32c0:	mov	w1, w3
    32c4:	cmp	w4, #0x19
    32c8:	b.ls	3654 <write_entry+0x14fc>  // b.plast
    32cc:	cmp	w3, #0x77
    32d0:	b.ne	3310 <write_entry+0x11b8>  // b.any
    32d4:	ldrb	w3, [x0, #2]
    32d8:	cbz	w3, 3310 <write_entry+0x11b8>
    32dc:	sub	w4, w3, #0x41
    32e0:	mov	w1, w3
    32e4:	cmp	w4, #0x19
    32e8:	b.ls	36b4 <write_entry+0x155c>  // b.plast
    32ec:	cmp	w3, #0x61
    32f0:	b.ne	3310 <write_entry+0x11b8>  // b.any
    32f4:	ldrb	w1, [x0, #3]
    32f8:	sub	w3, w1, #0x41
    32fc:	cmp	w3, #0x19
    3300:	mov	w3, #0x70                  	// #112
    3304:	b.ls	3660 <write_entry+0x1508>  // b.plast
    3308:	cmp	w3, w1
    330c:	b.eq	3668 <write_entry+0x1510>  // b.none
    3310:	cmp	w2, #0x66
    3314:	b.eq	36e8 <write_entry+0x1590>  // b.none
    3318:	sub	w2, w2, #0x30
    331c:	cmp	w2, #0x9
    3320:	b.hi	34e4 <write_entry+0x138c>  // b.pmore
    3324:	add	x1, sp, #0x60
    3328:	mov	w2, #0x0                   	// #0
    332c:	bl	0 <grub_strtoul>
    3330:	mov	w20, w0
    3334:	ldr	x0, [sp, #96]
    3338:	ldrb	w0, [x0]
    333c:	cbnz	w0, 31fc <write_entry+0x10a4>
    3340:	cmn	w22, #0x1
    3344:	b.eq	3870 <write_entry+0x1718>  // b.none
    3348:	ldr	x3, [x19, #8]
    334c:	cbnz	w22, 39d8 <write_entry+0x1880>
    3350:	adrp	x0, 0 <grub_strcasecmp>
    3354:	ldr	x26, [x0]
    3358:	ldr	x1, [x19]
    335c:	ldr	x0, [x19, #16]
    3360:	sub	x1, x1, x3
    3364:	cmp	x1, #0x7
    3368:	b.hi	338c <write_entry+0x1234>  // b.pmore
    336c:	add	x3, x3, #0x11
    3370:	lsl	x22, x3, #1
    3374:	mov	x1, x22
    3378:	bl	0 <grub_realloc>
    337c:	cbz	x0, 41fc <write_entry+0x20a4>
    3380:	ldr	x3, [x19, #8]
    3384:	str	x22, [x19]
    3388:	str	x0, [x19, #16]
    338c:	mov	x1, x26
    3390:	mov	x2, #0x7                   	// #7
    3394:	add	x0, x0, x3
    3398:	bl	0 <grub_memmove>
    339c:	ldr	x2, [x19, #8]
    33a0:	mov	w1, w21
    33a4:	mov	x0, x19
    33a8:	add	x2, x2, #0x7
    33ac:	str	x2, [x19, #8]
    33b0:	bl	1920 <print_num>
    33b4:	cbnz	w0, 2858 <write_entry+0x700>
    33b8:	cmn	w20, #0x1
    33bc:	b.eq	33ec <write_entry+0x1294>  // b.none
    33c0:	adrp	x1, 0 <grub_strcasecmp>
    33c4:	mov	x0, x19
    33c8:	mov	x2, #0x1                   	// #1
    33cc:	ldr	x1, [x1]
    33d0:	bl	da0 <print>
    33d4:	mov	w28, w0
    33d8:	cbnz	w0, 27fc <write_entry+0x6a4>
    33dc:	add	w1, w20, #0x1
    33e0:	mov	x0, x19
    33e4:	bl	1920 <print_num>
    33e8:	cbnz	w0, 2858 <write_entry+0x700>
    33ec:	adrp	x20, 0 <grub_strcasecmp>
    33f0:	mov	x0, x19
    33f4:	mov	x2, #0x2                   	// #2
    33f8:	ldr	x1, [x20]
    33fc:	bl	da0 <print>
    3400:	mov	w28, w0
    3404:	cbnz	w0, 27fc <write_entry+0x6a4>
    3408:	cbz	x23, 41d8 <write_entry+0x2080>
    340c:	adrp	x1, 0 <grub_strcasecmp>
    3410:	mov	x0, x19
    3414:	mov	x2, #0xe                   	// #14
    3418:	ldr	x1, [x1]
    341c:	bl	da0 <print>
    3420:	mov	w28, w0
    3424:	cbnz	w0, 27fc <write_entry+0x6a4>
    3428:	mov	x3, x23
    342c:	add	x2, x24, #0x40
    3430:	add	x1, x24, #0x30
    3434:	mov	x4, #0x0                   	// #0
    3438:	mov	x0, x19
    343c:	bl	1f38 <print_file.isra.0>
    3440:	ldr	x1, [x20]
    3444:	mov	x0, x19
    3448:	mov	x2, #0x2                   	// #2
    344c:	bl	da0 <print>
    3450:	mov	w28, w0
    3454:	cbnz	w0, 27fc <write_entry+0x6a4>
    3458:	cbz	w25, 3604 <write_entry+0x14ac>
    345c:	adrp	x1, 0 <grub_strcasecmp>
    3460:	mov	x0, x19
    3464:	mov	x2, #0x19                  	// #25
    3468:	ldr	x1, [x1]
    346c:	bl	da0 <print>
    3470:	mov	w28, w0
    3474:	cbz	w0, 3604 <write_entry+0x14ac>
    3478:	ldp	x25, x26, [sp, #64]
    347c:	b	2800 <write_entry+0x6a8>
    3480:	add	x23, x0, #0x5
    3484:	str	x23, [sp, #96]
    3488:	ldrb	w0, [x0, #5]
    348c:	cbnz	w0, 34a8 <write_entry+0x1350>
    3490:	b	3340 <write_entry+0x11e8>
    3494:	ldr	x0, [sp, #96]
    3498:	add	x1, x0, #0x1
    349c:	str	x1, [sp, #96]
    34a0:	ldrb	w0, [x0, #1]
    34a4:	cbz	w0, 3340 <write_entry+0x11e8>
    34a8:	bl	0 <grub_isspace>
    34ac:	cbz	w0, 3494 <write_entry+0x133c>
    34b0:	ldr	x0, [sp, #96]
    34b4:	ldrb	w1, [x0]
    34b8:	cbz	w1, 3340 <write_entry+0x11e8>
    34bc:	strb	wzr, [x0]
    34c0:	ldr	x0, [sp, #96]
    34c4:	add	x0, x0, #0x1
    34c8:	str	x0, [sp, #96]
    34cc:	b	3338 <write_entry+0x11e0>
    34d0:	cmp	w2, #0x66
    34d4:	b.eq	322c <write_entry+0x10d4>  // b.none
    34d8:	b	329c <write_entry+0x1144>
    34dc:	cmp	w2, #0x66
    34e0:	b.ne	3318 <write_entry+0x11c0>  // b.any
    34e4:	ldp	x1, x2, [x19]
    34e8:	ldr	x0, [x19, #16]
    34ec:	sub	x1, x1, x2
    34f0:	cmp	x1, #0x17
    34f4:	b.hi	3518 <write_entry+0x13c0>  // b.pmore
    34f8:	add	x2, x2, #0x21
    34fc:	lsl	x26, x2, #1
    3500:	mov	x1, x26
    3504:	bl	0 <grub_realloc>
    3508:	cbz	x0, 3858 <write_entry+0x1700>
    350c:	ldr	x2, [x19, #8]
    3510:	str	x26, [x19]
    3514:	str	x0, [x19, #16]
    3518:	adrp	x1, 0 <grub_strcasecmp>
    351c:	add	x0, x0, x2
    3520:	mov	x2, #0x17                  	// #23
    3524:	ldr	x1, [x1]
    3528:	bl	0 <grub_memmove>
    352c:	ldr	x0, [x19, #8]
    3530:	ldr	x27, [sp, #96]
    3534:	add	x0, x0, #0x17
    3538:	str	x0, [x19, #8]
    353c:	mov	x0, x27
    3540:	bl	0 <grub_strlen>
    3544:	mov	x26, x0
    3548:	ldp	x1, x0, [x19]
    354c:	sub	x1, x1, x0
    3550:	cmp	x26, x1
    3554:	b.cc	37a4 <write_entry+0x164c>  // b.lo, b.ul, b.last
    3558:	add	x1, x0, #0xa
    355c:	ldr	x0, [x19, #16]
    3560:	add	x1, x1, x26
    3564:	lsl	x28, x1, #1
    3568:	mov	x1, x28
    356c:	bl	0 <grub_realloc>
    3570:	mov	x2, x0
    3574:	cbz	x0, 378c <write_entry+0x1634>
    3578:	ldr	x0, [x19, #8]
    357c:	str	x28, [x19]
    3580:	str	x2, [x19, #16]
    3584:	add	x0, x2, x0
    3588:	mov	x1, x27
    358c:	mov	x2, x26
    3590:	bl	0 <grub_memmove>
    3594:	ldp	x0, x2, [x19]
    3598:	add	x2, x26, x2
    359c:	str	x2, [x19, #8]
    35a0:	sub	x0, x0, x2
    35a4:	cmp	x0, #0x1
    35a8:	ldr	x0, [x19, #16]
    35ac:	b.hi	35d0 <write_entry+0x1478>  // b.pmore
    35b0:	add	x2, x2, #0xb
    35b4:	lsl	x26, x2, #1
    35b8:	mov	x1, x26
    35bc:	bl	0 <grub_realloc>
    35c0:	cbz	x0, 3cc8 <write_entry+0x1b70>
    35c4:	ldr	x2, [x19, #8]
    35c8:	str	x26, [x19]
    35cc:	str	x0, [x19, #16]
    35d0:	adrp	x1, 0 <grub_strcasecmp>
    35d4:	add	x0, x0, x2
    35d8:	mov	x2, #0x1                   	// #1
    35dc:	ldr	x1, [x1]
    35e0:	bl	0 <grub_memmove>
    35e4:	ldr	x3, [x19, #8]
    35e8:	cmn	w22, #0x1
    35ec:	add	x3, x3, #0x1
    35f0:	str	x3, [x19, #8]
    35f4:	b.eq	3874 <write_entry+0x171c>  // b.none
    35f8:	ldr	x0, [sp, #96]
    35fc:	ldrb	w0, [x0]
    3600:	cbz	w0, 334c <write_entry+0x11f4>
    3604:	mov	w28, #0x0                   	// #0
    3608:	ldp	x25, x26, [sp, #64]
    360c:	b	25d0 <write_entry+0x478>
    3610:	ldrb	w1, [x0, #1]
    3614:	mov	w3, #0x27                  	// #39
    3618:	cmp	w1, #0x64
    361c:	b.ne	32a0 <write_entry+0x1148>  // b.any
    3620:	add	x0, x0, #0x2
    3624:	add	x1, sp, #0x60
    3628:	mov	w2, #0x0                   	// #0
    362c:	bl	0 <grub_strtoul>
    3630:	mov	w22, #0x0                   	// #0
    3634:	mov	w21, w0
    3638:	ldr	x0, [sp, #96]
    363c:	b	3338 <write_entry+0x11e0>
    3640:	cmp	w1, #0x49
    3644:	b.eq	3248 <write_entry+0x10f0>  // b.none
    3648:	add	w1, w1, #0x20
    364c:	mov	w4, #0x69                  	// #105
    3650:	b	3294 <write_entry+0x113c>
    3654:	cmp	w3, #0x57
    3658:	b.eq	32d4 <write_entry+0x117c>  // b.none
    365c:	mov	w3, #0x77                  	// #119
    3660:	add	w1, w1, #0x20
    3664:	b	3308 <write_entry+0x11b0>
    3668:	add	x0, x0, #0x4
    366c:	mov	w25, #0x1                   	// #1
    3670:	str	x0, [sp, #96]
    3674:	b	3338 <write_entry+0x11e0>
    3678:	cmp	w2, #0x53
    367c:	b.eq	32b4 <write_entry+0x115c>  // b.none
    3680:	add	w1, w1, #0x20
    3684:	mov	w3, #0x73                  	// #115
    3688:	b	3308 <write_entry+0x11b0>
    368c:	cmp	w1, #0x4c
    3690:	b.eq	3264 <write_entry+0x110c>  // b.none
    3694:	add	w1, w1, #0x20
    3698:	mov	w4, #0x6c                  	// #108
    369c:	b	3294 <write_entry+0x113c>
    36a0:	cmp	w1, #0x45
    36a4:	b.eq	3280 <write_entry+0x1128>  // b.none
    36a8:	add	w1, w1, #0x20
    36ac:	mov	w4, #0x65                  	// #101
    36b0:	b	3294 <write_entry+0x113c>
    36b4:	cmp	w3, #0x41
    36b8:	b.eq	32f4 <write_entry+0x119c>  // b.none
    36bc:	add	w1, w1, #0x20
    36c0:	mov	w3, #0x61                  	// #97
    36c4:	b	3308 <write_entry+0x11b0>
    36c8:	sub	w5, w0, #0x41
    36cc:	stp	x25, x26, [sp, #64]
    36d0:	b	31b0 <write_entry+0x1058>
    36d4:	ldr	x3, [x23, #64]
    36d8:	cbnz	x3, 29a0 <write_entry+0x848>
    36dc:	adrp	x0, 0 <grub_strcasecmp>
    36e0:	ldr	x3, [x0]
    36e4:	b	29a0 <write_entry+0x848>
    36e8:	ldrb	w1, [x0, #1]
    36ec:	cmp	w1, #0x64
    36f0:	b.ne	34e4 <write_entry+0x138c>  // b.any
    36f4:	add	x0, x0, #0x2
    36f8:	add	x1, sp, #0x60
    36fc:	mov	w2, #0x0                   	// #0
    3700:	bl	0 <grub_strtoul>
    3704:	mov	w22, #0x1                   	// #1
    3708:	mov	w21, w0
    370c:	ldr	x0, [sp, #96]
    3710:	b	3338 <write_entry+0x11e0>
    3714:	add	x1, x1, #0x6d
    3718:	ldr	x0, [x19, #16]
    371c:	lsl	x22, x1, #1
    3720:	mov	x1, x22
    3724:	bl	0 <grub_realloc>
    3728:	mov	x1, x0
    372c:	cbz	x0, 38d0 <write_entry+0x1778>
    3730:	stp	x25, x26, [sp, #64]
    3734:	str	x22, [x19]
    3738:	str	x1, [x19, #16]
    373c:	ldr	x0, [x19, #8]
    3740:	b	2a78 <write_entry+0x920>
    3744:	cmp	x1, #0x9
    3748:	b.hi	376c <write_entry+0x1614>  // b.pmore
    374c:	add	x2, x2, #0x13
    3750:	lsl	x22, x2, #1
    3754:	mov	x1, x22
    3758:	bl	0 <grub_realloc>
    375c:	cbz	x0, 3bcc <write_entry+0x1a74>
    3760:	ldr	x2, [x19, #8]
    3764:	str	x22, [x19]
    3768:	str	x0, [x19, #16]
    376c:	ldr	x1, [x26]
    3770:	add	x0, x0, x2
    3774:	mov	x2, #0x9                   	// #9
    3778:	bl	0 <grub_memmove>
    377c:	ldr	x0, [x19, #8]
    3780:	add	x0, x0, #0x9
    3784:	str	x0, [x19, #8]
    3788:	b	2590 <write_entry+0x438>
    378c:	adrp	x0, 0 <grub_strcasecmp>
    3790:	mov	w28, #0x0                   	// #0
    3794:	ldr	x0, [x0]
    3798:	ldr	w0, [x0]
    379c:	cbnz	w0, 27fc <write_entry+0x6a4>
    37a0:	ldr	x0, [x19, #8]
    37a4:	ldr	x2, [x19, #16]
    37a8:	b	3584 <write_entry+0x142c>
    37ac:	mov	w7, #0x0                   	// #0
    37b0:	b	24d4 <write_entry+0x37c>
    37b4:	ldrb	w2, [x4]
    37b8:	cmp	w6, #0x19
    37bc:	b.ls	24d0 <write_entry+0x378>  // b.plast
    37c0:	b	24d4 <write_entry+0x37c>
    37c4:	adrp	x0, 0 <grub_strcasecmp>
    37c8:	ldr	x0, [x0]
    37cc:	ldr	w28, [x0]
    37d0:	cbnz	w28, 25d0 <write_entry+0x478>
    37d4:	ldp	x2, x0, [x19, #8]
    37d8:	b	2904 <write_entry+0x7ac>
    37dc:	adrp	x0, 0 <grub_strcasecmp>
    37e0:	ldr	x0, [x0]
    37e4:	ldr	w28, [x0]
    37e8:	cbnz	w28, 25d0 <write_entry+0x478>
    37ec:	ldp	x2, x0, [x19, #8]
    37f0:	b	2970 <write_entry+0x818>
    37f4:	adrp	x0, 0 <grub_strcasecmp>
    37f8:	ldr	x0, [x0]
    37fc:	ldr	w28, [x0]
    3800:	cbnz	w28, 25d0 <write_entry+0x478>
    3804:	ldp	x2, x0, [x19, #8]
    3808:	b	2fc8 <write_entry+0xe70>
    380c:	adrp	x0, 0 <grub_strcasecmp>
    3810:	ldr	x0, [x0]
    3814:	ldr	w28, [x0]
    3818:	cbnz	w28, 25d0 <write_entry+0x478>
    381c:	ldp	x2, x0, [x19, #8]
    3820:	b	2344 <write_entry+0x1ec>
    3824:	adrp	x0, 0 <grub_strcasecmp>
    3828:	ldr	x0, [x0]
    382c:	ldr	w28, [x0]
    3830:	cbnz	w28, 25d0 <write_entry+0x478>
    3834:	ldp	x2, x0, [x19, #8]
    3838:	b	2a44 <write_entry+0x8ec>
    383c:	adrp	x0, 0 <grub_strcasecmp>
    3840:	ldr	x0, [x0]
    3844:	ldr	w28, [x0]
    3848:	cbnz	w28, 27fc <write_entry+0x6a4>
    384c:	ldr	x0, [x19, #8]
    3850:	ldr	x2, [x19, #16]
    3854:	b	2b60 <write_entry+0xa08>
    3858:	adrp	x0, 0 <grub_strcasecmp>
    385c:	ldr	x0, [x0]
    3860:	ldr	w28, [x0]
    3864:	cbnz	w28, 27fc <write_entry+0x6a4>
    3868:	ldp	x2, x0, [x19, #8]
    386c:	b	3518 <write_entry+0x13c0>
    3870:	ldr	x3, [x19, #8]
    3874:	ldr	x0, [x19]
    3878:	sub	x0, x0, x3
    387c:	cmp	x0, #0x17
    3880:	b.hi	38a8 <write_entry+0x1750>  // b.pmore
    3884:	ldr	x0, [x19, #16]
    3888:	add	x3, x3, #0x21
    388c:	lsl	x20, x3, #1
    3890:	mov	x1, x20
    3894:	bl	0 <grub_realloc>
    3898:	cbz	x0, 3d14 <write_entry+0x1bbc>
    389c:	ldr	x3, [x19, #8]
    38a0:	str	x20, [x19]
    38a4:	str	x0, [x19, #16]
    38a8:	adrp	x1, 0 <grub_strcasecmp>
    38ac:	mov	x2, #0x17                  	// #23
    38b0:	ldr	x0, [x19, #16]
    38b4:	ldr	x1, [x1]
    38b8:	add	x0, x0, x3
    38bc:	bl	0 <grub_memmove>
    38c0:	ldr	x0, [x19, #8]
    38c4:	add	x0, x0, #0x17
    38c8:	str	x0, [x19, #8]
    38cc:	b	3604 <write_entry+0x14ac>
    38d0:	adrp	x0, 0 <grub_strcasecmp>
    38d4:	ldr	x0, [x0]
    38d8:	ldr	w28, [x0]
    38dc:	cbnz	w28, 25d0 <write_entry+0x478>
    38e0:	stp	x25, x26, [sp, #64]
    38e4:	ldp	x0, x1, [x19, #8]
    38e8:	b	2a78 <write_entry+0x920>
    38ec:	adrp	x1, 0 <grub_strcasecmp>
    38f0:	mov	x4, x20
    38f4:	mov	w0, #0x72                  	// #114
    38f8:	ldr	x2, [x1]
    38fc:	sub	w6, w10, #0x41
    3900:	sub	w3, w0, #0x41
    3904:	cmp	w6, #0x1a
    3908:	add	w1, w10, #0x20
    390c:	add	w5, w0, #0x20
    3910:	csel	w1, w1, w10, cc  // cc = lo, ul, last
    3914:	cmp	w3, #0x1a
    3918:	csel	w0, w5, w0, cc  // cc = lo, ul, last
    391c:	mov	w3, w10
    3920:	cmp	w0, w1
    3924:	b.ne	3b30 <write_entry+0x19d8>  // b.any
    3928:	ldrb	w10, [x4, #1]!
    392c:	ldrb	w0, [x2, #1]!
    3930:	cbz	w10, 3b70 <write_entry+0x1a18>
    3934:	cbnz	w0, 38fc <write_entry+0x17a4>
    3938:	sub	w0, w10, #0x41
    393c:	cmp	w0, #0x19
    3940:	b.hi	3b40 <write_entry+0x19e8>  // b.pmore
    3944:	add	w3, w10, #0x20
    3948:	ldrb	w0, [x2]
    394c:	sub	w2, w0, #0x41
    3950:	add	w1, w0, #0x20
    3954:	cmp	w2, #0x1a
    3958:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    395c:	cmp	w3, w0
    3960:	b.ne	3b40 <write_entry+0x19e8>  // b.any
    3964:	adrp	x1, 0 <grub_strcasecmp>
    3968:	mov	x0, x19
    396c:	mov	x2, #0x9                   	// #9
    3970:	ldr	x1, [x1]
    3974:	bl	da0 <print>
    3978:	mov	w28, w0
    397c:	b	25d0 <write_entry+0x478>
    3980:	mov	w7, #0x0                   	// #0
    3984:	b	2d98 <write_entry+0xc40>
    3988:	ldrb	w1, [x4]
    398c:	cmp	w6, #0x19
    3990:	b.ls	2d90 <write_entry+0xc38>  // b.plast
    3994:	b	2d98 <write_entry+0xc40>
    3998:	ldr	x0, [x23, #40]
    399c:	cbz	x0, 3cc0 <write_entry+0x1b68>
    39a0:	ldr	x3, [x19]
    39a4:	ldr	x0, [x19, #16]
    39a8:	sub	x3, x3, x2
    39ac:	cmp	x3, #0x16
    39b0:	b.ls	2be8 <write_entry+0xa90>  // b.plast
    39b4:	adrp	x1, 0 <grub_strcasecmp>
    39b8:	add	x0, x0, x2
    39bc:	mov	x2, #0x16                  	// #22
    39c0:	ldr	x1, [x1]
    39c4:	bl	0 <grub_memmove>
    39c8:	ldr	x0, [x19, #8]
    39cc:	add	x0, x0, #0x16
    39d0:	str	x0, [x19, #8]
    39d4:	b	2c98 <write_entry+0xb40>
    39d8:	adrp	x0, 0 <grub_strcasecmp>
    39dc:	ldr	x26, [x0]
    39e0:	b	3358 <write_entry+0x1200>
    39e4:	adrp	x0, 0 <grub_strcasecmp>
    39e8:	ldr	x0, [x0]
    39ec:	ldr	w28, [x0]
    39f0:	cbnz	w28, 25d0 <write_entry+0x478>
    39f4:	ldp	x2, x0, [x19, #8]
    39f8:	b	3050 <write_entry+0xef8>
    39fc:	adrp	x0, 0 <grub_strcasecmp>
    3a00:	ldr	x0, [x0]
    3a04:	ldr	w28, [x0]
    3a08:	cbnz	w28, 25d0 <write_entry+0x478>
    3a0c:	ldp	x2, x0, [x19, #8]
    3a10:	b	3184 <write_entry+0x102c>
    3a14:	adrp	x0, 0 <grub_strcasecmp>
    3a18:	ldr	x0, [x0]
    3a1c:	ldr	w28, [x0]
    3a20:	cbnz	w28, 25d0 <write_entry+0x478>
    3a24:	ldp	x2, x0, [x19, #8]
    3a28:	b	2298 <write_entry+0x140>
    3a2c:	ldrb	w0, [x20, #1]
    3a30:	add	x20, x20, #0x2
    3a34:	cmp	w0, #0x2d
    3a38:	b.ne	2e38 <write_entry+0xce0>  // b.any
    3a3c:	b	3a44 <write_entry+0x18ec>
    3a40:	add	x20, x20, #0x1
    3a44:	ldrb	w0, [x20]
    3a48:	bl	0 <grub_isspace>
    3a4c:	cbnz	w0, 3a40 <write_entry+0x18e8>
    3a50:	ldrb	w0, [x20]
    3a54:	mov	x26, x20
    3a58:	cbnz	w0, 3a68 <write_entry+0x1910>
    3a5c:	b	3a70 <write_entry+0x1918>
    3a60:	ldrb	w0, [x26, #1]!
    3a64:	cbz	w0, 3a70 <write_entry+0x1918>
    3a68:	bl	0 <grub_isspace>
    3a6c:	cbz	w0, 3a60 <write_entry+0x1908>
    3a70:	strb	wzr, [x25]
    3a74:	cbz	x23, 3a7c <write_entry+0x1924>
    3a78:	strb	wzr, [x23]
    3a7c:	mov	x23, x22
    3a80:	mov	x22, x20
    3a84:	strb	wzr, [x26]
    3a88:	b	2e48 <write_entry+0xcf0>
    3a8c:	ldrb	w0, [x20, #1]
    3a90:	cmp	w0, #0x2d
    3a94:	b.ne	2e20 <write_entry+0xcc8>  // b.any
    3a98:	add	x22, x20, #0x2
    3a9c:	b	3aa4 <write_entry+0x194c>
    3aa0:	add	x22, x22, #0x1
    3aa4:	ldrb	w0, [x22]
    3aa8:	bl	0 <grub_isspace>
    3aac:	cbnz	w0, 3aa0 <write_entry+0x1948>
    3ab0:	ldrb	w0, [x22]
    3ab4:	mov	x20, x22
    3ab8:	mov	x23, x22
    3abc:	cbnz	w0, 3acc <write_entry+0x1974>
    3ac0:	b	2e20 <write_entry+0xcc8>
    3ac4:	ldrb	w0, [x20, #1]!
    3ac8:	cbz	w0, 3ad4 <write_entry+0x197c>
    3acc:	bl	0 <grub_isspace>
    3ad0:	cbz	w0, 3ac4 <write_entry+0x196c>
    3ad4:	mov	x23, x20
    3ad8:	b	2e20 <write_entry+0xcc8>
    3adc:	adrp	x0, 0 <grub_strcasecmp>
    3ae0:	ldr	x0, [x0]
    3ae4:	ldr	w28, [x0]
    3ae8:	cbnz	w28, 25d0 <write_entry+0x478>
    3aec:	ldp	x2, x0, [x19, #8]
    3af0:	b	22fc <write_entry+0x1a4>
    3af4:	add	w1, w2, #0x20
    3af8:	mov	w4, #0x66                  	// #102
    3afc:	b	3294 <write_entry+0x113c>
    3b00:	adrp	x0, 0 <grub_strcasecmp>
    3b04:	ldr	x0, [x0]
    3b08:	ldr	w0, [x0]
    3b0c:	cbz	w0, 422c <write_entry+0x20d4>
    3b10:	mov	w28, w0
    3b14:	b	25d0 <write_entry+0x478>
    3b18:	adrp	x0, 0 <grub_strcasecmp>
    3b1c:	ldr	x0, [x0]
    3b20:	ldr	w28, [x0]
    3b24:	cbnz	w28, 25d0 <write_entry+0x478>
    3b28:	ldp	x2, x0, [x19, #8]
    3b2c:	b	30a0 <write_entry+0xf48>
    3b30:	cmp	w6, #0x19
    3b34:	b.hi	3948 <write_entry+0x17f0>  // b.pmore
    3b38:	add	w3, w10, #0x20
    3b3c:	b	3948 <write_entry+0x17f0>
    3b40:	adrp	x1, 0 <grub_strcasecmp>
    3b44:	mov	x0, x20
    3b48:	ldr	x1, [x1]
    3b4c:	bl	0 <grub_strcasecmp>
    3b50:	cbnz	w0, 3d84 <write_entry+0x1c2c>
    3b54:	adrp	x1, 0 <grub_strcasecmp>
    3b58:	mov	x0, x19
    3b5c:	mov	x2, #0x7                   	// #7
    3b60:	ldr	x1, [x1]
    3b64:	bl	da0 <print>
    3b68:	mov	w28, w0
    3b6c:	b	25d0 <write_entry+0x478>
    3b70:	mov	w3, #0x0                   	// #0
    3b74:	b	3948 <write_entry+0x17f0>
    3b78:	adrp	x1, 0 <grub_strcasecmp>
    3b7c:	add	x0, x0, x2
    3b80:	mov	x2, #0x16                  	// #22
    3b84:	ldr	x1, [x1]
    3b88:	bl	0 <grub_memmove>
    3b8c:	ldr	x0, [x19, #8]
    3b90:	add	x0, x0, #0x16
    3b94:	str	x0, [x19, #8]
    3b98:	b	2c2c <write_entry+0xad4>
    3b9c:	adrp	x0, 0 <grub_strcasecmp>
    3ba0:	ldr	x0, [x0]
    3ba4:	ldr	w28, [x0]
    3ba8:	cbnz	w28, 27fc <write_entry+0x6a4>
    3bac:	ldp	x2, x0, [x19, #8]
    3bb0:	b	2bb0 <write_entry+0xa58>
    3bb4:	adrp	x0, 0 <grub_strcasecmp>
    3bb8:	ldr	x0, [x0]
    3bbc:	ldr	w28, [x0]
    3bc0:	cbnz	w28, 27fc <write_entry+0x6a4>
    3bc4:	ldp	x2, x0, [x19, #8]
    3bc8:	b	2aec <write_entry+0x994>
    3bcc:	adrp	x0, 0 <grub_strcasecmp>
    3bd0:	ldr	x0, [x0]
    3bd4:	ldr	w28, [x0]
    3bd8:	cbnz	w28, 27fc <write_entry+0x6a4>
    3bdc:	ldp	x2, x0, [x19, #8]
    3be0:	b	376c <write_entry+0x1614>
    3be4:	adrp	x0, 0 <grub_strcasecmp>
    3be8:	ldr	x0, [x0]
    3bec:	ldr	w28, [x0]
    3bf0:	cbnz	w28, 27fc <write_entry+0x6a4>
    3bf4:	ldp	x2, x0, [x19, #8]
    3bf8:	b	2570 <write_entry+0x418>
    3bfc:	mov	x21, x20
    3c00:	ldrb	w27, [x21]
    3c04:	strb	wzr, [x21]
    3c08:	ldr	w0, [x24, #104]
    3c0c:	cbnz	w0, 3ca8 <write_entry+0x1b50>
    3c10:	cmp	w22, #0x1
    3c14:	b.eq	41a0 <write_entry+0x2048>  // b.none
    3c18:	ldr	x1, [x26]
    3c1c:	mov	x0, x19
    3c20:	mov	x2, #0x1b                  	// #27
    3c24:	bl	da0 <print>
    3c28:	mov	w28, w0
    3c2c:	cbnz	w0, 27fc <write_entry+0x6a4>
    3c30:	ubfiz	x0, x22, #3, #2
    3c34:	ldr	x28, [x25, x0]
    3c38:	mov	x0, x28
    3c3c:	bl	0 <grub_strlen>
    3c40:	mov	x1, x28
    3c44:	mov	x2, x0
    3c48:	mov	x0, x19
    3c4c:	bl	da0 <print>
    3c50:	mov	w28, w0
    3c54:	cbnz	w0, 27fc <write_entry+0x6a4>
    3c58:	ldr	x1, [x23]
    3c5c:	mov	x0, x19
    3c60:	mov	x2, #0xf                   	// #15
    3c64:	bl	da0 <print>
    3c68:	mov	w28, w0
    3c6c:	cbnz	w0, 27fc <write_entry+0x6a4>
    3c70:	str	w22, [x24, #104]
    3c74:	mov	x2, x20
    3c78:	mov	x1, x24
    3c7c:	mov	x0, x19
    3c80:	bl	43c0 <print_entry>
    3c84:	str	wzr, [x24, #104]
    3c88:	adrp	x0, 0 <grub_strcasecmp>
    3c8c:	mov	x2, #0x3                   	// #3
    3c90:	ldr	x1, [x0]
    3c94:	mov	x0, x19
    3c98:	bl	da0 <print>
    3c9c:	mov	w28, w0
    3ca0:	cbnz	w0, 27fc <write_entry+0x6a4>
    3ca4:	ldr	w0, [x24, #104]
    3ca8:	cmp	w0, #0x0
    3cac:	ccmp	w0, w22, #0x0, ne  // ne = any
    3cb0:	b.eq	41c4 <write_entry+0x206c>  // b.none
    3cb4:	strb	w27, [x21]
    3cb8:	mov	x20, x21
    3cbc:	cbnz	w27, 3de0 <write_entry+0x1c88>
    3cc0:	ldp	x25, x26, [sp, #64]
    3cc4:	b	25cc <write_entry+0x474>
    3cc8:	adrp	x0, 0 <grub_strcasecmp>
    3ccc:	ldr	x0, [x0]
    3cd0:	ldr	w28, [x0]
    3cd4:	cbnz	w28, 27fc <write_entry+0x6a4>
    3cd8:	ldp	x2, x0, [x19, #8]
    3cdc:	b	35d0 <write_entry+0x1478>
    3ce0:	ldr	x1, [x26]
    3ce4:	mov	x0, x19
    3ce8:	mov	x2, #0x1                   	// #1
    3cec:	bl	da0 <print>
    3cf0:	mov	w28, w0
    3cf4:	ldp	x25, x26, [sp, #64]
    3cf8:	b	25d0 <write_entry+0x478>
    3cfc:	adrp	x0, 0 <grub_strcasecmp>
    3d00:	ldr	x0, [x0]
    3d04:	ldr	w28, [x0]
    3d08:	cbnz	w28, 27fc <write_entry+0x6a4>
    3d0c:	ldp	x3, x0, [x19, #8]
    3d10:	b	2e7c <write_entry+0xd24>
    3d14:	adrp	x0, 0 <grub_strcasecmp>
    3d18:	ldr	x0, [x0]
    3d1c:	ldr	w28, [x0]
    3d20:	cbnz	w28, 27fc <write_entry+0x6a4>
    3d24:	ldr	x3, [x19, #8]
    3d28:	b	38a8 <write_entry+0x1750>
    3d2c:	adrp	x1, 0 <grub_strcasecmp>
    3d30:	mov	x5, x20
    3d34:	mov	w0, w10
    3d38:	mov	w2, #0x6d                  	// #109
    3d3c:	ldr	x4, [x1]
    3d40:	ldp	x25, x26, [sp, #64]
    3d44:	b	2488 <write_entry+0x330>
    3d48:	adrp	x0, 0 <grub_strcasecmp>
    3d4c:	ldr	x0, [x0]
    3d50:	ldr	w28, [x0]
    3d54:	cbnz	w28, 27fc <write_entry+0x6a4>
    3d58:	ldr	x3, [x19, #8]
    3d5c:	b	2c78 <write_entry+0xb20>
    3d60:	adrp	x0, 0 <grub_strcasecmp>
    3d64:	ldr	x0, [x0]
    3d68:	ldr	w28, [x0]
    3d6c:	cbnz	w28, 27fc <write_entry+0x6a4>
    3d70:	ldr	x0, [x19, #16]
    3d74:	b	2c04 <write_entry+0xaac>
    3d78:	mov	w3, #0x0                   	// #0
    3d7c:	mov	w0, #0x72                  	// #114
    3d80:	b	395c <write_entry+0x1804>
    3d84:	adrp	x1, 0 <grub_strcasecmp>
    3d88:	mov	x0, x20
    3d8c:	ldr	x1, [x1]
    3d90:	bl	0 <grub_strcasecmp>
    3d94:	cbnz	w0, 4088 <write_entry+0x1f30>
    3d98:	adrp	x2, 0 <grub_strcasecmp>
    3d9c:	adrp	x1, 0 <grub_strcasecmp>
    3da0:	adrp	x0, 0 <grub_strcasecmp>
    3da4:	mov	w22, #0x1                   	// #1
    3da8:	ldr	x20, [x23, #56]
    3dac:	ldr	x0, [x0]
    3db0:	str	x0, [sp, #120]
    3db4:	ldr	x2, [x2]
    3db8:	ldr	x1, [x1]
    3dbc:	stp	x2, x1, [sp, #104]
    3dc0:	ldrb	w0, [x20]
    3dc4:	cbz	w0, 25cc <write_entry+0x474>
    3dc8:	adrp	x23, 0 <grub_strcasecmp>
    3dcc:	stp	x25, x26, [sp, #64]
    3dd0:	add	x25, sp, #0x60
    3dd4:	adrp	x26, 0 <grub_strcasecmp>
    3dd8:	b	3de0 <write_entry+0x1c88>
    3ddc:	add	x20, x20, #0x1
    3de0:	ldrb	w0, [x20]
    3de4:	bl	0 <grub_isspace>
    3de8:	cbnz	w0, 3ddc <write_entry+0x1c84>
    3dec:	ldrb	w0, [x20]
    3df0:	cbz	w0, 3bfc <write_entry+0x1aa4>
    3df4:	cmp	w0, #0x2d
    3df8:	b.ne	3fa8 <write_entry+0x1e50>  // b.any
    3dfc:	ldrb	w1, [x20, #1]
    3e00:	cbz	w1, 4030 <write_entry+0x1ed8>
    3e04:	sub	w3, w1, #0x41
    3e08:	mov	w2, w1
    3e0c:	cmp	w3, #0x19
    3e10:	b.ls	3f7c <write_entry+0x1e24>  // b.plast
    3e14:	cmp	w1, #0x69
    3e18:	b.ne	3e80 <write_entry+0x1d28>  // b.any
    3e1c:	ldrb	w3, [x20, #2]
    3e20:	cbz	w3, 3e80 <write_entry+0x1d28>
    3e24:	sub	w4, w3, #0x41
    3e28:	mov	w2, w3
    3e2c:	cmp	w4, #0x19
    3e30:	b.ls	3fc8 <write_entry+0x1e70>  // b.plast
    3e34:	cmp	w3, #0x73
    3e38:	b.ne	3e80 <write_entry+0x1d28>  // b.any
    3e3c:	ldrb	w3, [x20, #3]
    3e40:	cbz	w3, 3e80 <write_entry+0x1d28>
    3e44:	sub	w4, w3, #0x41
    3e48:	mov	w2, w3
    3e4c:	cmp	w4, #0x19
    3e50:	b.ls	3fb8 <write_entry+0x1e60>  // b.plast
    3e54:	cmp	w3, #0x6f
    3e58:	b.ne	3e80 <write_entry+0x1d28>  // b.any
    3e5c:	ldrb	w1, [x20, #4]
    3e60:	sub	w2, w1, #0x41
    3e64:	cmp	w2, #0x19
    3e68:	b.ls	3e74 <write_entry+0x1d1c>  // b.plast
    3e6c:	cmp	w1, #0x2d
    3e70:	b.eq	3f94 <write_entry+0x1e3c>  // b.none
    3e74:	cmp	w0, #0x2d
    3e78:	b.ne	3fb0 <write_entry+0x1e58>  // b.any
    3e7c:	ldrb	w1, [x20, #1]
    3e80:	cbz	w1, 4030 <write_entry+0x1ed8>
    3e84:	sub	w2, w1, #0x41
    3e88:	cmp	w2, #0x19
    3e8c:	b.ls	3fd8 <write_entry+0x1e80>  // b.plast
    3e90:	cmp	w1, #0x70
    3e94:	b.ne	3ef4 <write_entry+0x1d9c>  // b.any
    3e98:	ldrb	w2, [x20, #2]
    3e9c:	cbz	w2, 3ef4 <write_entry+0x1d9c>
    3ea0:	sub	w3, w2, #0x41
    3ea4:	cmp	w3, #0x19
    3ea8:	b.ls	405c <write_entry+0x1f04>  // b.plast
    3eac:	cmp	w2, #0x78
    3eb0:	b.ne	3ef4 <write_entry+0x1d9c>  // b.any
    3eb4:	ldrb	w2, [x20, #3]
    3eb8:	cbz	w2, 3ef4 <write_entry+0x1d9c>
    3ebc:	sub	w3, w2, #0x41
    3ec0:	cmp	w3, #0x19
    3ec4:	b.ls	4004 <write_entry+0x1eac>  // b.plast
    3ec8:	cmp	w2, #0x65
    3ecc:	b.ne	3ef4 <write_entry+0x1d9c>  // b.any
    3ed0:	ldrb	w1, [x20, #4]
    3ed4:	sub	w2, w1, #0x41
    3ed8:	cmp	w2, #0x19
    3edc:	b.ls	3ee8 <write_entry+0x1d90>  // b.plast
    3ee0:	cmp	w1, #0x2d
    3ee4:	b.eq	3ff0 <write_entry+0x1e98>  // b.none
    3ee8:	cmp	w0, #0x2d
    3eec:	b.ne	4070 <write_entry+0x1f18>  // b.any
    3ef0:	ldrb	w1, [x20, #1]
    3ef4:	cbz	w1, 4030 <write_entry+0x1ed8>
    3ef8:	sub	w3, w1, #0x41
    3efc:	mov	w2, w1
    3f00:	cmp	w3, #0x19
    3f04:	b.ls	404c <write_entry+0x1ef4>  // b.plast
    3f08:	cmp	w1, #0x73
    3f0c:	b.ne	4030 <write_entry+0x1ed8>  // b.any
    3f10:	ldrb	w1, [x20, #2]
    3f14:	cbz	w1, 4030 <write_entry+0x1ed8>
    3f18:	sub	w3, w1, #0x41
    3f1c:	mov	w2, w1
    3f20:	cmp	w3, #0x19
    3f24:	b.ls	4018 <write_entry+0x1ec0>  // b.plast
    3f28:	cmp	w1, #0x79
    3f2c:	b.ne	4030 <write_entry+0x1ed8>  // b.any
    3f30:	ldrb	w1, [x20, #3]
    3f34:	cbz	w1, 4030 <write_entry+0x1ed8>
    3f38:	sub	w3, w1, #0x41
    3f3c:	mov	w2, w1
    3f40:	cmp	w3, #0x19
    3f44:	b.ls	4078 <write_entry+0x1f20>  // b.plast
    3f48:	cmp	w1, #0x73
    3f4c:	b.ne	4030 <write_entry+0x1ed8>  // b.any
    3f50:	ldrb	w1, [x20, #4]
    3f54:	sub	w2, w1, #0x41
    3f58:	cmp	w2, #0x19
    3f5c:	b.ls	4030 <write_entry+0x1ed8>  // b.plast
    3f60:	cmp	w1, #0x2d
    3f64:	b.ne	4030 <write_entry+0x1ed8>  // b.any
    3f68:	ldrb	w27, [x20, #5]
    3f6c:	mov	w22, #0x3                   	// #3
    3f70:	add	x20, x20, #0x5
    3f74:	cbnz	w27, 3de0 <write_entry+0x1c88>
    3f78:	b	3cc0 <write_entry+0x1b68>
    3f7c:	cmp	w1, #0x49
    3f80:	b.eq	3e1c <write_entry+0x1cc4>  // b.none
    3f84:	mov	w3, #0x69                  	// #105
    3f88:	add	w2, w2, #0x20
    3f8c:	cmp	w2, w3
    3f90:	b.ne	3e80 <write_entry+0x1d28>  // b.any
    3f94:	ldrb	w27, [x20, #5]
    3f98:	mov	w22, #0x1                   	// #1
    3f9c:	add	x20, x20, #0x5
    3fa0:	cbnz	w27, 3de0 <write_entry+0x1c88>
    3fa4:	b	3cc0 <write_entry+0x1b68>
    3fa8:	mov	w1, w0
    3fac:	b	3e60 <write_entry+0x1d08>
    3fb0:	mov	w1, w0
    3fb4:	b	3ed4 <write_entry+0x1d7c>
    3fb8:	cmp	w3, #0x4f
    3fbc:	b.eq	3e5c <write_entry+0x1d04>  // b.none
    3fc0:	mov	w3, #0x6f                  	// #111
    3fc4:	b	3f88 <write_entry+0x1e30>
    3fc8:	cmp	w3, #0x53
    3fcc:	b.eq	3e3c <write_entry+0x1ce4>  // b.none
    3fd0:	mov	w3, #0x73                  	// #115
    3fd4:	b	3f88 <write_entry+0x1e30>
    3fd8:	cmp	w1, #0x50
    3fdc:	b.eq	3e98 <write_entry+0x1d40>  // b.none
    3fe0:	add	w2, w1, #0x20
    3fe4:	mov	w3, #0x70                  	// #112
    3fe8:	cmp	w3, w2
    3fec:	b.ne	3ef4 <write_entry+0x1d9c>  // b.any
    3ff0:	ldrb	w27, [x20, #5]
    3ff4:	mov	w22, #0x2                   	// #2
    3ff8:	add	x20, x20, #0x5
    3ffc:	cbnz	w27, 3de0 <write_entry+0x1c88>
    4000:	b	3cc0 <write_entry+0x1b68>
    4004:	cmp	w2, #0x45
    4008:	b.eq	3ed0 <write_entry+0x1d78>  // b.none
    400c:	add	w2, w2, #0x20
    4010:	mov	w3, #0x65                  	// #101
    4014:	b	3fe8 <write_entry+0x1e90>
    4018:	cmp	w1, #0x59
    401c:	b.eq	3f30 <write_entry+0x1dd8>  // b.none
    4020:	mov	w1, #0x79                  	// #121
    4024:	add	w2, w2, #0x20
    4028:	cmp	w2, w1
    402c:	b.eq	3f68 <write_entry+0x1e10>  // b.none
    4030:	mov	x21, x20
    4034:	b	4040 <write_entry+0x1ee8>
    4038:	ldrb	w0, [x21, #1]!
    403c:	cbz	w0, 3c00 <write_entry+0x1aa8>
    4040:	bl	0 <grub_isspace>
    4044:	cbz	w0, 4038 <write_entry+0x1ee0>
    4048:	b	3c00 <write_entry+0x1aa8>
    404c:	cmp	w1, #0x53
    4050:	b.eq	3f10 <write_entry+0x1db8>  // b.none
    4054:	mov	w1, #0x73                  	// #115
    4058:	b	4024 <write_entry+0x1ecc>
    405c:	cmp	w2, #0x58
    4060:	b.eq	3eb4 <write_entry+0x1d5c>  // b.none
    4064:	add	w2, w2, #0x20
    4068:	mov	w3, #0x78                  	// #120
    406c:	b	3fe8 <write_entry+0x1e90>
    4070:	mov	w1, w0
    4074:	b	3f54 <write_entry+0x1dfc>
    4078:	cmp	w1, #0x53
    407c:	b.eq	3f50 <write_entry+0x1df8>  // b.none
    4080:	mov	w1, #0x73                  	// #115
    4084:	b	4024 <write_entry+0x1ecc>
    4088:	adrp	x1, 0 <grub_strcasecmp>
    408c:	mov	x0, x20
    4090:	ldr	x1, [x1]
    4094:	bl	0 <grub_strcasecmp>
    4098:	cbnz	w0, 4134 <write_entry+0x1fdc>
    409c:	ldr	x21, [x23, #56]
    40a0:	cbz	x21, 3130 <write_entry+0xfd8>
    40a4:	ldrb	w0, [x21]
    40a8:	cbz	w0, 25cc <write_entry+0x474>
    40ac:	adrp	x1, 0 <grub_strcasecmp>
    40b0:	adrp	x23, 0 <grub_strcasecmp>
    40b4:	ldr	x22, [x1]
    40b8:	mov	x20, x21
    40bc:	b	40c8 <write_entry+0x1f70>
    40c0:	ldrb	w0, [x20, #1]!
    40c4:	cbz	w0, 40dc <write_entry+0x1f84>
    40c8:	bl	0 <grub_isspace>
    40cc:	cbz	w0, 40c0 <write_entry+0x1f68>
    40d0:	ldrb	w0, [x20]
    40d4:	cbz	w0, 40dc <write_entry+0x1f84>
    40d8:	strb	wzr, [x20], #1
    40dc:	mov	x1, x22
    40e0:	mov	x0, x21
    40e4:	bl	0 <grub_strcmp>
    40e8:	cbnz	w0, 4118 <write_entry+0x1fc0>
    40ec:	ldrb	w0, [x20]
    40f0:	cbnz	w0, 4100 <write_entry+0x1fa8>
    40f4:	b	25cc <write_entry+0x474>
    40f8:	ldrb	w0, [x20, #1]!
    40fc:	cbz	w0, 25cc <write_entry+0x474>
    4100:	bl	0 <grub_isspace>
    4104:	cbnz	w0, 40f8 <write_entry+0x1fa0>
    4108:	ldrb	w0, [x20]
    410c:	cbz	w0, 25cc <write_entry+0x474>
    4110:	mov	x21, x20
    4114:	b	40b8 <write_entry+0x1f60>
    4118:	ldr	x3, [x23]
    411c:	mov	x2, x21
    4120:	mov	x1, x24
    4124:	mov	x0, x19
    4128:	bl	4e30 <print_config>
    412c:	cbz	w0, 40ec <write_entry+0x1f94>
    4130:	b	25cc <write_entry+0x474>
    4134:	adrp	x1, 0 <grub_strcasecmp>
    4138:	mov	x0, x20
    413c:	ldr	x1, [x1]
    4140:	bl	0 <grub_strcasecmp>
    4144:	cbz	w0, 409c <write_entry+0x1f44>
    4148:	adrp	x1, 0 <grub_strcasecmp>
    414c:	mov	x0, x19
    4150:	mov	x2, #0x18                  	// #24
    4154:	ldr	x1, [x1]
    4158:	bl	da0 <print>
    415c:	mov	w28, w0
    4160:	cbnz	w0, 25d0 <write_entry+0x478>
    4164:	mov	x0, x20
    4168:	bl	0 <grub_strlen>
    416c:	mov	x1, x20
    4170:	mov	x2, x0
    4174:	mov	x0, x19
    4178:	bl	da0 <print>
    417c:	mov	w28, w0
    4180:	cbnz	w0, 25d0 <write_entry+0x478>
    4184:	adrp	x1, 0 <grub_strcasecmp>
    4188:	mov	x0, x19
    418c:	mov	x2, #0x7                   	// #7
    4190:	ldr	x1, [x1]
    4194:	bl	da0 <print>
    4198:	mov	w28, w0
    419c:	b	25d0 <write_entry+0x478>
    41a0:	adrp	x1, 0 <grub_strcasecmp>
    41a4:	mov	x0, x19
    41a8:	mov	x2, #0x47                  	// #71
    41ac:	ldr	x1, [x1]
    41b0:	bl	da0 <print>
    41b4:	mov	w28, w0
    41b8:	cbz	w0, 3c70 <write_entry+0x1b18>
    41bc:	ldp	x25, x26, [sp, #64]
    41c0:	b	2800 <write_entry+0x6a8>
    41c4:	mov	x2, x20
    41c8:	mov	x1, x24
    41cc:	mov	x0, x19
    41d0:	bl	43c0 <print_entry>
    41d4:	b	3cb4 <write_entry+0x1b5c>
    41d8:	adrp	x1, 0 <grub_strcasecmp>
    41dc:	mov	x0, x19
    41e0:	mov	x2, #0x11                  	// #17
    41e4:	ldr	x1, [x1]
    41e8:	bl	da0 <print>
    41ec:	mov	w28, w0
    41f0:	cbz	w0, 3458 <write_entry+0x1300>
    41f4:	ldp	x25, x26, [sp, #64]
    41f8:	b	2800 <write_entry+0x6a8>
    41fc:	adrp	x0, 0 <grub_strcasecmp>
    4200:	ldr	x0, [x0]
    4204:	ldr	w28, [x0]
    4208:	cbnz	w28, 27fc <write_entry+0x6a4>
    420c:	ldp	x3, x0, [x19, #8]
    4210:	b	338c <write_entry+0x1234>
    4214:	adrp	x0, 0 <grub_strcasecmp>
    4218:	ldr	x0, [x0]
    421c:	ldr	w28, [x0]
    4220:	cbnz	w28, 25d0 <write_entry+0x478>
    4224:	ldr	x3, [x19, #8]
    4228:	b	3104 <write_entry+0xfac>
    422c:	ldp	x2, x0, [x19, #8]
    4230:	b	23ac <write_entry+0x254>
    4234:	nop
	...

00000000000043c0 <print_entry>:
    43c0:	stp	x29, x30, [sp, #-48]!
    43c4:	mov	x29, sp
    43c8:	stp	x19, x20, [sp, #16]
    43cc:	ldr	x19, [x1, #8]
    43d0:	cbz	x19, 4444 <print_entry+0x84>
    43d4:	mov	x20, x0
    43d8:	stp	x21, x22, [sp, #32]
    43dc:	mov	x22, x1
    43e0:	mov	x21, x2
    43e4:	nop
    43e8:	ldr	x7, [x19, #16]
    43ec:	mov	x5, x21
    43f0:	ldrb	w4, [x7]
    43f4:	cbnz	w4, 4410 <print_entry+0x50>
    43f8:	b	4454 <print_entry+0x94>
    43fc:	csel	w6, w6, w3, cc  // cc = lo, ul, last
    4400:	cmp	w6, w10
    4404:	b.ne	4498 <print_entry+0xd8>  // b.any
    4408:	ldrb	w4, [x7, #1]!
    440c:	cbz	w4, 4454 <print_entry+0x94>
    4410:	ldrb	w3, [x5]
    4414:	sub	w9, w4, #0x41
    4418:	cmp	w9, #0x1a
    441c:	add	w8, w4, #0x20
    4420:	sub	w0, w3, #0x41
    4424:	csel	w10, w8, w4, cc  // cc = lo, ul, last
    4428:	add	x5, x5, #0x1
    442c:	add	w6, w3, #0x20
    4430:	cmp	w0, #0x1a
    4434:	cbnz	w3, 43fc <print_entry+0x3c>
    4438:	ldr	x19, [x19]
    443c:	cbnz	x19, 43e8 <print_entry+0x28>
    4440:	ldp	x21, x22, [sp, #32]
    4444:	mov	w0, #0x0                   	// #0
    4448:	ldp	x19, x20, [sp, #16]
    444c:	ldp	x29, x30, [sp], #48
    4450:	ret
    4454:	ldrb	w3, [x5]
    4458:	mov	w4, #0x0                   	// #0
    445c:	sub	w0, w3, #0x41
    4460:	cmp	w0, #0x1a
    4464:	add	w0, w3, #0x20
    4468:	csel	w3, w0, w3, cc  // cc = lo, ul, last
    446c:	cmp	w4, w3
    4470:	b.ne	4438 <print_entry+0x78>  // b.any
    4474:	mov	x2, x19
    4478:	mov	x1, x22
    447c:	mov	x0, x20
    4480:	bl	2158 <write_entry>
    4484:	cbz	w0, 4438 <print_entry+0x78>
    4488:	ldp	x19, x20, [sp, #16]
    448c:	ldp	x21, x22, [sp, #32]
    4490:	ldp	x29, x30, [sp], #48
    4494:	ret
    4498:	cmp	w9, #0x1a
    449c:	csel	w4, w8, w4, cc  // cc = lo, ul, last
    44a0:	b	4460 <print_entry+0xa0>
    44a4:	nop

00000000000044a8 <config_file>:
    44a8:	stp	x29, x30, [sp, #-208]!
    44ac:	mov	x29, sp
    44b0:	stp	x23, x24, [sp, #48]
    44b4:	mov	x24, x2
    44b8:	mov	x2, #0x70                  	// #112
    44bc:	stp	x25, x26, [sp, #64]
    44c0:	mov	x25, x1
    44c4:	mov	w1, #0x0                   	// #0
    44c8:	mov	x23, x3
    44cc:	mov	x26, x6
    44d0:	stp	x19, x20, [sp, #16]
    44d4:	mov	w20, w7
    44d8:	mov	x19, x0
    44dc:	add	x0, sp, #0x60
    44e0:	stp	x21, x22, [sp, #32]
    44e4:	mov	x22, x4
    44e8:	mov	x21, x5
    44ec:	bl	0 <grub_memset>
    44f0:	add	x0, sp, #0x60
    44f4:	str	x26, [sp, #96]
    44f8:	stp	x25, x24, [sp, #136]
    44fc:	stp	x23, x22, [sp, #152]
    4500:	str	x21, [sp, #168]
    4504:	str	w20, [sp, #200]
    4508:	bl	f98 <syslinux_parse_real>
    450c:	cbnz	w0, 4584 <config_file+0xdc>
    4510:	ldr	x20, [sp, #192]
    4514:	cbz	x20, 4528 <config_file+0x80>
    4518:	ldr	x0, [x20]
    451c:	cbz	x0, 459c <config_file+0xf4>
    4520:	mov	x20, x0
    4524:	cbnz	x20, 4518 <config_file+0x70>
    4528:	ldr	x0, [sp, #128]
    452c:	cbz	x0, 4710 <config_file+0x268>
    4530:	ldp	x1, x2, [x19]
    4534:	ldr	x0, [x19, #16]
    4538:	sub	x1, x1, x2
    453c:	cmp	x1, #0x13
    4540:	b.ls	4694 <config_file+0x1ec>  // b.plast
    4544:	adrp	x1, 0 <grub_strcasecmp>
    4548:	add	x0, x0, x2
    454c:	mov	x2, #0x13                  	// #19
    4550:	ldr	x1, [x1]
    4554:	bl	0 <grub_memmove>
    4558:	ldr	x0, [x19, #8]
    455c:	add	x2, sp, #0xa0
    4560:	ldr	x3, [sp, #128]
    4564:	add	x0, x0, #0x13
    4568:	str	x0, [x19, #8]
    456c:	add	x0, sp, #0x60
    4570:	add	x1, x0, #0x30
    4574:	mov	x4, #0x0                   	// #0
    4578:	mov	x0, x19
    457c:	bl	1f38 <print_file.isra.0>
    4580:	cbz	w0, 46b8 <config_file+0x210>
    4584:	ldp	x19, x20, [sp, #16]
    4588:	ldp	x21, x22, [sp, #32]
    458c:	ldp	x23, x24, [sp, #48]
    4590:	ldp	x25, x26, [sp, #64]
    4594:	ldp	x29, x30, [sp], #208
    4598:	ret
    459c:	adrp	x23, 0 <grub_strcasecmp>
    45a0:	adrp	x21, 0 <grub_strcasecmp>
    45a4:	adrp	x22, 0 <grub_strcasecmp>
    45a8:	b	463c <config_file+0x194>
    45ac:	ldr	x2, [x19, #8]
    45b0:	str	x24, [x19]
    45b4:	str	x0, [x19, #16]
    45b8:	ldr	x1, [x21]
    45bc:	add	x0, x0, x2
    45c0:	mov	x2, #0x5                   	// #5
    45c4:	bl	0 <grub_memmove>
    45c8:	ldr	x2, [x19, #8]
    45cc:	add	x1, x20, #0x10
    45d0:	mov	x0, x19
    45d4:	add	x2, x2, #0x5
    45d8:	str	x2, [x19, #8]
    45dc:	bl	e48 <print_escaped.constprop.0>
    45e0:	cbnz	w0, 4584 <config_file+0xdc>
    45e4:	ldp	x1, x2, [x19]
    45e8:	ldr	x0, [x19, #16]
    45ec:	sub	x1, x1, x2
    45f0:	cmp	x1, #0x1
    45f4:	b.hi	4618 <config_file+0x170>  // b.pmore
    45f8:	add	x2, x2, #0xb
    45fc:	lsl	x24, x2, #1
    4600:	mov	x1, x24
    4604:	bl	0 <grub_realloc>
    4608:	cbz	x0, 4680 <config_file+0x1d8>
    460c:	ldr	x2, [x19, #8]
    4610:	str	x24, [x19]
    4614:	str	x0, [x19, #16]
    4618:	ldr	x1, [x22]
    461c:	add	x0, x0, x2
    4620:	mov	x2, #0x1                   	// #1
    4624:	bl	0 <grub_memmove>
    4628:	ldr	x0, [x19, #8]
    462c:	ldr	x20, [x20, #8]
    4630:	add	x0, x0, #0x1
    4634:	str	x0, [x19, #8]
    4638:	cbz	x20, 4528 <config_file+0x80>
    463c:	ldr	x0, [x20, #8]
    4640:	cbz	x0, 4528 <config_file+0x80>
    4644:	ldp	x1, x2, [x19]
    4648:	ldr	x0, [x19, #16]
    464c:	sub	x1, x1, x2
    4650:	cmp	x1, #0x5
    4654:	b.hi	45b8 <config_file+0x110>  // b.pmore
    4658:	add	x2, x2, #0xf
    465c:	lsl	x24, x2, #1
    4660:	mov	x1, x24
    4664:	bl	0 <grub_realloc>
    4668:	cbnz	x0, 45ac <config_file+0x104>
    466c:	ldr	x0, [x23]
    4670:	ldr	w0, [x0]
    4674:	cbnz	w0, 4584 <config_file+0xdc>
    4678:	ldp	x2, x0, [x19, #8]
    467c:	b	45b8 <config_file+0x110>
    4680:	ldr	x0, [x23]
    4684:	ldr	w0, [x0]
    4688:	cbnz	w0, 4584 <config_file+0xdc>
    468c:	ldp	x2, x0, [x19, #8]
    4690:	b	4618 <config_file+0x170>
    4694:	add	x2, x2, #0x1d
    4698:	lsl	x20, x2, #1
    469c:	mov	x1, x20
    46a0:	bl	0 <grub_realloc>
    46a4:	cbz	x0, 4c98 <config_file+0x7f0>
    46a8:	str	x20, [x19]
    46ac:	str	x0, [x19, #16]
    46b0:	ldr	x2, [x19, #8]
    46b4:	b	4544 <config_file+0x9c>
    46b8:	ldp	x1, x2, [x19]
    46bc:	ldr	x0, [x19, #16]
    46c0:	sub	x1, x1, x2
    46c4:	cmp	x1, #0x1
    46c8:	b.hi	46ec <config_file+0x244>  // b.pmore
    46cc:	add	x2, x2, #0xb
    46d0:	lsl	x20, x2, #1
    46d4:	mov	x1, x20
    46d8:	bl	0 <grub_realloc>
    46dc:	cbz	x0, 4cf8 <config_file+0x850>
    46e0:	ldr	x2, [x19, #8]
    46e4:	str	x20, [x19]
    46e8:	str	x0, [x19, #16]
    46ec:	adrp	x1, 0 <grub_strcasecmp>
    46f0:	add	x0, x0, x2
    46f4:	mov	x2, #0x1                   	// #1
    46f8:	ldr	x1, [x1]
    46fc:	bl	0 <grub_memmove>
    4700:	ldr	x0, [x19, #8]
    4704:	add	x0, x0, #0x1
    4708:	str	x0, [x19, #8]
    470c:	nop
    4710:	ldr	x21, [sp, #120]
    4714:	cbz	x21, 4754 <config_file+0x2ac>
    4718:	mov	x0, x21
    471c:	bl	0 <grub_strlen>
    4720:	ldp	x1, x2, [x19]
    4724:	mov	x20, x0
    4728:	sub	x1, x1, x2
    472c:	cmp	x0, x1
    4730:	b.cs	4c48 <config_file+0x7a0>  // b.hs, b.nlast
    4734:	ldr	x0, [x19, #16]
    4738:	add	x0, x0, x2
    473c:	mov	x1, x21
    4740:	mov	x2, x20
    4744:	bl	0 <grub_memmove>
    4748:	ldr	x0, [x19, #8]
    474c:	add	x0, x0, x20
    4750:	str	x0, [x19, #8]
    4754:	ldr	x0, [sp, #184]
    4758:	ldr	x1, [sp, #104]
    475c:	cbnz	x0, 4828 <config_file+0x380>
    4760:	ldr	x0, [sp, #112]
    4764:	cbz	x1, 4784 <config_file+0x2dc>
    4768:	cbz	x0, 4830 <config_file+0x388>
    476c:	mov	x2, x0
    4770:	add	x1, sp, #0x60
    4774:	mov	x0, x19
    4778:	bl	43c0 <print_entry>
    477c:	cbnz	w0, 4584 <config_file+0xdc>
    4780:	ldr	x0, [sp, #112]
    4784:	bl	0 <grub_free>
    4788:	ldr	x0, [sp, #120]
    478c:	bl	0 <grub_free>
    4790:	ldr	x0, [sp, #128]
    4794:	bl	0 <grub_free>
    4798:	ldr	x19, [sp, #192]
    479c:	cbz	x19, 47b0 <config_file+0x308>
    47a0:	mov	x0, x19
    47a4:	ldr	x19, [x19]
    47a8:	bl	0 <grub_free>
    47ac:	cbnz	x19, 47a0 <config_file+0x2f8>
    47b0:	ldr	x22, [sp, #104]
    47b4:	cbz	x22, 4820 <config_file+0x378>
    47b8:	ldr	x19, [x22, #40]
    47bc:	mov	x21, x22
    47c0:	ldr	x22, [x22]
    47c4:	cbz	x19, 47e4 <config_file+0x33c>
    47c8:	mov	x20, x19
    47cc:	ldr	x19, [x19]
    47d0:	ldr	x0, [x20, #8]
    47d4:	bl	0 <grub_free>
    47d8:	mov	x0, x20
    47dc:	bl	0 <grub_free>
    47e0:	cbnz	x19, 47c8 <config_file+0x320>
    47e4:	ldr	x0, [x21, #80]
    47e8:	bl	0 <grub_free>
    47ec:	ldr	x0, [x21, #32]
    47f0:	bl	0 <grub_free>
    47f4:	ldr	x0, [x21, #16]
    47f8:	bl	0 <grub_free>
    47fc:	ldr	x0, [x21, #24]
    4800:	bl	0 <grub_free>
    4804:	ldr	x0, [x21, #56]
    4808:	bl	0 <grub_free>
    480c:	ldr	x0, [x21, #72]
    4810:	bl	0 <grub_free>
    4814:	mov	x0, x21
    4818:	bl	0 <grub_free>
    481c:	cbnz	x22, 47b8 <config_file+0x310>
    4820:	mov	w0, #0x0                   	// #0
    4824:	b	4584 <config_file+0xdc>
    4828:	cbz	x1, 4780 <config_file+0x2d8>
    482c:	nop
    4830:	mov	x20, x1
    4834:	ldr	x1, [x1]
    4838:	cbnz	x1, 4830 <config_file+0x388>
    483c:	ldp	x1, x2, [x19]
    4840:	ldr	x0, [x19, #16]
    4844:	sub	x1, x1, x2
    4848:	cmp	x1, #0xc
    484c:	b.ls	4c74 <config_file+0x7cc>  // b.plast
    4850:	adrp	x1, 0 <grub_strcasecmp>
    4854:	add	x0, x0, x2
    4858:	mov	x2, #0xc                   	// #12
    485c:	ldr	x1, [x1]
    4860:	bl	0 <grub_memmove>
    4864:	ldr	x1, [sp, #184]
    4868:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    486c:	ldr	x2, [x19, #8]
    4870:	add	x1, x1, #0x9
    4874:	movk	x3, #0xcccd
    4878:	mov	x0, x19
    487c:	add	x2, x2, #0xc
    4880:	str	x2, [x19, #8]
    4884:	umulh	x1, x1, x3
    4888:	ubfx	x1, x1, #3, #32
    488c:	bl	1920 <print_num>
    4890:	cbnz	w0, 4584 <config_file+0xdc>
    4894:	ldp	x1, x2, [x19]
    4898:	ldr	x0, [x19, #16]
    489c:	sub	x1, x1, x2
    48a0:	cmp	x1, #0x1
    48a4:	b.hi	48c8 <config_file+0x420>  // b.pmore
    48a8:	add	x2, x2, #0xb
    48ac:	lsl	x21, x2, #1
    48b0:	mov	x1, x21
    48b4:	bl	0 <grub_realloc>
    48b8:	cbz	x0, 4d88 <config_file+0x8e0>
    48bc:	ldr	x2, [x19, #8]
    48c0:	str	x21, [x19]
    48c4:	str	x0, [x19, #16]
    48c8:	adrp	x21, 0 <grub_strcasecmp>
    48cc:	add	x0, x0, x2
    48d0:	mov	x2, #0x1                   	// #1
    48d4:	ldr	x1, [x21]
    48d8:	bl	0 <grub_memmove>
    48dc:	ldr	x1, [x19, #8]
    48e0:	ldr	x0, [sp, #112]
    48e4:	add	x2, x1, #0x1
    48e8:	str	x2, [x19, #8]
    48ec:	cbz	x0, 49a8 <config_file+0x500>
    48f0:	ldr	x3, [x19]
    48f4:	ldr	x0, [x19, #16]
    48f8:	sub	x3, x3, x2
    48fc:	cmp	x3, #0x9
    4900:	b.hi	4924 <config_file+0x47c>  // b.pmore
    4904:	add	x1, x1, #0x14
    4908:	lsl	x22, x1, #1
    490c:	mov	x1, x22
    4910:	bl	0 <grub_realloc>
    4914:	cbz	x0, 4da0 <config_file+0x8f8>
    4918:	ldr	x2, [x19, #8]
    491c:	str	x22, [x19]
    4920:	str	x0, [x19, #16]
    4924:	adrp	x1, 0 <grub_strcasecmp>
    4928:	add	x0, x0, x2
    492c:	mov	x2, #0x9                   	// #9
    4930:	ldr	x1, [x1]
    4934:	bl	0 <grub_memmove>
    4938:	ldr	x2, [x19, #8]
    493c:	mov	x0, x19
    4940:	ldr	x1, [sp, #112]
    4944:	add	x2, x2, #0x9
    4948:	str	x2, [x19, #8]
    494c:	bl	e48 <print_escaped.constprop.0>
    4950:	cbnz	w0, 4584 <config_file+0xdc>
    4954:	ldp	x0, x3, [x19]
    4958:	sub	x0, x0, x3
    495c:	cmp	x0, #0x1
    4960:	b.hi	4988 <config_file+0x4e0>  // b.pmore
    4964:	ldr	x0, [x19, #16]
    4968:	add	x3, x3, #0xb
    496c:	lsl	x22, x3, #1
    4970:	mov	x1, x22
    4974:	bl	0 <grub_realloc>
    4978:	cbz	x0, 4db8 <config_file+0x910>
    497c:	ldr	x3, [x19, #8]
    4980:	str	x22, [x19]
    4984:	str	x0, [x19, #16]
    4988:	ldr	x1, [x21]
    498c:	mov	x2, #0x1                   	// #1
    4990:	ldr	x0, [x19, #16]
    4994:	add	x0, x0, x3
    4998:	bl	0 <grub_memmove>
    499c:	ldr	x2, [x19, #8]
    49a0:	add	x2, x2, #0x1
    49a4:	str	x2, [x19, #8]
    49a8:	adrp	x21, 0 <grub_strcasecmp>
    49ac:	adrp	x22, 0 <grub_strcasecmp>
    49b0:	adrp	x23, 0 <grub_strcasecmp>
    49b4:	b	4be8 <config_file+0x740>
    49b8:	mov	x0, x19
    49bc:	bl	e48 <print_escaped.constprop.0>
    49c0:	cbnz	w0, 4584 <config_file+0xdc>
    49c4:	ldp	x1, x2, [x19]
    49c8:	ldrb	w3, [x20, #96]
    49cc:	ldr	x0, [x19, #16]
    49d0:	sub	x1, x1, x2
    49d4:	cbz	w3, 4acc <config_file+0x624>
    49d8:	strb	w3, [sp, #88]
    49dc:	cmp	x1, #0xb
    49e0:	strb	wzr, [sp, #89]
    49e4:	b.hi	4a08 <config_file+0x560>  // b.pmore
    49e8:	add	x2, x2, #0x15
    49ec:	lsl	x24, x2, #1
    49f0:	mov	x1, x24
    49f4:	bl	0 <grub_realloc>
    49f8:	cbz	x0, 4d74 <config_file+0x8cc>
    49fc:	ldr	x2, [x19, #8]
    4a00:	str	x24, [x19]
    4a04:	str	x0, [x19, #16]
    4a08:	ldr	x1, [x23]
    4a0c:	add	x0, x0, x2
    4a10:	mov	x2, #0xb                   	// #11
    4a14:	bl	0 <grub_memmove>
    4a18:	ldp	x2, x1, [x19]
    4a1c:	add	x0, x1, #0xb
    4a20:	str	x0, [x19, #8]
    4a24:	sub	x2, x2, x0
    4a28:	cmp	x2, #0x1
    4a2c:	b.hi	4cf0 <config_file+0x848>  // b.pmore
    4a30:	add	x1, x1, #0x16
    4a34:	ldr	x0, [x19, #16]
    4a38:	lsl	x24, x1, #1
    4a3c:	mov	x1, x24
    4a40:	bl	0 <grub_realloc>
    4a44:	mov	x1, x0
    4a48:	cbz	x0, 4ce0 <config_file+0x838>
    4a4c:	ldr	x0, [x19, #8]
    4a50:	str	x24, [x19]
    4a54:	str	x1, [x19, #16]
    4a58:	add	x0, x1, x0
    4a5c:	mov	x2, #0x1                   	// #1
    4a60:	add	x1, sp, #0x58
    4a64:	bl	0 <grub_memmove>
    4a68:	ldp	x0, x1, [x19]
    4a6c:	add	x2, x1, #0x1
    4a70:	str	x2, [x19, #8]
    4a74:	sub	x0, x0, x2
    4a78:	cmp	x0, #0x1
    4a7c:	ldr	x0, [x19, #16]
    4a80:	b.hi	4aa4 <config_file+0x5fc>  // b.pmore
    4a84:	add	x1, x1, #0xc
    4a88:	lsl	x24, x1, #1
    4a8c:	mov	x1, x24
    4a90:	bl	0 <grub_realloc>
    4a94:	cbz	x0, 4d60 <config_file+0x8b8>
    4a98:	ldr	x2, [x19, #8]
    4a9c:	str	x24, [x19]
    4aa0:	str	x0, [x19, #16]
    4aa4:	adrp	x1, 0 <grub_strcasecmp>
    4aa8:	add	x0, x0, x2
    4aac:	mov	x2, #0x1                   	// #1
    4ab0:	ldr	x1, [x1]
    4ab4:	bl	0 <grub_memmove>
    4ab8:	ldp	x1, x2, [x19]
    4abc:	ldr	x0, [x19, #16]
    4ac0:	add	x2, x2, #0x1
    4ac4:	str	x2, [x19, #8]
    4ac8:	sub	x1, x1, x2
    4acc:	cmp	x1, #0x6
    4ad0:	b.hi	4af4 <config_file+0x64c>  // b.pmore
    4ad4:	add	x2, x2, #0x10
    4ad8:	lsl	x24, x2, #1
    4adc:	mov	x1, x24
    4ae0:	bl	0 <grub_realloc>
    4ae4:	cbz	x0, 4d24 <config_file+0x87c>
    4ae8:	ldr	x2, [x19, #8]
    4aec:	str	x24, [x19]
    4af0:	str	x0, [x19, #16]
    4af4:	adrp	x1, 0 <grub_strcasecmp>
    4af8:	add	x0, x0, x2
    4afc:	mov	x2, #0x6                   	// #6
    4b00:	ldr	x1, [x1]
    4b04:	bl	0 <grub_memmove>
    4b08:	ldr	x2, [x19, #8]
    4b0c:	mov	x0, x19
    4b10:	ldr	x1, [x20, #16]
    4b14:	add	x2, x2, #0x6
    4b18:	str	x2, [x19, #8]
    4b1c:	bl	e48 <print_escaped.constprop.0>
    4b20:	cbnz	w0, 4584 <config_file+0xdc>
    4b24:	ldp	x1, x2, [x19]
    4b28:	ldr	x0, [x19, #16]
    4b2c:	sub	x1, x1, x2
    4b30:	cmp	x1, #0x3
    4b34:	b.hi	4b58 <config_file+0x6b0>  // b.pmore
    4b38:	add	x2, x2, #0xd
    4b3c:	lsl	x24, x2, #1
    4b40:	mov	x1, x24
    4b44:	bl	0 <grub_realloc>
    4b48:	cbz	x0, 4d38 <config_file+0x890>
    4b4c:	ldr	x2, [x19, #8]
    4b50:	str	x24, [x19]
    4b54:	str	x0, [x19, #16]
    4b58:	adrp	x1, 0 <grub_strcasecmp>
    4b5c:	add	x0, x0, x2
    4b60:	mov	x2, #0x3                   	// #3
    4b64:	ldr	x1, [x1]
    4b68:	bl	0 <grub_memmove>
    4b6c:	ldr	x3, [x19, #8]
    4b70:	mov	x2, x20
    4b74:	add	x1, sp, #0x60
    4b78:	mov	x0, x19
    4b7c:	add	x3, x3, #0x3
    4b80:	str	x3, [x19, #8]
    4b84:	bl	2158 <write_entry>
    4b88:	cbnz	w0, 4584 <config_file+0xdc>
    4b8c:	ldp	x1, x2, [x19]
    4b90:	ldr	x0, [x19, #16]
    4b94:	sub	x1, x1, x2
    4b98:	cmp	x1, #0x2
    4b9c:	b.hi	4bc0 <config_file+0x718>  // b.pmore
    4ba0:	add	x2, x2, #0xc
    4ba4:	lsl	x24, x2, #1
    4ba8:	mov	x1, x24
    4bac:	bl	0 <grub_realloc>
    4bb0:	cbz	x0, 4d4c <config_file+0x8a4>
    4bb4:	ldr	x2, [x19, #8]
    4bb8:	str	x24, [x19]
    4bbc:	str	x0, [x19, #16]
    4bc0:	adrp	x1, 0 <grub_strcasecmp>
    4bc4:	add	x0, x0, x2
    4bc8:	mov	x2, #0x2                   	// #2
    4bcc:	ldr	x1, [x1]
    4bd0:	bl	0 <grub_memmove>
    4bd4:	ldr	x2, [x19, #8]
    4bd8:	ldr	x20, [x20, #8]
    4bdc:	add	x2, x2, #0x2
    4be0:	str	x2, [x19, #8]
    4be4:	cbz	x20, 4780 <config_file+0x2d8>
    4be8:	ldr	x1, [x19]
    4bec:	ldr	x0, [x19, #16]
    4bf0:	sub	x1, x1, x2
    4bf4:	cmp	x1, #0xa
    4bf8:	b.hi	4c1c <config_file+0x774>  // b.pmore
    4bfc:	add	x2, x2, #0x14
    4c00:	lsl	x24, x2, #1
    4c04:	mov	x1, x24
    4c08:	bl	0 <grub_realloc>
    4c0c:	cbz	x0, 4d10 <config_file+0x868>
    4c10:	ldr	x2, [x19, #8]
    4c14:	str	x24, [x19]
    4c18:	str	x0, [x19, #16]
    4c1c:	ldr	x1, [x22]
    4c20:	add	x0, x0, x2
    4c24:	mov	x2, #0xa                   	// #10
    4c28:	bl	0 <grub_memmove>
    4c2c:	ldr	x0, [x19, #8]
    4c30:	ldr	x1, [x20, #24]
    4c34:	add	x0, x0, #0xa
    4c38:	str	x0, [x19, #8]
    4c3c:	cbnz	x1, 49b8 <config_file+0x510>
    4c40:	ldr	x1, [x20, #16]
    4c44:	b	49b8 <config_file+0x510>
    4c48:	add	x1, x2, #0xa
    4c4c:	add	x1, x1, x0
    4c50:	ldr	x0, [x19, #16]
    4c54:	lsl	x22, x1, #1
    4c58:	mov	x1, x22
    4c5c:	bl	0 <grub_realloc>
    4c60:	cbz	x0, 4cb0 <config_file+0x808>
    4c64:	str	x22, [x19]
    4c68:	str	x0, [x19, #16]
    4c6c:	ldr	x2, [x19, #8]
    4c70:	b	4738 <config_file+0x290>
    4c74:	add	x2, x2, #0x16
    4c78:	lsl	x21, x2, #1
    4c7c:	mov	x1, x21
    4c80:	bl	0 <grub_realloc>
    4c84:	cbz	x0, 4cc8 <config_file+0x820>
    4c88:	str	x21, [x19]
    4c8c:	str	x0, [x19, #16]
    4c90:	ldr	x2, [x19, #8]
    4c94:	b	4850 <config_file+0x3a8>
    4c98:	adrp	x0, 0 <grub_strcasecmp>
    4c9c:	ldr	x0, [x0]
    4ca0:	ldr	w0, [x0]
    4ca4:	cbnz	w0, 4584 <config_file+0xdc>
    4ca8:	ldp	x2, x0, [x19, #8]
    4cac:	b	4544 <config_file+0x9c>
    4cb0:	adrp	x0, 0 <grub_strcasecmp>
    4cb4:	ldr	x0, [x0]
    4cb8:	ldr	w0, [x0]
    4cbc:	cbnz	w0, 4584 <config_file+0xdc>
    4cc0:	ldr	x2, [x19, #8]
    4cc4:	b	4734 <config_file+0x28c>
    4cc8:	adrp	x0, 0 <grub_strcasecmp>
    4ccc:	ldr	x0, [x0]
    4cd0:	ldr	w0, [x0]
    4cd4:	cbnz	w0, 4584 <config_file+0xdc>
    4cd8:	ldp	x2, x0, [x19, #8]
    4cdc:	b	4850 <config_file+0x3a8>
    4ce0:	ldr	x0, [x21]
    4ce4:	ldr	w0, [x0]
    4ce8:	cbnz	w0, 4584 <config_file+0xdc>
    4cec:	ldr	x0, [x19, #8]
    4cf0:	ldr	x1, [x19, #16]
    4cf4:	b	4a58 <config_file+0x5b0>
    4cf8:	adrp	x0, 0 <grub_strcasecmp>
    4cfc:	ldr	x0, [x0]
    4d00:	ldr	w0, [x0]
    4d04:	cbnz	w0, 4584 <config_file+0xdc>
    4d08:	ldp	x2, x0, [x19, #8]
    4d0c:	b	46ec <config_file+0x244>
    4d10:	ldr	x0, [x21]
    4d14:	ldr	w0, [x0]
    4d18:	cbnz	w0, 4584 <config_file+0xdc>
    4d1c:	ldp	x2, x0, [x19, #8]
    4d20:	b	4c1c <config_file+0x774>
    4d24:	ldr	x0, [x21]
    4d28:	ldr	w0, [x0]
    4d2c:	cbnz	w0, 4584 <config_file+0xdc>
    4d30:	ldp	x2, x0, [x19, #8]
    4d34:	b	4af4 <config_file+0x64c>
    4d38:	ldr	x0, [x21]
    4d3c:	ldr	w0, [x0]
    4d40:	cbnz	w0, 4584 <config_file+0xdc>
    4d44:	ldp	x2, x0, [x19, #8]
    4d48:	b	4b58 <config_file+0x6b0>
    4d4c:	ldr	x0, [x21]
    4d50:	ldr	w0, [x0]
    4d54:	cbnz	w0, 4584 <config_file+0xdc>
    4d58:	ldp	x2, x0, [x19, #8]
    4d5c:	b	4bc0 <config_file+0x718>
    4d60:	ldr	x0, [x21]
    4d64:	ldr	w0, [x0]
    4d68:	cbnz	w0, 4584 <config_file+0xdc>
    4d6c:	ldp	x2, x0, [x19, #8]
    4d70:	b	4aa4 <config_file+0x5fc>
    4d74:	ldr	x0, [x21]
    4d78:	ldr	w0, [x0]
    4d7c:	cbnz	w0, 4584 <config_file+0xdc>
    4d80:	ldp	x2, x0, [x19, #8]
    4d84:	b	4a08 <config_file+0x560>
    4d88:	adrp	x0, 0 <grub_strcasecmp>
    4d8c:	ldr	x0, [x0]
    4d90:	ldr	w0, [x0]
    4d94:	cbnz	w0, 4584 <config_file+0xdc>
    4d98:	ldp	x2, x0, [x19, #8]
    4d9c:	b	48c8 <config_file+0x420>
    4da0:	adrp	x0, 0 <grub_strcasecmp>
    4da4:	ldr	x0, [x0]
    4da8:	ldr	w0, [x0]
    4dac:	cbnz	w0, 4584 <config_file+0xdc>
    4db0:	ldp	x2, x0, [x19, #8]
    4db4:	b	4924 <config_file+0x47c>
    4db8:	adrp	x0, 0 <grub_strcasecmp>
    4dbc:	ldr	x0, [x0]
    4dc0:	ldr	w0, [x0]
    4dc4:	cbnz	w0, 4584 <config_file+0xdc>
    4dc8:	ldr	x3, [x19, #8]
    4dcc:	b	4988 <config_file+0x4e0>
	...

0000000000004e30 <print_config>:
    4e30:	stp	x29, x30, [sp, #-112]!
    4e34:	mov	x29, sp
    4e38:	stp	x19, x20, [sp, #16]
    4e3c:	mov	x19, x0
    4e40:	mov	x20, x1
    4e44:	stp	x21, x22, [sp, #32]
    4e48:	mov	x21, x3
    4e4c:	mov	x22, x2
    4e50:	stp	x23, x24, [sp, #48]
    4e54:	stp	x25, x26, [sp, #64]
    4e58:	stp	x27, x28, [sp, #80]
    4e5c:	ldrb	w0, [x3]
    4e60:	ldr	x1, [x1, #40]
    4e64:	cmp	w0, #0x2f
    4e68:	b.eq	4e70 <print_config+0x40>  // b.none
    4e6c:	ldr	x1, [x20, #56]
    4e70:	adrp	x0, 0 <grub_strcasecmp>
    4e74:	mov	x2, x21
    4e78:	ldr	x25, [x0]
    4e7c:	mov	x0, x25
    4e80:	bl	0 <grub_xasprintf>
    4e84:	mov	x23, x0
    4e88:	cbz	x0, 50e8 <print_config+0x2b8>
    4e8c:	ldrb	w0, [x21]
    4e90:	ldr	x1, [x20, #48]
    4e94:	cmp	w0, #0x2f
    4e98:	b.eq	4ea0 <print_config+0x70>  // b.none
    4e9c:	ldr	x1, [x20, #64]
    4ea0:	mov	x2, x21
    4ea4:	mov	x0, x25
    4ea8:	bl	0 <grub_xasprintf>
    4eac:	mov	x24, x0
    4eb0:	cbz	x0, 5100 <print_config+0x2d0>
    4eb4:	ldrb	w0, [x22]
    4eb8:	ldr	x1, [x20, #40]
    4ebc:	cmp	w0, #0x2f
    4ec0:	b.eq	4ec8 <print_config+0x98>  // b.none
    4ec4:	ldr	x1, [x20, #56]
    4ec8:	mov	x0, x25
    4ecc:	mov	x2, x22
    4ed0:	bl	0 <grub_xasprintf>
    4ed4:	mov	x25, x0
    4ed8:	cbz	x0, 5080 <print_config+0x250>
    4edc:	ldrb	w0, [x0]
    4ee0:	mov	x1, x25
    4ee4:	mov	x4, x25
    4ee8:	mov	w3, #0x2f                  	// #47
    4eec:	cbz	w0, 4f14 <print_config+0xe4>
    4ef0:	cmp	w0, #0x2f
    4ef4:	ccmp	x25, x4, #0x4, eq  // eq = none
    4ef8:	b.ne	5010 <print_config+0x1e0>  // b.any
    4efc:	cmp	w0, #0x2f
    4f00:	b.eq	501c <print_config+0x1ec>  // b.none
    4f04:	strb	w0, [x4], #1
    4f08:	ldrb	w0, [x1, #1]
    4f0c:	add	x1, x1, #0x1
    4f10:	cbnz	w0, 4ef0 <print_config+0xc0>
    4f14:	strb	wzr, [x4]
    4f18:	ldp	x0, x2, [x19]
    4f1c:	sub	x0, x0, x2
    4f20:	cmp	x0, #0x1
    4f24:	ldr	x0, [x19, #16]
    4f28:	b.hi	4f4c <print_config+0x11c>  // b.pmore
    4f2c:	add	x2, x2, #0xb
    4f30:	lsl	x26, x2, #1
    4f34:	mov	x1, x26
    4f38:	bl	0 <grub_realloc>
    4f3c:	cbz	x0, 5350 <print_config+0x520>
    4f40:	ldr	x2, [x19, #8]
    4f44:	str	x26, [x19]
    4f48:	str	x0, [x19, #16]
    4f4c:	adrp	x1, 0 <grub_strcasecmp>
    4f50:	add	x0, x0, x2
    4f54:	add	x26, x20, #0x30
    4f58:	mov	x2, #0x1                   	// #1
    4f5c:	ldr	x1, [x1]
    4f60:	str	x26, [sp, #96]
    4f64:	add	x27, x20, #0x40
    4f68:	bl	0 <grub_memmove>
    4f6c:	ldr	x0, [x19, #8]
    4f70:	mov	x2, x27
    4f74:	mov	x1, x26
    4f78:	mov	x3, x22
    4f7c:	add	x0, x0, #0x1
    4f80:	str	x0, [x19, #8]
    4f84:	mov	x4, #0x0                   	// #0
    4f88:	mov	x0, x19
    4f8c:	bl	1f38 <print_file.isra.0>
    4f90:	ldp	x0, x2, [x19]
    4f94:	sub	x0, x0, x2
    4f98:	cmp	x0, #0x1
    4f9c:	ldr	x0, [x19, #16]
    4fa0:	b.ls	50c4 <print_config+0x294>  // b.plast
    4fa4:	adrp	x1, 0 <grub_strcasecmp>
    4fa8:	add	x0, x0, x2
    4fac:	mov	x2, #0x1                   	// #1
    4fb0:	ldr	x1, [x1]
    4fb4:	str	x1, [sp, #104]
    4fb8:	bl	0 <grub_memmove>
    4fbc:	ldr	x1, [x19, #8]
    4fc0:	mov	x0, x25
    4fc4:	add	x1, x1, #0x1
    4fc8:	str	x1, [x19, #8]
    4fcc:	bl	0 <grub_strlen>
    4fd0:	mov	x26, x0
    4fd4:	ldp	x1, x3, [x19]
    4fd8:	sub	x1, x1, x3
    4fdc:	cmp	x0, x1
    4fe0:	b.cc	5130 <print_config+0x300>  // b.lo, b.ul, b.last
    4fe4:	add	x1, x3, #0xa
    4fe8:	add	x1, x1, x0
    4fec:	ldr	x0, [x19, #16]
    4ff0:	lsl	x28, x1, #1
    4ff4:	mov	x1, x28
    4ff8:	bl	0 <grub_realloc>
    4ffc:	cbz	x0, 511c <print_config+0x2ec>
    5000:	str	x28, [x19]
    5004:	str	x0, [x19, #16]
    5008:	ldr	x3, [x19, #8]
    500c:	b	5134 <print_config+0x304>
    5010:	ldurb	w2, [x4, #-1]
    5014:	cmp	w2, #0x2f
    5018:	b.eq	4f08 <print_config+0xd8>  // b.none
    501c:	ldrb	w2, [x1, #1]
    5020:	cmp	w2, #0x2e
    5024:	b.ne	4f04 <print_config+0xd4>  // b.any
    5028:	ldrb	w2, [x1, #2]
    502c:	cmp	w2, #0x2f
    5030:	b.eq	5114 <print_config+0x2e4>  // b.none
    5034:	cmp	w2, #0x2e
    5038:	b.ne	4f04 <print_config+0xd4>  // b.any
    503c:	ldrb	w2, [x1, #3]
    5040:	cmp	w2, #0x2f
    5044:	b.ne	4f04 <print_config+0xd4>  // b.any
    5048:	add	x1, x1, #0x3
    504c:	cmp	x25, x4
    5050:	b.ls	5064 <print_config+0x234>  // b.plast
    5054:	b	54b8 <print_config+0x688>
    5058:	sub	x4, x4, #0x1
    505c:	cmp	x25, x4
    5060:	b.hi	54b8 <print_config+0x688>  // b.pmore
    5064:	ldrb	w0, [x4]
    5068:	cmp	w0, #0x2f
    506c:	b.ne	5058 <print_config+0x228>  // b.any
    5070:	cmp	x25, x4
    5074:	b.hi	54b8 <print_config+0x688>  // b.pmore
    5078:	add	x4, x4, #0x1
    507c:	b	4f08 <print_config+0xd8>
    5080:	adrp	x0, 0 <grub_strcasecmp>
    5084:	ldr	x0, [x0]
    5088:	ldr	w28, [x0]
    508c:	mov	x0, x25
    5090:	bl	0 <grub_free>
    5094:	mov	x0, x23
    5098:	bl	0 <grub_free>
    509c:	mov	x0, x24
    50a0:	bl	0 <grub_free>
    50a4:	mov	w0, w28
    50a8:	ldp	x19, x20, [sp, #16]
    50ac:	ldp	x21, x22, [sp, #32]
    50b0:	ldp	x23, x24, [sp, #48]
    50b4:	ldp	x25, x26, [sp, #64]
    50b8:	ldp	x27, x28, [sp, #80]
    50bc:	ldp	x29, x30, [sp], #112
    50c0:	ret
    50c4:	add	x2, x2, #0xb
    50c8:	lsl	x28, x2, #1
    50cc:	mov	x1, x28
    50d0:	bl	0 <grub_realloc>
    50d4:	cbz	x0, 5368 <print_config+0x538>
    50d8:	str	x28, [x19]
    50dc:	str	x0, [x19, #16]
    50e0:	ldr	x2, [x19, #8]
    50e4:	b	4fa4 <print_config+0x174>
    50e8:	adrp	x0, 0 <grub_strcasecmp>
    50ec:	mov	x25, #0x0                   	// #0
    50f0:	mov	x24, #0x0                   	// #0
    50f4:	ldr	x0, [x0]
    50f8:	ldr	w28, [x0]
    50fc:	b	508c <print_config+0x25c>
    5100:	adrp	x0, 0 <grub_strcasecmp>
    5104:	mov	x25, #0x0                   	// #0
    5108:	ldr	x0, [x0]
    510c:	ldr	w28, [x0]
    5110:	b	508c <print_config+0x25c>
    5114:	add	x1, x1, #0x2
    5118:	b	4f08 <print_config+0xd8>
    511c:	adrp	x0, 0 <grub_strcasecmp>
    5120:	ldr	x0, [x0]
    5124:	ldr	w28, [x0]
    5128:	cbnz	w28, 50a4 <print_config+0x274>
    512c:	ldr	x3, [x19, #8]
    5130:	ldr	x0, [x19, #16]
    5134:	mov	x2, x26
    5138:	mov	x1, x25
    513c:	add	x0, x0, x3
    5140:	bl	0 <grub_memmove>
    5144:	ldp	x0, x1, [x19]
    5148:	add	x2, x26, x1
    514c:	str	x2, [x19, #8]
    5150:	sub	x0, x0, x2
    5154:	cmp	x0, #0x2
    5158:	ldr	x0, [x19, #16]
    515c:	b.hi	5180 <print_config+0x350>  // b.pmore
    5160:	add	x2, x2, #0xc
    5164:	lsl	x26, x2, #1
    5168:	mov	x1, x26
    516c:	bl	0 <grub_realloc>
    5170:	cbz	x0, 54c8 <print_config+0x698>
    5174:	ldr	x2, [x19, #8]
    5178:	str	x26, [x19]
    517c:	str	x0, [x19, #16]
    5180:	adrp	x1, 0 <grub_strcasecmp>
    5184:	add	x0, x0, x2
    5188:	mov	x2, #0x2                   	// #2
    518c:	mov	x26, x20
    5190:	ldr	x1, [x1]
    5194:	mov	w28, #0x0                   	// #0
    5198:	bl	0 <grub_memmove>
    519c:	ldr	x0, [x19, #8]
    51a0:	add	x0, x0, #0x2
    51a4:	str	x0, [x19, #8]
    51a8:	b	51b8 <print_config+0x388>
    51ac:	ldr	x26, [x26]
    51b0:	add	w28, w28, #0x1
    51b4:	cbz	x26, 53a4 <print_config+0x574>
    51b8:	ldr	x0, [x26, #72]
    51bc:	mov	x1, x25
    51c0:	bl	0 <grub_strcmp>
    51c4:	cmp	w0, #0x0
    51c8:	ccmp	w28, #0x15, #0x4, ne  // ne = any
    51cc:	b.ne	51ac <print_config+0x37c>  // b.any
    51d0:	ldp	x1, x2, [x19]
    51d4:	ldr	x0, [x19, #16]
    51d8:	sub	x1, x1, x2
    51dc:	cmp	x1, #0x19
    51e0:	b.ls	5380 <print_config+0x550>  // b.plast
    51e4:	adrp	x1, 0 <grub_strcasecmp>
    51e8:	add	x0, x0, x2
    51ec:	mov	x2, #0x19                  	// #25
    51f0:	ldr	x1, [x1]
    51f4:	bl	0 <grub_memmove>
    51f8:	adrp	x1, 0 <grub_strcasecmp>
    51fc:	mov	x2, x27
    5200:	ldr	x0, [x19, #8]
    5204:	mov	x4, #0x0                   	// #0
    5208:	ldr	x3, [x1]
    520c:	add	x0, x0, #0x19
    5210:	ldr	x1, [sp, #96]
    5214:	str	x0, [x19, #8]
    5218:	mov	x0, x19
    521c:	bl	1f38 <print_file.isra.0>
    5220:	ldp	x0, x2, [x19]
    5224:	sub	x0, x0, x2
    5228:	cmp	x0, #0x4
    522c:	ldr	x0, [x19, #16]
    5230:	b.hi	5254 <print_config+0x424>  // b.pmore
    5234:	add	x2, x2, #0xe
    5238:	lsl	x20, x2, #1
    523c:	mov	x1, x20
    5240:	bl	0 <grub_realloc>
    5244:	cbz	x0, 54f8 <print_config+0x6c8>
    5248:	ldr	x2, [x19, #8]
    524c:	str	x20, [x19]
    5250:	str	x0, [x19, #16]
    5254:	adrp	x1, 0 <grub_strcasecmp>
    5258:	add	x0, x0, x2
    525c:	mov	x2, #0x4                   	// #4
    5260:	ldr	x1, [x1]
    5264:	bl	0 <grub_memmove>
    5268:	ldr	x0, [x19, #8]
    526c:	mov	x2, x27
    5270:	ldr	x1, [sp, #96]
    5274:	add	x0, x0, #0x4
    5278:	str	x0, [x19, #8]
    527c:	mov	x3, x21
    5280:	mov	x0, x19
    5284:	mov	x4, #0x0                   	// #0
    5288:	bl	1f38 <print_file.isra.0>
    528c:	ldp	x0, x2, [x19]
    5290:	sub	x0, x0, x2
    5294:	cmp	x0, #0x1
    5298:	ldr	x0, [x19, #16]
    529c:	b.hi	52c0 <print_config+0x490>  // b.pmore
    52a0:	add	x2, x2, #0xb
    52a4:	lsl	x20, x2, #1
    52a8:	mov	x1, x20
    52ac:	bl	0 <grub_realloc>
    52b0:	cbz	x0, 5510 <print_config+0x6e0>
    52b4:	ldr	x2, [x19, #8]
    52b8:	str	x20, [x19]
    52bc:	str	x0, [x19, #16]
    52c0:	ldr	x1, [sp, #104]
    52c4:	add	x0, x0, x2
    52c8:	mov	x2, #0x1                   	// #1
    52cc:	bl	0 <grub_memmove>
    52d0:	ldr	x0, [x19, #8]
    52d4:	mov	x3, x22
    52d8:	ldr	x1, [sp, #96]
    52dc:	add	x0, x0, #0x1
    52e0:	str	x0, [x19, #8]
    52e4:	mov	x2, x27
    52e8:	mov	x0, x19
    52ec:	mov	x4, #0x0                   	// #0
    52f0:	bl	1f38 <print_file.isra.0>
    52f4:	ldp	x0, x3, [x19]
    52f8:	sub	x0, x0, x3
    52fc:	cmp	x0, #0x1
    5300:	ldr	x0, [x19, #16]
    5304:	b.hi	5328 <print_config+0x4f8>  // b.pmore
    5308:	add	x3, x3, #0xb
    530c:	lsl	x20, x3, #1
    5310:	mov	x1, x20
    5314:	bl	0 <grub_realloc>
    5318:	cbz	x0, 5528 <print_config+0x6f8>
    531c:	ldr	x3, [x19, #8]
    5320:	str	x20, [x19]
    5324:	str	x0, [x19, #16]
    5328:	adrp	x1, 0 <grub_strcasecmp>
    532c:	add	x0, x0, x3
    5330:	mov	x2, #0x1                   	// #1
    5334:	mov	w28, #0x0                   	// #0
    5338:	ldr	x1, [x1]
    533c:	bl	0 <grub_memmove>
    5340:	ldr	x0, [x19, #8]
    5344:	add	x0, x0, #0x1
    5348:	str	x0, [x19, #8]
    534c:	b	508c <print_config+0x25c>
    5350:	adrp	x0, 0 <grub_strcasecmp>
    5354:	ldr	x0, [x0]
    5358:	ldr	w28, [x0]
    535c:	cbnz	w28, 50a4 <print_config+0x274>
    5360:	ldp	x2, x0, [x19, #8]
    5364:	b	4f4c <print_config+0x11c>
    5368:	adrp	x0, 0 <grub_strcasecmp>
    536c:	ldr	x0, [x0]
    5370:	ldr	w28, [x0]
    5374:	cbnz	w28, 50a4 <print_config+0x274>
    5378:	ldp	x2, x0, [x19, #8]
    537c:	b	4fa4 <print_config+0x174>
    5380:	add	x2, x2, #0x23
    5384:	lsl	x20, x2, #1
    5388:	mov	x1, x20
    538c:	bl	0 <grub_realloc>
    5390:	cbz	x0, 54e0 <print_config+0x6b0>
    5394:	str	x20, [x19]
    5398:	str	x0, [x19, #16]
    539c:	ldr	x2, [x19, #8]
    53a0:	b	51e4 <print_config+0x3b4>
    53a4:	ldp	x1, x2, [x20, #40]
    53a8:	mov	x6, x20
    53ac:	ldr	w7, [x20, #104]
    53b0:	mov	x5, x25
    53b4:	mov	x4, x24
    53b8:	mov	x3, x23
    53bc:	mov	x0, x19
    53c0:	bl	44a8 <config_file>
    53c4:	mov	w28, w0
    53c8:	and	w0, w0, #0xfffffffd
    53cc:	cmp	w0, #0x5
    53d0:	b.ne	508c <print_config+0x25c>  // b.any
    53d4:	adrp	x1, 0 <grub_strcasecmp>
    53d8:	ldp	x0, x2, [x19]
    53dc:	ldr	x20, [x1]
    53e0:	str	wzr, [x20]
    53e4:	sub	x0, x0, x2
    53e8:	cmp	x0, #0x7
    53ec:	ldr	x0, [x19, #16]
    53f0:	b.hi	5414 <print_config+0x5e4>  // b.pmore
    53f4:	add	x2, x2, #0x11
    53f8:	lsl	x21, x2, #1
    53fc:	mov	x1, x21
    5400:	bl	0 <grub_realloc>
    5404:	cbz	x0, 5540 <print_config+0x710>
    5408:	ldr	x2, [x19, #8]
    540c:	str	x21, [x19]
    5410:	str	x0, [x19, #16]
    5414:	adrp	x1, 0 <grub_strcasecmp>
    5418:	add	x0, x0, x2
    541c:	mov	x2, #0x7                   	// #7
    5420:	ldr	x1, [x1]
    5424:	bl	0 <grub_memmove>
    5428:	ldr	x1, [x19, #8]
    542c:	mov	x0, x25
    5430:	add	x1, x1, #0x7
    5434:	str	x1, [x19, #8]
    5438:	bl	0 <grub_strlen>
    543c:	mov	x21, x0
    5440:	ldp	x1, x3, [x19]
    5444:	sub	x1, x1, x3
    5448:	cmp	x0, x1
    544c:	b.cc	5478 <print_config+0x648>  // b.lo, b.ul, b.last
    5450:	add	x1, x3, #0xa
    5454:	add	x1, x1, x0
    5458:	ldr	x0, [x19, #16]
    545c:	lsl	x22, x1, #1
    5460:	mov	x1, x22
    5464:	bl	0 <grub_realloc>
    5468:	cbz	x0, 5550 <print_config+0x720>
    546c:	ldr	x3, [x19, #8]
    5470:	str	x22, [x19]
    5474:	str	x0, [x19, #16]
    5478:	ldr	x0, [x19, #16]
    547c:	mov	x2, x21
    5480:	mov	x1, x25
    5484:	add	x0, x0, x3
    5488:	bl	0 <grub_memmove>
    548c:	adrp	x1, 0 <grub_strcasecmp>
    5490:	mov	x0, x19
    5494:	ldr	x3, [x19, #8]
    5498:	mov	x2, #0xb                   	// #11
    549c:	ldr	x1, [x1]
    54a0:	add	x21, x3, x21
    54a4:	str	x21, [x19, #8]
    54a8:	bl	da0 <print>
    54ac:	mov	w28, w0
    54b0:	cbz	w0, 508c <print_config+0x25c>
    54b4:	b	50a4 <print_config+0x274>
    54b8:	mov	x4, x25
    54bc:	strb	w3, [x25]
    54c0:	add	x4, x4, #0x1
    54c4:	b	4f08 <print_config+0xd8>
    54c8:	adrp	x0, 0 <grub_strcasecmp>
    54cc:	ldr	x0, [x0]
    54d0:	ldr	w28, [x0]
    54d4:	cbnz	w28, 50a4 <print_config+0x274>
    54d8:	ldp	x2, x0, [x19, #8]
    54dc:	b	5180 <print_config+0x350>
    54e0:	adrp	x0, 0 <grub_strcasecmp>
    54e4:	ldr	x0, [x0]
    54e8:	ldr	w28, [x0]
    54ec:	cbnz	w28, 50a4 <print_config+0x274>
    54f0:	ldp	x2, x0, [x19, #8]
    54f4:	b	51e4 <print_config+0x3b4>
    54f8:	adrp	x0, 0 <grub_strcasecmp>
    54fc:	ldr	x0, [x0]
    5500:	ldr	w28, [x0]
    5504:	cbnz	w28, 50a4 <print_config+0x274>
    5508:	ldp	x2, x0, [x19, #8]
    550c:	b	5254 <print_config+0x424>
    5510:	adrp	x0, 0 <grub_strcasecmp>
    5514:	ldr	x0, [x0]
    5518:	ldr	w28, [x0]
    551c:	cbnz	w28, 50a4 <print_config+0x274>
    5520:	ldp	x2, x0, [x19, #8]
    5524:	b	52c0 <print_config+0x490>
    5528:	adrp	x0, 0 <grub_strcasecmp>
    552c:	ldr	x0, [x0]
    5530:	ldr	w28, [x0]
    5534:	cbnz	w28, 50a4 <print_config+0x274>
    5538:	ldp	x3, x0, [x19, #8]
    553c:	b	5328 <print_config+0x4f8>
    5540:	ldr	w28, [x20]
    5544:	cbnz	w28, 50a4 <print_config+0x274>
    5548:	ldp	x2, x0, [x19, #8]
    554c:	b	5414 <print_config+0x5e4>
    5550:	ldr	w28, [x20]
    5554:	cbnz	w28, 508c <print_config+0x25c>
    5558:	ldr	x3, [x19, #8]
    555c:	b	5478 <print_config+0x648>
	...

00000000000055b8 <grub_syslinux_config_file>:
    55b8:	stp	x29, x30, [sp, #-64]!
    55bc:	mov	x9, x1
    55c0:	mov	x8, x2
    55c4:	mov	x7, x3
    55c8:	mov	x6, x4
    55cc:	mov	x29, sp
    55d0:	mov	x1, x0
    55d4:	mov	x4, x7
    55d8:	mov	x2, x9
    55dc:	mov	w7, w5
    55e0:	mov	x3, x8
    55e4:	mov	x5, x6
    55e8:	add	x0, sp, #0x20
    55ec:	mov	x6, #0x0                   	// #0
    55f0:	stp	xzr, xzr, [sp, #32]
    55f4:	str	xzr, [sp, #48]
    55f8:	bl	44a8 <config_file>
    55fc:	cbnz	w0, 5674 <grub_syslinux_config_file+0xbc>
    5600:	ldp	x1, x2, [sp, #32]
    5604:	ldr	x0, [sp, #48]
    5608:	sub	x1, x1, x2
    560c:	cmp	x1, #0x1
    5610:	b.ls	5634 <grub_syslinux_config_file+0x7c>  // b.plast
    5614:	adrp	x1, 0 <grub_strcasecmp>
    5618:	add	x0, x0, x2
    561c:	mov	x2, #0x1                   	// #1
    5620:	ldr	x1, [x1]
    5624:	bl	0 <grub_memmove>
    5628:	ldr	x0, [sp, #48]
    562c:	ldp	x29, x30, [sp], #64
    5630:	ret
    5634:	add	x2, x2, #0xb
    5638:	str	x19, [sp, #16]
    563c:	lsl	x19, x2, #1
    5640:	mov	x1, x19
    5644:	bl	0 <grub_realloc>
    5648:	cbz	x0, 5660 <grub_syslinux_config_file+0xa8>
    564c:	str	x19, [sp, #32]
    5650:	str	x0, [sp, #48]
    5654:	ldr	x19, [sp, #16]
    5658:	ldr	x2, [sp, #40]
    565c:	b	5614 <grub_syslinux_config_file+0x5c>
    5660:	adrp	x0, 0 <grub_strcasecmp>
    5664:	ldr	x0, [x0]
    5668:	ldr	w0, [x0]
    566c:	cbz	w0, 5680 <grub_syslinux_config_file+0xc8>
    5670:	ldr	x19, [sp, #16]
    5674:	mov	x0, #0x0                   	// #0
    5678:	ldp	x29, x30, [sp], #64
    567c:	ret
    5680:	ldr	x19, [sp, #16]
    5684:	ldp	x2, x0, [sp, #40]
    5688:	b	5614 <grub_syslinux_config_file+0x5c>
    568c:	nop
	...

00000000000056a0 <syslinux_file_getline>:
    56a0:	mov	x1, x0
    56a4:	mov	w0, #0x0                   	// #0
    56a8:	str	xzr, [x1]
    56ac:	ret

00000000000056b0 <grub_cmd_syslinux_source>:
    56b0:	cmp	w1, #0x1
    56b4:	b.ne	5870 <grub_cmd_syslinux_source+0x1c0>  // b.any
    56b8:	stp	x29, x30, [sp, #-96]!
    56bc:	mov	x29, sp
    56c0:	stp	x19, x20, [sp, #16]
    56c4:	mov	x19, x0
    56c8:	mov	w20, w1
    56cc:	ldr	x0, [x0]
    56d0:	stp	x21, x22, [sp, #32]
    56d4:	mov	x21, x2
    56d8:	stp	x23, x24, [sp, #48]
    56dc:	ldr	x0, [x0]
    56e0:	stp	x27, x28, [sp, #80]
    56e4:	ldr	x0, [x0, #16]
    56e8:	ldrb	w22, [x0]
    56ec:	cmp	w22, #0x65
    56f0:	b.eq	5838 <grub_cmd_syslinux_source+0x188>  // b.none
    56f4:	ldrb	w23, [x0, #9]
    56f8:	mov	w24, #0x0                   	// #0
    56fc:	cmp	w23, #0x63
    5700:	b.ne	5710 <grub_cmd_syslinux_source+0x60>  // b.any
    5704:	bl	0 <grub_cls>
    5708:	mov	w24, w20
    570c:	bl	0 <grub_env_context_open>
    5710:	ldr	x1, [x19, #8]
    5714:	ldr	x27, [x21]
    5718:	ldr	w0, [x1]
    571c:	cbz	w0, 5864 <grub_cmd_syslinux_source+0x1b4>
    5720:	ldr	x28, [x1, #8]
    5724:	mov	x19, #0x0                   	// #0
    5728:	ldr	w0, [x1, #16]
    572c:	cbz	w0, 5734 <grub_cmd_syslinux_source+0x84>
    5730:	ldr	x19, [x1, #24]
    5734:	mov	w20, #0x2                   	// #2
    5738:	ldr	w0, [x1, #48]
    573c:	ldr	w2, [x1, #32]
    5740:	cbnz	w0, 574c <grub_cmd_syslinux_source+0x9c>
    5744:	cmp	w2, #0x0
    5748:	cset	w20, ne  // ne = any
    574c:	ldr	w1, [x1, #64]
    5750:	mov	w0, #0x3                   	// #3
    5754:	mov	x21, #0x0                   	// #0
    5758:	cmp	w1, #0x0
    575c:	csel	w20, w20, w0, eq  // eq = none
    5760:	cbz	x19, 58bc <grub_cmd_syslinux_source+0x20c>
    5764:	stp	x25, x26, [sp, #64]
    5768:	adrp	x2, 0 <grub_strcasecmp>
    576c:	adrp	x1, 0 <grub_strcasecmp>
    5770:	adrp	x0, 0 <grub_strcasecmp>
    5774:	ldr	x3, [x2]
    5778:	mov	x6, x19
    577c:	ldr	x26, [x1]
    5780:	mov	x5, x28
    5784:	ldr	x25, [x0]
    5788:	mov	x4, x27
    578c:	mov	x2, x26
    5790:	mov	w1, #0x6b                  	// #107
    5794:	mov	x0, x25
    5798:	bl	0 <grub_real_dprintf>
    579c:	mov	x3, x19
    57a0:	mov	x2, x19
    57a4:	mov	w5, w20
    57a8:	mov	x4, x27
    57ac:	mov	x1, x28
    57b0:	mov	x0, x28
    57b4:	bl	55b8 <grub_syslinux_config_file>
    57b8:	mov	x19, x0
    57bc:	cbz	x0, 5888 <grub_cmd_syslinux_source+0x1d8>
    57c0:	adrp	x3, 0 <grub_strcasecmp>
    57c4:	mov	x2, x26
    57c8:	mov	x0, x25
    57cc:	mov	w1, #0x73                  	// #115
    57d0:	ldr	x3, [x3]
    57d4:	bl	0 <grub_real_dprintf>
    57d8:	bl	0 <grub_env_get_menu>
    57dc:	cbz	x0, 5924 <grub_cmd_syslinux_source+0x274>
    57e0:	adrp	x1, 0 <grub_strcasecmp>
    57e4:	mov	x2, #0x0                   	// #0
    57e8:	mov	x0, x19
    57ec:	mov	w20, #0x0                   	// #0
    57f0:	ldr	x1, [x1]
    57f4:	bl	0 <grub_normal_parse_line>
    57f8:	bl	0 <grub_print_error>
    57fc:	mov	x0, x19
    5800:	bl	0 <grub_free>
    5804:	mov	x0, x21
    5808:	bl	0 <grub_free>
    580c:	ldp	x25, x26, [sp, #64]
    5810:	cbnz	w24, 589c <grub_cmd_syslinux_source+0x1ec>
    5814:	cmp	w22, #0x65
    5818:	b.eq	58fc <grub_cmd_syslinux_source+0x24c>  // b.none
    581c:	mov	w0, w20
    5820:	ldp	x19, x20, [sp, #16]
    5824:	ldp	x21, x22, [sp, #32]
    5828:	ldp	x23, x24, [sp, #48]
    582c:	ldp	x27, x28, [sp, #80]
    5830:	ldp	x29, x30, [sp], #96
    5834:	ret
    5838:	ldrb	w23, [x0, #25]
    583c:	cmp	w23, #0x63
    5840:	b.eq	595c <grub_cmd_syslinux_source+0x2ac>  // b.none
    5844:	mov	w24, #0x0                   	// #0
    5848:	cmp	w23, #0x63
    584c:	cset	w0, ne  // ne = any
    5850:	bl	0 <grub_env_extractor_open>
    5854:	ldr	x1, [x19, #8]
    5858:	ldr	x27, [x21]
    585c:	ldr	w0, [x1]
    5860:	cbnz	w0, 5720 <grub_cmd_syslinux_source+0x70>
    5864:	adrp	x0, 0 <grub_strcasecmp>
    5868:	ldr	x28, [x0]
    586c:	b	5724 <grub_cmd_syslinux_source+0x74>
    5870:	adrp	x1, 0 <grub_strcasecmp>
    5874:	mov	w0, #0x12                  	// #18
    5878:	ldr	x1, [x1]
    587c:	b	0 <grub_error>
    5880:	mov	x0, x19
    5884:	bl	0 <grub_free>
    5888:	adrp	x0, 0 <grub_strcasecmp>
    588c:	ldp	x25, x26, [sp, #64]
    5890:	ldr	x0, [x0]
    5894:	ldr	w20, [x0]
    5898:	cbz	w24, 5814 <grub_cmd_syslinux_source+0x164>
    589c:	bl	0 <grub_env_get_menu>
    58a0:	cbz	x0, 58ac <grub_cmd_syslinux_source+0x1fc>
    58a4:	ldr	w1, [x0]
    58a8:	cbnz	w1, 5938 <grub_cmd_syslinux_source+0x288>
    58ac:	cmp	w22, #0x65
    58b0:	b.eq	58fc <grub_cmd_syslinux_source+0x24c>  // b.none
    58b4:	bl	0 <grub_env_context_close>
    58b8:	b	581c <grub_cmd_syslinux_source+0x16c>
    58bc:	mov	x0, x27
    58c0:	bl	0 <grub_strdup>
    58c4:	mov	x19, x0
    58c8:	cbz	x0, 58ec <grub_cmd_syslinux_source+0x23c>
    58cc:	mov	w1, #0x2f                  	// #47
    58d0:	stp	x25, x26, [sp, #64]
    58d4:	bl	0 <grub_strrchr>
    58d8:	mov	x21, x0
    58dc:	cbz	x0, 5948 <grub_cmd_syslinux_source+0x298>
    58e0:	mov	x21, x19
    58e4:	strb	wzr, [x0]
    58e8:	b	5768 <grub_cmd_syslinux_source+0xb8>
    58ec:	adrp	x0, 0 <grub_strcasecmp>
    58f0:	ldr	x0, [x0]
    58f4:	ldr	w20, [x0]
    58f8:	b	5810 <grub_cmd_syslinux_source+0x160>
    58fc:	cmp	w23, #0x63
    5900:	cset	w0, ne  // ne = any
    5904:	bl	0 <grub_env_extractor_close>
    5908:	mov	w0, w20
    590c:	ldp	x19, x20, [sp, #16]
    5910:	ldp	x21, x22, [sp, #32]
    5914:	ldp	x23, x24, [sp, #48]
    5918:	ldp	x27, x28, [sp, #80]
    591c:	ldp	x29, x30, [sp], #96
    5920:	ret
    5924:	mov	x0, #0x10                  	// #16
    5928:	bl	0 <grub_zalloc>
    592c:	cbz	x0, 5880 <grub_cmd_syslinux_source+0x1d0>
    5930:	bl	0 <grub_env_set_menu>
    5934:	b	57e0 <grub_cmd_syslinux_source+0x130>
    5938:	mov	w2, #0x0                   	// #0
    593c:	mov	w1, #0x1                   	// #1
    5940:	bl	0 <grub_show_menu>
    5944:	b	58ac <grub_cmd_syslinux_source+0x1fc>
    5948:	mov	x0, x19
    594c:	bl	0 <grub_free>
    5950:	adrp	x0, 0 <grub_strcasecmp>
    5954:	ldr	x19, [x0]
    5958:	b	5768 <grub_cmd_syslinux_source+0xb8>
    595c:	mov	w24, w20
    5960:	bl	0 <grub_cls>
    5964:	b	5848 <grub_cmd_syslinux_source+0x198>
	...

00000000000059a8 <grub_mod_init>:
    59a8:	stp	x29, x30, [sp, #-48]!
    59ac:	adrp	x4, 0 <grub_strcasecmp>
    59b0:	adrp	x0, 0 <grub_strcasecmp>
    59b4:	adrp	x5, 0 <grub_strcasecmp>
    59b8:	adrp	x3, 0 <grub_strcasecmp>
    59bc:	adrp	x1, 0 <grub_strcasecmp>
    59c0:	mov	x29, sp
    59c4:	ldr	x4, [x4]
    59c8:	stp	x19, x20, [sp, #16]
    59cc:	mov	w2, #0x0                   	// #0
    59d0:	ldr	x0, [x0]
    59d4:	stp	x21, x22, [sp, #32]
    59d8:	ldr	x20, [x1]
    59dc:	ldr	x22, [x5]
    59e0:	mov	x1, x20
    59e4:	ldr	x21, [x3]
    59e8:	mov	x5, x22
    59ec:	mov	x3, x21
    59f0:	bl	0 <grub_register_extcmd>
    59f4:	adrp	x2, 0 <grub_strcasecmp>
    59f8:	mov	x6, x0
    59fc:	adrp	x1, 0 <grub_strcasecmp>
    5a00:	adrp	x0, 0 <grub_strcasecmp>
    5a04:	ldr	x19, [x2]
    5a08:	mov	x5, x22
    5a0c:	ldr	x4, [x1]
    5a10:	mov	x3, x21
    5a14:	ldr	x0, [x0]
    5a18:	mov	x1, x20
    5a1c:	mov	w2, #0x0                   	// #0
    5a20:	str	x6, [x19]
    5a24:	bl	0 <grub_register_extcmd>
    5a28:	mov	x6, x0
    5a2c:	adrp	x1, 0 <grub_strcasecmp>
    5a30:	adrp	x0, 0 <grub_strcasecmp>
    5a34:	mov	x5, x22
    5a38:	mov	x3, x21
    5a3c:	ldr	x4, [x1]
    5a40:	mov	w2, #0x0                   	// #0
    5a44:	ldr	x0, [x0]
    5a48:	mov	x1, x20
    5a4c:	str	x6, [x19, #8]
    5a50:	bl	0 <grub_register_extcmd>
    5a54:	mov	x6, x0
    5a58:	adrp	x1, 0 <grub_strcasecmp>
    5a5c:	adrp	x0, 0 <grub_strcasecmp>
    5a60:	mov	x5, x22
    5a64:	mov	x3, x21
    5a68:	ldr	x4, [x1]
    5a6c:	mov	w2, #0x0                   	// #0
    5a70:	ldr	x0, [x0]
    5a74:	mov	x1, x20
    5a78:	str	x6, [x19, #16]
    5a7c:	bl	0 <grub_register_extcmd>
    5a80:	ldp	x21, x22, [sp, #32]
    5a84:	str	x0, [x19, #24]
    5a88:	ldp	x19, x20, [sp, #16]
    5a8c:	ldp	x29, x30, [sp], #48
    5a90:	ret
    5a94:	nop
	...

0000000000005af8 <grub_mod_fini>:
    5af8:	stp	x29, x30, [sp, #-32]!
    5afc:	adrp	x0, 0 <grub_strcasecmp>
    5b00:	mov	x29, sp
    5b04:	str	x19, [sp, #16]
    5b08:	ldr	x19, [x0]
    5b0c:	ldr	x0, [x19]
    5b10:	bl	0 <grub_unregister_extcmd>
    5b14:	ldr	x0, [x19, #8]
    5b18:	bl	0 <grub_unregister_extcmd>
    5b1c:	ldr	x0, [x19, #16]
    5b20:	bl	0 <grub_unregister_extcmd>
    5b24:	ldr	x0, [x19, #24]
    5b28:	ldr	x19, [sp, #16]
    5b2c:	ldp	x29, x30, [sp], #32
    5b30:	b	0 <grub_unregister_extcmd>
    5b34:	nop
	...
