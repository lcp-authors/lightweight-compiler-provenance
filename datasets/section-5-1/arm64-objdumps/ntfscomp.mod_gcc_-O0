
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ntfscomp.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1488>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	ldr	x2, [sp, #24]
      18:	ldr	x1, [sp, #32]
      1c:	ldr	x0, [sp, #40]
      20:	bl	0 <grub_memmove>
      24:	ldp	x29, x30, [sp], #48
      28:	ret
      2c:	stp	x29, x30, [sp, #-32]!
      30:	mov	x29, sp
      34:	str	x0, [sp, #24]
      38:	ldr	x0, [sp, #24]
      3c:	ldr	w1, [x0, #8]
      40:	ldr	x0, [sp, #24]
      44:	ldr	w0, [x0, #12]
      48:	cmp	w1, w0
      4c:	b.lt	68 <grub_mod_init-0x1420>  // b.tstop
      50:	adrp	x0, 0 <grub_mod_init-0x1488>
      54:	add	x0, x0, #0x0
      58:	ldr	x1, [x0]
      5c:	mov	w0, #0x9                   	// #9
      60:	bl	0 <grub_error>
      64:	b	188 <grub_mod_init-0x1300>
      68:	ldr	x0, [sp, #24]
      6c:	ldr	x5, [x0]
      70:	ldr	x0, [sp, #24]
      74:	ldr	w0, [x0, #8]
      78:	ldr	x1, [sp, #24]
      7c:	sxtw	x0, w0
      80:	add	x0, x0, #0x2
      84:	lsl	x0, x0, #3
      88:	add	x0, x1, x0
      8c:	ldr	w1, [x0, #4]
      90:	ldr	x0, [sp, #24]
      94:	ldr	w2, [x0, #148]
      98:	ldr	x0, [sp, #24]
      9c:	ldr	w0, [x0, #8]
      a0:	ldr	x3, [sp, #24]
      a4:	sxtw	x0, w0
      a8:	add	x0, x0, #0x2
      ac:	lsl	x0, x0, #3
      b0:	add	x0, x3, x0
      b4:	ldr	w0, [x0]
      b8:	sub	w0, w2, w0
      bc:	add	w1, w1, w0
      c0:	ldr	x0, [sp, #24]
      c4:	ldr	w0, [x0, #152]
      c8:	lsl	w0, w1, w0
      cc:	mov	w6, w0
      d0:	ldr	x0, [sp, #24]
      d4:	ldr	w0, [x0, #152]
      d8:	add	w0, w0, #0x9
      dc:	mov	w1, #0x1                   	// #1
      e0:	lsl	w0, w1, w0
      e4:	sxtw	x1, w0
      e8:	ldr	x0, [sp, #24]
      ec:	ldr	x0, [x0, #160]
      f0:	mov	x4, x0
      f4:	mov	x3, x1
      f8:	mov	x2, #0x0                   	// #0
      fc:	mov	x1, x6
     100:	mov	x0, x5
     104:	bl	0 <grub_disk_read>
     108:	cmp	w0, #0x0
     10c:	b.eq	124 <grub_mod_init-0x1364>  // b.none
     110:	adrp	x0, 0 <grub_mod_init-0x1488>
     114:	add	x0, x0, #0x0
     118:	ldr	x0, [x0]
     11c:	ldr	w0, [x0]
     120:	b	188 <grub_mod_init-0x1300>
     124:	ldr	x0, [sp, #24]
     128:	ldr	w0, [x0, #148]
     12c:	add	w1, w0, #0x1
     130:	ldr	x0, [sp, #24]
     134:	str	w1, [x0, #148]
     138:	ldr	x0, [sp, #24]
     13c:	ldr	w1, [x0, #148]
     140:	ldr	x0, [sp, #24]
     144:	ldr	w0, [x0, #8]
     148:	ldr	x2, [sp, #24]
     14c:	sxtw	x0, w0
     150:	add	x0, x0, #0x2
     154:	lsl	x0, x0, #3
     158:	add	x0, x2, x0
     15c:	ldr	w0, [x0]
     160:	cmp	w1, w0
     164:	b.cc	17c <grub_mod_init-0x130c>  // b.lo, b.ul, b.last
     168:	ldr	x0, [sp, #24]
     16c:	ldr	w0, [x0, #8]
     170:	add	w1, w0, #0x1
     174:	ldr	x0, [sp, #24]
     178:	str	w1, [x0, #8]
     17c:	ldr	x0, [sp, #24]
     180:	str	wzr, [x0, #144]
     184:	mov	w0, #0x0                   	// #0
     188:	ldp	x29, x30, [sp], #32
     18c:	ret
	...
     1a0:	stp	x29, x30, [sp, #-32]!
     1a4:	mov	x29, sp
     1a8:	str	x0, [sp, #24]
     1ac:	str	x1, [sp, #16]
     1b0:	ldr	x0, [sp, #24]
     1b4:	ldr	w1, [x0, #144]
     1b8:	ldr	x0, [sp, #24]
     1bc:	ldr	w0, [x0, #152]
     1c0:	add	w0, w0, #0x9
     1c4:	lsr	w0, w1, w0
     1c8:	cmp	w0, #0x0
     1cc:	b.eq	1f4 <grub_mod_init-0x1294>  // b.none
     1d0:	ldr	x0, [sp, #24]
     1d4:	bl	2c <grub_mod_init-0x145c>
     1d8:	cmp	w0, #0x0
     1dc:	b.eq	1f4 <grub_mod_init-0x1294>  // b.none
     1e0:	adrp	x0, 0 <grub_mod_init-0x1488>
     1e4:	add	x0, x0, #0x0
     1e8:	ldr	x0, [x0]
     1ec:	ldr	w0, [x0]
     1f0:	b	228 <grub_mod_init-0x1260>
     1f4:	ldr	x0, [sp, #24]
     1f8:	ldr	x1, [x0, #160]
     1fc:	ldr	x0, [sp, #24]
     200:	ldr	w0, [x0, #144]
     204:	add	w3, w0, #0x1
     208:	ldr	x2, [sp, #24]
     20c:	str	w3, [x2, #144]
     210:	mov	w0, w0
     214:	add	x0, x1, x0
     218:	ldrb	w1, [x0]
     21c:	ldr	x0, [sp, #16]
     220:	strb	w1, [x0]
     224:	mov	w0, #0x0                   	// #0
     228:	ldp	x29, x30, [sp], #32
     22c:	ret
	...
     238:	stp	x29, x30, [sp, #-48]!
     23c:	mov	x29, sp
     240:	str	x0, [sp, #24]
     244:	str	x1, [sp, #16]
     248:	strb	wzr, [sp, #47]
     24c:	strb	wzr, [sp, #46]
     250:	add	x0, sp, #0x2f
     254:	mov	x1, x0
     258:	ldr	x0, [sp, #24]
     25c:	bl	1a0 <grub_mod_init-0x12e8>
     260:	cmp	w0, #0x0
     264:	b.ne	280 <grub_mod_init-0x1208>  // b.any
     268:	add	x0, sp, #0x2e
     26c:	mov	x1, x0
     270:	ldr	x0, [sp, #24]
     274:	bl	1a0 <grub_mod_init-0x12e8>
     278:	cmp	w0, #0x0
     27c:	b.eq	294 <grub_mod_init-0x11f4>  // b.none
     280:	adrp	x0, 0 <grub_mod_init-0x1488>
     284:	add	x0, x0, #0x0
     288:	ldr	x0, [x0]
     28c:	ldr	w0, [x0]
     290:	b	2c0 <grub_mod_init-0x11c8>
     294:	ldrb	w0, [sp, #46]
     298:	and	w0, w0, #0xffff
     29c:	ubfiz	w0, w0, #8, #8
     2a0:	and	w1, w0, #0xffff
     2a4:	ldrb	w0, [sp, #47]
     2a8:	and	w0, w0, #0xffff
     2ac:	add	w0, w1, w0
     2b0:	and	w1, w0, #0xffff
     2b4:	ldr	x0, [sp, #16]
     2b8:	strh	w1, [x0]
     2bc:	mov	w0, #0x0                   	// #0
     2c0:	ldp	x29, x30, [sp], #48
     2c4:	ret
	...
     2d0:	stp	x29, x30, [sp, #-80]!
     2d4:	mov	x29, sp
     2d8:	str	x0, [sp, #24]
     2dc:	str	x1, [sp, #16]
     2e0:	add	x0, sp, #0x26
     2e4:	mov	x1, x0
     2e8:	ldr	x0, [sp, #24]
     2ec:	bl	238 <grub_mod_init-0x1250>
     2f0:	cmp	w0, #0x0
     2f4:	b.eq	30c <grub_mod_init-0x117c>  // b.none
     2f8:	adrp	x0, 0 <grub_mod_init-0x1488>
     2fc:	add	x0, x0, #0x0
     300:	ldr	x0, [x0]
     304:	ldr	w0, [x0]
     308:	b	6d8 <grub_mod_init-0xdb0>
     30c:	ldrh	w0, [sp, #38]
     310:	and	w0, w0, #0xfff
     314:	and	w0, w0, #0xffff
     318:	add	w0, w0, #0x1
     31c:	strh	w0, [sp, #78]
     320:	ldr	x0, [sp, #16]
     324:	cmp	x0, #0x0
     328:	b.eq	6c8 <grub_mod_init-0xdc0>  // b.none
     32c:	ldrh	w0, [sp, #38]
     330:	sxth	w0, w0
     334:	cmp	w0, #0x0
     338:	b.ge	5b4 <grub_mod_init-0xed4>  // b.tcont
     33c:	strb	wzr, [sp, #37]
     340:	str	wzr, [sp, #68]
     344:	ldr	w0, [sp, #68]
     348:	str	w0, [sp, #72]
     34c:	b	598 <grub_mod_init-0xef0>
     350:	ldr	w0, [sp, #68]
     354:	cmp	w0, #0x1, lsl #12
     358:	b.ls	374 <grub_mod_init-0x1114>  // b.plast
     35c:	adrp	x0, 0 <grub_mod_init-0x1488>
     360:	add	x0, x0, #0x0
     364:	ldr	x1, [x0]
     368:	mov	w0, #0x9                   	// #9
     36c:	bl	0 <grub_error>
     370:	b	6d8 <grub_mod_init-0xdb0>
     374:	ldr	w0, [sp, #72]
     378:	cmp	w0, #0x0
     37c:	b.ne	3cc <grub_mod_init-0x10bc>  // b.any
     380:	add	x0, sp, #0x25
     384:	mov	x1, x0
     388:	ldr	x0, [sp, #24]
     38c:	bl	1a0 <grub_mod_init-0x12e8>
     390:	cmp	w0, #0x0
     394:	b.eq	3ac <grub_mod_init-0x10dc>  // b.none
     398:	adrp	x0, 0 <grub_mod_init-0x1488>
     39c:	add	x0, x0, #0x0
     3a0:	ldr	x0, [x0]
     3a4:	ldr	w0, [x0]
     3a8:	b	6d8 <grub_mod_init-0xdb0>
     3ac:	mov	w0, #0x8                   	// #8
     3b0:	str	w0, [sp, #72]
     3b4:	ldrh	w0, [sp, #78]
     3b8:	sub	w0, w0, #0x1
     3bc:	strh	w0, [sp, #78]
     3c0:	ldrh	w0, [sp, #78]
     3c4:	cmp	w0, #0x0
     3c8:	b.eq	5a8 <grub_mod_init-0xee0>  // b.none
     3cc:	ldrb	w0, [sp, #37]
     3d0:	and	w0, w0, #0x1
     3d4:	cmp	w0, #0x0
     3d8:	b.eq	520 <grub_mod_init-0xf68>  // b.none
     3dc:	strh	wzr, [sp, #34]
     3e0:	add	x0, sp, #0x22
     3e4:	mov	x1, x0
     3e8:	ldr	x0, [sp, #24]
     3ec:	bl	238 <grub_mod_init-0x1250>
     3f0:	cmp	w0, #0x0
     3f4:	b.eq	40c <grub_mod_init-0x107c>  // b.none
     3f8:	adrp	x0, 0 <grub_mod_init-0x1488>
     3fc:	add	x0, x0, #0x0
     400:	ldr	x0, [x0]
     404:	ldr	w0, [x0]
     408:	b	6d8 <grub_mod_init-0xdb0>
     40c:	ldrh	w0, [sp, #34]
     410:	str	w0, [sp, #48]
     414:	ldrh	w0, [sp, #78]
     418:	sub	w0, w0, #0x2
     41c:	strh	w0, [sp, #78]
     420:	ldr	w0, [sp, #68]
     424:	cmp	w0, #0x0
     428:	b.ne	448 <grub_mod_init-0x1040>  // b.any
     42c:	adrp	x0, 0 <grub_mod_init-0x1488>
     430:	add	x0, x0, #0x0
     434:	ldr	x1, [x0]
     438:	mov	w0, #0x9                   	// #9
     43c:	bl	0 <grub_error>
     440:	mov	w0, #0x0                   	// #0
     444:	b	6d8 <grub_mod_init-0xdb0>
     448:	ldr	w0, [sp, #68]
     44c:	sub	w0, w0, #0x1
     450:	str	w0, [sp, #64]
     454:	mov	w0, #0xfff                 	// #4095
     458:	str	w0, [sp, #60]
     45c:	mov	w0, #0xc                   	// #12
     460:	str	w0, [sp, #56]
     464:	b	48c <grub_mod_init-0xffc>
     468:	ldr	w0, [sp, #60]
     46c:	lsr	w0, w0, #1
     470:	str	w0, [sp, #60]
     474:	ldr	w0, [sp, #56]
     478:	sub	w0, w0, #0x1
     47c:	str	w0, [sp, #56]
     480:	ldr	w0, [sp, #64]
     484:	lsr	w0, w0, #1
     488:	str	w0, [sp, #64]
     48c:	ldr	w0, [sp, #64]
     490:	cmp	w0, #0xf
     494:	b.hi	468 <grub_mod_init-0x1020>  // b.pmore
     498:	ldr	w0, [sp, #56]
     49c:	ldr	w1, [sp, #48]
     4a0:	lsr	w0, w1, w0
     4a4:	str	w0, [sp, #44]
     4a8:	ldr	w1, [sp, #48]
     4ac:	ldr	w0, [sp, #60]
     4b0:	and	w0, w1, w0
     4b4:	add	w0, w0, #0x3
     4b8:	str	w0, [sp, #40]
     4bc:	str	wzr, [sp, #64]
     4c0:	b	50c <grub_mod_init-0xf7c>
     4c4:	ldr	w1, [sp, #68]
     4c8:	ldr	w0, [sp, #44]
     4cc:	sub	w0, w1, w0
     4d0:	sub	w0, w0, #0x1
     4d4:	mov	w0, w0
     4d8:	ldr	x1, [sp, #16]
     4dc:	add	x1, x1, x0
     4e0:	ldr	w0, [sp, #68]
     4e4:	ldr	x2, [sp, #16]
     4e8:	add	x0, x2, x0
     4ec:	ldrb	w1, [x1]
     4f0:	strb	w1, [x0]
     4f4:	ldr	w0, [sp, #68]
     4f8:	add	w0, w0, #0x1
     4fc:	str	w0, [sp, #68]
     500:	ldr	w0, [sp, #64]
     504:	add	w0, w0, #0x1
     508:	str	w0, [sp, #64]
     50c:	ldr	w1, [sp, #64]
     510:	ldr	w0, [sp, #40]
     514:	cmp	w1, w0
     518:	b.cc	4c4 <grub_mod_init-0xfc4>  // b.lo, b.ul, b.last
     51c:	b	57c <grub_mod_init-0xf0c>
     520:	strb	wzr, [sp, #33]
     524:	add	x0, sp, #0x21
     528:	mov	x1, x0
     52c:	ldr	x0, [sp, #24]
     530:	bl	1a0 <grub_mod_init-0x12e8>
     534:	cmp	w0, #0x0
     538:	b.eq	550 <grub_mod_init-0xf38>  // b.none
     53c:	adrp	x0, 0 <grub_mod_init-0x1488>
     540:	add	x0, x0, #0x0
     544:	ldr	x0, [x0]
     548:	ldr	w0, [x0]
     54c:	b	6d8 <grub_mod_init-0xdb0>
     550:	ldr	w0, [sp, #68]
     554:	add	w1, w0, #0x1
     558:	str	w1, [sp, #68]
     55c:	mov	w0, w0
     560:	ldr	x1, [sp, #16]
     564:	add	x0, x1, x0
     568:	ldrb	w1, [sp, #33]
     56c:	strb	w1, [x0]
     570:	ldrh	w0, [sp, #78]
     574:	sub	w0, w0, #0x1
     578:	strh	w0, [sp, #78]
     57c:	ldrb	w0, [sp, #37]
     580:	lsr	w0, w0, #1
     584:	and	w0, w0, #0xff
     588:	strb	w0, [sp, #37]
     58c:	ldr	w0, [sp, #72]
     590:	sub	w0, w0, #0x1
     594:	str	w0, [sp, #72]
     598:	ldrh	w0, [sp, #78]
     59c:	cmp	w0, #0x0
     5a0:	b.ne	350 <grub_mod_init-0x1138>  // b.any
     5a4:	b	5ac <grub_mod_init-0xedc>
     5a8:	nop
     5ac:	mov	w0, #0x0                   	// #0
     5b0:	b	6d8 <grub_mod_init-0xdb0>
     5b4:	ldrh	w0, [sp, #78]
     5b8:	cmp	w0, #0x1, lsl #12
     5bc:	b.eq	6c8 <grub_mod_init-0xdc0>  // b.none
     5c0:	adrp	x0, 0 <grub_mod_init-0x1488>
     5c4:	add	x0, x0, #0x0
     5c8:	ldr	x1, [x0]
     5cc:	mov	w0, #0x9                   	// #9
     5d0:	bl	0 <grub_error>
     5d4:	b	6d8 <grub_mod_init-0xdb0>
     5d8:	ldr	x0, [sp, #24]
     5dc:	ldr	w0, [x0, #152]
     5e0:	add	w0, w0, #0x9
     5e4:	mov	w1, #0x1                   	// #1
     5e8:	lsl	w0, w1, w0
     5ec:	mov	w1, w0
     5f0:	ldr	x0, [sp, #24]
     5f4:	ldr	w0, [x0, #144]
     5f8:	sub	w0, w1, w0
     5fc:	str	w0, [sp, #52]
     600:	ldrh	w0, [sp, #78]
     604:	ldr	w1, [sp, #52]
     608:	cmp	w1, w0
     60c:	b.le	618 <grub_mod_init-0xe70>
     610:	ldrh	w0, [sp, #78]
     614:	str	w0, [sp, #52]
     618:	ldr	x0, [sp, #16]
     61c:	cmp	x0, #0x0
     620:	b.eq	66c <grub_mod_init-0xe1c>  // b.none
     624:	ldr	w0, [sp, #52]
     628:	cmp	w0, #0x0
     62c:	b.eq	66c <grub_mod_init-0xe1c>  // b.none
     630:	ldr	x0, [sp, #24]
     634:	ldr	x1, [x0, #160]
     638:	ldr	x0, [sp, #24]
     63c:	ldr	w0, [x0, #144]
     640:	mov	w0, w0
     644:	add	x0, x1, x0
     648:	ldrsw	x1, [sp, #52]
     64c:	mov	x2, x1
     650:	mov	x1, x0
     654:	ldr	x0, [sp, #16]
     658:	bl	0 <grub_mod_init-0x1488>
     65c:	ldrsw	x0, [sp, #52]
     660:	ldr	x1, [sp, #16]
     664:	add	x0, x1, x0
     668:	str	x0, [sp, #16]
     66c:	ldr	w0, [sp, #52]
     670:	and	w0, w0, #0xffff
     674:	ldrh	w1, [sp, #78]
     678:	sub	w0, w1, w0
     67c:	strh	w0, [sp, #78]
     680:	ldr	x0, [sp, #24]
     684:	ldr	w1, [x0, #144]
     688:	ldr	w0, [sp, #52]
     68c:	add	w1, w1, w0
     690:	ldr	x0, [sp, #24]
     694:	str	w1, [x0, #144]
     698:	ldrh	w0, [sp, #78]
     69c:	cmp	w0, #0x0
     6a0:	b.eq	6c8 <grub_mod_init-0xdc0>  // b.none
     6a4:	ldr	x0, [sp, #24]
     6a8:	bl	2c <grub_mod_init-0x145c>
     6ac:	cmp	w0, #0x0
     6b0:	b.eq	6c8 <grub_mod_init-0xdc0>  // b.none
     6b4:	adrp	x0, 0 <grub_mod_init-0x1488>
     6b8:	add	x0, x0, #0x0
     6bc:	ldr	x0, [x0]
     6c0:	ldr	w0, [x0]
     6c4:	b	6d8 <grub_mod_init-0xdb0>
     6c8:	ldrh	w0, [sp, #78]
     6cc:	cmp	w0, #0x0
     6d0:	b.ne	5d8 <grub_mod_init-0xeb0>  // b.any
     6d4:	mov	w0, #0x0                   	// #0
     6d8:	ldp	x29, x30, [sp], #80
     6dc:	ret
	...
     700:	stp	x29, x30, [sp, #-80]!
     704:	mov	x29, sp
     708:	str	x0, [sp, #40]
     70c:	str	x1, [sp, #32]
     710:	str	x2, [sp, #24]
     714:	ldr	x0, [sp, #40]
     718:	ldr	w0, [x0, #208]
     71c:	mov	w1, #0x3                   	// #3
     720:	sub	w0, w1, w0
     724:	str	w0, [sp, #60]
     728:	b	e44 <grub_mod_init-0x644>
     72c:	ldr	x0, [sp, #40]
     730:	ldr	x0, [x0, #8]
     734:	and	x0, x0, #0xf
     738:	cmp	x0, #0x0
     73c:	b.ne	8f0 <grub_mod_init-0xb98>  // b.any
     740:	ldr	x0, [sp, #40]
     744:	ldr	w1, [x0, #64]
     748:	ldr	x0, [sp, #40]
     74c:	ldr	w0, [x0, #68]
     750:	cmp	w1, w0
     754:	b.eq	784 <grub_mod_init-0xd04>  // b.none
     758:	ldr	x0, [sp, #40]
     75c:	ldr	w0, [x0]
     760:	and	w0, w0, #0x1
     764:	cmp	w0, #0x0
     768:	b.ne	784 <grub_mod_init-0xd04>  // b.any
     76c:	adrp	x0, 0 <grub_mod_init-0x1488>
     770:	add	x0, x0, #0x0
     774:	ldr	x1, [x0]
     778:	mov	w0, #0x9                   	// #9
     77c:	bl	0 <grub_error>
     780:	b	e54 <grub_mod_init-0x634>
     784:	ldr	x0, [sp, #40]
     788:	str	wzr, [x0, #68]
     78c:	ldr	x0, [sp, #40]
     790:	ldr	w1, [x0, #68]
     794:	ldr	x0, [sp, #40]
     798:	str	w1, [x0, #64]
     79c:	ldr	x0, [sp, #40]
     7a0:	ldr	x0, [x0, #8]
     7a4:	mov	w1, w0
     7a8:	ldr	x0, [sp, #40]
     7ac:	str	w1, [x0, #204]
     7b0:	ldr	x0, [sp, #40]
     7b4:	ldr	w0, [x0, #208]
     7b8:	add	w0, w0, #0x9
     7bc:	mov	w1, #0x1                   	// #1
     7c0:	lsl	w0, w1, w0
     7c4:	mov	w1, w0
     7c8:	ldr	x0, [sp, #40]
     7cc:	str	w1, [x0, #200]
     7d0:	ldr	x0, [sp, #40]
     7d4:	ldr	x1, [x0, #8]
     7d8:	ldr	x0, [sp, #40]
     7dc:	ldr	x0, [x0, #24]
     7e0:	cmp	x1, x0
     7e4:	b.cc	8cc <grub_mod_init-0xbbc>  // b.lo, b.ul, b.last
     7e8:	ldr	x0, [sp, #40]
     7ec:	bl	0 <grub_ntfs_read_run_list>
     7f0:	cmp	w0, #0x0
     7f4:	b.eq	8cc <grub_mod_init-0xbbc>  // b.none
     7f8:	adrp	x0, 0 <grub_mod_init-0x1488>
     7fc:	add	x0, x0, #0x0
     800:	ldr	x0, [x0]
     804:	ldr	w0, [x0]
     808:	b	e54 <grub_mod_init-0x634>
     80c:	ldr	x0, [sp, #40]
     810:	ldr	w0, [x0]
     814:	and	w0, w0, #0x1
     818:	cmp	w0, #0x0
     81c:	b.ne	8ec <grub_mod_init-0xb9c>  // b.any
     820:	ldr	x0, [sp, #40]
     824:	ldr	x1, [x0, #24]
     828:	ldr	x0, [sp, #40]
     82c:	ldr	w0, [x0, #68]
     830:	mov	w2, w1
     834:	ldr	x1, [sp, #40]
     838:	sxtw	x0, w0
     83c:	add	x0, x0, #0x8
     840:	lsl	x0, x0, #3
     844:	add	x0, x1, x0
     848:	str	w2, [x0, #8]
     84c:	ldr	x0, [sp, #40]
     850:	ldr	x0, [x0, #32]
     854:	mov	w1, w0
     858:	ldr	x0, [sp, #40]
     85c:	ldr	x0, [x0, #24]
     860:	add	w0, w1, w0
     864:	ldr	x1, [sp, #40]
     868:	ldr	x1, [x1, #16]
     86c:	mov	w2, w1
     870:	ldr	x1, [sp, #40]
     874:	ldr	w3, [x1, #68]
     878:	sub	w1, w0, w2
     87c:	ldr	x2, [sp, #40]
     880:	sxtw	x0, w3
     884:	add	x0, x0, #0x8
     888:	lsl	x0, x0, #3
     88c:	add	x0, x2, x0
     890:	str	w1, [x0, #12]
     894:	ldr	x0, [sp, #40]
     898:	ldr	w0, [x0, #68]
     89c:	add	w1, w0, #0x1
     8a0:	ldr	x0, [sp, #40]
     8a4:	str	w1, [x0, #68]
     8a8:	ldr	x0, [sp, #40]
     8ac:	bl	0 <grub_ntfs_read_run_list>
     8b0:	cmp	w0, #0x0
     8b4:	b.eq	8cc <grub_mod_init-0xbbc>  // b.none
     8b8:	adrp	x0, 0 <grub_mod_init-0x1488>
     8bc:	add	x0, x0, #0x0
     8c0:	ldr	x0, [x0]
     8c4:	ldr	w0, [x0]
     8c8:	b	e54 <grub_mod_init-0x634>
     8cc:	ldr	x0, [sp, #40]
     8d0:	ldr	x0, [x0, #8]
     8d4:	add	x1, x0, #0x10
     8d8:	ldr	x0, [sp, #40]
     8dc:	ldr	x0, [x0, #24]
     8e0:	cmp	x1, x0
     8e4:	b.hi	80c <grub_mod_init-0xc7c>  // b.pmore
     8e8:	b	8f0 <grub_mod_init-0xb98>
     8ec:	nop
     8f0:	ldr	x0, [sp, #40]
     8f4:	ldr	x0, [x0, #8]
     8f8:	and	w0, w0, #0xf
     8fc:	mov	w1, #0x10                  	// #16
     900:	sub	w1, w1, w0
     904:	ldr	w0, [sp, #60]
     908:	lsr	w0, w1, w0
     90c:	mov	w0, w0
     910:	str	x0, [sp, #72]
     914:	ldr	x1, [sp, #72]
     918:	ldr	x0, [sp, #24]
     91c:	cmp	x1, x0
     920:	b.ls	92c <grub_mod_init-0xb5c>  // b.plast
     924:	ldr	x0, [sp, #24]
     928:	str	x0, [sp, #72]
     92c:	ldr	x1, [sp, #24]
     930:	ldr	x0, [sp, #72]
     934:	sub	x0, x1, x0
     938:	str	x0, [sp, #24]
     93c:	ldr	x0, [sp, #40]
     940:	ldr	w0, [x0]
     944:	and	w0, w0, #0x1
     948:	cmp	w0, #0x0
     94c:	b.eq	acc <grub_mod_init-0x9bc>  // b.none
     950:	ldr	x0, [sp, #40]
     954:	ldr	x1, [x0, #8]
     958:	ldr	w0, [sp, #60]
     95c:	ldr	x2, [sp, #72]
     960:	lsl	x0, x2, x0
     964:	add	x1, x1, x0
     968:	ldr	x0, [sp, #40]
     96c:	str	x1, [x0, #8]
     970:	ldr	x0, [sp, #40]
     974:	ldr	w0, [x0, #68]
     978:	cmp	w0, #0x0
     97c:	b.ne	abc <grub_mod_init-0x9cc>  // b.any
     980:	ldr	x0, [sp, #32]
     984:	cmp	x0, #0x0
     988:	b.eq	e44 <grub_mod_init-0x644>  // b.none
     98c:	ldr	x0, [sp, #72]
     990:	lsl	x0, x0, #12
     994:	mov	x2, x0
     998:	mov	w1, #0x0                   	// #0
     99c:	ldr	x0, [sp, #32]
     9a0:	bl	0 <grub_memset>
     9a4:	ldr	x0, [sp, #72]
     9a8:	lsl	x0, x0, #12
     9ac:	ldr	x1, [sp, #32]
     9b0:	add	x0, x1, x0
     9b4:	str	x0, [sp, #32]
     9b8:	adrp	x0, 0 <grub_mod_init-0x1488>
     9bc:	add	x0, x0, #0x0
     9c0:	ldr	x0, [x0]
     9c4:	ldr	x0, [x0]
     9c8:	cmp	x0, #0x0
     9cc:	b.eq	e44 <grub_mod_init-0x644>  // b.none
     9d0:	ldr	x0, [sp, #40]
     9d4:	ldr	x0, [x0, #224]
     9d8:	cmp	x0, #0x0
     9dc:	b.eq	e44 <grub_mod_init-0x644>  // b.none
     9e0:	adrp	x0, 0 <grub_mod_init-0x1488>
     9e4:	add	x0, x0, #0x0
     9e8:	ldr	x0, [x0]
     9ec:	ldr	x4, [x0]
     9f0:	ldr	x0, [sp, #72]
     9f4:	lsl	w1, w0, #12
     9f8:	ldr	x0, [sp, #40]
     9fc:	ldr	x0, [x0, #224]
     a00:	mov	x3, x0
     a04:	mov	w2, w1
     a08:	mov	w1, #0x0                   	// #0
     a0c:	mov	x0, #0x0                   	// #0
     a10:	blr	x4
     a14:	b	e44 <grub_mod_init-0x644>
     a18:	ldr	x0, [sp, #40]
     a1c:	add	x0, x0, #0x38
     a20:	ldr	x1, [sp, #32]
     a24:	bl	2d0 <grub_mod_init-0x11b8>
     a28:	cmp	w0, #0x0
     a2c:	b.eq	a44 <grub_mod_init-0xa44>  // b.none
     a30:	adrp	x0, 0 <grub_mod_init-0x1488>
     a34:	add	x0, x0, #0x0
     a38:	ldr	x0, [x0]
     a3c:	ldr	w0, [x0]
     a40:	b	e54 <grub_mod_init-0x634>
     a44:	ldr	x0, [sp, #32]
     a48:	cmp	x0, #0x0
     a4c:	b.eq	a5c <grub_mod_init-0xa2c>  // b.none
     a50:	ldr	x0, [sp, #32]
     a54:	add	x0, x0, #0x1, lsl #12
     a58:	str	x0, [sp, #32]
     a5c:	adrp	x0, 0 <grub_mod_init-0x1488>
     a60:	add	x0, x0, #0x0
     a64:	ldr	x0, [x0]
     a68:	ldr	x0, [x0]
     a6c:	cmp	x0, #0x0
     a70:	b.eq	ab0 <grub_mod_init-0x9d8>  // b.none
     a74:	ldr	x0, [sp, #40]
     a78:	ldr	x0, [x0, #224]
     a7c:	cmp	x0, #0x0
     a80:	b.eq	ab0 <grub_mod_init-0x9d8>  // b.none
     a84:	adrp	x0, 0 <grub_mod_init-0x1488>
     a88:	add	x0, x0, #0x0
     a8c:	ldr	x0, [x0]
     a90:	ldr	x4, [x0]
     a94:	ldr	x0, [sp, #40]
     a98:	ldr	x0, [x0, #224]
     a9c:	mov	x3, x0
     aa0:	mov	w2, #0x1000                	// #4096
     aa4:	mov	w1, #0x0                   	// #0
     aa8:	mov	x0, #0x0                   	// #0
     aac:	blr	x4
     ab0:	ldr	x0, [sp, #72]
     ab4:	sub	x0, x0, #0x1
     ab8:	str	x0, [sp, #72]
     abc:	ldr	x0, [sp, #72]
     ac0:	cmp	x0, #0x0
     ac4:	b.ne	a18 <grub_mod_init-0xa70>  // b.any
     ac8:	b	e44 <grub_mod_init-0x644>
     acc:	ldr	w0, [sp, #60]
     ad0:	ldr	x1, [sp, #72]
     ad4:	lsl	x0, x1, x0
     ad8:	str	x0, [sp, #72]
     adc:	b	ce8 <grub_mod_init-0x7a0>
     ae0:	ldr	x0, [sp, #40]
     ae4:	ldr	w0, [x0, #64]
     ae8:	ldr	x1, [sp, #40]
     aec:	sxtw	x0, w0
     af0:	add	x0, x0, #0x8
     af4:	lsl	x0, x0, #3
     af8:	add	x0, x1, x0
     afc:	ldr	w0, [x0, #8]
     b00:	mov	w1, w0
     b04:	ldr	x0, [sp, #40]
     b08:	ldr	x0, [x0, #8]
     b0c:	sub	x0, x1, x0
     b10:	str	x0, [sp, #64]
     b14:	ldr	x1, [sp, #64]
     b18:	ldr	x0, [sp, #72]
     b1c:	cmp	x1, x0
     b20:	b.ls	b2c <grub_mod_init-0x95c>  // b.plast
     b24:	ldr	x0, [sp, #72]
     b28:	str	x0, [sp, #64]
     b2c:	ldr	x0, [sp, #40]
     b30:	ldr	x1, [x0, #8]
     b34:	ldr	x0, [sp, #64]
     b38:	add	x1, x1, x0
     b3c:	ldr	x0, [sp, #40]
     b40:	str	x1, [x0, #8]
     b44:	ldr	x0, [sp, #32]
     b48:	cmp	x0, #0x0
     b4c:	b.eq	c90 <grub_mod_init-0x7f8>  // b.none
     b50:	ldr	x0, [sp, #40]
     b54:	ldr	x5, [x0, #56]
     b58:	ldr	x0, [sp, #40]
     b5c:	ldr	w0, [x0, #64]
     b60:	ldr	x1, [sp, #40]
     b64:	sxtw	x0, w0
     b68:	add	x0, x0, #0x8
     b6c:	lsl	x0, x0, #3
     b70:	add	x0, x1, x0
     b74:	ldr	w0, [x0, #12]
     b78:	mov	w1, w0
     b7c:	ldr	x0, [sp, #40]
     b80:	ldr	x2, [x0, #8]
     b84:	ldr	x0, [sp, #40]
     b88:	ldr	w0, [x0, #64]
     b8c:	ldr	x3, [sp, #40]
     b90:	sxtw	x0, w0
     b94:	add	x0, x0, #0x8
     b98:	lsl	x0, x0, #3
     b9c:	add	x0, x3, x0
     ba0:	ldr	w0, [x0, #8]
     ba4:	mov	w0, w0
     ba8:	sub	x0, x2, x0
     bac:	add	x1, x1, x0
     bb0:	ldr	x0, [sp, #40]
     bb4:	ldr	w0, [x0, #208]
     bb8:	lsl	x6, x1, x0
     bbc:	ldr	x0, [sp, #40]
     bc0:	ldr	w0, [x0, #208]
     bc4:	add	w0, w0, #0x9
     bc8:	ldr	x1, [sp, #64]
     bcc:	lsl	x0, x1, x0
     bd0:	ldr	x4, [sp, #32]
     bd4:	mov	x3, x0
     bd8:	mov	x2, #0x0                   	// #0
     bdc:	mov	x1, x6
     be0:	mov	x0, x5
     be4:	bl	0 <grub_disk_read>
     be8:	cmp	w0, #0x0
     bec:	b.eq	c04 <grub_mod_init-0x884>  // b.none
     bf0:	adrp	x0, 0 <grub_mod_init-0x1488>
     bf4:	add	x0, x0, #0x0
     bf8:	ldr	x0, [x0]
     bfc:	ldr	w0, [x0]
     c00:	b	e54 <grub_mod_init-0x634>
     c04:	adrp	x0, 0 <grub_mod_init-0x1488>
     c08:	add	x0, x0, #0x0
     c0c:	ldr	x0, [x0]
     c10:	ldr	x0, [x0]
     c14:	cmp	x0, #0x0
     c18:	b.eq	c70 <grub_mod_init-0x818>  // b.none
     c1c:	ldr	x0, [sp, #40]
     c20:	ldr	x0, [x0, #224]
     c24:	cmp	x0, #0x0
     c28:	b.eq	c70 <grub_mod_init-0x818>  // b.none
     c2c:	adrp	x0, 0 <grub_mod_init-0x1488>
     c30:	add	x0, x0, #0x0
     c34:	ldr	x0, [x0]
     c38:	ldr	x4, [x0]
     c3c:	ldr	x0, [sp, #40]
     c40:	ldr	w0, [x0, #208]
     c44:	add	w0, w0, #0x9
     c48:	ldr	x1, [sp, #64]
     c4c:	lsl	x0, x1, x0
     c50:	mov	w1, w0
     c54:	ldr	x0, [sp, #40]
     c58:	ldr	x0, [x0, #224]
     c5c:	mov	x3, x0
     c60:	mov	w2, w1
     c64:	mov	w1, #0x0                   	// #0
     c68:	mov	x0, #0x0                   	// #0
     c6c:	blr	x4
     c70:	ldr	x0, [sp, #40]
     c74:	ldr	w0, [x0, #208]
     c78:	add	w0, w0, #0x9
     c7c:	ldr	x1, [sp, #64]
     c80:	lsl	x0, x1, x0
     c84:	ldr	x1, [sp, #32]
     c88:	add	x0, x1, x0
     c8c:	str	x0, [sp, #32]
     c90:	ldr	x1, [sp, #72]
     c94:	ldr	x0, [sp, #64]
     c98:	sub	x0, x1, x0
     c9c:	str	x0, [sp, #72]
     ca0:	ldr	x0, [sp, #40]
     ca4:	ldr	x1, [x0, #8]
     ca8:	ldr	x0, [sp, #40]
     cac:	ldr	w0, [x0, #64]
     cb0:	ldr	x2, [sp, #40]
     cb4:	sxtw	x0, w0
     cb8:	add	x0, x0, #0x8
     cbc:	lsl	x0, x0, #3
     cc0:	add	x0, x2, x0
     cc4:	ldr	w0, [x0, #8]
     cc8:	mov	w0, w0
     ccc:	cmp	x1, x0
     cd0:	b.cc	ce8 <grub_mod_init-0x7a0>  // b.lo, b.ul, b.last
     cd4:	ldr	x0, [sp, #40]
     cd8:	ldr	w0, [x0, #64]
     cdc:	add	w1, w0, #0x1
     ce0:	ldr	x0, [sp, #40]
     ce4:	str	w1, [x0, #64]
     ce8:	ldr	x0, [sp, #40]
     cec:	ldr	w1, [x0, #64]
     cf0:	ldr	x0, [sp, #40]
     cf4:	ldr	w0, [x0, #68]
     cf8:	cmp	w1, w0
     cfc:	b.ge	d0c <grub_mod_init-0x77c>  // b.tcont
     d00:	ldr	x0, [sp, #72]
     d04:	cmp	x0, #0x0
     d08:	b.ne	ae0 <grub_mod_init-0x9a8>  // b.any
     d0c:	ldr	x0, [sp, #72]
     d10:	cmp	x0, #0x0
     d14:	b.eq	e44 <grub_mod_init-0x644>  // b.none
     d18:	ldr	x0, [sp, #32]
     d1c:	cmp	x0, #0x0
     d20:	b.eq	e2c <grub_mod_init-0x65c>  // b.none
     d24:	ldr	x0, [sp, #40]
     d28:	ldr	x5, [x0, #56]
     d2c:	ldr	x0, [sp, #40]
     d30:	ldr	x1, [x0, #8]
     d34:	ldr	x0, [sp, #40]
     d38:	ldr	x0, [x0, #16]
     d3c:	sub	x1, x1, x0
     d40:	ldr	x0, [sp, #40]
     d44:	ldr	x0, [x0, #32]
     d48:	add	x1, x1, x0
     d4c:	ldr	x0, [sp, #40]
     d50:	ldr	w0, [x0, #208]
     d54:	lsl	x6, x1, x0
     d58:	ldr	x0, [sp, #40]
     d5c:	ldr	w0, [x0, #208]
     d60:	add	w0, w0, #0x9
     d64:	ldr	x1, [sp, #72]
     d68:	lsl	x0, x1, x0
     d6c:	ldr	x4, [sp, #32]
     d70:	mov	x3, x0
     d74:	mov	x2, #0x0                   	// #0
     d78:	mov	x1, x6
     d7c:	mov	x0, x5
     d80:	bl	0 <grub_disk_read>
     d84:	cmp	w0, #0x0
     d88:	b.eq	da0 <grub_mod_init-0x6e8>  // b.none
     d8c:	adrp	x0, 0 <grub_mod_init-0x1488>
     d90:	add	x0, x0, #0x0
     d94:	ldr	x0, [x0]
     d98:	ldr	w0, [x0]
     d9c:	b	e54 <grub_mod_init-0x634>
     da0:	ldr	x0, [sp, #40]
     da4:	ldr	w0, [x0, #208]
     da8:	add	w0, w0, #0x9
     dac:	ldr	x1, [sp, #72]
     db0:	lsl	x0, x1, x0
     db4:	ldr	x1, [sp, #32]
     db8:	add	x0, x1, x0
     dbc:	str	x0, [sp, #32]
     dc0:	adrp	x0, 0 <grub_mod_init-0x1488>
     dc4:	add	x0, x0, #0x0
     dc8:	ldr	x0, [x0]
     dcc:	ldr	x0, [x0]
     dd0:	cmp	x0, #0x0
     dd4:	b.eq	e2c <grub_mod_init-0x65c>  // b.none
     dd8:	ldr	x0, [sp, #40]
     ddc:	ldr	x0, [x0, #224]
     de0:	cmp	x0, #0x0
     de4:	b.eq	e2c <grub_mod_init-0x65c>  // b.none
     de8:	adrp	x0, 0 <grub_mod_init-0x1488>
     dec:	add	x0, x0, #0x0
     df0:	ldr	x0, [x0]
     df4:	ldr	x4, [x0]
     df8:	ldr	x0, [sp, #40]
     dfc:	ldr	w0, [x0, #208]
     e00:	add	w0, w0, #0x9
     e04:	ldr	x1, [sp, #72]
     e08:	lsl	x0, x1, x0
     e0c:	mov	w1, w0
     e10:	ldr	x0, [sp, #40]
     e14:	ldr	x0, [x0, #224]
     e18:	mov	x3, x0
     e1c:	mov	w2, w1
     e20:	mov	w1, #0x0                   	// #0
     e24:	mov	x0, #0x0                   	// #0
     e28:	blr	x4
     e2c:	ldr	x0, [sp, #40]
     e30:	ldr	x1, [x0, #8]
     e34:	ldr	x0, [sp, #72]
     e38:	add	x1, x1, x0
     e3c:	ldr	x0, [sp, #40]
     e40:	str	x1, [x0, #8]
     e44:	ldr	x0, [sp, #24]
     e48:	cmp	x0, #0x0
     e4c:	b.ne	72c <grub_mod_init-0xd5c>  // b.any
     e50:	mov	w0, #0x0                   	// #0
     e54:	ldp	x29, x30, [sp], #80
     e58:	ret
     e5c:	nop
	...
     e78:	stp	x29, x30, [sp, #-128]!
     e7c:	mov	x29, sp
     e80:	str	x19, [sp, #16]
     e84:	str	x0, [sp, #56]
     e88:	str	x1, [sp, #48]
     e8c:	str	x2, [sp, #40]
     e90:	str	x3, [sp, #32]
     e94:	ldr	x0, [sp, #32]
     e98:	ldr	x0, [x0, #48]
     e9c:	ldr	x0, [x0, #56]
     ea0:	cmp	x0, #0x0
     ea4:	b.eq	fe0 <grub_mod_init-0x4a8>  // b.none
     ea8:	ldr	x0, [sp, #48]
     eac:	and	x1, x0, #0xfffffffffffff000
     eb0:	ldr	x0, [sp, #32]
     eb4:	ldr	x0, [x0, #48]
     eb8:	ldr	w0, [x0, #48]
     ebc:	mov	w0, w0
     ec0:	cmp	x1, x0
     ec4:	b.ne	102c <grub_mod_init-0x45c>  // b.any
     ec8:	ldr	x0, [sp, #32]
     ecc:	ldr	x0, [x0, #48]
     ed0:	ldr	w0, [x0, #48]
     ed4:	mov	w1, w0
     ed8:	ldr	x0, [sp, #48]
     edc:	sub	x0, x1, x0
     ee0:	add	x0, x0, #0x1, lsl #12
     ee4:	str	x0, [sp, #112]
     ee8:	ldr	x1, [sp, #112]
     eec:	ldr	x0, [sp, #40]
     ef0:	cmp	x1, x0
     ef4:	b.ls	f00 <grub_mod_init-0x588>  // b.plast
     ef8:	ldr	x0, [sp, #40]
     efc:	str	x0, [sp, #112]
     f00:	ldr	x0, [sp, #32]
     f04:	ldr	x0, [x0, #48]
     f08:	ldr	x1, [x0, #56]
     f0c:	ldr	x0, [sp, #32]
     f10:	ldr	x0, [x0, #48]
     f14:	ldr	w0, [x0, #48]
     f18:	mov	w0, w0
     f1c:	ldr	x2, [sp, #48]
     f20:	sub	x0, x2, x0
     f24:	add	x0, x1, x0
     f28:	ldr	x2, [sp, #112]
     f2c:	mov	x1, x0
     f30:	ldr	x0, [sp, #56]
     f34:	bl	0 <grub_mod_init-0x1488>
     f38:	adrp	x0, 0 <grub_mod_init-0x1488>
     f3c:	add	x0, x0, #0x0
     f40:	ldr	x0, [x0]
     f44:	ldr	x0, [x0]
     f48:	cmp	x0, #0x0
     f4c:	b.eq	f94 <grub_mod_init-0x4f4>  // b.none
     f50:	ldr	x0, [sp, #32]
     f54:	ldr	x0, [x0, #224]
     f58:	cmp	x0, #0x0
     f5c:	b.eq	f94 <grub_mod_init-0x4f4>  // b.none
     f60:	adrp	x0, 0 <grub_mod_init-0x1488>
     f64:	add	x0, x0, #0x0
     f68:	ldr	x0, [x0]
     f6c:	ldr	x4, [x0]
     f70:	ldr	x0, [sp, #112]
     f74:	mov	w1, w0
     f78:	ldr	x0, [sp, #32]
     f7c:	ldr	x0, [x0, #224]
     f80:	mov	x3, x0
     f84:	mov	w2, w1
     f88:	mov	w1, #0x0                   	// #0
     f8c:	mov	x0, #0x0                   	// #0
     f90:	blr	x4
     f94:	ldr	x1, [sp, #112]
     f98:	ldr	x0, [sp, #40]
     f9c:	cmp	x1, x0
     fa0:	b.ne	fac <grub_mod_init-0x4dc>  // b.any
     fa4:	mov	w0, #0x0                   	// #0
     fa8:	b	1468 <grub_mod_init-0x20>
     fac:	ldr	x1, [sp, #56]
     fb0:	ldr	x0, [sp, #112]
     fb4:	add	x0, x1, x0
     fb8:	str	x0, [sp, #56]
     fbc:	ldr	x1, [sp, #40]
     fc0:	ldr	x0, [sp, #112]
     fc4:	sub	x0, x1, x0
     fc8:	str	x0, [sp, #40]
     fcc:	ldr	x1, [sp, #48]
     fd0:	ldr	x0, [sp, #112]
     fd4:	add	x0, x1, x0
     fd8:	str	x0, [sp, #48]
     fdc:	b	102c <grub_mod_init-0x45c>
     fe0:	ldr	x0, [sp, #32]
     fe4:	ldr	x19, [x0, #48]
     fe8:	mov	x0, #0x1000                	// #4096
     fec:	bl	0 <grub_malloc>
     ff0:	str	x0, [x19, #56]
     ff4:	ldr	x0, [sp, #32]
     ff8:	ldr	x0, [x0, #48]
     ffc:	ldr	x0, [x0, #56]
    1000:	cmp	x0, #0x0
    1004:	b.ne	101c <grub_mod_init-0x46c>  // b.any
    1008:	adrp	x0, 0 <grub_mod_init-0x1488>
    100c:	add	x0, x0, #0x0
    1010:	ldr	x0, [x0]
    1014:	ldr	w0, [x0]
    1018:	b	1468 <grub_mod_init-0x20>
    101c:	ldr	x0, [sp, #32]
    1020:	ldr	x0, [x0, #48]
    1024:	mov	w1, #0x1                   	// #1
    1028:	str	w1, [x0, #48]
    102c:	ldr	x0, [sp, #48]
    1030:	lsr	x1, x0, #12
    1034:	ldr	x0, [sp, #32]
    1038:	ldr	w0, [x0, #208]
    103c:	mov	w2, #0x8                   	// #8
    1040:	asr	w0, w2, w0
    1044:	sxtw	x0, w0
    1048:	mul	x1, x1, x0
    104c:	ldr	x0, [sp, #32]
    1050:	str	x1, [x0, #8]
    1054:	ldr	x0, [sp, #32]
    1058:	ldr	x0, [x0, #8]
    105c:	str	x0, [sp, #96]
    1060:	ldr	x0, [sp, #32]
    1064:	ldr	x0, [x0, #8]
    1068:	and	x1, x0, #0xfffffffffffffff0
    106c:	ldr	x0, [sp, #32]
    1070:	str	x1, [x0, #8]
    1074:	b	109c <grub_mod_init-0x3ec>
    1078:	ldr	x0, [sp, #32]
    107c:	bl	0 <grub_ntfs_read_run_list>
    1080:	cmp	w0, #0x0
    1084:	b.eq	109c <grub_mod_init-0x3ec>  // b.none
    1088:	adrp	x0, 0 <grub_mod_init-0x1488>
    108c:	add	x0, x0, #0x0
    1090:	ldr	x0, [x0]
    1094:	ldr	w0, [x0]
    1098:	b	1468 <grub_mod_init-0x20>
    109c:	ldr	x0, [sp, #32]
    10a0:	ldr	x1, [x0, #24]
    10a4:	ldr	x0, [sp, #32]
    10a8:	ldr	x0, [x0, #8]
    10ac:	cmp	x1, x0
    10b0:	b.ls	1078 <grub_mod_init-0x410>  // b.plast
    10b4:	ldr	x0, [sp, #32]
    10b8:	str	wzr, [x0, #68]
    10bc:	ldr	x0, [sp, #32]
    10c0:	ldr	w1, [x0, #68]
    10c4:	ldr	x0, [sp, #32]
    10c8:	str	w1, [x0, #64]
    10cc:	ldr	x0, [sp, #32]
    10d0:	ldr	w0, [x0, #208]
    10d4:	add	w0, w0, #0x9
    10d8:	mov	w1, #0x1                   	// #1
    10dc:	lsl	w0, w1, w0
    10e0:	sxtw	x0, w0
    10e4:	bl	0 <grub_malloc>
    10e8:	mov	x1, x0
    10ec:	ldr	x0, [sp, #32]
    10f0:	str	x1, [x0, #216]
    10f4:	ldr	x0, [sp, #32]
    10f8:	ldr	x0, [x0, #216]
    10fc:	cmp	x0, #0x0
    1100:	b.ne	110c <grub_mod_init-0x37c>  // b.any
    1104:	mov	w0, #0x0                   	// #0
    1108:	b	1468 <grub_mod_init-0x20>
    110c:	str	wzr, [sp, #124]
    1110:	ldr	x0, [sp, #32]
    1114:	ldr	x0, [x0, #8]
    1118:	ldr	x1, [sp, #96]
    111c:	cmp	x1, x0
    1120:	b.ls	1178 <grub_mod_init-0x310>  // b.plast
    1124:	ldr	x0, [sp, #32]
    1128:	ldr	x0, [x0, #8]
    112c:	ldr	x1, [sp, #96]
    1130:	sub	x1, x1, x0
    1134:	ldr	x0, [sp, #32]
    1138:	ldr	w0, [x0, #208]
    113c:	mov	w2, #0x3                   	// #3
    1140:	sub	w0, w2, w0
    1144:	lsr	x0, x1, x0
    1148:	mov	x2, x0
    114c:	mov	x1, #0x0                   	// #0
    1150:	ldr	x0, [sp, #32]
    1154:	bl	700 <grub_mod_init-0xd88>
    1158:	cmp	w0, #0x0
    115c:	b.eq	1178 <grub_mod_init-0x310>  // b.none
    1160:	adrp	x0, 0 <grub_mod_init-0x1488>
    1164:	add	x0, x0, #0x0
    1168:	ldr	x0, [x0]
    116c:	ldr	w0, [x0]
    1170:	str	w0, [sp, #124]
    1174:	b	1448 <grub_mod_init-0x40>
    1178:	ldr	x0, [sp, #48]
    117c:	and	x0, x0, #0xfff
    1180:	cmp	x0, #0x0
    1184:	b.eq	12f0 <grub_mod_init-0x198>  // b.none
    1188:	ldr	x0, [sp, #32]
    118c:	ldr	x0, [x0, #224]
    1190:	str	x0, [sp, #88]
    1194:	ldr	x0, [sp, #32]
    1198:	str	xzr, [x0, #224]
    119c:	ldr	x0, [sp, #32]
    11a0:	ldr	x1, [x0, #8]
    11a4:	ldr	x0, [sp, #32]
    11a8:	ldr	w0, [x0, #208]
    11ac:	add	w0, w0, #0x9
    11b0:	lsl	x0, x1, x0
    11b4:	str	w0, [sp, #84]
    11b8:	ldr	x0, [sp, #32]
    11bc:	ldr	x0, [x0, #48]
    11c0:	ldr	x0, [x0, #56]
    11c4:	mov	x2, #0x1                   	// #1
    11c8:	mov	x1, x0
    11cc:	ldr	x0, [sp, #32]
    11d0:	bl	700 <grub_mod_init-0xd88>
    11d4:	cmp	w0, #0x0
    11d8:	b.eq	11f4 <grub_mod_init-0x294>  // b.none
    11dc:	adrp	x0, 0 <grub_mod_init-0x1488>
    11e0:	add	x0, x0, #0x0
    11e4:	ldr	x0, [x0]
    11e8:	ldr	w0, [x0]
    11ec:	str	w0, [sp, #124]
    11f0:	b	1448 <grub_mod_init-0x40>
    11f4:	ldr	x0, [sp, #32]
    11f8:	ldr	x1, [sp, #88]
    11fc:	str	x1, [x0, #224]
    1200:	ldr	x0, [sp, #32]
    1204:	ldr	x0, [x0, #48]
    1208:	ldr	w1, [sp, #84]
    120c:	str	w1, [x0, #48]
    1210:	ldr	x0, [sp, #48]
    1214:	and	w0, w0, #0xfff
    1218:	str	w0, [sp, #80]
    121c:	mov	w1, #0x1000                	// #4096
    1220:	ldr	w0, [sp, #80]
    1224:	sub	w0, w1, w0
    1228:	str	w0, [sp, #108]
    122c:	ldr	w0, [sp, #108]
    1230:	ldr	x1, [sp, #40]
    1234:	cmp	x1, x0
    1238:	b.cs	1244 <grub_mod_init-0x244>  // b.hs, b.nlast
    123c:	ldr	x0, [sp, #40]
    1240:	str	w0, [sp, #108]
    1244:	ldr	x0, [sp, #32]
    1248:	ldr	x0, [x0, #48]
    124c:	ldr	x1, [x0, #56]
    1250:	ldr	w0, [sp, #80]
    1254:	add	x0, x1, x0
    1258:	ldr	w1, [sp, #108]
    125c:	mov	x2, x1
    1260:	mov	x1, x0
    1264:	ldr	x0, [sp, #56]
    1268:	bl	0 <grub_mod_init-0x1488>
    126c:	adrp	x0, 0 <grub_mod_init-0x1488>
    1270:	add	x0, x0, #0x0
    1274:	ldr	x0, [x0]
    1278:	ldr	x0, [x0]
    127c:	cmp	x0, #0x0
    1280:	b.eq	12c0 <grub_mod_init-0x1c8>  // b.none
    1284:	ldr	x0, [sp, #32]
    1288:	ldr	x0, [x0, #224]
    128c:	cmp	x0, #0x0
    1290:	b.eq	12c0 <grub_mod_init-0x1c8>  // b.none
    1294:	adrp	x0, 0 <grub_mod_init-0x1488>
    1298:	add	x0, x0, #0x0
    129c:	ldr	x0, [x0]
    12a0:	ldr	x4, [x0]
    12a4:	ldr	x0, [sp, #32]
    12a8:	ldr	x0, [x0, #224]
    12ac:	mov	x3, x0
    12b0:	ldr	w2, [sp, #108]
    12b4:	mov	w1, #0x0                   	// #0
    12b8:	mov	x0, #0x0                   	// #0
    12bc:	blr	x4
    12c0:	ldr	w0, [sp, #108]
    12c4:	ldr	x1, [sp, #40]
    12c8:	cmp	x1, x0
    12cc:	b.eq	143c <grub_mod_init-0x4c>  // b.none
    12d0:	ldr	w0, [sp, #108]
    12d4:	ldr	x1, [sp, #56]
    12d8:	add	x0, x1, x0
    12dc:	str	x0, [sp, #56]
    12e0:	ldr	w0, [sp, #108]
    12e4:	ldr	x1, [sp, #40]
    12e8:	sub	x0, x1, x0
    12ec:	str	x0, [sp, #40]
    12f0:	ldr	x0, [sp, #40]
    12f4:	lsr	x0, x0, #12
    12f8:	mov	x2, x0
    12fc:	ldr	x1, [sp, #56]
    1300:	ldr	x0, [sp, #32]
    1304:	bl	700 <grub_mod_init-0xd88>
    1308:	cmp	w0, #0x0
    130c:	b.eq	1328 <grub_mod_init-0x160>  // b.none
    1310:	adrp	x0, 0 <grub_mod_init-0x1488>
    1314:	add	x0, x0, #0x0
    1318:	ldr	x0, [x0]
    131c:	ldr	w0, [x0]
    1320:	str	w0, [sp, #124]
    1324:	b	1448 <grub_mod_init-0x40>
    1328:	ldr	x0, [sp, #40]
    132c:	and	x0, x0, #0xfffffffffffff000
    1330:	ldr	x1, [sp, #56]
    1334:	add	x0, x1, x0
    1338:	str	x0, [sp, #56]
    133c:	ldr	x0, [sp, #40]
    1340:	and	x0, x0, #0xfff
    1344:	str	x0, [sp, #40]
    1348:	ldr	x0, [sp, #40]
    134c:	cmp	x0, #0x0
    1350:	b.eq	1444 <grub_mod_init-0x44>  // b.none
    1354:	ldr	x0, [sp, #32]
    1358:	ldr	x0, [x0, #224]
    135c:	str	x0, [sp, #72]
    1360:	ldr	x0, [sp, #32]
    1364:	str	xzr, [x0, #224]
    1368:	ldr	x0, [sp, #32]
    136c:	ldr	x1, [x0, #8]
    1370:	ldr	x0, [sp, #32]
    1374:	ldr	w0, [x0, #208]
    1378:	add	w0, w0, #0x9
    137c:	lsl	x0, x1, x0
    1380:	str	w0, [sp, #68]
    1384:	ldr	x0, [sp, #32]
    1388:	ldr	x0, [x0, #48]
    138c:	ldr	x0, [x0, #56]
    1390:	mov	x2, #0x1                   	// #1
    1394:	mov	x1, x0
    1398:	ldr	x0, [sp, #32]
    139c:	bl	700 <grub_mod_init-0xd88>
    13a0:	cmp	w0, #0x0
    13a4:	b.eq	13c0 <grub_mod_init-0xc8>  // b.none
    13a8:	adrp	x0, 0 <grub_mod_init-0x1488>
    13ac:	add	x0, x0, #0x0
    13b0:	ldr	x0, [x0]
    13b4:	ldr	w0, [x0]
    13b8:	str	w0, [sp, #124]
    13bc:	b	1448 <grub_mod_init-0x40>
    13c0:	ldr	x0, [sp, #32]
    13c4:	ldr	x0, [x0, #48]
    13c8:	ldr	w1, [sp, #68]
    13cc:	str	w1, [x0, #48]
    13d0:	ldr	x0, [sp, #32]
    13d4:	ldr	x0, [x0, #48]
    13d8:	ldr	x0, [x0, #56]
    13dc:	ldr	x2, [sp, #40]
    13e0:	mov	x1, x0
    13e4:	ldr	x0, [sp, #56]
    13e8:	bl	0 <grub_mod_init-0x1488>
    13ec:	adrp	x0, 0 <grub_mod_init-0x1488>
    13f0:	add	x0, x0, #0x0
    13f4:	ldr	x0, [x0]
    13f8:	ldr	x0, [x0]
    13fc:	cmp	x0, #0x0
    1400:	b.eq	1444 <grub_mod_init-0x44>  // b.none
    1404:	ldr	x0, [sp, #72]
    1408:	cmp	x0, #0x0
    140c:	b.eq	1444 <grub_mod_init-0x44>  // b.none
    1410:	adrp	x0, 0 <grub_mod_init-0x1488>
    1414:	add	x0, x0, #0x0
    1418:	ldr	x0, [x0]
    141c:	ldr	x4, [x0]
    1420:	ldr	x0, [sp, #40]
    1424:	ldr	x3, [sp, #72]
    1428:	mov	w2, w0
    142c:	mov	w1, #0x0                   	// #0
    1430:	mov	x0, #0x0                   	// #0
    1434:	blr	x4
    1438:	b	1448 <grub_mod_init-0x40>
    143c:	nop
    1440:	b	1448 <grub_mod_init-0x40>
    1444:	nop
    1448:	ldr	x0, [sp, #32]
    144c:	ldr	x0, [x0, #216]
    1450:	cmp	x0, #0x0
    1454:	b.eq	1464 <grub_mod_init-0x24>  // b.none
    1458:	ldr	x0, [sp, #32]
    145c:	ldr	x0, [x0, #216]
    1460:	bl	0 <grub_free>
    1464:	ldr	w0, [sp, #124]
    1468:	ldr	x19, [sp, #16]
    146c:	ldp	x29, x30, [sp], #128
    1470:	ret
    1474:	nop
	...

0000000000001488 <grub_mod_init>:
    1488:	sub	sp, sp, #0x10
    148c:	str	x0, [sp, #8]
    1490:	adrp	x0, 0 <grub_mod_init-0x1488>
    1494:	add	x0, x0, #0x0
    1498:	ldr	x0, [x0]
    149c:	adrp	x1, 0 <grub_mod_init-0x1488>
    14a0:	add	x1, x1, #0x0
    14a4:	ldr	x1, [x1]
    14a8:	str	x1, [x0]
    14ac:	nop
    14b0:	add	sp, sp, #0x10
    14b4:	ret
	...

00000000000014c8 <grub_mod_fini>:
    14c8:	adrp	x0, 0 <grub_mod_init-0x1488>
    14cc:	add	x0, x0, #0x0
    14d0:	ldr	x0, [x0]
    14d4:	str	xzr, [x0]
    14d8:	nop
    14dc:	ret
	...
